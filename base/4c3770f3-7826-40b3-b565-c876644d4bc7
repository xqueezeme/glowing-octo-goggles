{
    "title": "Medusa: Fate's Game Ch. 07",
    "pages": [
        "~~Chimera~~\n\n\"We are in luck,\" he said. \"Gaia has provided.\"\n\nPinna and Medusa were up the moment the words were out his mouth. He waved them to sit back down, and he walked over to join them next to the satyr.\n\n\"Did you run into anyone?\" Bellerophontes said. \"Anyone out there that might be trouble?\"\n\n\"It is as you said. The villages are far from here, but I did see other ships approach nearby waters. It would seem other cities are using Paros as a bay for trade. We should be cautious if we decide to head West.\" He sat down, and opened his bag. It'd taken hours to find all the plants he would need: Gaia's tears, wind trappers, valaram, and some cat's tongue. Whatever names the humans used, he did not know or care; they were ignorant of what they could do with such bountiful green from Gaia's womb.\n\nHe set a piece of the long green down onto a rock. \"Unless Andromeda can find us and pursue us quickly\u2014\"\n\n\"She'll need time to fuel her magics, I figure, before she'll be hunting you down again,\" the dark Amazon said. How helpful she'd become in such a short time. His words must have cut her deep. Good. She deserved pain.\n\n\"Then Paros will hide us well enough for now. There are animals to hunt, fruit, fish.\" He said, half-talking to himself more than anything. He still needed food to fuel his recovery, but for now he would be fine. The satyr needed it more.\n\nAnd the satyr did deserve it. The bard had risked his life to save Medusa, violated his oath to the Fates, and had tackled a Fate's Child with his literal bare hands. To do something was one thing, to risk your life another. To do both with your bare hands was the giant's way, and for that, the satyr deserved his best efforts.\n\n\"What... what're you gonna do?\" Gallea said between groans.\n\n\"Treat your wounds. This will be painful.\"\n\nThe small creature coughed, and laughed. \"Of course.\"\n\nPinna put her husband's head on her lap, and held his chest with one hand, a horn with the other. Medusa took one of the man's hands as well, and held it to her collar under her chin. The two of them looked ready to burst with worry. Darian and Otrera, on the other hand, looked between each other and then to him with the eyes of hardened warriors; they expected the satyr's doom. And yet, neither of them had dealt with the pain Medusa had. The difference made him smile, but he buried it as he began his work.\n\nThey unwrapped his bandage, and cleaned them in boiled water while he prepared the ingredients. Gaia's tears had to be chewed; a giant's saliva was needed to break down the green. He put them into the wound, deep into it, where he knew the plant would break apart in the satyr's blood and mend the flesh within. It earned screams from the hoofed man, but Chimera ignored them. When he struggled, Chimera pinned his body with his other hand.\n\nPinna reached out to brace against his arm. The tiny satyr was no taller than his arm was long. \"Don't hurt\u2014\"\n\nHe frowned at her, and rumbled his annoyance. Sighing, she lowered her gaze, and sat down with her screaming husband's head on her lap. She reached for Gallea's hand, held it, and trembled with each pained noise.\n\nValaram and cat's tongue, he ground into powder against the rock. A lot of it. The man's wound was deep and had already started to swell with creeping death; it would take much of the two plants to keep the creeping death at bay, and let Gaia's tears work. Wind trappers were placed upon the wound, flat blades of grass, thick and prickly. They would not feel good against the skin, but they would remain fixed there, resistant to the shifting bandages that would pin them in place. Wind trappers would hasten the skin's healing, once blood touched it.\n\nGallea groaned, hollered, and squirmed through the process, but he could not move with the three of them holding him. For twenty minutes, the only sounds to be heard were his pain. But then, it was done.\n\n\"He's... going to be ok?\" Pinna said.\n\n\"He will be fine. In three days the wound will be closed and safe, but it will be several weeks before he should be allowed to move.\" A few weeks was probably enough time for the sorceress to renew her efforts to kill them. And after the last battle, it was unlikely the sorceress would repeat the mistake of underestimating their group. If Bellerophon's story of the sea creature was true, then such a force, or one of similar make, would be her next attempt.\n\n\"Th-thanks,\" Gallea said. \n\nThe small man's wife stroked his hair, patted his chest, and smiled wider than Chimera thought possible. Tears were in her eyes, and she was quivering.\n\n\"Thank you!\" Medusa slithered up to him, and threw her weight at him. He was a heavy, tall man, but Medusa had thirty feet of thick snake body behind her. She knocked him over, onto his ass, and wrapped her arms around him.\n\nHe froze. Her tiny human half struggled to wrap around his neck, thick as it was, but she managed, and she squeeze him while her snake hair nuzzled and kissed him with little forked tongues. With time, the serpent put her hands on his shoulder and raised herself up from him. She smiled and patted his chest. Tears were in her eyes as well.\n\n\"... you are welcome.\" He reached out to put his hands on her shoulders, but only to push her back to where she'd been before she pounced him. Despite removing her, she continued to smile at him with the eyes of a joyful child.\n\n\"Nearly... killed me... getting me there,\" Gallea said.\n\n\"Hush.\" The wife flicked her husband in the nose. \"We owe you Chimera. We owe you a lot.\"\n\nHe rumbled, got up, and started to walk off.\n\n\"Where you going?\" Darian said.\n\n\"For food. I must eat, and then I will gather provisions for you all.\" He didn't wait to hear what they had to say about it.\n\nBut he did manage a glance at the Amazon. She looked at him with a glare, bitterness apparent. He returned it, offering a silent snarl before he disappeared into the shadow.\n\nResentful assassin. That's what you called her, 'Chimera.' Awfully hypocritical of you, wasn't it? Isn't that why you're on this journey, after all? A chance to kill a god or two, for some revenge? Revenge for wiping out your tribe and family?\n\nYes, the similarities were obvious. Blatant. He knew his words were for her, and for him. His goals were trivial, his life meaningless, and he only continued to exist as a petty defiance against the wishes of the world.\n\nHe shook his head, and crouched low to the grass and brush as he crept through the foliage. In the night, the landscape was his to hunt; deer and the like would soon be his to devour. He'd make sure to catch some animals for the others as well.\n\nHe went higher. The karstic landscape meant there were rock cliffs, and hard, steep faces of rock he could climb. If he was careful, not even a pebble would know he'd stepped on them, and he could continue higher and higher. Above the forest and brush, the land was lit by the stars and the moon, and he could see for miles. Far out into the grasslands and near the shore, little dots of red marked the fires of villagers and vessels meant for cargo. They were closer than Chimera had let on, but he'd keep an ear open. If they approached, he would hide the group deeper into the canyon until it was safe.\n\nThe group. A single battle had changed much for them. Not only had they succeeded in their goal, but the joining threads of trust were forming. Gallea and Bellerophon, in particular, had proven themselves. He was happy he could save the fox's life in the battle, in return for saving his own, and the mischievous little horned creature's life thereafter. Perhaps the journey would not be a slog of guard dog duty for Medusa, but an actual journey, with conversation, and growth for those within.\n\nHe laughed. Birds launched from nearby trees, rodents vanished into the brush, and a few nearby deer bounced away. Damn it.\n\nClimbing down to resume the hunt, his thoughts drifted to the dark warrior. She'd cut him open until he was defeated, the first time they met, and it'd taken all his will to not break her legs when he got his hands on her; defying the grave of old friends was worth many deaths. But they needed her, and he had to admit, he admired the woman.\n\nAdmired? You called her out on her self-destructive idiocy. You knew Amazons seek the favor of Ares and you exploited that.\n\nDon't we all seek the favor of someone though? Isn't that the real reason you're on this journey? A little revenge, and a little companionship?\n\nHe clenched his jaw and focused, but even as he crept through the black of night, the Amazon danced through his mind. Skin darker than normal for a Greek, and despite her small size and thin body, she was a muscular, lean, strong woman. Fierce, and full of rage. She reminded him of fire.\n\nHe liked fire.\n\nHe shook his head again. There had been stories of giants and humans copulating, from long ago, when humans lived in the woods and plains with branches and animal skins for shelter. And the idea had some appeal. His mind wandered over the thought of the small Amazon, how full of confidence and ferociousness she was when she scaled his back, cut him open, defeated him. It delighted him that she'd taken him on so directly, unlike Bellerophon, who was content to take to the sky with wings and launch giant rocks at him from above.\n\nShe'd felt tough, strong, and tenacious in his hands. Such a tiny thing, the Amazon queen; it amazed him how so much power and beauty could be held in such a small container.\n\n\"Then you should devour her.\"\n\nHe rumbled, deep in his chest, and turned to face the beast.\n\nNight could not justify the darkness that grew upon him. Shadows turned solid black. The returning birds faded into muted chirps. The wind vanished.\n\nHis skin grew cold, but fire ran up his legs into his gut. Breathing became hard. His vision blurred, and the stars above became blended swirls of gray against the increasing onyx.\n\nNot again.\n\nFrom the shadows of tree and rock, enormous claws upon massive paws stepped into view. A snout and teeth followed them, yellow fur, and red eyes. Horns, a mane of dark gold, and huge muscles became visible, and before long, so too the beast circling him. The horned creature looked much like a lion, but colossal in size, and its head carried two coiling horns meant for a minotaur. Never were its limbs or body fully formed, always on the edge of blurring into the shadow mist that fell from its fur.\n\n\"She is our prisoner,\" he said to the beast.\n\nIt gnashed its teeth, hard, loud, and a splatter of saliva hit Chimera's waist.\n\n\"She cut you open. Defeated you. Get revenge. Hypocrite.\" The beast laughed, gnashed its drooling teeth once more, and stepped around in front of him. Blackness followed it like leashed fog, and as the beast circled him, the obsidian dripped from its body over the darkened grass.\n\n\"No.\"\n\n\"Yes.\"\n\nHe blinked, and the beast was no longer there. But a wisp of its edges danced on the side of his vision, and he turned to follow the giant predator as it moved with the wind that did not exist. A treetop, a boulder, in the darkness of bushes and cliffs, the cat melted into the air and reformed elsewhere.\n\n\"That is why you're here, isn't it?\" it said. \"You want revenge. You want violence against those who wrong you. She wronged you.\" The beast's voice was a guttural thing, growling, deep, vibrating. It did not move its mouth to speak; its voice came from its whole body.\n\n\"She did not. You know she\u2014\"\n\n\"She cut you open, 'Chimera.' She defied your home! She challenged your might and the might of your allies. Eat her. Devour her. Take her strength and meat into you.\" The predator dragged its huge claws along the rock it stood upon, and deep gouges broke open in their wake. \"Where is the animal hunger within you?\"\n\n\"She deserves life.\"\n\n\"For one to live, another must die. You are a predator! And you deny your instincts so you can play guard dog for these humans.\"\n\n\"Medusa\u2014\"\n\n\"Is a human in a monster's body. You waste your time with her.\"\n\n\"I waste my time with you!\"\n\nChimera jumped forward and reached for the beast, with both hands out to try and crush the monster's large lion skull in his grip. But the shadow creature moved between his fingers as black fog, and reformed behind him, with a snarling grin on his drooling animal chops.\n\n\"We had a deal,\" the monster said. \"Why not kill Bellerophontes? Trick Medusa, convince her he died from the humans. Eat him. The Amazon would thank you for it.\"\n\n\"No.\"\n\nThe beast lunged. Its claws slammed into his chest and sent him toppling. Heavy. The giant lion was as much muscle and mass as he was, and it pressed down on him with claws cutting into his body.\n\n\"You will give into your desires sooner or later, 'Chimera.' You always do.\"\n\n\"I will not! If for anything, because these humans will be my chance at revenge against the true enemy.\"\n\nThe beast snarled, drops of black dripping on his body, cold as ice. Its red eyes pierced the twilight, and as it glared down at him, the darkness surrounded and covered its gold fur until it started to blend into the obsidian of it all.\n\n\"You are a fool if you think their plan will let you taste vengeance. The gods are beyond your reach. Their precious humans are not. Bathe in their blood. Dance in it. Hypocrite. Liar.\" It faded away, black dripping through its form and blending into the gold of its fur and mane. Like a ghost, the image blurred into the night and over his body, until only its red eyes remained above him. They too faded, grinning, glaring at him.\n\nHe sat up. There were no marks on his chest. He looked to the boulder; no gouges there either. Sighing, he got up, and resumed the hunt.\n\n~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~\n\n~~Otrera~~\n\nShe really wished she was bigger, big like that huge beast of muscle, Chimera. Then she could break her bonds, squash 'Darian' in his sleep or something, and get back to the mainland. She'd been reduced to a prisoner. Her! Queen Otrera of the Amazons. A gods damn prisoner.\n\nIf only Chimera hadn't proved to be so damn resilient. If only Gallea hadn't saved Medusa. If only she hadn't lost to Bellerophon. It was a bad trap; they hadn't expected Chimera to survive four undead tearing into him. They hadn't expected a fourth person to jump in either.\n\nBut she knew she was lying to herself. She'd lost to Bellerophon, again. And even worse, she wasn't angry about that. She wanted to be, she wanted to find that fire, grab hold of it, and let it carry her to the fury she needed to kill him. But it was gone. Every time she imagined killing him, Chimera's deep, earthy voice cut through the fantasy and ripped it apart.\n\nA resentful assassin, who'd never earn Ares's favor. A disgrace. Petty. The beast had read her like an open book. All her disillusions of avenging her clan, scattered to the wind by a cold shot of truth right to her fucking face, in front of the man she hated the most.\n\n\"Ares,\" she said.\n\n\"What was that?\" Bellerophon turned to her. The two of them sat by the fire, waiting for the guard dog to return with food.\n\nShe shrugged. \"Nothing.\"\n\nAres. The god of war had not once looked her way. Any Amazon's way. For over a hundred years her kind had fought battles, and as clear superiors to their foes, but for some reason, their wars were always losses. A storm, a famine, a sickness, the winds and seas themselves fought against the Amazons at every turn. In all their battles, they made names for themselves, true, but not once earned them with victory. Not a single victory to her name, or any Amazon's name!\n\nAnd Chimera knew it. That giant was too damn smart, smarter than Bellerophon or Medusa, and probably smarter than the satyrs that were apparently chronicling her actions. She glared at Gallea and Pinna across the fire, but they barely noticed. Pinna was too busy being happy and occasionally bursting into fits of joy and tears and kisses for her recovering husband. Otrera could understand that. She couldn't understand how the handsome woman had appeared out of thin air. \n\nBut, she was in no position to demand an answer. All she could do was hold what little information she had available secret, until she had her last shot at revenge.\n\nShe lay back down, and stared up at the stars again. Ares would never favor her. After hearing it laid out like that, she knew her unending efforts to appease the god of war were pointless. If not pointless, she'd certainly not figured out what her god wanted of her. Chimera had seen straight into her heart.\n\nChimera. The giant was... giant. Such a wall of muscle and size, and enough scars to outnumber the whole of her clan's and then more. Dark, deep eyes.\n\nShe shook her head. Stop trying to wrap your legs around anything that walks, and instead try thinking about yourself! Introspection. You're a prisoner, and that's as good a time as any to question your whole life and all your beliefs and motivations.\n\nShe laughed. Bellerophon quirked a brow at her, but she paid him no heed. But, again her mind wandered to the big guy, the weird, dead, horned cat he wore like a cape, and the size of his hands. She'd fit right into those hands like a gods damn toy. For all her new power as a Fate's Child, if the guard dog had wanted to, he could have ripped off her limbs like petals on a flower.\n\nThe thought was oddly arousing. He reminded her of the werewolf she'd enjoyed for a couple months, big and strong and brawny. But the werewolf had been at least half human, the giant was not. The giant was an eater of humans! She knew the stories about the Chimera, roaming Greece, devouring and killing. She saw it first hand when he stopped her and the soldiers from Tiryns from catching Bellerophon.\n\nShe shivered. It'd taken a lot of courage to jump his back and start stabbing.\n\nA couple cluck sounds made her raise her head. Speak of devils, Chimera stepped around the cliff face they were camped against, and stepped into the firelight. He had a deer in a single hand, as if the creature weighed nothing, and he laid it down beside him as he sat by the fire. Blood was on his beard, but the deer seemed whole.\n\n\"I have eaten something else,\" he said, reading her mind. \"Where is Medusa?\"\n\nBellerophon nodded. \"She's hunting something down for herself. You know she prefers to eat alone. She'll get something and then she'll be set for a week.\"\n\n\"Week?\" Otrera said.\n\n\"Yeah. She's half-snake, after all. She'll find a deer or boar, eat it whole, and she's good to go.\" He shrugged, as if it were the most normal thing in the world.\n\nHer transformation, she must have used it for hunting and eating as well. The sight of her transformed state had been bone chilling, with its enormous snake hair, huge snake face and snake fangs! But it'd all been warped in a strange way, hints of human shape still remained, but distorted by layers of... demon. Truly the Medusa of legend, a hideous monster capable of turning people to stone with a gaze. And more than that, given what Otrera saw. The woman could probably defeat Chimera in a fight when she was transformed.\n\n\"She's a strange woman,\" Otrera said. \"One minute she seems like a timid girl. The next she's a gigantic monster.\" Bellerophon and Chimera both frowned at her, and she shrugged at them. It did make her laugh though. \"Protective of her much?\"\n\n\"She is stronger than either of us,\" Bellerophon said, and Chimera nodded. \"But... nevermind.\" \n\nNevermind? Tempting to push that, but she let it go, and sat back up to look at the deer.\n\n\"Someone going to skin that?\"\n\nBellerophon shrugged again. \"I would but skinning it sitting down isn't really go\u2014\"\n\n\"I'll do it.\"\n\nThe three of them turned to Pinna, and then past her to the other satyr. He was sleeping, without a cough or fit to be had. Chimera's medicine was a fucking miracle; she needed to learn how to use that.",
        "\"I uh... it's a deer,\" Bellerophon said. \"You\u2014\"\n\n\"I'll be fine. I'm not a deer.\" Rolling her eyes up, she hopped over to them, reached down, and lifted the buck. The satyr was a strong woman, and her furry legs and deer hooves made Otrera smirk.\n\nShe'd had sex with a satyr once. A man, a singer, who liked to hang out near the Amazons due to some kink for strong women. He'd gotten in trouble with them more than once, and nearly lost a limb on several occasions for spying. But he had a quick tongue, witty, and a good voice. A very quick tongue at that. Otrera chuckled. His leg fur had felt nice on her thighs.\n\nHer chuckle faded into a sigh. Thinking about sex all the damn time, despite her current predicament. How long had it been since anyone touched her? Those nymphs had been perfect, and that opportunity was ripped away, leaving her with an ache. Always thinking with your thighs, Otrera.\n\nPinna quirked a brow at her, but shrugged, and carried the deer away from the camp, knife in hand. Satyrs ate only plants and similar, but Pinna showed no trouble cutting the deer open and removing the insides. Soon, its innards were buried away from the camp site, and the woman came back over to hang the deer by the horns from a nearby branch, and start cutting skin from the meat.\n\n\"That doesn't bother you?\" Otrera said.\n\n\"Why would preparing meat bother me?\"\n\n\"... because satyrs don't eat meat. I assumed your kind preferred to avoid cutting into flesh?\"\n\nPinna shrugged again, and made a point of twisting the deer a little so Otrera could see the white tissue split apart by the knife, cleaving fur from muscle.\n\n\"We don't eat meat, true. But what satyr doesn't live for the company of others? Most learn to prepare meals for humans and centaurs.\" Cut cut cut. Skin and fur peeled away, and Pinna was unfazed. \"Gallea and I started as wandering musicians and storytellers. We weren't born into the Fates' service.\"\n\n\"How did you come into their service?\" Bellerophon said. If he was trying to hide the venom in his voice, he didn't do a very good job. He must have really hated the sisters.\n\nPinna frowned at him, and resumed cutting. \"If you must know, we were at an inn when a raiding group of barbarian centaurs started a fight. We were caught in the middle, and the Fates offered us a way out. It was either that or risk getting killed, so we made the obvious choice.\"\n\nBellerophon nodded. Chimera said nothing. In fact, when Otrera looked to him and caught his gaze, the tall beast looked away, like he didn't want to make eye contact. Considering how much the giant seemed to love staring people down, that was surprising.\n\n\"You sure you don't want any?\" Pinna said, looking at Chimera. \"I can roast a\u2014\"\n\n\"I am full.\" The giant looked into the fire, body still as stone, and breath as slow as the tide. Otrera tried to imagine the beast digging his mouth into a deer, raw, tearing through the hide and getting at the flesh underneath. It wasn't hard to picture.\n\n\"I know, it's just... I owe you. You didn't have to...\"\n\nChimera frowned at the woman, but Bellerophon held up a hand and dismissed the big guard dog. \n\n\"Gallea has proven himself,\" the small warrior said. \"I feel like an ass for being such an ass to him. And Chimera does too, I imagine.\"\n\nRumbling, Chimera nodded.\n\n\"You had reason to suspect us,\" Pinna said. \"So... bygones?\"\n\nThe satyr had bounce in her step, life to her voice, and a smile she couldn't quite shake. Otrera looked her up and down from horn to hoof, and back to the two men. So they hadn't been on good terms before.\n\n\"Not quite,\" Bellerophon said. \"Gallea's proven himself, you haven't. I saw you appear out of thin air Pinna.\"\n\nThe satyr grunted and turned back to the deer. \"You did.\"\n\n\"And I'm sure the Fates control however you do that, or something. But my question is: would you have stepped in to save Medusa?\"\n\nOtrera winced and looked between Pinna and Bellerophon. Way to ruin an olive branch.\n\n\"... no.\"\n\nBellerophon nodded. \"And would you for Chimera? After today?\"\n\n\"... yes.\"\n\nHe nodded. \"Good enough. Not looking for any heroism from you or Gallea, Pinna. Just looking for a little trust. In all honesty, thankful as I am for Gallea stepping in, it shouldn't have had to happen, and I don't expect it in the future. Shit is... shit is\u2014\"\n\n\"Dangerous.\" She sighed, and started cutting into the meat. \"And it's not our fight. Gallea is just an old fool caught up in his old stories.\" She laughed, and started removing one of the deer's legs. \"I guess after telling them for so long, he wanted to be part of one.\"\n\nOtrera groaned. \"You all should have a club. Some place you can sit around, eat breakfast, and bitch and whine and make social connections and evolve as people.\" The three of them turned to her, each with a single brow raised, and she chuckled at them. \"Listen to yourselves. Where's the discipline here? You're not warriors, you're just a bunch of whiny teenagers and their dog.\"\n\nMaybe if she pissed them off enough, they'd put her out of her misery. It was true though; five minutes of this garbage in an Amazon tribe would have lead to a firm beating and a dozen drills.\n\nBellerophon picked up a twig and threw it at her. \"Hey, I\u2014\"\n\nA massive hand wrapped itself around her throat, and picked her up. She hadn't seen it coming, eyes locked on Bellerophon and ready to throw curses at him, but before she knew it Chimera had her up in the air in front of him. He didn't get up from the ground, still sitting on his ass, but even on his ass her toes only barely reached the ground as he held her up by her neck and jaw alone. Gods damn he was fucking massive.\n\nHe leaned in, brought his face in close until she could feel the heat of his colossal body, and rumbled deep in his chest until she could feel the vibration.\n\n\"You try my patience,\" he said. The depth of the sound made her shiver. She could actually feel the vibrations of his voice through his arm.\n\n\"Don't eat her, Chimera. We need her.\"\n\n\"You don't need all of her.\" His other hand reached out for her leg, and she froze as his iron grip and gargantuan fingers wrapped the muscles of her calf. Memories of the man he'd torn in half ran through her mind, and the chunk of leg he'd taken a bite of.\n\nShe didn't want to put out of her misery like that!\n\n\"Chimera, put her down!\"\n\nAh thank the gods, the snake woman. Medusa came back from the dark \u2014 without the tongue clucks of course, no discipline \u2014 and slithered over to the giant. The big guy frowned at Otrera, then at Medusa, but did as asked. He set her down again, closer to him this time; probably so he could eat her if he saw the opening.\n\n\"Otrera, I'm gone for a few hours and you're already tearing my family apart.\" The serpent frowned at her too, then coiled by the fire closer to 'Darian,' the sleeping Gallea, and the carving Pinna.\n\n\"You expect your prisoner to stay quiet and just accept capture?\" she said.\n\n\"No, I... I mean, after what Darian said happened to you, and now, I... We are going to let her go, right?\" Medusa said. She looked at Darian, head tilting, and a couple dozen snakes on her head tilting as well. \"We're not going to kill her or anything, right? After she tellsss usss what we need to know.\"\n\nBellerophon shook his head. \"I didn't plan on it.\"\n\nWhat?\n\n\"... what? I've tried to kill you, twice.\"\n\n\"And if I was me, back from before I met Medusa, I'd kill you for it. But I'm trying to not be that guy anymore.\" The small warrior sighed, reached over to his pack, and grabbed his helmet. The obsidian and silver piece was beautiful, the white crest of hair more so, and he ran his fingers along its edges with heavy fingers. \"I had a choice. Revenge, or let it go. I'm giving 'let it go' a try.\" With that, he tossed the helmet back, with no care or concern for its condition.\n\n\"Easy for you to say,\" she said. \"Not so easy for everyone.\"\n\n\"That includes my plans for Zeus.\" He threw a frown her way, but it melted away the moment Medusa slithered over to him, and coiled up closer. Green snake scales shimmered in the firelight, and 'Darian' leaned against them as comfortably as leaning back against his favorite chair.\n\n\"We all have reasons for revenge,\" the serpent said. \"But... that's not what thisss is about, and revenge doesn't work.\"\n\nRevenge doesn't work. Otrera frowned, hard enough she could feel her nose scrunch up, but said no more about it. If her hands and legs weren't tied \u2014 gods damn the bindings were strong \u2014 she'd have smacked the serpent. Revenge wasn't about working or not working. Revenge was about... something deeper. Wasn't it?\n\nThe giant rumbled, but said nothing either. He glanced Otrera's way though, and when she raised her eyes to look at the wall of muscle and scars, he looked away again, back to the fire. Something was on his mind.\n\nNone of them had a retort. Medusa's words hung in the air and silenced them, and Otrera couldn't help but smirk. The serpent spoke like a naive mom, insistent that everyone could get along. It was refreshing.\n\nA strange family of misfits. Maybe she wouldn't hate it so much after all.\n\n~~~~~~~~~~~~~~~~~\n\nThe next few days went by quietly. \n\nEveryone sat around, chatted, and ate. Otrera tried her best to find things to hate about the dysfunctional band of idiocy, but every time she got close, something happened to wipe it away.\n\nPinna and Darian \u2014 oh gods she was using his new name \u2014 would nearly get into an argument, and Medusa would settle them with a kind word. Chimera would get surly about something, and Darian would chat with him about something like fighting techniques, and it'd cheer him right up. Gallea looked a lot better, still bed ridden but able to talk; his wounds were healing so damn fast, for a regular mortal, thanks to Chimera's medicine.\n\nAnd they treated her with kindness too, for the most part. Darian did everything in his power to avoid talking with her directly, like a guilty child, but at least that meant all was quiet on that front. Pinna and Gallea were indifferent to her, and Medusa kept trying to be her new friend, desperate to calm the waters. Chimera was a different matter.\n\n\"Undo my leg bindings.\"\n\n\"No.\"\n\n\"Undo my leg bindings.\"\n\n\"No.\"\n\n\"I swear to the gods I will cut out your tongue and eat it you miserable pile of shit. I'm not going anywhere. Where would I even go? At least let me walk around!\"\n\nThe sun was high, the heat was too, and everyone was cranky. Except for Medusa of course, who lay out in the sun and its blistering waves on purpose with her snake half, while she kept her human half to the shade. Other than her, everyone else hid in the shadow of the cliff face, and fanned themselves with bits of brush.\n\n\"You are a pest,\" Chimera said. The giant didn't seem bothered by the heat, which made sense considering the sort of locale his kin considered home. \n\nBut she was, and she wiggled herself across the grass to kick her bound feet at his side. It didn't work, bound as they were, and all her small weight managed to do was push herself away from the sitting giant anyway.\n\n\"Hey, I made a deal with Da \u2014 Bellerophon. You have my word I won't try and kill him, until at least after we settle the deal.\"\n\nChimera frowned down at her, but looked to Medusa. Such a guard dog.\n\n\"It's just her legs. I think it'll be fine,\" the serpent said.\n\n\"Yeah well,\" Darian said, \"it's not your neck she's after, it's mine.\" The small warrior looked her way, scratched his short beard with his fingers, and shrugged. \"But I believe her.\"\n\nFinally, progress.\n\nChimera rumbled a groan, reached out for her legs, and lifted her up to drop her between his knees; just one of his legs was bigger than all of her. He was not gentle, and she groaned too when her back hit the dirt. But the giant did as she requested, and undid the bindings on her ankles.\n\nShe got up, stretched one leg away from the other, then vice versa, and moaned. Tight muscles, sitting on her ass for days, it was all horrible. She kicked out at the air a few times to make sure her legs still worked, and hopped back as her balance wavered. Hands tied behind her back were still a problem, but at least she could move around.\n\n\"Thanks.\"\n\nThey all blinked at her.\n\n\"What, I can't say thank you?\"\n\n\"You could say we're a little surprised,\" Darian said.\n\n\"You said you're not going to kill me. And I can walk again. Fuck me, it's almost as if this isn't going to end horribly.\" She laughed when she said it of course. There was no way it wouldn't end horribly. But it was nice to entertain the delusion. \"I'm going for a walk. I imagine someone will want to guard me.\"\n\nMedusa looked to Chimera, and the giant rumbled. Every time, his voice vibrated the earth at their feet, deep enough to shake the ground. Like chunks of the Earth talking with each other. He got up, and followed her.\n\nNow he was her guard dog. She smirked at him, a telling smirk, a smirk so blatant she might as well have been holding up a sign: I'm going to make you regret capturing me. And if her only way of doing that was being snide and juvenile, she was ok with that. It was their job to be the heroes, to be disciplined, save the world and all that, not hers.\n\nNot hers? Her powers were given to her by the sacrifice of innocent people. Maybe innocent, maybe not, considering Andromeda's hate. So many unanswered questions. How could she have blindly followed Andromeda's orders? Owing your life to someone doesn't mean owing your soul.\n\nShe drifted between trees, bushes, and various rocks until the two of them were out in the open. Paros was a beautiful island, and the forest and cliffs opened up into a nice grassland with some wide births of smooth ground. She fell into step with the land, picked a random direction, and started walking.\n\n\"Where do you walk to?\" the beast said. He followed behind her, one eye on her, one eye on the path ahead. Made sense; he'd have to be careful of being spotted, tall as he was.\n\n\"Just want to get away from the group. And I knew you'd be the one they sent to watch me.\"\n\n\"... did you wish to speak to me?\"\n\n\"Yes.\" She shook her head a bit to get the sweaty strands of hair off of her face. Too damn hot. \"I wanted to ask about you.\"\n\n\"Me? Why?\"\n\n\"Because you're the last of your kind. Andromeda told me about the giants, after my run in with you outside Tiryns. How they warred against the gods for a long time. How they were wiped out, over a thousand years ago. How you're the last of your kind.\" She kicked at a nearby rock, and sent it soaring. Fate's Child strength was still new to her, and while she couldn't break her bonds with it, she could kick a pebble into the sky. \"Sounds a little familiar.\"\n\n\"You dare compare your situation to mine, Amazon?\"\n\nWhen she looked back over her shoulder, Chimera made eye contact with her only for a second before looking away. The length of his rugged beard and hair, and his hard edges made all his expressions harsh, and serious, but every so often she caught a glimpse of distracted eyes.\n\n\"I do. And... and I wanted to ask you something. About Ares.\"\n\nThe beast grumbled, but kept walking behind her. \"Ask.\"\n\n\"Have you met him?\"\n\n\"I have.\"\n\nShe stopped, turned around, and looked up at the colossal man. This was going to be a painful conversation, but she needed to hear it. The giant was the only person she could get a real answer from; all the Greeks would only repeat the mantra: believe in the gods. Mindless peons.\n\n\"... what was he like?\"\n\nThe giant scoffed, folded his arms across his bare chest, and looked to the sea.\n\n\"The same as the other gods, concerned only with the prosperity of their chosen interest. Like insects, they chase it with mindlessness. You humans consider the gods intelligent, wise, debating views and pulling the levers of the world from Olympus. But they are mindless things that do all in their power to further their beliefs. And Ares wants war. He cares not for anything but war. The slaughter of the battlefield, the clash of sword and shield between cities and countries is all he cares for.\" He shrugged, and stepped a little closer to her. \"You dedicated your life to a vile, putrid mound of filth, incapable of anything other than the pursuit of his delights.\"\n\nOuch.\n\nShe lowered her head, weight around her throat heavy enough to choke her, and she turned around. Start walking, and don't let it break you.\n\n\"And I won't appease him on a vengeance quest. I... I shouldn't want to appease him, should I?\"\n\nShe'd had her suspicions. A life time of war, and Ares had never blessed the Amazons, visited them, sent them a sign, anything. But then, when she'd dug into what history she could in a visit to Athens, she'd found that Ares had done little for anyone.\n\nAnd why would he? If the god of war showed favoritism, it could end further wars from even happening. And if Ares wanted war for war's sake, slaughter and battle, it was in his interest to have all the states and countries fighting for his eye, without him ever giving it.\n\nBellerophontes was right to forsake the gods.\n\nShe looked back over her shoulder. Chimera was looking at her again, but he didn't break eye contact. His eyes looked as heavy as her own, and his frown had faded away into the long curls of his beard. The weird animal pelt he wore, with its lion arms tied tight around his neck, hung at his back and not over his head, so she could see his dark hair reaching his shoulders. Everything seemed heavier. It was the same look she had, after the war.\n\n\"Even without Ares's favor, becoming a petty assassin is... pretty low of me.\" She dragged herself up a steep hill of grass. Not easy with her arms tied behind her, but doable, and with careful footing, she brought herself up over the top of the grassy mound. \"Damned if I do, damned if I don't. Then what am I supposed to do now, hmm guard dog? Nothing left for\u2014\"\n\nChimera came up beside her, and pushed her. It only took a single finger, and a tiny shove from the colossal man to send her over, and she fell down onto her side, shoulder into the grass.\n\n\"What the fuck!\"\n\n\"You are supposed to do whatever you wish. You are no more bound to a ridiculous notion of honor or revenge or god-fearing servitude as anyone else. What do you want to do?\" He stepped over to her, and put his foot down on her body. She was only wearing a tunic and sandals, there was nothing to keep the insane weight of the giant from pressing down against her skin. His foot was almost as long and wide as her torso.\n\n\"And what the fuck do I want to do? Guard dog duty like you? I\u2014\" Her voice cut off hard as the giant pressed down.\n\n\"I do not know! I am seeking meaning in a world that has nothing left for me, Amazon. You think your situation horrible? Comparable? I should crush you.\" And he did, a little. More of his weight pushed down against her, hard enough to make her tremble, and unable to breathe. \"I am more alone than you can fathom. So I made a choice, and I embarked on this journey, both for a distant, slim chance at revenge, but also for something, someone to exist for. You may\u2014\"\n\nHe raised his eyes, looked down the way they had been walking, and froze. At least he lifted enough of his weight so she could breath again. But when she turned her head, she froze too.\n\nNot far out, a path swerved through the rolling, gentle hills of grass. She hadn't noticed them when coming up the hill, and especially not after Chimera had knocked her over. But sure enough, there was a path through the grass of flattened dirt that disappeared and reappeared with each hill crest. And over the nearest crest, a cart had appeared. A man was pulling the cart, its contents covered in blankets, and his eyes on the road.\n\nOr were on the road. He looked up, and froze right along with the two of them. No one moved or said a thing. At least for a few seconds.",
        "\"G-g-giant!\" The old fellow dropped the cart's front handle hard enough Otrera saw the contents bounce. He threw up his arms, started screaming, and ran far too fast for a man his age. But sure enough, in only a matter of seconds, he was a shrinking spec on the horizon.\n\nChimera grumbled, took his foot off of Otrera's body, and walked toward the cart.\n\n\"Great,\" she said. \"Spotted. Good thing Paros is just a trading city, or we'd have the local militia on our asses with spears.\" Local militia were idiots, but at least they listened, if the ones in Tiryns were any indication. In a different circumstance, she'd have hoped for rescue, but a tied up woman was nothing more than a slave, and slavery was as common as wine in Greece.\n\nShe rolled over, got to her knees, up onto her feet \u2014 not so easy with hands tied behind her \u2014 and walked after the beast.\n\nChimera stopped at the cart, grabbed the blanket and tossed it aside.\n\n\"Jars.\"\n\n\"Jars?\" She came up next to him, looked into the cart, and smiled.\n\nA lot of amphora jars. Common indeed.\n\n~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~\n\n~~Medusa~~\n\n\"Pegasus was so beautiful!\"\n\nShe lay atop Darian's body, her hips between his knees, her head on his stomach, and him lying in the shade. With her head turned, she watched the grass and trees nearby, and drifted her hands up and down his body. Every so often, her hands drifted up to his, and she netted their fingers together, only to put his fingers onto her hair so she could resume exploring his chest with hers, while his were left to comb her snakes. When his fingers each took one of her snakes in between the knuckles, and smoothed out their tangles with gentle strokes, she melted onto him.\n\n\"He was. That ring on his snout was... that looked painful. I was going to make a run for it, in the mountain, but Otrera stopped me.\" The poor man seemed so worried for his friend.\n\n\"We'll get him back! Don't worry.\" She adjusted herself away from his broken leg; still bad, but he was able to walk on it, and she didn't want to slow down the healing. \"He was so... white! And shiny, and his wings were huge. So huge! I thought they'd be more like, a bird's size, relatively.\"\n\n\"Well, he is a horse. Wings got to be big enough to handle a horse. Birds weigh nothing at all.\"\n\n\"Yeah... and... and I could see his awareness in his eyesss. I thought he'd be more like a loyal dog who's been your best friend. But he ssseemed intelligent?\" The horse's dark eyes, the way he stomped his hooves, it seemed far less like a horse, far more like a person trying to talk.\n\nThe way blood had soaked his coat was the worst. Perseus would have to pay for the horrible things he did to Pegasus! And let alone what else.\n\n\"He's a mythical creature, whatever that means.\" Darian laughed and massaged one of her snakes between finger and thumb under its jaw. \"He helped me win fights, helped me with some king and queenly types. He uh... well I mean, he is a horse, so he had his choice of mares.\"\n\nShe raised her head and blinked at him. He winked. Before she knew it, she was in fits of laughter, and she slid up further on his body to put her forehead on his sternum while she chuckled.\n\nA couple of tongue clucks made her lift her head. Chimera and Otrera returned, the Amazon still with bound hands, and the giant with a huge blanket as a bag. Bag?\n\n\"Some poor fool saw Chimera,\" the queen said, and she sat down by the dead fire. \"He ran away of course. But he was just an old man, and I doubt anyone will believe him.\" The sun was only starting to set; they had a couple hours of sunlight left at least. \n\n\"What's with the bag then?\" Pinna asked.\n\nOtrera smirked, nodded toward Chimera, and the giant set the bag down \u2014 gently, Medusa noticed \u2014 by the fire. And one by one, he removed several tall jars.\n\nPinna was on them in an instant. She grabbed one, unplugged the top, and smelled.\n\n\"... wine. You stole their wine!\"\n\n\"You would rather I have left it out for Apollo or whatnot?\" Otrera said.\n\n\"No, no I suppose not.\"\n\nAnd then the satyr grinned. She hopped over to her bag, and then to Darian's bag, and Gallea and Medusa's, and from each she removed their cups. A second later, each cup was full, and she gave everyone one.\n\n\"Finally!\" Gallea said. As if a new life had been poured into the injured fellow, Gallea motioned with wide eyes and smiling lips as Pinna put the cup into his hands. \"Oh thank you Dionysus! Gods be praised... or damned, whatever. I need a drink!\"\n\nChimera rumbled, and shook his head. \"Only a little, satyr. Too much and you may prevent the medicine from healing you.\"\n\n\"Ah... gods damn you then, you damn bastard. Got my hopes up.\" Frowning, but smiling too, Gallea took a sip. \"Nothing tastes quite like stolen wine.\"\n\nOf course that left Otrera with none, or hand to drink even if she did. Frowning down at her cup, Medusa got up, straightened her back and shoulders, and slithered over to Otrera.\n\n\"Here.\"\n\n\"... you going to help me drink it?\" The Amazon frowned at her with ice in her eyes and a jaw hard as stone.\n\nMedusa smiled though, and shrugged. Why was this woman so hard, and mean? They'd all had hard lives, that was no reason for them to hate each other. And the Amazon seemed like a good woman, if a little war obsessed, and revenge obsessed.\n\n\"I will,\" Chimera said.\n\nEveryone in the party looked at him like he'd choked on a chicken. Otrera looked at him like he was crazy too! He shrugged, same as Medusa, and reached out for the cup.\n\nShe put it in his hand, and smiled so big she could feel the muscles in her cheeks cramp. People were getting along! All it took was a few people nearly dying and capturing one of the enemy to get people talking, and sharing, and drinking. She giggled, and slithered over to the jars.\n\n\"Besides!\" she said. \"I haven't drank wine in so long! And I'm so big now, I'll need more than a cup.\" Snickering, she grabbed one of the jars, and slithered back over to Darian.\n\n\"You plan on getting drunk?\" he said.\n\n\"Yes. Yes I am. I am a grown woman. I am older than all of you except Chimera. I have been sober for far too long. I want to get drunk.\" She unplugged the jar, raised it to her lips, and took a sip. Honey! She tasted honey.\n\n\"Well... if we're all going to be drinking,\" Pinna said.\n\n\"Hey! If I can't get drunk, you can't get drunk!\" Gallea reached out for Pinna's leg, and she hopped away, only to down the cup and smirk at her husband.\n\n\"This your punishment for getting stabbed.\"\n\nGallea rolled his eyes, took another sip, but before he could take another, Pinna scooped up his cup and drank that too.\n\n\"You'll keep an eye on Otrera for us, won't you Chimera?\" Medusa said. She took another gulp, and another, and another. So many years to make up for! She could tell as she drank it that it wasn't something her snake body really wanted, but damn it, she didn't care.\n\n\"Am I not allowed to get drunk?\" the giant said.\n\nMedusa raised a brow. Everyone did. \"I'm sorry! I just assumed... can you even get drunk? Do giants like wine?\"\n\nAnd for one of the very few times ever, Chimera smiled, and chuckled. A normal sounding laugh, without any sinister edge, or even a hungry eye.\n\n\"No. Do not worry.\" He held up his cup to Otrera's lips, and tilted it for her. The queen groaned, rolled her eyes, but took a sip anyway.\n\nDarian too. He sat up, back to the flat cliff face of rock, and drank his cup down. Pinna was quick with the refills, and she giggled madly as she topped them off.\n\n\"I think we're all a little stressed, and using wine as an excuse to unwind,\" Darian said, \"and I am completely down for this plan. Life has sucked immensely for all of us \u2014 some more than others.\" He nodded in Otrera's direction, and she rolled her eyes. \"I vote we get drunk. Except Gallea. Cause he got stabbed.\"\n\nThe prone satyr threw a twig at Darian, and hit him square in the face. Medusa was sure her man could have caught it, or blocked it, but he laughed instead, and took another gulp.\n\n\"You guys know you're on a quest to defeat a sorceress powerful enough to defy the Fates, right? And Perseus is an amazing fighter, and Fate's Child at that. You could get attacked by her tomorrow!\" Like a whip, Otrera cut the air with a snap of the tongue. But the words fell flat when she took yet another gulp of wine at the beckoning of the giant next to her.\n\n\"Think we're safe,\" Darian said. \"I doubt she could follow us with her magic while we were on the ship. It is Charon's ship after all. And it took her how long to find me, when I was working in that quarry? We still need to be careful, but I think we're good for some time \u2014 Medusa!\"\n\n\"Wh-what? What?\" Medusa set down the second jar. She'd hoped no one noticed she'd already start drinking a second one, but Darian was keeping an eye on her.\n\n\"You're going to be sick! You've already drank enough to put a normal man out for the night.\"\n\n\"Well, it's a good thing that I'm bigger than even Chimera!\" She frowned at him, found a twig to throw at him too, and started drinking the second jar. Once she'd had a couple of gulps, she tried to slither over to Darian, but overshot one of her swerves and fell down. The jar didn't break \u2014 thank the gods \u2014 but she frowned at the ground and pushed herself up. \"... I've never used my tail... when tipsssy. This is tipsy right? It's been so long! I can't remember.\" The ground must have become uneven, or changed when she wasn't looking.\n\n\"... maybe a little more than tipsy.\" Pinna hopped up to her and took her jar away. \"You can have more in a bit.\"\n\nMedusa frowned at Pinna, but nodded. Pinna knew best. Pinna was smart, a handsome woman, and nice! With a giggle, Medusa sat up, reached out, and hugged Pinna.\n\n\"You're so tiny,\" she said, and she hugged the little satyr tighter.\n\n\"H-hey. Be careful, we're all smaller than you.\"\n\n\"I'm careful! I'm careful with Darian all the time, and every night.\" \n\nThat got the satyrs chuckling. She chuckled too, slithered over to coil up beside Darian \u2014 successfully this time \u2014 and reached out with her tail to grab another jar. It didn't taste all that good, but good enough! Good enough to drink and get drunk and all that good stuff she wasn't entirely sure she could remember doing. So when Pinna frowned at her, she stuck her forked tongue out at her friend.\n\n\"So, Darian,\" the Amazon said, and she said her lover's name with a sarcastic tone that made Medusa frown. \"You said you washed up on Medusa's island, but not how you two became an item.\"\n\n\"Well!\" Medusa said, and she waved a hand in the air. A little too far though, and it hit poor Darian in the face. She hissed an apology, and ruffled his hair as she prepared the grand tale. \"I was in the temple, being attacked by more warriorsss. Four at once, the most I've ever fought. And I was losing. But! But Darian showed up, and right out of the shadowsss, he killed the remaining two, and bandaged my wound, and... and... he talked to me! Firsssst... man in... so long.\"\n\nShe put the jar down, slid her human half closer to Darian, and wrapped her arms around him. All hers.\n\n\"You saved her?\" Otrera said. \"Why?\"\n\n\"She was just defending herself, and... and I had to help her. It was four zealots coming to kill someone who didn't deserve it. I had to do something.\" The tiny man shrugged, then started to squirm when Medusa hugged him tighter.\n\n\"How nice of you.\" Otrera rolled her eyes, took another sip of her giant-served drink, and frowned some more at Darian.\n\nToo much frowning! Especially at her Darian.\n\n\"You are sssuch a mean woman,\" Medusa said. She stuck out her tongue, and flicked the long red forked thing up and down. \"You don't have to be ssso hard!\"\n\n\"Hard?\"\n\n\"Hard. Women can be soft. Sssoft and warm and inviting and pleasant!\" She pulled Darian toward her so he was leaning into her body. With her behind him, it set his head between her breasts and against the soft fabric of her chest wrap.\n\nA giggle drew their eyes. Pinna was gulping down another cup, and as she poured herself a new one, Medusa could see the satyr was starting to have trouble standing straight.\n\n\"She's right. I mean I get it, I really do Otrera. Amazon Queen? Hard life full of training and discipline, right?\" With a nod, Pinna hopped over to Chimera and the prisoner, and helped refill Otrera's drink too. \"You could learn to soften up. I bet you fuck rough and hard too.\"\n\n\"Hey, fuck you, I\u2014\"\n\nMedusa giggled. The girls were doing all the talking! Chimera and Darian, even Gallea were raising brows at the conversation. So, she reached over for her jar, pulled it into Darian's lap \u2014 since he was sitting against her belly \u2014 and pulled it up his body so she could sit it on his shoulder, and lean it down to drink more.\n\nDarian leaned his head out from around the base of the amphora. \"Come on ladies, she's already our prisoner, no need to insult her.\"\n\n\"Not insulting!\" Pinna squatted down next to the Amazon, and combed her hair over her horns. \"Just making friends with our prisoner the best way possible: getting drunk and insulting each other \u2014 ah shit, that is insulting. Screw it, insults for everyone. Medusa, you are way too gentle and naive.\"\n\n\"Hey!\" She found a twig and threw it. Or at least that was the plan, but her hand only managed to grab the tip, and her aim was possessed by demons. The twig flew off to the side and into Chimera; he did not blink. \"I'm not naive! Just... people should be nicer to each other!\"\n\nA thought bounced through her head, and before she could catch it, it was on her lips.\n\n\"Pinna! You and Gallea, how did you meet? Details!\"\n\nGallea sat up on his elbows. \"Well, we\u2014\" But the poor satyr suffered the fate of Chimera, and received a twig to the face.\n\nTwigs were everywhere!\n\n\"Hush you,\" Pinna said. \"He likes to think he seduced me. We were both young, both got involved with some centaurs, got involved in some tribe-on-tribe politics. So to get some good dirt on the other tribe, he,\" she pointed at Gallea for good measure, \"sneaked into our camp, and was caught. I helped him out, we got along... we both ran away from a lot of angry centaurs.\" Her face turned red, and she gulped down the rest of her cup. \"Fear and thrills and daring escapes can make for a powerful aphrodisiac.\"\n\n\"Sounds like me seducing you,\" her husband said.\n\n\"Please! You were staring at my ass the whole time we were on the run. You're not very subtle dear.\"\n\nMedusa squeaked a giggle, took another gulp, and set the jar aside. Now she was feeling woozy, and things weren't quite so clear. She tried moving her tail, but it didn't slither right; it sort of pushed and shoved the ground instead. Frustrated, she leaned over Darian to try and put her hands on his shoulders to balance herself, but missed. Hands fell down over him, and she toppled onto him. His cup went up and into the grass, and she whined. No, she wasted it!\n\nPinna laughed. Darian and Gallea laughed. She laughed too, she couldn't help it. Otrera chuckled, but was quick to cover it up. Not quick enough! Medusa pointed a finger at the queen, and slithered over to her. Chimera was in the way though, and she had to slither over his legs to get to her, which of course meant she had to lean on him and hit her shoulder against him and stuff. He was too big. But eventually, she was between him and the Amazon, and she smiled down at the dark-skinned little woman.\n\n\"I think you have a nice side,\" Medusa said. \"You're not all hard all over. You brought us this gift! Ssstolen gift, but ssssstill.\"\n\n\"Well, if you're not going to kill me.\" The queen shrugged and motioned to Darian with a nod. \"And, this may be the wine talking, but your boy toy seems genuinely sorry about everything that happened. And...\" She looked to the big giant behind Medusa, before shrugging again and looking into the dead fire pit. \"And maybe it'd be a good idea to let things go. Maybe.\"\n\n\"Yesss!\" Medusa squealed and hugged the Amazon. Otrera squirmed and wriggled, but Medusa didn't care. She squashed the strong little thing against her bosom with the best of hugs. \"Now if only Chimera would too. He is ssso boring.\"\n\nThe big guy rumbled, even frowned a little at her, and she giggled at him before looking back to Otrera and setting the girl back down from the hug.\n\nThe Amazon chuckled, and smirked at Darian. \"I've slept on pillows with a tenth the padding of this woman's rack. That why you hooked up with her? She is stacked.\"\n\nMedusa gasped and hugged her arms across her breasts. \"No! No no... right Darian?\"\n\nHer lover looked away and started whistling. Whistling! And everyone started laughing too, even Otrera.\n\nWell! If people were going to get mean, she could be mean too.\n\n\"You're just jealous!\" There, that oughta show her.\n\n\"Jealous? I'm surprised you don't just fall over on your face every time you start slithering.\"\n\nPinna snorted on her drink, caught drinking while laughing.\n\n\"I can ssslither jussst fine!\" And to prove her perfect slithering skills, she slithered back toward Darian. And again, Chimera was in her way! Did he move? He was too big, and she hit him with her shoulder again, leaned on him a bit too, and started making her way around the dead fire pit to Darian again. Once she got to him, she coiled around him, but she couldn't get her coils to line up right, and every attempt to settle into a nice circle ended with layers of her snake body not lining up where she wanted them to. Eventually, she gave up, and lay herself atop Darian's lap.\n\n\"I do think she's drunk,\" her man said, and he smiled down at her as he put a hand on her chin.\n\n\"I'm fine! And don't change the ssssubject!\" She sat up quick, pushed Darian's hand away, and turned to face Otrera. \"And you! Jealousss! And you!\" It took a few tries, but she managed to point her finger straight at Pinna, and squinted at her friend. \"I bet you do all sssorts of things to Gallea. Sssoft, womanly things!\"\n\nFor a moment, Medusa was sure she'd bested Pinna in whatever game they'd created, but Pinna just laughed, shrugged, and hopped back over next to her husband.\n\n\"Oh, is that how you want to play it?\" she said. \"Well we know Otrera likes to fuck werewolves, so that's a point for her. I personally am a big fan of inviting a stranger to join Gallea and me.\"\n\nEveryone stared.\n\n\"What? We all have our kinks.\" She sat beside Gallea and put her legs over his, hooves down and knees bent to her legs never touched his own. Her husband was grinning. \"Gallea and I are in a a loving relationship, married, so sometimes we like to find someone who's single and have fun. Usually a girl, sometimes a guy, someone whose night we can make better.\"\n\nSometimes a guy? Another guy? Two guys? Darian and another man, touching her scales and her snake hair and her breasts and her insides? Medusa blushed until her face burned.\n\n\"Yeah, sharing your bed with two or three other people is definitely a fun night.\" The Amazon motioned with her head, and Chimera acquiesced with another dip of the cup for her lips. \"And I can see it! A couple of satyrs, roaming the land, spreading stories, and maybe taking an intrigued stranger to their bed for the night. Satyrs are great fucks.\"\n\nPinna and Gallea nodded and chuckled, like it was a general truth. But Medusa put both her hands up to her blushing cheeks and stared at the two women. On one hand, she was delighted to hear the other two women not only take charge of the conversation, but also display a sexual side she'd never guessed. On the other hand, she felt out of place. They were so open about it, so blunt, even Pinna! She'd expected men to be crude about sex, but the men were barely saying a thing. Chimera had removed a bit steel and flint from their bags, and was working on restarting the fire as the sun set. Darian was caressing her knuckles, but otherwise he was content to grin and listen to the conversation. Gallea chipped in occasionally, only for his wife to steal the spotlight.",
        "\"Exactly. Not long before Gallea and I were sent to Medusa's island, we met a young man at an inn, exhausted from working his family's farm. Strapping man, big shoulders. I did all sorts of things to him while Gallea had me from behind. Mmm.\"\n\nUnfair! Medusa frowned and squeezed Darian's unsuspecting hand.\n\n\"I like to use my breastsss!\" Everyone went silent and looked at her. It was her turn to turn heads! \"Otrera teased me about them, but... but I like them. I like that Darian likesss them. I like holding him against them and letting hum suckle and massage them. And... and it feels really good.\"\n\nIn her mind, hazy as it was, she'd pictured telling a sexual but classy tale about how her curvy figure had seduced the small, lean warrior, and how she comforted his hard body against her soft skin every night. What she got was a child's attempt at admitting a sexual kink.\n\nEveryone else took a gulp of their drink. She would too, if she still had one.\n\nA chuckle drew their attention; Pinna was the first one to make a noise. She lowered her cup from her lips and smiled at Medusa.\n\n\"That does sound really perfect.\"\n\nOtrera, who finished what must have been her fifth cup \u2014 Chimera was going to make her sick \u2014 looked to Pinna.\n\n\"How so? She's got big tits so she pampers him with them?\"\n\n\"Yeah, look at her. She's sweet and soft and Bell \u2014 Darian is smarmy and cocky and\u2014\"\n\n\"Hey!\"\n\n\"You know you are. And our wild, arrogant hero finds a home in the loving embrace of someone tender and gentle. Only by being torn from his throne of fame and worship does Bellerophontes find true happiness in the arms of another.\" Pinna rolled over Gallea, tripped on his legs, fell onto her knees in front of her pack, and started digging. Her hands were a blur of movement to Medusa, nothing held still the right way anymore, and Pinna echoed Medusa's frustration with a groan when she failed to find whatever she was looking for. \"I have to write this down!\"\n\nIt was a really sweet story, and Medusa beamed at the sound of it. She hooked her arms around Darian's neck, hard enough to choke, and hugged him. The poor man had to tap her arm a few times when he started squirming before she let him breathe.\n\n\"That's us! She's talking about usss!\" she said.\n\n\"Yeah... she is.\" The small warrior looked up at her, head squashed against her bosom, and smiled. Not only smiled, but nudged one of her breasts with his nose, and winked.\n\nLike a fire in her veins, everything got hot at once. Everything.\n\nIn a normal state of mind, she'd have waited for everyone to go to bed before finding a sneaky way to proposition Darian. But tonight was a different night! She stood up, grabbed Darian's hands, and started dragging him away from the group, literally.\n\n\"Um... Medusa?\" he said.\n\n\"We're going to have ssssssex! With these extra people, we don't have it as often as we used to. Ssso, sssex! Chimera, watch Otrera for ussss.\"\n\nThe poor man was trapped in her hands, dragging along the grass on his butt. She'd have picked him up, but his leg wasn't fully healed and she didn't want to hurt him. Better to drag him. And helpless as he was, he looked between her and the group, something of a grin and surprise on his face.\n\nShe didn't want to wait any longer! Once they were twenty feet away, she set Darian down against a tree, and reached for this tunic. The knot of the shoulder was normally such a simple thing to undo, but tonight, it was an extremely complicated knot. It denied her fingers and defied her efforts for minutes.\n\n\"You uh... need help with that?\" he said.\n\n\"Sshh! I got it. I got it.\" Her fingers weren't listening either, as if they had minds of their own. But after a couple minutes, she managed to get the knot apart, and she slid off the man's tunic. \"I like your body. Musssscles are nice.\" She put her hands against his hard chest and stomach, and teased the indentions of his lean body with her fingertips. \"And you're not big like Chimera.\"\n\n\"You know most guys would be insulted at being called small.\"\n\n\"Yessss but you know I like you. I like that I can fit you in my coilsss. Or...\" A smile sneaked onto her lips. She reached down, and undid his loincloth. Another infuriating knot that had grown more complex since she'd last undone it, but soon the man was naked.\n\nShe tossed off her chest wrap \u2014 screw undoing the knot, she slipped it up over her head. And with her heavy breasts hanging below her, she leaned over Darian, and rested her weight on her palms against his shoulders.\n\n\"You appear to be quite drunk,\" he said.\n\n\"You're drunk!\"\n\n\"Not so drunk I already forgot the rest of the group is only twenty feet away.\"\n\nShe stuck her head out to the side to look past the tree, toward the group. No one was coming. And clearly, twenty feet was enough that they wouldn't be able to hear them. Obviously!\n\nSafe from prying ears, she slid her hands down her man's arms until they found the grass beside his legs. Face to face with Darian, she leaned in close and nudged her lips against his. Gentle kisses, or at least that was the plan, but every time she tried to line up a nice kiss, she planted her nose into his cheek.\n\n\"I think Otrera's a good persssson,\" she said. \"Angry, but a good perssson. When she gives usss her condition for that informations ssstuff, you should try and do whatever she assskssssss.\" Her tongue was getting longer, and refused to stay inside her mouth.\n\n\"What if she asks to take my head?\"\n\nBah, silly question. Otrera would never do that! ... she hoped.\n\n\"You'll be fine!\" She finally managed to give him a proper kiss on the lips, before she took one hand to guide his, and placed it underneath one of her breasts. With him sitting against a tree, and her leaning over him from the front, her breasts were left to dangle, heavy teardrops that spilled over the man's palm and fingers with their size. \"You don't jussst... like me for my breastssss, right?\"\n\n\"I'd be lying if I said it wasn't part of the reason I love you.\" He blinked. She blinked. He slowly removed his hand from her body and brought it to his lips. \"I... uh...\"\n\n\"Wasss that the wine talking?\" She leaned in closer and rested her forehead against his. \"Those are dangerousss wordsss to sssay to a woman.\" Don't be the wine don't be the wine don't be the wine.\n\n\"Wine loosened a lot of tongues tonight, but... yeah, I do love you. I\u2014\"\n\nShe tried to kiss him again, hard and fast! But she missed again, and hit her nose against his lips. Why was everything so hard now? She had to grip his shoulders to steady herself before she could start kissing him again, and again, and some more.\n\n\"I'll have you know,\" she said, \"that... I am very drunk. But I wanted to sssay that too, and... and I couldn't, cause things, and people, and more things. And we were ssssad about Pegasssusss. But...\" When she pulled back, Darian was smiling, that perfect beautiful handsome great smile he'd somehow mastered to godliness. And when he put his hands on her shoulders and returned her kisses, she melted against him for more.\n\nThey loved each other. She smiled in the kiss, pulled away, and giggled.\n\n\"You love me.\"\n\nThe small warrior grinned, nodded, and slid his hands up to comb her snake hair with gentle fingers.\n\n\"Not just for your breasts either.\"\n\nMore giggles. She reached for his hands and put them underneath her again, to hold her breasts as they dangled beneath her torso.\n\n\"You can love them too... in fact.\" She put her palms down onto the grass on both sides of him, and walked her hands a foot away from him so she had room to lower herself down between his legs. The grass was soft under her, gentle against her stomach and belly scales. Darian on the other hand was very hard, both his muscles and the erection that was pointing up at her.\n\nGiggling and unable to stop, she got comfortable between his knees while staying nice and close to his body. She took his butt in both hands, and pulled his lower body a little closer to her so he was leaning back against the tree. The angle and proximity placed her breasts against his pelvis and hips, and she had to take a few moments to adjust her heavy bosom to sit it comfortably along his body. But sure enough, she found a nice groove where she could lay between his knees, and rest her breasts between his hips.\n\nHis member, still pointed up and at a bit of angle toward his chest, was caught between her breasts. With how squished everything was, her between his knees, body close to his, and her breasts being pressed together by his thighs and the groove of his pelvis, only the tip of his member was visible between the soft nest of her bosom.\n\nThe angle also meant her breasts were raised up closer to her face, and with a grin, she leaned down, and wrapped the tip of his cock in her lips.\n\n\"Oh... gods,\" he said.\n\nShe grinned around the head of his cock, and reached around her breasts with a hand to pull down on his skin. Soon his glans was exposed, and she raised her eyes to look up at Darian as she let her long tongue out to caress the fleshy purple and pink of the swollen flesh. Moaning, she caressed the underside of his cock's head with gentle licks \u2014 after a couple of attempts to get her tongue to aim correctly.\n\nThis was fun! She'd never tried this, never tried setting his girth between her breasts to see what fun options were available. And now, lying down with her elbows on the grass around his hips, she found she had some she wanted to try. She scootched her body down further, so her torso lowered while her breasts remained squished against Darian's pelvis. Like this, she managed to slip the whole of Darian's glans into her mouth, and she worked her lips up and down along the base edge of his cock's swollen tip. \n\nDarian slid his hands up her arms and shoulders, along the back of her neck, and combed his fingers into her hair once more. His groans were delicious, and not exactly quiet. Wine was indeed loosening all their tongues, and he moaned openly as she suckled and licked.\n\n\"I'm going to...\"\n\nShe raised her head. \"What? Already?\"\n\nShe barely had time to get the words out before a warm gush of liquid splashed against her neck. Thick white coated her collar and dripped down her pale skin before splitting and spreading over the mounds of her breasts. Then another, this one not as high, gushed over her sternum. The next couple rose only a inch, but it was enough for them to coat the inner sides of her breasts, and pool his cum down the center valley.\n\nWhite covered her cleavage.\n\n\"Sorry, sorry I... it's been a few days since we've had sex, and... yeah.\" The poor man put a hand on her shoulder, while the other reached up to scratch his chin. He was blushing, embarrassed.\n\nBut he was also still hard. She looked down at the pool of warmth that dripped down the crease between her breasts, and how much of her bosom was now dripping with a rather copious amount of cum.\n\n\"You ssssoaked me...\" Her whole body smelled of sex. Smelled of him. The snakes on her head drifted down around her shoulders, and licked the air to taste the smell of body and arousal.\n\nWith her elbows still pressed to the ground outside his hips, she pushed her hands in, against the outside of her breasts, and pressed her breasts together. Cum trickled down over her nipples, down the valley of her torso, and along her stomach. Some of it even reached her fingers, where they were gripping the overwhelming mounds of her breasts, until white was between her fingertips.\n\nAnd she started to use her breasts. She pressed them together in a gentle rhythm, worked them a couple inches back and forth against Darian's abs and pelvis, and massaged his hard length against her soft skin. With his warm fluid coating her breasts and the valley between them, his girth was free to slide back and forth between the pillows, and she shivered at the sensation of his cock rubbing against her skin. She couldn't help but take the opportunity to stroke her swollen, puffy nipples in her palms as she used her hands and wrists to keep her breasts together.\n\nDarian started groaning again. The sound of his voice, deep sounds coming from his small body, sent tingles down her spine and down the length of her snake body. She inched more of her snake body forward until the tip of her tail was against the small of Darian's back, between him and the tree he was leaning against. To her delight, Darian reached down to help pull more of her tail along, so he was leaning back against her tail instead of the tree, all while she continued to massage her breasts against him.\n\nAnd for herself. Her breasts always grew sensitive during sex, so sensitive that to touch her nipples, engorged as they were, sent waves of bliss into her core and down to her spine when she caressed them. Her waist wrap was wet with her juices. But Darian could take care of that when it was her turn; for now, she wanted to watch him cum on her. She wanted him on her skin.\n\nBut the man had just cum. Working him up to a second orgasm was taking time, and she took a moment to relax her wrists.\n\n\"That... feels... looks... amazing,\" he said.\n\n\"Good. We should... do thisss... more often.\" Seeing his pleasure and amazement written all over his face so blatantly was intoxicating.\n\nShe slid herself a little further away, leaned down, and ran her tongue up along the underside of his cock, from bottom to top. A couple of kisses for his glans too. It didn't taste good, but at the same time, being high on sexual need \u2014 and drunk \u2014 made the whole mess of cum and sweat delicious. It wasn't about taste, it was about seeing his eyes roll up in bliss when she suckled on his cock, and feeling the vibrations of his moans when she pushed her breasts together again.\n\nDarian's breathing reduced to pants. His hands reached out for her shoulders again, and he held onto her as she massaged his girth. It flexed toward his belly, and she slid a finger along the tip to guide it back in between her breasts, before she trapped it there with more pressure. The wetness kept everything sliding, and she giggled at the weird mixture of arousal and frustration at trying to keep his cock between her breasts as she slid them back and forth along his lower abdomen.\n\nHe started to cum again. Rather than gushing spurts, slow waves of it came out of him, drooling down the underside his ripe flesh between twitches of his member. Each twitch earned a small thrust of his hips forward, and she giggled all the more as she continued to work her breasts against him. They were more than big enough to completely bury and hide his cock with a little positioning, and she hid the whole length of it inside her cleavage. More warm liquid flowed into the bed of softness she'd created for him, and she quivered at the heat of it sliding down her sternum and along her belly.\n\nFinally, she let go of her breasts, and let his cock fall flat to his abs under its weight. Her fingers refused to stop teasing her nipples though, and she caressed them with drops of his cum on her fingertips.\n\n\"We... always make such a messsss,\" she said.\n\n\"We do.\"\n\nGiggling, she put her wet hands onto his shoulders, and picked herself up, just a foot higher. Her breasts dangled underneath her, and this time, cum coated them. She quivered as several drops of the warm liquid trickled down her belly to her navel, and better still, rivers of the thick fluid started to drift down the underside of her breasts with gravity. A strand of his thick cum still connected one of her breasts to the man's cock. With one hand, she wrapped his length in her grip, slid her fingers up to the tip, and massaged the cum around his cock until the strand was connected to her finger instead. When she placed the hand against her breast, and spread his cum over her skin, Darian moaned.\n\nHe outright jaw-dropped when she straightened herself up, one hand still on his shoulder, pushed her breast up to her chin, leaned down, and pulled the nipple into her mouth. Immediate sparks went through her, and she let her tongue out to glide along her engorged, soaked areola to lick up more spots of cum that clung to her nipple. She mewled into her skin at the spark of pleasure that hit her. Better yet was how the man before her went quiet, and stared with wide eyes as she did.\n\nShe definitely wanted to do this more often.\n\n~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~\n\n~~Otrera~~\n\nAwkward. She look at Pinna, then to Gallea, and the two of them shrugged. It's not like they couldn't hear Medusa, or still see bits of her tail flopped lazily along the grass of the hidden canyon. The sound of flesh on flesh, rustling, and moans and groans were louder than the fire Chimera had just started.\n\nPinna was blushing more and more. The satyr looked between Gallea and Otrera, and back a few times more.\n\n\"So, Otrera. What are you going to do once we release you? Assuming you honor your word and tell us where Andromeda is getting her sacrifices, and all that.\" Pinna sloshed her drink around some more, looked down at the cup, raised to take a gulp \u2014 but didn't. With a sigh, she set the cup down. \"Anymore and I know I'll be vomiting it up later.\"\n\n\"I don't know what I'm going to do.\" The Amazon let herself fall back and lay in the grass. With the sun setting, the cooling breeze was a pleasant contrast to the hot day they'd all just suffered. \"All I had left was an insane quest from an insane woman, giving me a second chance at all the things I thought I wanted.\" She laughed, but quietly. For some reason, she didn't want to interrupt Medusa and 'Darian.' \"Gods, she's going to get so many people killed.\"\n\nAnd when all your hopes... and dreams... come crashing down around you, Otrera... Amazon Queen, I'll be there... help you. With me... can make something of the mess of bone and blood Andromeda... will create.\n\nIce dripped down her spine.\n\n\"And you feel bad about that?\"\n\n\"Of course I feel\u2014\" When her eyes met Pinna's, she stopped herself. The satyr was grinning at her. \"What?\"\n\n\"You're going to help us.\"\n\n\"... excuse me?\"\n\n\"You're going to help us. You feel bad.\"\n\n\"I don't\u2014\"\n\n\"You feel bad about how you got the power of a Fate's Child. You feel bad about what Andromeda's doing. You're a warrior without a cause, desperate to find something to believe in.\" The satyr hopped over to her, stood over her, and gave a little cocky wave. \"The story writes itself.\"\n\n\"Fuck your stories.\"\n\nShe sat up, and jumped up. Pinna hopped away back to Gallea, giggling the whole time. Drunk as Tartarus, the satyr sat back down by Gallea, legs draped over his legs perpendicular to him.\n\n\"Give me one thing you'd rather do,\" Pinna said. \"Tell me one thing you'd rather be doing than taking down Andromeda and Perseus. They're going to kill the Fates and sacrifice lives to do it. They brought you into their service against your will.\"\n\n\"It...\" It was against her will. She'd awoken from her long sleep, and her servitude had just been assumed. Because of course she'd give it, she owed them her life.\n\nBut she didn't owe them her soul.\n\nUgh. She shook her head and started pacing by the fire. Chimera, and now Pinna, were poking holes in her life choices like parchment. Worst part was that she agreed with them.\n\nWith a sigh, she walked down the path Medusa had dragged off Darian. She needed to say something.\n\nBut once she'd crossed ten feet, she stopped. Medusa was lying between Darian's legs, and the man was leaning back against her scales and a tree. He also had his hands in her hair, while the woman was rubbing her ridiculously huge breasts against his lower abdomen. Cum was everywhere.\n\nMedusa leaned in closer, letting her hanging breasts drag along his chest, and she started kissing him.\n\n\"I love you,\" she said. \"And... and more love talk, later. Lotsss of love talk, and romance, and hugging, and tendernesssss. But now it's my turn!\" With a giggle \u2014 the woman was a giggler when drunk apparently \u2014 she rolled onto her back beside her lover, and started massaging her breasts. The snake woman moaned and mewled as she made a mess of herself, massaging Darien's cum into her body.",
        "Otrera bit her lip, and crouched low. The plan was to interrupt the sex, not watch. But gods damn it, she was so damn horny. For days now! And Medusa was proving to be just as much a sex addict as the nymphs. Considering the woman's history, it was a surprise.\n\nBut not an unwelcome one. Otrera licked the insides of her lips, and watched as Darian slid up beside Medusa, and removed the waist wrap from her hips. The woman was absolutely hairless; she didn't even have eyebrows, but a spattering of tiny green scales where eyebrows would be. Her pale skin looked so damn silky smooth, soft, and her giant tits were flattened against her chest with their weight.\n\nShe gulped. Darian put his lips onto Medusa's, and started to kiss her. Every so often, Otrera caught a glimpse of Medusa's snake tongue sneak out to taste the man's lips, while her snake hair reached out to nuzzle his hair, as if looking for fellow snakes. Otrera's eyes drifted down to the new skin Darian exposed though, and she had to suppress a groan of need when he sank his fingers into Medusa's pussy. The Amazon hadn't really known what to expect from what was below Medusa's waist, but it seemed human enough above the scales. Except for being pointed outward from her body instead of down between legs, her sex looked normal.\n\nSeconds later, the serpent was cumming. Any attempt Medusa made at being quiet was gone. She whimpered and mewled and squeaked as Darian pumped her insides until fluids were coming out of her in a mess of what must have been an absurdly strong orgasm. Otrera didn't know if Medusa was always such a horny creature, or just when drunk, but Darian barely had to do a thing and the woman was soaking him in her juices.\n\nThis was all a bad idea. She could tell him later. Wincing, she stuck to the darkening shadows, and walked back to the fire to Chimera. She definitely didn't need to see that display.\n\nShe kicked the ground, groaned and whined, and walked the forest edge in the opposite direction of Medusa. One misstep and she'd fall flat on her face, but she didn't care anymore. Fuck them for keeping her tied, she gave them her word! They let a man-eating beast run around free, but not her? The insult only made the fact she was aroused as all Tartarus worse. She could still hear them fucking, moaning, filling the night air with sex.\n\nGods, Medusa was stacked though. She knew the girl was curvy when she saw her, but seeing those huge tits hanging out was a bit of a surprise. More of the surprise was seeing how the woman liked using them. Stop thinking about it! Stop thinking about her breasts on his body, covered in his cum.\n\nHer thighs were on gods damn fire. She considered jumping into the sea; the cold water might be enough to douse her arousal. But with arms still bound behind her, it'd be a bad idea. She was a prisoner, after all. Chimera was already up and ready to follow her, but she didn't go far, only twenty feet from the fire.\n\nShe turned to look for Pinna and Gallea, but they were gone. Considering Gallea was not to be moved, that was weird. She stepped closer to where the two had been, and stuck her head around a tree.\n\nSure enough, Pinna had done the same thing. She'd dragged away the sleeping roll Gallea was lying on, and taken him behind a bush. Unlike Medusa though, Pinna was straddling Gallea's face, facing away from his body, looking down. Gallea had quite the view then, looking up the now naked woman's body from between her furry deer legs to her human stomach, breasts, and smiling face.\n\n\"Slowly,\" she said, \"you're injured. So go slow. I'll take care of you after.\"\n\nIt was a position the wife seemed quite comfortable in apparently. She leaned forward, put her hands against the grass, and settled herself onto Gallea's mouth. Her moans were immediate, and her hips slid back and forth in a subtle motion. Very comfortable.\n\nThe blonde satyr and her husband were both naked, and damn it, they were hot. Satyrs always were.\n\nEveryone, everywhere, in all of Greece and beyond, was fucking someone every gods damn night, except her! She sneaked away, and walked back out into more of an open area. Chimera followed behind her, and she groaned while rolling her eyes.\n\nOnce they were a good fifty feet away from the fire, with some trees and a bit of cliff and hill between her and all the sex, she leaned back against another protrusion of flat stone, and looked out over the rolling hills toward the sea. The sun was set, its edges just blurs against the sky, while the moon was already over the horizon to the East, and it glistened over the water. The swirling mixture of color and darkening night was quite beautiful.\n\n\"Gods I need to get laid.\"\n\n~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~\n\n~~Darian~~\n\nHe managed to take a peek at Otrera sneaking away as Medusa squirmed underneath his arm. For a moment, he thought she'd ruin their fun, maybe start yelling, or just straight up attack him. But instead, the woman had stuck around to watch. If she were sober she'd probably have realized she wasn't exactly well hidden, but instead, the Amazon had stuck around to watch him finger his rather drunk and aroused love to orgasm.\n\nThe queen was lonely. Lonely and horny. He knew that feeling.\n\nBut, hazy brain and naked woman distracted him, and his eyes fell from the leaving Amazon back down to the serpent against him. She was whimpering, mewling, and massaging her breasts while trying to keep her eyes open. They closed each time he sank his fingers to the knuckle inside her, and curled them up toward her belly as he reached in as deep as he could into her insides for her deep spot. Then he pulled his fingers out a couples inches and did the same, pressing against her g-spot. The different spots of tight, hot, soaked flesh each invoked different reactions from the beautiful monster, different moans, and he enjoyed them all.\n\nAnd if he hadn't just cum twice, he'd be hard again at the sight of how she played with herself, squeezed her breasts, caught her large nipples in her palms, and massaged his cum into her skin. Seeing her whimper and caressing herself, rubbing his fluids over her body, was amazing and entrancing.\n\nHe fingered her harder, hard enough to make her hips raise and butt bounce against the grass with each slap of his fingers up against her insides.\n\nShe gasped, and reached out to grab his wrist. \"W-w-wait... sssslow... down...\" \n\nHe did no such thing. He leaned in, put his lips on hers, and grinned into the kiss. But he couldn't look away for long; he wanted to see her body shake. Her hips went up and down with his hand, and her enormous cum-soaked breasts, heavy and pressed to her chest, jiggled with the harsh fingering.\n\nHer liquids started to leak out of her. Warm, inviting, the splashing fluids coated his fingers as he drew them out of her with each stroke of his arm. Her juices dripped down over her hips, down her scales, and up along her belly. They were both going to have to take a dip in the sea the moment they were done, but for now he ignored the mess, and continued to finger her through her orgasm.\n\nAfter a squeak-filled thirty seconds, he stopped. Medusa collapsed, let go out his wrists, and set her hands on her stomach as her head rolled side to side in slow, heavy motions. She struggled to open her eyes, and he smirked at the sound of her short pants.\n\n\"We'll need to get wine more often,\" he said.\n\n\"I... it... I drank enough to kill three men.\" Her mouth hung open, tongue dangling on her words, and her massive snaked fangs exposed.\n\n\"True, it'll be expensive. But if this is how you react to wine...\" He slipped his fingers out of her quivering pussy, and slid them up to her breasts. They were partially flattened with their weight against her ribs, and pulled to the sides, but were still mountains of softness that he teased and caressed with his dripping fingertips. \"It'll be worth it.\" His cum still filled the valley between her breasts, and he ran his fingers through it before easing his fingers from one nipple to the other. Unable to stop himself, he cupped the weight of one of her breasts in his palm, slid his fingers under it, and let the huge mound spill over his palm, wrist, and digits.\n\nHer whole body was trembling.\n\n\"It'sss your... fault...\" \n\n\"My fault? I'm pretty sure it's the wine.\" Chuckling, he sneaked his hand back down to her pink lips, and sank his fingers knuckles deep into her once again. She was still quivering, so he kept his play slow, gentle, and coaxed more whimpers from her sensitive body.\n\n\"You... ssso handssssome.\"\n\n\"Lots of men are handsome.\"\n\n\"You're... sssweet to me, and no one elssse.\"\n\n\"That's because I love you. It's part of the job description.\" He gave her a quick peck on the lips before raising his head enough to watch.\n\nWatching her cum made his insides warm in ways he couldn't put his finger on, or at least, couldn't before. He knew what it was now, but the idea was so foreign and simple he had trouble believing it. But gods, the sight of the beautiful serpent in orgasm made him so damn happy. He wanted to please her. He wanted to do everything he could to make her happy. He'd never known that feeling before, and he grinned to himself at the thought.\n\n\"Love me.\" She giggled between pants, face red, body quivering.\n\nHer giggles faded away to whimpers when he started to finger her hard once more. Her tight insides fought to squeeze on his digits, and he had to work against them to keep pressing up toward her belly hard enough to lift her scaly butt off the grass. Soon, more of her cum joined the mess, and Medusa hugged her chest as she shivered against him. Gushing cum soaked his fingers until it spilled off of her pelvis and hips, and the amazing creature moaned loud enough there was no doubt the rest of the group could hear her.\n\nGetting drunk really brought out her sexual side. She was already a sexual creature, who came with more bliss and fluids than any woman he'd ever been with. But now, everything was soaked.\n\nAfter another minute of enjoying her whimpers and mewls, he finally stopped. Medusa panted, doing her best to get air into her lungs, and he leaned down over her forehead to plant kisses. Snake hair greeted him, and he wiggled his nose at the tickling their licks gave.\n\n\"We definitely need a dip in the sea.\"\n\n\"Then... give me a minute... and I'll drag you.\"\n\nHe laughed, lowered his lips, and kissed her ear through the maze of snakes her hair presented.\n\n\"I love you.\"\n\nA part of him screamed about the future, about the gods, about the Fates, about things he should worry about. But with a belly and head full of wine, at least he could stop worrying for the night, forget about Philonoe, and just enjoy happiness."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "blowjob",
        "breast worship",
        "large breasts",
        "cum on breasts",
        "greek mythology",
        "nonhuman romance",
        "monster girl",
        "breast sex",
        "fantasy"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/medusa-fates-game-ch-07"
}