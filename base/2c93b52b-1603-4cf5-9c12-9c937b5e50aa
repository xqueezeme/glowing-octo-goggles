{
    "title": "Abby and the CEO Ch. 05",
    "pages": [
        "CHAPTER 5: SHARING\n\nI had just agreed to being Mr. Cornell's Personal Assistant despite not having the courage to apply for it and followed that with bringing Mrs. Cornell to her first girl-girl orgasm.\n\nMr. Cornell rose from the couch where he had been holding his wife while she orgasmed on my mouth, tongue, and fingers. I stood with him, leaning over to give her a kiss on the lips before gathering up a couple of the glasses and joining him at the little bar in the living room.\n\n\"Thank you, Abby. She's talked about that and never had the courage to pursue it.\" He finished refreshing the drinks, then turned and put a hand on my shoulder. \"Do you mind this? The sex thing is an office thing. Do you mind that Samantha wants to be involved?\"\n\nI smiled broadly and glanced over at her sprawled on the couch. She still looked a little dazed. \"I don't mind at all, sir. She loves you a tremendous amount, you know that right?\" He nodded and his eyes softened looking at her across the room. \"I get plenty of sex at the office, sir. Sara and Ms. Benson think too much but it's not at my initiative, as I am sure you've been made aware. Sex there usually feels rushed. The only times it hasn't has been with you... late at night... now here. This is different. And, I really like her.\"\n\nHe beamed. We rejoined her on the couch and she straightened up, accepted the drink from me and gulped half of it. I turned her face to me and kissed her deeply. When I broke it, he turned her face to him and he did it, too. She looked from one to the other of us with a shy expression on her face. She finally turned to him.\n\n\"She definitely has to stay the night now. No way do I want to wait for her to come back again. In fact, I don't suppose we could lock her up in one of the other bedrooms?\"\n\nHe laughed and I smiled widely. \"No, dear. I will need her at the office.\"\n\nShe turned to me, used her free hand to cup one of my breasts, then said, \"Thank you. Thank you for everything we've talked about. And...\" her hand dropped to my lap. I uncross my legs and her hand pressed to the inside and up to my pussy. \"And, thank you for what you just gave me.\"\n\nI put a hand behind her head and pulled her in for a much more passionate kiss. She gasped when we broke. I said, \"Mr. Cornell is a remarkable man and now I know he has a remarkable woman supporting him.\"\n\nHe leaned over and touch both of us, \"I now have two remarkable women supporting me.\"\n\nI looked at her and gave her a wink. She wasn't sure what that was for until I slid off the couch to my knees in front of him and began working at loosening his belt and slacks. She then understood, bounced to her knees on the couch to begin on his shirt buttons. I was soon tugging on his slacks as she was pulling his shirt from his arms and his undershirt up his body as I was removing shoes and socks before finally getting his slacks off. By the time I was finished, she had her face in his lap kissing his semi-hard cock. She looked at me with one hand holding his cock. This time she winked at me. I moved in close and joined her at his cock. There was certainly enough for the two of us. Then, she verbalized what I had just thought.\n\nAs though he wasn't sitting right there, \"Honestly... what did you think the first time you saw this thing?\" We were kissing opposite sides going up the shaft that was increasing in hardness each moment. She added, \"Me? I think I considered running away. I already knew I loved this man so much but... I didn't know what this thing might do to me... you know, inside.\"\n\nI gave the head a quick suck and glanced up at him looking down on us. By his expression, I was pretty sure he wasn't enjoying the discussion he was hearing but was resigned to endure it. I turned back to the cock and her eyes on the other side of it. \"I'm pretty sure there was a big gasp. Whether I also muttered some other exclamation, I don't remember. You have to remember, though, that was the first night, the night he listened to me, he gave me his time to care about what I was saying and to follow my reasoning to the same conclusion I had reached. He followed that by opening up to me. Maybe this is silly... by the time we got to that, he had grown in my mind and impression. He was THE boss; he surprised me. By the time we were ending our talking, my mind had him inflated to a huge proportion. So, by then this seemed appropriate on him. Is that...?\"\n\nHe turned my face up to him with his finger under my chin. \"I'm just a man, Abby. Don't put too much on anything.\"\n\nI looked up at him intently for a moment. I turned to look at her and she was watching intently back at me. Was he afraid of being built up? Was he afraid that impression would lead to my being disappointed? Was she worried about the same thing, about putting too much pressure on him so he wouldn't pull back in the company? I licked his cock and thought. How weird is that?\n\nI held onto his cock but sat back on my heels glancing back and forth between them. \"No sir... Yes sir... I mean... sir, you can be larger than life to people and I think you will become a more relatable version of that through the changes you want to make. I was expressing my emotion at that time and to some extent what I continue to feel as I expressed to your wife earlier. I'll do anything for you, sir. Anything. Your wife and I will always be there to support you.\" I nodded to her and her smile was huge. \"At home or at the office. You already have the best wife anyone could have. I commit to you both that I will become the best PA for you. We have your back, sir.\"\n\nShe stood up and grabbed us each by the hand. \"Come on. That turned me on so much I need to see some serious fucking happening.\" She led us to the staircase to the upstairs.\n\nThat night would be the catalyst that would alter what was supposed to be a dream job offer in a strange office setting into much more as an affair with a married couple.\n\nWhen we entered the bedroom suite that was nearly as big as much of my apartment, she released our hands and walked to the other side of the bed. I saw immediately what she was doing and joined her in carefully folding the bed covering and placing it safely to the side. She pulled the top sheet down and crawled on one side, reaching for her husband to lie in the center. I joined on the other side and didn't wait for an invitation but took his cock into my mouth as she cuddled to him and kissed. Her hand slid down his body to rest lightly on my head as it moved up and down on his cock. I had worked over and over to get about eight of his eleven inches of cock into my throat. That was what I managed when she moved down to join me.\n\n\"My God, Abby! How do you do that? You've got to teach me.\"\n\nI pulled back, saliva covering his cock and I gasped as I took in needed breaths. \"Practice.\" I glanced at him with a smile. \"Right, sir?\" He nodded. Apparently, he felt it okay to push me but not his wife. Not surprising, really.\n\nShe immediately took the head into her mouth and tried easing more and more to her throat but she quickly gagged and pulled back. I grabbed her head and kissed her hard. \"Don't force it. Even pushing down you have to be relaxed. Your throat is the problem. The impulse to gag.\"\n\nShe stared at me as her hand stroked up and down on the saliva covered cock. Her eyes were wild, hungry, lusty. She was almost panting she was breathing so hard. \"God, Abby, I am so turned on. What's happening?\"\n\n\"New. New opportunities being felt? New options? Sharing? Experimenting?\" I kissed her hard, again. \"Fuck him. Climb on and ride him.\"\n\n\"I've... no... I've already...\"\n\n\"Fuck him.\"\n\nShe looked at him and I followed her gaze. He nodded and smiled at me. He understood. This was not about whose turn it was. This was about need and her need probably crossed beyond simple lust but needing to feel she was still the primary, the main woman for him. She was Mrs. CEO. In my mind, anyway, that was how she would be and she must feel first with him... always. I gave her a gentle tug and she swung her leg over his body. I held his rigid pole and leaned over behind her to align the head to her hole. She gasped as it entered her, the same way I react when it initially slides into me and I feel how it stretches and fills from the very moment of penetration.\n\nKneeling at their side I alternated my attention from kissing him on the lips and caressing his chest and stomach to kissing her and fondling her breasts and rolling her nipples. She was stroking her body up and down his cock in smooth, long movements. Her eyes were glazed over and she was quite vocal in the sounds escaping her mouth. I looked at the two of them and made a decision. I thought I knew something about sex when I applied for the job at Alliance but quickly determined that my experience of bedroom sex needed expanding to prepare me for what I had done in the interview to being done out in the large room exposed to dozens of people. For a few weeks, watching porn videos had become a ritual and finding myself masturbating in front of the laptop, being very careful that the camera indicator never suddenly came on.\n\nI put my lips near her ear, \"Turn around, Mrs. Cornell. Turn around on his cock.\" She looked at me through that same glazy-eyed look and started to rise off. I stopped her. \"No... stay on him, just turn.\" She looked at me and sudden awareness showed through. Her mouth opened but nothing came out. She glanced down at him, then back at me. She started fumbling with knees and feet to accomplish it without clumsily kneeling fully on his stomach.\n\nAs she began managing it, \"OH... FUCK... oooooh... that... is... hmmmm.\" She finished the move and stopped to catch her breath. \"That felt... turning on him... so big... God, girl... we are going to have... some serious... talks.\"\n\nI then directed them more, just like the one video I was thinking about. I told her to shift her weight and lift up several inches off him, lean back, and for him to support her back. I then told him, he was going to fuck up into her. When they got it all straight and his cock was ramming up into her and she was gasping at the newness of the fucking, I moved between their legs on my stomach and planted my lips on her clit, his cock sliding over my chin as he fucked into her. She cried out when I pressed my lips on her engorged clit and pulled slightly on it while using my tongue to probe the portion inside my mouth. I blindly sought with one hand his ball sack, trying to have some contact as his hips bounced up and down off the bed.\n\nThe sounds from them were incredible and filled the room. Her thigh began closing and opening, trapping my head between them, then opening wide to feel more of my lips and tongue. Her thighs began quaking and her exclamations were restricted by the panting of her breathing. His thrusts became erratic, slamming up, stopping, his own legs muscles quaking. They were close. I shifted my mouth from her clit to her pussy, his cock sliding past my lips and tongue as I tried to lick and mouth both cock and pussy.\n\nThey orgasmed simultaneously. He was thrusting deep inside her. He held her tightly against his groin and his hips spasmed. I licked at his cock base and her pussy and clit. I felt after-shocks from their shared orgasm for several minutes as my mouthing changed to soft kisses. When I finally rose from their groins, she was lying back on his chest, his hands softly caressing her breasts and stomach as he covered her neck and shoulders with kisses.\n\nThey were so content and peaceful, I slinked off the bed. I waited for a moment, then saw them roll to the side and him curling around her, still embedded inside her. Their breathing quieted and the room fell silent. I stripped off my stockings and padded downstairs. I had a glass of water from the kitchen, turned off all the lights as I checked the doors, and returned to the bedroom. Entering the bedroom, I turned off the main light and he rose to his elbow and looked over her at me.\n\n\"We were hoping you didn't leave.\"\n\nI looked closer and saw her eyes open, too. She raised an arm, \"Come to bed, dear. I don't think I can move.\" I smiled. First, though, I rolled her stocking off her legs, then did as she asked. I lay down in front of her and pressed my back into her. Her arm came around me to softly fondle a breast. The room soon got quiet, again.\n\nI thought it was a dream. My body was aroused and I felt disoriented. I would admit to erotic dreams with all the exhibitionism and sexual variety I experience in the office but there was something different about this. I sensed I was on my back and I was masturbating, fingering my pussy and breasts, but my hands were at my sides. I slit my eyes and became more disoriented. There was faint light. I never leave a light on at night. The space wasn't right but slowly the feelings between my thighs became clear and I turned my head to the side. Mrs. Cornell was propped up on her elbow, her hand between my open legs lightly caressing my pussy, occasionally dipping a finger into my hole. My breasts? Mr. Cornell was on the other side of me on the king-sized bed kissing and caressing them.\n\nShe leaned to me and softly kissed me on the lips. \"I've never kissed a woman like this before.\" She looked intently at me, then asked the question showing on her face. \"Are you bi-sexual? Are you what a bi-sexual is?\"\n\nI shrugged. I was relaxed and enjoying the soft attention from my boss and his wife. \"I... I don't know, to be honest. I wouldn't have thought so before joining Alliance. But soon after, I discovered enjoyment in giving pleasure to women, too. I think I might be.\"\n\nShe smiled and joined her husband at the other of my breasts, both spread to the sides of my chest.\n\n\"What are you guys doing?\"\n\n\"Time for you to cum, Abby.\"\n\nI smiled. I wasn't against a good cum. \"You don't want to sleep?\"\n\nShe smiled, \"We have all weekend to nap.\"\n\n\"All weekend?\" I asked. \"I thought...\"\n\nShe giggle, \"Nooooo... Joe and I decided we would much rather you stay for the weekend.\" Her fingers played over my pussy. \"You don't mind the change in plans, do you?\"\n\n\"I have the feeling my new job is already expanding. I have the feeling I may have two bosses, not one.\" I ran my fingers through her hair. \"And, I don't mind a bit.\"\n\nShe laughed. \"I like that idea but Joe can be a demanding man. So, you focus on him starting Monday, okay?\" I nodded. \"But right now, young lady... right now I want you fucked by his wonderful cock AND I want to feel your talented mouth on my pussy, again.\"\n\nI smiled and wiggled into the center of the bed. Mr. Cornell followed and was between my spread thighs in an instant. She looked at me and I smiled, \"You know where your pussy goes. You and he can even kiss.\" She giggled like an innocent. It was delightful.\n\nHe eased his cock into my pussy as she settle her pussy over my lips. I probed my tongue immediately into her hole and found the remains of their earlier fuck. This was new for me, taking cum from a pussy, but in this case anyway I liked it.\n\nHis long cock butted my cervix and my mind went back to those nights of feeling like heaven. God, I thought, I get to feel this during the day now too. I knew I had time to spend on arousing Mrs. Cornell. He had already cum not long ago and that should prolong his staying power now. My arousal had been heightened, though, from everything that had transpired earlier. I love the fullness his cock gave me, stretching me wide and deep. Everything was heightened; the stretching of my hole exposed my clit to being rubbed; and his depth of penetration stimulated more surface in my pussy and provided cervix stimulation. The office has been a sexual learning experience. I found myself researching the stimulation I hadn't been aware of: I hadn't known about anal orgasms; and cervix orgasms wouldn't have occurred to me. Mr. Cornell touched me in so many ways: vaginally, clitoral, and cervix. No wonder I seemed to explode every time.\n\nThis time was no different. I orgasmed well before the others. Then, as I got her close and I could feel him getting close by the reaction of his cock in my tightly filled pussy, I was rising to another orgasm. This time, we all achieved orgasm.\n\nThen, we did sleep. I woke in the morning feeling disoriented, again. The events of the night quickly came back to me. I found myself between their naked bodies. It took some effort to extricate myself without waking them. It was early and the sun was just rising. I padded naked to the bathroom and then downstairs to the kitchen. I opened and closed cabinets until I found the coffee for their fancy coffee maker.\n\nI was standing by the window looking into their spacious backyard sipping coffee, my mind lost in thoughts of what my life was to become. Frankly, I had no way of conjecturing. I had spent no time in preparing myself for what was offered to me last night. Then, an arm encircled me at the waist and the hand slid up to grasp a breast.\n\n\"How did you sleep.\" Mrs. Cornell asked.\n\n\"Like a woman sexually ravaged.\"\n\nShe chuckled and kissed my shoulder. \"No dear, that was me. Do you know how long it has been since I orgasmed three times in one night?\"\n\nI followed her into the kitchen where she started filling a mug of coffee. She was wearing a short satin robe and the curve of her butt was clear underneath. She stopped pouring and turned. \"Is that what your day is like? Joe said you are frequently used five or six times a day. It is why you work late.\" She paused, \"Of course, that doesn't account for why he works late. But, seeing you, I understand why.\"\n\nI chuckled. \"Well, I'm relieved that we were able to share last night and be open about this. I mean... well, since I will be spending so much time with him...\"\n\n\"And fucking him.\"\n\n\"Yeah... and that.\" I giggled. \"It's nice it is understood. But, five or six times... that's not necessarily how many times I get fucked. Most days I suck and eat pussy as much as get fucked.\"\n\nShe shook her head. \"And you get your work done. Abby, if I had that much sexual activity I would be done for the day.\"\n\nShe got a hint of my day when he came down and announced he had forgotten about a golfing commitment. I gave him a quick blowjob and sent him off with his cum on my lips as she sat at the little table in the kitchen sipping her coffee. I followed that with eating her to orgasm before we showered togther, giggling and generally acting like girls getting away with something we shouldn't be doing. Then, she sent me home for clothes to go to dinner in and a casual outfit. She specified short-shorts and a buttoned sleeveless blouse.\n\nShe inspected me in the shorts and blouse, both were white, and the blouse material was just thin enough that the white lace bra underneath was evident. She thought they were perfect but the sandal flats weren't. She said she wanted to tease her husband and his golfing partners but she wanted new shoes for me. She drove and stopped at a favorite shoe boutique before heading to the club for lunch. She searched the wall of shoes and found what she wanted for me. She asked what height of heel I usually wore, told her 4\", and she directed the saleswoman.\n\n\"This is what she wants. Can you see if it comes in a 4.5\" heel?\"\n\nWe sat nearby and as we waited she was looking down at my bare legs. \"I should have said a short skirt, maybe a very short, pleated skirt.\" She giggled, \"And no panties. That would get her attention trying the shoes on, wouldn't it?\" She stopped as the woman returned. She had exactly what was specified. The extra 1/2\" was just enough to make me concentrate on my walk and it showed at my hips. She was very pleased. When I reached to open my purse, she put a hand on my arm.\n\n\"No, dear.\" She paid. We didn't go to the car but walked down the line of stores in the little outdoor mall area. She stopped at another boutique. She had apparently decided about the skirt. The saleswoman knew her by name and led us deeper into the shop for the skirt described. The woman looked me up and down, guessed a size (too low by a size which I assumed was a sales ploy) and I corrected her. Her hands moved through several styles of skirts, taking down several, then handing them to me and pointing to the dressing rooms.",
        "I stepped into one of the rooms. The doors were louvered and didn't provide complete privacy with a couple feet of openness top and bottom which was probably a security issue. I put the skirt on hooks on the wall. I had several mini-skirts but these were beyond that. These had to be what they called micro they were so short. The first one was a dark blue plaid pattern. It had to be worn low on the hips to provide decent coverage below. That presented a problem for the tucking in the blouse. I modeled it and the other two which were all similar but with different material patterns. Mrs. Cornell like the plaid pattern for casual but she agreed about the blouse. The saleswoman suggested another top but I shook my head. She then pulled the blouse from the skirt and unbuttoned it, tied the front under my breast and rebuttoned a few buttons over my bra.\n\n\"Perfect,\" Mrs. Cornell declared. The skirt now visibly low on my body, my belly button exposed and much of my stomach. I walked past the mirror again to check the exposure. I was covered standing there but it seemed to be barely so. She came up behind me and whispered, \"You're cute. You're naked all day at work and you are fussing about being covered.\"\n\nI looked at her in mirror, \"In public feels very different.\" She smiled and I wondered what she really had in mind for the club.\n\nA club house on a late Saturday morning is largely populated by men ending their games or enjoying the atmosphere of the game and competition. It is also a highly charged location to be wearing the outfit Mrs. Cornell had me dressed in. Sitting in the dining room, she chose a table far from the door. As we walked through the room, I could feel all the male eyes following me like big cats following prey. When I sat, I was sitting on bare skin. The blouse had been unbuttoned far enough to show plenty of cleavage and the hint of lace bra underneath depending on how I moved or the angle of someone was looking.\n\nShe purposely sat us so her back was to the door and I faced it. She wore a floppy hat in an attempt to hide her identity since the guys would probably know her if they got a good look. As we were finishing lunch, I spotted the guys coming in. Mr. Cornell spotted me with surprise and, I think, some suspicion as he considered his wife's appearance. I shrugged. They sat along the windows overlooking the 18th hole on one side and the main parking lot on the other.\n\n\"Here's what is going to happen, Abby. First, you go to the restroom where you will removed both bra and panties. When you retie the blouse, there will be NO buttons fastened.\" I looked at her in shock. As I repeated to her, public seems very different. She didn't pay my objection any consideration. She continued, \"While you are doing that, I will charge the bill to our account. I will begin leaving when I see you. You hesitate so we are apart. I will drop my keys a few tables away from them.\" I watched her, anticipating an embarrassing scenario being laid out for me. \"You must follow my directions exactly, young lady. I will ask Joe later.\" I nodded and waited. How did I so quickly go from Personal Assistant-lover to lover of the couple to a ploy to be used for exhibitionism play? When she finished describing my actions, I swallowed hard and nodded.\n\nIn the restroom, I placed my purse on the counter and checked to make sure I was alone there, then reached under my tiny skirt to pull down my bikini panties. Then, I untied the blouse, slipped it off quickly, reached around my back to unclasp the bra. I picked up the pantie and stuffed both into my purse wishing I had brought a larger purse. There is nothing tiny about my bras. I slipped the blouse back on and retied it below my breasts without buttoning it. When I was finished, I looked at the large gap exposing a deep cleavage. I turned to both sides quickly and saw how my breast swayed without the support of the bra under the gaping blouse. In the office, such movement had become normal. This was anything but normal, but at the same time, I could feel the excitement building inside me in anticipation. The thrill of exhibitionism.\n\nI paused at the opening from the small hallway, waited for Mrs. Cornell to make her move, then took a slightly different route toward the restaurant door. I saw her drop her keys along her leg away from the men. I moved to that area, made a show of finding the keys as she left through the door. I looked around the dining room drawing attention, then carefully positioned myself in the process, I bent over from the waist, my back to the table of men. I could feel the very short skirt rise and the air-conditioned air finding my exposed ass. What I didn't know for sure was if they could also see my pussy in the lighting of the room. Completing that part of the instructions, though, I parted my feet about a foot.\n\nI stood and looked around, again. Then, as if urgently seeking to find the woman, I moved to the table with men, leaned over it and peered out the window, turning in both direction as if seeking her but really making sure all the men got a good look.\n\n\"That woman dropped her keys. Do you see her?\"\n\nLeaning way over their table, my unrestrained breasts swung forward, gapping the unbuttoned blouse further and nearly popping my nipples out before I exclaimed, \"There she is!\" I put my hand on Mr. Cornell's shoulder as I turned, facing him I purposely/accidentally pulled the blouse open further to flash a nipple at him. Without looking at the men, I turned and jogged out the door and past the window, not easily done in the new heels. I could feel my breasts bouncing and swaying with each stride and I fought to not use my hands to hold my blouse together. As I passed another group of golfers coming to the club house, I was sure a nipple or both flashed before their eyes.\n\nBy the time I had caught up with Mrs. Cornell around the corner, I was gasping and my heart raising. It wasn't from the jog.\n\n\"What was that all about? Jeez, you two. Abby, you nearly had three heart attacks at the table when you bent over for the keys and turned around and bent over the table with your breasts nearly out of your blouse.\" He had just arrived home and saw us sitting at the kitchen table drinking wine and dying to hear what the reaction was. He stood at the end of the rectangular table, looked at each of us, then focused on his wife. \"Samantha, this has you written all over it. Abby wouldn't be that comfortable to pull that prank.\"\n\nShe smiled demurely at him. \"It caused a reaction, then?\" Then she stopped, \"They didn't recognize me, did they?\"\n\nHe shook his head in disbelief. \"Are you kidding? With this one,\" he indicated me, \"bouncing her breasts around as she left the restroom hall? Hell, that was the only thing they were going to see.\"\n\nShe stood and moved into his arms as smoothly as a cat knowing how to be petted. \"It was pretty sexy, I bet. I only wish I could have seen it.\"\n\n\"Sexy,\" he replied softer, \"sexy is an understatement. It gave me a hard-on I've still got.\"\n\nShe giggled and put her hand out to me as she began pulling him, \"Come on, girl. It seems a woman's work is never done.\"\n\nHe wanted to fuck us both this time. He had us strip and bend over the bed, our legs spread wide. He eased into us in turn, fucked for a minute or so, pulled out and moved to the next. As it went, there was no more easing in. He rammed his big cock into our now gaping pussies. Back and forth he went until he came and it happened to be in her. I heard his grunting and her gasping so I moved to snake a hand underneath her and rubbed her clit furiously. She came a moment after he did. She collapsed on the bed, his cock pulling out of her in the process. I dropped to my knees before him and took his cock into my mouth, then licking it up and down, cleaning his cum and our juices from it.\n\nAs I was doing that, she moved to the shower. She called back, \"Don't forget dinner.\" I continued sucking his cock long after I heard the shower running.\n\nWhen she was done in the shower, I released his once again hard cock from my mouth. Our turn... at the same time. Minutes later while he was pounding his cock into my pussy from behind while pressed against the wall with the water cascading over us, I noticed a shadow on the frosted glass of the shower wall. Then, \"Okay, you two. Don't make us late for our dinner reservation.\"\n\n\"Yes, ma'am,\" I responded and moaned as his cock rammed my cervix. I sighed as he pulled out obediently. I turned around and gave him a kiss and commented, \"I guess we'll just have to continue this later.\" I washed his cock and that did nothing to help soften it. I winked at her as we exited the shower toweling off and his still hard cock bobbing in front of him. I whisper to her, \"That should guarantee more action for us later.\" She giggled and shook her head.\n\nShe said, \"You're terrible. You're wonderful. I love it.\"\n\nShe made reservation for us at one of the fanciest restaurants in the city. It was known for it steaks but it had a wonderful selection of most anything, I wore a mini-dress with a deep plunging cleavage. It was already clear to me that she enjoyed drawing attention to my large breasts. She wore a similar dress in style but with a bit more hem and a hint at showing cleavage. Mr. Cornell wore a smart looking dark suit with white shirt and dark tie.\n\nAfter the salads and before the main entrees, Mrs. Cornell rose and leaned next to him, whispered something into his ear, and he looked at me. I saw him nod and she came to me and put her hand out. She led me to the restroom and my heart picked up pace, immediately. She said what I suspected: she wanted me to removed my underwear. I first thought she could have requested this before we left their house but this was part of her fun. In order to accomplish what she wanted, I would be force to nearly strip in the restroom. Although anyone coming in would be a woman and likely an adult, the idea of being caught like that in a place where it wasn't appropriate made me very anxious. I pulled the hem of my dress up near my hips, reached underneath and pulled my thong down. I handed it to her but she placed them on the counter where anyone coming in would see them. Of course, anyone coming might also see me partially undressed. I next reached behind my neck, loosened the clasp and pulled the zipper down my back. I shrugged the dress off my shoulders and pulled it down over my breasts, quickly returned my hands behind me, unclasped my bra and shrugged it off, too. I then pulled my dress up and she helped me zip it. I reached for my underwear but she stopped me. She arranged them on the counter so the bra was near the mirror and the thong arranged near the edge. Anyone coming in would know that some woman out there was now without underwear... some woman with large breasts... some woman who is in the small minority of size.\n\nThe dress was tight enough to provide some measure of support but they still jiggled considerably. Also, the dress pushed them into the gap and displayed even more breast tissue. I, and the Cornells, noticed the male server spent more time next to my chair when taking requests. I blushed frequently and they seemed to enjoy it. I had to admit, though it was embarrassing it provided a definite spark of excitement.\n\nWhen leaving, the valet assisted us by holding the doors. I couldn't help but wonder if I was flashing a bare pussy as I got into the back seat.\n\nLater, as we prepared to get into bed less frantically than the previous night, I knelt at the end of the bed where Mr. Cornell sat. I sucked and licked his cock while Mrs. Cornell knelt along side him. The kissed and caressed each and they frequently paused to watch me with his cock. This was hugely different than being seen at the office. This attention was very casual and intentional while at the office it would be glances and fleeting. Also, and this was a big part of it, I was sucking this woman's husband.\n\nI heard her softly ask him, \"Joe, have you ever had the opportunity to try anal? I know you haven't with me, the idea terrifies me. My man is so big you fill my pussy so completely and the asshole is so much tighter.\"\n\nI looked up while continuing to suck his cock. He kissed her hard while grasping one of her breasts. \"No, love. I've never found a woman who would give me that experience.\" They were looking at each other with that look people who know each other very well use when they are silently communicating.\n\nShe looked down at me. I diverted my eyes and plunged my mouth down over his big cock and taking much of it into my throat, the length and thickness testing my ability to control the gagging. I knew what she was doing, it was the reason I refocused my attention, the reason I nearly gagged on his cock as a diversion. Could I? Would I?' Is this one of the 'anything' I said I would do? What was this feeling I had for him, this connection that magically happened during that encountered late in the office? What was it about him that had me saying things like 'I'd do anything for him'?\n\nI sat back on my heels and looked up at them, their heads pressed together watching me. My look was soft. Though I had stopped sucking his cock, my hand continued to stroke up and down in a long motion that twisted at the head. My eyes flicked from one to the other of them. They were both intently and expectantly watching.\n\n\"Sir... I... I... with Mrs. Cornell's understanding and permission... I would like to offer my body for your use in anything sexual or erotic or... whatever... that you might desire to explore.\" He looked at me for a moment. I suspected they were teasing, playing with me but not completely. Now I had made the offer and it was more expansive than they intended. She leaned into him and whispered something. Her hands were caressing his chest and down his stomach.\n\n\"Why did you make that offer, Abby?\" he inquired. \"Samantha was teasing about anal but you went past that into the unknown. You know you could have refused even the tease of anal. All other women have. I understand my cock size may be a limiting factor. So, why make such an open-ended offer of yourself? Am I to take it seriously or is it some pressure you feel because of the job I have offered you?\"\n\n\"Sir, I will learn and do everything necessary to not let you down as far the job goes. No, sir, the rules of the office are very clear and nobody feels pressure to engage in something they are not comfortable with. And, you have restricted your own participation to avoid adding potential influence over those in much lower positions. I was secure in that, sir. No...\" I looked at his wife, \"... I tried to explain it to your wife, sir. We both feel in our hearts that you are an extraordinary man and we can both help in our own ways. I think this is one off those ways for me and if it takes away some feeling of regret for Mrs. Cornell, so much the better.\"\n\nHe pulled me up to sit alongside him opposite his wife. His arms went around both of us. \"We have a lot to talk about, Abby. I am feeling quite possessive about you.\"\n\nI smiled at both of them, \"It wouldn't do me any favors in the office if you were to become possessive about me there. In some respects, I envision being kind of an interface between you and the main body of the office. I was one of them and we shouldn't lose that.\"\n\nHe nodded. I could see a conflict but also a recognition of my point. \"Then, we do have something to talk about.\" He turned to his wife, \"Just as Samantha and I have much to talk about, too.\"\n\nWas I wrong? Was there a conflict brewing under the surface I hadn't noticed? She smiled and leaned across him, her hand pulling my head to her. She kissed me on the lips and murmured, \"All good things to talk about, dear. You're so exciting that he and I need to discuss all this.\" She wants more involvement.\n\nThen, he refocused us, \"Honey, do we have some lubrication around?\"\n\n\"Of course, my old body sometimes needs a little assistance, remember?\" She went to the nightstand.\n\n\"Your body is amazing, ma'am.\"\n\nShe laughed, \"Well, thank you, dear, but compared to you it is old. Besides, there are some things taking care of yourself and exercising can't account for. Sometimes I need a little lubrication help.\" She giggled. \"I know what a lucky woman I am having a man like him loving me.\"\n\nI flushed. These two were so in love and she was so trusting and open. Here I was, the woman who would be available to him during the day to fuck or suck him as he wanted. The woman who was about to offer her ass to him, yet I could feel the connection that somehow had instantly formed between us, two women intent on being his buttress of support.\n\nI took the lubrication from her, parted my legs and bent over very unladylike to apply a generous amount of lubrication to my asshole outside and inside. I then knelt before him, again. With more lubrication, I spread it liberally over his cock head, then spreading it down the shaft. With my eyes on the shaft that now seemed much too big, too thick, I asked, \"You'll be gentle with me, sir?\"\n\nHe reassured, \"This and anything else is always up to you, dear.\"\n\nHer voice added, \"All you have to do is tell him. Tell him to stop, no more, whatever.\"\n\n\"How do you want me, sir?\" He didn't know. He had no experience in this to offer anything. \"Maybe, if I have control?\" He said like cowgirl, me on top. He nodded. He scooted like a crab into the center of the bed. I followed and Mrs. Cornell followed along with me. Her hand was rubbing my back as I crawled over his mid-section and straddled his hips. I felt his cock moving along my ass crack and looked behind. She smiled at me with an unsure smile. She wanted to put her husband into my ass. No words were spoken. Intention was clear, though. My reaction was the same. I put my hands on my ass cheeks and pulled them apart, presenting my asshole to her... and his cock. He lay back watching, expectant, anticipating, anxiously waiting hopeful. Our eyes made contact and we spoke volumes in silence at that moment as his cock was placed at my tight hole by his wife. We both felt it and we both sucked in a breath of anticipation. Neither of us knew what this would feel like. I had experience with anal but not like this.\n\nMy eyes locked on his as I sat back slightly, feeling the pressure of his cock head at my, as yet, unyielding hole. She put her face near mine and offered earnestly, \"Try to relax, sweetie. Maybe think of something else.\"\n\nI looked at her dumbly, \"Said the woman who has never done it?\" She looked embarrassed and crestfallen. \"I'm sorry, ma'am. You're right, of course. You want to help take my mind off it?\" She nodded, pleased again to help. I pulled her alongside of me and kissed her passionately. I felt the smile on her lips as we kissed. One of her hands moved to a breast and she shifted so the other hand could get between my legs, the fingers moving over my empty pussy.\n\nI gasped and groaned, \"OH... FUCK... OH... YESSSS.\" She took it for affirmation of what she was doing which was wonderful What if it was though, was the feeling of the bulbous head spreading my tight sphincter, feeling it at what I thought was the widest. I cried out when the head passed through the restrictive muscle and both stopped to peer at me with concern. I remained perfectly still sitting with just the head inside me, my heart racing, my hands on his chest. I opened my eyes and a smile slowly formed on his face. His wife saw his reaction and bent over to better look into my face. The pain, the searing pain like tearing eased by the second. \"FUCK,\" I exclaimed. I grabbed her and kissed her wildly until she began giggling. I then leaned down, the head of his cock moving slightly causing another gasp but I kissed him, too. I took a deep breath. \"I did it. Now we fuck but slowly until I can get used to it.\"",
        "He smiled, \"You're in control, dear.\"\n\nMrs. Cornell began sucking a nipple as I slowly began rising and lowering, each cycle taking a few more inches into me asshole. My hands went to my hair, combing through it, pulling it. I gasped, sighed, groaned and moaned. He did the same. Mrs. Cornell had the biggest smile on her face as she alternated kissed on me and him.\n\nWhen I finally was sitting on his thighe, it felt it like the head was in my bowels. I began rising and lowering faster as the muscles relaxed, adjusted to being opened so much. I clenched my ass and continued moving. I felt him pulse. I heard him grunt, gasp, and moan. I continued fucking, faster and faster, clenching tight and working his cock. I felt him pulse, strain, and finally shoot deep into my ass. But I kept moving. He spewed cum and our fucking became even easier. Still I continued. I clenched and kept rising and falling. His cock remained hard and I kept fucking. I was beyond thought, consideration, or deliberate action. I just fucked. My body was on fire. I had never felt anything like this, filled to capacity but somehow wanting... no demanding more. I orgasmed. I exploded. I had to lean forward as my body shook and convulsed. My breasts heaved and swung wildly as I continued to fuck him somehow even through the orgasm.\n\nHe moaned and his cock seemed to get even harder inside me. My orgasm eased but started rising as I continued to lift and drop. Mrs. Cornell commanded, \"Turn around.\" My eyes opened in a dazed slit but the questioning look must have still been shown. \"You had me did it. Turn.\" God, I thought. That was with this pole in her pussy not her ass but I rose and started trying to figure it out. It felt so weird as I clumsily turned on his cock in my ass, his cum providing the extra lubrication necessary to make it possible. With my back to him, she pushed me back. \"Fuck her, Joe.\" Now she was bossing her husband in ass fucking me. But, as he began fucking his hips up and his cock into me, she bent over and planted her lips to my very engorged clit and inserted two fingers into my empty but drooling pussy.\n\n\"Oh God!\" It was Mr. Cornell. I felt her fingers moving inside me but, as I concentrated with the little bit of mind I had left, I realized what was happening. While sucking my clit she was stroking his cock from inside my pussy. How did she come up with that? We both came, again."
    ],
    "authorname": "ikeman48",
    "tags": [
        "exhibitionism",
        "threesome",
        "office",
        "bi-sexual",
        "anal",
        "anal sex",
        "group",
        "group sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/abby-and-the-ceo-ch-05"
}