{
    "title": "The Twelve Zenati Pt. 26",
    "pages": [
        "The conversation between Olivia and Marcella had been long overdue, and Genesis was grateful that Olivia had finally spoken to her sister. He would have preferred to be present and able to hear the exchange, but he had no doubt she would tell him when she was ready. He glanced over to where she sat beside him as they drove home. He had asked if she was okay when they had left the casino and she had simply nodded not speaking, and he had been content to give her time to process the conversation and her feelings. He reached over and placed a hand on her thigh, and she startled, showing him just how deep in thought she had been.\n\n\"I'm really sorry. I didn't plan to do that, and now, I'm just confused,\" Olivia said and tugged on her seatbelt, pulling it tautly across her body.\n\n\"You told her the truth you have been hiding for a long time, and it's only natural that it was difficult for you both,\" he said cautiously remembering the surprise of Marcella thanking him. \"It's only natural you feel a little out of control. It took courage to take the risk you did. To talk to her without preparing for the confrontation,\" he said noting how tightly she held the seatbelt around her body as if needing to anchor herself in the physical realm as she dealt with all of the emotions this morning had to have dug up.\n\n\"Do you think she will be safe tonight? That Noah will look after her?\" Olivia asked quietly. \"I was listening last night when you and your family were talking about the risks they were taking. I wanted to tell her that I knew she is the hero of the story, in case I didn't get another chance.\"\n\n\"You will get another chance. I am sure of it, and I believe Noah loves her like no one ever has before. He won't let her go without a fight,\" Genesis reassured her as they pulled into the garage. \"For that reason and for you and Vivienne, Gideon and I would not let her go without an argument either. Now loosen the belt, little one. You can tell me about the conversation properly when we are upstairs, and you are more comfortable.\"\n\n\"I told her how I didn't know what she had been through and that's why I was so mean to her,\" Olivia said sadly.\n\n\"I know Little One. Now don't say anything else, until I speak to you. Understood?\" Genesis instructed stepping into the dominant role he knew she needed right then before her whirling mind got the better of her.\n\n\"Yes, Master,\" She replied, also sliding into her submissiveness as he walked her up to their apartment and straight through into their playroom. \n\nWithout a word from him, Olivia began to strip as soon as they stepped through the playroom doorway then watched as he gathered several coils of rope and came back to her where she stood in display pose for him. She said nothing as he took his time binding her into a rope harness. It was something she had requested early on in their relationship as a way to help her through intensive emotional upheavals. Though he hadn't had the time for the lengthy ritual of binding her recently, he knew it was what she needed when she felt out of control and soothed her as her body stilled in the restraints and urged her mind to still as well. The chaos her life had become seemed to untangle itself into more manageable pieces in the stillness of her body and mind. In these moments, she would often reveal what was bothering her in greater clarity to him than she could without the settling effect of the bindings.\n\nCalmly and taking his time knowing he could never create the artworks of the Shibari Masters, Genesis used the rope to create a firm collar around her neck to start with, then from that, he made a knotted frame around her breasts. Another rope criss-cross of ropes across her abdomen and back creating pleasing patterns while binding her firmly. He was as silent as she was thinking about how he would tackle this next conversation without pushing her too hard to share what had happened on that balcony before Noah interrupted the two women. Noah walked a knifes edge, and until he had Marcella's love in return, he would continue to do so and act out of character where she was concerned. Genesis had to remind himself of how unreasonable he had been when Olivia had denied his love for her in the beginning so he could allow his brother some lee-way to act over the top where Marcella was concerned.\n\nIn the prolonged silence, Genesis continued binding her with a bikini harness around her waist and pussy before moving onto her legs. There wasn't any need for words. She knew as she submitted to his will that he, as always, was giving her what she needed. Her mind slowed, and she relaxed under the careful binding of her body. Once a pretty patterned sleeve of rope wound up her legs, bringing them together, Genesis picked her up and placed her on the bed, then with a sleep mask removing the light from her eyes, he lay beside her and gave her permission to speak.\n\n\"Feeling better, Little One?\" Genesis asked. \"Do you feel you can talk to me now, without all of the confusion, or would you like a little while longer?\"\n\n\"I am feeling better, thank you, Master. May I have just a little longer to think about things,\" Olivia responded in a small voice.\n\n\"Take as long as you need, Little one. Are you comfortable?\" He kissed her then and was pleased as she arched up against him, seeking more of his contact. He let his fingers stroke and tease around the ropes binding her breasts for a few moments before kissing her again and rising from the bed. If he was going to give her the few minutes she asked for, then he couldn't lie there like that, or they would both be too distracted to deal with the situation. Her comment as they left the casino bothered him a great deal. It hadn't occurred to him that the risks, they had all discussed last night while she listened in would have such a profound effect on her that unbidden she would ask to speak to Marcella alone. \n\n\"Yes, Master,\" Olivia whispered.\n\n*****\n\nAs soon as Olivia had left, Marcella had hurried back to the bathroom and locked herself in, running the shower. Torn between forcing himself into the bathroom again or letting her work through whatever Olivia had said, Noah was left to pace agitatedly outside the locked door. When she emerged, she was back to her ass-kicking bossy in command self which worried Noah all the more. \n\n\"Talk to me, Kitten,\" he'd urged, but she had rounded on him as argumentative as always.\n\n\"We have a job to do and a meeting to get to, or did you forget? There's nothing to talk about at least not right now. First, we deal with this shit and get my sister her life back, and then we deal with the other shit. Right now, I am not your Kitten, nor am I a sweet submissive table woman so stop with all that macho trying to look after me shit. We both know I can look after myself,\" Marcella lectured him.\n\n\"Three shit's in a row, I'll consider myself warned and be happy to have the bass-ass Marcella back for the meeting,\" Noah held up his hands in surrender. \"It's your show, so what do you want to do now?\"\n\n\"I want you to go back to your family and let me handle this alone,\" She said abruptly.\n\n\"Bea knows I'm involved and that I would have had to get the documents from my family. I am already neck-deep in this shit, as you so eloquently put it, so it's a bit late to be sending me home now,\" he argued logically.\n\n\"As long as I have the paperwork she won't care if you're there or not,\" Marcella huffed. \n\n\"I'm coming with you,\" Noah said with no emotion in his voice, just stating a fact. \"You agreed we would do this together. Or you can assume my family will be there watching every move you make.\" He wished he could take the threat back as soon as it passed his lips and fell silent when she didn't automatically bite back at him. He watched her finish getting dressed. She wore tight black pants and a soft white T-shirt, boots with reasonably high heels. However, Noah had seen her in higher. \"You don't have to do this alone, Marcella. You never did,\" he said with a softer inflexion. \"Trust me, please. I can look after myself just as you can. You don't have to be the one pulling the macho shit and trying to look after me either.\"\n\n\"Fine,\" she huffed again. \"Let's go then I want to get there before they set up so we can see the inner workings before the crowds arrive,\" Marcella said grabbing a jacket and large shoulder bag with the paperwork. She didn't want to put him in any danger, she never had, but things had changed between them, and she couldn't bear to see him get hurt trying to protect her more than ever.\n\n\"We have hours before the markets even open, let alone our meeting with Bea,\" Noah said, taking a step toward her. Since waking up this with her in his arms this morning, they had grown steadily further apart, and he desperately wanted to bridge that gap between them again. His desire for the feisty little Kitten standing in front of him was riding him hard again and reminding him there were much better ways to while away the time before their meeting.\n\n\"Yesterday was an anomaly,\" she tried to say in a harsh tone, but it came out softer with the emotion and care she felt for the man who was standing by her side to help her sister despite the danger to himself and his family. \"I need to make sure this goes off without a hitch, and I have a plan to ensure it will, but there are risks just as you keep warning me which is why I need to keep my head on straight and not let you fuck with it like you did yesterday.\"\n\n\"And this morning was that an anomaly too?\" he asked feeling both amused and annoyed by her denial of all they had done and said to each other as meaning so much more for them. It was true she had pushed him away at the end and tried to distance herself physically, but he knew she felt the pull between them. She had to feel it because he could barely think straight with his need for her to embrace him and their fate riding him hard.\n\n\"This morning was fun,\" she shrugged nonchalantly and hated herself a moment later for the look on his face. It was only a moment, but then the blank face that was prepared to argue with her was back. She sighed and slumped. \"Noah, I care about you, which is why if you want to save me any more stress then you will stay here if you won't go home. I will call as soon as I have the location and time.\"\n\n\"You care,\" he grinned at her. It was more than she had ever willing given him before.\n\n\"So, you'll stay here and wait for me?\" she asked hopefully.\n\n\"Not a chance, especially now,\" he continued to grin at her as he stepped closer, trying to close the distance between them again.\n\n\"Did you not hear anything I said?\" she asked, holding a hand out before her in a stopping motion.\n\n\"I heard and you're in charge, but we agreed that we would stay together until this was done and honestly, I am enjoying the together part of this scenario so very much,\" he grinned at her again. He knew it had cost her in some way to admit she cared, but it was out in the ether now, and she couldn't take it back no matter how hard she tried. \"I was just going to grab my wallet and keys off the table,\" he indicated the table she stood beside. \"You wanted to go, right?\"\n\nMarcella huffed again. She didn't know whether she was just plain frustrated with the man or totally exasperated, so she huffed a second time as she reached the door and opened it to leave. She was stopped short as a young man, dressed in typical surfer wear straightened from where he had been bent in front of her door with an envelope in his hand.\n\n\"What the fuck!\" she exclaimed, and before he could react, she snatched the envelope from his hand.\n\n\"It's not what you think!\" he exclaimed, holding his hands out to show he meant no harm.\n\n\"Zan?\" Noah asked in confusion, coming into sight behind Marcella immediately after hearing her exclaim\n\n\"I needed her to know what I know without anyone else knowing,\" he babbled breathlessly lowering one hand to rub his chest. \"I'm sorry you were never supposed to see me here. No one knows I'm here. I swear!\" Zanto couldn't help the verbal diarrhoea that fell from his mouth.\n\n\"Get in here, and be thankful she didn't plant one of those pointy boots in your balls,\" Noah grumbled and grabbed him by the collar dragging him inside.\n\n\"Fuck! I'm not a kid you can just drag around anymore,\" he growled at Noah and reefed himself out of his cousin's grip. \"You and everyone else had better stop thinking you can push me around. I'm here for her, not you!\" He glowered at Noah when his cousin returned his growl even louder.\n\n\"You hacked my phone?\" Marcella accused. She had split the envelope and begun reading as soon as Noah had grabbed the man and dragged him into the room. They obviously knew each other, and while he looked familiar to Marcella, she couldn't place him the way he was dressed just then.\n\n\"Yes, but there were reasons, and I argued against it,\" Zanto slumped and sat on a couch opposite to where Marcella stood reading and placed his head in his hands. This had been a bad idea; he knew it, but he had wanted to... to what? To see her? To warn her? To offer his help? He didn't know anymore.\n\nHe watched as she reached into her large shoulder bag and withdrew her phone to listen to the voice mail in her message banks as Noah took the letter from her and began to scan it for himself. Noah swore and pinned Zanto with a curious stare.\n\n\"Why not just call or message us?\" Noah asked.\n\n\"Not everyone has put all of the pieces together yet, and no one is interested in what I have to stay most of the time, so I told them all to get their heads out of their asses and wise up at the last meeting, when they talked about this deal with Bea,\" Zanto admitted. \n\n\"How did that go for you?\" Noah chuckled trying to imagine the youngest of their generation telling his brothers to wise up or else.\n\n\"Pretty well once Papa agreed with me,\" he shrugged. \n\n\"Wait you told the full table to get their heads out of their asses?\" Noah's eyes widened, and he laughed.\n\n\"It was one of those 'you had to be there' situations,\" he shrugged.\n\n\"So, you think her Uncle is here and trying to kill her as well as her sister?\" Noah asked. \"Pretty much and Oscar confirmed it to Xavier I think, but they are pretty tight-lipped except about wanting one of their men with each of the sisters. Oscar is pretty pissed that Marcella wouldn't come in when called.\"\n\n\"They've already declared Olivia dead so I doubt her father or Uncle would take the risk in targeting her, but Marcella is a definite risk to making everything they planned and plotted come undone. Only she has the power to discredit them once and for all now that Oscar and Nathaniel are involved. You know they wanted their own man with her to protect her. They didn't even know what she was doing with the Suebi but rather because, as I found out, the Uncle has disappeared and in all likelihood is here somewhere with a view to kill her,\" Zanto took a deep breath and let it out slowly. \"I'm sorry Marcella, but you needed to know, and everyone else was happy to leave you to do this first but what if he's made a deal with them for you and Olivia?\"\n\nMarcella sat listening to the increasingly threatening messages on her voicemail on repeat as her brain froze with the sound of that far too familiar voice. Realising her hand was shaking she dropped it with the phone to her lap where Noah quickly scooped up the phone and listened while putting a supporting arm around her where she had collapsed back onto the couch. Noah swore loudly and profusely beside her. He would be in more danger now, she realised. She had to get him out of this mess and get the information for Olivia on her own. This new information only made it more urgent for her to do it as soon as possible now. She knew she was on a clock or at least assumed she was as her family, Apollo and the Battaglia all circled the city looking for her. \n\n\"Okay, first things first. I can't alter the meeting, even if I could, I wouldn't,\" Marcella pulled herself together with added steel in her voice. \"Olivia has to come first. Once that is done, we can talk about this,\" she indicated the letter and phone which Noah now held. \"I need a few minutes to sort it out in my head. Noah go with Zan and make sure none of our friends spots him. Then I'll be ready to go,\" she instructed.\n\n\"Not on your fucking life, you forget I know where and when this meeting is too. So you go with Zan, stay safe, and I'll do the meeting with Bea and let you know when it's done,\" he growled low and threateningly.\n\n\"Fine, but the deal we made is off so before I go take this off,\" she held out her wrist showing the slave bracelet with the tracker in it. \"And if you fuck this up for Olivia I will never and I mean never, speak to you again.\"\n\n\"No,\" Noah ground out unable to hold back his anger at her family, the Suebi and every fucking thing keeping them from going home and starting the life they were meant to have. \"The deal is not off, and your tracker stays on.\"\n\n\"Whatever, I need some space,\" she said, snatching his keys from the side table and stalking to the door. \"I have things to do. You two duke it out for who's the biggest arsehole.\" She opened the door, but it slammed closed before it got wide enough for her to escape with Noah's large hand trapping her inside.\n\n\"Marcella stop,\" Noah said quietly. Too quietly, she realised and looked up into his eyes, trying to read his expression. \n\n\"Why? We both know this makes not one iota of difference. I have to go to this meeting because I need that information, nothing you or anyone in your family has said in the last two days has changed that, so leave me alone to do what I need to do,\" she said stubbornly. \"As it is, I need a new identity and place to stay now that your family has been all over this place this morning. Fuck, this is why you being here was such a mistake, Noah. You and your family are putting me in danger, not the other way around. Go home, and just leave me alone.\"\n\n\"No, we do this together or not at all,\" he ground out.\n\n\"The deals off Noah and unless you want me to lump you in with all of the other arseholes in my life who forced me into places and situations unwillingly then you will let me go,\" she said sadly and knew by his stricken face that her point had hit home.\n\n\"Please, don't go,\" he pulled her into his arms. \"I need you. I know you don't need me or anyone, but I need you,\" he said as she momentarily melted into his hug and then pushed on his chest. \"I love you, Marcella,\" he said.\n\n\"If you truly love me, then you will do what I ask and let me go,\" Marcella replied with the same sadness.\n\nNoah let her go, not knowing what else he could do. If he kept her, it would hurt her more but letting her go was killing him. He watched silently as she left the room and walked away, not quite believing that he would let her go.\n\n\"I'm sorry, I didn't think...\" Zanto said softly making Noah turn to face him his pain evident on his face. \"I only meant to slide the letter under the door; it was just bad timing. She needed to know there was another danger out there.\"\n\n\"Don't be, sorry. I get it. If the deal is off then the family is in, I kept them away for her but if she thinks I will continue to protect her from them and you while she does this on her own, she is wrong, so very wrong. Just give me a little time to work it out with her.\" He said confidently though he didn't feel confident at all when it came to the fiery Kitten he loved. She would hiss and spit and scratch at him, but she would realise what they had was worth keeping.\" He sent her a text with the agreement they had made attached.\n\nNoah: \"I will give you one hour of space and time to reconsider whether you want to dismiss all of the promises I made in our agreement. Come back to me. Please, Marcella.\"\n\nThen he sat back and waited for her response knowing there was nothing else he could do for the moment. He tapped on the ap that would show him her tracker and relaxed as he watched her in his mind's eye through the little green dot on his phone.",
        "*****\n\n\"Okay, that's enough proof,\" Vivienne said, looking at the little blip on the ultrasound screen. \"I guess we should call him before he finds out I am here.\"\n\n\"Ooh, can I? Let me do it please?\" Helena grinned evilly at Vivienne.\n\n\"I'm not sure I trust that grin of yours,\" Vivienne laughed.\n\n\"Trust me. I'm a doctor!\" Helena said hand on her heart and picked up the phone to dial Dominic's room where he knew Gideon was and put it on speaker for Vivienne.\n\n\"Dom? Its Helena,\" she said when he answered. \"Is Gideon there with you?\"\n\n\"Hey, no not at the moment I think he went to the war room while Emma is force-feeding me again,\" he chuckled and yelped as Emma must have hit him for the remark.\n\n\"Can you get Emma to let him know his wife is in x-ray and if he could come down to see her that would be helpful,\" Helena grinned at Vivienne. \"She's quite emotional, and his presence will calm her, I'm sure.\"\n\n\"Is everything alright?\" Dom asked, unable to sense anything from the call itself. \n\n\"I can't really say just yet but if you could let Gideon know, please,\" she asked.\n\n\"Yeah, of course,\" Dom said, and Helena hung up.\n\n\"How long do you think it will take him to get here? Five minutes or less?\" she laughed. \"Do you think you will be okay here while I go out to the foyer of the department and wait for him?\"\n\n\"Don't be too mean to him,\" Vivienne laughed. \"He will already be in a panic if I know him.\"\n\nIt was closer to ten minutes when Gideon rushed through the door, startling her, his eyes wild and frightened as they took her in lying on the bed beside the ultrasound machine. Saying nothing he went and leaned over the bed, pulling her into a gentle hug as he buried his face in her neck. \n\n\"What's wrong? Helena said that you would be okay, but why are you here? What happened?\" he asked in a torrent of quiet confused words and thoughts.\n\n\"I'm here because I had to be sure before I told you how wonderful you were,\" Vivienne smiled, and he leaned back looking at her in confusion. \"Not anytime soon but next year or in about seven months, you're going to be...\" her words were cut off as he guessed what she was saying and kissed her hard and deep. \"A Papa,\" she finished when he finally let her up for air.\"\n\n\"I love you,\" he said softly and kissed her again. \"You are amazing, and every day I love you more than the one before. Cigars! I need cigars!\" he sat up, patting his pockets as if they would magically appear.\n\n\"This is a hospital, Gideon,\" Helena said disapprovingly. \"What you need is to see what you and your wife have created.\" She sat at the screen and began to play with the image pointing out different areas in the fuzzy picture to them. \n\nGideon couldn't make sense of the images, but he held Vivienne's hand and watched her face light up in eager fascination at the small blip on the screen. She was so beautiful, and he was so proud he could burst. \n\n\"Helena if you roll over my bladder one more time I am going to pee,\" Vivienne warned with a laugh. She'd been holding her full bladder for a long time now. \n\n\"Sorry Hun, you go pee I will talk to the Papa-to-be for a few minutes, then we can talk about prenatal care,\" she said and wiped the gel off the sensor and Vivienne's belly. \n\n\"You okay to go alone?\" Gideon asked as he leaned down to help his wife to her feet and put her clothes back in place. \n\n\"I'm pregnant, not made of glass, Gideon,\" she laughed lightly as he let her stand on her own two feet. \"I'll be back in a minute. Do you think you could find out how I could contact Marcella? I want to talk to her now more than ever,\" she said quietly. \n\n\"I'll make sure you do then,\" he promised and watched her walk away to relieve her bladder. He pulled his phone out of his pocket and messaged his brother.\n\nGideon: \"Tell Marcie Vivienne needs to speak with her and that it's important.\"\n\nNoah: \"I'll do my best, but things have gone a little pear-shaped here today, and I don't think she will talk to anyone else in our family until this is done. Including me.\"\n\nGideon: \"What the hell does that mean?\"\n\nNoah: \"Just what I said. Don't worry. I'm on it. Tell Viv to hang tight, and I'll see what I can do.\"\n\nGideon: \"So it's all gone to hell then?\"\n\nNoah: \"Not quite, but it's a fair bit warmer from where I'm standing.\"\n\n*****\n\nMarcella sighed as she got out of the taxi she had grabbed after dropping Noah's keys with the concierge. She had an hour plus the time it would take to call his family and rally his calvary minus, so, a little over an hour. She hoped she had that long if not longer. If she were lucky, she would have the rest of the afternoon as long as the hastily laid plans she made in the taxi on the way here worked out for her. First things first, she blocked out all of the distractions of the Zenati family except for Olivia and what she needed to do to get the information she needed. \n\nShe'd always hoped to leave Noah behind today and not put him in the line of fire and as it happened Zanto and his news had been just the reason she needed to walk out on him. When he realised what she had done, he would be upset with her, not mad, but frustrated and worried she knew. A small piece of her mind told her she was being unfair to him after their time together, but she wasn't going to put anyone she cared about in the line of fire, and she had to admit, al-be-it reluctantly, that she had grown to care for him over the last week.\n\nShe cared, how could she not? His final words stuck in her mind and made her close her eyes momentarily. He hadn't meant it; he was just trying to get her to stay with that emotional blackmail. Nobody actually loved her. It wasn't anyone's fault. She just wasn't loveable. She'd come to terms with that years ago. Yet the look in his eyes as he made his declaration made her heart squeeze in her chest. Fuck, why now? No one had ever said that to her before. Not her parents or sisters, even when she was little. Not Apollo, who was the closest thing she had ever had to a real relationship, as fucked up as that was. No, people cared, like she cared about them, but love? No that was for romance novels and rom-coms, not real life and definitely not for someone like her.\n\nThe jeweller's shop loomed in front of her, and she checked the large wad of cash she had brought with her from her stash originally for when she needed to travel under the radar. That was step one, now for phase two. She didn't have to fake the sadness she felt as she spoke to the jeweller about being abandoned by a man she had been stupid enough to commit to with the bracelet and she needed it off her arm before she cut her own hand off.\n\nAs the jeweller worked through his collection of tools looking for the perfect fit, she felt the sting in the back of her eyes telling her that what she was doing was somehow wrong. She blinked her watery eyes, trying to hold back the tears she felt as the bracelet finally fall free of her arm. Thanking the jeweller profusely as any air-head would she gathered the two halves of the bracelet handed him a hundred-dollar bill and fled back outside. Next, she hurried to a Telstra outlet and bought a new phone. Time ticked by as it was set up for her and she tried not to seem too impatient as she waited long minutes for the assistant to hand her the phone and receipt finally. \n\nRacing into the nearest clothing outlet Marcella changed into a flowing dress and wore it out of the store after ripping off the tags to pay for it leaving her pants and shirt behind and stuffing the jacket into the oversized bag, she had with her. She rechecked her watch and cringed at the time. She hurried on to the next stop on her list and breathed a sigh that there was no line up for what she needed to do. She raced through the copying of the contract and paying to have the original held at the post office until it was picked up the following day. Then she hurried to the taxi rank and grabbed a cab again. \n\n\"Mindil Beach and an extra hundred dollars if you drive there as fast as you can,\" Marcella instructed. On the ride, she downloaded the contacts and apps she needed without syncing everything on her original phone assuming Noah would have some sort of tracking bug on that as well. At least she would be able to track him for a little while, at least until he found her bracelet.\n\nThe hour Noah had given her was almost up, and she knew she had run out of time. She considered all of her options and decided there was only one way to buy herself the extra time she needed and keep Noah and the Zanati chasing her shadow until she had made her move. She took a breath and typed out a text, then she erased it, and typed it again. Fuck! Marcella grumbled as she erased the text also without sending it. Hopefully, she would have enough time to make a clean getaway while he followed her bracelet and phone.\n\n\"Wait ten minutes for me please, and another hundred is yours she said, passing the previously promised money over to the cabbie. Getting out of the car Marcella hurried over to the last tent in the row marking the edge of the market. The owners were just setting up and distracted, so she bent down beside the tent and nudged the fabric over a bit digging a hole in the sandy dirt big enough for her bracelet and phone. Then she covered them over and sighed. When she returned to the cab, she shuddered. She was now walking this tight rope without a safety net, and she suddenly missed Noah's constant presence at her side reassuring her that she was not alone. \n\nShe tried to shake it off. They would all thank her in the end, even Noah. It was enough that Olivia had built the bridge she needed with her this morning. She felt a small twinge of guilt about not having enough time to call Vivienne before she went silent, but she had enough distractions today. If something had happened to her friend, she couldn't have handled it on top of everything else. So she contented herself with the idea that it was Vivienne who had asked her to call and therefore she was conscious and able to make demands and would be there when she finally finished this deal.\n\nShe thanked the cabbie, who seemed disappointed not to be asked to wait for her again and walked into the sailboat club where she had first met Bea as if the woman should have expected her to show up here rather than at the allotted meeting place. \n\n\"So you came, just as I expected,\" Bea announced as if she had read Marcella's mind. Marcella was escorted into the office, and one of the burly men at her side waved a detection wand over her, and she divested herself of her bag to prove there was nothing on her person then dumped her bag out on the table so they could see its contents. \"A brave woman to come here without your Zenati escort and bring what I wanted,\" Bea stated shrugging as she picked up a lipstick and turned it over to read the colour name. \"Wineberry,\" she commented and threw the lipstick back on the table with the rest of Marcella's belongings before picking up the envelope that held the promise she had extracted from Marcella. After a glance at the contents, she raised an eyebrow at Marcella. \"This is a copy?\"\n\n\"Yes, and the original is all yours, the moment we have verified the information you give us,\" Marcella said quickly. \"It's in a safe place known only to me so you can keep me as a hostage until the deal is done or I can return after the raid and tell you where it is and take you to it, your choice.\"\n\n\"You use the term we so easily for one who came here alone. Olivia didn't baulk at giving away such a prized estate?\" Bea asked curiously.\n\n\"It holds only fuzzy memories of pain for her. Something she would like to forget,\" she said a little of her anger at what had happened to her sister there colouring her tone.\n\n\"Remington could be a cruel man in many ways,\" Bea agreed. \"As could his cronies, it will be our pleasure to see the end of that circle of evil as much as it will be yours. You will be my guest for the evening, and we shall conclude our business in the morning.\"\n\n\"Tonight? You want the raid to happen tonight?\" Marcella gasped. \n\n\"It will when you feed the information to your contacts. I had planned to allow Noah to do that while you kept me company this evening, but as you have come alone, you can choose who you would like to speak to,\" Bea shrugged. \"The sooner you make that call, the sooner we can disappear for the evening.\"\n\n\"We will disappear?\" Marcella asked, narrowing her eyes.\n\n\"I think that's best, don't you? I imagine your Zenati man has the bloodhounds on your trail already so choose quickly,\" Bea encouraged. \"Or I will choose for you and you may not like that result as much.\"\n\n\"No? Who would you choose?\" Marcella asked.\n\n\"My men would pick up Noah Zenati as originally planned,\" Bea said. \"I imagine our host tonight will be disappointed by his absence. He is a very handsome man, after all.\" She gave a girlish laugh before continuing. \"You decide, though. I expect you have reasons of your own for leaving him behind.\"\n\n*****\n\nNoah didn't understand. According to his phone, Marcella was in this exact spot, but as he looked around, she wasn't here. He began to panic that he was already too late and the Suebi had killed her once they had what they wanted and she was hidden somewhere right under his nose. Or under his feet he looked down his stomach rolling in sickening turmoil at the thought. The ground where he stood seemed undisturbed, and he sighed until a tickle of a laugh entered his mind. His head whipped around looking for the source of that cackle. It was a sound he hadn't heard for weeks.\n\nIt took him mere minutes to locate her, sitting on a bench her white air blowing in the slight breeze as she ate ice cream and watched him curiously. She smiled and tilted her head down. She was gazing at a spot near his feet.\n\n\"She buried your means of tracking her there, but she is long gone and into the hands of your enemy,\" Imelda said casually, as if not realising how the second part of her statement wiped out the relief of knowing she was alive. He sighed and crossed to the bench she sat on. \n\n\"Why are you here?\" Noah groused unhappily. I thought your people left us to clean up the remainder of the mess.\"\n\n\"My people have gone, but I have stayed to repay a long-overdue life debt,\" she admitted.\n\n\"And that includes hounding me each time I fuck things up?\" he accused.\n\n\"Not at all,\" she cackled. \"It's merely a happy bonus for me to show you that all actions even though born of good intentions, can have consequences.\"\n\n\"They took her?\" he asked miserably.\n\n\"No, she went to them willingly to avoid the confrontation here. She did that for you because you made her care for you more than she wishes to admit,\" Imelda cackled again. \"She gave herself as collateral to ensure that she gets what she needs before handing over the original document that matched the copy she carried. She will complete this mission to save her sister before even considering what she needs for herself.\"\n\n\"Fuck,\" he ran his hands through his hair, feeling helpless and wondering how he could have ever let her go.\n\n\"You had no choice but to let her go. She asked you to prove your words to her by doing just that,\" Imelda said. \"Every person in her life who claimed to care for her forced into situations she didn't want, except you. You have given her choices not always good choices, but you have given her the choice of going alone and accepting the consequences or allowing you to help her. She understands that, and she understands that it hurt you today to let her leave,\" she soothed. \n\n\"It doesn't help me, knowing that. Not when she is in danger right now, and there is nothing I can do to help her,\" he snapped angrily.\n\n\"There is nothing you can do for her today that you have not already done. She has started a sequence of events that will sew chaos, not even I can see through to an outcome. Go and congratulate your brother on his impending fatherhood. You must leave this place as soon as possible and seek out your brothers. Help your table complete the discovery of evidence to free Olivia from suspicion. The place and the people are real as is the information Marcella has been given,\" Imelda told him. \"If you stay, the consequences may be more than are willing to pay.\"\n\n\"She already has the information she needed?\" he asked.\n\n\"Yes, but they continue to hold her as collateral until she gives what they need once the deed is done. You gave her much to think about. Not one person in her life has ever claimed to love her before today. Care yes, but not love and so she has believed herself unlovable. She did this to protect you, not because she didn't want you by her side. She will come back, but it will take more than threats or pretty words to make her choose this life with you. Those pretty words and threats have been given to her many times over by people who meant her nothing but harm,\" with that Imelda stood and blended into the growing crowd of the markets. \"Your actions can sway her heart, but you must choose carefully for it will take only a small falsehood to break her trust now. You must leave this place now or risk losing it all, go home Noah Zenati. She will return. Eventually.\"\n\nNoah wasn't sure how long he had been sitting there deep in thought after Imelda left when another person sat on the bench beside him, close enough to make him look up with a glare to make the person give him some personal space.\n\n\"She's not coming, is she?\" Zanto asked, rubbing his thumb in a line up and down the centre of his chest.\n\n\"No, she has given herself to the Suebi as collateral until the information exchange is complete,\" Noah sighed.\n\n\"Did she call?\" Zanto frowned, not knowing how his cousin would know that was what she had done.\n\n\"No, but trust me, that's what has happened. Now, all we can do is wait and see how the chips fall from her gamble,\" Noah said gruffly, fear for the woman he loved clogging his throat and making his voice rough.\n\n\"Not necessarily, did you have a tracker on her?\" Zanto asked. \n\n\"She took it off and buried it over there,\" Noah pointed vaguely toward the outlet at the end of the row.\n\n\"We can backtrack it and see where she went before here,\" he suggested. \"It might give us some clues about what was going on in her head if nothing else.\" He put his hand out for Noah's phone and felt a small jolt of relief as he absently handed it over. The two men sat in silence as Zanto worked on the phone as well as his own.\n\n\"Okay, let's go,\" Zanto said. \"Unless you want to sit here and do nothing until we hear from her. If we hear from her,\" he said, knowing he needed to push his cousin out of his funk. Noah snarled at him but got to his feet and approached the last known location of the woman he loved and looked with new eyes searching for her bracelet.\n\n*****\n\nVivienne startled when her phone rang. She thought she had turned it off when she was with Helena. She stepped away from where Gideon was collecting congratulations from the members of his family that were at the hospital with Dom and Xavier and dug her phone out of her bag prepared to turn it off. Something niggled at her and told her she needed to answer the private number in case it was Marcella calling because of her message. If she had gotten a message saying Marcella needed to talk to her, she wouldn't like it if her friend didn't answer and she knew Marcella didn't have the same phone since she had left hers here at the hospital when she left. The phone had almost rung out when she swiped the screen to answer.\n\n\"Hello?\" Vivienne said, unsure of herself.\n\n\"Hey, what's so important that I needed to call in the middle of all this mess?\" Marcella said a little abruptly taking Vivienne by surprise.\n\n\"Marcella! Thank God, are you okay?\" Vivienne asked feeling silly now that she had insisted Gideon get her to call.",
        "\"Oh, I'm just dandy, or I will be by this time tomorrow. Is Gideon with you?\" Marcella asked.\n\n\"Yes, we are at the hospital I had some tests done,\" Vivienne explained.\n\n\"What? Tests for what?\" Marcella gasped, her heart jumping in her chest.\n\n\"I wasn't feeling great, but it's all good. It is totally normal, apparently. You're going to be an aunty next year,\" Vivienne couldn't help the smile that covered her face.\n\n\"Oh Viv, I'm happy for you, honestly. I know I haven't always been the best friend, but I know that is what you wanted more than anything. I have a lot on, but you can fill me in on all the details in a couple of days, okay? I will call, and we can spend hours talking,\" Marcella promised knowing she was on the clock, so to speak. \"But for right now can I talk to Gideon please?\"\n\n\"You can't get mad at him for knocking me up,\" Vivienne warned with a laugh.\n\n\"Don't be silly. You two are going to make great parents just don't forget who you are in the process. Make time for what you want as well as the men in your life because I imagine your son will be as big and loud as his Papa,\" Marcella cajoled. \"Now can I talk to Giddeon please, it's important.\"\n\n\"Are you okay?\" Vivienne asked guardedly. \n\n\"No, I'm in a little bit of a jam, and I really need to talk to Gideon. Please Viv, just put him on,\" Marcella practically pleaded at this point.\n\n\"Gideon, somethings wrong with Marcie, she says she needs to speak to you,\" Vivienne said making everyone in the room go quiet as Gideon took Vivienne's phone her with a frown.\n\n\"Marcie?\" Gideon asked.\n\n\"Yes, have you got a pen handy I need you to write some stuff down, it's urgent, Gideon, I only have a few minutes here,\" Marcella let that urgency colour her voice.\n\n\"Where's Noah?\" Gideon asked with concern.\n\n\"He's fine he's probably on his way to you even as we speak,\" she said. \"I don't have time for this twenty questions bullshit. Are you at the hospital with Dominic and Xavier?\"\n\n\"Yes, and I have a pen,\" he snapped back at her.\n\n\"Put me on the speaker then, this concerns them too,\" she announced. She waited until she heard the hollow echo and began reading the details of the Suebi leading players who would be at the meeting tonight and the address of the place they had been looking for so long, the house of Olivia's nightmares, Hermione's. Bea listened to her carefully after giving her the notebook with the details written out explicitly for her and nodded in approval.\n\n\"I am the collateral they need. I will be free again tomorrow night. Get what we need for Olivia, please Gideon, I'm trusting you to do this for me, please don't let Olivia or me down,\" She pleaded. \"This can't all be for nothing.\"\n\n\"Marcella, tell me where you are. We will come and get you,\" Gideon demanded.\n\n\"No, I need to do this. It was always my plan. They need to prove themselves to me as much as I do to them,\" she paused and swallowed hard. \"Gideon. Tell Noah I am sorry, but he deserves better than a broken bitch like me.\" With that, she hung up, before he could argue with her and the silence of the hospital room broke with expletives and rapid movement as they called everyone together for a meeting of the tables. Gideon sent a message to Genesis and called Noah not knowing what he would find or even if his brother knew what she had done.\n\nGideon looked up at his wife and saw the tears in her eyes. Dragging her into his arms while still holding the phone to his ear, he rubbed her back and swore as Noah's phone went to message bank.\n\n\"Someone find Noah and bring him in,\" he shouted above the cacophony. Then he leaned down to Vivienne's ear and whispered. \"We will get them back, both of them,\" he vowed. Then looked at his phone as it began to fill with pictures of the Suebi they would be looking for tonight courtesy of Marcella and whoever held her as collateral.\n\n*****\n\n\"If you answer that we will be called in,\" Zanto warned when Noah's phone began to buzz and Gideon's picture flashed onto the screen.\n\n\"If I don't answer it, they will come looking for us,\" Noah said. \"You don't think they are already concerned about where I am what I am doing?\"\n\n\"Let's just check out this last place she went to then you can call Gideon back, and I will call X,\" he held up his phone to show missed calls and texts.\n\nNoah grunted but followed Zanto's lead to a post office. Then he stood aside and waited as he asked the woman at the service point if she had seen Marcella showing a picture on his phone. It hadn't occurred to Noah until that moment to wonder why Zanto had a photo of her on his phone, and he frowned. Maybe from when they had been trying to find her when she left the hospital. The kid was a genius with tech, after all.\n\n\"She did some copying and got the copy notarised by a Justice of the Peace before leaving the original with them to be picked up in the morning,\" Zanto said. \"So we know where she will be in the morning if we can't find her before then.\"\n\n\"Why are you so invested in this? Why do you have her picture of your phone? You've barely talked to her before today,\" Noah asked, pinning his cousin with a suspicious glare.\n\n\"It doesn't make any sense to me either but I need to know she's okay. I can't explain it,\" Zanto unconsciously rubbed at the centre of his chest again making Noah frown.\n\n\"Chest pain?\" Noah asked, gritting his teeth. \"Rock in your belly. Feel like you're going to pass out?\" This wasn't fucking happening. Marcella was his. He loved her. He had been killing himself to get her to trust him; fate could not be that cruel as to take her from him like this. He drew his breath as Zanto continued to nod his head to each of his questions. \n\n\"Yeah, how'd you know?\" Zanto asked.\n\n\"We need to see Gianni,\" he growled and stalked away.\n\n\"Seriously,\" Zanto asked as he caught up to Noah again. \"How'd you know that?\"\n\n\"Because aside of the chest pain that's how I feel when she's out there putting herself in danger,\" he snapped and shut his mouth before declaring his love for her.\n\n\"You don't look like I feel,\" Zanto said warily. \n\n\"Fuck!\" It was true he didn't feel the crippling sickness he usually did when she ran away and did something stupid. Had the curse jumped from him to Zanto when she had left him after he told her that he loved her and she didn't reciprocate? There was no way he could just stand back and let that happen. She was his, and he wouldn't be giving her up to anyone without a fight. He began to feel sick at the idea of losing her not to the risks of what she was doing but to another man, and strangely the feeling reassured him. Lost in his thought Noah didn't notice the two men approaching or pay attention to the warning hiss from Zanto as he trudged toward the car.\n\n\"Noah,\" a friendly voice called, and Noah lifted his head as Zanto stepped forward to block him.\n\n\"Yeah, who wants to know?\" Zanto thundered bristling at the two men. They looked like they were down on their luck or homeless even. Both wore scruffy ill-fitting clothes had longish hair and scraggly beards.\n\nNoah blinked in confusing, turning his head to look at Zanto and then back at the two men. He shouted as soon as he saw the gun. The shining weapon was obviously expensive and looked out of place in the hand of the scruffy man who carried it. The sound was muffled from the silencer, but he heard the shot, only it wasn't aimed at him. He spun again and saw Zanto go down, clutching the bloody wound high in his chest and crying out.\n\n\"Fuck! What did you do!\" Noah roared hitting the panic button on his phone, hoping that one of the witnesses would call emergency services. Pain tore through his leg but when he looked up, the men were gone, and bystanders were beginning to crowd around him. \n\n\"I called an ambulance,\" one guy said thrusting his phone at Noah, \"They need details.\"\n\n\"Shot in the chest, breathing raggedly,\" Noah grunted waving away the phone. \"Fuck, Zan. Hang on, man, hang on for me. You shouldn't have even been here you stupid Fuck! So, you hang on or I will...\" Will what? What could he do? Strangers surrounded him, and his cousin was bleeding out on the ground. Surely someone had noticed and caught the whole thing on their phone. Nothing that happened ever stayed private anymore.\n\nThe watcher was there, of course, Zanto had watchers Noah thought with relief. He was the baby of the family. They would have seen it and called it in as soon as it happened. Noah lost track of time as the watcher started first aid and spoke to the man who had the ambulance service on his phone relaying information as he went about trying to save Zanto's life. They'd come for him. They meant to kill him. Why would Zanto do that, fuck. He made them think he was Noah. Fuck! Someone wanted him dead and had tried to kill his cousin, Fuck! How the fuck was he going to tell Junie that he almost got her baby killed. Fuck!\n\n\"Put this over your wound and press as hard as you can manage,\" the watcher commanded taking the phone from the bystander and relaying details of two gun shot victims. Noah swung his head around to see a second and in his haze of confusion he looked at the gauze pad in his hand. \n\n\"Give it to me,\" a second watcher who had just arrived said and pressed the pad to the back of Noah's leg. \n\n\"Fuck!\" he groaned and flinched away. He'd been shot too? When had that happened?\" His eyes went back to Zanto, his face was pale and his eyes squeezed shut but he made no sound as the two men worked to help them and a siren could be heard in the distance. Imelda had warned him that the price he paid for staying at the market would be too high and still he hadn't left when he should have. It was all his fault. Everything, Marcella, Zanto fuck, even the fact that Olivia was still a suspect despite his best efforts, it was all his fault. He fell back as soon as the watchman had released his hold on him. \n\n\"It's a graze, you'll live,\" he said and turned his attention to his partners struggles to help Zanto. The crowd had moved back Noah realised in his state of numb confusion. The ambulance, good, it was here and Zanto would be okay. He had to be okay.\n\n*****\n\nOlivia trailed behind Genesis as he entered the home of his uncles, and was immediately engulfed in the warm hug of Junie. The older woman clucked and clicked her tongue at Genesis shooing him away to the athenaeum where the men of the tables gathered and guided Olivia through to a cosy sitting room where many other women gathered.\n\n\"Oh Good, you're finally here,\" Emma came to greet Olivia with a firm embrace and a kiss on the cheek. \"Come in we're celebrating Vivienne's good news.\"\n\n\"Good news?\" Olivia asked, still stunned by the speed at which Genesis had hustled her out of the house.\n\n\"We aren't celebrating anything,\" Vivienne admonished. \"Emma is trying to take everyone's mind off what is happening tonight.\"\n\n\"I could use some good news,\" Olivia said, feeling sick that Marcella was now a hostage of the people who had held and tormented Olivia for so many months. \n\n\"You're going to be an Aunty next year,\" Vivienne smiled and placed a hand over her belly.\n\n\"Congratulations,\" Olivia smiled genuinely at her friend and tried to still her nervousness for her sister. \"That's great news.\" She tried to put some emotion into her voice, but instead of sounding happy for her friend, she sounded sad and hated that she couldn't pull herself together now. She had done so well at keeping up a brave front with Genesis who, like Gideon was desperately trying to find Noah but now that he had gone to talk with the other men of his family, she could feel her bravado shattering around her.\n\n\"She's going to be okay, Olivia. We have to believe that. She is brave and dauntless. If anyone can find a way out of this situation, she can. She is a survivor, think of everything she has survived, and this will be just a walk in the park for her,\" Vivienne encouraged.\n\n\"I know,\" Olivia nodded. \"Did Gideon find Noah?\" she asked hopefully even though she was sure that Genesis would have told her if he had.\n\n\"I don't think...\" Vivienne cut off her words as shouting and noise sounded from somewhere in the house.\n\n\"Junie, come with me,\" Gianni said, appearing at the door. \"Nobody else leaves this room until your husbands, or I clear you,\" he warned the other women. They had been gone only two minutes when a panicked shriek from the front of the house met their ears, making the women all tense and look toward the doors.\n\n\"This is nothing new. We've been through a lockdown before. This house is the safest place for us and our children, so we sit tight and trust that everyone will be okay,\" she said. \"We will find out what we can when we can, until then, lest talk about the gathering. It's coming up fast now, and we all have our jobs to do plus we have two new helpers to lighten the load,\" she smiled at Vivienne and Olivia.\n\n\"I have a project I am keen to get started on but if anyone needs help just let me know. Be warned I'm a hazard in the kitchen, but I can clean up or look after the children if you need,\" Vivienne offered.\n\n\"I'm going to be working on the project with Vivienne,\" Olivia supplied. \"I'm not sure I will be able to go to the gathering with the AFP still investigating me and the time I spent with the Suebi.\" She admitted not shying away from what she had done before coming to Genesis and the family.\n\n\"I thought you wanted to talk to Marcella first?\" Vivienne frowned at Olivia's polite decline of the offer extended to her.\n\n\"I spoke to her this morning, she said the stories were mine to do with what I wanted, but she would help if I were serious about writing the books,\" Olivia said quietly. \"I have some sketches of the characters, most of them were lost on my boat though so these are just... well they're not as good.\" Emma cleared her throat, making the two women look up from their quiet conversation. \"I'm sorry, a conversation for another day,\" Olivia hastily apologised.\n\n\"I think it's a good time for the conversation. Why don't you tell the ladies about Ella, the Imperfect Princess?\" Vivienne encouraged.\n\n\"Ooh does it include the frog called Apollo?\" Emma asked enthusiastically. \"I always wondered about that.\"\n\n\"Yes, but not at the beginning where the project will focus,\" Olivia said quietly. \"It's not really a story for grown-ups. It's more stories to help children understand and deal with some of the harder things they might come across.\"\n\n\"You don't have to share if you don't want to,\" Shari said equally as quietly. \"We are just interested in getting to know you and your sister better because we are sure you will be part of our family for this gathering and many beyond that.\"\n\n\"I, for one, could use a story. My daughter Helena will never leave the hospital when she is told to seek safety,\" Mikayla sighed. \"But I guess that can be a good thing because I tend to find out what's going on before my husband deigns to fill me in,\" she rolled her eyes.\n\n\"I know Helena,\" Olivia said then. \"She's very nice. Is Hector your son too?\"\n\n\"No, he is Junie's son. But you are right. Hector is a very nice boy,\" she laughed.\n\n\"It's a big family, even I have a little trouble keeping everyone straight now and then,\" Bronwyn piped up joining the laughter. \"Especially with the twins,\" she sighed, \"But I think they try to confuse us on purpose. I could use a story too.\"\n\n\"Think of us as a sounding board to work out any kinks in your story,\" Emma suggested.\n\n\"It's not actually my story. It's Marcella's story, but she gave it to me,\" Olivia said. \"Vivienne thinks it could be used to help other kids who feel a little scared sometimes. I don't think it's a story for adults.\"\n\n\"I'm a little scared right now, especially after the last attack on the tables being so recent,\" Mikayla said. Luckily most of the women in the family are already down at the station getting ready for the gathering. So, we know they are safe.\"\n\n\"No one will judge you, Olivia. I promise,\" Vivienne said with gentle encouragement. \"I'll start for you because I know the first bit by heart.\"\n\n\"Once upon a time in a land far away, there lived three sisters. They were brought up in a beautiful castle with a handsome king and a pretty queen. From outside the walls of the castle people saw only what they wanted to see, a happy family who had everything they could ever want, but it wasn't always like that for the three princesses inside the castle walls,\" Vivienne began, then looked to Olivia to continue.\n\n*****\n\n\"I don't understand why he did it?\" Noah said as Gideon ran towards him along the hospital corridor. \"He's in surgery and it's my fault. Everything is my fault,\" he tugged his hands through his hair. \"The Suebi have Marcella,\" he grimaced, and slid down the wall he had been leaning against as if the arrival of his brother had sapped the last of his strength and all he could do was crumble.\n\n\"You need to let Helena look at your leg now. Hector is with Zanto. You did everything you could, now you have to look after you,\" Gideon said helping his brother to his feet and keeping an arm around him as he all but dragged him into the emergency room and a curtained off area to have his own wound cleaned and dressed and probably stitched if the amount of blood was anything to go by.\n\n\"Decided to stop being a stubborn arse I see,\" Helena said as she entered through the curtain. Noah didn't respond only closing his eyes and reliving the past twelve nightmarish hours. \n\n\"Gideon?\" Pietro called through the curtain. \n\n\"What?\" Gideon said tersely as he stepped back through the curtail to see one of his younger cousins standing there. \n\n\"Papa is questioning the men who did this and Orlando is on his way to the airport with watchers to pick up a Severino Gambaro who we believe hired the two men to kill you,\" Pietro said quietly. \"We don't think this was related to the raid tonight or the Suebi. We think Severino was trying to make sure Marcella would return to Perth by threatening the people giving her sanctuary here. For whatever reason they want her back, or so it seems.\"\n\n\"Good. I'll let him know,\" Gideon nodded. \"Anthony and Gianni are with Junie in the waiting room, go fill them in.\" Gideon twitched the curtain aside and saw Helena stitching the open wound on Noah's leg as he lay there stoically silent while she worked. He quickly typed out a text to Xavier.\n\nGideon: \"Someone better let Oscar and Izzy in on what happened before this becomes an issue between the thirteen.\"\n\nXavier: \"Already on it. Noah? Zanto?\"\n\nGideon: \"Noah stitches and shock, probably. He's conscious but not himself. Zanto still in surgery.\"\n\nXavier: \"Keep us posted.\"\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "brothers",
        "domination",
        "family",
        "submission",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-26"
}