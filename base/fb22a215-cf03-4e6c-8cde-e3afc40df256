{
    "title": "Serpent's Salvation Ch. 07",
    "pages": [
        "This work is copyrighted and is property of the author. If gay stories offend you or if they are illegal in your area, leave. Any resemblance to any people alive or dead, or any event is purely coincidental.\n\nAurel was sleeping peacefully, curled around a pillow that he pretended was Sebastian, when Mych burst into the room. \n\n\"Wake up! We need to get moving.\" \n\nAurel was instantly on the alert. He sat up quickly, running his fingers through his hair. \"What is it?\" \n\n\"Don't panic. He's fine.\" \n\n\"What happened? What's wrong with Seb?\" He tossed the bedcovers into a corner as Mych threw him some clothes. He put on the jeans and sweater in record time as Mych gave him the bare facts.\n\n\"But he's all right?\"\n\n\"Just some cuts and bruises. He wasn't going very fast and he had his seatbelt on. I'm having things stalled at the clinic.\"\n\nAurel cursed, glaring at Mych. \"How did this happen? You were supposed to be watching him.\"\n\n\"I don't know. I had some of my best men on him. They were prepared for different scenarios...\"\n\n\"But?\"\n\n\"We fucked up. No one figured on a sniper. It just seems so...human. It's not your way. It's not ours either.\" Mych hung his head. \"I was caught off guard.\"\n\nThere wasn't much for him to say after that. Aurel finished tying his shoes then they were both out the door, streaking down the hall.\n\nBy the time they exited the house and got into the waiting car, Aurel was almost rigid with anger. He stared out the window as they swept down the drive. Mych still couldn't meet his eyes.\n\n\"I can't begin to tell you how sorry I am. I've shamed myself and my-\" Mych stopped and shook his head, staring out the window and seeing nothing. \"No. I shamed them long ago.\" He shifted in his seat uncomfortably. \"It was actually quite brilliant of them. Firearms are so anonymous. With everything at our disposal, who would think to use something so-\"\n\n\"Human?\" His sarcastic tone was like dry ice. \"It sounds like dumb luck was the only thing that saved him. No one else was prepared to.\" Aurel knew he was being unfair, but he couldn't keep the bitterness out of his voice. His Sebastian could have been killed\n\n\"I take full responsibility. I should have had everything covered.\"\n\n\"I don't know if I can forgive this Mych.\"\n\n\"I know.\"\n\n\"Do you? Do you really? Most mates can't live without the other. If anything happens to him, if anything-\" Aurel choked up for a moment, mind blanking; unable to even process the thought. \"I'm dead.\"\n\n\"No. I won't let that happen.\"\n\nAurel finally looked at him then, a cold, hard look. \"What is your job description?\" His voice matched his eyes.\n\nThe change of subject caught Mych off guard, but he answered quickly. \"I protect you at all costs.\"\n\n\"Almost all costs. The well being of the Clan comes before me. Just because they are usually one and the same does not mean that they're mutually exclusive.\" The explanation was rattled off with the ease of constant use. Aurel was constantly reminding, Mych conveniently forgetting.\n\nAurel turned back to the view outside. \"Sebastian is now your first priority. Protecting him is protecting me.\"\n\n\"But-\"\n\n\"That's an order. Assign someone else to me. You will personally see to his safety.\"\n\n\"I can't do that.\"\n\n\"You will do it.\"\n\n\"We need to discuss this. I can put Ruvn on him; next to me he's the best. I couldn't trust him more if we were full-blood brothers.\n\n\"I don't-\"\n\n\"Please- don't ask this of me, I beg you. I can't do it.\"\n\n\"Why not?\"\n\nMych shook his head, unable to answer that. \"Please.\"\n\nThey rode in silence for a while, watching the marshland give way to trees and the beginnings of an urban sprawl. Neither wanted to break the vacuum of silence left in the wake of Mych's entreaty. He had never humbled himself like that; ever. Yet Aurel knew that he would do it again and again. The quiet stretched between them, whipcord tight. \n\nIt wasn't until they were pulling into the clinic that Aurel relented with a sigh. \"Is Ruvn up to the task?\"\n\n\"Yes.\"\n\n\"Don't answer in haste. Is Ruvn willing to give his life to protect Sebastian?\" Aurel's every word was clipped and precise.\n\n\"Yes. Talk to him if you like. He knows what he is about. Just- don't do this thing.\"\n\n\"I'll talk to him.\" For once, to Mych's surprise and dismay, Aurel exited the car first. Mych expected him to dash for the clinic and made to follow, but was surprised when Aurel turned and grabbed the door, stooping down to be eye level with him.\n\n\"I love you like a brother, and I forgive you...this time. But understand this: If anything happens to Seb; before I die, everyone who contributed to his pain will suffer. Everyone. Are we clear?\"\n\n\"Crystal.\"\n\n\"Are we all right?\"\n\nWe'll always be all right. \"Yes.\"\n\n\"Then let's go.\"\n\n\"Aurel,\" Mych stopped him with a small touch to the arm. \"He'll be safe.\" Mych stared at him, willing him to understand the total sincerity behind his vow. \n\nI promise.\n\n<p align=center>***</p>\n\n\"Thanks for coming Rob. They should be done dicking me around soon.\"\n\n\"Don't thank me. You almost got yourself killed. What is up with you? I think I deserve an explanation; one that isn't pulled out of your ass this time.\"\n\n\"Speaking of my ass, did you bring me a change of clothes? This paper robe is a mite...drafty.\" Seb waved the sides of the parchment-thin gown like a pair of wings to illustrate his point. \"And I guess I have to wear my contacts now.\"  \n\nHe sighed as he surveyed the ruin his glasses had become. He had liked them. They were supposed to be made out of some sort of indestructible NASA stuff and had cost almost as much as the last shuttle mission. He wanted his money back. He should sue the pants off of them. Speaking of pants; he eyed Rob's messenger bag speculatively.\n\n\"Oh no you don't,\" Rob said as he avoided Seb's grasping hand. \"Not until you come clean. Why are you being shot at?\"\n\n\"What makes you think it wasn't some random nutcase in a clocktower?\"\n\n\"You piss off too many people. Why believe in coincidence when there are so many willing to take a number?\" The fight suddenly drained out of Rob and he sat down heavily, facing his friend with a weary look.\n\n\"Seb. You almost died. Don't keep this to yourself man. Something's been up with you.\"\n\nSebastian was wondering what to say, how to explain something that even he had a hard time wrapping his brain around when the world's ugliest male nurse poked his head in the door and looked him up and down with an air of disapproval. Seb would have been offended, but he had looked at Rob, the doctor, even the wheeled trolley the same way. He supposed the man's egalitarian disdain was refreshing.\n\n\"Your boyfriend; He is here. Yes?\" Then he was gone as quickly as he had come, not bothering with an answer. Everything seemed to go quiet for a moment; but only until Rob erupted.\n\n\"Boyfriend!\"\n\n\"I don't have a boyfriend,\" Seb hissed.\n\n\"Yes he does.\"\n\nSeb and Rob both turned towards the door; now filled with Aurel, who had to stoop a bit to enter the room. Rob's jaw dropped as he looked from Aurel, to Seb, then back to Aurel. The look that he finally leveled at Seb was accusing; accusing and hurt.\n\n\"You have a boyfriend and you didn't tell me?\"\n\n\"He is not my boyfriend!\"\n\nAurel walked up to Seb, cupping his face in one hand as he gave him a soft kiss on the cheek. Seb couldn't stifle a soft sound of approval, or stop the way his eyes closed as he felt Aurel's stubble against his own cheek, but he quickly disengaged, eyes daring Aurel to argue with him.\n\n\"I suppose I'm not actually his boyfriend,\" Aurel said, earning Seb's triumphant approval. \n\n\"See? Told you so.\"\n\n\"I'm his lover.\" \n\n\"We haven't even had sex!\"\n\n\"Yet.\"\n\nWhile Sebastian stewed in his own fury, Aurel zeroed in on Rob, holding out his hand. \"Aurel Draco. You must be Rob. Sebastian has told me much about you.\"\n\n\"That's funny. I haven't heard a thing about you.\" Rob's expression promised pure undiluted evil when he looked at Seb, who was looking anywhere but at him and Aurel.\n\n\"Yes you have. I must have mentioned him.\"\n\n\"Nope. I would've remembered you mentioning a big bohunk built like a brick shithouse.\"\n\n\"Rob!\"\n\n\"No, please continue. I must admit, this is perhaps the first time I've been compared to either a laborer or shit in such a complementary fashion. Or do I assume too much?\"\n\n\"Uh...\"\n\n\"Aurel! Don't pick on Rob,\" Seb said, pointing an admonishing finger. \"And you,\" He swung the offending digit towards Rob, \"You can get your man-panties out of their little bunch. You don't tell me about all of your women.\"\n\n\"That's because I throw them away like tissues.\"\n\n\"And I'm not allowed to have a little Kleenex of my own?\"\n\nRob studied Aurel for a long while, taking in the expensive clothes, the precise haircut, the determined and slightly offended face, his size. When he turned back to Seb he was incredulous. \"Dude. If you think a guy like that is disposable, you're dumber than I thought. I mean, dumb as a post.\"\n\n\"This is precisely what I have been telling him.\"\n\n\"See Seb? He agrees with me. I like him. Obviously first-rate boyfriend material. Now that we've gotten the pleasantries out of the way, can either of you tell me just what the fuck is going on?\"\n\n\"I'm not saying a damn thing until I get some clothes on.\"\n\n\"I don't know about that. I rather like your flimsy dress,\" Aurel said.\n\n\"It's a hospital gown, not a dress.\"\n\n\"Semantics, Seb, just Semantics. Looks like a dress to me too.\" Rob looked at Aurel and winked.\n\n\"Don't flirt with my boyfriend. And don't gang up on me. I'm fragile right now, damn it!\"\n\n\"Yeah, you're a delicate southern flower. And what was that about him not being your boyfriend?\"\n\n\"Just give me my clothes.\"\n\nSebastian tried to dress without putting on a show, but bits of him kept popping into view. He had been naked around Rob plenty, but the idea of being naked in front of Aurel was unsettling. He didn't want his best friend to see him hormonally unglued like that.\n\nHe didn't know how women could do it. His cousin Anne could remove or put on her underwear without getting undressed; he could barely put on his pants. The few bruises he tried to work around didn't help though. \n\nHe eased the waistband over his sore abdomen, grateful that he liked his sweatpants loose. He left the cords unknotted and pulled off the paper outfit.\n\nAurel exhaled sharply. They had kissed, yes, but he hadn't seen Seb. He had a pretty good idea from the clingy shirt he had worn last night, but he was still woefully unprepared for the real deal, for the unintended bump and grind, the smooth chest. The way the low-riding sweats hung on his hips, exposing tanned flesh.\n\nRob gave a little whoop. \"You better hurry up Seb. He's starting to drool. And his eyes are glazed like a donut. I guess you really aren't putting out yet.\"\n\n\"Who says I'm going to put out.\"\n\n\"You.\" Rob gestured vaguely towards Sebastian's crotch. Seb bunched up the gown and threw it at Rob. He was about to pull on a soft oversized tee when Aurel stopped him.\n\n\"Wait.\" Seb felt Aurel's fingers on the side of his neck and collarbone. It felt good; it felt right, and he unconsciously leaned into Aurel's touch before wincing and drawing back. Aurel had been tracing a long cut along Seb's neck and collarbone. It wasn't deep at all, just a scratch really, but it hurt like a papercut. \"Are you sure you're ok?\"\n\n\"Positive. They did an ultrasound for internal injuries. I didn't even need stitches, just a few butterfly bandages.\" Seb slowly put on his shirt, being extra careful of his bruised elbow.\n\n\"That's going to be a hell-bow for the next few days,\" said Rob.\n\n\"Yeah.\"\n\nAurel was being very solicitous in a totally non-sexual way. He helped ease Seb's shirt down and smoothed the fabric; even turned the tag inward so it wouldn't rub Seb's neck. Seb felt both uncomfortable and ridiculously pleased that Aurel was treating him like this in front of Rob.\n\nTreating him like he was important.\n\nAurel had finished with his shirt, and was just looking at Sebastian with a slight frown marring his expressive mouth. Seb would have thought he was angry, but Aurel had taken his hand and pressed it against his chest. Seb could feel the rhythm of Aurel's heart, and the soft stroking of Aurel's thumb on the back of his hand was making his stomach flip-flop. Mixed signal city, but Sebastian enjoyed it too much to question it.\n\n\"Excuse me.\" Rob was gratified when they both turned toward him wearing the same look of annoyance. \"You can both play kissy face later. Tell me what's up.\"\n\nArgh. Seb didn't know what to tell him. He was just starting to piece together something when Rob thumped him.\n\n\"Hey! I've got a bruise there.\"\n\n\"You deserved it. Whatever you do, don't tell me the story you were just making up; I'll do more than thump you.\" Rob looked at Aurel. \"You're lucky. Your boyfriend can't lie for shit.\"\n\n\"I wasn't going to lie to you.\"\n\n\"Semantics again. What were you going to do? Stretch the truth? Exaggerate? Work on your creative literary abilities?\"\n\nAurel made an exasperated noise. \"He doesn't need to lie to you.\"\n\n\"I don't?\"\n\n\"No, you don't.\" Aurel pushed a chair against the back of Seb's knees. Seb slowly sank down, giving him a look. Aurel leaned against the wall, arms crossed over his chest. \"This is my fault.\"\n\n\"Why? Did you shoot at him?\"\n\n\"No! God no. On my life, I swear.\"\n\nRob shrugged. \"Then I don't see how you can take the blame.\"\n\n\"I'm involved in politics. We're working on a rights issue and the opposition is intense. I've been threatened; there have been a few failed attempts on my life that left two of my guards dead. One of my cousins is missing, presumed dead; one of my best friends was bought.\" Aurel's chin met his chest. \"He committed - suicide - before we could learn anything. We are attempting to track down the culprits\"\n\n\"Damn. That's harsh. I'm sorry about your friends.\" Rob gave a slow whistle. \"You know, Seb, when I told you that you needed a little excitement, this is not exactly what I had in mind.\"\n\n\"Tell me about it.\"\n\n\"I wish there was something I could do to right this. I'm trying. But I don't - I can't - wish that we had never met; I just wish that our meeting was under better circumstances.\"\n\n\"Yeah, me too. Look, maybe you should give me your email address. We can keep in touch when I get back to Texas.\"\n\n\"Back to Texas?\"\n\n\"They're shooting at me. I'd think getting the hell out of dodge would be an excellent idea, wouldn't you? All the kung-fu in the world won't help against an assault rifle.\"\n\nThe idea of Seb going away made Aurel's gut clench, but he tried hard to look nonchalant. \"It's not going to be that easy.\"\n\n\"Why not?\" Seb had a sinking feeling; just knew what Aurel was about to say.\n\n\"You're not being targeted because you are handy. They know that taking you out would get to me. They won't care if you are here or in Texas. They'll find you.\"\n\n\"So you're saying I'm fucked!\"\n\n\"No. I'm saying that the safest place for you until this is sorted out is with me.\"\n\n\"Like hell!\"\n\n\"Think about it. I'm going to see what needs to be done to get you out of here.\" With that, he left, leaving a bewildered Sebastian behind.\n\n\"Damn dude.\"\n\n\"So what do you think?\"\n\n\"Well, I suppose he's ok if you like rigid and Aryan, but-\"\n\n\"I meant about what's going on!\"\n\n\"Fuck. I dunno. I mean on one hand, you're being shot at. This is not a good thing.\"\n\n\"Thank you Captain Obvious.\"\n\n\"On the other hand, you got this guy that is...what the hell did you do to him anyway?\"\n\n\"What do you mean?\"\n\n\"You can't have known him for very long, and he's completely gaga over you. Foaming at the mouth. Did you slip him a pill or something?\"\n\n\"You think he likes me?\"\n\n\"Like I said, dumb as a bag of hammers. Of course he does. Hell, he was shaking when he entered the room. He doesn't even really look at anything but you. It's disturbing as all get out.\"\n\nSeb couldn't help the smile that spread across his face.\n\n\"But you are being shot at. How was it you weren't hit anyway?\"\n\n\"The CD player.\"\n\nHe knew what Seb listened to even better than Seb. Rob snickered. \"You know what that means don't you?\"\n\n\"Sure. Erasure saved me from certain death.\"\n\n\"You are so queer.\"\n\nSebastian was about to protest, but reconsidered after mentally replaying what he just said. He shrugged instead. \n\n\"Rainbow cock rings are less queer.\"\n\n\"You're going to milk this for all it's worth, aren't you?\"\n\n\"From the sound of it, I'm not the only one that's going to be milking something.\" \n\nSebastian had a lot of practice ignoring Rob's attempts to bag on him. \"I don't know. I should probably leave. I'm sure I can set something up in a hurry. I don't have to go home. This way I won't have to worry about mom and dad too.\"\n\n\"You don't seem too concerned.\"\n\n\"I don't want to dwell on it too much. There's nothing I can do to change it and if I think about it, it'll make me crazy.\"\n\n\"What about the cops?\" Sebastian gave him an 'are-you-nuts?' look, making Rob grimace. \"Sorry. I wasn't thinking.\"\n\n\"And,\" Seb took a deep breath. \"You should probably take a little vacation.\"\n\n\"Oh no. I'm here whether you like it or not.\"\n\nFor a moment Seb couldn't speak. Rob had said that to him once before. Sebastian had come out during his sophomore year in college, to the dismay of some of their friends. At the time, Rob had only been a fairly good acquaintance; someone to have an occasional beer with. Seb, not used to being shunned, was devastated when a few close buddies turned on him. Rob showed up at his door that night with a split lip, a bottle of vodka and some cheesy movies. He took care of Seb that night, cementing the new friendship. \n\n\"This isn't college, we aren't nineteen, and this could get you killed.\"\n\n\"Life can get you killed.\"\n\n\"Don't be so flip. I'm serious.\"\n\n\"Whose being flip? I mean it. I'm sticking around. And...\" Rob was suddenly intensely absorbed with the pattern on the linoleum floor. \"I think that you should consider staying with him.\"\n\n\"You little traitor! He's the one that got me into this mess in the first place.\"\n\n\"It's not like he meant to. Shit happens. And you have to admit that he can probably do a better job of covering your ass than you can alone. He looks like he has more money than God. Did you see his shoes?\"\n\n\"Shoes? People are trying to kill me and you want to discuss his footwear? Are you sure that you're not gay?\" Part of Seb's mind was dedicated to arguing, but a different part, the new, pervy one, was now thinking about Aurel, covering his ass.\n\n\"Positive. I was vaccinated for it as a wee child.\" His smile looked strained, then faded all together. \"Seriously- I don't want anything to happen to you. If you need to stay with this guy you've got snowed, then do it. Pride won't protect you from a lead salad.\"\n\n\"I'll think about it.\"\n\n\"Think about what?\"\n\nIt was Aurel again. Seb started, looking slightly guilty. Rob just smiled at him.\n\n\"Seb's going to consider staying with you.\"\n\n\"Wait a minute-\"\n\n\"Excellent. I've gotten all of his paperwork done, so he's free to go. I'm having the car brought around.\"\n\n\"I'm not just-\"\n\n\"Good. If you want, I can get his stuff together. I have a key to his place. You can have it picked up or I can drop it off; doesn't matter.\"\n\n\"I refuse to-\"\n\n\"That is most kind. Here's my card, it has all of my pertinent information on it, and Sebastian will have his phone. Thank you for helping him this morning, I am indebted to you. Consider yourself under my protection as well.\"\n\n\"You're an-\"\n\n\"No problem. He'd do the same for me.\"\n\n\"Rob, you little-\"\n\nAurel turned to Seb, looking guileless and expectant. \"So, are you ready to go?\"",
        "Seb massaged his temples with his index fingers. \"I'm not going anywhere with you!\"\n\nRob gave him a slap on the back, aggravating his injuries. \"You're just saying that because you're pissed. The logic of it will kick in sooner or later.\"\n\nAurel just grew very still; very serious. \"I cannot allow anything to happen to you. You are coming with me, no matter what. You can walk out to the car of your own volition, or I can throw you over my shoulder kicking and screaming, which would not be good for your elbow. The choice is yours.\"\n\n<p align=center>***</p>\n\nThe scuffle only lasted a few moments. Seb was already hurting and he couldn't bring himself to harm Aurel, even if it were possible. His arm throbbed like a son of a bitch, but the view was amazing. He found himself upside down over Aurel's shoulder, bobbing with every stride, eyes widening as Aurel's glutes contracted and dimpled with every step. He willed himself to stay soft, but Aurel's hand on his ass, holding Seb firmly in place, made that a distinct impossibility.\n\nAnd the way Aurel smelled. No perfume, all male; potent. It was like huffing headcleaner, Seb was so wired off his scent.\n\nRob stood in the doorway, lips twitching. \"Bye Seb. See you soon.\"\n\n\"Eff you.\"\n\n\"Charming.\" Sebastian groaned. He knew that voice. He should have known that Mych would be here.\n\n\"Hi Mikey.\" The greeting was anything but warm.\n\nMych ignored him in favor of talking to Aurel. \"How is everything?\"\n\n\"Fine. In the last half hour I've been compared to feces and paper products designed for blowing your nose.\"\n\n\"What was that?\"\n\n\"Nothing. I have a feeling that I'll eventually get used to it.\"\n\n\"There's a word for that you know.\"\n\n\"I'm sure there is.\"\n\n\"Not that pussy whipped really applies in your case.\"\n\n\"Thank you for pointing that out.\"\n\nSebastian tried not to laugh, but wasn't quite capable of strangling it. Aurel surreptitiously pinched him in retaliation, making him yelp.\n\n\"Mych?\" Aurel said.\n\n\"Hmm?\"\n\n\"Do you want to continue drawing a paycheck?\"\n\n\"I think I know where this is going.\"\n\n\"Then do me a favor and shut up.\"\n\n\"Of course.\"\n\n<p align=center>***</p>"
    ],
    "authorname": "Ophiucus",
    "tags": [
        "romance",
        "mystery",
        "love",
        "mythology",
        "adventure",
        "suspense",
        "non-human",
        "intrigue",
        "betrayal"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/serpents-salvation-ch-07"
}