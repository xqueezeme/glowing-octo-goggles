{
    "title": "Of Rivers and Religion Ch. 01",
    "pages": [
        "This is Part One of a two-part story.\n\nI can't say that it was love at first sight. I guess I'm not even sure I know what that means. But I think I do know what lust at first sight is, and I can't say that I felt that when I sat down for the first time in the front of Dave Heard's classroom for the opening session of the advent of my college career -- his Survey of American Literature II course -- Eng. 251.\n\nBut it didn't take long before Dr. Heard won me over with his unconventional approach, an individualism and abhorrence of conformity that I came to find really intriguing, coupled with a generosity of spirit with which I fell in love. To say the least, Dave Heard would prove to be different from all my other professors.\n\nFor one thing, practically every other professor that I had in college usually blew into the lecture hall a few seconds before, right at, or several minutes after the appointed time for each session, and in a flourish of flying umbrellas, jackets, sweaters or coats, briefcases, textbooks, laptops, and sharpies made us all jumpy as hell before their lectures even began.\n\nThen, when class ended, they made it clear that they were history, sort of the academic equivalents of untouchable elites, as soon as each reversed the process, gathering up all their things for a quick dash out the side door.\n\nSure, they all posted their office hours -- they had to -- and so each listed the four hours each week that you could try to talk to them, but everyone knew they sure as hell didn't want that to happen, and because they didn't, except in unusual circumstances, neither did any of us. That pretty much summed up how important a lot of students felt they were in a lot of the professors' grand schemes. Every day I pledge myself anew to the task of never becoming one of those professors.\n\nBut that wasn't Dr. Dave Heard. He reminded me of some of my better high school teachers. He always arrived at least twenty minutes before the start of every class, and he made it a point to cordially introduce himself to, or later to initiate conversations with, at least some of the students -- the ones that, like him, arrived early for class. I was one of those students.\n\nMaybe he had an ulterior motive -- I mean, the only students that arrived early were studious, overachieving undergraduates that regarded their professors -- especially, in my experiences, the male ones -- as sorts of philosopher/kings, whose every word they hung on as if it was carpe diem poetry, not a lecture that had been delivered dozens of other times. With only one or maybe two exceptions, all of those students were female. I was one of those young women, and my study habits played well into that narrative, as I convinced myself before ever starting college that my job was to soak up every bit of urbane wit and wisdom that saturated my professors' neurons.\n\nI had graduated high school as my class' valedictorian, and I had taken every Advanced Placement course that my school had to offer. Sure, I'd gone to a public high school in a small city in Wisconsin, not some prep school out east, but, in my defense, I did have a perfect score on both the ACT and the SAT. And I had passed each of the AP exams with a score of 5 and had been named a National AP Scholar and a National Merit Scholar too. But as everybody knows, that's all bullshit anyway.\n\nThe bottom line is that after some negotiations, when I started at UW, I had already been awarded 30 college credits. With 30 credits in the bank, I was already a sophomore before I had entered my first college classroom. This explains my taking a 200 level English course to begin my higher education.\n\nIt was just like me to take Eng. 251 before I took Eng. 250, the first course in the survey of American lit. You know -- the fucking Puritans, and those god-awful American Romantics. I just wanted to get to the good stuff right away, and somehow getting to the good stuff meant going through Dave Heard -- one of a handful of the University's resident experts on Modern American Studies.\n\nIn the end, I had no idea how good the good stuff was going to be. Dave Heard taught me that -- and irony of ironies -- the good stuff had nothing to do with American literature!\n\nNot that he wasn't a great professor, he was. He knew his shit, and more than that, he made learning that shit really interesting, not just to me and those other overachievers, but to pretty much everyone. There was no doubt that he was one of the most highly regarded professors on campus.\n\nBut he was more than that. He was just a good man, a really sweet guy, who genuinely cared about his students' learning and, maybe even more importantly, their futures. He must have said it about a hundred different times in about a hundred different ways in the three courses I ended up taking from him, but his goal was that each of his students would learn what he had spent a lifetime absorbing and would then surpass him. I remember the time that he made that point most abundantly clear when he suggested that he would know he had done his job and done it well when one of his students took that job away from him.\n\nHow could you not love that approach? Instead of being fastidious about safeguarding the \"Holy Grail,\" the secretive body of knowledge that each professor had amassed over a lifetime, using it in the most calculated manner possible to make students feel inferior so as not to feel threatened by them -- a skill mastered by almost every other tenured professor at the university -- Dave Heard wanted his students to threaten him, to challenge him, to try to prove him an idiot.\n\nNone of them ever did because he was brilliant, but I think he was really serious about challenging us to do so, and he really wanted the students, not him, to end up the winners. I guess in the end, that's the plot of the story I'm about to tell.\n\nSo that first morning, when he came over to me to introduce himself and shake my timid hand, I didn't know what to make of him. It wasn't like he was the most gorgeous man I'd ever seen before -- not that there wasn't something distinctly attractive about him -- but it was his mind, his personality, and his style that eventually won me over, and those thing took a little time to understand and appreciate.\n\nI guess I did notice the external package right away on that first day. He was wearing these retro glasses that looked like spectacles that Arthur Miller might have sported when he was romancing Marilyn Monroe, and his thick head of somewhat long, unruly hair and his closely cropped beard were that wonderfully natural mix of salt and pepper that make older men so sexy looking.\n\nI guess I was probably always susceptible to the charms of an older man, but I didn't know it at the time. I had him pegged for about 45 years old, so I was more than surprised when I got to know him better and discovered that he was fifteen years older than that at the time. I was shocked -- he sure as hell didn't look 60, nor did he act it.\n\nAfter that, I guess the next thing that really caught my attention were his clothes. He was just so natural -- the pure, unadulterated denunciation of pretentiousness. It didn't matter where he was, he was always clad in casual garb, but not too casual, because that too can come off as contrived and artificial. You could tell that Dave Heard didn't put on airs, either trying to dress up or dress down to suit a particular occasion.\n\nI saw him at fundraising events for the university where every male in the room, except him, was wearing a tuxedo; at student/faculty mixers, where some of the male professors tried to fool everyone into thinking that they were the hippest 50 or 60 year-olds this side of Jeff Bridges; in class, where they all seemed hell-bent on establishing their academic bona fides through their wardrobes; or at State Street clubs or restaurants on the weekends, where most of the older guys tried hard to look like they were still in graduate school.\n\nBut that wasn't Dave Heard. He just seemed oblivious to fashion, and in so doing, I thought him the most fashionable man I'd ever seen.\n\nSometimes he wore jeans or some other type of laid-back pants or trousers that were, once and awhile, torn or ripped, though you could tell they had earned their scars naturally -- Dr. Heard would have recoiled at the idea of paying an extra $10 for every fake tear built into a pair of designer denim.\n\nThen, tucked into, or occasionally dangling around, the waistband of those pants, he usually wore a simple, patterned dress shirt with the sleeves rolled up, so that he looked like he was ready to get to work. And then finally, his feet would be clad in anything from some casual oxfords or Doc Martens to a comfortable pair of Vans or Sanuks or some similar type of footwear.\n\nBut it wasn't until I got to know him well -- started spending time with him -- that I really learned what made him tick, and that was when I really fell for him. Despite his age, he was into all sorts of hipster influences, without trying in the least to be a hipster himself.\n\nHe had this incredible collection of recorded music -- vinyl records, CDs, and digital downloads, and he listened to practically every musical genre that ever existed: from all different types of classical music to ragtime, big band, bebop, cool, and avant-garde jazz, to rhythm and blues, rock and roll, alternative, folk, country, hip hop, reggae, world music, and practically everything in between.\n\nHis taste in film, art, and literature was equally esoteric, eclectic, and eccentric without appearing to be affected, calculated, or manufactured in the least. And he was a collector. If it was art, and it was good, he bought it -- music, to be sure, but also films, paintings, and, of course, books -- everything from non-fiction and criticism to all kinds of other stuff: novels, collections of short stories, poetry, theater -- you name it, he bought it.\n\nBut it wasn't just his interests that set him apart. It was his whole lifestyle. For instance, there was his predilection for walking. He always walked, and I mean everywhere. I didn't learn that he actually owned an automobile until I was invited to his house one night several months after I first met him and found one parked in his garage.\n\nIn those first few months after I met him, I don't think he ever drove it. It seemed like the most superfluous possession a man like him could own, because he walked everywhere he went -- to the University of Wisconsin each morning and back home again each night, all across the massive UW campus during the day, and to restaurants and bars, anywhere from State Street to downtown and the Capitol square, or to the lakes -- Mendota or Monona.\n\nThere were plenty of professors who were into cycling or motorcycles, but I didn't know another one who got around Madison exclusively on the two feet he was born with. It didn't matter the weather -- sun, rain, snow or sleet. If you set up camp, at say, Bascom Hall or Camp Randall or any other landmark on campus on any given day of the year, the odds were you wouldn't have to wait too long before Dave Heard would trod by with his characteristic aggressive strides and penchant for leaning into each step. In short nothing would stay him from the swift completion of his appointed rounds.\n\nAnd then, there was his story. You couldn't help but be moved by it. He was a bachelor now, but not by choice -- actually, more accurately, a widower. The story quickly became part of his legend and lore.\n\nApparently, when he was in graduate school, he had met and fallen in love with a woman of uncommon beauty. I found out later that she was a scholar too. They had gotten married, had three children, and done all of the conventional things that couples did -- bought a stately home in Madison's historic district; introduced their children to a million sports, artistic undertakings, and activities of all kinds; guided them to adulthood and their own full, rich lives and academic pursuits; and then, in one stunningly sad and tragic event, they were all lost to him -- killed in a plane crash, when they were about to meet him at a vacation destination in the South Pacific somewhere. The authorities never found their bodies.\n\nHe had been attending a conference in the San Francisco Bay area and was scheduled to fly in to meet them when the conference ended, but some kind of mechanical failure had taken down their plane, and he didn't get the news until he landed in Fiji or someplace like it, and then had to suffer the horror of trying to find out what had happened to everyone he loved in a place that was supposed to be paradise, but had just turned into hell on earth.\n\nThat was when he was in his late 40s, and he had never remarried, because, the story went, he knew he couldn't ever replace his lost love. I learned all this through the UW grapevine, and now, that same rumor mill had it that he had had affairs with a female professor and a graduate student or two who reminded him of his wife, and, more than a decade after the tragedy, had helped, however ineffectually, to take some of his pain away.\n\nI came to believe that I was the first undergraduate with whom he ever took up a relationship, but rather than Dave Heard using his position of power to cast me under his spell -- which is what everyone would have assumed had that ever gotten out -- he used our relationship instead to help me. I would never be where I am today without him.\n\nBut I'm pretty certain that I helped Dr. Heard too, and so this is a story of two people whose mutual love, respect, and caring for each other was both reciprocal and unconditional. And even though we eventually both married other people, we became the best of friends, inseparable confidantes, which I think is pretty incredible for former lovers. But I'm getting ahead of myself.\n\nI guess back then he saw something in me, too, something appealing, though when I met him that first day in the Fall of 2006, I was, in my own opinion, a gangly, awkward teenager, a few months shy of her nineteenth birthday, who hadn't come into her own yet.\n\nBut I had inherited something from my mother, the prettiest older woman I think I've ever seen, her body, to be sure -- tastefully large breasts, a lean, slender frame, naturally lush, reddish blonde hair that fell softly about my shoulders, and delicate facial features that highlighted my deep, blue eyes -- so that maybe, even if I couldn't see it myself, he found me physically attractive.\n\nI guess I considered myself pretty -- plenty of boys had told me that -- but I certainly didn't think that I was beautiful, and after hearing the story of Dr. Heard's wife, I knew that I couldn't compete physically with the specter of the dead woman who he had loved for more than 25 years before her untimely passing, and for another 12 since that tragic day in Polynesia.\n\nBut I think Dave Heard found beauty superficial, and that is not why I think he liked me, or for that matter, why he adored his beloved wife. I was, what a lot of my professors called \"intellectually curious,\" and when he discovered that curiosity, he found, just as I had, that it led naturally to a curiosity of the flesh and the spirit, as well as the intellect.\n\nSo it was that a few weeks after that first meeting in White Hall, I went to visit Dr. Heard at his office about the first essay that he had assigned. We had a choice to select one of the vanguards of the Realist movement and to research the literary criticism of one of the thematic choices each had made in perhaps their most famous novels -- Kate Chopin's The Awakening; Stephen Crane's The Red Badge of Courage; William Dean Howells' The Rise of Silas Lapham; Henry James' The Portrait of a Lady; or Mark Twain's The Adventures of Huckleberry Finn.\n\nI had decided on Huck Finn, even though I knew that at the very least probably half of the rest of the students in the section were going to choose that novel themselves, because, of course, everyone had read it in high school.\n\nBut I thought that even if I had chosen the book that everyone else was going to choose, I would at least focus my research on a different theme than the rest. I wanted to explore Huck's quest to find spirituality in the natural world, while I figured most students would delve into the pursuit of freedom, man's cruelty to his fellow man, intellectual vs. moral education, the hypocrisy of \"civilized\" society, or the travails of organized religion, or one or another of several sub-themes.\n\nEven though I had already finished my essay and was actually quite proud of what I had produced, I went to see Dr. Heard because I wanted to find out from him whether or not choosing to write my first college essay on perhaps the most widely read book in the entire canon of American literature was going to hurt my chances at, first and foremost, producing a quality paper and, secondarily, getting a good grade.\n\nNot that the grade was all that important to me, but I did want to write something meaningful, in part, I think, because I wanted to please him. Besides, I really loved Twain, saw him as a man so far ahead of his time and such a good and decent soul that I really considered his work, especially Huck Finn, the bedrock of all American literature that followed. I agreed, I guess, with Hemingway, who said, quite memorably \"All modern American literature comes from one book by Mark Twain called Huckleberry Finn.\" Besides, I really thought Twain was funny!\n\nI had read all of the other books that I could have chosen for the assignment well before the course started, and then I had read them all over again, and had started to read the literary criticism about each, so I thought that if I talked to him, proved to him that I knew those books up and down, I could convince him that I wasn't trying to dodge real scholarly inquiry by writing about such a famous book.\n\nThat never happened, because I guess I should have known that he wasn't going to tell me what to do, but rather, expected me to decide for myself, and I don't think that I am exaggerating when I say that it was that first private meeting with him that led me to the place I occupy today.\n\nI had made an appointment to come to see him. I thought that was what was expected of me, but when I arrived in his office, I quickly learned that he didn't give a damn about such formalities. It was the last time I ever made an appointment.\n\nWhen I walked into the room, he was leaning back in a big, comfy, office chair, with his feet propped up on the desk in front of him, reading the first draft of some graduate student's master's thesis.\n\nWhen he saw me, he peered over the top of his glasses to smile at me, \"So, Ms. Williams, how may I help you today?\" he asked, pulling his legs down from the desk. I didn't even know until that day that he knew my name.\n\n\"Thank you for seeing me, Dr. Heard. I wanted to talk about my topic for the first essay for your American lit course. I wanted to research the spirituality of the natural world as seen in Huck Finn, but I wondered if it was a good idea to write about a work that has been so thoroughly digested by critics for so long.\"\n\n\"Why wouldn't it be a good idea?\" he asked provocatively.\n\n\"I don't know, I guess, because I'm afraid that I might have nothing new to say about that theme.\"\n\n\"I take it you've read T.S. Eliot's criticism of the book?\"\n\n\"Yes, and Lionel Trilling's, Henry Nash Smith's, and Bernard De Voto's, as well.\"\n\n\"Did each of them have a completely new take on the novel?\"",
        "\"No, not really. My sense is that they've all come at that theme from pretty much the same perspective.\"\n\n\"Then, what are you worried about? That's pretty good company, isn't it?\"\n\n\"Yes, but I guess I'm afraid that everyone else is going to write about the same book, and because it is a novel that everyone has read, I might be devaluing my essay by covering such a conventional topic.\"\n\n\"The spirituality of Huck's world, the God that he sees in the river itself, is not a particularly conventional topic, is it, Ms. Williams?\"\n\n\"No, I don't think it is -- that's why I chose it -- but everyone's going to write about Huck Finn, aren't they?\"\n\n\"I suspect that a lot of them will, but what difference does that make?\"\n\n\"I guess that I'm afraid I'll get lost in the shuffle, so to speak, by writing about such a famous book, instead of a lesser known work.\"\n\n\"So... what you're saying is you're not sure that you can say anything that stands out about a work that is both a great novel, but also undoubtedly a very popular book? Is that about it?\"\n\n\"Yes, I guess that is what I'm asking.\" He paused and thought for a moment.\n\n\"Now, I know that this is an odd example, but since this thesis that I'm reading has made a similar argument, this happens to be on my mind. So, let me offer something from popular culture to make my point. Are you familiar with The Beatles, Ms. Williams?\" It seemed like such a bizarre question, even a stupid question, and, despite his explanation, it seemed to come from nowhere.\n\n\"The band? Well, it's not like I listen to them all that often, but sure, of course I am. I love them! I regard them as geniuses!\"\n\n\"Did you know, Ms. Williams, that Sgt. Pepper's Lonely Hearts Club Band was the first album to sell more than 10 million copies? Was that a bad record because so many people bought it?\"\n\nI knew he had just exposed part of the flaw in my question, but I answered anyway. \"No, it's a great record.\"\n\n\"Yet, in its initial pressing, it didn't sell as many copies as one of Kenny G's albums.\"\n\n\"Really? That's kind of amazing, kind of depressing, actually.\" I laughed out loud, in part because I couldn't believe that we were really talking about Kenny G, for god's sakes!\n\n\"So, theoretically -- and, of course, this is not actually the case, but bear with me if you will while I pose a hypothetical question to clarify. If 49 percent of the population regarded The Beatles as sellouts because they sold so many records, and a different 49 percent of the population regarded Kenny G as a 'genius,' to use your word, because he sold so many, in which camp would you place yourself, Ms. Williams?\"\n\nI didn't wait to think about my answer. \"Neither. Of course, I would fall into the two percent that thought they were both crazy.\"\n\n\"Then, I suspect you've answered your own question, Ms. Williams!\" He stared at me, until his warm smile morphed into a more serious expression. \"Excuse me for asking, but what is your first name, Ms. Williams?\"\n\nI was a little taken aback by the forwardness of the inquiry, but he seemed so open to talking with me, and so genuinely kind, that I figured that such intimacy couldn't possibly be problematic. Besides, I could tell he already knew the answer to his question. Half the time when he asked anybody anything, he already knew what they were going to say.\n\n\"It's Lily,\" I heard myself saying.\n\n\"Do you mind if I call you 'Lily' at least in private conversations, like this one? I promise I won't do so during class time.\"\n\n\"No, I guess not.\"\n\n\"Good, because then you can stop calling me 'Dr. Heard.' Believe it or not, I have a first name too, and I would prefer it if you would call me 'Dave,' at least privately.\" It seemed like this was something significant, maybe an entr\u00e9e into a different sort of relationship, which worried me for just a second, but then he smiled again, and it was so natural and innocent that I was completely disarmed. With that business behind him, he got serious again.\n\n\"Lily, a work of art stands on its own merits, not its popularity or lack thereof, and the same is true of scholarly articles written by college students about such works of art.\"\n\n\"Okay, Dr.... I mean, Dave. I completely understand. I'm actually kind of relieved, because I've already finished the paper.\"\n\n\"Really?\" He seemed really surprised by that. \"What if I had told you not to write about Twain? Not that I would ever do that, but I'm curious why you came to see me at all, considering that you'd already done all of the work.\"\n\n\"It wouldn't have bothered me to have written another paper. I like writing and researching. I find it all fascinating.\"\n\nHe smiled and shook his head, denoting his understanding, and then he asked another question, \"Do you by any chance have the paper with you, Lily?\"\n\n\"Yes, I do, but it's not due until next week. You don't want me to give it to you now, do you?\"\n\n\"That's entirely up to you, Lily, but I do look forward to reading it.\"\n\n\"Really? Why is that?\"\n\n\"Well, believe it or not, college professors talk too, Lily. Dean Kurimay has mentioned you to me. He seems to be under the impression that you're some kind of prodigy. I guess I want to find out if he's right!\" He sat back, smiling at me. I knew that Kurimay, who was the Dean of the School of Arts and Sciences, thought I was a good writer. He'd told me as much when I met with him last summer.\n\nMy high school AP Literature and Composition teacher and Guidance Counselor had sent him an essay I had written as an example of my potential in the hopes that the university would accept all of my AP classes for college credit -- which, in fact, it did. Kurimay had made that decision, but I didn't think that college administrators shared things like that with professors.\n\nI started to blush. It wasn't so much out of embarrassment over what he'd said, as it was the fact that he actually knew something about me, and despite that, was still interested in me. I thought of myself as the consummate nerd, but Dr. Heard seemed to see someone else when he looked at me. I felt a little tingle between my legs.\n\n\"I'm not a 'prodigy.' I'm just serious, I guess. I want to do well in your course, in all my courses, Dr. Heard.... I'm sorry, Dave... I did it again!\" I laughed nervously. \"Anyway, I really enjoy your class, and I've learned so much already! It's made me think that someday I'd like to teach.\"\n\n\"Then, I suspect that someday you will, Lily. Now, if you think that your paper is complete, why don't you let me take a look at it? If you're not ready to let me see it, that's fine, too. As you said, it's not due until next week.\"\n\n\"No, I think it's ready. Are you sure you want it now?\"\n\n\"Definitely! I am just about done with this thesis, and when I complete it, I'll read all about God and the river. It's a topic that's near and dear to my heart!\"\n\n\"Why is that, Dave?\" I was pleased with myself that I was now apparently comfortable enough with Dr. Heard that his first name trickled so effortlessly from my lips.\n\n\"Because, like Samuel Langhorne Clemens and Huckleberry Finn, I too grew up just a stone's throw away from the Mississippi -- quite a bit farther north than the two of them -- but I have always found that the river inspires unique thoughts in me, and some of them really are of a spiritual nature.\"\n\nI figured that was a good sign, at least as far as my grade was concerned, but after that day, I decided that I didn't give a shit about grades. Learning, it seemed to me, was its own reward, and I had already learned so much from Dave Heard.\n\nHe took the paper, and I left, and when the rest of the students were shuffling out of the lecture hall at the end of class the next day, Dave called out to me, \"Ms. Williams, do you have a moment?\"\n\nI paraded my way down the aisle, and when I reached his table in the front of the room, he handed my paper back to me. There were still a few students milling about, waiting to talk to him, but he continued in his most professional tone, \"Ms. Williams, I think I'd like to suggest another recipient for your paper. I think this essay is worthy of the university's Literary Review. You've offered some stunningly original insights. It's worth noting that most of the articles submitted to the review are the products of graduate students and professors, so it is high praise indeed that I would recommend the work of an undergraduate, especially a first-year student like you. But I think it's that good! What do you say?\"\n\n\"Wow! I wasn't ready for this, but sure, sure. I'm honored that you think it's good.\" I became aware that some of the other students that could overhear our conversation were practically seething, considering that even though no one else in the class had even turned in his or her paper yet, Dr. Heard had already earmarked mine for publication!\n\n\"I've written a lot in the margins of this copy, some things that I suggest you read and consider. And I think you'll want to make some changes, though incredibly, not very many. But after you've done that, if you could give me another hard copy and email the electronic version, I will pass it on to the editors. You should know, they've already agreed to publish it. Someone else thinks you're a prodigy, too, Ms. Williams! Congratulations!\"\n\nFrom that day forward, Dave and I had a special relationship. When the review's fall quarterly came out in late October, my essay \"Of Rivers and Religion: The Spiritual Quest in Huckleberry Finn\" was published. It would be the first of many. I had stolen the essay's title from an album of the same name by the folk guitarist John Fahey that my father had owned. It was a record that I really liked. Somehow the title seemed apropos.\n\nA few days later, on a Saturday night a couple of days before Halloween, Dave invited me over to his house to celebrate the publication of my article. I enthusiastically agreed. I was already beginning to view him in a completely different light, and now my attraction to him was much more than \"intellectual curiosity.\" I was starting to find him undeniably sexy. I think I sensed that he was also attracted to me on a level far beyond a typical student-professor relationship.\n\nI was under the mistaken and absurdly na\u00efve impression that Dave had invited some of the review's other published writers to come over to his house that evening for a dinner party. I don't know why I thought that -- Dr. Heard had never said anything to suggest that possibility -- so I was pleasantly surprised, just a little terrified, and really nervous when, after walking over from my dorm, I arrived at his modest, but charmingly updated Victorian home to find that I was his only dinner guest.\n\nPerhaps subconsciously I already knew that we would be alone together that night, because I had dressed to please him. It was a relatively warm evening for the fall, but there was still an autumnal chill in the air, so it made little sense that I had worn a pretty, flowered blouse that bared my shoulders, along with a skimpy, denim skirt underneath my black leather jacket. Under my clothes, I had selected a pale, blue bra and boy panty set. Considering my attire, my intentions were probably as clear as the October night sky, but if they were, Dave seemed intent on politely ignoring them.\n\nHe met me at the ivy covered front entrance, wearing a pair of well-worn jeans, a rumpled dress shirt, and a disheveled head of hair. \"Welcome, Lily. I am so glad that you could come. It is always an auspicious occasion to be able to celebrate the publication of a scholar's work, and it is especially satisfying when the scholar is so young and so pretty. Please come in, and make yourself at home.\" I blushed when I heard the word \"pretty,\" and it was my first clue that maybe, just maybe, Dave Heard was interested in me for something other than my status as his next prot\u00e9g\u00e9.\n\nI entered a tastefully decorated home, replete with beautiful oak bookshelves, cabinets, hutches, floors, baseboards, and crown molding. We entered a kind of den and study, filled with leather furniture and bookshelves stuffed with thousands of volumes, and Dave invited me to sit on a long couch that faced a stately fireplace in which a cozy fire roared its welcome.\n\n\"Can I get you something to drink, Lily? Some wine, a beer, or perhaps a cocktail? Or, if you prefer, just a soft drink, coffee, juice, or water?\" He never acknowledged at that time, nor at any other point in the evening or afterwards, that I was in my late teens and wasn't legally old enough to consume alcohol. I knew that I would eventually partake -- I liked drinking wine -- but I didn't want to send the wrong message, as we were alone together for the first time since that meeting in his office, and this was clearly entirely different.\n\n\"For now, I'll just have some water,\" I said timidly.\n\n\"Wonderful! Excuse me while I get our drinks. In the meantime, I don't know whether you like music or not, but if you do, feel free to pick out something to listen to,\" he offered convivially, sweeping his arm toward the back of the room and the largest collection of recorded music I'd ever seen. \"I'll be right back.\"\n\nI stood up to look. I hadn't noticed the collection or his stereo system until he gestured toward it, but an entire wall of the room was occupied by massive stacks of vinyl records and CDs, and a vintage McIntosh receiver, VPI Classic turntable, Burmester CD changer, Rane Constant-Q graphic equalizer, and several other smaller components whose purposes I could only guess at, all connected to four six-foot tall Legacy Helix speakers that sat forebodingly in each of the four corners of the room like they'd somehow been absconded from Stonehenge. I approached the entire menagerie like a kid in a candy shop.\n\nMy own father owned a fairly impressive stereo system and a decent sized collection of vinyl music, so it wasn't that I was an uninitiated millennial who had never before seen an actual vinyl record or a true audiophile's component system, but quite frankly, what I found staring at me shocked me to my core.\n\nIf I had to wager a guess, I was confronted by what I think were at least 10,000 vinyl albums and probably another four or five thousand CDs. The stereo system alone was worth at least several hundred thousand dollars, and I couldn't even vaguely calculate the value of the music collection. Everything was in mint condition.\n\nI stood in front of the stacks, and found all of the music had been meticulously catalogued alphabetically by the artists' names. I only spent a few seconds perusing through the As, Bs, and Cs of the vinyl stacks before I came upon a record that I really wanted to hear -- an imported copy of John Cale's Paris 1919, a beautiful collection of mostly mellow songs vaguely themed around a withering and disdainful perspective on the peace accord that ended World War I and, in its short-sightedness, ushered in World War II and 75 million more deaths. The whole thing was intended, as near as I could tell, as an abstract, but quiet and gentle condemnation of everything modern, tinged with resignation and regret.\n\nMy father had owned this album, and it was one of my mother's favorites, so I had fallen in love with it, too. Dave had given me permission -- which under the circumstances seemed a reckless thing to do, not knowing a damn thing about me and considering how expensive everything was. But from an early age, I had been methodically trained in how to properly handle vinyl records and how to use a turntable and stereo components, so I didn't hesitate.\n\nI carefully removed the record sleeve from its jacket, the vinyl from its sleeve, found the side I was looking for, and, without ever touching the grooves, placed the record delicately atop the turntable, turned on the power to the turntable, receiver, and equalizer, and then raised the hydraulic tonearm and dropped the stylus onto the vinyl's first track.\n\nThen, I returned to the couch. Just as the first bars of Lowell George's slide guitar that opened my favorite song on the album -- a tune eponymously referencing Dylan Thomas' prose poem, entitled \"A Child's Christmas in Wales\" -- warbled through the speakers, Dave returned with a bottle of water, a tumbler filled with ice cubes, and a glass of white wine for himself. He had a stunned look on his face.\n\n\"Lily! You know John Cale? How is it possible that someone your age is familiar with this record? It had to have been recorded more than 15 years before you were born!\"\n\nI smiled, strangely prideful that he approved of my selection. \"My father owned this record. It's one of my favorites. But hold on, didn't you once allude to Sgt. Pepper's Lonely Hearts Club Band? That record is at least five years older than this one, right? And you thought I would know it.\"\n\n\"You're right about the years, but I think that John Cale is quite a bit more obscure than The Beatles, don't you agree? Regardless, I am truly impressed! You have remarkably good taste, no matter your age!\"\n\n\"Thank you. So do you! I thought my father owned a lot of music, but I could spend a year looking at your collection. I've never seen anything so thorough!\"\n\n\"It represents a lifetime of collecting. I guess I'm something of a packrat! I do the same thing with books and movies.\" He placed the glass and water bottle on two coasters on the end table beside my end of the couch and, with his wine glass in hand, took a seat beside me. He wasn't so close that he was touching me, but I inferred much from his decision to sit in such close proximity. \"So, Lily, are you a fan of the Velvet Underground, too? Is that how you came to know John Cale?\" he asked, sipping his wine.\n\n\"Yes, one of the other records I spent a lot of time listening to when I was in high school was The Velvet Underground and Nico. It conjured up all sorts of images that I had about the New York arts scene in the 60s, you know -- Andy Warhol, the Factory, Edie Sedgewick, art films, the whole S/M thing, strobe lights, the multimedia and performance art phenomena -- it all just fascinated me. Besides, I think it's pretty great music, way ahead of its time. Who would have thought that you could have a viola player in a rock band? I'm not sure there would have been punk rock and alternative music without that album.\" I opened my bottle of water and poured it over the ice in the glass.\n\n\"I think you're absolutely correct. So is that the kind of music you usually listen to -- punk rock and alternative?\"\n\n\"No, not really, at least not so much anymore. I'm not as angry, ironic, or snide as I was when I was 16!\" I said with a self-deprecating laugh. \"I listen to all sorts of things now. I see you do the same.\" I drank greedily. I was astounded at how quickly our conversation had put me at ease.\n\n\"Yes, I guess I do. If one word could describe my tastes in most anything artistic, I think it would be 'eclectic.'\" I smiled. What he had said had made me feel good, like we were somehow simpatico, kindred spirits. The next song came on -- another really gentle, soft melody that was rich in texture and feeling. It was entitled \"Hanky Panky Nohow.\"\n\n\"Let me check on dinner, Lily. I hope you're hungry, and I hope you like kabobs. I've got some grilled shrimp, chicken, vegetables, and fruit. I figured at least one of the four would probably appeal to you.\"\n\n\"I like them all,\" I said smiling, \"though I don't think I've ever had grilled fruit. That sounds delicious! Thank you so much for having me over. This is really nice of you.\"\n\n\"No, Lily, it's my pleasure. I think we have a lot in common. I am finding this evening very enjoyable indeed. I hope you are as well.\"",
        "Before I could answer, he disappeared, and I waited patiently listening to John Cale and reminiscing. When the side of the record ended, I got up and carefully pulled the vinyl from the turntable, put it back in its sleeve and jacket, and replaced the album carefully in its appointed place in the stack, just as I had been trained to do. Then nearby, I found another record that I loved, John Coltrane's Giant Steps, and I started with the seminal first track, the title cut.\n\nColtrane was blazing his way from one incredibly complex modal progression to another when Dave returned. He was carrying a huge tray filled with plates, silverware, chafing dishes, and bowls. One was filled with grilled peppers, corn-on-the-cob, zucchinis, onions, and cherry tomatoes marinated in some kind of sesame sauce. Two others contained chicken and shrimp respectively, both marinated in a different type of sauce (I wasn't sure what it was, though it had the flavor of some kind of spicy jerk). All of it was barbequed to perfection. Then, there was a bowl full of sticky rice, along with others heaped with fruits: sliced bananas, pineapples, pears, and peaches, all rolled in brown sugar and cinnamon and grilled until caramelized.\n\nHe set the tray down on a folding stand that he was carrying with him, and then, hearing the music, shook his head in astonishment and said kindly, \"My god! You're a jazz aficionado too! Lily, you're scaring me! Trane? This is too perfect! If ever I decide to host a dinner party, I plan to consult you on the playlist, Lily! Now, while Mr. Coltrane entertains us, I'd like you to dig in.\"\n\nI began spooning out a little of everything, and Dave watched with contentment. When my plate was filled with sumptuous delights, he asked me kindly, \"Are you sure you wouldn't like some wine to go with your meal?\" I was completely charmed by this point, and no longer frightened by his offer.\n\n\"That sounds really nice. Yes, thank you so much! I would love some.\" He returned with the already opened bottle of chilled Chardonnay and a glass and offered me a healthy pour. Then, he refreshed his own glass, began filling his plate with food, before sitting down next to me on the couch. We began eating. It was absolutely one of the best meals I had ever had.\n\nWhen we finished eating, Dave cleaned up all of our plates and the leftovers, and put everything away in the kitchen. And when he returned, we were enjoying our wine and the music, until the Coltrane side ended. Dave asked me if I wanted to pick out something else. I thought for a moment, and then I demurred, \"No, I think I would like to hear what you're currently interested in or at least your own selections. Do you have a way to shuffle music? Maybe an iPod? I'd like to hear your self-described 'eclectic' tastes.\"\n\n\"Ah, you millennials! You do like your mixes, don't you? Actually, I do as well. That's a good idea; it's a nice way to listen to music. You never know what you're going to get!\"\n\nHe smiled, and then got up, walked to his stereo, and fiddled with some of the other components that I had seen earlier, and in a matter of seconds, the harmonica intro from a folk rock nugget by Steve Earle lurched from the speakers. I knew the song -- \"More Than I Can Do,\" and though I didn't listen to a whole lot of country music at the time, I admired Steve Earle, and enjoyed that song, an up-tempo rocker, that was nonetheless a heart-wrenching tale of loss.\n\nI was just finishing my glass of wine and was trying to concentrate on the lyrics, but when I looked over to smile at Dave, he turned his face away from me. I got the feeling that he didn't want me to see him at that moment and that impression seemed to be confirmed a second later when he got up abruptly and went into the kitchen without saying anything. He returned a few moments later with another chilled bottle of wine, but I could tell from the puffiness around his eyes, and the flushed color in his face that he'd been crying.\n\nHe tried hard to smile, asking kindly, \"More wine, Lily?\" but not only could I see the pain in his face, I could feel it as well, a sensation so palpable and real that he might as well have let loose with an ear-shattering, anguished cry as if he had just been stabbed in the stomach with a switchblade.\n\nI was trying to figure out what had prompted the startling emotional change, a transformation so profound that within mere seconds he'd gone from happy and contented to tortured and suffering. And then it struck me -- the song -- the song was the clue to what had just happened.\n\nIt was ostensibly the tale of a man so forlorn with the loss of the woman that he loved and in such denial about her rejection of him that he had resorted to stalking her to prove that love to her:\n\nJust because you won't unlock your door,\n\nDon't mean you don't love me anymore.\n\nAnd then later:\n\nYou said you're gonna call the cops,\n\nBut I ain't gonna run,\n\n'Cause you're the only one.\n\nThere ain't no way I could live without you.\n\nAt first, I had marveled at the song's pathos-inducing appeal. And then two minutes into it, Earle had circled back to the opening lyrics, and I realized that Dave was internalizing what the song was so poignantly articulating, such that to him that song was addressing an entirely different type of loss -- his loss.\n\nI now understood that the passage of those 12 years of his life hadn't come close to erasing his pain, and that no matter where he was in the stages of grief that he had experienced, he was condemned to return to an earlier stage in the blink of an eye.\n\nAnything could trigger that regression and, with it, a whole new round of suffering. Apparently, the lyrics of the song had had just that effect:\n\nI'm trying hard to let you go, but it's more than I can do.\n\nAnd every day or two,\n\nI wind up right back where I started.\n\nI'm trying not to let you know that I'm still in love with you.\n\nI can't just sit home blue,\n\n'Cause there ain't no rest for the broken-hearted.\n\nThe music continued, but both of us had stopped listening, and then I started to understand the emotions that were engulfing him. I realized that he felt incredibly embarrassed and ashamed by his undying love for his wife and children, as if she had told him that he needed to move on, but that he had admitted to her that he couldn't, that he would never be able to, and that because of that, everyone else viewed him as this pathetic and pitiable creature.\n\nI imagined this psychological dialogue with her playing out in his head. \"Baby, you need to let me go. You need to put me behind you, to find someone who can make you happy and to allow yourself to love again. Do it for me, because I want that for you. I want you to be happy, because I love you!\"\n\n\"I can't! I've tried! I've really tried! I want to; honey, I really want to, but you don't understand! I can't do it! What you're asking of me -- I can't! I just don't have it in me. It's more than I can do!\" Now that song's power over him made complete sense.\n\nAnd then even though I already knew the answer to the question, I heard myself asking anyway. As he poured me another glass of wine, I said it, \"Dave, what's wrong?\" and as I heard the words leave my lips, I realized immediately that I had no right to ask, didn't know him well enough to insinuate myself into his pain and suffering. But it was already too late now -- for better or for worse, I had brazenly entered the realm of his grief.\n\nHe turned his head away again, and I winced, realizing that I had made him cry a second time, and I was angry with myself for torturing him. With his back to me, he spoke in a trembling voice while filling his own glass again, \"I'm sorry, Lily. I have some bad days sometimes. Usually, I'm alone when this happens. I guess you caught me at the wrong time.\"\n\nAnd then I knew it was my fault. I had caused this. It was purely unintentional -- I knew that -- but, for whatever reason, it was something about me being there that had caused his heartache, and if it was I who had caused it, it was I, and only I, who could fix it. \"Dave? Is there something I can do to help?\" It would all be left unsaid, but I knew... that he knew... that I knew.\n\nHe turned back to me, \"Lily, I invited you here tonight to celebrate your accomplishments, not to wallow in my own self-pity.\" The tears were streaming down his face, and I felt even worse.\n\nSo I pledged to myself that I was going to try to help. I figured after all he had done for me already -- and somehow intuitively, I understood that he was going to do much, much more -- at the very least, I owed him something, didn't I?\n\n\"Dave, there's no shame in it! It's real! You can't ignore it, and neither can I. I want to try to make it better. I need to help you. Can I... can I... just... just hold you?\" I really didn't mean anything by offer, other than to provide solace, but I realize now that I was sending some message, and he would have had to have been made of stone not to pick up on it.\n\nWithout waiting for his answer, I set my glass down on the end table, and I stood up and wrapped my arms around his waist and held him tightly. Then, he pulled me to him, and the sorrow washed through him like summer rain. The sobs shook him, and the tears flowed freely, and soon I realized that I was crying with him.\n\nBut I also realized something else -- I was excited; I was titillated. It was wrong of me to feel that way, and I knew it, but soon, I could tell that Dave felt the same emotion, felt the same passion welling up within him.\n\nAnd then I understood that there was a mutual longing we shared, a profound craving for each other, a lust that was as real and as palpable as his sorrow. And soon that lust was growing, growing in size as much as it was growing in power, and then I could literally feel it pressed against my stomach.\n\nAnd suddenly he gently cradled my face in both his hands, and he brought my lips to his, and the delicate touch of his warm, wet mouth on mine, the muscadine aroma of wine on his lips, sent an electrical current coursing through my entire body, and then suddenly he was kissing me, kissing me with a yearning and desire that took my breath away.\n\nAnd I wanted him too, wanted him more than anything that I had ever wanted before in my life, wanted his mouth on me -- not just on my lips, but on my face, on my eyes, on my ears, on my neck, on my shoulders, my breasts, my nipples, my pussy, my clit. I wanted him inside me, wanted to feel him thrusting himself into me, wanted to feel his seed spurting deep inside, coating me with his essence, his extract, purifying me with the life-giving distillate without which humanity had no future.\n\nAnd then, just as suddenly as he had started, he stopped, and still holding my face in his hands, he began apologizing profusely, \"Lily, I'm so, so sorry. Please forgive me. I'm not thinking correctly. I... I... I should never... I can't. I can't do this. It's wrong; it's... it's....\"\n\nBut now I needed Dave, and I couldn't let this moment slip through my fingers, so I stopped him in mid-sentence. I was convinced that I could change his mind, and in so doing, change much, much more than that. I wanted him to see the situation from all perspectives -- mine, his, and his dear departed wife's.\n\nIt was crazy of me. I know that. But I had lost my senses as the feelings within me grew. So I said something that I know I shouldn't have said, went to a place I shouldn't have tread, but I couldn't control myself anymore.\n\n\"Dave, please, I need this, too, almost as much as you do! Please! You aren't doing anything wrong! Dave, you need to live again! You need allow yourself to be a fully functioning human being again. Your intellect isn't enough! Your body is as much a part of you as your brain is. If anything is wrong, it is for you to deny that!\" And then, I couldn't believe what I said next, \"Dave, please make love to me! Please! I know you want this too! And I know you need it!\"\n\nI had only had one lover before that evening, a sweet, shy, gentle boy named Nick with whom I graduated high school. I had wanted Nick almost as much as he wanted me, and so it was inevitable that I would lose my virginity to him during the last week of high school, the night of our Senior Prom, an event that he had begged me to attend with him long before we ever reached our senior year.\n\nHe was a quiet, intelligent, and withdrawn soul -- an archetype that I soon realized I was drawn to. Nick didn't say a lot until you got him to talk about his passions -- literature and philosophy -- but then you couldn't stop him.\n\nHe took me that night in the hotel room that he had booked for the after party. We were both really nervous and inexperienced, but our coupling, though comical and awkward at times, was something that I, at least, considered a lovely and beautiful moment. I think Nick probably felt the same way about the experience as I did, and over the next few months we repeated our lovemaking a dozen or so times, until we were no longer ashamed of being intimate.\n\nAnd then Nick left. He was up in Massachusetts now, attending school at Williams -- no relation, by the way -- one of the \"Little Ivies,\" the handful of liberal arts colleges scattered about New England and beyond that the children of well-to-do Midwestern parents, like Nick, considered the next best alternative to Harvard, Yale, or Princeton, et al.\n\nWhen Nick called me a couple of weeks into his fall semester, he told me that he was majoring in philosophy, and reading scads of thinkers that most people had never heard of. Though we talked on the phone a few more times after I started school, I realized after that first call that we would never again be intimate. We had had our moment, and while neither of us regretted a thing, that moment had passed with the summer's end.\n\nI didn't want my relationship with Dave to follow that pleasant, but far too abbreviated path. But I knew I needed to give him a little bit of time to think. He stared into my eyes, and I could see his desire, but at the same time I could almost hear his mind debating with itself. He was fighting against what he knew his wife would have wanted for him, and that was perhaps the saddest inner conflict with which I have ever seen anyone confronted.\n\nFinally, he spoke, \"Lily, I... I... I do, I do want you. I want you so badly, but, Lily, Lily... It... It... It's not my professional ethics or anything like that. I... I... I can reconcile all that, but I... I... I've never told you about my wife. I... I...\"\n\n\"Dave, you don't have to do that! You don't have to tell me! I think I know everything I need to know, and I feel so, so badly for you.\"\n\n\"No, no, I don't think you do know. No, you don't understand, and I can't do this until I can make you understand. Lily, can I... can I show you something? It's right over here. It won't take but a moment.\" He led me out of the room and down a hallway to a door that led to the garage.\n\nHe opened the door to let me enter first, but before he turned on the light, all I could see in the darkness was the tiny flame from the pilot light at the bottom of the water heater that kept silent vigil in the corner by the door.\n\nOnce Dave switched on the light, I discovered an old BMW sedan parked in the center of the two-car garage. That was when I first realized that he actually owned an automobile. But what struck me was that all around the parked vehicle were stacks of boxes and plastic containers, dozens and dozens of them, all different sizes and shapes, each filled to capacity with possessions of all kinds, four lifetime's worth of memories. It would have taken at least ten minutes to move the stored things enough to back the car out of the garage.\n\nNow I understood Dave's preference for walking. In order to have driven his car, he would have, in effect, had to have given up his memories of his wife and children -- put them behind him, disposed of them through some kind of metaphysical garage sale. I understood that as far as he was concerned, to do so would be, to paraphrase Steve Earle, more than he could do.\n\nAnd then I noticed that the lid to one of the containers that sat atop a stack of two smaller boxes was open, and from it spilled a beautiful, white, wedding gown, replete with a chiffon, silk, and tulle bodice, a bateau neckline, an A-line silhouette, and brush train. Next to the box sat an old chair. It appeared as if he had only recently, perhaps even that same day, sat holding the dress, running his fingers over its delicate fabric, breathing in its ancient, perfumed scent, cradling its beauty in his trembling hands.\n\n\"These are all their things, aren't they?\"\n\n\"Yes.\" He paused for a long time. \"I can't seem to let go of them.\" He started sobbing again.\n\n\"Dave, Dave, no one, no one has the right to ask you to do that! You don't have to let go of them! Dave, it is so wrong of me to be the one to say this! I mean, far be it from me to lecture you! You're the most brilliant person I've ever met, so it's absurd for me to be the one pretending to dispense wisdom. But Dave! Dave!\" I kept shaking my head. \"How can I get you to understand this? How... how can I?\" Now he was not only in pain, but he was utterly confused as well.\n\nAnd then I thought of something, a way for him to see, a way to help him understand. Maybe it was a long shot, but.... \"Look, you and your wife had three children, right?\"\n\n\"Yes.\" He looked at me with such profound sadness that I wasn't sure I could continue, but I did so anyway.\n\n\"When your first child was born... that must have been an incredibly wonderful moment for you and your wife, wasn't it?\"\n\nSlowly, ever so slowly, he began to smile through his tears, reminiscing. \"Yes, yes, it absolutely was!\" That smile, however weak and fragile, gave me confidence, so I continued.\n\n\"When that child entered your life, your wife's life, did you start loving her less because you had a child to love, too? Did she love you less because she had to share her love for you with her first born?\"\n\n\"Of course not!\" He said it, almost in anger. \"Having Mayra only made our love for each other that much stronger!\"\n\n\"Of course, of course it did! It had to have, and that love that you had for each other made having a child all the more incredible! And when your second child was born -- that was your boy, wasn't it?\" He was bawling again, his face was awash in tears, even though a tiny fragment of his smile had not left him, and I felt so badly that I was doing this to him, but I had to, I had to continue.\n\n\"Did you love Mayra less because you now had a son to love as well? Did you love your wife any less because you had two, and then three lovely children that you adored? No, and that's because love is not a finite thing. It grows, and when it does, it grows exponentially. Love begets more love. The world is a big, big place, but it isn't big enough, is it? It can't contain all the love that we have within us. So we search for another place. I guess that place is what people call heaven.\"\n\nHe broke down now, broke like a twig that I had snapped in half with my fingers. And when he fell toward me, I caught him in my arms, caught him because if I didn't, I know he would have hit the concrete floor with a thud.\n\nI just held him, held him for the longest time. I let all of the emotions pour out of him -- pain, regret, self-loathing, guilt, shame -- and when finally, his tears ran dry and his shaking abated, he released his hold on me and silently walked over to the plastic container that held that dress and, folding it gently and carefully as if his long lost love herself was still encased by it, he lay it back into the container and then, after pausing in silence for a long time, he secured the lid. He had finally buried her, as surely as if he himself had nailed the coffin shut. In fact, I soon realized that with that one act, he had buried them all.",
        "And then I remembered, remembered the painful truth that that was something that he had never actually had the chance to do before that evening. Yes, they had held a ceremony, but having been deprived of the chance to say goodbye to their physical forms, he had been denied the opportunity for any real closure. He later told me that was why he would sit for hours by himself in that garage. So he could be with them. Had there been a burial, maybe the healing could have started years ago. Who knows? But until that night, he had never actually said goodbye.\n\nWhen he finished, we silently walked back into the house hand in hand. When we got back into the den, he spoke again. The pain was still there, but he was smiling bleakly now, smiling at me with a sense of gratitude. Still, in some absurd way, I could also tell that he was proud, proud of himself, of the progress he had just made.\n\n\"Thank you.\" It was all he would say that night about what had just happened, but the next morning as we sat on his bed embracing, he thanked me more properly, and when he spoke again about the catharsis, there could be no denying the depth of his gratitude.\n\nBut for now, the emotions were too raw to be released and could only glow silently and dimly in the deep recesses of his psyche, like the tiny flame at the bottom of the water heater that shone in the darkness in the corner of his crowded garage. Instead, we picked up where we had left off before his breakdown.\n\n\"Would you like me to refresh your glass of wine, Lily? This night is supposed to be your celebration, is it not?\"\n\n\"Yes, I guess it is! I'd love some more wine!\"\n\nSo we returned to the couch and continued drinking, talking about literature and criticism, and the incredible array of memorable songs of every genre that spilled from his stereo system. Soon we were both completely relaxed, and the wine began to work its magic.\n\nWhen John Fahey's great instrumental rendition of the old hymn In Christ There Is No East or West came on, Dave suddenly erupted with amazement, \"Oh my god, I just realized something! Your title -- Of Rivers and Religion -- you got that from John Fahey, didn't you?\"\n\n\"Of course, I thought you knew that!\"\n\n\"I knew the title was the same as the Fahey record, but at the time, I had no idea that you had any knowledge of old, folk records, much less John Fahey. I just thought it was a coincidence. But tonight I learned of a whole new side of you that I did not know existed, and so when I heard this song, I made the connection! You're incredible, Lily! How can such a wise, old soul be housed in such an incredible package!\"\n\nAnd then, I could see it in his eyes, and I knew that in seconds he would be kissing me again, and this time I knew there was no stopping us. \"Forgive me for my shameless superficiality, but you are a stunningly beautiful woman, Lily Williams! I hope you can excuse my lack of self-control, but I want desperately to kiss you right now!\"\n\n\"I don't think I could forgive you if you didn't kiss me!\"\n\nAnd so Dave pulled my lips to his, and when he did, an even stronger voltage of the same electricity that had shot through me an hour or so ago coursed again through every inch of my flesh, and in short order, I felt a flood of arousal bathe my pussy. He planted dozens of kisses on my ears and neck, and then I felt his fingers unbuttoning my blouse, and soon he was licking and gently biting my shoulders and my breasts through my bra.\n\nSeeing his vulnerability had unmasked my own, and I now found myself begging again, pleading with him to share his body with me. \"I need you to make love to me, Dave. I need you inside me!\"\n\nI could tell he was a little embarrassed by what I had said, but my plea prompted a question from him as he searched my face for what he already knew was affirmation, \"Lily, would you like to retreat to my bedroom?\" My mouth didn't answer, but my eyes did.\n\nSo as he held me from behind with his hands still wrapped around my waist and his lips still running kisses all over my ears, neck, and shoulders, we shuffled slowly out of the room and down two hallways to the other side of the house and the master bedroom.\n\nOnce inside, Dave began undressing me, unbuttoning the rest of my blouse and removing it and unzipping my skirt and slipping it around my slender hips and down my legs until I was able to step out of it. Now I was nearly naked to him -- my large breasts pushing their way up and out of my bra, exposing all the cleavage I had to offer, and my excited pussy and semi-trimmed bush covered only by my boy panties.\n\nThe glow from a nearby streetlight and a nearly full moon streamed through two windows that occupied the two outside walls of the room and flooded it with soft, blue light. As we stood next to his bed, he brushed my hair from my face with his left hand, while he again brought my lips to his, and, as he kissed me with implausible passion, his right hand slid furtively inside my panties, down through my muff, until I felt his middle finger enter me, and when it did, I emitted a reflexive and prolonged groan -- \"Oooooooooooooooooooooooohhhhhhhhhhhh!\" -- and a flood of juices that bathed his invading digit.\n\nAs suddenly as it had entered me, that finger left me again, and I groaned once more, this time with disappointment. Then, he pulled my breasts out of the cups of my bra, and without removing it, he began licking, sucking and nibbling my nipples, while I moaned my approval.\n\nAnd then, with my arms wrapped securely around his neck, and as gently as I think was humanly possible, Dave lifted my legs off the floor and lay me down in the center of his bed. Then, he crawled between my legs, and pulled my panties from around my waist, down my thin legs, and off.\n\nI was trembling with anticipation, and then I felt his lips again, this time kissing his way between my legs all the way from the insides of my knees, up my slim thighs, over the wispy brown muff that covered my pubic mound, down and around my ass cheeks, until finally, after what seemed like about 10 minutes, I felt his breath on my sex and then his wet tongue entered my sopping slit. I thought I would cum on the spot -- it felt so indescribably good -- and though, I knew that it wouldn't take me long, Dave made it clear that he was going to extend my pleasure for as protracted a length of time as he could with his slow and deliriously gratifying mouth play.\n\nI felt his tongue move slowly up my delicate inner lips; then it swirled around my clit hood, before sliding back down my wet opening. Then, he began planting gentle kisses all over -- my slippery slit, inner thighs, bush, and clitoris, before going back to his earlier technique, running his tongue up and down my now gushing hole. Though I had no control over them, I began to realize I was softly producing these sensual whimpering sounds as I felt my passion growing.\n\nAnd then his finger entered me again, and again, I let out a loud, sensuous groan, \"Ooohhh Jeeesssuuusss!\" With his palm turn upward, he began probing my tight canal with one and, soon after, a second finger, and then he began caressing the hard, rough surface of my g-spot on the front of my pussy wall, which provoked new and heretofore unknown pleasures deep within me. I didn't know that place, hadn't explored it myself, but it was only the first of several discoveries about my sexuality that Dave led me to experience that night.\n\nAnd then I felt his lips wrap around my clit hood, and he sucked that long, delicate fold of skin deeply into and out of his mouth over and over again, until I could feel my pink pearl emerging from its hiding place.\n\nI was writhing now against his more urgent ministrations, lifting my hips off the mattress so that I could grind my sex against his inquisitive fingers, darting tongue, and saliva and arousal-coated lips, grunting incomprehensible sounds, as my muscles began spasming involuntarily.\n\nAnd then the tip of his tongue began making contact -- flicking ever so lightly across my button -- and soon I screamed, \"Aaaaaaaaaaaagggggggggggghhhhhhhhhhhh!\" and my climax began to roll through me, moving from that tiny, pink knob outward like rings of electrified sensation that were spreading as ripples, as if he had dropped my pebble into still waters sending halos of seismic pleasure radiating out from my nexus in concentric circles that grew in size and potency as each moved through every inch of my body.\n\nI rode my climax for a long, long time -- almost a minute, I would guess -- as Dave slowed, but did not cease the resolute work of his fingers, mouth, and tongue. I had never experienced sexual gratification so powerful before, and what proved even more amazing was the fact that that first orgasm was a harbinger of every other climax that I was to reach that night -- enormous, potent waves of sustained carnal bliss that washed through and over me over the next hour.\n\nWhen my quaking finally ceased, I opened my eyes to see Dave pulling his face away from my overheated sex. My arousal had wetted his mouth and nose, and his trimmed beard glistened with my juices.\n\nNick had been a kind and gentle lover, but my first time was his first time as well, so while we both took great care to help each other to explore our sexual desires, neither of us really knew what to do, and the orgasms, though they came, were impotent and feeble in comparison to what I had just experienced.\n\nI stared up at Dave with what I suspect was a frightened look. I didn't know that sexual pleasure could be so overwhelming, and because I was unused to such passion, I'm certain my face suggested fear. Nothing could have been further from the truth, but his compassionate side quickly showed itself nonetheless, \"Lily, are you alright? I didn't hurt you, did I?\"\n\n\"No, no, of course not! It's just that I've never cum like that before! I didn't know an orgasm could be so strong! That was unbelievable!\"\n\nHe smiled, and then, in the dim blue light, I saw him unbutton and remove his shirt, and I suddenly felt like I needed to return the favor. So I reached for his belt and began to undo it, and then I unzipped his jeans. \"I want to take you in my mouth,\" I announced in a breathy voice.\n\n\"Lily, are you sure? You don't have to.\"\n\n\"Of course I don't have to, but I want to! Just lie back against the pillows and let me suck you!\"\n\nNow it was Dave that looked a little frightened, but he did as I asked, and soon I had pulled his jeans and his boxer briefs off his thin hips, and his slender body lay across the bed bathed in the sapphire tint of the light outside.\n\nI had given Nick blowjobs every time we had been together, and I had done some experimenting when he asked me to try different things to satisfy him with my mouth, but that night I went further than I ever had before because I wanted so desperately to please Dave. In the end, I guess I tried too hard.\n\nHis cock was already erect and really hard, and I could see a tiny drop of pre-cum dripping down the side of his mushroom head. He was breathing really deeply, and I knew he had become really excited watching me cum.\n\nI knelt between his legs, just as he had done to me only minutes before, and as I ran my tongue up his entire length for the first time, I could see him watching me pleasure him. His eyes would not leave me throughout my oral efforts, and I took my cues from him and tried my best to stare deep into his soul as I used my mouth to stimulate him.\n\nHis cock was nicely sized, though it wasn't huge. I suspect that he was just a little bigger than Nick had been. While I guessed him to be about seven inches long, his girth was modest, and I didn't have trouble taking his thickness into my mouth.\n\nI was really surprised when I discovered that his pubic hair had been trimmed really short and his balls and his cock were shaved smooth. I later found out that he always maintained that \"manicured\" look. I had never seen a man's junk exposed as his was, much less so well kept, and the fact that Dave was 60 years old at the time only made this reality more astounding.\n\nI decided that night that I liked this a lot because a man's genitals smell so clean and fresh when they're shaved, and then when I began using my mouth on his balls and found out how much more pleasant it was not to have deal with pubic hair that felt like steel wool, I decided it was a really nice gesture for a man to do such a thing for his woman.\n\nI liked how they felt on my tongue when I started to lick his balls, and the moans of approbation that Dave emitted when I did so told me that he liked the feeling more than I did. I started to suck them into my mouth, and I could tell that he was even more turned on, but then he repeated himself, \"Lily, are you sure...\" but when he didn't finish that thought, I just kept going. After he was breathing really fast, I decided to go back to sucking his cock, and I was pretty sure at that point that I could make him cum with my mouth, something I had never done for Nick.\n\nI also hadn't ever deep throated a cock before that night, but I wanted so much to prove myself to Dave that I started to take him more deeply into my mouth, until I soon realized that his engorged helmet was beginning to slide into my throat. I began gagging, which honestly didn't bother me all that much. I knew it would just take some time for me to get used to it, and I knew that I needed to coat his cock with more saliva if I was to do this in an effective and slightly less vulgar manner. But then he stopped me. \"No, Lily, you don't have to do that!\"\n\n\"But I want to! I want to make you cum with my mouth, just like you made me cum!\" I know that I sounded pretty juvenile when I said that, but what can I say?\n\n\"I don't think that is possible anyway, but I don't feel right about you doing what you're doing. It's too... I don't know....\" He didn't really finish his thought again -- I think he found the discussion embarrassing -- but I understood his meaning: he felt that my gagging on his erect penis and my sucking his balls into my mouth was debasing me in some way, and he was far too kind a man to allow that to happen.\n\nSo he decided to change the discussion to a less uncomfortable subject, saying gently, \"I would rather be inside you, if you don't mind.\" Mind! Why in the hell would I mind, I thought to myself? He had already given me more pleasure than I thought possible, and he knew the terrain, so to speak, far better than I did. Besides, I trusted him, so I resolved to let him take control. Well, sort of.\n\nThe next morning Dave told me that in the handful of sexual encounters that he had had since his wife's death, he had suffered from erectile dysfunction each time, and he hadn't been able to experience an orgasm in any of those situations. That had left him sad and frustrated, he said, and even lonelier than before.\n\nBut I didn't know about that at the time, and while he may not have been able to keep it up in those other encounters, that problem sure as hell didn't appear to be an issue on that particular evening. He was still as hard as a rock, so I shimmied my way astride his legs and crawled on top of him. Once my sex was hovering over his erection, I lifted one knee up and placed my foot flat on the mattress so that I could slide his cock, still wet with my saliva, into my already creamy pussy.\n\nAs soon as his distended head entered my wetness, I dropped my knee back to the mattress and impaled myself on his spike all at once. He slid into me to the hilt, and in synchronized harmony, we both elicited long, sensuous groans, \"Aaaaaaaaaaaaaaggggggggggggghhhhhhhhhhhhh!\"\n\n\"Oh my god!\" I continued, \"You feel so good inside me! I know you're going to make me cum again!\" I was looking into his eyes now, and though it was disguised by his desire and longing, I could see just a tiny kernel of self-satisfaction on his face. I knew that it pleased him greatly to be able to make me cum.\n\nBefore I had a chance to start moving, Dave lifted his hands in front of him, so that his elbows rested on the mattress next to his torso, and with his palms facing up, creating a flat surface, and with the fingers on each hand spread apart so as to interlock with my own, I somehow instinctively understood his offer. I reached my own hands out to his, so that I could rest my weight on his supporting hands.\n\nAnd then I began moving. I started slowly at first, but because I could gain leverage from his hands, I soon began rocking as far forward as my frame could manage and grinding my hips into him, as I was twerking my willowy ass on his firm pole. As I did, he leaned forward too, moving his mouth until he soon caught one of my breasts with his lips, and he began sucking my nipple fervently as I rode him.\n\nIt didn't take me long. I was sliding up and down his entire length, and grinding my clitoris against his pubic bone, and after five minutes or so, I was reaching another peak. I announced my intentions far more loudly than I expected. \"Oh my god! I'm cumming! I'm cumming again! Oh! Oohh! Ooohhh! Oooohhhh! Ooooohhhhh! Oooooohhhhhh!\" More spasms rocked my slender frame, and again I rode a second intoxicating orgasm to conclusion atop Dave's stiff cock and strong hands.\n\nAnd before I had had a chance to come down from my climax, he released his lock on my hands and, with both of his, he pushed my knees backwards until I was lying flat on his chest with my big tits mashed against his chest and his full erection still deep inside me.\n\nBefore I knew what was happening, Dave had rolled me sideways until we had exchanged places, and he was on top of me, thrusting rhythmically into my pussy and moaning quietly. Though I knew nothing of his earlier problems with ED, I somehow instinctively knew that when he came that night it would be explosive, but for now, I couldn't think of anything except how good his cock was making me feel.\n\nSoon he was bracing himself on the bed with his arms fully extended as they straddled my breasts. His legs were close together between my thighs and his toes were fully extended so that his meager heft was supported only by my hips, ass, and pussy as well as the tops of his feet and his outstretched arms, forcing him to arch his back severely as he raised his face to the skies while he thrust himself into me.\n\nAn odd thought seeped into my brain, whether consciously or unconsciously, Dave had positioned himself into a yoga pose -- Upward Facing Dog -- something that I was learning to do myself in the university required Physical Education course that I was taking that semester, largely against my will. I guess it wasn't surprising that instead of bowling or archery, or some other such nonsense, I had chosen yoga to satisfy the requirement. It had actually been really good for me, and I ended up liking it a lot.\n\nThe effect of this position was that a good deal of Dave's weight was pushing against my core, and it felt unbelievably good because now he was grinding his pubic bone against my clit as he increased the tempo of his deep thrusts. He was incredibly lithe and agile, and I marveled at the physical stamina that it took to fuck like this for as long as we did. I couldn't believe he was 60 years old.\n\nHe kept himself in that same position for perhaps as much as 30 minutes, and though I had already cum twice, he would bring me off two more times fucking me in that contorted pose. After about 15 minutes, I came again, screaming my release as my pussy unleashed another flood of arousal.\n\nBut Dave seemed to be on a spiritual quest now, evidenced most clearly by his heavenward gaze, and when he didn't look down at me at all as I groaned my way through that climax, I wondered for one brief, but strange moment, whether this search for enlightenment wasn't a lot like Huck Finn's -- something was there, but neither could tell exactly what it was. Then, another strange thought hit me -- maybe he was praying, and if so, I wondered, to whom? -- Shiva? Buddha? God? His dead wife?",
        "Whatever or whoever it was, he didn't stop, so the prolonged effect of Dave's insistent thrusting was that the carnal ecstasy continued to build inside me as his plunging strokes grew more vigorous, almost violent. After a while, he was slamming himself into me, and the slapping sound of his hips and thighs as they pummeled my ass echoed through the still room, bathed as it was in the blue light of the moon which I could now see rising through the east window. The pleasure was delirious, and now I was lost in an erotic dream.\n\nI began reaching both of my hands upward to lightly stroke his slender torso, running my fingers through his chest hair, brushing against his nipples, and then the sensuality of the entire scene so thoroughly overwhelmed me that I moved my hands to his neck and began to stroke him there as well. When I did, I could feel his pulse pounding like a jackhammer through his jugular vein.\n\nAnd then I was making noises that I didn't even know could come out of me, and saying words and phrases that I had never before uttered, obscene words and phrases, the kinds of things that would embarrass me to no end if they were repeated back to me, \"Oh shit! Fuck me baby! Keep fucking my pussy! Oh, Jesus Christ! Oh, harder! Oh, fuck me harder! Oh baby, make my wet pussy cum again! Oh, Jesus Christ!\" I knew that it would take only a few more strokes to put me over the edge.\n\nThen, I did three things that I still can't believe I did. I was the absolute antithesis of the slutty undergrad and all that that stereotype evokes, so I don't know where all of this came from, though it should be noted that my favorite professor was pounding my pussy relentlessly at that very moment.\n\nBut it has now been over a decade since that night, and I am still amazed and incredibly embarrassed that I did what I did, especially considering that I did these things with the man that I admired as much as any male I have ever met in my life. Then again, I think maybe in the long run, my \"sluttiness\" helped him emerge from his self-imposed asceticism, so maybe I shouldn't be so ashamed.\n\nDespite the fact that Dave had my hips pinned to the bed with his weight, I somehow managed to contort my body enough to reach my right arm underneath my ass until my hand emerged between my legs, and I was able to reach up until I could touch and then stroke his smooth balls with my fingers.\n\nAnd then the slutty undergrad in me turned the dial up a few more notches, and I started screaming for his cum, begging him to shoot his jism inside me, \"Give me your seed, baby! Shoot your hot cum load deep inside me! Cum for me baby! Cum for me!\" and then I bent forward, and reaching my tongue to his chest, I began licking one of his nipples, sucking it into my mouth, and the combination of those three efforts seemingly sent both of us crashing toward our climaxes.\n\nJust as that evening's strongest waves of pleasure started rolling through me like a juggernaut, each as mercilessly destructive and unstoppable in strength as the Hindu temple cars that gave their name to that metaphorical force, Dave now look down at me with unfathomable lust in his eyes and began grunting his own climax more loudly and crudely than I had ever before or ever since heard any man do, much less one of such grace, kindness, refinement, and good humor, \"Uuuuuuuuuuuuuuugggggggghhhhhhhh! Uuuuuuuuuuuuuuugggggggghhhhhhhh! Uuuuuuuuuuuuuuugggggggghhhhhhhh! Uuuuuuuuuuuuuuuuuuuuuggggggggggghhhhhhhhhhh!\"\n\nAnd then I felt his cum bathing my pussy, washing away his pain, regret, self-loathing, guilt, and shame. He kept shooting for the longest time, and because my fingers were cupping his balls as he was orgasming, I could feel every contraction as he deposited each spurt deep inside me. He kept up his thrusting long after his balls had ceased their quaking. I guess it had been a long time.\n\nAnd then finally, slowly and with remarkably lissome movements, he extricated himself from our coupling, and laying himself down gently on the bed next to me, he pulled my face to his and kissed me with great passion, tenderness, and, dare I say, gratitude.\n\nAfter many minutes of kissing and embracing, Dave finally spoke, \"Thank you, Lily. Thank you, for being so patient with me. You brought something out of me tonight that I didn't think I still possessed. I am eternally grateful.\" And even though it had been the most memorable evening of my short life, that was all he had to say that evening, all that he was willing to share with me at least verbally at that time and in that place.\n\nWe fell asleep in each other's arms and slept like logs in the blue darkness. "
    ],
    "authorname": "stfloyd56",
    "tags": [
        "blonde coed",
        "college literature professor",
        "scholarly research",
        "emotional catharsis",
        "cunnilingus",
        "fellatio",
        "cowgirl position",
        "missionary position",
        "overcoming ed",
        "internal climax"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/of-rivers-and-religion-ch-01"
}