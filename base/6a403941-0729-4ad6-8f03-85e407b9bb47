{
    "title": "Grayson Sontang in Space Ch. 04",
    "pages": [
        "When Grayson reached for the rest of the books on the shelf to throw all at once, Hendon wrapped his arms around her and pulled her back away from the potential missiles. \"You're going to have to explain that one, preferably without throwing anything else,\" he said in his best calm-the-hysterical-woman voice.\n\n\"Don't you get it?\" she yelled, struggling in his grip. \"There's no decision to make! We're out of options. We deploy the net and then we live or die.\"\n\n\"Okay,\" he said calmly. \"We're in space. That's the nature of the territory.\"\n\n\"Not for me. There's always supposed to be options.\" She paused in her struggles to try to catch her breath. \"That's how I succeed. I always pick the best option.\"\n\n\"Then pick between doing nothing and deploying the net.\"\n\n\"You fucking idiot,\" she screamed, trying to stomp on his instep and twist out of his grip at the same time. Except she was barefoot and he had spacer boots on, not to mention his extensive training in physically detaining humans and Xenos. Grayson howled in frustration and suddenly found herself on her back on the bed, with Hendon sitting on her thighs and pinning her wrists beside her shoulders. Her hair was fanned across her face and she glared up at him through a veil of black strands.\n\n\"Here's an option for you,\" he said more harshly, leaning over her, obviously running out of patience. \"Either you calm down and start talking, or I call Bogart to come and sedate you.\"\n\n\"Get off me, you fucking asshole,\" she screamed, writhing in a vain effort to push him off.\n\n\"Hal, open comm to Officer Bogart. Hank, I need sedation for female subject, approximately,\" he paused, \"Fifty-five kilos.\"\n\n\"Fifty,\" she spat, and that grin spread across his face.\n\n\"Acknowledged,\" Bogart answered. \"On my way.\"\n\nGrayson glowered at him. \"Wipe that grin off your face,\" she threatened.\n\n\"Or what?\" When she didn't answer, he grinned even wider. \"So why don't you start by telling me about this son you say is down in the hold.\"\n\n\"Let go of me,\" she said as calmly as she could while breathing hard.\n\n\"Not till it's all out there so you have nothing more to go nova about.\"\n\nShe scoffed. \"Then I hope you've emptied your bladder recently.\"\n\n\"I can hold it as long as you can,\" he challenged with another grin. When she closed her eyes and groaned in irritation, he became thoughtful. \"Okay, so if one of those kids is yours, we'd be looking for a boy that was fostered or adopted. Hal, male passengers under, say, twelve years of age. Parentage...\"\n\n\"Stop it,\" she snapped. \"Hal, ignore that request.\"\n\nHe leaned closer. \"If Hal won't answer me, I can query Confed. You know I'm not going to let this go.\"\n\nThere was a long pause, then, \"I was grounded off a freighter,\" she answered softly, so he had to remain close to hear her. \"Broke my arm.\" Her voice faded softer and softer. He leaned closer. \"I was healing, waiting for another hitch...\" She lunged up, trying to smash her head into his, but he'd predicted the move and sat back, laughing at her.\n\n\"So clever,\" he chided. \"Now the real story.\"\n\nShe seemed to visibly sag. \"Please let go of me.\"\n\nHe studied her as Bogart entered the room with an infuse syringe. Bogart took in the scene and coughed to try to hide his snicker. Hendon sat further back and released one of her wrists to take the syringe from Bogart. \"She actually prefers it from the back...\" Bogart started, but when Hendon shot him a look, he raised his hands and backed out of the room. \"Holler if you need any help,\" he called as the portal closed. \n\nHendon released her other hand and glanced quickly at the syringe before putting it into his shirt pocket, then he watched her closely as she rubbed her wrists. \"Now, let's start over from the beginning,\" he suggested, resting his hands on his thighs and his weight on her legs. \"A son?\" he prompted as she brushed the hair from her face.\n\nShe turned her head to the side, away from his intense scrutiny. \"I was telling you the truth.\"\n\n\"Look at me and tell me the truth, then.\"\n\nShe sighed and met his gaze. \"I was working a freighter. A crate fell. My arm was broken. All three bones. I was dumped off on Sirius. I healed up. I was waiting for another hitch. I had an affair. End of story.\"\n\nHe pulled the syringe from his pocket and studied it, watching her face beyond the device. \"Now fill in the blanks.\"\n\n\"I don't know what you mean,\" she said, but her eyes were on the syringe. She loved alcohol, but hated drugs, and he seemed to have guessed that.\n\n\"A crate fell. How?\" When she didn't answer right away, he shrugged. \"I've got lots of time. We won't deploy the net until Het and Sip are satisfied with the installation.\"\n\nShe sighed. \"It was my hold, my responsibility. I was checking it before jump. A stack of crates wasn't secured. Then the pilot made a last minute course adjustment.\"\n\nHendon put the syringe back in his pocket. \"That doesn't sound like you.\"\n\n\"It wasn't,\" she snapped with a touch of bitterness. He only cocked an eyebrow. \"After the jump, they pulled the crate off me and splinted my arm. I went back and looked. The buckling on the strapping had been laser cut. The report said it was a bad weld.\"\n\nHe nodded sagely. \"So two culprits. Someone with a pen laser to damage the buckle. And someone to file a careless, or flat-out false, report.\"\n\n\"So then I was dumped on Sirius to have the bones set.\"\n\n\"Back up,\" he commanded.\n\n\"What?\"\n\n\"It had to be at least five days from jump point to planetfall. Probably more.\" Grayson frowned. \"Come on,\" he prodded. \"You wouldn't let something like that slide.\"\n\n\"It's not relevant.\"\n\nHe smiled slyly. \"Satisfy my curiosity.\"\n\nShe scowled. \"Despite rumors to the contrary, I am choosy about who I let close to my privates.\" She gave a twist to her hips just to remind him how close he was. \"Some men don't take rejection well.\"\n\nHe frowned. \"To the point of endangering your life?\"\n\n\"Let's just leave it that when saying no doesn't suffice, I tended to follow up with more physical - and public - expressions of my displeasure. It turns out that humiliation is an even stronger motivator than rejection.\"\n\n\"So,\" he concluded. \"Revenge against the cutter and the liar?\" She shrugged. \"And did they survive?\"\n\n\"Do you really think I would tell you if they didn't? Admit to murder?\"\n\n\"I don't see you committing murder,\" he said thoughtfully. \"More like those options you were talking about, picking an appropriate, untraceable consequence fitting the crime.\"\n\nShe smiled - finally - and shrugged. \"I'm not sure I like the fact that you get me.\"\n\nHe smiled in return. \"Leaving that lay, for the moment... So, you were on Sirius. Healing.\"\n\n\"And had an affair.\"\n\n\"Uh, uh. Back up. So. On Sirius. I wasn't born there, but I've spent more than enough time there to know that Siriuns do not mix with off-world spacers. Even for casual sex. You weren't hanging around healing in spacer town.\"\n\n\"Okay, I got bored. Sitting around waiting for bones to knit is not my style.\"\n\nHe squinted at her, then shook his head. \"I don't see it.\"\n\n\"Don't see what?\" she demanded. \"And get off me!\"\n\n\"Not till I understand. I figure you'd either have to pass as Siriun Sector native, or present yourself as someone of consequence from some other sector.\" He scanned her torso. \"Most of the occupied planets in Siriun Sector are higher than one grav. Nothing personal, but you're too puny to pass for a native from a one plus planet.\"\n\n\"You have a peculiar notion of native,\" she remarked. \"Sip and Het might want to talk to you about that some time.\"\n\n\"Oh, we've talked. Regardless, you may have changed your face, your breasts, your ass, who knows? But bone structure, muscle mass, that's a whole other thing. So that means you passed as someone not native, but still desirable to a Siriun. So, let's say we rule out your current facial features, skin, eye, and hair color. You know, the easy stuff to change.\"\n\n\"I have a ship to fly, Hendon,\" she protested.\n\n\"Oh, I must be getting close, because you were all too willing to abdicate that responsibility not two minutes ago. Where were we? Ah, yes. So, you led someone of some importance - else why would this child be on this ship in this predicament - to believe that an assignation with you would be to their benefit, somehow. Then you not only got pregnant, but carried the child to term, and then gave up said child? To what? To the father? To adoption? And yet you care about this child enough to be tormented by a life and death decision, not for yourself, but for the child?\"\n\n\"You do not want to follow this road to where it leads, Hendon. Drop it and let my fly my ship.\"\n\nHe grinned malevolently. \"I'm too much like you, Sontang. I can't let it go till I've sucked the marrow dry. See, there's too much at play here, too much that I don't understand, and until I understand, I can't risk the lives at stake. So give it all to me. Who is the child and who is the father? And while you're at it, why?\"\n\nGrayson flew up, reaching for his head, knowing even as she did that she had no hope of twisting him off her or even inflicting more than a bruise from her confined position. And he just kept grinning as he snapped his hands around her wrists and forced her back down on the bed. He leaned over so close to her, his face was only inches away. She strove not to turn her head away. \"If I have to sedate you, someone else will be flying your ship. Think about that,\" he suggested.\n\n\"I won't tell you who,\" she hissed.\n\n\"Then tell me why and how,\" he bargained.\n\n\"How? You want to know how babies are made?\"\n\nHe laughed an actual, natural laugh and she found herself relaxing ever so slightly. There was a human inside there somewhere, not just a robotic, manipulative law officer. He pushed away slightly, and loosened his hold on her wrists. She sighed. \"If I tell you why and how, will you get off me?\"\n\nHe pondered. \"Yes,\" he finally agreed, and she knew it was because he was sure he could figure out the who.\n\nShe took a deep breath. \"I was running out of money. Trade was bad. Ships weren't hiring.\"\n\n\"You didn't... You weren't...\"\n\n\"No, I was not tricking,\" she snapped, her eyes shooting fire, but he just grinned and she realized he'd been baiting her for a change. She scowled at him. \"I decided to take the money I had left and set up a con. Siriuns have a certain fascination with Denebs. God knows why. But I could pass, so I did.\" A brief puzzled frown flashed across his face as he tried to reconcile her current features with those of a Deneb. The settled worlds hadn't become the great melting pots that people had expected, as the human race flowed out into the galaxy. Rather, races, cultures and nationalities trended toward planets that felt home-like to each particular group, then in-breeding of sorts within the small populations of settlers tended to make the individuals look even more like each other. Add to that natural factors like diet, gravity, solar conditions, etc. and adaptations selected for even more commonality.\n\nGrayson didn't notice Hendon's puzzlement. She was remembering. \"I crashed a huge Deneb Embassy party, looking for a Siriun mark. And not for what you're thinking. I was looking for quick money, not a nine-month blackmail scheme.\"\n\n\"Go on,\" he nodded with encouragement.\n\nShe wriggled in discomfort, but he didn't take a hint from it, so she continued, hoping if she gave him way too much elaboration he would finally get tired of this game. \"I got... distracted. I was chatting up men - and a few women - who looked like they had heavy wallets. One fellow took particular interest in me. I'd already ruled him out. He was...\" she paused, choosing her words carefully. \"Accompanied by others who seemed to be looking out for his welfare. Perhaps because he was imbibing over much of the Denebian whiskey. Anyway, he kept showing up, interrupting, stepping on my game. When I'd chosen my mark, I knew I had to get rid of this other guy before he ruined everything. I figured the easiest way was to give him what he wanted. I mean, he was married, his wife was right there at the party. I figured a quick suck or fuck and he'd be on his way and I could get back to work. It was after him when I swore off married men, by the way.\" She glanced at Hendon, but he showed no sign of losing interest.\n\n\"I'd already scoped out a nice quiet room in the back of the embassy, with a different purpose in mind, but I figured it would do for a quickie. I told him I'd wait there for ten minutes and if he could shed his wife and friends, to come meet me. So he shows up, even more drunk than I'd realized, and I'm wondering if he's even going to be able to get it up. Then he launches into this sob story about an arranged marriage and how he can't have kids, you know, trying to explain why he's picking up strange Deneb women. I'm thinking to myself that he's just drunk enough maybe I can 'help' him pass out and leave him convinced he had the best sex of his life if he could just remember it. But then he begs me to blow him, so I figure what the hell. I manage to kneel despite the ridiculous Denebian formal gown that I 'borrowed' for the event. I pull him out of his pants and he's hard as a steel rod.\"\n\nGrayson peeked up at Hendon, hoping he'd ask for less detail, decide he wasn't really all that interested in what she'd done on Sirius years ago. No such luck. He was watching her intently, trying to judge her veracity, no doubt. \"So I start to blow him, figuring I can get him shooting his rocks off in no time and send him on his way. Don't get me wrong, he was a young, good-looking guy, and well-endowed, if you know what I mean. If I hadn't had business to attend to... Anyway, then he decides he wants to do me. Wants to find out if Denebian women are really as wild as they say when they're fucked. Obviously, he'd led a pretty sheltered life. I wanted to school him, tell him a woman is as wild as a man makes her feel. You know, put it back in his lap, so maybe he'd start fucking his wife better and then he wouldn't need to go looking for wild women elsewhere.\"\n\nShe glanced at Hendon. \"Back to the story,\" he drawled.\n\n\"Oh. Yeah,\" she conceded. \"So he does me, I put on the act he's expecting, and then he goes his merry way with a big grin plastered on his face. I tidy up the room, then head back out to the party and my mark. Except one of the guy's buddies now seems to be watching me the whole time. I mean, I figure there's no way the guy's going to be up for seconds, but I'm giving him a wide berth, anyway, just in case. But this buddy, who was glued to him before, keeps showing up in the same room I'm in. I get paranoid, ditch my game and head for the hotel where most of the out-of-town Denebs were staying. Fucking room cost a small fortune, but it was the easiest way to mingle with the party-goers and slip into the party unnoticed. Anyway, I had the gown to return to its rightful owner.\"\n\nThe 'borrowed' gown,\" Hendon commented.\n\n\"Yeah, borrowed. She could only wear one at a time, after all.\" Grayson glared at him, defying him to argue the point. He simply made an impatient gesture for her to get back to the story. \"So bright and early the next morning, I slip out of the hotel and I'm headed back to spacer town trying to think up a new scheme to get some money and some big Siriun dude grabs my arm and says either I come with him or he'll turn me over to the cops for impersonating a Deneb. I start to argue with him because I know damn well even the Siriuns don't give a fuck about impersonating Denebs, so then he says the guy from last night wants to see me about something. He sneers just like you, by the way.\"\n\n\"Thank you,\" Hendon replied. \"Does this story have an end?\"\n\n\"You're the one sitting on top of me demanding to hear it,\" she pointed out. He cocked his head. She sighed. \"So partly out of curiosity and partly because he has hold of the arm that had been broken, I went along and we ended up in another hotel room. The guy is there waiting and the dude holding me pushes me forward and says something to the effect of 'turns out she's a spacer' except he didn't say it that nicely. And he sneered,\" she added.\n\n\"Do tell.\"\n\n\"But the other guy, he doesn't seem to care. He just kind of looks me up and down and says 'I want to spend more time with you.' So I say ''thanks and all but I'm a working girl and I need to hire out on the next freighter that will take me.' And he says 'hang around for a month and I'll guarantee you a place on a Siriun freighter. You can stay with them or move on from there.'\"\n\n\"You don't need to give me the entire dialogue,\" Hendon finally said in exasperation.\n\n\"Sure?\" she asked.\n\n\"Sure.\"\n\n\"So I stayed. I got pregnant because what he didn't tell me was that HE couldn't have children because his WIFE couldn't bear children. I was going to have an abortion, but he was desperate for an... For a son and offered me a bunch of money to carry the baby to term and let them claim it was his wife's. Enough money to buy my own ship. A junker, maybe, but no more freighters. So there you have it. I was a well-paid surrogate. Now get the hell off me.\"\n\n\"You're done throwing things?\"\n\nShe shrugged. \"I was almost out of stuff anyway.\"\n\n\"Back to the bridge? We need you. No one else knows this ship the way you do.\"\n\nGrayson sighed. \"I don't have a choice, do I?\"\n\n\"No.\"\n\n\"So you'll get off me?\" He cautiously lifted his leg and pulled away from her. She rolled, rubbing her back where she'd been laying on one of the books she'd thrown. He bent over to pick a book up from a puddle of coffee on the floor and in a flash, she had her back to the portal, arms crossed, trying to look threatening, which was hard even for her to do when she was more than a head shorter than him. She could actually see him trying to hide a smile.\n\nShe scowled. \"Your turn for some truth. Why haven't you told anybody what you saw in the engine room?\" she demanded.\n\n\"What did I see?\" he asked patiently. When she only tried to look darker and more dangerous, he answered his own question. \"I saw an empty cargo hold. Not against any law I know of.\"\n\n\"You can't blackmail me. It's been tried.\"\n\nHe put his hands on his hips. \"Lady, you have nothing I want. I don't need you to fly this ship. Het and Sip are perfectly capable of overriding your computer, Evans is a skilled pilot. The ship is already mine, to all intents and purposes. The only think I'm interested in is doing things the easiest, most efficient way so we can get these people home and everybody can go back to their lives. Including you, though I'd thank you to stay out of my sector in the future. Save your antics for the Feds.\"\n\nGrayson hesitated. \"I have nothing you want?\"\n\nHe gave her that wolfish grin. \"Let's save that particular discussion for a later date when our situation isn't quite so critical.\" She was left again to wonder if he was bluffing or not.\n\n****\n\nGrayson was sitting in her command console, biting what was left of her fingernails. Evans had fired up the hydrogen engines again for yet another three hour burn. Het and Sip had approved the installation and the deployment mechanism of the net, and were back down in the holds with Bogart; readying the human cargo for what might be a bumpy ride as the net went into play. Hendon was sitting with his back to the wall, hardly a comfortable position, but he seemed to have learned his lesson after being thrown into that same wall during the last bumpy ride. He did have a cup of Hal's coffee in his hand, though. Grayson smiled to herself. The man was finally showing a weakness, even if it was just an addiction to Earth coffee.\n\n\"Your command, Grayson,\" he said, and she cocked an eyebrow at the use of her first name, but didn't turn toward him. Her eyes were glued to the screen showing a camera shot of the top, fore of the ship. \"Will we be able to see it, Hal?\" she asked.",
        "\"Material is highly reflective and will pick up star shine. I can enhance depth of field, if you wish.\"\n\n\"Let's do without for now.\" She took a deep breath. \"Deploy, Hal.\"\n\n\"It was a long moment before their eyes adjusted sufficiently to see the faint sparkle of what looked like a fine thread slowly reeling out behind them, though of course, it appeared to be in front of them, given they were looking at the fore of the ship and at the main screen in the front of the room. Grayson tapped a couple of buttons to get a sim of the same event on one of her command monitors. It took almost half an hour to reach the near end of the entire net, and, as it was traveling at the same speed as the ship, it floated looped and coiled behind them like a tangled, silvery thread. Grayson was trying not to hold her breath. It looked for all the world like it would end up in a thousand knots. Impossibly slowly, what looked like a single thread began to untwist into many threads at the point where it extruded from the nose of the ship. Equally slowly the entire length began to straighten, like a fishing line caught in the gentlest of currents. \n\nWhen it became evident that, at least until it began to unfurl, it wasn't going to effect the smooth ride of the ship, Hendon ordered more coffee and brought some to Grayson, leaning over her shoulder to watch the simulation on her monitor. The sim was showing more detail then the camera could reveal of the fine gossamer as it was beginning to unfurl. \"It's like a spider web,\" Grayson said softly, more to herself than the men in the room. \"So delicate and yet so strong.\"\n\n\"A what?\" Hendon asked.\n\n\"Spider. Eight-legged Earth atrocity.\"\n\n\"I'm reading hydrogen,\" Evans said.\n\nGrayson scowled at the back of his head. \"Of course you are. It's all around us.\"\n\n\"No, I mean moving into the fuel cells. Barely measurable, but still.\"\n\n\"Already?\" Hendon asked.\n\nEvans nodded enthusiastically. \"We did it!\"\n\n\"Don't count your eggs until they're unfurled,\" Grayson muttered, but she was staring at the main screen. The men exchanged puzzled frowns, but left it at that.\n\nIt took another hour for the net to fully unfurl. When Hal opened the iris to release the unwanted hydrogen compounds, there was a brief tugging sensation, but then the ship quickly settled back into its usual thrust versus grav pattern, wearying but tolerable. From Hal's camera they could see the entire net as a mirror-like reflection of the stars in front of them, as well as see the brighter stars behind it, shining through the microscopic mesh. Hendon asked Hal to display the image on the screens in the cargo hold. Then he asked the computer to cook Grayson a steak. She was still staring at the main monitor, like she was waiting for something to go wrong.\n\n\"You did it,\" he told her. She shook her head but didn't respond. \"Sometimes things don't go wrong,\" he pointed out.\n\n\"Tell me that when we're off-loading at Sirius.\" She glanced at him. \"You should take a rest break. Go on. Use my bed again, since you've filled up all the gee chairs. Just don't clean anything.\" He gave her that grin again, and she knew he was going down there to pick up all the books she'd thrown. She swore under her breath, but she was too tired to fight him about it. Piloting a ship, as well as waging a mental - and physical - war with a Fed was just more than a body should have to deal with. As soon as he was out of the room, she reclined her chair and 'rested her eyes' for the rest of the engine burn. Evans glanced at her, then typed a command to Hal to keep her steak warm until later.\n\n****\n\nTen days later, they were coasting toward the destination wormhole. They were still going too fast for Grayson's tastes, but she had not been to the El Rehla system before and white giant suns were about her least favorite. She had opted to conserve what was left of their collected hydrogen for in-system maneuvering. Evans had backed her up when she told Hendon her plan. Besides, it had gotten them to the wormhole a little earlier than original projections. \n\nThe next tricky part was reeling in the net. Grayson had Hal turn the exhaust burners to each side of the net back on to be available for use and they'd put together a contingency plan for if the net either didn't reel in, or the normal safeguards didn't cut it loose and blast it away from the ship. That was the biggest concern, because if it wasn't safely dispensed with, it would follow them through the wormhole and then, potentially, drape itself over the ship as they began to decelerate into the El Rehla system. In theory, any remaining hydrogen held in the net would self destruct with only minor encouragement, like a certain zeppelin back on Earth ages ago. Grayson just wasn't very fond of statements that began with 'in theory.'\n\nShe had contributed some of the meat in her freezer hold to the passengers' food stores - at double the cost - and she hadn't heard much in the way of complaints, though the Confeds might have been shielding her from the worst of that. Still, she was plotting various rapid approaches to the system and Prime planet in particular to save as much time as possible. She had found a small time trader only a few systems away, willing to divert from his route to meet her at El Rehla with the parts she needed, for a very handsome fee courtesy of the Siriuns. She'd gone over installation protocols with Sip and Het. She'd also laid in orders for the supplies they would need. \n\nTheir injured passenger was another matter. Grayson was insisting he be dropped at El Rehla for medical attention. Bogart and the pediatrician felt they'd accomplished sufficient repairs for him to make it to Sirius. The passenger himself, now awake, was also insisting on going home for treatment. Had it been anyone but Goldstone, Grayson probably would not have cared. Unfortunately, she knew if she put up too much of a stink, it would only raise suspicions and there were enough of those going around as it was.\n\nHendon had totally dropped his inquiry into which child might be her son, so she assumed that he had figured it out. What that meant for her, she had no idea and he wasn't handing out any clues. In fact, he seemed to be avoiding her most of the time, spending more time down with the cargo. Perhaps he had deduced her half-formed scheme to seduce him into a more pliable antagonist. On the other hand, if he was avoiding her, maybe it's because he was worried she just might succeed. And they were still a long way from home, after all. He did appear back on the bridge when it came time to test the retrieval mechanism for the net. Het and Sip showed up, too. There wasn't really anything they could do if the mechanism failed. The only vacuum suit Grayson had on board was one her size and there was no way either of the native Siriuns could fit in it. Plus they had opted to keep the net deployed as long as possible. As they neared the short jump to El Rehla, there was more loose hydrogen to be had, and more was always better. But it didn't really leave any time to try to fix a malfunction.\n\nGrayson took one last look at the camera shot of the huge net. It was now distinctly reflecting El Rehla and the not too distant Hadir brightly, along with the rest of the beautiful, lush star field. In space, one seldom had the time or inclination to admire the pale colorings of stars and nebula against the intense blackness, but there was something about the fact that the scene was being reflected upon fabric which was part of her beautiful Breathless Dragon that made it special. She was dearly hoping that the retraction worked, because she wanted very much to see it again some time, especially when there was not a life or death matter weighing on her mind.\n\n\"Okay, Hal, reel it in.\" The process was slow, as the net was both twisted into a tight thread and drawn inside to coil against the upper, outer shell of the craft. Grayson smiled to herself as she watched Het and Sip staring at the screen and rumbling softly in their native language. She knew they were eager to go up into the crawl space and insure the net had survived and would be available for use again. Their sparkly toy was working beautifully. In fact, there was only one small glitch at the end, where the iris had possibly malfunctioned slightly when Hal had closed it, but Het seemed sure it was easily fixable and wanted to try even before the jump. Grayson nixed that. There were too many sensitive electronics in the crawl space that could be damaged if anything went wrong on the jump. She'd even had Evans on supralight with the Feds several times over checking on the status of the wormhole and the space on either side. They were coming in at one and a half AU/D above the rating for the jump and that was justification enough for some nerves on the bridge. It wasn't an often-used jump, because they'd been thrown so far out of the main ship routes, but it had been used in the last week, and since Grayson worked the fringe so much, seldom used jumps were second nature to her. Het and Sip went back to the holds to help with the passengers and Hendon settled in on the bridge as they neared the wormhole. When they passed the point at which they could have veered off, Grayson started holding her breath.\n\nThey were still moving ass backwards, ready to begin deceleration immediately when they broke free of the jump. Hal had a sim up on the screen looking down on their approach to the jump. Grayson was mostly studying her monitors though, checking on various ship systems. \n\n\"Mass detection,\" Hal announced, but even before he finished the words, Grayson had looked up at the screen just in time to see a simulation of a ship, about their size, zoom by and disappear in the wormhole.\n\n\"What the fuck, Hal?\" she screamed.\n\n\"Please rephrase question,\" the computer replied.\n\n\"What was that?\"\n\n\"Energy aura and emmissions suggest small transport or trader ship.\"\n\n\"No beacon? No visible ID? Can you show me a still?\"\n\n\"No cameras were operating at sufficient frames per second to capture discernable shape.\" He flashed a still in the corner of the screen that only showed a blur of faint light obscuring stars behind it.\n\n\"Someone trying to blow up this wormhole,\" Hendon asked.\n\nGrayson shook her head. \"He's long gone out the other side. I don't know anything that could blow fast enough at that speed to take out a wormhole, especially a short one like this. Most of the explosion would have been on one side or the other. Evans?\"\n\nHe was staring at the screen, too. \"Uh, yeah,\" he agreed, obviously distracted.\n\n\"Someone aiming for us, then?\" Hendon asked.\n\nGrayson snorted. \"The odds of hitting another ship, traveling at speed, in the middle of space? You'd have to match trajectory, speed. Damn near impossible. That thing was going, what, forty, fifty AU/D?\"\n\n\"At least,\" Evans said. \"It would have needed, maybe, sixty-three AU/D with its conversion engines pointed eighty-seven degrees starboard to have a hope of escaping El Rehla. And one hell of a fast burn on those engines even at that.\"\n\nGrayson glanced at him. He'd apparently been doing some calculations, in case they hadn't been able to get down to speed for the wormhole. Her admiration for him grew yet again.\n\n\"Thirty seconds to jump,\" Hal said in his ship-wide voice. Grayson clutched her chair arms. She couldn't help it. Even though there was no physical sensation associated with jumping, there was one hell of a mental one, at least for her. The idea of being someplace, in physical form, yet where no dimension existed, was almost as hard to swallow as the fact that the wormhole actually spat you out the other side because you were so unpalatable to it. \n\n\"As soon as we're through, Hal, I want to know where that ship went.\" They entered the wormhole and the simulation blinked to blackness.\n\n\"Understood,\" the computer replied, and just that fast they were through. Grayson started breathing again. El Rehla was a small but very bright sun in the center of the screen, even from this far out. \n\n\"Commence hydrogen burn, twenty gees for one hour, ten gees for the next hour,\" Grayson commanded. \"Any sign of our company?\"\n\n\"Mass detection out of range. Nearest beacons are emanating from the outer asteroid belt, indications are mining ships and robots. I am detecting probable hydrogen exhaust two degrees starboard. I can project a possible trail with further readings.\"\n\n\"Stay on it, Hal. I want to know if he's going for escape velocity or an elliptic orbit.\"\n\n\"There may be insufficient readings to determine projections.\"\n\n\"Do your best.\"\n\n\"I'm on supralight with ground control. They are aware of our situation and have approved our fast track to orbit,\" Evans told her.\n\n\"Thank you. I'm beginning to suspect a Confed pilot gets far more cooperation than a mere trader,\" she said wryly.\n\n\"You, ma'am, are no mere trader,\" he replied with a smile.\n\nGrayson smiled back, beginning to relax for the first time since picking up her strange cargo. Even though they were many parsecs, and jumps, from Sirius, it was beginning to feel like the last leg of an Odyssean adventure. \"Okay, Hal, let me see system data, orbit protocols, all that good stuff.\" She sat back and began to study her monitors.\n\n\"How about something to eat instead?\" Hendon asked. Grayson jumped. She had forgotten he was still on the bridge. In fact, had actually been enjoying the past days when he seemed bent on avoiding her. \"I'll cook. Be in the mess in thirty minutes.\" He turned and left.\n\nGrayson watched him go. She hated to admit it, but his cooking was definitely better than the combined efforts of Hal and the kitchen bot. She would never tell Hal that. Or Hendon. But the thought of a properly cooked steak was making her mouth water. When she looked back toward her monitors, Evans was grinning at her. \"Go,\" he said. \"I'll review the information and save you some reading. You've done everything you can before our arrival, so take some downtime now. You'll have plenty to do when we get planetside.\"\n\nShe took a last glance at the system they were racing into and shrugged. \"Okay, I guess.\" Then she threw a scowl at Evans when his grin widened, before trying to appear reluctant as she left the bridge. She headed for her quarters. If she had thirty minutes, she was going to shower and change into a wrap-around sarong. She told herself firmly that she had no ego invested in the battle of wills between her and Hendon, but it didn't hurt to keep doors of opportunity open and if she could bend the lawman to her will - just a little bit - it sure couldn't hurt.\n\nWhen she entered the mess a little later, Hendon and the food had not appeared yet. Grayson looked around. It wasn't a room she spent a lot of time in, or any, if you wanted to get technical. There was a small monitor, so she asked Hal to put up a view of the system they were headed into. There was a counter that contained things like condiments, creamers, utensils and napkins. She didn't want to know how old some of the foodstuffs were. They might have been there since she originally took possession of the shell some years ago. But then, it wasn't like they were real food. She was examining a packet of something that was supposed to be a butter-like substitute when Hendon entered with two plates of food. \n\nHe had, it seemed, finally allowed himself to take advantage of her food stores, which admittedly were only slightly better than the emergency food stores the passengers came aboard with, but it constituted a degree of concession on his part that she hadn't expected. From somewhere, he also produced a bottle of wine. Grayson figured he must have finagled it off a passenger, since she didn't carry any, to the best of her knowledge, and doubted it was considered an emergency food supply from the yacht. She watched in amazement as he went to the cabinet and easily found two wine glasses. She definitely needed to do an inventory of what she had aboard.\n\n\"Sit,\" he commanded, when she was still standing, watching him with a puzzled frown. Then he added, \"Please.\" She sat.\n\n\"What are we celebrating?\" she asked as he filled the wine glasses.\n\n\"You got your wish,\" he explained.\n\n\"Great!\" she exclaimed, lifting her glass in toast. \"What wish?\"\n\n\"The Siriun Monarchy is sending a transport to meet us at Wazn.\"\n\n\"Wazn? Why the hell would we go there?\"\n\n\"Because that is where the transport is meeting us?\"\n\n\"But it's all asteroids and shit that it stole from another star.\"\n\n\"Exactly. Heavy metals, precious gems, rare earth elements. Lots of mining, lots of traffic, lots of security. Lots of what we need to blend in, move our passengers and be on our way.\"\n\n\"Why on Earth would we want to hang around in that system waiting for a transport to show up? We could be at Sirius in the time that would take.\" She paused, her brow furrowed. \"Wait. What do you mean 'our passengers' and 'our way?'\"\n\n\"Eat your steak before it gets cold.\"\n\n\"Hendon, answer me.\"\n\n\"The transport is en route and will be there about the same time as us. It was dispatched the day after the wormhole accident.\"\n\n\"That was no accident. And why didn't you tell me this if you knew it that long ago?\"\n\n\"You needed to concentrate on our problem at hand. Your steak is getting cold.\"\n\n\"Fuck my steak. Why are we going in-system here if we're just going as far as Wazn?\"\n\n\"Evans tells me it's still two jumps, maybe four, five, six days. That would be cutting it too close without additional supplies and hydrogen.\"\n\nShe had to concede that point. It was closer to Sirius, but certainly not on a straight line and she wasn't familiar enough with the jump points in the immediate area of space to hazard a guess at the timeline. She took a bite of the meat, closing her eyes as she savored the juices running over her tongue. When she opened her eyes again, Hendon was watching her closely, sipping his wine. She chewed slowly then swallowed and cut another bite of the steak, raising it slowly to her lips, inserting it gently, precisely on her tongue, slowly closing her mouth around the succulent morsel. She swore his pupils dilated. Who knew he was one of those who got off on food fetishes? She swallowed and tucked the fork between her lips, sucking it clean. Now she was sure he was struggling to keep his eyes glued to hers. \n\nShe lifted the glass of wine and swirled it, then raised it slowly, breathing deep of the aroma, letting her eyes drop to follow the pattern of the wine as it clung and draped along the inside of the glass. Then she ever so slowly brought the edge of the glass to her lips and tilted, sucking the rich red liquid into her mouth, savoring it before swallowing. When she raised her eyes again, she was sure his respiration rate had increased. She held his gaze as she set the wine glass down and picked up knife and fork to cut another bite. Then she suddenly had one of those palm-of-the-hand-smacking-forehead moments. She stared at him.\n\n\"You said 'our' passengers. Be on 'our' way. What the hell is that supposed to mean?\"\n\nIt was definitely a mood breaker. He suddenly became intensely interested in his own steak. \"Most of the passengers,\" he said without elaboration.\n\n\"No, no, no! Whatever you're alluding to, no!\" She hefted her wine, thought about throwing it at him, then decided it was too good to waste. She took a big drink. He sighed and opened his mouth to explain, but she threw up her hand, palm toward him, and snapped. \"I don't want to hear it, whatever it is.\" He shrugged and turned back to his food. After a moment, she did, also, and they ate in silence. She drained her wine, and as he poured her more, she swore, \"God, damn you, Hendon!\"\n\n\"Ready to listen?\" he asked.\n\nShe picked up her steak knife, even though she'd finished with her meat, and tested the edge, then threw it back down in disgust. \"Hal, have the steak knives sharpened.\" Then she glared at Hendon. The computer didn't respond, apparently too perplexed by the command to figure out how to ask for clarification.",
        "Hendon put his napkin on his plate and pushed back from the table, ever on the defensive. \"The yacht,\" he said.\n\n\"Small transport ship designed to carry passengers in relative luxury,\" she defined when he paused overlong.\n\n\"It was headed out of sector,\" he continued.\n\n\"Why? Siriuns hate the rest of us poor slobs.\" She eyed him with all the disdain she could muster, given he was from the sector, if not the prime planet.\n\n\"The rebellion...\"\n\n\"Civil war,\" she offered in correction.\n\n\"Fine. The civil war. Threats have been made against the monarchy.\"\n\n\"Imagine that. Guy proclaims himself emperor and sovereign people get upset. Excuse me, allegedly sovereign.\"\n\nHendon sighed. \"He's a figurehead king, he'd be a figurehead emperor. Do you want to hear about our issue, or Sirius'?\"\n\n\"Fine,\" she said, mocking his previous tone.\n\n\"The yacht was taking the prince and others to a safe refuge until things settle down.\"\n\n\"Still don't get it. Why can't this transport that's meeting us take them instead.\"\n\n\"Camouflage,\" he replied.\n\n\"Excuse me? Isn't that for deserts and jungles and stuff?\"\n\n\"It's for appearances. The rebels will believe that the entire group is returning on the transport. The Prince will be safe with us on a non-descript trader.\"\n\n\"Non-descript! I'll non-descript your ass. Wait. You're setting that transport and those people up to be massacred.\"\n\n\"Not exactly. More like bait.\"\n\n\"Oh, yeah. No way they'll figure that out.\"\n\n\"Either the rebels will show and walk into a trap, or they won't and the transport will arrive safely.\"\n\n\"Or they'll kamikaze it.\"\n\n\"What?\" Hendon asked.\n\n\"Suicide attack, die smashing their ship into the transport.\"\n\n\"You said that was impossible.\"\n\n\"Nearly impossible. For someone like me, walk in the park,\" she said with a wave. \"Well, if it was a really small park. You know, like a parking orbit around Sirius Prime. Just saying that's what I would do, if I was a rebel. Okay, not personally. I'd find some fool stupid enough to die for an inane cause.\"\n\nHe looked thoughtful. \"Why not drone or computer driven?\"\n\n\"Can't control a drone with supralight because of the time warping. Can't control it with lightspeed transmissions because of the lag, unless you were right next to it, which sort of defeats the purpose. You'd need to make superfast corrections, because you'd have to assume your target is going to take evasive action.\"\n\n\"Then a computer like Hal.\"\n\n\"I'd never risk Hal's life,\" she said loudly for the computer's benefit. \"Computers, even with advanced AI, still aren't good at making decisions. You can program solutions to contingencies into them until your fingers bleed, and they can feed you endless contingencies. Maybe you hit on the one you actually need. Maybe you don't. But think about it. You're a rebel. You send an empty ship careening toward a planet. Whether it hits its target or not, people on that planet are going to know you've put them at risk. The rain of ship parts falling on their heads will be all the evidence they need. Even ones who might have been sympathetic before are going to be real pissed at you. On the other hand, you find someone fanatical enough to die trying to end the monarchy, that's inspirational. Recruiting material. At least off world.\"\n\nHe seemed to shake himself. \"I'll pass your concerns on to the admirals. In the meantime, as I said, back to our issue.\"\n\nGrayson scowled. She'd been trying to keep him off of 'our issue.' \"Your issue,\" she said.\n\n\"And yours. I'm afraid your term of service has been extended. Your ship is needed to deliver the prince to safety.\"\n\n\"You want me to haul that brat around even longer!\" she exclaimed.\n\n\"Grayson, I know that 'brat' is your son.\" She glowered at him but offered no denial. What good would it do? \"Come on,\" he said. \"It doesn't take someone of my brilliance to put it together. The princess goes into seclusion for the duration of her 'allegedly' difficult pregnancy. It's announced she won't be able to have any more children. There have been rumors floating around for years that the kid is illegitimate.\"\n\n\"Not my fault if your king screws up trying to con his people the same way he screws up proclaiming himself emperor. I kept my end of the bargain.\"\n\n\"And you were well paid.\"\n\nShe glanced at him. \"I said I was, didn't I?\"\n\n\"You did. What was the exchange rate, by the way?\"\n\n\"What?\"\n\n\"Between the value of the jewels you stole and what you fenced them for?\"\n\nShe stared at him. \"I'm sure I have no idea what you are talking about.\"\n\n\"Grayson Sontang doesn't, maybe. But the mystery thief that got away with some of the royal jewels and was never caught? One of the all-time great unsolved cases in the sector. We all learn about it at the academy. Even back then, it perplexed me why the monarchy put so little effort, relatively speaking, into finding the thief. You know, they never even demanded that the government put their people on it. Just tried to solve the case with their own royal police. Then, when I was working freighters, undercover, I heard rumors.\"\n\n\"About who did it?\"\n\n\"No, actually. Even among the spacers, and you know how they love a good rumor. They seemed as mystified as the monarchy. But it wasn't for lack of talk about it. It seems the rumor was that the king, he'd been coronated by then, of course, had offered a huge reward. For the body of the culprit.\"\n\n\"The body?\"\n\n\"Wanted: Dead, not alive. Surely you heard those rumors?\"\n\nShe shook her head. \"I limped home in a junker. Fixed it up so I could start trading.\"\n\n\"And fixed up a new identity at the same time?\"\n\n\"So you say. I am Grayson Sontang. I had ambition. I've always had ambition. I didn't want that name associated with working freighters.\"\n\nHe simply gave that grin that she'd grown to hate. She was well trained in martial arts, capable even of deadly force. So why did this man always make her want to give him a girlish slap. She made a fist just to keep her hand from taking action on its own. \"So you think you can blackmail me with these suppositions of yours?\"\n\nHe shrugged. \"What do I care? I work for the government, not the monarchy, and, as I said, they never approached the government about solving the mystery.\"\n\n\"And you're not interested in 'huge' rewards?\"\n\n\"Not to produce dead bodies. I have a thing about justice, due process, all that good stuff.\"\n\n\"Then why the Sherlock Holmes routine?\"\n\n\"Testing a theory. About your tells. In case we ever play poker again.\" She gave him a puzzled frown. \"I know I'm right. You know I'm right. Yet your face gives nothing away. And I suspect that fist you made is for some entirely different reason.\" He grinned again.\n\nGrayson pointed to her face. \"I'm Asian. That means I'm inscrutable.\"\n\n\"I assume by 'Asian' you are referring to a racial type concomitant with those features you are currently sporting, which you wouldn't have been sporting to pass as a Deneb, and which your son certainly doesn't sport, and so probably weren't the features you were born with. As far as being inscrutable, you are most certainly scrutable when playing poker, just not in any useful way.\"\n\n\"Then what the hell are we talking about?\" she said in exasperation.\n\n\"There's poker. And then, there's... Poker.\"\n\n\"Huh?\"\n\n\"Let me rephrase. There's poker, and there is real life.\"\n\n\"Oh, that clears everything up,\" she exclaimed sarcastically.\n\n\"In poker, you hide good hands and bluffs behind exaggerated, flamboyant and multitudinous responses.\"\n\n\"Thank you.\"\n\n\"In real life, you hide things that matter to you behind over-reactions or inscrutability. I am beginning to suspect that the more they matter to you, the more inscrutable you become. The racing bots mattered to you in that they were part of your ship, so you yell profanities and make a dramatic if foolish leap over the railing to the bottom level. But about your son, and about your persona, you became inscrutable.\"\n\n\"If I remember correctly, I was throwing books about my son's life being in danger.\"\n\nNot when others were around. And, after you came face to face with him, you weren't drinking when others were around. Only when you were alone.\"\n\n\"I think it's past my bedtime,\" she said, glancing at her wrist where a watch might have been but wasn't.\n\nHe reached out and took hold of that wrist. \"You're being inscrutable now, and it's because I'm asking you to take responsibility for your son's safety. So why not just admit that it matters to you and be agreeable?\"\n\n\"Because he's my son.\" She tried to shake him loose but he tightened his grip. She sighed. \"I vowed to stay away from him. Never even went back to that sector, let alone Sirius.\"\n\n\"It's not your fault he's here.\"\n\n\"But now he's here, I want to teach him to fly, I want to teach him how to properly bypass door controls and take over bots. I want to teach him how to fight, and how to play poker and how to outsmart Feds. When I was a spacer, I couldn't give him anything. Now I can give him worlds,\" she said gesturing at the starscape on the monitor. \"How am I supposed to let him go?\"\n\nHe sat back. \"Thank you for that honesty.\"\n\n\"You're welcome. Got an answer?\"\n\nHe shook his head ruefully. \"No.\"\n\n\"Then thank you for your honesty.\" She started to rise.\n\n\"One more thing,\" he said.\n\nGrayson plopped back into the chair with a groan. \"If it isn't about sex, I don't think I'm interested.\"\n\n\"What's the next best thing to sex?\" he asked.\n\nShe rolled her eyes. \"I don't know. A good bar fight?\"\n\n\"My thoughts exactly.\" \n\nShe gaped at him. \"Have you been in my Tantalean brandy?\"\n\n\"Things have been getting tense with the passengers. Cooped up together, sleeping in turns on cots...\"\n\n\"Not my problem,\" she said with a dismissive wave.\n\n\"No, but you could be part of the solution.\"\n\n\"Okay, I'm officially, totally lost.\"\n\n\"Friday night fights. Only more organized than a bar fight.\"\n\n\"Are you nuts?\"\n\n\"Maybe, but I found some sparring equipment in the rec room.\"\n\n\"Sparring equipment?\" She really was going to have to do an inventory soon.\n\n\"Yeah. We set up some matches, get the passengers involved, let 'em bet, let the kids sit ringside.\"\n\n\"Don't see how all that involves me.\"\n\n\"You love to fight.\"\n\n\"Brawl. Doesn't lend itself to Marquess of Queensberry rules. And since we're being perfectly honest, what I love is to start it then sit back and watch the show.\"\n\n\"You could referee,\" he suggested.\n\n\"What do I know from refereeing? What I know is the last one standing wins.\"\n\n\"There's a note in your file that says you were professionally trained. That you are to be approached at all times as if armed.\"\n\n\"What? Who put that in there?\"\n\n\"Apparently, someone who had you under observation on some planet where you started a number of fights, and may or may not have been peddling Tantalean brandy.\"\n\n\"Well, there you go. Why would I draw attention to myself if I was selling contraband?\"\n\nHe shrugged. \"Since you weren't arrested, it's presumably a moot point. So, you don't want to be involved in this?\"\n\n\"The only way I'd want to be involved is if I got to kick your ass.\"\n\n\"Done. Tomorrow afternoon on the lower level.\"\n\n\"Wait, what?\" \n\nHe grinned. \"You and me. Grudge match. I'm favored by the way.\"\n\n\"You've got to be kidding!\"\n\n\"Did I mention I spotted you five contacts. I assumed you'd want to go full contact, right?\"\n\n\"You're out of your fucking mind!\"\n\nHe frowned. \"You need me to spot you more?\"\n\n\"I don't need you to spot me anything.\"\n\n\"Oh. Okay, then. I'll let Het and Sip know.\"\n\n\"What?\"\n\n\"They're holding the bets. If you want to get in on it, you need to do so by noon. Oh, and you can't bet against yourself.\"\n\nShe stood up and glared down at him. \"How much did you bet?\"\n\nHe shrugged. \"Twenty.\"\n\nShe leaned over him, bracing her hands on the table. \"Add two zeros.\"\n\nHe grinned. \"Deal.\"\n\n****\n\nBogart was trying to get Grayson to stand still long enough that he could put gloves and headgear on her, like Evans was doing for a much more cooperative Hendon. Every time Bogart tried to put the headgear on her, he got her hair pushed forward into her face until she finally took it from him and strapped it on herself. She was barefoot, wearing a tight tank top and loose silk pants. She was relieved to see Hendon kick off his space boots, but when he had peeled off his tee shirt, she had cringed inwardly, not from the toned muscles that he'd revealed, but from the potential distraction all that bare, space-pale skin presented. She could think of all kinds of things she'd rather be doing to that chest than trying to bounce punches and kicks off it.\n\nA ring had been taped on the lower level floor. The children and a few others had been allowed to watch from that level, but most of the people were above on the bridgework. Grayson was only vaguely pleased that the girls had picked her side of the ring to stand on. She was pacing and swearing in a more colorful way than the children standing nearby should have been exposed to. She was beyond irritated, both at Hendon for tricking her into this spectacle and because the protective equipment made it feel all too much like eight years ago on Earth when she'd set out to learn ways of fighting where her size wasn't a deficit. Basically, it had amounted to almost a year's worth of getting the crap beat out of her on a regular basis, and then being scolded for not following instructions, or dropping her guard, or whatever had allowed the sensei to knock her on her butt yet again.\n\nWhen Bogart tried to block the path of her pacing in order to get gloves on her, she pushed at him impatiently. \"I don't need gloves, damnit.\"\n\nFrom across the ring, Hendon called out, \"Put the gloves on, Sontang. I don't want to break your fingers with my jaw.\" Laughter echoed around the metallic room even as Bogart managed to corner her against a wall and pull one glove partway on.\n\n\"You're supposed to make a fist after the glove is on,\" he muttered. \"Not before.\"\n\n\"Sorry you drew the short straw, now?\" she asked.\n\nHe grinned at her. \"I bet on you. I want my money back.\" He leaned toward her to whisper in her ear. \"I'll split the winnings with you if you knock him on his ass.\"\n\nShe rolled her eyes, but allowed him to get the gloves on her finally. \"How does he fight?\" she asked.\n\nBogart shrugged. \"Never seen him have to. He just stands there and intimidates people.\"\n\n\"Gonna be a hell of a dull fight then. Come on, help me out. What do they teach at the academy?\"\n\n\"How to use a blaster.\" Grayson scowled at him, and he relented. \"In non-lethal situations, they teach you how to restrain, more like wrestling than hitting. Don't let him get hold of you and you'll be fine.\"\n\n\"Swell. His arms are, like, twice as long as mine, but I'm supposed to stay out of his reach?\" She looked over at him. \"He's worked freighters, so he must know how to brawl.\"\n\nBogart nodded. \"He came back in one piece, so I think that's a safe assumption.\"\n\n\"His size, he'd be the sort to wade in,\" she said thoughtfully. \"What about Karate?\" she asked Bogart.\n\n\"What?\"\n\n\"Judo? Taekwondo?\"\n\n\"I don't know those words,\" he confessed. \"Is that how you fight?\"\n\nShe shrugged. \"I trained. I was told I didn't have enough self-discipline to ever be any good at it.\"\n\n\"Now you tell me, after I bet a month's wages,\" he muttered, but with a smile. \"Remember, it's for entertainment, just get a few good licks in.\"\n\nHackner, the security person from the poker game, walked into the center of the ring and raised his hands. \"What's this?\" Grayson asked.\n\n\"He's the referee,\" Bogart explained.\n\nGrayson groaned. \"The guy I took for all his money is the referee? The Siriun who works for the same government as Hendon?\"\n\n\"Technically he works for the royals.\"\n\n\"Oh, that makes me feel way better.\"\n\n\"Let me explain the rules,\" Hackner called out and the crowd noised quieted.\n\n\"We don't need no stinking rules!\" Grayson called over to Hendon across the ring. Laughter rang out and Hackner had to wait again for the noise, reverberating around the metal walls, to die down.\n\n\"The rules are simple,\" he continued. \"The winner is whoever achieves an eight-count knock-out, five knockdowns or thirty solid contacts first.\" He looked over at Grayson. \"As judged by me.\" Grayson glared at him. \"Step outside the ring, your opponent will be credited with a contact,\" he continued. \"Please touch gloves in the middle of the ring, return to your sides and we will begin.\"\n\nGrayson strode to the center and bumped gloves with Hendon, strode back to the edge of the ring on her side, turned and bowed deeply, noting that Hendon belatedly copied her move. When Hackner gave the word to begin, she strode halfway back to the center and struck a ready pose, watching Hendon closely. She was sure he knew at least something about martial arts. The whole full contact business ruled out boxing or wrestling as the central context. But she was gambling that he didn't know enough about the martial arts she'd been trained in to defend against them. Bogart had confirmed he hadn't learned as a Confed and certainly not as a spacer. So let him think that was how she intended to fight. She was also gambling that his intent was to draw things out, let her get in some hits, provide entertainment as Bogart had said.\n\nHe waded in, as she had expected, though cautiously, his hands held in a boxing stance. She ducked under his left side and spun in a flying kick at his back, staggering him but only a couple of steps. She hit him far too close to his center of gravity; her small stature had been an advantage ducking under his side, but a deficit in hoping to topple him, though Hackner grudgingly credited her with a contact. Worse, Hendon was already adjusting his approach, arms held lower and closer to his sides. And he was grinning. Grayson shook herself and resumed her ready stance. He was baiting her with that grin. She could hear a sensei berating her for allowing the distraction. But then again, she'd quit listening to those voices seven years ago. They were very wise, but they hadn't spent time on freighters or in bars. \n\nShe made a come-hither motion as well as she could given the glove on her outstretched hand. Hendon's grin widened. His caution deepened, though. He moved to circle her, trying to figure out the significance of her pose. Grayson suddenly straightened with her hands on her hips. He followed suit, straightening, and she rolled a summersault on his right side and kicked out at his calf. If she couldn't hit above his center of gravity, she could certainly hit below. He went down on one knee. When he jumped back up and spun to face her, he wasn't grinning anymore. So she did. Grayson's young female cheering section was clapping and screaming for her.\n\n\"Cramping up?\" she asked.\n\n\"Feeling fine,\" he answered. \"Run out of acrobatics yet?\"\n\n\"Let me check my instruction manual. I think there's a few left to try.\"\n\nHe suddenly rushed her, low with arms spread wide, and she realized she'd remained too close to the edge of the ring. She jumped back out of bounds and Hackner gleefully credited Hendon with a contact point. But Grayson now understood his plan was to pin her for the eight-count. It made sense. He'd used the same basic technique, successfully, on her before and it avoided the risk of injury that a kick or hit carried. Can't endanger your pilot, after all. He backed away, allowing her to reenter the ring, and she made for the center.\n\nThis time, he was within a couple of steps of the ring edge. Grayson took a deep breath and leapt. She knew if she thought too long about it, she'd chicken out. She hated getting knocked on her butt. And she hated it even worse if it occurred while she was midair. Still she figured she'd either be able to get a contact point or make him back out of the ring to avoid her flying foot. Her torso twisted and then her hips. As she had hoped, Hendon was reaching to bat away the wrong foot. When he realized his mistake, he pulled backward and his heel left the ring. Grayson rolled and leapt back to her feet in front of Hackner. ",
        "\"He was out,\" she yelled.\n\n\"Full foot,\" Hackner said by way of explanation, with a grin. Grayson saw his eyes flick over her shoulder at the same moment she heard a gasp from some of the watchers. Without looking, she dropped and rolled, coming up on her feet as Hendon turned back toward her and was lunging again. She aimed a graceless kick at the side of his head which he easily batted away.\n\n\"You could find gloves but not mats?\" she bitched, when he straightened to consider his next move.\n\nHe shrugged. \"Didn't know you were going to spend so much time on the floor.\"\n\n\"No harder than a spacer bar floor and a hell of a lot cleaner,\" she snarled, circling him. She kept her eyes on his face, but she was thinking about his feet. She went barefoot on the ship frequently, even occasionally running for exercise along the bridgework above, usually more from boredom than any fit of healthfulness. But she suspected he practically slept in his spacer boots. There should be some way she could use that. He lunged again, arms reaching to snare her, but this time she was more prepared. He had lowered his head, aiming for her center of gravity, which was a lot lower than his, throwing his balance off just enough. She leapt straight up, swinging her foot for his head again, eluding his grasp. When he tried to deflect her leg, he had to push up and over and then both ended up rolling on the floor. The only difference was that Grayson had learned early on how to land, roll and bounce back to her feet. Hendon wasn't used to being on the floor, let alone hitting it with a thud.\n\nShe already had her next move planned before he'd even straightened fully. She jumped at him, landing as hard as her minimal weight allowed with one heel on the toes of his foremost foot. As her other foot came down on the decking for leverage, she slammed up with the heel of her hand into his chin, or as close as the headgear would allow, anyway. His head snapped back and he went down with another thud as she sprang away.\n\nSip or Het - she still couldn't tell them apart - was keeping score on the wall of the cargo hold. She pointed to it with her gloved hand as Hendon straightened. Two hits and one knockdown for her. \"Ready to throw in the towel, yet?\" she taunted.\n\n\"Just getting warmed up,\" he said with a grin. Then he was lunging at her like a freighter in planetfall. Grayson tried to spin away, but he managed to grab the fabric of her loose pants and she felt the inside seam go. Apparently well-pleased with himself he held on even though it forced him to go down on a knee, and the seam shredded even further, until it hung open practically from her crotch to the cuff at her ankle.\n\n\"Wearing underwear, today?\" he called, though it appeared that he landed on his knee hard as he got slowly back to his feet.\n\n\"You're going to have to do better than that to find out,\" she challenged, dancing away from him as he stalked her. He had obviously figured out that she had figured out he was trying to get her into a restraint hold so he gave up any pretense of boxing and tried to back her up to the edge of the ring. She was far more light-footed than him, but he had much more patience on his side. When he caught her with her weight on the wrong foot to pivot away, he lunged again. Grayson stood her ground this time and kicked out at the knee he had fallen on earlier. She was rewarded with a soft grunt as he went down, but unfortunately, he went down on top of her and was grappling, wrestler-like, for a grip on her arms.\n\nShe kicked with both feet at his other ankle, collapsing that leg as she pushed at his shoulder to roll him off her. He rolled, but managed to get a purchase on the shoulder strap of her tank top, pulling her on top of him. \"Let go, you perv,\" she muttered, and surprisingly he did, though he reached for her as she rolled away. She was starting to breath harder when she found her feet, though she was pleased to see that he was slow getting up. Grayson glanced at the scoreboard and saw that Hendon had been awarded a knockdown.\n\n\"What the... Time out! I hit him first,\" she yelled at Hackner.\n\n\"A knockdown trumps a hit,\" he said with a shrug.\n\n\"Did you bet on this fight?\" She looked over at Het or Sip. \"Did he bet on this fight?\" The Siriun shrugged. Then Hendon hit her, hard, knocking her to the floor and wrapping his arms around her, pinning her down.\n\n\"No time outs,\" he said in her ear. Grayson howled, trying to throw the heavy man off her but barely moving him. Hackner began counting but well before he reached eight, Hendon released her. She leapt to her feet, seething. \"Consider that a freebie,\" Hendon said, circling her again. \"Your only one,\" he warned. \n\n\"I don't need your charity,\" she sneered, ignoring the fact that if he'd held her for a few more counts, which he was undeniably capable of doing, he would have won. He just grinned and feinted, watching her reflexive actions. \"No time outs?\" she said. \"Fine. Bar rules it is. How's your knee?\"\n\n\"Feels like my toes,\" he conceded, not that that told her all that much. He was moving cautiously, so it was hard to tell if he was favoring anything, and she wouldn't have put it past him to pretend to do so as a bluff.\n\n\"How's your balls?\" she asked, dancing back and forth in an effort to confuse him. \"Well protected?\"\n\nHe curled his glove tips at her. \"Bring it.\"\n\nGrayson dove onto her back and spun, trying to sweep his good leg. He went down on that knee and she whipped to her feet, using both hands to deliver a blow to his helmet covered ear. She suspected he barely felt it. She'd figured out early on that her upper body strength wasn't going to do any good against the solidly built lawman, and would mainly serve to bring her well within his reach. But she was going more for distraction anyway, because she immediately fell onto her outstretched hands and kicked back with both feet at his shoulders. He went down to his hands and knees. She kicked her legs over into a summersault and rolled back to her feet, comfortably out of range as he swung around to grab for her, still on his knees.\n\nGrayson glanced at the scoreboard. Hackner had grudgingly credited her with three hits. Hendon still had two knockdowns to her one, and she was beginning to think that his slowness getting back on his feet was a bluff or stall for time while he plotted his next move. She on the other hand was wondering if she could even make it to thirty contacts. Hitting Hendon was like hitting a brick wall, and had just about as much result. Plus, he was adapting way faster than some drunk in a spacer bar. She knew, while her attempt at misdirection had worked last time, it wouldn't work again, any more than a particular move would fool him more than once. \n\nShe paced around the edge of the ring, as he stood in the middle watching her closely, waiting for an indication of her next attack. She suspected he knew if he just kept letting her come at him, an opportunity would present itself eventually to wrap his arms around her and immobilize her for a pin. With gloves on, she didn't even have fingernails for self-defense. Not to mention they were a serious impediment to any judo-type throws. In a fit of pique, she wriggled one hand free of the glove and tossed it out of the ring. As she expected, Hendon charged her the moment she reached for the laces of the other glove. She sidestepped his outreached arm, grabbed his wrist, twisting his arm as she bent and rolled him over her back. He landed with his classic thud, and actually seemed slightly dazed or surprised, perhaps. Grayson yanked her hand out of the other glove and threw it. In a bar fight, she would have rushed in for the coup de grace, but she didn't trust what Hendon was showing her. He had the decency to look disappointed when he climbed back to his feet, looking his usual bright-eyed self. Grayson tossed a scowl at Hackner who hadn't even started counting as Hendon lay there. He was signaling the Siriun to give Grayson another takedown, though, and missed one of her better scowls. She turned back to Hendon, wondering if she could keep him off balance long enough to get in another throw. She rolled her shoulders. At least she figured he'd think twice before charging her again. \n\n\"Getting bored here,\" she called out. \"When you going to start fighting?\" She was pacing near the edge of the ring again, but he had figured out that was a ploy to trick him into running into a throw.\n\nHe raised his gloved fists in a boxing stance. \"Come and fight, then,\" he challenged.\n\nGrayson stopped pacing and put her hands on her hips. \"Not in the mood to be a punching bag. How about I tap-dance on your head?\"\n\nHe smiled. \"Come and try.\"\n\nShe shook her head. \"No. You come here.\" And all of a sudden, he was, sliding across the floor feet first. Grayson leapt straight up but he lifted both his legs and managed to tangle one with hers, preventing her from hitting the floor in a roll to stay out of his reach. He managed to throw himself onto the lower half of her body and wrapped one arm about her thighs, trying with the other arm to catch one of her wrists. Grayson twisted and kicked as well as she could, trying to pull herself out of his grasp or at least keep him from getting a firmer hold. Hackner was counting already, of course.\n\nThen Hal's voice was booming throughout the ship. \"Mass detection.\"\n\n\"Hal, evasive maneuvers. Get down!\" Grayson yelled. She saw Het and Sip diving for the children. Hackner was looking for the prince, but if he had been among the children, he now had a hairy Siriun laying protectively atop him. Hendon rolled off her legs and she leapt to her feet, running through the people laying on the floor to get to the ladder closest to the control bridge. The bridgework was a mess of people laying and holding on as best they could. Evans had run for the nearest ladder but it would be nearly impossible to pick his way to the control bridge from there. Grayson could hear Hendon following her. She didn't know if that was because he'd come to the same decision, or if he simple trusted her judgement. She stumbled several times as the maneuvering exhausts fired, but managed to keep her feet. She heard Hendon's now unmistakable thud at some point but didn't look back.\n\n\"ID, Hal?\" she called as she reached the ladder and began to climb.\n\n\"Energy signature of small ship. No beacon.\"\n\n\"Deploy blaster,\" she ordered as she reached the top of the ladder and leapt over the people laying in her way. The portal opened for her and she raced for her seat. She almost sat on the prince as she swung the chair to slide into it. She grabbed his arm and yanked him out of the chair and onto the floor. \"Stay down,\" she snapped as she glanced at the monitors on the console.\n\n\"Hal, visuals on monitor one. Replay sim on big screen.\"\n\n\"I want to see,\" the prince said, though to his credit he remained on the floor, looking up at Grayson.\n\n\"Shut up,\" she muttered, looking from the small screen to the large.\n\nHendon entered the bridge, glanced at the prince, then went to stand next to Grayson, bracing himself against the console. \"That's a trader configuration,\" she said. \"Not to say it hasn't been gutted on the inside and rebuilt. But the speed...\" She shook her head as she hit a key and additional info popped up next to the sim of the ship. \"Hal shows it decelerating at forty-five gees. Only ships I know that can do that are Fed fighters.\"\n\n\"Decelerating?\" he said with a puzzled frown. \"But it's heading out of system.\"\n\n\"Technically speaking, it's trying not to head out of system. I think it's our bogey from the wormhole. Hal, could that mystery ship have done a slingshot around El Rehla and be here now?\"\n\n\"Ninety-six point two three probability given the current rate of thrust was maintained approximately four point five hours in system and nine hours out system with minimum ten gee thrust in between maximum thrust periods.\"\n\n\"Now tell Hendon what the probability is that that same ship would be in mass detection range of us on inward and outward swings, Hal.\"\n\n\"Zero point zero three six without cumulative sixty-three degree course correction,\" the computer answered.\n\n\"And that means?\" Hendon asked.\n\n\"That it was aiming for us. Or for where it predicted we would be. We both came in over plane for the system. That ship should have swung around and under plane when it went behind El Rehla. It adjusted to stay above plane. Most inbound ships stay above plane and most outbound stay below. That pilot adjusted to be above, either because he was looking for us, or because he thinks of himself as being inbound. Or both.\"\n\n\"There is no up or down in space,\" the prince said proudly.\n\nGrayson scowled at him. \"Relative to the counter-clockwise rotation of most systems. You can go back to the cargo hold now.\"\n\n\"Do you recognize it,\" Hendon asked. \n\nShe looked back at the monitor and sighed. \"That body is a dime a dozen. And I don't see any visible markings. Hal, can you give us a blow-up on the main screen?\"\n\nEvans came on the bridge and settled into the control chair. He studied the ship. \"That's our bogey?\"\n\n\"Both bogeys, probably.\" Grayson said. \"Somebody is very interested in us. I won,\" she added.\n\n\"Did not,\" Hendon replied.\n\n\"Evans?\" she asked.\n\nHe threw his hands up in the air. \"I was never there. What do you want to do about out bogey?\"\n\nGrayson went to run her hands through her hair and realized she still had the headgear on. She yanked it off and tossed it to the prince. \"Take that back with you. Memento from the winner. Scat!\" Then to Evans, she said, \"Give them the all clear in the holds. He's long gone.\"\n\n\"He's?\" Hendon said. \"Looked more like a woman driver to me.\"\n\n\"Oh, my god. You did not go there!\"\n\n\"Didn't have to. I won.\"\n\n\"Okay, that's it. Who was keeping score, Het or Sip?\"\n\nEvans and Hendon looked at her like she'd suddenly gone blind. \"Sip,\" the prince supplied.\n\n\"Get her up here.\" Again, they simply stared until the prince supplied, \"Him.\"\n\n\"That's what I said. Him.\" Grayson somehow managed to stare at all of them defiantly.\n\n\"Let's tend to navigational issues first,\" Hendon said waving at her console.\n\n\"Fine,\" she snarled. \"El Rehla Prime gave us fast track privileges. Let's use them. Can you get people ready for thirty gees in an hour? Evans, can you see if Prime has any info on that ship or if they even saw it?\"\n\n\"Aye, aye,\" he said, donning headphones.\n\n\"Hendon, get that brat off my bridge. Hal, let's look at options. And Hal, I want projections on that ship's trajectory. Throw them up on main screen.\"\n\n****\n\nAn hour and a half later, they were 'cruising' at thirty gees deceleration, circling to overshoot the prime planet toward an inner orbit then accelerate back out toward it, falling neatly into orbit. Grayson had proudly proclaimed that no one could project that approach, and Evans had to agree, given that it was nearly unheard of to come into planetary orbit under hydrogen thrust. He'd had to do a great deal of fast talking to get ground control to even approve the approach, given they hadn't seen the bogey and had only vague sensory data from system mass detectors. But El Rehla was a small independent system, and staying on the right side of a huge neighboring sector like Sirius was just good business, so in the end, they conceded the point.\n\nGrayson hadn't bothered to mention to the Confeds that Hal still had the blaster deployed, and if they had noticed they weren't mentioning anything, either. She had already decided that if the bogey showed up again, she was going to shoot first and ask questions - and permission - later. She'd programmed some potentialities for Hal and she was still staring at his projections for possible trajectories the other ship could achieve, trying to decide what she might have chosen. It would have been much easier if she had any idea what their intention was. If the ship had engine and grav capabilities of a F ed fighter, couldn't it have laser capabilities, too? If it wanted to blast them, and had a laser, it could have done so on that first flyby. Or on the second flyby with a laser or a blaster. So if it didn't want to destroy them, what did it want? She slapped the console in front of her in frustration.\n\nHer chair was suddenly yanked around. \"That's it. Rest period,\" Hendon commanded. \n\nShe narrowed her eyes and gripped the chair arms in defiance. \"I don't take your orders.\"\n\n\"Really?\" he said with barely disguised humor clearly intended to annoy her.\n\n\"In case you haven't noticed, we are deep in system. Of a white giant, no less. I need to be on the bridge.\"\n\n\"Evans and Hal have the flight plan...\" He leaned in close, \"And were not engaged in a full contact fight just a few hours ago.\"\n\n\"Pffft,\" she said with a wave of her hand, \"That wasn't a real fight...\"\n\nAnd just like that, she found herself thrown over Hendon's shoulder and he was carrying her off the bridge, despite the thirty gee thrust. She banged her head on the wall above the portal as she struggled to free herself from his grasp.\n\n\"Ouch! Put me down, you fucking asshole.\"\n\nHe swatted her ass as he carried her toward her quarters. \"We really need to talk about your language. There are children on board, you know,\" he chided condescendingly. \"You might want to keep your head down this time,\" he suggested as the portal to her bedroom opened for him.\n\n\"Hendon, I swear if you don't put me down right now...\" And then she was down, on her back on her bed. She sat up. \"What are you going to do, tie me to the fucking bed?\" she demanded.\n\n\"If need be. I had more in mind pinning you for a full eight count.\" He rested one knee on the bed and leaned in real close. \"So we can end this silly argument about who won.\"\n\n\"What?\" She leaned back, staring at him. As usual, she had no idea what he was really thinking, but his pupils were dilated and he was in a more vulnerable pose than he usually allowed when he was that close to her. \"I thought you liked 'em meek and submissive,\" she said, edging back as he leaned even closer.\n\nHis eyes tracked slowly down to her chest, then back up just as slowly, again displaying a vulnerability strange for him. \"Oh, I suspect I could convince you to submit,\" he suggested in a low, husky voice.\n\n'Trap!' he mind screamed, though other parts of her were screaming something else entirely. \"Don't toy with me, sailor. I've been too many days without,\" she warned, scooting back on the bed. His hands were suddenly on the headboard, with her pinned between his arms, both his knees on the bed. Grayson drew her own knees up, the torn pantleg falling away from one leg.\n\n\"Like you've been toying with me?\" he challenged. \"For instance...\" He reached down and grabbed a handful of silk from the intact pantleg. \"If I were to give a tug, might the inseam of this pantleg rip away, just so?\"\n\nShe eyed him. \"It might.\" He grinned and tugged. The inseam parted as if on command. \"They just don't make clothes like they used to,\" she complained.\n\n\"Or fair fights.\"\n\n\"Ha! With the referee in your pocket?\" she argued.\n\nHe grinned again. \"Point conceded.\"\n\n\"Wait. Did you just concede?\"\n\nHe shrugged, sitting back slightly. \"On the referee. Nothing but Siriuns to chose from. Do you concede on the rigged pants? Not to mention trying to flash me with all that panty-less temptation peeking through?\"\n\n\"I'll see you the rigged pants and raise you pretending to be stunned after I threw you.\"\n\n\"Half point,\" he conceded. \"I was stunned that you could flip me airborne.\"\n\n\"That's okay. My sensei would have been stunned, too.\"\n\n\"That's your trainer?\"\n\nShe nodded. \"So now what?\" she asked, eyeing him.\n\n\"The passengers aren't the only ones needing a break from the close quarters and tension,\" he replied. Grayson gave him a puzzled frown. \"I suggest we put aside the teasing...\" She opened her mouth to protest, but he raised a finger in front of her face. \"On both sides. I suggest we address our tensions so we can function better as a team.\"",
        "\"We're not a team,\" she muttered, though she had to admit the thought of releasing certain tensions sounded awfully good to certain parts of her tense anatomy.\n\n\"We are now. I may have neglected to mention something.\"\n\nGrayson stared at him. \"Something worse that wormholes blowing up centimeters away and getting thrown around space at light speed and almost running out of oxygen?\"\n\n\"Depends on your point of view, I guess,\" he replied eyeing her warily.\n\nShe groaned and buried her face in her hands. \"Okay. Hit me with it.\"\n\n\"The Feds may or may not be annoyed about the monarchy sending their problems into Fed space in the form of the prince. They may or may not be looking for us.\"\n\nGrayson looked up in disbelief. \"You mean that little shithead is contraband?\"\n\n\"Yes. The SON you are carrying in your hold is contraband. Now, about that tension I mentioned...\" Hendon took advantage of her gaping mouth and wide-eyed stare to twist her around on the bed and pin her down with his weight and a deep, long kiss. Long enough to distract her from thoughts of long-lost sons, Feds and mystery speeding ships. When she began gripping his arms instead of trying to push him away, he reached down to disabuse her of what was left of her pants. That went without protest, so he pulled far enough back to roll her tank top up and over her head, though getting her to let go of his arms so he could pull it entirely free was somewhat more challenging. The moment she let go of his arms, she was tugging at the hem of his shirt.\n\n\"Why'd you put the damn thing back on,\" she complained as they became thoroughly tangled.\n\n\"My magnificent chest was obviously distracting to the pilot.\"\n\n\"Full of yourself, aren't you,\" she muttered as she managed to disengage her arms.\n\n\"Said the super-nova to the nova,\" he countered.\n\nGrayson reached for the snaps on his pants, but he grabbed her wrists. \"Before I expose my tender parts to a potential full contact frontal assault, I want to hear you say it.\"\n\n\"Say what?\" she demanded impatiently.\n\n\"Truce.\"\n\nShe glared at him. \"Fine. One hour truce.\"\n\nHe shrugged. \"I can live with that.\" He rose up on his knees to remove his pants and the protective equipment underneath.\n\nGrayson grinned. \"Did you really think I'd go low?\"\n\n\"Yes,\" he replied.\n\n\"Smart man. Now, would you hurry up? We only have an hour.\"\n\nHe grinned, but this time it didn't set her teeth on edge like it usually did. Especially when he dove between her legs, spreading them wide, and making a feast of her pussy. In minutes, she was writhing, both trying to pull her way closer to his teasing tongue and trying to entice him to explore other parts in need of attention. It didn't even bother her - too much - that she knew he was grinning through it all.\n\n\"I heard a rumor that you like it from behind,\" he murmured against her nether lips.\n\n\"For the grand finale. I expect at least four or five movements before the operatic finale.\"\n\n\"Operatic? Who sings?\"\n\n\"Me, if you're good enough.\"\n\n\"Ah, a challenge. I love it.\" He dove deeper with his tongue and Grayson gasped, wondering if Siriun settlers had evolved some prehensile ability with their tongues. They seemed awfully good at maneuvering them in tight spaces. When he returned his attention to her clit, his fingers replaced his tongue's deep explorations and in moments he had her screaming as her back arched impossibly high, an artifact of her judo training, so recently refreshed in her memory. \n\n\"I thought you said the operatic singing came at the finale?\" he commented, feigning the thoughtfulness of a music critique.\n\n\"Oh, baby, you haven't heard anything, yet,\" she said pushing him back and diving on his cock like a starving vampire.\n\n\"Sounded more like a sick coyote,\" he replied, though not without a gasp.\n\nSomehow, she managed to keep the head of his dick in her mouth as she replied, \"You have no idea what a coyote sounds like, sick or otherwise.\" Having said that, she plunged down, sucking and humming around the full length of his cock until he was moaning.\n\n\"It hasn't been an hour yet,\" he rasped out. \"Damn, Sontang!\" He tried to push her away, but couldn't find the leverage, almost as if she'd planned it that way.\n\nShe smiled in victory as his come shot down her throat. She licked her lips and smiled up at him. \"You've got about twenty minutes to recover, spaceman. I'm a very demanding trick.\"\n\nHe drew a deep, shuddering breath and pushed her away. \"Don't call yourself that, damn it! How can you expect others to treat you with the respect you deserve if you don't respect yourself!\"\n\nGrayson lay on her back and laughed softly. \"No one I've ever fucked - or been fucked by - has ever called me a trick. You won't, either,\" she said, looking over at him. \"It's the ones I refuse that call me a trick, or whore, or...\"\n\nHe rolled on top of her. \"Then I better make sure I fuck you, huh?\"\n\n\"Damn right, sailor,\" she agreed with a laugh.\n\nHe slid lower and set his tongue to work on her nipples, riding it out as she bucked and twisted under him. She tried to lace her fingers through his close-cropped hair, and when that didn't work, grasped his ears to pull him closer until his mouth closed over her small breast, drawing her nipple deeper, closer to the full force of his tongue's abuse. With his fingers, he twisted and pinched the other nipple but she only thrust her chest higher, demanding his attentions. \"That the best you got, sailor?\" she challenged, then yelped as his teeth pinned her hard nipple firmly and his tongue began an intense, rapid flicking that shot through her like an inescapable electrical current. She gulped for air like a spacer in vacuum, but when she tried to pull back, he held on, unrelenting, until she screamed his name. \n\nWhen he finally released her with a grin, he asked, \"Ready for the other side?\"\n\nShe was gasping, her chest heaving, but when she caught enough breath to speak, all she said was, \"Bring it.\" He chuckled and dove in, if anything teasing her other nipple to an even more tender hardness before sucking her areola in range of his teeth and bringing his tongue to bear. He splayed one hand against her back, preventing even the attempt to escape his tongue's assault, and his other hand slid down her belly and between her legs until she was impaled with two fingers and no amount of squirming or judo throws could free her from the sensory overload. She screamed his name again, but still he didn't relent until she was virtually begging him, in between wracking orgasms. \n\nWhen he finally did relent, he backed off only an inch and stilled his fingers, before asking, \"Who won?\"\n\n\"Hour's not up,\" she replied, though it came out more as a hoarse whisper.\n\nHe rose up and without warning rolled her onto her stomach and straddled her back, beginning a deep muscle back massage that had her groaning in pleasure, then in arousal as his strong, large hands proceeded farther down her spine to her ass and tailbone. When his thumbs began to stroke along the crevasse of her crack and slide between her thighs, her groans changed to gasps. \"Oh, fuck, Hendon. Oh, my fucking...\"\n\nHe pulled her up on her knees. \"This how you like it?\" he asked, pushing into her without warning. \n\n\"More negative declination, sailor.\"\n\n\"You got it,\" he said, leaning over her even as she pushed back against him. He looped one arm under her, pulling her back up against his chest and began short, pounding strokes into her belly. \"Wanna hear you sing, baby.\"\n\nShe didn't know from singing, but with each of his downstrokes, she was uttering a guttural, \"Uh, uh, uh,\" until her arms collapsed on the mattress and it became just one, long, \"Uhhhhh.\" And then a \"Fuuuuuck!\" He felt the shock waves roll through her body. She was rocking back and forth with them, and had returned to the \"Uh, uh, uh,\" save the tone was more like a receding tide, rolling back out to the immense sea where it had arisen.\n\n\"I won,\" he said, leaning close to her ear. Then he straightened and began slamming into her, pulling back at her hips until she gathered herself and began pushing back against him on each thrust. He reached forward and palmed her breasts, easily encompassing them in his large hands. When he was almost there, he reached to pull her hair back, wrapping it around one hand, his other hand splayed against the small of her back. She obligingly dropped to her elbows, arching her back to give him even deeper access. \n\nGrayson smiled as his grunts gave way to a long, low moan. He buried himself as deep as possible within and shuddered long and hard. She smiled secretly and silently mouthed the words, \"I won.\"\n\n****\n\nGrayson strode onto the bridge just after Evans and Hal had made the course corrections and begun acceleration to match orbit with the prime planet. She glanced at the main screen, then down at Evans and Bogart, who was standing next to him and pointing out something on one of the monitors. They both turned to look at her, watching as she retrieved a cup of coffee from the dumbwaiter and took her seat at the command console. When she realized they were still staring at her, she scowled.\n\n\"What!\" she demanded. They both snapped their attention back to the monitors in front of them. Grayson smiled to herself."
    ],
    "authorname": "Chimera44",
    "tags": [
        "fellatio",
        "pussy eating",
        "fighting",
        "drama"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/grayson-sontang-in-space-ch-04"
}