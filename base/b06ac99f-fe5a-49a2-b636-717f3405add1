{
    "title": "Brad's Road Trip Ch. 10",
    "pages": [
        " Note: This is the 10th chapter in what will be a fairly long series. If you haven't read Chapters 1-9, this section won't make any sense. I mean, the sex scenes will mostly stand alone, but there's a pretty significant back-story. Anyway, thanks for reading! \n\nI would be remiss if I didn't thank my incredible editor, AnInsatiableReader. We authors are really pretty tough on our editors.. it takes us weeks or months to churn out a chapter, but we want them to redline it in a couple days and get it back to us. Incredibly unfair and selfish, but my editor has never taken more than a day or two to return a chapter. She's been busy lately, but still dropped everything to instantly read both this chapter and Chapter 9. Bottom line.. if there are any authors reading this, take time to say thanks to your editor(s). If yours is anything like mine, your stories wouldn't be half as good as they are without them. \n\nKeep in mind: this story is set in 2007.... the year I started writing it. I know. Sorry. Anyway, since it is set in 2007, current events are from 2007. If someone were to e-mail me feedback and politely inform me that Brooks & Dunn is not only no longer on tour, but not even together anymore, I will scream. I was in denial about that for a couple years, and it's still painful.\n\nAnyway... enjoy!! \n\nDay 9\n\nFriday, June 20\n\nPittsburgh, PA to Indianapolis, IN\n\nI was stuck in the middle of a wet dream.\n\nThis wasn't just an ordinary, moderately-hot-girl-sucking-my-dick-on-the-couch, garden variety wet dream. On a scale of 1 to 10, this wet dream was a 15.\n\nThere was pussy everywhere, of all shapes and sizes. There were skinny girls, bigger girls, tall girls, short girls. Girls with massive tits, girls with no tits, girls with fake tits. There were white girls, a black girl, a Hispanic girl and an Asian girl. There was even a professional cheerleader in the group. There were 10 of them in all, in various states of undress and sexual activity, spread across this room and the rooms on either side of it at the Cambria Suites in suburban Indianapolis. \n\nOn the bed in front of me, there were two girls tangled up in a 69. Behind them was a dishwater blonde with multiple tattoos named Anna, bent over at the waist and licking the rainbow-haired girl's ass while the other girl licked her pussy.\n\nAnd why was Anna bent over? Easy: I was plowing into her from behind, and had been for the past 10 minutes. \n\nI'd made it a point to get her name. With 10 women spread across the three hotel suites, I knew I'd never be able to keep all the names straight. I figured I could at least get the names of the girls I fucked, if for no other reason than to give them to Kelly later. Anna was the third one I'd fucked, and combined with the names I remembered from the concert earlier, I knew more than half of them now.\n\nOne of the girls in the 69 started cumming, and Anna followed her a few seconds later. I'd only cum once and wasn't quite ready to do it again, but Anna seemed more interested in the mass of girl flesh splayed out before her. So, I pulled out and headed for the next room, rubbing my jaw lightly. There was already a bruise there, and I had no idea how much worse it would get before morning. Despite all the scenery laying around to distract me, it still ached.\n\nThe next room featured another scene ripped straight from a porno. There were two girls on the floor in front of the bathroom, engaged in a scissor lock and rubbing their pussies together frantically. One of them was Vicki, a tall, stacked black girl I'd met in line at the concert. The other one was a Latina chick, pretty in the face but just a little too skinny for my tastes.\n\nOver on the bed, Sam, one of the two guys I'd invited back to the hotel from the concert, was tangled up with two other girls. One was riding him reverse cowgirl style, and the other had her knees on either side of his face. That was Miranda, a short redhead I'd gotten off three times tonight. \n\nSam saw me standing in his periphery and grinned at me before diving back into his punchbowl. I grinned back, but my heart wasn't really in it. I mean, with so many hot naked women around, I was hard and going to stay that way. Still, I wasn't enjoying myself as much as I should have been.\n\nI was even more confused, though. Here I was, 22 years old, in the sexual prime of my life, and a citizen of what most men would call Fantasy Land. \n\nYet I really wanted to be somewhere else.\n\n***************\n\nTHAT MORNING....\n\n\"So, what was that all about?\" \n\nThat was the first thing I heard when I pried my thick eyelids. I don't know how long Maria had been awake, but she was up on one elbow, staring at me amusedly.\n\n\"Huh?\" That was all I was worth at the moment.\n\n\"Last night,\" she said, licking her lips. The memories started to flood back in. \"Why did that happen?\"\n\nI rolled away from her to look at the alarm clock. It was a little after 9 a.m., the first time I'd slept in this late since well before I'd left San Antonio. I briefly mentally panicked, since I hadn't called Kelly last night, before I remembered that that was our agreement. If I'd managed to stay up past 2 a.m., of course I could call, but if not, she wouldn't be able to answer before that.\n\nI still missed her and wanted to talk to her more than anything.\n\n\"Gimme a second,\" I said to Maria. \"Trying to wake the fuck up.\"\n\nShe giggled, but otherwise she ignored me. \"Last night, Josh said something about the price of beer at Wrigley.\"\n\n\"Yeah, we made a bet,\" I started, trying to sit up in the bed. \"He told me he could get me laid in Pittsburgh, and I told him he couldn't.\"\n\n\"Why?\"\n\n\"I had seen how silky smooth he was with you, and I figured he had a better chance of getting us into the vaults at Fort Knox than he did of convincing any woman to do anything. At least, any woman I'd be willing to sleep with.\"\n\nShe laughed harder at that. \"No, dumb shit. I mean, why did he want to get you laid?\"\n\n\"He told me it didn't matter what I had done before, I was basically still a virgin if I'd never had sex in Pittsburgh,\" I explained. \"I told him that he was full of shit.\"\n\n\"And now?\" she asked. I don't know how serious a question it was, but I figured I could get myself in some trouble if I didn't answer carefully.\n\n\"Pittsburgh represented itself very well,\" I smiled. \"Certainly the best legs in the country.\"\n\nShe smiled back at me and shook her head. \"I just don't understand him.\"\n\n\"I think I get it,\" I reasoned. \"You know how competitive he is. He doesn't want to lose. He knew he shouldn't have made that bet with me, given that I wasn't even going to be here another 24 hours. He did the only thing he could, I guess.\"\n\n\"Fuck that,\" she said. \"Would you let your girlfriend fuck a guy you barely knew to win a bet? Especially when all that's on the line is beer?\"\n\nI took her hand and squeezed it. \"I didn't say he wasn't a fucking idiot, Maria. I just said that I think I know why he did it. If you were my girlfriend, I wouldn't let you fuck anybody else with a gun to my head. There wouldn't be a bet in the world that would be worth that.\"\n\nShe smiled again, and this time it enveloped her whole face. Sure, I had a somewhat liberal view of the word \"relationship,\" and I'd been in the room when previous girlfriends were fucking other guys. But it was what Maria needed to hear.\n\n\"I guess Josh doesn't feel that way, though,\" I said. She flinched a little. \"And ya know? That turned out pretty well for me.\"\n\nShe chuckled. \"What do you think I should do?\"\n\n\"You guys are serious, right?\" I asked, and got a nod. \"Totally exclusive?\"\n\n\"I think so,\" she said. \"At least I did. I really don't know, now.\"\n\nI wasn't thinking about the future last night. Things could get awfully awkward with Josh and I next week in Chicago.\n\n\"Sounds like you guys need to have a chat,\" I said, and then punctuated it with a strong sniff of the air. \"And it smells like I need a shower.\"\n\n\"Can I join you?\" she asked, licking her lips.\n\n\"Actually, I'm kind of running late,\" I said. That was part of the reason, but not the biggest part. \"As much as I would love a repeat performance, I'll have to take a rain check.\"\n\n\"You do that, then,\" she said, rolling over me and grabbing my phone. She started typing in her number as I went into the bathroom. \n\n************\n\n\"Aww,\" Kelly moaned into the phone an hour or so later, right after I'd crossed from West Virginia into Ohio. \"No morning happy times, then?\"\n\n\"Giving you every sordid detail of evening happy times wasn't enough?\" I shot back.\n\n\"Let's see,\" she said. \"I only came... hmm... four times, right?\" she asked. \"So, no. Not enough.\"\n\n\"I only heard three,\" I answered.\n\n\"Yeah, but the first one was so fucking awesome that it counts twice.\"\n\nI liked her logic.\n\n\"Would you ever make a bet like that with me, Brad?\" she asked, her voice turning serious for a minute.\n\n\"Hell fucking no,\" I said authoritatively. \"We've already talked about sharing, babe, and I'm not going back on that. We can have threesomes, foursomes, whatever-somes. But if we were to get serious, anything you do, I'm gonna be there, too, and preferably involved in it. I would never just offer you to a friend and then walk away.\"\n\n\"You like me that much, huh?\" she teased.\n\n\"I like everything I know so far,\" I answered. \"No reason to think I won't like everything else I find.\"\n\n\"Aww, you're so sweet,\" she said.\n\nBingo! \"There we go,\" I replied.\n\n\"Umm, what?\" she asked.\n\n\"Sweets,\" I said. \"I was at a complete loss for what I was going to tell you today. Truth be told, there isn't much about me that's all that interesting.\"\n\n\"You have an uncanny ability to make girls you've never met do whatever you want,\" she chuckled. \"I'd say that's plenty interesting.\" The \"plenty\" took about 10 seconds to leave her lips.\n\n\"Maybe, but that's sexual. Our little personal tidbits are supposed to be G-rated. Or at least, not X-rated.\"\n\n\"True,\" she said. \"So what about sweets?\"\n\n\"I like making them,\" I answered. \"My mom has a gift, and while I'm not as good as she is, I inherited her love of baking.\"\n\n\"Oh my God!\" she exclaimed. \"Your mom makes the best cookies! She brings them to our monthly meetings all the time.\"\n\n\"Yep,\" I said. \"I can make a pretty damn good oatmeal chocolate chip. But my specialty is cakes.\"\n\n\"Ok,\" she said. \"I'll confess. Just hearing you say that is getting me wetter.\"\n\n\"I'll confess,\" I answered. \"I'm pretty thrilled about that. But yeah, there's a peanut butter German chocolate cake recipe I created... even my mom flips out about how good it is.\"\n\nThere was a brief pause. \"Yes,\" she said.\n\nI was confused. \"Yes? To what question?\" I asked.\n\n\"Whatever question you want to ask. Make me that cake, and the answer is yes.\"\n\nI couldn't help but laugh heartily now.\n\n\"What about you?\" I asked. \"Do you cook?\"\n\n\"Well, I make about 900,000 tacos every day,\" she quipped.\n\n\"And I'm sure they are the best damned tacos on planet Earth,\" I shot back. \"But, what about when you're not on the clock?\"\n\n\"Yes,\" she said. \"Actually...\"\n\n\"Actually, what?\" I asked when she didn't continue.\n\n\"I want to save that for another day,\" she explained. \"It's pretty substantial. And it's a key ingredient to my future. So, I hope you'll be interested.\"\n\nMore than I was willing to say.\n\n\"I'll remind you tomorrow, then,\" I said.\n\n\"Good,\" she answered. \"Brad?\"\n\nI knew that tone of voice. \"Yeah, baby?\"\n\n\"Can you give me one more?\"\n\nSo I went into detail about the dream I'd been having before Maria climbed into bed with me.\n\n*********************\n\nIndianapolis was in the central time zone, so I gained an hour back on my trip. I also made pretty excellent time on I-70, but due to my late start, I got to the hotel maybe 30 minutes before the gates opened for Brooks & Dunn. I brushed my teeth and splashed some water on my face, but had time for little else before walking the two blocks to the ampitheater for the concert. I actually arrived a few minutes early and had to wait for the gates to open. In front of me in line was a group of girls, all chatting away excitedly.\n\nIt was quite the eclectic mix. The first to attract my attention was an unbelievably well-built girl who could have stepped off the pages of a men's magazine. That was part of what made me look; the other part was that her hair looked like it came from a box of Lucky Charms. It was a like a high school experiment gone wrong, as if a couple of stoners tried to tie-dye a shirt but accidentally spilled the mixture into her hair. Blue, green, orange, purple, yellow -- if you could find the color in a box of Crayolas, it was in her hair.\n\nThere were two blondes in the group. One was short and stocky but had perhaps the biggest tits I'd seen on the trip trapped behind a gray halter top, and the other was a dishwater blonde with numerous tattoos. \n\nThe other three girls were a tall black girl, an overly skinny Latina girl, and a voluptuous girl with vague Asian features. Of the six, she was probably my favorite. It was hot out, with temperatures only beginning to back down from the high 90s as the sun started setting. None of them were wearing a whole lot.\n\n\"See anything you like?\" the black girl asked me. Apparently I'd been too obvious with my once-overs.\n\n\"Six things, actually,\" I said. \"Didn't mean to offend anyone, but you girls obviously went to a lot of trouble to look hot tonight. What kind of guy would I be if I didn't show my appreciation?\"\n\nA few of them snickered. \"Nah, we're not offended,\" the black girl said. \"If you were some nasty-looking dude, we might be. But you're pretty hot yourself. Right, girls?\"\n\nEveryone murmured their agreement, which was nice. I noticed a couple of them looking pointedly at the short blonde girl with the gargantuan boobs. She instantly blushed and stared at the pavement, and the other girls laughed.\n\n\"Even if you're not exactly our type,\" the girl finished. That drew gasps from most of the others.\n\n\"Vicki!\" the Hispanic girl exclaimed.\n\n\"What?\" she asked, grinning at me. \"It's not nice to lead a guy on.\" She walked up close to me now, seemingly inspecting me. \"Besides, we might not be totally leading him on, anyway.\"\n\nThe rest of the group chattered excitedly, but I was busy sizing up the girl standing right in front of me. She was a little older than the others, but was still around my age, I guessed. I wasn't into most black women, but every now and again I found one I was attracted to.\n\n\"Where are you sitting?\" Rainbow asked me. I pulled out my ticket and told her.\n\n\"Going to a concert like this all by yourself?\" The girl with the tattoos had joined the other two right in front of me.\n\n\"Yeah,\" I said. \"I'm actually on a long road trip across the country. I don't know anyone in the area, so I decided to just check this out by myself.\"\n\n\"Well, we're up in the grass in the back,\" Vicki said, re-taking the lead, \"but we might have to hook up with you later.\"\n\nShe licked her lips, and I pulled out my phone. \"Sure,\" I said. \"I know they're having an after-party out in the parking lot with some local bands. We can meet up there.\"\n\nAs I gave her my phone number, I noticed the short girl holding hands with Rainbow. I thought I might know what Vicki had meant by 'not exactly our type.'\n\n\"I'm Brad by the way,\" I said, sticking my hand out. She chuckled before shaking it and introducing everyone else in the group. The names didn't stick for long, but I figured a couple of them might come back before the night was out.\n\nThey opened the gates after that, and we all shuffled into the outdoor arena and went our separate ways. I was one of the first in line at the beer table, and was standing there when I heard a loud yell from nearby. I turned to look, and I saw a guy and a girl standing next to one of those large prize wheels. Apparently, they'd won something pretty awesome. The girl was excited, but not nearly as much as the guy was. He'd been the one shouting.\n\nI got my beer and headed off to my seat, six rows from the stage and just a little right of center. As I filed in, I saw the couple from the prize wheel sitting one row behind me and four or five seats to my left. The girl was absolutely dazzling, and her smile made her even more so.\n\n\"Congratulations,\" I said. \"What did you guys win?\"\n\nThe girl's mouth was open as if she was going to answer, but the guy cut her off.\n\n\"These seats!\" he exclaimed. The girl shot a sideways glare at him for a minute, before tossing an apologetic glance at me. She even punctuated it with a mouthed 'I'm sorry.' I wasn't sure what she was sorry about, but I quickly understood. Once the guy began talking, he wouldn't shut up. \n\n\"Yeah, we just walked by the prize wheel, and I figured, hey, maybe we'll get a free beer or burger or something,\" he said without me asking. \"So the Jenster here spins the wheel and... free upgrade to the front!\"\n\nThe Jenster? Fucking really?\n\n\"Where were your seats?\" I managed to spit out while he was breathing, hoping the girl might answer. No such luck.\n\n\"Back in GA,\" he said. \"Ya know, sitting in the grass wasn't a big deal, and you couldn't beat the price, because a buddy at work gave 'em to me. But the view up here is so much better.\"\n\nHe kept yammering, and I stopped paying attention. He had spiky blond hair and a pierced nose, and he wore a long-sleeved black shirt to go with dark blue jeans. Hardly first-choice attire for an outdoor concert in the middle of June. He looked about 18, if even that.\n\nThe woman, though, looked to be about my age or even a touch older. She was dressed casually, her knee-length green flower-print sundress leaving enough room to breathe but covering up more than the bikini top and daisy dukes most of the girls out here were wearing. Not that I was complaining about the general state of undress in the arena, but this girl was actually wearing clothes and could attract just as much attention.\n\nThe guy was still talking, blissfully unaware of the fact that no one was listening. Before too long, the first of the five main acts came out on the stage, and the music shut him up. The set was only 25 minutes long though, and none of the seats between mine and theirs had filled in yet. Just as I was bracing myself for another verbal onslaught, he stood up.\n\n\"JenJen,\" he said, making me want to vomit and punch him all at the same time. \"I'm going to the restroom. You want to come with?\"\n\n\"Um, no,\" she answered, perhaps the easiest decision in recorded history. \"I'll be fine here.\"\n\nHe lingered a few seconds, hoping she'd change her mind. For that, I couldn't blame him. If I'd managed to blackmail someone like her into coming with me to a place like this, I'd want to flaunt it, too. Finally, he gave up and walked up the aisle toward the concession areas. I didn't waste any time.\n\n\"Did he talk that much when they were sticking that fishing lure in his nose?\"\n\nShe immediately busted up with laughter.\n\n\"Jesus H, I thought the rest of us might die of oxygen deprivation.\"\n\nShe nodded her head, but otherwise, she was laughing too hard to answer. I got up and moved a few seats to my left, sitting right in front of her.\n\n\"I'm Brad,\" I said, and when she stopped doubling over, she stopped to shake my hand. \"No, no,\" I said when she started to talk. \"Let me guess. Jenster, right? Or is it JenJen?\"\n\nShe started laughing again, but this time she could speak.\n\n\"Jenny,\" she said. \"Or Jen. Jennifer is fine, too. Anything except what he was calling me.\"\n\n\"Nice to meet you, Jenny,\" I said. \"So, shoplifting?\"\n\nHer face contorted into a question.\n\n\"Worse than that, huh? Grand theft auto?\"\n\nShe had deep blue eyes, and very, very curly blonde hair. She wore big hoop earrings and was wearing a little too much makeup for my tastes, but she at least wore it well. In a word, she was gorgeous. She was also still very confused.",
        "\"Hell, girl,\" I said. \"I don't care if you murdered somebody. Let him tell everyone. Couldn't be worse than having to go out with him.\"\n\nShe finally got the joke, and started convulsing with laughter again. \"No,\" she tried, but couldn't hold it before breaking down again.\n\n\"I'll stop, I'll stop,\" I said, sipping my beer as she settled down.\n\n\"He had tickets,\" she replied. \"I'm a big Brad Paisley fan and an even bigger Brooks & Dunn fan. I wanted to go to the concert so badly, but... I didn't know it would be this bad.\"\n\n\"How did somebody like him meet someone like you?\"\n\n\"Because somebody like me has a nerdy little brother who plays fantasy card games,\" she explained. \"He's 15, and he spends all his time at the comic book store. He told me one of his friends had tickets, and he'd told him that I love B&D and would probably go.\"\n\nShe waited a moment, then:\n\n\"I might be an only child when I get home tomorrow, though. \"\n\nNow I was the one laughing. I chatted her up for a little bit, and found out she was a fourth-year pre-law student at the University of Indiana, an hour or so away, and was back home in Indianapolis interning for the summer. The job was great for her transcripts and resume, but the pay sucked, which is why she didn't have the money to buy her own tickets to the concert.\n\n\"So, does he think he's getting a piece at the end of the night?\"\n\nIt was a blunt question, but life's short. Jenny was hot, and there was going to be an after-party. Might as well see what could be done about getting her to it. Luckily, she wasn't offended by my boldness.\n\n\"I don't know what he thinks,\" Jenny said, \"but I'm not even touching the annoying little fuck.\" My hand had been dangling over the back of the seat for a while, and she moved her knee under it until we touched. When I met her eyes, she continued. \"Hell, I won't even leave here with him if I get a better offer.\"\n\nAnd sometimes, it's just that easy. \n\nI gave her my number and she promised to text me before the end of the concert. I had no doubt that she would. I moved back to my seat, and when I glanced behind me 10 minutes later, the guy was sitting there by himself with Jenny nowhere in sight.\n\nThings really began to get interesting when Rascal Flatts took the stage. The stadium was mostly full now, and there were two married couples on my left, and a teenaged couple on the other side.\n\nThe best part was the pair of girls who took the seats right in front of me. I didn't flirt or even say anything to them during Rascal Flatts' set, instead just choosing to admire their asses and listen as they went ga-ga over Joe Don Rooney, the band's bass player. \n\nOne was a short redhead, with hair flowing nearly to her ass, and the other was a taller brunette with a body that would make most supermodels jealous. They danced in place during the faster songs and sang along with the slow ones. Sometime during the set, I developed a plan.\n\nJust as the lights came up and the roadies started tearing down the stage and setting up for Brad Paisley, I called Kelly. I knew she had to work, so I wasn't sure if she'd answer me, but I had a plan either way. I got lucky, though, because she was on a break.\n\n\"I'm sure the concert is excellent, but it'd be even better if I was standing in front of you, grinding my ass into your cock during every slow song,\" Kelly said when she answered.\n\n\"Jesus, Kelly,\" I replied. \"You trying to give a 22-year-old man a heart attack?\"\n\n\"What?\" she asked. \"I only have a few more minutes left on break. Didn't want to waste any time.\"\n\n\"Hmm,\" I pondered. \"In that case, carry on.\"\n\n\"No, no,\" she said. \"I wouldn't want to be giving any pansy men a stroke.\" She laughed, and my grin widened. \"You having fun, baby?\"\n\nWe'd been using a lot of pet names for each other the last few days. At first I was a little leery of it, until I realized that they actually didn't bother me. I guess I thought I was supposed to be annoyed with them, and if anyone else called me anything like that, I probably would be. But coming from Kelly's lips, they seemed natural.\n\n\"I am,\" I said. \"Rascal Flatts just finished up, and Brad Paisley's up next. I've met a few people today I think you would like, too.\"\n\n\"Oooh,\" she said, temporarily slipping back into sexpot mode. \"Tell me more.\"\n\n\"Well, I met a big group of girls in line earlier, and then I met another one a little bit ago. Gonna have to get her away from her annoying date a little later. And right now, I'm standing behind two pretty damn hot girls.\"\n\nI made sure my voice was loud enough that they could hear me, and I was watching their reactions. The brunette's back stiffened some, but neither of them turned to look at me.\n\n\"Descriptions, please.\"\n\n\"One is a redhead, and if I'm not careful I might accidentally step on her hair. It's that long,\" I continued. \"The other must own a gym, I think, because even from behind I can tell she has one of the tightest bodies I've ever seen.\"\n\n\"Have you seen it yet?\"\n\n\"No,\" I agreed. \"But I'm hoping this conversation will help me with that.\"\n\n\"Ah, using me, huh?\"\n\n\"Yes,\" I admitted, lowering my voice to normal tones now. They could still hear me, but only if they were really, really trying. \"But only because I can't use you for what I really want.\"\n\n\"Oooh,\" she said again. \"God, you know just how to push my buttons. I'm in my Taco Bell uniform sitting in my car on a break, and I'll be gushing when I go back in.\"\n\n\"That's not my problem,\" I teased. \"But, holy hell, do I wish it was.\"\n\n\"Me too,\" she said. I noticed the girls in front of me whispering back and forth now. The redhead started to look over her shoulder at me, but the brunette elbowed her forward. \"The things I would let you do to...\"\n\nKelly trailed off, and I thought it was just because she was letting her mind wander down that particular road. A few seconds later, I learned otherwise.\n\n\"What?\" she spat. There was no way that tone of voice was meant for me. I heard another male voice, saying something about a machine. \"Fuck,\" she muttered. \"Okay, I'll be right in.\"\n\n\"Problems?\" I asked.\n\n\"Our damn smoothie machine is broken again,\" she grumbled. \"Gonna have to cut this short.\"\n\n\"That's okay,\" I said.\n\n\"Gives you more time to work on the girls in front of you, right?\"\n\nDamn, this woman understood me.\n\n\"Have fun. Hell, throw an orgy.\" The thought had crossed my mind. \"But you better call me tonight. You have no lame excuses like sleep this time.\"\n\n\"I promise, Kelly.\"\n\nI hung up the phone, and feigned checking text messages for a minute. I did have one from Jenny and one from Vicki, but I could check them later. I was just making sure the girls knew I was off the phone. When I finally looked up, they were both looking at me.\n\n\"Hi,\" I said. \"Looking for something?\"\n\n\"Um, no,\" the brunette said. Her face wasn't quite as attractive as the rest of her body, but she was still pretty.\n\n\"You were a little loud there,\" her friend said. She was just about the opposite. She didn't have the tightest body in the world, but her face was incredible. Becky was still the hottest redhead I'd ever seen, but this girl was a close, close second.\n\n\"Ah, you guys heard that, huh?\" I said, feigning embarrassment. \n\n\"Yes, yes we did,\" the redhead said.\n\n\"So, you think we're hot, huh?\" the darker-haired girl asked.\n\nI nodded. \"Me and every other guy in the place. I'd guess a few of the girls, too.\"\n\nThe redhead blushed, but her friend just laughed. I looked to my right, where the teenaged couple had been sitting before going to the restroom a few minutes prior.\n\n\"You know the guy sitting here with his girlfriend? He's been staring at your asses all night,\" I said.\n\n\"That kid?\" the brunette asked, and I nodded again. \"He's like 16!\"\n\n\"Young people can still have excellent taste,\" I countered. The kid had actually been checking both of them out a fair amount -- I wasn't just making that up. I had no idea how his girlfriend didn't notice that. Of course, I had a girlfriend who actively encouraged it. Maybe he did too.\n\nI introduced myself then, and so did they. Miranda was the redhead with the infinite hair and gorgeous face, and Desiree was the brunette with the insane body. Predictably, Desiree was a dancer for the Indiana Pacers, the local NBA team who'd just finished their season. \n\nWe chatted right up until Brad Paisley got on stage, at which point, we all watched the concert. If anyone's ever seen the man live, they know he can put on a damn good show. Miranda and Desiree had swapped seats with the older couple to their right, so they could dance in the aisles. Miranda beckoned me over to them, so I slid past the teenagers and joined them in the aisle.\n\nThey both danced very close to me. Desiree had downed two beers in the intermission alone, and was now working on a third. With almost no body fat on her lithe frame, she was feeling the effects big time. We were far from the only people dancing -- it seemed like half the crowd was in the aisles, working their drunk bodies to whatever Brad Paisley wanted to play.\n\nHe slowed it down a few songs later, though, and I was momentarily unsure what to do. That is, until Miranda put her arms around my waist and pulled me close to her. Before long, I felt warm breath on my neck and a body pushed up against my back. I looked back just in time to see Desiree put her head on my shoulder. \n\nThe set stayed slow for a little while, and all three of us were letting our hands wander. Miranda package checked me at least twice, and Desiree could have sculpted my ass from memory by the time we were finished. I couldn't really feel up Desiree, but I got several handfuls of Miranda's boobs.\n\nWhen he'd finally finished up, I went to sit down, but found that the teenagers had slid in one spot so I could sit on the aisle.\n\n\"We figured y'all would be dancing even more during Brooks & Dunn,\" the kid explained. I said thank you and sat down in what had been his seat. He leaned over and whispered in my ear 'Lucky fucker.'\n\n\"I am at that,\" I muttered, low enough that his girlfriend wouldn't hear us. \"I'm also out of beer,\" I added, piping up now. \"You ladies want anything?\"\n\n\"We'll come with you,\" Desiree slurred, and so we went, up the aisles and out into the concessions area. The sun was down, but it was still hot and muggy and altogether unpleasant. Apparently others were feeling it too, because we hadn't been in line for two minutes when we heard shouting and yelling coming from the left.\n\n\"You better watch your fucking mouth, boy!\" The guy yelling was as big as Doug, one of the guys I'd watched the Pirates with yesterday. The guy he was yelling at was much smaller than me, but apparently not intimidated.\n\n\"Yeah, whatever, asshole,\" he shouted back. \"Give me five minutes alone with Chrissy, and then we'll let her decide who's the boy.\"\n\nUh oh.\n\nThe big guy took a swing at the smaller guy, but he ducked out of the way and answered with a knee to the bigger man's ribs. I was hoping that would be it, but one of the big guy's friends blindsided the small one, sending him flying with a nice right cross to the jaw. He landed at my feet, and his left arm caught Miranda across the leg as it flailed.\n\n\"Ok, guys,\" I shouted, moving toward them despite the girls' objections. \"Enough is enough.\" I wondered where the bouncers were -- I'd volunteered to work security at a few different events during my time in the Corps, and usually we'd be all over a situation like this by now.\n\n\"You one of his faggot friends?\" another of the big guy's buddies asked. He started charging right at me, and I was seriously hoping this didn't get out of hand.\n\n\"I'm not anybody's friend,\" I said, stepping right up into his face and making him pull up short. \"I just don't want you guys to get anyone else hurt while you're comparing dick sizes.\"\n\nProbably not the smartest thing to say, and I'm sure the guy would have decked me, but a couple other guys in my line spoke up as they walked up beside me.\n\n\"Seriously guys,\" said one of them, a short, tightly-packed guy with tattoos crawling up both arms. \"There's a whole parking lot out there if you have some issues you need to work out.\"\n\n\"I haven't been in a fight in a loooong time,\" the other one said, his words thick with a southern drawl. He wasn't quite as big as the guy who'd started the shouting, but he wasn't someone I'd want to piss off, either. \"Don't wanna get in one now, either, but can't say I wouldn't enjoy it.\"\n\nThe little guy had since gotten up, and along with one of his buddies, they rushed past me and my two allies and launched themselves at the second guy, the one who'd knocked him silly. They all crumpled into a heap of fists and legs, rolling into a few other onlookers as they went. \n\nThe guy with the accent went over to clean that up. His tattooed buddy stood toe-to-toe with the third guy, the one who'd charged at me.\n\nI started to go help the first guy out, but I got cold-cocked from my left. I nearly fell over, but managed to recover my balance by taking just a few steps to my right. When I turned my head to look, I noticed the original big man grinning at me.\n\n\"Don't stick your nose where it doesn't belong!\" he shouted, then lunged at me. To hell with this, I thought. I saw some yellow-shirted security guys running at us in my peripheral vision, but my attacker was going to get to me before there were. So, I sidestepped him, and he ran right into a fist from the guy backing me up. When he spun around, I wrapped my right arm around the back of his head, and when he bent down to go with it, I promptly drove my right knee deep into his crotch.\n\n\"Jesus, man!\" his friend shouted, as the first guy slid to the pavement like a sack of potatoes. His eyes were wide in shock. \"That ain't even fuckin' fair!\"\n\n\"Wasn't trying to be,\" I said, rubbing my jaw where he'd nailed me. \"I think we won, though.\"\n\nWith that, the third guy backed down and went over to help his buddy. The other guy who'd helped me out walked back over to us, with the little guy tucked under one arm and the guy who'd punched him under the other arm. \n\nI could hear the girls running up to us from behind me, and they got there right about the same time security did.\n\nThey dragged us all to the security office up front to figure out what had happened -- me, the girls, my two allies, the four guys who'd started the fighting, the extra friend who'd done nothing but talk to me, and Chrissy, the girl they'd been fighting over. Apparently, she'd been standing there the whole time, just watching as the rumble unfolded. I didn't see what they were all competing over -- she wasn't hideous, but she wasn't worth assault charges.\n\nWhile we waited, the two other guys and I chatted. Sam was the one with all the tattoos, and Houston was the large one with the southern accent. He lived in Indianapolis, but his nickname came from where he was born and raised. They didn't even know each other; they'd been trying to buy beer just like me, and had happened to step up to get my back at the same time.\n\n\"You looked like you could handle yourself,\" Sam said, \"but I wanted to make sure.\"\n\n\"He had a couple other buddies too,\" Houston said. I hadn't even noticed them. \"One on five would be a bitch for anybody.\"\n\nIt took a few minutes to sort everything out, and I was worried that Brooks & Dunn would start without us. They finally released everyone but the four guys who'd instigated everything. Sure, I'd been part of it and so had Sam and Houston, but security had enough witnesses to corroborate our stories that we'd just been trying to keep things from getting out of hand.\n\nMiranda and Desiree each latched onto one of my arms as we walked out of the office, Houston and Sam trailing behind us.\n\n\"Damn, son,\" Houston said, apparently enjoying the view. \n\n\"Make sure those girls take care of your jaw later,\" Sam added, and I got an idea. I'd already texted Vicki a couple of times, and her whole group was meeting up with me at the after-party concert. Jenny was down for whatever I wanted to do, and it didn't look like Miranda and Desiree were going to want to go straight home either. With just a little bit of work on my part, I could see things heading straight back to my hotel room, just a block or two away, after the party. \n\nSure, I was a 22-year-old Marine, in the prime of my life with a booming sex drive. But 9-on-1? I wasn't sure even I could handle that by myself.\n\n\"I've got some other friends here, and we're all gonna meet up out here for the party once B&D are done,\" I said. \"Why don't you guys join us?\"\n\nDesiree was pretty hammered by this point, and she just laid her head on my shoulder, but Miranda enthusiastically nodded. I exchanged cell numbers with both of them, and we made it back just in time for the show to start.\n\nWe danced along with everyone else for the first few songs, but I could tell Desiree was gonna need a break. Instead of letting her go back to her seat, I put her in mine. I had an idea of what might happen, and sure enough, when I looked back a few minutes later, her head was on the teenaged boy's shoulder. His girlfriend's head was on his other shoulder. I guess she didn't mind, after all.\n\nMiranda didn't want to quit, though, and as the faster songs kept coming, we got further and further from our seats. They switched to a slow song, \"Neon Moon,\" and we found ourselves dancing cheek-to-cheek in a sea of others doing the same exact thing. \n\nI'd been half-hard all night, but when Miranda pressed her body up against mine, I could feel the heat radiating from her pelvis. She never looked up at me, but she slowly adjusted her feet to where she could straddle my leg. I was wearing cargo shorts, so when she started rocking her hips against me, I felt more than just heat.\n\nI felt wetness.\n\nGrinning, I moved my hands down to her ass, and idly pulled her skirt up until it wasn't blocking her pussy anymore. When it was just her panties pressed against my lower thigh, it got even wetter. She gasped and finally looked up at me.\n\n\"Busted,\" I said in a sing-song voice, letting her know I wanted her to continue. She did, but when \"You're Gonna Miss Me When I'm Gone\" started, I decided to try a more direct approach. I pulled her as close as possible and cupped her left breast with my right hand, causing her to groan.\n\n\"Shh,\" I whispered in her ear as the hand dipped lower. When I slipped it under the waistband of her skirt, she gasped and look at me. I just licked my lips and continued, pushing it beneath her thong. I could feel the furnace burning between her legs, and it wasn't long before I felt her juices, either.\n\n\"What are you--\" she tried to ask, but I kissed her before she could finish it.\n\n\"Nothing, if you don't hush and enjoy it.\" I could tell she was a little nervous, but she tried to relax, leaning her head forward to my shoulder. As turned on as she was, I knew it wouldn't take much. I knew the song well, so I knew I had maybe two minutes till it was over. \n\nMy fingers searched out her clit and found it almost immediately, causing her to bite down hard on my shoulder.\n\n\"There's no way that didn't draw blood,\" I whispered.\n\n\"Sorry,\" she pouted.\n\n\"No you're not,\" I answered. \"Neither am I.\" I pushed my hand lower until I could jab a finger up into her tight depths. It was an awkward angle, but she moaned nonetheless. I only left the digit there for a moment before moving it back to her clit. \n\n\"You have about a minute to cum for me,\" I whispered. \"After that, they change songs, people stop dancing, and I stop what I'm doing.\"\n\nShe glared at me, but I just shrugged. I knew it would be no problem. I trapped her clit between two fingers, and just for effect, I leaned down and started sucking on her neck. Her fingers became claws, digging into my back as she spasmed and screamed with a closed mouth.",
        "\"You're a bastard,\" she said, smiling.\n\n\"Oh, like you didn't enjoy that,\" I answered.\n\n\"I did,\" she said. \"You're a bastard because I want more and you can't give it to me right now.\"\n\nRight on time, Brooks & Dunn finished their song and rolled into Boot Scootin' Boogie, one of the biggest country line-dancing songs in history. There was no way we'd have been able to keep going. I sniffed the air, and it smelled just like my fingers did. Before anyone could notice it, I whisked Miranda back to our seats.\n\n**********************\n\nJenny was the first to find me when I got out into the parking lot, my two lady friends in tow. She was a little cautious about them hanging on me, but she came over to me anyway.\n\n\"You chase him off?\" I asked. Her response was to show me her phone, where she had about 13 missed calls. \"Wow. A little obsessed, me thinks.\"\n\n\"Just a bit,\" she replied. \"I just ditched him a few minutes after we talked. I went up in the grass and found some other people to hang out with the rest of the night.\"\n\n\"Poor guy,\" I said. I did actually feel a little bit bad for him. Not bad enough to do anything about it, but still. Slightly sympathetic.\n\n\"Looks like you had a pretty fantastic night,\" she said.\n\n\"He did!\" Miranda exclaimed for me. Her face was still positively glowing, I guessed from a mixture of the alcohol and her earlier orgasm.\n\n\"What's that on your face?\" Jenny asked, raising her hand to touch it. I let her, but it did still hurt.\n\n\"A love tap,\" I said, blowing it off. Miranda was unwilling to let it go at that, though, telling Jenny all the details about the mini-brawl I'd jumped into. Desiree remained quiet, clearly still affected by the alcohol.\n\n\"There he is!\" I heard a shout, and looked behind and to the right to see the first group of six girls approaching. \n\n\"Jesus, Brad,\" Jenny asked. \"How many girls did you pick up today?\"\n\n\"Pick up? Zero,\" I replied. \"I was nice to...\" I trailed off as I started to count. I gave up halfway through. \"... a lot.\"\n\n\"I see,\" Jenny said. Vicki and the curvy Asian girl were the first to make it to me, and instead of a hug, I got simultaneous kisses on the lips from both. Even fairly drunk, I couldn't help but notice their tongues did a fair amount of touching, too. The stocky blonde with the massive boobs gave me a peck on the cheek, as did her rainbow-haired friend.\n\n\"Starting to be a little bit of a crowd here,\" Desiree said, slurring it badly but still speaking clearly enough that we got the gist. She wasn't wrong. I started wondering how I was going to pull this off, when my phone buzzed. It was a text message from Houston.\n\n\"Where you at?\" he asked. I shot back a simple reply, telling him we were up near the stage. A local band was just about ready to start playing.\n\nA few minutes later, I heard the bevy of women start to murmur and turned to see Sam and Houston working their way through the crowd to join us. When they saw who I was surrounded with, they both let out a little whistle.\n\n\"Holy fuck, man,\" Sam said, not mincing words.\n\n\"We figured you had some game with those two,\" Houston added, pointing at the two girls he'd already met, \"but I think you found the 10 hottest girls in the place.\"\n\n\"Why do you think I wanted you guys to come out after?\" I asked, bumping fists with both of them. \"I needed a couple wingmen.\"\n\n\"Hell, already done that once tonight,\" Houston said. \n\n\"I think this time might be more fun, though,\" Sam said.\n\nVicki and her crew instantly inquired about the bruise on my jaw, and I let Sam and Miranda fill them all in. With Miranda a few steps away, Jenny instantly took her place on my right arm, with Desiree still occupying the left.\n\nThe band was about average, but since all of us had had at least our share to drink, they were starting to sound about as good as Brooks & Dunn had. I managed to dance with almost every girl in the group at least once, but I mostly stuck with the three who'd been giving me the most attention. Miranda was splitting her time between me and Sam, but Jenny and Desiree really didn't go very far throughout the after party.\n\nThey both seemed pretty willing to get frisky right there in the parking lot, but there wasn't as much of a crowd here as there was during the real concert, and I knew there was no way we wouldn't get caught. So, I kept the physical contact R-rated as best I could.\n\nThe group of six girls, however, did not. Sure, they all danced with me a little bit, but when it was time to get frisky, almost all of them kept it inside the group. Vicki and Rainbow were the ringleaders, openly groping each other despite the stares of pretty much everyone all around us. As the nearby coolers continued to empty, the other four girls got into the act as well. Only the Asian girl ventured outside the group, letting her hands roam up and down Houston's chest during one song. \n\nThe band announced it was their last song, and as the music started, Vicki danced her way over to me.\n\n\"What's the plan after this?\" she asked.\n\n\"You guys look like you've got your own plans,\" I said, figuring the six of them would probably go back to one of their houses.\n\n\"We're that obvious, huh?\" she asked.\n\n\"Well, you pretty much told me before the concert that I wasn't exactly your type,\" I grinned. \"And the show you're putting on out here has driven that point home pretty fantastically.\"\n\n\"Yeah, things went a little overboard for a minute there,\" she sheepishly grinned.\n\n\"Hey,\" I said. \"I have absolutely no problem with lesbians. I just wish, at least when they're as hot as you six, that you'd let us poor guys get involved every once in a while.\"\n\n\"Who says we don't?\" Vicki asked, then stepped up close enough to whisper. \"Hell, Brad. Who says we won't tonight?\"\n\nI quickly pointed at the green hotel sign, just barely visible a couple blocks away. \"That's where I'm headed,\" I said.\n\n\"That's where we're headed too, then,\" she said, winking and sucking my left earlobe into her mouth for just a second before returning to her friends. \n\nWhen the song ended, I told everyone else. \"My hotel is just a couple blocks away,\" I said. So as not to be so forward, I added, \"I think there's a bar just off the lobby.\"\n\nI don't think I was fooling anybody, as everybody started to murmur to themselves. Still, it was better than issuing an outright invitation to an orgy.\n\n\"Yeah, I don't think anyone here can drive,\" Sam said. \"Might as well walk down \n\nthere. Who all's in?\"\n\nI knew Vicki's group was going. Desiree was going to go wherever I helped her go, and Miranda seemed almost giddy at the thought of spending more time with both me and Sam. Houston's cocky grin told me all I needed to know about him. That just left Jenny.\n\n\"Everybody's going?\" she asked me quietly.\n\n\"Everyone but you, so far,\" I answered. Houston, Sam and Miranda chatted with Vicki and her friends while Jenny and I talked. Desiree's head still rested on my shoulder. \n\n\"I was more than willing to hang out with you tonight, Brad,\" Jenny said, the emphasis in her voice leaving little doubt as to what 'hang out' meant. \"But I don't know about everyone else being there.\"\n\n\"I'm sure you'll have a good time, Jenny,\" I replied. \"No one's going to force you to do anything you don't want to do. And I promise, I'll make time for just the two of us.\" I leaned in a little closer to her and whispered in her ear. \"Trust me, out of all these girls, you're the one I want the most.\"\n\nI meant it, too. The Asian girl was the curviest of the bunch, and Miranda's open personality and beautiful face were pretty appealing, too. And the drunk girl laying on my shoulder had one of the tightest bodies God ever created. But Jenny was curvy in all the right places, she was drop-dead gorgeous, she had an excellent body, and her personality was a mystery, which made it all the more alluring. She also possessed a classiness that set her just a little bit above everyone else.\n\nSurprisingly, it was Desiree that sealed the deal.\n\n\"Come on,\" she said, looking directly into Jenny's eyes now. \"I promise it'll be worth your while.\"\n\nShe slurred it to all hell, but I could tell Jenny got the meaning. \"Let's go,\" she said.\n\nIt wasn't until we stumbled into the lobby at the hotel that common sense reminded me that we might have a problem on our hands.\n\n\"I should have thought of this before,\" I told Sam and Houston, \"but I only have one room. It's a pretty big room, but there are 12 of us. With that concert, I doubt there's going to be anything else available.\"\n\nWe looked at the registration desk, where a tall girl with strawberry blonde hair quickly looked down and away from us. I guessed we'd attracted some attention.\n\n\"Let me see what I can do,\" Sam said. \"What room are you in?\" I told him, and he went up to the counter. \n\nWhile he was gone, I sat down on a couch with Jenny. We chatted idly for a couple minutes, but when Desiree wanted to sit down with us, Jenny moved up and sat on my lap.\n\nIt didn't take me long to get hard, and it didn't take her long to notice.\n\n\"Aww,\" she teased. \"Being around all these hot women got you a little flustered?\"\n\n\"Being with you has me flustered right this second,\" I said. She tilted her head back to kiss me, and I could taste the tequila on her tongue as it entered my mouth. There was a spark of electricity between us, and we were both gasping for air as we pulled apart. We were surprised to find we had an audience. Desiree was staring at us from the other side of the couch, and Sam was standing next to her grinning.\n\n\"You willing to move rooms?\" Sam asked. \"You guys looked like you were enjoying that, so I was willing to wait.\"\n\n\"And watch,\" Jenny added.\n\n\"And that,\" Sam said. \"So?\" he asked, turning his attention back to me.\n\n\"What'd she figure out?\" \n\n\"She got a couple of late cancellations, and she had to move someone who just barely checked in a few minutes ago to a different room. Your room, actually,\" he said. \"So if you can move, we have three rooms with adjoining doors.\"\n\n\"Fuck yeah, I can move,\" I said. I stood up, pulling Jenny with me. \"Three rooms, 12 people. Four per room. That should work.\"\n\n\"Thirteen, actually,\" he said, looking back at the girl at the desk. \"She gets off in 10 minutes.\"\n\n\"Or shortly thereafter,\" I joked. I shook my head and took the key he held out to me. It had a room number on it. \"We'll be right up.\"\n\n\"We?\" Sam asked, and I took Jenny's hand.\n\n\"Yeah, we,\" I replied. He chuckled.\n\n\"Well, the other people are on their way down right now to get their new keys, then they'll be up to take over your room. I'll get my new friend over there to stall them a little.\"\n\n\"Much appreciated,\" I said. Jenny and I made out in the elevator, but once we got into the room, she asked the question.\n\n\"Why is he going to stall the people coming in here?\" Jenny asked.\n\n\"So I can do this,\" I answered, gently lowering her to the floor by the door. I didn't want to ruffle up the bed for the next people. I pulled her green sundress up to find that she had on a matching thong. It was soaked.\n\n\"Brad, slow down just a little,\" she spluttered. \"I don't -- oh fuck!\"\n\nI pulled her thong to one side and shoved my tongue as deep into her pussy as I could go, wiggling it around a few times before pulling my face back up.\n\n\"I'm sorry,\" I said. \"You don't what?\"\n\nShe answered by pushing my head back down, and I happily went to work, lapping up her juices with my tongue. I wanted to reach under the dress and play with her tits, too, but I figured there would be time for that later.\n\n\"Fuck, that feels awesome,\" she moaned. \"Haven't had this done to me in two years.\"\n\n\"Jesus,\" I said. \"Here too? Doesn't anyone in this country know how to please a woman?\"\n\n\"They might,\" she said. \"I don't let them. Anyway, people are coming. Hurry.\"\n\nI liked this side of her. She'd decided to throw caution to the wind, I guess. I did as she asked, sucking her clit into my mouth as I pushed a finger into her sopping pussy. Her fingers tightened up on my shoulder, the one Miranda had bit into earlier. When I groaned at the pain, she groaned louder.\n\n\"Fuck, Brad,\" she shouted. \"I think I might cum soon.\"\n\n\"Don't think,\" I stuttered, not pulling my mouth away. \"Just do it.\"\n\nA few seconds later, she was squirming on the floor, thrashing her head from side to side as my tongue pushed her over the edge. I heard voices outside, and quickly got to my feet, pulling a wobbly Jenny up with me.\n\n\"Thank you,\" she said.\n\n\"Pleasure was all mine,\" I replied. \n\n\"I meant for the hand up, but yeah, thanks for that, too,\" she grinned.\n\nI quickly collected my things from the bathroom and stuffed them into my suitcase. We opened the door just as the new guests were about to open it with their key.\n\n\"Hey, thanks for switching with us, guys,\" I said. It was a middle-aged couple, maybe late 40s or early 50s. I wasn't sure what story the clerk had given them, but I laid mine on thick. \"We have friends staying here, and they're right next to the room you were in. I hope it wasn't too much trouble.\"\n\nThey smiled and said they were happy to help, and Jenny and I hurried down the hall before they could detect the sex aroma we'd left right at the door.\n\nThe clerk had hooked us up with three rooms in a row, at the far end of the top floor of the hotel room. I had the key for the one on the end, and as I opened it, I was instantly glad I'd had the foresight to buy another box of condoms before leaving Pittsburgh.\n\n\"Holy fucking shit!\" Jenny exclaimed. I couldn't have agreed more. I vaguely remembered walking into the mini-orgy that had been going on in my living room the night before I'd left San Antonio, and the girl who'd walked in with me being similarly shocked. I had some experience with small groups like that, but this would be a first for even me.\n\n\"I hope you weren't expecting us to wait for ya,\" Sam said. He was already down to just his shirt, with Miranda on her knees in front of him swallowing his cock. \"Holly gave me keys for all three rooms. Figured you wouldn't mind.\"\n\n\"Nah, man,\" I said. \"How the fuck could I mind?\"\n\nDesiree was sitting by herself on the couch, and the Asian girl was licking the skinny Latina girl's boobs as they both sat on the edge of the bed, just a few feet from where Sam was getting one of the loudest blowjobs on record. Everyone else must have been in the other two rooms.\n\nDesiree waved for us to come join her, and while Jenny walked over to her, I stowed my suitcase in the closet and rummaged through it until I found the condoms. When I stood up, the curvaceous Asian girl was standing right in front of me.\n\n\"Looking for someone to use those with?\" she joked.\n\n\"I don't think I'd have to look far,\" I replied. She was wearing nothing but a pair of tiny red shorts, and her boobs were bigger than average, especially for an Asian woman. She caught me staring, and lifted my chin with her finger.\n\n\"Hi,\" she said. \"I'm Jessica.\"\n\n\"Hi, Jessica,\" I said, and immediately bent down to take one of her nipples in my mouth. Her hand snaked around the back of my neck as I bathed her tits, starting with one and moving to the other, going back and forth until I'd covered every inch.\n\nShe pushed me backward into the bathroom and made short work of my cargo shorts. I put one leg up on the edge of the bathtub and held onto the shower rod as she dropped to her knees and fished my cock out.\n\n\"Fuck,\" she moaned, running her hand up and down the whole eight inches. \"This is going to feel great.\"\n\n\"You've been with guys before?\" I asked.\n\n\"Uh, of course,\" she replied, before a light bulb clicked on. \"Oh, our little group? Yeah, we all like women. There's almost no drama, and we never have to worry about getting ourselves off. Most of us like men, too, though. Me probably more than any of the others.\"\n\n\"A hot, open-minded bisexual woman,\" I sighed. \"Fuck the seven wonders of the world. That might be God's most perfect creation.\"\n\nShe giggled. \"I haven't been with that many guys, though, and none with this much to offer.\" With that, she wrapped the head of my cock in her mouth, and the feeling of warm wetness engulfing me made me sigh again. She had long, dark hair, and I wrapped my fingers in it as she started going to town on me.\n\nAfter a few minutes, I sat down on the closed toilet seat as she continued working on my dick. I was insanely aroused, what with fingering Miranda at the concert, the constant close dancing with Jenny and Desiree at the after party, and then eating Jenny out on the floor a few minutes ago. Still, I was determined to hold out.\n\n\"I'm sorry,\" Jessica said, pulling up off my dick and standing up. \"I have to have this thing in me.\"\n\n\"What's to apologize for?\" I grinned. \"Let me,\" I said, tugging her forward by the waistband of her shorts. She gasped when I abruptly spun her around and yanked the shorts down, along with her white thong. \n\n\"You like?\" she asked, wiggling her ass just inches from my face. \n\n\"Grab your ankles, and let me show you how much.\" I swatted her right cheek lightly, enough to get a little yelp out of her, before she bent over. She spread her legs a little bit as she went, and when her ass cheeks parted, I couldn't help but dive right in.\n\n\"Ooh!\" she squealed as my tongue found her puckered asshole immediately. That hadn't been my target, but I didn't avoid it, either. I licked her from top to bottom again and again, starting at her ass and dragging my tongue slowly down between her labia and spending a few seconds on her clit before making the return trip. When I'd had my fill of that, I wrapped my hands around her thighs and used them as leverage as I buried my face in her pussy. I thrust my tongue in as far as it would go, making sure my closely cropped beard rubbed her clit. \n\nI had every intention of making her cum just with my tongue, but she still wanted something else.\n\n\"You do that as well as some women,\" she gasped as she stood up.\n\n\"Really, now?\" I grinned.\n\n\"I said some,\" Jessica said, straddling my hips as I grabbed a condom off the sink, where I'd thrown the box. \"Not all. But this... I'm guessing you do this better than any woman ever could.\"\n\nShe put her hands on my shoulder and slowly lowered herself onto my cock. As I expected, her pussy was relatively tight, and she was taking her time savoring every inch as it slipped inside her.\n\n\"Fuck,\" she said, inhaling sharply when she finally worked all eight inches inside. \"So... fucking... full.\" Each pause was accompanied by a slight rise and fall of her hips. \"So much better than a strap-on.\"\n\nI was intrigued at that thought. I'd seen two girls use one once before, but hadn't gotten up close and personal with them. I seriously doubted anyone had brought one with them to the concert, though, and I chuckled at the thought.\n\n\"What? It is,\" she reiterated.\n\n\"I don't doubt it, Jess,\" I said, hoping she didn't care that I chopped her name down to one syllable. From the look of bliss on her face as she slowly bounced up and down on my cock, she didn't. \"There are some things you just need a man for.\"\n\nI noticed movement in the doorway, and saw Desiree and Jenny standing there. Jenny's eyes were glued to the junction between Jessica's pussy and my cock, and she was subconsciously licking her lips. Desiree wasn't even that shy, rubbing her own breasts through her shirt.\n\n\"We got tired of waiting,\" Desiree slurred when she saw me looking at them.\n\n\"Hell, if they're gonna watch, let's give 'em a show,\" Jessica said. I knew what she had in mind, so I gripped her right hip with one hand and squeezed her left tit with the other. The next time she leisurely slid up my cock, I forced her down hard. All the breath left her lungs, and one of the two women in the doorway gasped.\n\n\"I think you're used to it now, don't you?\" I asked Jessica. \"So start fucking yourself with my cock.\"",
        "She sped up her pace a little bit, bouncing down harder on my cock with each stroke. I moved both hands to her hips and started forcing her down on my lap.\n\n\"He's really big,\" Jenny said, presumably talking to Desiree. I couldn't help it; a self-satisfied grin spread across my face.\n\n\"Fuck yes, he is,\" Jessica hissed. Her head fell forward, shrouding both our faces in her hair. I could tell she was getting closer when she started gyrating her hips in a circular motion in addition to rapidly riding my cock. I leaned forward and sucked one of her nipples into my mouth and bit down roughly.\n\n\"Aggghhhh!\" she shouted, her orgasm washing over her more quickly than even I'd expected. What followed was more incoherent babbling as I switched to the other nipple, making sure it didn't feel left out. \n\nWhen she'd finished bucking up and down on my lap, I helped her off. She couldn't even stand up, collapsing half on me and half on the wall next to us. I looked at the doorway, but the girls were gone.\n\n\"Jessica, where you at?\" That was a man's voice, and it had a southern tinge to it. A few seconds later, Houston rounded the corner and stopped short when he saw us in the bathroom. Jessica smiled when she saw him. He was naked, and a certain part of him was pointing right at Jessica.\n\n\"Having fun?\" I asked him.\n\n\"Fuck yes,\" he said. \"Brad, that group might tell you they're lesbians, but it ain't the truth.\"\n\n\"Just learned that myself,\" I said.\n\n\"They were fun, but I really wanted to get a little bit of this one,\" he said, pointing at Jessica. She'd struggled to a sort-of standing position, but still leaned against the wall. \n\n\"Just a little?\" she asked.\n\n\"As much as you'll give me,\" he grinned. \"I don't want to be interruptin' nothin' though.\"\n\n\"Nah, man,\" I replied, standing up. \"I got her started for ya, though.\"\n\n\"Much appreciated,\" he said, sliding past me to get to her. She mouthed a \"Thank you\" to me as Houston picked her up and left the bathroom. I looked at my shorts laying under the sink. Part of me wanted to lock the door, grab my phone and talk to Kelly for the rest of the night. The other brain won out in the end, aided greatly by the fact that if I had called Kelly, she'd have told me to go join the party.\n\nI wandered out into the main room. Houston and Jessica were locked in a 69 on one side of the bed, and Miranda lay in between Sam's legs on the other, frantically bobbing up and down on his dick trying to make him cum in her mouth.\n\nThe most interesting development to me, though, was on the couch. Jenny and Desiree had apparently gone back to it once Houston had come into the room. Both girls were still clothed, but Desiree was gently nibbling and sucking on Jenny's neck, drawing a vide variety of moans and giggles from the cute blonde. \n\n\"Get over here and pick up where you left off during the concert.\" I looked to see Miranda grinning at me as she stuffed Sam's cock back in her mouth. She wiggled her ass enticingly. I took one last glance at the girls on the couch, and neither of them even noticed me watching. So, I knelt on the bed behind Miranda, positioned my throbbing cock at the inviting entrance to her slick tunnel, and waited.\n\nShe looked back at me over her shoulder.\n\n\"What are you waiting for?\"\n\n\"You to show me you want this,\" I said, pointing at my cock.\n\n\"Well,\" she said, motioning to the dick in her mouth, \"I would, but I'm kinda busy.\"\n\n\"Not busy enough,\" I said, lightly swatting her ass. \"You been working on this man for like 30 minutes now, and still haven't made him cum. I'm sure he's got great stamina and all that, but seriously. You can't leave the man hanging.\"\n\nSam grinned up at me. I honestly had no idea what they'd been doing while I was in the bathroom, but I figured, she was sucking his dick when I went in, and she was sucking it when I came out. Either she was addicted to blow jobs, or he hadn't cum yet.\n\nShe started whining, and I'm sure the vibrations were helping Sam.\n\n\"Very simple, Miranda,\" I said. \"He cums, then you get fucked. Until then, you get teased.\"\n\nTo show her what I meant, I placed my cock just inside her opening, moving it gently up and down the length of her slit. I got a double handful of her ass cheeks and dug my fingers in for good measure. I could hear her moan even with her mouth full.\n\nOff to my right I heard Jessica cumming again. I smiled when I thought about how she'd been spoiled tonight.\n\n\"Come on, woman,\" I shouted, slapping Miranda's ass harder than I probably should have. She'd have woken up the whole floor if the scream could have escaped her throat. \"You and your sexy-ass friend over there were teasing me all night. Then you let me get you off during the concert, but did nothing for me. Now I'm sitting here with a raging hard-on, but because you won't do a favor for my friend here, I can't plow it into you.\"\n\n\"Doesn't seem fair, Miranda,\" Sam chimed in.\n\n\"It's not fair,\" I answered. \"I just think she really doesn't want this dick. That must be it.\"\n\n\"Must be,\" Sam stammered. One look at his face, and I could tell he was on the edge. He grabbed onto her head, and I slid another half-inch or so into her tight tunnel. I rubbed my index finger all around her asshole, too, and she groaned. That did it for Sam, who motioned to me that he was about to cum. Right before he got there, I slammed my cock all the way into Miranda with one stroke.\n\n\"Gggnnnnnfffff!\" Miranda let loose with another of those muffled screams as Sam unloaded in her mouth, and I didn't let up at all from there. I started hammering her as hard as I could, figuring she was fairly close to an orgasm of her own. \n\n\"Fuck me!\" she shouted once Sam's cock popped free of her lips. I grabbed her hips and did just that, relishing in the slap-slap-slap noises my hips made as they collided with her ass. Sam reached underneath her and started toying with her nipples, and it wasn't too long before we gave her another orgasm. With nothing in her mouth this time, I'm pretty sure everyone on this side of the hotel heard her.\n\nI heard a knock at the door, and started to worry if maybe the hotel staff had come up here to see what was going on. When I saw Sam slide out from under Miranda, I realized that was exactly what happened -- but not for any bad reason.\n\nI wasn't that concerned about that, though. I was more interested in my first orgasm of the night, and I was going to have it deep inside Miranda's pussy. I started plowing her even harder, slamming her face and upper body into the mattress with a ferocity that was even making Houston and Jessica bounce up and down on their side of the bed. Miranda's voice was one constant moan now, hitting a new crescendo each time I bottomed out.\n\n\"You gonna cum in my pussy?\" she asked me, turning her head to the side to get air. I just grunted in response. \"If you can go just another minute, I'll be able to join you,\" she said. I felt fingers around my cock, and realized she was toying with her clit. \n\nThat became my goal, holding out just one more minute before I unloaded inside of this smoking hot redhead. Sure, I had a condom on, but I couldn't even feel it. I was too turned on, too aroused by this whole entire day to even care.\n\n\"Jesus, Brad, you're getting in there deep,\" she grunted. \"Fuck me. Fuck me, fuck me, fuck me.\"\n\nShe probably said it about 20 more times, too. Before long, though, I knew there was no one way I could hold out any longer. She seemed to sense that, because she ramped up the action on her clit.\n\nA few seconds later, she was crying out into the nearest pillow with her second orgasm in the past five minutes. Right after that, I started filling the condom with shot after shot of boiling hot cum. \n\n\"Fuck, I can feel your cock jerking inside me,\" Miranda gasped. It was nice to know she could feel something, even though she couldn't feel my cum launching into her body. As soon as the last blast rang out, I collapsed onto her.\n\n\"I don't think I've ever been fucked quite like that,\" she said. \n\n\"Still have the rest of the night to try and top it,\" I replied. We took a few moments to collect ourselves. Once my orgasm was finished, I started to get a little bit down -- just like last night, I realized. I wasn't depressed or anything. It was just... sex is over, time to get back to life now. And life meant the woman trapped in my cell phone for another week and a half.\n\nExcept... the sex wasn't over yet. \n\n\"Shall we see what's going on in the other rooms?\" she asked. I nodded, and we made our way to the next room. There were three girls on this bed, all from the first group of six I met at the concert. They were tangled up in the best kind of daisy chain. The tattooed girl's ass was in the air, and her face was buried in Rainbow's pussy. Rainbow was sprawled out on her side, munching on the big-breasted blonde's box, and the blonde had her head under the tattooed girl's crotch.\n\nI was mesmerized. Miranda, not so much.\n\n\"I can tell you're into this, but girls aren't really my thing,\" she said. \"I'm going to see what's happening over there.\"\n\nI nodded, and continued to stand and watch for a minute, until the girl with the tattoos saw me.\n\n\"Like what you see?\" she asked.\n\n\"Not sure like is a strong enough word,\" I said. \n\n\"Come do something about it then,\" she said, and for the second time in 10 minutes, I had a girl wiggling her ass at me as an invitation. \n\n\"Fuck, Anna!\" Rainbow shouted, telling me the girl I was about to enter's name. \"You're gonna make me cum!\"\n\nI didn't wait for the girl to finish her orgasm. I grabbed a new condom, and no sooner had I slipped it on than I was three or four inches deep in Anna's pussy. She drew a sharp breath.\n\n\"Slow, please,\" she moaned. \"Been a long time.\"\n\nI should have realized that. I backed my pace way down, just lazily fucking her while her friends rearranged themselves into a 69, with Rainbow on top. Ten minutes later, Anna came on my cock, and the big-breasted blonde came, too. A few minutes after that, I was watching Sam eat Miranda out while Holly, the pretty hotel clerk, slammed up and down on his cock. She saw me watching and beckoned me over with a finger. I dutifully stepped up and gave her something to do with her mouth.\n\nAll the while, I was wishing I was somewhere else.\n\n*****************************\n\nSam gripped Holly's hips and really started pounding her, and the young hotel clerk started cumming instantly. Thankfully, she didn't bite down on my cock when she did, but she didn't start sucking it again when she was finished, either. I think she actually passed out for a minute. Sam had rolled onto his back and pulled Miranda down on top of his cock when Vicki approached me.\n\n\"Come here,\" she said. I was surprised, because the vibe I'd gotten from her earlier said that while I might score with some of her friends, she and I were just going to be flirting.\n\n\"Where are we going?\" I asked.\n\n\"In here,\" she said, leading back into the middle room. The Latina girl had joined the other three on the bed. \n\n\"What's going on?\" I asked.\n\n\"Ever taken a girl's virginity, Brad?\" Vicki asked. My mouth fell open, but not for too long.\n\n\"Uh, once or twice, yeah,\" I replied. \"Why?\"\n\n\"Kristen here has never been with a guy,\" she said, motioning to the girl with the huge chest and beet red face. \"We decided when we went out tonight that we were going to find someone to take care of that for her. You're the lucky guy.\"\n\nI felt like I'd been kicked in the stomach, actually. One on hand, the girl was incredibly sexy, and I didn't want to pass on a chance to play with those humungous tits. But something about the whole thing felt wrong. Incredibly, incredibly wrong.\n\nI pulled Vicki into a corner where no one else could hear us.\n\n\"How is her virginity yours to offer?\" I asked.\n\n\"She's part of the group, and it's my group,\" Vicki said. I blinked at her. \"Oh, it's not like that. We all decide what we do and who we do it with. She's been talking about losing it for a long time; at least a year. She doesn't have any male friends she wants to do it with. Her only requirement is that it happens while the whole group is here.\"\n\nShe motioned back at the group, huddled around Kristen and waiting for Vicki and I to say or do something.\n\n\"We're all here, we all had a great day and we've all had enough to drink to make it work. Why not tonight?\"\n\nI pondered that for a minute. Her reasons made sense, but they didn't change my mind.\n\n\"I can't do that,\" I said. She didn't have to ask -- she just looked the question at me. \"It's not something I can really explain. I have a girl waiting for me back home. She knows I've been getting laid on this road trip, and I fully plan on telling her everything I'm doing tonight. But this... I don't think I can do this.\"\n\n\"You have a girlfriend?\" she asked. \"And she's okay with all of this?\"\n\nI just nodded. I wasn't about to get into the details with Vicki. As it was, the situation seemed fairly absurd -- I was naked, she was naked, and we were talking about how to deflower her equally naked friend.\n\n\"What's the problem, then?\"\n\n\"The first time is supposed to be something special,\" I said.\n\n\"She isn't going to want to marry you afterward, Brad,\" Vicki laughed.\n\n\"I certainly hope not,\" I chuckled back. \"But she's going to remember it for the rest of her life. I'd be the guy who took her virginity. 'Made her a real woman,' to use a stupid ass cliche. I know there's a special place in my heart for the girl I lost mine to.\"\n\nNevermind the fact that I'd lost mine in a threesome. I did still think fondly about the girl, though.\n\n\"Anyway, I just don't think it's fair to my girl back home that I let someone else make a memory like that with me.\"\n\nVicki backed up a little and sized me up for the second time that day.\n\n\"You are an odd duck, Brad,\" she said. \"But... I think I get it. That sucks for Kristen though. She really wanted this to happen tonight.\"\n\n\"Does it have to be me?\" I asked. \n\n\"I... don't know,\" Vicki said. \"Right after we split up at the concert, we all agreed it would be you.\"\n\n\"Hold on a sec,\" I said. I walked into the other room, and a few seconds later, I came back, Houston and Jessica in tow. \"Houston, these ladies have a proposition for you.\"\n\nFrom the shit-eating grin on his face a few moments later, I could see he had no problem doing it. I might be kicking myself for it later, but it felt right.\n\nI went back into my room, where I saw Jenny and Desiree tangled up on the couch still. I didn't even look to see what they were doing -- I grabbed my shirt and shorts, put them on, and stepped into the hallway.\n\nI needed to make a phone call. \n\nKelly answered on the first ring.\n\n\"Thank God,\" I said. Hearing her voice made me feel like a drowning man who'd just barely managed to break the surface and get oxygen before it was too late.\n\n\"What, baby?\" she asked. \"What's wrong?\"\n\n\"Nothing,\" I said, half-truthfully. \"I just.. missed you.\"\n\n\"I miss you, too, but, I can tell from your voice. That's not all.\"\n\nI told her all about everyone in the rooms -- the abridged version, so as not to be standing in this hallway two weeks from now. I told her about Vicki's proposal, too, and why I turned it down.\n\n\"I know, I know,\" I said. \"You're gonna tell me I'm crazy for turning down the chance to take a girl's virginity.\"\n\n\"No,\" she said, very quietly. \"No, I'm not.\"\n\n\"Then... what?\" I asked.\n\n\"Brad... I don't know what's going on with us. I really don't. But I don't think I would have been too happy if you had agreed to it.\"\n\n\"Really?\" I asked.\n\n\"Really,\" she said. \"I know I told you anything goes. You almost fucked your cousin a couple days ago, and that turned me on. You dominated and just about fake-raped a girl the other night. I came from that six times. You're in a hotel room orgy, and in a minute I want you to go back in and take me with you. But that...\"\n\nI let her think for a minute.\n\n\"I want those special moments to be only between us.\"\n\nI was about to speak when I realized that that was exactly how I felt, too. I just couldn't put it into words like she had.\n\n\"Obviously, I don't have my virginity to offer you. I think if I was there to see it and experience it, I might have no problem with you doing it. But without me...\" she trailed off.\n\nI was trying to assimilate the things she said. I was never any good at relationships anyway, and she'd just muddied the waters even more. \n\n\"I'm sorry, Brad,\" she sputtered. \"I know there's nothing between us outside of great phone sex and a ton of possibilities, but--\"\n\n\"Stop it, Kelly,\" I said. The tone in my voice was a little harsher than I wanted, but that made it stick, apparently. \"I don't know what's going on with us, either. I'm not even sure how I can have feelings for someone I've never met, but damnit, I do, and you know what?\"\n\nI guess she thought it was rhetorical, because she didn't answer right away.\n\n\"What?\" she finally asked.\n\n\"I'm fucking thrilled about it, Kelly,\" I finished. \"I can't wait to meet you, you know that? It has nothing to do with sex, either. I'm sure it will have plenty to do with sex by the time we're finished, but I just want to see you. I want to put a face and a body and a scent and a texture with this incredible personality I've been diving deeper and deeper into over the past week.\"\n\nShe was speechless, and I couldn't leave well enough alone.\n\n\"Last night, right after I finished? I was bummed out because Maria wasn't you. Tonight? There are 10 girls in the rooms behind me, and just about any of them would fuck me silly. I'm male, yeah, so I'm not running away screaming or anything. But if you were here? I'd send every damn one of 'em into the lobby butt-ass-naked.\"\n\n\"Don't get me wrong,\" I continued. \"I'm enjoying all the things I'm doing. It's just getting harder and harder to cope with the fact that I'm not doing them with you.\"\n\n\"Brad,\" she stammered, and the tears started falling on the other end of the phone. \"You have no idea how happy I am to hear you say that.\"\n\n\"Yeah, well, I'm glad, because I was gonna say it whether you wanted to hear it or not.\"\n\n\"I want to hear it every day,\" she said, laughing now along with the tears. \"I feel the same way.\"\n\nI've got to admit right now -- I damn near said it. It was unfathomable to me that I even considered it, having known her for just a week. I'd never even met her, didn't even know what she looked like. I was unwilling to pour any thought into the validity of the statement -- I knew I'd have plenty of time for that on I-80 west bound in a couple days. Still, I just barely managed to gnaw my tongue off and not say anything.\n\n\"But you have to understand something, honey,\" she said. \"I wish like unholy hell that I was there with you, too. I wish I was every woman you've done anything with, not only on this trip, but your whole life. But I can't be there yet, and I know I'll get my chance soon enough. For now, I am really, really enjoying all the stories of what you're doing. I can place myself in the situation, and it makes me cum even harder. I don't want you to stop. If you don't want to do it for yourself, please, please keep doing it for me.\"\n\nI was stunned now. \n\n\"Well, Kelly, you drive a very hard bargain,\" I said. \"But somehow, I will find a way to make your wish a reality.\"\n\nWe both laughed. Hard. It seemed we both had something to get off our chests, and on a Friday night, half-drunk, with a hotel room full of co-eds behind me, it finally happened.\n\n\"You can start right now, you know,\" she said. \"I'm staying with you, though.\"\n\nI went back into the room. I could hear sounds coming from the other two rooms, but this one was empty except for the two girls on the couch. As I got closer, I realized Desiree was passed out, her head laying on Jenny's left thigh. The blonde girl was still wide awake, though, and was rubbing her pussy fervently. I could see Desiree's hands laying on the couch between Jenny's legs.",
        "\"She pass out trying to get you off?\" I asked. She just nodded. \"She had a lot to drink,\" I said.\n\n\"I know,\" Jenny said, lightly stroking the brunette's hair with her free hand. \"It's okay. But still...\"\n\nShe trailed off, and I knew where she was heading. \"You're still horny, though.\"\n\n\"Yeah,\" she said. \"And I was waiting on you. I learned a little something about myself tonight, playing with her, but I wanted to finish the night the right way.\"\n\nIt looked like I wasn't going to get the chance to ravage Desiree's cheerleader body, but that was ok. Jenny's body was curvier and more mature -- more my type.\n\nWhen I stepped closer, she motioned to the phone in my hand.\n\n\"I have a confession to make first,\" I said. \"I have a girlfriend.\"\n\nI heard Kelly gasp in my ear at the title, just before I realized I hadn't actually mentioned that to her yet.\n\nJenny just smiled. \"I figured.\"\n\n\"What?\" I asked, surprised. \"How so?\"\n\n\"You're way too good of a guy,\" she said. \"Too hot, too funny, too honorable, and too much fun for some woman to not have snapped you up already.\"\n\n\"She's right, you know,\" Kelly said.\n\n\"She's okay with all of this?\" Jenny asked.\n\n\"She's on the phone right now,\" I replied. Jenny's eyes went wide.\n\n\"I thought you were just talking to her outside,\" she said. \"I didn't know she was still on the line.\"\n\n\"Where's everyone else?\" Kelly asked.\n\n\"In other rooms,\" I said, before going over to lock the door joining our room with the others. \"And they're staying there.\"\n\n\"Good,\" she said. \n\n\"Jenny,\" I said, \"she's more than okay with it. Right now, she wants to be a part of it, though.\"\n\nHer ivory face was flushed a deep red, as was her chest. I gently helped her out of her dress, which was still bunched around her stomach. \n\n\"You're beautiful,\" I told her. I pulled up the camera on my phone. \"May I?\" She looked a little nervous, and I understood. \"I just want to give Kelly a visual. It'll make her cum harder. If you want, I'll delete it the minute I send it, and she'll delete it when we're done, too.\"\n\nShe nodded shyly. The way she morphed back and forth was driving me insane. She'd started as the outgoing hottie I'd first met, changed into to the bashful, unsure introvert at the afterparty, became the wild child who'd bucked against my tongue on the floor, and now stood before me as a naive woman who had no idea how gorgeous she was and was unsure about letting me snap one photo.\n\nI quickly took the picture and texted it to Kelly. \"Oh my God, Brad,\" she moaned. I managed to thumb the speaker button for the rest. \"She's one of the sexiest women I've ever seen.\"\n\nThat made Jenny blush. \"Can I see one of her?\" she asked me.\n\n\"Uh uh,\" I said, stepping toward her. \"This is about you.\"\n\n\"For the moment, anyway,\" she giggled. \"How many other women have you fucked tonight?\"\n\n\"Three,\" I admitted. \"But you were busy, remember? You were the one I wanted from the beginning, and once we're done, I'm done.\"\n\n\"Oh,\" she said. \"Well, like I said, I was waiting on you, too.\"\n\n\"Good,\" I said, wrapping a hand behind her head and pulling her in for a kiss. Our tongues battled for a few moments, and she moaned softly when I cupped her left cheek.\n\n\"Isn't he a good kisser?\" Kelly asked. Jenny didn't immediately answer, but once we broke it off, she gasped for air.\n\n\"Maybe the best ever,\" she spat out between breaths.\n\n\"Oooh,\" Kelly said. \"Don't let him get too big of a head.\"\n\n\"He's earned it,\" Jenny answered. I kissed her jawline, down her neck and across her collarbone before working my way across her shoulder and down her arm. I'd sucked two of her fingers into my mouth when Kelly piped up.\n\n\"Tell me what he's doing, Jenny,\" she moaned. A spasm shook through Jenny's body when Kelly used her name.\n\n\"Licking my fingers,\" Jenny answered. She seemed to get the hang of it, narrating my actions for Kelly. I was glad, because that meant I could concentrate on giving this girl some real pleasure.\n\n\"Now he's licking my belly button,\" she giggled. \"It kinda tickles. Oooh -- that doesn't.\"\n\n\"Your nipples?\" Kelly asked.\n\n\"Yep,\" Jenny sighed. \"How did you know?\"\n\n\"I didn't, I guess,\" Kelly answered. \"That's just how I would have done it.\"\n\nShe had magnificent breasts, a sizable C cup if not on the small side for a D. I took my time, using my hands, my tongue and my lips to worship them. I gave her nipples their due attention, but I nibbled on the underside of her breasts, too.\n\nJenny gave Kelly a magnificent narrative, both with words and special effects. Several times she was in mid-sentence and had to stop to moan or squeal when I hit a certain spot. \n\nI gently laid Jenny down on the bed and started kissing lower.\n\n\"Has he started on your pussy yet?\" Kelly asked her, as if she was in the room.\n\n\"Not just yet,\" Jenny asked. \"He already did that for me once earlier.\"\n\n\"He told me,\" Kelly replied. \"But now he can really take his time.\"\n\nAnd I did, too. I spent at least five minutes licking and biting all over her inner thighs and hips. She had just a small landing strip of hair leading to her pussy, and I bathed that with my tongue, too. All the while, her hands tried to force my head between her legs, but I fought her off until I was ready.\n\nI didn't give her any warning, either. When it was time, I sucked her clit entirely into my mouth. She let out a scream I was certain would wake up Desiree.\n\n\"Did you cum already?\" Kelly asked mirthfully.\n\n\"A little bit, I think.\" I had to answer for Jenny, because she was incapable of words. I didn't stop what I was doing though, instead moving down and licking all over her pussy lips, occasionally dipping down to her ass before thrusting it inside her. I repeated that cycle a few more times before I got a wicked idea.\n\n\"How assertive can you be?\" I asked Jenny.\n\n\"How's this?\" she asked, pushing my head forcefully back down to her pussy. I laughed and gave her a few more licks before I pulled away again.\n\n\"With her, I mean.\"\n\n\"Oh,\" Jenny gasped as I flicked her clit lightly. \"I don't know. What do you mean?\"\n\n\"Kelly,\" I said firmly. \"Are you naked?\"\n\n\"Mostly,\" she answered.\n\n\"There's either naked, or not naked. Nothing in between.\"\n\n\"Okay,\" my girlfriend murmured. After some rustling, she added, \"completely naked.\"\n\n\"Like that,\" I said to Jenny. \"Tell her what you want her to do, and she'll do it.\"\n\n\"I don't think I can,\" Jenny answered. \n\n\"I will,\" Kelly said. \"I promise. As long as Brad says it's ok.\"\n\n\"Hmm,\" Jenny answered, and I decided to up the ante.\n\n\"Jenny, I'm not going to make you cum until Kelly cums,\" I said. \"And I'm going to be busy teasing you mercilessly, so when Kelly cums is entirely up to you.\"\n\nI punctuated that by sliding my index finger an inch or two inside her dripping snatch. She inhaled sharply.\n\n\"What are you doing right now, Kelly?\" Jenny tentatively asked.\n\n\"Laying on my bed, talking on the phone,\" Kelly answered. \"What should I be doing?\"\n\n\"Rubbing yourself,\" Jenny answered. I knew that wouldn't do it.\n\n\"You're right,\" Kelly said. \"It is kind of cold in here. Maybe if I rub my arms, I'll warm up a little.\"\n\nI snickered into Jenny's pussy, wiggling my finger inside her as I licked lightly around her lips.\n\n\"Your pussy,\" Jenny said after a few seconds. \"Rub your pussy.\"\n\n\"Yes, ma'am,\" Kelly complied, and my dick went from throbbing to diamond-cutting. After the past week, Kelly was a veteran of phone sex, and I knew she would guide Jenny through it. \"What should I rub, Jenny? My lips? Inside? My clit?\"\n\n\"Your clit,\" Jenny moaned. \"Rub your clit.\"\n\nEven with Jenny's legs partially blocking my ears, I could hear Kelly moaning. I lightly spanked Jenny's clit with my fingers, earning a squeal.\n\n\"Smack your clit,\" Jenny ordered. I smiled, knowing she'd gotten the idea from me. I knew that was something Kelly liked, too.\n\n\"Did he just do that to you?\" Kelly asked rhetorically. \"Such a naughty boy.\"\n\nI pushed Jenny's knees up until they flattened her boobs, and made her hold them there for me. I rolled her ass up and off the bed slightly, and really dove in, tongue fucking her twat with long, deep strokes. There was no equivalent she could tell Kelly to do -- even as awesome as she was, I didn't think Kelly was flexible enough to lick her own pussy.\n\n\"Fingers, Kelly,\" Jenny stammered.\n\n\"I have 10 of them,\" Kelly answered. \"What do you want me to do with them?\"\n\n\"Inside you,\" Jenny said. Immediately realizing what Kelly would do, she continued, \"in your pussy. Two of them. Deep.\"\n\nThis time I took Jenny's lead, thrusting a second finger deep inside her, just as she'd told Kelly to do.\n\n\"Fuuuuck,\" Kelly groaned. \"I wish I had somebody here to lick my clit.\"\n\n\"I wish you did, too,\" Jenny said. \"I wish Brad and I were both there. We could lick you together.\"\n\n\"Oooh, I think I would enjoy that,\" Kelly answered. \"Then he and I could lick you.\"\n\n\"Then we could lick him,\" Jenny answered, and my cock got even harder.\n\n\"Oh God, that's a hot fucking image,\" Kelly replied. I knew from experience she was getting close, and I sensed that Jenny wasn't far off, either.\n\n\"I know,\" Jenny said. \"His tongue feels fucking amazing, so I could just imagine how your tongue would feel next to it.\"\n\nShe was really getting into it now, so I decided to help her. I slid one hand up her torso, and when I reached her nipple, I pinched and tugged on it as hard as I could. Jenny's eyes darted down to me, but I was smiling.\n\n\"She loves that,\" I whispered, leaving her to figure out the rest. It didn't take her long.\n\n\"Use one hand to pinch your nipples while you finger fuck yourself, Kelly,\" Jenny commanded. Ten minutes ago, I wouldn't have believed she'd be able to say that.\n\n\"Ok,\" Kelly moaned.\n\n\"Hard,\" Jenny added. \"Your boyfriend is driving me crazy, so I need you to cum for me. He's going to make me cum all over his face, but first, I want you to cum all over your fingers. Imagine Brad's cock is fucking you instead, and I'm laying on top of you, licking your clit--\"\n\nThat was it for Kelly, and I heard her signature high-pitched humming begin immediately. I let Jenny really have it too, pistoning two fingers inside her while I sucked her clit. She waited for Kelly to settle down first, but not long after, her legs tightened against my cheeks, and I held on as she started to buck against me. The earlier oral orgasm I'd given her had been quick and to the point. This one lasted a lot longer, just like the buildup to it.\n\n\"I want to hear you suck his cock.\" Kelly was somewhat recovered and was taking charge now. Jenny was only too happy to comply, pushing me onto my back and nudging my legs apart with her knees. \"I'll be talking to him, but I don't want him to have to explain what you're doing. I just want to hear it. Get sloppy.\"\n\nThis was going to be spectacular, I thought, and I was dead on. Jenny attacked my cock with a zeal I hadn't experienced since... hell, probably since Belinda had made me cum in her mouth my last night in Oklahoma. She made loud slurping noises, and exaggerated the noises her throat made when my cock bumped against it.\n\n\"Sounds like she's doing a hell of a job,\" Kelly said.\n\n\"She is,\" I answered, keeping my hand on the back of Jenny's head so she wouldn't feel compelled to pull up to answer. \"She might make me cum soon.\"\n\n\"Do you want to cum now, Brad, or do you want to cum from fucking her?\n\n\"No reason I can't do both,\" I said. It had probably been about an hour since I came inside Miranda, and as hot as Jenny was, and as mind-blowing as this whole conversation with Kelly was becoming, I had no doubt I could stay hard if she made me cum.\n\n\"Good boy,\" she said. \"Are you getting close?\"\n\n\"Mm hmm,\" I replied. \"Her mouth is so wet, and her lips are so soft, Kelly,\" I moaned.\n\n\"I hope mine are the same,\" she answered, and I heard her slap her hand over her mouth. She thought she'd just revealed that she'd never given me a blowjob like this.\n\n\"They are, Kelly,\" I answered. \"You know you're the best at this, but Jenny is very fucking talented.\"\n\n\"Thanks, baby,\" she answered, grateful that I'd covered up her little verbal slip as well as the compliment -- a compliment that was based on nothing but confidence. Jenny opted to moan her thanks, which was just fine with me.\n\n\"She's incredible,\" I continued. She'd told Jenny she didn't want me to have to tell her what she was doing, and Jenny was plenty noisy about it. Still, I figured a play-by-play would just get Kelly hotter. \"I don't think her mouth could get any hotter if she'd been drinking coffee before we started. Her lips are full and soft, and they look so fucking hot sliding up and down my cock.\"\n\n\"I bet they do,\" Kelly asked. \n\n\"Fuck, Jenny,\" I groaned when she flicked her tongue rapidly across the base of my shaft before plunging me back into her mouth.\n\n\"Does she swallow?\" Kelly purred.\n\n\"Gonna find out soon,\" I gasped. Jenny picked up the pace, and before long, I lost it. She took the first shot in her mouth, but aimed my cock at her sizable tits for the rest. With her help, I covered both nipples and a good portion of her right breast, too.\n\n\"Where did he cum?\" Kelly asked.\n\n\"All over my tits,\" Jenny said. \"And some in my mouth. I do swallow, but I wanted to feel him explode all over me.\"\n\n\"I understand that,\" Kelly said. It sounded like she was close to another orgasm on her end, too.\n\n\"Let me clean up,\" Jenny said, and started to get up. I was having none of that.\n\n\"Oh, no, you don't,\" I said. In a flash I pulled her up and dumped her on her back next to me. I grabbed a condom off the nightstand and put it on in record time. \"You wanted to feel my cum all over your tits, huh? Now you're gonna have to let it soak in.\"\n\nThere was just a touch of apprehension in her eyes to go with all the arousal I saw there, and I suddenly remembered her telling me it had been two years since anyone had gone down on her. I wondered if it had been two years since she'd done anything at all, and she confirmed it a second later.\n\n\"Go slow with me at first,\" she said, looking down at her stomach. \"Like I said, it's been a couple of years.\"\n\n\"Seriously?\" Kelly gasped into the phone. \"How does a girl like you go two years without getting fucked?\"\n\n\"By choice,\" she replied, grinning and spreading her legs wide for me. I was originally going to be rough, but instead I just dragged the head of my cock slowly up and down her slit, rubbing her clit on each trip north. \"So busy with school and work and life in general, I just ignore all the college boys.\"\n\n\"What about tonight?\" Kelly asked.\n\n\"Time to let loose, I guess,\" Jenny said. \"Never thought I would be into something like this, but I needed it.\"\n\n\"Be gentle, Brad,\" Kelly coaxed.\n\n\"He is,\" Jenny replied. I'd lined up the head of my cock with her moist, delicious opening, and I had maybe half the head pushed between her lips. Jenny and I locked eyes, and with a subtle nod from her, I pushed the first couple of inches in. She inhaled sharply but continued to smile at me.\n\n\"So fucking tight,\" I muttered.\n\n\"So fucking full,\" Jenny countered.\n\n\"So fucking hot,\" Kelly moaned.\n\n\"Prove it,\" I said. \"Cum for us.\"\n\nIt took maybe two seconds for Kelly to comply, babbling uncontrollably as another orgasm overtook her on the other side of the country. Any post-orgasm flagging my cock may have encountered was instantly cured by her voice.\n\nThe hot pussy I was a quarter of the way into certainly didn't hurt, and once Kelly started to calm down a little, I slid another inch into Jenny. She grimaced but didn't complain.\n\n\"Brad, you're just going to have to give it to her,\" Kelly said.\n\n\"I'm giving her all she can handle right now, I think,\" I replied.\n\n\"She's right,\" Jenny said. \"I can take all of it, you just need to give it to me.\"\n\n\"Don't slam it in or anything, baby,\" Kelly said. I shivered a little at the name. \"Slow and steady, but forcefully, push your cock into that tight pussy. \n\nJenny nodded again, so I started applying more pressure. Once I started, I didn't stop. It took most of a minute, but I was finally in balls deep.\n\n\"Oh my God,\" Jenny moaned, thrashing her head from side to side. \"I don't know how you can take this cock all the time. So fucking deep!\"\n\n\"Relax, hon,\" I said, ignoring the fact that Kelly had never taken me at all. \"I'm sure part of it is that it's been a while for you.\"\n\n\"Mm hmm,\" she replied. \"And the other part is that when they were handing out dicks before you were born, you made a wrong turn and ended up at the Louisville Slugger factory instead.\"\n\nLaughing seemed to help her relax a little, and all three of us had a good chuckle at her joke. I put a slightly serious look on my face and asked, \"You ready for me to start?\"\n\nShe nodded, and I rested my elbows on either side of her breasts, placing most of my weight on top of her. I withdrew until just the very tip was still lodged inside her. I waited a few moments, wanting to tease her and anticipate it. Without warning, I drove back inside her in one hard, quick stroke.\n\nHer eyes bugged out, and she screamed so loud I was sure hotel security was coming. \n\n\"Jesus, Brad!\" Kelly yelled. \"What did you do?\"\n\nJenny spasmed around my dick, and as intense as the first couple orgasms had been, they had nothing on this one. She tightened up so much that I couldn't answer Kelly, and I was finding it hard to breathe. Her legs were locked around my lower back, and her fingers were digging into my back and pressing me down into her chest. Between Miranda's teeth and Jenny's fingers, I was going to need a first-aid kit.\n\n\"She wanted it all,\" I spat out when I got the air to do so. \"She got it all.\"\n\nWe heard a knock on the door, but it was the one leading to the next room, not the main door. \n\n\"Everything ok in there?\" Houston bellowed.\n\n\"Yeah, man,\" I said.\n\n\"We're good,\" Jenny said with as much volume as she could muster. \"Sorry.\"\n\nApparently that was enough for him, because we heard nothing else.\n\n\"Your boyfriend here just gave me one of the strongest orgasms I've ever had,\" Jenny said as I slowly slid back out, leaving just the tip inside again. \"With one fucking stroke of his cock.\"\n\n\"Just one stroke, huh?\" Kelly asked. \"I thought you'd killed her for a second there, babe.\"\n\n\"I thought he had, too,\" Jenny replied. I just wore a sheepish grin.\n\n\"It really has been a while for you, huh?\" Kelly asked. \"I mean, he is talented, but I don't think he's ever made me cum after the first thrust before.\"\n\nI grinned. Technically, she wasn't lying. \n\n\"You ready to go again?\" I asked. Before she'd reminded me of her drought, I'd been planning to pound her. I was glad I hadn't done so -- with as tight as she was and how she responded to the first thrust, I actually might have killed her.\n\nStill, even though my better angels had won that round, the demons were still ahead in the match. I hadn't even bothered to keep the deep, guttural growl out of my voice when I asked.\n\n\"Uh oh,\" Kelly said. \"He's about to rape you, I think.\" I could picture her licking her lips and smiling widely as she said it. How the happy fuck did she know what I had planned?\n\n\"You know what they say about rape and the willing,\" Jenny replied.\n\n\"Fair point,\" Kelly said. \"Still, it might feel that way at first.\"\n\n\"I think he's broken the seal,\" Jenny said. \n\n\"Let's stop talking about it and find out, yeah?\" I asked, and midway through the sentence, I pulled her legs off the bed and draped them over my shoulders as I got into an awkward squatting position. Her ass and lower back were completely off the bed, and I sunk my fingers into the soft curves of her lower stomach at the same time that I slammed my cock forward, hitting rock bottom in just one push.\n\n\"FUCK!!\" Jenny shouted again. \"Jesus, you have an amazing cock.\"",
        "\"And he knows how to use it, too,\" Kelly cooed.\n\n\"Yes.. he.. does!\" I wasn't leaving her time for more than one word between each thrust. Her breathing was already labored.\n\n\"Quit talking, Kelly,\" I barked. \"The long purple vibrator, deep in your pussy. The little silver bullet, right on your clit.\"\n\nI had no idea if she owned any of those specific items, but I was guessing Kelly had a pretty prolific toy collection.\n\n\"Fuuuuuuck, Brad,\" Kelly moaned on the other end of the line. I was nowhere near cumming yet, but just that little wanton groan trimmed about five minutes off however long it was going to take.\n\n\"You like it when she does nasty things for you, don't you?\" Jenny stammered, taking about 10 seconds to get all the words out. \"I felt you get harder.\"\n\n\"She's a good little girl,\" I said. I was on fire and my arousal was raging, but I was careful not to call her any names in front of Jenny. She was okay with it between us, but I wasn't sure how she'd feel about it with an audience. \"She's good at taking orders.\"\n\nOn cue, we heard the telltale buzzing start on the phone. My thighs and hips were throbbing from the awkward angle, so I dropped Jenny's lower body back to the bed. She took the initiative this time, rolling onto all fours and wiggling her ass at me seductively.\n\n\"She's just like you, Kelly,\" I said. \"Can't wait to take it from behind.\"\n\nBefore my girlfriend could respond, I slammed my hips forward, impaling Jenny once again. I grabbed handfuls of her hips and pounded her as hard as I could for a few moments.\n\n\"Fuck, Brad!\" Jenny yelped. \"Does he always take you this way?\"\n\nKelly didn't answer with words. She turned the vibrator up and the pitch of her signature humming went up with it.\n\n\"I don't always,\" I answered for her. \"I can be gentle. Want to see?\"\n\n\"Not really,\" Jenny said. \"You have no idea how hard it is to go two years without a real dick. I have an itch that toys don't scratch.\"\n\n\"Good,\" I spat out. I lightly spanked her ass, and she moaned with each swat. I wasn't there yet, but I could tell Jenny was getting there.\n\n\"When you cum again, Jenny, make it loud,\" I told her.\n\n\"OK,\" she gasped.\n\n\"It'll make Kelly cum too,\" I explained. \"Won't it?\"\n\nA yes-sounding moan was all we got out of Kelly. A few minutes later, Jenny came again, and called both my name and Kelly's as she went over the edge. That brought Kelly off, too, and I couldn't help but think how fucking lucky I was to have two scorching hot women calling my name as they came together.\n\n\"Two more, Kelly,\" I said.\n\n\"Before what?\" was her demure reply.\n\n\"Before either of us cum again,\" I answered. Jenny looked at me over her shoulder and winked before wiggling her ass again.\n\n\"Good luck,\" she said. \"Once I get going, it's not easy to flip the switch.\"\n\n\"I'll do my best to stop you,\" I teased. \"Better work to make Kelly cum a couple more times, then, huh?\"\n\nI resumed thrusting into Jenny's tight twat, setting a more leisurely pace this time but still holding onto her hips tightly. Jenny turned her attention to Kelly. \n\n\"He must really like making you cum,\" she said. \"This is the second time he's told me to help you. You are such a lucky bitch.\"\n\n\"You have no idea,\" Kelly moaned.\n\n\"Right now he's fucking me from behind,\" Jenny said. I couldn't be sure with all the personality changes she'd been through, but I was willing to bet this was the real her. Now that she was comfortable, she was letting herself go. \"He was really letting me have it before, but now he's teasing me. Still fucking me hard, but he's not going to let me cum. So not fair.\"\n\n\"I agree,\" Kelly stammered. \"Not fair.\"\n\n\"It's your fault. He wants you to cum again before he'll let me. Twice, in fact.\"\n\n\"He's done better before.\"\n\nI smiled at how Jenny and Kelly were getting along.\n\n\"Well, it's probably tough on him, too,\" Jenny said. \"I mean, he's getting something no one else has gotten in more than two years, fucking the shit out of me... and he's probably imagining it's you instead.\"\n\nHer words did it for Kelly. She cussed her way through another orgasm, and Jenny and I listened with amusement as she gave herself a little aftershock, too.\n\n\"That last one doesn't count as another one, Kelly,\" I teased. \n\nI really wasn't imagining it was Kelly. Just having my girlfriend in the room, even if just via phone call, was enough to let me focus on what was actually happening. Otherwise, yeah, I might have been wishing she was Kelly.\n\n\"I hope not,\" Kelly said.\n\n\"I'm guessing I'll never get to play with this toy again,\" Jenny said, \"so I want to make sure I get my money's worth.\" She tossed her hair over her shoulder and looked back at me. \"Lay down and let me ride you.\"\n\nI had no objections to that. She straddled me and slowly worked my cock up into her pussy, not letting me jam it all the way in this time. Her boobs swayed back and forth and hung just inches from my face as she bent forward, and I couldn't resist capturing one nipple between my lips.\n\n\"Fuck, yeah,\" she said, working up and down on my rod at her own pace. \"Bite it. Bite it as hard I made Kelly pinch hers earlier.\"\n\nI did, and Jenny gasped. I switched to the other one and got the same reaction, so for the next few minutes, I just alternated back and forth, treating myself to a feast on her nipples while she used my cock for her own enjoyment.\n\nAfter a while Jenny sat straight up, and without her tits to keep me occupied, I just watched her. Her face was blanketed in pure bliss as she rocked up and down. Sometimes she gyrated her hips in circles, and sometimes it was just simple north-south motion, but every bit of it felt exquisite. Her pussy clenched my cock like a vise grip, as if it knew I'd just recently cum and was going to need extra stimulation.\n\nShe really was a beautiful woman. I heard Kelly moan out that she was cumming again, and I knew for the next couple days, I'd be picturing a brown-haired Jenny whenever I imagined Kelly.\n\n\"That's two,\" Kelly mewled. \"Your turns now.\"\n\nJenny didn't even answer. Her pace increased considerably, and when I moved my thumb to her clit, she exploded. She fell forward, crushing her tits against my chest as she forced her pelvis up and down on my cock again and again. I tried to keep my thumb on her clit, but once that became impossible I wrapped my arms around her waist as she rode out the orgasm.\n\n\"Guess that just leaves you, Brad,\" Kelly said.\n\n\"I'm not quite there yet,\" I said. \"Won't take much though.\"\n\nJenny glanced over at the couch.\n\n\"I could go wake up Desiree, if you want,\" she offered.\n\n\"Hell, no,\" I said, rolling her off of me and onto her side. I slid up behind her in a spoon. \"Not that I wouldn't love a chance at her, but you worked way too hard for this not to be on the receiving end of it.\"\n\n\"Definitely,\" Kelly echoed. \"I think we need to work hard to make him cum now, Jenny.\"\n\nI lifted her top leg up and my cock did the rest, bottoming out in her tight cunt quickly. It wasn't hard and rough like the other times, but it was just as deep. \n\n\"Oh, God,\" Jenny cried. \"Now he's spooning me, squeezing my tits, licking my ear and my neck. Fucking incredible.\"\n\n\"How much faster do you think he would cum if my tongue was down there between your legs, licking his cock every time he pulled back?\"\n\n\"Probably not as fast as I would,\" Jenny joked. \"Just thinking about that is making me wetter.\"\n\n\"Ohhh,\" Kelly said, taking on the role of seductress now. \"You'd like my tongue on your clit while I lick his cock, wouldn't you?\"\n\n\"Yesssss,\" Jenny hissed. \n\n\"He'd like to see that, too,\" Kelly said. \"You see, I've never done anything with a girl. Never even kissed a girl. Brad and I have been talking about it, though. Wouldn't you like to be the first?\"\n\n\"Uh huh,\" Jenny said. \"Neither had I until tonight.\"\n\nKelly laughed. \"I'll make Brad tell me all about it tomorrow.\"\n\n\"I'm sure he will,\" Jenny answered. \"That would be hot, but I think Brad would like it even better if you were laying in front of me, legs spread wide, with your hands in my long, blonde hair, forcing my face into your pussy. Wouldn't you?\"\n\nI didn't think they really needed a response from me, so they didn't get one. They were trying to make me explode, and I was very, very close.\n\n\"I know one thing that would make Brad cum harder than that image, though,\" Jenny said. \"He really, really likes it when you cum, Kelly. You think you could do that for us? For him?\"\n\n\"I think I could do that,\" Kelly said. \"But he really likes knowing the person he's with is satisfied, too.\"\n\n\"Oh, I think he knows I'm satisfied,\" Jenny laughed. \"I lost count of how many times he's made me cum tonight.\"\n\n\"He knows, but one more wouldn't hurt, right?\" Kelly half-begged. \"Just to make absolutely sure?\"\n\nIn line with Kelly's thinking, I moved my hand from Jenny's tits down to her pussy and started rubbing her clit feverishly. It was scary to me how well Kelly knew me already -- there was no doubt that if they both came together again, I would erupt.\n\nKelly was first, shouting loudly into the phone as she came all over her fingers. I was doing everything in my power to make Jenny next, but I could no longer hold out. I clamped my fingers down on her hip and with one or two final thrusts, I started unloading into the condom.\n\n\"Fuck!\" I shouted, my first contribution to the conversation in quite a while. Knowing I was cumming inside her must have pushed Jenny over the edge, because her fingers locked around my wrist as her whole body stiffened at once. She started convulsing slightly, shaking ever so subtly around my cock.\n\nI'd cum so hard that I was really hoping the condom had managed to hold it all. It took a few minutes, but I finally got the energy to pull my hips backward, removing my cock from her sticky wetness. When Jenny didn't make any noises or say anything, I realized something.\n\n\"She's sleeping,\" I whispered into the phone as I grabbed it off the pillow and pressed it to my ear. \n\n\"You wore her hot ass out, didn't you?\"\n\n\"Think so,\" I said. \"You both wore me out, too.\"\n\n\"Aww,\" she teased. It got quiet for a minute, but she spoke again. \"Brad?\"\n\n\"Yeah, babe?\"\n\n\"Can we sleep on the phone?\"\n\nA week ago I would have thought that to be a ridiculous idea.\n\n\"Absolutely, baby,\" I replied. \"You want me to find a different room where we can be alone?\"\n\n\"No,\" she said after thinking about it for a minute. \"I like Jenny. I think you should hold her while we sleep. Just imagine it's me.\"\n\n\"You're amazing, Kelly,\" I said, wrapping my arm around Jenny's torso.\n\nThey both sighed contentedly, Jenny in her sleep and Kelly into my ear. A few seconds later, Kelly's breathing got really heavy, and she stopped talking to me. I lay there for awhile, the sounds still coming from the other rooms but not really registering. I fell asleep not long after.\n\n**********************\n\n If you tried to send me feedback in the past month and I didn't answer, please accept my apologies. Hotmail has been eating my e-mails lately, I found out recently. I've changed my address to spotinthesand@gmail.com, so please try again. I answer all my feedback within a day or two.\n\nAs always, vote, comment and send feedback. It's my paycheck -- it keeps me going and makes me write faster. If you have any ideas for Brad's further escapades, please chime in. Most of the last few days are planned, but I have a gap or two that I could fill in with a great idea. \n\nAlso, if there are any non-main characters in either of my series that you'd like to see a separate story on.. maybe their backstory, or what happens after Brad rolls through their town or Tim finishes head-shrinking them... please let me know. Reader interaction is excellent and necessary."
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "brad",
        "kelly",
        "road",
        "trip",
        "orgy",
        "indiana",
        "concert",
        "jenny"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/brads-road-trip-ch-10"
}