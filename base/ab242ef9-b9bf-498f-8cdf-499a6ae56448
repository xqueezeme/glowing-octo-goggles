{
    "title": "NewU Pt. 07",
    "pages": [
        "Well... that took a lot longer than I had hoped.\n\nTo all my readers, those who have left comments on my stories, sent me emails and left messages on the new discord server, I can only thank you from the bottom of my heart for all of your messages of support. Even the impatient ones have spurred me on to get this finished. And with everything that has happened since the last chapter, I needed it.\n\nI wont lie, this one was a struggle, between health issues, personal issues and the god damned plague, I wasn't sure that this would ever get finished. But here we are... Chapter 7. For all returning readers, we pick up our story with Pete and learn a little more about what it means to be an Evo. To all new readers, none of that will make any sense whatsoever, so It might be best to start at Chapter 1.\n\nIt would be an omission of criminal proportions to say any more without first expressing my deepest thanks and utter admiration for my editors. Sophie, Ames, Freya and (a new edition who demanded I completely and justifiably rewrite the entire final scene) Red. Your grasp of the English language far exceeds my own and this work, along with all my others, have been vastly improved by your help. Thank you.\n\nAs usual, all people portrayed in this story are of legal age and consent. Any similarities between real persons or events are completely coincidental and -- frankly -- hilarious.\n\nNow on with the story -- Nova.\n\n* * * * * * * * * * *\n\nThe world was foggy, hazy. The bleary-eyed return from sleep's warm embrace was not something that I had missed in the time since my awakening, but in a massive break with recent tradition, I had fallen asleep the old-fashioned way. My sleep-addled brain didn't quite register the shifting of weight on the bed next to me, and I was halfway through the process that would have returned me to my bunker for a proper rest when my manhood was enveloped in a warm, wet set of lips.\n\nThe touch was gentle, tentative, affectionate and the soft groan that escaped my throat only spurred on the one that was trying to swallow my whole length. I managed to crack an eyelid open, the sheet-covered mound hovering around my waist started rhythmically bobbing up and down. Slow and steady strokes, measured and deliberate suction, the expert application of tongue to all the sensitive areas of my crown. This was a mouth intent on providing the most amount of pleasure it was capable of. I smiled and rested my head back into the pillow. \"Good morning, Evie,\" I said through the curl of my grin. Only a cute little giggle vibrated around my shaft before my newest lover shifted her attention back to the task before her.\n\nThere are many stories like this one. The erotic section of your local library, not to mention the scores of websites out there, are filled with them, and in each of them the hero of the story is some noble, benevolent, altruistic, larger than life character who always does the right thing and puts the needs of others ahead of his own. This is not one of those stories. At least, it hadn't been until now.\n\nIt had been a month since my departure from the hospital and although I had kept contact with my nurses, the promised night of drinks and the rendezvous with Becky had yet to happen. With so many of the nursing staff being invited to the party, a whole new shift rotation had to be devised to accommodate them all being off on the same night and it was taking some time. That month, however, had been filled with what I can only accurately describe as the abject abuse of my powers. I told myself that I needed to practice, to explore and master my new abilities, and I had practiced... A lot.\n\nI'd had more random and anonymous sex in the past few weeks than I'd had in my entire life before that combined. The methods that Charlotte had taught me of gaining access to an Evo's mind, I quickly realized, worked just as well on the average human. Instead of intricate cities and their curtain walls, there was just an avatar of that person standing in the middle of a meadow. Mute and motionless, anything I said to them in the mindscape -- as I came to call it -- was akin to direct mental control.\n\nYou will flash your breasts at the next man you see.\n\nYou will let me have every drink I order for the rest of the night for free.\n\nYou will empty your wallet and hand it all to me. \n\nYou will drag me to the bathrooms and give me the best blowjob you are capable of.\n\nOkay, I admit it, I had used the last of those examples more than I would like to think about, but the effect of this practice couldn't be denied. I may not have had the opportunity to duel with another Evo but entering the mind of a normal human had become child's play.\n\nYou are now bisexual for the rest of the evening, and you desire nothing more than to make out with that girl over there.\n\nYou are going to put your name down for karaoke. You will sing 'Don't Stop Believing' by Journey whether you know the words or not. You will be physically incapable of reaching the high notes. \n\nIt had all been so easy. Until I saw Evie.\n\nIt was just like any other night; the same bar, the same nameless faces, the same crowd of college girls ready to be bent to my every whim. Then I saw her, her eyes capturing mine in the reflection of the mirror behind the bar, and I say it that way intentionally. As soon as I saw her, every other girl in the bar ceased to exist. They drew me in like a magnet, like the gravitational pull of a star. I may have turned my entire focus onto her, but I was as incapable of walking away from her as she was from me.\n\nI sucked in a deep breath, Evie's tongue working its magic on the vee of my frenulum pulling my mind back to the moment. I flicked the sheets off her head to gaze down at her, her eyes sparkling mischievously back to mine before she pulled them back over her again with another giggle. My replying chuckle was strangled in my throat by another long moan as she took my entire length into her throat.\n\nIt wasn't her face that had drawn me in, although she was astoundingly beautiful. It wasn't the memories of her kind words or smiling face over the past two years; although, there were plenty of them. It was her mind.\n\nLike every other human mind that I had seen, her avatar had been alone in the field, just as I had expected. But unlike theirs, hers was neither mute nor motionless. Hunched over a small campfire and warming her hands, she had immediately looked up to greet me as I approached. A smile curled at her thin, but friendly lips as her eyes took me in. But this was more than an appraisal of my vastly altered outward appearance. It was as if she was looking into my very soul, and in a moment that I couldn't fully explain, I felt an overwhelming urge to gain her approval.\n\nIt was hard to describe, much like the rest of the night. It wasn't hard to win her favor; she already seemed to be harboring a certain level of affection towards me from the time she had known me before the accident, even if the immediate target of her amorous intent had been Jimmy. I had no idea why but I wanted to be a better man for her. The internal monologue from her that had been so clear with everyone else was like trying to listen to a conversation from underwater. It was muffled and garbled, I could only make out parts of it with intense concentration and direct physical contact. I had spent a lot longer than I cared to admit trying to get her to lick the rim on my glass -- yes, I know it was juvenile, but I had cut my mind-controlling teeth on a lot stranger commands - my frustration at her resistance building the more I pushed, but I simply couldn't get her to comply.\n\nI am the kind of guy who is very much in favor of calling a spade a spade, so you will understand that all notion of Evie being simply another experiment went out of the window very early in the night. I could have manipulated my way into the panties of a hundred other girls in the bar. But Evie was special, her mind was unique, and her eyes captured me in a way that no others, before or since, ever had. I felt myself falling for this angel long before I brought myself to admit it. Then I started singing to her. Even now, after all these years, I still feel the heat burning in my cheeks and inwardly cringe when I think about how I butchered Elvis Presley to a girl I had known properly for less than an hour.\n\nBut the more her mind resisted, the more I wanted her.\n\nEventually, I had given up on the brute force approach that had worked so well with the other humans and had simply asked her avatar if I could join her by the fire. With an adorable smile and a simple nod, she had moved over on the log that she had perched herself on to make room. As soon as I sat down, her hand curled itself around mine and I was hers.\n\nIt was another part of the night that was difficult to describe, let alone explain. It was as if her acceptance of me around her campfire was a direct route to her mind, both in terms of her feelings towards me and mine to her. The only thing that I could compare it to was the kiss that I had shared with Charlotte outside the walls of my city, complete and undiluted trust, and affection. I fell for her in an instant, and she fell just as hard.\n\nLove is an impossible emotion to describe at the best of times. I felt no small amount of it towards Becky, a different, albeit no less substantial version of it towards Charlotte after our kiss, and now the same could be said for Evie. I had made a point of not thinking too much about it for the rest of the night, but it was something that Jeeves and I would have to discuss in great detail at some point in the near future. But as soon as I wrapped my fingers around hers and accepted her into my heart -- and my place in hers -- her mind opened to me, just as Charlotte's had.\n\nThe monologue became crystal clear, not coming from some disembodied voice as they did with other humans, but directly from the lips of her avatar. I was given a running commentary as each touch, each gesture, each word, and each kiss drew her inextricably closer to me. By the time we had made it to my apartment, she was so overwhelmed by the emotion of it all that I thought I might have broken her. Yet, that single tear, wiped away by another almost instinctive gesture, was the proverbial straw that broke the camel's back. It was at that point that she dropped the last of her resistance. From that point onwards, there was little question in her mind where the night was going or how she felt about me.\n\nI may have had a slightly better idea of what was going on than she did, but not even I could adequately explain the depth of emotion that we suddenly felt for one another. I had mentally influenced or outright manipulated countless nameless girls over the past few weeks, dozens of them, yet not a single one of them had left a fraction of the impression on me as Evie had. I couldn't even begin to expound upon the differences between her avatar and theirs.\n\nThe lack of a city discounted her being an Evo, the lack of an Aura meant she was not an inquisitor, even if I did have trouble reading her thoughts to start with. There was clearly more to her than the average human, but where she fit in my admittedly limited understanding of this new species hierarchy was beyond me. Maybe that's what drew me to her, maybe it was that feeling that I felt from the moment our eyes met that, had my walls not been up, she would have been as capable of reading me as I was of her. Despite my ability to hear her thoughts, I could not plunder the depths of her mind like I could with the others. I couldn't access her memories or get her to divulge secrets to me, if she wasn't thinking about them at that precise moment, it was beyond my reach. There was no other way to describe it; she fascinated me.\n\nAnother hissed breath and another guttural groan were pulled from my throat as Evie picked up the pace and once again yanked my thoughts back to the present. Increasing her suction and working some voodoo magic with her tongue, she sucked my entire length back into her throat, withdrew to the tip, and then repeated. Over and over again she inhaled the whole of me, the throat muscles and tongue both working in tandem to fulfill one of her more memorable internal thoughts from the previous night.\n\nI will make him beg for me tomorrow.\n\nI sucked in another whimpered breath as Evie held her rhythm, her lips, tongue, throat, and the relentless suction was edging me closer much faster than I was used to. Of course, it was well within my powers to hold off my orgasm indefinitely; the internal editing station had seen to that, but through the tangled maze of her thoughts came one overriding desire. She wanted me to cum. No parlor tricks, no build-up, no input from me whatsoever, she wanted the simple satisfaction that she alone had brought me to climax. Who was I to refuse such a siren?\n\nI flicked the sheet off her head, her eyes coming up to meet mine as our gazes burned into each other. The sparkle of mischief had gone from hers, replaced by a pang of hunger that spoke volumes. The look on my face was no less obvious. I started to roll my hips into her mouth, matching the pace of her bobs, pressing deeper into her talented throat each time she sank down and relaxing my hips as she pulled away. One of her hands came up between my legs to cradle my heavy balls; this wasn't the desperate, pornographic fondling I had received so many times over the past month. This was gentle; an affectionate caress designed to bring pleasure, not to hurry along my release. The involuntary, strangled moan in my throat told both of us that it was having the desired effect.\n\nMy neck was arguing with itself, torn between the desire to hold my head up so that my eyes could watch Evie work and the almost overwhelming urge to let it loll back into the pillow. My eyes were being forced to stay open as her throat contracted, swallowing the copious amounts of precum leaking from my tip and sucking in deep, labored breaths each time my crown was pulled out of her throat. Her eyes remained locked on mine.\n\n\"Jesus... Evie.\" I panted as the cum-ladened balls beneath her featherlight fingers started to pull up into my body. The creases of her eyes stretched as her full mouth smiled around my length. \"I'm close.\" She arched a single eyebrow; we both knew what she wanted to hear as she held me right on the very edge. \"... please! ...\"\n\nThe final begging plea was all she needed, despite my mind vowing playful revenge. Her fingers squeezed a little harder, milking the cum from my balls like over-ripened fruit. She pressed herself all the way forward, my balls and her fingers resting against her chin as her nose buried itself into my pubis, the suction increased, her tongue swirled and pirouetted around my shaft, rubbing against every millimeter of skin it could find and she swallowed. Again and again, her throat muscles squeezed around my crown as my manhood started to swell between her already stretched lips.\n\nWith a final whimpered groan and another revenant call of her name, I let go. My throbbing cock started to pulse, twitching as my orgasm raced up the length and exploded into her mouth. The first blast was almost explosive, firing straight into her throat before she pulled back, resting the head on her tongue and allowing the rest of my climax to splash against the roof of her incredible mouth before pooling on her tongue. My legs were trembling, my whole body was almost vibrating in orgasmic pleasure, my ragged, panting breaths were the only sound in the room as I looked down at her in wonder.\n\nEvie swallowed. There was no dramatics, there was no desire to show off the load she had coaxed from me, nor was there a need to over-emphasize what she had done with it. She simply swallowed, her eyes never leaving mine for a second. \"Wow,\" I gulped. \"Just... wow.\"\n\nShe popped my manhood from her lips, her eyes briefly flicking down to it before pressing her lips affectionately against the tip and smiling up at me. \"Good morning to you, too,\" she said with a wink.\n\nShe shuffled up the bed, finally resting her head on my shoulder, sighing contentedly as I turned my head to press my lips into her forehead. My mind almost instinctively wandered to hers, her avatar leaning affectionately up against me as I sat next to her on her log. At first, the silence confused me; expecting to hear some form of internal monologue, it took me a few minutes to realize that it wasn't a difficulty in reading her that accounted for the silence, but an overriding sense of contentment. She was basking in the glow, enjoying it, and there was nothing in the world that needed to be thought about instead of living in this moment. A small part of me fell in love with her all over again at the realization. Not even Becky had been this happy just to be with me. No sex, no conversation, no motive, no desires--just simple happiness. I seriously doubted that anyone else in my life had ever been this content to just lay with me.\n\nThe stillness of the moment was interrupted a few minutes later when my front door swung open and Jimmy walked in, followed closely by a grinning Lori. There was a small squeak next to me as Evie pulled the sheet over her head to hide from the sudden intrusion. I arched an eyebrow as my eyes met Jimmy's. \"I am gonna regret giving you a key, aren't I?\"\n\nJimmy smirked and sat down on one of the bar stools next to the breakfast bar in the kitchen area. \"Hey, blame her,\" he nodded at Lori who only giggled in reply.\n\n\"Lori!\" Evie scolded with a sheepish grin of her own as she uncovered her head again and glared at her friend. \"Why? Just... why?\"\n\n\"It's about time that I get to be the disapproving friend.\" Lori shrugged, still laughing.\n\nEvie turned to look at me at the same time as I turned to look at her, our eyes meeting for only a moment. Her thoughts told me what she was thinking: aside from the unexpected intrusion, she had no regrets about our night together \"Are you embarrassed?\" she asked me playfully.\n\n\"Nope.\"\n\n\"Good, me neither. Now, if you don't mind...\" she eyeballed both of our new guests, lifted her arm and twirled her finger around, gesturing for them to turn their backs to us. Jimmy chuckled and spun around in his seat. \"You too!\" She scolded Lori again, drawing another giggle as Lori turned her back to us.\n\nShe leaned out of the bed, my eyes roaming the bare skin of her back as she reached out for my shirt which was still sitting in the place it had fallen the night before. She stepped out of bed, my eyes taking in her naked figure as she pulled the shirt on. I hadn't paid a huge amount of attention to it the previous night, but her body was magnificent, even from the back. Her shoulders narrowed down to a delicate waist before flaring invitingly out to her hips, and her ass was a sight to behold. She turned to look at me over her shoulder, flashing a little wink as she noticed where I was looking and wiggling her ass playfully before covering it up with the garment. I smiled widely in response. \"I may need to borrow a toothbrush.\" She said in as calm a voice as she could muster.\n\nI nodded to the door to the left of the bed, the only other one in the room. \"Help yourself. Do you want me to bring your clothes in?\"\n\n\"This one's a keeper!\" Lori called from across the room, still laughing to herself.\n\n\"Shush you!\" Evie shouted back, a smile pulling at her lips before thanking me and heading into the bathroom. I swung my legs out of bed, retrieving a pair of loose sweatpants from the chest of drawers next to it, and was pulling them on when Lori turned around.\n\n\"Yup, definitely a keeper!\" She called out, her widened eyes fixed on my groin before I had the chance to turn around and make myself presentable.",
        "\"I knew you'd look!\" Evie laughed from behind the door.\n\n\"No wonder you and him get on so well.\" I laughed, nodding towards Jimmy and tying the drawstring before collecting Evie's clothes and passing them around the door. The lyrical, almost musical sound of her thanking me echoed out of the bathroom just before being replaced with the sound of the shower being turned on.\n\nI arched an eyebrow at Jimmy as he turned back to face me and he knew what I was thinking. \"I think he's pissed 'cos he can't join her in there,\" he whispered comically to Lori. She only laughed again.\n\n\"I think I'm gonna have to invest in a deadbolt,\" I said with a wry grin as I walked over to the kitchen, flipping the switch on the Keurig and pulling a bottle of Dr. P from the fridge. \"Keep out unwanted visitors.\"\n\n\"Might be a good idea. Wait, you're drinking coffee?\"\n\n\"Not for me,\" I answered as the machine hissed and hummed to life. I poured a large glass for myself before putting the Dr. P back into the fridge. \"You want one?\" I asked, looking up at Lori.\n\n\"Oh, no thank you. I already drank this morning.\" She winked at Jimmy who almost choked on his own tongue. I didn't need to be able to read minds to know what they were talking about. \"So,\" she said, drawing out the syllable as she leaned over the kitchen counter, her dress from the night before doing nothing to hide her cleavage as she looked at me. \"Have a good night, last night?\"\n\n\"I did.\" I smiled back, making a point of maintaining eye contact as Jimmy did the exact opposite.\n\n\"Care to share the details?\"\n\n\"Nope,\" I said with a wink.\n\n\"Aw, come on,\" she teased. \"You know she's gonna give them to me anyway.\"\n\n\"No, I won't,\" Evie called out as the door to the bathroom opened and she stepped back into the room. She looked dazzling with her damp hair tied in a loose ponytail and cast over one shoulder, still wearing my shirt over her top from the night before. I had almost forgotten how good she looked in those jeans, but there was something indescribably sexy about the way she looked in my shirt. She smiled and blushed a little as she noticed me looking before turning her attention back to Lori.\n\n\"Spoil sport.\" Lori playfully pouted. \"What if I told you what we got up to last night?\"\n\nJimmy choked on his tongue again.\n\n\"No, thanks,\" Evie and I said in unison as she stepped off the raised part of the room which contained my bed and into the kitchen area, kissing me on the cheek as I handed her a cup of steaming coffee and not questioning for a second how I knew how she liked it.\n\nEven Jimmy noticed the smile on my face as he tried to remember how to breathe.\n\nLori huffed and checked the time on her phone. \"Oh, we've got to be going soon.\"\n\n\"Have we?\" Evie asked, looking confused.\n\n\"Yeah, dress shopping, remember?\"\n\n\"Err... No. What dress?\" Evie was squinting now, eyeing Lori from over her coffee cup.\n\n\"The dress... for the thing?\"\n\n\"What thing?!? What are you talking about?\"\n\nA simple perusal of Lori's thoughts told me exactly what she meant. There was no dress, and there was no 'thing,' as if anyone needed mind-reading powers to tell that. Lori genuinely wanted to grill her friend for the details, not necessarily the sordid, blow-by-blow account of our time together, but all she knew for sure was that Evie had spent the night. She was excited and happy for her friend. Apparently, Jimmy had spent a good portion of the previous evening telling Lori how much of an outstanding guy I was, so neither of them was entirely sure if we had done more than just sleep.\n\nIt would appear that Jimmy's vow of celibacy hadn't survived the night with Lori either, and I had to force myself to tune out of her mind as pictures of her own escapades began a slide show behind her eyes. Contrary to 'looking for trouble,' as they had put it, they were up the stairs and into Jimmy's apartment less than five minutes after we were. I managed to tune out at the point where Lori had shredded Jimmy's shirt in her long-awaited conquest of my friend. As far as I could tell, the offending garment was still in pieces on his floor.\n\nI did a quick mental sweep of the room. Lori was joyous; absolutely delighted that she had finally scored with Jimmy, but also inordinately pleased that Evie had come out of her shell a bit, and with an apparently decent guy, no less. Evie was in an almost euphoric state of mind. She thought she should be feeling awkward as she had done in every other one of her previous relationships after the first night together, and more so at the arrival of our guests. But the only thing that was even remotely concerning her about the whole situation was how utterly content she felt. She felt like she belonged.\n\nJimmy was just plain happy. Jimmy had gotten laid. Jimmy was always happy when he got laid.\n\nI chuckled as the back and forth between the two ladies continued. By now, Evie had caught on but was still making Lori work for it. The slightest hint of a smile tugged at the corner of her lips.\n\n\"Evie, how could you forget? I've been talking about this... err... wedding for ages.\"\n\n\"Wedding? This is the first I'm hearing about it. Who is getting married?\"\n\n\"My... um... my cousin.\"\n\n\"Oh, Jonny?\" Evie asked, still trying to hide her smirk. \"I thought he was already married.\"\n\n\"No, Gwen.\"\n\n\"Isn't Gwen like, fifteen years old?\"\n\n\"Shut up, we're going dress shopping.\" Lori had given up on maintaining the lie. Evie rolled her eyes and finally let her smile show as she looked towards me. \"Oh, I hate you.\" Lori had finally caught on and poked her tongue out as the rest of us burst into laughter.\n\nEvie put down her finished cup of coffee and stepped towards me. \"Well, apparently, I'm going dress shopping,\" she laughed and leaned up to kiss my cheek again. A small squeak escaped her mouth as I turned my head and pressed my lips against hers, surprising her.\n\n\"Alright, you two. Get a room.\" Jimmy chuckled.\n\n\"You're in my room.\" I quipped back before turning my attention back to Evie. She had picked up my phone and was tapping the display, waiting a couple of seconds before her phone dinged and then repeated the procedure on her own.\n\n\"There, numbers exchanged,\" she said with a smile. \"I'll text you later in the week?\" Her smile faltered a little as her confidence left her for a moment. As much as she knew how she felt, she was suddenly worried that she had overstepped.\n\n\"I'm looking forward to it,\" I smiled back before kissing her again. The two ladies said their goodbyes, Lori and Jimmy sharing a chaste kiss before they headed out the door. With one look over her shoulder at me and another happy smile, Evie followed Lori out of the apartment.\n\nJimmy turned and looked at me. \"Should I even bother to ask?\" he smirked.\n\n\"Nope,\" I smiled back and made my way over to my desk.\n\n\"Thought not.\" He laughed before crossing the room, dropping himself onto the couch, and loading up the Xbox as I went back to work on my college project.\n\n* * * * * * * * * *\n\nA games engine, for those not in the know, is a difficult concept to explain. Imagine, for a moment, that you are trying to build a house. You don't just walk up at an empty plot and start building. There are zoning laws and planning permission to take into account, the availability of power and water supplies, the cost of materials, tools, and equipment, architect and engineering plans, and even the laws of physics and the local weather come into play. Then there are the tools--where you get them from, knowing how to use them, which ones are needed, and who is going to operate them. When you build a house, a hell of a lot of work has already happened before the first brick is ever laid.\n\nEssentially, this groundwork -- for lack of a better description -- is what a game engine is: it is a platform on which a game developer can build their game. It determines the level of graphics that can be used in the game, the number and complexity of the assets within it, the physics algorithms that will determine how each of them will interact, and the coding structure that will allow the programmers to develop their games.\n\nLoad up any game, any one at all, anything from Minecraft to the newest Grand Theft Auto title, and what you are looking at are the assets -- the blocks, the people, the cars, the buildings, the guns, the everything -- interacting with each other via the physics engine and rendered through the graphics engine in a way that the programmer wants them to so that you get a playable game.\n\nIt is the architecture behind any game. Maybe that would be a better way of putting it. But however you wanted to describe it, that is what I was trying to build. The problem with game engines is that very few of them are truly unique. Almost all of them are improvements on previous iterations and even the new ones that had been built from the ground up still heavily borrowed their construction from older generations. It was very much a case of 'this part works, so we will keep that, but we can improve this other part and call it new.' The one area in which these engines could be distinguished from their predecessors was in the field of artificial intelligence.\n\nNow, I know what you're thinking: we aren't talking about some science fiction Skynet type of AI here, just a generic -- albeit elaborate -- system of \"if this happens, then do that\" to the point where the computer is able to manage the game assets without the programmer having to account for every single variable in a world of increasingly complex games. The final area of improvement was size. The better the engine, the bigger the game that could be fitted onto it. That is why even open-world games like Grand Theft Auto, or the Fallout series had to have border. The maps couldn't go on forever.\n\nBut what if they could? Sports games took up a large chunk of the gaming market, but there are only so many football fields in existence. It was the ever-increasing number of 'sandbox' games and first-person shooters that dominated the market. What if the next Modern Warfare game had the ability to generate huge, randomized maps, each one different from the last? What if the next GTA spanned not just a single intricate city, but an entire country? What if the newest addition to the Fallout or Skyrim franchises weren't restricted to a single, albeit large, map, but instead spanned an entire planet? And what if the game's AI was capable of populating those areas with enough visual detail and randomly generated tasks and quests -- without a programmer's input -- to keep them interesting and playable? That is what I was aiming for.\n\nI'm not going to sugarcoat it, I have said many times throughout this story that I was a shy and isolated child, mainly thanks to my parents, but I had tuned out my own bleak existence by delving into the world of video games. I had mastered every single one in my possession. I had built soaring cities whose residents lived in perpetual bliss. I had led grand armies on historic campaigns. I had battled demons, monsters, and zombie hordes and lived to tell the tale. From the seclusion of my bedroom, I had dominated galaxies and conquered worlds.\n\nBut as much as I loved them, as much as I had enjoyed every single game, each one had eventually ended. It didn't matter if I deleted my progress and started again or how complex the story's programming was, there was always the same plot, the same strategies, and there was always the same endpoint. Eventually, I would get bored and move onto the next pastime, that game being relegated to a shelf from whence it would rarely escape.\n\nI was aiming to build something endless, or as close to endless as could be identified by a single player. There was only one game out at the time that came anywhere close to what I was imagining, and that was No Man's Sky. It was revolutionary in that it had randomly generated worlds, trillions of them. So many that no single player, not even a huge group of players, could ever hope to visit them all. In fact, it was so large that it was unlikely that every player combined could still visit every world. Yet, it was still limited, these worlds only had a certain number of variables to differentiate between them and what you did when you got there was restricted because most of the game engine was dedicated to its admittedly impressive size, rather than the functionality of the game. You could go to a new planet, walk around for a bit, maybe fight some local wildlife, build some shit, and that was about it. After the first thirty planets or so, it became quite repetitive.\n\nIt was playing this game that had first given me the idea. As I took off from my elaborately constructed base, flew out of the atmosphere, docked with the space station that was exactly the same in every system, sold my mined minerals for credits -- remembering that I had nothing left to spend them on - and hopped back into my ship to repeat the process for the umpteenth time, a thought occurred to me. What if each one of these planets was alive? What if every single one of them had the intricate detail of Grand Theft Auto, the backstory and questline of Fallout, and the cultural depth of Skyrim? What if each of them was a living, breathing, distinctive planet where people could be met, missions could be found and completed, and where whole story arcs could be discovered, lived through and completed before moving onto the next world instead of moving onto the next game?\n\n\"Isn't the whole thing a bit... much?\" Jimmy asked as another green mutant thing fell to pieces in some overly dramatic cinematic mini-cut scene as he battled through Fallout 4. \"I mean, look at this game: hours of fun.\" He grinned maniacally as he dispatched another irradiated monstrosity.\n\nI spun around in my office chair to face him. Jimmy had said very little about the previous night since the girls had left an hour or so ago. He hadn't mentioned Evie at all, nor Lori, nor anything else that would have seemed completely out of character for me before the accident. He had evidently gotten used to my new playboy lifestyle better than I had. He had taken to regularly walking the few feet from his apartment to mine to play games simply because I had the nicer TV, and it would appear that this was what prompted his visit today, although the timing of it was all Lori. I didn't mind; in fact, I enjoyed his company, but with the third year of our course already a few weeks in, I was getting more and more concerned that his pep-talk from Professor Jacobs had gone to his head. As far as I could tell, he hadn't even looked at his final project, let alone done any work towards it. But still, his question was a valid one.\n\n\"All right, Fallout 4...\" I started in reply. \"It's a good game, there is no arguing about that. You've got the main quest which can only really be done in one or two ways up until a certain point, which you have to do, then it branches off into another point you have to do, then you can finish the game in three or four different ways...\"\n\n\"Don't forget the side quests,\" He interrupted.\n\n\"And the side quests,\" I conceded with a roll of my eyes and a shake of my head. \"But once you have finished the main quest in every different way, found and finished every side mission, found all the cool shit they have hidden in the map, built the best base you can, and completed all the DLC... then what?\"\n\n\"What do you mean?\"\n\n\"What do you do next? You can't buy another game, the map and the enemies can't really be changed, there is no real progress after the end of the story... So what do you do?\"\n\n\"I dunno,\" he said with a shrug. \"Start again, maybe?\"\n\n\"And how many times could you do that before you got tired of the game completely?\"\n\nJimmy frowned for a second as he considered the question. With his mind occupied elsewhere, he failed to take cover, his character taking a round to the head, which in turn, unceremoniously blew up. \"Fuck!\" He spat, throwing the controller down onto the couch next to him. \"All right, I see your point. Maybe four or five times before I'd get bored of it.\"\n\n\"Okay, so what if, once you have finished in Boston, where the game is set, you take a walk over to Chicago or maybe down to New York. There are things to see and do on the way, maybe even whole story lines before you even get there. And once you've finished there, you decide to head down to Phili or keep heading west? What if, after seeing a dozen different cities, you decide to go back to Boston and the house you built is still there, what if there is a whole new story waiting for you that is based around the decisions you made the first time you were there? What if the faction you sided with and the decisions you made led to a real difference to the rest of the game world? What if these cities and the country around them are laid out so realistically, that you could actually go and find your real house in the game?\"\n\n\"Dude, we're in the UK, I don't think Trans-Atlantic flights are still running in a post-apocalyptic reality.\" He shrugged again. I arched an eyebrow at him. \"All right, yes, that does sound pretty cool. But c'mon, there are whole departments of eggheads with huge budgets working on these kinds of things in some massive software companies. Isn't this a bit much for you to be taking on for your final project?\"\n\n\"Probably,\" I replied with a nonchalant shrug of my own and turned back to the computer.\n\nJimmy could only blink a few times before picking up the controller and resuming his quest from the last checkpoint. \"Well, as long as you've thought about it.\"\n\nIt says a lot of my arrogance and sense of invincibility in those days to think that if Jimmy had been paying a little bit more attention, he would have seen lines of entirely self-invented code sprawling across my screen as if by magic. One trick I had learned through my many conquests over the past few weeks was to be able to look like I was doing something in the real world while being busy in either my bunker or in the mindscape, but even so, the typing of my fingers on the keyboard in no way correlated to the lines of code that were flying across the screen.\n\nIn my bunker, Jeeves and I were busy. My abilities and the self-editing aspect of my bunker had given me more than just a comprehensive understanding of computer game development. It had allowed me to understand the ways that a computer's software works on a fundamental level. Specifically, it allowed me to understand what a computer was capable of and it came as something of a surprise to me to find that modern computer hardware is grossly underutilized. We have all heard the rumor that humans only use 10 percent of their brain's capacity. And, apparently, the same could be said for computers. The way that coding systems were being used was unbelievably inefficient. and by writing a totally new coding language that streamlined the way that software and hardware interacted, I could speed up the process exponentially. More speed meant better performance and what I was creating was the equivalent of jet engine power in a propeller-powered world. It wasn't just faster; it was a completely new way of doing it.\n\n\"Have you given any thought to your project yet?\" I asked without looking up. \"Time is a-ticking.\"\n\n\"Mine is already almost finished.\" He answered with a smug grin as he wandered the electronic wasteland on the TV.\n\nEven I was incapable of processing that nugget of information and working at the same time, so I turned around to face him with a look of utter astonishment on my face. \"You're gonna have to run that one by me again.\" I said after a few blinks of my own.\n\nJimmy remembered to pause the game this time before turning back to face me, his smirk remaining firmly fixed to his face. \"It's simple, I take the virtual reality interfaces for games like Modern Warfare, alter the code a little bit to make them more realistic... ammo count, health bars, that kind of thing, and then write up an essay on how this could replace training for the military or help with post combat therapies. Aside from writing up the theory, most of the work has already been done.\" he said with a triumphant look.",
        "\"O...kay...\" I said with a squint. \"I'm almost certain that this has already been thought of.\"\n\n\"Hey, nobody ever said anything about the idea needing to be original, just that it had to be a unique contribution to the world of game development,\" he answered with a shrug.\n\n\"And which part of yours is unique?\"\n\n\"The theory, obviously.\" He looked genuinely confused by the fact that he had to point this out. \"I have read all the other proposals for this idea and none of them have the Jimmy take on it. They lack both my prowess on Modern Warfare and my grasp of the applications of virtual reality.\"\n\n\"Grasp on virtual reality?\" I scoffed, swallowing down a cough of surprise. \"How did you get such a great grasp of VR?\"\n\n\"Porn.\"\n\n\"Ah.\" There were a lot of follow up questions bouncing around my head, but none that I felt an immediate urge to vocalize. \"Well, as long as you've thought about it.\"\n\nThat is how things stayed for the next six hours, Jimmy was battling his way from one mission to the next and thoroughly enjoying the game that my work would one day render obsolete. Meanwhile, I was well and truly in the zone. Those six real-world hours translated into well over a week in my bunker where I was doing the work, the code coming on screen as my mind interfaced with the computer in front of me as fast as the processor would allow it. My fingers were just randomly moving over the keyboard, but Jeeves had kindly pointed out a skill that allowed the mind to send information directly to the machine. He called it the MMI, the man-machine interface, and it would grow to become one of my more useful skills as my understanding of my powers grew. By the end of those long hours, the basics of the new coding language had not only been designed, but had been implemented onto my PC. The difference in response times was incredible.\n\nA computer is basically a series of electronic signals, and if you could slow down time enough to see the individual processes -- as I could -- you could measure how fast it was by timing the delay between the input and the output. Think of typing, something that most children are familiar with. Your finger pushes a button on the keyboard that sends a signal to the corresponding slot on the motherboard which then sends a signal to the CPU -- the microchip. That chip translates that input, interfaces with the word processing software via the computer's operating system, which in turn, sends a signal to the graphics card. The end result being that it sends the signal to the monitor to display the corresponding symbol on the screen--all of that just happens very quickly.\n\nScale that up to the actual functionality of the computer as a whole and you are left with an idea of how computer speed works, albeit a very basic one. The computer before me was pretty advanced already, any computer tasked with designing complex games needed to be. But with the new coding language implemented throughout its system, it was now running at speeds comparable to a low-grade super-computer. It was more than capable of going even faster, but although the operating system now ran on my new code, the applications it was running weren't. This lag in translation was slowing it down considerably.\n\nIt was amazing what could be achieved with a few hundred hours of work when your knowledge and comprehension of a subject was being augmented by the self-editing station and the time-dilation attributes of my bunker. But with the computer now capable of handling the workload, I was about ready to start working on the actual game's engine itself. But first it was time for a break. My mind was capable of working at this level almost indefinitely but being hunched over a keyboard for that long was playing hell with my back.\n\nI sat myself up straight and rolled my neck, feeling the satisfying pops as the tension in my spine released itself before getting up and heading to the kitchen. Working like this required energy, and although it was possible to get a few hours of bunker sleep in a few short real-world minutes, food seemed to be the more logical option. Besides, I hadn't eaten anything since the day before and my stomach was starting to growl in protest. I still hadn't quite gotten the hang of my body's new nutritional requirements. Although it would seem that I was capable of going for long periods of time without food or rest, my body would rather I didn't.\n\nI was halfway through making myself a simple sandwich when a strange feeling washed over me. Jimmy's head jerked up, a strange look on his face as he stared blankly at a small point on the living room wall for a few seconds. He stood up, letting the Xbox controller fall from his hands and onto the couch before turning towards the door. \"I have to go,\" he announced in a vacant, monotone voice and strode towards the exit.\n\n\"Huh?\" I blinked at him as he pulled the door open. \"You okay, dude?\"\n\n\"Yes. Fine.\" He answered simply, then walked out of the apartment, leaving the door open behind him. I was about to jump into his mind to see what was going on when another presence washed over me, a warmly familiar one.\n\n\"Jesus.\" Charlotte beamed as she strode into my apartment and closed the door behind her, \"I thought he would never leave. I've been sitting in my car for an hour!\"\n\n\"Did you just...\" my frowning gaze flicked from Jimmy's vacant spot on the couch and to the door.\n\n\"Yup.\" She nodded with a wry grin. \"Impressive, right? Although controlling someone like that gives me one hell of a headache.\"\n\n\"How did you...\"\n\nShe was obviously expecting the question, either that or she was somehow already in my mind without me knowing it. \"Oh, it's easy when you know how.\" She waved her hand dismissively. \"Young Jimmy has an almost irresistible urge to clean his stove... immediately.\"\n\n\"I'm not sure he would appreciate that,\" I said with a grin of my own.\n\n\"I'm sure he'll live.\" She quipped back; her look of mirth still splayed across her features. \"And judging from his memories, it could really use a good cleaning.\"\n\nI shook my head with a small chuckle. Jimmy's head would explode if he had even the slightest notion of what had just happened, but even I had to concede, it was inconceivable that he would piece it together on his own. \"So, what brings you to my humble abode?\" I asked as Charlotte crossed the room and leaned herself against the breakfast bar.\n\n\"Sex.\" She answered a little too quickly.\n\n\"What?\"\n\n\"You've had sex.\" She smirked.\n\n\"Erm...\" I could feel the flush burn in my cheeks as I recounted not only the previous encounter with Evie, but the other girls who had made it back to my apartment in the month since I had last seen Charlotte.\n\n\"Oh, that many, eh?\" her smirk grew into a full grin. \"Oh, relax, Petey,\" she said, as she finally let that dazzling smile spread to her cheeks \"Evo men are expected to take a lot of women, it's the only real way of propagating the species.\"\n\n\"What about women?\" I asked, letting myself relax as instructed.\n\n\"Um...\" she pondered her answer for a few seconds. \"We can be pretty promiscuous as well, but we can only add to the species one child at a time. Once we are knocked up, our sex drive drops dramatically for those nine months, so we only tend to hook up with other Evos. It makes it more likely to birth a gifted child. But imagine how many human women a man could knock up in that time if he put his mind to it? Human men are a fun distraction, but the chances of a gifted child are a lot lower for some reason, it means we aren't as attracted to them.\" She shrugged as she tore off a chunk of my untouched sandwich. \"It's a biological imperative. You can't fight nature.\"\n\n\"Right...\" I squinted. \"So, the men sleep with as many women as they can...\"\n\n\"And the women don't,\" she finished for me.\n\n\"Hardly seems fair.\"\n\nShe thought about this for a moment. \"Do you remember what I said about being inside an Evo's mind being the most intimate act we have?\" I nodded. \"Once an Evo has bonded with another, the physical act of sex, especially between an Evo and another human, just doesn't seem that important. Jealousy isn't really a thing in our society.\"\n\n\"Bonded?\"\n\n\"Oh, that's a whole other lesson.\" She chuckled as she swallowed another mouthful of my sandwich. \"Talking of which, that brings me to why I am here. Have you heard anything more from Marco?\"\n\n\"Not a word.\" I shook my head as I slid the plate closer to her and started making another sandwich for myself, sacrificing the first to Charlotte.\n\nShe also shook her head, adding an exasperated sigh. \"Fucking useless!\" She muttered to herself as she pulled the plate closer and hoisted herself onto one of the barstools. \"You know, I cannot believe how badly he has handled this. If I didn't know better, I would say it was done on purpose.\"\n\n\"Handled what?\"\n\n\"Your training,\" she said, her hands waving animatedly around. \"You think we are born knowing how to do stuff like that?\" She gestured back to Jimmy's absence on the couch.\n\n\"Aren't we?\" I asked. With the exception of Charlotte unlocking my city and showing me how to enter minds, I had worked out to do almost everything else myself. Although her outright control of Jimmy was, admittedly, far beyond what I thought I was capable of. That being said, she didn't have a Jeeves.\n\nWhy, thank you, Sir. I appreciate your confidence in me.\n\n\"Not now, Jeeves.\"\n\n\"Of course not,\" she answered with a frown. \"Some of it is instinct, and I'm guessing that a lot of yours has to do with the strength of your powers and the fact that you were an adult when you were awoken. We don't really know what effect that level of maturity will have on your education, but no, we have to be taught and Marco, I'm assuming, is supposed to be your teacher.\"\n\n\"You assume?\"\n\n\"Let me finish,\" she said with a playful smile. \"Marco is fucking it up. So, I have decided to train you myself.\"\n\n\"Cool. Sounds good to me. When do we start?\"\n\nCharlotte blinked a few times. \"Now, obviously.\"\n\n\"Oh, sorry.\"\n\n\"Anyway, the last time we were in that impressive little head of yours...\" she tapped her finger against her forehead, \"...I sort of told you about the split between my part of Evo society and the rest of it. So, we will start there. Let's call it 'Evo Societal History 101' and we will build from there. You've gotta know where we started before you can really understand where you fit in. We can get to training individual abilities another time.\" She swallowed the last mouthful of her sandwich just as I finished making mine. She looked around the room, her eyes finally settling on the empty space between the TV -- still showing the same point in the game as it was when Jimmy was compelled to leave -- and the sofa. \"Come on,\" she said with a smile, stood from her seat and walked across the apartment.\n\nI took one last look at my untouched sandwich, sighed and followed her into the living area. \"I'm gonna starve at this rate,\" I mumbled to myself.\n\nCharlotte smiled as I approached, positioned herself to face me and sat on the floor, gesturing to a spot a few feet in front of her to do the same. Once I was sitting in the same cross-legged position as her, she placed her hand on her knees and took in a deep breath. \"Okay,\" she said in a calm voice, \"I want you to rest your hands on your knees like I have, take a deep breath, close your eyes and exhale with a deep 'Ohhhhhhmmmm' sound. Try to clear your mind.\"\n\nI nodded slowly, placing my hands on my knees as she had done, taking a deep breath, closing my eyes and exhaling. \"Ohhhhhhhhhhhhhmmmmmmmm.\" Charlotte burst out laughing.\n\n\"I can't believe you fell for that! You watch way too much TV.\" She laughed. \"I'm just fucking with you. Just make yourself comfortable and shift a little closer. We have to be touching. Remember?\"\n\nI chuckled; I had no issue with being the butt of a joke if she was willing to train me like this. I scooted closer to her, still in the cross-legged position, until our knees were almost touching. Charlotte smiled at me. I had almost forgotten how staggeringly beautiful she was. She reminded me of a young Liz Hurley, and her smile lit up her face in a way that only Evie could compete with. She reached out her hand to mine. \"Ready?\"\n\n\"As ready as I will ever be.\" I took another deep breath and let my hand reach out for hers.\n\nAs soon as we touched, existence melted away.\n\n* * * * * * * * * * * * *\n\nThe issue with anything I have learned from Charlotte is the difficulty in translating those lessons into words for my tale. Yes, there were times that she spoke, but usually our lessons in the mindscape were more like watching a narration layered over a series of images and memories. Some of those memories were hers, but the overwhelming majority were ones that she had been given by others, and some of those had been received second-hand as well. I came to understand a lot of what I knew about the Evos came from Charlotte's interpretation of second, third, and sometimes even fourth-hand memories that had been passed down through the generations. It was the equivalent of watching a documentary about the Second World War, made up entirely of the eye-view perspective of lots of different people, and narrated by someone who wasn't even alive when it happened. To say it was confusing was a huge understatement. But, as with many things in this story, I will try to translate as best I can.\n\nIn the beginning, there was Maria, or at least that's how Marco told it. She wasn't the beginning, even he had conceded that point, but she was the one credited with bringing the first known group of Evos together. That first assembly had taken place in the small town of Ulm in Germany around the turn of the 1400s. Over the course of a few years, they designed an almost cult-like secret society called 'The Conclave,' roughly based around the Catholic Church; there was a leader -- the Archon -- and varying lesser ranks beneath him.\n\nThe purpose of the Conclave wasn't as straightforward as you might imagine. The church, for example, was based around a shared belief, a communal place of worship where those beliefs were reinforced and spread. The Conclave was more like an imagined nation, a shared sense of identity that separated the first Evos from the rest of the world. This identity, however, was not based around geography, ethnic identity or a shared history like other nations of the time, but around the very real biological differences between its members and the rest of humanity. It was a place of learning, a place to share ideas, a place to explore abilities in safety and, as it grew, a place to guarantee the security of its members.\n\nEach new acolyte was made aware of, and expected to uphold, certain responsibilities -- these would eventually become laws -- the number of which were mind-boggling. But the absolute highest of these was the need for secrecy. One fact that is as true today as it was all those centuries ago is that humanity is dangerous, and it fears nothing more that something different. Different cannot be understood, what cannot be understood cannot be controlled, and what cannot be controlled is a threat. Despite their obvious power compared to the average human, the Conclave were no match for the rest of the world in terms of sheer numbers. The Evos that found themselves exposed to mankind were, without exception, killed. It was a painful lesson that the Conclave took on board very early on.\n\nEach rank below the Archon was expected to oversee the training and security of the rank below it. Each member of the lower rank was assigned to a mentor in the rank above, and this mentor would train the apprentice in how to make the most out of their abilities, the power of which varied massively from person to person. As cringe-worthy as it may seem, you wouldn't be far off course if you were to think of all this in the same terms as the Jedi Order in Star Wars. The mentors were also directly responsible for maintaining the discipline and security of their subordinates and, in many cases, this was enforced with a merciless iron fist.\n\nThe difference between The Conclave and the Church -- or even the Jedi Order - however, came when you looked at the manner with which these ranks were achieved. There were no experience requirements, there was absolutely zero chance of promotion, no need for respect or superiority, there was no list of achievements or accolades that were taken into consideration, and you could never graduate. There was only power.\n\nA rank was earned simply by the virtue of how powerful an individual was.\n\nThis meant that the mentor was, and always would be, significantly more powerful than the people beneath them and there were many tales of the punishments dished out for lapses in the Conclave's expectation of secrecy. Charlotte had already taught me about duelling and the damage that could be done by one Evo against another. A more powerful mentor could easily breach the walls of a wayward apprentice and compel them, by force if necessary, to follow the rules. And if that didn't work, a subordinate could be drained of their powers at their will, have their memories wiped and simply be cast out. The rank system was permanent, and the rules they passed down to those assigned to them were to be followed without question. It was the only way, they thought, to guarantee the safety of the whole collective.\n\nIt probably seemed like a good idea at the time. In a society still made up overwhelmingly of serfs and the peasantry, being born into power was a simple and universally accepted fact of life. You were born into a class and, invariably, you would die in it. But as the ranks of the Conclave solidified into a bonafide class structure, a toxic mix of ego and avarice set in; ranks became forbidden to mix with one another outside of the various apprentice-master relationships. There was an almost god-like reverie for the class above yours, and utter contempt for the class below. Any mixing between the two, even outside the walls of the Conclave, may not have been strictly forbidden, but was certainly a subject of scorn, mockery, punishment and -- in extreme cases -- banishment.\n\nOver the course of the next few centuries after the Conclave's founding, Evo numbers had exploded. A mix of pestilences and epidemics coupled with the dramatic increase in the human population led to more and more instances of unborn fetuses contracting diseases which caused the Evo mutation. Almost all of the known members of this new species found their way to the Conclave; they were welcomed, awakened, assigned a rank based in their power, and then spent the remainder of their very long lives in service to the new society.\n\nBut again, this is where the issues of translation come into play. Even as I was told this, I had pictures in my mind of large, ornate, church-looking halls filled with Evos bowing and scraping to the ranks above them. Living their lives like monks, confined to a single building and dedicating themselves to the good of the Conclave. But I was wrong. The Conclave itself rarely met in one physical location. Its members were free to go about their lives in much the same way they always had done, but there were certain commitments that had to be honored. If one member was discovered, for example, the others were obligated to offer assistance if they could. Much like an extreme predecessor of the Underground Railroad, this could involve hiding fugitives or killing their pursuers or anything else to help their brethren. But the overriding goal of every Evo was to work their way into positions of power within their own communities.\n\nIt was rare for individual members of the Conclave to meet in person outside of scheduled gatherings, an example of which would be the party that Marco had invited me to in a few short weeks, and was almost exclusively either between a mentor and one of his apprentices, or a chance meeting during the course of their day-to-day lives like had happened with Charlotte and me. An apprentice's training was done in the mindscape over several very short spans of real-world time. They were given the rules they were meant to live by, occasionally assigned a specific task and, aside from being expected to attend the gatherings, were left to their own devices accruing more and more power. It was a system that was wildly successful.",
        "As with many orders like this one, the Conclave became indescribably powerful, able to influence monarchs and merchants to do their bidding almost at will. People these days talk about conspiracies such as the New World Order, a shadowy group of powerful individuals who pull the strings of governments, international corporations and military institutions, and although such an organization would normally seem laughable to an educated person, this is exactly what came to exist in the late Middle Ages and into the Renaissance era. The Conclave was, in a very real sense, the power that drove the world. It was a power that they wielded with complete disregard for the humans that power would affect.\n\nThere was, however, a fatal flaw in the system. The Middle Ages were a time of almost universal religious belief. Everyone believed in God and everyone followed the teachings of the Church, and the members of the Conclave were no exception. It would seem that the existence of the Evo mutation was seen by the members of the Conclave as proof of the hand of God at work. He had personally ordained them to guide humanity. Whatever the rationale, humanity's reverence of the Catholic Church seems to have been as present in the Conclave as it was everywhere else, and being the institution that was founded by one of Jesus' disciples, the respect that the Conclave held for the Church forbade any Evo from finding their place of power within it.\n\nThis would turn out to be the Conclave's Achilles' heel.\n\nAs the Conclave wielded power with impunity, its effects started to become more and more apparent to other institutions able to see it. It is important to remember that there were no methods of long-distance communication in the 14 and 1500s. News of an event would take months to travel from one side of the old world to the other and often would never make it there at all. So, a Conclave-play for power in London, for example, would rarely, if ever, be known by the people living in Constantinople. There were only a few institutions other than the Conclave capable of seeing the bigger picture and the most capable -- and by far the most powerful - of these was the Vatican.\n\nThrough strict adherence to religious teachings and blind reverence to the supremacy of the Church, the Conclave had constructed their own blind spot. No Conclave member was allowed to build their power base in opposition to the Vatican because the Church held primacy no matter what. But when push came to shove and the leaders of grand armies and local officials were forced to choose between their commitments to the Conclave and their allegiance to the Church, there was no competition. When the Church eventually demanded it, the institutions that the Conclave had spent decades infiltrating turned on them with a single word from the Pope.\n\nThe more extreme instances of the Conclave's thirst for power finally and inevitably drew the wrath of the Church. Able to disseminate orders beyond the sight of the Conclave, the Church acted to stem the perceived threat of the Evos with merciless and ferocious effectiveness. The Spanish Inquisitions, the European witch trials and the countless accusations of heresy were, in most cases, thinly veiled attacks on the Evo society. Nations such as the Netherlands and England, for example, thought by the Vatican -- correctly -- to be powerbases of the Evo, were invaded by righteous armies with Papal mandate. Hundreds of thousands were killed, perhaps millions over the course of numerous Holy wars. But despite the vast majority of those casualties being ordinary humans, thousands of Evos were killed in the process. Somehow, though, through all this, the main structure and security of the Conclave remained a secret and mostly intact. Individual Evos were hunted down without mercy and they, along with anyone thought to have aided them, were executed with nothing more than a show trial. The branch of the Church tasked with the systematic hunt for the Evos became known as the Inquisitors, it would be a century or more before Evo society realized the biological difference between the rest of the church and those who made up the ranks of the people hunting them.\n\nBut an unexpected benefit of the Conclave social structure stopped a massacre from becoming all out annihilation. Individual Evos knew nothing of the whereabouts of other members, even within their own rank and certainly nothing of the ranks above them. The strict and rigid class structure of the Conclave that had forbade fraternisation between the ranks had turned it into something resembling a modern day terrorist cell network and had allowed it to survive.\n\nAs the Renaissance dawned some 300 years after the founding of the Conclave, and the Age of Enlightenment spread through humanity, new ways of thinking started to pervade. The idea that a man's worth could not be judged by the manner of his birth and that a rigid and immobile class structure were bad for a society started to gain popularity within the Conclave, despite fierce opposition from the higher ranks. Arguments became heated, sometimes turning violent, civil war became a real and very possible fear and this was all on top of the relentless threat posed by the inquisitors. Using the cracks in the system caused by the Church attacks, a group of Conclave members decided to act. Under the backdrop of the American War of Independence, a few hundred of the more disillusioned members -- some of whom were old enough to have witnessed the Conclave's foundation -- broke away from the rest of Evo society, retreating into hiding and weathering the inevitable storm from their former friends and being left to fend for themselves against the Church.\n\nDespite all odds, and after suffering enormous proportional casualties, the new sect -- choosing not to give themselves some auspicious name -- survived. Barely a quarter of the numbers that had fled the Conclave remained alive, scattered all over the globe but, through sheer force of will and a granite-hard resolve to protect each other, they thrived.\n\nThey had learned the lessons of their forebears. The search for power was outlawed, and the use of an Evo's power on the human population was to be limited to only as much as was necessary for their survival. Over the course of a century, the members of this new Sect moved to Britain where the power of the Church was weakest. They set themselves up as doctors, teachers, employers, politicians, important and revered members of society just like the old Conclave mandate, but benevolent ones. Any member of the new Sect attacked by the Church would find whole communities of humans ready to defend them. But, strangely, these attacks never came.\n\nThe class structure was also completely dissolved. It would be years before the realization that it was this structure that had allowed the Conclave to survive but the Sect valued absolute equality of its members above the need for self-preservation. It was run by a council of seven members. Each member was nominated and voted for by the rest of the Sect and would hold that position permanently. If a council member was determined to be unfit for office, they could be removed, either by the other council members or by a vote from the rest of the Sect, at any time. Every decision was completely transparent and, being geographically located -- for the most part -- to a single small nation, the Sect gathered for meetings on a frequency that was unheard of in the Conclave. As far as I could tell, Charlotte felt that they constituted an almost second family for their members. She knew almost every other member of the Sect personally and, if necessary, would drop whatever she was doing to come to the aid of any one of them. For someone lacking even the most basic of familial connections, I would be lying if I said that those kinds of bonds didn't hold an appeal. But it would take decades after the schism -- as it came to be known -- for the modern Sect to grow into something resembling its current form.\n\nThe first puzzles that had plagued those early years was to explain why -- for the most part -- they had been left alone by the Church. It had been proven in the years since then that the Inquisitors were very aware of the internal struggles within the Conclave and had followed the schism with great interest. But although their zealous attacks on the Conclave persisted, they had almost ignored the new Sect entirely. It was a question that, to this day, still hadn't been answered to anyone's satisfaction. The most popular theory was that it was the Conclave itself with its relentless thirst for power that was the Church's main target, and by separating themselves from it, the new Sect was no longer a means to bring down their old institution. But even that was a best guess, and not a great one at that.\n\nIt was the Conclave itself that posed by far the greatest threat to the new Sect. With Evos able to detect each other over vast distances, individual Sect members were hunted down by their former brethren with relentless zeal. Whether it was through a sense of betrayal or the thought that they could compromise the Conclave as a whole was anyone's guess, but after their numbers dropped to dangerously low levels, the Sect was forced to implement a universal teaching program to its members to ensure their proficiency at duelling. Taking an Evo life was still the highest of all crimes, as it had once been in the Conclave, but allowances were now made for self-defense. Sect losses slowly dropped off as Conclave members were beaten back, eventually leading to the two institutions living in relatively peaceful, albeit suspicious, co-existence.\n\nThe second puzzle, one brought up by the Conclave attacks, was that of recruitment. Any un-awakened Evo was a potential enemy of the new Sect and eradicating the children of their own species was simply not an option. So, they started a recruitment drive of their own, taken straight from the play book of their former masters. They would sense a child ready to be awoken and get there to welcome them before the Conclave did. With training geared towards staying off the radar and being able to defend themselves if that failed, these new initiates became expert infiltrators and many of them faked another awakening to work their way into the Conclave, feeding the Sect information and warning members of an impending attack. It would seem from her intimate knowledge of the modern Conclave that Charlotte had once been one such member. It didn't take me long to realize that Marco was a loyal member of the Conclave whereas Charlotte was obviously in the Sect camp and the disdain that she held for Marco was no secret.\n\nIt was an odd feeling, to be taught like this. As the lesson went on it became clearer that Marco, assuming he had been assigned as my mentor for the Conclave, had seriously mishandled my initiation, and the memory of Charlotte's reaction to that missing information when we first met became easier to understand.\n\nLike I said, Fucking useless!\n\nIf I was understanding it correctly, Marco should have awoken me and immediately told me about the Conclave, assigned me a rank and initiated me into the order, a process that was extremely difficult to undo. Even if he had been pressed for time, the concept of leaving me that night without the slightest notion of how to unlock my city, duel, block, or perceive a threat from other Evos, not to mention the Inquisitors, was an enormous lapse of responsibility on his part. The error seemed to be more apparent when Charlotte told me that it was incredibly rare for a newly indoctrinated member of the Conclave to even hear out a member of the Sect, let alone allow himself to be associated with one. The fact that she was teaching me the things that Marco had failed to, and I was still expected to attend Marco's party, was a massive boon to the Sect. Apparently, they were watching my progress with great interest.\n\nThe modern relationship between the Conclave and the Sect was a hard one to quantify. Judging the Sect's attitude towards the Conclave was difficult; even Charlotte had to concede that her opinions -- and my education -- were filtered through the lens of the memories that she was sharing with me, memories from people who had a very real and very justifiable fear of the Conclave. Yet Charlotte herself felt very little fear of them. It would be some time before I fully understood her relationship with the Conclave, but much like the rest of the Sect, she viewed them in the same way modern Americans view the slave trade: distasteful, misguided, downright abhorrent, but something to be learned from and never repeated. To her, the Conclave of history and the Conclave of today were entirely different beasts, and the modern Conclave was to be watched, never trusted, but not openly feared. But the lessons to maintain a safe distance from the Conclave were never far away from anything she said.\n\nThere was a cautionary tale that Charlotte taught me, one which had been told to Sect children since the founding of the order. It was the tale of three brothers, a tale that had become almost folklore in the sect. In a twist of irony, the real story -- I would later learn -- was that of two brothers and a sister. For a society who prided themselves on equality of all men, gender equality was apparently a step too far, but I digress. A series of typhoid epidemics in the Spanish city of Malaga hit one particular family very hard during the late 16<sup>th</sup> Century, the mother catching the illness while pregnant with twins. Miraculously, all three survived and two healthy baby boys started their journey to adulthood while their mother made a full recovery. A few years later, another outbreak hit the family again. The mother was pregnant, this time with a baby girl and again, somehow both mother and child survived.\n\nWhen the older twins were about seven years old, another outbreak hit, and once again, both parents caught it, this time succumbing and dying of the disease, leaving the children to fend for themselves. As children in these situations often do, they banded together, looked out for each other and, through sheer grit and determination -- along with some strange but useful abilities -- made it to their teenage years when, one day, a man sensed them, awakened them all on the same night, and brought them to the Conclave.\n\nThey were welcomed to their new family, were washed, fed, given clothes and then, Judged.\n\nThe youngest of the twins was the most powerful and placed into one of the highest ranks. The older was only a single rank lower. The sister was the weakest of the three, being placed only one rank higher than the bottom rung of the class ladder. It was then that they learned that they would never be able to see or interact with each other again. Even the briefest of hello's or the most subtle of nods would be grounds for severe punishment during their training. These children, who had relied on each other and bonded over their very survival, were torn apart by a society that promised to save them. The oldest twin was Charlotte's grandfather, and one of the members who would later split from the Conclave. Age and life expectancy, I was quickly learning, was a very fluid concept among Evos.\n\nIt was a strange and oddly humbling experience to watch not only his life, but his initiation into the Conclave, his time there, his struggles and eventual escape through the lens of his own eyes. I suppose it was a lesson that was somewhat lost on me. I could see that its moral was to show the breakdown of any bonds you had if you were to join the Conclave, but I didn't have any bonds to break down. Although rebelling against the compulsory dedication of your life to a cause that was almost forced upon you was one that I could understand. I had no desire for power, and the Conclave's almost pathological quest for it was already something that I could see myself rejecting.\n\nBut as the intricacies of the relative recruitment techniques were explained to me, I somehow overlooked one simple detail, one that would become a huge part in my later life. I remember it being said, it just didn't seem relevant at the time, but it came in the form of a simple statistic. The process of a child being sensed, and summarily awakened, was a lot more complicated than I had thought. They had to be powerful enough to be sensed in the first place, and geographically close enough to another Evo powerful enough to sense them and then, in the Conclave's case, be close enough to an available Mentor to be initiated properly. This meant that of all the Evo children born in the world, less than 30% were ever found and awakened. With only a rough correlation between parental lineage and the possession of powers, there was virtually no way to track or predict an Evo child's birth, so being discovered was something of a fluke, a statistical anomaly combining the child's relative power with the geographical availability of someone capable of sensing and awaking them. There were hot spots, of course; Chernobyl and the children born in the aftermath of the nuclear fallout caused a massive spike in the number of Evo births, as did the Cholera outbreaks of the early industrial revolution and the 1919 Spanish flu pandemic. But for more than two-thirds of Evo children, being found and brought into either fold, Conclave or Sect, simply never happened. More importantly, nobody seemed to know what happened to them.\n\nRegardless of all this talk of recruitment, I never got the impression that Charlotte was actually trying to enlist me into the Sect, nor, did it seem, was she actively trying to dissuade me from joining the Conclave either. It seemed to genuinely be something of a history lesson. History was something I had always enjoyed at school and was my second choice of university majors if computer game development hadn't been available. So, I found this completely tangent history of an entirely unknown human sub-species fascinating.\n\nWatching the faces and these people flash through my mind was a little harder to explain. Learning about a certain time frame, for example, or a certain person, from books is all well and good but a student would never really know what that person looked like, or how they sounded -- if you went back before the age of photography, at least. So, when a face flashed before my eyes, it was surprising to find that I instinctively knew who they were. William Shakespeare looked nothing like his portraits, neither did Oliver Cromwell or King Louis XVI. George Washington wasn't quite as tall as everyone made out and the real reasons behind Benedict Arnold's betrayal of the American revolutionaries suddenly had a whole new dimension. Imagine a memory of a conversation you had with someone a year ago, but you are able to recall it with perfect clarity; the color of their eyes, the way their lips moved when they talked, the smell of their cologne or their breath, the way their hand felt when you shook it, the place it happened, even the weather at the time. These tiny, almost imperceptible details are impossible to convey on paper, and so inconsequential at the time that you would never think to record them, yet they all make up part of the picture that tells you about that person and your interaction with them. It sets the scene, so to speak, and there were hundreds of them.\n\nI could recall, with uncanny clarity, a conversation that someone had had with Joan of Arc, someone fighting alongside Lord Charles Cornwallis, fighting against Lord Cornwallis, discussing scientific theory with Leonardo DaVinci, watching Lincoln make his second inaugural address, travelling to the far East with Marco Polo, Opening the tomb of Tutankhamun, finding the new world with Columbus, exploring the African sub-continent with David Livingston and hearing those famous words first hand.",
        "Dr. Livingston, I presume.\n\nSome of mankind's most memorable moments were suddenly in my mind to be browsed and re-lived at my leisure, in exactly the same way that my memory of Olivia had been a few weeks earlier. It was incredible. What was even more astonishing was the fact that I could somehow tell that these memories came from only a handful of people in the Sect. A memory had been shared with another Evo, who in turn and shared it with another, who had passed it on to someone else, all the way down the line of history to me. But there was more, so much more, that had been lost during the schism. It was one of the few things that the members of the Sect mourned from their separation with the Conclave. Not every memory of every Conclave member had been shared with every other member. It was only those you were lucky enough to encounter that were passed on. There was a vast, unimaginable source of history contained within the minds of the Conclave Evos that were lost to the Sect and it grieved them deeply. Memories of every point in history, every major event and every person of significance for the past 700 years was contained, in vivid detail, in the vaulted recesses of the Conclave psyche. Their questionable thirst for power aside, it was almost enough to get me to sign up immediately.\n\nOver the years, as I would meet more Evos and as my powers grew, a whole new historical timeline would become clearer. Parallel, influencing and yet entirely separated from the history taught in high schools all over the world. The Conclave, with their lust for control, had influenced human history far more than the vast majority of people could even imagine and in their move to separate themselves from the Conclave, and the Sect had made just as significant an impact.\n\nWhat was more amazing, and something that I still hadn't quite gotten used to was the fact that Charlotte and I had been conversing in the mindscape for hours. If we had been talking in the real world, the sun would have set long ago and the new dawn would be approaching, yet less than a few minutes had passed outside of the mindscape. Despite the enormous amount of time I had spent in my bunker, or wandering my city, in the month since my awakening, - not to mention the day's work on my University project - the dilation of time between the mind and the world outside of it was something that still astounded me.\n\nCharlotte seemed perfectly happy to talk and share those memories as we idly wandered the streets of my city, her hand, more often than not, linked with mine. It was still a novel position for me to be in. I had something of a relationship already with Becky, and the beginnings of one with Evie, but this simple act of intimacy in no way contained the guilt -- or the thrill, if you are that way inclined -- of cheating. It was if each relationship was on their own separate plane of existence. Becky was my human relationship, Charlotte was, in a way, my Evo one. I still had no idea where to place Evie's, but they all seemed entirely independent of each other, not intertwined or connected in any way other than the fact that I was in them. The more I thought about it, the more I realized that my entire life was run in the same way; there was my life as a human, with my human friends, my human concerns and commitments, my human relationships, my human desires for wealth, success and happiness, and then there was my Evo life, completely separate from my human one and one that I was only just beginning to explore.\n\n\"A lot of us feel like that.\" Charlotte smiled, stopping for a second to gaze in wonder at one of the many plazas we had passed on our walk. This one seemed to commemorate the day that I left home, a grey marble statue of myself, suitcase at my feet, staring off into the future was surrounded by ornate fountains and perfectly manicured gardens. Ghosts and motes of light flitted around the open space in the same casual manner as my own stroll with Charlotte. \"It's a function of the mind,\" she continued as we resumed our wandering. \"We are biologically programmed to keep our Evo identity secret from society, it's a survival mechanism, it's instinct... Darwinism in practice. If our mind was incapable of separating those identities so completely, mistakes would happen which could lead to public exposure. Historically speaking, that meant death.\" She let her sentence fade off as a mote of light shot over our heads and off into the distance, her eyes raising to follow it. \"What do you think they are?\" She asked, changing the subject.\n\n\"I thought you would know,\" I answered, my own eyes tracking the light as it faded into the distance.\n\n\"No, I mean, the ghosts I understand. They are no different from mine, there are just less of them. I have never seen those lights before.\"\n\n\"Jeeves?\"\n\n\"They are impulses, Sir. Spontaneous thoughts in their purest form.\"\n\n\"Cool, thanks.\"\n\nI relayed the information on to Charlotte. \"Who is Jeeves?\" She asked with a quizzical smile.\n\n\"How do you...\"\n\n\"We're in your head,\" she said through her smile. \"It's the same way that you can receive those memories. There are no secrets in here, that's one of the reasons we consider it to be so intimate. Compared to this, we could jump out of here and have wild, rampant sex and it would be no more significant to either of us than if we had coffee.\"\n\n\"Oh.\" I blushed slightly at the idea of the sex, not because she mentioned it, but at the hardening in my pants at the idea, I didnt miss the wry grin from my companion as I did. \"Let me see if I can do this.\" I squeezed her hand slightly, consciously pressing my memories of all my interactions with Jeeves into her. Her eyes flickered a few times before refocusing.\n\n\"Wow,\" she said after a few slack-jawed seconds. \"So, you actually communicate... like, real, two-way communication... with your own subconscious?\"\n\n\"Err... Yeah, I guess so.\"\n\n\"That is...\" her lips floundered for a second as her mind raced to find a suitable word. \"That is fucking incredible!\" she finally exclaimed.\n\n\"Why, thank you, Madam.\" Jeeves faded into existence in front of us. \"And might I say, your tutelage has been most informative. I have greatly enjoyed processing it.\"\n\n\"Does he always talk like that?\"\n\n\"Yes, I do,\" Jeeves answered before I could. \"He...\" he nodded his head at me, \"...thinks it's funny.\"\n\nCharlotte looked at me, another grin pulling at the corners of her lips. I just shrugged with a smirk of my own.\n\n\"Jeeves, it was very nice to meet you,\" Charlotte said after rolling her eyes playfully. \"I look forward to getting to know you better in the future.\"\n\n\"And I, you,\" Jeeves replied with a formal nod of his head before shimmering away into nothingness. I don't know why I had expected more of a conversation between the two, though it quickly dawned on me that Charlotte now knew as much about Jeeves as I did.\n\n\"Jesus, Pete,\" Charlotte said as we remained standing in the middle of the street. \"You really are full of surprises. I don't think I can even properly grasp how powerful you are. It's...\" Her voice faded off as she once again grappled with her grasp of the English language.\n\n\"Interesting?\"\n\n\"Scary,\" she corrected with no hint of humor. \"Not in a bad kind of way...\"\n\n\"No,\" I chuckled, \"I totally understand the good kind of ways to scare someone.\"\n\n\"All right, maybe scary wasn't the right word, although I can't even begin to imagine what that mind of yours could do if someone pissed you off. Especially with those enhanced combat abilities.\" It took me a second to work out how she knew about them until I realized that knowledge of them would have been included in my memories of Jeeves. \"Maybe 'intimidating' is a better word.\"\n\n\"Is that any better?\" I asked with a grin. Charlotte's thoughts were enough for me to know that I needn't take offence at any of this, but it was always fun to play along.\n\n\"Hey, some girls find it sexy. The big strong man who was able to protect her.\"\n\n\"Hmmm... are you one of those girls?\"\n\n\"Now that would be telling,\" she said with a wink before pulling me on with our walk.\n\n\"So, what about Evie?\" I said after a short time of silence. \"Why is she so different?\"\n\n\"I have no idea,\" Charlotte admitted after a short pause. I squeezed her hand again, trying to push these memories into her as well. \"That won't work,\" she said after glancing down at our hands and realizing what I was trying to do. \"Mindscapes are unique,\" she continued. \"Think of it like an encryption. What you saw in her mind was not her mind, but rather your interpretation of her interpretation of her own mind.... if that makes sense. You cannot communicate it with another person because they would probably have their own separate interpretation.\"\n\nI blinked a few times. \"You like that word, don't you?\" I chuckled.\n\n\"You have a better one?\"\n\n\"Understanding, explanation...\"\n\n\"Shut up, you know what I mean. Anyway, back to the point, I would have to meet her myself to be able to see her mind, and that could be a little awkward. Especially if she already thinks she is different, which she almost certainly does.\"\n\n\"Hmmm...\" The puzzle that was Evie was getting more and more intriguing the more I thought about her. \"Yeah, we may have to put that on the back burner for a while.\"\n\nWe carried on walking for a while, stopping every now and then for Charlotte to stare up in wonder at the towering skyscrapers, bathed in their blue light as they reached for the endless cloudless sky. Very little was said. We just walked as we each took in the city around us, our fingers entwined and the simple contentment of just being together. We wandered for hours. Of course, I had already seen most of the city in the time I had spent exploring it, but there was something indescribably special about sharing it with someone else. The more Charlotte saw of my city and my mind, the more I understood; it was pure intimacy.\n\nAfter an unknown number of almost silent hours, we found ourselves in another plaza, at least a dozen miles from the last one we had stopped at. This one commemorated my sixth birthday. My grandparents had taken me out, away from my parents and for the first and only time during my childhood, I knew what it was to have a birthday that wasn't filled with mockery and misery. Willful ignorance: that is how I came to understand my grandparent's place in my life. They knew what was going on, they did what they could for a while, but it was never enough to make a difference and eventually they just left me to my fate. But for a large portion of my life before leaving home, those few hours were my benchmark for what happiness could be. It was odd to think that my idea of happiness back then was the simple lack of abuse for a short period of time. Happiness and the absence of misery, I had come to realize, were very different things. It took Jimmy, my first real friend, to show me what belonging truly felt like.\n\nWe sat on a bench, the warm sun bathing the plaza in light, the cool breeze coming from the east, the motes of light playing in the temperate air as Charlotte and I watched. I would later learn that the weather in my city was based entirely on my mood. Contrary to the depiction in front of us, it would seem that at that moment, I was genuinely happy. But, of course, I had to spoil it by speaking.\n\n\"Tell me about the Inquisitors,\" I said after a short while sitting, realizing that my training had been replaced with wandering.\n\nCharlotte, who had seemed just as happy and content as I was, changed in an instant. The soft smile vanished, her eyes darkened with the rest of her exquisite features and she let go of my hand, leaning forward to rest her elbow on her knee, rubbing her mouth and jaw along the palm that had just held mine.\n\n\"The Inquisitors...\" she repeated quietly. \"It's strange, we have been fighting them, fleeing from them or hiding from them for over seven centuries, but we know very little about them.\" She said after a short pause. She turned to look at me, \"Your abilities are impressive, Pete,\" she went on, \"but the powers you have given yourself in your 'internal editing station', we can all do that. Over the years, countless of our kind have dedicated their gifts to science, to genetics, to medicine; some of them did it to help people, but most did it to try to understand an enemy who, for reasons we still don't understand, seem hellbent on our extinction.\n\n\"Centuries of research, centuries of infiltration, some more successful than others, but more than anything else, there have been centuries of death. We know where our species come from, it may be unpredictable, but we understand our mutation. We have no such luxury when it comes to the Inquisitors. We don't have the first idea how their biology works, or how it is passed on, let alone where it comes from and more people than you or I can imagine have given their lives trying to find out.\"\n\nThere was another long pause before she spoke again, there was a tremble in her voice, the soft words vibrating with unspeakable fear. \"We don't know where they came from, we don't even know if they know, but our kind first recognized their biological distinction from other humans in the late 1500s. It was like a bastardization of our own mutation, it was like they could feel us in the same way that we can sense each other. Not our powers, they couldn't sense us, but it was like they could see the effects of our abilities. My grandfather told me it was like painting a room, they may never have seen the painter or the paint, but they could tell that the room was different when nobody else saw it, and by seeing the paint on the walls, they knew to look for the person with paint on their hands.\n\n\"They hate us, Pete.\" She went on after another pause. \"And nobody knows why. In the beginning it was easy to put it down to religious zealotry, maybe that was a lazy explanation but the church doesn't have the influence that they used to and some of the Inquisitors we have encountered have no affiliation with the Vatican at all, as far as we can tell, and yet they still hunt us.\"\n\n\"I thought they had left the Sect alone.\" I asked after Charlotte stopped for another pause.\n\n\"They have, for the most part.\" She nodded softly. \"Their coordinated attacks seem to still only be targeting the Conclave, but individual Evos? They make no distinction, if they identify one of us, they will use every one of their considerable resources to hunt them down and kill them. Take you, for example, and me, neither of us look like this naturally, if an Inquisitor got close enough for long enough, they would see that... and that would be it, a lifetime of being chased, inevitably caught, and executed, just for the crime of being born an Evo.\"\n\n\"Alright...\" I said after another silent pause. \"Let's start at the beginning. Tell me what you know.\"\n\nThe memories and the knowledge came pouring into me as she retook my hand. The Inquisitors really were a mystery. There were theories that they had been around for as long as the Evos, a separate but distinct evolution of mankind who seemed to be biologically programmed to be in conflict with our species. It was a long time before the Conclave recognized that the Inquisitors were more than simple humans, what started as an unexplained rise in the number of Evo exposures and executions suddenly turned into horrified fear as the source of this murderous trend announced itself with a vengeance. A curious anomaly quickly became an existential threat.\n\nThe early Conclave had sought to dominate and control the human population, causing them actual physical harm was rarely considered, let alone used unless as a last resort to ensure an Evo's survival. If an Evo was exposed, the human population could be coerced into leaving them alone, they could have their memories altered or wiped completely to guarantee and Evo's safety, there was never really a need to harm them. A dead human was of no use to the Conclave.\n\nMy own editing station had filtered my reading of human thoughts to those directly concerning me. It would have been easy to change that so any human thought concerning anything about Evos would be detectable and it would appear that this is exactly what the early Evos had done. Then, one day, a group of them had been ambushed and massacred. The Conclave was still in its infancy at the time, barely 70 years had passed since the order's foundation and although that may seem like a long time in terms of an ordinary lifetime, it was nothing compared to the ages that most Evos could reach and a blink of an eye in the longer term history. Secrecy and security, although were taken seriously, were not top priorities for the fledgling Conclave.\n\nThe attack that changed it all had been brutal. The ambushed group had been made of low ranking -- and therefore, comparatively weaker -- Evos who had been at a gathering with their mentor at an inn on the outskirts of Munich. They had been talking for less than an hour when a group of heavily armed men bearing papal insignia had burst in, the man closest to the door had been cleaved in two by one of the armored intruders and the rest of the Evos had been slaughtered with the same levels of ferocious violence. Only one man had escaped, and his story had been terrifying, so much so that it was doubtful that his survival had been an accident.\n\nAside from the acts of barbaric violence, the most concerning part of the survivor's story was that none of the Evos had sensed the men coming until it was too late, the mentor freezing, mid-sentence, only seconds before the doors to the inn had burst open and the carnage began. At first, the higher Evo ranks, including the Archon, had viewed this detail with suspicion, suspecting that the ambush had been the result of negligence more than anything else. But to be certain and to quiet the spreading rumors, they dispatched a group of higher ranked members -- ones with military experience -- to Munich to find out for themselves.\n\nIt had taken less than a day for the blurred, intermittent minds of the inquisitors to be found. One of the investigating Evos described it like trying to view a damaged painting, you could view the whole, if you had some idea of what you were looking at but picking out individual detail was almost impossible. What was worse was that their zealotry had spread to the general population. The Evos had kept a low profile, hiding in plain sight and doing nothing to draw attention to themselves while slowly making their way towards the source of this new hostility, hostility towards a species that these people should have had no knowledge of.\n\nIt didn't take long to find what they were looking for.\n\nThere, on the steps of Munich's ancient and beautiful cathedral were seven members of the clergy, a cardinal at their head and proselytizing against enemies of god, abominations that the frenzied crowd became more and more determined to hunt down and kill. It was there that the members of the Conclave first heard a word that would be used against them for the next few centuries: 'Heretics'. Within a decade, the Spanish Inquisitions that had once only targeted Jews and Muslims for conversion, was now hunting the Conclave, not for religious conversion, but for extermination. Evo men were hung, drawn and quartered, the most horrific of medieval execution methods. Evo women were burned at the stake as witches, none who were found were spared.\n\nThe twelve Evos who had been massacred at the inn, however graphic and violent their deaths may have been, were shown a modicum of mercy compared the wave of torture and public executions that spread across Europe over the next hundred years. Each story told by Evos who had somehow survived this onslaught had been the same. There had been no change in the minds of the human population, not before their exposure, at least. All had seemed normal. The more powerful Evos had sensed them coming; almost always less than a mile away, always with murderous intent and a full knowledge of the Evo's identity and whereabouts in every single case. It was this intent, however blurred and unclear, that had alerted the Evos to the danger heading their way. The less powerful Evos had no such luxury, they were almost always caught off guard, only those with military training or friends in very high places had been able to escape. The rest were not so lucky. Invariably though, after the initial attack, the minds of the local human population grew significantly more hostile towards the Conclave. Although it had never been confirmed, it was hypothesized that the Inquisitors influenced the humans against the Evos in a similar way that the Evos had manipulated them for their own ends.",
        "It would be decades, almost a century, until the nature of Inquisitor powers was known enough for their nature to be guessed at. Even now, after all this time, an Inquisitor's abilities were measured in comparative terms to the Evo who encountered them. Some Inquisitors could be detected, others couldn't, some Inquisitor minds were able to be read, others weren't, some were as easy to manipulate, others couldn't be at all, and even stories concerning the same inquisitor changed depending on the Evo who encountered them. A powerful Evo had a chance, a weaker one didn't. All inquisitors seemed to be proficient at hand to hand combat and -- in later years -- the use of firearms, they almost always worked in teams and only in the encounters with the largest comparative difference in powers could the inquisitor be detected by anything more than the aura that seemed to surround all of them.\n\nIt was a complicated subject, complicated further by the massive variations in details given by Evos who had encountered them. Even Charlotte had trouble explaining it, but there were a few details that seemed to be almost universal. The Inquisitors detected and identified the Evos long before the Evo knew they were being watched, the more an Evo used their powers, the faster they would draw the attention of an Inquisitor, and if they were not affiliated with the church, they almost always worked themselves into positions of, maybe not authority, but certainly positions where they could monitor the local population.\n\nLaw enforcement departments, newspapers and reporters, government officials, any position that would be able to detect a change in an Evo's circumstances or environment was sought out and filled by Inquisitors. There were only a few exceptions and one of those were the 'High Inquisitors' that Charlotte had mentioned before.\n\nWhereas the propagation of the Evo population was something of a game of chance, Evos at least knew how it worked, the continuation of the Inquisitor species was very different. Evos were usually born spontaneously, meaning that they were not often born due to the mutation being passed down by their parents, hereditary considerations were rarely a factor. Nobody in the Evo community knew how the Inquisitor ability was caused at all, but one fact was indisputable: Inquisitors were rarely female, and the coupling of a male and female inquisitor invariably produced a child known as a 'High Inquisitor'. These children grew to positions of power within the Inquisitor hierarchy itself, rather than positions within human society and were -- as far as anyone could tell -- completely immune to any Evo powers, were utterly unbeatable in combat and would relentlessly pursue and invariably kill any Evo unfortunate enough to cross their path. More than this, the hunting of Evo's seemed to be their sole occupation. The abject terror Charlotte had displayed at our first meeting suddenly became easier to explain; if a High Inquisitor was close enough to you for their void to be detected, they already knew you were an Evo and immediately fleeing was the only chance you had to survive, and it was a slim chance at that.\n\nEveryone, even Charlotte, understood why the Church had declared war on the Conclave, but although the Inquisitors had started their existence as a branch of the Vatican, the centuries since had seen them form their own distinctive organization with only the most circumstantial ties to the Church. Some Inquisitors happened to be a part of the clergy, but the overwhelming majority of them in modern times had nothing to do with the church at all. Yet, their obsessive and zealous attacks on any Evo they found, not to mention their relentless pursuit of the Conclave was as paramount in their actions today as it had been during the inquisitions. The Inquisitors hated our kind with a passion that was totally unexplained, and the fervor with which they still hunted down and murdered -- publicly, if possible -- any Evo they came across hadn't diminished in the slightest and nobody knew why. It was a terrifying opponent to face and the fear in Charlotte's eyes was impossible to miss.\n\nThe longer my lesson went on, the darker Charlotte's face became. Her tutelage about the Conclave was something akin to a lesson on mutual distrust, her lesson about the Inquisitors was one of total and abject dread. There was nothing on Earth that scared her the way that the Inquisitors.\n\n\"They could be watching us right now,\" she said, her voice still trembling as she spoke. \"Their eyes could be on us as we sit in your apartment, planning their attack and we would probably have no idea until they came for us. Yeah...\" she paused for a second, her eyes wandering anywhere except to face me, \"... they scare me.\"\n\nPart of me felt guilty as I hooked my arm around her and pulled her into me. As with many things about my life as an Evo, it would be a while before I understood the story behind the lesson, but whatever it was, it had affected Charlotte deeply. For the time being, I learned all that I needed to know, and Charlotte seemed emotionally incapable of teaching me anything more. Both of us seemed content to just sit and look on an icon of my own history that suddenly seemed utterly irrelevant.\n\nI couldn't even begin to guess how long we sat there, each of our minds silently mulling over the lesson that I had just been taught. But eventually Charlotte spoke up. \"In other news,\" she smiled weakly. \"It looks like our party might get the go ahead for next weekend.\"\n\nMy eyebrows shot up in delighted surprise. \"Really? That's awesome!\"\n\n\"Yeah, Becky has been chomping at the bit to see you again. She has been running herself ragged trying to get the new shift rotation to work.\"\n\nI already knew this; she had said as much during our frequent text conversations. Becky was a busy person at the best of times, but the demands being made of her recently meant that our chats had become shorter and less frequent as the month had gone on. It was more than a little flattering to think that she was making this sacrifice on my behalf. I retook Charlotte's hand and gave it a soft squeeze, smiling to her as he turned her head to mine. \"Are you going to be able to make it?\"\n\n\"I wouldn't miss it for the world.\"\n\nWe wandered my city for a little while longer, finally finding ourselves on the northern walls. The talk of the party had lightened the mood slightly since the lesson on the Inquisitors, but nothing could return the buoyancy it had before that. The Inquisitors were clearly a sore subject and I didn't want to sour the mood any further by pushing it. Since our kiss, I had complete and total trust in Charlotte, if she hadn't told me what it was about the subject that was bothering her so much, then there was a good reason for it. I had no doubt whatsoever that she would have if it had been relevant to my training, and I was sure she would tell me eventually.\n\n\"I don't think I'm ever going to get used to this.\" She said through a soft smile, her hand back in mine and her body leaning against me, her head was resting on my shoulder as we looked out over the sprawling, remarkable metropolis as it spread out beneath us. \"Maybe your next lesson should happen in my city,\" she chuckled. \"Less distractions.\"\n\n\"Sounds like a plan.\" I smiled back. It was another strange occurrence of social situations that I still hadn't grown accustomed to, but we both seemed to instinctively know that our time together in my city had come to an end for this session. Nothing was said, there were no dropped hints or awkward silences, we both just... knew. I suppose it is akin to knowing when a date is over or when a conversation has run its course, not that I would have known back then, but with a few blinks, my vision cleared and I was sat, cross-legged in my apartment, holding Charlotte's hands as her eyes focused on mine.\n\nWithout a word, we both stood up and walked to the door. She turned to face me, a soft smile playing on her lips, her mind, crystal clear in its clarity, was telling me that although we were done for the day, she had genuinely enjoyed my company. I was sure that my mind was returning the sentiment. She stepped in, wrapping her arms around my waist and pulling me in for a warm embrace. My own arms snaked around the small of her back, pulling her gently back into me, her whole body melding into mine. She leaned up, pressed a wet kiss against my stubbled cheek, smiled again, turned and left. Not a word had been uttered since we returned from the mindscape. Nothing needed to be said, and in a stark contrast from my socially inept life before my awakening, I was totally fine with that.\n\nI mean, look. I know what some of you are thinking. This is way too much detail to be going into for such a mundane act, but you have all probably lived your lives with close friendships where a parting hug was nothing to write home about. You may have been friends with someone that you wanted a whole lot more with but it hadn't progressed that far, and that parting kiss -- be it given, or received -- would have been nothing more as a token of affection for you. But for me, with a complete and total lack of any of those things in my life, it meant the world.\n\nMy social isolation may have been the result of my parents' abuse, but it would be lazy and dishonest of me to place the blame for my life entirely at their feet. I could see that now. I had tried, for years, to be the happy-go-lucky, laid-back, life of the party that Jimmy pulled off so effortlessly, but I always felt like the fifth wheel on a four wheeled carriage; just useless and in the way. The more my ability enhanced memory looked back, the more I came to realize that the problem had been as much me as it was everyone else. I didn't make as much of an effort as I could have, and with no reason to pick up the slack for me, neither did anyone else. I would immediately pick up on their disinterest, take it personally and walk away. Jimmy was the first to really put in the leg work for a friendship to work, and, although my help with his understanding of the course materials may have been the initial incentive to make the effort, he had gone above and beyond what was necessary to be my friend. It's funny how the little things can make you appreciate people and events so much.\n\nAs if on cue, my phone dinged. I walked over to the desk to pick it up, my eyebrows scrunching at the screen; it was a Facebook messenger notification, and more importantly, it was from Olivia. Again, this seemingly inconspicuous event has to be taken in the context of my experiences up to this point. As with any other child of my generation, I had grown up in a society where escaping the lures of social media was almost impossible. I had tried twitter, but the people on there just annoyed me. Call me a misanthrope, but unless you have a PhD in Astronomy, your ridiculous theories of why you think the Earth is flat should be kept to yourself. Twitter just seemed like a platform for any idiot to express any mundane thought that popped into his or her head. I avoided it like the plague.\n\nFacebook was harder to get away from. Some teachers in high school assigned homework via the platform and the entire social calendar of the school's population was organized on it. Most events were open invite, so I can't even claim to be the one guy that was never invited, but for the most part, Facebook just served to reinforce my own self-inflicted isolation. There were the random posts that could be fairly entertaining, but after leaving high school, the majority of my feed was filled with pictures of what people were eating, pictures of people's dogs, nights out involving people I didn't really know and the odd quiz to find out what kind of flower you were. It was Jimmy who changed all that.\n\nIt would seem obvious for a person in my situation to have attended a university as far from home as possible. The problem was that my university was one of the best in the country when it came to computer science programs, including game software engineering. I guess it is the equivalent of being born in Oxford, only to attend Oxford University, or being born in Cambridge and attending Harvard. That school was always the one you were going to attend. Regardless of where it was geographically, it just happened to be in your hometown. I would have loved to be on the other side of the country from my parents, but it just wasn't meant to be.\n\nMy point here is that like many other students, I had arrived at university determined to reinvent myself. I knew nobody and nobody knew me, I could be whoever I wanted to be. For the first few weeks that seemed to work out fine, but my awkwardness in social situations eventually shone through and the few 'friends' I had added to Facebook during that time had invariably drifted away. Jimmy was the first person of importance in my life I had added since arriving, and with him making a point to put his entire social calendar on there, I was forced to keep the app on my phone. The second person I added had been Olivia, but in the entire time I had used the app, I had never, not once, received a message through it.\n\nHey. Heard you got out of the hospital. Just wanted to check in. How are you doing? The message read.\n\nMy fingers were already working on the keypad before my mind had fully processed the situation. For a long time, Olivia was my dream girl. It was only the presence in my life of Becky and the other nurses, not to mention Charlotte and Evie, that had distracted me from the eternal puzzle that was Olivia.\n\nI'm doing good, thanks. Got out a few weeks ago. Healing up nicely and ready to get back in the saddle. How are things with you? I sent back.\n\nGood here, I'm glad you are doing okay. Back in the saddle, eh? What are you planning on riding, or should I ask who? \ud83d\ude09\n\n \n\nThere was the teasing flirt that I remembered so well, but my newfound confidence was more than up for the task that the old me would have run from in terror. Haven't decided yet, but I've had my eye on this girl for a while. She keeps teasing me, so I wanna see if she can back it up.\n\n \n\nOhhh. Anyone I know?\n\n \n\nBe at the Queens Head on Saturday night and you might find out.\ud83d\ude09\n\n \n\nI still cringe at sending emojis on messages, don't ask me why. But if you can't beat 'em...\n\nI'm intrigued. I'll be there.\n\n \n\nGreat. See you then. I smiled, tucking away the thought of how easy this was and the silent scolding of myself for not doing it sooner.\n\nIt's a date. She sent back. I was tempted to add something more to the conversation, but playing the better part of valor, I dropped the phone back onto the desk and got back to work.\n\n* * * * * * * * * * * *\n\nUniversity, for those of you unfortunate enough to have not attended, is much like you would imagine and I would strongly recommend it to anyone, at least, that is, until the final year. With the last stretch of the course dedicated to completion of your final project, there weren't many classes that required mandatory attendance. Whereas in the previous two years, there were usually two or three classes a day, plus all the workshops and seminars to help get a student through the materials, the third year only had two compulsory classes all week. The workshops still ran, but they were now entirely geared up to support students needing help with their project, this not only made them optional, but with my project being so revolutionary, there was little, if anything, that they could offer me. I spent the vast majority of that week hunched over my computer, the lines of code appearing on screen as if by magic while Jimmy either typed away on his laptop on the other side of the room -- he had finally taken the hint from the professors and myself that he needed to get started -- or, more often, played the Xbox.\n\nThe two classes went as you would expect as well. Although the classrooms didn't have assigned seating, we had been in the same room for the previous two years and had all stuck to sitting with the groups that Professor Jacobs had lumped us with at the beginning of the first year. With only Jimmy and I left from ours, we sat on the extreme right of the class about halfway back. Evie, the only other person in class I had any interest in seeing, was at the very front, on the far left, about as far away from us as she could get without leaving the room. It wasn't intentional, it was just the way things had worked out. This meant that the only conversation we had outside of text messages was either waiting to enter, or immediately after leaving for class. Lori wasn't on our course so I didn't see her at all.\n\n\"Happy hump day.\" She beamed at me on the Wednesday morning as I arrived a few minutes before class started. She was leaning against the wall next to the classroom door, her figure-hugging jeans reminding me of the exquisite body underneath while the more conservative knitted sweater told me that she was as uncomfortable with the British October weather as I was.\n\n\"Hey there, beautiful.\" I smiled back, walking up to her and kissing her cheek before leaning against the wall next to her. Her mind was still a little hazy to me, not as unclear as it had been a few nights earlier, but nothing close to as clear as the other minds around me. What little I could glean from her told me that she was very happy to see me, and the kiss had gone a long way to dissuade her fears that the previous Saturday night had been a one off. I know she couldn't read me, but my smile and my mind were both in agreement that I was just as glad to see her as well.\n\n\"So, how is the third year treating you, so far?\" I asked as she unconsciously leaned her body against mine.\n\n\"Not bad,\" She smiled. \"I think I have a solid grip on what I want to do for my project.\"\n\n\"Yeah? What are you doing for it?\" I was genuinely interested in what she had in mind. Not only was she one of the few girls in the class, a number which had dropped disproportionately since the first day, but with our new personal involvement, I wanted to see how her mind worked. Jimmy had surprised me with his choice, I had always assumed he would want to design a new game like most of our other classmates were. His idea wasn't only novel, it was incredibly well thought out by his normal standards.\n\n\"Well, so far, I've managed to hook up with you so I can steal your ideas, they are better than mine.\" She said, trying her hardest to keep a straight face. \"We'll see how that goes.\" I chuckled, turning to her with a grin. Her composure collapsed in a matter of seconds and I was treated to another of her addictively musical giggles. \"Alright, fine.\" She smiled again. \"So, have you ever played a game and there are only a certain number set characters you can be?\"\n\n\"Yeah.\"\n\n\"Well, I have always been really annoyed by the fact that there is only ever one token female character.\" She said, her smile fading from her lips a little. \"So much so that I have refused to play a game because I can either be an armoured tank of a man, or a scantily clad delicate wallflower. I mean, it's ridiculous. Having to wander around online RPGs wearing a bikini is stupid in this day andage. Then you have the games where you can design your character at the beginning and it doesn't make a difference if you are male or female, those are better, but still... lacking.\"\n\n\"I'm with you.\" I nodded, impressed by the enthusiasm she was showing as she became more and more animated the longer she spoke.\n\n\"Lots of games don't do that because character design systems can be quite complicated, it takes a lot of time to build and takes up space they want for something else.\" Her hands were waving around in the air as she spoke. \"So, I want to make a stand-alone character creation kit where you can design your character down to the tiniest detail, then make it compatible with the games out there that need it. Either a designer can bolt it onto the game they are making, or have the player directed to this site and their character could be ported in from there, and no matter what you chose your player to be, there would be no lasting effects on the game unless the designer wanted there to be. Kind of like a way to remove sexism from games.\" She smiled, letting her hands come to rest at her sides. \"It would be nice to have the ability to make strong female leads in games without changing them too much.\" She finished with a shrug."
    ],
    "authorname": "TheNovalist",
    "tags": [
        "powers",
        "telepathy",
        "nurses",
        "oral",
        "collar",
        "collaring",
        "d/s",
        "dom",
        "sub"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/newu-pt-07"
}