{
    "title": "My VideoChat Error Ch 14",
    "pages": [
        "I had found the well endowed man that Naughty had charged me with finding. Naughty had sent me out for a night on the town done up as a woman. I had to bring back and fuck a man with a very large cock or Roger and his boys would visit Denise again. \n\nMy Denise. \n\nI could not have that. I had found my man. I would ensure that he was thoroughly carnally satisfied. My Denise would be safe then. \n\nNaughty had promised.\n\nIt was 9:45 when we were standing in front of the door to my hotel room. I found the key card and let us in. We had had a hot time on the way over. Jerome had been sandwiched between Janine and I in the cab. We had both fondled his bulge as he kissed us passionately in turn. He told us several times that he wanted to do both our asses tonight as anal was his favourite. The driver had had a hard time focussing on driving. \n\nI still did not like kissing a man but that masculine man made me feel so submissive. As I felt his sizeable bulge I knew that I would be worshipping a very large cock with horse sized balls. That I would be servicing his manhood and swallowing his seed. \n\nA real man's seed.\n\nPart of me wanted to fight that thought. I too was a man. Wasn't I? The submissive, feminine thoughts were Naughty's thoughts, not mine. Why did they come to mind? I had to deny that they were mine. I had to focus on doing a good job. To protect my Denise. I had to be ready to worship his cock.\n\nWe continued what we had begun in the cab once we were in my suite. Jerome took me in his muscular arms and thrust his tongue into my mouth aggressively. It made me feel very weird inside to be kissing a man and to have his tongue in my mouth. Really weird. I wanted to feel disgusted. I reciprocated though and found myself sucking on his tongue. \n\nI had noticed in the light of my room that he had a very nice golden necklace with a small key on it. Some men did wear necklaces but I had never seen any with a pendant or anything attached, other than maybe a cross. Just a gold chain usually.\n\nJanine came up behind me and caressed my back lightly. I broke from the embrace as she moved in beside me and took her turn kissing Jerome. He pulled her into him and they gyrated their bodies lightly against each other. He fondled her ass and appeared to be playing with a butt plug, like he did with me on the dance floor. I then led them to the bedroom. \n\n\"I should use the ladies room before we really get things going,\" I said to Jerome in a meek girly voice. He smiled and nodded.\n\nI left them kissing in my bedroom. In the bathroom I relieved myself then I removed my butt plug and gave myself a quick enema with my enema bulb. I cleaned it with soap and left it on the counter. \n\nI looked in the mirror. I saw a decent looking brunette staring back at me. She was wearing a white blouse with a short pink pleated skirt, pink stockings and heels. Underneath she had a lacy pink bra, lacy pink garter belt and pink cotton panties. \n\nShe was fixing her lipstick in preparation for fucking a masculine man with a very big cock. As she finished she squeezed her lips together and puckered a little. She was hot. I felt a tingling in my groin. \n\nNo. I was hot. \n\nI was really going to do this. I had picked up a man with a more than sizeable cock and now I was going to fuck him. In a three-some with his girlfriend. I was going to give my body to him and worship his manhood. I could see his large cock in front of me. My own penis stirred. My stomach churned. It had been slightly knotted since we got into the cab. Now the realization that he was going to fuck me and I was going to beg for it really sank in.\n\nI looked in the mirror again. I had done a good job at fixing my lipstick. I was getting better at it I thought. My penis stirred more. What was happening? Why was I thinking like this? Why did I feel some excitement thinking about his cock and seeing myself all dolled up as a woman? My stomach continued to churn with excitement and weirdness.\n\nI was a hot woman about to be taken and fucked by a masculine man.\n\nI shook my head. I had to focus. I could not think about my feelings right now. I had to make a good show of fucking, er, getting fucked by Jerome. It had to be nasty and wanton. I had to be nasty and wanton.\n\nI looked in the mirror again before I left.\n\nA lusty hot looking brunette looked back.\n\nWhen I returned I offered Janine to use my enema bulb if she wanted to. I was sure that she had a butt plug in too and wanted to keep Jerome as clean as possible since I knew his cock would be in my mouth a lot. She thanked me and headed into the bathroom.\n\nThat left me alone with Jerome. My heart began to race.\n\nJerome took me in his arms and got me back into a lip lock. I noticed the gold chain on his neck with the small key again. Odd necklace I thought once more. \n\nAs he firmly pressed his lips onto mine and I forgot about the necklace. He really liked kissing. My stomach knotted up as kissing guys was definitely not my thing. I had to keep Naughty happy so even though I did not want to, I kissed him back passionately. Once again I found myself sucking on his tongue. His cock said that he liked it. My penis stirred too. \n\nAs we kissed I was unbuttoning his shirt and he my blouse. Soon we were both shedding our tops. I unbuckled his pants and slid my hand inside his briefs and onto his hardening cock. It felt big even though it was only semi-erect. A little moan escaped his lips. My penis stirred once more.\n\nJanine rejoined us and pulled me down with her to kneel in front of Jerome. \n\nJerome stood with his hands on his hips and looked down at us with a smile. He seemed so manly, so in control. Oddly enough part of me felt it was right to be kneeling before him, knowing what he wanted next. I felt a tingling in my groin. It felt oddly arousing to be subservient to this man. To be about to worship his manly cock. A cock that I knew was much bigger than mine.\n\nJanine and I pulled his pants down and and off him together. We removed his socks and shoes too. \n\nShe then leaned towards me and began kissing me. Her lips parted after pressing lightly onto mine. It was very sensual and smooth how she kissed and then fed me her tongue. I eagerly accepted her tongue in my mouth and kissed her passionately in return. The lipstick on our lips smeared together. It was hot but not as good as with Denise.\n\nShe pulled my hands onto her breasts as we kissed, her blouse already unbuttoned. I could feel her nipples becoming erect through the lace of the bra.\n\n\"Free my tits Shauna,\" she whispered in my ear. \"Unsnap my bra so that you can play with them while we kiss,\" she continued. \"I know you want to,\" she added lustily.\n\nI slid my hands back and forth over the lacy sides of her bra. Finally my hands met behind her back and I unsnapped her lacy, white bra. It was a pushup bra with some padding below, that made her breasts seem bigger than they likely were. I brought my hands back around the front and took one of her soft breasts in each hand. \n\nHer nipples were now erect and her smallish areolas so soft. It felt so good to cup her soft yet firm breasts in my hands and fondle them. Her face was not the prettiest but she did have really nice breasts.\n\n\"I love seeing hot women kiss and play before they suck my cock and I fuck them,\" Jerome stated confidently.\n\nIt was as if that broke Janine's trance. She pulled her tongue out of my mouth and smiled up at him, \"You need our mouths don't you?\" Janine said with a naughty smile.\n\n\"Oh yeah,\" Jerome replied with a slight chuckle. \n\nJanine shed both her top and her loose bra. She and I both reached up and tugged on opposite sides of his briefs. He was getting quite hard and was more than worked up and ready for us to service him. \n\nOnce his monster cock was freed from the confines of his underwear it really began to grow. It was big. Longer than Mike's and thicker too. At the base of his cock hung two large balls. I knew that they were full of his seed. Seed that I would soon be swallowing. Part of me shuddered at that thought. My penis stirred in my panties.\n\nAnother man's seed.\n\nI could smell his muskiness. The muskiness of the large cock jutting out before him. His massive hairy balls hanging below also had a manly muskiness to them. I salivated and could already taste his cum. I should not be salivating, definitely not, I told myself. But still, I salivated.\n\nI did not have much time to ponder as soon Janine was stroking his shaft and kissing and licking her side of his manhood. I followed her lead and licked my side of his shaft and began fondling his large, hairy balls. \n\nMy mind flashed back to me kneeling before Mike Brown. Worshipping his manly cock. Fondling his big balls. Knowing that they contained the seed that I would coax out of them and swallow.\n\nJerome moaned as we began our ministrations on his cock. To my surprise his cock got even larger as it fully hardened as we began worshipping it with our tongues and mouths. The skin was soft and tasted musky. As my tongue passed over the large veins that seemed to rib his cock I could feel them throb with his pulse. He was truly turned on being with two of us.\n\nMy penis was getting stiffer in my panties.\n\nSoon we were taking turns wrapping our lips around his cock head. This made him moan more. I looked up into his eyes when I took the head of his cock in my mouth. His smile made me feel so submissive as the tip of his cock filled my mouth so fully, even with my mouth open as wide as I could. I felt my stomach churn.\n\nHis cock was so thick. \n\nI could taste his precum that was coming out of his throbbing manhood. It too was thick and kind of salty. \n\n\"You are a good cocksucker Shauna,\" he said as he moaned even more as I licked the underside of his cock. \"That feels so good.\"\n\nBeing called a cocksucker by a man made me feel some humiliation. His cock was in my mouth and I was going to suck on it. I was going to swallow his spunk. And thank him for it. That made me a cocksucker. \n\nI was a cocksucker. \n\nEven though I had been sucking cock for awhile now, that true realization made me shudder and feel even worse.\n\nJanine had maneuvered herself between his spread legs and was suckling on his balls while she stroked the base of his shaft.\n\nI alternated between sucking and licking this large cock head. My own penis was so stiff in my panties but no where near this manly. With every lick I felt more and more subservient to Jerome and his big cock. It felt wrong to feel that but I needed to surrender to that feeling.\n\nHis large cock head was firm with soft skin behind it. I took it in my mouth again. It filled my mouth it was so wide. I could lick with my tongue below the head and up the sides a bit. But I could not swirl over the top too well. \n\nI let it rest on my tongue momentarily to feel its weight and looked up into his eyes. He smiled back. I felt so feminine and so submissive in my lingerie, skirt and heels kneeling before him, sucking on his more than manly cock. \n\nHe in contrast, was so masculine. His hands were still on his hips. He struck such a commanding pose while we serviced his massive cock. His musky taste and smell filled my senses. \n\nHe moaned every time I licked his cock. All the while I lightly stroked right behind the head with my forefinger and thumb. Janine was stroking the base while she suckled on his hairy balls.\n\nAfter I had the pleasure of sucking on his cock for awhile Janine and I switched places. His hairy balls seemed even bigger when I began taking them in my mouth. I licked one then tugged on it lightly with my mouth. I heard him moaning. I took the other in my mouth. \n\nI had to worship them. I had to show him that I wanted his seed. \n\nJanine was licking the underside of his cock while I did this. It was so hot hearing her licking and sucking on such a manly cock only inches from me. I glanced and could see that her lipstick was all smeared and his cock had some on it. From both of us. \n\nShe was so into his cock. She looked mesmerized by it as she masterfully sucked, licked and stroked. She would look up into his eyes then back at the throbbing piece of manhood in her hands.\n\nSoon he was moaning faster and Janine was bobbing up and down on the end of his cock. I was now focussed on stroking the base of his shaft at an increasing pace. He was breathing so hard.\n\nWhat a hot scene it was. Her tits were lightly bouncing up and down on her chest as she bobbed up and down on his manhood.\n\n\"Uhhhnnn! I am cumming!\" he exclaimed and he began shooting his load into Janine's warm mouth. His load was so big that some dripped out of the corners of her mouth and onto her bare chest. Some dribbling on her smallish, soft pink nipples, some on the white fleshy part of her breasts. \n\nAs soon as he pulled out, she pulled my lips to hers. I then realized that she had not swallowed any of it. She pushed most of it into my mouth as we began to french kiss. It was thick but not as bitter as some cum tasted. Both our mouths were now fully coated with his cum. I shuddered a bit inside.\n\n\"Thats so fucking hot!\" Jerome exclaimed and then he headed into the bathroom. \n\nWe continued kissing. I had to swallow, several times. Even though Janine had received his cum, it was as though she wanted his seed to be in my stomach. We continued licking the insides of each other's mouths and swallowing cum. If I were watching this I would have said it was a very hot scene.\n\nJanine pulled my head to her chest. I knew what she wanted and I began to lick her erect cum covered nipples. Her tits were nice, very nice. It was very erotic to be licking cum off of such a nice pair of tits. Even if it wasn't my cum. \n\nWhat was I thinking? What was I becoming? I should be completely revolted. But I wasn't.\n\n\"That feels so good Shauna, keep licking my breasts,\" Janine said as she moaned in pleasure.\n\nOnce her nipples were clean, I followed the trail of cum with my tongue over her milky white breasts. Her tits were soft yet firm and perky. They were very nice.\n\n\"Man, this is even a hotter scene!\" exclaimed Jerome as he returned from the washroom. \"It was awesome to see you two sharing my cock and now to see you still sharing my cum... so hot.\" I looked up into his eyes. He looked back full of lust. I knew that look. He wanted me. \n\n\"Ok girls, lets move this to the bed. I want to fuck both of you with my cock,\" he said firmly. \n\nWe both pulled off our skirts, heels and got onto the bed. I thought I could see a slight bulge in Janine's panties. Must have a big mound?\n\n\"It would be hot if you both removed each other's butt plugs,\" suggested Jerome.\n\nI was right, she had one too. He must really be into anal like he said earlier.\n\n\"It would, wouldn't it?\" replied Janine as she moved towards me. I turned around and got onto all fours. She caressed my ass through my panties, tugging lightly on my plug as she passed over it. Then she hooked her fingers into my panties and pulled them over my ass and down to my knees. My garter belt was the only thing I had on above my stockings now. \n\nMy ass and butt plug were fully exposed. I felt so exposed. Part of me was glad I still had my bra on. Why? Feeling it still on lessened my feelings of exposure. Odd thoughts though.\n\n\"Your ass is so hot with that butt plug in it Shauna,\"Jerome said in his deep voice. He was standing beside the bed stroking his manhood back to hardness as he watched.\n\nAs Janine leaned over me, her smallish erect nipples pressed into my back. She began toying with my butt plug and caressing my ass. I felt a tingling in my ass as she twisted it in place then pulled it out with a pop.\n\nShe then got on all fours herself and said \"My turn!\"\n\nI pulled my panties the rest of the way off and got up and in behind her. She had a nice pair of panties on. I grabbed both sides of her purple panties and pulled them down over her ass and butt plug. As I did so a pair of shaved balls and a penis in a cage appeared tucked down between her legs. \n\nI was shocked. But I shouldn't have been. I had seen the clues.\n\nI kept staring.\n\nHer breasts were so nice and her face and voice so much like a woman's that I had not suspected that she really was a guy. She had a cock and it was in a small chastity cage. I had never seen one before, only heard that they had existed. In the middle ages. Hers was made of metal and tucked her dick down below and between her balls. There was an opening at the end for her to pee from. Precum had oozed out I assumed as it had a sheen of liquid.\n\n\"Do you like Janine's chastity cage?\" Jerome asked. \"Hot, isn't it?. It helps to keep her horny all the time. And ready for my cock. She has not been unlocked for over a month. Milked but not unlocked.\"\n\nMilked? What's that? I asked myself. But could not bring myself to ask Jerome. I think I was in a bit of shock. Things were getting surreal again. It sounded like they were into something kinky. That made me laugh inside at myself. As if what I had been doing was not kinky.\n\nI felt like I was not there but watching what was happening as thoughts flooded into my brain. Was I to become like her? Was I to have tits as nice as Janine's? To have skin as smooth and soft as hers? To able to actually pass for a woman? To almost literally become a woman? Was this the end goal of the \"project\" that Naughty referred to but would not elaborate on? How was a man so convincingly changed into a woman?\n\nJanine swayed her ass back and forth suggestively and to remind me that \"she\" was waiting for me. That brought me back into the moment. I remembered Jerome's question.\n\n\"Yes,\" I stammered in reply. \"Its hot.\"\n\nI had to keep going I reminded myself and tried snap out of it.\n\nI pulled her panties to her knees. I caressed her smooth ass as she had mine.\n\n\"What do you think Shauna, does Janine deserve to cum today?\" Jerome asked.\n\n\"Ooooh, please Jerome, I have been such a good girl. Please let me cum,\" pleaded Janine, still sounding like a girl.\n\nWhat do I say? If I say yes, I likely will have to suck her cock and swallow her seed too. I shuddered as I realized that I was salivating in my already cum coated mouth. She has not cum in over a month? That must be agonizing. I imagined myself in her place. \n\nI might be in her place. With tits like hers.\n\n\"Yes, let her cum today,\" I heard myself replying. \n\nJerome took the necklace that he was wearing off and I realized that the small key that was obviously for the cage. He reached under Janine and with a a click, the cage was opened and he pulled it off. It took him a few moments as he took care not to hurt her. \n\nFinally, her penis was freed. She sighed almost in relief. Or was it in anticipation?\n\nI could see that she was getting hard. From this angle her penis was about as big as mine it seemed. Her balls hung nicely down between her penis and her protruding butt plug. \n\n\"You like Janine's balls and penis, don't you Shauna?\" asked Jerome rhetorically.\n\n\"Yes,\" I found myself replying.\n\n\"Maybe I will let you suck the sweet jism out of her balls tonight. It would be hot to watch you blow her while I fuck your ass,\" suggested Jerome.\n\nJanine moaned. At the thought or from me playing with her plug? I realized that I was twisting it in place and tugging lightly on it. It came out sort of easily and slid back in with little resistance. Janine moaned more as I lightly thrust her plug in and out of her.\n\nI was still kind of out of it. The fear that I might become Janine would not go away.\n\n\"Lets start like that,\" stated Jerome as he got up on the bed. He moved me back onto my hands and knees and Janine was on her knees in front of me. I could hear him lubing himself up as I stared at Janine's hard penis before me. \n\nI did not see her stroke it, but it was at least as large as mine was, maybe a bit bigger. Precum was already oozing from it. She smiled down at me as I leaned forward on my hands. She moved closer. I knew what was expected. I opened my mouth to welcome her erect member. I began licking under the soft head of her throbbing penis when Jerome began to add lube to my ass. ",
        "I was to be spit roasted! That thought brought me back into reality. My own penis became erect.\n\nJanine was moaning as she had pushed her penis more into my mouth and I realized I was now sucking lightly on it in between licking its soft head. Jerome took me by the hips and I felt the head of his massive cock pressed into my anal opening.\n\nI began to moan around Janine's throbbing member as I tried to focus on sucking it while Jerome began shoving his large cock into my well lubed ass. He was big. It felt intense as he pressed himself in an inch then pulled back and pressed in again. \n\nJanine was kind of thrusting into my mouth. Her perky tits were lightly bouncing. Jerome was still working his man-meat into my ass. He had a firm grip on my hips. Instinctively I began to buck back to meet his thrusts. To try to help him get his cock into me. My ass felt so full. I so felt like I had to shit.\n\nI felt so submissive taking their cocks like this. I felt so feminine. So subservient to their needs. My emotions were thankfully mixed as I also still felt some humiliation at taking cock and doing so dressed as the woman.\n\nMy ass felt so alive.\n\nJerome was now thrusting in and out. He was still working himself in deeper. He was moaning now.\n\nI gasped and moaned uncontrollably around the cock in my mouth as I tried to slurp and suck on it. It was so hard to focus on this cock with Jerome's massive cock fucking my ass. Jerome had re-angled so that his thrusts were better stroking my prostate.  \n\nHis cock felt so good in me. It felt so right to be fucked by him. My penis was so hard and dripping precum itself. I was getting so aroused I began to shudder. My stomach did back flips. Part of me wanted to give in to the building need to give myself fully to him. I felt so very conflicted.\n\nJanine was heading towards an orgasm as her breathing had quickened. She had to keep wiping sweat off her brow. I could taste her precum in my mouth. A month locked up meant she would cum fast.\n\nJerome had built up a good rhythm and was thrusting in and out of my over-stimulated ass. \n\n\"Don't cum yet Janine,\" Jerome commanded. He kept thrusting and moaning himself.\n\nAs Janine was close, she pulled back and withdrew her cock from my mouth. She got into doggy position beside me. \n\nJerome was close. Jerome stopped thrusting. He held himself still in my ass. Then he pulled out and lubed up Janine's ass. My ass felt oddly empty. My asshole stayed open for a bit.\n\n\"Get under her Shauna. Get a close up view.\"\n\nI got under Janine sort of in a 69 position. My head was between her legs. I was staring up at her cock and balls as they hung just above my face. She smelled so musky and sweaty. Her cock had been cooped up inside that tight cock cage for a long time it seemed. Tucked under her.\n\nJerome got in behind her and began working his cock into her ass. Man was he big. He found it easier to penetrate her ass than mine. With each thrust his manly cock went several inches more into her ass. \n\nSoon he was thrusting his cock in and out and both of them were grunting and groaning. Janine's cock and balls and her tits bounced as she was fucked by Jerome. I could smell the musky scent of their sex. Every so often sweat dripped off them and onto me.\n\nJerome worked himself up to a good speed. He was really pumping in and out of her ass. They were both so into it. I was sure that Janine was going to spurt cum at any moment.\n\nSuddenly Jerome began to moan in climax. \"Uhhnnnn, Uhhhnnn!\" He thrust into her again and again. His body stiffened. He gripped her hips and held still. His balls were emptying into her.\n\n\"That was so good Janine, you have such a nice ass,\" stated Jerome as he slapped it.\n\nJerome pulled his cock out and shoved it in between her legs. It flopped onto my face. It was warm, sticky and covered in cum and lube.\n\n\"Lick me Shauna,\" he commanded. I turned my head as best I could and licked the cum and lube off of his veiny and still mostly erect cock. \"Yes, like that,\" he added.\n\nHe withdrew his cock when what I could reach was mostly clean. My face still had cum and lube from his cock.\n\nI looked up and saw cum running out of Janine's ass and down onto her balls. She spread her legs a bit and lowered her balls onto my lips. I licked them as the juices from her ass ran down onto them. It tasted of semen, lube and ass.\n\nJanine moaned.\n\n\"Thats so hot,\" exclaimed Jerome.\n\nI kept licking her warm sweaty balls as more of her anal juices leaked into my mouth. It tasted weird but not as bad as I had expected it might. She was still fully erect. \n\nAfter a couple of minutes Janine sat up straighter and positioned her anus over my mouth. \n\n\"Eat my ass out Shauna,\" Janine stated firmly.\n\nGobs of cum and anal juices were leaking out of her ass as I began to rim her still partly open asshole. \n\nI felt Jerome spreading my legs. He got in between them and raised my ass to meet his cock. He was mounting me again! How did he have this much stamina? He slid a pillow under my ass and began working his re-lubed cock into my ass.\n\nI was working my tongue into Janine's ass. More cum was coming out. But now it was mixed more with the taste of her ass. It was a strong and pungent taste. I was oddly amazed that I was doing this. It tasted kind of gross but it was surprisingly arousing to be rimming her well fucked and juicy ass.\n\nJerome had filled me up with his renewed manhood and was back into a good rhythm. He was really rubbing my prostate. I was beginning to feel strong tinglings in my ass once more. It felt good. Really good. I had to admit it. Being fucked with Janine's ass in my mouth was such an erotic turn on.\n\nJanine was moaning as was I. There was less and less cum in her ass.\n\nJerome was pressing my legs back to get a better angle on my prostate. This was beginning to feel intense!\n\nJanine got up off of me and turned to straddle my chest, almost. She angled herself and thrust her cock into my mouth again. I began to suck and lick it. She was so close, I could tell. \n\nI realized that I was eagerly servicing her orally. It felt so good to be fucked by Jerome. I had to surrender myself to this feeling. I could not deny that I wanted it.\n\nI was building to an anal orgasm. I had an intense feeling in my loins and ass. My legs felt weak in Jerome's strong hands. \"Uhhhnnn! Ahhhh!\" I moaned around Janine's pulsing cock. The feeling kept washing over me. I could feel semen coming out of my penis.\n\nThat put her over the edge and she began to cum in my mouth with a shout. I sucked and swallowed as she shot her pent up load into my mouth. She tasted more bitter than Jerome. But I kept sucking on her member.\n\nI was still climaxing! This was the longest I have ever had this intense a feeling! My entire groin and ass felt so good!\n\nThen Jerome began to cum again. \"Uhhhhnnn!\" He grunted as he began to ejaculate into my ass. He thrust then held still as he gripped my legs and shot his third load.\n\nI had been so overcome by my own powerful orgasm that I had not been swallowing Janine's cum. She came a lot more than I thought she would. It was spilling out of my mouth. As my orgasm began subsiding I began swallowing her jism again. I wrapped my lips tightly around her throbbing penis to ensure no more would leak out. It seemed right to do so. \n\nAn odd feeling of satisfaction came over me.\n\nI swallowed the last spurt from Janine's member as she pulled it out of my mouth. She sat back on my chest, straddling it once again. She smiled down at me. Her tits were covered in sweat. She looked erotically hot. Even with her flaccid cock resting on my chest.\n\nShe was so feminine and looked so much like a real woman, that I could hardly believe that I had just sucked her penis. I could see that she had one and could feel it resting on my chest. Did she start out like me? How did she get such nice tits? \n\nWas Naughty going to make me into a girl like her? Would that be the price I would have to pay to keep Denise safe? Denise! I had forgotten about her. What would my wife think? How would I explain my breasts, to everyone? A man could not have breasts like hers. A lot of thoughts and odd feelings were going through my mind and passing through my body. Part of me felt so confused and somewhat fearful.\n\nWe were all spent.\n\nI just wanted to lay there and drift off into sleep. And not think. Not feel.\n\nJerome pulled his cock out of my ass. Fluids leaked out of me and down the crack of my sweaty ass. Janine got off of me, took his cock in her mouth and cleaned him off. \n\nWhile Jerome was getting dressed Janine came back to me and lightly french kissed me a bit. My mouth had taken several loads and tasted of musky cum. Hers did too. \n\n\"We need to go,\" stated Jerome. \"You are a good lay Shauna, too bad you don't live here. We would definitely do this again. \"I will give you my number in case you are in town again, he said as he picked up a note pad from the hotel and wrote on it.\"\n\n\"Get your cage Janine, after we clean you at home I will put it back on. You can be free until then,\" he said firmly. She smiled in response.\n\nJanine and I then got up and off the bed. We all said our goodbyes. Fluid was still leaking from my ass and down onto my stockinged legs as I showed them to the door. \n\nAfter they left I reached back and stuck my finger in my ass to see how open it still was. It slid easily into my sloppy asshole. I pulled my finger out and to my surprise I stuck it in my mouth and licked it off. \n\nWhy did I do that?\n\nI felt torn inside but was wiped out so I headed to the bathroom to clean up. Just like many a woman has had to do after her man finished inside her. As I sat down on the toilet, I tried to ponder what had happened tonight. What was happening to me? I was too tired to think. \n\nI wiped my ass and stockinged legs and headed back to my bedroom. My phone pinged.\n\nI picked it up knowing that there would be a message from Naughty.\n\n\"Great job Shauna! That was very wanton and eating his cum out of her ass was nasty as was sucking on your finger afterwards,\" Naughty had typed.\n\n\"Thanks,\" was all I could say in reply. I knew that the microphones in the room would pick that up.\n\n\"Denise got to watch the whole thing with a live feed I sent her. By herself,\" continued Naughty.\n\nI sighed in relief. I was sure that she would be ok but it was reassuring to know I had kept her safe.\n\n\"She cried for joy when you came back and she saw that his cock was massive. She was glued to the screen of her phone. She fingered herself throughout and came several times,\" added Naughty.\n\n\"I am glad,\" I replied. \n\n\"Have a good sleep,\" was Naughty's last text. \n\n\"Night.\" I said in reply. \n\nI took off my bra, garter belt and stained stockings. I put my night clothes on, shut the lights off and climbed under the covers. \n\nI heard Denise enter our bedroom. She immediately crawled in behind me and snuggled up to me. She wrapped her arms around me, held me tightly and kissed me on the neck several times. I took her hands in mine. I could feel that she had her wedding rings on still which I lightly played with. \n\nNo words were said between us. None were needed.\n\nBefore I knew it, I had fallen asleep in her arms."
    ],
    "authorname": "NaughtyOne88",
    "tags": [
        "forced feminization",
        "lingerie",
        "forced",
        "blackmail",
        "big cock",
        "crossdressing",
        "humiliation",
        "blowjob",
        "anal",
        "creampie"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/my-videochat-error-ch-14"
}