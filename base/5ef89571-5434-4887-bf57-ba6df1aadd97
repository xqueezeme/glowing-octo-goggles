{
    "title": "Monsters in the Mountains Ch. 02",
    "pages": [
        "The following week seemed to drag by for Jordan. He trained his replacement, Mike, for 10 hours a day, then went home each night to pack his small condo. \n\nHe lived a fairly Spartan existence, and everything would fit into a pile of boxes in his living room, except for his bed, dresser, television and a futon that doubled as his sofa and guest bed. \n\nHe figured that he would have to take the following weekend away from his new family of Bigfoot to get himself moved. He would have to ask a friend for some help loading the bigger items in his truck, but he could move the boxes himself. He estimated 2 trips, and possibly a third to come back and clean.\n\nJordan felt bad for leaving his work in such a bad place. Mike wasn't an ideal candidate to replace him. He couldn't read a soil compaction table to save his life, and Jordan was constantly correcting Mike's mistakes, only to watch him make the same ones. \n\nOn Wednesday and Thursday, Jordan was called out to a job site where a commercial job on a hillside had started to settle. It wasn't his or his company's mistake, but he brought Mike along in the hopes that his replacement could fix it. He had to hold the man's hand, figuratively, while he figured out the retaining wall and pylons that would be needed to permanently stabilize the foundation and support the load of the building and parking lot. \n\nHe climbed into bed, exhausted each night, and called Megan before he fell asleep. She hadn't calmed down yet about her experience the previous weekend. She had written a report to her superiors in the organization, and was receiving a lot of professional attention, which she was loving.\n\nMegan was spending the week preparing for their next visit, and was full of bubbling energy, which Jordan found infectious, in spite of his tired state. She had her first ASL lessons planned, with grape rewards for participation. She had special bands made for her fit bits that would stretch big enough for the Bigfoot, and she had a smartphone app that could read multiple sensors at a time. \n\nMegan also had gotten a portable ultrasound device to check on the status of the pregnant females and measure their development. She was especially thrilled about this, because no one had ever studied a pregnant female Bigfoot that wasn't under sedation, and no one had ever managed repeat visits. \n\nFriday night finally rolled around. Jordan made his usual shopping trip, stocking up on provisions to feed his family of giants. He spent over $150 on groceries, and had a cart piled high with meat, fruit, vegetables, grains and dried fruits and nuts.  \n\nHe packed them in his saddlebags, and tried to get to bed early. He had agreed to meet Megan at 10 in the morning, which meant leaving at sunrise. He was too excited to sleep, and woke often to look at the clock.\n\n***\n\nJordan sprung awake at 4:55 AM the following morning, 5 minutes before his alarm was set to go off. He was showered, dressed, fed and packed by 5:30, and decided to get on the road to beat Megan to the trading post where they were supposed to meet.\n\nShe was there at 9:30 when Jordan pulled up. She crooked her finger at him, and gave him a big kiss before she asked him to join her in her jeep. \n\n\"Dr. Stein has a bunch of stuff he wants to talk to us about. I think we've made his life this week pretty hard. Interesting, but hard. He's waiting on our call.\" She said. \n\nMegan pulled out a tablet, and pulled up the Skype application. In a minute, Dr. Stein's face appeared on the screen. He wore dark glasses this time, which somehow made him look more distinguished.\n\n\"Good morning Jordan and Megan. I hope you're both ready for another exciting weekend of research.\" He said cheerfully.\n\n\"Of course, I could barely sleep last night I was so excited.\" Megan bubbled.\n\n\"Great. Listen, I've got a bunch of things I want to talk with you guys about. \n\n\"Jordan first: Your permits have all been approved and signed off on for the building of your cabin. The inspections are complete and on file with the county.\" He said.\n\n\"Don't you need the floor design and specifications of my cabin? I don't even have the foundation in yet. How can you have it approved already?\" Jordan wondered.\n\n\"Jordan, you're a civil engineer, right?\" Dr. Stein asked. Jordan nodded. What's the recommended roof load capacity for the elevation at which you're building your cabin?\" \n\n\"Above 9000 feet elevation, they recommend 70 pounds per square foot, but the winds get pretty bad, and given the damage done to my other cabin by the local wildlife, I was going to plan on doubling that. I have some CAD drawings, but they aren't completed yet.\" Jordan answered.\n\n\"I think you'll be fine. Inspections are so some yahoo doesn't try living in an unsafe structure. I have no doubt what you build will still be standing in 200 years. Send us those CAD drawings when complete, and we'll get the county's file updated. \n\n\"We also have approved a little gift for you. Megan tells us you estimate another thousand pounds of dry cement mix and 300 pounds of rebar for foundation and septic tank?\" Dr. Stein asked. Jordan nodded. \"A national guard helicopter will be delivering a pallet of supplies tomorrow around noon. \n\n\"When you hear the helicopter coming, we want you to wave the orange flag Megan has in our care package, and plant it where you want them dropped.\" \n\n\"That's incredibly generous. Thank you!\" Jordan answered. \n\n\"There's more. A moving team will show up at your house on Friday morning before you leave for work. Leave your keys with them. Once you are moved out, a cleaning crew will come by to take care of your condo. We have already vacated your lease, so when you are done with work on Friday, head straight for your new apartment in Gunnison. Megan will give you the address.\" Dr. Stein said.\n\n\"This is too generous. I don't know how I can repay you for everything you are doing for me.\" Jordan said.\n\n\"Jordan, we asked you to keep a secret, and you did. Then we asked you to share your time and land with us, and you agreed. We also asked you to quit your job and move half-way across the state to go back to school and get a degree so that you can come work for us, and you did. \n\n\"We take care of our own. We have considerable resources at our disposal, and I don't think you understand what an incredible resource you have been, and will continue to be in the future. We are investing in you, and we expect that it will pay dividends.\" Dr. Stein answered with a kind smile. \n\n\"But, permits and National Guard helicopters, tuition, movers and building supplies? That's a lot.\" Jordan said. \n\n\"Jordan, since the beginning of this year, there have been over 500 human encounters with Bigfoot reported to us. Most of them were at night, or at a distance, but we still have had to intercept 14 videos taken as good as or better than the Patterson footage. We have to create hoaxes just to keep the real videos that slip through looking fake.\n\n\"Every day is a scramble for our organization to stay ahead of the general public and their curiosity. Ten years ago, we wouldn't expect half of that number of videos in a whole year. Now every hiker, hunter and camper had a camera and camcorder in their pockets. Once the technology gives them night vision, or telescoping lenses, the jig is up.\n\n\"Add the cheap trail-cams hitting the market, and our job gets even harder. One silver lining is those new trail cams with the wireless data connections that will email the pictures to you. We have a back door into their servers, which allows a nerd at a computer to screen the pictures before their owner sees them.\n\n\"Sooner or later, the general public will find out about the existence of Bigfoot. We have legislation crafted to protect them, scientific papers and books written, videos made. We can't afford to be made out for the conspiracy that we really are, and will not cross certain lines to keep it a secret.\n\nWhether it's tomorrow or 10 years from now, the general public will be made aware of Bigfoot's existence, and our organization's focus will shift from concealing to protecting the species. \n\n\"You still don't seem to understand what a big deal you are. I've been in meetings all week long, and the sole subject has been you, and Megan's report about you. Like it or not, you are an ambassador to the Bigfoot, and your ladies are going to be the Bigfoot's ambassadors to the world. \n\n\"When that day comes, we are going to need to show social, peaceful interactions between you and your ladies...and Megan of course. We are going to need to dispel the public panic of the monsters in the mountains, and in the woods. \n\n\"In the meantime, we need to fill the holes in our knowledge. Megan is the best we have at what she does. Two pregnant Bigfoot to study, two toddlers, and several other adult females, and Megan has been accepted into their lair. We expect great things from her and you. \n\n\"The next action item is the annual Bigfoot conference. You just missed the conference this year, but we would like for you and Megan to be prepared to present at next year's conference in Salt Fork, Ohio. It will be the weekend of May 16th. About 25% of the attendees are crazies who have no idea what's truth and myth, but are excited anyways. They provide camouflage for the rest of us. \n\n\"Half of the rest of us will play the part of skeptics, but are really 'in the know,' and the other half will play 'believers.' If anyone asks you your thoughts on Bigfoot, you can choose whether to be a 'skeptic' or a 'believer,' but steer away from statistics and facts. \n\n\"It took me forever to stop saying 'evidence supports the existence of Bigfoot,' after I found out, and start saying 'I believe.' Framing the issue as a matter of faith in the scientific community allows us to keep talking about it, educating the public while keeping their existence and our knowledge a secret. \n\n\"Next action item. We monitor populations weekly by infrared on a small aircraft. Part of the duty of an alpha is to mark his territory with his musk as a warning to keep other males out. Since the death of the alpha on your property, we have detected two paired individuals sniffing around his old territory as the scents have faded. We're guessing two males, but it could be a male and female.\n\n\"In the care package we sent to Megan are two large spray bottles of synthesized Bigfoot musk. You need to go around and spray trees all around the valley where your ladies live, especially the northern boundary where there have been incursions. \n\n\"Luckily the girls haven't had to forage far from home since you are feeding them, but sooner or later they will encounter the interlopers if you don't protect your turf. The spray is a good first defense. We made it extra aggressive.\" Dr. Stein announced proudly.\n\n\"That sounds like it was expensive.\" Jordan answered.\n\n\"Not at all.\" Dr. Stein answered. \"The mercaptan and thiol musk molecules are common to most animals of the weasel family and some others, and we have a fairly inexpensive mix of that. They are personalized by the individual bacteria on the male's armpits and crotch. We simply grew up a culture of Bigfoot sweat, mixed it with skunk and beaver gland extracts, bottled it and sent it to you. \n\n\"The health of an individual is determined by the strength of his musk smell on the trees and rocks, so don't be stingy. We will keep you in a supply of the stuff for as long as there are challengers to your place in the group. Use it heavy, and use it often. \n\n\"The final thing is that we have installed a cell repeater with line of sight to your valley. You want to talk about expensive and pulling strings, Jordan? That was a feat. Getting a cell tower with 4G data and power installed on a mountaintop in the middle of national forest land in 5 days is about the limit of my power. The other stuff was a cakewalk by comparison. \n\n\"You will have cell service. We will also take over your cell phone plans, and you have unlimited data, so feel free to skype with me or anyone else any time. If you run into trouble on the property, help is now a phone call away. \n\n\"Oh, also We will hopefully be sending both of you to classes this fall for field medical courses, videography and public speaking, along with some others that will be required should you still be working with us when everything goes public. \n\n\"We have high expectations of both of you, and we know you won't let us down. We just want to make sure we keep you prepared for when it happens. Megan, you will be more famous than Jane Goodall, so be mentally prepared for that. \n\n\"I think that's it for today. Kaitlin will be moving to town next weekend, the same time as you, Jordan. We'll let you use your discretion about what you to tell her about your group and its dynamics, and when or if you are ready to take her along with you. \n\n\"You two be careful up there today, and keep in touch.\" Dr. Stein said. They all said their goodbyes, and signed off. \n\nIt was 11 AM now, and Megan transferred her backpack to Jordan's truck. \n\n***\n\nBy noon, Jordan and Megan pulled up to the cabin on Jordan's motorcycle. Jordan once again considered widening the road and installing a gate, but the narrow trail limited access to curious campers. He would have to ask Dr. Stein about a better parking spot for his truck. Megan thought he would be agreeable \n\n\"Aahh. Home again.\" Megan giggled. \"It's crazy, but this crappy little isolated cabin really does feel like home after only 24 hours, and not even having slept here one night.\"\n\n\"I know what you mean.\" Jordan said. \"I wouldn't want to live here over the winter, but if I didn't have to work on Monday, there's no way I would go back for weeks. Once I get my big cabin built, I think I could spend the rest of my life in this valley, leaving only for food and the occasional social visits to friends and family.\"\n\n\"Mmmm. That sounds nice.\" Megan said, walking inside and taking her backpack off, and dropping a red duffle in a corner. \"I brought a totally different set of stuff this time compared to last time. Lots of medical devices and stuff. \n\n\"Check this out.\" She said, bringing a little device the size of a walnut attached to a long, white cord. \"I plug it into my smartphone, and it turns it into an ultrasound.\" Megan plugged it in and opened the app, demonstrating for Jordan on her own taut stomach. \n\n\"I can even take measurements as the babies develop. Also, I also got these extra big elastic bracelets for the Fitbits. I was thinking we could each wear them, and give them to the ladies as 'gifts.' That way, they might think they are special, and keep them on.\" \n\n\"Makes sense.\" Jordan said, accepting one on each wrist, just like Megan had. \n\nJust then, the cabin darkened, and they both turned to see Jane standing in the doorway. She rushed to Jordan's arms, huffing and grunting into his neck. Jordan looked at Megan who was crying. \n\n\"Shut up, don't look at me.\" She laughed through her tears. \n\nJane broke free from Jordan and approached Megan, sniffing her hair, and giving a little nuzzle, though not as excited about Megan as she was about Jordan. \n\nJane touched the Fitbit bracelet on Megan's wrist, and pulled at it, intrigued by the bright pink color. Megan showed it to her, and offered it to the giant, who put it on her own wrist like a decoration. She gave Megan a big nuzzle after that, and even spent a minute taking Megan's braid out, and 'grooming' her hair, which now looked like a bird's nest. \n\nJordan gave Jane some vegetables to get started. She was unsure what to make of an avocado, so Jordan cut it open and removed the pit. She scooped the green goo out with her finger, and ate it slowly, taking an apple and a cucumber when it was gone. \n\nJordan gave her a paper bag full of food, and she took it out the door and down the hill in the direction of the mine where the family most likely slept. \n\n\"I know we have a lot of work to do, spraying musk on trees and all, but...\" Megan slowly unbuttoned her shirt. \"I've been thinking about you all week. I don't know how much I'm going to get you to myself this weekend...\" \n\nMegan was wearing a lacy pink bra underneath, and she slowly, teasingly took her shirt off. \"...so I'm thinking, let's make hay while the sun shines.\"\n\nShe crossed the room, shimmying out of her jeans as she walked, leaving matching pink lace panties on. She wrapped her arms around Jordan's neck, and brought him down for a kiss. \n\nMegan's tongue darted out, and when Jordan brought his own out to meet it, Megan gently snatched it with her teeth, and nibbled, smiling. Her eyes were alight with lust, and she kept kissing Jordan, each touch filled with need. \n\n\"I need you naked, right now.\" Megan said, and started tugging at the bottom of Jordan's shirt. They broke their kiss long enough to get the t-shirt over Jordan's head, and then met again as Megan fumbled with the belt on Jordan's shorts. \n\n\"Hold on.\" She said, and closed the cabin door, latching it. \"I don't want to get interrupted this time.\" \n\nMegan dropped Jordan's shorts and boxers together, pushing him down in the old wooden chair, and tugging off his shoes. \n\nShe straddled him, still wearing her bra and panties, and proceeded to give Jordan a lap dance, despite the lack of music. She took his hands and guided them to the clasp on her bra when she was ready.\n\nAs the garment fell away, Megan ran her hands through his hair, and pulled on the back of his head to bring his mouth to her nipple. She gasped as his warm mouth took her in, and gently licked and sucked the hard nipple. \n\nJordan had been hard before she sat down, and Megan's teasing had him painfully erect against her clothed crotch. \n\n\"Is that for little old me?\" Megan asked, rubbing the hard length between her legs. Jordan groaned at the increased friction. \n\nShe rose from his lap, looking at the swollen, red appendage sticking straight out. \"Oh, you look like you're ready to burst.\" She said, wrapping one hand around it, and sinking to her knees. \"I think I'd better take good care of this before I start riding it, or you won't last a minute.\" She said with a teasing smirk.\n\nMegan's tongue came out, and curled around the underside of his shaft. She licked slowly upwards to the head, where she engulfed him as she came back down. Her brilliant blue eyes looked up into Jordan's as she lowered herself down until he hit the back of her mouth. \"Mmmm.\" She moaned onto his cock as it hit the back, and started to ease past the opening into her throat. \n\nShe came off gasping for air, and began pumping Jordan's cock hard with her mouth and hand, still moaning a little, creating vibrations on the head. She was right. Jordan only lasted a minute before he felt his climax approaching. \n\n\"Oh god, Megan, I'm there. I'm...\" He gasped out.\n\n\"Mmhhmm!\" Megan moaned out around her mouthful of cock. \n\nJordan's legs went numb, and his hips rocked out of his control as he fired load after load of hot liquid into Megan's mouth. He saw her try to swallow, but a little dripped out of her mouth and dribbled down her chin. \n\nMegan cleaned Jordan off, scooping the dribble of cum off her chin and into her mouth. \n\n\"There, doesn't that feel better?\" She asked teasingly. \n\n\"You're amazing.\" He said. \n\n\"The benefits of being with an older woman.\" She laughed.\n\n\"You're 32. I'm only 6 years younger than you.\" Jordan responded. \n\n\"I know, but guys always seem to go for younger women. We may have more sagging and our clocks are ticking, but I defy you to find a college girl who can deliver a blowjob as good as me.\" She giggled. \n\n\"Challenge accepted.\" Jordan joked. \n\nMegan slapped his thigh, laughing before taking his flagging erection into her mouth, and quickly bringing the iron back into it. \n\n\"There, now that the first one's out of the way, I want you to fuck me as good as you did last weekend... Better if you can manage. If I have to share you with 6... I mean 5 other ladies this weekend, you'd better leave me bowlegged and wincing at the thought of doing this again.\" Megan said with a wicked smile on her face.",
        "Jordan was still sitting on the chair, and Megan climbed on top, straddling him, and sitting on his lap, guiding his cock between her folds. She was soaking wet, and she took him in with only a few wipes to spread her lips and her lubrication over his swollen head.\n\n\"Aahhh!\" She moaned. \"I'm so looking forward to you living in town with me. My door and my legs are open any time you want more of this.\" She laughed. \n\nThe chair was short enough that Megan could reach the floor with her toes, and used the leverage to rock back and forth hard on Jordan's cock, bringing herself quickly to orgasm. \n\nJordan could feel the tightness starting around his cock, and he latched onto one nipple, sucking and biting gently. His other hand slid down her ass, and applied gentle pressure to her puckered brown hole, not hard enough to push inside.\n\n\"Oh Jesus, Jordan!\" Megan screamed, and she came hard, squirting again, all over Jordan's cock. He could feel her warm, sticky fluid drip down, coating his balls, and pooling on the wooden seat of the chair where it immediately started to cool.\n\nMegan was still twitching, rocking her hips through the aftershocks of the biggest orgasm she'd ever had. She tried moving her hips again, but her legs were numb, and she couldn't get a rhythm going with her feet on the floor not responding.\n\nJordan solved the problem by picking her up, and carrying her over to the bed. The air mattress was starting to deflate a little, but Jordan laid her on the edge, his own feet still firmly planted on the ground. \n\nMegan sunk into the air cushion, still attached to Jordan. He began sawing in and out of her with long, firm strokes, and Megan was delirious with lust and sensation. Her face was beet red, and a bright blush extended from her neck down her chest. She was breathing hard, and Jordan thought she was approaching another climax.\n\nSure enough, after a few minutes of this position, Megan shook through another big orgasm, screaming at first, then she covered her eyes with her arm, and seemed to grow quiet and still. Jordan slowed, and stopped.\n\n\"You okay baby?\" He asked, moving her arm. Megan's eyes were closed, and she appeared to be sleeping. He could still see her chest rising and falling fast, struggling for oxygen. He pulled out of her and stood over her unconscious body, marveling at her beauty. Her dirty-blonde hair spread out around her head in a yellowish halo, and her flawless, pale skin glowed with the thin sheen of sweat. \n\nMegan had a half-smile stuck on her face, and seemed to be truly at peace. Jordan heard a whistling sound outside, and guessed that Jane had returned. He went to open a window, and Megan seemed to stir at the sound. \n\n\"No, we're not done yet. You open that door, and you're dead meat.\" She muttered, half-conscious. \n\n\"I don't think you're in any condition to continue.\" Jordan told her, leaning over to kiss her forehead gently. \n\n\"Maybe if you didn't give such an impressive dicking, we wouldn't be in this situation.\" She laughed, and Jordan followed. \"There's nothing wrong with just giving a girl a few mind-blowing orgasms. You don't have to make her pass out.\" They laughed again. \"Get back over here. I'm awake, and I'll be damned if I'm leaving this cabin before I feel you finish inside of me.\"\n\nJordan needed no more invitation than that, and positioned himself between her spread legs. \n\n\"Oooh.\" Megan winced. \"Sensitive. Go slow at first.\" \n\nJordan obeyed, and worked his way up into a nice rhythm. Megan was moaning on the bed, but she was fully awake, and her sapphire blue eyes intently met his, a look of concentration on her face. \n\n\"Okay, I'm about to come again, and I can't take much more of this. You'd better come with me.\" Megan warned.\n\n\"Almost... there...\" Jordan gasped, staring into those blue pools, taking in the halo of blonde hair and the small, perky breasts, which bounced as he slammed her tight body over and over again. \n\nJordan came hard, his legs shaking under him, and he had to put his hands down on the bed for support. He kept his hips bucking for a little more stimulation, just to keep his orgasm going as long as he could. \n\nMegan cried out when she felt Jordan swell within her, and she could feel the hot liquid come pouring out of the man and bathing deep inside of her. She had been right on the cusp of her own climax, waiting for Jordan, holding back as best she could. When she saw his face screw up and felt him coming deep inside of her, she couldn't hold back anymore, even if she wanted to. \n\nJordan again felt the now familiar wetness of Megan's come, mixing with his own, and dripping down the inside of his legs. He slowly withdrew and saw the mess on Megan's own thighs, and running down the crack of her shapely ass.\n\nHe ran for the roll of toilet paper, ripping off a few sheets before taking it to her, and helping her clean up. \n\n\"I don't know what the hell you do to me. I've had plenty of good sex before, but I've never squirted like that, and DEFINITELY never passed out before.\" Megan smiled, looking up from wiping her thighs with wads of TP. \"You're trouble, mister.\" \n\nJordan brought Megan a bottle of water, and opened the door for Jane, who stood outside, looking like a kid who got left behind. \n\n\"Oh, poor thing!\" Megan said, reaching her hand out to Jane. She was naked still, and patted the floor in front of her, offering to groom. Jane accepted, and Megan set to work combing her fingers through the soft brown fur and releasing mats.\n\nJordan was surprised when his phone rang. He answered it and put it on speakerphone, seeing that it was Dr. Stein.\n\n\"Hey guys. I see that the cell tower is working, thank god. \n\n\"I just wanted you to know that you're still wearing your Fitbits, and the data is being streamed to our offices.\"\n\nMegan's face had been starting to lose its blush, which came back with a vengeance. Her eyebrows rose, and she appeared to pass red and turn purple. She covered her mouth, and gave a nervous laugh.\n\n\"So... I guess some congratulations are in order. It looks like one of you may have passed out for a while there, and if you want privacy in the future, I suggest that you take those off. Also, we have a third specimen wearing a sensor. So congratulations on your first successful tagging, although we should probably put the receivers in a place where we don't lose the signal when they move around. We will add another cell phone to your kit for next time, and you can leave it near the mine entrance.\n\n\"I just wanted you to know before we had a whole day's worth of data on you two. We already knew you had a relationship, but don't want you to be too embarrassed, and we really need that kind of data from the Bigfoot, not you two.\" Dr. Stein said. Jordan could hear the smile in his tone as he spoke. \n\nThey said their goodbyes, and Jordan hung up. \n\n\"Oh my god! I've never been this embarrassed my whole life!\" Megan said, taking off her Fitbit bracelet and throwing it at Jordan. She was laughing, so he hoped she wasn't too mad. Jordan wondered how many people knew that he and Megan were fucking, and how many had access to the data. He was a little embarrassed, but had to laugh at the situation. \n\n***\n\nJane's eyes were on Jordan as he moved around the cabin, especially on his cock. Megan was working on getting her stitches out with a pocket knife and pair of tweezers when Jane rose and crossed the room, picking Jordan up. \n\nHe panicked when she sat him on the side of the bed, and moved her mouth to his cock. Jane pursed her lips and took him inside, licking and sucking on his flaccid cock. Jordan was a little embarrassed that his erection was more from fear than lust, but he was getting hard.\n\n\"That's amazing. I started with a blowjob the last time she was here with us in the cabin, the first time I met her. Now I wish I knew if that's a natural or learned behavior.\" Megan bubbled. \"Hey, do you think you could try to get one of the other females that's never seen a blowjob to attempt one on you? Maybe Wilma, she seems fun enough to try it?\"\n\nJordan looked at his human friend, while a furry giant awkwardly fellated him back to hardness. \"Seriously?\" He asked. \n\n\"Hey, that's why we're here.\" She laughed. \n\n\"To find out if Bigfoot gives good blowjobs?\" Jordan asked, smiling.\n\n\"It's not the quality of blowjobs I'm interested in. If they do it in the wild, that might mean that our common ancestor, on the plains of Africa were giving each other BJs. I know bonobos do it, but it's certainly not common in other great ape species. \n\n\"This may be the only time that we get to test that theory in the wild, before they all see Jane doing it. All you have to do is wave that thing in Wilma's face, and see if she takes it in her mouth.\" Megan pleaded.\n\n\"And if she bites it off?\" Jordan asked. \n\nMegan blushed again, and then paled. \"She wouldn't do that, would she? She's so sweet and gentle. I'd keep it away from Sarah, and probably Ginger. They might try biting. I'm sure Jill would also give a BJ if she knows what it is.\" \n\n\"I'll try it, but you'll owe me bigtime.\" Jordan agreed. Megan smiled and nodded.\n\nJane finished getting Jordan hard, and pulled him against the wall in a standing position, with her facing away from him, and bracing herself on the wall of the cabin. Jordan eased into her from behind. \n\nJane was just tall enough to squat down a little, and the position wasn't awkward for Jordan at all. He entered her from behind, and once again wrapped one arm around her chest, fondling a heavy, fur covered breast. The other arm went lower, reaching for and finding her clit. He rubbed circles around the hard nub, bringing it up out of its hood. \n\nJane arched her back, and immediately hit her climax, screaming out in release. Jordan looked over at Megan, who was fascinated, watching the scene play out with her mouth open. Jane jerked her hips back, and whimpered. \n\nJordan had already finished twice, and knew that his orgasm was still far off. He slammed his hips up into Jane, fucking her rough and hard. She was still surprisingly tight, but her big body could take a pounding. She looked down over her shoulder at Jordan, and he could see lust in her human eyes, and love too. \n\nHe removed the hand from her big breast, and gently caressed her cheek before burying his face in her neck, and nuzzling her. That was the trigger for Jane's second orgasm. Jane arched her back again, making deep grunts as she reached release. \n\nShe stood up straight, dislodging Jordan's cock from inside of her. She lay on her back on the bed, and Jordan came over to lay between her hips. Jane pursed her lips, clearly wanting a 'human' kiss. Jordan complied, and planted his lips over her brown, furry lips. Her face fur was soft and wispy, and he briefly wondered what she would look like shaved, before focusing on the kiss.\n\nHe ended the kiss by nuzzling her neck, which she grunted in pleasure at. She reached down, finding Jordan's cock, and eased it into her folds. She was like the world's biggest, warmest teddy bear, and Jordan buried his face in her neck, luxuriating in the feeling of the soft fur all over his chest and face, the warm spicy musk, and the hot wet pussy, gripping his cock. \n\nHe began fucking her slowly; gently, never wanting the embrace to end. He felt movement on the bed, and raised his head out of Jane's neck to see Megan moving in close. \n\n\"I've never been so jealous of a Bigfoot before... or a man.\" She whispered, and kissed his cheek.\n\nJordan smiled and buried his face once again. Jane's hands and furry arms explored his back and ass, softly rubbing up and down his naked skin. Minutes passed, and Jordan lost track of time. Jane had several little orgasms, coming closer together as she built to one big one. \n\nJordan was surprised to feel himself beginning to reach climax, and began moving just a little faster, thrusting a little harder. His hand found her large breast, and he squeezed, pinching the nipple. Jane's pussy clamped hard on his cock, milking it.  \n\nThat was enough, and Jordan released himself into her with a groan. The slow, luxurious fucking led him to a slow and intense orgasm. It seemed to keep going, on and on while Jane's pussy kept clutching and milking him. \n\nJordan lay there for a long time afterwards, nuzzling the soft fur on her neck, while Jane cradled his body, gently keeping him in place on her. He hoped this moment would never end, but Megan cleared her throat to get his attention. \n\nHe looked up and she was fully dressed again, her shirt unbuttoned just enough to show off the pink bra underneath. She held up the spray bottles of musk, shaking them as though to remind him of their job. \n\nJordan reluctantly pulled himself up off of and out of Jane. She made an adorable little whimper as he left. He looked down at her broad body, and saw the imprint his body had left behind in her soft fur. He immediately wished he was there instead of standing, looking for his clothes. \n\n\"Alright, lover-boy. Let's get some stinky shit spread around before trouble comes calling.\" Megan said, opening the door, and spraying the outside.\n\nShe sniffed, inhaling deeply and started coughing. \"Oh shit. This stuff is nasty. We'll keep those bigfoot out on smell alone.\" She said. \n\nJordan moved forward and inhaled lightly. It smelled just about like the big alpha had, with a few minor differences. It definitely burned the nose and throat. \n\nJane rose off the bed, going from relaxed to irritated in an instant. She sniffed the door, carefully licking her lips and really getting the musk in her nose. She gave several loud grunts, and looked around for the source of the offending odor.\n\nOnce dressed, Megan handed Jordan the bottle. \"Do you have any idea what the borders of our territory are supposed to be?\" Jordan asked. \n\n\"Natural landmarks are usually borders. Streams, mountain ridges, rock piles and meadows to name a few. Let's start to the north, where the interlopers were spotted, and see if we can't get them run off. Then we can secure the rest of your borders when we get more.\" She answered.\n\nThey walked together beyond the northern border of the property. They found some promising rock piles, which they sprayed, then walked along the edge of a meadow, misting every other tree as they went. They crossed down, through the valley, over the brook and back up the hills on the other side, hitting trees and rocks with a spray of nasty musk as they went. \n\n\"Are you sure this will work? What if the musk is just a challenge?\" Jordan asked. \n\n\"It's definitely a challenge. It's supposed to say that a big, bad Mofo lives here, and don't enter unless you want your head smashed in.\" Megan answered. \"I told you, I've seen some of these fights. They get real violent, and the males only test the occupants if they think they're weak. Based on everything we know, this stuff should advertise a bad tempered giant in perfect health. They'd be crazy to test that, knowing what's at stake.\"\n\nJordan and Megan hiked along, spraying until both bottles were empty before heading back. \n\n\"I think that ought to do it.\" Megan said. \n\nShe was quiet as they hiked, but then said \"Do you think they'll let us sleep in their cave again tonight?\" She asked. \"The way you were laying on Jane, she just looked like the world's softest bed. No offense to your cabin, but I'd love to fall asleep again in a pile of soft fur and warm bodies.\" Megan said, wrapping her arms around her body. Night was starting to fall, and she was shivering as the spring wind blew cold up on the mountainside. \n\n\"I don't see why not, we're part of the family.\" Jordan answered. They stepped out of the forest, and into a high, rocky meadow overlooking the valley below. \n\nThe cabin looked like a model way down on the edge of the forest below them. The sun was starting to turn orange as it set, and bathed the bluish green forest in an unnatural looking light for as far as the eye could see. \n\n\"Jesus. I've been all over the world, and seen some pretty amazing views, but this is... I've never seen anything like this.\" Megan said. Jordan looked over and a tear ran down her cheek. \"Shut up!\" She laughed when he looked at her. \"It's just so damn beautiful is all. And I must have something in my eye.\"\n\nMegan sat on a long, flat rock covered in lichens. \"Sit with me?\" She asked. Jordan sat. \"You know Jane's in love with you, right?\" She asked. Jordan nodded slowly. \"Are you in love with her?\" \n\nJordan didn't respond for a while, then said. \"It's hard. I feel so deeply for her. I'd give my life for her, nearly did once, and she nearly gave her life for me. But... we've never had a conversation. We can't communicate; we can't tell jokes, share stories.\n\n\"It doesn't diminish what I feel for you, or for any other member of the group. I love what we have and I don't want that to end because I am in love with a creature that can't even tell me what's on her mind. Does that make sense?\" Jordan asked. \n\n\"Of course. I'm not asking if you're going to marry her or to choose between us. I love that there is a kind of love that can thrive incommunicado, and that you are capable of that. I meant what I said, that I'm jealous of Jane. What the two of you have is amazing, but I also love what we have, you and I. She took his hand in both of hers, kissing it.\n\n\"I'm living my dream out here. Watching a beautiful sunset with a handsome man, surrounded by wildflowers, and walking bowlegged from a masterful round of fucking.\" Megan smiled, and bumped Jordan's shoulder with hers, which made him smile. \n\n\"I have a career that pays incredibly well for something that I almost went and did for free. For the first time ever, instead of chasing calls in the night and blurs on an infrared camera, I'm interacting with and studying my subjects up close. I'm just so freaking happy right now.\" Megan sobbed, and Jordan put an arm around her. \n\n\"You said that the closest you had ever gotten was when Jane was outside the cabin. If 500 people have accidentally run into Bigfoot so far this year, how come you've never gotten closer to an animal you were actively searching for?\" Jordan asked her.\n\n\"That was intentional. I kept my distance to observe without interfering. If they'd known I was there, they would have acted differently. I watched the same males over the course of several years, and found one small group with one or two females. I spent hours watching them build shelters and gathering food, and a few rare moments of interaction.\" \n\n\"They're going to be waking up soon, and I only have one flashlight. Let's get down the hill before it's totally dark out.\" Jordan said.\n\n***\n\nIt was dark as the two humans returned to the cabin. The whole gang had gathered around the cabin door, taking turns sniffing the musk. They seemed agitated, and angry, but very relieved and happy to see Jordan. Less so with Megan. \n\nJordan even got a neck nuzzle from Sarah, who embraced him before jumping back, wary of Megan. Jordan brought the food out, and everyone ate, including Jordan and Megan. \n\nLittle Pebbles was still breastfeeding, and Wilma let her latch on while she killed a bunch of bananas, a handful of apples, 2 cucumbers, a whole pound of baby carrots, a whole roasted turkey breast and a pound of oatmeal. Jordan kept the food going, and saw Wilma get a bag of almonds and a bag of raisins, though he didn't see her eating them. \n\nGinger noticed the green Fitbit on Jordan's wrist, and the pink one on Jane's. She picked at it, and Jordan took it off his wrist, and put it on hers. It looked tiny on her massive, red fur-covered arms, but she seemed to like the jewelry, and played with it while she sat and ate her own feast.\n\nThe group was happy, clucking and chirping with mouths full and bellies filling up, sitting and rolling in the tall grass near the cabin. The giants were restless, having just woken up, and were soon on their feet, calling out, getting ready to run. ",
        "Jordan and Megan had been up all day, and had just gone for a long hike. They were exhausted, and in no shape to follow the shrieking Bigfoot women through the woods and up the mountains. They returned inside the cabin, but the musk had permeated the little space, and the inside smelled like a skunk had sprayed a high school boy's locker room. They opened the cabin windows and went for a walk, down to the mine where they hoped to spend the night. \n\n\"I should probably be out with them, observing, but you wore me out today.\" Megan complained. \"You're the alpha now, next time you can go spread your own stinky shit all over creation.\" \n\nJordan laughed at that. \"Sure. Next time.\" He dimmed his LED flashlight so he could adjust his eyes to the dark cavern. \n\n\"So, if you weren't an anthropologist, studying Bigfoot, where would you be and what would you be doing right now?\" Jordan asked. \n\n\"I'd probably still be in California.\" She admitted. \"I wanted to be an artist, not that the job pays well, unless you can sell your soul.\"\n\n\"Why art then? Did you paint? Sculpture?\" He asked.\n\n\"Honestly, the thing I loved about art was the thing that I love about anthropology. They're both the study of people. I did some painting and sculptures, but I really love a good pencil sketch, black and white. Simple. It says as much about the artist as it does about the subject, how they see the world, their moods, perspective. \n\n\"Studying Bigfoot is studying humans, just through a much wider frame than art. The explosive tempers, the kindness, the love, the fear. That's all the same in us, just not tempered by the unwritten rules by which we govern ourselves and our society. Strip away all the niceties and politeness, and we would be out there in the woods, screaming and chasing deer all night, and fucking the day away in caves. \n\n\"There are physical and mental differences, to be sure, but understanding the Bigfoot means understanding us. Dr. Stein is right, you know. When the shit hits the fan, and CNN is running the story of 'Bigfoot Found,' it's you and I that are going to have to answer the questions in front of the cameras. I want to have those answers, not just the stupid ones, like how do they smell, or what they eat, but the profound ones, like 'What can a Bigfoot tell us about ourselves,' and 'how can we live together peacefully?'.\"\n\n\"You really are going to be to Bigfoot what Jane Goodall is to chimpanzees.\" Jordan observed. \"Time to start working on your soft spoken British accent.\" Megan smiled at him. \n\n\"I'm okay with that. I mean, not all the fame and public speaking, but being an ambassador for the Bigfoot. Someone who understands them, and speaks on their behalf. \n\n\"Before last weekend, I was the last person you would have wanted doing that, because all I had seen of them was the crazy recluse beating each other up over territory. Now I've seen love, no different from what a human would feel. When the time comes, I'm going to be ready. The public will love them, because I do.\n\n\"I'm going to work on testing them once we know some sign language, but I bet their intelligence isn't that much lower than ours, just different. They certainly seem much smarter than other great apes I've observed.\" Megan said. \n\nThe cave was silent for a few minutes, while both were deep in thought. Megan broke the silence once again.\n\n\"I just realized I've been sitting here jabbering about myself. I want to know more about you. Any siblings?\" \n\n\"Nope, only child. I have two cousins on my mom's side, boy and a girl. The girl is my age, and the boy is 2 years older. They grew up down the street from me, and we were like siblings growing up, just not in the same house, or the same parents.\" He answered. \n\n\"That's nice, so you saw them often?\" Megan asked.\n\n\"Yeah, once or twice a month, our parents swapped babysitting for date nights. We would usually make it into sleepovers, so we were close. We also went to the same schools, and looked out for each other.\" Jordan said.\n\n\"What made you want to become an engineer?\" Megan asked.\n\n\"I always loved building stuff. In high school, we had a bridge building contest, where we had to build a bridge out of Popsicle sticks and glue. I just started seeing the triangles and spokes of the trusses in my head. I knew where to put supports and where to add extra glue. \n\n\"I was usually a pretty shy kid before that, but my group was bumbling around with some terrible ideas, and I knew what we had to do, so I took charge. \n\n\"Our design won the contest, the only one not to break. The thing held up 200 pounds over a 4 foot span with only those two materials. I knew then that I wanted to design things, build things. The soil engineering was a money decision. They were hiring, and I got time and a half for putting in overtime. \n\n\"I was socking my money away for a house, but it seemed like every time I saved $10,000, the housing market went up by another $10,000 for the house I wanted. Plus, I didn't want to buy and then have to sell it and move. It turns out that was a good instinct.\" Jordan said.\n\nThe two talked about little stuff after that. Jordan wanted to know more about the apartment that would be his home in a week's time, and Megan's impression of the town and the college where he would be the next two years of his life. \n\nJane came in first. Out of breath, but glowing with excitement. Missy followed behind, and then the rest of the group. They looked well-fed, and well exercised. Missy wasted no time, walking to Jordan, and asking for sex with her gestures. \n\nJordan stood, taking off his clothes until he wore nothing but his Fitbit. Missy noticed it, and he offered it to her. She accepted, and wore it like jewelry. Jordan moved to the soft nest. The massive giant had to stoop to walk through the cave, and looked more ape than human as she approached Jordan hunched over. \n\nHe managed to get Missy on her back, with her legs spread wide. Jordan rubbed the inside of her thighs, luxuriating in the soft warmth of that thick fur. In the dim light, he could make out beads of moisture on her pussy lips. \n\nJordan leaned down, and gently licked the folds. Missy's nectar tasted just like it smelled: sweet, spicy and earthy. She gave a grunt of pleasure at the gesture, and Jordan rolled the drop of liquid around in his mouth, deciding that he liked it. \n\nHe leaned in for more. More aggressive this time, he spread her outer lips with his tongue, pulling her inner labia into his mouth. He was rewarded with a thick coating of that musk on his tongue. He ran his middle finger up and down the crease, spreading his saliva and mixing it with the sweet spice. \n\nHe slowly dipped his finger in, working it in and out, all the while laving her folds with his tongue. Once inside, Jordan curled his finger, searching for Missy's G-spot. Bigfoot must be just like humans, because it felt like a rough patch just inside the front wall. She jerked as he found it, and he started stroking her gently inside, while his tongue slowly zeroed in on her clit. \n\nHe teased her little knob slowly, licking all over the hood, sucking and biting it. It swelled inside his mouth, and Jordan moved the hood out of his way with his tongue, sucking the hard cone into his mouth and licking it repeatedly. \n\nThat sent Missy over the edge, bucking her hips wildly, while he held on. Jordan worked a second finger in, bringing her down slowly. He was rock hard by now, and decided to climb up and fuck her. Missy moaned as he slid in. She was so wet and tight. \n\nMissy was easily the largest of the Bigfoot, and easily the strongest. Lying on her back, her pussy was almost a foot off the ground, which made Jordan have to lie at a strange angle, folded to have his knees down for leverage. \n\nJordan grabbed Missy's knees, and pushed them back, rotating her pussy straight up, so he could lay on top of her. She caught on, and held her knees for him, letting him lie between. Even so, his face only came up to her breasts, so he made the best of it, and licked and sucked on her giant nipples while he pounded away. She came again, then again while Jordan Focused on her pleasure. \n\nHis own orgasm snuck up on him, and struck suddenly as Missy found her fourth orgasm, her tight pussy squeezing and milking as he lost control, and let loose inside of her.\n\nJordan had come to enjoy the after part almost as much as the sex, and Missy let him lay on her. He sucked on a nipple while running his fingers through her fur, and breathing in the scent of her. She gently wrapped her arms and legs around Jordan, and he felt safe, warm and content. \n\nHe felt her breathing change, and her arms and legs relax as Missy fell asleep. Jordan rose slowly off of her, and pulled his flagging erection out of her soft folds. The cool air on it immediately made it miss its warm home. Six pairs of eyes were on him. \n\n\"You really don't ever do that half-way, do you?\" Megan asked him with a grin. \"That's two of us you've fucked unconscious today. At least she gets to enjoy the nap uninterrupted.\" Jordan laughed and kissed her.\n\n\"Can you help me with something?\" Megan asked. She held up the ultrasound device. \"I want to play with this on you and me, so that the girls get curious and let me put it on them.\" She said. \n\nJordan sat and reclined, still naked. Megan added just a little gel to the end of the little device, and laid it on his stomach. \"Ah, I see you still have your appendix.\" She said.\n\n\"You can see that?\" Jordan asked. \n\n\"No. Well, a doctor probably could, but I'm just messing around. I was only trained this week on how to find and measure babies with this thing.\" She responded.\n\nJordan had to laugh at the playful look on her face. Megan took it off, added more gel, and started playing with her own stomach, trying to spot some structure that she recognized. \"I think that may be my stomach right there?\" She asked, showing Jordan the screen. \n\nWilma came over first, always up for something to play with. Jordan tickled her, and got a grunting laugh. Megan placed the device on her stomach, and had to move it around to get through the fur. They already knew she wasn't pregnant, since she was breastfeeding Pebbles, but her acceptance of the device was helpful. \n\nNext, Megan approached Jill, who had been watching Jordan intently, all through his time with Missy, and during the ultrasound play. \n\n\"You go down on her to distract her while I take some measurements and video.\" Megan instructed. \n\n\"I'm not just your dancing penis, you know. I have feelings too.\" Jordan joked. \n\n\"I'm not asking for your dancing penis, I'm asking for that magic tongue to distract the hairy giant while I do my job. I know it's up for the task.\" She quipped back.\n\n\"The things I do for you...\" Jordan said with a smile. \n\nJill's legs had been spread since she first sat down, and Jordan kneeled between them. Where Missy had droplets of moisture, Jill had spread hers all around, matting the fur and puffing up her pussy lips. Jordan dove right in. \n\nJill was sweeter than Missy had been, less earthy. She seemed to launch right into the grunting and moaning. Jordan licked the length of her folds and dipped his tongue in as deep as he could reach. Jill jerked.\n\n\"Stop!\" Megan complained. \"Just keep her occupied, don't make her thrash around while I'm trying to figure this thing out!\"\n\nJordan relented, gently petting her thighs, and licking between her inner and outer lips. Jill rewarded him with little coos and soft moans. \n\n\"Oh my god Jordan! Look at this.\" She showed Jordan the screen. A little face was visible, human looking. \"You're only the second person ever, after me, to see a baby Bigfoot, in utero!\" \n\n\"I thought you said they'd examined pregnant females before.\" He said, keeping his eyes on Megan and his tongue on Jill.\n\n\"We got a blood sample from one a few years back, but this portable ultrasound is state of the art. Even if we'd known that female was pregnant at the time, we wouldn't have had this available to us. We only had one data point on that individual, it was considered too stressful to keep shooting her with tranq darts to monitor her, so we left her alone.\" Megan explained.\n\n\"It's beautiful, boy or girl?\" He asked, taking a short break from licking.\n\n\"Um... hold on a second... Girl. I'm pretty sure... yup it's a girl.\" She said.\n\n\"Damn. You already outnumber us eight to two in this cave. I was hoping for a little less estrogen.\" Jordan joked. \n\n\"Don't act like she won't be the greatest thing you've ever seen. She's going to have you wrapped around her little finger.\" Megan said. \n\nJordan just smiled, and went back to licking. Megan took a long time, recording the video and doing all her measurements. \n\n\"When you're done there, I'd like to examine Ginger, though I suspect that's going to be a little harder. She might not fall for your charm the way some of us do.\" Megan winked at him.\n\nJordan latched onto Jill's clit and eased two fingers inside. Within minutes, he had her screaming out through a massive orgasm, spraying her sweet musk all over Jordan's face. Jordan brought her down easy, licking gently around her folds. He was getting ready to start working towards another climax, but he felt Jill's breathing change, and he looked up to see her eyes were closed. He let her sleep.\n\nMegan was standing near Ginger, and the two females were eyeing each other warily. \n\n\"How do you want to do this?\" Megan asked. She looked at him, and wiped her finger across Jordan's cheek, bringing Jill's fluid to her mouth. \"You actually like this stuff? She asked.\n\n\"It's an acquired taste.\" He laughed. \"It's the act more than the flavor. I wouldn't sit down to a big glass of it, but I'll happily drink from the source.\" \n\n\"I've got a source.\" Megan faked sadness. \"And you haven't asked to drink from mine yet.\" \n\n\"That's because you sprayed it all over my crotch before I could.\" Jordan laughed. \n\n\"I take only half the responsibility for that little incident.\" Megan smiled back. \"Now dive in, let's see if we can get two ultrasounds in one night.\" \n\nJordan obeyed, repeating the gentle strokes on Ginger that he had performed on Jill and Missy. Ginger grew agitated when Megan placed the device on her stomach. Ginger growled and Megan backed off. Jordan moved his face off her pussy, and up to her neck, nuzzling her, playing with her nipples and talking softly to her. She wrapped her arms around Jordan, ignoring Megan touching her stomach.\n\n\"Perfect.\" Megan whispered. \"Just keep that up for about 15 minutes and I should be done here.\" \n\nGinger calmed, and to Jordan's surprise, she nuzzled him back. Jordan kept talking to her, stroking her fur.\n\n\"Mazel tov! It's a boy.\" Megan whispered smiling big. \"I'm almost done here. Keep doing that.\" \n\n\"How far along? \" Jordan asked.\n\n\"There's no way to know for sure. We don't even know how long their gestation is, or what's a healthy birth weight.\" Megan admitted.\n\n\"I thought you said they were several months along?\" Jordan asked.\n\n\"I just meant that it was more than a few weeks. We know you aren't the father. If they were human, the program spits out a due date around Thanksgiving for Jill and Christmas for Ginger.\" Megan announced. \"I'd guess plus or minus a month for those dates, but this is all new territory for us.\"\n\nWhen she was finished, Megan put her ultrasound device away in her backpack. She pulled up the app the received data from the Fitbit. \n\n\"Wow, you're both really calm right now. You awake?\" Megan asked.\n\n\"Yup, just soaking it up. She's really comfortable, and I'm really tired. I may just sleep here tonight. Are you okay?\" Jordan mumbled through a mouth of red fur.\n\n\"Yeah, sleep well. I'm going to do some more science, then see if Jane will let me cuddle her.\" Megan whispered, kissing Jordan's forehead before she moved away.\n\n***\n\nJordan woke some time during the night, as Ginger pushed him off and rose. Jordan looked around and found another sleeper, who welcomed him. He spooned naked against her back.\n\nHe woke that way when the morning light came in the mouth of the mine. He looked down to find himself spooning Sarah. \n\nBam-Bam was curled up in her arms, and for just a moment, Jordan saw a flash of a happy future, one in which he never slept alone, and he was a father. \n\nJordan moved off of Sarah, unsure whether she was aware of who cuddled her, and not wanting to raise her anger if she wasn't ready.\n\nHe looked around and found Megan, half laying on Jane, and drooling. Jordan found his pants and shirt and dressed quickly. \n\nHis phone claimed that it was now 9 AM. The air was warm out in the sun, and his nose filled with the resinous scent of pine trees. \n\nJordan found a flat rock and sat, just enjoying the morning. He closed his eyes and lay back, listening to the wind and the birds in the trees.\n\nHe didn't hear Sarah leave the cave and approach him. He started out of his reverie as her shadow fell across him. She looked angry at first, 'but maybe only concerned.' He thought.\n\nSarah sat by Jordan on his rock, and placed one hand on his thigh. He put his hand on top of hers. It was large and hairy, and dark brown.\n\nSarah reached with her other hand and touched Jordan's lips, then she reached down and rubbed her folds with that finger. She reached back, and Jordan took her big finger in his mouth, tasting her nectar and understanding her request.\n\nJordan sat up, and moved between her legs. Sarah reclined and spread her legs wide as Jordan lowered his lips to her. He rubbed her thighs gently, enjoying the soft firmness of them.\n\nHe licked gently up the center, tasting Sarah's pussy, and her unique musk. Less sweet, more of the spice than Jordan had tasted before. He brought his fingers up and gently spread her lips, working his tongue deeper and deeper into her opening.\n\nJordan replaced his tongue with his fingers, pushing two fingers slowly inside, again searching for that rough patch that indicated her g-spot. Jordan found it, and gently stroked it, licking and nibbling all along her inner lips. \n\nSarah grunted, rocking her massive hips up against Jordan's hand. Jordan latched onto Sarah's clit, and tongued it until it started to harden and rose out of its hood.\n\nSarah was panting now, grunting and moaning as Jordan pushed her. His free hand slid up her stomach, brushing through that soft fur and he caressed first one breast, then the other.\n\nSarah went off like a firecracker. Her hips bucked up hard, throwing Jordan's face off of her pussy. She screamed, long and loud. She screamed so much that Jordan thought she might actually be in pain. \n\nSarah's pussy squirted. Without Jordan's mouth to catch it, thick hot fluid covered his face and hair, and splashed onto the rock behind him. It also wet the shoulders of his shirt.\n\nSarah's scream finally stopped, and was replaced by panting grunts and whimpers.\n\nJordan's fingers were still inside of her, and he stroked her gently, in and out, and her hips bucked and rocked. \n\nSarah sat up suddenly and pulled Jordan on top of her. She nuzzled his neck, grunting contentedly. Jordan returned the action, and she held him gently in her arms.\n\nJordan was rock hard, but had made huge progress with Sarah, and she wasn't about to take advantage of her. She made no move that told Jordan she was ready to fuck, and with his face in her neck, she hadn't put Jordan in that position to reach her pussy with his cock, and she hadn't taken his clothes off.\n\nAfter several minutes, Jordan rose and walked down the mine tailings to the brook, where he splashed the freezing water on his face to clean Sarah's sticky musk off his skin and hair. The cold water calmed him, and he was ready to return.\n\nInside the mine, he found everyone awake, including Megan who sat naked, working mats out of Wilma's fur. ",
        "\"I'm adding a comb and a brush to my backpack next time.\" Megan said, pulling apart on fur, while Wilma sat stoically. \"Who was the lucky lady that woke us all up this morning?\"\n\n\"Sarah.\" Jordan answered.\n\n\"Alright! Congratulations, the harem is complete!\" Megan smiled. \n\n\"Oral only, but it's progress.\" Jordan smiled. \n\n\"Speaking of oral...\" Megan made the hand motion of a blowjob, and pushed her cheek out with her tongue, bobbing her eyebrows.\" \n\n\"Is that an offer?\" Jordan joked.\n\n\"Hey, you promised!\" Just come wave it Wilma's face. \n\nJordan dropped his shorts, and approached Wilma. She stared at it, and started rubbing her sex, in preparation for an interlude. \n\n\"Damn, I guess she doesn't know what to do. Can you try it with Jill?\" Megan pleaded.\n\nJordan walked to Jill, who started preparing herself like Wilma had, but made no move to take him in her mouth. \n\n\"Look, the helicopter with the pallet of supplies should be here in the next hour. Where did you leave the flag I'm supposed to plant?\" Jordan asked as the experiment failed. \n\n\"It's in the motorcycle, right saddlebag, I think. You need any help?\" Megan asked, picking something out of Wilma's fur and throwing on the ground.\n\n\"No, I'd imagine the girls will be pretty freaked when they hear a helicopter. Can you give out some food to try to keep them calm? Maybe work a little on your sign language lessons?\"\n\n\"Ooh, you have to see this...\" Megan tapped on Wilma's shoulder. \"Wilma, where baby?\" She shook her finger and then made a rocking motion.\n\nWilma made the baby rocking motion and pointed at Pebbles, who was playing with a sick, poking holes in a green leaf. \n\n\"Yes! Baby!\" Megan said in her best school teacher voice, and gave Wilma a grape from her backpack. Then to Jordan, she said \"It's just two words, but she learned them, and grapes work for a reward. It's a great start!\"\n\nJordan smiled, congratulating Megan on her success.\n\nJordan got the flag and took his shovel down to the cabin site. He would need to put a tarp over the pallet when it arrived, since he had work the next day, and wouldn't have a chance to mix and pour cement before leaving today.\n\nHe dug the foundation deeper, flattening out some lumps. The footprint would be fairly large, over 800 square feet. Jordan planned a second story, plus a loft. It would give him over 1600 square feet, three bedrooms and two full bathrooms.\n\nHe still had to dig a septic pit, and work out the foundation drainage, which he planned to accomplish with gravel from the stream, and some carefully dug channels. \n\nHe would also need to inspect the 130 year old stonework of the cellar, ensuring that he wouldn't have to redo the rectangular cellar before he started building over it.\n\nHe was digging out the septic pit when he heard the helicopter in the distance. He had selected a nice flat spot, 20 yards from his cabin site, where he would plant his flag.\n\nThe helicopter appeared first, a massive twin rotor Chinook, painted with National Guard khaki colors. \n\nWhen he saw the payload, Jordan's jaw dropped. It was a shed, and a big one. Dr. Stein had promised Jordan a pallet of supplies. The shed was at least 10 feet by 15 feet. \n\nJordan waved the flag until the helicopter made a beeline for his position. He planted the flag and stood back. \n\nWithin minutes, the helicopter dropped its payload right next to the flag. The line was cut and the helicopter rose high into the sky before heading east.\n\nWith shaking fingers Jordan opened the shed. It was packed full. The first thing he saw was an orange metal contraption. He recognized it as a portable, gas powered sawmill, but a much more expensive version than the one he was willing to pay for.\n\nJordan looked around the shed. As promised, there was rebar and cement mix. There was also a gas powered cement mixer bucket on wheels.\n\nPacked deep in the back of the shed were doors, solar panels, bathroom fixtures, power tools, and everything else Jordan would need to build and finish his cabin. There were also 4 metal Jerri cans of gas, to run the lumber mill and cement mixer, as well as a gas generator.\n\nJordan immediately pulled out his phone, found Dr. Stein's number and dialed his benefactor.\n\n\"Jordan! Good to hear from you. I take it our care package has arrived safely?\" Dr. Stein asked cheerfully.\n\n\"You said you'd be sending a pallet, Dr. Stein.\" Jordan said.\n\n\"Please, I thought we were on a first name basis by now. Call me Jim. If you look inside the shed, the cement mix should be sitting on a pallet. Consider the rest of it a housewarming gift.\"\n\n\"It's too much.\" Jordan said.\n\n\"Nonsense. We've been over this already. We take care of our own, and you've proven yourself worthy. The only extravagance so far is that infernal cell tower, though even that is paying dividends so far.\n\n\"Send our congratulations to Megan on those incredible ultrasound videos and measurements. She'll keep our researchers busy for months to come with that data. The statisticians are already begging to start comparing it to human data.\n\n\"Also, see if you can't get a few more of them wearing those Fitbits. We've been really impressed so far at the data we've received from the 3 wearing them. Not one of them has slept more than 4 hours in a row so far.\n\n\"That's not something we knew or expected, but it has been worth knowing.\"\n\n\"Thank you, sir...Jim. I'll see what we can do.\" Jordan promised. They said goodbye and hung up.\n\nOnce the sounds of the helicopter were gone, Megan came running down the hill.\n\n\"Great idea on the food. They were mostly full, but I started handing out fruit, and you could barely hear the helicopter from inside the cave. They were calm as could be.\n\n\"Nice shed. That's a little bigger than advertised.\" Megan laughed as she approached. \"We could move in here if the cabin becomes uninhabitable.\"\n\n\"Not yet, look inside.\" Jordan told her. Megan opened the door and whistled.\n\n\"Someone near the top clearly loves you. You buy women off with jewelry and men off with power tools. You sir, have just become a mistress...mister. Whatever. Your sexual favors have been bought and paid for.\" Megan joked.\n\n\"You don't really think that's why they're giving me stuff, do you?\" Jordan asked.\n\n\"I think they take you and your position very seriously. They want to keep you happy and on their side. I'd say enjoy it and keep putting out.\" Megan winked at Jordan who couldn't help but laugh.\n\n\"We should probably plan to leave here no later than 3 PM. I have 5 long days ahead of me, and I need to finish packing up at work and home. Dr. Stein wants us to get Fitbits on as many as we can before we take off.\" He said.\n\n\"Jesus. It had better not keep getting harder every time we have to leave them, or it's going to kill me within a month.\" Megan lamented.\n\n\"Tell me about it.\" Jordan said sadly. \"My great-great grandfather's old mine shaft feels more like home now than my apartment has after 9 months.\"\n\nThey moved around, leaving food out for the ladies, but locking the shed tight. Megan got Wilma and Jill to wear their Fitbits, and Jordan got Sarah to wear one, and even convinced little Bam-Bam to wear one, though he took it off before they left.\n\nWith a heavy heart, Jordan rode his motorcycle back along the narrow path where his pickup truck was parked on the side of the dirt road. Megan sat behind him with her arms gripping his chest tight. \n\nJordan felt a wet spot where her face was laying, but didn't say anything. He felt the same way, he just didn't cry.\n\n***\n\nJordan could barely sleep that night. His bedroom felt cold and lonely. He texted Megan around midnight, asking her to call if she was up.\n\nThey talked for two hours, about their favorite memories from the weekend, and their hopes for the future. She was fun and funny, and even at 2 in the morning Jordan found himself enjoying her company over the phone.\n\nMonday morning, Jordan had promised himself to let Mike take the lead, and only step in if there was a big mistake made.\n\nMike presented at the meeting Monday afternoon. Jordan heard several mistakes, but tried to let Mike recover on his own.\n\nJordan wasn't the only one who recognized Mike's mistakes. He was called into a meeting with the office and regional managers. He was offered an exorbitant retention bonus along with stock offers to stay.\n\nHe left the meeting having rejected the offer, but feeling guilty for abandoning his old friends and coworkers.\n\n***\n\nMonday night, Jordan was tired on his feet from a full day of work and packing. He spotted the tablet from Dr. Stein and wondered briefly if he should pack it in a box. He powered it on, working through each step of security.\n\nHe hadn't turned it on since the first week, but was curious about a few things. He had questions about the different musks, especially.\n\nThere was a blinking red circle on the home screen, and Jordan clicked on it.\n\nMegan's report was there in full. Jordan read it front to back, wondering who all had read it. It detailed Jordan's assuming the role of alpha, his rank in the group's pecking order, and had a fairly vivid description of Jordan's sexual activities with his women, Megan excluded.\n\nIt included Megan's initiation into the group. How Jordan had 'claimed' her as one of his mates, automatically making her a member of the harem. It was sparse on the details about the sexual relationship between the two humans, but graphically clinical in describing Jordan's own sexual experiences with his Bigfoot.\n\nThere was a description, taken word for word from Jordan's description of the alpha hopefully being a 'shower not a grower,' along with Jordan's description of the tightness of the female's vaginal cavities and ending with the full measurements of Jordan's own penis.\n\nHe was alone, but felt his face flush bright red. With shaking fingers, Jordan dialed Dr. Stein's phone.\n\n\"Jordan! I didn't expect to hear from you tonight. What's up?\"\n\n\"I was just catching up on some light reading. Megan...um...Dr. Reece's report from the weekend before last... um... I guess my question is, how many people have access to that report?\" Jordan stumbled out.\n\n\"Ah. I was wondering when you were going to bring that up.\n\n\"Do you remember when we first talked, when I promised to share with you what is known of the creatures?\" he asked.\n\n\"Yes, of course.\" Jordan answered.\n\n\"We've made that promise to many people. Think of it like a circle. Your either in our you're out. Except for financials, and some internal management, the inner circle has earned the right to all information known to our organization related to the species.\n\n\"Close to 2000 people receive and read those reports. I'm sorry that your privacy has been violated, but we don't hide information from people who have earned it.\n\n\"The size of your penis isn't important to them, except that it was a tight fit for a female Bigfoot. Did you know that an average male gorilla's penis is only an inch and a half? And that's erect.\" \n\n\"Seriously?\" Jordan asked.\n\n\"Yup, and a chimpanzee is only about double that. We've never witnessed coitus between two Bigfoot, we've never even been able to measure an erect penis. The closest information we have is that your 7 inches long and 6 inches circumference is probably big for a Bigfoot.\n\n\"Big for a human too, so congrats.\" Dr. Stein said with a laugh.\n\n\"We're not out to embarrass you, or destroy your privacy. Intimate details are shared only as they pertain to increasing our understanding of the species. \n\n\"We know more about Bigfoot's sex life now from two 24 hour observations made by Dr. Reece than we knew from over 80 years of field work.\n\n\"It may sound pervy, but understanding the requirements for mating is a piece of the puzzle for saving the species. You're doing good work. Keep it up, and don't worry about what people are thinking of you.\n\n\"Half of them would kill to be in your place and the other half would kill to be in Megan's. Do you know that in the last week we've had over a hundred inquiries about being added to your field team?\n\n\"Most of them women, but a few men. You have an access that people who have devoted their lives to this have never dreamed of. You have a year before you have to start looking these people in the eye at our conference in Ohio. I'd bring condoms if I were you. Lots. You're a rock star.\" Dr. Stein laughed again.\n\n\"Speaking of which, you should know that I'm clean, I got a full panel done a few months ago after I found out my girlfriend had been cheating on me.\" Jordan admitted sheepishly.\n\n\"We know. We went through your life with a fine tooth comb before we decided to throw the weight of the organization behind you. Medical records were included in that. Megan's clean too if you were wondering\" Dr. Stein answered.\n\n\"This new girl you're sending up. She's read the report too? Did she ask to be on our team?\" Jordan asked.\n\n\"Kaitlin should have read the report by now. She's a member of our circle. We asked her to consider the mine inspector job, same as you, but she agreed before she read the report.\n\n\"There are very few people in our organization that run the risk of a close quarters encounter with a Bigfoot on a daily basis. Mine inspectors are among those few. The two of you knowing how act and react around a live specimen will be invaluable and will save lives.\n\n\"Before you came along we were considering asking her to apprentice with Megan and get her PhD in anthropology. She has some stories to tell. Next to you two, what she's experienced on her family ranch makes her the closest we have to an expert on human and Bigfoot interactions. You might still even learn some things from her.\n\n\"Oh, also, we're posting the ultrasound videos sometime tonight. We're still waiting on Megan's report from this weekend, but again, we ask her to only report sensitive information about you as it pertains to Bigfoot. \n\n\"Will there be any sensitive information in her report?\" Dr. Stein asked. Jordan could hear the smile in his voice. He was glad the phone call was voice only, because he could feel his ears turn red.\n\n\"Yeah. I suspect there will be.\" Jordan answered.\n\nDr. Stein chuckled, but not unkindly. \"I thought so. Do you have any more questions?\"\n\n\"I think that's it.\" Jordan said, too embarrassed to think about anything else. In a day or two, the whole Bigfoot community would know that he ate Bigfoot pussy, and a year from now, he would have to stand in a room of his peers and explain that decision.\n\nJordan showered, and made himself a drink, forcing himself to calm down. When he felt he was ready, Jordan called Megan.\n\n\"Hey stud!\" Megan greeted him. \"Dr. Stein called me. How much do you hate me right now?\"\n\n\"Well, you're definitely getting spanked the next time I see you.\" Jordan joked.\n\n\"Ooh, kinky. Then you might forgive me?\"\n\n\"There's no forgiveness required. You were just doing your job. You're still getting spanked, though.\" Jordan growled into the phone.\n\n\"Thank god. So we're really okay?\" Megan sounded worried.\n\n\"Well, in 11 months' time I'm going to have to take the stage and present what secrets I've uncovered about Bigfoot. Now I know I'm going to have to look out over a room of a hundred people and explain what a Sasquatch pussy tastes like.\" Jordan laughed.\n\n\"Don't get yourself worked up. I'll be right there with you, and I'd be prepared for at least 400 attendees. It should be the keystone address. I'll be answering questions right alongside you.\" Megan tried to calm him.\n\n\"That's right. You tried some of it off my face. You can field that question.\" Jordan laughed.\n\n\"I just got a lick of Jill. You got a mouthful of Missy, Jill and Sarah. I'm afraid you still are the expert on that subject.\n\n\"I wouldn't worry about it, though. The way Dr. Stein talks about it, I'm sitting on a hot commodity, though unfortunately, not at this exact moment.\n\n\"The way he tells it, there's a whole cadre of groupies that think you soothe the savage beast with that big fine cock of yours, and any questions on the subject will be followed up with a request to compare it to the taste of their pussies. For science, of course.\" Megan laughed. \n\nJordan had to laugh with her. \"It's going to take some getting used to.\"\n\n\"Listen, you have great instincts with your girls. All of us. I hope you don't feel like you have an audience anytime you're with me. I certainly wouldn't want you to change how you act, or hold anything back with me around.\n\n\"You are full of love. You care. You're fearless in love, and you see the beautiful souls of the women, not the fur or the muscles or the species. That's what I love about you. Please keep being you, and if the world's going to judge you for that, fuck 'em.\" Megan's voice was shaking with nervous energy.\n\n\"Thanks Megan. You're crazy smart, and that's what I love about you. I need to put more trust in you. If you think revealing some part of my sex life is important, I trust you.\n\n\"What's the saying? Those who matter don't care, and those who care don't matter. I think I just forgot that.\" Jordan said.\n\n\"Exactly!\" Megan exclaimed. \"People are curious, and that goes double for anything to do with sex. It's not like you're into bestiality, fucking sheep. These are women. They love you and trust you, and I'm making damn sure my reports reflect that. You just keep being the amazing you.\"\n\n\"Did you get much sleep last night?\" Jordan changed the subject.\n\n\"Not really.\" Megan said sadly. \"It's like I've seen the promised land, slept safe and warm in the arms of those fuzzy giants, and my bed feels cold and sterile by comparison.\n\n\"I'd give anything right now to be sandwiched between you and Jane on a pile of straw.\"\n\n\"Mmm. I'd like that too. I know what you mean about not being able to sleep alone after that. 4 more nights and I'll be in town with you. Are you up for a guest on Friday?\" Jordan asked.\n\n\"If you're not over here, I'm coming over to your place. I know where you live.\" Megan teased.\n\nThey talked that night past 2AM when both passed out from exhaustion.\n\n***\n\nOn Tuesday, a vice president of the company Jordan worked for called Jordan into the conference room. Jordan was seated across from both managers from yesterday's meeting as well as the VP.\n\n\"We understand you're leaving us to begin a master's program at Western State College. We understand that classes don't start for 2 more months.\" The VP started.\n\n\"Both correct.\" Jordan answered.\n\n\"We've underestimated your value to this company, we're sorry to say. Your work has proved to be exceptional, and your experience and insight make you utterly irreplaceable.\n\n\"We would like you to agree to stay on with us for those two months while we search for and find a suitable replacement for you to train.\" The VP almost begged.\n\nJordan noticed the bottle of water in front of him, and opened it to take a drink.\n\n\"We're prepared to offer you $50,000 for those two months of work.\" The VP said with a grim look.\n\nJordan coughed on his mouthful of water. They were offering him half of his annual salary for just 2 months of work. He coughed until he could speak.\n\n\"That is an excessively generous offer, sir, but I'm afraid I have made some other commitments in the meantime.\" Jordan said, wishing he could have it both ways.\n\n\"We were afraid you'd say that. We have prepared a second offer, which we hope you'll give more consideration to:\n\n\"We'd like for you to continue to work for us just 4 to 6 hours a week as we get your replacement up to speed. We want you to check their work, and correct any mistakes you find.\n\n\"We're prepared to offer you $40,000 for a year of work.\" There was desperation in the VPs voice.\n\n\"I've already vacated my lease on my condo. The movers show up Friday. I can't commute 4 hours back to Denver even once per week.\" Jordan explained.",
        "\"All the work we are asking you to do would be on the computer. We can trust Mike in the lab, and our field team can be split to cover his work and watch his back. You would telecommute those hours. Just check his work on the computer. We'll even throw in a work tablet so you don't have to use your own.\" The VP was begging now, and Jordan found himself considering the offer.\n\n\"Would you mind if I made a quick phone call?\" Jordan asked.\n\nHe called Dr. Stein who thought it was a great idea, and offered to let their lawyers review the contract.\n\nJordan returned to the room with a smile on his face. \"Assuming my lawyers find no problems in the contract, I think we have a deal.\" He told the assembled men.\n\nThey breathed a collective sigh of relief, and produced a folder with the contract.\n\nJordan snapped a picture of each of the 3 legal-sized pages and texted the images to Dr. Stein.\n\n30 minutes later, Jordan had read the contract for himself, and he received a text from Dr. Stein. \n\nThere was a thumbs up emoji, followed by: 'looks good. Congratulations. Keep this up and you'll be rich enough to retire before your first day of real work.'\n\nJordan signed the contract and went back to work, the guilty feeling that had weighed on him all weekend gone. Before the end of the day he was issued a surface tablet with a full keyboard, and loaded with the programs he would need.\n\n***\n\nThe week drug by slowly. Jordan was exhausted by his short nights, but still called Megan every evening before bed. They feel asleep together earlier and earlier as their exhaustion caught up with them.\n\nFinally, it was Friday morning. Jordan was ready for the move. Everything he owned except for his truck and motorcycle were boxed up and piled in his living room.\n\nThe movers arrived at 7 AM, and he handed off his key. He drove to his last day of work with his motorcycle in the bed of his truck.\n\nFor the first time since he started, Jordan finished all of his work by noon. His whole department took him out to a farewell lunch, and gave him a warm sendoff.\n\nJordan packed the contents of his desk and was ready to leave by 3 PM.\n\nJordan said his goodbyes and got in his truck. \n\n***\n\nIt was around 7 PM when Jordan arrived in Gunnison, and proceeded to the address Megan gave him.\n\nThe apartment Megan had rented for him was nice. It had granite countertops and a full master bathroom. The kitchen was huge and well laid out, and the open floor plan of the apartment gave it a welcoming feel. It even came with a 2-car garage, even though Jordan only had his truck and motorcycle.\n\nJordan's cheap bachelor furniture looked out of place in the nice home. He had barely finished his tour of the place when there was a knock at the door.\n\nMegan entered as Jordan came to answer. She was followed by the most beautiful woman Jordan had ever seen in person.\n\nKaitlin was tall, and curvy. A natural redhead, she looked flawlessly beautiful. She wore skin-tight blue jeans, cowboy boots and a western shirt, with a few buttons unfastened, giving Jordan a view of deep cleavage.\n\nJordan first thought there must be some mistake. Kaitlin looked like she would be more comfortable on a Hollywood red carpet than crawling around in dark mines taking soil and water samples.\n\nShe had soulful green eyes and straight white teeth. When she smiled at him, Jordan's heart missed a beat. She had a calm confidence that put Jordan at ease.\n\n\"Hey stud!\" Megan laughed and kissed him. \"This is Kaitlin, and before you ask, yes I hate her already.\" She joked. She clearly had already made friends with the younger woman.\n\nJordan pulled Megan in for a tight hug. And held her. He released her and shook Kaitlin's hand. \"It's very nice to meet you, Kaitlin.\" Jordan said. \"Dr. Stein told me all about you. I look forward to working with you.\"\n\n\"Megan told me all about you. Believe me, the pleasure is mine.\" \n\nKaitlin lost a little of her confidence. Jordan saw a blush spread across her flawless porcelain skin, and felt his own face grow warm realizing what she meant.\n\n\"Gosh, I feel like I'm meeting a rock star. I know you don't know me yet, but I hope you'll feel comfortable letting me join you guys the next time you go up with the Bigfoot\" Kaitlin's voice quivered.\n\n\"Megan and I were going to head up tomorrow late morning.\" Jordan told her. \"If you think you can be ready, I think we can take you. I'll have to take two trips on my motorcycle to get both of you up there.\n\n\"Listen, you read the report that Megan wrote, correct?\" Jordan asked. Kaitlin nodded. \"Are you going to have any problems with anything in there?\"\n\n\"No, I'm...um...I'm kind of looking forward to it.\" Kaitlin laughed. A new flush of red crept up her cheeks. \"So...do you...think the females might accept me if you...um... claim me... the way you did for Megan?\"\n\n\"We're one for one on that method. I don't have any better ideas, but I'm willing to try just about anything if you're uncomfortable with it.\" Jordan said.\n\n\"No. I'm...I think I can be comfortable with that...I mean... if you are.\" The confident bombshell gave way to a nervous girl.\n\n\"Ooh, you've got it bad chicka!\" Megan teased.\n\n\"Shut up!\" Kaitlin swatted at Megan, and they both laughed.\n\n\"Please relax. We'll take it at your pace, whatever you're comfortable with.\" Jordan said. He placed a hand comfortingly on her arm and Kaitlin pulled him into a hug.\n\n\"I can see why Megan is so crazy about you. You always seem to have the right thing to say don't you?\" Kaitlin whispered in Jordan's ear.\n\n\"Dr. Stein... um...Jim says that you've had some experience with Bigfoot growing up. You must have some amazing stories.\" Jordan tried changing to a more comfortable subject.\n\n\"Kind of, yeah. There was a female group on my parents' ranch just like on yours. We never found their lair, and never saw much of the alpha. I actually befriended an adolescent male for a while growing up before he left to claim his own territory.\n\n\"He used to come by a waterfall where I liked to ride my horse around sunset, and we would interact sometimes. I nicknamed him Stinky, and I learned a lot from him.\n\n\"It sounds like you have a deeper connection than I had, but I knew him for about 3 years before he left. I really hope your pack accepts me. There's just something so amazing about them. They're like wild people, us without all the materialism and vanity and manners.\" Kaitlin said.\n\n\"I think you'll probably do fine.\" Jordan reassured her. \"Just be ready to go tomorrow morning by 10. We'll probably stay up there 3 or 4 nights if things go well, so bring a few changes of clothes.\n\n\"I'm doing a food run tonight for the ladies. Let me know if you have allergies or special requests, and Megan and I can make some special meals. Otherwise, just get ready for a few nights of roughing it.\"\n\n\"So you guys really sleep in an old mine shaft with the Bigfoot?\" Kaitlin asked.\n\nJordan and Megan looked at each other.\n\n\"Yes, and you're welcome to join us, or you can sleep in the old cabin on the property.\" Jordan replied. \"I'm working on building a nice new cabin with 3 bedrooms, but until it's finished I'm afraid you'll have to go to the bathroom in the woods and sleep wherever is most comfortable for you.\"\n\n\"That's fine. I grew up on a ranch. I'm not some pretty flower who needs 5 star accommodations. I'll do what you tell me, and I won't complain.\"\n\n\"It looks like you just arrived. We'll let you get settled and unpacked.\" Megan offered. \"Have you eaten yet?\"\n\n\"No, I was going to run out for something.\" Jordan answered. \"All my dishes and pans are in boxes.\"\n\n\"I made a pot of chili, and Kaitlin and I were going to eat soon. You're welcome to join us.\" Megan offered. \n\n\"Sounds good. Thank you.\" Jordan agreed.\n\n\"I'm right across the patio from you. In unit B. Come on over when you're ready.\" Megan smiled and winked at Jordan. \"Also, if you're bed isn't assembled yet, you're welcome to come share mine.\"\n\nJordan glanced at Kaitlin, hoping Megan wasn't making her uncomfortable. He thought he saw a flash of jealousy on her face instead, but she quickly covered it with a smile.\n\n\"Sounds good. I can get a bed put together, but I'd rather share yours. Maybe we can both get some real rest tonight.\" Jordan said.\n\nThe girls left, and Jordan worked at getting boxes and furniture moved into place for a few minutes until he could get to his clothes and change.\n\nJordan knocked on the door to unit B and pushed it open, finding it unlatched. Megan and Kaitlin were seated on barstools at the kitchen island, each with a glass of wine in their hands. The scent of meat, beans and spices filled the air.\n\n\"We're drinking white. You want some?\" Megan offered, holding up her glass as though to toast.\n\nJordan nodded, and soon Megan pushed a full glass across the counter. \n\n\"Chili's done anytime, we were just getting a little tipsy before our stomachs are full.\" Megan slurred. \"Want the nickel tour?\"\n\nJordan nodded and looked around. Megan lived very clean. Her home had just the right amount of decoration without being clutter. Despite just moving in 2 weeks ago, there were no boxes or messes. The theme in the kitchen and living room seemed to be 1960's California wine country.\n\nThere were paintings and advertisements, and they all meshed together well. It was sophisticated, and made Jordan feel just a little uncultured by comparison.\n\nMegan led him around. Her apartment was a mirror image to his, and he got some good ideas about where to put his furniture and how to use the space.\n\nBoth units were 2 bedrooms 1.5 bath. Megan had a king sized bed in her bedroom, with a big wooden frame.\n\n\"I gave you the unit with the oversized tub, and I get the shower with a seat. Otherwise they're about the same.\" Megan told him as he looked around.\n\n\"I'm not really a bath person.\" Jordan said.\n\n\"Six one way, half dozen the other. I hope I wasn't being presumptuous that I'll be sharing your bathtub and you'll be sharing my shower?\" Megan smiled. Jordan returned the smile and winked at her.\n\n\"I think we should invite Kaitlin to spend the night in our bed. Did you see her face when I asked you to join me? You'd think I killed her cat.\" Megan said with a smile.\n\n\"I don't want to make her uncomfortable.\" Jordan said.\n\n\"I think it's making her uncomfortable that we didn't ask. If you don't ask her I will.\" Megan said.\n\n\"Megan...\"\n\n\"HEY KAITLIN! YOU WANT TO SLEEP IN OUR BED TONIGHT?\" Megan yelled out.\n\nGreen eyes looked around the corner, full of barely concealed excitement. \n\n\"Uh, I don't know, I mean I don't want to come between you two.\" Kaitlin equivocated.\n\n\"Sweetie, if I was the jealous type, this relationship of ours would have been over before it began. We're all three going to be spending a lot of time together, and at least Jordan and I will be naked and fucking a lot of that time.\n\n\"I suspect you want to join in, but you don't want us to think poorly of you. You can participate as much or as little as you like, no judgement.\n\n\"You've read the reports and you know Jordan's relationship with the Bigfoot. I'm just one of several women in a relationship with him. If that bothers you... if you can't share him, we'll put on a show of intimacy for the Bigfoot and we'll treat you as a close friend.\" Megan said.\n\n\"How do you live like that? Don't you want a boyfriend that's all yours and you're all his?\" Kaitlin asked.\n\n\"Honestly, I kind of get off seeing him with the Bigfoot ladies. I'm just kinky that way. We don't have a formal relationship, but we've talked almost every night since we've met.\n\n\"I've shared more of myself with him than any boyfriend since high school, and I feel like I've known him my whole life. I don't own him and he doesn't own me.\n\n\"If you give him a chance, I'd bet you find happiness in his arms and as his friend, I know I have. He's a good guy, he's good looking, and he's amazing in bed.\n\n\"But maybe you shouldn't rush it. Go ahead and sleep in your bed tonight, if you want, and see how you feel in the morning. We're not going anywhere.\" Megan cast a look at Jordan who was just staring.\n\n\"I feel like I'm being sold by a devoted salesman. Megan, I appreciate everything you've said, but Kaitlin is here for an education and experience. Kaitlin, I'm sorry if we've made you uncomfortable. I'd like for you to feel comfortable around us but I don't think we should force that. Sex with me or anyone else is not in your job description, and certainly isn't going to affect our willingness to work with you.\" Jordan said.\n\n\"No... um... I'd really like to join you tonight. Both of you, but... I'm not a lesbian...I mean bisexual... I'm not into girls.\" Kaitlin stumbled out.\n\n\"Me neither.\" Megan said with a smile. \"Would you be uncomfortable naked in the same bed as me?\" Kaitlin shook her head. \"We'll have Jordan between us. If it gets uncomfortable, you are welcome to get dressed and go home at any time.\n\n\"We were serious about getting some rest tonight. We're going to fuck, and then we're going to sleep cuddled up with each other. We'd love to have you stay over and join in whatever you're comfortable with.\" Megan said.\n\n\"Thank you, guys. I'd like to stay, but I'd like to just watch you two, at least to start.\" Kaitlin said.\n\n\"Alright. We still have some chili to eat, and wine to drink. Seriously, Kaitlin, join in, watch, Jill-off, whatever you're comfortable with.\" Megan said, smiling.\n\nThey walked together to the kitchen, and Megan served up three streaming bowls of chili and spread out bowls of avocados, cheese, diced onions, diced tomatoes and sour cream.\n\nMegan topped off everyone's wine and they dug in.\n\n\"Were you serious about what you said about me to Kaitlin in the bedroom?\" Jordan asked Megan. \"I mean that you've shared more with me than anyone since high school? That you're happy with me and what we have? You're not jealous and even enjoy sharing me?\"\n\nMegan reached across the table and took Jordan's hand. \"Absolutely. I know I'm not a normal girl. I've spent the last 12 years of my life focusing on my career, having casual relationships that I knew were doomed from the start, and were just for the sex. I honestly have been happier in the last 2 weeks since I met you than I've ever been.\n\n\"That's entirely your doing; Great sex, great company and great discoveries. I really have it all. I know if I wanted to be with another man that you'd be okay with it, but I don't want anyone else. You fill all my needs, at least you will now that you live here in town.\" Megan winked at Jordan.\n\n\"Thank you. I feel the same way about you.\" Jordan said. \"I've never felt this happy in my life, or this sure that my life is on the right path.\"\n\n\"Sorry Kaitlin.\" Megan laughed. \"Didn't mean to go all mushy on you. We have a lot to work out, but we can start doing it on our own time.\"\n\n\"No. I'm glad to know where you two stand.\" Kaitlin said. \"I think we're going to be spending a lot of time together the next two years, and maybe more. I'm not sure where I fit in all of this, but I'm keeping my mind open. I'm glad you two are happy together.\"\n\nThe conversation was awkward during dinner, knowing where the evening was headed. \n\nKaitlin told stories about her parents' ranch, in the Flathead forest near Glacier National Park. It was mountainous, with steep terrain that could only be crossed on horseback.\n\nShe was a master horseback rider, and had been riding since she was a toddler. It was actually the horse that first allowed her to get close to the Bigfoot, since they were less afraid of her on horseback. Most of her interactions had taken place with a horse between them.\n\nHer parents ran over 10,000 head of cattle on their land, and were grooming her older brother to take over when they retired.\n\nKaitlin had been homeschooled for kindergarten through 8th grade, but then her parents decided that she should go to a public high school for the experience.\n\nCollege was a huge shock for her. She went to a small town school, but it still felt huge, with thousands of people and the city lights and sounds all through the night. It was a far cry from the dark and quiet ranch with nothing but cattle for miles in any direction... and Bigfoot.\n\nShe had graduated in May and had been approached for the mine inspector job before graduation. It had taken her several months to decide. Money had been the deciding factor, since the Bigfoot research organization was paying for her master's degree and a six figure salary after graduation, just like Jordan.\n\nShe'd had two long-term boyfriends in college, both of whom turned out to be lying, cheating assholes. She broke up with both and swore to focus on her school and career.\n\nJordan thought that Kaitlin didn't know how beautiful she was, or else she was the most humble person he had ever met. He guessed that those boyfriends had only pursued Kaitlin because of her looks, and that she had intimidated most other men at her small town school. She never mentioned it, but didn't seem to understand why more men weren't interested in her.\n\nAfter dinner, Jordan offered to clean up dishes and put food away. Megan insisted that he put the chili in a Ziploc bag so that they could take it with them.\n\n\"I still need to go shopping for groceries tonight before bed.\" Jordan announced.\n\n\"Oh, about that. I mentioned in last week's report that you were spending hundreds of dollars a week on food for your Bigfoot, and which kinds. Dr. Stein had this delivered.\" Megan pushed two big cardboard boxes into the living room from the guest bedroom. \n\n\"The bottom of both boxes is nonperishable dry stuff, and there's fresh produce on top. Now you have no excuses not to be naked in my room right now.\" Megan had a huge grin on her face.\n\n\"Alright. Let me run these out to my truck and then there's nowhere I'd rather be.\" Jordan said.\n\nIt took two trips, and the girls were missing from the front room when he returned.\n\nJordan opened Megan's bedroom door, and found the room illuminated only by candle light.\n\n\"Took you long enough. I thought I was going to have to get started without you.\" Megan said, walking out of the bathroom wearing a see-thorough night gown. She wore no underwear beneath.\n\nJordan looked around and found Kaitlin sitting on an overstuffed chair. She was still fully clothed, except for her cowboy boots, which stood on the ground next to the chair. She tried to look calm, but her nervousness was written all over her face.\n\n\"We wouldn't want that, would we?\" Jordan teased. \"You'd scare poor Kaitlin.\"\n\n\"Shut up and get over here.\" Megan motioned with her finger. \"You're overdressed, mister.\"\n\nMegan grabbed the hem of Jordan's T-shirt and lifted, pulling the fabric slowly over his head. Jordan guessed that Megan was putting on a show for Kaitlin as much as she was seducing him.\n\nMegan wrapped two hands around Jordan's neck and pulled him down for a long, wet kiss. Jordan's arms wrapped around her and found her tight, round ass. He cupped her checks through the silk, and pulled her hard into him.\n\nMegan gasped as Jordan's strong hands pulled up, lifting her off her feet. She allowed him to lift her, wrapping her legs around his waist.\n\nShe broke the kiss first, kissing down his muscular chest. When she reached his nipples, she bit and sucked them gently, just the way she liked to be treated. That drew a gasp from Jordan.\n\n\"You're still overdressed.\" Megan whispered into his chest hair.\n\n\"That makes two of us.\" Jordan growled on top of her head, kissing her dirty-blonde hair.\n\n\"I'll show you mine if you show me yours.\" Megan giggled. \n\nShe grabbed his neck again, and he helped ease her down to her feet, then she took two steps back.\n\nMegan pulled first one hand through the thin spaghetti strap, then the other. The silk slid slowly down her body, pooling around her feet. Megan watched it drop, then looked up to Jordan and cocked one eyebrow.",
        "Jordan exaggerated the movements of unbuckling his belt and unfastening his pants. He swiveled his hips to shake free of the loose garments, taking his boxers with them.\n\nHis stiff cock bounced free, and Jordan heard a moan from the chair to his right. He focused on Megan.\n\n\"I seem to recall promising you a spanking.\" Jordan said.\n\n\"Mmm. You also said that you would...what was it? 'Drink from my source?' You got me all hot last weekend and left me horny. I expect you to fix that.\" Megan replied.\n\nJordan closed the space between them with one big step and picked her up in his arms. He carried her to the bed, kicking back the covers with his bare foot. \n\nHe laid her carefully on the edge, and spread her smooth legs. Megan's pussy was shaven, except for a sandy patch of curls at the top of her slit.\n\nJordan gently opened her with his tongue, separating her outer lips from her inner lips and running his tongue up both sides. Megan's flavor was rich, and even sweeter than Jill had been, with none of the earthy spice. He thought briefly that he would actually drink a cup of her nectar, it really was that good.\n\nHe sucked the inner lips into his mouth and gently pulled. He brought his index finger up, gently probing the opening. He found plenty of moisture there, and eased one finger into her warm depths.\n\nMegan gasped at the small intrusion, and moaned as Jordan reached her rough patch inside. Jordan licked slowly from her opening, up and over her clit, still hidden behind its hood.\n\nThe small nub swelled, and Jordan kept licking it, gently teasing it out into the open. He worked a second finger inside of Megan, and intensified his attack on her most sensitive spots, inside and out.\n\nMegan was responding, moaning and pumping her hips, swiveling them to move his tongue around more. She grabbed his head, pulling his tongue hard into her clit. Jordan relented, applying the pressure she needed. \n\n\"Aahhhh.\" Megan hissed out through gritted teeth. Her hips bucked up, but her hands held Jordan tightly to her pulsing pussy.\n\nShe squirted, filling Jordan's mouth with her sweet nectar. Jordan swallowed most of it, savoring the heady flavor and the writhing woman delivering it.\n\nJordan slowed his assault, extending her pleasure without over-stimulating Megan. He eased of her g-spot, pumping his fingers slowly in and out, and once again licking up and down the length of her pussy.\n\n\"Jesus, Jordan.\" Megan gasped through deep breaths. \"You ruined me. You've ruined me for all other men. I've never felt anything like that. Get up here and fuck me now! I'm not going to be able to sleep until I feel you come in me.\"\n\nJordan complied, kissing his way up Megan's body. He stopped when he reached her breasts, stimulating her nipples and massaging her small mounds.\n\n\"In me! Now!\" Megan pleaded.\n\nJordan cast his eyes across the room to the chair where Kaitlin sat.\n\nBy the dim candlelight he could see that Kaitlin had her jeans unbuttoned and her right hand inside. Their eyes met, and Kaitlin smiled at him. Jordan could see that her hand was moving rapidly.\n\nJordan turned back to Megan. He moved up to her face, kissing her collarbone and her neck. He nibbled gently on Megan's ear, which sent a shiver through her lithe, lean body.\n\n\"Mmm.\" Megan moaned. She grabbed his face and pulled Jordan into a kiss. Megan parted his lips with her tongue, teasing and encouraging Jordan's to come out to play.\n\nMegan's hands squeezed Jordan's ass, kneading the hard muscles. Her right hand moved around his hip, and between the two of them. Jordan lifted his hips to give her access. She grabbed his cock, pumping and rubbing him over her pussy lips.\n\n\"Do I taste better than the Bigfoot?\" Megan whispered in his ear, tasting her own essence on Jordan's lips.\n\n\"Best I've ever tasted.\" Jordan admitted. Megan smiled at him.\n\nMegan placed Jordan at her opening and lifted her hips, taking just the head into her soaking pussy. With her other hand on his ass, she applied just enough pressure to get him moving slowly into her.\n\nJordan lowered himself into her slowly, feeling each millimeter sliding through her velvety flesh. She was wet enough to keep pushing, all the way to the bottom.\n\nThey heard a gasp from across the room, and turned their heads to watch Kaitlin arch her back, humping her hips against her hand. Her mouth was open in a silent scream and she was slumped in the chair.\n\nJordan turned back to Megan. Fucking with an audience was driving her wild. Megan's eyes were watching Kaitlin, and she was shaking with excitement. Her breathing was heavy, and Jordan could see lust on her face.\n\nHe drew back slowly, feeling Megan's wet pussy with his cock. He drew back until only his head remained inside, and then Jordan pushed it slowly back in. He felt Megan shiver underneath him, and her pussy clenched once in a micro-orgasm. He repeated the motion, over and over.\n\nMegan had her arms wrapped around Jordan, one hand caressing his shoulder, and the other kneading his butt. She was gasping with the achingly slow fucking, and she was shooting little orgasms off every minute or so. She never took her eyes off Kaitlin, though. Jordan sped up, almost imperceptibly, at first. He knew Megan was primed for a huge orgasm, and he was getting himself ready to come with her. \n\nJordan was taller than Megan, and he had to lean his head down to kiss her neck, nibbling on her earlobe, which had the desired effect every time, setting off shivers. She had little diamond stud earrings in, and Jordan took the whole earlobe in his mouth, and tugged gently on the earring. Megan moaned and shook at that, going through another little orgasm.\n\nJordan sped up after a while, with long, even strokes. He continued his attention on and around her ears and neck. He could feel excited shivers as Megan's lust increased. He sped up gradually until he was slamming into her, focused on his own pleasure as it approached. \n\n\"Megan!\" He growled into her ear. \"I'm gonna come. I'm so close.\" \n\n\"Yes! Come in me. I want to feel you fill me up!\" Megan moaned between deep breaths. \n\nJordan came with a low roar, every muscle in his body clenched as he shot his seed deep within her. His hips bucked without his conscious effort, and his head swam in ecstasy.\n\nMegan felt Jordan's gift, and exploded. She may have lost consciousness, or she may have simply died and gone to heaven for a few moments. She felt the orgasm in every nerve of her body, and it even seemed to glow all around her, not constrained by her physical body. She was consumed by it, and gave into the sensation, lost in the overwhelming bliss. Time seemed to lose all meaning, as her orgasm stretched out, and she hoped it would never end. \n\nShe could feel him inside of her, still hard, still pulsing. The hot liquid he pumped into her squeezed around his hard invader, mixing with her own juices, and coating her, seeming to flow right through her entire body. It was like a magic elixir, washing the ecstasy slowly away, and leaving a deep satisfaction wherever it touched. \n\n\"Oh my god, Jordan!\" Megan gasped out when she could finally speak. \"How do you just keep getting better? You'd better level off soon, or you're going to kill me one of these times.\"\n\n\"I think it's you that's getting better.\" Jordan moaned into her ear. \"That was incredible.\"\n\nThey felt the bed move, and both looked up to see a very naked Kaitlin sitting next to them on the bed. She leaned down and kissed Jordan on the lips deeply. \n\n\"That was the most beautiful thing I've ever seen.\" Kaitlin whispered. She had a warm, wet washcloth in each hand. She handed one to Megan, and gestured for Jordan to get up. \n\nJordan slowly withdrew from Megan, and she shivered at the sensation and the emptiness.\n\nKaitlin wrapped Jordan's still hard cock in her washcloth, gently cleaning and admiring the appendage. \n\n\"I thought you both finished?\" Kaitlin said. \n\n\"We did.\" Jordan answered.\n\n\"Then how is it still hard?\" Kaitlin asked, admiring the now-clean cock in her hands. \n\n\"I'm just really turned on.\" He said. \n\n\"Do you always stay hard after sex?\" Kaitlin asked.\n\n\"Not always.\" Jordan admitted. \"I just have a lot of really good stimulation in the room right now.\" He winked at her, admiring her nakedness.\n\nKaitlin had full C-cup breasts. At only 22, they were perfect: big, round and sitting high on her chest. Her nipples and areola were a pale pink, and they closely matched the skin color around them. Jordan's eyes trailed down her soft curves to her mound, where a patch of soft, orange fuzz confirmed that she was a natural redhead. \n\n\"I... I know you don't know me. I know you just made love to Megan, but...\" Kaitlin struggled with what she wanted to ask him.\n\n\"You'd like me to make love to you too, but you're afraid whether or not the feelings are there?\" He asked. \n\nKaitlin nodded. \"I know you don't love me, but maybe...\" She was cut off when Jordan kissed her, deeply. \n\nJordan lay Kaitlin back on the bed, pulling her up and away from the edge, so her head was on a pillow. He kissed her again, gently caressing her lips with his tongue. Kaitlin's lips parted, and her tongue met his, tentatively at first, then they played, dueling and wrestling with one another.\n\nKaitlin was breathing heavy now, carefully exploring his back and shoulders with her hands. Jordan had a hairy chest, but only a small patch of hair at the base of his spine. The rest was smooth skin stretched over hard muscles, built up by a career of hauling buckets of soil for testing. Kaitlin explored and enjoyed the tight skin stretched over hard muscles.\n\nKaitlin's hands found their way down to his ass, and she gasped, breaking the kiss to focus on the round muscles in her small hands. Jordan moved down to her neck, finding her ears to be less sensitive than Megan's but he found a reaction when he kissed in the hollow between her collarbone and her shoulder. \n\nJordan put his weight on his left elbow, and caressed Kaitlin's body with his right hand. He started at her neck, softly tickling in small circles down, over her collarbone, and down her chest to her left breast. He cupped and kneaded the large mound, enjoying the sensation of the soft flesh and hard nipple in his palm. \n\nKaitlin gasped, and whispered in his ear. \"I want to be on top. At least to start.\"\n\nJordan pulled her legs into the right position, and rolled to his right, flipping Kaitlin on top who squealed and laughed. She shimmied her hips down to the right position, then lifted up and grabbed Jordan's cock.\n\nJordan was transfixed by the vision above him. By the low candlelight, he marveled at the long red hair spread out around Kaitlin's flawless, angelic face. Her heavy breasts hung over his neck, and he leaned forward, taking one nipple into his mouth, and rolling the other between his fingers. \n\n\"Mmm. You're driving me crazy.\" Kaitlin moaned. \n\nShe rubbed his cock head against her pussy, and Jordan felt warm moisture spread around the head of his cock. Kaitlin lowered her hips, taking just the head inside. She lifted up, and then pushed down, advancing another inch into her folds. She repeated, rising and falling until she had all of Jordan's seven inches seated inside of her.\n\n\"Oh, you really are big, but it feels so good. It's like a delicious fullness.\" Kaitlin smiled down at him. \n\n\"You feel amazing, inside and out.\" Jordan told her. He ran his hands down her flanks, and caressed her ass, enjoying the soft curves and smooth skin. \n\nMegan scooted up the bed, lying on her side, and kissing Jordan's shoulder as she watched the redhead start to ride him. \n\nKaitlin rocked her hips forward and back, feeling Jordan move deep inside her. His cock rubbed around and over her cervix, stimulating her to her first small orgasm. She rode it out, keeping the motion going until the climax faded.\n\nShe lifted her hips, and brought them down, providing the friction she craved. The motion was short, but she kept it up, and Jordan started pumping his hips up into her. She sat forward and froze in place, letting Jordan move for both of them. \n\nJordan took her nipple in his mouth, and gently nibbled at it. His hips slammed up into Kaitlin, and the combined sensations sent her over the edge. She came hard, her arms turning to jelly, and she fell in a pile onto Jordan's chest.\n\nHe wrapped both arms around her back, holding her to him while he extended her orgasm as long as he could. Kaitlin screamed, writhing in his strong grasp while Jordan slowly brought her down. \n\n\"You didn't come?\" She asked, tilting her face up to him. \n\n\"No, I wouldn't do that without warning you. Speaking of which, should I pull out when I'm close?\" He asked.\n\n\"No. I'm on the ring. You can come in me... I want you to come in me.\" She said. \n\nHe leaned forward and kissed her. \"I want that too.\" \n\nJordan started humping up into her again, planting his feet for leverage. He got a good rhythm going, watching Kaitlin for his cues to speed up. She was limp in his arms, and her face was buried in his chest. One hand rested on his thigh, and the other was by her face, running her fingers through his chest hair.\n\nJordan looked down and studied her thick, red hair. He had always had a thing for hair, and especially redheads. Kaitlin's hair was straight and long. He took one hand off her back, and ran it through that mess of hair, bringing a handful up to his nose to inhale her clean scent. \n\nHe sped up, ready to find his own orgasm. After several minutes, he could feel it coming on. \"Are you ready?\" He asked Kaitlin. \n\n\"God yes. Come in me. Make me come!\" She pleaded. \n\nJordan's hips were a blur beneath her, almost vibrating. He groaned as he passed the point of no return, and then let out a long low moan as he released inside of her. Kaitlin was already there, soundlessly screaming and panting through her own climax. \n\n\"I can feel it. It feels so hot! So good! Yes! Fill me up, I want it all!\" She panted, clawing at his chest and sides. \n\nJordan slowed, feeling himself slowly starting to deflate inside Kaitlin. He relaxed, laying his legs back on the bed. Kaitlin shifted downwards, pushing as much of him as she could back in.\n\n\"Can I just lay on you forever?\" She asked. \n\n\"As long as you like.\" Jordan answered, knowing from the Bigfoot how amazing the sensation was.\n\nJordan felt a hand on his cheek, and turned his head to see Megan. Her eyes were wet with tears, and she leaned in for a kiss. \n\n\"Are you okay?\" Jordan asked her when they broke the kiss. That got Kaitlin's attention, who turned her head.\n\n\"Of course! That was just so damn beautiful. I'm sorry, I'm just being a girl. Ignore the tears and go back to enjoying each other.\" Megan laughed through a little sob.\n\n\"Get in here.\" Kaitlin said, extending and arm and pulling Megan onto Jordan's open shoulder.\n\nThey were silent for a while, all breathing heavy. When their heart rates slowed and they caught their breath, Megan turned her head and looked across Jordan's chest at Kaitlin.\n\n\"Not that I'm complaining, but why the 180? You seemed so set on not getting involved tonight.\" She asked.\n\nKaitlin laughed. It was beautiful to Jordan's ears. \"I had an epiphany.\" Kaitlin said. \"I realized that I was comparing Jordan to my college boyfriends. I thought he was a player, just out to get some.\" She told Megan, then to Jordan: \"Sorry.\" And she kissed his chest.\n\n\"When I was in college, I had my first real internet connection, and I discovered porn. It got me off, but most of it was so hard to watch. The 'actors' if you can call them that, just started making me sad. The women would shriek through something they obviously weren't enjoying. If it ever showed the men, they were indifferent to the women, just humping away, using them to get off. \n\n\"That's how my old boyfriends were. They didn't care about me, they just wanted to get off. \n\n\"When I watched you two together, it was the hottest thing I've ever seen. You two genuinely enjoyed each other, and you both made sure the other was having the best time of their lives. \n\n\"Jordan, you're nothing like my player exes. I guess I was jealous of Megan, and hoped that you would have even a tenth of what you gave her that you could share with me. Thank you for that. You met and exceeded my wildest dreams.\" Kaitlin giggled and kissed Jordan's chest. \"You also got me really horny first, so that helped.\" \n\nThey cuddled for a while, Kaitlin gently petting Jordan's chest hair. \n\n\"Can I tell you a secret Jordan?\" Kaitlin asked nervously.\n\n\"Of course. Do we need Megan to leave?\" \n\n\"No!\" She laughed. \"Not that kind of secret... When I read Megan's report about you, and found out that I would be meeting you and working with you... I had this fantasy. I looked your pictures up online, from your LinkedIn profile and from your job's website. \n\n\"I got off to your pictures. You were so good looking, and I fantasized that you would have to claim me to get me to be accepted by the Bigfoot, just like you did with Megan. For the last two weeks, I haven't been able to think of anything or anyone else.\" Kaitlin admitted. \"It was so hot, and I just kept getting off thinking about it.\"\n\nJordan looked down and saw that her clear, pale skin was turning pink.\n\n\"Thank you for telling me. I'd be lying if I said I didn't have a similar fantasy. Did it live up to your expectations?\" Jordan asked. \n\n\"Oh, god. Met and exceeded. So you really fantasized about me too?\" Kaitlin asked. Jordan nodded slowly. \"How about me? How did I compare to your fantasies?\"\n\n\"I didn't expect you to be so beautiful. I didn't expect you to be so open and comfortable and sweet. I would also say met and exceeded. By a lot.\" Jordan said, then turned his head to Megan. \"Are you okay, Megan? This wasn't too fast? Are you jealous?\"\n\n\"Oh, god no. I meant it when I said that I'm kinky that way. I enjoy watching you with the Bigfoot, and even more enjoyed watching you with Kaitlin. I just hope that next time you'll do her first, so that I can watch and get that horny before you fuck me. \n\n\"I'm all hot right now, but couldn't go again, even if you could.\" Megan admitted. \"You wore me out.\"\n\n\"Me too.\" Kaitlin chimed in. \n\nJordan laughed. \"Me three.\" \n\nThe three got up to brush their teeth and take a shower together before they climbed into bed. Jordan washed both women's hair, and soaped up their bodies, but a week of little sleep and an hour of sex had left him exhausted, and none of them were in the mood to play anymore that night. \n\nJordan slept in the middle, with a woman on each shoulder. Sometime in the night, he had to roll on his side, and wound up in the middle of a spoon sandwich. It was the best sleep he'd had all week.\n\n***\n\nJordan's phone woke him in the morning. He sat up, looking for the source of his ringtone. He found it in his pants on the floor. It was Dr. Stein. Jordan answered it and put it on speaker phone for the women to listen in. \n\n\"Hey Jim! Good morning. What's up?\" He greeted.\n\n\"Good morning Jordan. I'm afraid I have some bad news.\" Dr. Stein said, worry in his voice. \"We've been monitoring the Fitbits that you put on the six female Bigfoot. Jane left the cave around nine PM last night, and she hasn't been back since. \n\n\"The other females are stressed, with elevated heart rates and blood pressures. None of them have slept much since returning this morning. We think something happened to her. We've got our infrared aircraft in route to search for her, but they're coming down out of Cheyenne, and won't be flying over for about two more hours. \n\n\"Can you get yourself on the road and ready to go rescue her, if she can be rescued?\" Dr. Stein asked. \n\nJordan was already on his feet, pulling his pants on. Megan and Kaitlin too were jumping out of bed and getting themselves dressed. "
    ],
    "authorname": "bobalous",
    "tags": [
        "bigfoot",
        "colorado",
        "jordan",
        "mountains",
        "monster"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/monsters-in-the-mountains-ch-02"
}