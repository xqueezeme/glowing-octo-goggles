{
    "title": "Pledging Tau Geta Delta Pt. 07",
    "pages": [
        "Waking up in my own bed was its own kind of rude awakening. All by myself, alone with my thoughts. I had so much to think about. I'd gotten used to the breasts and the emptiness between my legs. My new anatomy still felt strange when I thought about it, but my mind was on other issues today.\n\nToday was the last day of my initiation week, my last day as a girl before the fraternity president would turn me back into a guy and officially let me join Tau Geta Detla. I'd been a girl for the whole week, ever since the opening ceremony when the spell was cast on me.\n\nI usually wasn't one to lay in bed and ponder things. This morning was different though. The truth was, I had a dilemma. I'd never been faced with this big of a choice before. It was probably worse for the fact that I hadn't really considered that it would be a choice when I started. Right after being turned into a girl, I figured it was a small price to pay for becoming a Tau. Hell, I even looked forward to it as an adventure, or at least an experience I'd couldn't miss. Curiosity alone required that I not quit.\n\nThe fundamental point though was that I never considered staying a girl. Naturally, I'd get to try out being a girl, all the way through having sex. It was crazier, and yet more fun than I would have expected. The sex was amazing, and I found wearing skirts enjoyable. Heck, it was almost fun teasing guys, with my new sexy curves. I wasn't some outrageously gorgeous girl. I was a bit short, and thin, with an almost elfish face and big ears, but a nice pair of breasts. I didn't need to worry about attracting guys, and for the first couple days, as weird as things were, I enjoyed myself.\n\nThat didn't mean I wanted to stay a girl though. A little fun experimentation was one thing, but living the rest of my life like this? It was almost out of the question. Then came my encounter with Max. My fourth challenge as a pledge was to sleep with a friend, and he was the one I choose. After that, everything flipped on its head.\n\nWhen I started, I'd been given a set of memories of my new girlish self, the life I'd lived as Alison, as if I'd been born a girl. The memories were complete down to every detail. At first, my male side had dominated and I simply called up those memories of being Alison for help with specifically girly things like putting on a bra or makeup. As the week progressed, I found myself thinking more and more as Alison and less as the guy I used to be.\n\nThat was the trouble with Max. In my old life, we'd been friends. We hung out together, played games, shared what passed for secrets between two guys. In my life as Alison, we'd done much the same thing, but there was more too it than that. We had feelings for each other, but due to the flukes of life one of us was always dating someone else, at least until now. When the challenge pushed me to sleep with a guy friend, the part of me that was Alison pushed for her wishes to be fulfilled, and the rest of me followed along, not knowing just what would happen.\n\nThe sex was amazing, but there was more. Feelings I'd only thought I'd felt before. As Alison, I loved Max, the truth had been buried behind a deep friendship and the fact that I didn't like to mess with other people's relationships, but those details changed nothing. Sleeping with Max, and enjoying every moment of his hands roaming over my bare flesh had laid bare my affection for him.\n\nI tried to deny it, but now, two days later I was left staring up at the ceiling fretting my choices. Did I want to go through with this? If I changed back into a guy, I'd lose this chance at love. The very thought of losing Max made my stomach twist. It had taken this long to get him, I couldn't very well let him go again. Could I?\n\nI shook my head. Trying to clear out those girly thoughts. If I just let myself be Alison, I knew what choice I'd make. My guy side was screaming out for attention as well. Staying a girl would mean an entirely different life. Some things wouldn't be so different, but there were serious disadvantages as well.\n\nI'd always considered myself a bit of a feminist in that sense. I could see the stuff women put up with, and did my best to knock the heads of other guys who spouted off especially rude things. In my time as an actual girl, I noticed it as well. It wasn't just the catcalls and casual harassment. There was a general condescension. I knew some was done with chivalrous intent, but some were simply unadulterated contempt.\n\nNaturally, that wasn't even the biggest thing. If I stayed a girl, and I wanted a family it meant that I'd be a mother. That whole notion felt almost insane. I'd have a kid grow inside me, and then I'd have to give birth to it, nurse it and all the rest. My casual thoughts of marriage and family turned a lot more intense when I was going to be the one handling the baby end of things. Even for my girly half it was somewhat frightening thought, though, as Alison I sensed a bit of excitement as well.\n\nI tossed off the covers. This line of thinking was just making me tense all over, and I decided I might as well get up, get dressed and find out what everyone else was thinking. A bit of group therapy was just what I needed.\n\nFor the first time in days, I sat back and just enjoyed the shower. The glorious feeling of warm water flowing over my naked, sensitive body. I couldn't deny that I'd come to enjoy my girl form quite a lot as the week went by. Sure, I could sense that Alison had some body issues, but from a guy's perspective, I knew I had a rocking bod.\n\nI still hadn't gotten over the softness of my breasts, or just how tender they were. I could get myself to moan and whimper with barely a few squeezes. It wasn't as intense as rubbing my pussy, but it was a nice comfortable feeling. Naturally, it was better when it was someone else's hands and I had to endure the mystery of just how they would move next.\n\nThe fact was I felt kind of like a dead man walking. If I chose to be a Tau, this would be my last shower as a girl. My soft breasts would be replaced with a flat and lightly muscled chest and the fleshy folds between my legs would return to the floppy cock and balls I'd been so fond of before my transformation. It was hard deciding if I wanted to try rubbing one out right here in the shower, maybe my last orgasm as a girl, and if nothing else, I knew I'd miss the feeling of a feminine orgasm.\n\nI decided not to. Given the way the week had gone, I suspected that the Taus had something special planned for the closing ceremonies. I didn't doubt for a moment that it would be overflowing with sex. I certainly wanted to be ready to enjoy that to the fullest.\n\nGetting dressed for my last day was almost the hardest decision. In the end, I couldn't keep myself from choosing a nice girly blouse and skirt combo. I went colorful today, with a nice baby blue top, rainbow striped skirt and nice long socks that went half way up my calves. I made sure my underwear selection was bordering on scandalous as well. The panties were thin and lacey, and hugged tight enough that my pussy lips were easy to make out. My bra was pink lace as well, with a thin mesh over the top so that my nipples showed through lewdly between the flower patterns. I didn't know what I'd be getting into, but I knew I was going to be ready for it.\n\nThe dinning room was near to packed this morning with other pledges. I was actually surprised that everyone had gathered here, but then I realized that this was the last day, and a Saturday, so there were no classes to pull us away. No doubt, the president was probably waiting to make an announcement. I grabbed a quick bit of food, spotted Alex and headed over.\n\nThe lively blond and her friends had made this week a lot easier for me and I was happy to see them again. It had actually been a few days since we'd all met up at the same time. The life of a pledge was sufficiently crazy to keep us all going in separate directions.\n\n\"And finally, Alison drags herself out of bed. I know you came in late last night.\" Alex smiled at me wickedly.\n\n\"How do you know that?\" I gave her a playful scowl.\n\n\"Because I was half a block behind you.\" She giggled. \"It took me half the day before I managed to corner my guy yesterday and well, I'll never quite think of the top floor of the library in the same way again.\"\n\n\"What? You didn't? Where did you?\" I stammered. The top floor of the library was just book shelves, row after row of shelves. Unlike the other floors, there were no study areas, desks or even chairs. There wasn't even a bathroom. The only thing up there was books.\n\n\"Between the stacks. He carried me around, pressed me into a wall and just humped until we heard someone and then he'd carry me somewhere else with his big cock still inside. It was crazy. I think I about had a heart attack like ten times, but god when I finally came, it was insane!\" Alex blushed a bit, but it wasn't hard to tell that she'd savored every wicked second of it. Her friends were blushing just listening to it, and no doubt they were thinking about how they'd met the last challenge as well.\n\n\"So how did you make out yesterday?\" Alex turned things around. Now that she'd told us her kinky story, there was no way that I could hold back. I covered the details about how I took Max to the side of the library, got fucked, got caught and then released by campus security and then proceeded back to his place for a wild afternoon in bed.\n\n\"You know, girls. I think our little Alison has a crush on someone.\" Alex giggled as I finished my story.\n\n\"Hey!\" I blushed about three shades deeper just from the suggestion. It didn't help that she was right.\n\n\"It's okay, Alison, I know how you feel.\" Brittany blushed from her side of the table. The little redhead was looking stunning in a sundress this morning, but she was red from the face down. From the way we looked, you'd think we were all about to die from terminal embarrassment. I guess it went with the territory, but it still was absolutely crazy.\n\n\"You too, Brit?\" Alex looked a bit surprised and turned towards her friend. \"Who did that to you?\"\n\n\"You know Stan, right? My old roommate, well, he so sweet to me when we did it the other day, and last night we even went out...\" Brittany's color nearly started to match her hair. I understood the feeling. It was more than just being in love, it was the fact that she was a girl in love, a girl who hadn't always been a girl.\n\nThat left Alex speechless, which was a feat that didn't happen nearly often enough. Thankfully, a hammering came from the other side of the room to distract us from this terribly awkward turn of conversation. It was time to find out what our final day as pledges would be like.\n\n\"Pledges! Congratulations, this has been one of our best years, and I'm sure you can see that most of you have made it this far. I want to commend you all for your flexibility and willingness to try new things. As you might have guessed that was a lot of what this whole process was about. We want our members to be open to the world and to understand other people better. What better way than to make you live a different life.\" Our illustrious President stood on a chair at the far end of the room as he spoke. Hamilton Prescott was every bit the preppy standing there. I was a bit concerned that he seemed to have enough of a sweater vest collection to wear a different one every day.\n\n\"Now, I'm sure you're all wondering just what your final day as women will entail. First, there are no more challenges. Tonight we'll have our big welcoming party, and conduct our final ceremonies with our sister sorority the Delta Kappas. As you all know, now that you have completed the initiation rites, you can choose to become a Tau or a Delta. That is what you need to do today, make up your mind. For some of you it will be easy, but if experience is any guide, I know that some of you are struggling with it.\" Prescott held up a small box so that everyone could see.\n\n\"In this box are tokens. Each pledge may take one, and you can give it to anyone you like. The person who gets this token will remember the world as it was before you changed as well as what they currently remember. I know sometimes advice from a good friend can be invaluable. You don't need to use the token, but everyone should take one, and then we'll see you at the party tonight.\" He started to turn away from the crowd and then switched back. \"Oh! You are also free to bring a date! Now make the most of your day!\"\n\nPrescott started walking around the room and handing out tokens. I turned back to the other girls. Everyone seemed lost in thought for a moment.\n\n\"So, have you all decided?\" Alex was naturally the one to break through the quiet.\n\nNot that it worked. Everyone just glanced around at each other. I think I was pretty much matching Brittany's level of red as we blushed together. Megan seemed a bit more confident, but Alex was the one smiling from ear to ear.\n\n\"Did you?\" I finally asked. It really seemed like she was about ready to burst, but didn't want to blurt it out.\n\n\"Yep, totally Delta, all the way.\" Alex proclaimed. The fire in her eyes left me with no doubt that she meant it. As focused as I was on my own decision, this was straight out of left field.\n\n\"What?\" Megan gasped. She was pretty much speaking for all of us. Sure, Alex had gone all in on the whole embrace the experience thing, but she never hinted for a moment that it was anything other than a wild adventure for her. The implication that she would change back was always there. The thought that she wouldn't was just shocking.\n\n\"What? How could I give up this?\" Alex waved her hands over her admittedly awesome curves. \"I've never had such great sex, and it is just awesome playing guys for chumps.\"\n\n\"But, what about like babies and periods?\" Brittany broke in. Staying as a woman meant going along for the whole ride, including the icky parts. It wasn't all just sex.\n\n\"Hey, being a mom could be cool and I can handle periods if it means I get to enjoy getting bent over and having my pussy hammered till I faint.\" Alex replied. There wasn't a hint of doubt in her voice. That part wasn't surprising, at least. If there was one thing about Alex that was true, once she made up her mind, that decision would stand.\n\n\"So, how about you?\" Alex looked at Brittany and the red head blushed right down to her cleavage.\n\n\"I... I don't know. I mean, I liked being a guy, but I like being a girl too. And then there's Stan.\" She squirmed in her seat. I didn't need to ask to know just how she felt about this guy. I had the same issue with Max. The girl part of me loved him fully, and the guy part of me loved him in the awkward way that guys had when they loved each other platonically. I never had any issues with being a guy, but there hadn't ever been an option.\n\n\"I'm going Tau.\" Megan tossed in. I knew she was just interrupting to get the fire off of Brittany. Then she turned to me. \"What about you, Alison? Going to keep the boobs?\"\n\nI just had to look down at that. Over the past few days it had actually become normal to see the twin mounds of flesh jutting out in front of me, and to feel them jiggling pretty much any time I moved. They were nice, soft and round, and my girly side was always happy I'd grown such an attractive pair.\n\n\"They are pretty nice.\" I giggled and then cupped them and gave my chest a little bounce. Someone had to lighten the mood. \"I don't know either. It's been a crazy week, and well, I guess I have a use for my token.\"\n\nThat was what summed it up. The whole notion was freaky scary though. If I gave Max the token, he'd remember everything, what I had been, and what I was now. I didn't know how he would react to that. If I just stayed Alison, he'd never know I'd been anything different unless I gave him the token.\n\nLucky enough that was the moment Prescott walked by with his little box. \"Ladies, here are your tokens.\"\n\nEveryone reached in to grab one. I felt the strange warmth in the little piece of metal just like the spell book so many days ago. I turned it around in my fingers. Aside from a few dark runes carved in the middle it looked like a slightly weathered slug of steel.\n\n\"Will the person I give this to always remember everything, or just for today?\" I asked.\n\n\"They will remember until the ceremony tonight. After that they'll forget again, unless you want them to remember. We do have an exception for one person for each pledge. They'll have to take the same oath to never reveal our secrets though.\" Prescott explained. I nodded. It made sense, and I was glad they were so accommodating.\n\n\"Thanks.\" I felt a bit relieved. As always it seemed like they had an escape valve programmed into their system. For me, it made this all the easier. If I gave him the token and freaked out, I could just let him forget again.\n\n\"Oh, and I should have mentioned this before, but the spell that allows both sets of memories comes with a bit of a reaction limiter to keep people from freaking out completely.\" Prescott added before he wandered off to the next table.\n\n\"So, I guess I'll get to find out what you two chose tonight.\" Alex shot me and Brittany both a look and then dragged Megan off before we could say anything else.\n\n\"I think she wants us to have a chance to talk.\" Brittany flashed me a weak smile.\n\n\"Or she wants to make arrangements to sleep with Megan after she changes back.\" I giggled. I wouldn't put it past Alex. That was the kind of kinky thing she'd go for in a heartbeat. I imagined there would be a lot of that going on tonight after people started to change back.\n\n\"That would be Alex.\" She nodded. \"I still can't believe she's so sure to stay a girl though. I mean, I knew she liked all this, but wow.\"\n\n\"I know, but she never goes half way does she?\" I smiled. \"But then it's up to us now. I never thought I'd be making a choice like this.\"\n\n\"Yeah, but it's crazy. I guess you're going to give your token to your guy friend right?\"\n\n\"Yep, I really do care what he thinks. We've been through a lot together, from both sides and I have to admit I've kind of fallen for him.\" I squirmed a bit at that admission. It was easier to tell Brittany since I knew she was going through much the same thing.\n\n\"I know. I never thought I could get a crush on a guy, but here I am. I just feel kind of silly staying a girl just for that though, you know? What if he dumps me, and then I'll still be a girl and can't change back.\" She explained.\n\n\"Exactly. No matter what my feelings are for him, it's about more than that. Do I want to be Alison forever, no matter what?\" That was the truth, even if it didn't feel that easy. Having found someone I really loved didn't make it easy to just walk away, no matter what happened.\n\n\"Well, there's only one thing to do, now.\" Brittany got up, and I followed. \"I'll see you tonight.\"\n\n\"You too. Take care.\" I turned to her and gave her a big hug. We both needed it. It was still a bit weird though.\n\n\"Wow, too much boobs.\" Brittany giggled as we jiggled against each other for a moment. I laughed with her. It was just a crazy feeling, but I felt my mood lighten just like that.\n\n\"Yeah, but we have to enjoy them while we got 'em.\" I agreed. We parted ways. There was still a lot to do today, and standing around here wouldn't get it done any faster. I turned the token around in my fingers and then reached for my cell phone.\n\nIt didn't take much to get Max to agree to an early lunch. After the last few days I knew he hadn't gotten enough of me. I'm sure he was swirling in a wild flurry of sexual daydreams by now. If that wasn't enough, I was about to throw him another huge curve ball.\n\nI didn't let the token leave my hand. It was just too important, I couldn't let it get lost somehow. So I spent the rest of the morning running it over my fingers like one of those Chinese worry balls. I hadn't felt this anxious in years. It wasn't just Max, it was myself. I didn't even know what I wanted. My old life as a guy hadn't been bad or anything, but I'd never really had a choice, it was just the way things were.",
        "\"You look a bit wound up, is everything ok?\" I felt Max's hand on my shoulder when he finally found me sitting in the student union cafe. I'd just been staring out the window, waiting for him and debating all the finer points of life.\n\n\"It's looking better, now.\" I smiled over at him. \"Come, sit down I need to talk to you about something.\"\n\n\"Oh.\" Max seemed to flinch a bit. \"You need to talk, to me, in a nice public space...\"\n\nI laughed, the raw absurdity of his assumption. It was perfect, I wish I'd have seen it, so I could have avoided the implications, but I was almost glad I hadn't. It was the perfect joke for the day I was having.\n\n\"Oh, you silly idiot!\" I shook my head and pushed him towards the seat across from me.\n\n\"So you're not going to break up with me? Or whatever since I didn't think we were going out...\" Max looked oddly cute with the furrowed eyebrows and a total look of confusion. I'd underestimated just how out of his depth he was now with the current state of our relationship. That didn't make this any easier though.\n\n\"No, but I do have something to tell you that you won't believe, but first you have to take this and hold it in your hand.\" I held out the little token so that he could see it and the lightly glowing runes. Thankfully, the same magic that would allow Max to remember the old me also let me tell him about the initiation rites at the Tau's. Otherwise, I'd have still been bound by the spell of secrecy I'd taken that night when I first transformed.\n\n\"What is it?\" He asked as he reached for it. \"How does it glow like that?\"\n\n\"Just take it, stupid.\" I shot him a quick glare and then he plucked it out of my hand. For a moment he just looked at it, and then he just seemed to stare at it. For a minute he was quiet. Then, with a sudden jolt he snapped back. His eyes were wide, and he looked at me.\n\n\"Alison?\" He took a deep breath and looked at me like a deer caught in headlights. \"I remember you, and yet I don't, there's a guy, he was like my best bud, and yet he's like you, and we met in the same lab, but you weren't in that lab or he wasn't, but you both were but not together...\"\n\nI grabbed his hands, and he shook his head again. \"It's okay, just let me explain, all right?\"\n\n\"Sure. I'd like that.\" He nodded. I could only imagine just what was going through his head. My girl memories had kind of seeped into me over the first few days, until I was used to them as a normal part of myself. For him everything was just crammed in all at once. It may have only covered the last few years, but it was enough information to be disorienting, and in this case, the parallel was obvious. In one set, I wasn't there and my guy self was, and only my girl self was in the other set.\n\n\"You remember, I decided to pledge a sorority, right?\" He nodded. \"I know we talked over how crazy their initiation process was, and how it was so secret. Well, it's a bit more complicated than that. Think back a week, and you remember your guy friend, he was pledging for Tau Geta Delta, wasn't he?\"\n\n\"Yeah, he was, and we had the same conversation, well, almost as when I talked to you, but it was the same walk, back from class, on the same day, and I talked to both of you but...\" I squeezed his hands to pull him back, and he looked up at me again.\n\n\"Okay, I know this is going to sound crazy, but I'm that guy, and the crazy Tau initiation process, well, that's what turned me into Alison and filled your head with memories of her.\" I tried to be as clear as I could. I didn't know if it would burn through his confusion. The way his eyes kind of sparkled for a moment told me that I'd broken through.\n\n\"The token allows you to remember both sides, what was real and the fake reality that was created when I became Alison. The only Alison memories that are real are the ones that are from after I started pledging.\" I explained. I felt him tense up for a moment, but he didn't pull away. I knew this would take a moment for him to sort out, but despite being a bit of a doofus, I knew he'd connect all the dots now.\n\n\"Holy crap.\" He sat there, blinking as the little mouse wheel inside his head must have been going on overdrive. His unfocused gaze continued for a moment and then he snapped out of it and looked at me.\n\n\"So you were a guy, and we like totally...\" He took a deep breath. \"But you were a woman, and I knew you were a woman, and it was awesome. But you're really a guy?\"\n\n\"Right now, I'm a woman, Max, and I've been one all week. But I am the same person.\" I was just glad the magic was supposed to be calming him down, because if this was the calm version of Max, I didn't want to think what the regular Max would have been like.\n\n\"Holy crap.\" He repeated. This time, though, there was a hint of surprise, and wonder. It wasn't just that I was a girl, there was more to it than that. He was starting to put the pieces together. The only question was, where would he jump to once everything got figured out.. \"They changed you? Changed everything?\"\n\nI nodded. \"If I called up my Mom right now she'd start asking me about my boyfriend status and how she wants grandkids as soon as I graduate.\"\n\n\"Do you want that? To have kids, you know get pregnant?\"\n\nI laughed, of course he'd jump on that part of things. \"Maybe, I guess that's why I'm here right now, the change isn't permanent, it was only for the initiation, but I don't have to change back.\"\n\n\"And you want me to help you decide?\" He was starting to come down now. He understood the situation and the time had come for him to pull his weight.\n\n\"You got it, hot stuff.\" I smiled. \"I kind of hate to throw you in the deep end like this, but you're the best friend I have, and you know that was true in two lifetimes now.\"\n\nMax sank into his chair, threw his head back and just laughed out loud. For a moment I wondered if I'd finally broken him. I'd tried over the years, but perhaps the time had finally come.\n\n\"Oh, Alison, that's crazy! Why come to me?\" He asked. He knew, we both did, but now I had to say it.\n\n\"Because we've been as close as two straight guys can be, and as close as a guy and a girl can be. Most of all, Max, right now, I think I love you.\"\n\nThe words hung in the air as I clamped my hands over my mouth. How did I say that? I knew it was true, as much as I'd fought not to recognize it. I just hadn't planned on telling him that.\n\n\"Holy crap.\" He reached out and grabbed my hands, pulling them back down to the table. He looked into my eyes. \"I love you, too, Alison.\"\n\nMy heart stopped in that moment. You go your whole life looking for that moment, when someone else tells you that, not because they were your parent or relative or just to be nice, but because deep down they really felt that way. I'd never heard those words spoken to me with such conviction before, and now I didn't know how to react.\n\nWe sat there, looking at each other, our words hanging in the air between us. Slowly our lips started to quiver. Then together we let out a nervous laugh that soon became a riotous sound. This was just too serious, and neither of us were any good with that for too long.\n\n\"So what now?\" He asked once we calmed back down.\n\n\"Well, I have to decide tonight. They induct the new Taus at a party this evening. If I don't change back then I can join the Deltas, but I have to decide by then.\" I explained.\n\n\"This is just wild.\" Max was starting to get past the shock. I was happy for it, but also kind of anxious about just where he would go with this. \"So you really know both sides now, girl and guy?\"\n\n\"Yeah.\" I nodded. He knew just how much I knew about being a woman. After we'd spent a whole evening in bed together, and a few times since then, Max couldn't doubt that.\n\n\"So is it better as a guy or a girl?\"\n\nI laughed, of course he'd ask that. I suppose it was something everyone really wanted to know. \"It's really hard to say, it's so different, Max. Besides, a girl has to have some secrets after all.\"\n\n\"Oh! Tease!\" He grumbled. \"Seriously, though what do you want? It's your life, I know how I feel, but I don't want to pressure you about something like this.\"\n\n\"I don't know. It may sound crazy, but I'm kind of used to being a woman now. It's so different, but it's fun too. Honestly, in a lot of ways it's just life. There were plenty of times I didn't even feel like things were different, like I'd be doing the same thing if I was still a guy.\" I appreciated the support, but I hadn't asked him here to be a neutral sounding board. \"You know why I asked you here right?\"\n\n\"Because you trust me.\" He nodded solemnly. \"And there wouldn't have been any point in giving me that little glowing thing if you didn't want my advice.\"\n\n\"Pretty much.\" I smiled. \"That, and I care a lot about you. If we hadn't been so close these last few days, I'd have probably changed back and just looked at this as some wild adventure.\"\n\n\"But now, you wonder if there is more to it. If we can have more.\" His face was turning serious. I knew he was starting to struggle with the same questions I'd been working over for the last couple of days, when I'd been unable to distract myself.\n\n\"Yeah, pretty much. I think we have something special. Something I've never felt before on either side of the coin. I don't just want to throw it away, not if you feel the same way.\" I continued. This was the core of it. The scariest part of it. I knew just how fleeting young love could be, I'd been through enough relationships not to doubt it. Yet, this felt different. It wasn't like we'd just fallen into bed together or been caught up in some random romance. I'd known Max for years, we'd shared things together, bonded in a way I'd never done with another person.\n\n\"You've kind of sprung this on me, you know.\" He fidgeted a bit in his chair. \"Normally, I get weeks to screw up a relationship, and now you've anchored me in the deep end. I guess I should be honest then.\"\n\n\"That might help.\" I nodded.\n\n\"I've been thinking about us a lot. I mean, even before this, at least when you were a girl or however that works. When we slept together, it was like everything had just come together in this one perfect moment. I haven't been able to stop thinking about it, and well you didn't make it any easier yesterday.\" He smiled. I blushed a bit, remembering how I had taken him around the library and let him fuck me silly before we got caught and released by a campus cop. Then we'd spent a good bit of the afternoon burning off the adrenaline from that in his bed.\n\n\"I know what you mean.\"\n\n\"And I've always liked you, we just never worked it out before. I was almost getting ready to talk you down from the whole sex buddy thing and maybe try a real relationship.\" He fidgeted some more. I knew he was compressing weeks of anxiety and awkwardness into one conversation. Max usually wandered randomly around his relationships until they blew up.\n\n\"But, then I told you all of this.\" I added. I knew I had to let him get this all off his chest before he could move on to the next part.\n\n\"Yeah, and this is some high grade crazy, Alison, but I don't think it changes anything for me. I really do love you. I think I have for a while, but I don't know if I can ask you to stay a girl for me, I don't want to think you chose this because of what I say.\"\n\n\"Thanks for saying that.\" I looked into his eyes again. It still felt a little weird looking into a guy's eyes like this, but if I chose now, I'd have to get used to it. \"I understand that. It's really crazy you know, the Alison part of me is having a hard time not just jumping over and kissing you and squeezing you till you pop. I've really enjoyed it, you know, being a girl, and even if we don't work out, I think I could be happy living this life.\"\n\nI went quiet, thinking, deciding. I hated deciding. There was only one thing to do when it came to deciding.\n\n\"So...\" He leaned in, as anxious to hear as I was to tell.\n\n\"So, why don't you come to the party tonight and watch me become a Delta?\" I moved in and kissed him before he could say another word. It was a tender, soft kiss, just what I needed, the perfect way to seal the deal.\n\n\"I'd love to.\" He smiled as we broke the kiss.\n\nWe sat there for a while after that, talking and trading quick kisses. He was full of questions, and I did my best to answer them. I peppered him as well. It was so weird to get his different perspectives on me as both a guy and girl. Sometimes it was a bit awkward, given that he now knew things he'd told the guy me that he'd never told Alison. Despite our closeness, there was a level of crude that Max had spared Alison, but now he knew I had all his dirty little secrets.\n\nFinally, we parted ways. We both had to get ready for the party and the final ceremony. The warm comfort I'd felt with Max quickly started to burn off as I walked back to the fraternity house. Was I really going to go through with this? I asked myself that as I was acutely aware of every jiggle from my chest and the airy emptiness between my legs in a way I hadn't felt for days. If I did this, I would always have this body.\n\nIt still felt like complete madness, but I went through with the rest of my preparations. A quick shower left me standing in front of my closet staring at my choices with only a towel wrapped around me. If I was really going to be a girl, it felt like I should wear something girly, but nothing quite felt right. What should I wear for my first night as Alison? Until now it was almost like I'd been sharing her life, but once I decided not to change back then I would truly and fully be Alison.\n\nI made my decision, pulled on the clothes and then worked my way through my makeup and made sure my hair was set perfectly. It was all so natural now, as I let the girl part of me take over. I remembered how awkward it was that first time, and how strange it felt. As Alison I'd been doing this since I was in high school, and it was perfectly natural. The strange juxtaposition was ebbing though. I knew I'd never forget being a guy, but it would be more like a crazy dream than my real life soon.\n\nAs soon as I was dressed, I raced back outside. Max was going to meet me there, and we'd have a short chance to talk again before the ceremony would begin and he'd be left with the other guests while the pledges finished the rituals.\n\n\"Wow, you look amazing.\" Max gushed as he took in the sight of me. I blushed a bit as I noticed his eyes wandering all over. He wasn't trying to stare, but with my legs and chest on display, I couldn't blame him. I'd gone with a cute white dress with a ruffled skirt, big pink belt, and a rather plunging neckline. It showed off everything without being too openly lewd at the same time.\n\n\"Thanks, and you're doing nicely too, hot stuff.\" I smiled as I checked him out. He had on a nice button up shirt and slacks, which for Max was pretty much dressed to the hilt.\n\n\"Shall we?\" He held out his arm and I giggled. The notion was ridiculous, but I couldn't resist. I hooked my arm around his and we started towards the door. I rarely walked arm in arm with a girl before, but it certainly felt different with Max. The difference in size alone made me squirm a bit, but in the end, I welcomed it.\n\nThe party was already underway when we arrived. The older members of the house were busy with their dates or flirting with the older Deltas. The whole place was packed, and I knew our time was short. I couldn't waste any more.\n\n\"There's one last thing before I sign the Delta's scroll, Max. Do you want to remember the old me? The spell from the token will wear off when I sign, but I can have them cast a new one so you won't forget.\" I explained. My stomach twisted a bit. I didn't really know which answer I wanted him to give. It would be nice to have someone share my memories, but I could imagine how strange they would be for him at the same time. He paused for a moment, looking thoughtful and then gazed down into my eyes.\n\n\"Yeah, I want to remember. If we're going to make this work I want to remember everything about you I can. I'd hate for you to get angry at me for something I told the guy you and I wouldn't even remember.\" He replied. I smiled and punched him in the shoulder.\n\n\"Like I won't find new reasons to get mad at you.\" We both laughed. There wasn't any doubt that he was a complete cad sometimes.\n\nA chiming started in the other room and quickly grew louder than the din of the crowd. I knew what that meant. \"I've got to go. I'll see you soon.\"\n\nMax pulled me in for a quick kiss and then I headed off for the basement. The room was filled with girls. I spotted Alex and Brittany standing next to Megan. The scene couldn't have been more divergent if you'd have tried. Alex was in a slinky red dress that showed off every curve. Brittany was decked out in a cute polka dot number that screamed cute far more than sexy. Megan was the real odd duckling, wearing sweat pants and a T-shirt. The same thing was repeated all across the room. About a third of the girls were dressed to kill and two thirds looked like they were waiting for their laundry to finish.\n\n\"So this is it.\" I smiled as I saw them. We all knew Alex's choice, and now it seemed that Brittany was going to be a Delta as well.\n\n\"Yeah, it looks like it'll be the three of us.\" Brittany blushed a bit. I could understand her embarrassment. Being dressed like this was a sure sign of her choice. Guys weren't supposed to want to be girls, and yet here we were, about to choose to be girls forever.\n\n\"I'm just curious what kind of a guy you're going to be.\" I stepped over and gave Megan a big hug. She hugged me back hard. I'd almost forgotten how muscular she was.\n\n\"Yeah, well, I'm going to miss being one of the girls, but don't ever tell anyone that.\" She laughed.\n\n\"You'll always be welcome to visit us.\" Alex smiled. \"I'm sure we'll be happy to show you a good time.\"\n\nI shook my head. I didn't doubt that Alex had chosen to stay a girl just because it was so much easier to have sex. Especially given how attractive she was. I also knew she could dial things down so it didn't appear like she was the raging crazy slut we all knew she was. In a way I kind of envied her confidence, but I knew I'd be just as happy with one guy as she'd be tied up in some guy's dungeon.\n\n\"Ladies, your attention please.\" We all heard Prescott shout out from the stage and turned to look at him. \"Tonight, I want to congratulate you all. I know this has been a huge week for all of you, and I am pleased to see so many of you made it this far. So with that I want to welcome you all as full members. You have one last choice to make before completing your initiation.\"\n\nHe waved his hand towards two pedestals on the floor in front of him. Each had a book on top and a pen resting on top of the aged paper. Beside the first book was a man dressed in a burgundy robe, with the house letters embroidered down the front. On the other side was a woman dressed in a white robe, with the Delta's letters sewn into it.\n\n\"Sign your name in the registry and choose your house. We welcome you all, knowing that you now know truly what it is to walk in another person's shoes, and to understand both halves of humanity, and with that knowledge, we of Tau Geta Delta and Delta Kappa can go out in the world to make this a better place for everyone, man and woman alike.\"\n\nHe bowed to us and then stepped back, falling into darkness and then behind the curtains at the back of the stage. I wavered for a moment. This was really the final moment. I could still back out, go over and sign my name on the Tau registry. I knew no one would judge me for doing it. Even Max would understand.\n\n\"Okay, ladies, it's time to make it official.\" Alex grabbed my hand and Brittany's. It was just the nudge we needed, and all three of us were soon at the head of the line.\n\nThe Delta smiled as we walked up. \"Welcome, sisters.\"",
        "I was quaking, but Alex stepped up and took the pen without another word. She made a big show of signing her name and then stepped back. For once she was quiet. Maybe it was the fact that she knew this was a moment that demanded that no pressure be given. \n\nBrittany and I exchanged glances, and then we both decided. I stepped up first. I grabbed the pen. I could feel it was warm with magical heat. Signing this page was another spell, one that would change everything. I took a deep breath. This was what I wanted. I wanted Max, I wanted Alison's life, no matter what. I put the pen to paper and signed my name, my true name in broad careful, girlish strokes, and giggled as I dotted each 'i' with a little feminine heart.\n\nThe last of our trio followed suit, and the little redhead became the third new Delta of the evening. The rest of the pledges followed after us. Some were as eager as Alex had been and others were more restrained, but in the end about twenty of us were standing next to the book, and the president of our new house.\n\n\"I'm so happy to see you all deciding to join our house. Tomorrow we'll come and help you move into your new home and we'll all have a proper welcome. Tonight, we celebrate!\" The older Delta shouted and threw off her robe to reveal a sexy little dress and she ushered us back upstairs.\n\nWe all poured out into the crowded party, and we could see unfamiliar guys filtering up from the other side. As curious as I was about what some of the other pledges looked like as guys, I wanted to find Max first.\n\nNo sooner had I managed to work my way over to him, than Alex slid up beside me.\n\n\"So this is the beefcake that made you want to keep the boobs!\" She blurted out as she gave Max a solid looking over. I blushed, not sure exactly how to introduce her now.\n\n\"Max, this is Alex.\" I tilted my head towards the vivacious blond. I knew there was no hope in him not scoping out her boobs, but it was hilarious watching him trying to avoid it. \"And if you really want to check out her breasts, just man up and do it.\"\n\nAlex laughed as Max actually blushed. That made me giggle as well. At least there wasn't any doubt that Alex could pull a whammy on anyone she met.\n\nFinally, she held her hand out, and he shook it. \"Glad to meet you, Max.\"\n\nAs soon as she pulled her hand back, she slid over and wrapped around me. \"Now, if you two ever need a girl for a threesome, Alison has my number.\" She leaned over and gave my cheek a lewd lick. Then in an instant she was gone, off to overload someone else.\n\n\"Threesome, huh?\" I could see Max thinking hard.\n\n\"Only if you want the both of us tied up and whipped while she has her fun.\" I leaned in and whispered in his ear. He pulled back and shot me a surprised look. I gave him a serious nod so that he knew I wasn't joking.\n\n\"Well, maybe later then.\" I could feel him shudder as I came in and hugged him.\n\n\"So, not quite that kinky yet.\" I gave him a kiss on the cheek. I had to admit I was curious, and I knew that Alex wouldn't really toss us straight to the deep end, but tonight was special, and I didn't want to think about that kind of thing right now.\n\nHe laughed and we slowly mingled into the crowd. It was crowded, noisy, and I had to admit a bit more than I could handle. The new Taus were busy whooping it up, making a big show of their restored manhood. After a couple of close encounters, I made it a point to stay clear. I could understand how they felt, but it was just too much of a ruckus for me.\n\nIt didn't take long for me to come to the conclusion that I just wasn't in the mood for a big party. I really just wanted a party for two.\n\n\"Not into it?\" Max asked as I pulled him out of the house.\n\n\"Yeah, I guess, I'm not really feeling like a party girl today.\" I smiled and pulled up beside him. \"Or I guess, I'd rather have a little more private party.\"\n\nMax took the hint, and I don't think we could have made it back to his dorm room any faster. I could probably have used my room at the frat, but given the mood tonight, I knew I'd be risking having someone barge in, and I just really didn't want to be interrupted.\n\nOur clothes were scattered all over the floor once we cleared the door to his room. We didn't need to say anything more, we both knew what we wanted. It wasn't until we were both naked, standing next to each other that I finally stopped, and breathed. I grabbed his hands and looked up at him, our eyes meeting.\n\n\"I never expected to feel like this looking into your eyes, Max. Thank you, for everything.\" I told him. It was so true. As wild and crazy as this week had been, in the end he'd help me find myself. I hadn't expected it to be like this, but I couldn't have wanted anything else.\n\nHe nodded back at me. \"And you Alison, I never dreamed of finding a girl like you. I am so happy you chose this, chose us. I love you.\"\n\nI flushed at his words. It was so raw and intense, so much unlike the Max I usually saw. This was the sincere man that I wanted to be with more than anything.\n\n\"I love you too.\" I pulled in close and let my naked breasts press into his chest as we titled out heads for a kiss. Our lips met, and we simply melted together for a moment. Without even breaking our kiss, Max swept me up and carried me to his bed. His hands tenderly stroking me.\n\n\"Mmmm...\" I moaned into his mouth as his touch sent shivers of pleasure up my spine. Ever since my transformation I'd never been able to get the difference of sex as a guy and as a girl out of my head, until now. Now I was just a girl, what I'd been didn't matter anymore, I was a woman, and his hands knew how to draw wonder from my flesh.\n\nHe crawled up into bed slowly, shifting us together so that he didn't need to stop kissing as he moved between my legs. I opened my thighs for him, letting him position himself on top of me. All the while he was stroking me, caressing me as I wrapped my arms around his neck. His fingers slid over the curves of my breasts and along the soft length of my thighs.\n\nI was open to him, completely, utterly, and when he lowered himself onto me, I couldn't have been more ready. He shifted between my legs and I felt the familiar rubbing of his cock between my thighs. I opened my thighs up even wider and shifted my hips for him.\n\nI squeezed him closer when he started to slide along the length of my slit, rubbing against my clit and covering his hardness with my wet juices. I thrust my hips back at him, eager, and aching for what came next. His mouth grew more insistent in that moment and I felt him pull his tip until it was pressed against my hot womanhood. My pussy lips were wrapped around him, kissing at his head and ready for him to push inside.\n\n\"Oh, Max!\" I moaned when he finally thrust into me. The raw sensation of being penetrated, of his hard shaft stretching me open, was incredible. The feeling of our bodies coming together was absolute perfection.\n\n\"I love you, Alison.\" He panted before he kissed me again. It was just what I needed. He began thrusting at that moment, sliding inside of me, and drawing out moans of pleasure from my lips. This was what it truly meant to make love.\n\nI slid my hands down now, stroking his arms, chest and back as I writhed beneath him. His cock moved inside me, running across my pussy lips and driving deep into me, as I gasped and moaned between kisses. It was just too much. All the pent up anxiety of the last day was being driven out of me, replaced by my feelings for this silly lug of a man.\n\n\"Oh, oh yes! Max, yes!\" I moaned as his rhythm drove me wild. I could feel my orgasm coming, that tension that drove the needs inside me and I fucked him back as hard as I could. His ragged breaths told me he was close as well, and we drove harder together, our bodies becoming one piece of writhing flesh.\n\nWe cried out as one as we came together. Max drove deep inside my pussy and I squeezed down on him. We pulled together, our lips and tongues assaulting the other as we were hit by the hammering waves of pleasure. The tension melted away, and I simply melted into him as ecstasy flowed through me.\n\nI cuddled up with him after that, allowing myself to enjoy the afterglow. We didn't speak now, we just breathed deeply, and sometimes let a hand wander a bit. It was one of those moments that didn't need any words.\n\nWe continued for quite a while after that, making love and resting before going again. In the end, I was laying on top of him, under his covers when he finally drifted off to sleep. I looked down at him, at his sleeping, silly grin. I'd never imagined this would be my life, and now it was. I knew I'd found the person I'd spend the rest of my life with, it had only taken changing every other part of myself.\n\nAs much as this was the ending of one adventure, I knew it was the beginning of a whole new one. I was a girl now, with all that entailed, and that wasn't going to change. I also had a boyfriend, and maybe someday he'd be even more than that. It was a crazy thought, but it made me happy just thinking it. I'd never been so close to someone before, and I knew I wanted to keep him forever.\n\nEverything else was just details, and there would be plenty of time for that later. For now it was time to rest, to dream sweet dreams and hope for my own happy ending.\n\nThe End\n\nThanks for reading! I really want to thank everyone who's taken the time to leave me messages and comments on this story, it's been a pleasure to hear from all of you, even the critical ones.\n\nWhen I wrote this story, it was done as a kind of fun lark, and I was doing my best to keep it in the bounds of publishing rules for erotica, which is always a fuzzy beast to keep track of. So, while, I had a lot of fun exploring some of the experiences of life from a female perspective, I know it's a pretty idealized version of it with a lot of the rough edges sanded off. Still, it's been a lot of fun and I've found it's good to write light hearted stuff as well as the dark."
    ],
    "authorname": "Farleven",
    "tags": [
        "gender bending",
        "fraternity",
        "magical change",
        "college",
        "pledge",
        "initiation",
        "sex games"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/pledging-tau-geta-delta-pt-07"
}