{
    "title": "Love You, Daddy! Ch. 04",
    "pages": [
        "Karli and I woke up snuggled together in a tangle of my sheets. We both stretched luxuriously, loving the feeling of our bodies pressed together... \n\nUntil our incredibly sticky pussies touched and stuck together with last night's cum. \n\nWe both shivered and giggled at the unexpected wake-up call, hugging one another kissing good morning. We weren't exactly horny but we wanted to kiss one another all over and spent several minutes doing so. It felt good to have her lips on me, giving me gentle kisses while I slowly woke up. I reciprocated happily when Karli inhaled deeply and grinned. \n\n\"Smell that?\" she asked. \"Coffee. Guess your dad's up and on the go.\" \n\n\"Which means breakfast is not far off.\" I concluded. \"Been a while since you've had a full-scale 'Evie's daddy's breakfast', hasn't it?\" \n\n\"Long enough,\" she said, pretending to pout. \"So now what? Freshen up and go join him?\" \n\n\"Hell no,\" I replied. \"We smell like sex, which is what we want him to notice. Put on one of my cutesy short robes and we'll go down wearing nothing underneath.\" \n\nShe smiled at the notion and nodded, getting up and stretching. She purred as I crawled up behind her and nibbled at her lovely ass cheeks, squirming them back against me, giggling. When we were finished, we put the robes on one another, squirming our tits together as a tease before making sure we were showing plenty of cleavage. We then headed downstairs together, hand-in-hand as was our habit. \n\n\"Hi, daddy!\" I chirped happily as we found him in the kitchen, making a huge breakfast. He was wearing pajama pants and a white t-shirt, which showed off his broad back and chest. He turned around and beamed a big smile at us as I skipped up to give him a big hug. \"How's the bestest and bravest daddy in the world?\" \n\n\"I'm great,\" he said, hugging me close. \"And you, pumpkin?\" \n\n\"Mmmmm, I'm wonderful, thank you,\" I purred, my cheek to his chest and my eyes closed. \"And I-\" \n\nI paused in my statement and subtly wiggled my hips before my eyes went wide. \"Daddy... do you have any boxers on under your pajama pants?\" \n\nHe thought about that and then flushed for a moment. \"I... no.\" \n\n\"You're not wearing any underwear?\" I exclaimed, trying to sound more scandalized than thrilled. \n\n\"Are you?\" he asked, eyebrow raised. \n\n\"Well, no,\" I admitted. \"It was just an unexpected sensation is all, that monster of yours prodding my poor little puss.\" \n\nI turned to look at Karli as she walked up to hug my dad. \"Can you believe he's not wearing any underwear?\" \n\n\"I'm not taking your word for it,\" she purred as she hugged him close, her pelvis parked squarely into his. \"Nope, no underwear.\" \n\nDaddy chuckled. \"You're something else, Karli.\" \n\n\"Best believe it, Mister Sturm...\" she said coyly, turning around and wiggling her butt against his barely-contained cock for a moment before joining me in leaning against the kitchen island, where part of the food was waiting. Daddy turned around and continued cooking before we got too good a look at anything happening inside his pants. \n\n\"You two sleep well?\" he asked, trying to act casual. \n\n\"Eventually,\" I replied, taking a single grape and sucking it into my mouth, looking at his back. \"We kinda had to exhaust ourselves first, but yes, we both slept like the dead.\" \n\n\"Glad to hear it,\" he replied, close to done with the scrambled eggs. \"You two much have been pretty buzzed to get yourselves that... worked up.\" \n\nKarli snickered while I rolled my eyes. \"Yeah, daddy, alcohol can get Karli and I pretty uninhibited.\" \n\n\"I can tell,\" he said, adding something to the eggs. \"No worries though, you seem none the worse for wear.\" \n\nKarli was going her best not to break into loud laughter as I pinched my eyes. \"Trust me, daddy, we're just fine. Shall we pull up some stools to the island here or do you want to eat at the table?\" \n\n\"At the island's fine with me,\" he said easily. \"Food's already there, right?\" \n\nKarli and I brought the stools over and I doled out the plates and utensils while Karli brought big mugs of dark roast coffee. Soon, all the food was in front of us- big mounds of pancakes, granola and milk, endless bacon and eggs, toast and butter, juices and daddy's amazing Belgian waffles. As much food as there was, no one doubted it would be all gone shortly. It was too good not to be eaten, even if Karli and I would have to spend hours fucking away the calories later. \n\nWe all dug in, enjoying this huge breakfast. We laughed and talked about nothing important for some time and eventually most of the food was gone. We sat and drank our coffee, finally sated. \n\n\"So,\" daddy said finally. \"Quite the pictures you sent me last night.\" \n\nWe both paused, not saying anything for a few seconds. \"Pictures?\" I asked. \n\n\"Yes, the ones from the bathroom in the movie theater,\" he confirmed. \"So that's how girls go to the bathroom together?\" \n\nI almost choked on my coffee and Karli actually snorted as she began to laugh. \n\n\"Mister Sturm!\" she giggled. \"You perv!\" \n\n\"Oh, yeah, I'm the perv,\" he said dryly. \"Nice butt, by the way, Karli.\" \n\n\"I try,\" she said in a nonchalant voice. \"It has its advantages.\" \n\n\"I can just imagine,\" daddy sighed before looking at me. \"As long as your butt isn't all over the internet then I guess I'm fine with it.\" \n\n\"Well, no promises, but I'm like ninety-nine percent sure it isn't,\" I said confidently. \"Karli and I are pretty strict about our media.\" \n\n\"Good to hear,\" he said, relaxing now. \"So what do you two have planned today? Neither of you have classes to attend to, so...\" \n\n\"Mostly thought we'd hang here,\" I said in a non-committal tone. \"To be honest, we were planning on convincing you to start taking care of yourself and working out again.\" \n\nHe thought about that. \"Well, I-\" \n\n\"Daddy,\" I said in a stern voice. \"I'm not gonna let you make excuses. You're way ahead on your book and your derivatives workload, so there's no excuse whatsoever. The only reason you don't work out and get yourself back in amazing shape is because you feel like you have no one to do it for.\" \n\nHe said nothing. \n\n\"Face it, when mom was here, you worked out daily, making sure that your arms, chest and abs made her weak in the knees.\" I pressed. \"She told me all about it and what it did to her, so don't even try to deny it.\" \n\nHe looked like he was going to say something but eventually didn't. He just looked down into his coffee mug. \n\n\"Well, what if Karli and I were your cheering section?\" I suggested. \"It may sound a little silly, but what if you worked out for us?\" \n\nHe raised an eyebrow. \"For you two.\" \n\n\"Like you've got anyone else to do it for. You might as well do it for your daughter, since I want you to be the healthiest and hunkiest daddy anyone ever had.\" \n\n\"Not to mention that my sugar daddies have to be hot,\" Karli added, swirling her finger in some of the syrup on her plate and then sucking it off. \"Can't have you getting tubby.\" \n\n\"Oh, so now I'm absolutely your sugar daddy,\" he retorted. \"Do I even get a say in this?\" \n\n\"Why would you want one?\" she replied simply. \"Like you've got anything better to do.\" \n\n\"Yes, daddy, how terrible for you,\" I added, keeping the pressure up. \"Two insanely hot girls want you to work out and impress them. What exactly is the rub here for you about this?\" \n\n\"Ooh, good choice of words,\" Karli said, smiling naughtily and winking at me. \"Me likey.\" \n\nDaddy shook his head and rubbed his temples for a moment. \"So... work out for you two and get myself back in prime shape.\" \n\n\"Yes.\" Karli and I chorused. \n\nHe thought about it and sighed. \"That's as good a reason as any that I can come up with. Alright, I'll start today whenever you two are ready.\" \n\n\"Sounds great,\" I declared, pleased with the progress we were making. \"We've gotta let breakfast burn off for a bit, but maybe early afternoon? Sound good, daddy?\" \n\nHe nodded. \"Sure. It'll give me time to find my workout clothes and maybe get a little further ahead on my writing.\" \n\n\"Okay, daddy,\" I said, rising from my stool and coming around to hug him, as did Karli. We both pressed our breasts into his sides and gave him great big kisses on his cheeks at the same time. \"Love you, see you in about three hours!\" \n\nWe both turned and wiggled out of the kitchen, leaving him sitting there looking confused. We were already halfway up the stairs when finally heard him speak. \n\n\"But what about the... dishes...\" \n\n\"Poor daddy,\" I giggled and we hustled back into my room and closed the door. \"That'll keep him busy for about half an hour, he can't leave the kitchen messy.\" \n\n\"Alright, now what?\" Karli asked, smirking because clearly I had something planned. \n\n\"Grab three double A's out of my drawer,\" I instructed as I went over to my computer. I unhooked the webcam from it and also found the remote. \"See what I'm goin' for here?\" \n\nA sly grin crept across her face. \"I love it. Let's go, before he finds an excuse to come upstairs.\" \n\nWe quickly and quietly crept out of my room and down the hallway, to my dad's room, where we began immediately scanning for the perfect place to secrete the webcam. It had to be able to see his bed and into his bathroom, in case he left the door open. Karli waved me over quickly to a perfect spot where it was easily concealed. We deposited the camera, with full batteries and then the wireless connector so the signal reached back to my room. \n\n\"Now stay here while I go make sure it works.\" I whispered. She nodded and waited by the bed while I went quickly back to my room and turned on my computer, activating the webcam. Seconds after doing so, the image focused and I could see Karli inside my daddy's room. She saw the light on the cam turn on and waved. I adjusted the focus slightly and she assisted by undoing her robe and flashing her beautiful tits at me. All seemed to be ready. \n\nShe joined me back in my room, draping her arms around me from behind as I sat, making sure the picture was as clear as possible. I was getting great colour, given how dark the room was, but my webcam had those low-light enhancement features, so we still had an amazing view. It even had a starlight mode so that we could see in near-complete darkness. Karli giggled at our ingenuity. \n\nWe minimized the webcam frame in case daddy came up unexpectedly and just lazed around on my bed, talking and laughing. Eventually there came a knock on my door. \n\n\"You two decent?\" came daddy's voice. \n\n\"As decent as we're willing to be!\" Karli called back. \n\n\"It's fine, daddy, we have our robes on.\" I answered, giving her a look. He entered and smiled. \n\n\"So, thanks for leaving me with the clean up, you two,\" he said, standing over us and folding his arms. \"You two had better be real good cheerleaders for pulling that stunt.\" \n\n\"Sorry, daddy,\" I said apologetically. \"That was mean of me, I'll make it up to you.\" \n\n\"Darn right you will,\" he said, coming forward and hugging me as I knelt on my bed with my arms out. \"But that's for another time. I think I'm gonna do some writing and take a shower. You two will be okay for a bit?\" \n\nWe nodded. \"Go do what you need to do, daddy. We'll be here.\" \n\nHe nodded and kissed the top of my head before exiting the room and heading back to his own. Karli closed the door and I got into my chair at my desk, bringing the webcam window back up and maximizing it. Karli pulled up my exercise ball and sat beside me, watching intently. \n\nDaddy was now in his room and walked around for a moment in a small circle, rubbing his face with his hands. \n\n\"He seems tense.\" Karli observed, smirking. \"Wonder why...\" \n\nI smiled at her non-question and kept my eyes on the screen. He stopped pacing and sat on the corner of his bed. Then he seemed to make up his mind about something and took off his shirt, revealing his chest. \n\nKarli sucked in her breath. \"God I love that man's chest,\" she whispered. \"Sploosh.\" \n\nI nodded, sharing the feeling. Then we both restrained ourselves from gasping as he turned toward the camera and hiked his pajama pants down... \n\n\"Holy Fucking Fuckballs,\" Karli murmured. \"It's bigger than it fucking felt.\" \n\n\"I know,\" I said quietly, rapt at the sight of his titanic cock dangling between his legs. It seemed so close right now, I wanted to reach out and touch it. \"How quiet is my webcam? Did it make any noise when I zoomed it in on your tits?\" \n\nShe shook her head. \"I'm absolutely certain it made no noise whatsoever. Do what you gotta do.\" \n\nHoping daddy didn't move, I used the zoom feature and brought his cock in close. Soon it almost filled my screen. \n\n\"And to think that's about life-size,\" Karli muttered. \"I can't wait to get that thing in my cunt.\" \n\n\"You and me both,\" I said, staring intently. \"He's going to tear us apart.\" \n\n\"God, pull back a little or I'm gonna lose it,\" she breathed. \"You might need to chain me down to keep me from heading to his room and just spiking myself on that thing.\" \n\n\"I promise.\" I mumbled, still lost in the beautiful sight before me. Before long, though, he turned away and headed into his bathroom, giving us one good glimpse of his butt before shutting the door. The show was over. \n\n\"Does it turn off remotely?\" she asked, wondering about the batteries. I nodded but winked. \"It does, but my daddy takes quick showers, he'll be back out in a bit, just watch.\" \n\nWe bided our time until daddy came out of the bathroom, his waist wrapped in a towel. He was drying his hair with another smaller towel and we simply stared stupidly at his body while waiting for him to take the lower towel off. Finally, we were rewarded for our patience as he removed the towel, but he was facing away from us. \n\n\"He's got a real nice butt,\" Karli murmured as she watched. \"Yum yum...\" \n\nHe finally put the small towel down on his pillow and laid back, giving us a great side-view of his body, his cock resting atop him. We both just watched silently before he did something we did not expect and reached down, starting to caress himself. We both drew in our breaths as we saw his member start to swell and get hard. \n\n\"Stay right beside me, Karli, don't you dare leave this room.\" I said quietly but in a voice laced with iron. She nodded and continued to watch. We both adjusted ourselves on our seats and began slowly fingering our pussies, wanting to cum with him. He was stroking himself until he was hard and his cock looked bigger than ever, towering over his body. \n\n\"How long does he take?\" Karli asked, her pussy already so wet that she was dribbling on my exercise ball. \n\n\"I don't know,\" I whispered, hoping I could match him. \"But we're gonna find out.\" \n\nMy fingers slipped in and out of my tight hole as I kept my eyes on that wonderful cock. I breathed slowly, not wanting to finish before him. His hand moved up and down the shaft and his body trembled in response. My head was almost spinning from desire. My whole body felt moist and warm. I'd never been so turned on in my life. \n\nWe hummed and moaned as quietly as we could while he jerked off, just down the hallway from us. We shed our robes entirely and were pressing against one another, keeping our eyes on the screen. I put my free arm around Karli and she slid into my lap, her hot body squirming against one. We were both trembling and sighing as we fingered ourselves. \n\nDaddy was picking up the pace and we could just barely hear him breathing and maybe moaning a little as he stroked his cock. I couldn't get over how big it was. Even his hand barely fit around it the whole way. \n\n\"He's gonna go soon,\" Karli breathed, squirming on me. \"Look at his hips.\" \n\n\"I know,\" I gasped back, reaching around her to squeeze her breast and pull on her nipple. \"We're gonna cum with my daddy.\" \n\nOur breathing became more rapid as we watched, daddy's hand moving faster and faster. His hips were indeed trembling and squirming, his free hand flexing. My fingers churned inside my pussy, which was getting hotter, tighter and messier by the moment. Daddy began to arch his hips. \n\n\"Oh, shit!\" Karli squeaked as she fought to hold on one more second... \n\nThen daddy blew, a great jet up his pearly white cum spurting into the air, followed by another one and then more. Karli and I both moaned as loudly as we dared, pulling against one another as we came, pussies overflowing with our desire. I jammed my fingers inside myself while squeezing Karli's breast so hard she whimpered and I thought it might burst. \n\nWhen daddy had finally finished, I pulled her off my lap and onto the bed, where we kissed sloppily and writhed on one another, basking in the afterglow of our incredible orgasm. Her cunt was so wet and sticky against mine. We hummed and moaned into one another's mouths and caressed each other. We then turned around and licked one another's pussies, lying on our sides. \n\nFinally spent, we lay on our backs for a moment before going back to our chairs to check on daddy. We was already up and dressed in pajama pants and a t-shirt, sitting at his desk and writing. \n\n\"Wow, didn't take him long to recover and move on,\" Karli remarked. \"Typical male.\" \n\n\"We'll keep him busy this afternoon,\" I replied, actually kind of glad he was dressed. I took a deep breath and turned off the webcam, since the show was over. \"But it does make me wonder about his stamina.\" \n\n\"How so?\" she asked, looking at me. \"You said he and your mom used to go at it like a bonobo tribe.\" \n\nI nodded. \"So what if he were ready again soon?\" I asked. \"What if he just needs more practice but can get it back up quickly?\" \n\n\"You mean put on a show, see if he bites?\" she asked, smiling slyly. \"What have you got in mind?\" \n\n\"Remember our little plot we cook up in the bushes the other day?\" \n\n*** \n\nWe wiggled out into my backyard, smirking to one another as we thought about how naughty we were about to be. I was carrying a handbag that contained some bottled water, tanning lotion, a large towel to lie on and our favourite double dildo. We went to a secluded spot where I knew for a fact that we absolutely could not be seen from any angle. \n\nExcept from my dad's bedroom, a tiny flaw in the foliage shield. If one looked through his windows at just the right angle, anything that happened on the little plot of soft grass we were now headed for could be seen perfectly. The neighbours on either side had no view, no one else in the backyard did, nor any drones hovering directly above. It was meant to be a little enclosed space, free of scrutiny. \n\nWe were both naked as we laid out the towel, giggling and talking just loud enough to be heard from upstairs. We sat down and began smearing thick gobs of the rich, glistening oil over each other. I was wearing my sunglasses so that I could take subtle glances up at daddy's window without being noticed, with Karli doing the same. It felt nice to have her hands on me, rubbing the slippery oil into my skin, fondling my breasts and my tummy and ass cheeks. \n\nIt felt especially good when we knelt facing one another and reach between each other's legs, massaging oil onto our pussies. Like me, Karli was completely shaved and her slippery skin was giving me a tingle. We did this for close to a minute, with me angled toward the window so I could look up. Sure enough, I saw one of the wooden blinds move very briefly. I couldn't tell if daddy was behind them but one of the slats was more open than it should have been. \n\nWe then took one another's hands and leaned in close to begin squirming our breasts together, tongues tangling as we kissed. Even though the mission was to tease daddy, I was getting really turned on by Karli, as I always did. I pulled her to me and we kissed deeply, bodies rubbing together now. Another subtle glance and the slat of the wooden blinds was even a little bit wider. ",
        "\"Mmmmm, good daddy, you perv...\" \n\nWe now laid down together on the blanket, facing in to one another and kissing as we began to finger reach other's pussies. We moaned into one another's mouths as we teased, with me whispering that I was sure daddy was watching. This was exactly what we'd been hoping for and we made sure we put on a show, even if he didn't know it. After all, this spot was supposed to be completely isolated. The only reason I knew it wasn't was because I'd seen Karli fingering herself one day while my parents were away for the weekend when we were younger. \n\nSoon enough we desired more from one another and Karli squirmed around to face down me, her pussy scant inches from my lips. We pulled one another close and began licking and sucking hungrily, squirming and writhing against each other' faces. Her tongue and fingers felt so good inside me. She gasped and hummed against my clit as I slid a finger inside her ass. \n\nWe continued our 69 until we were both tremble and sweating with need. I then reached over and pulled the dildo from my little bag and presented to her. We giggled and kissed it together, sliding our tongues up and down its length before I laid her on her stomach and she spread her legs open. I gently teased the dildo into her slick depths. Once it was securely inside her, I laid on my stomach facing away and wriggled backward until I could put one leg under hers. I then reached under myself and took hold of the flesh-coloured cock and pressed the other end against my lips. With a sigh I eased myself onto it until my butt cheeks met hers and our pussies pressed. We laid still for a moment, just experiencing the sensation of feeling full. Then we began to move and squirm our hips, fucking the dildo together. \n\n\"Mmmmmm, so good...\" Karli moaned, shivering through her spine as we moved in unison, pushing the cock deeper into one another, to our mutual pleasure. \"Fuck me, Evie...\" \n\n\"I love fucking you...\" I breathed, squeezing one of my breasts as I lay on my stomach. \"We're gonna come so hard together...\" \n\nFeeling Karli's ass and pussylips against mine felt so exquisite while we fucked one another. We pushed back harder as the pleasure built, both of us trembling and tingling at the thought of my daddy watching us. \n\nWe both moaned and pushed ourselves up on our hands, spines arching as we pressed back harder against one another. We couldn't fight it any longer and shuddered and writhed as we came, bodies snaking in an uncontrolled unison. Her soggy pussylips squished against mine and our clits pulsed together. Finally we both collapsed, still trembling from cumming but completely wiped out. We lay still but I subtly turned my head to the side, looking up. \n\nMore rustling at my daddy's window. \n\nI smiled. Everything was going according to plan. \n\n*** \n\nDaddy played none the wiser, of course, when we saw him later. He said that he'd been working on his writing and listening to music when we mentioned we'd been tanning in the backyard. And hey, maybe he had been for part of that time. When we met him for his workout, we were wearing yoga pants and tank tops which showed off our bodies. And while we may have wiped our pussies to dry them a little, Karli and I did absolutely nothing to get rid of the pheromones we'd worked up while fucking. \n\nDaddy'd notice for sure. \n\nHe was wearing breathable workout shorts and a tank that left his arms and shoulders bare and left no doubt as to the size of his chest. We both made a show of cooing over him and saying how sexy he was, with Karli giving notice of his tight butt. He blushed and mentioned it was time to work out, so we took him down to the exercise room in the basement- the floor was padded and there were several mirrors spaced around the walls to watch yourself. Three different universal machines with different stations dominated, plus some benches where one could use the free weights we owned. There was also a treadmill and an elliptical for cardio. \n\nKarli and I used the workout room often, beginning with exercise but it predictably degraded into tawdry sex before long. I couldn't recall the number of times I'd been lying on my back on one of the benches while Karli sat on top and squirmed her gooey pussy into mine. \n\nDaddy entered the room and immediately had a plan for himself, one of his old workout routines, seemingly. He called to Karli to turn on the CD/Mp3 player in the corner of the room. She did so and seconds later, hip-hop tunes were emanating from the speakers around the room. My father paused and then looked at her pointedly. \n\n\"No no no no,\" he called out, shaking his head. \"I said music, woman, not this stuff. What am I, twelve?\" \n\n\"Sorry, sir.\" Karli said apologetically, pausing the music and looking cutely admonished. \"What then?\" \n\n\"Playlist number seven,\" he announced as he approached the treadmill. \"That'll hit the spot.\" \n\nKarli did as she was told and we were immediately bombarded by my father's music. \n\nMetal. \n\nThat's my daddy for you- metal, opera, swing and industrial. Sure, he loves some other stuff, but those were his jams. And she'd probably never admit it to him, lest he become insufferable, but Karli loved a lot of his music too. \n\nHe began by running, to get his heart rate up. We watched him run on the treadmill, Karli totally transfixed by his butt. If my dad saw her staring in the mirror, he didn't see anything about it. To be honest, though, I don't think he did, he's pretty intense during his workouts. \n\nHe spent maybe ten minutes on the treadmill before asking what he should start working out on. I know he normally worked his body in groups on different days, but clearly today he was humouring us, so I went with it. I suggested the shoulder press and he nodded, settling into the machine. He began light (for him) but soon enough asked us to put some more weight on, doubling the resistance. \n\nWe watched intently, rapt by the sight of his muscles, complimenting him on his form and his shape. I really wanted to feel his body. \n\n\"Daddy, what do your muscles feel like when they're working out?\" I asked. \n\n\"What do you mean, pumpkin?\" he wondered. \"I can feel myself squeezing them and there's a burn and-\" \n\n\"No, daddy,\" I interrupted. \"What I meant was how do they feel on the outside? If I put my hands on your shoulders or your chest or arms while you're lift, what would I feel?\" \n\nHe put down the weights and thought about that. \"I don't know,\" he said finally. \"No one's ever felt my muscles while I've worked out before so I couldn't tell you.\" \n\n\"Well, that answers that,\" I declared, coming over and standing in front of him, with Karli coming to stand nearby. \"Without interfering, I intend to find out. Take your shirt off, daddy.\" \n\nHe didn't simply comply, but paused awkwardly, so I sighed and took it off him myself, with Karli's help. I then looked at him expectantly. He began doing the presses again and I watched how his torso and shoulders moved as he lifted and lowered the weights. I slowly put my hands on his upper chest and closed my eyes, feeling the muscles move beneath his skin. \n\nBut standing was awkward, so I made him pause again and then sat on the bench with him, pushing his legs apart and back so I could sit comfortably. He sighed and continued pressing, my hands roving to his shoulders and sitting gently, careful to not get squeezed at the top. \n\nIt was a good thing I'd gone with my black yoga pants instead of the white ones, because I was getting wet. It might take him a while longer to notice. Karli had gone with white, probably on purpose, knowing her. She was quite unashamed about her body's reactions to things. \n\n\"I know you haven't worked out in over a year, daddy, but your body's still very strong and looks good,\" I said softly, smiling at him. \"You're gonna be chiseled up again in no time.\" \n\nHe grinned. \"You think?\" \n\n\"And look at those guns,\" Karli purred as she sauntered over and felt my dad's biceps as he pushed up and down with the delt press. \"Gotta say, Mister Sturm, you're lucky you're not younger or you'd be beating off all the girls with a stick.\" \n\n\"Well I'm flattered,\" my dad mused as he kept lifting. \"This idle speculation on your part?\" \n\n\"Not really,\" Karli replied. \"Girls on campus who have seen you think you're hot and even when Evie and I were in high school, lots of girls who said they'd jump you.\" \n\nHe chuckled. \"Flattering, but illegal.\" \n\nHe did a few more reps and then went over to the pectoral press machine, lying down on the bench and having Karli and I set it the weight. He then began lifting up and down while we watched his chest, the powerful muscles rippling with his effort. Karli knelt beside him and traced her fingernails along his bulging chest muscles. \n\n\"Love how male bodies work,\" she remarked casually. \"They're so brutal and powerful.\" \n\n\"Brutal?\" dad inquired, frowning. \n\n\"Hell yeah, in a sexy way,\" she answered. \"You weren't there last night the way Evie and I were for that fight.\" \n\nHe frowned again. \"That sorta thing a turn-on? Seriously?\" \n\nWe didn't really answer him but just continued to watch as he pushed the slabs of metal up and down. I watched as the ripple worked its way own his core, through his abs and to his lower belly. I was acutely aware of the bulge of his huge cock against the flimsy, aerated material of his shorts. He did a few sets and was straining toward the end, his form suffering somewhat as he began to raise his legs for leverage. \n\n\"Last few sets... always hard for form...\" he breathed, still pushing. \"Shouldn't use my legs like this.\" \n\n\"Got it.\" Karli announced simply, getting up and then going to straddle and sit on his thighs. Chances are she should have been closer to his knees, but not surprisingly she was sitting up close to his crotch, he hands resting on his upper thighs. \n\n\"Hey, it's my daddy, make room!\" I protested, shooing her back along his legs and then stepping over him to sit down on his thighs, facing Karli. We had to turn our legs out to both fit on and my butt was dangerously close to his cock, but no one said anything immediately. \n\n\"Gn, you two okay down there?\" daddy asked as he pushed out some more reps. \"Can't be comfortable.\" \n\n\"We're fine, daddy, just helping you out.\" I replied, starting to flush as I felt the slightest touch of his crotch bulge against my ass cheeks. Karli knew what was happening and reached forward, massaging my breasts while looking into my eyes. I bit my lip and sighed, pressing back very subtly against daddy's cock. I could feel it stirring, even if he was preoccupied at the moment. \n\nWe leaned in for a kiss, tongues snaking around one another and fondling each other's breasts through our tight tank tops. It took all of three seconds for our hands to wander up underneath the garment and grope warm flesh. We moaned into one another's mouths as our bodies began to squirm. \n\n\"Are you two alr- hey, are you two making out down there?\" daddy demanded suddenly, pausing in his reps. \"You kidding me?\" \n\n\"Sorry, daddy,\" I said hastily, breaking the kiss and wiping my mouth as I turned my upper body to look at him. \"Getting close to Karli these days does that to me...\" \n\nHe shook his head as he lowered the weights and rubbed his face. \"Talk about out of control.\" \n\n\"This is all your fault, daddy,\" I pointed out, staring at him. \"You said my only playmate is Karli, no boys. So what's a girl gonna do if she needs an itch scratched?\" \n\n\"He said that?\" Karli asked, her eyes widening in surprise and then smiling slyly at my dad. \"Mister Sturm, you perv.\" \n\n\"It's not... that's not what I- oh, forget it...\" he sighed, defeated. \"Do what you need to, just don't distract me.\" \n\n\"Thanks, daddy!\" I said sweetly, winking at him before pulling Karli's top off entirely and she did the same to me. We made out while sitting on his thighs, my daddy trying to regain his concentration to work out. He did a few half-hearted reps but gave up shortly after, waiting to see if we'd finish. We didn't of course, and I kept subtly wiggling backwards against him, fractions of an inch as I pressed my ass to his cock. \n\nFinally he sat up, looming behind me with us still on his thighs, kissing hungrily as our breasts squashed together. His cock was definitely pressed to my ass now and his felt huge, even though he was still soft. It took considerable willpower on my part not to moan at the touch. \n\n\"You two anywhere near done?\" he asked. He got no response, so he just sighed and waited. I could feel him watching us and the stirring in his loins. He pinched his eyes and finally spoke, his voice one of resigned exasperation. \n\n\"Ladies, I know you're my daughter and my virtually adopted daughter, but you're still two very pretty girls who happen to be making out on my lap with no shirts on and that's having an adverse affect on my concentration.\" \n\nWe stopped kissing for a moment and I turned my head to look back at him. \"Seriously, daddy?\" \n\n\"Yes,\" he said firmly, nodding. \"More than that, I'm still a man and if you keep this up... well, I can't help it if my body reacts a certain way, daughter and adopted daughter or no.\" \n\nWe both looked at him now and smirked. \n\n\"Daddy,\" I said, smiling slyly. \"Are you trying to say that we're giving you a boner?\" \n\nHe blushed. \"I...\" \n\nI wiggled my butt back against his crotch and felt his cock swelling- not hard yet, but he was indeed getting turned on. \n\n\"Naughty,\" I purred. \"Getting turned on by two younger girls like us, and your daughters to boot.\" \n\nKarli was giggling and pushed me back against him, leaning in and kissing me as I was pinned to his chest. Daddy just watched in amazement and I could feel him getting hard now and his heart thumping in his chest. \n\n\"I think I've had enough working out for now,\" he announced, rising up and compelling us to scramble off his legs before getting dumped on our butts unceremoniously. He rubbed at his face for a few seconds to compose himself and it was enough time for Karli and I to ogle his huge cock now straining inside his shorts. He finally looked at us and blushed. \n\n\"Sorry about that...\" he said somewhat sheepishly. \"Can't really help it, kind of a guy thing, you know?\" \n\nTo make it up to him for teasing him so badly, we both walked over and hugged him, pressing our breasts into his chest and kissing him as we caressed his huge pecs. \n\n\"We love you, daddy,\" I murmured, kissing his shoulder. \"Didn't mean to make you uncomfortable, did we, Kar?\" \n\n\"Nope,\" she replied, nuzzling her cheek against his chest. \"Evie and I just get carried away with one another sometimes.\" \n\n\"Yes, I've noticed,\" he sighed. \"And now I find myself in this rather awkward condition.\" \n\nWe both looked down at his cock and giggled. \"Daddy, that's nothing to be embarrassed about,\" I said. \"We should be flattered, look at that thing.\" \n\nHe sighed again and put his arms around us both, not knowing what else to do, seemingly. \"I'll try working out again later. Maybe a different activity?\" \n\n\"I know,\" Karli said, grinning. \"What about the hot tub? We haven't used that in weeks!\" \n\n\"Ooh, yes!\" I agreed in delight, excited. I looked up at my father, eyes dancing. \"May we use it, daddy?\" \n\nHe shrugged. \"I don't see why not. If you two want to use the-\" \n\n\"No, daddy,\" I hissed, scowling at him. \"All of us. You, Karli and myself.\" \n\nHe paused. \"Uh, you sure?\" \n\nI rolled my eyes. \"Duh.\" \n\n\"Besides,\" Karli added, smiling. \"If you're with us, maybe Evie and I'll be able to keep our hands off one another.\" \n\n\"Not bloody likely,\" he muttered. \"Okay, we'll all use the hot tub. We'll wait until dark and turn on the lights.\" \n\n\"Awesome!\" I squeaked, bouncing up and down eagerly, my breasts jiggling into his side. \"We'll need drinks and food stuff for while we're out there!\" \n\n\"Drinks?\" daddy said, raising an eyebrow. \n\n\"Of course,\" I replied. \"You took us out last night with fake ID's and let us drink then. Why can't we do it in our own home?\" \n\n\"Well, you got me there,\" he admitted. \"I'll go and get beer for myself, what do you two want?\" \n\n\"Oh, just coolers, daddy, we're girls.\" I said simply. \"Just something fruity-tasting.\" \n\n\"Alright,\" he mused. \"Evie, you stay and make your chocolate-covered strawberries and things, I'll take Karli with me to grab whatever you two want and also so she can stop by her place to get whatever else she needs.\" \n\n\"That's kind of you, sir!\" Karli said, beaming at him while snuggling her boobs into his chest. \n\nHe shrugged. \"Only way I can think of keeping you two from molesting each other for more than five minutes.\" \n\nWe both laughed and kissed his cheeks, making sure to snuggle our breasts into him before reluctantly detaching ourselves. We both managed to 'accidentally' brush our hands against his cock and giggled as he coughed and blushed. We wiggled out of the room before rushing upstairs, hand-in-hand and giggling madly. \n\n\"Holy shit,\" Karli barely whispered. \"Hot tub time! This'll be amazing!\" \n\n\"I know,\" I said, smiling and nodding. \"But when you're out with him, do not slink all over him, it'll throw him off. I mean it. I'm not trying to be greedy, but we're getting damned close. I promise, he'll be fucking you soon enough.\" \n\nShe took a deep breath and sighed. \"I promise. I'll be good. Besides, it might actually make him think that it's you I'm only wet for if I behave when we're alone. And then we can ambush him but good.\" \n\n\"Now you're talking my language...\" I said gently, pulling her to me and kissing her deeply. \n\n*** \n\nThey were gone for over an hour, since they also had to stop off at Karli's place- I almost felt bad for my dad, who I knew would get roped into going inside and and trying some awful dish that Karli's mom had concocted. She was always trying to blend southeast Asian cuisine with soul food and the results were usually disastrous, a 'disastrohpy' as Karli liked to call them. \n\nThere was one other small benefit to daddy taking her home, that being that Karli's mother would doubtless be finding ways to hit on him and while she wasn't an ugly woman, there was no doubt that Karli and I were the sexiest girls alive in comparison and he would be coming home to that after a narrow escape from her curried fried chicken clutches. \n\nI smirked as I worked at the kitchen island, dipping my strawberries, raspberries, pineapple and other delights in the liquid chocolate. I kept pressing my pussy against the corner of the table, helping to control the tingling that I felt. Would tonight be the night? Would my daddy finally want us enough to surrender to the urges he was feeling? \n\nI finished the first round of dipping and made my way upstairs to his bedroom, where I looked around briefly, searching for something. His blinds were still mostly shut, but one could peer through the wooden slats and see that supposedly hidden location in our backyard where Karli and I had fucked earlier. I knelt for a moment and felt something sticky on my knee. I moved it and pressed my finger to the rug and rubbed it against my thumb. It was slippery and clear, whatever it was. \n\nI searched around some more, looking in his small plastic bin for tissues but saw none. Then I checked his hamper and found the boxers he'd been wearing earlier- I gasped in delight when I noticed they were sticky, with a huge amount of his cum. The thrill was unreal. Without even thinking, I pulled down my yoga pants and smeared the cum-soaked silk boxers against my pussy, even going so far as to stuff part of it inside me. \n\n\"Daddy, I want your cum inside me...\" \n\nWithout even trying and completely unexpectedly, I shuddered, gasped loudly and came. I clenched my thighs around the boxers and rolled side-to-side as the unbidden but certainly welcome orgasm washed over me like a warm bath. All I could picture was daddy's cum, deep in my pussy, mingling with me and part of me forever. ",
        "I laid back on the bed and smeared the sticky boxers all over my pussylips and clit, shivering in delight as I felt the cum. I then brought it up to my tits next and rubbed them there as well, delighted to see it glistening against my soft skin. There was so much of it! \n\nI was breathing heavily as I lay there, the thoroughly used and abused boxers now wet with my pussy as well as his cum. I brought it to my face and breathed deeply, shuddering as I smelled our mingled scents. I squirmed and writhed on the bed in ecstasy, transported to a world of colourful bliss. I was determined to make tonight the night he wanted to fuck me. \n\n\"You were watching, daddy... you watched Karli and I fuck and you made yourself cum while you did it. Daddy, I love you so much for doing that! I can't wait to show you!\" \n\nSoon, daddy... \n\n*** \n\nThey returned shortly more than an hour after they'd left, laughing and talking about how crazy Karli's mom was. I smiled and waved from the kitchen, where I was once again working on the chocolate-dipped fruits for our evening. It had taken considerable resistance on Karli's part to keep her mom from sending back some weird homemade snack for us to try out, not to mention she'd tried to keep my dad there while Karli and I partied back here. \n\n\"I'm just sayin', Mister S, she's available,\" Karli teased, winking at my dad. \"And believe me, if she knew you were gifted the way I know you are...\" \n\n\"Thank you, but no,\" my dad said firmly. \"Your mom's... not really my type.\" \n\n\"Daddy can't decide on a type, seemingly, so he just hangs with us to avoid the issue.\" I said cheerfully, making him blush. \"Mind you, he could do a lot worse.\" \n\n\"That's very true!\" he declared as he set down his twelve pack of craft beer and a bagful of coolers for Karli and I. She'd made a good selection of flavours and we'd be well-stocked for tonight. I presented the finished treats to them, asking them what they thought. \n\n\"Excellent job, Evie,\" he said, nodding. \"Do we want dinner before tonight's festivities?\" \n\n\"Oh, no, daddy,\" I said, shaking my head. \"Karli and I stuffed ourselves last night and then this morning, believe me. You go ahead and eat if you're hungry, we won't mind.\" \n\n\"But, if you two don't eat anything, won't you get drunk pretty quickly?\" he queried. \n\nWe both looked at him for a moment. \"I fail to see the problem here, daddy.\" I replied. \n\n\"I'm just being your dad,\" he reasoned. \"My little girl getting drunk?\" \n\n\"Am I out at a party where some boys can violate me when I pass out?\" I challenged. \"I'm here with you, daddy, and my best friend, what's to worry about if I get shit-faced?\" \n\n\"Okay, you got me there,\" he sighed, accepting the logic of it. \"You win.\" \n\n\"What do you expect if you're going to keep me locked away like Rapunzel?\" I argued for no particular reason. \n\n\"Well you certainly ain't Snow White,\" he replied, laughing. Karli burst out laughing too and I shut up, knowing I'd just landed on the wrong side of my daddy's razor-sharp wit. I'd had that coming, since he'd already given up. \"Now go ahead and do whatever you need to do while I grab something to eat, okay?\" \n\nThe food was ready so I took Karli with me while I went upstairs to the bathroom. I sat and she snuggle-straddled her way onto my lap, taking pictures of us while we peed together. \n\n\"You're gonna love this,\" I said quietly, making ultra-sure my dad couldn't hear me. \"While you guys were gone? I went into his room to check and make sure he' been watching us while we fucked in the backyard.\" \n\n\"Ooh, naughty,\" Karli whispered, grinning. \"Find anything?\" \n\n\"Did I ever,\" I replied, nodding. \"I found his silk boxers he was wearing earlier, in his hamper and absolutely drenched in his cum. I also found a few droplets on the floor by the window he didn't clean.\" \n\nHer eyes went wide. \"Ohmigod, really? What did you do?\" \n\nI smiled slyly. \"I was instantly horny so I stripped, laid on his bad and rubbed the cum all over myself and inside my cunt, of course.\" \n\nKarli shivered and held me tight at the thought. \"Think there's any left?\" \n\nI giggled. \"Sorry, babe, I got greedy.\" \n\n\"Poo,\" she muttered. \"Well, it's probably proper this way, you being his real daughter and all. Think tonight'll be the night?\" \n\n\"I'm sure hoping so,\" I said, my eyes glinting with determination. \"Getting his cum in me made me hungrier for more, it didn't sate me, that's for fucking sure.\" \n\nKarli squirmed close to me, pressed her pussy to mine and peed while kissing me. We finished and then went back downstairs, where we found daddy munching happily on a whole pizza. We both laughed as we saw what he was doing. \n\n\"Daddy, you're never going to get your hardbody back if you keep eating like an entire frat house!\" I said, coming up and hugging him. \"Jeez, no need to eat the whole damn thing.\" \n\n\"Besides,\" Karli said, leaning on his other shoulder and pressing her boobs into him. \"If you eat too much, you can't be drunk with us, right?\" \n\n\"Oh, it'd take a lot more than twelve craft beers to get this lug drunk,\" I added. \"We might get him tipsy, but I'd have to break out the French absinthe in liquor cabinet before he got well and truly bombed.\" \n\nHe sighed and quit attacking the pizza, leaving roughly half of it. \"I guess I can stay somewhat hungry, for you two.\" \n\nKarli giggled. \"That sounded so perverted, Mister Sturm! I'm blushing!\" \n\n\"You know what I meant, Karli...\" he replied, shaking his head at her while standing. \"It's dark now, why don't you two go set up the canopy and mosquito nets and turn on the lights?\" \n\nWe nodded and hurried out to the back- our jacuzzi was a wooden finish model, big enough for about five or six people and sat on our deck. It had lights that could be turned on at night and we also had a folding canopy that raised up and protected it on three sides from inclement weather and prying eyes. Generally, though, the tall trees that ringed our backyard kept the neighbours from seeing much of anything. \n\nThe canopy also had a thin mosquito net that afforded protection from pest, especially when the lights were on. But one of my favourite features of our jacuzzi was the fact that it had a built-in mp3 player, a feature Karli and I used a lot. Small surfaces provided space for food while several drink-wells were built into the edges, allowing us to eat and drink as we pleased. \n\nOne we'd put up the canopy and draped the mosquito net, I turned the jacuzzi on, giving it time to start up and reach the temperature we wanted. Then we went back inside and got the fruit and our coolers, bringing them out and setting them in various locations, along with my daddy's beer. We set the fruit on a small nearby table that was far enough away that heat from the jacuzzi wouldn't melt the chocolate readily. When all was ready, I took Karli's hands in mind and looked into her eyes. \n\n\"Alright, this is it,\" I said quietly, giving her hands a reassuring squeeze. \"We get him just tipsy enough to let his guard down and we keep playing it naughty. But he has to be the one who initiates it with us, or he may never be that comfortable again, okay?\" \n\nShe nodded. \"Don't jump him just because he might get a hard-on.\" \n\n\"Oh, he'll be hard, I guarantee it,\" I said, my eyes serious. \"But he's got to make up his mind about this, we can't take that away from him. All we can do is show our willingness and let him see and smell it on us, let the pheromones do the rest, okay?\" \n\nWe leaned in and kissed before stripping ourselves naked and stepping into the hot tub, drinking our coolers to calm our giddy nerves. \n\nThis was going to be an amazing evening, no matter what happened. \n\n*** \n\nSo there we were, waiting in the jacuzzi, sipping at our coolers and waiting patiently. We sat some distance apart so that we didn't begin the depravity too early and secondly to make sure that the star of our little show would fit between us. \n\nAbout ten minutes after we'd gotten in, the back door slid open and out came my dad, carrying a beer and wearing his bathing shorts. We both knew instantly that wasn't happening. \n\n\"Oh, daddy, no,\" I said, waving a finger. \"Nope nope nope nooooope!\" \n\nHe paused halfway through the mosquito screen. \"What?\" \n\n\"No bathing shorts, big guy,\" I said firmly. \"We're all el fresco tonight. Lose 'em or go back inside with the kiddies.\" \n\nHe seemed confused for a moment. \"You mean you're both completely naked in the jacuzzi.\" \n\nBy way of response, we both stood up, revealing ourselves to indeed be completely nude. His eyes nearly bugged out of his head at the sight of us. \n\n\"What's the big deal, sir?\" Karli asked sweetly. \"You've seen us both in our birthday suits before, recently even. Nothing's changed.\" \n\nHe still gaped at us. \"Yes, but...\" \n\n\"But...\" I pressed. \n\n\"You... sure this is alright?\" \n\nI rolled my eyes for effect. \"We're both over eighteen, daddy. If it's not alright, we would've never let you come out here, right? You know where the door back inside is.\" \n\nHe thought about that for a moment and drew a deep breath. Squeezing his eyes shut, which we both found adorable, he slowly peeled down his shorts, leaving him naked. We both smiled as his huge cock came into view. He then clambered into the tub and we watched it swinging between his legs, like a fleshy pendulum. \n\n\"There, daddy,\" I said sweetly, smiling. \"Better?\" \n\n\"It does feel nice in here...\" he said, settling into the water on one of the lower seats. Karli and I both sat in higher ones so our boobs stayed partially out of the water, making sure he could see them. True, it meant at this moment we couldn't reach one another, but it was still early and we wanted daddy to relax and get comfortable before the game began. We sat lazily and just drank from our respective bottles while I turned on some mellow jazz, which I knew would help daddy relax. \n\n\"James Darren,\" he said, smiling. \"Didn't know you'd programmed it into the player. Thanks, kitten.\" \n\n\"Oh, daddy, I did that ages ago,\" I replied, smiling back. \"Not gonna be selfish and just program in my own music.\" \n\nHe looked around inside the canopy, the lights set around the jacuzzi illuminating the insides brightly enough to let everyone see anything without being harsh or intrusive. \"When was the last time you and I sat in this thing together, pumpkin?\" he asked. \n\nI thought about that while taking a sip of my cooler. \"Hm, I think I was sixteen, daddy. You, mom and I all sat in here one day during the winter and watched the snow fall.\" \n\nHe thought about that for a moment and nodded. I was worried for a moment that he might get depressed at the thought of mom but that didn't happen, thankfully. He smiled at me. \"Gonna have to make sure we don't wait that long again, eh? Silly not to enjoy ourselves out here as often as we can.\" \n\n\"Daddy, I love that!\" I squeaked happily, clapping and bouncing just enough that my breasts jiggled and he got to watch. \"You're amazing, daddy!\" \n\n\"Hey, am I invited?\" Karli asked, pouting prettily and moving her chest forward slightly to present the swell of her breasts above the water. \n\n\"Of course,\" daddy and I said at the same time before we looked at one another and laughed. \"Of course you are,\" I continued. \"You're like my sister and another daughter, right daddy?\" \n\n\"Helluva relationship you sisters have, then,\" he replied, rolling his eyes and taking another pull from his bottle, causing us both to giggle. \"But if that's the way it's going to be, us making regular use of this, then I'm thinking at least once a week. We shouldn't use it so infrequently, I love this jacuzzi.\" \n\n\"We all do.\" I agreed, taking a stiff drink of my cooler. I was now on my second and perhaps feeling the tiniest bit of a tingle or a buzz, which I enjoyed. Even if nothing happened tonight, even if I didn't manage to quite fuck my daddy, this was going to be an awesome night I'd always remember. \n\n\"But just so I'm sure,\" he said, taking another drink and then looking at me pointedly. \"You've never had a boy in here, have you?\" \n\nI paused for a moment, wondering what to say while Karli looked at me and smirked. I shifted uncomfortably and then nodded. \"Well, to be honest, I have.\" \n\n\"I see,\" he said evenly, taking another beer and twisting off the top. I was pretty sure they weren't twist-offs. \"And did anything happen that I wouldn't want to know about?\" \n\nKarli began giggling and finally I sighed, telling him the truth. \"Total honesty, daddy- I've been topless in here with boys, even made out once or twice, but never had sex in here with a boy.\" \n\n\"Well, that's good to hear...\" he said taking another sip. \n\n\"Karli, on the other hand, she and I have sex in here all the time.\" I added, causing my dad to almost choke on his beer while Karli whooped with laughter. He coughed and cleared his throat, putting his beer down in its reservoir to steady himself. \n\n\"You two are trying to kill me, I swear.\" he wheezed. \n\n\"Oh, sorry, daddy,\" I cooed, reaching over and stroking his shin with my toe in a gesture of apology. \"Isn't normal to be able to talk about this kind of thing?\" \n\n\"I'm concluding rapidly that very damned little is normal about this family of mine,\" he muttered as he took his beer and drained it rapidly before moving on to another. \"Anything else you want to 'fess up to?\" \n\nI shook my head. \"Not tonight, why ruin a great evening?\" I said, smirking and causing him to shake his head again. \"Most of my misbehaviour around this place has been with Karli anyway, so I don't mind talking about that.\" \n\nHe looked at the two of us in what might have been bemusement. \"Is there any place in this house you two haven't violated?\" \n\nKarli and I looked at one another and made a show of thinking, as if we really had to try and remember if there was indeed such a place. Daddy just sighed and took another drink, draining that bottle and moving on to his fourth. Kar and I finally agreed that we hadn't done anything on his bed, but he already knew that we'd had sex in his shower recently. \n\n\"Jeez,\" he muttered. \"Even the kitchen island?\" \n\n\"Love that one,\" Karli said, grinning. \"That cold marble on your butt cheeks or my boobs when she turns me over to-\" \n\n\"Thank you, Karli, I get the picture,\" he interrupted, giving her a deadpan expression and causing us to giggle. \"You two out to murder me? You found out about my life insurance policy on you, did you?\" \n\nWe settled in and listened to music, letting the warm water relax us. No one felt the need to say anything for a while. I was onto my third cooler and feeling good. I could tell that Karli was getting tipsy because she was giggling randomly and her face was slightly flushed. I didn't want her to get too drunk, at least not yet. Daddy had to be around the same level of happy as we were. Thankfully, he was pulling away steadily at his beers, already on his fifth. He's no doubt finish all twelve if we let him and I wasn't worried about him getting drunk, not from beers, anyway. \n\nI had been subtly moving up to a higher sitting shelf, slowly revealing my body without daddy taking notice of the change. Karli had been doing the same and before long, most of our breasts were above the water line, just past our nipples. I looked over at Karli and gave her a subtle wink and she nodded in return. She took another sip of her cooler. \n\n\"Ever tried this watermelon flavour?\" she asked me, examining the bottle. \"Here, give it a shot.\" \n\nI nodded and leaned forward, so that my breasts came out of the water, my nipples just touching the frothing water line. Daddy watched casually, apparently mellow enough to appreciate my body without getting agitated. Good, that's exactly what I wanted. \n\nI tried the cooler Karli had offered, standing in the middle of the jacuzzi bent over, oblique to my father. I said I liked it and made to sit down when something I didn't expect occurred and one of the jets behind me gushed directly on my pussy. I squeaked loudly and splashed, standing up straight very suddenly, my eyes wide. Karli burst out laughing at my shock while my dad simply raised an eyebrow, looking at my face. I was standing hip deep in the water, holding a hand against my chest, breathing rapidly, no doubt looking like a frightened cat. \n\n\"That was awesome!\" Karli wheezed, still laughing. \"Feel violated, Evie?\" \n\n\"Holy shit,\" I rasped, turning my head to glower at the offending jet. \"Could've given me dinner and a movie first.\" \n\n\"Yeah, those upper ones are pretty strong,\" she said casually, taking another drink, her breasts fully appearing above the water. I was still standing and it occurred to me that the waterline barely concealed my pussy. \"The lower ones, though, they've become my best friends.\" \n\nI looked at her pointedly while my dad chuckled and shook his head. \"Does that really work?\" \n\n\"Hell yeah it does,\" Karli said emphatically. \"Why do you think I moved to this one?\" \n\n\"It just caught me off-guard,\" I said, finally composing myself but not sitting down so daddy could continue to look at me. \"I'm better now.\" \n\n\"That and it wasn't your regular, was it?\" Karli teased, pointing my way with her cooler bottle. \n\nDaddy looked at me. \"You have a regular?\" \n\n\"We both do,\" Karli said, not giving me a chance to respond. \"She calls hers Joan.\" \n\n\"Joan Jett. Harrr...\" daddy said dryly, opening another beer. \n\n\"And I call mine Roger, as in Ramjet.\" Karli added, grinning. \n\n\"And that's Roger you're sitting with right now?\" daddy asked, clearly relaxed and perhaps buzzed enough to be curious. \n\n\"Oh, yeah, he's my buddy,\" Karli said, smiling slyly and winking at my father. \n\n\"That he is,\" I purred, kneeling down in the tub now in front of Karli and smiling at her. \"Go ahead and say hi to him.\" \n\nKarli nodded and now leaned forward, putting her arms on my shoulders and lifting her amazing butt to the level of the jet she'd come to know so well. I put my arms gently around her back and supported her, my face nuzzled into her shoulder. I looked and smiled at daddy, who was watching incredulously but didn't blush or look away. He just sat and watched, fixated. \n\nKarli trembled and moaned as the jet pulsed and battered her pussy. It never took either of us long to cum if we were fucking these jets. Her boobs jiggled above the waterline, her flawless, tan skin glistening. Her back arched beautifully as he behind wiggled while she played with the jet. I could feel her hands flexing against my back in pleasure. \n\n\"Mmmmm, Evie...\" she moaned. \n\n\"Let it go, baby,\" I said gently. \"Show my daddy what a good girl you are.\" \n\nAt the mention of my daddy watching she began to tremble even more and squirmed her ass against the water jet. She hissed and moaned before shaking all over very suddenly and letting out a deep sigh as she came, biting my shoulder. I looked and made sure my daddy was watching, delighted to see that he remained transfixed on the display of shameless pleasure going on not two feet away from him. \n\nKarli sagged against me and I held her close to keep her from collapsing into the water. I giggled and kissed her nose, telling her what a great job she'd done. She murmured a thank you before I slung her into a lower seat, away from the jet. She sat still, her eyes open but somewhat glazed, smiling and caressing her body. \n\n\"No wonder you two like this thing,\" my father said finally, clearly amazed. \"I... remember your mother occasionally mentioning that she liked the jets, but I don't think I ever saw her, uh, get off on them like that.\" \n\nI smirked at him. \"You saying you two never did anything in this jacuzzi, daddy?\" \n\n\"Well, of course,\" he replied. \"But I was in here with her, so your mom didn't... well, she didn't need the jets, let's just say that.\" ",
        "Karli and I both began giggling at his statement. He downed the rest of his beer and opened another. \"So, Evie,\" he said, hoping to change the topic away from him fucking my mom. \"Uh, which jet is Joan?\" \n\n\"Oh, here she is,\" I said, making a petting motion at one of them that was directly opposite him. \"This is Joan and we're very much in love.\" \n\nHe chuckled and shook his head. \"My little girl the perv.\" \n\n\"Well I come by it honestly, obviously,\" I said, winking at him. \"Clearly you and mom were no angels.\" \n\n\"And when was the last time you and Joan got intimate?\" he asked. \n\nI thought about that. \"Hmmm, been at least three weeks, I think,\" I mused. \"Karli, wanna help?\" \n\nKarli was still melted into a puddle and slowly shook her head, indicating that she couldn't. I sighed. \"Well, daddy, sorry, can't show you, unless you plan to let me steady myself on your shoulders.\" \n\nHe thought about that for a few moments. To my secret delight, he nodded. \"Well, okay. I mean, it's not the first time I've seen it, right?\" \n\nI looked at him, a hint of a smirk. \"Seen what, daddy?\" \n\nHe suddenly realized what he had said and blushed, not terribly intent on explaining, but I wasn't about to let this go. I knelt in front of him and looked him in the eyes. \n\n\"Daddy, what did you mean? I know you didn't mean about seeing me naked, so what did you mean?\" \n\nFor added pressure, Karli now slinked forward and knelt next to me, staring at him as well. My father squeezed his eyes shut for a moment as he steeled himself to confess to whatever. \n\n\"I've... seen you cum before...\" he said finally. \"I was walking by your room once and you'd left your door open and you were on all fours in a corner of your room, using one of your toys that can stick to a wall. I saw you just as you...\" \n\n\"Just as I came.\" I said, still looking at him. \n\n\"And I stopped for a moment to make sure you were alright. Then I realized what you were doing and I went to my room, nothing more.\" \n\nI began giggling, almost in tears. \"Daddy, that's so cute! So you've seen me cum? Don't worry, I'm not embarrassed.\" \n\nHe blushed furiously. \"I... might have seen you both earlier today as well,\" he admitted. \"I heard something in the back and looked between my blinds and you two were just... finishing and I...\" \n\n\"Well at least I feel included now,\" Karli quipped cheerfully. \"And I'm not embarrassed either.\" \n\n\"Well, if you're okay with spying on me while I cum, than the least you can do is just brace me while I do it.\" I declared, not giving him a choice. Karli moved aside while I took daddy's hands and pulled him into a kneeling position in the center of the jacuzzi. I then placed my hands on his shoulders and looked into his eyes, my face inches from his. \n\n\"Put your hands on my back.\" I said gently, waiting for him to do so. I then slowly began moving my behind backward, feeling the increasing pressure of the water pushing out of the jet. I inhaled deeply and closed my eyes as the first ripples of pleasure began to come over me. The jets teased my pussylips and clit beautifully. \n\nI hummed softly as I let the flow of the jet pass over me, gently squeezing my daddy's shoulders. I opened my eyes and smiled at him while he looked back into mine, unable to say anything. One of my hands left his shoulders and then caressed his neck and up into his hair. \n\n\"Daddy, it feel so good,\" I whispered, feeling him tremble as I used his name. \"Mmmm, I want to tell you what it's like, but I- mmmmmmmm- I don't know how...\" \n\n\"It's all good, pumpkin,\" he said softly, evidently feeling the need to say something. \"I'm glad it feels good, go ahead and enjoy yourself. Daddy's watching.\" \n\nHe may not have known it, but he said exactly the right thing, telling me he was watching. I gasped and let out a sigh, pressing a little further back. I was taking this slower than Karli had, since my daddy was involved, but it was so worth it to see the look in his eyes. I kept caressing his neck, my face close enough to his so that he could feel my breath on him. \n\nFinally I'd pushed back almost to the jet and the force of it was making my body shudder. Karli kept gentle hold of my hips, steadying me. I bit my lip and breathed through my nose, fingers flexing on daddy's neck. His hands held me a little tighter, gripping my flanks as he watched me ride out this incredible wave of pleasure. \n\n\"Daddy...\" I moaned, knowing I wouldn't last much longer. \"Oh, God, daddy, I...\" \n\nThe orgasm crashed over me and I thought I'd scream so loud the entire neighbourhood would hear me. Unsure of what else to do, I jammed my lips against my father's kissing him and moaning loudly into his mouth. He was too stunned to move, feeling me shaking and writhing as I came. Karli knew what was happening and held me steadily, determined to not let me drop. \n\nFinally I collapsed forward, panting and heaving, my breasts pressed to my daddy's chest, my chin over his shoulder while I hugged him. He simply wrapped his arms around me and held me tight. I could feel my heart thundering and I'm pretty sure I felt his thumping against me too. \n\nMy daddy was naked, holding my naked body after I'd just cum, hard. I couldn't believe we were this close. Just a little more... \n\nI slowly opened my eyes and lifted myself to look at him and smiled wearily. \"So that's why I love Joan. Make sense?\" \n\n\"Uh... yeah, I guess it does,\" he said, unsure of how to express whatever he wanted to say. \"Pumpkin, you're... beautiful when you cum.\" \n\nI giggled and hugged him again, loving his arms around me. I then smiled at him apologetically. \n\n\"Sorry I kissed you suddenly,\" I said, blushing. \"It was that or scream so loud that-\" \n\n\"It's okay, kitten,\" he said, smiling and rubbing his nose against mine. \"I understand.\" \n\nI exhaled heavily and flopped back into an upper seat, my breasts above the waterline. I sighed and caressed them with one hand, looking at the ceiling of the canopy. \"Gawd, cumming makes me hungry, but I can't even move, my legs are fucking jello. Karli?\" \n\nMy friend sighed and shook her head, indicating she was in no shape to either. I looked at my father and smiled. \"So it's up to you, daddy. Would you get the chocolate-covered fruits, please?\" \n\nHe blushed a deep red. \"I'd rather not.\" \n\nI raised an eyebrow. \"Why?\" \n\n\"I... look, I just...\" \n\n\"Daddy...\" I said levelly, fixing him with a look. \n\n\"Well, watching Karli get off on the jet and then helping you, it... my body might be reacting a certain way that it probably sho-\" \n\n\"Daddy,\" I said slyly, smirking. \"Are you telling me that you have a massive hard-on because of what happened?\" \n\nHe blushed again. \"I... yes.\" \n\n\"Well so the fuck what?\" I said emphatically. \"You've seen Karli and I naked in here, you've seen us cum in here and at least three times overall, so what's the big deal? Quit being so embarrassed, daddy.\" \n\n\"I...\" \n\n\"We've hugged naked, we've seen each other naked more than a few times now and I've sat in your lap where my pussy's almost touched your cock.\" I pointed out. \"Daddy, just stand up and show us so we can get by all this awkwardness. Karli and I aren't worried, I promise you!\" \n\nHe thought about what I was saying and finally stood up. Both our eyes went wide when we saw it, wobbling in front of us. We'd seen it hard on the webcam, of course, but seeing it right here in front of us... \n\n\"Holy shit...\" Karli breathed. \"Now you really need to be my sugar daddy.\" \n\nI swallowed and then nodded. \"Okay, daddy. See? The universe didn't collapse. It's natural for you to be turned on by hot, naked girls. We're perfectly fine with it. Now get the fruit, please, so we can all eat something.\" \n\nHe nodded and stepped out of the tub, his rock-hard erection bobbing in front of him, as if pointing the way to the treats. Karli giggled at the sight but behaved as he retrieved the dainties and came back with the tray. He seemed more relaxed and not in such a hurry to submerge himself beneath the churning water, for which I was grateful. \n\n\"Daddy, passing around the tray sounds like a disaster waiting to happen so we're just gonna sit with you, okay?\" I said, moving around to his side, Karli doing likewise. \n\n\"Great, now my boner's never gonna go away...\" he muttered, causing us to giggle. I picked a big, exquisitely-covered strawberry I'd layered in both milk and dark chocolate and presented it to my father, smiling lovingly. \n\n\"To the most amazing and loving daddy in the world, the first treat!\" I declared while Karli knelt on his other side. He grinned and took a huge bite of it, leaving only the tiny green leaves and the stem. He chewed happily while we giggled and watched. I tossed the stem away carelessly. There'd be time to clean up later. \n\n\"I'm glad you're finally getting comfortable with the whole naked thing, daddy,\" I said, stroking his cheek while smiling at him. \"So as woman of the house, I'm making a new rule.\" \n\nDaddy looked at me. \"Woman of the house, hm? Do I get a say in whatever this ruling is?\" \n\n\"No, daddy, don't be silly.\" I said simply. \"From now on, unless there's company beyond the three of us in the house, we are all to be naked as often as possible.\" \n\nDaddy shook his head. \"What?\" \n\n\"Exactly what I said,\" I explained. \"I'm declaring the house a clothing-free zone at all times, unless we have visitors. That goes for you, Karli, because she practically lives here, and myself.\" \n\n\"Works for me,\" Karli nodded. \"I'm pretty much a nudist anyway, it'd be nice t not have to worry about that sort of crap for a change.\" \n\n\"You two are serious, aren't you?\" daddy said, looking back and forth between us. \n\n\"Totally,\" I said. \"It just makes sense, daddy. I hate clothes, you know that. Why shouldn't we just be free of them? And no, Karli and I don't care if you occasionally spring a boner. It's cool.\" \n\nHe sighed. \"Alright then.\" \n\n\"Awesome!\" Karli said, standing up and doing a little dance, her boobs jiggling back and forth, her hairless pussy just above the waterline. \"See, sir? Your head didn't explode because you saw my goodies.\" \n\n\"At this rate you should just call me daddy like your sister here...\" he replied, trying to sound resigned to a fate her clearly didn't mind at all. \n\nKarli squealed and crushed herself to him in a big hug. \"Thank you, daddy!\" \n\n\"Nfff, my pleasure, Karli...\" he wheezed as she plowed into him. \n\nThe James Darren list had finally ended and I put on some trance music, something I thought would help keep emotions high, with no real lyrics but often an occasional woman's voice in the background. Karli smiled at my dad as she now sat astride one of his legs, her pussy on his thigh. He coughed and tried not to notice, per our new agreement. \n\n\"So, Evie here said that in order to make you comfortable around her body she made you feel and squeeze her boobs,\" she purred. \"Is that what it's gonna take to make you comfortable around me, daddy?\" \n\nWithout waiting, she took both his hands and placed them on her breasts. They weren't as big as mine but they were a wonderful size on her smaller frame and he swallowed as she held his hands against her soft globes, massaging them in circles. She hummed as he even voluntarily gave them a bit of a squeeze. \n\n\"Great hands, sir- I mean, daddy,\" she giggled. \"I'm jealous that Evie got the treatment first.\" \n\n\"Oh, it won't be the last for either of us, I'm sure.\" I said as I sat straddled his other leg, letting him feel my pussy on his thigh. \"Kar, you want some fruit?\" \n\nShe nodded and took a small raspberry cluster bound in chocolate and placed it in my mouth before leaning over to her. She leaned in and her lips met mine. She bit into it and we kissed as the chocolate and berries dissolved between us. Karli kept my dad's hands placed squarely on her boobs while we did it and he just watched, saying nothing. \n\n\"Mmmm,\" Karli said, smiling as we pulled back from the kiss. \"Evie-covered chocolate, my favourite.\" \n\n\"Daddy, you want some more?\" I asked, looking at him. He sort of nodded and Karli grinned as she had an idea. \n\n\"I got this!\" she declared, taking another strawberry and placing it between my boobs, which I cupped together to keep it in place. \"Go for it, mister- daddy...\" \n\nHe stared down at my breasts for a moment while I smiled and winked at him. He slowly lowered his head down to my breasts and took the strawberry in his mouth, pulling it away. I shivered in delight and giggled as he chewed on it. I took a pineapple piece and pressed it to Karli's boobs, moving it around until she was smeared with chocolate. I then fed her the piece and leaned in, sliding my tongue against her breasts, lapping at the chocolate. She shuddered as I swirled my tongue around her nipple and gave it a gentle bite. \n\nShe looked at my dad and giggled. \"Have you ever seen anyone looking more stunned in their life?\" she asked. He did indeed look completely at a loss for words. \"Let's see if we can wake him up...\" \n\nWith that, we both leaned in and pressed our boobs against his face. He stiffened a little but didn't move as we rubbed our slippery breasts around slowly. We smirked at one another, knowing that he was nearly ours if we could do this. When we pulled back, his eyes were still wide and he sighed deeply. \n\n\"God...\" he said finally. \"You two are...\" \n\n\"Incredible?\" I interjected, giving him the adjective he was looking for. We both stood at that moment and began dancing slowly in time with the music, gyrating our bodies while he looked on in wonder. His eyes roamed over our bodies, sending tingles through me. He looked at my face, my breasts, my tummy and my pussy, along with my ass when I wiggled my way in a circle. Karli did the same, standing close enough that we could rub against one another. \n\nWe faced away from one another and held hands, pressing our ass cheeks together and began squirming. We both looked down at daddy, who stared back at us, lost in the show we were putting on for him. We writhed against one another, in time with the music I'd chosen. He was hooked, now I just had to reel him in... \n\nWithout a word we both settled back onto his thighs, facing out from him, our ass cheeks against his hips and his huge hard-on wedged between our legs. We slowly ground and moved against him, each of us taking a hand and placing it on our breasts as we undulated hypnotically. I could feel his heart pounding in his chest and by the restrained pressure of his grip on my breast I could tell he yearned for more. \n\nI gasped and shivered against him as his fingers gently pinched my nipple and heard Karli moan as he did the same to her. Our inner hands fell below the waterline and brushed gently against his throbbing cock, which begged for attention. We both gently took hold of it and he moaned, making me wild. This was it, we had him. \n\n\"Daddy, stand up...\" I whispered, my voice almost an instruction but also begging. We slid off his lap as he slowly rose, his titan cock now standing between us, inches from our faces. We both stared hungrily but remembered to play precisely, we didn't want to lose him at the last moment. We closed in around his hips, enveloping his manhood with our breasts, massaging gently back and forth. He put his hands on the back of our heads and moaned in pleasure. \n\nGently, our hands came up and wrapped around his dick, there was plenty for both of us. We leaned in and began kissing the shaft gently, enthralled by the feel of his soft skin above the iron hardness. His fingers flexed in our hair as he trembled, pressing us closer to his cock and we moved our bodies in obediently. \n\nI slid my tongue along the length of the shaft to his head, pressing the tip of my tongue against it. He moaned as I put my lips around the pulsing head, slowly swirling my tongue. Karli was kissing her way along the shaft, eventually joining me. We kissed each other around the head and began sliding our tongues around, teasing him. \n\n\"Mmmm, daddy...\" I moaned, feeling him tremble again at my use of his name. Our hands continued to stroke his shaft while our tongues wrestled around his cock head. His fingers in my hair felt so good, the sheer, casual power of his body making me wetter than ever. \n\nWe both stood now, keep our hands gently wrapped around his cock and pumping it together while we snuggled our bodies to his. I looked up into his eyes, my own glassy with need. \n\n\"Daddy,\" I said quietly. \"This... everything about this... it's okay. It's wonderful, I promise you. Never worry, daddy...\" \n\nHe looked down at me and nodded readily before I pressed my lips to his, kissing him lovingly, as I had wanted to for days now. I pushed my tongue into his mouth, moaning as I tasted the chocolate on him. He slowly reciprocated, his tongue meeting mine and dancing with it. My pussy was aching badly to him but I knew to take it slow. This first time was to be memorable forever. \n\nHis body was beginning to respond to Karli's and mine and his movements and the way he held us became stronger. I pulled myself away from the kiss and bit at his shoulder. While I did that, he turned his face to Karli's and pressed his lips to hers, kissing her deeply. She moaned in surprise and even stiffened for a split second before surrendering, kissing him back eagerly. We kept pumping his cock, squirming our bodies against his. \n\nI then gently lifted a leg and stepped over my daddy's hard-on so that my legs were on either side of it. I shivered as I felt the shaft against my pussylips. I wrapped my arms around him and kissed him passionately while Karli knelt behind us and gently took the head of his cock in her mouth. She slowly slipped her way down his length until she encountered my ass cheeks and my dripping cooze. Humming as she kept him in her mouth, she carefully took my lips between her fingers and pulled them down slightly, like she meant to wrap them around his shaft. I moaned into daddy's mouth and squirmed my pussy on his dick. \n\nKarli slid her mouth back, taking a deep breath before going back down again. She slowly began to bob back and forth along his length, as much as she could take in until she reached my pussy. She caressed my ass cheeks as she sucked on him while daddy and I continued to kiss deeply, lost in one another. I shuddered as he reached in and squeezed my breasts, my whole body on fire at his touch. I finally parted out lips, a string of our sloppy kiss pulling away between us as I looked up into his eyes, mine misty with my need. \n\n\"Daddy,\" I whispered. \"Please... I need you inside me so bad...\" \n\nHe nodded, completely beyond any objections he might have had earlier and allowed me to push him gently down onto the ridge he'd been sitting on before. Karli reluctantly released his cock from her mouth but knew she still had a part to play, not to mention she would soon feel his cock deep inside her too. \n\nHe sat with his legs apart, allowing me to straddle him, facing inward. My breasts squashed to his chest and my eyes met his as Karli steadied me, guiding my cheeks slowly and reaching under to find daddy's cock. She pressed my pussylips against it and teased the head up and down their length before moving to the side and watching intently. \n\nHe looked into my eyes and I nodded, feeling his cock head still squarely at the entrance of my womanhood. Slowly, never breaking our gaze, he gently pushed down on my hips while I lowered myself onto his cock. The huge head split my lips and then pushed inside, already stretching me. Biting my lip, I continued to settle myself down, feeling my tight walls give way before his massive tool. I shuddered and moaned, never having felt so full before. It began to sting a little but I kept pressing, determined to take him all the way in. \n\nMy pussylips finally pressed against the base of his cock and we both paused, staying absolutely still for a moment. I trembled and my breath was almost a sob as I tried to adjust. The sting gave way to the unreal stretching and then I was fine. I hugged him close, lost in a deep, content pleasure at that moment I could not describe. ",
        "\"I love you, daddy,\" I whimpered. \"Let me show you how much...\" \n\nI slowly began to rise, biting my lip again as that titan cock moved inside me. I pulled almost all the way off him, only the head left inside before slowly sinking back down, hissing as he stretched me again. Daddy trembled and moaned, his hands gripping my back. Karli was snuggling against him, kissing at our shoulders and caressing us assuringly. \n\nOnce he was all the way inside I paused again, briefly, before starting to move up again. I established a slow, steady rhythm now, moving up and down on his cock, my eyes locked with his. It stretched me beyond belief but it felt so good, especially because it was my daddy, finally. Karli and I had been so patient and worked so hard for this moment. \n\nWe kissed again as I slowly fucked him, loving the feel of his long, fat cock throbbing inside of me, invading my tight depths, learning me intimately, in a way I'd never desired of anyone else, even Karli. There was an intimacy to this, a craved connection that only he and I could experience, unlike anything else in creation. My daddy and I, right now, in this perfect union of bodies that felt so right and fulfilled so many needs we both had. \n\n\"Daddy...\" I moaned, causing him to shudder and grip my ass cheeks tighter. \"You feel so good...\" \n\n\"Baby...\" he moaned. \"Oh, God, Evie...\" \n\nI pressed myself to him, covering his face, neck and shoulders in kisses while I squirmed on his lap. He still was stretching me almost beyond capacity but I was beginning to adjust and even squeezing experimentally with my pussy muscles, where I could. I'd fucked my bedpost a few times, when I'd been super-horny and alone or with Karli, and this was even more challenging than that had been. I loved how his body smelled as we fucked. \n\nFucking... daddy and I are fucking... \n\nNo... we're making love... \n\nThe epiphany shook me to my core and I shuddered around his cock, groaning as I pulled my legs in closer, squeezing him even tighter and I thought I'd fucking burst. Daddy moaned as I squeezed and pulled me in tighter. My God, it was feeling so good... \n\n\"Daddy,\" I panted, looking into his eyes, both our bodies shining with sweat. \"It's so big... I need- nnnnnnnn- I need a moment... please fuck Karli, daddy...\" \n\nHe nodded, holding still and allowing me to slowly slide off of him. We both shuddered as he popped out of me and I gripped his shoulders as my knees almost buckled. I flopped off to the side and pulled Karli into his lap. She seemed to have a game plan already because she faced away from him, squirming her butt down onto his lap. She leaned back against him, grinding hungrily on his cock as she prepared herself to take him inside. \n\nWhen I had caught my breath, I knelt in front of them and Karli spread her legs, showing me her eager cunt. I took his huge rod and pressed the head against her lips, letting her slide them up and down it for several seconds. She then pressed it to her entrance and sank down, slowly taking him in. Karli is smaller than I am and she was gnashing her teeth and shaking with the effort, but she resolutely took his cock inside herself, groaning. \n\nFinally, he was as far in as she could manage and she trembled and whimpered as she tried to hold him in place. \n\n\"Holy fuck...\" she whispered. \"Holy fucking fuckballs...\" \n\nI knelt in front of her and smiled, glad my daddy couldn't see the tears of effort streaming down her face. But I knew soon enough she was be in rapture as she fucked that magnificent cock, because Karli was a goddess when it came to sex. We'd fisted one another and she could do that like a champ. \n\nSlowly, patiently, she began to move up and down, my dad keeping his hands on her thighs gently. If I thought my breathing had been ragged during my first few moments of having him inside me, it was nothing on hers. Her pussy and his cock were underwater so I took a breath and submerged myself to take a look, the water not hot enough to sting my eyes. \n\nOh my God... was that what it looked like when he was fucking me? \n\nBecause he looked like he was about to tear her apart. \n\nBut she was slowly finding a rhythm to work with that she could control. I broke the surface and saw her leaning back against him now while she squirmed her hips in a circle, rather than moving up and down. She was kissing him greedily and his hands were fondling and squeezing her breasts. They seemed like naturals together and I hoped daddy and I looked that amazing when we were fucking. \n\n\"Evie...\" she panted, still grinding on his cock. \"Y'gotta take over, he's tearing me up...\" \n\nI laid on my back on a thick towel I spread out, parting my legs and dangling them in the water. With a groan, Karli pulled herself off my dad's lap and brought him over to me. She knelt and sucked on his cock briefly, reveling in the taste of our mingled wetness, the three of us. Then he leaned over me, looking down into my eyes. I put my hands on his shoulders and nodded that I was ready. \n\nHe pressed his cock head against my pussy and pushed inside, pausing as I moaned. Then he began to slid in steadily but slowly, gradually filling me up. Karli knelt beside us, gaping in wonder at the sight of his huge cock penetrating me. I shuddered as he pushed in, my fingers pressing into his shoulders. Finally our hips met, he was completely inside me. I hooked my legs around his waist, pinning me to him and smiled. \n\n\"Fuck me, daddy...\" I said gently. \"Fuck me and cum deep inside me. It's what I want...\" \n\nHe nodded and began pushing slowly back and forth, while Karli crawled over me and nestled her body down to mine, breasts squashing and her pussy resting atop mine as we kissed lovingly. I moaned into her mouth as daddy slid in and out, a sensation like no other with that titan weapon of his. \n\n\"Daddy...\" I groaned, loving when his pubic bone met mine, the head of his cock pressing against my back wall. \"Daddy, please, fuck me good... make me cum for you...\" \n\nI began squirming my hips against him, flexing my tight pussy muscles around his shaft, making sure it was the best thing he'd ever felt in his life. Karli's tongue wrestled with mine as we writhed against one another- she could feel his cock going in and out of me with her own pussy. Our bodies were soaked with sweat as we fucked, the three of us. \n\nDaddy was panting and beginning to tremble, his thrusts inside me becoming firmer, more deliberate and I knew he was getting close to cumming. The very notion made me hotter than ever, my pussy squeezing tighter and tighter in response. I grappled onto Karli, moaning into her mouth as we all squirmed harder, so very close to rapture. \n\nI broke the kiss and was panting heavily, my eyes glazed over. Karli was squeezing my breasts, driving me wild. Daddy was almost bucking against me, his cock battering my insides, sending jolts of wicked fire through me as he threatened to tear my cunt apart. \n\n\"Daddy!\" I gasped, looking up into his eyes. \n\n\"Evie...\" he grunted, arching his back and straining desperately against me. \n\nThe dam broke and I screamed into Karli's mouth as his cock shook and began pumping his cum inside me. My pussy clenched savagely, stronger than it ever had before. Karli and I tore at one another and she came from pushing her clit down on mine, kissing hungrily and moaning loudly into each other's mouths. \n\nMy God, so much cum! \n\nHe kept pumping and pushing, his cock still pulsing. I felt like I'd drown from the inside. Then without warning he pulled out of me suddenly, pressing down on Karli's back and pushing his cock deep inside her, even while he was still spurting cum. Karli stiffened and tried to gasp, robbed of breath and her body rigid. He snaked his cock in and out, making sure she came hard. She shuddered and collapsed against me finally, like she was dead. \n\nWe stayed put in our tangle, breathing deeply, none of us able to say anything. After nearly a minute, daddy took his still-hard cock out of Karli and slipped it back into me. I sighed, experiencing no discomfort as he did so, just a pleasant fullness I knew I'd never get enough of. I smiled up at him tiredly and he smiled down at me. \n\n\"Thank you, daddy...\" I said in my best kitten voice, loving him, in love with him. \n\nFlushed as he was, in the dim lights of the jauzzi, he nodded and sighed contentedly. \n\n\"There's a lot to work out, isn't there?\" he said quietly, lost in thought. \n\nI shook my head. \"No, not really, daddy. There's only stuff to work out if any of us regrets this. And I promise you, Karli and I don't.\" \n\nBy way of agreeing, Karli gave a weary thumbs up while she lay on top of me, otherwise not moving. \n\nHe thought about what I said before looking at me. \"So how long have you had this all planned out?\" \n\n\"Not too long, maybe a week.\" I admitted. \"It happened when Karli and I noticed you being sad about mom and your frustration. I saw you trying to get off in the shower and you couldn't. It hurt, daddy, knowing that you were hurting so badly.\" \n\nHe said nothing, just listening. \n\n\"Karli and I, well, we resolved that we'd be the ones to bring you out of your funk. We were going to fuck you. The fact that you have the biggest cock in the universe was something of a bonus.\" \n\nKarli giggled. \"Amen to that.\" \n\nDaddy blushed. \"Well, I wish I could take credit for it.\" \n\n\"So we've been acting extra sexy and uninhibited around you,\" I continued. \"Any time you thought we were acting rather wild or out of control, it was planned, ever single time, whether we were together or not. And you have been acting more like the amazingly confident daddy I remember, so it worked.\" \n\n\"So... you two knew I could see you in the backyard when you were tanning and having sex?\" he asked, trying to keep the bewilderment out of his voice. \n\nI nodded. \"Yes, daddy. And I know you masturbated watching us, because I found your boxers in your hamper, soaked in cum. It thrilled me so much I rubbed it all over my pussy.\" \n\nHe blushed furiously now. I could feel his cock finally starting to soften inside me, now that we were actually talking and being honest. \n\n\"I'm really glad you're on those amazing birth control shots,\" he said finally. \"Because I've cum in you now. What about you, Karli?\" \n\nShe smiled and giggled, nuzzling against my breasts. \"No worries, sir. Y'don't try to be as big a libertine as I am without being on the same shot as your daughter. It's all good.\" \n\n\"Well, that's a relief,\" he said finally straightening up but still inside me. \"So... now what?\" \n\n\"Let me sit up, daddy, and we'll talk.\" I suggested. He nodded and slowly withdrew from me, his huge cock hanging in front of him and glistening with our mingled cum. Karli got off me and we both knelt in the water and took his piece in our mouths, sucking all the cum off him and draining him dry. He just held our heads and waited for us to finish before we sat him down and snuggled into his sides, kissing him adoringly. \n\n\"Daddy,\" I said finally, looking at him. \"Karli's and my minds are made up. We want this. We don't care if people think it's wrong and nobody has to know anyway. None of their business, right? We're not going to get pregnant, so there's nothing to worry about from that point of view.\" \n\nHe nodded, at least relieved by that seemingly. \n\n\"The rest is up to you,\" I said, caressing his cheek. \"I want you to be comfortable making love to Karli and I freely, all the time. It's what we want, and you certainly seemed to need and enjoy it.\" \n\nHe smiled and kissed my nose. \"I guess I did. What... well, what about down the road?\" \n\n\"You mean if I get a boyfriend or you get a girlfriend?\" I asked, knowing full well what was on his mind. \"Daddy, I promise you, if you're my lover, I'm going to remember to not settle for someone who doesn't measure up in every way possible. I'm plenty young, I can wait.\" \n\nI then hugged him. \"And as for you, if I'm your lover, daddy, you'd best make sure she's at least as awesome as I am, because I'll chase her away if she isn't. Nobody's stealing my lover-daddy away from me unless she's a mom-level of incredible.\" \n\nWe both knelt up and pressed our breasts into him while looking into his eyes. \n\n\"Now do you agree to be okay with all this from hereon in?\" I asked, looking at him levelly. \"There's two answers, daddy, but only one right one.\" \n\nHe closed his eyes and thought deeply for several seconds, weighing his life in the balance, everything he'd ever considered and what could happen. When they opened, he smiled at me, shining with incredible confidence and a happiness I'd missed for over a year. \n\n\"Yes, Evangeline,\" he said, nodding. \"I want this.\" \n\nWe cried in delight and hugged him close, smothering him with kisses. I was grateful and thrilled and delighted and too many other emotions to describe. It was the best feeling in the world. \n\n\"Love you, daddy.\" I whispered as he pulled me into his arms for a kiss I felt like I'd been waiting my whole life for. \n\n*** \n\nTo be continued..."
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "incest",
        "father",
        "daughter",
        "teasing",
        "bisexual"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/love-you-daddy-ch-04"
}