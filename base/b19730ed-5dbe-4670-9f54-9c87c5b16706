{
    "title": "Falling for Grace Pt. 03",
    "pages": [
        "Grace and I only got to see each other once during the week. She had soccer, I had rehearsals (Sancho Panza in Man of La Mancha) so I took her out on Wednesday. We spent the afternoon together, then I took her to a great chicken place for dinner before taking her home. We both had homework to do; school was close to being over, but it wasn't over yet. We fooled around a little during the afternoon, but that was all. We really just wanted to spend some time together, much as we desired each other. We heard a couple of remarks at dinner, but the owner told the offenders to knock it off, and we were mostly left in peace.\n\nFriday I hurried home. I wanted to take my time getting ready before picking Grace up at 7 to take her to her prom and I'm a habitually prompt person. I had a snack as usual and took a long, hot shower. I did my hair just right, dad gave me some of his cologne to use sparingly and then I put on my tuxedo, which I owned, not rented. It paid to have my own tux; my family went to a number of formal affairs during the year, and then there had been Debutante Season, which I was done with, thankfully. I was fully dressed and ready to go at 6, plenty of time before I had to go to Grace's. Mom and Dad let Edina off early so she could help Grace get ready.\n\nI went downstairs where my parents were waiting. \"Oh, honey, you are just so handsome!\" mom said, gushing over me as mothers are known to do. \"I just wish Grace was here so we could get pictures of you two together! Next week, for your prom, she has to come here! And if she wants another gown for next week, Edina and I can still take her Monday. My seamstress will get any alterations done in plenty of time. You make sure you tell her.\"\n\nDad too pictures of me and of me and mom, and she got a few with me and dad. He took me aside before I left, slipped me $100 \"just in case\", and let me know I didn't have a curfew, but coming home at breakfast was not acceptable. I got the message. Stay out, have fun, but don't walk in at 6AM.\n\nI got to Grace's about 15 minutes early. Gus greeted me much warmer than the last time I saw him, about 2 weeks before. I didn't know if he was doing it for Grace or Edina, or because he realized this wasn't some passing fancy and I really cared for his sister, and I didn't care which reason it was. \"I took off from work tonight to see my baby sister all grown up\" he smiled. Then he got serious. \"I heard about your trouble last week. That cracker sheriff is a real piece of work.\"\n\nI didn't like the word 'cracker', but I just let it go. \"Yeah, he and his deputy had me scared out of my wits. Then my dad told me what could have happened with the work farm...\" I just closed my eyes and shuddered.\n\n\"Yeah I know a couple of dudes got sent to that 'farm'. It's the one place where Blacks and Whites are equal. We're all n****r's there.\" Then he leaned closer to me. \"I want to let you know I appreciate how you've been treating Grace. She's crazy about you. And everything she tells me- and she tells me a lot, just no details- says you are treating her with major respect. Keep doing that, and you and me, we're going to have no problems. Of course, you haven't met Alton yet\" he said laughing. \n\n\"Why? What about Alton? Grace has barely talked about him.\"\n\n\"You'll find out in about a week after he comes home. He graduates from SC State in 10 days. Fifth in his class. We're all going.\"\n\n\"That's great news. I'm looking forward to finally meeting him.\"\n\nGus kept chuckling, confusing me. I didn't have time to think about it as that was when Edina came out with Grace right behind her. I think I froze stiff when I saw her. She was wearing a rose colored dress, just below the knees and very form fitting, including along her legs, her gorgeous legs. She had white high heeled sandals that made those legs look even longer. But the big surprise was her hair. She had gotten it done into long curls with a tint of red. Instead of the beautiful woman she normally was, she looked sophisticated, elegant. Breathtaking.\n\n\"Sis, baby, you look incredible!\" Gus stated with admiration. \"Just wow!\"\n\nEdina was beaming. \"She's no little girl no more. I guess I got to stop calling you my baby.\"\n\n\"Mom, you can always call me your baby\" Grace said as she hugged her mother. \"I'll always be your baby.\"\n\nGus said \"Hey Henry, nothing to say? You don't think my sister looks beautiful? You gone shy or something?\"\n\nI stood up, and in front of Edina and Gus, I kissed her, a long, soft kiss that Grace returned just as willingly. No tongues, just tender affection and love. Edina finally said \"Enough already you two! So Henry, what do you think of my girl?\"\n\n\"I think you're the most beautiful sight I've ever seen. More beautiful than the palace as Versailles. More lovely than the Mona Lisa. You're perfect. I almost forgot, this is for you\" I said, handing her a wrist corsage, which I helped attach to her left arm. She gave me a small peck with a huge smile. \n\n\"Thank you. You really know how to make me feel very special.\"\n\nWe took some pictures, of course, then we got in my car and headed over to pick up Grace's friend Janelle and her boyfriend Jonah. Janelle was very friendly, pretty, very vivacious and Jonah was nice and friendly. We all talked lightly as I drove over to their school, where the prom was being held.\n\nThe gym was decorated nicely; the prom committee did a heck of a job. Girls all fussed over each other and the guys all were friendly but a little aloof. We sat at a table with Grace's friends and two other couples. The girls were all very friendly towards me, and I to them. But the guys were mostly just polite. \n\nWe danced to a few fast songs to start, then a slower song before dinner started. I loved dancing with Grace, our arms around each other, sharing kisses. There were a lot of very pretty girls there, but Grace was far and away the most beautiful. I don't think it was a biased opinion, but rather a statement of fact.\n\nAfter the we ate a little, I had to use the bathroom. I excused myself, kissing Grace as I got up and found the men's room. I was standing at a urinal when I was surrounded by 4 guys with menacing looks. Shit. They just stood there while I finished peeing, shook off, and tucked in. I turned around, but I couldn't step away. \n\n\"Hey, guys, you mind if I go wash my hands? We can talk about whatever you have in mind after that, ok?\"\n\nThey opened a path for me and they followed me to the sink. I deliberately took my time washing, thinking about how I was going to get out of this one, but nothing came to me. I grabbed some paper towels and then one of the guys, clearly the leader of this group, said \"Listen White boy. If it wasn't for Gus, you'd be getting your ass kicked right now. Tonight you get a free pass. Don't come to this school again. It's off limits to you. Understand?\"\n\n\"Yeah I understand. But I'll come back when I want. Grace is very important to me. You do what you have to do. But I care much more about her than I fear you. I'd rather we all got along. I'm not here to bother anyone. But if there's a problem, it's on you. Now excuse me. My girlfriend is waiting for me, and I'm sure yours are waiting for you.\"\n\nI walked past them, confused looks on their faces. My heart was pounding hard enough to burst from my chest. I was no fighter, and I certainly didn't think I could fight off four guys. I probably would have lost to one of them. But if it came down to dealing with trouble here or disappointing Grace in some way, it was no contest. \n\nI walked down the hall back to the gym when one of the guys called to me from behind. \"Hey, Henry, wait up.\" I stopped -froze, actually- and the guy stood in front of me and put out his hand. \"You're all right. We wanted to make sure you ain't got ice water in your veins. You stood up for Grace. You got guts. We ain't going to be best buds, but nobody is going to fuck with you.\" And he went back to his friends.\n\nI let out a huge sigh of relief. My dad had told me a long time ago a little courage goes a long way. That was the first time I think I ever got the point of that tidbit of wisdom. I went back inside and took my seat. \n\n\"Are you ok?\" Grace asked. \"You were gone a long time. I was getting worried about you.\"\n\n\"I'm fine. Just suddenly had to...you know. Can't control when these things need to happen.\" \n\n\"Ok, I'm glad you got that out of your system, because I want to dance some more!\" \n\nWe danced and danced, to funk and soul, some rock and roll, and best of all, some sexy, slow songs, one after the other. When we sat, the boyfriends became more friendly towards me. Maybe word got around. I just knew we were having a great time.\n\nTowards the end of the evening, the last few dances were all slow, romantic songs. Grace and I were dancing very close, like most couples were, her arms around my neck and mine around her lower back. We shared kisses, again, like most couples, and then she rested her head on my shoulder. It was the last dance. \"Henry, thank you. This has been one of the best nights of my life, maybe even better than last week. A month ago I wasn't even going to go. I had no one to go with; no one even asked me.\"\n\n\"I find that hard to believe. You're the most beautiful, the classiest woman here. I'm serious. How could not one of these boys have asked you? Not that I'm complaining; their mistake was my stroke of luck.\"\n\n\"You answered it yourself. They're mostly boys. I need to be with a man. A strong, handsome man, with dark hair and these killer brown eyes. A sexy grin. And a good, strong heart. I love you, Henry.\"\n\n\"I love you too, Gracie.\" We kissed for a long moment as the song ended. We were looking into each others eyes as most of her classmates cheered and cried and hugged each other. We were completely focused on each other as we kissed one more time.\n\nGrace spent twenty minutes saying goodnight to people, then we got in my car with Janelle and Jonah. Before I even started the car, they were making out hot and heavy, and Grace grabbed my face, kissed he hard, and said \"No one's home at Janelle's house. Let's go there. I want you so much. It's been a week\" she moaned as we kept kissing over and over. She finally let me go long enough for me to turn the key and get going.\n\nAs soon as we were in the door, Janelle and Jonah disappeared into her bedroom, leaving us the couch. It was our only option other than Janelle's parents bed or her kid brothers, which was a single bed for her 20 year old brother, who was out for the night. The couch was roomier, if less private. Grace kicked off her shoes as I took off my jacket and tie and she pushed me on my back as she pressed her body on top of mine and we were kissing with the desire we had repressed all night. My hands were rubbing her back and down to her ass, grabbing the cheeks in both hands through her dress. Her hands were busy unbuttoning my shirt and kissing my chest as it was exposed. \"I'm going to gobble you up!\" she said in a very lusty voice.\n\n\"As long as I get the chance to devour you too. I'm very hungry for something hot and wet! And it's right between your thighs!\"\n\n\"I'm counting on it. Now me first!\" My shirt was open and Grace's tongue was trailing down the center line of my chest and stomach. She swirled her tongue into my belly button and I let out a brief cry. Then she bit me softly on the lowest part of my tummy and my cock went from hard to steel. Grace could feel it against her tits.\n\n\"I love how hard you get\" she moaned. \"So hard, so easily. It's a huge turn on.\"\n\n\"You're the one that gets it that way. You're so fucking hot. You're driving me wild!\"\n\n\"I'm going to make you scream and beg and cry\" she said as she got up and pulled down the top of her gown, then freed her ripe tits from her nude colored bra. Her perfect tits always made me want to suck them hard just from seeing them up close. I reached for them but Grace slapped my hands away. \"I told you, me first!\" \n\nWhile she was up on her knees with her body naked from her hips up, she reached and undid the buttons on my pants. Just as she was tugging them down, we heard loud noises from Janelle's room, mostly of her yelling \"OH! OH! YEA! FUCK!\" and the sounds of flesh smacking against flesh. \n\nWe both giggled but not for long, as Grace got back to tugging my pants down and off. My cock was standing almost straight up, with a slight curve upwards. She grabbed my hot dick and pumped it a couple of times before bending back down and kissing it all over. Grace kept flicking her tongue under the head, teasing the hell out of me. She was clearly in a very naughty, playful mood and I was more than willing to play along. Hearing Janelle and Jonah didn't hurt our libido's.\n\nGrace kept teasing and toying with me until she finally took my cock all the way into her mouth, her big tits pushed against my thighs as she bobbed up and down, up and down, slowly and then faster, then slower, changing it up so I couldn't get close to cumming. She let my cock out from her mouth into her hand as she sucked on my balls, switching back and forth between my swollen orbs as she stroked me slow. \n\n\"You're so good to me, you wicked, dirty girl. Sucking my cock and balls like this. You love sucking me, don't you? Tell me!\"\n\n\"Fuck yes! I love your big dick in my mouth! You've got a delicious cock and such sweet cum! You're going to have to give me some of that cum in my mouth later. But not now. Now, you're going to eat my juicy pussy. Get ready to use that nasty tongue!\" \n\nGrace stood up for a minute to shimmy out of her gown, then she crawled over my face. \"Take off my panties...with your teeth!\" she giggled with heat in her voice. \"Let's see what you can do, dirty man. But hurry; my cunt's on fire!\"\n\nHer panties were skimpy and cream colored; I thought I could do it, but I needed a better angle. I grabbed her hips and ass and pulled her over on her back, a little roughly, which made Grace squeal with delight. \"I love it when you take control! I love a man who behaves like a man! I get so fucking wet! Wait till you taste my panties. Can you smell me? Can you smell my wetness?\"\n\n\"It's the greatest scent in the world. Your juices are so fragrant. Let me show you what I think of your scent!\" I immediately dove between her legs, licking her juices from the inside of her thighs. Grace was moaning and rolling back and forth, grabbing at the back of my head, but this time I pushed her hands away. I was doing what I wanted. I rubbed my nose and my tongue all over the crotch of her panties and she was right, I could taste her completely through the thin cotton. After teasing her a little, I used my teeth to grab the elastic above her mound and tugged a little with my teeth, but it was hard to get enough grip to get them down over her hips. I'd never done that before, and didn't know if there were some sort of tricks to getting it done. I tried a few times, but really had no luck. \n\n\"Fuck it, Henry, just get them off me already! Pull them down or tear them off. I don't care which, just get your face in my cunt!\" Grace cried out with need and frustration. I said to myself fuck it and I grabbed her panties by the thin strips at the sides and tore hard. Grace's panties came apart and she moaned out loud as the tiny panties came apart in my hands. It definitely turned her on even more; I was learning things about her sexuality and about my own as well. This turned me on too, like a jolt down my body to my cock.\n\n\"I'm going to eat this sweet pussy until you beg me to stop. Maybe I will, and maybe I won't!\" Her eyes were gleaming with fire as I pushed her legs way back and thrust two fingers inside her slippery pussy. I then started licking her lips, all the way around in bit circles from above her winking asshole to her clit, back down the other side and starting over again. And again. And again.\n\nGrace was screaming obscenities as her legs flailed and her thighs tried to crush my head like a walnut in a nutcracker. That's not a huge exaggeration. She played soccer; her thighs were were solid muscle when she tightened them. \"Fuck that pussy, fucker! Deeper, get them in deeper and twist them around! Oh fuck, my clit, suck my clit, motherfucker!\" I took her firm, round pearl between my lips and pulled as the tip of my tongue glanced over and around, and Grace was cumming loud and hard, pulling my hair and thrusting into my face and hand. Once, twice, then a third peak. It sounded like she was a screeching truck. Eventually she pushed me away with her feet. Grace was a whimpering mass and she couldn't say a word for a while. I tried to get behind her to cuddle with her, but there wasn't a lot of room for that on the couch. When she got her wits about her, Grace moved to make just enough room for me so my lips could taste the back of her neck, causing her to purr with contentment.\n\n\"I don't know who to thank, Henry. But there's some girl out there who trained you well! I don't know whether to kiss her or kill her!\" Grace giggled.\n\n\"Honestly, this is all you. Something about you just inspires me. I get horny and all these kinky thoughts and ideas when we're together. I mean, sometimes I'd rather take our time and just savor each other. But when we're like this, I think I'd try anything with you. Just about, anyways.\"\n\n\"Baby, it's the same for me. I'd try almost anything with you. But only with you.\" She turned her head so we could kiss. \"I can feel that pink steel cradled between my ass cheeks. Very warm, and I bet you're desperate to get some relief. Sit up, baby. I'm going to ride you, and then maybe you can ride me.\"\n\n\"Anything you say, boss\" I joked. I grabbed my pants and got a couple of condoms and Grace helped me roll one on. The rubber clung to my cock, I was so damn hard. I sat and slid down so my ass was at the edge of the couch and Grace got on her knees facing me, straddling my body and aiming my cock right at her hot, dripping slit. I held my cock for her and I teased her a little, rubbing the head over her folds. She held still, her eyes closed as she enjoyed the pressure from the spongy head of my cock tracing around her pussy. Then she whispered \"Fuck this!\" and just slid down on my dick, engulfing my length slowly but steadily, until her ass was resting on my thighs. I pulled her to me, kissing her hard, as she rose and fell, up and down my cock. Her tits were mashed on my chest as we kept kissing passionately, as her hips bounced hard and fast. I slapped her ass and she moaned in my mouth and flexed her body forward, pressing her clit against my pelvic bone. I slapped her again and Grace broke our kiss to yell out loud. \"Fuck me! God I'm going to cum! Spank me again!\" \n\n\"I love slapping your juicy ass.\" SPANK \"I love how you scream when I smack it. It makes your ass sting and burn, doesn't it?\"\n\n\"YES!\"\n\nI slapped her ass a few times, Grace came again and pumped me as hard as she could. \"Fuck I'm going to cum too...!\"\n\nGrace got off me fast as a bullet and stood between my legs and bent forward, pulled off the condom, and jerked me hard as she held my cock between her tits and I spurted as I cried out, lifting my hips up high, fucking her tits as I shot a thick creamy load of cum between her splendidly soft pillows. There were streams of my cum leaking down her cleavage, down along the inside of her right breast and even a little covering her right nipple. Then she held her cum coated nipple to my lips and I got the first taste of my own cum as I sucked greedily. I don't know what I expected; really, I never had thought about tasting myself before. It was salty, tangy, not bad. I wouldn't want to make a diet of it. But maybe because I was still so hot and aroused, I lapped it off her without hesitating.\n\n\"Fuck, baby, that's so hot! Touch my pussy, quickly!\" I reached between her legs and rubbed around her clit and Grace shuddered once more as she grabbed my shoulders. When her climax finally passed, she collapsed on top of me, again straddling me. She felt so warm, so perfect. The wild heat was over, for the moment, and what came after was just as wonderful, the closeness and intimacy. We kissed lightly as we clung to each other. I rubbed my cheek against hers and she giggled. \"You've got 5 o'clock shadow. It feels very sexy.\"",
        "\"You're very smooth, and that feels very sexy too. Everything about you is sexy, Gracie.\"\n\n\"I really like when you call me that. But only when we're alone. It's private. Just between us\" she said softly in my ear, and I shuddered a little. That feeling of her breath in my ear...\n\n\"Then that's what I'll call you when we're alone. My pet name for you. What's yours going to be for me?\" I asked, kissing her warm lips.\n\n\"I guess I have to work on that. Give me some time. I'll think of something fitting for you.\" She stroked her finger along my cheek and I turned my head and kissed it.\n\nGrace had to go to the bathroom, not only to pee but to wash off my cum from her chest. When she came back, we cuddled together, but we were aware we really didn't have privacy. Janelle and Jonah could come out at any time. We wanted to be alone, somehow. It was still before midnight, early yet. So we got dressed and after letting Janelle know we were leaving, we got in my car and drove a few minutes. But where should we go?\n\n\"I can go home late, but I have to go home, probably by dawn\" Grace said.\n\n\"Same here. Dad kind of gave me that message before I left. But we can get a room for a few hours. I don't want to park at Point Lookout tonight. I want to be alone with you. I love you, Gracie. I don't feel like sharing you tonight.\"\n\nShe smiled an adoring smile. \"You always know how to make me feel so good inside. I mean deep inside. Sure, lets get a room for a few hours. It will feel tawdry in its way\" she laughed.\n\nI knew of a no tell motel nearby. I used 30 of the money dad gave me and we went into the room. It wasn't nearly as nice as the Holiday Inn from the week before, but it was clean. Good enough.\n\nThere was a radio, cheap and the reception had a lot of static, but I found a station playing soft music. Grace and I danced for a while, holding onto each other, right by the bed in that cheap little room that felt like a fancy suite at that moment. 2We were alone together, and that was all that mattered. \n\n\"I love you, Gracie. I wasn't exaggerating when I said you were the most beautiful woman in that room. You're the most beautiful woman in any room.\"\n\n\"Dammit Henry. I'm glad I know you're not just sweet-talking me. What am I going to do with you? Besides love you to pieces.\"\n\n\"You don't have to do anything else with me. Loving me is more than enough.\"\n\n\"No, baby, it's not. Not by a longshot. Get out of that tux again. We should enjoy this room. I want to watch you strip down.\"\n\nGrace sat on the bed (there was almost no other furniture in the room except a dresser with a black and white tv), crossed her long, lovely legs and smiled, her wicked smile. \"Come on, boy, give me a show. I want to see some skin!\"\n\nI gave her what I hoped was a sophisticated smile (I was in a tux, after all) and I eased out of my jacket, which, like everything else, went to the floor. Then I undid the bow tie and draped it over Grace's shoulder. She chuckled at that and gave me a few claps to encourage me. The shirt was next, unbuttoning it slowly for her, and as my chest came into view, Grace licked her lips in an exaggerated manner, sexy and funny. \"Keep going\" she said with a soft hunger.\n\nNext went my pants. Opened the button, then slowly, teasingly, pulled down the zipper. I let the open pants just fall off my hips and down my legs and I stepped out of them. I was down to just my boxers and I just stood there. Grace said \"What are you stopping for? I want to see my favorite part, big boy. Down with them!\"\n\nI loved how bawdy she was behaving, but I was feeling decidedly underdressed while she was in her dress. \"You're going to join me, aren't you? I don't want to be at this party all alone.\"\n\n\"In time, baby. In time. You know how much I want you. I'd say my panties were wet but you tore them off before. I want...oh, oh my god!\" Grace broke out in gale's of laughter.\n\n\"Gracie, I'm standing here in my shorts. What the hell's so funny?\"\n\n\"We left my torn panties on the living room floor at Janelle's! I hope she finds them before her parents!\" She was still laughing and I joined her. It was damned funny, though Janelle might not appreciate it as much. \n\n\"You're crazy, you know that? I'm in love with a crazy woman.\"\n\nHer laughter calmed down, and Grace was smiling wide. \"You're in love with me, hmm? Good. I'm in love with you too, you handsome stud.\" She beckoned me with her forefinger, pulling me to her, figuratively. \"Come here, baby. You're so damn sexy, and I'm so hot for you.\"\n\nI walked over so I was standing just a couple of inches in front of her. I reached for her cheek and stroked it tenderly. \"You're so beautiful. I know, I've said it before, but you are. Gorgeous. Magnificent.\"\n\n\"Henry, you do things to me. You make my legs quiver. Make my nipples ache. And my pussy...god, my pussy.\"\n\n\"Well you make my dick throb, in case you haven't noticed. My heart pound. My knees weak. You make me want to take on the world.\"\n\nWe were being totally honest now. No teasing, no joking. \"Henry, my baby, you make me want to hold you all night long. Hold you and protect you and keep you warm. Not like a mother. Like a lover. Like your only lover.\" She stood up so we were face to face. Grace reached for the straps of her gown and pulled her arms through. She turned around and said \"Unzip me, baby. Nice and slow.\" She was 18 and a total seductress, at least when it came to me. My fingers were shaking as I took the zipper down as slow as I could manage. I kissed the back of her neck, her shoulders, even her upper arms and she trembled a little.\n\n\"You're delicious. Your skin is so soft, a little salty. Just amazing.\" I undid her bra- I loved taking her clothes off and feeling her body, every time- and her breasts fell into my hands. I massaged her fleshy mounds and rolled her nipples with my fingers.\n\n\"Henry...you make me want to melt in your arms. I'm literally shaking. You make me feel like a real woman.\"\n\n\"You ARE a real woman, honey. A sexy, sensual, desirable woman. I really don't want to be with anyone else. And you make me feel like a man. Not a teen. A man.\"\n\nI was kissing the side of her neck, and Grace was tilting her head, giving me easy access to that sensitive zone. \"My man, Henry, baby. All mine.\" She turned around quickly and we were kissing hard, like possessed people, hot and craving and very needing. She got my boxers off, finally, and the head of my cock was grazing against her soft tummy, tickling her. A single drop of my precum oozed out and stuck to her right below her belly button. I pulled back a little and that drop left a strand connecting us. \n\n\"I've got to have you, Grace. I need you.\"\n\n\"I need you too. Like you wouldn't believe.\"\n\nI reached down to the back of her thighs and picked her up. Grace was hardly fat in any way, but she was athletic, far from skinny. And I was not exactly a muscle man, but in good shape. I was so on fire for her I picked her up like a bag of feathers. She wrapped her legs around my waist as I carried her to the bed and laid down on top of her. My penis was between us, her warm tummy so comforting. Our lips barely separated because our kisses were so passionate. When they did part, it was to kiss other parts of each others faces, shoulders, throats. This was passion and love and we both were feeling more love for each other than we could say.\n\nGrace pulled her legs wide apart, giving me access to her warm home. \"Let me get a condom\" I whispered as I moved to grab my pants.\n\n\"No. I know it's risky, but I need to feel you, just you, inside me. I even want you to cum inside me, I want to feel that for once in my life.\"\n\nI stopped moving, stopped kissing her. I pushed up on my arms so I could look at her face. \"Grace, do you realize what you're saying? This is a huge chance we're taking.\"\n\n\"I know. And if something happens, we'll deal with it, together. We're two very smart people; we'll figure it out. But I need this, this one time. I love you so much, Henry. With all my heart.\"\n\nI couldn't say no, not with my heart. My head was saying something else, but I was listening to my heart. \"Ok, my love. We'll hope for the best, and we'll figure it out. Together.\" I held her left hand with my right and we both squeezed.\n\nI lifted my hips and Grace reached to guide my cock to her pussy. I looked in her eyes as I went in, smooth like silk. She felt like warm butter surrounding me. Grace gasped as I filled the center of her being. I kissed her, she kissed me, her hands holding my head. Our tongues played and teased, our lips were burning hot and our bodies were sliding along each other, covered in a warm coating of perspiration. \n\nI put my lips next to hers and whispered \"I love you, Gracie. More than anything in the world\" as m, y body moved in perfect rhythm with hers. \n\n\"I love you the same, Henry, baby. More than I could have imagined. That's it, baby. Nice and slow. So beautiful.\"\n\nSlipping in and out. Not rushing, just moving deliberately in time with each other. She was so right, it was beautiful. Occasionally I felt her shudder beneath me as a small climax passed through her. Her hands traveled all over my back, my arms, my butt. Her nails scraped lightly along my neck and back. I didn't cum but I did shiver a few times, not from cold but from pleasure.\n\nWe didn't talk, we just kept making love. I didn't know how long we went on, but it seemed like both a long time and a brief moment in time. Nothing felt better in my life up to that point. Just being connected like that with Grace...it had to be true love.\n\nAfter some time, Grace whispered \"Baby...\"\n\n\"I know. Me too. Last chance to change your mind, honey. Are you sure?\"\n\n\"I am. I've never wanted this before with anyone. Just you.\"\n\nWe both moved quicker, building up gradually, our bodies still in perfect sync. Grace's nails dug into my shoulders a little as she got closer to her orgasm and I felt my own approaching from deep inside me as I twitched inside her, the way she loved so much and she gripped me, the way I loved so much, and then we came together, without any prompting. I twitched with every pulse of my semen, each time causing Grace to moan \"Oh, oh, oh...\" until I was empty and she was drained as well.\n\nWe laid there very still. I was slowly softening inside her, and we held onto each other as long as we could. Our kisses were soft and sweet, salty from our exertions. I could have stayed like that forever with Grace.\n\n\"Well, we did that. For better or worse\" I teased, punctuated with a kiss and a nibble on her neck.\n\n\"Oh god, don't say that! It's like an omen!\" she responded, laughing. We were so happy, but we were nervous as well. We just took a huge chance that could change both our lives. \n\n\"Whatever happens, Gracie, I love you and I'll stand with you. We don't have to talk about it anymore right now. We should just enjoy the rest of the night.\" I kissed her again. I loved kissing her.\n\n\"Thank you, Henry. I know I can count on you. Could you roll off me? You do get kind of heavy after a while.\" I moved to her side and she turned to face me. We held hands and just enjoyed being together in the most intimate way imaginable. \"Whatever happens, that was so special, baby. Perfect.\"\n\n\"It was, wasn't it? I never felt anything like that, and I don't mean just sexually. It was like magic. Gracie, have you ever thought about going on the pill?\"\n\n\"I never had a need to think about it before. There was never anyone in my life I felt this deeply about and committed to. You know it's not without some risks. They can cause bleeding, weight gain, headaches and other problems. Most are minor, but still. Now that I'm with someone I love so much, I'll look into it.\" We kissed and held each other.\n\n\"I love you too, honey. I just want to hold you for a while before I have to take you home. I don't want to take a chance of falling asleep here. We'll both be in huge trouble.\"\n\n\"We'll be grounded for life. Or at least the summer.\" We laughed softly together. \"I need to use the bathroom\" Grace said, kissing me before going to do her business. I loved watching her ass shake as she walked away from me.\n\nWhen she came back, I took my turn, and when I was done we just cuddled for about an hour. We didn't say much; we didn't need to say much. Most of what we wanted to say was communicated through our eyes and our hands. At 3, we had to get dressed. If we didn't I would have been too tired to drive home. After making sure we were reasonably presentable (we also had to look like we had a good time) I took Grace home. Very reluctantly.\n\nOn her doorstep, Grace and I hugged and kissed like we expected to never see each other again. It was that hard to say goodnight.\n\n\"I will call you tomorrow\" I said. \"Count on it. But in the afternoon. We both need some sleep. Do you want to catch a movie tomorrow night?\"\n\n\"I'd love to. I'll buy the pizza first. Fair is fair.\"\n\n\"Don't be silly. It's my pleasure to treat.\"\n\n\"I want to, Henry. I can't do it often, but once in a while I can. Let me, please?\"\n\n\"It's hard to say no to you about anything. Fine, pizza is on you.\" We kissed and just held onto each other like tomorrow wasn't coming.\n\n\"Thank you, Henry, for making this such a special night for me. It was the best night imaginable. Thanks to you.\" \n\n\"Now you're being silly. This was your night. I was just arm candy.\"\n\nShe chuckled. \"Very sweet and tasty candy. I love you, Henry.\"\n\n\"I love you too, Gracie. Have a great night. I'll talk to you tomorrow. Dinner and a movie tomorrow night.\" We kissed, one last lingering kiss and it was time for me to go. Grace watched me get into my car and blew me a kiss, which I blew back to her. Driving home, I thought tomorrow couldn't come soon enough.\n\nI didn't know it would be four days before I'd see Grace or anyone else.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nTo this day I have no memory of what happened after I left Grace's house. I remember driving and I remember Led Zeppelin was on the radio. I was singing along to Kashmir before all the lights went out.\n\nWhen I woke up, I couldn't make out the ceiling. It didn't look like the plain white of my bedroom. For some reason there were ceiling tiles and fluorescent lights. That made no sense to me at all. I tried to turn my head to the right and a searing bolt of pain went down my back to my feet. Suddenly, I was surrounded by my mom and dad on either side of me. They both looked like hell. Dad was saying \"Henry, can you hear me? Come on, son, wake up. Wake up.\" Mom held my right hand but my left was wrapped in some sort of heavy weight. I tried to say something but my mouth was stuffed with cotton (so it felt) and what I said sounded like a croak. Dad held a cup with a straw and I sucked greedily before he took it away. \"Not too much yet, Henry.\"\n\n\"What...where...Grace...\" was all I could manage.\n\n\"You're in the hospital, Med USC. You were in a car accident coming home Saturday morning.\" I tried to make sense of that, but I couldn't quite get there, due to the morphine drip they had me on. \n\n\"Grace. Where's Grace.\" It felt like the greatest effort of my life to say that.\n\n\"She's outside with Evelyn and Edina. She's been here the last three days with all of us.\" He leaned over \"You gave us all one hell of a scare. But you're going to be all right. I'll let the doctor explain it to you. I'll go get him.\" He darted out of the room and I heard a minor commotion. Mom took over, holding me for dear life and crying like I'd never seen her cry before. \"Henry. I thought we lost you.\"\n\n\"What...happened? Don't remember.\"\n\n\"A drunk driver hit you from the side. The police said you never had a chance to avoid it. If he hit you five feet more to the rear...\" she started bawling again.\n\nI was having trouble focusing; I just wanted to go back to sleep. But first. \"Mom...Grace. Please.\"\n\n\"All right. But the doctor said only two visitors at a time. Evelyn and Edina want to see you too. I'm so glad you're awake. My sweet baby boy.\" Mom was crying again. She hadn't called me her baby boy in a long time, I hated it once I turned 13, but I was very glad to hear it then.\n\nShe called to the hall and Grace came in, looking like my parents, awful. But she was the most beautiful sight in the world to me. \"Henry...\" was all she could say before breaking down in tears herself. She put her head on my chest, which felt like a heavy weight. I croaked out \"off...please\" and she got the message and kissed my cheek and then my lips. And then I passed out again.\n\nI didn't know how long I was out that time, but when I awoke, it was night out. Evelyn was sitting by my bed, half asleep, also not looking the best I'd ever seen her, and my sister is a beauty like our mother. I made as much noise as I could and she stirred awake and smiled at me. \"Hey there. I don't think I've ever been so happy to see my little brother. You've had us very worried.\"\n\n\"Mom, dad...Grace?\"\n\n\"Honey, it's after 2 in the morning. Everyone went to get some sleep. I volunteered to do the night shift. We didn't want you to be alone when you came to. Let me get a nurse to check on you.\" She pressed the call button for me and a nurse came in 10 seconds later. She turned on the lights and took my vital signs, asked me a few questions, cut back my morphine a little so I could stay awake if I wanted. Then she got a doctor to come in and check me, my eyes, he probed me a little (which felt like I was in the Spanish Inquisition) before saying I was doing pretty well under the circumstances. Then he left Evelyn and me alone.\n\nI tried to look at myself again, this time able to move my head enough to look down and around a little. I saw I had a cast on my left wrist and another on my right leg from my ankle to above my knee. And my chest hurt when I took anything more than a shallow breath. \"Evelyn...how bad...was I hurt?\"\n\nHer eyes welled up with tears. \"You're going to be ok. The doctor treating you will talk to you in the morning to give you the details.\" She looked so sad.\n\n\"Ev...please tell me? And water, please.\"\n\nShe held my cup with a straw and I sipped water, all that was in the cup. I needed more but she said the nurses told her not to give too much fluids. She didn't say why. \"Henry, the doctor should really be the one to tell you.\"\n\n\"Come on, Ev\" I managed with a husky voice. \"That's hours away. Please?\"\n\nShe was trying to decide what to do. I guess she decided if she wanted to be a doctor herself one day, she had to learn to talk to patients. Something like that.\n\n\"You have a broken wrist and a broken fibula that needed some plates and screws. It's going to take you a while to walk again.\" Tears were falling down her cheeks. \" You have 4 bruised ribs on your left side. And you also lost 3 toes on your right foot. And you have a skull fracture. You can't tell, but you have a big bandage around your head and your face is pretty beat up. It will heal\" she added hurriedly. \"But you're going to be here a week or two, then they have to send you to rehab to learn to walk with a cast, and then you have to learn to walk with toes missing.\" I could feel my own tears forming. \"Shit I shouldn't have told you. Henry, you're going to be ok. It will take a few months, but you'll be almost as good as new. You have to focus on that. The most important thing is you didn't suffer any brain injury. It could have been so much worse.\" And then she just let herself cry her eyes out. Evelyn and I had always been close, but her worry touched me deeply. I reached for her with the fingers of my right hand and she took them with her own. \"Everyone was so frightened, Henry. I think Grace more than anyone. That's some girl you have there.\"\n\nSomething then occurred to me. \"The other driver?\" I managed to ask.\n\n\"Fuck him, Henry\" my sister, whom I never heard curse before in my life, spat with vitriol. \"He walked away with a bruised shoulder. Drunken bastard. A 42 year old businessman who was entertaining clients all night and was too stupid to call a taxi. He's out of jail on bail and in a whole lot of trouble. The prick's lawyer already called dad to see if they could 'work something out'. Dad told him to fuck off and hung up on him\" she said with great satisfaction. I never saw that side of my sister before, profane and bitter. I didn't like it, whatever the circumstances.",
        "\"Mom and dad...are they ok?\"\n\n\"No, they're not ok. They've had the worst fright of their life. The police called them at 4 in the morning. That call is never good news. They were afraid you were dead. Then they called my sorority house at 6 from here, and they scared the hell out of me too. I got my roommate to drive me here; no way could I drive myself. Then they called Edina before she left to come to the house, at 7AM. She freaked, then she had to wake up Grace and tell her. We've all been through hell, though nothing compared to what you've been through.\" Her face was all red and wet. \"Dammit, Henry... I always knew I loved you. My dear brother. But I never realized just how much until this. All the time Denise was driving me here at 7 AM, I didn't know what was going to happen. At that time you were in surgery and we just didn't know. I never want to feel that again, ever.\"\n\n\"Ev, I'm so sorry.\"\n\n\"Shut up with that. All you did was stay out late with a great girl. You weren't drunk or using drugs. The hospital did a series of tests. You've had a bad week. First that dick of a cop, now this. But you know what? You've also found the best girlfriend imaginable. That sweet girl didn't want to go home. She was here from Saturday morning until 9 last night. Edina and our parents made her go home. She'll be back in the morning with everyone else. I don't know if I should tell you this...\"\n\n\"Ev, you can't do that to me. Tell me?\"\n\n\"You may not be ready to go to New York in August. In fact, you almost certainly won't be ready. Grace said if you have to delay until Spring semester, she's doing the same. She said she won't leave for New York until you're ready. However long it takes. She refused to hear any argument otherwise. I'm sorry, Henry, to tell you that, but I'm not sorry to tell you how great she is. But I guess you already know that.\"\n\n\"I do. She's amazing. In every way.\"\n\n\"I wish I could find a guy that incredible. Keith is really nice. We have fun together.\" She paused and smirked, and I could tell what she meant by that. \"But I know he's not 'the one'. Henry, I'm going to get a nurse. You look exhausted.\"\n\n\"I only feel wiped out\" I managed. I was exhausted. I never felt so tired in my life.\n\nThe doctor came back with the nurse and they checked me again. The doctor said \"It's a lingering effect from the concussion. You're going to feel very tired for the next few days. We're going to let you sleep for a few hours, but I want you up by six. You need to start staying awake more, but better for it to be during the day. Miss\" he said, looking at Evelyn, \"if you need a place to stretch out for a few hours, you can use the bed on the other side of the curtain. It's more comfortable to sleep in than that chair. Your brother is going to sleep for a few hours. No one will bother you.\"\n\n\"Thanks, doctor\" my sister said, lightly flirting with the young, attractive intern. I thought to myself some things never change. \n\n\"Go ahead, Ev. I need to close my eyes. Get a little sleep yourself.\"\n\n\"Ok Henry. I think I will. Maybe I'll dream of a handsome young doctor\" she giggled. \"Seriously, it's great to see you a little better. See you in a few hours.\" She leaned over and kissed my cheek and my nose. She was such a doll.\n\nThe nurse on duty woke me up at 6:30, but she left Evelyn alone to sleep. I noticed it was getting busier in the halls so I was sure she'd be up soon enough. More vital signs, a change of my IV bag of glucose and nutrients; I was on a no food order for the time. I learned later that was to make sure my stomach was empty in case I still needed emergency surgery and had to have anesthesia.\n\nAfter Evelyn woke up, a nurse and a couple of aides moved me so they could change the bedding and empty my urine bag (fun fun fun) and then they put me back in bed. Even the small exertion of that left me wiped out. \"Ev, why don't you go home and get some real sleep and get cleaned up? I'm sure mom and dad will be here in a few hours.\"\n\n\"They'll be here by 7:30. I go home then. Not before. I'm not leaving you alone. No way. I hope they bring me something to eat, though. I'm famished.\" \n\nWe sat, talked a little, but I wasn't feeling like much of a conversationalist. Still, it was good to have her there. I was trying to think about a lot of things, but it wasn't easy through the cloud of the morphine. School...college...delayed. It wasn't quite hitting me. \"Ev...I won't let anyone know you told me about my injuries. Don't want mom and dad on your case.\"\n\nShe smiled her winning, charming smile at me. \"Thanks brother. I really appreciate it. You're the best. A lot of my friends talk like they can't stand their siblings, especially the younger ones. Never me. I've always loved you and I let everyone know.\" She held my fingers in hers. It was very comforting.\n\nNot long after, mom and dad arrived and they did bring something for Evelyn, a biscuit with egg and cheese. Smelling it was making my stomach rumble; I hadn't had anything for 5 days. Nothing for me, though, even my water was very limited. They both hugged and kissed me, gently. After she ate, Ev took dad's car and went home for a while to sleep and to get cleaned up. My parents and I started to talk. We had things to discuss, as best I could.\n\nMom started. \"I called Mr. Harrison, your principal, yesterday and let him know what was going on with you. He's very concerned and sent his best. Told me to tell you to just concentrate on getting well and we'd work out something so you could graduate. You know you're not going to be able to go to graduation, Henry. It's in 4 weeks, and you just aren't going to be able to walk by then. It's more important that you do qualify for graduation. He said the school will work with you. With your grades, there shouldn't be a problem.\"\n\nThe doctor who was in charge of treating me came in then, a 50-something good looking woman, unusual for the times. She had an air of confidence and competence about her that was very reassuring. After examining me (more pain and misery) she let me know the skull fracture was relatively minor, no brain injury, but a neurologist would be in later to make sure. The wrist would heal cleanly in about 6 weeks and need a little physical therapy. Not too serious. The right leg was the big problem. Between the three lost toes and the bad break with 9 pins and three plates, I was looking at at least 4 months of misery filled therapy to learn to walk properly again, 2 weeks in the hospital and 3- 4 weeks in a rehab facility. There went my summer at camp as well as finishing school with my friends. And my prom. Done. I asked her \"I'm supposed to be in New York for college in mid August. Is there any chance I'll be ready?\" \n\n\"When you say New York, do you mean the City or upstate somewhere?\"\n\n\"NYU, downtown, by Greenwich Village.\"\n\n\"Yes, I know where that is. Honestly, there's a chance, but realistically, I don't think you should expect to be ready for that kind of wear and tear until late September. You'd have to be very careful about the heavy foot traffic, traveling on the subway...did I say something wrong?\"\n\n\"My girlfriend is going to Columbia, all the way uptown. I figured I'd be seeing her by the subway when we got together.\"\n\n\"Henry, that's not going to work. It's a lot of stairs with a lot of people bumping into each other. Even without the subways, just the foot traffic and dealing with all the cars and trucks...I don't think you should plan on going to New York until January, the Spring semester. I'm very sorry.\"\n\nI just went silent. She said some more about medications and other things that I just didn't hear. No prom. No musical. No camp and no college in the Fall. She said she'd see me the next day and left. Then it hit me, worst of all. No Grace. Or almost no Grace, pretty much the same thing. My eyes started filling with tears.\n\nDad said \"Henry, son, I know this is disappointing. There's a lot there that I know you didn't want to hear, especially as a senior, going off to college, and Grace. I can't imagine how you're feeling right now. But son, you're alive. When the police called us at 4 AM to tell us you were badly hurt, we didn't know if you would live or die. And we're beyond grateful we're able to have this conversation. Your mother and I will do everything we can to help you. Everything. I'm not going to tell you to not be sad or angry; you have a right to be. But when you can, think about what could have been. And you have us, you have Evelyn, and you have Edina and you have Grace. That young woman is a force of nature. She cares about you so much, and that won't change. Let us all help you, son.\" I just stared off onto the wall. \"Come on, Rae. Let's give him a little while to think. And Grace will be here after school. She missed three days staying here, worrying about you. As I said, she's something else.\" They both kissed me and left me to think.\n\nI knew he was right, I was lucky to be alive. But I didn't feel very lucky right then. I just stewed the rest of the morning and into the afternoon, making my parents feel more miserable than they were when they came in. Around noon I was moved from intensive care to a regular room for 2 patients, though the other bed was empty so far, and an old TV on the wall. Finally, Evelyn came back a little after 3 with Edina and Grace. I hadn't seen Edina since before my accident and she looked as worried about me as my mother. Grace was the one I really wanted to see. After visiting for a while, my parents, Evelyn and Edina gave Grace and I some time alone. \n\n\"Hey, baby, I've been missing you\" Grace said as she kissed me. \"I love you so much.\"\n\n\"I love you too, honey. I got a lot of bad news today.\" I recounted how I'd be missing prom, the musical, my graduation, camp and even my first semester at college. \"And worst of all, I'll be missing you for a while. I won't be home for over a month. And then in August you'll be going to New York without me. We won't see each other for months.\"\n\n\"Henry, if you're delaying the start of your first year, so am I. I'll just let Columbia know I won't be starting until January, that something came up. I'm not leaving you.\" She sat on the edge of the bed and held my hand.\n\n\"Grace, of course you're going. This is your scholarship. You can't take a chance of losing it. No way. You have to go. I love you too much to risk that. I'd rather take the chance I could lose you.\"\n\n\"What about what I want? Besides, it's not like we know I'd lose my scholarship. I'm sure if there's a family situation, they'd let me delay one semester.\"\n\nI looked at her, my love, my heart melting. \"You'd do this for me? Give up six months of your life?\"\n\n\"Henry, I love you. Remember the other night? When we made love and took that chance? We said whatever happened, we're in it together. Why is this any different?\" \n\nI said, very low \"You're not...you know...?\"\n\n\"No, dopey! At least, I don't know yet. It's kind of soon. My period comes around Friday. We don't have to worry until Tuesday. So two to five days. If I don't get my period by then, we have to start worrying. In the meantime, I'm going to call Columbia tomorrow and see what they say.\" She leaned over carefully and kissed me.\n\nOne last concern. \"What about your mom? How does she feel about you taking off your first semester because of me?\"\n\n\"We talked about it. It's not her preference, but she'll support whatever I decide to do, providing I keep my scholarship. That's essential. If I could lose it, I have to go.\" Grace got quiet and tearful. \"I don't even want to think about that possibility. It won't happen anyway.\" Another kiss, this one a long and loving kiss. \"Henry, you have got to stop scaring me already. Twice in one week is enough.\" She smiled, but it wasn't a strong one. \"Baby, I thought I was going to lose you. When my mom woke me up at 7, I thought she was crazy or something. I was having trouble waking up until she told me you were in a car accident. I woke up right fast after that. I thought the world was ending.\" Tears were rolling down her cheeks. \"I don't know what I would have done if...\" The rest was left unsaid. She leaned on my shoulder, gently, so I could carefully hold her with my right arm. That made me feel so much better inside. \n\nMom, dad, Ev and Edina came back in and kept me company. Then the neurologist came in and shooed everyone out. He did some basic tests and ordered some x-rays for me, a few other tests, but he said it looked like I was a very lucky young man. Everyone thought I was lucky, except me. By the time he left I was feeling very tired, so I said goodbye to everyone. Edina promised me a big plate of shrimp and grits when I was able to eat solid food. It sounded great, especially since I was starving. I got gentle hugs and loving kisses from everyone, but then they went home. I noticed I had a phone, and I picked it up and asked to make a call. A few rings later Darrell's mother answered their phone. After making a big deal over me, including more than a few tears of her own, she gave the phone to Darrell.\n\n\"Dude! You scare us like this again, and I'm getting a new best friend!\"\n\n\"Asshole. Who else would be friends with you?\" It felt good to bust balls with him.\n\n\"Seriously, Henry, how are you? Really?\"\n\nI filled him in on all the bad news and I heard him choking up on the other end. \"Man, I am so fucking glad you'll be ok. Losing you would be like losing a brother. I mean that. The whole school is upset. Girls crying, guys trying to be tough, but you can see some of them got pretty misty. Everyone wants to know when they can come visit. I could sell tickets.\"\n\n\"Seriously, this weekend, you, Chris and Cynthia. That's all I can deal with. It's really exhausting just talking right now. Just check with my parents when would be the best time. Please, man, just the three of you?\"\n\n\"Deal. I promise. Just no more scares from you.\"\n\n\"Promise. I've had enough excitement for the year. Except...\"\n\n\"Except what?\" he asked warily.\n\n\"Grace and I, the other night...we kind of didn't use a condom.\"\n\nSilence for a minute. \"That's just fucking brilliant. Two of the smartest people around, and you do something totally stupid. I swear, you must have a death wish.\"\n\n\"You had to be there, Darrell. Or actually, you didn't. It was just a very special situation. We agreed if something happens, we'll deal with it together. Darrell, I love her. Like I can't even explain. And she feels the same.\"\n\n\"Love is great. What you did is dumb. I know you're not religious, but you'd better do some praying. Listen, I've got to go. I'll tell everyone you said hi. And I'll see you this weekend. If Edina doesn't kill you.\"\n\n\"Fuck you too. Seriously, love you brother.\"\n\n\"You too, dumbass. Love ya.\"\n\nThat was the end of my strength. I fell asleep ten minutes later for the night.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nGrace called Columbia and, thankfully, they said she could wait to matriculate until January. It was a major weight off her shoulders and then on Saturday, she got her period. That was a massive stone off both our backs. My parents were there every day, though my dad had to go to work most of the day, and he came after. Evelyn had to go back to school, so mostly it was me and mom. And as much as I loved her, there was only so much of her and her stories about this club and that I could take. But I grinned and bared it. I was grateful to be with her.\n\nBy the weekend I was on soft foods, which are as pleasant as they sound. Soups were fine, but soft boiled eggs...not my thing. At least I was eating.\n\nI got a roommate on Friday, an older man named Joe, recovering from heart surgery. He was the nicest man imaginable, and funny as hell. He was wonderful for my morale and we got on great. \n\nGrace came with Cynthia, Darrell and Chris on Sunday, and that was another huge morale boost. Except for Grace, who'd seen me before then, my friends freaked out a little when they saw me, but they got past it and it was a nice visit. Darrell told me there was a list of people who wanted to come visit and I was just noncommittal. \n\nGrace stayed when the rest left; my parents would take her home later. We talked, held hands, and just spent quiet and comfortable time together. Her dedication to me was beyond touching. I fell deeper in love with her over the weeks.\n\nI went to the rehab facility, the best in the state, a week later. It wasn't on my parents insurance, but when your family has money and connections, things happen. I had to sit in a wheelchair for the first couple of weeks until my wrist was strong enough for me to support my weight on crutches. That was literally a pain in the ass. The therapists kept my other muscles from atrophying, which wasn't bad. What was bad was the facility was north of Myrtle Beach, which meant my mom could realistically visit once or twice during the week, and no one else could come except over the weekend. No dad. No friends. And no Grace. \n\nDarrell and Chris told me all about prom, even bringing pictures. I was named honorary King, which was sweet of my classmates. I missed it, and felt pretty down about it. \n\nOne day, about a week before graduation, Grace came with both her brothers, Gus and Alton, as well as Edina. It was a very nice visit, and I finally met Alton, who just graduated South Carolina State U. After a while, the three of them left Grace and I alone for a while, and she wheeled me out into the garden. It was hot, but not as bad as it could have been. It was nice to have some real alone time.\n\n\"I've missed you terribly, Henry. When you get home and we can be alone, I am going to attack you. Multiple times.\"\n\n\"Don't make me think about it, Gracie. At least you can take care of yourself. I'm sitting around with a perpetual hardon.\"\n\nShe gave me a very sexy smile. \"Yeah? That cute little redhead, the nurse's aid, she's been giving you sponge baths every day? She's touching what's supposed to be mine?\"\n\n\"Hey, someone has to wash it. She insists on the full treatment. What am I supposed to do?\"\n\n\"You're supposed to have some willpower, boy.\" She looked around the garden; we were in the shade of some trees and very much alone. \"Tell you what, if you're quick, I can help you with your problem.\" She fished around in my pajamas and released my cock, all seven inches hard like granite, and started jerking me off.\n\n\"Grace,\" I moaned, \"what are you doing? I mean, I know what you're doing. We'll get caught.\"\n\n\"Not if you make it fast. Considering how backed up you are, that shouldn't be a problem.\" She was stroking me quickly and twisting her hand slightly with each pump. My cock was leaking precum, just dripping down the head and shaft, lubricating her fingers, making it go smoothly. She was right, in less than 5 minutes, I came what felt like a gallon, making a huge mess all over her hand. I needed that, badly. She took a small towel hanging from the side of my chair and wiped us both up. \"Now, no thinking about cute little redheads, or any other kind of heads.\" We both laughed at the play on words. \"I love you Henry. With all my heart.\"\n\n\"I love you too, Gracie. Just as much, with all my heart.\" We kissed a few times until we heard her family come along. She had to leave and it hurt like hell to say goodbye. The only good thing was Edina had left me that huge plate of shrimp and grits she had promised me.\n\nA week later, it was Grace's graduation day. I was going to miss it, miss her valedictory speech, and I was just down and depressed all morning. I wanted to be there for her more than anything. \n\nAround 10 my parents came in with a garment bag. \"Ok, what's with the bag?\" I asked. \"You have a party to go to later?\"\n\n\"No,\" my mom said. \"You have a graduation to go to. We're going to Grace's graduation.\"\n\n\"Come on. How are we going to do that?\"",
        "\"I took one of your suits to a tailor, and I told him where to do some cutting, and that's what he did. Your right leg is cut above the knee and hemmed, and your left arm on the jacket and shirt are also cut down. Your father will help you get dressed and we have permission to take you from your doctor. We even hired a van so you can sit comfortably, not stretched across our back seat. Now hurry. up, times wasting.\"\n\nI was crying with love for my parents. \"I don't know what to say, except you're the best parents ever. I love you both. Does Grace know I'm coming?\"\n\n\"No she does not. We wanted it to be a surprise for her. Edina does; she got it cleared with the principal there. We'll be sitting up close to the side so you can see her, and she can see you when she walks across the stage.\" \n\nI was so overwhelmed I couldn't say anything. Of all the wonderful things my parents had done for me over the years, this might have been the best of all. It was a huge boost for me, and I couldn't wait to see Grace's face.\n\nIt took a while to get me changed, and it wasn't without some serious pain. I didn't care; I would have endured anything for that day. When I was dressed I was wheeled to the van they hired with a driver. My parents took their car and I was with the attendant. Just being on the road, out of the rehab facility, was making me feel so much better, if just for a few hours. \n\nWe got to the auditorium a little early, and we came in through a side entrance, so Grace didn't see. When it started, the graduates marched in. I couldn't see her from where I was, but I'd see her soon enough. After a few speeches, it was Grace's turn. She came up on stage in her white cap and gown, and I just wanted to cry. She was so beautiful, the most beautiful girl in the world. She gave a great speech about beginning a new life in a rapidly changing world. At the end she thanked her teachers and friends, her mother and her brothers, and she said a small bit about her boyfriend, who couldn't be there, but whom she loved. Then her principal whispered in her ear and she looked over at me and her eyes went wide. She covered her mouth with both hands and she ran off the stage and down to me, and we shared an amazing kiss. Her classmates cheered loudly and we just held onto each other way too long. She finally had to return to her seat on stage, but not before whispering \"I love you Henry. Thank you for this.\"\n\n\"Thank my parents and your mom. It was all them.\" \n\nShe went back to her seat, but kept glowing at me the rest of the ceremony. She got her diploma with her class and I cheered her as loud as I could. When the ceremony was over, she shook hands with her teachers and almost ran back down. She hugged her mother, then my parents. \"I can't believe you all did this for me and Henry! This is the best gift I could have gotten!\" We went outside and posed for pictures. I was so happy for Grace. My star.\n\nWe went for an early dinner at a nice Italian restaurant and gifts were given. My parents, who were already doing so much for Grace, gave her a Mont Blanc pen and pencil set. Her brothers gave her an electric typewriter, essential for any college student. Edina gave her a lovely pendant, a family heirloom. Grace was crying over all of it. The only one who didn't have a gift for her was me, who loved her more than anything. I felt like a shit. I could have asked my mom to get something with my money. I had been thinking about a special gift for her before I got hurt. It just kind of slipped away from me.\n\nThen I had to go back to rehab. It was the hardest part of the day. I should have been able to join her at a party, or go out by ourselves. Something special for her. Grace saw I was feeling down all of a sudden. She asked if she could be alone with me for ten minutes and she wheeled me to a quiet area. \n\n\"I know why you're feeling bad, Henry. Don't. You gave me the best gift I could have asked for. I got you today. You couldn't buy me anything that would be better than just having you with me. My beautiful man.\" She stroked my cheek as she smiled at me. \n\n\"I love you so much, Grace. I should have gotten you something. And you'll go to a party tonight, and I can't be with you. And Gracie, I don't know if I can do this again for my own graduation. I'm so wiped out right now. But if it had to be one or the other, I'm glad it was yours. Hearing your speech, seeing you get all those honors, and hearing what you said about me... you really touched my heart.\"\n\n\"Baby, you made my day. You make all my days. I wish we could see each other more often, but at least we can talk every day. And let me tell you something: you ARE going to your graduation. And I'm going to be there cheering for you louder than anyone. You're going, if I have to come to the rehab and dress you myself. After I undress you\" she said with a soft kiss and a loving smile. \"No argument, Henry. It's all arranged.\"\n\nI looked at Grace with adoration. No way could I argue with her. In three days I'd be doing this all over again. For Grace and for my family. They all deserved it, with all they'd done for me. We hugged and shared a couple of discreet kisses before we rejoined the families. I said goodbye to everyone and got hugs and handshakes and kisses. Grace told me she'd call me the next day, and I felt a pang of jealousy. I really had no reason to feel that way; as much as we loved each other, I knew she'd never do anything with anyone, and I wanted her to enjoy her special night. \n\nI told my parents they didn't need to come back with me; it was a two hour ride each way and it would have been exhausting for them. So I was strapped into the van for the ride back towards Myrtle Beach. \n\nBy the time I got back, I could barely keep my eyes open. Some aides got me changed and hung up my suit, since I'd be wearing it again in three days. I was given a mild pain killer and I fell asleep within minutes of getting in bed.\n\nThe morning of my graduation came and my parents were there early, by 10, for a 3 PM ceremony. Again dad helped me dress with a new shirt. I said to him \"Dad, I shouldn't be going. I feel like a fraud.\"\n\n\"What are you talking about, Henry? Why would you say that?\"\n\n\"I haven't completed all the work for a diploma. Everyone else has taken finals and turned in papers. Not me.\"\n\nHe knelt down so he could look me in the face. \"Listen to me, son. You've earned this. It's not like you're being pitied. You're going to finish your work over the summer. There were extenuating circumstances, after all. You've been doing your reading, you took a few tests and did very well. Once you're home, you're going to be busier than ever before, between physical therapy and making up your school work. You promised Mr. Harrison you'd be done by the end of the summer, and your mother and I are going to make sure you keep that promise. Henry, we are so incredibly proud of you. You and your sister are amazing young adults. And Grace...you're so lucky to be with her. That lady loves you so much. She has very good taste.\" That made me smile, and he smiled with me. \"You're going to go to your graduation and you'll have every right to be there with everyone else. You earned it.\"\n\nI hugged him tight. My dad was simply the best. \"Thanks, dad. I needed that.\" We heard my mom call into the room \"What ARE you two doing in there? We have to get going!\"\n\n\"Almost ready, dear\" dad called back, and we finished dressing me, with dad doing my tie. Then back in the van with the same driver and back again to Charleston. We met up with Grace at a small luncheonette for a light bite. She looked outstanding, in a white sleeveless dress and simple low heeled sandals. A little makeup and that was all it took to make my heart cry out for her. She gave me a huge hug and a light kiss and whispered \"I'm so happy for you, baby. So proud. And so in love with you.\" \n\nI held her and told her I loved her too. After lunch we headed over to the school, getting there at 15 minutes before the ceremony. Strangely, the grounds outside the football field, where graduation was held, was deserted. We could hear the crowd inside, but no one was outside. Grace and mom helped me with my gown and put on my cap, and my parents, Evelyn and Grace were all beaming. \"Let's get inside, it seems we're running late\" dad said with a big, dopey grin. Something was up.\n\nGrace wheeled me inside and there were two huge banners across the field. The first said 'Congratulations to the Class of 1979!\" The second, which knocked me for a loop, said \"Welcome Back Henry! We Missed you!\" My classmates broke into applause and I just broke down in tears in front of everyone, students, parents, teachers. It was overwhelming, and I had trouble getting control of my emotions. Darrell and Chris came over and hugged me, and then Mr. Harrison and my teachers did the same. I was wheeled to a space in front of the graduates and my family and Grace took their places in the stands. \n\nI didn't get much from the speeches; I felt like I was on another planet somewhere. When I was announced as a graduate, I was wheeled up a ramp by Darrell and there was another ovation. I thought I was going to cry all over again. \n\nAfter the ceremony was over, we took some pictures and it seemed everyone wanted to shake my hand or give me a hug and kiss. It was after 5 and it just occurred to me Edina hadn't been there. \"Grace, where's your mom? I expected her to be here.\"\n\nGrace looked at my dad and he said \"Edina's at the house, supervising. We hosting a party for your classmates and parents, those that want to come. You should see the backyard. Tents with chairs and tables everywhere. Edina wanted to be here, but she insisted on making sure everything is going to be just right. And since it's going to go late, you're spending the night at home, Henry. We set up a bed in the parlor so you won't have to climb the stairs. Your friends volunteered to help you get in and out of the house.\"\n\n\"Mom, dad...I just don't know what to say. Everyone is making such a big deal over me.\"\n\nMy mother said \"That's because people love you, my sweet baby boy.\" She started crying her eyes out.\n\n\"Mom...\"\n\n\"Oh hush. I can't help it. You don't realize how many people care about you. You've always been a good son, a good brother and a good friend. And you're also a good boyfriend.\"\n\nGrace smiled, a small tear in her eye. \"That you are. The best.\"\n\n\"But everyone is making such a fuss.\"\n\n\"Henry, everyone wanted to see you\" dad said. \"Besides, having this party means I we can be sure there's no drinking and driving. One student hurt by a drunk is enough for this class.\"\n\nThe party was amazing. Great food BBQ, lots of shrimp and Brunswick Stew, all sorts of great things. Edina did an amazing job of coordinating everything. I hugged her like she was my mother. She was in many ways. \n\nThe night was a blur of one person after another wishing me to get well soon. So many girls hugged me I thought Grace would have kittens, but the only time she was annoyed was when my ex-girlfriend, Elizabeth, gave me a bigger than expected kiss. It was chaste, really, and she moved on like others. \n\nFinally, Grace and I had some time to ourselves. We were sitting close together, watching others dance, sharing kisses from time to time. I told her \"You should go dance with one of my friends. Hell, even one of my enemies\" I joked. \"You shouldn't have to miss out because of me.\"\n\n\"I don't want to dance with anyone but you, baby. Besides, the only thing I'm missing\" she said in a whisper, \"is your nice hard cock.\"\n\n\"Oh Gracie, don't torture me like that. We're not exactly alone here.\"\n\n\"No, not over here. But your dear friend Darrell and I figured something out. We can't take too long, but we should have enough time. And I have a condom, so you'd better put out, because I am so fucking horny\" she said seductively. \n\n\"You don't have to convince me, honey. Lead on!\"\n\nShe got Darrell's attention and he and Chris came over with these shit eating grins. \"Hey, buddy\" Chris said. \"Ready for your graduation gift? You two make yourselves scarce. We're the lookouts. Just don't take too long. People might come looking. Don't worry, I'll split the ticket sales with you.\"\n\n\"Very funny, dickhead\" I said. My friends. Absolutely great guys. Grace wheeled me along the far side of my house, where there was a hedge across from the exterior wall and another at the front. It was a secluded as we could get. There was a long, wide bench up against the hedge. \n\n\"You little devil\" I said. This is perfect. I love you so much, and I've missed you.\"\n\n\"I've missed you too, baby. My love.\" She bent down and kissed me sweet and soft. \"Let's get you on the bench.\" We locked the wheels and Grace helped me shift over to the bench. She undid my pants and pulled them down enough to expose my already raging cock and balls. We didn't need any foreplay; we were both so hot for each other my real task would be holding back to give Grace enough time to get off with me. \n\nGrace rolled a condom down my shaft and hiked her dress around her hips. She wore a simple pair of white panties that she pulled to the side. As she straddled me, she bent over and kissed me hard. \"Make it last for me, baby. We've got this one chance.\"\n\nGrace hovered over the head of my cock before planting her pussy down all the way in one quick stroke. We both let out long moans, the sign of suppressed desire. She held my head in her hands and I held her hips in mine. \"Gracie, this feels soooo good. It's been way too long.\"\n\n\"For me too. My sexy man. So sweet and so damn hot!\"\n\n\"My beautiful love. You're amazing.\"\n\nGrace moved slowly and deliberately, rising and falling along my cock. I fell out of her pussy a couple of times, but Grace put me back to her pussy and kept going. We kept kissing and touching and staring into each others eyes. Grace changed her motions from up and down to grinding front and back, then up and down again. \n\n\"We need to hurry up, baby. I'm going to start going faster.\"\n\n\"Do it, honey. I can't wait much longer anyway. I love you.\"\n\n\"I love you too\" she grunted. Her ass moved quicker, and her pussy was so slick as she moved with urgency. We locked lips, kissing deep and passionately. \"Cum with me, baby. Pretend you're filling my pussy. You make me so warm inside.\" She went a few more strokes and bit her lip to keep from crying out as she came, and I followed, filling the condom to the brim. We both froze, connected by the most wonderful afterglow, as we kissed soft and tender. Grace rubbed her nose on mine and she smiled warmly. \"That was perfect, Henry. You're perfect.\"\n\n\"So are you, honey. Amazing in every way. And you're so beautiful.\"\n\nWe held each other a few more minutes before we heard Darrell say \"Hey, guys, time to wind it up!\"\n\n\"Just a minute, Darrell\" Grace said. One more kiss before Grace got off me, pulled off the condom and put it in a baggie (she was really well prepared) and helped me get my pants back on. After helping me back to my chair, we made our way back to the party. I thanked my friends and they waved it off like it was no big deal. But it was. Grace and I needed that, just to feel the love and intimacy we'd been missing so badly.\n\nI had to use the bathroom, so Darrell, Chris and a guy named Roy helped me up the back steps and to the bathroom. I had to sit and use a urinal; I couldn't balance yet so I could stand like a normal guy. While I peed, I thought about how my father had been right weeks ago, that I was incredibly lucky. I had the best friends, a good life. The best of families. And an incredible, loving girlfriend. Life could be a lot worse, I reflected. \n\nThe party gradually broke up. Darrell, my best friend, offered to take Edina and Grace home. Grace held me tight, and she thanked me for a great day and night.\n\n\"No, honey, it's all thanks to you. And my family, and your mom, and my friends...\" \n\nShe laughed and stroked my cheek. \"I love you Henry. So very much. I'll talk to you tomorrow, baby.\"\n\nI kissed her hand. I love you too, Gracie. I miss you already.\"\n\n\"You're so sweet. Tomorrow.\"\n\nI felt a pang of hurt in my chest watching her walk away. I wished she had a car so she could come visit me on her own. I was due to come home in two weeks, which seemed like a long time. It did pass slowly, but I was coming home soon. \n\nSoon. That word sounded so good to me."
    ],
    "authorname": "Rabbitman55",
    "tags": [
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/falling-for-grace-pt-03"
}