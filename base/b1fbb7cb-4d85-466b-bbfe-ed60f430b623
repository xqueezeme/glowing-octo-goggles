{
    "title": "Buster's Story Ch. 09 - Finale",
    "pages": [
        "As the title suggests, this is the final chapter of Buster's Story. As with the last chapter, this was difficult to write. We know that Buster had to die as we first dealt with his death in More Than Just A Fairy Tale. My partner has cursed, cried and smiled as he's helped me proof the final pages. When he finished, he said, \"Damn it! You did it again.\" and wiped his eyes. I hope you've enjoyed this part of my Universe. Please vote, and comment. Feedback is the only pay or reward we get when we write. Perhaps if there is enough interest, I will post a story on Andrew.\n\nJaisen\n\nWolf ran. In his dreams, his mate was always just ahead of him, the tip of her tail just disappearing over the next rock, or behind the nearest bush. He was never quick enough. He'd woke to find himself in a strange forest. It was cold and there was frost on the ground. He drank thirstily from a small stream and then turned back the way he'd come. His pads were sore from all the running he'd done.\n\nThat night, he brought down a deer. He had started to save the liver for his mate and only after pulling it from the warm body did he remember that she was gone. He dropped the liver and sat back on his haunches. He howled his pain to the moon. When he was hoarse, he finally ate his fill. He loped off from the carcass and left it to the crows and small scavengers.\n\nHe fell into a pattern. Run, eat, sleep. Soon he was back in familiar territory. He'd left the frost ground behind. For the first time in many nights, he saw another wolf. Yips and growls were exchanged and the two wolves continued on the trail together. He found himself in the meadow where his mate was buried. He slept above her on the rock.\n\nWhen dawn began to break, he loped to the wooden den and leapt through the window. Curling up on the squeaky metal bed, he turned around three times and slept.\n\n*\n\nBy the time Brian returned from his run, all the company was gone. He woke up naked on the bed. His nose was buried in Natalie's pillow. Rolling over, he looked around at the room which had held so much joy and pain. No one had touched anything in the room. He stretched, found some clothes and wrapping up in his bathrobe, walked down to the bathroom. While he could hear people moving around, he saw no one. He bathed, dressed and looked at himself in the mirror after he dressed. Finding his scissors, he trimmed up the beard that reached nearly to his chest.\n\n\"Been gone long time,\" he thought. Cleaning up the hair, he headed for the kitchen.\n\n\"Hello Papa,\" said Jenny. She'd heard him come in after Henri reported that he'd found Brian in the forest.\n\n\"Hello Jenny. How long I been gone?\"\n\n\"Two nearly three weeks. Family says to tell you they love you. Let them know if you want come live with them,\" she said placing coffee, eggs, bacon and toast in front of him.\n\n\"Aye. I have a house. You help me go through your Maman's stuff today? I wan' pack things up to save them.\"\n\n\"Aye. Tilly can run the clinic today.\"\n\nBrian nodded.\n\nIt didn't take long for Brian and Jenny to sort through Natalie's things. Some stuff went to the rag box while others went to the basket for clothes going to the clinic. They went for people who needed them. Brian packed Natalie's keepsakes in the same box as his uniforms, medals and photos. Then he came across a book in the bottom of her desk.\n\n\"What this?\" Brian asked Jenny.\n\n\"The birth and death book. We keep track of everyone. Make sure no one marry too close. Like that Estelle and Quintus. They second cousins. Last thing Maman add is Libellue.\"\n\nBrian nodded. \"You keep this. You family head now.\"\n\n\"Papa,\" Jenny tried to give it back.\n\n\"Non. Women, they run this family so long I don' know. You keep that book. Someday, mebbe someone need it.\"\n\nJenny gave up and took the book. She hugged her papa. \"What about that box?\"\n\nBrian picked up the jewelry box. He looked through it. Picking out a couple of items, he handed it to Jenny. \"Give to your sisters or you keep.\"\n\nJenny nodded and took the box. Everything else was cleaned and put away, because it belonged more to the house and the family than any one person. Brian took the box and put it back in the attic.\n\n*1965\n\nLibellue raced from the car to Grand-pere Buster's cabin. \"Grand-pere! Grand-pere! \"\n\n\"I am here, Libellue,\" said Brian. He'd been napping in the rocker in the kitchen and woke when he heard his name called. Looking around he found Marie and Libellue standing in the kitchen.\n\n\"Marie? Why you come visit?\" he asked.\n\n\"I... I need a little vacation.\"\n\nBrian looked at her and noticed that there was no Andre. \"That Andre, he go that Vietnam War?\"\n\n\"Aye. We talk long. He is doctor there,\" admitted Marie.\n\n\"What make him go this time?\" asked Brian as he put the kettle on for coffee.\n\n\"You know he start that clinic for shifters? With Maman's money?\" asked Marie.\n\n\"Aye. Lot of family down in that United States,\" said Brian. Lots of his family and other shifters like the Chinese tiger he met in Vancouver.\n\n\"Well, he work there two days a week. Not many, but enough. He train shifters to be nurses. Our cousin, Petite Luc's grandson, Ron? He a veterinarian. He work there too,\" explained Marie.\n\n\"An how this work that Andre go that Vietnam?\"\n\n\"One day, he get a call. Hospital. Have a soldier come that war back to Washington need surgery. Andre go. Come back ver' sad. Soldier is minor surgery, but they try put him in crazy house.\"\n\n\"The soldier, he a shifter?\"\n\n\"Aye. He freak out. Sound like the stories you told us of Bizzet. Andre, he recognize that he a shifter, calm him down, keep him from getting that electric shock stuff for crazies,\" said Marie.\n\n\"Andre feel he do better in the battlefield?\" asked Brian although he knew the answer.\n\n\"Aye. So, I come here, get away from it all. All those protests, soldiers. Everette, Seattle, all crazy places,\" said Marie. The fact that the Vietnam war was not popular had spilled out into the streets.\n\n\"Grand-pere Buster, I go run outside. Love you!\" said Libellue and disappeared out the door.\n\nBrian nodded and watched her head outside. \"She don' look nearly 14. More like 10. Is that because of Andre you think?\"\n\nMarie nodded. Her other concern was that Libellue would shift too soon. She didn't know how things would go and figured that Jenny could help her.\n\n\"Well, you can have the back rooms. I don' use them. I eat with Jenny and Henri. You want cook, fine,\" said Brian.\n\n\"Thank you Papa. I told Andre I come here. Mebbe go back that Everette in September.\"\n\nBrian nodded.\n\n*\n\nThe summer was full of Libellue and various cousins running through the house. Alexander and Jelka came with their son Andrew. He was about five and was playing with Mark, Henry's grandson as well as other cousins. Jelka sat on the porch while Brian and Alexander talked.\n\n\"That little one, ver' quiet. Looks like he sees things,\" said Brian.\n\n\"Agreed. He's like his mama, and she knows when people are sick or coming to visit before anyone calls. I'm teaching him about being a shaman,\" said Alexander.\n\n\"So young?\" asked Brian.\n\n\"Yes. I don't think I will be around as long as you or Kent. Jelka, she has dreams of running in the forest alone. So, I make sure one son is family shaman.\"\n\nBrian nodded. He'd watched so many people leave and others training their children to take over their jobs. Jenny had Caroline working at the clinic along with Mary, the adopted daughter of Alice. There were days he felt rather useless. Other days all he did was run in the forest. Having Marie and Libellue there had at least kept him coming home on a regular basis.\n\n\"That Libellue, she is going to be a heartbreaker,\" said Alexander.\n\n\"She is something special,\" said Jelka.\n\n\"Aye. It like I hear her voice in my head when I run too long. I come back and she smile at me,\" said Brian.\n\nJelka nodded.\n\n*\n\n\"Papa! I have letter from Andre!\" Marie shouted as she ran back from the post office. She sat down next to Brian and opened the letter.\n\n\"My dear Marie and Libellue,\n\nI hope this letter makes it home. This is letter #2. I'm saying the same thing in all the letters with extra bits. I don't want things lost like Korea.\n\n\"I think he means he don' want no one lost,\" interjected Brian.\n\n\"Aye,\" said Marie who kept on reading.\n\n\"This war is very rough on people. Lots of jungle and no place to feel safe. I am at a hospital base, and not in the midst of the fighting. I am very glad of this. I have lots of work and sometimes I wish for my quiet practice in Everette.\n\nI have run into many cousins. You'd think in a war overseas that I wouldn't find much family, but I have. I find it interesting that so many of our family have chose to be in what they call Special Operations. Some work with scouts. Others with the dog handling units which are so very important here.\n\nI miss you and Libellue and I am looking forward to coming home soon. If you see Alexander or Jelka, let them know that I spent the evening with their son Ross. He is a good boy. He reminds me of Jacques and Henri.\n\nIt is very quiet here and maybe that means it will be over soon.\n\nLove,\n\nAndre.\"\n\n\"I wonder how many shifters there are that Vietnam. It sound worse than my wars,\" said Brian. He thought of all the terror he and family went through. Now the family was so spread out that it was difficult to tell who had gone.\n\n\"I think there be plenty. I hope the shifter clinic is okay. Mebbe Libellue and I go back that Everette and see if we can help,\" said Marie.\n\n\"That be a good thing. You write that Andre, tell him you go home,\" said Brian.\n\nMarie kissed her father and then headed to her room to pack.\n\n*\n\n1969\n\n\"Mama! We need go that Vancouver,\" said Libellue.\n\n\"Why?\" asked Marie.\n\n\"Can't you hear that cousin ours howling?\" asked Libellue.\n\n\"Non. We don' have no cousins in Vancouver.\"\n\n\"We do. He ver' scared. I can hear him howl and there is a ver' bad man yelling at him,\" said Libellue.\n\nMarie looked at her daughter and then called Jenny. For the last three or four years, Libellue had been hearing things, as she put it. It was like she was connected to all the family. She'd known when her papa had been hurt in Vietnam, and when Ross Davis had died in the Tet Offensive.\n\n\"Jenny? This is Marie. Yes, we are fine. I have question. We have any family that Vancouver?\" she asked. \"Non, Libellue say she hear a cousin howling. I don' know any family there. Okay. You hear, you call me aye?\"\n\nLibellue stood next to her mother, although she had heard the whole conversation. \"I still hear him. He scared.\"\n\n\"Aye. We wait that Jenny go through the book. She don' know anyone,\" said Marie.\n\nAn hour later, the phone rang. Marie grabbed it just before Libellue. \"Aye, George had a son off that bitch? Non. Papa, he can go. Non, why you no know where Papa is? Oh. Aye. I call,\" Marie said as she hung up.\n\n\"You right. George, your cousin, he have a son. Must be year younger than you. He have fight with his non-shifter mama. She and her husband, they lock him in a shed. Jenny can't go. Want me to go. I say no, and I need call that Quintus,\" said Marie.\n\nThirty minutes later, no one was willing to help George's son, and no one knew where Brian was. Marie was frustrated and Libellue was getting frantic.\n\n\"Mama, I go find Grand-pere Buster. He go that cousin,\" she said.\n\n\"Libellue, you don' know where Grand-pere is.\"\n\n\"Aye. He in that Idaho. Hunting with Ron. Gone two weeks. Call Papa's clinic. They find them,\" she said hands on hips.\n\nMarie tried the clinic and found Ron and Brian. At first Brian didn't want to help the boy, but Libellue took the phone from her mother. \"Grand-pere, you must go help him. That man, he hit him with sticks. Lock him in a shed,\" she said in a soft pleading tone. Five minutes later, she hung up the phone and smiled.\n\n*\n\nBrian was not happy. Vancouver had gotten more confusing in the years since he'd driven there with Natalie. Ron went with him, but when they reached the house in the prim suburb, he stayed in the car. He walked up to the door and rang the bell. He recognized the woman who opened the door as the non-shifter who left George all those years ago.\n\n\"Where my great-grandson?\" he asked briskly.\n\n\"Well, if that thing is your grandson, he's in the shed in the back,\" said Cindy. She was acting snotty even though she reeked of fear. Her husband stood behind her watching the whole thing while holding a walking cane like a sword.\n\nBrian took a deep breath and could smell something that reminded him of Henry and George. He headed towards the back door. \"What's his name?\"\n\n\"Lewis,\" she said like it hurt to say his name.\n\n\"You given him any water?\" Brian asked.\n\n\"No! I wasn't going to open that door and be attacked!\" Cindy said.\n\n\"He no attack his mama. Give me some water. A towel or a blanket.\"\n\nCindy's husband handed him a bowl with water while Cindy ran for a towel. Then the three of them walked out to the shed. Brian was angry when he saw the lock on the door and ripped it of. He threw it on the ground and then opened the door. Inside was a wolf. A miserable wolf, laying on the ground.\n\n\"Lewis, You hear me? Come here,\" Brian said. \"Lewis, come here.\"\n\nThe wolf pup looked at the old two legs and then over at the two who had yelled at him. The old two legs called to him again and held out a bowl of water. He was so thirsty, that he forgot his fear and belly crawled to the water. The old two legs had put the water bowl on the ground and stood there watching him drink. When the water bowl was empty, the old two legs started talking to him, but when the wolf pup looked up, he watched as the eyes shifted shape and then back. The wolf pup yelped.\n\n\"Lewis. You need shift back. I know you hear me. Think that two legged boy you are deep down inside. Don' think those four legged thoughts. Come. Time you do this,\" said Brian. He waited. A minute later, he encouraged the wolf in front of him again. He crouched down to eye level and let his eyes shift again. \"Shrift!\" he said this time with more than a hint of sub-vocals.\n\nThe wolf pup heard the command in the old two legs voice and shivered.\n\n\"Shrift!\" Brian growled.\n\nThe wolf in front of him shivered and then there was a naked young man on the ground. Brian tossed the towel on him. \"Get up, get dressed. We need talk. I am Grand-pere Buster.\" Brian then turned so that the boy could get up with some dignity and turned towards the house where the other two had retreated. Brian swallowed hard because the boy looked so like Henry and George, who were both gone.\n\n\"I take Lewis. We stay in the Valley for the summer. Come school he come back. You be good this boy or I will come to see why,\" Brian growled at Cindy as they left. He hadn't been there twenty minutes and already he was furious. The boy came downstairs carrying a bag. When he tried to kiss his parents goodbye, neither one would let him touch him. Brian escorted him to the car.\n\n\"Lewis, this your cousin, Ron. He a veterinarian in that Washington. We go meet your cousins, then drive to Canada, you learn how to be family,\" said Brian.\n\n\"Yes sir,\" said Lewis between sniffles. He was only sixteen.\n\n*\n\nThe car pulled up in front of a small Victorian on Grand Street. Before the car stopped fully, Libellue bounded out of the door.\n\n\"Grand-pere Buster! You get our cousin?\" she asked.\n\n\"Aye. That Lewis. Don' know how good he is, Son that George,\" groused Brian.\n\n\"Oh, Grand-pere, don' be so mean. He just scared,\" said Libellue. She moved past Brian to shake Lewis' hand. \"I'm Libellue.\"\n\n\"Lewis. Lewis Ca... Davy,\" he corrected. \"Are you... a.. a... wolf too?\"\n\n\"Aye, I shift sometimes. Jus enough to scare my mama. She your auntie. Sister your grand-pere Henry,\" said Libellue. \"You come the house. You hungry?\"\n\n\"Starved. My mom is a vegetarian,\" said Lewis.\n\n\"What? She don' eat meat?\" asked Marie who'd come up to meet her nephew.\n\n\"No ma'am. And she wouldn't let us eat it either,\" said Lewis.\n\nMarie took a good look at Lewis. She could see he was malnourished. \"Come, I get you some hamburger.\" She turned to Libellue. \"You go that store. Buy some steaks for dinner. You know where my pocket book is.\"\n\nLibellue nodded and ran for the house. She was back out in a flash and heading into town.\n\nLewis watched his cousin sort of float down the street as she loped away. Then he was escorted into the house and the kitchen where ten minutes later he had a plate with two rare burgers set before him.\n\nTwo weeks later, Lewis met his half brother Mark and more family than he ever knew existed. Brian had brought him home and while the cabin was dusty, it was still livable. Jenny and Henri had kept Celia's cabin in good repair and while they offered him and Lewis a place to stay, Brian didn't want anything to do with it. Didn't want much to do with Lewis, but until the boy proved to be something other than a burden, no one else would help the boy.\n\nKent offered to show Lewis the sawmill and that occupied the days. At night, they shifted and ran in the woods with family or just the two of them. Hunting was a problem at first. While the wolf knew what to do, the boy was squeamish.\n\n\"You gon' hunt that deer tonight?\" Brian asked.\n\n\"Yes, Grandpa Buster,\" Lewis answered. He really did try, but he just didn't get it like his cousin Mark or some of the others did. They had always hunted in both forms. He never had, and if his grandpa's attitude was anything to go by, he would hunt or starve.\n\nThe wolves ran through the forest. Ahead of them was a herd of deer. The older wolf slowed and growled at the younger one when he didn't slow to a crouch soon enough. The deer hadn't scented the wolves. The older wolf nudged the younger one and then crept down towards the herd. One deer panicked and ran almost straight at the younger wolf. As it passed, he lunged for the throat as the older wolf had shown him. His teeth dug deep into the hide of the deer and sweet blood poured across his tongue. Rather than cough and choke as he had the night before, he held on and shook his head as hard as he could. Deep down, he heard a crack as the deer's neck broke. It fell across the younger wolf, almost pinning him.\n\nThe older wolf laughed a 'ehhh, eeehh,' sound as he watched the younger one kill the deer and then have it fall on top. He walked over slowly as the young wolf tried to disentangle itself from the deer. He bumped shoulders with the young wolf and licked at his muzzle. Then the two wolves began to tear into the deer.\n\nThe younger wolf dug for the liver. He pulled it out and handed it to the older wolf. The older wolf took it and then bumped the carcass towards the younger wolf. Both of them began to eat. When they were both full, they took turns dragging the remains towards the wooden dens. The older wolf walked into the wooden den to sleep, leaving the younger wolf with the deer.\n\nLewis shifted back, hauled the deer up on the ancient skinning rack, and finished the basic butchering. Once he had that done, he cleaned up and went to sleep. He was so tired he never heard Buster say, \"Good job.\"\n\n*\n\nTwo months later, Lewis stood on the sidewalk as Buster and his cousin Ron drove away. It would be almost another eight months before he'd see them again. Inside, his mother and stepfather waited. He'd tried to stay with the family in the Valley, but Cindy began to call. It was confusing. First she wanted nothing to do with him, and now she was demanding he return. At least he had the addresses to some of his cousins when life got too rough for him in Vancouver.\n\nBrian watched in the rear view mirror as they drove away. He wasn't sure what to think of Lewis. He looked like Henry and in an odd way, very much like the face he saw in the mirror each morning. The boy was so slow in some things and so quick at others. Kent said that he'd learned well at the sawmill, and would have apprenticed him if Cindy hadn't raised such a stink. She threatened to call the Mounties on them if they didn't return the boy she had literally thrown away three months earlier. He didn't understand what George saw in that woman all those years ago. If the boy lived, he'd pick him up next year.",
        "*\n\n1972\n\nBrian had dropped Lewis off at his mother's house. It was late August, and Lewis was heading to University. He was planning on visiting Marie and Andre before heading back to the Valley. His first stop though was the Spinning Tiger Noodle House.\n\n\"Ah, Mistah H\u01ceng,\" said Hu Chang. \"You table is ready.\"\n\n\"Always good to see you Hu,\" said Brian as he sat down at the same table he had nearly twenty years before when he and Natalie had gotten lost. Natalie was on his mind a lot lately.\n\n\"And you. Same as always?\" Hu asked.\n\n\"Aye\"\n\nHu bowed, and headed to the kitchen where he shouted an order to his cook. He poured hot water into a teapot and brought it and two delicate cups back to the table and sat with Brian. After a minute or two, he poured tea.\n\n\"You visit that Lewis?\" asked Hu.\n\n\"Aye. Last time I think. He go to University this year. His mother crazy woman. Drive us all crazy. Don' want no crazy shifter in family, but calls all the time we have Lewis. Don' let him rest, learn to be wolf. Damn stupid.\"\n\n\"I undehstand. My daughtah, she marry man from Shanghai. He say it no mattah she Hu clan. Just like Lewis mom no respect H\u01ceng clan. My daughtah, she shift, he run. Scream. Bring back bride, bride price. Same thing,\" said Hu, shaking his head.\n\n\"I worry 'bout Lewis. He so alone. Not good for wolf to live that way,\" said Brian.\n\n\"Lewis always welcome this house. H\u01ceng clan and Hu clan no fights here,\" said Hu.\n\nBrian nodded. \"I tell him that.\"\n\nA few minutes later, the cook brought his dinner. Orange beef, a double order. Brian smiled and began to eat the fragrant beef with fresh steamed rice. The cook brought Hu his battered and fried fish. Both men ate in agreeable silence.\n\n\"You greet Andhe and family for me,\" Hu said as Brian paid for his dinner and prepared to leave.\n\n\"I will. That Libellue go University in England this year,\" said Brian.\n\n\"Ah, Smart gihl. She do just fine,\" nodded Hu.\n\n\"Aye.\" Brian bowed and left the noodle house. He settled into the car and pulled into traffic. In just over an hour, he was in Everette. As he pulled up in front of Andre's house, he realized that it was dark. Knocking on the door, he realized that no one was home, nor had been for a few days. On the door was a note addressed to him.\n\n\"Dear Papa,\n\nWe were surprised that you didn't come by to see Libellue off to England. We waited as long as we could, and then realized that Lewis had not called either. We figured that you must still be out camping. We will be home in a month.\n\nLove,\n\nAndre, Marie and Libellue\n\n\"Damn! I forgot the date.\" Brian put the letter in his pocket and got back in his car. He headed for Spokane. It was late by the time he reached the hotel. They'd held the room for him. Same hotel, same room since 1954. He fell asleep almost before his head hit the pillow.\n\nThe next morning, Brian got up, and went to eat at the little cafe he always ate at only to find it closed. He had to go to a different place, and it was just enough of an upset to his routine that he felt at odds for the first time in ages. He ate his breakfast and then headed towards the Canadian border. As he drove through Idaho and the forests, he kept thinking he saw something at the edge of the road. He remembered the wolves that he and Natalie had seen the first time they'd traveled the highway. At one point, he swore that Natalie was sitting next to him. When he went to look, he almost ran the car off the road.\n\n\"Too damn old for this!\" he said to himself. He pulled over at a rest stop and contemplated shifting and running in the woods. It was what he normally did when he was upset or unsettled. However, there was too much traffic. He stretched and got back in the car. Brian was frustrated when an hour later he realized he'd missed the turn to go see Quintus and family. Instead of turning around, he simply headed home.\n\nAt the Canadian border, he had to get out of the car and let the border guards search his trunk. He wasn't happy. All new rules, and he didn't like the change. There had been too many changes this trip.\n\n\"Don't worry sir. Only a minute. New rules from Washington D.C. Have to check all cars,\" said the guard with a smile. Brian nodded and looked across the border. Swaths of trees had been cleared. Change was everywhere.\n\n\"All done sir. Thank you for your co-operation,\" the man said and raised the gate.\n\nBrian got in his car, waved and headed home.\n\n*\n\nBrian arrived home to find that most of the family had gone to Calgary for the weekend. He sat in the cabin and ate a sandwich and drank tea in the kitchen. When he finished, he put his dishes in the sink and went to bed. Even at home, things weren't the same. Caroline must have washed the sheets, for the bed didn't smell of him. He tossed and turned as he tried to go to sleep. He was so tired, he couldn't even shift. Grabbing Natalie's pillow, he hugged it to his chest and tried to sleep.\n\nHe woke in the middle of the night. Sitting up, he thought he heard something in the kitchen. Walking quietly, he peered into the kitchen. Nothing. He sniffed the air. \"Mice. Damn mice.\" Brian shook his head and headed back to bed. He sat on the edge of his bed and realized for the first time in years that he was alone. Truly alone. He rolled over and picked up Natalie's pillow once more. It no longer smelled of her. It had been too long and all the scent had dissipated.\n\nBrian stared at the wall. The wall paper that he and Natalie had put up was faded and torn in some spots. He turned over and looked out the window. As he lay there holding Natalie's pillow, his mind drifted back to that morning so many years ago when he'd held Natalie as she watched her last sunrise. The tears began to gather at the corner of his eyes. The sobs racked his body as he cried for the first time since Natalie had died. All those years, the wolf had grieved, but the man hadn't. His tears soaked the pillow, and the dampness released the last traces of Natalie's scent. Tears still ran from his eyes as the dawn broke and poured sunlight through the window.\n\n*\n\nCaroline came over to the cabin to make sure everything was ready for her Grand-pere's return. She walked in to find the cabin a mess. She ran back out and headed for her Maman's house. \"Maman! Maman!\"\n\n\"Aye?\" said Jenny as she tried to open the clinic door. They'd gotten new supplies in Calgary and she wanted to put them away as quickly as possible.\n\n\"Grand-pere's cabin. It is a mess!\" Caroline said trying to catch her breath.\n\n\"Let's go look, see what's gone,\" said Jenny. She and her daughter headed for the cabin. There was no sign of her Papa's car. When they got to the cabin, she realized that things were scattered. \"Look through those rooms. I'll go check this way,\" she said heading for her Papa's room. When she entered the room, two things were evident. All of her Papa's stuff was gone as well as Natalie's pillow. She checked the closet to make sure and then she headed to the storage room. The boxes that held his uniforms and some of the older picture albums were gone.\n\n\"Caroline! Is there any kind of note? A letter?\" she called as she walked back to the kitchen.\n\n\"Non! Why?\" Caroline asked.\n\n\"Your Grand-pere, he did this. Crazy ol' man. He do this and leave. No tell anyone. What the hell?\" Jenny sat on a kitchen chair and cried.\n\nCaroline, not knowing what else to do, continued to pick up the cabin. After a bit, her Maman stood up, blew her nose and started to help her. When they were done, they closed the door and walked home.\n\n*\n\n\"No Jenny, no more money has been drawn from the account. Yes, we'll keep it open. Yes, we'll let you know if it is accessed again,\" said the bank teller. She shook her head as Jenny left.\n\n\"Was it Grand-pere? Caroline asked.\n\n\"Had to be. Always same amount. Always next check number. What happen he run out of checks? You think he come home then?\" Jenny asked.\n\n\"Mebbe. It been ten or twelve years?\" Caroline said.\n\n\"Aye. Your Grand-pere is somewhere that Alaska this time. Hope he don' get shot for bein' wolf,\" said Jenny. The whole family had tried to find her Papa. No one had seen him. The only proof that he was still alive were the occasional checks cashed against his account. The family kept the account open in hope of tracing Brian.\n\n*\n\nThe wolf ran. The machine in the air chased after him. He ran for the trees as a popping noise came closer and the snow around him exploded. A searing pain burned up his leg. Wolf kept moving through the trees. He found fallen trees and dug into the middle of the dense pile. There he lay as quiet as he could. He could here the air machine go over the trees. He whined as he licked his leg. The bleeding slowed and then he slept.\n\n\"Damn Buster! What the hell happened to you?\" asked Jerry as he looked at the wound in the man's leg.\n\n\"Some idiot, he shoot and hit me,\" said Buster. \"Spend two days up that trail feelin' like hell.\"\n\n\"I bet. Lucky for you, it just hit muscle. Let me get that cleaned out and bandaged for you.\"\n\n\"Good. Need get my cabin 'for the snow comes,\" said Buster as he looked out the window. The storm was rolling in and he knew that by sundown that the snow would fill the world.\n\n\"This is gonna hurt,\" said Jerry as he swabbed the wound. Luckily, the bullet had passed straight through. He heard Buster hiss with pain and did his best to be quick. Then he packed the wound and wrapped a bandage around the calf. \"Let me get you some anti-biotics.\"\n\n\"Fine. Just not those horse pills you give me last time,\" said Buster.\n\n\"Nah. These are little. Take 'em for a week. And don't forget to eat with 'em,\" said Jerry.\n\n\"Okay.\" Buster took the pills and the bag of groceries and headed for his cabin.\n\nJerry watched Buster Walters walk to his truck. \"Tough old bastard.\"\n\n*\n\nBuster took one of the pills, ate his stew and then sat down to watch the fire. He knew he'd have to move on soon. Life was getting too complicated. The sheriff had almost towed away his truck while he was stuck in the forest waiting for his leg to heal enough to walk. He'd have to look at a map in the morning and make a decision. Alaska was getting too crazy. Hunting parties weren't like they use to be. Instead of going for the big game, the hunters shot at anything that moved. Including him.\n\nIt had been nearly thirty-five years since he'd left the valley. That dawn had been the worst of his life. He realized he couldn't face his family or even the cabin he'd lived in all of his life. So, in a moment of panic, he'd run. He'd been running ever since and was about to do so again. Even after all this time, the grief he held in his heart for the loss of Natalie still hurt. He waited until the fire was coals and then crawled into bed. He wrapped his arms around his pillow and fell asleep.\n\n\"You sure you want to do this?\" Jerry asked a week later. \"You've been running hunting and fishing parties for a long time.\"\n\n\"Aye. Going to that Montana, see if I find my son,\" said Buster.\n\n\"You got any address? Phone number?\" Jerry asked. He liked old Buster, but the guy had to be close to ninety and he was worried.\n\n\"I got address. Plus, I been there before. I don' get lost,\" said Buster.\n\n\"Well, okay. Here's the money for the cabin,\" said Jerry. He had tried to give Buster a check, but the old man refused, and so he handed $10,500 over in cash. He had it in an envelope and made sure Buster tucked it into a lock box and gave him the key. \"You change your mind, come on back. I'll miss ya.\"\n\n\"Mebbe I come back that Spring,\" said Buster. \"Mebbe them hunters, skiers go away then. Much quieter.\"\n\n\"Yeah. All them Yuppies and their damn sno-mobiles,\" said Jerry.\n\n\"You gon' help me put all this stuff the truck?\" asked Buster.\n\n\"Yeah. Otherwise I'll get all teary eyed and snot nosed,\" laughed Jerry. He helped Buster put the last of his stuff in the back of the truck and covered it with a tarp. They lashed it down and then shook hands. Jerry watched Buster head on down the road knowing he'd never see the old man again.\n\n*\n\nBuster drove for a week. Every time he thought he found a small community he could live in, there would be something wrong. Too noisy. Too cold. Too busy. He just kept driving. When he got to Vancouver, he wondered if the Spinning Tiger Noodle House was still there. He tried to find it, but the roads had changed too much. He gave up and headed for a bank where he cashed a check. The teller was nice enough to let him know that there would only be $10 left in the account. He exchanged it for American dollars. Buster thanked her and got back in his truck. He headed to Washington state.\n\nHe drove through Everette, but the quaint Victorian was occupied by a family with three little kids. His nose told them that they weren't family before he even stopped the truck, so he kept on driving. When he reached the mountains, he turned south.\n\nLate one afternoon, he stopped in a small resort town for lunch. \"The Dog Bar?\" he thought as he looked at the name. He laughed and ordered some food. As he ate, a woman in jeans and a flannel shirt caught his eye. She reminded him of his daughter Jenny. After he finished his burger, he followed the woman's scent trail. It led him to the Spoon River Bed &amp; Breakfast. It was one of those big log cabin styled buildings. He made note of it and went back to his truck. Looking around town as he drove towards the highway, he made a decision. He was tired. More so than he'd ever been. If the woman would let him rent a room, he'd stay in this little town. It was fairly quiet and best of all, there were woods right next to the Bed &amp; Breakfast.\n\nBuster parked his truck in front of the Bed &amp; Breakfast, and headed inside. The place was very clean. The smells from the kitchen were making his mouth water even though he'd just eaten. He walked up to the front desk and rang the bell.\n\nThe small woman who'd passed the Dog Bar walked out of the back and up to the counter. \"Howdy! I'm Sam. Short for Samantha, but no one's called me that in ages,\" she said.\n\n\"Hello, I'm looking for a place to stay.\"\n\n\"Well, I have rooms. Upstairs or ground floor?\" Sam asked.\n\n\"Ground floor,\" said Buster. He squinted at the register and filled in things as best he could. \"How much that cost?\"\n\n\"How many days you planning to stay? I got different rates for different lengths of stays,\" said Sam.\n\n\"Mebbe a week.\"\n\n\"Alright. I'll give you the residence rate. That'll be $300 for seven days. Includes breakfast and for an extra $5, I'll throw in dinner as long as you aren't too picky. If'n you are, you can eat at the Dog Bar.\" She wondered if he'd flinch at the cost. The man looked older than dirt, and was in need of a shave.\n\n\"Well, that be good,\" Buster said. He pulled his wallet out and paid with 4 $100 bills. \"You keep change, I pret damn good eater.\"\n\n\"\"Alright,\" said Sam trying to figure where an old man like that would put an ounce of food. \"Follow me and I'll show you your room.\"\n\nBuster followed Sam down the hall to a room on the left. Just down the hall was a door. \"Where that go?\"\n\n\"Outside. Some of my customers like to go for walks. I don't lock the doors until midnight,\" she said as she opened the door to the room.\n\n\"Okay. I like the woods,\" said Buster. He looked around. It was a nice room and he noticed that the doors had lever handles. He smiled.\n\nSam left him to bring his stuff in while she went back to cooking. Come dinner time, she knocked on his door. There was no answer, so she headed back to the kitchen.\n\nThe wolf slipped out of the wooden den. His nose told him other shifters had been here. He ran up into the hills and checked out the land. There were plenty of deer and rabbits in the area. Other wolves too. When the moon came up, he sat and howled to let the others know he was here. A couple answered back, but none were pack. He headed back to the wooden den. Wolf hit the lever latch and entered the den. A moment later, he was back in his den. Curling up on the bed, he turned around three times and fell asleep.\n\n*\n\nSam went to clean rooms and started with the ground floor. The family with the baby had left that morning, much to her relief. When she finished that room, she headed for Buster's. She knocked and when she got no answer, she unlocked the door. The room was empty and very tidy, which bothered her for some reason. After a week, she'd expected the old man to have made some sort of presence. Then she noticed the note on the desk.\n\nSam,\n\nI am to damn old. I go the woods, and will not be back. You take care my stuff, give it to charity, or find someone who need the stuff, When they find me, there is money, the box, for my burial. The key, it is with my truck key. You sell my truck. Keep money. Keep money what left, I don' need it.\n\nDon' be upset. You good woman. Ver' good cook. Jus sorry I can' eat more.\n\nBuster Walters\n\nSam sat on the bed stunned. She'd never had a suicide before. Looking around the room, she just closed it up and hoped that he'd change his mind. She'd wait until Monday though before she reported him. Last thing she wanted was to upset him. He was a sweet old man, and had been polite to her. Plus, the sheriff wouldn't be back until Monday. She closed the door and went on with her cleaning.\n\nWolf went out into the mountains. He wasn't ready to go, but the two-legs was. Still mourning for their mate. He walked out to the deadfall he'd found and curled up to sleep. The night was long and cold.\n\n*\n\nSunday evening, Sam thought she heard a noise at the back door. There on the other side was a huge old mangy husky. The muzzle was shot with gray and he was wheezing. Sam went into the laundry room and grabbed an old wool blanket and a bowl of water. She didn't normally bother with stray dogs, but there was something about this one that just pulled her heart strings. She went outside and the husky was off to one side, laying on the concrete. Sam put down the water and the blanket. Then she went back inside. Ten minutes later, she thought she heard a chair being dragged on the patio. She went out to investigate and found Buster sitting in a chair with the wool blanket wrapped around him.\n\n\"Buster! You okay?\" she asked.\n\n\"Mebbe. I try, go die. It don' work. Old bastard no let me die.\" he said.\n\nSam looked carefully at Buster. Besides more scar tissue than she'd ever seen on a live person, she realized that his ears were a little pointed and his beard was fuller than she'd seen it. Then it struck her. \"Buster, are you... a shifter?\"\n\nBuster looked at her, didn't smell fear and nodded.\n\n\"Let's get you inside and warmed up. I just put dinner away, but I have stuff I can warm up,\" she said helping the old man inside. She left him at his room and then went back to the kitchen. She warmed up a bowl of stew and grabbed a cup of coffee and two peanut butter cookies. When she got back to Buster's room, she balanced the tray and knocked.\n\nBuster, dressed in a bathrobe and pajamas opened the door. \"You don' have to do this,\" he said.\n\n\"No, I do.\" She put the tray down on the table in the room and gestured for him to sit and eat. Buster sat down and slowly ate the food.\n\n\"Buster, you need to know you aren't the first shifter I've had here. I know you noticed the door handles and that chocolate isn't the only dessert on the menu.\"\n\n\"Aye. I saw,\" he said.\n\n\"I've been renting rooms to them for nigh on thirty years. First one scared the hell out of me. Next few, well, they helped me make this place shifter friendly. That damn bar across the street draws them like flies.\"\n\n\"Aye,\" he said eating one of the cookies.\n\n\"So, the wolf part of you wasn't ready to die? Is that right?\" she asked.\n\n\"Aye. I too damn old, but that wolf, he don' want to die. Don' know what to do. Don' have no family I can find. Have trouble shifting. Get stuck, like my ears. Mebbe it be okay, I live here? I got plenty money. Easy pay you to stay here. Mebbe some evening this damn wolf let me die?\" he said.",
        "Sam thought about it for the moment. She didn't want the old man's money, but knew that some morning she might open the door to find a wolf or a corpse and figured it was better it was her and not someone else. \"Buster, you can stay here. I rarely rent out all the rooms, and we'll come to some arrangement about how much you owe. Let me take these dishes and you get a shower. I'll see you in the morning,\" she said taking the empty tray.\n\nBuster nodded and crawled into bed. It was much softer than the ground.\n\n*\n\nBuster and Sam came to a set of arrangements. He was her 'guard dog' and she made him a fancy house out back for those nights he couldn't shift back. That was happening more and more. There was a big soft pad in there and blankets. He gave her the lock box and key as well as the title and key to his truck. Sam tried to protest, but gave up in the end. On occasion, he headed out to the woods, but always came back. The wolf wasn't ready to die even though the man was.\n\nWolf smelled others. They walked into the wooden den. He watched from the back yard. He was tired. Wolf walked back to his den and slept. That night, he watched the two wolves run out into the forest. He whined, but couldn't get his hips to co-operate. He went back to sleep.\n\nWolf woke up the next morning and smelled the woman and a male shifter. He poked his nose out of his den and realized that they were standing there looking at him. He finally walked out and over to the woman. He walked around the two two-legs and rubbed up against her, marking her as his. Then he sat down and leaned against her. The male two-legs got down to eye level.\n\n\"You really should tell her you know,\" he said and stood up.\n\nWolf just looked at the shifter and then sneezed. Something about that shifter smelled familiar.\n\n*\n\nWolf walked into the wooden den. He smelled something familiar, and followed the scent. He climbed up to the top floor of the wooden den and walked into a room where the scent was stronger. On the bed was the two two-legged shifters. He put his head on the end of the bed and took in the female shifter's scent. Pack!\n\n\"Ginny, hold very still,\" Patrick said quietly in her ear.\n\nGinny froze and then slowly opened her eyes. There at the end of the bed was a very large and shaggy wolf. His head was resting on the bed and he was watching them. Ginny could hear him wheeze as he breathed. His muzzle was gray and his eyes had that cloudy look to the edges of them.\n\n\"Buster?\" Ginny said softly.\n\nThe old wolf wagged his tail slowly. Pack! Pack! Wolf thought.\n\nGinny moved and brought her hand near to him, even though she knew he'd already scented her. He nuzzled her fingers and then slowly crawled onto a corner of the bed. Turning around a few times, he settled down and curled up nose to tail. He snored.\n\n*\n\nWolf woke up and smelled his treats. Lumbering off the bed, he walked over to the table and ate his treats. His two-legged made good treats. A two-leg walked into the room with the male shifter.\n\n\"How ya doin' Buster?\" Doc said to the old wolf.\n\nThe wolf ignored the two-leg. He gave his pack member a glance and then walked slowly out of the room.\n\nThe two wolves ran through the forest for a short while. Wolf wheezed and coughed. The other wolf slowed down and walked next to him. They sat under the starlight and watched the world go by. As the sun started to come up, they headed back to the wooden den. It took a long time as Wolf couldn't run. He wheezed.\n\nWhen they got to the big wooden den, he watched as the other wolf shifted and dressed. He walked into the room that smelled good. His pack member and his two-legs was there. Wolf walked over to her, rubbed against her and then walked back outside to his bed. He barely got curled up and comfortable when his two-legs came with food. It smelled good and he ate what he could. Then his two-legs took the empty plate after scratching him between the ears. He went to sleep.\n\nWolf woke from a nap on the grass outside his den to see the male shifter and his pack member standing next to him. The male crouched down and scratched Wolf under the chin.\n\n\"Take care old man.\"\n\nWolf slowly wagged his tail and made a growling sing-song noise deep in his throat. The pack member reached over and scratched him under the jowls. He watched them walk away and went back to sleep.\n\n*\n\nWolf hurt. It was hard to breathe. It was hard to walk. There was something he needed to do. He felt himself topple over and couldn't get up.\n\nBuster blinked. He was naked in the hall of the Bed and Breakfast. He didn't remember leaving his room. All he remembered was that he needed to tell Sam something.\n\n\"Buster?\" said Sam staring at him.\n\n\"Help me up,\" he said in a whisper. Each breath hurt and he felt like his heart was thumping in his ears. Sam helped him up and into her room. She put him down on her bed and covered him up.\n\n\"Buster, whatever made you shift back?\" she asked.\n\n\"Wanted to tell you goodbye and that I love you for all you did for me,\" he said.\n\n\"Oh Buster, you didn't have to do that,\" Sam said with tears beginning to run down her face.\n\n\"Seeing those two, I wanted to come back and talk. Now it's almost too late,\" he said. His voice was so soft, Sam could barely hear him.\n\n\"No, it isn't. It's never too late,\" said Sam.\n\n\"I...\" Buster started and then was wracked with a cough. It shuddered his whole body. \"I want you to send my stuff to those two young wolves,\" he finally got out between coughs.\n\n\"You mean Patrick and Ginny?\" Sam asked.\n\nBuster nodded. He coughed and wheezed.\n\n\"Let's get you comfortable,\" said Sam.\n\n\"Okay, never thought I'd end up in your bed,\" Buster said half joking.\n\n\"Oh you!\" said Sam. A smile broke thought the tears still streaming down her face. She turned because she heard a noise. There in the doorway stood one of her guests.\n\n\"Is everything okay?\" asked the man.\n\n\"Yes, just an old friend not feeling well,\" said Sam.\n\n\"I'll call a doctor if you want,\" the man said.\n\n\"No, no need, I'll call Doc Rogers in a minute once I get him settled,\" said Sam.\n\n\"Are you sure? It's no problem,\" he said again.\n\n\"I'm sure. I don't want any fuss. I'll call the doctor in a few minutes. It ain't like he's gonna do more than hold his hand anyway,\" said Sam getting frustrated.\n\n\"Okay,\" said the man and went back down the hall.\n\n\"Damn tourists,\" mumbled Sam.\n\n\"Sam, my name is Brian Davy. Don't think I ever said,\" said Brian.\n\n\"You told me once, but told me to call you Buster. Never explained that,\" she said. \"I'm gonna call Doc and I'll be right back.\" Sam patted his hand and left the room.\n\nSam came back into the room and Brian could smell she was irritated.\n\n\"That idjet called an ambulance. I called Doc and he'll try to cancel it, but we may have a few more people than I expected,\" she told Brian.\n\n\"No hospital,\" he said.\n\n\"No, I understand. Won't let them take you. Now, I'm going to get some pajama bottoms on you afore Doc gets here,\" she said. She turned to a dresser and pulled out a pair of pajamas that had belonged to her husband. She'd kept them all these years and never knew why. Now she had a reason. Between the two of them, they got the pajamas on and Brian back under the covers.\n\nA few minutes later, there was noise out in the hall. Brian woke with a start to find Doc Rogers and two strangers walking into the room. Two of them started touching him and Brian tried to move away from them but he was just so tired he faded in and out of consciousness.\n\n\"Hey! I said leave him alone!\" cried Sam. \"He's asleep!\"\n\n\"Sam, we gotta do our job,\" said Dave. He said it loud enough, that it startled Brian.\n\n\"Who? Wha!\" Brian called.\n\n\"Sorry Brian, these idjets can't listen. I said you were sleeping, and that you didn't want to go to the hospital, but they can't listen,\" said Sam.\n\n\"Mr... um.... Brian, now we are hear to help you. We'll take you to the hospital and get you fixed right up,\" said Matt who was trying to take Brian's blood pressure.\n\n\"Get that thing offa me! I not going to hospital. I want stay here at Sam's. If I die, so be it, but get away from me!\" shouted Brian as he ripped off the pressure cuff and threw it in Dave's face.\n\n\"I told you to leave him alone,\" said Doc and Sam almost at the same time.\n\nDave turned to Sam and started pushing her out of the door. \"Sam, I think you aren't the best person to have around at the moment and you are upsetting the old man,\" he said as he tried to shove her out the door.\n\nBrian felt the wolf rise in his mind. He growled at the man who'd tried to take him from his Sam. He started to shift, felt the wolf try and take over and then slumped and almost fell out of the bed as the two men screamed.\n\nDoc and Sam ran towards Buster/Brian and caught him as he fell off the bed.\n\n\"Oh Brian,\" cried Sam. She and Doc put him back on the bed.\n\nBrian was half shifted and knew that his body was failing. There was noise in the room, but he couldn't follow it. He looked up to see Sam. Tears were running down her face.\n\n\"I love you Sam. You remind me of my daughter,\" gasped Brian. He coughed and wheezed.\n\n\"Oh Brian,\" was all Sam could say as the tears rolled own her face.\n\nBrian felt her wrap him in her arms. He swore he could see Natalie, Grandma Davy, George, and other members of his family standing at the end of the bed. They shimmered in the light. He smiled. Brian coughed again and shuddered as it subsided. Sam just rocked him slowly back and forth. His breathing became shallower and shallower until it was just a rattle in the back of his throat.\n\nWolf looked up and relaxed. It was time to go at last."
    ],
    "authorname": "Jaisen",
    "tags": [
        "werewolf",
        "family",
        "buster's story"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/busters-story-ch-09-finale"
}