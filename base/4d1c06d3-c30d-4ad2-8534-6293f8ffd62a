{
    "title": "TRC - Searching for the Sky Ch. 23",
    "pages": [
        "Welcome back!\n\nFor those of you reading The Runesmith Chronicles for the first time I recommend going back and starting with the first book The Runesmith Chronicles (it's actually Oni and the Farmer but it's too late to change it here :P). Mostly so you have a better understanding of how things like the magic system works and what's going on as I often reference earlier chapters.\n\nI update my profile with news and current projects each time I submit a new chapter.\n\nAs always, don't forget to vote and don't forget to leave a comment! I may not respond to every one but I read them all and they are greatly appreciated!\n\nEnjoy!\n\nBlu\n\n-\n\nEdited/Proofread by - oldfart and 2muchdiggity\n\n-\n\nChapter 23\n\nThe worker perked up at the faint vibration coming from the surface. It was still far away and stopped nearly as soon as she noticed it, but it was unmistakably coming this direction. The sound reminded her of just before their last harvest, though there were far fewer of the creatures. There was little she could do at the moment, harvesting the interlopers would be impossible right now. The rest of the colony had gone deep for the upcoming cold season and it would take some time before even a small hunting party would get up here to the newest gardening chamber.\n\nShe stepped out into the tunnel and waved her gaster in the airflow leading down into the depths of the colony. The large, oblong appendage sticking out from the base of her spine worked similarly to those of regular ants, releasing a scent telling the colony there was more food to be harvested. Hopefully, they would still be around when the soldiers arrived. She was tempted to send out a little bit of the emergency pheromone just to see if a few more of the queen's beautiful army might come as well, but punishment for such a false alarm would be harsh.\n\nThe soldiers were so pretty, standing tall and proud with their small eyes and round faces. Instead of having mandibles by their mouths, they attached to a point up by their rounded, human ears. She wished she had ears like that, they seemed much more useful than feeling sounds through her feet and antennae. The soldier's mandibles were shaped differently from hers and closed vertically, covering the bottom of their faces and making them look deliciously dangerous. They also had long sharp blades extending from the back of one arm while above their wrist a needle-like stinger was hidden behind a tiny hole in the tough chitin. The worker loved to watch as the armor covering a soldier's torso separated to show the smooth and soft skin beneath. And their tiny gasters were so cute! Certainly not as useful as hers but they were able to produce the scents they needed, especially when hunting or fighting.\n\nThe worker had never seen a reflection but knew from her sisters that she resembled their tiny cousins. Personally, she hated her chitin-covered, teardrop-shaped head and with its large, multi-faceted eyes on either side. The two short antennae sticking out from the top of her head were cute though. Her scissor-like mandibles next to her mouth probably bothered her most, their placement and the extra muscles needed to use them barely allowed her to speak. A hard, black carapace covered her thin body and, though it had feminine curves, she knew that there was no soft skin beneath. Her outer shell meant that her middle legs weren't specialized into moveable armor and the insectoid limbs were instead used as an extra set of long, extremely strong arms or legs depending on what she was doing. When not in use, the middle appendages moved back and out of the way, the knees coming up behind her shoulders as the longer, lower part of the thin legs crossed behind her back.\n\nAs beautiful as the soldiers were, they were nothing compared to the gigantic queen. Her size was only matched by her beauty. She could crush a worker if she accidentally stepped on one. She needed to be big so she could carry around her large abdomen which constantly supplied the colony with new eggs. The rest of her body was smooth and soft flesh, much like the soldiers' torsos or the occasional human that they encountered.\n\nThe only thing she didn't like about the queen was the royal guard constantly nearby, those huge red women terrified her. That was probably a good thing. Too many of the workers, herself included, would sit and stare at the queen's beauty until they withered away.\n\nThe royal guard was also an uncomfortable reminder of what happens when you displease the queen. Though they were the champions of the colony, they weren't natural. Workers who displeased or disappointed the queen were simply killed, but soldiers were barricaded into a room and... changed... into the red women. The transformation made them mighty soldiers but reduced them to a child-like intelligence, just enough to follow the queen's commands. The worker preferred knowing she would simply be killed if she ever did something to warrant the queen's punishment.\n\nHer antennae twitched as she caught a scent wafting toward her from the vent at the far end of the tunnel.\n\nA human male was coming. No... two males were coming, along with two females.\n\nA sense of longing that seemed to radiate from the bottom of her torso came from wanting desperately to experience something she never could. Where the queen and soldiers had openings to take the males inside them and collect their seed, she and the other workers only had smooth pieces of black chitin.\n\nShe once watched a soldier riding a male from their last harvest and immediately understood why they did such things in private. The sight left her, and the other workers who spied on the soldier with her, wanting to know that feeling. Once the woman collected his seed, she would take it down to the queen's chamber and share it with their matriarch. The worker had never seen this process herself but understood that the queen and soldier would rub their openings together as the soldier attempted to squeeze the man's seed into the regent. This didn't make much sense with the size difference. By her estimation, a soldier could nearly fit inside the queen's opening. She dismissed the thought; that was just silly. If the queen didn't need semen at the time, she would have the soldier press her opening to the matriarch's mouth so she could eat it as a meal instead. This was supposed to be a very pleasant experience for the soldier.\n\nIf a worker brought the queen a male, then she would often bestow a boon upon them. Her request would be to watch one of these sharings or feedings, it sounded like an amazing sight.\n\nThe worker ran up the slope, away from the garden, until she could feel the tiny vibrations in the earth from the group above. They were moving very slowly, but her antennae and feet were extremely sensitive. She moved along the wall of the large tunnel, looking up and marking their location until they finally stopped. Three were out front but another was standing alone, away from the others. Hoping her target was a male, she quickly and quietly began burrowing up and to the side. The tips of her antennae began to glow as the soil around her hands flowed down the slope and ran out of the hole as though carried by water. She was able to dig in near silence, other than crawling forward or using her insectoid middle legs to brace herself within the tunnel.\n\nShe stopped to get a read on her prey's position.\n\nA foot scraped across the ground above her and the worker lunged upward. Her innate magic caused the friction holding the dirt together to vanish and effectively liquified the soil beneath the human's feet. Grabbing the leg of her shrieking prey, she quickly dragged the human down the steep slope. When the woman fell to the floor of the larger tunnel, the ant-girl darted around and cuffed the woman's head with a chitin-covered hand to silence her. She immediately realized from the lumps on the human's chest that this was not a male. The worker was disappointed, but it was still an opportunity. The colony needed to eat and there was still room in the garden chamber. She drew a viscous, sticky substance with strong healing properties from where it was stored in her gaster up into her mouth. Leaning over the dazed woman, she opened her mandibles wide and placed them on either side of her prey's thigh. The colony didn't need its food running away.\n\n------\n\nKal slid down the tunnel and straight into the arms of the fighter.\n\n\"Don't look Kal. Don't look,\" she said quietly.\n\nThe mage glanced up at her face. \"Why? What happened?\" he said, trying to get free. The woman was extremely strong with that belt of hers.\n\n\"They took her legs off.\"\n\nKal stared up into the Falma's face, unbelieving of what he just heard. \"Ria!\" he called, gulping hard to keep his lunch down. \"Store the priestess's legs.\" Ria was off to one side staring at the macabre sight and waved her hand almost as an afterthought.\n\n\"Oh!\" she exclaimed as the limbs turned into specks of light. \"That's a great idea!\"\n\n\"What is?\" asked Falma.\n\n\"Things come out of me exactly the way they went in. Without storing them inside me, there probably wouldn't be any chance to reattach them.\" The sprite made a face as it suddenly dawned on her that she had a couple of severed legs inside her.\n\n\"Is that the plan?\" asked the fighter, looking down at the mage.\n\n\"It wasn't, but it is now,\" he said, stepping around the woman as she let him go and seeing a large pool of blood on the tunnel's hard floor. \"Ria is right, we at least have a chance of restoring them if she has them.\" He looked over at the sprite, \"Is there any way to store the blood but leave behind anything that got into it like dirt?\"\n\n\"I'll do what I can.\"\n\n\"Split it in two if that's possible.\" A plan was starting to form in his mind. He wouldn't bet a copper on its chances of success, but it was better than nothing.\n\nRia retrieved most of what remained on the ground, splitting it into a bunch of smaller motes instead of just the two Kal asked for.\n\n\"Come,\" said the fighter as the last speck of light floated into the pouch on the mage's hip. \"Kedder has a way to find the priestess and went on ahead.\"\n\n\"Keeping tabs on her?\" asked Kal, raising an eyebrow.\n\n\"If she dies, we die. He was just being cautious,\" she replied. Further conversation was cut short as they began jogging down the tunnel after the thief.\n\n------\n\nKedder looked down at his hand as he approached an opening in the wall of the tunnel. A faint red line visible only to him extended from the ring on his finger toward the doorway. The brightness of the line indicated the distance to the person or thing he tagged, which was currently the priestess. It was a handy little bit of magic but didn't work over long distances.\n\nThe gentle blue-green light emanating from the chamber beyond was welcome for the faint shadows it cast, but he was far from comfortable with the amount of noise coming from inside. A musty smell akin to moldy bread or fruit mixed with the scent of decomposing flesh assaulted his senses as he got closer. It reminded him of the times he dealt with the undead. He chose his footing carefully as the slope steepened, no sense in announcing his presence by sliding the rest of the way to the portal.\n\nThe thief carefully peered into the room, scowling at what he saw. Seven of the ant women tended to their fungal gardens inside. However, the gardens were not beds of dirt or refuse but creatures infected with the fungus. Inside, the horses used by the cavalry were held to the wall by long strands of strong, web-like material. Kedder's scowl came from seeing the animals move. He heard stories of fungal zombies before but had never seen one, now there was a room full of horses that the ants had turned. On the other side were more of the cavalry's horses while further down was a true fungal zombie, the unfortunate female cleric sent to find the missing company. The woman groaned loudly as she strained against her bindings, chomping her teeth and reaching for the target of Kedder's ring. Toward the back of the chamber, one of the ant-girls held the priestess against the wall while two others regurgitated a substance that turned into the silky threads when stretched.\n\nSeeing the priestess made Kedder's legs ache but as he looked around the room, he noticed that she wasn't special. The cleric and all the animals had been given the same treatment. The thief gained a small bit of relief when he saw the ant-women had healed her somehow. He feared she might die of blood loss after they took her legs but that was no longer a danger.\n\nSeeing one of the ant-girls turn his way, he pressed his back against the tunnel wall by the opening. When he heard the insectoid woman approaching, the thief tugged his hood down and tightly closed his cloak around him. To an outsider, it looked like Kedder vanished, but the cloak's ability only worked in shadows making him thankful for the fungi's faint luminescence. The magical garment didn't consider complete darkness to be 'shadow.'\n\nThe ant-girl stuck her head out and looked around for a moment. When she was about to go back inside, she stopped and looked up the slope. Kedder could hear it too, heavy footfalls coming toward them. That woman walked like a damn oliphaunt.\n\nIt turned to signal the others of an intruder but never got the chance. Kedder slid his ornate dagger between the joints in the front of the ant-woman's neck, blocking her airflow with the blade so she couldn't warn those inside. Angling the dagger upward, he quickly finished his gruesome task. The thief crossed in front of the doorway, catching the body of the woman as it went limp. Now on the lower side of the chamber entrance, he placed her as quietly as possible on the ground. She was surprisingly light for something covered in natural armor.\n\nKedder checked if any of those inside noticed his activities. Suppressing a sigh of relief, he darted across the front of the doorway and silently ran up the slope toward the fighter, hoping he could reach her before any more ant-women noticed the noise.\n\nBehind him, tiny drops of fluid leaked out the end of the ant-girl's abdomen as it relaxed in death, releasing a cocktail of pheromones into the air flowing down into the colony.\n\n------\n\nKal gripped his staff as a shadow detached itself from the darkness, only to relax when he realized it was the thief.\n\n\"Six ants in a room ahead with the priestess, one dead outside,\" he reported. \"Also inside are the missing horses and the woman cleric they sent, all turned into fungus zombies by the bugs. Elden's legs are healed over, so she isn't going to bleed out on us.\"\n\n\"Six shouldn't be hard ta deal with,\" said the fighter.\n\nKedder looked at Kal's staff. \"That won't be much good against ants. Their bodies are covered with armor. Do you have anything that slices or stabs?\" he asked, dipping his head toward the sprite on the mage's shoulder.\n\nKal moved his hand down to the middle of the staff and said, \"Naginata.\"\n\nThe wooden section shortened slightly as the platinum end cap extended into a short, single-edged blade with a slight curve and a circular guard at its base. The actual weapon was much longer and often used by soldiers on horseback, according to what Ikuno told him. The current size suited his fighting style better.\n\n\"Nice,\" said the rogue. He turned to Falma, \"Draw them out into the tunnel or take them inside the chamber?\"\n\n\"How many of the zombies are likely to help 'em?\"\n\n\"None, they all got the same treatment as the priestess,\" he said tapping his thigh with the edge of his hand.\n\nThe mage shared a look with Ria, cringing at the thought.\n\n\"We block 'em in and take 'em out before they can call their kin,\" said the fighter. \"Then cut the priestess free and get outta here. Any ideas about how we do that?\"\n\n\"This tunnel must join up with the one we were looking at when they took Elden,\" offered Kal. \"But there's no telling how deep we may go before finding the junction. Do you think there's any way to not kill them?\"\n\nFalma looked at him in surprise and a little bit of anger, as did Kedder, but her expression softened immediately. \"You're a na\u00efve thing, aren't ya?\" she said, shaking her head. \"No. If they can take her legs off, they can take her head off the same way. We aren't givin' 'em the chance. You go in there intending to kill or you make your way back to the surface. I'm not takin' chances with mine or Kedder's life. Understood?\"\n\n\"Understood,\" said Kal, thoroughly chastened.\n\nThe thief shook his head in disbelief that the young man had asked such a question before returning to their task. \"Fresh air is flowing down the tunnel,\" he said. \"There must be an opening at the other end.\"\n\nFalma nodded, \"Good enough. Let's go get our priestess.\"\n\n\"Qui-et-ly,\" said Kedder through gritted teeth. \"The way you walk, we may as well have brought the horses down with us.\"\n\nThe swordswoman rolled her eyes but Kal noted that she tried stepping more softly as they followed the rogue back to the chamber.\n\n------\n\nThe ant-girls froze in surprise as the trio burst into the room. Falma and Kedder took up defensive positions by the doorway as Kal spun around. Shoving the end of his staff into the dirt, he reached out with his magic to the bedrock just below. Seconds later a slab of stone sprung up from the floor and embedded itself in the top of the entryway as he made a lifting motion.\n\n\"Done,\" said Kal, grabbing his sword-tipped staff and turning around. The ant girls were much smaller than he expected. The tallest was only the size of a young teenager. The only thing keeping him from spinning on his heel and leaving was how insect-like they were. With all the other monster girls he had met, he was expecting them to have more human features. Instead, ant heads stared back at him that sat atop thin, chitin-covered human bodies that sprouted insect legs from their torsos.\n\nAs much as Kal hated to admit it, after what they did to Elden and the other captives, it was easier to see them as monsters.\n\nThe fight was over in seconds, if you could even call it a fight. As soon Kal gave the signal, Falma exploded into action. A swipe of her sword clove two of them in half before she plunged the tip into the chest of a third.\n\nKal opted for the quickest means possible to dispatch the two on his side of the room. With help from the strength and speed runes, deft swipes with the blade on his staff left both of his opponents headless. As their bodies sank to the floor, the mage turned around and emptied the contents of his stomach. Daxas wasn't there to push the spear this time, that was entirely his handiwork.\n\nKedder sprinted toward the back of the chamber where a lone ant-girl stood near the priestess. The thief reached for his throwing knife as the terrified worker ran, only to stop with the knife raised and ready to loose. The woman reached the back wall and dropped to the floor pressing her back against the stone as she curled up into a ball. Tucking her head behind her knees, the ant-girl covered it with her arms while crossing her middle legs in front of her defensively.\n\nThe rogue dropped the knife back into its sheath. Fucking mage. The sprite's stories about Kal getting lovey-dovey with monster girls were getting to him. Normally, the woman would be dead already. As long as she didn't interfere, there was no point in killing her.\n\nIgnoring the sound of the mage retching on the other side of the cavern, Kedder turned toward the priestess, frowning at her state. Elden's eyes stared off into the distance as she mumbled incoherently. A faint glow around her mouth and nose showed the presence of spores.\n\n\"Mage!\" he yelled.\n\n\"Yes,\" Kal answered weakly as he wiped his mouth on his sleeve.\n\n\"Do you have a potion or something that cures diseases? The ants already infected her.\"",
        "\"I do.\"\n\n\"Don't heal her yet,\" said Falma, stepping up beside the rogue. \"Carryin' her like this will be easier than if you cure her and she panics.\"\n\nKedder flipped the ornate dagger and caught it by the blade with his fingertips, holding it out to the swordswoman. \"You cut, I carry.\"\n\n\"I'm stronger, I oughta carry her.\"\n\nThe thief shook his head, \"If Kal drops that wall and there are more bugs on the other side, you will need to fight us out of here.\"\n\nAfter a moment of thought, Falma nodded. Taking the knife, she went to work on Elden's bindings.\n\nOnce he had collected himself, Kal came over and used a simple cleansing spell to get rid of any remaining spores on the woman's body. Cutting the last few strands, Falma let the priestess fall into Kedder's arms. With a long leather strap from Ria, the mage helped secure Elden to the thief's back. As he finished, he looked up worriedly at the fighter.\n\n\"I can feel it too,\" said Falma, looking toward the door. Vibrations in the floor indicated a large group of the ants headed this way. She glanced over at the mage, \"Are you good ta fight? You took it pretty rough earlier.\"\n\nKal nodded, \"Technically, those were my first kills. When I signed on, I thought we were coming out here to kill some beast, not monster girls. I'll cut down a horde of ant-girls if they are trying to kill me, but no more workers just trying to do their jobs,\" he said, tilting his head toward the chitin-clad woman still sitting on the floor.\n\n\"Hard to disagree with that. If you're ready, let's get outta here.\"\n\nBy the time they got to the exit, there was no denying it. A large group of ant-women was just outside Kal's wall.\n\nKal took a moment to change back to the metal staff. Kedder's suggestion to switch weapons seemed sensible and he followed it without considering his other abilities. He was better with the staff and it could be just as deadly as a blade when combined with his strength rune.\n\nFalma wrung the grip of her sword in anticipation. She glanced over at Kal, \"Ready.\"\n\nKal raised his staff in both hands, sending out the tendrils of magic to the top of the stone door he created earlier. The ant-women on the other side must have sensed something. The vibrations from their movement ceased a moment before he anchored himself and pushed the slab down.\n\nThe woman that sprang through the doorway was nothing like the workers they killed. Hard chitin covered her head like a tightly fitted bandana instead of hair. A thick mask of the same material covered her face from nose to chin while her eyes were like Bea's, multi-faceted but human in shape. She also shared the butterfly-girl's height and front covering. Kal was too busy fighting for his life to wonder if it opened up in the same manner. Unlike Bea, the hard, black chitin encased all but the front of her torso, instead of stopping at her thighs and upper arms.\n\nA long, scythe-like blade extended from her forearm on one side while a needle protruded from behind her wrist on the other. Kal spun the staff frantically, his strength rune flaring as he released the magic holding his feet in place. This ant-girl was much more skilled than the workers and the suddenness and ferocity of her attack caught him off guard. As she pushed him back, another identical ant-woman darted out the doorway and engaged Falma. A third attempted to emerge from the other side until a throwing knife sailed past Kal's shoulder and found purchase in the ant-woman's neck.\n\nThe workers grabbed the soldier and pulled her back into the tunnel. One of them removed the knife and threw it away where it vanished and reappeared in the thief's hand. Another produced some of the sticky substance with the healing properties, slathering it over the wound. Seconds later, the soldier was back on her feet and ready to jump back into the fray, only to find her sister had been pushed back and she no longer had enough room to get into the chamber.\n\nKal's surprise from the woman's initial assault passed quickly and he soon took control of the exchange again. As the strength and speed runes glowed brighter, the mage started pushing her back into the doorway, preventing her friend from coming to help. He smirked at the look of frustration in her eyes.\n\nThe other soldier in the room had Falma locked in a defensive battle. The smaller woman was extremely strong and would have quickly overwhelmed the fighter if not for her magic belt. Though the swordswoman had her beat in skill, the ant's speed forced Falma to keep falling back, directly into one of the zombified horses. A bite wouldn't kill her outright but if the fungus got inside her it would eventually put her into a daze, much like the priestess.\n\n\"Hey, bug-lady! Catch!\" yelled Kedder.\n\nWith barely a glance, the soldier swatted the throwing knife to the ground then braced for the expected attack from her opponent.\n\nThe attack never came. Instead, she felt a tiny sting on the exposed flesh above her eye. Jerking her head away, she brought up her arm to stab the ghostly figure above her. The tip of the needle passed through empty air as her attacker faded away. The tiny dart the apparition used fell to the ground in front of her, its tip still stained with poison.\n\nShe jumped out of her opponent's range and stumbled, her legs not responding to her commands. Dropping to her knees, she looked up at the human woman bearing down on her, unable to even raise her arms in defense.\n\nA swipe of Falma's sword and another head joined the two on the floor left by the mage.\n\n\"Not the way I like ta do things, but it's better than bein' dead,\" she said, looking over her shoulder at the zombified horse still champing its teeth at her as it strained against its bonds. Turning back to the fight in the doorway, she saw the mage appeared to be faring better than she had.\n\nKal waited patiently for a mistake. Just defeating her would do little good as there was another waiting behind this one. He also realized that this battle wouldn't go unnoticed by the rest of the colony. He had seen regular ants deal with prey and worried they would be overrun by sheer numbers soon. The mage had an idea, but he needed a good-sized opening in her defense for his plan. Even with his superior speed and strength, she was proving too skilled for such an opportunity.\n\nPumping more power into the strength rune, he batted the soldier's blade, making it swing wide. Shifting his grip, he poured even more energy into the rune and brought the staff down across her chest. The woman stepped back and dug her clawed feet into the rock, taking the blow. The top quarter of her torso covering cracked and fell away, revealing a very human-looking breast. At the same time, Kal felt a sharp pain and saw the ant-girl's other arm held out, the tip of its needle piercing the skin of his shoulder. Pain flared as the soldier squeezed her hand closed and began pumping poison into him.\n\nThe ant-woman's face covering opened. Splitting down the middle, the triangular, modified mandibles rotated up and back until they looked like one of the winged helms he'd seen pictures of. Behind the mask was a very human face, aside from the faceted eyes.\n\n\"You are strong, the queen will enjoy you for a very long time,\" said the woman, grinning. The mage could tell what she was saying wasn't what he heard. Whatever language they used, it wasn't Common. Luckily, his translation spell didn't care.\n\n\"She might,\" said Kal, \"but I'm never going to meet her.\"\n\nThe soldier's face showed her surprise, she hadn't expected him to respond in her tongue.\n\nKal leaned back, letting the point of the needle slip free, and brought his staff into position. The healing and cure poison runes on his back faded and the strength rune shone as he thrust forward with the end of the staff. The power matched that of the last strike, but this time he angled the staff up slightly instead of striking down. Unable to find purchase with her feet, the ant-woman sailed into the soldier behind her and they both went hurtling across the larger tunnel outside until the far wall stopped them.\n\nThe mage's speed rune flared as he darted through the entryway. Their graceless tumble left a large swath among the workers for him to follow. Reaching the women as they tried to extricate themselves from one another, he thumped them both on the head with the end of his staff, knocking them out.\n\nKal turned around to see the soldiers' entourage of workers cowering before him.\n\n\"Move over there,\" he commanded, pointing further down the slope while hoping they understood him. \"Any of you...\" he was interrupted by the noise of twenty worker ant-girls moving to where he pointed. \"Okay... wasn't expecting that. Any of you who try to get in our way will be killed. Do you understand?\" In unison, twenty heads nodded.\n\nFalma and Kedder emerged from the chamber a few moments later. No sooner did Kal summon Ria again then they heard an unmistakable rumble coming from the lower parts of the colony.\n\n\"We need to go, now,\" said the fighter.\n\n\"Stay close,\" said Kal. Stepping behind the other two, he powered the speed rune and split it among them. After a couple of steps to get acquainted with the magic and moving as one, they were off to find the source of the fresh air coming down the tunnel.\n\n------\n\n\"Of course it couldn't be that easy,\" said Kedder, looking at the wall in front of them.\n\nHoles that dotted its face expelled the air, creating the breeze on their faces. Unfortunately, the largest of the openings was barely large enough for Kal to fit an arm into. The mage immediately tried to shape the whitish material, but geomancy did not affect it, despite being hard as stone. The only one who could escape at the moment was Ria.\n\nFalma inspected the walls around them. They appeared to have used the same substance to reinforce the dirt, which explained why the large tunnels hadn't collapsed despite a lack of supports. It also made digging out seem unlikely.\n\nTheir speedy trip to the end of the tunnel offered them a brief respite, but they could already hear the oncoming horde.\n\n\"We shoulda tried to get out the way we came in,\" sighed the fighter, looking up at the ceiling.\n\nAlso looking up, Kal remembered a spell he used a long time ago that was especially meant for dirt. \"I have an idea, but it will take some time. I'm going to try to put a hole up there, he said pointing upward. \"Then we just have to break through the... inner shell?\" he said, uncertain of what to call it.\n\n\"We can name it later,\" said Falma, drawing the sword from the sheath on her back. \"I'm strong, not smart like you two. I'll hold 'em off as long as I can.\" She looked down at her chest and grumbled, \"Shoulda bought some better armor.\"\n\nKal didn't think that was a fair assessment of her intelligence but didn't have time to dwell on it because Ria was yelling in his ear.\n\n\"Kal! Armor! She's the same size!\" the sprite yelled. In her excitement, she apparently forgot his ear was so close.\n\nHe looked over to see Falma looking back in confusion. The avatar was right, she was about the right height and stature. \"Falma. Remember what I did before I fought the knight? Ask Ria for some new armor and stand very still.\" He looked over at Ria, \"Give Falma the armor when she asks for it,\" he said making it official for the sprite. A moment later he added, \"Hell, give her the sword too, it's too big for me anyway.\" With that taken care of, he looked up and began preparing for the spell.\n\nGlancing back toward the sound of oncoming ant-women, she shook her head. \"Not supposed ta switch horses midstream, but what the hell.\" With her sword in one hand pointing toward the floor, she held out her arms as Kal had. \"Ria, I guess I need some new armor.\"\n\nThe sprite squealed with excitement as a stream of tiny lights flew out of her bag and surrounded the fighter. Ria briefly considered stripping the woman and giving Kal a peek but decided that would be in poor taste given the gravity of their situation. Besides, Falma still needed her underclothes and padding.\n\nThe sphere collapsed much like before, with only a slight pause as the woman's strength-enhancing belt fell to her ankles. The fighter looked down to find an unusual looking suit of armor as the motes containing her old armor floated back to the sprite's bag. At first, it looked like blue paint had been splashed across it, but she quickly noticed the rainbow patterns along the edges of the coloring indicating exposure to extreme heat.\n\n\"Molten rock caused the strange colors, but the magic appears to be intact,\" said Kal without turning around. The mage had extended a fist and was drawing an intricate rune above it as he spoke.\n\n\"It's magic?\" asked the fighter. As if on cue, the straps cinched themselves down and the breastplate shrunk around her torso, forming two mounds that fit her breasts comfortably. The final speck of light drifted forward and touched her unoccupied hand, turning into a sword the same length as hers. Where her blade gradually tapered all the way to the tip, the new one maintained a straight edge along its length before coming to a shallow point.\n\nShe held both swords up, amazed at the strength imparted by the armor as she held one in each hand. Wearing magical plate armor while wielding two zweihanders was the most powerful she had felt in her life. Movement further down the tunnel caught her eye, bringing her attention back to the situation at hand. There was only one problem.\n\n\"Ria, take this one,\" she said, holding out her sword and keeping the new one. \"Amazin' as it would be, I don't know how ta dual-wield. Even if I did, it wouldn't have been with anything this long.\" When the sword disappeared, Falma turned and stepped out of the magic belt around her ankles before striding toward the oncoming ants. \"Grab that too,\" she called over her shoulder at the sprite, \"I don't have time to put it on, and with this,\" she rapped her knuckles on her breastplate, \"I don't need it.\"\n\nKedder watched the fighter for a moment before looking over at Kal. \"Once you make the hole how are we supposed to get out?\"\n\n\"With the same spell I use to glide. I'll make us both very light then jump out, drop you off, and come back for the others.\"\n\n\"Good enough. Do you need my help with anything? If not, I may as well help the woman. Plus, the priestess here is getting a little bitey,\" he said in exasperation. Elden's eyes turned milky during the short run to the end of the tunnel and Kal noticed that she was gently dragging her teeth across the back of the thief's neck. Minutes ago it had looked more like amorous kisses.\n\nFalma knew a bit about fungal zombies, though this was her first time encountering them, and told them what she knew after noticing the change in the cleric's eyes. It would take a day for the spores to infect enough of the priestess to kill her. A short time later, the body would reanimate with a singular purpose of spreading the fungus. However, the infection didn't wait until its host was dead before trying to find new victims. In a little while, Elden would become violent, attempting to bite whoever she could. Her current behavior was just a precursor.\n\n\"I'm good,\" said Kal. \"Leave her. I'll take her first then come back for you two.\"\n\nKedder nodded and untied the leather strap, gently laying the priestess on the ground by Kal's feet. \"Work fast,\" he said before chasing after the fighter.\n\nFalma looked out over the mass of insectoid women running towards her. These weren't the docile group of workers Kal ordered about earlier. She guessed those had been part of a small scouting or hunting party. These women were whipped into a frenzy, determined to avenge their sisters and kill the intruders. After Kal pointed out that the ant girls were just workers she had felt slightly guilty for cutting them down. There was no trace of those feelings at the sight of the oncoming horde. The swordswoman's cry echoed in the tunnel as she charged into the wave of ant-girls.\n\nShe kept the sword Kal offered because she felt it would be better for this situation than her own. More weight at the end of the blade meant less slowing as it passed through an enemy, and she expected to go through a lot of enemies. It was also in much better shape than hers, purchasing the belt wiped out her money and she was still only about halfway to a new blade. As the fighter swung the sword in a wide arc, she quickly realized it was more than pretty.\n\nThe bodies of seven workers fell to the floor. She was expecting to get one or two and use her strength to send the rest flying, not to cleanly slice through them. The swordswoman didn't have time to be surprised. Darting to one side, she nearly stumbled from the armor's unexpected speed boost. Falma recovered quickly and swung again, sending more of the workers to join their sisters on the ground. The wide tunnel forced her to dash to the other side, where she finished off the ant's front line.\n\nA few tried climbing the walls to flank the fighter. With a flick of Kedder's wrist, they fell to the floor, clutching at the knives protruding from their throats. Moments later, the blades vanished, returning to the thief.\n\nThe ant-girls were zealous but not stupid. Sacrifices were expected when they tried to overrun an opponent, but a score of their workers lay dead or dying and the human hadn't even been touched. The next group to fall was more from momentum carrying them into range of the woman's deadly blade than the desire to attack. The soldier ants watching from behind saw this and called out to their charges to retreat. This enemy was far beyond the smaller workers' capabilities and there was no sense in any more dying needlessly.\n\nUnlike Kal, Falma had no idea what they were saying, but let up when she saw the women drawing back. The fighter smiled, noting she had only been forced back a couple of steps in the initial exchange. Unfortunately, five of the soldiers were advancing and she knew from her earlier fight they were far more dangerous. Falma's skill far outpaced theirs but their superior speed left her at a huge disadvantage. With Kal's armor she could keep up and probably take out a couple, or even three, but five at once was a bit too much.\n\n\"Duck,\" came Kedder's whisper from right behind her.\n\nFalma dropped into a crouch. The soldiers were so intent on the fighter they hadn't noticed the shadowy figure behind her, attributing the workers killed trying to scale the walls to some unknown ability of the human. Two small knives sailed out over the swordswoman's head, one each at the first and last of the five. Neither woman saw the projectiles and both suddenly had blades sticking out of their chest, the throwing knives easily penetrating their torso's hard covering. Like their sister back at the gardening chamber, the workers dragged them to the ground, removing the blades and coating the wounds with healing goo. Instead of recovering, both ant women began to shake and flail violently as the poison on the blades went to work. Seconds later, they stopped moving.\n\n\"Dammit, those were my only enchanted throwing knives, none of the rest will get through their armor,\" said Kedder quietly.\n\nFighter and thief both dodged to the side as two of the workers picked up the blades and sent them hurtling back in the humans' direction.\n\n\"Maybe you shouldn't do that again unless it's absolutely necessary,\" said Falma as the poisoned knives clattered across the floor behind them. Kedder grunted in agreement before running over to pick them up. The fighter paid him no heed as the three remaining soldiers fell into a battle stance and began slowly advancing.\n\nThe thief stayed back as Falma engaged the soldiers. He saw earlier that the woman was skilled, but against three opponents he couldn't help but worry. More concerning were the soldiers further back pushing through the throng of workers toward the swordswoman. Three, she might be able to handle, adding another five would be the death of her.",
        "Falma's eyes shifted between her opponents and the six limbs she had to worry about, three with blades and three with needles. She hoped she wasn't in over her head with his fight. The two on the sides attempted to move outward and force her to fend off attacks from multiple directions. Two knives zipped by forcing them to close ranks again. After watching their sisters die, they weren't taking any chances and stayed oriented to keep an eye on the thief as well.\n\nThe swordswoman was already planning on having a go at the mage if they got out alive. After that little bit of assistance, she started thinking she might have to give the thief a tumble as well. Unless you were insanely strong, fighting a three-front battle was always a losing situation.\n\nThe middle soldier darted forward and attacked, testing her defense. Falma smiled. Kedder was definitely getting a chance at her pussy. His knives were keeping them close enough together that the middle and right ant-women couldn't swing their arms with the blades effectively, constraining them to stab at her or use up and down slashes.\n\n\"Hurry it up. There's another group coming to help them,\" said Kedder.\n\nFalma nodded, thankful for the information. Her opponents probably knew as well, which was why they weren't mounting a strong offensive. Smart for them, but not good for her.\n\nThe fighter darted forward, bringing her sword down on the leftmost soldier. The woman raised her blade to block only to have the enchanted sword slice clean through, removing the blade and the arm it was attached to. The zweihander continued on, slicing through the tough chitin armor to embed itself deep in the ant-girl's side. Falma danced away as the other two came around and tried to stab her with their poisoned needles.\n\nHuman and ant-soldiers stopped as the one Falma attacked toppled over. None of them had been expecting that. The workers rushed forward and grabbed the woman's body, but it was easy to see she was already dead. The fighter hopped back and readied herself, the soldiers didn't follow.\n\n\"The five in the back stopped,\" reported Kedder. \"One turned and sent an order back down the tunnel. I hope that doesn't mean they have something bigger to throw at us.\" He thought for a moment, \"I wonder why they haven't just mobbed us. I once watched some ants take down a beetle many times their size. With these numbers, they should be able to do the same.\"\n\n\"Don't be givin' 'em any ideas. Then again, they tried that once,\" she replied, looking around at all of the ant-girl corpses. She was both proud and a little disturbed by the sheer number of them which had been cut in two.\n\nThey heard a shout of pain from behind them. Falma kept her eyes on the ants while Kedder looked back to see Kal shoving the priestess away with his foot.\n\n\"Mage got bit but is still working his spell. Sprite is flying around cleric's face now, distracting her. I hope he doesn't take too much longer.\"\n\n\"Same here,\" sighed the fighter.\n\n------\n\nAny other time the bite wouldn't have been a big deal. In a way, it wasn't, Kal's healing rune made it disappear almost as quickly as it happened. The problem was the fungus Elden just infected him with. Cure disease would get rid of it but required a few minutes and a lot of power to cast. The burrowing spell tied up too much of his magic to manage both at the same time. If he let go of their escape spell he'd have to start from scratch. Right now, that wasn't an option.\n\nAfter the thief put her down, the priestess dragged herself over to him and started lightly gnawing on his pant leg. It was annoying more than anything and he didn't think he was in any great danger. He shoved her away a few times as the battle went on behind him. Mostly when she started lifting the bottom hem of his trousers trying to get at the skin beneath.\n\nThe noise behind him died down for a moment when she quickly lifted his pant leg and bit him hard enough to draw blood. Now he could feel a faint burning sensation slowly crawling up his leg and there was nothing he could do about it except keep on swirling his hand above his fist and the glyph he drew earlier. The spell tied the motions of his fist to the dirt and earth above. In the process, it separated the column from the surrounding material. Unfortunately, the spell worked its way upward in tiny slivers and he had no real idea how far up the surface was.\n\nHe had only cast this spell once before when he and Ikuno planted Eludora and he was honestly amazed he even remembered it.\n\nThrough his feet, he felt the vibrations of something big coming up the tunnel, and it was coming fast.\n\n\"Now or never,\" Kal mumbled to himself as he stopped making the swirling motion and began lifting. The strength rune glowed brighter and brighter, but it wasn't until he brought his other hand over to assist that his fist finally started to move upward. The spell was supposed to make the dirt lighter as well, the amount of force needed to lift it was shocking.\n\nIt took a few seconds, but he finally had his arms all the way up. A small change in the spell made the column move five times further than however far his hand moved. With as much material as he seemed to be lifting, he hoped that was enough to clear the top of the hole. He tried to move the column to the side.\n\nHis fist didn't budge.\n\n\"Uh oh.\"\n\n------\n\n\"You had ta go and say they might have somethin' bigger, didn't you,\" growled Falma as they felt the heavy footsteps.\n\n\"With your new gear, they even might be a match for you.\"\n\n\"Appreciate your confidence but I gotta say, I'd rather get the hell outta here before they show up.\"\n\n\"Mage-boy is working on it, not sure what the holdup is.\" Kedder went to turn around but saw one of the workers crawling up the wall to one side. It was a little strange since she was still so far away and she seemed to be keeping a close eye on him. Still, if he let her go then they would all start climbing up there, and that could lead to trouble. In one fluid motion, he drew one of his throwing knives from its pouch and sent it sailing at the worker.\n\nThe ant-girl used her middle legs to shift to the side and hold up a hand in the path of the blade. True to Kedder's skill, it sunk blade-first into the thinner, more flexible chitin coating on her palms. Kedder and Falma watched in surprise as the worker yanked the weapon out of her hand and whipped it back at them, her target wasn't the thief or fighter though.\n\nKal howled in pain as the throwing knife sunk deeply into his thigh.\n\nKedder turned in time to see the blade vanish, appearing back in its pouch since his hand wasn't open for it. He also saw the glowing spell Kal had been casting flicker out as the pain broke his concentration.\n\n\"Uh oh.\"\n\n------\n\nIgnoring the pain in his leg, Kal sprinted toward the priestess. Scooping her up, he threw himself away from where he was casting the spell. The entire column of soil crashed down on top of the tunnel's reinforced roof. For a moment, the mage thought the ceiling might hold.\n\nThe roof cracked with a deafening boom, sending the workers to their knees holding their heads as everyone else clapped their hands over their ears.\n\nWith a few more pops and cracks the column of soil burst through the ceiling, landing with a loud thud that made the entire tunnel vibrate. When the dust cleared, and Kal pulled Elden away from his shoulder where she was trying to bite him again, he was surprised to see the column intact. There wasn't much room between the top of the dirt pillar and the roof, but it was enough for them to get up and out.\n\nGrabbing the priestess, he poured energy into the featherfall rune then pushed it into Elden as he leapt to the top of the column. Looking up he could see an indention from where he tried to move the mass of soil to the side. It started nearly two paces from the top. He hadn't even been close.\n\n\"I'll be back for you!\" he yelled to the other two.\n\n\"Don't!\" the thief yelled back, \"We can get out!\"\n\nKal nodded before leaping a second time.\n\nClearing the lip of the hole, he ran off to one side and dropped the priestess before darting back.\n\nLooking down, he saw Kedder climb onto the top of the column then jump up and slap his hands against the side of the hole. He pulled himself up until his feet gained purchase then nimbly climbed the rest of the way, almost running up the vertical face. The mage noted that he slipped off some climbing claws and stored them away while a tap of his heels made the ones on his boots vanish.\n\nOnly one left to go.\n\n------\n\nFuck, those things were huge. But they did explain why the tunnels were so damn big.\n\nFalma kept her eye on the mass of ant-girls while all hell broke loose behind her. Kedder had told her there was now a large dirt pillar behind her, right beneath a hole leading to the surface. She just needed to give him a couple of seconds to get out before following.\n\nIn those few seconds, the things making the pebbles on the ground bounce with their footfalls finally appeared. The smaller ants plastered themselves against the walls, cheering as the giant women approached. The swordswoman thought it odd that only the workers actually climbed up onto the walls and even they held on with only their middle legs. Perhaps they didn't have the same ability to climb as their tiny namesakes.\n\nClad in thick red chitin, the two women were easily twice Falma's height. Smooth, pointed, natural helmets that came down over the tops of their faces left only their human mouths exposed. Unlike the soldiers, it didn't look as though the chest part could be moved out of the way. The more human soldier ants sacrificed their middle set of legs for that ability, the middle legs on these new, more powerful ant-women weren't legs at all. Instead, another set of arms sprouted from their sides, each holding a sword. The top 'normal' set of arms held a large, wicked-looking spear in one hand.\n\nThe fighter looked closer, the swords looked tiny compared to the size of their wielders, and cheap too. They looked a lot like the ones she saw on a rack at the outpost. That meant they were likely taken from the missing cavalry. It didn't matter much at this point; it was time to leave. Keeping an eye on the two new ant-women, she ran for the column.\n\nSeeing the human flee, one of them raised a spear and sent it hurtling toward her. Falma dodged easily, but the spear sank deeply onto the side of the dirt pillar she needed to escape. The tower of soil began to lean toward her. Praying that she wasn't misjudging her strength, she leapt for the top of the column. Were it still standing straight, she would have caught it around her waist but as it continued to lean, it offered a grass disc for her to touch lightly on before launching herself up into the hole.\n\nFalma punched a fist into the side of the hole and hung there for a moment before yelling, \"Ria! Sword!\" and tossing her blade upward. She hoped the sprite heard her or she was going to be in a lot of pain in a few seconds.\n\nThe fighter didn't bother with handholds, just jabbing her fingers into the dirt and pulling herself up with her enhanced strength.\n\n\"Hurry!\" Kal yelled, reaching down toward her as she heard a scream of rage from directly below. Falma dug her hands in and threw herself upward, clasping Kal's outstretched arm.\n\nHis strength rune flared as he yanked the fighter up and out, sending her flying off behind him. The woman landed a few paces behind him, cursing as she bounced along the ground, but he didn't have time for apologies. A large spear came flying out behind Falma as soon as her feet cleared the hole. Both he and Kedder scrambled away as it flipped over and returned to earth.\n\nFalma jumped to her feet and ran over to the spear, snatching it up. She stepped over to the hole and looked down, seeing the red-clad ant-woman staring back up at her. Holding the spear out, she shook it and screamed, \"Mine, bitch!\"\n\nSpinning on her heel, she stomped away before stopping a second later to look around.\n\n\"Where the fuck are the horses?\"\n\n\"I don't know but we need to find them fast,\" replied Kal, getting up and trying to shake out the numbness that had crept up his leg and begun making its way across his stomach. \"We need to get somewhere I can cure the priestess then hope she is in good enough shape to cure me.\"\n\n\"Why? Can't you do both?\" asked Kedder as he crested a nearby rise. He pointed south, \"Horses are over there. Not far.\"\n\nKal shook his head, \"I've burnt through nearly all my mana. If we get into another fight, I may not have enough to cast it without waiting a few hours. Who knows what she will be like then?\"\n\nFalma had Ria store the spear. Kal was mildly surprised she was able to do so; the creature below must have given up on it after the fighter's declaration. She then went over and picked up the priestess before heading toward their mounts. \"Any other time, I'd tell you ta heal yourself first. Bet on the sure thing. But with my life tied ta hers, I can't very well say that. Just in case my information is wrong.\"\n\n\"I understand,\" said Kal, breaking into a jog. \"But we are running out of time. We need to do this while I can still think.\"\n\n------\n\nThey rode the horses east at full gallop for a short while until Kal stopped them. The sensation had reached his neck and he was beginning to have a hard time thinking. If they waited much longer, he didn't know if he would be able to use the rune.\n\n\"I don't like this,\" said Ria. \"She hated you before and now you are trusting her to heal you. You don't even know if she knows the spell!\"\n\n\"Yurr going to have to trust me on this one. Wurst case scen... scenario, tell her I'm her best bet to get hurr legs back.\"\n\n\"I wish you'd stopped us sooner,\" grumbled the fighter as she laid the priestess down. \"You shouldn't have let yourself get this bad.\"\n\nKal ignored the swordswoman and bent down to the priestess. Beneath his cloak and tunic, a rune on his back slowly gained brightness as he rid the woman of the fungal disease.\n\n------\n\nKal slowly opened his eyes. He was in a tent, he was in his bedroll, he was alive, and he appeared to be naked. He shuffled around for a second. Yup... definitely naked.\n\n\"Welcome back, mage,\" came a voice from off to his side.\n\nHe turned his head and smiled, \"Hello priestess, it's good to see you back with us.\"\n\nShe sat on her bedroll in a heavy shift meant for cooler weather.\n\n\"I could say the same, though I understand you weren't nearly in as bad of a state as I.\"\n\n\"I vaguely remember healing you but everything beyond that is fuzzy.\"\n\n\"You mostly healed me, but it was enough to clear my mind and finish the job. From the descriptions of the others, you ran out of magic and passed out. I cured you right away, but you didn't wake up.\"\n\n\"Falma was right, I shouldn't have waited so long. I was sure I had enough left to take care of you. I wonder what happened?\"\n\n\"The fungus happened. Had you taken care of me sooner I might have been able to tell you. The fungus feeds off its victim's natural magic to spread so quickly. For you to have enough left to heal me after being infected for so long, you must have some impressive reserves.\"\n\n\"You know about it? I hadn't run across such a thing in any of my studies. I apologize for waiting, Falma's suggestion made sense at the time.\"\n\nElden shook her head, \"The fighter was right. When I awoke to find losing my legs wasn't a bad dream, I had some very... rough... moments.\" She raised an eyebrow, \"I've been told that you may have an idea to remedy that.\"\n\n\"I do, though I don't know if it will work.\"\n\n\"I'm willing to try anything.\" Her voice lowered, \"This hurts me to say to a mage, but I want to thank you for having faith in me. Ria didn't tell me you had a plan to save my legs until after I healed you. With how I've treated you, I'm uncertain I could have trusted you the same way if our positions were reversed.\"\n\nKal stared up at the roof of the cleric's tent. \"I believe people are inherently good, for the most part. You may hate me for my magic or my relationships but that doesn't mean you are incapable of being a good person.\"\n\n\"I've lived in the city my entire life. That's a dangerous philosophy, even in Lantaris.\"\n\n\"Maybe, but it worked with you.\"\n\n\"That it did. Now, why don't you tell me about this idea you have to restore my legs.\"\n\n------\n\n\"Are we ready?\" asked Kal.\n\nFalma and Kedder both nodded. The fighter was kneeling while holding Elden to her chest from behind. One arm wrapped around the priestess's stomach while the other held a charged healing potion with the mixture for lessening scars. In anticipation of this getting messy, both women were nude. In fairness, the men were stripped down to their underpants as well for the same reason.\n\nThe rogue knelt nearby, grumbling that there were two bare pussies and sets of tits in front of him and he couldn't even enjoy it because of what was about to happen. A sheath containing one of his less dangerous knives lay next to him.\n\nKal was also on his knees in front of the cleric, silently agreeing with the thief. He held the vambrace with his shield in one hand.\n\n\"I don't know if I can do this,\" said Elden, her breath coming in short gasps.\n\nKal glared at her. \"We do this now or you can go without legs for the rest of your life. Pick.\"\n\nCalming herself, the priestess nodded.\n\nKedder and Kal cinched down the leather straps loosely tied around her upper thigh\n\n\"Say it.\"\n\n\"Ria, I need my legs back,\" she said then shoved a rolled-up wad of cloth in her mouth.\n\nKal held the vambrace up in front of the stumps left by the ant's healing goo and activated the shield, cleanly slicing through where her legs had healed over. The priestess laid her head back and screamed. A second later her head lolled to the side.\n\nKedder reached up and slapped her hard across the face before yanking the cloth out of her mouth. \"Stay with us cleric,\" he snapped.\n\nElden's head straightened up. Blinking away the tears, she nodded.\n\nKal dropped the vambrace and held his hands apart, the same as Kedder. The sprite summoned the motes of light that were the priestess's legs from her bag sitting between the two men. It was hard to keep down the feeling of revulsion as he suddenly found himself holding a severed leg.\n\nTwo more specks containing the blood Ria retrieved floated into the large veins that Kal's shield exposed before he pressed the leg to its stump. The rune on his back glowed brightly as he pushed the healing magic into the leg and directed it up toward the cut.\n\n\"It's not working! It's not working!\" Elden cried in panic. She held a magic circle in front of her hand and was attempting to heal the detached limb, the same as he was.\n\nOf course it wasn't working, they had been gone for nearly a day. Despite pouring so much healing magic into the leg, it wasn't a part of her anymore. There was only one way he could think of to remedy that.\n\nReaching down inside himself, he took a tiny bit of his lifeforce and fed it into the priestess's leg, directing it up toward the bone. Before his encounter with the will-o'-wisp, healing of this nature would have been impossible. The feeling of Ria returning what the wisp took allowed him to better understand this aspect of himself and how to access it. As he used his lifeforce to build a tiny bridge between the priestess and the severed leg, the healing magic flooding the area went to work\n\nElden hissed as the soft tissues and nerves knitted themselves back together. \"What did you do?\"\n\n\"Don't worry about it. Switch me,\" replied Kal, gently resting her heel on the ground. The bone was fusing back together but was still weak at the moment. Elden directed the magic circle of her healing spell at the mending leg while Kal went to work on the other. Seconds later the feeling came back in that one as well. \"Do it,\" said Kal, looking up at Falma.",
        "The swordswoman pulled the stopper out of the healing potion with her teeth and put it to Elden's lips, the priestess gulping it down without letting up on her healing spell.\n\n\"Ria I think you can let the other ones go.\"\n\n\"Take the straps off first,\" she said in a strained voice. She wasn't made to hold the motes for long periods, much less four of them.\n\nKal inspected how her legs were coming then looked up at Elden, she was still more acquainted with healing magic than he was. Seeing his questioning look, the priestess did the same before nodding to Kedder. The rogue slipped the knife beside him out of its sheath and grabbed the knots on the leather straps, carefully cutting through them.\n\nThe woman howled as blood rushed into her legs, the feeling was painful but blissfully welcome. Still cringing, she wiggled her toes. Tears of happiness welled up in her eyes despite her discomfort. After she woke up from Kal healing her, she never thought she'd see that particular sight again.\n\nThe mage sat back, sighing. Those two tiny pinches of his lifeforce would probably add days or weeks to when he finally got his enhanced abilities back. But seeing the look of joy on the cleric's face made him feel like it was worth it.\n\nLooking around, Kal saw that all of them were splashed with blood in some way, though it was a lot less than expected. \"Time for us to get cleaned up,\" he said.\n\nFalma shifted the priestess to the side, and thrust her breast toward him, \"Hurry it up. After all the excitement of the last couple of days, I need a good fuck ta help me unwind.\"\n\nRia threw her hands up in the air, \"Yesss!\"\n\n------\n\nAfter Kal used the cleaning cantrip on everyone, Falma picked up Elden and carried her over to the cleric's tent. Laying her down on the woman's bedroll, she turned around and pointed at her bedroll, \"Thief, pants off, lie down.\"\n\nKal and Kedder looked at one another from their place in the tent's doorway.\n\nThe rogue shrugged. \"This is unexpected, but I'll take it,\" he said before dropping his underpants to the floor and doing as Falma asked.\n\n\"You're doing this now?\" asked the priestess. \"Nevermind,\" she said immediately, shaking her head. \"You just rescued me and gave me my legs back, I have no room to complain.\"\n\nFalma straddled Kedder's legs and dropped to her knees. \"If you're wantin' to join in, I'm sure these two won't complain. If I'm more your flavor, that's fine too. I'm not into girls but I don't mind lickin' or bein' licked as long I'm getting' properly fucked when doin' it,\" she said before taking the thief into her mouth and bobbing up and down. One of the fighter's hands snaked between her legs and dipped into her sex, collecting some of her wetness before moving up and smearing it over her pucker. Letting Kedder slip free of her mouth, she knee-walked forward and sank down on his prick.\n\n\"Fuckin' hell that's good,\" muttered the rogue.\n\nFalma looked back at Kal. \"You next,\" she said, opening her mouth and pointing at it as she began to shift back and forth on top of the thief.\n\nKal dropped his shorts, which felt a little weird anyway. Between Perra and the rest of the girls back home he'd gotten out of the habit of wearing them. The time taking care of Daxas and her pack after the rescue only reinforced that.\n\nStepping in front of the fighter, he offered up his already hard cock. Smiling, she took him in her mouth and began lovingly running her lips up and down the shaft.\n\n\"Damn, that's hot,\" said Ria as she hovered above the priestess.\n\n\"Uh-huh,\" said Elden absently. There was something about the way Falma's lips rolled over onto the head of Kal's prick that was exciting her immensely.\n\n\"Do you want some help with that?\" asked the sprite, indicating the woman's hand that was currently pressing against her sex and making tiny movements.\n\nAt first, the priestess snatched her hand away, blushing in shame. \"To hell with it,\" she muttered a second later before spreading her legs, a simple act that suddenly gave her great joy, and starting to play with herself in earnest. It wasn't like those three were paying any attention to her.\n\nElden smiled up at the sprite, \"Thank you, but no. I'm going to save that for when we get back to the city.\"\n\nRia nodded and resumed watching the other three, her hand firmly tucked between her legs.\n\nFalma pulled off Kal's cock. \"I want you both in me.\"\n\n\"Happy to oblige,\" Kal said with a smile. Moving behind her, he straddled Kedder's legs and dropped to his knees. The fighter leaned forward, pulling her cheeks apart. \"Lube?\" he asked.\n\n\"I'm good, go slow,\" she said, breathing hard from anticipation and the pleasure coming from her filled sex.\n\nTaking his slickened cock in hand, he placed it at her pucker and slowly pressed inside. The woman growled in pleasure as the head slipped in.\n\nFucking hell. Asses were always nice and tight, but it was even more intense with her stuffed full of the thief too.\n\nAs he continued to push, Falma began taking deep puffing breaths.\n\n\"Are you okay?\" the mage asked, stopping.\n\n\"It's been awhile. It's uncomfortable, but I like it. Don't stop,\" she replied.\n\nHe nodded, even though she couldn't see him, and continued pressing. After an excruciatingly long time, his hips finally bumped into her bottom. She pushed back into him, enjoying that slight extra stretch from the base of his prick, before carefully sliding forward on both cocks inside of her.\n\nA quiet grunt from off to the side drew their attention. All three looked over to see the priestess with her hands between her legs and her knees drawn nearly up to her chest. The cleric's face turned bright red as she rode out her climax. Her legs finally came down a few seconds later as her body relaxed. She opened her eyes to see them watching her. Her face attempted to turn even brighter red from embarrassment but that didn't stop her hand from continuing to stroke the lips of her sex.\n\n\"Nice,\" said Kedder. \"If you do it again, I'd much appreciate it if you turned this way so we could watch. I think they might like it too.\"\n\nElden thought about it for a moment before scooting around so the others could see if they wanted.\n\nHer old way of thinking raged at her behavior. How could she present herself to these people like this? How could she share with them one of her most intimate moments? The answer was easy, she no longer saw them as below her. They had rescued her, killed for her, and nearly died for her. They were her equals. They were her party. The other members were celebrating being alive after everything they went through and this was her way of participating.\n\nFalma chuckled, though it came out as more of a moan since she started moving again as well. \"I should be offended, staring at the priestess while your cock is inside me.\"\n\nKedder looked up and smiled. \"With mage-boy in your ass, I can't see what's going on down there. It's mighty nice of her to let us look.\"\n\n\"I was kidding, I don't mind,\" the fighter said, picking up her pace and silencing any further conversation.\n\nKal looked over at the priestess occasionally but enjoyed the sight of sliding in and out of Falma's bottom more. She was going a bit slow for his liking, but he doubted she was the kind to blue ball him after she got off, so he wasn't too worried about it.\n\n\"Faster Kal,\" she moaned.\n\nThe mage grabbed the woman by the waist and sped up as Kedder began thrusting up into her. The intense stimulation had her growling through her first orgasm within a few minutes. The only reason Kal didn't immediately follow was her rear clamping down on him so hard he stopped moving for fear of hurting her. A couple of seconds later Kedder thrust up into the fighter and pumped his seed into her. Unlike her bottom, Falma's sex was more than slick enough for the thief to continue thrusting through her orgasm, which she seemed to enjoy immensely. Kal started moving again as she came down from her climax. The fighter dropped down, trapping the thief's softening prick inside her then started begging the mage to go faster and fill her ass.\n\nKal was more than happy to do as she asked, gripping her hips and pounding his cock into her backdoor. His hips stuttered and he slammed into the woman a few times before grinding himself against her bottom as he filled her rear entrance.\n\nFalma pushed back and shrieked, coming a second time as the mage spent himself in her. Kedder had reached down and vibrated her clit with his fingers the same time Kal began slamming into her ass, setting her off.\n\nTo the side, a quiet grunt, the third so far, signaled another orgasm for the priestess.\n\n\"Stay inside me as long as you can, Kal,\" the fighter said, panting. \"It's not often I get to be filled like this.\"\n\n\"If that's the case,\" Kal reached behind him and cast the rejuvenation spell, his prick immediately hardening inside her. For the hell of it, he angled a second spell downward toward where he figured Kedder's balls to be and felt the swordswoman tighten as the thief let out a yelp of surprise.\n\nFalma slid back, impaling herself fully on the cocks inside her. \"Today is going to be a good day,\" she said, smiling.\n\n------\n\nKal awoke from a gentle nudge on his shoulder.\n\n\"Whuh?\" The nudge was too heavy to be Ria. The sprite was on watch since the rest of them were too exhausted to stay awake, at least for the first shift.\n\n\"Kal, wake up, I need help,\" said the priestess.\n\nHe blinked a few times until his eyes finally focused on her. \"What do you need?\"\n\n\"My legs still aren't working properly and I have to... go.\"\n\n\"No problem,\" he saw that she was still naked. \"Do you need me to get dressed, first?\"\n\nShe shook her head, \"If you take that much time, I'll make a mess here in the tent.\"\n\n\"Got it.\" Sneaking out of his bedroll, which he suddenly realized was Falma's not his, he picked up the cleric and carried her outside. The wind was biting but his acclimation spell kept things comfortable for both of them. Just outside the camp, he set her down on wobbly legs, steadying her as she squatted down.\n\n\"Thank you,\" she said, looking up at him, her face red with embarrassment from doing something as dirty as peeing in front of him. Lowering her eyes to his cock she spoke softly, \"That was in Falma's mouth, sex, and bottom. The thief also put his seed in her all three ways. It was even inside your sprite at the end of your little orgy.\"\n\nKal smiled at the memory of Ria showing them she could indeed grow big, offering his cum to Falma since she was still unsure about her body's strange pulsing their last time together.\n\nWithout warning, Elden leaned forward and took him in her mouth. His prick reacted the normal way, but this wasn't a blowjob. She was tasting and savoring the part of his and the other two's fun that she didn't get to experience. A minute later she pulled back and looked up, \"Thank you... again.\"\n\nThe mage nodded and bent down to carry the woman back to the tent.\n\n------\n\nSeeing the wall in the distance, they turned southeast toward the nearest outpost, a smaller one further north on the wall from where they entered the plains.\n\nBy the time they reached the wall, the priestess's legs almost worked normally again. The intense pride Kal felt as she showed off her tottering walk the first time was shadowed by the reminder that he wouldn't be there to see his son take his first steps. Still, he was genuinely happy for her.\n\nElden picked up the habit of running her fingers over where her legs were reattached whenever deep in thought or distracted. Thanks to Kal's potion, there was no visible scarring but there was a line just below the surface which was slightly harder than the surrounding skin.\n\nAfter passing through the gate, which they had to dismount and walk their horses through since it was little more than an oversized door instead of a gate, it was a short ride to the road that would take them back to Lantaris. With the city's western gate in sight, Elden pulled them off the road.\n\nThe priestess popped the magical seal on the scroll case and pulled out the map. \"I believe you've earned this,\" she said handing it to Kal. Thanking her, the mage called for Ria and stepped around his horse, using the mare to block his activities from those passing on the road. She turned to the rogue and swordswoman, \"Your oaths will be appeased when we step through the gate. It's strange to say, but I'm sad that I won't be able to see you again. I could put in a good word for you but given that I work in a cathedral and not the main church, my requests would likely be ignored.\"\n\n\"Thank you, priestess, but we're good,\" said Falma, smiling. \"I'm thinkin' Kedder and I oughta travel together for a bit. He knows his way around a fight and has a decent prick too.\"\n\n\"Whatever,\" he scoffed, \"you'll put a foot in my ass and boot me out the door first time we fuck without mage-boy's spell.\" He turned to the cleric, \"I keep telling her she's gonna be disappointed, but she just won't listen.\" The priestess smiled at their antics as they continued their friendly, and somewhat raunchy, bickering.\n\nKal walked back around his horse and handed the map back to Elden. \"Thank you, priestess, this will be a huge help.\"\n\nShe stared at the map in her hand in confusion. \"Did you memorize it?\"\n\n\"No, I copied it.\"\n\n\"But... you can't! All of these maps have strong enchantments on them that prevent anything from being copied!\"\n\n\"My apologies, but I can't tell you how. All I can say is that it is related to how I changed our contract and the runes you saw on my back,\" he said, holding up the smaller copy he made as proof.\n\n\"Fine,\" she said in a huff. \"Keep your secrets.\" Inside she was thrilled, giving the map back meant she didn't need to let the cartographer fuck her tits anymore.\n\n\"Where do you think you'll go?\" Kal asked Falma and Kedder.\n\nThe swordswoman shrugged and looked down at the thief. \"East probably,\" said Kedder. \"The last few weeks, news has been filtering in about a power vacuum over in Carriston. Sounds like Gerran has some new help and is turning things on its head over there. Might see if he needs some light fingers and extra muscle.\"\n\n\"Maybe someone took out that fucker, Kogen,\" growled the fighter. \"I may not be best friends with monster girls like you, Kal. But using them as slaves is fucked up.\"\n\n\"That sounds strangely familiar,\" Elden said testily.\n\n\"What?\" asked Falma but Kedder nudged her and signaled for her to keep quiet. This looked interesting.\n\n\"Uh oh,\" said Kal.\n\n\"Took out a slave ring in a city to the east and bested the leader in combat. Sound familiar?\"\n\n\"Wait... wait... wait... you took out Kogen?\" asked Falma.\n\nKal cleared his throat. \"Umm... you were wearing his armor and had his sword in the tunnels.\"\n\nKedder looked up at the woman, \"If that was his armor, it explains why nobody fucked with him for so long.\"\n\n\"You said those were your first kills down in the tunnel though.\"\n\n\"Please don't remind me. They were. The spear was in my hand but one of the ex-slaves actually stabbed him.\"\n\n\"Ex-slaves? Dog-girls?\" asked Kedder.\n\nKal nodded.\n\n\"Ugh!\" everyone turned to see Elden looking at Kal with disgust. \"Last... you... inside... dog-girls! UGH!\"\n\n\"I'm confused,\" said the fighter, unable to understand the cleric's reaction.\n\n\"If you two are headed East, wait by the forest edge, I'll explain then. I have to go back that way to pick up my tent and companion. But I need to drop off my horse and check the market before I leave the city. If my friend is still here, I want to say goodbye and I'll be following right after. If she wants a more intimate farewell, I may be along tomorrow morning. Of course, if she isn't there I'll catch up in a couple of minutes.\" He untied Ria's bag and tossed it up on his saddle. \"Ria, I need to change,\" he said, walking around to the far side of his mare again. When he grabbed her bag and mounted up, he was in the same clothes as when they first met.\n\n\"Hiding monster girls inside the city?\" Elden snapped.\n\n\"Nope, this one is all human. Believe it or not, they don't have to have fur or scales for me to get hard.\"\n\n\"Ain't that the damn truth,\" said Falma, laughing as she mounted her horse.\n\nElden mounted up as well and turned her mount back onto the road, snorting in disgust. Once her back was to the rest of them, she allowed herself a small smile as memories of the other night came back to her. Even having Kal's dick in her mouth and knowing that it had been in monster girls before didn't seem quite so bad, not that she'd ever let him know that.\n\n------\n\n\"You're a very different woman from the one who left a few days ago,\" said the Abbott.\n\n\"Yes, I am.\"\n\n\"While I am sorry that things turned out so poorly for you, and I certainly wish you could tell me how you managed to get your legs back, that is good to hear. Your attitude had become so inflexible and filled with contempt I didn't think I could name you as a successor. I am still going to wait to do so. I wish to make sure this change is permanent first.\"\n\nHe raised an eyebrow \"I am surprised that you are not screaming for the blood of all monster girls after what they did to you.\"\n\nBefore she and the others parted, all of the oaths of secrecy were exchanged for promises to be careful and not use anyone's names. Elden was thankful for those changes, giving her report would have been nearly impossible without them.\n\n\"No Father, the man who saved my legs has willfully taken monster girl as lovers. He could have turned and walked away when the ants took me but instead risked his own life by staying and helping. He was instrumental in both rescuing and curing me. Despite my personal feelings on monster girls I cannot, in good conscience, say that he is a bad person.\"\n\n\"Demon-lovers can be tricky.\"\n\nElden shook her head, \"He put his life in my hands, knowing that I hated what he was, and trusted in me to be a good person. That is not a demon's method.\" She wasn't going to mention the initial failure of his plan to restore her legs. Kal had been very tight-lipped about what suddenly changed. She had a feeling from his attitude when asked about it that he sacrificed something to get the process to work. The priestess just didn't know what.\n\nThe Abbott studied her for a moment. Chin upturned, back straight, defiance in her eyes as she stoically defended this person who became her friend, though she would never, ever call him that.\n\nThis turned out to be so much better than he anticipated.\n\n\"So be it,\" said the older man. \"On to other business. There have been reports of strange dreams among the clergy of late ...\n\n------\n\n\"Inside,\" she snarled at her assistant.\n\n\"But... but...\" he had never been allowed in her quarters.\n\n\"NOW!\" she yelled. The young man jumped and rushed through the door. The bits of enchanted glass set in the walls to provide light came to life as he crossed the threshold.\n\nHe stood in the middle of the large apartment watching worriedly as she closed and locked the door behind her, then uncovered the crystal globe that soundproofed the priestess's quarters.\n\nShe pulled a chair away from her dining area and slammed it onto the floor next to him. \"Strip. Sit,\" she commanded.\n\nHer assistant obediently pulled his robes over her head and began folding them like normal.\n\nStepping over, she ripped the robes from his hands and tossed them away. \"Sit!\" she yelled pointing at the chair.\n\nHis butt couldn't have hit the cold wood of the chair's seat any quicker.\n\nOnce the young man was seated, she began nonchalantly taking off her robes. \"While I was gone, I had an opportunity to have some fun with the others I was with. Should the opportunity arise in the future, with them or another group, I will take them up on their offer.\"\n\n\"Y-Yes mistress.\"\n\n\"That's all you have to say? I may have another man's cock in my throat, in my cunt, or in my ass and that's all you have to say? Don't you care?\"",
        "\"Y-Yes mistress, I do care. But it is not my place to choose who you lie with.\"\n\n\"Choices be damned. How do you feel when I tell you I'm going to let another man fuck me? Answer truthfully.\"\n\n\"Sad, angry, afraid I have let you down.\"\n\n\"Why?\"\n\n\"Because... I love you, mistress.\"\n\n\"I thought so.\" She finished undressing and threw a leg over his lap. With one hand she lined him up and slid down his length. The boy had yet to disappoint unless he had just spent himself moments ago. \"I meant what I said earlier,\" she continued. \"I will go fuck other men. I will enjoy their cocks inside me. But this time I laid there and played with myself as three others fucked like rabbits. Do you know why?\"\n\n\"No mistress.\"\n\n\"Because I realized I love you too.\" she suppressed a smile as the young man's breath caught from her words. \"I said I will go fuck other men and I may even give some women a try too. I wasn't lying, it will happen. But after every one of them, I will come back to you. I may wander, but my home is right where I'm sitting, with you inside me where you belong. Do you understand?\"\n\n\"Yes, mistress.\"\n\n\"Just because I told you I love you doesn't mean anything will change between us.\"\n\n\"As it should be,\" he answered, suppressing a smile at the obvious lie.\n\n\"Good, now stand up and carry me to my bed. I need to feel my legs wrapped around you.\"\n\nThe young man held her tight. \"As you wish,\" he said, standing up without slipping out of the priestess.\n\nAs her heels locked behind his back, the memory of Falma's lips sliding over Kal's prick popped into her head. She looked down at her assistant and lover as he carefully carried her into the bedroom.\n\n\"Do you know of any girls looking for a mistress?\"\n\n \n"
    ],
    "authorname": "BluDraygn",
    "tags": [
        "action",
        "anal",
        "dp",
        "fantasy",
        "group",
        "magic",
        "monstergirl",
        "nudity",
        "oral",
        "trc"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/trc-searching-for-the-sky-ch-23"
}