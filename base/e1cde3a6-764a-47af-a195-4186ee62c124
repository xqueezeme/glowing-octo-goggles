{
    "title": "Dream within a Dream Ch. 02",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 6 - Investigation \n\n\"That Carole is becoming a handful.\" said Phyllis as she and Laura sat down in the den of the Mountain Nest. \"Just like her daddy was at that age. I'm glad I'm staying in the guest bedroom. I don't think I have the energy to go downstairs.\"\n\n\"And it's safer for you to be up here while Don is away.\" Laura said. \"Well, we finally got them to sleep, and Bowser is right under Carole's crib, as always. Let's watch the eleven o'clock news before we head to bed.\" She used the remote to turn the TV to Channel Two.\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded reporterette. \"We are bringing you live coverage from Jacksonville, where the State execution of white supremacist and cop-killer Lance Priemus has just taken place. But something went terribly wrong during the execution! We now go to KXTC's John Hardwood at the scene!\"\n\n\"Yes, Bettina, something just went horribly wrong!\" shouted Hardwood from outside the gates of the prison, as if shouting made the story be more important or would give it more drama. \"I was in the witness room, watching the execution. Lance Priemus was being injected with the lethal cocktail of drugs that would end his life when he started screaming in agony! The first drug is supposed to sedate him and the second drug should've paralyzed him, but I and everyone else witnessed him screaming in pain, writhing in pain and trying to break free of the straps holding him onto the table!\"\n\n\"What? What's that?\" Hardwood said, then looked back at the camera again. \"Bettina, we've just gotten word that Commander Donald Troy of the Town & County Police is at the scene, and that State Governor Val Jared has already called him into SBI duty and asked him to lead an immediate investigation! I repeat: TCPD Commander Donald Troy is now in charge of the investigation into what went wrong in the execution of convicted cop-killer Lance Priemus...\"\n\n* * * * * * * * * * * * * * * *\n\nAs I hung up my cellphone, I turned to the Warden. \"Warden, you probably know that the Governor has just deputized me into the SBI and instructed me to investigate what went wrong.\"\n\n\"Yes, Commander.\" said the Warden. \"We are at your service. Whatever you need.\"\n\n\"I need the Jacksonville Police Department to send their Crime Lab team here immediately.\" I said. \"With plenty of evidence bags and containers for liquids. I need for you to lock down this prison; no one is to enter or leave, except that Crime Lab team. Any guards or officers that were on duty and inside need to be inside; if they left, they need to be called back immediately. Record who is here and who might have left. I need for all of the video taken from all of the cameras in this prison for the entire day to be preserved as evidence. Next, I want some scissors so I can cut this tie off my gun and the guns of my officers, here. Last, get the Media out of this Prison. Immediately and completely.\"\n\nI turned to Cindy and Martin Nash. \"Sorry guys, but we've got a long night ahead of us.\"\n\n* * * * * * * * * * * * * * * *\n\n5:00am, Wednesday, August 26th. It had been a productive six hours. The Jacksonville PD Crime Lab had been pretty good, and had taken evidence of the drugs used in the execution, carefully noting which line they came from, all of it being videotaped.\n\nThe JPD had also bagged the videotapes for evidence, and had put them in a guarded room in which no Prison guard nor officer was allowed to enter. We also interviewed every guard on duty. I'd taken great pleasure in going into the death chamber and surrounding rooms, then looking at Watch Captain Lockhart and saying \"Well, Lockhart, I guess I get to come back here in spite of you.\"\n\n\"Won't do you no fucking good.\" snarled Lockhart. \"Cop-killer is dead.\" He had me there, I realized.\n\nEarly on, there had been one issue. A family member of Priemus, a man becoming overweight and speaking with a heavy Southern accent, had become angry.\n\n\"My cousin just died a horrible, painful death.\" he thundered. \"That's just not ri-ight.\"\n\n\"Sir,\" I said, \"that is why the Governor has asked me to investigate this.\"\n\n\"Who the hell are yuuuu?\" the man drawled.\n\n\"I'm Commander Donald Troy, working with the SBI--\"\n\n\"Hell, you're one of them, then.\" said the man. \"Why the hell should I trust yuuu?\"\n\nCindy was becoming indignant and about to say something. I put a hand on her shoulder, which immobilized her, then said \"You know, sir, you're right. Detective Nash! Please call FBI Agent Les Craig in Southport. Ask him to send an FBI agent up here to work with me, or at least to observe my investigation. Do that now, Mr. Nash.\" Nash fished out his cellphone and walked out of the room.\n\nI turned to the man. \"Will that do?\" I asked.\n\n\"Yeah, I guesso.\" the man said, still surly but knowing he'd just had his bluff called.\n\nAt 3:00am, I was interviewing one of the three men who'd been tasked with pressing the buttons. He said they were brought in after the whole thing was set up, and he had no idea of anything but pressing the buttons. Just then, Cindy burst into the room. \n\n\"Guess what?\" she exclaimed. \"Dora Ellis was in the crowd and Nash spotted her. He arrested her on the spot and is bringing her inside!\"\n\n* * * * * * * * * * * * * * * *\n\n\"You have no right to arrest me.\" Dora hissed. She was not an attractive woman. Her brown hair hung limply down the sides of her face. She was beginning to put on weight, the kind of weight that would stay with her for the rest of her life as she aged. \n\n\"So why did you come down here for the execution of the man you had convicted with your testimony?\" I asked.\n\n\"Am I free to go?\" Dora asked.\n\n\"Not yet.\" I said. \"Answer my questions, and then you can be on your way. Again, why did you come down here?\"\n\n\"Am I being detained against my will? Do you have a warrant to arrest me?\" Dora snarled. \"If not, I demand to be released immediately.\"\n\n\"You are being detained on the probable cause of suspicion of involvement with the nature of Lance Priemus's death.\" I said.\n\n\"I want a lawyer. I demand a lawyer... NOW!\" Dora said, her face getting uglier in its ferocity.\n\n\"Fair enough.\" I said. \"Nash, call this woman's lawyer for her.\"\n\n* * * * * * * * * * * * * * * *\n\nThe lawyer strode in about 20 minutes later. \"I am Forrest Gillis, of Gillis & Partners, P.C. in Southport, and I am representing Mrs. Ellis.\"\n\n\"Formerly of Gresham & Mason, I perceive.\" I asked as I peered at the thirtysomething man.\n\n\"How... how did you know?\" the man gasped, his eyes widening as he stared at me. Then he got control of himself. \"Why are you detaining my client, Commander Troy?\"\n\n\"Ah, I see you know me, too.\" I said, grinning. I opened the briefcase I'd brought with me, and had left in my SUV until an hour before.\n\n\"I just happen to have here a copy of the plea deal Mrs. Ellis made with Westphalia's Prosecutor's Office.\" I said. \"She was and is required to cooperate with authorities, and answer all questions pertaining to the Lance Priemus murder case. As Priemus's execution is part of that case, and as it is obvious to me that someone arranged the drugs in the wrong order so that he would die painfully, and with Mrs. Ellis happening to be on the scene, I believe she has to answer my questions on this.\"\n\n\"If she doesn't,\" I continued, \"I'll drive straight up to Westphalia and tell them Mrs. Ellis has violated this agreement, and they will come after her for conspiracy to commit murder with aggravating circumstances, which carries no Statute of Limitations in this State. She'll go to prison, and may end up on that same table Mr. Priemus was lying on just a few hours ago.\"\n\n\"I'm not talking to this son of a bitch.\" hissed Dora.\n\n\"Commander, I need a moment with my client.\" asked Gillis.\n\n\"By all means.\" I said, then turned to Nash. \"Detective, escort them to the little room over there.\" It was a closet. \"You'll have privacy, at least.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay,\" said Gillis after they were done and had returned, \"I'm going to monitor your questions, and I'll advise my client not to answer any that I think are outside the scope of that agreement. If we disagree on what's what, I'll tie it up in Court for years.\"\n\n\"Good enough.\" I said. \"Dora, why did you come down here to witness the execution of Priemus?\"\n\n\"Morbid... curiosity.\" Dora said, her voice a sneer.\n\n\"Have you seen Priemus since his trial?\"\n\n\"No.\" \n\n\"What have you been doing with your life since the trial?\"\n\n\"That's outside the scope of the agreement.\" the lawyer Gillis quickly said.\n\n\"Dora, are you the daughter of Henry Boxman of San Francisco, California?\"\n\n\"That's outside the scope.\" said Gillis.\n\n\"I beg to differ.\" I said. \"And I'll show it: Dora, was Lance Priemus a White Supremacist?\" The lawyer and Dora looked at each other, and the lawyer whispered something to Dora.\n\n\"I wouldn't know.\" said Dora.\n\n\"Oh?\" I asked. \"I have a transcript of your testimony in the Priemus trial. You said he was constantly calling the police officer and his wife the 'n-word' while he was raping her in front of him. Then you testified that he said, and I quote, 'this is what niggers deserve!' as he slit the man's throat. Is that not accurate?\"\n\n\"Yeah, that sounds right.\" Dora said, her voice disinterested.\n\n\"So, one more time... was Priemus a White Supremacist?\"\n\n\"Again, I don't know.\" Dora said. \"Using the n-word doesn't mean he's part of the Klan or anything like that. Yeah, he hated niggers, but so what?\"\n\n\"Like you do, judging from what you just said?\" I asked.\n\n\"I got nothin' for 'em.\" said Dora. \"But that don't mean nothin'.\"\n\nI glanced over at the legal beagle, who was peering at me with something bordering of avid interest on his face... but also concern.\n\n\"Okay, so one more time,\" I said, \"and per this plea deal agreement you must give truthful answers: so you are confirming to me that neither Lance Priemus nor yourself were or are members of any White Supremacist group?\" The lawyer quickly whispered something to Dora.\n\n\"I can't speak to Priemus.\" Dora replied. \"I don't know either way who or what he was a part of. I had nothing to do with the Klan.\"\n\n\"Or any other group?\" I pressed. \"Are you now or have you ever been a member or associate of any white supremacy organization?\"\n\n\"What's the point of this?\" asked the lawyer.\n\n\"Answer the question, and truthfully.\" I said. \"And in front of all these witnesses.\" Several officers, including Nash, Ross and FBI Special Agent In Charge Les Craig were watching and listening.\n\n\"No.\" said Dora. \"I am not a member of any white supremacy organization.\"\n\n\"And you never have been a member of any white supremacy organization?\"\n\n\"What is the fucking meaning of this?\" Dora shouted. \"I just said--\"\n\n\"YOU JUST SAID...\" I shouted, then returned to calmness \"that you are not presently a member of any white supremacy organization. Now I'm asking you to state for the record and truthfully: have you ever been a member of any white supremacy organization?\"\n\n\"No, asshole.\" Dora said. \n\n\"What about your father, Dora?\" I asked. \"Is he or was he ever a member of any white supremacy group?\"\n\n\"That's enough.\" said the lawyer. \"That's outside the scope. And I've had about enough of your badgering my client. Wrap it up, Commander, or I'll have her invoke and fight you like hell for years if you try to fuck up the plea deal in Westphalia.\"\n\n\"Oh, I'm done.\" I said, getting up. \"Or more accurately... Dora is.\" I turned to Cindy. \"Captain, I need written affidavits from everyone here of what they just witnessed and heard.\" The lawyer Gillis looked very, very uncomfortable as he escorted Dora out of the room.\n\n* * * * * * * * * * * * * * * *\n\nThe drive back was long, and we were tired. FBI Special Agent Julius Jefferson had happened to be in Southport, and volunteered to drive us all the way back up to our Town, whereupon transportation would be provided by the FBI to get him to his home. With all the evidence loaded into the back of my Police SUV, we headed home.\n\n\"You obviously had something up your sleeve while you were questioning Dora.\" Cindy said as she and I sat in the backseat, letting Nash ride 'shotgun'. \"What was that all about?\"\n\n\"She fucked up.\" I said. \"I got her to lie about not being in a white supremacy group. She should've invoked and let her Gresham & Mason legal beagle fight for her.\"\n\n\"And her father?\" Cindy asked.\n\n\"Is in California, and safely out of my reach for now.\" I said. \"Now no more questions until we get home. I've got to think about all this.\" With that, I settled into a reverie... which quickly turned to sleep.\n\n\"Oh, Commannnnnderrrr...\"\n\nI was dreaming again, at least I was dreaming that I was dreaming it. I was driving on some limitless road through farm fields. The light was a pale, yellowish haze, actually drained of color. And there in the shotgun seat was Angela Harlan, naked, her firm breasts bouncing up and down, her nipples hard.\n\n\"What now?\" I asked, my voice eerie in the dream state.\n\n\"You're on the right track.\" Angela said. \"But remember... she's not what she seems to be...\"\n\n\"Who?\" I asked. I opened my eyes, and was back in the SUV, and we were riding on the Interstate towards Midtown. I turned and saw that Cindy was staring at me.\n\n\"Did I talk in my sleep?\" I asked.\n\n\"Just the word 'who?'.\" Cindy replied. Her own voice was sleepy, and soon we were both falling back into our dream worlds...\n\nPart 7 - Agents, Chemical and Federal\n\nWe got back just at 1:00pm, Wednesday, August 26th. We first stopped at the Crime Lab building, transferring the evidence with all the proper signatures, and with me making some suggestions to Dr. Woodrow about what tests to run with immediate priority, and what safety precautions to take.\n\nAfter I instructed a Uniformed officer drive FBI Special Agent Jefferson to the Federal Building, Cindy said quietly to me \"I heard you making suggestions to Dr. Woodrow. Do you have an idea of what happened?\"\n\n\"Several theories,\" I said, \"which require facts to bear out. That is what the Crime Lab will give me. Okay, I need to go talk to the Chief real quick. Write up your report as soon as you can.\" I went to the Chief's office, into which I was immediately admitted.\n\n\"Wow, that must've been a horrible thing to witness.\" said Chief Bennett after I told him what had happened. \"Any idea what caused the botched execution?\"\n\n\"I'm waiting for the Lab to run the tests,\" I said, \"but I'll bet dollars to doughnuts that the order of the drugs was switched, or else a different drug was introduced first, which caused Priemus great pain.\"\n\n\"A mistake, or deliberate?\" asked the Chief.\n\n\"That depends on the tests.\" I said. \"Either way it's going to be politically explosive. So how did Croyle and Perlman do while the Crowbar Cats were away?\" The Chief told me that nothing had happened the night before, and that Perlman and Croyle had done well leading their units doing nothing in particular.\n\nAfter being dismissed, I went into my office and called my wife. \"I'm back in the office.\" I said. \"We'll do the checkup tomorrow. Tell Bonnie I'll talk to her after the checkup.\"\n\n\"Okay, darling.\" Laura said. \"By the way, the FBI is beginning its investigation of Sharples giving Priya that information about Janet. Jack Muscone might want to talk to you about that.\"\n\n\"Not until I've had some sleep.\" I replied. After telling my wife I loved her (very true) and hanging up the phone, I told my assistant Helena that I was not to be disturbed until the lab results came back. Then I curled up on the sofa for some sleep. The Black Widow did not visit me.\n\n* * * * * * * * * * * * * * * *\n\nAt 4:00pm, I was buzzed awake by Helena. A minute later, Dr. Woodrow and J.R. Barnes of the Crime Lab came inside, handing me a folder with the expedited results.\n\n\"The saline solution went in first.\" said Dr. Woodrow. \"That's normal, but there was an extra compound that was inert in and of itself. Then the first chemical, which was supposed to be a sedative, was actually what was normally the third compound to be administered, the potassium solution. This solution also had a compound that was inert in itself, but inside the bloodstream reacted with the extra chemical from the saline solution... and the resulting chemical was a toxin you might be familiar with.\"\n\nI looked at the sheet of paper. \"Holy shit!\" I said. \"That's a military chemical agent!\"\n\nJ.R. Barnes asked \"Do they have binary agents like that in the military, sir?\"\n\n\"Absolutely.\" I said. \"In fact, our artillery-fired chemical weapons have to be binary in case of a leak. When the shell is fired, the chemicals are mixed by the spinning of the round and is toxic when it arrives on the target. This was the same thing... just by injection instead of artillery. Jeez...\"\n\nI then looked up. \"Gentlemen,\" I said, \"this also just became classified information. Dr. Woodrow, contact the FBI about it, and they'll notify the Army. It'll remain in our evidence servers, but under encryption and every aspect of it sealed and treated as classified information. Make sure the Lab knows of the potential danger so that these chemicals are not accidentally mixed and we have a really bad thing happen in our Crime Lab.\"\n\n\"I've already isolated the compounds from each other.\" said Woodrow. \"And we're in the process of protecting the evidence as classified information. But you or the Chief have to personally notify the FBI or the Army.\"\n\n\"Then I have a phone call to make, right now.\" I said. I suited the deed to the word.\n\n* * * * * * * * * * * * * * * *\n\nThe press conference was being held at Courthouse Square, in front of the State Office Building on the north side, at 5:30pm. As I made my way to the podium for my statement, I noticed that local citizens were milling about, and some stopped to watch while others went on their way. I noticed several old people sitting on benches, some openly watching, some pretending not to but furtively looking over. I thought I saw Old Mrs. Boddiker in the distance with another old woman, who was wearing a shawl even on this warm day and whom I didn't recognize. Unfortunately, I didn't have time to observe; my bodyguard of Uniformed officers was moving me to the podium like a river of humanity flowing down the sidewalk.\n\nBeing a press conference about a huge story, it was very well attended by elements of the rabidly voracious Media. I noticed the blonde Diane Williams from the City, rudely pushing through people to get a prime spot in front. Priya Ajmani was getting jostled around by a couple of men until she elbowed one of them in his nuts. I also noticed representatives of the National News Networks were present; they were following the botched execution story, which had a huge national following by now.\n\n\"Ladies and gentlemen,\" I said to start the press conference, seeming to feel the eyes of the State and even the Nation upon me through the many cameras, \"my name is Commander Troy, and at the request of the Governor I am the lead investigator of the execution incident, in cooperation with State and Federal authorities. We have determined that the order of the introduction of the drugs was changed, but also that foreign chemical agents were inserted into the bags of drugs normally used for the executions. These agents reacted when mixed to form chemicals that caused Mr. Priemus great pain before he died.\"",
        "\"There is no way this could be accidental.\" I continued, which hushed any buzz in my audience. \"There is no way that these chemicals could be accidentally introduced during the manufacture of the drugs, nor be the result of any natural reaction of the drugs. Therefore, I have informed the Director of the State Bureau of Investigation that this should be considered a murder-with-malice case, and I've requested they open a further investigation as such.\"\n\n\"Furthermore,\" I said, \"due to the special nature of the foreign drugs introduced into the system, I've notified the FBI that their assistance will be required, and they will be sending Special Agents to work with the SBI in investigating further. That is all I have for now. Thank you.\"\n\n\"Commander!\" screamed out Bettina Wurtzburg, \"will you be personally working on this case going forward?\"\n\n\"That'll be for the SBI and FBI to decide.\" I said.\n\n\"Commander, what were the foreign drugs that caused the prisoner to suffer so greatly?\" asked John Hardwood.\n\n\"I am not at liberty to discuss details of that nature.\" I said. \"Those details will have to be given to you by the FBI. Thank you for coming, and I'll be taking no more questions at this time.\" With that, I made my way off the makeshift podium, but it took a cordon of Uniformed TCPD Officers to get me through the crush of shouting reporters to a police cruiser and out of there.\n\nI would see it later on TV: Pastor Raymond Westboro was using the moment to call for the end of the death penalty by lethal injection, and really for the end of the death penalty in the State altogether. The reporters were in a Media feeding frenzy as they got the opportunity to talk to an actual witness of the death of the unfortunate Lance Priemus, and Pastor Westboro really laid it on thick for them...\n\nPart 8 - Doctor Appointments and Dreams\n\nMy wife often had the lovely black Nurse Jones assisting as Laura performed my examination and took blood and urine samples. But not today, and for good reason.\n\nIt was Thursday morning, August 27th, at 9:30am, and we were in the clinic attached to my wife's office. The media frenzy was still going on regarding the execution, and this was a good place for me to hide out. Director Lewis had publicly thanked me and my Crime Lab for finding out what happened, then announced that a special Task Force was taking over, led by Deputy Director Robert Gaston and Agent Carter Fischer.\n\nAnd then FBI Special Agent In Charge Jack Muscone barreled in and said the FBI was taking over the lead of the case. The FBI had put out word that \"insecticide-like chemicals\" had been introduced to the bags of drugs. Technically that was true: some of the most potent insecticides in use today, which are not easily available to the Public, are very similar to military chemical agents.\n\nBut my wife was using this opportunity to talk about something else, hence the need for privacy: Company business. \"The FBI interviewed Sharples yesterday.\" Laura said. \"He had his lawyer present. He readily gave up his phone for examination. The text Priya received was from that cellphone's number, but the text wasn't there in his phone. And by that, I mean it never was there: as you know, erasing a text doesn't truly erase it, and the FBI's forensic people determined that it had never been on that phone.\"\n\n\"So he removed the SIM card and used it in another phone?\" I queried.\n\n\"The forensics people think that did not happen. They didn't see evidence of the SIM card having left that phone.\" Laura said. \"It is possible to mimic a SIM card if one has the correct, very sophisticated, and highly classified equipment... but tell me this, darling: does Sharples seem like the kind of guy who is smart enough to do something like that?\"\n\n\"He is cunning, street-smart if not brain-smart.\" I said. \"Obviously he would've had help to do something like that. Not to mention to obtain that information in the first place.\"\n\n\"Exactly.\" Laura said. \"Dr. Casey B. Walker has torn what little hair he had right out of his head over this.\"\n\n\"He thinks I somehow did it, of course.\" I said, peering at my wife. She met my glance.\n\n\"Yes.\" she said simply. \"He thinks you're involved. He still does not understand how you showed up at that warehouse to get Priya so quickly, and then he extrapolates out that if you could do that, you could accomplish this Sharples thing.\"\n\n\"And what are my means, my motives, and my opportunities for doing so?\" I asked. \"But he's half right: it wasn't hard at all to find the warehouse where Priya was taken... which I'm sure you've told him pissed me off greatly that she was subjected to that by him.\"\n\n\"Oh, he's aware.\" Laura said drily. \"As is all of Langley and the FBI. So, how did you find her so fast?\"\n\n\"By having a matchless knowledge of this Town and County, as any good Police Commander should.\" I said. \"Captain Ross will tell you that I am constantly asking her and my Detectives where streets and buildings are, and I fully expect them to know as well as I do. It was pretty easy to determine.\"\n\n\"Good try.\" Laura said. \"But it won't hold. You don't have x-ray vision.\"\n\n\"Don't I?\"\n\nLaura began to understand. \"Well, if I were inclined to help Dr. Walker against you, which I'm absolutely not, I'd suggest to him that one Myron Milton somehow got onto us. His father deeply hates the Company, and there are a lot of people out there very scared of what Myron himself can do with computers.\"\n\n\"Myron is an excellent police officer.\" I said. \"His father, however, is an eccentric, and he and Myron don't exactly have a normal father-son relationship. So, enough about that... what's going on with these dreams I've been having?\"\n\nLaura replied \"Nothing physically wrong with you, you're in great shape... of course I know that from the way you fuck me every night.\" I grinned as she continued: \"I'll have the semen, blood and urine samples back tomorrow. I'm also going to give Todd an exam later today, and I'll compare results.\"\n\n\"Are you going to take the semen sample the way you took mine?\" I asked. \"With a hot juicy blowjob?\"\n\n\"Why, that sounds like an excellent idea!\" Laura said, as if it were a sudden thought. \"I just might do that.\" I grinned again as Laura said \"And you'll be getting interviewed by Bonnie Karpathian at the same time. Better take a 'gray viagra'; I saw how she was dressed in anticipation of seeing you. She wants your 'other' iron crowbar, and I suspect she's going get it...\"\n\n* * * * * * * * * * * * * * * *\n\nI was lying on my back, naked. Bright but hazy lights were almost blinding me. I felt the wetness of the warm, wet pussy enveloping my cock as the woman bounced up and down on top of me. Looking up, I could see the mane of black hair, the firm breasts bouncing on her slender body, the nipples rock-hard and standing out like spikes.\n\n\"Ohhhh yeahhhhh,\" she moaned, \"sooooo good, Commanderrrrr...\" she moaned. I was fucking up into her black fringed pussy as hard as I could, our groins colliding as she let her weight fall down.\n\n\"She's not what she seeeeeems, Commanderrrr...\" I heard Angela's voice say as she rode me hard. \"Remember...\"\n\nSuddenly the lights were back to normal. It was bright, as sunlight was streaming through the windows. I was on my back on the couch, and it was Bonnie Karpathian on me, my cock buried nuts-deep inside her sopping wet cunt. She was riding me hard, moaning and gasping and tremendously enjoying fucking me. I reached up and squeezed the large, soft mounds of her big breasts. She leaned over and I sucked first one teat then the other into my mouth.\n\n\"Oh God, Don, that's so good!\" Bonnie gasped. I felt the pleasure building up in my hard cock. Grasping Bonnie's ample ass, I suddenly lifted her up and twisted around. We fell to the sofa, Bonnie on her back and me on top of her, still buried in her black-fur-fringed snatch.\n\nI slammed my mouth to hers as I began to fuck her furiously. Bonnie spread her legs wider, pulling them back to give me easier, better access as I drove into her, piledriving my meat into that sweet, wet cunt.\n\nAs I nuzzled her neck and suckled her earlobe, I again thought of Angela Harlan, seeming to hear her voice even as I fucked Bonnie's cunt into a creamy lather. \"Oh yeah, keep fucking away, Commanderrrrr... let it go, work that nut out! Work it ouuuuuuttt...\"\n\n\"UHH!\" I gasped as I felt my nut rise. \"I'm going to fucking come!... UHHH!!\" The gray mist that fogged my eyes rose again as I felt my semen jetting out into Bonnie's eagerly receptive cunt, clutching firmly at my thick, iron-hard shaft as she climaxed yet again, one of many orgasms she'd experienced during our mating...\n\n* * * * * * * * * * * * * * * *\n\n\"Well,\" said Bonnie as we got dressed, \"we could put off the interview for a few days. Of course, I'll do everything I can to fuck you again then, too.\"\n\nI chuckled. \"I'd have no problem with that. But let's go ahead and get it overwith. I have a feeling I'm going to be very busy over the next few days.\"\n\nAnd with that, we began the interview. Bonnie was snuggled up next to me on the sofa as we talked. I was a bit surprised at the direction her questions went.\n\n\"If you can,\" Bonnie said after a few introductory background questions, \"try to separate Angela Harlan's crimes, and tell me about her as a police officer. Was she a good detective? Run of the mill?\"\n\nI thought for a second. \"She was pretty good while she was here with us.\" I said. \"Competent, but didn't really show outward brilliance. But that might've been her holding back on us, or her focusing upon her mission to destroy Selena Steele.\"\n\n\"I will say this.\" I said. \"I've run across her name as having investigated some things in Texas, and it appears she was very good down there. People who knew her but don't know of her crimes would say she was sharp and persistent.\"\n\n\"I got that impression, too, when I went down there.\" said Bonnie. \"Why do you think she left Texas? Just following Selena Steele?\"\n\n\"I...\" I began, then paused. A line of thought in my head had just torn open. I had to fight to not go into a reverie over it. \"I... guess she was just following Selena. I have not considered any other reasons.\" I said. But was that all it was? my mind screamed at me.\n\n\"In my interviews with some of your Detectives and Officers,\" said Bonnie, \"they seem to think that Angela came up here because her cousin Brian was here, then she attacked Dawdle because he was investigating the University's athletics programs for PEDs. Would you agree with that?\"\n\n\"No.\" I said. \"Well, let me put it this way: that's too simplistic. First, some of my officers don't know all that much about the Selena Steele angle, which I think is why Angela showed up here. Now she did exterminate Dawdle because of the threat to her cousin, but that doesn't explain any of her other killings, either here or anywhere else.\"\n\n\"So,\" said Bonnie, \"let's just get to the big one: why do you think the Black Widow targeted Peter Feeley?\"\n\nI sucked in my breath and exhaled, my eyes looking not at Bonnie but out in front of me. \"I don't know for sure.\" I said. \"My team and I had some conversations about it in the aftermath, but it was never quite clear why Pete was targeted. I've always sort of let it go as a target of opportunity, since I don't like to think about it at all.\"\n\n\"Because you lost a police officer?\" Bonnie asked.\n\n\"Not only losing an officer...\" I said, \"... but I've never let go of thinking that we lost him because I failed to take action in time to save him. His loss was my failure.\"\n\n\"Does that drive you?\" Bonnie asked. \"Does that make you work harder?\"\n\n\"Absolutely.\" I said. \"I don't want anyone else to die... because I was weak.\"\n\n\"The Black Widow is dead,\" said Bonnie, \"as are the members of her gang. You've taken revenge, and you've solved numerous other cases. Does that help mitigate the pain you're obviously feeling?\"\n\nI turned and looked Bonnie dead in the eye. \"Not one bit, Doctor.\" I said levelly. \"Not one bit.\"\n\n\"This is beyond the scope of my research,\" said Bonnie, \"so I'll understand if you don't want to answer: what will it take to get over that pain?\"\n\nIt only took a second for me to say \"I'm glad you understand why I'm not going to answer that.\"\n\n\"Okay,\" said Bonnie. As we concluded and I prepared to leave, she said \"Don, is there any way you can coax Lieutenant Perlman into answering my written questions? I submitted them weeks ago.\"\n\n\"I'll talk to her.\" I said, not revealing that I already had talked to Tanya. \"But it's totally her call on what, if anything, she wants to answer.\"\n\nI left Bonnie's office. I decided not to go to see Laura, as she might be interviewing Todd... and fucking his brains out, which I normally would love to watch but wasn't in the mood right now. I left the building, walking towards my SUV.\n\n\"Whaddya say we go get a beer?\" I heard a voice say. There stood Cindy, waiting for me.\n\n\"Yeah, I could use one.\" I said.\n\n* * * * * * * * * * * * * * * *\n\nShe's not what she seems...\n\nThose words haunted me as Cindy and I took our tall frosty mugs of ice-cold beer to the outside patio and our table in the very back under the umbrella awning. It was not quite shift change time, so there was almost no one at the Cop Bar yet.\n\n\"So, how did it go?\" Cindy asked.\n\n\"Not too bad, I guess.\" I said. \"The funny thing was, I started realizing some things that I'd never thought of before.\"\n\n\"Anything you care to share?\" Cindy asked. \"Or will I need to pry those thoughts out of you with a crowbar?\"\n\n\"Well, let me say this.\" I said. \"We know Harlan followed Selena Steele up here, tried to frame Selena for capital murder. But I've also come across some things as I was investigating Sharples and also some of these Shadow Man and Superior Bloodlines connections. And I keep coming across Angela Harlan's name. She was considered one hell of a badass Detective down there, and I think she was actually beginning to get on the trail of some of the things we're just discovering now.\"\n\n\"And she left you some names connected with all that.\" Cindy said. \"But don't tell me she wasn't bad... sometimes I wish you'd kept me as well as Tanya out of Feeley's crime scene. I will never forget that.\"\n\n\"Neither will I.\" I said. \"For me, I let it burn deep. It drives me to finish all this. No, Angela was a horrific serial killer, but let me tell you what I'm thinking by asking this question: why was Angela following Selena Steele from State to State? And I still never got an answer for why she selected Feeley as a target.\"\n\nCindy replied \"I think we all came to a consensus that he was a target of opportunity, that she just wanted to kill a police officer, maybe to distract us?\"\n\n\"Well,\" I said, \"as I talked to Bonnie today, some things came to me. Maybe there was a reason Feeley was chosen, that it wasn't random or just because he was a police officer. Maybe he knew something he should not have known, but didn't realize it... sort of like Tammi Edmonds.\"\n\n\"I'll buy that for a dollar.\" said Cindy. \"Maybe a Canadian dollar, though. And Selena Steele?\"\n\nI replied \"We've been in and out of banksters all this time while pulling on threads related to our Consultant of Crime. But we've neglected to look really hard into Selena Steele herself.\"\n\n\"Ahhhh.\" Cindy said, nodding her head. \"That is a point. Maybe Harlan started following Selena, then it somehow turned personal and Angela went bad?\"\n\n\"I don't know.\" I said, quaffing down the remainder of my beer. \"But I'm going to need you to hold down the fort and run the Detectives for a while. I might be doing a lot of research over the next day or two...\"\n\nPart 9 - A Severe Loss\n\nAt 6:30am, Friday August 28th, I received the bad news that I sensed had been coming for some time. I had been called into the Chief's office, so that I could hear this at the same time he did.\n\n\"So you're going back to the LAPD?\" the Chief asked.\n\n\"Yes sir.\" said Lt. Claire Michaels, leader of my SWAT teams. \"I appreciate the experience here, and I've learned a lot from Commander Troy, sir. But as they say: home is where the heart is. L.A. is my home.\"\n\n\"Nothing like the big city.\" I said. \"But what else? There is definitely a 'something else'.\"\n\n\"Not much gets by you, sir.\" Claire said. \"I have to say that the whole thing with Sharples, and what he did to expose Lorena Rose on that undercover mission, really bothered me. The guy should be in jail... or worse. Where I come from... he'd have been fragged by now.\"\n\n\"I understand.\" I said. \"And his time is coming.\n\n\"And then there's Deputy Chief Brownlee.\" said Lt. Michaels. \"I'm tired of getting orders for ammo and equipment canceled for no reason, having the schedule for the outdoor range fucked up to the point I can't get my guys the training they need. If you want a public reason why I'm going, that's the one you can use. Brownlee is a fucking turd, and I don't want any part of him.\"\n\n\"Neither do I.\" I said, looking at the Chief. \"Of course, I daresay moving makes your impending breakup a bit easier.\"\n\nClaire's eyes brightened as she realized I understood. \"Uh, yes sir, that was not working out, either. Hugh's a good guy, but I shouldn't have gotten involved with him. And I wasn't sure exactly how our working relationship was going to work out after our personal relationship ended, either.\"\n\nChief Bennett asked \"So... who do you recommend as your replacement in the SWAT units? Sergeant Charles?\"\n\n\"He'll do.\" Claire said. She also suggested the young man that was the brother of Todd's friend, 'The Leader'.\n\n\"I've had my eye on Sergeant Charles for a while.\" I said, more to the Chief than to Claire Michaels. \"So this resignation is effective September 15th. Make it September 30th, take your vacation for those last two weeks; you've earned that. Talk to Charles, get him ready to take over for you, at least on an interim basis. And I appreciate all you've done for me while you've been here. The SWAT teams are all that much better because of your leadership.\"\n\n\"Thank you, sir.\" said Claire. \"I... I do want to say that my time with the Detectives working for you was the best learning experience I've ever had. I don't know how you do it, but I'm just aspiring to get halfway there.\"\n\n\"And you will.\" I said as we all stood up. \"Well, good luck to you, Lieutenant, and don't be a stranger; give us a call or drop in sometime.\"\n\n\"Thank you, sir.\" Claire said. She shook hands with me and with the Chief, and exited the office.\n\n\"Too bad she's leaving.\" said the Chief. \"One more problem for you to solve, Don.\"\n\n\"Yes sir.\" I said. \"But it also gives me a chance to solve some problems. But you heard her, sir... Brownlee is becoming a cancer within this Police Force. I hope we don't lose any more good people because of that piece of shit.\"\n\n\"Yes, I know.\" said the Chief. \"The Sheriff and I have been talking about it. We're going to start having Captain Della Harlow liaison directly with the Sheriff's Chief of Staff, Deputy Sheriff Oswald, bypassing Brownlee.\"\n\n\"He'll go ballistic.\" I said. \"He can't harm Captain Harlow, but he could really fuck up her subordinates, and I can't babysit that situation.\"\n\n\"You don't have to.\" Bennett said. \"Leave it to me and the Sheriff. Okay, I need to make some phone calls. I'll talk to you later about SWAT.\" Understanding that I was being dismissed, I left the Chief's office.\n\nSo Claire was gone, and she was thinking by pasting it on Brownlee she was helping us. But that wasn't the real reason she was leaving: this was not an Agency of the Weak-Minded, I thought to myself. I knew that with Callie Carrington exposed, someone had anticipated that Los Angeles would need reinforcements in the war against Superior Bloodlines...",
        "* * * * * * * * * * * * * * * *\n\n\"This is Priya Ajmani, Five Alive News!\" shouted the lovely Indian reporterette at 8:00am, Friday, August 28th. \"Five Alive News has confirmed that Lieutenant Claire Michaels of the Town & County Police Department is resigning and returning to the Los Angeles Police Department. Lt. Michaels was in charge of the TCPD SWAT Teams, and stated that her resignation was due to logistical non-support from Deputy Chief Robert Brownlee. The Police Department has not issued any statement about the resignation of Lt. Michaels or their plans for the SWAT Teams going forward, but Commander Donald Troy did issue a statement thanking Lt. Michaels for her professionalism and hard work in the creation of the SWAT team and its excellence...\"\n\n\"How in the fuck did Priya get that so quickly?\" Cindy asked as Crowbar's Angels and I watched in my office. \"You just told us, and you only got it an hour and a half ago.\"\n\n\"I know.\" I said. \"I'm sure you ladies caught the important part of Priya's little newscast there?\" Blank looks from three pairs of eyes greeted me; I was disappointed and knew I still had a lot of work to do to get them up to speed.\n\n\"Nothing?\" I asked, peering from officer to officer.\n\n\"I'm not getting it.\" said Teresa. \"Why don't you just tell us?\"\n\n\"No.\" I said. \"That's too easy. You figure it out and tell me. There was a clue there, as important as any crime scene clue, and you all have to see through it because I'm not always going to be here as a crutch.\"\n\n\"Uh,\" Cindy said, feeling what I was seeing in all their eyes: the beginnings of anger at me for what was perceived as unwarranted and overly harsh treatment, \"why don't we get through the agenda for the meeting. We've all got work to do.\"\n\n\"Okay.\" I said. \"Whaddya got?\"\n\nCindy said \"All of the reports from the prison execution incident are uploaded to the servers, consolidated and cross-referenced. Myron is waiting for your permission to send it to the SBI.\"\n\n\"Oh heck yeah, send it immediately.\" I said. \"I don't want them bitching about us making them wait for anything like that. I'll look into it later.\"\n\nCindy said \"The FBI wants to interview every Detective and our Data people about Sharples. They're investigating a leak of classified information, and want to see what our guys knew about how much Sharples knew about things.\"\n\nI said \"First of all, that permission will have to come from the Chief, if not the Sheriff himself. Second, even if they give that permission, make damn sure our guys know their rights to have an attorney and/or a Police Union rep present at any of that questioning. I want to work with the FBI, but there are lines not to be crossed.\"\n\nI continued: \"We may also need to consult with the D.A.'s office and the Union on who can be interviewed based upon probable cause. The vast majority of our officers have no involvement with any of that; they should not be subjected to interrogation unless the FBI can 'show cause' to interview them. What else? Anything from the duty logs?\"\n\n\"No sir.\" said Teresa. \"Trouble free night last night.\"\n\n\"Okay.\" I said. \"Rumors? Innuendo?\" I often asked this half-jokingly at the end of a meeting, and it sometimes produced interesting results. But with the tension in the air, the normally 'ranks-off' conversation wasn't happening.\n\nNevertheless, Teresa said \"I heard that Nextdoor County PD is getting a new Lieutenant for the Drug Division.\"\n\n\"Oh?\" Cindy said. \"Who's that?\" Teresa's eyes widened at that, as did mine.\n\nTeresa said \"Let him figure it out.\" She was pointing at me, and now it was Cindy's turn to be wide-eyed at the blatant disrespect.\n\n\"That's no problem, Lieutenant.\" I said acidly, my eyes boring into Teresa. \"I keep my eyes and ears open, and I understand the clues I observe. Let's just say that Molly Evans is finally going to get that Lieutenant bar she deserves, albeit with Nextdoor County instead of Midtown--\"\n\n\"What?!\" Cindy gasped. \n\n\"Captain Ross doesn't know that, by the way.\" I finished.\n\n\"She told you?\" Cindy said. \"She didn't say a word to me!\"\n\n\"Nor to me.\" I said, looking back at Teresa, my eyes boring right through her. \"Like I said, I observe, deduce and infer things, like you ladies should be doing... and it's that same process that keeps me from taking your head off for insubordination, Lt. Croyle. I know it's August, but get your shit together. Now all of you get out of here.\"\n\n\"Uh, can I see you privately for a moment, Commander?\" Tanya asked. \"It's personal in nature.\" I acquiesced.\n\nAs Cindy and Teresa got up, Cindy said \"My office, Lieutenant.\" She was going to do her job and administer the ass-chewing I'd refrained from administering.\n\nOnce alone, I said to Tanya \"Shoot.\"\n\n\"I think the clue in Priya's newscast was that she mentioned Brownlee by name.\" said Tanya. \"I thought he and she were on the same side, so that shows that somebody is either out of favor or has switched sides, or both.\"\n\n\"Out of favor.\" I said. \"You're right: for her to mention Brownlee like that, and so publicly, is not good for him. So not to rush you, but I've got to get my reports in to the SBI on the Priemus case so they can relieve me of investigating it. What else?\"\n\n\"I just wanted to let you know I answered about half of Dr. Karpathian's questions and sent it to her. I bcc'd a copy of it to you, to keep you in the loop.\"\n\n\"Thanks for doing that.\" I said. \"My own interview was pretty rough. I can only imagine how it was for you.\"\n\n\"It was okay.\" Tanya said. \"There is one other thing. and it's what I really wanted to touch base with you about.\" She hesitated, then gathered her courage and said with a rush: \"I know I'm supposed to go through Captain Ross, but I'd like to ask your permission to bypass her and come straight to you on something I want to investigate privately...\"\n\n* * * * * * * * * * * * * * * *\n\n\"What in the fuck was that?!\" Cindy demanded as she faced Teresa in her Captain's office. Teresa was standing practically at attention in front of Cindy's desk.\n\n\"I'm sorry, I don't know what came over--\" Teresa started.\n\n\u2028\"Don't answer, just shut the fuck up!\" Cindy ordered. \"Good grief, I thought we were past this with you.\" Teresa did not reply.\n\nCindy sat down. \"Sit down.\" she said. Teresa obeyed as Cindy continued \"Well, the Commander let you off the hook with that 'August' comment. I'd forgotten about your history in the month of August. Captain Malone would have to keep an eye on you in August, the month of the race with your sister before she died.\"\n\nCindy's ice blue eyes were boring into Teresa as hard as the Commander's had been as she said: \"But you gotta get it under control, sister. And don't fuck with the Iron Crowbar, especially when he just got done with Dr. Karpathian interviewing him about Pete Feeley.\"\n\n\"Oh... I didn't know that.\" Teresa replied.\n\n\"Yep.\" Cindy said. \"Okay, consider your ass chewed out and don't do anything like that again. So... who leaked that to Priya?\"\n\nTeresa replied \"I have no idea. I didn't know about it at all until the Commander told us at the start of the meeting. Who do you think did it?\"\n\nCindy replied \"The Chief.\" Seeing Teresa's look of surprise, she said \"Michaels gave the Chief and Commander her resignation. Ninety minutes later Priya knows of it, but KSTD apparently didn't during their newscast. Brownlee might've heard of it when it hit Personnel, but I doubt he'd tell Priya that Claire resigned because of him--\"\n\nBoth women made exclamations as it hit them. Cindy said \"Oh, that's what Don was getting at... Priya outright said the resignation was because of Brownlee. She threw him under the bus. Okay, that's solved, but continuing on: there are so few people who knew, it limits who it could be.\"\n\nTeresa replied \"If she sent an email to resign, that broadens the scope of people who might know. Of course... that means someone either was looking for it, or is looking at all our emails.\"\n\nCindy said \"I'll get Myron on that, see who's accessing emails. Might be a clue to who the leak is. Chief Griswold would be screaming right now if he were here.\"\n\nTeresa said \"It could be Chief Bennett. But it could be--\" She stopped short.\n\nCindy peered at her. \"Go ahead, say it.\"\n\nTeresa gathered her courage and replied \"It could have been Don himself...\"\n\nPart 10 - Foursome\n\n\"This is Nick Eastwood, KXTC Sports!\" said the handsome blonde man on the 6:00pm newscast. \"Football season is starting up again, and our University Bulldogs open the season tomorrow with a tough conference game against the Purple Hawks of State University.\" State U was my University's arch-rival in another State. They were not tough, but the University's team was not that good, either, so Nick was setting the table.\n\nNick continued \"The conference champion Wildcats will be playing our Enemy, State Tech, at Tech's home stadium. The Wildcats are a heavy favorite to beat the Engineers. Back to you, Amber!\"\n\n\"Thank you, Nick.\" said Amber Harris at the news desk. \"This is the one game all year where all of us will be rooting for the Wildcats to really pour it on!\" That was a shot at State Tech, whose player had deliberately tried to hurt Nick Eastwood and indeed had badly injured him, costing Eastwood a pro football career. Word on the street was that every school playing State Tech would have a little something 'extra' for Tech's quarterbacks...\n\nAs Laura and I watched at The Cabin, my wife said \"Nick and Bettina will be here in a little bit. You better start up the grill on the deck.\" Laura had invited Nick Eastwood to come up for an evening of dinner, drinks, and sex. My 'date' for the evening would be the lovely redhead, Bettina Wurtzburg.\n\n* * * * * * * * * * * * * * * *\n\nI poured four glasses of wine. \"Tonight, everything is off the record.\" I said.\n\n\"Off the record.\" said Bettina.\n\n\"Off the record.\" said Nick Eastwood.\n\n\"Off the record.\" said Laura.\n\nWe clinked our glasses and drank of our wine. Formalities done, we moved to the deck of The Cabin to watch the sunset and eat the feast we'd prepared. Steaks and salads, corn-on-the-cob and other veggies from the grill. Sitting at the metal mesh table, most of the talk was innocuous, but Laura and young Nick were openly flirting, leading me to converse with Bettina.\n\nLaura was looking stunning in a frilly white dress that seemed to flow on her luscious body, and very high-heel blue pumps that accented her long, shapely legs and magnificent ass. Bettina was dressed in a multi-color flower-print dress, and high heel sandals with reddish straps that showed off her shapely feet and legs.\n\nIt was dark as we finished eating and drinking a good bit more wine, and we all took our dishes into the kitchen. As Bettina and I cleaned up the dishes in the sink, we looked into the greatroom and saw Laura sliding her hands around Nick's neck. My wife gave the handsome blonde stud a deep, warm kiss.\n\nSeeing my wife kissing another man like that made my cock harden and throb. Bettina noticed, and slid her hand to my crotch, massaging my rapidly engorging cock through the thin material of my slacks.\n\n\"Mmmm, I am going to really enjoy fucking this big, hard cock tonight.\" Bettina said. I leaned over and kissed her luscious, lipsticked lips. We broke the kiss to walk into the greatroom.\n\n\"Honey,\" Laura said to me, breaking her kiss with Nick as she saw us, \"I'm just going to go for it with this handsome young stud. But I do have a surprise to tell you first, Nick.\" She let her eyes bore into his as she said \"Nick, I promised you that if you beat State Tech last year, I would let you fuck me in the ass. We've had to delay that, but I'm going to fulfill that promise tonight. I want you to fuck me in the ass while my husband watches... or not.\" She then mashed her mouth to Nick's in a hot kiss as the surprised young stud processed what he'd just been told.\n\n\"Damn, too bad this is off the record.\" Bettina teased. \"Every man in this County wants to fuck that luscious ass.\"\n\n\"I'm looking forward to seeing it.\" I said, as much to Laura and Nick as to Bettina, \"but it'll be while I'm fucking the hottest reporter in the State...\"\n\n* * * * * * * * * * * * * * * *\n\nBettina and I were lying on our sides on the sofa against the side wall, me behind her in a \"spoons\" position, my cock deeply penetrating her sopping wet snatch. On the floor in front of us was Nick and Laura. He was totally naked, his hard, athletic young ass bobbing up and down as he steadily and deeply pumped his huge cock in and out of my wife's deep, wet pussy.\n\nLaura was lying on her back, naked except for the pumps, her legs high in the air as her thighs were caught under Nick's strong arms. He was nuzzling her neck as she moaned deeply. I enjoyed the sight of her spread wide and being fucked, even as I drove my iron-hard meat into Bettina's red-fringed cunt.\n\n\"They look sooo fucking hot!\" Bettina had whispered to me as we'd watch Nick mount Laura and begin fucking her after he'd eaten her pussy to sopping wetness for several long minutes. I'd done the same for Bettina, tonguing her tasty twat. Then Bettina had sucked me as Nick got over Laura in a soixante-neuf, pumping his huge dick in and out of my wife's mouth and throat as his tongue explored her clit, labes and cunthole.\n\nNow as we were fucking, I whispered to Bettina \"Have you fucked that big cock yet?\"\n\n\"Just once.\" Bettina said. \"Women have to fuck to get their jobs on the set, but the men have to fuck me if I want them to. I fucked Nick during his interview, but that was the only time. He's been busy trying to get Amber Harris knocked up.\"\n\n\"Mmmm,\" I said, \"is he the father? She's obviously pregnant.\"\n\nBettina looked back and up into my eyes. \"She just told us last week. How did you know?... never mind, don't answer that. Everything's obvious to you that we have no idea about.\"\n\n\"Some things, anyway.\" I said, leaning down and kissing her upturned lips. I didn't tell her that Laura was Amber's gynecologist...\n\n* * * * * * * * * * * * * * * *\n\nThe time had arrived. Laura stopped Nick before he came inside her pussy, and had him help her spread out some plastic sheeting on the floor, then had Nick squirt some lubricant into Laura's ass and coat the inside of her rectum. She'd given herself an enema before dinner and otherwise prepared for the invasion of her sweet ass by Nick's huge cock.\n\nShe lubed Nick's cock up, stroking it slowly as she had him put an anal plug into her ass and piston it back and forth. Then followed more lube and a larger dildo, and my wife was groaning as it went into her backside, stretching it out.\n\nThen came the moment of truth. Bettina was wide eyed and I was aching hard as I watched Laura ease her head down onto the floor, her asscheeks high in the air. Nick's cock was taut and throbbing as he knelt into position behind Laura and put the cockhead right against the stretched hole of her anus. He pushed forward, but found resistance. Laura directed him to put more lube on his cockhead and into her ass. After doing that, Nick grasped my wife's hips and pushed forward.\n\n\"UHHHH!!\" Laura gasped as her rectum was invaded by Nick's hard male meat. Nick pushed in, eased back out, pushed in some more. It took what seemed like an eternity, but with more lube and hard pushing from his muscular body, that big cock slid into Laura's ass until Nick was buried to the balls.\n\n\"Oh Jesus, he did it!\" Bettina gasped. I nuzzled her neck and slid my cock back into her pussy from behind as I watched Nick begin to slowly pump his cock in and out of Laura's ass. He occasionally applied more lube as he pulled out, then sank back in. How my wife was taking it, I don't know, but she was moaning deeply and actually trying to push her ass back to Nick to accommodate the meaty inches as he sodomized her.\n\n\"Ohhhhh, fuuuuuuuckkkkk...\" Nick gasped. \"I can't believe I'm fucking your ass!\"\n\n\"Just shut up and do it!\" Laura ordered. \"Easy, baby, easy... yeah, just fuck my ass slow and deep...\"\n\nAs they buttfucked, Laura reached under her and began stroking her clit. Bettina saw that and reached down to strum her own clitty as I drove into her pussy from behind with hard, deep strokes.\n\n\"I'm gonna come.\" I said to Bettina. \"I am going to fucking fill your pussy up with my come, baby!\"\n\n\"Oh yeah, do it!\" Bettina gasped. \"Come inside me, Don! Oh yeahhhhhh...\" I felt her cunt clamp down on me as she came, and I just shoved my own dick in nuts-deep and released...\n\n\"Uhhhhh...\" I gasped quietly as thick jets of ropy semen blasted into Bettina's steaming hot cunt. Even as that gray mist fogged my vision, I could feel the pleasure of the release, hear the smacks of Nick's groin slamming into Laura's asscheeks, hear the moans and groans of everyone in the room...\n\n\"Oh yeah, that's the way to do it.\" I heard that husky voice say behind me. Angela's voice... \"That's right, Don, shoot that load into that snatch!\" I opened my eyes, but only saw Bettina's red head in front of me and, looking over her, Nick sodomizing Laura.\n\nLaura's tight rectum was too much for Nick's cock. \"I'm going to come!\" he announced. \"I'm going to come in your ass!\"\n\n\"Oh yeaahhhhh,\" Laura moaned. \"Do it! Shoot your hot cum up my ass, Nick! Fill my ass up with that load!\" Nick grabbed Laura's hips, slammed his meat into her as he pulled her back to him, and groaned as he let it go...\n\n* * * * * * * * * * * * * * * *\n\n2:00am, Saturday, August 29th. I was sitting on the deck of the cabin in the metal mesh love seat, looking out over the lights of the Town. I saw the light of a train coming out of the western horizon as I heard the door open.\n\n\"Mind if I join you?\" Bettina asked as she came up to me, wearing only a bathrobe and her high heels.\n\n\"Sure.\" I said, letting her sit down next to me, her right side pressed into my left side as she cuddled into me.\n\n\"Mmm, that was amazing sex.\" Bettina said. \"It was even better the second time in your bed.\"\n\n\"Yes, it was.\" I said, leaning over and kissing her mouth. \"You like that slow, deep missionary sex.\"\n\n\"You seemed to enjoy it, too.\" Bettina said, grinning. \"So, off the record... what really happened to Priya on that night she disappeared?\"\n\n\"Off the record or on it,\" I said, \"we're not going there.\"\n\n\"There's a lot of rumors going around,\" Bettina said, \"that reporters are in danger from some criminal group. Are we being targeted?\" I knew this was Bettina's sneaky way of trying to get answers via another route. This is not an Agency of the Weak-Minded, Bettina, I thought to myself.\n\n\"I don't think so.\" I said. \"But change the subject.\"\n\n\"What shall we talk about?' Bettina asked. \"How your wife took Nick's big dick in her ass so easily? Or what wives are banging other men, according to my aunt?\"\n\n\"Sounds like a good subject.\" I said. \"So who are you going to shock me with?\"\n\nBettina replied, snuggling into me for warmth as she looked out over the twinkling lights of the town, hearing the railroad train's whistle as it crossed a road just over the River, \"Senator Katherine Woodburn and U.S. Congressman Condor, for openers.\"\n\n\"Oh?\" I asked. \"He's not fucking his sweet young intern anymore?\"\n\n\"Oh, I'm sure he is.\" Bettina said. \"But he and Katherine have been having some lusty liaisons at the Hyatt Hotel. They think we don't know anything about it. But also, and you need to hear this one: ADA Jenna Stiles's assistant, Gor-don... he's been fucking at least one of Katherine's political aides in her office in Town.\"\n\n\"Yes, that is indeed something I need to know.\" I said. \"I'd love it if Gor-don would tell Brownlee that... Brownlee wants Priya Ajmani bad, but he's being prickteased by her, and maybe by Katherine Woodburn and others...\"\n\n\"By Priya, yes.\" said Bettina. \"But Katherine hates the bastard. She wouldn't let Brownlee fuck her with your dick... well, I shouldn't say that, because I heard a rumor that Katherine pretends to hate you but would really love to fuck your brains out.\" I felt Bettina's hand slide under my robe and massage my hardening cock as she said it.",
        "\"Mmm, that feels good.\" I said. Bettina got up, opened her robe and straddled me. I opened my robe and let her mount me, and groaned as I felt my hardening cock slide up into her juicy wet cooze...\n\n\"Ohhhhhh, yeah...\" Bettina whispered, wrapping her arms around my neck. She rode me slowly as I pushed my cock up into her, feeling her grind her hot ass, her juices smearing my balls. Our tongues twined in deep, delicious kisses as my hands explored Bettina's asscheeks, her sides and her breasts as she pressed the tops of her feet onto my thighs for leverage and rode me...\n\n* * * * * * * * * * * * * * * *\n\n3:00am. Bettina and Nick were up and dressing. Nick had to go cover a ballgame. Bettina said that she normally was up at this time. \"You see me at 7:00am.\" the lovely reporterette said. \"By that time, I've been working for three hours.\"\n\nAfter they left, Laura came to sit with me on the deck. She groaned as she sat down beside me.\n\n\"God, my ass is sore.\" she said. \"Nick's cock is so fucking huge.\"\n\n\"Your pussy must be sore, too.\" I said. \"After you two cleaned up, I know he wanted to make love to you long and slow in the other bedroom.\"\n\n\"Oh yes, we did that.\" Laura said. \"It was... very nice. Nick is very good, especially for his age.\"\n\n\"I think you like those young men.\" I said. \"Should I be jealous that I'm getting too old, and you'll trade me in for a newer model?\"\n\nLaura snuggled into me as she said \"Noooo, I'm never letting you go, darling. I like fucking those men, but I'm going to spend the rest of my life cuddling up with you. As long as you stay alive and don't let the bad guys get you.\"\n\n\"Not gonna happen.\" I said. \"I intend to give our daughter away at her wedding.\" We settled down into quiet, thoughtful melancholy. I knew that I had to face some serious dangers before that intention would come true...\n\nTo be continued.\n\nSolution next episode!"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "mystery",
        "police drama",
        "crime drama",
        "anal",
        "dreams",
        "visions",
        "blowjob",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/dream-within-a-dream-ch-02"
}