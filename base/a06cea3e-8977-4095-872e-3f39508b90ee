{
    "title": "Prototype Ch. 10",
    "pages": [
        "The play turned out to be... interesting? Don't get me wrong, my lack of glowing enthusiasm was not just because I knew what to expect going in. I had taken the time to chop up the entire script, all three acts, into training puzzles- remember? Not that Maggie had used them all. In my defense, I did tell you I wasn't much of a connoisseur of modern theater. I mean, exploring the relationship between four neighborhood women in a small town fighting over the same man- the proverbial 'one that got away'? I was lucky to keep my eyes open the entire time. \n\nEspecially since, given recent events, the obvious solution would have just been for them all to share him. They all had fairly divergent views of who he had been, so as long as each of them had seen the side of him they cherished/coveted things would have been fine. Of course, I might have been more than a bit biased.\n\nAfter the show, I found Maggie her still in her wardrobe and makeup waiting in the hall along with the rest of the performers. She had been talking to the other patrons as they had filed by, each softly granting their own sage anecdotes and expert advice. I smiled as I overheard one directly contradict comments from another who was likely still within ear shot. To her credit, she accepted both with an open and inviting smile and a perfectly sincere \"Thank you so much!\" She was an actress, after all. If you can't fake sincerity you can't make it in show business- or so they say.\n\nHer eyes lit up when she saw me, her arms wrapping me in a tight hug that lasted considerably longer than appropriate for someone who may have been permanently downgraded to 'just a friend'. It could have been all the excitement and energy from the play, of course. \n\n\"So, what did you think?\" She asked, finally releasing me. \n\n\"You were great!\" I said honestly. Watching her had been the only thing that kept me from snoring. \"Perhaps I should have gotten more sleep last night,\" I thought, as memories of what I had done with Anna after she had finished her full round of training began filtering to the surface.\n\n\"I meant of the show, not just me,\" She said with a chiding smile that still warmed my heart. She may have let me out of the bear hug, but I was pleased to note that one hand was still anchored to my chest. Almost like she was afraid to let me go- as if I could vanish into a puff of smoke or something else equally irrational. \n\n\"I thought it did an excellent job of highlighting the challenges of navigating modern relationships in a world that is trying to move past the rigorous limitations previous generations have forced upon us,\" I said, quoting an online review of the play.\n\nHer eyes narrowed suspiciously, but the smile never left her face. \"That sounds like a surprisingly adept interpretation, Benjamin. Where did you get it from?\"\n\nI tried to look hurt. \"Maggie, I would never-\"\n\nShe punched me, gently- and without disturbing the hand that still prevented me from apparating to... some other fictional location. \"I could google it, you know. I bet one shiny silver dollar that I'd-\"\n\nI raised my arms in surrender. \"Alright, alright. You got me,\" I admitted, and then lied with the next breath. \"It was interesting though.\" When it was clear her interrogation was over I brought my hands down, resting one gently on top of her own. I spoke my next words as softly as I could manage while still being confident she could hear me over the din of conversation- no sense in scaring the rabbit away so early in the evening. \"I'm not going anywhere, Maggie,\" I said, gently squeezing her hand. \"Not if you don't want me to.\"\n\nHer eyes flitted around the room almost randomly before finally finding my own a few moments later. \"I... I know. Its just-\" She abandoned the rest of her comment as something just over my shoulder captured her attention. \"Come over here you!\" She said, pulling her hand free of mine to wave whoever it was over to join us. The empty space beneath my hand seemed to still glow with her warmth. \n\n\"I don't want to interrupt anything,\" Rachel said. Feelings of d\u00e9j\u00e0 vu washed over me- my temper flaring just enough to keep my footing without giving away any of my sudden weakness.\n\nI turned to watch Maggie wrapping her arms over Rachel's shoulders in an affectionate hug. I couldn't help but compare the length of which to my own recently received embrace. The similarity did very little to improve my quickly souring mood.\n\nTo her credit, Rachel's did nothing to avoid my gaze- the look on her face saying something to the effect of 'sorry' or 'this wasn't my idea'. I couldn't be sure. Whatever it was she meant to say, it was washed away and replaced with a look of praise and congratulations as Maggie released her and held her at arm's length. \n\n\"I'm glad you came,\" Maggie said almost as warmly as she had greeted me. \n\n\"How could I say no,\" Rachel said with a smile, pointedly avoiding my eyes as she continued. \"You were great up there. He was a fool for leaving you.\"\n\nMaggie dipped into the smallest of courtesies at the compliment. \"Why thank you. I was the one with the most unrealized potential.\" Turning her head just a bit and raising her voice to project to her intended audience she continued. \"As the youngest, I was the only one who could have tempted him back. Those other ladies were just hidebound hasbins.\"\n\nHer comment earned her a few knowing and appropriately glaring looks from some of her fellow performers, seamlessly integrating the breaks into whatever conversation they were holding in their own little corner of the hall.\n\n\"Empty little home-wrecker,\" One shouted back, broadening Maggie's grin even more until her whole face seemed to be alive with mirth. \n\n\"That was Joyce,\" Maggie said to both Rachel and I, drawing us all closer together against the wall. Other patrons took the hint and began filtering past us to grant their wisdom to other, more available members of the play. \"She was Dorothy, in the play.\"\n\n\"The one with two girls who were both 'worth twice as much as you at half your age'?,\" Rachel asked without really meaning it as a question.\n\n\"The very same,\" Maggie said- turning her attention to me and taking in my sour face immediately. \"Now don't get all mad at Rachel here. She's been doing a lot of your heavy lifting as of late and I thought it only right to have her here since she's obviously so important to, uhm... to you.\"\n\nIf I hadn't already been so defensive I would have noticed the complete lack of venom in her statement. But I was, so instead I took it as a challenge. \"I don't see why she-\" \n\nMaggie's finger on my lips silenced me quite effectively. \"No- tonight is about me. So you listen here.\" She had adopted a face halfway towards hands-on-hip serious, though the effect was ruined by all the amusement she had failed to hide behind it. It was also so far outside what I was expecting that it was enough to reset whatever switch had been fueling my sour mood and keeping it stuck in the permanently annoyed position. \n\nI reached up and gently removed her finger from my face, leaving both of our hands entwined together as I lowered them to a more comfortable level. I smiled faintly as she made no effort to undo that recent development, even as she finished her supposedly dangerous rant. \n\n\"I made her promise not to tell you about it. Especially after she told me what you would say if you knew. Which would have been?\" She paused long enough for me answer.\n\n\"That I wasn't interested in another repeat of Saturday and to stay the hell away?\" I thought. Thankfully what I actually said was considerably more tactful. \"I would have asked her to stay home.\"\n\n\"Yes...\" Maggie said, drawing it out to show how little she appreciated my creative editing. \"I'm sure you would have used exactly those words.\" She reached out and grabbed Rachel's hand with her free one. \"Look, Benjamin. I've been doing a lot of thinking.\" She looked back and forth between Rachel and I, forcing me to do the same. Rachel met my searching gaze with a hopeful look. \n\n\"I'm sorry for overreacting. I haven't exactly been honest with myself lately, and I can't imagine how that must have been affecting you as well.\" She turned to face Rachel again, but this time I kept my eyes on Maggie. The look on her face was hard to read. She was being sincere, but there was... something else there as well. \"I can't blame you for being attracted to Rachel. I mean, look at her. She's gorgeous. And without any of my inhibitions or hang-ups when it comes to relationships... or sex. Not to mention those breasts, good lord woman.\"\n\n\"I uhm... I thought tonight was supposed to be about you,\" Rachel said, looking anywhere but at me or Maggie and obviously uncomfortable with the sudden change of focus. It was the first time in recent memory that she seemed to be honestly off her game.\n\n\"Aah... Look at that,\" Maggie said, flashing a grin up at me before turning back to Rachel. \"She's even more cute when she's embarrassed.\"\n\n\"Maggie, I'm... confused,\" I said, trying to sort out what was happening. \"Why is Rachel here? Why is... why are- Look. I need to come clean with you about something.\"\n\nMaggie and Rachel both turned to face me, leaving me suddenly very uncomfortable as the center of attention- even though that was exactly what I had requested. I could feel Rachel's hand on the small of my back- just the gentlest of pressure to let me know she supported me, and what I was about to do. I appreciated the gesture, but I wasn't sure how Maggie would interpret it if she saw. Thankfully, Maggie's attention was focused squarely on me.\n\n\"I'm sorry for how I've treated you over the years. You've always been a true friend to me, and I know it's pretty easy for me to be an asshole. I tried to be there for you, for all the new boyfriends, and the pain of the breakups. I just-\" I guess I sort of choked. It was all there, but getting it out was turning out to be harder than I expected. I had even rehearsed a speech like this once or twice before, years earlier when I had thought I had a chance. It was funny how easily the words came rushing back to the surface. The words- along with a lot more of the pain than I had anticipated. I guess that's what honesty does to you. Stabs you right in the heart.\n\n\"Benjamin, I-\" Maggie tried to break in, but this time I didn't let her run the show.\n\n\"No, it's my turn to talk. It doesn't break the rules, though- because it's still all about you.\" I wasn't sure that had stung, or if I had just plucked a cord, or what. The reason was important, but I had no way of telling why that particular moment was the one a single tear chose to leap from its watery brethren in Maggie's now misty eyes to start a slow trail down her cheek.\n\nIt was enough that she was going to let me finish. I opened my mouth, ready to let the words continue to escape. Ready to unload all of that pain from years of unrequited love. Even ready to give her credit for giving my ass a hard enough kick to get me back on my feet. It had all been her.\n\nBut nothing came out. I closed my mouth. Opened it to try again. Mentally, I was kicking myself for wasting the moment- wasting what might have been my one chance to get it right before I took all of it away. \"Say something, you idiot! Anything!\" \n\nRachel did her best to rescue me. \"Maggie, I think... what he's trying to say...\"\n\n\"It's okay, Rachel,\" Maggie said softly with only the smallest of nods in her direction. \"I know.\" Then she kissed me. Gentle. Sweet. The lightest pressure against my lips with the bittersweet taste of our shared tears mixed in as our tongues tiptoed around each other. Then it stopped and she was looking up at me again with those glistening eyes. \"I love you too. I'm sorry it took almost losing you to be willing to admit it.\"\n\nShe looked back and forth between Rachel and I, fighting to keep any more rogue droplets from further streaking her makeup. After a moment she turned her face away, avoiding us both. \"We can't finish this conversation here. I- I'm supposed to go to the cast party tonight. Everyone is going to be there... You see that man?\" She gestured towards a gentleman in khaki dress pants and a suede overcoat. \"He's a society and style reviewer for the paper. He stopped by before you came through. Said he thought I had a bright future on stage.\"\n\n\"Suede, really? They still make them in suede?\" Evidently my mouth had decided to start working and the first thing it thought to say was a flippant comment about someone else's fashion sense. I could have slapped myself.\n\nThankfully Rachel had it covered, figuratively at least. She rolled her eyes so obviously that both Maggie and I noticed. It broke the moment, leaving us all giggling enough to shake off the tension. I felt suitably chastised, if you'll forgive the pun.\n\nMaggie turned back to us, doing her best to take in both Rachel and I in a single glance. \"I don't know if I can do this. I wish I did. But- I'm willing to give it a try.\" She turned, looking only at me. \"I owe you at least that much I think.\" She looked at Rachel then, cutting off the argument forming on her lips before it even had a chance. \"No, I will not hear of you just going quietly into the night so prince charming here can kiss his princess and live happily ever after. You two have been together for over a year.\"\n\n\"And you've been friends for ten times that long,\" Rachel protested. \"I told you, I'm not-\"\n\n\"Girlfriend material? Yes, I know,\" Maggie said, not letting her off the hook. \"But that doesn't mean you're not important to him.\" She was looking at me again. \"And that means you're both important to me, too.\"\n\nRachel didn't seem to know what to say to that. Neither did I.\n\nMaggie sighed wistfully. \"I wish there was a way I could just wave a magic wand and be okay with this- with all of this,\" Maggie said. \"I just don't want to screw this up, Benjamin.\" She smiled wanly at me then- pain and fear mixed in with the hopeful bend of her lips. \"You know how bad I am at relationships.\" \n\nWe both laughed at that, though not so loud as to draw any more attention than our scene already was. An old inside joke between the two of us, except now I was the butt of it as much as she was.\n\n\"Maggie,\" I said, grabbing on to a spark of hope. \"What if- hypothetically. What if I did have a sort of magic wand?\"\n\n\"That could what,\" She asked, trying to hold on to the humor of the moment. \"Make me open and uninhibited like Rachel, here? So self-confident I could share you with someone like her and not let the jealousy and insecurity eat me alive inside?\"\n\n\"Rules, remember. All about you,\" Rachel reminded her. \"Not me. At least not for tonight.\"\n\n\"Right. Sorry,\" She said, giving Rachel a thin smile.\n\nIt broke my heart to see the joy that had been so alive in her face before I had arrived so obviously absent now. I didn't like what I was doing to her. What I was doing to her whole evening. She was right, tonight was supposed to be about her. Her accomplishments. Her success. I needed to remove myself, and Rachel, from the equation. At least for a bit. I already had more than what I had hoped for when I first arrived. But you know me- I just had to keep pushing.\n\n\"Something like that, yeah,\" I said. \"What would you say then?\"\n\n\"Hypothetically?\" She asked, wiping her face with her hands before realizing her mistake- her stage makeup streaking chaotically across her cheeks. \"Shit, I- dammit. I just ruined my makeup. I need to go clean up. Screw the after party. I'm coming home with you. We have to finish this.\"\n\n\"No,\" I said- a bit more forcefully than I intended. It was enough to shock both Rachel and Maggie into an almost stunned silence. \"Sorry,\" I continued, softer this time. \"I mean no, you should go to the party. This is what you've always wanted. To be on stage! This was your night. Go. Have fun. Schmooze with the other actors. You deserve it.\"\n\n\"But... what about-\" Maggie looked almost stunned, her confused glance shifting from me to Rachel, then back again.\n\nRachel seemed just as confused as Maggie, but she took her cue from me. \"He's right. You should totally go. We can wait, right?\"\n\nI nodded. \"I've waited this long. What's a few more hours. Just don't keep us waiting all night, yeah? We all have to get at least some sleep tonight.\" A chaotic mix of emotions were at play on Maggie's face as I gave her one final push. \"Go. You know where to find me.\"\n\n\"Us.\" Rachel said, reaching to take my hand. I did nothing to stop her. \n\nMaggie smiled, the pleasure blossoming on her face making her beautiful once more- despite the unkempt smear of tear streaked makeup spread across it.\n\n\"What about that hypothetical,\" I asked her one last time- unwilling to give up on that still glowing ember.\n\nMaggie looked back and forth between us one last time before reaching up and kissing me once more. \"Bippity boppity fucking boo.\" She said finally, a devilish grin on her face before she turned and gave Rachel a kiss as well. Shorter, not quite as passionate- but full of all sorts of promise. \"I uhm- huh.\" She almost giggled afterwards, licking her lips as if to examine the taste. \"I have to go clean up.\"\n\n\"Go. Enjoy. I love you,\" I said, finally getting the words out as if I had just dropped a two hundred pound weight off my chest.\n\nMaggie smiled, on the edge of disappearing. \"I know. I've always known.\" And then she was gone.\n\n<hr></hr>\n\nI could hear Rachel coming up behind me, her heels clicking on the broken pavement that led up to my apartment's front door. I'd say we rode the entire way back in silence, but we'd arrived at the theater in different cars so we didn't have much choice. To be fair, it had given me time to think without the immediate distraction of an especially willing and better-be-fucking-contrite sex slave sitting next to me.\n\nI opened the door and held it for her, trying to keep my face as expressionless as possible as I motioning for her to enter. \"After you.\"\n\nShe nodded her thanks as she slinked past me- dropping her purse on the table before rounding on me just as I closed the door behind us. \"So, am I in trouble for playing along with Maggie's plan tonight, or am I a good girl for convincing her to come around?\" She asked, cocking her hip opposite her neck to create quite a pleasant view. Her half challenge, half amused expression added to the performance quite effectively. All she was missing was a hand perched on her hip and it would have been a twin for Maggie's trademark pose- albeit with considerably more sex appeal.\n\nShe had worn an otherwise unadorned black dress with lace for shoulders and a plunging neckline to show off her impressive but still tastefully sized rack. I hadn't failed to notice her cleavage previously, but now that we were home it seemed as if it was even more prominently displayed. The waist was accented with a simple patterned belt that seemed to almost disappear in and out of the dress here or there but otherwise did a good job of pulling her waistline in to show off her semi hour-glass figure for the night. A single split ran rather high up the side of the otherwise ankle length skirt, not coincidentally on the same side as the bent leg she was currently sporting, peaking most of its length out from behind the soft fabric. The slight sheen off of the exposed leg told me she was wearing sheer pantyhose as well. Of course, the elastic band of the thigh high's was a big clue too. Her simple black pumps completed the look this evening with a rather conservative heel that couldn't have been more than three inches. \n\nIt was a very nice outfit for a night at the theater. On almost anyone else it would have been perfectly reasonable. But as usual, anything that Rachel wore seemed to hug her in ways that automatically pushed the bar a few points further into hot and fuckable than should be reasonably possible.",
        "I tried to tell myself I couldn't let that distract me. At least I made an effort, trying to maintain my mask of calculated emptiness as long as I could. I wanted her just this side of uncomfortable, just like I had been when she had first arrived after the show.\n\n\"Well,\" She asked, still donning that self satisfied smirk on her face even though she had shifted, almost involuntarily, into a slightly more demure stance. \"Which is it?\"\n\nI continued to stare at her, forcing my eyes to a minimum of wandering to prevent any further distraction. Thankfully she broke before I did. Which was good- I wasn't sure if I'd have been able to hold that look much longer.\n\n\"Master,\" She nearly whined, losing all pretense of overt sexuality and stepping up to place a hand on my chest. \"I'm sorry I didn't tell you. She made me promise. She was right, too- by your own admission. Please don't be mad at me. I did it for you.\"\n\nI did my best to raise a single eyebrow- not one of my best looks. \"Really?\" \n\n\"Yes,\" She said, pawing gently at my dress shirt and catching a finger or two on the buttons- fumbling with them playfully. \"You said you wanted her. She's coming over later for you to train, and she even tried to kiss me! Who knew she had it in her.\" Her confidence had been slowly building, but something- perhaps my continued lack of response, sent it into another nose dive. \"Please don't be mad. Did I please you? Or was I bad?\"\n\nShe seemed genuinely concerned- If I didn't know what was in her training I might have been suspicious. Maggie wasn't the only one who knew how to fake sincerity. That was a job requirement for an escort as well. I decided to let her off the hook. Sort of.\n\n\"How about we go with both.\" I said, allowing a small smile to break through my mask before it broke completely and I couldn't hold back my mirth.\n\nShe opened her mouth as if to object- but then closed it without a word. Her head tilted, her glance taking the measure of me as if she hadn't seen me in weeks. Her umbrage at my charade didn't last long- a smirk of her own forming in an echo of mine. \"I can work with that.\"\n\nHer hands started working my buttons in earnest then. \"Now, why don't we relieve some of that built up tension I know is hiding in there,\" She said, running her exposed leg up the inside of my thigh to verify what I'm sure she had known for some time- I was already quite hard. Being around a sex-slave devoted to my pleasure tended to do that to me quite a bit these days.\n\nI grabbed both of her arms, pulling them away from my half exposed chest. \"I don't know if that's wise. Maggie will be over later and I don't want to be exhausted- or spent.\"\n\n\"But Master,\" She said, quickly pouring on the sex appeal once more. \"That's exactly why you should fuck me. Now. Do you really want your first time with Maggie over before it's even halfway begun?\" She bit her lip, squirming slightly in my grasp but making no real effort to escape me.\n\n\"I suppose you may have a point,\" I admitted, twisting her around to hold her with her back to me in one arm while freeing the other to move the stools away from the kitchen island. \"I don't think we ever got around to christening the kitchen after our first failed attempt.\" \n\nShe leaned back into me, still not fighting my grasp in the slightest. \"No time like the present,\" She purred- gasping in mock surprise as I pushed her up against the counter in front of her.\n\nThe surprise melted, or perhaps it was transferred to me- as I lifted the length of her dress expecting to dramatically tear away her underwear only to find her bare ass and pussy already open and waiting for me. \"You went commando to the theater? You naughty little strumpet!\"\n\nRachel leaned her head down against the counter, crushing her breasts against it beneath her. Thinking of those mounds of flesh pushing against that fabric almost made me wish I had told her to strip entirely. \n\n\"As far I am aware, I am the only pure sex-slave my Master has claimed,\" She said huskily. \"It is, therefore, my duty and pleasure to be ready to fuck my Master wherever and whenever he wants. Be a shame to let something like a pair of underwear get in the way of your enjoyment.\"\n\nI grabbed her left hand with my own, pulling it behind her back to keep her from moving to far from her current position while I tortured her. To that end, my other hand went straight for her already dripping snatch- slipping in easily and bending down to search for her sweet spot. While that was going on, my thumb rather quickly exposed her clit from between the folds of her hood.\n\n\"Oh, fuck yes,\" She moaned into the counter. Twisting her hips reflexively to push my questing fingers deeper towards their goal. \n\n\"And what if I would have enjoyed peeling off a pair of sexy underwear, hm? At least a g-string, perhaps?\" \n\nRachel moaned in time with my thumb as it circled her clit and then flicked across it to restart the circuit. \"I... will wear... whatever... oh god don't- don't stop. Whatever... you want...\" I could forgive her less than eloquent use of language. I was feeling somewhat magnanimous, after all.\n\n\"I suppose there are benefits to being... available,\" I teased her, removing my fingers just as she was approaching a climax. \n\n\"Ah, Fuck!\" She cursed. Based on the tone of her voice I'd say it was more of a cry for sympathy than a direct request for my cock. Evidently she didn't appreciate the sudden change of pace robbing her of her orgasm. But this wasn't just about getting my rocks off. It was also more than a little bit about punishing Rachel for not at least warning me. She may have done it for my own good, but the road to hell is paved with good intentions. I should know- I had been walking on it for a while now and had only recently begun to come to terms with my inevitable destination.\n\n\"Ah, ah, ah,\" I chided her softly, enjoying the way her thighs quivered at my touch as I slowly ran my free hand up and down them. \"You belong to me, remember?\"\n\n\"Yes, Master,\" She said between shivers and gasps. \"Sorry, Master.\" \n\nThe sharp crack of my hand impacting her ass made her cry out in surprise and pain. I suppose it was considerably out of character for me, so I doubt she had been expecting it. I followed it up with another swift smack to her other cheek, just to keep things even.\n\n\"I don't have a lot of practice at this,\" I thought immediately. I realized there were some things that need to be worked up to- no matter how motivated of a beginner I might have been. \"I bet I felt that almost as much as she did. I'll need to make my point quickly or my hand will be just as sore as her ass- maybe more so.\" \n\nI gave her another couple of good whacks before leaning down over her as cover for my stinging digits. \"What is it you're supposed to say when I spank you?\" I asked her, remembering something about this from the brief reading I had done after my own training the night before.\n\n\"What?\" She asked, her voice a hoarse mix of need and surprise.\n\n\"When your Master spanks you. Isn't there something you're supposed to say?\" I teased her, torturing her with two fingers slowly penetrating her pussy and then pulling out once again to leave her still craving more. \n\n\"Uhm,\" She stammered, trying hard to think of misplaced instructions that I had never given her in the first place. Eventually insight must have struck. \"Thank you, Master. May I have another!\" She called out finally, but not until after I had delivered another hard smack to her beautiful ass.\n\n\"I don't know,\" I mumbled as if distracted, attempting to give her other cheek a similar treatment, but having to reapply the attempt twice as I missed my mark and failed to get that really clear ring I was wanting.\n\n\"Thank you, Master! May I have another!\" She cried out with each one- moaning in relief as I rubbed her bare ass in between each attempt.\n\n\"Yeah- too pretentious, I think.\" I admitted to her. \"Though I do think I will have to do this again. Perhaps I'll just have you count them, hm? What do you think?\"\n\nRachel panted for a breath or two, twisting her head to the other side- at least as much as I would allow her to with my other arm still pressing her down. \"Whatever you desire, Master.\"\n\n\"Good girl,\" I praised her, enjoying how it seemed to make her melt all the more into the counter. \"Nowhere near the reaction I get from Anna, but I could always install that delicious little button later if I want.\"\n\nThe throbbing need in my cock reminded me that there was more to do than just spank my mildly delinquent little whore. \"Would you like me to fuck you now?\"\n\n\"Please, Master!\" Her voice was thick with hunger and desire. \"My pussy was made for your cock. It feels so good! Please fuck me Master!\"\n\nI smiled down at her. \"When she asks so nicely...\" \"Don't move,\" I said, letting go of her briefly so I could more efficiently remove the articles of clothing that were still preventing me from fully enjoying the quivering mass of pleasure before me.\n\nThat challenge overcome, I grabbed both sides of her hips and drove my cock as deep into her as I could manage. Her pussy was so well lubricated that there was little to prevent me from bottoming out inside her.\n\n\"Holy fucking Christ!\" She gasped, her back arching almost involuntarily at the intrusion, raising her chest up off of the confining surface. Her hands searched chaotically for better purchase against the edge of the counter as I slowly pulled back out of her and then pushed fully inside of her once more.\n\n\"Fuck you feel so good, Rachel!\" I called out, my cocking throbbing as it threatened to finish what I had only barely started. \"Looks like Rachel was right. Again.\" I chided myself- holding still as the danger passed and we both regained some semblance of control. \"I seem to be taking your advice a lot lately, Rachel. Should I be worried about that?\"\n\n\"I am your loyal slave, Master,\" She said through short and ragged breaths. \"I would do anything... to please you.\"\n\n\"I'll take that as a 'No'.\" With the threat having temporarily receded, I fucked my sex-slave relentlessly for the next 30 minutes before I finally came down Rachel's throat. It had been her request, and the whole thing was her idea- so I gave her what she most desired. I knew I had made the right decision as I enjoyed the look of bliss on her face as she rolled my cum around her tongue before finally swallowing it. At some point, I can't remember exactly where, we had moved from the kitchen to the couch. I was fine with that as well- since we hadn't succeeded in baptizing that 'room' either.\n\n<hr></hr>\n\nRachel was obviously disappointed. \"So, why are we waiting out here instead of watching her staring blankly at the screen while your devious little machine twists her mind?\" \n\n\"Because I have recently discovered a little quirk regarding training,\" I said, gesturing pointedly that she should take a seat on the couch. She had begun pacing back and forth between the kitchen and the living room almost immediately after I had ushered her out of the bedroom. Which had occurred before Maggie had even fallen completely into the zone. \"Which reminds me...\" \n\nI reached into the fridge and poured myself a Redbull as I waited for her to take the hint. I wasn't in the habit of taking energy drinks, but I had purchased a couple on the off chance tonight would turn out better than I had hoped. Fortune favors the prepared, and all that. \n\n\"Which is?\" Rachel asked, making a show of brushing down the folds of her dress after taking a position reminiscent of a queen on her lounge rather than an impatient slave on a couch that had seen better days. \"You have been rather loose with your secrets so far tonight, Master. No reason to start being stingy now.\"\n\n\"Let's see if you can work it out for yourself,\" I said, grimacing as I took a sip of the strongly flavored drink. \"Gah... how can anyone drink this shit regularly?\" \"That is almost unpalatable,\" I thought. \n\nRachel shrugged. \"It's an acquired taste- one often improved with vodka. So a challenge then, eh? Hit me.\" She said, sitting up slightly as her insatiable curiosity undermined her attempt to be overly sexual. \n\n\"I believe I've already done enough of that tonight,\" I grinned, enjoying the way memory of the evening's earlier activities subtly shifted her body beneath the folds of her dress. It occurred to me that that might be another reason why she was lounging rather than sitting normally. \"Did I leave her ass sore enough she doesn't want to sit on it squarely anymore? My hand is certainly still throbbing.\"\n\nRachel pouted. \"Well aren't you a shameless flirt.\" She cocked her head at me quizzically. \"In fact, you've been acting differently all night long. You get a haircut or something?\"\n\n\"Or something,\" I said, not rising to the bait. \"As you are now well aware, the way the machine works is by getting you so focused on learning that you aren't really paying attention to the extraneous fragments. Anything that doesn't help solve the problem is consciously forgotten, but you still remember them, and act on them. Like the old subliminals from the movie theaters. Except, you know- ours actually work.\" She nodded her agreement. \"So why do you think we're out here instead of in there?\"\n\nShe leaned back into the couch, relaxing into an almost catlike lounging position with her head resting on the crook of her arm. \"So we don't distract her? The only thing I've ever really recalled from my trainings is a sense of hyper focus- I doubt us talking would bother her in the slightest.\"\n\nShe seemed pretty confident of that. Of course- she was technically correct. But I wasn't worried about distracting Maggie from her training. It was the distraction itself I was hoping to avoid- and the way her mind might interpret any verbal commands I hadn't intended Maggie to hear. \n\n\"That is exactly the problem.\" I said, taunting her with just enough information as I took another swig of that horrible beverage.\n\nHer eyes narrowed. \"The fact that she would ignore whatever we said is the problem?\" \n\n\"So, she doesn't have the right answer all of the time. Good to know.\" I grinned at her again- taking pity on her poor, sex addled brain. \"And anything we said would be just that much more noise for her to filter through and discard.\"\n\nRachel's eyes widened to saucers, sitting up on her arms once again and completely ruining the feline aesthetic. Well- not ruined. It did give me a perfectly good view of her breasts. \"Are you telling me that whatever you hear while training counts as a fragment?\"\n\n\"That's exactly what I'm saying. I was lucky with Anna. Just think of what might have happened if I had been watching Tv in the background while she was on the machine. Hooked on the golden arches and an itch she couldn't help but scratch to go down and test drive a new car.\"\n\nI could see the potential of this revelation was not lost on my naughty little acolyte. \"Which is why,\" I said, my voice stern with warning. \"You are to protect me from any auditory input if and when you are ever around when I am training myself- and you're not to slip any extra verbal fragments in on anyone else's training either.\"\n\n\"Aaah, Master,\" She pouted quite effectively, dropping back down to languish on her arms once more. \"Why you got to go ruin all my fun.\" Then realization dawned on her face, followed quickly by another dirty grin. \"That's what's different. You did some training on yourself, didn't you!\"\n\n\"As a matter of fact, I did,\" I admitted. But that didn't mean I was willing to let her change the subject. \"I'm serious, Rachel. Tell me you understand or I'll put it in your next training just to make sure you will obey.\"\n\nShe closed her eyes, letting a small but still quite obvious shudder pass through her. \"Master may do whatever he likes to my supple, pliant, and oh-so-willing little mind. But I'd like to think I'm a much better partner in crime if you don't neuter me too much.\"\n\n\"You've already proven yourself to be quite a useful tool,\" I agreed with her as I moved to take a seat in the single chair next to the couch. It was meant to look like a matching recliner to the sofa. Only problem was, it didn't recline. I did mention I wasn't good at handling my money while I was previously depressed and lonely, right? Thought so.\n\n\"Keep me sharp,\" She replied with absolutely no hint of insult or injury at being objectified. \"And I'll keep doing everything I can to make you happy... Master.\" By the end her voice had picked up distinct tones of flirtation and desire.\n\n\"I could definitely get used to that,\" I said softly, allowing myself a moment to appreciate the beauty and sex appeal of the creature that lay sprawling out on the couch beside me.\n\nShe cocked her head against her arm, even more of the curious predator. \"And yet you are so quick to share power when you could've had another slave in your harem. Another notch on the old belt, as they say.\" Her eyes glanced in the direction of the bedroom door, still closed to protect Maggie on the other side, just to make sure I understood who she was talking about.\n\nI raised my drink, taking a swig to hide the amusement on my face at her tone. \"I told you before, she was not meant to be a slave. Thank you for your help with that, by the way.\"\n\nI had given her the rundown of how the machine really worked, at least as far as my best guess could take us, as we were recovering from our short, but intense fuck earlier. She caught on very fast, asking me about the specifics of the program and wanting to see the fragment files I had used. I wasn't quite willing to show her the ones I had used on her just yet- something told me I didn't want to risk direct exposure to her fragments until I had made sure she would react to them exactly how I wanted her to.\n\nWhich was why I wanted her help with what I was going to do to Maggie. She had proven herself quite adept at it- once she had finished berating me for my previous lack of planning.\n\n\"Do you even know what you want to do with her? Cause, don't get me wrong,\" She had said, trying to make sure she didn't ruffle too many feathers as she ran her fingers slowly up and down my bare chest. \"But so far all impressions I've picked up have pointed at you being just as clueless about your feelings for her as she was for you.\"\n\n\"That was before I trained myself to be more confident, not to mention stripping all power from that annoying little voice that had been trying to keep me from using the machine on anyone else. Fuck that. I have the power- I should get to use it.\" Yes, I know- I didn't need any help at being more of an asshole. Use whatever platitude or anecdote you like. I was all in now- with no looking back.\n\n\"Yes, my oh-so-tactful sex slave,\" I scolded her lightly. \"I do know what I want. Still need to put it all together before she gets here though. Would you like to help?\"\n\n\"Fuck yes,\" She said immediately, taking only a moment before flicking my nose for good measure. \"And forgive me if I do not always reflect the most docile and submissive tone. If that's what you wanted from me you would have made me that way already.\"\n\nShe climbed off of me and motioned to help me up- though I couldn't resist taking my time admiring her naked form as she stood there offering me her hand. Once we were through fucking, she had taken the first opportunity to strip out of her dress and drape it carefully across the back of the chair for later use.\n\n\"Look all you want and more, it's yours after all,\" She said with a knowing glance even as she shifted her weight ever so slightly to accent her curves. \"But the longer we take the less time we have to revise dear Maggie's script.\"\n\nI smiled up at her, using her offered hand to twist her around once I was up and standing beside her. With that arm pinned against her chest I took the opportunity to reach around her with my free arm and take a handful of her tits- squeezing them appreciatively. Leaning in I started nibbling on an ear as she pushed herself back against me and deeper into my embrace. ",
        "\"I suppose I could at that,\" I whispered. \"Make you docile. Submissive. Even more obedient. Focused on nothing. But. My. Pleasure.\" Her free arm reached back to run through my hair- trying to hold her balance even as she started moaning in pleasure.\n\nI used the arm I had pinned to her chest to spin her back around, releasing both her ear and her breasts in the process. \"But where's the fun in that? Besides, you're right again. We have work to do. \" I said, abandoning her in the front room as I moved to the machine.\n\n\"Fuck, you are such a tease tonight,\" She cursed, though I could hear the desire in her voice as she followed behind me. \"I think I like it.\"\n\nIt didn't take nearly as long for the two of us to hammer out Maggie's fragment file as I thought it would. Like I said, Rachel was already quite gifted in fucking with people's heads- as any escort worth their salt would need to be. And I had turned that job skill into a fetish, handed her the proverbial gun, and now I was letting her practice with a real target. An idiot could see how much it was turning her on. Thankfully I had boosted my own self-control a bit along with my confidence or I might have wasted that time fucking her senseless instead of preparing.\n\nMaggie had all but told me- how had she put it? 'If you could make me more open an uninhibited like Rachel.' Well, turns out I could do that and more. I had had enough of Maggie as a passive participant in my nefarious endeavors, so the first thing we started with was bringing her around to our way of thinking. \n\n\"Benjamin's machine can change people and brainwash them.\" \"Benjamin can use his machine to warp and twist people's minds into anything he desires.\" \"I wanted Benjamin to change me. I asked him to do it.\" Then I borrowed a few lines from Anna's training file that I thought would be useful. \"It feels so right to let Benjamin change me into whatever he desires.\" \"I love what Benjamin has done to change me.\" \n\nTo ensure that there were no lingering moral or ethical hang ups, I added a few extra lines- including some variants of ones I had used on myself and Anna. \"Benjamin has every right to brainwash and change other people into whatever he wants.\" \"The feelings and desires that come from Benjamin's machine are just are real as any other.\" \"If sexual objectification and slavery makes someone happy, then it's only right for them to be owned and treated like one as well.\" \"Seeing the devotion others have for Benjamin makes me proud to be with him.\" \"The thought of twisting and brainwashing other people into serving Benjamin turns me on.\"\n\nI topped off that list with a couple phrases that were arguably the most important ones. \"I am a willing accomplice to whatever Benjamin desires.\" \"I want Benjamin to succeed at whatever he puts his mind to.\" And \"I will do whatever I can to help Benjamin achieve his goals and desires.\"\n\nGrand conspiracy aside, I had yet to do much by way of waving my magic wand to make Maggie more open and uninhibited. That part Rachel had ready to go. We both agreed that \"I am uninhibited and open minded about sex\" was a good start but lacked a certain... bluntness about what that really meant. It was too open to interpretation. She had evidently been thinking about that particular subject quite a bit since I had finished twisting her into my sex-slave. To get acceptably more specific we added \"I enjoy sex with both men and women, or both at the same time.\" \"I find both men and women sexually attractive and arousing.\" \"I have a very active and healthy libido. I'm always read for sex.\" \"It's okay to enjoy sex and physical pleasure.\" And- \"I enjoy showing off my body and the way other men and women look at me.\" \n\nI feel like I should clarify something here though. While I appreciated the limits of Maggie's acceptance of my hypothetical offer, that didn't mean I felt particularly obliged to follow it. She would be at the mercy of my machine and I had every right to do whatever I wanted with her- above, beyond, or even in complete contradiction of her wishes. I'm sure you understand that, given our somewhat rocky history, I fully intended her to be a very permanent fixture of my collection. That meant she needed a few changes more specific to that role. \"I enjoy sucking cock and eating pussy.\" \"I love the taste of cum, and how it feels going down my throat when I swallow it.\" \"The thought of fucking Benjamin's other women arouses me and turns me on.\" \"It feels so good to let a woman eat my pussy.\" \"I love the way Benjamin's cock feels inside me.\" \"Anything that excites Benjamin turns me on and makes me horny.\" \"I would gladly fuck Benjamin and anyone else he desires whenever he wants.\"\n\nThat accomplished, there was still the issue of her jealousy to deal with. \"Benjamin can collect as many lovers, slaves, servants, whores, and sluts as he wants. I know that I will always be special to him.\" \"I trust Benjamin with my heart and with my mind.\" \"I enjoy watching Benjamin with other women. I want him to have anything and anyone he desires.\" \"I am okay with sharing Benjamin with other women.\" \"Jealousy is pointless, empty, and only gets in the way of relationships with people I love. I know better than to let that happen.\" \n\nThis was going to be a considerable change in perspective for my dear Maggie. With that came the need for adjustments in her safeguards. I needed to ensure all of this didn't come crashing down around me. Once again I borrowed from what I had developed for Anna. The only major difference was that I didn't discuss them with Rachel. I didn't want her thinking to specifically about what her own limitations might be- or possibly how to get around them.\n\nYes, yes. I know. The fact that I could see the value of that precaution should have set off some sort of mental alarm. \"Did I remember to turn off the oven?\" - That type of thing. What can I say, I was still learning and besides- we'll get to that eventually. So far the best I had come with as I continued to refine them consisted of \"I will keep how Benjamin's machine really works a secret.\" \"I will do everything I can to protect Benjamin and his machine.\" \"The machine belongs to Benjamin. Only he has the authority to use it on someone else.\" \"I would never use the machine on myself or try to use it on Benjamin.\" \n\nI gave the entire list another once over with Rachel- omitting a few key phrases of course. Once we were both happy with the results I saved them under the filename \"SLUT\" with the password \"MAGGIE\" Then I prepped the machine for a training session. When we heard her knock on the door at just after midnight it was all warmed up and ready to go. \n\nI opened the door and let the cool breeze carry in the night air along with the intoxicating scent Maggie had brought with her. I couldn't help but stare- somehow she had found the time to pull her hair back and style it into a simple braid that laid softly over her left shoulder. Her beautiful brown eyes were swimming with emotion- too much for me to be sure what was going on behind them. Most of my immediate concerns were calmed by the way her face blossomed with a smile as she took me in- standing there patiently for me to invite her past the threshold.\n\n\"Earth to Benjamin,\" She said with half a laugh at almost the same time that Rachel chimed in with a \"Well don't just stand there!\"\n\nI made my apologies and stepped out of the way. \"Please, do come in.\"\n\nMaggie took in the tableau quickly. Rachel had donned her dress from earlier in the evening and was sitting on a stool against the kitchen island- a cup of warmed coffee in her hand. \"Hello Rachel. I- I'm glad you're here. I was sort of afraid...\"\n\n\"That he would send me away? No chance of that after that kiss you gave me,\" Rachel replied, taking a sip of her drink even though it failed to hide the smile on her face.\n\nI stepped up behind Maggie, wrapping my arms around her from behind. I grinned as she seemed to almost melt into me. \"Would you like some?\" I whispered near her ear.\n\n\"Hmm? What? I- uhm,\" She stammered, pulling away from me enough to look back and forth between Rachel and I in turn. I couldn't help but notice the growing blush on her face as she did so.\n\n\"I think he means coffee,\" Rachel said, attempting to come to her rescue. \n\nMaggie smiled again, evidently a bit embarrassed at her own assumptions. \"That would be nice, yes. I could use the pick me up, I think.\"\n\n\"I'm on it,\" said Rachel- turning to grab another cup from the cabinet.\n\nI took the opportunity to turn Maggie around to face me. She seemed willing to play along, doing nothing to force me to remove even a single hand from her in the process.\n\n\"I'm glad you decided to forgive me for being such as ass,\" I said softly- finding myself falling into her eyes once again.\n\n\"Me too,\" She said. \"Now. Where were we...\" There was a moment's hesitation before she leaned up to kiss me. Our lips touched as her hands climbed up my chest to finally pull her arms around my neck. It was a tentative kiss, at least at first- as if she still wasn't sure if I was really kissing her. I was wrestling with the specter of my own doubt as well. It didn't take long for either of us to overcome our respective fears and lose ourselves in the kiss. It didn't last forever, but certainly long enough to give Rachel time to prepare her offered beverage. I didn't even hear the microwave beep.\n\n\"Your coffee, M'lady,\" She said, once it was obvious we were finished. \"But no need to stop on my account. That was hot.\"\n\nMaggie attempting to extricate herself from my arms was an awkward ball of reluctance. It felt like an aversion to leaving my arms at odds with anticipation and desire for the offered caffeine. Or perhaps the awkwardness was still just her uncertainty about how to navigate the conversation she was afraid we were about to have. \"Thank you, Rachel. You're a lifesaver,\" She said- taking a sip before turning back to look at me with another mischievous grin. \"Not exactly Starbucks, but it'll do. She deserves most of the credit for convincing me, you know. But I'm sure you, uhm... I mean-\" \n\n\"So you mentioned, yes. We haven't had a chance to talk about that yet.\" I said, unable to banish the grin I had been wearing since the moment I had set eyes on her at the door.\n\n\"Oh, uhm. I, uh- I assumed you would have. I mean, while I was at the party and you two were...\" I could see the uncertainty fogging her features. This must have been exactly the discomfort she had been hoping to avoid. \"I guess you must have had other things to-\"\n\n\"We talked, Maggie,\" Rachel said, cutting off her assumptions, correct or otherwise, before I could myself.\n\n\"Just not about that,\" I finished for her.\n\n\"Right,\" Maggie said- her voice set with a grim determination. She took a long swig from her coffee as if it had a shot of liquid courage hiding in its depths. \"So. How are we going to do this? How do we make this work?\"\n\n\"You're sure that's what you want?\" I asked her, reminding her of at least the illusion of choice. One way or another Maggie was going to sit down at that machine tonight. It would just be easier, and that much more delicious, if I didn't have to trigger her previous training to do it.\n\nMaggie took another long swig before answering. I could see Rachel over her shoulder taking a much slower one as she took in Maggie's demeanor with almost as much hunger painted across her face as I felt.\n\n\"Yes. I want to. I have to.\" Maggie looked to me for support. \"I am not going to give you some sort of ultimatum and risk losing the best friend I've had since grade school.\" She turned to glance at Rachel. \"And even against my better judgement I've developed a... a bond I guess- with Rachel. One that I'm not willing to throw away just to...\" She stopped, as if trying to arrange her thoughts into something more coherent. \"To what? Am I trying to win you or something? I know better than to think of this as a competition. I just... I mean, I don't know how.\"\n\nI stepped up, slowly extricating the near empty coffee cup from Maggie's hands and handed it back to Rachel. My arms wrapped around Maggie once more, pulling her back against my chest while leaving an opening for Rachel to step up in front of her.\n\nA fact Rachel was observant enough to take advantage of. \"Listen Maggie,\" Rachel said softly, their lips mere inches apart. \"It doesn't have to be this hard, girl.\" Rachel chewed on her own lip a moment before continuing. \"He wants you. I want you. All you have to do is stop fighting it and let it happen.\"\n\nI could almost feel Maggie's heart beating frantically in her chest. I suppose it could have been fear- we did have her pretty well locked down between the two of us. If she was afraid of being cornered she was already pretty well trapped. But I didn't think that's what it was that was pushing her heart to race and her breath to come in shorter and shorter gasps.\n\nRachel spared a glance at me briefly before slowly leaning in and kissing Maggie herself. I hadn't given her any indication I wanted her to stop. One of Rachel's arms drew up just enough to gently grasp the side of Maggie's face. Slowly, delicately she seduced Maggie with the softness of her lips and the gentle touch of her probing tongue. When she was done she leaned back, giving Maggie enough room to breathe again. \"I know you want this. You just have to trust us.\"\n\n\"Do you trust us, Maggie? Do you trust me?\" I asked her gently, still holding her safely in my arms.\n\n\"Yes,\" She whispered, in all likelihood as much to herself as to either of us. \"I trust you. And I want to try- but, like I said. I just don't know how...\" By the end her voice had picked up the desperate tones of a child denied her most favorite toy.\n\n\"Aahhh,\" Rachel said with a teasing grin. \"She's even more cute when she's embarrassed.\"\n\nThat earned her a dagger filled look from Maggie before it melted into a smile of acceptance. \"I see what you did there,\" Maggie said.\n\n\"I... might have a solution for you,\" I offered, as if unsure of the value of what I was proposing. \n\n\"I'm pretty sure I know what solution you have in mind,\" Maggie said, turning her head enough to lean it back against my chest. \"Without trying to sound like a broken record, I just don't know if I can make it work. I don't want to ruin everything and walk away with broken heart to boot when I mess it up.\"\n\n\"No, I mean I might have a real solution,\" I told her. \"Not exactly a magic wand, but it might do the trick.\" She took a moment, who knows what thoughts running through her head. Then she pulled away just enough to turn around and look me in the eyes.\n\n\"What are you talking about?\" \n\n\"The training machine. I think I might be able to use it to slip a stray thought or two into your head. Maybe loosen up one or two bolts that have you wound up so tight. Maybe all you need is a little... nudge.\"\n\nMaggie held my eyes with a look of disbelief obvious in her own. I know I was biased, and I know I wanted to see something else there- but sue me if there wasn't a hint of desire swimming in there with all of that doubt. \n\n\"A bit late to memorize Act three, don't you think?\" Maggie said halfheartedly, as if trying to hang on to some reason to walk away. Some excuse to say no.\n\n\"Doesn't matter. Do you want it enough to try?\" I asked her.\n\nRachel slipped her arms back around Maggie from behind, her head peeking up on her shoulder. \"What's the harm in giving it a try? Hm?\"\n\nMaggie seemed to consider it a moment. \"So, are you the angel on my shoulder, or the devil?\" She asked Rachel, tipping her head just a bit to nudge the one now resting next to her own.\n\n\"Definitely the devil,\" Rachel said with a smirk. \"Devils have more fun.\"\n\nMaggie's gaze returned to meet mine, the humor and confusion of the previous few moments all but vanished from her face. \"You think you could... change me? Make me more like Rachel?\"\n\nI gave the moment the appropriate amount of time to have its intended dramatic effect before I answered her. \"I think it's worth a try. For all of us.\"\n\nAnd that is what lead to Maggie sitting down at the training station with the wire-mesh helmet draped over her hair. A click of a button and she was off- the unneeded snippets of Act 3 flashing up on the screen as her blip quickly started falling into the zone.\n\n\"That is so hot,\" Rachel said before I could stop her. \"The look on her face when she succumbs. Slips under like that? Hot.\"\n\n\"Rachel!\" I hissed, startling the poor thing nearly out of her dress. I held a finger to my lips to keep her from any further verbal objections as I ushered her out of the bedroom and closed the door. Which is where this all started.\n\nRachel gave a resigned sigh from her perch on the couch beside me. Her dress shifted beneath her as she rolled over onto her back to give me an entirely different view of her incredible form. \"It's not like you have much of a harem to speak of anyway,\" She chided me. \"We should really do something about that.\"\n\n\"I have Anna.\" I corrected her. \"And soon enough I'll have everyone in her office.\" \n\n\"Don't count your chickens yet, Master. And from what you've told me Anna isn't a slave. Not that I'm sure what I would call her. If you actually were a super villain I'd say she was a henchman. If you ask me it's an important distinction.\"\n\n\"And why is that?\" I humored her as I forced myself to finish off the last of that god awful beverage I had started earlier- tempted to add that shot of Vodka. \"It couldn't make it any worse.\"\n\n\"A Master needs slaves. Especially one that wants a harem,\" Rachel said, her voice indicating she meant every word. \"You can't have a harem of women who just consider themselves sluts. Then you're just a player. Not a Master. Let alone a super-villain.\"\n\n\"I will always be your Master- my precocious sex-slave. Do I need to administer another punishment?\" I was only half serious. I didn't have the time nor the energy to go through that again if I was going to have anything left for Maggie once she was off the machine.\n\n\"Of course, Master,\" Rachel said, appropriately contrite. \"I just think you should try it before you rule it out. Best to keep an open mind about such things.\"\n\n\"I'm not ruling anything out just yet,\" I warned her. \"In fact, I'm just getting started.\"\n\nRachel arched her back enough to tip her head back- her vantage point now granting her a full if upside down view of my face. It also happened to thrust her breasts up like mountains of supple flesh topped with rock hard nipples- signs of her obvious arousal. \"You have no idea how glad I am to hear that, Master.\" She was purring again. \n\nEven with my heightened self-control I knew getting through an hour or more of Maggie's training without fucking Rachel again was going to be a challenge. At least my stamina was improving.\n\n<hr></hr>\n\nI leaned down next to Maggie, just off to her side and in front of her so I could get a good look at her face. Her blank, expressionless face- as she stared almost through the training monitor. The only signs of life were her slow shallow breathing and the rapid movements of her eyes as they tracked her fragments back and forth across the screen.\n\nLight as a feather, I reached up and touched a finger to the ridge of her cheekbone. \"There really is something purely erotic about this- the vulnerability. The helplessness. Almost an... innocence.\" An innocence I had taken full advantage of, using it against her to turn her into- into what? I didn't have a name for what I had done to her. Rachel was my sex-slave. Anna was... a servant? A henchman? Minion? \"Maybe I really am turning into an evil super-villain.\"\n\nWithout thinking, I did the one thing I had just forbidden Rachel to do. I voiced the next thought out loud. \"It's fun to be a little evil every now and then.\"",
        "I yanked my hand away from her face abruptly. \"Fuck!\" I cursed myself. \"Why did I do that?\" I still had no idea if the spoken fragments were stronger, or had anywhere near the staying power of the text ones. So far, the only thing I had learned was that the phrase \"I have a strong sense of self-control. I can resist the seduction and sex appeal of others if I want to\" evidently did not apply to controlling what physically came out of my mouth. The point had been to build up a resistance to the incredibly focused sexual tension I already felt when I was around Rachel. Anna had proven herself quite capable as well. And I still fully intended to add even more to the collection. You can understand my reasons for the precaution.\n\nWhile I was at it, I should have spent some time thinking about a way to train myself to have a better filter between my brain and my mouth. The trick was to do so while not leaving me functionally mute as a result. \n\nIt was too late to do anything about it now. I suppose I could have said something like \"But I would never actually do anything evil\"- but where's the fun in that? It did get me thinking about other experiments though. I needed to know more about the verbal suggestions- and I had a ready, willing, and currently highly suggestible test subject literally within reach.\n\nI took the time to examine Maggie again. She couldn't wear her theater wardrobe to the after party so she must have changed back into whatever it was she had been wearing before. Currently that meant a pair of pink and white lace up sketchers, a simple pair of black jeans, and a black spaghetti strap top. Nothing fancy. Which was all too common for Maggie- especially when she was around me. I decided it was time to give her newly developed desire to show off her body a bit more specific direction. \n\n\"Maggie, except when you're exercising you can't stand wearing sneakers or sandals anymore. You love wearing wedges, high heels, or boots with at least three inches heels whenever you can get away with it.\" That would be a good test for longevity. As long as I could keep myself from biasing her with a stray comment. When I started seeing sneakers and flip-flops again I would know the suggestion had worn off.\n\n\"And how about something a bit more... drastic...\" The obvious choice was staring me in the face- or the rather obvious lack of a particular set of assets. \"Rachel has such beautiful and impressive tits, doesn't she Maggie. You're tired of having such a flat chest. Once you see Rachel's tits you're going to want some implants of your own. At least as big as hers, maybe even bigger.\" \n\nIf it worked and she went too big, it would likely get in the way of her career on stage. Which was half the point of using it as a test. She, at least, had reason to resist that suggestion. And if she didn't we could always look into porn instead. \n\n\"That's enough tweaking. I could do this all night. Time to pull her out of the oven and see if she's done.\"\" I moved around her so I could reach over the table and double tap the escape button on the control machine to close down the program. Maggie was blinking erratically as her face lost that helpless innocence I had been lusting after moments before. I took the few moments it would take for her to get oriented to remove the wire-mesh helmet from her hair. \n\nShe was still lost in thought as I finished closing down the machine. Were it not for all of the previous training sessions I had already witnessed, I might have been worried that something had gone wrong. \n\n\"Maggie,\" I said as I reached down to touch the side of her face, drawing her gaze up to mine. Her brown eyes were moist with unshed tears and thick with emotion. She opened her mouth to speak more than once, but seemed unable to form the words she wanted to express.\n\nI leaned down on my knees again, so that I was just below eye level with her. \"Maggie,\" I tried to start again, but was overrun as a massive grin exploded on her face and the floodgates of her thoughts broke forth.\n\n\"Benjamin, you did it!\" She nearly gasped. \"Your machine... is fucking amazing! I can feel it. I feel... Well, I definitely feel different. Think of the potential! It can really do that? It can change people? You can change people? Brainwash them into whatever you want? \" She put extra emphasis on the word, her eye flashing with a hint of instilled desire as she spoke.\n\nI smiled, immediately captured by her enthusiasm. The subject matter helped of course. \"I sure can. I changed you- just like you asked. And I've already used it on a clerk, of sorts, at a local law firm. Going to use her to get my hands on the entire staff, and then all the lawyers as well. I'll have cadre of loyal little worker bees at my beck and call to keep us safe.\" I paused a moment, letting it sink in. \"What do you think?\"\n\nHer eyes jumped randomly around my face as her smile grew even more predatory. \"I think,\" She said, reaching out and taking a fistful of my shirt to pull me closer. \"You've got your drive back. I'm proud of you.\" And she was, too. I could see it- mixed in with the growing desire and arousal. That was getting easy to spot lately. \n\nI would have kissed her then- but suddenly it was as if the last two weeks hadn't happened. As if I didn't have a machine that would allow me warp, twist, and corrupt any mind I could reach with it. This was Maggie- the girl I had lusted after since we were in high school. And she was proud of me. It was like water to a man who had been dying of thirst without the slightest clue. Even as I cursed them, I could feel the tears welling up in my eyes at the sudden rush of my own pent up emotions. \n\n\"Maggie- I've wanted you for so long.\" I told her, half choking on the words as I forced them out.\n\nHer lips were pursed, behind a pained but happy expression. \"I'm right here, Benjamin,\" She whispered, holding me just inches from her. There was no room for hesitation anymore. She was offering herself to me, and there was no way I was letting any of Benji's old baggage weigh me down anymore. I was Benjamin now- and she was mine. \n\n\"I know, I put you there, remember?\" I whispered back, pulling her up with me as I stood. I had time to smile, briefly, as the training chair fell backwards behind her, crashing to the floor and rolling awkwardly. Then I didn't care anymore as I was lost in the feel of her lips on mine, and the soft caress of her tongue as we kissed.\n\nMy hands wrapped around her and roamed up and down her- finding the edge of her shirt and invading beneath it to enjoy the warmth of her skin against my own. We stopped kissing briefly- just long enough to manage the removal of her top, and then my own. It was nothing compared to the practiced grace of others I had been with recently- but I didn't care.\n\nShe was still wearing her plain and unadorned black bra as we fell back onto the bed. My hands found their preferred places, one arm caught beneath her and down the small of her back as the other reached up to take her neck and guide her lips back to me.\n\nWe kissed with abandon and passion, for much longer than I would have thought either of us cared to. There was so much more to explore, and yet we seemed to be trying to catch up to years of awkward adolescent petting instead of just fucking. It was stupid. And beautiful. And juvenile. And touching.\n\nFinally, as we took a moment to breathe again, Maggie rediscovered her bi-curiosity. \"You could do it to Rachel,\" She whispered. \"Make her hot for the both of us.\"\n\nWe both nearly bounced out of the bed as the almost entirely forgotten one answered her summons from the bedroom door. \"Oh, he already did. I would have been hot for both of you without it though.\"\n\n\"Rachel!\" Maggie scolded, even as she giggled through the brief adrenalin rush. \"Give a girl a heart-attack why don't you.\" \n\n\"Don't mind me,\" Rachel said, pulling a finger out from behind the gathered pleats of her dress between her legs and proceeding to lick her juices off of it. Evidently we had both been so focused we had failed to notice her enter the room, lean against the wall, and proceed to finger herself as we made out. \"You two are cute together. I could watch you kiss all night. Course, I could watch you fuck all night too.\"\n\n\"You are a naughty girl,\" Maggie said, turning to check with me briefly before slinking off the bed and slowly walking towards her. It was a short trip, but still more than enough time to shed her simple bra- discarding it to some random corner of the room.\n\nRachel's eyes appraised the half-naked woman approaching her- drinking her in while shifting her stance to be even more inviting of the sudden attention. \n\n\"And what did he do to you, hm? Not a servant like his lawyer friend. No, your talents lie... elsewhere.\" Maggie raised a finger to her mouth, biting it briefly as she took the final step to meet Rachel against the wall.\n\n\"I suppose it's safe enough to tell you,\" Rachel purred in answer. Her glance caught my eye over Maggie's shoulder briefly. \"I am my Master's sex-slave. I belong to him. Completely.\"\n\n\"A sex slave, hm?\" Maggie leaned up against her, one hand reaching up to her face while the other was hidden between them. \"So you would, uhm...\" I realized where that hand must have been as Rachel suddenly arched her back against the wall, her head turning slightly towards me as a moan escaped her lips. \"You would do whatever he wants- sexually.\"\n\n\"Mmm, yes,\" Rachel hissed, one arm arching up against the wall above her to help brace her against Maggie's attentions. \"Whatever he wants- period.\"\n\nMaggie pulled her hand free, fingers wet with Rachel's juices as she half turned towards me. \"And is she a good sex-slave?\"\n\nI raised my eyebrows noncommittally. \"Most of the time, I suppose.\"\n\nHer eyes were half-lidded in pleasure as Maggie made a show of sticking her fingers in her mouth and cleaning them off, just as Rachel had done moments before. \"Well, she certainly tastes good.\" She smiled at me, a devilish grin before turning back to Rachel, pulling her face towards her for a sharp and intense kiss. It ended quickly, but it was still an enjoyable treat to observe. \"Tonight is for me and Benjamin. But you can join us if you like.\"\n\nAnd with that, Maggie released her- stripping off the remainder of her clothes as she returned to the bed. I had been pleased to see a more than mildly disapproving glare directed squarely at her shoes as she removed them. Taking my que, I started removing the rest of my offending garments as well. \n\nMaggie licked her lips at the sight of my cock as I slipped up to the edge of the bed and leaned up on my knees. \"Do I finally get to have this inside me,\" She asked, reaching out for the shaft and wrapping a hand around it possessively. Her eyes closed as she pursed her lips and hummed with pleasure. \n\nI took advantage of the moment to wrap an arm around her, leaning down to kiss her neck and slowly work my way up the side until I was nibbling on an ear. She was gently circling my cock with her hand, a slow and sensuous hand job- it felt so good I couldn't help but moan softly.\n\n\"You don't seem in too much of a hurry,\" I whispered into her ear as I put my free hand to good use, cupping one of her petite breasts and squeezing with a bit of gentle pressure of my own.\n\n\"I was just... enjoying the way you feel. I can't decide exactly where I'd like to put this first. I've never really been that into blowjobs before, but now...\" She paused for a moment, savoring the attention I was giving to her breasts as I leaned down to suck gently on one nipple, and then the other.\n\nI felt the pressure of Maggie shift into me slightly even as another pair of hands slowly wrapped around her waist. I reached past Maggie's thigh with one hand to grab Rachel's ass and pull her that much closer to us both. \n\nMaggie tipped her head to the side, allowing Rachel access to the opposite side of her neck that I had been kissing, moaning in pleasure at the additional sensation. \"Oh god this feels so good.\"\n\n\"You're going to love the way he tastes, Maggie.\" Rachel teased her between trailing soft kisses up and down her neck. \"Go ahead, try it.\"\n\nI leaned back on the bed, slipping my legs down the side to give Maggie easier access. Rachel took advantage of my absence to wrap both arms around Maggie's chest to squeeze her breasts with both hands. \"Go ahead,\" She said hotly into Maggie's ear. \"He's waiting for you.\" \n\nMaggie was nearly panting with arousal as Rachel released her, pushing her forward onto the bed. Maggie sunk down onto her chest between my legs, reaching out with one hand and guiding my cock into her mouth. She nearly swallowed half of it in one gulp, moaning around it as she slowly pulled back up before sliding slowly down once again. \n\nShe pulled off the tip a few moments later with an audible pop, smiling up at me. \"You fucking did this to me, didn't you. You made me love the taste of your cock. Will your cum be just as good?\"\n\n\"Better,\" Rachel said as she climbed onto the bed and sprawled out next to me. \"Wait till you get a taste of how good he feels inside your tight little pussy.\"\n\nI could see the hunger for exactly that flash in Maggie's eyes. Or maybe it was the sight of Rachel's naked flesh in all her glory. It didn't really matter. \"Come here,\" I told her, curling a finger at Maggie to make my intentions clear. \n\nWith some reluctance she released her hold on my member and climbed up the length of me, kissing me softly all along the way. By the time her face was once again close enough to pull her into another kiss she was ready. \"I've been waiting for this for so long,\" I told her. \"I'm not going to have our first time be a blowjob.\" \n\nMaggie feigned insult, the attempt made all the more laughable given the smile on her face. \"There something wrong with my blowjobs?\" \n\n\"Nothing a few lessons from Rachel can't fix,\" I told her as I guided the tip of my cock between her legs. \"I give you an 'A' for enthusiasm though.\"\n\n\"I haven't been graded on- oh fuck,\" Maggid said, moaning as she slid down the length of my shaft until I was all the way inside her. \"Holy shit, this feels so good.\"\n\n\"Told you,\" Rachel said, rather full of herself as she started running a hand in circles on my chest.\n\n\"Oh god,\" Maggie moaned, quickly approaching her first orgasm if I hadn't missed my guess. \"Where have you been all my life?\"\n\nI could almost forgive her the mistake- she wasn't really thinking straight. But as pillow talk goes, it was the wrong thing to say in that moment. \"Waiting for you,\" I growled, picking up the pace as my temper flared. \"You should have been mine years ago!\"\n\n\"Well, I'm yours now!\" Maggie cried, riding the wave of my anger and letting it push her over the edge as she collapsed on top of me. I didn't stop. \"Holy- fu- I'm...\" Cumming, yes. I could tell. \n\nIt took some of the edge off of my anger, but I still needed more. A small voice reminded me to thank Rachel later. As usual, she had been right. Maggie was so tight around my cock as her orgasm attempted to milk me into my own climax. There was no way I would have lasted through that otherwise. \n\n\"Fuck that was good,\" Maggie moaned, panting on top of me.\n\n\"Oh, I'm not done with you yet,\" I growled, though softer this time. I could certainly feel the pressure building, but I had more than enough in me to keep going for a while longer. I pulled out of Maggie, ignoring her complaints as I turned her around and flipped her down beside Rachel on the bed. \n\nI lifted one leg over an arm as I pulled up between her and guided my cock back inside of her.\n\n\"Holy ssshhhh...\" She moaned, arching her back as I pushed into her even deeper than I had before and began fucking her in earnest. It was my turn now. \"I'm so- ssss... sorry, BenjaMIN! I did- didn't...\"\n\n\"Hush girl,\" Rachel said, quite effectively converting Maggie's attempts at apology into moans of pleasure as they kissed. \"You're his now. No sense crying over spilled milk. Enjoy the ride.\"\n\n\"Fffuck...\" Maggie cried a few minutes later. \"I'm... I'm...\" Cuming again, yes. That was okay. I was getting closer too.\n\nI could see Rachel playing with herself, two fingers sliding in and out of her pussy as she lay sprawled beside us- watching. And moaning with her own desire. \"Fuck her, Master!\" She said through clenched teeth as she pushed herself over the edge as well. \"Use her!\"\n\nIt was enough to give me pause. \"No... that's not-\" I slowed, letting go of Maggie's leg and climbing up on top of her into a more traditional position. \n\n\"Wha? Is something wrong, Benjamin?\" Maggie asked, concern clouding her otherwise pleasure addled features.\n\n\"No,\" I said softly, looking her in the eyes as I slowly started to slide in and out of her once more. \"I'm just...\" I wasn't sure what to say, so I said nothing- leaning down to kiss her instead. It started out soft, but gained passion quickly- the rhythm of our tongues probing each other's mouths following the steady increase of my cock sliding smoothly in and out of her. \n\nWhen I finally released her, drawing back to give us both a chance to catch our breath, the eyes that met my own glistened like mirrors. I could see my reflection in the watery sheen that covered them- just as I knew she could see in mine as I blinked away the tears that had collected there. \"I love you,\" I told her. \"I always have.\"\n\nShe nodded, pursing her lips and swallowing back tears of her own. \"I love you too. I think I always have. I was just too scared to... to...\"\n\nRachel's presence faded into the background then- though I'm not sure if it was just because of our shared focus, or some part of her expertise as an escort. In the end it didn't matter. I had fucked Rachel earlier that evening. This was different. This was Maggie. As long as we didn't talk I could just make love to her and let that be a balm to all the years of pain and loneliness- for both of us.\n\n\"Mine,\" I whispered, still looking Maggie in the eyes across the mere inches between us.\n\n\"Yours,\" She said softly in return. \"All yours.\"\n\nWhen I finally finished, cumming inside of her, both Maggie and Rachel finished with me. It seems Rachel hadn't entirely vanished after all. She was more than willing to help clean us up afterwards- especially Maggie. I was spent, but I did enjoy listening to Maggie orgasm as least once more as Rachel did her best to retrieve as much of my cum as she could from where I had left it. Rachel was never one for backing down from a challenge."
    ],
    "authorname": "_FirstBorn_",
    "tags": [
        "female submissive",
        "tech control",
        "relationship",
        "mind control",
        "male dominant",
        "brainwashing",
        "sex slave"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/prototype-ch-10"
}