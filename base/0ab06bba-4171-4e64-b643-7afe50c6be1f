{
    "title": "There and Back Again Ch. 101-102",
    "pages": [
        "Chapter One Hundred One: Accusation and Explanation \n\n*Trigger Warnings: Mentions of all of the Very Bad Things you fear would happen in a medieval dungeon. No detailed descriptions.*\n\nOnce all of our companions \u2013 except Wynne, Aedan, and Duncan, for obvious reasons \u2013 were there, Alistair stood. He rubbed at his neck the way Theron always did, and I saw Anora flinch. \"Alright, so, would someone please explain what in the Void happened over there?\"\n\nZevran was the first to speak. \"We were betrayed, is what happened, isn't it, your Majesty?\" His gaze never left Anora's face, and she flushed slightly. \"You had the opportunity to stop it, to tell the truth, and you lied to save yourself.\"\n\nShe stood, pacing a couple of steps back and forth. \"I told you that no one could know it was me. I told you I'd be taken back to the palace, perhaps even killed. The Warden spilled my identity to a room full of those who identified themselves as my father's soldiers! What did you expect?\"\n\n\"I expected that the reigning monarch would have enough control over her own people to assure her own safety. I expected that she might consider the good of an entire nation over her personal well-being. Do you know there are only three Grey Wardens in the country who can end the Blight?\" That she was supposed to know of \u2013 Aedan, Alistair, and Riordan.  \"And your selfish actions almost caused the death of one of them.\"\n\nHe stalked closer to her slowly during his tirade, and Anora stepped back again and again, until her back was against the bookshelves behind her. Finally Alistair put out his hand, and Leli stepped forward and tugged on Zevran's arm.\n\nWith a disgusted snort, he shrugged them off; the assassin turned and stepped back against the opposite wall, then brought out a dagger and began ostentatiously cleaning under his fingernails with the sharpened edge. \n\nLeliana offered a small curtsy to Anora. \"I am Leliana, your Majesty. We didn't have a chance for introductions earlier.\" They exchanged nods and she turned back to Alistair. \"Perhaps if I tell the story from the start?\"\n\nAlistair nodded and gestured; he and Anora sank back into their chairs.\n\n\"We infiltrated the estate through the ramparts, as we planned. We had poisoned the guards' food, and so there were very few walking the halls. We worked our way toward where her Majesty was being detained. When we arrived at her door, we discovered her door had been sealed with magic. We went to find the mage responsible.\n\n\"We found Nathaniel in one of the rooms, chained to the wall; he can perhaps tell us his own story after, yes?\" The archer nodded, and Leliana continued, \"He asked to come with us, and Aedan agreed. Kallian was with him, and after Anders healed her, she came as well.\"\n\nI blinked. Kallian? As in Tabris? As in, the city elf origin? I'd assumed Tabris had died in the assault on the Arl's estate, after Vaughn interrupted the wedding in the Alienage...\n\nI realised I was missing what Leliana was saying. \n\n\"...stairway to the dungeon was in Howe's actual bedroom! What sort of depraved person has private access to the dungeon from his bedroom?\"\n\nKallian had paled at the mention of it, and shrank back behind Wulf; I realised my worst imaginings probably didn't do the truth any justice. I shuddered and shot the poor girl a sympathetic look, which she didn't see, hiding as she was behind Wulf. I checked Nathaniel's expression, but he was staring at the wall, not allowing any emotion to creep through.\n\nLeliana continued, \"We went into the dungeon and fought our way through the guards \u2013 apparently they hadn't eaten any of the poisoned food. We found a nobleman, Oswyn, the son of Bann Sighard, in a cell, having been tortured to within an inch of his life \u2013 all because he knew that one of his guards was in the army and had been ordered to leave the field at Ostagar before the King was over-run by darkspawn.\"\n\nShe paused, letting that sink in for everyone. \"There was a templar, Alfstanna's brother \u2013 the one who'd caught Jowan \u2013 in Lyrium withdrawal, being detained so he couldn't tell anyone that Loghain had freed a blood mage and sent him to Redcliffe; Anders gave him some Lyrium, and we've already sent a message to his sister, who should be here soon. We also found Vaughn, the son of Arl Urien, the late Arl of Denerim, but he was...already dead.\" \n\nI doubted most of the group would have noticed Leli's brief pause before saying Vaughn was dead. I glanced back at Kallian to see her tensing, looking ready to flee. Vaughn might not have been dead when they arrived, but he didn't last long after. And no one will miss him, either. I wondered whether they'd managed to find his stash of gold before he died, not that we were in desperate need of the money. Wulf reached out and squeezed her hand softly, and she relaxed slightly when no one jumped up to accuse her of murder.\n\n\"We freed some other prisoners, including Kallian's cousin.\" I was fascinated to learn there were others we didn't see in the game; it made sense \u2013 it was a huge dungeon, there had to be other victims. \"Then we finally found Howe. He must have heard the commotion in the rest of the dungeon, because they were waiting for us when we opened the door. We fought; Anders was injured, but we won. Nathaniel killed Rendon Howe, and we left to see if her Majesty was free.\"\n\nI was rocked again. Nathaniel killed Howe? There was more to that story, I knew, but clearly Leliana wasn't going to give details. I'm amazed Aedan let him live, never mind allowed him to be the one to kill Rendon. I'll ask Zevran later, if Nathaniel doesn't tell us.\n\n\"She was, and so we left; as we tried to sneak back out the way we came, we were ambushed by a large group of Loghain's soldiers. Aedan tried to tell them that we were rescuing the Queen, but she denied it and told them to arrest him and take him to Fort Drakon. We fought, and I assume her Majesty slipped out while the soldiers were occupied trying to capture us.\" Anora nodded. \"We won, but with Anders unable to heal...\" She glanced in the direction of Aedan's room, leaving the rest unsaid. \"It was a long battle, and then getting back here took longer as well because we had to evade every guard on the streets, not knowing if they'd been alerted to look for us.\"\n\nThe mood in the room was ugly. Aedan was on the verge of death upstairs, and the one person who could have prevented the fight sat among us, posture rigid, expression neutral, hair perfect. It made me sick, and clearly I wasn't the only one. Theron was shaking his head, and I could almost picture the sorrowful expression hidden behind his helmet. What I wouldn't give to see Anora's face if Theron took off his helmet...The rest of the companions radiated rage, and Teagan was looking at Anora like she was a bug he'd accidentally crushed with his best shoes.\n\n\"So would you like to wait until Aedan is awake, or would you prefer to start now with denying that it was you who drew us into a trap, your Majesty?\" Zevran's tone was deceptively calm, but the danger patent in the question was obvious. \"Or are we supposed to ignore the similarity in tactics between yourself and your father at Ostagar?\" In a way, I was glad he'd asked it; not being able to accuse Anora of exactly that in the game had infuriated me. Theron twitched, whether in shock or anger I couldn't say.\n\nAnora stood, drawing herself up to her full height. \"I will try not to hold your impertinent accusations against you; your friend is injured, and I will attempt to remember that you are not yourselves at the moment.\" She turned to Eamon. \"I wish to retire to my room to rest. I would like to be notified the moment the Warden is awake, Arl Eamon.\" \n\nEamon nodded silently, and Anora stalked out of the room, shoulders stiff. I took a big breath of relief when she made it through the door without one of Zevran's daggers buried in her back. With her gone, we closed and locked the door.\n\nThe mood wasn't exactly brighter once Anora had left, but it certainly was a little less hostile. I wasted no time before crawling into Alistair's lap; Zevran took my abandoned chair, and we all just relaxed for a moment, getting our bearings.\n\nAlistair sent a runner to get Duncan, who slipped in with his helmet on. We quickly filled him in on what Leliana had told us, and Zevran's accusations.\n\nLeliana turned to Zevran. \"We cannot be sure-\"\n\n\"Can't we? That ambush was no accident, Leliana.\" Zevran looked right and truly pissed. He turned to Nathaniel, practically spitting fire. \"What of it, Howe? Was Anora conspiring with your father the whole time?\"\n\nThe dark-haired man sighed. \"I don't...know. I can't be sure. My father bragged to me about the Queen being at the estate, but he didn't say whether or not they were colluding. I just don't know.\"\n\nTo my surprise, Zevran seemed to accept this, and despite his pinched lips, his objections subsided. I was shocked. Zevran believes him, respects him enough not to question that? After a minute, attention turned back to Nathaniel and Kallian, who was still half-hidden behind Wulf. I wondered how much of that was because he was an elf, and how much because he was one of her rescuers.\n\nAlistair gestured to Nate. \"Perhaps you'd care to fill us in on your story, then?\"\n\nHe nodded, a familiar broody expression reminiscent of the game on his face. \"For those of you who don't know me,\" his gaze travelled around the room and paused noticeably on me, \"I am Nathaniel Howe. My father was the man responsible for the deaths of the Couslands and, apparently, countless other atrocities over the past few months. I had been in the Free Marches for years, when I received a strange letter recommending I return and see what my father had been up to first hand. So I did, arriving in Denerim...a month ago or so? Only to learn that my father had indeed assumed the Teyrnir of Highever as well as the Arling of Denerim.\n\n\"I went straight to the Arl of Denerim's estate, where I'd heard he was living, to inform him of the rumours circulating about him...only to find all of them, and more, to be true.\"\n\nHe turned for a moment, apparently examining a shelf of books, but I guessed he was giving himself time to school his expression. \"My father was surprised to see me \u2013 he never intended for me to return to Ferelden, I knew that long ago \u2013 but he took me in anyway. He bragged about his new titles, excited that the Howe family 'had finally gotten what we deserved.' He didn't come right out and say that he betrayed the Couslands, but between what he did say and the rumours, even among his own men, it quickly became obvious.\n\n\"I confronted him, and he didn't deny it. And then...he showed me the basement.\"\n\n\"The dungeon.\" Alistair's expression was grim, and Nathaniel sighed.\n\n\"Yes. I didn't know...at first I didn't know what was down there. Having figured out that I was unlikely to approve of his methods, he tricked me into going down there saying he'd found something I needed to see. He gave me a tour, showing me all of his prisoners \u2013 in cages, being tortured, being raped by his soldiers \u2013 and then he locked me in a cell. Told me he'd give me some time to see if my attitude improved.\" \n\nKallian sobbed at the mention of rape, and Wulf turned and wrapped his arms around her, hiding her from us. Leli got up and went over to the two elves, whispered for a moment, and then Wulf led the poor girl out of the room. Kallian briefly made eye contact with Nathaniel, and nodded; he acknowledged it with a frown.\n\nHe continued, once the door closed behind her. \"He made sure I could hear what was happening...I had to listen while they...\" He gulped. \"He let my brother participate. In the rape and the torture. He corrupted my little brother, and Thomas took part in my father's vile perversions.\" The silence in the room was painful as we all contemplated that horror.\n\n\"I wasn't given food or water for three days. By the time they let me out, I was delirious, and too weak to stand. He locked me in a bedroom and gave me a day to recover. Then he came back and asked if I would join him in ruling the world \u2013 he implied he would marry me to Anora, and then he would be the power behind the throne \u2013 or if I would throw my life away.\n\n\"I told him no. I called him a monster. He...had me tortured. While he watched. And then healed, and tortured again.\"\n\nThe impassivity on his face was quite possibly more horrifying than the story he was telling. How bad do things have to be that someone can describe being tortured by their own father without flinching?\n\n\"I cracked. After enough time, he broke me. All in ways that wouldn't permanently mark me, of course. But I finally agreed to do whatever he wanted, if only the torture would stop.\" Now he looked ashamed, and I wanted to cry. He was tortured, and the part that really bothered him was that it worked?\n\n\"He brought in Kallian. She was one of the ones I'd seen being...\" He didn't have to complete that sentence for us to catch on. I buried my face in Alistair's shoulder, not sure how much more I could hear before I started going mad. \"He made her nurse me back to health. Refused to have his mage heal me, refused to give me poultices or potions. She had to hand feed me, help me bathe and...things.\" He flushed. I bet they don't make bed pans in Thedas.\n\n\"She was kind. Far kinder than I deserved, being the son of the one who'd violated her. I know she'd been captured by Vaughn, and I assume raped, but nothing he did to her could match what my father had done. And despite that, she was kind. Over a couple of weeks, I slowly healed to the point that I could move, start rebuilding my strength. There was never enough food \u2013 he wanted to keep us both weak \u2013 but I was recovering.\n\n\"And that's when he came to me with his demands. He wanted me to prove my loyalty to him. Prove that I was capable enough, ruthless enough to do what he needed done. And to prove it...\"\n\nHe turned away again, practically whispering, as though saying it quietly could alleviate any of the pain. \"I was to...to rape Kallian. To torture her and rape her. The kind woman who'd nursed me back to health. And he made his demand in front of her, no less. He'd refused me healing, made her take care of me, so I would have two weeks to get to know her, respect her...to make it that much worse when I was to rape her. And the alternative, if I refused...he would give her to Thomas. He said he would give me a day to make up my mind. That...was yesterday.\"\n\n****\n\nWe called a break after that, everyone eager to escape the terrible mental images brought on by Nathaniel's story, but none more than Nate himself, I imagined. I wanted to go try to offer comfort to Kallian, but imagined she might not welcome the efforts of a human. Likewise I thought to offer sympathy to Nathaniel, but he held everyone at arm's length with his glower alone. Instead, I invited him to go with Zevran, Alistair, and I to check on Aedan.\n\nAnders informed me he'd have a nap and when his mana had recovered sufficiently, he'd come to Aedan's room. Solona dragged the blond mage off towards our room, and I wondered if he would get any rest at all, not that I'd blame them.\n\nAedan was unchanged; Wynne took the opportunity to slip out and get something to eat while we were there. Zevran knelt by Aedan's bedside, holding his limp hand; we decided to give him some space. I ended up back in the library with Alistair, Theron \u2013 still helmeted, Leliana, and Nathaniel. We locked the door so I could crawl back into Alistair's lap, and he stroked my hair while holding me tightly.\n\nI turned to Nathaniel, the guilt so overwhelming I had to say something. \"I'm sorry, Nathaniel. I wanted you to see what your father was doing, but I never thought...it's my fault. Everything you went through. I'll never be able to tell you how sorry I am.\"\n\n\"You sent me the letter?\" His eyebrows crawled up his forehead in surprise. Leliana let out a gasp as well, and I realised I'd only told Aedan and Alistair about my letter. Leli had mailed it, but didn't know what it said. Duncan...is going to be furious.\n\nI nodded, holding out the rose necklace I'd used in lieu of a signet ring to seal the letter.\n\n\"But, my Lady, I don't understand. How do you know me? I'm certain we've never met. I don't even know who you are.\"\n\n\"I'm Sierra, Aedan's sister. We haven't met, but I know of you.\" \n\nHis expression was incredulous. \"I grew up with Fergus Cousland, my Lady. If he'd had a sister, I'd have known.\"\n\n\"I was raised...away from Highever.\"\n\nHe shot me a skeptical look. \"Why would the Couslands send their only daughter away?\"\n\nI sighed, trying to decide how to respond, when he flushed. \"Did they know? That my father...?\"\n\n\"No, no. Nothing like that. It's a long story, one I don't have time to prove to you at the moment. But I knew that if Aedan killed your father, if you hadn't seen it for yourself...I knew you'd be angry. You wouldn't believe that your father had done...everything he has. That you might even try to kill Aedan thinking he'd murdered your father without reason. I wanted to avoid that.\" I sighed, covering my face with my hands. \"I never dreamed he'd do...that...to you.\"\n\n\"But how did you know what he was doing? He hid it extremely well \u2013 none of the rumours even mentioned the dungeons, or the Queen. They were all about the Couslands.\"\n\n\"That's the long story. Let's just say I...have my sources. For the same reasons I was sent away as a baby. Once Aedan is better...well, we can tell you about it then, okay? I just wanted to say I'm sorry.\"\n\nHe stared at me for a minute, unblinking, and then looked away. \"It's not your fault. If he hadn't had me here to distract him, he might have done something worse to someone else. This way...well, I got to see exactly who my father was. It's better this way.\"\n\nAbruptly he got up and fled; Leliana shot me a sympathetic look and went after him. I turned to bury my face in my favourite spot on Alistair's shoulder and let out a few tears that had been threatening for a while. Theron slipped out of the library and closed the door behind himself, giving us some time alone.\n\n\"I didn't...Maker, I never thought about the consequences of the things I did. I never thought anything like this could happen because of me. What if...what if I've done something terrible? What if, because Duncan and Theron survived, or something...what if I've made everything worse?\"\n\nHe tilted my tear-stained face up and kissed the tears away from my cheeks. \"All you can do is your best. No one can know the outcome of their actions, regardless of how much knowledge they have. You did what you thought \u2013 what we all thought \u2013 was right, and you have to believe in that. Even when things seem bad.\"\n\nHe kissed me then, a soft, warm, giving kiss, letting me take what I needed from him. I wanted to stay like that forever, but there were so many things to worry about. I sighed and pulled away, running my fingers through his hair and pressing my forehead against his.\n\n\"I don't know if I can do this.\" His eyebrows furrowed in confusion, so I explained, \"Pretending we're not together. Everything is just too horrible, I can't deal with it without you.\" He rubbed his nose against mine, and my lips twitched in the barest of smiles. \"It was a terrible idea,\" I admitted. \"I wanted Anora to look bad. I wanted to see if she was as horrible as I thought. And she is. But it wasn't worth it.\"\n\nHe squeezed his arms around me. \"Honestly, we'd have had to do it anyway \u2013 if I'm supposed to be the contender for the throne, I can't already have a wife. The nobility wouldn't be okay with that, according to Eamon. But I don't see any reason we have to continue to pretend not to be together...I'm sure the servants already know anyway. Which means Anora can find out, if she cares to. And since the nobility seem convinced that political marriages are the way to go, I doubt she'd really even see it as an impediment if she decided she wanted to consider a marriage alliance. We can pretend you're my mistress.\" ",
        "He looked profoundly uncomfortable with the word mistress, and I giggled. I smiled at him around a few more tears. \"Does that mean we can share a room?\"\n\nHe grimaced. \"We should probably keep up the fiction of separate rooms, but I have no intention of sleeping alone, my Lady.\" He kissed me again. \"Okay?\"\n\n\"Okay.\" I kissed him again. \"Have I told you I love you?\"\n\n\"Not in at least an hour,\" he teased.\n\nWe went back to his room to have a nap, only to discover Solona standing in the hallway with Leli, Wulf, and Kallian, having a discussion.\n\n\"I know, but...\"\n\nLeli interrupted herself when she saw us approach; Kallian shrank back behind Wulf again. Alistair stopped several feet back, leaving a respectful space between himself and the fearful elf, and she seemed to understand the courtesy, shooting him the briefest of smiles. \n\n\"Sierra, please. You must help us.\" Leliana held her hand out and pulled me closer.\n\n\"Hello, Kallian. I'm Sierra.\" I ignored Leli for the moment, speaking quietly to the elf. She nodded, and I turned to look at Leli. \"What do you need?\"\n\n\"We are short of rooms. The only place for Kallian to sleep is the barracks.\"\n\n\"Oh, that's not going to happen. We're not making you sleep out there with all of those men.\" Wulf winced, and Kallian gripped his hand. \"Present company excluded.\" Wulf snorted softly, and we exchanged quick grins. \"I was actually wondering whether you'd like to go back to the Alienage and be with your family.\"\n\nWithout meeting my gaze, she shook her head. \"I can't go back. Not like this. There's no place for me there anymore.\"\n\nI was obviously missing something, as Wulf wrapped his arm tighter around her shoulders, and a tear trickled down her cheek.\n\nLeli looked at me. \"Dear Kallian believes she has been...tainted, by her experiences, yes? That she is no longer pure, and therefore cannot go back.\"\n\n\"Not to mention I'd probably be arrested for attacking Vaughn and escaping prison.\"\n\nI carefully reached out, placing my hand on her forearm gently. \"No one will hurt you, Kallian. The guards will leave you alone \u2013 they owe us a lot. And I know your father and Valendrian will be eager to see you. But you don't have to go now, and you don't have to stay there. No one will hurt you here, I swear it.\"\n\n\"I'm just an elf. What's to stop them? I'm no one's servant, so I have no protection.\"\n\n\"I would stop them.\" I squeezed her arm slightly, and she looked up. \"We all would. We have a few elves travelling with us, you may have noticed, and they are not our servants. They are equals, as would you be. And you can ask the servants here \u2013 you won't hear of any abuse from any of us.\"\n\nI turned to Leliana. \"Actually that gives me an idea. Until we figure something else out, being someone's servant would protect her, right?\" Leliana nodded, as did Kallian. \"Well then, let's give her a job title. I'm supposedly Lady Cousland,\" I put scorn on the word lady, and Alistair laughed, \"so why don't I have a...lady's maid?\" I turned back to Kallian. \"You wouldn't need to do anything \u2013 I don't need a lady's maid \u2013 but you could sleep in our room,\" I gestured to Solona and the mage nodded, \"and if anyone gives you any trouble, you tell them I'll have them drawn and quartered if they do anything to you.\"\n\nKallian looked skeptical, but Wulf turned her and spoke quietly into her ear. They talked for a moment, and then she turned back. \"I suppose sleeping on the floor isn't the worst thing that could happen.\"\n\n\"Nonsense. You can share the bed with Solona, if you're okay with that? I'll be sleeping... elsewhere.\" I reached back and Alistair took my hand, and a knowing smile passed across Leli's face.\n\nKallian studied Solona for a moment, before glancing at Wulf; he nodded reassurance, and she relaxed. \"That would be fine. And I can work, my Lady-\"\n\n\"Oh, don't start that nonsense. I'm no more a lady than Wulf is.\" He snickered, and I shot him a grin. \"Just Sierra, and all I need for you to do is recover, okay? Eat, rest, get Wynne to check out your physical health. Train, if you like \u2013 there are weapons and sparring dummies in the barracks.\" \n\nAt that, interest flashed in her eyes, before she dropped them demurely. \"Elves are not permitted to use weapons.\"\n\nI giggled. \"Someone should maybe have told Zev and Wulf that.\"\n\nShe glanced up at Wulf, taking in the sword on his back, the dagger sheathed at his hip, and the uncomfortable way he squirmed when I pinned him with a look. \n\n\"How many?\" I asked.\n\nHe twitched, and looked at Kallian. \"Seven. The sword, three daggers, and three throwing knives.\" I looked at him again, and he sighed. \"And a boot knife. But that's it! I swear.\"\n\nKallian was even laughing by the end of his list.\n\n\"Zevran's worse. When we captured him, I went looking. I must have found about twenty knives strewn about.\" Leliana chuckled. \"And those were only the ones I found.\"\n\n\"Captured?\" Kallian looked confused.\n\nWe all laughed, and Leli threaded her arm through Kallian's, leading her towards the dining room, explaining as they walked. Alistair and I watched them go, amused.\n\n\"I never thought how weird it must sound when someone asks how we met all of our friends.\"\n\n\"Ah yes. 'This one's mother turned into a dragon and we had to kill it, this one murdered some farmers and was left for the darkspawn, this one dreamed the Maker spoke to her, this one tried to kill us...this one just popped into existence from a different world.\" I snickered.\n\n\"Then there's the mage who tried to poison a noble, the other one who helped him escape, the dwarf we rescued from a different dungeon...yeah, our group sound like a really stable lot.\" \n\nSmiling, he took my hand and we headed to the dining room as well for supper.\n\nChapter One Hundred Two: Duty and Suffering\n\nWe ate a late dinner, slightly subdued compared to our usual boisterousness, given those that were missing from the table \u2013 Aedan, Zevran, and Wynne. Kallian still looked a bit thunderstruck at the chatting and teasing, but she sat on a corner between Wulf and Solona, with Leli across from her, and she didn't look like she was panicking too badly. Nathaniel sat across from me and just watched silently.\n\nAnders was feeling better, so when we were done, we brought up plates for Zev and Wynne, and Alistair, Morrigan, and I followed the healer up to the room where Aedan lay sleeping.\n\nI stopped Morrigan outside the room, giving her a hug and thanking her for her help; her expression was a humourous combination of pleased and irritated, and she sniffed. \"He is our leader, and a Grey Warden. He will be needed, and that means he must be healed.\"\n\n\"I know. And I thank you for believing that, and for helping, regardless of your reasons.\" \n\nHer lips twitched in a small smile, and I squeezed her one more time before entering Aedan's room.\n\nZevran looked exhausted, and I hugged him. Wynne smiled tiredly at us, and Anders joined her on that side of the bed. Morrigan went over there too, and the three mages got into a quiet discussion of magic that went completely over my head. Finally ready, their auras flared and weaved together, and the healing began.\n\nIt was gentler than the last time, it felt like; more precision and less raw power, I assumed. None of them needed Lyrium, and they didn't look completely exhausted when they were done. Wynne assured us that Aedan would be fine, and now was just sleeping. She put a sleeping spell on him that would last until morning, and we all left an anxious Zevran there, climbing onto the bed beside the rogue.\n\nTheron whispered that he would go fill Duncan in on everything that had happened, and we wished him goodnight. Alistair and I passed the library on our way to bed, and I saw Nathaniel sitting there, in the dark, a glass of some sort of brown liquor \u2013 whiskey, perhaps? \u2013 in his hand. Gesturing to Alistair to go on to his room without me, I poked my head into the library cautiously.\n\n\"Nathaniel? You okay?\"\n\n\"Not especially, no.\" His words were slightly slurred, and I wondered how much of that brown liquor he'd had. He gestured to a chair across from him, and I perched uneasily on the edge.\n\nWe sat silently for a minute, awkwardly, and I was about to stand up again and excuse myself when he finally spoke. \"She begged me to, you know. To rape her. It would be better than letting Thomas have her, she said. Kinder. She begged me to 'accidentally' kill her instead of letting it drag on.\"\n\nI closed my eyes, trying to force back the tears and the horror I knew he didn't need from me. I was frantically trying to think of something \u2013 anything \u2013 to say, and coming up blank, when he spoke again.\n\n\"And Maker help me, I was going to do it.\"\n\nI sat, thinking about what I could say to that. \"Nathaniel...if it had been me, I would have said the same thing. Some fates are worse than death, and sometimes mercy requires a friend's help, no matter how painful.\" I reached out and gripped his hand. \"You wouldn't have been wrong.\" I stared into his eyes, hoping he could see my sincerity. \"You are not your father, and you are not the monster he tried to make you into. You are a good person, who was trying to do the best you could in an unwinnable situation.\"\n\nHe watched me, mouth moving without sound, looking so lost I wished I could take all of it away. Suddenly, the hand holding his drink dropped, the glass falling from his fingers to shatter on the ground. His whole body slumped, and I looked up from the shards of glass to see his head loll back, eyes closed. I jumped to my feet, wondering if he'd been injured and somehow no one had noticed; I was ready to scream for help when he let out a sonorous snore.\n\nLeli stepped out of the shadows in a corner of the library, reaching out to touch my shoulder. \"Thank you, my friend. He needed to say that to someone, and he wouldn't talk to any of us who... saw him.\"\n\nI looked at her suspiciously. \"You drugged him.\"\n\nShe sighed. \"He needs rest, yet he wouldn't close his eyes. You coming along while he was...talkative...was pure coincidence. He probably won't remember telling you in the morning, but he'll feel better for it all the same, yes?\"\n\n\"Leli...\" I remembered Aedan had done something similar to Alistair back at Soldier's Peak; it seemed slipping sleeping draughts into people's drinks was common practice in Thedas, but something about it felt wrong. They should have been left to deal with their feelings their own way. But what if he hadn't? What if he refused to deal with it? I shook my head. It's too late now anyway.</span></p>\n\n\"I know, Sierra. And I'm sorry you were burdened with his guilt. But I...\" She looked at the sleeping man, a slight grimace on her face. \"I couldn't let him just suffer like that anymore,\" she finally continued. \"He'll sleep for twelve hours, and hopefully wake refreshed. Will you help me get him to the barracks?\"\n\nI looked at the snoring, limp body in front of me and sighed. \"You could have at least gotten him back to the barracks before you knocked him out.\"\n\nLeli chuckled, and between the two of us we hoisted Nathaniel up and began walking him down the hallway. Even as emaciated as he was, he was heavy, and he was a good six inches taller than either of us; it was awkward. When we passed by Alistair's room, I paused, shifting Nathaniel's weight, and then turned and knocked. Alistair, wearing his soft sleeping trousers and a shirt he'd obviously just thrown on, answered, his expression confused until he saw the dead weight Leli and I were dragging.\n\nWithout even asking, he stepped out, took Nate's arm, and slung the man over his shoulder in a fireman's carry. He made it look so easy, and Leli and I exchanged amused glances as we both ruefully rubbed at our sore backs. I followed Alistair and Leli to the barracks, helping to ease the poor man into a bed. Leli worked his boots off, and then tucked him in.\n\n\"He looks so peaceful like this.\" Leli's expression was wistful.\n\n\"Yeah. Like a baby,\" I teased. \n\n\"Or a puppy,\" Alistair added. \n\nShe grinned and waved us away. \"Get off with you, then.\"\n\nI gave her a quick hug. \"Good night, Leli.\"\n\nTheron was in his room in the barracks, one of the few rooms with an actual door, and we stopped to talk briefly. Blake was asleep, dead to the world on a little trundle bed at the end of Theron's bunk. \n\n\"How are you doing?\" I asked, noting the bags under Theron's eyes and the pale complexion.\n\n\"This is harder than I thought. Watching, not being able to even say anything. Loghain...how did I never see what he's become? He's completely mad. And I could get Anora to tell the truth, I know I could.\"\n\n\"In the end, though, does it matter?\" Alistair's question surprised me, and he flushed when Theron and I both stared. \"Whether she colluded in a trap or was caught in one herself, she had nothing to do with the torture, or the...other things, that Howe was doing. She wasn't the one who called the retreat at Ostagar. And clearly Loghain is the one calling the shots at the palace.\"\n\n\"It matters to me,\" Theron muttered. He looked from me to Alistair. \"If something bad happened, and it was possible...just possible...that Sierra was involved, that she caused some of the suffering, wouldn't you need to know, so you could make your decisions?\"\n\n\"Sierra would never.\" I smiled at my husband and squeezed his hand. \"I can't imagine having to wonder about that. But...if you think it's even possible, if you can't be completely sure that it's not... Doesn't that answer your question?\"\n\nTheron's face was so crestfallen, I felt sick. I reached out to pull him into a hug, and felt Alistair wrap his arms around both of us from behind me.\n\n\"We're here for you, whatever you need, whatever you decide, okay?\" I whispered. \n\nHe nodded, then turned away. \"I think I'd like to go to sleep now.\"\n\n\"One second.\" I gestured to Alistair to stay, and slipped out of the room, finding Anders sitting on his bunk, expression somewhat...smug.\n\n\"Anders, I want to talk more later \u2013 tomorrow, maybe \u2013 but can I have one of those sleeping potions?\n\nHe rummaged in his pack and handed me a small vial. \"Trouble sleeping?\"\n\n\"It's not for me. Thanks.\"\n\nHe nodded knowingly and I headed back into Theron's room. \"Drink this.\" He looked about to object, but I put my finger on his lips to stop him. \"Drink it. You need rest, and I know you aren't going to sleep, between worrying about Anora, Loghain, and the Landsmeet.\"\n\nAlistair nodded encouragingly, and he sighed and took the vial, popping the cork with his teeth and tossing the entire contents back. \n\nWe wished him a good night, and left him to get ready for bed before he passed out entirely. Alistair and I wandered back to his room hand in hand; I barely paused to check if we were being watched before following him inside. I assumed Kallian and Solona were in my room, but didn't want to risk waking them up by checking.\n\nAlistair sat on the bed while I changed out of the dress I wore. \"So what was that all about with Nathaniel?\"\n\n\"He was feeling guilty for his father's actions. So Leli drugged him to sleep.\"\n\n\"What is with the people we know drugging someone to make them sleep?\"\n\nI laughed; I hadn't been sure if Alistair knew Aedan had done that to him. \"I don't know.\"\n\nOnce I was naked, before I could slip into a nightgown, Alistair tossed off his tunic and reached out, pulling me into his arms and laying us both back on the bed. \"Are you okay?\"\n\n\"Not really.\"\n\n\"Still feeling guilty?\" He tucked my head under his chin, stroking my hair softly.\n\n\"Wouldn't you?\" I sighed.\n\n\"Probably.\" He chuckled when I pinched him. \"But that doesn't mean you should. You aren't responsible for Rendon Howe just because you knew in advance that he was evil. It isn't your fault that you can't prevent every bad thing from happening. Just like it's not Nathaniel's fault because it was his father.\"\n\nHis calm voice and the slow beat of his heart soothed me, and I drifted to sleep, exhausted from the emotional day we'd had. I woke several times with nightmares \u2013 between darkspawn, Nathaniel, and Kallian, I slept poorly \u2013 but most of the time managed to avoid waking Alistair; I wasn't the only one having bad dreams, though, based on the muffled shouts I could hear from across the hall. After my final nightmare, a horrifying vision of being Kallian and watching Nathaniel strangle me as I lay tied down, naked and helpless, I woke up struggling and accidentally smacked Alistair in the head.\n\nHe sat up, gathering me into his arms, holding down my flailing limbs and shushing me until I relaxed. I sobbed into his shoulder and he held me until I cried myself out, then slowly, reverently made love to me until I shattered in his arms and afterwards, fell into a deeper, dreamless sleep.\n\nThe next day everyone woke at varying times, so the dining room kept up a steady supply of bread, cheese, and fruit and everyone just grabbed plates and helped themselves whenever they got up. Eamon left early with a contingent of soldiers to accompany Connor and Isolde to the docks. We agreed to wait until he returned to have our talk.\n\nTrue to Leli's word, Nathaniel's expression was slightly less tortured when we finally met in the library, though he wouldn't meet my eyes; Kallian had stopped flinching every time one of the men looked at her, though she still clung to Wulf. Anora, Eamon, Teagan, and Alistair were there, as well as Leliana and the two elves, with Theron playing door guard as usual. \n\nI jumped out of my chair when Aedan came through the door, and launched myself into his arms. He laughed and held me while I cried on his shoulder; Zevran stood behind him, looking relieved and happy, and I hoped that meant whatever problems the two of them had, they'd worked them out. Everyone else came up to offer handshakes or hugs, depending. Anora offered a nod, and Aedan responded with a brief bow \u2013 more than she deserved, certainly, but he seemed determined not to act like she'd betrayed him. He also greeted Nathaniel with a friendly smile, which made my heart soar.\n\nI pulled Aedan to a seat between me and Zevran; Zevran sat with Aedan's hand possessively on his shoulder, while I held the opposite hand. Alistair, grinning at Aedan's recovery, cleared his throat and started the meeting.\n\nAlmost immediately, Anora requested a more private audience with Aedan, Alistair, and Eamon. Unable to come up with a good enough excuse, the rest of us, except Theron and Nathaniel, were forced to leave. Eamon insisted Alistair's 'bodyguard' stay. Anora was highly offended, but couldn't do much about it. Aedan asserted that Nathaniel was now the Arl of Amaranthine, and thus had a direct interest in the discussion \u2013 Nate started to argue until Aedan's glare shut him up. I was startled, so used to assuming Nate would become a Grey Warden that I hadn't thought about the implications. Being rescued from his father's dungeon, helping to defeat the man...he very well could take over the Arling. Reluctantly, I left.\n\nI followed Zevran back to Aedan's room, and he assured me he and Aedan were doing well.\n\n\"Seeing him like that, carrying him back here, wondering if we'd make it in time... A petty misunderstanding about hurt feelings seems rather pointless, no?\"\n\nI laughed. \"Yeah, too bad Alistair didn't almost die at Soldier's Peak \u2013 maybe I'd have been able to forgive him sooner.\"\n\nI told him what Nathaniel had said before passing out; he was sympathetic.\n\n\"Even the Crows don't give someone those sorts of choices during training. Kill a rival, someone you trained with, absolutely, but someone who'd nursed you to health after an injury? No. Although I suppose usually no one nursed any of us back to health; if we were too badly injured for a healing potion or two, we would die.\"\n\n\"Nate killed his father?\"",
        "\"Oh yes. Aedan was fighting him while the rest of us dealt with the guards and the mage; Howe was quite good for an old man.\" He grinned, his expression feral. \"Nathaniel was supposed to wait outside the door, but instead he followed us, picked up one of the dead guards' swords, and ran his father through. Cut his throat, after, for good measure. Aedan told him he didn't have to, that he shouldn't have had to kill his own father...but hearing what he's been through, I'm not sure if that's true. I imagine it might provide Nathaniel some...\"\n\n\"Closure?\"\n\n\"Just so. Now, tell me about the palace?\"\n\nI told him what I knew of the discussion, the assassination attempt, and Loghain's responses.\n\n\"I'm guessing this Cauthrien didn't know about Loghain hiring the Crows, then, yes? How I'd love to be able to tell her.\"\n\n\"You'll get your chance at the Landsmeet. She'll be there with orders to keep us out. Even without all this, she'd let us through. She idolizes Loghain, but she's not stupid. Just a little blind.\"\n\nI spent a while going from room to room, checking in on my companions, while I waited for the meeting to be finished. I'd barely seen Duncan in a couple of days, and so I spent a while chatting with him, ensuring he was caught up on all the details of what had been happening.\n\nAs I'd predicted, he wasn't happy that I'd put myself at risk by writing to Nathaniel, and was even less pleased with my letter to Varric.\n\n\"What if the Chantry hear about your skills as a seer?\" he asked, after I paraphrased the one to Varric. \"Bad enough Greagoir knows. You think it will matter to them that you have templar powers when you seem to be able to predict the future? Or when they learn you were sent to another realm by darkspawn magic? Never mind the Grey Wardens. I'm sure they'd love to study you and find out how you seem to nullify the taint somehow, and determine how much you know about the Architect. If they even dreamed of how many of their secrets you knew, they'd probably try to put you through the Joining again, which could very well kill you, given your...odd...reaction to the last Joining.\"\n\n\"I know, Duncan. I know, it's a risk. But you think it's better to allow Kirkwall to degenerate into chaos, to not prevent all-out war between mages and templars, given the chance? My life isn't worth all of those who might be saved.\"\n\nHe sighed. \"I thought you told Alistair you don't have a hero complex.\"\n\nI snorted a laugh and hugged him. \"It's not a hero complex. It's a duty, and you, of all people, can't blame me for that, right?\"\n\nHe chuckled and kissed my forehead. \"Fair enough.\"\n\nI checked in on the others in the barracks; Sten was impatient to get done with the politicking so we could get back to trying to kill the Archdemon, Jowan was anxious being in a city so near a very large, well-staffed Chantry, and the dwarves were bored and wanted to find something to go kill, though Bel had been working on his voice training when Leli had time, and he barely stuttered at all any more. Anders was asleep, still recovering from the magebane. \n\nBlake was practicing his letters, between running errands for Theron, Duncan, or any of the others. He assured me he was doing well, and that no one had been unkind to him since Theron had taken him on. He'd probably put on ten pounds, since that day in the kitchens at Redcliffe, and he was going to need new clothes soon. I read with him for a while, just enjoying the simple pleasures of reading and watching a keen student learn.\n\nI knew Morrigan had taken to eavesdropping in bird form, but I found Wulf and the other women \u2013 Kallian, Solona, Wynne, and Leliana \u2013 in the dining room, mostly trying to help Kallian feel at ease, from what I could tell. Wynne had checked her out and declared that Anders had done a good job at healing her, leaving her physically well, at any rate, and everyone just refrained from asking about her mental state.\n\nI sat down with them in the middle of a discussion about what Kallian wanted to do since she was free. She didn't seem to know, just insisted she could not live in the Alienage anymore, though she did want to go visit her father. Happy to have something to do, we decided we would accompany her there right away. Faren was happy to come, as was Zevran, so we all went to change into armour and meet in the hall. Wulf, Solona, Leliana, Wynne, Zevran, Faren, and I all accompanied Kallian when we left Eamon's. She seemed less nervous with fewer humans around, and so many women. Wearing armour, a borrowed bow on her back, with a handful of people following her, she seemed almost like what I imagined she'd been before Vaughn \u2013 confident, relaxed, competent.\n\nUntil we were approached by a guard. I didn't recognise him, but he must have been one of Kylon's, since no one else should have been patrolling the Alienage gates. The poor sergeant hadn't been able to rid his ranks of all the idiots, apparently; this one was probably in his twenties, had tiny, piggy eyes and was significantly overweight. He had a sword at his hip, a heavy, impractical, ceremonial thing that looked like it had never been used, but no helmet and the straps on his armour strained against his bulk.\n\nHe held an apple, biting into it noisily and then addressing Kallian with his mouth full, spittle and chunks of apple spraying from his lips. \"Oy, you! Knife-ears!\"\n\nKallian tensed, and Wulf took her arm, dragging her halfway behind him. I stepped forward, blocking his line of sight to the fearful elf, crossing my arms over my chest.\n\n\"Ser?\" I inquired, voice flat but not disrespectful. \"May I help you?\"\n\nHe looked me over, his gaze travelling over my tight-fitting armour with a leer. He tore his gaze from my chest to look back at my face. \"I've got no quarrel with you, though I wouldn't mind getting to know you better, sweetheart.\" Zev stirred behind me, and I waved my hand in a gesture I hoped he'd understand. \"But them knife-ears can't just parade around here with weapons. They're goin' to Fort Drakon.\"\n\nI drew myself up, trying to look as haughty as I could. \"I am lady Sierra Cousland, and these are my guards and my lady's maid. You shall not interfere here, guardsman, or I can guarantee your superiors will not be pleased by my complaints.\"\n\nHe looked at Kallian skeptically. \"Body guards, I could almost let pass, my Lady, but that's no lady's maid.\" His tone was a little more respectful, but I still wanted to strangle him with my bare hands.\n\nI took a chance that he was a pervert, in addition to an idiot. \"Oh, you know, hired body guards are all fine and dandy, but there's nothing quite like the protection of a well-trained friend with unquestioning loyalty.\" I winked, and his eyes widened. I could hear Zevran chuckle at my back. \"And she is very well trained.\"\n\nHe looked at her again, apparently unconvinced, and I glanced back to see her standing firm, cheeks flushed, but refusing to back down. I tilted my head, gesturing to her bow, and with a nod she unslung it and nocked an arrow. I turned back, grabbed the apple from his hand, and tossed it into the air, hoping beyond hope that she knew what she was doing with that bow. I probably should have asked her first.\n\nTo my relief, she spun and fired so fast I barely registered the movement, and the apple was pierced neatly through the center and pinned to the side of the building an inch from the idiot's right ear. The shaft vibrated with the force of the shot, and I doubted I'd be strong enough to pry the arrow free. \n\nThe guard gasped and jumped away, then turned to glower at the elf. He looked like he might try to make something of it, and I sighed. \n\nI fished through the coin pouch on my belt while I nodded my head at the group behind me. \"Look, guardsman, the group you see behind me are all that good.\" I nodded at the arrow. \"They're not going to go quietly, and you're here all alone. And your sergeant owes my family a really big favour. Take this,\" I gave him a small handful of coin, \"and go buy yourself a new apple. Forget you saw us. And next time you see Sergeant Kylon, ask him about my brother, Aedan Cousland, the Grey Warden. I think you'll find he agrees that you should walk away.\"\n\nGrumbling, shooting dirty looks at me and Kallian both, ser piggy finally turned and walked away, leaving the gate unguarded. I approached Kallian slowly, stopping a few feet away. \"You okay?\"\n\nShe nodded. \"Yes. Though I'm not sure whether to be flattered or irritated.\" She chuckled, and I relaxed, releasing a breath I hadn't realised I was holding. I had been afraid she'd be offended \u2013 or traumatised \u2013 by my implication that she was a servant in more than just the traditional sense. It was sickening and racist, but it felt at the time like the best way to end the conflict before someone had gotten hurt.\n\n\"Definitely flattered.\"\n\n\"I'm sorry that I cost you-\"\n\n\"Nothing I wasn't more-than-willing to pay. I'm just sorry it was necessary. Nice shot, by the way.\" I grinned.\n\n\"Not that nice \u2013 I meant to nick his cheek.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-101-102"
}