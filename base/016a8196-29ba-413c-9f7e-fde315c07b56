{
    "title": "Poison Ivy Ch. 07",
    "pages": [
        "ETA: This is the revised version of chapter 7. We're getting close to the end, guys! The last chapter has been written and separated into 2 parts. As soon as I post the next two revisions, I'll submit the final chapters, as well as a teaser for Aella and Trevino's stories. Thanks for your patience. \n\nAs I've been editing these chapters, some minor details have changed. So if you read ahead before the last two revisions are posted, some things may not match up. I'll put an ETA at the start of every revision. Thanks!\n\nHi friends! I've been so psyched about the feedback for this story, thank you for your comments and suggestions. \n\nOkay so as usual, I've listed the \"soundtrack\" for this chapter below. For those new to the story, this is an Omegaverse story, so some googling might be in order so you're familiar with the Alpha/Beta/Omega dynamics included in this chapter. There's also a lot of cussing, so if that sort of thing offends you, maybe pick another story. \n\nSeeing as Hunter and Ivy have been separated, there isn't a ton of smut in this chapter, but it is soooo on in the next one. Scout's honor. \n\nFinally, someone asked me in an email (which I haven't figured out how to reply to) to recommend some Omegaverse authors, because M/F stories are kinda rare. There are some good stories on this site, my personal favorite is The Mountain by MariLeigh. Also, Addison Cain is all the things! Definitely check those out. \n\nAs always, I so appreciate your support, and I hope you enjoy Chapter 7!\n\nSoundtrack:\n\nAlways Wrong by Eisley\n\nChess by ZAND\n\nThe Run by MXMS\n\nGood Kid by Former Vandal\n\nI Could Be Anything (Feat. Elohim) by The Glitch Mob, Elohim\n\nCease Fire! by WRENN\n\nScorpio by Pour Vous\n\nBabel (feat. Super Duper) by Sam Tinnesz\n\n.............................\n\nHunter was a light sleeper. It was a convenient trait to have when you were in a foreign, hostile country during a decades-old conflict. He acted on instinct, another convenient trait. It's what had led him straight to that shitty little FOB, into that shitty little medic tent, where he had found his precious little Ivy, and it's what had made him claim her during her very first estrous, immediately following their very first mating.\n\nSo when he awoke to someone leaning over him with a syringe, it was only natural that the poor bastard found himself quickly slammed up against the wall and dangling from Hunter's fist around his neck.\n\n\"WHERE'S IVY?\" He roared into the face of the... female... medic, who was quickly turning blue. Fuck. Carefully, he lowered the quivering Beta to the floor and quickly straightened her uniform. \"Where is she?\" he asked, his voice strained with barely contained fury and panic. He didn't quite remember the events leading up to this moment, but he was positive that his mate was in danger, and he needed to get to her, right fucking now.\n\n\"I...I...I don't know, Sir. S-she was t-taken away.\"\n\nHunter took a deep breath, barely noticing the sharp pain in his chest at the movement. He vaguely remembered being shot, but that wasn't important. Ivy was important. But the girl was on the verge of passing out, and he didn't need that. He needed answers.\n\n\"Tell me what happened, Medic. Then unplug me from all this...\" he gestured to the myriad of wires and tubes sticking out of him, pumping him full of fluids and blood and god knew what else, \"...shit, and take me to Lieutenant Pyle.\" The Lieutenant had been helping him implement some changes around base to improve conditions for the Beta soldiers. Pyle was younger than him by a few years, and behind him in rank, but the two officers shared a history. They had fought their way through more than a few hairy situations together, and each owed his life to the other. He was the only Officer on base he knew without a shadow of a doubt he could rely on. And, most importantly, he was a pilot.\n\n\"You... you were shot, sir. By General Maverick. There was a... an altercation, when he found you and your Omega with the baby... He must have thought the worst, even though we tried to... We tried to explain that she saved them...\"\n\nHunter blew out a breath in frustration. He didn't care about any of that shit. He had witnessed firsthand the way Maverick had abused his own mate. He suspected Aella's emergency was, at the very least, partially the older Alpha's fault. But that didn't matter. He needed to know where his fucking mate was.\n\n\"Medic.\" He tried to say it calmly, but her wince told him he hadn't quite succeeded. \"What happened... to Ivy?\"\n\n\"Oh. Right. Well... He took her. General Maverick, Sir. He... The prisoner, the one you wanted me to watch over? He woke up... And I tried to call you,\" she said quickly, noticing the murderous look on his face. \"I tried, I was dialing you, in fact... And General Maverick confiscated my phone, said he would take care of it. And... I wasn't there, but the guards, they didn't like how things went down. They were supposed to finish the job. That is... They were supposed to... ah... kill you. Or, make sure you were dead. But they brought you here instead. To me.\" She shrugged. \"They said they saw General Maverick inject her with something, and the prisoner was there, and then she just... passed out. And then they all left. The three of them. They took the jet and left.\"\n\nHunter was fuming, his chest heaving. He was going to rip Maverick's head right off his fucking neck with his bare hands. Then he was going to cut the Beta's dick off and feed it to him, right before he shot him in the face.\n\n\"He didn't even take the baby,\" the girl was saying. \"Or care about if, if Ms. Aella made it... She did, by the way, they're both recovering, her and the baby, that is. An officer came just yesterday to take them back to Lostra...\" She trailed off, apparently noticing that she had been rambling nervously.\n\n\"That's good, Medic. You did good. Now unplug me and get me to Pyle.\"\n\nHe needed a plane, a pilot, and a fucking arsenal of weapons. He was going to get his Omega back.\n\nI'm coming for you, Ivy. \n\n................................................\n\n\"Why are you showing me this?\" Ivy continued to scroll through the images of Aella and her baby, still recovering in an unfamiliar room with dirty, whitewashed walls, a single column of grey brick running down the middle, and dull grey floors. Aella was pale and frail-looking, but she had made it through the surgery and was well enough to be cuddling the tiny infant, who also seemed to be doing well. There was something vaguely familiar about the room they were in, something she couldn't quite put her finger on. She had a terrible feeling about this, but even still, it was good to see her... friend? Acquaintance? Fellow Omega?... alive and happy.\n\nShe looked up through narrowed eyes at the hulking Alpha towering over her with his arms crossed, a confident smirk on his stupid face. \"I just wanted you to have a chance to see them,\" Maverick-dude drawled. God, she hated his voice. It was like watered down scotch. Almost warm and smooth, but not quite strong enough. \"You know...\" he continued, \"before anything... bad were to happen to them.\"\n\nIvy swallowed. It was suddenly freezing in the little room she was being kept in. It could have been a prison cell if it hadn't been for the hard-oak bed frame, high-quality bedding, and the soft, eggshell blue of the walls. They'd taken her clothes (again, goddamnit) and replaced them with a hideous pair of pea-soup green scrubs, and not an orange jumpsuit.\n\nJudging by the number of pills they were shoving down her throat and the needles they were poking her with, they seemed intent on keeping her drugged and sedated, and her best guess was that she was in some kind of mental institution. Although no doctor or psychiatrist had been in to visit her.\n\nShe tried to stand and then immediately sat back down when the room started spinning. Instead, she crossed her arms and leaned back against the wall and gave him her most intimidating scowl. \"What are you saying, dickhead? Are you really threatening your own mate and daughter? What... If I don't behave, you're going to do something bad to them? Bullshit.\" She tried to hide the doubt in her voice. When it came down to it, she didn't truly believe herself. The Mav was clearly unhinged, and she honestly didn't know that he wouldn't do something so evil.\n\nMaverick leaned over and put a hand on each side of her head, caging her in. His breath was hot on her face, and he reeked of clove cigarettes and onions. She wanted to gag. She looked away, toward the tall metal door in the middle of the wall. A small square window allowed others to look in, but was frosted on her side, preventing her from seeing anything outside her four walls.\n\nHer current goal in life was to get through that door.\n\n\"Aella was caught being unfaithful,\" he said calmly, his voice soft and low. \"She is no longer my anything, seeing as I never claimed her. Now you, on the other hand...\" He hooked a finger under her chin, drawing her gaze back up to him. \"You just lost you're mate, and you need another Alpha to take care of you. One you're already familiar with. Isn't that right?\"\n\nShe bared her teeth at him. Bullshit. Aella had no more been unfaithful to this prick than Ivy had lost a mate. Hunter was alive. She could feel him, deep down in her bones. In her worst moments here, when she had to grip the sides of the bed in order to keep from falling off in her drugged stupor, she could hear him purring for her. She could almost feel his fingers trailing through her hair sometimes, or stroking down her back. He wasn't dead. He was very much alive...\n\nAnd he was coming for her.\n\nShe just had to get out of here before he got that far. She knew he would try to kill every person between them, and she didn't want that. She didn't want him in that kind of danger, and she felt sort of bad for anyone who got in his way. Sort of.\n\nA little.\n\nOkay so maybe she just didn't want him in that kind of danger.\n\n\"If you think, for one second, that I'm going to let you get away with this bull--\"\n\n\"You,\" the Mav interrupted (which was rude as fuck, but whatever), \"will not be letting me do anything. You forget, little poison. You're an Omega, now. An Omega needs protection. Guidance. Discipline.\" The smile he gave her was positively malevolent. He was like a cartoon villain. Ivy rolled her eyes. She half expected him to break out in an evil cackle. \"And I will be the Alpha to give you those things.\" He gripped her chin, his fingers digging into her cheeks painfully. \"Your father will make sure of it. And Aella, and the baby, will be just fine.\"\n\n\"My father?\" Ivy frowned. \"My father's dead. Hunter told me he died in a house fire, with my mother...\"\n\nMaverick-dude chuckled and released her, pushing off the wall to walk across the grey tiled floor. \"Oh, Ivy,\" his familiar drawl rolled off his tongue like motor oil. Revolting. \"Poor, confused little Ivy. You've had such a rough go of it, haven't you? Don't worry, baby.\" He reached the door and pounded on it twice, then looked back at her with a menacing sneer. \"I'll take care of you.\"\n\nIvy leapt to her feet when the door opened and stumbled forward, ready to scratch the shit out of this fucker. Of course, there was nothing in this sterile room she could use as a weapon. She had performed a thorough search at the first opportunity. But she had some decent nails that might do some damage, especially if she could get to his eyes. The door slammed shut just as she reached it, and she crashed into it ungracefully. She slapped the cold metal once with a cry of frustration, then turned around and slid to the floor, dizzy and lightheaded from the effort.\n\nShe needed to figure out a way to keep them from drugging her if she had any chance of getting out of here. She couldn't even walk right now, never mind sneak out of what was sure to be a fortified and heavily guarded asylum. Resigned, she crawled back to the small but comfortable bed and climbed under the heavy comforter, wrapping it around herself like a cocoon. She burrowed down into it as far as she could get and pulled her knees to her chest, curling into herself like an armadillo. Her armor was tough, but she wasn't stupid. She was in trouble. And more than a little bit scared.\n\nShe hated feeling like this; alone, weaponless, friendless, and Hunter-less. A psychotic Alpha was, for some reason, intent on keeping her under his thumb, resorting to threatening a completely innocent Omega and his own fucking child, to keep her in line. She was so drugged up, she couldn't even think straight. And her father? If he truly was alive, the way Maverick-dude talked about him didn't exactly inspire confidence.\n\nFor some reason, the thought made her cringe. There was something... Something about the flash of images she had when Hunter had grabbed her neck, and then again when Maverick-dude had almost strangled her, the prick. Something about the nightmares she had been having lately. A woman screaming. The acrid smell of smoke. The sensation of drowning...\n\nShe rubbed a hand over her face. Escape was imperative. She had to find of a way out of this, and fast.\n\nThere was a knock on the door, and she heard someone enter. This was new. No one had ever knocked before. Everyone just treated her like she had no right to privacy and barged right on in whenever they fucking felt like it. She curled up tighter, not wanting to face whoever it was. Nothing good had ever come through that door. She wasn't sure if she had been there for days or weeks, but not once had anyone even remotely friendly come to see her. It was just a long line of stoic or mean faced nurses and orderlies in starched white uniforms wielding weapons of the mind. They could all fuck off, as far as she was concerned. She certainly wasn't about to make this easy for them.\n\n\"Ivy?\" a familiar voice said. He cleared his throat. \"I, uh... Can we talk?\"\n\n\"No,\" she snapped, and pulled the blanket tighter around herself. She knew that voice, and the very last thing she wanted to do was have a chat with her traitorous old buddy. Well, okay, maybe not the last thing, but pretty fucking close.\n\n\"Ivy, please. I want to help you, okay? This isn't a trick, I promise. Come on, we don't have a lot of time.\"\n\nShe growled in frustration. \"Fuck off, Kentucky. You can just fuck right the fuck off.\" She threw off the blanket and swung her legs over the side of the bed, swaying slightly. She crossed her arms, then uncrossed them, grabbing the edge of the mattress to keep herself from falling over. The last dose of whatever they had crammed down her throat was kicking in, and she knew she was mere minutes away from passing out cold.\n\n\"Look, you have no reason to trust me. I know that. And you have every reason to hate me. I was... There's no excuse. I know that too. But you have to know, I wasn't in my right mind. They... I don't know what they did, but they made me think... They convinced me you were the enemy, all right? That you, and General Nelson, and all the fucking Alphas, were all the worst people in the world.\" He stood in front of her, looking down at his feet, rubbing the back of his neck. \"I should have known better. I'm so sorry, Poison.\"\n\nHe shrugged and looked up at her, his amber eyes glistening and sorrowful. What an act. \"I just... I can't believe I did that to you. I hate myself for it. But listen.\" He stepped toward her and looked at the door nervously, dropping his voice down to a whisper. \"When I woke up... Maverick came to me right away. He told me he needed someone who wasn't afraid to get his hands dirty. When he told me what he had planned, I thought... I said I'd help him, so I could be here to help you. I'm going to get you out of here, Ivy.\" He reached out like he wanted to touch her face, but then stopped. Smart guy. He would have lost a finger. Probably. \"I promise, I'll get you out of here. You just need to hang tight.\"\n\nShe stared at him incredulously. \"Are you fucking serious, Brad? You expect me to believe you, after the shit you pulled? I trusted you. I... Kentucky, I loved you. And you... You...\"\n\n\"I know,\" he said, dropping his gaze back down to the floor. \"I know.\"\n\nThey were silent for a moment. Ivy's eyelids grew incredibly heavy, and her own voice sounded so far away.\n\n\"I don't neeeed your help.\" She said sleepily. Her tongue was thick in her mouth. None of the colors were right. The lights were swimming. Where was Hunter? \"I'll get out of her myself. Kay? Sso jusst... Leave me...\"\n\nShe couldn't hold herself up anymore. She wanted to cry, but she was too tired. She slumped to her side, unable to even speak. Her bed was rocking side to side, like they were on a ship. She would fall off soon, if it didn't stop. She tried to clench her fists, only to discover that her hands had turned into scratchy wool mittens. So very strange...\n\nWell, this sucked.\n\nA pair of hands wrapped around her legs and pulled them up to the bed, and she felt the comforter come around her shoulders. And then... Nothing.\n\n................................\n\n\"How much longer?\" Hunter spoke into the headset, all but shouting over the sound of the chopper blades as they flew across the seemingly endless blue ocean. A direct, unauthorized flight straight back to Lostra would raise too much suspicion. Hunter might as well announce his survival and subsequent homecoming to Maverick's goons, and he needed the element of surprise.\n\nIn order to maintain his anonymity, Pyle had convinced him to opt for a less direct itinerary, which included a series of flights and helicopter rides back home, stopping along the way at different army and air force bases and a couple of naval ships. And although he hated the fact that it would keep him away from Ivy that much longer, he knew it was better this way. It gave him time to plan out his attack.\n\nMaverick and Hickson were powerful political figures, with dozens of manipulated and brainwashed goons they could use to keep Ivy confined and hidden away. He would need help. This indirect travel with multiple stops allowed him the chance to reach out to those people he knew he could trust. Old battle buddies who would be sympathetic to his cause, who would be ballsy enough to go up against the kind of men he was after.\n\nMen like Maverick. Men like Vice President Hickson.\n\n\"We're about an hour out,\" Pyle shouted back to him, throwing him a glance over his shoulder from where he sat in the front. Hunter was seated behind the mounted rifle, one leg slung out of the open door, the other bent up to his chest. He growled in frustration. Just because he saw the logic and wisdom in taking the time to plan his approach didn't mean the primal part of him wasn't impatient to spill the blood of every last fucking person that had taken part in his mate's abduction.\n\nHe could feel Ivy through the pair-bond. She was so brave, his Omega. So strong, for such a little thing. But she was afraid. Despondent. She felt helpless. And there was something else... Something strange about the way the bond had been reverberating. A strange sort of echo. Like she was somehow being dulled or dampened. Perhaps drugged.\n\nThe thought made him beyond fucking furious. If they were keeping her sedated...\n\n\"When we get there, we should touch base with Fowler. He's got a place near the capitol, we can crash there before we make a move.\" Pyle's voice in his ear interrupted his thoughts.",
        "\"You know, you don't have to stay with me. You've done enough already. I'll be able to take it from here on my own.\"\n\n\"Are you fucking kidding me?\" the younger Alpha looked over his shoulder again. His reddish blonde hair was hidden beneath the bulky comm helmet, but the excited grin he flashed Hunter revealed his crooked front tooth. For whatever reason, that flaw in his boyish face seemed to endear him to the opposite sex. Pyle was never short on female company. \"I wouldn't miss this for the world, man. You've had my back more times than I can count. We'll get her back, Hunter.\" His grin widened. The dimple that appeared in his left cheek gave him just enough charisma to hide his inner crazy.\n\nPyle was a fucking maniac and a hard-core adrenaline junkie if he ever met one. More than one of the situations Hunter had dragged him out of were a direct result of some psychotic thing he did, like the time he'd snuck into enemy territory to kidnap a Torrin attack dog from a kennel on the outskirts of a Factory after he'd witnessed a soldier abusing the mutt. He'd then proceeded to parade it around as if it was a rival high-school's football mascot until the dog had turned on him and attacked his calf like it was a fresh steak. Pyle had kept the savage creature, claiming the attack had been the dog's way of \"bonding\" with him. His lower leg was still streaked with scars.\n\n\"Thanks Brother,\" Hunter shouted, tipping his chin. He couldn't deny that it felt good to have Pyle on his side. In addition to being a psychotic pilot with a penchant for trouble, he'd also become somewhat of an expert when it came to interrogation techniques. The man knew more about the human body than Hunter cared to think about, and when it came to extracting information, he might as well be a fucking encyclopedia. He knew that those specialized talents would absolutely be utilized before this was all over. Pyle had a wicked soft spot when it came to women, children and animals. That soldier he'd watched abuse the dog he now kept as an equally psychotic pet? He'd been returned to the front steps of the factory.\n\nIn pieces.\n\nOver the course of several weeks.\n\nHis distracted thoughts were dragged back to Ivy as he felt a pang of frustrated, helpless rage resonating from her side of the bond. He closed his eyes and focused his attention on the invisible connection that ached beneath his sternum with a painful throb, as if it was displeased and punishing him for the physical distance that he'd unwillingly put between him and his mate. Punishing him for not being there to protect her and comfort her. Clearing his head of all other thoughts and distractions, he concentrated on the memory of holding her close, wrapping himself around her as he purred, until her body relaxed into his.\n\nI'm coming for you, Ivy. \n\nI'm coming for you.\n\n..............................\n\nSomething was different about today, and despite feeling better than she had since she'd arrived here, it made her nervous as all hell. She hadn't been forced to take her usual pills, although they had given her the same injections. She still felt fuzzy and weightless, but at least she could stand.\n\nA stern-faced nurse gave her expensive shampoo and conditioner and an unscented body wash for her shower, instead of the small, cheap bottles of products she had been using, like she was staying at the world's most fucked up hotel. Instead of her allotted five minutes of supervised washing, she'd been encouraged to spend what felt like several hours, but was probably just 20 minutes, standing underneath the cascade of hot water. Afterwards, the nurse had applied neutral shades of eyeshadow and a light pink lip gloss, and told her to change into a navy blue, A line dress. The look was completed with a simple diamond teardrop necklace and matching earrings. She stared at her reflection in the tiny, warped mirror above the tiny bathroom sink. A cold feeling of dread settled over her, suffocating and nauseating. Whatever this was, it wasn't good.\n\nShe heard the door open but didn't need to turn around to know that it was the dickhead psycho. She could smell him. He always stank of clove cigarettes and onions, despite the fact that she'd never seen him smoke, and was pretty sure he didn't eat onions all day every day. Underneath it all, there was an unidentifiable, foul scent that made her skin crawl. He came up behind her and placed his cold hands on her shoulders, slowly spinning her around to face him. His touch always made her cringe, and she had to clench her jaw to avoid shrinking back from him. She wasn't about to show him just how much his presence disturbed her. Hate was a strong emotion to feel for someone, and it gave him power over her. She'd rather feign indifference, treating him like he was a fly on the other side of the room; annoying, but not enough to get up and hunt down with a swatter.\n\nEven though hunting him down with a human-sized swatter was exactly what she wanted to do. Trying to ignore the way his hands on her bare skin caused bile to crawl up her throat, she imagined herself running around the small room with a giant, neon-green paddle, chasing a shrieking Maverick as he flitted from wall to wall. Maybe she'd put spikes on it, like a flattened, modern-day Morningstar. She almost smiled.\n\n\"You look perfect, baby girl. Just perfect.\"\n\nShe growled, slapping his hands away and stepping around him to stalk out of the small bathroom. The tiny space forced a proximity to him that she was entirely uncomfortable with. \"I hate to break this to you, Mav, but I'm not, and never will be, your baby girl. And whatever you have planned for today, you're a few bricks shy of a full load if you think I'm going to just go along with it.\"\n\nMaverick smiled in a way that brought to mind a shark with a mouthful of teeth, closing in on its prey. \"Oh, but you will. You will be on your best behavior. Come here, Ivy,\" he drawled, while he walked to the bed and sat down on the edge, patting the thin mattress beside him. \"I have something to show you.\"\n\nHe pulled his phone from the back pocket of his navy-blue three-piece suit, with a creamy white undershirt and a thick black leather belt. She stared at the belt, chilled. It didn't match the outfit. Like at all. Why was he wearing it?\n\nHe motioned her forward. Ivy slowly and reluctantly inched closer. Whatever it was on his phone that he wanted her to see, it couldn't be good. Quicker than she could react, he shot up off the bed, lunging for her, and captured her wrist with a bruising grip. She snarled and struggled as he pulled her back to the bed, yanking her roughly onto his lap with his arm across her chest. He shoved the phone in her face. When she saw an image of Aella, sitting cross-legged on a threadbare mattress with her infant in her arms, she froze. There was a triangular shape in the middle of the image. Her skin broke out in goosebumps, and she sucked in a ragged breath. It was a video. He was going to show her a video.\n\nNo. No. He wouldn't. \n\nIvy twisted and looked up, meeting Maverick's shit-brown eyes, and shuddered at the cruel amusement she saw there.\n\n\"Eyes on the screen, beautiful,\" he drawled, and as much as she didn't want to acknowledge the threat he was making, she had to see. She had to know how far he would go.\n\nShe hesitated for just a second before looking back down. Maverick moved his arm to band across her stomach, pulling her snuggly back into his chest, and propped his chin on her shoulder. His thumb moved across the screen to start the video.\n\nAella rocked her baby back in forth in her arms, cooing at her as she cuddled her close. Like the earlier photo, there was something eerily familiar about the room she was in. Something about the threadbare mattress, and the single column of grey brick that ran down the middle of the dirty wall behind her. She heard the sound of a door slamming shut, and the blonde Omega looked up at someone off screen. Her face, already gaunt and pale, drained of all color, and her eyes darkened as she pulled the baby into herself protectively.\n\nIvy's stomach churned. She wanted to tell him to stop. She wanted to scream at him not to hurt them, to let them go, that she would do anything if he would just stop whatever was causing that look of pure, undiluted despair on her friend's face. They hadn't spent much time together, and they were total opposites, but she felt a strange pull toward the older Omega. Watching her nearly bleed to death, watching her baby almost die, had been awful. Aella had been hurt enough. Ivy could take some of that pain, now. She'd take all of it, if she could.\n\nAs if sensing she was about to interrupt, Maverick tightened the arm around her middle and snapped out harshly. \"Watch.\"\n\n\"Not again,\" Aella whispered. \"Please, not again. Please --\"\n\nAnd then it clicked into place. The wall, the room, the bed... She had seen them all before, in dozens of photos taken by undercover operatives in Torrin. Her blood ran cold.\n\nFactory. Aella was in a Torrin Factory, one of the insidious structures created to imprison, torture and kill fugitives, usually women and children who had tried to flee from the country's oppression of the entire female gender, who were desperate to find a better life.\n\nThe video cut off, and Ivy swallowed a scream. Wrenching herself out of his hold, she stood up and backed away from him. Her eyes squeezed shut as she tried to slow her breathing. After a few seconds, she looked up, her emerald eyes glistening with rage. \"You can't do this.\"\n\nHe grinned. \"Of course I can.\"\n\nShe snarled, the fury running through her blood so potent she was shaking with it. \"You... you're crazy. You're a fucking sociopathic, motherfucking, shit-eating, FUCK!\"\n\nMaverick cocked his head to the side. \"Is that any way to speak to your Alpha?\" His monstrous hand shot out and wrapped around her neck, pulling her back to stand in between his legs. He gripped her throat and squeezed. \"Apologize,\" he growled.\n\nIvy swallowed hard. Her eyes were a wild storm, a tornado of green venom, and she could feel her pulse bounding beneath his thumb. He smirked knowingly, digging his other hand into her hip as he tightened his hold on her neck.\n\nFucking Christ, he was a bastard. Aella was so soft, so innocent. Defenseless. Sweet. And judging by the look on her face at whatever it was she saw off screen, she was scared shitless. Maverick had hurt her. He was still hurting her. There were no choices here. Ivy was trapped. He really was fucking insane. And dangerous. And he had just done the one thing that could've made her submit.\n\nClenching her jaw, her hands curled into fists at her side, Ivy did the only thing she could do to help her friend.\n\nShe surrendered.\n\nWith just a teensy bit of attitude.\n\n\"I'm so sorry, oh mighty Alpha,\" she crooned, her voice syrupy sweet and unnaturally high, while flashing him a saccharine smile.\n\nMaverick smiled and released her throat, threading his fingers through her freshly washed hair. Thankfully, he had chosen to ignore her blatant sarcasm, because she honestly didn't think she could ever actually apologize to him with a straight face. \"That's better. Now. Are you ready?\"\n\nIvy tensed. \"Ready for what?\"\n\nMaverick's smile deepened. \"For the reunion, of course.\"\n\nRight. Like she had any fucking clue what that meant. It was kinda bullshit that he wouldn't even tell her what certain doom she was headed toward, but whatever.\n\nHe led her out of the room and down the hall, gripping the back of her neck possessively. It was the first time she'd been let out of her room, and because of the tiny, unreachable, frosted window, not to mention the fact that she'd been passed out cold when they first brought her in here, it was the first glimpse she'd gotten of the rest of the building. The floors were the same ugly green color as the scrubs they usually made her wear, speckled with dark blue flakes, and the walls were all padded with sterile white panels.\n\nIvy tried to concentrate on where they were going, what turns they made, the number of tiny-windowed doors and the community areas they passed, the locking mechanisms and the number of guards, orderlies and nurses circulating the halls. Details that might prove useful later on, but for now were just ways to keep her mind sharp and occupied while she tried not to think about where they were going or what Maverick was expecting her to do. Everyone they passed averted their eyes, clinging to the opposite wall to put as much distance as possible between them. A few even turned around and walked quickly in the other direction when they saw Maverick approach. Obviously, these toolbags were either terrified of Maverick or on his payroll. Or both.\n\nSuddenly, they were outside, and she was being led to a non-descript black sedan parked at the roundabout entrance. She tried to look behind her to see how the door locked, but his hand around her neck tightened painfully, keeping her head forward. \"You're hurting me,\" she growled through clenched teeth.\n\nHe glanced down at her from the corner of his eye. \"Mmmm. Good.\"\n\nMan-handling, wife-beating, daughter-abandoning, Omega-kidnapping asshole.\n\nIvy was hustled into the backseat by Maverick and a grey-haired Beta driver wearing an all-black suit with a headpiece in his ear. She turned her body to stare out of the tinted window as The Mav climbed in beside her and the vehicle began to move.\n\nShe tried to keep track of the turns they took, looking for any other buildings they might pass. There were none. Wherever they'd been keeping her was surrounded by a whole lot of nothing, just a bunch of oak and maple trees. Maverick had thrown his arm around her and was keeping her pressed tightly to his side. The car quickly became saturated with his scent, making her gag.\n\nShe felt like a child, up close to him like this. He wasn't as big as Hunter, and not nearly as muscular; but strangely, being around Hunter had never made her feel this small and helpless. Obviously, she knew he was fucking massive, with his ridiculous body rippling with his ridiculous muscles. And yet, she'd always had the feeling that, despite their difference in size, they sort of matched each other. Like she fit him, and he fit her. It felt... right.\n\nMaverick was different. Nothing felt right about him. Not his smell, not his size, not his touch. Everything about him felt distinctly, entirely wrong. She was completely outmatched by his size, strength and height. She was easily half his body weight, maybe less, and he towered over her by more than a foot and a half. Pretty boy or not, in any kind of physical altercation, deprived of a weapon, she would lose. Simple as that. She had to figure out a way to balance the scales.\n\nHe picked that moment, as she was gazing out the window imagining fun ways to dismember and kill him, to lean down and whisper in her ear. To outside eyes, the gesture would look tender, affectionate even. But his words chilled her, as did the warm breath that fanned across her neck.\n\n\"I know what you're thinking about, baby girl. Even if you could slip away from me, I know you won't. You won't even try. Because if you did, very, very bad things might happen. Torrin is a dangerous place.\" His arm around her shoulder drifted lower as he spoke, dipping beneath the neckline of her dress to grope at her breast. \"I have heard those Factories are just awful places.\" His thumb brushed over her nipple before he began roughly pinching and twisting it between his fingers. \"I know you've seen the pictures. Just imagine what sort of things could happen to Aella in a place like that.\" The claiming mark on her neck began to burn and throb as his mouth hovered dangerously close and the bond screamed its aversion to another male touching her.\n\nIvy gritted her teeth against the pain. She looked up at him and smiled sweetly. \"I promise you, Maverick, if it's the very last thing I do, I'm going to chop off your balls and let you bleed out as I shove them up your ass with a very large pair of salad tongs.\"\n\nMaverick threw his head back and laughed. Ivy just kept on smiling. He thought she was adorable, with her empty threats and fiery attitude.\n\nHe had no. Fucking. Idea. How very, very serious she was.\n\n......................\n\nHunter clasped hands with the very large Alpha standing in the darkened doorway. \"Good to see you, brother,\" Fowler growled in his low, rumbling voice. The man didn't know any other way to speak. He was a beast, and he talked like one. His shoulder-length hair and long, bushy beard were both wild and unruly and matched the dark brown of his eyes. He was a wall of muscle, his thick arms bigger around than Ivy's waist, and he loved to fight. Bar fights, battlefield wars, boxing ring matches, wrestling, friendly brawls... It didn't matter. Fowler came alive when he had someone to throw punches with, and he'd have a shit-eating grin pasted on his face the whole time.\n\n\"Pyle filled me in on the basics. They fucked up big time. You mess with one of us, you mess with all of us. We'll get her back, don't you fuckin' worry about that.\" He folded his arms across his massive chest and stroked his beard. \"I've been looking forward to this, my man.\"\n\n\"Thanks brother,\" Hunter grunted, suppressing a smile. He was with two of the craziest motherfuckers he'd ever met, and all three of them were geared up for a serious fight. \"You gonna let us in?\"\n\n\"Oh shit, man, of course. Come on in, make yourselves at home. Just keep it down, will ya? My old lady is sleeping, and if you wake the kiddos up, you get to deal with 'em.\" He chuckled as they walked into the darkened entryway and made their way back toward the living room, where a small lamp lit up a round table. A bottle of whisky and three glasses had already been set out, and he poured three fingers into each of them before offering them up to Hunter and Pyle. Pyle grinned, lifted his glass, and downed it all in two thick swallows.\n\nFowler had gotten into some trouble when he was still in the Army. Something about a stolen ammo bucket and an unauthorized reconnaissance mission that had ended badly. He'd never reached a rank high enough to be gifted an Omega, not that he cared about that. He'd found himself a sweet-as-pie Beta girl, possibly the only girl on the planet who would put up with his particular brand of crazy, and had filled her belly with baby after beautiful baby. Hunter tried to remember what number they were on. Four, or maybe five. Every wall was filled with framed photos. Family vacations, school pictures, holidays, birthdays... You name it. Fowler might be a growly, rough-around-the-edges powerhouse with violent proclivities, but he was also a family man. Where the rest of the world saw a wild grizzly, his wife and kids saw a teddy bear.\n\nHunter sipped his whisky as Fowler and Pyle refilled their glasses and caught up, speaking in low tones that gradually got louder as the bottle got emptier. He let his thoughts drift to Ivy, imagining her with a swollen belly, pregnant with his child. His dick hardened just thinking about it. Her last estrous had been unfruitful. Her body, no doubt, had been recovering from the insane amounts of heat suppressants she had been unknowingly ingesting. Her next cycle, he'd make damn sure she'd come out on the other side saturated with the scent of a pregnant Omega.\n\nAnd he would have her back by then.\n\nThe thought of her going into estrous without him there, or, even worse, with that fuck Maverick sniffing around her, made him see red. The two men looked up at him, and he realized he had started growling threateningly. He looked down at the rocks glass in his hand. A small spiderweb of cracks had started to appear with the strength of his grip. He forced himself to relax.",
        "\"Shit.\"\n\n\"Don't worry, my man,\" Fowler said, grinning from under his unruly mess of facial hair. \"She's gonna be back with us in no time. I heard about how you found her. She's a fated, isn't she?\"\n\nHunter nodded, throwing back the rest of the amber, burning liquid. \"She sure as fuck is. She's a little spitfire. You'd like her, Fowler. She'd give you a run for your money. Sure as hell drives me absolutely fucking insane at times.\" He chuckled.\n\n\"I can confirm that,\" Pyle declared, holding his glass up like he was about to make a toast. \"She came to admin one day, looking for Hunter and pissed as fuck about something stupid this asshole did,\" he said to Fowler, thrusting his chin out in Hunter's direction. \"Fuck me, man, you should've seen her storming up and down the hallway, scaring the absolute shit out of a dozen or so Alphas twice her size. She was like an angry chihuahua barking at a bunch of pitbulls.\"\n\nFowler threw back his head and guffawed, although unless you knew the man well, you wouldn't have recognized what came rumbling out of his chest as laughter. \"Oh, I know I'm gonna like her.\" He grunted. \"Now, let's get down to business. We've got one more man comin' to this party. Trevino's gonna be here tomorrow, I called him in. Told him I was cashing in that favor for saving his ass on that fuckin mountain in Pruvia.\" He laughed. \"You know I lost two toes in that shit? Ah, fuck. Sure was fun though. Anyways. We're gonna start with Senator Bowlin.\"\n\nHunter grinned. Trevino was a weapons man. He had more guns than the entire fucking Army. Up against Fowler, he was a slender guy. Trim, but muscular. And deadly as fuck. He'd been the best sniper in the military before he got out, by a very wide margin. No one else had even come close. Talk was that after he'd gotten out, he'd started taking contracts as an assassin. Hunter didn't know if that was true or not, the man was of the quiet, brooding variety, not one to share a whole lot about himself. But it certainly wouldn't have surprised him. At any one time, he kept no less than eight weapons on him, and that included when he slept. He was a walking, talking armory.\n\nSenator Bowlin, on the other hand, was one twisted fuck. Corrupt to the bone, that one. Hunter had heard the rumor of a kiddie porn collection in his basement. He'd also been instrumental in the coverup that allowed Hickson to get away with the murder of his wife, and attempted murder of his daughter. He'd take pleasure in gutting the pudgy bastard.\n\nHe closed his eyes and leaned his head back against the plush leather cushion of the recliner, half-listening to Pyle and Fowler debate which method of getting Bowlin to talk would be more enjoyable. For them, of course. His thoughts, unsurprisingly, turned to his stolen mate. He concentrated on the bond, needing, at the very least, to feel her through it, to know that she was still on the other side of it.\n\nI'm coming for you, Ivy. \n\nI'm coming for you.\n\n........................\n\nIvy jerked awake, still hearing Hunter's deep voice like an echo from his side of the bond. She strained her ears, hoping to hear it again, even if it was just a single word.\n\nBut instead of his rich, smooth tenor, what she heard was a watered-down-scotch drawl.\n\n\"Almost there, baby girl.\"\n\nShe looked outside. The sun was setting, the sky a picturesque blend of reds and oranges, and although she had no way to tell for sure, she thought they'd been driving for at least two hours. Too soon, the car slowed and turned onto a long gravel road, nestled between two stunning lawns, both with a well-planned assortment of foliage and flower gardens. They crawled to a stop in a circular drive. On one side, there was a massive, dark stone fountain, illuminated by soft lights both under the streams of water and circling the outside of the structure. And on the other side, a mansion big enough to rival a cruise ship glared down at her with dark, tinted windows and a blinding white brick fa\u00e7ade. It was hideous.\n\nThe driver jumped out of the car as soon as they had stopped and rushed around to open the door on Maverick's side. Before she could reach for the handle of her own door, he locked his hand around her elbow and dragged her out of the car through his side. Squeezing the back of her neck in a silent warning, he led her up a flight of white stone steps to the front entrance, where two security-types stood sentry on each side. Both nodded to them as they approached. \"He's expecting you,\" one of them said in a gruff, toneless voice.\n\nIvy swallowed. Who? Who was expecting them?\n\nShe gazed around as they walked inside, quickly deciding that the interior was just as ugly as the exterior. Everywhere she looked, she found some obnoxious, gaudy fixture or decoration, all in an ugly combination of red, gold and royal blue. Maverick led her straight to an open door halfway across the receiving room and up another flight of carpeted stairs. Here, the walls were white and bare. At the top of the landing, the space opened up into a small room, interspersed with gilded, matte black chairs with deep blue velvet cushions. Everything in this room looked so... official, and completely at odds with the rest of the house. In front was a small platform, on which was a dark wood podium with a massive microphone in the center.\n\nWhere the hell were they?\n\nA man dressed in a fitted navy-blue suit and matching tie, the same color as her dress and Maverick's three-piece, stepped out from behind a thick curtain on the side of the platform, followed by several men and two women clutching notepads and tablets. Slightly shorter than Maverick, he was trim for an Alpha, but still muscular, judging by the way he filled out the dark, crisp suit. Grey sprinkled his smartly cut black hair. As if sensing her eyes on him, he turned to meet her gaze, and smiled.\n\nOh, fuck. \n\nShe knew this man. She'd seen his picture on the wall of every military building, just below the President's photo, and although she watched very little television and even less news, she was aware of the major political players. But unlike seeing him in a frame or on a screen, there was something about being in his physical presence that helped the pieces snap into place.\n\nEthan Hickson, Vice President of Lostra, was the root cause of her nightmares.\n\nHer throat constricted. She took a step back, intending to get her ass as far away from the approaching man as possible, but was thwarted by Maverick when he stepped behind her and wrapped his arms tightly around her upper body.\n\nNo! \n\nThe memory slammed into her with the full force of a tsunami. She started shaking violently as a rush of images, scents and sounds flooded through her mind. All she could see was his face. All she could hear was a woman screaming. Her mother screaming. She felt a large hand wrapping around her neck, cutting off her airway, until everything went dark... and then smoke, suffocating, blinding and all-consuming black smoke, and everything was so hot, and then dad was there, and he was lifting her up, taking her away, away from her house, away from her mom, away from everything...\n\n\"Ivy.\" His thick, dark voice surrounded her, coiling around her body like a boa constrictor. \"My daughter. My sweet Ivy. I thought I'd lost you!\" His dark eyes were glittering, like he was about to cry. He reached out a hand and trailed a finger down her cheek. She couldn't stop shaking. Her knees buckled. If the Mav hadn't been holding her up, she would have crumpled to the floor.\n\nAnd then she remembered the sound of her mother being struck so hard, she'd been lifted off her feet and thrown halfway across the hall, and she channeled her terror into something far more useful.\n\nRage.\n\n\"You killed her,\" she hissed. \"You fucking killed her!\" She struggled against Maverick's hold. \"Let me go, fuckhead!\" She snarled. \"I'm gonna tear his fucking throat out through his asshole!\"\n\nEither the drugs were seriously dampening her reflexes, or everyone around her was becoming a lot faster. Either way, she never even saw the hand that struck her hard across the cheek. When she snarled and looked back up, a string bean of a man with thick, wire framed glasses and skin the color of weak cat piss was rubbing his hand, while her mother's killer frowned at him.\n\n\"Was that really necessary, Parsons?\" he asked, annoyed. Parsons opened and closed his mouth a few times, like a fish. \"Sir, she was threatening you.\"\n\n\"She's half my fucking size, Parsons. Look at her.\" He gestured to her with a shrug. \"She's confused and frightened and has obviously been traumatized.\"\n\n\"Of course, Sir,\" the string bean said, dejectedly. \"I only meant to snap her out of her hysteria.\"\n\nHysteria? Was this guy fucking serious?\n\nOnly one way to find out.\n\n\"Are you fucking serious?\"\n\nHer father turned back to her, still frowning. He cocked his head slightly and looked down at her with pity.\n\n\"My poor girl. You're confused. In total shock. We'll catch up after the press conference, hmm? I will explain everything.\"\n\nHe looked up at Maverick, still holding her tight against him, and nodded, then turned around and began walking back to the podium, his entourage of notebook-toting suck ups running after him like a trail of ducklings. Maverick began walking her forward. She tried to dig in her heels to stop him, and soon she was being scooped up carried down the aisle, cradled in his arms like a child.\n\n\"I'm not going near that man. He killed my mother! Put me the fuck down, Maverick!\"\n\n\"Shh,\" he whispered, his breath hot on her ear. \"You are being reunited with your long-lost father. The father you were stolen from by a Beta criminal. You will smile for the cameras, and cry, and embrace him when the time comes. Won't you, baby girl?\"\n\n\"No.\" Ivy shook her head, and the room spun violently. \"Unless you agree to let me kill him when we get up there, then no. NO. I'm not doing any of that. I can't!\"\n\n\"Oh yes, you can, and you will. Or do I need to make a call?\" Her eyes shot up to Maverick's grinning face. Aella. These assholes had Aella hidden away, under their thumb, just so they could get her to go along with them in this fucking joke of a story. They reached the podium and he slowly lowered her to her feet, spinning her around to face her forward. Bile rose in her throat as she watched a room full of reporters find their seats. She swallowed hard.\n\nShe'd never felt this weak, this afraid, or this angry in her entire life. She tried to center herself. This was a game. It was all just a game, and the only things that mattered were keeping Aella safe and getting back to Hunter. Despair gripped her as she thought of the man whose claiming marks hadn't even healed yet. Her feelings might be conflicted when it came to the big guy, but right now, she wanted nothing more than for him to barge in through those doors, gun down these motherfuckers, scoop her up and take her far away from this place.\n\nIt wasn't going to happen. If there was one thing her dad had taught her, it was that you couldn't wait for someone to come along and do things for you. Every problem she'd went to him with, he'd handed right back to her. She hadn't seen it at the time, but he'd always handed her a way to solve the problem herself, too.\n\nWhen a group of punks started shaking her down before school to steal her lunch money every day, he took her to a boxing gym and taught her how to fight dirty.\n\nWhen her first shitty little car broke down at the end of their driveway, he'd tossed her a toolbox and some gloves and told her she was grounded except to go to the library to pick up some books on cars and auto mechanics, so she could learn how to repair and maintain it.\n\nWhen she'd come home crying after her first... actually her only... boyfriend had cheated on her, he'd taken her to the gun range and handed her four boxes of ammo and a target with his picture on it.\n\nIt had always seemed important to him that she knew how to take care of herself. She'd never been a daddy's girl, but as she grew older and realized she could do things for herself that almost no one else her age could, she came to appreciate the way he had raised her. And it wasn't just the skills she had developed along the way. It was the outlook.\n\nYou've got exactly one person in this life you can count on, Ivy, he'd always told her. And it's not your dad. \n\nShe took a deep, steadying breath, ignoring Maverick's soft, moisturized hands pressing down on her shoulders. She wasn't helpless. She was never helpless. Thrown for one fuck of a loop? Yes. Drugged out of her mind? Yes. Outweighed, outnumbered and outgunned? Yes, yes and yes. But doing nothing, letting herself get tossed around like a hacky sack, was not an option, and it was not what she was doing now. Maverick had given her the power to keep Aella safe, and she was going to do everything it took to make sure she kept that power.\n\nHold on, Ivy. \n\nShe looked up, startled. The flash of the cameras began exploding like fireworks in her face. Her \"father\" was speaking at the podium. Maverick was pushing her closer and closer to the man who had killed her mother, who had tried to kill her. But none of those things had been what'd captured her attention. She'd heard his voice. In this room.\n\nHe wasn't here. She knew that. But she had heard him, as clearly as if he had been speaking directly into her ear. She could almost feel the rough stubble of his jaw as it rubbed against her cheek.\n\nShe knew she couldn't wait around, like a trapped princess, for Hunter to come slay her dragon. Aella had believed in fairy tales, but that was only because she had been tricked. Plucked from whatever home she had known and stowed away in a tower, waiting for a prince to come sweep her off her feet. It hadn't been her fault that a monster had come for her instead.\n\nShe also knew that, this time, she couldn't get out of this completely on her own.\n\nBut what if her dad had been wrong? What if she could count on Hunter, not to save her, but to be there when she needed him? What if they could work together? Save each other? Save Aella?\n\nI'm coming for you.\n\nShe twisted around to look up at Maverick-dude. He caught her eye and smiled wickedly. When she beamed up at him, genuine beatitude lifting the corners of her lips, his smile faltered. She turned back around to face the crowd, gazing up at Hickson with fabricated adoration. The drugs still in her system created a dense fog in her mind, like condensation hovering over a mirror-still lake in the early morning hours. She allowed it to dampen the panic and rage that threatened to smother her every time his dark eyes caught hers.\n\nThe cameras flashed. The hated Alpha put an arm around her shoulder, hugging her close, and she forced herself to melt into him.\n\nOkay, big guy. Let's do this thing. \n\nShe smiled.\n\nI'll meet you halfway.\n\n.................................................\n\n\"We have a problem.\"\n\nHunter looked up at Pyle from where he sat, sprawled comfortably on a wide black leather couch in Senator Bowlin's living room. He and Trevino had been enjoying the show playing out across the seating area, where Fowler was demonstrating some of Bowlin's more sadistic tendencies back to him... With a splintered broom handle.\n\nPyle held out a small tablet, pressing play just before he handed it off to Hunter. Trevino leaned over his shoulder to watch, sucking in a breath as the two Alphas took in the images of the delicate Omega they had left back in Torrin. Aella's throat was red and bruised, and her right eye almost swollen shut. Hunter cursed and stood up, following Pyle to the kitchen, Trevino close on his heels.\n\n\"This is Maverick's Omega? The one he beat?\" Trevino grabbed at the tablet Hunter held at his side. His fingers hovered over the image frozen on the screen, Aella's tear-streaked face looking fearfully at someone off screen, just to the side of the camera. Hunter grunted in affirmation. Trevino glanced up and narrowed his eyes.\n\n\"And you just fucking left her there?!\" the walking, talking armory growled at him. Hunter cocked his head, momentarily thrown off by the fury emanating off his old battle buddy.\n\n\"An all-female Beta crew was supposed to bring her to the Omega compound in Runda. I was told she was picked up before I came to.\" He turned to Pyle, who was watching Trevino carefully. \"Who did we forget?\" he barked. \"Who's doing this?\"\n\nPyle shrugged. \"Three guesses. I'll give you a hint. He's an ugly motherfucker with a scar on his mouth.\"\n\n\"Eli?\" Hunter asked, his eyebrows drawn together in confusion. Eli was the Torrin General who had tried to surrender use of the port to General Nelson. The move would have ended the war in Torrin and would have made Eli rich beyond his wildest dreams with the cuts he would have taken from Lostran sea merchants. When Nelson had refused his offer of surrender, Eli had orchestrated the attack on the main base that had put Ivy in danger. It wasn't beyond the realm of possibility that Maverick was working with Eli, but to what end, Hunter couldn't guess. \"Why? Why Aella?\"\n\nPyle shrugged again. \"Why does that shithead do anything that he does? Money. My guess? Maverick's paying him off, keeping him happy enough to extend the war and hold off on more port negotiations. It's no secret he's itching to make a deal.\" He cracked his knuckles and shook out his hands, rocking back and forth on the balls of his feet. \"Listen, boss. He's sending these videos to Maverick, and fairly frequently.\" He paused, waiting for his words to sink in.\n\n\"Fuck. FUCK!\" Hunter roared. He spun around and slammed his fist into the side of the wall. A framed picture of Senator Bowlin and his estranged wife fell to the floor, shattered glass sprinkling across the ugly blue-and-white tile. Rancor poisoned his veins. Maverick was using Aella and his own fucking daughter to keep Ivy in line.\n\nTrevino looked up from the tablet where Aella's image still lingered, glancing between the two other Alphas. \"Explain. Now.\"\n\nPyle reached for his tablet and smirked when Trevino pulled it just out of reach, refusing to relinquish the image of Maverick's abused mate. Hunter shifted back toward the two other Alphas, rubbing his fist. \"Ivy's got no fucking sense of self-preservation. I pulled her out of a conflict in Torrin, running around in the middle of a firefight with a bullet lodged in her shoulder, trying to save everyone but her fucking self. She barely knows Aella, but I have no doubt she'd die for her and that baby. She wouldn't think twice.\"\n\nTrevino nodded, then went back to staring at the screen. \"I've got this one.\"\n\nHunter looked at Pyle, who was wearing his signature crooked shit-eating grin, then back to Trevino. The Alpha could only be described as dark. Jet black hair hung low across his forehead but was trimmed neatly in the back. His wardrobe varied in color from charcoal to ebony. It was difficult to see where the pupils of his almond-shaped eyes ended, and sable irises began. To most, he looked perpetually expressionless, hardly ever hinting at what was going on beneath his stoic gaze. But Hunter had seen him in action.\n\nTrevino was a stone-cold killer. With his arsenal of weapons, he was professional and efficient. The sniper spilled blood like he had something to prove. When he watched the life drain out of a body, it was all there, written on his face, apparent in the way his eyes glowed and danced. Elation. Mirth. Rapture. The Alpha was one sick fuck.\n\nA sick fuck who was on their side.\n\nFowler walked into the kitchen, wiping blood from his hands on a soiled rag. \"We're done here,\" he grunted, grabbing a tumbler of whisky from the counter next to Pyle and throwing it back in one smooth swallow. Pyle clapped his hands while he jumped up and down, his smile turning into something downright malevolent. \"Then it's settled!\" he exclaimed, like a little kid.",
        "A very evil, very violent little kid.\n\n\"This is fan-fucking-tastic,\" Pyle continued. \"Trevino, when you run into good ol' Eli, you tell him his boy Pyle is sorry he couldn't finish carving up his face for him.\" Trevino grunted and silently moved toward the door.\n\n\"That dude is a motherfucking ninja,\" Pyle observed, watching as Trevino disappeared into the night. He looked back to Hunter, flashing him a crooked-toothed smile. \"What's the plan, Boss?\"\n\nHunter grinned. \"We're gonna burn the whole fucking thing to the ground.\"\n\nI'm coming for you. \n\n........................\n\nThe black road sliced through the misty landscape, towering maple and oak trees lining the sides like sentinels. Ivy folded into herself like an origami flower as she stared out the window, an impassive gaze plastered on her pale face. In the periphery of her vision, she observed Maverick maneuver himself into a dominant position, towering over her and caging her in with his massive frame. She rolled her eyes. She fucking hated this guy. Even more than that, she was utterly repulsed by him.\n\nMaverick snaked his arm around her shoulders and pulled her into his side. His fingers bit into the flesh of her upper arm painfully as he dragged a knuckle down her cheek, and she suppressed a shudder.\n\n\"You were so good today, baby girl. You're going to keep being good for me, aren't you?\" His fingers trailed lower and slowly closed around her neck as he leaned down to whisper into her ear. \"You're all mine now, little poison.\" His grip tightened with each accentuated word. \"All. Fucking. Mine.\"\n\nShe glared up at him, unable to speak with his grip around her throat. He was a goddamned idiot if he really thought that was true. She wasn't his, and she never would be.\n\nShe was Hunter's.\n\nShe blinked, startled with the trajectory of her thoughts. When had she suddenly become okay with the thought of Hunter as her Alpha? She wasn't a thing. She wasn't a possession. And while she'd never exactly felt that Hunter had treated her like an object he owned, he had always treated her like he had the right to every-fucking-thing she had to give. He dominated her mind, body and soul, but while she couldn't claim the same dominance, she knew that Hunter was as much hers as she was his. Even if she hadn't wanted or asked for the big bastard, he'd given himself to her all the same.\n\nThis prick, though? There was no question. Ivy was his new toy, and she had a very bad feeling that he was about to start playing with her in earnest.\n\nThere were no more needles on the way back, no more pills stuffed down her throat. By the time they reached the facility where she was being kept, her mind was clearer than it had been during her entire time with the Mav.\n\nShe took mental notes of everything they passed, confirming some of her earlier observations and cementing the details in her mind while she had the chance to think clearly. The entrance was guarded with cameras that stared down at them with unblinking red eyes. When they stepped up to the sliding glass doors, there was a slight hesitation before they opened, during which she assumed someone was confirming their identities via the security feeds.\n\nOnce inside, she noted the locking mechanisms on the doors. They were surprisingly simple and basic. A bolt and chain were all that separated her from freedom. A very thick bolt and a very large chain, but there was no electronic padlock or ID card reader.\n\nMaverick gripped her arm so hard, it was sure to leave bruises, walking so quickly through the building that she'd staggered twice trying to keep up. He led her through the hall to the fifth room on the left, unlocking the door and roughly throwing her into her familiar, hated room. She stumbled on the heels she was certainly not used to wearing, landing on her knees painfully.\n\nPrick.\n\nHe was on her before she could stand up, pressing between her shoulder blades to force her down into the cold tiled floor, her legs folded under her. She struggled beneath the hand he kept on her back, completely aware of the fact that it would do nothing. She gritted her teeth as he lifted her dress up over her waist, exposing her ass and the ridiculous scrap of thin material some people apparently thought passed for panties. Behind her, Maverick sucked in a breath, and despite how much she had tried to prepare herself for this moment, now that it was here, there was such a maelstrom of emotions caught in her chest that it physically hurt. Fear, anger, helplessness, dread, defiance, anxiety... All fought for a place in this horrible thing that was about to happen, and she found herself unable to deny any of them.\n\nMaverick kept her in place with a heavy hand on the back of her neck as his other hand skimmed over her lower back, hips, and ass. She bit her lip to prevent herself from crying out when with a sharp yank, he tore the stupid panties off and cupped her pussy. Eyes squeezed shut, jaw clenched, and body tense, she tried to think of Hunter, Aella and the baby; tried to remember why she wasn't supposed to fight this with every fucking ounce of strength she had left.\n\nThere was nothing she could do to hold back a furious snarl when he forced two thick fingers into her entirely unprepared channel. The invasion was painful, both between her legs and below her sternum, where the bond was going crazy, slicing deep into her flesh to punish her for allowing another male to enter the place only her mate was supposed to be. Her pained grunts as he started to roughly thrust his fingers in and out only seemed to spur him on. Pressing her forehead to the cold floor, she swallowed a sob as she felt her dress rip down the middle, felt his hands reaching under her to paw at her breasts.\n\nDetermined to get more of a reaction out of her, Maverick pulled and twisted her nipples until she cried out in pain. He released a low moan in response. \"That's it, baby,\" he panted. \"That's a good girl. I'm going to hurt you now, baby. You're going to scream for me.\" He removed the hand on her neck and fell forward, bracing himself with one arm planted next to her face as his fingers continued to shred her apart from the inside out.\n\n\"Mine,\" he growled. \"This pussy is all mine now, baby girl. Fuuuuck.\" For a very brief moment, she wanted to laugh. He was so intent on claiming her as a possession that he hadn't noticed a very important detail.\n\nShe was no expert on pair-bonds, but she was aware of the basics. The bond she had with Hunter, although newly formed, was strong. She knew that much. Alphas weren't supposed to be able to send messages to their Omegas. Strong feelings? Occasionally, she supposed. But actual words? It might be possible, but she had never heard of it before. When a pair-bonded mate died, it was supposed to be agonizing and dangerous for the survivor. And the stronger the bond, the worse the damage. If Hunter really had died, she would be sick, in constant excruciating pain. She might even die. The drugs might have explained her lack of response, but the drugs had worn off, and the only pain she was experiencing was from her insides getting wrecked, and from a very pissed off bond for what it apparently considered a betrayal to the male on the other side of it. Maverick, had he been aware of her, Ivy, as a person, and not just a toy he'd stolen from another boy in the metaphorical sand box, would have realized that something was wrong. That she wasn't reacting the way she should.\n\nBecause Hunter wasn't dead. And he was coming for her. Maverick could believe what he wanted to about his ability to claim her, but the fact was, she would never belong to him. Not in any real sense. Not in any of the ways that truly mattered.\n\nWithout warning, he pulled her up to her knees and spun her around to face him as he climbing to his feet. He dragged his knuckle down her jaw, gripping her and pulling her face up until she was craning her neck to look at him. With one hand, he undid the belt that had seemed so out of place to her on his neat and professional outfit. The belt was made of worn leather with four metal studs circling around the full length. Two were just inches from the buckle.\n\nShe tried hard not to think about what those little studs were really used for.\n\nLooping it around her neck with one end through the buckle, he pulled the belt taut until her throat was constricted just enough to make it slightly difficult to breathe. She rolled her eyes as he struggled with the buttons of his dress pants and cringed when he pulled out his cock. She averted her eyes, not wanting to look at the giant thing that he was planning on shoving down her throat. Fucking Alphas. Did they really all need to have monster dicks? Was that truly necessary?\n\n\"I want you to think of Aella, baby girl, and I want you to think hard. You wouldn't want anything terrible to happen to her, would you?\" He smirked down at her, and she suppressed the urge to stand up and knee him in the groin.\n\n\"Answer me,\" he said, his fingers digging into her jaw, as the other hand pulled the belt fractionally tighter. She tried to shake her head but couldn't move from his grip.\n\n\"No,\" she growled, trying hard, and failing, to hold back tears of frustration.\n\n\"That's my good girl,\" he crooned. \"Open your mouth, Ivy. You're going to choke on my cock, and then you're going to take me into that beautiful pussy of yours,\" he growled. \"Go ahead, baby girl. You don't need a written invitation.\"\n\nHe fisted his cock and dragged it across her lips. \"Open!\" he barked. Reluctantly, she parted her lips, and releasing her jaw to thread his fingers through her hair, he buried himself to the hilt, forcing himself deep down her throat. Not exactly prepared for the violence of the thrust, or how it would totally cut off her ability to breathe, Ivy began to panic and struggle. Her nails raked against his thighs, unintentionally clawing his pants off the rest of the way. Tears gathered at the corner of her eyes and her throat worked convulsively around the shaft as she tried, and failed, to draw in air.\n\nFinally, he slowly pulled himself back until she felt the head of his cock on her tongue. She coughed and spluttered, and like the bastard he was, he chuckled, amused by her pain. Holding her in place with both hands grasping the hair of her scalp, he began to fuck her mouth.\n\nBefore Hunter, her sexual experiences were limited to a shy boyfriend in her last year of high school awkwardly fingering her in the car. They made out a little, and then decided to go home. It had all felt... wrong. She remembered tasting Hunter's cock while she was in estrous, swallowing his come and basking in the glow of euphoria caused by the approving sounds he made and the way he smelled and tasted.\n\nThat sexual act in the mind-numbing bliss of estrous could not even be compared to what Maverick was doing to her now. Maverick's smell repulsed her. The taste of him on her tongue made her gag. Maverick chuckled and threaded his fingers through her chocolate hair.\n\nMore tears streamed down her face, and it wasn't just from his cock being forced down her throat. She hated this. Obviously, no one would find having a fucking Alpha dick shoved down their throat against their will a pleasant experience, but she hadn't been expecting this to be so very horrible.\n\n\"Breath through your nose, baby girl. Relax your throat. Take it all. You will fucking take everything I give you.\" In her head, she was releasing a string of curses unlike any she'd ever said before, and, let's face it, she had a pretty fucking dirty mouth. It wasn't like she had a choice. His hands gripped her head so hard she thought he might crush her.\n\nShe tried to imagine she was somewhere else, somewhere she was safe and happy. Her inner self went to the beach, walking on the wet sand as small waves lapped against her ankles, her skin warmed by the heat of the sun.\n\n\"Oh, no you don't,\" Maverick growled just before he gave her a few especially violent thrusts and tightened the belt around her neck. \"You stay right here with me; you feel every fucking thing I'm doing to you.\"\n\nHe pulled out suddenly and yanked on the belt, pulling her up and bending her over the side of the bed. She felt the head of his cock, slick now with her saliva, line up with her entrance. \"Get ready, baby girl.\"\n\nShe desperately wanted to beg him to stop. Even if he had loosened the belt around her neck enough to let her talk, she would have forced herself to swallow the words. Begging wouldn't do anything but excite him. Nothing she did right now would stop him. Nothing.\n\nThe slick, bulbous head of his cock breached her entrance, and he slowly began to force himself in. The belt loosened enough for her to suck in deep breathes of air. He drove in another inch, and she covered her mouth with the palm of her hand to muffle her sob. Another inch. He couldn't do this. Another inch. He couldn't make her do this! Another inch, and it hurt, it hurt so much! Inside her head, she was screaming.\n\nSTOP! NO! PLEASE, PLEASE STOP! PLEASE MAKE IT STOP, MAKE IT STOP, MAKE IT STOP, PLEASE! HUNTER!!!\n\nThere was an abrupt pounding on the door. Just halfway in, Maverick paused. Without waiting, the door was pushed open. Someone stepped inside and cleared their throat.\n\n\"General!\" A familiar voice shouted, much louder than was necessary, causing Maverick to jerk. Ivy cried out into her palm as she took yet another agonizing inch.\n\n\"Sir, we just received an urgent message from the capitol. There's been an incident. Parsons has gathered everyone in the conference room for a briefing.\"\n\nKentucky.\n\n\"Not now!\" Maverick barked, turning his attention back to Ivy, his breath heavy on the back of her neck. \"Get out!\"\n\nKentucky cleared his throat. \"I apologize, sir, but Vice President Hickson personally requested you be there. It concerns Senator Bowlin.\"\n\nMaverick swore under his breath, and then it was over. The suffocating weight of his body was gone, and he was no longer inside her. She heard the faint rustling of his suit being straightened and smoothed out. Leaning over her again, he fisted her hair and pulled her head up, arching her back in the process. \"We'll finish this later, baby girl,\" he growled, his mouth skimming the shell of her ear before releasing her and moving away.\n\nAs soon as his weight was gone, Ivy crumpled to the ground, her back pressed to the frame of the bed as she tried to steady her breathing and still her violent shaking. Her eyes darted to Kentucky, who was standing there, staring intently at her. He moved out of the way to let Maverick pass by him, then turned and began to walk out.\n\nPausing inches from the door, he reached into his pocket and dropped something onto the floor. \"Heard a rumor today,\" he said quietly, his back to her. \"Apparently, Aella's back in Lostra, safe and sound.\" He didn't stop or look back before slamming the door shut.\n\nIvy blinked, trying to process his words. She swiped the tears from her face and, using the bedframe as a support, slowly climbed to her feet. In small, careful steps, aware that any second now, her body would decide it'd had enough and shut down, she crept toward the item Kentucky had dropped and crouching down to examine it. He had wrapped something in a small hand towel. She reached down to unfold the little package, sucking in a breath when she saw what he had left for her.\n\nHe'd given her a syringe. A prefilled syringe of a powerful sedative.\n\nWhat... why? \n\nAnd then it clicked into place. Aella! Aella was safe! Holy fucking shit! She almost did a fist pump and had to bite back an excited yelp. Having absolutely no idea why Kentucky had done what he did, she thought over her options. If this was some cruel trick... She was fucked anyway, both literally and figuratively. If Kentucky was playing her, the end result would pretty much be the same. If this was real, it might be the last chance she had to get away from Maverick for a long time.\n\nShe scooped the smuggled sedative off the floor and rushed back to her bed, shoving it beneath her pillow. Quickly pulling on her discarded, pea-soup scrubs, she jumped onto the mattress and burrowed beneath the blanket, curling her hand around the syringe.\n\nAnd then she waited.\n\n....................\n\nMuscles tight with tension, Hunter fingered the knife at his side. The three Alphas stood facing the facility, cloaked in the shadows of the forest beyond. Bright lights around the entrance bathed the front lawn of the asylum in false daylight, and several guards stood at the locked doors, chatting and smoking cigarettes.\n\n\"You sure you can find her?\" Fowler asked as quietly as Fowler could, which really wasn't quiet at all, while loading a magazine into his sidearm with a satisfying click. Hunter growled. \"I'm fucking positive.\"\n\nHe closed his eyes, recalling the rush of fear and frustration he felt from Ivy's end of the pair-bond as they had approached. And then he was pummeled with wave after fierce wave of pain. Along with the pain came her voice, screaming in his head, agonizing and panicked, calling out for him, asking him to make it stop, and Fowler and Pyle had to wrestle him to the ground to stop him from barreling straight for the building without a solid plan of attack. The only thing that had walked him back from the edge was the abrupt silence as the pain receded, replaced with relief and, a few minutes later... Excitement. Hope.\n\nWait for me, Ivy. Just a few more minutes. \n\nA rush of adrenaline smacked into him from just beyond the glass doors, and he cursed under his breath. Pyle turned, cocking his head in a silent question. Why couldn't she just stay put? For fuck's sake! They were five minutes away from storming the place, but Ivy would never miss an opportunity to put herself in harm's way. He glared at Pyle. \"She's gonna run.\"\n\nFowler rumbled out what might have been a chuckle. \"Oh, I love this girl.\" He grunted and pulled at his beard. Hunter knew what his friend meant, but he couldn't help picturing pummeling the grizzly's face in for his endearing statement.\n\n\"All right,\" Pyle said, bouncing on the balls of his feet, practically giddy with excitement. The crazy fuck lived for this shit. \"Come on, ladies. Let's go wreak some sweet, delightful havoc!\"\n\n...............\n\nThe sound of the bolt unlocking was deafening in the silent room. Ivy forced herself to stay still, working hard to keep her breathing slow and even as she listened to the heavy footsteps creep closer. Her hand was still curled around the syringe beneath her pillow, and she used her thumb and forefinger to carefully remove the plastic cap from the pointy end. The familiar rush of adrenaline pumped through her blood, and she welcomed it. She'd need it. She had exactly one shot at this, and it was now or never.\n\nThe footsteps stopped at the foot of her bed and she felt Maverick's eyes on her, crawling over her skin. A heavily moisturized hand crept under the blanket and wrapped around her ankle. Ivy tensed. There was a pause, and then she was yanked roughly down the bed until her ass hit the edge. She sprang up, meeting her assailant, and shoved the needle into his neck, simultaneously depressing the plunger with a violent growl. The Mav stumbled back and yanked out the syringe. He held it out in front of him, staring at it in disbelief, before looking back up at her. \"What the fuck did you do, you little...\"\n\nHe trailed off and swayed before falling to his knees, his eyes rolling to the back of his head as he collapsed face first on the hard floor.\n\n\"...Bitch?\" she finished for him, before she hopped off the bed and rushed over to him. The cocky bastard hadn't even thought to disarm himself before he came back to finish his earlier attack. She grabbed the gun from the holster on his hip, pulling back the chamber to make sure it was loaded as she walked to the door. For just a moment, she looked back at the prone form of her tormentor, considering whether or not to put a bullet in the back of his skull. It was fucking tempting. He certainly deserved it.",
        "No. He deserved more than that. He deserved to suffer. \"I'll be back for you, you fucking prick.\" she promised. Hesitating for just a second, she ran back, lifted her foot, and drop kicked him.\n\nHard.\n\nTwice.\n\nIn the balls.\n\nShe took a deep breath in and blew it out from between pursed lips, walked back to the door, made a fist and pounded twice.\n\nThe bolt unlocked. Ivy aimed the barrel as it swung open. Now or never.\n\nA face came into view, glancing up at her before looking down at the gun in her hands and then back up. Kentucky. She kept her gun raised, just in case he was considering double crossing her again. He didn't seem to take offense. He nodded once and moved into the open doorway, glancing behind him to make sure nobody was paying attention. \"Do you trust me?\" he asked quietly.\n\n\"Absolutely fucking not,\" she snarled. He grinned, and she felt like she had been punched in the gut. There was so much of her old friend in that smile, it was easy to humor the thought that he had been telling the truth, that he really did regret his actions and really was trying to redeem himself.\n\n\"Unfortunately, Poison, you don't have a choice right now.\" He spared another glance behind him. \"There's about fourteen guards in the hallway at the moment, and all of them are armed. You'd have no chance of getting out of here by yourself. I can get you as far as the rec room by the back entrance, but we have to make it look like you're coming with me willingly, without a gun pointed at my head. I'll give you my key card. When you get out the back door, run to the tree line and hide. I'll meet you out there with a cell phone and some cash, and then you're on your own.\" He fell silent, waiting for her to make a move.\n\nShe narrowed her eyes at him. She was taking a risk, but he was right. Fourteen against one wouldn't work, even with a gun. And what else could she do? Hang out until the Mav gained consciousness and then ask him politely to let her go? This was her best chance of getting out of here, and she wasn't about to back down just because Kentucky had been a dick in the past.\n\n\"Okay,\" she relented, reluctantly lowering Maverick's gun. \"But if you fuck me over again, Kentucky, I swear to fucking God, I will shoot you in the face before I go down.\" He grinned again and nodded. \"Deal.\"\n\nIvy tucked the gun into the back of the ugly scrubs (which was a rookie move, but she couldn't exactly shove it up her asshole, so whatever), and moved toward the open door, stepping out into the hallway as Kentucky grabbed her upper arm and pulled her against his side. Together, they walked down the hall, Kentucky nodding at the other guards as they walked by.\n\nThey were about halfway there, still several yards away from a door marked \"Recreation,\" when they heard a sudden commotion behind them. \"STOP THEM!\" a voice bellowed. Ivy spun around, twisting out of Kentucky's grasp, to see Maverick stumble out into the hallway, his face beet red with unabashed fury. \"STOP THOSE TWO, NOW!\" he roared again. Several guards turned their way, drawing their weapons and moving toward them.\n\nKentucky grabbed her forearm and yanked her behind him, pulling his own gun from his side and aiming it down the hall at Maverick and the approaching Betas. \"Run, Ivy! GO!\" he grunted, thrusting a lanyard with a small plastic card into her hands. Ivy hesitated for a fraction of a second, suddenly unwilling to leave him alone. Her pulse raced as she looked over her shoulder at the exit door and then back to Kentucky. \"Thank you,\" she whispered.\n\nAnd then she ran.\n\nShe reached the end of the hall and swiped Kentucky's card through the reader. There was a click, and the red light turned green. \"IVY!\" Maverick screamed from behind her. \"GET THE FUCK BACK HERE, YOU LITTLE BITCH!\"\n\nAhh, there it was. She was glad he got that out of his system. Must've been killing him.\n\nShe yanked at the handle and slipped out, sparing a quick look back. Maverick had a gun trained on Kentucky, along with the rest of the guards who had surrounded him in the wide hall. She swallowed hard and turned, starting for the tree line.\n\nA gunshot rang out behind her. She froze, looking over her shoulder just before the door shut.\n\nKentucky was on the floor, gazing up at her with lifeless eyes, a bullet lodged between them. She whimpered, which was pretty much the most pathetic sound she'd ever made. She spun around and started sprinting toward the trees beyond. With her friend dead and a bunch of brainwashed assholes hunting her, she had to get as far away as fast as she could.\n\nA heavy weight barreled into her from the side and she was scooped up into a set of massive arms. A hand closed over her mouth, muffling her scream as she thrashed and kicked at whoever had caught her. She did not just watch Kentucky die for a second time just to be dragged right back into that hell! She somehow managed to wrestle one of her arms free and elbowed him in the gut. Which, naturally, did nothing.\n\nFucking Alphas.\n\n\"Easy, there, easy. I'm a friend,\" a deep voice growled, his words just barely recognizable as words. \"I'm gonna take you to Hunter now, okay? We'll do introductions later.\"\n\nShe stilled at the sound of Hunter's name. Relief washed through her like a tonic.\n\nHe was here. He was going to take her away. And he had brought friends! Her muscles relaxed, and she nodded. The growly giant released her and grabbed her hand, leading her around to the front of the building. The muted sound of gunshots echoed from behind the brick walls of the facility. What the hell was going on in there? Her stomach churned at the thought of Kentucky's dead eyes, the clear amber of his irises dulled to a defunct brown. Maverick's beet red face, screaming at her to get back there. Pssh, yeah, like that was going to work.\n\nHer mind was flitting from one disjointed thought to another, faster than she could keep up with them. Growly released her hand and ushered her in front of him, putting himself between her and the sounds of gunshots until they were far enough away to be cloaked in darkness.\n\nAnd then a large figure emerged from the building and charged toward them, and she stopped breathing.\n\nHunter.\n\nHe didn't stop when he reached her. He scooped her up like she weighed nothing and kept walking until her back hit the rough bark of a tree, the gun still in her scrubs digging into her tailbone. She wrapped her legs around his waist as his body pressed hard against hers, pinning her in place. He cupped her cheeks with both hands, his thumbs swiping away the tears that had inexplicably started falling as those wild storm-cloud eyes bore into hers. \"Ivy,\" he breathed. \"My little poison. Are you hurt?\"\n\nShe shook her head, stifling the sob that was trying to wrench itself from her chest. \"You came for me,\" she whispered, her voice shaking.\n\n\"I will always come for you.\" His hands snaked around her head, his fingers threading through her hair as he pressed his forehead to hers. \"Do you understand me? There is nowhere you can go that I won't find you, nothing I won't do to get to you. Always, Ivy.\" His mouth crashed into hers, and then he was kissing her like he wanted to swallow her whole. Possessively, crazily. There was nothing gentle about the way his tongue demanded entrance, or the way his teeth scraped and bit her lower lip, or the way his hands fisted in her hair, clinging to her like she was disappearing in his arms. She didn't want gentle. She found herself returning his frantic affection, suddenly needing to be conquered as much as he needed to conquer. He was reclaiming her, proving to both of them that she was his, that she would always belong to him.\n\nAnd for once, she didn't hate him for it.\n\nFor once, for now, she fucking loved him for it."
    ],
    "authorname": "ReckingBall",
    "tags": [
        "omegaverse",
        "omega",
        "alpha",
        "military",
        "noncon",
        "non-human",
        "nonhuman",
        "non-con"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/poison-ivy-ch-07-1"
}