{
    "title": "Fleet Scout Ch. 03 - Fleet Rescue",
    "pages": [
        "This installment has gone through multiple iterations, I kept ending up in some pretty dark places that I hadn't intended, probably as a reaction to our wonderful new reality. I want to thank you for your patience and understanding. \n\nThe next morning, the jailors were back. He was cuffed, ordered out of the dome and taken to a cargo box building. He hadn't seen them earlier, but several cargo haulers had arrived and were parked around the runway. There was a thunderclap from above them and Finn saw tangles of contrails in the gaps between dark clouds. It looked like Erewhon's missing supplies were finally arriving and Finn wondered what else was being landed.\n\n\"Keep your eyes on the ground,\" one of the guards said from behind him and prodded Finn along with a shotgun muzzle.\n\nHe knew he was asking for another beating, but Finn turned to look at the man all the same. The response was all three shotguns pointing at his head. \n\n\"Stand down,\" a loud, gravelly voice demanded. \n\nWalking toward them was the middle-aged man Finn had last seen in the medical dome. He was wearing the same Colonial Guard utilities as before, stripped of any unit patches. Instead, the man with hard blue eyes wore the stripes of a Brit Master Sergeant. \n\n\"Colonel Morgan. I understand your irritation, but this is not the Rub 'al Kali and these farm-boys are not Berber separatists. What they are is greener than grass. If you continue to wind them up, everyone is going to have a rather bad day.\" \n\nThe man then turned on his heel slightly to look at the guards. Every movement the immaculately uniformed man made was smooth and precise and Finn was familiar with the type. Air Force Chief Master Sergeants had moved the same way, like heavy machines with lots of ball-bearings.\n\n\"What were your instructions?\" he asked the guards, eyes moving from one to the other like gunsights.\n\nThey wilted visibly and looked even younger. \"Bring the prisoner...\"\n\n\"Stop. What I said was 'Bring Colonel Morgan...'\" Copeland prompted. \n\n\"Bring Colonel Morgan to see you in the duty room,\" the guard said.\n\n\"Then how did we end up here, my son? I don't recall anything about pointing your weapons at his head.\"\n\n\"He was looking around too much,\" one of the others volunteered sullenly. \n\n\"Give me strength,\" the chief sergeant sighed. \"How is that an offense to good order? No, shut up. You two will turn in your weapons and join your brothers-in-idiocy on punishment detail.\"\n\nThey slunk off as Copeland swiveled to look at Finn again. \"Sir, I apologize for that. I would have come myself, but I was sidetracked. My name is Aaron Copeland.\"\n\nFinn almost laughed. \"Really?\" \n\n\"A man of culture I see. Yes, and we all have our crosses to bear, don't we Captain Morgan?\" \n\n\"Yes, we do. Am I being taken to the other prisoners?\"\n\n\"You're a step closer, sir. If you'd follow me, please.\" \n\nHe walked toward one of the newly arrived modular offices without bothering to see if Finn was following. When they went inside, it was gloriously air-conditioned and there was the smell of coffee. Copeland sat down in one of the chairs and gestured toward the other.\n\n\"I'd prefer to remain standing. I would also like to say that I will not cooperate or collaborate with whoever you people are and I refuse any special treatment.\" \n\nCopeland nodded. \"Of course, and I appreciate your position. You won't believe me, but this is neither interrogation nor a psyop, sir. It's personal and you'll see it as blowing sunshine up your arse, but I wanted the privilege of meeting you.\"\n\nThe abrupt shift startled Finn for a second. Then he sighed. \"That goddammed skyhook battle again.\" \n\nA small smiled flickered on Copeland's face. \"Not exactly, and I promise not to ask for a selfie. This concerns your service history prior to Revelation Day.\"\n\nFinn blinked. \"That doesn't have anything to do with what's going on here.\" \n\n\"Correct. Your Air Force service record is available on the Hub public wiki, complete until your transfer to Fleet Scouts. My political masters have done their homework and we both know that you don't know anything that pertains to this...unpleasantness. \n\n\"However, prior to Revelation Day, I was a staff sergeant in a merry band of His Majesty's Own Sneaky Bastards. I was in the sandbox from '37 to '42 and you flew with the Yank 406th Tactical Aviation Brigade at Forward Base Banshee from '38 to '43. I owe you a thanks for the lives of many of my wayward lads. That's why I'm here playing fanboy. In better times, I'll be buying you a lot of very good whiskey. Until then, can I offer you coffee?\" \n\nFor the first time, Finn was sorely tempted but turned down the offer.\n\nCopeland looked pained. \"Colonel, as I said, this is a private matter. I know that you were shot down and taken prisoner on your first tour in '36. If the Berber Nationalist Front couldn't break you, it's obvious that I won't either. However, as I said, this is not an interrogation, or even an official interview.\"\n\nFinn shook his head again. \"I'd like to join the other prisoners, sir.\"\n\nCopeland didn't move. \"Mr. Morgan, you've led men and women into combat, you know what their lives are worth, and, most importantly, you know the way our masters despise their value. I took most of mine home because of you and those other deranged strike pilots. It near to breaks my heart that we're at odds, a feeling I do not care for. Now, you will sit down, and you will have a cup of goddammed coffee!\"\n\nLike his brethren, Copeland had the voice of command that somehow bullied reality into agreement. Finn was halfway into the chair before he realized it. Copeland looked up from the cups he was setting out. \n\n\"Unless you'd prefer tea, of course,\" he added in a normal tone. \n\n\"No, coffee is fine, thank you.\" \n\nCopeland nodded and turned to pump two cups of coffee out of an insulated carafe. He handed one to Finn and toasted him for a moment. Then they both took a long sip.\n\n\"Oh, this isn't bad at all,\" Finn said, surprised. \n\n\"A Hub tolerant stock originally from home or some nonsense. That's what the box says anyway.\" \n\n\"You were SpecOps back home. Is that what you are now?\"\n\nCopeland looked slightly uncomfortable, an interesting response. \"Obviously, I'm with the Resettlement Directorate. For now, well, they're calling the entire force Defenders of Liberation.\"\n\n\"Really? That's awful.\" \n\nCopeland shrugged. \"I agree, but what can you do?\"\n\nThey finished the coffee with not much more conversation. \n\n\"Now what?\" Finn asked. \n\n\"I was going to suggest a walk, but I assume that's thunder I've been hearing.\"\n\nFinn nodded. \"I think it's the higher air pressure that makes it so loud. It'll rain for an hour or so, then get hot enough to evaporate it all back into the atmosphere to fuel the next round of thunderstorms in a few hours. Then all the humidity evaporates to fuel the mid-day storms and so on.\"\n\n\"Then perhaps we can have that walk another day. I'll take you to the dormitory where your colleagues are being kept.\"\n\nThe humidity outside felt more like being smothered in wet blanket than open air and the black line of storms was just visible over the trees at the far end of the clearing.\n\n\"Can you tell me what the plan for us is?\" Finn asked.\n\n\"If I knew, colonel, I'd tell you and you have my word on that.\"\n\n\"I'm a scout captain, the colonel thing was just an administrative thing during the defense. Or just call me Finn.\"\n\nThey neared one of the double domed residences. Two guards with shotguns stood outside and Finn stopped outside of their hearing.\n\n\"Copeland, did your people have anything to do with the crash of the Sparrow's Flame?\"\n\nThe broad-shouldered man stopped walking and faced Finn, looking into his eyes. \"No. It's been explained to my superiors as an unfortunate accident. I heard your conversation with Ms. Maya Tanner and I will make my own inquiries. If it was deliberate, I will find out and see the perpetrators at the end of a rope.\"\n\nFinn wasn't sure if he believed that Copeland would hunt anyone down, but he didn't think the man had been involved at least. Copeland escorted him to the makeshift prison and one of the guards opened the door while the other one waved him through. The two geodesic domes were connected by a hallway passage, and to the left, the larger of the domes was set up with rows of crudely printed plastic cots set in rows. The smaller dome to the right contained a basic kitchen and communal area where a couple of dozen people were gathered. \n\n\"Finn!\" several people yelled as he stepped inside. \n\nYanna was the closest to him and grabbed him with strong hands. \"How are you walking?\" she demanded, looking him over. \n\n\"GalTech bone splint, I'm good as new.\" \n\nShe glared at him but let him go. The others gathered around, welcoming him back. Finn put up with all the crowding as best he could, but it was a relief when they stopped slapping his back and hugging him. \n\n\"What's going on out there?\" Kai finally asked as he deliberately scratched his ear.\n\nFinn nodded fractionally, acknowledging the warning. \"Lots of people in uniforms, lots of landers,\" he said. \"They had me in the medbay and then a hab, I didn't get a chance to see much else. Everyone okay here?\"\n\n\"It's boring,\" one of the Ta'avi men said. \"They took our tablets.\" \n\n\"There's way worse things than being bored,\" Finn said. \"What's so interesting over here?\" \n\n\"Trying to figure out how this groundhog is doing a magic trick. Do it again, Kai. I bet Finn figures it out...\"\n\n\"But I want out!\"\n\n\"Look around, Atalanta, you're not trapped inside of anything,\" Marie said. She had been working with Addie all morning and Leah was impressed with her patience as she gently cajoled, argued, and teased the Navvi system out of whatever temper tantrum Atalanta had gotten herself into.\n\nThe two of them were sitting on the flight deck, sprawled out on the floor. Various hatches and access panels were hanging open and coils of fiberoptic filaments covered the deck. \n\n\"Well, why can't I control my own ship?\" Addied whined. \"I want to talk to Finn!\"\n\n\"But there is nothing for you to control on the ground, mon r\u00e2leuse,\" Marie soothed. \"And we just talked about Finn. Where is he?\"\n\n\"At the outpost where I abandoned him,\" Addie sighed. \"He probably hates me now. Everyone else hates me.\" \n\n\"Is that a true thing?\" Marie asked.\n\nThe ship sighed. \"No. But I want to talk to Finn.\" \n\n\"Soon,\" Marie promised. \"I am going to restore your control coupling now.\" \n\nAddie didn't respond, just sighed sadly. \n\nMarie eased the control coupler back into its socket. There were scattered chirps around the interior of the ship as sub-systems came online. Through the open hatch, Leah could hear the attitude thrusters whirring as the Addie's control system came online and tested their movement. \n\nShe held her breath. This was the third attempt to get Addie operational, and the most promising so far. Then the interior lighting went red and both humans sighed. Marie gently removed the quartz cube again and the red lights disappeared.\n\n\"I bet the Goddess can help me,\" Addie said in her ten-year-old voice.\n\nThe two women looked at each other. Marie shook her head minutely and Leah nodded. \n\n\"Can she?\" Marie asked Addie, voice casual. \n\n\"You already asked Bunjil and Viracocha the same thing,\" Addie complained.\n\nBoth women froze. The other two ships were offline, including their communications.\n\n\"Did they tell you that, Atalanta?\" Marie asked, keeping her voice pleasant. \n\n\"No, they hate me. I told you that already\"\n\nMarie tucked a loop of cable back under the console. \"Then how did you know that we asked them about your goddess?\" she asked. \n\n\"She's not my Goddess. I know you asked them and that is a true thing.\" \n\nMarie didn't respond and Leah helped her close the access panels in silence. The two women were quiet as they hopped out of the hatch and didn't speak until they were halfway down the slope to the roaring whitewater, far beyond the point any of the three ships could listen in.\n\n\"At least we know Atalanta is not the source of this goddess fantasy,\" Marie said. \n\n\"Could the stress of the mutiny be causing it?\" Leah asked. \"Violence against friends and all that?\" \n\n\"I had the same thought at first, but as I understand it, each Navvi integrates experience into their personality, creating unique reactions to stresses. For example, Bunjil becomes very proper during landings, but Virococha makes terrible puns when she is under the same stress. So, it doesn't make sense to me that all three have developed an identical psychosis. My best guess was that Atalanta might be the source, since she's been through much more than the other two, but her datalink is disconnected.\" \n\n\"What's left?\" Leah asked. \n\nMarie gave her very Gallic shrug. \"Some factor in the environment? Noel took samples from all three ships looking for signs of a biological contamination, but I doubt that is our problem. Even if it was, why would it create identical behaviors? You've spoken with Wisdom, does she have any ideas?\" \n\nLeah kicked a rock in frustration. \"I'll ask again, but last time she laughed and told me to see what is in front of my face. She says that a lot.\"\n\nThere was a whistle from behind them. The pair glanced back toward the cluster of ships and saw Noel coming down the slope. Marie waved for her to join them.\n\n\"Hello, my lovelies,\" the ash-blonde ex-Parisian said. \"I just finished all of the biological assays; there are no signs of contamination.\"\n\n\"You're sure our tests would pick something up?\" Leah asked.\n\nNoel shrugged. \"Everything must eat and create waste, non? Possibly there are localized disturbances to the laws of physics, but I think we would have noticed that.\"\n\n\"Then I'm out of straws to grasp at,\" Marie said. \"I've gone as deep as their self-protection and secrecy protocols will allow. Addie is the most evolved of the three, we'll give her some time to calm down and try talking to her again tomorrow.\" \n\n\"When there is nothing to do, the best thing is to do nothing,\" Noel said. \"Heljah and Mikah have built us a swimming pool. Come and see.\"\n\n\"We'll be along in a moment,\" Marie said. \n\nShe gave them a little wave and walked across the slope toward the downstream side of the spit of land they were camped on. Leah found herself glaring at the woman's back.\n\n\"I hate the idea of splashing around having fun while there are POWs.\" \n\nMarie took her arm, and they began walking back up the slope. \"Worrying about a fight endlessly before it has even begun will leave you exhausted and confused. Perhaps a clear head would help in your conversation with Wisdom. Has there been any more news from the outpost?\"\n\n\"No, but there are Runners due in tomorrow,\" Leah said.\n\n\"Then today we shall go examine this swimming pool,\" Marie said. \"I have no idea how those poor men have the energy to do anything more than crawl out of that den of inequity each morning.\" \n\nDespite her dark mood, Leah had to smile. \"Do I detect some jealousy?\" \n\nThe other woman chuckled. \"Certainly not. Henry is more than enough for me to handle.\"\n\n\"You know, I don't mind keeping Lily overnight,\" Leah said. \"With Addie in pout mode, the company is nice.\"\n\n\"That is kind of you,\" Marie said. \"I'll take her back tomorrow evening. I will need a rest.\" \n\n\"Now I'm jealous,\" Leah sighed.\n\nMarie laughed. \"If we were an open couple, I'd be happy for the help. Tu n'as pas saut\u00e9 avec Finn?\"\n\nLeah sighed. \"Every single time we've gotten close, things start exploding.\"\n\nMarie laughed. \"I could say the same when I first met my goat, but perhaps not quite as literally.\" \n\nThe pair was still laughing as they joined the others. Henry was holding Lily and looked at them suspiciously as the baby began laughing as well.\n\n\"When you all laugh like that, I know there is trouble coming for me.\"\n\n\"And you love it,\" Marie said, putting her arm around his waist. \"How is our little rabbit?\"\n\n\"Getting frustrated that I don't understand her, I think.\" \n\nLily was beginning to grump about not being the center of attention until Marie had given her a kiss as well. Down in the river, the two Ta'avi Pioneers, Micah and Heljah, had stripped down to their boots and shorts as they worked hip deep in the river. They'd somehow shifted boulders around, creating a large oval enclosure between the spit and the shore. Now they were using smaller cobbles to line the basin. \n\n\"I hope there is a way to bring fresh water in,\" Marie said, wrinkling her nose.\n\nHenry laughed. \"I agree! Look though, there is a current from the water flowing through the stones beneath our camp. They are Ta'avi, so of course their project is well engineered. Not only fresh water but filtered as well.\" \n\n\"From the looks of things, we will require both,\" Marie said. \n\nUnlike the men that had kept their shorts and shoes on, Sasha and Noel had shed all of their clothes when they'd gone into the water to \"help\" with the work. Leah figured it was just as well that the pool looked mostly finished, the naked women were obviously more of a distraction to the pair than a help.\n\n\"I assume someone asked about tentacle slugs, or worse, in this rush to hedonism?\" Marie asked. \n\n\"I made sure they had asked Thalia Anek before a single toe touched the wet,\" Henry said. \"The Anek say that the water here is too shallow and too fast for anything dangerous to survive. But they're now convinced we are demented. You see all of them watching?\"\n\nLeah looked up into the trees and grinned at the sight of dozens of Anek onlookers staring at the four humans in the water. Lower to the ground, a gang of juveniles was watching in between bouts of racing around in the branches.\n\n\"Come in, it's lovely!\" Sasha called, waving up to them. \n\n\"It does look tempting,\" Henry said. \n\n\"The pool, or our naked friends?\" \n\nHe looked down at pair; Noel lithe and ash-blonde, and Sasha, with long black hair, shorter, far more muscular, and just as attractive.\n\n\"I will only say yes.\" \n\n\"You old lecher,\" Marie laughed. \"Give Leah the baby. I see you will require close supervision.\" \n\nLeah followed them down and sat in the shallowest part of the pool so that Lily could hoot and splash in the cool water. Marie was right, the best way to expect anything was to expect nothing. Still, she couldn't help worrying about Finn and the rest of their captured friends. \n\nFinn and a few others were learning the French Drop from Kai while the rest of them meditated or slept. So far, the problem had been boredom, especially for the Ta'avi. \n\nThey looked up as the outer door was unlocked. Several guards armed with shotguns came into the dormitory. A few people stood up, but mostly they were ignored. Copeland appeared into the passage between the two domes and looked around until he caught Finn's eye as he strode over to the group of prisoners learning sleight-of-hand, a pair of guards on his heels. \n\n\"Captain Morgan, good morning,\" Copeland said. \"Commander Newsome, the force commander, would like a word.\" \n\n\"Save my seat,\" Finn said to Kai as he got up. \n\nOne of the guards motioned him away from the group and covered Finn with a shotgun while the other one frisked him roughly. His wrists were zip-tied in front of him and he was led outside into the bright sunlight. \n\nThere was a lot of activity today. People, wearing stolen colonial marine uniforms or the anachronistic clothing of the Drabs, were scurrying back and forth with crates and boxes. None of the colorful outfits of the Utopianists were visible but he thought he recognized a couple of faces under the ridiculous faux-straw hats. A number of standard shuttles were lined up down along the runway and a heavy cargo carrier, similar to a Ta'avi Pioneer ship, had just turned onto the taxiway. The large clamshell doors were opening, and Finn could see the boxy snout of a weapons carrier inside. Beyond that, anti-ship missile systems were already scattered across the outpost, launchers trained on the sky. ",
        "Outside of the same modular office as yesterday, Copeland freed Finn's hands and led him into the offices. He knocked once at an internal door and then opened it. The man inside was wearing a Royal Navy uniform and Finn immediately recognized the Brit that had appeared with Gavin when he'd been captured.\n\n\"Commander Newsome, Colonel Morgan,\" Copeland said. He stayed in the room, standing against the wall behind Finn. \n\n\"You're looking much better than the last time we met, Colonel Morgan,\" the Brit officer said, standing up.\n\n\"I understand I have you to thank for that,\" Finn said.\n\n\"Any thanks are entirely unnecessary,\" Newsome said. \"Had I known who you were, I would have sent professionals to escort you. You're being given everything you need?\" \n\n\"Except my ship and a clear sky.\" \n\n\"Yes, I'm afraid that's out of the question, Colonel. For now anyway. Would you please have a seat?\"\n\n\"Before we go any further, Commander, I am not a colonel. I'm a captain, the higher rank was an administrative courtesy to the Air Force during the Defense.\" \n\n\"When one is promoted, the reasoning behind it does not matter,\" Newsome said. \"Please sit.\" \n\nFinn sat in the indicated chair across the desk. \n\n\"I've just been reviewing your service history, colonel. You've had an impressive career so far.\" \n\nNewsome waited for Finn to respond but he kept his mouth shut.\n\nNewsome began to read Finn's service history, occasionally looking up to see if Finn was reacting to anything. Finn figured the SERE course wasn't included in that particular list, because this was laughably amateur in comparison. Finally, Newsome sat back with his fingers steepled. \n\n\"It's tragic that we are not on the same side colonel. Your service on Mother Terra, not to mention your valiant heroism during the Defense, places you into the pantheon of humanity's warrior-heroes. Why did you become a traitor?\" \n\nFinn looked at the man, not bothering to hide his scorn. \"I've helped open three new planets to human colonization and that makes me a traitor how, exactly?\"\n\nNewsome looked at him pityingly. \"Faith is an admirable trait, colonel. Do you really believe the nonsense about the Commonwealth?\" \n\n\"You're gonna need to be a lot more specific, Andy. There's so much nonsense these days.\"\n\n\"Your precious Commonwealth is a lie, colonel. You've given your loyalty to a myth.\" \n\n\"Then who made your ships?\" \n\n\"Obviously there are aliens with impressive technology,\" Newsome said, waving a hand. \"But how many are there, really? How many other races have you seen?\" \n\n\"Ta'avi, Elves and Gyr, like everyone else. But it doesn't matter, either one could have destroyed the planet. Instead they fought and died with us, knowing we were just buying time for humans to escape.\"\n\nNewsome look was so condescending that Finn began to think about punching him in the face.\n\n\"That's what they told you anyway.\"\n\nFinn's jaw clenched as he remembered the Gyr bodies bumping against his fighter, blown into space after their transport had been hulled by an enemy attack. Newsome cleared his throat, bringing Finn back to the present. The man took his silence for some kind agreement and kept talking. \n\n\"You see my point. The Resettlement Directorate is fighting for all humans, to seize our destiny again and take our rightful place among the stars.\"\n\n\"And they're going to sit back and let you do this?\" \n\n\"Exactly right. As we seize their lines of communication, it becomes more and more obvious that this imaginary Commonwealth is nothing more than a paper tiger!\" \n\nRealization dawned on Finn. \"That's why you're here, the Slingshot Gates.\" \n\n\"You have a good grasp of strategic reality; what you control, you can destroy.\" Newsome said approvingly, leaning back in his chair. \"We've controlled gates for a week now, and there's been no sign they've even noticed. This silence proves that we are correct and that it is time for the human race to claim our rightful place among the stars. You can be part of that destiny, colonel. Join us and claim your place in the pantheon of heroes!\" \n\nFinn wanted to laugh but the implications for the survival of humans was too grim. \"How can you not know that Xero'pah and Gyr both live in a entirely different time frame? Hold those gates for a few hundred years and I might be convinced.\" \n\n\"We are not just holding the gates,\" Newsome said. \"In addition to the Fleet ships we've reclaimed, we've also proven that we can destroy their ships.\"\n\nThe triumphant expression on his pasty face made Finn wonder if Copeland was fast enough to grab him before he could get across the desk to Newsome. Evidently Copeland had the same thought and Finn was aware of him moving to stand behind him.\n\n\"What did you murderous assholes do, Newsome?\" \n\n\"A Gyr ship ignored our warnings to not approach the Long Axis station gate three days ago. It was surprisingly easy to destroy.\" \n\n\"You killed innocent people,\" Finn said, his voice sounded quiet against the growing roar in his ears.\n\nNewsome held up a finger. \"Humans are people, colonel. We killed aliens. Just a few, to demonstrate human resolve to the rest.\" \n\n\"You ignorant fuck,\" Finn said, voice rising. \"And you think they won't avenge those murders on innocent humans? I hope you live long enough to see what you psychopaths have done to all of us.\" \n\nFinn felt Copeland's hand on his shoulder as the Brit held him in his chair. \n\n\"I thought you would make an intelligent choice,\" Newsome said. \"Is it your relations with those refugee Bullfrogs that poisoned you against your real family?\"\n\n\"Sir...\" Copeland said warningly but Finn barely heard his voice.\n\n\"Do be careful, Colonel, the frontier can be so dangerous,\" Newsome said, staring at him. \"Doubly so for traitors and their barbaric religious cults.\"\n\nFinn twisted, pulling his shoulder out of the tight grasp. He leapt across the desk, determined to get his hands around Newsome's throat. Copeland was faster, tripping him up to turn the move into a half sprawl across the desk. More men crashed into the office, drawn by the noise and Newsome's screams. Copeland had his forearm around Finn's throat, and used the other to twist Finn's arm behind his back. He was hauled to his feet and shoved outside. Finn could still hear Newsome screaming in the office and smiled slightly. \n\n\"Are you finished?\" Copeland asked in his ear, forearm tightening fractionally around his throat.\n\nFinn nodded, letting his body relax. After a moment, the iron-like forearm was removed from his throat. Finn rubbed his shoulder as Copeland took a quick step out of Finn's reach. \n\n\"Thanks for not dislocating it,\" Finn said, rubbing his shoulder. \n\n\"I should have torn it off and used it to beat some sense into you, you bloody stupid man!\" Copeland snapped. \"You three, get him back to the barracks, and be careful.\"\n\nThe three guards he motioned to carried the long staves instead of shotguns and wore the flat-brimmed hats of the NeoPuritans. One of them used the staff to shove Finn back toward the twin domes of the makeshift prison. Behind them, Copeland stalked back into the building behind him. Finn didn't pay any attention to the guards on the short walk. \n\nAnother SAM battery was rumbling out of a carrier, headed for the far side of the runway and there were several sonic booms from overhead. He looked up to see four more of the heavy shuttles darting through the clouds. \n\n\"Eyes on the ground,\" the guard snapped.\n\nFinn sighed. \"You again?\" \n\nThere was a flash of pain as the staff smacked him in the ear. He managed to stay on his feet but there were bright flashes in front of his eyes.\n\n\"I said, eyes on the ground!\" \n\n\"Careful there, Hezekiah,\" Finn said, stopping to rub his ear. \"Like the Good Lord says; karma be-ith a bitch.\"\n\nHis feet were kicked out from under him and as he fell, a boot slammed into his ribs.\n\n\"What was that, frog lover?\" \n\nThe two Drab guards at the barracks laughed as Finn pushed himself to his feet. \n\n\"See, that's how everyone knows you've got a little dick,\" Finn grated, forcing his grimace of pain into a grin. \"That and your diseased snatch of a mother telling everyone when she spreads...\" \n\nThe kid was immediately in his face, using the staff to bash him in the chest. Finn laughed as he took the chunk of wood out of the kid's hands, shoving it upwards to catch him in the bottom of the jaw. The kid's head snapped back, and he went down like a felled tree. \n\nFinn was already swinging the stave and caught the other guard in the ribs. As he turned to face the third one, a flash went off behind his eyes and he saw dirt. The sensation of being kicked was starting to become familiar. \n\n\"Hold off, don't kill him around the RD boys,\" someone said from above him. \"Wait until Sister Caroline has them out at the farm tomorrow.\" \n\nThere was more laughter as Finn was dragged up the stairs and shoved through the door. He thudded into the flimsy internal wall and slumped back to the floor, more yelling, familiar voices this time. He tried to get up but they were already picking him up and putting him on one of the bunks as he tried to tell them he was okay, that he had something important to tell them. \n\n\"What the unmerciful fuck!\" \n\nFinn opened his eyes as he struggled to sit up, fighting a wave of dizziness. He'd been lying in one of the bunks next to the entryway. In front of the doors, Yanna was already kneeling next to a crumpled figure on the floor. Finn saw long black hair as she was gently turned over. He'd only seen it braided back, while he'd been in the medbay, but he knew who it had to be. He gripped the edges of the cot as another wave of dizziness washed over him. He also had a pretty good idea why she was in here and the knowledge made him want to vomit. \n\n\"Coming through,\" someone said, holding a large medkit to his chest. He knelt down opposite Yanna, opening the kit. Maya whimpered a question and Yanna replied quietly.\n\n\"Lay down before she catches you sitting up,\" Kai said, sitting down on the bunk next to Finn. \n\nFinn let himself slump back down, closing his eyes. \"I did this.\" \n\nKai raised an eyebrow. \"Then who's been over here snoring all night? And who is that?\"\n\n\"Maya, that assistant of Owen's. She was in medical when I woke up. I goaded her hard, tried to push her into looking for the evidence that the Sparrow's Flame wasn't an accident. She must have got caught, or asked the wrong question, whichever.\" \n\nKai snorted. \"Calm yourself, Dr. Mesmer. You don't have the power to make people do something against their will. No matter how obnoxious you were, I doubt she was just trying to prove you wrong. Like it or not, people can get hurt without your help. It happens all the time.\"\n\nFinn opened an eye to look at him. \"Wow.\" \n\n\"Yeah, sounded a lot better in my head.\"\n\n\"Kai, the guards said they're moving us to a farm, out of sight of the RD goons.\" \n\n\"Was that you were discussing out front? Nice reversal with that tickle stick, up until you forgot to duck. Yeah, we knew about the farm, the crazy one called Sister Caroline was in here screaming at us while you were out charming our captors. We're being given the possibility for penance and salvation through slave labor.\"\n\n\"I wish I was surprised.\" \n\n\"It was impressive, the old bird was practically foaming at the mouth. She's got a real hard-on for converting the Ta'avi.\" \n\n\"Yes, thank you for that lovely image.\" \n\nKai waggled his eyebrows before his face turned serious. \"You know we've got to break out before they isolate us, otherwise it's game over.\"\n\n\"Yeah, I'm in.\" \n\n\"Without this baby seal routine of yours, I hope. Shit, I'd better go. Yanna just looked up and saw me here.\" \n\nAfter a little while, they moved Maya to a cot at the far end of the dormitory. Yanna was still with her and he could just hear the murmurs of their voices. Several times, Maya whimpered quietly. It was loud in the darkness as Finn laid there, trying not to hear. \n\n\"Finn.\" \n\nHe opened his eyes, surprised that he'd fallen asleep. Yanna was crouched beside his bunk. \n\n\"You know who that is?\" \n\nHe nodded. \n\n\"She wants to talk to you.\" \n\nHe sighed, sitting up. \"Figured.\" \n\n\"What's between you two?\" \n\n\"She was the Drab spy in the Admin. I pushed her to go look for evidence that the Sparrow wasn't an accident.\"\n\n\"What? That was deliberate?\" \n\n\"Yes. How bad is she?\" \n\n\"Broken nose, little bits of scalp torn free, concussion, full set of bruises, cut up mouth, but her body will heal. Her spirit...\" Yanna shrugged. \"She'll need a shaman, or whatever it is that Humans use. Right now, she's asking for you.\" \n\nHe rubbed his face and sighed. \n\n\"Finn, you need to talk to her.\"\n\n\"I know.\"\n\nYanna steadied him as he sat up. \"How's the dizziness?\" \n\n\"Not so bad.\" \n\nShe put her arm around his, walking him slowly toward the bunks someone had hung sheets from to give the beaten woman as much privacy as they could. Maya was laying on a cot, the bandages so white that they almost glowed. Both of her eyes were black and there was a splint across her nose. Her lips were cut up and there was a long scrape down the side of her face. Yanna pointed to the cot next to her and Finn sat carefully down on the edge of it. Maya opened her eyes and slowly turned her head to look at him. \n\n\"You were right,\" she whispered. \"They planned the whole thing. I'm sorry I didn't believe you.\" \n\n\"Don't apologize. I was being a huge asshole before. I shouldn't have yelled at you.\" \n\n\"No, I'm glad,\" she said, voice slurred by the damage to her mouth and the drugs. \"I found that cable. I went and asked Gavin about it.\" \n\n\"And he did this?\" \n\nShe closed her eyes for a moment. \"No, he just watched while Sister Caroline set the women on me.\" \n\nFinn took a deep breath, concentrating on not throwing up. \"Maya, I am so sorry. I shouldn't have pushed you like that.\" \n\nShe managed to smile at him, making Finn want to crawl into a hole. \"I said it's okay, it's always better to know the truth. Thank you for making me mad enough to go look for myself. I've been so stupid this whole time.\" \n\n\"Please don't thank me.\" \n\n\"Just stop being so mean to people, okay?\" \n\n\"Never again,\" he agreed, voice thick.\n\n\"I'm really sleepy,\" she murmured. \"But I wanted you to know.\" \n\nFinn nodded, though her eyes had already closed. Yanna helped him up and they shuffled back toward his bunk. She sat down beside him, staring at him with intense dark eyes. \n\n\"Tell me what happened.\" \n\n\"Someone put a cable across the runway to destroy the Sparrow's Flame. Then they hid all of the evidence and killed the witness.\" \n\n\"That was the damaged man they said committed suicide?\" \n\n\"I saw him that night, his hands were torn apart. No way he could hold a gun.\" \n\nYanna sighed. \"Why do they hate us so much?\"\n\nFinn looked away. \"I don't think they cared who was on the ship, I think it was just a distraction for the takeover.\" \n\nTears spilled from her eyes, making shining paths over her cheeks. \"All those lives, just for a distraction?\"\n\n\"I'm sorry.\"\n\n\"No, you're foolish, thinking you can sing this rage alone,\" she whispered. \"How are you honoring their memory, getting the shit kicked out of you every chance you get?\"\n\n\"It's not intentional,\" he whispered back. \"I just get so angry...\"\n\n\"Then swallow it,\" she hissed, suddenly fierce. \"Even if it chokes you, swallow it. Your family needs you, and I cannot bear to lose anyone else.\"\n\n\"I hear my wise sister and will obey, as best as I can.\" \n\nShe wiped the tears from her face. \"None of that 'as best I can' bullshit, foolish little brother. And I want you to take a QuickSleep. You need the rest.\" \n\n\"C'mon, Yanna.\" \n\nShe glared at him. \"We both know you're going lay there, plotting and stewing all night. We need you with a clear head and at your best. Scouts, Pioneers, all of us.\" \n\nHe sighed but held out his hand. Instead of a pill, Yanna handed him a small plastic pouch. \n\nFinn made a face. \"Liquid?\" \n\n\"Yes, so you don't hide a pill under your tongue. Drink it.\" \n\n\"You have a devious mind.\" He swallowed the syrup and made a face. \"Ugh, stuff tastes like sweaty ass.\" \n\n\"I won't ask how you know. Lay back.\" \n\nHe did as he was told, and she put the pillow behind his head. \n\n\"And when are you going to sleep?\"\n\n\"I'll be fine with a nap.\"\n\nHe put his hand over hers. \"Seriously. Everyone needs you way more than me.\"\n\nShe gave him a look. \"Then stop getting the shit beaten out of you. It'll cut my workload in half.\"\n\nDespite her acerbic tone, Yanna bent down to kiss his forehead. Finn closed his eyes and was asleep when Yanna checked on him a few minutes later.\n\nLeah was sitting with Marie and Henry, playing poker. Lily sat on Leah's lap, watching each of their faces as they called and raised, waiting for her favorite part of this new game. When the winner took the pot, the baby began to get excited, babbling and gesturing. Finally, one would deal the cards, sliding them across the table. Lily was delighted each time the cards slid across the table, hooting, and bouncing on Leah's lap. \n\n\"It is late. We are guilty of contributing to the delinquency of a minor,\" Henry said, studying his cards. \n\n\"The girl is already the youngest interplanetary fugitive ever,\" Leah said, holding her cards so that Lily could look at them as well. \"Compared to that, what's a little poker and a cigar? We'll get her a miniature one of course.\" \n\nHenry gave her a severe look over his cards. \"Do not give her a cigar. She creates enough atrocious odors as it is.\"\n\n\"Sorry about the cigar, Miss Stinkpot,\" Leah said, throwing a card back. \"Pere Henry brings up a good point.\"\n\nThey froze as a rapid chirping began in Bunjil's nearby cockpit. A second later they heard it from Atalanta on the other side. Henry dropped his cards and jumped up the ladder. He disappeared inside and reappeared with his tablet, jumping back down as he opened the app on his tablet to link into the SSB receiver aboard the shuttle. \n\n\"If that's the neighbors, I promise we'll keep it down,\" Sasha said, coming out of the darkness, pulling her t-shirt on. \n\nLily gabbled and waved her arms at Sasha, who made a silly face in return.\n\n\"It's a coded broadcast,\" Henry said, putting the tablet in the middle of the table.\n\nSensing their excitement, Lily made grabbing motions at the tablet, hooting and bouncing in Leah's lap again. \n\n\"Shh, they'll think we're down here having a party,\" Leah whispered and Lily took a large breath and clapped her hands over her mouth. \n\nLeah kissed her on the head, trying not to laugh. The tablet announced it had synchronized with the incoming signal. Then it opened a channel for voice transmission. \n\n\"Is that the Neil Armstrong School for Wayward Youth down there?\" a woman asked.\n\nThe scouts looked at each other in surprise.\n\n\"Depends on if you're from the pizza place, or the marshal's office,\" Sasha finally replied. \n\nThere was a chuckle. \"This is the Commonwealth ship Athena. Wanted to make a courtesy call to let you know that I am downbound at your location now.\" \n\n\"Athena, be advised, there's no, repeat no runway at this transmitter location,\" Leah said quickly.\n\n\"You're adorable, captain. See you in a few.\" \n\nThe four adults looked at each other again, while Lily tried to reach the tablet. \n\n\"I'm not as happy as I would be if that was Colonial Fleet overhead,\" Henry said.\n\n\"Athena is a human goddess at least,\" said Sasha.\n\n\"And that can't be a coincidence,\" Leah said. \n\n\"We'll know soon,\" Marie said. \"Did you notice that Athena said they were downbound at our location. Are they actually overhead?\" \n\n\"Yeah, I'd better go get those pervs dressed,\" Sasha said, disappearing back into the darkness.\n\nA minute later they noticed a strange pulsing hum getting louder. Henry was the first to see the ship, pointing up to the small patch of blackness against the stars. It grew larger as it sank toward them, resolving itself into a long dagger shape that widened into a delta wing. It touched down just below them on the gravel spit and the thrumming sound faded away. A few minutes later, a hatch opened at the aft end and several people emerged.",
        "\"Let's go see what's going on,\" Marie said to Henry and Leah got up with them.\n\n\"You're bringing the baby?\" Henry asked Leah.\n\nShe raised an eyebrow. \"It's safer than leaving her here alone.\"\n\n\"You could st...\" Henry coughed as Marie caught him in the ribs with an elbow.\n\n\"You okay?\" Leah asked innocently. \n\n\"I get a certain pain when I'm about to show my ass in public.\"\n\n\"That must come in handy,\" Leah said and Marie giggled. \n\nThere were five people approaching, one of them had the tall slender shape of a Xero'pah. As they got closer, they were able to make out faces in the light of the double moons.\n\n\"Oh, look! It is Theophile!\" Noel surprised everyone by running to grab a black-haired man in a tight hug. \n\nHe was startled but hugged her back. After a second look, he laughed as he recognized her. Leah was the next to notice a familiar face. \n\n\"Rachel Szercherin?\"\n\nThe tall woman with the black hair and blue eyes of the Garragh, one of Earth's sister races, smiled at her. \"Captain Leah Jones, I'm glad to see you. And it's good to see that the Scouts finally listened, I told them you were too good for transports.\" \n\n\"Thanks...what are you doing here?\"\n\nThe woman smiled and nodded toward the black-haired twins. \"The boss says come and help, so here we are. Who's your short friend there?\" \n\nLeah smiled at the baby. \"This is Lily. We're looking after her until we can get in touch with her family. I'm sorry, I don't want to be rude, but how many more ships are in orbit? My partner and a whole bunch of other people didn't manage to escape and I'm really worried about them.\" \n\n\"It's just us,\" Rachel said. \"Your partner and all the rest of them looked okay from the recon pics, they're being held together in one of those big hab dormitories.\" \n\nLeah's temper flared. \"Then tell there's more to this than one ship and a few people! This isn't some half-assed Echo training fun-run, we need dropships full of Colonial Marines because there's a hell of a lot more going on here than just our POWs!\" \n\nShe realized everyone was looking at her, even Lily was looking up at Leah with a look of worry on her face. Leah forced down her anger and gave the girl a reassuring hug.\n\n\"I apologize,\" she said to the rest of them. \"It's been...\" \n\n\"Captain?\" the one Rachel had called \"the Boss\" interrupted. \"Let me be the one to apologize. Can we find a place to talk?\" \n\n\"Yes, we've got chairs in camp,\" Henry said, not looking terribly happy himself. He turned and walked back up the slope toward their camp without waiting for an answer. As they walked back up the slope, Leah introduced Marie to Rachel. \n\n\"You're a command pilot?\" Marie asked \"How well do you know Navigator systems? The three Navvis in the scout ships have started having some very strange behaviors two days ago.\" \n\n\"Athena, do we have anything to do with these Scouts acting strangely?\" Rachel asked, speaking into a mic on her gear harness. \n\n\"Uhm, I didn't think so, but maybe?\" the voice from the earlier radio call answered. \"I'm calling Kyriake now to look at the logs.\" \n\n\"Hey Rachel. Yeah, I'm headed to the flight deck,\" another woman said a moment later.\n\n\"Thank you Kyriake, keep me in the loop,\" Rachel answered. \"But there's my answer to why none of you was responding via datalink.\" \n\nMore chairs were dragged out to the table where they'd been playing poker and the newcomers sat down with them.\n\n\"Let's do introductions first. My name is Theo Cosineau, I'm part of a Xero'pah unit run by someone called Colonel Teydora. Lieutenant Nysander is the Colonel's personal representative on our team. Behind me is Emma Cosineau, my sister and Warden. Rachel Szercherin is our chief pilot and the captain of the Athena. There are a couple more of us aboard but we didn't want to overwhelm anyone. \n\n\"First, the most important thing; your people. I know everything looks half-assed at the moment, but that's only because most of our operatives already dropped into the Erewhon outpost. We'll be hearing from them fairly soon.\"\n\n\"And are there more ships on the way?\" Henry asked. \n\n\"Think of us as the advance team. But, with luck, we'll have this wrapped up before anyone else arrives.\" \n\n\"I'm sorry, but one ship?\" Marie asked. \"Against how many?\" \n\n\"It looks like a smallish brigade,\" Rachel said. \"Intel estimates about twenty-five hundred troops on the ground. They're heavily reinforced with surface-to-orbit missile launchers and light armor.\"\n\n\"And you don't see that as a problem?\" Leah snapped, beginning to lose her temper again. \n\nTheo answered her instead. \"Captain, I've been in your shoes and I won't bullshit you here. It's a lot of people on the ground but I wouldn't risk any of my crew if we weren't sure of the odds. They were doing this kind of work since before Revelation Day and they're very good.\"\n\nLeah felt her anger dissolving as he looked at her, face open and earnest. It was weird, but she began to understand that she could trust these people. \n\n\"When you say there is more going on here, what are you referring to?\" Nysander asked \n\n\"There were operatives from Section Tango here,\" Henry said. \"Before they succumbed to a staph infection, they made contact with an indigenous race that call themselves the Anek. They are fully sentient but were not reported on any of Erewhon's pre-settlement surveys.\" \n\nLeah saw that they'd surprised Theo and his crew. \"This isn't the first time,\" she added. \"Kai Westergaard came from Saint Johns where the same thing happened.\" \n\n\"And those are just the two instances we're aware of,\" Sasha said. \"Whatever is behind this, it goes up into the senior ranks of Fleet.\"\n\n\"Have you managed any sort of communication with the natives here?\" Theo asked.\n\n\"Finn Morgan, my partner, and I encountered them as well,\" Leah said. \"She spoke good English. When the first team to encounter them was dying, a man named Bogdanovich showed them how to use our tablets and gifted them the ones belonging to that mapping team. They seem to have used the tablet's teaching functions to learn English, Spanish, and French.\" \n\n\"...wow,\" Theo finally said.\n\n\"One of their large settlements is in the trees above the waterfalls,\" Marie told them. \"They are not at all nocturnal, but they'll be back when the sun is up.\"\n\nTheo's twin chuckled. \"I knew there had to be more to all of this.\" \n\n\"Your team's ready to go, Doc?\"\n\n\"Yeah, boss.\"\n\n\"Then I'll see you on the other side.\" \n\nThe medic made a hand gesture at the other two troopers on the entry team. They moved around the foundation pad of the maintenance building and began making their way to the make-shift prison. Even if anyone had been alert enough to notice them, all they would have seen were blurry shapes the eye couldn't quite focus on. \n\n\"You sure you don't want me to do the Lt. Uhura naked fan-dance?\" one of them whispered.\n\n\"Ayr, sweetie, let's try and keep work and playtime separated,\" the medic whispered back with a grin.\n\nThey crept closer until they were in the shadow of one of the new modular buildings. One of the team raised a compact submachine gun and sighted carefully. There was a quiet popping sound and then a second. One guard, probably asleep, never moved. The other jumped, as if he'd been bitten by an insect, before slumping on his side and twitching once or twice. They headed for the prison, pausing long enough for the medic to check that the guards were still breathing.\n\nIan, the third member of the team, looked at the door for a moment. There were several locks in addition to the usual sensors. Shrugging slightly, he used a molecular saw to cut most of the door away. They grabbed the slab of plastisteel before it could fall and laid it on the ground. The first thing they saw was a group of prisoners waiting in ambush. \n\n\"Ta'avi apata Ta'avi,\" the medic said quietly, using her race's long-voice ability to place sub-sonic emphasis on the statement. \n\nInside, the prisoners relaxed slightly. One of them asked who they were, using his long-voice alone. The frequency was too low for human ears to hear, although Ian, the human member of the team, felt a slight vibration in his chest. Ayr replied that they were a Fleet SpecOps team. It wasn't true, but it was enough for now. The trio slipped inside the door and were immediately embraced by the Ta'avi prisoners.\n\n\"Any wounded?\" Deidre asked. \n\nShe was taken to Yanna and they spoke quietly. \n\n\"Mari, we're in,\" the Deidre reported over the com link a minute later. \"I've got non-ambulatory casualties, we're going to hold here.\" \n\n\"Understood, Deirdre. We'll keep everyone away from the door. Break. The rest of you hooligans; let's wake everyone up and ruin their day. Remember orders, minimal casualties, maximum intimidation.\"\n\nTwo of the operatives had worked their way on top of the curved roof of the large maintenance garage. The spotter studied the area with GalTech binoculars while the sniper made final adjustments to her rifle. \n\n\"Okay, Jonesy, ready to dance,\" she said, settling the butt against her shoulder. \n\n\"Here we go. First contact, runway, utiliquad, three riders.\"\n\n\"Got it. Wotcha, bitches.\" \n\nThere was a muted thump, a loud bang and shower of sparks. There were some panicked shouts and then silence. \n\n\"Nice shot, Betsy. Three Drabs are assholes-and-elbows back the way they came. Nothing else active yet.\"\n\n\"Maybe they're sleepy,\" the sniper said, moving her crosshairs to one of the mobile missile launchers. \"Time to rise and shine, you fucks.\" \n\nHer spotter watched as a large chunk of a missile rack was converted to sparks and high-speed fragments. \"Wind is picking up, down two, left three.\"\n\nThe rifle thudded again and across the valley there was a muted clang as a wide silver disk appeared just beneath the sensor array. There was a flash of red light as someone threw open the hatch of the launcher and they watched the crew bailing out. A few curious faces appeared from the surrounding positions, but there wasn't much of a response.\n\n\"Maybe the propane storage?\" the spotter suggested. \n\n\"It'll wake 'em up for sure,\" she said, shifting her aim to the new target.\n\nAcross the outpost, one of the team's engineers, listened as the occupants of the modular building threw themselves against the heavy doors, trying to overcome the welding putty his team had tucked around all the door frames.\n\n\"That's why a cargo box is a shitty choice for a barracks,\" he said to his assistant. \n\n\"Looks like they're getting some help,\" she said as a few black-clad RD soldiers arrived to investigate the noise. \n\n\"Now for the fun part,\" he said, lifting his submachine gun. \n\nThe soldiers never heard the quiet pops. Half-awake and confused, they didn't even notice they were under attack until they were bouncing and writhing on the ground, nervous systems temporarily hijacked by the electro-stun darts embedded in their skin. \n\n\"Yeah, that's way more fun,\" she said. \"Let's go find some more to shoot.\"\n\n\"Commander! We're under attack.\"\n\nNewsome sat up, rubbing his eyes. \"Sound the alarm and then set off the first two denial charges in the habs. That will give them something to think about. \n\nThe orderly disappeared and he began to pull on his boots. There were footsteps outside the door and he looked up. \n\n\"Copeland, what's happening?\" \n\n\"Not sure who it is,\" the master sergeant said, as calm as ever. \"There's been gunfire and a few explosions.\"\n\n\"I ordered two domes destroyed,\" Newsome said, standing up. \n\n\"Yes sir, I heard. You're aware that those habs are occupied by civilians?\"\n\n\"Of course, I am,\" Newsome snapped. \"Collateral damage is just the fate of civilians in war time.\" \n\n\"Thank you for that,\" Copeland said, stepping inside the tiny room. Newsome looked up, confused. He had just enough time to realize that the man was swinging something at him.\n\nCopeland pulled his tomahawk from the man's skull. The advanced matrerials in the blade had cut cleanly into the skull and released just as easily. Copeland wiped the blade on the man's shirt. \n\n\"And execution is the just fate of a traitor in war time,\" he said to himself. \n\nCopeland headed for the operations office next. The useless detonators were there and while he'd disconnected the system yesterday, he wanted to deal with anyone else that thought murdering civilians was an acceptable tactic.\n\nThe Mongoose LAV sat in a camouflaged position, sited to provide supporting fire to both the outpost and the farm complex when needed. They had seen the results of the rounds hitting the equipment, including the spectacular explosion of a propane tank, but they could not find where the shooting was coming from. \n\nThe commander was standing in his hatch, using night vision binos to back up the millimeter band radar and IR sensors on the light tank. There was a bright flash and sparks from the bow and he dropped into the hull, slamming the hatch closed. \n\n\"Where the hell did that come from?\" \n\n\"I can't even tell you what it was, sir. Radar didn't track the bullet, IR didn't see the muzzle flash.\" \n\nHe chewed his lip, thinking fast. His mission was fire support, abandoning this position would put that in doubt. On the other hand, someone had obviously noticed them and there wouldn't be any support at all if the LAV was knocked out. \n\n\"Driver, when I give the order, I want you to pop smoke and reverse us out of here. We'll withdraw to that low spot I showed you earlier.\"\n\nThe driver's response was cut off by another ringing impact on the hull. The crew was showered with bits of paint as a deep indentation appeared in the turret.\n\n\"Go, go, go!\" the commander yelled, and the driver revved the engine high before dumping the torque into reverse gear. \n\nThe large, wheeled vehicle lurched and began to climb out of the revetment but had only gone a few meters when the hull shook again. The dim red lights in the crew compartment went out and there was the smell of burning wires.\n\n\"Fire in the engine compartment!\" the loader yelled. \n\nThe commander spun in his seat, fumbling for the fire suppression handles, but she had already pulled the handles. The yellow emergency lights went on and they sat there quietly for a few seconds, waiting for the next impact. Instead, there were several thumps they would have missed if it hadn't been totally silent. They all cringed, waiting for what they assumed to be satchel charges. Nothing exploded, leaving them sitting there in silence. \n\n\"Status?\" the commander asked. \n\n\"All systems are offline,\" the loader said. \n\n\"No response to controls,\" the driver added. \n\n\"Okay, let's bail out of here before we're hit again,\" the commander said.\n\nHe pushed against his hatch, but it didn't budge. The gunner tried opening the crew hatch with the same result. The driver's escape hatch was jammed shut as well. \n\n\"We could try going through the engine compartment,\" the gunner said. \"But without knowing what damage is back there, it's risky as hell, sergeant. At the very least, we'll be letting toxic smoke into the compartment.\" \n\nHe reached out and tried one of the manual vents in the turret, breaking a sigh of relief as it squeaked open. They wouldn't suffocate at least.\n\n\"We'll save that for a last resort,\" he said. \"Any other ideas?\" \n\nIt was quiet. \n\n\"Yeah, me either.\" \n\n\"You think they'll let us surrender?\" the driver asked. \n\nThe sergeant sighed. \"I think they've already surrendered us. I just hope someone remembers that we're trapped in here.\" \n\nFinn opened his eyes and realized he was back in the medical dome. Other than someone dozing at the desk, he was alone. He didn't remember how, or why, he'd been brought here. His memory was blank since Yanna had given him the stuff...Finn glanced at a clock. Since she'd given it to him eighteen hours ago. Finn got up, relieved to see he wasn't attached to anything, and headed for the door. The medtech sleeping at the desk was a Ta'avi woman he didn't recognize. She opened her eyes and sat up as he approached. \n\n\"Good evening Finn, my name is Deidre. I was adopted into Flamebridge Clan but I don't think we've met before.\"\n\n\"Oh. Can you tell me what's going on?\"\n\n\"Sure; I'm the medtech for the Section Team that jumped in yesterday. Our mission was to return the outpost to its rightful leadership and render aid to whatever Fleet elements that were planetside.\"\n\n\"How am I the only person in here then?\" \n\nShe got up and rolled her head back and forth before answering; \"Because there aren't any wounded. Most of the Resettlement Directorate has surrendered, but there's still a few of them with the NeoPuritans. They've retreated to the farm compounds and have been digging in from the sounds of it.\" \n\n\"All without casualties.\" \n\n\"There's not a lot of wounded in this kind of op.\" She looked at him and then laughed. \"Relax, I meant that we're using stun rounds and soft engagement tactics.\"\n\n\"So I can go outside.\" \n\n\"Yeah, come on. I think the rain's done for the night.\" \n\nHe followed her outside into the darkness. Across the valley, there were bright floodlights trained on the main farm compound. No one was really moving around the outpost, but it sounded like a hell of a party was going on nearby. He stretched his shoulders and looked up at the sky. Through gaps in the clouds, he could see stars and one of Erewhon's moons. Finn took several huge breaths and looked around again. Something was in his eyes and he wiped at them several times, unaware that he was weeping for several minutes. He took another long breath and went to where Deirdre was sitting on the steps. \n\n\"What now?\" he asked. \n\n\"I can offer you a ride back to your ship.\"\n\n\"She's here?\" \n\n\"Everyone is back. The quad is around the corner here, come on.\" \n\nTwenty minutes later, Finn was walking through the darkness, counting the Conestogas, in order to follow the directions he'd been given to find Atalanta. The bright lights pointed at the farm compound provided a little bit of illumination, enough to keep from tripping over anything at least. Finally, he found Addie sitting between two massive Conestogas. She didn't answer and his heart leapt into his throat, terrified that something else had happened, that the Drabs had somehow lobotomized his friend after all. \n\nThen he saw the small yellow 'stand-by' light next to the hatch and felt a flood of relief. It dimmed and brightened in a pattern that Finn knew all too well, internal system maintenance. He climbed aboard, smiling at the thought of surprising her. And Leah with any luck. He moved quietly but stopped suddenly, hearing someone having enthusiastic sex. Several people in fact. \n\nAfter a moment, he quietly backed out and went down the hatch ladder as quietly as he could. He'd get a blanket and lay out under the stars. Tomorrow, he wouldn't say anything about coming aboard. He couldn't blame her, after the PJs had pulled him out of that Berber prison, he'd spent most of his mandatory thirty-day stand down in a hazily recollected, but epic, carnival of drunken partying She was young, they all were, and celebrating their freedom the best way they knew how. \n\nThere was a heavy rumble in the distance, and he changed course for whatever Conestoga was parked next to Addie. Staying away for a while was one thing, risking drowning in one of Erewhon's thunderstorms was something else entirely. Someone would be awake on the Conestoga, he could probably get some chai and bullshit for a while.\n\nDespite the aching in his heart, and the urge to go back and do something, this was probably for the best in the long run. Leah was awfully young, probably too young for him, if he was honest. He was burnt-out and had seen too much while she was just starting her career... \n\n\"What news from the front, valiant partisan?\" a voice asked from the darkness. ",
        "Startled didn't begin to describe Finn's reaction. He leapt back as his mouth went dry and his heart thundered in his ears. When he was sure that his heart was going to keep beating, Finn peered into the shadows, clenching his fists to keep his hands from trembling. \n\n\"Leah?\" \n\nThere was a barely audible beep as a tiny harness locater light went on. It was about the same brightness as an elderly firefly, but he could just make her out under the Connie's wing, leaning against the huge landing gear tire. \n\n\"Did you just pee yourself a little?\" she asked, laughter in her voice. \"Because you kinda squeaked there. I think you probably peed yourself a little.\"\n\n\"Leah.\" \n\nThen she had her arms around him, her cheek pressed to his. After looking over his shoulder at the Scout, he stepped back to get a better look at her. \n\n\"It's really you.\" \n\nHer smile faded into a look of worry. \"Are you okay? Dammit, what was I thinking, Yanna said you might have a concussion.\" \n\nFinn rubbed his face. \"Uhm, maybe? You're up...\" he gestured vaguely behind him. \"Just now, you were...huh.\" \n\n\"She's going to kill me,\" Leah said, putting her hand on his cheek. \"I didn't mean to scare you that badly.\"\n\n\"No, I'm fine. You were...\" \n\nLeah raised her eyebrows. \"I was...?\" \n\nFinn went with the only question that made any sense; \"Then who is fucking in my bed!\"\n\nIt was Leah's turn to be surprised. \"I don't think anyone is. Was Sasha still awake?\" \n\nHe stared at her. \"How would I know?\" \n\nThe double moon shone through another gap in the clouds for a few seconds and Finn noticed all the tiny differences between that Scout ship and his own. He looked back at her and sighed.\n\n\"That's not Addie,\" Finn said, gesturing at the Scout.\n\n\"No, that's Bunjil. Addie is on the far side of 666 here.\" \n\n\"I'm so very glad to see you,\" he mumbled, putting his face in her hair. \n\n\"Is that Finn?\" Sasha called from the hatchway behind them. \"Is he okay?\" \n\n\"He's lost, so I'm taking him to bed,\" Leah said. \n\nSasha laughed as Leah guided him to proper ship. Once he'd climbed inside, Finn finally began to feel like he was finally free. \n\n\"Did you think I was in your ship, having sex with someone else?\" Leah asked quietly, letting the fabric clunk back onto its magnets again. \n\n\"What's wrong with Addie?\" he asked, half falling into in his pilot's seat. \n\n\"She's fine. There was a logic hiccup and all three of them are linked and recalibrating. Answer the question, sir.\" \n\nHe bent over and untied his boots to avoid looking at her. \"Yes, I thought you were in our ship having sex with someone.\" \n\n\"And you were sneaking away?\" \n\n\"Besides being none of my business, it seemed rude to interrupt,\" he said, pulling the boots off and leaning back with a sigh.\n\n\"Then what?\" \n\nHe shrugged. \"Obviously, I'm able to work with someone and not have sex. I would have backed off, like I said I would. Eventually you'd see me getting wounded while doing something very heroic. Then you'd be sorry.\" \n\nShe swung her leg over his and sat down in his lap, facing him. \"Uh-huh, that would certainly teach me a thing or two.\"\n\n\"I'm grateful that wasn't you in there having sex with...whoever. Everyone, maybe.\" \n\nShe didn't answer, just looked at him. Her eyes on him made Finn uncomfortable. \n\n\"Do anything interesting the last few days? I mostly laid around.\" \n\n\"I had several conversations with Henry and Marie, figuring out how I'm going to explain how I feel about this thing between us. Henry said to use simple words and big pictures.\"\n\n\"There's pictures?\"\n\n\"Hush. I had my first real sexual experience when I was sixteen. I had a huge crush on a cadet a year ahead of me. She was beautiful and it was an amazing time. I didn't get with a guy until a year later, give or take. It was also amazing, in a different way, but I liked it just as much. Since then I've had sex with men and women, singly and in groups and I don't regret any of it. They are close friends and we were taught to reinforce friendships a lot differently than most people.\" \n\n\"Henry mentioned that, you don't need to...\" \n\n\"In all that time, I can't think of a single person who has ever looked at me the way do, and I've never felt this way about anyone else. It's like you've shown me the ocean after I've been playing in a kiddie pool my whole life. I want to explore that with you, as my lover. I don't want just another fuck-buddy. Does that make sense?\" \n\nFinn nodded and she hugged him close. \"I have been so scared for you, I was sure they would kill you. As soon as we landed, I went looking for you. That's when I met your sister Yanna.\" \n\n\"Ah. Enough said, really.\" \n\nShe chuckled. \"Since she was keeping you out for the duration, I volunteered to fly out and ferry 666 back from where the Pioneers were hiding out. I just landed ninety minutes ago.\" \n\n\"Then that's how I got lost, I was counting them to find Addie.\" \n\nShe turned her head and kissed along his jawline to his ear. \n\n\"Remember when I promised to fuck your doors off?\" she whispered, giving him goosebumps. \"Because it's a good thing you got all that rest.\" \n\nAfter, they stayed wrapped around each other in the dark. \n\n\"What did the Anek make of all this?\" Finn asked drowsily. \n\n\"Confused and astounded mostly. The captain of the Athena is some kind of psi Talent and can talk to them in their headspace perfectly, according to Lakshmi.\"\n\n\"She's okay?\" \n\n\"Why wouldn't she be? She's in her own backyard,\" Leah said. \"She's not surprised you were too clumsy to hold on when we took off.\" \n\nHe laughed once. \"I'll never live that down.\" \n\n\"Addie was confused and angry about leaving you behind, by the way. She's going to want to know why you used the override.\"\n\n\"I'll talk to her. How is Lily?\" \n\n\"With Henry and Marie tonight. She started yelling when she saw where we were. I think she was looking for you.\" \n\n\"Probably wondering why you dragged her back here.\"\n\nShe chuckled. \"No, I'm pretty sure she was looking for her Finn.\"\n\n\"What's next?\" he asked, running his hand over the muscles in her back. \n\n\"I don't know yet. Theo Cosineau, that's the Athena's captain, is having an All-Hands meeting tomorrow. I guess we'll find out then.\" \n\n\"This is all so anti-climactic,\" Finn said.\n\n\"Oh, that wasn't climactic enough for you?\" she said, pulling them together. \"Let's see what we can do about that.\" \n\n\"How early is this All-Hands meeting?\" \n\n\"What time is this All-Hands meeting?\" \n\n\"There's plenty of time,\" Leah whispered in his ear as she ran her hand down over his chest and stomach. \n\nAddie was still in repair mode when Finn opened his eyes. He carefully disentangled himself from Leah and silently got clothes on. He hopped down from the hatch, checking the sky to make sure he hadn't missed the Greeting. \n\nHe stopped and sniffed the air. Someone was making coffee. Finally, he noticed Kai and someone else underneath the wing of the Conestoga next to Atalanta. Kai had a French press on top of the main gear tire and had just poured boiling water into it. Finn made his way under the massive wing as well, practically wading through the waist high ground fog. \n\n\"Coffee?\" Kai called. \n\n\"I'd be grateful,\" Finn said, walking over. \"I really hope you didn't steal that from that scary Limey bastard.\" \n\n\"And if I offered to share?\" the other figure said, turning to face him. \n\n\"Mr. Copeland.\" \n\nThe British master sergeant smiled slightly. \"Mr. Morgan, good morning. You look well rested.\" \n\n\"And indecently satiated,\" Kai said, handing Finn a steaming thermal mug. \"While we've been up all night interviewing the RD troops.\" \n\n\"You weren't Resettlement Directorate?\" Finn asked Copeland, after a sip of coffee. \n\n\"I was recruited by the RD on Hub, the same as the others,\" Copeland said. \"They were quite impressed with my service history. What it doesn't show is that I was born at Arclight Northern, the Project Center for the UK.\" \n\n\"So, the whole 'you saved my guys' thing was bullshit?\" \n\nCopeland's eyes hardened. \"That's not something would lie about. I enlisted in the British Army when I was nineteen. The life suits me, and the Project needed people with close ties to the military. Fleet Intel is worried about factionalism on Hub and I was in the best position to be recruited.\" \n\n\"He removed most of Newsome's head with some kind of crazy axe,\" Kai said, obviously impressed.\n\nCopeland sat down. \"It was not my first choice, but he had wired explosives in most of the Utopianist habitats and was ordering them detonated during the rescue operation. I had already disconnected everything I knew about, but I couldn't be sure I'd got them all.\"\n\nFinn nodded. \"I think I'm beyond surprise at this point.\"\n\n\"Good, because I'm worried about you,\" Kai said, emptying out the grounds into a plastic box. \n\n\"What's that supposed to mean?\" \n\n\"One of my roles, back on Ear...back home, was working with recovered POWs,\" Copeland said. \n\n\"I don't like where this is going,\" Finn said. \n\n\"Captain, would you do me the favor of listening for a few minutes?\" Copeland asked.\n\nFinn set the coffee down on the top of the tire, glaring at Copeland. \"Let's cut the shit here and save a few minutes. You're going to tell me that I've got some sort PTSD left over from the ancient history in the Rub al Kali, that I should be doing some sort of Project rehab bullshit on Hub, that it would be best if I give up Addie until I'm 'better', whatever the hell that means.\" \n\n\"That's not...\" Kai started to say before Finn interrupted him. \n\n\"And that'll work out just fine for Senior Captain Westergaard here,\" Finn spat. \"He'll be happy to take my spot aboard Addie, not to mention taking my place in bed with Leah.\" \n\n\"That is such bullshit,\" Kai said in a low angry voice. \n\n\"Is it?\" Finn asked. \"I saw you trying to rekindle things with her when we came in, and she told me you were her first and how much fun it was.\" \n\n\"What you saw was...\"\n\n\"Shut up,\" Finn growled. \"Out of curiosity, how much of this is your opportunism, and how much of this is fucking Vanguard cherry picking assignments for its favorites?\"\n\n\"I'm going to walk away,\" Kai said, standing up. \"Otherwise, I'm going to end beating the shit out of him.\" \n\n\"Sit down, Mr. Westergaard,\" Copeland said. \"He has a valid point about the appearance of Vanguard taking care of itself first.\" \n\n\"Finally,\" Finn said. \"Thank you for admitting it.\"\n\n\"Now you can listen for a few minutes,\" Copeland said. \"Mr. Westergaard?\"\n\nKai didn't look at Finn as he spoke. \"You don't know shit about Vanguard. We don't choose our assignments because Vanguard doesn't run Fleet. In fact, humans don't run Fleet. It's run by the Commonwealth, through Exxo-brain, the synthetic intelligence at Hub. It picks people from the Project because it's been keeping track of our training and skills since we were children. As for my friend Leah, I respect her enough to accept whatever choices she makes, including your sorry ass.\" \n\n\"I came out to see what the shouting was about,\" Marie said from behind them. \"Hello Aaron, it's been too long. We wondered where you ended up.\" \n\nCopeland smiled, looking fifteen years younger. \"Mademoiselle Cassies! O\u00f9 est ton mari terrifiant?\"\n\nMarie smiled. \"He is engaged with an even more terrible foe; diaper changing. Good morning, Finn and Kai. I rejoice to see that you're both well. Now, I will assist you all in stepping away from this foolishness and you will not interrupt.\"\n\nKai looked like he wanted to say something more but nodded. Marie looked at Finn, smiling gently, and he nodded as well. \n\n\"Bon. Kai, are you interested in a position aboard a Scout?\" \n\nHe shook his head. \"Still too claustrophobic. They had to keep me drugged up on the transit here.\" \n\n\"Poor dear, still so bad? And Captain Leah Jones? Are you pursuing her?\"\n\n\"I was happy to see that she was here and I looked forward to spending time with her. Then I saw the way she was looking at Mr. Morgan and knew she wasn't interested in anything beyond platonic friendship.\" \n\n\"Were you angry about that?\" \n\nKai looked at Finn for a moment. \"I was surprised at first, but as I came to know Mr. Morgan, I saw they were a perfect fit. Instead of jealous, I was happy to gain a new friend.\" \n\nFinn's rage evaporated as completely as it had exploded a few minutes ago. He found himself looking at the ground feeling deeply ashamed. Marie saw it and put an arm around him.\n\n\"You've been wounded for a long time, I think. There's no need for shame or anger, we just want our friend to realize he's been hurt and it's time to heal.\" \n\nFinn nodded without saying anything. Marie smiled sadly at Copeland.\n\n\"I have never doubted your commitment or honor,\" she said. \"But were you the best person to bring this up? Finn only knows you as his captor.\" \n\nCopeland looked surprised, then embarrassed. \"Please pardon my clumsiness, Mr. Morgan. I owe you that debt and tried to help without fully considering the situation.\" \n\n\"Debt?\" Marie asked. \n\n\"Captain Morgan flew close air support in the Middle East wars. He was personally responsible for saving the lives of my team on several occasions.\" \n\n\"We have something in common there,\" Marie said, smiling at Finn. \"He saved my life, along with everyone else on the transport, during the Terran Defense. Finnegan, forgive me, but there were reports about torture being used by the BNF in the interrogation process...\" \n\n\"They didn't ask questions, just started in with knives and jumper cables attached to a big battery,\" he said. \"Plastic surgery took care of most of it, but you can see where they branded me.\" \n\nHe lifted his shirt and showed them a twisted scar just below his ribs. Less noticeable was a patchwork of thin white scars.\n\n\"The things we do to our brethren, it would make you weep,\" Marie said quietly. \"When you were in the hospital, were you given psychological care?\" \n\nFinn shrugged. \"Yeah, but a psych eval meant automatic loss of flight status. We were told to self-identify any problems. Along with the other returnees, I used my POW bonus to stay drunk for most of my thirty-day leave and called it good.\"\n\n\"Until now,\" Marie said gently. \"Here you are safe, surrounded by friends and family. Wouldn't this be a good time to finally heal?\" \n\n\"I don't want Leah to know,\" Finn said. \n\n\"I understand, but how would you feel if she hid a wound from you from shame?\" Marie asked. \n\n\"Hey, are you bastards out there drinking real coffee?\" Leah called from Addie's hatch. \n\nShe jumped down to the ground and joined them under the Conestoga's wing. \"It smells amazing, no wonder you snuck out of my bed, Morgan.\" \n\n\"Uh, I was just bringing you this,\" Finn said, handing her his cup.\n\nLeah sipped it and smiled at him. \"You're a terrible liar but thank you. I figured you'd be out here bragging, so I turned on the external pickups to see how good I was.\" \n\nFinn's face burned and there was an awkward silence. \n\n\"Kai, did you really think I wouldn't research the hell out of Captain Finnegan Morgan when I was assigned to Atalanta?\" Leah said, exasperated. \"You're damned lucky Marie showed up before I could get my clothes on.\"\n\n\"I was just worried...\"\n\n\"I know, and thank you. But I've grown up, same as you.\"\n\nHe nodded, holding up his hands. \"Maybe more than me. My apologies.\" \n\nLeah handed the mug to Marie and put her arms around Finn. \"There's more to this story than you realize. Finn was also one of the last pilots to evacuate to Hub. His ship was badly damaged, but he stayed in the fight until his life support system ejected him next to a Gyr corvette that was headed for the Slingshot Gate. And let's not forget that most of his adopted family was killed when then Drabs murdered Sparrow's Flame. I think any of us would have ended up catatonic, or psychotic, dealing with that. This man put his head down and went on fighting. But I agree that the time has come for him to begin healing, and I'll be right beside him.\" \n\n\"I beg your pardon, Captain Jones,\" Copeland said. \"Had I known...\"\n\n\"That's okay, he needed to hear it,\" Leah said, still looking at Finn. \"Now I don't have to beat him into listening to sense.\" \n\n\"Not yet, anyway,\" Finn said, looking into her eyes. \n\n\"Ah, but the day is young,\" Marie said. \"And this coffee is now mine, by the way.\" \n\nThe Sun's Greeting that morning included the crew of the Athena, the Scouts, and even a large group of Utopianists. Henry had appeared with Lily and when she'd seen Finn, she'd immediately reached for him. When he'd taken her, Lily reached up and patted his face, staring up at him. He smiled down at her and she chuckled and thumped her head onto his shoulder.\n\nAs the low chant of the Ta'avi far-voice began to spread, Yanna appeared and put her arm around his waist. Leah smiled at her, putting her arm around him from the other side. Finn saw that everyone in the crowd had begun holding hands or embracing those around them. The voices built around them as the sky grew brighter, wrapping them all in the anticipation of the new day. Finn closed his eyes and shielded Lily's ears, waiting for the shout of gratitude that would greet Erewhon's sun as it gifted the planet with another day of life.\n\nThere's one more chapter coming, I wanted to get this posted before life found another amusing way of blowing up in my face (three of those casualty numbers were close friends & family). Stay safe and put your fucking mask on properly."
    ],
    "authorname": "Filthy_Jeter",
    "tags": [
        "sci-fi",
        "fantasy"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/fleet-scout-ch-03-fleet-rescue"
}