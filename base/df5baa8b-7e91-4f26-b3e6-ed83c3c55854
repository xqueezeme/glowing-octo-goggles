{
    "title": "Dead and Horny Ch. 02",
    "pages": [
        "Hi all! Here's the next chapter of Dead and Horny!\n\nNew reader? This story is a spin-off of Home For Horny Monsters and comes right after Part 2. It is written as a stand-alone tale, but will make a lot more sense if you've read my other monster works.\n\nReturning readers, welcome back! As always, I will be posting a posting schedule in my bio, so check there for when I plan future releases. Thank you so much for the kind comments and letters from Chapter 1, starting a new story is way scarier than a normal post, and I appreciate the love, kindness and encouragement you've given me. Hopefully this tale is helping you pass a little bit of time and making the summer of 2020 suck just a little bit less.\n\nSpecial thanks to T.J. Skywind for lending me a great pair of eyes, especially in regards to firearms.\n\nEnough from me, off we go into my cross-country zombie/succubus lesbian adventure! \n\nInto the Woods\n\nDana had watched most of the hotel's library of On-Demand movies by the time Lily came sulking through the front door sometime after dawn. Without a word, the succubus disappeared into the bathroom, and the shower kicked on.\n\nFrowning, Dana checked the time. Why was Lily taking a shower? She figured that the succubus could just blink her eyes and become clean, or whatever, but maybe demons needed to bathe frequently to chase away the stink of sulfur.\n\nCurious, she cracked open the door of the bathroom. The room was already so full of steam that she wondered if Lily had the shower on its hottest setting. She pushed the door open and moved toward the shower, her hand reaching for the curtain.\n\n\"Don't. Please, just... don't. I'll be out in a minute.\"\n\n\"You okay in there?\" Lily sounded far from it, and this fact somehow shook Dana. \"Did something happen?\"\n\nA few moments passed before the succubus responded. \"Maybe. I'm not sure, but it's nothing you need to worry about.\"\n\n\"Lily, I'm here if you need to\u2014\"\n\n\"I don't. Just... give me a minute. Alone.\"\n\n\"Okay.\" She walked back out into the bedroom, then closed the door behind her.\n\nA few minutes later, the shower turned off and Lily came strolling out of the bathroom, her hair wrapped up in a towel and a large, fluffy bathrobe.\n\nLily fell back onto the bed and crossed her legs. She was wearing her black, leather boots beneath the robe. \"Ah. I'm feeling much better now.\"\n\n\"I hope so.\" Dana looked out the window. \"We should probably get a move on, don't you think?\"\n\nThe succubus smirked and pulled her towel off dramatically. As it fell, her outfit transformed into a sleeveless red leather jacket and black leather pants. She stood up and shook her head, causing a black cap to appear on her head.\n\n\"I'm already ready, and you don't even have your shoes on.\"\n\n\"Some of us don't get the benefit of a magical wardrobe.\" Dana put her shoes on and grabbed her helmet from the desk. The helmet had been an impulse purchase shortly after starting their road trip. Not only did it hide her face, but it also meant that her brains were more likely to stay in her head if they crashed. While Mike's magic semen had curative properties, she didn't care to test the limits of it after having her brains scooped back into her head.\n\nIt also had a headset that allowed her to talk to Lily. That first six-hour stretch had become awfully dull with only the road ahead of her. She picked up the two headsets that had been charging on the nightstand and tossed one to Lily, who snatched it out of the air and tucked it into her ear.\n\n\"Feeling chatty?\" she asked.\n\n\"You have to give me directions, remember?\" The two of them left the room and headed for the elevator. When the door opened, they got inside, and Dana pushed the LL button for the lobby. \"So where were you last night?\"\n\n\"Ooh, are you getting jealous?\" Lily smirked, then looked toward the door. \"Maybe I was falling head over heels for some guy, loving how special he made me feel.\"\n\n\"Fine. Don't tell me.\"\n\n\"I love it when you're\u2014\" Lily went quiet when the elevator stopped and the door opened.\n\nAn older man in a long, dark gray coat stepped onto the elevator with them. His gray hair was cut short and the skin above his beard was cratered with scar tissue. He reeked of garlic and chickpeas, causing Dana to wrinkle her nose.\n\n\"Good morning.\" He gave both of them a smile and pushed the LL button. They all rode in silence, and he stepped out of the elevator and headed for the breakfast bar and they walked toward the front door. Crossing the lobby, Dana noticed Lily watching the breakfast bar with an odd look of discomfort on her face.\n\n\"Everything okay?\" she asked.\n\nLily shrugged. \"Just got a really odd vibe off of that guy. Doesn't usually mean anything.\"\n\n\"Odd how?\"\n\n\"Hmm. Good question.\" They walked into the cold air of the morning and headed toward where the motorcycle was parked. \"Not something I'm super familiar with, but I've heard humans describe it as an instinctual thing. Like, you meet someone and can tell something is off, like they are a serial killer or something like that.\"\n\n\"Wait, you think that guy...?\"\n\nLily laughed. \"No, nothing like that. I would know a serial killer if I met one. That shit is like catnip for a demon. That guy was maybe a priest, or even an actual exorcist or something. My best guess anyway.\"\n\n\"Priests make you uncomfortable?\" Dana got on the bike and held her helmet up, waiting for Lily's response.\n\n\"Most don't, actually. It's exceedingly rare these days to find a holy man or woman who actually buys what they're selling.\" Lily stuck out her tongue, then pulled a helmet out of nowhere and slid it over her head. \"Most people do it for money or power. They don't give a shit about God, it's all about finding people willing to believe in salvation in exchange for their obedience.\"\n\nDana switched on her headset and put her helmet on. The sentient motor started itself, and they pulled onto the main road that went through town. The powerful thrum of the engine made the zombie smile, and she revved the engine hard.\n\n\"So... you ever use a motorcycle engine to get yourself off?\" Lily asked through the headset.\n\n\"Be a good girl today and I'll tell you.\"\n\n\"You're such a tease. I love it.\" Lily slid her arms around Dana's waist and held tight as they swung onto a few sideroads, avoiding the busier parts of town. With the college centrally located, they had quickly learned that traffic was absolutely shitty during normal school hours, but once they could get northwest of the downtown area, the traffic thinned out a bit, and Dana could really lay down some speed. They still needed to pass through a small part of the downtown area, and that's where she saw it.\n\nUnearthly Delights, or what was left of it. The fire that had burned it and the surrounding buildings to the ground a couple of weeks ago had left little more than the foundation, and the entire area was surrounded by cyclone fencing. Rumor had it that the town of Fort Collins had a small network of underground tunnels from its smuggling days, and one of these tunnels was exposed by the fire. The tunnels themselves were prone to collapse, and multiple signs threatened trespassers with prosecution.\n\nNot that Lily had cared. She had spent that first night they arrived on the other side of the fence, digging quietly for a sign of anything magical. Dana's job was to watch for drunken college students who wanted to wander down and check out what was left of the place.\n\n\"If only we had gotten here sooner,\" Dana mumbled.\n\n\"If wishes and buts were candy and nuts...\" Lily began.\n\n\"Please, no,\" Dana begged.\n\n\"Then we'd all have a Merry Christmas.\"\n\n\"You know I hate that saying.\" Dana turned north on College Ave. It had been one of her dad's favorite things to tell her when things weren't going her way, and it still drove her crazy.\n\nLily's fingers slid up and caressed her rib cage from behind. \"Then maybe you should quit complaining about something you can't change. It's super unattractive.\"\n\n\"Keep this up and I'm definitely never telling you about the time I got off while riding a bike.\"\n\nLily laughed, but said nothing else.\n\nThe town of Fort Collins vanished behind some trees and then they were in La Porte again. They passed by the Double Duece and went up the canyon toward the Red Feather Lakes. It was still a long ride, but it was very early in the morning in the middle of the week, which meant traffic was light. It was nearly eight in the morning when they turned off the main road. The wheels of the bike were jolted by a few hidden rocks, and Dana scowled.\n\n\"How much farther?\" she asked.\n\n\"We've got a narrow turn at the top of this rise. After that, it should be a fairly smooth ride down into the next valley. If it hasn't rained.\"\n\nDana sniffed the air. \"It smells like it has.\"\n\n\"Stay to the left on the road, then. It's less likely to be muddy.\"\n\n\"Dammit,\" she muttered under her breath. She slowed the bike, going around a few rough sections. She imagined a jeep or truck would fare better climbing over the large rocks in the road, but loose gravel and rough terrain meant a bumpy ride uphill. Lily leaned into Dana, the succubus' breasts pressing into her back. They reached the top of the hill, and they stopped the bike to look across the mountain range before them. Visible in a few spots were homes and cabins that had been built off the grid, many of them sporting solar panels.\n\nDana lifted her visor for a better look. \"Doesn't seem like a bad place to get away from it all.\"\n\n\"We're high enough up that distances are deceiving. Those two homes are over a mile apart.\" Lily pointed to a pair of houses built on a rocky ridge. \"Pick the right spot, and you don't have to worry about dealing with anybody ever.\"\n\n\"I'm guessing that's what our guy is doing.\" But why? What had caused Ray to disappear into the mountains?\n\n\"Up ahead, slow down or you'll miss it.\" Lily pointed off to the left and Dana almost missed it.\n\nThe path was tucked away in the shadows of a pair of trees, and ran back along where they had come. A car going the other way would see it easily, but nobody who was leaving would mistake it for their turn.\n\nThey drove down the trail for awhile, and Lily tapped her on the shoulder, then pointed to the side of the road.\n\nDana pulled over, then looked around. Where was she supposed to be going?\n\n\"Pull off here,\" Lily told her, then dismounted. \"There's a spot on the ridge just past this point that can be seen from the cabin. I would prefer to get close in case he decides to bail.\"\n\n\"Why would he bail?\" Nonetheless, she pushed the bike off the road and into the trees where nobody would see it. While Tick Tock would ensure it didn't get stolen, she didn't want to worry about it getting clipped by a passing car, or having someone lose a hand because they messed with a mimic.\n\n\"Why is he holed up in a cabin in the woods? Call it a hunch, but something happened. It might be related to the flask, or maybe the guy knocked over a gas station. It's not like he was keeping stellar company in town.\"\n\nDana shrugged, then looked up the road. \"So we're walking?\"\n\n\"Of course.\" Lily winked, and her outfit shifted around. Calf length boots, a hiking skirt, and a black shirt tied beneath her breasts to reveal her belly. Her hair was pulled back beneath a ballcap, and she wore a small hiking pack on her back. \"After all, we're a pair of lost hikers staying at daddy's cabin by the lake.\"\n\nDana frowned.\n\n\"What? Is something wrong with my outfit?\" Lily looked at herself.\n\n\"It's a bit much, but that's not it. Just wishing I could change my outfit whenever I wanted.\" Dana tossed her helmet underneath the bike. \"Can I at least borrow the hat?\"\n\n\"Ooh, would love to, but...\" Lily pulled off the cap and put it on Dana's head. She took several steps back until she was about fifteen feet away, and the cap turned into a puff of pink smoke that fell around her shoulders. \"I can maintain objects up close, but the last thing you want is for your outfit to fall apart at the wrong moment.\"\n\n\"What is it made of?\" She watched the cap reappear on Lily's head.\n\n\"Same thing I am. Sugar and spice, and everything nice.\" The demon tugged down on the front of her shirt, the fabric ripping just enough to reveal cleavage and the edges of a red bra. \"Better with tits out or in?\"\n\nShe shook her head and laughed. \"I've always been a fan of some tasteful sideboob.\"\n\n\"You're right.\" Lily grabbed her shirt and gave it a shake. The fabric rippled and became a tight black tank top with low cut armholes that revealed her breasts. The bra was gone, replaced by a tattoo along her ribs that said Live, Laugh, Love surrounded by floral script. \"Tasteful enough?\"\n\n\"Absolutely delicious. You gonna order a pumpkin spice latte when we get back to town?\"\n\n\"Maybe after I get my Uggs waterproofed.\" Lily turned into the forest and pushed her way through some bushes, and Dana followed.\n\nThey ended up on what looked like a hunting trail, and the succubus lead the way up the mountain, eventually picking up a stick to hike with. The forest was alive with the sound of birds and insects, though Dana noticed they went quiet as the two of them passed through. Technically, Dana and Lily were both predators, and she wondered if the animals here could sense it.\n\nComing upon a small gully, they descended into it, following it up the hill. This required a few spots where they had to scramble over rocks to keep going, and Dana's mind wandered back a couple of summers to a trip that she had taken with Alex along the east coast.\n\nThey had ridden out together on Alex's bike, with little more than a popup tent and enough cash for a few meals. Alex had grown up along the Maine coast, spending her summers at a cabin her family owned, and she wanted to share the experience with Dana. The two of them had hiked some of the most beautiful landscapes that Dana had ever seen, ending up off the beaten trail more than once. Nights were spent on cliffs overlooking the ocean, falling asleep to the sound of the waves crashing against the rocks below with the undimmed canvas of stars above them their only source of light.\n\n\"Hey, you okay back there?\"\n\n\"What?\" Dana looked up and saw that Lily was about fifty yards ahead of her. Grimacing, she rushed to catch up, nearly tripping over a thick branch. When she got to Lily's side, she gave a mock salute. \"Sorry about that.\"\n\n\"Lost in thought?\"\n\nShe nodded. \"Just thinking about the good ol' days, when I was still alive.\"\n\n\"Hmm.\" Lily looked up the mountain, then back. \"Do you miss it? Being alive?\"\n\n\"Of course I do. That's the whole point of coming out here, isn't it? Find some magic, bring it back to our resident enchantress and get her to undo what was done to me.\"\n\n\"But are you sure you miss it? Is it being alive that you miss, or the threat of being damned for all eternity if you aren't fixed?\"\n\n\"I...\" She scowled at the succubus. \"I don't think now is the time to psychoanalyze my deadgirl issues.\"\n\nLily shrugged. \"I mean, I'm just curious. Seems like you may be better off as you are. Why not consider embracing it? Isn't immortality what every human wants?\"\n\n\"Not this human.\" She squinted through the trees at a bright spot between the leaves. \"Is that a window?\"\n\n\"Hmm? Oh, yeah, we're almost there. Hold up.\" Lily grabbed a handful of dirt and threw it in Dana's face.\n\n\"What the fu\u2014\" She inhaled another mouthful of dirt, then stuck out her tongue to scrape it clean with her fingers. Lily ran her fingers through her hair, and her appearance shifted so that she looked sweaty and dirty.\n\n\"We can't sell the routine if neither of us sweats. Without a little dirt, it looks like we got dropped off on his doorstep. How's that for one of your deadgirl issues?\" She winked, and dirty smudges appeared on her cheeks as well as sweat stains on her tank top.\n\n\"Oh.\" Lily's argument made a lot of sense, actually. \"You could have just told me instead of throwing dirt in my face.\"\n\n\"Yeah, but it's so hard to get a rise out of you. I think of it like a game.\" She moved up the hill.\n\nDana rolled her eyes and followed. When they stepped out of the woods and into the clearing of the cabin, they both looked around. It didn't seem like anybody was around, and the ranch-style cabin had all of its blinds closed. Up on the roof was an array of solar panels, and a large shed by the house had a sturdy lock on the door.\n\n\"Oh, hey!\" Lily did a bouncy run across the yard toward the door. \"Hello, is anybody home? We got lost in the woods and don't have our phones!\" She pressed her face against the glass.\n\nDana walked up the front door and shook her head. The succubus was somehow the center of attention in the middle of the forest. She knocked on the door.\n\n\"Hey, is anybody there? We got lost and\u2014\"\n\nThe shotgun blast tore through the door and into her shoulder, the heavy slug shattering the joint. She spun around and a second blast through the door caught her in her exposed side and knocked her to the ground.\n\nShe screamed.\n\nIt wasn't pain that fueled her cry, but terror. Though death could not touch her, oblivion could, and if her attacker chose to step out and blow her head off, what then? The necromancer who had cursed her had explained that she would spend an eternity in a fugue state with no hope of rescue or crossing over to the other side. Damnation at its finest.\n\nLily shrieked and ran toward the woods. The door burst open, and a man with a scraggly beard pushed his way outside and pumped the shotgun he was holding. A hot shell whizzed through the air and landed in the dirt by Dana's face, the smell of sulfur drifting into her face.\n\n\"I'm not falling for your tricks!\" He fired at Lily, who let out a long scream and threw herself dramatically onto the ground. When he chambered another round, Lily stood and limped toward the tree line. He stepped toward her and fired again, but Dana was back on her feet and grabbed him from behind.\n\nWell, sort of. Her left arm didn't work anymore, and when he pulled the trigger, the shot went high. He howled in rage and twisted around, but she jumped onto his back and held on, figuring he couldn't get the gun between them that way.\n\n\"Let me go! I won't tell nobody!\" he screamed, trying to pull her arm off his neck.\n\nWhile she had the disadvantage of only one arm, she did have the advantage of never getting tired. She wrapped her legs around his waist, briefly debating whether to bite him and taste his flesh. He carried with him the odor of smoked meat and whiskey, and she imagined how tender his meat would be, going down easy like a pot roast.\n\nGrunting and drooling, she was about to tear a piece out of his neck, just to see what it tasted like, when he let out a gasp and went limp in her grip. He fell in slow motion, revealing Lily. Her face was fixed in a scowl, and her wings and tail had emerged.\n\n\"Ray Scotes, I presume.\" Lily looked at Dana. \"You okay?\"\n\n\"Uh... I...\" She wiped the drool from her chin with her functioning hand. \"I've been better.\"\n\n\"Well, so has he.\" Lily reared her foot back and kicked Scotes in the face. There was a loud crunch, and blood gushed from his nose onto the dirt. To Dana, it smelled like wine. \"Let's get this sack of shit inside.\"\n\n\"Um... I'll let you do it.\" She had stepped back several feet and was breathing from her mouth.\n\n\"Hmmm? Oh.\" Lily appraised her with a grimace. \"Yeah, okay. You can eat him later, but let's find the flask first.\"\n\n\"There will be no eating of anybody.\" Dana watched from a distance while Lily set the shotgun onto his chest, then dragged Scotes back inside. She waited a minute before following them in, and frowned at what she saw.\n\nWhat had once been a homey cabin looked more like the inside of a bunker now. Boards had been put up over the window curtains, and a nearby table was out of place by the entrance, and she wondered if it had been blocking the door.",
        "Lily had propped Scotes up on an armchair by the fireplace. All around was trash in the form of food wrappers.\n\n\"What the hell was this guy doing?\" Dana moved through his kitchen, looking at the shelves around the sink. They were largely bare. \"He really did hole himself up in here.\"\n\n\"We'll find out why in a second.\" Lily straddled Scotes, her fingers on his forehead. \"Ah. I see.\"\n\n\"Well?\"\n\n\"Flask.\" Lily snaked a hand into the waistband of his pants and pulled it free, then tossed it across the cabin to Dana.\n\nShe caught it with her good arm and held it up. A silver flask with a star engraved into it. She flipped it open with her thumb and poured its contents down her throat. Even with her muted senses, she could taste how smooth the whiskey was. She held it over the sink and watched as the flask emptied, then stoppered it.\n\n\"Well?\" Lily was watching with curiosity.\n\n\"Moment of truth.\" Dana unstoppered the flask and inverted it. The flask was full again, and the strong smell of alcohol made her smile. \"It is definitely our flask.\"\n\n\"Great! We get to cross something off our list.\" Lily stood up. \"At least something came from this trip.\"\n\n\"I guess.\" Ratu had given her a list of five items to retrieve. Of the five, the flask was the only one they had been able to locate. \"So a flask of eternal whiskey. Who makes such a thing?\"\n\n\"In the world of magic, nobody stops to ask if it should be done. It's always about what's possible. Whoever made that flask proved that they could create an object capable of generating an infinite amount of booze in a small container. Today it's booze. Tomorrow? Why not oil?\"\n\n\"With this flow rate, it wouldn't be very profitable.\" She shook out the flask again, then stoppered it. The weight didn't change when it refilled.\n\n\"That isn't the point, and you know it.\" Lily walked into the kitchen and covered her mouth. \"Okay, that's disgusting.\"\n\n\"What?\" Dana followed Lily's gaze and saw that her shirt had shifted, revealing the hole in her side. Through it, she was looking at layers of fat and maybe her liver? She had never paid much attention in anatomy to remember where everything was, so that was her best guess. She dug around deep into the wound and pried out a large, flattened shotgun slug. The first round had missed the bone in her arm, but had nearly severed the tricep as it passed through her body. \"At least I'm not leaving a mess.\"\n\n\"No, that's disgusting. Come here.\" Lily dragged Dana through the cabin and into a bathroom that had a large stack of old Penthouse magazines above the toilet. \"Look.\"\n\nDana looked in the mirror and was surprised to see that her already pale complexion was now waxy in appearance. Her eyes and hair had lost all color, turning a faded gray, and her features were withdrawn, as if she had been on a hunger strike for a couple of weeks.\n\n\"How do you feel?\" the succubus asked.\n\n\"Hungry.\" Her stomach didn't growl, but now that Lily brought it up, there was a void inside of her, one that demanded it be filled soon. Her thoughts turned to Scotus out in the living room. She could easily eat one of his arms, or maybe a leg, he owed her that much.\n\n\"You're drooling.\" Lily crossed her arms. \"You are overdue to eat, and I'm guessing the damage from his shotgun pushed you past the limit.\"\n\n\"He shot you, too. How come you aren't suffering?\"\n\n\"Hmm? Oh, right.\" Lily scrunched up her face, then hacked like she was spitting up a hairball until a large, battered slug clattered into the sink. \"Forgot about that. Bullets can't hurt demons, but if they don't come out the other side, they get stuck inside.\"\n\n\"I've got the same problem, apparently.\" Her stomach growled. \"Shit.\"\n\n\"You could always eat\u2014\"\n\n\"I'm not eating anybody! The moment I decide to take a bite out of another human being, I become the monster. And what if I bite somebody and get interrupted? What if they become a zombie, too, and I become the reason the world turns into the Walking Dead?\"\n\n\"Then the world would become interesting for a few seasons, but then start to drag for a bit until everyone quits watching.\"\n\nDana squinted one eye. \"What?\"\n\nLily laughed. \"Sorry. That's one of the villagers feeling restless.\" She tapped her head for emphasis. \"I've got a fanboy in here, but don't feel bad. He did some terrible things when he was younger, and let's just say those bodies are going to stay buried for awhile.\"\n\n\"Can you hear all those people inside you?\"\n\n\"Nah. Sometimes a random memory can get triggered, but that's how memories are.\" She looked at Dana's shoulder. \"Hmm. If you aren't going to eat our dear Mr. Scotes, then you know what you must do.\"\n\nDana let out a sigh. It wasn't avoidable. \"Really, though? Here? What if he wakes up?\"\n\n\"Oh, he's out for a couple hours at least. And if he wakes, I'll know.\" Lily leaned in, a smirk on her lips. \"Let's get you fixed up.\"\n\n\"Okay.\"\n\nLily kissed her, but it was so much more than that. Her lips tasted of cinnamon and fire, but her saliva thickened as she passed a dose of Mike's cum into Dana's mouth, which she greedily swallowed.\n\nZombies like Dana were forced to eat the living, and consume their life force to keep from decaying. However, Mike Radley's body had been altered by a soul pact with a nymph, and his semen, for some reason, was a reasonable substitute for human brains. A succubus was capable of storing semen in her body for all kinds of nefarious purposes, and Lily's presence meant that Dana didn't have to make quick trips back to the Radley House for refills.\n\nBeing a lesbian, Dana had never had any use for sperm, but the zombie part of her told her brain that she was swallowing pure ambrosia. Warmth flooded through her limbs, and she felt a burning sensation in both her shoulder and her side. In moments, it hurt no worse than a nasty sunburn, and when the kiss broke, she looked down to see that the wounds were stitching themselves shut.\n\n\"You have to admit, that does look pretty cool.\" Lily poked at Dana's side as the skin knitted. \"Oh, this will be interesting?\"\n\n\"What will?\" Dana asked, but she could feel what Lily was referring to. Her skin was bubbling up across the wound, and a fragment still inside her body popped free and fell onto the ground, rolling across the bathroom and into the hall. Apparently the cabin wasn't perfectly level.\n\n\"It feels weird,\" she said, pushing on the skin to see if anything else would come out. The burning in her shoulder was already fading, and she lifted her arm, only to have something pop loudly.\n\nLily sat up on the bathroom sink, her legs crossed. She was leaning forward, her arms squeezing her breasts together and amplifying her cleavage. \"What else do you feel?\"\n\n\"Other... stuff.\" She had been trying to resist it, but the residual warmth of regeneration was now settling somewhere else. Pressure was building in her groin, and she started panting in the bathroom.\n\nThe semen kept her alive, but Mike's magic made her so fucking horny.\n\n\"Do you have any requests today? Dead girlfriend? Celebrity? Instagram Influencer?\" As Lily listed off the options, she transformed into each of these things, then turned back into herself and slid one of her tank top straps down her arm to reveal her neckline. \"There's always the original recipe, if you're interested.\"\n\n\"Fuck...\" Dana muttered, rubbing her crotch through her pants. It made her uncomfortable just how quickly she could go from being a logical, numb-to-the-world dead girl to a ravenous slut, but there would be time for self reflection later. Right now, her eyes were locked on the curve of Lily's breasts.\n\nIn hindsight, the sideboob was a great idea. Dana grabbed the straps of Lily's tank top and pulled, the two of them coming together hard. She locked lips with the willing succubus, and slid her hands beneath the thin fabric of her top and squeezed the bare breasts beneath.\n\nLily broke the kiss and took a step back. \"So, I'm curious. About that time you got off while riding a motorcycle...\"\n\n\"I was running low on oil and found a long stretch of road with rumble strips.\" Dana grabbed the waistline of Lily's pants and pulled them out so she could shove her hand inside. Lily leaned against the wall and spread her legs, licking her lips and moaning while Dana's fingers stroked her labia. \"I rode that section of road three times and got off four. Nearly crashed on the last one, but only because I hit a patch of gravel.\"\n\n\"Sounds hot. Did you want to take your time with me or... oh!\"\n\nDana had pulled up Lily's tank top to reveal her bare breasts, and growled while she sucked a nipple into her mouth and grabbed Lily's ass with both hands, lifting her off the ground and shoving her into a nearby wall, which caused a few porn magazines to slide away from the stack and flutter to the ground.\n\n\"You gonna treat me like your bike and\u2014\"\n\nDana covered Lily's mouth with a hand. \"Shut the fuck up for a minute.\"\n\nLily grabbed Dana's wrist and yanked her hand away. \"Oh, so you want to play rough today?\" She kicked off the wall, and Dana stumbled back into the wall behind her, knocking down a stash of toilet paper and shaving cream. Their positions now reversed, Lily grabbed Dana's crotch, pressing her palm tightly against the zombie's swollen clit.\n\nShe gasped, then leaned back to sink against Lily's hand, relishing the hot, fiery sensation of her sex being manipulated through the thick fabric of her pants. The room felt hot now, and she slid to one side to fall out the open bathroom door. When she landed on her back, Lily was a split second behind, and their lips met again, their tongues dancing together and scrambling Dana's thoughts.\n\nThe cabin faded from her mind, and she was only dimly aware of the sleeping man only feet away from them as she tried to get her pants down so Lily could finger her. The pressure on her groin abated for only a moment as the fabric slid away, and returned with a vengeance as a pair of fingers penetrated her.\n\n\"Oh, fucking Jesus Chr\u2014\"\n\nLily put a hand over Dana's mouth. \"Nuh-uh, silly Billy. You keep that shit to yourself or I'll stop. If you want to call out someone's name, you use mine, got it?\"\n\n\"Uuurgh!\" It wasn't an orgasm, but rather a hot surge of energy that blew through her body, like the chills in reverse. It happened sometimes, and it was embarrassing, but she was too dead and horny to care. Lily loved to play these stupid games with her, but the succubus also knew how to push her buttons just right to trigger some mind-blowing orgasms. And though she was a huge tease, she never belittled Dana about these most intimate moments after the fact, which made them easier to accept.\n\n\"Oh, wow, you're really fucking wet right now.\" Lily held up her hand and spread her fingers apart. They were slick with fluid, and the succubus pressed her fingers together and then released them, making a shlucking sound when her fingers tried to stick together.\n\n\"Don't just talk about my pussy, do something with it!\" Dana had one hand down the front of Lily's pants, but was struggling to do much at this angle. Lily spread her legs and the material opened up, allowing Dana full access. Making the letter C with her hands, she used her ring and middle finger to massage the inner wall of Lily's vagina while her thumb teased at her clitoris.\n\n\"I mean, I guess a hand job is okay.\" Lily shifted around, letting out exaggerated moans while fingering Dana.\n\n\"Oh, c'mon, you're just fucking with me now.\" Dana grabbed Lily's waist and twisted, causing them both to roll over. Now, with Lily beneath her, Dana fingered the succubus while licking around her warm, cinnamon scented labia.\n\n\"Oh, I'm hardly fucking with you.\" Lily grabbed Dana's ponytail and yanked her head back so they could see each other. \"And if you don't start eating that pussy like a champ, I'm going to make you get yourself off.\"\n\nDana was about to call Lily a cunt, but the succubus shoved Dana's face into her crotch and wrapped her legs around the zombie's head.\n\n\"Mmmf!\"\n\n\"Oh, stop fighting it. You don't even need to breathe, you big baby! Now snack on that snatch or you'll be riding that bike of yours up and down this mountain until your ass hurts.\"\n\nWhile probing the depths of Lily's sweet, delicious pussy with her tongue, Dana raised the middle finger of her left hand and shoved it into Lily's asshole.\n\n\"Oh, fuck!\" Lily shifted her hips forward, then sank down onto Dana's extended digit. \"You're feeling a little dirty today, aren't you?\"\n\n\"Mmm hmm,\" Dana replied from beneath Lily's crotch.\n\n\"C'mon, dead girl, get me off. Make me see some stars.\" Lily continued to ride Dana's face for several minutes, letting out tiny hisses and moans while yanking her hair hard enough to bang her head on the floor.\n\nWhile she worked Lily's pussy with her mouth and fingers, her spare hand was busy at work on her own snatch with long, hard strokes around the sides of her labia while her middle finger teased the opening of her vagina. Just as Lily had said, she was soaking wet, and her entire pelvis was radiating with waves of pleasure that were steadily building within.\n\n\"Oh, yes, that's it dead girl! Mmmh!\" Lily let go of Dana's hair and leaned back to place her hands on Dana's breasts instead. She was playfully tweaking Dana's nipples now, giving her nipples a pinch every time Dana's finger bottomed out in her ass.\n\nWhen Lily came, her thighs squeezed Dana's head so hard that the entire world went silent\u2014save for the muffled screams that made it to her through the succubus' thick thighs\u2014and Lily squirted a copious amount of fluid all over Dana's face, which she eagerly lapped up. It tasted roughly like Fireball Whiskey, which she suspected was intentional on the demon's part.\n\nThe succubus laughed, then looked down at Lily and said something that Dana didn't understand.\n\n\"Whaf?\" she asked, her mouth still full of pussy.\n\n\"Oh, sorry.\" Lily spread her legs a bit so Dana could hear. \"I'm guessing you would like some help too, right? Or are we done here?\"\n\nDana, unable to properly respond, slid her finger out of Lily's ass, then smacked her on the butt cheek.\n\n\"Oh, a special request. I'm happy to oblige.\"\n\n\"Wha fefial rekest?\"\n\n\"Shh, don't talk with your mouth full.\" Lily leaned forward again and wrapped her hands around the back of Dana's head, and the two of them locked eyes. The succubus winked, her tail making an appearance over her shoulder. The scorpion's stinger on the end melted, and it transformed into a monstrous cock covered in dozens of intimidating nubs that started spiraling in circles. It looked like an insanely complex alien vibrator, and if it wasn't attached to the end of a demon, it would for certain have Bluetooth and probably be WiFi ready.\n\nDana stared, her mouth going slack.\n\n\"Hey, I didn't say you could stop. Afterplay is just as important as foreplay.\" The tail disappeared, and Dana moved her hand away just before the tip of it started to tease her aching snatch.\n\nLily rolled her hips, pressing her delicious mound into Dana's mouth, then penetrated the zombie with her tail.\n\nInside her belly, Dana could feel those whirring nubs working her insides, and the whole tail vibrated with a sinister energy of its own. Her brain went numb, and all she could think about was the pussy she ate and the demonic cock that impaled her. She was like a fuse in a magical circuit, ready to burst at any moment as the tail thrust into her at an alarming rate.\n\n\"Looks like dead girl's still got a bit of life left in her after all.\" Lily ground herself on Dana's mouth. \"But variety is the spice of life after all.\" With those words, she scooted back and stood up, her tail still inside Dana.\n\nDana let out a loud moan, followed by a whimper when Lily lifted her up by the arms, and turned her around to pin her to a nearby wall, knocking over a box of ammo on a nearby shelf.\n\n\"You ever wonder how far a cock can go inside of you?\" Lily asked. \"Well, in your case, maybe not a cock. You get the idea.\"\n\n\"Wha... what?\"\n\nDana couldn't think, her whole body felt suffused with heat. She placed her hands against her lower belly and could feel the bulge of the stinger moving beneath her skin. The whirling nubs were visible in small waves, and she moaned when she realized the tip of Lily's tail had expanded inside of her.\n\nThe succubus winked, and then her tail pressed into Dana so hard that her feet lifted off the ground until only her toes were still touching the floor. Every time she tried to relax, the tail slid inside of her, filling her to the brim with its presence.\n\n\"C'mon, walking dead, let's see what you've got.\" Lily kept Dana pinned to the wall and watched with sadistic glee as Dana bounced up and down on the balls of her feet, letting out a series of explosive gasps. \"I can feel you, did you know that? On my tail. Every inch of your insides belong to me right now, and there's nothing you can do about it.\"\n\nThe waves of pleasure were now cascading over each other, and Dana was frantically working her pussy and trying to shove herself over the edge, to let those waves of orgasmic bliss wash over her and take her away, but whenever she came close, the tail would shift, and she would lose it.\n\n\"Please... please, let me... let me come!\" She wanted to explode, to feel that heat flush through her thighs and wash up her spine, to feel her insides tense up and release all the pressure that had already built up.\n\n\"Ooh, I love it when you're pathetic. But it's gonna take more than begging. You know what you have to do.\"\n\n\"What?\" Dana blinked, trying to think through the haze of sex. What on earth did the succubus want now?\n\n\"I want to hear it. I want to hear you beg me to get you off.\"\n\n\"But... I...\"\n\n\"I want you to say my name.\" Lily's eyes were glowing red and yellow now, and an aura of flames had formed around her. \"I want to hear you let everything else go and make me the center of your world.\"\n\n\"Lily, please! Please let me come, Lily, please, I...\"\n\nLily's tail pressed into her, and she slid up the wall, trying to grab anything nearby for support. However, the succubus was strong, and she pressed her hands against Dana's hips, pinning her to the cabin wall.\n\n\"Oh, go... Lily, fuck me, make me your whore, but please let me come, I need to come!\"\n\n\"That's my good girl.\" Lily leaned forward, her mouth now parallel with Dana's clit. \"All you had to do was ask.\"\n\nDana's labia were stretched to the limit, and she watched in delight as Lily leaned forward with an open mouth and latched onto Dana's clit. The tail inside of her whirred, filling her body with fireworks as she let out a scream that made her own ears ring. Her head and torso banged against the wall as her body jerked around of its own volition, and she placed her hands on Lily's head and ground her clit against the demon's mouth.\n\n\"Lily!\" she screamed, a series of tremors running through her legs before she let out a gasp and went limp.\n\nLily turned her attention to Dana's thighs, showering them with tiny kisses as she lowered her tail, allowing Dana to sink to her knees on the floor. A pool of fluid was leaking from Dana now, and Lily let out a chuckle.\n\n\"Some of that was me.\" She winked. \"You are easily one of the best fucks I've ever had.\"\n\n\"You... say that to all... the girls...\" Dana took several breaths, fighting to regain her composure. Though she didn't need to breathe, the reflex to do so was always the strongest after she ate, as if her body was trying to kickstart itself back to life.\n\n\"Oh, I rarely fuck outside the Dreamscape. Too messy.\" Lily's tail whipped across the puddle on the floor, the mess they had made disappearing. \"You should never leave a mess behind. Never know who might get their hands on it.\"\n\n\"That's one of the weirder things you've said to me.\" She inhaled deeply, and rubbed her belly. It felt sore for a few seconds, and then was filled with the familiar heat of regeneration.",
        "\"Oh, yeah, I was being pretty rough. Figured you could handle it.\" Her tail disappeared, and she helped Dana stand. While Lily was able to restore her outfit with a thought, Dana had to hunt down her panties, which she finally found somewhere in the bathroom.\n\nOnce properly dressed, she walked into the living room to see Lily standing over Scotes. The man had just slept through some of the hottest lesbian action ever, and would never even know it.\n\n\"Better?\" Lily asked.\n\nDana sighed. \"Yes, much, actually.\" The hunger had fully abated now, and she was ready to move on. \"We've got the flask, so what now?\"\n\n\"We stick around town and try to track down the other things on the list if we can. This was our first real lead, and I wonder if we can turn it into another.\"\n\n\"What do you mean?\" Dana walked over to Lily and looked at the unconscious man in the chair. Freshly fed, she could no longer smell the sweet undertones of smoked meat, her nostrils now filled with body odor and sweat.\n\n\"He was scared. Makes you wonder, right? Maybe someone else got their hands on something magic and tried to take the flask from him.\"\n\n\"But why?\"\n\nLily looked over her shoulder at Dana. \"Magic is easily the most addictive force known to man. Most people who get their hands on it can never get enough of it, and that's something you should always keep in mind. It's one of the reasons it is kept secret, after all.\"\n\nDana nodded. It made sense, and it definitely wouldn't hurt to let Lily poke around inside the guy's head to see what he knew. Even if he saw someone else buying something from Unearthly Delights, it would be a valuable lead. \"Go for it.\"\n\nLily put her fingers on Ray's temples and massaged them.\n\n\"Let's see what boogeyman crawled up dear Ray's...\" Her eyes went blank, and her jaw slackened. The succubus stared into the distance, a look of shock blossoming across her face.\n\n\"Lily?\"\n\nThe succubus snapped to attention, her eyes blazing with light. \"We need to get out of here right fucking now.\"\n\n\"What? Why?\"\n\n\"Hold on.\" Lily straddled Ray and opened his mouth. Her eyes glowed and he let out several groans of ecstasy over the next few moments, his eyes finally popping open as Lily sucked out his soul through them. Dana watched in morbid fascination as the succubus feasted, then stood up. Ray's eyes were fixated on the ceiling, and a large wet stain had formed in the front of his pants. Dana could smell his stale cum from where she stood.\n\n\"If we're in such a hurry, why are you fucking around with him?\"\n\nLily licked her lips. \"So that he can't be questioned about us.\"\n\n\"Questioned by who?\"\n\n\"I'll tell you once...\" Lily cocked her head, then looked toward the front door. She put a finger to her lips and grabbed Dana by her upper arm. \"I hear them coming.\"\n\n\"Who?\" Dana whispered back.\n\n\"The people he thought we were.\" Lily picked up the shotgun. \"Do you know how to use one of these?\"\n\n\"I'm not going to shoot somebody,\" Dana hissed.\n\n\"This won't even hurt them, will probably just stun them.\" Lily countered.\n\n\"Lily, I\u2014\" She could smell them now, a pair of men. Closing her mouth, she took the shotgun from Lily, then checked to see if it was still loaded. It was a pump action, and had at least one round left, so the safety was already off. She had gone target shooting at summer camp many times while growing up, and knew she could at least hit the broad side of a barn if she needed to.\n\n\"Good girl,\" Lily whispered. \"When I give the signal, we run. Use the shotgun only if you have to.\"\n\n\"You're freaking me out.\"\n\n\"Good. Be freaked. Run straight for the bike, even if I fall behind. I'll catch up eventually.\" Lily pressed herself against the wall by the door, then leapt up and grabbed one of the rafters. She twisted herself into position, then motioned for Dana to get down.\n\nDana crouched behind the trashcan in the kitchen. It was overflowing with trash, and she was easily able to fit. Several minutes passed, and she could hear the soft footfalls of someone moving around outside the cabin. Lily turned her head as if watching them through the walls, a scowl fixed on her face.\n\nSomeone knocked on the door. Dana stepped back from the trash can and readied the shotgun.\n\nThere was more knocking, and then the sound of a click as the doorknob was turned. Two men entered, both wearing dark coats. One of them was carrying a sword, and the other held a glowing wand made of a light-colored wood.\n\n\"I thought you said nobody was home,\" said the man with the sword.\n\n\"No, I said I didn't detect a heartbeat. There's a difference.\" The other man tucked his wand away. \"He doesn't look like he's been dead for long. Let's find the flask and get out of here.\"\n\nThe men split up, and the one with the wand searched Ray's pockets while the swordsman wandered toward Dana. Despite her being hidden away, his eyes immediately locked on hers, and he held his sword up. It was a duplicate of the folding sword that the cyclops Sofia carried.\n\n\"Hey, there's someone\u2014\"\n\nLily dropped down from above, her legs hooking around the man's neck. She leaned back and twisted her body, using her momentum to do some strange grappling move that tossed the man across the floor, causing him to drop his weapon.\n\nA blast of light from the mage knocked Lily into the wall of the cabin.\n\nDana stood and pulled the trigger. Fire roared from the barrel of the shotgun, and there was a bright flash of light as the mage was knocked backward. He tumbled over the trash-covered coffee table, then stood back up, a blue shield surrounding him.\n\nShe fired again, and the shield dispersed. Lily was already on her feet and charged across the room. With a firm grasp of his collar, she hurled him across the length of the cabin, his head smashing into the stones of the fireplace.\n\nThe swordsman was back on his feet, and Dana fired at him. He let out a grunt and dove toward his sword.\n\n\"I don't think so.\" Lily kicked the sword away from him, picked him up, then threw him out the window. She looked at Dana. \"What are you waiting for? Go!\"\n\nDana bolted out the door, and was nearly to the treeline when she looked back. Lily was close behind, and together they fled into the trees. Once away from the cabin, Lily took the lead. What had been a long journey uphill was far shorter going downhill, and once the bike was in sight, Dana sprinted past Lily toward it\u2014only to get tackled from behind by the succubus.\n\n\"Shh!\" Lily pointed, and Dana watched as a pair of dark vehicles moved along the mountain road. A few minutes later, a third one passed, and Lily stood up and hopped on the bike.\n\n\"Hurry up,' she whispered, waving Dana over. \"I think we're good.\"\n\nDana handed the shotgun over to Lily, put on her helmet, then got on the bike, which started on its own. They turned around and headed back the way they came, leaving a small cloud of dust behind them.\n\n\"You gonna tell me who they were?\" Dana asked.\n\n\"I'll tell you later. Let's get out of here.\"\n\nWhen they crested the mountain, Lily threw the shotgun into a ravine, and they drove back to Fort Collins, leaving the cabin far behind.\n\n<center>\ud83d\ude08\ud83e\udddf\u2640\ufe0f\ud83c\udfcd\ufe0f</center>\n\nCyrus sat in the car for a few minutes, his eyes on the cabin. The young woman who had driven him here opened his door and stood at attention as he got out.\n\nThe retrieval squad was busy examining the exterior of the building, and a secondary squad had set up a perimeter. A pair of hunters were receiving medical treatment against the front of the building.\n\n\"And we're sure nobody is in this area?\" he asked his driver.\n\n\"Reports indicate the nearest buildings are vacant,\" she said, her eyes scanning the treeline. He could see the tiny earpiece tucked away in her ear. The technology of the Order these days was largely on par with what the general public could get their hands on. Unable to use an earpiece due to a magical augmentation that allowed him to understand any spoken language, he supposed there was always a tradeoff.\n\n\"Good. Help keep an eye on things. It looks like we've got some work to do.\" He walked over to the cabin where a young man in a peacoat was waiting. \"Brother Amida, do you have something to report?\"\n\n\"Yes, Master Cyrus.\" Amida was shorter than the rest of his squad, but well respected for his magical abilities. Of Korean descent, he was the perfect asset for infiltrating the nearby college because of how young he looked. \"I regret to inform you that we are unable to locate the flask.\"\n\n\"I see.\" In terms of losses, the flask wasn't bad. However, the discovery that a local thrift store had begun selling magical objects had attracted attention from the Order, a secret society that had dedicated centuries to ensuring that the worlds of magic and science should remain apart. \"I heard that Mr. Scotes is no longer with us. Is that true?\"\n\n\"Regrettably. It would seem that a pair of unknown females dispatched him prior to assaulting us.\"\n\n\"Show me.\"\n\nAmida led Cyrus into the cabin. Ray Scotes was still strapped to a chair, his vacant eyes on the ceiling. A couple members of the Order, one man and one woman, were busy searching the domicile, but stopped to watch him.\n\nHe knelt down next to Ray's chair, then put a hand on the man's wrist. His body was still warm to the touch, but there was no pulse. Cyrus stood up and walked around the chair, his eyes taking in every detail.\n\n\"I've seen enough. Come.\" He gestured to the others, and they circled around. \"We have an adult male, deceased, with no evidence of trauma. Last seen with a pair of women. Ideas?\"\n\n\"Well...\" One of the techs pulled up one of Ray's eyelids. \"I was thinking perhaps a witch's spell, but the only one I know of that kills instantly without leaving a mark tends to rupture capillaries in the eyes.\"\n\n\"Very good. To date, there isn't a spell that just kills without leaving some kind of evidence. Not from a witch, anyway.\" Black magic intended for harm was rarely subtle. \"Other ideas?\"\n\n\"I was thinking perhaps a heart attack.\" Amida knelt in front of the deceased. \"It's clear something went down prior to our arrival. Mr. Scotes has been hiding here for a couple weeks now, and if not for his friends being admitted to the E.R. last night for alcohol poisoning, we wouldn't have even known he was here. So perhaps they said or did something to frighten him?\"\n\n\"Also good. That is a possibility. You?\" He looked at the other tech.\n\n\"A curse?\"\n\n\"Evidence?\"\n\nThe tech shrugged. \"My evidence is lack of evidence. A curse can be laid well in advance.\"\n\n\"True, but there's no residual magic in the area. If the time of death was earlier, perhaps. A good try nonetheless.\" Cyrus walked around the body one more time. \"So far, none of you are right. Any final guesses?\"\n\nThey all looked at each other, and then back to Cyrus, eager to know.\n\n\"It would have been easy to miss. His state is indicative of a lack of self care. The wild hair, unkempt beard.\" Cyrus slid his hand down the back of Scotes' shirt, and the tip of his finger pushed through a hole near the spine. \"Something like a hole could be attributed to his lack of upkeep. However, his clothes are well worn, but do not have holes, and this isn't the jagged tear of a branch, but a puncture wound. This requires further examination.\" He stepped back and nodded at Amida to proceed.\n\nAmida pushed Ray forward and lifted his shirt up. In the same spot as the hole was a tiny hole, easy to miss. \"Did they inject him with something?\" he asked.\n\n\"They likely did, but I suspect it isn't something covered in detail these days.\" Cyrus scratched his nose, an old memory surfacing briefly. \"I believe we are looking at the victim of a succubus attack.\"\n\nAt the word succubus, all three of his pupils knelt in eagerly to examine the wound. The few succubi that still walked the earth had long ago learned to lay low. It had been a couple of decades since an attack had been recorded, and this was a first-hand experience for the next generation of hunters. They took turns looking at the mark, then backed away to let Cyrus back in.\n\n\"Do you really think it's from a succubus, Master Cyrus?\" A look of concern crossed Amida's face.\n\n\"There's only one way to find out.\" Cyrus pulled a pocket watch out of a hidden pocket in his coat. \"I assume you all know what this is?\"\n\nThey all nodded.\n\nCyrus pulled a piece of hair off of Ray Scotes' body and opened the back compartment of the pocket watch.\n\n\"Allow me to warn the others,\" one of the techs said, then disappeared outside. Cyrus waited for her to return, and noticed that she was already popping a couple of pills into her mouth.\n\n\"If anyone else wants to use dramamine, now is the time.\" He waited, and the other tech popped a pair of pills he pulled from a pouch. It wasn't technically dramamine, but something that the lab had concocted that was ten times more effective and completely mitigated most forms of vertigo. He also noticed that Amida didn't take the medicine.\n\n\"Are you sure?\" he asked.\n\n\"If I ever have the need to use it without the pills, I would prefer to experience its effects in a controlled condition, Master Cyrus.\"\n\nCyrus smiled. Amida was quickly climbing the ranks. If he ended up with a strong enough Knight, there was no telling how far he would go. He took several deep breaths in preparation, then placed the hair in the pocket watch and wound it up.\n\nAmida's face twisted up in agony as the magic of the watch activated. The watch was able to play time in reverse for any creature whose DNA was inside the back compartment. The watches used to be far more common, but as science had advanced, so had magic, and many of them had been repurposed for more powerful devices. This one had been his for many decades now, and he watched with the others as Ray sat dead in his chair for several minutes.\n\nThe two big disadvantages of the pocket watch were that it played in real time. Whatever transpired had to be watched at a normal speed, which meant there was no way to skip ahead. The other was that it created a magical field that caused intense motion sickness. Even now, he could hear someone outside retching. They must have been too close to the cabin's walls.\n\nCyrus and the others waited. To his credit, Amida didn't leave, and they watched as the investigators searched the cabin in reverse, eventually leading to the confrontation. Two women were in the cabin now, and had noticed the approaching team of Reclaimers. Ray Scotes was still dead, however, and they had to wait a bit longer until they watched the woman with red and black hair hover over him and spit out his soul.\n\nOne of the techs crossed himself, and the other let out a gasp. Amida was studying the woman intently, and took pictures with a digital camera, but said nothing. They had finally crossed over to when Ray Scotes was still alive, and he slept in that chair while the succubus and the other woman had sex in the bathroom.\n\n\"Okay, that's enough.\" Cyrus clicked the watch shut. Unless they found some bodily fluids from either woman, they wouldn't be able to backtrack where they came from, and it hardly mattered how they had gotten in. Visible relief washed across everyone's face as the field vanished. \"Brother Amida, how do you feel?\"\n\n\"Terrible, Master Cyrus. The watch didn't seem to have any effect on you.\"\n\nHe laughed. \"Oh, it still does. I ate an early breakfast in my room, just in case. You have to plan ahead. I still throw up on occasion, I can admit it.\"\n\nAmida nodded, his eyes on the body. \"I'll get these pictures to the field team and then dust the place for prints. The human should be easy to track down, and we cannot allow a succubus to roam free.\"\n\n\"Yes and no, Brother Amida. You need to call this in. Our mission was to disrupt the trade of magical artifacts and retrieve as many of them as possible. We've been highly successful, but we can't just go chasing after a demon without permission, especially when we have a lead to a potential Class 4 artifact on our hands.\"\n\nBesides that, Cyrus thought succubi were extremely dangerous. The Order had a new classification system for cryptids and other magical beings, and a succubus was ranked as a Tier 2 cryptid, the second most dangerous. Many factors contributed to this rating, but the fact that they could consume an immortal soul and gain knowledge from it meant that the Order was forced to change so many of its protocols if a member was suspected of dying from one. As far as he knew, the last succubus hunt had been in the early nineties. If they wanted experience, they needed old blood to tackle it head on, not these fresh-faced rookies. \"Let's follow protocol on this. I don't want that Class 4 slipping through our hands.\"\n\n\"As you wish, Master Cyrus.\" Amida fiddled with his phone, sending pictures out to the field team.\n\nCyrus left them behind and stepped outside into the forest. He took a deep, cleansing breath of mountain air, hoping it would chase away the last of his nausea. The Reclamation team was ill-equipped for demon hunting, and they would likely send a separate team for the succubus.\n\nHowever, the Reclamation team he was running had been amazing to work with. Not only had they tracked down several of Unearthly Delight's sales, but they had then burned the place to the ground to hide their theft of the remaining items and altered the memories of its employees. Most of the objects they had been unable to track past a cash sale had been Class 1 artifacts, minor things that couldn't be used to disrupt the natural order of the world without unforeseen applications. They had been able to anecdotally identify most of the sold items using the Order's resources, and the flask was considered a Class 2 item only because it regenerated a flammable substance.\n\nHis mind went back to the succubus. What was her involvement about? And the woman who had been with her, was that her master? It was rare to find a succubus working with anyone other than her master, and now he wondered if the blonde was a patron of Unearthly Delights who had ended up with a succubus companion. If so, why bother tracking down Ray Scotes and killing him?\n\nThe more he thought about it, the more likely it was that he might end up involved after all. Figuring that the team had everything well in hand, he got back in his car and opened up his laptop. A countdown was running on the screen, and he quickly typed in his password, then put his finger on the scanner. The device wasn't just mapping his prints, but doing a quick read on his magic field as well. Just like a fingerprint, each person's field was unique, and not something a shapeshifter could account for.\n\nThe laptop unlocked. Contained in the computer was a massive database of everything the Order knew about magical creatures, and he started typing in the window below.\n\nHunting A Succubus\n\nHe pressed enter and waited for the pages to load. A knock on the glass came from Amida, and Cyrus rolled the window down to speak with him.\n\n\"Yes, Brother?\"\n\n\"We were wondering what you think we should do with the home.\"\n\n\"Hmm.\" He looked past Amida at the cabin. It was in a remote location, and there was no negative energy stuck to it. Based on their search this morning, Scotes had no next of kin, or anybody who would come looking for him, which meant they could quickly take possession through the proper channels.\n\n\"Put a message through to Acquisitions.\" The location could either be used for field training, a weapons cache, whatever acquisitions thought best. If Acquisitions didn't want it, they could burn it to the ground easily enough.\n\nAmida nodded, then went back to deal with his team. Cyrus was going to roll up his window when a thought occurred to him. \"Brother, please come back. Show me the picture of the succubus again.\"\n\nThe young man handed over his phone and Cyrus scowled. He should have realized it immediately. Maybe it was old age, or his mind was on other things, but there was no mistaking that these were the women he had seen in his hotel elevator earlier that very morning.",
        "\"Brother Amida? I would like you and your knight to join me.\" He waved to the driver, who came walking over. \"Also, please inform the Counsel that we are investigating a lead regarding the succubus.\"\n\n\"I thought we needed permission?\"\n\n\"We do. Tell them I'm taking lead on this hunt.\" Cyrus chuckled to himself. \"By the time we get there, it will already be granted.\"\n\n<center>\ud83d\ude08\ud83e\udddf\u2640\ufe0f\ud83c\udfcd\ufe0f</center>\n\nThat's right, the Order is back! (for those of you who are curious, Cyrus starred in Last of Her Kind, available now on this website for the low, low price of some of your free time!)\n\nI really hope this tale sparks some joy for you, because it's about to get a whole lot messier with plenty more lesbian hookups, dream diving, and maybe (if you're good), another familiar face.\n\nDon't forget to leave some stars, comments, or even send me a feedback letter (which I do read, but don't always respond). Much love to all of you, make sure to be kind to yourselves and each other, and big hugs to those who need them!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "zombie succubus",
        "sperm consumption for regeneration",
        "secret organizations",
        "magical items",
        "raunchy cabin sex",
        "demon tail used like a dildo",
        "plenty of snark",
        "hfhm spin-off",
        "lesbian sex",
        "monstergirls"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/dead-and-horny-ch-02"
}