{
    "title": "Mutual Benefits Ch. 13",
    "pages": [
        "Whatever Morgan and I had planned to do that night, it was thrown away. Swiftly, it was replaced with the both of us gathered around Morgan's phone, FaceTiming with a blubbering, panicked Taylor.\n\n\"I don't know what he's going to do,\" Taylor cried over the phone. \"I'm such a fucking wreck.\"\n\n\"We'll get through this. Being as calm as you can will help you so much,\" Morgan instructed in her stern tone she took when she was taking control. \"Take deep breaths.\"\n\nTaylor nodded, her jittery face coming through our video feed. \"This is so fucked. Why the fuck did Milo have to do this?\"\n\nMorgan and I exchanged looks. Morgan turned back to the phone and sighed. \"Earlier at the party, he gave us an ultimatum,\" she began. \"He told us to tell Joel ourselves or he would. He gave us twenty-four hours.\"\n\n\"So... so it was your fault?!\" Taylor's voice gathered heat.\n\n\"Stop that right now,\" Morgan ordered with a flat voice. \"Don't piss off your only allies. He went back on his word and told Joel within eight hours.\"\n\n\"Don't fucking talk down to me!\" Taylor rasped from the other end. \"You should have told me immediately!\"\n\nMorgan turned to me. \"Grab my pointer finger if she ever gets too much. I'll hang up on her,\" she dryly and emotionlessly whispered to me. She turned back to the phone and cleared her throat. \"You were always at his side at the party. We never had the chance. We would have told you when we had a plan. Remember Milo caused this shit, not us.\"\n\n\"Can I ask... why Milo caused this shit?\" I interrupted. \"Like, yeah, there are shades of grey happening here, but what we did really doesn't affect Milo.\"\n\nTaylor sobbed for a bit but Morgan remained silent, letting Taylor speak. \"Milo just fucking does this,\" she exasperatedly replied. \"Do you need an explanation for every little thing, Quinn?\"\n\n\"This time, yes, I'd like one. We're in the weeds because... what? He wanted to play vigilante?\"\n\n\"Honestly, that's basically it,\" Morgan answered. \"Milo just likes getting involved. He always wants to be the main character. He gets to decide what's right and wrong.\"\n\n\"I don't get why a person would do that when it doesn't affect them,\" I replied.\n\n\"Then, sorry, you don't understand drama yet,\" Morgan flatly replied. \"So maybe you should take notes. People do this. He implicates his friends, he feels superior, he also gets ahead because his friends got taken down a peg. It's not that hard to understand, and you're slowing us down by asking why.\"\n\nI looked at Morgan, a little hurt. She sighed and said, \"This is a stressful time. I need you to just nod when stuff happens. Asking why and trying to pretend it shouldn't have happened doesn't help.\"\n\nI looked to the screen to see Taylor wasn't saying anything, agreeing with Morgan through her use of silence. Frowning, I sat back as Morgan continued.\n\n\"What has Joel said to you?\"\n\n\"He hasn't said anything,\" Taylor replied. \"Like, nothing. Milo just let me know that he talked to him. I'm too fucking scared to say anything to Joel right now.\"\n\nMorgan sighed stressedly. \"Okay,\" she conceded.\n\n\"I'm thinking, like, I shouldn't say anything until Joel talks to me. I do not want to bring it up first. Maybe he'll just want this whole thing to go away.\"\n\n\"I agree,\" Morgan replied emotionlessly. \"I don't think it'll just go away though. It never just goes away. So, Milo told you? How'd that go down?\"\n\n\"If I could punch him in his stupid fucking face, I would,\" Taylor growled.\n\n\"I know the feeling,\" Morgan replied. \"We can't let him think he can just get away with this shit. Let Crystal and Lexi know.\"\n\n\"Okay,\" Taylor agreed.\n\n\"Just the important stuff,\" Morgan insisted. \"Anything that will make them get on our side. Leave out the dumb shit, lie if you have to. Last thing we need is for them to take his side.\"\n\n\"Um, duh, I fucking know,\" Taylor replied with an annoyed tone. \"Then what? Wait for Joel to blow up?\"\n\n\"Wait to see what he does, either to you or in public. Damage control mode, Taylor,\" Morgan seemed to remind her, as if that was a phrase they practiced time and time again. I still said nothing. \"And no more seducing Quinn. Even if I'm in the room.\"\n\n\"Um, I didn't want to have sex with him anymore anyways,\" Taylor replied in a weirded out voice.\n\nIn response, Morgan just shifted the camera to just show me on screen. I was already in a foul mood, and Taylor's reply didn't help. \"Oh, go away,\" I bitterly told the camera, not sure which girl I was talking to.\n\n\"Keep me in the loop, Taylor,\" Morgan said in a quiet voice. \"I love you but I want to stop talking.\"\n\n\"Love you too, girl,\" Taylor replied. \"Thank you so fucking much for having my back on this.\"\n\nWith that, Morgan turned off the call, headed for the bed, and faceplanted on top of it. Still feeling upset at a few things that happened there, I remained in my corner, scowling away. Neither of us spoke for what felt like minutes.\n\n\"You were out of line,\" I finally said to her.\n\nShe took her face off of her pillow. \"You were asking pointless questions and being naive,\" she replied. \"We didn't need that.\"\n\n\"I'm not a child,\" I replied.\n\n\"Children keep asking 'why' over and over. Milo's a dick, Milo did a dick move, you don't need to know why.\"\n\n\"I'd like to!\" I protested. \"It concerns me. This is literally a rumor or whatever about me.\"\n\n\"What would it solve knowing every little intricacy?\" Morgan challenged me, now sitting on her bed. I was sitting on her floor. She had the high ground. \"Like, actually, what would it solve? Are you planning on mapping him out? Figuring out the magic thing to say that'll make all this go away? You're so... obsessive, Quinn. You don't need to be.\"\n\n\"Obsessive?\"\n\n\"You keep obsessing over weird things. You obsess over this idea that I can't possibly like you. You obsess over why a thing happens when the rest of us are trying to figure out where to go from here. You obsess and overthink and it just gets so old so fast,\" Morgan complained.\n\nMy breathing quickened. \"I... well... that's not fair,\" I weakly replied.\n\n\"That's another thing children always say,\" Morgan noted.\n\n\"Stop! Just stop it!\" I almost shouted. \"Stop calling me a child!\"\n\nMorgan stared at me for a while. \"I'm really stressed with all this. I'm probably going to get caught up in this too, you know. Just because I'm dating you. You and Taylor are reaping what you sow. I have to deal with this too when I didn't actually do anything wrong.\"\n\n\"You just told Taylor to lie to her friends. You can't say you're doing nothing wrong,\" I countered.\n\n\"To cover up a mistake you two made, I told Taylor to do what she was going to do anyway,\" Morgan replied with a huff. \"And I'm doing it to help her, and you. It's so tiring.\"\n\n\"If I'm not worth it, then break up with me, why don't you?\" I replied angrily, feeling my cheeks getting hot.\n\n\"Don't be dramatic,\" Morgan replied calmly. \"If this is you breaking up with me, just say that. But I'm not breaking up with you just because you aren't immune to drama and cheating.\"\n\nIt felt weird for her to say that. I really wanted to fight her on that last point; it felt like I wasn't involved in cheating at all and happened to be sucked into that world. But in a weird, unfair way, what Morgan was saying wasn't untrue. I just stared at her, my chest rising and falling in anger.\n\n\"Are you breaking up with me?\" Morgan asked.\n\n\"No,\" I grumbled.\n\n\"Good. That would be a really dumb way for this to end,\" she replied.\n\n\"Do you have to do that?\" I asked.\n\n\"What?\"\n\n\"The 'I know everything and will explain to you how it all works' thing,\" I replied, standing up and walking over to the bed.\n\nShe scooted over to give me some room, eyeing the floor. \"What are you talking about?\" she asked quietly.\n\n\"You say these, like, absolute statements. It's not like you'll say you think I'm not helping, I'm just 'not helping.' You'll even explain how dumb a certain method of breaking up would be.\"\n\n\"It was a joke. I was trying to lighten the mood. I'm just not very funny, I guess,\" Morgan replied in a defensive voice. \"I've always talked like this.\"\n\n\"I've always wanted to find out why people do what they do.\"\n\n\"Yes, but that was exhausting me.\"\n\n\"Well, the way you talk down to me is exhausting me,\" I reasoned.\n\nShe huffed. \"I'll try to stop myself if I see myself doing it,\" she replied quietly.\n\nI nodded. \"I'll try to save the backstory questions until after we've solved stuff.\"\n\nShe nodded, and we didn't say anything for a long time. After a bit, Morgan slowly lowered herself onto me, her head ending up on my chest. Neither of us said anything, but eventually, she looked up at me right as I looked down at her. We both chuckled softly, and before we knew it, we were shyly kissing each other.\n\nOur lips parted and our eyes fluttered open. She slowly removed her head from my chest and grabbed her phone, groaning to herself. \"This fucking sucks,\" she grumbled.\n\nI sighed in response, checking my watch. \"I should probably talk to Doug soon,\" I told her. \"I think we both could do with some alone time anyways.\"\n\n\"Yeah, probably,\" Morgan replied, looking at me and giving me a hesitant smile.\n\n***\n\n\"So you two understand our situation?\" Morgan asked Crystal and Lexi.\n\n\"Maybe if you get me a McChicken, yes,\" Lexi joked.\n\n\"Lexi, can you focus for one minute?\" Morgan all but barked.\n\n\"Yeah, yeah, we get it,\" Lexi dejectedly mumbled.\n\n\"It's gonna be hard to get the group together after this one,\" Crystal whined. \"And summer just started! Whatever the fuck happened, it better have been worth it.\"\n\n\"The best way to beat it is to let Milo know it hasn't affected us,\" Morgan reasoned, looking around the McDonald's we were in, as if he could be there. \"The sooner he sees how little power he has, the sooner he'll stop his little games.\"\n\nCrystal's eyes lit up with an idea. \"We could just go back to calling him Sadie, just for a week, see if-\"\n\n\"Absolutely not,\" Morgan immediately replied. \"Crystal, I'm disappointed in you.\"\n\n\"It was just an idea,\" Crystal mumbled, sitting back in her seat.\n\n\"Where's Taylor, anyway?\" Lexi asked.\n\n\"With Joel,\" Morgan clarified. \"She's barely left his side for the past twenty-four hours.\"\n\n\"Like an obedient puppy,\" I mused.\n\n\"Whatever works,\" Morgan added. \"Okay, fuck it, I want more, I'm getting a McDouble. Lexi, w-\"\n\n\"McChicken!\" Lexi reminded her. \"You still owe me for last time.\"\n\n\"I paid that back, but whatever,\" Morgan huffed. \"And for the cute one?\"\n\nMorgan turned to look at me, followed by Crystal and Lexi. I turned to Morgan and smiled. \"Didn't you already ask Lexi?\" Morgan and I shared a giggle. \"Um, maybe my own McDouble. Thanks, s-sweetheart.\"\n\n\"Nothing more romantic than getting fat together,\" Crystal remarked flatly. Morgan flipped her the bird as she walked off, leaving me with Crystal and Lexi. \"Nah, but seriously,\" Crystal continued. \"You two are really cute together.\"\n\nLexi ignored Crystal and Morgan, and gave me a knowing smirk. She liked it when anyone called her cute. \"Thanks, Quinn,\" she sang.\n\n\"Anytime,\" I replied. As annoying as her joking exterior could be, I actually found Lexi surprisingly easy to get along with. She tended to act up in crowds, but if you could engage her in what felt to her like a one-on-one, she actually was a pretty fun person. \"So, speaking of, how did you and that blond boy get along at that last party?\"\n\nLexi rolled her big blue eyes. \"Sucked,\" she answered annoyedly. \"He had no idea what he was doing. Went way too fast, way too rough, and was only interested in cumming and going.\"\n\n\"Coming and going?\" I asked.\n\n\"C-U-M,\" Crystal clarified.\n\n\"Oh,\" I replied. \"Sorry to hear that.\"\n\n\"So am I,\" Lexi grumbled. \"Just once I'd like to get a guy that knows how to fuck. Or is at least nice about it. Taylor got Joel, apparently he has one of the biggest dicks in the school.\"\n\nI rolled my eyes. Lexi was, if nothing else, Lexi. I sipped away at my unsweetened iced tea as Lexi continued.\n\n\"...And Morgan got to have Quinn, who is a fucking gentleman and ate her out even though she never blew him!\"\n\nI instantly choked on my tea. It took a good few seconds to clear my throat. Lexi looked a little surprised at my reaction, but Crystal just gave me a 'here we go' face. \"...What?\" I finally asked with a little heat.\n\n\"No? Am I wrong?\" Lexi asked innocently.\n\nRight on cue, Morgan came back with a tray of food, and I looked up at her. \"Who are you telling about our sex life?!\" I asked with a little more anger to my voice than intended.\n\nMorgan shot Lexi a look. The normally stubborn Lexi just turned pink and shrunk down in the presence of Morgan. Morgan herself just sighed. \"I was tired, I was talking about you, and it slipped out. It was just to Lexi and Crystal. If you want I can try to keep it more private.\"\n\nCrystal broke into a smile. \"Damn girl, you gave in really easily!\" she commented. \"Is Quinn some sort of secret super dom or something?\"\n\n\"Yeah, handcuffs and blindfolds,\" I joked as Morgan sat down. \"No. We just both know when something upsets the other. I don't see why a couple talking out things that upset them in a healthy way means she's whipped or something.\"\n\nCrystal rolled her eyes. \"Cheesy,\" she remarked.\n\n\"I dunno,\" Lexi softly said, staring longingly at us. Morgan gave me a kiss on the cheek as she handed me my food. \"I think it's kinda sweet. Like, we want a guy that'll dick us down, but Morgan and Quinn are just vibing as a couple already. No drama.\"\n\nMorgan chuckled. \"We get our fair share. Remember, Milo's not here right now for a reason.\"\n\n\"A reason you won't even fully tell us,\" Crystal added.\n\nLexi, as usual, was only focusing on her point. \"How did you do it?\" she asked.\n\nI paused, looking from side to side, realizing that she was asking me. \"Huh? How did I do what?\"\n\n\"Everything. How did you get Morgan, how did you know she was so... like, how did you figure out how to communicate as, like, a couple so quickly?\"\n\nI blushed a little and scratched the back of my head. \"Honestly, she got me more than I got her,\" I confessed. \"She came to my work a few times and I-\"\n\n\"You work? Where?\" Lexi asked.\n\n\"GameStop. So she came into my work and kept asking about stuff.\"\n\nLexi turned to Morgan and gave her a mischievous grin. \"You don't even like games!\"\n\nMorgan simply gave her an all-too-innocent smile in response, then began to eat her food. We all dove in, not saying anything for a bit.\n\n\"I just wish I had what you have,\" Lexi bitterly mumbled after a bite.\n\n\"You'll get there,\" Morgan replied. \"Honestly? Maybe you need to slow down. Stop chasing after guys and letting them come to you.\"\n\nLexi scoffed. \"Yeah, because guys just fucking love me,\" she replied, continuing her bitterness.\n\n\"They should!\" I decided to weigh in. \"I mean, you're bubbly, you're not afraid to be yourself, and...\" I turned to Morgan. \"I assume it's okay if I compliment her looks?\"\n\nMorgan gave me an 'Oh, Quinn' smile. \"Of course it is,\" she replied. \"I mean, we've discussed stuff like that already.\" She gave me a wink with the eye that was facing the booth, away from the two girls.\n\nMy smile faded. What was she saying? We definitely didn't discuss rules for complimenting her friends. The closest thing to that was... She definitely didn't mean that.\n\nHer smile slowly faded, noticing mine was gone. Quickly, I turned back towards Lexi and lowered my head towards my food. \"You're, uh, y'know... v-very pretty.\"\n\n\"Ouch,\" Lexi replied flatly. \"It sounds like it hurt to force yourself to say that one.\"\n\n\"I was about to say,\" Crystal laughed. \"If you're gonna lie, don't be, like, obvious about it.\"\n\n\"I'm still nervous telling people they're pretty,\" I lied coolly. \"Still a nerd at heart, I guess. You know how the stereotype is with nerds around girls.\"\n\n\"I thought you hated the stereotypes,\" Crystal noted.\n\n\"I hate them because they're true,\" I joked. \"Sorry, Lexi. I meant it. You're really pretty, and you're, y'know, very... attractive. You'd make any guy happy if they just got to know you, but high school guys are too shallow for that. I call you cute a lot, I'm not just saying that.\"\n\n\"You're a sweet guy, Quinn,\" Lexi replied. \"It fucking sucks that you're taken.\"\n\n\"I'll take that as a compliment,\" I replied, turning back and kissing Morgan on the lips like our weird moment didn't happen. \"And hey. Morgan took a chance on me. I wasn't exactly popular. Who knows, maybe you'd be surprised if you went for a guy outside of your normal friend circle. If he's cute, go for it. So what if he's in... choir or something?\"\n\n\"If he's in choir, he's either gay or way too into himself,\" Lexi commented.\n\n\"Well then don't go for the choir guys, I guess. I hope you get what I'm saying.\"\n\n\"Yeah, I do. Thanks, Quinn,\" Lexi replied with a slight smile. She was clearly still down in the dumps a little, but that couldn't be helped. I reached for my burger again, when I felt a vibration in my pocket. I shouldn't have cared too much, but now that Talyor, Joel, Morgan and I were in a bit of a situation, I made a habit of checking my phone whenever it went off. If Taylor had an update for us, time was of the essence.\n\nIt wasn't from Taylor. It was from Morgan.\n\nI think the only thing that turns me on more than you being assertive is you supporting my friends. I cant wait until were alone \u2764\n\nI turned to Morgan and gave her a sheepish, no doubt goofy smile. She smiled back, subtly snaked her hand down to my leg below the table, and sexily squeezed my inner thigh.\n\n***\n\nIt was weird, coming home and not needing to account for my actions. Mother was true to her word, actually putting effort into not caring about where I went and when I'd be back. I adhered to her ground rules, but out of nowhere, she just gave me freedom.\n\n\"I'm home!\" I bellowed, feeling confident. Crystal drove us home and Morgan and I spent the ride back kissing in the backseat. I wasn't sure how much PDA we could get away with around her friends, but to be fair, I was given a weird first impression of how much they could take when Morgan gave me a handjob in front of Taylor.\n\n\"Ah, Quinn,\" Mother commented as I practically danced into the kitchen. \"You have fun with Morgan?\"\n\n\"I did!\" I answered chipperly. \"We went out with her friends and got food.\"\n\nMother stopped and looked at me. \"What kind of food?\"\n\n\"Fast food,\" Kevin's voice rang from the living room. \"McDonald's, correct me if I'm wrong.\"\n\n\"You weren't even there, how would you know?\" I shouted back.\n\n\"I got a nose for this stuff. I can smell you from here,\" he laughed.\n\n\"Yeah, well, ditto. Take a shower,\" I grumbled. I turned back to Mother, ready for it.\n\n\"Do you know the kind of food they serve you at a place like McDonald?\" she began. By the time she was finished talking, the sun was visibly closer to setting. At the very least Kevin was kind enough to jump in and debunk her points when she mentioned the pink slime. \"Besides,\" she finished, \"you always say the food here is better anyway.\"\n\n\"I do, and it is!\" I acknowledged. \"It's more like... a social contract.\"\n\n\"A what?\"\n\n\"A social contract,\" I repeated in Mandarin. \"If I'm there they want me to eat the food there.\"\n\n\"Oh,\" she said simply. \"Seems dumb. They didn't make the food, some pimply minimum wage-earner did. Peh.\" She walked off as if the conversation was over. That was as close as it ever came to understanding with Mother.\n\nWith her out of the way, I walked over to the living room couch and sat down. \"You're an asshole,\" I began with a grin.\n\n\"My day? Oh, you know. This and that,\" he replied smugly. I watched him play his video game for a while until my phone vibrated with a text from Lexi. I began talking to her more than him.\n\nI stopped when I heard him chuckling. \"You still hold your phone up to your face when you text, like a nerd,\" he pointed out.",
        "\"I am a nerd,\" I countered.\n\n\"You certainly took my advice to heart for someone who hated it so much,\" he mused, still looking at my phone. \"You put yourself out there and now you've fully integrated yourself into Taylor's group.\"\n\n\"It's kind of a non-option when you're dating one of them,\" I replied.\n\nHe shook his head, partly at me, partly at his character's untimely demise. \"The things you think of as non-optional are things their boyfriends never even consider,\" Kevin coolly replied. \"It's why they like you and actually text you and shit.\"\n\n\"Come on, dude, that's giving me too much credit, I got lucky,\" I said uneasily.\n\n\"How many times have you seen Joel hanging out with the group?\"\n\nA shiver ran up my spine when I heard that name. I would have liked to have felt the full gravity of his point, but I was too busy thinking of how easily he could beat me up.\n\nKevin took my silence as acceptance. \"There, yeah, see?\"\n\n\"Are you trying to tease me about being a good boyfriend?\" I asked, annoyed.\n\n\"Um, no,\" he flatly replied. \"I'm teasing you because you still hold your face up to your phone when you text, like a dork.\" He slapped my phone from behind to prove his point. It instantly hit my face.\n\n\"Ow,\" I complained. \"Let me see how you text then. I'm sure Mr. Popular has soooo many text messages to answer.\"\n\nHe gestured around. \"This is how I text,\" he told me. \"Keep 'em on their toes. You see this pocket?\" He pointed to a bulge in his pocket. \"Inside this pocket rests about seventeen messages, all eagerly waiting a response from...\"\n\nI waited a bit with half-lowered eyelids. \"...You?\"\n\n\"Bingo. Yours truly. The one and only. Anticipation, Quinn. People wanna talk to me, and I let them know that it's not gonna be so easy.\"\n\n\"But... what about if you really want to talk to them too? If Morgan messages me, I want to know what she said and I want to say something back.\"\n\n\"So, you're in what we in the biz would like to call the 'idealistic' stage of texting,\" Kevin began. I grinned in disbelief. Much like with Mother, the sun would be a lot closer to setting by the time he had finished his speech.\n\n***\n\n\"Like a fuckin' truck,\" Crystal finished as we walked into Morgan's house.\n\n\"What an idiot,\" Morgan replied lowly, shaking her head.\n\n\"Was he okay?\" I asked.\n\n\"After what he did to me? I didn't ask,\" Crystal replied with a vindictive tone. She flipped her hair past her ear and paused. \"But yeah, I texted him like an hour later. Not, like, 'I miss you' text him. Just regular text him.\"\n\n\"You still tried to go out with him like two weeks later,\" Lexi pointed out.\n\n\"Lexi!\" Crystal practically whined. \"Can you fucking keep quiet about anything I tell you?\"\n\n\"It doesn't help that you all talk so loud you give Godzilla a run for his money,\" Doug quipped from the living room.\n\n\"Hey Doug!\" Crystal sang, not even caring about his dig. If I understood her, or even people, correctly, she seemed to have a major crush on him. She and Lexi quickly moved over to him.\n\nThey left just Morgan and myself giggling and looking at each other as we heard the inevitable ring from the living room. \"Hey, hey, knock it off, I'm trying to play here!\"\n\nMorgan and I took the opportunity and stole a kiss. It turned out Crystal had a limit, and she wanted us to cut it out with the \"high levels\" of PDA around her. Lexi never complained though -- probably too busy being jealous of us.\n\n\"You got two hot girls coming up to you, and you can't even pause your stupid game?\" Lexi's annoyed voice rang.\n\n\"It's Bloodborne, you can't pause,\" Doug angrily responded.\n\nMorgan instantly rolled her eyes when she saw my attention spike. \"Bloodborne?\" I asked quickly, and walked over to view the screen. Sure enough, he was playing my favorite game, and struggling, though to be fair he was at a hard part and he had two girls clamoring for his attention.\n\nMorgan caught up to us and clapped her hands once. \"Alright bitches, let's go. Doug's off-limits anyway.\"\n\n\"You don't own him, you can't speak for him!\" Lexi playfully replied.\n\n\"Doug's off-limits,\" Doug repeated. \"There, you heard it from me.\"\n\n\"Deadbeat,\" Lexi angrily name-called.\n\n\"Child,\" Doug replied, with a suave smile. This was a game to him, and by he looks of both of their faces, he knew how to get under Lexi's skin without her even coming close to getting under his. \"Besides, you could do better than a deadbeat like me.\"\n\n\"I'm starting to think not,\" Lexi replied, a hint of genuine sadness to her voice. She got up off the couch, waiting for Crystal, and turned to me. I gave a sad, lipless smile at her, and she gave me the same smile back.\n\nWhile Crystal attempted to keep talking to Doug, I turned back towards Morgan and leaned in close to her ear.\n\n\"I don't mind to imply or rush anything, but-\"\n\nShe turned to me and kissed my nose, giving me a chastising smirk. \"I know I promised it would be just us tonight. I'm working on it,\" she clarified. I smiled in return. Hanging out with her friends was fun, but... but to be frank, Morgan was hot and I wanted to fool around with her.\n\n\"C'mon, you two,\" she turned back to the other girls, going so far as to grab Crystal by the wrist. \"Time to go.\"\n\n\"You just want to be alone with Quinn so you two can spend some alone time together,\" Lexi complained.\n\n\"No we don't,\" Morgan lied, reassuring her.\n\n\"Jealous?\" I asked, speaking at the same time as Morgan.\n\nMorgan, in response, gave me a bit of a shocked face that quickly turned into a half-smile. \"You are getting too confident too quickly, mister,\" she chuckled. \"Anyway, out.\"\n\nIt took a little more convincing for the others to leave, but once they did, Morgan shut the door and sighed. \"They're a handful sometimes,\" she said simply.\n\n\"I guess,\" I chuckled. A beat of silence passed between us and I glanced off towards the stairs. \"So, should we...?\"\n\nMorgan gave me the same half-smile. \"Too confident, too fast,\" she repeated. \"Actually...\" she continued in a teasing voice. \"I was thinking of spending some time with Doug first. Care to join us on the couch?\" She gave me a wink as she walked past. I could only laugh and join her.\n\nSoon, the three of us were on the couch, idly chatting and watching Doug attempt to beat the Orphan of Kos, one of the most challenging boss monsters of the game. Something inside me wanted to dislike Doug, but...\n\n\"You're okay, Doug,\" I said out of nowhere.\n\nI didn't register that he'd just died to the Orphan and my comment came across as sarcastic. \"You know what, fuck you, he's harder than he looks,\" Doug replied in the heat of the moment. He cleared his throat and chuckled a bit, as if to let me know he didn't mean anything.\n\n\"Oh, Quinn knows Bloodborne,\" Morgan told him, nuzzling into me. \"It's the game he plays the most often.\"\n\n\"You are so hot when you listen to me,\" I quipped and gave her an innocent kiss.\n\n\"Yeah, I'm training you to be hot in the same way,\" she quipped back.\n\n\"Hey, I listen to you!\" I protested.\n\n\"I know, I know, I was just joking, just kidding around,\" she soothed me. \"Hey, I'm going to get a drink. Like, a 'drink.'\" Either of you want any?\"\n\nDoug got to a safe point in the game and turned to us. \"Uh, is that a good idea?\" he asked. \"Is he staying over?\"\n\nI turned to Morgan. \"I probably can't stay tonight of all nights,\" I told her, then turned back to Doug. \"But it's summer. I actually kind of like walking home. If you want to drink, have fun, no need to give me a ride home.\"\n\n\"You sure?\" he asked me, fully serious. \"I don't want to leave you in a bad situation.\"\n\nI shrugged. \"I'll be sober anyways, so sure, why not?\"\n\n\"Hey, cool.\" He turned to Morgan. \"Surprise me.\"\n\nMorgan disappeared into the kitchen while I watched Doug play. \"So you're really good at this game, huh?\" he asked.\n\nI nodded, then realized he couldn't see me nod. \"Yes.\"\n\n\"So why aren't you bossing me around and backseat gaming me?\" he asked jokingly.\n\n\"Because my brother does that to me all the time and I hate it,\" I honestly answered.\n\nEyes on the screen, Doug started laughing a low, slow laugh. \"Yeah, alright,\" he eventually said. \"I hear ya.\" With that, Morgan reappeared from the kitchen, putting two glasses of orange juice down onto the TV table in front of us.\n\n\"Screwdriver,\" Doug observed. He took one of the glasses and took a swig. \"I said, 'surprise me,'\" he added jokingly.\n\nMorgan just stuck her tongue out at him, took a swig from her own drink, and cuddled back into me. Around half an hour later, the glasses were empty and the drinks were starting to take effect -- Morgan's hands were getting a little more adventurous, and Doug was making more and more preventable mistakes. Luckily, he was also getting into it, so we could get bolder and bolder on the couch next to him.\n\nMy lips detached from Morgan's, both of us looking each other in the eyes, trying not to make a sound, both with our lips and Morgan from her throat. Below a blanket we'd found, my hands also got a little adventurous (though nothing too crazy in front of her brother) and occasionally the sounds of dying Fishmen would drown out a small whimper emitted by Morgan.\n\nRight around the time I got up the confidence to whisper in Morgan's ear if she wanted to take this to her room, we heard an \"ugh\" from Doug, coupled with the setting down of the controller on the table. Instantly, my hand retracted from inside her shirt but stayed under the blanket, trying to play it cool.\n\n\"You alright?\" Morgan asked, a little hazily. I smirked at her. She smiled shyly back.\n\n\"I just fuckin' suck at this game, man,\" Doug replied dejectedly. He eyed me and his head made exaggerated movements from the controller to me, back and forth. He was clearly as much of a lightweight as his sister.\n\n\"Alright, Quinn. Here ya go,\" he told me, as if he was holding out until I was ready or something. He passed the controller to me.\n\n\"Yeah? You want me to beat the Orphan for you?\" I asked.\n\nDoug chuckled and closed his eyes. \"If you can,\" he simply said.\n\nI shrugged meekly. \"Okay.\" I felt around the controller with my hands -- a little sweatier than I was used to, but I could make it work.\n\nMorgan pulled me back and whispered in my ear, \"You'd better beat it on the first try,\" teasingly.\n\nI smiled back at her. The harder the boss, the more time I dedicated to learning it, inside and out. And bless her, even though Morgan had no idea what was going on, she was enjoying this power play between her brother and myself.\n\nMy smile got bigger when I got an idea. \"Hey Doug.\"\n\n\"Yo.\"\n\n\"How many blood vials do you think I'll need to beat the Orphan of Kos?\" I asked innocently.\n\n\"Like, all twenty?\" Doug answered, confused.\n\n\"Okay,\" I simply replied.\n\nMorgan audibly giggled as Doug understood where I was going with this. \"Oh, no way, dude. Come on. You can't play me like this, he's one of the hardest bosses in the fuckin' game.\"\n\nDoug, especially drunk, was hesitant. He seemed to play Bloodborne like any other Souls game. But Bloodborne was fast and demanded you to be faster. It was calculated and demanded you out-calculate it. It favored the bold. From the moment I entered the arena, it was like the living room faded from around me. There was no Morgan or Doug anymore. There wasn't even a Quinn. There was only the Orphan of Kos and its Hunter.\n\nThe world went by in a blur for the next few minutes. I wasn't even sure how many. All I knew was that my reflexes told me what buttons to hit and my eyes practically never moved from the center of the screen, seeing from the corner of my eye the movements made and how I needed to respond. I didn't regain consciousness until after I heard the telltale groan of the Orphan falling and the Kos Parasite appearing onscreen.\n\nI exhaled, as if for the first time, then regained my sense of self. \"So, how many blood vials did I use?\" I asked Doug, half-bragging, half genuinely unsure.\n\n\"Two,\" Doug muttered in disbelief. \"Jesus. You know how to play, I'll give you that.\"\n\n\"I was aiming for zero,\" I admitted. \"I guess I don't really use your build much, so-\"\n\n\"Alright, alright,\" Doug cut in, snatching the controller back. \"You got your time to brag.\"\n\nA little nervous given his reaction, I sank back to the couch seeing Morgan give me a look. I knew that look well -- Morgan liked when I put on little displays like this. Less 'Bloodborne,' more 'showing Doug up,' but she was definitely giving me the 'fuck me' eyes.\n\nEnter, stage left, who fucking else. Right when Morgan and I were about to kiss, we heard the front door slam and Morgan immediately looked back in bewilderment.\n\nDoug was less fazed. \"Who is it?\" he called.\n\n\"It's me,\" Taylor's tired voice ran through the hallway.\n\nAt the sound of Taylor's voice, Morgan's head snapped back into place, a look of pure frustration and nothing else on her face. Without even looking at me, she pushed the blanket off of herself and got up at the couch to meet Taylor, who was already walking past the hallway.\n\n\"Hey Doug -- oh. Hey, Quinn.\" She began her sentence with, granted, no enthusiasm, but at least energy. When she got to me, her voice went all quiet. I didn't even know which look I should have been giving her at that moment.\n\n\"Hey Tay,\" Doug replied.\n\nIn a voice barely audible enough for me to hear, Morgan told Taylor, \"Hey, it's good to see you, but uh...\" She hugged Taylor politely to complement her point. \"Could this wait? I kinda wanted to be with Quinn alone tonight.\"\n\nTaylor, not gifted with subtlety, answered with a regularly-volumed voice. \"No. I need to talk about Joel stuff with you. You need to know.\" She slowly turned to face me, and just looked at me. Morgan turned and looked at me too, then back to Taylor. \"I think... Quinn should know too?\" Taylor continued, with a lot less confidence.\n\n\"And this can't wait?\" Morgan asked.\n\nTaylor shook her head no and, winning Morgan's approval, motioned for me to come upstairs with them. I sighed, said my goodbyes to Doug, and followed the two of them into Morgan's room.\n\n\"Okay, so what is it?\" Morgan asked in a borderline impatient voice.\n\n\"So,\" Taylor began, waiting for me to shut the door. \"This is about Joel.\"\n\n\"Yes, we know it's about Joel,\" I cut in. \"You said that at the door.\"\n\nTaylor looked at Morgan, probably expecting Morgan to defend her, but deflated like a balloon when she saw Morgan's face reflecting mine. She sighed angrily. \"Okay, so basically, Joel doesn't believe Milo, I think.\"\n\n\"What?\" both of us asked at the same time.\n\n\"Like, I think this is okay,\" Taylor continued, as if that's all we needed to know.\n\n\"What do you mean, you 'think' he doesn't believe him?\" Morgan asked.\n\nTaylor started fiddling with her hair. \"So, like, Joel was high when Milo told him, and I think he, like, thinks it's a joke. Or thinks he doesn't know if it's a joke.\"\n\nMorgan had to deal with the confusing details and the reality of the drink hitting her harder by the minute. \"Wait... he told you this?\"\n\nTaylor nodded enthusiastically. \"He went up to me and was telling me, like, how he doesn't think Milo is funny, and how pathe- no offense, how pathetic Quinn is and stuff.\"\n\n\"Yeah, who could possibly take offense to that?\" I sarcastically grumbled, pacing around the room. \"This doesn't sound like it concerns me. Can I leave?\"\n\nMorgan looked back and forth from Taylor to me, eventually stopping with a cold look at Taylor. \"Yeah, Taylor, you need to stop pretending his feelings don't exist,\" she told Taylor in a cold voice, a voice I didn't think Morgan had. \"He's had to deal with so much bullshit.\"\n\n\"And I haven't?!\" Taylor erupted. \"Do you want me to tell you what happened or don't you?\"\n\n\"You could have sugarcoated it, or even implied he was wrong for saying that,\" I shot back with a louder voice than I expected. \"You could have defended me, whether it was with him or with your own friend group half the time when I started hanging out with you more regularly. You could have treated me like more than just your plaything.\" At this point my voice was barely above a growl. \"You could have chosen not to order me to crawl.\"\n\nWeirdly, none of my accusations seemed to hit her hard until the last one. The last one broke her. She started breathing more rapidly, although I couldn't tell if it was anger or trying to stop herself from crying.\n\nMorgan reacted to my final words immediately too. \"Crawl? What do you mean, crawl?\" She turned to Taylor. \"What does he mean, crawl?\"\n\nTaylor said nothing.\n\nMorgan turned back to me. \"Is this a metaphor or-\"\n\n\"It's literal,\" I answered.\n\nMorgan's look of concern deepened. \"We're discussing this afte-\"\n\n\"No. That's between me and Quinn,\" Taylor said, her first words since my outburst.\n\nI waited until Morgan turned back to me. \"We're discussing this after she leaves, yes.\"\n\n\"Quinn, what are you doing?\" Taylor asked. \"Trying to look like the tough guy for your girlfriend?\"\n\n\"If you don't think what happened was wrong, you should be fine with me discussing that with her,\" I simply answered.\n\n\"I think it was private,\" she sharply objected. A beat of silence passed. \"Defending you would have made it look more like Milo was right, and Joel was, like, believing nothing happened.\" She paused. \"He looked for you on Facebook and Instagram later. I saw it. He couldn't find you.\"\n\n\"I don't have a Facebook,\" I replied. \"Or an Instagram.\"\n\n\"Don't tell her about the crawl thing,\" Taylor quickly spoke. \"Please. I won't do it again.\"\n\nAnother beat of silence passed. Taylor's eyes were definitely welling up now.\n\n\"The fuck is going on?\" Morgan asked.\n\nI had a theory. \"She thinks this is the one thing that, if you knew fully about it, would make you consider actually leaving her,\" I answered. \"For some reason, she thinks this is the thing.\"\n\n\"All the more reason I should know about it,\" Morgan replied darkly.\n\n\"I was just curious about -- I got too carried away with something. If you talk about it I'm fucking leaving,\" Taylor continued.\n\nI studied her face. \"Why do you think this is the one thing...?\" I trailed off, looking from one girl's face to the next. I felt like I didn't have every puzzle piece here. Or I did, but I just didn't get why.\n\nI thought about Morgan's words from earlier on in the week. Obsessive. Don't get obsessive. You don't always need to know why.\n\nI shook my head. \"You know what? Forget it. This conversation is going nowhere. Let's move on. So Joel thinks it's a lie, but clearly has his doubts if he was trying to look me up online. What's the next step?\"\n\nTaylor sniffled a little. \"Well, like, first of all, I don't think I should talk to you or be seen with you anymore.\"\n\nI threw up a hand and began pacing again. \"You really enjoy this, don't you?\" I asked rhetorically.\n\n\"I never said I liked it,\" Taylor admitted. \"And I'm sure if it's the group it's fine. If we're in a group it's fine. More than fine, since you're Morgan's boyfriend.\"\n\n\"Which means I'm going to have to lie about how open we were, in case he asks me,\" Morgan noted, even while tipsy. \"He might see me as the only neutral third party.\" She cleared her throat and nodded. \"And what happens after that?\"\n\nI stole a look at Taylor. \"I think it's become abundantly clear there's not going to be an 'after that' for us, huh Taylor?\"\n\nThe first tear. The first convulsion. The dam broke. Taylor was crying. Taylor's cute chipmunk face was twisted into bitter pain, and I was standing there, looking down on her, trying not to feel sorry for her. God damn, did she ever make it difficult.\n\nMorgan felt sorry for her first, moving in for a hug, which Taylor accepted. I sighed and quickly followed. \"Anything I can get you?\" I asked annoyedly, crossing and uncrossing my arms.\n\nTaylor turned to Morgan. \"Ha-have y-you been dri-inking?\" she asked.",
        "\"Yes,\" Morgan admitted.\n\n\"Can... can I...\" Taylor mumbled.\n\nMorgan looked at me. It probably was not a good idea to drink alcohol to help with sadness, but I wasn't sure whether it was wise to voice that here. She looked back at Taylor. \"Look, Tay, I get that this is hard for you, but Quinn and I wanted one night, just one night where we could-\"\n\n\"I won't butt in,\" Taylor protested. \"I can s-sleep on the couch, and you and Quinn could have the bed...\"\n\n\"I won't be staying tonight,\" I interjected.\n\nTaylor looked at me with sad eyes. \"You're leaving.\"\n\n\"He was already planning to,\" Morgan helpfully pointed out. \"He's okay walking home. He says he likes it. It's why Doug and I felt it was okay to drink.\"\n\n\"Are you lying...?\" Taylor asked innocently.\n\n\"No Tay, we're not,\" Morgan reassured her. \"I'll get you a drink, okay?\" She got to her feet, somewhat unstably, and leaned on my shoulder. \"Watch over her,\" she whispered to me.\n\n\"How?\" I whispered back, but Morgan was already leaving. I waited until she was out of the room, then squatted down to look at Taylor.\n\nWatch over her, my ass. I had Taylor alone, and wanted to make good use of it. \"Why is it so scary if Morgan knows about that in particular?\" I asked. I didn't always have to know why, but here, I think I earned it.\n\nTaylor looked up at me and sniffled a few times. \"Sh-she cares a lot...\" she began, realizing I wasn't going to let up. \"About... the people she... loves most.\"\n\nI stared at her for a bit, the cogs coming together. \"You're worried she likes me more than she likes you at this point,\" I pieced it together, barely above a whisper.\n\nTaylor didn't say anything. She just stared at me.\n\n\"And if you took advantage of me, even if I went along with it, she'll side more with the person she likes more,\" I concluded, standing back up. \"And it'll be easier for her to cut out the one she likes less.\"\n\nI could see Taylor's chest heaving. Something I said clearly resonated.\n\nAgainst all odds, this was the moment I actually felt sorry for her. I shook my head slowly. \"Jesus, Taylor, you're damaged. That's not how this works at all.\"\n\nTaylor didn't get a chance to answer. Before she could, Morgan popped back into the room with two drinks, one clearly more full than the other. She gave the full one to Taylor and sat on the bed, keeping the other for herself. Understanding something transpired while she was gone, she turned to look at me.\n\nI turned to the door and shut it, then gestured to both of their drinks. \"Take a drink,\" I ordered both of them. They looked confused, but complied. I let a few seconds of silence hang in the air before looking at Morgan.\n\n\"When Taylor and I were fooling around-\" I began, cut off by Taylor making a sound and moving towards me. I held up a finger and paused. \"Taylor, one more interruption and I leave right now I'll call Morgan at a random time and tell her the whole story. And believe me, I'll be more generous telling it while you're here.\"\n\nTaylor hesitated, then moved back, never saying a word.\n\nI slowly lowered my finger and looked back towards Morgan. \"When Taylor and I were fooling around, neither of us knew what we wanted. She was experienced, and I wasn't. It began under the guise of her teaching me, but it kept evolving. Eventually, Taylor found out she liked not being the one told what to do, for once. She used me -- no, that's not fair -- she used the sexual stuff we were doing as an outlet to get back at her asshole boyfriends for never treating her well. She wanted her control back. So she was in control, and kind of... dommed me, I guess. At its most extreme, she'd sit at one end of the room and order me to crawl to her, to... you know... eat her out.\"\n\nI let some silence pass. Both girls looked at each other, but said nothing. \"I always went along with it,\" I continued. \"At the time I didn't see anything wrong with it. After the fact, I felt so embarrassed and ashamed about it... I felt like it was unfair to do that to me, when I was just learning what sex was. It felt like she was taking advantage of me, even when I was saying yes.\" I paused, and looked at Taylor. \"And I think I'm not the only one that feels bad about it in hindsight.\"\n\nYou could hear a pin drop in the room when I paused. \"The bottom line is, I learned about sex from Taylor. But I'm learning about communication, love, and healthy sex... from you.\" I turned to Morgan, then back to Taylor. \"Because... I'm not too sure Taylor has learned any of that stuff from a boyfriend in the first place.\"\n\nTaylor was crying again, but crying silently. I walked over to her and put a hand on her shoulder, waiting for her head to rise. It took a full minute but her gaze rose to meet mine. I didn't have a sympathetic face; I wanted my words to speak for themselves. \"I'm not angry at you,\" I told her. \"I'm angry at everyone that did to you what you did to me. But it doesn't mean I forgive you.\"\n\nI got up and turned to Morgan, who clearly looked some kind of angry at Taylor. \"But also, this isn't your sin to forgive,\" I told her. \"She's scared that if you knew, you'd walk out of her life forever. She thinks there isn't room for both of us in your heart.\"\n\n\"Quinn...\" Taylor managed.\n\n\"I know what I'm doing,\" I told her. \"On some level I get it. I feel like you do now, Taylor, constantly. I always feel like I crossed boundaries but never knew it before. I'm an overthinker. An obsessor.\" I looked Morgan in the eye. \"Sometimes it has its benefits.\"\n\n\"I guess I didn't think that was a benefit that could apply to both of us,\" Morgan replied jokingly with a dry throat. \"I'm allowed to be upset at Taylor.\"\n\n\"Yes, but only I get to forgive her,\" I clarified. \"What she did, she did to me. You care about me, but you care about her too. I want to get over this with her on my own terms, even if you're only helping.\"\n\nMorgan looked down and sighed through her nose. \"I don't like it...\"\n\n\"You don't have to.\"\n\n\"But okay. If that's what you want,\" Morgan acknowledged.\n\nNone of us said anything for a while. Eventually I turned to Taylor. \"Do you want to say anything?\" I asked.\n\nShe had finished her drink by now. \"I don't want to s-stop talking to you, Quinn,\" she admitted. \"Just... please, believe me. And I don't want to lose you, Morgan.\"\n\n\"I would have gotten angry, maybe even had a talk like this,\" Morgan objected. \"I never would have left you.\"\n\nI gave Taylor a smug look and she chuckled through her tears. \"Shut up,\" she told me, shoving me playfully.\n\nThat was the last thing she said directly to me that night. Shortly after, Doug went to bed, so the three of us went downstairs to the couch, and the two girls made small talk until Taylor fell asleep -- surprisingly quickly, actually. Once it was clear she was asleep, Morgan motioned with her head to head back to the bedroom.\n\n\"What a soap opera,\" she commented.\n\n\"Yeah, no kidding,\" I replied. \"I'm, uh, sorry for the big preachy speechy over there.\"\n\n\"It's not healthy to apologize for your feelings, Quinn,\" she replied, moving in for a hug. \"Are you okay?\"\n\n\"Oh yeah. I have been for a while. It felt wrong, but... you know, it wasn't violating. Not everything that feels bad is rape or something,\" I replied. \"I would certainly not say Taylor raped me. And she seemed to care about consent too. She just... yeah. Control.\"\n\n\"Yeah,\" Morgan replied. \"I assume that topic has... really turned you off, huh?\"\n\nI smirked. \"Any reason why you're asking?\" I asked with a twinkle in my eye.\n\n\"Well, I... Morgan huffed. \"Yeah, I've gotten blueballed like seven times tonight. Sue me.\"\n\nI pretended to think about it. \"You know, I bet it would be really easy to get me back into the mood if you wanted...\"\n\n\"You sure you're okay?\" she clarified.\n\n\"Are you? You're... you've been drinking.\"\n\n\"Shut up, we both know I wanted you all to myself tonight since I was sober,\" she replied.\n\n\"Yeah, well...\"\n\n\"Well nothing.\" She moved in for a kiss which I gladly accepted. Instead of the kisses being tame at first, Morgan demonstrated how desperate she was this evening, showing me that she really did want me this badly for hours. She moved in for the kill, using her lips and tongue to do battle with mine, passionately grinding herself up against me as our teenage hormones let loose with each other.\n\nShivers of excitement ran down my body as I felt my girlfriend grinding against me, and they only amplified when Morgan broke off the kiss and whispered in my ear, \"I want to please you tonight... I want to give you a blowjob.\"\n\n\"A-are you sure?\" I asked, nervous. She stopped grinding on me and looked me in the eyes, biting her lower lip and nodding. She looked so beautiful like this. The most beautiful girl in the school. And she was grinding up against me, eager to suck my cock, moaning into my mouth. I was so fucking lucky.\n\n\"Oh, Morgan...\" I was moaning as her kisses went from my lips to my cheeks, right down my jawline and neck.\n\nShe moaned back, when she could, when her mouth wasn't busy. She continued kissing down my body, over my shirt, before we both decided with a chuckle that that was dumb and removed my shirt, as well as opening my fly, making my pants more easy to access.\n\nOnce my pants were open, she paused. \"Would you like my... my boobs out for this too?\" she asked, a cute little drunken slur still on her tone.\n\nI smiled in decision. \"Actually... bottomless,\" I answered, gesturing to her pants. \"I have a feeling at least one of us is going to be fingering you after this.\"\n\n\"Mmmh, I like that answer,\" she purred, already working her pants off. Pretty soon, her unshaven slick teenage cunt was staring me straight in the face. Even from my eyes' distance away, it was clear just how aroused she was. It helped significantly that she matched my look of lust with a look of her own. She wanted me. My dick ached and pulsed in my pants, and she only grew wetter and wetter.\n\nWithout another word, she sank down to her knees, with me getting in front of the bed, sitting down on it. Our eyes met as she pulled my dick out of my pants, and we just smiled warmly at each other, like a good couple. A power couple.\n\nOnce my cock was freed, she tore her gaze away from my eyes to look up and down my shaft. She was looking at it like it was the best dick in the world. I was stupid to doubt myself. I was focusing on the wrong things.\n\nMorgan was a girl I could feel good obsessing over.\n\nStill being tipsy, she did not start with subtlety, to the point of making my sensitive self almost jump with the sudden, borderline painful sensation. She hungrily licked me from the base to the tip, and finished off the lick with a gentle kiss at the end, which gave both of us a giggle. She licked again, moaning as she did, and then again, more eagerly. Before long the licks ended with bigger and bigger kisses, and it took a short amount of time for that to become her making out with my dick.\n\nThe feeling of a talented pair of lips on my cock was indescribable. I get that I'd experienced blowjobs before, but Morgan felt like a whole new experience. The amount of passion and teenage hormones probably didn't hinder anything. I couldn't hear it, but I felt myself talking, possibly babbling, as Morgan played with me. She didn't try to stop me, she didn't try to shush me. Hell, I think at one point she switched to a handjob and just... listened.\n\nHer mouth skills were definitely something to be admired, as if I didn't know that from kissing her. I wish I lasted longer than I did, but to be fair, she was clearly good at this and I felt feelings for her I realized I had never felt for a person before. I could feel every nerve in my body tingling, and a wave of anticipation washed over me, like I was going over the hill of a roller coaster or something. I felt my body start to lose control, and my limbs shook. Morgan was noticing, and was really trying to make a good effort to go the last ten yards, which was definitely rewarded.\n\nSparks clouded my vision. I was cumming inside Morgan Jones' mouth. Holy shit. My girlfriend. My sweetheart. This was it. I made some vivid (and probably incoherent) sounds, my body spasming, my entire body lighting up like a firecracker on... well, on New Years.\n\n\"Oh my Godddd Morgan...\" I moaned. \"Fuck, you're amazing.\"\n\nMorgan waited until the time seemed right to pop her mouth off of my dick and breathe through her mouth again. Tears were running down her eyes, but she was smiling. Happy. We both were. She got her partner to climax, like I did with her. Wasn't it a wonderful thing?\n\n\"I'm so happy I'm with you...\" I said, just above a whisper, cradling her cheek. It seemed weird to get sentimental with cum leaking from the corners of her mouth and tears streamed down her face, but from the smile she gave me back, I knew it was a sentiment we both felt. I could have stayed like this forever. We hopefully could stay like that forever.\n\nIn that moment, everything -- Taylor sleeping downstairs, paranoid Joel, controlling Milo... all of it was secondary. What mattered the most was us. We were here, we were real, these feelings were real, and nothing was going to stop us.\n\nThat said, we were more than expecting a couple of... complications to pop up along the way."
    ],
    "authorname": "BashfulScribe",
    "tags": [
        "nerd",
        "teen",
        "eighteen",
        "asian",
        "chinese",
        "popular girl",
        "high school",
        "school"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/mutual-benefits-ch-13"
}