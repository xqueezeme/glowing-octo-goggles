{
    "title": "The New Principal Ch. 22",
    "pages": [
        "\n\n22.\n\n\n\nAfter a quick shower for the both of us, we arranged ourselves back in the library with a pot of good strong black tea.\n\nTess had draped my robe oh-so-strategically over her marvelous body, and I was back in sweats.\n\nShe had already taken down a big tumbler of water so she could sip a little more reservedly at her tea as she thought how to begin her story.\n\n\"I'll say this, Mister Ben Lee, you've certainly caused more than a little shakeup in my world.\"\n\n\"To be fair, I think I'd win the prize for having their world shaken up.\"\n\nShe laughed, but there was concern in her expression.\n\n\"Dammit, Ben. I really didn't know how this all way going to go. Okay. So, here's the big picture. I used to be on the Board of Directors here at... Well, I suppose I should call it the Bright Hall Academy now. I rather like the name change, by the way, and all the other changes you've been making. Being on the board was nice. I was able to serve without being in town permanently, so it didn't impact my day job.\"\n\nI leaned back, getting the impression that this wouldn't be the first bombshell Tess was going to drop that evening, but deciding to hold off on my questions.\n\nShe paused, as if waiting for me to interrupt. Then she smiled.\n\n\"I was... removed from my position several years ago. The specific reasons aren't important right now, but, well, the main thing is that Melissa Sten found out about my little trick. She was... is one of the most brilliant people I've ever known. She wanted to figure out how it worked... biologically, physiologically. I agreed, but then her methods went a little too far. And that's saying something. I'm no saint, you know that much about me. But Melissa... She... well, she thought that the key to the whole thing was to be found in the brain chemistry of the individuals involved. She decided that I was too important to risk, but other people? She said she just wasn't getting the data she needed. She wanted to do more... invasive examinations. We had a falling out. I refused to be involved in the... vivisection that would be required to get the data she said she needed.\"\n\nTelling this story was taking a toll on Tess. She paused to sip her tea with slightly trembling hands. I was convinced that there were a good many details being left out, but I wasn't sure whom she was trying to protect.\n\n\"Anyway, she had a good deal of clout on the board. She isn't that great about reading people. I think she assumed I could be pressured. It wasn't pretty. I haven't been back here since.\"\n\nShe looked out the window. It was totally dark out, but it was as if she could see the whole town.\n\n\"So Melissa knew about the trick.\" Tess nodded and sipped tea as I talked it through. \"Makes sense that she would leave whatever cushy job she got in Seattle to come back then. Mr. Grant is her little minion, and he must have gotten in touch with her, and got whatever he used to spike my drink from her. Convoluted, but makes a sort of sense. That also explains the experiments that he's been using on the students.\"\n\n\"Experiments?\"\n\nI filled her in on the details of what had been going on and what I saw the previous night from the camera in the campus nurse's office.\n\n\"That's what I had expected. It seems like she is continuing her experiments, trying to synthesize the trick, with some success too. Back when I was working with her, she never had anything so effective. But something must have gone wrong with the mickey that they dosed you with. I don't think she would purposefully take the trick away from you. On the other hand, that might make you safer. If you don't have the trick, then there's no reason to bleed you or crack open your head.\"\n\n\"Well, that's something, anyway.\"\n\n\"Does she know you've lost it though?\"\n\n\"I don't think so. The way Mr. Grant was talking on the phone, it seemed like he wanted me back in the hospital. I guess I would be more accessible to them there?\"\n\n\"Yeah. So that will need to be step one. Sten and Grant need to be convinced that you've lost the trick. That should make things a little less dangerous, but it also might let us get you back on campus, which would be important for our next steps.\"\n\n\"Important for what? I mean, I'm not lying, I'm happy to have you here, Tess, but what are you planning? Why are you actually here?\"\n\n\"Ah. That's another part of the story.\" She looked at me and smiled weakly. \"I was the one who got you hired on here. I was completely stunned when I met you back at your old school. Imagine it. I had never in my life run into anyone else who had the trick, but there you were, right in my son's school. One little 'pop' and you're pushing my buttons like I've never imagined. I don't deny that all that time with you was a lot of fun, but also, I had to be sure it was real. You never asked what I did as a job, did you?\"\n\n\"I did ask. You never told.\"\n\nShe chuckled. \"I'm with the FBI, well, more or less. Ever since I left here, we've been trying to find a way to arrange a closer look at the good Dr. Melissa Sten. She has quite a long and sketchy history: fraud, extortion, embezzlement, and a good deal of other stuff we don't know too much about. So, when I found you, I found a way to lure her out.\"\n\n\"So I was bait?\"\n\n\"Yes. I imagine you'll hate me, but you were too perfect to pass up. Didn't you wonder how everything happened so quickly and easily? The hiring, the interview? The previous principal was awful. All we had to do was expose some of his more egregious legal liabilities and they had no choice but to fire him immediately. Then I was able to encourage the board to hire you on.\"\n\nI stayed silent, trying to think this through.\n\n\"And it's worked. You brought her back. She's running her experiments, and if all goes well, we'll get you installed back as principal and Sten and Grant bundled off to prison.\"\n\n\"For what? What can you arrest them for?\"\n\n\"Ever wonder what is going on at the spa? That's the reason I had to come and visit you so quickly. Things didn't go well for her up in Seattle, and she's in a bind. She got in deep with some dangerous folks, and I think she's decided that the way to clear her accounts is to make a big sale.\"\n\n\"The students?\"\n\n\"The students. What you heard Grant talk about fits with the information my team has been putting together over the past weeks. They have to be working on another version of the synthetic trick that's designed for the victim, and that's probably going through the spa workers. She's promised a group of young docile virgins to a truly horrific group of individuals. I think that's probably the reason you're still around.\"\n\n\"I'll take the fall.\"\n\n\"You'll take the fall. But if she doesn't have your trick, I don't think she can make her new synthetic trick. She may have the students, but they won't be as docile as she's promised.\"\n\n\"This is way too much for me to process. You're FBI?\"\n\nShe chuckled again and had a bit of trouble swallowing her tea.\n\n\"That's the part of this that you can't get your mind around?\"\n\n\"No... maybe that's the least absurd part of this. I guess I should be relieved. You'll be coming in and taking over then?\"\n\n\"Well, I am with the FBI, but it's not clear how much support I'm going to be able to call on. I can't be seen here at all, and we need a lot more evidence before I am going to be able to convince my side to bring people in and round folks up.\"\n\nI leaned back and sighed.\n\nTess stood up and stretched.\n\nShe looked at her watch.\n\n\"Dammit. I need to be out of here in a few hours. Can I get some sleep before I leave?\" Then she smiled wider. \"Can I trust you not to take advantage of a defenseless naked woman in your bed?\"\n\n\"I would love to take advantage of your defenselessness. But if you need sleep that's fine. The nurse is showing up tomorrow morning, so I need to be suitably groggy. I'll skim through the videos in the basement.\"\n\nShe rewrapped the robe around her and started toward the door.\n\n\"So you don't hate me?\"\n\n\"I'm not sure yet. Probably not as strong as hate...\"\n\n\"I'm not a nice person, really. But I can see it in others. You are a good man, better than most. And I do like you, and I am sorry that I put you in this position. Not sorry in that I regret it. It was the right thing to do, but sorry that it has cause you so much grief. And I'm also very glad it's you here. I can't think of anyone else who would have handled this like you have.\"\n\nAnd with that, she headed off to bed.\n\nI went down to the camera room, and I scanned through recordings, but it was almost impossible to focus. Luckily, it didn't seem like much was going on. Veronica left her camera covered. Jennifer wasn't in the teacher's office much at all. Even Mr. Grant didn't even show up as far as I could tell.\n\nIt was very early morning when I climbed out and went to reheat some stew for breakfast. I kept all the lights off downstairs as I went to work. Tess confirmed that someone was out there watching, and there was no need to give whoever it was any reason to look more closely.\n\nEverything ready and on a tray, I went back up to find a lovely nude woman in my bed.\n\nI set the tray down on a bedside table and nudged her.\n\n\"Tess... Time for you to head out.\"\n\nShe rolled over on her side and mumbled something, then froze.\n\n\"God dammit. I was having the most beautiful dream.\"\n\nShe twisted over onto her back and then skootched to sit up, leaning on the headboard. The sheet dropped away, exposing her generous breasts.\n\nShe giggled like a much younger woman.\n\n\"It is so nice to have a young man around who will look at me like you do. You know, without me flipping the switches in his head.\"\n\n\"Call on me any time you need to be ogled. or fondled. or just straight out fucked.\"\n\nI smiled and picked up the tray, placing it down on the bed.\n\n\"I know you need to get out of here, but I heated up some breakfast for you. If you haven't been sleeping much, I assume you haven't been eating well, either.\"\n\n\"It's not from that nurse is it?\"\n\n\"No, I haven't been eating any of that. This is Kimberly's homemade stew.\"\n\n\"Ah, Kimberly. I'm so happy to hear how you've promoted her and put her in charge. She always was the best brain in the entire office.\" She picked up a spoon and dug in, and she ate quickly. \"I do need to be out of here right away. What are you doing with the meals?\"\n\n\"Kimberly, Veronica, and Jennifer are taking them home and putting them in the disposal.\"\n\n\"Good. If you don't mind, I'll take one with me. I might be able to figure out what's in it, I assume it's one of Melissa's private concoctions.\"\n\nIn a flash, her bowl was clean and she was up out of the bed facing away toward the window. She stood there for a moment, totally nude. I was still getting used to reading the trick, but I didn't need it to sense that she was trying not to get turned on.\n\n\"I need to leave right now.\"\n\n\"Yes, you do.\" I stood up and walked behind her. \"You need to leave now, because I can feel you. I know that if you don't leave now, it's not going to be easy to.\"\n\nI gave her butt a friendly slap, and her reaction was to hop up on her toes and purr at the same time.\n\n\"Leave. Get dressed and go.\"\n\nShe groaned in frustration. \"Right. God, I can still feel how you stretched me out, it's just divine... Promise me a rematch?\"\n\n\"Any time but now.\"\n\n\"Fine.\"\n\nShe quickly got dressed and then pulled something out of her pants pocket and handed it to me.\n\n\"Ms Rai is taking care of all your tech, right?\"\n\n\"Right.\"\n\n\"Good. She seems more than capable. This little thing is like an old text pager. It can do messages, but nothing else, and only between you and me. It should be secure enough. You can show it to her, she'll get a kick out of it, but don't go waving it around.\"\n\n\"How much can I say about you?\"\n\n\"Keep it among your little hottie harem but no further. They know everything else anyway, right?\" I nodded. \"Then those three can know as much as you do.\"\n\n\"Oh, what's the deal about whoever's watching my house?\"\n\n\"Nothing big. It's just an off-duty trooper, older dude. Just keep doing what you've been doing. Don't give him any reason to get interested. I'll be in touch.\"\n\nAnd with that, she slunk downstairs and out of the house.\n\nWhen Kimberly showed up shortly after, I tried to give her a brief rundown, but we really didn't have the time. She was so relieved that I had the trick back, we didn't get much further than that. I was wanting to show her first hand what I could do, but we both thought better of it. She said everyone was going to try to be there Friday after classes. I needed to be totally unconscious when the nurse showed up and Kimberly was going to rearrange the kitchen to make it look like she had been keeping me on my diet.\n\nI hadn't realized how tired I really was, but I was out like a light just as Kimberly started working downstairs. I must had dropped into deep sleep quickly, because I was well and truly groggy when I felt someone shaking my shoulder.\n\n\"Mr. Lee? How are we feeling today?\"\n\nHappily, there was no need to dissemble disorientation. I mumbled incoherently, cracking my eyes open.\n\nSuddenly there were fingers peeling my eyelids back and a penlight shining bright.\n\n\"Ohh... jeeze...\"\n\n\"Well, Kimberly, he does still seem slightly better. I'm not sure about the lack of energy, though. The new meals should pep him up a little bit though. Why don't you go down and heat up one of the new breakfasts and we'll make sure he gets it down.\"\n\nI glanced over at Kimberly and saw her eyes widen with anxiety. I didn't see any good way around it, so I nodded as subtly as I could.\n\n\"Ohh... Okay, Mrs. Agate. I'll... I'll be back in a moment.\"\n\nShe didn't seem comfortable, but she left the room and I heard her go down the stairs.\n\nMrs. Agate went about her business, taking my temperature and checking my pulse again.\n\nI closed my eyes and tried to seem more out of it than I actually was.\n\nI felt the cold metal of a stethoscope on my chest for a moment. I tried to breathe deeply and slowly.\n\n\"Now, Mr. Lee, roll over on your side.\"\n\nWhen I remained unmoving, she put her hands under my shoulder and hefted me over. She was a lot stronger than she looked.\n\nI felt her hand with the stethoscope slide up under my t-shirt and the cold metal rested on my back.\n\nIt seemed strange, though. She kept one hand on my back for quite a while. Then I heard something else behind me. It sounded like she was fumbling around on my bedside table. I tried to keep as calm as possible while listening with all the focus I could muster.\n\nI didn't hear anything else that I could decipher before she pulled her hand back. Then again, just like during her first visit, she snaked her hand down into my pants and grabbed my cock. She squeezed it hard and then withdrew her hand.\n\nI grunted involuntarily, and decided that I wouldn't be able to feign unconsciousness too much longer.\n\n\"Huh?\" I rolled over on my back. \"Ah... Mrs. Agate. How am I doing?\"\n\n\"About the same, I'm afraid, Mr. Lee. But remember, it's only been a few days since you left the hospital. We knew the recovery would take some time.\"\n\nRight then Kimberly came into the room with the tray of food. There was a burrito on one plate and a couple of bowls of fruit alongside three glasses of water.\n\n\"Oh, Kimberly, that was very thoughtful of you, but remember, he can't have anything outside his menu.\"\n\n\"Oh, yes, I know Mrs. Agate. The fruit is for you and me.\"\n\n\"You are so kind. I already had breakfast, but I suppose I could have a nibble. Mr. Lee, the burrito is my favorite. It's got egg and vegetables and even my own homemade salsa. All on the permitted list from the nutritionist.\"\n\nThen she looked at me expectantly.\n\n\"I'm... really not that hungry right now. I'll eat it after I wake up a bit.\"\n\n\"No such thing. Kimberly, you've been making sure he eats everything, yes?\" She nodded. \"Right. You need to eat this whole thing so you're ready to have your lunch in a few hours. Eat up!\"\n\nI wasn't really sure how to get around it, so I took a modest bite. It really did taste good, especially for having been reheated. Kimberly looked at me anxiously, and Mrs. Agate didn't take her eyes off of me as she popped various pieces of fruit into her mouth.\n\nSo I ate it.\n\nOnly after the last bite was swallowed did the nurse stand up and gather her things.\n\n\"Well, now I'm nearly late. You need to learn to eat a bit faster, Mr. Lee. Even if you don't feel you have the appetite, the only way you'll get better is by getting that fuel into your body.\"\n\nShe reached down and grabbed a final grape from her bowl.\n\n\"Thank you again, Kimberly, for helping out with this. Please do continue to monitor what he's eating.\"\n\n\"Of course, Mrs. Agate.\"\n\n\"Very well. I'll see you both next Tuesday, then. Goodbye, Mr. Lee. I hope to find you in better shape with each visit.\"\n\nWith her things in her bag, she left the room, with Kimberly following her. When she picked up her thermometer from the bedside table, I saw my cellphone lying there, face up. I always put the phone face down so the notification light doesn't bother me. So that's what she was fiddling with over there.\n\nKimberly came back in the room after escorting Mrs. Agate out.\n\n\"Ben, what...\"\n\nI cut her off with a sharp gesture of a finger across my throat. I pointed to the phone and tapped my ear.\n\nShe seemed to understand, at least partially.\n\n\"What... what are we going to do with you?\" Kimberly finished rather lamely, her face contorted in frustrated confusion.\n\nAn idea had been rolling around in my mind, but I needed time to think about it. I put my finger to my lips and pointed again at my cellphone.\n\nKimberly nodded.\n\n\"Well, I need to get in to the office. Let me get the food tray. Do you need anything?\"\n\n\"No, I don't think so. I'm going to try to get up, listen to some podcasts and maybe clean up a bit. Could you drop by after work though?\" I raised my hand and wrote a \"V\" on it with my finger. I looked at her with raised eyebrows.\n\nKimberly nodded in understanding. \"Yes. I can come by for a little bit. I'll see you then.\"\n\nShe flashed me a worried look, but turned and left.\n\nI glanced over at my phone to see if anything looked different. It was face up and it was placed at an angle. I was always kind of anal about putting the phone down just so. Mrs. Agate had clearly moved it.\n\nI was still awfully tired, and knew I needed to get some rest. The next few days were going to be dicey. So I snuggled down into my bed and tried to get some sleep.\n\nI woke up in the later afternoon. Still a bit groggy, I dragged myself to the shower. The spray of water brought consciousness around and I started to puzzle my way through the next few steps of my grand return to Bright Hall Academy.\n\nI figured it wouldn't be too upsetting to whoever was watching my house if I were to go be downstairs to fix a bit of a snack, so down I went.\n\nThere really were only a couple of places the house could be watched from, and almost all of the windows that faced those areas were on the first floor. The bedroom, library and other upstairs rooms were basically safe from prying eyes, but down in the kitchen, I needed to be a bit more circumspect.\n\nThat didn't mean I was going to eat more of Agate's prepackaged surprises. I looked in the fridge. God bless Kimberly Adams. The stew was gone, but she had stocked me up on what looked like homemade lasagna. There was even a big bowl-full of salad and some garlic bread. I was a spoiled, spoiled man.\n\nI heated up a portion and poured out some iced tea into a tumbler, then went upstairs into the library to eat. Very gauche, to be sure, but hey, so was I.\n\nI had deliberately left my cell phone in the bedroom, but I grabbed Tess's crazy little pager box. As I started in on my meal, I looked over the pager. It looked a lot like those old Blackberry phones, with the tiny physical keypad, but the screen was just a few lines of black and white text. There was a message waiting for me.",
        "\"Testing. Respond.\"\n\nI typed away on the tiny keyboard.\n\n\"Works fine on my end.\"\n\nI went back to eating and looking over a magazine that someone had subscribed to the house, assuming it would be a while before I got any reply.\n\nBut It wasn't long before a little LED silently started flashing green.\n\n\"Good. Messages automatically delete after five minutes. All okay?\"\n\n\"Nurse came. Had to eat a meal. Any danger?\"\n\n\"Don't use names. 1 meal shouldn't be bad. Sedative plus something else? Learning more. Be more careful. Anything else?\"\n\n\"I think she did something to my phone.\"\n\n\"Not surprising. Get a friend to look at it -- CAREFULLY.\"\n\n\"Will do. All good with you?\" I had other questions, and wanted to know if she was still on the island, but couldn't think of a good way to phrase things obliquely enough.\n\n\"Good enough. Bye for now.\"\n\nI set down the pager. Then I put it in a drawer, under my underwear.\n\nI went back in the bedroom to get my phone.\n\nI looked around on the bedside table to see if anything else had been massed with, but nothing looked any different.\n\nI did have a few podcasts queued up, so I put one on while I gave the phone a once-over. Didn't seem like anything was changed there either. All the apps were in the right places. Maybe I was being paranoid? Wouldn't be the first time, but enough bizarre things had happened to me recently that my perception of normal wasn't reliable anymore\n\nI put on a pot of water for tea and started to clean up, bringing the lasagna plates down and tidying up the kitchen while listening to the podcast.\n\nIn no time at all, there was a knock on the door. I stopped the podcast and opened the door to let Kimberly and Veronica in.\n\n\"Hello, you two. How are you doing?\" I put my finger to my lips again and they both nodded.\n\n\"Hello Princi... Mr. Lee. I brought Ms Rai with me. We were both walking home at the same time. I hope that's okay.\"\n\n\"It's just fine. In fact, it's a real coincidence. I was just listening to a podcast that I think you would really like, Veronica. Do you have a few minutes to just listen to the opening?\"\n\nKimberly had obviously talked a bit with her about the morning's events, and she had guessed the rest.\n\n\"Sure, what's it about?\"\n\n\"Most of it is just history,\" I figured she wanted me to vamp for a bit, \"but this episode they're talking about using different new cameras to read old scrolls that are too delicate to unroll.\"\n\nI kept talking, giving her cover to take the phone and poke around a bit.\n\nIn only a couple of seconds, her eyes widened a bit. She looked at me and nodded vigorously.\n\n\"That sounds really cool. Do you mind if I just sit here and listen for a bit?\"\n\n\"Sure, no worries. Kimberly and I will just go upstairs and chat. Come on up when you've heard enough.\"\n\nVeronica nodded, looping the earphones over, but not in her ears. She popped a tiny piece of equipment out of her bag and attached it to the base of the phone. She looked back up at us and made a shoo gesture.\n\nVeronica is always wonderful and gorgeous and a great friend, but geek grognard Veronica might be the best Veronica. Seeing a friend get serious and do something they love and do well is always a delight.\n\nKimberly seemed to agree. She looked a little haggard from the day's work, but she wore the same smile I did. We both giggled and then headed upstairs.\n\n\"How are you doing, Kimberly?\"\n\n\"Oh, I'm okay.\"\n\nI gave her a look.\n\n\"Fine. I... I don't like to complain. It's bad though. The office has changed so much. It's... I mean, it used to be that I thought everyone in the office just saw me as the dumb help with boobs.\"\n\nI was kind of shocked about all of this that came rolling out of her.\n\n\"I got used to it. I wore longer skirts and bulkier jackets. Even then... I learned how to dodge the hands and just accept the leering. That... That was all in the past. Then you came, and suddenly I was actually running things. I was able to get things done and use my skills. When we started bringing in the interns, I was training them which was so great... I guess I sort of forgot about how bad it was before.\"\n\nI could tell she was getting teared up. I wasn't sure it was the right move, especially after her talking about the previous administration, but I stepped forward and opened up my arms. She immediately walked into my embrace. She hugged me tight and put her head on my shoulder. Her voice wasn't as strong, but she kept on talking.\n\n\"Before it was like I was just an object, just eye candy that could bring coffee. Now... it's almost worse. I know how much I can do now... I know I can run things... even better than they are. And they've taken everything away from me. Mr. Grant still letches out over me and tries to grab me, but it's not even that, really... I just... I don't do anything anymore. Nothing that matters anyway. I just sit there and watch all of the students get beaten down. I have to sign off on all of the demerit slips. I see all the students just crushed down. Just a few weeks ago... Do you remember how happy everyone was at the fashion show? Now everyone just slogs around like drones. And I just sit there and watch them.\"\n\nThrough all this, she was sniffling and lifting her arm around me to wipe her eyes. Eventually she went quiet, just hugging me hard. I let her be quiet.\n\n\"What are we going to do? I need to do something. I can't just sit around anymore.\"\n\nI pulled her away to look at her.\n\n\"We're going to start tomorrow.\" I spoke quietly. \"Firstly, for you, we need you to start getting the Dionysian Club ready for action. We'll need them. I bet we could trust any of them, but I want you to pick out a few of the most trustworthy and able. Get in touch with them and let them know that we're going to take back the campus. No details yet, just be ready.\n\n\"Next, they are only keeping me locked up because they know I've got the trick, and they're eventually going to bleed me or chop me up for parts or whatever to improve their synthetic trick. I'm assuming that Mrs. Agate put some kind of bug on my phone. If that's true, we can use it against them. If they are convinced that I don't have the trick anymore, then I can start moving around a bit more freely.\"\n\n\"But you do have it, right?\"\n\nI looked into her huge beautiful green eyes and gave her libido a gentle nudge. She smiled warmly and pulled me back into a hug.\n\n\"Veronica's already got an in through that slime Grant. I think we can get you in a better position using the bug.\"\n\nRight then Veronica came into the library without the phone. She was smiling like a giddy child. She gave us the situation in a very low voice.\n\n\"Our Mrs. Agate is a naughty, naughty nurse, but not like the naughty nurses in Mr. Lee here's porn collection.\"\n\nI gasped silently in mock indignation.\n\n\"You have a fairly straightforward bug in your phone. It's only audio, but it's pretty good. It automatically streams outbound when it detects voice. I thought you might want it removed, but then, knowing you, there might be more fun to be had. Am I right or am I right?\"\n\n\"You are right, and you are wonderful.\"\n\nI pulled her into our little hug huddle and laid out my plan. The role for Kimberly was going to be rough, and she jokingly whined that she was really getting the raw end of the deal that night, but after a few adjustments based on suggestions from the two women, we agreed to get things going.\n\nKimberly and I were in the bedroom when Veronica came in holding the cellphone. My pants were down and Kimberly was casually licking up and down my cock.\n\n\"That was really cool. I only listened to the first bits, but I'll download it when I get home. Hey Kimberly, I was thinking we might try again tonight. What do you think?\"\n\nShe took one last silent lick. \"I don't know. It's really just not the same. I'm not even really sure about the whole thing.\"\n\n\"Well, he's been sick. Maybe it will come back? How do you feel, Ben?\"\n\n\"I feel the same. It's gone. I mean, I'm more than happy to try, though.\" I tried to sound as slimy as possible.\n\nKimberly sighed in resignation. \"Fine. I'll try. I just don't feel up to it though.\"\n\n\"Ok, Kimberly. Come over here.\" I pulled her up off her knees for effect. \"Look into my eyes. Remember?\"\n\nI couldn't resist playing a little bit with her. I ran my hands up her sides, edging around the sides of her breasts.\n\n\"Can you feel it?\" Veronica piped in from the side. \"Is it back?\"\n\n\"Listen, Mr. Lee, I like you. You were a nice boss, but...\"\n\n\"Look into his eyes! Concentrate, Ben!\"\n\n\"I liked working for you. And I... I mean, I know we... It just wasn't me.\"\n\n\"C'mon Kimberly... don't you feel anything?\"\n\nVeronica joined in the teasing, dropping to her knees and running her hands up Kimberly's legs, up inside her long skirt.\n\n\"I just... no... NO! Mr. Lee, I'm sorry. I don't care what happened before. I just... I don't like you like that. Whatever it was, it's over, ok?\"\n\n\"Kimberly, you don't feel anything? Don't you like it at all? Here, let me...\"\n\n\"Ms Rai! What are you doing? Put your shirt back on!\"\n\n\"Kimberly, don't go! I'm going to stay. I don't need his little trick, and you don't either. Stay with us!\"\n\n\"Ms. Rai, I'm not... I'm not like you...\"\n\n\"You're just a little girl. You need to learn how to be a woman.\"\n\n\"Ms. Rai, get your hands off me!\"\n\nKimberly grabbed onto Veronica's arms and pulled them higher up inside her skirt, clearly needing more contact. I moved closer and glided my hands from her sides over in front to caress her breasts. She shuddered at our touches.\n\n\"Ben, do your thing! Make her stay!\"\n\n\"I'm trying, it's not working!\"\n\n\"Mr. Lee, stop it now!\" She grabbed my hand and pressed it hard against her chest. Her other hand dropped to my still uncovered cock. She started stroking me. Then she nearly doubled over as Veronica apparently found a sensitive spot.\n\n\"You're just a girl. You're scared. You don't have what it takes. You think big boobs are enough to satisfy a man?\"\n\n\"I'm just... Ahh... I'm not like you. I'm not a slut! I'm not... ah... I'm not a skank like you!\"\n\nThen she looked up and caught my eyes. It was like she invited me in.\n\nHer mind was so comfortable to me.\n\nThere were pockets of concern that were new to me. She was clearly more anxious and troubled in general, but I was surprised to see how hot she was right at that moment. It was coming a bit from Veronica's very skilled hands under her skirt, and some from having been licking my cock not just a few minutes ago. But she was also getting worked up just by acting in our little play.\n\nI heard her and Veronica starting to snipe back and forth, but I was luxuriating inside Kimberly's mind. I gently coaxed her lust, she was so carefully in control, but she was enjoying the push and pull. I was pushing her excitement higher, and she was trying to focus on sounding angry. Fortunately, her growing inability to speak clearly could easily be mistaken for a sputtering fury rather than the lust that it actually was.\n\nSuddenly, I shot out of her mind, and found myself looking at both women standing facing each other. It looked for anything like Veronica was going to pounce and ravish Kimberly. Her eyes were echoing the arousal in Kimberly's mind.\n\nThings were silent for a split second. I don't know what the last insult had been, but it must have been a good one. Then without a sound, Kimberly dropped to a knee and reached out to Veronica's waist. In one quick movement, she yanked Veronica's tight pencil skirt and the tights underneath down to her knees.\n\nVeronica's gaze got even smokier. I started to worry we wouldn't end this the way we had planned. Having Veronica standing here with her ass out wasn't anything we had discussed.\n\nKimberly then looked at her and made a 'come on' gesture. She silently mouthed, \"one more.\" and she grinned wildly.\n\n\"So that's what you are, Kimberly? You're just a fucking big-boobed empty-headed twat.\"\n\nThe sound of the slap echoed in the small bedroom. Veronica's eyes went fully wide, then her eyelids dropped down into a shuddering pleasure.\n\nI'm sure it sounded like a slap to the face, but Kimberly was quietly rubbing Veronica's ass in lusty apology. Then she stood up.\n\n\"Well, I'm certainly not some cheap whore. Go ahead and stay with him. You two degenerates belong together.\"\n\nThen she grabbed Veronica's hand and raised it. I saw that it was still glistening from her work between Kimberly's legs. She licked it right in front of Veronica's ravenous gaze.\n\nShe strode to the door and turned back to us. Her face was transformed. I could still see the lust in her eyes. She clearly would rather stay. But her expression was tentative and tender.\n\nI gave her a thumbs up and her face brightened.\n\nShe went through the open door, slammed it, and stomped loudly down the stairs.\n\n\"What a bitch.\" Veronica tried to keep the venom in her voice, but 'bitch' never sounded more like a term of endearment. It was clear to me that she loved Kimberly more and more. That slap on the ass was something new and exciting in her. Perhaps we would need to explore that later.\n\n\"So, it's really gone, then isn't it?\"\n\n\"Yeah. I haven't felt anything since I woke up in the hospital. It's totally gone. You aren't going to leave, are you?\"\n\n\"With her gone, I don't know why I should stay, really.\"\n\n\"I need your help. We don't have to fool around or anything.\" I tried to sound as pathetic as I could. Turns out that wasn't difficult. \"You have to help me get my job back.\"\n\n\"There's no way you're ever going to be principal again here.\"\n\n\"Fine, then I just need the teaching job. I'm in money trouble. I need this job.\"\n\nThen, just on time, the phone rang. I jumped over to the bedside table as well as I could with my pants down and picked it up. I saw Kimberly's smiling face on the screen and felt a twinge of regret as I screamed and threw the phone as hard as I could at the base of the fireplace.\n\nIt shattered into dozens of tiny fragments all over that side of the room.\n\nVeronica and I both stared at the wreck for a moment, then she quietly moved over and knelt down to examine the pieces. She was clearly aware that her skirt was still around her knees as she leaned over and aimed her panty-clad ass at me. She picked something up in her hands, looked at it carefully, then tossed it back to the ground.\n\nShe spun around and sat down on the ground facing me.\n\n\"We good?\"\n\n\"We're good. Except my ass hurts!\" She smiled archly. \"Our little Kimmytoy's getting a bit of spark to her. Very sexy.\"\n\nI walked over to her and lifted her up into a hug.\n\n\"Do you think we sounded ok?\"\n\n\"Yeah, I think so. Here's hoping they bought it. You must be feeling better. You stayed hard through the whole little charade.\"\n\n\"Well, I did peek in her eyes a little bit. That always has an effect on me. The three of you have remarkably dirty minds, you know that?\"\n\n\"Oh, do we? Does that have any connection to being around you so much?\" She pulled slightly back from the hug and ran her hands under my t-shirt over my chest. \"Oh, don't answer that. Tell me about what the hell happened. You've really got the trick back?\"\n\nRather than answer, I looked into her eyes. With Veronica, I hardly needed to look down at all, and now, with her in her high heels, she was even a touch taller than me.\n\nAs I slid into her mind, I saw her smile in happy comfort out of the corner of my eye.\n\nHer mind was as I remembered it. Like Kimberly, she was more stressed than I remembered, but those familiar roiling pools of lust were right where I hoped to find them. It only took a gentle nudge to get them on their way to overflowing. Then I pulled out.\n\nHer smile was a bit more predatory, but she also seemed a bit surprised and disappointed.\n\n\"What? No zero-to-sixty magic orgasm for me?\"\n\n\"Maybe later if you want.\" I kissed her lightly on her nose. \"I think I would rather go old fashioned to start.\"\n\nShe pulled her hands out and lifted my t-shirt off me. Then she knelt down, dragging her fingernails lightly down my body. She gave my cock a hungry look, but avoided touching it as she moved lower. She reached the waist of my pants and pulled them all the way down.\n\nShe sat on her knees there, looking up at me. I was completely nude now, and she was still in her work clothes, except that her skirt was still pulled halfway down.\n\nSitting up slowly, she brought her mouth closer and closer to my cock, but her eyes stayed locked on mine. Seeing the reaction on my face, her smile got wider.\n\nThen she was right in front of me, just centimeters away. She stuck out her tongue. It seemed inhumanly long, and yet painfully, not long enough as she ran it so close to me that I could feel the heat from her mouth.\n\nThen wetness touched the underside and I groaned, my eyes rolling back in pleasure. My cock sprung up, impossibly even harder.\n\nShe echoed me, moaning as she licked, slow and hot, up from my balls to the tip, then back again. She turned her head, twisting to the side so she could pay attention to one side, then the other. Then with meticulous delicacy, she traced the edge of the crown, around in maddening circles.\n\nOur groans were constant. I couldn't tell if she was getting off on licking me or getting off on watching my reaction to her touch, but she obviously was enjoying her work, and damn she was good at it.\n\nI looked down at her, on her knees, her straight black hair cascading down slightly past her shoulders, then falling in front of her face so she had to brush it over an ear. Her expression was set in a happy diligence. Every time I reacted to her ministrations, she would double down, to the point that in only a few minutes, I was reaching my limit.\n\n\"Veronica... Ohfuck... I'm getting close...\"\n\n\"Mmmph... What? You're not going... nnngggg... hair-trigger on me, are you?\"\n\n\"You're just too good...ohh...oh...\"\n\nThen as she saw me start to lose control, she grabbed my butt and jammed her mouth down onto my cock. Her face stretched out obscenely as she pushed as much of me down into her as she could. Then she pulled out, sucking hard all the way and pulled me back in, squeezing my ass as she pushed.\n\nI had no chance. Her eyes were closed tight in concentration, but they opened slightly just in time to see me trip over. My legs locked up and I shouted out an uncoherent wail. Then I was cumming, hard.\n\nShe took most of it in her mouth, but then coughed sharply and popped her mouth off. She gulped, and her face was all triumphant delight as she looked up at me. Then the next ropes of cum shot out, tracing lines of pale white on that flawless dark face. She didn't recoil. If anything she looked happier as I came all over her face.\n\nThen she dove back onto my hyper-sensitive cock and took another several pumps, one hand milking my cock as the other stayed on my ass. She moaned around me and the vibrations sent another light shockwave through my legs, nearly buckling them.\n\nShe pulled off again and laughed.\n\n\"Lightweight! One little suck and you're off like a rocket.\" She giggled and wiped her hand over her face. \"A very creamy rocket though... Eww! All in my hair, too!\"\n\nShe slapped my butt lightly, then pushed me back onto the bed.\n\n\"It's a pity Kimmytoy couldn't stay and lick this off of me... Ah, well... Give me a sec in the bathroom and I'll be right back. Cum doesn't make the best hair-care product, more's the pity...\"\n\nShe started to walk to the bathroom, then spun her ass to me again.\n\n\"Pity too about this skirt. I think Kimberly might have ripped the zipper. I might have to punish her for that.\"\n\nWith that she slid the skirt to the ground, bending nearly in half. I would never be able to forget Veronica's legs in any case, but the way she was bent over in those high heels, dressed from the waist up, but with only black frilly panties and her skirt in a pool at her feet below... that image, I will remember forever. Her legs were long and perfect, the muscles pulled taut. Her panties covered her cheeks, but they were so tight and not entirely opaque. They showed off her ass, but hinted at so many more wonders to be discovered.",
        "She stayed there, enjoying my eyes on her, watching me watch her.\n\n\"Well, you may be Mr. Hair-Trigger, but I'm glad to see you reload fast there, cowboy.\"\n\nI hadn't even realized that I was already hard again. My hand involuntarily moved to stroke myself.\n\nShe flung herself back upright, gathering her skirt in her hands. \"Hands off! I'll be back in no time. Don't you go playing with my dessert, now.\"\n\nAnd with a loving smile, she blew me a kiss and walked into the bathroom, swaying those deadly hips like a woman who knows how.\n\nI slid back onto the bed and put my hands behind my head, lest I be tempted.\n\nIn a few moments, Veronica reappeared from the bathroom, her hair was slightly damp, and she was only wearing those beautiful black panties and a matching silky bra.\n\nI smiled my approving lust as she stalked toward me.\n\n\"So, you want to start old-fashioned, do you? I hate to break it to you, but I'm already more than worked up and ready.\"\n\n\"So I don't need any hoodoo trick to get you aroused?\"\n\nShe crawled up onto the bed and started to kiss her way up my legs, dragging her breasts and every bit of her body over mine as she went higher.\n\n\"Well, I'm not opposed to hoodoo.\" She kissed my thighs. \"But right now I'm just...\" Kiss. \"Good-old...\" Kiss\" \"All-natural...\" Kiss. \"Horny as all hell.\"\n\nBy this time, she was kissing my nipples and rubbing her breasts over my cock. She slid up and wrapped her legs around me, drawing me into a deep kiss. Her mouth was wonderfully warm and wet, and she wasn't lying, she was aggressive. This wasn't going to be the nice leisurely fuck I had thought it might be. Not that I was complaining.\n\nOur kiss grew more heated and wilder, tongues and lips sliding against each other amid coos of pleasure and happiness.\n\nThen she sat up on my belly and smiled down at me. I remembered the morning after the first night we were together. She sat up on me exactly like that, but with a sheet wrapped around her like a toga.\n\n\"Oh, Aphrodite, what would you have of me?\"\n\nHer eyes twinkled and under the lust I could see tears forming.\n\n\"You...\" Her smile spread wide. \"Here I am trying to be a wild sex-crazed vixen, and you're there making me love you so much... You weren't even in my head, were you?\"\n\n\"No... I just saw you there, and I remembered...\"\n\n\"That incredible morning... I was thinking the same thing, but I'm still horny as hell... damn you. I don't have the patience for romantic reminiscing today. Your goddess needs your dick.\"\n\nShe squished her arms together so she could pinch the clasp of her bra, then released the cups.\n\nI groaning in anticipation as she flung her bra off to the side and brought her leg to the other side so she could slide her panties off. Then she turned around on her hands and knees and looked back at me.\n\nAgain, I was struck by how stunning she was, this incredible, kind, brilliant, sexy-as-all-hell woman, and her flawless lithe body just splayed out on my bed, looking back at me with those come-hither eyes...\n\n\"You still know what to do next, don't you, cowboy?\"\n\nI wasn't using the trick, but I could feel the waves of lust rolling off of her.\n\n\"Sorry... Just admiring... You really have no idea how sexy you are, you know that?\"\n\nShe stuck her tongue out at me and arched her back, exposing more of herself to me.\n\nI couldn't turn down that invitation. I knee-walked up to her and reached out to caress her outer thighs, sliding up to her waist. She grabbed a pillow and slid it under her belly, then kept one hand underneath her. She kept looking back at me as she started to strum lazily at her clit.\n\nI moved up to her, sliding my cock under her and up against her hand.\n\n\"Getting right to it, eh?\"\n\n\"Mmm-huh. I don't need any foreplay... I'm more that ready... I've got an itch I need help with...\" She squeezed her legs, trapping my cock between them, then she twisted, grabbing me and grinding her hips, rubbing me up against her.\n\n\"Ooohh... Veronica... that feels so nice... You are hot aren't you?\" I could feel her wetness, making everything slick and wonderful.\n\n\"I told you... Ahhh... every time, I forget how big you are... I mean I remember, but uughhh... feeling you is so different...\"\n\nWith that she pushed forward slightly and aimed me with her hand.\n\nThen she looked ahead, braced herself with her other hand, and pushed back just a little bit. I slid in just an inch or so.\n\n\"Aahhh...\" She made a long and low noise as her pussy slipped over my tip. I felt her open up as her hips shifted. Then she pushed forward, sliding almost all the way off of me. She still held my cock in her hand. She was on fire, and I felt nearly as hot as she did.\n\nI tried to keep still and let her lead, but it was getting almost impossible.\n\n\"I want...\" She slid back, excruciatingly slowly. \"to go... ouuuhhh... slow...\" Slid out, then, with less of a pause this time, she pushed back. \"But... I can't...\" She pushed back a bit more. \"You can't... guuhhnnn... understand how it feels when you push into me... Oohhhgod... that first bit...\"\n\nShe held herself right there, shuddering ever so slightly. It wasn't an orgasm, she was just trying to control her own desire. She was trying to ride on the edge of her lust, testing how much sensation she could take.\n\nThe waves of lust ramped up as she teased herself on my cock. I could feel her riding the sensation of her urgent need. She was just getting ready to give in. She mewled in anticipation\n\nThen I couldn't hold back. I took over. I grabbed her by the waist and pushed into her.\n\n\"OHFUCK... Ohgodben!\"\n\nI didn't slam into her, but I pushed firmly and slowly. Then I pulled all the way out and drilled forward harder and faster.\n\nShe squealed out and slammed her face down into the other pillow as I nearly got everything into her. Then I withdrew and set at her, building a rhythm with her as she began pushing back, violently and in sync with her voice, low moans punctuated by grunts that I echoed as we pushed fully together.\n\nI felt her hand get back into motion as the shock of losing control ebbed. She was rubbing up and down on both of us, rubbing down her clit to my cock as it slammed back into her.\n\nAs we fucked, I could feel our sexual energy fill the room. It was bouncing off the walls and coming back to us. Even without looking into her eyes, I could sense her feeding off of my desire. And the trick let me almost taste what worked best for her. A deeper thrust, a slight pause, speed and then slow.\n\nSuddenly I slapped down hard on her ass and I felt her just shudder from toe to tip. It was like an earthquake set off in her. Her orgasm was inevitable, we both felt it coming.\n\nShe twisted her head to the side.\n\n\"Likethat... likethat... dontstooooopp... fuck... fuck... fuuuuuuuuuuuck!\"\n\nShe actually started bucking. Her hips spasmed up and down totally out of control, but that ended up rubbing my cock harder on her g-spot which ramped her up even more.\n\nHer own hand was twitching all over, grabbing my cock, sliding all over with her fluids back over her clit. I saw her other hand move under her chest, seeking a sensitive nipple. Her entire body twitched again and her legs shot out straight, forcing me out of her.\n\n\"Nonononono... backin... getbackinme...\" She tried to arch her back, but it was like she couldn't control herself.\n\nI moved back over her, but her legs were locked together and shaking.\n\nThen in a twitchy series of motions, she twisted over onto her side, then over up on her knees.\n\n\"On your back, now!\"\n\nI laughed. \"Yes, Oh my goddess!\"\n\nHer eyes flashed bright and a torrent of lust just poured off of her. I felt it seep into the pores of ever inch of my body.\n\nBut I rolled over with a quickness.\n\nShe leapt on top of me but nearly fell over.\n\n\"Give me... fuck... ohgod... I'm cumming still? Your cock... my cock!\"\n\nAnd with that she lifted herself up with her knees around my waist and jammed herself down on me, teeth gritted in determination.\n\nI groaned deep and long. She was a furnace. It was like her arousal was searing my cock from every angle, every inch.\n\nShe sat down hard on me, taking me even deeper than when I was behind her.\n\n\"Ohgodohgodohgod... You are so fucking...\"\n\nThen she looked me in the eyes.\n\n\"Do it... Unghhh... Ben... do it... fuck... me... Look at me...\"\n\nHer mouth was open and she was panting as she pulled up and dropped down again and again on me. And her eyes flashed bright again\n\nI barely felt a shift as I glided into her mind.\n\nLust was touching everything. Arousal was thick as soup. And underneath everything was delight, happiness, and relief. She had cast aside all of her worries and anxiety in the joy of the fuck. I barely needed to push her at all. But I did.\n\nShe squeezed her pussy around me so hard that she had trouble getting me back in. One hand was next to my head and the other was back at her clit, pounding it nearly as hard as she was pounding me. It was almost frightening, but she had simply given everything over to sensation.\n\nThen I pushed more, and she tripped into a massive orgasm.\n\n\"OOoohhhhhgoddammit...fuckfuckfuckfuckfuck...\"\n\nThen she devolved into incoherence as she kept fucking me. Her pussy was spasming around me, and her hand that was on her clit moved up to caress my face, almost gently, certainly more gently than the way her hips were twitching and twisting, jamming herself harder on me.\n\nI put out one hand to keep her stable, but rather than grabbing her side, she twisted and I got a handful of tit. Her head snapped back and she groaned like an animal.\n\nWith my other hand reached up to hold her hand. It was literally dripping with her juices that were now covering my face. I pulled her hand to my lips and kissed it, taking her fingers into my mouth and sucking each one clean.\n\nThat must have hit something deep within her. Her eyes darted from my eyes to my mouth and back again. Then her body just went haywire. She dove forward, nearly knocking the breath out of me as she crashed down on my chest. Her hips never stopped though, and her pussy gripped me hard again.\n\nI felt myself start to get close to my own orgasm, and she clearly heard and understood the rising urgency in my groaning.\n\n\"Ohhhfuck... You're gonna cum for me, Ben... Oh... ohh... goddammit... Ungh... ungh... ungh... Gonna oooonnghh... cum... for me... c'mon...\"\n\nShe raised up a little bit and kissed me hard and then went into another gear, faster and harder.\n\nI moaned into her mouth and felt my entire body lock up as I started to shoot off into her.\n\nThat triggered another series of ecstatic spasms in her as she dropped back down on me, with her head over my shoulder and her arms lifted high over our heads so she could grab onto the headboard. Her moans died away as she melted down onto my chest.\n\nIt took a long time for both of us to wind down. We were panting and laughing for a long time. I sucked her fingers again and she kissed my eyes.\n\nWe didn't say a single word the whole time.\n\nUnfortunately, she couldn't stay the night, so after a while, she crawled out of bed and started the sad process of covering up her body.\n\nWe talked over things at the school, sharing what we knew, me from the video, and her, from her daily slog.\n\n\"What are the odds they'll actually hire me back?\"\n\n\"No telling. I know we really need someone to cover World History. They've got a math guy... Jim? They've got a math guy covering, and I hear the class is a nightmare. He's not a favorite, so I don't think anyone would try to go to bat for him. He doesn't even want the classes.\"\n\n\"That sounds hopeful, at least.\"\n\n\"Well, who knows, though. There's no rhyme or reason to the way things are done anymore. Principal Sten hardly pays attention to anything academic, so it'll probably be Grant making the call. I might be able to help there.\"\n\n\"Ugh... If it takes you working with him, forget it. We can find another plan.\"\n\n\"No, it's not too bad. I think I can trade your job for my support on that reorganization committee. I'm not entirely sure why he wants me on it, but...\"\n\n\"Oh, come on, you know why he's wants you on it. I was watching through the camera, remember? He wants to have a favor hanging over you, because he thinks he can get in your pants.\"\n\n\"No, that's not it... I mean, of course he thinks that and he'll try. But there's something else. I think he wants me there so I can support him with voting... On what, who knows. Like I said, the whole place is a mystery nowadays.\"\n\n\"Well, I trust that you know how to do things, but be careful. That synthetic trick they've been brewing up seems powerful, even if it's not perfected yet.\"\n\n\"Fair enough. Well, I'll bring it up tomorrow and we'll see what happens. Having you on campus would be really helpful, but we'll have to plan for the possibility that they say no.\"\n\nShe stood up and looked back down at me, still sprawled out on the bed. Her smile dazzled as she tried to stifle a giggle.\n\n\"You going to just say in bed nude all night?\"\n\n\"I thought about it. Alas, but I need to go down and look over the video for today. Anything I should look for?\"\n\n\"Nothing I saw. Today was just a long dreary day. Long, grey, and rainy. That storm everyone has been talking about is getting worse and worse. We'll catch the brunt of it this weekend.\"\n\n\"Is it really going to be all that bad?\"\n\n\"Yeah, we get these massive storms every other year or so. If it's really bad, they'll move all the students into the gym for safety, all FEMA-stlye. It's no joke. But if you're going to be looking at the videos anyway, I think I did see Grant on campus, but he looked like hell. Probably worth seeing what he's up to. I still think he's the key to getting at Sten.\"\n\n\"I think you're right. It's awful to watch him, but I'll see what I can see.\"\n\nShe leaned over and kissed me, slowly and with real feeling.\n\nThen she pulled back and smiled mischievously. She reached out and grabbed my cock.\n\n\"Honk honk!\" She squeezed me and broke into a girlish cackle and ran out of the room."
    ],
    "authorname": "shudai",
    "tags": [
        "blowjob",
        "romance",
        "mf",
        "teacher",
        "doggy style",
        "harem",
        "oral sex",
        "orgasm"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-22"
}