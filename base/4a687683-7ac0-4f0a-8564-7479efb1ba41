{
    "title": "A Teddy Bear for Christmas",
    "pages": [
        "\u00a9 2016 Chloe Tzang. All rights reserved. The author asserts a moral right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review.\n\nI do hope you enjoy my romantic little Christmas tale, written for the 2016 Winter Holidays story competition. Ratings and comments are, as always, more than welcome. ... Chloe\n\n<center>* * *</center>\n\n<center>Together hand in hand we walked through evening gloom \n\nLong shadows on the pavement, cast from the sunset sky \n\nIf only this would last until the end of time\n\nAnd if this is forever I swear that I could cry \n\nThe northern wind starts to blow\n\nAnd the smell of winter's in the air\n\nAs we take each step upon the ground\n\nThe season of love grows near</center>\n\n<right>Snowflower (Yuki No Hana), Mika Nakashima</right>\n\n<center>* * *</center>\n\n\"No thanks,\" I glanced around, not even smiling cursorily. \"I'm waiting for someone.\" Repeated for the fiftieth time that evening. I might have sounded a little snappy but that wasn't intentional, even if I was annoyed. Although of course I tried not to let it show in the slightest. \n\nI didn't enjoy sitting in bars by myself fending off gweilo's trying to pick up a Chinese girl who wasn't even that pretty, which just went to show how drunk they all were. I'd spent the last hour doing just that and here was yet another one wanting to buy me a drink I didn't want. I didn't blame them. That was what guys did when they'd had too much to drink and they saw a girl sitting in a bar on her own, even if she wasn't that pretty.\n\nI mean, I was honest with myself. I knew I wasn't beautiful, I wasn't even that pretty. But, okay, I wasn't one of those girls that the guys said nasty things about brown paper bags about. I was better looking than that. Now, anyhow. Maybe not back at High School but that had been five years ago when I was living at home and I didn't have an allowance from my parents for anything much and terrible acne and those horrible big square glasses that made me look like a complete caricature of an Asian student. \n\nNot that I hadn't been a nerd. But now I was working and I could dress a little better. I'd replaced my glasses too. I'd never forgiven my Mom for buying those just coz they were the cheapest.\n\nBut right now, not pretty or not, fending off guys was stressing me. I didn't need that stress and I didn't need gweilo guys trying to buy me drinks. I had a nice Chinese boyfriend who I was expecting to meet here any moment now. Work had been a bitch. My boss was a worse bitch, this was the night before Christmas Eve and I wasn't due back at work till the New Year. Everyone was winding down big time. \n\nExcept me. I was stressing up big time. Kevin was supposed to have been here an hour ago. I checked the time. Again. Where the heck was he? I'd called him half a dozen times and he hadn't answered and my cell was almost out because I hadn't charged it for two days.\n\nThe big gweilo was still standing there, ignoring my brushoff. Go away, why don't you.\n\n\"You are Sara, right?\"\n\nHuh? I looked back at him. \"Yes. Do I know you?\" I didn't think I did but you never knew. \n\n\"No, but Kevin said you'd be here somewhere, he asked me to find you. You're Kevin's Sara, right?\"\n\nNo. I was not \"Kevin's Sara.\" I was my own Sara. But going into full bitch mode was just too much effort. It'd been that sort of day. I was wiped. \"Yeah, that's me.\"\n\n\"Great, he was trying to call you just now, said you weren't answering your phone. Asked if we could find you. And you're the only asian girl in the bar so I figured you must be Sara. Kevin says to tell you he got called into an urgent meeting by his boss a couple of hours ago, he's going to call again soon.\"\n\nThat was just great. Kevin was always running late. Always getting called into urgent meetings. Always on the phone with an important client. Something always managed to come up. Why on earth had I expected anything different tonight? \n\nI fished my cell out and looked. Well, it was dead now. Flat battery. I guess that explained that. I still wasn't happy with Kevin. Dress up, he'd said. Little black dress, he'd said. Go out for dinner together on the night before Christmas Eve, he'd said. Why don't you book the restaurant for us, he'd said. Pick one you really like, let's make it a really special night, he'd said. \n\nHang around in bars by yourself looking silly? He hadn't said that but he might as well have.\n\n\"Thanks,\" I said, stuffing my useless cellphone back into the pretty little handbag that I'd spent so much time selecting to match my new dress. Not that it mattered, no one ever looked.\n\n\"I'm Teddy.\" He smiled. A nice smile. Friendly.\n\nI looked up at him properly for the first time. Not exactly handsome, but a strong jaw, tall, powerfully built, fit looking, a bit on the solid side. Not fat though. Just, solid. Nice suit. Nice tie. Cufflinks. Bright red suspenders. I didn't know anyone who wore ties and cufflinks and suspenders and looked elegant in a suit. Not even to go out with girls wearing lovely little black dresses that they'd paid a small fortune for in Nordstrom because someone had suggested wearing one tonight for a romantic evening together. I'd never owned one before. I'd spent all Sunday shopping for it. Not that I was making snide comparisons. \n\nI'd never do that. Really. \n\nAnd if you believe that, I've got this luxury condo in Hong Kong to sell cheap that you might be interested in.\n\nLooking up further. Light brown hair, really well styled, nice smile. Blue eyes. Somehow he exuded strength and magnetism, sucking the air from my lungs. I took a breath, shook my head. \"Hi Teddy, I'm Sara. Sara Kuo. Pleased to meet you.\" I did the handshake thing. \n\nHis hand was gentle, gentle but firm. Not sweaty at all. I liked that. Some guys liked to just crush your hand. I had no idea why. Maybe it was to show how strong they are. I'm five foot four. I'm petite. I really don't need a guy crushing my hand. I already know he's bigger and stronger than me. I like that in a guy. I don't like a crushed hand. I've only got two. No spares.\n\nHe didn't crush my hand.\n\n\"Come and join us until Kevin gets here?\" He smiled. \"We've got a table over there.\" He gestured into the throng of office workers and wannabe executives, all drinking as if there was no tomorrow. Some of them were already hammered. Gotta love the lead-in to Christmas.\n\n\"Sure, love too.\" Anything was better than sitting at the bar by myself turning down pickup attempts and feeling like a snooty bitch. Not that I wasn't, but I didn't like to feel like one. I slid to my feet, picked up my Long Island Iced Tea; followed Teddy as he worked his way through the teaming masses. Or maybe that should have been steaming masses. It was cold outside, somebody had turned the heat up way too high.\n\n\"The ugly one is Daniel, this fat guy's Freddie. Guy's, this is Kevin's Sara.\"\n\nNo I wasn't, but let's not go there again. Too much effort.\n\n\"Hi ... Hi ...\" Teddy pulled a chair up for me. Polite too. I sat. I sipped. I couldn't believe my taste buds. God, my drink was so warm, I'd been here long enough that the ice had melted. Before I could wrinkle my nose, a waitress had whisked it away, placed another one in front of me. Iced. Cold. Delicious.\n\n\"Thanks.\" I probably looked surprised. Because I was surprised. Kevin never did things like that. Kevin would never have noticed. Unless it was his drink, and then of course he'd have asked me to get a fresh one for him before turning back to whoever else he was talking too.\n\nTeddy grinned. \"You're welcome.\" I hadn't even noticed him ordering. When had he done that? His friends laughed. At Teddy, not at me. That was even nicer, usually it was me that got laughed at.\n\n\"Bear here is a sleaze, Sara, just remember that,\" Daniel was grinning.\n\n\"Bear?\" Okay, I got it after slightly more than a couple of seconds. I was never that quick on picking up on jokes. Teddy. And I guess he did look a bit like a bear. Big and solid. Was he furry as well under that suit? I actually liked big and solid guys. Furry? I wasn't so sure if I liked furry. Kevin wasn't hairy, let alone furry. Kevin wasn't big and solid either. And Kevin was all I had to compare anyone to. Kevin was all I'd ever had and I was worried and annoyed. He was so late. I mean, I was used to him being late but this was longer than he usually kept me waiting.\n\nTeddy didn't answer. His phone had buzzed him or something, he was busy holding it to his ear, listening. One hand covering his other ear.\n\n\"Yeah.\" Daniel was answering my question. I had Daniel pegged already. The Clown. Funny guy. \"Coz that's what he looks like.\" \n\nI had to smile. He did. He really did look like a big happy bear. A bear wearing an expensive Hugo Boss suit mind you.\n\nTeddy interrupted, passing me his phone. \"Kevin for you, Sara.\"\n\n\"Kevin?\" I said into the phone. \"This better be good.\" Bitchy? Me? I come with an attitude. Especially when my date is late for a romantic dinner date. Do you know what it takes to work like a bitch all day for a boss who's a worse bitch by far, rush home to my downtown condo, get changed, fluffed and prettied up, then rush back to a downtown bar. Not to mention shoes, doing my makeup and everything else a girl needs for a romantic dinner date. It's a major project all of its own. I'd had a shit of day. And Kevin hadn't been waiting for me when I got here. If I haven't mentioned it already, yes, I was feeling just a bit disappointed.\n\n\"Hi Sara, thought I should let you know I'm going to be working late.\" Kevin was totally blas\u00e9 about it. Way to blas\u00e9 for someone who should be not just apologizing but groveling for leaving his date hanging. \n\nOn her own. \n\nIn a bar. \n\nWith about a thousand horny guys all thinking they're god's gift to a single girl after half a dozen drinks. All thinking the single and not even very pretty Chinese girl sitting at the bar was just waiting to be picked up by some middle-aged overweight drunk who's very obviously married. Idiots. The last place I'd get picked up in is in a bar a couple of nights before Christmas. As if! Not that I'd ever been picked up anywhere in my life. By anyone. \n\n\"We're bidding on a new contract, I gotta work on it, going to have to miss dinner, Sara. Sorry 'bout that.\" He didn't sound sorry at all though. He sounded distracted.\n\n\"Tonight? You mean you're not just going to be late? I booked us.\" Snide turned to utter disappointment.\n\n\"Uh, not just tonight, Sara, all weekend. We gotta have this proposal ready for Tuesday when the client gets back to work after the Christmas break. The boss is working through tonight and tomorrow and over Christmas on this one, it's that important. This is huge, so I volunteered to help.\" He lowered his voice. \"Good impression and all that, and they decide on promotions in January.\"\n\n\"Jesus, Kevin! It's Christmas,\" I exclaimed. \"Screw impressing your boss, we're supposed to be going to my parents tomorrow for the family get-together, then spending Christmas Day with my parents.\" \n\nI was their only child, this was important to my Mom and Dad, not just to me. I'd asked Kevin weeks ago, well before I'd told Mom and Dad I was bringing my boyfriend up to stay over Christmas. Kevin'd said \"Sure baby. That sounds good.\" I'd reminded him just this last weekend. \"No problem, baby.\" That's what he'd said.\n\n\"Tomorrow night, remember. We're going up and staying with my parents for Christmas.\" Okay, I was panicking. Sweating. My voice shaking. Quavering. He couldn't be saying this to me. He couldn't be canceling on me, not now. Not at the last minute. \"My Mom's invited all the uncles and aunties to meet you. She's been preparing for this all week. You said you'd come, Kevin,\" I added. Some might have said desperately, although sort of desperate like an iceberg on the verge of collapsing into fragments or something might be a better simile.\n\n\"Not going to be able to make it. Sara. Tell your Mom and Dad sorry for me, okay. Like I said, this is huge. It's work, you gotta do what you gotta do. Sorry, gotta run ... call you next week when you're back .... Hang on, I'm coming, Mark.... Got the projector right here ... yeah, the numbers, they're on their way...\" \n\nClick.\n\nThe jerk hung up. He hung up on me. He'd just destroyed my night and my Christmas. He'd just set me up for total humiliation with my family and he'd hung up on me! I looked at the phone in disbelief. Should I cry? Should I scream? Should I beat my head on the table? What was I going to say to my Mom and Dad? To my Uncles and Aunties and cousins. I'd never brought anyone home before. Not ever in my life. This year, everyone was expecting to meet Sara's nice Chinese boyfriend for dinner on Christmas Eve and again on Christmas Day. \n\nAnd now they weren't. \n\nThis was going to be so utterly and completely humiliating.\n\nOne thing I did know. Whatever else happened, Kevin was history. \n\nOh shit! This was just so awful.\n\n\"Well, thank you Teddy.\" On the verge of tears, I handed him back his phone. He took it, jerking my hand, then paused, both of us looking at the phone. I was holding it in a white knuckled grip. We looked at each other. I let go, my hand shaking.\n\n\"So, do you guys work with Kevin? Friends?\" I hadn't met any of them before. If they were friends of Kevin's, I was going to stand up and leave. Although I wasn't sure if I could walk. Shattered, that was all I felt.\n\nOh God! How was I going to explain this to my Mom and Dad? How? Oh god, how? \"I'm sorry, my weasel of a so-called boyfriend had to work.\" Over Christmas. Who was going to believe a word of it? Everyone would look at me, the aunties would all whisper about me, my cousins who always brought their girlfriends or boyfriends would make fun of me again, the way they always did every year when I came home by myself. \n\nMom would be so upset.\n\nShe'd been nagging me all through college and my first year at work to find a nice Chinese guy, get engaged, all that stuff. I wished she'd just stop. She knew I was hopeless with guys. She knew that and she still harassed me endlessly. Every time we talked, she reminded me I was closer and closer to my use by date and I hated it. That dreaded date when Chinese girls turn into maiden aunts for the rest of their lives. As if being me wasn't enough pressure. \n\nKevin had seemed to be a good candidate to me. At least, he'd been the best candidate I could come up with on my own. The only candidate, actually. I wasn't the most social person around, I knew. I wasn't social at all, really. I never had been, although god knows I'd always wanted to be. It was just, the more I tried, the more disastrous things ended up being. I'd stopped trying a long time ago.\n\nMy social life now was made up of work, dates with Kevin, who was the only guy who'd ever asked me out on a date since I started my job, or in fact, ever, and workouts at the gym where nobody even remembered my name. The baristas at the Starbucks downstairs did know my name, but only coz I was in there every weekend for hours at a time. Sitting there drinking coffee and reading while I listened to other people talking at least gave me the illusion of a social life. \n\nIt was better than sitting alone in my apartment all day because I didn't have that many friends I saw much of anymore. Anyway, they were the sort of friends that had always said \"oh, would you like to come too, Sara,\" as an afterthought. They'd never been that good friends and now they were all married. Half of them already had their first babies. When I did see them it was always \"...and when are you getting married, Sara?\" said so condescendingly.\n\nAfter this, probably never. I'd never dated at High School or College. I wasn't pretty but I wasn't that bad looking either, I knew that, but maybe I was just too intense. Too serious. Too slow to get the jokes. Too quick with the snide comments. To slow to pick up on when guys actually really liked me. There were guys that I'd thought had liked me, and if they'd asked me out on a date or even just for a coffee I'd have said yes instantly, but then they'd dated some other girl, got engaged and gotten married just like that. All my friends were hooked up already. Just, not me. \n\nWith Kevin, I thought I'd been on a roll at last. He was Chinese, and bustling around looking self-important at work when I first met him. He wasn't that good looking and his suits had that mothball smell and he needed to shower a lot more and hair stuck out of his nose and he needed to clean his teeth a bit more often. But he came from a good family, they had money and he drove a late model BMW. All the things my Mom wanted for me. He did live at home with his Mom and Dad, but then, a lot of Chinese guys did before they got married. When he'd asked me out after we'd met at work, I'd been so happy. Elated even.\n\nAfter six months of dating, after him agreeing to come up and stay at my parents with me for Christmas, I'd been ecstatic. This was it! He was Chinese, I knew he understood those little rituals. He understood what it meant to come home with me and meet my parents and stay over. That was the first big step, after that it was pretty much accepted that he'd take me to meet his parents and then the next step was that engagement ring. I'd been so confident that I could live up to those family expectations at last. \n\nOnly, now I wasn't. Now, I was going to be that family horror story. The one that would start out, \"Do you remember that guy Sara was going to bring home for Christmas...\" \n\nOh God, this was such a total and utter disaster. Now Mom was going to start calling back to China to arrange some guy from our home town for me. An arranged marriage to some mainland guy fresh of the plane? How totally utterly and completely humiliating. \n\nHow could Kevin do this to me! He was Chinese. He knew. He must know what he'd done.\n\n\"Friend of mine used to work with Kevin,\" Teddy shrugged. \"We're not exactly friends, more that we know each other. Dan and Freddie, they're buddies of mine.\"\n\n\"How come Kevin called you?\"\n\nTeddy shrugged again. \"He knows I come here every Friday, he's got my number. He's been here with us a few times. Sounded like he's not going to make it.\"\n\n\"No, he's not.\" Really, I was mad and I was sad and I wanted to burst into tears right there and then. My Mom had been so excited when I'd told her I was bringing Kevin to stay for Christmas, to meet the family. Even if he was only a boyfriend and nothing more. Yet. But when you brought a guy home, that was when the expectations started to get set in concrete and my Mom's expectations were already setting solid. She'd been talking about this for four weeks straight. Every time I called home. Oh god, this was going to be so humiliating. So completely utterly and totally humiliating.\n\nMy mind was off in a panic-stricken loop again. How could Kevin possibly do this to me? He was Chinese. He knew what family meant. He knew what coming home with me to meet my parents meant. He'd said yes. And god knows I'd asked him half a dozen times before I even mentioned it to my parents. God knows I'd asked him a dozen times since, just to make sure. Kevin wasn't the most reliable guy in the world, I knew that. But I'd asked him again and again. I'd checked. Every weekend. He'd said yes. He had. Every time. He had to know how this would make me look to my family. He had to.\n\nTeddy was saying something. I looked up, blinking back tears. Honestly, I felt not just humiliated but also sick. Shaky. I'd been so convinced Kevin was the guy. Bring him home for Christmas. Engagement. Wedding. It'd all been so clear in my mind once he'd agreed to come meet my family. And now he'd cut my legs out from under me, just like that. Worse, he was going to make me look a total idiot to everyone I knew, coz I knew my Mom. She gossiped. She'd have told everyone. Including all my old friends who still lived nearby.",
        "No, I wasn't going to look like just a total idiot. I was going to look like a total loser to my entire family. To everyone I knew.\n\nObviously I was nowhere near as important to Kevin as he was to me. \n\nAs he had been to me. \n\nPast tense. \n\nKevin was as past tense as a guy could be.\n\nOh god, sitting there in my little black dress, all made up for a romantic dinner date at my favorite restaurant that was never going to happen, I felt like a total failure. Kevin wasn't the greatest catch in the world, I knew that. And okay, being completely honest with myself, I knew he wasn't really the high flyer I pretended to myself that he was. I knew the reality was that he was a brown-nosing little weasel who'd stab any of his co-workers in the back and suck up to his boss to look good. I knew that. \n\nI just hadn't expected him to do that to me. \n\nWhat was even worse was that he was such a loser and I couldn't even keep him. God, I was so na\u00efve. I wanted to scream. I wanted to cry. I wanted to run away and hide. How could I possibly face my family tomorrow?\n\nI think Teddy realized about then that something was wrong. Whatever he'd been saying to me, he dropped, saying something to Daniel and Freddie instead. I think they'd noticed as well. I sat there, blinking back the tears. Reached out blindly, picked up my glass and drank. A large gulp. \n\nOh! My! God! Wrong glass. Liquid fire filled my mouth, burnt out my nasal passage, coursed its way down my throat. My eyes did their best to imitate a gweilo's, big and round. They watered. They ran with tears. My mouth burned. My nose steamed. My ears burned and swelled. My tongue felt like I'd swallowed liquid napalm. Holy hell! I found my Long Island Iced Tea and gulped it down. The entire contents of my glass, ice cubes included.\n\n\"Jesus Christ, what is that stuff?\" My voice had turned to a gasp, my breath to dragon flame. All three of them were looking at me, laughing. Glad someone found my pain humorous. I didn't.\n\n\"Colonel E.H. Taylor Junior Barrel Proof bourbon,\" Teddy snorted. \"Straight, no ice. Guess you don't usually drink it that way, Sara?\"\n\n\"Aaaahhhh,\" I gasped, \"oh hell.\" Let me tell you, I was in pain. I hardly drank alcohol. When I did, it was easy to drink white wine or a weak cocktail or Long Island Iced Tea. Something sweet and light. Not straight bourbon, barrel proof or not. I didn't normally swear either. Not much anyhow. But fuck. Fuck! FUCK! OH FUCK!\n\n\"Water,\" I pleaded, \"water, ice, anything for god's sake.\" That's how desperate I was. Jesus Christ and all his saints, that stuff was awful. Daniel passed me his beer. Yuck. I hated beer. But I drank it. I drank beer from some guy I'd just met, out of his glass. The burning eased. Nectar of the gods! I drank some more, deciding on the spot that beer was okay. Then I burped. Okay, beer was so very not okay.\n\n\"How can you guys drink that stuff?\" \n\n\"Beer?\" They all laughed. \n\nWe were not amused. The pain was fading a little. Thank god. My eyes were still watering though. Still round.\n\n\"Acquired taste,\" Teddy grinned, reaching over, wiping my eyes with a real handkerchief he produced from somewhere. \"You have to practice. And sip it, Sara. Don't gulp it. This is sippin' bourbon, gal.\"\n\nI picked up the glass I'd drunk from. This time I took a delicate, ladylike and very very tiny sip. It still tasted horrible but this time, the burn was more of a glow. I guess that was the difference between a gulp and a sip. I took another delicate sip. Okay, nicer. Although maybe that was because my taste buds were burnt out.\n\nTeddy grinned. \"I'll get you your own glass.\" He waved an arm, somehow a waitress was there almost instantly, taking his order. A small one. I kept sipping and okay, after half an hour and a glass of that stuff, I wasn't feeling quite so sad anymore. Actually, I was feeling rather mellow and giggly. \n\nTruthfully? I was drunk! Totally. And seriously, I was also thinking that I was better off without Kevin. He was a weasel, I knew that. If I was being honest, I'd always known that. But I'd been desperate. And really, he wasn't even good looking. He was barely taller than me, scrawny and if I haven't mentioned it before, he didn't wash nearly enough. He wasn't that smart either, even if he thought he was. In vino veritas. \n\nAfter two glasses of that bourbon I knew I could find someone better if I really tried. Maybe a dating website? Maybe I should try and join some social group or something, but I'd done that at College and that hadn't worked out so well at all. I didn't have the social skills, but I knew I deserved someone better. I did. Maybe I should just sit in a bar and get picked up? It would've been easy tonight. But that thought was revolting. Yuck.\n\nThen there was tomorrow. There wasn't any time to do anything before tomorrow. How was I going to explain to my parents when I saw them tomorrow night what had happened? If I had another glass of this stuff, maybe I'd think of something. Something would miraculously occur to me. I didn't think so, but I needed a miracle and I couldn't think of anything better to do. \n\nWell, die maybe, but I wasn't overly keen on that as a solution. Not yet, anyhow.\n\nTed got me another glass of that Colonel E.H. Taylor Junior Barrel Proof liquefied dragon's breath. After I'd drunk that as well, I started to feel a little more confident about the future. I'd survived before Kevin. All I had to do now was survive my family over Christmas. But god, how was I going to do that? Call in sick? Maybe buy a bottle of this dragon's breath and take it with me to give me liquid courage? It was working now, after all.\n\nDaniel looked at his watch. \"I better run, gotta get home. Put the kids to bed.\"\n\n\"Yeah, me too,\" Freddie shook his head. \"Ahhh, to be young and single like you Teddy. Nice meeting you, Sara. This's been fun, maybe we can all meet up again after the New Year.\"\n\n\"Nice meeting you guys,\" I said, totally disappointed that they were leaving. But I guess that was the story of my life. Disappointment. \"After New Year, I'd love too.\" I was so hopeful. Hoping they meant it. Hoping I'd see them again. They were fun. Chatty, funny, entertaining. I'd had a wonderful time with the three of them just sitting there with them, listening mostly, and I hadn't said anything dumb. I'd just giggled a lot at their terrible jokes even if I didn't get them and enjoyed listening to all the stuff they talked about and they'd all been so nice to me. I wished I had friends like this. It'd be such fun. I found myself wishing they'd stay. Dates with that little toad Kevin had never been this enjoyable. \n\nBut Teddy was still here. Was he leaving too? If he was I'd have to go home and when I did, I just knew I wasn't going to sleep. I was going to go home and cry all night.\n\nTeddy was smiling at me. \"Say, if you don't have any other plans for the rest of tonight, Sara, would you like to go for dinner?\" \n\nOh my god, he suddenly sounded shy. And I was so hungry. I didn't drink much at the best of times, I hadn't eaten anything since that salad for lunch and I was famished. Famished and more than slightly drunk. Drunk? I was hammered and I knew it. Also, I didn't want to go back to my apartment and cry, which was the only other thing I was going to do tonight. I did check his hand though, drunk as I was. No wedding ring. And he'd asked me if I'd like to go somewhere for dinner? Things like that didn't happen. Not to me. But he had. He'd asked me.\n\n\"Okay.\" I wasn't quite sure what to say next, but then I remembered. \"And funnily enough, I just happen to have a reservation for two at Bocata for eight thirty and the other half of the two isn't coming.\" \n\nThe prick. Now I didn't feel like crying. Well, I did, but I wasn't going to admit that to myself. Not now. Maybe tomorrow morning, when I had to face the humiliation of going home by myself. Although maybe if I drank enough I'd just avoid Christmas completely. But then Mom would worry herself to death and Dad would drive all the way down to check on me and I'd ruin Christmas for everyone else. \n\nNo, that wasn't a solution either. I was going to have to face the misery and the humiliation tomorrow, but that was tomorrow and right now, Teddy was smiling at me. He had the most wonderful smile. A smile that made my heartbeat quicken and my breathe come faster. Not that it mattered, guys didn't fall for me. Ever.\n\n\"Bocata. I love that place.\" Teddy was still smiling at me, his voice so smooth, with a rasp to it that made my stomach flutter.\n\nI had to shake my head. What was it we were talking about? Oh yeah, Bocata. \"It's my favorite Italian restaurant.\" \n\nIt was, I loved the food, and it was only a short walk to my little condo apartment from there. The condo apartment I'd bought so happily a year ago right after I started work. Dad had given me a large deposit, helped me arrange the mortgage. \"After you're married, it'll make a good investment property, Sara. Right in the middle of downtown, you can always lease out an apartment down here. Once you've paid it down a bit, leverage the capital to buy another one.\" \n\nThat's what Dad had said. Once I was married. Misery settled itself on my shoulders. I was never getting married. Even that toad Kevin didn't want me.\n\nTeddy was still smiling. \"Bocata? I love eating there too.\"\n\nWith an effort, I focused. Food. Smiled very brightly. Artificially brightly. \"What are we waiting for?\" I glanced at my watch. \"If we walk, we'll be there by quarter after.\"\n\n\"Let's go.\" He didn't ask about the reservation. I guess he'd figured that out for himself. And I wasn't going to talk about it. \"Fresh air'll do me good.\" Teddy stood, wobbling a little.\n\n\"Me too.\" I stood, wobbling a lot. Okay, I was more than a little drunk, even I knew that and I'd never been drunk before in my life. Teddy took my arm. That stopped me from falling to the floor. Just. I was really hammered! I found myself giggling continually as I shrugged my way into my coat. With difficulty. Outside the bar, the cold air sobered me. A chill wind from the north, the smell of winter in the air but no snow, just a few random snowflakes.\n\n\"Wait a second, Sara.\" \n\nI looked at Teddy. \n\nHe smiled, his hands reached for me. He did my coat up for me, button by button, working from the top down. That was so nice of him. Kevin would never have thought of something like that. It would never have occurred to him. Teddy's hand took my arm gently as we walked down the sidewalk, long shadows from the streetlamps trailing us. His hand held me up as I stumbled on nothing.\n\nAfter a minute or so, he looked at me. \"Is this the way to Bocata?\"\n\nI giggled. He was drunk too. I hadn't even thought about that, but yes, yes it was. Definitely I'd drunk far too much of that bourbon. \"Uh-uh,\" I said, thinking it through, \"yeah, this is the right way.\"\n\n\"Good, because I have no idea, I'm toasted. I'm relying on you to get us there.\" He smiled.\n\nI smiled back.\n\nHe kept looking at me and smiling.\n\nI kept looking at him and smiling. I almost walked into someone coming the other way. I would have but for Teddy's arm reaching out in front of me and stopping the oncoming juggernaut in its tracks.\n\n\"What the fuck, buddy?\"\n\n\"You almost knocked the lady down sir, excuse us.\" Teddy's expression had changed from amiable and friendly to something colder and tougher. All of a sudden he looked big and tough and dangerous. The guy looked at him. He didn't step back but he did say \"Sorry 'bout that,\" to me before stepping around me. Nobody had ever apologized for jostling me when I was with Kevin. \n\n\"Thank you,\" I murmured, suddenly aware that I was nestling into Teddy's arm, which was now around my shoulders. I liked that. I liked the security his arm offered me. I liked the way he looked after me. I liked it so much that I regretted it very much when we finally reached Bocata and stepped inside. The entrance was full and there was a long queue, which made me glad I'd booked. I'd been intending to join the queue, but Teddy just walked us right on by, straight up to the reception stand.\n\nThe ma\u00eetre d' behind the reception girl was all smiles. \"Mr. Arzano, good to see you again. A table for two?\"\n\n\"Good to see you too, Migliore, and yes, a table for two per favore.\" He glanced down at me, smiling. \"The lady has a table booked for two at eight thirty.\"\n\n\"Kuo,\" I chirped, \"Sara Kuo.\"\n\n\"Ah yes, Ms. Kuo.\" The ma\u00eetre d' smiled warmly at me. I'd been here a dozen times and I'd had no idea his name was Migliore. He'd never remembered my name. He'd never smiled at me like that before either. Mind you, I'd always come with Kevin even though he always said Bocata was far too expensive and he'd rather go somewhere Vietnamese for noodle soup. Being honest again, Kevin was so far up himself, so obnoxiously picky and so tight with his tips no restaurant waiter or waitress ever wanted to see him again. You could add me to that list. I never wanted to see him again either.\n\nMigliore was already taking my coat, passing it to a waitress. \"Come this way, per favore. I think your usual table, Mr. Arzano? If that's acceptable, Ms. Kuo?\"\n\nTeddy glanced at me. I smiled, nodded, clung to Teddy's arm. Of course it was alright with me.\n\n\"That'd be wonderful Migliore, molte grazie.\"\n\n\"Prego, prego. This way Mr. Arzano, Ms. Kuo.\"\n\n<center> * * * </center>\n\n\"Wow. That was the most amazing dinner, Teddy.\" I'd never ever eaten Italian food that good before. Not even when I'd been here before. God, everything had tasted so good. And none of it had been from the menu. I hadn't even seen a menu. Teddy had ordered for me, he and Migliore talking in what I guessed had to be Italian, fast and fluid and impossible to follow, not that I knew any. The first course had arrived at our table. My taste buds promptly told me I'd died and gone to heaven. \n\nTeddy explained everything to me as the dishes arrived. Fritto Misto di Mare, which turned out to be a simply divine semolina coated combination of Calamari, Prawns, Scallops, Fish & Mussels with Lemon and a Caper & Dill mayo, followed by a veal scallopini and crayfish bisque. Teddy had ordered Bistecca di Fratelli for the main. I'd had no idea what it was but when I tasted it, it melted in my mouth. \n\nItalian Crepes filled with smoked Brisket, Spinach, Mushrooms & Black Truffle Pesto finished with a Porcini butter. All washed down with a bottle of an old dust-covered Barbaresco retrieved from god knows where after another of those long fluid Italian conversations with the ma\u00eetre d', who seemed to drop by regularly to check on us. I drank far more than I was used to and I loved every mouthful. Sober, I definitely was not. Not that I'd been particularly sober when we arrived.\n\nI'd never tasted anything so good. I hadn't been going to eat dessert, I was already stuffed full. But when that Rosemary & White Chocolate Panna Cotta with a Raspberry Sorbet, Almond Tuile and fresh Honey Comb called my name, I stepped up and answered. By the end of that dinner, I knew I'd died and I was already in heaven. Nothing in this world could have tasted so good, not even dim sum at the Yank Sing in San Francisco where Dad had taken me once when we visited family there. \n\nAnd Teddy? He talked, he questioned; he drew me out, coaxing me into talking so that I felt like I was having one of those wonderful conversations I'd listened to and wished I was part of so many times in the past. Except that when I joined in, everyone stopped talking and looked at me and I'd wished I'd never opened my mouth. Not tonight. Tonight I talked, Teddy talked and I didn't feel dumb or stupid or like I said the wrong thing and it was wonderful. By the time dinner was over he knew the story of my life. The happy version that I pretended was the truth, even to myself. Except for Kevin. I didn't talk about Kevin at all. If I did, I knew I'd start crying.\n\n\"Coffee?\" he asked as the midnight hour loomed. That divine dinner was drawing to an end and I didn't want it to. This had been the best night of my life. Ever. For a brief moment in time, I'd felt like Cinderella, magically transported into another world, the world of my dreams. Only now it was midnight and I knew when we left, when this evening drew to a close, the magic would disappear as if it had never been and the ignominious nightmare of reality would return.\n\n\"Would you like to come to my apartment for a coffee?\" I asked, hoping desperately he'd say yes. \"I don't live far from here.\" I was blushing. \"One block up and around the corner.\" I was that desperate. So wanting this night not to end. So hoping I'd see Teddy again after my Christmas nightmare was over. And oh god, there was that nightmare in the back of my mind and I wanted to postpone the pain for as long as I could. Even if it was only for another hour. \n\nBecause as soon as Teddy left, I was going to start crying, I knew.\n\nTeddy smiled. \"Sure. I'd like to walk you home as well. I want to make sure you get there safe and sound.\"\n\n\"Thank you.\"\n\n\"My pleasure.\" We smiled at each other. We sat there smiling at each other for an eon. At least, until the waiter holding my chair coughed.\n\n\"Sorry ... sorry.\" We both blushed, looked guilty, stood. Teddy laughed, I giggled. We made it to the foyer, shrugged our coats on. Walked out into the cold, still laughing. \n\nTeddy was holding my hand. \n\nI liked Teddy holding my hand. I liked it a lot. I liked it all the way back to my condo building. Despite that chill north wind and the snowflakes that were thicker in the air now, I wanted to walk around the block a couple of extra times just so's he'd keep holding my hand. Having my hand held was just the happiest experience ever, something I'd always wanted to happen to me. To walk with a guy while he held my hand. And now it was and I wanted him to hold my hand for hours. \n\nI'd totally enjoyed the whole evening with him. I didn't want it to end. Because when it ended, I knew I'd be by myself again and thinking of tomorrow and my parents and how humiliated I was going to feel showing up at my parents' by myself. I'd have to explain and I didn't want to. I really didn't. Tomorrow was going to be so horrible.\n\n\"What's wrong Sara?\" Teddy was looking at me. Still holding my hand. I didn't feel happy now. I didn't feel anything much except sad. \"It's that asshole Kevin isn't it?\"\n\nI nodded. \"I don't want to talk about him at all, Teddy. He's totally history.\" I smiled brightly, wanting to cry. Not about Kevin though. About facing my parents and the Uncles and Aunties and cousins. About sitting in my apartment. All alone. \"Coffee? Or another drink if you like?\"\n\n\"Coffee sounds great.\" \n\nHe held my hand all the way past security. My Dad had insisted in a condo building with real live security, not just an alarm system. Across the foyer, into the elevator, in the elevator as we rode up, down the hallway to my apartment door. He was still holding my hand as I fumbled one-handed for my access card in my handbag. It was like he didn't want to let go of my hand. Not that I was objecting. I didn't want him to let go of my hand either. There was a little spike of excitement mixed with fear as he followed me inside. I'd only ever invited Kevin up here before. Not that I'd ever had anyone else to invite, but I so didn't want to think about that again. Not tonight. Not while Teddy was with me anyway.\n\nInside, after I shut the door, Teddy helped me take my coat off. God, Kevin had NEVER done that. He always took his coat off and handed it to me. Teddy not only took my coat, he didn't even ask where to hang them. He found the closet all by himself, he hung my coat up first, then his. Oh thank god, he wanted to stay for at least a little while. \n\n\"You've got a nice apartment, Sara,\" he said, glancing around.",
        "\"Thanks.\" It was what I could afford with the help of that big deposit from my Mom and Dad. It was small but I liked it all the same. Twenty ninth floor, nice view over the river, you could see everything except my bedroom from where he was standing. My spotless little galley kitchen on the right, my little home office alcove with my desk and bookcases and my high-powered gaming PC on the left, the single big living room straight ahead. Teddy looked at my gaming PC, looked at me. Grinned knowingly. \n\nI smiled back. I had friends' online, people I gamed with who I'd never met but who I chatted with, played with. Online, I was a different person, the person I'd liked to have been in reality and I was good at it. People wanted me on their team, playing with them. We chatted, we joked, the only thing we never did was meet in person, but I knew that if we did, that whole mirage, the image I'd built up of myself, it would burn away in the grim light of reality, just as Cinderella's ball gown and glass slippers had disappeared at midnight. I could fake a life online at least. I couldn't fake real life but I wanted to.\n\n\"What you see is it except for the sunroom and my bedroom.\" I led him across the room, wanting to show him everything, afraid to show him anything. What if he didn't like it?\n\nHe looked into my small sunroom on the far right corner, my six foot tall dragon tree, my old carved wooden Chinese couch and two matching chairs inlaid with mother-of-pearl, two matching side tables, a rectangular coffee table with the large old Tibetan rug on the floor and the Chinese scrolls on the walls. I'd picked the hardwood floor to match the furniture.\n\n\"It looks like a Chinese tea room,\" Teddy said, admiring the solidly hand-carved rosewood couch and chairs with their inlayed mother-of-pearl artwork, all flowers and dragons. \"It's beautiful....\" He hesitated, \"...it feels so ... so tranquil.\"\n\n\"That's what I was trying for,\" I said, heart leaping. He liked it, he did. The furniture had been my grandparents. The dragon tree too. After my granddad had passed away, my grandma had given it to me when she leased out their house and moved in with my Mom and Dad. That sunroom always brought back memories of the peace and calm of my grandparents' home when I was a little girl. The smell of incense and Chinese herbs, my granddad sitting drinking jasmine tea and reading. My grandma and her friends in the dining room playing mah-jong and chattering away.\n\nThat sunroom right on the corner of the building was my favorite space, a tranquil and sunny oasis of security in which to sit and relax or lie and read a book on a Sunday afternoon. Teddy liking my sunroom gave me a little flush of happiness and joy, temporarily replacing that fear, that dread of tomorrow. \n\nKevin had always laughed at my sunroom furniture. \"It's so old-fashioned Chinese,\" he'd said after he'd first seen my apartment. \"You should just dump that crappy old furniture.\" \n\nRight after I'd explained what that small sunroom and that beautiful old furniture meant to me. Even the memory of those words of Kevin's still stabbed deep into my heart. Really, when I thought about it, he was such an asshole. Now that I'd decided we were over, it was hard to see what I'd actually seen in him at all. Other than desperation on my part, I guess. That wasn't a nice thought, that I'd been that desperate. That I was that desperate.\n\nI left Teddy to look around while I returned to the kitchen to grind the coffee beans, firing up the Miele to make the coffee. I could see Teddy standing looking at the large Chinese painting I'd mounted as the centerpiece on one wall.\n\n\"It's from Beijing,\" I told him as he stepped closer, examining it. \"Two hundred and fifty years old.\" I'd splurged on that. It was totally more than I could afford at the time. I'd loved the painting the moment I'd laid eyes on it in a shop in Chinatown that sold old Chinese furniture and art. One of those old Chinese landscapes, all mountains and rivers and trees. The old Chinese guy that owned the shop had held it for me until I could pay him. I'd scrimped and saved for three entire months to pay for it on top of maxing out one of my credit cards. I could sit there and look at that painting for hours. I was still paying that one off. Kevin had never looked at it, not even once.\n\n\"It's so beautiful,\" Teddy said, examining it. I could tell from the way he said it that he meant it. \"You've got some beautiful stuff here, Sara.\"\n\n\"Thank you,\" I said, a little shyly, basking in the glow of the smile he gave me. I was sure he wasn't just being polite. He meant every word. \"There's not much else to see.\" \n\nBut I showed him anyway. Grandma's old display cabinet that had come as a matching set with my sideboard and the rosewood and inlaid mother-of-pearl couch and chairs in my sunroom. That display cabinet held my carefully acquired collection of old Chinese porcelain and Chinese tea sets. I had a couple of beautiful old French Louis XIV teacups that I'd found in an antique market as well as three old antique coffeepots. Lastly, and rather more shyly, I showed him my bedroom. My apartment only had one, but it was large, with its own en-suite bathroom and sliding glass doors into the sunroom so you could open them and the bedroom would look even larger and more open. \n\nUsually I left those doors open. That large bedroom was the reason I'd bought this apartment, rather than the model with two smaller bedrooms and no home office nook. \n\n\"Nice bed,\" Teddy said, eyeing my king-sized futon with the slatted wood headboard and footboard. \"Can I?\" \n\nI blushed, nodding as he stepped into my bedroom. Not even Kevin had ever been in here. I'd always kept the door firmly closed when he came around. I didn't want to give him any ideas. Mom had drilled that into me. \"Nothing before the engagement ring's on your finger, Sara. You remember that.\"\n\nWell, there wasn't going to be an engagement ring anytime soon, was there?\n\nSeeing Teddy inside my bedroom, my heart beat faster, my cheeks burned. My bedroom furniture was something else I'd taken a lot of care picking. Weekends and weekends. It wasn't like I'd had anything better to do but how I'd wished at the time that I'd had a friend I could go shopping with. That beautiful futon bed, two wooden Japanese-styled nightstands and a dresser that came as a set with the futon. Two big bookcases made of teak packed with all my favorite romance novels. A small coffee table made of Indonesian teak and bamboo and glass sat under the single window. Two Chinese rugs, one on either side of the bed.\n\nTeddy was looking at the artwork on my bedroom walls. I'd wanted something Japanese, to match the furniture. I'd picked up four very subdued pieces, a set of matching Japanese paintings in silver and gold and copper, Chokin-style landscapes. I loved them. My Miele chose that moment to whistle at me. I left Teddy in my bedroom to contemplate my paintings while I poured us a couple of mugs.\n\n\"Cream and sugar?\" I called from the kitchen.\n\n\"Cream, no sugar,\" he called back, emerging from my bedroom as I walked across to the single large black leather couch that sat under the window. We sat down, side by side, each of us half turned towards the other. Over dinner, we'd seemed to have had so much in common, so many interests we shared, so many things to talk about. Not just Teddy talking either, Teddy had got me talking and I hadn't said anything dumb or stupid and I'd understood everything, or at least I thought I had. Now, not moving, finally sitting down without anything to distract my thoughts, I wasn't sure anymore. All my fears and worries resurfaced in an instant.\n\n\"What's wrong, Sara?\" Teddy looked concerned, and really, that just made it worse. \n\nWas I so easy to read? Thinking about tomorrow? About facing my parents. Facing all my uncles and aunts and cousins. Without Kevin, when they would all be expecting to meet the guy who liked poor Sara enough to come visit her family with her. I felt sick. My heart juddered in my chest. I couldn't think. My hand shook, spilling hot coffee on my little black dress. Teddy reached over, took my coffee out of my hands, placed my mug on the coffee table. Took my trembling hands in his. \n\n\"What is it, Sara? What's wrong? Is it Kevin?\"\n\nI clutched at his hands where he held mine, looking at nothing, trembling, my teeth chattering, feeling my hands shaking. Even clasped in his, my hands were shaking. Cold. I felt so cold. Shivering now. \"He was supposed to go out to dinner with me tonight, Teddy. It was supposed to be a romantic dinner and then he was coming to my parents with me tomorrow for Christmas and he just cancelled everything on me at the last second because of some stupid work thing and he knows my family are all expecting him. He's Chinese, Teddy, he knows what it meant to me and he stood me up ... he stood me up right at the last minute and now I have to face my whole family without him, Teddy, after I told them all he was coming with me, that they were going to meet him.\"\n\nI looked at Teddy blindly. \"What did I ever do to deserve that? I mean, I know I'm not the most beautiful girl in the world, I'm not even pretty really, and I'm too smart and I don't have any social skills and everyone thinks I'm being rude because I just say what I think and it's not fair, Teddy. It's not fair. I'd never think of doing something like that to anyone. Never. Not even to Kevin and I know he's a loser, Teddy. I don't even love him but he was the best I could do on my own and I was willing to take him just because he wanted me and even though he's a brown nosing little jerk and I know that but I dated him all the same because I thought he wanted me and he stood me up just like that, without a second thought. What's wrong with me, Teddy? What's wrong with me? Why did he do that to me? How could he be so cruel? How could he?\"\n\nOn the verge of tears again, I stood up, walked to the windows, the bright city lights glittering with such beauty through the unshed tears of pain that filled my eyes. Why me? Why had Kevin been so cruel to me? Standing me up the way he had. He was Chinese, like me, he had to know what he'd done, he had to, and it was just such a horrible thing to have happen to me when my expectations and hopes had been raised so high. Couldn't he at least have waited until after Christmas if he wanted to dump me? That might have been worse for me but at least I wouldn't have been made to look like a total loser in front of my entire family.\n\nFor weeks I'd been so looking forward to this Christmas with my family. For the first time ever, I'd be going home with a boyfriend at my side. At last I'd be able to look at my Mom and Dad and my Uncles and Aunties and cousins and not feel like I was letting the family down. Now my hopes had been dashed to pieces. I was going to feel both guilty and a complete loser. A total failure. I already felt like one now and I couldn't bear it. A sob escaped me. Another. I felt those tears finally trickling down my cheek. \n\nI couldn't hold them back, even though I tried so hard. I'd tried so hard for so long, for so many years. But what Kevin had done to me tonight, it was just too much pain for me to bear. I'd believed him. He'd said he loved me and I'd believed him and his words had meant so much to me now this.\n\nBig strong arms engulfed me as Teddy held me from behind. \"It's okay, Sara. It's okay. You're better off without him.\"\n\n\"It's not okay, Teddy.\" I was crying now, my tears flowing without restraint as I turned in his arms to bury my head against his shoulder. \"It's not okay at all. I really thought he loved me, Teddy, I thought he meant what he said. I did. Even if I didn't love him at all, I thought he loved me and that was enough for me, Teddy. It was enough for me that he said he loved me and I trusted him and I told my family he was coming to stay for Christmas and he stood me up, Teddy. He stood me up. He didn't even give me enough time to make up a story for my family. They're expecting to see him with me tomorrow, Teddy and he won't be and he's making me look like a total loser to my entire family. I'm such a failure.\"\n\n\"Sara, Sara, Sara.\" He was holding me tight, one arm around my back, the other stroking my hair as my tears soaked into his shirt. \"He's an idiot and you're beautiful, you're adorable.\" His lips brushed the top of my head but I was too wrapped up in my own misery to stop. I barely heard what he'd said.\n\n\"I'm not, Teddy, I'm not beautiful at all. I'm skinny and my boobs are too small and my butt's non-existent and I've got a flat nose and my eyebrows are all wrong and my feet are too big and I can't do social chit-chat to save my life and I annoy everyone I work with coz I'm too smart and I don't know how to be nice about it when they're wrong and I always say the wrong thing at the wrong time and I haven't got any friends anymore coz they're all married and busy with their husbands and kids and they were never really friends anyhow, they just tolerated me hanging around and I've never had a boyfriend in my life besides Kevin and I know he's a total jerk and a brownnosing little asshole but he was the best I could do and I couldn't even keep him.....Oh god, I'm just a complete failure, Teddy, and now I'm telling you all this and I only met you tonight and I'm such a loser that I don't even have anyone else I'm friends with that I can say this too. I don't have anyone, Teddy and I'm just so lonely all the time.\"\n\nI was crying so hard now that I could barely stand. I just wanted to curl up in a ball on the floor and howl. I'd never felt such agony, not even back at High School when everyone was rude to me, including my friends, because I was such a nerd and I didn't understand the jokes and I couldn't talk music and fashion and makeup and movies and boys like everyone else and I'd never been on a date, let alone had a boyfriend. Girls can be so cruel, but even then I'd never felt the sheer misery that I was feeling now. \n\nThat feeling of complete and utter rejection by the one person I'd placed all my hopes on. He'd told me that he loved me. He'd actually said that to me and I'd believed him and it'd all been lies, he hadn't loved me at all. He hadn't even cared. It'd just been words and knowing that, knowing Kevin hadn't meant a thing he'd said, despair overwhelmed me, crashing down on me like an avalanche. That feeling of loneliness, of having absolutely no-one to go to, to talk to, to share things with. In a city with millions of people, I was so completely alone. \n\nAnguish at knowing that even that brownnosing little climber Kevin had no qualms at all about standing me up for the most important event in my life without a second thought. He probably hadn't even had a first thought. He'd just gone ahead and done it without a care in the world. What had been so important to me, the focus of my life for the last six weeks, it hadn't meant a thing to him. I meant that little to Kevin that he could do that. The one person in the world who I'd thought had actually loved me enough to want me and knowing that, realizing that he didn't, that he never had, that it'd been a lie and that I'd fooled myself into believing it because I needed so desperately to believe it, my heart finally shattered into infinitesimal fragments and I clung to Teddy, bawling my eyes out. \n\nTonight's magical dinner with Teddy was the way it should have been with Kevin. And then I should have been seeing my family tomorrow with him at my side, feeling so proud of myself. So happy that I could show up with my guy, that my boyfriend was coming for Christmas with my family and that finally I'd met my family's expectations, even if he wasn't the world's best catch, even if I didn't love him. He'd said he loved me. That'd do for me. \n\nAnd he'd stood me up.\n\nIt was too much to bear. It was all too much for me.\n\nTeddy swept me of my feet, picked me up in his arms as if I was a feather, carried me to my couch, sat down with me on his lap, held me in his arms. Holding me, cradling my head against his shoulder as I wept tears of bitterness and anguish and misery. Tears of pain and hopelessness. All the tears I hadn't wept since I was twelve years old and I'd summoned up all my courage and asked Micheal Robson to dance with me at the Bible Class Christmas Party and he'd looked at me like I was some weird insect and just laughed and said, \"with you?\" and turned and walked away, leaving me standing there, crying. \n\nEven my friends from Bible Class, the one place up until then where I'd felt safe from laughter and the making fun of me that happened at school, even they'd joined in the laughter. I'd never forgotten the pain and the total humiliation of that moment. I'd never gone back to Bible Class after that night. I'd never cried since then either, not in public anyhow, but now those years and years of held back tears poured out, on and on as Teddy held me.\n\nHe held me the way I'd always wanted someone to hold me and that made the pain, the hurt, the despair, the misery; that made it all even worse. All those years, this was all I'd ever wanted. To be held in someone's arms and told they liked me. Not even that they loved me, just that they liked me enough to hold me and care for me and no-one ever had. \n\nNot even that jerk, Kevin. He'd held me, but that was just to kiss me and to try and get his hand under my top or under my skirt and when I'd stopped him, he'd let me go. He'd never just held me because he liked to hold me or because he cared for me. Cradled in Teddy's arms I knew the difference and I cried even harder. Now it was all so clear to me. Kevin hadn't really loved me at all, not even really liked me, he was just trying it on with me and he'd never cared at all and I'd totally misread his interest in me and knowing that, I began to drown in a sea of unmitigated wretchedness.\n\n\"Sara ... Sara ...,\" Teddy held me, stroked my hair, my head as I soaked his shirt with my tears. \"Don't cry, Sara, he's not worth your tears.\" His arms held me tight, his lips kissed the top of my head. A hand appeared, holding tissues, wiping my face, my eyes, lips kissing the top of my head as his voice whispered, \"Sara, you're not alone, you've got me now. Look at me, Sara, look at me.\"\n\nA finger under my chin tilted my face up. I looked up, unable to stop crying, the tears pouring down my face.\n\n\"You're beautiful, Sara.\" Teddy kissed me, his fingers under my chin, brushing my jaw, brushing my cheek as his lips brushed mine so gently, so delicately.\n\nStunned disbelief held me frozen as his lips somehow took possession of mine, my mouth opening to him, opening wide for his tongue, feeling his tongue in my mouth, touching mine, flirting and dancing with mine and I was being kissed as I'd never been kissed by Kevin. The only guy who'd ever kissed me before. Teddy's kiss was magical, an ethereal experience that held me still in his arms, looking up at him, still crying silently as he continued to kiss me.\n\nWhy? Why was he kissing me? Did he feel sorry for me? Did he pity me? I couldn't stand to be pitied. Not by anyone, least of all now by Teddy. But he'd put his arm around me when we'd walked to Bocata. He'd smiled at me. He'd held my hand all the way from Bocata back to my apartment and I'd loved that. Loved my hand held in his, loved his arm around me. He was holding me now, holding me so tight in his arms. Maybe he really did like me? Faint hope warred with the agony of long and bitter experience within me. I wanted him to like me so much. I wanted that more than anything but I was so afraid. Afraid of rejection, afraid of laughter, afraid of disappointment.\n\nAfraid that he didn't mean it, that he was toying with me. Guys did that, I knew. I'd seen it happen with girls I knew and I couldn't stand to have that happen to me, not after Kevin's phone call tonight. Not with Teddy, whom I found so attractive, who'd given me those magical hours earlier this evening when I'd almost forgotten the pain and the humiliation that I'd be facing tomorrow and Christmas Day and the day after. I wanted to remember those magical few hours with Teddy, to treasure them, to hold them safe in my mind, not to have them join that endless series of pain-filled memories and now that he was kissing me, I was so afraid that they would.",
        "He couldn't possibly like me that much. No-one ever had. Not me. Trembling. I was trembling in his arms, shaking as he kissed me. His mouth lifted from mine, he kissed my forehead, held me tight, stroking my hair back from my face, one finger brushing my tears from my cheeks as I sat there silently weeping, the tears trickling down, too scared to hope for anything. Wanting so much to hope, but too afraid to do so.\n\n\"Sara.\" His voice was so gentle, his expression unsmiling, tender, concerned, as if he actually cared for me and that scared me even more. No-one had ever cared for me except for my Mom and Dad and really, I wasn't sure about my Mom. I wanted to be cared for. I wanted someone to love me and care for me so very much and I'd really believed that Kevin had. I'd so wanted to believe that Kevin had. But Kevin hadn't cared at all. He'd fooled me and he'd set me up for total humiliation in front of my entire family and that hurt so much. The thought that Teddy might betray me like that, that Teddy might hurt me, I couldn't stand that. Not on top of what Kevin had done to me, because with Teddy it would be so much worse, so much more agonizing because I knew I really did like Teddy. I liked him a lot.\n\n\"Don't,\" I sobbed, \"don't, Teddy. Please don't tease me. Please don't make fun of me...\" I was crying again now, so hard. Sobbing hopelessly, drawing my knees up, curling up, the pain almost physical in its intensity. \"I don't want to be hurt anymore, Teddy, I don't.... I can't take it, not again .. not anymore.\"\n\nHis hand cupped my cheek, held my face turned towards him. His nose brushed mine, his eyes held me. Beautiful blue eyes. \"I'm not teasing you, Sara,\" he breathed. \"I promise you, I'm not teasing you. You're the most adorable girl in the world.\" And he kissed me again. \"I'd never hurt you Sara, I'd never tease you. Nobody's ever going to hurt you again, Sara. Nobody, Sara, including me. Believe me.\"\n\nI wanted to believe him. I wanted to believe that he meant what he said so badly, so much. But I was so scared, so afraid of being hurt yet again. I liked Teddy, I liked Teddy a lot, far more than I'd ever liked Kevin and Kevin had hurt me so much. I tore my lips from his, looked up at him, panicking. \"Teddy .... please, Teddy...\" I was crying again. \"I couldn't bear it if you lied to me Teddy, I couldn't.\" I gazed up at him, hopelessly. Saw the concern on his face, saw his eyes looking down into mine, sharing my pain.\n\nAnguish. Fear. A faint glimmer of hope. The pain of current and past hopes betrayed warring within me with the unbearable and always unrequited need to be wanted, to be held; to be cherished for being me. My voice fading to a faint hopeless whisper. \"Please, Teddy... please don't hurt me.\"\n\n\"I'll never hurt you, Sara, never. You'll never be hurt again, I promise you. I'll take care of you, Sara ... I'd never lie to you ..... never.\" And he kissed me again, so gently, so tenderly, his lips brushing mine, his arms holding me, giving me the security and the warmth and the caring that I wanted so very much. \n\nCould I believe him? Could I risk this? The pain of discovering he was lying to me would be so agonizing, but here and now, he was giving me the affection and the comfort that I craved. Giving me what'd I'd always wanted and I had no idea whether to believe him or not. But now I hoped, and even having that faint hope betrayed would hurt so much now.\n\n\"Sara,\" he breathed, his lips lifting for just a moment before returning to caress mine again. With a sob, my lips responded, my mouth opened to his so slowly, a petal unfolding as the sun rose, basking in the golden warmth, in those golden rays of hope. My heart fluttered. Fear. Timid acceptance. Hope. Terror. His tongue slipped into my mouth, teasing, dancing, caressing and now I was kissing him back, my cheeks wet with tears, my eyes welling, still trembling but with a different kind of fear.\n\nHis arms held me so carefully, reassuring, strong, offering me security as well as comfort, offering me hope, offering me fear as well. With another sob, I let myself go, abandoning any restraint, kissing him back, my tongue sliding into his mouth timidly, withdrawing as he met me, tasting him, caressing him as he caressed me. On and on, a magical sharing of breath, of each other that brought me hope, hope that he really did like me along with that ever present fear that he was only dallying with me. That this was just another lie.\n\nAt last his mouth lifted from mine, his nose brushed mine. He smiled, his fingers brushed my face, my cheek, stroked across my skin so tenderly and the years fell away and I was a little girl again, sitting on my Daddy's knee, secure and happy that my Daddy loved me, that I was loved and safe and happy, The way I had been when I was a little girl, before the misery of my teenage years began.\n\n\"You're beautiful, Sara,\" he breathed. \"You just don't realize it. Whatever you might have looked like at High School or College, you're beautiful now, Sara.\"\n\nHe meant it. He really meant it, but I knew he was wrong. I knew everything that was wrong with me. I'd been told so many times over so many years, by so many members of my family, by my Mom, by my Aunts and my cousins, by so many of my classmates, by so many of my friends. Friends I didn't even like that much but I put up with everything they said to me because I needed someone. Anyone, really. Just so's I wasn't all alone.\n\n\"Sara, don't look like that. Believe me.\" He smiled into my eyes, warming my soul. A breath of summer warming the winter of pain frozen inside me. \"Believe me, Sara. Maybe you weren't good looking at High School, most teenage girls aren't, but you are now.\" He kissed me again, a quick brush of his lips. \"When I saw you at the bar tonight, you took my breath away, sitting there, so poised, so beautiful.\" He kissed me again. \"A swan in a flock of seagulls, that's what you reminded me of. A beautiful swan.\"\n\nHe meant it, I was sure he did. But then doubt rose within me. Maybe he was just a smooth talker, the sort of guy that enjoyed taking advantage of a lonely and heartbroken girl. \n\n\"I'm not beautiful,\" I said, flatly. I knew I wasn't. I'd been told I wasn't so many times. Told I wasn't even pretty. Told I looked like a boy, laughed at because I didn't have any boobs until I was sixteen, and even then you had to look hard. You still had to look hard, even now and I was twenty three. I knew everything that was wrong with me. A litany of flaws.\n\n\"Sara.\" Teddy was stroking my head, looking into my eyes. \"Stand up, come with me.\" He stood, lifting me to my feet, taking my hand, leading me into my bedroom. My heart pounded suddenly, but he wasn't leading me to my bed. He was leading me to my bathroom. I checked quickly. Embarrassed that I might have lingerie hanging up to dry, but thank god, I didn't. Sometimes being so fussy was a bonus.\n\n\"Makeup?\" he asked.\n\n\"In there,\" I pointed, still sniffling. I didn't have that much. I'd never been big on makeup. Nobody had ever taught me how to use it either and I'd always been too embarrassed to ask anyone I knew. They'd have laughed at me. Besides, what was the point? It wouldn't make any difference.\n\nTeddy rummaged around in my cabinet, pulling out everything I had. \"Sit.\" He pointed at my counter.\n\nObediently, I perched myself up on my bathroom counter, wondering what he was doing. Whatever it was, he seemed to know what he was about, wiping my face dry, working on my eyebrows, unfastening my hair from its long ponytail, brushing my hair out, turning my face from side to side.\n\n\"Do you have any scissors? Makeup? Where's your comb or a hairbrush?\"\n\n\"In there.\" I pointed.\n\n\"Stay here.\"\n\nHe brought back one of my dining table chairs. Pointed. I sat. He wrapped a towel around my shoulders, another over my dress. Dampened my hair with water from the tap. \"Close your eyes.\"\n\nI did, feeling the comb brushing through my hair, lifting it a little at a time, listening to the scissors snipping, feeling long locks of my hair falling away, feeling his fingers working, adjusting, brushing, snipping, brushing hair from my neck, from my face. Heart pounding, hoping he knew what he was doing.\n\nTrusting him, with no idea why I should other than that he seemed so confident about what he was doing even though it was taking so long, on and on. Drying my hair with my hairdryer, some last snips. At last, I heard him place the scissors on my counter. \n\nHe wiped my face with a wet cloth, whisked the towels away. \"Stand up and open your eyes.\"\n\nThat wasn't me. The person in the mirror was someone completely different. Instead of my long straight black hair that hung down my back almost to my waist, my hair was cut in a shaped bob ending at my shoulders that somehow made my face look slender, prettier, framing my jaw rather than held in my usual swept back and severe ponytail. It made me look an entirely different person, almost beautiful, with high slender cheekbones and the cutest little nose and lips. Berenice, I wasn't, that was for sure*. \n\n\"Looks a lot better doesn't it?\" Teddy said, smiling.\n\n\"Wow.\" I couldn't believe what I was seeing. I smiled, watching that pretty girl in the mirror smile back. Before I could try anything else, Teddy gestured.\n\n\"Now sit up on the counter again.\"\n\nI did, closing my eyes as he went to work with my makeup. I had no idea what he was doing, but he even did my lipstick. After what seemed an eon, but according to the clock on my bathroom wall was only half an hour, he stepped back, smiling, taking both my hands in his. \"Jump down.\"\n\nHe held my hands, looking down at me, smiling down at me. \"Close your eyes.\"\n\nI did, enjoying his hands moving to my waist, turning me to face my bathroom mirror. Wondering what he'd done.\n\n\"Abracadabra.\"\n\n\"Ohhh!\" I gasped. If the haircut had made me look different, prettier, now even I had to admit I looked stunning. Stunning to me, anyhow. Beautiful even. I couldn't stop looking at myself. How? How had he done that? How could I possibly look like this? \n\nBehind me, his hands still on my waist, his eyes met mine. He was smiling as his arms slipped around me, as he held me from behind. \"That's who I saw sitting in that bar, Sara,\" he breathed, kissing the top of my head as I leaned back against him. \"That's what you really look like. What you were before, what you thought you were, that was just a bad dream, Sara, that wasn't you at all. This is the real you. This is what you've always been, just, you didn't know it.\"\n\n\"Teddy.\" I wanted to cry. \"Oh Teddy. But how? How did you know? How could you do that?\"\n\nHe grinned. \"My mom's a hairstylist, I grew up in her salon. I've got six sisters and they used to get me to help them with their makeup.\" His grin grew larger still. \"Worked my way through High School and College as a hairstylist in Mom's salon. Haven't lost my touch, I still help out in the weekends off and on for fun.\" He eyed my hair critically. \"Mom could improve on this though. A lot.\" He smiled at me. \"I'm taking you to see her for a trim after Christmas, okay.\"\n\n\"Okay.\" Oh god, that girl in the mirror, she was so beautiful. Slender, elegant, ethereal even. She wasn't me, she wasn't the image I had of me at all but she was me. She was really me. I smiled. She smiled. I raised an eyebrow. She raised an eyebrow. It was me and I still didn't believe it. But I had to. This wasn't a dream. I was wide awake and Teddy was standing behind me, his arms around me, holding me tight, and that wasn't a dream either. \n\nI closed my eyes tight, opened them again. Nothing had changed. I was still beautiful. Teddy was still holding me, his body warm against my back, one of his hands pressed flat to my stomach, fingers splayed wide as he urged me back against him, the physical evidence of his arousal pressing hard against my lower back.\n\nHuh? My heart jumped half way up my throat, choking me. I must have started because Teddy held my tighter, kissed the top of my head. \"Do you like it?\"\n\nMy new look? Or what was pressing against me? Both, I knew.\n\n\"Yes,\" I sighed, leaning my head back against his shoulder, my hands resting on his wrists where he held me. Feeling him so hard where he pressed against me. I did that to him? Me? I excited him? A sudden surge of pleasure washed through me as that hard bulge pressed against me, setting my whole body tingling, feeling more alive that I'd ever felt in my life. A strange new sensation I'd never felt before and I wanted to feel this, knowing that maybe this was what the other girls talked about. Wondering if this was how I should feel and not really caring because suddenly I was enjoying this. I was enjoying being me.\n\nTeddy didn't move, he continued to hold me, continued to press against me, his breath hot against the top of my head, his arms holding me, his lips brushing the top of my head. He said nothing, made no sudden moves, just held me, held himself pressed firmly against me, his rigid hardness pressing hotly against me. I closed my eyes, my heart pounding, my breath coming in little gasps, the tingling feeling within me turning to a burning heat that seemed to expand outwards, encompassing my entire body.\n\n\"Do you believe me now when I say you're beautiful, Sara.\" His voice low and husky in my ear, reverberating through me before his lips dipped and brushed my neck, a strange new sensation. My nipples were suddenly hard and achingly swollen, a flooding wetness within me, a black hole of nervous excitement and suspense where my stomach used to be. I opened my mouth to say something inconsequential, something to deflate the moment, but really, I didn't want to deflate the moment at all. No words came out. \n\nWhen they finally did, it was in a breathless little sigh. \"I believe you, Teddy.\" Seeing myself in the mirror, I did and I still couldn't believe that was me. That beautiful girl standing there looking at me, held in Teddy's arms, that was me?\n\nAfterwards, I had no idea if that sigh signaled something to him or not. It certainly wasn't meant that way, but Teddy seemed to take it as some sort of encouragement, moving his hands slowly upwards from my waist to my breasts, cupping them, caressing them gently through the thin material of my little black dress, bringing the aching of my now swollen nipples to a new peak. I was very suddenly all too aware that I hadn't worn a bra with that little black dress I'd worn for dinner with Kevin. I was about to lift my hands to his and remove them when they slid downwards of their own accord, sliding over my stomach, back down to my hips. \n\nHis breath came hot against my neck, his hands held my hips, he moved a little against me. I gasped at that solid hardness moving against me, gasped again as his lips brushed my neck, not quite kissing me. Tasting me? And then, somehow, I had no idea how, I found myself turned around, facing him, my body pressed up against his, my arms around his neck, my face tilted upwards, looking up at him, my mouth half open as I waited for him to kiss me. He did kiss me. \n\nThat kiss, that gentle touch of his lips to mine, that delicious taste of him. A magical moment that lasted for an eternity, on and on and on, my lips flowering under his, my mouth wide open as his tongue took possession of me, accepting my surrender. His lips caressing mine as his tongue gently explored my mouth, tasting me as I tasted him, lost in the moment. Lost in the magic of his lips on mine, his mouth possessing mine, his eyes looking into mine, drinking me in. \n\nLooking into his eyes, those beautiful blue eyes, I was lost. Lost and drowning and I knew it. My breath escaped me in a long sigh, a sigh of surrender, of acceptance, of hope, all the tautness leaving me so that I was soft and pliant in his arms as he held me, as he kissed me. As his kiss deepened, confident, skilled, his tongue tasting me, stroking and sliding over mine. His hands pressed me tight against him and now I felt not just his hardness but also the raging pounding of his heart against my chest, the pressure of his hard body against mine bringing a rising tide of excitement that held me enthralled. \n\nOne hand held my back, the other cupped the curve of my butt, lifting me easily from my feet, holding me. \"I want you, Sara. I want you so much.\"\n\nHeld against him, pressed against him, I was so aware of his body, of his arousal. Of his strength and masculinity. I looked at him, breathing hard, panting, licking suddenly dry lips, conscious of my own overwhelming excitement. An excitement I'd only ever experienced in my daydreams. This, with Teddy, this excitement surpassed my wildest imaginings, left me on fire, sensitive, my breasts heavy and tender, my clitoris throbbing, feeling a delicious heated wetness so intense that almost, I moaned out loud.\n\n\"I want you, Sara.\" His voice so intent, so full of passion, vibrating through me, sending goose bumps racing across my skin.\n\nTimidly, my arms encircled his neck, holding him as his eyes burned into mine. I couldn't speak as I hung there, gasping, afraid, excited, wet, and acquiescent. Lowering his mouth to mine, he took possession of my lips, almost bruising me with the fierceness of his kiss, walking out of my bathroom and into my bedroom with me held in his hands.\n\n\"Sara,\" his breath was hot against my ear as he lowered me to my feet. His hands moved, my little black dress floated free, falling to pool around my ankles on the floor, leaving me standing there next to my bed in my little black bikini panties. My heart stuttered in sudden shock but he was kissing me again, one hand cupping the back of my head, the other working his jacket off, then his suspenders, his tie, his trousers and my fingers were unbuttoning his shirt as we continued to kiss. \n\nHe was naked but for his boxers, his erection bulging hugely and I loved the way he kissed me so hungrily, loved the way his hands ran over my back, my shoulders, my arms and I was in his arms, my breasts pressed hotly against the bare skin of his chest and we were in my bed, the covers peeled back, the Egyptian linen sheet cool against my back as he lay beside me and I moaned now, feeling the prod of his erection against my hip.\n\n\"What ..... what are we doing?\" I whispered, looking up at his face looming over mine. He smelled so divine. I wanted to bury my face against him, rub my face over his skin, inhaling.\n\n\"I'm touching you, Sara.\" He was, his hand circling on my stomach, sending butterflies and thrills of pleasure and excitement racing through me. \"You're so beautiful and you're driving me crazy.\"\n\n\"I am?\" I'd never driven anyone crazy. Just the thought that I was driving Teddy crazy did things inside me, things I'd never felt before. Nice things. Hot things. Wet things that made me pant and want to moan and move against him and I knew that wasn't right, I shouldn't, but I didn't care.\n\n\"You are, Sara, you do,\" he said intensely. \"I'll never hurt you, Sara, never, but I want you, I want you to be mine. Now. Tonight.\"\n\nMy heart threatened to choke me, my gaze held by those intensely magnetic eyes looking down into mine, seeing his face, his features harsh. Harsh with desire for me? Timid, scared, my hands clutched at the sheets on which I lay. Teddy wanted me? I knew he did and I didn't want to say no to him but I was so afraid. I wanted him so much, so badly, but I'd never done anything like this. Never.\n\n\"I've never ....\" I gasped at last, my face burning. \"I've never...\" I didn't know how to say it. \n\n\"I know, Sara.\" His voice so gentle, belying the desire written across his face. \"I know.\" His head bowed, his mouth seized on one nipple, drew it into his mouth.\n\n\"Ooohhhhh.\" I cried out as his tongue lashed across my breast, circling my nipple, his lips pulling on me as I found his head with one hand, curled my fingers in his hair, pushed my breast up against his mouth, staring blindly at the ceiling of my bedroom. Trembling as his tongue licked across my skin, as his hand found my other breast, cupped, caressed, teased until I moaned softly.",
        "There was no conscious decision. No thought involved. What I felt for him was so intense, so deep. I knew I was falling fast, far too fast but I was helpless, enjoying what he was doing to me far too much to even think of stopping him now. There was that delicious excitement within me, that aching of my breasts that demanded his mouth, his hand. The tantalizing slippery heat within me that the hard prodding of his erection against my thigh accentuated and I found myself wanting this to go on and on. I wanted more. I wanted much more, I wanted all the things I'd never had. I wanted then now, tonight, before this moment vanished.\n\nI wanted everything that Teddy had to give me, even at the risk of him using me and leaving me. At least I would have had this, I would have had this magical moment with him. I sighed softly, my body losing its residual tautness, my hand stroking his head as he suckled at me. Whatever he wanted from me, I was prepared to give him and when his mouth lifted from my breast, when his eyes looked down into mine once more, I knew that he knew that too.\n\n\"Sara,\" he breathed again. \"I'll never hurt you, little darling. Never.\"\n\nWas that sincerity on his face real? I had no idea but I so much wanted it to be. So very much. \"Teddy,\" I whispered, \"please .... Just ... please don't hurt me, Teddy.\"\n\n\"Never, Sara, I promise you I'll never hurt you. Nobody will ever hurt you again, Sara. You're mine. You're all mine.\"\n\nI was? He wanted me that much? Was it true? All these years, nobody had ever wanted me. How come Teddy did, now? \"You won't hurt me, Teddy?\" My voice sounded thin, scared, even to me.\n\nTeddy gathered me in those big strong arms, holding me tight against his chest. \"I won't Sara, I'll take care of you, look after you. Protect you. Always\" His hand drew my panties downwards, down to my knees.\n\nMy heart pounded at that sudden exposure of my body, pounded even harder as I drew one knee up, freed my ankle from those panties, felt Teddy's hand push them down the rest of the way. Naked. I was naked and suddenly, equally startling, so was Teddy. His boxers discarded, I could see him, feel him. There wasn't any fat on him. He was hard slabs of muscle with washboard abs that made me want to stroke his skin with my fingers. Looking at him, naked, aroused, he was the fantasy I'd always wished for come to life. Come to my life.\n\n\"You're mine, Sara,\" he breathed.\n\n\"Yes,\" I whispered. \"I'm yours Teddy, if you want me.\"\n\n\"Oh, I want you, Sara.\" The passion in his voice rippled through me. \"I want you so much.\"\n\nSeeing him as he spoke, hearing those words, what I felt for him in that instant of time was so intense it almost hurt. I'd fallen for Teddy, I knew. Fallen for him utterly and completely and I knew, I knew this was going to hurt so much when he didn't want me anymore but I didn't care. For this time with him, for the memory of this, that pain was worth it, I was sure. I was resigned to that pain, I'd never experienced anything else. But this moment, this wasn't pain, this was heaven and even a brief taste was more than I'd ever had before in my life.\n\nHis mouth closed on mine once more, he kissed me, demanding that I kiss him back and I did, first shyly, then eagerly, then enthusiastically, at last, passionately, lost in the moment, the feel of his lips on mine, his tongue sliding inside my mouth, tasting me, demanding from me, taking his pleasure from me. One of my hands ran through his hair, his chest pressed hard against my swollen nipples, his rock hard body hot on mine, that hard erection pressing against me telling what he ultimately wanted from me.\n\nMaking me so hot, so wet and slippery. So ready to surrender to him what he wanted of me.\n\n\"You're beautiful, Sara,\" he whispered, his hand running over my stomach, my chest, my breast, \"so beautiful.\" \n\nHis mouth on my throat, my shoulder, his lips brushing across my skin, bringing wordless little noises of excitement from me. I made no effort to conceal myself as his hand and his mouth explored me, gently teasing my nipples, now swollen so hard that they ached. It was so good when he squeezed one gently between a thumb and finger, it felt even better as he gently tugged at it, little ripples seeming to travel from my breast through me to the heated wetness at my center, leaving me limp with excitement, a black hole of need and anticipation where my stomach had once been.\n\nHis head lifted, he smiled, lowered his head, licked at my navel so that I giggled and squealed, wriggling. Sudden shock and arousal as he moved to kneel between my legs, spreading them wide with his hands, exposing me, looking down at me.\n\n\"So pretty,\" he murmured as I blushed bright red. I wanted to hide myself with my hands but I didn't. I lay there, breathing hard. Panting. So frightened. Seeing how big he was, how hard. Licking suddenly dry lips, knowing he was about to take me and I was scared now. Scared as well as excited.\n\nHe smiled. My heart pounded. Pounded like a drum as his hands moved to my knees, spread my legs wide, pushed them back, exposing me. Exposing me for his head to dive downwards between my thighs, his mouth suddenly connecting with the slick sensitive pinkness of my sex. Before I could even move, his tongue pushed into me, licking and parting my labia, sucking at me, licking hard as I writhed before him, dreadfully embarrassed and unbearably excited, unable to prevent my hips from churning as his hands held me, as his mouth worked on me so intimately.\n\n\"Don't .... Teddy .... Please....\" I gasped, both hands clutching at his head, my body begging for more even as I tossed my head from side to side, protesting out of embarrassment and shame. I'd read about this. I'd never imagined. \"Oooohhhhhh.\" \n\nNever. It felt so good I wanted to cry. His lips sucked at me, his tongue licked, probed, tasted me, flicking over my sensitive membranes, finding my clitoris and toying with me so that I tossed my head from side to side.\n\n\"Yes .... Yes ..... Teddy .... Ohh Teddy ...\" Unable to help myself, pushing myself up against his mouth. Ashamed. Embarrassed. Wildly excited. So good. It felt so good when he licked me there and his tongue probed into my sex and he sucked at me, sucked and licked hard and I felt it. My eyes widened as something built inside me, something I knew I wanted, something that felt so good, something that held the promise os so much pleasure building and building with every movement of his tongue and then I was holding his head tight with both hands and writhing on the bed as my first ever orgasm jolted through me.\n\n\"Teddddddyyyyyy.\" I half-wailed, everything inside me clenching, tightening, my legs kicking helplessly as those waves of golden pleasure washed through me. Teddy's tongue probing into my sex as it spasmed, rippled, as I pushed myself against him in total abandon, my orgasm rolling on and on and on as his mouth worked on me. Now I was sobbing, crying, tears running down my cheeks as I tossed my head from side to side and it was so good and Teddy was everything I wanted and I wanted him so much and it was so wonderful and I was so scared that afterwards I'd lose him but he didn't stop and I didn't want him to stop and he didn't..\n\nThe pleasure didn't stop, not even for a moment and I abandoned myself to the sensations I was experiencing, abandoned myself to Teddy, to his mouth and to his hands. His tongue teased the slippery entrance to my body as I shook and quivered. One hand moved, a finger gently probed, eased slickly into me, probing, stroking me inside, touching me where I'd never been touched before and it was unbearably good to surrender myself to his touch, to his finger. To feel his finger inside me.\n\n\"Ohh ... ohh ... aaahhh ....aahhhh ...ooohhh.\" Moaning helplessly, my hands clutching at the sheets, at him, at anything, pulling my knees back, wanting to expose more of me to him, so excited as his finger explored me and his mouth continued to work on my swollen clitoris, sucking at me, licking me there and I wanted more. How did he know to make me feel like this? A second finger pushed inside me, stretching me around both, massaging me gently inside. A second orgasm pulsed through me, holding me helpless as his mouth abandoned me and he moved up, moved up and forwards over me.\n\nLooking up at Teddy's face as I lay on my back beneath him moaning through that orgasm, I knew I was about to be made love to. I wondered if I was going to regret this in the morning, but in the here and now I wanted Teddy so very very much. Even while I was scared and feeling guilty about what I was about to do, about what I was going to let Teddy do to me, I wanted it. I wanted it so much. So much so that my entire body was quivering with anticipation as his fingers left me, As I felt his thighs pushing my legs wider and wider apart.\n\nI never thought of stopping him as he moved up on me, not once. There was no reason to even try stopping him as his head lowered, as his kisses trailed over my neck, my shoulders, my face, all while one of his hands closed over one breast. His head lifted, looked down at me, his cock jutted stiffly outwards over my stomach while I looked up at him, studying his face. \n\nHow strange it felt to be on my bed, naked, Teddy's body above mine, between my legs, poised to take me, his eyes studying me as I was studying him so intently. God, he was so handsome and his eyes were devouring me, the hunger in them holding me, skin stretched tight over his face, his look so intent, so focused. I knew I was staring up into the face of a man who really wanted me and then he kissed me again and it was perfect.\n\nMy hands reached up to stroke his cheeks as we kissed, short, passionate, hungry kisses, his tongue so sensual as he explored deep in my wide open mouth, his hand cupping my breast with unabashed possessiveness, kneading me, owning me, his erection now pressed hotly against my skin as his body moved closer and closer to mine. I was his if he wanted me, and I knew he wanted me.\n\n\"I want to make you mine, Sara.\" His lips lifted from mine, his words hungry. His eyes, his face, wanting me.\n\n\"Take me,\" I whispered, heart fluttering. \"If you want me, take me, Teddy.\" I was afraid, trembling, wanting him and scared and helpless with excitement, all at once. \n\nEven more scared when he raised himself a little, took one of my hands, curled my fingers around that rigid shaft of male flesh. His cock stretched out towards me, big, thick, solid in my clasp, heated velvet skin over steel hardness. Looking down, I could see him. See how big and hard he was, my eyes riveted to the jutting hardness my fingers clasped, heart pounding wildly as I eyed the swollen head of him, eyed the blue veins covering the long hard shaft. The sight of him, long and thick and hard, bringing a flooding wetness as I lay before him, waiting.\n\n\"I don't know what to do.\" My voice a faint whisper, even as my hand slowly stroked that hard shaft I held and then he was moving, moving down a little, my hand instinctively guiding him to where I knew he should go even as I trembled with scared anticipation.\n\n\"Are you sure, Sara?\" His lips brushing mine, his breathe hot on my skin.\n\n\"Yes.\" I was. More sure of this than I'd ever been of anything in my life. Solid male thighs pushed against mine. \n\n\"Move your knees back, just a little, make room for me.\" Said so softly, so gently.\n\nI obeyed, drawing my knees back, opening myself to him, my hand guiding him to my waiting entrance, knowing this was it. He was going to take me. Make love to me. Wanting him. He kissed me again, in a way I'd never been kissed, totally perfectly, as if we were one, body and soul intermingled, each of us knowing what the other wanted until I was completely lost and my hand had guided the head of his cock to me, to my entrance.\n\nSo wet. I was so wet, my labia swollen, slippery with excitement, parting willingly for him as he pushed through my fist, the head of him pushing against me, parting me, finding my entrance and I could feel his body so taut with held back desire. He wanted me, I knew. His eyes, his face, his expression, the desire for me he was holding back.\n\n\"You're mine.\" The timbre and tone of his voice took whatever was left of my will away from my.\n\n\"Yes.\" I was. I was his. I wanted him to possess me, wanted him to take me, make me his. Do whatever he wanted to me. With me. My hand fell away from where I held him, moved to rest on his ribs as I lay beneath him, quiescent. Not sure what this was going to be like but so excited, so wanting this. So wanting Teddy.\n\nHe moved, pushed, slowly, the head of his cock pushing against me, stretching me so that my eyes widened, my mouth opened wide. His face above mine, taut, intent. His body heavy on me now, his chest crushing down against my breasts, his thighs urging mine wider apart as the head of his cock abruptly slipped inside me. God, he was big, really big, his swollen cockhead the size of a large plum, held just inside me where I clasped him within me.\n\n\"Oh God, Sara.\" He pushed himself deeper inside me, stretching me around him. \n\n\"Ahhhh.\" My head jerked back, my hands clutched at him, nails digging into his skin, knees brushing his ribs as he began to move steadily, the swollen head of his cock easing inwards, pulling back, easing back in, pushing a little deeper into me with every movement.\n\n\"Ohhh.\" I could feel him move inside me, knowing I was giving myself to him, an exquisitely delicious surrender as his cock edged deeper and deeper inside me, moving in me, swollen and hard, stretching my channel around his steely girth, stretching my entrance around him where he sank himself inside me. \n\n\"Uughh.\" My body rippling with sensations, pleasure spiraling through me, nipples aching and I was no longer timid and shy and scared. I wanted to be taken by Teddy, I wanted it very very badly and I was moaning \"please ...... please ...... I want it ........ I want it inside me.\" \n\nTeddy smiled, continued to move gently, easing himself back and then inwards a little, again and again, driving me half-crazy. \"Do you want me to fuck you?\" His voice still calm and gentle, loving, caring. Caring for me. Loving me? Did he? I hoped. How I hoped that he really did, that he wasn't just using me. \n\n\"Owww.\" That hurt for a second, inside me, so that my body jerked, jolted, but then it didn't hurt at all and he was further inside me, continuing to move and it felt so marvelous and he was way up inside me, half of him in me, easing in and out. Continuing hard slippery thrusts, his cock moving in and out of me where we joined. I could feel him, feel those sliding thrusts as that hard shaft sank into me, withdrew, sank into me again and it was so wildly pleasurable and I could feel myself adjusting to him inside me. Stretching around him as he moved and moved and moved.\n\n\"Are you okay?\" he asked tenderly, but continuing to move in me. \"Does it hurt?\"\n\n\"No .... Yes .... don't stop .....please ........ please do it to me .......please ..... please ...... I want you Teddy .... I want you.\" \n\nThose gasps and please rolled thickly off my tongue as I clutched at him, as he moved in me, his weight on me so heavy, so welcome, his movements in me sending continuous little ripples of pleasure through my. With every movement inside me, he tensed, I felt his muscles tighten, felt him thrusting upwards inside me, penetrating, the swollen plum-sized head of him stretching me irresistibly as he sank himself deeper and deeper inside me. \n\nI juddered beneath him with every thrusting movement of his cock, spasmodic muscular reflexes that arched my back upwards, drawing knees even further back, my heels kicking up towards the ceiling, head arched back, my muscles taut as my channel surrendered gradually to that hard cock within me. \n\n\"Sara,\" his groan was laden with pleasure, \"God, Sara, you're so tight little darling, so tight and hot and wet for me.\"\n\nSweat misted across my skin, beaded on my forehead as my channel strained to take him within me. He was big, so big and hard, stretching me inside so that I could hardly stand it but it felt so good, pleasure mixed with not-quite-pain. My body arched involuntarily, trying to ease the discomfort, adapting to the unfamiliar, wanting him all in me, not caring that he was so big. My channel rippled around him, clasped him, danced on him even as my body adapted to this steely intrusion.\n\n\"Yes,\" I moaned, not thinking. Feeling. Experiencing. Wanting. Surrendering. Giving. \n\nTeddy smiled down at me, one arm under my shoulders, his other hand brushing my hair back from my face as he took me, not stopping, continuing to move in me, pinning me to my bed with his body as he thrust himself deeper and deeper inside me. I clung to him, quivering, gasping, feeling myself being stuffed full by his cock, feeling my channel stretching with every movement deeper inside me. He was more excited now, his movements longer, deeper, harder, more forceful.\n\nMy body growing more used to him, adapting to his use of me, no longer overwhelmed by these new sensations, taking an immense pleasure in what he was doing to me, reveling in my surrender, sinking deeper and deeper into pure pleasure as his body rode mine, as his increasingly powerful thrusts reverberated through me. \n\n\"Teddy,\" I moaned, \"Teddy.\" Loving what he was doing to me. Loving the way his cock slid into me where we joined, penetrating me, thrusting up inside me. Loving the way he breathed as he took me, loving absorbing his long powerful strokes within my channel, deeper, ever deeper inside me. Feeling him inside me, more and more of him as he eased back, held himself still for a second, then simultaneously grunted and thrust, sliding his shaft into me. Again and again and still, not all of him was in me.\n\n\"Okay?\" he gasped, \"I'm not hurting you am I, Sara?\"\n\n\"No,\" I gasped back, \"no ... no... I'm getting .... ohhhh .... Getting used to you... I can feel you in me...\" I could, and it was exquisite. An exquisite pleasure to surrender myself to him, wanting him, loving him, knowing he wanted me and willingly giving myself to him, caution thrown to the winds.\n\n\"I want to give you more, Sara,\" he gasped, his movements unceasing.\n\n\"All of you,\" I moaned. \"Give me all of you.\"\n\nMy head jerked back further, my back arching, feet kicking against his hips as he increased the power of his strokes, thrusting deep and hard, opening me, stretching me deep inside, deeper, deeper still.\n\n\"Uughhh,\" I groaned, back arching helplessly, \"aaahhh ... ohhhh ..... nnghhh.\"\n\n\"Tight, Sara, you're so tight.\" His voice so strained, so full of passion. Of pleasure. His movements harder, more forceful, taking me, thrusting hard inside me. So strong, he was so big and strong and then he was all the way up inside me, his cock hilted in me, his body crushed up hard against me, crushing up against me where we joined, my feet kicking straight up at the ceiling and I was choking, moaning, crying out, knowing that my surrender was complete asI felt the tip if his cock lightly brush my cervix. \n\nAll of him was in me, huge inside me, enormous, a shaft of hard male flesh buried within my body as I lay spread wide beneath him. Exposed. Open. Penetrated. Taken. His. I was his and I could feel every single inch of him, from the swollen glans to the veins that covered the hard surface of him. He stretched me within, stretched me mercilessly, stretched me to the point that it was almost pain, but not quite. Just as I could feel my entrance stretched around him like a rubber band.\n\nTaken. I was completely taken and it was Teddy who'd taken me. His eyes remained locked to mine, looking down at me, drilling down into my soul and I knew I loved him as I lay beneath him. I was his and I loved that he was making me his, taking me and he was so deep inside me, stretching me everywhere inside so that I could barely stand it, the pleasure so intense it was impossible to think of anything except what he was doing to me.",
        "Somehow, his hands found mine, moved them, pinned them to my bed above my head and now he was holding my hands in his, holding me helpless as he rode me, his cock sliding it's full length in and out of me, again and again and again, without any pause now, and I was wild for him, crying out, my head tossing from side to side as the intense pleasure within me grew and grew and grew, conscious thought leaving me, instinct taking over, able to focus on nothing but him as he took me. AS he made live to me.\n\n\"So good,\" I sobbed, completely lost, \"so good .... Ohhh Teddy .... Teddy.... It's good .... It's so good .... Yes .... Ohhh yes ... yes .... Yes.\"\n\nHis weight crushed me, his chest crushing down on my breasts, his thighs forcing mine to spread even wider apart, forcing me to open and expose myself even more to him, if that was even possible. And then he tried to push himself even further up inside me. \n\n\"HHHHNNNNGGHHHHHUUGHHHHH! ... UUGHHH .... NNGHHHHH\" My head arched back, my back arched upwards, my channel spasmed wildly around the long thick shaft that impaled me more completely than I would've thought possible if I'd been capable of conscious thought, which I no longer was as he somehow forced himself a little deeper within me. \n\n\"HHHUUGHHHHH!\" I groaned again, helplessly, as he moved slightly. I could feel him within me, every inch of him, so far inside me that I could feel the head of him no longer brushing but pushing against my cervix and that hurt, but it was a hurt that I enjoyed, the pain mixed inextricably in with the pleasure I felt. He was enormous, thick, steely hard, long. As he moved slightly I could feel the slick slide of his shaft between my labial lips, feel his glans moving within me, the tight frictioning of his shaft against the clasping grip of my vaginal walls and I moaned, my body quivering beneath him.\n\n\"I want to fuck you harder, Sara,\" Teddy breathed.\n\nI looked up at him helplessly. \"Do what you want to me,\" I moaned. Nothing could be better than what he was doing to me now. Nothing at all in this world.\n\nWhat did I know? Teddy slowly easing himself back, sliding out of me until only the head of his cock was inside, easing himself back into me in a long slow thrusting slide that stretched me around his length all over again so that I arched beneath him.\n\n\"Oooohhhhhh.\" A soft moan escaped me as my body shuddered beneath him, my muscles tautening, relaxing, tautening all over again as he eased into me.\n\n\"Oh god, Sara, Sara. You feel so good,\" Teddy groaned, burying himself completely inside me, pushing hard into me at the last, pressing up against my body at the juncture of my thighs, my feet lifting from his hips to point straight up at the ceiling as I drew my knees back even further, attempting to accommodate all of him inside me.\n\n\"NNNNUGHHHNNGHHHH,\" I groaned beneath him yet again. God, it felt like his cock was all the way up inside my chest, reaching for my heart and I wouldn't have cared if it had been, I would've died in a state of pure bliss, impaled more completely than I would ever have believed possible. \n\n\"HHHUUGHHHHH!\" I groaned again as that last movement hilted his cock so thoroughly inside me once more. Every inch of him inside me, my entire focus on that shaft of hard male flesh buried within my body, savoring the full length of him, from the swollen glans to the veins that covered the hard surface of him, stretched me mercilessly, stretched meto the point that it was almost pain, but not quite. When he moved slightly I could feel myself moving with him, feel the slick slide of his shaft between my labial lips, feel his glans moving within me, the tight frictioning of his shaft against the slippery-wet-clasping grip of my channel as I lay there quivering in helpless and willing surrender beneath him. Ripples of sensation washing through me one after the other. Ripples that rapidly grew in intensity as he began a slow but steady movement, easing himself backwards and forwards, his shaft sliding more easily with each deeply penetrating movement. \n\nAbove me, on me, within me, his pace quickened, his breath coming in grunts and gasps. I could sense his growing urgency as he fucked me, his cock swelling and growing even harder within me as he slid with remorseless ease backwards and forwards, pistoning steadily in and out of me, sinking his length inwards again and again between my widespread thighs. I looked up at him, unable even to control the helpless little sounds that emerged from me as he fucked me. \n\nMy clitoris had swollen to a rubbery nubbin of hyper-sensitive sensation, every movement of his on me sending rushes of pleasure surging through my body, each rush adding to my growing excitement, an excitement that grew as I moved my body beneath him as best I could, arching my back, his cock sliding within me, his weight heavy on me, crushing my breasts, his chest pressing down on my hyper-sensitive nipples, his hands roaming roughly over my body as he slammed himself into me faster and faster. \n\nMy growing excitement fed off his, my eagerness grew as his did, my body reacting helplessly to his use of me, our bodies slippery with intermingled sweat. I could feel a tidal wave of pleasure rising fast. \n\n\"Oh god ..oh yes ..... yes .....ohhh yes .... Ooooohhhh ..... yes ...... yes,\" my quiet little gasps and sobs of excitement morphed into little sobbing cries and moans, the increasing urgency of his thrusts hammered me down into the firm mattress, bringing an accompanying rhythmic percussion from my bed.\n\nTeddy slipped one hand under my butt, spread his fingers wide, lifted me, holding my butt high as he found he could achieve a fractionally deeper penetration. \n\nI arched my back upwards, pushing myself up at him as I choked out a desperate \"pleeease Teddy ...... please ... I love you ...... I love you.....\" \n\nTeddy did, forcefully pumping himself up inside me. \n\n\"Ohhh.\" I hadn't been expecting anything quite like that. His deep-thrusting possession took me by surprise so that I cried as he surged up forcefully inside me, fast and hard, until all of him was inside me.\n\n\"Nnnuuugggghhhhh.\" I thought he'd been taking me hard before. That was nothing compared to how I felt now. He was impossibly huge inside me, as if somebody had stuffed a baseball bat into me. Huge and hard and impossibly long and thick and I could feel my body helplessly accommodating him. It wasn't like he'd given me a choice. It wasn't like I wanted a choice.\n\nI'd never felt so helpless, so out of control and I loved it. I loved what he was doing to me, . His body heavy and hard on me, all male muscle and hard movements, his hands pinning mine to the bed above my head, his body riding mine, controlling me, taking me, pleasuring me. He didn't slow now, he didn't pause, he thrust forcefully into me again and again, his pelvis slapping against me with every thrust. Again and again and again. \n\nMy body reacted of its own accord, hot waves of surging pleasure and excitement rippling through me with every movement he made, gaining strength with each thrust as he drove himself up inside me and I could feel that tidal wave building yet again inside me. Building and building until that pent-up excitement was released into a single heart-stopping moment, the excitement of my surrender, of being fucked, the pleasure my body felt, my love for Teddy, all combined into one wild prolonged climax that surged through me in a thick golden wave of pleasure that filled my mind and my body with sensations more intense than anything I'd experienced before.\n\nMy body juddered uncontrollably, her heels flailing the air as I climaxed with a wild intensity that overwhelmed conscious thought. Teddy didn't pause, he continued to ride me hard, forcing my quivering body back down onto the sheets as he pounded himself into me. Again and again he thrust himself deep inside me even as I moved in uncontrollable excitement beneath him. \n\nThe overwhelming pleasure of my climax fading a little, I drew her knees far back, wanting to open myself as completely as possible to his hard driving thrusts, urging him on, knowing that he was going to finish. Looking up at his face above me, I could see the urgency, the desire, the need. His engorged length penetrated me so deeply, \n\n\"Oh God,\" Teddy groaned, \"I'm not ..... I'm not wearing a rubber.\" His hands held mine as he moved himself. I knew he didn't want to stop. I didn't want him to stop either, it felt too good, too exciting. I wanted him to finish inside me. I didn't care, all I wanted was his pleasure now, his satisfaction. \n\n\"Don't stop, Teddy,\" I moaned. \"Don't stop.\" I heard myself begging. \"I want it ..... I want it .... it's okay ... do it .... do it ... do it in me ... I want it ... give it to me.\" \n\nMy words sent Teddy into a frenzy. I could feel him inside me, I could feel his urgency, his need. I could feel him so steely hard, penetrating deeply within me and I wanted more. Much more. Teddy groaned as he thrust and I wanted to groan with him, loudly. The sensations were becoming unbearable again and, knowing his culmination was close, my own excitement soared.\n\nHe thrust, nailing me to the bed with a last ferociously hard thrust, his pelvis pressed firmly up against me, his eyes burning down into mine. \"Sara.... Sara....\"\n\nInside me, his cock pulsed, throbbed, spurting his cum inside me, shotgun like blasts erupting from the tip of him, spurting up against my cervix, flooding my channel with his emissions, his entire body straining with the violence of his culmination.\n\nMy back arched, pushing myself up at him, my mouth an \"O\" of surprise and excitement as I felt those spurts bursting out inside me. Teddy moved then, withdrew a little, drive himself hard into me again as as he continued to spurt, my body juddering with the vigorous impact. My muscles spasmed, my channel clamping down on his length, squeezing him tightly, the expression on his face changed, his eyes widened.\n\n\"Jeeeeesus, Sara.\" His groan of pleasure was enough to bring me to a new peak.\n\n\"Oooohhhhhhhh.\" I heard myself, half-screaming, half-wailing like an alley-cat in heat as a second orgasmic flood of pleasure wracked my body even as the last of his cum spurted inside me.\n\nIt was long minutes lying together before I got my breath back. Teddy remained on me, in me, breathing hard, holding me, neither of us saying anything now. I wanted him to hold me, it felt so good, so wonderful to be in his arms. I wanted this moment never to end but in the end, it had to as Teddy stirred, slid out of me wetly.\n\nNow I was embarrassed. Even more embarrassed when he slid out of bed, picked me up and carried me into my bathroom, placed me in the shower and then washed me, all without a word. I was so tired now, tired and exhausted and starting to feel sad again and talking was too much. He seemed to understand, I hoped he did as he washed me everywhere, then dried me and carried me back to my bed. As he slipped into my bed beside me and folded me into his arms, I found myself wondering if he'd still be ere in the morning.\n\nI sobbed once, listening to his breathing, knowing he was already asleep. Asleep and holding me, his arms around me. How I wished for more, more than just this night together, but it'd all been so very sudden. I knew I shouldn't have done this but I couldn't bring myself to regret it. How could I regret lying here held in Teddy's arms like this? My only wish was that this could last forever. I knew it wouldn't though. Only until the morning and then he'd be gone and I'd have to face my family alone.\n\nI'd have to do something about him not using a condom as well. Never mind, I thought rather vaguely. I can go to the Drugstore and get those Morning After things. Relieved at the thought, I savored the warmth of his body next to me, his arms around me for a moment longer, asleep the second my eyes closed. \n\n<center> * * * </center>\n\nWhen I woke up, the sun was shining in the window. I was alone in bed, my head throbbing, not quite painfully, just enough to remind me I'd drunk rather more than I should have last night. I felt sore, bruised, my body ached. For just a second I wondered vaguely why I ached, why I felt so sore. Memory filled in the blank in a blinding flash. Everything. I sat bolt upright, looking for Teddy in my bed. There was that horrible sinking feeling when I saw there was no one else there. Just crumpled sheets.\n\nHe'd left? \n\nI closed my eyes, started to curl up in my bed, feeling that horrible sense of betrayal yet again, wanting to cry. Knowing I'd been foolish to hope for anything else. Stupid and foolish. What else should I have expected?\n\nI smelt coffee. Heard a now familiar voice call out. \"You're awake, Sara? How do you like your coffee? I don't remember.\"\n\n\"Teddy,\" I squeaked, feeling a surge of heartfelt relief. Of overwhelming happiness. He was still here. He hadn't walked out on me. He was here. In my apartment. With me. Then, \"Lots of cream and three sugars.\"\n\n\"I'll be there in a second.\"\n\nHe was too, with my favorite large mug. Walking through my bedroom doorway, completely naked. I blushed, looked away, thought about what had happened last night, looked back, still blushing, my eyes drawn to him as if he was a magnet. Teddy was definitely male. Gloriously so. Beautifully so. Very very attractively so. Wow. He looked so ... completely gorgeous. \n\nAnd he was in my bedroom, naked. He'd slept with me all night. Well, what had remained of the night after we'd made love. My heart stopped for an instant, just looking at him. Had he really meant everything he'd said last night? Now, in the morning, I wasn't sure but I didn't care. It was enough that he was still here, with me, making me coffee.\n\nHow'd he known that was my favorite mug? He sat down next to me on the side of the bed, eased me up, gently propped me with a couple more pillows. Looking at him, seeing him lying naked on my bed, propped up on one elbow next to me, I couldn't help blushing rather more. He helped my hands support the mug as I sipped it carefully. Not to hot either. God, I needed this.\n\n\"Been there, done that,\" he grinned when I looked at him, smiling my thanks.\n\nIt was only after I'd almost finished that I realized that, well, while Teddy was naked, I was too. I was sitting up naked in bed with Teddy right beside me. My breasts, small as they were, exposed to his eyes. That very attractive male appendage was visibly reacting as he looked at me. Engorging. I watched, fascinated, loving that looking at me excited him like that, looking back at him, whispering his name. \"Teddy.\"\n\nHe smiled, took my mug from my hand. Placed it on my nightstand. \"Sara.\"\n\nHis breath warm and wicked in my ear as he guided me back down into my bed. Suddenly shy, I rolled onto my side, facing away from him, only to feel him slide into me bed, slide under the duvet, his naked body warm against mine, his arms slipping around me, holding me so securely. His lips kissed my ear, bringing a giggle from me. He was really hard now. Deliciously hard. I could feel it, pressing against the back of my thigh, big and hard. His hands easing me onto my back, his eyes burning into mine. \n\n\"That's better,\" he said.\n\nGod, the expression on his face as he looked at me, sending shivers racing up and down my spine, a black hole exploding inside my stomach. The way he looked at me, as if he wanted to eat me alive. That was how I'd seen guys look at other girls, but never before had I experienced that look directed at me. Now it was and I lay there, suddenly so helpless, panting for breath, my body tingling and glowing. Just from a look.\n\n\"Teddy,\" I said, despairingly. I was lost and I knew it and I knew this was going to hurt so much when I found out he wasn't serious, that he was just having fun with me. I didn't think I'd be able to bear that pain, but for this moment of intimacy with him, for giving me that look, I knew I'd give Teddy whatever he wanted from me here and now. The pain, that would come later I knew, it always did and I accepted that, knowing that the pain would come, knowing that I would never regret this night. \n\nBut right now, there was happiness and excitement and anticipation and I'd never experienced that before. I wanted that so much. So very very much, even if it was just for a fleeting moment in my life. The pain might follow, but at least now I'd have the memory of a moment of joy, a moment of shared intimacy that I could pretend to myself was so much more.\n\n\"I'm in love with you, Sara,\" he said, looking into my eyes, stroking my hair back from my forehead. \n\nMy heart did that wild pounding thing, my mind slowly absorbing what he'd said. He couldn't be? Guys didn't fall in love with me. Never. Guy's didn't even want to date me. I mean, he'd made love to me last night, but all the time I'd known inside myself that while he might like me, for him this was just a night with some girl he'd picked up who was an easy lay. I knew I'd been easy. The hopeless despair I'd felt over Kevin's betrayal had led me to do what I would never have dreamed of doing if I hadn't been so upset and miserable and hurt.\n\nI knew it'd been desperation, a despairing attempt to reach out, to connect with someone, even if it was only a one night stand, a brief fling. Now, in the morning, I didn't regret it. For me, it'd been magical but I hadn't dared to hope for more. Maybe he'd ask me out on another date if I was lucky. But so many times in the past I'd hoped to be asked out on a date and it'd never eventuated. I wasn't going to hope. I wasn't. But I did. I hoped so much and I knew that this time it would hurt so much more.\n\n\"Did you hear me, Sara?\" He was smiling down at me, his words a whisper in my ear, one hand brushing my cheek as he turned my face to look up at him.\n\n\"I ...I ...\" I stuttered, my heart doing a wild fandango, not believing my ears. What had he said? Had he really said what I thought I'd heard? He couldn't have? Could he?\n\n\"I love you, Sara Kuo.\" He smiled, kissed my nose tenderly. \"Now you're supposed to say something.\"\n\nHe had. He'd said it. Said that he loved me. I looked back, rubbing my nose against his, very gently, looking into his eyes, my thoughts in a turmoil. Confusion. Complete surprise. My eyes watering. He couldn't mean it. I wanted so much to believe him but all I could think of was that he wasn't serious, he didn't really mean it. They were just words, words that hurt me deeply however much I wanted them to be true. It was enough for now that he was here, with me. I wanted no lies, no pretense. That would be even more painful when he left me. I knew he'd leave and the tears came then, trickling down my cheeks.\n\n\"Don't tease me, Teddy, please. I couldn't bear that.\" I heard myself pleading. I couldn't bear to be hurt again. I'd thought Kevin had loved me, he'd said it often enough when we were making out. And I hadn't even liked Kevin that much. I liked Teddy, I liked him a lot. Maybe I'd even fallen in love with him but I didn't want to think that because if I had and he only wanted me as a one night stand, I'd be so shattered. So hurt. It would be enough if he liked me, if he wanted date me again. That was all I asked for. All I hoped for. Nothing else. Anything else was just too much to hope for, to soul-destroying if it didn't come to be. I refused to hope. I wanted to, but I did my best not too.\n\n\"Sara,\" he breathed, his hand caressing my face, my neck, my breasts, so that I had to moan through my tears, pushing my breast up against his hand where he cupped me, where he teased my nipple. \"Sara, I mean it, I think I fell in love with you when I saw you sitting at the bar. You looked so beautiful sitting there, like a swan, so ethereal and slender and delicate. Now? Looking at you now, in bed with me, in my arms, I know I love you Sara. I love you so much.\"",
        "Nobody had ever compared me to a swan before. Nobody. Nobody had ever said they loved me before. Well, my Dad, but that was different. Teddy loved me? He did. I gazed up into those eyes of blue. So blue that I could sink into them, stay lost in them, swim in them forever. I sighed softly, knowing I was lost. Knowing I couldn't fight this. Knowing I didn't want to fight this. I knew so little about him, nothing at all, really, but I knew I'd fallen for him and if he betrayed me, it would destroy me completely. \n\nI swallowed, tears in my eyes, accepting that risk. Surrendering my heart in that moment, surrendering my soul, surrendering everything. Putting everything I was on the line, hoping. Hoping so very much that he meant what he'd said. Meaning what I was about to say from the bottom of my heart. From the deepest depths of my soul. Committing myself, afraid but now so full of hope. My voice a whisper, \"I love you, Teddy.\"\n\n\"I love you, Sara Kuo.\" We both smiled, mine, a very watery smile. His lips brushed mine. \"I don't want to leave you, Sara. Not today. Not tonight. Not ever again.\"\n\n\"Don't,\" I said, as emphatically as I could through my tears. \"Ever.\" I meant it from the bottom of my heart.\n\n\"My place or yours?\" he asked. \"Where are we going to live?\"\n\n\"I don't even know what your place is like.\" I couldn't stop smiling now, even though I was crying. Crying from sheer happiness. \"Anywhere.\"\n\n\"I'll take you there this afternoon,\" he said. \"We can decide after you've seen it.\"\n\n\"Okay,\" I said, very simply. Remembering what Dad had said about keeping my apartment as an investment property. And okay, yes, I was like that. Practical.\n\n\"I never used to believe in love at first sight.\" He smiled.\n\n\"Neither did I, but I do now.\" I nuzzled him, nuzzled him and pushed him backwards and climbed up to lie on top of him so I could look down into his face. \"Do you have any plans for tonight? For Christmas?\" I knew I sounded so hopeful, but I wasn't going to plead with him. I wasn't going to beg. If he loved me, really loved me, he'd know what I wanted. God knows I'd cried enough on his shoulder while I poured my heart and soul out to him last night.\n\n\"Ummmm,\" he smiled, his big aquiline nose brushing my little snub nose. \"I was about to ask if you'd like to introduce me to you parents.\" He kissed me as my heart danced in elation. As I returned his kiss so enthusiastically. So eagerly. \"I believe there were certain parental expectations about your boyfriend coming to visit for Christmas.\" Now he chuckled. \"And as your boyfriend, my darling little Sara, I'd be more than happy to meet those parental expectations.\"\n\nI rested my head on his shoulder, just lying on him, holding on to him, overwhelmed with joy. Overwhelmed with love. Something I'd never known before, and now that I did, how could I continue living without it. \"Dinner at my parents tonight? And then stay the night and spend Christmas Day at my parents and come back the day after?\"\n\nHis hands stroked my butt. I could feel him getting hard beneath me. I felt like purring. Instead I squeaked as his fingers slid down the backs of my thighs, an exquisite touch that made me half close my eyes and shiver with remembered and anticipated pleasure. I kissed him lightly, breathing in, a long shuddering gasp as his fingertips teased me. He'd barely touched me and already I was so wet. \n\n\"You're really going to come with me, Teddy? What about your family? Aren't they expecting you?\"\n\nI'd never begged anyone in my life, but I wanted to now and if he said no, I would know he hadn't been serious and I'd die of a broken heart. I looked down at him, so hopeful, so half-expecting to be disappointed and let down the way I'd been disappointed and let down in the past even after he'd said he loved me. \n\n\"Sara, little darling, I'm going to call them and tell them about us and that we're going to your parents for Christmas and we'll come visit my family after we get back.\" He grinned. \"My family's so big they won't miss me at all. And they'll be over the moon when they hear about you and me. Mom's been on my case for years. So visiting your parents, that sounds great to me.\" One of his hands stroked me head. \"Of course I'm coming, Sara. I know what this means to you.\" He kissed my head, my ear, my cheek. \"I know what this means to us. How long does it take to get to your parents?\"\n\nMy heart did a giant jolt in my chest, leaving my breathless. He meant it. He really really meant it. Elation. That was what I was feeling. It felt like I was going to burst with happiness. \"It's a four hour drive, Teddy.\"\n\nMy Teddy smiled up at me. \"We can take my car.\"\n\n\"Why?\" I closed my eyes, breathing in hard. Oh god, I couldn't believe how happy I was, how relieved, how elated. Also, his fingers, they were teasing my labia, parting me. I was holding him so tight. Shivering. Wanting him so much. Loving him so much. Dying of joy. Dying of happiness. Dying of love. Drowning in love, not wanting to come up for air.\n\n\"Because I don't know what you drive, but my car's a four wheel drive and with this snow, we'll need it. So if I drive, we'll get there faster and that gives me plenty of time to make love to you again before we have to leave.\" And just like that he flipped me onto my back and he was on top of me, between my legs, looking down at me. \"Because, Sara Kuo, I really want to make love to you again right now.\" He smiled, adding, \"If you'd like me to, of course?\"\n\n\"Oh god yes .... yes,\" I moaned, my hand finding him, clasping him. His cock was so wonderfully hard. My hand guided him to me as I drew my legs back, opening myself to him. Surrendering myself to him. Feeling myself open wetly to him, part for him. \"Right now, Teddy, please,\" I breathed.\n\n\"Yes ma'am,\" he said, sounding obsequiously obedient and entering me at the same time. I giggled and moaned simultaneously. \"Can I marry you as well,\" he added as his cock buried itself in me, all the way, hilting himself into me.\n\n\"Oh god, yes... yes .... yes .... ohhh god yes,\" I moaned as his thick hard length filled me. I'd never felt anything so good. Never felt so much pleasure, so much love for someone. Then, \"What?\" I half-bucked beneath him, surprised, realizing what he'd said only after he'd filled me with his cock.\n\n\"Marry me,\" he said, looking into my eyes, holding himself still inside me. Oh Christ, so deep inside me. I was jelly. Hot wet jelly. Nothing but jelly for his cock to fuck. \"Seriously,\" he added.\n\n\"Seriously?\" I held him, moaning breathlessly, his weight on me, his cock buried inside me, impaling me, transfixing me, pinning me beneath him so deliciously as I squirmed under him, my body adjusting to him inside me, looking up into those blue blue eyes. I couldn't think, couldn't think of anything but how his cock felt inside me. Stuffing me full while I squirmed under him. So full. Marry him? Was that what he'd said?\n\n\"Seriously. Sara Kuo my little love, will you marry me?\" \n\n\"Yes,\" I said, heart pounding. It was crazy, we'd only met last night. Totally crazy. But it felt so very right. \"Oh yes, Teddy, yes.\"\n\n\"Seriously?\" he asked.\n\n\"Yes, seriously, I'll marry you,\" I said. Then I kissed him. \"Now stop asking questions and start doing it to me, Teddy, please.\"\n\n\"Okay.\"\n\n\"Do it to me hard,\" I gasped.\n\nHe did. It was wonderful. His cock sliding into me so exquisitely, long slow in and out slides that held me transfixed with pleasure for an eternity. I was lost, I knew, completely lost and I loved him and I adored him and he was mine. He was all mine and I was his and his cock was moving in me, he was moving on me and we were joined together and I never wanted to be parted from him as he possessed me. Commanded me. Took me.\n\n\"It's so good, Teddy,\" I sobbed as his movements became even more demanding. \"I love you, Teddy .... I love you.\"\n\nSomehow, he knew exactly what to do to me, his cock driving me over the edge, expertly thrusting into me, bringing me to an orgasm that started with ecstatic spasms inside me before radiating through my body until I was shaking, a helpless leaf in the wind of his passion.\n\nHis eyes held me as I moaned helplessly through that orgasm, held me as my orgasm washed through me, my body arching and juddering with every pulsing wave of pleasure.\n\n\"Sara,\" he groaned at the end, \"Sara .... Fuck ... oh fuck, Sara ... fuck ... fuck .... Fuck.\" He was pounding into me, his hips driving down, his cock surging up inside me, hitting me inside with every deep stroke of his cock, punishing strokes, battering strokes, his cock harder and thicker than ever, his face straining, his eyes wild now, wanting me. Wanting his culmination and I wanted him to finish in me. I wanted that so much, to feel his satisfaction as he came inside me.\n\n\"Sara .... Sara!\" He came with a low growl of intense pleasure, shaking, pushing hard up inside me as his climax took him, his cum spurting out deep inside me, his body jolting mine, his eyes holding mine as he emptied himself into me and then I was holding him and he was holding me, lying on me, his face pressed into the curve of my neck, his breathing fast against my skin.\n\n\"Wow,\" I sighed, a long time later, still glowing. Loving his body on mine, his weight, his possession of me. Loving him, still dazed at what was happening to me. To us. \n\n<center> * * * </center>\n\nLater, lying in Teddy's arms, I just looked up at him, still in near disbelief, inhaling the scent of him, savoring his weight on me. The feel of his body on mine, in me, under my hands, cradled between my thighs. My fianc\u00e9e. This was crazy. We'd only met last night. But oh god, he felt so right for me. Everything about him. I didn't know him at all and yet, somehow, I knew. I just knew. This was it. He was the one. He was meant for me, I was meant for him. A dream come true.\n\nHe smiled down at me. A lazy contented smile. A smile that reflected how I felt. \n\n\"You mean it?\" I asked, still not quite believing what he'd asked. \"You really mean it, Teddy? You really do want to marry me? You just met me.\" Things like this only happened in fairy tales for kids. Not in real life. Not in my life. Never in my life.\n\nHe smiled, brushed my sweat-dampened hair back from my forehead, kissed my nose. Just a little kiss but one with so much love, so much affection. \"I meant it, Sara darling. Everything. I want you forever, I want you to be my wife, to marry me, to love me, to live with me.\" Nuzzling my ear. Nibbling on my ear, sending little shivers rippling down my spine. \"I hope you meant it when you said yes, because you're not escaping me now my little darling. My darling little Sara. Not now that I've found you.\"\n\nI wanted to cry all over again. This time with happiness. I had no intention of escaping. None at all. I told him that, I told him that so many times as he held me in his arms, kissing me so gently, so tenderly, filling my heart with love, filling me with happiness and joy until I thought I would burst.\n\nIn the midst of those gentle kisses and soft whispers, my bedside phone played its little Love Story song. I know, silly, but I loved some of Taylor Swift's songs. Those songs talked about all the things I'd never had. Except now I did. \n\nI looked. I picked my phone up. \"Hi Mom.\"\n\n\"Hi Sara, just wanted to check what time you and your boyfriend plan on getting here? The rest of the family are going to be here around five or six, dinner around eight.\"\n\n\"Uh,\" I looked at Teddy, my heart leaping with happiness and joy all over again. I wasn't a failure. I wasn't a loser. I had the most wonderful boyfriend in the world. No, not a boyfriend, he was my fianc\u00e9e now and I still couldn't believe it was true. From the depths of despair to the heights of paradise in eighteen hours. Cinderella had nothing on me. I looked at the clock beside the bed. One. An hour to get out of bed and shower and pack and go wherever it was that Teddy lived and get whatever he needed. \"We'll be there about six, okay Mom.\"\n\n\"Okay, and Sara, the family's really looking forward to meeting Kevin.\"\n\n\"Uhh, Mom ... umm ... I've got some good news and some bad news for you.\" Teddy smiled at me. A rather wicked smile. I was sure he knew, even if we were talking Cantonese. I smiled back.\n\n\"What's that, dear?\" \n\n\"Well, there's a slight change of plan, I'm bringing my fianc\u00e9e home for Christmas and his name's Teddy. Not Kevin.\" Teddy's hand was stroking my breast. I looked down at him, smiling, pushing my breast into his hand, feeling my nipple swell, swell and harden. I had to bite my bottom lip to stop from making little noises. I wanted to just roll over and push my breast into his mouth. I felt so very loved and wanted and cherished, something I'd never felt before and I wanted to feel that lots more. Forever more.\n\n\"What! Sara! When did this happen! Engaged? Why didn't you tell me before! Wait until I tell your Dad! This is so wonderful! Congratulations honey ..... Aiiyaaaahhh, such a happy happy day .....we're all so looking forward to meeting him ... but uhh uhh bad news? What bad news? What happened to that Kevin boy you told us about? Did he change his name? You didn't have two boyfriends did you? Sara!\"\n\n\"Ummm, long story about Kevin, Mom, don't worry about it, he's not important.\" He wasn't important at all. \"But Teddy, my fianc\u00e9e, he's a gweilo, okay. So you have to be extra nice to him. And tell everybody else to be nice to him too, okay. I don't want anyone giving him a hard time, he's not used to Chinese families.\"\n\n\"Aiiyaaaaahhh, Sara! I thought you said your boyfriend was a nice Chinese boy. What happened?\"\n\n\"Uhh, long story Mom, but Teddy's a wonderful guy and I love him so much and he loves me and we just got engaged, like, half an hour agonnnnnuughhhh.\" I squeaked as a finger buried itself with slippery ease inside me. My look at Teddy was very stern. Up until I moved my legs further apart to make more room for his hand, half closing my eyes, trying so hard not to moan out loud. His finger felt so good. So very impossible to resist. Not that I had any intention of resisting. None at all. Never.\n\n\"Congratulations dear, but .. I mean ... a gweilo ... well, if you're sure he's right for you, Sara...if you're sure about it .... a gweilo ...uhhh ... we don't have any gweilo's in the family ... I hope he eats Chinese food? We didn't get anything else and you know the rest of the family. Maybe I could send your Dad out to buy some steak. We're cooking chicken dishes though. Does he eat rice?\" \n\nI hadn't even thought about that. \"Wait a minute and I'll ask him.\"\n\n\"Teddy?\" I asked.\n\n\"Yes, darling?\"\n\n\"My Mom's asking if you like Chinese food?\" There were so many things about Teddy I didn't know yet. But I'd find out. I'd work really really hard to find out.\n\n\"I love Chinese food, Sara. Tell her not to worry, I eat anything.\"\n\n\"He says he loves Chinese food, Mom, and not to do anything special for him, he'll be fine.\"\n\n\"Okay lah, that's a relief, dear.\" My Mom was doing her best to be brave. A gweilo, that would be a shock for her, I knew. On the other hand, she'd been starting to worry. The Chinese Mom's dilemma. When your daughter's twenty three and still not engaged or married, even a gweilo starts to look acceptable. \n\nAnd, well, this gweilo looked really acceptable to me. He felt very acceptable too. Very. Very very very .....oh god, very! He was so hard again and I could feel him pressing against me. That was so very acceptable. My free hand, the one not holding my phone, was busy confirming that as he moved against me, that wicked smile playing across his face.\n\nHe wasn't? Oh my god. He was. He was. I could feel him as he turned me and positioned me. Of course I could feel him, it was my hand holding him, guiding him to where I wanted him. I had to get off the phone. I had to.\n\n\"I'll get your Dad, Sara, I think you should tell him....\"\n\n\"No, don't Momuuughhhh.... Youtellhim GottagoMom seeyouatsixokay goodbyeloveyou uuuuggghhh.\"\n\nI hung up. Frantically. Knocking my phone onto the floor.\n\nTeddy's cock eased its way into me very very gently. I sagged into the bed, closed my eyes, lying on my side, just concentrating on nothing but the sensations I felt as he entered me so slowly from behind, easing himself into me, his hand on one hip holding me as my body shuddered and jerked, feeling him slide up into me. I wasn't used to that sensation yet. I knew I would be. Eventually. In the meantime, I had lots to learn and I was sure Teddy would teach me. He certainly seemed more than willing to further my education right now. And I wanted to be educated very much. I'd always been a fast learner and hands on education; that was what I wanted.\n\n\"Oh god Teddy, I love you, I love you. I love you so much.\"\n\n\"I love you, Sara...I love you...\" \n\n\"Teddy ... Teddy...uuughhhh .... Oohhhhhh .... I love you .... I love you...\"\n\n\"Sara .... Sara .... is that good for you, Sara, love?\"\n\n\"Yes ... oh yes, Teddy ... yes, it's so good .... So good.\"\n\nHe was all inside me and it really was so good for me, feeling him pressed up against me, buried in me, one hand holding my hip as he began to move steadily within me. I felt so complete with him inside me, his arms holding me, his body possessing mine, inside me, filling me, stretching me around him where I clasped him so tightly. More complete than ever before in my life. Complete and excited and overjoyed. \n\nBrimming with happiness. With pleasure. With love. With Teddy inside me, moving in me, leaving me breathless. Moaning with excitement. If this was love, I was all for it. As he moved gently inside me, as he had me, I knew I wanted Teddy's love, as much of it as I could get.\n\nBased on the track record so far, I was going to get a lot. And that was a wonderful thought. To be loved and held and cherished and valued for myself, the way I was. To be loved because I was me, with all the faults and flaws that I knew too well. Somehow, by pure chance, I'd found what I'd been missing, I'd been given what I'd wanted so very much and it was truly wonderful. It was bliss. It was heaven.\n\nOutside my bedroom window, as we made love, snowflowers filled the air. The first snow of winter, turning the city streets from grey to white just as Teddy had turned my life from grey to white. The pure white of Christmas, of joy, of happiness, of contentment and of love.\n\nChristmas with my Mom and Dad and all my family was going to be so much fun this year.\n\nI was going to be so happy introducing all of them to my wonderful fianc\u00e9e.\n\nMiraculously, I'd been given my best Christmas present ever.\n\nI'd been given a Teddy Bear for Christmas.\n\nAnd I was keeping him.\n\n<center>* * *</center>\n\n<center>With you by my side, to catch me when I fall\n\nI can cast my fears aside; feel twice as tall\n\nIf only this would last, this smile upon my face\n\nAnd if this is forever, you're my saving grace\n\nThe nights were so cold without you\n\nAnd the days were always short on light\n\nNow a fire's warming me through\n\nAnd suddenly this upturned world is feeling right\n\nWe could share the very first snowflowers of the year\n\nIn your arms where I belong\n\nWatch as the city turns from grey to white\n\nThe day turns into night\n\nLove that floats like wayward clouds, \n\nthat's not what we're about\n\nSure and strong is my love for you\n\nAnd it comes from the bottom of my heart</center>\n\n<right>Snowflower (Yuki No Hana), sung by Mika Nakashima</right>\n\n<right> English version sung by Hayley Westenra</right>\n\n<center>* * *</center>\n\nNote from the story: *Berenice, I wasn't, that was for sure: A reference to \"Berenice Bobs her Hair\" by F. Scott Fitzgerald. For those who haven't read his short story, Berenice's bob does not work out at all well, unlike Sara's.",
        "And a SHORT note from Chloe:Once again, and as always, thank you so much for reading this and I do hope you enjoyed. And okay, unlike books you pay for, these stories are free. As the author, the only reward I get for these is knowing whether or not you enjoyed them, how good (or bad) you thought they were and any feedback you care to share or comments you make. So I do have one and only one request -- see those rating stars below? Pick one for this story and hit it. That's all I ask.... and thanks once again for reading ... you're a great audience for a wannabe writer and I love writing for you all ... You're the best! ... Chloe "
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "first time",
        "chinese",
        "romance",
        "interracial",
        "chloe tzang",
        "virgin",
        "one on one"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-teddy-bear-for-christmas"
}