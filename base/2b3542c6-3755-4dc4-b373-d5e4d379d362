{
    "title": "Lilith's Emporium - Date with Lilith",
    "pages": [
        "Lilith was sitting at a bar in the city watching the humans go about their lives. She was feeling drained after having to enter Nessira's mind to help her break free from Ror'gon and Baphomet's control which was hard given she was in a dimension Lilith was not allowed to enter. She had thought about hooking up with some guy just to get a little bit of energy but it had been slim pickings thus far.\n\nShe thought back to days of old when she would have fucked everyone in this room taking their very soul from their body and feeding off their essence. Lately, She had been thinking about what certain people had said to her regarding giving up her dark past. She even thought about what Nessira said about settling down but she knew it would never be possible for her to settle down with any one person whether they be human or beast.\n\nShe had not been to see Nessira since she had returned from Draikoth's dimension. She knew how it all had turned out but she figured Nessira needed time to get her life back in order and also figured her and Patrick could use some alone time as well. She was thinking of stopping over there after she finished with her drink and just check on things.\n\nShe finally finished her drink and was about to get up and leave when the waitress came over bringing her another one. \"I didn't order this?\"\n\n\"This is compliments of the gentleman at the bar over there.\" She said as Lilith looked past her seeing a somewhat shy-looking young man standing at the bar with a bunch of his friends.\n\nLilith smiled thinking he was probably dared to do it so she gave him a smile and took the drink sipping it slowly. She watched as his friends started teasing him and pushing him to go and talk to her. She enjoyed watching humans stumble at her feet but this guy was intriguing her a little. As she watched him she thought maybe he would make a good meal. Being the Goddess of Succubi it was easy for her to feed off of humans without killing them or even affecting them too badly. She would never take more than they could replenish with a few days rest.\n\nShe got the impression he was just one of those guys who probably didn't sleep around as much as his friends did and was looking for true love. It was usually the same routine as she had seen it many times before and like some of her daughter's friends she liked the shy guys because they usually had amazing sexual fantasies and desires. Seeing how nervous he was Lilith finished the drink and decided to walk over and introduce herself. At the very least allow this young man some bragging rights in front of his friends. She walked into the small group as they were all stunned by how beautiful she was.\n\n\"So, I assume you bought me the drink?\" She said pointing to the young man she had been watching.\n\n\"Um, yes Ma'am.\"\n\n\"Polite, it's a good start, now the question is did you actually want to talk to me or did you do it because of these bozo's here?\" She said referring to his friends.\n\n\"I'm sorry, they dared me to send a drink to the most beautiful woman in the bar.\"\n\n\"Oh really, so I was your pick then?\"\n\n\"Well, I mean, look at you.\"\n\n\"Aw, you mean this old thing?\" She said showing off a little.\n\n\"Old should never be used to describe you, Miss.\"\n\n\"Also a good one, you aren't doing that bad kid, now bring it home.\"\n\n\"Um, can I buy you a drink?\"\n\n\"You did that already.\"\n\n\"Right, that's right, um, well hi I'm Chris.\" He said putting out his hand to greet her.\n\n\"I'm... Lily.\"\n\n\"Like the flower, lovely.\"\n\n\"You're still afloat.\"\n\n\"Um, so what bring you here tonight?\"\n\n\"Okay, I like how hard you're trying, but come with me.\" She said grabbing him by the shirt pulling him out of the crowd of friends before walking over to a table a good distance from them. \"Now this is better, without all your friends crowding us.\"\n\n\"Yeah, look I'm sorry, I just have no idea what I am doing when it comes to women, I have only ever had one girlfriend and it didn't last long and...\"\n\n\"Wait, are you a virgin?\"\n\n\"What, oh, no no.\"\n\n\"Okay good, that's just a headache I didn't want.\"\n\n\"Um, alright, So um, tell me about yourself, if you want I mean.\"\n\n\"Okay first, try to relax, I am not a cobra ready to bite you, talk to me like a human being.\" She said laughing to herself a little.\n\n\"Okay, so um, did you catch the Yankees game last night?\"\n\n\"You're a Yankees fan?\"\n\n\"Not really, not much of a baseball fan actually.\"\n\n\"It is so boring, isn't it? I mean going to a game once and a while for a hot dog is fun but Jesus, it's like watch fly's fuck sometimes.\"\n\nChris laughed a little at her joke. \"Never heard it described like that before but yeah, I have to agree.\"\n\n\"It's like, Ball, ball, strike, ball, I mean just hit the fucking thing already.\"\n\n\"And the price of beer is insane.\"\n\n\"No shit, you could pay for a prostitute for cheaper money and probably have a better time.\"\n\n\"Oh um, wait, are you?\" He asked suddenly getting nervous.\n\n\"If I was then I'd be really fucking expensive, word of advice though, when trying to talk to a girl, don't ask if she is a hooker.\"\n\n\"I am so sorry, you just seem too perfect.\"\n\n\"Ah, perfection is a matter of opinion, remember that.\"\n\n\"Oh, okay.\" He said confused by her response.\n\n\"So what are you looking for?\"\n\n\"Excuse me?\"\n\n\"In life I mean, let's say you hit it off with me, you want to get married and have kids, or are you looking for a fun night?\"\n\n\"I... I honestly don't know.\"\n\n\"Interesting answer.\"\n\n\"Sorry, I really just don't know what I want out of life, it gets too complicated thinking about it sometimes.\"\n\n\"You have no idea, but hey I have an idea.\"\n\n\"What's that?\"\n\n\"Let's go have some fun!\"\n\n\"Um, what do you mean?\"\n\n\"Come on, I promise I don't bite.\" She said taking his hand and leading him out if the bar while his friend shouted and cheered as they saw him leaving with her.\n\n-----\n\nA little while later he found himself on top of the Empire State building as Lilith smiled and walked closer to the edge looking out over the city as it shined against the night sky. Chris was nervous because he was afraid of heights despite the concrete and metal preventing them from falling but he didn't want to chicken out in front of this beautiful woman.\n\n\"Isn't it beautiful up here.\" She said taking in the night air.\n\n\"Oh, yeah, it's um, it's really great.\"\n\n\"It puts things in perspective a little, makes people look like ants you can crush under your boot.\"\n\n\"Interesting way of seeing people.\"\n\n\"Sorry, I have a strange outlook on the world, are you alright?\"\n\n\"Me, oh yeah, I'm just dandy.\"\n\n\"You're afraid of heights aren't you?\"\n\n\"What, Nah, what um... What makes you say that?\"\n\nLilith smiled before she took his hand and lead him to the edge and said: \"don't worry, I got you.\"\n\n\"I'm sorry, I feel a bit pathetic right now.\"\n\n\"That's just how I see men in general.\"\n\n\"What, what do you mean?\"\n\n\"How do I put this, you know Superman?\"\n\n\"Yeah, of course, why?\"\n\n\"When he is disguised as Clark Kent, why do you think he acts like a nervous bumbling idiot all the time.\"\n\n\"I never really thought about it.\"\n\n\"Because that's how he see's mankind, week, and unsure of themselves.\"\n\n\"Okay?\"\n\n\"I'm just saying that I can see the fear in your eye's, you're afraid of being up here, you're afraid of what your friends think about you, you're even afraid of me.\"\n\n\"Well, I...\"\n\n\"It's okay, I find it fascinating.\"\n\n\"Maybe we should call it a night then?\"\n\n\"Why do you say that?\"\n\n\"Listen, I am not an idiot, I know what you did at the bar and I appreciated it but I know there is no possible way you and I have a future or anything.\"\n\n\"Ouch, that hurts a bit.\"\n\n\"No, I mean you are amazing, and I like you a lot, but as you said I am a bumbling fool afraid of his own shadow.\"\n\n\"Why does that make you think you don't have a shot with a girl like me?\"\n\n\"Well, I...\"\n\n\"Let me explain something, yes you are very fearful but you are trying.\"\n\n\"What do you mean?\"\n\n\"You were afraid of me but you sent me a drink anyway to get my attention, you left the bar with me, and you are up here with me even though you are terrified of heights.\"\n\n\"Oh?\"\n\n\"Despite all your fear you still are trying, you remind me of a knight who rides into battle even though he knows he can't win.\"\n\n\"Really?\"\n\n\"Yes, you are how I see the human race as a whole, afraid but still trying to be better.\"\n\n\"Wow, I never saw it like that.\"\n\n\"You see, now tell me something you think about me, and be completely honest.\"\n\n\"Um...\"\n\n\"Seriously, what do you see when you look at me?\"\n\n\"Oh um... Well, I see the most beautiful woman I have ever seen.\"\n\n\"Sweet, but try a little harder.\"\n\n\"Oh, well...?\"\n\n\"Tell me what you really see.\"\n\n\"Um...\" He said as he took a moment staring into her eyes. \"Well, I see two beautiful eye's, but I also a see age, wisdom, and maybe a little pain?\"\n\n\"Oh really? Go on.\"\n\n\"I don't really know how to say it, I mean you have the body of a much younger woman but your eye's, as beautiful as they are they have this look to them, like you have seen things I couldn't even imagine.\"\n\nLilith smiled before she looked away for a moment and said: \"you see, never judge a book by its cover.\n\n\"I didn't mean to say you were old or anything, I mean I...\"\n\n\"Shh,\" she said placing a finger on his lips. \"you did well.\"\n\nChris was a bit confused as she smiled at him before she leaned in and kissed him. He was shocked but it soon gave away to him enjoying it as their tongues played with each other. He placed his hands around her waist pulling her close as she threw her arms around his neck and they both just enjoyed the moment.\n\n\"Wow!\" He said after she removed her lips from his.\n\n\"Well, your friends weren't around to see that.\"\n\n\"I don't really care if they were.\"\n\n\"That's a good answer.\" She said before kissing him again.\n\nChris was still confused because he honestly didn't see what she saw in him but every time her lips touched his it was like nothing else mattered in the world. All his fears were gone and all he wanted was to taste her even more as her lips were soft and her body was warm against his.\n\nAs he enjoyed the kiss he suddenly saw a strange vision of a woman with red hair and horns kissing him. It was shocking as there were two large wings behind her as well and the city looked like it was in ruin behind her as the sun was blocked by clouds making the sky crimson.\n\n\"Holy shit!\" He said pulling away from her seeing her look normal again.\n\n\"I am so sorry, that was my fault.\"\n\n\"What the hell was that, what... What are you?\"\n\nLilith suddenly felt like she had just ruined the moment which was a shame because she was starting to like this human. Through all his flaws there was something intriguing about him and the look in his eyes at the moment was just a cold reminder of how lonely her existence was. Nessira always made comments about her settling down and even though that was not what this meeting was about it still hit her a little hard and reminded her of what she was and what she could never truly have.\n\n\"I am sorry about that, listen, Chris, you are a great guy.\"\n\n\"No, I'm sorry, it's just... Lilith?\"\n\n\"How do you know that name?\"\n\n\"I heard the name in my mind, are you?\"\n\n\"It's been a fun night, but back to reality right?\" She said backing away from him. \"Tell your friends whatever you want to tell them, make up a story, I don't mind.\"\n\n\"Wait, please don't...\" He said as someone suddenly passed between them and in what seemed like the blink of an eye she was gone.\n\nHe frantically looked all around as the crowd of people thinned out and she was nowhere to be seen. He felt a pit in his stomach feeling guilty that he scared her off but that visions he saw were intense and unnatural which made him start to question everything about the evening.\n\n\"Come back.\" He said under his breath as he suddenly felt alone and abandoned before the height started to bother him again before he stumbled over to the elevator to get down from there.\n\n------\n\nNessira was sitting downstairs in the shop with a glass of wine in her hand. Patrick was asleep upstairs and so was Shadow and Kevin. After Patrick had his way with her she had attempted to go back to sleep but she still kept seeing horrible visions. She saw things that had happened in the other dimension and even saw Ror'gon eating Shadow despite the fact it never happened. She also saw images from her past with Baphomet and those people she had killed so it was making it harder for her to sleep or even go on.\n\nAll the horrible things that she had done or caused haunted her and it was ripping her apart. As she sat there she suddenly felt a hand on her shoulder and a warm feeling. Something that would scare the hell out of anyone sitting in the dark but she knew who it was and a smile came across her face as she lifted her hand and held hers.\n\n\"Hello Mother,\" Nessira said feeling her comfort.\n\n\"Hello Nessira, how are you doing?\"\n\n\"As good as I can.\"\n\nLilith walked around and sat across from her before she said: \"and how are the others?\"\n\n\"Better then to be expected, Shadow seems to be handling it better then I am.\"\n\n\"She's a strong girl, and this wasn't your fault.\"\n\n\"Yeah, even Patrick keeps telling me things like that but nothing seems to be helping.\"\n\n\"Nessira, Patrick is fine, Shadow is fine, and so is Kevin.\" \n\n\"Yeah but... Wait, you've known about Kevin this whole time haven't you?\"\n\nLilith just smiled a little before she said: \"that's what Grandmothers do, keep secrets.\"\n\n\"Okay, Grandma.\"\n\n\"Actually could you not call me that, but seriously, I knew you were strong enough to fight back.\"\n\n\"Yeah, but I don't know if I'm strong enough to live with myself.\"\n\n\"You think I haven't done worse things than you? Hell, I slaughtered thousands in my day, you only got to a few hundred.\"\n\n\"But you never tried to kill me.\"\n\n\"Well, there was that time... Okay, I'll give you that, but you think I am not still haunted by my victims sometimes?\"\n\n\"How do you deal with it?\"\n\n\"By surrounding myself with the people I love, seeing everything you've accomplished gives me so much happiness.\"\n\n\"Thank you, and I want the same for Shadow, I want her to be happy, I want her to live a life without fear of being tricked, or corrupted, or used for someone else's bidding, she see's the good in everyone and I don't want to see her go down the same path I once did.\"\n\n\"You won't let that happen, you and Patrick have done such a good job with her.\"\n\n\"He has, he really has, I love him so much,\" Nessira said as tears filled her eyes.\n\nLilith walked over and sat done with her putting her arm around her to comfort before she said: \"I think what you need is something to take your mind off of everything.\"\n\n\"Like what?\"\n\n\"Well, you do have a wedding to plan.\"\n\nNessira looked up at her mother with a confused look in her eye's before she said: \"after everything that's happened, maybe this isn't the best time to plan a wedding.\"\n\n\"On the contrary, I think it's the perfect time, focus on that and it will take your mind off of all that's happened.\"\n\n\"Maybe you're right, but what if someone tries to ruin it, that seems to be my life now?\"\n\n\"I am Lilith, the Goddess of love and sex, do you think for one second I would ever let anyone ruin my daughters wedding?\"\n\nNessira smiled at her before resting her head on her shoulder. \"I love you, Mom.\"\n\n\"I love you too.\" She said as they embraced\n\n\"So,\" Nessira said trying to dry her eyes, are you bringing a date?\" Nessira said half-jokingly.\n\n\"Um...\" Lilith said getting up from the chair. \"Funny you should say that, I was sort of on a date tonight.\"\n\n\"Really!?\"\n\n\"Yeah, it was actually going well until... Well, until I messed it up.\"\n\n\"Was this that guy who summoned you?\"\n\n\"Oh no, Koldak and I had some fun with him but he needed work, I just helped him get his girlfriend back.\"\n\n\"So who was this guy?\"\n\n\"He was this young nervous bumbling fearful 25 year old who was dared by his friends to buy me a drink.\"\n\n\"Oh really?\"\n\n\"Well not me, for the most beautiful woman he saw, which apparently was me.\"\n\n\"Interesting, so what happened?\"\n\n\"I took him to the top of the Empire State Building. He's apparently afraid of heights.\"\n\n\"Okay and then what, you didn't push him off did you?\"\n\n\"I kissed him.\"\n\n\"Oh, So romantic, so what went wrong? Did all his fears start to bother you, did he do that annoying thing where he corrected your grammar over and over again?\"\n\n\"What? No, I lost control for a moment and... he saw me.\"\n\n\"Saw you?\"\n\n\"The real me, my true form.\"\n\n\"Oh, then you pushed him off?\"\n\n\"There was no pushing, he was a bit shocked and asked if I was Lilith, and I left.\"\n\n\"Why?\"\n\n\"Because I felt it was best.\"\n\n\"But it sounds like he was more curious than afraid.\"\n\n\"Look, Honey, what does it matter anyway, it's not like anything would've happened, I mean yeah we'd have a great night, I would have rocked his world and left him begging for more, but that's it.\"\n\n\"Why are you so afraid to get close to anyone?\"\n\n\"Because of who I am.\"\n\n\"Wasn't it you who just told me you wanted me to be happy? Well, why can't you be happy too? Even if it's just for a little while, go for it, jump off the Empire State Building holding his hand, what's the worst thing that can happen?\"\n\n\"We splatter against the pavement?\"\n\n\"You know what I mean, it sounds like you liked him.\"\n\n\"I don't know, It wouldn't be fair or safe for him, that's what frightens me.\"\n\n\"No, go find him and be happy, even if it's just for a night, go and have a good time, in fact, if you do I promise I'll start planning the wedding and even let you help.\"\n\n\"Really?\"\n\n\"I never thought I'd ever say a single word in that sentence, but yes.\"\n\n\"You drive a hard bargain.\"\n\n\"And leave Koldak out of it, you don't need that penis demon to get off.\"\n\n\"Fine, here he is,\" Lilith said handing Nessira a statue of a demonic looking cock.\n\n\"Okay?\" Nessira said surprised it was that easy before taking it and placing it on a shelf nearby. \"Now get out of here.\"\n\n\"I'm going, but hey, are you gonna be okay?\"\n\n\"I have Patrick, Shadow, and you, I think I'll be fine.\"\n\n\"Oh before I go, take this,\" Lilith said handing her what looked like a dream catcher.\n\n\"You can't be serious.\"\n\n\"Trust me, go get some rest, I promise you things will get better,\" Lilith said before she disappeared in a flash.\n\nNessira looked over the little circle she was handed thinking it was a bit stupid but she knew to trust Lilith. She headed back upstairs trying not to wake up Patrick as she climbed back into bed after hanging the dream catcher on the wall. She was still afraid of what dreams may come but she felt Patrick lean over throwing his arm around her. She smiled and got comfortable in his embrace before finally closing her eyes and trying to go to sleep.\n\n-----\n\nChris had just gotten home and was still a bit disappointed and confused about what had happened earlier that night. He had met this great woman and thought he was hitting it off with her until he got a strange vision and she disappeared leaving him alone on top of one of the last places he wanted to be. It felt like it took forever for him to get off the elevator as he was also a bit claustrophobic. He turned on his light and got ready for bed as he sat down on the edge of his mattress taking his shoes off.\n\n\"So I guess I owe you an explanation?\" A woman's voice suddenly said as he jumped off his bed shocked to hell.\n\n\"Holy, how did you... Hi?\"\n\n\"Did I startle you?\"\n\n\"Just a bit, but it is nice to see you.\"\n\n\"I am sorry about before, about everything.\"\n\n\"What was that, that thing I saw, and where did you go, and how did you find where I live?\"\n\n\"I, well...\"\n\n\"Please just tell me.\"",
        "\"You wouldn't believe me if I did.\"\n\n\"I know what I saw, just tell me.\"\n\n\"Alright fine, I am Lilith.\"\n\n\"As in, bible Lilith?\"\n\n\"Yes, well, the Lilith that story is based on.\"\n\n\"Wow, um... So?\"\n\n\"So what?\"\n\n\"So, if that's true then what was your plan, with me I mean?\"\n\n\"My plan?\"\n\n\"Well, I just um...\"\n\n\"You thought I was going to kill you didn't you?\"\n\n\"No,... Well I mean, look you have to admit, a woman like you hanging out with a guy like me does raise some questions.\"\n\n\"If I wanted to kill you, you'd be dead already.\"\n\n\"Okay?\"\n\n\"Look, It started out with me just humoring you I'll admit that, but I found you interesting alright, I don't spend a lot of time with humans so I was just testing the waters.\"\n\n\"Testing the waters? Testing for what?\"\n\nShe walked over to him getting close as he backed up against the wall. He was a little nervous not sure what she was going to do to him. She bit her bottom lip as if she wanted something from him but he wasn't sure what.\n\n\"You are so fascinating, you are afraid of so many things, you were afraid of me when I was just some beautiful woman, but now knowing what I am your fear has changed, you aren't afraid of me per say, you are more curious about me than anything, you are afraid of your feelings about me. You're afraid of what it means that you aren't afraid, this confliction is intoxicating, you are also afraid of what I can do to you, aroused, but also worried if you can satisfy me.\"\n\n\"How do you know all that?\"\n\n\"I am Lilith, I know how to read men.\"\n\n\"Oh, so what now?\"\n\nShe pushed him against the wall before leaning in close. He saw a fire in her eyes that didn't seem human as she had a look almost like an animal stalking her prey. Chris could feel her breath against his face and couldn't hide his arousal but she was right. There was a fear inside him but it wasn't of her exactly. He knew some things about Lilith and who or what she was and also what she was capable of but he also assumed she was right, she could have killed him whenever she wanted to.\n\n\"Your heart is racing Chris.\" She said still only inches from him.\n\n\"Yeah.\"\n\nShe smiled before she pressed her lips to his slipping her tongue into his mouth playing with his. He was a much better kisser than most humans she noticed as their lips continued to touch. She still wasn't sure what it was about this guy but she found herself aroused by him more than usual. She used to get excited about fucking men when she knew it was for feeding or for domination but this was different, she just wanted to have sex with him.\n\nShe finally removed her lips and took a step back still smiling at him and looking at him with an almost playful yet sadistic look in her eyes. Chris's arousal was apparent as it pressed against his jeans. Lilith grabbed the shoulder straps of her dress sliding them off her and letting it fall to the floor. Chris's jaw dropped as he saw her standing naked in front of him. He had never seen a more perfect woman in his entire life whether it be in person or a photoshopped model on his computer.\n\nWith the snap of her fingers, his pants fell down around his ankles leaving just his boxer shorts there with his cock sticking out the front of them. She looked down examining his manhood for a moment. She was impressed with his size as she looked back into his eyes and stepped closer.\n\n\"Relax Chris, I guarantee that you and I are going to have a good time.\" She said kissing him again before she began to kneel down in front of him. He was practically shaking as she slid his shorts off and saw his cock in full. \"Don't be afraid to cum, I will make you cum over and over again until I've had my fill.\"\n\nChris was still nervous as he felt her finger gently caress his shaft. She was having fun teasing him, knowing how nervous he was just turned her on even more. She enjoyed the control she had over men as so many of them liked being in control but Chris was much more submissive than most and this just made her want to please him even more.\n\n\"This one I call, the kiss of Death.\" She said as she grabbed his cock and gave it a very gentle kiss on the side of its head.\n\n\"Oh FUCK!\" Chris yelled out as his cock erupted squirting all over the floor as she moved aside letting the cum fly.\n\n\"Ha, I still got it.\"\n\n\"I am so sorry.\"\n\n\"For what? That was my plan, men are usually more relaxed after they cum, and like I said, you will cum many more times.\"\n\n\"Um, why do you call that the kiss of death?\"\n\n\"Because I used to kill men by making them cum like that, but don't worry, I won't kill you, well, I'll try anyway.\"\n\n\"Wait... What?\" He asked but she suddenly had her lips wrapped around his cock and was sucking him off. \n\nDespite the fact that he had just cum moments ago it still felt amazing as she gently sucked his member which was still as hard as it could be. He felt her finger gently caress his balls before she cradled them. which only added to the sensation as she tickled his member with her tongue. With each passing motion, he had never felt anything more amazing than this.\n\nAfter a few moments, she finally released her lips sliding her tongue along his shaft licking it like an ice cream cone. She sat up a little and grabbed his cock taking the tip and gently rubbing it against her nipples letting his precum soak it making her skin shine. It was such an amazing feeling as she gently stroked him off while her nipples tickled the head of his cock driving him wild.\n\n\"Oh shit... Shit!\" He said getting close to going again.\n\n\"Let it happen, enjoy this moment!\"\n\n\"FUCK!\" he said as his cum began to spray again against her nipple as she continued to rub it against his tip feeling his warm slimy cum against it.\n\nIt went on for a few moments but once his cock stopped squirting all over her nipple she stood back up in front of him kissing him again. He wrapped his hands around her waist feeling her warm soft skin as their kiss grew more passionate. She kissed him harder as their hands explored each other's bodies a little before that same vision he saw before flashed before his eyes. It was a bit strange at first but he didn't care as he continued to kiss her tasting her lips not caring about what she truly was.\n\nShe knew what he was seeing and was happy he didn't want to stop. After tasting him a bit more she removed her lips smiling at him. She licked his lips before letting go of him and backing away with that same devilish look on her face which only aroused him more. She took a few more steps back showing off her body for him to see still smiling at him.\n\n\"Okay, looks like your ready.\" She said as she turned around and bent over against the end of his bed. \"Now come to Momma.\" She said spreading her legs showing off her amazing ass and inviting pussy.\n\nChris pulled off his shirt as it was the last piece of clothing he still had on. He walked over behind her not sure what to do at first until he felt something pulling on his cock. He didn't know how to describe it but it was almost like her pussy sucked his cock into it pulling him inside as her ass pressed against him.\n\n\"That's a good boy!\" She said as her pussy squeezed around his cock. \"Now fuck me!\"\n\nChris stood there for a moment getting his footing before he began to move his hips sliding his cock in and out of her slowly at first but speeding up a little the more he got into it. The feeling as incredible as she began to whine a little and lift herself back towards him. He slid his hands around her stomach before sliding them up and cupping her breasts. Her nipple seemed dry despite cumming all over it moments ago. He felt her nipples perk up a little as her hand reached back sliding across his cheek and grabbing his hair a little.\n\nShe smelled so good which he thought was odd that he noticed that during sex but she did. Her scent made him feel comfortable which he then assumed was part of her design being a goddess of lust and sex. He started kissing the back of her neck working his way around to the side of it as he continued to thrust himself into her.\n\nFor the first time in a long time, Lilith was actually enjoying herself. When she fucked Eliot she really couldn't get into it as he didn't interest her at all but Chris intrigued her in many ways. Letting herself relax and have fun she realized that Nessira was right and she was actually enjoying this very much.\n\nChris could feel himself ready to pop again at any moment as he pressed his face against her shoulder. She smiled and squeezed his cock inside her knowing how close he was and did everything she could to make him cum again. It didn't take long until he let out a yell and she could feel his juices filling her and dripping out the sides of her pussy.\n\n\"Oh my god! This is amazing.\" Chris said as he leaned against her holding her in his arms taking deep breaths.\n\n\"Well, we aren't done yet.\" She said turning her head and kissing him.\n\nShe slid off his cock before she crawled into his bed. She slid up against the pillows and spread her legs before taking her finger in motioning for him to come to her. Chris looked down at his cock which was soaked with different fluids but still hard and ready to go. He crawled up towards her pressing her lips to hers as she wrapped her arms around his head. Her hand slid down his back grabbing his ass and pulling him close as his cock slid back inside her with ease.\n\nLilith let out a moan as her legs wrapped around him. Chris thrust himself even more into this amazingly gorgeous blonde woman between him and the mattress. He thought maybe he was dreaming as there was no way a woman or a Goddess like her would ever want a guy like him but he soon realized that even if he was dreaming he didn't want to wake up any time soon.\n\nLilith had not cum yet but she knew Chris was going to get her there. With each thrust, she felt the pleasure build inside her and she knew it was difficult for any human to make her cum. Deep down she knew it, she was enjoying him and every time his cock entered her it felt good so even if it took time it was going to happen.\n\nChris began kissing her again before working his way down as he began teasing her nipples with his tongue. She liked how brave and adventuress he was getting as he continued to do his best. She grabbed his face and pulled his lips to hers tasting the sweat on them as she could tell he was moments away from going again.\n\nWith a thrust, he put some force into trying to satisfy her as Lilith let out a little yell surprised at how good it felt. He was pretty well endowed for a human and it was hitting her sweet spots the more he tried. She grabbed him burying his face against her neck as she wrapped her arms around him feeling his cock quiver seconds before he blew again. Each time seemed a little harder and stronger but she was using her powers to keep him full and ready to go over and over again.\n\n\"Having fun yet?\" She said with a grin kissing him again. \"Hey I have an idea,\" she said reaching over and grabbing his phone before she started taking selfies with him still on top of her.\n\n\"What are you doing?\"\n\n\"Just some pics to show your friends, they probably won't believe you.\"\n\n\"I don't care what they think, this has been incredible.\"\n\n\"Well, we aren't done yet.\"\n\n\"Really? I don't know what I've got left.\"\n\n\"Don't worry, I got you.\" She said as she rolled him over onto his back.\n\nLilith straddled him letting his cock slide inside her once more making it easy for him to rest while she did the work this time. Chris looked up at the goddess on top of him still shocked and amazed that this was happening to him. Her skin glistened covered with sweat and other fluids only making her look more amazing as she smiled down at him biting her lip.\n\n\"You know, you are the first human in a long time to get me this close to orgasm.\"\n\n\"You're making that up.\"\n\n\"Nope, the last guy I was with I had to summon a penis demon to get off, but I am so close and you are gonna get me there.\"\n\nShe began to move her hips milking his cock as she ran her fingers along his chest. He placed his hands on her hips as he was still enjoying the sensation. Lilith was getting closer to orgasm and the closer she got the more she began to lose a little control of herself. Chris closed his eyes for a moment but then looked up and saw her eyes starting to glow a little turning red. Her fingernails started to extend a little before he noticed her hair suddenly turn red and two horns sprout from the sides of her head.\n\n\"Oh, God!\" He said looking up at the succubus on top of him.\n\n\"I'm almost there... Get me there!\" She whined as he could see the pleasure and almost frustration in her face as she moved her hips harder. \n\nHe did his best sliding his hands up and cupping her breasts again as he felt something strange. He looked down and saw what looked like a tail start to slither around the base of his cock squeezing it as Lilith continued to bounce up and down on him. The sensations he was feeling were intense as he pulled himself up sucking on her breasts as his hands slid down and squeezed her ass. Her whines and moans grew louder as she wrapped her arms around his head pushing his face against her breasts.\n\n\"Oh yes, right there... Don't stop!\" She said.\n\nChris was both concerned and extremely aroused as this creature had her way with him. He honestly didn't know what was going to happen but he didn't care. Her tail was jerking his cock while her pussy slid up and down on it creating an amazing sensation until she dug her claws into his back before letting out a shriek. \n\nHe could feel the muscles inside her spasm around his cock before he was soaked with her fluids which only added to the sensation as his cock erupted once more this time much stronger than any of the previous ones. The pain in his back could barely be felt as the pleasure between them was much stronger. He wasn't sure how long it lasted before he collapsed back on the bed with her falling on top of him.\n\nThe room was spinning as Lilith was still on top of him with his cock inside her. She was resting her face on his chest as he watched her hair turn back into blonde and the horns receded back into her head. She laid there for a while finding comfort with him as they both struggled to catch their breath. Lilith looked up at him kissing him again for a moment before finally releasing his cock from between her legs. She slid up next to him getting comfortable in the bed as she noticed he was suddenly unconscious.\n\nShe smiled to herself knowing she had taken a lot out of him. Usually, this is when she would sneak away but she decided to lay there with him. She thought about what Nessira had said to her about finding someone. It was a crazy thought, she knew dragging this young man into her life would not be fair to him but she also had been feeling very lonely lately. Being what she was often lead to a lonely life so for now she would take her daughter's advice and just have fun."
    ],
    "authorname": "maestro84",
    "tags": [
        "succubus",
        "succubus seduction",
        "blow job",
        "doggy style",
        "succubus sex",
        "lilith",
        "absorb energy",
        "nonhuman",
        "date"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-date-with-lilith"
}