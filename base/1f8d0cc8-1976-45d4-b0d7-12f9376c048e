{
    "title": "Efrain and Cory Ch. 28",
    "pages": [
        "Chapter 28 \u2013 Gagging For It \n\nIndie refused to acknowledge the stack of bills Laurel slapped into his hand. \n\n\"Why do I have to go?\" he asked. \"You were supposed to bring alcohol, not send me to buy it two nights before.\" \n\n\"You always get the good stuff.\" She shrugged. \"We thought it would be better if we just collected the money we would have spent and had you pick out something worth drinking.\" \n\nLaurel's \"we\" referred to her two best girlfriends, Meggie and Lacey, and their boyfriends, Drew and Clint (the one Efrain and I had traumatized). Efrain, Gio, and I were joining Thursday's party because we live here (and Laurel wanted Efrain to cook). Indie invited his squeak toy (as 'Rain had taken to calling him) because Preston would have invited himself anyways, and Gio had a date, too. JJ and Berta were also coming, oddly by Indie's invite and not ours. \n\n\"No, you were too lazy to make a booze run before crashing my place.\" \n\n\"Look at it this way,\" Mike said. \"We would have cleared out your stash instead of drinking the shit we brought over.\" \n\n\"Just imagine a dozen people descending upon your alcohol like a swarm of boozy locusts, leaving you stuck with a fridge full of crappy beer and boxed wine.\" \n\nI was glad that Keenan lived halfway across the country. I barely handled him and Preston pulling the best-friend double-team on me over Skype; I couldn't imagine them both working me over in person. \n\n\"What did you do with all that shit anyway?\" Mike asked. \n\nIndie pointed over at Efrain and me. \"I made them take it to one of their football party-whatevers.\" \n\n\"Thanks, by the way,\" Efrain said from his position at the stove. \"Most of it ended up puked out all over Matt Carey's floor.\" \n\n\"It's my understanding,\" Preston said, \"that his couch still smells like vomit.\" \n\n\"You see? There is a use for your shitty booze,\" Indie said, and shoved the cash back at her. \n\n\"I know you're all about poetic justice and everything,\" Laurel said, shoving the money at him once more. \"But, you're still going on that booze run.\" \n\n\"I'm not going by myself.\" \n\n\"Fine, take Mike,\" she said. \n\n\"But, I...\" Mike started. \n\nLaurel turned on him. \"But, sweetie, Efrain is busy making dinner, plus we have to menu plan. And, Cory is all tuckered out from moving his old roommates into their new digs, Gio is out with his lady friend, and Preston promised to help me with dessert.\" Her tone was honeyed, but you just knew that any refusals would lead to a night on the couch. \n\n\"My car or yours?\" Mike asked Indie. \n\n\"Thought I'd never get him out of here,\" Laurel huffed as soon as they walked out the front door. \n\n\"What are you up to?\" Efrain asked. \n\n\"My usual antics and shenanigans.\" She waited until Mike and Indie had driven off before pulling out three books she'd secreted over in a satchel, then crooked her finger at Preston and beckoned him over. \"You, sir, have earned a reward.\" \n\n\"Have I, now?\" \n\nHe walked to Laurel and her stack of what seemed to be yearbooks. The smallest was from a school called Townsend, and the other two were from Bishop. I assumed those were the middle and high schools she and Indie had attended. Laurel cracked open the Townsend yearbook, flipped to a marked page, and pointed. Preston peered at the page. \n\n\"No,\" he gasped. \"That's him?\" \n\n\"Absolutely,\" Laurel giggled. \n\n\"I fucking knew he was a blonde!\" Preston said. \"Cute little shorty.\" \n\n\"I don't know why you're calling him shorty,\" she snorted. \"He was already taller than you are now!\" \n\n\"Whatever.\" Preston waved his hand. \"But this certainly throws my ugly duckling complex theory out the window.\" \n\n\"He was pretty baby, too,\" Laurel said and shrugged. \"I still have no idea why he thinks he's so unattractive.\" \n\nCuriosity won out, and I came around to look, and Efrain followed, wiping his hands on a dish towel. Laurel's finger still pointed to the picture of a cute teen with chocolate brown eyes and a fauxhawk of dark ash blonde hair. Three sets of earrings marched up his earlobes. \n\nI thought I knew who that was supposed to be, but looked at the list of names just to be sure. The guy was smiling, not the smile you involuntarily give when the photographer tells you to, but an actual smile\u2014like the kid had something to be happy about. Seemed impossible to be the same guy, but sure enough... \n\n\"Indiana?\" Efrain asked. \"No wonder he never gave me a key for the mailbox.\" \n\n\"It gets better,\" Laurel said before moving to another marked page, a two-page spread for the boys' and girls' track and cross-country teams. \"That's how we met,\" she said, pointing out Indie and herself in their respective team pictures. \"We both did cross-country in the fall, and track in the spring. I ran the 100m, 400m and relay, and Indie did the 1600m, hurdles, and long-jump.\" \n\n\"That's fucking adorable,\" I said and pointed to a candid shot of Indie carrying Laurel on his back. He'd had his first eyebrow and lip piercings done by then, and his hair seemed to be a different color. Her face still held traces of baby fat and girlhood, but strongly hinted at the woman who'd eventually be sharing yearbooks with us a decade later. \n\n\"I know, right?\" she said. \"He got a lot of shit because I was still technically an elementary school kid when we started hanging out during summer training.\" Preston and I gave her a confused look, so Laurel flipped over to an unmarked page and pointed herself out among the sixth graders. To the side of her picture, a school friend had written Indiana Norman and the Cradle of Doom. \"The fact that I had a huge fucking crush on him probably made the whole 'cradle robber' matter worse.\" \n\n\"You had a crush on Indiana?\" Efrain laughed. \n\nShe paged back to his school photo and quirked her eyebrow. \"Tell me you wouldn't try to hit that back then.\" \n\nEfrain, Preston, and I examined the picture, then looked back at each other. As my boyfriend was in the room, I didn't think it prudent to mention that my thirteen-year-old-self would have crushed on the attractive teen just as hard as my eighteen-year-old-self had crushed on the hot grad student. We shrugged, getting as close as we were willing to admit that little Indiana had been a little cutie. \n\n\"Y'all probably hadn't even hit puberty back then,\" she said, and I thought about it. I would have been eight. \n\nI still would've drooled. \n\n\"Bitch, you just barely hit puberty yourself.\" Preston flipped back to the cross-country and track photos. He pointed to her chest. \"Just how much of that is Kleenex and how much is you?\" \n\nLaurel laughed. \"None and none. Wore a padded bra for ages!\" She flipped to the last marked page in the small yearbook. \"BFFs\", superimposed on an infinity symbol, squatted in the center of the page. Surrounding it were photos of best friend pairs, mostly two boys or two girls. There were some trios, too. Each student had been allowed to sign his or her name as part of the caption. Laurel pointed to hers and Indie's photo, the only boy-girl pair. They'd drawn fancy moustaches on their index fingers and were holding them under each other's nose. \n\n\"I don't think I've ever seen Indie act goofy,\" I said. \n\n\"He wasn't afraid of being a dork or doing something out of the norm,\" she said. \"If people were going to talk about him, he'd give them something to talk about. Kept them from talking about the things he got tired of hearing.\" She closed the Townsend yearbook and grabbed the first of the ones from Bishop, which had only one marked page. \"His junior year. I was still at Townsend his first two years.\" She opened the book and pointed to his picture. This time, his hair fell over his face in the emo-est of emo asymmetrical fringes. \n\n\"What color?\" I asked. \n\n\"Bubblegum pink, I think,\" Laurel said. \"He had a flaming red Mohawk the first day of his freshman year.\" \n\nI looked back at his photo. His face had matured since middle school, the cutie growing more handsome over those last two years. He'd done the second lip piercing, as well as his fourth set of earrings and the first on his forward helix, the top part of his outer ear. \n\nSomething else was different this time, but I couldn't place it. \n\n\"Okay, let's get his track pictures,\" Preston said. \n\nEfrain laughed. \"You just want to see him in his little shorts again.\" Preston shrugged; as it was too cold to run in anything but pants, he'd yet to see his fuck buddy in the leave-nothing-to-the-imagination shorts he wore in the summer. Laurel had assured him that the sight was worth the wait, but I think we all wanted to see the teen version of our leggy roommate in his running shorts. \n\n\"There aren't any,\" she said, her mouth drawing into a tense line. \"He quit in the middle of track season freshman year. Said he wasn't good enough to compete in high school. I can't tell you if that was his idea, or Jameson's.\" Laurel looked like she wanted to say more, but just sighed and rolled her eyes and grabbed the last book, so she could show off his senior picture. \n\nGraduating seniors got full-color pictures, so once again we saw young Indiana in bright hues. The suit and tie they made him wear contrasted with his alt-scene vibe, but he worked it better than some of the other graduating seniors. Last year's hairstyle had been allowed to grow out, softening the edges around his face. Laurel identified his hair color, a kind of seafoam green, as Manic Panic's Mermaid. Only a few more piercings had been added, including the tongue bar according to Laurel. \n\nLike his classmates, his name was printed under his photo, rather than listed to the side, along with his nickname \u2013 Indiana J. Norman, \"Indie\". Unlike them, however, there were no school activities or personal quotes listed. \n\nThe something that I couldn't quite place about his last picture was here, too. I was still trying to figure it out, but Laurel pulled back the book and flipped to the last marked page. When she settled the book on a series of Homecoming pictures, Preston bristled. It was easy to pick out Indie's distinctive looks among the photos of teens in their suits and dresses; he'd shot up to his full-height by senior year, and no one wore as much body jewelry as he did. \n\nIn this picture, he and Laurel stood in formal wear with coordinating wrist corsages and boutonnieres. For such a perpetual slouch, the almost model-like proportions of his body sure did look nice in a suit. And Laurel's gamine frame, sheathed in a simple satin number, cut an elegant figure. The couple next to them was a sharp contrast. The girl's frilly confection of a dress gave the appearance of a middle schooler who'd snuck in. The boy's sloppy mop of curls and loosened tie made him look like a schlub in comparison to Indie. They hugged up on each other to the point of dry humping, as if making up for the respectable, yet companionable, distance between the best friends. \n\nThe other boy in the picture seemed to account for Preston's negative reaction. \n\n\"That's fucking Jameson, isn't it?\" Efrain said. He looked again. \"He looks like that guy messing with you that one night.\" \n\n\"Yup,\" she said. \"Michael Jameson.\" I picked up the first Bishop yearbook and flipped through the juniors to find the shithead's picture, but she shook her head and pointed me to the sophomores. \"He flunked freshman year,\" she cackled. \"One of those gifted kids that flew through everything and didn't know how to handle things when they got challenging. Just barely made it out of high school.\" \n\n\"You said they'd been together since freshman year,\" Efrain said, pointing back to the group photo. \"Why is he hanging on this girl?\" \n\n\"Oh yeah, Haiden Coleman,\" she said. \"Indie used to call her 'Hoyden' behind her back. They hated each other.\" \n\n\"Jameson's beard?\" Preston asked. \n\n\"That's what he told Indie,\" she said. \"And he believed him for two fucking years, even after I told him that Jameson tried to feel me up. Twice.\" She pointed at Haiden's stomach. \"She was two months preggo when this was taken. Her parents talked her into having it 'taken care of' over Christmas break.\" \n\n\"That shit's cold,\" I said. \n\n\"The only reason I knew any of it was because she was convinced that we were friends.\" Laurel rolled her eyes. \"She and Jameson split after graduation because her parents bribed her with a brand new car if she went to school out of state. Put a second mortgage on their house to get her away from that piece of shit.\" \n\n\"So, wait,\" Preston said. \"Did Indie know about them?\" \n\n\"After I told him about Jameson knocking up Haiden,\" she said. \"But, they still stayed together for over eight years, and it was Jameson that left.\" \n\n\"When he knocked up that other chick?\" Preston asked. \n\n\"Yeah, the one that refused to have it 'taken care of',\" Laurel said. \n\n\"Indie mentioned that toad's habit of shoving his dick in anything that walked and impregnating it,\" Preston said. \"The fuckwad had the balls to tell Indie that he missed him.\" \n\n\"Missed Indie paying for everything, more like,\" Laurel growled. \"But, I so fucking love this picture. Pissed Jameson off that someone snagged a picture of him with Indie.\" \n\n\"Even though there were two people between them?\" Preston asked. \n\n\"He was so in the closet, and Indie so wasn't,\" she said. \"You know he came out in the boys' locker room during second period on the first day at high school?\" She chuckled at our shocked expressions. \"But, yeah, Jameson didn't want there to be photographic evidence of their relationship in case someone got the idea that he was into the D. Pitched a massive fucking fit when yearbooks came out.\" Her smile turned downright evil. \"Worth every damn penny.\" \n\n\"For the yearbook?\" Efrain asked. \n\n\"For bribing the yearbook staff,\" she answered. \"Sold more ads than anyone on staff, I wasn't even in journalism!\" \n\n\"So, what am I being rewarded for?\" Preston said, once her evil giggles had subsided. \n\nLaurel pulled out her phone and swiped through a few screens before turning it around for him to see. One of the pictures Preston had taken of him and Indie was on her screen. \"I tagged him in all of them on Facebook. You have no idea how thrilled his mother is!\" \n\nPreston cocked his head to the side. \"I just took some pictures,\" he said, his confusion evident. Laurel pinched his cheek. \"What's so big about taking pics of friends?\" \n\n\"Everything,\" she said. \n\nI pulled out my phone and opened Facebook. Lately, more of the pics in Preston's feed featured Indie. I tapped on one of the more recent ones and tilted the screen toward Efrain. \n\n\"Damn.\" \n\n\"That's what I said,' Preston giggled. \n\nIt had been a surprise seeing Indie suited up. Preston even got some shots of him presenting his research with Professor Collins and Mike, looking more confident than he'd been in the lectures I'd attended over the summer. \n\nAnd then it hit me. \n\nI turned back to Indie's school photos. He wasn't smiling, I realized. Somewhere between eighth and eleventh grade, Indie stopped smiling in photos, his face becoming a cold, expressionless mask instead. I flipped back through Preston's pictures, noting the change. Indie hadn't returned to the grinning thirteen-year-old goofball, but cracks were starting to show in his mask. The Iceman had begun to thaw. \n\nNo wonder Laurel was happy. \n\n\"He hasn't been the easiest person to be around,\" she said. \"I know it's impossible to undo everything that shitstain did, but you've all helped bring back the guy I remember. I thought you deserved to know a little about who Indie was before...\" She nabbed Preston in a hug and gave him a big, dramatic kiss on the cheek. \n\nLaurel busied herself with gathering her yearbooks and slipping them back into her satchel, breaking our little moment. A bottle rum materialized from her satchel, along with cake mix and frosting. \n\n\"Alright, boys. Who wants to help me booze up some cupcakes?\" \n\n~*~*~*~ \n\n\"You're insane,\" I said. \"You know that, right?\" \n\nIndie shrugged. \"Perhaps.\" \n\n\"You're really going to do it.\" \n\n\"Indeed,\" he replied. \n\n\"But, it's fucking...\" I gestured at the sign above the store's entrance and just barely choked out the rest of the sentence, \"Spencer's.\" \n\n\"And you're coming in with me.\" \n\nI shuddered. \n\nAs if we hadn't learned our lesson last Christmas, Indie and I had left our holiday shopping to the last damn minute, and thus found ourselves trapped in a fucking mall. I'd plowed through most of my list last week, but I still had a few things left. More importantly, I still had to get my sister something. I'd been trying to figure out what to do because I'd never hear the end of it if I got her a damn gift card like I did last year. Zoe had been hard to buy for ever since she hit puberty. Shit had been easy when all Juaquin and I had to do was get her something pink and frilly. Now, we had to put in actual effort, as if buying a Barbie doll wasn't effort enough for a teenaged male. \n\nBut, for the first time in four years, I had a decent idea. \n\nYou see, Cory and Rice... erm... Adrian had been going on about these fucking charm bracelets that women in Texas lost their shit over. Adrian had said it was like a gift for yourself as much as the chick. \"Dude, you fuckin' buy her the damn bracelet, then buy the fuck out of the charms any time you have to give her something. Hell, they'll make a damn wishlist, so you don't even have to think about what you're buying.\" \n\nCory agreed. \"And, if you fill up the bracelet, you buy another one and fill that shit up, too.\" Apparently, Elaine Card owned enough charm bracelets to cover her arms, from wrist to elbow, on both sides. \"And, if you run out of charms, you buy a different brand and buy the fuck out of those.\" \n\nI had made the mistake, however, of saying that I should buy one for Zoe, as that led to a lot of, \"Who's Zoe?\" \n\nI was still kicking myself for not telling Cory to keep my baby sister a secret because he'd not only fucking told the guys about her, but had showed the Brain Trust the fucking pictures that they'd taken with his phone over Thanksgiving. I'd realized too late that he'd never had a sister, of any degree of attractiveness, and had never had to deal with his friends going on about how hot she was (having to listen to his female friends and not-straight guy friends gush about his hot as fuck brothers doesn't count). \n\nThen he just had to tell them that Zoe looked just like Mom, which required photographic evidence. \n\nWhich he had. \n\nWhen the fuck did he take a selfie with my mom? \n\nSo, now I had been saddled with yet another social group that wouldn't shut the fuck up about Jailbait Zoe and Lena the MILF. \n\nAnd add insult to injury, Cory was all like Fun Fact: 'Rain looks just like his dad, and Lithgow... I mean, Mitch (going to first-name basis with the Brain Trust was a stupid idea, no matter what Baker... fucking hell... Paul thinks) had to stir the pot by asking if Cory thought Dad was hot and thought it was the most hilarious thing ever when Cory said, \"Sorry, vato, but Bon's kind of a DILF.\" \n\nWhich required photographic evidence. \n\nWhich he had. \n\nWhen the fuck did he take a selfie with my dad? \n\nSo, yeah, charm bracelet for my jailbait sister... \n\nThe thought of never having to put actual effort into gift-giving for years, maybe even decades, appealed to me. Even Indie had acknowledged the genius of my plan and decided to come along. Misery loves company and all that shit, but really, I think he just wanted to take the easy way out with Laurel's Christmas present. And since Cory and Preston were tied up tonight with end-of-semester GSA business, we figured we might as well deal with it while they were busy before mall conditions worsened. ",
        "Cory had already helped me pick out a bracelet and a few charms to get Zoe started the night before, so shopping wasn't going to be that hard. I doubted I would be the first, or last, man to walk up to the jewelry counter at Macy's and throw down a shopping list. Indie, however, didn't even know where to begin. I doubted he would be the first, or last, man to fall victim to a Macy's sales clerk. \n\nWhile Indie took his sweetass time, I turned around and leaned back against the counter. Macy's saw fit to group their female vices on the main floor. We had to walk through the cosmetics and perfume department, and a good deal of the women's clothing sections, to get back to jewelry. And I ended up looking out over the shoe department when I turned around. Fucking dozens of displays\u2014heels, flats, boots, those stupid ugly as fuck Uggs. \n\nBut then tucked in a corner, were the men's shoe displays. My Sperry's were looking a little rough, but I knew I could get them cheaper at the base exchange back home. However, I figured it wouldn't hurt to look while I was there and was scanning the department for the display when bright colors and patterns drew my eye. \n\nI tapped Indie's shoulder. \"Hey, man, I'll be over there,\" I told him, and he nodded, the saleslady still yacking him up as I made my way over to what looked like an array of vintage ASICS trainers, despite the Onitsuka Tiger label. There were a couple styles, with different color combinations, but the prints were what really caught my attention. Just as I'd never heard of Tigers, I had no idea what tokidoki was, even though a quick search on my phone revealed that both companies had been around for awhile. The tokidoki Tiger prints featured little cartoon tigers in different outfits\u2014from kimonos and business suits to street clothes and athletic wear. \n\nIt all screamed CORY. \n\nLoud enough that I didn't hear the salesclerk sneak up until he was right on top of me. \n\n\"Can I help you?\" \n\n\"Yeah, sure,\" I said. I picked up the electric blue trainers with brightly colored tigers on the side panels, and the black trainers with silver tigers in business suits and fedoras. \"Do you have these in 11 and a half?\" \n\nBy the time Indie strode over and plopped down in the seat next to me, the salesperson had come and gone, and I was in the middle of trying them on. \n\n\"For Kitten?\" He pointed down at my feet, where I had a blue shoe on one foot, and a black on the other. They were in two different styles, too, but both fit well enough\u2014plenty of room to fit his wider foot and lower arches. When I told Indie, he laughed at me for knowing how Cory's shoes fit. \"Dude, you are so lost.\" \n\nI waved my hand dismissively and looked back down at the shoes. \n\n\"Not sure which ones to get,\" I mused. \n\n\"Por qu\u00e9 no los dos?\" he said, almost as if he were trying to rush me. \n\n\"Because both would be excessive.\" \n\n\"The black ones seem more your style than his anyway,\" he said. \n\n\"We agreed to not get each other anything...\" I started. \n\n\"You lied, big deal,\" he argued, very let's-get-this-moving. \"They're on sale\u2014get both and trade.\" \n\nI gave into his logic. I think this was what Juaquin had been going on about when he talked about racking up \"honey points\" with Jennifer in case he fucked up somewhere down the line. A couple pairs of shoes, on sale, just in case I put my foot in my mouth. Could work. \n\nIndie pointedly looked down at his watch, like he hadn't been the one hemming and hawing over the jewelry counter and taking for-fuckin'-ever to shop. I made the split-second decision to buy the damn shoes, both pairs, and was once again thankful that my parents still thought I was young enough to continue to giving me money for my Christmas shopping. \n\nBut, in retaliation for the impromptu shoe purchase, Indie dragged me all over looking for something for Laurel's parents. \n\nNow he was insisting on piling on further torments. \n\nSeriously, fucking Spencer's. I'd rather have the collective verbal pollution that was the mall Santa que pumped into my ears in a five second burst than walk into the damn place. \n\nThe store was bad enough, but after Thanksgiving transformed itself into an even lower circle of hell than any level Dante could ever imagine\u2014one that traded fire and brimstone for blacklight and patchouli. Those stupid enough to enter soon became trapped in a hellscape of smoke machine blasts, neon posters, poseur stoner culture, and terrible music. \n\nAnd, my roommate wanted to drag my ass into the thick of it. \n\nI looked back at the window, where he'd pointed earlier. A cream colored t-shirt, featuring a grayscale image of Val Kilmer in a flight suit with Iceman in Top Gun lettering underneath, sat with other movie-themed crap. \n\n\"I need that shirt,\" he insisted. \n\nHe said it would be a quick in-and-out since he was only picking up the one shirt, and I bought it long enough for Indie to find the shirt in his size. It wasn't until we went to get in line that I realized the extent of my stupidity\u2014the damn checkout line filled the back half of the store as it snaked through the aisles. Indie, however, argued that he really did need this fucking shirt, and that it shouldn't take that long to make it through the line. \n\nHowever, within five minutes of waiting, Indie found something else he had to have. I was handed the stupid fucking shirt that he needed and asked to hold his spot while he checked out something on the far wall. After the line had shuffled forward a few feet (How the fuck do you only have one clerk at the register? Did they all just go on smoke break en fucking masse?), he returned with two small boxes containing strips of patterned cloth\u2014one in sage with taped-up nerd glass, and one in navy blue polka-dotted with tiny yorkies. \n\n\"Bow ties? Didn't realize you were into fashion statements.\" I deadpanned. \"Or have you and the squeak toy had progressed to the gift-giving stage?\" \n\n\"It's just what we do,\" he said. \"He gives me shit, I give him shit, and whatever.\" \n\n\"Since when?\" \n\n\"That's how it's always been.\" He gave me a funny look. \"Cory didn't tell you about that?\" \n\n\"Nope, I just assumed you became a thing because he maddogged you.\" \n\nIndie shook his head. \"After that whole blow-up, he'd been sneaking into my office and leaving hate gifts on my desk.\" \n\nMy eyebrow lifted, and he filled me in. \n\n\"Fucking fake snow? You're shittin' me!\" I laughed. \n\n\"No lie. A metric fuckton,\" he said. \"Preston was even thoughtful enough to include a little toy snowplow and a brick maker.\" \n\n\"And you had no idea it was him?\" \n\n\"None.\" \n\n\"So, why keep this up?\" I said, pointing to the ties. \n\nIndie shrugged. \"It's not like we're going out of our way to do it. Just 'I saw this and thought you'd get a kick out of it.' That kind of shit.\" \n\nCould he really be that oblivious? It didn't seem like he was being dishonest, almost like he truly had no fucking clue about what was really going on. God, all those times he razzed my ass about Cory and motherfucker was just as blind as he claimed I was. The potential for roommate torture grew exponentially the more he ran his mouth. \n\n\"The fuck you leering about?\" \n\n\"Nothin',\" I said, knowing I lacked the kind of wholesome good boy face to pull off the innocent look as well as Cory could. I think I made a decent go of it, regardless. Indie rolled his eyes and moved on with both ties still in hand. \n\nHoly fucking hell, I was going to have fun with this. \n\n\"How was he even getting in? Pick the locks?\" \n\n\"Apparently, the woman who cleans my building thinks they hung the stars by Preston and Cory.\" \n\n\"Oh, you pissed off the attack twink and the cleaning lady,\" I said. \n\nHe sobered. \"Mrs. Gail cornered me the other day and patted me on the face and said Listen here, Frosted Nuts, be good to my boys or I'll make your life hell.\" I snorted and then laughed outright when he hissed, \"She used my full name.\" \n\n\"Indiana?\" \n\nHis eyes narrowed. \"Laurel told you?\" I nodded, and he sighed. \"Goddammit.\" \n\n\"Though, not what the J was for,\" I said. \n\n\"Thank fucking God,\" he said. \"Don't know how, but Mrs. Gail knew my middle name. Scared the piss outta me.\" \n\n\"Man, it would be hilarious if your middle name was Jones or something,\" I mused. \"Like, I know that's your mom's...\" \n\nI trailed off when I noticed Indie's face paling. \n\n\"No way!\" I gasped. \n\n\"Well, fuck,\" he muttered. \n\n\"It is, isn't it?\" \n\nHe grunted. \n\n\"It really is...\" \n\n\"Don't say it.\" \n\n\"Indiana Jones Norman!\" \n\nIndie folded his arms over his chest and glared at me. \n\n\"Where's your bullwhip?\" I snickered. \n\n\"Very fucking funny, asshole,\" he muttered. \n\n\"You should get one; I'm sure your squeak toy would love it.\" \n\nIndie tried to glare at me again, but got distracted by something over my shoulder. He reached over and pulled small package off a rack. \n\n\"I'm sure your chew toy would love this,\" he smirked and slapped the package into my chest. \n\nI fumbled the box, and almost wished I'd left it on the floor instead of stooping to pick it up. The checkout line's slow as fuck crawl through the store had dropped us at the adult novelty section\u2014a symbol of everything that was wrong with this store. I had spent enough time as a teenager giggling over this section to know what was behind me. Just as there was a wall of pot leaf crap, there was a wall for plastic penises. For some reason, no bachelorette party ensemble was complete without penises. But why stop at the tiara decorated with hot pink marabou and topped off with a plastic penis? Penis ice tray, penis cake pan, penis pasta, penis cookies, penis pens. Of course, this was all available with titties on 'em. \n\nThen they had the \"for couples\" shit. Fucking lover's coupons and edible underwear (God, if my sexlife tanked so badly that I needed fucking naughty dice to get out of the vanilla range, I hoped someone would be nice enough to drag me out back and put a few bullets in me). This was the place to be when I was a little shit 'cause this little rack was where my friends and I had our first exposure to sex toys. It was the coolest place ever when we were high school freshmen and were clueless and desperate virgins. \n\nYeah, I knew what was behind me; I didn't need to look back. I looked down at the white and pink box in my hands. \n\nNow, that was a terrible idea. \n\n\"A fucking ball gag? I think you need this more than I do.\" I dropped the package onto his stack of ties. \"Half the neighborhood hears him squealing about how big your fucking donkey dick is.\" Indie rolled his eyes. \"Hell, even you'd benefit.\" I rolled my eyes up in an exaggerated \"O\" face and moaned, \"Fuck, baby, don't stop.\" \n\n\"Piss off,\" he laughed, putting the ball gag back on the rack. \"At least I can form coherent words. All you can do growl, grunt, and cuss.\" \n\n\"You've been listening at the door?\" \n\n\"No, that's your weird as fuck fetish.\" He paused. \"One of them, at least.\" He narrowed his eyes. \"Freak.\" \n\n\"Hey, I wasn't the one laid out on the weight bench with a twink on my dick.\" \n\n\"Ah, you heard about that, then.\" \n\n\"Heard? Dude, try saw. Callin' me a damn freak and you had the fucking door wide open.\" \n\n\"Well, you were giving Cory a hand job under my dining room table.\" \n\n\"We won't even discuss what you two were doing on the dining room table.\" \n\n\"You had him on the washing machine.\" \n\n\"And, you had Preston on my kitchen counters. I hope you disinfected them.\" \n\n\"Like you were supposed to clean all the couch cushions.\" \n\n\"Which I did. If they're dirty, it's yours and the cheerleader's mess.\" \n\n\"I prefer to keep my messy activities to non-porous surfaces.\" \n\n\"Was that why you were playing Naughty Professor: Home Office Edition?\" \n\n\"At least I'm not running up the water bill trying to stage some kinda locker room shower fantasy.\" \n\n\"So you putting Squeak Toy in the bathtub was your attempt at a bathhouse scene?\" \n\nIndie paused, as if thinking through an idea. \"Yeah, you're totally right. You two are getting enough mileage out of jizz rags.\" He started scanning the racks behind me. \"Maybe they have a muzzle Cory can strap on you.\" \n\n\"On second thought,\" I said, grabbing the ball gag he'd handed me earlier and slapping it back into his hands. \"I think this is yours.\" \n\n\"Nope, it's yours,\" Indie said. He picked up the package and pointed out the label. \"See, it has his name on it.\" For some reason, the box was printed in English on one side, and Spanish on the other, so while Indie pointed to Kitten Ball Gag, I saw Gatita Mordaza de Bola. \n\n\"Oh look.\" I picked up a gag dog toy someone had abandoned and gave it a sarcastic squeeze. \"For when you miss your fuck toy over the break.\" \n\n\"I wonder if Cory got him to make that noise,\" he said innocently. \"You know, they totally fucked around before we got to them. In fact, I remember watching them make out this one time. Fuckers were all over each other.\" \n\nGod help me, but I growled. I guess I was okay with Preston and Cory being a thing at one point, but I sure as fuck didn't like being reminded of it. \n\n\"I sometimes wonder what it woulda looked like. Maybe...\" He pulled out his phone and started thumbing and typing. \"Ah, here\u2014a dramatic reenactment.\" \n\nIndie turned the screen to me, showing a video he'd pulled up of a fluffy tabby kitten wrestling with a yorkie puppy. The little kitten had puffed itself out was doing that stiff-legged hop thing, while the puppy darted in and out, taunting the cat. \n\n\"Kinda ruins twink porn, huh?\" he said over the sounds of outraged yips and meows. Soft, cute little things that couldn't do any damage to something half their size, but not even the sense God gave a dishrag between them to keep them from trying. Yeah, I could see the connection. \n\nThe kitten let out a particularly fierce meow when the yorkie puppy bit its tail. Indie laughed, \"Oh, he's angry. I bet Chew Toy makes that sound when you bite him.\" \n\n\"You and your dick-wanking water jets can suck my left nut, tub boy!\" \n\n~*~*~*~ \n\nI should have known I was in trouble when Efrain claimed to be doing research. \n\nNo undergrad had any business \"doing research\" three days before the end of the semester, and only the most depraved did so while listening to chillstep and stroking a growing hard-on through thin cotton lounge pants. As I had no sense of self-preservation as far as my boyfriend was concerned, I didn't think fast enough to hightail it out of there. \n\nI was in more trouble that I could handle. I'm talking deep shit, here. \n\nThe kind of wood Efrain was popping spoke to how thorough his research had gone. I imagine very few college students got erections over their studies. Even fewer still issued orders for their boyfriend to strip down and get in their lap. Others would consider it well outside acceptable methodology to shove three fingers in said boyfriend's mouth and ask, \"How does a ball gag sound?\" \n\nWhich was how I found myself straddling Efrain's rippling thighs in nothing but my trunks as he showed me different sex toys and walked me through various scenarios featuring assorted toys in increasingly complex and absurd combinations. The longer I listened, the more I realized the danger to both my ass and my sanity. The one he was currently whispering in my ear had me strapped to the bathroom door with over-the-door wrist and ankle restraints, and involved a blindfold, a ball gag, two cock rings, and a rather evil-looking stainless steel butt plug. \n\nAnd included his lubed-up fingers in my ass, for demonstration purposes. \n\nSince both of his hands were occupied, I had to take over navigating through product specs and zooming in on images. He'd already made me add the ball gag, a roll of sex tape, and these weird plunger things called \"lube shooters\" (that he promised would be my new favorite thing in the world) to the shopping cart. I swallowed hard around the three fingers still rammed in my mouth, holding my tongue down, even though I'd long since given up on not drooling. The shivers running up and down my spine had nothing to do with the cold air on my bare skin, and everything to do with the low voice weaving lurid images in my ear. \n\nThe pad of Efrain's thumb caressed my jaw. \"...imagine how the nubs at the base would feel here,\" he murmured as he angled his knuckles over my prostate, causing my vision to tunnel until he reminded me to breath. I was pretty sure my whimpers and shivers would be enough to show him that I already had a good picture of what he was selling, but he still felt compelled to keep attacking. His fingers worked in and out of my hole, knuckles tapping into the tight little knot of nerves inside, and my eyes rolled up. \"Focus, Cory,\" he growled. His grip tightened between the fingers pressing inside my mouth and the thumb on my jaw as he roughly jerked my head. \"Fuck. Here I am trying to share about how much I want to worship your ass, and you can't even concentrate.\" \n\nHe made me go to the next tab, where another toy awaited my consideration. The black silicon vibrator looked much friendlier than the ten-inch wand of stainless steel on the previous tab, until he pointed out the e-stim mode that would hit my prostate with mild electric shocks. \n\n\"Perhaps that would get your attention.\" \n\nI whined. \n\nHe laughed. \n\nThe rich timbre rumbled against my ear and I had to tighten my grip on his shoulders before my jerking hips could buck me off his lap. \n\n\"You want it,\" Efrain whispered, the slight hitches in his breathing the only acknowledgement of my thigh grinding against his erection. \"Admit it.\" \n\nI would have agreed had I not been too distracted by the six total fingers stuffed in my ass and mouth. \n\n\"You know, I think the whole idea is starting to grow on me,\" he said, his lips nibbling from my earlobe down my neck. \"Having you bound and gagged, while I work your ass over, and the only thing you can do is whine and tremble. I bet I could make you so desperate for my cock that you cry.\" I moaned. \"How does that sound? Hm? Want me to make you beg for my dick?\" \n\nI nodded. \n\n\"What was that?\" \n\nI pulled his hand out of my mouth. \"Yes.\" \n\n\"Yes?\" \n\n\"Do it.\" \n\n\"Do what?\" \n\n\"Please, 'Rain.\" \n\n\"Say it, Cory.\" His half-lidded green-gold eyes and wolfish grin made me tremble and whimper harder. \"Tell me what you want.\" \n\nI took a deep breath and met his gaze. \"Make me cry.\" \n\n\"Good boy,\" he said before slamming his mouth down over mine and shoving his tongue past my lips. He pulled back long enough to give me specific instructions on how he wanted me on the bed\u2014on my knees in the middle, with both hands on the headboard\u2014and sent me off with a sharp slap on the ass. I dropped my trunks and crawled onto the bed, but he still hadn't moved. Only after I complied with his sharp \"eyes forward,\" did I hear the slight sounds of him getting up and moving about the room\u2014quiet footfalls and susurrations of fabric that only served to make me more anxious. \n\nI held myself still, even when I felt the tell-tale dip of the mattress as he crawled up behind me, but yelped as his tongue lapped at the small of my back. Lips, teeth, tongue, rough stubble, panting breaths climbed my vertebrae like rungs on a ladder, and fingertips skimmed my flank, until his chest and stomach pressed into my back. Smooth, hot skin, with a nice dusting of body hair and the smell of his cologne. I earned myself another slap on the ass when I flexed my hips back against the hard length nestled between my ass cheeks and leaking pre-cum all over the small of my back. \n\nOut the corner of my eye, I caught him unwinding a folded strip of black cloth from his hand\u2014one of the bandanas he wore under his helmet during games. My hands gripped the headboard until my knuckles turned white, but I couldn't still my trembling. The bandana looped over my head, and I let it slide between my teeth. Efrain knotted the gag and ensured that it wasn't too tight. ",
        "\"Acho,\" he murmured, his voice softened with concern. \"'Tap out' if it's too much.\" I nodded. We had joked about safe words being like a tap out in wrestling, a discussion that had quickly devolved into me giggling about making him wear a luchador mask, but that had eventually become our signal nonetheless. So far, I hadn't needed to stop him, but I felt safer in his hands knowing that he would. His hand moved from the knot at the back of my head and threaded through my hair. The gag effectively muffled my moans as his momentary tenderness faded and his fingers tightened on my head. The slight tug arched my neck. Efrain bit the sweet spot between my neck and shoulder and sucked hard, leaving the first in a series of love bites that I would have to explain to my mother over the holiday. \n\nHe released me and his body left mine long enough to slick himself up before he was back to rubbing his cock on me. I whimpered at every pass his slippery head made over my hole, wedging there but never taking purchase, leaving me breathless by the time he finally nudged my knees closer together and planted his foot on the bed. Efrain positioned himself at my entrance and slowly pressed forward. Pressure built gradually until his cockhead popped into me and he began working himself in. My voice got higher and tighter as he thrust deeper, my moans coming out as high pitched wails muffled by spit-soaked cloth by the time his groin rested against my ass. \n\n\"Ready to cry?\" \n\nMy \"Yes, please!\" didn't quite make it past the gag, but he understood me well enough. Efrain's arms wrapped around my waist and his hips pulled back. He played with my ass, moving in and out in shallow thrusts, until I wordlessly begged for more. I panted and moaned to the point of hyperventilating, but that only seemed to encourage him to tease me. My frustration mounted as he pushed me so far into a state whining incoherence that all I could do was take everything that he was generous enough to give me. \n\n\"Ronroneas para m\u00ed, gatito.\" \n\nI barely heard him over the wet, slapping slurps of his dick fucking in and out of my ass and my own screams, but the quiet murmur still lit my body up. \n\nPurr for me, kitten. \n\nI felt him lean back slightly, his hands at my shoulder and hip to steady himself. His hips rolled smoothly into me, and I snuck a look behind to find him watching where our bodies joined. \"Holy fuck, your ass is thick,\" he moaned. \"God, and tight.\" A couple sharp slaps landed one cheek. \"Fuckin' hot.\" Efrain leaned back over me, resting his chest against my back and wrapping his arms around me. \n\nSuddenly, his control snapped and his hips surged forward, plunging his full length deep into me, then pulling back and plowing forward again. His rhythm built, driving me crazy, and I screamed into the cloth as he filled me over and over. Efrain's fingers wrapped around my cock and pumped hard. I locked my arms against the headboard and arched my hips back to meet his thrusts. An ache gripped my lower body, drawing up my nuts and tightening my ass on his cock as my climax rose. \"Goddamn, gatito,\" he growled. \"You're gonna make me cum.\" I thrust back into him faster, and felt his hips and hand match me. His cum flooded me, mere seconds before I exploded across the bedding. \n\nEfrain's softening dick slipped from my body and I allowed him to guide me down to the bed. He pulled me close, as we laid there, too tired to worry about avoiding the wet spots. I loosened the knot behind my head, and removed my gag. His kisses brought me down from my high enough that I could finally wonder about my new pet name. I wasn't even sure if he'd been aware of it, but I definitely liked that he got chattier when he had me gagged. \n\n\"So, gatito, vato?\" \n\n\"It slipped,\" he said defensively. \n\n\"But, I liked it.\" \n\n\"Whatever.\" \n\n\"I can purr some more for you,\" I said, snuggling up to his neck and making little purr sounds. \n\n\"Knock yourself out, acho.\" \n\n\"Ah, so we're back to that?\" \n\n\"Gatito, mi gatito,\" he sighed dramatically. \"Happy now?\" \n\n\"Si, mi lobo,\" I purred. \n\n\"Good, now go to sleep.\" \n\n\"Cualquier cosa por mi lobo.\" \n\n\"Really?\" he sighed. \n\n\"Would mi lobito be better?\" \n\n\"That's actually worse.\" \n\n\"Mi papi lobo?\" \n\n\"No. Just, no.\" \n\n\"Mi gran lobo malo?\" \n\n\"It's not too late for me to turn into that guy that kicks you out of bed as soon as he busts his nut in your ass.\" He'd growled and slapped my bottom, but still cuddled me closer. \n\n\"I'd just sit at the door and mewl the song of my people until you let me back in,\" I told him. Efrain only grinned and repeated his command that I go to sleep. \n\nAs we snuggled in post-orgasmic bliss, I wondered if mi lobo understood how much trouble he'd just gotten himself into. \n\n~*~*~*~"
    ],
    "authorname": "dayne",
    "tags": [
        "college",
        "athletes",
        "twink",
        "interacial couple",
        "comedy",
        "anal sex",
        "fingering",
        "bdsm",
        "ssc"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/efrain-and-cory-ch-28"
}