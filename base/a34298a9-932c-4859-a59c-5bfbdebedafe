{
    "title": "The Twelve Vitali Ch. 32",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they continue to mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nMarcus had Bruno call Roberto and Trevino to him for mediation, before the situation got out of hand on the second day of arbitration and fact-finding, while he met with Matteo and Theo quietly in the atrium he used for special trainees.\n\n\"The leaders of the other tables are on their way to form the thirteenth table. Whether there is full disclosure about the issues surrounding Maria or not is being discussed at present between the men with grudges,\" Marcus began. \"They will be asked to step down from their chairs, and you will take your places in this meeting of the thirteenth. You are both men of honour, and the past deeds of your families are not yours to own. Make peace for the good of everyone, it cannot end well otherwise.\"\n\n\"You would un-chair our fathers?\" Matteo gasped.\n\n\"Temporarily, yes. They have shown a total unwillingness to cooperate in this challenge to the traditions and laws of our families,\" Marcus was stiffly formal. \"Shame and guilt are difficult to admit to for anyone; for proud men of the tables, an impossibility. The confessions needed must come from another source, just as hurtful, but not of their own making. Do you understand?\"\n\n\"Not exactly, but I am going to assume you will enlighten us further,\" Matteo said carefully.\n\n\"I understand,\" Theo took a large breath and exhaled noisily. \"I will do what needs to be done if Matteo stands with me after reading this.\" He handed Matteo a tablet.\n\n\"Tell me,\" Matteo said, glancing at the tablet. \"If you want me to stand with you, then tell me what I need to know, and I will trust your word.\" He could see how difficult this was for Theo, and he agreed with his sentiment from earlier that morning. It was time to put all of this hatred and feuding behind the two families.\n\n\"Giovanni was a difficult baby, only calming when his twin sister was placed next to him in the crib. He was a toddler and child prone to tantrums, fits of rage and cruelty, and his father sought help for him from various doctors and psychologists. Maria became bound to him, not only because of their bond as twins, but because he became her responsibility. She was the only one who could calm those fits of rage, particularly when he hit puberty. My grandfather encouraged the incestuous relationship that developed rather than see his son locked away by the Papillo because his behaviour led him to harm someone, or worse.\" Theo spoke softly, not making excuses for his grandfather's actions, but rather stating the facts.\n\n\"Maria became vain and pampered because everyone was too afraid of Giovanni to deny her anything she wanted. The relationship eventually became stifling for her, however, and when she came of age she wanted to marry and get away from her family and possessive brother. She almost killed him with an accidental overdose of mood-altering drugs when he tried to deny her marriage and escape from her family. Again, it was my grandfather who stepped in and kept Giovanni in the hospital and medicated while Maria became a debutante and fell in love with Stefano Vitali.\"\n\n\"You mean, Roberto,\" Matteo said.\n\n\"If you insist, but I am led to believe it was Stefano that she believed would protect her from Giovanni,\" Theo said softly. \"My grandfather sanctioned the marriage with Roberto and kept control of Giovanni for a short time, even forcing him into a marriage with the promise of a seat on my father's table. This worked until my grandmother's death, and I expect you know the rest of the story.\"\n\n\"My version is slightly different to yours, no doubt, but then I wear the scars of the havoc Giovanni and Maria wreaked on our families,\" Matteo said sadly. \"She is happy there, surprisingly. She doesn't wish to see Giovanni or be caught up in the feud between families any longer.\"\n\n\"Be that as it may, Giovanni is obsessed with the news that Vanessa claims her mother is alive and well in the Ghost Town. Despite my father's attempts to counsel him that it is not true, he will not let it go,\" Theo said. \"I am afraid that if what is in those packages is true there may not be anything we can do to protect the family from the position he has put us in.\"\n\nThe two men continued to talk, laying out what had occurred between Giovanni and Maria from their different points of view and what they had been told by their fathers. In the end, both agreed that there was a fault on both sides of the equation, but, regardless of what had happened in the past, Giovanni's obsession had brought them to the brink of lapsing back into old feuds that could endanger the stability of the twelve tables and the working relationships of the thirteenth. Each family could survive alone, but they were stronger together in an alliance.\n\nMarcus had sat back listening to it all and saying nothing. He wasn't even sure the two men realised he was still in the room. From his family's records, he knew they were being brutally honest with each other, and he saw no reason to intrude on their revelations with his own version of events. The men who would populate the Thirteenth table, once the older generation retired, were men to be reckoned with, including Joshua Donati and Leyton Papillo, who had already taken their chairs on the table.\n\n*****\n\n\"We've been in this hotel for three days. How long do they expect us to wait?\" Ricco grumbled. He chose a loose-fitting pair of basketball shorts and a light shirt and sighed. \"I'm going outside for a while, call me if anyone comes for us.\"\n\nStefano raised his hand in acknowledgement that he had heard his son and turned back to his book. He was enjoying not having to think about anything for a few days, and he was more than enjoying his son's company and getting to know the real him rather than the face he exposed to the world. He was more than happy to realise that he hid a dark and demanding side that came out only when alone with Cat to indulge his desires, and that she had embraced that side of him. The Oracle needed to embrace both the light and the dark to truly read the heart of others.\n\nThat had been his error with Maria. He had only seen the light in her, the good and sweet side that needed protecting from her family. She hadn't been honest with him though. How could he have known of the nature of her twisted relationship with her brother? He should have known, he was the Oracle, but he had let love blind him from the reality of her true nature. It was a mistake he had not allowed himself to make since, even to the detriment of his relationships with his children.\n\nRicco hated doing nothing. He wanted to be home with Cat and Matteo, dealing with business and the drama surrounding the family at present instead of expecting Matteo to handle it on his own. Not that he was on his own, he reminded himself. He walked out into a field of tall grass and smiled, reminded of his last day at the house on the hill with Cat. He chose a place near an old tree that afforded a modicum of shade and sat, drawing a deep breath.\n\nEmptying his mind, Ricco closed his eyes and let his mind drift, filtering through all of the external noise of his world to focus on the things that really mattered. An image of Cat as she had been, in a field just like this, embracing him and his darkness, bloomed in vivid detail. Clouds scuttled across the sky becoming darker as his desire and need to possess her and have her serve his every need filled him. He breathed deeply again, tilting his head back, feeling the sun on his face and looking for it in his vision.\n\nRicco slowed his breathing and allowed the image to shift and move to include Matteo. The darker clouds shifted, and lighter fragments shone through as wind ebbed and flowed within the clouds like the tide of a lapping ocean. The stronger the vision of Matteo the fewer the clouds and the warmer the sun became in his mind. He felt the love and warmth of his brother soften the hardness that threatened to overwhelm his desire for the woman who submitted her mind and body to him when they were alone. The loss of that control scared him, the possibility of hurting her or breaking her trust in him all hung on his ability to remain in control of his darkness, and he knew Matteo was the touchstone that grounded him. He couldn't find that balance internally when it came to Cat, she was too giving of herself, and it took all his strength to take what she gave so willingly and not ask for more, demand more, take more from her.\n\nAn image of Cat bound in rope and hanging from the ceiling of his dark retreat at his Uncle's house filled his mind. She was beautiful with her skin pink and lined with angry red welts. The image shifted, and she appeared as she had been that day in the field, kneeling quietly before him, enduring the cold and shivering in her nakedness for him. The image aroused him even more than the vision of her bound and suspended. In his mind's eye she blossomed and swelled with the baby she now carried, her belly and breasts distending, swelling outward, and he felt himself harden with the loose shorts. Once again Matteo swam into his vision, softening the dark desire to possess and use every inch of Cat and take more from her than he should ask of her.\n\nConcentrating on the two people he loved most in the world, he tried to reach out toward them, to feel them and know that they were in no danger. His mind stretched as he concentrated, feeling nothing but his own need for them both, and the pain of his separation from them. He was better with them than without, he needed them, he admitted sadly. Being the Oracle was not something he could do alone. Still, he wanted to know more, be able to do more. He picked up the file he had brought with him and began to concentrate on its contents, hoping to glean even the smallest amount of information from it to tell him what was true and what was fabricated.\n\n\"Your will is stronger than you believe, young Vitali,\" A woman's voice sounded close to Ricco. \"I am Fawn, and you seek my people, the Tatar.\"\n\n\"I do,\" Ricco said, opening his eyes to look at the woman, surprised that she appeared to be about his age. \"I am Ricco Vitali, and I travel with my father, Stefano.\"\n\n\"My Mother told me as much. May I have the file, please? We would see for ourselves,\" she asked, tilting her head.\n\n\"Of course, we would be interested to know if it contains anything of truth,\" he said, holding out the file to her.\n\n\"Can you not feel that for yourself?\" she asked curiously.\n\n\"My feelings on its contents are conflicted. My head tells me it must be false, my heart wishes for it to be true, but deep within I know there are elements of both. My emotions cloud my thoughts, I am afraid I cannot discern which is true and which is false,\" Ricco admitted.\n\n\"Emotions should always rule your thoughts,\" Fawn frowned at him and reached up to touch his face at his left temple.\n\n\"Maybe I said that wrong, it's more like what I want clouds my judgement instead of seeing things just as they are,\" he tried to explain.\n\n\"What is it you want from this information?\" she asked, clearly interested.\n\n\"I want the woman I love not to be hurt or upset by the lies I believe it contains, but I hold out a small hope for her and refuse to acknowledge that it isn't there. Not until I know for sure up here,\" he tapped his head. \"I want your family to have the answers I seek and be able to give us the answers we need. I also want for there to be friendship, or at least open communication between your family and mine, though it has never been that way in the past.\"\n\n\"Invite me to dine with you tonight,\" she commanded suddenly after staring at him silently for several minutes.\n\n\"I would love for you to join my father and me for dinner tonight,\" Ricco responded immediately. \"Perhaps you could bring your mother,\" he smiled, easily liking the young woman who sat with him.\n\n\"I believe I would be delighted, thank you. I will see you at six at the hotel,\" Fawn said, getting to her feet and turning to stop him from getting up with her. \"Please stay and meditate, it suits you to look so peaceful.\" Then she turned and walked away across the field with Ricco staring after her.\n\n*****\n\n\"Good morning,\" Cat sang as she waltzed into the kitchen, putting on a cheerful persona, despite the fact she had not slept well for the past three nights and felt more nauseous than she had on previous mornings. She desperately hoped Matteo would come home today. She knew Ricco would still be several days away at least.\n\n\"Did you sleep?\" Lucca eyed her critically as she went to Lisa and took the plate she offered with some surprise.\n\n\"Let the woman sit down before nagging her,\" Zion chided his brother and winked at Cat. \"Good morning, Cat. Sleep well?\" he asked with a grin.\n\n\"Yes, thank you,\" Cat said in the same cheerful tone. \"It' getting easier to fall asleep now.\" She looked down at the breakfast Lisa had made for her and frowned.\n\n\"Something wrong with your breakfast?\" Zion asked.\n\n\"Just not what I was expecting,\" Cat smiled, but felt her tummy roll and swallowed hard against the nausea.\n\n\"Seriously, you're not looking so good this morning,\" Lucca said, scrutinising her. \"Maybe you should stay home today and rest,\" he suggested.\n\n\"No, I'll be fine once my body wakes up,\" she said, keeping her cheerful persona. \"Lisa, could I just have some toast, please?\"\n\n\"Of course, Miss Catriona,\" Lisa acknowledged the request, but looked concerned as well.\n\n\"You need to eat more than a piece of toast for breakfast! Especially as you are functioning on such little sleep!\" Lucca said.\n\n\"Lucca, what's going on this morning?\" Cat asked, frowning at him. \"I'm perfectly fine, just like always.\"\n\n\"He's got a specialist appointment for his leg today, so he can't trail around after you like a lost puppy,\" Zion enlightened her. \"She has security for a reason, Lucca,\" he reminded his brother.\n\n\"Oh, I didn't know. Are you worried about it?\" Cat asked, trying to steer the conversation away from her current eating and sleeping habits. Rather than morning sickness they should call it all day sickness, she thought morosely.\n\n\"I'm more worried about you at the moment. Maybe you should see Zachary today, he could give you something to help you sleep and settle your stomach,\" Lucca suggested.\n\n\"Lucca, I'm fine, honestly, and I saw Zachary only a few days ago,\" she said in a soft voice. \"It's perfectly normal to feel a little out of sorts with both Matt and Ricco away. I love you and Zion dearly, but you must have at least a fraction of an idea how much I miss them. There hasn't been a time this year when they were both gone at the same time before now.\"\n\n\"Hey everyone,\" Aria's cheerful greeting startled them as she leaned over Zion's shoulder and kissed his cheek, making him smile. \"Ooh, what did I walk in on?\" she asked, seeing Lucca's frown.\n\n\"He's doing his crusty pirate expression while he still has his gimpy leg,\" Zion explained. \"I imagine they'll give him the all clear to go back to work today,\" he winked at Cat, who he knew was chafing under the scrutiny Lucca had given her since Matt left.\n\n\"That should make you happy, not grumpy,\" Aria sat down at the table and waved her hand at Lisa. \"I'll have whatever is left over, don't make anything special for me.\"\n\n\"You miss Zee, don't you?\" Cat said understandingly, \"You know you could just come and stay here too rather than come for breakfast every day.\"\n\n\"If Matt and Ricco are going to be away much longer I might take you up on that. Have you heard from him this morning?\" she asked, looking at her brothers as well as Cat.\n\n\"Not about when he will be home,\" Cat grinned, unable to help herself when she thought of the call she had enjoyed with Matteo early that morning. Her communication with Ricco had been difficult, as it seemed he was in a very remote country town where the telephone coverage with the satellite was sporadic, at best. Still, he emailed her and texted her when he could, most of those coming through during the night when she was sleeping. She missed him terribly. While Matteo was commanding and in control, Ricco carried his authority in an unassuming way, but there was no mistaking he was just as in control as Matteo was, particularly when it came to her.\n\n\"Ooh, do tell!\" Aria giggled, watching Cat blush deeply.\n\n\"I didn't think you'd be that interested in Matteo's fantasies, but if you insist,\" Cat teased back while blushing crimson and having no intention of saying anything.\n\n\"I think I could live without that over breakfast,\" Zion saved Cat with a chuckle. \"I'm going to be here at the HQ offices again today if you need me for anything,\" he said, smiling at Cat. \"Come see me after your breakfast,\" he invited Aria with a squeeze of her hand. \"You can give me an update on the depository.\" He stood and kissed Cat's cheek, smiling at her. \"Have a good day, don't overdo it.\"\n\n\"Thanks, you have a great day too,\" Cat returned his smile. \"I'm going to meet with Arturo,\" she went to get up from the table with him, forgetting her request for toast, making him turn and step back toward her.\n\n\"Look, I agree that Lucca is way over the top, but, Cat, if you want me to side with you, you need to at least pretend to eat something, even if it's only a single piece of toast,\" Zion said seriously. \"It's been a long time since I was scared of my big brothers kicking my ass, but I have to admit that I have no desire to have it kicked by two of them when they return.\"\n\nIt was the first time Zion had scolded her for anything, and Cat blinked in surprise, sinking back into her chair. She looked at Lucca, who seemed just as shocked by Zion's words, and then Aria, who raised an eyebrow at her.\n\n\"Call Matt,\" she said, suddenly feeling tears sting her eyes knowing that she was totally over-reacting but somehow unable to help herself. \"He'll tell you not to worry about whether I eat breakfast. He won't want to kick your ass,\" she promised as her tears filled her eyes.\n\n\"It's breakfast, it's not worth crying over,\" Aria said softly, unsure of what had been going on before she arrived. \"You can have brunch,\" she suggested.\n\n\"Cat, you're overtired and emotional because you're not sleeping or eating, something's got to give. Let me call Zach,\" Lucca suggested.\n\n\"Just call Matt, please,\" she said in a voice that cracked with emotion, showing how upset she was. \"I don't have my phone on me. He'll tell you not to worry. I'm an adult, I can choose not to eat breakfast if I want.\"\n\n*****\n\n\"Hi, Zee, what's up?\" Matteo answered his phone with a frown. He excused himself from the table he had been sitting at and walked a few feet away.\n\n\"Cat wanted me to call you and tell you that I made her cry,\" he admitted.\n\n\"Any particular reason you felt the need to make my wife cry this morning?\" Matteo asked urbanely, despite feeling his insides tear apart with his need to be home where he could look after Cat himself. He knew how emotional this pregnancy had made her, and that she wasn't feeling well, particularly in the mornings.\n\n\"Lucca was trying to channel Ricco's courtroom persona and questioning Cat about her sleeping and eating habits, and I backed her up until she didn't eat a bite of breakfast. She hasn't been sleeping since you left, and she is starting to worry us, so I sided with Lucca just this once and made her cry,\" Zion explained.\n\n\"So, you're saying that I need to kick Lucca's ass, not yours?\" Matteo asked in the same unconcerned voice. \"They both there with you?\" Matteo asked.\n\n\"Yes, to both questions,\" Zion chuckled, looking between Cat and Lucca.\n\n\"Great, put me on speaker,\" Matteo said, shaking his head.",
        "\"Hi, Mattie,\" Aria said as Zion put his phone in the middle of the table. \"We miss you, come home quick!\"\n\n\"Hey, Ari, I'm trying to, believe me,\" he chuckled. \"Lucca, Cat is an adult, if she doesn't want breakfast, she doesn't have to eat it. Zion, you don't have to choose sides, you aren't a child either,\" he sighed. \"Kitten, it's okay to tell them why you don't want to eat, I told you this, but if you're not sleeping as well, it's obviously a bigger problem than you led me to believe.\"\n\n\"But I'm perfectly fine, you know I am!\" she argued.\n\n\"Zion wouldn't have said anything if he thought you were perfectly fine, and I doubt he would have called your bluff and phoned me if he wasn't pretty concerned. Zion's too easy going to worry about the little stuff,\" Matteo said softly. \"I have to go, but I'll call you in a few hours to see how you're feeling. Okay?\"\n\n\"Okay,\" Cat said softly. She had been hoping he would just tell them to back off and let her live her life. Hearing the concern in his voice and the implication that he didn't believe she was just fine, despite her protests, worried her, and she wondered if asking Zion to make this call was a good idea after all. At least he had told them to back off a little bit, sort of.\n\n\"I love you,\" Matt said and ended the call. He immediately went back to where he had been sitting with Joshua Donati and Tomaso Farnese.\n\n\"Problems at home?\" Tomaso asked, a touch of concern in his face. His son, Massimo, had kept him informed of the drama surrounding Mateo and his new wife before this meeting of the thirteenth had been called, and he was concerned with the complexity of attacks on the couple and their family.\n\n\"There is only so much stress I expect my wife can take, but she keeps surprising me at every turn,\" Matteo smiled thinking of Cat, who would, he knew, soldier on, regardless of how long he was away. He was determined to get home, though, and told his breakfast companions that he intended to leave that afternoon whether anything had been resolved or not.\n\n\"I feel the same, we can't just wait around here until the Martino's locate Giovanni and get him here, they've had two days already,\" Josh said. \"Dante's looking after Peri, but I am still eager to be home, I can only imagine what it's like for Matteo with Ricco away from home as well. It seems the Vitali are doing all they can to resolve his crisis, and the Martino family are only hindering a resolution.\"\n\n\"It's time for rational thinking to prevail,\" Tomaso said. \"Leave it with me; I'll meet you in there.\"\n\nForty-five minutes later Matteo watched as Fabiano Amarti stood from the table and began to pace in thought. The Amarti family were well known as peacemakers and had managed to never upset another table or cause an issue that required a meeting of the thirteen. They rarely spoke out against another or interfered with the happenings of other families. They held no great power or alliances with particular members of the twelve, but neither were they dismissed easily. For this reason he captured everyone's attention, and the room went quiet in anticipation.\n\n\"I hate to be the one to point out the obvious, but there has never been a case where we have been asked to wait for so long for a family to produce a member of their family, even from the Papillo, who live so far away,\" he said slowly. \"I am sorry, Theo, but you cannot expect us to sit and delay the Vitali any longer when there are obvious threats to Matteo's wife and family. Whether those threats come from your family or not is yet to be seen, but by delaying unnecessarily, should anything untoward occur, it will reflect badly on you, and I am sure neither you nor your father wants that. It is time for truth, is it not?\"\n\n\"I agree. Why can't you produce the man in question? It has been two days since the request, and days before that the meeting of the thirteenth was called. In all this is the fourth day since seeing the threats. Would you not want to protect Giovanni by bringing him to the fortress if they are true?\" Bruno added.\n\n\"Were it my family being threatened there is no way I would be sitting here while you flout the laws and fail to produce Giovanni to answer our questions. Matteo came here without accusation in search of answers, giving you the chance to prove the information sent to him was created by someone wanting disharmony between the families of our table. The longer we are forced to wait here with no response, the more we are all inclined to believe this information is true. Furthermore, while we sit here, Stefano and Ricco Vitali are seeking out answers from the Tatar to prove your innocence when you won't do it for yourselves. It is time, Trevino, to let your son talk freely.\" Fabiano pressed. \"Because I will put Matteo Vitali on a plane to his wife tonight rather than see him suffer another day worrying about his love while you do nothing to ease the situation.\"\n\n\"You cannot use the pretence that the fate of Maria Vitali was held from you. Every family at this table has secrets hidden within the vaults of the Papillo, or the Battaglia, or even the Satori strongholds. Placing a family member with us for the rest of their lives is not something we take lightly, it is reserved for the worst of the worst of us. She murdered her first-born son. The sin was unforgivable,\" Leyton said, having had to defend his family's agreement to house Maria rather than have her face the public criminal system. \"You should be thanking Roberto, not vilifying him.\"\n\n\"When all is said and done, who watches the watchmen?\" Theo finally sighed. \"Where are the checks and balances for any of us? Especially those who sit on our tables? We can't locate Giovanni or his son, Mario. They were, themselves, the head of the watchmen.\"\n\n*****\n\nCat sat in the back of the car and stared out of the window. She hadn't told her brothers-in-law about her pregnancy. She wanted Matteo and Ricco to announce it to their parents first, or at least be in the room with her when she told anyone. She was feeling better about becoming a mother since talking with David and Isaiah, but she still worried. She sighed loudly, making Hugh glance at her in the review mirror. She ignored him and looked out of the side window at the passing traffic.\n\nShe had chosen to support this charity herself. It was one that Anna and Frankie championed and one that resonated with her. The Smith Family was a children's charity helping disadvantaged children to get the most out of their education so they could create better futures for themselves and end the cycle of poverty. She had researched them after Arturo had made her realise what her patronage would mean to various charities, and although they were not an exact match for what she wanted to support they came very close to her vision, and she wanted to support them today and into the future.\n\nThe car pulled up to the curb, and she waited patiently as Bradbury came around the car and opened her door for her. He then followed closely behind her until she was inside the venue where he gave her some space while still staying close by and never losing sight of her. His seemingly obsessive attention to her since the abduction unsettled her. She understood the need for security, but it was the way he watched her, and even the way in which he stared at her at different times that made her feel so unsettled.\n\nOnce inside she was embraced by Anna and guided to their table. Theresa, Ruth and Dina were already at the table, and Cat smiled and embraced them all before taking her seat beside Kari and smiling widely at her, grateful to have a younger Vitali woman at the table with her. She looked around the grand room realising that very few men attended, and wondered if that was because it was a lunchtime event.\n\nCat found herself enjoying the lunch immensely as she listened to the speakers entertain the gathering with their own stories and anecdotes of growing up in poverty or working to help families who had been stuck for generations within the cycle of poverty and neglect. Cat was glad she had chosen this particular charity to support into the future, and she wondered if she could work with the board of directors to extend their reach beyond the field of education.\n\nAs the lunch drew towards its end, a gentleman wearing a black suit with a bright red tie approached Theresa and bent to murmur in her ear. Cat narrowed her eyes as Theresa looked up in surprise and nodded.\n\n\"Catriona, we have to go,\" she said pleasantly, picking her purse up from the table. Cat frowned but said nothing. She knew who the men in the black and red suits were and trusted Theresa. She stood and also gathered her purse, moving to join Theresa and the man who hovered beside her and walked toward the exit.\n\n\"I'll take Mrs. Vitali,\" Bradbury said gruffly from beside her, reaching to cup her elbow and move her away from the man in the black suit.\n\n\"I think...\" Theresa began and frowned up at Bradbury.\n\n\"You think that any man in your family would have sent a watcher just for you and left the other ladies to fend for themselves?\" he questioned, raising an eyebrow. \"This is not following any protocols set down by the family, and I cannot let her leave with you.\"\n\n\"This is none of your business, rent-a-cop!\" the man in the black suit hissed. \"Step away from Mrs. Vitali or expect consequences!\"\n\n\"From who?\" Bradbury said in an equally sibilant voice, knowing there was no other watchmen directly around them, and indicated the foyer of the building. \"Catriona, you need to come with me now. We will call Matteo once you are secure. Mrs. Vitali,\" he looked at Theresa, \"Think about the men you love and if they would leave the other ladies sitting at the table unprotected if there was any real danger.\"\n\nTheresa seemed stunned by the whole interaction and frowned at both men, remaining standing in stunned silence. Several cars pulled up outside, and then there was chaos in the movement of dark suits around them.\n\n\"Come, now,\" Bradbury said in a low, commanding voice, and tightening his grip on Cat's arm almost dragged her from the building toward a waiting car.\n\n\"No!\" she attempted to squirm out of his grasp, preparing to scream when she saw Hugh stand from the car Bradbury was pulling her towards. Memories of the horrible day she had been abducted coalesced in her mind, and she felt panic rise within her.\n\n\"Cat!\" A feminine voice called her name, and she spun, looking for something, someone familiar.\n\n\"Vanessa!\" Cat recognised her immediately and breathed a large sigh.\n\n\"Are you okay? What's wrong?\" Vanessa asked, her concern evident in her voice. \"I'll give you a lift home, and you can tell me what's going on.\"\n\nCatriona started to move toward Vanessa, but she was suddenly swept up and carried bodily to the car in which Hugh waited and was forced inside as she kicked and cried out at Bradbury, who held her tightly, forcing her to comply with his raspy demand to \"Get in the car!\"\n\nCat saw Theresa moving toward Vanessa, still confused by what was going on, and the man in black with the red tie moving speedily through the crowd to the same car Vanessa had appeared from as Hugh moved her own car out into the traffic.\n\n\"Let me out! Hugh, pull over!\" Cat cried out, feeling more unsafe than she ever had with these people, the ill feelings from her abduction feeding her fear at the strangeness of what had just happened.\n\n\"Call your husband!\" Bradbury growled, texting, using both hands now that she was secure and the doors were centrally locked so that she couldn't escape even if she wanted to.\n\nThe command took her by surprise. Surely if Bradbury meant her harm, he wouldn't be encouraging her to call Matteo and seek help. She frowned and tried to calm her erratic heartbeat by drawing in slow, steady breaths. She pulled her phone from her purse and called Matteo.\n\n\"Cat!\" Matteo breathed anxiously into the phone as he answered her call.\n\n\"Matt, something's wrong, and I don't want to be here with Bradbury,\" she said softly into the phone.\n\n\"Please, Kitten,\" he said, trying to keep his voice calm. \"I need you to stay with Bradbury and Hugh. I am heading to the airfield now, and I'll be back in a couple of hours. I need you to trust me, please, stay with Bradbury.\"\n\n\"But I don't understand. What's going on?\" Cat asked, her panic rising again with her voice.\n\n\"Kitten,\" Matteo said soothingly, feeling anything but calm himself. \"Please, just stay with Bradbury until I can get there, I'm almost at the airfield now. Just a few hours. Okay? I need to know you are safe, and I trust Bradbury more than any other person to look after you right now,\" he said softly. \"Promise me you will stay with him until I can be there.\"\n\n\"What about Lucca or Zion?\" she asked, getting the same strange feeling from Bradbury that she always had; as if he wasn't the man he portrayed himself to be.\n\n\"No, stay away from the HQ and any of my brothers, just stay with Bradbury and Hugh. Knox will meet me at the airport. He and Bradbury will be in constant communication. I love you, Kitten, there is nothing more important to me than your safety right now. Can you understand that much at least?\" He asked, his voice cracking slightly as he listened to her breath quicken in anxiety.\n\n\"Okay,\" she said, finally hearing how distressed she was making him. The fact that he was already on his way to the airfield before she called him finally registering in her mind. Something was very wrong, but she couldn't work out exactly what went wrong.\n\n\"Thank you,\" Matteo breathed. \"I'm coming, just stay with him until I get there.\"\n\n\"Fly fast,\" she said softly. \"I love you.\"\n\n\"I love you too, Kitten. I'm boarding the plane now. I'll call you as soon as I land,\" he promised.\n\n\"Okay,\" she whispered, and held the phone next to her ear long after Matteo had ended the call, trying to make sense of his trust in Bradbury and his determination that she should stay with him.\n\n*****\n\nThe alert had rung out on Matteo and Roberto's phones almost as soon as Theo began to speak. Both men moved immediately, their fingers pressing buttons to get answers as they moved with grim determination from the room, not wasting time in farewells and explanations. Bruno and Marcus moved equally as fast, organising a jet to be readied to return the men home.\n\nBehind them, Trevino and Theo Martino faced the nine remaining men who were demanding answers now, despite not knowing what crisis had pulled the Vitali men from the room, but assuming it had to do with current events. Josh sat in horror. He could not imagine having heard the alert while being so far from his home and family when they had been attacked so many years ago, and he once again felt the keen loss of his parents. He wasn't about to let the Marino side step this interrogation as the Pelligrini's had so often before the damage was done.\n\nWatchmen appeared as if from nowhere to escort the men, and, as Matteo spoke to Cat, Roberto spoke with Cosimo, ensuring that all of his brothers, sons and nephews were on their way to safe houses with their families. No one had been able to contact Stefano and Ricco, who had seemed to disappear from the hotel they were staying at earlier that morning.\n\n\"Information is still coming in!\" Cosimo said in a stressed and harried voice, and Roberto could hear the chaos around him through the phone line.\n\n\"The women?\" Roberto barked.\n\n\"All accounted for, except for Vanessa and Theresa, who were seen together when the alarm sounded outside the venue where they had been attending a charity event with Catriona. Catriona left in a separate car with her security detail, and it is believed Theresa left the scene with Vanessa,\" Cosimo admitted.\n\n\"Okay, find Theresa as a priority, I don't remember her telling me that Vanessa was attending any events with our family in the lead up to her wedding,\" Roberto said, an ill feeling settling deep within his gut. Vanessa, he knew, was the weak link in the family, in that she had obviously told Mario about the visit to her mother, but surely she wouldn't be involved in any plot to her hurt the family.\n\n\"Already on it! Call me as soon as you land!\" Cosimo barked as he managed the men and women around him and the vast amount of information about each member of the family as they and their watchmen checked in.\n\nRoberto took his seat on the plane and listened to Matteo try to calm Catriona, who obviously was bewildered and unhappy with whatever steps were being taken to ensure her safety. His mind went to his wife, and he prayed for her safety. He couldn't imagine why she hadn't checked in, or why she would have willingly gone with Vanessa instead of her own driver.\n\n*****\n\nRicco felt ill, his stomach rolling, and he couldn't make sense of it. He shouldn't be hungry enough to make him feel ill, he'd eaten a huge breakfast. He grimaced at the feeling and closed his eyes, trying to sort through the jumbled images in his mind. His first thoughts were always of Cat and Matteo, but Theresa floated through his mind, and, oddly, Vanessa. As he concentrated on Vanessa, his stomach lurched again, making him almost vomit. Something was wrong, he knew it, and not with himself, with the family. He stood from his familiar place in the long grass where he chose to meditate and headed back towards the hotel in search of his father. He found Stefano packing and looking pale.\n\n\"I was concentrating on the wrong women!\" Stefano snapped angrily and continued to throw his belongings into his case. \"We have to go, immediately!\"\n\nRicco packed quickly and picked up his father's case as well as his own and began striding toward the car. He had said nothing since his father's pronouncement, aware of his own ill feeling and the gut feeling that it involved Vanessa, and possibly Theresa.\n\n\"If you wish to get home fast you need to follow me,\" one of the men who was a bar regular said in a deep, strong voice that commanded their attention. He held his keys, and without waiting for an answer Ricco and Stefano packed their car and then pulled out, seeing the man in a dusty old ute waiting for them at the junction of the two roads and indicating to show which road they would be taking.\n\n\"Follow him,\" Stefano said in answer to Ricco's inquiring look. He had wanted to follow, but as always paid deference to his father's wishes. After only ten minutes of speeding along the country road, it dipped as it curved around a small hill, and after another ten minutes, during which they stopped to gain entrance to a property boarded by an electrified fence, a large farmhouse came into view. The farmhouse was surrounded by barns and sheds, showing it to be a working farm. Ricco barely took it in as he noted the small plane on a rough runway.\n\n\"Thank God,\" he murmured, making Stefano look at him sharply.\n\n\"What do you know?\" Stefano asked sharply.\n\n\"Anytime I think of Vanessa my stomach pitches and rolls, Mama the same, but less so,\" he admitted.\n\n\"Catriona?\" Stefano asked.\n\n\"No, I feel only the usual warmth when I think of her and Matteo,\" Ricco said carefully, thinking about them as he spoke.\n\n\"Good, good,\" Stefano said, though his body was still tense and he seemed somehow paler and frailer than he had been recently.\n\n\"Come, we will assist you and deal with the people who would drag the Tater into this battle,\" the man said, indicating the plane they had parked near.\n\nThe men took only what they needed, leaving their car and belongings behind, believing they would be able to come back in retrieve them, given time, and boarded the plane. Ricco had not been surprised to find Fawn on board. It seemed that since meeting her the day before she had been everywhere he was each time he turned around with her enigmatic smile and cryptic words that gave him no answers to the questions he asked. He said nothing, only nodding and moving to take his seat on the small plane so different from Matteo's jet.",
        "The small space held seven chairs, four of which were already filled with passengers, leaving Ricco and Stefano little choice about where to sit. The two men and two women, including Fawn, said nothing as Ricco and Stefano moved to the vacant chairs. Frowning, Ricco changed his mind as he went to sit beside Fawn and moved further toward the back of the small plane to sit with a younger man about the same age as Lucca. There was something familiar about the man, despite Ricco knowing he hadn't met the man before today.\n\n\"Ricco,\" he introduced himself as he sat and held out his hand in greeting to the man.\n\n\"Sava,\" the man said in a soft tone, taking the offered hand firmly in his grasp.\n\n\"How is it you seem so familiar to me?\" Ricco asked with a frown.\n\n\"I'd be surprised if I didn't,\" Sava chuckled, but said no more, making Ricco's frown deeper.\n\nThe engines came to life, shaking the small plane, and Ricco did up his belt, saying a silent prayer for a safe flight. He let the comment slip from his mind momentarily as he tried to work out what the flight time would be.\n\n\"We'll be there soon enough, and we will all get our answers,\" Sava said as if reading his mind, making Ricco raise an eyebrow. \"Ask your question,\" he encouraged as the plane taxied to the end of the runway and turned in a surprisingly small space before beginning its take off.\n\n\"My question?\" Ricco asked.\n\n\"Not the question I was expecting, so I will begin. I would like to tell you a story about my great Aunt,\" Sava began. \"It will help you to take your mind off the journey and what we may meet on the other side.\"\n\n\"Sure, if you like,\" Ricco settled back in his seat and gripped the armrests as Sava began to speak.\n\n\"I think you will like,\" Sava chuckled enigmatically. \"I believe that is why you sat with me rather than Fawn, who you already have a friendship with.\" The wheels of the plane left the ground, and the plane shook with the exertion of the lifting. Ricco swallowed hard and closed his eyes in prayer for a moment before being drawn back out by the calm voice of the man beside him.\n\n\"My Aunt had the misfortune of being born into a family where without fail the women held incredible powers of the forest witches, or what we call 'the Muma', I guess you could liken it to those who claim to be Wiccan. Mostly they have the power of premonition and fortune telling, but there are greater skills if they are inclined to study and learn from their elders. Much fewer men are born with any type of power, and it is invariably weaker. It is not so in your family, is it?\" Sava asked.\n\n\"That is true, but then we do not look for the skills in our womenfolk, and often the skill of the man lays latent until it is called upon and he begins to harness it,\" Ricco tried to explain his family's views on premonition.\n\n\"Interesting,\" Sava nodded. \"My Aunt would have been happier being born to your family, perhaps. As it was, she was born with no great gifts, not an interest in or aptitude for study. Our laws are very strict and chafing to the young, and were even more so when my great Aunt was a girl. On the day of her marriage, she ran away with the help of a young man who was visiting a neighbouring family. Having shamed her family and herself, she was cut-off and never allowed to return. She tried several times to contact my grandmother, her sister, but the law was such that they must treat her as a dead woman, a ghost. My grandmother couldn't help her, it was a regret she lamented on her deathbed.\"\n\n\"That is a sad story. In extreme cases, I guess our family does the same, but we house them and care for them ourselves, despite the wrong they have done to us personally,\" Ricco admitted.\n\n\"Ah, you speak of your mother,\" Sava nodded as if he knew the story of Maria and where she now lived. \"My great Aunt's only sin was turning her back on her family and tradition by not wanting to marry the man her parents had chosen for her. She had no great gifts of magic, but she was truly beautiful, with hair so dark it was almost black, the brightest blue eyes and pale flawless skin. Many were the men who fell in love with her and offered their suit to her parents.\"\n\n\"That could be a description of the woman I love,\" Ricco said, thinking of Cat, then he raised an eyebrow.\n\n\"Could it?\" Sava turned his piercing blue eyes on Ricco. \"Would you like to ask your question now?\"\n\n\"Can I show you a photograph instead?\" Ricco asked, pulling the courier bag from under his seat and opening the flap.\n\n\"It is not necessary, but if you feel you must,\" Sava responded.\n\n\"Is this your great Aunt?\" he asked. \"Was her name Katinka?\"\n\n\"Yes, it is. The man who wrote those letters, however, is not, and was never of the Tatar,\" Sava explained. \"He is of the Suebi, we know it, but we have no proof for you but our word and our honour.\"\n\n\"Suebi?\" Ricco questioned, knowing within himself that this young man spoke the truth.\n\n\"Yes, and we will confront him for the fate experienced by Katinka and her daughter, as well as the fate of her granddaughter, if they have their way, which we will not allow. When we land, you must trust us. I am quite looking forward to meeting my cousin and would not like your altruism to interfere with our plans,\" Sava said.\n\n\"Is my father being told the same story?\" Ricco asked, indicating Stefano, where he sat with Fawn.\n\n\"No, you chose to sit with me instead, and it is not Fawn's place to tell the story,\" Sava chuckled. \"He is being encouraged to trust us, however, and being told we mean no harm to the Vitali for alerting us to the deception being perpetrated. Fortunately, our laws have changed enough that the sins of the ancestors are not revisited on their descendants, and should Catriona wish to know us she may in some way.\"\n\n\"She will be overjoyed to hear that,\" Ricco said, smiling at the young man. \"Can I ask what you know about what is happening concerning my family in Melbourne at present?\"\n\n*****\n\nLucca had been leaving the hospital and, still unable to drive, knew Knox waited patiently for him at the curb when the alert sounded. He moved into the car and asked Knox to wait, expecting at any minute for Zachary to emerge from the doors. His phone buzzed, and he looked at it. New watchman passwords had been issued. Lucca frowned and looked into the rear vision mirror where Knox also checked his phone and looked back. A man in a black suit and red tie rapped on his window and, rolling it only a few centimetres, Lucca listened for the new password to distinguish the man from a possible fraud.\n\n\"I'm looking for eighteen red coats. I don't suppose you have one handy?\" The man said.\n\n\"Just the one, but I was hoping to pick up another one before I left,\" Lucca said. The man nodded his head once and stood beside the car, leaning casually, his arms folded as his eyes darted around the surrounding area. He turned suddenly and slid into the passenger's seat beside Knox.\n\n\"There's a red tie matching that red coat. They'll look sharp together,\" he pointed to where a car moved from the emergency department, and Knox pulled out into the traffic to follow the car to the safe house. \"You need to be at the warehouse, not where he is going,\" the watchman said, still quite obviously being fed instructions on his earpiece.\n\nLucca sat back knowing that everyone had a place to be and they had all been separated into smaller groups and taken to several locations around the city. He had hardly had the time to work with Cosimo to take on his new role as leader of the watchmen. He needed to get to the watchman base. From there he would be able to assist his uncle in tracking every member of the family.\n\nHe wanted to call Cat and know she was safe, but he had to trust in all of the procedures that had been put in place by Cosimo and his team. Zion would be safely on his way to a safe house, and his older brothers and fathers weren't in the city and would be protected by their own security.\n\n\"Have you heard from the others? Are they all safe?\" Lucca asked the man. \"Do you know where Cat is being taken?\"\n\n\"No, my responsibility is to get you to the warehouse,\" the man said gruffly and leaned back in the seat, silently alert watching the traffic around them as Knox veered off from the car they had been following and headed out toward the airport.\n\n*****\n\n\"Shit! Of all fucking days!\" Zion cursed and snatched up his beeping phone. His first thought was for Cat. The scene this morning and the phone call to Matteo had unsettled him more than he would ever let on. There was something wrong with her, something Matt knew and hadn't told them and she didn't want to tell them. The thought of her sad, pale face as he had left for work had stayed with him, and he cursed again, wondering where she was and who was making sure she got to a safe house without either him or Lucca escorting her.\n\nHe called Aria to make sure she was with a watchman and that his manager had things under control in the auction house, which would be evacuated. By the time he had made it to the ground floor of the HQ building, several watchmen waited for him and went through the process of identifying themselves to him. He travelled to the closest safe house, being in the huge home of his Uncle Sal, and gathered with the others in the library that served as a safe room after being fitted with reinforced security on all the doors and windows.\n\nTaking a deep breath, he looked around the room. He wasn't supposed to be in this position, he had four older brothers, and while he may be the second son of the younger Vitali children he had never even thought about the possibility of being the one holding the chair at the moment his family were attacked. Not letting his feelings show, he walked into the room with a purposeful stride and then to the computers that had been set up by the watchmen and where the other men all sat around on end of a long table.\n\n\"What do we know?\" he asked abruptly, and listened as Sebastian filled him in on what had come through so far.\n\n\"Everyone is accounted for except Theresa and Vanessa, who were last seen outside the charity event they attended today with Cat. Bradbury grabbed Cat when it looked like Vanessa was trying to get her to go with her in an unfamiliar car. In the confusion following the alarm, it seems Theresa did go with Vanessa, and we can't locate them,\" Sebastian frowned again at the screen in front of him, his fingers flying over the keys.\n\nShocked by what he heard, he looked around as he took a moment to process the words and saw Isaiah whispering urgently to Chase. There was nothing he could do that wasn't being done by Sebastion at this point to set up the links to the other safe houses. Cosimo and the watchmen would be working to locate Theresa, so he approached Isaiah and Chase, frowning, deciding to at least settle the one thing troubling him that he could.\n\n\"Problem?\" he asked. \"If you know something that we should know, now is the time to speak.\"\n\n\"I need to go,\" Isaiah said as if it was obvious. \"I need to get to Frankie's.\"\n\n\"Why Frankie's, of all places?\" Zion asked.\n\n\"Matt called me this morning, and I promised to check on Cat!\" he said, agitation clear in his voice.\n\n\"Chase, can you give us a minute?\" Zion asked, and, nodding, his cousin moved away.\n\n\"Cat's not at Frankie's, and I won't tell you where she is, not unless you can give me a really good reason why I should,\" Zion said seriously. He knew there was something wrong, and as he looked at Isaiah's pained face, it suddenly dawned on him what it was. \"She's pregnant?\" he gasped.\n\n\"It's early days, and she's had some trouble coping with the early symptoms. Morning sickness and mood swings...\" Isaiah said. \"I don't know how she would be coping with the drama today without Matt and Ricco here to talk her through it.\"\n\n\"First we make sure everyone is safe and accounted for. You can't go where Cat is if it's not safe to travel. If someone is watching you will lead them straight to the heart of the family. Matt has a plan for her, and we have to trust that,\" Zion said and turned back to the table. \"Is the link up yet?\" he asked Sebastian.\n\n\"Just about,\" he pointed to a television screen mounted on the wall, and he cast the screen of his laptop to it. The faces of Henry and Raphael sat side by side, other people could be seen moving behind and around them as they linked together all of the safe houses. \"Just give me one more minute,\" Sebastian brought up the third picture of Hugh, who appeared to still be driving, and Zion assumed Cat was in the rear of the car. There was no noise from the picture, just the visual, and Zion moved toward Sebastian.\n\n\"Can we confirm Cat is with Hugh?\" he asked quietly.\n\n\"Hugh has an earpiece, he seems to be able to hear us, but sound doesn't seem to carry our way yet,\" Sebastian frowned. \"We're just waiting on Lucca and Cosimo, they are dealing with other things right now, but I'll bring up the screen and try again.\"\n\n\"Give me an earpiece so I can talk to everyone, and get Lucca up on the screen, tell him it's urgent,\" Zion held out his hand, aware that for the time being he was in charge and he needed to step up, despite being one of the youngest in the room. Kalum rushed in and went immediately to stand behind Zion. He knew he should be at Matteo's side, but in his absence he had come to Zion, trusting that Mia would be safe with her watchmen.\n\n\"Roberto and Matteo are in the air, they should land in an hour or so,\" Kalum murmured to Zion, who let out a breath he hadn't realised he held.\n\n\"Any word on Ricco and Stefano?\" he asked, thinking that he could do this for an hour, and relaxed a little knowing it wouldn't be forever.\n\n\"I don't have those sorts of contacts. That would be Cosimo's domain. I guess,\" Kalum admitted.\n\n\"Okay, let's do a head count and make sure no one is missing. Has anyone heard from either Vanessa or Theresa?\" Zion said into the room and his earpiece, as Lucca's face finally flickered to life on the screen. The information between three of the four groups began to flow as they tried to work out what happened and why the alert was sounded.\n\n*****\n\n\"It's linked, but they can't hear us,\" Hugh said over his shoulder into the silence of the car.\n\nCat was silent and wary. She had switched off her phone at Bradbury's insistence and concentrated instead on the fact that Matteo was safe and on his way back, and Ricco was too far away to be in any danger. Everything would be okay as long as the people she loved were alive and unharmed. She watched with a little curiosity as Bradbury switched on the small screen in the back of the driver's chair and brought it to life. It flickered a few times, and she saw the faces of Sebastian, Lucca, Henry and Raphael. She could hear Zion talking, even though she couldn't see him, and she leaned forward in her seat as if drawn toward the calm voice.\n\n\"Do they know where Ricco is?\" she whispered to Bradbury without even thinking.\n\n\"Do you have an earpiece for your phone?\" Bradbury asked gruffly. \"You might be able to sync it in better than ours which are jumbled with security measures.\"\n\n\"Lucca?\" Cat asked softly into the earpiece after rummaging around in her bag and finding it. She had passed it to Bradbury, who had leaned forward close to High's phone, trying to sync it before passing it back to her.\n\n\"Cat!\" Both Lucca and Zion said in unison.\n\n\"Yes,\" she said with a wide smile, despite knowing they couldn't see her. \"Has anyone heard from Ricco?\" she asked.\n\n\"There was an anonymous message from an unknown number saying that Ricco and Stefano were safe and travelling, but that's all we know. We haven't had another response to answer our questions about how and when they would be returning,\" Lucca spoke with clipped efficiency before softening his voice. \"Matteo is on his way back and should be here in less than an hour.\"\n\n\"I know,\" she spoke in a soft voice. \"Sorry to interrupt you, I just had to ask. Hugh and Bradbury can answer your questions better about Vanessa and Theresa. I wasn't in a position to see much,\" she apologised and handed the blue tooth ear piece to Bradbury, scowling at him for the way he had manhandled her into the car. Matteo may trust him, but she still didn't.\n\nShe listened as he spoke, giving a detailed description of the man who spoke to Theresa and tried to get both Theresa and Catriona to leave with him. He admitted to being the one to sound the alarm as he had tried to talk some sense into Theresa, and of Vanessa's appearance from one of the dark cars lining the curb outside the venue. He was unapologetic about his interference in Vanessa's attempts to get Cat to go with her and the way he had physically forced Cat into her own car before they took off. He was unsure if Theresa had gone with Vanessa and the fake watchman, or if the men the family relied on to protect their own had intervened with her in time, just as he had with Cat.\n\nCat looked at him with wide eyes, trying to understand what he was saying. Vanessa wouldn't hurt her step-mother, surely. Still, it was hard to reconcile what she had been doing there at all when she hadn't attended the event inside the restaurant. Waves of emotion swept through her from relief to guilt to worry and sadness. She felt her eyes well with tears and she rummaged in her purse, again looking for a tissue. Her view was disrupted by a large hand holding out a soft laundered men's handkerchief to her, and she took it, gratefully looking up at Bradbury and seeing compassion in his eyes.\n\n\"Where are we going?\" she asked quietly as they turned into a large parking garage near the airport.\n\n\"Somewhere safe,\" Bradbury said in a whisper, turning away from the phone to answer her.\n\n*****\n\nMatteo had sat in the cockpit with the pilot, talking to his cousin, Tim, on the radio. He was surprisingly calm. Despite attempts to abduct both Theresa and Cat, Bradbury had managed to get Cat out of harm's way. He was worried for Theresa, but he didn't believe anyone would hurt her or be able to use her as leverage. Vanessa, though, was a different matter. The CCTV footage put her at the scene and working with the would-be abductors. He couldn't bring himself to believe she would do so willingly. The evidence seemed pretty startling, however, and he tried to work out why she would do such a thing if she had.\n\nThe plane touched down, and before it had even finished taxiing to a stop he was out of his seat and pacing near the door, cursing as he dialled Cat's number, and finding it turned off he called Bradbury. He needed to be doing something, anything. The rest of his family was locked down for the remainder of the day, and the odd message from an anonymous source regarding Ricco and Stefano was not altogether comforting. He needed to speak to his brother and Cat.\n\nHis phone rang with a video call, and believing it might be the anonymous person who had left messages about Ricco he answered it, putting it on speaker so his father could hear any news, and almost lost his shit when the picture came up of Giovani holding a gun at David's head.\n\n\"Do I have your attention?\" Giovanni snarled.\n\n\"You do!\" Matteo said through gritted teeth. If anything ever happened to David because of him, Cat would never forgive herself or him. He knew it without a doubt in his mind, and so did Giovanni, obviously.\n\n\"Good, now listen carefully, because I will only give these instructions once,\" he said. \"You will collect your wife while your men refuel your plane and then you will reboard with a co-pilot who will give your pilot the details of the flight plan that has already been lodged for your travel. You have one hour to be off the ground again, failure to comply will mean that I will kill one of your family members.\" He turned the camera, and Matteo could see Vanessa, Theresa and Mick all sitting and bound as David was.",
        "\"What do you want, Giovanni?\" Matteo hissed in a deathly quiet voice filled with rage.\n\n\"I have already told you what I want. I also want your father to accompany you!\" he sneered. \"I know the monster is there listening, make sure he is on the plane. It is a shame that the other monster is missing, but then it will be enough to know he suffers for his stupidity. As if the Tater involve themselves in worldly business. You have one hour to be in the air again, Matteo, failure to comply will cause you far more pain that you are prepared for!\"\n\nThe screen went blank, and Matteo shook with rage, using all his self-restraint not to throw the phone across the tarmac.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "brothers",
        "family",
        "betrayal",
        "madman"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-32"
}