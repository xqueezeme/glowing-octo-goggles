{
    "title": "Book Club Pt. 02",
    "pages": [
        "Book club pt 2\n\nI shifted the Mazda into 5th and shifted uneasily in my seat. If the mission of the butt plug was to make things interesting, it was succeeding. The knob at the end for easy extraction didn't have anywhere to go so the plug simply pressed in and out every time I stepped on the clutch. This most recent adjustment made me exhale slowly and grip the top of the steering wheel a little too tight.\n\n\"You alright over there?\"\n\nJess was staring at me. Her grin was downright devious.\n\n\"Yeah, I'm good.\"\n\n\"You're doing some pretty loud breathing.\"\n\n\"Am I?\"\n\n\"Which plug did you go with?\"\n\nIt was a relief having her in on the bit. Ever since Book Club, when my wife and virtually half of the Channel 4 newsroom turned me out and pegged me into a nut-covered stupor, our sex life and consequently our relationship had been great. It wasn't all gangbangs and strap-ons, although the latter made an appearance, but a fuse had been lit. An intimacy that would've otherwise never sparked had I not been caught satisfying myself with a series of plugs and a 7-inch strap-on, first by Liz\u2014dayside reporter, Marielle\u2014nightside reporter, Erin Baker\u2014sports, and brought across the finish line by my wife, Jess Wilson, 10 pm anchor. It was nice having a secret. It was a rush having a secret with her.\n\n\"The middle one.\"\n\n\"Playing it safe.\"\n\n\"Yeah, I figured it was best. Glad I did. This thing is no joke.\"\n\n\"Yeah?\"\n\n\"It's basically 3 inches long.\"\n\n\"Wow, three inches,\" she said dripping with sarcasm.\n\n\"I don't think I've been able to get below a half chub since I put it in.\"\n\n\"Is that so? Well, just try and relax.\" Jess reached past the shifter and grabbed my thigh. I winced as excitement rushed through me and into my cock.\n\n\"There'll be none of that.\" I pushed her hand away. \"It's bad enough you're dressed like that.\"\n\n\"Like what?\"\n\n\"Are you kidding me? That dress is ridiculous.\"\n\nShe wore a blue and white striped t-shirt material dress that clung to her\u2014 tits pressed high and together like best buds and her firm ass leading down to her long, tan legs. It was a cruel joke and she knew it. I focused on the road.\n\n\"This ole thing?\"\n\n\"Seems a little excessive for the Savannah book club.\"\n\n\"It's more accessible.\"\n\n\"Accessible? What are you accessing?\"\n\n\"Just this.\"\n\nI glanced over. She pulled the dress up to her naval and atop her pink panties hung her new strap-on\u2014a bright blue dildo that curled up towards her belly.\n\n\"What the hell!\"\n\nJess grabbed it and gave it a few playful strokes.\n\n\"You like?\"\n\n\"That's not the point!\"\n\n\"You like.\"\n\n\"How big is that friggin thing?\"\n\n\"So that's what you're concerned about?\"\n\n\"Well, no, that's just\u2014\"\n\n\"Seven inches insertable.\" Jess arched her back and pressed the dildo forward by clasping it at the base to accentuate its full scope. \"You can handle that.\"\n\n\"Not the point. I'm only going because Ryan will be there and you said he'll be watching the Braves game.\"\n\n\"Then why'd you put the plug in?\"\n\nI didn't answer.\n\n\"Exactly.\"\n\n\"I'll just drop you off.\"\n\n\"Relax,\" she again grabbed my thigh. My ass tightened around the plug and I again repositioned gingerly. \"I'm just playing. It'll stay between us.\"\n\n\"You swear?\"\n\n\"Swear.\"\n\n\"And they know I'm coming, right?\"\n\n\"Yep.\"\n\nTheir house sat on a hill in a very swanky part of town and was one of those postmodern castles with open spaces and large windows. Every surface in the kitchen was either white granite or stainless steel. The island was more of a continent\u2014big enough for nearly the entire newsroom to gather around with their wine glasses. The usual suspects were there: Liz, Marielle, and Erin\u2014all of which helped in the liberation process last month. But there were newbies. A couple of morning show additions. Meteorologist Tonya Lewis and Jackie Winslett\u2014the morning co-anchor/ homeowner. Her husband, Ryan, was some doctor making big money so the house was no surprise and neither was Jackie. That was a No Days Off body with the help of some obnoxiously fake tits. They were the first things I saw when she opened the front door. Then her smile. Her teeth were chalk white.\n\nOur arrival was met with an exaggerated cheer and a couple of tall glasses of Pinot. Everybody was smiling and drinking and chattering incessantly. Must've been a good book this month.\n\n\"Where's Ryan?\" I asked Jackie.\n\n\"Oh, he had to go to Tallahassee for the weekend.\"\n\n\"For work?\" I asked, thinking it could've been a last-minute thing.\n\n\"No, just a boys trip.\"\n\n\"Gotcha.\"\n\nI nodded and casually scanned to lock my laser eyes on my wife. She was too busy mixing it up with Liz and Marielle. They were having a grand old time talking about something. Everybody was. Then something dawned on me.\n\nThey were all wearing dresses.\n\nSundresses and skirts. Not entirely weird, but I noticed it. It all felt very formal for book club. Except for Erin, of course. The Sports Chick Slash Sexual Maven wore neon yellow yoga pants with some dizzying pattern. It was like a magic eye. I did my best to stare without staring to try and deduce its print. Maybe it was a dragon? I worked from the calf up.\n\nI snapped my glance away. Anywhere else. Did I just see?\n\nI looked again.\n\nYep.\n\nA bulge.\n\nRunning from her crotch down to the middle of her thigh. My asshole clenched. I averted my eyes up.\n\nShe was staring at me.\n\nFuck.\n\nI played it as cool as I could. I drank wine and pretended to listen to the yammering about characters I'd never heard of and a plot I had zero concerns about. I studied everybody, trying to glean any type of intel on what resided unseen. But, like wine has been known to do, it worked. I played along in the conversation when I could and held my glass out for a refill when that time came as well. Feeling loose, I excused myself and navigated my way to the bathroom down a long hallway. Lots of wrong doors before I found a spacious full bath with a massive head-to-toe mirror.\n\nJust as I closed the door it eased back open. Jess slinked in.\n\n\"Somebody's having fun!\"\n\n\"Yeah, it's nice, even though I haven't read the book.\"\n\n\"Eh, half of them haven't either.\"\n\n\"Really?\"\n\n\"How's it doing?\" She ignored my question.\n\n\"What?\"\n\n\"The plug.\"\n\n\"Good, kind of gotten used to it I guess. Hardly know it's there.\"\n\n\"Let's change that.\"\n\n\"What?\"\n\n\"Drop your pants.\"\n\n\"Here?\"\n\n\"You'd rather do it out there?\"\n\n\"Well, no\u2014\"\n\n\"Then drop them.\" She smacked my ass as I unfastened my belt. Jess ushered for me to turn around and grab onto the towel rack. She had pulled her dress up so the strap-on leered out and swayed next to my hip. She latched onto the ring at the end of the plug and tugged.\n\n\"Damn that's in there.\"\n\n\"Yeah?\" I said dumbly while holding the metal rack.\n\nI felt the coolness of lube run down my ass. Jess massaged it around the plug. I wriggled my ass. Jess pinched it playfully.\n\nThen she began working the plug. She nudged it in and in again with light prods. My cock danced.\n\nWith a twist, it began to slide out and I felt the bulb press and then dive back inside and then another twist and another pull. As my ass tried to gobble it back in Jess extracted it.\n\n\"Ohhhh.\" I groaned and again, instinctually, wiggled my ass in response to the sensation.\n\nThe feeling was fleeting, replaced by the presence of Jess and her cock. The head dragged up my taint and hovered. Jess pulled me by the hips away from the wall to better her angle. I moved eagerly but when I tried to look back she took me. Her strap-on burst inside, sending me up onto my tiptoes. Jess shoved me back flat with a firm hand against the small of my back. It took everything I had to not yell out in pleasure. She worked slowly for the first few passes but then ramped up her speed. I leaned my forehead against the wall and let out a low moan. I glanced at the full-length mirror. It was a rush. Seeing Jess hold her excess dress in one hand like the reigns of a horse while the other pressed flat against my back. Her hips swinging. Her ass bouncing at every pause. The concentration on her face. Sometimes I would see just a flash of the strap-on as she pulled back only to marvel in ecstasy as it disappeared inside me.\n\nShe drew back gradually, showing me more of the strap-on and I braced for it to slam back in but it never did. Jess pulled out and in one motion the plug pushed against my asshole and popped back inside me.\n\n\"OH FUCK.\" My upper body hung limply from the towel rack. \"Did you really have to stop?\"\n\n\"For now.\"\n\n\"I'm not sure I can wait.\"\n\nJess sized me up.\n\n\"You need it that bad?\"\n\nI nodded.\n\n\"Okay. Wait here. I'll think of something.\"\n\nShe fixed her dress, properly securing her secret strap-on beneath it, and left me in the bathroom with just my shirt on and a plug sealed firmly in my ass. I stroked my cock and waited.\n\nTwo minutes felt like 20 went the bathroom door finally swung open.\n\nIt was Jess. I grabbed for the plug thinking time was of the essence.\n\n\"No, leave it. We can take it out out there.\"\n\n\"Out there?\"\n\n\"Everybody went down to the patio. I want to fuck you in the kitchen.\"\n\n\"You're sure that's a good idea?\"\n\n\"Why wouldn't it be? Besides, you saw that kitchen.\"\n\nI had seen that kitchen. It was a very fuckable kitchen.\n\n\"I don't know. What if someone comes in?\"\n\n\"If you hurry we won't have to worry about that. But leave your shirt.\"\n\n\"Why?\"\n\n\"Because I want you naked that's why. Come on.\"\n\nShe reached around and fish hooked the plug. That pretty much sealed my fate. I peeled my shirt off while backpedaling as Jess pulled me out of the bathroom and down the hall.\n\n\"Not so fast,\" I said.\n\nJess stopped and the plug nudged inward and grazed my prostate. I winced just as she hugged my body.\n\n\"Stroke your cock,\" she whispered.\n\nI was already rock hard and had no problem obliging. We walked out into the open area of the kitchen and living room.\n\n\"Oh my god.\"\n\nLaughter ensued. I glanced over my shoulder to see the entire book club standing around the island. I tried to walk away and back towards the bathroom in hopes this could be chalked up to a mirage. Jess had me snared. She maneuvered the plug up and down, causing me to shudder.\n\nThe girls all giggled and hooted at the show.\n\n\"I'd like to say you really have him by the balls but that doesn't seem to do it justice,\" Jackie chided.\n\n\"Bring that ass over here,\" Liz said.\n\n\"I want to see the front,\" Tonya added.\n\nJess obliged. Like a tiger kept at bay via a noose and stick in a zoo, she spiraled me around so I faced the group.\n\n\"Oh yes!\"\n\n\"Look how fucking hard he is!\"\n\n\"He must really like things up his ass.\"\n\n\"You don't know the half of it, Jacks,\" Liz said. \"Last book club he put on quite a show.\"\n\n\"Is that so?\"\n\nI looked away sheepishly.\n\n\"No need to be shy,\" Liz said. \"We're going to take good care of you.\"\n\n\"We?\" I asked dumbly.\n\n\"Yeah, we.\" They all stepped back from the island and pulled up their dresses.\n\nIt was an ambush.\n\nThey all were strapped. Varying sizes and lengths and colors and angles but the common theme was clearly where they were going to end up. Only Erin still wore her leggings, the outline of the dildo was unmistakable. I gulped and they all saw.\n\n\"Aawwwww, he knows he's fucked.\"\n\n\"Literally.\"\n\nThey all laughed and converged on me. Hands ran across my body and reached for my cock and the plug while whatever hands weren't groping me held their respective members.\n\n\"Bring him over here,\" Jackie instructed.\n\nTheir hands ushered me towards a large, round ottoman in the middle of the living room. It was draped in towels while on an adjacent coffee table were multiple bottles of lube. It was all happening so fast.\n\n\"Who's first?\"\n\n\"I think Jess needs to break him in.\"\n\n\"Full disclosure: I already fucked him in the bathroom.\"\n\n\"What!?\"\n\n\"You slut!\"\n\n\"I couldn't help it. He seduced me.\" She smiled at me and I felt a slight sense of ease. \"It was just a taste!\"\n\n\"For who, you or him?\"\n\n\"Him clearly. He was begging for me to keep going.\"\n\n\"And keep him all to yourself.\"\n\n\"You did the right thing, Jess.\"\n\nThe hands all but pushed me onto my back on the ottoman and it began to spin.\n\nIt was a lazy Susan.\n\nThe girls all fanned out around it in a circle, stroking their strap-ons with lube. I laid flat on my back with my hard cock splayed across my stomach.\n\n\"It's Jackie's house,\" Liz said. \"I think she should get first crack at him.\"\n\nThe group agreed.\n\n\"But I get to pull the butt plug out,\" Liz added quickly and they all laughed but allowed her initiative. They spun me around so Liz stood between my legs. Her blonde hair was pulled back into a ponytail and her tits struggled to stay caged in her dress. Her weapon of choice was flesh-colored and had a thick vein running down the center and an exaggerated head. She squeezed a gob of lube onto me and began to contort the plug.\n\n\"It's so damn tight.\" She informed the group. \"But I can feel it.\"\n\nShe placed her hand on the inside of my thigh and, with a bit of determination, extracted the plug.\n\n\"Ohhh fuck.\"\n\nThe girls cheered and the ottoman began to spin. It stopped in front of Jackie. Protruding from a lace harness was a light purple dildo with a subtle upward kink. I wiggled to the edge and pulled my knees to my chest.\n\n\"You guys weren't lying. He knows what he's doing.\"\n\nJackie lined herself up. First with a finger and then the tip. Her touch sent a chill through me. The plug had done its job because after minimal tinkering the strap-on eased inside me. My mouth gaped open but no sound came out. The girls hooted.\n\n\"I think he likes it, Jacks.\"\n\nAs she slid further in, my head rolled around like a marble. It stopped on Jess. She was staring into my eyes. She mouthed I love you but before I could signal it back, Jackie had taken me completely. My three words were oh my god.\n\nThen a primal moan.\n\n\"Yes!!\" The girls shouted in unison.\n\n\"He's taking it like a champ.\"\n\n\"What's the cumming policy?\" Jackie asked mid-thrust.\n\n\"What do you mean?\" Somebody asked.\n\n\"I say fair game. But no touching!\" Liz clarified. \"It's gotta be all anal.\"\n\n\"What do you think, Ben?\" Jackie asked. She transitioned to short quick pumps for my answer.\n\n\"Sounds good,\" I said through pants.\n\n\"How good?\"\n\n\"So good.\" I gasped as she pressed her hips flush against my ass and gyrated up and down. Then she slid out completely and spun the ottoman around. All I could do was grip my thighs tighter as I watched the various strap-ons pass by.\n\nIt stopped at Marielle.\n\n\"Ayyy.\" She smacked my ass while shaking hers although I couldn't see her plump ass jiggle. All I could see was her fat cock swing. It couldn't have been more than 5 inches but its thickness was only trumped by its commitment to detail: the ridges separating the head from the shaft were pronounced and its balls clung tight.\n\n\"Rollover, Papi.\"\n\n\"Oooooohhhhh,\" the girls chanted.\n\nI crawled onto all fours. I stared at Erin. She was basically fingering herself over her yoga pants while her mysterious member rolled around underneath.\n\nMarielle wasted no time. No sooner was the tip bracing against me was it shooting inside me and forcing out a guttural yell. The girls shrieked with joy as Marielle maneuvered her chode into my ass. I struggled to take it all. Turns out I was taking about half and loving every centimeter.\n\n\"Yeah, Papi,\" she slapped my ass with one hand while the other braced my tailbone. Her rhythm was unfathomable. Even the rest of the group noticed. They also noticed its effects.\n\n\"I think he's going to cum.\" Liz said.\n\n\"Ya?\" Jackie asked.\n\n\"I think he is cumming.\" Erin corrected her. It was news to me. My cock wasn't even fully hard anymore yet cum seeped out and onto the ottoman beneath me. I grasped at the towels and moaned.\n\n\"Yaasssss!\"\n\n\"That's one!\"\n\n\"Wait to go, Papi,\" Marielle eased out of me and I damn near collapsed.\n\nThe next few spins were a blur as the girls played strap-on roulette with my ass. Liz had me doggystyle as well. Her long and ponderous strokes made me pant and the girls cry with jealousy. Tonya, her skirt folded up showing abs etched into her caramel skin, introduced me to her long and slender dildo, complete with another upward slant. She rolled me over\u2014my back getting sticky from the droplets of jizz. She held my legs straight up and skewered me. I trembled uncontrollably as she slid effortlessly inside me, only stopping when her hips connected with me. She then hugged my legs\u2014her tits pressed firmly against my calves\u2014and proceeded to rail me with quick long bursts until another stream of cum ran down my stomach.\n\n\"That's two!\"\n\nJess made it three. Picking up seamlessly where Tonya had left off, a slight rotation of the ottoman and she was in. Her idea was to push my legs to the side so I lay on my hip with my legs together.\n\n\"Oh baby,\" I cried out. \"That feels so good.\"\n\n\"You like it when I fuck you?\"\n\n\"So much.\"\n\n\"Do you like it when I go fast?\"\n\n\"Ohhhhhhhhhh.\"\n\n\"Or do you like it deep?\"\n\nDeep was the correct answer. A single spurt of cum lined the towel.\n\nThe strap-ons blurred together. But one was missing. Jackie pulled out of me doggystyle and through gasps I scanned the circle.\n\n\"I still haven't had Erin's.\"\n\n\"Ooooohhhh.\"\n\n\"I think he's calling you out, Erin.\"\n\n\"He's feeling himself!\"\n\n\"You sure you're ready?\" Erin asked. She'd taken to rubbing her tits and I was pretty sure she was already on the orgasm scoreboard.\n\n\"Bring it.\"\n\n\"Ooooooooo.\"\n\n\"Hell, I wanna see this thing,\" Liz said.\n\nErin hooked her thumbs into her yoga pants and tugged at them, struggling to peel the leggings over her ass first. It popped out and bounced back into place. Her harness was bright pink. Then she dragged her fingers down the front.\n\n\"Holy shit,\" Jackie yelled.\n\n\"That's a huge cock.\" Liz added.\n\nThe flesh-colored strap-on had stretched midway down her thigh and now hung menacingly between her tanned and toned thighs. Marielle and Tonya had taken it upon themselves to apply the lube and their hands shimmied up and down the length of her member.\n\n\"How many inches is that?\" Jess asked.\n\n\"Nine.\"\n\n\"Nine!?\" The group shouted.\n\nI said nothing. I rolled over onto my back and pulled my thighs to my chest.\n\n\"Oh, okay!\" Jackie cheered.\n\nErin pulled at the straps on her harness, first hoisting them up over her hips and then tightening them into place. She smacked the cock off my ass before lining me up.\n\nIt pressed.\n\nI exhaled deeply as the pressure increased. Slowly, my asshole gave way as the tip\u2014with its defined head\u2014nestled inside me and began its descent.\n\n\"Ohhh FUCK!\" I moaned as the strap-on continuously slid deeper.\n\n\"Oh fuck is right,\" Jackie said. \"You are owning that dick.\"\n\nI watched as Erin pressed further inside me and the girls cheered and celebrated as if this was all a product of their hard work and dedication to the cause. It resulted in a menagerie of jumping strap-ons surrounding me. I let go of my thighs and extended my arms out above my head.\n\n\"Oh, fuck me!\" I yelled out.\n\n\"You got it.\"\n\nErin began with slow thrusts that left me clutching for any bit of towel I could grab. My moans grew and grew with her thrusts as she evolved to long, steady pumps.\n\n\"Ohhhhhhhhh.\"\n\nI was struggling to remain lucid. Any initial bits of pain subsided and morphed into an overwhelming pleasure that permeated throughout my limbs. Uncharted territory for sure. My body didn't know how to respond. Fingers and toes tingled. My legs trembled. I rolled my head back and closed my eyes in ecstasy.\n\nA wetness enveloped me. I couldn't tell what until I opened my eyes. Jess had climbed onto the ottoman and gathered my cock inside her mouth. On all fours, with her thigh pressed against my side, her strap-on dangling close by and my arm under her, she held my dick in her mouth and swirled it with her tongue.",
        "\"That's it, girl.\"\n\n\"Suck that dick.\"\n\nThe elation was indescribable. I turned my head into her thigh and began making out with it while pulling my hand up under her. I slid my thumb under her mounted strap-on and ran it over her clit. She was sopping wet and I felt a flurry of tongue lashes the more I massaged her.\n\nAll the while, Erin continued to plunge her massive cock inside me. I could no longer see her but occasionally I'd feel the silicone testicles press against my ass and the girls all marvel.\n\nWe reached the top of the hill.\n\nI moaned theatrically and commenced the short trip to culmination. My breathing sped up. My balls swelled and I mouthed into Jess' thigh that I was going to cum.\n\nIt was all happening too fast. The thrusts and slurping and the careful caressing of other body parts by hands unseen were overwhelming. A warmth surged inside me and Jess surely must've tasted the initial drops because she spit out my dripping cock and stroked it with long pumps and Erin matched them with her thrusts and then the first stream of cum erupted, flying over my head.\n\nThe shrieks of excited girls filled my ears but sounded distant and unreal. Another rope shot out to the sound of more screams and laughter. I felt the next one splat off my face and, with my mouth unable to close during such a massive and unrepentant orgasm, drops ran down my lips. The next bursts were hardly that as a warm pile of cum mounted on my stomach and pooled in my belly button.\n\nJess held onto my cock as Erin made one final pass, a little dribble tumbling from me as the strap-on took one more swipe at my prostate before sliding out of me completely. My body went limp and my head fell back.\n\n\"That was so fucking hot!\" Jackie shouted.\n\n\"Oh my god, look at Liz's face!\" One of the girls hollered.\n\nI peered back. Liz stood with her mouth agape in a state of shock. A stream of cum ran across her face.\n\n\"Look at mine!\" Tonya laughed. \"That second shot got me in my fucking eye.\"\n\nShe wiped at it and ran the fingers across her tongue.\n\n\"That's a good idea,\" Jackie announced. \"It's only fair we all get a taste of our hard work.\"\n\nOne by one the girls leaned across me and took licks from the puddles of cum that lay scattered across me like I was some barnyard trough. Jess seized upon the bit on my face and licked it all in one swoop before planting a wet kiss on my lips. She hovered above me and mouthed three words. This time I mouthed the same ones back.\n\n\"I can't believe I missed last month,\" Jackie said.\n\n\"Safe to say you're hosting the next one?\" Jess asked.\n\n\"We'll see. Maybe we invite some girls from channel 8 to join.\"\n\n \n"
    ],
    "authorname": "Revolver_O",
    "tags": [
        "pegging",
        "anal",
        "loving wives",
        "cfnm",
        "strap-on",
        "group sex",
        "toys"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/book-club-pt-02"
}