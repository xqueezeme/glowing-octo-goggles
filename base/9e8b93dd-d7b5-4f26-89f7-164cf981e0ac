{
    "title": "What's in a Cum Shot?",
    "pages": [
        "\"No, no, it's true. It says right here 'Cum Sucker: four ounces Jack Daniels, four ounces Southern Cumfort, four ounces Morgan, and, for ladies, four ounces of sperm,'\" read Stephen from a bartender's website.\n\n\"Come on. No bar in the world is going to actually offer a drink like that. Or if they do, they're certainly not going to make one,\" my old buddy Harvey countered in his commonsensical manner.\n\n\"But all the others just list standard ingredients,\" Stephen continued. \"Let's see there are two different recipes for a Cum Shot. There's the Cum Dumpster, Cum In A Tub, Cumstain, Blowjob, Cumlips, oh, and the Cockteaser. One more: Cumshot In The Eye. Ooh, that's gotta hurt.\"\n\n\"What's in a Cum Shot?\" someone asked.\n\nLaughter all around mixed with one \"You oughta know\" and one mean spirited \"He knows when he tastes it.\" \n\nOnce they quieted down Stephen went on reading from his laptop's browser.\n\n\"One part butterscotch schnapps and one part Bailey's Irish Cream. Top with whipped cream,\" he said, emphasizing the final word with a glance in my direction, raised eyebrows and a smile.\n\n\"I'd be surprised if any place even listed these drinks,\" Harvey added.\n\nBig Mike our intolerable host, again waking from his drunken stupor, threw in his two cents, \"I'll bet Lisa's never had a real Cum Shot.\"\n\nThe rest of us just ignored the obnoxious prick, hoping the alcohol he'd consumed would finally shut him up for the night. Actually, had any one of the others said this it would have been a turn-on - or a dare. With Big Mike it just sounded vulgar.\n\nThe nine of us had finished a two-day sales conference at 7:30 on a Friday night - too late to catch any flights out until the morning. We'd met at the hotel restaurant for dinner, then moved to the bar for a little postprandial conversation and a lot of alcohol. It had been a rough conference with the national marketing director chewing us out for not achieving our quarterly sales targets. Everyone deserved some unwind time.\n\nAs is typical with this group and something for which I've never stopped thanking my lucky stars, I was the sole woman. Remember learning about potential and kinetic energy in high school science class? Every three months we were the potential energy equivalent of a gangbang. Nine men and me. Though it had never happened there was always the playful, sexy, excitement in the air. I, for one, could feel it - at the least I could fantasize about it.\n\nHeaven. Almost. There was always Big Mike. Probably not too bad a guy when he'd lay off the sauce. Since we'd never seen him in the \"off\" condition, he was what could only be characterized as described above: an obnoxious prick. I'm generally not one to call people names, but if there were a dictionary entry for \"obnoxious prick\" you'd see Big Mike's mug! Never a nice word. Never a team player. Always nasty and negative. Always exhausting and egocentric.\n\nYet, somehow since the meeting was held this quarter in his town and the restaurant kicked us out at 9:00, we'd left the bar and taken two rental cars plus Big Mike's battleship back to his house.\n\n\"Judy tells me it's classy. It's twill or toile or 'twat' or something,\" Big Mike had explained, leering at me with his crude shot at a rude pun. \"To me a chair's a chair. It's where I put my butt. All I know is that it's expensive. Just be careful,\" Mike had warned us non-stop since we'd arrived. His wife's new, custom cabriole wing chair and matching pillows was delivered today and she hadn't even seen it yet. \"Lucky, I can afford her. She's at her mom's in Baker, but she'll be back in the morning. If anything's messed up, she'll have my head. Just don't go near it, you assholes.\"\n\nThere you go, our gracious host.\n\nCrowded into the cozy living room, Stephen still searching for salacious drinks, my brain ruminated about why they were called cocktails in the first place: in my addlepated condition I was so proud of whoever put the words \"cock\" and \"tail\" together. With way too much alcohol coursing through all our brains and veins, the conversation turned back to sex and, as I was the only female, I was the center of attention. (Did I tell you I was with nine men? The thought alone made me moist.)\n\n\"Judy'll have his head,\nBig Mike'll be dead,\nDon't you dare\nGo near the chair.\"\n\nWhen he got snockered, Harvey liked to think he was Calliope. At least his dreadful attempts at poetry made everyone lighten up temporarily.\n\nHarvey was also the guy in the room with whom I was closest. Plus, I had once drunk two loads of his cum on one business trip - without any marital infidelity!\n\n\"So, Lisa, have you ever had a Cum Shot?\" he asked.\n\nBut with Harvey's question, suddenly I wasn't simply the only female. I could see the looks on their faces. My mouth had just become the center of a bull's eye! If I had looked in a mirror I know there'd have been concentric circles surrounding it.\n\nTo tell the truth I'd always been more than just a fan of fellatio, I was a fanatic. Though I took pleasure in sucking, it was the semen to which I was addicted. The feeling of a smooth cock between my lips was a real turn on, yet semen was nepenthe. I could have an orgasm just drinking a condomful. (Harvey, that time, had kindly provided exactly that treat.)\n\nIt was as though my taste buds were connected to my clit. Is that weird or what?\n\nWell, when in Rome, as the adage goes. Feeling a bit feisty I responded to his question, \"I've had more Cum Shots than I can count. If I wasn't a swallower, I could open the Wal-Mart of sperm banks.\" Then, upon reflection I thought I'd add, \"Why? How many have you had, Harv?\"\n\nNow, I knew Harvey was straight and I had no doubt that all of them were. I thought it would be fun just to see the reaction.\n\nThe room immediately filled with a chorus of denials: \"No way!\" \"Yuck!\" \"I ain't gay,\" and other similar responses. I was amazed at that. I mean I love cum. It excites me. Often, tasting it, smelling it or just feeling it will satisfy me. What was the big deal?\n\n\"You mean none of you has ever tasted it?\" I asked incredulously.\n\nAgain, abnegations all around. This was a surprise to me. I'd been with many men who enjoyed kissing me after I sucked the spunk out of them. They certainly weren't gay. They appreciated me and found kissing my slightly slimy mouth exciting. I enjoyed what I'd done. They enjoyed what I'd done. What's not to like?\n\nBut here were nine of my fellow sales reps all protesting, in that typical locker room fashion that they were all macho men who'd never taste cum. It notched up my feistiness level.\n\n\"Well, tell you what I'll do. I dare you: I'd like to see each of you taste your own cum. If you -\" I began to challenge them, but was cut off.\n\n\"Yeah, right!\" and \"When hell freezes over!\" were the two most common responses to that.\n\n\"So it's all right, even sexy, for a woman to drink semen, but you can't?\" I asked.\n\nBig Mike responded, \"It's in a guy's genes. Only babes get off on cum - and fags.\"\n\nSome of the more reserved were feeling a little uncomfortable with the direction the conversation had taken and were nervously looking for other things in the living room to occupy themselves.\n\nIn the awkward silence, as I was shaking my head in disbelief, Stephen blurted out, \"Deep Throat!\"\n\nStephen's interjection captivated us all. (In fact, as far as attention getters go, \"Deep Throat!\" has got to be up there with \"Watch out!\" or \"Heads up!\") He continued, still enrapt in his laptop, \"It's a drink: a third of an ounce of rum, a third of an ounce of Tia Maria, a third of an ounce of vodka. Mix into a shot glass and top with whipped cream. Drink it without using your hands!\"\n\nIt was a perfect diversion and brought the tension down a peg. We all considered this bit of edification in silence momentarily. It dawned on my alcohol-besotted brain that the whole cum tasting discussion had made them quite uncomfortable. This gave them something exciting on which to focus, forgetting about my cum tasting dare.\n\nEventually, of course, someone asked, \"So, Lisa, can you deep throat?\"\n\nAs I looked around the room I failed to see a face that was uninterested in the answer to this question. Nine men were staring at my mouth and getting aroused thinking about my throat. Is this a crazy world or what?\n\nOn the plus side, we were all drunk (always a valid excuse), I was away from my home town, and among coworkers who would all keep things between us, just between us.\n\nThen, there was my love of semen. I had spent years learning how to get the most semen out of a man's equipment. In fact, my command of oral techniques rivaled Demosthenes. And, deep throating a man always produced quite impressive and copious orgasms.\n\nThere's an old joke that tells of a woman trying to appear virginal (I told you it was an old joke.) on the first night of her second marriage: \"She yells it hurts and he's got to tie his feet to the bedpost so he doesn't fall in and drown.\" That, to the good fortune of many of my dates, is the story of my throat. I take pride is saying I've not met a cock I couldn't.\n\nMy panties were now wet, I realized, as my hand almost started to move between my legs. I had this feeling I was heading into uncharted territory. I'd had some experience with more than one man at a time, but never as many as this!\n\n\"This broad could never deep throat me,\" said Big Mike.\n\n\"I'll bet she could deep throat anyone here,\" someone said. I was unsure if he was sticking up for me - or just sticking up.\n\n\"OK. You assholes fuck her face,\" added Big Mike. \"You can warm her up for me. I'll go last. She'll never deep throat me!\"\n\n\"Whoa, whoa, gentlemen. Can't a girl get a word in edgewise?\" I asked.\n\nEven I was amazed at my internal conflict. On the one hand I had the opportunity to drink the cum - once, maybe twice - from nine guys. Men I generally trusted and felt OK with, except for Mike, of course. But, the thought of licking nine cocks and playing with all that cum excited me.\n\nOn the other hand, I was still a bit ticked off about their lack of confession or even interest in tasting semen. I mean if they had admitted that they'd tasted it, even years ago, I would have been OK with it. But, swearing that they'd never even tried it - and Big Mike's \"it's a chick thing\" - just got my goat!\n\nA minute or two passed. I became concerned that none of them had taken a breath for some time. Plus, they all looked so stupid with their mouths wide open. I was afraid they'd start to drool onto Judy's carpet.\n\n\"I'll tell you what,\" I said confidently. \"I'll bet you I can deep throat everyone in this room.\"\n\nFinally, a chorus of respiration followed by quite a few \"Oh yeahs!\"\n\n\"First, though\" I continued, \"there are ground rules.\"\n\nBlank looks, my lips the center of attention.\n\n\"I've found in my escapades that most men enjoy, no, take delight in a tight feeling at the base of their cocks during sex and especially when they come. They seem to enjoy the feeling of a ring of pressure, making an OK symbol with a thumb and forefinger, at the base of their cocks during a deep throat session.\n\n\"And, I don't particularly like the hair tickling my nose.\" Still they just stared, but at least they were breathing. \"When you've got a cock in your throat it's awfully hard to pull your lips over your teeth to provide that same base pressure, at least it is for me. Plus, I'm sure you don't want my teeth scratching such a tender spot!\"\n\nI couldn't believe I had just said this to my coworkers. These were subtleties I rarely told anyone, much less men with whom I'd never been intimate.\n\n\"So, first I get the 'OK exemption.' I will deep throat everyone here down to my fingers around the base of your cock.\n\n\"But - and this is a big 'but' - if I can deep throat you, you have to taste your cum. If I can't, I swallow. That's the rule. Take it or leave it.\"\n\nI loved this idea. It was a win-win for me. If I deep throat them, I get to taste and play with their cum. I'm good with that! If I can't deep throat them, I get to suck on them anyway and get to drink their cum. I'm good with that too. The cool thing will be watching these cum cringing cads cower.\n\nThere was a sea of protest. No one wanted to taste his cum. I explained I'd just dribble it on top of a Cum Shot (I was sure Big Mike would have every alcoholic beverage an average bar would), and they could shoot it. No big deal.\n\nThere were continued protests. I subtly explained that if they were such big men then I just wouldn't be able to deep throat them and they wouldn't have to drink their cum.\n\n\"Don't you want to know what you taste like? Why give women all the pleasure of drinking your delicious syrup?\" I asked, licking my lips slowly.\n\nThere was a round of negative replies, but I sensed a change in the atmosphere when I heard some good-natured joshing.\n\n\"Well, except for Jeff. He shares equally with his wife and his caddy!\" one said.\n\n\"Yeah, you're one to talk, Mr. I-can-suck-my-own-dick.\"\n\nThat's something I'd always wanted to see, I thought to myself.\n\n\"Hey, I told you that in confidence.\"\n\nDrunken laughter ensued. But, I wanted my cum. In an effort to get everyone back on track with my scheme I got up, walked over the dinning room table, took a thin pillow from a chair, came back and threw it on the floor in the middle of the living room.\n\nThe suit I'd been wearing all day was already wrinkled. What the hell, I thought. I got down on the pillow, put my legs under me and sat back on my feet.\n\nEveryone became very quiet, the reality of a woman actually offering not just to suck their cocks, but to deep throat them, tangible. And except for a bit of alcohol induced swaying no one moved a muscle.\n\nIf I can paraphrase from the heroic myths of the great legends: A girl's gotta do what a girl's gotta do.\n\nI slowly and concurrently tilted my head back just slightly and, looking up at the ceiling, opened my mouth.\n\nContinued staring from the crowd.\n\nNow for the coup de grace. I even more slowly stuck my tongue out and down my chin.\n\nNine men as if on cue adjusted their slacks. I knew I had them now.\n\nJust for fun I made a lapping movement with my outstretched tongue, like a kitten lapping up milk - or me licking a dick.\n\nJeff, opting to be my first challenge, stood up as though in a trance, walked over to me, and unzipped his trousers.\n\n\"You'd better start making a round of Cum Shots, unless you want to kiss me and I'll just let it slide from my mouth to yours,\" I said to the crowd while reaching up to get Jeff's cock out of the confines of his pants. I added, \"If anyone refuses to drink his cum, I stop. Game over.\n\n\"Think about it, gentlemen, I'm putting my money where my mouth is. How about you? Anyone think he's too large for little Lisa's larynx?\"\n\nAnd with that taunt I made the OK symbol, showed it to the room, and then slid the \"O\" over the head of Jeff's cock, slowly letting it get down to the base. Of course my hands are rather small so I wasn't able to keep the OK a complete circle, but no one quibbled on that.\n\nThere was a drop of pre-cum staring at me and I couldn't stop myself from darting out my tongue, temporarily leaving his slit empty, savoring the mild taste in the process.\n\n\"Are we agreed? Has any of you been deep throated? Curious to know what it feels like? I'm told it's amazing.\"\n\nWith that last tease I took the head of Jeff's quite handsome cock in my mouth, swirling my tongue around it for a minute. Purposely allowing a bit of saliva to build up in my mouth I brought it out again, leaving a little string of pre-cum laden saliva hanging between my tongue and his cock.\n\nBig Mike spoke up, \"Well, I'm not worried about tasting mine. The bitch'll never get me down. No one ever has. No one ever will.\"\n\nWhat a nasty bastard, I thought. I wish someone would just deck him one day. How does his wife stand him?\n\nDetermined not to show my technique until I had the full ennead in concurrence, I again looked around the room of men squirming, physically and mentally. Still holding my OK at the base of Jeff's cock, I again put my head back and pointed to my throat.\n\nThat did the trick. Every one of them took out his cock and began to stroke himself.\n\n\"I see that you've decided to meet my challenge. Can I get you to confirm that, all of you?\"\n\nAfter each one agreed, I said, \"Would you mind making nine Cum Shots, Mikey? Just in case I win?\"\n\nBig Mike laughed, reiterating, \"Never has, cunt, never will.\"\n\nBoy, I was really hating this guy!\n\nBut, he put down what looked to be a very good sized, semi-hard dick and waddled over to the bar. And as he got out a bunch of shot glasses and three bottles of liquor, I returned to running my tongue up and down Jeff's cock. While everyone watched my ministrations I kept an eye on Big Mike. It seemed like he actually made up all the requisite shot glasses. I was pleased, though my conflict continued. I wanted to have my cock and eat it, too.\n\nWell, not this time. There'll be others, I consoled myself, licking Jeff's balls.\n\nAs he was now rock hard, I began to focus more seriously on Jeff's cock. I pushed the others out of my mind and assessed the situation before me. He was pretty average sized and I was thankful for that. I'd deep throated enough guys to know that no one had ever been too long for me, but there had been a small number that were just too wide. Jeff was going to be a piece of cake, but why spoil the fun?\n\nWith my other hand I grabbed his butt cheek and pulled him deeper into my mouth, holding him there for a time. I ran him out again, maintaining the layer of saliva over his cock, my tongue and my lips.\n\n\"Little dick,\" Big Mike said. \"Any bitch could deep throat that weenie.\"\n\nWhat was his problem? Why was he so mean?\n\nFocus, I told myself, focus.\n\nI pulled him into my mouth again and slowly brought his cock to the back. I paused to look around the room. A few good-sized dicks were rearing their lovely heads but so far I hadn't seen anything I couldn't handle.\n\nReturning to Jeff, I saw that there was now just and inch or so between my lips and my fingers at his base. Jeff moaned and I briefly feared that he'd come before I got him down. I glanced up. I saw that he was under control and just enjoying my technique. With that I easily pushed him down my throat and my lips landed upon my fingers.\n\nJeff made a noise somewhere between a cry and a groan. It was rewarding to hear my work appreciated. I always liked that sound uniquely made by men engulfed in my gorge.\n\nAs best I could I looked around the room and saw every eye staring at my lips and the fact that Jeff's cock was no longer visible.\n\n\"That's it for you, turd,\" Big Mike said. \"You gonna turn queer?\"\n\nIf I were not currently engaged with a cock down my throat I would have slapped him upside the head. But I was focusing on the task at throat. I slowly brought the cock out about two inches and, without stopping, went back down on it repeatedly, all the way to my fingers. Each time I pushed the OK made with my fingers harder on the base and each time Jeff reacted with that same cry-groan.\n\nThough I know men usually like rapid stroking motion, there's something about a deep throat that is different. The feeling is so tight all along the shaft that, given a reasonable state of arousal (and that's an important condition), rapid movement may not be required. My head was so full of alcohol I didn't think I was quite in the mood for a rapid in and out motion at least for the nonce.\n\nMy slow but steady in and out movements were having the desired effect and I could just tell that Jeff was ready to shoot. As I started to pull him out I took my hand that was on his butt and made another OK around the base, just next to my other hand's extant one. Then as I pulled back I slid that hand up, just behind my lips. As I maintained at least half of the cock in my mouth, I used the new OK, nicely lubricated, to rub the exposed shaft between my lips and the OK at the base.",
        "In less than a minute we had lift off. Now, in my experience there is rarely any relationship between cock size and cum volume, much as logic might dictate to the contrary. It's just as much an old wives' tale as that of body, nose, or hand size being in some way related to cock size. Go figure.\n\nBut I was pleasantly surprised by the very commendable volume of semen that was now quickly filling my mouth. Jeff was OK by me. In fact, though I was not often interested in anal sex, I suddenly thought how nice it would feel, once I was well lubed, clean and relaxed, to have this nicely shaped, smooth, and relatively slender cock sliding in and out of my ass. I'd have to follow up on this, I thought to myself. Now, where is my day planner?\n\nSometimes alcohol and the thought of sucking eight more cocks can really make one dissociate!\n\nAbruptly realizing that I was about to swallow the warm, delicious fluid washing around my mouth, I saw the need to concentrate on the business at hand, as it were. As Jeff had now finished and my mouth was almost completely full I enjoyed the feel of his cock rapidly shrinking. They're always so cute when they do that.\n\nLetting his now shrunken cock fall from my mouth I closed it to retain the precious liquid. Now that I'd done my first one, I realized this was going to be a piece of cake. This gave me the opportunity to savor the taste of Jeff's cum. I inhaled through my nose and swirled the cum around, over and under my tongue, enhancing its volume with some of my own saliva. The wonderful semen finally made contact with the right taste buds and, realizing that my clitoris had probably been throbbing for the past ten minutes, I had a brief, but delightful orgasm.\n\nLadies, if you can't have a clitoral, have an oral. That should be put on a sampler!\n\nSo, there we were at the point of no return. Was Jeff going to fish or cut bait, bite the bullet, and take his medicine like a man? Would he be eating humble pie? Or was he going to look a gift horse in the mouth? (I love those adages, but I think it's that whole oral thing!)\n\nI looked up at Jeff who was now deeply concentrating on what had just happened and its implications. Looking next around the room I realized no one else cared a whit about Jeff or his predicament. To a man they just wanted to experience disappearing down my throat just as Jeff had, cum tasting notwithstanding. So much for collegial support: this was more every man for himself.\n\n\"Hey, shrimp, you lose!\" always the nurturer, Big Mike laughed and handed me one of the shot glasses. I looked up at Jeff who goofily smiled back. He seemed fine and nodded, indicating that he'd keep his end of the bargain.\n\nI brought the large shot glass up to my lips, but they were reluctant to relinquish their prize. Since it was pretty full with the liqueurs already in place - the non-DNA parts of a Cum Shot - I was only able to release a small percentage of the delicious white juice in my mouth. That was fine, as it meant more for me. I finished allowing the semen to slowly slide down my slippery lip, filling the glass to the rim, and handed it to him.\n\nJeff took the glass and just stared at it, seemingly trying to get the nerve to drink it. Realizing he needed some assistance, I stood up, facing him. I smiled at him as I reached down and caressed his now soft cock. With my mouth still full of the remainder of his cum, I smiled and said with difficulty, \"Do it and I'll do you again later.\"\n\nThough a small amount of his cum ran down my chin, I swallowed everything in one gulp, just as Jeff picked up the shot and downed it. He quickly shook his head and shrugged his shoulders in disgust (I'll never understand guys! What's not to love?), making a grimace and frowning. I smiled supportively as everyone applauded with a few whistles and whoops. What a crew!\n\nI won't go into all the detail, but that's pretty much the way the next hour or two went. I didn't get the chance to preview everyone, but as I'd start sucking one of them I tried to see who or at least what was going to be coming next. From the look of it, I was adroitly going to handle them all. But, I was surprised at the variety: short ones, long ones, wide ones, and skinny ones. Not at all like in the movies.\n\nMy throat was getting a workout, but everyone was gentle and let me work them at my own pace. Some needed more stroking; others just loved the throat action itself. Three of them wanted essentially to fuck my face (Though descriptive and precise, I dislike that expression.) The alcohol had made me pretty loose and I was able to move my head rapidly with their cocks buried deep in my throat, emulating intercourse. Isn't the body amazing?\n\nThey'd come. They'd swallow. I'd swallow. I'd come. Cum Shots - and grimaces - all around.\n\nThrough number seven my OK and my mouth had the desired effect. I worked my magic throat. Now you see it, now you don't. Each one was appreciative and downed his cum shots with no arguments. One actually admitted that it \"didn't taste bad at all.\" Don't you just love guys?\n\nThe last two were surprises and if I hadn't known better I would have thought they had arranged this. Walking towards me was number eight, my old buddy Harvey. He'd come up with another ditty which he recited as he flaunted his good sized erection in my direction.\n\n\"She's taken seven\nAll saying 'twas heaven.\nAnd all did squirm\nBut ate their sperm.\n\nThough she'll try \nTo throat this demon\nI know that I\nWon't taste my semen.\"\n\nI'd forgotten about the night I watched him masturbating, a favorite pastime of mine. He was at least nine inches, maybe more. Fortunately, he was pretty normal in terms of his circumference so I was able to deep throat him, but not with the ease that I'd experienced with the others.\n\nHe was nonplussed by my feat, rendered unexpectedly silent. Then he surprised me when, rather than letting me ooze the cum into the shot glass, he kissed me. The semen swap was a sensory delight and I loved caressing his deft tongue with my cum-laden one. I almost swooned as I came right on the spot!\n\nNow for Mr. Mike. Big Mike had saved himself for last, never saying anything positive throughout the evening. Whereas the others had offered encouragement to their \"partners in cum\" and made it known they were thoroughly in thrall of my thrilling throat, no compliments on either any of the guys' equipment or on my capabilities were forthcoming from Big Mike, the creep.\n\nBy now my knees were killing me and my feet kept falling asleep. So, after Harvey I ceded the floor and went to sit on Judy's new chair, the only empty seat. Mike had been drinking even more than anyone else (We all still had to drive back to the hotel.), and I don't think he realized that I was on the \"twill or toile or twat\" chair.\n\nAs he lumbered towards me, two things struck me. First, he'd had way too much to drink. He was having a hard time remaining vertical and needed to go from one piece of furniture to another, like walking down an airplane aisle during turbulence.\n\nThe other thing that struck me was that I now saw why he had acquired his moniker. Calling him Big was small credit. He was huge. I don't think I'd ever seen such a cock. It was immense, red, thick, and the head seemed to be the size of an apple. At first I thought it was prosthetic, something he was just using to play with my mind. But as he came up and put a hand on each wing of \"the chair\" I was face to face with an ungainly (just like its owner), dripping, and huge dick!\n\nSince I'd never seen one this big I had no idea if I could deep throat it. From just looking at it I didn't think I could even get the head in my mouth. Compounding my apprehension was the soreness in my jaw from being the evening's main event.\n\n(Though I digress, I'm telling the story so I get to share this learning experience: For those of you who've never done it or even thought about it, sucking a cock means opening up your mouth, extending your lower jaw and keeping it there for a long time (if you're serious), not a normal position for a mouth. Throw in the care to keep hard teeth behind soft lips and even an oral aficionada like myself will get a tender jaw from a night of blowjobs with one man. Put eight guys in a row in an hour in your mouth and anyone's jaw would be somewhat strained! Deep throating adds a further dimension to the experience. All right, I'm done and glad I got that off my chest. Thank you for your attention to this \"privates\" service announcement.)\n\nI pondered this as I licked the delicious (See? Even ugly, hateful men can have delicious juices.) pre-cum dripping off his head. If I couldn't deep throat him I get to drink another mouthful of cum. That would at the very least be pleasant. (I really can't get enough of this stuff.) If I could deep throat him I'd get to taste his cum and swallow part of it, but then I'd get the satisfaction of seeing him drink his own cum. That was something he would hate and was sure wasn't going to happen. I placed a quick value on these choices as I weighed my decision to try or not. Then Big Mike opened his nasty mouth and he made up my mind for me.\n\n\"Come on, cunt, I'm pretty drunk. Hurry up and suck me off,\" he slurred. Then he belched. \"You'll never deep throat me.\"\n\nLooking around at those still awake I could see each one cringe at Mike's foul mouth. All of them attempted to defend me, but a quick \"Shut the fuck up; it's my house and I'll say whatever the hell I want.\" silenced my supporters.\n\nAt this point each one of them, save Big Mike, made the OK sign with his fingers. I could feel and see the support and loved them all for it.\n\nI was going to see this guy eat his own cum. Period.\n\nI licked around the head, licking my lips with the saliva that was left. Then I got him as wet as I could, licking up and down the shaft. It amazed me how much shaft there was. It felt like it took twice as long to lick from top to bottom as any of the others. Plus, looking at his abdomen with my mouth encircling his head was like watching a movie, looking down the barrel of a rifle - or looking down from the tip of a missile!\n\nOne can only do what one can. After thoroughly wetting his entire salami, I slowly made OK signs with both hands so that all my mates could see. Then I put them both at the base of Mike's colossal cock. It put things in perspective and gave me my target. I relaxed my lower jaw and took his head in my mouth.\n\nSo far, so good.\n\nLetting it just sit there I took one hand off his base and used it to massage his massive member. There was no way my thumb and forefinger could even fit around this thing so I simply made sure to keep up the pressure at the base and to work my hand up and down the shaft. Eventually I felt his head butting up against the back of my mouth with more inches than I could even imagine still between my lips and my OK fingers.\n\n\"You're not even close, bitch,\" he said.\n\nBoy, do I hate this guy, I thought to myself. And I'm sucking his cock, why?\n\nI had to remind myself: Don't think about it. Do your thing and get him to do something he will detest doing.\n\nI forced his cock down past the beginning of my throat, taking a moment to get accustomed to the intrusion. My gag reflex was under control, but his girth was massive. I pushed him further back into my throat and paused again. No one had ever been this deep, that I knew. I had worked on my technique for years and was confident that I could deep throat any man, but Mike was not human.\n\nChanging the angle a little by leaning forward I managed to lower my jaw a bit more until he was aiming more directly down my gullet. Slowly I was able to get him further down. Then I needed to bring him back up to get some relief. My jaw was killing me. I was ready to say \"uncle.\"\n\n\"Never can, never will.\"\n\nThat did it! I was gonna get this guy or barf trying. I reached my other hand around his butt and pushed him back into my mouth. He stuck at the top of my throat and, taking a deep breath, I diligently forced him slowly but inexorably down, down, down into my esophagus. I didn't know I could do this - never having done it.\n\nEventually, the difficult work got his cock so far down my throat that my lips were touching my OK. And OK was exactly how I was feeling. I got him!\n\nI held him there and could feel the amazement around the room. Everyone, I realized, was cheering me on, standing all around Mike and me.\n\nThis felt so good that I needed a slam-dunk, a topper to put this turkey in his place. I couldn't move my head at all, but my peripheral vision told me that Big Mike was staring slack-jawed down at me. Amazed, as was everyone else, that I had done it. To put the final nail in this big man's coffin, I took my fingers away from the base and forced him almost another inch further down my throat, my teeth clenching around the base of his cock, his scraggly hair tickling my nose. I loved every inch of it, not for the pleasure - it was terribly uncomfortable bordering on painful - but because of what I had just done to this asshole.\n\nAfter making minor indentations to his cock's base with my teeth, nothing permanent of course, but he'd see my mark for a day or two, I slowly let his monster out of my mouth, replacing my teeth at the base with my OK fingers. I took my other hand and began to stroke his behemoth firmly with it. I clenched the shaft tightly just retaining his head in my mouth, forcing my tongue back and forth under the head to make him cum as soon as possible, given his drunken state.\n\nAfter several minutes of my rapidly tiring expertise Big Mike displayed a brief but diverse demonstration of multitasking. He concurrently bellowed in a long, rather melismatic euphony with, it seemed, support from his diaphragm. He shot out an enormous, vigorous, and lengthy stream of cum into my mouth mimicking a fire hose.\n\nAnd he farted. The guy actually farted while coming in my mouth. What an asshole! But, I forced myself to stay focused on the literally mouth-watering semen saturating my mouth. So, as the eight others in the room were complaining about and criticizing his odious odor, Mike just kept shooting and shooting and shooting.\n\nI may have to revise my earlier statement about size and volume. Just as Big Mike's size was larger than any other cock I've known, I don't think anyone has ever come in my mouth as much as he did. There was so much of it that even after one swallow, my mouth filled completely. I had to fully remove his cock from my mouth, just maintaining my lips at the sizeable slit to capture and keep it all.\n\nWhat really ticked me off was this: it tasted wonderful. It was thick, slimy, warm, rich, creamy, salty, and absolutely delicious. (I should write ad copy.) How's that for irony? I detested this man. Yet, he's got the largest cock and can shoot the most delectable cum in more volume than I've ever seen even with my depth of experience. I needed to contact Merriam-Webster to update the entry for \"paradox.\"\n\nReturning to reality: What a tableau! Not quite Renoir's Luncheon of the Boating Party. We were all still slightly sick from Big Mike's gaseous emanation, but I was in cum heaven. I began to have such a large cum taste orgasm that I didn't even feel the soreness in my jaw or the residual discomfort in my throat. All the guys were amazed at my seemingly spontaneous orgasm. I think that few men have ever been with women who can come from cum. We are out there, but rare indeed.\n\nMy orgasm lasted close to a minute and exhausted me, just like everything else that had happened that evening.\n\nI pulled my head back after letting go of Mike's gargantuan member, smiling in close-lipped fashion at the thud sound it made when hitting his thigh. I looked up with squirrel cheeks filled choc-a-bloc with savory semen. It appeared that Mike was still thinking about what had just happened to him and what his obligation now was.\n\nHe looked around him and saw eight men who had all done their part of this little arrangement. Each looking at him, daring him to renege on the plan.\n\nMike was attempting to stare them all down, but his eyes seemed to be rolling in his head. I decided to get up and go find the last Cum Shot. Big Mike remained still, holding onto the wings of the chair as I snuck out from under him. I walked over and picked up the last premixed glass.\n\nI stopped, contemplating the volume of cum I had in my mouth and the pitifully small amount of room atop the Cum Shot. Nope, he needs more of his medicine, I remember thinking. There it was: a brandy snifter would do the trick. I brought it over to the group, still staring at Big Mike who was reeling a bit more now. As all the guys turned towards me I slowly - and somewhat reluctantly - dribbled most of the tasty cum into the brandy snifter. It took quite some time and looked like it filled almost half the glass. Of course, I saved some for myself, swilling it a bit like mouthwash, finally swallowing, savoring the delicious long-lasting aftertaste.\n\n\"Come on, Mr. Never-can-never-will, take your medicine,\" I challenged him.\n\nEveryone shouted in agreement, acknowledging that they'd done it, too. Though it was quite late by now, I think they were all ready for this contest to be finally over and still eagerly anticipating their promised subsequent blowjobs. And, with the exciting potential for some clitoral attention, I was similarly anticipating providing them.\n\nIt was then that the unexpected happened. Big Mike looked down at the floor, still holding onto the chair, and in the same extraordinarily copious manner as he'd ejaculated, with almost no sound, regurgitated what seemed to be quarts of putrescence. Little sound, no groan, no movement. He just let loose half a gallon directly from somewhere deep inside him.\n\nAll, and I mean all, over \"the chair.\"\n\nDumbstruck, we stared in silence. Mike was still vertical, but that seemed quite temporary.\n\nIn the dead quiet, good old Harvey interposed this bit of spontaneous creativity:\n\n\"Never can, never will.\nHe'd never known Lisa's skill.\nAnd surely adding to her thrill,\nBig Mike barfed on Judy's twill.\"\n\n<P align=center>* * *</P>\n\nWe were all still laughing and giving the OK sign when we arrived back at the hotel. Everyone was so tired; no one was even interested in another blowjob that night.\n\nI did, however, have the good fortune to be cradling the aromatic brandy snifter in my lap."
    ],
    "authorname": "Global Carol",
    "tags": [
        "deepthroat",
        "deep throat",
        "cum",
        "cumshot",
        "cum shot"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/whats-in-a-cum-shot"
}