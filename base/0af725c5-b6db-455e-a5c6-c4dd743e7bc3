{
    "title": "Hunting the Hunter Ch. 06",
    "pages": [
        "Dear readers: \n\nI've decided to post what I have thus far, in order to mitigate the effects of that rather blatant 'cliffhanger' ending of the last post. This isn't especially short, but it isn't the length of the average 'Hunter' installment, so if you feel dissatisfied, I apologize, but it was this or making you wait that much longer.\n\nSo, bearing all this in mind, and remembering how very much I adore you...\n\nWHEN LAST WE LEFT OUR INTREPID HEROES:\n\n****\n\n\"At least I have moral standards, you treacherous snake.\"\n\n\"And I so hope they comfort you when you die, sad and alone.\"\n\nFeric had simply stood watching, agape, as the strange scene played out before him, but now it was just too much. The last thing he needed was attention drawn to them by her getting into a fist fight in the middle of the street...and people were starting to stop and stare. No doubt they were hoping to get a vicarious thrill out of seeing two attractive females trying to rip each others hair out in the mud. \n\nHe knew better though. Ina would just clock her. Or set her on fire. That wouldn't be pretty. But before he could intervene and pull them apart, the two women suddenly lunged towards each other and...hugged?\n\n* * * *\n\n\"Desi!\"\n\nInanna practically squealed as she wrapped her arms around Desdemona's waist, lifting the slightly taller woman off the ground in a tight bear hug. Des was laughing and cupped Inanna's face in her hands and peppered her cheeks with kisses when she wasn't too busy hugging her back. Ina eventually pulled back with a grin, gripping the Breton by the shoulders as she looked her friend over. \"Woman, you look even younger than the last time I saw you...\"\n\nDes chuckled and tossed a few wavy locks of silky chestnut hair back over one shoulder with a sly, flirtatious grin. \"I keep telling you the Telvanni have their uses...I'm not the masochist you seem to think I am.\" Ina returned the grin.\n\n\"No, just a 'gold-digging whore', remember?\" Des giggled at that and slipped her arm through Inanna's. \n\n\"Don't tell me you really Are still giving it away for free?\"\n\n\"Give? Like hell. If I see something I want I take it.\"\n\n\"Speaking of which\" She drawled in a low whisper, \"...I couldn't help but notice the cool drink with the granite jaw and the FAN-tastic arse.\" \n\nInanna watched as those devious, sharp eyes zeroed in on the man still standing behind her...and still looking very confused, she noted as she turned her own eyes in the same direction. Crap. \n\n\"He's not loaded, or a psycho wizard, so leave him alone.\" She whispered harshly. Des started, then, with a very evil grin, glanced back at her with a flutter of lashes.\n\n\"Chere, I know I like my men tall, dark, and Obscenely rich, but I am open minded. Also, most of them are sociopaths, not psychotic...there's a marked difference, thank you very kindly. I do have some standards.\" \n\n\"Bull...and stop looking at me like you think you know something. You don't.\"\n\n\"You Are allowed to call dibs you know. If it's important to you, that is.\" Still, that knowing grin remained. Bitch. She could be such a...a...bitch. She really was like a sister...and that was probably why no one got under her skin quite like Des could. Ina still hadn't figured out how she did it. Of course on the flip side, few people could be quite as much fun.\n\nShe was going to respond but Feric was suddenly before them and Des was pulling away to offer him her hand like some damned courtier. To Inanna's intense satisfaction, he took a minute to stare at it in confusion before accepting it, hesitantly, and giving her a polite nod. \"Feric, this is Desdemona Doucet. My sister.\" His mildly befuddled expression became a deeply befuddled one as he looked between them.\n\n\"Really? I wouldn't have guessed.\"\n\nDesdemona laughed again, pulling her hand away and patting Ina's arm with it. \"Not by birth, obviously, but by circumstances quite beyond our control...but then you can't choose your family, can you? They are thrust upon us by fate's fickle hand, and we mere mortals can do naught but acquiesce and endure her cruelty as best we are able.\"\n\nAgain with the befuddlement.\n\n\"Bard.\" Inanna offered dryly.\n\n\"Ah.\" He seemed to gather himself up then, and right before her eyes mutated into the 'slick charmer' version of himself she'd seen him pull out for most of her other acquaintances. Like a conjuror's trick\u2014Tada!. \"Forgive me,\" he smiled, \"I was momentarily thrown off by the unusual exchange earlier. It's a pleasure to meet you.\"\n\n\"The pleasure is all mine, I assure you.\" She cooed.\n\n\"So, you just arrived?\" Ina interrupted curtly, and she hoped, discouragingly. She wasn't normally the possessive type...but dammit, she saw him first. Maybe she should just brand her initials on his ass and put an end to it. 'Cause Des was right about one thing...it was pretty fantastic. The thought brought a faint curling smile to her lips. \n\nThey both turned to her and Des nodded. \n\n\"Indeed. But, in accord with the customs of your illustrious people, I didn't come empty handed. I brought you a present.\"\n\n\"Oh, goody.\"\n\n\"Don't be acidic dear, you'll like it, trust me.\" She turned and waved to someone up the street. Inanna's eyes followed, then widened.\n\n\"You're kidding me...\"\n\nFeric watched as the two men he'd noticed earlier joined them, the dark elf in the lead, and with a smile slowly creeping across his harsh, angular features. Features made that much more unnerving by a series of jagged lines tattooed across his forehead and temples. \n\n\"Hassour!\" She cried, striding forward to meet him. Feric half expected her to jump him like she had the woman, but to his surprise she came to stop in front of him and lay her hand over her heart and gave what looked like a rather formal bow, one which the foreign looking Dunmer returned. They exchanged a few words in Dunmeri as the Khajiit came to join Desdemona. \n\n\"Feric, this is Dar'Basha, a friend from Morrowind, and my companion. Dar'Basha, this is Feric. I'm afraid I have precious little else to offer about either of you. She smiled and flicked her hand apologetically with a shrug. The Khajiit bowed. \"A pleasure. As she said, I am a friend of Muthsera Doucet,\" he gestured to Desdemona, \"I presume you are an acquaintance of her 'sister'?\"\n\n\"Ah, yes. How do you do.\" \n\nThe Khajiit tipped his head. \"I am well, sir.\" The Khajiit was certainly polite enough, though politic and vague, but Feric had to admit that his presence made him rather uneasy. He was not unaware of the irony of that discomfort, but the fact of the matter was, his only experience with the species had been as hunters. But then, if it hadn't been for Inanna, he could have said the same thing about the Dunmer. \n\nIt also didn't help that he was still feeling a might thrown and uneasy about what had passed between Ina and the Breton woman, and once again had to wonder why all of her supposed friends seemed more like enemies. Though, he considered, she and the other dark elf seemed to be on more traditionally friendly terms, if he could go by tone of voice alone.\n\nAs if on cue, the two finally joined them. Introductions were made, and it turned out that the Mer was apparently a close cousin of hers and a fellow Ashlander. He was passing in the same direction as Desdemona and so had decided to accompany her to see Inanna before turning north to his own business. \n\nDesdemona immediately suggested they all retire to the inn up the road where she was staying since she'd not eaten yet, but Ina shook her head. \"Can't. Not there anyway.\"\n\n\"Why not? It looked the least shady of the two.\"\n\n\"Bingo.\"\n\nThe Breton arched an accusatory brow. \"What did you do?\" Feric couldn't help but chuckle, if silently, at the strange mix of guileless innocence and unrepentant pride that came across Ina's face.\n\n\"Nothing.\"\n\nEvery eye remained on her. \"Nothing...that they didn't completely deserve....\" she eyed them back defiantly...then wilted. \"I don't want to talk about it. Besides, the company is better at Dervera's. She's from Morrowind.\" \n\nThat seemed to settle it for everyone and after a casual shrug or two, they found themselves making their way to an unassuming looking building with a painted sign which announced from a distance that they were approaching \"Newlands Lodge.\" \n\nIna was chatting away in Dunmeri with her cousin, and the other two were doing much the same, leaving Feric room to fall back a little. His sense of unease grew as they neared the lodge, and as he saw a drunken looking Dunmer propped out in front of the building. Then it multiplied itself tenfold as a group of Orc came out from around the other side of the Inn and entered...but not before giving them and everyone else in the vicinity a very unwelcoming glare. \n\nHis gut was sending him messages again, but this time his senses were in full agreement. Hell.\n\nThey were filing through the door and Feric was too caught up in preparing himself for the worst to notice that Ina had dropped back and was waiting to stop him at the door. Her restraining hand on his arm made him start slightly.\n\nShe was frowning. \"You ok, Serjo?\" She whispered. He was about to wave her off with a 'fine', but changed his mind when he caught the concerned glint in her eye.\n\n\"A little thrown. That's all. It's...been a lot to take in.\" Her expression shifted, softened.\n\n\"Yeah...sorry about that. I get all worked up sometimes, get enthusiastic. If I get to be too much, just whack me upside the head.\" She grinned. \"No more new stuff, or people...I promise...that I can help...obviously.\" Her hand slid down over his, running her thumb over the back of it before pulling away.\n\nHe grinned crookedly back at her. \"I'll believe it when I see it. By the way...who are they?\" They had entered the Inn proper and he nodded toward a group of Orcs who had taken up most of the space around the bar, looking quite comfortable with themselves. The remaining people in the room were situated around the edges, hunched over the tables and keeping to themselves. They were mostly Dunmer and one or two who were neither Orc nor Dunmer and who were subsequently keeping their heads down and their eyes on their drinks. \n\n\"Orum gang. Bad eggs those.\" She whispered back. \"Try not to piss them off if you can help it.\" He watched the Orcs carefully out of the corner of his eye as they found a table against the wall. He immediately pulled out the chair nearest the wall and offered it to Ina, then took the one next to her, placing himself between her and the room. Of course he hadn't realized what he was doing until she cast a questioning look in his direction. \n\nScrew it, he wasn't going to feel bad about it. Instead he went back to subtly scrutinizing the group as a handsome Dunmer woman came to take their order. It was instantly apparent to him who the leader of the group was. Firmly the leader, from the looks of it. He was also scanning the room, and exuded an aura of comfortable authority. The others around him were joking and jostling one another, but every now and then they'd flick their eyes to the one in burgundy. They probably had no idea they were doing it. \n\n\"Who's the one in the burgundy doublet?\" He asked, whispering to Ina when the other three seemed suddenly occupied with arriving drinks. \n\nShe didn't miss a beat. \"Magub gro-Orum. He's one of the brothers who run the gang. People are more afraid of his younger brother...but they shouldn't be. This one actually has some fair skill with magic. I heard he trained to be a warlock or shaman in the old country. Not the kind of guy you want to piss off...but he's also more reasonable than his brother, smarter. But that isn't saying much.\" \n\n\"Alright,\" Desdemona interrupted, leaning over him slightly and brushing his arm with hers as she reached out to tap on the back of Ina's hand. \"Let's have it.\" She leaned back, brushing against him even more firmly. He didn't think much of it, seeing as how she was clearly just as much the consummate flirt Inanna was, if not more...but he Was interested in the way Ina's eyes had narrowed. \n\nHis lip twitched, but he somehow managed to keep his grin in check. Payback. He'd like to say he wasn't a jealous man...but that would be a lie. And misery loved company. \n\nHe gave Desdemona a warm smile, which she returned, before looking mildly back at Ina. Ina didn't look pleased, but the expression was gone in a flash, and was replaced by her usual playfully twisted grin. \n\n\"Have what, dear?\"\n\n\"The details, the story. What's our narrative?\" \n\n\"Our narrative?\" She cocked her brow.\n\n\"You heard me. A girl likes to know her lines before she walks on the stage dear. And it appears I've already missed the curtain call...so catch me up, would you?\"\n\nIna stared at her a moment, shrugged and cleared her throat. \"Well, Once upon a time, in a land far far away...\"\n\nDesdemona cut her off with a derisive sound. \"Please, you can do better than\u2014\"\n\n\"Woman, shut it, or you're not getting anything.\" \n\nDesdemona's lip curled slightly. She turned back to Feric with a toothy smile, her fingers brushing along his upper arm. \"Did you know that when the Bards of the Northmen begin one of their epics of the old tongue they always start with\u2014\"\n\nEveryone jumped in their seats when Inanna leapt to her feet and slammed her fist down on the table, cutting Des off and making the sparse collection of mugs and glasses tremble. Everyone in the room turned to look at her, and she returned the look with a hard one of her own, before filling the unexpected silence.\n\n\"Hwaet!\" she shouted, \"In gear-dagum, tha aethlingas....and that's as much as I remember.\" There was another, slightly longer silence. Someone across the room burst out laughing. \n\nDesdemona gestured to the still standing Ina. \"Like that. A much better opening.\" \n\nInanna crashed back into the chair and slumped.\n\n\"Ok, the plot is thus:\" she held her hands out, palm up, as if displaying something for their inspection, \"A foreign people are chased into Cyrodil by a group of mercenaries bent on hunting them down. Their motives, those of the mercenaries that is, are unknown but they are persistent...the motives of those hunted is clear and simple, survive, and when able, destroy the force which threatens them.\"\n\n\"Who's our protagonist?\"\n\nShe gestured to Feric, \"Our dashing hero, and leader of his small but stalwart band. Who, while battling the enemy met an equally dashing Dunmer, moi\" she spread her arms to indicate herself, \"who in turn has decided to help in her usual fashion.\" \n\n\"Which is what, specifically?\"\n\n\"You know...the usual. Figure out who the villain is, where they're hanging out, and hold them down while the hero gets their licks in. Oh, and thrashing everyone in need of it along the way, of course.\"\n\n\"Of course. And then, enter not quite as dashing but far more charming bard with the high class connections?\"\n\n\"Absolument, ma belle.\"\n\n\"Knowledge IS power after all...and I have more than enough to go around. So, do we know who the villain is yet?\"\n\n\"No. That's problem number one.\"\n\n\"Then this is our first project. A good plot needs a good villain. I wonder if it'll be an interesting twist, or some hackneyed stereotype. Stereotypes are easier...more obvious and there are no pesky moral dilemmas...but twists are more interesting.\" \n\n\"I really don't care, I just want to make them dead. No dilemma there.\"\n\n\"Oh that's right...you don't do the whole moral ambiguity thing do you. You just pick a side and go.\"\n\n\"This is hardly the time for That conversation, Des.\"\n\n\"Mm, Is it ever the time?\"\n\n\"Des...\"\n\n\"Right. Back to the matter at hand.\" She leaned back in her chair and fingered an errant curl of hair thoughtfully. \"How long has this been going on then?\" \n\n\"Decades.\" Feric answered.\n\n\"So they, or he, or she has access to a good deal of money. Any leads?\"\n\n\"Feric and I found one initial: D. I'm waiting for word from the guild which might give us more information. Should be any minute now.\" \n\n\"I'm going to bet whoever it is will have at least a contact in the Imperial city, if not a base. It's a centralized position with access to all the resources a growing plot needs. I'll go there first. Do you have anything set up at your own base of operations?\"\n\n\"What sort of things?\"\n\n\"I don't know: wards, traps, teleports, communication orbs...\"\n\n\"Ah, we're sort of low tech...wait, teleports?\"\n\n\"They're the newest fad back on the Azure Coast, a little tricky to set up, but the convenience! You know, you never did know how to take advantage of that sort of thing. You always just strong arm your way through a caper. Well, it doesn't matter, we can fix all that. I've picked up more than a few helpful tricks over the last few years.\" She turned and smiled at Feric, \"With your permission of course Sera.\" Before he could answer she turned to the Khajiit next to her, \"What do you think?\"\n\n\"I think, Muthsera, that it might be helpful for me to precede you as your servant and set up a household fit for a Retainer of House Telvanni. Of course there will be some talk...\"\n\n\"Hmm, yes, but when they do talk, make it Oathman rather than Retainer...I think I've earned the promotion, don't you?\" She winked and the Khajiit chuckled and bowed his head obligingly. \n\n\"As my lady wishes. I shall leave tomorrow morning. This will give me ample time to make arrangements as you prepare yourself here.\" He paused then stroked his furry cheek with the back of one hand. \"In fact, if you don't mind, I think I shall pay the outfitters a visit right now, before they close for the night.\" He stood and bowed to the table as he left. \n\n\"So, does the Imperial city sound like a plan to you Ina?\"\n\n\"I had been thinking it would be a good place for you to start.\"\n\nFeric cleared his throat and flicked his eyes toward the Orcs, two of which were sauntering over. The boss was still leaning casually at the bar, but Feric could see he was watching closely out of the corner of his eye: watching and waiting. He could feel the small hairs on his neck raise in response, and the beginnings of a rumbling growl vibrating silently in his chest. He knew from their swagger that this wasn't going to end well if he didn't establish the ranking system, and quickly. But there were too many of them, and though he knew Ina was good for a fight, he doubted the bard would be...and he couldn't tell with the other Dunmer. That left him with very few options. \n\nBesides, that wasn't what needed to happen. He could tell without even looking that they were eying him, not the others. He was the outsider and the new threat, and this was a size up. But he wasn't about to let flunkies do the sizing, that would be mistake number one. He would just have to get rid of them in order to get to their leader....but how? He felt them looming before they spoke, but said and did nothing, even as all eyes were darting toward the newcomers.\n\n\"How's our favorite little dark elf tonight?\" The one who hadn't spoken chuckled. It was a dry raspy sound, like he'd been punched one too many times in the throat. \n\nHis voice increased that impression when he did speak. \"Yeah, sugar. Why don't you bring your pretty Breton friend over to the bar for a few drinks?\" Feric noticed the Dunmer sitting across from him raised a brow, but for the most part looked neutral and unconcerned, even smiling faintly.\n\n\"Gentlemen.\" Ina's cousin smoothed dryly, his voice also gravelly though more in the way that Ina's was, like rasping quicksand. \"While I commend your taste,\" he continued, \"it's very unkind of you to deprive us of our company. Perhaps you would be so kind as to join us instead?\" \n\n\"I don't think so. Come on girl, maybe you can give us a little dance or two.\" \n\nIna smirked and was about to tell them 'some other time' when she noticed Feric's hand had formed a fist, and that he was slowly rising from his chair to turn and face them. His expression was stony, and she was filled her with uncharacteristic apprehension. Uncharacteristic for her, that is.",
        "She watched as he eyed both of the taller males. He maintained eye contact with the larger of the two, the one who'd last spoken, but tipped his head toward her. \"Ladies, if you'll excuse me, I'm going to get some air.\" \n\nThe two Orcs laughed as he left, and she watched his back with a confused frown. None of this seemed like him. First of all, he usually let this kind of stuff roll off his back...but then, he had been sizing them up since the moment he walked in. The Orcs clearly thought he'd backed down and tucked tail. That was 'what the hell' number two. She'd never seen him tuck tail, and frankly, wasn't even sure he was any more capable of it than she was. So what was he up to?\n\n\"Looks like the pretty-boy knows a real man when he sees one. Cowardly son of a bitch.\" \n\nIna bit the inside of her cheek and wondered where the softest spot of the Orc's skull was, and how well her fist would fit there. Des turned in her chair and propped her elbow up on the back of it. \"Do you have something against pretty people?\" She smiled winsomely up at them. \n\n\"Not if they're you, sugar.\"\n\n\"How charming. I suppose now you're going to tell us what a real man like Yourself can do for a pretty lady like Myself?\"\n\n\"How 'bout I do you one better, take you upstairs, and show you.\"\n\n\"Well, as tempting an offer as that is, I'm afraid my party is presently engaged in the revivifying of those indissoluble yet still fragile bonds of friendship, which tested by time and distance have suffered through misuse and now must needs have the gentle salve of quite and intimacy.\"\n\nThey stared.\n\n\"Bard.\" Ina offered with the same dry tone she'd used with Feric. Their expression cleared somewhat. \"She means to say, we're old war buddies and need a little while to catch up before we let down our hair. Maybe in a bit, eh?\"\n\nThey grunted, somewhat satisfied with the explanation, and she knew with the fact that they'd scared off the biggest male. They returned to their fold with little more than a repetition of the invite and a suggestive leer or two. \n\n\"I wish you wouldn't do that.\" Ina muttered once they were out of ear-shot.\n\n\"I just like hearing you intone the title of my profession as if it were some incurable disease.\"\n\n\"Isn't it?\"\n\n\"I would have thought after all these years the two of you would have stopped bickering like an old married couple.\" Her cousin offered with a faint smirk as he brought his cup to his lips. They both glared. Then Des smiled, her expression changing so suddenly that it bordered on unnerving.\n\n\"I do wonder how we'll get on now that we don't have to rein it in for the sake of the children.\"\n\nInanna had to chuckle at that. \"Yes, well, Feric's got enough little kids around to take care of that.\"\n\n\"A single father? How adorable.\"\n\nIna winced, glad Feric had left. \"Eh...I don't think that's the word for it. But, yes and no. The group he's trying to protect is his family\u2014 his sister has two little ones, and there's a few more they've picked up along the way. His own daughter is pretty much grown.\"\n\n\"I take it he lost his wife to these hunters?\"\n\n\"Yes, they've all lost most, if not all, of their family to them.\"\n\n\"How sad.\" Murmured Hassour.\n\n\"Indeed.\" Des agreed. \"How did you come to get tangled up in it?\"\n\n\"Randomly. I was out ruin-raiding for a client and he happened to be fighting with the hunters in the surface area of the ruins. I gave them the tip of my bow, but one of them got antsy and fired at me anyway. So I fired back and in a matter of seconds I was suddenly on a side. Not that I'm unhappy with the side I ended up on. Given the choice I would have picked it anyway...definitely the more interesting of the two.\" \n\nFeric returned a moment later with the same flinty expression as before, except Ina could help but notice the added glint in his eye as well. Des had started in with the Telvanni gossip, which Hassour seemed to find fascinating, but Inanna was too distracted by whatever was going on with Feric to pay her any attention.\n\nIt was as if he were...waiting for something.\n\nAnd then it happened. The drunk, who'd been propped up outside, burst in through the door, shouting 'fire'. And not just any fire...the Orum gang's house. Ina's eyes shot to Feric. There was that glint again. \n\n\"Door.\" He growled under his breath. It was all he said before he was on his feet and moving in the opposite direction of the Orcs, who were all vacating into the street. All but one that is...the one Feric was now standing in front of in order to physically block his escape. \n\nDoor! She jumped to her feet and got the bar up in record time. It was heavy...but that was good. Orcs were strong, and she could hear their angry voices on the other side of the thick wood slats. His back was to her, so she couldn't see if he was saying anything, and the Orc's face gave nothing away, though she thought she saw his hand twitch...which was a very very bad thing, considering his rumored skills with magic.\n\nUnfortunately she was right about the 'badness,' and the hand twitched again. She gasped and only got half a warning out before both men were both suddenly moving. Feric lashed out, almost too fast to see, grabbing and twisting the larger Orc, and propelling them both down to the ground, hard. The people still inside the bar all froze where they were, watching in fascinated horror as the two went down. \n\nThe warlock twisted his hands with another spell. \n\nIt must have been weak. Feric only grunted as he absorbed it, whatever it was, and responded with a quick fist to the temple as he got on top of the Orc. She could see Des concentrating hard in their direction, her lips still moving as if in silent prayer. 'Silent' was a good word for it since whatever she was incanting was probably helping to stifle the Warlock's abilities. \n\nIt could also be that Feric, or his people, were somewhat resistant to magica. The strong willed often were. Breton's were notorious for it. She'd like to claim it was the Merish blood lingering in their veins, but you didn't need to be a bard to see the flaw in that logic. Altmer were notoriously vulnerable to magic, so while they were great sorcerers, they made for really shitty battlemages....but that had absolutely nothing to do with anything. Right now it was Feric, not some boney Altmer, that she was watching with fearful apprehension as she listened to the angry voices grow louder outside. They were a good deal angrier now that they'd realized all was not as it seemed and that they could no longer get to their leader. \n\nShe was torn between her desire to help, to keep Feric safe, and the knowledge that this was not her game. She'd done this enough to know that unless one knew the whole score, one was to keep their interfering hands to themselves. After all, he'd done the same for her. It was only fair that she played her part and let him do his thing, trusting that he did in fact know what he was doing, even if she hadn't the foggiest. \n\nStill...it was a little unnerving...but maybe that was only fair as well. Maybe it was a taste of her own medicine. But she was a big girl, she could take it.\n\nFeric had managed to pin the Orc, but his hold wasn't at firm as he'd have liked. He wasn't a small man\u2014 he was often taken for a Nord because of his size, even by actual Nords\u2014 but no one had the sheer bulk and natural muscle of an Orc. And this one was snarling mad. Understandably so. Feric had informed him, in so many words, that if he was going to size him up, he better do it himself, then he'd proceeded to take the initiative by roughly body slamming him into the well used floorboards.\n\nThe Orc growled out a few curses, but finally stilled, his voice a hot snarl, \"You're a fucking dead man, you know that?\" \n\n\"So you say.\" he growled back.\n\n\"Either way, this comes out badly for you. My brother will be right outside with a welcoming committee. If you get off me now, we'll make it quick...but if you don't I guarantee you'll be begging like the little twat you are for your mama to come make it fucking stop. You understand me?\"\n\n\"Only if they catch me and I don't get them first. And believe me, I'm a quick bastard when I want to be.\" He shoved his knee a little harder against his neck, making the Orc grunt from the increased pressure. \n\n\"Now here are your options,\" he continued, \"I ease up, let you throw me off, as rough as you like, and then we go outside like gentlemen, trade black eyes and split lips, and decide to shake on it, being the good sports we are and walk away all the friendlier for it\u2014 mutual respect and all that bullshit...or you tell me right now to go straight to fucking Meruhns, and I gut you right here on the floor. \n\n\"Now\" He continued, in a slightly lighter tone, \"...I like the look of that willowy dark-elf behind that bar, and I think we'd both have a better shot at her if we don't piss her off by making a mess, so I'm personally inclined towards the first option. I'm of a mind that a nice enough piece of tail is worth the occasional,\" he paused and smirked, \"aching jaw...wouldn't you agree?\" \n\n\"Who the Fuck do you think you are?\" The Orc husked in a murderous whisper. A whisper because his throat was still affected by the knee pressing into it.\n\nFeric darkened his tone again considerably and growled. \"Not at all what I appear.\" Feric concentrated and tried to bring up the shift without actually making the full change, letting the energy of it wash to the surface and surround him like a cloud. \n\nIna had said the Orc was a warlock, so Feric figured that he might feel some of what Ina had claimed she did with them when they shifted or brought their will to the surface. Perhaps if he gave him a taste, it might be bluff enough, and they could save the gutting for a less inopportune time. \n\n\"What the fu\u2014what in Oblivion is that supposed to be?\" the Orc was gruff, but there was a new edge to his voice. Feric rolled with it.\n\n\"You really don't want to find out, friend.\" \n\nInanna squinted at Feric's back, trying and failing to hear what was being said until her attention was pulled away by a familiar Dunmer coming down the stairs, one she recognized as a drug runner who worked for the Orum's. \n\nHe started at the scene, but gathered himself quickly enough, and took the remaining steps three at a time. \"Son of a...\" \n\nNear the bottom of the stairs Desdemona appeared, serpentine, and slid herself between the thug and the scene playing itself out on the floor. She smiled that wicked smile of hers and slid her fingers around the low collar of the Mer's jerkin, halting him mid curse. He paused, though probably more from shock that anyone would stop him than anything else.\n\n\"Don't worry about them friend, that's just his way of being neighborly. It's a Nord thing...it's how they say hi.\" Her smile turned a little naughty. \"Why don't I show you how we Breton's like to get to know people?\" He glared at her, though his expression had soften slightly with his confusion, and Ina watched his face for the tell tale glint of uncertainty she knew would be there soon. Dunmer, like Bretons, were tough to mess with in that way, but Des was a professional, and if this s'wit was just a runner thug, he might not be the sharpest dart in the game. Course, if one wanted to go overboard with their metaphors they might suggest that one couldn't read how a dart would stick until the damn thing was thrown. \n\nAs if complicit with these thoughts, the glazed look Ina was waiting for didn't appear, and instead the fetcher raised a hand to push the 'interfering bitch' out of his way. His own words, of course. Ina would have found it funny if she weren't already so concerned about Feric.\n\nDes didn't let it bother her, and only smiled wider, laying her palm flat on his chest. Ina felt a familiar tingle, and something oily and slippery wriggling around her spine, making her hairs stand on end. In the corner of her eye she caught a few of the men in the room twitch, no doubt since they felt it to. The Mer finally got that look, like a lost puppy, and it was plain to anyone who was looking that he was right fucked up in the head at the moment. He looked down at the smiling woman, with that lost look and blinked, suddenly 'coming to his senses' about just what he was looking at. The wet, red, parted lips, and smoky, lust filled eyes gazing back up at him changed his tune quick enough. It was, after all, the universal signal for 'take me now big daddy,' and the way Des applied it, there was surely a few darker promises held in those emerald greens of hers.\n\nInanna flicked her tongue against the back of her teeth in response to the taste that was now lingering in her mouth. Something floral...and far too sweet. She hated it when Des had to lay it on thick like that. It was so obvious...and it left an odd taste in her mouth...literally. She let her eyes dart around the room and noticed the overall vibe has eased as a number of patrons mistook the slithering around their spine and the honeysuckle smell for warm fuzzy feelings in their 'nethers.' The other half were also shifting, but more in curious discomfort as they were distracted from the men on the floor and looked about, consciously or not, for the source of that discomfort. \n\n\"Let my buy you a drink.\" Des murmured with a voice that matched the smoke in her eyes, pressing herself a little closer, \"What's your poison, Sera?\"\n\nIna didn't pay enough attention to hear his response. Feric had quit whispering whatever he was going to whisper and his body shifted oddly, making her frown deepen. He'd just opened himself up, and Magub took the opening and fairly tossed the man across the room. Everyone's attention snapped back to the fight. Even the Dunmer thug was brought out of his daze, though he made no move to get out from under Des's soothing touch, which had slid up to the back of his neck as they both turned to watch. \n\nFeric got up...slowly, as if the trip had rung his bell some. Inanna's frown deepened. Not because she was worried...but because it was a show. It was a pretty good show...but her gut told her it was just that. The problem was she wasn't certain what it was for. He'd played it tough to start...now this...was this to lure him in? If it wasn't, then it was a reeeeally bad idea to play it weak in front of these guys. They respected guts and steel, and that was it. Most Orc's did, and those that made a living the way these fellows did, were going to be that much more in love with it. \n\nShe licked her lips and called the fire to her finger tips...just in case, keeping one eye on Des, who was getting odd looks from a couple of savy and unimpressed Dunmer in the corner, and the other on Feric. He was now boldly swaggering to his feet, grinning. His tongue darted to the corner of his mouth, as if licking at invisible blood. He was looking oddly triumphant for some one who just pretended to get their ass handed to them. His eyes positively glowed, shining down on his challenger like a watchman's lantern.\n\n\"So,\" he growled through his grin, \"are we going to take this outside and spare the...\" he paused to cast those brilliant eyes on Dervera who was still behind the bar, her visible hand still wrapped around the bottle she'd been pouring from when the fire call went up, and graced her with that Des-rivaling smile of his before continuing, \"...charming proprietress having to spend the better part of the evening scrubbing our blood out of the floor boards?\"\n\nMagub had also gotten to his feet and gave Feric a dark smile. \"Fuck that.\"\n\nA shift came over Feric. His eyes hardened, and his body relaxed. Last time she'd seen that look in his eyes, he still had blood dripping from his fangs. 'Damn it all to oblivion,' she thought, already calculating how long it would take before the rest of the gang broke down the door, and whether or not she'd first be able to get across the room and kill the thug, and possibly two other shifty, opportunistic fetchers eying the situation from the corner with anxious, and sharp looks. Illusion spells were fine and dandy, but they were delicate as hell. A loud enough noise'll wake almost anyone up, and Feric ripping his buddy in half would no doubt make a pretty hefty-fetching mental din, loud enough to break even a solid spell.\n\nThe Orc laughed and dusted his coat off. \"This god-damned jacket is brand-fucking new. I'm not about to wreck it rolling around in the piss and mud. Not like that drunk-ass fetcher whose head I'm going to rip off if that house isn't burnt to the god-damned ground.\"\n\n\"If you want to rip off heads, mine's the one you want...he called out on my dollar.\" Every face turned to look at Feric. He smiled mildly and shrugged...though his eyes still held, hard and steady. \"You know what they say about dividing and conquering...thought it was worth a go.\" \n\n\"Clever mother-fucker, aren't you.\"\n\n\"I aim to please.\" He drawled back.\n\nThe Orc laughed again. \"What's your line?\"\n\nFeric straightened at the same moment Ina slowed the fire coursing through her limbs, shaking out her numbing fingers. In the corner of her eye she saw the still busy Des cock a brow at her. \n\nIna had worked with Des long enough that she could feel her magic, and knew it for what it was...and even recognized when the influence of certain Daedra was flavoring it. But that table turned both ways, and the knowing look Desdemona was shooting her was hard to ignore. \n\nFeric held out a hand to the gangster, \"My line? Perpendicular to yours at the moment, but you never know when a man will hit upon a new angle.\" Gro-Orum took the offered hand in his fat green mitt. \n\nThey released from the shake and the Orc turned up his lip in a sneer. \"You ain't with the god-damned legion are you?\"\n\n\"No.\"\n\n\"Good. Then buy me a fucking drink to make up for the damned crick you put in my neck,\" he turned to the bar and ordered two drinks with a wave of his hand, indicating that they were on Feric's tab, \"but don't be mistaken about what just happened here.\" Gro-Orum cast a dark, sideways look back in Feric's direction. He only nodded, then turned and winked at the Dervera, causing the Dunmer woman to turn a fraction of a shade darker. \n\nInanna pursed her lips at the back of his head and he threw her a barely there nod over his shoulder. She sighed and sidestepped slowly to the right, throwing off the bar holding the door closed. It went down easier than it went up.\n\nShe leaned, leg up, against the wall, crossing her arms over her chest. Des wisely took her hand from the entranced Mer as the remainder of the gang came barreling in, only to find their boss and the 'pretty sonofabitch' standing at the bar together. There was a moment of confusion as their anger wavered, directionless. Orum raised a hand to pause them, adding to their confusion when he spoke. \"I know there was no fire. It was this one who called it...so leave the drunk to piss hi'self in the street as he's wont to do.\"\n\nDesdemona insinuated herself into the group of confused Orcs. \"There appears to have been reconciliation.\" She smiled and shrugged, then raised her voice. \"And as I am so very fond of diplomacy, I'd like to celebrate the lack of blood and property damage by calling for the next round... on me....\" She swayed to the bar and put herself between Feric and the Orc boss and gave the room THE naughty smile. The killer smile to end all killer smiles. \"Not literally of course, unless you're very good boys.\" she added. \n\nThe room relaxed and those with glasses chuckled and lifted them towards Des. Both men grinned down at her, and she graced one with a wink and the other with a bit of barely concealed smolder. \n\nThe air turned sickly sweet again, heavy with some indeterminate floral scent, and Inanna decided it was her turn to need air. As she moved to go she realized that Hassour hadn't budged from his seat, and was leaned back in his chair in the same relaxed manner he always had. Unlike the rest of the room, his eyes were on her. His stoic expression told her nothing about what was rolling around in that slippery head of his. ",
        "It was a look she should know...but she hadn't seen it in a long damned while. In that moment it was never so apparent to her how long she'd been away from Vardenfell. Was she getting soft out here? Prick. She stuck her tongue out at him, and the corners of his lips curved slightly upward, as if he knew exactly what she was thinking even if she couldn't reciprocate. That just pissed her off more. \n\nThe door was weighted, and drifted slowly behind her as she left, denying her the satisfaction of a nice loud bang. \n\nThere was a familiar Orc standing in the mud out front with a terrified Dunmer caught by the scruff in one of his meaty paws. He eyed her suspiciously but nodded in recognition. She nodded back.\n\n\"You can let the song bird go, Bazur. They came to terms inside and there's a round being poured out that you might want to get in on.\" He didn't move. \"I'm not messing with you. Your boss said he could go.\" She smirked. \"Besides, that poor bastard will be around if you change your mind in five.\" He paused another moment, then shrugged and released the drunk to his own legs...which faltered immediately. Inanna grabbed his arm and pulled him over to be propped against the wall beside her. When the door had shut completely behind the Orc, she roughly patted the Mer's face. \"Hey, come on...\" He looked at her dazedly and she held up two fingers and pointed them at herself, indicating that he look her in the eye. He did, but with some difficulty. She opened his palm a slapped a couple of coins in his hand and closed his fist around them. He frowned at her.\n\n\"I ai..ain't...I'm not a beggar...you know. I don't want your--\"\n\n\"Shut up, babe.\" She interrupted gently. \"You take that to your friend...Llevara...or whatever her name is.\"\n\n\"Llevana?\"\n\n\"Yeah, her. I owe her. Tell her I told her I sent you to pay for it for me. Got it?\" He looked down at his hand and nodded. \"She'll wanna do what's right by a messenger, you hear? Like we do back home. You're not going to be rude and deny her what's proper are you? Don't want her insulting me by not taking care of my messenger.\" The poor fetcher's story was a sad one...one of those fellows who go and lose someone close and just can't take it for some reason. They start drinking, hard drinking, and that's the beginning of the end of the story. It's a common story in the empire...less so at home. But, as the impersonal and centralized imperial mindset expands to the outer reaches of the empire...it spreads other problems as well.\n\n\"C-course not.\"\n\n\"Course not.\" She slapped his shoulder. \"Go on with you.\" He turned and she called out after him. \"I hope those s'wit let up on you sera. Keep off the street and don't give the fetcher's the excuse.\" He paused at that last remark and turned to look at her from the middle of the street. His shoulders tightened.\n\n\"Which fetchers do you mean?\" He looked suddenly clear headed...and there was a dark look in his eyes. \n\n\"All of them.\"\n\n\"Muthsera.\" He graveled with a nod, and turned back into the cool of the evening. Inside the Inn the clear, staccato notes of a Vardenfell lute rang out. The Inn keeper kept one handy behind the bar, as any Dunmer tavern owner must. That, at least, was right and proper. Inanna leaned back against the plaster wall of the Inn and smiled as she watched a troupe of noisy gallants exit the high class joint across the way. One of the youngsters paused long enough to give her a passing, disdainful glance, but for the most part they took their way without noticing anything but their own magnificent persons. She leered back at the one who'd sneered in her direction and winked at the youth. He looked quickly away, tugging and straightening one of his silky looking sleeves.\n\nThe door opened beside her and she declined to look, opting to watch the play knights as they strode off toward conquest and glory...or more booze money from daddy. You could never tell with those boys. \n\n\"Who are they then?\" A soft, voice graveled from her left. \n\n\"The Count's son and his entourage. Flowers of knighthood all.\" She added dryly. \n\n\"Hm.\" \n\nShe blinked and there was suddenly a Hack-lo leaf cigar before her face, held aloft by long, dark fingers. She did smile at that and turned her head towards Hassour. \"You're a sweet fellow, you know that.\"\n\n\"I brought them for you.\"\n\n\"You remembered.\"\n\n\"Of course. I was going to save them until you invited me to your house...but it sounds like you'll be busy for the next few days...and you looked like you could use one now.\" She plucked it out of his hand and ran her fingers along the length.\n\n\"Nice. Whose are they?\"\n\n\"Ahemmussa tribe.\"\n\nShe shrugged. \"Well at least they do something right.\"\n\nHe chuckled. \"Be kind. They're good for my business.\" He pulled out another cigar and bit the tip off, turning away to spit out the end.\n\n\"I bet. The sell outs.\"\n\n\"You should talk.\" He lit the end with one of his fingers, making her chuckle. He pointed it in her direction with a wink. \"May I?\" \n\nShe slid the cigar under the edge of her leather cuirass and shook her head. \"No offense meant, I'm thrilled you brought these, but I don't think I've the stomach for them. Something's off with me, and I find the thought of smoking this right now makes me feel a bit queer.\"\n\nHe raised an angular brow at her, causing the lines of his tattoos to shift in interesting ways. \"Would you like me to put mine out?\"\n\n\"Oh no...I love the smell, makes me nostalgic. I seem to have lost my taste for a number of things lately. But I'm sure it'll pass. No doubt it's the hormones playing havoc with my inside bits. They've been doing a real number on me.\"\n\nHe grunted. \"Nirai makes me cook trama root in bittergreens. Says she craves it. It's worse when she's pregnant...she starts mixing scrib jelly with it...raw.\"\n\n\"Ew.\"\n\n\"It's repulsive. But when a waste witch tells you to jump...\"\n\nShe chuckled and took his arm. \"Come my well whipped friend, let us take a constitutional, and you may smoke and tell me of your Ashland love.\" He smirked but obligingly folded her arm over his.\n\n\"I'd be delighted, Muthsera.\"\n\n\"Let's make our way castle-ward tonight.\" she pointed her free arm towards the high arch of the castle courtyard, its towers only partially and intermittently visible in the growing mist. Dusk and dawn alike saw a good deal of fog in this city, and as the air became suddenly cooler with the setting of sun, so the air would stir and thicken. \n\n\"Rain stirred mud, is rain stirred mud, my dear, the direction it lay in makes no difference to me.\"\n\n\"Ah, but this is most certainly a better quality of mud, it's courtly mud, you see.\" At that moment an attractive Dunmer woman in fine green velvet crossed the way ahead of them, keeping to the grassier areas and thus out of said mud. \n\n\"So you say.\" He murmured, his eyes briefly darting after the light-footed figure.\n\n\"Court mage. Highest paid official in the city after the count...at least on the books. Recently admitted to me a longing for the alchemy of the ancestral lands...and the rare ingredients which might be imported from thereabouts.\" she offered, causing his fleeting glance to turn more fully on the retreating figure. For the briefest of moments she caught a flashing glimpse of the turning wheels behind his eyes.\n\n\"Hm.\" He replied indifferently and turned a bored gaze on a flower covered gazebo to their right. \"That's a handsome little alcove.\"\n\nShe sighed happily and leaned on her cousin's arm. \"It is indeed, Muthsera. It is indeed.\" Morrowind: sometimes she still got a pang or two.\n\n**\n\nFeric noticed Inanna leave, and would have preferred to be out in the quite of twilight with her, but he was still trying to finesse the situation with the Orc, and Desdemona wasn't making it any easier. She kept them in conversation much longer than he would have liked. By the time he was able to extricate himself, the other Dunmer, Hassour, had returned, and Inanna was no longer with him. \n\nWhen Feric gave him a quizzical look, he shook his head and automatically answered his unspoken question, \"We walked for a while, but she said that she needed to clear her head, and went for a run.\" \n\nThey both returned to the table, but neither spoke. Hassour didn't seem to feel the need and Feric couldn't think of anything to say. He was too busy contemplating whether he should go after her, or simply let her blow off steam her own way. \n\n\"Play another one!\" someone called out, and there was light feminine laughter somewhere behind him. \n\n\"I need a moment. Hassour, why don't you regale us with some of your Ashland poetry?\"\n\n\"I'm sure it wouldn't be to most people's taste.\"\n\n\"Nonsense. Come let's hear something new.\" \n\nHe looked at her a minute, then raised his hand, gesturing that she give him the instrument she held in her hands.\n\n\"Fine, I'll play one new of mine, and one somewhat new, from another.\" He took the instrument and though the Orcs were still loud in their corner and oblivious, everyone else turned to watch, including Feric.\n\nDesdemona settled next to him. \"You can't claim the name of Ashlander if you aren't a poet at heart. They have a surprising flair for the dramatic when they want to.\"\n\nAs if in reply to her words the Dunmer ran his fingers up along the unusually long instrument, and pulled a sound from it which was very much like a cry of anguish. The room suddenly became quite, and Desdemona looked supremely pleased, and not a little smug, as if she'd been expecting the response and was happy to be proved right. \n\nThe next note warbled from a whine to a groan and back again. It wasn't anything he'd heard before, and it wasn't 'pretty' as one expected music to be...but it was arresting. The continued silence proved as much. \n\nWhen he added words, Dunmeri words, Feric couldn't help but be reminded of Inanna. There was that rolling, undulating gravel which echoed in her quicksand voice, and her smooth rolling undertones. That language, punctuated as it was by the sometimes soft, sometimes sharp twang and groan of the strings shuddered down his spine. His mind conjured red eyes flashing at the other end of a drawn arrow, how they had burnt with the fury of the fight, and a split second later, flashed with recognition and curiosity. He recognized her in the music, and wondered if it wasn't something that all Ashlanders shared: that quick movement from body to mind, from ferocity to playfulness...and back again.\n\nThe words died off, only to pick up again, this time in Imperial.\n\n\"There are voices here in the storm:\n\nfaces here in the shifting black sands. \n\nSome say they are the lost souls:\n\nthe demon ghosts of the lost people.\n\nBut I can only hear your voice.\n\nI can only see your smile.\n\nAnd I wish I were these baked sands\n\npolished hard and smooth\n\nto be your mirror so that you \n\nwould always gaze upon me.\n\nI wish I were the red wind\n\nto wrap myself around you\n\nor the rain that washes your body\n\nto trace the cutting line of your cheek.\n\nI wish I were the gray ash\n\nthat I could kiss your feet\n\nand feel your full weight upon me.\"\n\nA murmur and light applause rose up. Even the Orcs seemed respectful enough. Though, one muttered something about \"Girl stuff,\" and loudly enough for it to reach the table.\n\nThat brought a slight twitch to the Mer's lips and a glint of humor to his eye. \"Well, I can't argue with that,\" he murmured with a chuckle. He glanced at Feric, \"Would you like to hear one of Inanna's? She's given me license to play them.\" He added quickly as if someone might object.\n\n\"I...yes.\" He would, actually, but it surprised him. \"Hers...as in, she made it?\"\n\n\"Yes. We both share a passion for Ashland poetry...I suppose it is something that keeps us Velothi tied to our roots.\"\n\n\"Velothi?\"\n\n\"The homeless, house-less Dunmer. There are more of us than one would suppose.\" He didn't add to that, but returned to the instrument, this time somewhat less dramatically. It still had that heart tugging moan to it, but there seemed to be more melody this time, and the words seemed more like an unending and rolling wave, so that it became unclear where one statement began and another ended. This time, however, he did not repeat it in common. When he finished, he turned back to Feric with that same small smile he had before. \n\n\"Aren't you going to translate for the plebs, darling?\" Des asked with a smile.\n\n\"I would if I could Muthsera, but the words belong to another.\" He paused and turned to the room at large, \"So you will have to make Inanna sing if for you again if you want to know what it means.\" He chuckled and handed the instrument back to Des.\n\n\"Did you like it?\" Feric asked her conversationally.\n\n\"Certainly, though it's a bit melodramatic for my tastes...but that's Inanna for you. Has she given you any of her Daedric speeches yet?\"\n\n\"Daedric speeches?\"\n\n\"Yes. I've heard at least half a dozen, though my personal favorite is the one about Boethia\u2014\"\n\n\"Oh yes,\" Hassour interrupted with a chuckle, \"the one about the joys of hand to hand combat? I'm partial to the one which posits our race as the mortal acolytes of Azura myself. The bit about the winged twilight only really applies to women, but the notion is amusing.\"\n\n\"I think I may have heard that one...\" Feric muttered with a frown, remembering the night she'd chewed him out before they'd reached the hunter's base at Wariel. \"Those are 'staged' then?\"\n\n\"Well not in so many words.\" Des tapped her chin, \"They're rather 'performative,' and are similar in the retelling\u2014\"\n\n\"\u2014But she means every word.\" Hassour finished. \"I've noticed that they usually come out when she's worked up about something...\"\n\n\"Her way of explaining the world to herself again, focusing on what makes sense, in order to tune out the shifting, mutable din that is existence. Or at least that's the answer I came up for the phenomena.\"\n\n\"She has a very good one on Hircine, the hunter.\" Hassour added.\n\n\"Oh? I haven't heard that one...She usually gives me the Sanguine lecture.\" She made a sour face at that.\n\n\"Isn't he the Daedra associated with lechery?\" Feric asked, with a half smile.\n\n\"No, well yes, but not only...and just because something is sensual or sexual doesn't make it lecherous thank you very much.\"\n\nThe Dunmer chuckled. \"Do I detect a defensive note, Muthsera?\"\n\n\"Hush. Both of you. Where is our 'dark lady' anyway?\"\n\n\"Out running apparently.\" Feric answered. \"I think I might just go see if I can't find her.\" He stood and held out a hand to Hassour who accepted it, then to Desdemona, bowing slightly. \"It was a pleasure meeting both of you. Till next time.\"\n\n\"A clear evening to you, Feric. If I don't see you before I leave, then it was good to meet you as well. \"\n\n\"Sweet dreams, darling. Ta.\"\n\n\"Goodnight to you both.\"\n\n**\n\nThe air was unseasonably cool, outside the walls of the city as well as within. More so without as there was no added warmth provided by the clusters of buildings, each adding their own fractional share of heat. Inside or out, the same shifting mist flowed over the low, damp earth, obscuring the path even as the growing moonlight attempted to illuminate it. It was a valiant effort...but ultimately unnecessary, at least for him.\n\nEven in this form Feric had heightened senses and could have tracked her easily, but that wasn't necessary either. He had caught her scent and noticed the Inanna sized footprints in the soft moss as she broke off of the road and headed north, but that little tugging at the back of his brain already had him moving toward her, and these signs were only the physical confirmation of what he already knew. \n\nNot far from the city, a little way beyond the ruins of another ancient fort which looked down on the city from a small hill, he found and followed the undulating spine of another, higher ridge. The trees were fewer here, and those that remained were the gnarled and brave sort who made an art of clinging to the rocky side of cliffs and mountains. The mists were gone as well, unable to make the climb as the twisted fir and pine had...and the occasional, especially daring, cedar. \n\nHe couldn't help but notice, as he followed the scant path, that one such cedar was a favorite with the local wild life and bore the scars to prove it. The top half had a few telling bald patches, likely from black bears. The lower half had been made a claw sharpener for the small cats in the area, who weren't usually much bigger than a large wolf. These northern wild cats, unlike their southern cousins, were solitary creatures. The fact that there were multiple scents on the tree meant that this was a boarder region between territories. Neutral ground.\n\nNot far from the communal tree, he spotted her.\n\nShe was sitting a ways along the ridge, overlooking a narrow valley, at the bottom of which lay a winding network of small lakes and pools. Below, the mists continued to rise off the surface of the waters and here and there the eerie glitter of flitting willow wisps flickered blue and white through the swirling grey. \n\nHe caught her in profile, sitting much as she had been that night by the waterfall, after she'd pulled herself naked from the water. \n\nHer arms were wrapped around her long legs, and her body leaned forward against her thighs, only this time she was dressed. Though, to be honest, her slim legs where more than appealing, regardless of whether they were naked or wrapped in studded leather. She'd shucked her usual leather up top and was wearing instead a light sleeveless thing...no doubt the silk she wore under her armor. Apparently it was a common trick in Morrowind to wear silk beneath leather, though not for the luxury of the thing...it just made pulling arrow and spear heads out of your body that much easier.\n\nHer hair was pulled up as well, into a messy knot at the back of her head, leaving a few strands to trail down as they list. He knew that too was pragmatic, no doubt to keep her hair off her neck as she ran, but the image it created was no less appealing for it. Just as the way the silk folded around her, and the way the worn leather shaped itself to her curves. It brought a purr to his throat every time he let himself pay attention to it.\n\nHe didn't feel completely free to enjoy the view, however. Something about her seemed off. Her head was bent forward, and her forehead was resting on her knees. He could see her eyes were open, and staring sightlessly. There was something forlorn and sad about the posture and it concerned him to see her like that. \n\nHe needn't have worried. When her head rose, the eyes that met his were calm. She smiled softly and held out a hand in welcome, indicating with a wave that he join her.\n\nHe smiled back and made his way toward the tree she was leaning against.\n\n\"What brings you out here, handsome?\"\n\n\"Just looking for you.\"\n\n\"Anything wrong?\"\n\n\"Nothing new.\"\n\n\"Hm.\" She patted the ground next to her and stretched out her legs. It gave him an idea.\n\nHe sat, but turned and leaned back with his hands behind his head until it was resting in her lap. She blinked at him, then laughed lightly. He grinned, satisfied that he'd gotten the reaction he wanted, and refolded his hands over his stomach, allowing his head to rest fully in her lap. She grinned sideways at him a while, but made no attempt to shove him off.\n\n\"Aren't we suddenly comfortable?\" She chuckled.\n\n\"Very.\"\n\n\"Feeling like the big dog, and now you want to mark your territory?\"\n\n\"Excuse me? Dog?\"\n\nShe laughed again. \"Alright bad analogy, but you know what I mean.\"\n\nHe grunted and closed his eyes as her stomach trembled with silent laughter. \"I've marked you plenty. And it's gotten me in enough trouble.\" He grumbled under his breath. Fingers brushed against his temple, and slid lightly into his hair. \"That feels good.\" He opened his eyes to find shining rubies looking back into his. \"You have beautiful eyes.\" She was still smiling that small, soft smile.",
        "\"They're red...it's not usually the preferred color for eyes.\"\n\n\"I like red.\" Her smile widened\n\n\"And I like green.\"\n\nHe slid his hand up to wrap back around her waist and hips. \"Thanks, Red.\"\n\n\"You're welcome, Green.\" \n\nHe pressed the small of her back with his hand and she accepted the invitation and leaned forward to brush her lips against his, but left it at that and pulled away to lean back against the tree with a chuckle of her own.\n\n\"Hassour sang one of your songs, er, poems, for us after you left.\"\n\n\"Oh yes? Which one?\"\n\n\"I don't know. He didn't translate it for us so I couldn't understand it.\"\n\n\"Well that was pointless of him.\"\n\n\"No....not pointless. I like the way it sounded...I just didn't know what it meant.\"\n\n\"Sounded?\"\n\n\"You know, the...rhythm, or beat, or meter or whatever you call it....I don't know anything about poems or music.\"\n\n\"You seem to know plenty. All you really need to know is what you like. What did you like?\"\n\n\"Well that's the thing, I don't know enough to know the word for it. The...pulse of it. I guess.\" He smiled helplessly.\n\n\"The pulse of it. I think that's lovely. 'This is the pulse of my song...' May I steal it?\"\n\nHe laughed. \"I don't know what you're stealing, but it's yours.\" He sobered again. \"It sounded like waves...it just sort of...rolled on.\" He tried to hum a few lines, but it didn't sound right without the words. She closed her eyes and sighed. And then the words..the ones he could hear in his mind but couldn't speak, came rolling off her tongue. It sounded so, so, so much better in her voice. \n\nShe paused after only a handful of words and opened her eyes down into his. \"Yes,\" he murmured, \"that one.\"\n\n\"Who are you?\" she began again after another brief pause, but this time spoke more slowly, almost haltingly, \"Dark Queen, subtle prince.... eyes like nightshade\u2014 no earthly petal so rich in color, so bright with dew... glittering in the broken starlight. Flesh, not flesh, that shines like the glistening pearl, waiting deep beneath the rocking seas for daring mortal fingers, wanting to touch, but...fearful of the dangers which lurk in the darkness.\" she paused, her brow crinkling, \"The cloth of your robe shifts, as mist over the distant sky, revealing and obscuring. A fabric woven by your own knowing fingers, a fabric which...makes and unmakes its own meaning, a new...sign for every eye. Like silk when you grasp it in your hands and twist it beneath the moon.\"\n\nThere was a moment of silence where he stared up at her, hardly daring to breath, and where she sat staring out into the night, her fingers unmoving, but still threaded through his hair. Her eyes turned back to his, and her parted red lips parted wider into a toothy grin. \"I can't tell if I like how it sounds in common...I've never tried to translate it...I don't think it was very good.\" Her fingers began to move again, her nails dragging lightly against his scalp in a way that both relaxed and excited him. \n\n\"Half the point was the...pulse, as you put it. The way the words move together. The whole effect is lost when you translate it, and not all the words carry over in the same way.\"\n\n\"Is it about you?\"\n\nShe started at that, looking genuinely surprised. \"Me?\" she laughed, \"No, not at all. It's a rather common place sort of poem, one dedicated to the mysteries of Azura. They're a septim a dozen in the Ashlands. We all have one or two on hand.\" She leaned back and that soft smile returned and her eyes closed with a contented sigh. \"She's a Daedra of secrets and mysteries, of twilight: painfully beautiful, always so close and yet unattainable. You think you have it all figured out, and then bam, she turns it all back on its head. It is one of the lessons we learn as children. That she is in her own way the very definition of understanding, of meaning. After all, how can we hope to fully understand anything, how can we hope to know what anything means, when everything comes to us in fragments, hints, and half-truths...and yet we never stop searching, hoping that one day all will suddenly be revealed.\"\n\n\"Fascinating. You're sure it's not about you?\" He grinned up at her when she poked him hard in the shoulder.\n\n\"It is fascinating, isn't it? I find the Daedra endlessly interesting...at least in theory.\"\n\nHe smiled at that, thinking back to what Des and Hassour had said about her lectures on the subject. But he hadn't been referring to the Daedra.\n\nHer expression shifted and her lips curved into a playful smile as she cracked an eye at him, \"Why? What was your interpretation?\"\n\nHe smiled back. \"Clearly it reminded me of you.\" He shrugged, \"I told you, I don't know anything about poems and the like.\"\n\n\"Should I take it as a compliment?\"\n\n\"If you like.\"\n\nShe chuckled at that, closing her eyes, her face serene. He followed suit, letting the calm of the evening seep into him, letting the caressing fingers sooth him...he couldn't remember the last time he'd felt so peaceful, so...happy. \n\nHis eyes snapped open and he frowned.\n\nInanna must have felt him tense and knew something was wrong before she opened her eyes and saw his frown. \"What's wrong?\"\n\nHe sighed and sat up with his back to her, running a hand brusquely through his hair. \n\n\"Feric, what's wrong?\" She repeated softly.\n\n\"Nothing. I...I don't know.\"\n\n\"Well what thought arrested you and made you sit up?\"\n\n\"Thinking about my family.\"\n\n\"Ah.\"\n\n\"That I'm sitting here, feeling...happy, while they suffer.\"\n\n\"And you're not allowed to feel that way.\" She asserted for him. It wasn't a question or accusation. Just a statement of fact.\n\n\"Something like that.\" He felt her shift behind him, and tensed as her slender arms slid around his chest, and as her warm body pressed against his back. He waited for the inevitable lecture on why it was foolish to feel that way, but it never came. \n\nSlowly he relaxed into the embrace...not completely, but enough for her to nuzzle the back of his neck. He could feel her there...not just her body...but her... the red essence of her. It felt slower...calmer. It was hard to describe that essence, but he knew it when he felt it. It was dark, and hot, and alive...but it didn't have its usual intensity. Usually it felt like blood pounding through your veins, in the heat of a battle, or in that charged moment just before one made that final leap toward their prey. Now, instead, it was a slow, hypnotic rhythm...the beating of a sleeping heart.\n\n\"Can I ask you something?\" She asked softly, her voice low and slow.\n\n\"Hmm.\"\n\n\"How did you meet Pern?\" \n\nIt was not a question he had been expecting. He was so surprised by it that he answered almost without hesitation. \"We pretty much grew up together. She was from another pride, but one close to my own, so we'd known each other for a long time. Since we were very young.\"\n\nShe nuzzled him again, her hand slipping into the folds of his robe to caress the skin beneath. The sensation confused him. But he didn't pull away. \"When did you know?\"\n\n\"Know?\"\n\n\"That she was the one. Or when did you decide you wanted to be her mate?\"\n\n\"Ah...well, I'm not sure. I always admired her. I can't think of one moment which stood out...there were so many...she was so...\" He trailed off as the tight familiar knot grew heavy in his stomach.\n\n\"What? What was she?\"\n\nA million images flooded his mind, images he'd been pushing away, hiding, holding back for fear he'd drown in them: a bright, gleaming smile, blue-grey eyes, so dark when she was angry, like storm clouds announcing the coming tempest. Laughing and fearless, taunting and sardonic, kind and sincere...she was so many things...she was gone. He rubbed his hand across his eyes as if to erase the images, but they remained etched onto the backs of his eyelids, each one a reopened wound.\n\nHe sighed deeply and clenched his jaw. \"Incredible.\" He swallowed hard, but for some reason pushed on. \"Powerful...beautiful...\" he smiled sadly, \"a smart ass...like Mirisa, but more lighthearted, happier....but then Mirisa was happier then too.\" He stopped there. That was as much as he could say before the sick feeling became too much to bear.\n\n\"Tell me about when Aina was born.\" He was glad for the shift in topic, so he did. And he kept talking, and she kept asking questions, and slowly...slowly...the words came out a little faster, a little easier...just as painful, but still they came. He had no idea how long they'd sat there like that, with him talking, and her arms wrapped around him, and her body pressed against his back, but when he began to run out of words, both of the moons were well into sky.\n\n\"Aren't you cold?\" he asked, \"Uncomfortable?\"\n\n\"God, yes.\"\n\nHe chuckled and turned, wincing as his body protested. He extricated himself and pulled them both to their feet. He was a lot more tired than the hour, however late, warranted, so he made no protest or comment when she led them back to the city and then to her house. He was awake enough to note the layout of her house, and the few things that stuck out to him as interesting: An unusual shield hung over the fireplace, a low table and pillows in front of it, the large ornate desk in the corner by the stairs, the pantry...book shelves...bed. \n\nThey both stripped and he watched, still silent, as she crawled under the thick quilt and shuffled over, lifting it to indicate he follow. He did, and she wasted no time in tucking herself against his chest and wrapping her arms around his waist. \n\nIt was easy to forget how small she was sometimes. Fragile or delicate weren't words one used to describe her when seeing her in action, but, looking down at her delicate jaw framed with red curling tendrils of hair that fell to brush her slim neck and shoulders, and feeling her small frame in his arms, he felt like he could break her in half. \n\n\"G'nite.\" She mumbled with a soft sigh.\n\nHe smiled and curled around her, tightening his grip. \"You're not going to try and seduce me?\"\n\n\"T'red...'n can't anyway.\"\n\n\"Why's that?\"\n\n\"Din't kill anyone...\"\n\nHe chuckled. \"Fair enough. Though I'm not sure that's a habit we should be encouraging.\" He let out his own sigh against the top of her head and closed his eyes. He was still troubled, troubled by his memories, about the future of his people, about the woman who lay breathing so slowly and evenly in his arms...and when sleep came his dreams were no less troubled. \n\nBut, for the briefest moment between reality and dreams, in that nowhere place you can never remember, everything suddenly made sense. \n\nAnd then it was gone.\n\n**\n\nHeaven. Wherever those silly humans thought they were going when they died...this must be what it feels like...only heaven is real, heaven is now, and it could be found in moments just...like...this. \n\nInanna 'mmm'd happily and wriggled closer, sliding her leg higher up the thick, muscular thigh, and absently running her nails over the slowly rising and falling chest. Heaven was a warm body in an oversized bed. \n\nNo, scratch that. \n\nLet's be more specific, shall we? Heaven was a large, and incredibly sexy body which smelled like lovely fresh, green things and was exuding a delicious aura of a hot afternoon sun...in an oversized bed. She reached out toward the warm sunshine sensation unconsciously, breathing in deeply as her mind was flooded with its heat...and then with a barrage of unlooked for images. \n\nIt was unexpected and she came to her senses with a soft gasp, her eyes flying open. The last image, beautiful, and innocuous enough, lingered in her vision, like a semi-opaque overlay of reality. Somewhere high, somewhere in the mountains...a meadow....so green and so bright...flowers everywhere...laughter...light and high and...dangerous...\"Kynareth\" she whispered breathlessly before inhaling deeply and closing her eyes to squeeze the images from them. \n\nNow that she was fully awake she was able to place that laughter. It sounded like Sprigans. She hated Sprigans, they were to be avoided at all cost...unless you felt like dodging spells and various wild animals as you run your sorry ass back to civilization. They were the servants of Kynareth, the imperial goddess who represented the natural world. So it made a kind of sense that something in Feric might evoke their image. She'd heard Feric mention Kyn once or twice, after all, so there was clearly a connection. They were likely her followers....but maybe it was a deeper connection than she had initially thought. \n\nShe must have been touching his will with her own without realizing it. That thought was the part that didn't make sense and which had her on edge. Normally she'd have to consciously channel it, at least a little, even when the other person was an active and willing participant. And with an unwilling person, it took a good deal of focused concentration. This was almost natural...instinctive. Like a muscle response. She'd been drawn to it, just like she'd been drawn to the other side of the bed...to get closer to the warm body occupying it. \n\nWeird. \n\nShe drew away and sat up, running a hand through her tangles of hair, and feeling around the sheets for the thin strip of leather she'd used to tie it with. \n\nShe had just climbed over the foot of the bed and was tying her hair back when an odd sound caught her attention and made her freeze, then made her slip to the nearest dresser and feel around in the darkness for something sharp or pointy. Another slight creak...the third stair, it always creaked. She'd been waiting for that sound. She knew it so well because she'd tested every floorboard in the place the day she moved in. Better safe then dead in your sleep. Words to live by if ever there were any. \n\n\"Ina?\" \n\nShe stifled a gasp at the sound of her name whispered so close to her ear, and turned her cheek toward the sound.\n\n\"How many?\" she whispered back, her voice barely louder than a soft breath. A hand came up next to her shoulder with one finger held up. She nodded and held her own hand up, signaling that he stay back. It was only one, but it might be better to have hidden back up if it became necessary...element of surprise and all that. She palmed a dagger and moved silently to the already cracked bedroom door. Feric slipped past her, to the other side, where he would be better hidden in the darkness.\n\nA pale hand appeared in the gap to push it open and Ina snapped out to grab it and wrenched the intruder forward. They let out a startled cry and stumbled forward, only to find themselves wrenched back into a less than gentle choke-hold. It was a man...but smallish. Taller than her, but not much stronger, and he stilled pretty quickly when he felt the knife at his throat.\n\n\"Can I help you?\" She whispered darkly in his ear.\n\n\"I..In...Inanna?\"\n\n\"Present.\" She growled.\n\n\"I...ah...um...I'm...Armand sent me...\" The knife point left his throat, but the forearm remained. The man relaxed and allowed himself to cough before continuing.\n\n\"He...he had me tracking the messenger from Wariel.\" The arm released him then as well and he turned to face her. He was about to continue when he realized what he was looking at. She ignored his open mouthed gape and turned to where she knew Feric was hiding. The room was windowless, and the only light came from what little was filtering in from the hall windows. \n\nThe poor stunned man literally jumped when Feric melted silently out of the shadows and sauntered in all his naked glory past the significantly smaller man in order to fish his robes out from under the bed. \n\n\"So?\"\n\nHis eyes, which had been nervously following the big naked Nord looking fellow, snapped back to her...though they started straying right off the bat. She sighed and snapped her fingers in front of her breasts. \n\n\"Eyes to the front soldier.\" He looked up, but only gave her a wonky grin and a shrug. Fine yes, can't blame you, you're only a man, etc. Moving on. \"What news?\" She prompted, her tone a little sharp since even though he had information she wanted...she didn't like having strange men sneaking into her bedroom at ungodly hours of the morning. Especially after the last one...creepy fetcher.\n\nHis eyes darted briefly to Feric. He shrugged again, wisely deciding that if talking in the present company was going to be a problem she never would have suggested it. That's why she liked 'the guild'...they could usually figure these things out on their own without much hand holding, you know, one plus one, and such. Fighters? Eh, not so much. \n\nFeric cleared his throat and tossed something at her. She realized it was one of her long sleeping shirts as she caught it and grinned at him before pulling it over her head, much to the thief's obvious disappointment. It still didn't leave much to the imagination, but her more interesting bits were covered.\n\n\"Well, it didn't take long. A group came back once you were done with them...by the way, that was impressive work. You must be a pretty powerful illusionist to be able to control an animal of that size...\"\n\n\"Caught the show did you?\" She interrupted dryly.\n\nHe smirked \"Just snippets, but what I saw was pretty entertaining.\" She only grunted impatiently. \"Anyway whatever they found inside had them pretty stirred up and they sent a messenger to the capital almost immediately. Once there I followed him to a jewelers in the market district.\"\n\n\"Red Diamond?\"\n\n\"Just the one.\"\n\n\"And?\"\n\n\"Well, whoever picked up the message was real subtle about it. I can give you a description of everyone who entered the place through the front door, but no one jumped out as interesting. I had a friend watch the sewers since the cloak and dagger types\u2014\"\n\n\" \u2014 your type\u2014\"\n\n\"\u2014tend to prefer coming and going by way of the cellar door. I thought it was Our type.\"\n\n\"I suppose that's accurate on occasion.\"\n\n\"Well, my partner did spot two cloaked figures in the vicinity of the Red Diamond down in the under works. One was wearing red robes, which looked sort of ceremonial...at least that's what she thought, but she lost them pretty quick, and she didn't see them actually go into red diamond itself. She did see another person, your more standard 'don't look at me I'm just a guy in a nondescript cloak' type, who she said actually did come out of the shop, then left the under works in the Elven garden district.\"\n\n\"Hm...pretty easy to get lost there.\"\n\n\"Sadly, yes. Which means that is as much as we can offer at the present. Do you want me to send back any messages to the capitol?\"\n\nShe frowned, glancing at Feric. \"Do we?\"\n\nHe took a deep breath and rubbed his chin thoughtfully. \"I can't think of anything more to add at this point. Has there been any word circulating about someone hiring freelance fighters or trackers? As hunters perhaps?\"\n\n\"Freelancers, always...hunters? Not that I know of, but we'll keep an ear open. My partner, Dar'jirra...you know her? She's staying with a friend in the same district and will keep an eye out there, so maybe she'll over hear something in one of the Inns\"\n\nFeric frowned. \"Dar'jirra? That's...Khajiit, right?\"\n\n\"Yeah.\"\n\nIna watched fascinated as half a dozen different expressions fitted over his features in a little over a second. But he only nodded, and let his features settle into something ambiguously undetermined. The thief hadn't seemed to notice any of this and continued on.\n\n\"She'll make for a decent contact there if you need a solid thief.\" He grinned mawkishly, \"Don't worry, she a lot sneakier than I am. Was it the stair, by the way?\"\n\n\"No, something earlier than that...the stair was confirmation.\"\n\nHe shook his head. \"Dammit. Can't sneak a sneak I guess. I'll get out of your hair then. Sorry if I, ah...interrupted...I was told you live alone.\"\n\n\"Normally. Why, hoping for a peek?\"\n\n\"I got one didn't I? Course I almost lost a few pint of blood for the honor...so it's not something I'm going to try again...I assure you. Pebble at your window next time, my lady?\" he grinned with a wink.",
        "\"No, but once your in you can just clear your throat and wait down stairs like a gentleman.\"\n\nHe smirked and saluted. \"Aye, aye. See you 'round.\"\n\nIna waited until she heard the sound of the door being softly closed then turned to Feric. \"Well...that was mildly annoying...but it's a new lead. At least I have something more than D to give Des. Hey, D for Des, hehe, think she did it?\" Feric's expression remained neutral. \"That was a joke.\" Still neutral. \"Do we need to talk about this?\"\n\n\"Yes.\"\n\n\"Alright. Well...we're up, and dawn will be along shortly...let's go downstairs and talk.\"\n\nA few minutes later he had the fire going and she had come back downstairs with a large bowl of random food items. He cocked a brow at her from the fireplace and she just shrugged back. \"I suck at cooking.\" She really did. Balanced on top of the pile of bread and fruit was another bowl, one full of a wet flour paste. There was one thing she could usually make without ruining. She joined him at the fire and shuffled closer with the smaller bowl, pulling out an almost round and very thin stone plate attached to a bone handle. He picked out an apple from the bowl and reclined next to her to watch her work.\n\n\"Why do you bother putting it over the fire? Couldn't you just use your own?\" He noted as she slid the heated stone back out from under the coals where it had been sitting as they silently watched it. \n\n\"The fire gives it the right flavor. My fire doesn't taste like anything.\"\n\n\"Cinnamon.\"\n\n\"What?\" She blinked at him, not sure if he'd just said what she thought he said. He swallowed another bite of apple before answering.\n\n\"Cinnamon. It tastes like cinnamon.\"\n\nShe stared. \"Cinnamon.\" He nodded. \"My...are you saying my fire is cinnamon flavored?\"\n\nHe shrugged. \"You are...I think part of that is the fire.\"\n\nShe gave him a lopsided gin, the stone momentarily forgotten. \"You think I taste like cinnamon.\"\n\n\"You do.\"\n\nShe laughed. \"Ok...I have never meant anything more than I mean this: you say the absolutely best things. Ever.\" She turned away, shaking her head and chuckling over the pan as she poured out a portion of the thin batter working it over the hot stone with the tips of her fingers. \"Cinnamon.\"\n\n\"I'm serious.\" he muttered through another bite of apple. \n\n\"I know. That's what makes it so great. No one has ever told me I had a flavor before though, so it might be in your head.\"\n\n\"No. Definitely cinnamon. I have a better sense of smell than most, clearly.\" She looked up and grinned at him again before tossing a floppy disk of cooked batter onto his lap. He lifted it and looked at it skeptically.\n\n\"Just eat a bit, pretend you like it, and chuck the rest when I'm not looking.\" He smirked and tore off a piece and chewed it thoughtfully.\n\n\"Is it supposed to be this chewy?\"\n\nShe reached over and tore her own piece off to try. \"No, it should be chewier...but I don't have the right ingredients, so I'm improvising. It's close enough though.\" He shrugged and continued to eat it without comment as she made another.\n\n\"So, Desdemona?\" He asked after they were both settled on the pillows by the fire, her sitting cross-legged and he still reclining nearby.\n\nIna shrugged. \"She is every bit as shifty as your gut is telling you, she is one of the best liars I have ever met, and I'm ninety percent sure it's because at some point she sold her soul to someone for a hot meal and nice dress,\" She grinned, and chuckled, \"but she's My soulless hustler, and she is most definitely on our side. Or, at least, whatever side I'm on. And it goes both ways. Honestly...we don't always agree on how to handle something, and we can get...well I guess catty is word,\" she paused to wink, \"no offense. We rarely see eye to eye on anything of a moral or philosophical nature...but we have a history that goes so far beyond that...so in the end it doesn't matter. \n\n\"It's like this, sometimes when you go to war with someone, and you've fought together, side by side, for long enough, and when you've had to trust your lives to them over and over...well, there's very little that can break a bond and a trust like that.\"\n\n\"You fought in a war with her?\" Feric was surprised by that. Not that he doubted Ina, but he didn't see Desdemona as a soldier...of any kind. Ina would certainly make an excellent scout, at the very least.\n\n\"Pretty much. And it was more or less Us versus Everyone.\" He watched her face darken slightly as she paused. \"I never really mentioned it...but I was involved with some pretty heavy stuff back home. Morrowind is a rough place...but over the years it had gotten worse...there was a poison at the heart of it....literally at the heart of it. But there was also a prophesy that a hero, one belonging to Azura, would remove it. That Neverar did come, shockingly, and she was successful...also shockingly. I...well, Des and I helped. The Neverar was Des's actual sister, you see. They shared a mother...though they were so different from one another, personality wise.\" She smiled weakly at him, \"Emily was so shy, sweet, and desperate to help people, and completely afraid of everything.\" \n\nShe chuckled and looked back into the fire. \"Even the bloody scrib made her nervous. She thought they were 'creepy.' One moment she was squealing because she woke up with an undersize kwama on her leg, and then she'd waltzed into a demon god's house, with a smile and a wave, as if it weren't any more arduous then popping out to chat with a neighbor. She told me after that she had tried to talk him, the insane Demon-God that is, out of world domination...can you imagine? Anyway...that's all beside the point. The point is Des is ok. Your instincts are right, and I can guess what they are...but in this case, I'd hand my own child over to her for safe keeping. Truly. Believe me when I say I would never put you or the others into hands I wouldn't trust like that.\"\n\nHe sighed and nodded. He did believe her, naturally. Her instincts were good too...but he couldn't help but worry. \"I'm still going to be wary. I trust you, but I can't help that.\"\n\n\"Sure, that's what instincts are for. Can't hurt, and I won't take it personally.\"\n\nHe nodded again, though with more satisfaction. That was what he was hoping to hear from her. He expected it...but it was still good to hear it confirmed.\n\n\"I don't suppose we can catch that khajiit friend of hers before he leaves today, do you?\"\n\n\"Dar'basha?\"\n\n\"Yes, something that thief said gave me an idea.\" It had reminded him of his discomfort with the khajiit and made him realize why. There was always at least on khajiit on each hunt, no matter how small the group...and often times more than that. He narrowed his eyes at the fire as he continued to sift through the various opportunities this information could provide...and if they had a khajiit working to help them...\n\nShe chuckled, pulling him from his thoughts, and gave him a sideways grin. \"I thought I saw the wheels turning earlier. You know, it's so sexy when you plot.\" She rolled onto her hands and knees and crawled towards him. Her eyes darkened as she drew close enough to run her lips lightly over his jaw line. \"I don't suppose holding a man at knife point counts toward our usual sex to violence ratio...you know, on top of your little bar room scuffle?\"\n\nHe reached out and wrapped an arm around her waist, pulling her in closer until her body was leaning against him. He loved the way she fit into him like that. He inhaled her scent, held it for one long, happy moment, then sighed heavily. \"I really would like to find him before he leaves.\" She had been kissing her way down his neck, and bit him on the collar when he spoke, making him wince and chuckle at the same time.\n\nShe made an unhappy sound and dropped her head to his shoulder with a rough bump. \n\n\"I thought you were supposed to be the chew toy in this arrangement?\" He offered, smiling into her hair.\n\nHis grin widened as he felt her begin to shudder with silent laughter. \n\n\"Sorry stud, but I can't let you have all the fun, now can I?\" she murmured against his shoulder.\n\n\"I Will get even.\" He whispered against her ear, his voice thick with the promise. He felt her let out a shudder of another kind.\n\n\"Me-ow.\"\n\n**\n\nThey'd caught up with Des's Khajiit and Feric was able to discuss with him the possibility of his 'looking for work' with a group of hunters, or at least sounding out the Khajiit community in the area, where he would have better luck than most outsiders, even if he wasn't local. He agreed it was a sound plan, as did Des when they met up with her and...eventually, left the city with her.\n\nInanna had been surprised. Desdemona had some ideas about setting up the ruins, self defense and what not, and after a brief conversation Feric had offered for her to accompany them back so that she could help Inanna put her ideas to work. \n\nShe wasn't worried, mind, she did trust her...it was just surprising after he'd expressed his concern. She thought that had meant, 'I'll let her help, but we're keeping her at arms length.' Instead here they were in one of the great halls setting up a summoning spell in the middle of the great hall, with his kid, among others, watching curiously. \n\nShe glanced over at Des who was examining her inscriptions for accuracy, pausing to lick her thumb and clean a smudge off the edge of the chalk figure in front of her. Des felt eyes on her and glanced back. \"So, do you think they'll go for it?\" She asked with a curious head tilt.\n\nInanna shrugged. \"Knowing them, probably not, but it's worth a try.\" They were planning on summoning the whole cavalcade of ancestral guardians linked to Inanna, some of which were quite powerful, in the hopes that they might, perhaps, consider playing guard dogs in the ruin for a spell. It was unlikely. There were one or two she could imagine being hesitant but possibly willing, but for the most part it was just going to be her getting her ear chewed off for even asking such a thing.\n\nThey'd done it before...but that was back in Morrowind, and for the sake of the tribe and for their family. That was the key for Inanna. She had a plan she hoped would make them see past the obvious wrongness of the request. Family...that was the key. Ashlanders were generally suckers for it. Of course her plan might just make it worse...but a girl had to do what a girl had to do, and she was just going to have to take that chance.\n\n\"What is it you're doing again exactly?\" Ambrose asked squatting nearby and watching fascinated as Inanna carefully finished drawing out the last Daedric symbol around the outside of the massive circle. \n\n\"We're creating a summoning circle.\" Des answered from inside the circle where she was doing similar work. \"When you create one of these, you have to be careful to create two separate circles, one, the inside circle is the actual summoning spell, the second, the one Inanna is creating, is the far more important one, the spell of binding. You would not believe how many idiot apprentices get themselves killed summoning creatures just because they failed to create a solid binding. Safety first children.\" She looked up and grinned at Ambrose and Aina who were both watching with interest. Inanna noted that Lucas and Mori were hovering farther away. \n\n\"Shadow, can you grab me those tallow candles I left with my bag...actually would you just get the whole bag for me?\" He quirked a brow at her, but did it anyway without complaint, leaving Mori alone. \"Hey, Ginger...yes you, come here.\" Mori looked unimpressed.\n\n\"Ginger?\"\n\n\"I'm sorry, is you hair not a frizzy orange horror?\"\n\n\"No. It's cute.\"\n\nInanna smirked. \"I stand corrected. Now really, come here, I want to show you something.\" Ina looked over her shoulder at the other two. \"Des, why don't you show these two what you're doing. Explain how the summoning works. I'm not as good at exposition.\" \n\nMori joined her and Ina waited until everyone else was out of ear shot before she began speaking. \"You heard what we're doing?\"\n\n\"Yeah.\"\n\n\"You know why we asked those two to come help and watch?\"\n\n\"'Cause they're suck ups?\"\n\nIna's lip twitched, but she managed to still it quickly enough to hide the smile. \"Because they have very strong magica. They have deep wells...deeper than mine or anyone else's in this room. That's the direction their potential lay in, one of their greatest assets and strengths...besides general personality and what not. If we're talking numbers...they should bet on magic. Give me your hand.\"\n\nMori didn't like being bossed around, which was part of why Ina did it so often with her now, but her curiosity was clearly piqued and she willingly gave her hand over for inspection. \"Relax, open up your mind a little...I'm going to read you.\"\n\n\"Like you did with them?\"\n\n\"Just so.\"\n\nShe shrugged and took a deep breath, letting it out slowly, closing her eyes. Ina was surprised at how easily she did it. She was capable of a great deal of control it seemed, over herself and her emotions. Especially for one so young.\n\nIna opened her mind and will to the girl, letting it drift toward her, feeling out the shape of her essence, her will. She was a little bit surprised by the darkness she saw there. Not shocked, as she had certainly expected some, but there was more than she'd counted on. \n\nThe images were fleeting and indistinct, which meant her fate was vague, but either way there would be death and destruction...there had been in her past, and it was reflected in her future. She would die, or she would become death. Inanna pulled herself back a little and realized Mori was staring intently back at her. She wondered if the girl was sensing these things as well. Inanna smiled faintly. \"You were born under the sign of the lover.\"\n\nThe girl's lip twisted up in disgust, which caused Inanna to chuckle. She didn't grow completely serious, but she lowered her voice even more. \"You have what we call, a 'killer instinct', not surprising for a lioness, but it is much stronger and deeper in you. You aren't a fighter...necessarily, not a warrior, though you can fight when you need to. You share your people's abilities, and with practice and care could learn to use magic as a useful aid and tool...but what you really have...is the darkness.\"\n\nMori frowned slightly, but more in thought than confusion or anger. \"I...I have it...or it has me?\" She asked softly. Inanna felt her gut twist. How could one so young...\n\n\"It could go either way.\" she finally whispered.\n\nMori seemed to read the thought in her eyes and smirked. \"I know all about darkness. I don't suppose I need to remind you of what happened to my entire family...to my pride? I...\" her smirk fell, \"I have nightmares...\" \n\nThe darkness receded and Ina was suddenly holding the hand of a very young, very frightened girl. \"No, you don't need to remind me. What you do need to do is decide which way it's going to go.\"\n\n\"That's it? I can't get away from it? I thought...maybe...\"\n\n\"Doesn't look that way. But is that really what you want?\"\n\nShe shrugged. \"I don't know.\"\n\nShe released her hand and straightened. \"Well, there's still time to figure it out. Until then we'll just have to work on keeping that energy focused. It's better to learn to use it instead of letting it control you.\"\n\nHer smirk returned. \"That what you do?\"\n\n\"Of course.\" She said with absolute seriousness. \"That's the only thing to do. Or it will consume you.\"\n\nA flash of anger flickered across Mori's face and she crossed her arms and jutted out her chin, becoming the stubborn, not quite adolescent girl she'd been before the conversation had happened. Ina grinned and pulled out her knife. She pointed it to the ruin she'd drawn.\n\n\"Check this out. This is My darkness.\" She cut her finger, deeply, and held the tip just over one of the chalk lines, held her breath, and focused hard, pulling her will into that first drop as it pulled from her skin and fell to the floor. She could almost feel the impact the drop made, and she definitely felt the surge of raw energy as her blood did its thing. She opened her eyes and murmured a few Daedric words. Mori gasped as the ruin lit up, a bright, burning red. It pulsed with a life of its own. Inanna snapped her hand out and caught Mori's by the wrist to keep her from touching it. \"You don't want to do that, it could smudge and break the binding.\n\n\"What is it?\" Ambrose asked, his attention pulled away from his lesson by the glowing ruin.\n\n\"Blood magic.\" Des offered softly. \"Still got it, I see.\"\n\n\"Unfortunately it's not something one can get rid of.\"\n\n\"Damn handy though. You have to admit.\"\n\nShe only nodded and continued to do the same which each symbol until the entire thing was illuminated. She approached the others finally and turned to stand with them, looking at it. \"I wouldn't normally use that sort of magic, but I'm not much of a summoner and the beings I plan on summoning would respond better if they recognize me right away. This would be too difficult a thing without it.\"\n\n\"There's nothing wrong with it, Ina. You don't need to justify it.\" Des defended. \"I'd be using it all the time if I had the ability.\"\n\n\"Yeah, well, that's you sugar. Alright kiddies, let's take five, I have to get my mojo going before we start this thing. Oh, there you are shadow...can you set those up, one at each directional point? Yeah, perfect.\"\n\nMori sidled up to her and nodded to the circle. \"What's so dark about blood magic?\"\n\nIna glanced down at her out of the corner of her eye. \"It's Daedric. Only those with the blood of a Daedra can do it. Aedra too I've heard, but it's not something the Aedra commonly practice.\"\n\n\"What are Aedra? \n\n\"The Nine, the gods the imperial follow.\"\n\n\"They aren't just imperial. We follow Kynareth and she is one of The Nine.\"\n\n\"I stand corrected once more.\"\n\nMori smirked and Ina smirked back. \"I get what you mean though. So, does that mean we can do it too? Is that why you showed us?\"\n\n\"Just because you worship a Deadra or Aedra doesn't mean their blood is in you.\"\n\n\"But it is.\" \n\nIna's breathing stopped short, \"How do you mean?\"\n\n\"We are of the blood of Kynareth. My parents always told me that. Hey, Guys, did your parents tell you we're of the blood of Kyn?\"\n\nThree voices responded with an unhesitating \"Yes.\"\n\n\"We're the children of Kynareth, that's what we've always called ourselves to my knowledge.\" Aina offered. Ambrose nodded. \n\n\"The legend, which is probably metaphorical, is that Kynareth fell in love with a lion and our people were the result...but there are such stories all over Tamriel. I think the true history is probably much more complicated and that we were created with a specific thought or purpose in mind...but the one thing everyone seems sure of is that our blood is infused with that of our Lady's, and that this is what gives us our ability to heal and to transform.\" \n\nInanna looked up to see Des giving her a look that said, yes indeedy, I am thinking exactly what you're thinking.\n\n\"Damn.\" She shook her head in amazement.\n\n\"I know.\" Des agreed.\n\n\"What? What is it?\" Lucas asked, looking somewhat alarmed.\n\n\"Relax luv...it's nothing imminent...but...I think\u2014\"\n\n\"\u2014we just figured out the 'why'.\"\n\nInanna cast a dark look in Des's direction. \"I had that one, thanks.\" Des only gave her a cheeky grin.\n\n\"And what is this why exactly?\" Aina pressed.\n\nBoth Ina and Des opened their mouths to speak, but it wasn't their voice that answered. \"The why is our blood. We're being hunted for our blood. If it's like Inanna's then it can be used for powerful magic.\"\n\nMori didn't really look up at her for approval, but Ina did catch her eyes flickering to hers in a lighting fast, almost reflexive, movement, and Inanna didn't quite beam proudly back at her, but she did return the flicker and straighten her back with a serene air.",
        "\"Oh dear.\"\n\nThey all looked to Desdemona who was frowning and tapping her chin thoughtfully.\n\n\"What is it Desi?\"\n\n\"Well you're not going to like it.\"\n\n\"I already don't like it, how can it get any worse?\"\n\nDes winced at that and Ina couldn't help but wince as well. Great, just great...'how can it get any worse' is the ultimate set up to 'here's how'...\n\nDes sighed.\n\n\"Yeah, yeah, I just jinxed myself...spill.\"\n\n\"There are three types of people who use blood magic. There are witches: waste witches and weald witches are essentially the same once you cut away all the cultural issues, identifiers, and taboos. Then there are the 'special' Daerdra worshipers...one might throw you in with that lot perhaps. And then there are the third kind.\" They both knew what the third kind was. Inanna winced even harder as they both intoned the word together: \"Necromancers.\"\n\n\"Well hey, on the bright side, this is another lead, right?\" They both turned to Lucas who shrugged and gave them a rare lopsided grin. Inanna narrowed her eyes at him.\n\n\"Lucas, why do I get the impression that your rare shows of pleasure are intrinsically linked to my immediate discomfort?\"\n\nHis face deadpanned and he crossed his arms over his chest. \"I don't know what you're talking about.\"\n\n\"Like hell you don't.\" she glanced over at Aina who was suddenly very interested in the ceiling. Oi. \n\nShe looked back at Lucas and grinned evilly. \"Keep smiling chuckles,\" she turned and made her way to the sleeping quarters where she planned to rest up before the 'big todo', \"'cause I'm the one who had to hold down daddy dearest when he caught 'someone' getting frisky in the basement.\" She heard Aina gasp softly but ignored them both. \n\nLucas, however, only scoffed. \"You should talk.\"\n\n\"Lucas!\" Aina breathed in surprise.\n\nIna only turned with a grin. \"Oh I should...because unlike you, I'm in my early 80's and more importantly; My daddy is two mountain ranges and one very wide sea away. I'll talk all I want, thank you kindly\" \n\nShe did give poor Aina a sympathetic wince. \"We should probably talk about that at some point. Sorry.\" Aina merely nodded, looking flustered and bemused.\n\nWell...aren't we all, she thought as she made her way down the hall. Aren't we all."
    ],
    "authorname": "Enithermon",
    "tags": [
        "fantasy",
        "weres",
        "dark elves",
        "suspense",
        "teasing",
        "jealousy",
        "feric",
        "orcs",
        "inanna"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/hunting-the-hunter-ch-06"
}