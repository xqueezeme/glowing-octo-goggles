{
    "title": "The Tides Of War Pt. 05.5",
    "pages": [
        "Part 5.5 \n\nChapter 22 \n\nThe Officers Call had been delayed until David got back from the Palace. \n\nHe opened the meeting by telling them a British Army inspection team was coming to Kanda to inspect the 'Rabble' that guarded the Pass. \n\nThe reaction of his officers were what he expected: Anger and disbelief. \n\nAfter they had cooled down, he went on to say the label \"Rabble\" had been conferred on them by their former General, Sir Reginald Fitzroy. \n\nHe smiled. \"The Prince has suggested - and I concur - that the \"Rabble\" be paraded in the city. Therefore, Gentlemen, the soldiers of Tiger, Cobra and Panther Companies will pass in review in front of the Prince and his guests. Subedar Major Para will lead the review. I am sure he will ensure our \"Rabble\" well be well turned out.\" \n\nThe glint in Para's eyes spoke volumes. \n\n\"Also, I have reviewed the recommendations you provided me regarding command of Panther Company and I concur that Havildar Rhana has demonstrated the qualities necessary for command. I am promoting him to Subedar and look forward to his leadership of Panther in the upcoming parade.\" \n\nThe smiles of his officers was more than sufficient validation of his decision. \n\n\"It has also been suggested that all the weapons recovered from our engagements at the Pass be put on display for the inspection team. I'll leave Subedar Hangar to arrange that.\" \n\nThen David spoke about the Magnesium, \"Memsahib Doctor Fletcher has suggested a solution for the problem of illumination at night at the Pass.\" He went on to describe its brilliant light and how, once ignited, it was almost impossible to extinguish. \n\n\"We need a means of igniting the powder and delivering effectively it without it endangering our men. What we need to devise is a receptacle for the powder that includes some sort of fuse that will give the thrower four or five seconds before it ignites. The receptacle must be tough enough not to break once thrown or the powder will disperse without generating the illumination we need. \n\nEveryone started suggesting things and David smiled knowing that, between them, they would arrive at a solution. \n\nBefore the meeting broke up, Turin reported that patrols continued to reconnoiter the Pass and found that it remained blocked at point about a 1000 yard from the entrance, mainly as a result of new avalanches. That indicated the snow was melting during the day and triggering the avalanches. He estimated that it might be possible to reach the cleft in four or five weeks. \n\nOver the next nine days, the Fort was a beehive of activity in anticipation of the review. Equipment and clothing was cleaned and mended; saddles and tack was polished until it gleamed; the horses were brushed and brushed again until they shone \n\nSubedar Major Para would lead the units out to drill using David's Thor for his mount. \n\nTwo days before leaving for Putan, a dress rehearsal was staged outside the Fort. David sat on Kahn to receive the salute, which was rendered by Subedar Major Para, using his kukri in place of a sabre. Behind him came the colour bearer with the Lovat green flag emblazoned with 1<sup>st</sup> Khana Rifles. Turin and Tiger Company followed, its guidon proudly displaying the crouching Tiger. Sultar's Cobra Company trailed Tiger Company with Rhana following at the head of Panther. \n\nDavid's chest swelled with pride at the sight of his command, every man's back ramrod straight as they passed in review. \n\nChapter 23 \n\nPeshawar led General Sir Reginald Fitzroy and his staff of three officers into the audience room of the Prince, who for once was dressed in the full robes of a Maharaja. \n\nFitzroy bowed his head and introduced his Officers, Major's Barton and Keeling and Captain Fitzroy. \n\nThe Prince appraised the men before him. The General he judged to be in his sixties, short with a prominent waistline. The redness of his face was emphasised by his white mutton chop whiskers. He had an impatient look verging on arrogance about him. \n\nOf the two Major's, Barton had all the hallmarks of being a \"yes man,' whilst Keeling had a look of intelligence to go with his professional bearing. Keeling's face regarded the Prince coolly. \n\nThe Captain did not favour his father, he saw. He was stick thin with a pasty complexion and is eyes were darting all about the room as if expecting an attack. \n\nAfter welcoming them, the Prince bid them to sit, waiting for the General to start the engagement. \n\nThe general coughed to clear his throat and began, \"Sir, Her Majesty's government is alarmed at the reports that the Khana Pass is being guarded by an undisciplined rabble. As you are aware, that Pass, along with the Khyber, are the two main routes by which a land attack into India could be launched. Therefore, Her Majesty's Government think it only prudent that the British Army should guard the Pass.\" \n\nThe Prince gave a thin smile, \"On what reports do you base these assumptions General?\" \n\nThe General coughed again, and Major Barton replied, \"The report came from no less a person than your own General, Sir.\" \n\nThe Prince looked surprised, \"The man you mentioned is not my General. He was stripped of his rank and imprisoned for treason for conspiring with the Afghans and Russians to attack this kingdom. Unfortunately, he escaped, along with several senior officers. Should they return to Kanda they will be executed.\" \n\n\"So no one is in charge of guarding the Pass?\" Major Barton interjected \n\n. \n\n\"On the contrary,\" the Prince replied, \"I have a Colonel who is responsible for that duty. Actually, a former Officer in your command, General, and one whose performance in several battles does great credit to Her Majesty's army.\" \n\nThe four officers looked at each other, trying to think of whom the Prince could be referring. \n\nThe prince continued, \"You will have the opportunity to meet him tomorrow and see the . . . \"rabble\" he leads. Before the Pass closed this year ,he and his men repulsed four attempts by the Afghans to take the Pass. An effort during the course of which the Afghan's lost at least 200 men, for the unfortunate loss of one man from our forces.\" He paused before continuing, \"Am I right in saying General that your troops are armed with the Martini Henry rifle?\" \n\nThe general gave a curt nod. \n\nThe Prince smiled, \"I thought so. Then you may be interested in inspecting what the Afghans were armed with.\" \n\nHe led them to another room where the weapons recovered from the engagements were laid out. He picked up a Russian rifle from the 168 that were on display and handed it to the General, \"I am informed that this is a bolt action rifle firing a smokeless cartridge that is vastly superior to the Martini Henry.\" \n\nHe watched in amusement as the officers examined the rifles examining, their silent sharing of looks of concerned surprise communicating volumes. \n\nFinally the General blustered, \"So the Afghans have a better rifle than the Martini Henry. All that proves is that you are as disadvantaged as our troops are.\" \n\nThe Prince shook his head, \"I am sure the Afghans wish that were true but, unfortunately for them, it is not. Our soldiers have a rifle considerably superior to these,\" he said, indicating the captured rifles. \n\nHe went to the door and called a guard. The rifleman came in and gave a sharp present arms. The kukri on his web belt clearly identified him as a Ghurkha. The Prince told him to stand easy. \n\nHe let the British officers stare for several moments at the rifle in the soldier's hands, before resuming the conversation, \"This is a Cartwright .303 rifle. It holds 10 rounds of smokeless-powder ammunition in its magazine and, in the hands of a well trained professional soldier such as this, can discharge those rounds in less than fifteen seconds. It has an effective killing range of 1500 yards and all the troops guarding the Pass are armed with one.\" \n\nThe Officers gathered around the motionless rifleman looking at the rifle. \n\n\"Where did you get these weapons?\" demanded the General. \n\nThe Prince smiled sweetly, \"They were procured in England by my Colonel.\" \n\nNow irate almost past his ability to control himself, the General demanded, \"And just who devil is this Colonel you keep speaking of?\" \n\n\"His name is Colonel David Ramage, formally of the 2<sup>nd</sup> Ghurkha Rifles. I understand he was forced to resign his commission from your command.\" \n\nThe officers froze, the captain's naturally pasty face going even whiter at the disclosure. \n\nThe General blustered, \"That man chose to resign his commission rather than face a general court martial for willful disregarding an order in combat; in my book a coward's way out.\" \n\nThe Prince's face took on a look of surprise, \"Really? How remarkable. You see, amongst my troops I have a number of Ghurkhas, men who were present on the day of the incident to which you refer. In light of your characterisation of the event, I find it hard to understand their decision not to re-enlist in the British Army due to their distaste for the outcome of that enquiry. In fact, it was based on their information about what actually occurred that I offered Mr. Ramage a commission in my Army.\"  \n\nA deathly hush fell upon the group. \n\nThen the Prince smiled, \"But enough of the past, you gentlemen must be hungry and tired. Food has been prepared for you and your quarters are ready. Tomorrow you can judge for yourselves the calibre of the men who guard the Pass, and speak with Colonel Ramage in person.\" \n\nDavid, followed by his command, had arrived at the city in the early morning that same day. Entering at the West gate, they followed the road, which led around the back of the Palace before ultimately arriving at the Royal Stables. \n\nAshar Kahn was there to greet him, while his grooms showed David's men where to put their horses. As the soldiers and stable staff went about their duties, Ashar told David his men would be shown to quarters after they had seen to the welfare of their horses. \n\nWith a twinkle in his eyes he said, \"Memsahib Susan is in her apartment, should you wish to see her. I can take care of Kahn for you.\" \n\nDavid stuttered his thanks. Throwing his saddlebags over his shoulder, he set off to find her. \n\nAn hour later she was laid across his naked chest, kissing his neck, \"You smell of horse,\" she whispered. \n\nHe chuckled running his hand over her naked back, \"And you smell of disinfectant.\" \n\nLater they bathed together in the large sunken bath. Afterward, he watched as she wriggled her hips getting into her tight jodhpurs, tucking in the silk shirt she wore. That almost resulted in the need for another bath. \n\nThey had a late breakfast served on the terrace by two Indian girls whose continuous giggles as they attended the couple unnerved David beyond what the snap of Afghan bullets had been able to accomplish. \n\nSusan chuckled delightedly at his discomfort, \"Darling they are only doing that because they approve of my choice of man.\" \n\nHe shrugged his shoulder, but before she could frame a suitable response, a disturbance in the streets below distracted them: A column of red-coated British soldiers marching towards the Palace gates, lead by four mounted officers. \n\nDavid squinted his eyes, \"General Fitzroy himself,\" he muttered, \"and Barton. Don't know the other Officer, but . . . my God, Captain Clarence Fitzroy! The old boy must have placed him on his staff. At least he can't harm anyone there,\" he said, the bitterness apparent in his voice. \n\nSusan put her arm around him, \"David, you have to meet them tomorrow, but the Prince asked that you keep out of the way today. So, can you bear to spend the day with me?\" \n\nDavid frowned. \"Does the Prince know about us,\" he asked. \n\nSusan laughed, \"I think the whole Palace knows about us. That costume I wore was Princess Yasmin's, and she knows why it is worn\" \n\nThe following morning Peshawar led David down along the lower level of the Palace. Finally, coming to a halt by a rather nondescript door, he indicated that David should enter. \n\nThe marble floored room appeared empty, except for the throne sat on a raised dais. \n\nThen he noticed the Prince between the columns that opened the room to the outside. He was standing by the rail looking out over the city. He turned, seeing David, and smiled at the look of surprise in his eyes before walking towards him, \"I know, my friend, you have never seen me in the Royal robes before. But I have had to make an exception for today, to remind our guests who rules here in Kanda.\" \n\nThe Robes were magnificent: The coat, of white silk, had gold threads running through it; a broad, blue silk sash was fastened by a star encrusted with diamonds; around his neck he wore a heavy gold chain; the turban he wore had a huge ruby in the centre; his fingers sparkled with diamonds and emeralds, and a large pearl hung from an ear. \n\nThe Prince chuckled, \"Contrary to appearances, I don't mind telling you, David, that it is most uncomfortable.\" \n\nDavid smiled at the comment and the tensions of the coming meeting started to dissipate. \n\nIt was true that the men he was about to meet had orchestrated the ending of his career in the British Army, but that had led to his meeting with this man, and he had changed David's life for the better. \n\n\"Peshawar has informed Subedar Major Para that the parade will start when we go out on to the terrace.\" The Prince chuckled, \"he informs me that the men were up before dawn cleaning their equipment and horses.\" \n\nHe looked keenly at David, \"How do you feel about meeting these men David. The men who ruined your career?\" \n\nDavid paused before replying, \"I should feel angry I know, Sir, but instead I feel gratitude. Indirectly they have given me a better life. A life I would not have had otherwise.\" \n\nThe Prince looked fondly at David, \"Their actions did a great service for me and my country, David,\" he said as he moved back inside, seating himself on the throne. \n\nPeshawar announced the British officers and stood to one side as General Fitzroy came bustling in with the other three officers behind him. They came to an abrupt halt, seeing David stood at the right hand of the Prince on his throne. \n\n\"Good morning gentlemen. I trust you all slept well and your quarters proved adequate?\" the Prince purred. \"I should like to present my Colonel in command of the 1<sup>st</sup> Khana Rifles. Colonel Ramage.\" \n\nDavid took a step forward and saluted General Fitzroy, who hesitated a second before returning the salute. \n\n\"You may present your Officers to Colonel Ramage, General Fitzroy,\" the Prince said with a hint of a smile on his face. \n\nThe General coughed, \"Major Barton my aide de camp\" he murmured. \n\nBarton looked at David hesitating before offering a salute. David returned it adding, \"The Major and I have met before\" \n\nThe general moved to the next officer, \"Major Keeling, representing central Command at Bombay.\" \n\nMajor Keeling gave David a sharp salute, which he returned. \n\n\"I've not had the pleasure of meeting you before Major Keeling,\" David murmured, thinking he must be on the staff of Lieutenant General Horace Makpeiece, Supreme Commander, India. \n\n\"No, Sir, you have not. I'm here to evaluate the military situation at the Pass and report back to my superior.\" \n\nThe General moved next to his son, \"Captain Fitzroy, a member of my staff.\" \n\nDavid looked at him, his face had gone a deathly white and his eyes wouldn't meet David's. \n\nHe offered up a sloppy salute, to which David replied crisply and precisely. \n\n\"Are yes, Captain Fitzroy, we have met before.\" \n\nThe Prince smiled, \"Well, gentlemen, now that we know each other, I'm sure there are questions you wish to direct to Colonel Ramage.\" \n\nMajor Keeling was the first to respond, \"How many men do you have to guard the Pass, Colonel Ramage?' \n\n\"Which Pass? The 1<sup>st</sup> Khana Rifles guard two, Major Keeling.\" Keeling frowned, David continued, \"The 1<sup>st</sup> Khana Rifles are responsible for guarding both the Patena and the Khana Passes from invasion.\" \n\nThere was silence as the full implication of what he had just said sank in. \n\nBarton broke the silence, \"We have been given to understand that only a rabble guards the Passes.\" \n\nDavid's eyebrows rose, \"The 1<sup>st</sup> Khana Rifles is comprised only of Ghurkha troops, over half them trained by the British Army. I'm sure I don't have to tell you gentleman about the fighting abilities of a Ghurkha soldier. During the engagements that have been fought since the Rifles were formed, on one occasion only 25 Ghurkhas blocked the assault on Khana Pass of several hundred Afghan warriors. After the attack we counted over 200 dead Afghanis.\" \n\n\"But how many troops do you command,\" the General demanded. \n\nDavid smiled, \"The current muster book stands at 332. Of those I have 250 that can be put into the field at a moment's notice.\" \n\n\"Pah! I should like to see these troops,\" the General said belligerently. \n\n\"And so you shall,\" the Prince said, rising from the throne and moving out on to the terrace. \"I should like you to take the salute General Fitzroy,\" the Prince murmured. \n\nThey looked down on the wide boulevard below them as, in the distance, a band struck up a military march. The Prince smiled at David and whispered an aside, \"'Over the Hills and Far Away,' I heard a military band play it at Oxford and made it a staple for the Royal band upon my return. Rather appropriate, wouldn't you say?\" \n\nDavid watched the faces of the British officers as Subedar Major Para came into view with the colour bearer behind, then Turin in front of his Tiger Company, arrayed in ranks of ten. Cobra and Panther Companies followed crisply. \n\nMajor Keeling gasped, \"They're cavalry!\" \n\n\"No, Mounted Infantry,\" David replied. \n\nAs Para drew level he gave the salute with his kukri. David's arm snapped up instantly to return it, followed by the British officers. \n\nDavid's heart swelled with pride at the turnout of his men as they passed. \n\nWhen the last rank disappeared around the bend of the boulevard, the Prince turned to the assembled officers, \"I'm hardly one to judge, gentlemen, but those troops hardly look like a rabble to me.\" \n\nThey returned inside where refreshments were served. \n\nA short time later Para, Turin, Sultar and Rhana joined them and David introduced them to the General and his staff officers. The Prince noticed that General Fitzroy, his son and Major Barton kept to themselves, while Major Keeling was in deep conversation with the Ghurkha Officers. \n\n\"I would hazard a guess that Major Keeling is the one to convince here,\" the Prince murmured to David. \n\nAt the reception later that evening, has the General was availing himself of the Prince's malt whisky, David moved out to the terrace to light a cheroot. Turning at the sound of footsteps, he found Major Keeling approaching. \n\nKeeling accepted David's offer of a cheroot, \"At Subedar Major Para's invitation, I took the opportunity to visit your men today. Colonel. I was struck by the loyalty the men have for you. You failed to mention that you were present at all the engagements that took place at the Pass. I have to say, I'm impressed by what you have accomplished.\" \n\nHis voice lowered as he looked around to make sure he wasn't being over heard, \"The British Army is being stretched like at no other period in its history. The Sudan and South Africa are close to war, and we are not prepared for it. The War Office is stripping troops in India to serve in those coming conflicts, leaving barely enough men to guard the Khyber Pass. \n\n\"The Army has begun to be equipped with weapons like yours, the Lee Metford rifle, but they will go to the Armies of Sudan and South Africa first. It may be a year or more before we have them in India. If we had to station troops in Kana, we would have been badly exposed to a serious Russian threat to the Khyber. ",
        "So I'm delighted to say that I've full confidence in the ability of the 1<sup>st</sup> Khana Rifles to carry out the task of guarding the Khana Pass.\" \n\nDavid was surprised at Keeling's willingness to share with him such a frank assessment of the British situation. \n\nKeeling continued, \"On a personal note, there are going to be changes in the command structure here in India. General Fitzroy is to be retired along with his son.\" \n\nDavid looked up, startled. \n\nKeeling chuckled mirthlessly, \"Command at Bombay are well aware of what transpired when you resigned your commission. It's not the first time an incident like that had happened. The fact that so many Ghurkhas had declined to reenlist and so few in Nepal were willing to enlist, had a significant bearing on his dismissal.\" \n\nStubbing out the remains of their cheroots, they turned to return to the reception. \n\n\"Thank you for being so honest with me, Major Keeling. I assure you, I'm deeply grateful,\" David said. \n\nThe following day, after the British officers' departure, David was once more in the company of the Prince, now dressed in shirt and trousers. \n\n\"I had a long discussion with Major Keeling last night,\" he told David, \"He said he was confident that you could hold the Pass.\" \n\n\"He confided much the same to me Sir.\" \n\n\"This coming spring there will be a major battle at the Pass won't there, David?\" \n\nDavid shrugged his shoulders, \"I would assume the Russians have reached their own understanding of the strained condition of the British Army, as Major Keeling described it for us. They may well realize they won't have a better opportunity of forcing their way into India than they will this spring. They know the Khyber has been the traditional route into India for centuries, and they know the British army is concentrated there. Khana Pass may look the easier target. If we manage to stop them here, they will have to concentrate on the Khyber. But I very much doubt that they would be willing to commit any significant numbers of Russian troops until a Pass has been breached.\" \n\nThe Prince chuckled, \"Everyone knows that the Afghans raid into India. It's almost regarded as a national sport. So no one much cares or notices. But if the Russians invade, then that's a direct threat against a sovereign nation. For all intents and purposes, an attack on England itself.\" \n\nDavid nodded his head in agreement. \n\n\"I think, when the Pass reopens, that Susan would be better positioned at the Fort, where her skills would be better appreciated and more readily available,\" The Prince added. \n\nDavid nodded in acknowledgment, \"She's returning with me to the Fort today, Sir, with supplies for the hospital.\" \n\nChapter 24 \n\nSusan rode Tana beside him, with a rifleman driving the cart behind them. \n\n\"So the Rifles passed the inspection?\" she asked. \n\n\"Yes, it seems the Army does have some honourable officers who can see sense after all.\" \n\nSusan laughed, \"Have you decided how you are going to use the magnesium yet?\" \n\nDavid shook his head, \"Turin and Sultar are working on it. Essentially, we need a fuse for igniting it and something to house it so it can be thrown in sufficient concentration and quantity to generate the required illumination when and where we need it.\" \n\n\"Well, make sure that they are careful. It's not the sort of material to take chances with. I've been giving this some though, and I think you'd be better using it in a rocket rather than throwing it,\" Susan replied. \n\nDavid looked at her in surprise, \"Darling, would that be possible?\" he asked. \n\n\"I don't see why not. Rockets are propelled by gunpowder with a container at the end of the rocket for an explosive charge. Your rockets would contain Magnesium instead. The heat and flame of the gunpowder could be made to ignite it. Well, that's my theory anyway.\" \n\n\"Susan that's brilliant!\" he said, excitedly, \"If we only had a means of making them\" \n\n\"Well I've seen them going up in the city, when someone gets married. Perhaps someone there makes them.\" \n\nThe Fort had returned to normal after the furor of preparing for the inspection. Men went about their duties supervised by their NCOs. \n\nDavid wasted no time informing his officers of Keeling's decision regarding the Rifles' future, knowing they would pass on the information to the troops. \n\nHe turned to Subedar Hangar, \"Can you return to the city and locate anyone who makes fireworks, rockets in particular. And bring them out to the Fort with their materials for making them.\" \n\nHangar frowned, \"Of course, Colonel Sahib, I'll leave immediately\". \n\nDavid explained Susan's suggestion to them, seeing the light of understanding appearing in their eyes. \n\nTurin said a patrol had been dispatched to the Pass and that they should have their report on conditions there the next day. Para said six mules and three carts had arrived from the Horse Master. Also, the building materials for improving defenses in the Pass had been arriving and were being stockpiled, but they were still waiting for sufficient rope to arrive for the blocks and tackles. \n\nDavid was in his office when Susan came in. She smiled and sat down opposite his desk. \n\n\"Have you finished your restocking all ready\" he asked. \n\nShe nodded, \"All done. I've been checking some of the work your aid men have done. They brought their patients for me to check. They had done it right.\" \n\nHe smiled back, \"So where did you store the Magnesium,\" he asked. \n\n\"I've put it in my bedroom, since I won't be using it as a bedroom anymore,\" she said demurely. \n\nHe looked at her, surprised by her frank admission, \"Susan we should get married. The problem is there's no minister in Kanda.\" \n\nShe laughed, \"Well, that's not the most romantic way of asking someone to marry you. But darling, I can wait until we find someone. Anyhow, in God's eyes we are already married,\" she said softly, coming around the desk and kissing him. \n\n\"I'll buy you a ring the next time I'm in the city, darling,\" he promised. \n\nThe following morning, Susan left with an escort of four riflemen. The parting had been sad, neither wanting it. But both knew they had duties to attend to that couldn't be put off. \n\nLater that morning, three large wagons arrived with oats and fodder for the horses. \n\nDavid was informed the wagons and twelve mules were to stay at the Fort after unloading. \n\nWith nearly 300 horses and mules to feed, it could have posed a problem except for the ready grazing available just outside of the Fort. The winter rains had assured an abundance of grass to feed them. \n\nTurin suggested that some of the building materials could be transported and stored at the entrance to the Pass, to reduce the time of transportation from the Fort. \n\nDavid agreed, and the wagons were reloaded ready for the following morning. \n\nThe patrol returned from the Pass, to say they had managed to get to within half a mile of the Cleft before being halted. \n\n\"The sun is melting the snow on the crests, Colonel Sahib, and causing avalanches. But in the narrowest passages it only gets sunlight for perhaps two or three hours a day,\" the Naik patrol leader reported. \n\nAt the Officers Call that day, David explained he wanted no hold ups, \"Once we can safely get men up to the crests, I want those lookout posts expanding to take ten men. The key to holding the Pass will depend on the lookouts on either crest. \n\n\"If, as I suspect, the Russians intend to use artillery against us, then they will need a spotter to report the fall of shot. They must be prevented from this, therefore the lookouts must be our best marksmen.\" \n\n\"They will surely attack at night Colonel Sahib,\" Sultar murmured. \n\nDavid nodded, \"If it were me, I would,\" he replied. \n\nPara coughed, \"Do we have anything to illuminate the crests and cleft yet Colonel Sahib\" \n\n\"I'm hoping when Subedar Hangar returns we may have a solution to the problem,\" David replied. \n\nHangar returned later that afternoon, David was in his office when he appeared at his door with a man and a boy, \"This is Mr. Tamar and his son, Colonel Sahib\" Hangar said. \n\nMr. Tamar looked to be in his late fifties, whilst the boy looked, to David, to be a teenager. \n\nMr. Tamar looked worriedly at David, wondering why he was here. \n\nHe tried to put him at ease and asked about his business, finding out that it was a family-run enterprise that stretched back four generations. \n\nDavid explained he wanted a rocket that could explode with a dazzling white light, going on to say he had the material for the light, but could it be harnessed to Mr. Tamar's rockets? \n\nMr. Tamar explained he would need to see the material first. \n\nDavid had Hanga bring the tin tub from Susan's bedroom. Expecting a powder, when David removed the lid he was surprised to find what looked like metallic shavings. \n\nTamar smelled the contents then picked up a pinch and rubbed it between his fingers. Finally, he took a small amount outside and placed it on the ground. Then, using a long taper, he placed the burning end into the small mound of shavings. Nothing happened for a second or two and then, with a whoosh, it ignited with a dazzling white light and a thick pall of white smoke. \n\nMr. Tamar looked satisfied, \"How high does the Sahib wish the rocket to fly?\" he asked. \n\n\"Only a hundred feet. We wish the bright light to show what is on the ground at night\" David explained. \n\nTamar nodded understanding, \"And how many rockets will the Sahib need?\" \n\n\"At least a hundred,\" David replied. \n\nTamar looked worried, \"Sahib I do not have here sufficient gunpowder or other materials to make that number.\" \n\n\"We can give you gunpowder and perhaps your son can return to bring the materials you need from the city.\" \n\nTamar smiled and began telling his son what was needed, while Hangar arranged for a mule cart and escort to take him to gather the necessary materials. \n\nMr. Tamar moved his cart outside of the Fort and set up his camp. \n\nThe next morning David rode out with the patrol to check the Pass. \n\nAt the entrance, the men put on their overcoats and gloves to combat the freezing cold wind that blew down it. \n\nAs they slowly rode down the Pass, David could see that the snow had gone from the heights. Not until they were three miles into it did they see remnants of it shaded spots along the route. \n\nThey were less then half a mile from the Cleft before the way became blocked. David could see the top of the buttress through his telescope. Icicles hung down, reflecting the sunlight, and he noticed they were dripping. \n\nThe ground underfoot was a mixture of mud and slush, with small streams of water soaking into the sand. \n\n\"It has retreated nearly fifty feet since the last patrol, Colonel Sahib,\" the Naik said pointing to a mark on one wall of the gorge. David watched as he marked the current position. \n\nThey returned to the entrance and made camp for the night. \n\nAs he and the patrol rode through the Fort gate, David noticed that Mr. Tamar's camp had grown. Several others were now helping and he saw Sultar amongst them. \n\nBack in his quarters, he asked Hanga to prepare a bath and arrange a meeting with his officers in an hour's time. \n\nOnce the Officers were sat down he began, \"At he rate that the snow is melting, I would expect us to be able to start work on improving the defenses in the Pass by next week. One of the things I have been thinking about is how we can register the fall of shells from the mortars. The cave lookout point is directly above our camp, as is the other one. As I remember it, the cave crest is fairly clear for about a mile along it. So in order to see the fall of the shells, we need to be looking down at the other end of the cleft.\" \n\nHe let his comments register with them. \n\nTurin was the first to reply, \"We would have to move the lookout post almost a thousand yards in order to do that, Colonel Sahib.\" \n\nDavid nodded slowly. \n\n\"And how would we report the fall of the shells to the mortar crews in the valley, Colonel Sahib?\" Rhana asked. \n\nDavid smiled, \"That is the next problem we must solve gentlemen\" \n\nHe changed the subject and asked if any progress had been made with the rockets. \n\nSultar replied that he could see a demonstration that night. He went on to explain the problem had been igniting the Magnesium. The gunpowder propelling the rocket burned so quickly, that it would not reliably ignite the Magnesium, but Sultar had overcome this by placing three match heads inside it. The burning gunpowder had ignited the match heads and wooden shafts they were attached to. Experiments had proven the slower burning match heads were almost completely reliable igniters of the Magnesium flakes. \n\nHe then produced a bag made from cloth. It was tightly bound at the neck, from which a fuse stuck out. \n\nDavid immediately grasped the idea: An illumination grenade! \n\n\"I've taken the idea of using match ends at the end of the fuse. The bag is soft enough not to burst when thrown. You can see the result tonight with Tamar's rockets.\" \n\nHe handed the bag to David. He hefted in his hand. It weighed about half a pound he judged. \n\n\"What about the fuse?\" he asked. \n\n\"Its ordinary cotton cord soaked in tallow and gunpowder, Colonel Sahib.\" \n\nHe removed one from his pocket; the end of the fuse had three match heads bound to it. They went outside so Sultar could demonstrate. \n\n\"The fuses are all cut to give five seconds before exploding,\" he said, lighting it and tossing it on the ground in front of them. \n\nThe fuse hissed with a red glow until it reached the match heads then burst into flame. \n\n\"We could use these at the Cleft Colonel Sahib,\" Sultar said. \n\nDavid congratulated him, saying he looked forward to the demonstration. \n\nOnly the oil lamps inside the barracks and offices cast their light across the parade ground as David, accompanied by his officers made, his way outside the Fort to Mr. Tamar's encampment. \n\nMr. Tamar welcomed, him introducing him to his two other sons who had come from Putan to help him. \n\n\"I think I have succeeded in what the Sahib asked for. It took a little trial and error to find the correct proportion of gunpowder to lift the rockets to the desired height. I also had a problem getting the Sahib's substance to ignite. But you may judge for yourself.\" \n\nHe picked up a rocket from a pile of about a dozen and showed it to David. The rocket was about 2inches in diameter and roughly two feet long. It was attached to a cane stick about 36 inches long. \n\n\"The Sahib's substance is packed in this part of the rocket,\" he said indicating about five inches from the tip of the rocket. \n\nOne of the sons stuck a metal rod with a vee-shaped end into the ground and Tamar placed the rocket so the cane rested in the vee, the end of which was just below the body of the rocket. \n\nEvery one moved back as Tamar lit the fuse. \n\nFor a few seconds nothing happened and then, with a whoosh, the rocket took off, climbing almost straight up and leaving a trail of red sparks behind it. \n\nDavid followed the red glow until it faded and then, suddenly, the night sky was lit up with a brilliant white light that illuminated everything below. \n\nDavid's eyes were for a moment dazzled by the light, which lasted for about six seconds before it went out, leaving a shower of brilliant sparks falling to the earth. \n\n\"That rocket Sahib climbs the highest, but I have made others that explode closer to the ground.\" \n\nHe demonstrated the second design. This one didn't illuminate as much area as the first, but the light lasted slightly longer. \n\nDavid ordered 150 of this size and 100 of the longer range size, an order that delighted Mr. Tamar. He told David it would take four days to complete the order. \n\nSultar then demonstrated his 'grenade.' After lighting the fuse, he threw it overarm out into the darkened waste ground. David heard the plop as it landed, and then a second later it exploded in a shower of white sparks and a brilliant white light that lasted for eight or nine seconds before fading. \n\n\"If the Magnesium is not so tightly packed it burns longer, Colonel Sahib,\" a smiling Sultar explained. \n\nDavid laughed, congratulating him, \"It seems, gentlemen, that our illumination problem has been solved\" \n\nTurin solved the problem of signaling the fall of shells two days later. \n\n\"I got the idea from the rifle range, Colonel Sahib. We use flags to warn the butts when we are about to fire and to help indicate where on the target the bullet has hit. So why not use flags during the day to direct the fire? \n\nIf we had two flags - say a red one and a green one - the red would mean to increase the range and the green one to reduce it. There are only four marks on a mortar, so one wave of a flag would mean either reduce it by one mark, or increase it by one mark depending on the colour of the flag, Two waves would mean reduce or increase by two marks and so on. \n\n\"Waving both flags together could be used to adjust the fall of the shells to the left or right: Wave both flags in the direction - left or right - the fall of the shell needs to move and the mortar crews would move their alignment in that direction. \n\nSomeone on the forward lookout could signal someone overlooking the camp, and they could signal the ones firing the mortars. We could use a similar method at night using a white lantern and lanterns with coloured glass. The white lantern would let our people know where to look for directions. Moving a red lantern up and down over the white lantern would mean to increase the range, a green lantern moved up and down over it would mean a decrease. Moving the red and green lanterns sideways to the left of the white lantern would mean move the shot left, waving them sideways to the right of it would mean right. We would shield the lanterns so they couldn't be seen from the enemy side.\" \n\nDavid was amazed at the simplicity of it, giving it his immediate approval. \n\nTurin had teams practicing the new signaling system, with one man outside the Forts wall signaling a man on the Fort's wall, relaying it down to the mortar crews inside the Fort. This reproduced, in miniature, the situation they would face in the Pass: Sending signals from one high point to another and then down into the mortars in the Pass. \n\nThey practiced both day and night signaling, using specially adapted oil lamps Hangar had altered for night firing. While David did not expect much mortar firing at night, having the ability to do it might prove critical and he suspected the Russians were unlikely themselves to have solved that problem for the type of situation they would find in the Pass. \n\nMeanwhile, the clothing, blankets and other equipment necessary for doing battle in the Pass was checked and rechecked. Men were clipping cartridges into clips and placing them in ammunition boxes. Weapons were cleaned, tested, and cleaned again. Saddles, bridles, and horseshoes were subjected to similar scrutiny. The sense of urgency affected the entire Fort. \n\nThey all knew that spring would soon open the Pass and the Afghans would be close behind. Battle was a certainty. \n\nAn argument broke out at an Officers Call when Turin, Sultar and Rhana all claimed the honor of being the first company to guard it, each insisting it should be them. David solved the problem with straws and Turin won. Half of Tiger Company - 50 men - would be the first at the buttress. It would fall to them to carry out all the new construction and other defensive preparations. \n\nTurin had the blacksmith forge additional picks and crowbars, along with heavy hammers and chisels, to help force the granite rock of the Pass to help them defend it. \n\nChapter 25 \n\nA week later, the patrol reported that, although the cleft was still blocked, the buttress camp was now accessible. ",
        "Turin's men began loading the heavy wagons, while he and Hangar checked off the items on their lists. \n\nLater that night he reported to David that he and the Tigers would be leaving at first light. \n\nDavid told him he would be report to the Prince, in Putan, and then join him at the Pass the following day. \n\nHe stood on the wall of the Fort as the first rays of the sun rose above the Eastern mountains, watching the wagons and soldiers leave the Fort. \n\nLater, he rode Thor to the city, arriving a little before noon. \n\nThe Prince was with Ashar Kahn, when he was shown into their presence. \n\nThe Prince looked hard at David knowing why he was here, \"The Pass is clear?\" \n\nDavid shook his head, \"Not all of it. The Cleft is still blocked, but we can begin work at the camp, making our preparations,\" he replied. He then went on to explain about the rockets and system his officers had devised for signaling the mortars.  \n\nThe Prince smiled sadly, \"So, there is to be a battle and men will die. Yet the men dying do not belong to my kingdom. It seems so unfair to ask them to do this.\" \n\nDavid smiled, \"They do not belong to your kingdom, Sir, it is true. But they belong to the Khana Rifles, which binds them tighter than a kingdom. It binds them to each other. They are Ghurkhas. They fight for the man alongside of them, as he fights for them. They fight for their troop, their Company and Regiment, and the flag that flies above them.\" \n\nAshar Kahn said quietly, \"And for you Colonel Sahib.\" \n\n\"And I for them,\" David replied. \n\nWhen it came time for David to leave, Ashar Kahn embraced him whispering, \"Be careful my Son, I have promised Sulkie you will be there when she foals.\" \n\nThe Prince took David's right hand in both of his, looking deeply into his eyes, \"David, you must know you are more than my Colonel to me. You are a true friend and I do not wish to lose that friendship. You do not have my permission to get yourself killed.\" \n\nSusan was waiting outside the room, \"I heard you had arrived in the Palace. You're going to the Pass aren't you?\" she murmured her eyes glassy. \n\nHe nodded, \"Yes, tomorrow.\" \n\nLater as he dressed, he looked down at her beautiful naked body. Her eyes were red from crying, but she made a brave attempt at smiling, \"Come back to me darling\" she whispered. \n\nThe Fort was in darkness by the time he arrived back. \n\nHanga had cleaned his weapons: His rifle, pistols and kukri lay on the table. The furs he wore at the Pass were rolled up along with his blankets. His saddlebags were on an armchair. \n\n\"I've filled your flask, Colonel Sahib, and have put in thirty cheroots as well as forty rounds of pistol ammunition and your telescope. Your cartridge belt has fifty rounds of rifle ammunition. Is there anything that I've forgotten?\" \n\nDavid smiled, \"No, old friend, you have done well. Kahn will have a heavy load to carry tomorrow.\" \n\nHanga left to take care of Thor, leaving David to eat his dinner. \n\nThe next morning, clad in his long johns and shirt after a breakfast of bacon and eggs, he went outside to find Hanga finishing loading Kahn. \n\nPara, Hangar, Sultar and Rhana were waiting for him. \n\n\"I'll send up the cart with the ammunition, rockets and pigeons in two days, as ordered, Colonel Sahib,\" Para said. \n\nDavid nodded as he mounted. \n\n\"Don't start the battle without me Colonel Sahib,\" Sultar added. \n\nKahn set off at a brisk trot, eager to be away and seemingly unaware of the heavy load he carried. \n\nWhen he arrived at the buttress, the sight that met his eyes was one of seemingly organized chaos. Men were hoisting pallets of stone building blocks up to the crests. Others were building storage boxes for ammunition and supplies close to the buttress's walls, while others were on the blockhouse roofs fixing chimney vents and reinforcing the roofing. \n\nA rifleman took charge of Kahn when David dismounted and removed his furs and bedroll, hurrying into the blockhouse to change, already shivering from the cold wind that blew constantly down the Pass. \n\nHe was changing his boots for the warm fur ones when Turin entered, \"Sorry I was not here to meet you, Colonel Sahib, but I was on the crest overseeing the building of the lookout post.\" \n\nDavid waved aside the apology, \"So have you found a suitable site for it?\" \n\nTurin explained he had found a step in the rock face about thirty yards beyond the other side of the cleft. At its highest, it was a little over six feet, so he was building the lookout house there, as it would only require three walls. Towards the rim, the step dropped down to about three feet, but provided excellent cover for firing from. He said should be completed by the end of the day, adding it now required only the roof and a chimney for the pot-bellied stove. The same was true of the other lookout post on the other side of the gorge. \n\n\"I've men digging out the coal seam and we are stockpiling it. Tomorrow, when we lift the bunks up, we will also send coal up there as well.\" \n\n\"How does it look on the other side of the cleft,\" he asked. \n\n\"The wind has drifted the snow high against the buttress, Colonel Sahib, and the road is hardly visible. I have given orders that should anyone appear, the men are to stop work and hide. That applies to everyone, both on the other side and in the valley.\" \n\nDavid nodded his agreement, then added, \"When the lookout posts are completed, we must turn our attention to the safety of the men in the valley. Their biggest danger will come from whatever artillery is used against us, which I'm sure will be mortars. The biggest threat will be shrapnel when they explode. I think it is impossible to drop a shell down the side of the buttress, but a well-aimed or lucky shell will be able to land some yards away from it. Therefore, we shall dig a trench hard against the buttress wall, six feet deep, that the men can drop into when the shells fall.\" \n\nTurin nodded, \"We can use the material removed to create an earthen wall for the mortar ammunition and rocket storage bins. It may prevent damage to them.\" \n\nTurin returned to the crest, leaving David to sort himself out. \n\nFor two days the men laboured from first light until there was no longer any light to work in. David had climbed each crest in turn, viewing the results of their work and providing his own strength to the work when circumstances permitted. \n\nThe new lookout post - surprisingly snug - was now finished. The constant wind brought snow flurries, but inside the new post, prefabricated bunks had been erected and a potbellied stove glowed red from the burning coal. When David looked over the lip he, could see sections of the road appearing through the snow. In front of the step there, was a clear field of fire for roughly 600 yards before outcrops blocked the view that could be seen between the flurries of snow. \n\nLooking across to the other side of the Pass, he could see the ridge was more broken up, difficult terrain to traverse, he knew. \n\nThe main attack will be against this lookout he surmised. The Afghans had already sent a handful of men to reconnoiter the other crest. Turin and his men's alertness and rifle marksmanship meant they had never returned. Yes, he decided, this will be the next one. \n\nHe expressed his views to Turin that night. \n\n\"In hindsight, I would like to have more men up there now. We will almost certainly lose the two men who have to signal the valley.\" \n\nTurin pondered the problem, \"The only thing that prevents us placing more men up there is the sleeping arrangements. There are two men on guard throughout the night, so two beds are empty. By squeezing the beds together we may fit in another two or three beds.\" \n\nDavid did a quick calculation in his head, \"With 25 men here on the crests and twelve men needed for the mortars, which only leaves 13 for defence of the cleft. We need more men,\" he decided. \n\n\"I can send for another 25 men from my company, Colonel Sahib.\" \n\nDavid nodded, \"Also I intend putting a mortar up there. It will have a greater range than the valley ones.\" \n\nA rifleman suggested mounting the beds on top of one another, the legs on the ground bed shortened and the top one nailed and screwed to it. That solved the sleeping arrangements. \n\nA firing position was found for the mortar outside of the lookout building, bins were built to store the shells and rockets alongside it. \n\nSix days later, it was possible to clamber over what snow now remained in the cleft. \n\nDavid used 16 of his precious tails to fire the dummy warheads to determine the range of his mortars. At the conclusion of his testing, he knew the three mortars in the valley could drop a shell within twenty yards of the buttress wall and eight hundred yards beyond it. The lookout mortar could fire 2000 yards beyond it. \n\nThe additional Tiger Company men had arrived and settled in quickly. The trench was extended to allow for them and additional rifle pits dug to further block the Cleft. \n\nThat night, he sat beside the cook fire sipping from his flask while enjoying a cheroot with Turin, \"Well, old friend, have we done enough? Can you think of anything else we can do to be better prepared?\" he asked. \n\nTurin chuckled, \"Colonel Sahib, my only fear is that there won't be enough virgins in paradise for the Afghans.\" \n\nDavid laughed \"Well, Subedar, that's their worry.\" \n\nTwo days later the lookouts reported three riders coming along the road. All the fires were put out and the men took cover. \n\nThe riders stopped at the buttress and looked down through the Cleft. They didn't dismount, but turned their horses around and slowly rode back the way they came. \n\nAs soon as they left, the Tigers moved all the horses about half a mile back down the Pass to a spot they had found where the Pass doglegged and provided room and cover for a simple corral. \n\nDavid rubbed Kahn's head, talking to him. The horse cover Hanga had made for him from Afghan blankets fit the stallion perfectly. With a last kiss on his nose he left, wondering if he would ever see him again. \n\nThe Afghans started to arrive the next day. At first there were about a hundred with wagons and carts. They stopped a mile from the buttress and began erecting tents. Many more soon followed. \n\nDavid climbed to the lookout post. Through his telescope he could make out men making camp and crowding around fires. I bet it's colder for you than for us, he thought grimly. \n\nBy the next morning more had arrived, and even more tents were erected. By late afternoon the tents stretched back beyond the range of the telescope. \n\n\"There must be over a thousand men down there,\" he observed to Turin at his side. \n\n\"What are they waiting for Colonel Sahib?\" he asked. \n\n\"For the artillery to arrive,\" David replied. \n\nIt came the next day. Six bullocks drew a large heavy wagon. David could make out the squat outline of a heavy mortar. The wagon drew up roughly a thousand yards from the buttress and then a swarm of men began to off load it. \n\nDavid focused on the two men who were supervising the work. Both had pale faces under their heavy fur hats. \n\nOne was stamping the ground near in front of the wagon. At first David thought it was because his feet were cold, but then realised he was searching for a firm site to place the mortar. It took them over an hour to remove it, and then lever it into the position indicated by the pale-faced man. \n\nOnce the bullock cart had been sent back, further wagons came forward. Three bell-shaped tents were erected, similar to the ones used in the British Army. \n\nOne was erected several hundred yards away from the mortar, close to the Cleft wall. \n\nThe reason became clear when barrels of gunpowder were stacked in it. A line of men struggled to carry heavy round balls - David counted 40 of them - into one of the other tents. \n\nOne of the pale-faced men was supervising the movement of the equipment going into the last tent, which included what looked like camp beds. Finally, from another cart, a ridge-pole tent was erected and boxes and a camp bed moved inside. A tall man cocooned in furs stood with his back toward David, watching the proceedings as a brazier was lit by it. Then, as if to confirm David's suspicions, four men came and saluted the tall man. Russians. \n\nBy now, the light was fading fast down in the gorge, so David returned to the lower camp. \n\nThat night around, the cook fire David, told Turin about the Russian mortar. \n\n\"It's an old one, probably made forty years ago of thick cast iron. It must weigh over two tons. The barrel is roughly two and a half feet long. But the hollow, cast iron ball it fires is over twelve inches in diameter. It will have, I imagine, a fuse that it burns down and ignites the gunpowder inside ball causing it to explode and disintegrate hundreds of pieces of flying cast iron. They may even have musket balls stuffed in there as well. \n\n\"The fuse will be something of a challenge for them,\" David added. \"Ideally, the fuze will reach the explosives as the ball hits the ground or, if they want it to burst in the air to scatter the fragments more widely, a fraction of a second before it hits. In mountainous conditions like these, that will be very hard to do since the time of flight from the mortar to the point of impact is going to be hard for them to determine. \n\n\"If they cut the fuse too long, the ball may bury itself in the ground, reducing the explosion. If they cut the fuse too short, it may burst so high in the air that the fragments have little power. The age of the fuse, its temperature, whether it has been kept dry, the different weights of the balls, the skill of the crew; all of those things will affect the accuracy and effectiveness. The design of our mortars and their ammunition make them much more reliable and much less subject to chance.\" \n\n\"A nasty weapon, Colonel Sahib. So we will have no warning of it coming?\" Turin asked. \n\n\"You will hear the bang when it goes off, then it will be perhaps ten or twelve seconds before the ball it fires lands. The men must be under cover by then.\" \n\n\"Do you think it will fire tonight?\" Turin murmured. \n\nDavid shook his head, \"I don't think so, they only have forty or so balls. They won't waste them until they have someone to spot for them.\" \n\n\"So they will come tomorrow then?\" \n\nDavid nodded, \"I'm going to move up to the lookout point tomorrow and take command there. Whoever holds that position will win the coming battle.\" \n\n\"You have my best marksman up there with you. I think I should increase the amount of ammunition to two hundred rounds per man, Colonel Sahib.\" \n\nDavid nodded in agreement. \n\nIt was still dark in the gorge as his rifle, bedroll, saddlebags and water skins were winched up to the crest. A rifleman he was replacing waited for him to arrive before descending himself. \n\nDavid began by checking the mortar ammunition and rocket supply. There were thirty mortar shells and forty rockets in the bins, along with twenty of Sultar's 'grenades.' \n\nThree riflemen stood by the mortar, which was placed on a bed of sandbags atop a slab of rock. A set of signal flags was rolled up alongside it. \n\n\"The sgnal lanterns are just inside the door, Colonel Sahib, I will be giving the signals down to the gorge,\" one said. \n\nDavid nodded his approval, and went towards the step. \n\nA Havildar stood and acknowledged him without the customary salute. There was no need to identify their leaders to any especially observant Afghan sniper. \n\n\"All is quiet, Colonel Sahib, they are just lighting their fires for a meal,\" he reported. \n\nDavid moved down the line of Riflemen crouched behind the step, having a quick word with all of them. \n\nThe last one by the rim of the gorge was looking down into it with a telescope. He moved over to make room for David, handing him the telescope. \n\nOne of the Russians was using his own telescope to view the buttress, while the taller Russian - apparently in conversation with an Afghan clothed in rich furs - was gesturing up towards the crest David was on. \n\nThe Havildar came and crouched beside him, \"Do you think they will come today Colonel Sahib?\" he asked. \n\nDavid looked at the Afghan who was issuing commands to others, \"Yes, today, and if we hold, tonight as well\" he replied grimly. \n\n\"The only way those shaitans will pass this position is over our dead bodies,\" the Havildar growled. \n\nTo be continued."
    ],
    "authorname": "RobinLane",
    "tags": [
        "action",
        "strategy"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-tides-of-war-pt-05-5"
}