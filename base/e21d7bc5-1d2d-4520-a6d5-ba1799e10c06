{
    "title": "Tom Billionaire Ch. 02",
    "pages": [
        "-- CHAPTER 2: Montauk --\n\n****\n\n*-- SEPTEMBER (10 MONTHS AGO), MONTAUK, NEW YORK --*\n\nI grinned, looking down at the giggling infant who was rolling on his back with all four limbs in the air. Jonathan Kwong, Junior (or \"JJ\" as we all called him) was not quite 11 months old, and not quite able to walk on his own. He certainly kept trying, standing himself up against the couch and then bravely launching himself outwards. But he could only manage a step or two before collapsing to the lushly-padded carpet. For some reason, falling in this manner amused him to no end, hence the delightful giggling.\n\nFrom my spot on the couch, I bent forward and hooked my son beneath his armpits to lift him upright. Once in the air, his little legs flailed around, trying to locate the ground. But when I held him up in front of his mother, his legs quieted as he broke into a goofy grin, accompanied by a pleased, \"Muhh...\"\n\nTaylor sighed happily. \"I know I've said this a million times, but he's sooo cute.\"\n\nI put my own face next to JJ's, smirking at my wife. \"That's because he looks like his _father_.\"\n\n\"We've been over this.\" Taylor raised an eyebrow at me, brushing back a long bang of her son's nearly black hair. \"He has your eyes, but the nose and mouth are all mine.\"\n\nActually, it was true. JJ's eyes had the trademark almond shape from his quarter-Chinese ancestry, and they were the same blue as mine. But amidst the chubby cheeks and recessed baby-chin, JJ's nose was a bit smaller and pointier than mine. And his mouth was shaped with a distinctive curve like Taylor's. I looked over at my wife, having previously committed the perfection of her face to memory, and I smiled, thanking my lucky stars for letting me be married to such a gorgeous creature.\n\nEven at 32, Taylor was just as beautiful as she'd been when I first met her in college. Time and pregnancy had added a couple of pounds to her slender frame and filled out her cheekbones just a bit, but her dark blue eyes were just as hypnotic as ever. And extensive work with our personal trainer, Rebecca, had gotten her body right back to pre-baby fitness. Taylor had even walked in the Victoria's Secret Fashion Show last December, just two months after giving birth to JJ.\n\n\"Face it,\" I stated proudly. \"You know he's the most handsome boy in the world because he resembles ME.\"\n\nMy wife rolled her eyes. \"I still think *you're* cute because YOU remind me of HIM!\"\n\nThe two of us laughed, which got JJ to start laughing again. And moving in, I nuzzled my son's cheek from one side while his mother nuzzled him from the other. This, of course, provoked more squeals and giggles. And I already knew I would never get sick of the sound.\n\nEventually, we let JJ go to crawl after an empty water bottle that had become his favorite toy. He retrieved it, and then after seating himself upright, he promptly began chewing on the plastic cap.\n\nA new voice broke in behind us. \"Heeere's Joey!\"\n\nI turned my head to look over. I have to admit, my eyes first went straight to the glorious pair of tits hanging forward. It wasn't my fault; Ashlyn was bending over and she was wearing a scoop-necked top, putting those big melons on full display. But no matter how sex-addled my brain could be, my gaze was immediately drawn even lower, for the reason Ashlyn was bent over was because she was setting our daughter down on the floor.\n\n\"Dah... Dah!\" Her hair in dark brown pigtails pointing up and to the sides, Josephine \"Joey\" Scott was a few weeks past her first birthday. With arms outstretched, she waddled forward on unsteady legs.\n\nI opened my left arm in invitation, and my daughter picked up speed as she neared me. But as she sped up, she also lost her balance. And about three feet away she tripped and suddenly pitched forward.\n\nI was expecting this, and smoothly I leaned forward to catch her against my chest. Laughing as if she'd meant to trip all along, knowing full well that I would catch her, Joey stood up against me and started patting my arm with what seemed like a spastic penguin flap. \"Dah!\" she repeated.\n\n\"Joey!\" I greeted pleasantly, tapping the little toddler on her forehead. And then I tapped myself on the forehead, stating, \"Dada.\"\n\n\"Dah! Dah!\" she cheered.\n\n\"See! She's got it!\" I exclaimed enthusiastically, looking up at my girlfriend.\n\nShe leaned over us, still giving me an eyeful of those big tits. The copper redhead still wore her hair long, although it was pulled back into a single ponytail, and thus did not obstruct my view. And what a view.\n\nAshlyn Scott, at 26, was in the prime of her beauty, and that wasn't just my opinion. Despite giving birth just over a year ago, she was never more in demand than she was now, modeling for top designers like Christian Dior and Chanel, among many others. And her recent motherhood had made her the Number One ranked MILF in the world according to Maxim Magazine, even ahead of Angelina Jolie. Unlike Taylor, she'd skipped last year's Victoria's Secret Fashion Show. But this year, she was on the cover of their latest catalog and expected to headline the new show in a few months. From alluring face to bodacious rack to freakishly long legs, she had the kind of body that made men drool, made women buy lingerie to MAKE their men drool, and she practically had me drooling now.\n\nFrom the smirk tugging at the corners of her lips, I was sure my girlfriend knew EXACTLY what she was doing. And when I looked up at her face, she gave her chest a little extra jiggle for my benefit. But that smirk was up in her eyes, as well. \"You wish Joey had it. I think you're just peeved that she'll clearly say 'mama' on cue.\"\n\n\"Mama!\" Joey cheered, craning her face up and backwards to look at her mom upside-down.\n\n\"See.\" Ashlyn grinned, clapping at her daughter to positively reinforce the behavior.\n\n\"Dah!\" Joey then turned back to me.\n\n\"She's got 'dada' down too!\" I insisted.\n\n\"Not yet. That's just a plain 'dah'. She says 'dah' to everything, from her stuffed frog to the chair to the TV.\"\n\n\"Dah!\"\n\n\"Taylor,\" I turned back to my wife, who was still rolling around the floor with JJ. \"You heard Joey! Tell her!\"\n\n\"Ashlyn's right,\" my wife replied without even looking over.\n\n\"Traitor,\" I muttered beneath my breath. Then putting on another wide smile for my daughter, I stared right into her big blue eyes and stated slowly, \"Daa... Daa. Dada.\"\n\nJoey went silent and just blinked at me, not saying a thing.\n\n\"Daa... daa,\" I repeated, tapping my thumb against my forehead in a motion that supposedly matched American Sign Language. \"Daa... daa.\"\n\n\"Don't take it personally,\" Ashlyn said soothingly. \"It's not like she doesn't recognize you.\"\n\n\"Daa... daa,\" I said one more time.\n\nAnd to our utter and complete surprise, Joey straightened up and stated, \"Dada!\" Then she leaned forward into my arms, pressing her cheek against my chest.\n\n\"Hey!\" I chirped, looking up at Ashlyn, who looked just as surprised as I felt. \"Dada!\" I cheered happily.\n\n\"Dada!\" Joey squealed again, buoyed by my enthusiasm.\n\n\"She's got it!\" I raved. This time, Ashlyn didn't contradict me.\n\nAnd then out of the blue, JJ propped himself up against my opposite shoulder, having just climbed me as easily as he climbed up the side of the couch. And in a quietly serious voice, he stated, \"Dada.\"\n\nMy eyebrows shot up and I looked straight at Taylor, who also now looked surprised as hell.\n\nI couldn't be happier in the world. Hugging him with my other arm and beaming proudly, I stared my little boy in the face and repeated one more time, \"Dada.\"\n\nJJ just looked at me oddly, glanced back at his mom, and then one more time looked right into my eyes. His right hand came up... and slammed down on my nose.\n\n\"Oww!\" I barked, backing my head away.\n\nJJ just broke into a big grin, giggling. And looking back for his mom, he muttered, \"Muh...\"\n\n****\n\nI would have loved to stay in the family room and roll around the floor with my kids all day, but there was work to be done. And I told my family such.\n\n\"Work? What work?\" Taylor complained. \"Last I checked, you still had more money than we could spend in three lifetimes.\"\n\nI shrugged. This was an old argument. \"It's not about the money. Are you still modeling for the money?\"\n\nTaylor sighed. She continued doing it because she loved it, and because her friends were all in the modeling world. \"Of course not. But it's not like you hang out with those guys socially.\"\n\nI shrugged again. And thinking of the big Hollister acquisition we were close to completing, a predatory grin spread across my face. \"Different thrills, honey. Different thrills.\" I kissed my kids on their cheeks, then kissed their mothers on their lips, and stood up to leave.\n\nAshlyn sighed and stood up as well. \"I should go, too. Good time to catch a ride into town.\" The statuesque model stood up and looked over at me. \"Give me ten minutes to freshen up?\"\n\nI nodded. \"Sure. We've got time.\" While Montauk was technically on Long Island, it was at the most Eastern edge, a good two-and-a-half hour drive on the roads, not counting traffic. So when not in a big hurry, we often 'carpooled' in the helicopter rather than send it back and forth to Manhattan on multiple trips.\n\nThe two of us stepped away from the infants, who were now crawling around a set of soft rubber cubes together. We briefly watched Joey grab a purple block with the number 4 on one side, the letter D on another, and various other designs like 4 dots on the remaining sides. JJ promptly moved in and grabbed for the same block, but Joey held it back and started nibbling on an edge. Ashlyn and I beamed at each other and backed away.\n\n\"I got them, Mr. K,\" the last adult voice in the room chimed in. Jada Sharpley was 20 years old, blonde, hazel-eyed, and very pretty. She was also the daughter of my VP of Acquisitions, Robert Sharpley. And for the past few months, she'd been the kids' nanny.\n\nOh, we had another, more professional nanny. Evelyn Holbrook was a mid-fifties ex-Montessori teacher who had known Dorothy for years. But while we could easily afford a second nanny to watch over the two infants, that second spot had become something of a revolving door over the past year. One nanny just didn't get along with Evelyn as the two constantly fought over alpha status. Another didn't get along with _Taylor_. And our most recent one, despite rigorous screening by Cassandra's contacts, actually tried to steal some of my financial records.\n\nWe were almost at the point of just giving up trying to find a second, since the kids were getting older and easier to handle. And with Taylor scaling way back on her public appearances and modeling workload, her personal assistant Charlotte had a lot more time to spend with the babies as well. But just before we got that far, Jada Sharpley entered our lives.\n\nI'd been bitching about these babysitting difficulties with some of my JKE execs back in June when Bob told me his daughter was looking for a job. Jada had dropped out of college, disillusioned with the whole \"academic\" thing. But supposedly she was a smart kid and had extensive babysitting experience throughout her teen years.\n\nI had been skeptical. A 20-year-old college dropout didn't seem the type to be hardworking and dedicated to caring for my children. But Bob asked me for the personal favor just to get Jada in a stable environment with some basic responsibilities, and I agreed to at least let Cassandra interview her. If nothing else, we might be able to give her a job with fewer responsibilities, for a while at least.\n\nBut surprisingly, she passed Cassandra's interrogation with flying colors. The young girl had taken to JJ and Joey immediately, and they to her. And she'd been a live-in nanny ever since.\n\nThis morning, I watched Jada drop to the floor and slide over to the children. Joey looked up and saw that Ashlyn and I were leaving. The little toddler waved a short goodbye to us. And then smiling, she picked up a Sesame Street book and hopped right into the young nanny's lap.\n\n\"Have a good day,\" Jada waved before taking the book in her hands and beginning to read to Joey.\n\nSmiling one last time at them, I turned to Ashlyn and confirmed, \"Ten minutes?\"\n\nAshlyn gave me a lopsided grin. \"Ten minutes. I promise.\"\n\n****\n\nAs Ashlyn headed upstairs to her room, I went to a wall panel and typed in the commands to call the helipad. I told my pilot to prep for departure, and then I headed off down the hallway toward The West Wing.\n\nCassandra sat behind the desk in my (her) office, her nimble fingers darting like lightning over the keyboard. A bluetooth headset with boom mike was perched over her right ear, and she jabbered something about debt ratios while continuing to type and also greet me with a nod of her head and a twinkle in her eyes.\n\nEven though we had yet to go into the office, Cassandra was already \"at work\". Somehow, she ran my household, managed my personal affairs, and supervised my executives all at the same time. She did so with a smooth efficiency absent of significant error, somehow cramming a week's worth of work into a single day every single day of her life. In short, she was absolutely incredible. And she was so much more to me than just a personal assistant.\n\nMoving myself behind the desk chair, I leaned down until my chin lightly rested on her shoulder. Peeking my eyes at the screen, I made sure it wasn't anything *too* important before reaching over and hitting the power button to turn the monitor off. I then grabbed the end of the boom mike, pulling it off Cassandra's ear and stated quite clearly, \"This is Jonathan Kwong. She'll have to call you back.\" And I hit the END button on the desktop phone to hang up the line.\n\nCassandra chuckled. This kind of interruption was not uncommon for me. After briefly hugging her neck from behind and kissing my assistant's cheek, I pulled back and spun her chair around so that she would face me.\n\nBatting her eyelashes, the bodacious blonde turned her sky blue eyes up to me and purred in that sultry Australian drawl, \"Good morning, _sir_... How may I... _serve_... you?\"\n\nI grinned and took a single step forward.\n\nGrinning, Cassandra reached to my belt, deftly opening it as well as my slacks. She pulled my hardening cock out, jacking me with her left hand as she let her tongue loll out to swirl around my mushroom head. And then she looked up at me again and asked, \"How much time do we have?\"\n\n\"Ashlyn's coming. She promised it would take her ten minutes to change.\"\n\nMy assistant grinned, showing off pearly white teeth while continuing to stroke my naked erection. \"Thirty minutes it is!\" she crowed. And then she ducked her head back down, suckling on my pole and not stopping her forward progress until her nose was pressed up against my crotch, humming to let her throat muscles massage my shaft.\n\nCassandra was good. She was *really* good. To be perfectly honest, Taylor initially was the more skilled cocksucker. But even though Taylor was my wife, I probably spent three times as many hours alone with Cassandra, going back and forth to work as well as my various business trips. In the four or so years she'd been my personal assistant, I could count on one hand the number of times she'd been away from me for any extended length. And of all the times I felt the need to unwind and blow off a wad in relaxation, Cassandra was by far the most likely to be ready and willing by my side.\n\nIn short, the statuesque blonde had already given me a thousand blowjobs in our time together, and that's not an exaggeration. That kind of practice could only lead to knowing _exactly_ how to make me happy, and that's just what Cassandra did.\n\n\"Holy _shit_...\" I groaned, feeling my knees buckle.\n\nUp until now, Cassandra had been sitting in the desk chair to perform her duties. Without missing a beat, she lifted up and yanked the chair around her with her right hand, continuing to stroke my shaft with her left. I felt the front edge of the seat hit the back of my calves, and with a gentle push, she sat me down. And then I was free to let my body relax and receive the oral ecstasy she was bestowing upon me.\n\nKneeling before me, Cassandra blew me to brink of eruption. But before I came, she pulled away and bit the inside of my thigh hard enough to leave a hickey. She'd told me a hundred times that she belonged to me, but this morning my assistant was marking me as HER property. And when I looked down at her, there was no mistaking the self-satisfied smirk on her pretty face.\n\nI let her bask in that momentary position of power over me before I stood her up and roughly slammed her facedown over my desk. I dropped her panties down around her ankles, and without having to be asked, Cassandra stepped out of them. The wadded up silk would remain in my pocket for the rest of day. I then lifted the back of her neatly-ironed business skirt. And with deliberate aim, I sank my dick into her from behind.\n\n\"Fifteen minutes, sir,\" Cassandra grunted, turning her face to the side and letting the cool surface of the wood press against her cheek.\n\nMy hands gripped her hips, my thumbs stroking the fleshy thickness of her asscheeks. And with a self-satisfied smirk of my own, I thrust my way forward.\n\n\"Ughhhh...\" she moaned.\n\n\"Ungh...\" I grunted.\n\n\"Fuck me, Jonathan,\" Cassandra hummed. \"Fuck me.\"\n\nI fucked her. The clock on the desk had both analog and digital readouts. Watching the analog second hand gliding along urged me on, and every change of the minute display on the digital clock pushed me into another gear. I'd started off with slow, languid strokes, feeling the cushiness of Cassandra's ass meeting my pelvis over and again. But as the minutes counted down, my pace sped up.\n\n\"Five minutes, sir...\" Cassandra groaned at length. She was panting, her breath coming in heaving gasps, matching the rhythm of my thrusts. I felt her vaginal muscles quivering against me. Likely, she could have already cum a time or two by now. But like me, she was waiting for the final countdown.\n\n\"Four minutes, sir...\"\n\nMy ab muscles burned. I was stroking at a rate of about a thrust every second, feeling Cassandra's cunt relaxing to allow my entry and then clamping down as I retreated.\n\n\"Three minutes...\"\n\nCassandra's voice was weak. Sweat was dripping off her brow, and she'd pulled her arms back so that her palms were flat on top of the desk, pushing herself back at me with each lunge.\n\n\"Two... minutes...\"\n\nAnd two strokes a second. In-Out. In-Out. So. Fucking. Good. So. Fucking. Tight.\n\n\"One... one minute...\" Cassandra's voice was a plaintive gasp. Her jaw hung slack, and her cheek was pressed against the desk again. Like a fish out of water, her jaw opened and closed slowly as if she didn't even realize she was doing it. And her eyes had started wobbling in their sockets as my three strokes a second pounding was shaking her entire body.\n\nI watched her mouth open to try and count down the final seconds. She couldn't. Her voice was gone, she wasn't even moaning anymore. The only sounds coming from her were the audible squishes of her oversaturated pussy every time I pushed my rampant cock into her body. But in my own head, I felt the pressure inexorably build.\n\nFive... four... three... two... one...\n\nLiftoff.\n\n\"AAAAAAAAAUUUUUUGHHHHHH!\"\n\nCassandra had no concept of time in that moment. Her eyes were vacant orbs staring off at nothing, not at the clock nor me nor the room around us. But she certainly *felt* the splatters of jism bursting deep inside her loins as *I* came inside her. And the instant that sensation filled her mind, she let go of her precious control and let herself just FEEL the pleasure.\n\n\"AAAAAAAAAUUUUUUGHHHHHH!\" she screamed again as I gripped her hips even tighter, holding myself at maximum depth while my cock spat out wad after wad of spunk into her body. I imagined a million tiny tadpoles racing through her fallopian tubes, desperately searching out an egg. And the thought spurred my testicles to instantly manufacture more sperm on the spot to fill her with.",
        "\"AAAAAAAAAUUUUUUGHHHHHH!\" she screamed once more, feeling me spray her down like an exploding fire hydrant.\n\nAnd then we were done.\n\nMy office was not cold. Our climate control was too good for that to ever happen. Yet I swore I could see vapors of heat rising up from Cassandra's blonde hair as my own cheek rested against her back. And together, our bodies rose and fell with our heaving gasps for air.\n\n\"I said ten minutes!\" Ashlyn complained from behind us.\n\nI blinked and raised my head, turning around to see that my girlfriend was standing in the doorway. I paused to collect myself before planting my hands on the desk and pushing myself back up to a standing position. Then slowly, I withdrew my cock from Cassandra's cunt and asked, \"And how long ago did you arrive at that door?\"\n\nAshlyn blushed. \"Uh, well... just a minute ago.\"\n\n\"Thirty minutes. I was right,\" Cassandra sighed.\n\n\"Yeah, but we forgot to factor in cleaning back up and getting out to the helipad,\" I noted.\n\nAshlyn giggled. \"Doesn't matter. I'm not in a rush. Besides, that looks positively yummy.\" She eyeballed the creamy dollop of cum that was starting to leak out of Cassandra's red pussy lips.\n\nSmiling, I waved Ashlyn in, and the redhead sank to her knees to begin hoovering out the mingled fluids of lust swimming around inside Cassandra's honeypot.\n\n\"Just don't dawdle,\" I cautioned her. \"If you do, I'm going to get excited. And if I get excited, I'm not letting you out of this office until I can see Cassandra returning you the favor.\"\n\nAshlyn giggled and pulled her head back, lifting up a glob of spunk on the tip of your tongue. \"Hmm, maybe I _should_ dawdle.\"\n\nI just grinned, wolfishly undressing my girlfriend with my eyes. \"Fine by me.\"\n\n****\n\n*-- MANHATTAN, NEW YORK --*\n\nUpon arrival on the roof of the Jonathan Kwong building, complete with its own \"JKE\" logo on the side, we waited to let the helicopter's rotor blades die down before exiting. The girls didn't like their hair and clothing to be mussed up by the downdraft. And even with the extra wait, it was much faster than driving from Montauk.\n\nIn the elevator, I kissed Ashlyn goodbye, tasting remnants of Cassandra's pussy still on her lips. My supermodel girlfriend had not \"dawdled\" in the home office. But we found time for a quickie threesome in the helicopter anyways. So I sent Ashlyn off with my creamy cum leaking down her thighs and her panties next to Cassandra's in my pocket.\n\nA few minutes later, I strode into my boardroom with the full confidence of someone who owns the place. After all, I did. Quickly, I settled into my chair at the head of the table while Cassandra took the seat to my right.\n\n\"Report,\" I stated.\n\nRobert Sharpley, VP of Acquisitions and father of Jada, looked up at me quizzically before turning his gaze to Cassandra. \"You didn't tell him?\"\n\nMy assistant blushed, but quickly schooled her face. \"Something else came up,\" she stated neutrally. \"I believe you were on the call when he hung up the line.\"\n\nNow it was my turn to blush. Oh, so THAT'S what she was doing this morning in the home office. I shrugged, \"My fault. You can tell me now.\"\n\nSharpley looked around at the other Directors and Vice Presidents before breaking into a wide grin. \"It's a done deal,\" he stated proudly. \"Hollister is caving.\"\n\nI grinned as well and reclined back into the soft padding of my chair. I steepled my fingers and let a little chuckle rise in my throat. I'd done some big deals in the past, but this one was the biggest by far. It was going to cost me more than the GNP of several small nations, but we already had companies lined up to buy off pieces of Hollister's empire.\n\nThe math was simple: I was going to spend 4 *billion* dollars to buy up all of Hollister's companies. I was going to sell them off for 4.6 billion. And when the dust settled, JKE stood to profit *_six hundred million_* dollars in one fell swoop.\n\nLike I'd told Taylor: different thrills.\n\nMatthews, my VP of Sales sat up and gestured to an administrative assistant, who was standing by the projector, and she called up the latest slides. Holding up the laser pointer, Matthews then started clicking and summarizing. \"Escrow accounts are already set up. Loans are already established. The buyers have already signed acceptance, pending the transfer of assets to us.\" The poor guy looked so excited by the magnitude of it all that he was red-faced and quivering. He dabbed at his sweaty forehead with a handkerchief.\n\nSharpley stepped in. \"Preliminary work is already done. We'll exchange agreements and handle all the necessary documents in escrow. And we expect to be ready for signatures by Monday.\"\n\nNodding my head, I smiled and stood up. \"Gentlemen, thank you very much.\" I grinned and then a light popped into my head. The next day was a Saturday. So extending my arms out, I stated expansively, \"Keep your schedules clear tomorrow night. I'm inviting everyone to my place to celebrate.\"\n\n****\n\n*-- MONTAUK, NEW YORK --*\n\nI was passing by a window and peeked out into the courtyard, which was spectacularly lit up against the night sky. The circular driveway was absolutely packed with limousines and high-end cars, right up to the concrete fountain in the center. We'd only given people a day's notice, but I guess when you're invited to a party at Jonathan Kwong's house, you drop everything to attend.\n\nMany of the guests were my executives. After all, the official reason for the party was to celebrate this massive deal for Jonathan Kwong Enterprises. But they weren't the only guests. For one, some of my execs brought their spouses or girlfriends. But some of them didn't, or were otherwise single. And most of them were pretty glad they were flying solo this evening, because Taylor had *also* invited HER friends.\n\nAs I came down the main stairwell and moved into the expansive formal living room, I saw that many of my execs were already introducing themselves to Taylor's friends. My VP of Strategic Marketing was chatting up a comely blonde. My Director of Sales Strategy was with a lissome brunette. And even my VP of Human Resources, Cindy Cornette, was chatting up a muscle-bound Calvin Klein model.\n\nAnd JKE execs and fashion models weren't even the only guests in attendance. We had a few friends over just for the fun of it, and the instant I spied a few of them, I did my best to go straight over.\n\nOf course, when you're Jonathan Kwong, Billionaire, at a house party hosted by Jonathan Kwong, Billionaire, it's impossible to go more than five feet without having to stop and be greeted by someone. Every time I turned around, I had to shake someone's hand, get a hearty slap on the back, and crack jokes about how to spend the abundant amount of money I was making on this deal. Yes, everyone involved stood to get some seriously fat bonuses, but as the principal, *I* was going to pocket the majority of that six hundred million dollar windfall.\n\nTwenty minutes and... oh, about twenty feet later, I finally made it through to my friends. Kaitlyn Reynolds was the first to step forward and hug me along with a peck on the cheek. Rebecca Raymonde was next, her taut muscles squeezing the life out of me with her embrace. Then, I got my hand crushed by her fianc\u00e9 Jack's handshake. Grinning wryly, I shook out my hand to restore its circulation, and finally turned to Jeff Lee.\n\nMercifully, he didn't shake my hand. Instead, the handsome young man just clapped me on the shoulder and commented, \"Every now and again I find myself wishing I could be in your shoes. But then I watch you try to run that gauntlet of stuffed shirts and I'm glad I'm not. Your palm must be chafed by now.\"\n\nStill stretching out my fingers, I sighed. \"Something like that.\" \n\nJeff finally just clapped my back. \"Poor guy. I guess you'll need some gorgeous young plaything to soothe your aches and worries with mindblowing sex.\"\n\n\"You read my mind,\" I chuckled. Straightening myself up, I smiled and asked the group, \"Having a good time? I know these guys aren't a part of our usual crowd.\" I waved in the vague direction of all the middle-aged executives.\n\n\"Don't worry about it,\" Kaitlyn piped up, leaning against her boyfriend and wrapping her arm around his waist. \"We know a lot of Taylor's and Ashlyn's friends anyways. And any excuse to come by and visit the kids is great.\"\n\n\"Oh. You already saw JJ and Joey?\"\n\nRebecca nodded. \"They've gotten so much bigger in the last month. Which reminds me...\" My personal trainer stepped forward and poked me... hard... in my left pectoral muscle. \"You've been skipping workouts. You're getting out of shape, Pillsbury Dough Boy.\"\n\nI grimaced and rubbed my chest in mild pain, then gestured around at the whole party. \"I've been busy. But now that the deal is done, I'll have more free time. I _promise_ we'll get back to work.\"\n\nRebecca glanced at her fianc\u00e9 with a sly grin before looking back at me. \"We'd better. I've missed you, John.\"\n\nJack added with a sly grin, \"She has. We love each other to pieces, but it's been a while since you guys threw a Playroom party.\"\n\n\"I'll say,\" Jeff mock complained. Kaitlyn elbowed him in the ribs.\n\nJust then, a distinguished mid-40s gentleman stepped up to me, a gorgeous late-20s trophy wife by his side. \"Jonathan, allow me to personally congratulate you.\"\n\nI obviously recognized my VP of Finance, George Karr, but I didn't remember his new wife's name. Now would've been a good time to have Cassandra by my side, as she would have sensed it and whispered her name into my ear right away. Instead, I just smiled and reached out to shake his hand. \"Congratulate me? George, I couldn't have done this without you convincing all those banks to shell out a cool four billion in liquid capital.\"\n\nHe chuckled appropriately and then turned to the chestnut brunette with silicone tits by his side. \"My wife, Trina.\"\n\n\"Pleasure.\" I shook her hand, noticing that she had her eyes zeroed in on some of the nearby fashion models. Casually, I commented, \"Don't worry about my wife's co-workers. They know to keep their mitts off a married man.\"\n\nIt was something of a lie. Half of the models I knew were gold-digging sluts with absolutely no compunctions against poaching a man, but I wanted to put my VP's new wife at ease.\n\nBut Trina smirked and looked around. \"Oh, don't worry. I *like* to party.\" The young brunette had a twinkle in her eye as she said this, and not-so-discreetly let her eyes run up and down my body. At about the same time, George was scanning the room with something of a wolfish expression on his face. The pair of them kept drifting their glances toward Stephanie, a tall brunette who was close friends with Ashlyn. And since I happened to know (rather intimately) that Stephanie was one of those girls who DIDN'T really care about keeping her mitts off a married man, I decided to go ahead and help things along.\n\n\"Well in that case, let me introduce you.\" Grinning, I took Trina by the hand and led her and George over to where the object of their desire was chatting with a few other model friends.\n\n\"Stephanie, Kathryn, Jeanine,\" I greeted each girl by name. \"Allow me introduce George Karr and his wife, Trina. I'd bore you with details about what he does for my company, but I think you would be more entertained if George told you about that condo tower he just bought in Miami's South Beach.\"\n\nThe girls twittered. Trina batted her eyelashes, and I left them to work out the details. I looked back for my friends, but they'd also moved on to other conversations.\n\nOn the other hand, Rebecca's comment about how big the kids had gotten in the past month put JJ and Joey at the forefront of my mind. I hadn't seen them since before I went upstairs to get dressed for this party. And I checked my watch to confirm the time. 8:30pm. They should JUST be going to sleep right about now.\n\nRather than walk the gauntlet of guests all the way back to the front entrance, I instead started looking around for one of the side exits, and spotting one, headed straight there. But on the way, a shock of copper-red hair caught my attention, not to mention the fiery red cocktail dress, and my eyes were drawn over to the sight of my gorgeous Ashlyn.\n\nMy eyes were also drawn to the male hand that was currently patting her ass. The hand even gave the globe a little pinch, and as my blood started to boil, I tracked the hand upwards to find that it was attached to a devastatingly handsome young man.\n\nHe looked a little taller than me, and was broader in the chest. His dark hair had a light curl to it, and was slightly mussed in a casual way. He had a chiseled jaw, and deep-set eyes. The guy was a first-class hunk, and I found my teeth starting to grind as I watched him rather intimately hold my girlfriend in his arms.\n\nI fought to keep my impulses under control. After all, Ashlyn and I had a pretty open relationship. I'd let Taylor play around with her boy-toys for a while, although she'd given them up after we got married and started having kids. And even though Ashlyn and I shared a special love, as well as an unbreakable bond in our daughter Joey, I still made clear that she was free to pursue a relationship outside of ours if she so desired.\n\nBut there was an understood requirement that I be informed if she decided to go down that path. She was still MY girlfriend, and any guy she wanted to dally with had to be vetted and approved. THIS guy... whoever he was... had NOT been so approved.\n\nStill, I didn't want to cause a scene. So stomaching my unease, I put on a welcoming smile and sauntered over. \"Hey, Ash...\"\n\n\"Hey, Johnny.\" Her blue eyes flashed as she looked up at me and stood up straight. Similarly, the dark-haired hunk stood up straight and removed his arm from my girlfriend's waist. \"This is Terry. He's an underwear model.\"\n\n\"I can see that.\" I looked Terry up and down, noting his near-perfect body. Feeling my gaze, the guy smirked rather proudly and flexed just a little bit more.\n\nWanting to change the subject, I jerked a thumb back toward the side door. \"It's 8:30. I was thinking to go say goodnight to the rugrats.\"\n\n\"Oh! Good idea!\" Ashlyn patted Terry on a bicep, and then slipped her arm around mine. We said goodbye and then headed over to the side door. But just before we got there, I glanced back and caught Terry staring rather intensely at Ashlyn's departing form.\n\nOnce through the door and into the relative privacy of the hallway, I sighed in annoyance. \"So tell me about Terry,\" I half-growled in annoyance.\n\nAshlyn looked surprised by my tone. \"Terry? What about him?\"\n\n\"Tell me why he was copping a feel of your ass,\" I stated coldly.\n\nAshlyn's eyes popped open, a trace of fear in her irises. But a second later, she barked a laugh and started giggling.\n\n\"What?\" I frowned.\n\nStill giggling, Ashlyn covered her mouth and shook her head at me. \"Are you jealous?\"\n\nI grimaced. \"Well... a little. I mean, we talked about you seeing other guys, it's just that I thought we also discussed that you would run things by me before you started-\"\n\n\"He's gay, Johnny.\"\n\n\"What?\"\n\n\"Terry.\" Ashlyn jerked a thumb back at the now-closed door. \"He's gay.\"\n\n\"Huh? Then why was he checking you out? I looked back when we were leaving and he definitely had that dreamy look on his face.\"\n\nAshlyn grinned and then punched me in the shoulder. \"You dufus. He was checking YOU out, not me.\"\n\n\"Me???\"\n\nShe giggled. \"Yes, YOU. How could he not, after you practically undressed him with your eyes?\"\n\n\"I did *not*.\"\n\n\"Sure you did. Right after I told you he was an underwear model.\"\n\n\"Well... I...\" I fumbled a bit before sighing in resignation. I _had_ been looking him up and down with intensive scrutiny, just not for the reasons Ashlyn... and Terry perhaps... believed. \"It's just that Rebecca told me I was getting out of shape. 'Pillsbury Dough Boy',\" I muttered.\n\nAshlyn laughed and wrapped herself around me. \"Well *I* think you're still hunky enough to be an underwear model, okay?\"\n\nI smiled and hugged my girlfriend tightly to my side. But then one last image popped into my head. \"So... if he's gay... why *was* Terry feeling up your ass?\"\n\nAshlyn shrugged. \"Sometimes *I* worry if I'm still in good shape. I was complaining that my ass got fat after getting pregnant, and that it would never be the same. He was fondling it just to tell me he still thought it was a gorgeous, firm ass. And gay guys know their asses.\"\n\nI reached back and caressed Ashlyn's left globe, squeezing it for my own confirmation. \"He's right. You've still got a fabulous ass, Ash.\"\n\n\"And it's yours, Johnny,\" she breathed in a husky tone, her eyes glittering.\n\n\"Mine,\" I growled, my eyes afire in response.\n\nShe giggled happily, then briefly got up to her tiptoes and pecked my cheek. \"Maybe I'll come visit you and Taylor tonight.\"\n\nI grinned. \"You do that.\"\n\nAnd then we'd arrived at the nursery.\n\n****\n\nThere were actually two nurseries. Joey and JJ spent a lot of time together, sharing mealtimes and playtimes and play areas. But they had separate bedrooms, so that if one baby woke up screaming, he/she wouldn't wake the other.\n\nAshlyn and I went into Joey's bedroom first. The 1-year-old was in the final cranky stages before going to sleep. Evelyn, our full-time nanny, was holding her and pacing around the dimly-lit room. Joey was squirming in her grasp, not wanting to be held. But when Evelyn set her in the crib, Joey rolled over to the railings and tried to climb out. And when Evelyn set her on the floor, she tugged at Evelyn's legs to be picked up.\n\nAshlyn quickly held out her arms in offering to hold the baby. Joey resisted her mother at first, pushing her arms out to try and free herself once Evelyn handed her over. But a moment later, Joey calmed down and set her cheek against Ashlyn's shoulder. I watched with a smile as the gorgeous redhead, still wearing her cocktail dress, cooed soothingly and patted her baby's back.\n\nI didn't want to disturb them once Joey got to this point. I knew the little girl would fall asleep soon. So I simply leaned in and kissed my daughter's cheek. And after pecking Ashlyn as well, I slipped outside.\n\nAlone now, I went to the other nursery. Jada was standing over JJ's crib, patting his back while the little boy drowsily hung at the edge between wakefulness and sleep. I hung back, not wanting to distract Jada or give JJ any reason to get up. And after a few more minutes, the young nanny backed away from the crib.\n\nAs she did so, I stepped forward and peeked over the railing. JJ was facedown, his arms splayed out to the sides. His mouth repeatedly pursed and relaxed, as if he was dreaming of suckling on a nipple. I could relate. And the squishy noise his mouth made was the only sound in the room.\n\n\"He's so cute when he's sleeping,\" I whispered quietly in the dimness.\n\n\"He's cute all the time,\" the young blonde commented.\n\nStill staring at my only son, I simply nodded. Together, Jada and I just watched JJ, enjoying the peacefulness of his slumber. It was quite relaxing to watch a baby sleep, and I felt a lot of tension from the past few weeks of negotiations start to roll off my shoulders.\n\nThere was a quiet whisper of fabric to my right, and I turned my head just in time for Jada's lips to meet mine. The lissome 20-year-old pressed herself against me, tilting her head up and rising on her tiptoes to reach me. She wrapped an arm around the back of my neck, and sighed happily as our tongues speared out and found one another.\n\nBut a few seconds later, I pulled my head back and shook my head in the negative. \"I have to get back downstairs.\"\n\nWith only half her face illuminated by the nightlight, the young blonde pouted up at me. \"We still have time, don't we?\"\n\n\"Your *father* is downstairs.\"\n\n\"So? We've been over this. He already knows.\"",
        "I sighed. He did know. Everyone knew.\n\nMy not-so-secret affair with Jada began a few weeks after she started working for us. I hadn't meant for it to happen. After all, there were two very big barriers to such a relationship. First, she was the daughter of one of my executives. For me to engage in any inappropriate contact with her could have seriously jeopardized my relationship with Bob, who was *extremely* important to my business dealings. And on top of that, after the whole Hal Reynolds incident I'd been extremely hesitant to even consider the daughter of someone I knew as a potential sex partner. Even today, I STILL couldn't believe Hal had *wanted* me to knock up Kaitlyn just so she could bilk me for child support.\n\nAnd second, by hiring Jada as a live-in nanny, I'd made her a part of my household staff. I'd already taken up with a staff member once, to disastrous consequences. Brittany had ultimately dropped the lawsuit and moved away. But I swore to myself I would never get involved with a maid or other subordinate in the same way.\n\nBut despite these concerns, I'd let my dick do the thinking. I'd given myself excuses for why fucking her wasn't THAT bad. Yes, she was a member of the household staff. But as a nanny, Jada's bedroom was upstairs, like Cassandra and Charlotte. She wasn't among the maids or cooks or other uniformed staff in the employee wing. Plus, her temperament and personality had immediately bonded her to the other young women who pranced in and out of my life. Unlike the majority of our servants, who spent their off-hours with each other back in staff lounges, Jada hung out socially with Taylor, Ashlyn, and their assorted friends. Whether it was talking about proper exercise techniques with Rebecca or gossiping with the various fashion models who would spend a few nights here and there under our roof, Jada had made it clear that whatever her official title, she belonged in the \"social friends\" group.\n\nAnd everyone knew that entire \"social friends\" group was my personal feeding tank.\n\nAnd yes, she was Robert Sharpley's daughter. BUT, before her flirtations finally got to intercourse, Jada had assured me that her father wouldn't mind. As she put it, \"He thinks I could do a lot worse than become one of your girlfriends.\" I hadn't actually confirmed this before letting her seduce me. But it turned out she was telling the truth. When I finally worked up the guts to tell Bob I was nailing his daughter, he simply clapped my shoulder and asked me to keep her out of trouble.\n\nUltimately, my sleeping with Jada was deemed to be \"not a big deal\". And it's not like I'd blindly surrendered to my lust. The young girl had been flirting with me since her arrival, behavior not unnoticed by the principal women in my life. Ashlyn told me to go ahead and nail her if she wanted me so bad. Taylor told me to just make sure this wasn't another Brittany-situation. And even Cassandra, ever my voice of reason and caution, had given me grudging permission.\n\n\"Your life would be simpler if you didn't give in to her, or if you sent her away to remove the temptation,\" Cassandra had concluded. \"But the children adore her and just from my own observations, this girl has no relationship ambitions the way Brittany did. She doesn't want to become your mistress and she doesn't want to supplant Taylor or Ashlyn. She's just a young kid living in this house without a lot of other male options. She's horny, and she's attracted to you. As long as things stay casual, I'm okay with it.\"\n\nThere was still a niggling of doubt in the back of my head. But those doubts were erased the next time I saw Jada suntanning by the outdoor pool, back in early July. She was off-duty, since Taylor, Charlotte, and Evelyn had taken the kids to a park. Ashlyn and three other model friends (two of whom I'd banged at one party or another) were also tanning themselves, and the five hot young women were enjoying the summer weather and clear blue skies wearing the skimpiest of skimpy bikinis.\n\nSince Cassandra was at the office without me, when I found myself feeling frisky, it only made sense for me to start prowling in the backyard. I'd changed into a brief pair of swimming trunks, which covered more than a speedo but pretty much put my package on display. And slinging a towel around my neck, I headed outside to stalk my prey.\n\nMy initial target was Ashlyn; she was my girlfriend after all. From a purely empirical standpoint, she was the most attractive woman present, and I knew for a fact that sex with her would be absolutely fantastic. So when I approached the row of five beautiful girls, I went straight to the hot redhead, picked up the bottle of sunblock, and asked if she needed a rubdown.\n\n\"No thanks, Johnny. I'm good,\" Ashlyn looked up at me. Well, her head tilted upwards at least. I couldn't see her eyes through the thick sunglasses. But I could see the smirk tugging at the corner of her lips. \"But you know, I think Jada's turning a little red over there.\"\n\nThe young blonde had been chatting with Erin, the platinum-blonde model to her left. But at the sound of her name, she quickly looked over and grinned, having heard the entirety of that little exchange. \"Yeah. Can you help me out, John?\"\n\nMy own eyes were blocked by my shades, but I'm sure Ashlyn caught my eyebrow arching upright. Even with our irises blocked, I was quite certain my girlfriend and I were staring right at each other, me questioning her motives and she enjoying my discomfort.\n\nJada, for her part, simply rolled onto her belly and reached behind herself to untie the bikini top, letting the strings fall to the sides and expose an unbroken expanse of bare skin.\n\n\"C'mon, girls,\" Ashlyn called out to her friends. \"Let's hop in the water. I'm starting to sizzle.\"\n\nAnd so I was left in relative privacy with a half-naked 20-year-old blonde. Ashlyn and the others were only about ten feet away, splashing in the pool. But from that distance and the noise they were making, Jada and I would be able to carry on a conversation without serious risk of being overheard.\n\nSo we flirted. With Cassandra's words in my head and Ashlyn's more blatant manipulations, I just relaxed and went with the flow. It wasn't like Jada would be my first girl outside of my Holy Trinity. She wouldn't even be the youngest; I'd bedded a 19-year-old at the last Playroom party.\n\nIt's not like I took her right then and there on the lounge chair in front of Ashlyn and the girls, though I may have thought about it. Jada insinuated that she wouldn't turn me down should I invite her into my bed. I copped a few feels of her ass and one or two of some side-boob. And then we'd separated, finishing out the rest of our time by the pool without crossing any lines.\n\nBut when I came out of the shower in my own Master Bathroom, having washed away the chlorine from the pool, I found a still damp 20-year-old blonde girl waiting for me, wearing only a towel around her midsection and having just come from the shower herself.\n\nI fucked her right there on the floor.\n\nTaylor was the first person I told when she returned with Evelyn and the kids. My wife just pecked me on the cheek and asked if the youngster had been any good. Cassandra merely nodded in confirmation when I told her as well. Just one more thing out of the way, I suppose. And Ashlyn already knew. She knew it the moment I started rubbing sunblock into Jada's back down by the pool.\n\nSo the next day, right after Jada put Joey down for a nap, I met her outside the nursery and she dragged me into her room. That time, at least, we made it onto a proper bed.\n\nAnd the day after that, the lissome blonde sucked me into a three-way with Erin, the platinum-blonde model from the pool. I'd already been with Erin before, but I'd never had my dick up her cunt while her mouth was full of Jada's pussy.\n\nWe slowed down a bit after that. The \"newness\" wasn't quite as fresh, and I'd started to get really busy with the Hollister acquisition. Plus, I wanted to take extra care to remind my wife, girlfriend, and assistant that they were still the primary focuses in my life.\n\nBut I still found time for young Jada every few days or so. And by the night of the party, we hadn't been together in *far* too long.\n\n\"Please?\" Standing in my son's bedroom, 5'6\" Jada reached up and clutched both lapels on my dress shirt, pulling my head down to her. She licked her lips and whimpered. \"I haven't had you since _Tuesday_. That's _forever_...\"\n\nI was still hung up on the fact that Bob Sharpley was right downstairs. For all the times that I'd fucked his daughter, I'd never done so when he was nearby. \"I still can't believe your father is okay with this.\"\n\nShe shrugged. \"You're his boss. You've made him *very* wealthy these past few years. He owes a lot to you.\"\n\nI arched an eyebrow and stated brusquely, \"He doesn't owe me his *daughter*!\"\n\n\"No, no, of course not. I'm just saying that you've got a reputation. Daddy knew this was possible when he agreed to let me work here. Like I said before, there are worse places I could've ended up. I think he's just thrilled I'm not with a guy like my last boyfriend.\"\n\n\"Jada... honey...\" I said softly, reaching up to caress her head behind her ear. \"This is fun and all, but you know I'm not your *new* boyfriend, right?\"\n\n\"Of course not.\" She gave me a cute smile that was growing bigger by the second. \"I'm your babysitter. And right now, I wanna be your *naughty* babysitter...\" Her hand slid down over the bulge in my slacks. Deftly, she pulled down the zipper and then reached her hand in, her small fingers tracing the thick rod just barely restrained by my boxers.\n\nBut I caught her wrist in my hand, firmly but gently pulling her away. I sighed and explained, \"Really, I'd love to. But I HAVE to get back to the party. I'm the host, and I've been gone too long already.\"\n\nThe cute blonde, her hair seeming almost white in the dim lighting, bit her lip and whimpered. But she nodded her acceptance. \"You have to make it up to me.\"\n\n\"I will.\" I grinned.\n\n\"Promise? At first opportunity?\"\n\n\"I promise.\"\n\nSmiling again, she got back up on her tiptoes and tugged me down for one more kiss. And with a final pat on my butt, she skipped past me and opened the door.\n\nI exhaled as I watched her cute little butt waggle away, regretting this stupid idea to throw a party for all my execs when I could be flat on my back watching a nubile young girl ride up and down my pole.\n\n_Back to the gauntlet._\n\n****\n\nI returned to my guests with open arms and a ready smile. This time, I managed to find my wife and did my best to stay by her side for the remainder of the evening. More to the point, Taylor sensed my desire to keep her close, and she stayed with me and my stuffy executives rather than chat with her model friends.\n\nFortunately, with Taylor's gift for conversation, the rest of the evening passed quickly and enjoyably.\n\nBy eleven o'clock, the party was winding down. Taylor and I parked ourselves close to the exit so that people could say their goodbyes on their way out. And together we shared more than a few smiles as we noticed more than a few extra passengers hopping into some of the executive limos.\n\nGeorge and Trina Karr DID talk Stephanie into going home with them... and Kathryn as well. I didn't realize the distinguished but not-exactly-in-great-shape George had it in him, or maybe he was the kind that just wanted to watch three hot girls crawling all over each other. I certainly could understand the appeal.\n\nCindy Cornette practically shoved her Calvin Klein model through the back door of her limo. And if my eyes didn't deceive me, she was already on her knees on the car floor before the door got closed.\n\nAnd even my very own Bob Sharpley was having takeout. He stood next to his stretch limo, his hand out to guide in Milena Kvitiva, a gorgeous Czech high-fashion model I was quite familiar with. I wasn't surprised. Bob was twice-divorced and known for his love of fashion models. Probably another reason why he loved working for me. My only surprise was that I didn't see Maile Lindqvist, half-Swede half-Hawaiian and the other half of the infamous M&M pair, with them as well.\n\nSoon enough, the majority of guests said their goodbyes. All of my execs had gone home, but as typical for one of our house parties, some of the models and other close friends would be crashing at the mansion overnight. We certainly had plenty of room.\n\n\"Did you see Jeff and Kaitlyn?\" I asked Taylor as we prepared to retire ourselves. \"Or Jack and Rebecca?\"\n\nMy wife patted my arm and laughed. \"All four of them are upstairs already... in Charlotte's room.\"\n\n\"Ah.\" I smiled.\n\n\"Cassandra?\"\n\nTaylor shook her head in the negative. \"She's going to want to oversee the cleanup. You know her.\"\n\nI sighed. As much as Cassandra was dedicated to me, she had always been dedicated to the job even more. It was part of the reason I'd given up trying to talk her into becoming like a wife and letting someone else handle all the mundane aspects of my life, even though we dearly loved each other.\n\n\"C'mon, Johnny. Let's go to bed.\"\n\nThe way Taylor said it was without sexual innuendo. While we were far from old, we weren't as young as we used to be. And after exhausting ourselves with all the socialization of a high-society party, I certainly felt like dropping to sleep right away. But when we entered into our bedroom, instead of going straight to the bed, my wife took me by the arm and nodded toward the bathroom.\n\n\"Not yet, honey,\" she chastised me pleasantly. \"I want you clean and smelling like soap before I cuddle up next to you.\"\n\nThough tired, I wasn't so tired as to pass up a shower, especially if my wife was going to share it with me. She propelled me to the front of our state-of-the-art shower enclosure, leaned me against a wall, and then started unbuttoning my shirt.\n\nI looked over my wife as her nimble fingers went to work. Her dark blue eyes were focused on each button as she moved lower and lower. I took in the perfect sculpture of her eyebrows, the way her dark hair fell across her forehead, and how even after hours and hours of partying, her makeup was still perfect. Add in the accents of her earrings and necklace, and I was in awe at my wife's beauty, even after all these years.\n\n\"God, Taylor, you are so fucking hot...\" I groaned, right around the same time she started working on my belt.\n\nHer eyes remained downcast, finishing her task of opening my belt and pulling down my zipper. A little smile drew across her face, and then she looked up at me, giving me the full force of her eyes like a model staring with aching arousal right into the camera. And with a confident smirk, she replied, \"I know.\"\n\nI just chuckled as she finished with me. I pulled off my own shirt and jacket, then stepped out of my pants and underwear while Taylor began removing her jewelry. She had to stop by the sinks to remove her makeup as well, so I was naked and waiting before she'd finished undressing. The extra time let me sit down on a comfy bench, just relaxing as I watched my gorgeous wife return and peel off her remaining garments, revealing inch after inch of bare skin in an impromptu strip tease.\n\nMy breath caught in my throat when her strapless bra came off. I loved every part of my wife's body, but I was very much a \"tit\" man; and hers were just about flawless. She giggled and continued, shimmying out of her thigh-highs and dropping her thong to the floor.\n\nNow that she was naked, I curled my finger to her. My wife padded forward, coming within reach. I didn't grab her or anything, but I extended that finger between her legs and swiped it through her cleft. A touch of honey was on my fingertip, and I brought it to my mouth for just a quick taste.\n\nLaughing, Taylor took me by the hand and led me into our shower. She then looked up and stated, \"Computer: Rain Forest\".\n\nThe system chirped in affirmation and three ceiling-embedded shower heads opened up, dropping vertical columns of heavy water droplets with relatively light pressure onto us. The sprays were enough to completely soak us in an instant, and yet we could back out of the columns of water into air that was completely dry. Taylor pushed me into one and held me there while I bowed my head and closed my eyes. She then reached over to one of the touchless soap dispensers, lathering up her hands. And once I was good and soaked, she called out, \"Computer: Taylor Setting One\".\n\nThe three overhead sprays turned off, replaced by a somewhat more traditional angled spray from above and to the side. There were also rows of horizontally-mounted mini-heads built into the three side walls, which bathed me from shoulder to shins as well. I turned to face my wife, letting the water surround me from all sides except straight ahead. And with warm, soapy hands, Taylor stepped up and began lathering my chest.\n\n\"Congratulations on the Hollister deal, Johnny. I know you put a lot of work, personally, into that one. And I'm proud of you.\"\n\nI smiled and leaned forward to peck my wife's forehead. \"Thanks.\"\n\n\"Six hundred million in profit?\" she queried with a twinkle in her eye, as if she were already spending it on fancy jewelry.\n\nI nodded.\n\n\"That's a lot, isn't it?\"\n\nI grinned. \"It's not pocket change, no. Even for me.\"\n\nShe took a deep breath and then looked up to me with big eyes. Curiously, I noticed that the sparkle was gone. And still rubbing me down, she asked softly, almost regretfully, \"How much is enough?\"\n\nI blinked, not expecting the question. \"Hmm?\"\n\n\"How much money is enough? Do we really need more? I mean, I know I spend a LOT on shopping. But seriously, don't you think we're pretty financially secure at this point?\"\n\nI heard the tone in my wife's voice. Furrowing my eyebrows, I put my hands over hers to stop their motions, even though she was getting pretty close to my crotch. I looked at her steadily, but she averted her eyes downward. I knew this expression. Taylor wasn't one to back down from confrontation, but she could never look me in the eyes when she wanted to ask something of me that she believed I wouldn't agree to. \"Hey, what is it?\"\n\nShe took a deep breath before answering me. She weighed her words, and after another moment's thought, she said, \"I'm not saying it has to be right now. I know that doing this is what you love. But Johnny... I want you to consider retiring.\"\n\nI pulled my head back. \"Retiring?\"\n\n\"Not right away, of course. And I don't even know if it's really possible. But... I miss you. These past few months you've been traveling so much and spending a LOT of time at the office. It used to be you'd only go in for a day or two a week. But lately, you've been gone EVERY day!\"\n\n\"The Hollister deal is done. Things'll go back to normal soon.\"\n\n\"I miss spending time with you. *_JJ_* misses spending time with you.\"\n\n\"And I miss spending time with him!\" I smiled. \"Okay, family time it is. This deal is done, and I know I can take a serious break. Let's go on vacation somewhere, okay? Where do you want to go? I just think it needs to be somewhere JJ can explore safely. Like, we can't go somewhere big on scuba diving, right?\"\n\nTaylor smiled and nodded. \"A vacation sounds nice. But it's more than that. You've got a family now. And you have MORE than enough money. Why don't we all just settle down a bit? I can stop modeling. Even Ashlyn has been talking with me about making this more permanent between you and her. She loves this family as much as I do. She's ready to give up her career as well and just focus on raising Joey and... well... any other children you're willing to give her.\"\n\nMy eyebrows rose. \"Seriously?\"\n\nTaylor nodded. \"Our lives are perfect the way they are. Oh, I'm not so silly as to think *any* of us can just quit cold turkey like that. You'll always be tangentially involved in JKE. And I might want to do the occasional job here and there, same as Ashlyn. But for the most part, I think we'd be happier just slowing things down. Money can't buy us happiness, but it can certainly buy us the financial security we need to live out our lives leisurely.\"",
        "I furrowed my eyebrows and then stepped out of the spray. Wordlessly, I put Taylor into my place and filled my hands with soap. And while my body went to work lathering her up (and copping a feel or two), my mind was still processing.\n\nA vacation sounded perfect. After all the blood, sweat, and tears of finishing this Hollister deal, I WANTED to relax with my family. I wanted to just stay home and get laid and play with my kids.\n\nBut retiring completely? Not being involved in the day-to-day activities of the company with MY name on it? It sounded WAY too sudden. I was a month past my 32nd birthday. I'd only HAD this company for five years. And I was doing the things I'd always wanted to do, but never had the capital to achieve in my previous life.\n\nStill, wasn't there more to life than working? \"Different thrills\" I'd told my wife this morning when I explained why I was still going into the office. And I'd gotten a lot of thrills out of my wheeling and dealing. It was gambling, only with intelligence and analysis to ensure that I always had the best hand. The rush of making a deal was better than flipping over the river card to fill a gut shot straight.\n\nBut there was also a wonderful rush when JJ took his first baby steps toward me. And as great as it was to hear Sharpley tell me we'd closed the Hollister deal, it had been even greater this morning when Joey had greeted me with a happy \"Dada\".\n\nI was holding onto Taylor's hips, my head bowed as I sifted through my thoughts. Now, my eyes refocused to find that she was watching me, patiently waiting. And moving my hands up to her cheeks, I leaned in and kissed her tenderly. \"Maybe you're right. Maybe it's time for me to start winding down.\"\n\nShe smiled happily, but cautiously. And she was right to. Because next I added, \"Still, this is very sudden. And you know we're not going to stop right away.\"\n\n\"Of course not.\"\n\n\"Let's plan a vacation together. Maybe go back to Tahiti? Same place as our honeymoon? We haven't been back since then. The kids can play in the sand and we can show them the jungles.\"\n\nTaylor smiled even bigger. \"Sounds lovely.\"\n\n\"And when we come home, we'll talk about scaling back on work. Okay?\"\n\nTaylor nodded and then held my head, kissing me with a fresh passion and energy that belied our tiredness from the evening. \"That's all I wanted.\"\n\nI smiled. \"You know I'm all about giving you what you want.\"\n\nTaylor giggled and then nibbled on my lower lip. Her right hand snaked down, tickling my inner thigh before scratching my balls and then taking a grip on my semi-hard cock. \"Then how about you give me what I want right now?\"\n\nI grinned. \"Yes, ma'am.\"\n\n****\n\nThe pair of us pulled towels through a special door that let us dry off without leaving the comfortable warmth of the shower enclosure, and then we wrapped ourselves in fresh terrycloth robes upon exiting. With my arm around my wife's waist, we sauntered back into the bedroom. And lying in wait for us, wearing a red silk robe, was Ashlyn.\n\n\"Spending the night with us?\" I queried.\n\n\"*You* told me to, remember?\" The redhead replied, her blue eyes twinkling.\n\nI thought back. \"Well, it was your suggestion; I just agreed. Actually, I don't think I've *ever* turned you down when you wanted to come join us.\"\n\nAshlyn grinned and pulled her robe to the side, revealing to us that she was completely naked beneath.\n\n\"... aaand that's why,\" I finished with a wolfish grin, eyeing the big mounds of her breasts, her taut stomach, and the gentle curve of my girlfriend's loins.\n\nAshlyn giggled and covered back up. We weren't in any rush. Meantime, Taylor had already left me and was climbing onto the bed from one side. \"I talked to Johnny.\"\n\n\"In the shower?\" Ashlyn asked.\n\nTaylor nodded, and then looked back at me with a hopeful smile. \"Maybe we can *all* retire pretty soon,\" she began. \"But not yet. We're going to take a vacation first to settle things down and figure things out. I don't think you've ever been to the place in Tahiti where Johnny and I honeymooned with Cassandra.\"\n\nAshlyn grinned. \"Nope. Think Joey and JJ will enjoy it though?\"\n\n\"Oh, yeah. There's plenty there for the kids to be fascinated with: fish, sand, the jungle,\" Taylor assured her best friend. \"But that's later.\"\n\nTaylor turned her attention on me. \"Right now, we need to reward our man for bringing home such a BIG pile of bacon today.\" By now, the two gorgeous women were side-by-side in the middle of the bed. Taylor brushed her still damp locks back away from her forehead and then cuddled herself up next to Ashlyn. Taking her cue, my girlfriend grinned and pushed herself cheek-to-cheek with my wife. And invitingly, the pair reached out to me.\n\nI sighed happily, staring at one exquisitely beautiful brunette in a white robe leaning against a copper-redhead in a red robe. And then my jaw dropped as the two women started shrugging out of those robes, first revealing bare shoulders, and then more as the garments slipped down to their waists.\n\nOh... I was a spoiled, spoiled man. Taylor was a 5'10\" raven-haired goddess, slender and stacked and so boner-inducingly fuckable with a face that put Aphrodite to shame.. Ashlyn was an inch taller, 5 years younger, with bigger boobs and paler skin. They were two of the most desirable women on the entire planet... and they were all mine. They were so arousing I felt like I could cum just by looking at them.\n\nAshlyn giggled and touched Taylor's cheek, turning the brunette to face her just in time for a sweet kiss. \"This is YOUR reward, Johnny. But you'd better hurry up and get naked if you don't want us to do this thing without you.\"\n\nMaybe I _could_ cum just by looking at them. But then, why would I want to do that? My robe was on the floor in an instant.\n\nTaylor and Ashlyn both laughed and opened their arms to me. Rubbing my palms like a kid about to open his Christmas presents, I grinned, took two steps forward, and then vaulted myself into the air over the bed.\n\nThe girls squealed and rolled just out of the way. But they'd recovered by the time I landed and flipped over. And before I could get back up again, I found myself tackled beneath my two loves.\n\n\"Y'know, you're always on top, nailing us into the ground,\" Taylor stated with mock annoyance.\n\n\"Well, not *always*,\" I protested.\n\n\"And don't pretend that you don't like it that way, Tay,\" Ashlyn commented.\n\n\"I already know *you* love it, Ash,\" Taylor shot right back before planting her hands on my shoulders to pin me down. And with a twinkle in her eyes, she informed me, \"*This* time, WE'RE gonna be on top. M'kay?\"\n\nI grinned. Taylor's robe had come undone, and as she held me down, those flawless tits were hanging right beneath my chin. \"Sounds great to me.\"\n\n\"That work for you, Ash?\" Taylor then called over her shoulder. But there was no answer. \"Ash?\" Taylor called again.\n\nThe sudden wet warmth surrounding my prick told me that Ashlyn's mouth was too preoccupied to respond. I groaned gutturally as her tight lips moved up and down, setting the skin of my growing cock afire. She grazed her teeth against me just enough to put little jolts of electricity up my spine. And then I let my eyes roll back in my head as I surrendered to the incredible pleasure my girlfriend's wicked tongue could produce. \n\nBut I couldn't keep my eyes closed for long. I felt Taylor swing her leg over me so that she was kneeling astride my face. Her already-wet pussy was soon nudging against my lips, and I opened my eyes to see the Cheshire grin spreading across my wife's face from my vantage point through her bounteous cleavage.\n\n\"Do your thing, honey,\" she told me.\n\nSo I did. I first reached up to palm those gorgeous globes, using the heels of my hands to titillate Taylor's nipples. She moaned as I grabbed on a little more tightly, and moaned some more when my tongue delved deeper into her cleft.\n\n\"Fuuuck yeah...\" my wife crooned. \"Tease my clitty. That's it. I'm so wet for you. Feel how wet I am for you. That's what you do to me, honey. Twenty, thirty, _fifty_ years from now, I'm still gonna get soaking wet at the mere sight of you, knowing just how good you can make me feel.\"\n\nWell, with praise like that, I certainly couldn't disappoint her. And despite the distraction going on at my lower anatomy, I did my best to focus on making Taylor feel just as good as she'd been expecting.\n\nMeanwhile, that distraction I mentioned was very... well... _distracting_. Ashlyn rhythmically bobbed her head up and down, two fingers and her thumb pressing the sides of my shaft along the way. The longer she kept going, the more pleasure started filling my brain. And as my adrenaline levels rose, so did the urge to grab these two hot babes so that I could throw them down and have my way with them.\n\nBut just as my hips rose to buck Ashlyn off me, Taylor dropped her ass heavily onto my chest. \"Nuh-uh-uh...\" my wife chastised me, waggling a finger in my face. \"*We're* on top, remember?\"\n\n\"Hmmph,\" I whimpered into her crotch, my jaw still coated with her honey.\n\n\"That's alright,\" Ashlyn laughed from behind her. \"Little John is just anxious to get inside.\"\n\nShe was right. The bodacious redhead dropped her own robe to the bed and then climbed aboard, spreading her own pussy lips and then sinking down onto my cock. As I felt myself spearing deeper and deeper into her body, with the goal of getting myself inside one of these gorgeous women being reached, the tension in my limbs abated. I let my arms fall back to the pillows behind me. And I simply laid there and enjoyed it as my girlfriend resumed her up and down motions, this time with her pussy lips doing the suctioning.\n\n\"Mmm... isn't this wonderful, honey?\" Taylor asked me while riding my face with hip rolls that somehow matched Ashlyn's in pace. \"Just lying there, tasting my pussy while a hot babe fucks herself on your fuckstick?\"\n\nWith a mouthful of pussy, all I could do was mumble in agreement.\n\n\"Let's do this all the time, all day, huh?\" she continued. \"No more work pressures. Just living our lives leisurely. Going on vacations to exotic places, eating new foods, and spending our time playing with the kids. \"\n\n\"Fucking all day...\" Ashlyn sighed dreamily. \"Mmm, I wanna be retired.\"\n\n\"Yeah,\" Taylor agreed. \"Can you picture it, honey? Lying on a beach somewhere while Ashlyn and I take turns riding you?\"\n\nAshlyn giggled and leaned forward, cupping Taylor's tits from behind and pecking her best friend on the back of her neck. \"Actually, that's a really good idea. We'll take pictures! Here's us having a threesome in Tahiti. Here's us having a threesome with the Eiffel Tower in the background. Here's us having a threesome in a field somewhere with... uh... Mount Rushmore in the background.\"\n\n\"Mount Rushmore?\" Taylor queried with amusement.\n\n\"Yeah,\" Ashlyn confirmed, still bouncing on my dick. \"Like 'Oooh, there are these big heads. Okay that's boring. Back to fucking.'\"\n\nTaylor giggled. \"Yes, back to fucking.\" And with that, she ground her crotch against me a little deeper, sighing wondrously as I started ramping her up to orgasm. \"So good, honey.\"\n\n\"Yes, so gooood,\" Ashlyn agreed. The redhead was speeding up her lunges while I used the springiness of the mattress to thrust into her. In a position of control, Ashlyn could fuck me at just the right depth and just the right speed to make herself happy, and I was only too pleased to let her use me. \"Fuck-fuck-fuck...\" she groaned as she bounced.\n\nThe girls kept up their motions until they each reached a climax. Then chugging to a stop, Ashlyn leaned into her best friend and kissed her once again on the back of the neck. \"Let's switch.\"\n\nAlmost drowsily after her own orgasm, Taylor nodded. I had a few moments to catch my breath before the girls re-settled themselves. And then our trio began once again.\n\n\"Eat me...\" Ashlyn moaned, now seated on my face.\n\n\"Fuck me...\" Taylor cooed, now wrapping her own hands around to cup and fondle her best friend's even bigger boobs.\n\n\"Mmmph...\" I mumbled into my girlfriend's crotch, feeling the lightning bolts shooting into my brain as I tasted fresh flavors and felt new pussy muscles caressing my prick.\n\nTogether, the three of us throbbed on the bed like a living organism of lust. Ashlyn groaned while grabbing at her own tits on top of Taylor's hands, directing her friend's continued fondling. Taylor moaned, her head hanging forward and resting against Ashlyn's back while she kissed every bit of bare skin she could reach. And I growled, chewing on Ashlyn's clit while gripping her tight buns.\n\nOne by one, we reached our final climaxes. Ashlyn was first, as she pitched forward and grabbed the headboard so that her belly was on my forehead and all her weight was on the pivot point of her crotch against my jaw. Screaming loud enough to wake the babies if the room hadn't been so well-soundproofed, my girlfriend quivered and bucked in absolute ecstasy.\n\nI actually went off next. The mere sound of Ashlyn having such a good time was an aural aphrodisiac. Realizing that *I* was the one that had pleased her so well \u2013 and not one of the many girls we had under this roof who usually ate her out \u2013 made me feel fulfilled as a boyfriend, and the subsequent feeling of relaxed satisfaction took away the last of my control over my orgasm. And with a bellow into Ashlyn's crotch, my ab muscles tensed and I loosed both cannons of sperm up into Taylor's body.\n\nFeeling my hot spunk splashing against her innards set off Taylor. My gorgeous wife threw her head back and howled in delight. And I felt the ripples her inner muscles made as they spasmed in orgasm, squirting her own nectars out to mingle with mine and create a cocktail of love juices deep within her womb.\n\nOne by one, our energies then left us and we collapsed to the bed. Ashlyn dropped flat on my face before rolling to the side and curling her entire body around my head. I just sagged and felt the final few squirts pulse out of me, a heavenly state of blissful relief settling over my tired body. And as her own orgasm passed, Taylor gracefully toppled forward, dropping her naked body directly atop mine, so that I could wrap my arms around her and happily cuddle while my dick softened slowly inside her body.\n\n\"I love you guys,\" Ashlyn cooed contentedly.\n\n\"I love you, too,\" Taylor replied before turning her face to nuzzle my cheek. \"And I love you, honey.\"\n\n\"And I love you both as well,\" I sighed happily.\n\nYes, this was a good life. And I promised myself I would do everything I had to... even if it meant retiring... to make sure that my loves lived a good life as well.\n\n****\n\n_I have the most perfect life._\n\nI hummed happily. How could I not be happy? I comfortably lay on my side, with a beautiful woman's perfect ass for a pillow. I pushed my cheek a little more against her... uh... \"cheek\". She WAS wearing underwear, but the thong's micro-string disappeared into her cleft and did nothing to impede skin-to-skin contact. And taking advantage of the opportunity, I reached my hand up to squeeze the other bun as well.\n\n\"Johnny, that tickles,\" Ashlyn laughed and wriggled her ass a little more against me. \"You're distracting me.\"\n\n\"Yeah! You're distracting her!\" Taylor complained from further up the bed. My wife still wore the pretty violet camisole she'd slept in, but her smoothly-shaven crotch was on full display, glistening with the moisture of her sexual arousal. At least it was on display until my girlfriend returned her head between my wife's legs and resumed licking.\n\n\"Well *I* need to distract *him*,\" Cassandra interrupted from behind me.\n\nStill resting my head on Ashlyn's ass, I turned to face the bedroom doors. Cassandra strode into the room, fully clothed in a sharp business suit. Already, I envisioned my gorgeous personal assistant pulling that clip out of her hair to set free those blonde tresses, and then sinking to her knees to suck my cock. And I thought to myself, _Yes, I REALLY have the most perfect life._\n\nBut things didn't work out that way. Cassandra left her hair clipped up, and she came to a stop next to the bed. \"I'm sorry, sir. But this can't wait.\"\n\nHer tone meant business, not pleasure. So I sat up with a frown, removing my cheek from paradise. \"What is it?\"\n\n\"Hollister's rep just called. He wants to sign. Today.\"\n\nI furrowed my eyebrows, looking out the windows at the morning sunlight beaming in from across the ocean. \"Today? It's a Sunday!\"\n\nCassandra shrugged apologetically. \"He says you either sign today, or he's walking away from the deal.\"\n\nFrowning, I looked back at my half-naked lovers, and then at Cassandra, who couldn't help but ogle Taylor and Ashlyn as well. And then sighing in resignation, I nodded. \"Where and when?\"\n\n\"Hollister's yacht at North Cove Marina, World Financial Center. And right now. The helicopter is already prepped.\"\n\n****\n\n*-- MANHATTAN, NEW YORK --*\n\n\"You're an asshole, you know that?\" Richard Hollister shook my hand, but only to the minimum level of politeness. He immediately grimaced and sat back down on the couch in the main cabin of his luxury yacht. Cassandra and I sat in the chairs opposite him. \n\n_Dragging me away from my wife and kids on a Sunday morning, making me dress in this starched monkey suit, and _*I'm*_ the asshole?_\n\nI kept that thought to myself and schooled my features. \"Seems to me I'm doing you a favor, Richard.\"\n\n\"A favor? Taking away my company is doing me a favor? _Stealing_... for a *song*... the company that I built with my bare hands forty-two years ago... is doing me a FAVOR???\" The mid-sixties businessman wearing a polo shirt, deck shorts, and sandals launched into a typical smoker's cough, turning his head and balling his hand into a fist in front of his mouth. The hot young blonde to his left wearing a couple million dollars worth of jewelry immediately grabbed a silk handkerchief and passed it to him.\n\n\"Thank you, Tracy,\" Hollister croaked as he got his coughing under control.\n\n\"It's not a 'song', Richard. It's four *billion* dollars. No one else was going to give you that much.\"\n\n\"No one else could AFFORD to give me that much. That's your Daddy's money you're spending, son, money you had *handed* to you from ANOTHER asshole you never even *knew*. You didn't EARN that.\"\n\nCassandra started forward. Even if I hadn't known Jonathan Kendall very well, the man was the closest person she'd had to a father, and she didn't like Hollister's words one bit. But with her legendary control, she kept herself in check.\n\nDeadly serious, I took a single step forward and looked right at the old man. Coldly, I stated, \"You don't like this deal, don't take it. You don't like me? Don't take my money. It's not my fault you over-leveraged yourself on real estate. If you really want, you can keep your company and go down with a sinking ship.\"\n\nHollister launched into another coughing fit, staring daggers at me. Tracy, the mid-20s blonde, started patting him on the back. Eventually, he got his coughing under control again and glared at me. \"Fuck you, Kwong.\" And then he looked at Cassandra, barking, \"Gimme the damn papers.\"\n\nCassandra looked at me briefly, catching my nod. She promptly opened the Halliburton case and withdrew the necessary documents. She spread them out on the coffee table between us, little sticky-notes pointing out each place that needed to be signed. And with a final flourish, Cassandra reached into her breast pocket and pulled out a fancy pen, one with the name \"Jonathan Kendall\" embossed on the side. \"He was a *great* man,\" she stated firmly, presenting the pen so that the name was in full view.\n\nHollister paused a moment, looking up into Cassandra's grey-flinted eyes. At first, it seemed like he wanted to make some snide remark, likely sexual. But ultimately, he wilted beneath her gaze and simply started signing.",
        "It actually took about fifteen minutes, what with Hollister's lawyer wanting to double-check everything and the notary public going through his checklist as well. But in the end, Hollister was given access to the escrow account holding his four billion. And Cassandra put the signed documents back into her briefcase.\n\nNow four billion dollars richer, Hollister was suddenly in a better mood. So deciding to take a chance, I put on a smile and asked, \"So now what? Use the money to start a new company?\"\n\n\"Fuck no, kid,\" Hollister growled with a little grin, and then he sat up straight and spread his arms out wide. \"I'm retiring. See this boat? Plenty of room for me right here. I'm going out around the world, and I'm not comin' back.\" He reached out and patted Tracy's knee. \"I'm taking this pretty young thing to go see the sights. We're gonna climb Aztec pyramids. We're going to party in the Mediterranean. Heck, we may get all the way to your Great Barrier Reef.\" That last part was directed at Cassandra.\n\nI smiled. \"You'll love it. We snorkeled there just last January.\"\n\nHollister shrugged. \"I'm getting out of the rat race and settling down. Why go through all this stress when I can wake up naked next to her every morning?\" He leered quite obviously at his much younger girlfriend, who blushed without shame.\n\n\"Mark my words, Kwong. Someday you'll realize that making more money can't make you any happier than you already are. Someday you'll realize that all you need is somebody special to lie down next to. And someday you'll float away on a boat, with some hot young thing tucked under your arm, drinking yourself stupid and just forgetting about this fucked up thing we call Capitalism. Shit isn't worth it.\" And Hollister started coughing again.\n\nAt the time, I didn't realize how right he was.\n\n****\n\nBack within the comfortable privacy of the helicopter, I reclined my chair and invited Cassandra into the crook of my arm. She smiled and accepted, leaning back against my chest. I wrapped my left arm around her neck, squeezed her boob briefly, and then grinned happily.\n\n\"Call Matthews right away. I want his promised buyers loading up escrow accounts first thing Monday.\"\n\n\"*Right* away?\" she asked, sitting up straight again.\n\n\"No-no-no.\" I pulled her back down to me, resettling us once again in the comfortable position. \"As soon as we land and you can get into the office. Right now, I just want to enjoy this.\"\n\nCassandra exhaled peacefully and snuggled a little tighter. She patted my left arm, which by now was hanging by her side. And in a quiet voice, she asked, \"Are you really going to retire soon?\"\n\nI blinked a couple of times, processing my thoughts. And then I asked, \"I take it you've talked to Taylor.\"\n\nShe nodded. \"Truth be told, Taylor would have been thrilled if you'd retired when JJ was born. Ashlyn, too.\"\n\n\"And what do you think? Retiring means no more big deals at JKE, for me OR you. Well, at least, no longer being intimately involved with every detail.\"\n\nCassandra took a deep breath, thinking about that for a moment. I waited her out, and at length she spoke. \"I think that doing all these deals makes you happy, Jonathan. You're GOOD. You're smart. Nobody else could have pulled off the deal you just made with Hollister. He's wrong. There were other people out there with deep pockets that could have bailed him out. But you saw the returns. YOU lined up the buyers. YOU made it happen.\"\n\n\"With you,\" I added, smiling. \"We make a great team, Cassandra.\"\n\nShe smiled and snuggled deeper against me, turning her torso a bit so that my left palm cupped her breast once again. \"Yes, we do.\"\n\nI felt a fresh stirring in my pants, something Cassandra didn't miss. She dropped a hand back, and humming happily, she started petting my growing snake through my trousers. I wondered how much more time we had before landing. Not enough for a quickie in the chopper. But maybe she could put off that call to Matthews a little longer so we could find a nice bed somewhere... or a couch... or even just a rug.\n\nSeemingly of like mind, Cassandra turned her head back, her sky blue eyes burning into me. She stared at me for a few seconds. But abruptly, she sat up straight, leaving my grasp.\n\nI frowned. \"What is it?\"\n\nMy beautiful assistant leaned forward, wrapping her arms across her torso. She didn't respond right away, and again I had to wait her out. Typically quite a decisive person, I knew that for Cassandra to be so deliberate meant that she was seriously conflicted right now.\n\nAnd when she turned around, I felt that old emotional wall coming up between us. This wasn't the first time, nor would it be the last. And though I hated it every time she did so, I recognized that it was part of who she was. \"This is about you and me, isn't it?\" I asked.\n\nCassandra bit her lip. \"My apologies, sir. I just realized that my current decision-making is... biased.\"\n\n\"Biased?\"\n\nShe looked up at the roof, not seeing it. And when she dropped her eyes back to me, she exhaled and gave me a look of shame. \"I value our time alone together. These past couple of months, we've been working around the clock. I go everywhere with you, all the time.\"\n\n\"You always have.\"\n\nShe shook her head. \"This is different. We've been flying around to different buyers. We're always in the office. And even when we're home, we're in the _home_ office. That's time you're not spending with your wife, your girlfriend, your children.\"\n\n\"It's work.\"\n\nShe shook her head again. \"I love being with you, Jonathan. Sometimes...\" her voice hitched. She had to gulp and take a deep breath. \"Sometimes I wish it could just be me and you... the way my mother and Jonathan Kendall were. No wives. No serious girlfriends. No children. But that is selfish of me. And I promised myself I wouldn't think that.\"\n\n\"It's only human. And you know I love you.\"\n\n\"What we have is not romantic love.\"\n\n\"It is.\"\n\n\"It should not be, sir. And if you press me on this, you know what will happen.\"\n\nI sighed and closed my eyes. Twice before I'd pushed her beyond her comfort level, and twice before she'd abandoned me, just to prove to me (and herself) that she could. _*I*_ knew she loved me, perhaps even more than Taylor did. I thought there was an element of romance in there, but I didn't want to argue semantics. Cassandra was stubborn. And once she got an idea in her head, it was futile to try and dislodge it.\n\nCassandra looked at me frankly. \"Sir, I know you value my insight and opinions with all these business deals; but as you've told me time and time again, I'm your personal assistant, not a Vice President at JKE. My duty is to you and your household. Whether or not you retire, I need to remember that.\"\n\n\"If I retire, we won't be spending as much time together. Is that what you're getting at?\"\n\n\"That should be irrelevant.\"\n\n\"But it's not, is it?\"\n\n\"It... _should_ be... sir. And I won't let my selfish desires interfere with my duties.\"\n\nI sighed.\n\n\"If you retire, I think I'll be able to do a better job focusing on the household.\"\n\n\"You're doing a *great* job with the household. There's nothing you could be doing better.\"\n\n\"Of course there is.\"\n\nI took a deep breath. \"So then what do you think I should do?\"\n\nCassandra looked at me, her eyes pleading. But then she schooled her features and looked away from me. \"That is your decision to make. I will do my duties either way.\"\n\nI shook my head. Cassandra personally wanted to maintain the status quo. I knew it. That way, she could continue working closely with me, getting a TON of my time. But her conscience told her that element was wrong, that it was unfair to the rest of my family.\n\nStill, that didn't necessarily mean I SHOULD retire. Running JKE was still something I loved. Even Taylor hadn't insisted I stop everything right away. She only wanted me to consider it for the near future.\n\nAt a time like this, I really could have used Cassandra's advice. But because of her own emotions, she was divorcing herself from the decision. And with the wall up between us, and Cassandra in her robot-mode, further discussion was pointless.\n\nExhaling, I just shook my head and looked out the window. We would be landing soon.\n\n****\n\n*-- MONTAUK, NEW YORK --*\n\nThe helicopter touched down on the landing pad. Once the rotor wind died down, both Cassandra and I hopped out and went into the house. I led. She followed. Neither of us spoke.\n\n\"Good morning, sir, ma'am,\" Edward greeted us as we entered, taking our jackets. \"Was it a good meeting?\"\n\n\"Great,\" I replied, sounding anything but enthused. \"The deal is complete.\"\n\nWordlessly, Cassandra nodded to me and then headed off for the home office, no doubt to complete my orders to call Matthews and finalize the sales. I wasn't too worried about our recent tiff. In another hour, things would be back to normal between us.\n\n\"Well done, sir,\" my butler stated respectfully, keeping his attention on me. \"Would you care for lunch?\"\n\n\"What's Dorothy got on the menu?\" I asked.\n\n\"Your favorite, sir.\"\n\nI just chuckled. Everything Dorothy made was my favorite. I checked my watch. \"30 minutes?\"\n\n\"Of course, sir.\"\n\nI nodded and then turned to head for the stairs. It was a Sunday, and I wanted to get out of this suit.\n\nAlong the way, I passed by the family room. The kids were up and about, and both Taylor and Ashlyn were with their children, playfully romping about. Joey was toddling around, dragging a green caterpillar with multi-colored alphabet feet by a yellow string while JJ crawled after her, trying to grab it. I stopped in and kissed everyone.\n\nLike Edward, my women were keenly interested to know that the Hollister deal was finally done. And together they stood up and sandwiched me in warm hugs of congratulations. I patted their asses. I'd gotten my more personal congratulations from them last night.\n\nI told them lunch would be ready in a half-hour, and then left to go change. I hopped up the stairs two at a time, feeling an extra bounce in my step. The little emotional standoff with Cassandra had deflated me a bit, but now I was remembering that yes, this Hollister deal was FINALLY done. That I would soon be able to relax and take a much-needed vacation with my family. And for now, all I had to worry about was the next time I'd be getting laid.\n\nAfter all, my gratification had already been delayed twice this morning. First, I had been prevented from joining in with Taylor and Ashlyn by Hollister's abrupt meeting demand. And then in the helicopter, the burgeoning quickie with Cassandra hadn't happened. And feeling my wife's and girlfriend's asses just now only made my chubby even thicker.\n\n_Hmm... maybe I should delay Dorothy's lunch to give me time to satisfy a _different_ kind of hunger. Evelyn could look after the kids. Maybe I should go back down and invite my girls to help me get undressed._\n\n\"Hi, Mr. K! How'd the meeting go?\"\n\n_Perfect_. My hands froze, my tie half-way undone, as I glanced to my left. Jada Sharpley was coming down the hallway, a plastic basket of children's laundry in her hands. Dropping my hands, I immediately turned to the slender young woman and quickly stalked over to her.\n\nJada came to a stop as I approached, evaluating the expression on my face with a hint of smile on her own. Indeed, she looked ready to make some flippant comment, but before she could, I literally knocked the laundry basket out of her hands and onto the floor. Then grabbing the blonde girl by her face, I propelled her backwards until she hit the wall. And while she squeaked in surprise, I bent my head and rather savagely stuck my tongue down her throat.\n\nKissing me back, a giggle rose up in Jada's throat, enough to make us stop kissing. I pulled away, a hungry grin on my face as she laughed. \"This is a little sudden.\"\n\n\"You made me *promise* 'at first opportunity',\" I growled with waggling eyebrows.\n\n\"Mmm... I did...\" she hummed, drawing me back to her. Our lips met once again, this time the both of us hungrily devouring each other. And while her hands snaked up to grab hold of my tie, my hands were already tugging at the waistband of her light cotton pants.\n\nBut just as my hands ducked inside, she pulled off my lips and grabbed my wrist in concern. \"Right here?\" she asked, tension in her voice.\n\nI shrugged. \"Kids are in the family room. It's not like they can climb stairs yet.\"\n\nJada giggled before I cut off the sound with my mouth once again. And this time when my hands ducked inside her pants, she didn't stop me. I traced the tiny strap of her thong panties before getting good grips on her firm, 20-year-old asscheeks. Lifting her slightly, I pushed my crotch against hers and lightly rubbed my bulge against her. And she moaned heatedly into our kiss.\n\nFinally, I set her down on her feet. I dropped her pants to the floor, letting her step out of them while she loosened my tie enough to rip it over my head. She worked the buttons on my shirt next while I raised her short-sleeved shirt and pushed her bra up above her perky tits. Jada's breasts weren't the massive mammaries some of my other girls had, but they fit the young woman's petite body quite well. And I'd found them to be very pleasant handfuls with perfect shape and the most sensitive nipples you could ever want. \n\nI ducked to suckle at one of those little pink nubbins of joy while she cooed and held me to her chest. But then it was back to stripping as she pulled my suit jacket and shirt off my shoulders at the same time. I pulled back to rip my own undershirt off while Jada did the same with her shirt. And while she reached back to fiddle with her bra clasp, I found myself looking around for a good spot to fuck. My earlier flippancy about rutting in the hallway aside, I didn't want an awkward interruption at an inopportune time.\n\nThe upstairs laundry room was the closest. That WAS where Jada had been headed after all. And while my children's young nanny stood there wearing only pink thong panties, I grabbed her ass, lifted her up so that she crossed her legs behind my back, and then carried her into the nearby room.\n\nThe dryer was already running a previous load. The washer was idle, awaiting the clothes still sitting in the basket outside. I carried Jada straight over to the dryer, its surface warm with heat and vibrating ever so slightly as it tumbled clothes beneath. She laughed as I sat her down on it, and then panted in arousal as I dragged her panties off. My upper body was completely bare, but we hadn't had time to remove my slacks. I took care of that problem in a hurry, unbuckling, unbuttoning and unzipping to free my rampant cock. And with a 20-year-old blonde vixen spreading her legs for me atop the humming dryer, I leaned forward and pushed my torpedo into her waiting tunnel.\n\n\"Oh, FUCK,\" Jada groaned as I began penetrating her. Wrapping her arms around my head and her legs around my back, she pulled me to her. I clutched her head against the crook of my neck with my right hand, and tugged on her lower back with my left, until the two of us came together, our bodies fully enjoined in a position of sinful lust.\n\n\"Ah, fuck...\" I agreed contentedly.\n\nShe was tight. She was always tight. I loved my assistant, my wife, and my girlfriend very much, for millions upon millions of reasons. But Taylor and Ashlyn had gone through childbirth, and Cassandra was a six-foot Amazon. All of them knew how to work their pussy muscles to contract around me, but none of them could match the simple, near-virginal tightness of petite young Jada. And as I pumped myself in and out of that wonderfully constricting cunt, I groaned in absolute rapture.\n\n\"You feel sooo good, Jada...\" I groaned.\n\n\"Fuck me, Mr. K...\" she crooned, much to my delight. For some reason, it only fueled the babysitter fantasy for Jada to continue using my last name. And as I continued my pistoning motion, filling up that tight twat and then retreating to leave her panting for more, she continued that familiar litany. \"Fuck me, Mr. K... Fuck me, Mr. K... Fuck me!\"\n\nI fucked her. Beneath her ass, the dryer inexorably continued its tumbling vibration, rolling over and over and over again. Every so often, the sound of metal would clink inside, perhaps a button or something else impacting the ceramic drum. I kept grunting. Jada kept moaning. And adding to the cacophony of sounds, my own knees would bang into the front door with rhythmic precision as my turgid pole squished in and out of the blonde's wet box.\n\n\"Unnngh!\" Jada threw her head back and groaned as her naked body gyrated atop the running dryer. Her ankles lost their grip behind my back, and her legs parted to the sides before her heels banged against the dryer door as well.\n\n\"Urrghh!\" I didn't let up, leaning my torso into hers to keep rutting as hard as I could, maximizing my depth and maximizing our pleasure as well.\n\n\"Aaaghh!\" Jada pitched backwards, dropping her right arm behind her to hold herself up, our bodies now at a slight angle as her ass began sliding off the front lip of the machine, with only my forward thrusting motions keeping her on top of it.\n\nBut then Jada's first orgasm hit. She screamed, \"Unnngh-AAHHH!\" As her hips suddenly bucked upward, her ass came free of the dryer's surface and her entire body started falling off the edge. My left arm tightened around her lower back, pinning her against me and also trapping my cock at full penetration inside her. But my thrusting motions were automatic by now, and I continued humping her body, banging the smaller girl against the front edge of the machine now.\n\nJada continued howling in orgasm, the pain of the dryer's edge digging into her backside only amplifying her sensations. And without stopping my fucking rhythm, I dug my right arm beneath her ass, hoisted her up, and planted her back down on top of the dryer.\n\n\"FUCK MEEE!\" Jada screamed, her legs cinching around my body once again. That tight pussy clamped down even tighter, and only her copious amount of sexual fluids kept things smooth enough for me to continue pumping in and out of her body. From the way Jada's eyes had rolled up into her head, and the way she frantically held onto my shoulders while shaking like an epileptic, I figured she was lost to her lust now, nearing another climax. \"FUCK MEEE!\"\n\n\"Unnngh!\" I grunted, getting close to my own release.\n\n\"FUCK MEEE!\"\n\n\"UNNGH!\"\n\n\"FUCK-_*FUCK*_!\"\n\nJada's body shuddered, her arms clamping around my head with every ounce of strength she had. Her torso spasmed, shuddering so fast that it felt like she was making microthrusts against my cock with the speed of a hummingbird's wings. And her mouth gaped open in a scream so loud that not a single sound came out.\n\nStill, I certainly felt the intense orgasmic clamping of her cunt muscles around my cock accompanied by a fresh gush of fluids in her loins. And as her entire being milked my cock deep inside her, I felt my balls contracting to release their precious load.\n\nBut I couldn't cum. Not yet. Not inside her. I'd made a promise to myself, ever since the whole pregnancy-scare with Kaitlyn those years ago. The only women in my life I could cum inside of were Taylor, Ashlyn, Cassandra, and recently Charlotte. No one else. No exceptions. Not even our other closest friends.\n\nJada's limbs were frozen around me, and her mind was in some other place as she skated along the orgasmic plane of existence. I doubt she could have released me even if she *were* coherent. So with a lifetime of practice, I tightened my PC muscles and held back my urge. Just a little longer. The pain of it had even become rather pleasant for me, for I knew my release would bring me that much more relief.\n\n\".... \u2013uuuuuuck!\" Jada's voice finally came back at the tail end of her climax, her whole body sagging. This time, when her body dropped off the edge of the dryer, I let my hands guide her down until she knelt on the floor in front of me. And then finally, I released my core muscles, jacked my shaft with my own right hand, and aimed right at the 20-year-old nanny's face.",
        "\"UNGH!\" I groaned as the first spurt blasted forth, running a ribbon of hot cream from Jada's forehead and down over her right eyelid. She blinked and then reached up to hold the tip of my prick, gaping her mouth open wide again and aiming me within.\n\n\"Ungh,\" I grunted a little more softly, my second jet flying straight into her mouth. And then I let go of my cock, letting the young blonde reach up with her hands to take over and milk the rest of my spending all over her tongue and lips.\n\nWhen I was done, she opened her eyes and then began to wipe the cum trail off her eyelid, blinking all the while. She swallowed audibly and then picked at the globules dotting her lips and chin. And with a little sigh, she looked up to find me smiling contentedly over her. \"Was that good for you?\"\n\n\"Absolutely, Jada.\"\n\nShe smiled. \"Me, too. It was SUCH a turn-on when you just knocked the basket out of my hands and dragged me in here. I've never done it on a dryer before.\"\n\n\"You're a doll for letting me. We'll have to do it again sometime.\"\n\nShe grinned and popped the last bit of sperm into her mouth, smiling coyly. \"So I'm guessing the meeting went well?\"\n\n\"It did.\"\n\nShe grinned. \"I figured. Otherwise, I'm thinking you would have shoved me facedown and sodomized me until you got your aggression out of your system.\"\n\nI arched my eyebrow, leering down at her nakedness. \"Hmm, that might've made a bad meeting all worthwhile.\"\n\nThe young girl laughed and then reached her hands up to me. I helped her stand, and then pecked her on the lips. \"C'mon,\" I told her. \"Help me get dressed in something more casual. Dorothy should have lunch ready by now.\"\n\n****\n\n*-- TAHITI --*\n\n\"Cassandra, lie back down. That's an order.\"\n\nMy tall, blonde, buxom personal assistant frowned, her eyes unreadable behind her chunky black sunglasses. She remained sitting upright, torn between her desire to get up and my order to lie back down.\n\nI pointed emphatically with my finger at her lounge chair, doing my best to glare imperiously, although I felt a smile tugging at the corner of my mouth. And then I repeated, \"Down, girl. You're on *vacation*, remember?\"\n\n\"But your drink is empty.\"\n\n\"And there are dozens of paid attendants here.\"\n\n\"None of whom are here now.\"\n\nJust then, a brown-skinned native girl hurried up, apologized profusely, and took my glass. This ultra-private, ultra-exclusive Tahitian resort prided itself on its customer service, and such a lapse in attentiveness was not common.\n\nOnly then did Cassandra calm down. It always took Cassandra some time to adjust to being on vacation. When she first started working for me, she was always concerned with organizing the trip, making various arrangements, and setting up my vacation itinerary. For her, a leisure trip wasn't so very different from a business trip.\n\nBut lately, she'd been surrendering some of those duties to Charlotte. She only did so because I convinced her that I wanted her focus on ME, not on the officials or hotel clerks or whoever was running around to serve me. I dearly loved my wife and girlfriend, but the simple fact was that Taylor and Ashlyn were often preoccupied with JJ and Joey on these recent vacations. And when I wanted somebody by my side to keep me company, I wanted it to be Cassandra.\n\nFinally, with a sigh, she lay back down, letting the sun's rays bathe her nearly-naked body with a warm, all-over glow. Those massive melons I loved so much sagged a bit to the sides from their weight, unsupported by any bikini top or other garment. She did, however, wear a black and white zebra-styled bikini bottom. And at length, she crossed her legs and did her best to feign \"relaxation\".\n\nI chuckled and lay back down myself. I was beginning to bake a little more than I wanted, so I simply raised my hand and an attendant came over to adjust the gigantic umbrella above me. Cassandra followed suit a moment later, less into tanning than my wife and girlfriend. And then I sat back to watch my little tykes in action.\n\nWhile Joey had figured out how to toddle along on the carpet of our home, she had yet to master sand. My darling little princess could get up to her feet; but the instant she tried to take a step, she got off balance and tumbled to the ground. For some reason, falling down onto the softness of the fine-grain sand delighted her. So she did it over and over and over again.\n\nMeanwhile, JJ was engaging in a process of getting sand on his fingers, tasting them experimentally, and then making an ugly face when he realized sand doesn't taste very good. Of course, he then promptly took his wet fingers and stuck them back into the sand, to try again and see if the taste had improved.\n\nTaylor, Ashlyn, Charlotte, and Evelyn huddled around the children finding this whole thing hilarious. Me? I found Taylor, Ashlyn, and Charlotte crawling around without their bikini tops quite amusing myself. Only Evelyn remained fully clothed, in a one-piece suit and a sarong wrap, stating that no amount of persuasion would get her to strip half-naked and try to compete with girls half her age.\n\nJada, unfortunately, had not come along. It would have been her first opportunity to join in on a big Kwong vacation, but she had declined, stating that her father had invited her on a Sharpley vacation to celebrate the close of the Hollister deal as well. And as much as she would have liked to join us, family came first.\n\nMe? I'd already been fantasizing about watching Jada and Taylor finally go nuts with each other. While the young nanny had played around with various models around the house, and with Ashlyn, I hadn't ever seen her and Taylor screwing. And for now, at least, I'd have to wait a little longer. \n\nThat's not to say I was lacking for orgies on this trip. Our first night was kind of wiped out with the kids having their schedules all screwed up by the change in time zone. Taylor and Ashlyn refused to just let Evelyn and Charlotte deal with putting the kids down, leaving me alone with Cassandra for the evening. We made the best of it ourselves, of course. But the following night, the kids went to sleep with little difficulty in their separate cabana with Evelyn. And I got to party with four beautiful young women in my bed.\n\nThe third night was more of the same.\n\nAnd lest you think I was becoming bored of it all, I was looking for a repeat tonight as well.\n\nThe days, meanwhile, had been filled with tropical adventure, mostly centered on entertaining the little ones. We hiked them through the jungle, searching for brightly-colored birds and picturesque waterfalls. I spent most of my time carrying one baby or another on my shoulders, overriding Evelyn's protests for safety.\n\n\"You could trip and fall!\" our elder nanny screeched more than once. But I never did. Besides, the kids loved the view from up high.\n\nWe found turtles and other sea creatures on the shore. We dug up rocks of various shapes and sizes. We discovered seashells. And the girls and I made love.\n\nJJ and Joey still had two primary nap times, around 10am and then again at 2pm. The sounds of the ocean waves were better than any white-noise generators, and after all the excitement filling their days, both babies slept as well as they ever had.\n\nAnd while the kids were down, my ladies and I had time to play. Some of them would rest, tired from hikes or crawling after the little ones. Others would sneak away with me.\n\nFor example, Taylor, Cassandra and I re-enacted some of our favorite moments from our honeymoon. I especially loved having them two of them naked and braced against an open window overlooking the ocean, fingering each other while I switched left and right, screwing each of them in turn.\n\nOne afternoon, I planted Ashlyn flat on her back atop the Plexiglas window in the floor, watching fish swim underneath us while I fucked her hard enough to make the window rattle. More and more fish kept approaching to try and figure out what the noise was about. And Ashlyn was shrieking her head off in a panic that we might accidentally break the window and fall into the ocean. That fear somehow made her orgasms even better.\n\nAnd still another time, Taylor and Charlotte sixty-nined on our big bed while I knelt behind Charlotte's upraised ass with my cock fully imbedded in her rectum and my hands around her throat, choking her to the most exquisitely painful orgasms.\n\nIt was a perfect vacation.\n\nNow, as we chilled out in the cool shade beneath our canopy umbrellas, I glanced over to my right. Cassandra's unfettered tits rose and fell as she FINALLY began to relax, a cocktail burning its way through her veins. I then looked ahead, watching everyone else playfully tumbling in the sand while the laughter of my children filled the air. And I realized:\n\n_Yes, I can retire. Why would I want my life to be any different than this?_\n\n****\n\n\"Ngghhhaaaahhh...\" Taylor sighed happily. Panting softly, she lay her chest down against mine, just resting as she came down from the quiet orgasm. Our bodies continued to rock, however, as the funky suspended-chair hammock we were riding on continued to sway from its ceiling mounts. I was seated upright, my toes dragging on the floor as we oscillated back and forth. And my wife straddled my lap, her legs pointing back behind me, as the motion continued to grind my upthrust cock inside her tight twat.\n\n\"That sounded like a good one,\" I whispered in her ear.\n\nWith her eyes still closed, Taylor grinned and mumbled. \"Mmm-hmm...\"\n\n\"Ungh! UNGH! AAAAAHHHH!\" someone screamed from the bed.\n\n\"... that sounded like a better one,\" Taylor commented, still without opening her eyes. Indeed, Ashlyn was bucking and screeching while flat on her back, Charlotte's brunette head between her thighs and Cassandra's head over her chest, apparently suckling some nipples.\n\nI chuckled. \"Are you complaining?\"\n\nNow Taylor opened her eyes and looked up at me, a sparkle in her dark blue irises. \"No, of course not. That was beautiful. And this is a vacation. We're supposed to be relaxing.\"\n\n\"Ngghhhaaaahhh ...\" Ashlyn groaned, her eyes rolling up as her head tilted away from us, her entire body going limp.\n\n\"Ashlyn looks pretty relaxed,\" Cassandra commented as she sat up straight, grinning at us. She then reached over to the redhead's left breast, which was still covered by the triangular fabric of her bikini top, and pulled it down to expose the entire globe and match the other one. This left only a multicolored string running underneath both of Ashlyn's large bosoms, with another string running up the sides and behind her neck, halter-style.\n\nI rather liked the look, and gestured to my assistant. \"You, too.\"\n\nGrinning, Cassandra pulled her own bra cups down, and then looked over at Charlotte. Still wiping her face clean of pussy juice, the pretty brunette smiled and bared her breasts as well. And finally, while still sitting impaled on my cock, my wife did the same.\n\nAll four women had been fully clothed when we entered our tropical cabana, if you counted wearing skimpy bikinis to be fully clothed. Of course, I'd been doing some heavy flirting before our arrival. And once behind the safety of a closed door, my girls had promptly acted on my sexual innuendoes, Taylor pulling the crotch of her bikini to the side so she could mount me, while the two assistants tackled Ashlyn to the bed.\n\nSo all four women were still \"technically\" fully clothed. But bikini bottoms were pulled aside and now bikini tops were pulled down. I nearly got whiplash trying to stare at four pairs of tits at the same time, then I just smiled and leaned back against the hammock, causing us to sway a little more. I loved my life.\n\n\"Speaking of relaxing,\" Taylor mused, while slowly clenching and unclenching her pussy muscles around my cock. \"Do you girls have any ideas of what you're going to do when we retire?\"\n\n\"Thought we were doing it already...\" Ashlyn commented with her eyes still closed. \"Lazing around tropical paradises while exploring all manners of sexual pleasure...\"\n\nI jerked a thumb at Ashlyn. \"What she said.\"\n\n\"Well, of COURSE,\" Taylor chuckled. \"But you all have hobbies. What ELSE would you like to do? C'mon, this is the dream, ladies. We have all the time in the world, and all the money do to whatever we want. I'm deciding right now: Every one of you gets to make your life EXACTLY the way you want it. Charlotte, come on. What do you want to do with your life?\"\n\nTaylor's personal assistant looked over at us, wide-eyed in surprise. The pretty brunette was used to being the wallflower of the group. At 5'6\", she didn't have the height and stature of the other girls. With a modest 34B bosom, she didn't have the big tits of the others. And while quite attractive, she didn't have the kind of face that made men stop in their tracks and drool like Taylor, Ashlyn, or Cassandra. That was all fine with her. She didn't ever like being put in the spotlight; and even now, amongst her friends, she looked like a deer in the headlights. She pushed her wire-rimmed glasses up the bridge of her nose while sputtering, \"Me?\"\n\n\"Yes, you.\" Taylor's eyebrows shot up as the light bulb obviously went off in her head. \"Wait, new rule. Johnny is the confessional chair. Whoever's turn it is to speak has to sit on him.\"\n\nCharlotte still looked nervous, but when Taylor got off me and ordered her into my lap, she obeyed. Taylor even held Charlotte's bikini bottom aside as the young brunette spread her own pussy lips and sank down upon my cock. I suppressed a chuckle at Taylor's little gimmick, but smiled and welcomed Charlotte aboard with a happy groan as tight pussy surrounded my column of manmeat.\n\nThe young brunette shivered as she felt my cock filling her up. But before she could get herself settled, Taylor stated, \"Now seriously, tell us what you want to do.\"\n\nCharlotte herself took a moment to gather her wits. \"You want me to *talk* right now?\" she whimpered, panting softly with her lips parted.\n\n\"Yup,\" Taylor replied with a grin.\n\nTo her credit, Charlotte took a deep breath and smiled at me before turning to her boss. \"I stay with you, of course.\"\n\nTaylor shook her head. \"No, I mean really. You've been with me for so long already, Charlotte. But when I retire from modeling, there wouldn't be much for a personal assistant to do. No more scheduling. No more logistics, handling phone calls, or negotiating rates.\"\n\n\"You'll still have fan mail, and a busy social calendar.\" Charlotte almost absent-mindedly gyrated her hips, keeping a regular action on our joining, despite carrying on a conversation as if I wasn't even there.\n\n\"I could get anyone to handle that.\"\n\nCharlotte actually looked hurt. \"Am I that replaceable?\" \n\n\"No, no. Of course not. I just want you to be able to do whatever you want.\" Taylor folded her arms underneath her breasts, inadvertently giving me a better view. \"You're not even 28, Charlotte. You have your whole life ahead of you.\"\n\n\"The only life I want is here.\"\n\n\"Ooh, I know! You're always making flower arrangements around the house or for some of the girls. I remember that Teagan had you make her wedding bouquets and the centerpieces at her reception, right? Haven't you ever thought of opening a flower shop?\"\n\nCharlotte batted her eyelashes, looking downward before putting her wrists together and holding her hands palms up to Taylor. At the same time, she squeezed her pussy tightly around me, putting an extra wiggle into her gyrations. And with wide brown eyes, she looked adoringly up at her Mistress. \"I belong to you, Taylor. What I *want* is to be with you. You know that.\"\n\nJust then, Cassandra put her hand on my shoulder. As I looked up at her, my own assistant smiled down at me and jerked a thumb at Charlotte. \"What she said.\"\n\nI grinned and patted Cassandra's hand, murmuring. \"I know.\"\n\nWith a resigned, but pleased smile, Taylor nodded. Even though I didn't really understand the whole domme/sub culture, I knew enough to understand that Taylor and Charlotte had a special kind of relationship. It wasn't the same as between me and Cassandra \u2013 Charlotte was too submissive, too dependent on Taylor \u2013 but it was still something unique. \"Okay, okay,\" Taylor conceded. \"But things are going to change. Daily life is going to be different, and I AM going to start finding out the other things in your life that make you happy.\"\n\nCharlotte smiled. \"That's easy. I love taking care of JJ and Joey.\"\n\nTaylor grinned. \"Yeah, I can see the appeal.\"\n\nWith that, Charlotte stopped her little lap dance (albeit with my cock inside her), and turned to me. \"Excuse me, sir,\" she stated almost apologetically before dismounting. She immediately went over to Taylor, first hugging her Mistress and then letting Taylor take hold of her cheek to bring them into a sweet kiss.\n\nI groaned then for two reasons. One, it was simply beautiful to watch my gorgeous wife locking lips with her pretty brunette assistant. But two, almost as soon as Charlotte moved out of the way, Cassandra had knelt beside me, grabbed onto my hips around the hammock, and sucked my wet, erect cock into her mouth.\n\nI reached down and tapped her head. \"I think it's your turn. Hop on and confess what you want.\"\n\nCassandra lifted her head for only a moment. \"I stay with you. End of discussion.\" And then she put her mouth on me once again.\n\nI looked up to Taylor. With one arm around Charlotte's shoulders, my wife shrugged. \"No surprise there,\" she said. And then she looked over to the bed. \"Ashlyn? Your turn.\"\n\nGrinning, the sexy redhead slinked off the bed and sashayed up to the swaying hammock-seat. Cassandra stood up, winking at me, and stepped out of the way. And after pulling the hip-ties to her bikini bottoms loose, letting the skimpy fabric fall to the floor, she straddled my legs and guided my dick into position.\n\n\"Mmm...\" Ashlyn sighed happily as we slowly joined together, until I was absolutely as far in as I could go. Wrapping her arms around my back, she pushed off with her feet, setting the whole hammock to swaying once again. And pulling me in close, she tilted her head and met me with a hot, passionate kiss.\n\n\"So...\" Taylor began. \"All the money in the world... All the freedom... What do YOU want to do with your life, Ash?\"\n\nAshlyn merely held up a finger, indicating that we should wait a minute. And curling her arms around the back of my head, Ashlyn proceeded to push her tongue deep into my throat, kissing me with an even greater passion while undulating her hips to fuck herself upon me harder and harder.\n\nIt actually took more than a minute, but not that much more. My own hands were stroking up and down Ashlyn's naked spine, sliding under the back string of her bikini a few times. She quivered and trembled in my grasp as she kept humping me, and by the time I buzzed over her anus with one of my fingers, she clenched up and came in my lap.\n\n\"-Ngh! \u2013Ngh! \u2013Ngaaaahhh...\" Ashlyn croaked, the muscles in the back of her neck taught. But then she sighed and relaxed. And as her body went still, all that remained was the wobbly orbital motion of the two of us still swaying back and forth.\n\nNo one said anything for another couple of minutes. Already sweaty, both Ashlyn and I panted, her with relief and me still with some ejaculatory tension. And we cuddled intimately while I cradled her head against my shoulder.\n\nThen out of the blue, Ashlyn stated quietly. \"I want another baby.\"\n\nI picked my head up, turning to look down at my girlfriend. But she kept her eyes closed and her forehead on my shoulder, so I raised my gaze first to Taylor and then to Cassandra. Taylor looked sad, but understanding. Cassandra just looked thoughtful.\n\nI continued stroking Ashlyn's back, and eventually she raised her eyes to me. \"I want you to give me another baby. We all know Joey was an accident. Given the situation, and especially knowing your stance on cumming inside of other women, I know you never would have chosen to get me pregnant. But that was then. So much has happened since then, and having Joey has brought us together, Johnny. You... and Taylor... and Charlotte and Cassandra have all welcomed me into this family. We've never felt like we were outsiders. And even though you and I aren't married, I feel like this is where I belong. I don't want anyone but you. You're the man I'm meant to be with the rest of my life. You're the man meant to be the father of my children.\"",
        "\"Oh, Ash...\" Taylor immediately stepped forward and caressed Ashlyn's cheek.\n\nAshlyn closed her eyes, wincing briefly before holding Taylor's hand against her cheek and then looking up at her. \"Tay... are you okay with that?\" she asked almost fearfully. \"Johnny's *your* husband. You're his Number One. I promised a long time ago I would never do anything to mess up your marriage, and I would never try to interfe-\"\n\n\"Stop it, Ash. We've been through this already.\"\n\n\"But this is different. Letting me and Joey stay with you was one thing. Maybe it was the only option you had once I got pregnant. This is letting your husband raise a family with me. And I can't help but think of you and your... problems... there.\"\n\nTaylor's face fell momentarily. The same medical condition that had caused her miscarriage years back was still present, and had actually been worsened by her pregnancy with JJ. In fact, the doctors considered it a minor miracle she'd been able to carry JJ to term. Ever since then, Taylor had gone completely without birth control. And despite the hundreds of times I'd filled my wife's womb with viable sperm since then, she had yet to even get pregnant again. While not statistically impossible, the doctors had told us she would never have another child.\n\n\"Those problems aren't your fault,\" Taylor told Ashlyn, caressing her best friend's cheek once again. \"I wish things could be different, but I've accepted that Johnny and I can't have any more kids. And yet... I would *love* to have more children running around that massive house. And if they can't be mine, I can't think of anyone I'd rather bear my husband's children than you.\"\n\n\"So you're okay with it?\"\n\n\"Yes...\" Taylor stated thoughtfully, still digesting the idea. \"Yes, Ash. When you're ready, I think it's a great idea.\"\n\nAshlyn squealed happily, which did wonderful things to the muscles in her cunt. Still with her left arm around my neck, she reached out with her right and pulled Taylor down to her. The redhead hugged the two of us together, kissing Taylor and then me and then back again. Only then did the girls seem to realize that the decision wasn't entirely up to them.\n\n\"Johnny,\" Ashlyn began, biting her lip pensively once again. \"Are YOU okay with this?\"\n\nMore kids? To be fair, I hadn't had to do a lot of work in raising JJ and Joey, getting all the good and fun with none of the bad and exhausting. The nannies did the bulk of the grunt work, Taylor and Ashlyn were heavily involved in training and caring for them, and I went off to work. I'd changed a diaper here and there, but so far the babies had not been a serious detriment to my daily life. I knew I was in an ideal situation, unlike the other 99.9% of the population with kids. But although I wouldn't have to shoulder the workload, these would still be my children, and I had to ask myself if I was ready for them.\n\n\"Are YOU ready, Ash?\" I asked my girlfriend. \"I thought you were excited to get back to your modeling career. It's something you do because you love, right?\"\n\n\"Oh, I do! And maybe I won't retire immediately. I'm barely 26. I still have a lot of years ahead of me. But I can definitely scale back to spend more time with all of you. Besides...\" Ashlyn reached her right hand across, laying the back of it against my right cheek. She smiled sweetly at me and then leaned in, pecking my forehead. \"Before, I didn't know if I would have someone to retire *with* before. All the success in the world means nothing without this family behind me. But now I think I've finally found it all.\"\n\nI smiled, then held her head and kissed _her_ forehead. \"I'm here for you. I'll always be here for you, because I _love_ you, Ashlyn.\"\n\n\"And are you ready to have more children with me?\"\n\n\"Absolutely.\"\n\nAshlyn grinned, moving in to nuzzle my nose. \"Mmm... let's start right now. Surely you've got to be primed to blow after waiting all this time with your dick in one hot pussy or another.\" She clenched her muscles around me for emphasis.\n\nI arched an eyebrow. \"Right now?\" I asked. \"You didn't go off your pills without telling me, did you?\"\n\nAshlyn laughed. \"No, no, of course not. What kind of girlfriend would do _that_ to you? But soon. In the meantime, maybe we can practice?\"\n\nI grinned, and then slapped my girlfriend on her ass. \"Maybe. But you're right, I'm primed to blow after sitting her letting you ladies grind yourselves on me for the last hour it seems like. So right now, *you* are going to bend yourself over that bed right there. And you, you, and *you* are going to line up right next to her,\" I barked, pointing at Cassandra, Charlotte, and Taylor.\n\nGiggling, Ashlyn dismounted me and then suitably pressed herself facedown on the mattress, reaching behind herself to spread her own asscheeks to the sides. Likewise, the other three women in the room lined themselves up, FINALLY dropping their bikini bottoms to the floor, and laughing all the while.\n\nI hadn't necessarily meant to assemble my girls this way. But somehow, I'd ended up with blonde and brunette assistants, a redheaded girlfriend, and a raven-haired wife \u2013 all my favorite colors. And with a loaded cock at the ready, I stepped forward to play my favorite version of Russian Roulette.\n\n****\n\nFor years, Cassandra and Charlotte had been the personal assistants to me and Taylor, respectively. And it seemed that even in retirement, they would stay that way. So I looked forward to many more days like today.\n\nThe two of them were face-to-face and chest-to-chest, and more importantly for me, just about pussy-to-pussy. Indeed, Charlotte lowered her crotch, grinding her clit against Cassandra's pubic bone for a few seconds while I sawed my cock in and out of her tight pussy from behind.\n\n\"Ohhhhnnnnghhh!\" Charlotte groaned as she felt my thick cock penetrating into her core. Her head came back as she arched back, exposing her neck. Cassandra took advantage, rising up to kiss and suck at the smaller woman's sensitive skin. And looking so much like a vampire from all those recent books and movies, the beautiful blonde flicked her blue eyes to me and smiled with them even as her teeth bit down ever so gently into Charlotte's neck.\n\nI just fucked Charlotte even harder. And for good measure, knowing just how much the young brunette got off on pain, I started smacking her bare asscheeks, pretty much as hard as I could. \n\n*SMACK* \"AAAHH!\"\n\n*SMACK!* \"AAAHHH!!\"\n\n*SMACK!!!* \"AAAHHHH!!!\"\n\nAnd then before either woman realized what was going on, I yanked out, aimed lower, and drilled my cock into Cassandra's waiting cunt.\n\n\"AAAAHHHH!\" the blonde screamed from beneath the brunette. Carefully, I noted the slight but noticeable variance in pitch from one woman to the other. And then feeling Cassandra's inner muscles coiling down around me, I resumed my drilling motions.\n\nMeanwhile, Taylor and Ashlyn were not idle. My wife and girlfriend rolled around in the ocean surf, like they do in the movies, with the waves crashing lightly over their bodies as they kissed and caressed each other in passionate, Sapphic abandon. It was a private beach, OUR private beach, and we didn't have any fears of being exposed. Only our staff knew exactly where we were, and they were careful to stay away. We paid a premium for such service.\n\nI brought Cassandra to a screaming orgasm, where she threw her own head back to scream. Charlotte then returned the favor, suckling on the blonde's exposed neck while squeezing her larger breasts. And when my assistant came down from her orgasmic high, I sat back on my own ass, letting my worn cock pull out from her saturated pussy.\n\n\"Tired, girls?\" I asked with a goofy grin on my face.\n\nCassandra was limp on the lounge chair she lay on, her arms flopping off the sides to drag in the sand. Charlotte, winded herself, just lay her head down on Cassandra's shoulder, and sighed contentedly.\n\n\"Satisfied,\" Cassandra answered for the both of them. \"Go play with your wives.\"\n\n\"Got it.\" I grinned and stood up from my spot kneeling in the sand at the foot of the lounge chair. And with my dick leading the way, I sauntered over to my ladies.\n\n\"Hello, my wives,\" I greeted cheerily. Ever since that night when Ashlyn declared she wanted no other man but me, and wanted to raise a family with me, Taylor had taken to calling her my new \"wife\" instead of my girlfriend. Charlotte and Cassandra had picked up on it, and Taylor was even talking about holding a ceremony here in Tahiti before we headed home. It wouldn't be legally binding in the U.S., as polygamy was illegal. But a ceremony would cement things in our hearts nonetheless.\n\n\"Come to us, my husband,\" Ashlyn giggled as she rolled off of Taylor and onto her back.\n\nI was quickly atop my new wife, my chest pressed against her bare tits and my cock fully imbedded inside her inferno of a pussy. I did my best to drive Ashlyn's body deeper into the wet sand, and Taylor was right beside me, alternately kissing us, caressing us, and reaching back to tickle my balls.\n\nPrimed from her play with Taylor, Ashlyn crested into orgasm. Really, that girl had the quickest trigger of any woman I'd ever known. And after happily enjoying her climax, she pushed me up and told me to take Taylor.\n\nI kissed the redhead before crawling to my right three feet, centering myself as Taylor hooked her long, long legs over my shoulders, folding herself beneath me. I drove into her sopping wet snatch in a single thrust, and while my first wife held my face in her hands, staring up at me with adoration, I drove myself to the brink of my own ejaculation.\n\n\"Cum in me, honey. Fill me up,\" Taylor crooned. \"You've satisfied all of us. Take your just reward.\"\n\nI grinned and hammered her even harder. With four women and only one me, I felt a certain responsibility to make sure they were all satisfied. All four of them were bisexual, and fully capable of getting themselves off without me. But everyone felt the party slow down whenever I went off and was put out of commission for a little while. And I thought it my duty, as the single man in my harem, to make them each cum before I did. As with many of our recent sessions, I fucked each of my women to at least one orgasm. And after what felt like *forever*, I was finally giving myself permission to cum.\n\nTaylor smirked. \"Besides, the kids will be awake soon.\"\n\nI chuckled and then lay my forehead down in the sand, concentrating on the rhythm of my stroking, focusing on the exquisite sensations hurtling up my shaft, my spine, and into my brain.\n\n\"Ughhuhh...\" I groaned, feeling the pressure increase in my head.\n\n\"Cum, honey, cum. Fill me up. Then you can watch Ashlyn suck it out of me and snowball it back into my mouth. Maybe then we can get you up fast enough for a quickie before the kids wake.\"\n\n\"Unnnghh!\" I groaned, really driving my hips into hers.\n\nTaylor reached up, actually holding her own ankles above her head to pull her feet down into the sand, letting me get just that extra half-inch deeper. And with a final roar, I slammed forward and blew.\n\n\"HHHNNNNGH!\" I grunted, feeling the dam burst open and the flood of spunk pour out of me. This particular session had gone on for a LONG time, and while I still felt the pulses of individual shots racing out of me, it felt more like the waves of the ocean, high pressure spots amongst an unending flow of liquid.\n\n\"Hnnngh,\" I groaned, feeling the fourth and fifth pulses as Taylor caressed my face.\n\nAnd then I was finally done. But rather than pull out to let Ashlyn in, I just let myself sag atop my wife. The ocean was heading toward low tide, the waves barely lapping at my feet instead of crashing over us. And I simply enjoyed the feel of Taylor's body beneath me as the water dried on our sun-drenched bodies.\n\n\"I love you, Taylor. Don't forget you're still my Number One.\"\n\n\"I know. That's why I let you make Ashlyn your Number One-A,\" she giggled and kissed me. \"And don't get me started on Cassandra. She's not even in the pecking order. She's more like a Greek symbol in this ranking of-\"\n\n\"Jonathan!\" Cassandra interrupted. I looked up to see my assistant jogging up to us, still fully naked. Those glorious tits bounced up and down in slow-motion before me, giving me some rather significant flashbacks to being a teenager watching Baywatch, and for a moment I was kinda distracted.\n\n\"Jonathan!\" Cassandra barked again, this time standing right in front of me.\n\nI managed to draw my attention away from her tits again, despite feeling my cock start to harden inside of Taylor. As I rolled off and looked up at her, I finally noticed the Blackberry in her hand. I scowled in annoyance. Cassandra knew better than to answer her phone during \"playtime\". She ALWAYS turned her phone off whenever we were having sex. And for her to interrupt me while I was lying post-coital with Taylor was unacceptable.\n\nThen again, Cassandra DID know not to pick up the phone during playtime. In fact, she once told me her phone had a setting to ignore all incoming calls unless they were absolutely urgent. So looking even higher, I saw her face. And to my surprise, even after tanning for about a week, Cassandra was absolutely ghost white.\n\nSomething was wrong. My mouth gaped open and in alarm, I sat up. \"What is it?\"\n\n\"It's Edward, at the house.\" Cassandra's jaw quivered, and she reached the phone down to me.\n\nI took it and instantly pressed it to my ear. \"Edward? It's John. What's wrong?\"\n\n\"Sir, there's no easy way to say this,\" my butler stated.\n\n\"Just say it,\" I barked rather harshly.\n\n\"Mr. Wainwright is here from the office. He says...\" Edward trailed off, clearly composing himself, which was highly unusual for the always-starched, always-poised butler. \"He says that the money in the escrow accounts is gone. He says that Mr. Sharpley and Mr. Matthews have disappeared. He says you've been robbed.\"\n\n****\n\nI stomped back from the cockpit, listening to the engines heating up. Cassandra and Ashlyn were seated and buckled in. Charlotte was just sitting back down and buckling herself as well. Taylor wasn't in her spot, but was fussing over JJ with Evelyn.\n\n\"What's going on? We need to depart right away,\" I barked at Charlotte.\n\n\"It's nothing, sir,\" Charlotte said apologetically. \"JJ's just squirmy and uncomfortable. They never like the pressurization of an aircraft cabin and he's got a bug bite that seems to be really itchy.\"\n\nI clenched my jaw but nodded. \"Okay.\" I could get annoyed at my wife for delaying me, but I couldn't really get annoyed at my infant son. It wasn't HIS fault he was being dragged halfway around the world.\n\nSoon enough, Taylor returned and buckled into her seat, kissing my cheek apologetically. The stewardess swung by to verify we were set, then signaled the captain, and we started taxiing to the runway.\n\nI then turned to Cassandra, who despite all aircraft regulations had her laptop out. She was typing rapidly and wore her earpiece headset. And when she felt me staring at her she turned her attention to me.\n\n\"So what's the damage?\" I asked.\n\nCollecting herself, Cassandra took a deep breath. The color was still drained from her face. And without looking me in the eye, she stated softly. \"4.2 billion is gone \u2013 everything the buyers paid into escrow. One buyer was late, and hadn't put in the last 400 million, otherwise that would probably be gone too. At least we've received assurances that the remaining 400 _is_ coming in within the next few days.\n\nI closed my eyes and sat back in my seat. The math was simple: I had spent 4 *billion* dollars to buy up all of Hollister's companies. Only 0.4 billion was coming back. And when the dust settled, JKE... no... _*I*_ would be _*3.6 billion*_ dollars short.\n\nI had deep pockets. I had other assets. But losing that much money in one fell swoop was absolutely _crippling_. The four billion out to Hollister was gone; I wasn't getting that back. If we didn't find the money Sharpley and Matthews had stolen, JKE would be bankrupt. Period. Losing almost four billion dollars was simply unrecoverable.\n\nI would be ruined.\n\n\"Sharpley?\" I asked, without opening my eyes.\n\n\"No trace of him. He was last seen boarding a flight for Switzerland. No trace of him since Zurich.\"\n\n\"Matthews?\"\n\n\"Same thing. Off the radar on Grand Cayman.\"\n\n\"Fuck.\"\n\n\"Jonathan...\" Cassandra took a deep breath. \"There's more...\"\n\n\"What?\"\n\nCassandra hesitated another moment. For a moment, she pensively looked away, squirming as if undecided whether or not to tell me this last bit of news. But at length, she added, \"It's Jada. She's disappeared, too.\"\n\n\"WHAT?\" My eyes popped open and I sat up straight.\n\nCassandra wouldn't look at me. \"Jada Sharpley, Robert's daughter... She's disappeared. Dorothy said she was supposed to return from that family vacation yesterday, but she never showed.\"\n\nI closed my eyes and already knew: _That's_ how he'd done it. My VP of Acquisitions, my most trusted lieutenant in all these mega-blockbuster business dealings, had stolen 4.2 _billion_ dollars from me. And I knew how he did it:\n\nHe'd sent in his own *daughter* to seduce me. To spy on me. To steal whatever he needed to pull this off.\n\nAnd he'd succeeded.\n\n\"Find her.\"\n\n\"The FBI has been notified. Agents are already at the house. They're trying to track all three of the principals.\"\n\n\"No. HER. I'm serious, Cassandra. I want this to be your personal top priority.\" I sat up straight, then reached over and grabbed my assistant's chin, firmly redirecting her to look straight at me.\n\nCassandra's eyes wavered. In all our years, I don't think she'd ever seen me this angry.\n\n\"Find Jada Sharpley.\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "billionaire",
        "group",
        "orgy"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/tom-billionaire-ch-02"
}