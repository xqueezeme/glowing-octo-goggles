{
    "title": "Strange Bedfellows",
    "pages": [
        "It was almost Sunset and I was doing a load of dishes when I heard the knock at my door.\n\n\"Fuck,\" I muttered to my empty kitchen, my arms covered up to my elbows in soap and dishwater as I exhaled and blew little bubbles everywhere, crying out to whoever it was at my door, \"Just a minute...!\"\n\nI could have swore I heard another timid knock at my door as I shook the soapy film from my hands with a few sharp snaps of my wrists and strode to the door, expecting Jehovah's Witnesses or some neighbor that would only deign to talk to me only when asking for some random thing.\n\nInstead, I opened the door to find my friend May sobbing, a river of tears cutting a channel down her smooth brown cheeks. Her olive shaped amber eyes were normally alight with wit and laughter, but now were swollen and red from crying.\n\n\"I'm sorry Ethan- I would have called bu-but...\" She broke down, and she looked exhausted, wounded and defeated.\n\n\"Don't worry about it,\" I gently took her by the shoulder and pulled her into my house, away from the prying eyes of my elderly neighbor and the Summer heat. It was damn hot out and in addition to tears, May was drenched from not only sweat but some unknown substance- a red stickiness contrasting with the deep, dark brown of her face, neck and and arms. It even managed to cling to her shortly cropped, thick curly hair as well as the black of her over-sized Pink Floyd t-shirt.\n\n\"Sit here, I'll be right back,\" I said firmly but gently, and though she would have said something smart-ass at me telling her what to do- in her state she just collapsed, like a puppet who just had it's strings cut into my aged but comfortable reading chair. I got us both ice water and towels so she could get off the sweat and whatever it was on her and I my hands still wet from doing the mostly completed pile of dishes.\n\nBawling sobs ripped through my apartment and with a shaky hand she accepted the large glass with her surprisingly strong grip, taking several heavy drinks of the refreshingly cold water.\n\nI sat there silently- waiting for her to speak. My eyes were intent on her face. She usually looked me in the eye, strong and confident- but today she looked down, broken. It was sad to see. She numbly wiped at the unknown crimson spatter mingled with sweat from her caramel skin, and rubbed at the patina of snot above her thick, purple lips. Wracking sobs shook her body as I could see her white, but slightly crooked teeth show through a pained grimace. To say May's ancestry was mixed would be an understatement- her ancestry was comprised of black, Korean, German and a Hodge-Podge of a few other random nationalities. She was pretty, but fell just short of being beautiful- She'd probably look stunning in a dress, but it'd take a a million dollars AND a SWAT team to get her into one. She was the quintessential Tomboy, from the brazen way she spoke, to being able to spot me at the gym down to the way she kept her curly hair- black and dyed with red highlights and cropped short in a relaxed style that was unintentionally flattering. \n\nIf my gaze were to wander down, I'd see what was probably quite the body hidden underneath those baggy clothes- petite, muscular and voluptuous- but I didn't...\n\nReally, it was because that would have been a moot point really. May was gay and a total fucking butch. Gayer than the whole YMCA discography- in fact we met through a former girlfriend of mine, Abby. Abby was \"bi-sexual\". Though I think it was just term for Abby being unable to commit to anything- even the gender of her sexual partners. As she did with me, Abby decided for some random reason- maybe because it was Black Friday or something, that she liked dick again and moved to Toronto with some dread-locked stoner guy who spoke French and sold hemp products out of this head shop. It was rather sudden, leaving May not a little hurt, not unlike how Abby had had left me when she got together with May.\n\nI remember wanting to be bitter at May when I first met her, but I couldn't help but enjoy her easy, honest smile, the way she always said what was on her mind, and her infectious laugh. \n\nIronically- it chapped Abby's ass that May and I got on as well as we did. I think May was supposed to be something to flaunt in front of me for whatever stupid reason. I have to admit, I enjoyed robbing Abby of that.\n\nInstead, we got to talking about how Brazilian Jiu-Jitsu was often overrated off the mat and from there, why Metallica should have quit after The Black Album, finally to why Fosters was still decent beer in spite of the hate.\n\nSo, long after Abby had departed for the Great White North, May and I kept talking. We were platonic friends, obviously, despite her having a great rack and an ass that could make even baggy, thrasher jeans look good. As far as I was concerned, she was off the market- not even remotely interested nor ever would be. I have plenty of other women friends who were hetero and we weren't dating or fucking. The tried and trite \"Let's just be friends\", as long as it was offered sincerely, never stopped me from actually being friends with a woman. It was the same thing with her- I didn't weird things up by hitting on her, and I didn't hit on her girlfriends. We worked out like we were just two dude friends. Unlike my other women friends, May had the additional perk that my hetero chick friends didn't in that we could go look at tits together. \n\nFour months ago May had met this chick in her Women's studies class who kind of reminded me of Abby. Sure, Carmen was Abby's physical polar opposite- short where Abby had been tall. Carmen was a dark skinned Latina where Abby was about as Irish as Corned Beef and Cabbage- her skin like milk and freckled with cinnamon. Carmen was curvy where Abby was slender. It wasn't her body type or skin tone that made her another Abby but the same, juvenile need for attention and a ruthless ability to apply histrionics and manipulation to get it.\n\nI remember laughing with May one night over some beers after work a few weeks ago and she told me how Carmen thought I was gay.\n\n\"Really?\" I blinked,\"Why would she think that?\"\n\n\"Yunno- I asked her the same damn thing,\" May responded after thinking on it as she took a deep swig from her gold and blue can of Fosters,\"You know what she told me?\"\n\n\"What?\" I asked- I mean I bathed and used deodorant and I laughed at Mrs. Doubtfire but I wasn't exactly Metro or anything. Why would I ping on her gaydar?\n\n\"He never hit on me\" Carmen said,\" May replied, looking at me pointedly,\" You believe that shit?\"\n\nWe both had a good laugh at that. It wasn't that Carmen wasn't fuckable, she was. I might have been El Juero Blanco, but I was equal-opportunity. However you wanted to slice it, Carmen was my buddy's girl. Regardless of what May wore underneath her Fruit of the Loom's she was still my bro, and I would never violate the \"Bro Code\" like that, No IF's, AND's or BUT's. I recall thinking back on it, and something about that struck me as just arrogant on Carmen's part. I told myself I was probably just reading too much into things- and May really liked her and I did the best I could to be a good wing man.\n\nMy other friends gave me shit (As I'm sure some of May's dyke buddies gave her shit for hanging out with a straight dude) for hanging out with a \"dyke\" but I'd fuck with them back, \"Jim, you're just jealous she gets better poon than you.\" And it's true- she had some great taste in women- well, at least in the way of looks. I couldn't really fault her for the inability to see past a pretty face, especially since we had shared at least one pretty, albeit shallow girl. I had learned my lessons and was pickier now, better able to see the telltale red flags than May was. \n\nNow May was here, in tears.\n\n\"So May, what happened?\" I asked, absentmindedly scrubbing at an errant spot of dish soap drying on my hairy forearms. May just wasn't prone to this crying shit- even before during her other breakups. she was as much, if not more of a dude, than I was. Something was different about today, and even if it felt a bit awkward, I'd do my best to be there for my friend.\n\n\"Fuck Ethan...\" She exhaled sharply then breathed in after, letting out a loud sigh, \"I think Carmen...I think she left me.\"\n\nI almost wondered aloud, \"How can you THINK someone left you?\" but I caught myself, instead I just gave her a \"go on, I'm listening\" look.\n\n\"Carmen had picked me up from class and I just wanted to go home- it's hot and all. I was fucking tired, but she wanted to go out drinking and dancing. We had talked this morning about just having a nice quiet evening together tonight- we hadn't gotten to see each other all that much. Of course that started us to fighting about stupid shit. You know, how she seems to think that I was cheating around on her, I was pissed she kept asking- you know I'm not, and I was tired of having to keep justifying myself to her. It made me think that maybe there was someone else- the thief is the first person to accuse another person of pick pocketing, right? God, it was so fucking embarrassing how we were all Jerry Springer at the stoplight as people in the cars next to us just kept giving us funny looks.\"\n\nI winced as she paused for a breath. I've been witness to one or two of those fights, and honestly, I was surprised they didn't end up in knock-out drag out sessions where the cops had to be called.\n\n\"Yeah, I hate that shit too, man.\" Abby had been prone to hysteria, she had this fetish for pulling these epic-ass tantrums in public...The last person I dated was more sedate, but prone to the passive-aggressive bullshit. That wasn't much better. I swear, there were times I wished I was fucking gay- until I found out from May that gay dudes liked to play the same bullshit games. No tits and vag for the same drama? No fucking thank you.\n\n\"My sister CeeCee had called from her boyfriends phone- you know how we were planning Mom's birthday? Carmen was giving me the third fucking degree, and just flipped out and knocked the phone out of my hand.\" This couldn't have happened but forty minutes ago, and understandably, this was hard for her to talk about. \n\n\"Christ,\" I muttered- I didn't like where this was heading and I was afraid for my friend.\n\n\"I fucking flipped out Ethan. I yelled at her...\" She confessed in a quiet voice,\" I just couldn't...I was hot and tired and just fucking fed up, you know? I told her to pull over.\"\n\nI gave her a \"I don't blame you\" look. Someone grabbing something out of my hand or knocking it out was enough to make me want to swing on someone too, tits or no,\" What'd you do?\"\n\nShe looked at me, her hands shaking so much I had to take the now empty glass from her hands before she dropped it and her voice shuddered and hitched,\" I told her that I was fucking tired of this...this princess bullshit. I love her Ethan- but fuck, it's just day in and day out. Does everything have to be fucking Vietnam with these bitches?\"\n\n\"It shouldn't have to be, dude,\" I said with a shrug,\" But should and shit begin the same way for a reason.\"\n\n\"Yeah, that's what I thought too,\" May answered, her teeth grinding together in anguish and a bitter cast warping her normally pretty features,\" She- told me to get the fuck out of the car- but first she JUST HAD to tell me that she had met someone else- some bitch from her work and because she hadn't fucking gutted me enough, she threw her Slurpee in my face.\"\n\n\"What a fucking cunt.\" I muttered. What was it with some women? Not enough that they twisted the knife in, but they had to cover it in salt and then break it off inside too? That wasn't quite fair- I've been my own kind of dick to women too, and I've seen my dude friends do some petty shit that wasn't anywhere near necessary. Part of growing up for both genders, I guess.\n\n\"So...I don't have my phone and you were ten minutes away. I was praying...that you were home. I just- you've always been there to talk to.\"\n\nI was supposed to go out and play darts with some guys at work- but I had a feeling that May was going to need me tonight.\n\n\"I'm gonna need to place to crash tonight Ethan- I just don't feel like going home.\" She looked almost sheepish when she asked.\n\n\"Don't even sweat it bro. Mi casa, Su casa.\" It was kind of a running joke with each other we always called each other shit like \"Dude\", \"Bro\" \"Man\"- I guess it also made the gender issue a bit easier to deal with.\n\nShe sighed in relief and sadness,\" Thanks man. I just- I'm just so fucked up.\"\n\n\"I've been there. You were there for me when I needed it too May. I was gonna go out tonight-\"\n\n\"Oh no...\" May said, crestfallen,\"I didn't mea-\"\n\nI waved my hand dismissively,\" -It's just some buddies from work. I spend enough time with their sorry asses all week long anyway. I was just saying, let me give them a call to cancel. Do you wanna take a shower and get all that crap off of you?\"\n\nShe nodded gratefully and said,\"...Yeah.\"\n\n\"Right on. There are guest towels on the rack and a spare sponge.\"\n\nThrough her tears, she started to shake her head in mock dismay,\"You're such a fag, Ethan.\"\n\nThere was my buddy May, tough as nails and able to talk shit with the best of them,\"Shut the fuck up and go wash that bee cum off your face, you asshole.\" \n\nShe laughed despite her grief and went to go shower. I called my work buddy to cancel- but it turned out to work out just fine, one dude almost forgot his wife's anniversary and the other one had a hot date last minute. I made up the couch for her and got some clothes that I hoped would fit her, one of my white undershirts and some brown drawstring sleepy pants left over from Passive-Aggressive girl who was about May's height, but far more slender. I thought they would fit...maybe- most of my clothes were just too big for her.\n\nI went to go set it in front of the door as I heard the sound of the shower running, and I before I knew what was happening, I saw the door cracked and tried to look down as quickly as I could- but it was too late to keep me from getting a decent look.\n\nMay wasn't facing me, I saw her from behind. She always wore clothes that understated her figure in over-sized baggy shirts, loose jeans and shorts that nearly reached her shins, but I had always guessed that she was built like a brick-shit house- you know, solid but also curvy? I wasn't wrong- she was muscular and I could see her back, complete with a tattoo of two rainbow colored female symbols wreathed in thorny roses, her arms were well toned but probably her best feature was a full ass that looked like two brown cantaloupes held up by short, unshaven muscular legs, ending in strong, but shapely calves. She was bending over, pulling down what looked like grey boxer briefs giving me a brief flash of kinky black pubic hair and poking under the cleft of plump pussy lips. Her breasts were full enough that I could see them from the side- even a hint of a large, milk-chocolate colored nipple. She didn't shave, but that never bothered me. I always joked that I wouldn't make a woman shave her legs if she didn't make me shave mine. At the sight of my friend's nudity, I looked away blushing like a fucking kid. It was like looking at your buddy at the locker room in the locker room, or taking a peek at another dude's dick while you were pissing in the urinal- you just didn't do it.\n\n\"Uh...May, I uh...\" God, I was stammering, my mouth dry as I tried to push the image of what I just saw out of my mind.\n\n\"What?\" She yelled, tears still in her voice.\"I can barely hear you over the water.\"\n\n\"I left you some clothes Br-bro.\" That last word was hard to get out as I clapped my hand over my eyes,\" Give me your shit and I'll throw it in the washer.\"\n\nOne of her small, sinewy arms thrust her clothes to me and I almost gingerly accepted them from her, doing my damnedest to not touch her chonies.\n\nI threw them into the wash, trying to ignore the the scent of her- sweaty, but still very much healthy woman.\n\n\"Don't be a fucking perv,\" I admonished myself under my breath as I poured in some soap and started the machine.\n\nShe showered for a good long time. That red gunk was everywhere and probably a bitch and a half to get out. Not to mention I would have needed to get clean on an emotional level after something like what happened with her and Carmen.\n\nMay emerged from her shower to the sight of me frying up some steak and potatoes. Her hair was gleaming and wet the red highlights shining, my white shirt clung to her bra-less breasts like a second skin, hanging over what was a tight and toned stomach. Even the brown sleep pants fit too tight to make me feel comfortable in my platonic-ness.\n\n\"What?\" She asked, giving me that \"..the fuck you looking at, buddy?\" look.\n\n\"Nothing man,\" I lied and cleared the nervous lump from my throat,\" Grab a beer, and grab me one too.\"\n\n\"Do I look like your bitch, fucker?\" She asked, playfully.\n\n\"No, just a plain ol' bitch.\" I laughed,\"You still like your steak charred?\"\n\n\"Yeah, I eat it like a human being, not how you do, practically like it's fucking red wings.\" She shot back. I could tell she was still tore up, but this is what she needed right now. May wasn't some little flower that needed to be stepped around and she liked that I never treated her like that.\n\n\"Damn straight Red Wings, pearl applicator, string and everything\" I shot back, pressing her steak onto the flat pan my own oozing delicious red on a bed of potatoes.\n\n\"You're so fucking gross Ethan.\" She said making a sour face, but laughing as she went into my fridge and dug out two beers, popping the caps off with twist of her hands. She was shaking less I noticed- that was good.\n\n\"Says the fucker that eats charcoal.\" I shot back, smirking.\n\nI threw her clothes into the drier for her, and joined her in the living room where we sat, eating on the couch that I had made up for her. We ate and drank beer as we watched \"Hang 'em High\", typical guy fare, and from that we watched another Clint Eastwood gem \"Gran Torino.\" We both loved that movie- we had watched it so much that we could quote every grouchy old racial slur from that old cracker's snarling lips. By the time that movie was done, our dead soldiers had become a whole unit that went MIA.\n\nI felt my head swimming as we laughed. I found it harder and harder to not to look at May's bouncing tits as she chortled at lines we had both heard over a dozen times before. At the end of this gruff, but poignant movie we heard Clint Eastwood's gravelly voice trying and failing badly to croon out the song at the end credits- that part always set us both howling. I tried to focus on laughing as I felt myself swell and harden in my pants to the sight of May's nipples making stiff points in the thin cloth of the white tee-shirt. I told myself it was just her natural reaction to the cold, and to stop being such a jerk about it.\n\n\"Christ...,\" I muttered to myself as I could see the outline of her large areola clearly showing through the thin white material.\n\n\"What?\" She asked and saw what I was looking at and looked down as if she forgot they were there herself.\" Yeah- I have tits, so fucking what?\"\n\n\"No you don't\" I said trying to keep my face- and my priorities, straight,\" And you have a cock bigger than mine.\"\n\nShe looked at me and snorted, even that course expression not diminishing her beauty.\n\nI stood up on woozy legs and almost fell, but caught myself with the edge of the couch. I winced as my shoulders gave a twinge from the sudden jarring, causing me to wince and inhale sharply.\n\n\"What's the matter?\" May asked, her eyes only slightly more unfocused than mine.\n\n\"Nothing...\" I said, trying to rub the soreness out of my back. I had overworked at the gym today and because it had been a long day, my body was complaining, the little slip causing a murmur to turn into a loud complaint.",
        "\"C'mere.\" She beckoned me to sit next to her on the couch. Something in me told me this wasn't a good idea...\n\n\"No May...I should just get some sleep.\" I protested.\n\n\"Don't be a pussy, Ethan,\" She told me and that settled it, I just wasn't in the mood to argue myself out of a back rub, especially with how sore I was.\n\nI sat down in front of her, and I tried to ignore how good she smelled as her hands, small but rather strong, wrung the tension from my back even in a way that both hurt and felt good at once.\n\n\"Oww...\" I winced as she pinched my neck particularly hard,\" What have you been doing with those ham hands of yours May- crushing rocks barehanded?\"\n\n\"Don't be such a fucking baby, Ethan,\" May admonished.\n\nI shook my head and let her continue to work aching shoulders and neck, then continue my back and arms and tried to ignore the nagging lump in my pants that refused to die.\n\nI had to admit, I felt so much better.\n\n\"Now, my turn.\" She told me and I shrugged in an almost resigned fashion- fair was fair I guess.\n\nI gave her a very similar massage to the one she had given me, kneading out the massive knots of her tension as I tried to position my embarrassing hard-on away. I couldn't help but feel like I was back in Junior High.\n\nI tried to ignore the way her bare neck with those little hairs that were goose-pimpling at my touch sloped into her shoulders and how my shirt showed the slope of her bare cleavage...\n\n\"C'mon...don't be such a pushee.\" May almost complained.\n\n\"Pussy?\" I corrected her as I dug my hands into her firm, brown flesh.\n\n\"Yeah...\" She moaned. Christ... What was I doing? She obviously didn't like me that way. This was just two dudes helping each other out. That's how I had to think of it, I wasn't queer.\n\nIt was a bittersweet mixture of shame and pleasure I got from handling her firm, healthy body. She felt so warm and she smelled way too fucking good. \n\nFuck, I knew I shouldn't have had those last two beers...\n\nMay turned around to say something and before even I knew what I was doing I kissed her and her eyes just opened for a bit, her lips were full and sweet, tasting of beer and a musky, cloven taste.\n\nI pulled back and she looked at me with surprise and shock- and what looked like anger.\n\n\"God May...I'm so- I'm fucking sorry,\" I stammered and I swear I thought she was gonna knock me out.\n\nShe just stared at me with this expression on her face, her jaw set and her amber eyes almost flashing...I cursed myself. \n\n\"Ethan, you dumb fuck! May is gay, and not to mention, this is your bro- and you fucking made a move on her when she needed you to just list...\"\n\nShe grabbed me by my shirt and kissed me back hard, aggressive. Her tongue was long and agile, sweeping the back of my teeth as she held me to her.\n\nThat did it, I couldn't hold back anymore. One of my hands snaked under the white tee she was borrowing and went to one of her free hanging tits. God they were huge and hot in my hand and she moaned into my mouth when I rolled the turgid point with my fingertips.\n\nI felt her hands cup my ass and squeeze roughly, which I kept hard despite a desk-job, from hours at the gym and even more time on the mat during Kyukushin practice. I had caught female co-workers checking it out, but May was the last woman I ever counted on appreciating it.\n\nI kept mauling her tits and she pushed my back down full onto the couch, but really, it was hard to tell which of us was the aggressor. I didn't mind when a woman took charge, but this was crazy.\n\nI could feel how wet May was even through her shorts and my pants as she kept rubbing against me as if she was the one with the cock.\n\nI felt one of her hands grab the back of my neck and I moaned as I felt her warm mouth, with it's full lips kiss my neck as her tongue, wet and skilled lick my neck in a way that must have drove her girlfriends wild- it was working just fine on me too. I didn't mean to, it was an accident, but when I my hands dipped into the cleavage of her ass, rubbing her through the thin barrier of the brown cloth. I could almost feel her asshole twitch and spasm through the prison of the pajamas. May moaned breathily again and bit into my neck, the scent of her arousal spicy, primal and strong filled the room.\n\n\"God...I love it in my ass,\" She admitted huskily in my ear, even in my dulled, drunken state my eyes widened and my cock twitched at her confession.\n\nI felt her hands rubbing along my front and I could almost feel the internal struggle inside of her mind as she felt my cock hot and throbbing against the prison of my jeans. I knew May had tried having sex with a dude once back in High School- that's when she truly knew she was gay. It was as if she kept hoping to find a pussy there that just wasn't gonna be- but she was so turned on that she almost didn't care.\n\nI felt her other hand roam downwards to slip the brown shorts over the meaty flesh of her ass- her skin and the fabric almost the same rich coppery hue. I looked down over her the shapely landscape of her shoulder and back as she moaned into my neck. \n\nFuck, I was going to have hickeys from hell from this, but I just couldn't bring myself to give a fuck right now.\n\nMy fingers found the the sexy pucker of her asshole, almost trying to swallow my questing fingers like a hungry little dark mouth, her sex drooling onto me.\n\nI felt her hand boldly unzip my jeans and I swear, I felt like the chick as she brazenly yanked my pants down as my cock, hard as steel drooled twitching at the feel of her hard stomach. May nearly had a six-pack, and it was covered in a light spattering of hair leading from her crotch up to her bellybutton, a little swath, her skin like velvet over the surprisingly hard muscle. Her pussy already sopping wet, soft and hot on balls that were already hot and churning with my seed.\n\nI rubbed her asshole in little circles and she moaned even louder, biting onto my neck as she yanked my pants all the way down and off my feet, pausing only to pull off her shirt. If her tits looked good from the side, they were fucking masterpieces from the front and up close. Even hanging down onto my broad, hairy chest they looked full and supple, each capped with large nipples slightly larger than the size of the last joint of my pinky like hard brown little rocks, the wide chocolate aureola puckered as they rubbed against my own heated, pale skin.\n\n\"Fuck May,\" I moaned as one of her short-nailed fingers found my nipple, twisting it just enough to elicit a spark of pleasure-pain.\n\nShe was beyond worked up, enough to ignore the fact that I didn't have tits or a vagina- as she worked her full, tapered hips up and down the shaft of my cock. Her clitoris, as large as her nipple rubbed up and down the shaft, to the underside of the flaring, drooling mushroom tip of my cock.\n\nThankfully I was just sober enough to realize that I didn't have a condom by me, and because she was a lesbian, despite this crazy fluke- she probably wasn't on the pill.\n\n\"May...\" I started,\n\n\"What?\" She hissed, irritated in any possible distraction from the fulfillment of her lust.\n\n\"Dude, I don't wanna get you knocked up.\" I choked out.\n\nI heard her say in a surprised tone, as something she normally didn't have to even consider during sex dawned on her,\"Oh yeah...\"\n\nShe bent down to take my nipple in her full lipped mouth and I felt her hand work my drooling shaft- her awkwardness with my gender was more than made up for by her enthusiasm. My hand continued mauling her breast as my finger worked it's way into her now un-resisting hole, naturally lubricated with just the juices by her own arousal. She suddenly bit my nipple causing both of us to moan.\n\nMy beautiful, seemingly unattainable lesbian friend- peered into my eyes, her own beautifully angular amber ones were lidded with lust. She seemed to pause as her eyes rolled back in bliss as the finger probing into her ass got up to the second joint. It was my turn to shudder as she rubbed my throbbing hardness with the palm of her hand, the surface a strange yet delightful combination of calloused roughness and softness.\n\nShe held my hand to her ass, and I worked my finger in and out, sexy wet sounds coming from that sweet, hungry little hole as she brazenly slid her hips to my face and I saw the plush blossom of her sex open, slick and wet, her clitoris reminded me disturbingly of a small cock as she placed her sopping nest of kinky black hair onto my face.\n\n\"Eat my pussy.\" It wasn't a request so much as a command and I complied, and her hand kept working my cock with her fingers and palm as I humped into the sheath she created with her fist.\n\nFor a guy I wasn't bad at eating pussy, and May's was delicious. If she thought my technique could use work, I didn't hear it. My buddy certainly wasn't complaining as I licked and nibbled and sucked around her full dark pussy lips in concert with the finger I was rhythmically probing into her small pucker, pausing to occasionally bite the inside of her thighs as they gripped the side of my head almost crushingly. I heard her moan and cry out like a cat in heat as I took the flat of my tongue and licked up the wet channel in broad, flat strokes, working the stiff thimble of her clit with the tip of my tongue, working to drink in the heavy liquid flood of her tangy juices.\n\nI felt her hands scratch up my belly and take a hold of my nipples, flicking and pinching them softly, causing me to moan huskily into the folds of her sex. I slowly pulled out the finger probing her ass and she moaned in frustrated disappointment until I grabbed her hips and positioned her so my tongue could explore the channel of her firm ass and she screamed and bucked on my face.\n\n\"Ethan...you fucker. Eat my motherfucking ass...\" May grunted in forceful encouragement,\"God...your tongue...it feels...fuck- it feels fucking magic. SHIT!\"\n\nI felt the pucker open and spasm at the intrusion of my tongue and I could taste her the tangy copper of her ass- not unpleasant. I was enjoying myself at least as much as May was.\n\nShe rode and bucked on my face as I held her fast to me, snaking my tongue up the wet, tight channel and her hand snaked down to my cock again, smearing the slickness of my pre-cum around the head with her thumb. \n\n\"Jesus...fuck...\" May keened as she stopped herself just short of cumming one of her feet accidentally knocking over a half-full bottle of beer onto my carpet.\n\nShe pulled off of me and looked at me, her angular amber eyes smoldering with lust as she pulled my face to her, kissing me and moaning as she tasted herself on my tongue.\n\nHer hands were roaming on my body and I know I was bucking up against her and she pulled her full lips off of me looking into my eyes and she almost looked down,\" Ethan- I want you...\"\n\n\"What?\" I asked, as my thick fingers went back to to play with the sopping, spasming pucker of her asshole, while she moaned and pressed against me, trying to get the digit to return into that tight, hungry hole as she could.\n\n\"I want you...\"She blushed deeply, causing her caramel skin to turn an even darker shade\"To...fuck my ass.\"\n\nEven with the high amp of her lust, she looked at my cock nervously, like a kid that was about to get a shot at the doctor's, but knew that if she did, she'd get to go out for ice-cream after.\n\nI felt her tongue, long and purple, furtively dart from her mouth, licking the unfamiliar territory of the head of my cock and I moaned. She got bolder slowly, her turn to elicit moans from me. Despite my only slightly sober state and the live-wire state of my arousal I knew we were going to have to take this slow.\n\nI stayed still, the only parts of me that moved were my cock which bobbed and throbbed of it's own accord, teased by the timid licks of her shy tongue, goaded by the fullness of her lips, encouraged by the heat of her breathing. My hand which soothingly stroked her back, neck and cheek like a half-wild mare that was about to bolt.\n\nMay clumsily, but effectively, took the thick head of my cock into her mouth, and gave it wet little sucks, echoing throughout my living room in concert to my moans.\n\nMy hand went from her cheek to run through the short bob of her curly ebon hair streaked with crimson, the fingers scratching at her scalp causing her slight sucks to become bolder. She bravely tried to take more and more of my thick hardness into a mouth that had only most likely fellated strap-ons. I swear that's what I heard her say to herself, to give herself some peace of mind as she sucked on me and to my credit, I have great control over my ability to cum- which was good, because May was a damn quick study. When she was satisfied that my cock was wet and slick enough to enter into the tightness of her asshole, she pulled off me. I noticed that she licked her lips curiously, undecided but not entirely repelled by the taste of my lubricating pre-cum. Her hips were twitching almost of their own accord as she bucked and twitched in need.\n\nMay propped herself up on her elbows and held her ass up into the air as she looked back at me, her eyes wild with desire and need, her sex drooling down her legs and the little brown eye of her ass winking and pulsating with need.\n\n\"Fuck me...Fuck my ass now Ethan.\" She commanded.\n\n\"I thought you were the top May?\" I said, smirking as her her lust filled eyes burned into mine. I know- probably not the time to fuck with my buddy but Christ, I wasn't some passive punk either,\"I didn't know you liked to catch.\"\n\nShe gritted her teeth in need and irritation as she looked back at me and spat,\"What's the matter Nancy? Not man enough to fuck me in the ass? Angie was...\"\n\n\"Oh, May, you asshole!\" I thought vehemently,\" You had just HAD to fucking go there, didn't you?\"\n\nWhen I strode up to her and lined up the head of my cock over the grasping tightness of her ass she looked at me like the cat who swallowed the canary and smiled in anticipation.\n\n\"C'mon you punk, fuck my ass like you have a dick\" May goaded\" Show me what a man doe-\"\n\nShe wanted to go with that game huh? She howled in lust and pain as I just shoved in all of my thick rod and I could feel her body tense.\n\n\"Fuck you Etha..\" I cut her off with another hard thrust. She moaned and grimaced, obviously enjoying the rough trade,\"God...fuck...\"\n\nGod, her ass felt so good and tight around my cock and I fucked into her with strong, bone-jarring thrusts.\n\n\"C'mon bitch...don't be a pu-pussy,\" May grimaced,\" Fuck me harder!\"\n\nI grabbed her hair, the short curls sprouting from between my thick fingers as I brought my spare hand onto her flexing, shuddering ass with a loud slap. She moaned and felt her ass grip my cock like a tight, wet sucking mouth, the sounds of our fucking echoing throughout the apartment as I bent down to her straining neck and bit hard.\n\nMay was panting like a bitch in heat now and she was meeting my strokes now with her powerful hips.\n\nI growled into her ear and then bit her neck with a brief, sharpness again,\" Who is the fucking bitch now, huh May?\"\n\nShe bit her lip and moaned, and she cried out with a wet little whimper as I fucked her, my heavy, cum-laden balls slapping against the sopping delta of her cunt. When she stayed silent I roughly yanked her hair even more tightly and slapped her ass as I felt her sweet, hot tightness grip my cock desperately.\n\nShe muttered something under her breath.\n\nI put my all my weight on top of her strong back and she supported us both as I pinned her, plunging all the way into her asshole and I gripped one of her firm breasts, shuddering and slapping with the force of my fucking and pulled on it, twisting the nipple.\n\n\"Tell me bro, who is the motherfucking bitch May?\" I gruffly asked again, my breath hot in her ear.\n\n\"Fuck- fuck you FAAAAAG!\" She huffed, screaming when I roughly pulled on her tit again, this time with crushing force,\" GOD...god...okay Ethan-Okay!\"\n\n\"What?\" I asked, I was gonna make her say it...she wanted to say it, but this game was part of the experience.\"Whose the bitch here, taking all my cock up her ass like some little punk, her cunt drooling onto my carpet?\"\n\nShe shuddered, reacting to the graphic, rough words paired with the equally rough stimulation and she surrendered,\"...Me.\"\n\n\"Me what\", May?\"I slammed into her again stretching her ass out, I didn't realize that May was a switch like this. \"What are you.\"\n\nShe moaned huskily as I switched my cruel grip to her other swollen, engorged tit, my hand pulling on her hair like a bridle,\"...a bitch.\"\n\n\"Say it louder,\"I nearly screamed into her ear, delighting in the soft cushion of her ass, and the delicious raw primal female scent of her,\"WHAT THE FUCK ARE YOU MAY?\"\n\n\"YOUR BITCH...ETHAN FUCK...I'M YOUR BITCH!\" She yelled and then moaned submissively.\n\n\"Fucking right you are!\"I hissed into her ear,\"What do I have in that greedy little asshole of yours right now May?\"\n\nShe whimpered, tears of pain and joy streaming down her smooth brown cheeks.\"Your cock.\"\n\n\"What May?\" I taunted her with pulling out just a bit and I felt her hips anxiously try to push it back into her.\n\n\"YOUR COCK!\" She cried as beads of sweat poured down her smooth brown forehead.\n\n\"What am I doing with your bitch ass May, what is my cock doing?\" I bit and sucked on her ear while pulling her hair and she arched her back, the tight ring of her asshole almost painfully tight on my thick, thrusting rod.\n\n\"You're...fuck...you're breeding my fucking bitch ass,\"She admitted, a slave to her lust and my force,\"You're breeding my bitch ass and it feels so fucking- AHHHH- So fucking good!\"\n\n\"That's fucking right,\" I said,\"You want my cum up your little fucking bitch ass May? Does my sexy little bitch want a nice hot scalding load in that tight little fucking hole.\"\n\n\"Yes...God...yesssssssss....\" She confessed, shuddering hot and wanton under my weight.\n\n\"Yes what? Ask nicely!\"I yanked her hair again, and she moaned,\"Say it real fucking nice this time, you fucking dyke.\"\n\n\"Can..please...can this bitch have your cum in her ass?\" She begged, moaning softly, lost in the pleasurable pain of it.\n\nThis was some kinky shit..Way more rough than I was used to, but if there was ever a time to be more open to new things, it's when your lesbian buddy had your cock in her ass begging you for your cum.\n\n\"NICER BITCH!\" I yelled, grateful I had good soundproofing, my hips slamming into the full, lush firmness of her ass cheeks.\n\n\"Please...please...please...please can this bitch have your cum Daddy...please...I'll be such a good bitch for you.\" She was desperate now, white hot in her need.\n\n\"Since you asked so nicely...\"I grunted,\"But you don't get to cum until I do.\"\n\n\"Okay, okay...please Daddy, fuck my bitch ass, fill my punk bitch ass full of cum. Please...I'll suck your cock after, I'll clean it off like a good little fucking queer!' She arched her hips enough to free one arm and sat upright, one hand mashing her tit, mashing her tit with one hand the other hand fondling my heavily swinging nuts.\n\n\"Please,\" She whispered hotly into my ear,\" You can pump my faggot ass full of cum and I'll suck your cock SOOOOO goood...just for you Daddy....oh God Ethan you feel so good in my bitch ass. Breed my fucking hole... please?\"\n\nWhen I heard her husky voice whisper into my ear, her long tongue snaking out to wriggle in my ear as she begged for my cum, I couldn't contain myself anymore. I bit into her neck causing her to cry out, her asshole to tightening and spasming on my cock. I growled and let loose rope after rope of my scalding cum into the tightness of her hole.\n\n\"Fuck Daddy-So...So...Fucking good!!!!\"May panted and I kept thrusting, my cock bottoming out into that sweet, tight yielding hole,\"Nut all in my faggot ass Daddy, I'm gonna...gonna...!\"\n\nI reached down and mauled the large, swollen heavy tit she as she worked her own even more roughly as I reached down and pinched her fat juicy cunt lips and plucked the tip of her swollen raspberry of a clit as I thrust deep into her asshole, my cum still spurting into her tight, luscious ass.",
        "May's eyes bugged out and she hoarsely grunted, bucking and I had to hold tightly onto her to keep from being thrown and she came, gushing in several shuddering bursts into my hand and onto the carpet already soaked in beer and our sweat.\n\nShe bucked and spasmed, her ass trying to milk every drop with grasping pulses as she muttered incoherently, my breathed hot into her neck which was wreathed with bruises and bites.\n\nGood on her word, still on fire with lust she wantonly licked and slurped her own cum from my cupped palm like a cat with cream. Slowly she pulled herself off my cock and suckled the flavors of her ass and my cum from the wet, glistening thick, veined rod of my cock as she looked into my eyes submissively until she had removed every dripping, slick bit. I watched with rapt fascination as my cum ran down her leg.\n\nI collapsed next to her pushing the table out of the way, and we both laid on our backs, not caring that the carpet was soaked in beer and our juices. As the high of the moment faded and our breathing returned to normal the crushing realization of what we had just done.\n\n\"So...what now?\" I asked raw, sore but satiated.\n\nShe couldn't look me in the eye, but instead uttered in a small voice,\"I don't know..I...Ethan...I need a shower.\"\n\nShe got up and nearly ran into my bedroom slamming the door behind her, and I slowly got up and left with only the guest one cursing at myself.\n\nI washed the smell of our sex off me and brushed the taste of her from my teeth- as if that would press the reset button on what had happened tonight. In the next room, I heard her do much the same, my gut churning in anxiety as the all too recent memories of what we did forever burned into my mind. The epic fulfillment of forbidden fruit and repressed need juxtaposed with a boundary that never should have been violated- a line that just couldn't be uncrossed creating a battle that raged inside. I felt way too fucking sober.\n\nShe took longer to shower than I did. Sure, it was 5am, but coffee and a smoke was in order. I smoked cigars from time to time- that was the closest thing to a cigarette I had in the house.\n\nShe emerged wearing the clothes I had put into the drier for her, and my spare bathrobe. Even that failed to cover the telltale signs of my deep, hungry kisses and love bites.\n\nIt was nice and cool on my deck- that strange in- between haziness that came with the Dawn. I silently handed her a cup of coffee as I sipped my own- I drank mine black, she liked it with cream and three sugars.\n\nI lit up a cigar and she silently motioned for me to give her a puff, and she inhaled, coughing until she realized that you were just supposed to taste the smoke, not breath it in.\n\n\"You know this won't ever happen again, right?\" May finally said as we stared into the purple sky.\n\nI nodded, a conflicting torrent of emotions.\n\n\"Good...\" She said, nodding as if that made it final.\n\n\"It's too fucking weird\" I said in assent, and her lips pursed and she nodded again.\n\n\"You better not tell anybody Ethan, or I'll beat your ass, I swear to fucking God!\" She exclaimed and I simply nodded.\n\nThat was the only way. The only reasonable thing. May was queer as the whole YMCA discography. This was just...some strange anomaly.\n\n\"Yeah.\" We silently finished our coffee and finished the cigar.\n\nI went to my bedroom and shut the door as she went to the couch, and I lay awake despite my crushing fatigue.\n\nAfter what was either three hours or fifteen minutes, I just couldn't tell- I heard the door open, it was May, her naked body clearly outlined by the soft light of the hallway.\n\n\"Wha-\"I didn't really know what to do.\n\nI felt her slip underneath my covers and she laid her head on my chest.\n\n\"Shut up,\" She said, her voice her regular butch self, but her body trembling and unsure as she clung to me,\"Just shut the fuck up, and hold me, you fag...\""
    ],
    "authorname": "tendermindholes",
    "tags": [
        "dyke",
        "interracial",
        "rough",
        "cock sucking",
        "anal",
        "ass-eating",
        "dirty talk",
        "submissive",
        "friends",
        "humorous"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/strange-bedfellows-4"
}