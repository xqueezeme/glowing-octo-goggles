{
    "title": "A Father's Justice Pt. 05",
    "pages": [
        "A Father's Justice, Pt. 05\n\n \n\nMany thanks to those who offered comments and constructive criticism on my previous stories. For those who want to say this or that would never happen, remember this is my universe, a place where nearly anything can, and often does, happen. At least on paper... \n\n \n\nTo understand the full context of what is taking place here, I suggest you first read, \"A Father's Justice Pt. 01,\"\"A Father's Justice Pt. 02,\" \"A Father's Justice Pt.03\" and \"A Father's Justice Pt. 04.\"\n\n \n\nPlease refer to my profile for more on my personal policy regarding comments, feedback, follows, etc. (Yes, I moderate comments) And please remember, this is a work of fiction, not a docu-drama...\n\n \n\n...\n\n \n\nEnd of \"A Father's Justice, Pt. 04\":\n\nA week later, he got the call he feared might come. He had just finished dinner at Beverly's house when his phone rang.\n\n\"Ryan?\" Bob said when he called. Ryan could tell Bob was upset.\n\n\"What's going on, son?\" Ryan asked.\n\n\"They took Sarah and little Ryan,\" Bob said, hysterical.\n\n\"Who took them?\" Ryan asked.\n\n\"Elmer's boys,\" Bob said. \"I came home from work and the two FBI agents were dead in our living room and Sarah and Ryan were gone. They left a note saying to call off the authorities or Sarah would be the center of their next retreat. I've called the FBI, but I don't know if they're doing anything. They won't tell me anything.\"\n\n\"Okay, son,\" Ryan said. \"I'll take it from here.\"\n\n...\n\nAnd now, \"A Father's Justice, Pt. 05\":\n\n\"What's wrong?\" Beverly asked when Ryan ended the call.\n\n\"They've taken Sarah and little Ryan,\" Ryan said.\n\n\"Oh my God,\" Beverly said.\n\n\"Listen, I have to get home, make some calls,\" Ryan said. \"Do what you normally do. Don't say anything to anyone.\"\n\n\"Okay, dear,\" she said. \"I just have a few things to do here. I'll come right over when I'm finished. We'll get through this, don't worry.\"\n\n\"Okay,\" Ryan said. He gave Beverly a kiss and left for home. Once there, he called Bill.\n\n\"Hey, how's it hangin?\" Bill asked.\n\n\"Not good, they've taken Sarah and little Ryan,\" Ryan said.\n\n\"Oh shit,\" Bill said. \"Any idea where they're going?\"\n\n\"Yeah,\" Ryan said. \"I haven't verified it but I have a pretty good idea. Look, I need you to reach out to the old team, get 'em here as fast as you can. Got it?\"\n\n\"Got it, old friend,\" Bill said. \"I'll be in touch.\" They ended the call and Ryan dialed Jorge's number.\n\n\"Evening,\" Jorge said. \"What's the word?\"\n\n\"I just heard from Bob. Elmer's boys grabbed Sarah and little Ryan,\" Ryan said. \"Also killed the two FBI guys protecting them.\"\n\n\"Crap,\" Jorge said.\n\n\"My thoughts exactly,\" Ryan said. \"I've reached out to Bill. He's making some calls. I want you to reach out to both Bob and Bill. I'd like you on the team if that's possible.\"\n\n\"You think they're going to the retreat?\" Jorge asked.\n\n\"I do,\" Ryan said.\n\n\"Okay, I'll reach out to them and call you back,\" he said. \"I've got something that might come in handy.\" They ended the call, and Ryan went into his home office, where he had a map of the retreat on a board. He studied the map and began making plans. A few minutes later, Beverly came through the front door and stood next to Ryan.\n\n\"What are you planning?\" she asked.\n\n\"I need to take a look at that camp,\" he said.\n\n\"What?\" she asked. \"Are you going there tonight? Alone?\"\n\n\"I need to know if our intel is correct and I need to know if they've taken Sarah and Ryan there,\" Ryan said. \"I can't do that from here. It's only about two and a half hours by car. I can cross Hwy 62 here, take this road into New Mexico and be north of their camp. If this is correct, I can be right here,\" he said, pointing to a spot on the map, \"and I should be able to look right down into their retreat without them knowing a thing.\"\n\n\"What if someone like a neighbor spots you?\" she asked.\n\n\"From the satellite photo I got off the Internet, it doesn't look like there's anyone living within 10 miles of the place, so I don't think that'll be an issue,\" he said.\n\n\"Why don't you just call the FBI and let them deal with this?\" she asked.\n\n\"Right,\" Ryan said. \"Because the FBI did such a terrific job protecting my family. Look, Bev, these people are dangerous and they don't play by the rules. Neither do I. They might expect the FBI, but they're not expecting me. Besides, they have my family and I made Elmer Jenkins a promise. This has to end now.\"\n\n\"You have to do this?\" she asked.\n\n\"I do, sweetheart,\" he said. \"It's my family they've got. Don't worry. I'm just going to do some recon. Two and a half hours there, maybe a half hour or so on site, then two and a half hours back. It's 8:00 now. If you don't hear from me by, say, 11:30 or so, call this number.\" He handed her Agent Smith's card. \"Tell him where I am. He'll take it from there.\"\n\n\"All right,\" she said. He handed her a .45 caliber pistol.\n\n\"You hang on to that,\" he said. \"If anyone other than me gets through that door, you know what to do. Aim center mass and fire.\"\n\n\"Okay,\" she said nervously. He took her to a closet in the hallway, opened the door and pulled a hidden rope. The floor opened up, revealing a set of stairs.\n\n\"Then you get yourself in here, close this behind you and get the hell out. It opens up out by the pistol range,\" he said. \"Got it?\" She nodded her head.\n\n\"I got it,\" she said.\n\n\"Good,\" he said. \"I just need to grab a few things and I'm gone.\" He went back to his office and grabbed the backpack he put together earlier. Beverly went into the kitchen and came back with his thermos, full of fresh, hot coffee. He smiled as she handed it to him.\n\n\"Remember I love you,\" she said, kissing him deeply.\n\n\"I love you, too,\" he said, returning her kiss. \"Don't worry, this is just a recon. I'll call you when I'm on my way back. Don't call me. If Bill, Bob or Jorge calls, tell them to text me. I'll call them back.\"\n\n\"What if the people who took your daughter call? What do I tell them?\" she asked.\n\n\"Tell them I'm out drinking a beer or something,\" he said. \"Take a message, text me and I'll call them back.\"\n\n\"Okay,\" she said. They kissed one more time and Ryan headed out. She watched the truck go down the driveway, tears in her eyes. \"Please God,\" she prayed. \"Keep my man safe and bring him back to me.\"\n\nRyan filled up both of his truck's fuel tanks in town, as well as the two five-gallon cans he kept for emergencies. He knew there was a station where the road crossed the highway, and he planned to top off his tanks there, but he didn't want to take any chances. He headed on through town and made it to the highway, where he topped off his tanks and refilled his thermos. Now it was on into New Mexico.\n\nHe carefully followed the road and finally got to his destination. He put the truck into four-wheel drive and followed the dirt road for about 100 yards before shutting down. He grabbed his backpack and applied camouflage paint to his face. He took the night vision binoculars and carefully made his way to the rocks overlooking the camp.\n\nAttaching the binoculars to his head, he looked and found a Lear Jet parked at one end of a dirt runway, indicating that the board, along with Sarah and little Ryan, were already there. He scanned the camp itself, and noticed it was surrounded with a high chain link fence. Probably electrified, he told himself, observing what looked like signs attached here and there to the fence. He suspected the place was surrounded with sensors to detect possible intruders.\n\nThere was one gate, manned by two guards, and he counted 12 other guards walking the grounds. There could be more, he thought. Perhaps they were already inside one of the log buildings. He studied their movements and made notes on his pad.\n\nAs he watched, he saw a woman and a young boy being led into one of the buildings by an armed guard and a bigger man he thought looked like Elmer. No doubt, this was Sarah and Ryan. He made note of the building on his pad.\n\nHe spotted several other unarmed individuals wandering between the buildings without a care in the world. They seemed to be slightly drunk and he could hear them laughing and joking, although he couldn't make out what they were saying. Perhaps these were other members of the board, there for the festivities.\n\nHe made notes on the terrain and the general layout of the area, then slowly made his way back to the truck. Consulting his watch, he realized he had been there for just over 30 minutes. He put everything away and wiped the camo paint off his face. He reconnected his smartphone to the truck's Bluetooth so he could use it hands-free, then eased the truck back up to the road, keeping his headlights off.\n\nWhen he got to the road, he turned and sped off, keeping his lights off for at least a mile. Fortunately, there was enough moonlight that he could see the road quite clearly. After he felt that he was in the clear, he called Beverly.\n\n\"Are you okay?\" she asked as soon as she picked up.\n\n\"I'm fine,\" he said. \"I'm on my way back.\"\n\n\"So you got what you needed?\" she asked.\n\n\"Oh yeah,\" he said. \"No problem. Any news on your end?\"\n\n\"Yeah, I got a call from Jorge, he said to let you know they're on their way and you can call his cell when it's safe,\" she said. They, Ryan wondered. Who the hell is \"they?\" He dialed Jorge's cell. Bob answered the phone.\n\n\"Hey, Ryan,\" he said.\n\n\"Hey yourself,\" Ryan said. \"What's going on?\"\n\n\"Well, Jorge, Bill and I are on our way to your place,\" Bob said.\n\n\"What?\" Ryan asked. \"All three of you?\"\n\n\"Yeah,\" Bob said.\n\n\"Look, son, this isn't a camping trip, you know,\" Ryan said.\n\n\"I know, Ryan,\" Bob said. \"But they've got my family and I'm not just going to sit around waiting for someone else.\" Ryan knew how Bob must be feeling, so he chose not to argue the point, at least not on the phone.\n\n\"We'll talk about this later,\" Ryan said. \"Let me talk to Bill.\" He could hear the phone changing hands.\n\n\"Yeah, boss,\" Bill said.\n\n\"You get in touch with the old team?\" Ryan asked.\n\n\"Yeah, some of them, anyway,\" Bill said. \"I spoke to Ian, Buster, Cap and Jim. They're on their way to your place now. Should be there about noon or so.\"\n\n\"Okay,\" Ryan said. \"When do you think you'll be there?\"\n\n\"The way Jorge's driving, I'd say about 5 pm or so,\" Bob said. Damn, Ryan thought. Jorge must be driving like a bat out of hell.\n\n\"Alright, I'll see you then,\" Ryan said. \"Be safe.\" He ended the call and kept driving. He pulled up in front of his house, grabbed his gear and went inside, where Beverly was waiting for him. She ran to him and threw her arms around his neck.\n\n\"Thank God you made it home,\" she said. \"I was so worried about you.\" He hugged her back and returned her kiss.\n\n\"Nothing to be worried about,\" he said. \"It was just a recon.\"\n\n\"Are they at the retreat, like you thought?\" she asked.\n\n\"They are,\" he said. \"And they have Sarah and little Ryan there.\"\n\n\"What are you going to do now?\" she asked.\n\n\"Some friends are on their way,\" he said. \"I intend to go get them.\"\n\n\"What?\" she asked, shocked. \"Are you nuts?\"\n\n\"Probably,\" he said. \"I warned Elmer Jenkins what would happen if he messed with my family. You should probably stay here tonight, just to be safe.\"\n\n\"Okay,\" she said quietly. \"But I have to tend to the chickens in the morning.\"\n\n\"I'll go with you,\" he said. \"Just in case. Do you have any deliveries tomorrow morning?\"\n\n\"I have a few, but they're close by,\" she said.\n\n\"Maybe I'd better go with you,\" he said.\n\n\"Thanks, but that won't be necessary,\" she said. \"I don't think they'll come after me. But I'll take my shotgun just in case.\"\n\n\"Take your phone as well,\" he said. \"Keep a sharp eye out. If you see anything that looks off, you call me immediately.\"\n\n\"I will, promise,\" she said. They slept fitfully for a few hours, then got back up. Beverly made breakfast as Ryan showered and dressed. After they ate, they drove back to her house and tended to the chickens. Beverly gathered the eggs she was set to deliver and her .410 shotgun.\n\n\"Can you do me a favor, please?\" he asked, pulling a $100 bill out of his pocket.\n\n\"Sure,\" she said.\n\n\"Would you mind stopping at Jerry's store on your way back and picking up a couple 12-packs? And about 10 cigars?\" he asked. Jerry's was a small country store that catered to the folks in this area.\n\n\"Are we having a party?\" she asked. He smiled and shook his head.\n\n\"No,\" he said. \"It's something of a tradition.\"\n\n\"Okay,\" she said.\n\n\"Thanks. And remember, call me if you see anything out of the ordinary,\" he told her.\n\n\"I will, promise,\" she said. \"I'll let you know when I'm done and on my way back.\" They kissed and he watched as she drove off. He headed back to his place and studied his map. After a while, his phone rang. He looked at the screen and saw it was from an unknown number. He thought about letting it go to voicemail, but decided against it.\n\n\"Hello,\" he said when he answered.\n\n\"Ah, Mr. Caldwell,\" said a voice Ryan recognized as belonging to Elmer Jenkins. \"Just the man I'm looking for.\"\n\n\"What do you want, Jenkins?\" Ryan asked.\n\n\"What I want is for you to get the feds off my ass,\" he said.\n\n\"I don't run the FBI,\" Ryan said. \"And besides, why would I want to do that?\"\n\n\"Because I just happen to have your daughter and grandson, that's why,\" Elmer said.\n\n\"I don't believe you,\" Ryan said, even though he knew otherwise. \"Let me talk to them.\"\n\n\"Okay,\" Elmer said. Ryan could hear movement, then Sarah came on the phone.\n\n\"Daddy?\" she asked.\n\n\"Are you okay?\" Ryan asked. \"What about little Ryan?\"\n\n\"I'm okay but they've drugged Ryan and he's asleep right now,\" she said.\n\n\"You hang in there, princess,\" he said. \"I'll get you home soon.\"\n\n\"Not so fast,\" Elmer said. \"You have 24 hours to get the feds off my back or your beautiful princess here will get mailed back to you in little pieces.\"\n\n\"You remember what I told you, Jenkins?\" Ryan asked. Elmer laughed.\n\n\"What are you gonna do?\" he asked. \"You're an old, washed-up, one-eyed merc. You'd better make the best case you can to your FBI buddies and you'd better do it fast.\"\n\n\"Just so you know, Jenkins,\" Ryan said. \"I always live up to my promises. So I hope pain is something you enjoy, because I'm coming for you.\"\n\n\"You and what army?\" Elmer said, laughing. \"Twenty-four hours, old man. Make it happen.\" Ryan started to say something but Elmer had already ended the call. He checked his watch and saw it was nearly 11:00 am. He remembered Bill saying the rest of the crew would be there about noon, so he headed upstairs.\n\nHe pulled a trunk out of his closet and opened it up. He hadn't used any of this stuff in about four years, and he wasn't sure if the old uniforms would even fit him anymore. He pulled out a set of folded desert camouflage and a pair of worn combat boots.\n\nStripping off his clothes, he donned a black t-shirt and the camouflage trousers. Removing his cowboy boots, he put the combat boots on and laced them up, then bloused the trousers over the boots. He was surprised that the old trousers still fit.\n\nHe grabbed his web belt and some other gear, then pulled the old desert camouflage hat and jacket out of the trunk. He slammed the lid shut, then headed downstairs. He tossed the jacket and hat on a chair in his downstairs office and inspected his equipment. A few minutes later, his phone rang. He looked, and saw the call was from Beverly.\n\n\"Hey,\" he said when he answered. \"Everything alright?\"\n\n\"Everything's fine,\" she said. \"I hope Coors is okay, because that's what I got. And I got your cigars. So I'm on my way back.\"\n\n\"Thanks for letting me know,\" he said. \"And I really appreciate you getting that stuff. I'll see you when you get home.\"\n\n\"My pleasure,\" she said. \"Love you!\"\n\n\"Love you, too,\" he said, ending the call. A few minutes later, she pulled up, so he went out to help her bring everything inside. She looked shocked when she saw him in his camouflage.\n\n\"Are you going off to fight a war or something?\" she asked.\n\n\"Something,\" he said as he helped her carry everything in the house. \"I made Elmer a promise, and I intend to keep it.\"\n\n\"What promise was that?\" she asked.\n\n\"I promised him a war he couldn't believe if he messed with my family,\" Ryan said. \"And that's exactly what I'm going to give him.\"\n\n\"What if you get hurt?\" she asked.\n\n\"Then I get hurt,\" he said. \"It happens.\"\n\n\"No,\" she said. \"I won't let that happen. I can't lose you, too. Not like this.\"\n\n\"He's got my daughter and my grandson,\" Ryan said. \"Besides, I won't be alone. My team is on the way.\"\n\n\"You mean, the other mercenaries you used to work with, right?\" she asked.\n\n\"Some of them, yes,\" he said. Just then, they heard the tell-tale sound of a helicopter coming over the house. Ryan looked out back and saw an olive drab Vietnam-era vintage Huey land in the area he normally used as a shooting range.\n\n\"Well I'll be damned,\" he said, laughing.\n\n\"What is it?\" Beverly asked, scared. \"Is Elmer coming after us or something?\"\n\n\"Nope,\" he said. \"That's the cavalry. Would you mind rustling up some lunch? The boys are gonna be a bit hungry, I think.\"\n\n\"Sure,\" she said. \"I can whip up some egg salad sandwiches if that's okay.\"\n\n\"Sounds perfect,\" he said, giving her a kiss. \"I'll be right back.\" He grabbed his camo hat and went out to meet his old comrades, who were already getting off the old helicopter.\n\n\"Jim, you old dog,\" Ryan said as he approached the man piloting the chopper. \"How're doing? Where'd you get this?\"\n\n\"Been working on it for the last three years or so,\" Jim said. \"Whaddya think?\"\n\n\"I'm impressed,\" Ryan said. \"Does this thing have any bite to it?\"\n\n\"Does it ever,\" Jim said, walking around the front of the craft. Ryan noticed a black emblem on the front -- a raised fist with the middle finger extended. Ryan laughed.\n\n\"Nice touch,\" Ryan said, pointing to the emblem. Jim laughed.\n\n\"Matches my mood most of the time,\" he said. \"Check this out,\" he said, opening a side door. He pulled back a tarp to reveal an M134 Minigun. \"Think that'll do the trick?\" Jim asked.\n\n\"Reckon so,\" Ryan said. The M134 is a six-barrel rotary machine gun capable of firing 2,000 to 6,000 rounds of 7.62 mm NATO bullets per minute. Jim had a rig that allowed the gun to be fired from the side door.\n\n\"I wanted to get some rockets, but they just weren't in the budget,\" Jim said.\n\n\"So, you put this thing together by yourself?\" Ryan asked.\n\n\"Pretty much,\" Jim said. \"Took me a while to scrounge all the parts. I had to retool a few things, and the engine took a bit of work. But it's basically as good as new.\"\n\n\"How much is this going to set me back?\" Ryan asked. Jim shook his head.\n\n\"Just cover my fuel, give me a beer or two and we'll call it even,\" Jim said. \"We're comrades. You saved my ass plenty, so I figure I owe you.\" Ryan nodded his head and shook Jim's hand.\n\n\"Thank you, old friend,\" Ryan said. The four men grabbed their gear and Ryan led them back to the house.\n\n\"Guys, this is my girlfriend, Beverly Simons,\" Ryan said as they entered the kitchen. \"Beverly, this is Jim Talbot, Ian White, formerly of the SAS, Charles Torres -- we call him Buster -- and Mark Hammond. We just call him Cap. That's short for 'blasting cap' since he's so good with explosives.\"\n\n\"Girl friend?\" Cap asked. \"I thought you gave up on women.\"\n\n\"I did, until I met Beverly,\" Ryan said. He gave them a quick tour of the place and let them be to set their gear down and use the bathroom.\n\n\"So, I'm your girlfriend now?\" Beverly asked quietly when he returned to the kitchen.\n\n\"Yeah, you could say that,\" Ryan said, noticing the smile on her face. \"Do you have a problem with that?\" She smiled as she shook her head.",
        "\"Not at all, sir,\" she said, giving him a kiss.\n\n\"None of that, now,\" Buster bellowed in a good-natured tone as he entered the kitchen, causing them all to laugh. Beverly finished making the sandwiches and sat them on the kitchen counter, then poured each a glass of sweet tea.\n\n\"I hope y'all like egg salad and sweet tea,\" she said.\n\n\"Love egg salad, ma'am,\" Cap said as he took a bite out of his sandwich. \"Thank you.\"\n\n\"You're welcome,\" she said.\n\n\"Ryan, you'd better hang on to that woman,\" Cap said. \"Anyone who can make egg salad this good is a keeper.\"\n\n\"I intend to,\" Ryan said. They spent the next half hour or so eating their sandwiches and catching up. When they finished eating, Ryan spoke again.\n\n\"Bill won't be here for a while, so I might as well bring y'all up to date on the situation,\" he said. \"When Bill gets here, we'll go over the plan.\" He spent the next hour or so telling them all the story of what had transpired since the day Bob came into his life.\n\n\"Bloody hell,\" Ian said when Ryan finished.\n\n\"I agree,\" Ryan told him.\n\n\"You screwed up letting Jake live, you know that, don't you?\" Buster asked.\n\n\"Perhaps,\" Ryan said. \"I actually considered killing the bastard, but I thought better of it. If I had, I would probably have ended up in jail.\"\n\n\"You're right,\" Cap said. \"And there would've been two witnesses to it.\"\n\n\"How'd you manage that with just the one eye?\" Ian asked.\n\n\"Wasn't easy, but I've been working out,\" Ryan said.\n\n\"So you can function in the field, then?\" Ian asked.\n\n\"I manage,\" Ryan said. They heard a vehicle pull in front of the house. Ryan looked and saw it was a dark SUV. He noticed Agent Smith getting out of the car.\n\n\"Hide those weapons,\" he said. \"I'll take care of this.\" He walked out the door and stood on his porch as Agent Smith walked up to him.\n\n\"So, you heard what happened?\" Ryan asked.\n\n\"I did,\" Agent Smith said. \"I figured you'd be putting something together.\"\n\n\"And you thought you'd try to stop me, is that it?\" Ryan asked. \"I did it your way, and look at what that's gotten us.\"\n\n\"You don't understand, Ryan,\" Smith said. \"You don't mind if I call you Ryan, do you?\"\n\n\"Not at all,\" Ryan said.\n\n\"Roger Gillespie, one of the agents protecting your daughter, was a good friend of mine,\" Smith said. \"He was the best man at my wedding and I was his best man. His little boy is my godson.\"\n\n\"So, what is the bureau doing?\" Ryan asked.\n\n\"Not a goddamn thing,\" Smith said. \"It's all politics. They're all trying to dig their thumbs out of their collective asses hoping they can save face with the politicos in Washington. Knight Petroleum is very powerful in certain circles. There's even talk the president might issue a blanket pardon if anyone's convicted.\"\n\n\"So, what do you want from me?\" Ryan asked.\n\n\"I want to join you,\" Smith said. \"I figured you're planning something and I want to help.\"\n\n\"I'm not out to arrest anyone,\" Ryan said. \"I don't believe in taking prisoners. You understand that, right?\"\n\n\"I figured that,\" Smith said.\n\n\"But can you live with it?\" Ryan asked.\n\n\"This isn't my first rodeo, you know,\" Smith said. \"I spent time in the SEALs before I joined the Bureau. So, to answer your question, yes, I can live with it.\"\n\n\"Doesn't sit too well with that badge,\" Ryan said.\n\n\"Right now, I'm not an agent,\" Smith said. \"Like you, I want justice.\" Ryan regarded him for a moment before answering. It was possible Smith was simply trying to worm his way in only to arrest them all later. But the look on Smith's face and the fire in his eyes said something different.\n\n\"Okay,\" Ryan said. \"Welcome to the party,\" he added, extending a hand. Smith grasped his hand and they shook. Just then, a dark panel van came up the driveway and stopped in front of his house. Ryan looked at his watch -- 5:00 pm, on the dot. As he watched, Bob, Jorge and Bill climbed out and made their way to the porch, where Ryan made introductions.\n\n\"Ryan, I want to come with you,\" Bob said. \"I know I haven't seen a lot of combat like you, but I want to do my part. It's my family, after all.\"\n\n\"You have any military training at all, son?\" Ryan asked.\n\n\"I was in the Army Reserves for four years,\" he said. \"My unit got deployed to Iraq for about eight months.\"\n\n\"Reserves,\" Ryan said. \"What'd you do in Iraq?\"\n\n\"I spent some time as a door gunner on a helo,\" Bob said. \"I don't know if that will be any help to you, though.\"\n\n\"Door gunner?\" Ryan asked. \"You ever operate an M134 Minigun?\" Bob chuckled.\n\n\"Yeah,\" Bob said. \"Don't tell me you've actually got one of those.\" Ryan smiled.\n\n\"Today's your lucky day, son,\" he said. \"Not only do we have an M134, we also have a Huey to carry it.\"\n\n\"No shit?\" Bob asked.\n\n\"No shit, son,\" Ryan said. \"C'mon inside. We have some planning to do.\" Ryan motioned for them to enter the house, and closed the door behind him when they were all inside. After introductions, Ryan sat everyone down and asked Beverly to dole out the beer. After everyone had a beer he stepped forward.\n\n\"We got some planning to do, fellas,\" he said. \"But first, we have a little tradition. Ian, will you do the honors?\" Ian stood up and raised his beer.\n\n\"'Ere's to Dawson, and all the other blokes who never made it back 'ome,\" he said. Everyone raised their beer.\n\n\"Dawson,\" the veteran mercenaries repeated before taking a long swig from their beers. Beverly, Bob and Smith joined in. When they finished, Smith raised his beer.\n\n\"To my friend, Roger Gillespie, who gave his life protecting Sarah and her son,\" he said. Everyone raised their beer.\n\n\"To Gillespie,\" they all said, taking another long drink.\n\n\"Normally, we'd break our bottles on the ground,\" Ryan said. \"But since this is a fairly new carpet, we'll just have to forego that part of the tradition.\" Everyone laughed. \"There's been a slight change in plan. Jim, meet your new door gunner,\" he said, putting a hand on Bob's shoulder.\n\n\"You ever fire a minigun?\" Jim said. Bob nodded his head.\n\n\"I have, in Iraq,\" he said.\n\n\"Alright, then. When we're done here, you can join me and we'll get it mounted up for you, alright?\" Jim asked.\n\n\"Yeah,\" Bob said. Beverly came to Ryan and took him by the arm.\n\n\"I want to come, too,\" she said. Everyone stopped what they were doing and looked at her, shocked.\n\n\"Sweetheart, this isn't a pleasure trip,\" Ryan said. \"You could get seriously hurt.\"\n\n\"But we're partners,\" she said. \"Where you go, I go, remember?\"\n\n\"Ryan's right, Beverly,\" Smith said. \"Besides, what would you do?\"\n\n\"Actually, I could use her help in the comm post,\" Bill said. \"Have you seen the inside of that thing? Jorge's got so many damn monitors and things, there's no way I can watch it all by myself.\" Ryan thought it over for a few moments. Bill was a good man, but his prosthetic leg would hinder his movement in the field, and having someone with him to watch the monitors would free up Jorge. He looked at Bill.\n\n\"You'll train her and make sure she has protection, right?\" he asked.\n\n\"Absolutely, boss,\" Bill said. Ryan nodded his head.\n\n\"Okay, after we plan the op, you get her out there and start training her,\" Ryan said.\n\n\"Will do, boss,\" Bill said. Ryan looked at Beverly.\n\n\"Promise me you'll be careful,\" he said.\n\n\"I will, Ryan,\" she said. \"Thank you for letting me be part of this. I'm sorry if I embarrassed you or made you upset.\" He took her in his arms and smiled into her face.\n\n\"I'm not embarrassed or upset,\" he said. \"I couldn't be more proud of you right now. Besides, it'll give us something to tell the grandkids one day.\" She smiled back up at him.\n\n\"Really?\" she asked. \"You mean that?\"\n\n\"Of course,\" he said. \"Now, c'mon, let's go plan this out.\" They all went into Ryan's office where he had the map and the layout of the camp. They spent the next two hours planning out the operation. When they ironed out the plan of attack, Bill handed everyone what looked like a GoPro camera that attached to their body armor and a communication unit with an earbud at the end of a spiral wire. Each unit had a number stenciled on it. Ryan's was numbered \"1.\"\n\n\"Okay,\" Bill said. \"Call sign, as always, is Whiskey Delta. Ryan, of course, is Whiskey Delta One. Everyone else's numbers are on their comm units. We'll be monitoring your actions in the CP. That's 'command post' for those of you not familiar with the term,\" he added, looking at Beverly.\n\n\"What does Whiskey Delta mean?\" she asked.\n\n\"War Dogs,\" Jim said. \"It's from the old line, 'cry havoc! And let slip the dogs of war.' That's Shakespeare, you know.\"\n\n\"So, that means Ryan is the number one war dog?\" she asked innocently. Everyone else snickered. She looked around, not understanding what was so funny.\n\n\"Something like that,\" Buster said.\n\n\"Alright,\" Ryan said. \"We leave at 2300, or 11:00 pm. That'll put us on target at 0130. It's still light enough out to get everything set up, so let's go.\" Bill and Jorge handed everyone a set of night vision goggles. Bob went with Jim to the helicopter to get the minigun set up and Bill took Beverly to the CP to start her training. Just then, a sheriff's patrol car pulled up in front of the house.\n\n\"Crap,\" Ryan said quietly as he watched Sheriff Coltrane get out of his vehicle. Ryan looked at Agent Smith. \"I'll need you to help deal with this,\" he said. Smith nodded his head and put on his best official face.\n\n\"Sheriff Coltrane,\" Ryan said with a smile on his face. \"What can I do for you, sir?\"\n\n\"I was driving by and saw all the activity, and that chopper out back and was just curious,\" the sheriff said. \"You got some kind of a party going on here, or what?\" Agent Smith pulled out his credentials and showed them to the sheriff.\n\n\"Special Agent Smith, FBI,\" he said, identifying himself. \"Are you THE Sheriff Coltrane?\"\n\n\"As a matter of fact, yes, I am,\" the sheriff said, puffing himself up.\n\n\"I've heard good things about you, sheriff,\" Smith said.\n\n\"I'm happy to oblige the FBI whenever I can,\" the sheriff said.\n\n\"Good,\" Smith said with a smile. \"I'm glad to hear it. Listen, Mr. Caldwell is helping us with a very special operation and I'd consider it a personal favor if you could help us out.\"\n\n\"What can I do?\" the sheriff asked.\n\n\"We'll be leaving here about 1100 hours, and I'd appreciate it if you could clear the road for us, say, from here to the state line. Can you do that, sheriff?\" he asked.\n\n\"Of course, I can,\" Sheriff Coltrane said. \"Is this one of them black operations?\"\n\n\"Something like that. The most secret operation you can imagine, sheriff,\" Smith said. \"Lives are in the balance here, so I'd appreciate it if you said nothing about this to anyone. I do mean nothing. In fact, it would be best if you just forgot we were even here.\"\n\n\"Consider it done, Agent Smith,\" he said. \"Uh, just how secret is this?\"\n\n\"This is so secret that only a very few people even know it's happening,\" Smith said. \"That's why I'm counting on you to help us keep it that way. Truth is, I've probably broken federal law just telling you it's going to happen. You realize that it's treason if this gets out, and you know the penalty for that.\" Coltrane gulped as he considered what Smith said.\n\n\"You've got my solemn word, Agent Smith,\" he said. \"No one will ever hear about this from me.\"\n\n\"Thanks, Sheriff,\" Ryan said. \"We'll let you know when we're ready to go.\" Ryan and Smith went back into the house and walked into the office.\n\n\"You know, I'm probably going to hell for this,\" Smith said. Ryan chuckled.\n\n\"I don't think so,\" Ryan said. \"At least not without a good fight.\" Ryan donned his web gear and pulled out his fighting knife. It was the largest knife Smith had ever seen. Ryan picked up a piece of paper and deftly cut it in two.\n\n\"Damn,\" Smith said. \"Now that's a knife.\"\n\n\"Is that your service pistol?\" Ryan asked, pointing to the pistol in Smith's shoulder holster.\n\n\"Yes it is, why?\" Smith asked.\n\n\"Leave it,\" Ryan said, walking to the open gun cabinet in the office. \"Along with all your ammo.\"\n\n\"But what will I use?\" Smith asked. Ryan handed him a much older .45 caliber M1911 pistol and several fully-loaded magazines, already in carrying pouches.\n\n\"This,\" Ryan said.\n\n\"Where'd you get this from?\" Smith asked.\n\n\"You don't really want to know,\" Ryan said. \"Last I heard, it came up from Mexico.\" Smith checked the pistol and observed the serial number has been filed off. He checked the action and inspected the magazines.\n\n\"Mexico, huh?\" Ryan asked.\n\n\"That's what I heard,\" Ryan said. \"I think it was one of the guns in that Fast and Furious scandal a while back, but I'm not 100 percent sure.\"\n\n\"Uh huh,\" Smith said, placing the pistol in his shoulder holster. Ryan tossed Smith a can of camo paint. Smith caught it and put it in his jacket pocket.\n\n\"Put that on when we get to the state line,\" Ryan said. \"You have gloves, I hope?\"\n\n\"Gloves?\" Smith asked. \"Why?\"\n\n\"Fingerprints,\" Ryan said. \"I don't want to leave anything that might lead back to us, just in case.\"\n\n\"Good thinking,\" Smith said. \"Yeah, I have a pair of gloves.\"\n\n\"Leave 'em,\" Ryan said. \"Use these,\" he added, tossing him a pair of black gloves. \"I don't want any GSR on your gloves if we can help it.\"\n\n\"What about my jacket?\" Smith asked.\n\n\"Leave that as well,\" Ryan said. \"Use one of mine if you have to. We're about the same size.\" Smith looked in Ryan's cabinet and found a dark green lightweight jacket. He put it on and Ryan tossed him a camo floppy hat and a kevlar vest. Smith put it on and Ryan checked him over. He nodded his head when he was done.\n\n\"You'll do,\" Ryan said.\n\n\"Gee, thanks,\" Smith said sarcastically. Ryan smiled and looked at his watch.\n\n\"About time to go,\" he said. He keyed the microphone on his vest. \"Time to go,\" he said quietly. \"Whiskey Delta 7, give us a 15 minute head start, then head out.\"\n\n\"Roger that,\" Jim said in response. According to the plan, Smith, Jorge, Ryan, Bill and Beverly would ride in the van while everyone else would take the helicopter. Smith walked out as Ryan turned off the lights and locked the doors.\n\nSmith went to the van, where Jorge, Bill and Beverly were waiting and Ryan went to the sheriff's car.\n\n\"Just so you know, Sheriff, we won't be using our main headlights,\" Ryan said. \"We'll have our parking lights on until we hit the state line.\"\n\n\"How will you see?\" Sheriff Coltrane asked, confused. Ryan held up a pair of night vision goggles. \"Damn,\" the sheriff said. \"You people really know what you're doing, don't ya?\"\n\n\"I like to think so,\" Ryan said. \"And remember what we said earlier. Besides, you promised me if I ever needed anything to ask.\"\n\n\"I remember,\" the sheriff said.\n\n\"Route us around the town, if you would,\" Ryan said. \"I don't want folks wondering what's going on.\"\n\n\"Good idea,\" the sheriff said. \"We can take that new bypass. It's faster and it'll save y'all some time.\"\n\n\"Okay,\" Ryan said. \"Watch for my colleague's signal and we'll follow you. I want to stop at the station at the junction of Highway 62 for gas.\" He shook the sheriff's hand and got in the van, where he saw Beverly and Bill sitting in front of a large collection of monitors and communication equipment built into what had to be a custom setup. Beverly was wearing a kevlar vest and a helmet sat on the console in front of her.\n\n\"You ready, dear?\" he asked. She nodded her head, nervous. \"Don't worry. You'll do just fine.\"\n\n\"That's what I've been telling her,\" Bill said.\n\n\"Let's roll,\" Ryan shouted. Jorge waved and motioned to the sheriff, who waved back before turning his car around. They headed out and as they got on the blacktop, Bill turned back to the consoles, showing Beverly more features of the system.\n\n\"You got a police scanner in here?\" Ryan asked.\n\n\"Of course,\" Bill said.\n\n\"Turn it on,\" Ryan ordered. \"I want to make sure our sheriff doesn't make any unwanted calls.\"\n\n\"Got it, boss,\" Bill said, turning on the scanner. They heard nothing but normal late-night chatter, with the sheriff saying he was going to patrol the bypass on out to the state line.\n\n\"10-4,\" the dispatcher said. They listened, but Sheriff Coltrane remained true to his word and mentioned nothing of the van behind him. They sped on into the night, and pulled over at the gas station by the junction to Highway 62. Jorge jumped out and filled the tank.\n\n\"If you need to hit the bathroom, this is your chance,\" Ryan said.\n\n\"I gotta go -- bad,\" Beverly said.\n\n\"Me too,\" Bill said.\n\n\"Okay,\" Ryan said. \"Make it fast.\" A few minutes later, they were back and headed north into New Mexico. Jorge waved at Sheriff Coltrane as he crossed the state line. He secured his night vision goggles and turned off his lights. Ryan looked at Beverly and took her hand. She was trembling. He squeezed her hand and smiled.\n\n\"It's alright, dear,\" he said. \"Piece of cake.\" She nodded her head.\n\n\"Piece of cake, right,\" she said. \"Maybe for you. I'm scared to death.\"\n\n\"That's normal. Take a deep breath,\" Ryan said. \"Then hold it.\" She followed his direction. \"Now, slowly let it out.\" She obeyed as he watched. \"Just do that a couple more times. You're doing just fine.\"\n\n\"You really did this for a living?\" she asked.\n\n\"Yeah, I did,\" Ryan said. \"So did Bill here.\"\n\n\"How did you do it all those years?\" she asked.\n\n\"One day at a time,\" Ryan said. \"Isn't that right, Bill?\" He nodded his head.\n\n\"Yup,\" he said.\n\n\"Didn't you ever get scared?\" she asked.\n\n\"All the time,\" Ryan said. Bill nodded his head.\n\n\"Then why did you do it?\" she asked.\n\n\"It's what we were paid to do,\" Ryan told her. \"The fear helps keep us alert.\" Soon, they were on the road overlooking the camp and Jorge pulled off onto the road leading to the main gate.\n\n\"Stop here,\" Ryan said quietly. Jorge pulled off the road so the brush would help conceal the van. Ryan knew they were about 50 yards from the front gate. He pulled out two crossbows and handed one to Smith.\n\n\"You any good with this?\" he asked. Smith nodded his head. \"Good. Let go.\" Ryan rummaged around and grabbed two remote charges Cap had handed him earlier, then he, Smith and Jorge quietly climbed out of the van, making sure not to make any noise that might alert the guards. Ryan handed a crossbow to Smith and they crept up the road until they were just a few yards from the gate. Two guards sat at the gate, and Ryan could tell they were asleep in their chairs. He motioned for Smith to take out the one on the right side of the road. They took careful aim and fired.\n\nThe bolts shot out as the bows made a \"thwip\" sound. The two guards fell over, dead. Ryan and Smith handed the bows to Jorge.\n\n\"Get these back to the van, then get back up here as fast as you can,\" Ryan whispered. Jorge nodded his head and left with the two bows. They crept up to the gate and saw no one else. Ryan looked in the small guard shack and saw an array of indicators on a console. No doubt, he thought, warning lights for sensors in the brush surrounding the camp.\n\nHe pulled out his knife and cut all the cables he could see. Noticing the large gnarly dogwood trees on either side of the narrow road, Ryan placed a charge at the base of each one and turned the detonators on as Cap instructed.\n\nConfident they still hadn't been spotted, he slowly lifted the gate so the van could get in when the time came. They looked in the compound and noticed two large black SUVs parked in front of one of the buildings. Ryan motioned to Smith.\n\n\"Those weren't there yesterday,\" he whispered. Smith nodded and looked at the vehicles.\n\n\"Mexican plates,\" Smith whispered. \"From Chihuahua. Any idea who they might belong to?\"\n\n\"None,\" Ryan whispered. By then, Jorge had made it back. Ryan pointed to the building where he saw Sarah and Ryan taken the previous day. \"That's our target,\" he whispered. Jorge and Smith nodded their heads. Ryan keyed his microphone and issued the command.",
        "\"Go, go, go,\" he said. He heard the blades of the chopper overhead and saw the aircraft descend to a point about 10 feet off the ground by the Lear jet. He saw three ropes come out of the craft and three men descending, reminding him of a passage from an old Jethro Tull song:\n\n\"Like spiders down ropes to free-fall; \n\nA thirty round clip for a visiting card;<br >Admit one to the embassy ball.\"\n\nAfter the men made their way down, they crept up to the buildings, remaining in the shadows. The chopper lifted and all hell broke loose as the minigun opened up, shearing the nose off the Lear jet. Suddenly, guards came out of the buildings, and walked straight into a wall of hot lead from the AK-47s carried by Ian, Cap and Buster.\n\nThe three men scampered to their designated buildings, kicking in doors, firing as they went. Ryan heard Beverly on the radio, giving instructions to the men.\n\n\"Whiskey Delta four, bogey at 10 o'clock,\" she said, which was followed by a short burst of fire. As she gave directions, the chopper turned its fire on the vehicles, smashing the engines. Ryan was impressed that Bob thought enough not to target the gas tanks. Still, the possibility the vehicles could still catch fire weighed on his mind. The last thing he wanted was a fireball alerting local law enforcement.\n\nHe looked at Jorge and Smith and gave the signal to move. As he did so, he spotted Elmer and a guard going into the building. They sprinted to the building, firing at guards as they came toward them. Ryan flipped his night vision goggles up as they approached the building.\n\nJust as he was ready to kick the door in, it opened and a large man stood there shocked. Ryan wasted no time, putting a bullet in his head. They rushed inside and saw Elmer with one arm around Sarah's upper body. He held a knife to her throat.\n\n\"Watch the door,\" Ryan told Jorge. Jorge wordlessly turned to the door to provide cover. They could hear the staccato noise of the AK-47s and the sound of the minigun. A few scattered shots could be heard, along with shouts and screaming, but those died off soon enough. Ryan and Smith spread out, their pistols at the ready.\n\n\"Come any closer and I'll cut your pretty little daughter's head off,\" Elmer threatened, pissing Ryan off even more. Sarah was crying as she struggled to get free.\n\n\"Boy, didn't anyone ever tell you never to bring a knife to a gunfight?\" Ryan asked. He watched and waited for an opening as Elmer tried to position himself. Ryan knew he only had one shot at this. Soon enough, Elmer's leg presented itself. Ryan aimed low and fired, hitting Elmer's lower leg. He screamed and dropped the knife.\n\nSarah, now free, ran toward Ryan and Smith as Elmer screamed in pain on the floor.\n\n\"Daddy,\" she cried, her arms outstretched.\n\n\"Where's little Ryan?\" Ryan asked his daughter.\n\n\"In the next room,\" she said. \"They've got him drugged up on something.\"\n\n\"Get him and get them the hell outta here,\" Ryan told Smith. \"Go!\" Smith holstered his pistol and ran into the other room, where the little boy was laying on a bed, unconscious. He picked the boy up and carried him out into the main room, Sarah close by.\n\n\"Come on, Ryan, we have to go,\" Smith said.\n\n\"Get them outta here,\" Ryan said. \"I'll be along directly. GO!\" Smith looked at Elmer, nodded his head, then spoke into his microphone.\n\n\"Whiskey Delta CP, objectives secured,\" he said. \"Get in here, now!\"\n\n\"Roger that,\" Bill said. Smith escorted Sarah out of the building. Jorge looked at Ryan.\n\n\"Go, Jorge,\" Ryan said. \"Cover them. I'll be there shortly.\" Jorge nodded his head and left with Smith. When they were gone, Ryan approached Elmer, kicking the knife away. Elmer looked at Ryan, fear etched in his face.\n\n\"Please, Ryan,\" he begged. \"Don't kill me. I have money. Lots of it. It's yours. All of it. Just please don't kill me. I'm begging you.\"\n\n\"Not so full of piss and vinegar now, are you? I don't want your money, asshole,\" Ryan said. \"I have enough of my own.\" He delivered a swift kick to Elmer's balls, causing him to scream in pain. \"That's for fucking my wife and destroying my marriage.\" He kicked Elmer again, twice. \"That's for kidnapping my daughter and grandson.\" He delivered another kick to Elmer's groin. \"And that's just because you're a scum-sucking, maggot-infested piece of shit and I hate your guts. Remember what I promised you, boy?\"\n\nElmer nodded his head.\n\n\"Well, whaddya think?\" Ryan asked. \"You like this little war? You having fun now? Huh? ANSWER ME, GODDAMMIT!\"\n\n\"Please, stop,\" Elmer whined.\n\n\"Grow the fuck up,\" Ryan snarled. \"You brought this on yourself.\" He put his pistol away and drew his large knife, causing Elmer's eyes to go wide.\n\n\"You believe in God?\" Ryan asked, seeing the St. Christopher's medal around Elmer's neck. Elmer nodded his head. \"Good. Because you're going to meet him. Real soon,\" Ryan said, causing Elmer to piss his trousers. Ryan chuckled as he saw that. He got behind Elmer and grabbed his head, bringing the knife to Elmer's throat.\n\n...\n\nA few minutes later, Ryan walked to the van, having cleaned his knife on Elmer's trousers. He saw Smith by the open back door, motioning for him to hurry. He double-timed to the van, took one last look around to make sure everyone was secure, then stepped inside.\n\nAs the van passed the gate, he grabbed the remote from his pocket, lifted the protective cover and pressed the button. Two muffled explosions could be heard, followed by the sound of falling trees. He glanced back and saw they effectively blocked the gate. That should slow down anyone trying to get in or out, he thought.\n\n\"Whiskey Delta Seven,\" he said in his microphone. \"Sitrep.\"\n\n\"Everyone present and accounted for,\" Jim said in reply. \"All buildings secured. One casualty.\" Ryan's heart dropped.\n\n\"Who?\" he asked brusquely.\n\n\"Gunner,\" Jim said. Ryan knew he was referring to Bob. \"Cap says it's just a minor flesh wound. He's alright.\" Ryan breathed a sigh of relief. Still, it hurt to hear that his son-in-law was injured. \"He did good, boss,\" Jim said, making Ryan feel better. More than that, really. He was proud of the young man.\n\n\"Roger that, Whiskey Delta Seven,\" Ryan said. \"Get back to base. Maintain radio silence.\" He heard the click of a keyed microphone in acknowledgment, and took his comm unit off. He turned to Beverly, who was shaking.\n\n\"You alright?\" he asked. She nodded her head.\n\n\"Did I do okay?\" she asked.\n\n\"You did better than that,\" he said. \"You were perfect. We couldn't have done this without you.\" He held her until she stopped trembling. He looked at Sarah and Ryan. She was holding the boy in her arms, crying. He let go of Beverly and went to his daughter.\n\n\"Are you alright?\" he asked. She nodded her head and cried.\n\n\"Yes, thanks to you. Again,\" she cried. He held her as she sobbed and comforted her as best he could. \"I'm worried about little Ryan,\" she said in between her sobs. Beverly came to them and looked at the boy, then put her ear by his mouth.\n\n\"He's breathing,\" she said. \"So maybe he's just asleep. What did they give him?\"\n\n\"I don't know,\" she said. \"They kept him doped up the whole time we were there.\"\n\n\"We'll have Cap take a look when we get home,\" Ryan said. He looked at his daughter's tear-streaked face. \"Did they do anything to you?\" he asked.\n\n\"No, but they were planning something bad,\" she said. \"I overheard them talking about a gang bang, then selling me off to some Mexican cartel if you didn't come through.\"\n\n\"You don't have to worry about them anymore,\" Ryan said. He sat on the bench, holding his two women as Jorge drove home. He considered telling her about Bob, but decided to wait until they got home. He looked around at the others and realized they were decompressing in their own way, so he said nothing.\n\nBob turned the police scanner back on after they crossed the state line, and heard some chatter indicating local LEOs were on the way out of Carlsbad.\n\n\"ETA 90 minutes,\" they heard one officer say. Of course, Ryan knew that didn't necessarily mean other officers weren't closer. He hoped they would be home by the time the locals arrived on the scene.\n\n\"Jorge, go ahead and turn the lights back on,\" he said. \"And watch your speed. The last thing we need is to get pulled over by DPS.\"\n\n\"Got it,\" Jorge said in response. This particular road wasn't traveled much, but that didn't mean a state trooper wasn't sitting in a speed trap waiting for an unsuspecting car. Border Patrol agents were also known to troll some of these roads. It seemed that all of them were holding their breath the whole way back, but they finally pulled into his driveway. When Jorge stopped, Ryan exhaled.\n\n\"Home, sweet home,\" he said. They climbed out of the van and made their way inside. Ryan carried his grandson upstairs and laid him down on one of the beds. He covered the boy and kissed him on the top of his head. He went downstairs and noticed that Beverly had unlocked the back door, letting the others inside.\n\nCap had Bob's uninjured arm around his shoulder and guided him to a chair in the kitchen. Ryan could see the torn shirt and the sleeve was drenched in blood. His heart ached for the boy. He put a hand on Bob's good arm.\n\n\"It's just a scratch,\" Cap said. \"A bullet ricocheted off the door panel and struck him. He'll need a couple stitches but he's okay otherwise.\" Ryan nodded his head, bent down and kissed the boy on the top of his head. He grabbed the second 12-pack of beer and the cigars off the counter and began handing them out.\n\nSarah took one look in the kitchen and saw Bob sitting there as Cap cleaned his wound. She cried out and ran to him as everyone watched.\n\n\"Oh my God,\" she cried. \"You've been hurt. I didn't know you were there.\"\n\n\"Who do you think was making all that racket outside, shooting up everything in sight?\" Cap asked.\n\n\"That was you?\" she asked. Bob nodded his head, a weak smile on his face. She wrapped her arms around him and smothered him with kisses. \"Why? Why were you there?\"\n\n\"I couldn't just sit home and wait,\" he said. \"If anything happened to you or little Ryan and all I did was sit at home, I could never live with myself.\"\n\n\"Oh, sweetheart,\" she said. \"I love you so much. You're now officially my new hero.\" He chuckled as she said that. \"Just wait till I get you home. I'll show you how much I appreciate what you did.\" He smiled at the thought of that.\n\n\"Why don't you let me finish up here, and I'll go check on your son,\" Cap said. Sarah nodded her head, kissed Bob one more time and went into the front room, where everyone had already opened their beer and lit their cigars.\n\n\"You know,\" Cap said quietly after she left, \"the old man really thinks the world of you.\" Bob looked at him, shocked. \"So do the others. You earned their respect tonight.\"\n\n\"How?\" Bob asked.\n\n\"Well, you stood up and fought for your family,\" Cap said. \"And you shed some of your own blood in the process. That means a lot to hard guys like Ryan, Bill, Buster and Ian.\"\n\n\"And the rest of you?\" Bob asked.\n\n\"You've earned all our respect, Bob. Excuse me, Gunner. That's your new name now, at least among us,\" Cap said. Bob smiled.\n\n\"I like that,\" he said. \"Gunner. Yeah, I can live with that.\"\n\n\"You know what else might be nice?\" Cap asked, as he stitched Bob's arm.\n\n\"What?\" Bob asked.\n\n\"If you started calling Ryan, 'Dad.' He thinks of you as the son he never had,\" Cap said.\n\n\"Really?\" Bob asked. Cap nodded his head as he cleaned up and bandaged Bob's arm.\n\n\"I can see it in his face,\" Cap said. \"The way he looks at you, the way he talks to you. He was like that with Dawson, too.\"\n\n\"Who was this Dawson guy?\" Bob asked.\n\n\"He was on our team for a few years,\" Cap said. \"Had a wife and three kids at home. They got into a bit of a pickle, so he joined up to earn his way out of debt. Ended up throwing himself on a grenade without even thinking about it. Ryan tried to stop him, but it was too late. He's carried the guilt of that ever since. Always thought it should've been him instead of Dawson.\"\n\n\"Damn,\" Bob said. \"I never knew that.\"\n\n\"There's a lot about that old guy you don't know,\" Cap said. \"Maybe it's time you got to know him a little bit better.\" Bob nodded his head.\n\n\"Maybe you're right,\" he said. Cap finished with the bandage, packed his gear and stood up.\n\n\"I'd better go check on your son now,\" Cap said. \"Take it easy with that arm for a few days. It may itch after a while. I'll give you some antiseptic cream for it.\"\n\n\"Thanks,\" Bob said. Cap nodded his head and went upstairs. Ryan came to the table and sat down. He opened a beer and handed it to Bob, then offered him a cigar.\n\n\"You know, this'll probably be the only time Beverly will let you smoke one of those in here, so enjoy it while you can,\" he said with a smile.\n\n\"Thanks... Dad,\" Bob said. \"You don't mind if I call you that, do you?\" Ryan fought back a tear and shook his head.\n\n\"Not at all, son,\" he said. \"In fact, I'd be a bit irritated if you didn't.\" Bob chuckled.\n\n\"I've seen you when you get irritated,\" Bob said. Ryan smiled and shook his head.\n\n\"No, you've seen me get plum pissed the fuck off,\" Ryan said. \"Still... Jim tells me you did real good out there. According to him, you stood right up in the door of that chopper after you got hit and just kept firing. Tell me, why DID you come out here?\"\n\n\"Like I told Sarah, I just couldn't sit at home knowing she and Ryan were in danger,\" Bob said. \"I could never live with myself if something happened to them and all I did was sit on my ass at home waiting to hear from someone.\" Ryan nodded his head.\n\n\"I can respect that,\" Ryan said. \"You're a man -- a father and a husband. You wanted a father's justice. And you got it. And I couldn't be more proud to call you son.\" Bob looked at him, shocked. Ryan smiled, nodded his head and stood up.\n\n\"Well, I have one little thing to deal with here tonight,\" Ryan said. \"Why don't you come in and join us for a bit. You're about to see history unfold.\" Bob grabbed his beer and his cigar and followed Ryan into the front room.\n\nRyan held up his beer and tapped on the bottle with his knife to get everyone's attention. Everyone stopped what they were doing and looked at him. He set his beer down, put the knife back in its scabbard, then took the cigar out of his mouth and handed it to Jim. He motioned for Beverly to join him. She went to him and looked up at him, wondering what he planned to do.\n\nAs everyone watched in stunned silence, he got down on one knee, took her hand and looked up at her.\n\n\"Beverly,\" he began. \"I never thought I would ever be able to love another woman again. But you came along and made me feel whole again. And for that, I will always and forevermore love you with everything in my heart. So, in front of all these witnesses, I'm asking, will you marry me and make me the happiest man on earth?\"\n\n\"Oh my God, Ryan,\" she said, tears falling down her face. \"Yes, my dear Ryan, I'll marry you. I love you so much.\" He stood back up as everyone cheered and clapped. They embraced each other right there in front of everyone.\n\n\"Get a room, willya?\" Buster shouted out, causing everyone to laugh.\n\n\"Got one, upstairs,\" Ryan said to more laughter.\n\n\"Oh God, the whole place is gonna be rockin' tonight,\" Buster said. That prompted more laughter. Ryan and Beverly hugged and kissed each other again.\n\n\"So, when's the wedding?\" Smith shouted.\n\n\"Well, I have a few loose ends to tie up, then well git 'er done,\" Ryan said. \"If that's okay with the lady of the house,\" he added.\n\n\"Damn, not even married yet and he's already pussy-whipped,\" Ian shouted. They all laughed again.\n\n\"Well, you know what they say,\" Ryan said. \"It's okay to be hen-pecked if ya don't mind the hen doing the pecking.\"\n\n\"It's more than alright,\" Beverly said. She looked around before continuing. \"Just so y'all know, Ryan definitely wears the pants in this family. I'll have you know this wonderful man saved my life once. I thought I had lost everything, but then he came along and made it all right.\"\n\n\"That's what my dad does best,\" Sarah said, hugging Beverly. \"And if it's alright with you guys, I'd like to start calling you 'Mom' as of right now. After all, you risked your life for me and little Ryan and that's something my birth mother never, ever did.\" Beverly held Sarah in her arms and the two women shed a few tears together.\n\n\"Of course it is, dear,\" she said. Suddenly they heard a telephone ring.\n\n\"Hold on,\" Smith shouted. \"It's for me. Everyone, be quiet.\" They all quieted down as Smith answered his phone.\n\n\"Yeah, Smith,\" he said. They only heard his side of the conversation. \"Uh huh. What's that? In New Mexico? Really? That sounds awful. Okay, call Jones and have him meet me there. I'll be there as soon as I can. Right. Bye.\" He ended the call and looked at the group.\n\n\"What was that all about?\" Ryan asked.\n\n\"The local LEOs in New Mexico called the FBI field office in El Paso,\" Ryan said. \"They want me to investigate an attack on a corporate retreat. Said the place looks like a war zone. No survivors. Y'all wouldn't happen to know anything about that, would you?\"\n\n\"Us?\" Jim asked. \"Oh, hell no,\" he added to laughter.\n\n\"That's what I thought,\" Smith said. \"Anyway, I'd better get cleaned up and get going. You wouldn't mind brewing a pot of coffee, would you?\"\n\n\"I'd be happy to,\" Beverly said. While she was making coffee, Ryan spoke up.\n\n\"There's two more bedrooms upstairs, guys, and that couch isn't too bad. Might as well settle in for the night,\" he said. Everyone split up and found a place to sleep. Ryan met Smith at the front door as he prepared to leave.\n\n\"You have everything?\" he asked.\n\n\"Yeah,\" Smith said. \"Good thing you made me keep my service pistol and badge here.\"\n\n\"You gonna be alright?\" Ryan asked. \"You did put your career on the line tonight.\"\n\n\"Let me worry about my career,\" Smith said. \"It'll be alright. I'll call you tomorrow, okay? You gonna be home?\"\n\n\"I'll be flying back east with Sarah, Bob and Ryan, but you can still get me on my phone,\" Ryan said. Smith nodded his head.\n\n\"Okay,\" he said. \"I'll be in touch.\"\n\n\"Thanks again,\" Ryan said. \"For everything.\"\n\n\"You're welcome,\" Smith said, shaking Ryan's hand. Weary, Ryan closed the door and headed upstairs where his wife-to-be was waiting. He knew they would only get a few hours sleep before she had to get up and tend to her chickens.\n\n\"I need a break,\" he said to himself as he laid down next to Beverly.\n\n\"Goodnight, my husband-to-be,\" Beverly said as she kissed him on the face. He returned her kiss and wrapped his arm around her. She felt so soft and warm.\n\n\"Goodnight, my wife-to be,\" he responded before falling asleep.\n\n...\n\nTo be continued...\n\n \n\n \n\n \n"
    ],
    "authorname": "saddletramp1956",
    "tags": [
        "daughter",
        "husband",
        "justice",
        "revenge",
        "wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/a-fathers-justice-pt-05"
}