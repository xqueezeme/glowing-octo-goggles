{
    "title": "Three Square Meals Ch. 043",
    "pages": [
        "\"I don't recall seeing Irillith around here before.\" John mused, addressing Ceraden, who sat behind his desk, drumming his fingers on the glossy surface with irritation.\n\n\"No, thank heavens. She's a 'guest', and I only have to put up with her for another week, then it'll be glorious peace and quiet once again,\" Ceraden replied wistfully.\n\nHe looked over the desk, and tsked with annoyance at the mess the shattered device had made on the floor. A few second later a couple of cleaning robots glided in silently on some kind of hover system, and they began to efficiently sweep up the scattered components. Dana leant over the armrest and studied the robots in fascination, wondering how they could propel themselves so quietly, without the telltale whir of anti-grav cyclics.\n\nCeraden seemed to suddenly remember he had guests to attend to, and he sprang to his feet, while tapping out a series of commands on the console. A section of the coffee table folded back on itself and a hidden platform rose up, revealing a decanter of crimson wine, and a number of delicate crystal glasses.\n\n\"John, ladies, please help yourselves. I humbly apologise for that awkward incident, you must think terribly of Maliri hospitality,\" Ceraden said, sounding embarrassed.\n\nJohn grinned at him, and waved his hand dismissively, as he said, \"Don't worry about it Ceraden. The girls are made of stern stuff, and I'm sure they weren't bothered in the slightest.\"\n\nThe girls were sitting on three sofas in the room, Rachel and Dana on the right, with Calara and Jade in the middle, and Alyssa next to John in a 'U' shape facing Ceraden's desk. They beamed sparkling smiles at him and shook their heads, before Calara began to serve everyone wine from the crystal decanter.\n\nCeraden stared at the beautiful young women for a moment, before turning to look at John. \"So what brings Lady Luck's most favoured son to my humble abode?\" he asked curiously.\n\nJohn accepted a glass of wine from Calara, and sipped it before nodding his approval. He then looked in Ceraden's direction. \n\n\"As you seem to know disturbingly well, I'm now in possession of the assault cruiser I served on during my days in the military. I did retire, eleven years ago, but after we intervened in the Kintark conflict, rescuing Terran personnel in the Iota-Leonis system, the Terran Federation decided to bump up my old rank. The situation is a bit confused there, but as far as I'm concerned, I'm still retired,\" John explained carefully.\n\nCeraden sat back against his desk, and folded his arms as he looked at John. \"That's very interesting, Lion of the Terran Federation, but that still doesn't answer my question,\" he said playfully.\n\nJohn laughed, shaking his head at just how much of his recent activities the cunning Maliri seemed to know about.\n\n\"I was getting there,\" he said, holding his hand up placatingly.\n\nCeraden chuckled and turned to look at the girls. \"Does he ramble like this with you too? It must get dreadfully dull waiting for him to get to the point,\" he said, teasing his old friend.\n\nAlyssa arched an eyebrow and replied coyly, \"I wouldn't necessarily say that. He tends to be quite good at telling us exactly what he wants.\"\n\nJohn coughed and put down his glass, and Ceraden laughed uproariously. \n\n\"Oh, she's magnificent John! I can see why you abandoned your lonesome ways!\" the Maliri exclaimed, before sweeping a bow to the blonde, who smiled at him and inclined her head at the compliment.\n\nJohn cleared his throat, and then said, \"Yes, well, back to your original question then. I want to buy Maliri laser weaponry to upgrade the guns on the Invictus,\" he finished succinctly.\n\nCeraden opened his hands in an apologetic gesture. \"Ah, my friend. I'd help you if I could, but you ask the impossible. The Maliri never trade our weapons technology, and doing so is a capital offence amongst my people,\" he said, his voice full of regret. \n\nJohn looked confused, and said, \"But I'd heard stories about you trading with civilians in the past. Surely an exception could be made?\"\n\nThe Maliri shook his head sadly. \"It seems you've been drawn in by tall tales, my friend. I can promise you, that the Maliri have NEVER traded weapons technology with anyone from another species before.\"\n\nJohn slumped back in the chair, and blew out a big breath. \"Sorry girls, it looks like I brought you out here on a wild goose chase,\" he apologised to them.\n\n\"Now, now, let's not be hasty. Perhaps there's some other trade goods you might be interested in while you're here?\" Ceraden asked John encouragingly, trying to buoy his spirits.\n\nDana piped up unexpectedly, pulling Ceraden's attention away from John. \"Well Mr Ceraden, we're actually interested in purchasing electronics. Mainly devices we could use to trade with the Trankaran, as we're headed that way next. Do you, or any of your colleagues, happen to trade in anything along those lines?\" she asked him, with her cutest, most adorable smile on her face.\n\nThe Maliri stared at her a moment, seemingly transfixed, before shaking his head slightly. \"Just Ceraden is fine, Dana, I believe your name was?\" he asked her curiously.\n\n\"That's right, you have an excellent memory, Ceraden!\" she said, smiling at him admiringly.\n\nThe Maliri leaned towards her, obviously fascinated by the redhead. \"Much to my regret, I'm afraid I don't have any goods like that within my inventory, but I know a splendid fellow who does. If you'll permit me, I'd be delighted to make the introductions,\" he offered eagerly.\n\nDana placed her hand on her chest, and fluttered her eyelashes at him. \"I'd really appreciate that, thank you so much!\" she gasped gratefully.\n\nCeraden swept a low bow before her. \"It would be my pleasure,\" he said happily.\n\nDana then looked at him with a warm smile and asked, \"I'm actually the ship's engineer, and we couldn't help but notice the clean crisp air on your station. Would it be a huge imposition for me to take a little look at your air filtration systems? The air on our ship grows horribly stale after a few weeks, and we'd all be so grateful to be able to improve it.\"\n\nCeraden looked spellbound by the redhead, but he looked hesitant when he actually stopped to consider her request.\n\nSensing she had him on the ropes, Dana went for the knockout blow. \"We'd be thinking of you with every big lungful of fresh clean air, wouldn't we girls?\" she asked, and on cue, all five girls took a big breath, savouring the air on the station, with suitably dramatic effects on their busts.\n\nCeraden seem to stare at them all, stunned for a moment, before he suddenly started to laugh. \"I think you could talk me into anything, young lady,\" he chortled whilst shaking his head in wonder. \"I'm actually feeling relieved I don't have the goods you're after, as you must be a formidable trader. I can't promise you anything, but I'll see if I can arrange a tour of the air filtration systems for you.\"\n\nDana beamed a wide smile, and blew a grateful kiss at him, before suddenly looking thoughtful. \"What trade goods do you have in stock?\" she asked him speculatively.\n\nCeraden raised his hands in surrender, before looking over at John, as he said jokingly, \"John, please! Save me from your merciless crew, they plan to leave me penniless!\"\n\nJohn was staring at the redhead in shock, and he nodded at Ceraden distractedly.\n\n*Where did that come from?* he asked Alyssa, quite amazed.\n\nShe smiled at him then glanced at the redhead affectionately. *She always was a sharp trader. Don't you remember her workshop back on Karron? She bartered for all the equipment she wasn't able to refurbish herself. Your makeover gave her a lethal set of trading tools that she never had access to before,* she told him in amusement.\n\nJohn looked over at Dana in admiration, and she grinned at him slyly.\n\nRachel had been studying Ceraden curiously, and she cleared her throat politely to draw his attention, \"Ceraden, please forgive my curiosity, but would you mind me asking you a personal question?\"\n\nThe Maliri turned to face her, and bowed his head politely, before he said, \"Ask away, Rachel, and I promise I'll do my best to answer.\"\n\nThe brunette smiled at his courteous reply, and then asked, \"You speak our language more eloquently than many Terrans! How is that you learnt to speak it so well?\"\n\nCeraden, leaned back against the desk for a moment, and appeared to be mulling something over. \"The Maliri are... gifted, at picking up languages. It's a handy ability, that makes interacting with delightful races, such as Terrans, all the more pleasant,\" he replied playfully.\n\nShe smiled at him in gratitude for his answer, and then looked pensive as she tried to decide if she should ask him another question.\n\n\"Ask away, young lady. I'm sure a polite and well-spoken girl such as yourself won't cause offense,\" he told her disarmingly.\n\nRachel them leaned forward eagerly, and said, \"Xeno-biology is a particular interest of mine, and I'm sure that every Maliri we've seen on the station has been male, with only one exception. Why is that?\" she asked him tentatively.\n\nCeraden laughed lightly, and replied immediately, \"We Maliri are an old-fashioned lot, and us men are the breadwinners, while the Maliri maidens tend the home. It's a rather provincial tradition, especially compared to you Terrans with your gender-blind meritocracy, so please forgive our rather backward ways.\"\n\n\"How interesting, thank you for telling me about your culture,\" Rachel replied with an appreciative smile.\n\n*That was a rehearsed answer, wasn't it?* Alyssa thought to Rachel, sounding intrigued. *He was definitely lying.*\n\nRachel looked her way and smiled benignly, while nodding slightly as she reached over to retrieve her wine glass.\n\nCeraden then stood up and clasped his hands together. \"Well it's nearly lunchtime, how would you like to eat at the finest restaurant on Geniya Station?\" he asked them in a jovial tone.\n\nJohn roused himself from his disappointment about the Maliri laser weapons and nodded eagerly. \"That's a great idea! Will you be able to get us a table at this short notice?\"\n\nCeraden nodded emphatically. \"The owner owes me a favour, so it won't be a problem. I'll make the booking while you head over there. When you've finished your meal, return back to my office, and I'll see what I can do about arranging that tour of the air filtration system for you, Dana,\" he said obligingly.\n\n\"That would be wonderful, thank you!\" the redhead replied immediately. \n\nJohn looked thoughtful for a moment, and then said to the Maliri, \"Which merchant are you thinking of for the electronics? Is it Lenthis?\"\n\nCeraden shook his head regretfully. \"Sadly, poor Lenthis had some ill fortune recently, and is no longer in business. Lady Luck can be a cruel mistress at times,\" he lamented. \"His replacement is a much more pleasant chap called Meruan, and I'll see if he's available for a meeting.\"\n\nJohn nodded in gratitude, and said, \"Much appreciated, thanks, Ceraden.\"\n\nThe Maliri gave a sweeping bow, and then strolled over to the double doors, which parted and opened for him as he approached. John and the girls stood, and followed him out into the corridor, where he led them back to the reception area of his offices. Jade's hackles rose as they were walking away, and she had the distinct impression she was being watched by unfriendly eyes. She glanced back down the corridor, and just caught a flash of gold as someone at the other end disappeared into one of the adjacent rooms.\n\nJohn shook Ceraden's hand, and agreed to come back in a couple of hours' time, once they had eaten lunch. He then led the girls back across the huge foyer and out of the Maliri Trading Commission, before walking back into the long Merchant District.\n\n\"Now, if I remember correctly, it should just be up here, through the Merchant District,\" John said, as he guided them through the bustling crowd of merchants busy haggling over their wares. \n\nIt was just a short walk to the tall arched set of doors that led away from the Merchant District, and down a wide passageway that had clear crystal walls and an equally transparent ceiling. The vista of the stars overhead was breathtaking, and the clear walls also offered them unparalleled views of the rest of the starport. The girls were seeing all this for the first time, and they stopped to point out sights to each other as they meandered their way down the corridor. They eventually reached the end, which seemed to open out into one of the verdant hydroponic domes, and a sweeping staircase curved around to their right, while an ornately armoured Maliri waited by a lectern at the foot of the stairs.\n\n\"Welcome to Natralis, Mr Blake,\" the Maliri said warmly, seemingly forewarned of their arrival. \"If you would care to ascend the staircase, you will be guided to your table.\"\n\nJohn nodded his gratitude to the Maliri, and then offered his hand to Calara, who was waiting patiently by his side. She smiled at him appreciatively, and then they walked up the stairs at a measured pace, with the rest of the group following closely behind. The staircase wasn't that high, perhaps twenty steps, and when they reached the top, another Maliri greeted them with a bow, and then gestured for them to follow. He led them to a private booth that seemed to be resting on the bough of some huge tree, and as they neared the balcony surrounding the edge of the restaurant, they were able to look out over the entire crystal dome.\n\n\"This place is incredible!\" Calara whispered to him, as she marvelled at the lush green park contained in the crystalline dome. \n\nColourful exotic birds flew overhead, filling the air with their melodic songs, as they competed with each other in a warbling chorus. She looked around in amazement at the floor and trellis areas that separated the private booths.\n\n\"It's like this restaurant was grown right out of the tree,\" she said in astonishment, as she leaned precariously over the balcony, balancing herself perfectly so that she could take a look at the huge trunk of the enormous tree the restaurant was built on.\n\nJohn smiled at her and nodded. \"The Maliri certainly know a thing or two about impressive architecture and design,\" he agreed, as he pulled her chair out for her to sit. \n\nShe thanked him gratefully, and he did the same for the others, before finally moving back around the table to sit between Calara and Jade. This section of the restaurant was obviously set up with Terrans in mind, as the cutlery settings were all very familiar, with three sets of knives and forks in decreasing sizes. The waiter came back a few moments after they were seated, and then pressed a button which projected a holographic wine list above the table. While the girls were making their choice, John nodded at the waiter and smiled.\n\n\"Rather than choosing individual dishes, could you please bring us a wide selection of the chef's specials?\" he requested politely. \"My friends haven't tried Maliri cuisine before, so they're eager to see what you have to offer.\"\n\n\"Of course, Sir,\" the Maliri replied eagerly, with a bow, and then nodded as Rachel picked out a few bottles of wine for them.\n\n\"I've never eaten in a place this posh before!\" Dana said nervously. \n\nRachel gently nudged the redhead with her shoulder, and smiled at her. \"Don't worry, I'll look after you and make sure you don't make any faux pas,\" she said kindly.\n\n\"She means she'll try and make sure you don't embarrass yourself,\" Alyssa translated helpfully, with a grin.\n\nDana nodded at Alyssa, and looked at the tawny haired girl at her side. \"So, no eating with my fingers, and licking the bowl clean afterwards then?\" she asked quizzically.\n\nRachel giggled as the redhead grinned at her wickedly, and they all smiled and relaxed as they waited for their food. The wine arrived shortly afterwards, as a gold plated robot glided up to them, carrying the bottles. Just as John had poured out the wine into the girls' glasses, the waiter appeared with the starters. He moved the dishes from the tray carried by the accompanying robot, placing them in the centre of the table, where they hovered silently at a variety of levels.\n\nThe girls followed Rachel's lead as she gave them a quick introduction to fine dining, and John watched with some amusement as the other four girls hung on to her every word. He waited until they were ready to begin and then they took small portions from a variety of the starters, and began to take dainty bites, using the outermost, smallest knives and forks. Rachel nodded approvingly as her students followed her instructions, but decorum began to gradually disappear as they began to excitedly sample the delicious array of exotic dishes. \n\nJohn tried a bit of each of the starters, and then most of the main courses, and he grinned when the waiter brought out a selection of deserts. He soldiered on and tasted a couple of those too, before finally admitting defeat with a loud groan.\n\n\"That food was incredible, but I feel totally stuffed. I think I might have overdone it,\" he admitted ruefully, lounging back in his chair.\n\nJade leaned over and gently stroked his full stomach, and then said teasingly, \"You look like one of us now!\" much to the amusement of the girls.\n\nJohn laughed along as well, but said, \"It's a better look on you ladies, I think.\"\n\nHe paid the bill, and they left the restaurant, all feeling somewhat sleepy after the heavy meal. After strolling back to the Maliri Trading Commission, John greeted Ceraden with a wave, when they walked back into the reception area of his offices. \n\n\"How was lunch?\" he asked them politely. \"I've heard the food there is spectacular.\" \n\n\"Absolutely incredible,\" John replied, enthusiastically. \"Thanks for arranging the booking for us.\" \n\nJade smiled at Ceraden happily, and said, \"I think Maliri cuisine is one of my favourites!\" accompanied by nods and smiles from the rest of the girls.\n\n\"I'm delighted you had such a good time,\" Ceraden replied, sounding overjoyed. \"I've been busy while you've been away, and I have some good news, and some bad news.\"\n\nJohn pretended to mull it over for a moment before saying, \"Let's hear the good news first.\"\n\n\"I've been able to arrange a tour of the air filtration system for you, Dana,\" the Maliri said warily. \"But please keep this to yourselves.\"\n\nThe redhead looked positively ecstatic, but she just about managed to dampen down her exuberance to a grateful grin of thanks.\n\nJohn looked at Ceraden expectantly, and asked, \"So what's the bad news?\"\n\n\"Meruan, the electronics merchant is away on business at the moment, but he'll be back in a couple of days. Will you be able to wait to meet him? Or are you in a hurry to depart?\" the Maliri asked him curiously.\n\nJohn glanced at the girls, but they shrugged at him, letting him know it was up to him. \"Sure, we can stay for a few days,\" John agreed. \"If we're heading out to visit the Trankarans next, we might as well make some profit on the way.\"\n\nThe double doors leading deeper into the offices opened, and a Maliri walked through and came over to join them. He wore Gold and blue armour that wasn't quite as ornate as Ceraden's, and had none of the glimmering jewels.\n\n\"Ah, perfect timing Rellathis,\" Ceraden said, greeting the new arrival warmly. \"He's one of the engineers here at the Geniya Starport, and will be your guide, Dana.\"\n\n\"Pleased to make your acquaintance,\" Rellathis said, with a polite bow.\n\nJohn looked wary for a moment and asked the redhead, \"Do you want us to come too?\"\n\nShe shook her head immediately and said, \"Nah, I'll be fine! You'd just get bored hearing us talk about energy transfer ratios and system relays.\"\n\nCeraden then said, \"I promise your lovely companion will be perfectly safe, John, you have my word.\"\n\n*Don't worry, I'll be in contact with her the whole time,* Alyssa advised him reassuringly.",
        "John nodded cautiously, and then turned to look at the other girls. \"I'll wait here and catch up with Ceraden while I wait for Dana to get back. You might as well head back to the Invictus, unless there's anything you want to look at specifically this afternoon?\"\n\nAlyssa smiled in response, and replied, \"We all have things we need to do back on the ship. Just come and meet us later, when you're done.\"\n\nWith that, Dana departed with Rellathis, while the rest of the girls headed back to the ship, leaving John and Ceraden to stroll back to the lounge to relax and chat.\n\n***\n\nRellathis was courteous and polite with Dana, but not overly chatty as he led her out of the Maliri Trading Commission, and then through a cleverly concealed door in the arcing wall of the Merchant District. When she followed him through the door, she found herself standing at the top of a stairwell, that led down to the maintenance tunnels built under the Merchant District. \n\nDana glanced down at her heels and figure hugging crop-top and skirt, and said to Rellathis wryly, \"Unfortunately I'm not really dressed for crawling around maintenance ducts.\"\n\nHis laughter was genuine as they descended the steps, and he looked back at her and shook his head, \"Fortunately that won't be necessary. You'll see why in a moment.\"\n\nDana smiled at him and followed him down the steps until they reached the bottom. There was a hover vehicle of some kind parked in the broad and spotlessly clean maintenance tunnel, finished in gold with a crystalline bubble canopy. Rellathis walked over to it and the canopy swung open, allowing Dana to climb in elegantly, before sitting down in the comfortable seat. Soon Rellathis had them racing silently away down the tunnels as soon as the canopy had swung down above them, sealing them securely within the craft.\n\n\"Your anti-gravity technology is marvellous,\" Dana complimented him. \"We use anti-grav cyclics, but they take a few moments to warm up, and make an audible whir.\"\n\nThe Maliri engineer started to respond enthusiastically, but then caught himself in time, and just said, \"Thanks. Yes, it's very useful technology.\"\n\nThey arrived at their destination a few minutes later, and when the vehicle drifted to a halt, the canopy swung wide open. Rellathis clambered out quickly, and then walked around briskly to offer Dana a hand as she climbed out of the hover vehicle. She thanked him gratefully, strolling along beside him as he guided her into some kind of control station, and then down a corridor before a sturdy door opened smoothly in front of them. \n\n\"Here we have the air filtration system for the Merchant District,\" Rellathis said brusquely, as he pointed up at the long cylindrical piece of equipment that dominated the room.\n\nDana smiled when she realised this was likely going to be the extent of her tour, and she looked around the room curiously. \"Hmm, that's odd,\" she said out loud a moment later.\n\nRellathis sounded startled when he asked, \"What's odd, is there a problem?\"\n\nDana just waved a hand dismissively, and said, \"Oh, I just thought with the way this system is configured, you'd end up having a complete shutdown in the case of a broken power regulator, but I'm sure I've missed something. Not to worry, let's head back.\" \n\n\"Wait! How did you know that?!\" he said in shock. \"That happened just last month, and we couldn't figure out why. The backup power should have kicked in, but didn't.\"\n\nDana pointed at a couple of protruding components that were encased in delicate crystalline casings. \"If I'm not mistaken, that looks like a inverse coupling that must feed the cooling mechanism for the filtration system,\" she said casually, \"and isn't that the backup power regulator right next to it?\"\n\nRellathis looked up at the components and nodded. \"Yes, that's right, but I don't see what...\" he suddenly gasped as he realised what she was getting at. \"So the sudden surge of power through the backup power regulator when it gets activated creates a feedback loop with the inverse coupling!\"\n\n\"And shorts it out,\" Dana concluded with a playful wink.\n\nHe shook his head, as he stared up at the components. \"We wasted hours trying to find the cause of that problem!\" he said in amazement.\n\nDana smiled at him benignly. \"Well, I'm glad I could help out. Anyway, we should probably head back... unless there's anything else you're having a problem with?\" she asked him innocently.\n\nRellathis turned to look at the air filtration system, and paused for a moment before he said speculatively, \"We have been seeing inexplicable power fluctuations every evening, but I haven't been able to figure out what might be causing it.\"\n\n\"I'd be happy to take a look,\" Dana offered with a smile. \"Do you have the schematics on hand? I'm sure we'll get to the bottom of it in no time!\"\n\nRellathis looked at her, shaking his head as he said regretfully, \"I'm not supposed to show you those.\"\n\nDana smiled at him disarmingly. \"It's not like I'll be taking a copy. Besides, as you can see from this dress, I haven't got any room to stash a recording device,\" she said with a laugh, as she did a little twirl for him.\n\nRellathis chuckled and only hesitated for a moment more, before turning to a computer panel built into the wall. He pressed a couple of buttons, and then a large holographic display appeared, nearly two metres square, displaying the design schematics for the air filtration system.\n\nThe redhead's eyes sparkled with excitement as she turned to face the hologram. \"Now, let's see if I can help,\" she said eagerly, as she stared at the detailed Maliri blueprint in fascination.\n\n***\n\nThe Invictus arced in a long gentle curve around the devastated freighter outside Geniya Space Station. Jade was currently at the controls, with Alyssa standing attentively at her side, offering advice and instruction. The Maliri Traffic Controller had graciously given them permission to fly back and forth in the zone around the station, as long as they had promised not to cause any disruption to incoming or outgoing vessels. Alyssa had beamed her most sparkling smile at the man in gratitude, and he had chuckled in amusement before closing the comm channel.\n\nJade had logged dozens of flying hours in the Raptor, and the Invictus was, in comparison, much simpler to fly. The ship just had considerably more inertia, which took the Nymph a little getting used to.\n\n\"It feels like I'm flying through treacle,\" she said with a cute frown, as she brought the assault cruiser around for another pass.\n\nAlyssa's musical laughter echoed around the Bridge, causing Calara and Rachel to glance up at her and smile, before returning to their work at their own stations. \n\n\"I'm not surprised, that gunship is exceptionally manoeuvrable,\" the blonde said, as she patted the Nymph's shoulder affectionately. \" You're picking it up fast though,\" she added encouragingly.\n\nJade smiled up at her, before glancing over at Calara, where she was working on her designs for upgrading the Tactical Station. The Nymph paused for a moment, looking thoughtful, before she asked tentatively, \"When Dana has finished helping Calara, perhaps she could take a look at the Invictus' flight controls and make them more... tactile and responsive?\"\n\nAlyssa looked down at her thoughtfully, and then smiled approvingly. \"That's a great idea,\" she agreed, impressed with Jade's initiative. \"After Dana's upgrades, we've got loads more retro-thrusters than the Invictus was originally designed for. We might as well make better use of them!\"\n\nJade beamed up at her happily, and then returned her focus to rolling the Invictus around for another circuit around the ruined hulk of the freighter. \n\n***\n\nRellathis shook his head in astonishment as Dana tapped away at the computer panel. With an elaborate flourish, she hit the final key, and then stepped back, surveying her work with pride.\n\n\"There. You had a maintenance subroutine scheduled to run at eight, and the filtration system was also set to purge the filters on the hour. That was causing the power fluctuations, compounded by the inefficiencies in the energy stabilisers. Now that I've recalibrated those for you, and rescheduled the subroutine, we're all done,\" she explained happily.\n\nRellathis peered at the holograph and nodded eagerly as he examined her work. \"This is incredible, Dana, thank you so much! The Engineering Consortium will promote me for sure!\" he exclaimed with delight.\n\n\"It was fun, I love being able to fix things,\" she replied enthusiastically. She then glanced at him with a sly smile, as he immersed himself in scrutinising her modifications. \"Anything else broken that I could help you with?\"\n\nThe Maliri Engineer stood up straight, and cupped his chin in his hand, thinking for a moment. \"Well, we've been having problems with some of the targeting systems. The defence grid in Section Fourteen has been playing up, and is having trouble tracking more than ten targets at a time. I've been trying to figure that one out for weeks, but I've been getting nowhere,\" he admitted, sounding extremely frustrated.\n\n\"Sure, I can fix that for you, if that would help,\" she replied confidently, with an easy-going shrug.\n\nRellathis nodded excitedly, and turned to the door. \"Come on, this way!\" he said eagerly. \"The fire control systems aren't far.\"\n\nDana sashayed out after him, with a pleasant smile on her face, and he beckoned her onward impatiently when she strolled into the corridor.\n\n*Oh yeah, now this is what I'm talking about...* she thought to herself, desperately resisting the urge to leap up and down with excitement.\n\n*You're such a bad girl,* Alyssa thought to her in amusement.\n\n*What? I'm just being helpful,* Dana protested with a telepathic giggle, while happily recalling the plans for the air filtration systems, which she had memorised perfectly.\n\n***\n\nJohn spent a few hours chatting away with Ceraden, enjoying the chance to catch up with the amiable Maliri trader. They sat in some comfortable chairs set up facing each other in the corner of a pleasant little courtyard, with anti-gravity fountains arcing water across from one side of the room to the other. The clear crystal ceiling let in lots of light from the bright yellow sun, reflecting off the gold spires of the starport, and the room was a riot of colour, from the beautiful rainbows that formed in the water droplets.\n\nAt one point, while John was recounting some of his adventures against the Drakkar, Ceraden looked up, and then stared across the room. John continued for a few moments, before he noticed that his friend was distracted, and he twisted to follow Ceraden's stare. Standing behind him, leaning against the doorframe, was a golden armoured Maliri who seemed to have been staring at them for some time.\n\n\"Yes Irillith, what do you want?\" Ceraden asked bluntly.\n\nShe stood up straight immediately, and snapped, \"Tread carefully Ceraden! There's only so much of your impudence I'll tolerate.\"\n\nShe turned to leave, but glanced back at John once, before she strode away determinedly. John looked back at Ceraden with a raised eyebrow, and the Maliri merchant shook his head and shrugged. \n\n\"Sorry, I've no idea what that was about,\" Ceraden said apologetically. \"Please continue with your story. I'm eager to find out how you vanquished the Drakkar!\"\n\nJohn grinned and continued, carefully editing the story so as not to mention Jade turning into a tiger, or the encounter with the Progenitor. Ceraden was fascinated by the tale, and leaned forward eagerly, as he waited to hear of their final victory. When John told him of the fifty foot Etherium statue of him and the girls on Ashana, he laughed and applauded.\n\n\"If I was not aware of your recent exploits against the Kintark, I'd dismiss your story as a fanciful, albeit charming, tall tale. It appears I have to take your story at face value however, and I find myself having to re-evaluate you and your astounding crew of bewitching young temptresses,\" he said with a chuckle.\n\n\"Well I'm glad you were entertained,\" John said, smiling at his friend.\n\n\"Ah, it looks like your enchanting engineer has returned,\" Ceraden said, as he rose to his feet. \"Welcome back, Dana. I hope your tour proved to be of interest.\"\n\nThe redhead glided into the room, followed by Rellathis who was walking with an added spring in his step.\n\n\"It was amazing, Ceraden, thank you so much for arranging it. Rellathis was a great guide!\" she said happily, and with a grateful smile towards the Maliri Engineer.\n\n\"It should be I thanking you, Dana!\" Rellathis said, sounding positively overjoyed. \"Your advice and assistance has saved me weeks of work!\"\n\nShe smiled at him graciously, and the Maliri Engineer gave her a sweeping bow, before strolling back the way he came, whistling to himself tunefully.\n\nCeraden seemed to be watching Rellathis disappear down the corridor, before he turned and inclined his head towards Dana. \"I'm delighted to hear you enjoyed yourself, and you certainly seem to have made a good impression on Rellathis,\" he said, his voice sounding curious.\n\nJohn stood and then turned to the Maliri merchant. \"Thanks for your hospitality Ceraden. I think I'll head back to the ship before I wear out my welcome,\" he said politely.\n\n\"Not at all John, I've enjoyed your visit immensely,\" Ceraden replied, as he walked over towards the corridor that led out of his offices. \"I'll send word when Meruan has returned, but feel free to drop by for any reason while you're here at Geniya.\"\n\nJohn grinned at the Maliri and then shook his hand. \"It's been great to see you again Ceraden, I've really enjoyed catching up with you,\" he said sincerely.\n\n\"Likewise my friend,\" Ceraden said, sounding genuinely pleased, and he led them through the airy corridors until they reached the reception area to his offices, where he bade them farewell.\n\nJohn and Dana walked back across the huge foyer of the Maliri Trading Commission, and Dana practically skipped at his side, which was impressive in four-inch heels.\n\n\"You look very happy with yourself,\" John said, smiling at her ecstatic good mood.\n\nShe turned to smile at him coyly, and then said, \"I've been a VERY good girl, I think you're going to be very happy with me.\"\n\nJohn arched an eyebrow at that, but Dana refused to be drawn out any further, so he held her hand as they strolled along, just enjoying the company of the lovely young woman. They walked back through the Merchant District, weaving through the crowds of exotic aliens, and listening to the bartering going on as the merchants hawked their cargos. It didn't take long before they were back at the Invictus, which was waiting for them in Docking Bay Twenty Four where they had left it, Jade's flying lessons now over for the day.\n\nWalking up to the airlock, John placed his hand on the DNA reader, and the sultry synthetic voice gasped, \"Oh, John. It's so good to have you enter me again.\"\n\nHe laughed heartily as he looked at Dana, and she doubled over with laughter at the expression on his face. \"Sorry, I couldn't resist throwing that one into her list of greetings,\" she said with a smirk, delighted to have been there for his reaction.\n\nThey walked in through the airlock, and John shut the door behind him, before pulling Dana into his arms. \"I assume you didn't want to talk earlier, in case we were being overheard. I'm dying to know what you've been up to!\" he said eagerly.\n\nShe grinned at him, her sky blue eyes flashing with excitement, and this close to her, he could see the golden corona flaring around her iris. \"Trust me, you're going to love it. But can you give me an hour? I can show you then, and it will make it even better!\" she pleaded with him, as she stared into his eyes.\n\nJohn laughed and nodded, so she leant in and kissed him lightly on the lips before she pulled away, and walked over to the double doors that led into the Cargo Bay. She opened them and then walked inside.\n\n\"I'll head up to the Bridge,\" he called after her, as she strode away purposefully, lithe and graceful in her stiletto heels.\n\nDana turned before she reached the loading lift that went up to her workshop, looking over her shoulder at him, and grinning as she caught him watching her. \"Try and resist the urge to fuck any of the other girls,\" she requested with a coy smile. \"You're going to want to give me a reward when you see what I've been up to.\"\n\nJohn grinned and nodded, waving her goodbye as she ascended on the platform, looking ravishing as she posed for him seductively. He then strode over to the grav-tube, and stepped inside the blue glow, so that he could float up to the Command Deck. Alyssa spun her Executive Officer's chair around, and beamed a beautiful smile at him when he walked out onto the Bridge. \n\n\"I missed you!\" she said happily, as she rose from her chair and then glided down the illuminated steps on the Command Podium to greet him.\n\nHe held his arms open for her and she moved into his embrace with a contented sigh. John reached up to cup the back of her head in his hand, pulling her in for a tender kiss, and she returned it passionately.\n\n\"I missed you too,\" he told her with a grin, when they finally parted. He looked around the Bridge, but it was only the two of them there, so he asked, \"Where is everybody?\"\n\n\"Let's go and relax in your ready room, and I'll fill you in,\" Alyssa suggested, and when he nodded, they walked over to the room to the left of the bridge and strolled inside.\n\nThere were several comfortable sofas on this side of the room, where the commander could have informal discussions with his Bridge Crew. They seemed quite appropriate, so he sat down, with Alyssa sitting sideways across his lap. She was still wearing her suit, and looked elegant and refined as she sat demurely in his arms. He stroked her toned, athletic legs in her cream pencil skirt, and let his hand drift up to her slim stomach, slipping inside the material of her blouse so that he could brush his fingers over her deliciously smooth skin.\n\nThe blonde gave him a smouldering look, then wet her lips with her tongue, making them glisten in the light. She smiled coyly when she felt him get hard underneath her, and wriggled slightly in his lap as she looked at him from under her long lashes.\n\n\"You only have to say the word, and I'll be on my knees, servicing your big hard cock,\" she purred at him in a deep throaty voice. She then grinned at him impishly, and said teasingly, \"But you're waiting for Dana!\"\n\nJohn chuckled, and then grabbed her, before tickling her remorselessly. Her excited squeals of laughter echoed around the room, before she finally begged for mercy, and then sat panting in his lap grinning at him happily.\n\n\"Okay then, mischief, what have you girls been up to?\" John asked her playfully.\n\nShe took a big breath, and then blew it out, before snuggling against his chest with a broad smile on her face. \"Well, I took Jade out to practice piloting the Invictus. She's a phenomenal pilot, and will be better than me in no time,\" she said, proud of her student.\n\nJohn smiled down at Alyssa and kissed her blonde head tenderly. \"Your flying is pretty amazing, she can't be that much better, surely?\" he asked curiously.\n\n\"She has excellent spatial awareness, and her reflexes are even faster than mine,\" Alyssa explained, before leaning up and kissing him under the chin. \"Despite what a wonderful makeover you gave my body,\" she added gratefully.\n\n\"Why would the Progenitors make a species so perfectly adapted for combat, and then not let them use weapons?\" John mused, thinking back to the revealing conversation with Rachel. \n\nAlyssa sat back and frowned. \"Yeah that's been puzzling me too. She had no problem firing the weapons on the Raptor, and she's proved how deadly she is in her Tiger form, so she's not exactly a pacifist. Why prevent Nymphs from using guns, when she can do all the rest?\" she asked in confusion.",
        "John shrugged helplessly, equally as confused as the blonde. \"There's probably a limit to how much Rachel can tell us unfortunately, like what Jade can and can't do, but not the reasoning behind any restrictions. Anyway, where's our little Nymph at the moment?\" he asked.\n\n\"She said she wanted to start her own research into her shapeshifting, and she's in her own room at the moment,\" Alyssa said, briefly closing her eyes to locate her friend.\n\n\"How about the rest of the girls?\" John asked with interest. \"Has Rachel been alright?\"\n\nThe blonde nodded with a satisfied smile on her face. \"I think getting all her past out in the open has lifted a bit of a burden off her actually. I've been sensing relief from her, mixed in with her other emotions like contentment and happiness. Jade giving her a full tummy helped calm her down, so she's fine for now,\" she said reassuringly.\n\nJohn nodded and looked pleased. \"We'll have to tread carefully with her, and try not to expose her to anything traumatic like that again if we can help it. What's she up to right now?\"\n\n\"She's down in the Medical Lab at the moment. She told me that she had learned everything about the Comms Station, so she was going to continue with her DNA research,\" Alyssa informed him.\n\nJohn shook his head in amazement, \"It's incredible what she's discovered already,\" he marvelled. \"God only knows what she'll find out when she starts looking into Psychic powers.\"\n\nAlyssa looked up at him and said softly, \"I love that we both changed each other.\"\n\nHe nodded as he looked down at her, staring into her bright cerulean eyes. \"I know exactly what you mean,\" he agreed, as he stroked her hair gently.\n\nThey just held each other for a while, hugging each other happily, and thinking about the massive changes to both their lives over the last few months. With a happy sigh, Alyssa eventually sat up again and continued with her update on the crew.\n\n\"Calara's been having fun redesigning the Tactical Station. She told me she's finished, so we'll probably see the results in a few days once Dana's had a chance to upgrade everything,\" Alyssa said, with an eager grin.\n\n\"Yeah, I can't wait to see what they've cooked up as well,\" John said with a laugh. He suddenly had an intrigued expression on his face as he asked her, \"Do you know what Dana's been up to?\"\n\nAlyssa nodded at him, grinning at his eager anticipation. \"Of course! I'm listening to all of you, all the time,\" she reminded him. \"But I wouldn't dream of spoiling her surprise.\"\n\nJohn looked chagrined and he nodded as he said, \"Yeah, I wouldn't want you to either. She just took me by surprise with the way she was with Ceraden. I've never seen her that self-assured before, she was amazing!\"\n\nThe blonde leaned in and whispered to him conspiratorially, \"Rachel and I have been giving her a few tips. She wanted to be more sophisticated for you.\"\n\nJohn smiled warmly at her, and said, \"I love her just the way she is, but I'm touched she's gone to all that effort.\"\n\nAlyssa grinned at him and nodded as she said, \"Don't worry, I don't think there's anything that could dampen down her cheerful exuberance.\"\n\nShe paused for a moment, looking away into the distance, before she smoothly dismounted from his lap, and stood gracefully. \"And, that's my cue to leave,\" she told him, with a wry smile.\n\n\"Leave? What do you mean?\" John asked in surprise.\n\nAlyssa held out her hand for him, and he took it and stood. \"Dana's on her way. Go and wait at your desk, it'll be worth it,\" she urged him with an amused twitch of her lips.\n\nJohn gave her a kiss goodbye, and then strolled over to his desk on the other side of his Ready Room, as Alyssa walked out onto the Bridge. He waited for a minute or so, and was thinking about firing up the comms interface, when suddenly the door swished open. He looked up, and then his jaw dropped as Dana... prowled... into the room.\n\nHer whole demeanour had changed radically from the cheeky young woman that normally bounced around the ship. She stood with perfect posture, her shoulders back, head up straight, and she looked poised and confident as she made her entrance. She looked relaxed, but somehow predatory, as her hips swayed as she approached him, sashaying gracefully across the room. She placed one high-heeled foot directly in front of another as she made each step, which gave her whole gliding strut a sensual rhythm to it, that drew his eyes like magnets to her shapely legs.\n\nShe glided around to the side of the desk, and as she posed for him confidently, she asked him in a sultry, seductive voice, that had a ring of challenge to it, \"Are you ready to see why I deserve a big reward?\"\n\nJohn nodded mutely, rendered speechless by the astounding young woman. She smiled at him alluringly, and then placed a device on the right side of his desk, that he'd not noticed in her hand as he'd been so distracted by her lithe legs. With a soft click, a holographic display sprung up above them, showing detailed schematics that were way too complex for him too even remotely comprehend.\n\n\"This,\" she began dramatically, \"is the blueprint for the Maliri oxygen filtration system. I've got the mass fabricators working right now, so soon we'll be filling our lungs with crisp fresh air.\" she said, giving him a demonstration, which did wonderful things to her luscious, firm breasts.\n\nNot giving him a chance to reply, she then leaned over the desk in an exaggerated stretch, reaching out to press a button on the device again. She paused and looked over her shoulder at him questioningly. \"Would you like to see more?\" she asked teasingly in that same throaty purr, that was causing his trousers to tighten at an alarming rate.\n\nWhen he nodded, dumbfounded, she clicked the button and then slowly pulled back. \n\n\"Calara will be a very happy girl when she sees this,\" she crooned, as another staggeringly complex set of schematics hovered in the air with a pale blue glow. \"Rellathis had been having terrible trouble with their targeting systems, so I was a good girl, and offered to help him fix it. Wasn't that nice of me?\" she asked him, with her head tilted to the side quizzically.\n\nJohn looked on in awe, nodding in amazement.\n\n\"I told him I didn't have any recording devices on me, but I forgot to mention you've given me a photographic memory. Silly me...\" she said, grinning wickedly.\n\nJohn glanced up at her in shock, and she nodded, then blew him a grateful kiss. She then walked in front of him, and leaned back a little as she stared at his face, her left hand reaching out behind her to find the device.\n\n\"I helped him fix it so fast, he begged me to help him take a look at...\" she said as her fingers tapped the button with a soft click, and a fresh set of blueprints appeared, faithfully transcribed from her phenomenal memory.\n\n\"Their shield modulators...\" \n\nClick.\n\n\"Their anti-grav generators...\"\n\nClick.\n\n\"And their sensor arrays...\"\n\nJohn looked absolutely astounded, as he said in a shocked voice, \"You've managed to memorise and acquire all this tech, in just a couple of hours?\"\n\nDana nodded, smiling at him craftily, but she suddenly looked sad, and said sorrowfully, \"Rellathis has been having trouble with micro-fractures appearing in the clear crystalline lattice they use for their windows. The poor man has been at his wits-end trying to figure out the problem.\"\n\nJohn gazed up at her and mumbled, \"That's tragic.\"\n\n\"I know, how awful,\" she agreed sympathetically. \"Unfortunately we ran out of time, but I said I'd meet up with him tomorrow, and take a look at the crystallite growing process to see if I can help him eliminate any imperfections. It's good to be helpful, isn't it?\" she asked him with huge, innocent blue eyes.\n\nJohn blinked twice, and then let out a rumbling laugh, as he shook his head in wonder. \"Holy shit, Dana! This is incredible,\" he exclaimed, in a mix of delight and awe.\n\nShe smiled at him alluringly, and asked teasingly, \"Was I good girl? Do I deserve a big reward?\"\n\nLaughing, he nodded immediately. \"Of course! Anything you want,\" he said generously.\n\nShe smiled victoriously, and then turned away from him and bent over the desk. She looked over her shoulder, watching his face as she slowly inched her figure hugging grey skirt up and over her taut bottom. His jubilant grin abruptly turned to one of lust, as the material slid up and over her cheeks, revealing her tight little ass. It glistened in the light with the lube she had applied to it.\n\n\"I want a very big reward, and I want you to put it in there,\" she told him firmly, staring into his eyes.\n\nAs amazed as John was by the transformation in this incredible young woman, he instantly recognised the look of hunger in her eyes as she stared at him, unblinking. He unbuckled his belt purposefully, making her eyes gleam with anticipation, before stripping off his clothes. She was stunningly beautiful, incredibly talented and capable, and fully lubed up just for him, and he knew exactly what she needed. \n\nHolding his throbbing cock in his left hand, he lined it up with her tightest hole, and gently nudged the head up against her anus, causing her to hiss with excitement. He then reached out with his right hand, and methodically gathered her long auburn hair in his fist, before gently pulling her head backwards, so that her back was arched as she leant against the desk, bent over and ready for him.\n\nHe leaned forward so his lips were at her ear, and he whispered, \"Is this what you want?\"\n\nShe shot him a feverish look out of the corner of her eye, and nodded determinedly. \"It's been weeks since you stretched me out. You need to remind me how to take you like this,\" she urged him, her breathing growing heavier.\n\n\"Don't worry,\" he told her as he began to slowly push forward with his hips. \"You're a good girl, you'll stretch for me.\"\n\nDana let out a low moan as he kept up the steady pressure, and suddenly her body yielded to him, and spread wide to take the broad head of his cock. \n\n\"Fuck...\" Dana groaned, as her pliant flesh stretched to accommodate him.\n\nJohn moved his hand to her waist to hold her steady, and he could feel her ribcage moving rapidly as she panted for breath. \"Do you want some more?\" he asked her playfully.\n\nThe redhead nodded as best she could with her hair pulled back in his fist, so he began to push even deeper inside her, her well-lubed passage slick and tight as it hugged him like a second skin. He gave her a few more inches and then stopped, looking down at her trembling cheeks as she let out a lusty groan. \n\n\"There's still some more to go,\" he whispered teasingly. \"You're so tight though, do you think you can take the rest of it?\"\n\n\"Stop fucking around and ram it all in!\" Dana cursed, glaring at him from the corner of her eye where he held her firmly in place. \n\nJohn grinned and took a firm hold of her waist, and did exactly as she asked. She let out a deep grunt when he shoved every last inch inside her, and his balls swung into her soaking wet pussy.\n\n\"Now, my fiery redhead, you're going to work that tight little ass for me,\" he told her authoritatively, as he pulled her tightly to him and then sat back in his chair, with her firm cheeks sitting squarely in his lap. \n\nShe tried to move a little, but he held her tightly in place. \"Not yet, sexy girl. Put your legs up, so your heels are on the edge of the desk,\" he ordered her, as he kept her pinned to his chest, her head pulled right back.\n\n\"Like this?\" she asked him eagerly, as she lifted up her legs as he ordered.\n\nJohn nodded approvingly. \"That's perfect, well done,\" he praised her. \"Now I'm going to hold your head back, to keep you pinned in place, and you're going to lift your hips so you can ride me with your ass. Do you think you can do that for me?\"\n\n\"Uh huh,\" she said, moaning with excitement, as she carefully raised herself up a few inches, before sinking down again, taking his whole length.\n\n\"That's it. Perfect,\" he told her proudly. \"Now put that toned athletic body of yours to work, and see if you can milk my balls for me.\"\n\nDana glanced at him out of the corner of her eye, and he could see the excitement and arousal in that look, as she began to rise and fall on his pulsating cock. She felt wonderfully hot and snug wrapped around him like this, and he revelled at being stroked by her tantalising rhythm.\n\n\"Do you like that?\" she murmured to him. \"Does my ass feel nice and tight?\"\n\nJohn nodded as he reached around her with his left hand, and began to gently stroke her clit in time with her measured pace. \"You're such a quick learner,\" he said encouragingly. \"Keep this rhythm going and you'll be packed full of cum in no time.\"\n\nDana groaned and leaned back against him, while her hips kept up their steady insistent motion. John watched her legs over her shoulder, and the strong muscles in her thighs and calves rippled under her smooth skin as she rode him as he had asked. With his enhanced hearing, he could hear her pulsing heartbeat and it measured the beats as she stroked up and down his length.\n\nMovement at the other side of the room drew both their attention, but Dana never broke the sensual undulation of her hips, as Jade glided over to join them. She smiled at them both as she rounded the desk. \n\n\"Alyssa said you were just preparing dinner for me, but I'm feeling really hungry for some pussy. Would you mind if I start eating right now?\" she asked politely as she lightly brushed her fingers along Dana's spread thighs, leaving a trail of goosebumps. \n\nThe redhead stared at her, and shook her head imperceptibly, held tight as she was by John's clenched fist. Jade grinned at them, and sank to her haunches, before ducking under Dana's raised leg, being very careful not to disturb her rhythm. She stared up at them with her cat-like eyes, and smiled as she knelt, and then began to lap away at Dana's pussy with delicate movements of her tongue. John moved his stroking fingers to give her room to work, and Jade smiled at him gratefully as she moved higher to focus on the other girl's clit.\n\nDana sucked in her breath as Jade began to lick her at the same tempo as her thrusting hips, and John could feel Dana's arousal ratchet up several notches. Her endurance was impressive, as she kept the same unrelenting pace, never faltering for a moment. His cock began to flex inside her as his excitement grew, and she twisted her head so she could stare at him excitedly.\n\n\"You're close, aren't you?\" she gasped eagerly. \n\nJohn nodded, while gritting his teeth, and said, \"Keep going, I'm nearly there. You're going to get a huge reward in your belly very soon.\"\n\nShe stared at him intently, not taking her eyes off from him for a second as she maintained her pace. When his whole body tensed, her face lit up with triumph, and she bit her lip as she stroked him with her ass. John arched his back and his four balls raised up, the perfect, steady rhythm having worked him to a frenzy. He thrust upwards and roared out as he came, throwing Dana off her tempo for only a brief moment until she raised herself higher and continued milking him. \n\n\"That's right, give it to me,\" she crooned with delight, as he jerked raggedly under her tightly clenching ass.\n\nHis cock throbbed and pulsed as long gouts of cum shot up his shaft and into her body, and she kept that same measured motion of her hips going throughout, intensifying his climax. He eventually groaned, and collapsed back in the chair when he was done, gingerly unclenching his right fist, and releasing her from his grasp.\n\nDana sank down his length, settling in his lap, and then turned her head so she could kiss him tenderly on his cheek. \"I loved my reward, thank you,\" she said softly, as she looked down at her heavily swollen belly.\n\nJohn laughed as he panted for breath, and then looked back at her. \"That was just incredible, you were so amazingly sexy!\" he marvelled with a dopey grin on his face.\n\nThe redhead giggled happily, and she kissed him eagerly, back to her exuberant self once more. \"I'm so glad you liked it! It was really hard to stay seductive and serious the whole time,\" she confided gleefully.\n\nHe laughed along with her, and wrapped her up tightly in his arms. \"You're just so awesome,\" he told Dana enthusiastically, sounding a lot like her.\n\nShe grinned with delight, and turned to kiss him before glancing down at Jade, who was watching them both affectionately. \"Let's give Jade her dinner,\" she said happily. \"As she sucks the cum out of me, just stroke my tummy with one hand, and rub my clit with the other. I'm going to go off like an express train!\" she added with an excited sparkle in her sky blue eyes.\n\nJohn nodded, and said, \"Whatever you want, sexy. You more than earned it after that one.\"\n\nDana settled back against him with a happy sigh, and then John and Jade worked together on her attentively, completely focused on blowing her mind.\n\n***\n\nThey had a lengthy shower afterwards in the private bathroom adjoining the room. Jade stood between them and smiled contentedly, as Dana and John gently caressed her swollen belly, while ethereal viridian light spiralled out around the shower cubicle from the circles emitting from her stomach. Her skin felt smooth and soft under their touch, and slightly cool due to her natural body temperature, despite the warmth of the water in the shower.\n\n\"This feels like when I first joined you,\" Jade said, as she looked up at John happily. \"One huge tummy full after another, it's wonderful!\" \n\nHe smiled at her indulgently, and they kissed, before returning to soaping each other up and getting nice and clean. They dried off afterwards, and walked out of the bathroom, just as the cleaning bots disappeared out of the room carrying their clothes for the laundry.\n\n\"That could have been awkward,\" Dana said with a giggle, and they strolled out onto the Bridge completely naked, following after the fastidious cleaning bots.\n\nJohn laughed and nodded, \"That is one of the upsides to sleeping with all the crew.\"\n\nJade giggled cutely as she looked up at him. \"We're lucky to have you here to shoulder these burdens,\" she said playfully.\n\nThey all laughed as they stepped into the grav-tube and descended to the floor below. Dana peeled off at her room to go and get some more clothes, but Jade followed after John slipping her hand into his as they walked. When they entered his room, she glided over to the bed and slipped under the covers, and snuggled up in them comfortably.\n\nJohn grinned at her, as he headed over to his walk-in wardrobe. \"Taking a nap to sleep off dinner?\" he asked her fondly.\n\nJade nodded eagerly. \"Rachel says I'm part cat. That's what we do,\" she informed him impishly.\n\nShe heard his laughter coming from the other room as he got changed, and she smiled to herself happily. With the covers pulled up high around her, and only her head above them, she was no longer shining light around the room. With a satisfied sigh, she lifted the covers and looked down at her swollen belly, and ran a hand over it with delight. She shivered with excitement when she remembered what John had promised her, and as she curled up in the covers once more, she wondered if her tummy would glow like this when she carried his baby in her womb. The Nymph's eyelids grew heavy as she dreamed of holding a tiny green baby in her arms, and she drifted off to sleep moments later with a lovely smile on her beautiful face.\n\nWhen John walked out of the wardrobe a few minutes later, he was wearing his sparring gear, in preparation for another gruelling training session with Yamamoto. When Jade didn't make any comment, he padded quietly over to the bed, and found her fast asleep with a contented smile on her face. He gently brushed her dark green hair away from her cheek, and then leaned in to kiss her. She let out a happy little sigh, and he straightened, smiling at her affectionately before walking silently out of the room.",
        "Dana was just pulling a fresh top over her head, and she half-jogged out of the door to catch up with John as he strolled past. \n\n\"Everything been working out with the simulator and the pulse generator?\" she asked him curiously. \"Any performance degradation since we moved it from Oceanus?\"\n\nJohn smiled at her. \"After it was installed by you? Of course not, it's working perfectly,\" he replied, his voice full of admiration. \n\nShe grinned at him gaily, happy to receive such praise. \n\nHe stopped for a moment, and pulled her into his arms. \"Brilliant, fun, loving, loyal, dedicated, and of course, stunningly beautiful and incredible in bed. You really are the complete package, aren't you?\" he asked her rhetorically, his voice serious.\n\n\"You made me th-\" she started to say with a smirk, but he interrupted her. \n\n\"No, the really important parts are all you,\" he told her firmly, and leaned down and kissed her tenderly.\n\nDana looked up at him, her eyes wide, and then she hugged him tightly. \"I'll have to initiate sex more often if it makes you say stuff like that,\" she joked when she finally let him go, but he could see she was genuinely touched by what he'd said.\n\n\"You won't catch me complaining,\" he told her with a grin, before he looked at her curiously. \"Off to have fun with your new toys?\"\n\nThe redhead nodded eagerly, her body full of energy and raring to go. \"You'll know when I've finished the first one,\" she said with a smile, and then turned and bounded away, waving to him happily as she went.\n\nJohn followed after her to the grav-tube, but by the time he leaned over to look down, she had already disappeared, rushing to her workshop. He shook his head with an amused smile on his face, and then stepped into the red-glowing side of the tube and descended to Deck Three, to continue his sparring with the taciturn Swordmaster.\n\n***\n\nThey all met up for dinner a few hours later, and John was pleased to have all the girls back together again, after they had scattered to do their own thing for most of the day. He had cooked roast lamb for their meal, and as they took their first bites of the succulent, perfectly cooked joint of meat, compliments to the chef came thick and fast. The first topic of conversation was the clean crisp air that now circulated around the ship, after Dana had installed the new air filtration system that she had 'borrowed' from the Maliri, and activated it a few minutes before dinner. \n\n\"The air's so fresh,\" Calara marvelled, shaking her head in disbelief. \"It feels even better than back home!\"\n\nJade nodded as she took a vast lungful of air into her chest, her chest expanding even larger than normal to accommodate it. She tilted her head for a moment, as she let it all out, and then looked over at Dana in surprise as she said, \"The air feels even cleaner than on the Maliri space station!\"\n\nDana nodded at her and a sparkling smile lit up her delighted face. \"That's awesome that you noticed the difference! I actually made a few enhancements. Their design was brilliant, and a huge improvement on the standard Terran system, but I tweaked it a bit.\"\n\nJohn raised his glass of wine for a toast, and the other girls picked up their glasses too. \"To Dana, our sexy genius spy,\" he said his voice full of admiration.\n\nThe girls laughed happily, and clinked glasses before grinning appreciatively at Dana. She blushed a little, but grinned back at them joyfully.\n\nHe smiled at her, and said proudly, \"Go ahead and tell them what else you 'acquired' on your little covert mission.\"\n\nDana nodded and looked over at Calara as she started speaking, \"I managed to take a look at their schematics for the targeting systems. They were much more sophisticated than ours, so when I make a start on the Tactical Station upgrade, I'll incorporate those too.\"\n\nThe Latina's dark brown eyes sparkled with excitement, and she leaned closer, grinning back at her as she said, \"That sounds amazing! I can't wait to see what they can do.\"\n\nThe redhead shared an equally enthusiastic grin with her, before she continued, \"I've got blueprints for the Maliri anti-gravity generators, which are an enhanced version of the anti-grav cyclics we had already. I'll upgrade the robots first as a prototype, but we don't use them much on the ship, only really in the lift from my workshop to the Cargo Bay.\n\nThe Maliri Shield modulators are going to be much more useful though. They help regulate and stabilise the ship's shield strength when under attack. They draw quite a bit of power, but we have bucket-loads with the Ashanath power core we have installed, so that won't be a concern.\"\n\nJohn nodded approvingly. \"How much extra shield strength will that give us?\" he asked, before popping a forkful of lamb into his mouth.\n\nDana looked thoughtful for a moment as she mulled it over. \"Sixty three point five eight percent,\" she estimated for him.\n\nAmazed looks and delighted grins were the order of the day, and they all looked very impressed, as they nodded to her appreciatively.\n\n\"That just leaves the best till last, the Maliri sensor tech,\" Dana said surprisingly. \"It's radically more advanced than ours, and I'm actually amazed that no-one has realised it yet. If I upgrade our sensor array to use their technology, we'll triple the range of our long range scans! Even more importantly, passive sensors will return data much faster at far longer ranges, and we'll be able to perform active scans from twice as far away!\"\n\nCalara grinned even wider as she looked across the table at the redhead in amazement. \"That'll give us a massive tactical advantage! We'll be able to detect enemies without them even realising we're there!\" she exclaimed, barely able to believe her luck.\n\n\"How soon can you get all this equipment fitted?\" John asked her eagerly.\n\nDana leaned back in her chair and tapped her finger on her chin as she calculated how long it would take the mass fabricators to create all the parts she needed, the build times, and then how long it would take to install and test them.\n\nShe took a big breath before she launched into her estimates, \"The shield modulator is the most complex piece of equipment, but it's only relatively small, and installing it will be easy as I'll just need to hook it up to our existing shield generators. Ten hours to fabricate the parts and assemble it, then two hours to install.\n\nUpgrading the Tactical Station would have just taken me half a day, as I've already started the fabricators making the newly designed weapons controls. As I'll now need to upgrade our fire control systems, too, that will take at least another... six hours, so call it a full day to complete.\n\nFinally, there's the new sensor array. The ship's sensors are built into the front of the ship and there's a lot of them. It's going to take the mass fabricators at least a day to build them all, but probably three full days for us to remove all the armour plating and install the upgraded components.\"\n\nJohn added up the estimates she had mentioned, and nodding agreeably, he asked, \"So we're looking at basically six full days to get everything up and running?\"\n\nDana nodded as she mulled it over, but Rachel shook her head, disagreeing. \"I think we can do it in three,\" she said firmly.\n\nThe redhead turned to look at her with a puzzled expression on her face. \"I'm not sure how, those are pretty accurate estimates,\" she said dubiously.\n\nRachel smiled as she explained her reasoning. \"Why not let us and the robots do the grunt work of installing the sensor array? While the fabricators are forging all the new parts for the sensors, you can finish programming the robots to be able to remove the armour plating, then all of us can install the sensor array for you. That leaves you free to work on the shield modulator and the Tactical Station upgrade which we can't really assist with,\" she said helpfully.\n\nDana nodded as she thought it over, looking impressed. \"Yeah that could work,\" she agreed. \"I could get the robots finished this evening, and get the mass fabricators working overnight. You'd be able to start installing the new components tomorrow morning.\"\n\nAlyssa then grinned excitedly. \"There's actually one other option. I could go out there and pull all the armour plating off the front of the ship in one go. Once we've swapped out the sensors, I could re-plate the entire ship in triple-forged plating. What do you think? Put on a show for the Maliri?\" she asked half-jokingly.\n\nJohn laughed and shook his head as he said, \"We probably better keep your hidden talents under our hats. Besides, this will be a good easy test for the robots, and a good trial run before we need to use them to repair damaged plating out in deep space.\"\n\nThe blonde smiled good naturedly as she agreed, and everyone looked around at each other, excited to be working as a team to upgrade the Invictus. \n\nCalara then frowned and looked over at Dana with a troubled expression on her face. \"Won't the Maliri notice that we're installing the tech you stole?\" she said hesitantly.\n\nAlyssa shook her head as she glanced mischievously at John, \"We don't steal things, we 'requisition' them, isn't that right, handsome?\"\n\nHe laughed and nodded, but the girls looked confused, so Alyssa explained their long standing joke. \n\nDana smiled, then shook her head and said, \"I plan to make a few tweaks anyway. Our new sensors will be even better, assuming my enhancements are successful, and will look different enough that a snooping Maliri won't realise what I've done.\"\n\nCalara nodded, her doubts assuaged, and they finished off dinner, talking enthusiastically about the work ahead of them. As soon as Dana had finished eating, she walked around the table to give John a kiss and thank him for dinner, before heading off to the Engineering Bay to finish her robots and start up the mass fabricators. Rachel followed her lead, giving John a kiss too, and then walked away with the redhead, the two of them chattering excitedly.\n\nThe others cleared away dinner, and Calara suddenly looked thoughtful, and said, \"If you guys don't mind, I might go and have a chat with Dana. I want to know what the new targeting systems are capable of, before we finalise the changes to the weapon controls.\"\n\nJohn nodded and she gave him a lingering kiss, before thanking him for a lovely meal. \n\n\"That just leaves us three,\" Alyssa said playfully. \"What do you think Jade? Want to help me keep him entertained?\"\n\nThe Nymph smiled at her happily, and then surprisingly shook her head. \"I've still got a full tummy,\" she said, joyfully stroking her slightly rounded belly full of cum from earlier. \"You two have fun together, I'll go and work on my shapeshifting. I napped through the time I had planned to work on it.\" \n\nJade gave them each an affectionate hug, and then strolled out of the room, humming happily to herself.\n\nAlyssa stepped up to John, and placed her hands around his neck. \"It looks like you'll just have to make do with little old me,\" she said looking sympathetic. \n\nHe grinned at her and replied, \"'Making do', is an expression I'll never use with you, beautiful.\"\n\n\"Ahh, aren't you sweet,\" she told him, with a happy smile. \"If I didn't know what a good romp Dana had with you this afternoon, I'd think you were trying to get into my pants.\"\n\nJohn frowned and looked playfully puzzled, \"I thought you'd given me an all-access pass, whenever the urge took me?\"\n\nHer musical laughter filled the room and she nodded in confirmation.\n\n\"Maybe later,\" he grinned, and she unhooked her arms from his neck, as she sensed he wanted to chat.\n\nJohn led her over to the sofas so they could sit down and talk together, and when he sat down, she lay back on the sofa placing her head in his lap again, looking up at him with a warm smile.\n\n\"Yeah, I enjoyed that too,\" he told her as he began to stroke her golden blonde hair.\n\nHe put his feet up on the coffee table, and they just lay there for a while, relaxing together as he brushed his fingers through her soft, lustrous hair.\n\nEventually she looked up at him and asked, \"So, what did you want to talk about?\"\n\nJohn smiled wryly and looked down at her. \"I thought you could read my mind. Don't you know full well what I'm thinking about?\"\n\nThe blonde grinned at him and nodded. \"Sure, but it starts to make you guys unsettled when I just answer your questions before you've even asked them. Besides, I only know what you're actively thinking about at the moment. Sometimes, just letting a conversation play out, takes a person's mind to interesting places,\" she explained gently.\n\n\"Well thank you for being so considerate,\" he said with a smile. \"It's actually amazingly useful when you supply me with information, while I'm in conversation with someone else.\"\n\nShe nodded and looked thoughtful. \"I guess this is new for all of us, so working out the etiquette is going to take a little time.\"\n\n\"Fortunately, time seems to be something we have a lot of,\" John said, raising an eyebrow archly.\n\nAlyssa sat up for a moment, turning around to kneel at his side on the sofa, and look at him excitedly. \"I still can't believe it's true,\" she said, shaking her head in amazement. \"Immortality... the very idea seems crazy.\"\n\n\"I know exactly what you mean,\" he replied. \"As amazing as it all sounds, I can see there's going to be some... complications, in the future.\"\n\nShe nodded as she followed his train of thought. \"Yeah I hadn't thought about it before, but this is going to get tricky for Calara,\" she said sympathetically.\n\nJohn nodded, noting that the girls avoiding thinking about mortality seemed to not just be centred around him. Still, they were young, and hadn't experienced the loss of friends over the years that he had, which had made him painfully aware of just how brutally short life could be. He quickly changed tack, to avoid any lingering on his own possible death, not wanting to risk upsetting her.\n\n\"Calara is the youngest of the Fernandez children, so her outliving them all would have likely happened anyway,\" he conceded.\n\nAlyssa nodded, but then smiled as she said, \"True, but I think we'll have a few tricky questions to answer when she still looks like she's eighteen, thirty years from now.\"\n\n\"There's going to be tricky questions for all of us from the Terran Federation in thirty years' time, if none of us are going to age,\" John said thoughtfully. \"With the way they're using us in these propaganda PR pieces, we're starting to make a name for ourselves. Remember that Excelsior passenger recognising me on the Raptor?\" \n\nThe blonde girl nodded, as she remember that conversation. \"So what do we do? Try and keep a low profile?\"\n\nJohn looked thoughtful for a moment and then glanced at Alyssa as she unfolded her long legs, putting them up on the coffee table the way he had. \n\n\"Come and lie on me instead,\" she offered with an inviting smile.\n\nHe chuckled and then did as she asked, resting his head in her lap, with her thighs forming a lovely pillow. She began to run her hands through his hair, and he closed his eyes, feeling wonderfully relaxed. He stopped to think about living forever with such an incredible group of young women, but try as he might, he found it difficult to try and imagine an eternity. His mind just wasn't equipped to be able to imagine that vast span of time, let alone a few centuries. In the end he just focused on the idea of spending the next several decades with Alyssa, just as she was now, and he smiled in wonder at the thought. He eventually opened his eyes, then looked up at her, and she smiled down at him lovingly, having listened to the whole thing.\n\n\"I think we'll really have to put some thought into our long term plans,\" he said finally. \"If the Lions of the Federation are still flying around in the Invictus in one hundred years time, even the dimmest of Terran scientists are going to start asking questions.\"\n\nAlyssa nodded at him in agreement. \"I don't really fancy living forever as a science experiment,\" she said with a shudder.\n\nJohn looked at her with worry. \"If we got captured and separated...\" he said, faltering at the end.\n\n\"I'd never let you get captured,\" she said fiercely, her eyes flashing with anger at the thought.\n\nHe nodded as he said, \"I feel the same way. I feel sorry for anyone who tried to take you away from me,\" he told her equally as passionately.\n\nShe leaned down and kissed him tenderly, while staring into his eyes, then sat back and smiled. \"So where do we go to avoid attention in the long term? The Ashanath?\" she asked him curiously.\n\nJohn thought it over, but then shook his head as he said, \"It's hard to say how they'd react to that idea. They'd either be delighted, at the thought of having their own resident Progenitor, or horrified at the possible attention it would bring their way.\"\n\nAlyssa nodded as she thought about the pacifist and conflict averse Ashanath. \"Yeah you're right, and I'm fairly sure it would be the latter,\" she said ruefully.\n\n\"Truth be told, they still creep me out. Those whispery voices are just too eerie,\" he admitted bashfully.\n\nShe smiled at him, and said, \"They're actually quite expressive and interesting to chat with via telepathy.\" Then added playfully, \"You should try it sometime.\" \n\nJohn frowned as he looked up at her, and said, \"I wouldn't even know where to begin. How did you start developing your telepathy anyway?\"\n\nAlyssa looked thoughtful as she considered his question, then said carefully, \"It wasn't a conscious choice, it sort of just happened. I started picking up your emotions after a few days, without really realising what was happening. Then I began to pick up snippets of random thoughts from your inner voice. I thought I might be going mad at first... hearing voices, you know what I mean. Then I realised it was your thoughts I was hearing, and I just started to listen in.\"\n\nHe laughed and said, \"Unfortunately that doesn't really give me any pointers to start from.\"\n\nShe grinned at him apologetically, and then said, \"I just gather my will, and then kind of... project my thoughts at people. You have to be careful, because if you put too much effort behind it, it seems like you're shouting.\"\n\nHe nodded and looked up at her, his brow furrowing as he concentrated. She closed her eyes, and focused on what he was thinking, and then said encouragingly, \"That's it, just push out with your mind.\"\n\nJohn tried to do just that, but no matter how hard he concentrated, nothing seemed to happen. \"Anything?\" he asked her, half-heartedly.\n\nAlyssa opened her eyes and looked down at his furrowed brow, and then gently smoothed his forehead with her fingers, making him smile as he relaxed his tense expression. \"No, I'm afraid not,\" she said gently, shaking her head.\n\n\"Maybe I'm just not psychic after all?\" he asked her, sounding frustrated.\n\nShe looked down at him, and looked thoughtful. \"No, I'm sure you are. You might not be able to use telepathy for some reason, but your mind shield is rock solid, and you have no problem shutting me out from time-to-time,\" she said, with a knowing smile.\n\nJohn looked shifty, and she leaned down and kissed him gently. \"It's okay, don't feel bad. I'm always listening to your thoughts, so the moment I can't, I'm aware of it instantly. If you're shutting me out for some reason, I know it's for my own good,\" she said, looking down at him trustingly.\n\nHe looked up at her, and marvelled at the depth of her absolute trust in him. He was about to reply when his watch began to chime melodically, as someone attempted to contact him on the Invictus. Smiling at Alyssa apologetically, he sat up, and pressed the button on his watch that would put the call through.\n\nCeraden's face appeared as a holographic image above the watch and he said in a jovial tone, \"Hello my friend! Something has come up that I'd love to speak to you about, but it's best not to talk to you about it over an open Comm channel.\"",
        "John smiled at the Maliri trader and said, \"Hi Ceraden. Do you want to come here to talk to me? Or should I come to your offices?\"\n\nCeraden said immediately, \"It would be best if you came to visit me at my offices. I'd be delighted to offer you my hospitality once again, and it's only fair, as I'm dragging you away from your lovely companions.\"\n\nJohn looked at Alyssa, who nodded, so he grinned as he said to Ceraden, \"Don't worry, Alyssa will be keeping me company too.\"\n\nCeraden paused for a moment and then said carefully, \"It would probably be best if I were able to discuss this with you alone. It's quite a delicate matter.\"\n\nWith an apologetic shrug, John said, \"Sorry Ceraden, she knows literally everything I'm up to, and I have no secrets from her. Bringing Alyssa with me will simply save me a conversation later.\"\n\nCeraden sighed and sounded slightly annoyed, \"Fine, bring her with you then. Can you be here by nine?\"\n\nJohn frowned, finding Ceraden's behaviour somewhat bizarre, but nodded as he said, \"Sure, we'll be there shortly.\"\n\nCeraden ended the conversation with a curt nod, and the holograph floating above the watch disappeared.\n\n\"Well that was weird,\" John said, looked puzzled. \"I've known Ceraden for years, and he's never taken that tone with me before.\"\n\nAlyssa tilted her head to one side and said, \"Could he be planning some kind of ambush? It seems odd that he wanted you there alone.\"\n\nJohn looked dubious, and said, \"Well you've just met him in person, and he's been exactly the same way with me every time we've met. He's the last person I'd suspect of some kind of treachery. It's best to be cautious though, so I think it's time to find out what the Maliri authorities think about merchants carrying sidearms.\"\n\nAlyssa nodded to him in agreement, and they got up and walked out of the Officers' Lounge, and made their way to their room. They strolled into the walk-in wardrobe and stripped off to change outfits. John put on some combat trousers, his old boots, and a short sleeved shirt, then walked over to the weapons rack and picked up a heavy pistol. \n\n\"I really should have asked Dana about upgrading these handguns,\" he said regretfully, looking at the weapon he held in his hand. \"With all the tech she's acquired recently, she must be able to give these much more stopping power.\" \n\nAlyssa nodded as she walked over to join him. She had pulled on some close fitting trousers and knee high boots, and was wearing a shoulder harness over her long sleeve top. She picked up a heavy pistol, slapped in a clip and then slotted it in the harness.\n\n\"Well, we can't do much about it now,\" she said with a shrug, as she reached for a red leather jacket that was hanging in the wardrobe, and then put it on. \"I've warned the girls, though. If there's any trouble, they'll gear up and come after us.\"\n\nJohn glanced at her with a frown, as he handed her a couple of spare clips, and then put on a shoulder harness and his old flight jacket. \"The Maliri will probably tolerate us carrying sidearms, but I don't think they'll be too happy about fully geared soldiers running around the starport,\" he said doubtfully.\n\n\"Let's just see what happens,\" Alyssa said with a smile. \"We could be overreacting, and Ceraden just might want to talk to you about something sensitive.\"\n\nJohn nodded as he tucked away the spare clips, and they strode out of their room, nearly crashing into Calara who was sprinting down the corridor to see them.\n\n\"Do you want me to come to?\" she asked, sounding worried, as she walked along with them to the grav-tube.\n\nJohn shook his head, and replied firmly, \"As the next person in the chain of command, I want you here to keep the girls safe, and look after the ship. If we get in trouble, I trust you'll make the right call, and not put yourselves in undue danger.\"\n\nCalara instinctively snapped to attention and said, \"You can count on me Commodore!\" before she relaxed her stance, and looked worried as she added, \"But please be careful.\"\n\nThey gave her a quick hug, and she waved goodbye to them as they stepped into the red glow of the grav-tube, and descended to ground level. They exited the ship with the airlock spiralling closed behind them, and then strolled cautiously past the guards by the Docking Bay entrance. John tensed himself, ready in case warning sirens started, but the guards paid them no extra attention, so they were able to pass uninterrupted.\n\n*So far, so good,* Alyssa thought to him, and he gave her a curt nod in agreement.\n\nIt was a relatively short walk to the Maliri Trading Commission, and it was a familiar one after their trip there earlier in the day. Still, it seemed to take an unnaturally long time, what with John and Alyssa both on edge, and waiting for trouble. They were able to stroll into the foyer in the Trading Commission unmolested by guards, or marauding ambushers, and they reached the reception area for Ceraden's offices without any trouble.\n\nAs they walked inside, a hologram of Ceraden appeared at the back of the room, and gave them a friendly wave. \"I'm just tied up with another meeting at the moment,\" he said apologetically. \"Please come on through to the lounge we were in before, and I'll join you shortly.\"\n\nThe moment the hologram stopped speaking, the double doors in the back wall started to open, and the hologram winked out. John glanced at Alyssa with a raised eyebrow, and then the two of them walked cautiously across the reception area, then through the doors. The corridor with the clear ceiling beyond was deserted, but as they stepped foot inside, the door to the lounge on the left opened invitingly.\n\nJohn walked up to the doors, and then quickly glanced inside, but nothing seemed amiss, other than a golden armoured Maliri seated behind the desk. He realised at once that it wasn't Ceraden, and as he carefully entered the room with Alyssa following behind him, he suddenly recognised the figure in the armour. Irillith rose from her chair and walked around the desk to stand in front of it.\n\nJohn looked at her curiously, and said, \"Sorry to disturb you. We were contacted by Ceraden, who asked that we meet him here.\"\n\nIrillith stood still, studying him for an awkwardly long moment, before she said, \"My apologies for the subterfuge, but it was I that contacted you, not Ceraden. There's something important I wish to discuss with you.\"\n\nJohn glanced at Alyssa, before looking back at the female Maliri once more. \"I don't understand. We spoke to Ceraden on a comm channel,\" he said cautiously.\n\nIrillith waved a hand dismissively and said, \"Masking my true appearance, and masquerading as that fool was a trivial task. But please be seated, I would like to make you an offer.\"\n\n*We might as well hear her out,* John thought to Alyssa.\n\n*Yeah, I agree. I'm curious why she went to all this trouble to get us here,* Alyssa replied curiously.\n\nThey sat in the sofa opposite the Maliri woman, and then John inclined his head politely. \"Please continue, I'm willing to hear your offer,\" he said politely.\n\nIrillith nodded and paused for a moment before speaking, \"I have a powerful contact in the Noble House that controls the primary Maliri shipyards. If you accompany me to my homeworld, I would be willing to facilitate a meeting with that contact, and assist you in arranging the purchase of Maliri Laser weaponry for your ship.\"\n\nJohn frowned and said, \"Ceraden told us that selling Maliri weaponry to non-Maliri was a capital crime amongst your people. How would your contact be able to sell us these weapons?\"\n\nIrillith crossed her arms over her chest, then leaned back against the desk confidently as she replied, \"Because my contact rules her Noble House, and could make an exception.\"\n\n\"How do you know you can trust this contact?\" Alyssa asked her curiously.\n\nIrillith turned to look at the blonde girl, and seem to bristle with irritation for a moment before she replied curtly, \"Because she's my mother.\" \n\nJohn and Alyssa exchanged surprised glances, and began to discuss this intriguing offer by telepathy.\n\n*Do you think we can trust her?* Alyssa asked him dubiously. *Ceraden doesn't think too highly of her, and I'm starting to dislike her already.*\n\n*I'm not sure, but this could be our only shot at getting our hands on Maliri weaponry for the ship. You've seen 'the warning', just imagine having that kind of firepower at our disposal,* he replied eagerly.\n\n*That's only if this offer is genuine. Why would she go out of her way to help us?* Alyssa asked him suspiciously.\n\nJohn looked into her bright blue eyes for a moment, before replying, *Why don't we ask her?*\n\nHe then turned to the Maliri who was standing impassively before them, and asked, \"Why would you do this for us? We've never even met before.\"\n\nIrillith paused for a second and then replied tentatively, \"Well, I'd get a great commission out of it.\" \n\nJohn raised an eyebrow doubtfully, not believing the obvious lie for a moment. \"I'm sorry, but I'm afraid I just don't believe you. If trading Maliri weaponry is so severely restricted, I can't believe you'd go to all this effort for a bit of cash,\" he said regretfully.\n\nIrillith tensed and seemed to be staring at them angrily, for a very long protracted moment, before she blurted out, \"Fine! I'll tell you the real reason.\" \n\nWith an exasperated sigh, she reached up her hands to her golden helmeted head, and activated something on her helmet. There was a hiss as the pressure seals were uncoupled, and as John and Alyssa looked on in amazement, the Maliri lifted the helmet from her head.\n\n*Holy shit!* Alyssa swore in stunned surprise, as they stared at Irillith, shocked to the core. \n\n\"Because I know exactly what you are... 'Progenitor',\" Irillith purred, with a calculating smile on her exquisitely beautiful blue-skinned face."
    ],
    "authorname": "Tefler",
    "tags": [
        "eighteen",
        "teenager",
        "anal",
        "swallow",
        "alien11111",
        "group sex",
        "maliri",
        "dominant",
        "submissive"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-43"
}