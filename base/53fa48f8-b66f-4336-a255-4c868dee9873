{
    "title": "Breaking My Own Rules Ch. 05",
    "pages": [
        "I was sitting at home, missing yet another day of work, waiting for the locksmith to show up. It always struck me as cruel and unusual that you had to give up some of your paycheck to get something done that was going to cost approximately the same as the wages you gave up to get it done. On the other hand, it was three in the afternoon and I was binge watching Game of Thrones, sucking on my third beer, so things could be worse. I hadn't left the apartment since Saturday. I didn't dare. While I was here I could have the deadbolt and chain lock as a defense against intrusion, since the door lock had been rendered useless by a wayward key. Being homebound was definitely preferable to coming home to -- I didn't know what to call him anymore -- lurking in wait.\n\nEven though I was expecting the locksmith, had told the doorman to send him up, I still jumped out of my skin when there was a knock on the door. I paused the show and went to the door, peering cautiously through the peephole. Short, squat, grey-haired looked safe enough, and there was no one else within range of the peephole. I started on the ritual of undoing all the locks. When I finally got the door open, I peered cautiously up and down the hall. The locksmith merely waited patiently. I supposed he'd seen more than his fair share of paranoid women in the city. I explained what I wanted and went back to my show.\n\nMy cell phone beeped and I glanced at the screen. Another text message from the girls. They were sure I was going to back out of our pizza date tonight. When I didn't show up at work, they'd called and texted all morning until I finally gave up and answered but I wasn't about to discuss my love(?) life in text messages, so I agreed to meet them at a small pizza joint. Then I'd checked my phone at least five times for any tracking apps that he might have put on it. I figured by pizza time, I'd have my new lock in place and be able to start feeling safe again. I was also seriously thinking of laying it all out for my friends. So far, I'd only told them the good parts of what had been going on, and even then just enough to get them off my case. But I was obviously in way over my head and in deep need of advice if not intervention. Maybe they weren't the best source to go to, but I could afford them for the cost of a couple of slices of pizza.\n\nI'd spent some time on the internet over the weekend and basically scared the shit out of myself. Everything I'd looked up from stalker to BDSM made me want to run home to Daddy, except there was no way I was going to tell him what I'd been doing. Or letting be done to me. While I might have told my brother, he was deployed again and had enough to worry about just staying alive. I'd also tried searching again for my mystery man's name, or phone number or anything I could think of, but nothing I found seemed to match up. When the locksmith handed me my shiny new key, I decided to leave then. I could use the fresh air, walk to the pizza place and try to figure out what I was going to tell my friends along the way.\n\nWhen I reached the lobby, I checked my mail, it was all junk and went straight into recycling. I couldn't resist, so I stretched up on tiptoe to look into Dr. Thomas Harker's mailbox. It was empty. When the doorman held the door for me, I tried to sound casual and asked, \"Do you know the new guy in 1210?\"\n\n\"Nah. He's got a car. Enters through the underground parking.\"\n\n\"Oh,\" I said, but decided to ask the night doorman, too, when I returned. I had been in \"Dr. Harker's\" car once but I honestly didn't know if I would recognize it again. There was a lot of other shit going on that night to distract me.\n\nOnce on the street, I peered every which way before starting off. I must have looked like a paranoid loon. I even took a very round-about way to the pizza place, since I had plenty of time. I still managed to beat the girls there, so I ordered a beer and took a back booth away from the street. I checked my phone. There was a text message I hadn't heard come in. It was from him. It said, \"New lock?\" When I could breathe again, I texted back, \"Fuck you!\"\n\nA few minutes later, a new message came through. \"Not very nice after all I've done for you.\" I couldn't think of any stronger way to repeat my last message so I turned my phone off. My hands were still shaking when the girls arrived from work.\n\nBlondie started in before they even took an order. \"Is he back? So did you see him this weekend? Was he still there today? Is that why you didn't come in?\"\n\nBrunette flashed her a dirty look. \"Slow down. Give her a chance to answer.\" Then she looked at me expectantly. I opened my mouth to say something, but the waitress was walking up.\n\n\"Let's order first,\" I said, and asked for another beer. I did the math in my head. That would be five in one day. Not very smart for a lightweight, but neither did I think I could get through the evening without some bottled help.\n\nWhen the coast was clear I leaned forward and spoke softly so they all had to lean in to hear me. \"Remember when I thought he was stalking me? Well, he was. He put an app on my phone to keep track of where I was.\"\n\n\"But that's been like, two months ago, hasn't it,\" Exotic said. She was checking her makeup in a mirror as she spoke. I guess if I were that gorgeous, I'd be checking it out every half hour, too.\n\n\"Well, he's back. He put a contact on my phone. Dr. Thomas Harker...\"\n\n\"I told you it was Tom,\" Brunette proclaimed.\n\n\"And he called Friday night,\" I continued, ignoring her. \"And when I got home, he was there. He stole my extra key.\" Suddenly, I had their undivided attention, not an easy thing to do with that trio.\n\n\"Did he screw you?\" Blondie demanded loudly just as the waitress walked up with our drinks. I wanted to slide under the table but then I considered what the floor under the table probably looked like.\n\nWhen the waitress left again with a bemused expression, I took a big swig of beer and said, \"I don't know what to do. He won't leave me alone.\"\n\n\"Why would you want him to?\" Blondie asked.\n\nBrunette scowled at her. \"Because he's creepy. Jeez, haven't you been listening?\"\n\n\"I haven't told you the worst of it,\" I confessed. Another swig for strength. I lowered my voice even further. \"He's in to bondage and dominance. Kinky stuff. You know, BDSM.\"\n\n\"He's a sadist?\" Blondie blurted out as the waitress walked up with our pizzas. Suddenly I didn't care what the floor looked like, but Exotic reached over and gripped my arm, preventing my slide to oblivion.\n\n\"Honey, are you okay? Did he hurt you?\" she asked.\n\n\"No. I mean, yes. Ah, I don't know. It's hard to explain.\"\n\n\"I had a guy once, used to like to spank me,\" Brunette said. \"Not real hard. It was kinda hot.\"\n\n\"See,\" I said. \"And remember my cop friend? He'd get out his handcuffs. I mean, it was like an adrenalin rush. And then when you'd come, it would be, well, better. More intense. It's like that with...\"\n\n\"Tom,\" Brunette supplied helpfully.\n\n\"Yeah, like way more intense. But it's escalating.\"\n\n\"More intense is good,\" Blondie said. \"Isn't it?\" She wrinkled her brow.\n\n\"But the...\" I searched for a word. \"The foreplay is more intense, too.\"\n\nBlondie was obviously hopelessly confused, and Brunette and Exotic weren't far behind her, from their puzzled expressions. I took another swig of beer. \"It's gone from spanking, to paddling, to cropping. I don't even want to know what's next.\"\n\n\"Cropping?\" Blondie asked.\n\n\"Jeez, didn't you watch Fifty Shades like ten times?\" Brunette hissed at her.\n\n\"I was just watching Jamie,\" she hissed back.\n\nI rolled my eyes, and I could see our waitress whispering to another waitress. Why had I thought this was a good idea? Brunette gave up on Blondie and turned back to me. \"So he's punishing you?\" she asked tentatively.\n\n\"He has all these rules. They're impossible to keep track of. And impossible to follow. I'm always screwing up.\"\n\n\"And he's always punishing you,\" Exotic concluded.\n\n\"Yeah. And then rewarding me. Jesus, I feel like a heroin addict.\"\n\n\"What you need is some methadone,\" Brunette stated.\n\n\"Huh?\"\n\n\"A plain vanilla guy. You don't get nearly as high, but it takes the edge off. Friday night, we are going to find you a plain vanilla guy. Right, Girls?\"\n\nThey had found something they all agreed on, which was, as usual, to go out partying. I groaned, but it was better than any solution I'd come up with. Now if I could just keep my head down till Friday. \"All right,\" I proclaimed. \"So that's decided. Now tell me what's happened at work today.\" That discussion filled the next hour and required one more beer.\n\nBy the time I headed for home, the sun hadn't gone down yet, but the shadows were long in the city. I didn't meander as much this time. My apartment was a little over a mile away and while I wasn't exactly tipsy, the beer had made me tired and eager to turn in early. If anything my paranoia had ratcheted up. I peered around every corner and kept an eye out behind me, too. I literally breathed a sigh of relief when I reached the steps to my building. The night doorman wasn't at his usual post, but I chalked it up to a bathroom break and swiped my passcard to open the door, checking yet again to make sure no one was following me.\n\nAs I waited for the elevator, I pulled my phone out and looked at its blank screen. Should I turn it back on? Tomorrow, for sure I would change my number. I thumbed the on switch as I stepped toward the opening doors of the elevator. I was vaguely aware of someone on the car and started to step back to let them off. They moved past me as I stared at my phone waiting for it to boot up. Then I was being pushed into the elevator. \"Hey,\" I protested, dropping my phone. \"God damn, if that screen is broken, I swear...\"\n\nMy words, my very breath caught in my throat as he bent to retrieve the phone. \"It's fine,\" he said, handing it back to me. \"You should look at it more often.\"\n\nFor a number of floors, I remained frozen to the spot and he was smiling at me with undisguised humor when the doors began to open again. Even when he said, \"This is your floor,\" I couldn't seem to get my feet to move. He held the door. \"Unless you'd like to come up and see my new apartment. There's a special room,\" he said softly. He paused. \"Just for you, for us.\" That finally unfroze my feet and I scrambled to flee and keep as much distance between us as the elevator allowed. I backed away across the hall until the doors closed completely. He watched me the whole time, but made no move to follow. \n\nI fumbled with the new lock on my door until I could yank it open. I slammed it shut, threw all the locks and sank to the floor, trembling. I was still there when my breathing had returned to normal, but I couldn't stand yet. The hall light was shining under the door, I saw the shadow of someone passing, pausing just for a moment, outside my door. Some part of my mind insisted it was just someone looking for an apartment number, but the rest of me, not restricted by rational thought, knew it was him. I struggled to my feet and backed away from the door, all the way to my bedroom then threw myself on the bed and lay like that until sleep finally claimed me.\n\n****\n\nIt took all my willpower, but I deleted the five messages he had sent on Monday evening without reading them, then managed to spend the better part of Tuesday morning on hold in order to get my phone number changed, luckily without being caught by the boss. The rest of the week, I slipped in and out of my apartment building as fast as I possibly could. I didn't even check my mail, which was undoubtedly junk anyway. \n\nCome Friday, I was all too ready to find a safe haven with my friends for a few hours. I wasn't holding out much hope of finding that plain vanilla methadone guy, but a few drinks and a safe space was definitely better than cowering in my apartment. We had decided on a new bar that was having a grand opening, so lots of bodies and distractions. Being Friday night, the office was closing up fast, when Exotic dragged me into the restroom. I tried to make a break for it, but then Blondie and Brunette were there, and Exotic had her makeup bag out. I endured the ordeal of smoky eye shadow and too dark lipstick, vowing to remove it at the first chance, but damn, it did look good. Exotic had a gift, so I figured what the hell, go with the flow. All the makeup in the world wasn't going to make me any hotter. Or even lukewarm, for that matter. When I said as much to Brunette as we were heading out, she looked at me askance. \n\n\"You don't see it?\" she asked.\n\n\"See what?\" I said, looking around.\n\n\"I don't know what it is, girl, but you've changed,\" she said with a shake of her head.\n\n\"Huh?\" I said with my usual brilliant repartee.\n\n\"Don't tell me you haven't noticed the guys at the office checking you out. Hell, even the boss makes excuses to walk by your cubicle.\"\n\n\"You're nuts,\" I said. \"It's just that damn rumor monger next to me.\"\n\n\"Uh, uh, girl. You move different. You're posture's different. Hell, you even talk different. Now, if you'd just buy some new clothes, you'd be the complete package.\"\n\n\"I'd be the complete package living on the street, 'cause I can't afford my apartment and a new wardrobe,\" I scoffed. But her comments refused to quit rolling around the back of my head.\n\nA short subway hop and we were at the new bar. It was a bustling hive of activity and pounding music. My head started to throb immediately, but I knew a glass of wine would cure that. With some shouted debate, we decided to go straight to the bar for drinks. Even if we could find a table, it would take forever to get waited on. Exotic led the way. As always, the crowd seemed to part before her. She was easily gorgeous enough to pass for a celebrity. Hell, I'd seen people take pictures of her like they were paparazzi or something. We followed along in her wake until we were crammed into a narrow space at the bar ordering drinks from a bartender that only had eyes for her. Whatever, as long as we got our drinks.\n\nA moment later, someone was rubbing against my shoulder. I turned to give him a piece of my mind, and was totally surprised to see him smiling at me. \"Hi,\" he said. \"I didn't mean to bump you, it's just so crowded. Listen, my friends and I have a booth, if you and your friends need a place to sit. I just came to get some drinks, because apparently they forgot to hire waiters before they opened.\"\n\nThat made it clear. He was trying to get Exotic's attention, or even Blondie's or Brunette's but I was easier to get close to. Still, it meant a place to sit, so I said sure and tried through shouts, mime and hand signals to pass the information on to my compatriots. When eventually everybody was served, we followed him back to the booth. There were indeed four other guys waiting and it was a really tight squeeze, which I suspect they didn't mind at all. But I was really confused, when he insisted on sitting on the end, beside me, after the girls had already squeezed into the booth. Weak bladder, I hypothesized.\n\nThings were a tiny bit quieter in the booth, but I still couldn't make out most of the guys' names, though my friend from the bar turned out to be Steve. I gave him my nickname, Sky, and proceeded to concentrate on my number one headache remedy -- Chardonnay. After seven, the happy hour crowd began to thin, and Steve, who'd been trying to engage in conversation without success, decided on a different tack and asked me to dance. I did the whole \"Who, me?\" thing, because I was still positive his target was elsewhere in our group, but he just laughed and pulled me onto the miniscule dance floor. There really wasn't enough room to do more than stand in one place and gyrate, but I could handle that, and he followed along, close enough to be sexy but not obnoxious or downright bruising.\n\nWhen he led me back to the booth, there was a fresh glass of wine sitting, waiting for me. Fortunately someone had finally turned the music down a notch and I leaned into Steve's ear to explain the realities of the modern world.\n\n\"Look, I really appreciate this, but in a bar I don't drink anything that I haven't seen all the way from bottle to glass to table.\" I made the motions of someone slipping a drug in the wine glass.\n\n\"Good for you,\" he shouted, right in my ear. He suddenly reached in his back pocket and pulled out what I thought was a wallet. When he opened it for me, I realized it was a badge case. \"DEA,\" he shouted, so that I wanted to stick a finger in my ear. I glared at him askance and took the case from his hand. My cop friend had taught me how to tell real id's and badges from fakes. His was real. I handed it back.\n\n\"I just want you to know that I was nowhere near that meth lab, sir,\" I said, demonstrably not shouting.\n\nHe laughed and gestured across the table. \"All my friends, too. You're safe with us.\"\n\nI took a hesitant sip of the wine, because I really was thirsty, then shrugged and took a big gulp. A few minutes later, several platters of assorted appetizers were served. I dug in hungrily, figuring there wouldn't be much more in the way of dinner for me. I'm really bad that way. No, really, really bad. Which is why I'm built like a, well, light pole. I don't eat enough, but what I do eat goes to all the wrong places.\n\nA while later, there was the proverbial trip to the 'powder room,' in which the girls were all over me about Steve and how he was my Vanilla Man. I made them absolutely promise upon penalty of herpes not to breathe a word about my conundrum. I suspected it might be too late. They were my friends, but that just meant I knew them all too well. When we returned to the table, Steve wanted to dance again, so we went out and shuffled about the floor with only a little more room this time. It was as we were about to leave the floor that I thought I saw 'him.' It was only a passing glimpse. The place was still really crowded. And I was still really paranoid. Never-the-less, when Steve tried to talk me into going for a light dinner at a sushi place a few blocks away, I was feeling highly agreeable.\n\nWe walked to the restaurant. I tried not to be obvious as I watched over my shoulder and kept an eye out for low slung sports cars. Nothing. We ended up having a pleasant, light dinner as promised, despite the constant texting of my friends. I was evasively humorous -- or at least tried to be -- throughout the meal and actually had a good time. I was, however, utterly astounded when Steve asked me to come home with him. Part of my brain was saying \"Who does that?\" but most of it was answering, \"Everybody, nowadays.\"\n\nIt didn't take much persuasion, I must admit. The thought of going home, racing through the halls to get to my apartment before 'he' appeared, then hiding there all weekend was less than appealing. Okay, it was downright depressing, so I heard myself saying yes. He may have been afraid I was going to change my mind because he rushed through paying then hurried me a couple of blocks away to here he had a car; a drug dealer's car, he said with a wink, for when he has to go undercover. I asked him if he did that a lot. He gave a snort. \"It's way more paperwork than they ever show on TV, believe me.\" The car beeped and he headed around to the driver's side. Immediately those annoying voices in my head started in.\n\n\"That's okay, I can get my own door,\" the prissy one started. \"Jesus, that is so fifties,\" the feminist one chimed in. \"Just get in the car,\" the practical one groaned with a roll of her eyes. (No, I don't know how a bodiless voice rolls eyes.) I got in the car. \n\nWe headed over the bridge to a suburb and stopped at a townhome. It turned out to be small, but neat and tidy. The d\u00e9cor was typical guy, with the focal point being a humongous big screen TV. He led the way to the back end of the house where the kitchen was and stuck his head in the fridge, emerging a moment later to confess he didn't have any wine. I waved it off.",
        "\"I'm a real lightweight when it comes to drinking. In fact, I tend to do unconscious before I even get to drunk, so...\"\n\nHis arms circled around my waist. \"Can't have that. You'll miss all the good stuff.\"\n\nI put my arms around his neck. \"Well, why don't you give me a sample of this good stuff.\" Whoa, did I say that? I wondered if some of the voices in my head were starting to leak out.\n\nHe smiled and kissed me. Sweetly. No tongue, even. He pulled me closer and I could feel his cock starting to stir. \"Um,\" I said. \"Not sure that sample's going to be enough. I think I need a test drive. Is there a bedroom in this joint?\"\n\nHe was studying me, probably thinking I was moving too fast for him. Hell, I was moving too fast for me, but I was also horny and I needed my fix, as Brunette would say. Whatever he was thinking, he said, \"Upstairs, come on.\"\n\nHe took me upstairs into the master bedroom, then gave me another one of those sweet kisses. \"I'm just going to duck into the bathroom a sec. Be right back.\"\n\nI smiled as he turned away, and reached for the top button of my shirt. One of my voices was jumping up and down and shouting. \"Wait! Slow down! He's going to think you're some kind of slut,\" she accused.\n\n\"Shut up,\" I muttered, but I stopped after undoing the first two buttons. \n\n\"You're the submissive, remember,\" she wheedled from inside my ear. \"Am not!\" another voice argued. \"Let him set the pace,\" a chorus answered. I was rolling my eyes at the lot of them as he emerged from the bathroom. Fortunately he didn't notice. He came over and hugged me, giving me another sweet kiss then backed me to the bed. He eased me down then lay beside me, leaning over me, kissing me gently and slowly roaming along my jaw and neck. My pussy was screaming so loud, I couldn't believe he couldn't hear it. I smiled and kissed back, trying to intensify the passion while still being lady-like. Yeah, right.\n\nFinally, he got around to helping me out of my clothes, then he stood up and began undressing. I lay on the bed watching as his body emerged. He was trim, obviously in good shape, though not as chiseled-in-marble as my -- whatever he was. But who was I to judge. I got up on my knees, licking my lips. His cock was bobbing, not quite at full sail, but I was pretty sure I could fix that. He zeroed in for another kiss though, and pressed his erection and groin against my tummy even as I was reaching for it. Okay, I wrapped my arms around him and pulled him close. He laid me back on the bed and stretched out on top of me, careful to support his own weight. Finally, finally his kisses began to drift downward.\n\nHe reached my breasts and applied a gentle kiss and exactly two licks to each one, then drifted lower. When he reached my navel, he asked if he could go down on me. I vigorously nodded, soundlessly yelling, \"Yes, yes, yes!\" He took his time getting the rest of the way, but when he was situated, I spread my legs wide. He licked my clit. Gently. His finger toyed at my entrance, but never entered, though he seemed pleased to find me wet. Even when I flexed my hips in what I thought was an obvious appeal for more, all I got was a soothing tip of his tongue. Damn it, I didn't want to be soothed!\n\nOne voice started in. \"If you want it, you have to ask for it.\" But another voice argued, \"No! Nothing more fragile than a male ego. He'll get there. Wait for it.\" Turned out it didn't really matter, because he was already on his way back up. He gave me a few more of those gentle kisses then rose to his knees, dug a condom out of his nightstand and slipped it on. \"Okay, now it will get real,\" my voices assured me. He smiled at me as he lay back down, again being careful to support his weight. There were some awkward pokes, and I raised my knees to give him a better angle, then he was inside me.\n\n\"Okay?\" he asked.\n\nI nodded. \"You feel great,\" I whispered, craning my neck to kiss his jaw. And he did. He was probably average in size, but as long as he could reach my sweet spot, that was good enough for me. He began slowly pumping, and I closed my eyes savoring the anticipation. After a couple of minutes, I pulled my ankles up over his thighs, seeking a different angle. Then higher, locking my legs around his hips. It still wasn't quite right, good but in a scratching an itch sort of way. At some point, you realize the itch is still there, even itchier. I arched my back. \"Faster,\" I whispered.\n\nHe leaned up and smiled at me, then kissed me. But if he was going faster, it was so incremental I couldn't tell. Then it dawned on me. He was drawing it out, waiting for me to come before he let himself go. I threw my head back, but it was in frustration, not ecstasy. I was never going to get there at this rate. He was nowhere near my clit or my sweet spot, and I was pretty sure if he didn't want to stick a finger in my pussy, he sure as hell wouldn't go near my ass with said finger. I turned to the time old tradition. I faked it, hoping that maybe if he really got going for his own pleasure, then I'd get some, too. How was I to know that my fake orgasm was what he would get off on? It was over almost before it began and he was collapsing next to me, his lips pressed against my neck, murmuring thank you's. Polite to the end, I thought. \n\nAs I lay awake, staring at the ceiling, I began plotting. This Steve was a nice guy, just way to PC. I needed to stir his fire up a bit, convince him I could take what he dished out. Because, damn, I really liked the feeling of having a nice guy sleeping next to me, sexual frustration or no. When I rolled onto my side, his arm wrapped around my waist in a most comforting way, and I drifted off.\n\nThe next morning, I wiggled my ass against his morning semi-hard on, but he rolled away mumbling apologies about morning breath and disappeared into the bathroom. When he came back out, he had pajama bottoms on. I admired the way they hung on his hips, till I remembered my plot and got back to business. \"I need a shower,\" I said, attempting coyness. \"Would you like to join me?\"\n\nHe smiled, but then he said, \"No, no. I'll let you have your space. There's extra towels on the rack. I'll go start us something for breakfast.\" Okay, fine. Scratch non-verbal communication, scratch coyness. I took a quick shower, then dressed, sans bra and with more than a few buttons undone. Unfortunately, on me that wasn't exactly an open invitation. It wasn't like I had cleavage to display, or even to hint at for that matter, but it was a start.\n\nWhen I got downstairs, he had pancakes cooking. I offered to help, but he refused, so I sat at the breakfast bar and admired the view. When he put the plates down and poured some coffee, I gave him my best smile. \"I enjoyed last night, Steve.\"\n\n\"I did, too.\" He said agreeably.\n\n\"I don't want the fun to be over,\" I hinted.\n\n\"I'm so glad to hear you say that!\" he exclaimed. \"Last night you said you'd never been to this suburb. I thought I could give you a tour, today. We can have lunch down on the pier.\"\n\n\"Oh, um, I don't really have clean clothes...\"\n\n\"Nonsense, you look great. In fact, I'll give you one of my tee shirts to wear. Save that nice blouse for work.\"\n\nAnd so went pretty much the rest of the day. I was beginning to think that the only role I was capable of playing was submissive, because seductress certainly wasn't working for me. But he did ask me to stay another night, and I wasn't ready to give up on him yet. We ordered in pizza and watched football on his big, big screen TV. I snuggled against him, I pulled down the neck of the tee shirt to show off my non-cleavage, and at half-time, I went into the bathroom and took off my slacks. My legs were at least halfway decent looking, so I figured go with your strength. I looked in the mirror. The tee shirt hung just below my ass. Perfect. I started for the door, turned back and removed my panties. Then I headed back to the living room. Unfortunately, my arrival coincided with a touchdown. He didn't look at me. No matter. I snuggled back against him, at which moment he had to jump off the couch in order to help the point after go through the posts. When he settled back down and laid his arm over my shoulder, I pulled his hand down to my bare thigh. Finally, he looked over at me. \"I think it's time for bed,\" I suggested. \"Race you.\"\n\nThere was a long pause and I was getting ready to throw in the towel, when he said, \"You're on,\" and practically knocked me on the floor heading for the stairs. Hallelujah, the chorus in my head sang. I raced up the stairs after him. He was in the bathroom when I got to the bedroom. I got on my hands and knees on the bed, letting my bare ass hang out, hoping to give him some ideas. He came out of the bathroom bare-chested, but with his jeans still on. When he got close enough, I settled back on my heels and grabbed the waistband. \n\n\"These have got to go,\" I explained. I kept my eyes on his face. If he had some kind of hang-up about me touching his cock, I wasn't going to push it, but I was sure as hell going to push any other button I could find if it meant getting him to push some of mine. I got his pants undone and slid to the floor along with them, tentatively reaching for his cock. There was a sharp intake of breath when my fingers made contact, but he didn't pull away. He also didn't grab for my head, which thrilled me. That was one of my hang-ups. We all have a few. After a minute of stroking him, I sucked the head into my mouth and gave it a few tentative licks. He was quivering, hopefully with excitement and not from a chill, so I used my hands to guide him into sitting on the edge of the bed. In that position, I could suck him and resume my hands and knees position, still hoping to give him ideas. After just a minute or two, he slid back on the bed, pulling free.\n\n\"God, Sky. That feels too good!\" Huh? Too good? What guy ever says that? I sat back on my heels. \n\n\"What can I do?\" I asked.\n\n\"Just give me a few minutes.\" I shrugged and peeled off the tee shirt. No one had ever accused me of being too sexy or too good. I had no idea what to do with that. I climbed back on the bed. He was still sitting with his eyes closed. His cock looked almost painfully hard.\n\n\"Why don't I suck you off now, and we can fool around a little later?\" I suggested.\n\n\"No. I don't want to come in your mouth.\" I ask again. What guy ever says that? \"I want to make love to you. I want to be inside you when I come.\" Okay, so now we're getting somewhere.\n\n\"So let's put a condom on you and get the party started.\"\n\n\"No,\" he moaned. \"I want it to be good for you.\" If last night was any indication, his foreplay wasn't going to get me there.\n\n\"Steve, I'm horny as hell. I have been all day. I'm plenty wet and ready.\" I didn't want to invade his privacy, but I was pretty sure that if he didn't get some relief soon, he was going to blow a gasket. I opened the drawer in his bedside table and pulled out a condom. \"Just let me put this on for you and...\"\n\n\"No, you touch me with those wonderful hands of yours and I'll come. I don't want to get it all over you.\" Everyone, all together now. What guy ever says that? At least he took the condom from me and rolled it down over his purplish cock.\n\n\"How about doggie style,\" I suggested hopefully, thinking I could at least help my own clit along.\n\n\"No, I love to watch your face.\" I thought about suggesting cowgirl, but I was afraid I might hurt him, so missionary it was. And once again, I did my best fake orgasm impersonation. And once again, I stared at the ceiling, as he slept cuddled up next to me.\n\n****\n\nThe next morning, I slipped out of the townhouse early, and used the fading battery on my cell phone to figure out buses and subways that would get me back to the city. Being Sunday, it took forever, but it wasn't like I had anything else to do. I was so horny, I just wanted to make it home to a hot shower and the highly unfulfilling orgasm offered by my vibrator. And then try to figure out how to explain to the girls that my alleged 'Doctor' had ruined me for plain vanilla.\n\nI drug myself up the steps of the apartment building and greeted the doorman, wearily. If he knew I hadn't been home for a few days -- and he knew -- he didn't mention it. The building was as quiet as a church mouse so I made my way to the mailboxes and collected all the junk mail to sort later. I rode the elevator alone, exited into an empty hall and walked across to my door. I had just dug my key out and was reaching for my door knob when I heard the stair door behind me softly open, then click shut. I didn't turn around. I didn't have to. Every part of my body from my nipples down was clenching or spasming in recognition of potential relief. I rested my forehead on the cool wood of my door.\n\n\"How was he? Your Vanilla Man?\" a deep soft voice from behind me said. He pressed against me, pressed me against the door. My ass was suddenly on fire with need when I felt his erection pushing so hard against me, so close, as if there were no cloth at all between us. His long fingers wrapped around my hand and he was guiding my key to the lock, turning my hand to turn the key. As the door began to swing open, he looped an arm about my waist, supporting me. I would have fallen otherwise, and he knew that. Even as he knew I was trembling with need and not fear. He knew everything. How could I ever be free of someone who knew my insides better than I did? For the first time, I was asking myself if I wanted to be free of him.\n\nHe pulled me into his arms, kicking the door closed, and carried me into the main room, sitting me at the dining table. My ass screamed in frustration. It wanted to be fucked, hurt even, as if all of the dissatisfaction, all of the futility of the weekend demanded penance. A wine glass appeared in front of me. I didn't remember having any wine in the fridge, but then I saw him pull a bottle from his pocket. A real boy scout, I said to myself, and snickered. I knew at least one of my voices was pissed it hadn't come up with that first. He paused, looking at me. So maybe he didn't know everything that went on inside of me. Just the stuff below the waist.\n\n\"Have you eaten?\" he asked.\n\nA question. So I was allowed to talk now. Except I couldn't remember. I shook my head. \"I don't think so.\"\n\nHe made that peculiar exasperation noise of his and looked through my fridge. He pulled out a paper tray of chicken, sniffed it and set it in front of me. \"Eat.\"\n\nThen he opened the wine, but he wouldn't pour it until I took a bite of the chicken. I don't like cold chicken, but I didn't have the energy to put it in the microwave, so I forced myself to eat. He poured some wine for me, then unloaded laundry from the other dining chair and sat, almost knee to knee with me. Whenever he decided I was drinking more than I was eating, he took the wine glass and held it just out of my reach. But he did eventually refill it, so there was that. When I had gotten through most of the chicken, he spoke again.\n\n\"Do you know why he didn't satisfy you? Your Vanilla Man?\"\n\nSo he had asked me another question, meaning I was allowed to talk. Did that mean I could only answer the question, or could I change the topic?\n\n\"Why do you call him Vanilla Man?\" I countered.\n\nHis lips quirked into a small smile. \"You do that with everybody. Give them descriptive names. I guessed that was his.\"\n\n\"Not everybody,\" I stated, holding out the glass for more wine. He seemed to gauge for a minute, then relented, and poured me some more.\n\n\"I know. You don't know what to call me, do you, cherie? That's because I'm more real than anybody else in your life. I'm whole, and not just an aspect like hair color.\"\n\n\"More real? Don't you mean more surreal?\"\n\nHe shrugged. \"Perhaps. You haven't answered my original question.\"\n\nI played the conversation in reverse until I figured out what question he meant. \"How do you know he didn't satisfy me?\"\n\n\"Look at you. I told you, I've explained all this. You feed on your need to obey, to be controlled. You're like a starving woman. Let me tell you how it went. The first night, you kept waiting for him to tell you what to do, tell you what he wanted, to take and demand more. Yes? The second night, in desperation, you tried to tell him what you needed, offer him the chance to give you something, anything remotely like a command, a request, a what if, a maybe. Something you could choose to perceive as a command. And when he didn't, you starved a little more. And now?\"\n\n\"And now,\" I repeated flatly.\n\n\"And now you are so weak, you have no fight left. It is much more fun for me when you resist. Your eventual capitulation is that much more... savory.\"\n\n\"Then why didn't you do anything Monday night?\"\n\n\"Fear does nothing for me. Fear is like tainted meat. I told you, I feed on your obedience, on controlling you. Do I take a whip to you? No. Because you would have only fear. What good is that to me? One day, you will accept the whip, because it is what I want and your only desire, your only need will be to obey me.\"\n\n\"No!\" I shouted, slamming the wine glass down. He pried it out of my fingers.\n\n\"Perhaps not,\" he agreed with a shrug. \"Every sub is different. Finding those differences is part of the treasure hunt.\"\n\nHe suddenly stood and pulled me to my feet. \"Come. You have fed your belly. Now let us feed your soul.\" He pushed me ahead of him, toward the bedroom. I didn't resist.\n\nOnce in the bedroom, he reached around from behind and unbuttoned my blouse, pulling it from my shoulders, then quickly undid my bra and discarded it. A moment later, my slacks and panties were down around my ankles and he was pulling me to step free of the pile of clothes. He sat on the edge of the bed and pulled me into his lap.\n\n\"Tonight, cherie, these are the rules you will obey.\" I leaned against his hard chest. I felt like a little girl; I didn't like the feeling, I just couldn't grasp any other image for myself at the moment. \"You will be silent. You will not move without my permission. You will not change position without my permission. You will not ask for anything. You will do whatever I ask of you. You will accept whatever I do to you.\"\n\n\"Sir?\" I said, so softly I wasn't sure if he would be able to hear.\n\n\"Speak.\"\n\n\"May I come?\" I almost cringed, afraid he would deny me what I needed right now for life alone.\n\nHe kissed my forehead. \"Tonight, you may come at will, cherie.\"\n\nI burst into tears. I wasn't even sure why. Even the voices in my head were astounded into silence. But he knew, and he waited until I had calmed somewhat, even handed me a Kleenex, then he said, \"Hush,\" and his hand brushed softly through my hair. I did a couple of sup-sups, then waited for him to do with me as he willed. His kissed my forehead again, then laid me on the bed and began removing his clothes. I swear I worshiped that marble-hewn chest and that cock that pointed at me with absolute determination and infinite patience.\n\n\"Hands and knees,\" he said. I instantly obeyed.\n\n\"You'd better be wet.\" I wasn't sure how to take that, but since I'd been constantly wet for the last two days, I wasn't concerned. When he slammed into me, his intent became clear. Maybe his cock wasn't so infinitely patient, after all. I didn't care. As long as his balls kept slapping my clit and his cock kept filling my emptiness, I was home. It only took moments before an orgasm rose like a tidal wave in my belly. I bit my lip so hard to keep from making a sound, that I drew blood. Perhaps he realized that, because even as he kept slamming home, he twisted his hand in my hair and pulled my head around until he could lean over me and kiss me, sucking at my lower lip, drawing my blood forth. When his tongue sank deep in my mouth, I knew I was grunting each time he bottomed out in my pussy. Without being able to bite my lip or my tongue, there was no way to contain the sound. I knew I would pay for it later. I tried to care, but I was being distracted by pleasure in the moment. When he straightened and grabbed my hips to slam even harder inside me, I felt the pulsations along the length of his thick cock, and I came again from the sheer thrill of knowing I had given him pleasure. It might not have registered on the Richter scale, but there was a warmth associated with it that I had not felt before. I just knew I wanted to feel it again.",
        "I badly wanted to sink down on the bed and give in to the fatigue that had hounded me through the last few sleep-deprived nights. But I was driven not to disappoint him, so I held firm, hands and knees, as he slowly pulled out and walked out of the room. I listened with every fiber of my being, first afraid that he was leaving, then fearing what he might be planning if he stayed. Perhaps anticipating was a more accurate term than fear. He had promised me I could come at will, and I sincerely doubted that he would be satisfied with only making me come twice. Male pride, I assured myself, would not allow that. I hoped.\n\nWhen I heard him come back into the room finally, I was quivering in anticipation. My imagination, and my voices, had been working overtime. And, frankly, my asshole was clenching, demanding equal time. I had thought that an orgasm would appease all of my needs. Apparently, my back door had other ideas, not to mention its own needs. But I'd been denied permission to ask for what I needed, And frankly, the thought of him taking my ass the way he'd taken my pussy scared the crap (pardon the pun) out of me.\n\nHe slipped a silky blindfold over my eyes. It took a few minutes to get it to stay in place, because my hair was all frizzed out and not cooperating. When he was finally satisfied, I steeled myself for the next move, then told myself to relax, then tensed up again. Was he watching all this with amusement? Probably. I'll just say right here and now that what he did next was probably the last thing I expected or was prepared for. Two ice cubes were placed squarely in the dimples beside my tailbone. I'm pretty sure I gasped loudly enough for my next door neighbor to hear and get a chuckle out of. I mean, sure; nipples, navel, pussy, but backbone? I hunched my back and the ice cold snow melt ran down my crack, dripping onto my bed.\n\nHe pushed down on my back. \"Stay in position,\" he warned, with his dire consequences voice. Okay, I told myself. Initial shock over, no big deal. Except now, that icy water was running over my clit on its way to my mattress. More gasping. At least, I told myself, it's not ice directly on my clit. But then, of course, it was. Now it wasn't just gasping, it was panting. Then the ice cube was in my pussy. Then one slipped icily into my ass, one he'd been sucking on, I suspected, to get just the right shape.\n\nNow I wasn't so much panting as hyperventilating. I couldn't even think of a way to describe the sensation. There was a cold ache centered around the ice, surrounded by an even more fiery heat raging in my belly. Water was dribbling from my pussy and then -- oh, my god -- his hot tongue was lapping at the mixed water and juices and his own come. How was I supposed to not make a sound, not move? I think I began rocking back and forth. I don't know. All of my voices had gone into hiding. My mind had retreated to brainstem function only.\n\nI thought I couldn't take any more. I was wrong. An icy cold thumb plunged into my ass, and then another, stretching me wide, fingers clutching at my cheeks. The melted remnants of the ice cube flooded forth. I may have stopped breathing entirely. My asshole was clutching at his thumbs as if to say, \"Fill me.\" Suddenly, his cold thumbs retreated and the hot head of his cock was there, pressing, demanding entry. He didn't plunge into me as he had in my pussy, but neither did he pause until he was buried balls deep, pulling hard on my hips as if he could penetrate even deeper. He stopped only long enough to command me to \"Breathe,\" and then he was slowly retreating. I felt every inch of my insides clutching at him, begging him not to go, despite the fact that my asshole was still being stretched painfully, and a mere ice cube wasn't lubrication enough. When he was most of the way out, he wiped come and pussy juice and ice melt from my lower lips and spread the moisture along his shaft. Then his damp hand was back on my hip and he slammed into my ass. I was trembling with the intensity of the sudden fullness, a combination of pain and pleasure that seemed just short of unbearable. He paused again.\n\n\"Breathe!\" he said, much more sharply this time. I sucked in a breath and then he was pumping in and out, sometimes pulling all the way out, then shoving in again relentlessly. By the third time his balls slapped hard against my pussy, I was coming. I couldn't have told you if it was one long orgasm or an indefinable series of orgasms. By the time he came in my ass, I was barely conscious, my arms and legs shaking uncontrollably. When he pulled free, I collapsed on the bed, without permission. The blindfold slid off my eyes. I didn't even care that my belly lay on a large wet spot. I was vaguely aware of his fresh come dripping down to add to it. \n\nHe kissed my sweaty forehead, then moved to my ear and whispered \"You scared the shit out of Vanilla Man, didn't you?\" I could only whimper in response. \"You are far more woman than he could ever handle,\" he said with a chuckle. He moved away then, but after a moment, returned with a warm wash cloth and began to clean me. I was asleep before he finished."
    ],
    "authorname": "Chimera44",
    "tags": [
        "submission",
        "anal",
        "pussy eating"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/breaking-my-own-rules-ch-05"
}