{
    "title": "Darla's Games Day 14",
    "pages": [
        "I woke up to the sound of my alarm clock. I stretched out in my HUGE FREAKING BED. (God I love saying that) and rolled over to turn it off. It didn't take too long to get dressed. Even though the clock wasn't running on Darla's games today, I still didn't own any underwear. I thought about borrowing some from Kelly, but that would require explanation and be kind of weird.\n\nSo, I went into my bathroom and enjoyed a nice hot shower. I shaved everything out of habit. I went to my room, dressed in the longest denim skirt I could find and the thickest polo shirt. Then I slipped on some strapped two inch heels and, grabbing my new cell phone, headed down to breakfast. I had the old one too, and hoped to return that to Darla.\n\nDad and Kelly were there eating breakfast and I joined them happily. They had a really nice spread, but I had a piece of unbuttered toast and a banana and some orange juice and they questioned my dietary habits. \"Dad, I'm not going to get fat to keep you happy.\" I laughed.\n\nEverything was kind of good. It was weird. I should have felt miserable, I had hated this constant threat of sending me here for years. And now, it really wasn't so bad at all.\n\n\"Carrie, a few things.\" My dad said as he finished his second cup of coffee. \"Cars need gas, so you are going to have to get a part time job if you don't want to switch schools.\"\n\nI cringed. Okay, here is where things are going to start getting tough. I have to get a job?!\n\n\"Here is forty dollars, that should get you through the weekend.\" He handed me two twenty dollar bills. \"While you are here, you need to come straight home from school unless you have my permission to do otherwise. I will tell you now, cheerleading is done. The school already took it away, it wasn't me so don't give me that look. Maybe they will let you back on the squad if you get your grades back up.\"\n\n\"As to going out, you are allowed to go out with Julie and I will want verification that you are with her if you decide to do so. I heard about you lying to your mom.\" He acknowledged my groan. \"Sorry young lady, you are eighteen and it's time to learn some responsibility. Kelly is not a maid and neither am I. You will help with the laundry and dishes and keep your own room clean. Nobody picks up after anyone else around here.\"\n\n\"As far as dating goes, it is okay if they come here and we meet them. Carrie, stop groaning. I want the who's, where's and how longs every time, no excuses. The first time I don't know where you are and who you are with is the last time. You lose the car. And you will show me or Kelly your homework every night before bed. Your cell phone is not unlimited, don't abuse it.\"\n\n\"Now, go have a great day.\" He smiled.\n\nI smiled back and gave him a hug and a kiss. I looked at Kelly and decided what the hell and gave her a hug too on my way out to my BRAND NEW CAR!!!! One thing I never really learned about was rush hour. I never had my own car and I could get to school through back roads. So, it surprised me to be sitting in traffic on the highway. I was glad I got an early start so Julie and I could cruise around for awhile before school. But, it ended up I just got there in time after an hour and a half on the road. \n\nI pulled in front of Julie's house and honked the horn. I thought of going to the door, but I thought this would be more dramatic. I honked and honked and honked like an idiot. People were looking at me, but I didn't really care. Finally, Julie and her mom came to the door to see what all the commotion was and I opened the door and stood next to the car and smiled like a Cheshire cat.\n\nThey looked annoyed until they saw me and then Mrs Petrili laughed and went back inside and Julie ran her cute ass over to me and we grabbed each other's arms and jumped up and down like fools.\n\n\"No fucking way!\" Julie yelled.\n\n\"MINE!\" I screamed.\n\n\"No fucking way!\" Julie screamed louder.\n\n\"Get your ass in my car bitch!\" I laughed.\n\n\"Let me grab my bag.\" Julie ran into the house and came out in a few seconds with her book bag and threw it in the back seat. \n\n\"Too cold for the top down I guess.\" Julie smiled.\n\n\"Yeah, besides, it would mess up our hair.\" I grinned back.\n\n\"Want to skip school?\" Julie asked wide eyed.\n\n\"Oh my God! Now you want to skip school?\" I laughed. \"I would, but my dad would pull the car in a second.\"\n\n\"Buckle up babe, this thing is fast.\" I warned and put it in reverse and checking both ways, squealed wheels and slid the front of the car a little when I backed up. Then I put it in first and left tread marks in front of Julie's house. I hoped her mom wouldn't be mad.\n\n\"Slow down you crazy bitch, you are going to get a ticket or something.\" Julie laughed. \n\nI was careful not to speed too much. I mean, I couldn't really help it on the long straight of ways where I could clearly see no sign of police cars, but for the most part, I kept it under sixty on the thirty mile per hour roads. \"So, I guess living with dad has its perks.\" Julie said.\n\n\"Yeah, you have to come see my bedroom Jules. My bed is like a California King or something. It's huge.\"\n\n\"Umm, are you propositioning me slut?\" Julie giggled.\n\nI blushed, I hadn't even been thinking about ... that. \n\n\"I'm totally fucking with you Carrie. Jesus whore, get a hold of yourself.\"\n\nI laughed. \"So, about yesterday.\"\n\n\"Yeah. Look, I know it was rough on you, but damn Carrie, I didn't know if you had been kidnapped or killed, just a little courtesy call next time okay?\"\n\n\"Yeah, I know, that was kind of shitty. I didn't even think about my phone until I was on my way to my dad's house and it just didn't seem like the right time to call.\"\n\nIt got quiet for a minute. \"I'm going to miss you.\" I started crying.\n\n\"Carrie, stop, you are going to wreck your new car. You aren't going to miss me. I mean, you aren't going to switch schools or something stupid like that are you?\"\n\n\"I don't know. I don't know what is going to happen or how long. I am totally out of control and have no say in what is going on.\"\n\n\"Carrie. Your dad is not going to pull you out of school in your senior year. Nobody is that big of a dick. Stop crying Carrie, seriously, pull over!\"\n\nI pulled to the side of the road and wiped my eyes. \"Sorry. I love the car, but hate ... well, you can't ever tell my mom this, but Kelly is kinda cool.\"\n\n\"So, what's the problem then?\" Julie asked.\n\n\"I am not home! Yeah, its great, their house is bigger, my bed is huge, this car is incredible. But, it's like the first time I haven't had you within a block of me. And, well, I hoped to not have this until next fall and it's starting to hit me.\"\n\n\"Oh my God Carrie, you are a fucking idiot!\" Julie screamed at me. \"So, what do you think, after high school we are never going to see each other again? You think once we go to different colleges we won't ever speak? You think once we graduate and get jobs we won't have lunches together? You think once we marry and have kids we won't get them together to play? You are growing old with me you stupid whore. We always planned that! I will hunt your dumb ass down if you try to change it.\"\n\nI started laughing. Julie started laughing. And I cleaned my face a little and we headed to school.\n\n\"God Carrie you really are mental sometimes. But I love you.\" Julie said as we pulled into the parking lot.\n\n\"Where you going to park?\" Julie asked as we drove up front to show off.\n\n\"As close as possible.\" I smiled and honked my horn a lot.\n\nFor the next few minutes, Julie and I were the closest thing to celebrities. We were in the hottest car at school and it was MINE. Julie and I leaned against it and posed for pictures. The cheerleaders went absolutely nuts. Our friends screamed like they were at a rock concert. It was the longest fifteen seconds of fame I had ever had.\n\nFinally, we had to park and we moved the car to the lot, carefully placing it out of door range of the neighboring vehicles. We got out and strutted, yes my bitches, we strutted across the parking lot.\n\nI felt awesome. It was way overdue for me to feel this good.\n\nNot only this, but there would be no Darla's games today. I could be me for the first time in way too long. \n\nJulie and I strutted to class. We had the hottest car in school and our celebrity status continued in the hallway when people were congratulating me on my new car. \n\nWe walked into class and it was like I never became a cheerleader. Gina, Cat, Sarah and Jen all crowded around for the details on how I got the car and Julie was every bit as much in the spotlight as I was. It was like this nightmare had never happened and life was back to normal. We started planning senior week, like the last two weeks never happened. I was happy. I should have known better.\n\nWhen the bell rang and our teacher told us for the second time to take our seats, we were all smiles and laughs. That was when my first cell phone buzzed. I looked at the phone and it was a message from Darla.\n\nI KNOW SOMETHING WENT DOWN LAST NIGHT I NEED TO KNOW WHAT NO GAMES TODAY GLAD ABOUT THAT SINCE YOU GOT NINE OFF YESTERDAY YOUR 24 HOUR REPRIEVE ENDS AT THE END OF SCHOOL TODAY MEET ME OUTSIDE AT YOUR NEW CAR -- DARLA\n\nDamn, thought I had the whole day off. Well, at least this school day was going to rock. I paid attention in class for the first time in so long I nearly wept at the joy of it.\n\nAt the end of first period, Julie grabbed my hand and squeezed it. \"You so deserve this Carrie. See you in Social Studies.\"\n\nWe left the classroom together and left on our separate ways. When I went into the math class, the cheerleaders all squealed and ran up to me and we jumped up and down together. I was so happy. \n\nWhen the bell rang and we finally took our seats, Courtney was on my right, Farin on my left. Courtney tuned towards me and spread her thighs wide and pointedly looked down at her crotch. I laughed at her. \"Not today Court, I got the day off.\"\n\nShe leaned into me and whispered into my ear. \"I thought you owed me?\"\n\nI looked at her. She smiled. I whispered, \"Court, please, cut me some slack today, I'll make it up to you. I just really need this one day.\"\n\nShe stopped smiling for a second. Then she smiled again. \"Yeah, go ahead, have your day.\"\n\nI squeezed her hand and whispered \"Thank you.\"\n\nAnd the day was wonderful. No games. No torments. Even Rebecca left me alone.\n\nI made every class on time and I participated and I felt normal.\n\nAfter gym, I reluctantly went to see Mrs Lane, as I had been instructed. She was waiting for me and gave me a few moments to settle down into my seat before beginning to shrink my head. \n\n\"I understand you had a great deal of change in your life last night Carrie.\" The pretty blonde began.\n\nI guess I was smiling, because she gave me a smile in acknowledgement. \"Well, yes. Some good, some bad. It was like I told you it would be, my mom sent me to live with my dad.\"\n\n\"I see. And your father gave you the new car that everyone is so excited about?\" Mrs. Lane pressed.\n\n\"Well, yes. Apparently...\" and I realized, I was about to open up to this woman. How could she have gotten me here this easily? Better make her work for it or she'd be writing a book about how talented she is at getting teens to talk.\n\n\"What I mean to say is, I like the car, but I had to move out of my mother's house. I had to move an hour away from school and my best friend. Dad and Kelly have been very nice, I guess making up for the last six years. It's great to have the car and the nice bedroom, but it still sucks. A lot.\" I finished, hoping to make her feel bad for forcing this on me. She showed no sign of getting my intended anger.\n\n\"I understand you made it to all your classes on time and looked more relaxed today than you have seemed in awhile. According to your teachers that I spoke to.\" Mrs. Lane said. If she only knew the reason I was so relaxed was that I didn't have to play any of Darla's games today.\n\n\"Yeah, so can I go back to art class now?\" I don't know why I felt like being pissy about it, I was actually in a pretty great mood.\n\n\"Let's see how the rest of the week goes.\" Mrs. Lane suggested. \"How do you like school Carrie?\"\n\nI actually always did like school before I met Darla and had Rebecca and Courtney to contend with. \"I like it.\" I offered.\n\n\"How do you like this school?\" she asked.\n\nWith the emphasis on this like she had just done, I was rather fish mouthed for a moment. You know, like opening and closing my lips for a few seconds, like a fish trying to breathe water when it is pulled up into air. \"I love this school Mrs. Lane. Please don't try to make me switch schools.\" I did become a bit more polite with that comment. I wasn't sure if she had the power to make me change schools, but I knew I didn't want to do it.\n\n\"I have no intention of making you switch schools Carrie, I just wanted to make sure there are no problems with any of the students here that is detracting from your enjoyment of school.\" She assured me. \"However, it is a reality that transferring would significantly lower your driving time and I'm sure you would make new friends at a new school quite easily.\"\n\nI started breathing faster. I could feel my chest rising and falling and the blood pumping into my ears. I looked Mrs. Lane in the eyes to beg her. \"Please don't Mrs. Lane. All my friends are here. My whole life is here. I do not want to switch schools. It's my senior year!\"\n\nMrs. Lane studied me silently for a moment and then offered a nice smile. \"Carrie, I was only making a suggestion. I'm not trying to push you to decide either way. You are right, it is your senior year and I think it best you stay and deal with your situation.\" Mrs. Lane said kindly.\n\n\"Would you like to talk about your current situation?\" Mrs. Lane then added.\n\n\"Wh-what situation?\" I asked, a bit confused and concerned about what she might be implying.\n\n\"Well, let's start with what happened to change your attitude at school. Was it just discovering that you might be interested in women as opposed to men or was there something else that initiated these recent changes?\"\n\n\"I...\" did she know something? I couldn't imagine she did or she would be a bit more forthcoming. Who knows? Maybe she would call the cops and get me out of this mess. I thought about opening up, but that would just bring too many follow up questions and what the hell would Darla do to me then? Jill said she could make people disappear, I didn't want to find out if that was true. I guess the concern on my face showed and Mrs. Lane broke the long silence.\n\n\"Carrie, anything you say to me is confidential. Nobody would ever know. Is there someone coercing you into doing things you don't want to do? Are you afraid of someone? Your parents and I are here to help you. We want to help you.\"\n\n\"What are you talking about?!\" I said a bit louder than I felt. I needed to get this woman off the track she was on. \"Look, I don't know what you think, but my relationship with Fa...\" I caught myself before I gave her Farin's name. \"My relationship is completely consensual. Sure, we have had problems, but who doesn't? There is no coercion or fear or whatever it is you are thinking. I love her and she wants me to be open about it and I'm not ready to be the school's gossip by coming out in public. I am fine. I was fine. I will be fine. I don't need or want this conversation with you.\" Maybe a bit over the edge there, but I was starting to feel backed into a corner and needed to create some space.\n\n\"I see.\" Mrs. Lane answered. \"Well, Carrie, I know how difficult it must be for you right now, particularly if your girlfriend is pressuring you to come out with her to the whole school. Is she publicly lesbian? Does the school populous know about her preferences for women?\"\n\n\"I don't know. Some people do. And some people know about me too. I told my best friend and she flipped out on me when I told her. If she reacted like that, can you imagine what other people would say about me?\"\n\n\"Yes, I suppose I can imagine that. Carrie, you shouldn't feel pressured to tell the world about your sexual preferences. It is certainly true that it is nobody's business but your own and as long as you and your girlfriend are happy, then that is all that matters. High school is a tough place to be different, I understand that. And it is only for another eight months and you will find college and the rest of your life to be much more open and accepting of differences in behavior. However, I really do think it would be good for you and even your girlfriend to attend some group counseling meetings with other gay and lesbian high school students. I can get you in for next Wednesday evening if you like.\"\n\n\"I don't want to. I don't want to go professing my sexual preferences to a bunch of ... strangers.\" I almost said something derogatory, but gladly caught myself.\n\n\"I'll tell you what Carrie. If you agree to go to these meetings on Wednesdays, I'll let you go back on the cheer squad.\" Mrs. Lane bribed me.\n\n\"Wow. So you are going to use extortion now?\" I shot back at her.\n\n\"It isn't extortion Carrie. You can still get back on the squad without these meetings, I'm simply providing you with an option to escalate the timing.\" Mrs. Lane looked at the clock on the wall. \"Unfortunately, we are out of time for today. We can talk about it some more tomorrow, give it a thought tonight.\"\n\n\"This really ISN'T helping Mrs. Lane!\" I shot as I gathered myself up and headed for the door.\n\nThe bell rang as I exited the counselor's office and I went to my locker to deposit what I didn't need for homework tonight and retrieve the books that I would need. I jockeyed through the normal bustling students and felt the occasional brush of a hand against my ass as I worked my way out the front doors.\n\nI walked outside and Darla was there, waiting by my car and I pondered the leniency of security here at my school. I walked up and she smiled and told me to get in, she wanted to see how it handled.\n\nOnce we were inside the car, she asked, \"So, what happened. And most importantly, what did you tell them. I know Jill said to say whatever you needed to say, I just want to know what to expect. Are the police coming for me?\"\n\nI looked at her completely confused and she laughed. \"Blackmail is illegal you know?\" \n\n\"Oh hell Darla, I didn't say anything about that. But, apparently several of my teachers are upset with me showing late to class and being distracted all the time and they complained to the school counselor. I'm off the cheerleading squad for awhile and my mom sent me to live with my dad.\"\n\n\"I told him I'm just going through lesbian stuff and he seemed okay with that. He really seems happy to have me living with him.\"\n\nShe smiled and exhaled loudly. \"You did good little girl. You want to end the game or go for it again tomorrow?\"\n\nI looked at her. \"I have a choice?\"\n\nShe laughed. \"No, I was just hoping you'd say go for it to ease my conscience over your trouble at school. Now, we have an issue. I know you are supposed to pick Julie up after practice, but there is the little matter of the pencils that have to go up your ass right about now.\" She grinned.\n\nMy face dropped instantly. Darla laughed when she saw it.\n\n\"Turn left up here.\" She pointed out an upcoming road. All of the joy of this formerly perfect day was drawn out of me and I suddenly felt miserable.\n\n\"W-where are we going?\" I stammered.\n\n\"Well, we are going to see your good friend Linda.\" Darla answered with a smirk. She waited through the following silence for my expected follow up question.\n\n\"Who is Linda?\" I asked.\n\n\"Why, Linda is the girl who took those pencils for you. Now she would like to see you suffer the same.\" Darla said with a bright smile.\n\n\"Oh.\" I turned left and drove down the next block to a stop sign. Darla said nothing, so I continued on straight.",
        "\"We decided to let you put them in yourself, until you swear you can't take anymore. Then Linda and I will help you get to your goal. How many was it anyway?\"\n\nI focused on the road as we approached another stop sign. \"I... umm... twenty...\" I couldn't remember if it was twenty-seven or twenty-nine. I decided to error on the side of caution. \"twenty-seven?\" I asked.\n\n\"Actually, it was twenty-nine. I'm surprised you didn't remember that seeing how Linda was kind enough to take them all up her ass for you. I don't think it has closed up properly even now, a couple of days later.\"\n\nI stared at the road open-mouthed for awhile. \"Darla, I'm scared.\" I finally confided in her.\n\nDarla laughed. \"I would be too. I bet her asshole looked obscene when it was filled by twenty-nine pencils. I had to go buy a couple of packages of them to see how wide that would be and there is no way I'd want my asshole opened up that wide. But, you still get your virginity in one hole to enjoy. I'll never have that again either. Besides, with all the plugs and dildos, you should be pretty elastic down there by now. But, I'll make you a deal, you can stop us if it gets to be too much and I'll just add a day for every pencil that we are short of twenty-nine. And if you take more than twenty-nine, you can win a day for every additional pencil you take up your little ass. How does that sound?\"\n\n\"After all, you got nine days off yesterday, you could stop at just seventeen pencils and break even with that and have tomorrow to win back more days. Seventeen isn't nearly as bad as twenty-nine. That is less than the plug you took yesterday. So, there you go, an out for you since you are so scared and have been through so much yesterday.\"\n\nWhile it seemed a nice gesture, yesterday was no cake walk and I was not wanting to relinquish those twelve days I had won with my hard efforts. The exception of course, being Brad, who had completely confused me with his actions and words. I'd see how many I could handle and though it likely wouldn't be twenty-nine, I'd be sure it was more than seventeen.\n\n\"Turn here at the house with the brick front.\" Darla interrupted my thoughts.\n\nI turned into the driveway behind a jacked up black pick-up truck and put my car in park. There were two other cars in the driveway on the right side, I didn't recognize the models, but they were older cars and looked to be restored muscle cars from a different time. \n\nThe house looked nice from the outside. It was a rancher, a bit old, but well kept. The yard was small but had a very nice flower bed along the front walk with a plethora of flowers that seemed welcoming in spite of the dread I felt in my heart. \n\nDarla climbed out of the passenger door and closed it and waited at the front walk for me to likewise exit the car. With trepidation eating away at my heart, I turned off the ignition and taking the keys with me, I exited my car and locked the doors with the key fob. Darla started towards the front door once I was behind her and she rang the doorbell.\n\nA brief few seconds later, the door was opened by a quite muscular man in a pair of jeans, work boots and a white wife beater. He was handsome, but definitely a bit older, maybe in his thirties. He looked at us and smiled and welcomed us inside, pushing the door wide open with a gesture. \"Well Darla, so nice to see you again.\" His voice was deep. He was quite tall as well, somewhere around six feet tall and despite his kind demeanor, he intimidated me. I wasn't expecting a guy to be there to be honest, so it took me aback and I stood at the door for a few seconds with a confused look on my face.\n\nDarla gave the guy a big hug, which he returned with a squeeze to her ass. \"Have you missed me Rod?\" She smiled and gave him a peck on the lips. \n\n\"Now now Darla, you had your chance to make me an honest man. I only play when Linda is invited now. Well, for the most part.\" He chuckled.\n\nAs if his eyes hadn't barely left me from the time he opened the door, he nodded towards me and Darla smiled over at me with him, the two of them still embracing as they looked at me standing in the doorway. \"You must be Carrie. Come on in and close your mouth before you catch a fly.\"\n\nI realized that my mouth was hanging open and blushed a bit in embarrassment at that fact. I took a step inside the door and looked past them and froze again. There were seven other people in the living room besides Darla and Rod. My eyes went wide and I couldn't move. What was going on here? I took a step back as I felt the heat of eighteen eyes on me.\n\nDarla reached out and took my hand. \"It's okay Carrie. They are just here to watch, much like your cheerleader friends when Linda quite literally took it up the ass for you.\" She turned and smiled at a girl around my height and waved her over. \"Carrie, this is Linda. Linda, this is Carrie, the girl you did such a huge favor for yesterday.\"\n\nShe didn't really look like me, but her body, from what I could see of it, was quite similar. The height, the breasts, the relative size of her body overall, it was apparent why she was chosen to wear the gimp suit compared to the other girls in the room. She had long, dirty blonde hair lying straight and half way down her back. Her breasts were perhaps a little bigger than my own, but comparable. She was definitely a little older than me, probably in her mid-twenties, though I'm not very good at guessing ages. She was smiling with very full lips at me and I caught her tongue dart out briefly to lick her lower lip as she crossed the room and ended right in front of me with her hand extended in greeting.\n\n\"It is such a pleasure to meet you again Carrie.\" She said in a very sultry voice.\n\nWe really hadn't met, though she had eaten my pussy and I was wondering now if I would have to return that favor as well. I mumbled, \"N-nice to meet you... umm... I mean face to face.\"\n\nShe laughed softly at that and I took a moment to glance at the other people in the room. Aside from Rod, Darla and Linda, I had no idea who these other six people were and I was becoming more and more nervous by the second. My breath was coming in going in short gasps and I was afraid I would hyperventilate. The other six people were three guys and three girls. They ranged in age from the youngest girl looking to be around my age to the oldest guy looking to be around forty years old.\n\nThe girls were all dressed suggestively, but not like strippers. It was still pretty warm for late September, and they all wore either shorts or short skirts. Amongst them were a red haired girl with pale skin and as if catching that I was now looking into the room, they all stood up as if to invite me to check them out. \n\nThe redhead was quite thin and tall, the tallest woman in the room, probably close to six feet tall. I'd guess her to be around twenty-five. Her breasts were probably the same size as mine, but on her thin, tall body, they seemed much larger, or at least more pronounced. Her top was a half shirt that left her tiny belly bare and disclosed the curve of her hips where they were revealed above her brief denim skirt. Her skin was rather tanned, either she had a lot of time for sun worship or she frequented a tanning bed. Her eyes were emerald green and definitely stared right into my own until I uncomfortably turned away.\n\n\"How rude of me.\" Linda smiled as she took my left hand in her right and led me towards the group of voyeurs. I couldn't help but notice my hand trembling as she held it. \"This is Candace.\" She first introduced me to the tall redhead, who I guessed she had seen me making eye contact with, as if it were a good place to start.\n\nCandace extended her right hand and I met it with my own. She squeezed my hand softly and smiled, looking right into my eyes until I had to turn away. I noticed the wide smile on her lips and perhaps a glimpse of her tongue licking them out of my peripheral vision.\n\n\"And this is Candace's boyfriend Gary.\" Linda motioned to the tallest guy in the room. He must have been six foot three. He was probably in his thirties, very tall, very toned, as was belied by his tank top. I could almost see his abs through the tightness of the shirt. His dark hair was very well kept and he had only a small goatee on his chin as any facial hair. His hand dwarfed mine and though he held my own gently, it was frightening to think of what this guy by himself could do to me, not even considering the other eight people in the room.\n\n\"A pleasure to meet you Carrie. Darla has told us much about you, it's great to finally put a face to the stories.\" Gary smiled. I looked into his brown eyes for the briefest of moments before jerking them away in embarrassment. I must have blushed and he noticed. \"Don't be shy. We actually all think you are a pretty amazing girl. I don't think Candace would have been able to handle what you have been through.\" His smile was kind, but not consoling. Had Darla told them everything? This was so out of control.\n\nHe finally released my hand and Linda gestured to the next guy in the line of strangers. \"This is Bill, he is with Claire.\" She gestured to the roughly five foot ten fortyish guy with slightly graying hair. His face had some wrinkles that lent me to the guessing of his age with the hair color. His blue eyes were kind. His skin was quite fair, which I supposed went along with the blonde hair that covered his head. His hair line was slightly receding, but not terribly noticeable by the way he brushed it until you got up close. He was the most professionally dressed person in the room, wearing khacki pants and a long sleeve green shirt and a pair of brown shoes. I guessed him to be white collar. He, as everyone in this room, was attractive. Nobody was model material, but there were no ugly people in the room.\n\nHe shook my hand with a \"A pleasure.\" And I looked to his girlfriend, who closed the gap to take my hand upon the relinquishment of Bill. Claire was around 5'5\" with short, black hair. I figured her to be around twenty-nine years old. Her skin was even paler than Bill's, which made her red lips stand out even more than the shiny gloss would have done on my own. Her brown eyes were very large. Her body was very curvy, the thing that stood out the most, was her breasts. They must have been a double D cup. They were quite huge. \"I've been looking so forward to meeting you Carrie, I was starting to think that Darla was making you up. You are just as delicious looking as she described.\"\n\nI caught her giggle as her words made my hand shiver convulsively. However, she did release my shaking appendage to allow me to be introduced to the final two people in the room. \"Zackary and Jamie.\" Linda introduced the last two as I took the large hand of the most muscular guy in the room. He was around six feet tall and his body was wide. His arms were bulging masses that made me think instantly of the gym rats on the football team. Not the receivers or quarterback, no this guy was more like a lineman. He was just huge. His hair was brown and buzzed short and even all across his head. His eyes were likewise brown. His chest looked like ... well it was huge. \"Great to meet you Carrie.\" Zackary said as he held my shaking hand. \"Jamie has been dying to finally set her eyes on you, hasn't stopped talking about since we found out we were going to meet you a few days ago. She's been like a school girl going on her first date I swear.\" He laughed. I failed to find the humor in any of it.\n\nAs my hand mechanically went to Jamie's I was taken in by her beauty. This girl was pretty close to a model. She was a good six inches taller than my 5'1\". She had the shiniest brown hair that I have ever seen in my life. It was so bouncy and flowing down to the top of her ass. Her eyes were that shade of green that reminds you of a serene pond with lily pads. Her lips looked practically sculpted. Her body was just perfectly shaped. Not skinny, not terribly curvy, I suppose the perfect body is a very subjective matter. But to me, that gentle curve of the hips that leads to a gentle curve at the waist that leads to the gentle curves of the breast is perfect. Like the entire body just flows from the neck down to the calves.\n\nAnyway, she took my visibly trembling hand and smiled at me like she wanted to devour me right then and there and if it hadn't been for the circumstances surrounding our meeting, I might have melted like butter. \"I feel like I know you, but now that I meet you for the first time, I know that isn't true at all.\" Jamie smiled. \"I hope we get the chance to get to know each other sometime. Perhaps we can get together for dinner one night?\"\n\nI had no idea how to react, but under the circumstances, I was not in any condition to be hit on or asked out. I shook through my whole body and felt on the verge of tears or a seizure. I guess she saw the uncomfortable expression in my face and frowned softly as she let my hand go.\n\n\"It's just the situation Jamie.\" Darla said from behind me. \"I'll have her call you next week to set it up.\"\n\nI looked back over my shoulder shocked at Darla. She was pimping me out like I was her prostitute? I opened my mouth to complain, but before a sound left my lips she held her finger to her lips. \"Don't say anything stupid Carrie. It's dinner, not sex.\" As if she could read my mind. \"We aren't all horny teenagers with nothing but sex on our minds.\" She laughed.\n\nWhen I turned back, I noticed the three couples sitting back down and Linda was still holding my left hand. \"I suppose there is no delicate way to do this.\" She smiled at me. \"Why don't you go ahead and get undressed and I'll go get the lube and the pencils from the table. I think the coffee table will be best, I'll put a couple of towels down so it will be easier on your knees.\"\n\nAnd Linda released my hand and went down the hall to retrieve the towels and every eye in the room was on me. They were watching expectantly. I just stood there, clasping my hands together in front of me and rubbing them nervously.\n\n\"Anytime Carrie.\" Darla stated flatly.\n\nI turned to look at her, wondering what she meant. She motioned to me and I still didn't get it. \"Take your clothes off Carrie.\" She finally made it plain what they were all waiting for. Just then, Linda re-entered the room and laid some thick towels down on the coffee table in the center of the living room.\n\nI looked out of the large picture window in front of the house, then back at Darla. Rod broke in, \"Oh, yes sorry, I guess the neighbors shouldn't be getting any free shows.\" He laughed and drew the curtains on the window.\n\nI took my top in my hands and I was shaking so hard I couldn't do anything. I couldn't even get my clothes off from shivering so badly. \"Carrie, knock off the bullshit.\" Darla said, and I could detect a slight hint of anger in her tone. \"Take your clothes off, you don't have to do a strip tease or anything, just get them off and get on all fours on the coffee table. If I have to help you, it will be worse, I promise you.\"\n\nI started crying, I couldn't help it. I had never exposed myself to strangers outside the showers at school and everyone looked the other way in the locker rooms, not wanting to be accused of being a lesbian. They were all staring at me. They were all waiting to see me naked. They were all going to watch me put pencils in my own ass until I was so full I couldn't take anymore. It was too much.\n\nStill, I managed to pull my top up over my head. Of course, I didn't have a bra on, so it was quite bare breasts that I exposed as they popped below the rising shirt and the bouncing effect made me cringe. I held the shirt over my face longer than necessary and let my tears soak into the material before I continued the journey and lifted my shirt free of my head. I then let it drop off my arms onto the floor in front of me. \n\nI stood there, wearing nothing but a skirt, socks and shoes. I looked at the leering eyes of the nine other people in the room and started shaking again. I fumbled at the button on my skirt, but couldn't control my hands and failed miserably. The inept manner in which I was trying to undress made my trepidation increase tenfold and I started crying again. I didn't make any sound, I just felt the tears trickling down my face. \n\nI started yanking at the button, trying to get it disengaged from the accompanying slot in the skirt, but it was for naught. I looked down and caught sight of my breasts bouncing as I continued in my fruitless efforts and I looked up through bleary eyes. Every eye was glued to me. It was so humiliating. I wanted to run. I knew if I did there would be hell to pay from Darla. She hadn't said anything since her last order, but I knew she must be getting impatient. \n\nI turned to her, my hands still trying to unclasp the button. \"P-please? I ... I c-can't.\"\n\n\"Jamie, why don't you give her a hand with her button.\" Zachary offered. I turned to his voice and his eyes looked at me reassuringly. There was no anger or impatience, it almost looked like pity. I saw Jamie standing up and she smiled at me softly. She brushed the tears from my cheeks. \"It's okay.\" She whispered. \"Let me help. You are going to be fine Carrie, I know it. You couldn't have come this far if you weren't strong enough to handle this.\" I wasn't sure if anyone else could hear her words, but it didn't matter, because I just stood there as she knelt down in front of me and undid the button on my skirt. She slid the zipper down and then eased my skirt down over my hips to fall below them around my feet.\n\nI followed her lead as she guided my feet out of my skirt. Looking down, I was happy to see that she was looking at my feet, not staring at my bald pussy. She untied my shoes and helped me out of them and my socks as well. And then I was naked. I was completely naked in a room mostly full of strangers.\n\nI clinched my eyes tightly closed, wishing myself away. 'There's no place like home, there's no place like home, there's no place like home.' I thought. I might have even clicked my heels three times. But, when I opened my eyes, there I was, naked as the day I was born and being leered upon by nine pairs of eyes. \n\nJamie then leaned in and kissed my cheek. I could smell her, whether it was perfume or body wash, she smelled very nice. Her lips were very soft and reassuring more than sexual in their touch. She whispered into my ear, though with the silence of the room, I think her voice probably travelled to them all. \"It's okay Carrie. You have a beautiful body, don't be ashamed of it. Would it help if I got naked with you?\"\n\nI gulped and shook my head no. I didn't want everyone else getting naked, that would terrify me. I clinched my eyes tightly again, wishing it all away. \"Okay then, let's get you started shall we?\" I felt a gentle pressure on my shoulders and sobbed softly as I sunk to my knees. \n\n\"All fours and you should probably lube up a bit first.\" Darla instructed. \"You want me to squirt it up there or do you want to do it yourself?\"\n\nI trembled onto my hands and knees. \"I...\" \n\n\"Just spread your cheeks Carrie.\" Darla told me with a voice of frustration. I did as instructed, placing my forehead on the floor to spread my ass cheeks, one with each hand. \n\nI felt the nozzle touch my anus and then press forward, stretching it slightly. Then she squeezed and I could feel the lubricant squirting into my ass. I cringed at the feeling. Next, I felt a lubricated finger pushing into my ass and fucking it in and out. Then I felt a second finger join the first. Then I had three fingers driving in and out of my asshole. I was so humiliated by this. It had been bad enough suffering in the gimp suit, but these strange adults were all watching me completely naked, seeing every inch of me, even my face.\n\n\"Carrie, I'll hold your ass open if you want.\" Jamie offered as she put a pile of pencils in front of me.",
        "I sobbed loudly one time. \"Ok-kay.\" I stuttered, shivering violently. I released my ass cheeks and felt her hands quickly squeezing them and spreading them open. I took a single pencil in my right hand and reached back to touch my anus with my left hand, as a guide to find what I was aiming for. It wasn't hard, I probably could have felt my way with the pencil, but now I just wanted to get this over with as soon as possible. I hated being a sick show for these perverts.\n\nI pushed the first pencil, eraser first, into my ass. It wasn't painful at all of course. Compared to the things that my ass had experienced lately, it barely registered besides the feeling of something up my ass. I looked around the room and saw eyes staring at my ass and some at my face and others darting back and forth between the two. I exhaled and went back with another pencil. It slid in quite easily as well.\n\nWhile this was humiliating as hell, the first six pencils went in quite easily. Go ahead, take a half dozen pencils and put them together in a circle, not very thick is it? At that point, I just started pushing pencil after pencil into the middle of the bunch that were sticking straight out of my ass into the air. I mostly tried to ignore the voyeurs and get it over with as quickly as possible as I fed my ass pencil after pencil.\n\nBy the tenth pencil, I could seriously feel it, the width, the beginning of a stretching of my sphincter. I had still had wider, but being young and elastic, it closed up when something wasn't inside. I shook as I felt the stretching sensation and looked around. All eyes were still on me of course. I let out a squeak, which brought all the eyes to my face and caused me to blush.\n\nI closed my eyes and started pressing pencil number eleven into my back entry. Each pencil now added a level of depravity to the stretching of my anal muscles. I could feel it spreading, but making room for each added stretching diameter. By the fifteenth pencil, I felt quite well stretched, not as much as the bulbous flare of one of the plugs, but certainly more so than the base that held it open for an hour or more at a time.\n\n\"I...\" I gasped as I pushed number sixteen inside me. \"I can't Darla. I can't do it.\" Even as I said it, I was pushing number seventeen inside me. I was over half way there, but was starting to seriously doubt that I could make it to twenty-nine. I realized I could quit right now and be even with the twelve days I had gained. Surely, I could fit at least one more and keep one of those hard earned days. \n\nReaching back, I grunted slightly as I pushed number eighteen into place. Jamie squeezed my ass cheeks seductively. \"You are doing so good Carrie. Keep going.\" She encouraged.\n\nI pushed in two more, each time grunting softly at the new diameter that my ass had spread. \"I think I am done.\" I moaned softly.\n\n\"Nonsense.\" Darla sneered. \"You are barely stretched beyond the base of that big plug you had up your ass yesterday. Keep going.\"\n\nI sobbed softly and pushed number twenty-one into place. It didn't burn yet, but it was definitely stretching me out now. I kept pushing, four pencils later, I felt the burn start, it was getting pretty stretched. \"I think...\" I was suffering from labored breath now, \"I think I want to stop now.\" I gasped.\n\nLinda climbed down from her seat and knelt on the floor in front of me. She held my face in her hands until I opened my eyes. I knew they were glazed over and she was smiling at me. \"Surely you can take four more.\" Linda whispered. \"I did. You are so close now Carrie.\" She picked up a pencil and handed it to me. \"One more, let's do that. Look at it, so small, it can fit in there easy.\"\n\nI took the pencil from her and pushed it into the middle of the twenty-five already stretching my little asshole. I grunted louder as it pressed inside. She handed me another and another. I groaned louder each time I pushed one in. Between Jamie squeezing and rotating my ass cheeks and Linda caressing my face, I felt so turned on now in spite of the pain in my stretched out ass. I was breathing so hard now, I thought I would hyperventilate.\n\nA tear trickled down with the pain of number twenty-nine. I had done it. I had tied and kept all my days in tact. One more would be another day. Surely, I could do one more. I took the pencil from Linda and grit my teeth as I pushed. It hurt so much and I collapsed onto my belly, the thirty pencils sticking in an upward angle as my body shook. \"Okay... no more.\" I gasped.\n\nLinda kissed my forehead softly. \"Great job Carrie. You did very well.\"\n\n\"Oh my!\" Darla suddenly exclaimed. \"I completely forgot about the other thing you had to do Linda. But, I suppose with her doing the pencils herself it would have been difficult to give oral satisfaction to us.\"\n\nI grunted from the stretching feeling in my ass, but was relieved that I seemed off the hook in the regard of providing 'oral satisfaction'. \n\n\"I guess you can get started on it now. I'll pass, but I'm sure everyone else would like a little relief.\" Darla added.\n\nI turned my head around in her direction and stared daggers at her. \"Tell you what cupcake.\" Zack smiled at me. \"I'll take a rain check.\"\n\n\"Same here.\" Jamie smiled at me. I was relieved when they all sounded their postponement and I was at least temporarily off the hook.\n\nDarla giggled. \"Well, get your knees under your ass and let me just get a quick picture. You can face forward so nobody will know it's you.\"\n\nI posed as requested and saw a few flashes before Darla told me I could take the pencils out. \"Just a second Carrie, I'll get you a bucket.\" Linda offered and ran off to the kitchen, returning with a plastic mop bucket. \"Just squat over that, probably the easiest way to get them out.\"\n\nI blanched. \"I... I can't do that in front of you all, it would be too... weird.\" I mean, come on, it was like shitting in a bucket in front of Darla and a group of strangers.\n\n\"Suit yourself, it would be faster than pulling them out one or two at a time is all I was thinking.\" Linda offered.\n\nI reached back to pull the pencils out, but I couldn't quite wrap my hand around the lot and even what I could grab was a bit painful when I tried to pull. \"Damn.\" I said in frustration.\n\n\"Want some help?\" Jamie offered sweetly.\n\nI cringed, but acknowledged that I did indeed need help in dislodging the pencils. \"Please.\" I whispered.\n\nJamie knelt behind me and I felt pain as she pushed her fingers between some of the center pencils and then easily pulled them out, dropping them into the bucket. She went back again and again, the relief instant and then greater with each pencil removed from my overstuffed ass. When the last few were removed, I reached back to feel the slight gape in my ass and I shuddered.\n\nJamie giggled. \"Don't worry sweetie, you are so young and elastic, it will close up in a few hours.\"\n\nI nodded. \"Can I get dressed now?\" I asked meekly.\n\n\"If you must.\" Linda laughed. \"Believe me, none of us will mind if you want to hang out naked for awhile.\"\n\nI laughed with the rest of them and slowly got up and started retrieving my clothes. My ass was sore, but it wasn't the end of the world. It actually was less painful than when I had been fucked by the dildos by a long shot. When I had dressed, I looked at them all and didn't feel like a freak. I actually felt like they appreciated my show very much. I thought I would feel like a disgusting sub-human. Their smiles were kind and they thanked me for coming to their home and invited me to return anytime. \n\nI hugged them each and they individually gave me praise and appreciation for all I had been through and their wishes for my best in the remaining weeks. As Darla and I were about to leave, Jamie suddenly broke forward like she had been hesitating on doing so and realized she didn't want to miss the opportunity. She grabbed my cheeks and kissed my lips softly. I was surprised and my eyes flew open, but her kiss wasn't forced roughly and I returned with a soft pursing of my lips.\n\nShe took my hand and put a piece of paper in it. \"My phone number. If you ever feel alone and need to talk to someone, please, I mean this, don't hesitate.\" She smiled reassuringly and softly patted my hand.\n\nI smiled and thanked her and then got in my car with Darla for the ride back to school. All in all, it wasn't such a horrible experience as I thought it would be, though my ass was sore and I was still shaking a bit from exposing myself to a room full of strangers.\n\nAs we pulled onto the road, Darla started up conversation. \"You handled that very well. And you got another day off for the thirtieth pencil, congratulations.\"\n\n\"Thanks.\" I smiled. Unless my calculations were off, I was down to thirty days now. \n\n\"Now, tonight, nothing special, enjoy some time in your new home. Tomorrow, get back on the program. Did you take your enema kit and all the other things that you need with you to the house?\"\n\n\"Yes Darla.\" I answered.\n\n\"Okay, because we are being watched, or rather you are being watched so closely, the games are off for tomorrow. Don't look so relieved. You still have quite a party tomorrow night, so get a good night's rest, you are going to need it. Do you remember how to get to my house?\"\n\n\"Not really, but I can GPS it if you give me the address.\" I replied.\n\n\"Okay, be there at 8, you can't take your car there, everyone will know it is you. I'll drive you to the party and Brad will sneak you in. You will get more instructions if you need them. Basically, a cock comes through a hole in the wall and you suck it, swallow the cum or shoot it on yourself every time. I'll come to hose you down and take you home when it is time.\"\n\nI felt like I would vomit just thinking about it. \"Darla, what if someone tells around school who it is? I mean, if I do this, how do I know for sure that Rebecca won't go telling the whole school that I was the one in the closet? I am ... I think ... doing everything you ask, but this is pretty extreme, even worse than the gimp suit in the bathroom. Well, at least similar to it. You do get that my life would be completely ruined if people found out it was me in either of those situations?\"\n\nDarla looked at me, I could see that in my peripheral vision. \"Look Carrie, it was my mistake to bring Rebecca into this thing and I admit that. It was a poor judgment call on my part. Unfortunately, if I take her out of the mix now, it frees her up to pretty much do what she wants as I have no hold over her. I mean, there is Jill's threat, but I'm not sure how seriously Rebecca believes it. She really hates you. I mean, I have had some girls and women not like me in the past, but she really, really hates you.\"\n\n\"Now, that probably isn't very reassuring to you and I'm sure that is the same vein in which you were thinking. But, here is the deal. You need to trust me. It will not happen. I have spent a lot of time talking to Rebecca and she is genuinely thankful for this opportunity to humiliate you and gain some vengeance over you. I know you don't trust her, but I do. So, just trust me, nobody will find out unless you tell them. The only other ones that know are Brad and Farin and neither of them will talk either, they both love you. I find that hilarious, particularly in light of the fact that Brad is the reason Rebecca hates you so much, but there it is.\"\n\nI felt the need to interrupt. \"Darla, Brad does not love me. He loves Rebecca.\"\n\nDarla laughed. \"If that is what you need to believe. Anyway, I think you will get to give Julie a ride home after all. Enjoy.\"\n\nWhen we pulled into the school parking lot, the cheerleaders were just getting out of practice and I offered Julie a ride home, which she, of course, accepted. She gave Darla a very nasty look and Darla just laughed louder as she got out.\n\n\"You want to go back to my house?\" I asked Julie. Then I remembered, I was like an hour away now. I frowned. \"Erm... sorry, wasn't thinking.\"\n\n\"You rarely are.\" Julie laughed. She took out her cell phone. \"Mom, is it cool if I spend the night at Carrie's?... \"Great, be there shortly.\" \"So, yes dumbass, I will come to your house, but stop at mine first, I'm sure as hell not going to borrow your sluts R us wardrobe for school tomorrow.\"\n\nI laughed and pushed her shoulder. \"Bitch\"\n\nShe pushed back. \"Whore.\"\n\n\"So...\" I put my cell in the console and pushed the button and said \"Home\" and the phone started to ring on speaker.\n\n\"High tech toys.\" Julie laughed.\n\n\"Hey Carrie, on your way home?\" Kelly's voice came on the phone.\n\n\"Yeah, I'm ... is Dad there?\" I asked. \n\n\"Not yet, he's working a little late. What's up?\" Kelly responded.\n\n\"Is it okay if Julie spends the night?\" I asked.\n\n\"You stayed after school huh?\" Kelly replied. \"Just to give Julie a ride home, but then we started talking and I wanted to bring her over to see my room. Is it okay?\"\n\n\"Carrie, I won't say anything this time, but you should have called if you were going to stay after school, your Dad and I were clear on that weren't we?\"\n\nDamn, I didn't think about that. \"Yeah, I'm sorry Kelly, I got carried away.\" Julie and Kelly both laughed.\n\nI gave Julie an inquisitive look and she said, \"Carried away?\" \n\n\"Oh.\" I answered dumbly.\n\nKelly came back over the speaker. \"I really hadn't made dinner for four, but I'm sure we will manage. Just don't make it a habit of inviting people over without checking first okay? See you in about an hour?\"\n\n\"Yeah, just a quick stop at Julie's and we'll head straight there.\" I answered. \"Kelly?\"\n\n\"Yes Carrie.\"\n\n\"Actually, I'm going to drop on mom real quick too okay? So, an hour and a half?\"\n\nLong pause. \"Okay, quick visit please, call me when you leave.\"\n\n\"Thanks Kelly\"\n\n\"Bye Carrie.\"\n\n\"Damn, is she serious?\" Julie asked after I pushed the button to hang up.\n\n\"Yeah, they want to keep tabs on me all the time.\" I answered.\n\nI pulled in front of Julie's house. \"See you in a few, come get me if I'm not out before you.\" I told her and walked to my mom's... my house. I didn't want to thrust the car in her face.\n\nI let myself in and what I saw brought a scream that Julie must have heard from her house, because she was there a few seconds later. My mother was not alone. \n\nI stormed out of the house, slamming the door behind me to cut off the shout of \"Carrie no!\"\n\nJulie met me half way down the block and looked worried. \"Change of plans.\" I said, tears flowing down my cheeks. \"You are driving, take me out of here.\" I tossed her my keys and got in the passenger door.\n\nMrs. Petrili was at the door. \"What is it? What's wrong?\"\n\nI couldn't talk, I was crying too hard. Julie took the keys and got behind the wheel. \"I don't know mom, we'll be back, I'll call you.\"\n\n\"Be careful dear.\" She called. \n\nJulie backed out and we drove out of the neighborhood.\n\nWe drove in silence. I could tell Julie was dying to ask me what it was, but she just looked over at me crying and kept driving. \"Where do you want to go?\" She asked.\n\n\"Away.\" I whispered. \"FUCK!\" I screamed.\n\n\"Carrie?\" Julie asked softly. She put her hand on mine and squeezed it. \n\n\"I don't know Jules... I just don't know where to go anymore.\"\n\n\"Is your mom... is she okay?\" Julie asked softly.\n\n\"Oh! She's fucking great Julie! She is ...\" I couldn't bring myself to say it.\n\n\"What is it Carrie, what did you see?\" \n\nI turned to look at her. Tears were rolling steadily down my cheeks. \"Ummm.... Fuck it! Fuck it all! Let's just go back to your house.\"\n\nJulie pulled over into the parking lot of a restaurant and into a space far from the building. \"What is it Carrie?\" She turned off the ignition. Just then, my phone rang.\n\nI looked at the screen. Why would Kelly be calling? I wiped my eyes as if that would take away the burning image that would be stuck in them forever. I pushed the answer button.\n\n\"Carrie are you okay?\" came Kelly's voice.\n\n\"What do you mean?\" I sniffed, trying to not give away that I was crying.\n\n\"Your mom called and couldn't find your cell phone number and asked me to call you to make sure you were okay. What happened, she sounded really worried.\"\n\nI laughed, but there was no mirth in it. \"Oh yes. I'm sure she is. So worried she couldn't wait for me to get out of her house so she could ...\" I paused again and started crying uncontrollably again.\n\n\"Carrie? Are you driving? If you are please pull over sweetie.\" Kelly answered the long pause.\n\n\"Kelly, you don't know me, it's Julie, I am driving. I don't know what happened, but Carrie is safe.\" Julie responded.\n\n\"Okay, want me to come to you and pick her up? I can have John drive me down and we can drive the car up?\" She offered.\n\n\"Carrie, what do you want to do?\" Julie asked. \"I'll drive you home if you want, but I need to go back to my place and pack some stuff really fast okay?\"\n\nI nodded. I couldn't talk yet.\n\n\"I'll drive her up Kelly.\" Julie answered for me. \"Just give us a bit, I'm heading back to my house now.\"\n\n\"Okay.\" Kelly responded. \"Call me if you need to, I'm here Carrie.\"\n\nJulie pushed the button to end the call. \"Care, I'm going to drive back to my place, I'll park around the block so they don't see us and I'll go in the back door to get my stuff. You just wait in the car and I won't be but a few minutes okay?\"\n\nI just nodded and she took my hand. Then she released it. No way to drive a stick shift with one hand.\n\nWhen Julie returned from her house, she had a box of Kleenex, which she handed me. \"I'm going to need directions babe.\" She stated. \n\nI pushed the GPS button and she saw the map. \n\n\"Okay, start talking when you are ready, or don't, it's all good either way.\" Julie said softly and we headed home.\n\nIt was a long drive. About a half hour into it, I blew my nose for the last time. \"She was having sex in the kitchen.\" I whispered.\n\nJulie laughed. \"That is what has you all freaked out? That your mom is having sex?\" She didn't laugh in a mean way, I know she meant well. I turned and looked at her and was ready to take out my anger on her. \"She was having sex with two guys and there were at least three other people in the house.\"\n\n\"Whoah fuck!\" Julie exclaimed. \"God, I'm sorry Carrie. I ... didn't mean to ... I mean, wow.\"\n\n\"Yeah... pretty much.\" Was the best I could respond.\n\nWe drove in silence for a bit longer.\n\n\"Maybe she is just... freaking out because it's the first time she has ever been alone.\" Julie offered and took my hand since we were rolling along on the highway and she didn't need to shift gears.\n\n\"I think one guy would have sufficed for conversation.\" I sighed. \"No wonder I'm such a slut with parents like mine.\"\n\nJulie squeezed my hand. \"My best friend, the virgin slut.\"\n\nGod damn her, I started laughing. \n\n\"I just...\" I started and stopped again, biting my hand to pain back the tears. \"She couldn't wait to be rid of me all this time. I'm gone one day and she is throwing an orgy. They'll probably fuck in my bed. Jesus! I feel sick. Pull over\"\n\nJulie pulled over on the shoulder and I wound down my window, released my seat belt and vomited all over the side of the road.\n\n\"Carrie, your mom loves you, always loved you. I am certain she is anything but happy that you are gone. She is probably hurting a lot right now and trying to fill the void.\"\n\nI spit the last vile taste from my mouth and started laughing, a bit oddly I knew, but I was laughing. \"Yeah, I bet taking all those dicks she will be hurting and filling a lot of voids.\"\n\n\"Carrie, don't be a bitch. It's your mom.\" Julie said.\n\nI turned on her, I just needed to lash out at someone or something and Julie was the only one there. \"You are seriously going to take that whore's side? Are you fucking kidding me Julie?\"\n\n\"Carrie, lower your voice, I'm your friend, I'm always on your side. This is not about her against you. You need to think clearly and I don't know if I would be if I saw what you saw. But your mom has had a rough time of it since your dad rolled out on you two. Don't forget that.\"",
        "\"You are actually defending her!\" I screamed. \"Yes!\" Julie shouted back at me. \"You spoiled rotten bitch. She is your mom. Your only mom. She loves you and treated me like her own daughter too. She is a proud woman and raised my best friend mostly by herself. She is probably in the most pain of her life without you there and she might be going off the deep end. But hey, Carrie can't deal with it! So fuck you Carrie, it isn't all about you!\"\n\n\"FUCK YOU!\" I screamed and got out of the car and slammed the door.\n\nI started to walk up the shoulder of the highway and Julie just drove along behind me. \"Get in!\" Julie yelled at me.\n\nI kept walking. I didn't know where I was planning to walk to, but I didn't want to be in the car with that traitorous 'friend' of mine.\n\n\"Carrie, get your ass in the car. I'll drive you home and if you want I'll have Kelly drive me back to my place.\" Julie shouted over the engine.\n\n\"Fine!\" I yelled and got back in and slammed the door.\n\n\"Buckle your seatbelt.\" Julie said as I folded my hands over my chest.\n\nI did and she merged into traffic. We drove in silence for awhile.\n\n\"You know, you probably aren't going to listen to me right now, and that's okay, but I'm going to say it anyway. You have a pretty good life Carrie. You are independent. You speak your mind. You don't follow the crowd. You are strong. You are a wonderful, the absolutely BEST friend a girl could hope to have. And your mom made you that way. She was there when your Dad decided the piece of ass across the street was more interesting than having a family. She was there when you broke down every day for about a year. She was there when you chased his car as he drove away. She was there when you blamed yourself for him leaving.\"\n\n\"And now. Now, that she sent you to him, the guy she loathes, because she thought it was the best thing for you. Now, you are gone and she is alone, truly alone. And yeah, she fucked up, I'm sure she is hating herself even more now. Blaming herself because you are in trouble at school and now she has one more thing to add to list of her misery. And you are going to totally freak out on her because she is probably damned near suicidal and she reached for something stupid to fill the emptiness in her life.\"\n\n\"You have every right to be freaked out, I totally understand that. But she is your mom you ungrateful cunt. She loves you and has sacrificed for you and has made you the most incredible person I know. So, don't you dare hate her. I won't fucking allow it.\"\n\nHer voice was climbing again toward the end. I heard her. I actually understood what she was saying. I wanted to be stubborn and self-pitying though at the moment. I started bawling again. I leaned over against my best friend and cried into her shoulder. \n\n\"Stop, you are going to make me cry and I'll wreck your pretty car.\" Julie said and hugged me tight while I ran a river of tears and snot into her shirt.\n\nWe drove like that until we got to the exit and Julie had to downshift. I sat back in my seat and helped her with the directions to my dad's house. She pulled in and gave a low whistle. \"Nice digs.\" She smiled.\n\nI turned to her and grabbed her face in my hands and kissed her lips. Julie's eyes flew open when I did it. The kiss lingered longer than I intended and I pulled away suddenly. She was looking at me with wide open eyes as I pushed myself back and I stared at her in horror of what I had just done.\n\n\"Oh God.\" I stammered. \"Julie, I didn't mean it like ... I just ... Thank you for setting me straight.\" I turned and opened the door and got out quickly. I leaned against the door. What the hell did I just do?\n\nJulie got out a few seconds later and hefted her bag over her shoulder. \"Chill bitch, it's fine and I'm sleeping with you tonight.\"\n\nI turned to face her and the fear in my face must have shown.\n\n\"Carrie, relax, I'm not going anywhere. Let's go meet your sister... I mean stepmother.\" She laughed.\n\nJust about then the door opened and Kelly stepped onto the porch and summoned us inside. She was so young. \n\nJulie intentionally bumped into me as we walked into the house together. I was about to give her the grand tour, but Kelly ordered us to go wash up for dinner. I took Julie straight to my room and she tossed her bag on the floor and jumped onto my bed. \n\n\"This a big ass bed!\" Julie laughed as she bounced. \n\nI jumped up there with her and we took hands and bounced together. \"It is a HUGE FREAKING BED!\" I shouted and we laughed and fell down on it.\n\n\"Girls, dinner is ready\" Kelly called from downstairs.\n\n\"Let's go chill with your sister.\" Julie laughed.\n\n\"Choice.\" I laughed.\n\n\"What?\" Julie asked. \"Exactly.\" I laughed again.\n\nWe ran downstairs, momentarily forgetting my mom's gangbang and my uncomfortable kiss with Julie. In the dining room, four plates were set, and my dad was coming in from the garage looking pissed. He saw Julie and I and broke into a forced smile.\n\n\"Hey pumpkin.\" He kissed me on the forehead.\n\n\"Hi Julie, so great to see you two girls are still inseparable.\" He added.\n\n\"Hi Mr. Fitch\" Julie greeted and smiled at him.\n\n\"So, what's for dinner babe?\" My dad just called Kelly babe. I guess I still had to get used to things like that.\n\n\"Roast duck darling.\" Kelly smiled.\n\nI looked at my plate. I don't ever remember having roast duck in my life. Julie made a face at me, similar to the way I was feeling. Poor little duck. We shrugged and took a bite though, after my dad sat down of course. It tasted good actually, she had glazed it with something sweet but tangy. \n\n\"How was your first day driving to school Pumpkin?\" My dad asked.\n\nI looked at Julie and smiled slightly. \"It was okay.\"\n\nMy dad's smile dropped, \"Just okay?\"\n\nI turned to look at him. School had actually been incredible today. It was everything after school that had sucked. \"I LOVE my car dad.\" I grinned. \"Today was incredible.\"\n\n\"Umm John?\" Kelly interrupted his smile. \"Can you help me in the kitchen for a moment?\"\n\nIn other words, she wanted to talk to him alone. Adults are so funny sometimes. I don't know if they think we are stupid or they are just being polite when they talk behind our backs. But, I needed a second with Julie anyway, so it all worked out just fine.\n\nI lowered my voice to a whisper. \"I don't think I should tell my dad. What do you think?\"\n\nJulie whispered back. \"Yeah, but you need to call your mom.\"\n\nI knew she was going to say that. And I knew I needed to do it. I just wasn't feeling so forgiving quite yet. \"I'll call her later.\" We took a few more bites of duck before my dad and Kelly came back in. I could see the look of concern on my dad's face and likewise a frown on Kelly's face. They sat down and ate a bite of their duck, looking like they wanted to start a conversation, but couldn't quite figure out how to begin.\n\nThe silence was very uncomfortable and thank goodness for Julie. She broke into it. \"You have a lovely house from what I have seen so far. Carrie's bed is incredible.\"\n\nI laughed. I saw the look of terror in my dad's eyes. He must have been thinking that Julie was my lover. Well, one of my lovers since he knew I wasn't monogamous. \n\nHe looked at me and seemed to think I was mocking him with my laughter. \"Th-thank you Julie.\" He finally responded.\n\n\"Dad.\" I laughed. \"Julie is my best friend. I don't bring my lovers home with me every night. Not every night.\" I laughed again.\n\nJulie was blushing now. I thought that was odd. That kind of talk never seemed to bother her before. I hoped it wasn't the kiss, but realized that was probably exactly what it was that made her feel so uncomfortable now.\n\nWe broke into small talk after that, but I could tell there was an elephant in the room. After mostly cleaning our plates, Kelly offered to give Julie the grand tour of the house, which was an obvious attempt to get me alone with Dad. Julie smiled and accepted and the two of them headed off together, leaving my dad and I alone at the table.\n\n\"Carrie, I'm not going to beat around the bush here, you are old enough to ... well, what did you see at your mom's house today? She was frantic and called me, but wouldn't go into details. I'm worried about her.\"\n\nI struggled with what I wanted to tell him. I mean, in all honesty, I was eighteen now, so I could decide for myself, or should be able to decide for myself, where I wanted to live and there certainly shouldn't be any custody battles to contend with over the information. But, this was my mom. She didn't need my dad to know about her personal life.\n\n\"I'd rather not talk about Dad, but I do need to call her I think.\" I finally said to break the silence.\n\nHe looked at me and I held his gaze. \"Carrie, I want you to know something. I have always wanted you in my life. You were the very best thing that your mother and I ever did together. I probably could have won you in a custody hearing. Your mom has some issues, some of which you know about, some of which you probably never should know. I know in all you have seen or been told, I was probably the bad guy. If I could go back six years, I would have fought harder to at least get half your time.\"\n\n\"You probably don't know this and I'm not even sure it matters. I suppose I just want to tell you to help you look at me in a better light. Your mother had an affair before I ever met Kelly. You probably didn't know that. I'm not even entirely sure that it is a good time to tell you this, with everything going on right now. But, the point is, we are both human. We have and had certain needs, intimacy, and I mean more emotional, though the physical is important too.\"\n\n\"Dad, this is really... you aren't trying to give me a sex talk are you?\" I interrupted.\n\nHe looked at me for a moment and then chuckled softly. \"I'm pretty sure I'm about five years late on that. No, I just want you to realize, that we old people like sex too and I'll stop there before we both get extremely uncomfortable with this conversation. If you want to talk about what you saw, I'm here, or if you prefer, you can talk to Kelly about anything. You can even swear her to secrecy if you want and I will not push her for information at all. You have been through a lot with a divorce and it is amazing how well you have turned out in spite of all the craziness in your life.\"\n\n\"I just really want you to be happy in the end Carrie. In less than a year you are going away to college and then you will grow up and I won't see much more of you. So, this time we have together, is very important to me. It is a chance to really get to know you and hopefully help you to go into the world, after college of course.\"\n\nI thought about what he said for a moment. No, I did not know that my mom had an affair before he ever met Kelly, that was new to me. Did it change things? Maybe a little, not much since he was the one who left. Still, I had to cut him some slack I suppose. \"Thanks Dad. I'll keep that in mind. Maybe I will talk to Kelly about it, it's not something I want you to know. It wasn't anything insanely traumatic, but it was a kick in the head.\"\n\nHe laughed. \"That's my expression.\"\n\nI looked at him questioningly. \n\n\"Kick in the head... it isn't important, just some of the things that I apparently did teach you over the years.\"\n\nI smiled. He smiled. We smiled. \n\nI don't know if he had some transmitter button or what, but it was about that time that Julie and Kelly returned from their tour. \"Carrie, I'm going to use your Jacuzzi tub. Ciao.\" Julie laughed.\n\n\"Hey, I haven't even had a chance to use it yet.\" I whined.\n\n\"Snooze and loose ho.\" She laughed and my dad raised an eyebrow at her calling me a ho I think.\n\nI laughed. \n\n\"Hey Julie, before you go up, let me show you something in the garage.\" I smiled.\n\nI got up and walked her over to the adjoining garage door and opened it and flicked on the lights. My dad's BMW was parked there. Julie looked at it with passing interest. \"Yeah?\" she asked.\n\n\"Want to sit down in a Beemer?\" I asked her.\n\n\"Not really. I'm not impressed.\" She answered.\n\n\"Just check it out, the seat is really comfortable.\" I went down the steps and opened the door for her. She got in and I closed the door. She looked at me questioningly.\n\nI laughed and ran back up and locked the garage door behind me. I ignored the pounding on the door and ran upstairs, into the bathroom and locked the door. I flipped the plug down and started drawing a nice, hot bath.\n\nA few minutes later there was a loud knock at the door. \"Carrie, open up for a minute.\" Julie laughed on the other side.\n\nI laughed and opened the door and she looked at me with a wide smile on her face. \"I just wanted to say that you are a despicable bitch.\"\n\n\"You, my dearest friend, are a sucker.\" I smiled.\n\nShe moved into the bathroom and while it was a bigger bathroom than the one at my townhouse, it was suddenly feeling a bit cramped. She stepped closer and was looking me right in the eyes. The laughter in her eyes softened and she said, \"You should call your mom now, don't you think?\"\n\nI almost took a step back as she took another step forward. My breath was catching in my chest because she was now only inches from my face and we were still looking in each others' eyes and it was becoming very uncomfortable. She placed her hands on my cheeks and leaned closer and kissed me right on my lips. My eyes flew open and she closed hers and brushed my lips with her tongue.\n\nI gasped and that parting of my lips opened them enough for her tongue to find purchase inside my mouth. My body stiffened and then a second later, relaxed as I kissed her back. Her hands moved to my back and pulled me close so our bodies were pressed tightly together. I turned my head slightly to the side and kissed her deeply, our tongues probing inside each others' mouths. I felt my pussy gushing with juices as her left hand worked its way into my hair and her right squeezed my ass. My hands moved to her hips and held on for dear life.\n\nI felt her moving with me and let her lead the way. We were kissing. I had imagined this a few times and always felt so guilty. Now that it was happening, it felt so perfect, so right. I felt cooler now, my eyes were closed tightly, my imagination running wild. She slowly pulled her lips away, nothing sudden, just very soft and it happened so smoothly it felt right.\n\nI opened my eyes as she untangled her body from my arms and noticed we were standing outside the bathroom. She smiled. \"Go call your mom and you can join me if you want, but I'm getting into YOUR tub first bitch.\"\n\nI didn't think this was a cruel maneuver, but I was surprised. I smiled. \"Really? You are sinking to...\"\n\nAnd she cut me off with a soft, tongueless kiss before stepping back and closing the door.\n\nI was breathless. I went to my room and lay on my bed, absolutely overheated. I waited a few minutes for my heart to stop pounding before calling my mother.\n\n\"Hello?\" She answered on the second ring and sounded a little concerned.\n\n\"Hey mom.\" I nearly whispered.\n\n\"Carrie, oh God, I'm so sorry baby. It wasn't... I had no idea you were going to come and see me or I never would have had those people over.\"\n\n\"Have you... I mean... God Mom, what is going on?\" I wasn't sure what I wanted to ask first. Was she always doing orgies? Was this a one time thing? Had she always been a slut?\n\n\"Carrie, I ...\" she paused. \"I should have never agreed to do that at my... at our house. That was really stupid of me. It won't ever happen again, I promise. I guess I just hated being alone at home and so I offered to... listen Carrie, it wasn't as bad as it seemed. God, what you must think of me now.\"\n\nI started crying, but I tried to keep it quiet. \"Are you okay Mom?\"\n\n\"No honey, of course not, my daughter thinks I'm a ... Look, the two guys you saw me with, I have been seeing them for a long time. It ... I know it seems awful, but please believe me, I'm not just hooking up with strangers or anything like that. The other people, well it's like... \"\n\n\"Okay, for a few years now, I have been involved in this group. We get together, usually at someone's house and party. I mean... well baby we have sex. We are all friends, it isn't like a bunch of strangers. I know it makes me look like a total slut Carrie, but I swear, I don't do half of what some of the girls do. I don't ... this is so difficult to explain honey. I never wanted you to know about it, it isn't that it is a bad thing, just not something that people who are not into it would understand.\"\n\nSomething clicked in my head then. \"Mom, were you doing this when Dad was still living with us?\"\n\nThe silence pretty much answered the question, a long period of it. \"Carrie, look, let's meet for dinner tomorrow at home and I'll explain it to you. This is nothing to discuss over the phone. I just wanted you to know that I'm okay and make sure you are too. It looked dreadful I'm sure. Please, don't tell anyone, I don't want any of the neighbors to know about it.\"\n\n\"I already... well Julie was there when I walked in. I'll talk to her, she won't tell anyone. I'm not sure about tomorrow Mom, let me get back to you.\" I felt ... leveled.\n\n\"And Carrie, please don't mention this to your dad or Kelly, it would ... just don't okay?\"\n\nSo, my mom's biggest concern was that nobody find out what a slut she is. Fine. \"Yeah, okay mom.\"\n\n\"Thanks baby. I love you Carrie.\"\n\n\"I love you too Mom.\"\n\n\"How is everything with your dad? Are you okay up there?\"\n\n\"Yeah, he's been great. Kelly's been great too, though I doubt you want to hear about that.\"\n\n\"Well, I think they are happy together. As long as they treat you well and don't forget you are there. I hope I made the right choice Care Bear. I miss you so much.\" She started to cry.\n\n\"I'm fine Mom. Look, let's... I'll call first from now on. There is no reason for you to spend all your time alone just in case I show up. I just... well, I didn't expect it that is for sure. So, I'll give you at least an hour heads up from now on okay? I don't ... I mean, you should have a life.\"\n\n\"Thank you baby, you are so understanding, so smart. I don't know how in the world I ever got so lucky to have such a wonderful daughter.\" She sniffed.\n\n\"I'm not all that, you should have heard me freaking out before Julie straightened me out.\"\n\n\"Julie is a great girl. I always did like her.\" \n\n\"Yeah, she is.\" I smiled. \"Well, hey, I'm going to go get a bath. I'll call you tomorrow, okay?\"\n\n\"Okay honey, I'll talk to you tomorrow, goodnight.\"\n\n\"Goodnight mom.\"\n\nI went to the bathroom door. God the timing was horrible. All this drama in my life and Julie was...\n\nNaked, behind this door. She was sitting in my tub, waiting for me. She...\n\n\"Hey Carrie.\" I jumped nearly a foot when I heard Kelly's voice. I was standing at the bathroom door like some sick stalker or something. How long had she seen me standing there?\n\n\"I ... umm...\" I was just thinking of going in here and making love to my best friend, think Dad would be okay with that Kell? Yeah, not exactly thinking smoothly at the moment.\n\nShe laughed and took my hand and pulled me down the hall to my bedroom. I followed her, albeit reluctantly. She closed the door behind us and sat on the bed next to me. I was flushed and looking at my feet.\n\n\"Got the hots for your best friend huh?\" She smiled.\n\n\"Is it that obvious?\" I blushed, looking up at her, then quickly back down again.\n\n\"I've been there.\" She grinned. \"But no, you aren't that obvious, except the waiting outside the bathroom door part. You are hiding it very well.\"\n\n\"I... I'm not really sure... \" I trailed off, unsure what my thought even was, even worse how to get it out of my head.\n\n\"You are a sexually awakening woman Carrie. Believe me I understand how it is. Almost everyone you know or spend time with, you at least consider as a sexual partner or put them in the no category. Now, you and Julie have been best friends for a long time. Think about it. That's all I can tell you. It might work out, but chances are that you will both feel guilty after some incredible sex and then your friendship might suffer for it. Talk about it before you do anything. If you are falling in love and she is just experimenting, you both need to know that up front.\"",
        "\"In college, I had this roommate.\"\n\nI cringed. I really did not want to hear a sex story from Kelly.\n\nShe laughed. \"Okay, fine, I'll leave out the yucky details. Anyway, we did stuff for a few months and then both started dating guys. It worked out well and we are still friends today. But we talked about it a lot. Not like guys, with their holding back of emotional discussions. We talked about everything before, during and after. I'm not trying to dissuade you here, just give you a little guidance. A good friend is worth a hundred great lovers.\"\n\n\"Anyway, the real reason I came up was to see if you wanted to talk about your mom. Your dad thinks you might want to talk to someone of the female gender.\"\n\nI looked at her for a long few moments. \"Maybe another time. I would feel like I was betraying her right now.\"\n\nKelly just smiled. \"Carrie, you don't ever HAVE to talk to me about anything, but I am always here if you WANT to. Now, do you want me to go occupy your father so you can get in the tub with Julie?\"\n\nI smiled. \"No, you definitely gave me something to think about there. I'm ...\" I had an epiphany of sorts then. \"Actually, yeah, I am going to join her, no reason for two friends not to enjoy a tub together is there? Wait, is that a weird thing to do? I'm not going to have sex with her, I just thought that yeah, we can talk about it. I'm not sure we ever took a tub together though... not that either of us had a Jacuzzi before...\"\n\nKelly laughed softly. \"I don't think there is anything wrong with it. It will certainly throw temptation and heat to the forefront. But if you set your wall up to sex while you are there, it should keep you both in the right mind frame for the conversation. I think it's a great idea, enjoy and come down when you are finished, we'll watch a movie or something.\"\n\nShe squeezed my hands in hers and got up and left. I waited for her to head downstairs before gliding into the hallway myself. I probably waited a minute longer than necessary before I opened the bathroom door. Julie was there, in the tub with the Jacuzzi running. She smiled at me. A very sexy smile. A smile that told me if I wanted, she was all mine right now. \n\nI smiled back, locked the door, and started to undress.\n\n\"So, what is my tub like?\" I asked as I pulled off my shoes.\n\n\"You can go live with my mom. I'm staying here.\" Julie smiled as she leaned her head back onto the side of the tub.\n\n\"Well, I'm not leaving, but if you want to stay that can be arranged.\" I laughed softly, testing the water, so to speak.\n\nShe studied my face, a slight look of concern crossed her face and then she smiled again.\n\n\"I'm fucking with you... metaphorically I mean.\" God, this was going to be a difficult conversation, I could sense it. I pulled off my shirt and skirt, hoping she didn't comment on the lack of underwear, though she probably knew it.\n\n\"I'm not stupid Carrie.\" Julie laughed. My turn to look concerned I guess. \n\n\"What?\" Julie asked as she studied my face.\n\nI slipped into the tub opposite her. \"We ... umm...\" I giggled. \"Need to talk.\"\n\nJulie laughed. \"Go, you first.\"\n\nHmm, this could be awkward. \"You weren't fucking with my head right? I mean the kiss?\"\n\n\"No. How long have you been thinking of me sexually?\" Julie followed.\n\n\"A few weeks I guess.\" Apparently, we were just going to ask each other questions. This was working out well I thought. I didn't even have to framework the discussion, we could both get our issues resolved here and now. \"You were so violently opposed to me being a lesbian, why the change?\"\n\nShe frowned. \"Carrie, that was ... if there was a moment in my life I could go back to and change, that would be it. I can't tell you how horrible I felt about that. I mean, I have... well, who doesn't have a homosexual fantasy right? It isn't like you and I never kissed when we were younger or ...\" she trailed off. Of course I knew what she was talking about. We had done kissing games, not so innocent touching between girlfriends who were discovering their bodies. Yeah, we did that a little.\n\n\"Anyway, maybe I was freaked out because it opened a door to me that I was intrigued by, but as long as it was closed, I didn't have to think about it. Now, well, it's a pretty tempting option.\" She licked her lower lip and I laughed sweetly. \"Are you in love with Farin?\"\n\nDamn. I honestly didn't know the answer to that question. I guess a frown dropped on my lips because Julie looked disappointed, like maybe she should have not reminded me that I have a girlfriend. \"It isn't that.\" I reassured her. \"Julie, I don't know where Farin and I stand. There ... well, she was my first, so I guess she will always be special to me. But, I'm not sure we are on the same page. I think I may even be using her a little and that makes me feel quite guilty at times.\"\n\n\"She wants me to come out of the closet with her in front of the whole school. I don't really feel comfortable with that. She pushes for it and gets pissed at me. Not only that, but she kind of deceived me in the beginning. Not when we had ... sex the first time. But, before that.\" I got lost in thought for a moment. \"I ... no. Now that I really think about it. No, I'm not in love with Farin, more the idea of her.\"\n\n\"Are you in love with Chad?\" It seemed the next logical question.\n\nShe smiled. \"I think so. Is that a problem?\"\n\nI looked at her. Yeah, we would definitely want different things out of this. \"Not really.\" Surely Julie knew the code word for yes.\n\n\"Well, in that case, I'll break up with him tomorrow.\" She smiled at me. Yes, she did know the code word for yes.\n\nI smiled at her. \"Not yet.\" She did not look disappointed at my statement.\n\n\"Carrie, I'm bisexual at best. I'm not going to lie to you. There is no way I am a lesbian. If that is an issue, well, it's an issue. We can either work around it or my homosexual experimentation will be with someone else. We HAVE to be friends afterwards. That is why you started this question and answer thing right?\"\n\nMy jaw dropped open for a second. \"You fucking blow me away Julie. Honestly, it's like you read my mind.\"\n\n\"Or maybe Kelly and I had a talk earlier.\" She laughed.\n\nI laughed. \"What a manipulative...\" I let the descriptive drop to our individual opinions.\n\n\"You should thank her later.\" Julie smiled.\n\nI frowned. My thought was that this was a bad idea. I could easily see myself falling in love with Julie and she already had that path closed in her head. \n\n\"And there it is.\" Julie sighed, but she was still smiling. \"Well, it was an electrical kiss. Let's just leave it at that.\"\n\nI thought about it for a few minutes. \"I can cope.\"\n\nShe laughed. \"Shut up. You just want to get me into bed. Can't say I blame you, I'm pretty freaking hot.\"\n\n\"Damn, good thing you have me here to build your confidence.\" I laughed.\n\n\"You would fall in love with me Carrie. We already love each other as friends. I'm not sure if I would fall for you, but it isn't likely. I won't risk our friendship over a few fantastic orgasms. So, let's just shelve it for now. You know anyone else I could experiment with who wouldn't have hang-ups?\"\n\n\"What am I your pimp now?\" I was a little irritated, but I tried not to show it.\n\n\"This is going to be a problem.\" Julie said, not smiling. \"What?\" I asked, trying to seem upbeat.\n\n\"You. Now, it's in your head that I want to play around with a girl and you want it to be you, but you are worried about our relationship being emotionally unequal, so you aren't going to go through with it. I understand that. But, I don't even think we will be able to talk about it now without you getting upset and that makes me very sad.\"\n\n\"Julie, I can handle it.\" I said. \"I want to be your first. I'll keep seeing Farin and dating other people too. You keep seeing Chad and we will fall in love with other people and still have sex when it is convenient.\"\n\nShe choked. \"Convenient? Fuck you Carrie. Seriously? Convenient? What the hell kind of bullshit is that?\"\n\n\"I didn't mean it like that.\" I sulked.\n\n\"Good, because I am NOBODY's convenient lay. Ever. And neither are you. We are way too good for that.\" \n\n\"So, are you going to let me fuck you or not?\" I asked with a grin.\n\nShe smiled at me. \"Not tonight. Not here. Let's get a hotel room somewhere one weekend, just the two of us. I don't want to sneak around or have to be quiet about it. I want it to be very special for both of us. That will give us time to think about it and talk about it and if it isn't a good idea, we'll talk it out before it becomes a blemish on our friendship.\"\n\n\"Blemish?\" I laughed. \"Big word.\"\n\n\"You want to kiss a little?\" She smiled.\n\n\"Yes.\" I blurted out a little too quickly. I knelt in the tub and crawled over to her. Julie likewise knelt up and soon we were barely not touching each other.\n\nI slid my hands to her thighs and then up over her hips. She seemed to like to wrap her fingers in my hair and she did that and pulled my face to hers. And for the first time, neither of us had our eyes opened when our lips touched. \n\nI thought I had felt the magic of a kiss. Jill had nearly made me orgasm when she kissed me that very first night we met. Farin had all the passion I thought I could ever want in her kisses. The others, not as exciting, but they always made me feel wonderful.\n\nThis kiss, blew them all away. There was no comparison. It was like our souls were combined at our lips. It was sex and friendship and love and so very tender. There was passion, but it was unrushed. It wasn't rough or raw. It was more like a refined and perfectly designed caress. Our tongues hadn't even left our mouths yet. It was just two best friends with lips pressed together, sucking softly and moaning gently. There were no accompanying caresses in any erogenous zones of our bodies. \n\nSure, our breasts were pressed together, but there were no fingers probing or pinching or squeezing roughly. I did squeeze her sides gently where I held her, but there was no drive to complete or even progress. It was all it was meant to be. A kiss and nothing more. It was its own goal. It was not foreplay to something more, because there was to be nothing more. There didn't need to be anything more.\n\nIn that kiss, I realized something important. I didn't know anything about love yet. I knew nothing of sex either really. I don't really know how much time passed as we just knelt there kissing, but at some point Kelly knocked softly on the door to whisper, \"Your dad is concerned Carrie, you two better wrap it up.\" But, the water was quite cold when we gently pulled apart at that interruption.\n\n\"Best kiss I have ever or will ever have.\" Julie smiled at me.\n\n\"Ditto.\" I grinned. A tear rolled down my cheek. I hoped it wouldn't be the last time I kissed her, but I was sure I could remember it forever if it was.\n\nWe got out of the tub and pulled the plug and took our time drying each other off. It wasn't like we were trying to get each other off or anything vulgar like that. We were just enjoying looking at each others' bodies. Exploring the subtle differences and similarities as we went through this non-sexual discovery of one another.\n\nWe wrapped our bodies in one towel, our hair in another and headed downstairs to join my dad and Kelly. My dad looked up and I thought he was going to freak for a second. \"Wouldn't you two like to put on some pajamas?\" He asked in a choked voice.\n\nWe laughed. \"Do you need us to Dad? I wouldn't want you to be uncomfortable.\" I teased.\n\n\"Carrie, stop teasing your father.\" Kelly admonished me. She was snuggled up against him and gave him a kiss on the cheek.\n\n\"So, John was overruled, well I assume he will be. He wanted to watch some adventure film, but I'm pretty sure you two will back me up on a chick flick.\" Kelly laughed.\n\n\"Great. Which one?\" Julie asked as she bounded into the couch. \n\n\"Ever see Steel Magnolias?\" Kelly asked.\n\n\"Who's in it?\" Julie asked. \"I'll take that as a no. Carrie?\" Kelly followed.\n\n\"Never heard of it.\" I answered. \"Is it from your time Kelly?\" I laughed.\n\nShe laughed at me and threw a pillow at me. I caught it and threw myself down on the couch next to Julie.\n\n\"Umm, Carrie, go get the Kleenex box out of the powder room, you two are going to need it. I'll go make some popcorn. John, you can start it when Carrie gets back. I've seen it once or fifty times.\"\n\nI didn't really I was going to cry, but I have been known to break a tear from time to time so I pushed myself up and went to retrieve the tissues. I heard my dad ask Julie if she enjoyed her bath. Smooth dad, real smooth. I had to stifle my laugh so he wouldn't hear.\n\nWell, the long and short of it is that we did cry. I cried a lot. Julie cried less, but we wiped out half a box of Kleenex between us.\n\nWhen the credits ran, we were both hugging in tears. \n\n\"Oh my God, that was the saddest movie I have ever seen.\" I sobbed.\n\nI think I saw my dad wipe his eye at one time, but he said it was just from a long day and excused himself to bed saying, \"The action flick would have been more fun.\"\n\nKelly swatted him as he left. \"So, not to be presumptuous or rude, but if you do anything tonight, keep it quiet, your dad is not ready to accept that his little girl is an adult now.\" She whispered when he was out of earshot.\n\n\"We are going to wait.\" I told her.\n\nShe cocked an eyebrow. \"Long bath.\" She giggled.\n\n\"Just a kiss.\" Julie smiled.\n\n\"Must have been one hell of a kiss then.\" Kelly grinned. \"Goodnight.\"\n\n\"Goodnight Kelly.\" I bade. \"And thanks.\"\n\nShe leaned over as she passed us and kissed my cheek. \"You are welcome. Remember, door is always open.\" She smiled and went to bed with my dad.\n\nWell, we did not even kiss again. We went to bed, realizing that we hadn't done a bit of homework and we dove into what had to be done for tomorrow. It was probably after midnight when we fell asleep in our books."
    ],
    "authorname": "Panthergirl",
    "tags": [
        "lesbian",
        "nonconsentual",
        "cheerleader",
        "high school",
        "anal sex",
        "first kiss",
        "authoritarian",
        "stripping",
        "bath",
        "blackmail"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/darlas-games-day-14"
}