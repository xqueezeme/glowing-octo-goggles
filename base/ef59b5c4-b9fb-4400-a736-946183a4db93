{
    "title": "Geocaching for Clothes",
    "pages": [
        "PART I \n\nIrv Watson and his wife, Camela, trudged happily down the Juniper Ridge Trail of central Texas' Pedernales Falls State Park, her with eyes glued to the screen of their handheld GPS unit, him scrutinizing the park's trail map he had printed before leaving home that morning, both trying not to clumsily walk into a tree in the process. \"It should be up here on the left a little ways,\" Camela offered over her shoulder to her husband and their fellow trekker. \n\nFollowing behind them was Jennifer, Irv's sister-in-law who was living in their upstairs guestroom in Austin while navigating a complicated divorce from his brother. She was blonde, and beautiful in a very natural way, a bubbly long-ago hippie, but far from an airhead. Her low-cut tee shirt revealed an ample amount of cleavage, as was her style, and her tight spandex workout shorts had attracted glances from every man they'd passed on the trail that morning (not to mention a few women, too). Their divorce was one of those rare situations in which the Watson family had sided with her, effectively divorcing Walt, too, though he was their flesh and blood. \n\nThis is not to imply that it had been a difficult choice. The forty-something S.O.B. had run off with their buxom 21-year-old Brazilian housemaid who barely spoke English. As if that weren't bad enough, he had taken all the money with him, leaving Jennifer destitute until police could track him down and get some of it back. She couldn't even sell their home or furniture in Dallas, the city in which they had all grown up, until the courts sorted things out. That could take many months, for no one knew where the pair had absconded to. Probably Brazil, they all agreed. \n\nThe family had been mortified, as though somehow Walt's actions reflected badly on the whole Watson clan. For now, Jennifer would be broke until she found a job, and was living rent-free with Irv and Camela until she could get back on her feet. Her presence in the house was a daily source of irritation for Camela, who valued her privacy and resented Jenn's revealing clothing and carefree ways. But Irv insisted that it would be cruel to not take her in since she was the innocent victim in the whole sad affair. \n\nHe had gotten his way and Jennifer received an open-ended invitation to stay as long as she needed. The fact that she was quite nice to look at and seven years younger than his wife didn't factor into his decision, he told himself, but it was a nice and unexpected benefit to behold her lovely figure, tight outfits, and radiant smile bouncing around the house. \n\nGeocaching was about the only thing Irv and Camela still had in common. At least once a month the two of them spent a Sunday morning traipsing through some nearby forest, using billion-dollar satellites to find Tupperware in the woods. For the uninitiated, geocaching is a worldwide phenomenon. All over the globe, individuals who enjoy this \"sport\" hide small containers (most are smaller than a shoebox, some as tiny as a matchbox) in a variety of publicly-accessible locations along highways, in parks, or deep in forests, publish the geographical coordinates online, and challenge others to use GPS to find them. \n\nUsually the person who places the geocache gives it an intriguing name and writes a sentence or two containing enigmatic clues to help guide (or confound) those who seek it. Some of the containers lay in plain view. Others are buried in the ground, hung from trees, tucked under bridges, concealed in fake logs, hidden in drain pipes, etc. They're virtually everywhere, and the more diabolically disguised or cleverly hidden, the better. Most people in the USA pass dozens of them every day, blithely unaware of their existence. \n\nInside each container is a random assortment of worthless trinkets. Each person who finds a given cache is expected to sign and date the enclosed sheet of paper to document their find, remove one item and leave another for the next successful seeker, then carefully place the container back in its original location. Jennifer was new to geocaching but was game enough to come along as a third wheel since she didn't know anyone else in the area yet. Not having invested in the proper equipment, she used her smartphone as her GPS and to consult her ViewRanger app to know exactly which trail they were hiking. \n\nToday's geocache was placed just last week by someone with the username \"twingems,\" and was called \"Out on a Limb.\" The clue read: \"Fly like a Juniper Jaybird.\" Irv and Camela hated it when the clues were so transparent. They preferred a challenge, a conundrum, a puzzle to be solved the way Hercule Poirot might unravel an Agatha Christie murder mystery. This one, however, would obviously be perched on the limb of a tree near the Juniper Ridge Trail. \n\nBut today had been the first time that Jennifer had chosen the sought-after treasure, so they had humored her, driven their SUV to the trailhead nearest the coordinates she had printed out, and hiked toward the indicated destination. As they walked, Irv thought about his wife. \n\nCamela was still beautiful, he silently conceded. As he walked three or four paces behind her he admired her long, auburn hair that always looked as though she'd just come from a salon. He enjoyed the gentle sway of her shapely butt, still impressive after 20+ years of marriage. But he wasn't likely to see it uncovered anytime soon, nor her magnificent 36C breasts, for she was a prude. \n\nWhenever the two of them had ventured into the woods together over the years he had tried to persuade her to go skinny-dipping in one of the area's many secluded spring-fed ponds, or to make love to him under a tree in the forest, or just to give him a quick blowjob. But she would have none of it. In fact, he'd stopped asking more than a decade ago. She hated being naked even indoors and rarely left the bathroom undressed. \n\nShe wouldn't even sleep in the nude, preferring granny pajamas that covered her body from neck to ankles. There was no way he was ever going to get her naked outdoors. And to tell the truth, Irv was afraid of his wife. Her anger was a fearsome thing to behold, and wired on a hair-trigger. It just wasn't worth the risk of setting her off to suggest something risqu\u00e9 or daring, especially since he knew the answer in advance. \n\nHe had long ago accepted his fate: to live the remainder of his life unfulfilled, \"enjoying\" perfunctory sex with her once or twice a month until he died. He didn't even harbor much hope that he would outlive her, as she was a year younger than he, extremely cautious, and a health nut. She was gorgeous, but that fact diminished the sting of his mundane existence only slightly. At least he could enjoy her pretty face every day, he consoled himself. \n\nJennifer, on the other hand, was a free spirit. Before the divorce, Walt had confided in his older brother about their freewheeling sex games, wild escapades, nude beaches, even a trip to Jamaica once during which they had gotten drunk and enjoyed steamy sex on the beach while half-a-dozen people watched. Afterwards, still unsatisfied, she had given blowjobs to three of the men gathered around. Walt reminisced that he had never seen her happier than she was that night. \n\nIrv imagined Jenn naked on the beach, her pretty face wrapped around his brother's cock as her beautiful hazel eyes looked up at him longingly and her blonde shoulder-length hair swayed in the gentle Caribbean breeze. He pictured her eyes dark with desire and her nipples as hard as pebbles as she rode Walt's dick in the sand. Then he visualized her passionately sucking on a stranger's cock while she ferociously massaged two others by hand. Why would his brother leave that, he wondered? Irv would give anything to be married to a woman who had any libido at all, let alone an insatiable one. \n\nSince she'd moved in upstairs, Irv had enjoyed seeing their houseguest come downstairs for coffee braless a couple of times, and once in just her panties and a white v-neck undershirt that didn't quite cover her crotch. Her breasts weren't as large as Camela's, but seemed pert and perfect nonetheless. The dark outline of her areolas could be seen through the thin cotton on those occasions and seemed smaller than his wife's, though he couldn't be certain because he didn't want to stare. \n\nOkay, he wanted to stare, but he'd chosen to be a gentleman about it, only stealing a quick glance or two (or five) when she wasn't looking. Irv was glad she'd never appeared dressed (or, more accurately, undressed) like that while Camela was in the house. His wife would have raised hell and put a stop to that for good. She might have even thrown her out. \n\nIrv wondered if Jennifer had always made sure that Camela was at work or out in the backyard watering her plants or weeding her garden before she popped out scantily clad. She could certainly have confirmed the fact by glancing out the window of her bedroom before descending the stairs to the kitchen. Did she want him to see her? Was she teasing him? Did she enjoy showing off her body? Her eyes had sparkled as she'd made eye contact with Irv on those three mornings when she'd appeared only partially-dressed, as if to say, \"Bet I know what you'd like to see more of!\" If only his wife were so playful and uninhibited! \n\nAnd so, Irv Watson was left with only his fantasies. A thousand times he had envisioned coaxing his wife naked into a cool, clear Texas swimmin' hole (you always had to replace the g with an apostrophe or people would know you weren't from Texas) on one of their geocaching outings, then he would - in his imagination - quickly get out of the water and run away with all of their clothes. He smiled as he envisioned standing forty feet away from her stark naked, holding every stitch of clothing they had propped on his hardened member as she, terrified of being seen, edged nervously out of the water and crouched low as she crept closer to him, demanding the return of her clothes, only to have him run farther away. \n\nIn one version of his reverie he would drop a single shoe before retreating farther up the trail. Then, one by one, she could retrieve her articles of clothing by chasing him a mile or two up an isolated trail in various states of undress. In his mind, Camela would find the scenario strangely enjoyable and arousing, despite herself. She would bashfully admit to him that the risk of being seen in the buff had so turned her on that she couldn't wait to drag him back in the water naked, or to fuck him senseless in the woods. \n\nIn the real world, however, he knew she would not find it arousing in the slightest. Instead, she would despise him for it and make him pay in a thousand ways for many months to come. Maybe forever. It was all moot, anyway. It was never going to happen. So, in recent weeks, Irv had begun to replace his wife in those fantasies with Jennifer, who was now living rent-free in his head, not just his home. \n\nForcing a woman to run naked through the woods did more than just intrigue Irv. He couldn't stop thinking about it. His fantasy was a little on the impish side, not overly cruel, he told himself. He wasn't into anything perverted, and he certainly didn't want to hurt anyone. He just got-off on thinking about a beautiful woman stuck out in the woods without any clothes. In Irv's mind, a nude woman in the forest was a vision of Eden, his own imaginary microcosm of a pristine and perfect world. She would be like a regal mare at home in nature the way God intended. Or at least the way Irv intended. \n\nWhenever they passed an attractive woman on the trail (which was often), he would always wonder, \"Why can't she hike naked? What harm would it do? It would make the world a much better place!\" Whenever searching for porn on the internet he found himself seeking out videos of women walking nude in the woods, or skinny dipping in a lake, playing naked on a beach, or canoeing topless. When the possibility existed that the woman might get caught by passersby in her unclothed state, it fueled his fantasies even more. He wondered what Jennifer would look like, bare-ass naked, hiking the very trail down which the three of them trekked this morning. \n\nCamela shattered his daydream when she suddenly stopped and said, \"Wait a minute. I think we passed it.\" She backed up a few paces, peering at her GPS, then turned left off the trail through some thick brush. \"It should be about 40 feet this way.\" Irv and Jennifer, being several feet behind, found an easier path between some dead cedar trees that would take them in the same direction. \n\nIrv glanced upward and said, \"I'll bet it's in that big oak tree.\" A minute later, all three were standing at the base of a majestic tree that must have been at least 150 years old. \n\n\"I see it,\" Irv said, pointing to a small plastic recipe box wedged into the crook of a large branch about 10 feet off the ground. They looked at each other with the same unspoken question: How can we get it down? Finally, Jennifer looked at Irv, smiled, and said, \"Pick me up!\" Irv braced himself for Camela's patented disapproving scowl before daring to glance at her to gauge her response. She instead shrugged her permission, so Irv squatted and wrapped his arms around Jennifer's lovely shins. \n\nHe stood erect (in more ways than one, he joked to himself), hoisting her into the air in the direction of the treasure. He felt the smooth flesh of her leg against his cheek and wished he could tenderly kiss it. Glancing upward, he could see straight up her shirt and took note that her bra was black, sheer and barely there. He could clearly see the creamy flesh that comprised the underside of her boobs through the fine mesh. \n\nHer tummy was flat and he couldn't keep himself from momentarily noticing that the tension created as she stretched toward the geocache had pulled her spandex shorts into a well-defined camel-toe a mere 12 inches from his eager lips and tongue. \n\nA moment later she had the box in her hands and shouted to Camela, \"Catch!\" She dropped the box into her sister-in-law's waiting hands and Irv reluctantly lowered the lithe beauty to the ground, allowing his right hand to \"accidentally\" brush the back of her thigh as he stood up. He thought he detected a slight smile from Jennifer as he did so, but couldn't be sure for she quickly turned her head toward the box. She bounced up and down excitedly as she asked, \"What's in it?\" \n\nCamela removed the few rubber bands that held the box shut, opened the lid, and immediately scowled and thrust it away from herself as far her arm would permit. She covered her mouth with her free hand to suppress a visible gag reflex, and Irv thought for a moment that she might hurl the box into the woods. What could have disgusted her so? A dead mouse? Rancid food? \n\nHe gingerly took it from her, holding it at arm's length with two fingers, and reluctantly tilted it toward his face enough to peek inside. He suddenly scoffed and rolled his eyes, pulled the box close to him, and pulled out a pair of red lace thong panties! Otherwise, the box was completely empty, he demonstrated by holding it upside down and shaking it. \n\n\"That's the most disgusting thing I've ever seen!\" Camela snorted. \"Some pervert somewhere getting his jollies.\" \n\nIrv tried half-heartedly to mimic his wife's revulsion. He certainly couldn't let her know that he thought it was funny, could he? He held up the panties with two fingers and rotated them in the sunlight for all to see. \n\nJennifer giggled and said, \"Looks like someone out here's having more fun than we are!\" Irv and Camela looked at her curiously, both puzzled at her meaning. \n\n\"Naked as a jaybird?\" she proffered. \n\nThe old married couple both now signaled their recognition of the \"hidden\" meaning in the geocache's online description, \"Juniper Jaybird.\" \n\nJenn grabbed the panties, twirled them around on her index finger and proposed, only half-jokingly, \"Maybe Camela should put these on and leave her own panties in the box!\" \n\n\"Like Hell!\" Irv's cold wife huffed, and stormed off in the direction of the car. Jenn pocketed the panties and she and Irv replaced the empty box on the branch, once again affording him the opportunity to hug her athletic legs to his eager face. \n\nPART II \n\nFor the next several mornings, Irv watched Jennifer climb into her car and drive off to yet another job interview or two. The routine was always the same. She would toss a gym bag into the trunk, place her purse on the front passenger seat, and depart. At the end of each day she would return home in her workout clothes, sexy with sweat, nipple impressions alluringly outlined through her form-fitting top and threatening to burst through the fabric, and announce that she had found nothing that suited her yet, but at least had taken all her frustrations out in the weight room of the gym. \n\nAll day every day, Irv fought to prevent his mind from drifting back to the same daydream: somehow getting Jennifer naked in the forest and then stealing her clothes. He smiled and breathed slowly, deeply, rhythmically as he pictured her frantically trying to hide behind scruffy shrubs as she sneaked her way... somewhere. But where? How? He didn't know the answers to these questions. All he knew is that it made his cock so hard he could dull a sawblade on it. \n\nThe following Saturday morning, he sat sipping coffee at the kitchen table watching his wife through their bay window as she chatted with the neighbor guy over the thick hedge that separated their backyards. The two of them were obsessed with gardening, so this was a weekend routine they both cherished. \n\nThey would usually chat for 45 minutes about fertilizers, bugs, the proper way to mulch, the pesky deer that ate their flowers, and the like. But today, he doubted they would talk very long. Soon she would rush back into the house to shower, he knew. \n\nAt noon, he was to drive her to the airport for her 25th High School reunion in Dallas that very evening, a trip that had been on the calendar for months. Because Irv had attended a rival high school whose reunion had been held a year earlier, he wouldn't be accompanying her. She would spend a couple of nights with her parents, and wasn't scheduled to return to Austin until Monday evening. \n\nNot one to complain, Irv instead looked on the bright side: he would have all night alone in his bed to dream about their houseguest. \n\nHis thoughts were suddenly interrupted by a smiling Jennifer who waltzed down the staircase into the kitchen wearing less than he had ever seen her in! A sheer negligee covered her torso, but left her lovely breasts on display through the red gauzy fabric. She wore nothing on her lower half but a crimson lacy thong. Irv swallowed hard, but remained silent and agape, having no idea how to respond. \n\nShe glanced out the window to confirm that Camela was still fully engrossed in conversation, then grabbed a cup from the counter and turned to face him squarely. She poured herself a cuppa as she looked straight at him, not even attempting to hide herself as she stirred a packet of Equal into her brew. Smiling devilishly, she inquired, \"Do you like my twin gems?\" \n\nIrv sat speechless. What did she mean by \"twin gems,\" the username of the geocache owner? \n\nShe hooked her free thumb into the waistband of her panties, and asked, \"Recognize these, Sherlock?\" \n\nIrv turned his palms upward in a sign that he was completely baffled, but managed to say, \"Are those the panties from the geocache?\" \n\n\"Yes,\" she replied. \"Don't you think it's a bit coincidental that they form a matched set with my negligee?\" \n\n\"Sorry, I don't get it,\" he replied, but only half-truthfully. In fact, it was beginning to dawn on him that perhaps she had hidden the geocache with her own panties in it! But he dared not say so aloud, for fear of offending her. \"Are you saying you're Twin Gems?!?\" ",
        "\"No, you idiot! These are the twin gems,\" she replied playfully as she put down her coffee and used both hands to squeeze her tits in his direction. \"I was trying to help you out!\" \n\nIrv was clearly still bewildered, so the nearly-naked woman continued, \"I used your computer a couple of weeks ago to look for a job and saw in your search history that you're into naked ladies in the woods.\" \n\nIrv's throat went dry in an instant. For a moment he feared he might never breathe again. \n\nJennifer defended herself, \"I wasn't snooping! I saw a job posting for Naked Juice and when I typed the word in, up popped your search history, filled with 'naked women hiking' and 'naked women swimming,' and \"naked women outdoors.\" I clicked on all the links that were purple to see what you'd been looking at. You naughty boy, you!\" \n\nIrv's mind reeled as he envisioned his whole world disintegrating that very morning. His wife was not the type to shrug off this sort of thing. She would be repulsed by it, and by him. Even the minuscule sex life they shared would be snuffed out. But Jennifer assuaged his fears, injecting, \"Don't worry! I'm way naughtier than you! Your secret's safe with me. Besides, I like a horny man!\" \n\nIrv felt his cock twitch in his pants. He relaxed, but only enough to seek more information. \"How was the geocache thing supposed to help me?\" he inquired incredulously. \n\n\"Well, I was hoping that Camela would find it funny, maybe even put on the panties and leave hers in the box. I thought maybe that taking off her pants in a public park would get her unstuck and she would loosen up and become the naked forest nympho you want her to be. But that didn't happen. She's a cold fish and always will be. Am I right?\" \n\nWithout waiting for Irv to respond, she continued, \"I know I'm right. Your evil brother told me all about you two. Anyway, not to worry, dear brother-in-law. I've launched Plan B.\" \n\nStill a tad terrified, Irv managed to stutter, \"What's Plan B?\" \n\nJennifer smiled slyly, raised her left eyebrow like she was up to something devious, and asked impishly, \"Did you get a good night's rest?\" Irv nodded. \n\n\"Good,\" she said, \"You've got a very busy afternoon ahead of you.\" \n\nWith a quick glance, she confirmed again that Camela's focus was still on the neighbor beyond the hedge. She then reached into the stairwell, pulled a full backpack off the steps, and tossed it at his feet, announcing, \"This is Plan B.\" \n\nShe smiled that bewitching smile again and said, \"More specifically, I am Plan B. Your little brother - God curse his black soul - and I used to play naked all the time, and watching your videos got me horny as hell and gave me an idea. Here's the plan...\" \n\nPART III \n\nFive hours later, Camela was on an airplane and Jennifer sat at home alone on the sofa in the living room wearing nothing but her beautiful smile, grinning as she pondered where she would be the very next morning. The thrill of it made her moist, and the buzzing in her clit was almost unbearable. She hadn't been naked in public in months, and she missed the exhilaration terribly. Somewhere in the vast 5000-acre wilderness of Pedernales State Park Irv was - right now - setting up an obstacle course of sorts, one that would soon have her sneaking around a park filled with Sunday picnickers, swimmers and hikers... as bare as the day she was born! \n\nAs she had explained to Irv that morning while Camela chatted away with the neighbor, on one of the days she had supposedly spent interviewing for jobs she had instead busied herself laying an elaborate trap for herself. She had visited thrift shops in the area and used her limited cash to acquire 5 containers in which she had placed the following items, respectively: a necklace, her tennis shoes, a pair of socks, the red thong panties from the geocache, and the lacy black see-through bra she had worn to flash her breasts to Irv while reaching for the geocache the previous Sunday. She had then crammed them all into a backpack she'd found in the garage, along with the GPS unit, a tube of sunscreen, several bottles of water, some insect repellent, a pad of Post-it notes, and a portable USB battery with a phone-charging cable. Irv would need them all after dropping off his wife at the airport. \n\nAt this very moment, Jennifer mused, Irv is carrying those containers all over the park and hiding them, hopefully well enough that no one else might stumble onto them before tomorrow, D-Day. She couldn't help but play with herself as she anticipated the adventure, rocking herself with three seismic orgasms before falling into a deep and satisfying sleep on the sofa. \n\nHer next conscious thought came as she awakened to the sound of a camera. Irv stood over the nude sleeping beauty, capturing the magical moment forever. He and Camela had lived in this house for 14 years, he recalled with a mixture of sadness and anger, but never once had his wife ventured out of the master bedroom in even her underwear. Yet here was lovely, unashamed Jennifer in all her glory. \n\nShe sat upright, not even trying to hide any part of her nude body from her brother-in-law. She wasn't mad about the photos, he noted. She seemed proud that he would want to look at her naked pictures in the future. She even shifted her pose and opened her legs a bit, smiling a kittenish smile that invited more photos to be taken. Irv happily obliged. \n\n\"You're getting an early start on your little outing, aren't you?\" was the only thing he could think to say. \n\n\"Sure am,\" she replied. \"My plan is that the next thing I put on will be that necklace sometime tomorrow morning, assuming I can find it. Is everything ready?\" \n\n\"I think so,\" he replied. \"I hid all five containers - pretty well, if I do say so, myself.\" \n\nHe explained how, in accordance with her wishes, he had hidden the container containing the bra first, carefully noting the latitude and longitude registered by his GPS on a yellow sticky note. He had then hiked a mile or two away and concealed the panties along with the coordinates he had written down for the bra. He then wrote new coordinates on a slip of paper and hiked up another trail a mile or two before secreting the socks along with the location of the panties, and so forth. A bottle of water had been included in each of the larger caches to keep her hydrated, the battery with the phone charger in the one with the panties, and the sunscreen and bug spray tucked into her shoes. The final item hidden had been the necklace in a tiny pill bottle. \n\n\"I have the coordinates for the necklace right here,\" he said, patting his shirt pocket. \"Are you sure you want to go through with this?\" \n\n\"Am I!\" she replied, beaming with joy and anticipation. \"I'm so jacked-up I would fuck you right now if you weren't married!\" \n\nThe next morning she arose at 6:30 AM to the sound of her alarm, though she'd been awake already for at least an hour, restlessly enjoying the feel of her bare skin against the sheets. She had smiled so much since yesterday that her cheeks hurt. She reveled in the thought that it would be hours before she felt fabric touch her flesh again. Irv was already at the kitchen table sipping coffee when she appeared at the bottom of the stairs completely naked. The sight took his breath away. Years ago he had begged his wife to cook a meal in the nude, but the mere suggestion had revolted and angered her. \n\nHe gestured for his pretty, unclad guest to take a seat while he poured her a cup of coffee and stirred in her usual packet of artificial sweetener. He looked her tenderly in the eyes and said, \"Thank you for doing this.\" \n\n\"My pleasure,\" she grinned. \"Literally.\" \n\nThey both smiled. A few minutes later, under cover of the darkness that still lingered despite the brightening sky on the horizon, they climbed into Irv's SUV and began the 45 minute drive to the park. \"Thank God for tinted windows,\" Irv thought, having no idea that his naked cargo was seriously considering rolling her window down to give the world a passing glimpse of her glorious nakedness. \n\nWith daylight now fully upon them, Irv pulled up to the trailhead he had scouted out the day before. While technically inside the park boundaries, it was situated along a little-used stretch of road at the south end of the park, about three miles before the ranger station where visitors were required to pay an entrance fee. Irv couldn't believe that he was finally about to live out his fantasy! He took out a bottle of water and said, \"Better take a big swig of this before you begin. It's going to be a hot day.\" \n\nJennifer nodded, removed the cap and drank as much as she could hold before returning it to her driver. \"Did you charge your phone overnight?\" he asked. She nodded and held it up for him to see the battery icon at full power. \n\n\"Okay,\" he said. \"You're off! Here are the coordinates for the necklace.\" \n\nJennifer sighed, steeling herself for what she was about to do. It would be by far her most challenging naked adventure! She took the small piece of paper and began to enter the coordinates into her phone. \n\n\"No,\" Irv objected, placing his hand over the lit screen. \"Against the rules. You have to enter the coordinates after you get out of the car.\" \n\n\"That's not a rule!\" she protested. \n\n\"It is now. My rules from here on out. Whatever I say, goes.\" he stated matter-of-factly. \n\nJenn's eyes widened in disbelief, but then she decided it would mean all the more fun, all the more risk, all the more uncertainty, all the more time spent naked in the woods. \"Whatever you say goes,\" she repeated. \"Just don't get me arrested.\" \n\n\"Fair enough,\" Irv intoned. \n\n\"Okay,\" she said with cheerful nervousness. \"I'll call you when I find the bra, and you can tell me where to meet you. See you in a few hours!\" She looked up and down the road to be sure no one was coming. This was, of course, impossible to gauge because in both directions there was a hill only a hundred yards away that obscured her view of what might lay beyond. \n\nShe rolled down the window and listened carefully. Hearing nothing, she opened the door, stepped out onto the shoulder of the road with nothing but her phone in one hand and the slip of paper in the other, and scampered up the trail 30 yards before stopping. \n\nAlmost immediately she chided herself for choosing not to wear shoes. Her tender feet suffered when she stepped on the small jagged stones that lay all over the exposed limestone bedrock that was so typical of central Texas. She had certainly considered wearing shoes as she had developed her crazy plan, but decided that footwear would constitute cheating. Naked was naked, she had concluded, and that was that. \n\nTo wear anything at all, even make-up or jewelry, would diminish the whole experience for her. \"It wouldn't count,\" she had thought, knowing how insane that would sound to anyone who didn't share her odd compulsion to bare herself to the world, even if only Mother Nature might see her. To wear shoes would reduce today's exploits to the status of a practice run in her mind, and she knew she'd forever feel an unquenchable obsession to repeat the whole exercise over again, starting with absolutely nothing but her body. \n\nEven to carry the phone - though indispensable for today's challenge - took a bit of the edge off, she lamented. She placed the phone and the slip of paper on the ground behind a tree and walked away from them until she couldn't see them any longer, then waited a minute or two. She entered a small clearing and twirled her nude body in the morning sun with arms outstretched, then squeezed her breasts and pinched her nipples hard, loving the exquisite sting she felt in her clit as she did so. She looked down to see her perfect white skin contrasted against the earth tones of the dry, late-summer Texas landscape. \"There!\" she thought with satisfaction. \"Now I've begun totally naked.\" She bounced up and down giddily for a moment, almost unable to prevent herself from squealing with glee over her deranged adventure - and growing sexual arousal - that had only just begun. \n\nPART IV \n\nShe listened carefully for any telltale sounds of human beings and heard none. She was, after all, on a little-used trail at 7:45 in the morning, so she figured she would be safe there. The park didn't even open until 8:30, anyway, not counting overnight campers, of course. She walked back to her stash, entered the coordinates from the slip of paper into her phone and cursed. \"Damn!\" she said. The coordinates were on the other side of the road! Irv had deliberately sent her down the trail on the wrong side! \"Bastard,\" she muttered. But she was smiling, quivering, and already wishing some young hunk - or perhaps three of them - would come along and satisfy themselves fully at her expense. \n\nShe cautiously walked back toward the road she had just left. Before emerging into the clear, she heard a vehicle approaching and slipped behind a tree for cover. A minivan passed without incident. Listening again and hearing nothing, she peeked out onto the road and saw... Irv! He had parked on the shoulder and was waiting, phone in hand, to snap some pictures! He grinned at her widely. She smiled back and mockingly shook her fist at him as if to say, \"I'm going to get you for this!\" \n\nShe then dashed across the road to the tree line on the far side while Irv snapped as many pictures as he could. From the trailhead on the south side of the road, she dared to perch herself on a huge rock placed there to block automobiles from accessing the trail, smiled, stood akimbo, and stuck her tongue out at him. The early morning sun bathed her skin in a golden glow that made her seem even more entrancing than when she'd first appeared on the stairs that morning. \n\nIrv laughed at her antics, snapped three more quick photos, and adjusted his pants to allow room for his hardening cock. He then climbed back into his vehicle, stopping to take one more photo before she dismounted from her stone pedestal. He started the engine and waved goodbye to \"Buffy,\" as he had begun to call her in his head. A few seconds later his SUV topped the hill and disappeared from her sight. She was fully alone now, for many hours, completely naked in a busy state park. \n\nShe retreated a few yards into the woods beyond sight of the road and glanced at the clue on the slip of paper. \"Madrone's Madness\" was the name Irv had assigned her first challenge. She checked her hiking app and noted that she was, indeed, standing on Madrone Trail. It paralleled the pavement through the woods in a small sliver of the park that extended a half-mile, at most, southward from the roadway. \n\nThe vast majority of the park stretched northward several miles to beyond the Pedernales River. She would, no doubt, spend most of her day in that portion, which meant her day included at least one more streak across the strip of asphalt she had just left. \n\nFor now, though, she was thankful that the ground on this side of the road was made of soft dirt, not the exposed limestone shelf that had punished her feet on the north side. Not that there we no pebbles. There were plenty. It's just that they receded into the dirt slightly when she stepped on them, cushioning each blow. \n\nThe first geocache was less than a mile away from where she now stood, she noted, but the trail wound in serpentine fashion that made the trip at least twice that long. Judging by the topography lines on the map, though, there seemed to be no more direct path - other than the road, of course. But she certainly wasn't going to stroll a mile down a public street in broad daylight stark naked! \n\nThe necklace would be hidden in a tiny pill bottle a mile to her west, as the crow flies. She began to walk the trail with purpose, consulting the GPS in her phone from time to time, and enjoying her nakedness. The cool morning air gave her chills and made her nipples stand erect. She loved the way the gentle breeze caressed her private parts. She even reached down and separated her labia to allow greater access to the cooling wind. \n\nShe wished she could live her entire life naked on an island inhabited only by a strong man who really knew how to make love to her, and did. Three times per day, every day. Occasionally, her heart would leap into her throat when a startled deer would snort and flee through the brush. But she suspected that she was safe on this trail, at least for a while yet. \n\nBicycle tire tracks and shoe prints in the dirt made her wonder if she were really alone, but she assured herself that these had almost certainly been left by visitors a day or two earlier. It hadn't rained in weeks, so they might even be many days old. But the possible presence of cyclist posed a problem she hadn't considered. A person on a bike might come up on her quickly and silently, so she disciplined herself to take ten steps, then stop to look both ways and listen. She followed this pattern rigorously, determined not to become complacent and forget how vulnerable a pretty, unclothed girl alone in the woods might be. \n\nThirty minutes later, Jenn heard human voices in the distance. A male and a female voice penetrated the silence, though at least a hundred yards away. One thing, though, was certain. The voices were getting louder! Jennifer crept off the trail trying to remain utterly silent. She found the only nearby tree whose trunk was almost large enough to conceal her if she stood perfectly upright and still. \n\nHer pulse quickened as she tried to become as skinny as possible and she cursed herself for being so stupid as to volunteer for this stunt! About 90 seconds later, the couple passed within about 8 feet of her, chatting about their son's soccer coach, then disappeared around a bend the way she had come - none the wiser that a beautiful naked woman had been right there for the viewing. Had they glanced in her direction they almost certainly would have seen a tree trunk with a pink ass and firm tits protruding from either side! \n\nJennifer breathed a sigh of relief - one of many she would discharge that day, no doubt - and continued up the trail. Before long the path took a hard right turn and angled back toward the road. No surprise there, as this had occurred at least three times already. \n\nThe shock came when she consulted her phone and saw that the first geocache lay at the end of a short spur trail that returned to the road! She warily followed as her GPS took her directly under huge high-tension power lines for which a massive swath had been cut out of the forest at least 50 feet wide. Nothing but knee-high brown grass grew here, and she could see for hundreds of yards behind her, and fifty yards ahead of her to a roadside parking lot. She could even make out the tops of cars as they traveled down the road, and with every step up the hill she became more and more visible to them. \n\nThe necklace, if she read her GPS correctly, would be hidden somewhere in that gravel lot half the size of a football field, every inch of it completely exposed to passing traffic! She was at least relieved to see that there was only one car in the lot, no doubt belonging to the couple that had just passed her on the trail. \n\nShe crouched behind the large sign on the edge of the parking lot that pointed the way to Madrone Trail, and consulted her GPS once more. The necklace was hidden in the middle of the lot! How was this even possible? There was nothing out there but gravel! Surely Irv wouldn't put the pill bottle where it could be run over and crushed, she reasoned. But the coordinates didn't lie. \n\nShe began to evaluate her options. Her best gambit was to run about 25 yards to the parked car and hide behind it. Perhaps from that vantage point she would be able to get a better view of the center of the lot and hopefully detect anything out of the ordinary. ",
        "After listening for approaching vehicles, she sprinted out through the lot as fast as she could go without hurting her feet severely. Her awkward gait felt like that of an 80-year-old running across a blistering-hot beach. She must have looked hilarious, if anyone had been there to see her, she mused. (A small part of her wished someone actually were secretly watching her.) \n\nBefore she arrived at the car, though, she heard a vehicle approaching from the west. She was sure to be exposed if the passing driver were to simply glance her direction, so she instantly lay down in the gravel to reduce her profile and wait for the vehicle to pass. But to her horror she saw the dark blue SUV pull into the lot and park just beyond the car she had planned to hide behind. She was now trapped! \n\nIt was far too late to run back to the sign. Besides, whoever was in the car would be certain to walk right by it a minute or two from now. Having no other alternative, she skittered on all fours and hid beside the parked car. From this position, she was completely exposed to the road and the trailhead, but at least shielded from anyone in the newly-arrived vehicle. She sat cowering as she listened for telltale clues and prayed that no more vehicles might drive past. \n\nA single door opened, then shut. That was good, at least. Only one person to evade. She then heard the hatchback open, revealing that the driver was now standing behind the vehicle. Jennifer decided her only chance was to work her way around to the front bumper of the car she was now hiding behind and just hope against hope that the new arrival would take the most direct path to the trailhead between the rear of the car and the road. \n\nJennifer could feel her heartbeat in her temples and hear it punish her eardrums as adrenaline coursed through her system. Yet despite her terror, she feared she might spontaneously climax on the spot! The burning in her clit threatened to cross the fine line between pleasure and pain and she fought to squelch it with all her might so that she might keep her wits about her. \n\nAs though matters couldn't become more desperate, she heard a man's voice say, \"Come on, boy!\" She then detected the unmistakable sound of tags jingling as a dog leaped from the back of the vehicle to the ground! Within three seconds she found herself crouched beneath the bumper fighting the urge to orgasm as a German Shepherd stared at her curiously. \n\nThe dog barked once but Jennifer didn't move. \"Clancy, come!\" the man shouted. The dog looked back toward his master, then back at Jennifer. He then stuck his nose between her legs and sniffed her pussy! Apparently liking her scent, he even licked it twice! She had been aroused for 24 hours and her musky fragrance must have been overpowering to a canine, she knew. She pushed him away and sharply whispered in his ear, \"Go away!\" \n\n\"Clancy, come now!\" the master ordered more insistently. This time, the dog let out a tiny yelp of objection, but obeyed. Jenn listened as the hatchback was slammed, an electronic chirp announced the locking of doors, and a leash was affixed to Clancy's collar. A few seconds later she watched from behind as a man who looked to be in his 40s headed off down the trail with the leash in one hand and a plastic bag in the other. Every few feet Clancy glanced behind him in search of the naked girl, who had now crept between the vehicles out of sight. \n\nOnce the man and dog had disappeared into the forest beyond the power line easement, the naked nymph of the Pedernales set to work again on her assigned task. She glanced at her GPS, then crawled between the two vehicles and peered underneath toward where the GPS indicated the prize lay. Nothing but nondescript gravel! She pulled out the Post-it note again and studied the description. It read, \"Madrone's Madness will rock your world!\" No help there, she concluded. He had apparently buried the pill bottle beneath the gravel somewhere! But where? \n\nHer only hope was to run out to the middle of the lot when the coast was clear and look for any recently disturbed gravel. It seemed like a longshot, but it was her only shot, after all. She waited until another car passed, then sprinted to the center of the lot and looked around frenetically. That's when she glimpsed the corner of a piece of paper protruding from the gravel. \n\nShe'd already been out in the open for half a minute but, recklessly tempting fate, she ran over and grabbed it. It was a nude photo of her asleep on the couch from the night before! Irv must have driven here after dropping her off and placed it there as a marker. She glanced around quickly to confirm no one was coming, then hurriedly brushed away the gravel below it. There it was! She grabbed the tiny pill bottle from the ground and sprinted back to hide between the cars, just in time to avoid being spotted by a passing car - a police car, no less! \n\nThat had been too close! She glanced at the bottle and saw that there was something in it besides the necklace. She knew that she would have to wait until she found a safer place to open it, though. Thirty seconds later she had sprinted past the sign and down the trail in the same direction that three people and a dog had recently passed. At the T intersection where the entry path intersected with the Madrone Trail a few feet beyond the tree line, she suddenly realized that she had no idea which way the man with the dog had turned! Why hadn't she been paying attention? She might now run into people in either direction! \"Oh well,\" she told herself, \"This is what I get for running around naked in a park all day.\" She turned the opposite direction from which she had come, figuring there was a 50% chance that this portion of the trail would be unoccupied. She proceeded down it about 20 yards, then saw a clearing to her left. She slipped through some light underbrush and entered the secluded clearing to pee, to rest... and to read. \n\nAfter relieving herself in the bushes, she curiously popped open the pill vial and dumped out the gold chain necklace and... a tube of lipstick!?! Around the lipstick was wrapped a piece of paper. She unrolled the note as cautiously as she would an ancient Egyptian papyrus. What had Irv done? \n\nShe read the paper and smiled: \"Jennifer: There's been a slight change of plans to make your adventure more exciting. Put on the necklace, then take the lipstick and write 'FREE BLOWJOBS' on your stomach. Then go to the Madrone Trailhead sign, take a selfie and text it to me. Every now and then I'll ask you to text me another photo so I'll know you didn't erase the writing. Then continue to 30\u00b016'54.71\" N and 98\u00b014'46.28\" W. BTW... if anyone sees you and wants you to make good on the blowjob, you have to do it. New rule. Also, if anyone asks who you are, tell them your name is Buffy, the Vampire Sucker.\" \n\nJennifer chuckled at the insanity of the message. She didn't know whether to be mad or exhilarated. She felt a bit of both, actually. Buffy was a fun and appropriate name for a girl in her birthday suit, she knew. It sounded perky. But the \"Vampire Sucker\" part felt insulting. \n\nHeat radiated from her face, but couldn't be certain whether it was anger, embarrassment, or arousal. What she was certain of, however, was that she hadn't touched a penis since her husband had disappeared and the mere thought of getting face-fucked by a hard cock sent another sharp tingle through her nether regions. \n\nShe squeezed her thighs together to momentarily satisfy the itch, then surrendered fully to the urge, closed her eyes, and played with her engorged clitoris until she spasmed with ecstasy. \n\nAfter regaining her composure, she pulled out her phone and entered the new coordinates. She let out a sigh of relief when she ascertained that the next geocache was only a 10th of a mile away, almost due north... but across the road again. She slipped on the necklace, and shook her head in disbelief as she wrote \"FREE BLOWJOBS,\" in all caps, on her belly, then quietly slipped back out onto the trail. \n\nShe backtracked to the turnoff and headed toward the parking lot, proceeding up the wide, exposed entry trail as stealthily as she could. Crouching low she was mostly concealed by the tall grass. She could see the back of the sign she had hidden behind earlier, and was relieved that there were still only the same two cars parked in the lot. Sensing no approaching vehicles, she slipped out in front of the sign, tossed the lipstick and pill bottle in a nearby garbage can, and pulled out her phone. \n\nFoolishly, she hadn't thought to unlock her phone, open the camera and tap the selfie icon before stepping out into the open. She did so as quickly as she could, spending a lot more time exposed to the road than she would have liked. Finally prepared, she lifted the camera and framed it to get the trail sign, her naked body, and the bright red lettering on her belly in clear view of the lens. \n\nIt seemed to take 30 seconds, which played havoc with her nerves, but she managed to snap three quick photos before slipping behind a scrubby plant nearby. She paged through the three pics trying to decide which one would be best to send to Irv, then noticed something in the lower right corner of the third photo: the dog! \n\nClancy's barking nearly made her jump out of her alabaster skin. He was in her face again, this time with his startled master standing behind, stunned to find an attractive, nude woman on the trail. \"Are you okay?\" he asked with genuine concern in his voice. \n\n\"Yes,\" she replied meekly. \"It's just a bet I lost,\" she lied. \"Please don't turn me in.\" Before the man could speak, Clancy pressed his nose once again deep into her crotch and began licking furiously. Jennifer stood up in an attempt to get the dog off of her, trying desperately to cover her breasts and pussy with her hands as the man shouted, \"Clancy, no!\" and jerked his chain so hard the dog winced loudly. \n\n\"Sorry,\" he said, apologizing for his dog's behavior. Then, looking at the words printed on her stomach, asked, \"Is that true?\" \n\nJennifer felt a stirring in her loins and sensed her nipples getting so erect they almost hurt. For a moment she feared a gush of arousal might trickle down the inside of her thighs, but she squeezed her legs together to delay it. She sense herself hoping for an excuse to say yes, then recalled her agreement to do anything Irv commanded her. \n\nShe slowly lowered her hands to her sides and paused a few seconds to let the man's eyes wash over her completely. Her eyes visibly darkened and her breathing slowed. She yearned to feel a stiffened cock in her hands and in her mouth. She looked the man dead in the eye and coyly inquired, \"Are you accusing me of false advertising?\" \n\nThe man couldn't believe his luck! He almost had to pinch himself as he asked, \"Really? Where should we go?\" \n\nJennifer thought for a moment and said, \"How about in your car?\" \n\nIt sounded good to the man, so he ran toward the road - unlocking his car remotely on the way - and looked both ways. \"Clear!\" he whispered as loudly as he could. She hurried toward the parked vehicles, slipped between them and then climbed into the backseat of his SUV. \n\nThe man tied Clancy's leash to the front bumper and then reached into the driver's side to start the engine and get the AC working. It was only 9 in the morning, but this was Texas in September, and the temperature had already topped 80 degrees. He then closed the front door, opened the back one, and climbed into the backseat beside her. \n\nJenn couldn't believe she was about to do this. She had never blown a stranger except for that drunken orgy in Jamaica 5 years ago. But she was stone cold sober now. Yet, her hormones were raging and reason deserted her. As soon as the man had closed the door behind him, she grabbed his belt and began to unbuckle it. In a frenzy of lust she unbuttoned and unzipped his pants, and violently pulled them and his underwear together down to his knees. His hard dick popped out. It wasn't anything special, she couldn't help but notice, but she didn't care. In fact, she had never cared so little about anything in her entire life. \n\nShe almost threw herself upon it, bobbing up and down frantically as she massaged his balls between her fingers. Her other hand found its way to his mouth where he licked and sucked her fingers, driving her mad with desire. She had never come while sucking a man off before, but this one was explosive. It was all she could do to keep herself from biting the poor man's cock off as she orgasmed. She removed her fingers from his balls and began to furiously fuck herself with them. \n\nMoments later she came again, convulsed with pleasure, and let out a shriek. She was about to climb aboard and fuck the man when he grunted loudly and came in her mouth. His sudden eruption filled her mouth, ran down the back of her throat, and seeped out of her lips onto her cheek. Still, she couldn't bring herself to stop sucking until the man went completely limp. She practically exhausted herself trying to get him hard again so he could fuck her, but the effort was interrupted by the chime of a text notification. She glanced at her phone, which had fallen to the floor of the car. The message from Irv was simply, \"Pic???\" \n\nShe picked it up and texted the first photo to him. That's when she noticed they had an audience! The couple that had passed her on the trail had returned to their car to find a barking dog tied to the bumper of an idling SUV. While checking on the distressed pet they had glanced in the window and beheld a naked woman delivering a porn-worthy blowjob! The moment Jennifer made eye contact with them they turned away, embarrassed at their spying, and hurried to get into their car. But Jennifer, all modesty long gone, shouted through the glass, \"Wait!\" \n\nShe lowered the window and said, \"Would you guys mind taking a picture of me?\" They looked at each other in disbelief, even as the man she'd just sucked off began to object. \"Don't worry,\" she reassured him. \"You won't be in it. At least, your face won't.\" \n\nShe opened the car door wide, handed her phone to the woman and said, \"Get a couple of shots of me with his dick in my mouth.\" The man was getting hard again, she noticed. That would be better for the photos she wanted to keep as a memento. She opened her mouth and licked the shaft as the woman took close ups of the man's cock and Jennifer's face, complete with his oozing jizz on her cheek. Meanwhile, the woman's husband stood behind her taking picture after picture with his own phone. \n\nJennifer stepped out of the car in full view of the couple and the road. She smiled slyly as she texted one of the new photos to Irv. \n\nThe husband's jaw almost hit the ground when he saw the words printed on Jenn's naked body. He pointed at them and looked at his wife as if to say, \"What do you think?\" \n\n\"No way, buddy!\" she replied. \"But if you take me home right now, I'll give you one you'll never forget.\" \n\nThe couple hurriedly got into their car. As they pulled away, Jennifer could see that the woman already had her head in his lap and her ass in the air! \n\nMeanwhile, Clancy yelped away while his master pulled up his pants and thanked the stranger who had just delivered the best blowjob of his life. \"I'm Mark,\" he offered, able to think of nothing more substantive to say. \n\n\"Buffy,\" she replied, wiping his cum off her mouth with her finger and licking it clean. She swallowed hard and managed sheepishly to choke out her full title. \"Buffy the Vampire Sucker,\" she mumbled softly. \n\n\"What?\" he inquired. \n\nThis time she summoned all of her pride. She held her head high, arched her back until her breasts stuck out as far as humanly possible, raised her left hand as though holding a sword aloft, and announced with conviction: \"I'm Buffy the Vampire Sucker!\" \n\nThe man was silent for a few seconds, trying to wrap his head around her odd pronouncement, then replied with a chuckle, \"Good name.\" \n\nWith that, Jennifer glanced at her GPS, then walked slowly, majestically across the road toward her next adventure. Today was going to be a day to remember. \n\nTO BE CONTINUED."
    ],
    "authorname": "friend88812",
    "tags": [
        "exhibitionism",
        "forest",
        "geocache",
        "geocaching",
        "naked",
        "outdoors",
        "public nudity",
        "streaking",
        "woods"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/geocaching-for-clothes"
}