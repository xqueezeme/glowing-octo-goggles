{
    "title": "Unexpected Threesome Ch. 10",
    "pages": [
        "I'm still uninspired for a new story in my preferred first person from the female POV genre. But I've had a number of requests encouraging a continuation of this series. So here's another chapter.\n\nThis is a continuation from my previous \"Unexpected Threesome\" stories; although you shouldn't need to have read them to enjoy this. \n\nNed, the owner of a yacht cruising the pacific and now in his early 60's, has unexpectedly found himself seduced by his two long term crew - nubile girls in their very late 20's. Now a third is aboard.\n\nAs before with these stories, I am indebted to the male friends who have assisted me with relating to the male mind and body; and the red wine that made the conversation flow and loosened lips.\n\n*****\n\nAfter having sex with Ellen I must have drifted off to an exhausted sleep because the next thing I really remembered is waking up at 1910 hours (7.10 pm for you land lubbers) with memories of the most erotic dreams still in my head.\n\nAs my brain drifted into focus, at least part of the reason for those dreams became apparent. I had been sleeping face to face with Ellen. Her arm was over my hips holding me tightly against her, the front top third of my very engorged manhood pressed against her mound with it bent under and partly embraced by the lips of her crease. And because the boat was rocking, it wasn't a static embrace; it was rather rolling from side to side within the embrace with every movement of the boat.\n\nAs I looked down between her breasts, I could see I had been weeping copious amounts of pre-cum onto the sheet under me and could feel the very wet warmth of the fold in which my hardness rested.\n\nAnd while it shouldn't have affected my sleeping state, it did nothing for my wakeful arousal that the position of my cock had been achieved by her sleeping higher in the bed than me. Since she was about my height, that meant I was more or less staring at her breasts; my chin brushing lightly against a jutting nipple with every movement of the boat.\n\nIt was tempting just to lie there and enjoy it. In fact it was tempting to do a whole lot more. But I needed to get up and make dinner for us all so that Amy and Issie could finish their watch with a full stomach and be ready for their own rest.\n\nMore without thinking than with specific intent, I didn't bother putting anything on before walking out to the galley. It's not that I don't like wearing speedos; indeed there's a certain sexual frisson in sheathing a pre-existing erection with them as you put them on and they actually make for some nice feeling foreplay. And conversely, I think the girls can often look sexier in a nicely cut bikini than stark naked. Maybe it's the tease factor; maybe it's the thought of the slow reveal and layered feel up of them up as you strip them out of it. Whatever it is, they have their advantages even if there is more in your face sexuality in being in the presence of a completely naked woman.\n\nBut in the steamy tropics, there is a definite advantage in giving that area a good airing; more so given the amount of use it was getting.\n\nSo when Ellen followed me out equally naked, it more or less set the scene for the boat to be a naked one while we were at sea. The trick was not to get anything sunburnt.\n\nI could soon see the other trick would be not to go around in a permanent state of arousal. I know the first rule of a nudist camp is don't grow a public boner (well, and actually don't stare either). But the one I'd got out of bed with wasn't going down very fast and when Ellen joined me in the galley, pressed herself against my back and wrapped her arms around me and fondled it as she kissed up and down my back, any lost hardness quickly returned. I just hoped the nudist camp rule didn't apply if you were sleeping with all the residents.\n\nAs Ellen turned me around and gave me a full contact hug as she lip kissed me, I had a suspicion the 'don't stare' rule was going to be equally hard to follow.\n\n\"I haven't had such a great sleep since I left home Ned.\"\n\nThere were so many possible layers to that statement that I was too flummoxed to reply. My sleep had been good too; because it was deep and full of highly erotic dreams. Probably just short of delivering a night emission onto her stomach. Is that what she meant? Was she just exhausted and satisfied by the sex we'd shared beforehand? Or did she just sleep well; although there was an inference in her statement that I was somehow responsible for her well slept state.\n\nI stroked my hand through her hair and gave her another kiss on her cheek as I offered up a neutral reply.\n\n\"I'm glad to hear it.\"\n\nI turned back to warm up the curry that would be our dinner, trying to shield the top of my erection from the heat radiating from the stove.\n\nIt was at moments like this I couldn't help but reflect on the crazy turn my sex life had taken. Until my wife had been suddenly take from me, our sex life had been adequate. Twice a week of conventional, fairly predictable sex. I wasn't complaining. I was doing better than a lot of guys my age and it was enough to keep any sense of frustration at bay. I was no stud and never had been; just your typical caring, well domesticated and loving husband.\n\nIf in the last few years my erections had been less frequent and not as hard, and maybe even as big, as I'd once remembered them, I put it down to the effects of getting older. \n\nNow I was being asked for sex two or three times a day and going through each day and night in what seemed like a permanent state of arousal. My erections had gone back to being hard and big enough that they felt like they were ready to burst. There was no doubt in my mind that the only reason I was able to sustain it was the fact I had these two - now three - beautiful, nubile, young women prancing around in front of me in teasingly brief, sexualised bikinis when they weren't actually throwing themselves at me and draped over my body. The flood of testosterone or whatever other hormones that produced had made all the difference.\n\nStaring at them, indeed wallowing in their sexualised beauty, was an essential part of the game if I was going to keep my end up.\n\nBy the time I came up on deck with the dinner, Ellen was already settled into the cockpit with the other girls. They had no doubt registered her naked state - and I saw them noticeably register mine as I joined them, but they didn't immediately throw off their bikinis. At least my cock had gone momentarily flaccid.\n\nEllen sat next to me as we ate, so I wasn't distracted by staring across at her naked crotch. Mind you, that of Issie and Amy opposite me became no less of a distraction; if for other reasons.\n\nIssie is quite openly a voyeur. Just about any time I'd snuck a one on one with Amy while Issie was aboard, we'd find her staring in a window with a hand down her pants or slumped in a post orgasmic state with a large wet patch in the gusset of her bikini pants. Even in the rapidly fading tropical light, a large, dried, material stiffening, stain was clearly visible in the gusset of her light salmon pink bikini which hadn't been there when Ellen and I had retired below a few hours ago. As I looked more closely I could also notice a smaller but darker stain around each nipple; as if she had been tweaking the nipple and her body oils had permeated it.\n\nIt made me look at Amy and while her light blue pants and the angle of my view made it all less obvious, I was sure I could see a dried stain in them too.\n\nThere is a hatch that looks straight down from the cockpit onto the bed Ellen and I had shared. I tend to just forget all about it when I'm lying there, but the thought of them peaking in and getting off on the sight of Ellen and me making out was somehow arousing; even more so because they'd been showing an increasing inclination to stimulate each other during our threesomes and it made me wonder if they'd been helping each other along as they'd been watching.\n\nThat arousal quickly manifested itself physically. When you're naked there's no hiding these things. Even the plate on my lap drew attention to it rather than disguised it as it started levitating as if it was possessed. In the end there was no alternative but to pick the plate up and keep eating with it under my chin as if nothing was happening. If I hoped the others wouldn't notice, that hope was disabused when Ellen slid her hand across my lap and tickled it with her fingers. The previous half-mast rapidly turned into a full vertical pole, something she drew attention to.\n\n\"I wonder what brought that on?\"\n\nI ignored the question, but Issue didn't.\n\n\"I think he's having dirty thoughts about us.\"\n\nTo which Ellen replied.\n\n\"I hope so.\"\n\nThe little distraction not withstanding, once they had finished dinner, Issie and Amy retired below to try and get their own nap on the off watch before they took over again at midnight. It struck me that something that Issie and Amy hadn't thought about enough was how they were going to get any threesomes in while we were at sea. Indeed, if I was going to always be sharing watch with Ellen, how they were going to get their share of sex at all unless I left Ellen on deck alone.\n\nThis leg wasn't so bad. It was only 48 hours. They could probably suffer sexual deprivation for that long. But there'd be future ones where we'd be at sea for a week.\n\nBut their departure below left me alone again with Ellen; a tall, stunning and very naked Ellen. For a while we could keep ourselves busy. When you take over a watch, the first thing you need to do is get yourself back up to speed with how things are on the boat.\n\nIn these waters, above all else, that means knowing where you are. Ellen efficiently went about taking our position and going below to plot it on the chart to ensure we were still well clear of any hazards and heading where we should be. With the autopilot controlling the steering, I kept myself busy doing a circuit of the boat checking all the gear and sail trim.\n\nHaving finished my job I sat down on the forecabin roof admiring the view out to starboard where the moon was just rising, casting a beautiful dancing reflection over the rolling swells as the phosphorous wake from our bow spread out to meet it. Ellen soon joined me, sitting close enough that her hip was pushed firmly against mine and our thighs were in contact for their full length. I couldn't help it. The contact with her naked flesh produced a predictable reaction and all I could do was ignore it.\n\nEllen broke the silence.\n\n\"Beautiful, isn't it.\"\n\n\"I never grow tired of it... There's been nights I've sat here watching for hours.\"\n\nThere was a moment's silence before I added. \"Where did you grow up Ellen.\"\n\n\"Avalon. My parents still live there.\"\n\nSo, my evaluation had been correct. She was a peninsula girl.\n\n\"Did you always want to be a doctor?\"\n\n\"Since I was a little girl. When one of my friends hurt themselves in the playground I just wanted to be able to help them.\"\n\n\"Did you find doing the course lived up to your expectations?\"\n\n\"Yes and no. I suppose I came to realise that a suburban medical practice isn't exactly a daily matter of life or death. Mostly patients with colds and heartburn. It's partly the reason I want to do emergency medicine. Mind you, I will miss the closer relationship with your patients that a suburban practice gives you and the fact that, at its best, you can really influence their lives for the better. But it's all so corporatized now. A quick consultation and push them back out the door for the next one or the accountants will come after you. It sort of spoilt it for me, especially as I often felt I wasn't doing enough to look after their longer term health. Maybe one day, when I can afford, it I'll come back and open my own practice where I can worry more about the patients than the money.\"\n\n\"What have you been doing out in the Pacific?\"\n\n\"I took a role with M\u00e9decins Sans Fronti\u00e8res in the Solomon Islands. Then after the cyclone went through I heard they needed volunteer help at some clinics in Fiji. The Fijian people were really lovely to work with and I felt privileged to be allowed to do so, but when that crisis passed I decided I'd make my way home while cruising on yachts. I'm afraid I was a bit na\u00efve and my first choice of a yacht to go on wasn't that good. Thank you for rescuing me.\"\n\nIt was really hard not to like Ellen. You could tell that what she was talking about wasn't virtue signalling or CV building. It came from the heart. There was a passion in her voice and the way she spoke about it. I was already feeling quite close to her; hell I was falling in love with her or at least as much as I would let myself for what could only be an affair for the duration of the trip. A girl like that always leaves me wondering why she hasn't had a string of suitors chasing after her.\n\nI took a risk and asked a question I knew as none of my business.\n\n\"Did you leave a boyfriend behind to make the trip?\"\n\n\"No. I suppose I was too busy with my studies to get deeply involved with someone. It's a pretty intense course and I'm a bit of a swat at heart. There were some really nice guys I went through Uni with and in the early years of my course I had a few friends with benefits arrangements to keep me grounded for my sexual needs; but I kept them at arm's length. Maybe none of them really were what I was looking for anyway.\n\nAs the years went on I decided that these were going to be the guys I'd be sharing my profession with. I thought it was better to adopt a 'relationship or no sex' rule and since I didn't find a relationship, the no sex won by default.\n\nThe same since I've been away. I wanted to keep a purely professional relationship with my co-workers and as I'm sure Issie and Amy have said to you, the quality of younger males on the yachts in the Pacific isn't that high. I'm sure there's exceptions but I didn't come across them. It's been a long drought.\"\n\nThat was way more information than I'd asked for. It had all gushed out from her so quickly I hoped she didn't subsequently regret disclosing it; although I wasn't immune to thinking it was a strategic disclosure. I was pretty sure she'd just told me I was the first guy she'd slept with in something like four or five years. If it was meant to make me feel privileged, it had the desired effect.\n\nI don't know why she picked that moment, but as we sat there she slipped an arm around my back and rested her shoulder against mine. My cock was beginning to act something like a yo-yo. It had sprung up when she first sat so close to me and then half settled down again. Now it was back with a vengeance.\n\nWe sat there talking about her experiences in Fiji and her family back home for about half an hour before my back started to get a bit sore from being unsupported; and yet I was reluctant to do anything to break the contact between us. Still I figured it wasn't that comfortable for her either. The mast was right behind us, so I suggested we lean back on it.\n\nAs I started to shuffle back to it, I thought I'd lost her when she stood up. But instead she waited until I repositioned myself, then sat down between my legs; bringing herself in until my erection was pushed against her back. Then she took my hands and wrapped one of my arms around her lower stomach and the other around her chest, high enough to be in contact with the bottom of her breasts, resting her head back on my shoulder.\n\nI had to supress a groan of pure bliss as she overwhelmed my senses. Her soft flesh pushed against my body, the feminine aromas invading my olfactory centres and the thick, blonde cascade of her long hair that ran down my chest and brushed against the tip of my erection all brought me to a heightened sense of arousal. Not just a physical one, although that was ready to burst, but more than anything a mental one. I felt entirely receptive to her needs, hanging off every word she spoke as if it was that of a goddess.\n\nAs we continued to talk; about her studies, my own professional background and the personal tragedy that had brought me to this phase of my life, I felt her body physically relax into mine; as if she was ready to merge them into one. It was a privilege to be allowed this close - this intimate - with this beautiful, delightful woman so soon after I'd first met her. \n\nBut I also became aware my hands were being ever so slowly redirected. So subtly at first that it took me a while to register. I soon found the lower hand resting on her mons while the upper one sat high enough on her breasts for her now hardened nipples to be resting against the side of my arm and hand. I wasn't wanting to be the one to push things along or turn an intimate moment into a sexual encounter. But there just came a moment her intentions were so obvious that to ignore them would be petulant.\n\nI extended a finger and slid it into her crease. She let out a little hum of delight and pushed her head more deeply into my shoulder as I felt it move across her already engorged and moistened clit. She lifted my upper hand to be across her nipples to play with them at the same time she released the lower one to explore more deeply and actively into her crease.\n\nExtending my finger further I found her sex already receptive to being penetrated. It seems I wasn't alone in being aroused by the intimacy of our contact and conversation.\n\nIt would be foolish for me to make generalised statements about my approach to sexual contact with different women. It would suggest a breath of experience that I don't have. But I would say that my initial fingering of both Amy and Issie in a way that tested out their g spot has been amply rewarded; for both them and me.\n\nI pushed my finger in deeply and started raking the front wall of her sex; gently at first, then with a bit more pressure, adding a second finger in the process. Still, I hedged my bets by using the back of my thumb to stroke up and down against her clit; its prominence making that all the easier.\n\nEllen was no screamer. Barely even a moaner. Only her breathing betrayed her rising sexual excitement and I had started to assume it was more the stimulation of her clit than anything I was doing with my extended fingers that were achieving that. So it took me by surprise when her body suddenly tightened and her face screwed up into one of intense focus as in a still quiet but decidedly audible voice she exclaimed -\n\n\"Oh, oh Ned. That's beautiful. There... no higher. A bit firmer. Oh...\"\n\nI concentrated on raking that part of the wall of her vagina she'd identified, still thumbing her clit, taking my cues from the continuing stream of \"Oh...oooh...OH..\" that she whispered ever so quietly into the ear that was next to her head as it lay back on my shoulder. Her body tightened further to the point it started to shudder a bit with the rising tension.\n\nThe release - her climax - was signalled by a sudden gush of fluid over my hand, a prolonged, intense but still quiet \"Oharrrohhhhaaarr\" and the lifting and rocking of her hips as her hand clamped mine inside her.\n\nI held my hands still as she settled back down until her body limply rested motionless against mine.\n\n\"Oh Ned, I'm sorry. I'm so, so sorry. I've never done that before.\"\n\n\"What.\"\n\n\"Pissed on someone as I've climaxed.\"\n\n\"I think it's called squirting and I suspect most guys think it's a good thing. Some might even get a fetish about it. Anyhow, I thought it was some sort of female ejaculation.\"\n\n\"This is probably not the time to act all doctorary, but they've recently done tests to show that it's basically piss. What about you, do you have a fetish about it?\"\n\n\"I've only encountered it a couple of times in my life, so no. But I'm happy to take it as a compliment on the sex if that makes you feel better about it.\"\n\n\"It's certainly a compliment. That was so intense. I'm not sure I've ever had one like that before.\"",
        "We fell into a momentary silence as her hand slipped behind her back and wrapped her sensuous fingers around my hardness. It was my turn to let out a little moan.\n\n\"Ned, I hope you don't think I'm some sort of slut coming onto you so strongly. It's just I feel so comfortable with you. You've unleashed a whole lot of pent up needs; even just to rest secure and comfortably in the arms of a real man. \n\nIt's hard being a professional woman. You have to be so strong, so independent and so careful about your reputation. But in the process you lose some of what it is to be human; the closeness and intimacy of personal contact. Just to be able to cuddle someone, really cuddle up against them. To feel their body and the person inhabiting it and to be able to do that without it immediately leading to sex. It's just an aching need I've felt for so long.\n\nThat was always the problem with a friends with benefits. The minute you put your body against them, they think it's time for the benefits and then all too soon it's over and it's too late for just a cuddle. The thing is, after I'm cuddling you, once I feel I've made contact with the person who is you, then I feel the need to complete the connection with sex. I know I'm being completely inconsistent, but it's just a matter of getting it the right way around.\n\nYou must think I'm some sort of crazy woman talking like that just after we've met. But Issie and Amy have given you such a wrap, it was like I already knew you. And everything you've said or done since I've been aboard just fitted in so well with what they'd said that it reinforced that feeling of having known you for longer.\"\n\n\"That's very sweet Ellen. And the truth is I'm actually I awe of you; your intelligence, your maturity and I'll admit, your beauty. Rest assured I don't think you're crazy or a slut. I might question the judgement of all three of you in wanting to sleep with me, but I'm not complaining and it's probably better if I just shut up on that score.\n\nAnd don't be too hard on younger guys. I was once one too you know. There's some pretty heavy duty hormones in their bodies that they need to deal with. You might find that if they really know what you want they'll give you everything you ask for. But absent that knowledge, all they know is that they have a fairly anxious hard on and a beautiful and seemingly willing woman to stick it into. Nature sort of takes control.\"\n\nWith her fingers still around my erection, Ellen turned in my lap. For a moment the thought occurred to me that she was about the straddle and mount me and Issie's rule about her using a condom flashed into my head. But any rush to forestall that was held back by my knowledge of Ellen; sensible and trustworthy.\n\nInstead she kissed me briefly on the lips before going down on me.\n\nShe took the end of her mane of hair and brushed it over my chest and down my stomach before tickling my hardness with it; twirling its length in several circles around my extended shaft before pulling it gently off. It was a delightfully unique feeling.\n\nFinished teasing it, she bent down further to lick the length of it, from its base to where she swirled around the tip with her tongue. As her butt rose up with her deeper bend, I rested my head back against the mast and groaned in pleasure; not just at the feel of her tongue against my hardened flesh, but at the sight of her body. Her head was almost lost under the cascade of her thick hair. Her back, femininely muscular and ram rod straight, ended in those glorious butt cheeks, the extraordinarily long and deep valley between them showing the reason she looked so great in a thong. \n\nI don't usually think like that, but there was just something in the shape of that valley and the final turn of her arse that imprinted on me the thought of her sex that lay just out of sight. Open, receptive and dripping with her juices. The thought of my shaft embedded in the warm wetness that had prepared itself to receive me caused it to surge far more than the actual stimulation of it by her tongue.\n\nBut then my shaft found itself in another warm wet void as she thrust it into her mouth; tightening her lips against it as she slid it up and down to where it met the sensuous grip of her hand wrapped around it. I was overwhelmed by a need to touch her. My hands had been by my side supporting me. One I slipped under her exposed side to feel up her nipple; finding it already firm and rapidly fully hardening to my touch. The other I ran through the silky length of her hair, gliding it down her back and up again.\n\nEach of Amy and Issie had deep throated me at the start of our sexual arrangements; catching me by surprise because I'd never had that happen before. Goodness, I didn't even think it was possible.\n\nSince then, they'd rarely given me oral sex although they'd willingly sought it. I suspect it was because my erections were far too precious to waste on a mouth ejaculation. Precious not because they were any better than anyone else's but because with an older male's refractory period and two girls to share it, every erection could be put to a better use, so to speak. It might be different for a younger guy who could get it up again in a few minutes but I was long past that. And given the use to which it was actually being put by them, I certainly wasn't complaining.\n\nEllen wasn't deep throating me, just working over the top third. It was still pretty nice. She soon had me on the verge of coming. I was trying not to be too loud about it because I didn't really want to advertise to the other girls that Ellen and I were at it again. I don't know why; probably so we didn't start up some sort of competitive thing.\n\nBut Ellen must have sensed it because, even before I could say anything, she took it out of her mouth and held the tip against her breast, jerking it as she flipped it against her nipple the additional two times necessary to set me off, taking the first two ropes on that nipple and then pushing it across so the rest sprayed the other and my fingers which were playing with it. Then without unwrapping her hand from my erection, before it had even started to go flaccid, she was straddling my lap pushed against me and kissing me; smearing my chest with my own seed in the process while my cock continued to drip cum onto her mound and through her landing strip of pubic hair.\n\n\"You know why I did that, don't you?\"\n\nI wasn't entirely sure what exactly she was referring to. But the answer was appropriate anyway.\n\n\"No.\"\n\n\"Because now were going to have to help each other use the cockpit shower to rinse it off.\"\n\n'Kinky' I thought. A girl who's planning the next stage of sex play before the previous one has even been brought to a climax.\n\nEllen stood and offered me a hand to help me to my own feet, capturing the hand and wrapping it around her and resting it against her sticky mons as she turned to walk back down the side deck with me behind her, my cock brushing against her butt because she was holding me on such a short leash.\n\nThere are times when a post ejaculation cock goes almost instantly flaccid and times when it seems reluctant to give it up, so to speak. A really good climax helps, but it not always obvious why. Issie has ridden it like a Sybian without stopping its collapse, so it's certainly not a matter of heavy stimulation.\n\nThis time mine was reluctant to pull stumps #(a cricketing idiom for those not familiar with the sport - look it up). The reason it was brushing against her butt was that it was decidedly half to three quarter mast, projecting forward and as she deliberately and provocatively sashayed in front of me, it was flipping across her cheeks. The visual teasing and gentle physical simulation was working a treat. I could feel the blood coursing through it as if the blood itself was almost anxious to pump it back up hard.\n\nWe moved around the wheel to the shower head retracted into a housing at the stern. As I stood immediately behind her, Ellen knelt down, pulled the extension line from the housing and turned the tap to warm, turning on her knees back towards me. Then she leaned forward, pushing my partial erection between her breasts.\n\nEllen looked up at me cheekily.\n\n\"We don't want to use too much water. What's that they say about showering with a friend?\"\n\nWith her firm nipples against my upper thighs and the bell of my cock surrounded by her breasts and upper chest, she held the tap over the collection of body parts and pushed the button to fire a little squirt of the warm water directly onto the tip of my manhood, using her other hand to slosh it around.\n\nAs she fired off a second squirt she wrapped her fingers around my cock and slid her hand up and down a couple of times as if she was jerking me off, making out as if she was doing nothing more than giving it a light scrub. \n\n\"We want to give this a good clean, don't we? It's been getting a bit of use. Here, can you hold the hose?\"\n\nWith both hands free, she pushed in the sides of her breasts firmly against my captured cock.\n\n\"I think we can spare it a bit more water.\"\n\nI gave it a soft push of the button, releasing a continuous light flow of the tepid water directly onto my shaft as she moved her breasts up and down. The warmth of the water, the feel of her breasts and just the plain sight of this beauty titty fucking me as I looked down at her did the job; indeed, you might call it performing a miracle. As I let out a little moan of pleasure, my manhood hardened completely.\n\nEllen grinned at me.\n\n\"That's pretty impressive Ned, but we've got a bit more cleaning up to do.\"\n\nShe stood up, pressing her breasts against my chest as she took the hose and directed a squirt between us, moving her breasts with their firm nipples from side to side against me as if they were dual action cleaning cloths.\n\n\"We don't want those chest hairs getting tangled with sticky stuff, do we? Ah yes, there's one other spot I nearly forgot.\"\n\nShe separated our upper halves and reached down and wrapped her hand around the hard shaft that had been pressing against her mons. Squirting some water on her landing strip of pubic hair, she brought my cock against her and brushed it from side to side; adding a bit more water from time to time.\n\nIf she kept going the way she was, there was going to be a whole another round of cleaning up to do. The pre-cum I was leaking was already doing a good job of replacing what she was washing off. I wondered how this was going to end.\n\n\"Ned, I've been a bit naughty. I always was planning on seducing you while we were on deck alone tonight, but things sort of went in a different direction from what I'd planned. Earlier today you made really beautiful love to me. I was wanting to make beautiful love to you this time.\"\n\nShe reached into the storage alcove of the steering wheel binnacle and pulled out the little notebook she kept there to record our latitude and longitude for transfer to the paper charts. Flipping it open to the back cover, she pulled out a condom that she'd stored there. She held it up as her other hand circled around behind my butt and pulled me firmly against her.\n\n\"Can I still do that?\"\n\nFunny, but in my many years I don't know I could actually remember a girl asking me 'can we have sex now?' It usually sort of just happens. Rising passions, octopus hands, groping to get clothing off and all that. Maybe in my younger years I might have asked if they wanted it, just to make sure I was reading the situation correctly. But the other way around? My brain raced to deal with how to vocalise the right response. \n\nDon't get me wrong, it was always going to be yes, but somehow putting on a strong Aussie accent and going, 'sure love, strip off, bend over and we'll get started' just wasn't going to cut it; not least of all because she was already naked. And with Ellen, as had been so often the case in the last 24 hours, the biggest battle was not to let my voice quiver as I dealt with the maturity and directness of her manner.\n\nI reciprocated the hand on butt pulling us together that she was using on me and brought my lips close to hers. \n\n\"That would be beautiful.\"\n\nEllen closed the narrow gap between our lips, slipping her tongue into my mouth and across the front of my teeth.\n\n\"Let's use Amy's sun bed.\"\n\nAmy's sun bed was nothing more than two cockpit seat cushions she'd secured side by side across the aft part of the cabin top just in front of the companionway. As skipper I certainly appreciated it when she used it because it meant she was laid out flat in her tiny bikini, right across my field of vision; those gorgeous breasts reaching skywards while her plank flat stomach ran down to where it slipped under her bikini bottom and turned into the absolutely perfection of the teasingly swollen rise of her mound. It was all magnified in its effect by the convex curve of the cabin top which stretched out her stomach and multiplied the impact of the brazenly sexual display of her breasts and mound.\n\nI don't know whether she knew the impact it had on her skipper. While she appeared entirely nonchalant in the display, she probably did. But for me it was a leg crossing tease, even if I'd just finished fucking her in our morning threesome mere hours earlier. Because her perky breasts were just a size or two too big for her whispishly thin figure, because her nipples were always visibly pushing up the material of her small top, because the areola which surrounded them also pushed up as little plinths on which the nipples sat and because of the clarity of the definition of her raised mound, everything about her appeared swollen in peak arousal. In reality, that was simply the way her figure was. But in perception, it was like her body was silently calling for me to simply mount her and go for it and it took all my will power not to.\n\nMany a fantasy had been built around that sun bed; ones incapable of fulfilment while in the crowded anchorage of Papeete or in today's ocean sail while the other girls were lolling around on deck. \n\nEllen took my hand and led me there, inducing me to lie on my back. Straddling my thighs, she bent down and kissed my hardened cock, licking up its length, circling the head with her tongue and then extending her body to stick her tongue into my navel.\n\nMoving forward so that her thighs straddled my engorged cock without touching it, she sensuously ran her hands up my chest, fingers extended, touching my body as if it was some precious object. Her gaze caught my eye and held it there, the most wondrous benevolent smile making me temporarily forget this 25 year old stunning beauty was staring down at the wrinkled face of someone more than twice her age.\n\nThe first erotic touch was so light, so gentle, I barely noticed any feeling against my cock at all. But it registered on her face; a lip biting, eye rolling look of sexual pleasure. Alerted and aroused by that, the touch against my hardness and Ellen's movements of her hips became more into focus. It was like someone was softly gliding an extra-large ball tip permanent marker pen slowly up and down the central length of it.\n\nI realised she was ever so lightly running her swollen bud up and down my erection, leaving a trail of slippery wetness in its wake.\n\nWhen Amy or Issie have used my cock as some sort of external dildo, it's usually been more of a mashing action; their crotches firmly planted down on my cock, their actual bud indistinguishable by me from all the other parts of their wet sexual anatomy grinding on my manhood. But I knew from my first encounter with her that Ellen's bud is exquisite. Larger than any other I'd seen; when swollen, it projects further out than normal, making it far easier to stimulate.\n\nDon't get me wrong. It was no miniature cock. Its surface shined like any other and glistened in her wetness, just a bit bigger and more jutting. Really to a dumb male it looks more like you think a clit should have been; something easier to find and more likely to get itself in the way and stimulated while a guy's pounding the woman's sex.\n\nAnd now she was touching it along the length of my manhood. For me, at first it was just something nice; not mind blowingly great or even likely to set me off. Just nice, especially when her vulva lips touched down on my cock and it was suddenly surrounded by the feeling of wet slippery flesh. But for her, it was clearly a powerful stimulant. Her eyes were closed, her lower lip nearly sucked into her mouth in an expression of barely tolerable pleasure as her breathing became fast and excited.\n\nPerhaps it was the ultimate demonstration of the infinitely greater number of nerve ending in the female clit than there is in the male shaft.\n\nMy own nerve ending woke up suddenly when her bud slipped into the recess under the bell of my shaft, finding the little vee'd notch on the underside, and stopped, like it became stuck there. A shot of pleasure went down my manhood and all the way up to my brain. Ellen's went off the scale. For the first time ever, an audible groan of sexual ecstasy escaped her.\n\nHaving discovered a sweet spot of pleasure, Ellen started working it, slipping her bud back down the shaft a small distance and running it back up to be stopped in the recess under the bell again, where she'd circle it. Suddenly she was gasping and writhing, barely able to keep her clit moving along the path that was giving it so much pleasure, whimpering under the insistent waves of pleasurable stimulation that she clearly so desperately craved after so many years of sexual denial.\n\nI could sense her orgasm wasn't far away. I lifted my hands up to her breasts, tweaking an already jutting nipple with each one. Maybe that was the final additional stimulation that pushed her over the edge, maybe it made no difference at all. But with that she came. Came hard - harder than she had any time before with me. She bent over me, thrusting her bosom over my face, a nipple right at my lips, as her arms wrapped themselves around my head and her moans and groans of extended pleasure were muffled by the press of her face into the cushion over my head. \n\nFor maybe two minutes her orgasm continued as she alternately gasped for breath or moaned in release. I brought the nipple on my lips into my mouth and swirled it with my tongue, encouraging it along. \n\nAt first her hips held that sensitive little bud out of contact. But after the first few moments of release, she brought it back down on the tip of my shaft, pushing firmly against it. Periodically she would shudder, the movement clearly stimulating it as another wave of pleasure seemed to engulf her, causing her to clamp my head harder and whimper as if she was begging for an escape from an overwhelming of her senses.\n\nFinally her body settled in a manner, but clearly her mind wasn't.\n\n\"Oh god Ned, I need you in me. I need to make real love to you so much.\"\n\nMaybe for the first time I sensed Ellen having less than full composure. As she fumbled with the condom packet and rolling it over my shaft as she held herself suspended over me, she seemed to be almost trembling with need. In a single long stroke, she brought herself down on me and had me fully penetrated to the point once again I was sure I could feel that swollen bud against my pubis.\n\nEllen settled her head down next to mine, her body still, as it draped over me in that delightful way that lets you feel surrounded by this warm, soft, female flesh. It seemed that for a moment merely being filled by my swollen hardness was satisfying some need she felt as I heard several soft moans of satisfied pleasure escape from her. I put my arms around her, one hand covering her delightful arse, the other around her back.\n\nThe first movement I detected was a turn of her head to start nuzzling my neck, bite my ear and then glide her small little ski jump of a nose across the skin of my cheek. She pecked at my lips, flicking her tongue out occasionally to dart between my lips, as if tasting me without wanting to be captured in something more penetrating or lasting. From there her lips moved down to let her take my chin into her mouth, the circle of her teeth ever so lightly pressing on my flesh.",
        "It was at that point her hips came to life, a slight rocking, circling motion that sensitised my cock to its inflated presence in the warm, wet, tight embrace of her sex; not thrusting, but just enough movement to excite it and make it yearn for more.\n\nConcurrently the delectable orbs of her breasts, hanging down from her chest under the effect of gravity in their most picturesque form as she held her torso above me, moved across my own chest. First one way, then the other and back again. I could distinctly feel the two firm, rapidly hardening, buttons of her nipples draw a path through the tangle of my chest hairs as she stimulated them against my skin; pausing and circling when she felt them make contact with my own nipples, before continuing in their shallow continuous arcs.\n\nHer lips moved to my neck, seeking out my adam's apple and gently lifting my skin off it between lightly held together teeth. Suddenly, in a rush of passion she attacked the side of my neck, sucking a fold of skin into her mouth and grasping that with her teeth, more firmly this time, as the rocking movement in her hips became faster and more determined.\n\nMoans of pleasure were escaping from between her teeth. She was starting to ride me. The movement of her nipples across my chest became faster and more determined, the press of her mound down on my pubis firmer, the circling movement of it more determined as I became increasingly convinced I could feel her swollen bud pushing into the point where my shaft rose up from my body.\n\nI was a mere passenger on this train she was riding. No, maybe I was the carriage itself. As her excitement became palpable, it all felt wonderful. This sensuous, intoxicating interaction with one so young, intelligent and beautiful. Yes my manhood was filling itself with every measure of aching desire and release inducing tendrils of pleasure. But once again, it was so much more than that. I felt like I was merging with her, vicariously experiencing her own rising passions as I absorbed into me the very essence of her person.\n\nThe hand I'd had on her back stroked her cascading mane of blonde hair, encouraging it to brush delightfully against my shoulder as the other slid up from the cheek of her bottom along her back and down again.\n\nAs she came she simply eased her body down onto me, her face into the cushion alongside my ear. Her thighs tensed as I felt each press of her contractions on the shaft I held so wondrously deep inside her body while with each one a little moan escaped her, like her lungs were being squeezed by the same pressure that bore down upon my manhood.\n\nThey hadn't even finished before I felt a movement of her body. With a...\n\n\"Oh Ned, I'm sorry, but I so need to do this.\"\n\nEllen brought her haunches up alongside my hips and with a push of her arms rose into a squatting, cow girl position over me. I felt the base of my cock still penetrating her body bend to accommodate her new pose. She lifted herself slightly and brought a hand down to circle the base of my shaft.\n\nPutting one arm behind her to support herself, she leaned back; rising and falling on my shaft as she raked it against her recently discovered g spot.\n\nUntil the last one, Ellen's orgasms - indeed her whole sex routine - had been virtually silent. The little moans that accompanied her last one had been just within the audible register. But it seemed that for Ellen that represented the crossing of a bridge. She was no screamer like the other two, but what she was doing required some effort and it was obvious it was rewarding her with considerable pleasure. The \"oohh's\", moans and grunts came in a constant stream of sweet, feminine, almost innocent expressions of unadulterated joy that made it impossible not get vicariously excited for her.\n\nHer head was held back, her luxuriant hair falling down her back, just occasionally flicked to the side as she reacted to some burst of erotic pleasure. Her face was one of intense concentration, eyes mostly closed, her perfectly sculptured upper teeth biting over her lower lip. \n\nHer orgasm was signalled by a gush of fluid over my pubis and the most delightful prolonged moan. But far from causing her to relax down on me again, it spurred her into a sexual frenzy. Laying back down on me, her legs outside mine, she squeezed tightly on my manhood and rubbed her nipples up and down my chest as she rapidly plunged my hardness fully into her body, circled it a bit and then drew it half way out for another plunge.\n\nNow it was me moaning as slivers of bliss shot up the engorged length of my manhood and transmitted their pleasure delightfully to my brain. The cascade of her hair fell off to one side and down onto my shoulder, partly enclosing the space between us and letting me submerse myself in the total femininity of her being. I willingly breathed in her exhaled air and bathed in the aura of her youthful womanly beauty. \n\nThat was the thing about Ellen that was different from Amy and Issie. It was like there was a third dimension to her beauty; a redolence, an ethereal spirit that inhabited a space outside her physical being. It felt like coming within the force field of that spirit was itself an act of intimacy, of union, even of penetration, far more significant than the length of my cock that was at this very moment pistoning in her sex. \n\nI'd felt it the moment she'd stepped aboard. It had distorted my judgement even as I'd resisted the idea of her joining the crew. Her doctoring, navigation and sailing skills might have sealed the deal and let me save face, but I knew from the start I wasn't going to cast her ashore.\n\nIt gave her a goddess like gravitas which her intelligent and confident manner simply reinforced and left me feeling vulnerable and childlike in approaching her. \n\nOverwhelmed by it all, my balls came onto the boil, percolating up my increasingly sensitive shaft. Every thrust became an act of sheer unadulterated bliss. But it couldn't go on. With an audible grunt like groan my seed erupted from my body, shooting jets of brain searing pleasure along the hardened length of my manhood.\n\nEllen lowered herself over me, offering up her body to pleasure myself in with the successive squirts of cum and the final shuddering delivery of the last vestiges of it into the void of her sex.\n\nI never have been good at those immediate post colitis moments. I love the cuddles, love staying penetrated for as long as my manhood will hold its erection, but beyond that I never really know what to do.\n\nDo you tell them that was fantastic, discuss the finer points of existential existence or talk about the weather. That was always the advantage of sex as you went to bed; you could just have a final kiss goodnight and roll over and go to sleep.\n\nAmy and Issie had made it easy for me with their matter of fact manner. A \"that was great Ned, same again tomorrow\" approach delivered as they crawled on all fours off the bunk dragging their suspended tits across my face made me feel good while leaving little room for ambiguity. Sure, sometimes they wanted to get deep and meaningful, but there was usually a clear reasoning or purpose for that and once you picked up on it everything else came naturally.\n\nI had no such insights into Ellen yet, so defaulted to a silent cuddle. She stayed draped over me, her face turned in so that it rested against my cheek rather than down onto the cushion, leaving her breath steaming up my ear.\n\nIt was only a minute or two before I realised something felt strange. An unexpected dampness where her nose met my cheek that my male brain took a moment longer than it should have to process. I took the hand I had buried in the depths of her luxuriant hair and stroked it lightly along her cheek just under her eye, intercepting a second tear.\n\n\"What's wrong Ellen?\"\n\nShe took a moment to offer any answer at all.\n\n\"Nothing. It's nothing.\"\n\n\"They're real tears.\"\n\n\"Yea, but not necessarily sad ones.\n\nIt's hard to explain. I've only ever had meaningless sex for the sake of it before. Just friends with benefits stuff and a long time since I've even had that.\n\nIt's going to seem strange to you because you've really just met me, but Amy and Issie have been so good to me, so close, for a while now. They sort of drew me in and made me feel like a part of the boat's extended family before I even stepped aboard. The stories were so detailed, so real and so inclusive that I felt like I was already there. So that by the time I joined you it felt like a comfortable well-worn jumper already. And you were part of that, like I already knew you and you were an old friend.\n\nAnd now it feels like I've consummated that inclusion. It just feels good Ned. Having sex with someone I feel close to, close enough to call it making love and not just making out.\n\nI know I said this to you just a while ago, but it's hard being a professional woman. The strength, independence and reputation come at a price. \n\nIf there's any sadness it's the realisation that I've wasted so many years without ever having felt this way before. You don't get those years back. And yet, realistically I can't blame being a professional for that. I suppose I'd never really met the right person. Maybe spending so much time studying didn't help that; but who's to say it would have made any difference.\"\n\nEllen lapsed back into silence. For maybe five minutes we lay there in a comfortable embrace, neither of us willing to be the one to break the spell; so I was grateful when Ellen decided to do it.\n\n\"I'd better check our position again.\"\n\nWith that she lifted herself off me and headed back to the cockpit to take our position and plot it on the chart, allowing me to follow. \n\nThe rest of the watch passed uneventfully until about 2300 hours (11 pm). After we'd checked everything again, we retired back to the position by the mast, looking out to starboard and spent a delightful time just chatting as we sat and watched the sea rush by.\n\nBut by 11, my bum had started to get a bit sore and I needed to stand and move about. By then also the seas had started to rise a bit from behind us, and while the auto pilot was handling it fine it was one of those situations that made the yacht an absolute delight to manually steer; offering the prospect of catching waves with a deft flick of the wrist at the right time. \n\nBut at the back of my mind was also the fact the girls would be coming on watch at midnight. Until then, it had been a sexually charged watch with Ellen; I suspected way more than the girls might have anticipated. Even as we sat chatting until 2300 hours, my erection had been pressed constantly into her back as she rested against me.\n\nBefore Ellen, when it was just Issie and Amy, I'd felt there was always an undertone of sexual competitiveness going on. Nothing that challenged the genuine friendship between them, just one that made sure they each got their fair share. Whether it was of my cum or of the chance to plant their copulins in me, or some of both, I wasn't sure. But the amount of sex they were instigating or calling for just seemed more than I would have expected.\n\nBy now the novelty should have worn off for them and I would have thought we'd be back to a few times a week; yet for the most part we were still at it multiple times a day. And if one slipped in a quickie with me, you could be sure the other would know and be looking for theirs. \n\nNow we'd got Ellen aboard too. She'd claimed - I'd lost count - maybe six orgasms from me since mid-afternoon and drained me of three cum shots. Maybe she was quiet enough for most of them not to have attracted attention; but Issie seemed to know everything that happens on the boat. I doubted it. There was a strong novelty value for Ellen still - not to mention a sense of making up for lost time. But I could well see her heating up the sexual appetites of the other girls. I supposed I could cope, but I was starting to feel like something of a gigolo.\n\nThe girls weren't due on deck until midnight; and normally we'd get a cup of tea or coffee and some snacks ready for their waking. But at 1115 Issie appeared on deck; naked like Ellen and myself. She went through the usual round of enquiries about events during our watch and how well we slept before disappearing below to make herself a cocoa. Needless to say, the sexual activities had been omitted from our replies to her.\n\nWhen she came back she came and stood by me at the wheel, close enough that our hips were rubbing. As the boat lurched, I instinctively took a hand off the wheel and put it around her to stop what looked like it would be a fall. That seemed to have been all the invitation she needed to slip partly between me and the wheel, her bum cheek rubbing on my initially flaccid manhood.\n\nThere was no doubt the action was calculated, as was the continued movement that wasn't fully justified by the rocking of the boat. If she'd wanted an erection, she'd got it and I already suspected she had plans for it. What they were I didn't know. I just knew it was going to be the start of a busy night."
    ],
    "authorname": "Joanmcarthy",
    "tags": [
        "threesome",
        "threeway",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/unexpected-threesome-ch-10"
}