{
    "title": "The Choosing Ch. 07",
    "pages": [
        "The Mother waited not in the Council Chambers or her personal suite as I had expected but in the Bathing rooms. Askel led us across the baths, weaving through the women sitting in different pools. They watched us and I wondered what they thought, of me dressed only in a diaphanous robe, Hatha in her leather vest and Askel in his suede breeches. We were a bizarre parade as we stepped slowly across the slippery rocks.\n\n\"Where are the children?\" I asked, noticing that there were only women in the pools.\n\n\"They bathe in the family quarters. This is only for women who are of age,\" Askel said, shooting a grin at me over his shoulder. It was the first time he had smiled since leaving my chambers. I was glad to see it. He seemed anxious. His conversation was nervous and stilted. I wondered if it was Hatha who made him nervous, she watched him with a hawklike gaze. The sight of the naked women seemed to clear all that away. He was cocky now. Strutting like a peacock.\n\n\"And why then are you here?\" I asked, matching his wicked grin.\n\nHe sighed, full of pathos. \"I am on a mission for the Mother. A difficult mission that takes me through these,\" he said sweeping out a hand and meeting the coy gaze of a nubile bather in the nearest pool, \"beautiful and uncharted waters.\"\n\nThe bather giggled. Hatha snorted and pushed him from behind. Askel slipped and lost his footing, almost ending up in the pool.\n\nI laughed. Hatha turned and frowned. Askel met my eyes and then petulantly screwed up his face like a child behind Hatha's back. I laughed again. Hatha turned back and Askel comically wiped his face clear of all expression.\n\n\"Let's go,\" Hatha grumbled.\n\nTempting Hatha's wrath Askel risked another wicked grin and started to move again leading us past the pools to a room at the back.\n\nHatha stopped short, holding out her arm to stop me.\n\n\"The Tattoo room? This is where the Mother has beckoned us?\"\n\n\"Yes,\" Askel replied, his smile faltering slightly at Hatha's withering glare.\n\n\"Why?\" Hatha asked, voice hard and teetering on the edge of anger. What's the problem? I wondered. I'd always anticipated that at some point I'd be tattooed, I was Sarran after all; I did not expect my skin to remain unmarked. Why did Hatha object?\n\n\"I do not question the Mother. I simply do her bidding.\"\n\n\"Her bidding,\" Hatha murmured and shook her head as if it made no sense.\n\n\"What is it?\" I asked Hatha, pushing against the hand she still held out to keep me from entering the room. I was curious to see what had aroused Hatha's suspicions. What she sought to keep from me.\n\nCurious and stubborn right to the bone, as soon as Hatha held me back I burned to see it for myself. My Mother, when she lived had told me often that curiosity was my downfall. I stepped forward.\n\n\"Wait,\" Hatha said, as impatiently I tried to push past her into the room. \"Mistress Vessel you should let me go first. I should talk to the Mother.\"\n\nHer words grated. They stiffened my spine. Maybe if she'd asked. Not ordered. Not told me what I should do. Maybe then I would have agreed.\n\n\"The Vessel comes alone.\" Askel's easy grin had flattened into a thin line. He stood in front of the doorway barring Hatha entrance.\n\n\"The Vessel does not go alone,\" Hatha matched his tone. They squared off, like fighters readying for battle. Lithe young beauty and sturdy maternal force. Shoulders set and eyes matched with steely determination. It was almost laughable. If I hadn't felt so trapped by their decisions, perhaps I would have indulged a smile at the situation. Again I was faced with people bickering over my choices.\n\nMy choices.\n\nI would make them. Not one in service. Not Askel. Not the Mother. Or the Coven. Me, because it was always me alone who faced the consequences.\n\n\"The Vessel is always alone.\" I did not intend to speak the realization aloud. It bubbled up, spilling over from the reservoir of sad truth that lay wthin.\n\nFeared, desired worshiped, the Vessel stood apart. An object. An altar. The center of their desires, they circled me but I never joined them. I was always apart.\n\n\"Always alone.\" I repeated sadly.\n\nHatha broke free from her glare at Askel. Her head snapped around to face me. \"That is not true Mistress.\" She sounded exhausted and frustrated as she said, \"I am always with you.\"\n\n\"In service.\"\n\n\"Well, yes,\" she frowned, obviously perplexed by my dead tone, \"In service.\"\n\nI pushed her hand away. \"I wish to go alone.\"\n\nShe pushed back, placing her forearm square on my chest, barring me from moving forward. \"Alone? I do not think...\"\n\n\"No! You don't think Hatha, you serve. You only serve.\"\n\nShe flinched, dropped her arm and stepped back. \"Mistress, I do not know why you're...\"\n\n\"You don't know. You can't know. There is only me and only I know\u2014and I go alone.\" Before she could stop me I stepped past her and beckoned Askel, \"Take me to the Mother.\"\n\nHe nodded and turned to Hatha. \"You are dismissed.\"\n\nThe tattoo room glowed pink. The rock walls not black and smooth like those of the bathing pool, but quartz like, flecked with rose gold and bronze. There was nothing to fear here, nothing to justify Hatha's concern.\n\n\"Beautiful,\" I sighed, as I turned in a circle to catch the full range of color that bounced from the glowing walls.\n\n\"Yes. And sacred. Can you feel its power?\" Askel asked.\n\nI stepped to the nearest wall and raised a hand to touch its smoothness. Yes. Power. My skin began to sing with it as my fingers neared the pink surface. The moment I touched the soft wall, the bones of my hand, then my entire arm began to hum. It spread into my chest, sweet and intoxicating, I swayed feeling for a moment as if I'd imbibed too much wine.\n\nThe sensation came too hard, too fast. I dropped my hand, the connection broke. I sucked in a breath to steady myself. It tasted of herbs. That's when I noticed the smoke. I pointed to one of the whisping plumes of smoke coming from each corner and Askel said, \"They're incense Mistress. For the marking ceremony.\"\n\nI coughed, the smoke tickling my throat.\n\n\"It takes some getting used to Mistress. Let me get you a drink.\" He shifted to a dais at the back of the room. I watched him pour from a gold decanter into a goblet. I took the cup from his outstretched hand. It was wine. Heady and sweet. I gulped it down and handed him the empty goblet. He discarded it at his feet. It tipped, the last of the liquid spilled out on the smooth pink floor in blood like swirls at his boots.\n\n\"I'm to be marked? Tattooed?\" The intoxicated feeling was back. A wave hit me and I fought not to sway. Was it the wine? Or the smoke?.\n\nHe nodded. \"Lined with power. Marked with spell.\"\n\n\"Who does this? The Mother?\"\n\nAskel shook his head and gave a little chuckle. \"No, not the Mother. You've never seen a marking then?\"\n\n\"No.\"\n\n\"It's quite physical. Both strength and delicacy are required. Even when the Mother was younger it was not her calling.\"\n\n\"Strength? Does it hurt?\"\n\n\"The marking?\" He stepped forward as he spoke. His voice deep and as intoxicating as the sweet scented smoke filling my lungs. \"Yes Mistress Vessel, It is quite... painful.\"\n\nPainful. He'd made the word sound so erotic. So appealing. My nipples beaded hard beneath the thin fabric of my robe. My reaction did not go unnoticed. His eyes flicked down and settled on the points. He ran his tongue along the seam of his lips. My back arched, my body moving without thought instinctively pushing my aching nipples closer to that tongue. When I realized what I'd done I squared my shoulders and took a step back.\n\n\"Where do I wait for Mother? Will she arrive soon?\"\n\n\"She has given me instruction.\"\n\nI nodded. My head felt fuzzy. His voice seemed further away, it echoed as if bouncing down a long hallway.\n\n\"You should wait here.\" He pointed to a flat stone in the centre of the room. An altar stone.\n\nHe took my elbow and guided me to it. Out of the corner of my eye I saw others slip into the room. A wiry man, corded with lean muscle. He carried a tapered stick about the length of his forearm and a bowl. Two women followed him a step behind on either side.\n\n\"The Marker,\" Askel whispered in my ear as he nudged me into shrugging out of my robe. Nude, he helped me lay flat on the stone. I looked up at him, his face hovered above me, he trailed a finger across my lips and then down the length of my body. At the peak of my nipple he paused and flicked his fingertip across. My back arched up to meet his touch.\n\nThe cool of the stone at my back, the heat of his fingertip. The ache of my breasts, skin taut and hungry\u2014 I swam in sensation. I was primed. Ready. For what?\n\nThe Marker joined Askel followed by the two other women. Young. Beautiful. Hair shining blond. Their faces swam together, images of beauty, swirls of pale and flushed pink skin through the smoke.\n\n\"The Mother?\" I rasped, my voice rough. It hurt to speak.\n\n\"Shhh, all in good time Mistress. All in good time.\"\n\nI had questions. I was sure of it, but I could not think of them. Hatha. I wanted Hatha. She would know. And then I remembered how I had dismissed her. How I had let Askel send her away.\n\nStupid pride.\n\n\"Turn Mistress.\" Not Askel's voice. The Marker's. Hands gripped my shoulders and rolled me over until I was my belly was flat on the warm stone. My head fitted into a carved recess, a hole in the stone. I closed my eyes.\n\n\"Relax. Close your eyes,\" Askel's breath blew warm on my throat as he brushed my hair off my neck.\"\n\nThey scrubbed me first. The women. I knew it was them as I felt the soft brush of their breasts on my back and sides as they worked. Razors came next. The feeling of the blade familiar, from when Hatha had stripped me of my body hair. First the back of my legs then my arse spread, the sharp blade scraping gently at the soft skin between. They worked fast, two sets of hands in perfect unison. No words were spoken, no commands issued, they moved as one without direction. Together they turned me over to lay me on my back. One brushed the hair from my face, leaning in to me her nipple stroking my cheek while the other worked the razor stripping hair from my legs and sex. Front and back they worked fast, two set of hands cleaning and shaving the length of my body.\n\nA soothing rinse with warm water was followed by soft hands rolling me over to lay face down. My head returned to nestle cushioned in the recess. The process had been hypnotic. The rhythm of their hands, the wine, the incense, even the oddly comfortable altar stone had lulled me into a dream state. I fought to stay conscious. Sweet sleep beckoned, I teetered on the abyss of dark comfort.\n\nThe Marker's raspy voice broke in through my thickening daze, \"It begins.\"\n\nAskel stroked the back of my head gently. \"Sink into the pain Mistress. Center it.\"\n\nThe first prick stung, like an angry wasp I remembered stepping on as a child. The needle's stinging briefly gave way to burning just as the Marker sank the needle a second time. And another. Now a steady beat. A tap, a burn, then more stinging. Biting across my skin, burning a trail of angry fire. Needles at my spine, at the base of my neck. Again and again the tapping, the burning, it seemed ceaseless\u2014the Marker pausing only to press a soft damp cloth to the skin that he'd pierced. It hurt most on the bone as he pressed the needles into my spine. I gripped the edge of the rock at each pierce of his relentless needle.\n\nI tried to sink into the pain. To accept the needle. But I couldn't. It was more than the press of the needle, the burn of the ink, beneath the pain, there was something else. Something wrong. Very wrong. With each sting, I grew smaller somehow. Less. Weaker. It was not what I expected. I could not say how but I knew, through the fog of the incense and pain that this was not right.\n\nI shifted, rolled my shoulders trying to get up from the altar. Hands pressed me down.\n\n\"She is strong.\" A voice I had heard before, a man, not Askel but I could not place who it was. I knew him. Who?\n\n\"That's exactly why she needs to be tethered.\" A woman now. A spiteful woman. Words laced with hate. What had I done to her?\n\nTether? I'd heard the word before. It was wrong. The Mother did not want me tethered. I should not be tethered. I pushed back against the hands that held me, trying to rise up on elbows.\n\n\"She needs more. I need her kept still.\"\n\n\"Spell her, spell her, quickly.\" The woman again. I did not like her. I wanted her gone. Gone.\n\nAdrenalin spiked in my veins. Animal instinct, a primal urge shrieked at me: Fight! Flee!\n\nI brought my arms to my sides and heaved upwards as hard as I could. My head pounded, my heart thudding wildly. At both sides the women came, soft voices in my ear a tuneless chant and smoke swirled around my head.\n\nThe fight drained away, seeping from me.\n\nHeavy. I felt so heavy. I tried to fight it. The smoke, the sound, the markings on my skin, but I could not. It covered me, smothered me and I sank down, weak, tired. The room swirled and went dark.\n\n\"Talia my darling Talia.\"\n\nThis voice I knew. Nadar. He wasn't with me. I wasn't with him. I knew that, he was between. We were between worlds. The dream and the now.\n\n\"Save your fight, Talia.\"\n\nFight. Yes I had to fight. Flee. But I was tired. So tired.\n\n\"Rest. I will find you.\"\n\nWhy? Why would he find me.\n\nHis laugh filled my head. A soft, beguiling chuckle that rolled over me. It cushioned the pain. Surrounded me with comfort.\n\n\"Why? Oh my sweet, how could you not know?\"\n\nI could not see his face. I wanted to see him. Touch him. I reached forward, with arms that were not real, fingers that could not feel. I tried, tried to touch him, find him, but he was gone. Gone.\n\nAnd I slipped into the black. Over the abyss into the nothing.\n\n* * * *\n\nI awoke to sunlight on my skin. My cheek hot with the harsh beat of the midday sun. A feeling I had not had since before the circle in the swamp. I was outdoors. Above ground. I opened my eyes, red hot light made me clamp a hand across my face to shield against the sun.\n\n\"You're awake.\"\n\n\"Askel?\" My mouth felt like it was stuffed with dirty cotton. Rotten and dry.\n\n\"Yes.\" He did not sound happy.\n\nI sat, dragging myself up on unsteady arms. Hard wood scraped my back. We were rocking. Moving.\n\nWe were in a cart, an open cart. I looked forward. Two men drove the horses, across from me sat Askel and one other. I hurt all over. My head. My throat. My back. Then I remembered. My hands flew to my neck, to the bandage that covered my neck and upper back.\n\n\"Tethered.\" I whispered the word. Fearful even though I did not know what it meant.\n\nAskel nodded.\n\nTethered\u2014the word itself meant tied. I was somehow tied. To whom? Who held this tether? I looked to Askel who shook his head, \"Not to me. Not to anyone\u2014yet.\"\n\n\"Yet.\" My throat tightened. I couldn't breathe. Fear gripped me with an iron clasp squeezing my chest until I had no air. My vision blurred, rimmed with red. Askel reached forward and shoved my head between my knees.\n\n\"Calm, Mistress\u2014breathe. Breathe slowly.\" He kept his hand lightly on the back of my head, his fingers threaded in my hair. I closed my eyes and forced myself to calm, concentrating on each slow breath. When my breath came without pain I opened my eyes. At my foot, around my ankle was an iron band. I was chained to the cart.\n\nFear became anger. In a hot flash of hate I wrenched free of Askel's hand and glared at him.\n\n\"So, Askel, I no longer have to ask which school of the desperate to which you belong.\"\n\nHe flushed red.\n\n\"I'm sorry.\"\n\n\"Not as much as I am.\"\n\n\"It was necessary.\"\n\n\"Necessary? To drug me, tether and tie me down? Necessary?\" I laughed. Like a madwoman, an ugly fierce crazy sound.\n\n\"For all the Sarran, sacrifices must be made.\"\n\n\"My sacrifice.\"\n\nHe looked away. He could not meet my eyes. Askel was soft. Weak, he was a minion, a foot soldier. No way had he planned this.\n\n\"Haakon,\" I said, finally placing the voice I had heard in the tattoo chamber.\n\nAskel did not answer but met my eyes with a look of shocked surprise that said far more than words. \"And Audhild. I heard them both in the Tattoo Chamber.\"\n\n\"You weren't supposed to.\"\n\nI laughed again. \"Supposed. I had once supposed many things that did not turn out as I wished. Is that who you're taking me to now? Audhild and Haakon?\"\n\nHe shook his head again. Looked away. Guilty. Unable to meet my eyes. So, it was worse than Audhild. Worse than Haakon. Who did he sacrifice me to? Anger edged with icy fear of the unknown.\n\nThe cart came to a halt. We were at a clearing that lead into a rock quarry. Askel jumped from the cart and pulled me forward. The chain scraped against the wood, dragging as I shuffled forward on my buttocks. When I reached the end of the cart Askel released the iron band from my ankle. I stood and stretched out my back. They had dressed me at least. Small mercies, I supposed I should have been thankful I did not have to suffer the indignity of being naked as well as chained.\n\nI was dressed in a dark long sleeved bodice and skirt, similar to my everyday clothes that I wore in Hawthorne. A white apron covered my front and I wore ankle boots. Functional clothes. Suitable for a long journey. By horseback, in a carriage or on foot. Which was it to be? And with whom would I travel?\n\nI briefly considered running. I looked around and worked through the odds of escape. They had chosen a good place to stop. The clearing was wide and flat. There was a good three miles of nowhere to hide. My skirts were heavy and even if they weren't there was no way I could've outrun Askel or the guards he had brought to reach the forest rim. They knew it too, that's why I had been left unchained.\n\nWe walked towards to the mouth of the quarry, leaving the cart behind with one of the guards.\n\nAskel lead the way, no deferential holding of my elbow now. I was not to be escorted, but to be lead. He walked in front while the guards pushed at me to hurry from behind. The ground was crushed gravel, it crunched under our feet. The only sound in the silence of the clearing. The walls of the quarry loomed in front of us; we walked a good fifteen minutes before coming under their shadow. The ground became rockier here; I had to look down to watch my step. I gripped my skirts in one hand and held out the other for balance.\n\nBecause I looked down I did not see him, and I was not prepared for the voice. The laugh. It chilled me.\n\nI knew it at once. My head shot up, I almost lost balance. The guard behind stopped me from falling with the butt of his lance.\n\n\"I told you it was not over Talia.\"\n\nBandar.\n\nBehind his vicious smile stood my Uncle and four guards in the colors of Hawthorne Shire.\n\nI stepped back. Escape. Escape. The need to flee echoed in my head, surged through my veins. Run. I had to run. Now. I stepped back into the arms of Askel's guard. He held me fast, one arm cinching my chest. I struggled. The bandage at my back rubbed at the newly tattooed skin. Newly tethered skin.\n\nTether. The remembrance chilled me enough to still my struggle.\n\nThey could not mean Bandar. No. I was not to be tethered to him.\n\n\"No. No.\"\n\nBandar laughed again. The sound echoed off the quarry walls surrounding me.\n\n\"No. No. Not you. Never you.\" I could not stop the words, they gushed from me in shock.\n\n\"Gag her.\"\n\nAskel raised a hand to Bandar. \"She is not to be harmed.\"\n\n\"I'll be less inclined to harm the bitch if I can't hear her.\"\n\nAskel flinched, looked at me with brief flash of regret and then nodded. Bandar's guards came forth and wrapped tight a length of cotton around my mouth. I bit into it, closed my eyes and fought the urge to weep. I would not give him that. I would not cry.",
        "\"You know the agreement.\"\n\n\"We do indeed,\" my Uncle spoke now, a supercilious bluster I thought I would never have to hear again.\n\nA sound I thought Roth had saved me from.\n\nRoth. I had not thought of him for days.\n\nHow I wanted him now. To reach forward, extend his fangs and rip the throats from these men. Feed from their thick red blood until they were lifeless. Anger coursed heavy and hot through my veins. My skin crackled with the heat of my hate.\n\nAskel spoke, \"The Tether must be done at the next full moon. You have assured me you have the means to make her agree. If you do not the Tether can be enacted but it will not be as powerful. Malchard needs her at full power.\"\n\nMalchard? Beatrix's Chosen? He hated the Sarran. Had hunted them for years. Why would Haakon and Audhild deal with him?\n\nBandar stepped forward. He was preened to perfection as usual. A shining peacock in his knee high black boots, buff breeches and brocade red waistcoat. A perfect tailored fa\u00e7ade disguising the filth beneath.\n\nHe walked a tight circle around me, moving closer with each ring. Never touching, even so I flinched. He laughed.\n\n\"Talia, Talia, Talia\u2014where is your Dark Master now? Too bitter for his taste were you bitch?\"\n\nI bit down on the gag.\n\nBandar moved before me, flicked his hand at the guard who untied the gag. Askel came to stand behind him. I looked over Bandar's shoulder into his eyes. He met my eyes and started slightly.\n\n\"Answer me. Are you all alone Talia? Where is your precious Dark Master?\"\n\n\"Hunting you to rip out your throat.\"\n\nThe blow came fast. It was not unexpected and as strange as it sounds I was almost grateful for it. I'd rattled him. Angered him already. Angry Bandar was stupid, more prone to be rash. The more angry he was, the more unsettled the better chance I had to outthink him.\n\nI laughed and spat the blood from the blow hitting his pristine white neck cravat. He raised his arm again but this time he was too slow, Askel caught his wrist. \"No harm. Remember the deal. Malchard wants her unharmed for the tethering.\"\n\nI laughed again, Bandar's deal was a fool's one. \"There is no way I will tether unharmed. Beat me bloody I still will not concede.\"\n\n\"She will agree,\" Uncle Hawthorne spoke.\n\nI met his eye and spat once again, blood spraying on the rock floor. \"Never.\"\n\n\"Never Talia? Are you sure?\" Bandar sounded too certain. Cold washed over me. What did he know? What did he have?\n\nI looked between my Uncle Hawthorne and Bandar. Bandar gave a tight smile and nod. Hawthorne gestured to a guard who moved forward. With my sister.\n\n\"Leia.\"\n\nNausea gripped me, washing over me threatening to empty my stomach right there on the quarry floor.\n\nMy sister. My sweet little sister.\n\nLeiawas bound at the hands. Her mouth gagged. Too tight, I could see how it bit into her soft skin. Her pale hair was dirty and mussed. At sixteen she still had the slight frame of a much younger child. Lung sickness stunted her growth, she appeared as if a porcelain doll. A tiny perfect doll.\n\n\"No. Uncle Hawthorne please, no.\" I did not bother to appeal to Bandar. I would find no mercy there. There was no mercy to be found in his black soul. But my Uncle, as pompous and foolish as he was had never been an overtly cruel man. Surely there was some measure of compassion to which I could appeal.\n\n\"She does not need to be hurt Talia. She will not be hurt. If you agree.\"\n\n\"Agree.\"\n\n\"To the tether. Come with us to Lord Malchard. Be tethered freely and your sister will not be harmed. I swear it.\"\n\n\"And if I don't?\"\n\n\"I get her.\" Bandar had moved to stand with my sister. He released her gag. She coughed. He cupped a hand at the base of her head roughly angling her to look at him, his mouth a sliver away from kissing her.\n\nFrom where I stood I could see her shake. She trembled in his arms, terrified.\n\n\"I have no choice,\" I whispered, the implication of those words seeping black into my soul.\n\n\"Either way I win. You refuse to tether I get you and your sister. You tether and I get the joy of watching to submit.\" Bandar's tongue snaked out, reptilious and slithering, and ran the length of my sister's perfect doll mouth.\n\nIt was more than I could bear. \"STOP!\" The quarry shook with the bass of my roar. A tumble of rocks fell from behind Bandar, he glanced over his shoulder in confusion.\n\nThe power I had let flow into my voice drained away quickly with the realization that I did not know how to harness it. I could not lash out at the risk of my sister.\n\n\"Let go of my sister. Do not touch her and I will go with you to Malchard.\"\n\nHawthorne nodded. Bandar did not move.\n\n\"Get him away from her. I swear it Uncle, if he touches her you will get nothing from me.\"\n\nMy Uncle nodded once more and turned to wave a dismissive hand at Bandar. Bandar left, but not before coming to me and voice lowered saying, \"He cannot watch her all the time. I will have you both before this is over.\"\n\nI lunged fueled by fury ready to gouge his filthy eyes from his head. The guards seized me before my nails made contact. Bandar laughed. I squealed a desperate sound of rage.\n\n\"Gag her,\" he said through laughter before leaving me struggling in the arms of Askel's guard.\n\n* * * *\n\nI was still gagged when Askel came to find me. From the look in his eyes I gathered he wanted absolution. He would find none here. He had chosen his path, if it hurt to walk it that was not my concern. Let him suffer.\n\nHe came behind me and released my gag. I reached up and pressed my fingers to the sore sides of my mouth.\n\n\"I'm sorry,\" he said as he sat beside me on the rock floor.\n\n\"I'm sure you are.\"\n\n\"Talia, I didn't know. I didn't...\"\n\n\"You didn't care to know. As long as you didn't you could sleep well. How exactly did you think they would make me agree to be tethered to Lord Malchard? With rainbows and chocolate?\"\n\nHe snorted out a desperate laugh and sank his head into his hands.\n\n\"Sweet Mother. I'm sorry.\"\n\nI gave a half hearted dismissive wave and turned my head away from the sight of him. \"Be sorry elsewhere. I have enough without the stench of your guilt Askel.\"\n\n\"It's for the best. You'll see Talia. You'll see.\"\n\n\"Will I? What will I see? Please tell me of the grand outcome of my great sacrifice. I wish to know what is worth the safety of my sister and my liberty?\"\n\n\"Haakon and Audhild have negotiated a treaty with the Queen. Lord Malchard has agreed to allow the Sarran to live once more in Vandarra. We will be free.\"\n\n\"With me as the price.\"\n\n\"Yes.\"\n\n\"Fools.\"\n\n\"It will mean we no longer have to hide.\"\n\n\"You bargain your freedom by giving the Devil more power. What exactly, Askel do you think that Malchard and Beatrix will do with that power? Protect the Sarran? Bestow more rights on the humans?\"\n\nI watched him slowly digest my words. Did he hear the truth of what I spoke? He said nothing. Just sat. Frustrated, I waved him away. \"Go Aksel. Go back to your Sarran and prepare for your glorious short lived freedom.\"\n\n\"I am to accompany you to Palace Shire.\"\n\n\"Really?\" I had thought that Askel would go. If he were to stay, he could be useful. \"Will you...\"\n\nHe knew what I was about to ask and raised both hands, cutting off my plea. \"I can't...\"\n\n\"No Askel, you can. You just won't. There's a difference.\"\n\n\"Talia.\" My name sounded like a plea.\n\n\"I did not give you leave to use my name. I am The Vessel to you. That's all. Just a Vessel to be sacrificed at the whim of the Sarran Council.\"\n\n\"Mistress. I am sorry. Truly I am.\" He wrung his hands.\n\nI sighed. \"I know you are. Sometimes though, sorry is just not enough.\"\n\nHe nodded and moved to stand. I reached out, clasping a hand at his calf to stop him walking away. Looking up I said, \"There is something Askel. One thing I would ask of you. It will not change the Sarran deal. It will not go against what you have promised Audhild or Haakon.\"\n\n\"I will do it then Mistresss. Ask it of me and it will be done.\"\n\n\"Protect my sister. Keep her safe from Bandar.\"\n\n\"It is already done. I have the Sarran guard on her now.\" He crouched down to meet my eye. \"I will keep her safe. On my life I promise you.\"\n\nA sob caught in my throat. \"Than...Thank you\"\n\nHe nodded and rose to stand, walking away slowly. When I was sure he was gone and that I was alone I let the sorrow rage forth, weeping from me in shoulder shaking sorrow. I let the sobs come. The first one slipped out in a strangled gasp. The next, louder, fuller. From somewhere deeper. I gave into it and let the tears stream from me, gushing forth in great shoulder-shaking heaves of self-pity, rage and sorrow. Not just for me, my life had always been strange and hard, but for my sister. For innocence lost.\n\n* * * *\n\nNadar did not come to me in my sleep. I had hoped he would and I woke with a tinge of disappointment that I soon shook off. I had more to regret in my waking life than in my sleep. I chided myself for seeking a dream savior. How foolish it was to think that he would save me. I had imagined him my dark angel. He was naught but fantasy.\n\nThere was no one I could rely upon. Not even myself. It was my own stupid pride that led me to this. To Leia being bound and threatened. Why had I not seen to her safety? If I had stayed at the Night Palace I could have had her brought to me. If I'd asked Roth he would have arranged it. Instead I sought truth, what a foolish fantasy that had been. What truth had I found in the Sarran Coven?\n\nNo truth at all. Betrayal.\n\nHow hard would it have been to submit to Roth's will? He was flawed, but a good Master. Given the opportunity now I could still run and fall to his knees, begging mercy.\n\nWho was I fooling? Certainly not myself. Even now, struggling at the ropes of Bandar I still could not stomach the thought of submission.\n\nWhat was wrong with me? Why could I not give up even for my own good?\n\nMy neck burned. Askel had changed the dressing before we set out but it gave me no comfort. The markings itched and stung with each step. Askel saw me flinch and move my fingers to the edge of the dressing.\n\n\"The tether hurts Mistress. It will not stop until the ceremony. It seeks a bond. That's why there is pain. The wound remains open until a bond is set.\"\n\nBandar looked over his shoulder at me. Seeing me with Askel he gave a vicious tug of the ropes lashed to my wrists. I stumbled, my knees hitting the crushed gravel of the path with a painful thump.\n\n\"Give it here,\" Askel barked, for the first time sounding more man than boy.\n\nBandar released the rope. Not handing it to Askel but letting it fall to the ground. He laughed as he watched Askel bend to pick it up.\n\n\"That one,\" Askel said with a nod to Bandar, \"Is not right in the head.\"\n\nI raised a sardonic brow. \"Really? I hadn't noticed.\"\n\nHe laughed at the sarcasm of my tone and we shared a knowing smile until I remembered that we were no longer friends. I looked first at my bound hands and then away. Biting back the tears that threatened to fill my eyes.\n\n\"Is my sister safe?\" I had not seen her since the quarry. They had kept her from me deliberately.\n\n\"She is in the cart,\" Askel said, motioning over his shoulder. \"I had it covered for her comfort. She is resting.\"\n\n\"She's fragile.\"\n\n\"Yes, physically, but not in spirit.\"\n\nSomething in the way he said it made me laugh. \"Did you meet the sharp point of her tongue then Askel?\"\n\n\"I did. She may not look like her sister, but she sounds like her.\"\n\n\"Good. It pleases me that she is well enough to roast you.\"\n\n\"I thought that it would. It pleases me too.\"\n\n\"How old are you Askel?\" I asked the question I had often wondered.\n\n\"I am nineteen.\"\n\nA baby then. Not so different to my own sister. Easily led. Easily fooled. No wonder he followed the strong will of Haakon and Audhild.\n\nI looked over his handsome profile. So classically Sarran. Angled blonde symmetry. \"Tell me of the tethering ceremony.\"\n\n\"You want to know?\"\n\n\"I want no more surprises.\"\n\n\"Of course you don't. I forget sometimes that you are untrained. With your power you give off the aura of an elder. I keep thinking you already know.\"\n\n\"I don't know. I know so very little.\"\n\nHe looked at me with regret, but I raised a hand to stop his contrition. \"Don't apologize again. Please. Just tell me what I ask.\"\n\nHe nodded. \"The tether can only be conducted from moon to moon. That is why it was done so hurriedly. Once the Mother had accepted you Audhild knew we had no time to waste. They could not risk you having even as little as a half month of training. You would've been too strong to tether unwillingly.\"\n\n\"So I will be tethered at the next moon.\"\n\n\"Yes.\"\n\n\"How far away is that?\"\n\n\"Less than a fortnight Mistress.\"\n\nFewer than fourteen nights. So little time.\n\n\"Why to Malchard? Why not to Beatrix? She is the Dark Master. And the Queen.\"\n\nHe blushed. His pale face flaring bright red. \"The tether ceremony is sexual. It is between a male and a female.\"\n\n\"Oh,\" I said as the realization washed over me.\n\n\"Tethered to Malchard is the same as being tethered to Beatrix. He is her Chosen. He does her will.\"\n\n\"So I can tether to human, Master or Sarran. But they must be male.\"\n\n\"Yes. You must tether to one. It binds the will of the Vessel to one force. It is a new spell. Forged by the Sarran after the Vessel first Claimed to a Dark Master. It is meant to keep the power of the Vessel Sarran alone.\"\n\n\"I see the logic. As much as I do not wish too. Why then did the others on the Council not want me tethered?\"\n\n\"It is a dark spell. The binding uses powerful forces, not easily controlled. It goes against the way of the Sarran. It sullies the Vessel. Who should be pure.\"\n\n\"Pure?\" I raised a brow thinking of the things I had done since becoming The Vessel. Pure did not come to mind.\n\nAskel laughed. Grinning like the young man I had first seen. \"Not virginal Mistress. Pure in choice.\"\n\nWe walked at a slow steady beat. Strolling almost. It was a beautiful day. Without the rope and bound hands we could be friends on a sweet summer walk through the woods.\n\nI kept my eyes on the road. If I looked ahead I thought too much\u2014wondered of what was to come. Looking at my feet I only thought of the next step. One step at a time kept me calm. Askel moved in close, keeping pace with me. As he was taller, it would not have been easy or comfortable to match my stride.\n\nI pushed thoughts of his kindness away, I did not want to like him. I did not want to forgive him.\n\nI turned to him instead with more questions. \"For the tether to work must I submit? What happens if I don't?\"\n\n\"If you don't submit you will still be tethered but at minimal, if any power and your life span will be shortened.\"\n\n\"A slave then. No matter what I do. What if I do not tether at the next moon. What happens then?\"\n\nHe stopped, clasping my arm to stop me too. \"You must tether Mistress. If you do not you will perish. Painful and slow. You will waste away without the bond. You must tether.\"\n\nI could choose to die. Rather than submit. That strength of will lay within me. But I did not have the will to make that choice for Leia. I could not die knowing I had left her to Bandar. A fate worse than death.\n\n\"Askel. I have asked you to protect my sister.\"\n\n\"Yes.\"\n\n\"Will you, no matter what?\"\n\nHis answer was softer than I expected. \"I know what you ask Mistress. Don't. Please don't ask that of me.\"\n\nHe motioned to a nearby guard and handed over my rope, walking away without looking back.\n\n* * * *\n\nFor six days and six nights we travelled the same. Each day melded into the next. Askel did not speak to me again, other than to report on Leia. He must have talked to Bandar however, exerted some influence on the psychopath because other than taunt from a distance he had not held my rope since that first day.\n\nThe land was changing, becoming the dense forests of the Palace Shire. We were less than two days from the Palace. Two days from Malchard and Beatrix. Two days from Roth\u2014unless he wasn't there, unless he was searching Vandarra for me.\n\nWe camped early than usual, dusk. The skies filled with a coming storm, turning tarnished pewter, rough with cloud, air thick. The night would be harsh and wet. Our shelters were light summer tents, not built for what was to come. I chose to make my pallet under a rock ledge, far from the trees. My guard grumbled at the open ground, but I would not budge. I would rather be wet than fried. The trees the others chose to shelter under were beacons for the coming lightening storm.\n\nThere were just seven days until the next moon. seven days until I tethered. They would have to keep Leia with me, make sure I saw here I would not submit. I wondered where they would keep us. Certainly not in the Night Palace. Roth was too powerful there, they could not hide me from him.\n\nI sought a plan. I needed an out of some kind, but all I had were questions. No scheme could be made until I was convinced of Leia's safety, and they were smart enough to not let me see her. I knew that if I was to run this night may be my only chance. If the coming storm was to be as bad as I thought then they would not find me. I would do it at my own risk in a heartbeat, but I could not until I was sure of Leia.\n\nThank the Mother for Askel. I gave a little laugh as I secured the oil cloth I would sleep under this night. Did I think six days ago I would utter those words? Never. But now, each day that he protected my sister I gave thanks. Blessing him with my heart and soul.\n\nHe had smiled as he came each day to report of Leia. Telling me of her insults. She chided him, derided him with an inventiveness that was the high point of my day. As each day passed I became more and more sure that Askel was falling for my little sister. It pleased me. Not because I sought a Happily Ever After for Askel, but because if he cared I knew there was more than his word to keep her safe. If he loved her he would keep her safe long after I was tethered. Bandar would not pass him. I hoped that he would take her back to the Sarran. I had not broached the subject with him yet but I would soon. Before the tether. Tonight.\n\nThe tether.\n\nI forced it from my mind. I could not let the fear of what was to come seize me. I had much to do this night. The first of which was to make sure my sister was safe from the coming storm.\n\nThrough the first drizzle of rain I saw Askel approach with my guard. I had sent him to bring me Askel. In doing so I had had to suffer the indignity of being chained and staked. The first thing that Askel did was order the guard to remove the chain.\n\n\"Get it off her,\" he barked.\n\n\"It is the order of Masters Hawthorne that she not be left unsecured Sire.\"\n\n\"She will not run. Not while her sister remains. Fool.\"\n\n\"I follow orders.\"\n\n\"You follow foolish....\" Askel broke off as he caught my eye. He flushed red.\n\n\"Foolish orders Aksel, what would you know of those?\" I murmured, unable to resist stating the obvious.\n\n\"Leave us,\" Askel ordered the guard who went quickly to join the others in the shelter of the trees.\n\n\"You called for me Mistress?\" He was stiffly formal.\n\n\"My sister. Where does she shelter this night?\"\n\n\"Away from the lightening trees Mistress. She has her sister's wisdom.\"\n\n\"I'm not sure what I have is wisdom, Askel. Is she far?\"\n\n\"In the next clearing, far from the others.\"\n\n\"Good.\"\n\nI shifted in pain. For days now the ache of the tether had built. It did not keep to the tattoo wound, it taunted me by shifting lower to where I felt it worse, between my legs. The tether's ache thrummed at my sex a constant beat of throbbing want. I rolled my hips to ease it. The rain became heavier. Askel knelt to join me under the shelter of my oilcloth.\n\n\"Mistress...\"",
        "I cut him off. \"No Askel. I said no yesterday and the day before. I will not seek release from you. I will not. It will take more than a little pain for me to change my mind.\"\n\n\"You must. Your body is hurting. The Vessel needs it. You're making the tether bond worse.\"\n\n\"What will you tell Leia if I let you service me?\"\n\nHe hung his head. \"Mistress, I...\"\n\n\"I know you care for her.\"\n\nHe cleared his throat. \"I do.\"\n\n\"Keep her safe. This night and forever more. Promise me. Promise me now that you will. No matter what happens.\"\n\n\"What do you plan Mistress?\"\n\n\"I have no plans other than to keep my sister safe. This night. This night it worries me Askel. Can you feel it?\"\n\nHe nodded. \"I feel it.\"\n\n\"It is not safe here. This place, it rings with....\" I could not find the word. Evil was what I wanted to say, but I did not want to be dramatic. I shook my head and rolled my shoulders. \"It is unsettling. I would be happier to know that I had your word now that should something happen you would protect Leia. Take her back to the Sarran.\"\n\nHe looked surprised. \"You would wish that Mistress? You would wish her to live amongst the Sarran. With me?\"\n\n\"I would wish her safe. I...I trust you to keep her safe.\" I had intended to say the words in flattery, as an incentive for him to protect her, but as I did I realized that I truly believed them. I did trust him. I trusted him with my sister.\n\n\" I am honored Mistress that you would bestow such trust upon me. Your flesh. Your blood. I am truly honored.\"\n\n\"When you return, will you...\" my throat closed over the words, I cleared my throat and tried again. \"When you return please, take my sister to Hatha. Ask her to be her guide amongst the Sarran. Tell her that Leia will be a far more grateful and deserving student than I. Tell her...tell her that I am sorry. That I wished I had heeded her better. Been grateful for her service.\"\n\nAskel nodded slowly, placing a hand on my arm. \"I think she knew, Mistress, how you felt for her.\"\n\nI hoped so, as I had never said. I had never called Hatha friend. On this awful trip I had made that realization. All the time I had expected Hatha to owe me more than service I had given her nothing in return. I had demanded love and offered so little in return. Given my time again I would have declared her friend and asked, not expected that she be mine in return.\n\nA rumble pealed across the sky.\n\n\"The storm comes,\" Askel said, standing up from under the oil cloth and brushing off his breeches. \"I should take shelter.\"\n\n\"Safe night to you Askel.\"\n\n\"And also you.\"\n\nAs I watched him walk away the first arc of lightening flashed across the night sky. Within minutes the air filled with the pealing rumble of thunder.\n\nThe storm had begun.\n\nMy guard did not return. I presumed he kept to the shelter of the trees with the others from Hawthorne Shire. Storms of this nature were few and far between in Hawthorne, I had no doubt they would be huddled in fear at the sound of the wailing wind and lashing rain. I had lived through much of this foul weather, my Father's keep had been on a cliff bluff facing the North sea. Wild storms had buffeted our home many a time before I had moved to the calmer clime of Hawthorne Shire.\n\nThe other storms I had lived through had been well sheltered in a stone keep, not out in the open. While I was used to such weather, I was not at all confident at being so exposed. Wind whipped at my oil cloth. It would not survive long. The ceaseless great gusts of wind quickly took their toll. The oil cloth came loose one fastening at a time until in less time than it took to secure the blasted thing it disappeared, dancing across the rain soaked field.\n\nI huddled under the rock ledge, as far back as I could. A crack and thump heralded the start of the hail. Icy shards sprayed at my feet as the hail smashed down on the rock above me.\n\nI worried for my sister, hoping that Askel had her safe. I cursed my luck. I yelled out in futile fury, adding my cry to the sound of the wind and rain.\n\nThe hail came in a violent burst of shattering ice, ending almost as quickly as it had begun. The rain continued on, howling on the wind, whipping this way and that. The noise of the rain covered his approach; I did not hear him, did not see until the hand reached under the safety of my rock and pulled me forth.\n\nThe rain stung my face, needles of icy water slapping the soft skin without mercy. I raised a hand to protect my eyes. The hand slapped my arm down. Fingers dug into my forearms. I fought. Struggled to free myself from their iron clasp.\n\nHis face was masked by the sheeting rain. His voice cracked over the howl of the wind. \"I told you bitch. I told you I would have you yet. Have you both.\"\n\n\"No,\" I yelled over the pounding rain, \"No Bandar. I am for Malchard. I am for the Queen. You cannot. You cannot.\"\n\n\"You think I care for Sarran deals?\"\n\nHe was mad. His eyes, I could see black and cold fixed only on his base wants. No reason lay beneath.\n\nIf not reason, then would fear work?\n\nHe feared the Masters. \"The Masters will punish you. You cannot. They will hunt you down. Not the Sarran. The Dark Masters. Fear them Bandar. Fear their wrath.\"\n\nHe laughed. A shrill mad sound. I knew then that I had no hope. Neither reason, nor fear would shift him from his madness.\n\nI struggled again. His grip slipped on my wet arms. I ducked way from him, he followed. I brought my knee up as hard as I could. My wet skirts constricted the blow. I hit his thigh not his groin. He grunted in pain. I had at least connected hard enough to hurt. He faltered. I took the opportunity.\n\nBlood thundered in my ears beating like a fevered dance.\n\nRun. Run.\n\nMud and hail covered the field making it icy slick. I flailed my arms to keep balance. My skirts held me back, wrapping around my legs in wet bondage.\n\nHe reached me fast, grabbed my arm, wrenching my shoulder, pulling me back. I smelt the burn of malt liquor on his breath. I kicked behind, my boot connecting with his shin with a crack. He slipped back, toppling over in the mud. I risked one look back and then ran. Into the night, dragging up my rain sodden skirts in a gripped fist. My heart pounded. I had no vision other than the flash of lightening that briefly filled the night sky.\n\nI gasped in air, sucking in the cold biting rain with each labored breath. My boots slipped in the black mud, ice slick, I could not keep my footing. Hands pawed at me from behind. Bandar. He'd caught me. He grabbed my skirt. I fell forward. The tether burned at my neck. It pulsed in a painful beat. He pulled up the wet length of my skirts. Fabric ripped at his coarse hands. I came up on my knees trying to push him back. I flailed my elbows back hard, trying to connect with any part of his body. Trying to push him off me. His laugh rang in my ears as his body pushed me down.\n\n\"I will have you bitch. I will take what I want.\"\n\nHe bared my thighs to the bite of the rain. My drawers stuck fast to my skin. He pulled at the tapes to free them from my body. I fought. Hard, an animal pinned, I growled baring my teeth like a wolf in a trap. He gave up on the tapes instead hooking his fingers in the waistband and pulling. The seams tore easily ripping the drawers from my thighs in one violent tug.\n\nPossessed by fear I fought. My elbow jammed into his face. He caught the arm and wrenched it up behind my back so hard it almost pulled it clear of the socket. He pressed his knee into the small of my back, pinning my hips into the sucking mud. My face lay flat in the mud but I was not yet done. I would not submit.\n\nI had more fight. I had more to give, but he stopped me. Stilled me with one sentence. \"I have your sister.\"\n\n\"No. No. She is with Askel.\"\n\nHe laughed. \"Is she then? The Sarran fool who is drugged asleep in his tent?\" That Askel?\"\n\nMy fight shattered, broke and blew out into the wailing wind. \"What do you want from me?\"\n\n\"So much bitch, so much. But we'll start with you getting up. Run and Leia will regret it.\"\n\nHe dug his knee into my back pressing his full weight down in a vicious and painful push before rising to stand. I brought my hands flat and rose up out of the mud. I was black from cheek to foot.\n\nThe rain had slowed to a fine curtain. \"Walk,\" he said and pushed me in the centre of my back. I stumbled. He laughed. I sucked in a breath and tried to still the panic that surged thick and fast in my veins.\n\nI labored one step at a time across the slippery ground with Bandar shoving me from behind. We reached the tree line and kept moving. The forest offered protection from the rain. It was darker here; apart from the intermittent flash of lightening I could barely see one foot in front. We followed a single width path through the thickness to a small clearing at the edge of the hillside. He pushed me to the hill until I was an arm length from the rocks.\n\n\"Here,\" he grunted.\n\nWhere? I could see nothing but rocks. He pulled me to the side, into a crack barely big enough to slide through. A hidden cave.\n\nWhen my eyes adjusted to the dark I saw a small figure huddled near the wall.\n\n\"Leia!\" I moved before he could stop me. I was upon her in seconds, my hands running across her body to make sure she was safe and whole.\n\n\"I'm all right Talia. I'm all right.\"\n\nA sob escaped and then another until I could it no longer. I held her in my arms, rocking in time with my cries.\n\n\"A touching little scene.\" Bandar stood before us, hands on his hips.\n\nI moved in front of my sister, pushing her behind between me and the rock wall. \"What do you want? What do want from me?\" I was deliberate in my omission of Leia from his wants. He would deal with me and me alone.\n\n\"I want you tethered.\"\n\n\"To you?\"\n\n\"Yes. Right now.\"\n\nHe was insane. I did not know the tethering ceremony. All I knew was that it was conducted at full moon. I did not argue, instead I said, \"Yes, I will. I will consent to the tethering. First let Leia go.\"\n\n\"No!\" Leia yelled, pushing at my back. \"You will not protect me this way.\"\n\nI shoved her back behind me ignoring her cry keeping my eyes locked on Bandar. \"You will have me only once you have let her go.\"\n\n\"You give me orders?\"\n\nI'd made a mistake. A big mistake. I had told, not asked. His eyes shuttered. He went to a crazy place. I had sent him there with my demands.\n\n\"I will take what I want. All that I want. What if I start with her? Right here. In front of you\u2014 with the music of your sobs?\" He kicked me hard, his boot connecting with my arm and shoving me aside with ease. As I rolled to right myself he reached down and took Leia's arm, dragging her up against his body. She looked so small, so fragile against his brutish form.\n\nI stood to face him. \"No. Please. Please Bandar. She has no skills. I can please you. I want to. I want to please you.\" With shaking hands I began to unclasp my bodice. Tiny pearl buttons slipped in my trembling fingers. He watched me, still holding Leia to his chest. My hands would not work, they fumbled until I gave up and simply wrenched apart the bodice, popping buttons on the packed dirt floor, revealing the wet chemise beneath.\n\nThe fabric was sheer, clinging to like a translucent second skin. Bandar loosed his grip of Leia and took a step towards me. I sighed in relief and continued to undress. The ties of my skirt freed easier than the buttons, the water weight dragged it to the floor the moment the ties were released.\n\nI wore no drawers. Those ripped off me by Bandar. The chemise clung from breasts to ankles. Bandar feasted upon my body with hungry eyes. My stomach rolled with the thought of what I must now do, but I did not stop. I reached down and tore the chemise, making a split right up to my sex. I pulled the wet fabric away from my body revealing to him what he wanted.\n\n\"Come,\" I beckoned. \"Come to me.\" Away from my sister. Away from Leia.\n\nDrunk with lust and madness he lurched forward, arms outstretched. One step, two steps until he was barely and arm length away.\n\nMy eyes I kept locked on his, drawing him to me. I did not see her until she cried out, \"No! You will not have her!\"\n\nBandar fell forward. Leia stood above him with bloodied rock still clenched in both hands. She'd hit him from behind with a force I never thought her frail form could muster. He lay flat on the cave floor with blood gushing from his head. She looked up at me dropped the rock, it bounced from Bandar's back to the cave floor.\n\nReaching out a hand she said, \"Come. Let's go. Let's go now. Now!\"\n\nI nodded, stepped over Bandar and took her hand. She did not stop pulling me until we were in the clearing outside the cave entrance.\n\n\"Where to?\" Leia asked, looking up at me as if I had the right answer.\n\n\"Anywhere but here.\" I looked away, shielding my eyes from the rain, looking at the tree line for the path entrance.\n\n\"To Askel?\"\n\nI heard her hopeful question but did not get a chance to answer. She cried out and before I even looked back I knew. I knew that he had her.\n\nLeia was gripped to his chest. His face was bloody, streaked from the falling rain. Mouth set in a vicious grin, he bared his teeth like an animal. He held a knife to her throat, the point pressed against her pulse.\n\n\"No,\" I whispered the word, unable to muster anything more.\n\n\"Sit,\" he barked.\n\nI folded, bare arsed into the mud.\n\nI watched him bind her, wrap her wrists tight in twine at her back. When she was secure he came to me. He bound my wrists like hers, dragged me back to a tree and wrapping the ends tight around the trunk.\n\nHe did not speak. He grunted. Animal sounds that filled me with bone deep fear. He was lost. Lost to the anger. Lost to his madness.\n\nWhat would he do?\n\nI watched, locked tight in my binds as he pushed Leia to her knees. He flipped up her skirt and pulled down her drawers.\n\n\"No. No. Please no,\" I moaned in desperate sorrow pulling on my bindings.\n\nHe pushed her forward, her face hit the mud. He watched me, not her as he undid his breeches and released his thick hard cock.\n\n\"No. No. No.\" I could not stop the word. It poured from me, growing in volume.\n\nHe laughed. Stroked his brutal hard shaft and laughed.\n\n\"No. No. No. NO!\" Each cry became louder. Stronger. Until over the roll of thunder my voice cried out. Booming.\n\nHe dropped his cock and brought his hands to his ears.\n\n\"No. You will NOT take. You will NOT take.\"\n\nHe cowered. His shoulders shook and he ground the heels of his hands against his ears.\n\n\"No!\"\n\nPower surged from the sky. A flash of lightening hit behind Bandar sizzling the ground spotting fires quickly dampened by the rain. Steam rose around him. Anger coursed through me. Righteous fury. I shattered the bindings like fine spun glass. My arms and legs free slipped free without conscience thought.\n\nI came upon him, my feet barely hitting the ground. I surged forward on the wind of my hatred. He was on his knees, holding his head and whimpering. A gust of wind caught my torn chemise spreading it like the wings of an avenging angel. I raised my arms, my palms up to the storming sky. The lightening came. I called it to my hands. My fingers took the blast, from each side it rocketed through me, shocks of bright white light, burning through my bones.\n\nI laughed. Loud over the wind it came. I saw it. Saw the sound as it wrapped around his body binding him at my feet.\n\nMy fingers, burning with the power of the light steepled at my mouth, my chest and my sex and then spread out, pointing at Bandar and blasting him with the white hot power of the sky.\n\nHe fried. Cindered like the straw offering at the Summer Solstice Bonfire. I felt nothing. Nothing as I watched him disintegrate, but when the white light left me and I fell to my knees at the ash that remained of his body and emptied my stomach in the realization of what I had done.\n\nI had killed him. Killed Bandar. With lightening from my hands. I rocked back and forth in the rain, both terrified and grateful.\n\n\"What have you done? What are you?\"\n\nI looked to see my sister up on her knees, trembling in fear. I moved to her and she cowered, falling back into the mud. I stood above her as she looked up at me with a mix of fear and revulsion that cut to my very soul.\n\n\"Come,\" I said in a voice as cold as the rain. \"Come now. We must leave.\" "
    ],
    "authorname": "darcysweet",
    "tags": [
        "talia",
        "witch",
        "bandar",
        "sarran",
        "vessel",
        "hatha"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-choosing-ch-07"
}