{
    "title": "Love Can Conquer All, Even A Dragon!",
    "pages": [
        "Hey Literotica readers,\n\nHope you all are fine. Here i present my first story, so please be easy at comments and please vote, as it would encourage me write more stories. Let me know of my mistakes and i would make sure not to commit them next time. \n\nHere is my first try at erotic horror. This is not a pure erotic horror, i think this is not an erotic horror but i didn't had better category option to choose from, so it's here. Rather it's about a young girl named aurora who does the unthinkable and heads into the wilderness in search of a fire dragon who attacked her town. She knows he is hiding somewhere in the windstone mountains, but finding him will be easy compared to what she must do next... convince him that fate has brought them together to prove that love can conquer all.\n\nRead on to find out...\n\nAll characters involved in this story are above 18 years of age, even the dragon... LOL :P\n\n** ** ** ** *** *** *** *****\n\nLove Can Conquer All, Even A Fire Dragon!\n\nWhen Paragon woke up and saw that Silverwing still wasn't back from her morning hunt, he was a little surprised. It wasn't like her to stay out much past daybreak, and the sun was already well into the sky. Like most dragons, she preferred to hunt at first light, and bring the game back to their den to eat it. Paragon on the other claw, preferred to hunt in the afternoon which worked out well because if she didn't catch something, he usually did.\n\nAfter lounging about for a little bit longer, he finally got up and went over to the entrance to see if he could see her. The lowlands were far off, but he could make out the hills near the coast where Silverwing had gone to hunt for wild boar. As he peered out over the horizon, he kept thinking he would see her majestic silhouette appear at any moment. When it didn't, he began to wonder what was keeping her. He knew she was an experienced hunter, but wild boars were not easy to kill, and they rarely went down without a fight. It was one of the reasons she liked to hunt them. The more he thought about, the more anxious he became as the thought that she might have been injured started to play upon his fears. When she still didn't appear after he had paced back and forth for a little while, he took to the sky to go look for her. The whole time he was heading towards the coast he kept hoping he would see her, but the pastel sky was vacant, except for a few adolescent ravens who were chasing each other around playfully.\n\nWhen he finally reached the coast, he headed straight to the northern most portion of the hill country furthest from Durban. He knew she would not venture to close to the human's settlement, but the prime hunting grounds did extend all the way down to their town. After scouring the northern hills without seeing any trace of her, he headed south. As he passed over a large open field a few miles from the town, he noticed a blood-trail near the edge of it, and immediately dove down to investigate. Within minutes he located dragon prints and wild boar tracks scattered all about, but as he feared it appeared to have been a messy kill. From what he could tell, the boar either ran, or was dragged after Silverwing tried to kill it. As he followed the blood trail, he suddenly realized something had gone terribly wrong when he came across human footprints and a broken arrow. A moment later, his heart skipped a beat when he found one of Silverwing's iridescent scales lying in the grass. As he lifted it up in his trembling claw, his heart broke in two when he saw a hole where an arrow had pierced it. The barbarians had shot his beloved mate, and what he had assumed was wild boar's blood, was actually hers. Paralyzed by grief, his legs buckled, and he fell to the ground. Why they would have attacked an innocent dragon was beyond his comprehension, but whatever the reason, he would not rest until those who were responsible were brought to justice. Silverwing had never threatened a human, and he knew she would have never argued over a kill. If all they had wanted was the boar, she would have let them have it, and gone looking for another. The hills were overrun with them, and she loved the thrill of the hunt.\n\nWhen Paragon felt his grief turn to rage, he took to the air, and followed the crimson trial south towards Durban, hoping he would find her before it was too late.\n\nWhen he reached the north gate of the town, his worst fear was quickly realized when he saw Silverwing's lifeless body propped up on a large stone for all to see. It was an infuriating sight, not only had they murdered her, but they had had the audacity to put her on display as if she were a trophy. As hard as it was for him to do, he put his rage aside, and flew down to retrieve her body. She was a dragon, a creature of nobility, and she deserved a proper burial. When the townsfolk saw him approaching, they rushed to get their weapons, but he was already back in the air before they could mount a response. As he flew off, he could hear them cheering as if they had scared him away. Little did they know he would return to exact his revenge once Silverwing was laid to rest.\n\nAs he flew up the coast with Silverwing in his talons, he gently nuzzled her lifeless body. She was the one thing in his life that he loved more than anything, and he couldn't believe she was gone. Why the savages felt the need to kill her was beyond reason or explanation. The hill country was not even their land, and dragons had only tolerated their intrusion on it because there was plenty of game to go around. If this was how they were going to repay the favor, then Paragon felt it was time for them to see what the wrath of a Fire Dragon looked like. Then they would know that the penalty for killing a dragon is death by fire.\n\nWhen Paragon spotted a secluded meadow with a view of the ocean, and the Windstone Mountains, he gently set Silverwing down in it. Then he went into the nearby woods and gathered up some wood for a pyre. Once he was done preparing it, he placed Silverwing's body on top of the tender, and lit it with his fire. As the flames consumed her, he said a few words to honor her memory. She was the one and only dragon that had ever understood him, and now that she was gone, all that remained was hatred and revenge for those who had done this. He had never killed a human before, but whatever tiny amount of respect or reverence he felt for them was in the past, erased the instant they had hurt his beloved mate.\n\nAfter the wood had turned to ash, he rolled in the embers until his wings turned gray. It was a symbolic gesture meant to honor the departed, and to signify to other dragons that he was in mourning. He knew his kin wouldn't see him since they lived so far away, but he wanted to follow the tradition just the same.\n\nOnce he was done paying his respects, he took to the sky and headed straight towards Durban. If they thought he was afraid of them because they had slain a Fire Dragon, they were grossly mistaken. He knew they had taken Silverwing by surprise, and undoubtedly shot her before she could protect the small area near her rear legs where the scales were thin. It was the only place an arrow could penetrate a dragon's nearly impervious armor.\n\nWhen the residents saw Paragon circling their town, they gathered in the streets and readied their weapons. Emboldened by their recent kill, they knocked their arrows and waited for him to come into range. The moment he dove from the sky, they released their bowstrings sending a volley of arrows towards him. Paragon immediately clinched his legs together and drew in a deep breath of air in preparation for the attack. When the arrows struck his armored hide, they shattered upon impact, and rained down from the sky. When the men saw their arrows disintegrate, they ran for cover, but it was too late, and he incinerated then in the streets. The few savages that survived his initial attack fled into their homes, certain that they would be safe behind their walls of brick and stone. Little did they know that the angrier the dragon, the hotter the flame, and he turned their shelters into pools of molten slag. As their cries for mercy echoed through the smoke filled air, he folded his ears back and continued the onslaught. Even though he did not consider himself to be a merciless killer, there would be no compassion or forgiveness for those who had killed his mate. His flames would punish them all.\n\nOnce Paragon had destroyed the heart of Durban, he headed towards the outskirt of the town to torch what was left. Anyone unlucky enough to get in his way was turned to ash. He was so intent on scorching every last inch of their wretched town, that when he saw a neglected ally lined with shanties he flew towards it, nostrils flared. Just as he was about to let loose with another round of fire, a young girl ran out into the street waving a dragon shaped doll high over her head. Stunned by what he saw, he flew past her, temporarily holding back his rage. He knew that humans sometimes offered animals as sacrifices to dragons and other creatures they feared, but this was unlike anything he had ever seen or heard before. Not only was the offering a silly dragon doll, but it was being offered to him by a young child, of all things. Unsure of what to make of strange event, he circled back around to take another look. As he flew towards the little girl, she tossed the dragon doll high into the air, intent on him catching it. Her aim was true, and the doll landed right in his talons as he sailed over her head. When he looked back, the girl waved at him and smiled. He had never seen anything like it. She actually seemed pleased that he had unwittingly accepted her offering. As he circled the street she was on several more times, she followed his every move across the sky, seemingly in awe of his presence. He didn't understand why she had no fear of him, but her act of bravery and the innocent look in her eyes touched a part of him that no arrow ever could. He had never felt empathy, or compassion for a human before, but for whatever reason, he could not ignore or explain what he felt, and he broke off his attack and headed home.\n\nAs he flew towards the Windstone Mountains, he couldn't stop thinking about what had happened. Why the little girl was unafraid of him was as perplexing as her actions. Her demeanor and the way she looked at him with such reverence didn't make sense either. It was almost as if she knew him even though they had never met. As he tried to figure out why she acted the way she did, he glanced down at the doll and noticed it was well-used, which seemed odd. He knew that children were taught to fear dragons, so it seemed unlikely that they would own or play with a toy that looked like one. Not only that, but an offering was meant to appease the recipient, and the giver would not risk offending a dragon with something that was used or defective. Yet the doll was worn, and looked like it had been played with for many years. As he tried to figure it out, he suddenly realized that what he had assumed was an offering to quell his rage, was actually a gift given to him not out of fear, but out of love. It didn't make any sense, but no other explanation seem to fit the girl's peculiar gift, or her unusual actions. She clearly wanted him to have the toy, and she had seemed happy once he had taken it. He had never considered the possibility that a human might actually like dragons, but why else would she have had a dragon doll in the first place? The more he thought about it, the more it seemed to make sense. The one thing he couldn't reconcile was why the doll looked exactly like him right down to the gold-tips on his dark-blue wings. The only way she could have known what he looked like was if she was a seer, but that was the rarest of gifts and he doubted a human child would be graced with it. As he tried to come up with a more probable explanation, a shiver suddenly ran down to his tail. He knew that dragons often shared a connection with one another through the ethereal realm, but it was unheard of in lesser creatures. The unspoken and unseen force of nature allowed dragons glimpses of future companions or mates so they could bond with each other even before they met. The very notion that fate would connect two dissimilar creatures in such a way was absurd, and he immediately rejected the idea even though he could not come up with a better explanation for how she could have know what he looked like.\n\nWhen he arrived back in his cave, he headed into the depths to soak in the hot spring that made his den so unique. Its warm effervescent waters filled the lower chambers of the cave creating a series of pools that he frequently basked in. It was his own private refuge, and even though he was a Fire Dragon he loved the water. Silverwing rarely went into the spring, but she had liked the warmth it provided and had always stayed close by when he went swimming in it. Now that she was gone, the hot spring was the only thing in the world that took some of his pain away. Its soothing waters relaxed his tired wings, but it did little to alleviate the emptiness he felt in his heart and soul. He was lost without his mate and he would have done anything to bring her back. 2\n\nAs the days turned to weeks, and weeks to months, the pain of losing Silvering slowly subsided. He loved her more than anything, but he knew a life filled with regret and sorrow would not have honored her wishes. She would have wanted him to go north and find a new mate. It sounded like a good idea at first, but the thought of starting over was not very appealing. It was hard enough going through the courtship process the first time. Having to compete with other males for the female's attention was exhausting. The females were very choosy, and only selected mates that met a long list of desirable traits. The most important of which was the strength of the bond or connection they felt for the male. Then there was the male's overall appearance; sleek lines, rare coloration, and a powerful physique where all prized attributes that were sought after. After that, the females would consider attitude and demeanor, favoring the more outgoing males above the others. Despite his eye-catching markings and coloration, the females considered him to be too shy and quiet, and therefore not a suitable mate. He thought it was ironic how the humans viewed him as a ferocious fire-breathing beast, while his own kind thought he was not aggressive enough to be a Fire Dragon. If they had seen what he had done to Durban, he wondered if that opinion of him would have changed.\n\nAfter several years of being passed over by the other females, he met Silverwing. She loved him for what he was, rather than what others expected him to be and he finally felt like he belonged. She was a tender and loving dragon who appreciated his calm demeanor and felt that the bond they shared was deeper than most. The very qualities that the other female dragons turned their tails up at, were the very attributes Silverwing found most appealing about him. He knew they were a good match, and when she chose him, it was the happiest day of his life. Now that she was gone, he knew the odds were poor that he would ever be selected again. It just seemed easier to accept the loss, and fill his days basking in his hot spring or hunting in the forest near his home. It was a lonely life, but there was some joy in the simplicity of solitude.\n\nOne day when Paragon was looking for his favorite stone to sharpen his claws on, he ran across the dragon doll that he had all but forgotten about. Its dark blue color had faded, but it still reminded him of the little girl who had given it to him. She was a jewel in a crown of thorns, and he wondered if she were to see him circling her town if she would run out into the street to greet him. It was a silly daydream, and he knew his presence in their skies would only cause panic after what he had done to them. Not only that, but there was no way to know if she still lived there, and even if she did, she would have undoubtedly forgotten about him. Why he felt any connection to her was hard to explain, but seeing the doll made him happy and sad at the same time. He knew soft emotions were taboo, just as expressing feelings of remorse and regret were frowned upon. Why he had such a hard time suppressing his emotions when other dragons didn't even seem to feel them, was just one more trait that set him apart from his kin.\n\nAfter he finished looking at the doll, he put it back in its hiding spot and proceeded to sharpen his claws. It had been a few days since his last meal, and he was ready for another hunt. He may not have been the most feared dragon back in Castle Crag, but in Windstone, he was the most lethal hunter the realm had ever seen. His own personal combination of patience and stealth proved to be a deadly combination, and when he went out in search of game, the odds were that he was coming home with something delicious.\n\nOnce his claws were sharp enough to cut through the toughest hide, he left his cave and headed out. It was an unseasonably warm winter day, and the sunlight warmed his wings as he glided along in search of game. When his shadow failed to flush out any tasty critters from their hiding spots, he head down the valley towards the Windstone River.\n\nMuch to his surprise, he spotted a young woman camped near the water's edge and he quickly ascended high into the azure sky to disguise his presence. After a few passes he could see that she had killed a small deer and was preparing to cook it. It looked like a lot of meat for one person, so he continued down the river to see if he could find her companions. Ever since the attack on Durban, it was rare to see humans hunting in his territory and he liked to keep track of their movements to make sure they weren't hunting him. As long as they kept their distance and stayed away from his cave, he left them alone.\n\nAfter scouring both sides of the river without seeing anyone else, he decided to fly back to the young woman's camp to check on her. He wasn't sure why she would be by herself in the heart of dragon country, but he thought he should check on her. Despite all the legends of dragons attacking and killing humans, quite the opposite was true. Dragons only killed humans to protect themselves, or avenge their kin. In reality, the odds of being killed by a dragon were infinitesimally small compared to the odds of being killed by another human. Paragon never liked the idea of any creature taking advantage of another, and he felt protective of the young woman since she was in his territory.\n\nWhen he made it back to the area near her camp, he landed on a large rocky outcrop that overlooked the river. It was far enough away that he didn't think she could see him, but he could keep watch over her.\n\nAs he looked on, she started a campfire, and then placed the deer on a roasting stick after sprinkling the meat with some kind of seasoning. Before long, the alluring aroma filled the air and made its way over to his hiding spot, causing his stomach to grumble with hunger.\n\nAs he sat there eyeing the savory meat, he noticed the young woman had a pale complexion and long flowing golden colored hair just like the little girl in Durban. Normally it wouldn't have caught his attention except that every other human in the region had darker skin and dark hair. Seeing the young woman with the same features as the little girl made him wonder if she was her sister, or some other relative since they looked so similar. As he looked on, he suddenly realized enough years had passed that the little girl would be an adult by now and his eyes lit up. She certainly seemed confident and unafraid despite being alone in the wilderness, just as the little girl had been unafraid of him. The more he watched her, the more likely it seemed that they were one and the same, but he was just too far away to be certain. He knew if he went down there and was mistaken about her identity, she would panic at the sight of a dragon. If there was one thing he knew about humans, it was that they were easily frightened. He didn't want to terrify her, especially since she was alone, so he just sat there, keeping an eye on things. He figured that if no one else came along by nightfall, she would be fine and he could help himself to the leftover meat as a reward for guarding her.",
        "After the deer had been roasting for a while, the young woman cut a few small strips of meat off of it, and then went over and sat down on a blanket next to the river. It was a peaceful late afternoon, and she seemed to be enjoying the serenity of the gently flowing river. When she finished her meal, she took off her shoes and dipped her feet in the stream as if testing the water. Then she started to undress and Paragon glanced away until he heard a loud splash and thought she might have fallen in the river. Much to his surprise, she was just splashing about playfully as though she didn't have a care in the world. As he watched her frolic, it made him think back to a time when he used to swim in the lake where he grew up. Unlike the other Fire Dragons in his clan, he loved the water and would not stop swimming and playing in it even though they teased him mercilessly. Some of the meaner dragons called him 'half-breed', implying that one of his parents was a Water Dragon, a forbidden mixing of two dragon species. Of course it wasn't true, but it made him feel like an outsider, and it was hard being misunderstood. Over time he learned to ignore the other dragons, and he found his own path to happiness.\n\nSeeing the young woman playing in the river by herself made him wonder if she was an outsider too. He didn't know all the rules of human society, but he was pretty sure females didn't normally bathe out in the open, or go hunting on their own. Whatever her story, she seemed to be enjoying the water, and he liked watching her.\n\nWhen the sun started to set, the young woman made her way over to the edge of the riverbank and emerged from the water. Paragon knew he should look away since she was no longer concealed by water, but he had never seen a naked woman before and she fascinated him. He couldn't help but notice how her gentle curves glistened in the fading light as she slowly dried off with a piece of cloth. When she was done with that, she went over to warm herself by the fire. The flickering glow of the flames seemed to enhance her alluring form, and he looked on, mesmerized by her. When he realized his fascination was turning into something more, he shifted his attention to the deer and tried not to look at her. It was one thing to revere a thing for its beauty, or out of wonder, but anything more was strictly forbidden. If a dragon was ever caught fraternizing with another creature it would result in eternal banishment from the clan.\n\nOut of the corner his eye he noticed the young woman was rubbing lilac blossoms on her body. It seemed like an odd ritual to him, but he thought the scent from the flowers might help keep the last few mosquitoes away. When she done doing that, she finally put her clothes on and then laid down on her blanket.\n\nOnce he thought she was asleep, he took to the air and circled the river a few times to make sure there were no other humans in the area. Then he landed in a small clearing next to her camp and slowly approached. Despite being nearly twice her size, he could walk without making a sound. When he was within a tails length of her blanket, he gazed at her under the pale moonlight. Her delicate features were unmistakable, and he was certain it was the girl from Durban, transformed by time into a pretty woman. With his curiosity satisfied, he grabbed the deer off of the roasting stick, and pulled a small piece of meat off to leave behind. Then he gently flapped his wings until he was back in the air, before heading home. He felt a little guilty about taking most of the meat from her, but after watching over her all day, he felt like he had earned it. Not only that, but watching it cook and having to smell the delicious aroma had made him so hungry, that there was no way he could resist it any longer.\n\nOnce he was back in his cave, he set the deer down and started devouring it. Whatever seasoning she had put on it made the meat so juicy and flavorful that he ate the entire thing, bones and all, in one sitting. It was the best tasting deer meat he had ever had, and his only regret was there wasn't more of it. He licked his talons several times to get the last bits of the flavor off his claws, before curling up by the hot spring. Then he closed his eyes and went to sleep.\n\nThe next morning he took his time getting up since he had gone to bed so late the night before. After a quick dip in his hot spring, he went over to the large flat limestone outcrop that was just above his cave to bask in the sun. As he gazed out over Windstone Valley, he started thinking about the young woman. Why she had such an effect on him he could not explain, but when he tried to block her out of his thoughts, it made him feel restless. It was as if he was drawn to her for some unknown reason. Even though she seemed perfectly capable on her own, he kept worrying about her and wanted to make sure she was okay. After debating if he should go back to her camp, he decided that he should, otherwise the not knowing would bother him all day long.\n\nWhen he arrived at her camp, he was surprised to see that she had already packed up and left. He knew that humans could only travel twenty miles a day on foot, so he circled the area near the river in hopes of finding her. As he slowly expanded his search, he felt a mixture of sadness and concern replace the thrill that he would see her again. She seemed to have vanished without a trace.\n\nAfter scouring the forest and meadows from the air repeatedly, he began to wonder if he had dreamed her up. It wouldn't have been the first time that he had had a vision so realistic that later on he could hardly discern it from reality. The longer he went without seeing her, the more convinced he became that she was just a figment of his imagination. A life-like fantasy conjured up by his mind to quell his boredom and loneliness. As the realization sunk in that she was little more than an echo from his past settled in, he felt an emptiness inside. It was the same feeling he had right after Silverwing was taken from him, and he hated it. All he wanted was to see the young woman one more time, just to know that she was alright, and not a product of his imagination.\n\nAs he flew aimlessly back-and-forth across the valley, the sun disappeared behind a wall of dark clouds and the temperature started to drop. Before long it started to snow, and he decided it was time to stop pursuing a ghost. If she really was out there somewhere, fate had hid her from him, and he doubted he would ever see her again. Even though he wanted her to be real, the thought of her being trapped out in a snowstorm made him hope that she wasn't.\n\nOnce he got back to his cave, he shook from head to tail to dislodge the frozen precipitate from his scales. The snow was an unwelcome friend, and he wasted no time getting into his hot spring to warm up. As he basked in the soothing water, he caught a faint whiff of lilac in the air, and wondered why his mind was still playing tricks on him. He knew the flowers only grew down in the valley, and despite his keen sense of smell, there was no way it could be real. The deceitful nature of his imagination made him wonder if he was getting sick, or had eaten something that was making him hallucinate. Whatever it was, he got out of the water and curled up in his favorite sleeping spot hoping that some rest might clear his mind. No sooner than he closed his eyes, he caught another whiff of lilac that was far stronger than the one before and he knew it couldn't be a figment of his imagination. Puzzled as to why he could smell lilac so far from where it grew, he got up and headed towards the entrance to his cave to try and trace the source of the odor. When he glanced out of the opening, his heart skipped a beat when he saw the young woman appear out of the blinding snow.\n\n\"Would it be okay if I came inside for a moment?\" she asked as she looked at him in awe.\n\n\"Sure,\" Paragon replied as he felt his heart pounding from the shock of seeing her at his cave.\n\n\"My name is Aurora, do you remember me?\" she said as she shook the snow out of her long flowing hair.\n\n\"I do... you're the girl from Durban.\"\n\n\"Whew, I was a little worried you might not remember me, and then I wasn't sure what would happen next,\" Aurora remarked.\n\n\"How did you find me?\" Paragon asked, trying not to sound rude.\n\n\"When you came into my camp last night, I saw you fly towards this peak and I followed you,\" Aurora replied. Paragon could tell by the tender look in her eyes that she was not there to try and harm him, but that was the only reason anyone else had ever come to his cave.\n\n\"Please don't take this the wrong way, but why have you come here?\" he asked.\n\n\"I wanted to meet you and thank you for saving my life,\" Aurora replied with a warm smile.\n\n\"That was a long time ago... there really was no need for you to come all this way just to do that,\" Paragon replied as he tried to understand the reason for her visit.\n\n\"Perhaps not, but I also wanted to know the name of the dragon who changed my life,\" Aurora said as she looked at him with awe.\n\n\"My name is Paragon, and I am flattered by your sentiment, but I don't understand why you are not afraid of me when every other human is?\"\n\n\"Because I trust you, and I know you will not hurt me,\" Aurora replied.\n\n\"Have you had a vision, or are you seer?\" Paragon asked, wondering how she knew he felt protective of her.\n\n\"I'm not a witch, and I don't practice the dark arts, if that's what you are worried about.\"\n\n\"No, I didn't think so, but humans don't usually come looking for dragons so they can thank them, or tell them how much they trust them,\" Paragon remarked with a smirk.\n\n\"That's probably true, but I am not led by my fears, and I trust you because you spared my life even when your heart was filled with rage. If you didn't harm me back then, I see no reason to be afraid of you now,\" Aurora replied.\n\n\"You are very perceptive, but other dragons would not have welcomed you into their den as I have,\" Paragon warned.\n\n\"Luckily, you are not like other dragons,\" Aurora insisted.\n\n\"And I suspect that you are not like other humans,\" Paragon remarked, as he looked her over for a moment.\n\n\"That's because I follow what I feel in my heart, and it led me to you,\" Aurora admitted.\n\n\"If you saw me last night, then you must know that I took your deer,\" Paragon said as he looked down for a moment.\n\n\"I wasn't sure if you would show yourself if you saw me, so I cooked the deer hoping it would lure you in. I hope you are not upset with me, but I had to see you.\"\n\n\"I know you are thankful that I spared your life when I attacked Durban, but why aren't you angry that I destroyed your town, or killed your kin?\" Paragon asked.\n\n\"Durban was a godless, soulless place filled with every manner of degenerate. Most of the people who lived there preyed upon unsuspecting travelers along the coast. They robbed and killed my parents, and then took me as a slave when I was only eight years old. The men who owned me treated me like an animal, and then threatened to do worse if I ever tried to escape. The day I saw you swoop down out of the sky, I knew my prayers were answered. Your flames cleansed the town, and freed me from my captors,\" Aurora said with a look of gratitude.\n\n\"I am sorry you lost your parents and had to suffer at the hands of others, but I only came to Durban to avenge my mate,\" Paragon insisted.\n\n\"That might be, but what I prayed for also came true... is it not possible that what seemed like an act of vengeance might have been something more?\" Aurora asked.\n\n\"I am not sure what you mean?\"\n\n\"Your attack may have seemed indiscriminate, but the only lives that were lost that day were not worth saving. When the dead were gathered up and buried, it was clear that your wrath only struck down the men who were evil,\" Aurora insisted.\n\n\"It might have seemed that way to a little girl, but surely innocent lives were also lost in the wake of my destruction,\" Paragon remarked as he thought about the severity of his attack.\n\n\"I can assure you that those who perished were not going to escape the flames of justice for long. The few who did survive where not like the others. They were kind folk that were just too poor to leave Durban when the filth took it over. If you still don't think that your attack was ordained, then consider this next part of my story. My captors never left me alone at any time during the two years they enslaved me, except for the day you attacked. For whatever reason, they trusted me to stay put while they went into the heart of the town to satisfy their lust. The moment they left me I sat on the floor holding my dragon doll, and guess what I prayed for as I stared out the window?\"\n\n\"I don't know,\" Paragon replied.\n\n\"I prayed they would never return, and shortly after that I saw flames come down from the sky and engulf the town,\" Aurora said with a look of vengeance in her light blue eyes.\n\n\"It is a remarkable story, and I am glad that innocent lives were not lost, but it does not explain everything that happened that day,\" Paragon replied.\n\n\"Perhaps not, but you cannot claim all those events were just coincidence,\" Aurora insisted.\n\n\"No, I don't believe they were, but you left something out,\" Paragon remarked.\n\n\"What?\" Aurora asked.\n\n\"It is true that I spared your life during the attack, but you were not afraid of me even before that. I saw the expression on your face as I was about to unleash my fire on the street where you stood, and there wasn't a shred of fear in your eyes. How did you know that I wouldn't kill you in that instant?\" Paragon questioned.\n\n\"I feel like I've known you my whole life even though this is the first time we have ever spoken. Even so, it is hard for me to reveal what I feel deep down inside because it is so personal and I have never shared my feelings with anyone before,\" Aurora admitted in a nervous tone, unsure how he would react to her reluctance to divulge the truth.\n\n\"Now I am more curious than ever, but I also understand holding back. It is not always prudent to reveal too much until you know where you stand,\" Paragon remarked.\n\n\"Thank you for being so understanding. I have wanted to see you for so long, that now that I am finally here, it's a little overwhelming,\" Aurora admitted.\n\n\"Is there anything I can do to make you feel more comfortable?\" Paragon asked.\n\n\"You could invite me to stay, and show me around your den so I can learn more about you,\" Aurora suggested.\n\n\"You can stay until the storm passes, but after that, you should probably go,\" Paragon insisted, without explaining the reason for his concern.\n\n\"I'm sorry, am I intruding?\" Aurora asked with look of disappointment in her eyes.\n\n\"No, but I don't think your kin would approve of you being here. The last thing I want is for you to be dishonored or cast out if you are seen with me,\" Paragon replied.\n\n\"I am already an outcast, and I honestly don't give a damn what others think about me,\" Aurora remarked.\n\n\"There is no doubt about your fortitude, but dragons and humans have had a contentious relationship for many years. I don't want any of that animosity to come back upon you.\"\n\n\"Does that mean that you and I cannot be friends?\" Aurora asked.\n\n\"No, I just want to make sure you understand the risks if you choose to stay,\" Paragon admitted.\n\n\"Have other people come here?\" Aurora asked, as she tried to understand the root of his concern.\n\n\"Yes. Trophy hunters and men of conquest are always looking for a trophy to hang on their wall. Luckily, I am not that easy to kill,\" Paragon replied as he bared his teeth for a few seconds.\n\n\"Did you kill them?\"\n\n\"Two of them lost their nerve and left unharmed, a third man stuck me with a spear and I killed him,\" Paragon remarked as he pointed to a damaged scale near his front leg.\n\n\"Will it heal?\" Aurora asked with a look of concern.\n\n\"When I shed in the spring the damaged scales will be replaced with new ones,\" Paragon replied.\n\n\"Where would you like me to put my things?\" Aurora asked, clearly intent on staying with him.\n\n\"I normally sleep down near the hot spring towards the back of the cave to stay warm. You can bed-down over there, or make yourself at home in one of the smaller side caves if you prefer.\"\n\n\"Thank you, I promise I will stay out of your way, and I don't want you to do anything different just because I am here,\" Aurora insisted as she carried her belongings into one of the natural alcoves that was close to the water.\n\n\"If you want to warm up in the spring before bed, feel free, just let me know and I'll give you your privacy,\" Paragon offered since she was staying in his den.\n\n\"Is the water very hot?\" she asked as she looked over at the steam rising off the water.\n\n\"The shallows are warm and the deeper pools are hot. If you swim around a bit, you should be able to find a comfortable area,\" Paragon suggested.\n\n\"That sounds nice, I think I'll take a quick dip before I go to bed,\" Aurora replied.\n\n\"I'm going to look out at the storm and see if it's still snowing,\" Paragon replied as he turned to leave.\n\n\"You don't have go,\" Aurora replied as she started to undress. Paragon glanced over at her for a moment as if debating her offer, and then continued on. He actually wanted to join her, but he was conflicted about what he felt. She was mysterious and carefree, but she stirred his instincts, and that made him a little uneasy. It wasn't like he couldn't control himself, but he was ashamed of his feelings, and he knew it was forbidden to look at her with even a hint of desire. After all, he was a dragon and she was a human, a very pretty one, but a human none-the-less.\n\nAfter cooling off near the entrance to his cave, the sound of splashing subsided, and he headed back down towards the hot spring. When he passed by the alcove that Aurora was staying in, he saw that she was relaxing on her blanket, but she wasn't wearing any clothes.\n\n\"I'm sorry, I thought you were dressed,\" he replied as he quickly went over to his sleeping spot and laid down.\n\n\"Are you going to bed?\" she asked as she peeked out at him.\n\n\"Yes, I spent all day looking for you, and I'm very tired,\" he replied.\n\n\"What did you say?\" she asked, surprised by his statement.\n\n\"I spent the day looking for game, and I'm very tired,\" he said as he quickly curled his tail around his body and closed his eyes. She could tell by his reaction that she had heard him correctly the first time and it made her smile. She knew he cared about her, and even if he didn't know it or wasn't ready to admit it, they were connected to each other in some way.\n\n\"Goodnight Paragon. Thank you for letting me stay with you,\" Aurora said in a kind voice.\n\n\"You're welcome,\" Paragon replied as he peeked over at her for a moment, only to have his gaze met by hers. He wasn't sure why she liked him so much, but she looked happy, and he no longer felt empty inside.\n\nWhen Paragon woke up the next morning, his underside felt unusually warm and he uncurled his tail to see what was wrong. Much to his surprise, Aurora was nestled up against him with her head resting between his front legs and her feet against his midsection. She looked so peaceful resting next to him that he couldn't help but feel protective of her, and he carefully curled his tail back around her. As he gazed at her, he couldn't help but wonder why fate had brought them together when nature had cast them so far apart. If she had been a Fire Dragon it would have all made perfect sense and he could have pursued what he felt. Since she was not, he would look after her and be her friend since they both seemed to enjoy each others company. \n\n\"How did you sleep?\" Paragon asked when her light blue eyes looked up at him.\n\n\"Very well, you are surprisingly comfortable.\"\n\n\"Was the cave floor too hard for you to sleep on?\" he asked.",
        "\"No, I just wanted to be near you. I hope that's okay,\" she said in soft voice.\n\n\"You kept me warm,\" Paragon replied.\n\n\"Were you cold?\" Aurora asked.\n\n\"Just a little... Fire Dragons do generate some heat because we are large, and it takes a lot of energy to be able to fly, and we are considered cold-blooded even though we are not cold to the touch,\" Paragon revealed.\n\n\"That makes sense,\" Aurora admitted as she put her hand on his tail and gently caressed it without even realizing it. Paragon knew he should have objected since humans were not allowed to touch dragons, but he liked how it felt. Her warm tender touch was soothing, and since she was already laying next to him, the rule had been broken.\n\n\"Your scales are so soft and smooth,\" Aurora remarked as she ran her hand along his tail a couple more times. Paragon could tell she was bonding with him, and even though it was against the rules, he didn't want her to leave. She was kind and affectionate, and he liked having her with him.\n\n\"The storm seems to have passed, but you can stay a little longer if you like?\" Paragon offered as his pulse raced in anticipation of her response.\n\n\"Are you sure, you seemed a hesitant about it before?\"\n\n\"If you are not worried about your kin finding you here, then why should I be?\" Paragon remarked.\n\n\"What would happen if your kin found out you were letting me stay with you?\" Aurora asked, not wanting him to get in trouble.\n\n\"I would tell them you are my guest, and they would not harm you,\" Paragon promised.\n\n\"Then I would love to stay as long as I'm not bothering you,\" Aurora remarked.\n\n\"I like having you here,\" Paragon admitted. He wanted to say more, but he wasn't sure how to express what he felt. All he knew was that he didn't want her to go, and his inability to express what he felt didn't really matter to him.\n\n\"If you are still interested, I could tell you why I wasn't afraid of you when I was a child,\" Aurora offered.\n\n\"I have wondered about that from the day I first saw you,\" Paragon replied.\n\n\"When I was a little girl, every time I had a nightmare, a dark blue dragon would appear in my dreams and scare the monsters away. All my friends laughed and said dragons were monsters too, but I didn't believe them. The blue dragon in my dreams was my friend, and he came whenever I needed him. When my parents realized how much I liked dragons, my mom made me a dragon doll for my sixth birthday. Since she used one of my drawings to design it, it came out looking just like you, the dragon from my dreams. It was my most cherished possession, and when my parents were taken from me, it was my only comfort. Now you know why I wasn't afraid of you that fateful day,\" Aurora revealed.\n\n\"I was wondering why you looked as though you knew me,\" Paragon remarked.\n\n\"Paragon, I feel a deep connection to you. I can't explain it, but I have felt it since I was little girl. The only question I have, is do you feel it too?\" Aurora asked. Paragon looked away without responding. He knew he had feelings for her, but if the other dragons ever found out, he would be banished from his clan.\n\n\"Paragon, don't you trust me?\" Aurora asked in response to his reluctance to answer her question.\n\n\"I do trust you, but it's difficult for me to express what I feel without condemning myself.\"\n\n\"But you do feel some connection to me?\" Aurora asked.\n\n\"I do,\" Paragon admitted.\n\n\"Would it help if I shared what I feel with you?\" Aurora offered.\n\n\"Are all humans so eager to share what they feel with one another?\"\n\n\"No, people don't normally reveal their true feelings for fear of being judged or ridiculed by others,\" Aurora replied.\n\n\"Then why would you want to share your feelings with me?\" Paragon asked.\n\n\"Because what I feel in my heart has everything to do with you, and keeping it from you feels like a betrayal of your trust,\" Aurora admitted.\n\n\"I promise I will not judge or ridicule you no matter what you share with me,\" Paragon said with a look of sincerity.\n\n\"I came here not only to meet you and thank you for saving me, but because I care about you and I want to be with you,\" Aurora admitted with a nervous look.\n\n\"You are very brave and courageous not only in the face of danger, but with your words and your heart,\" Paragon said with a look of admiration.\n\n\"So you are not repulsed by my confession?\"\n\n\"No, it is flattering, and I appreciate your honesty,\" Paragon replied.\n\n\"I was so scared that you would reject me once you knew how I really felt about you,\" Aurora sighed in relief.\n\n\"I have a confession of my own,\" Paragon remarked. \"When I saw you bathing in the creek, I didn't look away,\" Paragon admitted with a look of guilt.\n\n\"I knew you were watching me, and I thought you might come down once you recognized me. I had no idea that dragons were such shy and modest creatures,\" Aurora said with a gentle smile.\n\n\"I wasn't positive it was you, and an encounter with a dragon is not generally welcomed by your kin, not to mention you weren't even clothed,\" Paragon replied.\n\n\"You don't cover your body with anything,\" Aurora remarked as she looked him up and down.\n\n\"I do not wear clothes because I am not a human.\"\n\n\"And humans only were clothes because they are ashamed of their bodies, but like you, I am not ashamed of mine,\" Aurora replied.\n\n\"You seem to have more in common with us than your own kind,\" Paragon joked. Aurora nodded and Paragon could tell by her expression that she felt more connected to his kind than her own.\n\n\"Would you mind telling me more about your life?\" Aurora asked.\n\n\"Well, I grew up in Castle Crag, which is on the far northern end of the island. I have several brothers and sisters, but once we reached breeding age we went our separate ways. I moved here about fifteen years ago with Silverwing, and after she was killed I have spent my days looking after myself,\" Paragon replied.\n\n\"Why did the men attack Silverwing?\" Aurora asked, hoping the question wasn't too painful for him to answer.\n\n\"People without a soul think that if they kill something with a soul it will satisfy their craving for one. From what I have seen, it only fulfills them for a short time and then they need to kill again,\" Paragon replied with a look of sadness in his deep blue eyes.\n\n\"I'm so sorry they did that to her. It seems like we have both suffered the loss of loved ones, and been left to fend for ourselves,\" Aurora remarked as she gently caressed his tail.\n\n\"I miss her, but dragons are tough, and we are taught to move on and not to dwell on the past. Regret is like a poison, draining the life out of a dragon's happiness,\" Paragon said as he glanced at Aurora for a moment.\n\n\"How long were you two together?\"\n\n\"Five years. She lived in the hills to the east, and she came to Castle Crag to select a male to pair with. When she met me, she liked my coloration, and even though I was not the most ferocious or outgoing dragon, she picked me to be her mate.\"\n\n\"Were all of the other female dragons in Castle Crag already taken?\" Aurora asked.\n\n\"No, but dragons from different clans often cross-breed in order to keep the blood-lines strong.\"\n\n\"Did you and Silverwing have any offspring?\" Aurora asked.\n\n\"We didn't, but I'm sure we would have at some point.\"\n\n\"Do dragons only mate when they're trying to conceive?\" Aurora asked.\n\n\"No, we're passionate creatures,\" Paragon replied as he looked away for a moment.\n\n\"I'm sorry, I didn't mean to make you uncomfortable. I seem to lack many of the refinements of my kin, a result of being raised by degenerates,\" Aurora apologized.\n\n\"It's alright, dragons don't normally share their feelings or intimate details about their lives with each other. Soft emotions are considered to be a sign of weakness in my culture,\" Paragon revealed.\n\n\"Then I am honored that you trust me enough to share what you have. I promise that I will never betray your trust, or think that you are weak because of the personal things you tell me about yourself. I know you can be ferocious and I have seen your wrath first hand. I also know you are compassionate and caring, and I believe you have a kind soul despite your reluctance to show it,\" Aurora remarked.\n\n\"Am I that easy to read?\" Paragon asked.\n\n\"Yes, but only because I feel deeply connected to you.\"\n\n\"I must admit that I like having someone I can trust, and talk to, but we are taught to be very careful with our words. If one dragon insults another, or says something offensive, it will end in a fight. That's how we normally resolve our problems and our differences,\" Paragon admitted.\n\n\"Then I will watch what I say and do in your presence,\" Aurora replied.\n\n\"I am sorry, it wasn't meant to be a warning, quite the opposite. I was trying to explain why I am a bit reserved with my words. I don't know all the rules of your culture and I fear that I might do or say something that would offend you,\" Paragon admitted.\n\n\"I am not easily offended, and I will never fault you for being open and honest with me. Since I am your guest, I think you should tell me the rules of your culture, and I will endeavor to follow those,\" Aurora suggested.\n\n\"That might be hard to do,\" Paragon chuckled.\n\n\"Are the rules that difficult to follow?\" Aurora asked.\n\n\"In our culture it is frowned upon for a dragon to befriend a human, but if we do, we are not allowed to share any specific details about our society or our lives with them. Humans are never allowed in our dens, and it's absolutely forbidden for a human and a dragon to co-habitate. I think it would be best if I follow your rules since I am clearly incapable of following mine,\" Paragon admitted.\n\n\"Actually, it sounds like the rules of your culture and mine are pretty much the same. We are taught to fear dragons, so obviously we would never befriend one, and anything else would be unheard of and also strictly forbidden. So, it would appear that I am also incapable of following the rules. Perhaps it would be best if we just followed out instincts, and leave the rules for those who need them,\" Aurora suggested.\n\n\"What happens if our instincts lead us in two different directions?\" Paragon asked.\n\n\"You have already told me that dragons do not let regret hold them back, so it would seem that you have nothing to lose,\" Aurora said with an innocent smile.\n\n\"You're trouble, you know that, right?\" Paragon said in a friendly tone.\n\nNot long after the first snow melted, the weather turned colder and Paragon knew that winter had finally come. Aurora showed no signs of wanting to leave, but he felt like he should make sure she was still happy staying with him.\n\n\"Aurora, I was thinking that you could stay here through the winter if you wanted too. I don't think anyone will bother us until the spring, and even then, the odds are very low since my kin rarely ever visit,\" Paragon said as he gazed her.\n\n\"I would love to stay, are you sure I'm not intruding?\"\n\n\"Not at all, I enjoy having you here,\" Paragon admitted.\n\n\"When was the last time you saw any of your kin?\" Aurora asked.\n\n\"It's been a number of years,\" Paragon replied.\n\n\"Why are you the only dragon that lives in the Windstone Mountains? There seems to be plenty of game, and there are other caves nearby.\"\n\n\"This range of mountains is on the bottom edge of our territory, and my kin prefer to stay near Castle Crag which is our traditional home. The entire northern realm is dotted with small clans of dragons, but the south has none. We left that area when the first humans settled on the island. Since Windstone sits between the two realms, it is not considered a desirable area since it is sometimes encroached upon by the humans,\" Paragon admitted.\n\n\"So why did you choose to live down here when it's so far form your kin?\"\n\n\"I never really fit in,\" Paragon replied.\n\n\"Will you ever go back and try and find another mate?\" Aurora asked.\n\n\"I see no reason to leave,\" he said as he gazed at her fondly. Aurora could tell he was fond of her. Even though he wouldn't admit it, he did other things that revealed his true feelings. If she didn't go over and lay next to him at night, he would snort and sigh as if something was wrong until she joined him. She also noticed that he always slept with his tail curled around his body, but if she wasn't lying beside him, his tail was always left uncurled as if he was waiting for her. Another clue that he liked her more than he was letting on, was that every time she was bathing in the hot spring, he would take little peeks at her when he thought she wasn't looking. If she caught him, he would pretend he was staring at something else in that pool before looking away. After a while, it became a game, she would try and get him to look, and he would try and not get caught doing so.\n\nOne morning while Aurora was rubbing his tail, she noticed a look that she had not seen before. It was tender and loving, but there was also a hint of desire in his majestic eyes.\n\n\"Paragon, it's boring in the hot spring all by myself. I want you to come swimming with me,\" Aurora offered.\n\n\"I probably shouldn't,\" Paragon replied as he felt his instincts stirring.\n\n\"Oh, come on, I promise I won't bite,\" she joked as she gently ran her hand along the edge of his muzzle. Her soft touch made his heart race for a moment.\n\n\"Are you sure? I don't want to invade your privacy.\"\n\n\"If you're holding back on my account, you don't need to,\" Aurora insisted. Paragon wasn't sure how to respond, but he followed her down to the edge of the water since she seemed intent on having him swim with her.\n\n\"I can stay covered-up if you prefer, but it's a lot harder for me to swim in my clothes,\" Aurora said as she waited to undress.\n\n\"I'm concerned that I might bump into you since I am not a graceful swimmer, and I don't want to offend you,\" he replied.\n\n\"I would not be offended by your touch, accidental or otherwise,\" Aurora said with an innocent smile as she slowly undressed and then waded out into the water. Paragon could feel his heart race for a moment as the line separating their friendship from something more blurred. He knew she liked him, and she was always very affectionate towards him, but this was the first time she hinted that she wanted more.\n\n\"The water feels nice,\" Aurora remarked as she waited for him to wade out to her.\n\n\"I'm glad you like the hot spring,\" Paragon replied as he gently nudged her with his muzzle to push her through the water.\n\n\"Do all Fire Dragons like the water as much as you do?\" she asked as she floated along.\n\n\"No, I'm one of the only ones that plays in the water,\" Paragon admitted as he splashed her with his tail when she wasn't looking.\n\n\"See, this is a lot more fun now that you're with me,\" Aurora remarked as she splashed him back before disappearing into the depths. A few seconds later Paragon felt her grab his tail, and he lifted it part of the way out of the water along with Aurora.\n\n\"It's all muscle,\" she remarked before letting go of him.\n\n\"Fire Dragons are light and strong so we can fly great distances,\" Paragon remarked.\n\n\"Would you let me ride around on your back for a few minutes?\" she asked.\n\n\"Sure, just grab the edge of my wing and pull yourself up,\" Paragon replied as he tilted on his side to make it easier for her to get on him. Once she was firmly seated, he swam around the hot spring, dipping and swirling as she clung to him. When he heard her laughing, it filled his heart with joy, and it was the happiest he had felt in as long as he could remember.\n\n\"Thank you,\" Aurora said as she slid down his tail as if it was a water slide.\n\n\"Is that all you wanted?\" he asked when she floated past him on her back.\n\n\"For now,\" she replied. Paragon couldn't help but notice her alluring form, and he headed into the shallows so he could bask, and continue to watch her.\n\n\"Are you done swimming?\" Aurora questioned when she noticed him lounging near the edge of the hot spring.\n\n\"I am, but you don't need to stop on my account,\" he replied.\n\n\"Would it be okay if I came over and soaked with you?\"\n\n\"Absolutely not! This is my spot, you have to find your own!\" Paragon joked, as he uncurled his tail to make room for her.\n\n\"Someone is in a playful mood,\" Aurora remarked as she swam up to him.\n\n\"I wasn't sure if I should tease you or not, but since you wouldn't stop splashing me and yanking my tail, I thought it would be alright.\"\n\n\"Of course you can tease me. I like it when you let your guard down and have a little fun,\" Aurora said as she leaned her back up against his side.\n\n\"Aurora, I hope you know how much I like having you here. I had no idea that a human could make such a great companion,\" Paragon said as he gently caressed her side with the tip of his tail.\n\n\"I love spending time with you,\" Aurora replied as she gently rubbed his tail.\n\n\"I wish there was more I could do to make you happy.\"\n\n\"I am perfectly happy just spending time with you. I am curious about one thing though.\"\n\n\"What is that?\" Paragon replied, hoping he hadn't done something wrong.\n\n\"When I sleep next to you, or rub your tail, you seem to really enjoy it. In my culture that is a form of intimacy that is a few levels past a simple friendship. Are dragons affectionate like that with their friends, or are we more than that?\" Aurora asked. Paragon could feel his heart pounding in his chest, he knew what she was asking, and she deserved the truth.\n\n\"Dragons are only affectionate when they have bonded with another,\" Paragon admitted after a long pause.\n\n\"Did you know that sometimes while you are sleeping, you gently nibble and lick the back of my neck,\" Aurora revealed as she gazed at him affectionately.\n\n\"I was probably dreaming about that savory deer you cooked for me,\" Paragon said, knowing full well it was her affection that he was craving in his sleep.\n\n\"If I was a dragon, would you be attracted to me?\" Aurora asked. Paragon could feel his heart racing again as he searched for an answer that he would not be ashamed of.\n\n\"If you were a dragon, it wouldn't change how I feel about you at all,\" Paragon admitted. Aurora smiled and then moved her hand onto his side so she could caress him.\n\n\"Are you ticklish?\" she asked when he recoiled slightly at her touch.\n\n\"A little bit,\" he remarked.\n\n\"What about down here?\" she asked after moving her hand lower so she could feel the softer scales near his rear legs.\n\n\"That's a sensitive area, especially further down,\" he cautioned.\n\n\"Does my touch offend you,\" she asked as she ran her hand back and forth along his underside.\n\n\"No, I like it,\" he replied as he gazed at her fondly. When she paused for a second so she could move closer to his rear legs, he nudged her with his muzzle.\n\n\"Does that mean you want me to continue rubbing you?\" she asked in a tender voice, knowing full well what he wanted.\n\n\"If you don't mind, it feels so good,\" he replied as he relaxed his legs so she could rub lower down if she wanted to. It was a subtle gesture, but she knew he was offering himself to her. As she continued to run her hands over his soft scales, he laid his head down and closed his eyes. She could tell he found her touch mesmerizing and she slowly moved her hand lower down until she was rubbing the area alongside his sheath. When he didn't object, she placed her hand on it, and started to massage it. Paragon lifted his head in response to her arousing touch, but he made no effort to stop her.\n\n\"Is it forbidden for me to touch you there?\" she asked while continuing to gently caress him.\n\n\"It is,\" Paragon replied as his sheath started to firm with desire.\n\n\"Would you like me to stop?\"\n\n\"No,\" he replied, as he laid his head back down and closed his eyes. Aurora could tell he was getting aroused and she continued to rub him, secretly filling her own desire to pleasure him. It was a fantasy born out of love, and the hunger to feel his passion. She wanted him to bond with her not only spiritually but physically as well. When her touch revealed his offering, she was enthralled by how it looked and felt. It was an alluring sight, and well proportioned for what she had in mind. As she ran her fingers down it, she loved how it felt in her hand. The tip was tapered so it could gently open a female's tender flower, giving it time to accept the offering. Just below it, the phallus was covered in rows of alluring ridges that increased in size the further down her hand went. Each ridge seemed to be designed to pleasure the female and the thought of them pressing into her ignited her imagination, and desires.",
        "\"Is it forbidden for me to kiss you?\" Aurora asked in a soft voice while admiring his handsome prize.\n\n\"Yes, but I want you to do it anyway,\" he replied as he moved his head towards her, expecting to feel her gentle embrace against his muzzle. A moment later he groaned when he felt her soft lips slowly glide over the tip of his tender offering. Then he felt her slowly draw him in as her tongue gently caressed every contour along the way.\n\n\"Does that feel good?\" she asked, pausing for moment to make sure he didn't object to what she was doing.\n\n\"You have no idea... but you have to stop when I start to quiver,\" Paragon warned as he tried not to lose control at the very thought of her warm caress. Aurora nodded and then started kissing him again, slowly pulling him in and out with her lips over and over. Within a few minutes she felt him start to quiver and when he tried to pull back so as not to offend her, she refused to let him go. After he was finished, she gently lifted her head and gazed into his deep blue eyes.\n\n\"How did that feel?\" she asked with a tender look.\n\n\"It was unbelievable. I'm sorry I couldn't hold back, but it felt so good I couldn't stop it,\" Paragon admitted.\n\n\"It's fine, it wasn't bitter or unpleasant in any why. In fact, it actually made my tongue tingle,\" Aurora replied.\n\n\"Really?\"\n\n\"Yeah, it was stimulating, and I enjoyed it. You are a bold and powerful creature, and when I feel your passion, it enhances my own.\"\n\n\"I want you too feel good, what can I do for you,\" Paragon asked.\n\n\"When dragons mate, how many times can the male please the female?\" Aurora asked when she noticed he was not subsiding.\n\n\"Several times,\" Paragon replied.\n\n\"Would you let me get on top of you?\" Aurora asked, hoping her request wouldn't seem to presumptuous or daring.\n\n\"Of course, you can do whatever you want to me,\" Paragon replied as he rolled on his back for her. Then he laid his head down and closed his eyes as she got into position.\n\nAurora paused for a moment as her heart raced in anticipation of finally being able to feel him inside her. She had fantasized about it for so long, that even the thought of what she was about to do made her loins quiver at the thought of welcoming him in. When the desire to feel him overwhelmed her, she lowered herself down until she felt his soft smooth tip gently glide into her. The sensation was so arousing that she let out a soft cry of ecstasy, and then another when the first few ridges brushed against her tender spot. It felt so amazing that she took her time so she could savor every inch of his precious offering. When she felt the last ridge press into her blossom, she felt like their two souls become one. It was a euphoric sensation that surpassed anything she had ever felt before. It was as if he was made for her, spiritually and physically.\n\n\"Do you like how that feels?\" Aurora asked when she felt him swelling inside her.\n\n\"Yes,\" he replied as he started to quiver. Aurora smiled and then started to gently rise and fall, timing her movement so that the alluring ridges rippled in and out of her at an ever increasing pace. It was the most pleasurable sensation that she had ever felt, and she couldn't stop herself from satisfying her desire. When Paragon felt her flower start to tremble, he thrust his midsection up between her legs, causing her to cry out in ecstasy as he released his passion inside her. When Aurora felt the throbbing subside, she laid her head against his chest and listened to his thundering heartbeat. After a few minutes she realized he was still firm with desire, and she started riding him again. She had waited so long to feel his passion, that she wasn't about to stop as long as he was willing to let her keep going. As the erotic sensation continued to build, his release found its way to her most tender spot and she cried out unexpectedly, overcome by the most powerful orgasm she had ever felt. Her flower tingled with delight, and she didn't even realize he was erupting inside her over and over again, his groans of pleasure masked by her own cries of passion. The sensation was so intense that she had to stop and catch her breath.\n\n\"Paragon, that was unbelievable,\" Aurora said she gently rose off of him.\n\n\"I'm so happy you felt good,\" Paragon replied.\n\n\"It was better than I could have ever imagined,\" Aurora admitted as she relaxed in the hot spring next to him. Paragon looked at her with his big blue eyes and then nuzzled her gently.\n\n\"Thank you, I can't believe how amazing it felt, your warmth made me lose all control,\" Paragon admitted as he tried to hide his desire for more.\n\n\"If you are willing, I would like you to mate with me as if I was a dragon,\" Aurora said as she gently caressed him.\n\n\"There is no need for you to do that, I am completely satisfied with what we have already done,\" Paragon remarked.\n\n\"I want to feel the passion that is shared between two dragons. Just do whatever you would if I was your mate, and I'll tell you if it gets too rough,\" Aurora said as she swam to the edge of the hot spring and then presented herself to him.\n\n\"Are you sure?\" Paragon asked while gazing at her voluptuous curves.\n\n\"Yes, it is one of my fantasies,\" Aurora replied with a submissive look.\n\n\"Males have to entice the female with a little tenderness before they can mate with them,\" Paragon revealed.\n\n\"That sounds exciting, do that,\" Aurora insisted as she felt her heart race, enthralled by the unknown. Paragon got out of the water and then lowered his head so he could lick her inner thigh. Aurora closed her eyes as his tender caress made her blossom flush with desire, turning it a warm pink color. When Paragon saw that she was receptive to his advances, he started licking the area next to her flower, allowing his tongue to swirl around the opening in long gentle strokes. Each tender lick made her tingle with desire and she secretly wanted him to delve into her.\n\n\"Paragon, stop teasing me,\" she pleaded, but he pretended not to hear her. When she started to push back towards him, he allowed his tongue to glide back and forth over the opening, without going inside. Aurora became increasingly anxious, and when her flower started to drip with nectar, he pressed his long powerful tongue into her. Her cries of delight echoed throughout the cave as he explored every delicate fold of her tender offering. When he felt her muscles start to tighten, he pulled his tongue back and then focused all of his attention on a little spot near the edge of her flower that made her quiver the most. Within minutes she cried out in ecstasy, and he quickly moved into position to mount her. When she realized he was about delve into her delicate flower, she reached up with her hand and redirected his intentions towards her most tightly guarded opening.\n\n\"Are you sure?\" he asked as he swelled with at the very thought of her offer.\n\n\"Yes, I want you to fill my every desire,\" Aurora said as she coaxed him in. The pleasure of her tight offering was so intense that he had to pause several times so he would have the chance to fully enjoy her.\n\n\"It feels good, keep going,\" Aurora insisted as she looked back at him with a tender smile. Paragon nodded and then slowly pressed deeper into her until he felt the warmth of her soft curves against his underside. Then he slowly withdrew so he could plunge into her again. When he heard Aurora moaning, his instincts took over, and he bit down on the back of her neck while holding her tightly with his front legs. Then he started thrusting into her with more and more force. In response to his passionate hold, Aurora moaned ever louder, and her cries of passion drove him wild. When she could tell he was about to erupt, she clinched down on him and he roared in ecstasy. When Aurora felt him throbbing deep inside her, she reached up between his legs and squeezed his quivering orbs. Paragon buckled under the pleasure of her touch, releasing everything he had in one final burst of unbridled passion.\n\n\"Did you feel good?\" she asked as she looked up at him with a glow in her eyes.\n\n\"I have never felt such intense pleasure, what did you do to me?\" Paragon asked as he continued to press tightly against her, reluctant to let go.\n\n\"Nothing,\" Aurora replied innocently.\n\n\"I never even knew it could feel so good,\" Paragon admitted as he slowly withdrew from her.\n\n\"I'm glad you enjoyed it.\"\n\n\"Nothing could describe how amazing it felt. I just hope I didn't hurt you?\" Paragon said as he eyed the teeth marks on the back her neck.\n\n\"It was exactly what I wanted. Sometimes a little pain enhances the pleasure, and when you let your raw animal instincts take over, I had another orgasm,\" Aurora admitted with a look of contentment and delight.\n\n\"Thank you for letting me mate with you,\" Paragon said as he gazed at her fondly.\n\n\"Paragon, you are such a magnificent creature, I wanted us to be able to share everything with each other,\" Aurora remarked as she gently caressed his muzzle.\n\n\"I'm glad we did,\" Paragon replied as he curled his tail around her.\n\n\"Then you are not upset that I came here and seduced you?\" Aurora smiled.\n\n\"Not at all. I am sorry if I was hesitant at first, but I had never had feelings for a human before, and I knew it was forbidden. Once I realized that we were connected to each other, I took your advice and followed my instincts instead of the rules. I hope you know that you are all that matters to me, and I have fallen in love with you,\" Paragon said as he gently nuzzled her.\n\n\"I love you too Paragon. I always have, and I always will. Even if we weren't able to share our love with one another physically, I would have been perfectly happy living here as your companion and friend. The fact that we can be intimate only proves we are truly meant to be together.\"\n\n\"I think so too,\" Paragon replied. \"If you close your eyes and wait here for a moment, I have something I want to give you.\"\n\n\"Okay,\" Aurora replied, as she tried to imagine what it could possibly be.\n\n\"Alright, you can open your eyes,\" Paragon said as he handed her the dragon doll.\n\n\"Oh my gosh, you kept it for all this time!\" Aurora remarked as she cuddled it in her arms.\n\n\"I couldn't let it go once I realized you gave it to me out of the kindness of your heart.\"\n\n\"I was hoping it help you remember me, but I never thought I would see it again,\" Aurora exclaimed.\n\n\"It not only reminded me of you every time I saw it, but it also convinced me that you and I were connected to each other,\" Paragon admitted as he tickled her side with the tip of his tail.\n\n\"You are so wonderful, I feel like my dreams have come true,\" Aurora remarked.\n\n\"I know that we have been cast into two different forms, but we are so perfectly matched in every other way, would you consider being my mate, and stay here with me forever?\" Paragon asked has he gazed at her tenderly.\n\n\"That's all I have ever wanted,\" Aurora replied as she wrapped her arms around his neck and held him with all her might. When Paragon felt a few stray tears on his side, he knew the bond between them was complete.\n\n**** The End ****\n\nHope you all liked the story as much as I loved writing it. As always, please feel free to vote. I, as an Author, love seeing the ratings and comments from you, the reader, Especially if you've enjoyed the story.\n\nIf you'd like an email notifying you when I post a new story online then drop me a message through the contact form and I'll let you know. And thanks for reading.\n\nAnd it only takes a click to vote, so why not!!\n\nThank You. \n\nParker92."
    ],
    "authorname": "Parker92",
    "tags": [
        "womsn",
        "fire dragon",
        "voyeurism",
        "dragon"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/love-can-conquer-all-even-a-dragon"
}