{
    "title": "A Tutor for Samuel",
    "pages": [
        "Sam Morrison stood next to his bed, examining the clothes he had set out. His travel bag, bought just for this trip and giving off a strong smell of new leather, was open on the floor and ready to be stuffed full.\n\n\"Then to the airport and after that Fort Lauderdale is going to catch hell,\" he said under his breath, mouth splitting into a feral grin.\n\nThe cellphone in his pocket buzzed, and he whipped it out, chuckling at the message from his friends. They were just as excited as he was to get this spring break off to a suitably wild and crazy start.\n\nHe paused to consider his reply when a loud voice from the other room made him wince.\n\n\"Samuel Morrison! Get your ass in here!\"\n\nSam slipped the phone back into this pocket and hurried out the door. No one kept Thomas Morrison waiting if they valued their skin. \n\nThe door to his dad's study was open, Thomas Morrison Sr. seated at his wide oak desk with an unhappy expression plastered to his well-lined face.\n\n\"Hey, Dad. You called?\"\n\n\"Step in here, Sam. Close the door.\"\n\nSam's felt a sinking feeling in the pit of his stomach and did as he was told.\n\nThe elder Morrison was wearing a pair of thick-rimmed glasses, and he slipped them off, fixing his son with a stare reminiscent of an old buzzard contemplating a decaying carcass. Sam couldn't meet his father's gaze and instead began a very detailed examination of his shoelaces.\n\n\"Did you think I wouldn't find out, and you could just slip away unnoticed?\"\n\n\"I'm not sure what you're talking about, Dad,\" lied Sam, knowing he was merely delaying the inevitable and likely making things even worse by pretending ignorance.\n\n\"Right. What do you say we cut the crap and put our cards on the table, Sam? I just got off the phone with the fine folks over at Hampton College. Care to hazard a guess at the topic of conversation?\"\n\n\"My grades?\" opined Sam quietly.\n\n\"Your grades. Didn't have to think about it for very long, did you? Yes, Sam. Your grades.\"\n\nHis dad slid back the chair he was sitting in and rose to his somewhat intimidating six-foot-four-inch-height towering over his son, who was four inches short of that mark.\n\n\"When were you going to mention you were failing Astronomy?\"\n\n\"I was hoping to bring my grade up in the time before finals and put things over the top with a good score on the test,\" said Sam.\n\n\"Over the top? From what I'm told, you can barely see the bar.\"\n\n\"It will be okay. As soon as I get back from Fort Lauderdale, I'll knuckle down and get my grade up.\"\n\n\"I know as a business major; you don't put much stock in the sciences, Son, but everybody has to take one as a prerequisite. Why didn't you pick something simple? A general science class would have been fine.\"\n\n\"I thought Astronomy was going to be simple! You know. Look at stars through a telescope. Sit in the planetarium and gaze at a bunch of colorful slides while they talk about eclipses or something.\"\n\n\"Clearly, you had no idea what you were getting into.\"\n\n\"Yeah. I guess not. It was way more math oriented than I was anticipating. It was also a lot more boring,\" admitted Sam.\n\n\"Boring or not, you can't afford to fail if you want to transfer to Whitmore next year.\"\n\nWhitmore...If Sam had to hear one more time about his Dad's prestigious alma mater, he would throw up. Sam's high school grades had been good, but not good enough to get him into the school his father valued most. Instead, he had applied and been accepted at Hampton. Sure, it was a big step down from Whitmore in the collegiate pecking order, and it had a reputation as a \"party school,\" something his dad had frowned at, but he had met some cool people there and was enjoying the more relaxed atmosphere. The plan his dad had accepted was that Sam would go there for a year to get his basic courses out of the way and build up his transcript with positive grades, then try again at Whitmore the following year. Sam's grades were good, and he had been doing pretty well at Hampton until this little science debacle.\n\n\"As I said, Dad. I'll throw myself full tilt into Astronomy when I get back.\"\n\n\"Back? You only have eight weeks to turn things around, and given where you're starting from. You need to begin sooner rather than later.\"\n\n\"What are you saying?\"\n\n\"I'm saying you can forget Fort Lauderdale. Your spring break is off, Son.\"\n\n\"Dad! You can't do this all my friends are going! We've been planning this for weeks!\"\n\n\"If you had worked as hard at astronomy as you did planning a week of debauchery in Florida, you'd still be going I'll wager.\"\n\n\"Please, Dad! I promise I'll kick this thing in the ass when I get back, but don't take this from me!\"\n\nThomas shook his head, \"I'm sorry, Kid, but you'll thank me one day for keeping you focused on your education. This time in your life is more important than you realize. You can't afford to waste it.\"\n\n\"I can't fucking believe this!\"\n\n\"Watch your tone with me, young man!\" snapped his dad, cowing Sam instantly. \n\nThomas Morrison was not known for his patience, and the last thing you wanted to do was bring out his temper, which was even worse.\n\n\"Look,\" said his dad, softening his voice a little, \"I know you're disappointed, but if you turn this thing around now, we could look at a trip for you this summer. Naples, maybe?\"\n\nSam nodded grudgingly, admitting to himself that a European trip would beat Fort Lauderdale.\n\n\"I've got some good news for you. I found a tutor to help you with your studies.\"\n\n\"A tutor?\" echoed Sam incredulously.\n\n\"Yep, and even better, you won't have to go very far to avail yourself of their expertise. They live right behind us.\"\n\nSam wrinkled his brow, \"Miss Siler? You hired our neighbor to tutor me?\"\n\n\"Sure. She came cheap, and she's been an amateur astronomer since she was a teen, as well as having a degree in Astrophysics from Whitmore. I can't think of anyone more qualified.\"\n\n\"The Frump?\" he said in disbelief.\n\n\"I never cared for that nickname,\" said Thomas grumpily. \n\nFrumpy Miss Siler, that's what the neighborhood kids had called her for years in honor of the shapeless t-shirts and jeans she usually wore. Sam and his family had known her since she moved into the single-story house behind them nine years earlier. Linda Siler had been friendly if a little shy, and Sam had seen her off and on usually sitting in a chair at night in front of a big white telescope. The twelve-inch monster had fascinated him when he was a kid, and she had invited him over on occasion to look at the moon and the planets. The novelty had eventually worn off, and Sam hadn't actively spoken to her in years.\n\n\"You start this evening. Be there promptly at eight, and don't keep Miss Siler waiting,\" instructed his father.\n\nSam could tell he was being dismissed, and he backed toward the door, trying to hide the scowl that threatened to break out all over his face. He shut the door behind him as he left, flipping the bird at where he imagined his father to be on the other side.\n\n\"I can't believe this, no spring break, and now consigned to studying at the feet of my weird next-door neighbor! Just wonderful...\"\n\nThe bad news traveled fast once he had texted his friends, and Sam was soon receiving condolence messages and even a few calls. The worst moment had come when Jennifer Masterson had called him. He had met the tall, leggy-blond in his economics class and had been looking forward to seeing her in a bikini on the beach. \n\n\"I heard you're not going to be coming out to Fort Lauderdale for spring break,\" she said, sounding disappointed.\n\n\"Yeah. My dad won't let me go because of this bullshit astronomy class I'm currently failing.\"\n\n\"Wow, that sucks. I was looking forward to seeing you. I bought this new bikini just for the trip.\"\n\nSam groaned at the thought of missing Jennifer modeling it for him. Given her banging body with its firm breasts and tight ass, he could only imagine how hot she would have looked in that outfit.\n\n\"Sorry...maybe next time,\" said Sam, sadly.\n\nAfter she hung up, he nearly tossed his cellphone across the room but held back, knowing his dad wouldn't get him another if he willfully destroyed this one. Taking out his frustrations amounted to yelling into his pillow, which wasn't nearly as satisfying. \n\nIn the end, there was nothing for it but to suck it up and do as he was told, so after a dinner alone with his dad that was mostly absent of conversation, Sam took a shower and got ready to go. \n\nThe steam drifted around his bathroom while he cleaned the fog from the mirror with a towel. Sam's blond hair was slicked back on his head, still damp after exiting the powerful jets that had lashed his young body clean. An interesting mix of his mother and father, Sam had the broad-shoulders and athletic build of the latter combined with the swarthy skin and dark features more prevalent in his mother. His hair was the same color as the senior Morrison, but he had dark eyebrows and even darker eyes, a deep shade of brown. Quickly brushing the water from his hairy chest and shivering a bit in the cooler air, Sam shaved and went to dress.\n\nIn the past, his mother would often have put out things for him to wear, but her death from cancer when he was still in high school had put an end to that. Now, he was on his own, but generally speaking, he had a good eye for fashion and rarely embarrassed himself. He choose an outfit that would be comfortable in the crisp night air if Miss Siler decided that she wanted to show him the sky while being suitable for lounging if they remained indoors. The cotton slacks clung nicely to his tight rear-end, one that more than a few women had whistled at in the past. A splash of cologne completed the process, and Sam was on his way.\n\nHe could have just jumped the fence, but that hardly seemed like the right way to start a professional relationship, so instead, he took a leisurely walk around the block stopping in front of 3434 Wallace Street. A knock on the door brought the sounds of someone scurrying around inside like Sam had kicked the cage of a sleeping hamster. When the door swung back, he did his level-headed best not to laugh.\n\nLinda Siler was standing before him in her usual outfit, a t-shirt that looked three sizes too big for her, cotton sweat pants, and tennis shoes. Tonight, she also had on a pair of glasses with rims so wide they gave her eyes the appearance of a surprised barn owl. Her brown hair was pulled back into a makeshift pony-tail held together with a rubber band while her unadorned face was pale and washed out from lack of time spent in the sun.\n\n\"Oh! Samuel! Is it time already? Sorry, I dozed off in my reading chair,\" she said hastily.\n\nThe older woman stepped back from the door to allow him entrance, and Sam went inside, looking around.\n\nHe had always thought that women were supposed to be the more organized and meticulous ones, but Miss Siler seemed to be bucking that trend. The inside of her house looked like a library that had been hit by an earthquake with stacks of books in every available corner as well as scattered randomly around the room. There were bookcases along several walls, but the shelves were crammed full with books sitting sideways on top of the rows of more organized ones and loose papers shoved in between. There were several telescopes of various lengths and sizes standing near the sliding glass doors leading to the back yard with another one disassembled on what he assumed was her dining room table. As he walked further into the space with Miss Siler on his heels, he caught glimpses of other rooms that appeared to be just as buried in books as her living room.\n\n\"You do realize you can get most books on Kindle, right?\" he asked, amused.\n\n\"Kindle? Huh...well, I'm more comfortable holding a book in my hands. Besides, many of these volumes are very old and very hard to find.\"\n\nSam picked one up from her coffee table that sat in front of an antique-looking couch, \"'The Universe as We Know It' by Harmon Bradfield.\"\n\nThe inside of the cover showed a publication date of 1936.\n\n\"I'm guessing they didn't know the Universe too well back then,\" he commented.\n\nLinda took the book from his hand, frowning slightly and putting it back down, \"To understand where you are, it helps to know where you came from.\"\n\nSam shook his head, not quite understanding.\n\n\"Why don't you have a seat, Samuel, and we can talk about how I can help you. Just...move that stuff aside.\"\n\nHe shifted a stack of notebooks from one cushion on the couch and sat down.\n\n\"You can call me Sam, Miss Siler. You use to when I was a kid.\"\n\n\"Oh, yes, that's right. I haven't seen you much since you started high school. You looked so grown up now I just thought your full name might sit better on you. In any case, since we are going to be spending so much time together, why don't you just call me Linda.\"\n\n\"Linda,\" he echoed, turning the name over in his mouth and trying it out. It felt a bit strange to address her that way, but then again, they were embarking on a new journey.\n\nShe had settled into a chair across from him, removing her glasses and setting them on and end table next to her arm. \n\n\"I just use them for reading. I'm not that old yet!\" she joked.\n\nSam had heard his parents talking about Linda Siler when she moved in nine years before, and he knew that she had been twenty-eight then and recently divorced, so doing the math she was no more than thirty-seven now even if her mode of dress made her appear far older. She blinked at him as her eyes adjusted, and he noted that those same eyes were a very pleasing shade of green. It was about the only attractive thing he had noticed about her so far.\n\n\"So. Your father tells me you're struggling with your basic astronomy course. Which part exactly? Wien's Displacement Law? The Tully-Fisher Relation? The Stefan-Boltzman Constant?\"\n\nSam looked embarrassed and shifted on the couch.\n\n\"Pretty much the part in my textbook after, 'Welcome to Astronomy 101.'\"\n\n\"I see. Why don't you tell me what you did cover that you feel reasonably confident you understood, so I know where to start. I'm guessing you covered Kepler's laws of motion and their relation to Newton's?\"\n\n\"Yeah, sort of, I might have missed some classes,\" he admitted. \n\nThis was an understatement. Sam had found the course so dull he had ducked out on more than one occasion to hang with his friends.\n\n\"Missed some classes? Were you sick or something?\" she asked in a tone that said she couldn't imagine why anyone would ever willing miss an opportunity to study astronomy.\n\n\"No...It was just that things could get really...well...boring.\"\n\n\"Boring! Studying the vastness of the universe and our place in it boring! Sam! How can you say that?\"\n\nSam started to answer, but she cut him off.\n\n\"Boring...There are so many fascinating things out there in the dark, Sam. Worlds that we can barely imagine that exist in solar systems so far away they are invisible to the naked eye. Planets bigger than anything in our neck of the woods, worlds so compressed by the pressures that gave birth to them they float in space as impossibly large diamonds, worlds that spin with one side in perpetual night and the other boiling in the blazing heat of its sun. Clusters of stars so dense they look like crushed ice in the eyepiece! Could you imagine living on a planet there with the starfield so packed in the sky you would never know a real night time?\"\n\nSam sat taken aback by her sheer enthusiasm. The subject had suddenly brought Linda Siler to life, her face lighting up and becoming flushed with excitement. The light that danced in her eyes made them even more attractive, and her flushed skin showed off just how flawless it was, pale, but unblemished. It made Sam wonder how much prettier she would be if she just put in a little effort.\n\n\"I'm sorry. I didn't mean to sound like I was criticizing your passion,\" he said contritely.\n\nLinda caught herself, clearly embarrassed at her outburst, and sat back in her chair.\n\n\"Of course, astronomy isn't for everyone, but since you started yourself down this road, we just need to make sure you get to the end of it in one piece.\"\n\n\"How do we do that?\"\n\nLinda got up and went over to one of the overflowing bookshelves, choosing a volume. She returned and cleared a spot to sit next to Sam on the couch. He noted that she smelled rather lovely, like wildflowers, as she opened the weighty tome to the first page.\n\n\"We start at the beginning with an ancient astronomer named Ptolemy.\"\n\nTo his surprise, the next two hours flew by. Unlike his stuffy professors at the university, Linda Siler had a way of bringing the subject to life without putting him to sleep. They talked about the birth of astronomy and the great thinkers who had taken it from a science dominated and held back by the religious doctrines of the time to one that forced the truths of the universe on an unsuspecting world. \n\n\"Heck, the observations of many of these early explorers were done without telescopes since those weren't invented until Galileo came along. Can you imagine trying to work out the intricacies of orbital mechanics with nothing but your eyes?\"\n\n\"It's s good thing they did invent telescopes, or you would have nothing to decorate your house with,\" observed Sam laughing.\n\nLinda blushed but took the ribbing good-naturedly laughing along with him.\n\n\"I remember you being quite fascinated with the view through my telescopes. It's been a while since you jumped the fence to look.\"\n\n\"I guess I got side-tracked on other things.\"\n\n\"I was a teenager once. I know how things are in high school and college.\"\n\nSam tried to picture Linda at a party drinking and dancing with the crowd and failed miserably.\n\n\"I think we've studied enough. It's a quarter moon out tonight. The view along the terminator should be spectacular.\"\n\nHe wasn't entirely sure what she was talking about. He thought \"The Terminator\" was a movie about a killer robot, but he followed her out into the backyard anyway.\n\nAs a boy, he had spent a few nights out here, and things hadn't changed much in the intervening years. Linda's backyard was made up of a short wood deck that ended in some stairs which dropped you down onto the grassy lawn. One of her telescopes, a big one nearly as tall as she was perhaps five-foot-six-inches or more, stood on a thick base in the middle of the yard. They descended the stairs, Linda wobbling when the railing shook loosely in her grip. Sam steadied her feeling a surprisingly muscular arm through all that loose t-shirt material.\n\n\"Easy there!\" he said.\n\n\"Sorry. This old deck has seen better days. I keep meaning to call a carpenter to fix the railing.\"\n\nLinda led Sam over to the large telescope, removing the cover from the tube and adjusting it to point toward the moon. In the years since he had viewed it last, Sam had forgotten how bright the moon looked even with a filter in place to dampen the effect. The telescope was zoomed in on a series of craters right along the line where the sunlight met the shadows, giving a gorgeous contrast to the landscape and making the craters leap out at you as if they were in three-dimensions.\n\n\"Wow! That is something...\" said Sam in awe.\n\n\"My turn! Don't hog the scope!\" said Linda with a chuckle.\n\nWhen she went to step past him, Sam brushed up against her. His chest was like a solid wall, and she put out a hand without thinking briefly feeling the rippling muscles under his shirt. She tried to smile and dismiss the moment, but a small thrill passed through her just the same. The view of the moon was incredible, but Linda had a hard time enjoying it with her mind suddenly clouded by urges she hadn't experienced in a long time.\n\n\"Get a hold of yourself! What's the matter with me? This is Sam for crying out loud,\" she thought, feeling terrible at reacting this way toward a young man she had known since he used to play ball with his friends in the backyard behind hers.",
        "\"It's getting late. I should probably head home. Thank you for doing this for me, Miss...Uh...Linda. I appreciate it.\"\n\nSam stuck out his hand, and Linda took it in hers, feeling the power of his grip. \n\nHe started to walk away but stopped at the foot of the stairs.\n\n\"You know I could fix this railing for you. My grandfather is a carpenter, and he taught me a few things.\"\n\n\"That's nice of you to offer, Sam, but...\"\n\n\"Seriously. I want to do it. I know my dad is paying you, but I would like to throw this in as my way of saying thanks for helping me.\"\n\nLinda waffled but finally nodded in agreement.\n\n\"If it means that much to you. I accept.\"\n\n\"Great! I'll pick up some wood in the morning and be by in the afternoon. See you then.\"\n\nLinda followed Sam to the front door watching as he went down the driveway and stopped to wave at the bottom. Once he had passed out of sight, she shut the door throwing the dead-bolt and leaned against the wood.\n\n\"When did that kid get so good-looking...\" \n\nAlmost as soon as the words left her mouth, she felt a wave of guilt roll over her. Linda hadn't been very socially active since her divorce. The pain of her husband's betrayal had taken a long time to abate, and even then, it had proven difficult for her to trust another man. There had been a few dates along the way, but nothing noteworthy, and after a while, she had more or less checked out, letting herself go, not bothering with makeup and dressing to impress. As time had gone by, she had almost convinced herself that she no longer cared about meeting anyone, that her life alone was fulfilling in its own way. \n\n\"I don't need a man in here messing things up,\" she had said to herself more than once.\n\nThat was before Sam Morrison had walked through her door.\n\nThe minute she had laid eyes on his handsome face, a distant ripple of the woman she used to be had past over her leaving her confused and feeling lonely for the first time in ages. \n\nShaking her head, she pulled herself away from the door and began to go through the house angrily, turning off the lights.\n\n\"Don't know what I'm thinking. I'm just fine. I don't miss having a man in my life. It never leads anywhere good!\"\n\nLinda kept telling herself that over and over while she prepared for bed, brushing her teeth, getting into her nightclothes, but even when she slipped under the covers, it was with the realization that she didn't entirely believe it anymore.\n\nThe next day, Sam showed up just like he had promised toting a toolbox and with a stack of newly cut wood over one shoulder.\n\n\"Is this a good time?\" he asked.\n\nLinda was in her usual attire, t-shirt like a tent draped over her sweat pants. This time she had let her hair down, but it fell in a shapeless mass around her face doing nothing to add to the view. She stood with a cup of soup in one hand and a large, very old book in the other.\n\n\"Sure...Come on in. I was just reading,\" she said, stepping out of his way and trying not to get clocked by the long boards as he carefully swung them through the narrow doorway.\n\n\"Don't you have a job or something?\" Sam asked.\n\n\"I teach at a private school, so I'm off this week.\"\n\n\"Lucky you...\" said Sam a little bitterly.\n\n\"I take it learning astronomy and fixing my deck isn't how you planned to spend spring break?\"\n\n\"Not really. I was supposed to be in Fort Lauderdale with my friends, but that didn't work out.\"\n\n\"I guess your dad had other plans.\"\n\nSam shrugged, \"I know it's my fault, but that doesn't make it easier to take.\"\n\n\"Would you like some soup? I can at least offer you that much.\"\n\n\"I wouldn't say no, but let me get started with the job first.\"\n\nLinda went back to the kitchen and checked her pantry for more chicken soup. It occurred to her that she hadn't been grocery shopping in a while, and she stopped to add some items to the list tacked to the refrigerator before returning to cooking. While the liquid came to a boil, she went looking for another mug to put the hot contents in when it was ready. In no time, she had Sam's lunch ready and went to the door to take it out to him. \n\nHer hand was on the latch when she froze, staring into her backyard.\n\nThe day was hot without much of a breeze, and to combat that discomforting situation, Sam had done the logical thing and stripped off his t-shirt. He stood on her back deck now naked from the waist up while he measured a piece of wood. The muscular chest she had placed a hand on the night before was now on full, impressive display, and in spite of her misgivings, Linda couldn't tear her eyes from it. A thin sheen of sweat covered and dampened his manly exterior, his chest hairs gleaming with it. Linda drew in a breath as her body reacted to a man for the first time in more years than she cared to recall. Her nipples tightened almost painfully inside her bra, and a gentle throbbing between her legs reminded her that she could do more with that spot than relieve herself. The cup shook in her hand, sloshing some of the hot contents out onto her skin.\n\n\"Shit!\" she cried, jumping back and making things worse by throwing even more of the steaming soup onto the floor.\n\nThe glass door slid aside, and Sam looked her up and down, adding to her embarrassment.\n\n\"Are you okay?\" he asked.\n\n\"Yes! I'm fine...\" she said, lowering her voice, \"I just spilled the soup, that's all.\"\n\n\"Did you burn yourself?\" he asked, concerned.\n\n\"It's nothing. I'm really alright, Sam.\" \n\n\"Let me see.\"\n\nHe came to her, taking the cup of soup and putting it on the floor before lifting her hand in his looking at the red skin where the soup had landed.\n\n\"You should put some ice on that,\" he said, tugging her toward the kitchen.\n\n\"That isn't necessary,\" said Linda, but she didn't resist as he maneuvered her back in front of the sink and got some ice from her freezer tying it in a dishtowel.\n\n\"If I had a dime for every time I burned myself as a kid,\" laughed Sam pressing the towel to the burn. \n\nLinda winced.\n\n\"Sorry,\" said Sam seeing her expression.\n\n\"Thanks...I don't think it's all that bad.\"\n\nSam moved the towel aside for another look, rubbing his fingers gently across the tender skin, noticing just how soft her hands were in the process. \n\n\"I would leave the ice on there for a bit and put some burn cream on it if you have some.\"\n\nHe looked away from her injured hand and into Linda's eyes. \n\n\"They really are a gorgeous shade of green,\" he thought while also noticing how generous her light pink lips were, so very soft looking. \n\n\"I can take over,\" she said quietly, unnerved by the intensity of his gaze, not to mention the proximity of his bare chest.\n\n\"Oh...Yeah...Right. I should get back to the railing.\"\n\nSam left her in the kitchen, and she went through her drawers looking for some cream to put on her hand before heating the remainder of the soup. This time she was cautious to keep the cup level when she carried it out to him. That, and she made sure not to stare too hard at his body lest she become distracted a second time.\n\n\"I only have two hands. Can't afford to burn them both,\" she thought as he took a sip of the steaming broth.\n\n\"Wow! This looks great. I can't believe how much you've accomplished already,\" she said, admiring how steady and robust the new railing on the stairs was now.\n\n\"It's all in the wrists,\" joked Sam.\n\n\"However you managed it. I appreciate the effort.\"\n\n\"I'm going to replace some of the boards in the stairs. They're getting pretty worn out by the weather.\"\n\n\"Okay. I'll be in the house if you need anything.\"\n\nLinda returned to her reading while Sam worked late into the afternoon finishing the repairs on her deck. He left shortly before dinner time but returned for his astronomy lesson right at eight.\n\n\"Punctual. I like that. It shows character,\" she said after letting him in.\n\n\"My mother used to say that,\" replied Sam.\n\n\"I think I may have picked it up from her,\" said Linda, but noticing the sad look on Sam's face, she quickly changed the subject.\n\n\"I think tonight we should move on to the real backbone of astronomy. The study of light.\"\n\n\"Light?\"\n\n\"All astronomy is the study of light, Sam. We can reach objects in our solar system physically, but for everything else, light is all we have to go on.\"\n\n\"I don't see how you could learn much from just looking at the light coming off an object trillions of miles away.\"\n\n\"There you would be wrong, my young apprentice. We can learn a great deal from measuring that light, from the size and mass of an object to its chemical composition, which can give us an idea of its atmosphere. Why, with the right telescope, computers, and a lot of patience, you could determine the likelihood of life on an object many thousands of light-years away.\"\n\n\"That seems like a stretch.\"\n\n\"Then let me introduce you to a man named Gustav Kirchoff and his contemporary Robert Bunsen.\"\n\n\"Bunsen like the burners in Chemistry class.\"\n\n\"Exactly.\"\n\nThey returned to the couch where they had spent the previous night, and once again, Linda kept Sam enthralled with a subject that had put him quickly to sleep in the past. Her enthusiasm was catching, and he hung on her every word as she led him through a world of discovery.\n\n\"So this guy Fraunhofer. He was the one that figured out that the light from our sun had gaps in its spectra?\"\n\n\"Emission lines. They offer us a chemical signature because all the different elements leave different gaps. Can you fetch the big green book on the top shelf in the dining room? The text is in German, but I can translate it for you.\"\n\nSam got up and went in search of the volume dodging around a stack of books near the entryway to the dining area that threatened to collapse under its weight.\n\n\"She speaks German, of course, she does,\" he whispered. \n\nHe spotted the book immediately, but even with his height, he had to stand on his toes to each it. When he yanked on it, a box that he couldn't see that was resting on top of it shifted forward and fell at his feet, jarring the lid open and spilling its contents. Sam bent over to pick up the mess, realizing the dusty box contained stacks of old photos. He chose one at random and stared at the couple in it. The woman looked vaguely familiar, and it was with a jolt of surprise that he recognized at last that he was looking at Linda Siler.\n\nIt was hard to reconcile the woman in this photo with the one sitting on the couch in the other room. Though dated only ten years before, this twenty-seven-year-old version of Linda was night and day different. In the picture, she was wearing a party dress, perhaps on her way out for a night of fun on the town. The outfit was seriously short and revealed that Linda had some very nice legs, toned and tight in her high heels. Even more shocking, her hair was combed into an attractive halo around her face, and she was wearing makeup that accentuated the beauty of her green eyes. Sam flipped through the photos, even finding one of Linda at the beach in a bikini sporting a truly sweet pair of firm looking breasts, her juicy lips painted red and smiling at the photographer.\n\n\"Damn...She could put Jennifer Masterson to shame,\" mumbled Sam.\n\n\"What are you doing?\" snapped Linda from behind him, making him drop the box back onto the floor. Her eyes grew wide when she spotted what he had been looking at, and she darted forward, scooping the whole thing against her chest.\n\n\"These are private! You shouldn't be looking at them,\" she said, almost in tears.\n\n\"I'm sorry, Linda. The box was on top of the book you wanted, and it just fell and landed open. I didn't mean to pry.\"\n\nShe was in a panic, almost hyperventilating, but slowly she calmed herself down.\n\n\"It's...It's alright. I'm sorry I yelled at you. It's just...these photos are from a long time ago, and I should have gotten rid of them. They remind me of some things I would rather forget.\"\n\nLinda left with the box clutched in her arms so tightly she was crushing it, taking it to her room. \n\nThey tried to return to the lesson, but there was a tension in the room now that distracted from their efforts. Sam kept finding himself looking over at Linda and picturing her as she had been, with her lips all ruby red and her body clad in a skin-tight dress.\n\n\"Sam? Did you not hear the question? I was asking you to restate Kirchoff's law of thermal radiation.\"\n\n\"Why do you want to get rid of those pictures? They looked like happy times in your life.\"\n\nLinda blinked at his attempt to answer her question with one of his own.\n\n\"They were, but then things changed and...I don't want to talk about this with you, Sam.\"\n\n\"Is the reason you don't want to see those pictures the same reason you quit dressing as you use to?\"\n\nLinda looked at the floor, rubbing her hands nervously together. A part of her wanted to answer him, something in his voice that made her want to trust him, but there was so much pain in those memories.\n\n\"Maybe I just decided I needed a change.\"\n\n\"Is that the real reason?\"\n\nLinda stood up and started to pace too nervous to sit still any more.\n\n\"I'm sure you probably don't remember it was so long ago. Your parents knew, but it wasn't like you were in on the conversations. I used to be married. When I moved here, I had just gotten divorced from my husband, Greg. It was a tough time for me. We married right out of college and had been happy. At least, I thought we were happy...\"\n\nShe stopped, taking a breath, not wanting to cry. There had been too much of that in the past. Months spent crying at the drop of a hat, screaming at her reflection in the mirror, trying to have conversations with people who weren't there, and couldn't have cared less if they had been.\n\n\"What happened?\" prodded Sam gently.\n\n\"I was traveling a lot back in those days working on getting a research grant. I dreamed of getting a job at a prestigious observatory or becoming the female Neal deGrasse Tyson,\" she explained, trying to diffuse the dark mood in the room with the last but coming up short.\n\n\"Anyway...It's an old story, isn't it? The wife is gone, busy, not paying attention to her husband, and he gets lonely, bored...\"\n\n\"He cheated on you?\"\n\nShe let out a harsh laugh. A desperate, angry sound made even worse by the expression of anguished disbelief on her face.\n\n\"I almost could have taken the cheating. Does that sound crazy? I could have if taken it but not with her.\"\n\n\"Her?\"\n\nLinda took another ragged breath, trying to contain her emotions about a time in her life that she had tried to bury long ago, but starting to come to grips with the fact that all she had done was hide from it.\n\n\"My sister, Gina.\"\n\n\"Jesus...Your husband cheated on you with your sister?\"\n\n\"Oh, it wasn't the first time my sister had screwed with my life. Growing up with Gina was like growing up in the shadow of a giant oak tree. Gina was always the pretty one, always the funny one that all the boys fell all over themselves to ask out. I could never compete with her, and she seemed to delight in letting me know it. When I picked a college, I tried to make sure it was one she couldn't get into. Things got better for me there. I came out of my shell, opened up, started dating without worrying that whoever I picked would meet my sister and dump me like a hot potato.\"\n\n\"You met your husband there.\"\n\nLinda nodded, \"Greg, yeah, I met Greg there, and everything was great. We hit it off, dated for two years, and in all that time, he never asked me why I kept him away from my family. I knew eventually if things stayed serious, I would have to introduce him, but I got to live in my happy little world for a while. Anyway, at first, it seemed like everything would be fine. Greg met my family, and Gina did her usual flirting bullshit, but he seemed to be immune to her charms. I thought I had finally met the right guy. The one who loved me and only me.\"\n\n\"I take it the honeymoon didn't last.\"\n\n\"No...it didn't. Like I said, I got busy. I was working on my doctorate, trying to get funding to do research or piggy-back on someone else's grant if I could. I was gone a lot, and Greg was alone. Gina was more than willing to play the part of the shoulder for him to cry on. I don't know exactly when it started, but I know when I found out. It was so clich\u00e9, coming home a day early from my trip to surprise my husband and finding him in bed with my sister! How's that for a crappy homecoming?\"\n\nLinda sat back down as her inner resolve failed, and she began to cry. Sam felt terrible knowing he had pushed her down this road, and he quickly hunted for a box of tissues, finally finding one in the hallway bathroom and bringing it back on the run.\n\n\"I'm so sorry, Linda. I had no idea.\"\n\n\"Why would you? I've never really talked about it. People knew I was divorced, but not why. I just...I couldn't face it, you know, losing to my sister yet again. I just couldn't...\"\n\nShe sobbed harder, and Sam awkwardly put his hand on her shoulder, not sure what to say to make things better.\n\n\"I was so humiliated, and I ran. I got divorced, and I tried to put as much distance between them and me as I could.\"\n\n\"That's when you came here?\"\n\n\"Yep...Came here, took a teaching job, and tried to make sure no man would ever look at me again.\"\n\nShe leaned back against the couch, blowing her nose loudly.\n\n\"Well, there you have it. Not much of a story. It wasn't like I was hiding my former life as a spy or something.\"\n\nSam managed a laugh at that, as much to break up the sadness in the room as anything else.\n\n\"An astronomer/spy? I'm not sure you would be able to sell that concept to NetFlix.\"\n\nLinda laughed a little, smiling for the first time since she started her tale.\n\n\"I suppose not. Look...I'm sorry, but I think I'm going to need to cut things a little short tonight. We can pick up tomorrow, okay?\"\n\n\"Sure...No problem,\" said Sam, still feeling bad about bringing up such a sore subject.\n\nLinda walked him to the door, but he stopped short of leaving.\n\n\"I'm sorry that I drug this out of you,\" he started to say.\n\n\"Don't be. I should have started putting this behind me years ago. It felt good to talk to someone about it. I should apologize for falling apart on you.\"\n\n\"I'd say you had a good reason. Anyway, I just wanted to say that I never met your sister, but looking at that woman in those photos made me think your ex-husband was an idiot. You were beautiful back then and at the risk of hurting your feelings more than I already have, I think it's a shame you tried to bury her.\"\n\nLinda was so caught off guard that she didn't know what to say, but on impulse, she leaned up and kissed Sam on the cheek.\n\n\"Thank you. I needed to hear that...\" she said quietly.\n\n\"It's true,\" he replied, blushing.\n\n\"I'll see you tomorrow.\"\n\nSam finally left, and Linda locked the door and turned off the lights heading to her bedroom, where she sat on the bed next to the box Sam had found. She picked up one of the photo's looking at the smiling girl in it and remembering a different time and place, when she had been someone else.\n\n\"I miss you,\" she said to the photograph and started to cry.\n\nFIELD TRIP -\n\nThe next day Sam got a message from Linda that she was canceling their lesson for that evening. Immediately, he fell into a funk, thinking she was still upset about the photos and his having forced her into sharing the story of her divorce. All that day, he moped around the house, managing to annoy his dad in the process.\n\n\"What's a matter with you? You've been walking around here like you just lost your dog.\"\n\n\"It's nothing. I guess I'm still feeling the blues about not being with my friends.\"\n\n\"I get it, Son, and I am sorry, but from what I hear, you're already showing excellent progress in your studies with Miss Siler. You have to keep the long game in mind and not worry so much about your short term pleasures.\"",
        "The mention of Linda didn't improve Sam's mood, but he did nod and tried to accept his dad's approval. Still, it seemed to him that not much had gone his way during this spring break, and his situation didn't get better when his friend, Miles, called him from Fort Lauderdale.\n\n\"Hey, Buddy! How's my favorite prisoner of parental concern.\"\n\n\"Hi Miles, and as you're probably already thinking, I'm miserable. Please tell me that it has been raining every day you've been there.\"\n\n\"I would love to make you feel better by lying, but the truth is that the weather has been hot and so are the babes!\"\n\nSam held in a groan, barely.\n\n\"What's Jennifer been up to?\" he asked, even though he didn't want to hear the answer.\n\n\"She won a wet t-shirt contest on the beach last night. I had no idea they were that big!\"\n\n\"What!\"\n\n\"Just fucking with you!\"\n\n\"Jesus, Miles, do you have to rub it in?\"\n\n\"Sorry, Sam, I couldn't resist. I've seen her running around with her girlfriends a few times. It looks like she is enjoying herself. That red bikini leaves little to the imagination I call tell you that much.\"\n\n\"If you can, get a photo. It may be the closest I come to her in it.\"\n\n\"I'll try. Look, you hang in there, okay? Things are bound to get better, Hell, they can't get any worse!\"\n\n\"Don't jinx me.\"\n\n\"Back at you, Buddy. See you!\"\n\nSam tossed his cellphone on the bed and sighed, \"Naples, better be fucking awesome.\"\n\nThe afternoon wore on, and Sam busied himself with cleaning chores around the house and finally settled in front of the T.V. to watch a movie when a knock came at the front door. \n\nHe went to open it and was surprised to find Linda Siler standing on the other side. Even more surprising, she wasn't wearing sweat pants and a giant t-shirt!\n\nHis tutor loitered on his porch, looking almost embarrassed to be there. She was wearing a pair of denim shorts that hung to her knees but still managed to show off her tight, muscular calves. The absent t-shirt had been replaced with a button-down men's plaid shirt that at least fit her and gave just a hint of the large breasts that Sam had observed in her photos swelling underneath. It hit him at the same moment that she had also combed out her hair, and instead of a ratty pony-tail or a shapeless mass, it now fell in natural layers around her face. She was still not wearing makeup, but just these little changes made a big difference, and her fair, flawless skin didn't necessarily need it anyway. Linda had graduated from frumpy to downright cute in one move.\n\n\"Linda? I thought the lesson was off for tonight?\"\n\n\"I know, but the more I thought about it, I decided that it would be selfish of me to impact your education in such a detrimental fashion because I was grieving over something that happened so long ago. That, and I'm sick of feeling sorry for myself.\"\n\n\"Is that why you ditched the lonely cat lady look?\"\n\n\"I wear this outfit all the time when I'm going out in the field, which is why I'm here. I thought we could take a break from the books tonight and try a little field trip.\"\n\n\"Field trip?\"\n\n\"Yeah. I know a dark site about forty-miles outside of town. I want to show you the pretty part of the Astro sciences.\"\n\n\"Sounds good to me.\"\n\nSam told his dad he would be back later and joined Linda in her jeep that had a bunch of equipment tied down in the back, including her portable eight-inch Dobsonian telescope. They drove out of town to the sound of \"The Beach Boys\" on the radio.\n\n\"I hope this music isn't too dated for you?\" asked Linda.\n\n\"Nope. I can appreciate the classics. My dad has a collection of Beatles albums at the house. My favorite is \"Abbey Road.\"\n\n\"Really? Which song? 'Come Together,' maybe or, 'Here Comes the Sun,'?\"\n\n\"I always kind of liked, 'Something,'\" replied Sam looking out at the passing cars.\n\n\"George Harrison...I think you are a romantic at heart, Sam.\"\n\n\"Don't tell my friends. They'll think I'm a wimp for liking the soft stuff,\" laughed Sam.\n\n\"There's never anything wrong with appreciating the beauty in something simple and elegant.\"\n\nHe found himself watching Linda more closely as they drove. The top was down, letting in the slowly cooling evening air and blowing her hair back into wildly flapping strands that dodged around her face. It was an everyday face to be sure, but her eyes and those full, pink lips gave it character. There was something about her mouth that intrigued him, and oddly he felt the worst urge to reach over and run his thumb across her plump, juicy, lower lip.\n\n\"Is everything okay?\" she asked, noticing his attention.\n\n\"Oh...Yeah...I just thought that the breeze feels nice. It should be comfortable outside tonight,\" he replied awkwardly.\n\n\"Good thing for us,\" she agreed.\n\nThey had to park the jeep some distance from the site and dowse their lights.\n\n\"Nothing but red-tinted lights from here, or we will destroy our night vision,\" she cautioned.\n\nThey divided up the load with Sam carrying the more massive rotating base and Linda cradling the telescope tube with a knapsack of lenses thrown over her shoulder. A short hike brought them to a dark, mostly empty field with just a few other observers with their equipment scattered around. Linda assembled the telescope and got it calibrated while Sam set up some canvas chairs for them he had fetched from the jeep.\n\n\"Now for the practical lessons to begin!\" said Linda with a flourish of her hand, making Sam laugh.\n\n\"Take a look at this,\" she invited him, nodding at the eyepiece.\n\nSam bent over and focused on the image. It looked like a gaseous cloud lit by stars both in and around it.\n\n\"It's beautiful. What am I looking at?\"\n\n\"The Great Orion Nebula. It's a huge cloud of molecular gas where stars are being born even as we speak. A stellar nursery if you will.\"\n\n\"I would hate to have to diaper the baby,\" chuckled Sam.\n\n\"Very funny. Do you remember what we talked about in regards to stellar evolution?\"\n\nShe made Sam recite back to her the necessary steps that stars go through as they form while hunting for their next target in the sky.\n\n\"Did you always want to be an Astronomer?\" \n\nLinda looked up, nodding, \"I had a fascination with the sky even when I was a young girl. I used to lay on my back in our yard and stare up at all those twinkling lights wondering if on some other world a girl like me was doing the same thing.\"\n\n\"Did your sister share your fascination?\"\n\n\"If Gina had been laying on her back under the stars, I guarantee you there would have be a man on top of her. Likely one with a girlfriend or a wife at home.\"\n\n\"Ouch! Sorry, I asked.\"\n\n\"No, that was very catty of me. I should be better than that.\"\n\n\"Did you two ever get along?\"\n\nLinda had to think about that one. \n\n\"I guess when we were kids, we got along okay, although Gina love to steal my toys when I wasn't looking. I should have taken that as foreshadowing.\"\n\n\"I'm sorry I brought it up,\" offered Sam, not wanting a repeat of their last trip down memory lane.\n\n\"It's alright. I need to stop being afraid of thinking about it. Facing your fear is the first step to conquering it.\"\n\n\"Did you get that out of a fortune cookie?\"\n\n\"I saw it on a poster in my dentist's office.\"\n\n\"Now that sounds like foreshadowing.\"\n\nLinda laughed and shook her head, \"Okay, Funny Man. Try this one.\"\n\nFor the next couple of hours, Linda ran him through a long list of stellar phenomena, from nebulae to galaxies and planets while throwing in more colorful star clusters than he could hope to remember. The moon started to rise, but it was less illuminated now and didn't bother them as much as it would have earlier in the week. \n\n\"Tell me what you see here,\" she said, leaning back to give him room at the spotter scope.\n\n\"Ah...a bright orange star.\"\n\n\"Now, look at it through the eyepiece.\"\n\n\"Hmmm...There are two of them close together. Ones orange, but the other is more greenish.\"\n\n\"The brighter one is easier to find, but it's often true than many stars have companions that are gravitationally bound to them. They probably all formed from the same cloud of gas around the same time. As a matter of fact, most stars are at least pairs, if not more. Our sun is an anomaly being a lone wanderer.\"\n\n\"Maybe the stars are like people, and they just don't like being alone,\" said Sam pulling away from the eyepiece but hovering close to Linda. \n\nIn the soft glow of the moonlight, her lips glistened, and her eyes caught the faint light and magnified it, flashing at him when she turned her head. \n\n\"People don't always get a choice. Sometimes things just work out that way.\"\n\nSam was close to her like that day in the kitchen when he had held the ice to her burned hand. She could smell his cologne, make out his dazzling smile. Linda's heart beat faster in her chest.\n\n\"I think it would be a tragedy to stay alone if you didn't have to be, everyone could use a companion, someone special in their life.\"\n\n\"I tried that. It didn't work out so well.\"\n\n\"So you just give up? You don't strike me as a quitter, Linda.\"\n\n\"No, but I got good at hiding.\"\n\n\"Hiding is a kids game and only fun if someone comes looking for you.\"\n\n\"I doubt anyone is missing me.\"\n\nSam came closer, leaning toward her, and Linda stood in place, not able to look away.\n\n\"I think a guy would be a fool not to miss you and an even bigger one to have let you go in the first place.\"\n\n\"Sam...I...\"\n\nHis head dipped down, and she felt his strong arms sliding around her waist. A nervous panic broke out inside her filling her stomach with butterflies. She wanted to run, wanted stay, feared to do either. Their lips were barely an inch apart, his breath brushing across her nose.\n\n\"Oh...God...He's going to kiss me!\" she thought.\n\nA loud sizzling noise like bacon frying in a hot skillet suddenly split the night and a shooting star pulsing with a blue light shot across the sky, leaving a trail as it went out with an abrupt banging. Linda and Sam were both startled and jumped back, looking at each other in awkward surprise.\n\n\"That was a big one,\" said Linda quietly.\n\n\"Yeah...Uh...shooting star, right?\"\n\n\"Meteor burning up in the atmosphere. Had to be a good size to get this low.\"\n\nThere was a long, heavy silence with neither one sure what to say next.\n\n\"Linda...\"\n\n\"It's getting late, isn't it? I think we should pack up and get home,\" said Linda in a rush of words.\n\nShe started to scrambled around their small encampment, putting things away in her knapsack while Sam stood fidgeting and not sure what had just happened or was happening now.\n\n\"Am I doing this alone?\" snapped Linda sounding suddenly irritated.\n\n\"What? No...No, of course not,\" replied Sam, finally galvanizing himself into action.\n\nThey loaded up quickly and started their journey home. The ride back was silent and tense. Neither of them disposed to talk. Sam thought of about a dozen things he could have said but quietly discarded them all as they drove, not sure how to break through whatever mood had settled over Linda. She was white-knuckling the steering wheel and looking straight ahead of them the whole way, never glancing in his direction. When they arrived back at his house, he stepped out of the jeep but held the door open, desperately hunting for the right thing to say to repair the damage his impulsive move had caused, but all he could come up with was, \"Thanks for inviting me. I'll see you for our next lesson.\"\n\nLinda pulled away without looking, and he slammed the door shut quickly, watching her turn the corner two seconds later..\n\n\"Nice job, Sam. Way to go,\" he said to himself.\n\nAn hour later, Linda sat in the dark, sipping a glass of wine, and trying to make sense of her jumbled feelings. \n\n\"Sam tried to kiss me...Sam tried to kiss me...\"\n\nThe words echoed over and over inside her head. He had taken her by surprise, but that wasn't the worst part. The worst part was that she was not at all sure she hadn't wanted him to finish.\n\n\"If that shooting star hadn't burst over us...God...Where would we be right now?\"\n\nShe didn't want to go there. \n\nHer glass was empty, and she sat it on the coffee table, trying to resist the temptation to get another.\n\n\"Because I've been so good at fighting temptation lately,\" she mumbled, pouring herself another.\n\n\"He's a boy, a nineteen-year-old-boy, and I'm old enough to be his mother!\" she yelled at herself.\n\nHe sure didn't look like a boy, though, no, not at all. Sam was all man.\n\n\"Fuck! Why does he have to be so damn good-looking! So fucking nice...so...sweet...\" she lamented, downing half the new glass in one go.\n\nShe could almost hear the voice in her head telling her it had been nine years since the last time a man had touched her and maybe she should give herself a break.\n\n\"Break...yeah...sure...\" \n\nThe alcohol was starting to make her sleepy, and she stumbled toward the bed. Linda had always been a light-weight. It was why she rarely drank. She tumbled into the bed without bothering to remove her shirt and shorts and dreamed of handsome young men that all looked like Sam.\n\nThe rest of spring break, what was left of it, passed without much fanfare. Sam continued his lessons with Linda, but they were more subdued now, very professional, without the warmth that had characterized their earlier association. He tried a couple of times to apologize for the near kiss, but both times Linda cut him off and made him return to the astronomy text. She didn't seem interested in hearing his explanation, which was just as well since he couldn't explain his actions, not really. He had just felt an overpowering urge like a moth being pulled to a flame. The more time he spent around Linda, the more potent that call seemed to become, so he was almost grateful when spring break ended, and they had to cut back to just having a couple of lessons a week so he could concentrate on his other classes as well.\n\nThe end of spring break and subsequent return of his friends had also meant the return of Jennifer Masterson.\n\n\"Hey, Sam. It's good to see you again,\" said Jennifer taking a seat next to him in their economics class.\n\nJennifer had picked up a golden tan on the beach, which made a nice contrast with her blond hair. She smiled at him, displaying rows of dazzling white. \n\n\"We missed you in Fort Lauderdale.\"\n\n\"Sorry. I wish I could have been there,\" he replied distractedly as he flipped through a text-book.\n\n\"That doesn't look like economics,\" she said, leaning over.\n\n\"It isn't. It's astronomy.\"\n\n\"How boring. I don't know how you got yourself sucked into that one.\"\n\nSam looked up annoyed, but it was hard to stay mad at Jennifer Masterson, especially when she was wearing a low-cut halter top.\n\n\"I made a poor judgment call taking it at the beginning, but now I'm kind of warming up to it. There are more things in Heaven and Earth than are dreamt of in your philosophy.\"\n\n\"Huh?\"\n\n\"It's Shakespeare. You know, Hamlet. I think that Shakespeare was referring to the limits of human knowledge though not pushing the boundaries.\"\n\n\"Right...Um...I was going to ask if you want to go out tonight. A group of us were going to check out that new mall that just opened.\"\n\nSam could tell Jennifer had no idea what he had been talking about. He had been spending so much time around Linda he was used to a woman who could think rings around him. Then again, men didn't hang around a woman like Jennifer Masterson because they loved her brain.\n\n\"Mall? I guess I could carve out some time to do that,\" he said.\n\n\"Okay...Call me,\" she said, returning to her seat as their professor entered the classroom.\n\nSam called his dad and told him he would be having dinner out, figuring he and Jennifer, along with her friends, would grab a bite to eat at the mall. The place was busy, the novelty would wear off soon enough, but for now, crowds of people wandered, checking out the sales and window shopping at the more exclusive boutique stores. He paced along next to Jennifer, admiring how devastatingly tight her ass was in a pair of jeans, but at the same time a little bored with the conversation. Jennifer seemed able to hold forth on only two topics with any authority, women's fashion, of which Sam knew nothing, and celebrity gossip which he could have cared less about.\n\nAt the moment, her group was knee-deep in a discussion about some teen soap opera he had never heard of, and he was doing his best not to appear ignorant. They made a turn in front of the food court when he spotted a familiar figure walking in their direction.\n\nLinda Siler had her eyes on her phone, or she might have beat a hasty retreat the other way when Sam and his friends appeared in front of her. Lacking time to flee, there was nothing she could do but put a smile on her face.\n\n\"Linda! I guess you're enjoying the new mall experience along with the rest of us,\" said Sam, \"This is my friend, Jennifer and her friends Skyler and Wendy.\"\n\nShe nodded at the younger girls noting how unearthly beautiful Jennifer was in her skin tight outfit with that huge cascade of blond hair. The hair color was wrong, but she was reminded strongly of her sister, Gina, and it made her stomach hurt. It didn't make matters any better that she was dressed in her typical casual clothes, including the too large t-shirt. \n\n\"Doing some shopping?\" asked Jennifer, indicating the bag that Linda carried.\n\n\"Yes. They were having a sale at Neiman Marcus,\" answered Linda.\n\n\"What did you get? I love their line of Alexander McQueen dresses!\"\n\nLinda winced as she answered, \"Sweatpants.\"\n\n\"Oh...Well...I guess whatever you like,\" said Jennifer, clearly not sure how to follow up that revelation.\n\n\"The girls and I were going to get something to eat if you want to join us?\" asked Sam.\n\n\"No...Thanks, I was just leaving. You kids have a nice time. I'll see you Thursday, Sam.\"\n\n\"Who was that?\" asked Jennifer after Linda had moved out of earshot.\n\n\"My astronomy tutor,\" he answered curtly.\n\n\"No wonder. I guess she's a professor or something. I've never met one with any sense of style,\" laughed Jennifer as her girlfriends joined in.\n\nSam's eyes flashed with anger, \"Linda has more going for her than most women I know. A lot more.\"\n\nJennifer was thrown by his tone, \"Hey...I was just kidding. I'm sure she's very nice. Why don't we just go eat, huh?\"\n\nGrudgingly, Sam headed to the food court with the girls, but he couldn't help but throw a look over his shoulder in the direction Linda had gone off in.\n\n\"Fancy dressed little slut. I can't believe the way she was looking down her nose at me. What does Sam see in a girl like that?\" mumbled Linda to herself as she walked briskly through the mall toward the exit. \n\nRunning into Sam and Jennifer had shaken her, making her have flashbacks of her sister and Greg in bed together. It was a silly comparison, not even close, really, but it was upsetting just the same. She was about to leave the mall when she paused at a designer dress store. In the window, a black, low-cut dress trimmed in lace was on display. Linda hesitated, bouncing nervously on her toes before lowering her head and darting into the shop. \n\n\"Can I help you?\" asked a young lady applying price tags to a rack of blouses.\n\n\"Yes,\" replied Linda, \"that dress in the window. I'd like to try it on.\"\n\nThursday night, Sam was back at his usual spot on the couch at Linda's. She had been more animated tonight than he had seen her in a while, and he hoped it was a sign that things were getting back to normal between them after the fall out from their trip to the dark site. \n\n\"How did I do?\" asked Sam.\n\nLinda had prepared a quiz for him tonight, and she was grading it now, her glasses perched on the end of her nose.\n\n\"You've asked me three times in the last ten minutes. If you would just let me get to the end, I could tell you.\"",
        "\"Sorry,\" said Sam sheepishly, \"I'm just nervous. I don't want to let you down.\"\n\n\"You could never let me down, Sam. You've been working hard, and that is all I ask.\"\n\nThe way his face lit up when she praised him made her feel warm inside, and she smiled.\n\n\"Now...five more minutes and I'll have this done.\"\n\nSam tried to sit patiently while Linda worked picking up a book of photographs taken by the Hubble space telescope to occupy his mind. After what seemed like an eternity, Linda finally removed her glasses and sat them on the table.\n\n\"Well?\" he said anxiously when she didn't say anything.\n\n\"Ninety-five. You missed one, but it was a math error in computing the mass of a type B star, and that can happen to anyone. Congratulations.\"\n\n\"Holy shit!\" said Sam jumping up off the couch and taking a careful victory lap around the coffee table.\n\n\"Mind the books!\" cried Linda with fake anger as he brushed a stack near the couch that almost fell over.\n\n\"Ninety-five! Ha! Put that in your pipe and smoke it, Professor Grant!\" gushed Sam referring to his Astronomy teacher at Hampton.\n\n\"This isn't the real thing, but if you do half as well on your final, you'll be fine.\"\n\n\"We need to celebrate! Come on, Linda, let's go someplace nice and get some food! How about Antonio's?\"\n\n\"Antonio's? That's one of the nicest restaurants in this one-horse town. We couldn't...\"\n\n\"Come on. I've been saving my money from part-time work at my grandfather's carpentry shop. I can afford to splurge.\"\n\n\"I don't know, Sam...\"\n\n\"Please? I've just knocked the ball out of the park, thanks to you. Don't bring me down now.\"\n\nLinda melted in the face of Sam's unbridled enthusiasm.\n\n\"Antonio's is pretty upscale, though. I need to go home and change,\" said Sam. He paused and looked back at Linda in her shorts and t-shirt.\n\nShe looked down, noticing what he was looking at.\n\n\"Don't worry. I think I have an outfit that would be okay, and, no, it isn't nicer sweatpants.\"\n\n\"I wasn't worried,\" said Sam with a smirk.\n\nAs soon as he had gone, Linda drew a breath and went into her bedroom, opening the closet door. Hanging on the back was the dress she had bought at the mall, lacy, and to her eyes very small.\n\n\"I can't believe I'm doing this...\" said Linda, her voice shaking slightly as she took it down and laid it on the bed. \n\nFrom there, she went over to her vanity and opened the center drawer looking down at the untouched makeup bag that sat in the center. Her mother had sent it to her for Christmas in the hopes that her youngest daughter would finally come out of her funk.\n\n\"I just hope I remember how,\" she whispered to herself as she lifted it out.\n\nSam knocked again, wondering if Linda had fallen asleep or something.\n\n\"It's not that late,\" he grumbled, glancing at his watch.\n\nIt had taken him longer to get ready than he had figured on, but he stood now on Linda's doorstep looking smart in a sport coat and pressed slacks, his black leather shoes gleaming. \n\nHe started to knock again when the door opened.\n\n\"I was starting to think you were going to stand me...up,\" began Sam, but his voice petered out.\n\n\"I hope this outfit will do,\" said Linda in a nervous voice.\n\nSam wanted to answer, but his brain had locked like a seized engine. He struggled to find the words to compliment her, but it was damn hard to compliment the most beautiful woman he had ever seen.\n\nIt was like a caterpillar emerging from a cocoon. The transformation was striking. Gone was the frumpy, tired-looking woman who had prowled the yard behind his, and in her place was a gorgeous stranger. \n\nLinda had pulled her hair back with gold braid to bring emphasis to her face, which was no longer washed out but glowed with soft, rosy color. Her eyelids were darkened with shadow that accentuated her sea-green eyes, and her lips were painted with a dark-berry color that contrasted beautifully with her light-brown hair. The dress she wore clung to her like a second skin dropping low to show off her deep cleavage and cut short to reveal her slender, muscular legs. She was wearing heels that brought her up closer to Sam's height and made her trim calves look even more shapely. \n\n\"I...you look...Jesus...\"\n\nLinda's face clouded as she looked down, thinking Sam didn't approve.\n\n\"Is something wrong?\"\n\n\"No...God, No!...It's just...Linda...You're...You're beautiful.\"\n\nLinda felt her whole body light up at the look on Sam's face, and she blushed so hard she was afraid the color would never fade.\n\nThank you,\" was all she could manage.\n\nThey stood just staring at one another for at least ten more seconds before Linda laughed and pointed out that Antonio's didn't deliver.\n\n\"Right you are! We should go,\" said Sam finding his full voice at last.\n\nThe restaurant was reasonably busy for a Thursday night, but after a short wait, they were led to a table for two. Sam studied his menu while stealing surreptitious glances over the top at his date. He still couldn't get over how different Linda looked. She had even accessorized her outfit perfectly with emerald earrings close to her eye color and a thin gold chain around her neck. \n\n\"I hear the fettuccine Alfredo is good here,\" he said after clearing his throat.\n\n\"I'm more of a good lasagna girl, but I might try that.\"\n\n\"Have you eaten here before?\"\n\n\"First time. It's nice. I love the rustic Italian touches it's like being transported to another country.\"\n\n\"This was my parent's favorite restaurant when my mom was still alive.\"\n\nLinda sat her menu aside and looked with sympathy at her young companion, \"Nancy was a lovely lady. She was nice to me when I first arrived here, and I needed a friend.\"\n\n\"I'm glad she was there for you,\" he said with a wistful hint of sadness in his voice.\n\n\"You miss her?\"\n\nHe hesitated, turning a fork over in his hand and watching the light reflect off the metal.\n\n\"It gets a little easier as time passes. I guess that's the way of things, right? What you're always told, that time heals all wounds.\"\n\n\"Heals, maybe, but the scars are always there. The pain fades, but we are sometimes reminded of it by our memories, and it can flare back again suddenly.\"\n\n\"Like with you and your husband?\"\n\nLinda nodded, taking her turn to fidget with the silverware.\n\n\"Hey! This is supposed to be a celebration! Let's not wallow in the past,\" said Sam forcing a smile back on his face.\n\nHe noticed that the house band had started playing, and a few couples were dancing nearby.\n\nSam stood up and offered Linda his hand.\n\n\"Would you care to dance?\"\n\nShe looked startled for a second then ducked her head, \"I don't know. I'm very out of practice.\"\n\n\"I had to take dance lessons when I was in high school. My mother insisted. Don't worry. I can lead.\"\n\nReluctantly, Linda rose to her feet and took Sam's hand, letting him take her toward the dance floor. There, he slipped his arms around her waist, reminding her of that moment by the telescope at the dark site. She shuddered at little, a tingle shooting up her spine as he pulled her closer to him.\n\nSam smiled down at his pretty neighbor, catching that smell of wildflowers from her hair that he decided must be her shampoo. \n\nIt turned out he was not over-selling himself, Sam was an exceptional dancer, and he led Linda confidently around the floor.\n\n\"You are terrific. I'm going to be embarrassed when I step on your toes.\"\n\n\"I doubt you could hurt me.\"\n\nHe went to twirl her around, and she felt a giggle slip from her lips, blood rushing to her head. It had been years since the last time a man had made her feel this good. When Sam drew her back to his chest, her arms went instinctively around his neck, and she found herself staring into his rugged, handsome face.\n\n\"That girl you were with at the mall. Was she your girlfriend?\" \n\n\"Jennifer? Not really...just a friend.\"\n\n\"I caught some hesitation there. I take it you're interested in her?\"\n\n\"I was, but I'm discovering I like my girls to be smart as well as beautiful. Jennifer is all flash and no substance.\"\n\n\"That can be a tough combination to find.\"\n\n\"I don't know about that, could be I know someone already that fits that description.\"\n\nLinda sensed another blush coming on, and she diverted her eyes from Sam's face.\n\nA girl from your college?\"\n\n\"No, someone closer to home.\"\n\nHe dipped her before she could comment on that pulling her so swiftly back to him that it took her breath away. Their faces were close again, as close as they had been that night by the telescope. Linda's heart raced in her chest, and she could feel Sam's pounding right along with it. \n\nSam started to move, but at the last second, Linda looked down.\n\n\"We should go order, don't you think?\"\n\n\"Sure...\" he replied, his voice laced with disappointment.\n\nThe food proved to be as excellent as the atmosphere, and they both enjoyed the meal immensely. \n\n\"So, your Dad wants you to go to Whitmore?\"\n\n\"That's the plan. His plan, I should say.\"\n\n\"Whitmore is a fine school. I went there, you know.\" \n\n\"My dad mentioned that to me. I'm sure it's great. I just hate to feel like I'm being strong-armed into following someone else's dream.\"\n\n\"I can understand that we all have to find our path in life, discover what suits us best.\"\n\n\"I wish my dad was as understanding. I don't think he trusts me to make my own decisions sometimes.\"\n\n\"He should. I've seen enough in our short time together to know you've got a good head on your shoulders and an even bigger heart.\"\n\n\"If you're trying to make me blush, you're doing a good job.\"\n\n\"I'm just returning the favor,\" said Linda without thinking.\n\nSam eyed her over the top of his water glass, \"Have a done something tonight that made you blush?\"\n\nLinda's eyes dropped back to the table, kicking herself for blurting out those words.\n\n\"Linda?\"\n\n\"Yes...\" she said in a quiet voice.\n\n\"What did I do?\"\n\nShe forced her head to move back up to bring her eyes to meet Sam's. His danced with mischievous intent. He knew exactly what he was doing.\n\n\"You looked at me like you are now.\"\n\n\"I can't help how I look at you.\"\n\n\"It's not appropriate for a student to look at their teacher that way.\"\n\n\"Then it's a good thing we aren't in school.\"\n\nTheir waiter showed up, breaking the tension and bringing them their check, which Sam promptly paid.\n\nOn the ride home, Linda felt a growing nervousness and wished that she had driven instead of Sam. It would have been easy to drop him off and make a hasty get-away, but that option wasn't available now. \n\nThey pulled up in front of her house, and Sam cut the engine.\n\n\"You don't have to walk me up. I know the way,\" she said, trying to keep a casual tone in her voice.\n\n\"Are you kidding? This is a full-service date, Lady. I would be remiss if I didn't do the gentlemanly thing and walk you to your door.\"\n\nHe didn't let her get in another word but came around to open the car door for her. They walked up together with a slipper moon hanging over their heads. \n\n\"I had a nice time, Sam. Thanks for inviting me.\"\n\nShe was trying to keep it simple, perfunctory, hoping to get in the door without any undue fuss. The look in Sam's eyes stopped her cold.\n\nIt was a look she hadn't seen in years, at least not directed at her. A glimpse of hungry desperation that sent her pulse racing. The kind of look she had been patently avoiding, hiding from, thinking she didn't want, didn't need.\n\nShe had been wrong.\n\nHe put his hand out and touched her face.\n\nHis palm was so warm. \n\nShe started to tremble.\n\n\"Please don't do this...\"\n\n\"Why?\"\n\n\"Because, Sam, it's not a good idea. I'm too old for you.\"\n\n\"Is that the real reason?\"\n\nLinda looked up into those dark eyes that blazed with passion.\n\n\"No...It's because I don't have the strength to stop you.\"\n\n\"Don't be afraid.\"\n\n\"Oh...Sam...\"\n\nSam lowered his head, this time Linda didn't duck away, no stars fell from the sky, and the only fire was between the two of them.\n\nShe closed her eyes, felt him tilting her head with his hand, and a second later, for the first time since she had walked away from her marital bed, a man was kissing her.\n\nThere was a moment of awkward unfamiliarity that quickly dissolved away as their lips melded together. \n\nSam sighed in his throat as Linda's creamy, dark lips pressed tight to his own. He drank in the sensation of their flesh touching, the incredible velvety softness and moist heat that enveloped him. \n\nLinda felt her arms moving up across Sam's muscular chest as if they had made the decision for her and were too anxious to wait. She pivoted her head to one side, rubbing her slick lips on Sam's firm mouth, feeling the strength in him, the need for her that both scared and excited her at the same time. \n\nThe kiss deepened, slow, gentle rubbing giving way to more insistent movements. \n\nHis arms slipped around her, pulled tight, bringing her body up against his. Linda groaned quietly in the back of her throat, a sudden, hot wave of desire sweeping through her and leaving her shaking even harder. She parted her lips, and Sam was there in an instant, his tongue slipping into her mouth, teasing, swirling around, seeking.\n\nLinda joined her tongue to his, tips brushing together, making tingles break out down her spine. They were both breathing harder through their noses, gasps for air as the heat grew between them. Sam ran his hands across her back, fingertips breezing softly over the bare skin that her dress didn't cover. She longed to feel those fingers touching her all over.\n\nTheir kissing became more frantic, more needful, mouths sliding wetly together, tongues flicking and chasing back and forth.\n\nThey parted abruptly like they were two prizefighters, and a referee had forced them apart. \n\nThey stared at one another, panting, skin flushed with excitement.\n\n\"Can we go inside?\" asked Sam in a thick voice.\n\nLinda fumbled with her key dropping her purse in the process. It took her four tries to get it in the lock, and it was only after the door had slammed shut that she realized her purse was still on the porch.\n\nShe couldn't have cared less.\n\nSam yanked her back into his arms, and they were kissing again. His mouth was everywhere now, not just on her lips but kissing her neck, her shoulders, the bare skin above her cleavage. Her body was lighting up, skin burning, dying to be touched. His lips were back on hers, and she kissed him openly, not able to hold back the flood of desire that suffused her being. They stumbled backward, knocking over a stack of books that contained her autographed copies of \"Burnham's Celestial Handbook, volumes 1-3,\" a calamity that in the past would have given her fits of anxiety. Tonight, it didn't even register.\n\nHe pressed her to the wall, covering her mouth in the most ardent French kisses yet. They were both moaning now, giving voice to the lust that was fast overwhelming their inhibitions. Linda felt his hands moving up her back again toward the catch that held her dress closed. He slipped it with admirable skill, the zipper just beneath it began to descend.\n\n\"Jesus...Sam...\" she whispered.\n\nIt had been a good long time since a man had seen her this way. Even longer since she had wanted that to happen, her body was still shaking, partly arousal, but partly fear that Sam would be disappointed with what he found waiting for him. She was no Jennifer Masterson, no hard-bodied college girl. \n\nThe zipper reached her lower back, stopped. \n\nSam started to pull the fabric away from her, slowly, letting it slide off her shoulders and down toward the ground. The dress had padded cups, didn't require its owner to wear a bra. She could feel Sam's eyes on her as the cloth moved past her middle, her naked upper body exposed to him for the first time. At first, she couldn't meet his gaze, too afraid of what she would find there, but taking a breath, she finally raised her head.\n\nSam was smiling in the semi-darkness, no sign of anything on his handsome features but longing.\n\n\"You're the most beautiful thing I've ever seen,\" he whispered to her.\n\nLinda wanted to cry, but he banished such thoughts from her head when he took her bare breasts in his hands. \n\nShe closed her eyes again and groaned, \"It's been so long...\"\n\nThey might not have won any wet t-shirt contests on a Florida beach, but they were gorgeous in their own right. Her soft, milky white, breasts were large enough to more than fill Sam's palms, with flesh spilling over the sides, still quite firm for a woman in her late thirties. They sat well up on her chest, dark pink areolas covered in love bumps with perfectly round, dime-sized nipples. He squeezed them, lifted them enjoying their weight, the heft of them. Linda grabbed at the wall when he put his mouth on one, running his tongue in a tight circle around her erect nipple. She groaned audibly in the back of her throat when he sucked that same nipple roughly into his mouth. His teeth pulled at the puffy flesh, nibbled on that tight cherry love knot.\n\n\"Oh...My...God...\" gasped Linda.\n\nShe had utterly forgotten, or perhaps suppressed that she had ever known, how good it could feel to have a man touch her this way. Sam may have been young, but he had the hands of an experienced lover, and a mouth to match. He proved that in every way, as he toyed with Linda's chest and made her knees shake, her vagina fill with juicy nectar. Her soft cries gained volume with each hot lick, each firm love bite, and she writhed against the cool wall behind her while he worked her into a frenzy. \n\nSam held her breasts together, nuzzled the spit covered skin, licked her fully erect nipples moving back and forth between them.\n\nLinda couldn't take it anymore. \n\nHer dress had stopped at her hips, and she shoved it the rest of the way off onto the floor, leaving herself in nothing but a pair of lacy black panties. She grabbed at Sam's head, burying her tongue in his mouth and Frenching him almost angrily before taking his hand and pulling him toward her bedroom. As soon as they entered, she was pushing his sport jacket off over his shoulders, ripping the buttons from his shirt in a single hard motion, and lifting off his t-shirt to feast her eyes on his hairy young chest.\n\nIf she thought she had been wet before, it was nothing compared to the flood that erupted between her legs at the sight of all that rippling muscle. \n\nSam could only stand in awestruck wonder at this new Linda Siler, a driven, sex-starved beast that showered kisses on his chest and licked her way across his stomach, making him shudder when she teased his belly button with her tongue. Her fingers worked with a singular purpose, unbuckling and removing his slacks, leaving her facing his gray silk boxers. The bulge on the front told all the story she needed to know.\n\nLinda stopped, hesitated for a second. She wanted this that was certain, but it had been a very long time since she had tried to please a man this way. \n\nWhat if she had forgotten how?\n\nWhat if she had never been good?\n\nDoubt clawed at her, but it wasn't enough against the wave of crushing arousal that poured through her body. She rolled down his underwear, and all that was Sam Morrison dropped in front of her face. His cock was as impressive as his chest, bigger than Greg's by a wide margin, an ivory, vein covered tower that swayed inches from her lips. \n\nEvery thought left her head but one.\n\n\"God, I want to suck your cock...\" she moaned.\n\nSam barely fought down a scream that might have alerted the neighborhood. He gritted his teeth, breath coming out in a low hiss as Linda took him fully. The room filled with the wet sounds of his cock sloshing in her mouth, and he looked down at her, hardly able to wrap his mind around what he was seeing. There was Linda Siler, his neighbor, the frumpy lady from down the street, now a gorgeous, brown-haired siren who was pumping his dick with one hand while pushing her sweet pink lips up and down every inch. The iron-hard flesh dripped with her saliva, and his balls cried with the need for release. She was taking him deeper with each thrust, gagging slightly, squeezing the head of his cock in the back of her throat. ",
        "The pleasure was almost too much.\n\n\"Ah...AH! Shit! Linda! You're so good! Ah! Fuck! That feels so good. You have no idea! AH! FUCK! YES!\"\n\nShe slowed, using her free hand to feel Sam's drum-tight sack confirming her suspicion that he was close to filling her mouth with his seed. Part of her wanted that, would have relished sucking this hairy young cock clean, but her body needed so much more from him. \n\nSam's eyes opened at the popping sound of Linda, releasing his straining penis from her mouth. She was still stroking it, looking up from her knees at him with a face contorted into a mask of lust-filled need. \n\n\"I need you to take me to bed, Sam. Please...\"\n\nThey hit the bed together a half-second later, Sam nearly ripping Linda's panties trying to get them off. He might not have been with a lot of women, but he was sure he had never seen one as wet as Linda Siler was right at that moment, likely he imagined, most men would have said the same. Her vagina, lightly covered in dark-brown hair, was a sea of gleaming, slippery, female juice that ran down onto her thighs. He could smell the tart odor, and it served to make him even more excited. \n\nLinda watched from her back as Sam spread her legs. He started to move up as if he was going to mount her body, and she was so ready for that to happen, but he stopped half-way and leaned down to kiss her stomach instead. She drew in a sharp breath while he worked his way down, returning her earlier favor by running his tongue into her belly-button, then continuing down further still. It was clear where he was headed, and she started to tremble in anticipation. At his best, Greg had been indifferent about oral pleasure on a woman, and Linda missed it more than she could say.\n\n\"Oh...OH! Sweet fucking Jesus! Sam! Ahhhh! GOD!\" she cried, making fists in the bed covers.\n\nSam buried his face in all that warm nectar and licked Linda's pussy with wide-eyed enthusiasm. Her back arched off the bed, and he was treated to the glorious sounds of her desperate cries for more as he made dessert of her sloppy love hole. It didn't take a genius to find her clitoris, she had a much larger one than any girl he had been with before, and pressing his tongue to it made her thrash that much harder much to his delight. He managed to stretch his arms up to reach her chest and began to knead the doughy flesh of her mounds, playing with her nipples while he feasted on her dripping pink slit.\n\n\"Sam! SAM! Baby! Christ...Sam, if you don't...don't stop...soon...You're going...going to...make me cream...AH! FUCK! I'm going to cum all over your face, Sam!\"\n\n\"Promise?\" he asked playfully from between her legs.\n\nA hot, creeping tingle ran from between Linda's legs right up into her stomach, the herald of her orgasm. A call she had not heard for more years than she cared to admit, at least not brought on by a man who wanted no more than to please her. She bit her lip, struggled to hold it back, wanting this to last and last. Sam seemed to sense her reluctance and didn't make things easy. He started to suck gently right on her clit, and that proved to be more than she could take. A violent ripple shot up her body, a tremor of pleasure that was followed by another and still another until the whole thing became a cascade of pleasure she couldn't contain.\n\n\"Oh My God! OH MY GOD! Ah! Sam! It's been so long! GOD! SO LONG! Ahhh! Sam, I'm going to cum! OH GOD! OH GOD! OH GOD!\" she screamed.\n\nLinda threw her head back, arching her body off the bed as she orgasmed so hard it made her feel like she was going to explode. The feeling went on so long it became hard to breathe, and she was gasping for air by the time it subsided, dropping weakly back onto the bed. \n\nSam was grinning from between her legs as if he had just won first prize at a carnival. \n\n\"I guess you were right. Maybe I should have slowed down?\" he asked.\n\n\"Come here, Sam,\" she said in a low, commanding voice.\n\nHis expression was still smiling, but his eyes grew more serious as he climbed up her naked body until they were looking into each other's flushed, shining faces.\n\nHe tensed when she reached down and took hold of his rock hard penis, guiding him toward her wet, creamy, very ready vagina.\n\nThey both gasped at the same time when their flesh was joined, Linda feeling the throbbing warmth of a lover's cock for the first time since slinging her wedding ring into a river almost a decade ago. It was even sweeter than she recalled, probably because it was Sam.\n\n\"Linda...It's so warm inside you...You feel so good...\" he moaned quietly.\n\n\"So do you. Uh! Sam...I forgot it could be this way. I need you...I need you so much.\"\n\nThere was a little pain. His penis stopping about half-way in as her body fought to accustom itself to a new and much larger visitor, but in due course, Sam sunk fully into her, bottoming out and making her sigh when he hit the deepest part. \n\n\"Good God! You're so far in me! Ah...Sam...Sam...Hurry...I need this more than you know...\"\n\nSam rose on his arms, driving his hips into motion, slow thrusts that pushed his thick cock deeper, spread her long-neglected pussy open further, touched centers of pleasure long left bereft of a lovers caress. Linda pulled her legs back, wanting more, wanting to take every inch that she could. She was dying to feel this fat, steel-hard, young cock fuck her fast and deep..\n\n\"That's it! More! More Sam! Give it to me! Ah! Sweet God! Yes! YES! YES! Oh, Sam! You feel so good!\"\n\nFuck Jennifer Masterson. Sam couldn't imagine a woman looking hotter than Linda did right then, her sweet, sexy breasts bouncing with each thrust, her beautiful face looking up at him with an expression of wonder at how he was making her feel. The heat of her silky insides seemed to grow the more he pushed, a lovely friction that was like an itch he had to keep scratching harder and harder. A profound urge to pick up the pace settled over him, and his body responded, quicker still, deep thrusts that made his balls slap against Linda's puffy labia. He was getting close now. Balls tight. It was becoming hard to think, hard to focus, everything that he was being drawn down into a single point of pressure. \n\n\"Linda...LINDA! Ah! I can't...I'm close...\" he managed to gasp out.\n\n\"Don't stop! Don't stop! Please, Sam!\" she begged.\n\n\"Linda, it's too much...It feels too good inside you I...I...AH! LINDA! LINDA!\" \n\nSam's eyes snapped shut, and his cock exploded into jerking, throbbing motion, spewing thick gobs of semen into Linda's steamy insides. The warmth spread into her, the feeling of his release triggering her body into another violent, Earth-shaking orgasm. \n\nThey came together, bodies straining, clinging tight to each other, looking into one another's eyes and seeing their feelings returned in full measure. \n\n\"I'm cumming, Sam! I'm cumming with you!\" gasped Linda, reaching up to hold his head closer so that their faces were inches apart. \n\n\"Oh! Linda...\"\n\nSam could have stayed like that forever, caught in a perfect moment so intense with a woman that had opened his eyes to wonders he didn't know existed. A woman he was fast coming to believe was more important to him than he had thought possible when they first met.\n\nThey collapsed onto one another, lungs heaving, trying to bring their bodies back under some semblance of control.\n\nSam rolled onto his back, tugging Linda after him and wrapping her in his arms, feeling the beating of her heart, smelling that wildflower scent he was coming to associate with her.\n\n\"Are you okay?\" he asked when she was silent for what seemed to him too long.\n\n\"I'm sorry. I was just thinking.\"\n\n\"I know a man should never ask, but thinking about what?\"\n\n\"That I never imagined I would feel this way again.\"\n\n\"I hope it's a good feeling.\"\n\nLinda sat up enough to turn her head and look into Sam's eyes.\n\n\"It's a perfect feeling.\"\n\nHe reached up and did something he had been longing to do for weeks, run his thumb across her soft, full, lower lip.\n\n\"You're so beautiful, Linda.\"\n\n\"I don't think you felt that way when I was running around in sweatpants and baggy t-shirts.\"\n\n\"You were trying to hide from me. I told you that game is only fun if someone comes looking.\"\n\n\"I'm glad you did, Sam.\"\n\n\"Me too.\"\n\n\"You seem kind of fascinated with my lips,\" she noted.\n\n\"They are sublimely soft.\"\n\n\"Feel free to kiss them all you want.\"\n\n\"I don't mind if I do.\"\n\nSam pulled her to him again, mashing his mouth on hers, letting the touch of her slick, warm, full lips send his cock soaring back to its extreme length. They kissed hungrily, with a need for each other that was almost frightening in its intensity. Linda slipped a hand down, confirming what she already suspected.\n\n\"Um...Sam...I can't believe you're hard again.\"\n\n\"Too soon?\"\n\n\"Are you kidding? I've got nine years to make up for, Sweetie. Let me on top this time.\"\n\nHe lay back and marveled at how sexy Linda looked as she mounted his revived penis. The sight of the fat purple head slipping between her pussy lips made him sigh in quiet satisfaction, and the feeling of that same tight pussy squeezing him in its slippery embrace made him groan loudly.\n\n\"Feel good to be inside me?\"\n\n\"You have no idea.\"\n\nLinda put her hands on his chest and started to ride, letting her hips grind her clitoris on the base of his thick shaft. \n\n\"Good! God! Sam...It feels so good to fuck you!\" she gasped.\n\n\"You look so hot like this, I could just lay back and watch you fuck all night,\" said Sam admiring the way her sweet, round tits swayed up and down, her areolas and nipples darkening from deep pink to rosy red.\n\n\"I...don't think...either of us...could last...that long,\" she replied breathlessly.\n\nHe couldn't help himself and reached up to play with her breasts, rolling her nipples with his thumbs, pulling on them.\n\n\"Careful! That's a sure-fire way to send me off!\" warned Linda.\n\n\"Is that right?\" \n\nShe wasn't kidding as he discovered when she had another screaming orgasm thirty seconds later prompted by his rough nipple play. Sam joined her not long after, filling her tight hole with more of his sticky white spunk while she writhed and moaned on top of him.\n\nThey cuddled again afterward, basking in the afterglow of a night neither of them wanted to end.\n\nFINAL EXAM -\n\nAll good things do end, though, and the next morning came far too early as far as Linda was concerned. \n\nSam was still sleeping peacefully next to her. He had called his dad the night before, and though she had not heard the whole conversation, she suspected that he had lied about where he was spending the night. That wasn't what bothered her. She would have told him to do that very thing if he had asked her advice. She was certainly not ready to confront Sam's father over her sudden relationship with his college-age son.\n\nNo. Her problem was much more immediate and undeniable. \n\nHow to deal with what was happening with her and Sam?\n\nA part of her wanted just to let it happen. They were attracted to each other and, God knows, she had been lonely for a very long time.\n\nThen again, he was just a kid. An incredibly handsome, athletic, sweet, and kind kid who could fuck her brains...\n\n\"Okay! That isn't helping,\" she said to herself while turning her back on Sam's sleeping form so she could stop thinking about how freaking sexy he looked naked on top of her covers.\n\n\"You're up early,\" said Sam sleepily from behind her when her stirring on the bed pulled him from his slumber.\n\n\"Uh...yeah...I like to get my day started early sometimes,\" she said awkwardly while getting up and fetching her robe from off the back of her bathroom door.\n\n\"I hope you aren't covering up on my account?\" joked Sam from the bed, watching Linda struggled to pull her robe on over her naked body.\n\n\"No...I just don't typically walk around my house naked.\"\n\n\"Maybe you should. You won't get any complaints from me.\"\n\nLinda tried to turn but felt color quickly coming to her cheeks and a very unladylike warmth spreading between her legs.\n\n\"Jesus Christ! Why does he have to look so good!\" she moaned in her head, turning back around.\n\n\"You should probably get home. Your dad might start to worry about you.\"\n\n\"It wouldn't be the first time I stayed out all night. He's fine as long as I call.\"\n\nSam got out of the bed and came over to her, trying to put his arms around her, but she stepped back.\n\n\"What's wrong? Did I say something in my sleep? Did you not like the thing I did with my pinky? Because I got that off a website, and I know not every girl enjoys it.\"\n\n\"What!? No...You didn't talk in your sleep, and I didn't mind the pinky thing just warn me before you do it again.\"\n\n\"So, what's the problem?\"\n\n\"This is just a lot for me to process. I've been alone for a long time and then all of a sudden you're here, and we had one kind of relationship, and then we're having a very different one and...It's just really confusing. Then there's the fact that you're so much younger. I don't know, Sam. It's just a lot, okay.\"\n\n\"You know the problem with smart people?\"\n\n\"What?\"\n\n\"They think too damn much.\"\n\nHe didn't let her get away this time, pulling her close to him, after a brief struggle she gave up, and let him hold her.\n\n\"What happens now?\" she whispered while he stroked her hair.\n\n\"How would you feel about being my girlfriend? I have an opening in that particular area.\"\n\n\"Be serious, Sam.\"\n\n\"I am serious unless you think this was just a one night stand, in which case I'm going to be insulted at being used in such a high-handed fashion.\"\n\nLinda couldn't help but giggle at that, smacking Sam on the chest.\n\n\"Look. Don't make such a big deal out of this thing. I like you, and you have good taste since I sense that you like me as well, so let's just see where things go.\"\n\n\"I don't know, Sam...\"\n\n\"Don't overthink, Linda. Now. How hot do you like your showers?\"\n\n\"We're going to take one together?\" \n\n\"I like my girlfriends to shower with me. Sorry. Consider it a perk of the job.\"\n\nLinda started to argue, but somehow Sam managed to get her robe off while she was trying to make a point, and it turned out to be hard to argue when a man is kissing your breasts. They ended up in the shower together, where it took a very long time for either of them to get clean.\n\nWhen Sam left later that morning, Linda watched him go and wondered where this was going and what she would do next. The whole idea of being his girlfriend was tempting, she had been more lonely than she ever realized, and being around Sam had awakened the woman in her she thought long since gone away. Still, she doubted Sam was seeing the reality of their situation. \n\n\"He's a romantic. He'll only see the happy ending, but one of us has to be a realist,\" she said out loud as she cleaned her kitchen.\n\nIt was hard to sell herself on that, though, when she felt so happy for the first time in ages.\n\nThings didn't get any easier when Sam returned two days later for his next lesson.\n\nLinda had been busy at school and hadn't seen him in the interim. She had wanted to keep things low-key after their last meeting but couldn't resist making herself look nice for him. This turned out to be a less than optimal situation when it came to creating a learning environment. \n\n\"Sam...I know what you're doing,\" said Linda, her voice slightly muffled from behind the book she was reading.\n\nThey were sitting on the couch together, but Linda had taken a position on the far end with her back against the arm trying to read while she had Sam building a Hertzsprung-Russell diagram of the twenty brightest stars as seen from the Earth. It was an excellent way to see stellar evolution play out, but Sam was finding it hard to concentrate on his lesson. She hadn't made things easy by putting on a pair of shorts and a t-shirt that fit, hugging her round breasts very nicely. Her makeup wasn't as elaborate as it had been on their date, but it still made her eyes jump out, and her lips look inviting colored a frosty shade of pink. \n\nFor the third time in the last hour, Sam was trying to slide a hand up her calve toward the back of her thigh.\n\n\"I can't help it if you're so distracting,\" he wailed pitifully.\n\n\"You should have your focus on that diagram. They will probably want you to do one on your final.\"\n\n\"Then it's a good thing you won't be in the room for it, or I wouldn't be able to concentrate on that either.\"\n\nLinda smiled behind her book. She didn't want to encourage him, but it was hard to ignore how good all this attention made her feel.\n\nHe grabbed her legs suddenly and yanked her entirely down the couch, so her ass hit his thigh, and she lay prostrate next to him.\n\n\"Sam!\" she giggled as he grabbed her by the waist and lifted her into his lap.\n\nLinda tossed the book aside, giving up.\n\nShe looked down into his handsome face and sighed, \"You're turning into a difficult student.\"\n\n\"I'm sorry to be such a pain. Can you forgive me?\" he asked in a teasing voice.\n\n\"I'll try,\" she replied, putting her arms around his neck and giving him a taste of those frosty lips he had been dying for all night. The kissing quickly escalated, and Linda breathed in sharply, feeling a spark of arousal ignite in her stomach while her young lover rubbed his lips in a slow arc around hers reveling in all that smooth, creamy flesh. \n\n\"You really should be studying...\" she whispered when they briefly parted.\n\n\"I am studying. I'm studying a particularly beautiful part of the universe. Don't interrupt an astronomer at their work,\" said Sam with a wiggle of his eyebrows.\n\nShe tried to push the argument, but Sam cut her off with another kiss. This one much more profound and involving his tongue. Linda's willpower started to crumble under the passionate assault, and she soon found her shirt off on the floor and Sam's mouth all over her breasts after he yanked down the cups holding them captive.\n\n\"Jesus! Sam! You know just how to turn me on!\" she moaned while he feasted on her swollen nipples, teasing the hot pink knots with his teeth. \n\n\"I love to kiss your breasts, Linda. They are so sweet.\"\n\nThe way he was sucking and kneading her mounds started to drive her mad with the urge to feel him inside her again. She stood up from his lap long enough to unbutton and remove her shorts and panties before making Sam lay back and raise his hips to do the same. His shorts were tight enough that his underwear came off with them, his fat, hairy, young cock slapping on his stomach as they came free. Linda bit her lower lip, the spark inside her rapidly fanning into a flame. She kissed her way up the inside of Sam's thigh, making him groan and shift on the couch when she got close to that stiff pole between his legs. He let out an explosive breath when she licked it from balls to tip, slowly running her tongue around the pulsing head. The slightly musky smell just turned her on all the more, and she paused to tickle the underside of it with slow, rubs from the flat of her tongue.\n\n\"Christ Almighty, Linda! Ah! That feels good!\"\n\n\"Yeah...Do you like the way I play with your cock, Sam?\"\n\n\"Yes...so much.\"\n\nHer heart raced, body trembling, her excitement feeding on his and building ever higher. Sam's cry of pleasure sounded loudly in the room as she engulfed his warm prick in her mouth, letting it sink toward the back of her throat. It tasted so good, the thick veins massaging the insides of her cheeks while she made her mouth slide along its length. He put one hand on the back of her head while using the other to hang on to the couch. His cries got even louder.\n\n\"Ah! Dammit! Linda! You're making my balls scream! Ah! FUCK! Yes...Ah! Damn, Baby!\"\n\nLinda touched his sack with her free hand, the one not stroking his cock in tandem with her sliding mouth. They were so hard, surging against her fingertips. He was close.",
        "\"Linda! I...can't take much more!\" he warned her, but she was already well aware of that fact. \n\nIt didn't slow her in the slightest.\n\nIf anything, she was suddenly possessed by the need to bring him off, to make him feel as good as he had made her feel these last few days. Her head moved faster, Sam's cock making wet noises as it slid so quickly between her lips, his moans getting desperate, body thrashing on the wide couch.\n\n\"Linda! LINDA! Ahhhh! Goddddd!\" he cried, back arching off the cushions.\n\nThe head spewed his semen like a warm fountain, thick and sticky down her throat. She swallowed it frantically, but the sheer volume was beyond her long-dormant cock-sucking skills, and she had to pull away, letting her hand milk the rest of his spunk from the tortured balls that contained it. Sam clenched his teeth, face a painting of lust and ecstasy while his cock jerked and shot pearly-white ropes into the air that came down on his stomach. \n\n\"Cum for me, Sam! That's a good boy! Shoot all that hot cum!\" coaxed Linda.\n\nHe sank back to the couch, panting and shaking, finally opening his eyes to see Linda naked between his legs still holding his penis and grinning.\n\n\"You look so silly when you're having an orgasm,\" she said, laughing.\n\n\"Oh! Do I? Next time I'm filming your expression so you can see how silly you look!\"\n\nLaughing with her, he pulled Linda back into his lap, kissing her hungrily. Amazingly, his cock was still mostly stiff, rubbing on her stomach while he squeezed her ass in his strong hands. Linda groaned and shifted in his arms when he got a hand between her legs and started to play with her slippery, wet pussy.\n\n\"Damn...You're soaking.\"\n\n\"Sam...\" she gasped, writhing on his probing fingers.\n\nThe next thing she knew, he had her bent over the coffee table, and his thick cock, fully revived in record time, was slipping into her. Sam held her hips tightly, driving himself into her body with a steely determination that made Linda shake with the force of each angry thrust. His thighs smacked on her heart-shaped ass, and her cries mirrored his of moments before. The was no fighting the orgasms as they took her sanity in a seemingly endless parade. She came multiple times, pussy gripping onto Sam's pole and squeezing it. The power of her release was too much. Her knees gave way, and Sam had to bear her weight to the floor where he held her close to him while she trembled.\n\n\"Oh...Sam...that was so good...\" she said softly, kissing his hand and holding it to her face.\n\n\"Still think being my girlfriend is a bad idea?\"\n\nShe let out a small laugh and cuddled closer to him.\n\nAfter their unexpected break, they were both hungry. Linda wanted to make a sandwich in her kitchen, but Sam insisted they go out to a sandwich shop that he claimed had the best B.L.Ts in four counties. Though she wasn't happy about being seen together in town, she reasoned that no one would think it was a date or something since they were so dressed down. Sam drove, and at first, she was happy they had come. The sandwiches were excellent, the bacon nice and crisp. The company was even better, and everything was going along wonderfully until the bell over the door rang, and Jennifer Masterson with her girlfriend, Wendy, walked in.\n\nThe two girls stopped, Jennifer, raising an eyebrow at seeing Sam and Linda sitting together at a table.\n\n\"Shit,\" whispered Linda under her breath.\n\n\"It's fine,\" soothed Sam quietly as Jennifer and Wendy came their way.\n\n\"Hi, Sam and...I'm sorry. I forgot your name?\"\n\n\"It's Linda,\" said the older woman, trying to put a smile on her face.\n\n\"Linda. I remember you from the mall. The lady with the sweatpants.\"\n\n\"That's me,\" said Linda, trying to force some cheer into her voice.\n\n\"What are you two up to tonight?\" asked Jennifer.\n\n\"Nothing...We were just taking a break from studying. I'm helping Sam get ready for his astronomy final,\" offered Linda.\n\n\"He mentioned you were tutoring him. That's so nice of you,\" said Jennifer.\n\n\"It's my job,\" she said with a shrug.\n\nJennifer leaned closer to Sam putting a hand on his arm that Linda instantly wanted to slap away. The smell of her strong perfume pervaded the table and made Linda wrinkle her nose.\n\n\"You know, Sam. There is a party this Friday at the Kappa Zeta house. I thought we should go together?\"\n\nSam eyed Linda from across the table, opening his mouth to answer, \"I don't...\"\n\n\"He would love to go,\" cut in Linda.\n\nJennifer looked back and forth at the two of them with a confused expression.\n\n\"Is that right, Sam?\"\n\n\"Um...Yeah, sure,\" he said slowly, never taking his eyes off Linda.\n\n\"Awesome! It's a date! I just got this new dress for it that I know you're going to love,\" said Jennifer suggestively, making Linda fight not to throw up her sandwich.\n\nThe two girls left the table to order their own food while Sam and Linda cleared their plates into a nearby trash receptacle and quickly left.\n\nSam waited until they were in the car to speak up.\n\n\"What the Hell was that all about?\"\n\n\"What do you mean?\"\n\n\"Don't plead ignorance with me, Linda. Why did you answer Jennifer for me?\"\n\n\"Because I knew you were about to tell her to go away. I got the sense that she was already putting two and two together. If you had looked at me and then told her you didn't want to see her, she would have known something was going on.\"\n\n\"I think you're paranoid. I can't imagine Jennifer would have tripped to the fact that anything is going on between us because I turned her down in front of you.\"\n\n\"Then you don't know women as well as you think.\"\n\nThey drove in silence for a few blocks, but Sam was still fuming.\n\n\"Why bother with hiding it? If I had just told her then word would get around.\"\n\n\"I'm not ready to deal with that yet, Sam.\"\n\nSam slowed the car, pulling into an empty parking lot.\n\n\"Are you ashamed to admit you have feelings for me?\" he asked, putting the car in park.\n\n\"No! That isn't it at all. It's just...I told you this confusing for me. It's been so long since I felt about anyone this way, and there are complications with you being so young.\"\n\n\"I knew you were going to try and make a deal out of that. I'm nineteen, in two more months I turn twenty, and that still doesn't matter because either way, I'm an adult. I can make up my mind about who I want to spend time with and who I don't. My age shouldn't be an issue.\"\n\n\"I'm willing to bet your father won't see it that way, and neither will a lot of people in this community. I have to live and work here. Then there is the simple fact that you're going to be going off to Whitmore at some point, that's the other side of the country.\n\nSam looked unhappily out the window, \"I don't have to go. I told you that it was my dad's dream. I would be just as happy at Hampton.\"\n\n\"Hampton is an okay school, but with a business degree from Whitmore, you could write your own ticket! You would be foolish not to take that opportunity.\"\n\n\"What if I would rather stay here and be with you?\"\n\nLinda rubbed her hands together, a nervous habit she could never break. \n\n\"I couldn't live with the thought of you giving up an opportunity like that for me.\"\n\n\"You would want me to go?\" he asked, stopping her hand-wringing by putting one of his over hers. She swallowed, just the contact of their skin making her shudder inside.\n\n\"It would be for the best,\" she lied.\n\n\"The come with me.\"\n\nLinda shook her head, \"Even if I wanted to do that and could find a job back there, Whitmore is where I came from, it's where Greg and Gina are, I couldn't...I'm not ready to face them.\"\n\n\"After nine years?\"\n\n\"You don't know what it was like I...I'm just not ready.\"\n\nSam put his hands back on the wheel and started the car.\n\n\"You want me to take that date with Jennifer?\"\n\n\"I'm just trying to do what's best for you. What's best for both of us.\"\n\n\"This is really what you want?\"\n\nLinda tried to make eye contact, but Sam was looking straight ahead, refusing to meet her gaze.\n\n\"Yes,\" she said finally, but it was hard to put any conviction in her voice.\n\n\"Fine,\" he said, putting the car in gear and taking her home. \n\nSam dropped her off in front of her house and left without another word. Linda could only watch him drive away in silence, not able to find the words herself to express how she felt. When she finally went inside, she sank onto the couch where just hours before she had been feeling on top of the world. Now she felt a far darker weight settling over her, and tears were soon tumbling down her cheeks, washing away the makeup she had so lovingly applied.\n\nThe next few days were terrible for Linda. She constantly thought about her last conversation with Sam and the look on his face when he drove away. When Friday came, she picked up her cellphone multiple times, wanting to call him and tell him not to go on a date with Jennifer, that she had been wrong about the whole thing. In the end, Linda stopped herself each time and sat the phone back down. \n\n\"I can't be selfish about this...\" she told herself, but the thought of Jennifer touching Sam's body was almost physically painful, and she barely slept that night.\n\nSam sent her a message that he was sick the next time they had a lesson scheduled, and she was too busy getting ready for finals to meet with him the week after. When they finally did get together for one last exam prep, Linda decided they didn't need the distraction, and she carefully avoided bringing up Jennifer or their conversation in the car.\n\n\"I think you're as ready as I can make you, Sam,\" she said, noting how he seemed distant tonight, not the playful young man she had gotten to know. \n\nShe had joined him on the couch after spending the last few hours pacing in front of him, holding a textbook open in her arms. Sam tensed when she touched his shoulder, and she withdrew her hand, wondering what he was thinking.\n\n\"You can't have it both ways,\" he said at last.\n\n\"I'm sorry. I wasn't trying...\" she stopped herself, realizing that wasn't true.\n\nSam shifted on the couch, looking into her sad eyes.\n\n\"If I get through tomorrow, it's going to be because of you, and I will always owe you for believing in me. This thing between us, though, if you won't fully commit to it, then it's just torture for me. I want you to be in my life, not part way. I want you to be mine, and I would stay here to have you be the girlfriend I want.\"\n\n\"We talked about this, Sam.\"\n\n\"So, we did.\"\n\n\"You know why it won't work.\"\n\n\"Why you won't even try? I do know that, and I thought I was the one who lacked conviction.\"\n\nHe got up abruptly and left. Linda did nothing to stop him even though every bone in her body screamed at her to get up and chase after him. \n\nSam texted her two days later, a single short message, \"93 - Thanks to you.\"\n\nLinda smiled at her phone, more proud of him than she could say and missing him even before he was gone.\n\nSam checked his watch as soon as he heard the doorbell ring. His friends weren't known for their punctuality, but for once, they were right on time. \n\nThe party had been his dad's idea. A proper send-off for his son out into the bigger academic world of Whitmore University. The decision to leave early so he could attend the summer session had also been his dad's. It did make sense, go now, and get acquainted with his new school during a more relaxed time before the real work crunch started in the fall. The downside was that it took him away from Linda, away from any chance they would resolve their feelings for each other. \n\nHe had made sure his dad invited her to the party, but she hadn't sent back an R.S.V.P., so it was no sure thing that she would attend. \n\n\"Sam! Your guests are arriving!\" called his dad from downstairs.\n\nSam sighed. He was in no mood for a party.\n\n\"Coming,\" he called back.\n\nHis dad had gone all out, that was for sure, having the event catered with all the party foods a young, hungry crowd could want and then some. Sam saw Miles loitering by the shrimp, devouring the tasty treats with shotgun rapidity.\n\n\"Save some room for dessert,\" joked Sam, smacking his friend on the back.\n\n\"I can't help myself, Man. These shrimp are delicious. What kind of sauce is this on them?\"\n\n\"I have no idea.\"\n\nMiles licked his fingers, looking like a little kid.\n\n\"It looks like your dad invited everyone you know or have even heard of. This place is packed!\"\n\n\"I know. We had a good turn out,\" said Sam with zero enthusiasm.\n\n\"I don't see Jennifer.\"\n\n\"She and I aren't speaking anymore.\"\n\n\"Wait! What? I thought you were headed for some loving from that girl. She talked about you incessantly when we were all in Fort Lauderdale,\" observed Miles, confused.\n\n\"Things changed. She got mad at me for breaking a date with her to the Kappa Zeta party.\"\n\n\"Why would you do that?\"\n\nSam looked away. He trusted Miles, but out of respect for Linda didn't feel like he could tell him the real reason.\n\n\"I just wasn't feeling it.\"\n\n\"What's not to feel? Jennifer is hot, and she was totally into you!\"\n\n\"I know. There was just something missing. I didn't feel that spark.\"\n\n\"This is some turnaround. You talked about her all the time before spring break.\"\n\n\"What can I say? I changed my mind.\"\n\n\"You're nuts. That girl was amazing. Did you not see the bikini photo I sent?\"\n\n\"It's not all about what a girl looks like half-naked, Miles.\"\n\n\"Since when?\"\n\nSam was spared further, explaining by the timely intervention of his father. It was probably one of the few times Sam had been happy to see the older man's face.\n\n\"Sam, this was left at the door for you,\" said his dad, handing him a square, cardboard box. \n\nThe note on top was in Linda's handwriting.\n\n\"Thanks,\"\n\n\"Who sent you a gift?\" asked Miles.\n\n\"Just a friend,\" said Sam quietly as he moved away.\n\nHe took the box upstairs, shutting out the noise of the party going on below.\n\nThe small envelope opened easily, and he slid out the card. Typical of Linda, the note was short and to the point.\n\n\"Sam, thanks for being the perfect student. I think I learned just as much from you as you did from me. I see the world and myself in a much different light. Good luck with your studies at Whitmore. I know you will do great things. In the box is a small gift from one astronomer to another, never stop looking at the skies. I know you will always see the beauty in everything. Take care, Linda.\"\n\nSam tossed the card aside, disappointed that she hadn't shown up or at least written something more personal. Perhaps things really were over before they ever started.\n\nThe box held a pair of binoculars, she had been smart enough to know he wouldn't have room in his dorm for a telescope, but these were wide-angled for viewing the sky.\n\nHe held them in his hands, fancying that he could smell a hint of wildflowers.\n\nEpilogue -\n\n\"You sure packed a lot of shit,\" said Derek Armstrong.\n\nSam looked up from the box he was rummaging through. Derek was his new roommate at Whitmore. A tall, athletic fellow with curly black hair that reminded him of a professional soccer player he saw once on a box of Wheaties. He was standing in the doorway of their cramped room watching as Sam tried to find places for all his stuff.\n\n\"Oh, Boy! Are you going to use these to spy on the girl's dorm?\"\n\nDerek had snagged the pair of binoculars that Sam had placed on his bed while he got up to put away a stack of shirts.\n\nSam came back across the room, snatching them out of Derek's big hands.\n\n\"These are wide-angle lenses for star viewing,\" he explained, \"and I don't want them broken.\"\n\n\"Fine, I was just going to look! Touchy!\" said Derek.\n\n\"Sorry. They are kind of sentimental too. I got them from a special friend.\"\n\n\"I get it. Hey, I was going downstairs to get a soda. You want one?\"\n\nSam said sure, and Derek vanished out the door. It was hard to stay angry with the gregarious giant, Derek seemed to take everything in stride and never showed anything in the way of a temper. Sam could have done much worse for a roommate. \n\nHe broke down the last box so he could take it to the trash bins later. School had already started, and he was just now getting to the last of his unpacking. This box had sat in the corner of his room for weeks partly because he had plenty of shirts and partly because he couldn't bring himself to look at Linda's present. It still bothered him that she hadn't even been able to bring herself to say goodbye.\n\n\"They were all out of root beer, so I got you an orange soda,\" said Derek upon his return.\n\nSam sat the can down on his desk.\n\n\"Also, some lady is looking for you down at the reception desk. I told the attendant I would let you know.\"\n\n\"A lady?\"\n\n\"Yeah...She looks like she could be your mom, and if she is, I say you should consider incest because she is smoking hot!\"\n\nSam was rushing passed the bigger man before his crass joke had even registered. The elevator was too slow, and Sam took the stairs two at a time until he crashed through the fire door and into the lobby of his dorm. The loud opening of the heavy steel door caught everyone's attention, but he could have cared less. His eyes took in the only thing in that lobby that mattered to him. \n\nLinda couldn't meet his gaze at first, keeping hers on the floor, as bashful as a girl on her first date. Sam took a deep breath, trying to stop the shaking of his hands.\n\n\"Hi Sam,\" she said nervously.\n\n\"You didn't come to my party.\"\n\nHe hadn't meant to lead with that, it just came out, and the way her face fell, he wished he could have taken it back.\n\nLinda nodded, \"I know. I couldn't. It would just have been too hard to watch you leave and not be able to...to touch you the way I wanted.\" \n\nSam tried to take in everything about her as if he hadn't seen her in years instead of just a few months. She had cut her hair shorter, so it framed her face more naturally, putting in some layers to make it fall gracefully around the sides. Her makeup skills were continuing to improve, and she had her eyes popping, such a striking shade of green he couldn't stop looking into them. When she smiled, her perfect lips, tinted with just the right shade of lipstick glistened in the bright lights. The outfit she wore was casual but nothing like her old sweatpants and t-shirt collection. The gray blouse was cut low enough to give a hint of her firm breasts, and the skirt rode up to her knees. \n\nShe was even more gorgeous than he remembered.\n\n\"What are you doing here?\"\n\nHer hands started to rub together, and she looked away. Sam came closer, stopping her hands by taking one in each of his.\n\n\"What are you doing here, Linda?\"\n\n\"I missed you. I tried to pretend like it wasn't bothering me, but I missed you, Sam. I missed the lessons, the nights at the telescope, and every moment we spent together. Mostly, I missed just being with you. I tried to hide, but you're right. It's a child's game and only fun when someone comes looking.\" \n\n\"I wasn't hiding,\" he pointed out.\n\n\"I know. I came looking anyway.\"\n\nSam smiled at that.\n\n\"I'm glad to see you. I missed you too, Linda, more than I can say.\"\n\nHer body relaxed finally as if a weight had been lifted off her shoulders.\n\n\"I was afraid you wouldn't want to see me after the way we ended things.\"\n\n\"There was no chance of that happening.\"\n\nLinda's eyes teared up, and she suddenly looked desperate and lonely like the first night she had opened up to him.\n\n\"Sam?\"\n\n\"Yes?\"\n\n\"Would you please kiss me?\"\n\nShe didn't have to ask twice. He scooped her into his arms and kissed her with all the passion he had been harboring inside since they had last parted, stealing her breath away. They clung to one another, making a bit of a spectacle of themselves until some student walking by said, \"Get a room!\"\n\nThey parted, looking around, red with embarrassment at the busy lobby of people.",
        "\"This probably isn't the best place for a reunion.\"\n\n\"We'll have plenty of time for that,\" she said.\n\n\"Oh?\"\n\n\"I'm not going back. I was planning on staying in town and looking for work. It's a college town, and I'm an alumnus. I'm sure I can find something.\"\n\n\"Seriously?\"\n\n\"Assuming you still have an opening for a girlfriend? I was rather hoping to apply.\"\n\n\"Oh, Linda. That's one job you're guaranteed.\"\n\n\"I know you're busy, and I have to find a hotel. Can we meet later for dinner?\" she asked hopefully.\n\n\"Absolutely. I can't wait.\"\n\nLinda came in for another hug, loving the feel of Sam's body on hers once again.\n\n\"What about your family?\"\n\n\"One hurdle at a time, but I'm not afraid of you meeting them. I'm done being afraid of Gina.\"\n\nShe touched his face and risked one last kiss.\n\n\"I'll see you later.\"\n\nSam watched her walk away, unable to keep a huge grin off his face. When he turned around, he found Derek standing just outside the fire door with his arms crossed, looking surprised, and raising an eyebrow.\n\n\"You realized that incest thing was just a joke, right?\"\n\n\"It's okay, Derek, that wasn't my mother,\" laughed Sam patting his roommate on the shoulder.\n\n\"Older sister? cousin? Hey, I don't judge.\"\n\nSam shook his head, and when he answered he loved the way the words sounded, \"That, Derek, was my girlfriend.\""
    ],
    "authorname": "darkoverlord6",
    "tags": [
        "hot oral sex with older woman",
        "mature romance",
        "may december romance",
        "older teacher",
        "older woman",
        "romance with a student",
        "sexy teacher",
        "teacher and student have sex",
        "younger man",
        "second chance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/a-tutor-for-samuel"
}