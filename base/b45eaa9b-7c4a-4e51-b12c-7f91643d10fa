{
    "title": "Summer Solstice Ch. 03",
    "pages": [
        "Riley:\n\n\"So how was your day?\"\n\n\"Long and tiring. My tire popped on my way home from work so I had to call for roadside help and they took 2 hours. Had I known it was going to take so long, I would have called Tony or my brother.\"\n\n\"I'm sorry maybe you should go take a bath and relax\" Maybe I can join you and we can make sweet love. Or I should just get over you like I said I would.\n\n\" 'Riley are you home?' \" Shit I haven't told her about Dayanara. \"Yea Daya on the terrace. Hey Katey give me a second.\"\n\n\"Sure.\" \n\nI covered the phone hoping to not let Katey hear. \n\n'Hey I just have to finish with my friend on the phone and I will be right back for dinner, okay?'\n\n'Okay don't be long the food's gonna get cold. Can I get a hello kiss?' I gave her exactly what she wanted, a simple kiss that I sometimes forgot about. It was just a simple kiss with our lips parted enough to be sensual.\n\n'Better.'\n\n'Mmhmm hurry back.'\n\n\"Sorry, I'm back.\"\n\n\"It's ok. Why don't we talk some other time when you don't have company, I don't want to keep you.\" It wasn't even jealousy, truthfully, it just sounded like sadness.\n\n\"Yea for sure how about tomorrow before church.\" I tried to play it off being cheerful.\n\n\"Ri?\" No just let it go don't ask. \n\n\"Yeah?\"\n\n\"Is that your girlfriend?\" Why does it matter we're only friends right. You have no right to ask.\n\n\"She's a girl that is a friend that I am seeing.\" Well that was clear and concise. Take the bait, I have moved on and you should too. \" 'Food's ready.' \" \n\n\"Oh, um...what's her name?\"\n\n\"Dayanara.\" The phone went silent. I hope she can forgive me.\n\n\"I should let you go Ri.\" In so many ways my love. \n\n\"I'll call you tomorrow. Have a good night.\" \n\nMy love please move forward and forget about us. \n\n\"Thanks you too.\"\n\nAfter six months of pretending that we were just friends, all my emotions just came crashing in on me. She's hurting and I know it. But she had her chance, now I have to move forward. \n\nDaya and I are just friends who have been hanging out for the past 2 months. She's a nurse I met 2 months ago when I almost chopped of my finger cooking. I was daydreaming about Katey, when I almost sliced of my index finger. \n\nShe was working in the ER at New York-Presbyterian Hospital, which is 3 blocks from my pent-house. I live in Washington Heights, some people call it sketchy but I grew up around cholos (hispanic gangsters) in LA, I could care less, I can take care of myself. Since I moved in 10 months ago I haven't had any trouble. I think it's actually getting better. \n\nThis place is perfect for me since I love the outdoors. Growing up in LA, I was used to having a backyard and a front yard. Here, I actually have two outdoor terraces and my own roof where I can BBQ and enjoy the view of the city and the Hudson. All the kitchen appliances are new and stainless steel, my favorite. I also have a jacuzzi in the master bath, as close as I'm gonna get to the beach for now with my busy schedule. Only reason I was so willing to move in was because the whole building was just recently built and has all new amenities, most importantly state-of-the-art security. \n\nThe ER wasn't too busy that night and I went right in. I had been in a muscle shirt when I cut myself, so I just threw on a coat. She asked me to take it off so she could have more room to work on my finger. In that moment I realized with the coldness of the ER, that I was in a tight white shirt and no bra. She laughed and asked if I always went out in wife beaters. I was slightly embarrassed but she was so easy to talk to. \n\nShe was actually the one who asked me out and I had no reason to say no. She was sexy, even in her medical scrubs. She had long dark brown hair, light green eyes and a Puerto rican booty, on a petite frame. Since then we've seen each other about once a week considering our busy schedules. She knows about Katey because I have pictures around my place from my birthday. But what she doesn't know is that I'm hopelessly in love with her. I kept that to myself since it may be a signal to run away. \n\nTonight she had the night off and we're supposed to watch a movie and have dinner. Although I forgot to get the movie, so pay-per-view it is. We settled on From Paris with Love. \n\n\"Was that Katey?\"\n\n\"Yea.\" I know she's been dying to ask me about her. She knows we're the \"best of friends\" since we talk everyday. \n\n\"So I'm a friend that you are seeing?\" Damn I guess she heard. We have yet to define ourselves. We haven't gotten physical, you know sex. Not for the lack of interest, but I don't want to rush into anything. She's very honest about how she feels, that's what attracted me to her. \n\n\"Um yea, I don't know what we are. She asked if you were my girlfriend but I don't know if you want that.\" She turned to face me on the couch. I had my head down. Honestly I wasn't ready for commitment, not that I'm a player but I guess it's guilt. The guilt from being in love with someone else.\n\n\"What do you want from this?\"\n\n\"I like spending time with you.\" She lifted my chin so she could look into my eyes.\n\n\"I like spending time with you too.\"\n\n\"But with you and I both going to school and working, it's hard for us to even find time to spend with each other.\" She's going to med school. \n\n\"But you do like spending time with me right?\" She had a suspicious look on her face. \n\n\"Of course. You're a lot of fun.\"\n\nShe came over and straddled my hips.\n\n\"Then let's enjoy each other's company.\" She kissed me with hunger and a carnal lust came over her that I had never seen, I was ready for her. I picked her up and took her to my bedroom and forgot about dinner.\n\nIt wasn't about love or being tender, it was primal and animalistic. She had taken off her shirt down the hallway, when I set her on my bed I took mine off and she took off her shorts. It was the start of summer and we were getting hot. \n\nShe removed her thong as she was not wearing a bra and started tugging at my jeans to got them of along with my boy shorts. Soon enough we were both on the bed all over each other. I wanted her and she wanted me. \n\nI grabbed both of her arms and held them over her head as I went to bite her breast. I know she likes it rough from conversations we've had. I am more than willing to follow that, I want it to be nothing like what Katey and I had. Fuck, I have to get her out of my head.\n\nI bit and pulled her nipple out as far as it could go while looking at her as she watched me. She was smiling and nodding in approval. She began grinding herself against me as she was between my legs. I let go with one of my hands, rubbing her cleanly shaven mound, cupping it and teasing her. \n\n\"Just take me don't fucking tease me.\"\n\n\"How do you want it?\"\n\n\"How ever you give it to me.\"\n\n\"Good.\" I slid my finger inside her and pulled out, leaving it in only long enough to get her started then I licked it clean. \"Nice.\" \n\n\"There's more where that came from.\" \n\nI went back in with the same finger in and out then added a second as she groaned from the pleasure. \"Just like that Riles.\" I brought my knee up to the back of my hand and thrusted into her, slowly as I pulled my fingers in and out. \"Fuck Riley harder, more.\" I put in another finger and thrusted harder and further, as she brought up her thigh to my sex.\n\n\"Uuhhh.\" I wanted release, I wanted her.\n\n\"Cum with me Riley.\" She brought down her free hand between my thighs and went inside of me. First two fingers then three I was more than full. I couldn't look at her, there was one person whose eyes I longed to see and those were thousands of miles away. \n\nWe thrusted inside of each others willing bodies and within a few minutes she started shaking, grinding harder against my body. She was ready to cum and I was going to make it happen. I thrusted harder matching her rhythm. \n\n\"Fuck. Oh GOD yes.\" She reached her height and her juices on my hand sent me into orbit as I fell onto her body and bit her nipple extending her orgasm. Just as she started catching her breath, she tried to say something and had to stop to let a moan escape her body, as I was not ready to stop. \n\nI started the thrusting and used my thumb to go for her clit. We stayed there as a second orgasm came through her body, harder than the first. I had stayed away from her clit knowing that the delayed attention would either give her a second orgasm or prolong the first. This was definitely a separate one and I was more than happy to enjoy the view. A woman in ecstasy and the peaceful bliss in her face was breath-taking. I loved women.\n\nWhen she was spent, I started pulling out my fingers from inside her and she did the same as I rolled onto the bed on my back. She had other ideas. She grabbed my fingers and licked them clean, putting hers to my lips. I sucked them in, more than happy to clean up my mess. \n\nShe smiled and crawled on top of my body. I thought she wanted to rest and just lay in bed. I wasn't much for spooning or cuddling when it was just sex but I would give a woman whatever they wanted after sex, if it meant getting to do it again. She on the other hand had different ideas.\n\n\"You know we never had dinner.\" An evil smile crept up her face. \n\n\"What do you want to eat?\" I knew full well what she was hungry for.\n\n\"Pussy.\" She bit right into my mound. Sending a shock wave through my body. I was still very sensitive. I let go and she had her way with me. She started by going up and down my slit with her tongue. Only peeking into my lips, opening my legs wider for her to enter me, she laughed and pulled away.\n\nShe is going to prolong this and I have no choice in the matter. I have a sexy woman between my legs pleasing me, I'm more than happy to comply. \n\nShe walked her right hand up my stomach to my breast and she started kneading my nipples. I arched my back pushing my breast up to meet her hand. I wanted everything she was willing to give me. Soon enough her tongue thrusted inside me as her other hand played with my clit. \n\nI was gone and cumming all over her face, she was lapping up all the juices more than eagerly. She kissed me down from my amazing high and then kissed her way up my body. \n\nI kissed her face tasting myself on her. She pulled away and rolled onto her back on the bed next to me.\n\n\"I hope you had fun.\" She was smiling, breathing heavily.\n\n\"Oh honey I'm still having fun.\" I turned her onto her stomach and kissed my way down her back, lifting her hips off the bed so she was on her knees. Then I was on my back and slid between her legs, she propped herself up onto her elbows. I started licking the juices that were trickling down her thigh. I could feel her legs shaking in anticipation. I slowly worked my way to her awaiting treasure. \n\nWhen I arrived she was nice and wet for me. I wanted to give in to her tantalizing sex, the aroma only a woman can release.\n\nBy the end of the night we had over a dozen orgasms between us and yet the only thing on my mind when I closed my eyes was Katey. How I wished it was her in my arms right now. I hate myself for being in the presence of another woman thinking of her. \n\nI have issues.\n\n*******************************\n\nKatey:\n\n\"I should let you go Ri.\" You need to be free to enjoy your life without me. \n\n\"I'll call you tomorrow. Have a good night.\" \n\n\"Thanks you too.\" \n\nI wanted her to find someone and now she has, I hate myself for letting her go. I think I should just leave her alone and never look back. Make an exit from her life and let her find her happiness. If we always talk it just prolongs our love for one another. What if she's already forgotten that love, what if I'm the only fool still left. \n\nThen I guess it doesn't matter to her if I leave or stay. I should stay considering how much I still need her in my life. I know it's selfish but it's love. \n\nI wanted her to now how I felt, but I had no right to force my feelings on her. I sat and wrote her a letter, a letter that she would never get.\n\nTo the love of my life,\n\nI'm sorry for not being strong enough and for all the times I have failed you. I hope that one day, in this lifetime or the next I will find you. But even if we met again in this life I don't know if I would be ready.The only thing I know for sure is that I love you more than my own life, even though I don't show it. In the little time we have been together, you were my soul, my light and my journey, without you, this life makes no sense. \n\nThe emptiness inside me is killing me, but that's not your problem. You will never again have to worry about me because I already feel dead without you. You took my being and my heart with you. You left me empty, an emptiness that no one will ever be able to fill..........\n\nThe summer's almost over. I had hoped to visit Riley to celebrate my new degree, and maybe just maybe, you know be summer lovers, but that isn't fair to anyone. I decided to stay away and let her and her new friend try to be together. She was so happy for me, as if she wasn't amazing enough, she had 2 dozen red roses sent to me, a box of chocolate covered strawberries and bottle of champagne. I cried myself to sleep that night, her gesture was amazing but I didn't have her with me to eat the strawberries or toast with. \n\nAnother date, another weirdo who allows my father to set him up with his daughter. Sometimes I wonder what's wrong with these guys that they can't get their own dates. Then again what's wrong with me that I go along with these dates. \n\nThis one isn't half bad he's actually a good conversationalist. The difference is he knew from the time we met at the restaurant I didn't want to be there. So we took it as a bad date from the start and found that we had a few things in common. He'll make a good friend. We exchanged numbers for the sake of keeping my commitment with my father. \n\nI have to fly out to Puerto Rico with my mom this weekend. My grandfather died two years ago and since then they've been looking for the paperwork to his properties to change the names. They finally found them so mom is going to sign them over to her sister who still lives there. She needs them more than my mom. I want to see Riley, actually I need to see her. So I'm going to call and beg her to spend time with me, sad and pathetic I know.\n\n\"Hello.\" Crap time difference, she sounds sleepy.\n\n\"Hey Ri, I'm sorry I forgot about the time difference.\"\n\n\"It's ok Katey, how are you? I didn't hear from you today.\" I remember waking up next to her when she sounds like this. She's so cute she always covers her face because of morning breath. \n\n\"I know, I was busy with my mom all day. That's why I'm calling. I'm flying to Puerto Rico and since I was going to be on your side of the country, I was thinking of visiting you for a few days.\"\n\n\"I would love that. I'm in need of some time off from work. When are you coming so I can make arrangements?\" \n\n\"The first week of September we leave on the first and I was thinking I would be there on Saturday morning, the fourth, and leave Tuesday morning since Monday is a holiday. We would have 3 days together. What do you say?\" I am way too excited, I have to remind myself that she's seeing someone. \n\n\"Perfect, I can't wait thanks for thinking of me.\"\n\n\"I'm always thinking of you. Oh shit I'm sorry I didn't mean to....\"\n\n\"It's ok, relax you're human I get it.\" Her tone was so gentle and soft.\n\n\"Anyways I'll let you go back to sleep, call me tomorrow and we can make plans.\"\n\n\"Ok good night hun.\" \n\n\"Bye\" Lover. The line went dead. \n\nIn 6 days I will be face to face with her and I better control my big mouth and my body for that matter. \n\nMy new friend asked to hang out tomorrow, it'll help keep my mind off Riley. So LACMA it is. Museums are good because you find something to talk about all over the place, it avoids awkward silences. He's not such a bad guy and it's nice to have some company when I've been alone for so long. \n\nOur day went well, he's such a gentleman, opens my door, waits for me and walks behind me to let me go ahead. It's rare to find someone who has manners in this day and age. He's an investment broker. Thankfully he doesn't like to bore me with all the details of his job. I really couldn't care less for it, I do all my own investing. \n\nI've only had a few conversations with him but he's definitely not one of the old-fashioned types. Which is weird since he's a guy I was supposed to marry according to my parents. Truth be told though, no matter where I am, where I'm going or who I'm with the only thought on my mind is Riley Collins. Even after a nice day with him I can't see myself with him that way, the way my parents want me to. Yet he's probably as good as they will get.\n\nMy life is an interesting predicament. If I marry him I'll be unhappy for the rest of my life. If I let Riley go we will both be unhappy for the rest of my life. If I don't marry a man soon my parents will be unhappy. So I have a decision to make whose happiness matters to me. Only one person's actually.\n\nFrom the time I spoke to Riley, to the day I left for my trip, it felt like an eternity. Then when we finally got to Puerto Rico, I didn't even get to enjoy my time in my mom's hometown. We were so busy with lawyers and papers that I barely got to enjoy the food, I didn't even set foot on the beach. I had hopes that I would one day get to show this place to Riley.\n\nI would come here when I was a kid with my parents and my mom always made sure to give us the history. I always thought I would share this place with my husband. Truth be told, the only person I want to share this with now is the love of my life, Riley. I will bring her here one day after all we are friends and friends can travel together. Right?\n\nThe only good part about being so busy on this trip was that Saturday came quickly. Riley has a company car, with a driver, so she offered to pick me up. She asked if I wanted to stay with her at the loft, but we can't be in the same house together. I doubt either of us has that much self-control, I know I don't. So I was staying at my favorite hotel in New York, The Algonquin. \n\n\"Hey gorgeous.\" She reached out to me and took me into her arms. I am so confused, gorgeous? My stomach has butterflies. \n\n\"Hey Riley.\" I whispered into her ear, because she had pulled me up to her. Oh my goodness her strength over me makes me weak. Thankfully she eventually put me down, took my bags and led me to her car. \n\n\"How was your trip?\" \n\nWe jumped in the backseat of a black Mercedes E class. She asked the driver to take us to my hotel to drop off my bags. It's cute because she's had him for almost a year and she still asks him, she doesn't just tell him. \n\n\"Not bad, it went by so quickly though. I think we should go there someday, I want to show you where my mom's from. I brought you something remind me to give it to you before we leave the hotel.\" She looks so gorgeous in her dress clothes, it's distracting. I can see her neckline and it keeps screaming at me to bite and nibble. Soon enough that neck will be mine, I hope. She's in a business suit because she had to swing by her office before picking me up. It's black with thin light blue pinstripes, a fitted black shirt and black stiletto heels. Black is her power color. \n\n\"You want to take me to Puerto Rico?\" Oops was it too forward or is it because we're just friends or is she afraid of something else?\n\n\"Only if you want to of course.\" She has a smile on her face and was raising an eyebrow. \n\n\"I would love that, maybe once our sexual tension is gone.\" We both broke into laughter and even her driver looked back. I'm glad she broke the barrier by bringing it up.\n\n\"I'm sorry, I hope I'm not overstepping my boundaries but you look beautiful.\" \n\n\"It's ok, overstep whatever you want. I think if we talk about it, it will be better than pretending. What are our ground rules while you're here?\" She was looking down and tracing circles on my hand where the ring she gave me was sitting. ",
        "\"I guess for one keeping our hands to ourselves, we're just friends. You're seeing someone remember so we should be respectful of her.\" She pulled her hand off of me and I was kind of glad. I could feel myself inching towards her to be closer and when she pulled away I was released from my trance. \n\n\"Okay I can do that. So I made reservations for us to have dinner to celebrate Dr. Katerina Pahlavi.\" I know she didn't mean to but she was flirting and I had missed it. \n\n\"So what did you tell your girlfriend about me?\" A part of me needed to know what she never spoke of. By my calculations they've been together for 4 months now, from the little she has told me of her. \n\n\"That my doctor friend Katey was coming to celebrate her new degree. She has to work all weekend so I won't be able to introduce you to her. She's not my girlfriend remember?\"\n\n\"Does she mind me being here?\" \n\n\"No we're not exclusive.\" Wow I hadn't thought about that, this wasn't uncommon for her. When we were at the beach house there was that one girl. So had she not moved on and were they just friends with benefits. Well I guess I don't even know if they have benefits but they are seeing each other and who could possibly resist her sexiness. \n\n\"Oh. Are you afraid to commit to her?\"\n\n\"Nope, just not ready. I don't have much time for anything, with work and school between both of us.\"\n\n\"I see.\" I don't know why I opened this can of worms. \n\nThe rest of the ride was pretty quiet. We got to the hotel and she came to help me to my room. Damn alone with her in a room with a bed a bad idea. I started to unpack looking for her present. Would it be wrong for me to push her up against the wall and have my way with her. Would she mind? Wait damn it, we set up ground rules. \"Found It\"\n\n\"So in Puerto Rico there's a place called Viejo San Juan. The entrance to the city was called the door of San Juan, it was the gate into the city built in 1520. Most of the houses or places have a certain type of door. We would always go there and pick our favorite doors since their colors and decorations were all different. When I was a kid we would go to this place that customized tiny decorative doors for you. They call them 'Las Puertas de San Juan'.\" I handed her a small rectangle in the shape of door, on it it read 'Casa Collins'. (House of Collins.) \"For your loft.\"\n\nShe put her glasses on and hugged me while taking the souvenir. She was hiding the tears but it was too late, I had already seen them. Why does it have to be so hard. Even after 6 months, I can't even begin to feel my love for her diminish. \n\n\"You suck Dr. Pahlavi. You really have a hold on my heart you know that? If I didn't know any better I would send my driver home, take you into my arms and make love to you on this bed all night.\"\n\n\"I shouldn't have come Ri.\"\n\n\"Probably not but you're here now and we have some celebrating to do. Come on let's get away from the bed. You ever seen the city?\"\n\n\"Not really.\" We headed out the door and away we went. \n\nShe took me around her new city, showing me her favorite places and a few tourist spots. Never allowing for a single moment of silence or awkwardness between us. We went to dinner and celebrated with amazing food. I had missed her company and being at peace when I was with her. She made everything okay. Everything that I'm missing in my life is here with her. Midday she had released her driver of his duties and we had taken a cab to dinner. Then we shared a cab to my hotel and she took it back to her place. It was hard to say good bye but we still had two more days together. She had wore me out so much that I slept through the night dreaming of her.\n\n*******************************\n\nRiley\n\n'Casa Collins'\n\nI can imagine us living here together away from her family. Casa Collins & Pahlavi.\n\nI can imagine us being together no matter where we live, but she can't. How long do I have to deal with her until she leaves like everyone else. My mom, when I was 2, my dad went with her and eventually died when I was 16, my aunt when I was 12 and my uncle when I was 10, my best friend/girlfriend/first love when I was 18. I don't know what it's like to have someone stay. Everyone I love always leaves so I can count on that. She will leave it's just a matter of time. \n\nWe've known each other for more than a year and in this year, she flipped my world upside down. I love her and I need her in my life. What if I just asked her to stay with me and showed her that we can be happy together. Nope, the best thing I can do is go to sleep and enjoy the next two days with her and avoid rejection. \n\nI hate my dreams. All night it was movie, after movie of Katey in bed with me and us together. When I woke up I was so turned on and I knew that if I planned on making it through another day with Katey I had to get rid of.... well I had to please myself. 2 orgasms and a shower later I got dressed to meet up with my princess. \n\nToday would be casual, some walking around the city, then her favorite musical, Wicked and a late dinner. I don't know how I'm supposed to go 2 more days with her. \n\n\"Hey Katey.\" MMmm she smells so good. \"Do you want to take a taxi or the subway.\"\n\n\"Hey Ri. Subway. What are the plans for today?\" She came in for a kiss on my cheek and it took every ounce of strength in me not to look for those lips.\n\n\"A surprise. Come on.\" \n\nWe managed to get around the city and have fun together. That's the problem though we get along so well. We went to Ellis Island and the Statue of Liberty. We were able to take more pictures together. It felt so right to hold her in my arms when we took pictures. A couple of times I caught myself holding her a little too close on the boat or in the subway. I don't know if she didn't notice, or she didn't care but we just fit. \n\nWhen we got to the theatre she was so excited. Wicked was her favorite musical. She had seen it once when it was in LA, at the Pantages theatre. She always talked about how she wanted to watch it again someday maybe on Broadway. So here we were outside in front of the theatre with the giant sign \"Wicked\". \n\n\"You're kidding right.\"\n\n\"Nope we have some pretty good seats if I say so myself.\"\n\n\"Why are you so good to me Ri?\" She had the most loving look in her eyes and yet she seemed sad at the same time. \n\n\"You know why, because I am madly in love with you.\" I think after spending such a good day with her and holding in so much, I just gave up. I grabbed her and held her in my arms I gave up fighting my emotions. I want her. \n\n\"Riley.\"\n\n\"I know, I know come on let's just go inside.\" Just as soon as I had started to just tell her how I felt, I gave up. I knew I would never get from her what I needed.\n\nThe musical was really good but I was so distracted. I'm always in control of myself but around her, control does not exist in my vocabulary. I was thinking dinner would be a really bad idea. I wasn't ready to sit across from this beautiful woman and pretend I didn't love her. \n\nWhen it was all over I knew I couldn't keep our plans to go to dinner. I didn't want to disappoint her but I was on the verge of breaking down and just hiding from her to avoid my feelings that were burning to come to the surface. \n\n\"Katey?\" We we're outside of the theatre. She was so happy she had even grabbed my hand and I hadn't noticed. \n\n\"Thank you for being so amazing Ri, I couldn't have asked for a better day.\"\n\n\"No...No...No Katey no.\" Why? Why can't she see that I need her. \n\n\"What's wrong?\" She was concerned and I needed to get away put her in a taxi and send her home. \n\n\"I need space. I want you and I thought I could be here and just be normal but I can't. I'm sorry.\"\n\nShe looked at me for a while as I walked ahead of her, we were only about 8 blocks from her hotel what was the point of waiting for a taxi. I was mad, but not with her, with myself. Why did I insist on being in this position. Finally she caught up to me when we were halfway to her hotel, she grabbed my arm. I had tears in my eyes but I was determined not to cry anymore. \n\n\"Stop baby please just stop.\" I pulled my arm away and continued walking.\n\n\"Why Katey? Will you be here for me when I do. No, you won't. I can't see you anymore. I can't keep doing this. It hurts, it hurts baby it hurts. I'm sorry.\"\n\n\"Pleas stop Ri, stop for me, please, STOP!\" I could hear the tears in her eyes through her pleading with me. So I stopped, right there and she hugged me. I wanted to pull away but I was helpless I pulled her in closer wishing I never had to let go. \n\n\"Take me home with you and we can talk there please.\"\n\n\"We're almost at your hotel. I can't do this anymore. \"\n\n\"I wanna go home with you, please.\"\n\nShe didn't say anything else I got us a taxi and we were home in 15 minutes, my place at least. I was hesitant to let her in but we were already here. \n\n\"This is it.\" She was looking around admiring her surroundings. \n\n\"Really you made fun of my humble abode when your loft is a whole floor in a building.\"\n\n\"Oh um well sorry about that. I guess we both have huge places for no good reason. Katey, why did you want to come here?\" \n\n\"So I could see where you live.\" I had put up my door she gave me next to the door and she was tracing it with her finger. \n\n\"You know I can't resist you.\" \n\nI was still at the door of my own place a part of me thought that she would probably leave soon, the other part hoped she should never leave.\n\n\"I know baby come in.\" I closed the door and went straight for the terrace I needed air. \n\nI stayed out there for a good 15 minutes and she was just walking around my house. Why did I bring her here? What does she want from me? Has she not hurt me enough?\n\nI finally went in to find her and she was just sitting on the couch staring at a picture of us. I sat next to her. \n\n\"You know when I saw you get off the plane I realized I had never seen you look so professional and so stunning. Then we spent time together and you weren't that carefree girl from the beach, you were a woman with a plan. I was so in love with you. I come here to visit and you were in a suit and I wondered how does she always manage to make my heart skip a beat even before she talks.\"\n\nShe paused to look at me, but hell I was still so confused. She looked back down at the picture and started to play with the ring I gave her, she was also wearing the earrings. \n\n\"It killed me when you left the first time. I jumped into my dissertation and work to avoid thinking of you, but it was of no use. Then you came back and asked to be my girlfriend, I melted with your words. I was the happiest woman alive for those 2 weeks we were together. The worst part though, was when I heard that girl over the phone. I hated myself for not being strong enough to be with you. As time went by I realized that no matter how much time we spent apart, my heart was never going to come back to me because it was home with you.\"\n\nShe was smiling and I was still confused. She put the picture down and took my hands in hers. \n\n\"I'm in love with you Riley Collins and I always have been and I always will be. If I marry some guy for the sake of my parents, I will break your heart and my own. You and I separated will be an eternity of sadness. You are my happiness and I am yours.\"\n\n\"What are you saying Katey?\"\n\n\"I don't know what will happen tomorrow or next year or next week. What I do know, is that as long as I'm with you nothing else matters.\" \n\n\"Baby, what are you saying?\"\n\n\"That I love you and if you want me then take me I'm yours to keep.\"\n\n\"Wait, what?\"\n\n\"I was a fool to let you go twice, but I won't be a fool again Ri. I love you.\"\n\nShe leaned in and kissed me softly placing delicate kisses on my lips. I didn't respond, was she saying what I think she was saying. She noticed my apprehension and giggled. \n\n\"You better fucking kiss me Riley.\" That snapped me out of it. \n\n\"I can do better than that.\" I lifted her onto my lap and I kissed her with all the passion that had been waiting to be let out. With all the love she had deserved from day one. After a few minutes she pulled away as tears trickled down her cheeks. I know both of us had a lot of emotions going through us in this moment. I think she finally gave herself to me. \n\n\"I promise you that I will love you more than anyone ever could. I will be enough for you to forget everyone whose ever hurt you. I will make the doubt from others disappear into the abyss of nonexistence. I will make you the happiest woman in the world Katey.\"\n\n\"I don't doubt that my love. I love you Riley more than you will ever know, but I intend to show you everyday from today forward.\" \n\nI held her with my right hand at the small of her back and I brought my left to her neck and pulled her in as close as possible as I kissed those lips that had called my name for two days. \n\n\"Do you want to talk about this?\"\n\n\"What's there to talk about honey, I love you and want to be with you.\" She had wrapped her arms around my neck and was holding me close as she spoke into my lips, brushing them lightly back and forth.\n\n\"You make it sound so easy my love, you realize you have been avoiding us for a year. Now as we sit here thousands of miles from your family you want to be with me.\"\u2028 \"Yes why isn't that enough Riley.\"\n\n\"Baby I can't just be another day in your life, then you leave me or maybe you stay for another 2 weeks at best. Then, you go home and pretend I was just some fling.\" She looked away but held on to me. She laid her head to rest on my shoulder and just giggled as she continued, her lips just nibbling on my neck, her right hand caressing my cheek I was powerless in her arms unable to resist her touch. \n\n\"No honey you're not getting me. I'm not the same fool from a year ago or your birthday. You are my happiness, you are my home. You were never a fling for me. It just took me a little longer to realize that YOU are all I need in this world. I am yours Riley.\" She sat up in my lap and looked into my eyes. This whole time she hadn't stopped smiling even through her tears. \n\n\"I already settled everything at home with my business for the rest of the week. I have to go back and deal with a few clients but then I should be able to work from here for at least a few weeks at a time before going back. I can stay at the hotel but would much rather stay here with you. I hired an assistant to do whatever I need out there. As for my family when I go back I intend to tell them I'm in love with the most amazing woman in the world. I have no reason to keep pleasing them and their antiquated ways. So yes it is that easy from now on.\"\n\nI couldn't believe my ears, was she finally mine. \n\n\"You're serious aren't you. It's just you and me from now on?\"\n\n\"Yup, just you and I Riley, well I do have to ask one thing of you?\"\n\n\"Anything.\" I was so happy, I was smiling from ear to ear. \n\n\"I want you to be exclusive with me, so your new friend definitely has to go.\"\n\n\"Are you asking me or are you telling me?\"\n\nShe came up to my lips and looked in my eyes, those grey eyes getting darker with every second that passed.\n\n\"It wasn't a question. I'm telling you that I don't share.\"\n\n\"Yes Ma'am.\"\n\nI want to say that we made sweet love all night but honestly all I wanted was to hold her tight and never let go. For the first time, in a long time, we fell asleep in each others arms, at peace, knowing that we had the rest of our days to be together and nothing was going to come between us. \n\n*******************************\n\nKatey:\n\nI had made the decision to be with her a week ago. I realized she and I were each others happiness. I had tried to please my parents for the last 26 years and it had never been enough. If I married a man the next thing to do was give up all my ambitions, then kids. I want kids just not with someone I didn't love. Children deserve to be raised in the best environment filled with love. \n\nThese were some of the things still looming in the back of my mind about my new relationship. Marriage and children. We had avoided these two conversations considering we had so much tension in our friendship but now it was different we were together. I was ready for all the conversations of what our future would hold for us. I was moving to New York to be with her. I would make sure that we worked everything out together.\n\nI had actually thought everything through. Only thing that had stopped me was her friend. I was unsure if they were more than friends. But I can see now that I never lost her heart. \n\nChristmas was coming and this was our first Christmas as an official couple, I had lots of questions as to how we would handle our celebration. I only had one person that I wanted to please, that was my Riley. She hadn't mentioned going back to LA to hang out with her friend but I didn't want to push her to change her life for me. I knew I had to bring it up soon or it might take us by surprise. So 2 weeks before Christmas I asked the question that had haunted me since Thanksgiving. \n\n\"Babe?\"\n\n\"Yea honey.\" She was making dinner for us and I was watching from our dinner table.\n\n\"Um, about Christmas....will you be ...um....you know going to LA to be with your friend?\" She turned around to look at me, she looked as confused as I felt. \n\n\"No, I figured we would have Christmas, here, together since I didn't think you were going to see you parents. Did you have other plans?\"\n\n\"No of course not, I just wasn't sure if you were.... you know..... anti-celebration, we don't really talk about it and well last time I wasn't sure how you felt about it. Last year you seemed lost in your memories when we were cooking and since then I've wondered if it was too much for you for us to be together, you now celebrating.\" She left the stove, lowered the heat and walked to sit on the chair next to me, taking my hands into her own. \n\n\"We're together so I don't want to make you feel bad or anything but I'll be honest because I hid my feelings then. I never really had a good Christmas, dad bought us some food and a whole bunch of presents he thought I would want and we watched TV together. Sometimes my aunt would come by and bring presents. For as long as I could remember Christmas was like every other special day in my life sad. My dad never made an effort so I decided early on to just get over it and not try. We never got a Christmas tree or a nativity scene or lights. Then here you were, the girl I was madly in love with, sharing a special day with me that had never meant anything. I was in heaven and wondering if it would ever happen again and what it would have been like if my mom would have been around. Would my mom have put more effort into Christmas than my dad. You made it special you got us a tree and lights and food and I hated myself for allowing myself to get so involved, for letting you bring so much joy in my life when I knew it was only temporary.\"\n\n\"I'm sorry that...\"\n\n\"Yea I know it's like what can you apologize for right? My dad being well as good as he could've been or me wanting you so much that I would endure anything as long as I got to be with you no matter what. It's ok I was so madly in love with you and in those moments I was thinking of us being like that for years to come but I knew it was a dream back then. Thank you for making my dreams come true princess.\"\n\n\"You're welcome. Thank you for being the family I need.\" She pulled me over to sit in her lap, I was content to know that our dreams were coming true.\n\nEven after a year together I don't take these mornings for granted.\n\n\"Good morning baby.\" She always knew how to wake me, soft kisses to my shoulder since I'm always curled up next to her. \n\n\"Good morning Ri. Will you take a shower with me so we can get ready to go?\" \n\n\"Mmm, I love taking showers with you, do we have enough time?\"",
        "\"Yes baby as long as you behave yourself.\"\n\n\"Well you should know I have no self-control around you.\" \n\nI got up and went into the shower. \"Baby I'm nice and wet for you.\" \n\n\"Just how I like you. You still expect me to behave.\" \n\n\"We have to make it quick our flight leaves in two hours and we still have to get dressed.\"\n\n\"You know I've never been good at quickies.\" She had a sneaky mischievous look in her eyes.\n\nToday we we're headed to Puerto Rico to celebrate Riley getting her MBA. Her office will also be expanding to 2 more cities and we considered our options, Los Angeles our hometown or London where her uncle lives. It was nice because she came to me and talked to me about our options, I loved that she always took my feelings into consideration. Since moving to New York it was no longer about me or I, it was about us. \n\nI want to say that we wanted to go to Los Angeles and be closer to my family, but that didn't work out. But London was just too far from my business so LA it was. \n\nWe went to LA the weekend after we got together and Riley drove me to my parents. I had already spoken to my brother, as he was as liberal as I, so I had hoped he would help when I had to make my escape. When we got there he was waiting for me. I went in and told my parents that I would be moving to New York and they both asked why. So I told them I was in love and I wanted to be with the person I loved. This killed them since they had no idea who I was with. Finally getting the courage after my brother held my hand, I said it. I told them I was in love with Riley Collins a Salvadoran English woman who was working on her MBA and I wanted to spend the rest of my life with her.\n\nIt's actually funny when I look back at it, my mom freaked out, even went so far as to pretend to have a heart attack, too many soap opera's. She asked God in spanish what she had done to deserve this. Asking how I could do this to her and what was wrong with me. Saying that I should see a head doctor because I was going crazy. My brother held my hand and stood by my side never letting go. My dad was even meaner saying a whole bunch of stuff in farsi. Mid way through their rant I told them I was going home to be with my girlfriend who loved me and actually wanted what was best for me and just in case they were wondering, yes she could take care of me financially if I ever needed, even though I didn't since I was self-sufficient. When I left, my brother was forced to stay. My mom kept screaming telling me I had to stay and not to walk away from her ending in 'I would rather you be a whore than a lesbian.' My dad's parting words were 'No daughter of mine is a lesbian.'\n\nMine were simple, 'I'm neither a whore, nor your daughter, I'm a woman in love with a woman, that makes me a lesbian'.\n\nRiley was outside and I made sure to leave the door open to let them see her and I together, happy. I also put on a show by kissing the love of my life. I knew if the neighbors saw it would make it even better for them. I was tired of being a sheep. I haven't spoken to either of them since. My brother and I grew closer and sister chose their side, which I had expected. Riley and my brother, Arash, really got along and he was very accepting of our relationship. He's visited a few times since then. \n\nWhen we arrived in Puerto Rico we picked up our car and went to our hotel, Intercontinental. We had picked this hotel because it had great beach access and great amenities and restaurants in the area. It was also close to the highways and the tourist spots. We would be here for 5 days and the last 2 days were hers to plan, I planned the first three. It was her idea she said she wanted to plan something special. I know not to argue with her, and when she wants something she gets it from me. I love her too much to say no. \n\nOn the first day we visited El Yunque rainforest, we went snorkeling, kayaking and a night tour. Then on Tuesday I took her to Viejo San Juan and we did a walking tour that took us all day. She was amazing and loved everything about my country. We took so many pictures even went to 3 different restaurants in one day. We had gone shopping along the way and bought a new souvenir door. This one would be for her new office in LA, \"Oficina Collins\" (Collins office). On Wednesday we went to the Bacardi factory and spent the rest of the day on the beach. \n\nI had fallen even more in love with her in these three days because of her passion to get to know where my family was from. I was just left wondering what she had planned for tomorrow. \n\n\"Baby are you ready?\"\n\n\"Yes hun where are you taking me? Why did I have to pack all my stuff?\"\n\n\"We're checking out today and checking into a hotel across the country. I'm also dropping off the rental.\"\n\n\"What, are you serious? How are we going to get there? How are going to get around?\"\n\nWhat does she have planned that we're going so far away.\n\n\"A small plane will take us there my love. Come on, no more questions.\"\n\nWe got to the hotel and she had the room covered in candles a bottle of champagne and our favorite, chocolate covered strawberries. We stayed at the Horned Dorset Residences. The place was like a small apartment, huge open spaces and a beautiful tub overlooking the beach. \n\n\"So my plan for you for the next two days is to spoil you.\"\n\nShe came to me and walked me over to the tub. It was a heritage claw-foot tub, filled with rose petals floating on the water. \n\nShe stood behind me and pulled my shirt over my head and kissed my neck. Then wrapped her arms around my waist as she nibbled on my ear and undid the button on my shorts and I stepped out of them.\n\n\"Like you don't do that enough?\"\n\n\"Nope.\" She then turned me around and released my breasts onto her own, letting my bra drop when she removed my panties. Then she picked me up and gently laid me in the tub. \n\n\"You know you're my queen right?\" I love how she always makes me feel like I'm the only person in her world.\n\n\"Mmm I love it when you call me that.\"\n\n\"When I had been without you I was so empty and I felt like there was no hope for me.\"\n\n\"I know honey I'm sorry.\" She was sitting next to the tub washing my body.\n\n\"Well I don't want that to ever happen again.\"\n\n\"It won't, you know that my love.\"\n\n\"I want more Katey.\"\n\n\"What else can I give you my love to convince you that I will never leave you?\" I always want her to feel secure of my love, but I can't help think that sometimes she worries. \n\n\"Yourself, will you marry me my love.\"\n\n\"What?\" I turned around and splashed water all over her. But there she was sitting next to me with a box and a beautiful ring inside. It was actually a platinum ring set, with diamonds all around and an emerald cut black diamond in the center.\n\n\"Um well that's one way to answer, making me all wet.\"\n\n\"Baby what did you say?\"\n\n\"Will you make me the happiest person in the world by spending the rest of your life with me? Will you marry me Katerina Pahlavi?\" I was crying in the tub with water still splashing all over the place. \n\n\"YES! YES! YES!\" I wrapped my arms around her neck and pulled her into the tub with me. \n\n\"Yeah, you will?\"\n\n\"Of course. With one condition actually.\"\n\n\"Anything for you my queen?\"\n\n\"Can I take your name?\" She actually had a confused look on her face. \n\n\"You know you don't have to, I'm not old school like that. I would love that, it would be an honor, but why my love?\"\n\n\"Pahlavi represents my past and a family that abandoned me. But you, Riley Collins, you created a family with me and I want US to be a family. I want our kids to have OUR last name, just one, the one that truly represents us.\" She had tears in her eyes. I loved seeing her cry because it was so rare. It was beautiful. I don't mean to sound mean but her tears of happiness are amazing. \n\n\"Katerina Tanaz Collins. I like the sound of that.\" \n\n******************************* Riley:\n\nI had an idea that she probably wouldn't have said no to me. She had already let go of the demons that once haunted her and given herself unconditionally to me, to us. Nothing was standing between our happiness. \n\n\"Baby can I undress you since you're all wet.\" \n\n\"Mmmmm, I love it when you're hot for me, I like that idea.\" No pretense when getting sticky wet clothes of you. It wasn't going to be easy so I stood up in the tub and took of my shirt and bra as my fiancee (smile) undid my shorts and pulled down my boy shorts waiting for me to step out of them she started licking my mound and I almost fell, but I got closer to her. \"Oh shit.\"\n\n\"Now you have to stand there while I thank you for my ring.\" She lifted up one of my legs to the side of the tub. This would be interesting I can barely keep still when I'm on the bed and she brings pleasure to me, now in the tub this may be dangerous but fuck it I don't mind. \n\n\"You don't have to thank me.\"\n\n\"But I want to, now shut up and take it gorgeous.\"\n\nShe came forward on her knees and wrapped her arms around my ass as she pulled me towards her mouth while digging her nails into me. She loves to take it slow and take her time. I always find her so irresistible that it's hard for me not to try to get her to go faster. \n\nShe licked up and down my slit from one lip around to the other, smiling her wicked smile. She knew her power over me, I had handed it to her with my heart. From that day a year ago when she promised me her love and affection she had never given me a reason to doubt her love. \n\nAs I remembered that night she knew I was lost and sucked in my clit whole right into her mouth biting down as she pulled. I was snapped out of my dream and screamed her name. Just like that I was ready to let go but she had other ideas as she completely pulled away and started stroking my pussy with her fingers.\n\n\"Where were you?\"\n\n\"Fuck Katey don't tease me.\"\n\n\"Where were you? or you can suffer for as long as I feel like.\" She had found long ago that she could make me do whatever she wanted. We shared control in the bedroom and right now I would let her take it. Sometimes I just had to remind her that she wasn't immune to me either and she liked it that way.\n\n\"Wouldn't you like to know?\" Now she completely pulled her hand away and and licked her fingers clean as she stood. Fuck me, I was torturing myself but I would make her work for it to because I knew she was just as turned on as I was. She grabbed the nape of my neck then pinched my nipple with her free hand as she whispered into my ear flicking my lobe. I pulled her hips towards me.\n\n\"Yes and you're gonna tell me if you want me to let you cum.\"\n\n\"You have me so fucking hot for you that I can use my able fingers to take care of myself right here.\"\n\n\"You know I wouldn't let you do that. So I am going to ask you one more time.\" She pulled my nipple even further out making my whole body shiver as I felt my juices dripping down my thigh.\n\n\"Fine, fine.\" I looked into her eyes and let go of all the pretenses, nothing but love left. \"I was thinking of the day you gave yourself to me after you came to visit me a year ago. When you became my whole world and you left me powerless to everything you do to me.\"\n\nShe released my nipple pulled my body into her and took her other hand down to my pussy and fucked me to an amazing orgasm never taking her eyes off of mine. Until I finally couldn't take it and threw my head back as euphoria hit. She slowed down her fingers and pulled my face back to face her, mischief in her eyes.\n\n\"Don't you ever forget that.\" \n\n\"You're gonna pay for that, actually your pussy will pay.\" I grabbed her close and kissed her wanting to consume her with one kiss. She gave in and she was done for the day. From this moment forward she was mine to do with as I wanted.\n\n\"Take me baby, make me pay all day long.\" We dried of and went to bed. I didn't mind since we still would have enough time to sleep that night. Tomorrow was the second phase of my plans. The day she would become my wife, except she didn't know it yet. \n\nI got up early to get everything ready before my queen woke up. I knew she was tired I made sure of it yesterday, all day. I pulled out my custom-made white suit and her dress. I also had it custom made for her it was short perfect for a ceremony on the beach. We had to go to a gala in NY a month ago and I had her get a dress made telling her that I wanted to get it for her as a gift. Then I had the designer make this gown for her and she had tried it on as a sample of her size and she didn't even know she was trying on her wedding dress. \n\nA make up artist and stylist would come down and help her and I get ready. Our witness would be her brother, who got here last night. He was amazing with me and the whole situation. He had given me the don't break my sister's heart or else speech, \"I'll have my persian side take care of you Lesbian or not\". I had laughed I'm sure his Persian family and my Salvadoran connections could really have it out. But I had no intent of letting that happen.\n\nI had arranged everything with the hotel and we would have a private ceremony in a cabana style tent. Her brother would come with us to dinner and then fly back home. We would be going back to NY tonight. \n\nI knew it was soon for the ceremony but we both would become very busy pretty soon with moving and house hunting and a new job. I also know that her side of the family won't come to our wedding. This was for her, with her brother in a country she loved that was a part of her heritage, in the place where I had proposed. \n\n\"Good morning my love.\" I loved waking her up with kisses because it always brought a smile to her face. I hated when the alarm woke us up because she hated it and she would wake up grumpy. As cute as it was to see her face scrunch up I knew she hated mornings like that. Kisses on her shoulders were much better for her and me.\n\n\"Morning baby. What time is it?\"\n\n\"Time for your last surprise.\"\n\n\"mmmm...you're last surprise left me satisfied and with a huge rock on my finger. What could possibly be better than that.\"\n\n\"Let me show you.\"\n\nI had already showered and had a separate room from this one to get ready in. She wrapped her arms around me forcing me to join her in bed for a whole 15 minutes. It took us a few minutes but we finally got up. \n\n\"So where am I going?\"\n\nI walked her over to the closet where two garments were hanging next to each other, only thing missing were our bodies inside them.\n\n\"Wait what is this, where are we going?\" I wrapped my arms around her waist as I stood behind her. \n\n\"Do you want to marry me?\"\n\n\"Of course you know I do.\"\n\n\"Good.\" I wanted it to hit her like a ton of bricks. She was a smart girl and it would not take long.\n\n\"Wait....is this...this is from the shop back home the ...and the suit you liked...Oh Shit! Sorry...... Are we getting married?\" She turned around staying in my arms holding my face in her hands with a suspicious look.\n\n\"Yes my love.\"\n\n\"Why here honey? Why so quickly.\"\n\n\"A year ago when you came to visit me after your trip you told me that you wanted to bring me here. Then when I got my degree you brought me to teach me of your heritage and share with me a place that is so special to you. I know that when we have our wedding with friends and family it will mostly be my family. But here we are in your country, where you're from with your family. It's special and I don't want to wait any longer before making you my wife.\"\n\n\"You know I will never understand how I found you.\"\n\n\"On the beach where we will now get married, if you're ready.\"\n\n\"You're amazing Riley, I'm sorry for any pain I caused you.\"\n\n\"You were worth every moment I had to wait.\"\n\nThen finally the knock on the door perfect timing.\n\n\"That is for you.\"\n\nShe walked towards the door in my pajamas that she had stolen from me last night. As she walked towards the door something clicked in her head.\n\n\"Honey what family no one from out here likes me anymore... Arash!\"\n\n\"Congratulations sister.\" He was already in his suit. \n\n\"What are you doing here? Wait congratulations, how did you know?\" \n\nI was now at the door frame from our room to the living room. She turned and gave me a dirty look. \n\n\"Wait did you set me up?\"\u2028 \"No I just surprised you.\"\n\n\"She came to me and asked for a blessing, not permission. She's very honorable, you got lucky sister.\" She ran over and jumped into my arms. Whispering into my ear. \"Thank You!\" *******************************\n\nKatey:\n\nI stood before her thinking of how nothing else matters when I'm with her. She saved me from misery and loneliness, when my future seemed so dark. She is my world now, she is my everything. \n\nI saw a beautiful, gorgeous sexy woman in front of me and I remembered the day I met her in surf shorts, a muscle shirt and chucks. I was naive to think we would only be friends, yet there we were about to get married in New York across the country from where we met. It's only been 2 years since we first met and it seems like she's grown up so much. The truth is we both have, but not because she's now in front of me in a white Channel suit, but because we have come so far from that summer relationship. \n\nAfter my wife and I got married in Puerto Rico, we came home and began to plan our big \"official\" wedding. That day was special, a day of pampering and getting ready for our beachside wedding. It was simple, elegant and perfect just us the way the rest of our lives would be. Yes family is important but no one will be there at home but the two of us and that is what was important. \n\nThen we were standing in front of each other in front of our loved ones. My brother was my only family at our NY wedding as expected. He came to walk me down the isle. Riley's uncle flew in with his family to walk her. The way her family is so welcoming to me makes me believe in the good still left in this world. Everyone came in from around the world for her. Even with all the love that surrounds me I wonder why my family couldn't try for me but none of that matters now, all that matters is Riley. Our wedding was actually surreal for me. I had never thought I could be so happy and at peace, but she had that power over me. \n\nTwo weeks later we were headed back to Los Angeles. I had rented out my place a few months ago so she we ended up staying at a hotel until we could find a place. She had another surprise up her sleeve. \n\n\"Honey can you come with me to the lawyers office today I need you to sign some papers for the name change, accounts and stuff.\"\n\n\"Sure.\"\n\n\"I'm going to need you all day is that okay?\"\n\n\"Only if you promise to \"feed me\" in the end.\" She smiled she knew exactly what I wanted. \n\n\"You can eat anything and everything you want.\"\n\nWe were off to see her lawyer. She had bought another car as she had sold hers 2 years ago. She had a need for speed so she bought an Audi A6, which was sporty enough to go fast and big enough to not let her get carried away, it was a compromise from the porsche she wanted. I loved her driving us everywhere, she always looked gorgeous and sexy.\n\nWe went to the lawyers office and signed a million and one papers, we were officially linked in wills, trusts and accounts. We wanted to make sure that even if the law didn't recognize us in California, legally we were responsible for each other. We wanted to make sure neither family disrespected our union. \n\nThen we were headed to the beach for lunch, we had stopped by the thai restaurant for food and we arrived at her uncle's beach house. My sister had sold hers soon after I moved out. I resented her for it, because she wouldn't sell it to me even after I was more than willing to overpay her. She had joined in on the whole, disowning bandwagon.\n\n\"What are we doing here?\"\n\n\"We're home.\"\n\nShe handed me the keys to the house. \n\n\"Wait, what do you mean, are we staying here until we get a place.\"",
        "\"Nope I bought it from my uncle and I figure your company can tear it down and build something more modern and bigger for us and our soon to be larger family.\"\n\n\"Oh my God are you serious?\"\n\nShe came up and hugged me looking into my eyes.\n\n\"Yes my love, what better place to start our lives together as a married couple, than where it all started. If that's okay with you, we can also get a place close to the city if you want. Now I'm nervous, you don't like my idea.\"\n\n\"Baby relax, I love it just a little surprised, I don't need another place anywhere. I love it that we can keep the home where our love started. Can we eat inside?\"\n\n\"Yup we owned the house as soon as you signed the documents earlier.\"\n\nIt was exactly as I remembered it. All the days and nights spent here. The moments spent flirting and just hanging out. Having dinners and intimate conversations that never led anywhere or so I thought and now here we were.\n\nThat kitchen is what got us here. Taking her against that refrigerator, oh yes this house will acquire many more memories. \n\nAs I stood in front of the refrigerator, she wrapped her arms around my waist.\n\n\"Remembering how you seduced me?\"\n\n\"Nope you seduced me coming out wet, in only a towel, what was a girl supposed to do?\"\n\n\"If I remember correctly, made love to me for two days straight.\"\n\n\"You know I was promised anything and everything.\"\n\n\"I am all yours my queen.\"\n\n\"Up against the fridge wifey.\" I pushed her up against the fridge ready to make her mine. \n\n\"You know I did promise to feed you.\"\n\n\"Oh you will as soon as your shorts come off.\" I undid the button on her shorts and pulled them of as she stepped out of them and her sandals. \"No undies, huh, were you planning on seducing me?\" \n\n\"Nope just giving you easier access.\" \n\n\"Good girl.\"\n\n\"Your turn to take something off.\"\n\n\"There will be time for that later.\"\n\nI got her to jump on the sink. \"You know you've turned into a nympho.\"\n\n\"You make me this way.\" She truly had, I had never been so into making love. She made me want her at all hours of the day and in any way possible. I took the sink hose and turned on the water to warm and pushed the button to make a steady spray. \n\n\"Wow you get kinkier by the second.\"\n\n\"Are you complaining?\"\n\n\"Never, uuuuhhhh\" I directed the hose right at her slit, parting her lips with two fingers. \n\n\"Baby what's my name?\" I turned up the strength of the water. This was a game of who had the most control. \n\n\"Fuck.\"\n\n\"Nope, try again.\" I bit her neck and turned up the water higher. \n\n\"UUUhhhh, KATEY, my queen, my wife.\"\n\n\"MMmmm, that wasn't so hard. Now you've earned yourself a prize.\" I worked two fingers into her tight pussy and then a third as the stream of water continued. Placing my thumb on her clit I traced an infinity symbol while keeping the stream pointed at her now engorged clit. She wrapped her legs around me holding onto the edge of the sink. \n\n\"Look at me.\"\n\n\"Damn it Katey. That's hard with you fucking me and the water.\"\n\n\"You know how I like it.\"\n\nShe looked up and I caught her eyes. \n\n\"Tell me you want it.\"\n\n\"Make me cum baby\"\n\nI had her moaning in ecstasy within minutes and screaming for more. \n\n\"Come on let's get you dried off and wet all over again.\"\n\nThat exactly how we baptized our new home, 2 days straight of love making. We were once two separate entities, now united as one. She has my heart and I have hers. We began as a summer love that now will get us through all the cold nights for a lifetime to come."
    ],
    "authorname": "monamante",
    "tags": [
        "lesbian love story",
        "lesbian novella",
        "lesbian romance",
        "lesbian drama",
        "drama"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/summer-solstice-ch-03"
}