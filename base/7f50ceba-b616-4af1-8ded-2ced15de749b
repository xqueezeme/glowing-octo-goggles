{
    "title": "White Castle Christmas",
    "pages": [
        "\"Fuck Christmas,\" Clover shouted, \"and fuck you, Tony. Fuck Santa Claus, fuck his elves and fuck all ten goddamn reindeers.\"\n\n\"Eight,\" Roxanne said, filing her nails and looking at her over the top of her glasses.\n\n\"Shut up, Roxy, I'm talking about reindeers, not how many cocks you sucked over the weekend.\"\n\n\"Clover, calm down,\" Tony said, \"It was worth taking a shot.\"\n\n\"Bullshit, I told you nobody goes to a strip club on Christmas Eve.\"\n\n\"She did tell you,\" Roxanne said, \"Even louder that she's telling you now.\"\n\n\"Look,\" he said, shrugging, \"I'm sorry, but it wasn't nobody...\"\n\n\"We've had five customers,\" Clover said.\n\n\"And the last one was two hours ago,\" Roxanne chimed in, \"It's almost ten thirty.\"\n\nClover jerked her thumb at Roxanne. \"She might look like a doofus wearing that stupid Santa hat, but she's right.\"\n\nTony held up his hands, \"Okay, it turned out to not be a great idea. You guys are always saying that more customers come in because they are lonely than because they are horny. I figured it would be a lonely night for a lot of guys...\"\n\n\"It might be a great night to be a hooker,\" Clover said, \"but not a dancer.\"\n\nHe looked at his watch, then over his shoulder at LeAnn, the bartender. \"Tell you what,\" he told her, \"If nobody else comes in before eleven, go ahead and close up.\"\n\nHe started to walk away, but Roxanne called him back. \"We paid our club fees, Tony, that isn't right.\"\n\nHe looked up toward the ceiling, as if he were looking for a script to read from. \"You want to close and go home early, but you want your club fees refunded because I said we would close and you could go home early?\"\n\n\"No,\" Clover said, \"We want our club fees refunded because we paid you fifty dollars to dance on a night when you dragged us in here to dance, even though we told you nobody was coming the fuck in.\"\n\n\"Fine,\" he said, throwing his hands in the air, \"LeAnn, give them back their club fees.\"\n\nRoxanne stood up. \"I'll go tell Amberlee.\"\n\n\"Where is she anyway?\" LeAnn asked.\n\n\"Back in the dressing room.\"\n\nClover sat down on a barstool. \"She probably fell asleep.\"\n\nTony came back out of his office, wearing his coat and hat.\n\n\"Hey, Tony,\" Clover told him, \"I just saw tomorrow's Wall Street Journal. The headline says Shitty Ass Strip Joint Goes Broke After Hundred And Fifty Dollar Loss.\"\n\n\"Sometimes I wonder why I don't fire you, Charlene.\"\n\n\"Because you just manage the Gold Dollar, your dad owns it, and he loves my big fat ass.\"\n\n\"Merry Christmas, Tony,\" LeAnn called after him as he walked out, holding up his middle finger in Clover's direction.\n\n\"Yeah, Merry Christmas, Tony,\" Clover hollered as he went out the door, \"Enjoy it, it's probably the last one before your kids decide they don't want to spend them with you.\"\n\n\"That one maybe went too far,\" LeAnn said.\n\nRoxanne came back and sat on the next stool.\n\n\"What's Amberlee doing?\" LeAnn asked.\n\n\"She was watching Elf on her iPad, now she's getting dressed as fast as she can, in case Tony changes his mind.\"\n\n\"He already left,\" LeAnn said.\n\n\"Oh, so he doesn't have to wait until eleven o'clock...\"\n\n\"I liked that movie, Elf,\" Clover said. She nudged Roxanne with her elbow. \"You kind of look like the girl that he falls in love with, Zoey DeWhatshername.\"\n\n\"You kind of look like Ed Asner.\"\n\n\"That midget guy from Game Of Thrones was in it. Is it weird that I think he's kind of sexy?\"\n\n\"Peter Dinklage?\" Roxanne said, \"I'd fuck him.\"\n\n\"You know what sucks? All the kids in school probably called him Dinky.\"\n\n\"What did they call you?\"\n\nClover was silent for a moment, then said, \"Big Bird.\" When Roxanne didn't respond, she asked, \"Ain't you got some smartass remark?\"\n\n\"Nope, I'm not as mean as you.\"\n\n\"Yes, you are, you are just sneaky about it.\"\n\n\"It only seems that way because I'm so much smarter than you.\"\n\n\"What about you? What did they call you in high school?\"\n\n\"Rhonda.\"\n\n\"Fuck you, that's your name. What about a nickname?\"\n\n\"Some of my friends called me Ronnie.\"\n\n\"See that's what I'm talking about. That's sneaky mean the way you played that.\"\n\nThe door opened, and they both groaned, but it was not a customer. Sporty, the Gold Dollar's bouncer, came in.\n\n\"Speaking of guys you'll fuck,\" Clover muttered.\n\nWhen he approached the bar, she said, \"Hey Sporty, how come you go out with Roxy? I always heard black guys like girls with nice big asses.\"\n\n\"I always heard strippers were friendly,\" he shot back.\n\nHe sat down next to Roxanne.\n\n\"Where have you been?\" she asked him.\n\n\"Yeah,\" Clover said, \"There could have been a brawl in here, between the rats and the cockroaches.\"\n\n\"I was sitting out in my car, listening to some jams.\"\n\n\"I thought maybe you were standing in front of the joint ringing a Salvation Army bell,\" Clover said.\n\nSporty ignored her and put a hand on Roxanne's shoulder. \"Listen, babe,\" he said, \"We gotta talk about this.\"\n\n\"We talked about it ten times already,\" she said.\n\n\"Yeah, because it's important.\"\n\n\"We can talk later.\"\n\nSporty went behind the bar, took a bottle of Bud from the cooler and twisted off the cap.\n\n\"Hey, Sporty, how many reindeer does Santa have?\"\n\n\"How the fuck should I know?\"\n\n\"You heard the song your whole fucking life, right?\"\n\n\"It's not about the Rudolph song,\" Roxanne said, \"The right number is the ones named in The Night Before Christmas, which is eight.\"\n\n\"Plus Rudolph,\" Clover insisted. \"LeAnn, tell her.\"\n\n\"I have no opinion,\" LeAnn said, turning away.\n\n\"Even if Rudolph counts, which he doesn't, that makes nine. You said ten.\"\n\n\"That was in a moment of passion.\"\n\n\"Let me ask you a question,\" Sporty said, \"How do you know he don't have, like, a hundred reindeer and uses different ones every year?\"\n\n\"That's just nuts,\" Clover said, shaking her head.\n\nThe door opened again, and a portly middle aged man came in, shaking the rain from his coat sleeves. He looked at the group at the bar, smiled, and said, \"Not a fit night out for man nor beast.\"\n\n\"Which one are you?\" Clover muttered.\n\nRoxanne looked at LeAnn.\n\n\"It's ten to eleven,\" LeAnn said with a shrug. She turned to the customer. \"What can we do for you, dear, we will be closing soon.\"\n\n\"Oh, heck,\" he said, \"I was hoping to have a few drinks and maybe a dance.\"\n\nClover tilted her head close to Roxanne's. \"How bad do you want to get the fuck out of here?\" she asked.\n\n\"Pretty goddamn bad.\"\n\nClover leaned against the bar and squeezed her elbows close to her sides, pushing her large breasts higher.\n\n\"Hey honey,\" she said sweetly, \"Maybe you'd be interested in our holiday special.\"\n\nHe smiled eagerly. \"Maybe. What is it?\"\n\nPointing back and forth between herself and Roxanne, she said, \"Skip the drinks and get a two girl dance, only fifty dollars.\"\n\nHis eyes grew large. \"That sounds great,\" he said.\n\n\"Alright, let's go,\" she replied, rising off the stool. She started back toward the private rooms, then turned and crooked her finger at him seductively.\n\n\"We'll talk later,\" Roxanne told Sporty. As the customer passed her, she hopped off her stool and took his hand.\n\nAmberlee came out of the dressing room in her street clothes and coat. When she saw them coming in her direction, she muttered, \"Better you than me, ladies.\"\n\nClover opened the door to the first private room. \"Right in her, honey,\" she said.\n\nWhen the customer stepped inside, she leaned close to Roxanne. \"Who's dancing, you or me?\"\n\n\"It was your idea, you do the dirty work.\"\n\n\"Fair enough,\" Clover said, sighing.\n\nThree in the room was a tight fit. \"What's your name, honey?\" Roxanne asked.\n\n\"Frank.\"\n\n\"Alright, Frank, well you just sit and relax and we'll show you a great time, okay?\"\n\n\"Sounds good to me,\" he said, shifting anxiously in his seat.\n\nRoxanne waited a moment, until the music paused and a new song started up.\n\n\"Goddamn it,\" Clover moaned as the sound system burst forth with a choir singing Oh Come All Ye Faithful.\n\n\"That's Sporty fucking around,\" Roxanne said.\n\n\"I don't mind,\" Frank shrugged.\n\n\"Fine, then,\" She began to dance, as seductively as she could, to the Christmas carol.\n\nClover squeezed in next to the chair, and squatted down, leaning close to Frank. There was already a prominent tent in the front of his pants. She stroked his chest and said, \"It's okay if you want to take it out.\"\n\n\"Really?\" he said, looking at her in surprise, \"I thought that wasn't allowed.\"\n\n\"It's the Christmas special,\" she said.\n\nHe hastily dug his cock out of his pants. Roxanne turned and bent over. The white ball on her hat bounced as she twerked her ass only inches from his face.\n\nClover wrapped her hand around his shaft and stroked it.\n\n\"Look at that tight little ass,\" she murmured in his ear, \"Can you imagine shoving your big cock into it?\"\n\n\"Mmm, yeah,\" he moaned. She stroked harder and he grew more agitated. Roxanne balanced over his lap with one knee on each arm of the chair.\n\n\"Show him your pussy,\" Clover said.\n\nRoxanne hooked her thumbs in the sides of her thong and pulled it away from her body. Frank craned his neck to take a look, while Clover cooed, \"Oh, wouldn't it feel so good to fuck that wet pussy?\"\n\nFrank let out a long jagged breath, and a stream of pearly liquid flowed from his cock and down over Clover's hand.\n\nRoxanne stepped down off the chair, pulled a handful of tissues from the dispenser and handed some to each of them. \"Merry Christmas, Frank,\" she said.\n\n\"Oh yeah, Merry Christmas,\" he wheezed. He wiped himself off, dropped the tissues in a small wastebasket Clover held up for him, and put his cock back in his pants.\n\nClover rose and they helped Frank to his feet. He took out his wallet and handed several bills to Roxanne, then stepped out of the room.\n\n\"If this guy becomes a regular, his nickname is going to be Frankie Faithful,\" Roxanne said.\n\n\"What did he give us?\" Clover asked.\n\nRoxanne held the cash close to her face to counted it in the dim light.\n\n\"Seventy bucks.\"\n\n\"I gave him a hand job and he only gave me a twenty dollar tip?\"\n\n\"He gave you a ten dollar tip. Ten of it is mine.\"\n\n\"Bitch, I didn't give out a handy for a lousy ten bucks.\"\n\n\"It's more than I'd give you. You have hands like a bricklayer. And I showed him naked pussy. That deserves a tip.\"\n\n\"Alright, fair enough. Now we can get the fuck out of here. You hungry?\"\n\n\"Hell yes.\"\n\nThey crossed the corridor to the dressing room and quickly changed into their street clothes. LeAnn was wiping down the bar when they came out.\n\n\"Sporty is out back, helping me restock for Thursday,\" she said.\n\n\"Well, tell him I'll talk to him later,\" Roxanne said. She went around the bar and tipped out, giving LeAnn a twenty each for herself and one for Sporty. She kissed her on the cheek and said, \"Merry Christmas, sweetie.\"\n\nClover tipped out and gave LeAnn a big hug, then she and Roxanne walked out to their cars in a light cold rain.\n\n\"You ain't waiting for Sporty?\" Clover asked.\n\n\"Nope, don't want to talk to him right now. Meet you at the diner.\"\n\nThey each got in their cars. A light coating of slush covered Roxanne's windshield, but the wipers easily pushed it to the side. She pulled out of the parking lot on to the slippery street and drove the mile and a half to their usual after work spot, the Finest Kind Diner, while Clover followed close behind.\n\nWhen she turned into the diner's parking lot she noticed immediately that the lights were turned off, except for a string of colored Christmas bulbs blinking around the front door.\n\nClover pulled up next to her and they rolled down their window.\n\n\"What the fuck, they're closed?\" Clover asked.\n\n\"There's a sign on the door,\" Roxanne said, creeping closer to it. \"I can't read it, my glasses fogged up as soon as I opened the window.\"\n\n\"Yeah, makes you look like that guy on TV,\" Clover said.\n\n\"What guy?\" Roxanne asked, taking off her glasses and wiping them on her shirt.\n\n\"I don't know his fucking name.\"\n\n\"What show is he on?\"\n\n\"I don't remember.\"\n\nRoxanne rolled her eyes. \"Oh yeah, that guy.\"\n\n\"Why don't you get that Vlasic surgery?\"\n\n\"Vlasic is a pickle. You mean lasik?\"\n\n\"I guess so. I mean, you ought to do something, if you can't tell a dark empty restaurant is fucking closed on Christmas Eve without reading the fine print.\"\n\n\"I'm squeamish about anything around my eyes. I don't even like taking eye drops.\"\n\n\"It must be a bitch, with so many guys coming on your face all the time.\"\n\n\"At least I can make guys come. So what are we going to do? I'm fucking hungry.\"\n\nClover thought for a minute. \"We could go to Denny's.\"\n\n\"Are they open?\"\n\n\"How the fuck would I know? Call 'em up.\"\n\n\"Oh, so I have to look up the number?\"\n\n\"I figured it has a man's name, so you would know it.\"\n\nRoxanne sat back in her seat. \"I don't want to drive all the way across town, just to go to Denny's. What else would be open?\"\n\n\"Just White Castle.\"\n\nRoxanne thought for a minute. \"Yeah, what the fuck, let's go to White Castle.\"\n\n\"We ought to just go in one car,\" Clover suggested.\n\n\"Fine. Yours or mine?\"\n\n\"Yours,\" Clover said, \"Mine is more full of trash than a westside trailer park.\" She pulled her car into a parking space, shut it off and got out.\n\n\"I hate this drizzly shit,\" she said as she got into Roxanne's passenger seat.\n\n\"Hey, don't you live in a westside trailer park?\" Roxanne asked.\n\n\"Yeah, that's why I know what I am talking about.\"\n\n\"Speaking of knowing what you're talking about,\" Roxanne said, \"Santa Claus has eight reindeer.\"\n\n\"Are you counting Rudolph?\"\n\n\"Nope. Rudolph doesn't count.\"\n\n\"Who decided that?\"\n\n\"Clement Moore.\"\n\n\"Who the fuck is he? Sounds like a baseball player.\"\n\n\"He wrote The Night Before Christmas.\"\n\n\"Twas the night before Christmas,\" Clover recited in a sing song voice, \"And all through the place, Roxanne was sitting on every guy's face.\"\n\n\"And up from the lawn there arose such a clatter,\" Roxanne returned, \"As Clover devoured the whole turkey platter.\"\n\nClover nodded her head. \"That was pretty good,\" she admitted.\n\nRoxanne was quiet for a moment, then asked, \"You wonder though, who the fuck would name a reindeer Blitzen? What is he, a Nazi reindeer?\"\n\n\"I bet Rudolph was originally Adolf the Red Nosed Reindeer and they changed it during the war or something. Hey, what's going on with you and Sporty?\"\n\n\"He wants me to go to his mom's house for Christmas dinner.\"\n\n\"And you don't want to go?\"\n\n\"Mom, Dad, I'd like you to meet my girlfriend from the strip club?\"\n\n\"Oh yeah, I get it. But still, you guys been going out for a while now. You are going to meet them sooner or later.\"\n\n\"It doesn't have to be on Christmas with all the relatives there.\"\n\n\"So what are you going to do?\"\n\n\"I don't know.\"\n\nThere were three cars parked outside the White Castle when they arrived. The restaurant's windows were so wet with condensation that they could not see through them. But when they dashed inside, they were nearly blinded by the garish light.\n\n\"This is like sensory overload,\" Roxanne said, as Jingle Bell Rock squalled from a tinny sound system.\n\nThey walked over to the counter. There was no one behind it. Roxanne leaned forward, craning her neck to look back into the kitchen. She saw a young man in a white uniform and a hairnet dumping french fries out of a fryer basket.\n\n\"Excuse us,\" she called.\n\nHe looked over his shoulder. \"Be with you in a minute, ma'am,\" he said.\n\nClover cackled and nudged Roxanne with her elbow. \"Ma'am. He thinks you're an old fucking lady.\"\n\n\"Yeah, and he thinks I'm taking my mom out for Christmas Eve.\"\n\nThe man came to the counter. His name badge identified him as  Julio, assistant manager. \"What can I get you ladies?\" he asked.\n\n\"I'd like four hamburgers, an order of medium fries and a large coffee, regular,\" Roxanne said.\n\n\"Give me six whiteys and a large Mountain Dew,\" Clover added.\n\n\"Would you like fries with that?\"\n\n\"Fuck no, I'm gonna eat most of hers.\"\n\nJulio rang up their orders and Roxanne paid for both. Clover looked around the room.\n\nThere were three occupied booths. In one a pair of middle aged men, wearing the uniforms of parking attendants, sat sipping coffee. At another, an older woman in a ragged green coat had only a cup of water and a single empty burger box on the table in front of her. A couple of booths down, three young, black clad goths were sitting together. They looked to be in their early twenties; two boys, one very large, the other thin and jittery, and a purple haired girl sitting across from them, loudly chewing gum. They all looked like they were coming down off a much better time than they were having now.\n\n\"It's kind of a sad looking bunch of people in here,\" Clover said.\n\n\"Yeah,\" Roxanne said, \"It's Christmas Eve and they've got no place to go.\"\n\n\"That sounds familiar. I mean, what the fuck is the difference between them and us?\"\n\n\"We've got money in our pockets.\"\n\n\"Yeah, money we took from other lonely people,\" Clover said. She looked lost in thought for a moment, then asked Roxanne, \"How much money you think you've got in your pocket?\"\n\n\"I don't know, a hundred, maybe a hundred and twenty dollars.\"\n\nClover looked around the room, her lips tight and her brow knotted.\n\n\"I'll bet I know what you're thinking,\" Roxanne said.\n\n\"It's fucking Christmas,\" Clover said, shrugging.\n\nRoxanne called Julio back to the counter.\n\n\"How much are those sacks of thirty sliders?\" she asked him.\n\n\"Thirty two dollars and fifty two cents.\"\n\nShe looked over her shoulder at the woman with her single burger. \"Give me two sacks,\" she said, fishing her cash out of her pocket.\n\n\"You still want the other order?\"\n\n\"Yeah,\" Clover said, \"And I want you to give anybody whatever they want to drink. Keep a tab and I'll pay for them later.\"\n\nJulio hesitated a moment, then said, \"Okay, it will take a little bit of time. Your other order will be up in a minute.\"\n\nWhen their food was ready, they went to the empty table between the old lady and the goths.\n\nAs they walked past the parking attendants, Clover asked them, \"How you guys doing? You had to work tonight?\"\n\n\"Fuckin' Nutcracker,\" one of them grumbled.\n\n\"So are you going to see your son tomorrow?\" Roxanne asked Clover when they had taken their seats.\n\nClover nodded. \"Not till the afternoon. But I get to have him the next day, too.\"\n\n\"Have you got plans?\"\n\n\"I was thinking we'd go to Hong Kong Garden for dinner.\"\n\n\"And the next day?\"\n\n\"Are you kidding? The day after Christmas? We're going fucking shopping.\"\n\nRoxanne laughed. \"Yeah I'm sure that'll thrill a ten year old boy, going shopping with his mom.\"\n\nThey had each finished two burgers when Julio called to them that their order was ready.\n\nClover walked over to the counter, picked up a bag of hamburgers in each hand and turned to face the dining area.\n\n\"Ladies and gentlemen,\" she hollered, \"My friend Poindexter and I would like to treat everyone to Whiteys for Christmas.\" She went from table to table, holding out the bags, so that each person could take some burgers.\n\n\"And if anyone wants something to drink,\" she said, \"It's on us. Just step up and tell Julio what you want.\"\n\nAfter going to each table, she had half a bag left. She put it on the table in front of Roxanne and sat down.\n\nRoxanne twisted in her seat and watched as several of the patrons went to the counter and ordered drinks. She noticed that the old woman in the next booth had neither gotten up nor taken any burgers. She took one from the bag, leaned over the back of the booth and asked, \"Would you like another burger, ma'am?\"\n\n\"Are you sure it's okay?\"\n\n\"Of course it is,\" Roxanne said, \"Merry Christmas.\"\n\n\"Merry Christmas, dear,\" the woman replied, taking the burger.\n\nRoxanne's phone buzzed.\n\n\"I bet I know who that is,\" Clover muttered.",
        "Roxanne looked at the screen. \"Yeah, it's Sporty.\" She sat back in the booth and answered, simply saying, \"Hey.\"\n\n\"Listen baby,\" he said, \"I wish you hadn't split like that. I don't want you mad at me, whether you go tomorrow or not.\"\n\n\"I never said I was mad at you, Sporty. I'm just tired of all the back-and-forth on this shit.\"\n\n\"I don't think having Christmas with my family is shit.\"\n\n\"Now you're just looking to be offended. They know where you work, right?\"\n\n\"Yeah.\"\n\n\"So, you're going to tell them your bringing a girl from work to Christmas dinner, so I can sit there, eating turkey with everybody looking at me like I'm a whore.\"\n\n\"Ain't nobody gonna call you a whore.\"\n\n\"My own mom calls me a whore.\"\n\n\"Well, my mom ain't your mom.\"\n\n\"I don't know, Sporty. I'm just not sure I'm ready for this.\"\n\n\"We've been going out almost a year.\"\n\n\"Off and on.\"\n\n\"Whatever. Where are you at anyway? I come over to Finest Kind because I thought you guys would be here.\"\n\n\"They're closed.\"\n\n\"Well, no shit, I just told you I was over here.\"\n\n\"We're at the White Castle on Union Street.\"\n\n\"So, would it be cool if I come by?\"\n\n\"Yeah, sure. I'll see you in a bit.\"\n\nRoxanne disconnected, shaking her head. \"This fucking guy,\" she muttered, \"I'm telling you, he won't give up...\"\n\n\"And that's a bad thing? Let me ask you something,\" Clover said, \"and don't get pissed.\"\n\n\"Okay.\"\n\n\"Are you nervous about meeting his family because you think they won't like you being a stripper or because you don't think they'll like you being white?\"\n\nRoxanne was silent for a minute. \"Maybe both,\" she said.\n\n\"Either way, I think that's his problem, not yours. I mean it's his family.\"\n\n\"Yeah, but I'm afraid that if they give him a lot of shit about it, he isn't going to pick me over them.\"\n\n\"Well then, fuck him. He ain't worth it if he does that.\"\n\nRoxanne shrugged. \"Yeah, I guess.\"\n\nAn old man with flyaway white hair came into the restaurant. He appeared to be wearing just a light sweatsuit under his ratty coat. He sat down next to the old woman. She spoke quietly to him for a minute, then he loudly cleared his throat.\n\n\"Excuse me, ladies,\" he said in a hoarse voice. \"Flo says you are buying burgers for everyone. Is that so?\"\n\n\"Sure is,\" Clover said. Roxanne took two more burgers from the bag and handed them to him.\n\n\"Go get yourself a coffee or something,\" Clover said, \"Whatever you want, it's on us.\"\n\nThe man thanked them, stood and fetched coffee for himself and Flo.\n\nSporty came in a few minutes later, took off his wet coat and hung it on the end of the booth. He slid in next to Roxanne. Looking at the bags on the table, he asked, \"Why did y'all buy so many burgers?\"\n\n\"Because we're generous bitches and we share with everybody,\" Clover said.\n\n\"Well, shit then.\" He reached into the bag and pulled out a couple of burgers. After a few bites he said, \"I need to get a drink.\"\n\n\"Just go to the counter,\" Roxanne told him, \"We're running a tab.\"\n\nSporty stuffed the rest of the burger in his mouth, then went to the counter. He came back a minute later with a large orange soda.\n\n\"You been thinking about tomorrow?\" he asked Roxanne.\n\n\"Yeah, I've been thinking about it...\"\n\n\"Hey Sporty,\" Clover said, interrupting her, \"Let me ask you something.\"\n\n\"Yeah, what?\" He reached for another burger.\n\n\"Why do so many black families have macaroni and cheese for Christmas dinner?\"\n\n\"Because it's good as hell. We still have all the regular shit, turkey and mashed potatoes and cranberries and all that.\"\n\n\"Pumpkin pie or sweet potato?\"\n\n\"What do you think? Sweet potato pie.\"\n\n\"What kind of stuffing?\"\n\n\"Cornbread.\"\n\n\"Just plain?\"\n\n\"Fuck no, my mom puts Jimmy Dean sausage in it.\"\n\n\"Damn!\" Clover exclaimed. \"Listen, if this silly bitch don't want to come to your mom's house for Christmas dinner can I come?\"\n\n\"You can both come as far as I'm concerned.\"\n\nRoxanne laughed. \"That's actually a pretty good plan. If your mom spends five minutes with Clover, she'll think I'm little miss sunshine.\"\n\n\"No, she'll think you're a dumb bitch who thinks Santa only has eight reindeer.\"\n\n\"Rudolph doesn't count.\"\n\n\"Damn, you back on that shit?\" Sporty said, rolling his eyes.\n\nClover slipped out of the booth. \"Fuck you both,\" she said, standing up.\n\n\"Hey everybody,\" she shouted, \"I'm taking a Christmas survey. How many reindeers does Santa Claus have?\"\n\nThere was murmuring throughout the room. The big goth kid was counting on his fingers. One of the parking attendants was quietly singing Rudolph The Red Nose Reindeer. His friend said, emphatically, \"Eight.\"\n\nThe goth girl said \"Nine, if you count Rudolph.\"\n\n\"Rudolph wasn't one of the originals,\" he replied.\n\n\"So where did he come from?\"\n\n\"Gene Autry.\"\n\n\"Dead white man,\" she muttered.\n\nThe man who had been singing said, \"The Night Before Christmas guy gave them their names.\"\n\nThe skinny goth kid glared over the back of the booth at him. \"But who said he was in charge of fucking reindeer?\"\n\n\"He wrote the goddamn poem!\"\n\n\"They didn't know about Rudolph then!\"\n\n\"Isn't it nice to see how the holidays bring people together,\" Roxanne said to Sporty.\n\n\"All right,\" Clover said, clapping her hands together. \"Let's put it to a vote. How many people say nine?\"\n\nShe raised her hand and the goth kids and the old lady joined her.\n\n\"Who says eight?\"\n\nRoxanne, Sporty, the parking guys and the old man raised their hands.\n\nClover looked at Sporty. \"Put your fucking hand down, man, your vote don't count.\"\n\n\"Why don't my vote count?\"\n\n\"Because you ain't hoping to get any pussy from me tonight.\"\n\n\"You got that right,\" he smirked.\n\nRoxanne turned in her seat. \"How many people say ten?\"\n\nThey all looked at her, perplexed. No one raised a hand.\n\n\"That's your cue to sit down and shut the fuck up,\" she said to Clover. Clover looked around with a frown, then sat without saying anything more.\n\nSporty looked over his shoulder and said, \"Who thinks Die Hard is a Christmas movie?\"\n\nEveryone raised their hand.\n\n\"Goddamn right,\" he muttered.\n\nRoxanne nudged him with her elbow. \"I need to go to the bathroom,\" she said. He stood up and let her go by.\n\nThe parking lot guys were getting up to leave. They thanked her for the burgers as she went past their table, and wished her a happy holiday. One gave her a big hug. At least he didn't try to cop a feel, she thought as she went into the women's bathroom.\n\nWhen she opened the door to come out a few minutes later, Sporty was standing in front of it.\n\n\"You know how cute you look in that hat?\" he asked.\n\n\"Do you know how desperate you sound when you try to sweet talk me?\"\n\n\"Nah, I ain't desperate. It'd be alright if you don't want to go tomorrow. I get it. But don't go saying you weren't welcome to go, because you were asked.\"\n\n\"Okay, that's fair. It's just that it's a big step.\"\n\n\"You got to take steps if you want to get anywhere,\" he said.\n\nShe put her hand on his shoulder and kissed his cheek. Looking past him, she did not see anyone watching them. She gripped the waist of his pants and walked backward, pulling him into the bathroom.\n\nSporty pushed the door shut behind him, and let Roxanne tug him across the room until her hips bumped against the edge of the sink.\n\nRoxanne leaned back, looking up at him and biting her lip.\n\nHe gazed down at her, his hands on her hips, and kissed her. She kissed him back, but then turned her head.\n\n\"At some point,\" she said, \"we have to talk about where we are going.\"\n\n\"We do,\" he replied, \"but we ain't got to do it right now.\"\n\nShe draped her arms over his shoulders and they exchanged a long, hard, tongue swirling kiss. Sporty's hands moved to her breasts, squeezing and caressing them, while Roxanne dropped her hand down to rub his stiff cock through his jeans.\n\n\"I think you've got something you want to give me for Christmas,\" she whispered.\n\n\"I don't know,\" he said, \"I don't think you've been a very good girl.\"\n\n\"Do you want me to be a good girl?\"\n\n\"Aw, hell no,\" he said. He took a half step back, seized her waist and spun her around to face the sink. Her Santa hat fell off, landing in the basin.\n\nHe ran one hand down between her legs and cradled her chin in the other.\n\n\"Look at you,\" he whispered in her ear. Her glasses had slipped down her nose. She pushed them back into their proper position and gazed at herself in the mirror.\n\n\"Look and see what I see.\"\n\nRoxanne looked at his eyes in the mirror as his hand rubbed and squeezed her pussy.\n\n\"Don't look at me, look at you.\"\n\nShe stared at her own reflection, resisting the temptation to watch as he unfastened her jeans and pushed them down over her hips. But when his fingers slipped inside her, she leaned her head back and kissed the side of his neck.\n\nHis fingers probed deep into her, his thumb played with her clitoris. She reached back and rubbed his crotch. She fumbled at his belt until he gently pushed her hand away and undid it himself.\n\nRoxanne felt his cock bump against her ass, then slip down between her thighs. He placed his hand between her shoulders and gently pushed her down until her elbows were on the sides of the sink. She picked up her Santa hat and put it back on her head.\n\nSporty kneaded her ass, then spread her thighs, pressed the head of his cock into her pussy and began to fuck her with long, smooth strokes.\n\nClover snickered when she saw Sporty disappear into the women's bathroom. Get your figgy pudding, girlfriend, she thought, don't go until you get some. She walked to the counter and got a refill on her Mountain Dew, then stopped and listened for a minute. The sound wasn't loud, but she could hear them in the bathroom. They were definitely fucking in there.\n\nAs she walked back to the booth, she saw the goth girl looking toward the bathroom. She glanced up at Clover with a smirk. Clover winked at her and sat back down in the booth.\n\nA few minutes later, the skinny goth kid leaned close to the window and peered out. He wiped away the condensation with his sleeve and looked again.\n\n\"Fucking cops,\" he muttered.\n\n\"What cops?\" Clover asked.\n\n\"Cop car just pulled up.\"\n\n\"Oh, shit,\" Clover muttered. She looked toward the bathroom. She couldn't hear Roxanne and Sporty where she was sitting, but there was no doubt that when the cops walked in, they would. They had to walk right past the bathroom to get to the counter. One of them might even go into the mens room. She thought about warning them somehow, but didn't think there was enough time. That was confirmed when she saw the cops approaching the door. She had to do something.\n\nJust as they reached the door, she began singing at the top of her lungs.\n\nYou better watch out, you better not cry, you better not pout, I'm telling you why.\n\nThe goth girl looked up at her and immediately realized what she was doing and joined in.\n\n Santa Claus is coming to town.\n\nThe cops walked in. One was an older man. His eyes and shoulders both drooped. There's another guy doesn't want to be working on Christmas Eve, Clover thought. His partner was a young, thin black man. They walked right past the bathroom to the counter.\n\n He's making a list, He's checking it twice. \n\nThe other goth kids joined in the singing.\n\n He's gonna a find out who's naughty and nice.\n\nThe old couple began to sing along.\n\nSanta Claus is coming to town.\n\nThe two cops stood by the counter, looking around the room. Julio approached the cash register. The older cop leaned in and spoke to him. Julio pointed to Clover and the cop looked over at her. He nodded, then spoke to Julio again.\n\nHe sees you when you're sleeping, He knows when you're awake He knows if you've been bad or good, So be good for goodness sake\n\nJulio handed each of the cops a bag of burgers and a cup of coffee.\n\nNow get the fuck out of here, Clover thought, but instead of leaving they walked toward her. The older cop held out his hand.\n\n\"Awfully nice thing for you to do, ma'am,\" He said. The other customers kept singing.\n\nClover shook his hand.\n\nThe younger cop shook with her as well. They turned toward the door, tipping their hats to the older couple as they went by.\n\nThe older cop walked out just as the customers were finishing the last chorus, but the younger cop turned and went to the counter. He held out his open bag toward Julio.\n\n\"Could you toss a couple of ketchups in there?\" he asked.\n\nJulio nodded and dropped a handful of packets in his bag.\n\n\"Thank you, Merry Christmas.\" he said, then waved to the customers. \"Merry Christmas, everyone.\"\n\nHe took two steps toward the door and stopped and looked toward the bathroom. Clover could hear Roxanne moaning from where she was sitting.\n\nHe looked around the room. \"Does anyone know who is in there?\" he asked.\n\n\"Yes, officer,\" Clover said, \"That's my friend. I'm afraid she ate a few too many of these gut grenades. You know what they can do to your digestion.\"\n\n\"Yeah, we all been there once or twice, I suppose,\" he said. He went to the door and started to open it, then stopped, obviously listening to the sounds emanating from the bathroom. He turned and looked Clover in the eyes. An amused expression crossed his face. He winked at her and walked out.\n\nRoxanne had already come twice when she heard the singing. She thought it was just in her head until Sporty paused between thrusts and muttered, \"What the fuck is that?\"\n\n\"Jesus, don't fucking stop,\" she groaned.\n\n\"Oh, you need some more of this dick?\"\n\n\"Goddamn it, yes, Sporty, fuck me.\"\n\nHe gripped her hips, and began slapping his loins against her ass harder. She braced her hands against the mirror and shoved back against each plunge of his cock.\n\n\"You getting kind of loud,\" he told her. She dropped her head and her Santa hat fell off. She grabbed it and bit down on the white felt ball to keep from crying out. But after a minute or two, she let go of it, unable to keep from moaning loudly each time he jammed his cock deep inside her.\n\nShe looked up at him in the mirror. Their eyes met, and the look of passion on his face pushed her over the edge into another orgasm. Before it subsided, she felt him stiffen, jerk his cock a few more times and withdraw, as his hot cum ran down the inside of her thigh.\n\n\"At least they stopped that fucking singing,\" Sporty said as Roxanne cleaned herself up.\n\nHe picked up her Santa hat from the floor, brushed it off and stuck it back on her head, then unlatched the door.\n\n\"Hold on a minute, babe,\" Roxanne said. She raised her face and kissed him. \"I'd be happy to go to your mom's tomorrow.\"\n\n\"Damn,\" he said with a wide grin, \"All I had to do was fuck you real good?\"\n\n\"You always fuck me real good.\"\n\n\"Then I will always get my way, right?\"\n\n\"Don't push your luck,\" she said, opening the door.\n\nAs they came out of the bathroom, the goth kids were walking toward the exit.\n\n\"Merry Christmas. And thanks,\" the girl said.\n\n\"Yeah, thanks,\" skinny kid said as well.\n\nThe big kid stopped, looked at Roxanne and held his fist out toward Sporty. \"Yo,\" he said, \"You da dawg, bro.\"\n\nSporty bumped fists with him. \"Fucking white kids,\" he muttered, chuckling.\n\nThey slipped back into the booth, where Clover was waiting for them with her arms crossed and a smug expression on her face.\n\n\"What was that singing?\" Sporty asked.\n\n\"That was me saving the you two fuckpuppies from spending Christmas in the slammer.\"\n\n\"What are you talking about?\" Roxanne asked.\n\n\"A couple cops came in here while you were getting your stocking stuffed. We were singing so they wouldn't hear the noise you were making.\"\n\n\"We weren't making that much noise.\"\n\nSporty laughed. \"Girl, you loud as hell.\"\n\nThe old couple came to their booth and thanked them for their burgers.\n\n\"Merry Christmas,\" the man said, shaking all their hands.\n\n\"There is a special place in heaven for you ladies,\" the woman said.\n\nAs they walked away, Clover said, \"You think there is a special place in heaven for us?\"\n\n\"If we died tonight, we might at least be able to make a case for it,\" Roxanne said with a shrug.\n\n\"And by next week, we are fucked again.\"\n\nJulio came out of the kitchen with a damp rag, and wiped the table where the parking guys had been sitting.\n\n\"Hey, Julio didn't vote,\" Clover said. She called to him. \"Julio, how many reindeers does Santa Claus have?\"\n\nJulio looked at her with a perplexed expression. \"I don't know,\" he said.\n\n\"You know, like in the song. Dancer and Prancer and Donger and Blitzkin...\"\n\n\"Donger?\" Roxanne asked.\n\nJulio shrugged. \"I don't know that song.\"\n\n\"You don't know it? What the fuck country are you from?\"\n\nHe stared as her and said, \"Colombia.\"\n\n\"Oh. Shit. Sorry, I wasn't trying to be rude.\"\n\n\"She doesn't have to try,\" Roxanne said, \"It's her default mode.\"\n\nJulio shook his head and returned to the kitchen.\n\n\"Give the brother a break,\" Sporty said, \"He's from South America. What the fuck he gonna know about reindeers? Ask him about llamas, he'll probably tell you everything you ever wanted to know.\"\n\n\"I can't think of anything I want to know about llamas,\" Clover shot back. \"But I do feel kind of bad for the guy. I mean, he'd have had a lot easier night if we hadn't come in here and bought burgers and shit for everybody.\"\n\n\"It's his job,\" Roxanne said with a shrug.\n\n\"Yeah, and we fucking threw a fit because we had to work on Christmas Eve.\"\n\n\"You threw a fit. I didn't.\"\n\n\"You didn't like it.\"\n\n\"No, but I acted like a fucking grown-up about it.\"\n\n\"Yeah, but you have to act like one because you don't look like one.\"\n\nSporty looked in the bag. \"Anybody want this last burger?\" he asked.\n\nRoxanne and Clover shook their heads.\n\nSporty bit into the burger, swallowed and said, \"You feel so bad for the guy, why don't you do something nice for him for Christmas?\"\n\n\"Like what?\" Clover asked.\n\n\"Like what the fuck you think?\" Sporty asked.\n\nClover looked at him for a minute, then tipped her head to look past him. Julio was wiping off the service counter.\n\n\"He's not a bad looking guy,\" Roxanne said.\n\n\"Well then, why don't you go do it then?\" Clover asked.\n\n\"I wasn't a twat to him.\"\n\n\"Besides,\" Sporty said with a grin, \"she already got hers.\"\n\n\"I ain't gonna fuck him in the bathroom,\" Clover said.\n\nRoxanne laughed. \"The bathroom is clean, at least.\"\n\n\"You don't think I will do it, do you?\"\n\n\"Bitch, I stopped trying to figure out what you would or wouldn't do about the time you set my boyfriend's car on fire,\" Roxanne said.\n\nJulio disappeared into the kitchen.\n\n\"Fuck both of you,\" Clover said. She got up and followed him.\n\n\"Hey, Julio,\" she called.\n\nHe was standing at the dish sink and turned around at the sound of her voice.\n\n\"Listen, dude,\" she said, \"I hope I didn't say anything that offended you or got you upset or what not. That's just me clowning around.\"\n\n\"It is fine. I understand.\"\n\n\"Well, I think we put a lot of extra work on you tonight, coming in here and disrupting and shouting and singing and all.\"\n\n\"No, it is fine, Missus.\"\n\n\"Well, it's Christmas and all that. I'd like to maybe give you a little something for your trouble...\"\n\nJulio waved his hands. \"No Missus, we are not allowed to except tips.\"\n\n\"Yeah, I wasn't talking about giving you money.\"\n\nShe looked around and saw an open door at the back of the kitchen. She walked to it and peered into a dark room.\n\n\"What's in here?\" she asked.\n\n\"That's the managers office.\"\n\nClover walked in and flipped the light switch. A large flat top desk against the far wall nearly filled the room. There was a faux leather swivel chair in front of it. Clover plopped down into it, spun around, and put her feet up on the desk.\n\nJulio stood in the doorway, looking nervous.\n\n\"The manager does not like anyone sitting in his chair,\" he said, \"No one is allowed.\"",
        "\"But you're the assistant manager right?\"\n\n\"Si.\"\n\n\"So when he ain't here, you're the fucking manager and it's your chair.\"\n\n\"I do not think so...\"\n\n\"And I am your guest, so I can sit in your chair.\"\n\n\"Missus,\" he said, \"I know it's a foolish rule but I need this job.\"\n\n\"Do you think I'm gonna tell anybody about this?\"\n\nJulio looked at her with a puzzled expression. \"About what, Missus?\"\n\n\"First of all, stop calling me Missus. Then come over here and find out.\"\n\nShe sat up, put her feet on the floor and patted the top of the desk.\n\nJulio leaned back and looked around the kitchen as if he suspected someone might be lurking there.\n\nClover patted the desk top again. \"The boss told you not to sit in his chair, but he didn't say shit about sitting on his desk, did he?\"\n\n\"No. I suppose he did not.\"\n\nShe pushed the chair back until it banged into the wall. \"So have a seat.\"\n\nJulio bit his lip, seeming lost in thought, then sat on the edge of the desk.\n\n\"Dude, lose that dumbass apron.\"\n\nJulio reached behind his back and untied the apron. Before he could pull it over his head, Clover had his belt unbuckled. He watched with an expression of amazement as she deftly unsnapped his waistband, yanked down his zipper, and pulled his cock free.\n\n\"Do all the men in Columbia have big dicks?\" she asked as she wrapped her hand around it.\n\n\"Si,\" Julio said, \"It is well known in Latin America, Missus.\"\n\n\"You call me Missus again and I might bite it off,\" she said. She flicked her tongue at the head, then wrapped her lips around it and began to suck.\n\nJulio briefly lifted his hips from the desk and tugged his pants and shorts down to his thighs.\n\nClover cupped his balls in her left hand, massaging them, while her right hand stroked his shaft. She took it in her mouth again, but almost immediately, she heard a chime ringing.\n\nShe raised her head and asked Julio, \"What the fuck is that?\"\n\nJulio had a look of panic on his face. \"Someone is at the drive-through,\" he said, \"I must go serve them.\"\n\nHe started to rise, but she put her hands on his hips and pushed him back down. \"No, fuck that,\" she said, \"Stay right there.\"\n\nShe got up and rushed to the dining room. Roxanne and Sporty were sitting in the booth, kissing.\n\n\"Hey, you fucking lovebirds, I need help here,\" she shouted.\n\nWhen they looked at her in surprise, she said, \"There's somebody in the fucking drive-through. Either of you guys ever work at a fast food place?\"\n\n\"I worked at Burger King in high school.\" Sporty said.\n\n\"Well, pry Roxy's hand off your whopper and get the fuck in here and find out what they want.\"\n\nShe disappeared back into the kitchen. Roxanne and Sporty looked at each other and shrugged.\n\n\"I'll give it a try,\" Sporty said. He slipped out of the booth and headed toward the kitchen, Roxanne following close behind.\n\n\"It's like somebody told Santa they wanted a shit show for Christmas,\" she muttered.\n\nSporty went to the drive-through window and looked around. \"Fuck. I don't know how to use this touchscreen shit,\" he said.\n\n\"Can you at least talk to the guy?\" Roxanne asked.\n\n\"Yeah, that shit looks the same. Hold on.\"\n\nHe was distracted by the sounds coming from the manager's office. \"What's she doing in there?\" he asked.\n\n\"Sounds like she's sucking his dick.\"\n\n\"Damn, she's loud, too. Sounds like somebody got a rag stuck in their wet-vac.\"\n\nHe pressed several buttons on the communications panel, but nothing happened. He fiddled with the volume knob, and clicked the headset on and off, all to no avail. Suddenly, he was startled by a blasting horn, and looked over to see a white pick up truck right outside the window The driver, a large, red faced, bearded man, was glaring at him.\n\n\"Honey, I don't think that's Santa Claus,\" Roxanne said.\n\nSporty slid the window open.\n\n\"I've been out here trying to order for ten fucking minutes,\" the man shouted.\n\n\"Yeah, sorry about that,\" Sporty said. \"We got some kind of computer problem.\"\n\nThe man looked past him at Roxanne.\n\n\"Looks to me like the problem is you're having some kind of party in there.\"\n\n\"Naw, she's the manager. She come in to try to fix it.\"\n\n\"So why isn't she fixing it?\"\n\n\"Sir,\" Roxanne said, \"I'm sorry, but there is nothing we can do about it until the tech guys get here.\"\n\n\"I worked to midnight on Christmas Eve. All I wanted was some burgers for when I get home.\"\n\n\"I'll see what I can get for you, no charge.\"\n\nShe went to the grill. There were onions simmering in the corner and pre-cooked patties in a warming pan. She found a package of buns and put a half dozen on the grill to brown.\n\nThe man tapped his fingers impatiently on the door of his car.\n\n\"This is some bullshit,\" he barked at Sporty, \"You got something for me or not?\"\n\n\"Roxy is fixing it up right now.\"\n\n\"The manager's name is Roxy?\"\n\n\"Yeah, she was named for her grandmom.\"\n\nRoxanne's glasses kept steaming up from the grill's heat. She did her best to assemble the burgers, but one got no onions, one had triple pickle and some were drenched with mustard and ketchup while others got no more than a drop or two.\n\nShe boxed the burgers, stacked them in a bag, and handed it to Sporty.\n\n\"About time,\" the man grumbled. \"What about a Coke? I need something to drink.\"\n\n\"Coming right up!\" Roxanne said with a big smile. As she poured a Coke from the dispenser she thought, I hope those burgers give you the shits, asshole.\n\nSporty handed him the drink and cheerily said, \"Merry Christmas, sir.\"\n\nThe man growled. \"Yeah, right. I guess the two of you can get back to whatever you were doing now.\"\n\n\"Thank you, sir,\" Sporty said, \"But we already finished that. Appreciate the thought though.\"\n\nThe man glared at them, muttered something underneath his breath, and drove off.\n\n\"What did he say?\" Roxanne asked.\n\n\"I didn't catch in, but I think one of the words started with an F and one with an N.\"\n\n\"Feliz Navidad?\"\n\n\"Most likely not.\"\n\n\"Should we figure out how this works, in case someone else pulls up?\"\n\n\"How long Julio gonna take getting his nut?\"\n\nRoxanne shrugged.\n\n\"Hold up,\" Sporty said, \"I got a better idea.\"\n\nHe walked to the back door, opened it and, looking outside, flicked a couple of light switches on the walk.\n\n\"There you go,\" he said.\n\n\"What did you do?\"\n\n\"Turned off the outside lights, so the place looks closed.\"\n\nClover took Julio's cock into her mouth until she felt his pubic hair tickling her nose, then swallowed. That will keep him from trying to go see what's happening in the kitchen, she thought.\n\nWhen she was out of breath, she rose up, releasing his cock with a loud popping sound. She circled the head with her tongue a few times, then dove down and swallowed again. It was late, she was tired, her jaw was starting to ache and her belly was rumbling in complaint over its load of greasy hamburger.\n\nShe sucked in her cheeks as hard as she could, and Julio exhaled loudly and raised his hips from the desk. As she lifted her head, Julio spurted into her mouth. She swallowed most of it, then picked up his apron off the desk and wiped her face with it, surreptitiously spitting out the rest of his load.\n\nHe leaned forward, his head hanging low, while he recovered his breath. Clover stood up, and loudly burped.\n\n\"Sorry about that,\" she said.\n\nJulio stood, pulling up his pants.\n\n\"It is okay, Missus.\"\n\nThey walked into the kitchen. Julio immediately noticed that it was dark outside the drive through window.\n\n\"You friends, I think they turned off the lights,\" he said, \"I will have to turn them on and to see what else they might have done.\"\n\n\"Okay, well, Merry Christmas, dude.\"\n\n\"And to you, Missus.\" Clover turned away, but he added, \"Missus?\"\n\nShe looked back.\n\n\"Maybe you will come for hamburgers again.\"\n\nClover looked him over. \"Yeah, I might.\"\n\nRoxanne and Sporty were sitting in the booth when Clover returned to the dining room. Roxanne was leaning against him, her head on his shoulder and her eyes shut.\n\nClover sat down across from them. \"You guys about ready to go?\" she asked.\n\nRoxanne sat up straight and stretched. \"Yeah we might as well,\" she said.\n\nSporty looked out the window. \"That sleet shit turned into real snow,\" he said. He nudged Roxanne. \"Let me up, baby.\"\n\nShe stood and he slid out of the booth. \"Give me your keys,\" he said, \"I'll get your car warmed up.\"\n\nShe fished her keys out of her purse and handed them to him as he put on his coat.\n\nWatching him walk out, Clover said, \"When a man cleans the snow off your car for you, he's getting serious. Especially if he does it after you fuck him.\"\n\n\"I think asking me to come with him to his mom's house for Christmas shows that pretty good, too.\"\n\n\"So, stop being a fucking pussy about it. You think you're going to find another nice guy who is obviously crazy about you and doesn't give a shit what you do for a living?\"\n\nRoxanne was silent for a minute. \"It doesn't seem likely, does it?\" she said at last.\n\n\"Do you think he was serious when he said I could come too?\" Clover asked.\n\n\"I don't think he would've said it if he didn't mean it. That's not the way he is.\"\n\n\"But I'm gonna have my son with me, do you think that would be okay?\"\n\n\"So ask him.\"\n\nClover stood and they put their coats on and went outside.\n\nA light snow was falling. Sporty already had Roxanne's car cleared and was brushing off his own.\n\n\"Hey Sporty,\" Clover shouted, \"In that stuffing, does your mom use the spicy sausage or the regular?\"\n\n\"What do you think? The spicy, of course.\"\n\n\"So did you mean it when you said I could come.\"\n\n\"I don't say shit I don't mean.\"\n\n\"Is it okay if I bring Hunter?\"\n\n\"Bitch, you think my mom is gonna turn away a hungry child on Christmas?\"\n\n\"I guess not.\"\n\n\"You guess right. I'll come by and pick you up after I get Roxanne.\"\n\n\"Thanks, Sporty,\" she said as she got in the car.\n\nRoxanne walked over to Sporty, put her hands on his chest and kissed him.\n\n\"You're a good man,\" she said.\n\n\"Thank you, baby. Just don't tell her that I like her, okay?\"\n\n\"Your mom doesn't call you Sporty, does she?\"\n\n\"No my brothers and sister call me Sporty. My mom and my aunts call me Erwin.\"\n\n\"You know that when she finds that out, she's going to fuck with you about it for weeks.\"\n\nSporty shrugged. \"She can consider that a Christmas present.\"\n\nThey kissed again and Sporty said, \"You know, I had a lot of girlfriends before, but I never brought one home with me on Christmas.\"\n\nShe patted his cheek, kissed him and said, \"I've had a lot of boyfriends before, but I never fucked one in the bathroom at White Castle on Christmas Eve.\"\n\nShe kissed him on the nose and dashed to her car, calling, \"See you tomorrow, babe.\"\n\n\"It's about time,\" Clover said, as Roxanne got into the drivers seat, \"I'm freezing my tits off over here.\"\n\n\"That's because they're fake.\"\n\n\"Probably.They should've come with like a heater option.\"\n\n\"I wish I'd known it was a problem, I would have got you one for Christmas.\"\n\n\"Hey, do you think Sporty's mom and aunts and them will wear those big old hats like black ladies like to wear to church?\"\n\n\"How the fuck should I know? Why don't you walk in and say, hey, how come you black lady aren't wearing your big funny hats?\"\n\n\"Bitch, I ain't insensitive like that.\"\n\n\"Really? You just sucked a guy's dick because you felt bad about making fun of him being an immigrant.\"\n\n\"And I told him if he comes to the club on New Year's Eve, you'll give him a free dance.\"\n\n\"You did not.\"\n\n\"I told him that when you give a lap dance, you like the guy to stick his thumb up your ass.\"\n\n\"That's okay, I tell everybody that you like to stick your head up your ass.\"\n\nAfter quietly watching the snow fall on the silent streets for a minute, Clover asked Roxanne, \"If you could eat your own pussy, would you do it?\"\n\n\"How the fuck do you even think of shit like that?\"\n\n\"I had an ex-boyfriend who could suck his own dick.\"\n\n\"So why the fuck did he keep you around?\"\n\n\"He didn't. I told you he's an ex-boyfriend. Hey, you know what we should do?\"\n\n\"Stop at 7-11 so you can blow the clerk?\"\n\n\"No. Why don't we drive back through the park?\"\n\n\"That's actually a great idea,\" Roxanne said. At the next corner, she turned left onto Broadway and drove to the entrance of City Park.\n\nShe turned in and they entered a wonderland of festive lights. All along the Park Road, trees had been wrapped in nets of light, while others displayed clouds of color in their crowns.\n\nAround the first bend in the road they saw a bright display spelling out \"Happy Holidays\" in ten foot tall letters. Just past it were three towering Christmas trees composed entirely of light; one red, one white and one blue. There were glowing animated figures; chiming bells, waving snowmen, dancing teddy bears. There were strands of lights shaped like wreathes and bows, stockings and candles. Backlit ice sculptures sparkled; snowflakes and stars and nutcrackers and candy canes. There was a menorah and a dreidel and the seven candles of Kwanzaa.\n\n\"It makes me feel like a little girl again,\" Roxanne said.\n\nClover reached across the console and squeezed Roxanne's hand.\n\n\"Merry Christmas, Rhonda,\" she said.\n\nRoxanne felt her eyes moisten. \"Merry Christmas, Charlene.\"\n\nThe last display before the park exit, the grand finale, was a great arc of lights over the road. On the left, Santa rode in his sleigh, overflowing bags of gift boxes and teddy bears behind him. His reindeer stretched along the arc, their legs blinking in a dance across the night sky. At the right end of the display, Rudolph's nose glowed like a beacon.\n\n\"Nine!\" Clover shouted, \"Bitch, count 'em! nine fucking reindeers!\"\n\n\"Rudolph doesn't count.\"\n\n\"He counts in this town.\"\n\n\"Why? Because Parks and Rec says he does?\"\n\nClover sat back, her arms crossed over her chest in triumph. \"Nine fucking reindeer,\" she smirked.\n\n\"Eight,\" Roxanne muttered.\n\n\"Nine.\"\n\n\"Eight...\"\n\n Author's note: Roxanne, Clover and Sporty also appear in The Gold Dollar Girls and The Gold Dollar Girls Return"
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "strippers",
        "christmas",
        "blowjob",
        "bathroom sex",
        "humor",
        "hamburgers"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/white-castle-christmas"
}