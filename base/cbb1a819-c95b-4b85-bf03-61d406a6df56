{
    "title": "Los Cinco Hermanos Ch. 05",
    "pages": [
        "Wherein work intrudes and we invite Shark Girl home to dinner\n\nAuthor's note: this is part 5 of a 12-part story arc which I've put under Group Sex (see Chapter 1). Like all my stories, it begins with character development and in this case, over several chapters. The chapters can have the elements of a number of different categories and I will try to give advance warning. This one is primarily Erotic Coupling (i.e., one-on-one) and more background. And a gentle reminder: this is all Fiction \u2013 Willing Suspension of Disbelief recommended... \n\n* ~ * ~ * ~ * ~ *\n\nI woke in the same bed I'd fallen out in, but someone had cleaned me up and there were different sheets on the bed, and covers over me. It was dark, but there was enough ambient light that I could see I was in the studio. I remembered where the bathroom was and eased out of bed, suddenly aware of being very, very sore, and picked my way over to it.\n\nWhen I flipped on the light, the blaze of yellow-white nearly blinded me and I actually winced a little. But it didn't stop me from making it to the toilet and sitting down. And chuckling.\n\nAcross from the toilet, next to the shower door, was a towel rod with a towel draped over it. Someone had pinned a note to it:\n\nGood Morning, Fair Lady!\n\nThere is coffee, otherwise known as the Elixir of Life, available:\n\n1) In the kitchen,\n\n2) In the living room,\n\n3) At the bar by the pool,\n\n4) In your room (you'll have to brew it)\n\nYour appreciative servants,\n\nLos Cinco Hermanos y Dos Hermanas\n\nLaughing made certain rather intimate parts of me ache. Remembering the anesthetic ointment in the medicine cabinet in Dave's room, I decided to rummage the one in here and was rewarded with another tube of Nupercainal. Jerry's guests must get sore on a regular basis, I thought as I applied some liberally to my nethers and anus.\n\nMy belly hurt from cumming so hard and for so long, as did my back and thighs. I decided the only cure would be some kind of snack to appease my complaining stomach, a drink to anesthetize the rest of me and a soak in the jacuzzi. I finished up and wandered out of the bathroom in search of my clothes. I found the sundress and my shoes, but that was it. No panties. So I decided Screw it and just took the dress and shoes with me, not bothering to put them on.\n\nI headed up to \"1\" first, looking for the kitchen and something to snack on. This was either Sunday night or Monday morning, and which would determine my course of action. I found a fresh pot of coffee on and didn't have any trouble finding some cheese and crackers, fruit, some cinnamon buns and apple juice. I also found the clock on the stove, which read 22:30. I looked out over the lights of L.A. and realized that meant 10:30 in the evening. So it was still Sunday. Either that or I'd slept through my Monday check-in meeting.\n\nFinishing my snack and taking the biggest mug of coffee I could find, I headed back down to \"2\" and searched out \"my room\". I was feeling rather saucy walking around in nothing, and I liked it, so I left the sundress and shoes in the room, found my phone in my purse and took it and the coffee in the direction of the pool.\n\nI found Dave, Ron and Jackson doing laps in the pool, and Jerry, Paul, Ginger and Molly in the hot tub. I walked over and sat on the edge of the jacuzzi and started checking my email.\n\n\"Hey, beautiful!\" Jerry greeted me as I sat. \"You find everything you need?\"\n\n\"Snacks, coffee, cell phone...\" I indicated, then waved my arm at the universe, \"freedom. Check, check and double check. Thank you for taking such good care of me. All of you. I need to see if I have to go in to work in the morning.\"\n\n\"Check away,\" Jerry smiled. \"Join us when you feel like it. There's fresh coffee behind the bar. Help yourself. Oh, and before you get lost in the world of ordered electrons, allow me to tell you how incredibly impressed I am with you, as a sex partner, a porn starlet and a person. You've won over several hearts this weekend, mine included. I'll let you deal with your work...\"\n\nHe closed his eyes and rolled his head, stretching his neck.\n\n\"Anything you need, you let me know,\" Molly smiled.\n\n\"Ditto-ish,\" Ginger told me. \"Although she runs this place.\"\n\nI nodded my appreciation and checked my messages.\n\nMost of it was crap, especially being copied on the techies pissing on each other over who broke what, but the one I cared about was my boss' boss calling an all-hands meeting for 9am in the big conference room at PAMC. That one, I needed to be at and looking sharp.\n\nI set my phone on the chaise and eased into the spa, the jets of hot water hurting at first, then numbing me out while massaging me.\n\n\"I have to be at a 9am meeting,\" I told Jerry. \"At PAMC. How do I have to time it?\"\n\n\"Give yourself an hour for the half-hour drive, plan on getting there by 8:30, and back that up by however long you need to get ready. Tell us and we'll make sure you're up.\"\n\n\"Okay, that's great. I appreciate it. I'll need to be up at 6:30 and tell me where to find breakfast before I leave. I don't like their liquid mud and stale donuts. Also, Jerry, do all your bathrooms have Dibucaine?\"\n\nHe just got a silly little grin on his face and said, \"What do you think?\"\n\n\"You'll get a wake up at 6:30 and I'll have breakfast waiting for you in the nook, or the kitchen,\" Molly told me. \"Any preferences?\"\n\n\"Just like you did yesterday and this morning... simple and delicious. And thanks. You're a hard worker, Molly. I hope Jerry appreciates you.\"\n\n\"Oh, he does,\" she smiled. \"I don't have classes tomorrow, but I do the rest of the week, so I won't be around as much. Hopefully, by then you'll be able to fend for yourself!\"\n\nI lay back and let the water pound away at me...\n\nSometime later, Dave and Ron joined us. They informed us Jackson had decided to go do some free-weights, then hit the spa before turning in. Jerry took his leave, telling us he wanted to get some editing done before crashing, but that thanks to my natural talents, most of the editing had already been done in the camera. It was just splicing it all together. He promised a sneak preview when he got it done.\n\nDave, Paul, Ron, Ginger, Molly and I chatted for awhile about the amazing shoot and our favorite parts and whether our asses were going to look too big on-screen \u2013 well, that one was mostly mine \u2013 and how lucky we were that Linda had fallen and cracked her head.\n\nEven though I had slept since passing out after the shoot, I was still tired. I told the others that and excused myself.\n\n\"I think I'll sleep alone, tonight,\" I told them. \"Nothing against any of you. You've been fantastic!\"\n\n\"Go recuperate!\" Ginger laughed. \"We'll leave you alone \u2013 until we sic the dogs on you in the morning!\"\n\n\"If you're inferring I'm a bitch, you bitch...\" Molly broke in with faux indignation.\n\n\"No, bitch, I'm not inferring you're a bitch...\" Ginger smiled, and Molly laughed.\n\n\"Okay, guys, I'll see some of you in the morning,\" I told them as I climbed out, grabbed my cell and my coffee mug and headed for my room.\n\nA lot of thoughts went running through my head as I lay there, drifting off to sleep, but the main one was, what kind of rabbit hole did I fall down to end up in this kind of Wonderland?\n\n* * * * *\n\nThe sea of blank faces listening to the political spin, sipping their institutional mud and trying to stay awake, was a pretty good indication of how things were going. I, at least, had smuggled in a thermos of Jerry's coffee.\n\nThe official company line was, due to unforeseen technical difficulties, the implementation had been delayed until this week, but now we were ready to go and everybody needed to bring their A-game. By noon the system would be fully operational and validated, and by 13:00 we were expected to start classes.\n\nToday would be an abbreviated day with the generalized intro to facilities management and patient care being given to everyone in the afternoon. Those who couldn't be spared would get it in the morning. Class sizes, times and assignments were being completely revamped to accommodate the foreshortened implementation schedule, so check with our supervisors for our new assignments, blah-blah-blah.\n\nI came out of it wishing I were back up in the Hills. But at least I knew I'd be working a 9-to-4 today through Thursday, and a 9-to-noon on Friday. After that, theoretically, I'd be going home. I immediately began planning to tack some vacation time onto the end of this gig.\n\nWhen four o'clock came and I could tell my class, \"so that's the overview of how the parts of the system interact, and who is responsible for what within the processes \u2013 any final questions?\", I was hoping like hell that they wanted to get out of there as bad as I did. And apparently they did, because there weren't any questions. Unfortunately, I got stopped on my way out by my supervisor, Sandra. Not Sandy \u2013 she hated being called Sandy \u2013 but definitely the formal Sandra. It crossed my mind that she could use an introduction to Los Cinco Hermanos.\n\n\"You're looking rather bright-eyed and bushy-tailed,\" she told me in her cheerful schmoozing voice. \"Last week, I thought you were ready to kill someone. Have a good weekend?\"\n\n\"Actually, yes,\" I told her in my best cheerful and charming voice. \"I realized I was getting pretty grumpy, what with all the screw-ups, so I got out, did some sightseeing, basically decided to reboot. Finding out we were actually a 'go' this week didn't hurt, either.\"\n\n\"That's great to know,\" she went on and I got a feeling she might be fishing for something. \"Would you like to have dinner tonight, at my hotel? Or maybe whatever hotel you've moved to?\"\n\nOh, shit. I hadn't moved out, but she obviously thought I had. I needed to be careful with this one.\n\n\"Actually, Sandra, I haven't moved out,\" I told her. \"I met some friends and was staying the weekend with them. That's why I wasn't at the hotel. I presume you tried to find me there?\"\n\n\"I went by to give you an advanced look at the new schedules,\" Sandra told me, \"and the desk clerk told me you'd taken all your stuff out in the middle of the night in the company of a handsome young man.\"\n\nOh. Oh, this was going to be bad. Sandra was like part-bloodhound, part-shark. I decided to brazen it out.\n\n\"Actually...\" I dropped my voice and took her arm, steering her away from the traffic headed to the parking garage. \"Actually, Sandra, the 'handsome young man' is my new lover and I'd appreciate it if you kept it to yourself. You know how destructive office gossip can be.\" She knew alright \u2013 she treated the creative use of nasty gossip as an art form. \"I'm trying to be discrete around our clients.\"\n\nThat one she would appreciate. Perception was everything to her, especially if dollar signs were attached. She wouldn't spread rumors that would come back to hurt the company, or her bonus, or even a co-worker if it was going to damage the client-company relationship. Get them fired when they weren't on an assignment, maybe, but not if it would hurt the bottom line.\n\n\"And besides,\" I winked conspiratorially. \"I wouldn't want the reasons for my attitude adjustment getting out \u2013 others might be jealous.\"\n\n\"Reasons?\" she asked, emphasizing the plural. Double shit...\n\n\"All the things I like about him, I mean,\" I temporized. She wasn't buying it but she let it go. \"So I'll have to take a pass on dinner tonight.\"\n\n\"For more 'attitude adjustment'?\" she asked in her snarky way.\n\n\"Well... yeah?\" I told her, putting on my apologetic face with the I'm-getting-something-you-aren't overtones.\n\n\"I hope I get to meet this new fellow of yours,\" she told me, \"since you're blowing me off for them \u2013 I mean, him.\" She made sure I picked up her inference.\n\n\"Maybe...\" I agreed, as noncommittally as I could. Getting her laid by Los Cinco Hermanos would be a life-altering event. I'd want to be ready to leave the company before I let that happen. \"Maybe when some of the dust settles around here...\"\n\n\"And if you'd excuse me,\" I added, \"I really would like to beat traffic.\"\n\n\"Where does he live?\" she asked, and it was so conversational, I answered without thinking.\n\n\"Up in the Hills,\" I told her. \"Overlooking the valley.\"\n\n\"So. Rich, too...\" she observed, more statement that question. Oh, brother...\n\n\"I guess,\" I told her, trying to cover my ass. \"He has a nice place. I really don't know everything about him, yet.\"\n\n\"Well, sweetheart, there's nothing wrong in trolling for rich young men,\" she informed me. \"Especially when it's work, work, work, 24-7. A professional woman definitely needs to de-stress from time to time. Just don't be late to work!\" She gave me one of her world-class shark smirks, then waved her hand as she turned to head back towards the building. I, instead, headed for the parking garage.\n\nShe was going to be trouble. Sandra's curiosity was burning and she wouldn't rest until she'd found out all about Los Cinco Hermanos. She'd acquired some pretty powerful friends along the way and she'd be rather formidable to foil. I was going to have to deal the guys in on this problem. I got to my car, paid the fee on the way out, made sure I kept the receipt and headed back up into the Hills, to Jerry's.\n\n* * * * *\n\n\"We appreciate the warning,\" Jerry told me. \"And me, especially. We'll have to figure out how to handle this particular well-connected snoop. She's not the first.\"\n\n\"I don't suppose just fucking her brains out would be useful?\" Ron put in.\n\nWe were gathered around one of the poolside tables after a wonderful dinner provided by Molly. She had then disappeared to her quarters to study.\n\n\"There's always blackmail,\" Ginger suggested. \"Does she do girls?\"\n\n\"I haven't a clue what she's into, other than power,\" I told them. \"She's been my boss for more than four years now, and this is the first time she's invited me to dinner. And I'm ninety-nine percent sure it was because the desk clerk's description of Jerry as a handsome young man helping me move my things in the middle of the night put me on her radar.\"\n\n\"Where does she live?\" Jerry asked.\n\n\"Out here somewhere,\" I told him. \"San Jose, I think.\"\n\n\"San Jose isn't 'out here',\" Jerry chided me. \"It's near San Francisco.\"\n\n\"Out here as in California,\" I told him. \"I'm from Illinois, remember? Everything from Seattle to Tijuana is 'out here'. She works out of our Santa Clara office. When I'm not traveling, I work from home. For the last couple of years, though, I've been traveling a lot \u2013 three weeks out of four, mostly.\"\n\n\"And probably not getting much of a chance to enjoy it,\" Dave commented.\n\n\"Not like I enjoyed the weekend, no,\" I admitted with a little bit of a blush. They were good and they knew it.\n\n\"Okay, so the people she's likely to know will be similar to the people I know. Being a heavy campaign contributor has major advantages in this State,\" Jerry smiled. \"Connections I'm not adverse to using.\"\n\n\"You know what?\" he continued thoughtfully. \"Let's screw with her head. Tomorrow, take your rental back to the airport and turn it in. I'll pick you up and you can use one of my cars for the commute. Let's see if she notices.\"\n\n\"She'll notice,\" I told him, \"now that she's watching me. It will be a matter of how long will it take her? And wouldn't that be playing into her hand? All she'd have to do is get your license plate and have one of her 'friends' run it and it would come back to you. She'd be able to figure out where you live. With the rental, it will only come back to Hertz. No way to figure out where I went with it.\"\n\n\"Never-Lost,\" Paul said.\n\n\"Don't have it,\" I told him. \"Don't like the surcharge, always refuse it.\"\n\n\"OnStar,\" Dave said.\n\n\"Shit.\" I hadn't thought about that. Of course Hertz, or the police, could find me through the OnStar system. \"Well, whatever you want to do. It's your identity and your life I'm trying to protect. Mine is lower than whale shit at the bottom of the sea as far as she's concerned.\"\n\n\"Call me when you're out of class,\" Jerry told me. \"Then take your car back to the airport and turn it in. I'll meet you there.\"\n\n\"Works for me,\" I told him. \"I'm going to review my materials for tomorrow then try to get some sleep.\" I turned to Dave. \"Any chance you'd like to be a bed-warmer tonight?\" I asked.\n\n\"See?\" Ginger piped up with a smile. \"Told you she was getting sweet on you.\"\n\n\"I'm sweet on all of you,\" I told her, quickly forestalling Dave's response. \"It's just that, tonight, I'd like to sleep with him.\"\n\n\"I'll be available,\" he told me with a soft smile. \"I'm in your cell. Just ping me when you want me.\"\n\n\"Will do...\" I smiled. \"Catch you all later...\" I waved as I walked off and sought out my room.\n\n* * * * *\n\nDave felt so amazingly wonderful buried deep in my pussy while I straddled and kissed him. I mean, I felt so amazingly wonderful to have him in me. He probably felt pretty good, too.\n\nI'd spent an hour reviewing my class materials for the next day, then called his cell.\n\n\"Los Cinco Hermanos,\" he'd answered. \"Dave speaking.\" I smiled. I couldn't help it.\n\n\"You're up, Stud,\" I told him. \"My place. Now.\"\n\n\"Hearing and obeying, with sweetness and light,\" he told me and I knew it was an Arabian Nights quote from somewhere, or similar, and I appreciated the gesture.\n\nHe had arrived shortly thereafter, bearing a carafe of wine, two glasses and some snacks. I was definitely feeling pampered.\n\n\"So, what may I do for my Lady?\" he asked as he set down his burden.\n\n\"Pour the wine, lay out the snacks, strip off your clothes and lie down on the bed, on your back,\" I told him. What was the point of being direct if you couldn't be assertive? He did as I asked and was soon lying in my bed, looking delicious. It wasn't just my mouth that was watering.\n\nI handed him his wine and slipped out of the robe I'd put on, picking up my wine as I sat on the edge of the bed, offering a toast.\n\n\"Nouveaux amis,\" I offered.\n\n\"New friends,\" he echoed and we clinked glasses. I took a long, lingering look at his body as I slowly drained my glass.\n\nThen I set down my glass and slid in next to him, idly drawing random patterns on his chest with my fingertips.\n\n\"Good evening, Mr. Stranger. Your mission, Dave, should you choose to accept it, is to allow me to pleasure you until I am sated,\" I told him. \"And someday allow me to learn your last name. As always, if you or any of Los Cinco Hermanos should fail in your duty, you will all be held accountable. This body will explode with libido in five seconds... four... three...\"\n\n\"I accept! I accept!\" he interrupted me. \"And it's Langley. Like the place in Virginia with the CIA.\"\n\n\"Well, David Langley... where was I? Oh, yes... three... two... one...\" and I rolled up onto him to straddle him, kissing at his ears and cheeks and neck, and very, very slowly working my way down. It was my intent to kiss, nibble and/or suck every exposed inch of his skin before I turned my attention to his beautiful cock.\n\nI didn't make it.\n\nOr more exactly, I almost made it. I licked, nibbled, sucked and kissed my way down his arms to his hands, down his chest to his marvelous abs, making sure to take a long time at his nipples, his sides, his hips, his thighs, shins and feet. I even made sure to suck his toes before getting anywhere near his throbbing hard-on. I'm pretty sure, though, that there were areas I missed. Mostly because I couldn't ignore his glorious manhood anymore.\n\nGently, agonizingly slow, deliberate... I teased him. I petted his abdomen and brushed against his cock. I ran my hands very lightly over his balls. I licked the little drops of precum off his glans. I licked the length of his shaft, now so turgid the veins were popping out. I gently eased my mouth over the head, swirling my tongue against his hot flesh ever so slightly. I teased him with twirling my tongue around his glans, sucking at it softly, covering him but holding back, not taking in his shaft.",
        "I held his rigid cock away from my face as I traced my tongue down his shaft to his ball sack. More slight sucking and licking and I felt him start to growl. Not moan like a man \u2013 growl like a frustrated animal. I pushed his thighs farther apart and descended to his perineum, and then to his anus. I thought I was going to make him cum right then. I was drunk on the power.\n\nThe bed was soaked by the time I was ready to really go down on him... to take him deep in my throat. When I plunged down over his manhood, I almost came. So did he. Almost.\n\nI set about taking him deep into my throat with long steady strokes, making sure to use my lips to massage every bit of him I could. He tasted wonderful and his scent, particularly coming off his groin, was intoxicating. He felt huge as he swelled up against my ministrations and I got a giddy kind of pleasure knowing I could get my lips to his balls.\n\nI got a wild hair to try and take not only his cock in my mouth, but both his balls as well. It didn't work. Not for lack of trying.\n\nI took a deep breath so I could plunge all the way down onto him, then hold it while I lifted his testicles to my mouth, trying to suck or push them in. They were a bit too big, my mouth was a bit too small and he was a bit too pulled up to make it. That didn't stop me from trying multiple times. The last attempt, though, he hit the inevitable while I was still all the way down on him.\n\nHe tried to warn me, give me a chance to pull up, but I guess I was being dense because it caught me by surprise when, with a loud moan and more growling, he started blasting cum down my throat. I swallowed like crazy, to keep from gagging and because I wanted every last drop of his sweet seed.\n\nWhen he finally stopped spurting and I needed to breathe, I lifted my head up off of him, smacking my lips and smiling.\n\n\"Do you know you taste sweet?\" I asked him. He just kind of lolled his head in the aftermath of a mind-blowing orgasm and tried to say \"no?\"\n\n\"Well, you do,\" I informed him. \"Guys are different... salty, metallic, bland... you're sweet. I love it. I also love this fine fellow and I'm not done with you, yet.\"\n\nI straddled him again, aiming his still mostly erect manhood at my dripping wet slit. I wiggled him inside and sat down, all the way, then leaned forward to kiss him while I gently rocked. My pussy was doing an admirable job of adjusting to him and doing its own version of a blowjob, sheathing him and keeping him drawn into me. And bless the man, after a few minutes he began to get hard again.\n\nWhich is where we were now.\n\n\"Whether or not you get off again,\" I told him. \"Can we fall asleep like this?\"\n\n\"We can,\" he smiled, \"but it won't last long. I'd put dimes to donuts that you'd roll off me to get more comfortable. On the other hand, give me a few more minutes in your delectable pussy and I'll be hard enough that we could spoon with me in you and fall asleep that way.\"\n\n\"Mmmm, God, that sounds wonderful...\" I mused. \"Do you want to get off again?\"\n\n\"I am well satisfied,\" he kept smiling. \"I don't need to.\"\n\n\"But do you want to?\" I persisted.\n\n\"I want whatever you want,\" he told me. \"My mission, which I accepted, is to allow you to pleasure me until you are sated. Are you sated?\" \n\nI kept rocking for a few moments while I thought about it.\n\n\"Oh, fuck it!\" I decided. \"Screw my brains out until you cum, then let's get some sleep, however that works out. I'm going to need it.\"\n\n\"Hearing and obeying with sweetness and light,\" he said, easily flipping me over into a missionary position... except my legs were up over his back. He hooked his arms behind my knees and brought my legs up even further, exposing my already sensitive pussy to his thrusting.\n\n\"Where the hell is that from?\" I asked. \"It seems familiar.\"\n\n\"Borrowed from the Genies in an Arabian Nights milieu from the Dungeons and Dragons game,\" he told me. \"Kinda poetic, I think. Now... would you like me to be slow and gentle, or fast and hard, or what?\"\n\n\"Just fuck my brains to mush,\" I told him. And he did.\n\n* * * * *\n\nTuesday was a full day and I managed to avoid Sandra. I called Jerry as I was leaving and drove the car back to LAX and returned it. My stuff was already out of it, including my GPS, so I just went to the #1 Gold waiting area and kept an eye out for my ride. Jerry pulled up in the Lamborghini and turned heads. God knows what they were thinking when I was the one to go out and get in it.\n\nWe went back to Jerry's where Molly had another delicious dinner prepared and then Jerry disappeared back into post-production on his movie and the others kind of drifted around, mostly playing pool. I spent the evening going over my feedback from the class and the next day's notes, making some adjustments for the kind of people I'd pulled for my class. I decided to hit the sack early, and alone.\n\nWednesday morning was a kick... terrifying, in a way, but still very exciting. When I was up, showered, dressed and breakfasted, Jerry took me to his parking lot to pick a car to take to work. When I was informed that no, there weren't any inexpensive ones to pick from, I started to panic. I wondered if my insurance would cover me driving one of these.\n\nJerry told me not to worry about it, that his insurance would be fine... I was a Designated Driver. I agonized over the decision, a lot more than I thought I would. I finally picked the 1988 Ferrari Testarossa. I was definitely going to get noticed.\n\n\"So, to save me the embarrassment of peeing all over your seats, I'll ask while I'm standing out here,\" I told him. \"How expensive is this car?\"\n\nJerry looked at it for a moment before telling me, \"I could probably get about 80 Grand for it.\"\n\nMy knees went weak.\n\n\"Eighty thousand dollars???\" I managed to whisper.\n\n\"Yeah, about that,\" he confirmed. \"So, get your pretty little ass in it and head for work. You don't want to be late. Oh, and don't worry about speeding tickets... highly unlikely in this morning's traffic. After you get out of the Hills, of course. Do you have your thermos of coffee? Would you like me to have some catered in to you at lunch?\"\n\nHe was teasing me, and I knew it, but I was still blown away. I gingerly got into the car \u2013 make that, work of art \u2013 and smiled up at him, weakly. \"Wish me luck,\" I told him.\n\n\"All good luck,\" he smiled, then leaned in and kissed me. \"See you tonight.\"\n\nThe butterflies in my stomach had gone right past the conga line to some heavy slam-dancing. I pulled out of Jerry's drive, headed for work.\n\nThe car handled like a dream. My experience with a stick shift had been my brother letting me bomb around in his '94 Camaro. I'd gotten pretty good at it, even beating some of the kids in the Saturday Night Light-to-Lights. But this car made my brother's Camaro seem like a dilapidated old delivery van.\n\nI found myself going faster than I probably should, winding my way down out of the Hills. Thank goodness Jerry was right. As soon as I hit the 101, everything slowed down. Except maybe the heart rates of the guys trying to get a look at the chick in the Ferrari. I don't think I caused any accidents.\n\nWhen I wheeled into the parking garage, I was definitely turning heads. When I went to exit the car, I realized another reason the truckers on the freeway had been staring \u2013 my skirt had ridden way up my thighs in the leather bucket seats, exposing my stocking tops and garters. And yes, I'm a little old-fashioned in some ways.\n\nI was trying to straighten my skirt when I heard Sandra's voice from behind me.\n\n\"I hope that's not from Hertz,\" she commented. The implication that I was abusing the expense account was implicit. I let myself blush as I turned to face her.\n\n\"No,\" I told her slowly, \"I don't think Hertz rents the '88 Testarosa anymore.\" I waited a moment, trying to gauge her reaction \u2013 there wasn't any \u2013 before I continued, \"Actually, this is my new boyfriend's. I turned in the rental last night. Figured I'd save the client some money.\"\n\n\"That's some kind of car,\" she observed, and when I mumbled a self-conscious \"yeah...\", she added \"must be some kind of boyfriend.\"\n\n\"He is!\" I smiled. \"Are you heading in now?\"\n\n\"I have to meet with Osborne... the VP for Operations,\" she told me. \"Maybe I'll catch up with you for lunch... if you're not already booked...\"\n\n\"No, I'm free,\" I confirmed. \"I usually 'eat at my desk', as it were, boning up for the afternoon session.\"\n\n\"Okay,\" she shark-smirked me. \"Guess I'll catch you later.\" And she turned and headed for the building.\n\nI took a few moments to calm down, make sure I looked presentable, got my materials out of the car and slowly headed for my classroom.\n\n* * * * *\n\n\"So Jerry Sterling is your new boyfriend,\" Sandra commented as we sat over a sushi lunch. I'd given her a ride in the Ferrari. She was picking up lunch.\n\nI hadn't known Jerry's last name was Sterling until I'd looked at the registration in the glove box. Apparently, Sandra had looked elsewhere.\n\n\"Yes,\" I admitted. \"He's turning out to be a really nice guy.\"\n\n\"And ten years younger than you,\" she went on as if idly discussing the weather. \"Very wealthy, multi-millionaire, actually. Entrepreneur, with his fingers in a lot of pies. Travels in some rather aristocratic circles. That young, must have a lot of stamina. Looks like you hooked yourself a trophy...\"\n\n\"Oh, I don't think of him as a trophy!\" I protested. She'd gotten to me, dammit. \"He and his friends are really nice. They've treated me with nothing but respect, and they've had multiple chances to bail on this old broad! I really, truly, enjoy their company.\"\n\n\"Los Cinco Hermanos?\" she asked. I felt like I'd been hit in the gut.\n\n\"What?\" I asked weakly.\n\n\"Jerry and his friends,\" she said softly, watching me like a hawk. \"The Five Brothers. They were pals back in high school and since then they've stayed close. I just thought, perhaps, these friends of his you were talking about might be Los Cinco Hermanos.\"\n\n\"Wow. You know more about him than I do!\" I told her. \"I suppose they could be that group. I really wasn't paying close attention.\"\n\n\"You know, rumor has it,\" she went on, circling for the kill, \"that they shared... everything.\"\n\n\"Oh?\" Where was she getting this information? I wasn't going to let her rattle me.\n\n\"Yeah...\" she zeroed in on me. \"I was just wondering if they still did...\"\n\nWhen I shrugged, she added, \"Rumor also has it that Jerry is CEO of Himeros Productions... did he happen to mention it?\"\n\n\"Um... maybe?\" I told her. \"Again, a lot more mesmerized by his smile than by his titles.\"\n\n\"I can see that,\" she smiled \u2013 like a Piranha. \"I'm fascinated... but we need to get back. Maybe we can compare notes later.\" She signaled for the check and I sat on anything I was even contemplating saying. I wasn't going to let her screw this up.\n\nShe didn't say much on the drive back. I told her thanks for lunch when we'd parked and then we'd gone our separate ways. I really had to drag my focus back to the class that afternoon, but I managed. As soon as the class was over, I was on my cell to Jerry, telling him about my lunch conversation.\n\n\"Cool!\" he told me. \"She took the bait. She had Capt. Dougherty of the LAPD run my plate. He called me, then told her what she wanted to know when I okayed it. Favors work like that. I also okayed the Vice Squad telling her about Himeros Productions. Los Cinco Hermanos would have been from a call to Don Whittier, the Dean at the high school, who also let me know she'd called. We're doing well!\"\n\n\"Doing well???\" I was incredulous. \"Jerry, I can't figure out if she's trying to set me up to ruin my career, hook herself a wealthy husband or just get her ashes hauled! I have no idea what's going through her manipulative little mind. I just don't want it to end in a pink slip for me!\"\n\n\"I wouldn't worry about it,\" he told me, trying to reassure me. \"I know Jim Pedersen personally.\"\n\n\"Our Executive Vice President?!?!?\" I was stunned. Floored. Completely discombobulated.\n\n\"Yeah,\" Jerry told me casually. \"He was a friend of my father's. Look, if you're okay to drive, why don't you just come on back up here and chill for awhile? She isn't going to be a problem... I promise.\"\n\n\"She probably has the car staked out,\" I told him. \"I think she wants to go to dinner and pump me for more information. I'm not cut out for this cloak-and-dagger shit...\"\n\n\"Then bring her along,\" Jerry told me. \"We'll entertain her...\"\n\n\"WHAT???\" I could not believe I was hearing this!\n\n\"I said, bring...\"\n\n\"I heard what you said!\" I interrupted him. \"Are you crazy? Bringing her to yours is like letting the fox guard the henhouse... from the inside!!!\"\n\nJerry laughed and I fumed. \"I'm glad you've still got a sense of humor,\" he told me. \"And I'm serious.\"\n\n\"You are certifiable,\" I told him.\n\n\"What can it hurt?\" he asked, and I started running the list in my mind. \"She can't fire you... you're protected. If she wants a rich husband, I can give her a list of 'very eligible' bachelors. And if she wants to get laid... well, there's eight of us here. Seven, if you take yourself out. By the way, I've got the edit done on the film. I thought I'd preview it for you and the guys \u2013 and gals \u2013 tonight.\"\n\n\"Not if Shark Girl comes along,\" I told him.\n\n\"Oh, why not?\" he faux pouted. \"It'd be so much fun...\"\n\n\"Jerry, shut up,\" I told him. \"Quit while you're ahead.\"\n\n\"Mum's the word, Mum,\" he told me. \"And if you do decide to bring her out, just punch up the voice dial in the car and tell it 'ET Phone Home'. It'll get through to me.\"\n\n\"Not much else seems to, at the moment,\" I sighed. \"Okay, I'll see you when I can get out there.\"\n\n\"Cheers!\" he told me and we hung up.\n\nThis is going to get interesting, I thought on my way to the car. As in the Chinese curse, 'may you live in interesting times'...\n\n* * * * *\n\n\"ET Phone Home.\" Sandra was in the passenger seat.\n\n\"Dialing Home,\" the Chatty Cathy in the dashboard responded mechanically.\n\n\"Sterling residence.\" It was Molly.\n\n\"Hi, Molly, it's Beth,\" I told the hands-free phone. \"Is Jerry around?\"\n\n\"Certainly, ma'am,\" she told me. \"I will get him for you momentarily. Will we be having guests for dinner?\"\n\n\"Just one,\" I told her, \"and we're on our way.\"\n\n\"Very good, ma'am. Please hold.\" There was silence until Jerry picked up moments later.\n\n\"Hi, Beth,\" he came on cheerfully. \"Molly says we have company for dinner?\"\n\n\"Yep, my boss, Sandra,\" I confirmed. \"Somebody piled up a big rig on the 101, but we're past it now. We should be about half an hour.\"\n\n\"Excellent,\" I could hear Jerry smile. \"Any special dietary requirements, Ms. Milton?\"\n\nI hadn't used her last name.\n\n\"None,\" she spoke up from next to me. \"Thank you, sir.\"\n\n\"You are most welcome, ma'am.\" His emphasis, not mine. \"Beth, introduce her to Molly when you get here. She's in the kitchen. The rest of us are out at the pool. See you when you get here!\" He hung up.\n\nSandra kept looking over at me strangely as I wound our way out of the valley and up into the Hills, finally turning onto Vulcan Road.\n\n\"This is some very fancy real estate,\" she commented as I drove straight for the wrought iron gate at the end of the cul-de-sac. Jerry had explained that a transponder in the car would open the gate \u2013 a Bat Cave thing of his, I guess. I could feel Sandra cringe in the seat as I wasn't slowing down, but then the gate rumbled open and I breezed in, heading down the lane to the parking lot in front of the garage.\n\nSandra looked bewildered at the lack of an obvious mansion.\n\n\"C'mon\", I told her after I'd parked and we were getting out. \"Let's go introduce you to Jerry's very competent housekeeper and chef.\" I led the way and Sandra followed, wondering. She stared as we made our way through the garage, but she momentarily lost it when we got to the elevator vestibule.\n\n\"Wow!\" Her eyes kind of bugged out as she looked out the plate glass window to the terraces below and the City of Los Angeles beyond.\n\n\"Yeah, I think so,\" I agreed and stepped in as the elevator doors opened.\n\nSandra joined me and I pushed \"1\", headed for the kitchen. The look on Sandra's face as we passed through the ballroom and dining room, then went left at the breakfast nook, were worth it.\n\nI had decided if she couldn't fire me, I was going to be a brazen hussy. Or working somewhere else shortly. I called out \"Hi!\" to Molly, walked up to her and gave her a hug \u2013 and then a kiss, which she returned for a few moments longer than it took Sandra to start getting antsy. And damn! Molly sure knew how to kiss!\n\n\"Molly, this is Sandra, my boss,\" I introduced her. \"Sandra, this is Molly, Jerry's right hand woman. She's housekeeper, laundress, gourmet chef, you name it. And a grad student at UCLA.\"\n\n\"Pleased to meet you,\" Sandra stepped forward, holding out her hand \u2013 to forestall the kiss, maybe? In any case, Molly took it.\n\n\"Likewise, ma'am,\" Molly smiled. \"Dinner will be ready in half an hour. Jerry and the others are down by the pool. Can I get you something to drink in the meantime?\"\n\n\"I'll get her something from the bar downstairs,\" I intervened. Now I knew exactly what I was going to do, and it probably involved job hunting.\n\nI escorted Sandra back to the elevator by way of the hall \u2013 \"offices down there, pool room, bathroom, theatre\" I gestured on the way \u2013 and hit \"2\". When we exited, I pointed straight ahead. \"Living room. Bedrooms are down that hall. We're going right.\" I steered us in the direction of the sunlight flooding in from the door to the pool terrace.\n\nWe emerged onto the terrace and I steered us towards the bar as Sandra was trying to do a quick look around. Dave and Jackson were taking on Paul, Jerry and Ron in some kind of cross between water polo and keep-away, and as I expected, no suits. Ginger was in the jacuzzi, similarly not attired. Sandra was trying to keep her inscrutable face on, but I could see she was ogling. Hell, I was, too...\n\n\"What can I get you?\" I asked, stepping behind the bar.\n\n\"One of them?\" she whispered very quietly. Oh, good... she wanted to get laid.\n\n\"To drink, first, perhaps?\" I asked. \"I've got just about anything you want back here.\"\n\n\"Um... Pi\u00f1a Colada?\" she asked and I started making it. Two, actually. Big ones.\n\nI handed hers to her and suggested, \"Let's go over to the jacuzzi.\" I didn't wait, but walked over to where Ginger waved to me.\n\n\"Hi, Ginger!\" I called over to her as I set my drink down on a table and began taking off my clothes. That stopped Sandra in her tracks. She watched, either fascinated or horrified, I'm not sure which, while my shoes, blazer, skirt, blouse, bra, panties, stockings and garter came off. I neatly folded them on one of the chaise lounges, picked up my drink and eased into the spa. Ginger came over and gave me a quick kiss, not spilling my drink, thank goodness.\n\n\"Ginger, I'd like you to meet my boss, Sandra. She's a guest this evening. Sandra, I would like you to meet Ginger Hawke, both one of Jerry's employees and bassist for the band Fuzion.\"\n\n\"Nice to meet you,\" Ginger smiled, then spreading her arms wide, displaying her nakedness, she added, \"feel free.\" Then she retreated to her original spot on the other side of the jacuzzi.\n\nI thought Sandra was going to have a heart attack. Indecision reigned and I was enjoying the hell out of it. She was a pro, and she was good at handling people, but this one was taking her some time to figure out. Eventually, she did, though.\n\n\"Thank you,\" she told Ginger graciously. \"I will.\" She set down her drink on the same table I'd used and began the same strip I'd done. Except she wore pantyhose instead of stockings and garters. I was mentally sizing her up as she did.",
        "She was smaller than me, probably 5'5\", maybe 110 lbs., I'd guess a 34C-24-34. She had dark pubic hair, like her head, and she kept both short but if she shaved, rather than just scissors, it was bikini-line. She had the pale skin of working indoors too much, but she must have worked out because she looked thinner and trimmer than me. She picked up her drink and joined us in the spa.\n\n\"I must admit this is rather surprising,\" she told us as she eased into the water. \"And wickedly decadent. I love it! Is Mr. Sterling always so accommodating?\"\n\n\"I don't know,\" Ginger smiled. \"Let me find out...\"\n\nBefore Sandra or I could stop her, she stood up and yelled over to where the guys were playing.\n\n\"Hey, Jerry!\" she called out. \"Ms. Sandra wants to know if Mr. Sterling is always this accommodating!\"\n\n\"Tell Ms. Milton,\" he called back, \"the answer is usually 'yes'!\"\n\n\"That's Mr. Sterling?\" Sandra whispered, apparently surprised.\n\n\"Jerry,\" I told her. \"Jerry Sterling. Yes. And this is his home.\"\n\n\"And he's your boyfriend?\" Sandra asked, I think to confirm it.\n\n\"Well, actually, Dave is... the guy in the short blond hair,\" I told her. \"But Jerry, too... come to think of it, they all are...\"\n\nI could have knocked her over with a feather. She sat there gawking at me, her mouth moving like a fish out of water. I was relishing it.\n\n\"All of them?\" she virtually whispered again.\n\n\"Well, we all did some work for Himeros Productions and the rest kind of came naturally,\" I told her. \"They really are a great bunch of guys... Los Cinco Hermanos.\"\n\n\"Hey!\" Ginger exclaimed.\n\n\"Y Dos Hermanas,\" I added, nodding to her.\n\n\"Y Tres Hermanas,\" Ginger smiled, pointing at me.\n\n\"What work for Himeros?\" Sandra stumbled to get out. \"What came naturally?\"\n\n\"Why, my relationships with them, of course,\" I laid it on thick. \"Himeros makes legitimate porn... you know that, right?\"\n\n\"Um... no...\" she managed to say, looking very confused.\n\n\"Oh, sorry, I thought you did,\" I told her. \"Since you brought it up at lunch. I thought you knew that Jerry's companies do a lot of things, but that Himeros was the porn arm. And that I filled in for an actress who had an accident and couldn't make it. With Los Cinco Hermanos...\" I waved my arm in the general direction of the guys. \"And Las Dos Hermanas,\" I indicated Ginger.\n\n\"Ginger and Molly helped out,\" I went on, basically pummeling her with Too Much Information. If she wanted to be snoopy, she'd reap the rewards. \"But the basics were Dave, Paul, Jerry, Ron and Jackson. Ginger's not supposed to spread it around, but she does anyway \u2013 I'm a bit more partial to Dave, but I still love the others.\"\n\nI took a deep pull on my drink and watched Shark Lady try to wrap her head around it.\n\n\"You made a porn?\" she finally asked.\n\n\"After Linda had to bail because she cracked her head open,\" I explained. \"But yeah. I still haven't seen the finished product. Jerry just finished editing it this afternoon. Would you like another drink?\"\n\n\"Umm...\" she paused, then finished her drink in one long draught and handed me the empty glass. \"Yes, please,\" she added.\n\nMy grin was splitting my face as soon as I got out of the pool and was facing away from her. I slowly sauntered over to the bar amidst the catcalls and whistling from the guys. I made another tall Pi\u00f1a Colada and brought it back with me. I was intentionally keeping my consumption down and my brains on straight.\n\nI'd barely gotten back in the jacuzzi and started sipping my drink again when Molly announced dinner.\n\nSandy got treated to the sight of all five guys piling out of the pool and walking its length to get towels. I had to wave my hand in front of her face to get her attention.\n\n\"Hey, Jerry!\" I called over. \"Do you have some extra robes or something we could wear to dinner? I could go casual but Sandra doesn't have anything but her business suit.\"\n\nHe walked over, calmly toweling off.\n\n\"Take her to the spare bedroom and let her rummage through the closet. There ought to be something there she likes, like your sundress,\" he told me. \"We'll meet you in the Living Room. We're eating casual tonight.\"\n\n\"Ginger...\" he nodded to her. \"Beth...\" he nodded to me. \"Ms. Milton...\" he nodded to her and though flustered, she managed to correct him.\n\n\"Sandy,\" she said hurriedly and I looked at her funny. \"I mean, Sandra,\" she corrected herself. \"You can call me Sandra.\"\n\n\"Then, Sandra...\" and he nodded to her again, then turned and walked to the house with three pairs of female eyes appreciating his finely toned glutes as he walked.\n\n[to be continued]"
    ],
    "authorname": "eidetic",
    "tags": [
        "mature",
        "older woman",
        "younger men",
        "younger women",
        "seduction",
        "romance"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/los-cinco-hermanos-ch-05"
}