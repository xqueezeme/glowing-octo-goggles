{
    "title": "Terrible Taste In Tees",
    "pages": [
        "I was lucky enough to own my own business, not too bad for someone who was an art major in college.\n\nIt wasn't glamorous, it wouldn't land me in the Fortune Five Hundred, but it satisfied me and I made a pretty decent living. Enough, in fact, that my wife didn't have to work if she didn't want to. \n\nThat was exactly what she did for the first five years, but when I started talking about biological clocks, she decided she needed to do something outside the home, something to fill the empty space and give her a sense of fulfillment. I personally thought that was a pretty good description of motherhood, but wisely refrained from mentioning it.\n\nTo quote my father, Bree[I still have trouble keeping a straight face, I mean really, Bree? Isn't that some kind of cheese?] was and still is a 'babydoll'. Tall, willowy, with enough curves to not ever be mistaken for a male, long blonde hair, sparkling blue eyes, and lips that I can attest are very kissable. In short, she was the whole package.\n\nChiropractors should have put her on retainer, every time she walked down the street guys got whiplash watching her come and go. It took a little getting used to, being with her.\n\nI like to think I was no slouch either. Six two, one ninety five, muscled thanks to my gym addiction. Women have told me I'm handsome. Not in the male model type handsome, but real world looks. One woman I dated said I had a face that looked lived in, but that particular life had been very kind to me. Black hair I kept a little longer than Bree liked, and grey eyes. When we met I had a goatee, but she wanted me to shave it off. I didn't really want to, but she offered a compromise. If I got rid of the facial hair, she would do the same with her pubic hair. I've been clean shaven ever since.\n\nWe didn't meet in a bar, or at college. Not at church, or a blind date, or at a party. We met when I needed a model, which she did part time. She was too healthy looking to be in the top tier, but made good money doing ads for upscale department stores. She had that glamorous yet real world look. Attainable, but just barely.\n\nTo speed things along, we dated after her commitment to me was over, discovered we fit really well. Seven months down the road I asked her to move in, eight months later we were standing in church, pledging lifelong love and fidelity.\n\nShe worked for about a year after we married, then decided to retire to help design and build our dream house. And by ours, I meant hers. I really didn't care, as long as there were enough bedrooms and the roof didn't leak. It cost quite a bit to get it exactly the way she wanted it, but her happiness was worth it. And she dangled the carrot of children out to me, saying it was why she wanted a four bedroom house. \n\nMy business had been well established by the time we got married, but I made sure the payments were affordable with a large amount down. We had a serious discussion about money before we married, making sure she knew that while I made good money, I had no desire to spend it all as fast it came in. In fact, my lawyer was firm in asking me to get a prenup excluding the business.\n\nWe discussed it, and while she wasn't wild about it, she understood. Except for the business, everything was included. She had her own prenupt, stating that all monies she got from modeling was exempt. My lawyer thought it was unfair, but I knew she wasn't going to model forever, so it didn't matter.\n\n.............................................\n\nMy business? Don't you dare laugh, but I printed tee shirts.\n\nIt started out as a lot of businesses do, as a hobby. And a bit of a joke.\n\nAs I stated, I was an art major. Not exactly a ticket to the fast track of business success, but I was never really motivated by money. I wanted to make it, of course, wanted to live well and provide for the family I hoped to have someday, but vacation homes and jetsetting around the world in private Lear jets was never on my agenda.\n\nIt was near graduation, and while my friends had sent resumes and interned, I painted. My work was to put it kindly, eccentric. I saw things most people never bothered to look for, and painted them. I never expected to make money at it, mostly it was for my own pleasure.\n\nWe were joking around one night the start of our senior year. Most of my friends were business majors or prelaw, oddly I found artistic types a little flighty. The women tended to be anorexic prima donnas, or earth mother wannabes who never owned a razor. The guys would try to pull off being brooding and enigmatic. Most of the time it came off as whiny and shallow. While they loved art, they lacked focus when it came to real world skills. Many were from wealthy families, where making a living wasn't exactly a pressing necessity.\n\nLike I said, we were joking around, and it came around to clothes. I tended to wear sturdy clothes because who needed to paint in an Armani? I leaned towards Carrhart, Columbia, LL Bean, that sort of thing. My favorite shirts in the whole world were made by LL Bean, a tee with three buttons. They looked like the top of an old fashioned union suit, especially the gray ones. It caused me a lot of grief, especially among the 'pre' crowd, who were destined to live and die in a suit.\n\n\"So, Chris, what kind of a job you gonna land that lets you wear those clothes? Janitor, dock worker, landscaper? That'll make that college degree worthwhile, huh.\"\n\nThe speaker, J. Aston Brown IV[J. Ahole to us], was probably my best friend. Coming from money, running towards money, determined to knock down anything that gets in his way. He was focused to the point of obsession, determined to make Daddy Trey proud. I had met his dad, and could understand why. \n\nJ. liked to keep me around because I didn't take anything seriously, and wouldn't let him. I had talked him into a lot over the last three years, some things his Dad even approved of. Plus I took a lot of heat for things that were mostly his idea. We all knew one day we'd be reading about him in the paper, or watching him on television.\n\n\"I'll think of something,\" I said dismissively, wondering the whole time what it would be. I had angled towards something in graphic design, but there wasn't a lot out there.\n\nThen J. said something that set the course of my life.\n\n\"Too bad there isn't jobs for a tee shirt designer. You'd make a fortune.\"\n\nJust for fun, I'd hand painted a tee shirt for him.\n\n\"Shreagle\" It proclaimed across the top. It was a shark head with bared teeth on top of the body of an eagle, talons extended, as it swooped down on the masses.\n\n\"Criminal? Cheater? Politician? When the time comes, and it will, call the Shreagles. We'll rip them to pieces and chew up what's left.\"\n\nHis dad liked it so much I had to paint one for him.\n\n................................................\n\nI thought about what he said for a week or so. I had been kicking around an idea modeled on the 'Big Johnson' tees that were so popular at the time.\n\nTaking a chance, I bought a couple dozen tees and painted them as prototypes.\n\nThe first one showed a caricature of a doctor on the front of the shirt. He was short, bald, wearing an oversized lab coat and thick black frame glasses. He had jug ears and a goofy grin. He was holding an oversized toilet plunger.\n\n\"Dr. Knockers' Patented Breast Expander. Treatment Guaranteed or we'll give your small breasts back,\" read the logo.\n\nThe back showed a small breasted blond going into an exam room in one panel, the doctor straddling her with the plunger in silhouette in the middle, and the same blond with enormous breasts leaving the clinic in the last.\n\nAnother design showed the same doctor, holding a double headed, gigantic plunger.\n\n\"Dr. Knockers' Bubble Butt Treatment. Ghetto Quality Booty Guaranteed In One Easy Treatment.\"\n\nYou can imagine the images on the back.\n\nI gave them out to my friends, calling them my focus group. Nothing funnier than seeing future lawyers, doctors, and business magnates wearing them to parties and around town.\n\nWhile I had them together, I probed them for feedback. They were all positive. J. even got his dad involved. They had me out to their small[mansion]home on the cape for the weekend. Sunday found us in his study, presumably to watch football.\n\n\"These logos,\" J. Trey said, \"Are they protected?\"\n\nI didn't understand and it showed on my face.\n\n\"Have you had them registered? Do you own them? If you don't, someone else could print them and you couldn't stop them. I have a friend in the office, he could fill out the paperwork and walk you through it, as a favor to me. For a private individual it's fairly inexpensive.\"\n\n\"Thanks,\" I grinned. \"Inexpensive is exactly what I need. But I need to think about this. Even if I protect them, I have to come up with the money to have them printed.\"\n\n\"Why don't you print them yourself?\"\n\nI looked at J.\n\n\"Because I don't have the money or the expertise.\"\n\n\"Here,\" said his dad, handing me a card.\n\n\"It's a nonprofit organization designed to help small businesses get off the ground. They're patterned after the micro loan program for women in third world countries. You get a small amount, paid back over a long period of time. I volunteer my legal services from time to time. They're really particular, it's a source of pride than no loan they have given since they started ten years ago has ever defaulted.\" \n\nI was amazed, and had a million questions. J.Trey held up his hand.\n\n\"Ask them, not me. I've spoken to them, you're expected, so call and set up an appointment. And make sure you have a damn good business plan before you meet. Now, let's drink some beer and watch New Orleans kick the shit out of the Giants.\"\n\n.................................................\n\nI turned to my focus group for help, and of course they competed with each other to make sure I had a good plan and answers for the expected questions. J. and Leslie, who was soon off to Wharton, came with me for moral support.\n\nThe interview went well. I answered all the questions as well as I could, thanking my friends mentally for their prep work. In the end, I was given forty five thousand dollars, to be paid back over the next fifteen years, starting when the second year of the business was concluded.\n\nWe had done a lot of research, and determined that internet sales would be my primary focus, along with two 'retail outlets' at local flea markets. It was the perfect venue for me. Open only on the weekends when I was available to work without interfering with my school work.\n\nI had rented a small building, where I installed a few pieces of equipment to premake some of the shirts for the email business, and to stock the flea market stalls. Both locations were set up with small transfer presses, allowing the customer to get the color and print they wanted. We would also do custom work, for a slightly larger fee.\n\nThe 'Dr Knocker' series really took off. I sold more than twenty thousand of each of the first two designs in the first year. I was netting just over two fifty for each tee. Between that and my internet sales, I cleared close to a hundred fifty grand the first year.\n\nI'd like to say I partied and blew the money, but my own conservative nature and my friends kept me in check. I did take my focus group on a nice weekend trip to a Texas beach, where we let loose and howled at the moon for three days. The highlight of the trip was sharing my room with Leslie. She was hot, energetic, and more than willing.\n\nI had never been with an Asian girl before. She was Korean, with that timeless beauty some Oriental women had. Unless she let herself get out of shape, she'd be just as beautiful at sixty as she was now.\n\n\"I'm not going to fall in love with you, Chris, but you are cute and I've always kind of had a thing for you. So, let's just have some fun, all right?\"\n\nThe fact that she said that while wiggling out of her tiny bikini didn't leave me with a lot of blood flowing to my brain, so I was more than all right with it.\n\nHer breasts and nipples were small, but after I sucked on them for a few minutes they swelled just a little, and her nipples were hard enough to cut glass with. I slid down her tummy, licking her navel a second before I got to my destination.\n\nHer pubic hair, what little there was of it, looked and felt like shiny black strands of soft silk. I probed with my tongue, finding her tiny little clit and lashing it with enthusiasm until she wrapped her legs round my head and tried to drown me. I never stopped, even when she tried to pull me up, and before five minutes were up she was screaming my name again. I rose straight up and slid into her. She was so tight I don't think I would have gotten in if it hadn't been for the abundance of lubricant she had produced.\n\nMy sudden entry had taken her breath, and she didn't get it back until almost five minutes of steady pounding, managing to scream my name again as she came for the third time in twenty minutes. Ten minutes later she was begging me to hold on so we could finish together. I did, but it was a close thing.\n\nWe spent a lot of the weekend in bed. She gave me a big kiss as we were packing to leave, sighing.\n\n\"This weekend was great, Chris. I'm glad I'll be leaving soon. You're a very good lover, and I could easily get addicted to you.\"\n\nI didn't know what to say so I just kissed her back and thanked her for a weekend I'd never forget.\n\n...............................................\n\nI set aside thirty grand to live on, and put the rest back into the business.\n\nMy first year after graduation saw my business steadily growing. J. Treys' firm decided to sponsor some little league teams, one at each of their four branches. He had me design the logo and print the shirts for his team. After viewing my work the other branches gave me their business also. Word of mouth advertising worked well for me, and soon I was doing high schools and a few small colleges. It meant I had to put in newer, more sophisticated equipment to meet their needs, and I had to hire two people to help me keep up.\n\nBy the third year I had to lease a bigger space for my expanding business. I now had sixteen full time workers, and a mini shift of six college kids.\n\nThat didn't count the girls I got to run my stalls at the flea markets. At one time I thought about closing them, but they were just too profitable, and it still gave me a little thrill to see one of my products being worn around town.\n\nI was always thinking about new designs for shirts. Some flopped, many did just so so, but some were big hits.\n\nSome were just shirts with a slogan.\n\n\"I KNOW WHERE THE BODIES ARE BURIED,\" and \"THE RUMORS ARE TRUE\" were very good sellers. So was one that featured a set of female eyes across the chest with \"AT LEAST WE'RE MAKING EYE CONTACT\".\n\nBut my best seller ever was 'The Bitty Cocker Bitch Off' series.\n\nThe models for my first shirt were my Mom and Dad. I didn't think they'd go for it but after I explained what I wanted they thought it would be, in the words of my father, \"a hoot\".\n\nI used stuff from thrift stores to create an accurate depiction of a kitchen from the sixties.\n\nA formica topped table, green appliances, old cabinets. My dad sat at the table in a 'wifebeater' t shirt, reading a paper with a cup of coffee beside him. He was bald, a trait that so far I hadn't inherited.\n\nMy mom was wearing a dress appropriate to the era, her hair wrapped in a kerchief, holding a rolling pin, a scowl on her face, mouth open.\n\nThe caption read 'Champion, Senior Division, Bitty Cocker Bitch Offs, 1965'.\n\nIt took off like a rocket. Soon I had them done in junior and regular divisions, using the correct age models. The one for people in their thirties featured a woman standing at a kitchen counter in a nice dress holding a martini glass and pointing her finger at the man, sitting on a bar stool with a phone pressed to his ear. The young one showed a girl in her late teens waving an Iphone at a boy wearing earbuds and holding a skateboard.\n\nWhat really helped was I had picked up the right equipment, and for an extra ten bucks you could email the faces you wanted put on the figures, AFTER we got a signed release.\n\nI had to dedicate three people to the project to keep up with demand.\n\n.................................................\n\nThis idea came up right after Bree decided to go back to modeling. I had always used the agency she was with for my models. We had a good relationship, established when Bree worked for them the first time. She was to be the model for my 'Bitch Off' series. She suggested we use one of the male models she worked with, even though I wanted to be in it.\n\nI didn't like the guy. Brandon was tall, blonde, blue eyed, with a rock hard body and an attitude. I put him in a suit and slicked his hair back, to match how Bree was dressed. He complained, wanting to take his shirt off. \n\nThe people doing the shoot were serious professionals, used to dealing with prima donnas and difficult people.\n\n\"Fine, Brandon. Take the suit off. You're done. This isn't the showcase Brandon shoot, this is a give the customer what he wants shoot. I'll have Mack come in.\"\n\nMack was his biggest rival in the agency and there was no love lost between them. When I would see them together in a print ad, they would be smiling, acting like they were best friends. Often Bree and a couple more of the women would be in them too, often on one arm or another.\n\nBrandon immediately stopped whining and the shoot continued.\n\n\"Is he always this whiny?\" I asked Bree that night. She giggled.\n\n\"Mostly. But he's a decent guy, when he isn't trying to hog the spotlight.\"\n\nShe had been back to modeling about six months, and was doing a lot of print ads for local department stores. Twenty eight now, she wasn't the willowy teen she was when she started out. Her body was more filled out, 'lush' is the word that came to mind. They put in a lot of ads as a young mom, paradoxically.\n\nShe seemed a little nervous, and I knew from experience all I had to do was wait.\n\n\"Honey,\" she said, \"I have an opportunity to do some work for a major chain, something that would get me national exposure.\"\n\n\"What's the catch?\"\n\nThere had to be one or she wouldn't be so nervous.\n\n\"They do all their shoots in Atlanta. I'd have to go for at least a week every quarter to shoot the next seasons' layout.\"\n\n\"And?\"\n\n\"And part of it is lingerie. Nothing too risque, teddies, bras, bikini panties. What do you think?\"\n\nShe had done underwear shoots while we were getting together. I wasn't fond of it but learned to accept it. I actually went to one. It was interesting, there wasn't a lot of modesty, models were running everywhere, stripping bras and panties off as they went to hurry into the next set. I asked her later if she did the same when I wasn't around. She admitted she did.\n\n\"You saw it. There's nothing sexual about it. Those guys had seen more naked women than a strip club owner. All they're interested in is getting set up for the next shot.\"\n\nThen she giggled.\n\n\"You can always tell the new guys. They look like they're in shock for the first few days, before they get used to it. And remember honey, all they get to do is look. You're the only one allowed to touch.\"\n\nI learned to live with it.\n\n\"All right. It'll a good opportunity for you, and every time I see an ad, I'll grin, knowing what's under those sexy things.\"\n\nJudging from the loving I got, it was a good answer.\n\nAnd it wasn't like I was a prude. We went on vacation at least twice a year, and squeezed in a few weekends. We almost always hit a nude beach, no tan lines for us.\n\n.................................................\n\nI took the time that Bree was away the first time to paint, something as a business owner I didn't get to do as often as I would like. I'd go into work, make sure everything was going smoothly, and leave for the day.",
        "My friends told me I looked at the world through different eyes. As I said before, I saw things others never noticed. Once, when we were traveling, we stopped to get gas and I had to use the facilities. The floor was painted gray, a long time ago. It was worn, the paint gone in many places. I looked down, idly, and before I knew it had my phone out taking pictures. It became one of my favorite paintings.\n\nA silhouette. Of dogs.\n\nThey were sitting on a hill. A large hound with its' head thrown back and mouth open, obviously howling. Beside and below it was a bulldog and a Scottish terrier. It was done in blacks, greys, and deep blues, with a yellow full moon hanging in the top right corner. A few cacti and undulating hills as background. It was quite soothing to look at, in my opinion.\n\nI was working on a portrait of an ogre. It was actually a piece of driftwood I had picked up while at a friends' house. He had some river frontage, and we walked down to play with his dogs. I saw it sticking out of the sand, and pulled it loose. A stump of a small tree, the roots twisted in all directions. The water and sand had smoothed and shaped it. Luckily it was small, about twelve inches around and two feet long. It sat in my studio, staring at me.\n\nOne large horn and several smaller ones, the tangled roots like coarse hair obscuring one eye, the other the hollowed socket of a dead branch. A mouth from a gouged out bit of bark, a severe, slanting gash. I gave his skin a bark like texture because it fit. Instead of looking frightening, it came out with a look of sadness. Maybe he wasn't happy being an ogre. Who knows. I just painted what I saw.\n\nI finished it in two days, and started on my next. Got the idea from a huge plastic container that had contained a piece of equipment I bought. It was medium blue, old, scarred, battered.\n\nAs I looked at the swirls in the plastic, a pattern emerged. A huge owl, with large eyebrows. Perched on one eyebrow was a wizard, at least in my eyes. The owl ended up looking fierce, the small wizard, long beard flowing, equally fierce. I did it in muted blues and greys, except the wizard had a white beard, and his staff had a emerald, translucent tip. \n\nBree came home, happy with her trip, and horny as hell. We lived in the bed for two days, something we hadn't done for a while. She was an excellent lover, giving, demanding, in equal amounts. We had done every position we could think of, or read about. She really liked being tied up, and while we did anal once in awhile, it was not a favorite. She really liked reverse cowgirl, if I spanked her occasionally while she rode me. I liked doggy, reaching around to play with her breasts, tugging on her nipples from time to time. She orgasmed almost every time I pulled. Sometimes I think she would have liked it a bit rougher, but it just wasn't me.\n\n.................................................\n\nI got my next idea for a shirt while we were at our favorite nude resort in Florida. We had just finished making love. I was spent, but for some reason good sex seemed to energize Bree. \n\nShe was bouncing around, standing on the balcony looking down. She had leaned over the railing, and I knew her thirty four c breasts were hanging almost straight out. I almost got another erection, despite having just gone three times in two hours.\n\nI was watching her heart shaped ass, the evidence of our lovemaking still plain, when I had a vision. Hopping up, I walked out, pulled her upright, cupped her breasts, and gave her a huge kiss. She responded quite nicely, then pulled back.\n\n\"What was that for?\"\n\n\"For being my muse. Come on.\"\n\nI pulled out my laptop, and went hunting for what I wanted, explaining to her as I went. After she stopped laughing, she couldn't wait.\n\nI went to a costume suppliers, and ordered a dozen sets of large bunny ears in pink, and a matching number of large, puffy tails. Called her agency and explained what I wanted. After SHE stopped laughing, she said she'd line everything up for next week. It wouldn't take long at all to shoot it.\n\nI also ordered a dozen thongs in hot pink.\n\n...............................................\n\nThe agency had the set ready. A large picture of the ocean, with a wooden fence placed in front of it. The models came out, and it was impossible to keep a straight face. Six attractive women and five buff men, in pink thongs and huge bunny ears, the large pink cottontail at the back of their thongs. Everybody just looked at each other and burst out laughing, everyone except Brandon.\n\n\"This is fucking embarrassing.\"\n\n\"Relax,\" said the photographer, \"We're doing back views, nobody will see your face. You knew what was going to happen when you agreed to do it. You're getting paid, remember? Now relax, we'll be done in half an hour.\"\n\nThe girls had matching strapless tops on. The photographer had them line up boy girl boy girl, and took a few shots. Then he did a few of the women alone, then the men. They all put robes on while we checked the work.\n\nBree was holding my hand, watching.\n\n\"You know, it'd look sexier if the girls were topless and the thongs were a little tighter on the guys.\"\n\nI agreed, but was reluctant.\n\n\"This isn't what they signed on for.\"\n\n\"Explain it to them, up their fee twenty five percent. I bet they'll go along with it. Besides, it's back views, no one will ever see our faces. I'll go ask.\"\n\nBefore I could stop her she was talking to the girls. A few giggled, then casually dropped their tops. One, newly married, refused, but the rest were all in. Bree looked me in the eye, then dropped hers. Her nipples, in fact all the nipples, were hard. I don't really think it was because the set was cool.\n\nThe photos were more erotic, I had to admit. The thongs on the men had been pulled up so tight you almost couldn't see the strap.\n\nThen Brandon dropped his thong.\n\n\"This'll really look sexy.\"\n\nBree was right behind him. Soon they were all naked. I made absolutely sure her face could not be seen in any of the pictures, although there was some shots where the sides of her boobs were plain to see.\n\nIn for a dime, in for a dollar, I thought.\n\n\"All right, turn around.\"\n\nNo one hesitated but Bree.\n\n\"Are you sure?\"\n\n\"Yes, but hold on.\"\n\nI had bought some pink bunny masks before deciding not to use them. The models for the most part didn't care, although a few of the girls seemed grateful, especially after I told them I was doubling their fees.\n\nWe all collapsed into laughter again when they had to glue the bunny tails on.\n\nBree dragged me into an office as soon as the shoot was over. She threw open her robe. It was all she was wearing, except the cottontail. She bent over the desk.\n\n\"Do me! Now!\"\n\nShe was almost dripping and I was hard as a rock. \n\nThere was no love, no finesse, no words of endearment. Just grunts and moans as we slammed into each other as hard as we could. She just barely made it when I felt it coming.\n\nI almost screamed, it was so intense. I ended up draped over her, holding my weight off of her, barely. Bree was panting like she had just finished a marathon.\n\n\"That was the most intense thing I've ever felt.\" she gasped.\n\n\"Yes it was. Let's go home and continue this.\"\n\nWe left, holding hands. Five days later I got a bill from the account manager for office cleaning. I paid it without comment.\n\n................................................\n\n'Beach Bunnies', took off immediately. All four versions stayed hot for months.\n\nThe nude beach we frequented found out I was behind the shot and owned the company that printed the tees, and we got a visit from management the next time we were there.\n\n\"Is it true this is yours?\" he said, holding up the nude tee.\n\nWe admitted it was.\n\n\"I have a proposition for you. We're starting an ad campaign promoting our beaches. We have five in three different countries, and we want to use your shirts in the campaign. You'll have to do some more poses to advertise, bunnies on the beach, in our clubs, that sort of thing. Can you handle it?\" \n\nI was surprised, but immediately saw the value.\n\n\"Let me get the head of the ad agency we use in the loop. She does all my work and I trust them. Can you get the decision makers to meet here next week?\"\n\nHe seemed agreeable, but said they had their own ad company.\n\n\"Then don't bother. Part of the deal will be them doing the work. I owe them.\"\n\nIt was true. They had given me some really good deals, and I wasn't that big a customer. Sherry, the owner, had always liked me, and I trusted her instincts. And I wanted my lawyer and new business manager in on it, to make sure I didn't screw up.\n\n................................................\n\nAh. My new business manager. An old friend.\n\nLeslie had come back into my life a few months back. She had graduated, gotten a good job, gotten married. We went to her wedding. J. and I were ushers. We both agreed we didn't like her hew husband, but it wasn't our life.\n\nTwo years later her company went bankrupt following a near Ponzi like venture, and she threw her husband out after catching him with another woman. And man.\n\nDisgusted, she came home, living with J. and his wife for a month.\n\n\"Beach Bunnies\" was so popular we had to expand into a larger building and hire more workers. We now had forty full time and twelve part time workers, again not counting the flea market stalls. The business had outgrown me and I knew it.\n\nI asked Leslie for help, and since she didn't have anything else to do[nobody was hiring]she jumped right in. After thinking about it and talking it over with Bree and J., I offered her a job. General manager and chief operating officer. Seventy five thousand a year, with promises that if she stayed, as the business grew her salary would reflect it. She surprised us by accepting. It was about half what she had made, but it was the best offer she'd gotten, and she loved a challenge. If she grew us, it would look good on her record later.\n\nI was going to handle the creative aspect, designing the tees. That wouldn't keep me busy all the time, but I would try to fill the time with new projects.\n\nThe next week Sherry, Leslie, J. and his wife accompanied us to the meeting. I had warned them beforehand it was at a nude resort, but I don't think they really expected that much nudity.\n\nWe had gone down two days early, so Sherry could tour the facilities and get a feel for what they wanted. At first they all wore bathing suits. The clients and staff knew who we were, and left us alone.\n\nLeslie took one look, grinned, and packed her bikinis up. She still had a killer body. I think it made Bree a little nervous.\n\n\"She's cute. Have you ever.....\"\n\n\"Bree, have I ever asked you about past relationships? Respect that I'm loyal to you, I'd never betray you. Isn't that enough?\"\n\nShe agreed it was, but I saw her and Leslie together later, and they were laughing.\n\n\"So, I heard you rode more than horses when you were in Texas.\"\n\nThey both burst out laughing at the look on my face. After that, Bree and Leslie were almost inseparable. I was glad she had someone to hang with, I was tied up in meetings. Leslie had to attend, but Amy, J.s' wife kept her company. She could never quite work up the nerve to drop her bottom, but she was topless the rest of the time we spent there.\n\nJ. and Sherry were the last two holdouts, but when we hit the club that night and the alcohol flowed, inhibitions flew out the window. Sherry called us the next morning wondering if we had rescued her dress from the night before. After I stopped laughing I told her we had. When we knocked on her door to return it, she answered it naked. I had to admit for forty six she had a really good body. \n\nJ. got naked, drank too much to cover his nervousness, and passed out that afternoon, ending up sunburned. He was quite uncomfortable on the flight home.\n\n..................................................\n\nBesides expanding my friends' horizons and views on nudity, we made a very nice deal. Sherry got the contract, Leslie looked out for our interests, and Bree was the unofficial coordinator.\n\nThey had shots of the bunnies frolicking on the beach and in the water, dancing in the clubs[Bunny Hopping, what did you expect]and hiking one of the nature trails in Costa Rica. I wanted to call that one Jungle Bunnies, but got voted down. I did come up with one that sold well out of the country, but because of child nudity laws couldn't be used in this country. And they all wore elaborate satin masks, no one ever saw a face.\n\nIt featured Bree and Brandon surrounded by ten children around three with tiny ears and tails. Baby Bunnies was a smash. The logo was \"See What Happens When You Come To Our Resort? You End Up Like...Well The Picture Speaks For Its' Self\"\n\nAnd their mothers and fathers, members of the resorts, were all on set, just to keep the peace. Both Bree and Brandon had to pose for pictures, and both got groped. The parents got a nice check.\n\nThe campaign took two months to shoot. Sherry and crew became gypsies, spending all their time flying about setting up shoots. I got to see Bree four times, and I had to fly to each shoot to do it.\n\nThe first three times she cried in my arms, and we made love most of the times she wasn't on set. They got the occasional day off, but spent it doing PR for the resort. They were paid handsomely, but they didn't get any rest.\n\nThe last time I flew down, I was shocked. She had lost weight, and went to sleep as soon as we got into our room. After two days, she revived a bit, but seem withdrawn. I had a fit, threatening to pull my permission unless they slacked up. They were almost done, so they did one more shoot and gave everyone three days off. I had already flown home by then.\n\nThey came home tired and subdued. It was four days before Bree was back to normal. She seemed tentative the first time we made love. I asked her afterwards if something was wrong. She said she just hadn't recovered yet.\n\nHer star was ascending in the modeling world. She was too old and well developed to ever hit the top and knew it, but catalog and print models make pretty decent money, and she got picked up by a national chain, and they had her doing television ads seen all over the country. I was glad for her, but she was gone a lot more, something I didn't care for. She laughed.\n\n\"Honey, in three or four years I'll be down to doing stuff aimed at middle aged women, with saggy boobs and big butts. Let me enjoy it, and make as much as I can while I can.\"\n\nI sighed.\n\n\"All right, just make sure your biological clock doesn't run out. We agreed on two, remember?\"\n\nShe was pushing thirty, just out of the danger zone.\n\nShe never really answered me.\n\n..................................................\n\nI really couldn't complain. I was just as busy as she was.\n\nThe best thing I'd ever done was hire Leslie. She was smart, motivated, and a great negotiator. All our standard lines were doing well, and she had gotten us into licensed printing. Thanks to an old contact she had in the television industry we were doing shirts for a few of his shows. We had a hundred ten full time employees, and were looking for a larger location.\n\nShe had located and purchased a three story office building close to the factory, had it renovated, and had two floors up for lease. It was a good investment. We kept the top floor. Leslie got the big corner office, and I had the opposite corner made into a combination office/studio.\n\n..................................................\n\nThings were going great. I was successful beyond my wildest expectations, Bree was doing well in her career, we had a tight group of really good friends, I was happy.\n\nThen I wasn't.\n\nIt was an accident I found out, but that's usually how it happens. Very few spouses come to you and say \"How was your day, honey? By the way, I'm fucking other people, but just while I'm away. You don't mind, do you?\"\n\nIt was an impulse stop, I was near their offices so I stopped in to see Sherry, I needed her for a few days to do some new stuff. Normally I would have just called, but I thought I might catch Bree and have some lunch.\n\nHer office was at the end of a long corridor, past the sets. They needed new space and she was looking, but in the mean time equipment lined every hallway.\n\nI could hear the loud voices through the open door.\n\n\"You've got to stop this! It'll kill him if he finds out. You're not just risking your marriage here. Besides being a good friend, he's a client, and he's brought us his friends when they needed something. Think about what you're doing here!\"\n\nWow. Sounded like trouble in paradise. Then again, models had a notoriously high divorce rate. I don't know if it's because all models are a bit narcissistic by nature, or the travel schedules and pressures inherent with the job, but it happened far too regularly. Bree was always telling me about one of her friends splitting from their spouse.\n\n\"Relax, Sherry. It only happens when I'm out of town, and it doesn't mean anything. It just helps relieve the stress.\"\n\nThen she giggled.\n\n\"And it's a lot of fun. He'll never know.\"\n\nI knew that giggle, and that voice. Bree.\n\n\"It's not right, Bree. You know how much he loves you, if he does find out, it'll be bad, really bad. I can't believe what you're risking for a little physical gratification.\"\n\n\"Again, there's no way he'll find out. But in the almost impossible chance that it happens, he loves me to much not to forgive me. Oh, I'll have to kiss his ass for awhile, be a good little wifey, but eventually he'll calm down, he knows he can't live without me. And of course, I'd stop immediately.\"\n\nShe giggle again.\n\n\"Besides, it's not a little gratification, it's a lot.\"\n\nI heard Sherry sigh.\n\n\"I hope you're right. But I deal with him as a business person, and he can be quite rigid at times. The best thing you could do is stop. But, Bree, if you don't, and he finds out, don't be surprised if he puts you out on your ass. Plus, I'll have no choice but to drop you to keep his business.\"\n\n\"Oh, Sherry, you won't drop me. I'm one of your best. This means nothing. I still love him heart and soul. We're going to grow old together. In a year or so I'm going to retire, give him a baby. He'll get what he wants, I'll still have a husband I love, plus some memories I can secretly treasure. I'll have the best of all worlds.\"\n\nI knew better than to go into that office. I could feel the rage building in me, and it would be very, very ugly if I confronted her now. I could still hear them arguing as I walked away.\n\nI passed Sherry's assistant. When I saw him, I pulled out my phone and started talking.\n\n\"Yeah, yeah. I'll be right there. I wish you'd have told me sooner. Bye.\"\n\nI looked at him.\n\n\"Hi, Allen. Do me a favor. I was going to take Bree to lunch, but something came up, something I have to take care of. Tell Bree I stopped by, and I'll see her later.\"\n\n\"Sure man, not a problem.\"\n\n................................................\n\nI hopped into my pickup, the big V8 making the tires squeal as I pulled out. A pickup isn't something most artists of businessmen drive, but my dad had always had one and I liked them.\n\nJ. had taken my call and was waiting for me in his office. As was his way, he went right to the point.\n\n\"You're sure?\"\n\n\"Heard it from the horse's mouth. Apparently it's a regular thing on her trips.\"\n\n\"What do you want to do?\"\n\nI sighed.\n\n\"Leave her in the dust and not look back.\"\n\nJ. put his hand on my shoulder.\n\n\"You sure about this? You've got a lot invested in each other. Maybe you should give it a few days, cool down a bit.\"\n\nI put my head in my hands.\n\n\"You didn't hear her J., the arrogance, the lack of guilt. She thought she would never get caught, and if she did I'd be willing to forgive her. Slight miscalculation on her part.\"",
        "I heard the door open, then a tiny set of arms wrapped around me. J. had called Leslie. She held me while I cried it out.\n\nI finally stood up, easing out of her embrace. I kissed her cheek, gripped J. in a firm shake.\n\n\"Thanks, old friends. I'm glad I have you.\"\n\nWe got some coffee, and sat down for a war conference.\n\nJ. went into lawyer mode.\n\n\"If you're going to split up, can you give me a few days to get ready? I need to review the prenupt, and get your financials in a row. How do you want to play this?\"\n\n\"Give her what she's entitled to, not a dime more. Oh, and make the house part of the settlement. I never liked it, it was her dream house, she should keep it, and the last five years of the payments.\"\n\n\"We could fight for more, you know. This state has adultery penalties written into the system.\"\n\nI looked at J.\n\n\"I don't want it dragged out any more than necessary. I want the best Shreagle you've got. If you think the adultery will speed things along, get me some hard evidence and we'll go from there.\"\n\n\"Done. I'll get Don Baynes, he's rated as the second most successful divorce lawyer in the state. Alice James is the best, but she's not in our firm. Still, we'll get an appointment. Just a consultation will block Bree from using her. And we'll get Starr Investigations, they've been very successful for us in the past. With me so far?\"\n\nI nodded.\n\n\"Good. Now, the biggie. Can you carry on like you don't know she cheating on you?\"\n\n\"Should be easy. She leaves tomorrow for a ten day shoot. I think I can hold on for one day. And I need to talk to the investigators. There's some things I want them to get for me, things probably not admissible in court. I don't intend to use them for that. It's more for personal use.\"\n\n\"I don't think that's a good idea. Don't do anything stupid to damage your case.\"\n\nFor the first time that afternoon I smiled.\n\n\"Relax, I'll be legally covered.\"\n\n...............................................\n\nLeslie snatched my keys as we walked out.\n\n\"Let me drive.\"\n\nShe turned left instead of right and I didn't notice for about ten miles.\n\n\"Where are we going?\"\n\nShe smiled, the first time she had since we left J.\n\n\"Somewhere that has always brought you peace.\"\n\nSo we drove a hundred and ten miles to the state capitol, straight to the Art Museum, and I spent ninety minutes, right up until they closed, wandering through it, with Leslie holding my hand. I stopped at my favorites, feeling humbled by their talent. For the first time that day, I was at peace.\n\nOn the way back she asked me again if I was sure I wanted to divorce her.\n\n\"You didn't hear her, Les. To her it's just a grand adventure. Our years together, our promises to each other, our plans for the future, all of it didn't mean enough to stay faithful. I got the impression from the bit of conversation I heard she couldn't see the wrongness in her actions. So to wrap it up, yes, I'm sure.\"\n\nShe didn't speak again until we stopped to get her car.\n\n\"Be careful, Chris. Whatever you end up doing, I'll support you. But she's a friend too, so for all of us, make it clean as possible. Please?\"\n\nI gave her assurances, and went home to my wife.\n\n................................................\n\n\"Where have you been? I was a little worried.\"\n\nThere seemed to be genuine concern on her face.\n\n\"Sorry, babe. Rough day. I had a chance to look over some new properties, we may have to expand again. Leslie thinks with real estate still down, we should buy instead of lease. Then I had to meet with J, give him preliminary paperwork. I had turned my phone off to concentrate, forgot to turn it back on.\"\n\n\"Poor baby. I know how to cheer you up. I leave tomorrow for my shoot, let me serve you dinner in bed, starting with dessert first.\"\n\nI knew this was going to be the last time I'd ever make love to her, but I didn't try to put any extra effort into it. Damned if I was going to try competing with her lovers. I think she sensed something was wrong.\n\n\"Are you sure you're all right? You didn't seem quite here tonight. Don't tell me this hot, smoking body doesn't turn you on.\"\n\nShe giggled as she ran her hands sensuously over her body.\n\nI looked her straight in the eye and told her the truth.\n\n\"You're still the most beautiful woman I've ever meet. I just have a lot on my mind. Let's just snuggle, I promise, things will be different when you get home.\"\n\nI don't think she quite understood what I said, but it seemed to assure her.\n\nI deliberately turned her alarm off, and set mine for thirty minutes before she had to leave.\n\nI slipped out of bed and shook her awake.\n\n\"Get up, babe. You overslept. You just have time to get your shower before the cab comes. The alarm was off, did you forget to set it?\"\n\nShe flew out of the bed, showered, just finished her makeup when the cab pulled up.\n\nShe kissed me frantically at the door.\n\n\"Gotta run. Love you!\"\n\nI stood and waved as the cab backed out of the drive.\n\n\"Love you too.\" I said it quietly, wondering if I'd ever say it to her again.\n\n.................................................\n\nAmber Jackson was not exactly what I was expecting in an investigator. Twenty five, a lithe redhead with old eyes. Looking for and finding the worst in people must be tiring on the soul.\n\n\"Can you do it?\"\n\nShe sighed.\n\n\"Yes, we can do it. The papers you showed me should cover us. Just remember, it might still be considered illegal, you may not get to use it in court, and you CANNOT get us involved. Are you really sure this is what you want? Finding out is painful enough. In my experience, actually seeing it can be the last nail in the coffin.\"\n\n\"I'm sure Ms. Jackson. I've already had the funeral, read the eulogy, and I'm ready to walk away. But I don't intend to bury her, I intend to cremate her. And remember, speed is of the essence.\"\n\nI wrote her a check, gave her Brees' schedule, her hotel, and shoot locations, and sent her out to do what she did best.\n\nIt took her two days to bug her phone and wire her hotel room. She observed which of the male models she seemed closest to, and for insurance wired their rooms too.\n\nThree days after that she was back, with audio and video recordings and a written report. She kept everything in place per my instructions, in case anything interesting came up.\n\n\"Again, I urge you to just give this to your lawyer. Do not read, watch, or listen to any of this. You'd be a lot better off. I have, and sadly enough, despite what she's doing, I think she really does love you. Think about that before you make your final decision. If you want the rest, we'll have it for you the day after her shoot wraps up. Good luck either way. You're one of the ones that doesn't deserve this.\"\n\nI thanked her for her time, told I wanted it all, promised her a bonus for her good work, and sent her on her way.\n\nI went to my office/studio, locked the door, and fired up the DVD player.\n\n.................................................\n\nIt was every bit as painful as I thought it would be.\n\nHer first tryst was with Brandon. That figured. It was pretty normal sex between two physically fit and attractive people. No exotic positions, no weird toys. Penis size, he didn't look as big as me. The conversation was interesting, though.\n\nThey lay resting between between rounds, he idly stroking her hair while she fondled his cock.\n\n\"How's the hubby? Giving you enough at home?\"\n\nHe squealed like a girl when she yanked hard on his equipment.\n\n\"Do I have to tell you again not to talk about him? Unless you want to leave now instead of spending the night, keep it up and you will. Again, he does a damn fine job. He's actually a little bigger and a LOT better, and has great staying power. Feel superior now?\"\n\nHe actually whined.\n\n\"Then why do you do it?\"\n\n\"For the thrill, dumbass. In the not too distant future, I'm giving all this up, and I mean ALL of it. I just want a few more fun times, so you better get busy, because time is running out.\"\n\nTo help him along, she gave him a slow, steamy blowjob.\n\n...............................................\n\nThe second DVD was a little more interesting.\n\nIt was a different guy, someone I didn't recognize. He was huge, well built, and hung, at least eight or nine inches. They too fucked in a way that told me this wasn't her first time together. It also had some very interesting conversation.\n\n\"I'm going to miss this.\" she moaned, as she rode him.\n\nHe laughed.\n\n\"We been doing this for a year, hon. Admit it, you're addicted, we're not going to stop.\"\n\nShe bounced a little harder.\n\n\"Yes I am. When I stop modeling, I'll give you up, cold turkey. I'll miss you, probably wear out a vibrator reminiscing, but you'll never see me again. I may stop a little early, he seemed a little weird before I left this time. I think it might be time to pack it in.\"\n\nI was thinking about this when the door opened and Abbie, a petite black girl that had just signed with the agency, walked in, shedding clothes.\n\n\"Assholes! You started without me, again.\"\n\nSoon she was locking lips with Bree, pulling on her nipples, when I lost it. Bree had never once gave me any indication she was interested in girls. I had to shut it off.\n\nI needed to work off some steam, so I walked into my studio, put the biggest canvas I had up, draped a few drop cloths behind it, and did my Pollack imitation.\n\nSlinging paint with abandon, screaming the whole time.\n\n\"Fucking bitch!\"\n\nSplash. \"Cunt!\" Splash. \"Lowlife whore!\" Splash.\n\nI kept it up until I was down to one quart of paint and out of expletives. I threw the can all the way across the room into the large windows I had installed for better light, watching as it slid slowly down the pane. I dropped to my knees, sobbing, at about the same speed.\n\nI had been there for about twenty minutes when I heard a small scream. Leslie was going home for the night,saw my lights on, and stuck her head in to say goodnight. The first thing she saw was Bree in her glory, and then me on my knees.\n\nShe dropped down beside me, hugging me and ruining her outfit. I let her hold me for a few minutes before extricating myself and helping her up.\n\nI handed her a towel and some tissues.\n\n\"Sorry, Les, I thought I locked the door.\"\n\n\"You did. I have a key, remember. Why the hell are you forcing yourself to watch this?\"\n\nHer eyes widened when I explained.\n\n\"Because I still loved her, and I wanted to see if I could forgive her. This is the only way I could think of. To actually see it, see how she really was. Boy, that plan backfired.\"\n\nShe held my head.\n\n\"Walk away, Chris. Don't let her destroy you. You're an artist, and artists have beautiful souls. Don't let this taint yours. I've never told you this before, but I've always been in awe of your talent. You can look into people and objects and see things other people would never discover. It what makes you unique.\"\n\nI laughed bitterly.\n\n\"Must have had a blind spot when it came to Bree, huh? And you're right. I've got one more thing I need to do, then I'm done. Don't worry, no one will come to harm, physically anyway. Now go on home, you look a mess. I'll be all right.\"\n\nShe didn't want to, but I shooed her out. I had a few more words for her.\n\n\"Thanks, Les. I love you, you know? And plan on being late tomorrow. I need you at J's office first thing, work related, nothing to do with my situation.\"\n\nI kissed her on the cheek and walked her to her car. Back in the office, I took the DVDs, scanned them into my computers, and got to work.\n\n.................................................\n\nI was almost late the next morning.\n\n\"Idiot,\" said J, \"what possessed you to record them, knowing how it would hurt? You know we can't use those in court, they were done without permission. They need to be gotten rid of, right now.\"\n\n\"Relax, I don't intend to use them in court. The stuff we got without going into the rooms will be enough. BUT,\" I paused, grinning, \"they may not be illegal. Look at this.\"\n\nI handed him some papers. Written consent from Bree, Brandon, and Abbie to use their images. Release forms, pretty standard, giving me permission to use their images on my shirts. They were open ended, because I sometimes held on to photos for months until I had a good slogan to go with the image. Payment was due at the time of publication.\n\nJ was intrigued, but wary.\n\n\"This may or may not hold up, I still think we should leave them out of court proceedings.\"\n\n\"I don't intend to use them in court. I intend to use them on shirts.\"\n\nLeslie stood open mouthed, while J broke out laughing.\n\n\"Leave it to you to see something the rest of us didn't. Go ahead, if they sue, I'll represent you.\"\n\nI turned to Leslie.\n\n\"Now for the business portion of the meeting. J and I looked at the numbers. Since you came on board business has jumped thirty per cent. I'm smart enough to know I'll never be the business person you are, or that when things get a little better you'll get offers. I don't want to lose you. So, J and I came up with a plan. I'm offering you ten percent of the business to stay, two percent a year until you top out, along with suitable pay increases tied to performance. And I've heard you talk about how much you like Mustangs. There's a convertible in the parking lot, your favorite shade of blue, with all the bells and whistles. Sign the papers and it's yours as a bonus. Think about it for a few minutes.\"\n\nHer mouth was hanging open. She knew the last valuation on my company was 3.3 million, with an estimation it could reach five in three years, mainly due to her efforts.\n\nJ laughed and handed her a pen. Her hands shook so bad she could barely sign. Then the tears started, followed by hugs.\n\n\"Assholes! I love you guys.\"\n\nI was happy, for the first time in over a week.\n\nI slapped her butt.\n\n\"You need to get that cute ass of yours to work, make us richer. I still have things to go over with J. I'll see you later. Here's the keys to your new car. I'm sure you'll take the scenic route on the way to the office. Go!\"\n\nWe stood at the window and watched as she walked to her new car. She leaned against it, crying, I'm sure, then looked up and waved. She hopped in and peeled out of the parking lot. J laughed, saying he was glad he didn't have to buy her tires.\n\nThen we got down to the ugliness. He laid out the papers.\n\n\"Here it is, cut and dried. She can't touch your business, and you've been smart enough to keep most of your money in the company coffers. Your house is worth roughly four fifty, and the payoff is just shy of ninety. The savings, the investments, probably fifty fifty minus half the value of the house. You may get a more favorable split with the right judge, if they factor in the adultery, but my best advice is not push it, you'll make points trying to be fair. I don't look to pay alimony, depending on her earnings. I know they are covered in the prenupt, but earning potential post divorce will play into things. If she doesn't fight, you'll be a free man in four to six months from filing.\"\n\nIt sounded as fair as possible to me.\n\n\"What if she fights it?\"\n\nHe grinned.\n\n\"Then things get interesting. She can fight over money. She can fight over reconciliation, try to force counseling. It might be a bumpy ride. You up for it?\"\n\n\"No. but do I have a choice?\"\n\n\"None at all. The papers are prepared, when do you want them served?\"\n\n\"She gets home Thursday. I don't plan on being there. Do it Friday, at the agency. And I have a letter to Sherry here. None of this is her fault, she tried to get her to stop. I just want her to know I bear no ill will, and I'll still use her. Plus, I don't want her to fire Bree, she needs to be working during the divorce. That will be considered a favor to me. Think she'll go along?\"\n\nHe read the letter.\n\n\"More than likely. After all, Bree is one of her best, and it all comes down to money.\"\n\nI went back to my studio, to work on my revenge.\n\n...............................................\n\nIt took two days to cut and blend the images into the shape I wanted. My equipment was the best and most advanced money could buy. The end product was amazing.\n\nThe first was Bree and Brandon, tangled against each other, breasts, penis, and butt artfully covered by arms, legs, and position, but still showing enough to make it interesting. There was no doubt what had just happened. Brandon had a sheen of sweat on his body, and Bree had that post orgasmic smile I had always loved.\n\nI put a light sepia glow overlay on them, it looked great on a black tee.\n\nThe other was of Bree and Abbie, kneeling, as they kissed with passion. You couldn't tell from the picture that they were both astride a guy, with a tongue buried in Abbie and a cock in Bree. I got a shot where they were caressing each others boobs, covering the nipples, just. I had a muted background, a little lighter behind Abbie, a little darker behind Bree. I showed the finished product to J and Les.\n\nLes had her mouth open, while J agreed it was one of the most erotic things he had ever seen, followed by an apology over the model. I just waved my hand.\n\n\"Think she'll fight when she sees this?\"\n\n\"I don't know. Maybe she'll sue. Maybe they'll all sue. Either way, it'll damn sure get their attention. Here we go.\"\n\nHe was almost rubbing his hands together.\n\n.................................................\n\nI went home, and draped both tee shirts across our bed, and left her a short note with my ring.\n\n\"I know. You'll get the papers soon. Please don't fight it.\"\n\nI had already removed my clothes and all I wanted to keep. I didn't take a single picture. Laying the keys on the hall table, I pulled the door shut on my old life.\n\n.................................................\n\nI went to Tahiti. It was a place I had always wanted to visit ever since I discovered Gauguin.\n\nParts of it was as beautiful as his paintings, others were like slums and third world countries everywhere. I sketched, drank, looked at the women, but didn't touch. Found a nude beach, hung out, ogled women from all over the world. Drunk, I almost hooked up with a tall Russian, until it hit me she was almost a clone of Bree. Went home after two weeks.\n\nI had taken a condo as far away from my old house as I could and still stay in the same town. It was small, but I liked it better than wandering around that big empty house, aching for the sound of small voices.\n\nMy first call was to J. I had told him I was leaving the country, but wouldn't tell him where.\n\n\"Hi, J. What's happening.\"\n\n\"A lot. You wouldn't believe. If you don't want Bree to find you, don't go to work or over here. She had people watching, waiting for you to surface. She didn't take it well. Cried. Screamed. Got a lawyer. Tried to get Anne, boy was she pissed when she found out she couldn't represent her. Got a pretty good guy, not as good as Don, but still pretty sharp. And Sherry wants to talk to you. Brandon wants a piece of your ass too. Did you know he was married? Did you really give a thousand tee shirts away at the flea markets? His wife was not a happy camper when she saw one. He's trying to convince her it was just a shoot, but I don't think she's buying. She wants to talk to you as soon as possible. Damn if you aren't right popular.\"\n\nHe finally ran out of breath.\n\n\"It's nice to be loved.\"\n\nHe started laughing.\n\n\"I wouldn't exactly call it love. And before I forget, Jay Gold called. He says it's extremely important you call him. I haven't seen him since college. Last I heard, he was a failed writer. What's that all about?\"\n\n\"Long story. Think you can get away for dinner?\"\n\n\"Sure, but I think they're following me too.\"\n\nDoesn't matter. I'm back. I'm calling her just as soon as I call Sherry, Jay, and Les. How's she doing?\"",
        "\"She's almost as irritating as Bree. Call her first. How about my club at eight? That way, we'll have some privacy.\"\n\n\"Great. See you then.\"\n\nI took a breath, and called Les.\n\n\"Have you driven us bankrupt since I've been gone?\"\n\nShe actually squealed.\n\n\"Chris! I'm glad you're back. You are back, right? And for your information smartass, I picked up another licensing deal. Another three to five percent bump. We're just getting richer and richer. Now when are you coming in?\"\n\n\"Monday. I still have some calls to make, a few people to see.\"\n\n\"I take it you haven't talked to her yet. She came over three or four times. Called me a liar when I told her I didn't know where you'd gone. Accused me of sleeping with you.\"\n\nDidn't see that coming.\n\n\"How did that go?\"\n\n\"I laughed at her. Told her, 'Sorry Pot, this kettle ain't black. But to be honest, I kind of like the shine. Now, you gonna leave, or do I need to call the cops?' She cussed all the way out the door. Come back, Chris. It's your company, we need your vision. Oh, and the new shirts are selling like mad. I've named it the Eros line. You've made Bree famous. Got any more in the pipeline?\"\n\n\"Not right now. See you Monday.\"\n\nI called Sherry. She seemed guarded when she answered.\n\n\"Chris, how are you?\"\n\n\"As good as can be expected. Just wanted you to know I'll need you sometime this month. Nothing big, maybe two girls and a guy. Can you make time for me?\"\n\nHer relief was obvious.\n\n\"You got it. Send me the details and the time.\"\n\n\"Thanks, Sherry. And I'm sure I don't need to tell you, no Bree. Not ever.\"\n\n\"I understand. I got your letter. Thanks. I just want to say...\"\n\nI stopped her.\n\n\"You don't have to say it, Sherry. I was outside your office that day you tried to make her stop. It's how I found out.\"\n\n\"Oh God! I wish the whole thing had never happened. I've got to tell you, she collapsed when you had her served. Did you have to do it at work? I think she really loves you.\"\n\n\"Not enough. I have to go. I'll email you the details.\"\n\nI took a deep breath, steeled my reserve,and dialed the number.\n\nI thought it was gonna go to voicemail. I had changed my number and she wouldn't recognize it. It wasn't actually my regular phone, but a throwaway I got just to call her.\n\nShe picked it up on fifth ring.\n\n\"Hello?\"\n\n\"Bree.\"\n\nIt was flat, no emotion, but I was boiling inside.\n\n\"Ho-honey?\" Her voice was quivering, \"is it really you?\"\n\n\"Yes Bree. It's me. I think we should talk.\"\n\nShe had recovered.\n\n\"You sonofabitch! You file divorce papers and disappear, and now you want to fucking talk? How could you?\"\n\nI was not in the mood for dramatics.\n\n\"Well then, we'll let the lawyers do the talking. Goodbye Bree.\"\n\nI hung up, counting in my head. I had gotten to six when it rang.\n\n\"Hello?\"\n\nShe was crying.\n\n\"Chris! Honey, please don't hang up. I need to see you, touch you. Will you come home?\"\n\n\"NO. But I will meet you for dinner, tomorrow, The Bistro. Seven. I've already made the reservation. And Bree, there will be no touching.\"\n\nI hung up, rubbed my head, and tried to relax for a couple hours. Ended up pacing. Twenty three steps, each way.\n\n................................................\n\nFinally, I remembered to call Jay.\n\n\"Where the fuck have you been?\"\n\nHe was almost screaming.\n\n\"I got shit we need to go over. We got a call from Obscure Comics. They wanna publish Brunhilde, going all the way back to issue one. And they want a guarantee of a hundred more. After that, they want to renegotiate, maybe buy the whole thing. They're offering a sweet deal, Chris. We could be rich!\"\n\nI didn't have the heart to tell him I was already pretty well off. Jay was part of my focus group, an aspiring writer. He even came up with a couple of shirt slogans for me. I paid him upfront and gave him three percent of every sale. He probably made fifteen grand off them in the last four years.\n\nWhen I was trying to decide what field to pursue, he suggested comics. He couldn't draw a straight line but he had a good imagination. I drew the panel board for a couple of his ideas so he could pitch them to the big three. Marvel, D C, and Dark Horse. I thought they were pretty good, but no one picked them up.\n\nHe did a little research, came up with a new idea, and nagged me into drawing and lettering the first three. It featured a woman, a direct descendant of Brunhilde, the famous heroine of Germanic legend. Raped and beaten, she vows revenge and transform herself into a svelte warrior with impressive martial arts skills. Her costume is designed by another rape victim, a bioengineer experimenting with advanced body armor. Think Ironman in a sexier outfit. Her weapons, though light, are state of the art, designed by another male rape victim. \n\nWith her support team in place, she stalks the streets of her hometown, fighting crime, especially sex crimes. You can be pretty explicit in a graphic novel, so there was usually nudity, and an occasional sex scene. And of course, lots of violence.\n\nThe finished product was modeled after Bree. I made a note to change her facial features a bit, just in case. We could write it in as the result of an injury.\n\nI thought about dropping out several times when my business took off, but with my advanced technology I could draw and letter the whole thing in about three days. And I thought it was neat.\n\nWe self published on Amazon, charging 99 cents per issue. It started out slow, but we had developed a pretty good following, usually fifty thousand or so a month. Jay ran the blog and talked to the fans. I was in the background and liked it that way. He was the writer, so he got sixty percent while I took forty. It usually worked out to twenty thousand a month for him, and sixteen for me, and we had to pay taxes on that.\n\n\"That's really great news. Have you got someone to handle the negotiations?\"\n\n\"I thought we'd handle it,\" he said, surprised.\n\n\"Never a good idea, Jay. We could use my firm. They have a whole section devoted to entertainment and intellectual rights. Want me to set it up? They were a big help to me when I started the shirt business.\"\n\nHe seemed reluctant, but agreed to talk to them. I rang off, it was time for my dinner appointment.\n\n................................................\n\nWe hugged, got a before dinner drink, and got caught up.\n\n\"She's fighting it, Chris. Already got a counselor lined up. Push comes to shove, you may have to go for a few sessions. We'll try to keep the number to a minimum, but if it happens it'll probably be at least ten, but we'll make sure we get to choose who. I don't understand her, man. She went to see Don, he laid it out to her. Denied she had done anything until he showed her the pictures. She doesn't know we have tapes. Said it didn't matter, if she could just talk to you she could straighten it all out. Your appointment with Don is tomorrow at two. He says you shouldn't talk to her without him there.\"\n\nHe paused to see if I had absorbed everything.\n\n\"All right. But I've already set up a dinner with her tomorrow. Just to hear her try to spin it. Won't change anything. Just curious, I guess.\"\n\n\"My advice, don't go. It could muddle things, draw it out. Talk it over with Don.\"\n\n\"Thanks J. Now, to change the subject, I need another of your services. Your firm is making a fortune off me. I'm probably sending Anna to Harvard with what I'll be paying you guys.\"\n\nAnna was his two year old daughter. A miniature version of his wife, Bree and I were her godparents.\n\n\"Yale,\" he said, with a straight face. Then he laughed. \"Wanna come over Sunday? Dad will be there and he'd love to see you.\"\n\n\"Sure. Don't know that I'd be pleasant company, but I'll be there.\"\n\n\"Great. Now, what else could you possibly need from us?\"\n\nI told him about Jay and what we had been doing together. His eyes widened.\n\n\"How many layers have you got? Jesus, four years and I had no clue. I'll set you up with the same guy that got your logos protected. And you know, just as soon as I get home I'm gonna look them up.\"\n\n\"Thanks. It started out as just a favor, but I actually enjoy it. And all I make off of it gets donated to the foundation that loaned me the money to start my business. Wondered how many mes I've already funded?\"\n\nHe laughed. \n\n\"I bet your accountant loves you. Any more gold mines I don't know about, anything else to surprise me?\"\n\nI grinned.\n\n\"Well, I do have a showing at the Edmussen Gallery next month. Me and two more artists. You should get your invitation next week.\"\n\n\"Out! I'm on information overload. Got a cure for cancer perculating in that head of yours?\"\n\n\"Working on it, in my spare time.\"\n\nHe was still laughing when I left.\n\n...............................................\n\nI know I'm making it seem like losing Bree was easy for me, but it wasn't. As soon as I was alone the brave face slipped off, and I was in misery. Sometimes I railed. Fucking bitch! Then I would cry. I would plot painful revenge. Slash her face, ruin her career. Hook her up with some disease riddled asshole and laugh when the pain came. But I knew I still loved her. I just couldn't live with her anymore.\n\nHer BMW boxer was sitting in the parking lot forty minutes early. I know, because I drove by the restaurant. I made myself wait until precisely seven before I came through the door.\n\nShe had gotten us a booth near the back. I appreciated that. She had a glass of wine in front of her, unusual because she rarely drank. Liquid courage, I guess. Dressed to the nines, wearing my favorite colors, hair in a style she rarely wore but knew I liked. As I got closer, I could see she looked tired, and slimmer. She saw me, started to rise, but I waved her off. \n\nI slipped into the booth and waited. I had flagged a waitress and ordered my drink on the way over. Coffee. It appeared before she had a chance to speak. I asked her for about thirty minutes of privacy before we ordered.\n\nI took a sip before I spoke. I had laid my phone on the table.\n\n\"Before you start, I need to tell you my lawyer thought this was a bad idea. He insisted if I met you I record the conversation. If you can't agree to that I'll leave now.\"\n\nThe pain on her face was obvious.\n\n\"Is that really necessary?\"\n\n\"It is if you want to talk. You wanted this, so spit it out. What do you need to say?\"\n\nShe started crying.\n\n\"Bree! Stop! If this is all you'll be doing I'll be leaving.\"\n\nShe got herself under control.\n\n\"How could you? I never loved anyone like I love you. I thought you loved me too.\"\n\n\"I did, right up until I found out you were loving a lot of others too. I'm not much of a sharing guy, Bree.\"\n\n\"I don't love them! Only you! They were just a diversion, something to do to relieve the stress. They never meant anything, never.\"\n\n\"Stress? You cheated because you were stressed? News flash. You could have packed a couple of toys, taken care of yourself. You think I don't have stress? I'm responsible for the livelihood of over a hundred people. A series of bad decisions, a quirk in the economy, and we're all out of work. And I was just as deprived as you were, there were times when I was around women, attractive women, who let me know they were available. But I never took them up on their offers. I admit there were times I was tempted, but I loved you. LOVED YOU. Get it?\"\n\n\"It was going to stop, honey. I was coming home to tell you I was ready to quit and start a family. And it was just a few times.\"\n\n\"Bullshit! I have you on tape with your big dicked lover talking about the last year. And Abbie? Never knew you were bi, might have been good information to have before we married. I know a lot more than you think, so don't try to spin anything or we stop talking.\"\n\nShe had her head hanging, face in her hands.\n\n\"I'm sorry. I never thought. You don't know what it's like. All those bodies, naked sometimes, rubbing against each other because a lot of times we didn't have much room. The flirting, the innuendos. It all got to be too much. I couldn't stop myself. But I promised myself I would when I quit, devote myself to you and our children. I didn't think you'd find out, and if you did, I was sure my love for you and you for me would over come it. Please honey, let's work this out. I'll never do anything like this again.\"\n\n\"You said you were sorry? Sorry for what? Sorry you got caught? Sorry you destroyed our marriage? You probably are. But I don't think you're sorry you did it. You see, I heard you talking to Sherry the day before you left. How much fun you had. How you'd treasure the secret memories. How even if you got caught you knew I'd forgive you. Really? You honestly thought I'd say, that's all right, honey, I know you love me? How's that plan going?\"\n\n\"Oh God!\" she wailed, while people looked over at us.\n\n\"Bree! Calm down, people are staring. I think we're done here. We're through, Bree. You miscalculated. Badly. Learn to live with it. I'm being as fair as I can be with the settlement. You get to keep your dream house. You can keep working, fuck anyone you want without worrying. Your dream life. Goodbye, Bree.\"\n\nShe grabbed my hand.\n\n\"Please stay.\"\n\nI shook her hand off.\n\n\"I don't think I can take any more of your lies tonight. One more thing, did it ever occur to you to use protection? At least on the guys? I don't know if they make pussy or tongue condoms. Get tested Bree. I did. And I swear, If I have anything, the divorce will get a lot uglier. Good night, Bree.\"\n\nI had gotten a little loud, and the closer booths and tables heard my little rant. Bree screamed and ran out of the restaurant. I dropped a couple of twenties on the table. She was gone by the time I got outside.\n\nShe emailed and called me constantly for three weeks. I didn't answer them. Got a restraining order when she showed up at the office and the plant and refused to leave. The next week we met with our lawyers. \n\nShe looked about as bad as I'd ever seen her. Gone was the aloof attitude, the just right clothes and makeup.\n\nHer lawyer had made outrageous demands. Half the business, all our savings, the house, even my truck.\n\nDon laughed when he was done listing what she wanted.\n\n\"Nice fairytale, Jerry. You know damn well the prenupt is bulletproof. He hasn't tried to break hers. And he's being more than generous, and Bree knows it. Let's cut to the chase. What does your client really want?\"\n\nWe all looked at Bree. She sat straighter, looked me in the eye.\n\n\"I want my husband back. I want him to come home and allow me to make up for my mistakes. I want his forgiveness and love. I'll do anything, agree to any conditions. A monitor on my ankle, gps in my car and on my phone. I'll check in every hour on the hour. Hell, I'll even wear a chastity device. I checked online, they actually make them. Please, Chris, please.\"\n\nShe had started crying again.\n\nI put my head in my hands, sighing.\n\n\"I don't want a prisoner, or a slave. I want a loyal and faithful wife. Tell you what, why don't you show me a clean bill of health from our doctor, and we'll go from there.\"\n\nI thought she was going to pass out. I couldn't ask our doctor, but I could get a printout for recent prescriptions from our insurance carrier. Don thought of that one. When I got to one I didn't recognize, he researched it. It had a variety of uses, the primary one being treatment for STDs. She must have picked it on her last trip, I tested clean. She tried to bluff.\n\n\"I will, if you do the same.\"\n\nDon handed her my doctors' report, saying I was void of any STD.\n\n\"We'd like you to get tested tomorrow, and expect the test results by next week. Then we'll talk again.\"\n\nWe barely heard her whisper.\n\n\"How did you find out?\"\n\n\"Sometimes, Bree, I get my head out of the clouds. And nobody betrayed a confidence, I found out in a strictly legal way. Even then, I wasn't sure until you just verified it. I'm not moving back, Bree. We're done. Let it go.\"\n\nHer look was bordering on hysterical.\n\n\"No! You have to take me back. You have t...\" she broke down in sobs. I felt like shit, even if it wasn't my fault.\n\nDon and I got up. \n\n\"I believe we're done for today. Jerry, get her to face reality. Come back to us with something we can live with. Then we'll talk.\"\n\n.................................................\n\nDespite my letter, Sherry almost fired the whole crowd when the STD scandal hit. Bree, Brandon, Abbie, three more girls and two more guys, just from her agency. I don't know who Big Dick worked for, or who gave it to who initially, but he had to have it, who knows who he may have passed it on to.\n\nThe fallout was intense. Brandon was finally in a position where he couldn't blow smoke up his wifes' ass, and she started divorce proceedings. One of the other males almost lost his wife, hanging on by a thread. He had to take an office job. One of the other girls was married, and another had lived with her lover for three years. They both got dumped.\n\nWe finally got to go before a judge. He had read the proposals and counter proposals and was leaning heavily in my favor, when Bree gave the performance of a lifetime, falling to her knees and begging the judge to order counseling.\n\n\"Young lady, I don't think it will change things, but I like to think all options should be explored if there is even the slimmest chance the marriage can survive. I'll order ten sessions, two individual each, six joint. If the counselor thinks it can be saved we revisit. If they think it can't, I'll grant the divorce immediately. Do both parties agree?\"\n\nShe thanked the judge, saying she already had one lined up. We were a bit more reticent.\n\n\"We'll agree, your honor, with conditions. WE get to pick the counselor, and refuse to do more than ten, regardless of the outcome. My client thinks it's a monumental waste of time, but will go along if it will help finish this up.\"\n\nThe judge looked at me.\n\n\"Young man, it sounds like you're not committing to this plan. Are you that certain you won't reconcile?\"\n\n\"Positive your honor, it's a case of leading a horse to water. If he's not thirsty, he's not gonna drink. But I'll comply.\"\n\nHe rapped his gavel.\n\n\"So ordered. I expect a report in no more than fourteen weeks. We'll go from there.\"\n\nFiguring it was going to happen, we had done a little research. I knew I didn't want a woman, and figured she would balk at a man, so we picked a husband and wife team. One individual session with each, both present during the joint.\n\n................................................\n\nTo save a little time, I sent over the DVDs, the audio recordings, and the written reports.\n\nThe first session, with the woman, was uncomfortable. She had already had her session with Bree.\n\n\"I'm certain she still loves loves you. I saw some of the film, read the report. I'm sure it was brutal for you. But there's some history that you're not aware of, something that may have a bearing on your feelings. We'll explore it in our joint sessions. But if you could look at her situation without getting emotional, it might change your mind.\"\n\nI couldn't believe what I was hearing.\n\n\"Without emotion? Marriage is all about emotion. Love. Trust. Commitment. Honesty. Take out emotion and all you have is cohabitation. Tell me, counselor, how do you feel about marriage? Do you believe in open marriage, cuckholdry, that sort of thing? How's your marriage work? Without emotion? That's probably the stupidest thing I've ever heard from someone who's supposed to be a professional.\"\n\nI looked at the time. Still had five minutes. I stood.\n\n\"I'm sorry, but I'm leaving now. Seems I've gotten emotional. And I think maybe I'll look into your backgrounds a little more thoroughly. I picked you based on testimonials from other clients, maybe I made a mistake.\"\n\nShe got a little flustered when I said that, apologized for her statements, said she was trying to do her best for both of us.",
        "\"I accept you apology. But, you never answered my questions about your marriage. I find that telling. I may or may not see you for the joint sessions.\"\n\n................................................\n\nThe session with the man was just as unproductive. He kept on about forgiveness.\n\n\"Look at it objectively. Sex is just a physical function. You can do it without having an emotional connection. But love, love is the deepest emotion you can ever have. A bond forged, a connection made that reaches to the soul. And Bree does love you. She's having a hard time understanding why you can't recognize that.\"\n\nHe paused, gauging my reaction. I tried my best to keep my face neutral.\n\n\"So, what you're saying is love and sex aren't tied to each other?\"\n\n\"No, no, not at all. Sex can be the ultimate expression of love. It bonds you to your mate.\"\n\n\"What you just said sounds contradictory to me. You can have sex without love and it's just a physical function, but with love it forges a bond? Is that right? So if I make love to Bree and it reaffirms our commitment to each other, and she goes out and fucks someone the next day, it shouldn't weaken that bond, right? Just something to do to pass the time until she comes home to me? I'm starting to seriously rethink my choice in counselors. I'll pose the same question to you I did to your wife. What's your marriage like?\n\nHe was distinctly uncomfortable, but I think his wife had prepped him.\n\n\"We're not here to talk about my marriage, but to talk about yours. I will say that in our time we've seen couples that have come to unusual solutions to overcome their differences, including 'open' marriages. It takes nothing away from their love for each other. What do you think?\"\n\nI laughed.\n\n\"I think you're about as full of shit as a six hundred pound man with constipation, and the joint sessions should be really interesting. And you better get her used to the idea that she's not gonna get the result she wants out of this farce.\"\n\nI stood, the session had ended.\n\n\"You have a good afternoon. Go home and make love to your wife. Or your girlfriend, or boyfriend, or group, or animal of your choice. After all it's just a physical act, right? Take this message to Bree. You wanted it, you got it, but the first lie I catch you in, the sessions are done and the paperwork gets filed. Understand?\"\n\nBefore he could answer I was out the door.\n\n..............................................\n\nI wasn't looking forward to the sessions, but I had a plan. I got it from an unusual place. One of my employees.\n\nI still had the flea market stalls, despite everyone telling me to get rid of them. I kept them for a variety of reasons. I would go and watch the crowd, see what was selling well, what they didn't like much, what they hated. An unknowing focus group.\n\nPlus it gave a job to six locals, mostly college students, many of them art majors. My favorite was Marynell. She hated the name, insisted on going by M. She had worked in the stall since she had started college. I paid her with a check, and gave her ten dollars more an hour under the table. I gave the rest five, sort of my way of sticking it to the man. Hey, college kids are always broke. And I always hired kids that I knew needed the money. They deserved it, and were more loyal.\n\nI always looked forward to seeing M, she never looked the same from one week to the next.\n\nShe had inherited a genetic flaw from her mother, receding hair. When she turned eighteen and came to college, she shaved it off, relying on wigs. One week she was a blond, the next a redhead. One weekend it might be a full Afro. The colors and length varied wildly, she once told me she had fifty wigs. Every once in a while she would leave the wig at home, oil her head, and put on enormous earrings.\n\nThe fact that she was blacker than coal, built like a Reuben model, six feet four and liked to wear four inch heels made her a force of nature. No one ever tried to steal a shirt in her shop.\n\nWhen I showed up with five hundred tee shirts to give away, she was impressed.\n\n\"Damn, that's hot!\" she said, looking at them.\n\n\"Where did this idea come from?\"\n\nI told her the story.\n\n\"Ouch! Sorry my white brother, that has to hurt. What does she think about it?\"\n\n\"She doesn't know yet. I just found out, and she's away on a shoot/fuckfest. She'll find out when she gets home and I'm not there.\"\n\nI must have looked miserable. She hugged me so tight I almost suffocated, trapped against her massive chest.\n\nWhen she let go I grinned.\n\n\"Thanks. I almost smothered there, but what a way to go.\"\n\nShe grinned and smacked my ass.\n\n\"When you're free, you and me are definitely gonna hook up. I've always wanted you, and I know what you're packing.\"\n\n\"I might take you up on that. I know what you're packing, too.\"\n\nSo, how did it come to pass we knew what each other looked like naked? Easy explanation. I was in the shop going over the weeks' take, giving her her cash, when the phone rang. She talked for a few minutes, said \"Damn!\" and hung up.\n\n\"What's wrong?\" I asked, out of politeness.\n\n\"Damn model cancelled. Don't know where we'll get one by class tomorrow.\"\n\n\"Maybe I can help. I know a lot of models, I might can get one for you.\"\n\n\"Wouldn't work, Chris, but thanks. We'd have to pay and we don't have the money. We usually rely on each other, but there's no men in our class. I doubt if they would do it when they find out they'd have to be naked.\"\n\nI grinned, and surprised the shit out of her.\n\n\"I don't have a lot on my schedule tomorrow. I can spare a few hours. What time?\"\n\nShocked, she looked at me.\n\n\"You did hear me say naked, right? As much as I've wondered what you look like, I can't ask you to do that.\"\n\n\"Honey, did I ever tell you where I go on vacation? I'd hazard a guess more people have seen me naked over the last few years than a lot of porn stars. I have no problem getting naked.\"\n\nSo the next day, I walked into her class wearing a robe and a smile, while nine women smiled nervously.\n\n\"Let me guess, first time with a live model?\"\n\nBefore they could answer, I dropped the robe.\n\n\"Let's get started. You only have fifty minutes.\"\n\nSo I spent the time getting moved into different positions. It gave me a new appreciation of Bree, holding a position for fifteen or more minutes at a time isn't as easy it looks. The last twenty minutes the instructor asked for a volunteer to pose for couple sketches. Seven volunteered.\n\nM told them she'd slap the first bitch that got naked, she brought me, she got to do it. So for the next fifteen minutes we posed together. She'd rub up against me unnecessarily as often as possible, and despite myself I started to react.\n\n\"Enough!\" I said, grabbing my robe.\n\nThe women almost died laughing while M smacked my ass.\n\n\"Nice equipment, for a white boy.\"\n\nI smacked her naked ass back, she hadn't redressed.\n\n\"Great ass, for any color.\"\n\nIt became a semiregular thing. The art professor would call me if she couldn't get anyone else. Sometimes I could, sometimes I couldn't. I never told anyone, although we were walking down the street one day and one of the students came up giggling and told Bree how lucky she was.\n\n\"What was that all about?\"\n\n\"One of M's friends. I help out at the college once in a while.\"\n\nShe thought I was talking about donating supplies.\n\n\"You're so sweet. We should do something together for them sometime.\"\n\nThe thought of Bree and I holding positions while the women sketched gave me an instant boner. We went straight home.\n\n................................................\n\nWhen my show came up, I had M as a guest.\n\nJ, Amy, his mom and dad, and Leslie were there, as well as Jay Gold, My divorce lawyer, and Sherry.\n\nM wanted to come, but said she didn't have a dress and couldn't afford to get one. I handed her a credit card.\n\n\"That's why it's so nice to be rich. Get a dress, shoes, appropriate jewelery. Spend a day at the spa. I'd really like you to come.\"\n\nIt's kind of funny seeing such a big, self possessed woman cry and say she couldn't. But she kept a death grip on the card.\n\nThe show was in the capitol, a sort of salute to state artists. The museum director was there, hustling us to donate a painting. Champagne flowed, while the guests mingled and admired the art.\n\nM stayed close to me, a little intimidated. I know every male in the place stopped and stared when we made an entrance. White dress setting off her dark skin, the neckline low enough to give a glimpse of her impressive breasts, the back plunging almost to that magnificent bubble butt.\n\nShe had on stockings. Had to be thigh highs, I'd have bet my company she didn't have on panties, judging by the way the dress stretched tightly across her butt. Silver bracelets on each arm, with a matching necklace and dangling earrings. She had decided to forgo a wig, and her bald head glowed in the muted lighting.\n\nI saw Leslie frown when she saw us. When Jay cornered her about being a model for his comic book heroine's sidekick, she was on me.\n\n\"Replacement for Bree?\"\n\nIt caught me by surprise. It had been five months, but I still hadn't thought about another woman.\n\n\"No, she works for me at the flea market. She's an art major, and we've become friends. I thought she might enjoy this, she has limited income and doesn't get opportunities like this.\"\n\nShe relaxed, taking my arm.\n\n\"Good. It's too soon, you're still in mourning. Introduce me.\"\n\nSo I took her over and introduced her to M. I didn't think much about it, I saw them together later, laughing.\n\nJay and Don came up.\n\n\"Damn, I thought there was gonna be a catfight there for a minute.\"\n\n\"What?\"\n\nDon laughed.\n\n\"You don't have a clue, do you? Leslie wants you, so does that ebony goddess. Be careful, man, don't mix business and pleasure.\"\n\n\"Again, what?\"\n\nJ jumped in.\n\n\"Come on, man. You're young, well off, and about to be single. Plus you've got the artist thing going for you, and you're decent looking. Hell, if I was gay, I'd do you.\"\n\nThey were snickering, looking at my face. Ron jumped in. I never knew he was gay.\n\n\"He's right. If you weren't my client, I'd be all over you. I bet I could make a switch hitter out of you in no time.\"\n\nLes and M came up, snuggled to each side of me, noting my glowing face.\n\n\"What's going on?\"\n\n\"Nothing much, just trying to get Chris to change teams.\"\n\nThey caught on immediately, said \"NO!\" in unison, and burst into giggles.\n\n\"Hey, I'm not just a piece of meat, you know.\"\n\nM swatted my butt, then Les. Not to be out done, Ron did the same.\n\n\"Keep saying that, honey. You might just start believing it.\"\n\nLeslie reached up and kissed my cheek. M leaned down and kissed the other. I looked at Ron.\n\n\"Well?\"\n\nHe grabbed my head and kissed me right in the mouth. Tried to slide his tongue in. By now my whole group was around me, and they died laughing. I'm sure we were the hit of the show.\n\nWe had reserved several suites at a local hotel. Piling into limos, most of us a bit wobbly, we retired to our rooms. M and Leslie stayed with me, I had more than enough space.\n\nI passed out gracefully, and they put me to bed.\n\nI woke up about four in the morning, my bladder about to burst. I staggered into my bathroom, and heard some interesting noises. I peeked out of the bedroom, noticing a trail of clothes leading to the other bedroom. The door was open and I could hear squeals and moans. I smiled as I closed my door.\n\nI had always thought Leslie was gay until Texas. Guess she was a switch hitter after all. Surprised me about M, but you never knew.\n\nBreakfast was interesting the next morning. I was up way earlier, got cleaned up, ordered brunch, and when it was almost due to arrive I knocked on their door.\n\n\"Wakey, wakey, lovebirds! Time to rejoin the living. Brunch in ten.\"\n\nI heard them moving around, whispering. They staggered out just after breakfast was delivered, in hotel robes. All their clothes were in the living area. They wouldn't look me in the eye, mumbling thanks as I served them coffee and juice.\n\nI was in a very good mood.\n\n\"So, girls, sleep well? I did, in my big lonely bed.\"\n\nLes finally showed a spark.\n\n\"Too bad. We'd have shared it if you asked, it's just lucky we had each other for comfort and consolation. You should have called Ron. I'm sure he'd have cured your lonliness.\"\n\nI smacked my head in mock surprise.\n\n\"Now you tell me. I feel such a fool.\"\n\nIt broke us down into laughter.\n\nI got serious.\n\n\"I'm glad you two hooked up. Is it going anywhere?\"\n\nLes took M by the hand. \n\n\"We'll see. Maybe we'll use each other until you get your head on straight. Take you vitamins. When you're ready, we're first in line, and we mean both of us, understand?\"\n\nM was nodding her head in agreement.\n\n\"First. I promise.\"\n\nThey kissed me. They hadn't showered yet. I leaned back and licked my lips. They went red when I said, \"Mmmm. I prefer the taste fresher, and from the source, of course, but still, really tasty.\"\n\nThey threw pillows out me, shrugged out of their robes, and went into the bathroom, holding hands. Les called over her shoulder, saying they would be happy to have their backs washed. I politely declined. M stuck her tongue out and slapped Leslie on the ass. \"Your loss,\" she said as they closed the door.\n\nLeslie was five feet tall and Asian. M was six four and black. The contrast was quite erotic.\n\n................................................\n\nI thought about it for two weeks. If I wanted to sleep with somebody, why should it matter? I wasn't going back to Bree, she had slept with untold numbers of people while we were still married. Who knows how many she'd fucked since we split. I owed her nothing. It had been six months since the last time I had made love, with Bree, and it wasn't all that memorable.\n\nI walked into Leslie's office and closed the door.\n\n\"Let me tell you about the latest idea I have for a shirt. Another in the Eros line.\"\n\nHe face morphed from surprise to joy. She called M, put her on conference, and told her the idea. She almost blew our eardrums out with her whoop of agreement.\n\nI set it up in my studio, I had five cameras at different heights and angles around the set, ready to go.\n\n\"Are you sure about this?\"\n\nThey both nodded eagerly.\n\n\"All right then. Before we start, I want you to know, this is not meaningless. I care for both of you, and I hope the emotion shows on film. That being said, be gentle, this will be the first time in six months for me.\"\n\nThree hours later I was totally exhausted. I made love to them individually first at my request, then they made love, and finally I was between them. I don't know how many orgasms they had, but It was a record for me, four. I was actually sore and my balls ached a little.\n\nWe showered together and watched the tapes. They got so horny they had another go while I edited. Then they dragged me back, alternated mouths until I rose to the occasion, and then rode me to a few more orgasms before I erupted. Air, I think. There was nothing else left. \n\nAfter they left, I lay back down on the huge bed I had set up, enjoying the smell as I took a long nap.\n\n..............................................\n\nI bounced into the last counseling session with a smile on my face. It was almost over.\n\nIt had been an interesting series. Bree continued to tell me how much she loved me, while more and more details about her lovers emerged.\n\nIt got really deep when I asked her about our early years.\n\n\"You slipped into cheating on me so easily, Bree. It makes me wonder, you were modeling while we courted, and modeled for a year afterwards before you quit. Were you sleeping with other people then?\"\n\nShe looked down. That told me all I needed to know.\n\n\"Just every once in a while. Again, it didn't mean anything, just a way to take the edge off.\"\n\nThat was it, the grand finale. I stood.\n\n\"I'm done. You cheated on me before we married, You cheated on me after we married, I'm wondering about the years between, when you didn't model. Were you faithful then?\"\n\n\"Absolutely. It wasn't cheating, Chris. Please understand. It was just something we did. It didn't mean anything. Nobody got hurt.\"\n\n\"Gee, Bree, walk me through this. Brandon lost his wife, Shannon lost her boyfriend, Michelle lost her husband. I lost you. I have no idea what Mr. Big Dick and his agency went through. Do you really think it doesn't matter?\"\n\nBefore she could answer I carried on. \n\n\"It's a moot point. I still love you, but I don't trust you, and really don't respect you. You risked both our lives for something that didn't mean anything to you. Well guess what? It meant something to me. We're done Bree. Sleep with who you want, when you want. You won't have to worry about me, not that you ever did. Move on, girl. I have.\"\n\nI handed some shirts to the counselors and Bree.\n\n\"Here. A goodbye gift. Please don't use me for a reference. I think you're pathetic. I love you Bree, just not enough.\"\n\nI walked out, hearing Bree scream.\n\n................................................\n\nThe shirts? One of me with M, one with Leslie. One of them together. One of us all entwined.\n\nWhite on black. White on yellow. Black on yellow. All of us together. They were very erotic.\n\nMe on top of M, my hands cupping those amazing breasts. Me entwined with Leslie, her long hair cascading over my chest as she rode me. M with her head tossed back in passion as Leslie sucked on her nipple while they were on their knees, her supple bottom enhanced with M's black hand gripping it. I almost got an erection when I saw the finished product, remembering how the images came to be.\n\nYou could see my face. You could see M's face. But all you saw of Leslie was her body and long black hair. I did it deliberately, even though she said she didn't mind.\n\n\"There might come a time when you move on, Les. I hope it doesn't, but I don't want this to bite you on the ass if it happens. All right?\" \n\nShe saw the wisdom, and agreed.\n\n.................................................\n\nBree called two days after the last session.\n\n\"How could you? We'll never get back together if you're fucking those sluts.\"\n\n\"Bree, we're never getting back together. At least I waited until after we were done, and there was no chance I'd ever give you a gift that keeps on giving. Start over, Bree. You're still young, beautiful, you have a job that gives you a good living. And if you find someone, respect him enough to tell him what you expect out of a relationship.\"\n\nShe was crying, I could hear it, but her voice was clear.\n\n\"I fucked up. I get it, I really do. And I know I have to let you go. But, Chris, I want you to know, we'll never be over. We'll always love each other. Somewhere down the line, when you're over the hurt, I'll get you back. And I'll be the best wife in the universe, I promise.\"\n\nI felt bad for her. For the first time I think she might have realized what she threw away. I gave her a little comfort. And I told the truth.\n\n\"I'll always love you, Bree. Who knows, stranger things have happened. But right now, you need to give me space. Let's rebuild our lives, I think we're both stronger people than we were before. I have to go now, Bree.\"\n\nShe was still crying when I hung up.\n\n.................................................\n\nIt was what I wanted. No, that's wrong. What I wanted was a loyal and faithful Bree. This was what I had to have. My friends decided they needed to do something to get me out of my depression.\n\nLeslie walked into my office and threw something on my desk. M was with her.\n\n\"What's this?\"\n\n\"Your unscheduled holiday. We leave Wednesday and don't come back until Tuesday. All our friends are coming along. Prepare to be pampered, coddled, spoiled, you pick a word, it's all about you. Oh, and we intend to try our best to fuck you senseless in the process.\"",
        "The resort, Costa Rican branch. I got a suite free, courtesy of the owners, five times a year at any location, a thank you for the job we had done. J and Amy, Ron and his new boyfriend, Jay Gold and his lover, even Sherry.\n\nIt was just what I needed. We drank, lay in the sun during the day, hit the clubs at night.\n\nAnd afterwards, we loved.\n\nAs big as I was, six feet and one eighty, M used her large frame and two hundred sixty pounds to toss me around like a toy. I loved her taste, dark, musky, but sweet. Most of her old lovers never ate her pussy, because when she wrapped her meaty thighs around your head you needed a snorkel to breathe. I loved oral, especially giving, felt there was nothing more intimate, and she really appreciated it. We worked out a signal, I'd tug her nipple if I couldn't breathe, and she relax her legs.\n\nLeslie tasted like apple blossoms smell. I thought it was a douche she used, but she said it was her body wash. There is no higher praise than to hear a bisexual woman tell you how good you are at eating pussy.\n\nI slept with both of them, like I had a choice. They kept introducing me as their man, and touched me constantly. I had a guy come up to me on Sunday as I was getting a round of drinks.\n\n\"What's your secret? Those are two of the hottest babes I've ever seen, and they almost never let you go. You got pretty nice equipment[there is no lying in a nude resort]but not like some of these guys do. Is your tongue a foot long or something?\"\n\n\"Love and respect them, man, and they'll jump through hoops for you. And they chose me, so I have no idea what else to tell you.\"\n\nBy then we were all pretty partied out. We were leaving the next afternoon, and the girls told me they had a surprise for me. They banished me from our suite until ten. When I came back, they had candles lit, soft music playing, champagne chilling. M gave me a slow, soulful kiss, fondling me. Then she backed off and Les did the same.\n\n\"Love us babe?\" asked Leslie.\n\n\"You know I do.\" I said, and meant it. We all knew it wasn't the forever kind of love, but a love built on respect and admiration.\n\n\"Good. Then we want you to do us a favor and accept a gift, given freely. Will you?\"\n\n\"Anything for you, girls.\"\n\nThey giggled, walked me to the bedroom door.\n\n\"We're not sleeping with you tonight. We'll be in the other bedroom. Have a good night.\"\n\nBefore I had a chance to respond they had shoved me through the door and closed it. In the center of the bed, surrounded by candles, was Sherry.\n\nShe reached for me, and I sat on the bed.\n\n\"I've always liked you Chris, and seeing all these naked people has gotten me so excited I can't see straight. I tried to hook up last night, but the STD episode has gotten me very nervous, even with protection. I was whining about it to the girls, and they offered me you. When I finally understood they were on the up and up, I couldn't wait. Will you, Chris? Will you make love to me?\"\n\nShe had an almost pleading look in her eyes. She was forty seven, and in the sun you could see the wrinkles around her eyes and the sag in her breasts. Even so, she was in pretty good shape for her age, and attractive.\n\nI pulled her face into mine, kissing with gentleness, then passion. Lay her down, forbidding her to move as I kissed every square inch of her body from toes to hair. She squeaked when I ran my tongue up her slit and across her ass, and arched her back as I teased her nipples. Kissed back down, and worked her through three orgasms before I came back up, flipped her on top so she could control the pace, and stroked her body as she moved against me. When I felt her getting close I flipped her back over, sliding into her as I looked into her eyes. When she came again I couldn't hold back and joined her.\n\nWe lay entwined as she drifted off to sleep. She woke up two hours later and insisted on a repeat performance. I got up on her knees and pounded her harder, while she tossed her hair and screamed.\n\nShe woke me up the next morning with her mouth. When I was ready to go she slipped back on all fours.\n\n\"I love this position. When you get close, tell me.\"\n\nI did, fifteen minutes later, and she whirled around, took me back into her mouth, and finished me. She couldn't swallow it all, some ran down her chin ans landed n her breasts. As she lay gasping, the door flew open and three hundred eighty pounds of naked women piled on the bed, hugging us.\n\n\"Was he as good as we said?\" asked Leslie.\n\n\"Better,\" she sighed.\n\nM noticed her face and and gently started cleaning it. With her tongue. Leslie decided to help. I got up and took a shower. Ten minutes later I heard Sherry keening as she orgasmed again. They tried to get into the shower, but it was just too small. I shaved and watched in the mirror as they gently bathed Sherry. She slept most of the flight back.\n\nShe stirred, asked Leslie to change seats so she could talk to me.\n\n\"Thank you, Chris, You really are as good as they said. I know we'll never repeat it, but every time I look at you I'll smile and remember.\"\n\nI in turned thanked her, and asked how someone as loving as she was wasn't attached.\n\n\"Married to my job. You have an idea how exhausting it is to wrangle models. I was married once, he was my partner in the agency. When we split, in lieu of alimony I got the business.\"\n\n\"If you don't mind telling me, what happened.\"\n\nShe took my hand.\n\n\"You above anyone else should be familiar with the story. Models running everywhere, barely clothed. It didn't take him three years until he was banging away with whoever was willing. And there were a few willing to bang the boss, hoping for better assignments. Some did it because they just wanted to. I couldn't handle it, and the third time I caught him we split. I had the same temptations, offers from male and female, but never gave in.\"\n\nI nodded with my eyes closed, reliving the pain. She squeezed my hand.\n\n\"That's one of the reasons I was trying to stop Bree. Sorry I couldn't get the message through. It wasn't until it was too late that she realized how special what she had was. You know she moved to Atlanta, signed with an agency there. I wish her the best, but she was a real mess when she left.\"\n\nI knew. She had called to tell me goodbye, and then later to give me her new number. I hadn't called, probably wasn't going too. \n\nShe put the house up for sale, and her lawyer asked if we could keep it in both our names until it sold, to ease the paper work. I didn't care.\n\n................................................\n\nThe resort trip was just what I needed. I came back focused, feeling better for the first time in months. I wasn't over her, but the pain was fading.\n\nI altered the face on the comic book character, and we added the sidekick. I made her look just like M. A few months later, Jay had a search to find Brunhilde launched. Every agency on the east coast sent in head shots, as well as a bunch of amateurs who read about it in the magazine. You'd be surprised how many were nudes. Bree was one of the professionals. Jay showed it to me.\n\nI told him to use her if he wanted, but he chose an amateur. She had to have lessons, and we sent her and M to Sherry. She not only taught them, she signed them both.\n\nM graduated, decided it was time to drop the consonant, and insisted on just plain Mary. She was actually quite busy as a model. Her ability to put on a wig and morph into any character served her well. She bitched some about wasting her degree, but the money was so good she kept doing it. I let her use my studio in between jobs, and she worked part time for us.\n\nWe were still sleeping together, but she had moved in with Leslie, and I had the feeling my expiration date was close. Les and I still loved each other, just not as soul mates.\n\nI went with Jay to a comic/fantasy convention. He and I were to sit on a panel for independent writers and artists, to explain our success. I almost fell off the stage when I saw Mary and Julie, the girl we had hired to be Brunhilde strut across the floor and join us after the panel was over. They posed for pictures with fans while Jay and I signed comic books. It was an interesting experience.\n\nMary bitched later about how skimpy the costume was. I laughed.\n\n\"Have you not ever noticed the costume in the book? A g string and nipple patches. If anything, you're over dressed.\"\n\nThere was a convention somewhere every two or three months, and they were one of the most popular attractions. Their fees skyrocketed as a result.\n\nOne unexpected bonus was when the promoters found out what my day job was. We had printed some Brunhilde shirts, and they invited me to show some of my shirts besides those. I picked out the most popular, rented a booth, hired three locals, and made a killing. We didn't sell the Eros line, but had a catalog, and it made a nice resurgence.\n\nObscure Comics were starting to get a bigger piece of the market, and Les negotiated a licensing agreement to do their other comics. She had already passed the five million mark, and her projections were to hit ten in the next four years. She was now making the same as she did before the crash, and it could only go up. She gave her old Mustang to Mary, and got one so powerful I only rode in it once.\n\nI loaned 'Sad Ogre' permanently to the state museum, with the understanding I could sell prints. I also gave them my Pollack imitation, titled 'Cheating Wife'. I couldn't stand to look at it and didn't consider it real art. The museum sold prints in the gift shop, and both sold well. I let them keep all the monies from it.\n\n.................................................\n\nI saw Bree on a pretty regular basis, just not in person. She was in the Sunday paper inserts, on bill boards, and occasionally on television. She was just as beautiful as ever. She had probably gained ten pounds, and it looked good on her. She could still make any bathing suit or lingerie looked damned good.\n\nSeventeen months after our divorce, the house finally sold. She got almost the full asking price. Since my name was still on the deed, I had to sign the closing papers. I asked fr a time I could come in alone, and they set it up. I signed, feeling the last link being broken. I was halfway to the truck when I heard her voice.\n\n\"Chris, can we talk a minute?\"\n\nI turned. She had on a business suit, hair pinned back in a bun. Still the sexiest thing on two legs, in my heart.\n\n\"Hello Bree. Still as beautiful as ever.\"\n\nShe nervously touched her hair.\n\n\"Thank you for saying that, even with the weight I've gained. I'm finally modeling for the saggy boob and butt market.\"\n\n\"Don't lie, the extra pounds look great on you. And I see you all the time on tv and in print. I haven't seen any sag yet. What do you need to talk about?\"\n\nThere was a coffee shop beside the law office. She walked towards it.\n\n\"Let me buy you a cup of coffee, and I'll tell you.\"\n\nI still hadn't moved. \n\nShe stopped, held up her hands in a pleading gesture.\n\n\"Please, Chris. There were some things left in the house. We haven't spoken in over a year and a half. Five minutes, I promise.\"\n\nI walked towards her. She almost tried to take my hand, and caught herself. I didn't ask, got her the oversized flavored latte she always favored, and a plain cup of coffee.\n\nI put it on the table and sat across from her.\n\n\"I heard about your comic book convention appearance. One of my friends worked it. She said you were quite popular. I bet business really picked up afterwards.\"\n\n\"Bree, this isn't a date. We're not here to play catch up. What do you need to say?\"\n\nThe first tear appeared. She brushed it back angrily.\n\n\"I promised myself I wouldn't cry. There was a lot of stuff left in the house, about all you took were your clothes. I put it all in storage. I'll give you the key before I leave. I already took what I wanted. If you don't want any of it, donate it. That's it. But I haven't gotten to talk to you in a long time. I miss that more than anything else. If you could just spare me a few minutes, for all the love we had before I screwed it up, if nothing else, I'd appreciate it. We can stop when you like.\"\n\nI sighed, looking into her hope filled eyes.\n\n\"Still living in Atlanta?\"\n\nShe smiled, her full lips parting slightly.\n\n\"Yes. I have a nice one bedroom condo. I don't need anything larger, I don't usually stay there long. I've done a few shoots in the Chicago area, got an offer from an agency there, but the shoot was in winter and I declined pretty fast.\"\n\n\"You never were much for cold weather.\"\n\nShe gave me that giggle that I used to love.\n\n\"Hard to be a nudist in the cold. Do you still do it? The resorts, I mean?\"\n\n\"Old habits are hard to break. Yeah, I still go. Not as often as when we were together. As a matter of fact, I'm going in two weeks, they want to update the Beach Bunny campaign. I don't know what they want, I think we've rode that train until it's out of steam, but they pay well. And I get to stay there free for meeting them.\"\n\n\"I miss those times,\" she said, quietly.\n\n\"I do too. But Bree the past is the past. Got a new man in your life?\"\n\nI'd have rather breathed fire than ask that question, but I couldn't stop myself. She actually smiled.\n\n\"No, and before you ask, I don't have a new woman either. It's funny, since I got that STD and we broke up, I haven't had the desire to be with anyone. Funny, huh? The woman who cheated on her husband with multiple partners without a libido.\"\n\nThe last came out a little bitter.\n\n\"Bree, I...\"\n\nShe stopped me.\n\n\"Stop, Chris. I know. And I'm not a nun. I've gone out with a few guys, no models, but the spark isn't there, and as soon as they know there's no future and no sex, they drift away. How about you? Got a harem yet?\"\n\nShe tried to say it lightly and failed miserably, watching my face intently. I started to yank her chain but couldn't do it.\n\n\"I'm not even looking. I haven't been celibate, but there's only been three women since you. I care for them all, but there's no forever in any of them.\"\n\nShe actually smiled.\n\n\"I know one. Sherry. She was in Atlanta for a few days and I ran into her. She tried to keep it in, but after a few drinks she bitched me out for my behavior again, she told me I was the biggest fool on three continents to let a man who could eat pussy like that get away, not even considering your other attributes.\"\n\n\"I asked her how she knew, and she had the decency to blush. I got it out of her. You, your black Amazon and China doll, really rocked her world. Still sleeping with those bi...I mean, are you still friendly with them?\"\n\n\"I recently stopped, after they got engaged.\"\n\nI paused, grinning.\n\n\"Although, they are looking for a sperm donor. Leslie is about to run out of time, and Mary wants two.\"\n\nI was serious about that. Three weeks ago we had a marathon session, and as we were recovering they told me it was the last time, showing me their matching engagement rings.\n\n\"We wanna start out right,\" said Les, stroking my cheek, \"so no one else, and if we decide we want a toy down the line, you'll be the first one we call. And we're serious about this, we want kids, and we think you'd be a fine sperm donor. I know what you're thinking, and if we do this we expect you to have a big presence in our childrens' lives. Think about it. Now, since this is the last time, let's go out in style.\"\n\nThey both wanted it anally, something we'd never done before in our playing. Les had done it before, but Mary was a virgin. She almost didn't go through with it.\n\n\"Damn, why couldn't you have a white mans' dick? That thing feels like you're shoving a wine bottle up my ass.\"\n\nI really wasn't that big, but it probably felt like it to her. Once I got all the way in, she got into it. So much so, I could hear them talking about butt plugs as they showered. I still smiled, thinking about it.\n\nBree looked despondent.\n\n\"I can empathize. My own clock is starting to tick louder. That's the thing I hate most of all about what I did. We'd have had beautiful babies together. And you would have been a super dad.\"\n\nI chose not to comment. She looked at her watch.\n\n\"I have to go now, or I'll miss my flight. Thank you Chris. For forgiving me, just a little, and letting me talk. Have a nice life, I don't know when we'll see each other again. I hope you find someone worthy of you. Don't forget to look at the storage locker. I know I'm pushing it, but could I have a little kiss?\"\n\nI've never heard someone sound so lost and alone. I pulled her to me, intent on kissing her cheek and giving her a nice hug, but she wriggled that lithe body around, gripped me tightly, and gave me a very nice full lip kiss. I don't know how long she held it, but she was crying when she let me go. I had my own tears. I watched as her cab faded into the distance.\n\n................................................\n\nI went to the resort by myself. Leslie had a big licensing deal cooking. We were up to two hundred seventy employees in two locations, the largest operation of the kind outside of Asia. This deal would make us even bigger.\n\nMary was zipping around, trying to organize the wedding. They wanted it to be in less than three months.\n\n\"Why? Knocked up?\"\n\nShe threw a chair at me. Don't mess with a huge woman in the midst of planning her wedding.\n\nAmy was like nine and a half months pregnant, a boy this time, so she or J couldn't go.\n\nSherry had landed a major department store account and was immersed in pleasing them. Jay ended up engaged to his Brunhilde, and they were breaking the news to her parents that weekend. In Wisconsin.\n\nSo I went alone. It suited me. I'd had dreams of Bree ever since our conversation, couldn't get her out of my head. Getting away looked good to me.\n\nI had a few ideas, talked to Sherry, had her think about it, but couldn't find a hook. I had little expectation of success. \n\n.................................................\n\nThe plane ride was boring. The cab ride was boring. It was the off season, so there wasn't really a lot of people around. Most were just people taking a break from their lives, looking for a little happiness.\n\nNudists aren't all svelte models, most of them are just everyday, average people, skinny, overweight, young, middle aged, old, wrinkled. They had moles, bad hair days, etc. All they have in common is the ability to be comfortable in their own skins. How many people can say that?\n\nI went down on Friday, to relax and think. My first meeting was Monday, and I was hoping I could think of something by then.\n\nI had a few drinks in me, mellowing out, talking to a middle aged couple from Michigan, down for some sun. Their biggest concern was putting on a nice wedding for their daughter, who announced their engagement just before they left.\n\n\"I'd like to do something really nice,\" said the woman, \"something they will remember for the rest of their lives.\"\n\nIt hit me like a ton of bricks.\n\n\"Alice, does your future son in law believe in nudity?\"\n\nShe sighed.\n\n\"He keeps saying he'll come with us, but he hasn't so far.\"\n\n\"Can he get away for the next few days, and your daughter? I'd pay the flight, get you an upgrade to a suite if they will. Heck, for what you just did for me, you can have a suite whether they come or not. But if they do come and my idea comes through, they'll get their wedding paid for by this resort. Interested?\"\n\nAfter calling the manager down to verify I wasn't some whack job, they made the arrangements. I called the team I was to meet, asking for a Saturday afternoon sit down, something that couldn't wait until Monday. Three of the five were already there, so they agreed to give me an hour tonight, if it was that important.\n\nWe met in a small conference room. I wasn't able to offer them anything but the idea, but they loved it. I left the meeting feeling better than I had for a long time. And I got them to do Alice's daughters' wedding free, as a thank you for the idea."
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/terrible-taste-in-tees"
}