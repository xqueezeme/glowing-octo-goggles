{
    "title": "Family Issues Ch. 09",
    "pages": [
        "Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\nAs always, I need to thank, Stylus and Madison (ThanatopicFolds) my cool editors. This time they've made an extra effort and that's why I can post this episode so quickly.\n\n$$$$$$$$$$$$\n\n\"Margarita was never short of money. She could buy whatever she liked. Her husband had plenty of interesting friends. Margarita never had to cook. Margarita knew nothing of the horrors of living in a shared flat. In short... was she happy? Not for a moment.\" \n\n\u2015 Mikhail Bulgakov, The Master and Margarita\n\n-----\n\nKevin's diving computer beeped the end of the safety stop. Helen signaled that she wished to stay for a bit and follow the three massive sea turtles that were cruising the clear water below them. Kevin slapped two fingers against his palm, asking for her air level and she answered sixty bar, rounding up. \n\nHe checked for himself, saw her bluff, and motioned for her to go up. It was frustrating because she still consumed twice as much air as he did, meaning that they limited their time underwater to her abilities. Kevin promised her that her air consumption would improve with practice, but it was happening too slowly for her. Once she dived into the blue, she was reluctant to go up. It was a weightless, noise-free world. No phones, no TV, no disturbances\u2014just her and Kevin. \n\nThe diving instructor smiled from the deck of the Southern Jazz and tossed his head like a pendulum when they surfaced. Shawn's white smile made Helen think of sunshine. He was always smiling. \"Wewillandondabeachbefore we go backtobuvaloo,\" he said.\n\n\"Shawn, I know you speak English, but I didn't understand a word of what you just said.\" Kevin helped Helen take off her fins.\n\n\"We will land on the beach before we go back to Beau Vallon.\" The young Seychellois instructor slowed down his speech. \"Good dive?\" \n\n\"Pffft.\" Kevin shook his head. \"Good?\" Joy enveloped him like a halo, and it came out with a throaty laugh. He climbed on the Southern Jazz's ladder and pulled Helen out of the water onto the divers' ledge, her entire six-foot-plus frame, soaked wetsuit, air tanks and all. \n\n\"Oh, Kev, you're so strong, so manly.\" She smiled. \"Ooh la la.\"\n\nKevin might have bothered with a retort to her tease had he not been high on the dive. \"Oh my God, oh my God, oh my God,\" he jabbered, unable to contain his euphoria. \"Did you see the blacktip sharks, Helen? And that octopus? Massive, I've never seen anything like it in my entire life! Freaking monster! And that ray, Jesus! I went down, and you were like, 'whaaat?' Then you went like the road runner. 'Meep, meep, zoom!' And I was like...insane. When you went head to head with that turtle, I thought you were trying to French it.\" \n\nHelen laughed; Kevin's enthusiasm ignited hers. \n\n\"Diana,\" he shouted. \"You wouldn't believe, oh my God, we saw a stingray the size of a football field.\"\n\n\"More like\u2014\" Helen opened her arms as wide as she could. \n\n\"The King Kong of stingrays, and I went to say hi, and Helen panicked and grabbed my fin, like the chickenshit she is, and\u2014\"\n\n\"I've read the sting can be fatal if it hits the right spot,\" Helen said. \n\n\"You know what?\" Kevin's smile was pure bliss. \"If God decides to kill me right now, then I'm absolutely cool with that. I think I've reached the summit today; it can only go downhill from here. Thank you, thank you, thank you, thank you, for taking me to this amazing place.\" He circled his hands around Helen's wet body and hugged her tight, then kissed her cheek. \"Thank you.\"\n\nHelen was thankful that her new tan hid her blush. Lost for words for a moment, she tried what she hoped was nonchalance. \n\n\"Awesome,\" Diana said with the enthusiasm of a boyfriend dragged to a mall on a shopping trip. She was slouched on a bench in the bow, whose sun-faded green paint matched her cheeks' hue. The up and down sway of the boat didn't agree with her breakfast, and Kevin and Helen's enthusiastic diving bond didn't help much either. \n\nKevin tried to diminish his smile, to show a little empathy. \"You okay?\" \n\n\"Do I look like I'm fucking okay? My head is killing me.\"\n\n\"Did you drink enough water?\"\n\n\"It didn't help.\"\n\n\"Well, that concludes my training as a doctor. Good luck.\"\n\n\"Sometimes I wonder why I even keep you around, Kev. You don't know the first thing about being a boyfriend.\" \n\n\"Wanna break up?\" Kevin brightened. \n\n\"Babe, you'll never have someone like me.\"\n\n\"Yeah, that's the point, actually.\"\n\n\"You're super mean today, and I hate you.\"\n\nKevin sighed. He couldn't help being sympathetic. He unzipped quickly out of his wetsuit, sat down, spread a towel, and cradled her head on his knees. He then gently started massaging her temples. Diana purred and snuggled into him. \n\nThere were several Chinese and French tourists with them on the diving safari, but Kevin and Shawn clicked after ten minutes together. \"Look to starboard, Kev, there's the lagoon and the beach,\" Shawn tapped Kevin's shoulder. \"No matter how many times I come here, it is always beautiful.\" \n\nAs the Southern Jazz cleared the shoulder of Mahe Island, they approached a secluded shore. Black granite giants guarded the grove of palm trees and gleaming white sand. A small stream snaked and looped between the smooth cliffs and gathered into a pond at the point where the beach met the bright blue and turquoise Indian Ocean. \n\n\"At the risk of sounding like Paris Hilton, oh my God.\" \n\n\"We're at the north point of Mahe. The only way to get on this beach is by a boat. That's why we're alone here.\" \n\n\"I didn't know places like this existed. Diana, you gotta see this.\" \n\nShe reached out behind her, looped her hands around his neck and drew his lips to hers. Her tongue jumped and played around in his mouth. She wrestled his tongue back and forth. Kevin tried to pull himself up, but she locked him in position. When the kiss ended, she kept nuzzling him. \n\n\"Had a miraculous recovery?\"\n\nShe pulled him for another kiss. Not that she was ever shy, but recently she had become more physical in public, especially around Helen. \n\nShawn navigated the Southern Jazz to the shallowest point before throwing the galvanized steel fluke anchor. Kevin jumped to help the crew unload. He carried boxes and equipment to shore on his slim back and helped the other divers get off the boat. Helen watched from the deck, a little envious as Kevin struggled with Diana in his arms. Her little sister didn't relish the thought of getting wet. \n\nHelen wore a one-piece Jack Cuba bathing suit under the wetsuit. It was futanari-designed with a special patented compartment that could hide any unpleasant bulges. It gave the viewer the illusion of straight lines, even if its wearer was the best-endowed futanari girl. Diana, on the other hand, wore a regular red bikini. It sat perfectly on her heroin chic slimness except in the crotch, where there was no mistaking the fact that Diana was packing a heavy weapon. It was a bathing suit that said, 'This is me, this is the body I was born with; anyone having a problem with that can suck my big fat dick.' Helen often wondered if she'd ever feel as comfortable inside her own skin. \n\nTwo broken logs served as a makeshift table for the small group to gather around. A rainbow-colored hammock was swaying in the soft wind between nearby Borneo Tick trees, and Diana conquered it as soon as she stepped on the sand. She gave a shout of glee when she discovered that she finally had service on her iPhone. \n\n\"Diana, fun fact,\" Kevin said. \"If you put your ear against an iPhone you can actually hear the sound of your life wasting away.\"\n\n\"I'm talking with Ethan; he's at the club.\"\n\nKevin twisted his mouth when he heard the name Ethan. \"What time is it there anyway?\"\n\n\"One a.m. The club is jumping.\"\n\n\"You're on vacation. You're in paradise, or at least as close as it gets.\"\n\n\"Just a sec, Ethan, Kevin here's kinda burning my nuts.\" She lifted her head. \"I get it, palm trees, sand, ocean, river, big effing rocks. Very nice.\" She went back to her call.\n\n\"I'm so sane about you right now,\" he said. \n\n\"What does that mean?\"\n\n\"That I'm not too crazy about you right now.\" \n\n\"Baby.\" Diana mimed a blow job, her tongue stabbing her cheek and her hand moving aggressively up and down. \n\n\"That's my girlfriend, always the lady. I'm going to sit over there and dig a hole because I feel like burying myself.\" \n\n\"You can sit right here, baby.\" Diana grabbed her crotch and wiggled it. \n\nThe French divers were looking their way, not even trying to hide their fascination. One of them sniggered. Kevin folded what little was left of his dignity, and with his face burning, he trudged to the area where the rest of the diving crew were making lunch. \n\nHelen, who was enjoying the sunbeams on the beach, jumped to her feet when she noticed Kevin chopping vegetables. She loved watching him cook. He was in a zone when he held utensils, relaxed and focused. The knife in his hand was a blur. To an outsider, it looked like random vegetable molesting, but Helen knew that every movement was pre-planned. She joined him, helping to wash and peel, careful not to break his rhythm. \n\nShawn stared with a twinkle at the speed the salad materialized. \"You two have had some experience in the food industry, right?\"\n\n\"I used to work at my mom's restaurant, and Helen eats food. She's very experienced.\"\n\n\"You're saying I'm fat, Kev?\"\n\n\"I wouldn't say fat, Helen. I mean you are fat, but I wouldn't say it. I'm a sensitive guy.\"\n\n\"Wanna die?\" \n\n\"Is that a trick question?\"\n\nDiana could eat like a pig all day and remain slim as a noodle. Helen wasn't so lucky. It was a hard battle against the exquisite delicacies Kevin cooked daily. However, unlike Diana, Helen applied iron discipline to almost everything she did, including work, exercise, and food. Helen pinched her flat stomach and frowning, picked up some skin and imaginary calories between finger and thumb. \"Be honest, Kev. Did I gain extra pounds lately?\" \n\n\"Heck, no! You were always this fat.\" \n\n\"That's it, you're dead.\" \n\nHe dodged her punch and dashed over to the beach, Helen fast on his heels. His legs kicked white sand as he sprinted past the grove, over to the pond. He dove headfirst, half a second before Helen. She launched herself like an offensive tackle and grabbed his ankle. Kevin dolphin leaped out of the water, laughing, and she pushed his head back under, holding him down. He struggled for a few seconds. Then his body relaxed, and Helen panicked. She pulled him out, then remembered that the little faker was a free diver and could hold his breath for almost five minutes. It was too late. Kevin stuck out his tongue and paddled away. There was a palm whose crooked trunk slouched above the pond. Someone hung a rope from it, and Kevin climbed, quick as a monkey, pulling the line after him. \n\n\"You'll eventually have to come down, or we'll leave you here.\"\n\n\"I'm planning on staying on this shore forever, like Robinson Crusoe.\"\n\n\"I'm not fat, I'm slim.\" \n\n\"Anorexic. Eat something.\" Kevin threw her the rope, then frowned when she started climbing. \"I'm not sure the trunk will hold.\" \n\n\"Did you know, Kev, new research discovered that overweight women live longer than men who point it out?\" \n\nHe helped pull her up, and she crouched beside him, her long legs folded beneath her and her skin glistening. It was the end of September, but on the Seychelles Islands, the sun was up and flexing its muscles across the bright blue. After four days under the open sky, both Brion sisters showed their creole roots. Diana's skin was baked into bronze, and Helen changed from Nordic pale to rich honey brown. It was a sharp contrast to her blond locks, and it made people stare. Not that she cared. The only person whose stares she craved had his heart set on her little sister. \n\n\"So, Robinson Crusoe,\" she smiled. \"I think I'll stay with you on the island.\" \n\n\"Who said you're invited?\" \n\n\"Hey!\" She elbowed him. \"Other than Diana, if you had your pick, who would you take with you to a deserted island?\" \n\n\"John Locke, to fight the Others, Gregory House in case I get this rare island disease, and Megan Fox to...to...? Who gives a fuck, she's Megan Fox.\" \n\n\"I was gonna say you, Kev, but now I'm changing it to Peter Dinklage, 'cause well...Peter Dinklage.\" \n\n\"Oh, yeah. Fuck Locke and House. Peter Dinklage all the way.\" \n\n\"Are you happy, Kevin?\" she suddenly asked.\n\nHelen smelled like sunblock cream and heartache. Kevin stared at the curve of her soft lips, wondering what would happen if he just reached out and touched them. He nodded. \n\n\"I'm happy,\" she said. \"You were right. There is more to life than the way I used to live. I mean, look at this place.\" \n\nHe nodded again. \n\n\"I wish this vacation could last longer.\"\n\n\"Things have gotten complicated,\" Kevin's brow furrowed as he stared across the sand at Diana. She was still talking on her phone but she raised her head from time to time, watching them. \"It's nice to stop the race sometimes and just put it aside for a while.\"\n\n\"Things have gotten complicated since you met Diana and me?\"\n\n\"I think things have gotten complicated since Mom popped me out of her belly,\" he said. \"Before that, I was doing great.\" \n\nShe guffawed but nodded because she could relate. \"You were right about the fence. I'm always sitting on the fence, or in the backseat watching other people do things I never dared to. You were right. I was scared. I have this terminal fear of failure; I never try anything. I hate mistakes.\"\n\n\"Mistakes can be good sometimes; at least you learn from them.\"\n\nHelen shook her head. \"Not for me. Mistakes scare me. I hate mistakes.\"\n\n\"I'm a mistake,\" Kevin said.\n\n\"No, you're not.\"\n\nKevin nodded. \"My mother got pregnant when she was seventeen. She had an affair with a married man, no less.\"\n\n\"What?\"\n\n\"Yeah, I'm a mistake, Helen. Luckily for me, she was a devoted Christian. Abortion wasn't an option.\"\n\n\"Wait, wait, what?\" She stared at him wide-eyed. \"Your mother? The one with the 'What would Jesus do?' book and the righteous proverb for every occasion? Had an affair with a married man?\" \n\n\"She was only seventeen. A kid.\" \n\n\"So what did she do?\"\n\n\"She didn't want to give birth to a bastard or to be a single mother, so she married a neighbor. A thirty-five-year-old bachelor who was in love with her.\"\n\n\"What?\" \n\n\"Funny, huh?\"\n\n\"So, your father...I mean your real father...?\"\n\n\"My real father is the person who raised me from birth and was always there for me. The other douche contributed an ejaculation. Any idiot can do that.\"\n\nHelen tried to think fast of anything to say, but everything she came up with sounded condescending, insensitive, or stupid in her head. \n\n\"My whole life is a big, hilarious mistake.\" \n\nIt was the first time he'd let her inside. He knew every embarrassing secret she had because he had read her letters, but there was no equilibrium like he'd once tried to pretend. Kevin played poker in real life. The fact he could reach down and expose such a deep nerve made her wish she could reach out and blow away the dark cloud she recognized in his eyes. She had no clue how to even begin to do that. \n\n\"I would like to withdraw my former statement.\" She leaned and gave him a tiny kiss on his cheek. \"Sometimes mistakes are awesome.\" \n\nFrom her perch on the hammock, Diana stopped talking to Ethan, and her mouth twisted to a snarl. The kiss looked innocent enough, but it fed on her darkest fears. The little green-eyed beast was crawling out from the closet. \n\n---\n\n\"Punch a man on the nose, kick an old man downstairs, shoot somebody or any old thing like that, that's my job. But argue with women in love\u2014no thank you!\" \n\n\u2015 Mikhail Bulgakov, The Master and Margarita\n\n---\n\nHelen sipped the coffee, leaned back on the comfy chair, gazed at the sunset over the sparkling water and read another paragraph of The Master and Margarita. Life stood still, and that stillness tickled her fingertips. She took another sip and then winced. From below, a metallic sound of something heavy being dragged across the guesthouse's yard popped her tranquility bubble. \n\n\"Kevin, what are you doing down there?\" she said.\n\n\"Nothing.\"\n\n\"Still nothing? You said you were doing nothing fifteen minutes ago.\"\n\n\"I'm not done doing it yet.\"\n\n\"Can you try doing nothing more quietly?\"\n\n\"Sorry, had to clean the grill. Toss me the salt from the kitchen, please.\" Kevin stepped back from under the guest room's balcony so she could see him. He carried four beautiful redfish filleted on a tray. \"I bought them from two fishermen here on our beach; they opened a stand right outside the villa. Two euros. Can you believe it? Whoever said Seychelles was expensive didn't know what they were talking about.\"\n\n\"Nice. I'll go set the table.\" \n\n\"I wanna go to that Indian grocery and buy some red wine.\" \n\nShe gave him thumbs-up and went inside, shaking her head and smiling. \"I think Kevin is a hyperactive adult. Sixty minutes of a Games of Thrones episode is the longest I've ever seen him sit on his ass in one place.\" \n\nDiana, who was busy applying eyeliner and checking out her new tan in the mirror, nodded and smiled right back. Helen was so terrible at reading subtext, even her own sister's. She failed to brace for the storm that lurked under that smile. \n\n\"We're moving out,\" Diana said.\n\n\"Yeah, we'll check out in the morning and leave our suitcases with the caretaker. Don't worry.\" Helen smiled. \"There won't be any boats or diving tomorrow. We can't dive before a flight. We'll just hang around the beach, work on our tans, and maybe do some snorkeling. We'll be landing in Ljubljana by eleven.\" \n\n\"No, we're moving out of the penthouse, Kevin and I.\" \n\n\"What?\" \n\n\"Moving out.\" \n\nHelen felt the blood draining from her face. \"What? What? W...why?\" \n\n\"Enough is enough. You've always wanted me to be a grownup. Grownups don't live at their big sister's expense. I'm earning enough money now to rent my own place.\" \n\n\"What? W...why? You and Kevin don't bother me.\" Helen spoke fast. \"If you need more room you can have the study. We can break your wall. I don't need the study.\" \n\n\"I want my own apartment.\" \n\n\"You can have apartment 3C. My tenant there is moving out in two months.\" \n\n\"Kevin's old dog kennel apartment downstairs?\" Diana smirked. \"Really?\"\n\n\"I'll renovate it.\" \n\n\"It's tiny.\" \n\n\"But why pay when you can have your own apartment, rent-free?\" \n\n\"My idea of moving out is not moving a few floors down.\"\n\n\"You're right. It's too small. You're the couple, and I'm the single. I'll move downstairs, and you two can stay in the penthouse.\" \n\nDiana shook her head. \"Ethan is looking for an apartment for Kevin and me north of the river, near the club.\" \n\n\"But, but, that's an hour and a half drive when there's no traffic.\" Helen felt her legs start to shake. She didn't care. \"Kevin doesn't own a car; he rides his old bike. How the hell is he supposed to...?\" \n\n\"Come and visit you?\" Diana smirked. \n\n\"How the hell is he supposed to get to the university? To his diving club?\" \n\n\"He can take the bus.\"\n\n\"That's crazy, Diana. You two don't bother me at all.\" \n\n\"He's not your boyfriend, Helen, he's mine.\" \n\n\"What?\" \n\nDiana turned and resumed applying her eyeliner. Helen found herself shaking uncontrollably, staring at her little sister's back. She took deep breaths for what she felt was forever; still, her voice trembled when she finally spoke. \"Have I ever done anything wrong to you, Diana?\"\n\n\"He's not your boyfriend, Helen.\"\n\n\"Kevin?\"\n\n\"Don't play dumb. You're anything but dumb, and you're shit at pretending.\" \n\n\"Hey, look at me!\"\n\n\"Or maybe you think I'm dumb?\" Diana finally turned. \n",
        "\"Diana, please.\"\n\n\"I'm not an idiot. I've seen you looking at him.\" \n\n\"What?\" \n\n\"Pretending again?\"\n\nHelen shook her head. She felt the first tear going up until it welled in the corner of her right eye.\n\n\"You're in love with my boyfriend. My boyfriend!\" Diana raised her voice. \n\n\"Diana\u2014\"\n\n\"Say I'm wrong! Come on. Lie some more. You're doing great, by the way.\"\n\nHelen bit her lip hard until she felt the skin break and blood gush inside her mouth. She then sat down on the bed, shaking.\n\n\"At least you're done with pretense. That's good. I don't really understand what your plan was.\" \n\n\"Plan?\"\n\n\"You thought that at some point he'd dump me, and then what? Run into your arms?\" \n\n\"Diana, I swear on Mom's grave that I never...Diana, please...\" \n\n\"Kevin loves me.\"\n\n\"I know he does. He came back to you after you...I know he does. And I know what I look like. I know that life is not a Disney movie. The beauty never marries the beast.\" She pointed at her eyepatch and scar. \"I also know that if you take Kevin's friendship away from me, I'll return to be who I was five months ago.\" \n\n\"What's that?\"\n\n\"Lonely.\"\n\nDiana's face softened for a second, but then she shook her head.\n\n\"Please, Diana, don't move out of the penthouse. I'll do anything.\"\n\n\"I can't, Helen. It's something that I should have done years ago.\" \n\n\"Jesus, Helen, you need Ritalin. I asked you to get the salt.\" Kevin chose that moment to appear smiling at the guest room's door. \"It's\u2014\" he suddenly noticed the mood inside the room. \"Whoa, what happened in here? You two had a fight?\" He noticed Helen on the verge of tears and immediately went and sat beside her. \"Hey, Valkyrie, what happened?\" \n\nHelen shook her head. She knew that if she opened her mouth, the dam would break. \n\n\"Diana?\" \n\nDiana faked a smile. She was boiling on the inside. Her loving boyfriend saw her upset and immediately ran over to comfort Helen. \"Let's just go to bed, Kev.\"\n\n\"It's seven o'clock, and I have fish on the grill.\" \n\n\"Forget the stupid fish, I wanna go to bed.\" \n\n\"Nighty night.\" \n\n\"When I said bed, I really meant sex.\"\n\n\"Aha.\"\n\n\"Don't 'aha' me.\" She raised her voice. \"I need to be balls deep in your sweet ass right now!\" \n\n\"Do you want me to get you a mike and speakers? Because I think some people on the beach didn't hear you.\"\n\n\"Fuck 'em. Nothing wrong with wanting to make sweet love to my boyfriend.\" \n\n\"Are you drunk? Is she drunk?\" He turned to Helen. \"All I did was go and buy some fish. What happened in here?\"\n\nDiana started to say something when her phone rang. \n\n\"Not now, Ethan, I'm kind of in the middle of something.\"\n\n\"What?\" she raised her voice.\n\n\"What? \n\n\"What? \n\nWhat do you mean the same account?\"\n\n\"Idiot!\" she suddenly screamed. \"How did...? I'm gonna shoot her, I swear Ethan, I'm gonna shoot her and you. People who are that stupid don't deserve to be alive.\" \n\n\"The fucking who?\n\n\"Jesus? Am I screwed, Ethan, did you just screw me over? That's it. I'm coming back tonight. Fuck it.\"\n\nKevin stared at her. \"What happened?\"\n\n\"Shit happened. I need to fly back home, tonight. I don't believe the idiots.\" She was pale with anger and something else. Fear. It was the first time that Kevin had ever seen his girlfriend afraid, and it shook him to the core. Diana grabbed her suitcase and tossed everything that was at arm's length inside. \n\n\"Diana, you're on vacation half the globe away. Can't the people working for you solve whatever crisis came up?\"\n\n\"I won't have people working for me or a job in a couple of days unless I fly tonight.\" She paced back and forth until she stopped and towered over him. Kevin recognized the wild look on her face and shuddered. She looked like that when she was drunk or high, a moment before the violent outburst. \"No. I gotta fly back. Get your suitcase; you're coming with me, Kev. Helen, if you want the car back, you'll need to drive us to the airport.\"\n\n\"I'm not going with you,\" Kevin said.\n\n\"Like hell!\"\n\n\"First, I dived to one hundred feet, so unless you want to see me decompress nitrogen bubbles and die, I'm staying on the ground for the next twenty-four hours. Second, there is no way I'm leaving Helen alone here.\" \n\nDiana's cheek twitched, and Kevin thought she might explode, no nitrogen needed. She checked her iPhone. \"There is an Emirates flight from Victoria to Washington in less than two hours. Drive me to the airport, Kev.\"\n\nOn the way, he was too afraid of her seething wrath to press her for explanations. When they reached the terminal, she jumped out of the car into the dark without saying a word. \n\n\"Diana, don't go!\" he said.\n\n\"I've got to go.\"\n\n\"Those people you work with. I don't know much about them, but I know they're criminals.\" It was the first time he'd acknowledged that he knew her new job wasn't all she pretended it was. They never spoke about their night in the angels' and devils' mansion. But then, they rarely spoke about anything. \"Stay. Whatever it is, we can figure out a solution. You, me, and Helen.\"\n\n\"I gotta go, baby.\" She ran off into the dark, and a minute later she ran back to the car, opened the door and kissed him deeply. It was a desperate kiss, and it frightened him.\n\nBy the time he returned to the guest house, Helen was already asleep. Her pillow was wet. Her eye was puffy, and there was a dried trail of tears down her cheek. She'd fallen asleep crying. He kissed her gently, then sat down on the couch beside her bed instead of going to his own room. He lay in the dark for a very long time, staring at the ceiling and listening to Helen's soft breathing. By the time he finally fell asleep, the first rays of the rising sun had already crawled onto their balcony. The new day didn't bring relief or a promise of it. \n\n--- \n\n\"Love leaped out in front of us like a murderer in an alley leaping out of nowhere and struck us both at once. As lightning strikes, as a Finnish knife strikes! She, by the way, insisted afterwards that it wasn't so, that we had, of course, loved each other for a long, long time, without knowing each other, never having seen each other...\"\n\n\u2015 Mikhail Bulgakov, The Master and Margarita\n\n----\n\nKevin scanned the horizon from the church's bell tower on Bled's Island. Winter went summer sale shopping in Austria, and it didn't go south of the Alps yet. The sky was clear, and the peaks of the Julian Alps to the north still had only little splotches of white on top. Below him, the lake's water glimmered invitingly. It was scenery worthy enough to lift any spirit. He gazed down at Helen sitting outside the island's restaurant on a small ledge facing the shore. She didn't touch the ice cream he'd bought, and she pulled out the book she was always reading since they'd started their vacation. She said she was too tired to go up the tower stairs, but Kevin suspected it was something else. No spirits were lifting\u2014not his, nor hers. \n\nDepressing silence enveloped them as the tourists' boat took them back to shore. Helen kept her head stuck in the book, and Kevin convinced the oarsman to let him take over the oars, though he watched Helen the entire ride. He had no way of knowing it, but Helen had been reading the same paragraph for the last hour. The words flew like little bees around her brain, bumped against her scattered thoughts, and didn't make any sense.\n\nBy the time they started walking through the souvenir stalls in Bled Lake market on their way back to the parking lot, the silence had become unbearable. \n\n\"Hey, that book you're reading,\" he said. \"I think I remember it.\" \n\nHelen lifted the book. Its title was The Master and Margarita, and the cover displayed a silhouette of a cat. The cover was partially scorched as if someone saved it from a fire.\n\n\"You kept it inside your letterbox?\"\n\nHelen nodded. \"I had it in my pocket when I was injured in Iraq, that's why it looks like that. It took shrapnel for me. I've read it since then, every year. It's excellent.\" \n\n\"My dad's uncle fought in Korea. He used to show us kids a bible that he kept in his left pocket above his heart back in the days. Once an artillery barrage caught him in the open. A bullet hit his knee, and the bible was saved. Hallelujah, praise the lord.\"\n\nA few days ago, his stories could make her laugh, but now she barely nodded. Kevin studied her, feeling the frustration lurch in his stomach. Something happened with Diana on their last day in the Seychelles. He and Helen still talked and laughed together, but something was broken. He tried to press her several times and only managed to push her further inside that lonely place she used as a hideout. Each time he did, he watched in frustration as she raised another line of bricks in her wall. It was up and running again, with guards and machine guns, the wall between them that they took so long to demolish.\n\n\"Andy gave you that book, right?\" \n\nHelen nodded. \n\n\"What was he like?\" \n\n\"Andy?\" \n\n\"Yeah.\" \n\n\"I heard a few thousand people showed up to his funeral.\" \n\n\"What does that mean?\" \n\n\"It means people loved him. A man among men, fearless. Intelligent and charismatic. He was the kind of guy every guy wants to be friends with, and every girl wants to be much more than friends with. \"\n\nKevin felt a pang of envy. \"Did he know?'\n\n\"What?\" \n\n\"That you loved him.\" \n\nShe scanned his face for a second and then gazed out at the lake. \"Whoever said I did?\" \n\n\"Come on. You never admitted to it in your letters, but it's loud and clear in every line you wrote.\" \n\nHelen was quiet for a long time. \"He might have suspected,\" she finally said. \"He wasn't stupid.\"\n\n\"Why didn't you ever, you know, hint? Tell him?\" \n\n\"To what end? Andy could have had any girl he wanted. He wasn't interested in a six-foot futanari lump.\" \n\n\"How do you know?\"\n\nShe shrugged.\n\n\"You should have gone for it anyway.\"\n\n\"Just to have my heart broken?\" \n\n\"Just to know the truth. Now you'll never know.\" \n\n\"Kevin, I...\" \n\n\"What?\" He stopped walking.\n\n\"There is something...\" She started and choked. She couldn't tell him how she felt. They'd be back home in a few days, and Diana was going to take him from her. Maybe they'd see each other from time to time, but she doubted if Diana would ever allow it now that she knew how Helen felt about him. \n\n\"Well?\"\n\n\"Never mind. I'll drive.\" She took the rented Opel Corsa's keys from his hand. She had to occupy herself with something, to keep her mind off the harsh reality. \n\n\"We have a six-hour drive to Venice. Seven, since you want to take the detour through Triglav Park. I'm not saying you're a slow driver, Helen, but my grandma, may she rest in peace, was Michael Schumacher compared to you. And anyway, when was the last time you drove a car with a manual transmission?\" \n\n\"Ten years ago. It's not something you can forget.\" Helen shifted to second gear, and the Opel screeched because she forgot to engage the clutch.\n\n\"Good luck,\" Kevin said.\n\n\"Thanks.\" \n\n\"I was talking to the car.\" \n\nHelen couldn't help smiling, and that made his heart a little lighter. \n\n---\n\n\"'I believe!' Margarita whispered solemnly. 'I believe! Something will happen! It cannot not happen, because for what, indeed, has lifelong torment been sent to me? I admit that I lied and deceived and lived a secret life, hidden from people, but all the same, the punishment for it cannot be so cruel...Something is bound to happen because it cannot be that anything will go on forever...'\" \n\n\u2015 Mikhail Bulgakov, The Master and Margarita\n\n----\n\nHelen was a Sunday driver through and through. They cruised the highway at fifteen miles below the speed limit and caused an embarrassing traffic jam for several miles. The driver in one of the cars which passed them hollered, 'Where the hell did you learn how to drive?' Kevin reassured Helen that the man was jealous of her driving skill and wanted to learn too from the best. She didn't buy it. \n\nTo make things even worse the GPS went on a strike precisely near the quaint little village of \"IhavenofuckingIdeaWhereI'mat,\" which made them take two wrong turns. By the time they cleared the long road winding down the green mountain pass going through the park, the sun was setting. Wisps of fog descending from the Alps to greet them.\n\nKevin's mobile hummed ELO's Evil Woman. \"Hey.\"\n\n\"Hey, baby, I've been trying to reach you all day.\" \n\nKevin placed his phone on the dashboard. \"How was your trip back home, Diana?\"\n\n\"Long and hard. But the hardest part is you being over there instead of here, baby.\"\n\n\"You'll live.\" \n\n\"Speaking of which, I have a long and hard situation right now.\" \n\n\"You're on speaker, Diana.\" \n\n\"I know. Helen, cover your ears. Kevin and I are gonna have phone sex.\" \n\nHe thought it was too bad she couldn't see his eyes roll. \"I get that the crisis at the club...?\"\n\n\"It's still a crisis, but I'm on top of things.\" \n\n\"Great.\" \n\n\"You and Helen having fun together?\"\n\n\"A blast.\" \n\n\"As long as you're not having an affair behind my back, I'm okay with that.\" Kevin could actually hear her smirk over the phone.\n\n\"No, we're just having sex. No-strings-attached kind of thing.\" \n\n\"Nothing too kinky, I hope?\"\n\n\"I'll let you be the judge.\" Kevin said. \"We have a foursome tonight with a dwarf and a circus rubber girl. Helen, do you think we still need to use a condom if she's a rubber girl?\" \n\n\"I don't want to take part in this conversation in any way.\" Helen's fingers clutching the wheel were white, and she was driving slower with every passing moment. \n\n\"Okay, whatever. Just don't do anything naughty and come home ASAP.\" \n\n\"Sure.\" \n\n\"Love you,\" Diana said.\n\n\"Bye.\" Kevin pressed the End-Call button. He didn't have the energy for his girlfriend.\n\n\"It's nice that you two get along better now,\" Helen said.\n\n\"What?\"\n\n\"It was cat and mouse during the first few weeks, and I felt terrible that I had a part in that.\"\n\nKevin stared at her, and Helen blushed.\n\n\"I...I feel that you two have reached some good point. That you're in a better place right now, you and Diana.\" \n\n\"Sure, we're like Romeo and fucking Juliet.\"\n\n\"Are you mad at me, Kevin?\"\n\n\"Why would you say that? Hey, why did you turn right? The GPS says forward.\"\n\n\"I can't drive in this fog,\" Helen said.\n\n\"Want me to drive?\" \n\nShe pointed to some lights ahead of them. \"We'll find a room.\" \n\n\"We're six hours from Venice. Let me drive. We're gonna lose a whole day if we don't make progress tonight.\" \n\nHelen shook her head and stopped near a sign that said 'Ciginj.' She rolled the car a few more yards in front of a private house. \"Excuse me, sir,\" she asked an elderly man who was trimming his live fence. \"Are there any rooms for rent around here?\" \n\nThe man reminded Kevin of Old Tom, an aged neighbor who lived on the beach near the restaurant. Hard as the sea itself, Tom always seemed like he was one of its elements, like a wave or a seagull. This old man looked like he was carved from the old rocks of the Alps themselves. \n\n\"You're in luck,\" the man said. \"I have one vacant apartment. It's five hundred meters down this trail, just above the river. You'll have a very nice view tomorrow.\" \n\n\"Great,\" Helen said. \"We'll take it.\" \n\n\"I'll need your passports for the registration and one hundred and forty euros.\" \n\n\"One hundred and forty?\" Kevin said.\n\n\"It's the honeymoon suite.\" \n\n\"We're just passing through on our way to Italy,\" Kevin said. \"We don't need a honeymoon suite or a view.\" \n\n\"I see. It's still one hundred and forty euros.\"\n\n\"Did you know that our first lady is Slovenian?\" \n\n\"She's from Svenica; it's two hundred kilometers that way.\" The man pointed east. \"Maybe they'll let you sleep for free. Here it's one hundred and forty euros.\" \n\n\"He's trying to rip us off,\" Kevin whispered to Helen. \"We're off-season. A two-person apartment is fifty to seventy euros, tops.\" \n\n\"I don't care,\" Helen said. She was emotionally exhausted. \n\n----\n\n\"I do not know these good men,\" replied the prisoner.\n\n\"Is that the truth?\"\n\n\"It is.\"\n\n\"And now tell me why you always use that expression 'good men'? Is that what you call everybody?\"\n\n\"Yes, everybody,\" answered the prisoner. \"There are no evil people on earth.\"\n\n--Jesus and Pontius Pilate in conversation\n\n\u2015 Mikhail Bulgakov, The Master and Margarita\n\n----\n\nThe club had good vibes flying like electricity, but the current was made of love, or at least love waiting to happen. People were hyped. Diana had been the queen of clubbing once, but now she was an empress. She contemplated the mass of young bodies writhing below her, high on the crazy beat. \n\nThere was a lot of envy behind her hatred for her big sister, but also a desperate need to earn Helen's respect. To show her that she, too, could make it big. Bigger. She wasn't a businesswoman, but she knew what a good club should look like, and she had a ton of connections in the clubbing scene. She made the impossible possible. Two months ago, this place was dead; now her club was the go-to place on the weekend.\n\nIt was a double-edged sword. \n\nAgent Brian Thompson was the whitest man she had ever met in person. A WASP wearing an ugly black suit and an ugly tie. He was in his late twenties, probably fresh from the academy. He was blond, had a baby face, and beautiful big blue eyes behind black-rimmed glasses. \n\nHe smiled at her as he climbed the stairs to her office, holding a cheap black bag under his arm. His handshake was good, not too strong, not too weak. He avoided looking at her cleavage, which was something most men couldn't. \n\n\"Ms. Brion.\" He nodded as he held open the door to her office, very gentlemanly. She couldn't help liking him a little, even though he was the angel of death. \n\n\"It's Diana.\"\n\n\"Ma'am?\"\n\n\"Nope. No Ms. and no ma'am. Just Diana. Have a seat, Brian.\"\n\nHe nodded and smiled. Diana vamped to her tall executive chair, taking her time and allowing him a very thorough ogle of her peachy little ass. Since she'd become the club manager, she started wearing blazers and long-sleeved, knee-length dresses. Tonight, however, she wore a red mini. It was open in the back, all the way to the crack of her ass. \n\nShe heard him fidgeting in his seat and smiled inwardly. \n\nIn Money Laundering 101, step one is placement. Money can't appear in the financial system out of thin air. Pick a respectable business, like a nightclub. Let your dirty money mix with genuine hard-earned dollars, then deposit. Later it will be traded through many transactions, investing in Bitcoin and in countries that have a lighter hand on the banking system, until the newly clean money can be reinvested. \n\nBut you've got to be careful, because the opposition is not dumb. They've got their feelers out, searching for anomalies, like an unexplained surge in deposits. Don't be too greedy, was Suzan Owens' motto. Low-key is the key, because the wolves of the FBI's Financial Crimes Division were always on the prowl.\n\n\"I would like to reassure you, ma'am...sorry, Diana\u2014it won't happen again. I would like to reassure you that there is nothing to be alarmed about. This is just a routine check; we do it all the time.\"\n\n\"Do I look alarmed?\"\n\n\"No, ma'\u2014\" He smiled like a man who'd just avoided a close call. \"But people usually feel a bit uneasy when we pay them a visit.\"\n\n\"A surprise visit?\"\n\nHis smile grew wider. \"Now if people knew we were coming, that would defeat the whole purpose, wouldn't it?\"\n\nDiana faked a smile. She'd known he was coming three days ago. Suzan Owens had her own feelers inside the FBI Financial Crimes Division. The FBI looked for patterns. Exceptional numbers of bank transfers, a business with multiple bank accounts for no apparent reason, or a newly acquired business with an unexplained surge in its financial flow. \n\nDuring the past weeks, the club been pulling in over 30K every night it was open. One of her employees made a blunder and deposited the entire revenues plus the dirty money from Suzan, despite Diana's strict instructions. It wasn't low-key, and now she was screwed.",
        "\"Is there anything in particular that drew your attention to my club?\"\n\n\"Some financial statements that look a bit odd. I'll have to sit down with your accountant. I'm sure everything is in order, and we can sort everything out.\"\n\n\"Had I known that FBI agents were so handsome, I would have made my financial statements much odder much sooner.\"\n\n\"Thank you, ma'\u2014Diana.\" He actually blushed. Cute. \"But let me remind you that obstruction of justice is an offense.\"\n\n\"So now the FBI has joined the thought police? Since when is giving compliments a crime?\" \n\n\"It's not.\" \n\n\"So it's okay to say that I think you're hot?\" \n\nHis blush colored his cheeks and neck. Super cute. \"Ma'am, I...\" He showed her his ring. \n\n\"Do you carry the little wife in that ugly bag?\" \n\n\"Certainly not.\" He laughed. \n\n\"I hope you don't mind. It's something about handsome men in suits that makes me a bit flirty.\" \n\n\"A bit?\" He laughed. \n\nThe one thing Diana was confident about was her looks. She was a beautiful girl, and she grew up to be the kind of woman men were desperate to touch, even if they sometimes had a hard time admitting it. \n\n\"Well.\" She rose to her feet and circled her desk, leaning on it next to him. \"I am a futanari, after all. Some people say that we're just women with an extra something, out of political correctness. Bullshit! God gave me both male and female parts and a libido greater than both combined.\" \n\nHe stared at her and gulped. \n\n\"You can't blame me for trying.\" \n\n\"I'm not.\" He took a deep breath. \"But you see, like I said, I'm here about some financial statements that look a bit odd.\" \n\n\"Not odd at all, did you see the number of people on the floor? I've turned this place upside down.\"\n\n\"Yes, very impressive.\" He wasn't cynical. She doubted he could be.\n\n\"There is a line of people to the next block, begging the doormen to let them in, and whom I'm dying to let in, but I can't because of the fire department's strict regulations.\" \n\n\"That would explain things; still, I will have to review your records with your accountant.\" \n\n\"Ethan will be here soon, and you guys can have your fun. Kind of a shame.\" \n\n\"Why?\" \n\n\"Financial records bore me to tears. I was hoping you'd swallow the bait so we could have some other kind of fun. I must be losing my touch.\" \n\n\"Ma'am.\" He coughed, and his hands clutched the bag for protection. \"\"I'm...It's not...I'm not... It's not. I'm straight, to start with.\" \n\n\"And getting some on the side with a futanari will make you what? Gay?\"\n\n\"No.\"\n\n\"I never understood people's obsession with labels. Gay, bi, straight? Who gives a fuck if you're straight or heteroflexible? A ton of so-called straight guys would give a lot to find out what it's like to be a bottom bitch to a girl like me.\" \n\n\"I'm...\" He wiped his forehead. \"It's hot in here.\" He gave a short, embarrassed laugh. She could see in his eyes the struggle between duty, fidelity, and conventions on the one hand and his penis on the other. \n\n\"Because my records are good, but I can be as bad as you want me to be.\" Her finger brushed against the back of his hand, and he stared at it, his eyes wide behind the glasses. \"Have you ever been one of these guys, Agent Brian? Have you ever fantasized about tasting the other meat?\"\n\nHe gulped again. \"I'm...the...\" \n\nShe lowered her hand, sliding her open palm over his inner thigh, slowly until her hand brushed the intersection between his legs. He was harder than titanium. \"I guess I know the answer to that.\" \n\nLust won. \n\n----\n\n\"Follow me, reader! Who told you that there is no true, faithful, eternal love in this world! May the liar's vile tongue be cut out! Follow me, my reader, and me alone, and I will show you such a love!\" \n\n\u2015 Mikhail Bulgakov, The Master and Margarita\n\n----\n\n\"Bowie.\"\n\n\"Who?\" \n\nHelen slipped into one of her grey tank tops and grey leggings and stepped out of the small room into the living room and kitchen area. She dragged the brush slowly through her glistening hair and scanned the room. \"Bowie.\"\n\n\"Who?\" \n\nShe followed the sound of the voice and found Kevin snuggled on the couch. He looked like he was ready to tuck himself in, though it was not even seven o'clock. \"David Bowie, haven't you heard of him?\" Helen searched the playlist on her smartphone and connected it with the cabin's sound system. The first guitar notes of \"Space Oddity\" danced between the walls of wooden house. \"Ground control to Major Tom?\" \n\nKevin shrugged and covered his lithe body with a blanket. \n\nThe honeymoon suite turned out to be a wooden cabin at the end of a sandy trail. It stood secluded, far from the fringes of the mountainous village of Ciginj. Below them, Helen could hear a river running, but it was too dark now to see anything. The rooms were new and painted white, with white drapes and soft, romantic illumination. It also included a king-size bed, a spacious bathroom, a walk-in closet, and a living area with a French window opening out onto a cozy portico. The spacious terrace just outside the room had a wet bar and a sizeable temperature-controlled plunge pool.\n\nExcellent value for one hundred and forty euros, Helen thought. Except no one will be using the facilities. \n\nThe air smelled of a storm, and blue lightning zigzagged on the northern horizon. \"Looks like it's going to rain.\" She tried to smile. \n\n\"I think I'll hit the sack now. We've got a long ride tomorrow.\" \n\n\"No, no. You slept on the couch for the last two days. My turn,\" Helen pulled the blanket playfully off his body. \"You should take the bed.\" \n\nKevin shrugged, and Helen felt like crying. The shower had washed away some of her depression, but she panicked when she realized that her grief was pushing him away, and she might lose whatever was left of their friendship. She'd tried to change that for the past hour, but now Kevin appeared uninterested.\n\n\"You hungry?\" Making food would pull him out of his indifference. \"I saw a little grocery down the road. I can try to make ravioli if you want, I mean if you'll guide me through the steps?\" \n\nHis phone started ringing \"Sure, whatever. Hi, Dad. \n\n\"Yeah, still on vacation. \n\n\"In Europe now. Slovenia. Yeah, with Helen. \n\n\"Yeah, super fun.\n\nI'm just tired, Dad. I'll call you tomorrow and tell you all about it. Bye, Dad. Love you too.\" \n\n\"It's really inspiring.\" Now it was her turn to feel like she was scaling a mountain that didn't want to be climbed. Helen gave another faint smile. \n\n\"What's so inspiring?\" \n\n\"You and your father. You have this special bond.\" \n\n\"Yeah, special,\" he said dryly. \n\n\"I mean, the fact that you went through so much just to help his business stay afloat. I think it's beautiful. You two have been through a terrible tragedy, and still, you're like...unbreakable.\" \n\n\"My father and I?\" Kevin gave a short laugh that was dried out of any trace of humor. \n\n\"What?\"\n\n\"Nothing.\" Kevin sat down at the kitchen's table and rubbed his face. \"You're so clueless, Helen. Sometimes I wonder how come you even work with people. It's like you don't understand other human beings at all.\" \n\n\"Did I do anything to you?\" \n\n\"My father and I, Jesus Christ. My father and I, we're like a big fucking dark hole that keeps growing and growing. Sometimes I think you're just stupid, Helen, then I remember how smart you are.\" \n\n\"Thanks. That was kind.\" Helen's lower lip trembled. \"What was your mother's motto? 'Kindness before everything else?' I bet you've just made her proud with so much kindness.\" \n\n\"My mom married at eighteen a thirty-five-year-old man she didn't love because her parents kicked her out when she got herself pregnant, and she needed a provider. So she wore his ring, slept under his roof, and fucked him. They even had a sweet boy together. My little brother, Ben. But she hated every fucking minute of it. The fact that she wasn't with the man she loved ate her up from the inside. She ended up loathing him for not being the person she wanted him to be. Do you have any idea what it's like growing up in a house where your mother hates your dad?\" \n\nHelen stared at him, her mouth open, her heart struck by freezing northern wind. She'd never seen Kevin angry or cruel. \"I'm...so sorry.\"\n\n\"What about, Helen? She ran over to the douche who knocked her up, every chance she had. Just so she could fuck him. It's not like he was going to divorce his wife, because my real father was a respectable man of the cloth, a pastor.\" Kevin's face contorted to a snarl, and he spat the word 'pastor' with disgust. \"Every chance she got, Helen. And my dad knew she was putting horns on him day in and day out. He did nothing.\" \n\n\"Wh...why?\"\n\n\"Because he worshipped the ground that she walked on. That's love for you. Totally fucked up. I told you that the car accident wasn't anyone's fault, didn't I? That's a big lie too. She picked up my little brother from the special daycare, then she drove over just so she could fuck him, even though a storm raged outside. She couldn't help herself. When my mother and brother died, she was on her way to see her lover. And the most fucked up part about it was that I could have stopped her myself. Dad asked me where she went, and I lied. I could have told him, and he would have stopped her. But I covered up for her, like I always did because she taught me to hate him too. The man who raised me even though I wasn't his.\" \n\n\"Kevin...\"\n\n\"So that's my dad and me, Helen, and our special, unbreakable bond.\" The last three days were torture for him, seeing the woman he loved drifting away. Now it all burst with a bang. His aching heart started dripping through his purple eyes. \n\n\"I have a big hand in the death of the woman he loved and his real son. That's on me. I owe him a debt, Helen, that I'll never be able to repay even if I have to be the boyfriend of twenty fucked-up monsters like your little sister. Oh, yeah, Diana and I, the lovebirds? I hate her guts. Diana is a spoilt, lazy, insanely self-centered, cruel little monster, and I hate her sometimes like you wouldn't believe, even if I pretend that I don't.\" He rose up from the table, wiped his tears on his sleeve, and without saying another word went into the bedroom.\n\nHelen wanted to run away and hide. To lock herself in her penthouse's study or to drown herself in work. Any place she felt safe. But that was the old Helen from five months ago, and she was fighting a rearguard battle. Kevin had changed her. \n\nThe new Helen stood on shaky legs and followed him. She found Kevin sitting on the bed, his face buried in his hands, so she sat beside him and wrapped her hand around his shoulder. Just like that time he stayed with her in the kitchen after her terrible date. She held his shaking body close while he silently sobbed, rubbing his shoulder and giving comfort. \n\nLightning flashed close by, followed by the screech of thunder. Rain started knocking on the bedroom's window. \n\n\"You know, Helen, I had this puppy love for a girl in my school. Laura. I didn't know it, but she was my half-sister, the pastor's daughter. She hated me. Only years later it dawned on me that she knew about my mom's infidelity with her dad. She hated us because my mother was tearing Laura's family apart just as she was tearing ours.\" \n\n\"I'm so sorry.\" She wiped the tears from his eyes with her palm. \"But why...? I mean, your mother, why?\"\n\n\"Why do I always pretend that she was a saint?\"\n\n\"Yes.\"\n\n\"I told you once that I'm a total phony. What else have I got, other than pretense, Helen? A father who hates me? A dead brother? A fucked-up family? A whore of a mother? A little monster for a girlfriend? I've got pretense, Helen, nothing else. Better the memory of an imaginary mother than the real one I had. Sometimes I hate her so much.\" \n\n\"Don't.\" \n\n\"She was a horrible person.\" \n\n\"She was only human. Not a saint, only human.\" Helen kissed his head and wiped his tears again. \"Why are you and Diana together, Kev?\" \n\n\"She used someone to get hold of my dad's debt. She threatened to sell his business and sue him unless I came back to her. If she takes his shitty electronics store, then he doesn't have anything left. I can't let my dad take another hit. He already had a heart attack after Mom and Ben died. I just can't.\"\n\n\"You can't be with someone you hate either. That's insane.\" \n\n\"I'll fucking marry her if I have to.\" \n\n\"Christ. The...\" She closed her eye. \"Why? Why didn't you say anything?\" \n\n\"You seriously gonna pretend that you didn't know, Helen?\"\n\n\"Of course I didn't. I would have never let Diana treat you like\u2014\" She choked because she remembered doing precisely that on the first day they met. \n\n\"Wouldn't you? No, you didn't know the details, I'm sure you didn't. But you suspected that something wasn't right; you're not stupid. You're just like me, Helen. You're a liar, lying mainly to yourself.\" \n\n\"I...\" \n\n\"Be a real Valkyrie, just this once.\" \n\n\"You'll hate me too if I tell you the truth.\"\n\n\"Please. I've got to know, Helen.\"\n\nShe nodded and blew air out. \"I was...this is tough. Okay. I was afraid that if I knew the truth, I'd have to force Diana to give you up, and you'd be gone in a second from my life too. Those two weeks you went away were the longest two weeks I had to endure. So when I lay in the hospital, I...well you said it. I pretended. I didn't want to lose you.\" \n\n\"I don't want to be your friend anymore, Helen.\" \n\nShe hugged him tighter. \"It was selfish, and I was the opposite of a good friend, but I'm human too, Kevin. I promise I'll make everything right.\" \n\n\"Shit, that didn't come out right. I can't be just your friend anymore. I'm in love with you,\" he said. \n\n\"What?\" \n\n\"I am.\"\n\n\"W...what?\" Another flash of lightning struck outside, and she felt it had hit her core. \"You, you, you what?\"\n\n\"You heard me,\" he said quietly. \n\n\"I, I heard words, but they didn't make any sense.\" \n\n\"Yes, they did.\" \n\nKevin pulled back, and his purple eyes were like every fantasy she'd ever had of him, every moment she had wished could exist between them. She had run this scenario a million times, inventing little stories. Sometimes Helen was Brienne in Game of Thrones, and he Jamie Lannister. Sometimes she was a shy Librarian in New York's Lincoln Center and Kevin a student. The story always ended with a kiss and lovemaking. Now that it actually was happening, she froze, totally lost. \n\nSay something, Helen screamed at herself inside her head. \"But Diana...\" No, you idiot. Say something else. \n\n\"Don't look so guilty,\" Kevin said. \"None of that is your fault.\" \n\n\"Not my fault?\"\n\n\"Not your fault that Diana grew up to be a little monster. Not your fault that I hate her. Not your fault that I love you. I just do, and I'm tired of lying all the time and pretending.\" He swept her wet hair aside and kissed her tenderly over the collarbone. \n\n\"I don't understand.\" \n\n\"Yes, you do. It's not that complicated. I love you, Helen.\"\n\nShe closed her eye and took a deep breath. Tell him you love him, tell him you love him, tell him you love him. \"I...\" Say it, goddammit! \n\nShe felt a hot breath on her neck, then the tender brush of lips. Burning as they made contact. Kevin's hand ran through her hair, and the kiss became harder and more urgent. A wave of pure pleasure ran through her body. The lips left her neck, and she gulped, aching for their return.\n\nAnother bolt of lightning brightened the room, and the nearby roar of the thunder made her jump. \n\n\"Do you want me?\" \n\nHelen nodded quickly. \n\n\"I'm down here.\" \n\nHelen opened her eye. Kevin was lying on his back, watching her. She gently laid her long form beside him. \"I don't understand. You're really in love with me, Kev?\" \n\nHe looked at her with those violet orbs of his that stole her heart long ago and the rest of her with it. His lips felt soft on hers. \n\nKiss him! Kiss him! Kiss him! Helen screamed at herself, so she leaned forward, lips tightly shut, and with her teeth clenched, she pressed against his lips.\n\nKevin laughed.\n\n\"What's so funny?\"\n\n\"You kiss like a little girl.\"\n\n\"Hey!\"\n\n\"I'll teach you. Open your mouth, no, no, too much. That's right. Tongue out, just a little.\" His hand caressed her shoulder, and his other went to her face and raked a tingling trail from her brow down to her chin. Helen shuddered. His lips hovered, a millimeter from her, almost touching but not entirely, his hot breath caressing. His thumb brushed her lower lip. \n\nKevin pulled his head back, smiling. Then he repeated the process, like slow, sweet torture. She tried to claim his lips with hers, her head rising from the bed after him, but Kevin pulled back, smiling. Helen learned the true meaning of yearning.\n\n\"Please...\" she whispered. \n\nHe leaned forward, eased his lips into hers, and Helen lunged, desperate. A second later she growled her frustration as he pulled up again. \n\nKevin shook his head, smiling. \"Not like that. Slower.\"\n\n\"Slower?\"\n\n\"Much slower. It's not a race, we've got time.\"\n\nHer round chest was heaving up and down under her tank top. Kevin caressed her cheek, and she kissed his fingers. It had a calming effect, and she stopped breathing so hard. \"I've wanted you for so long,\" she said. \n\n\"How long?\"\n\n\"Remember the night we met?\"\n\nKevin laughed. \"I'm crazy about you, Helen Brion.\" \n\nHis words ran down her neck all the way to the hot area between her legs. \n\n\"Slowly,\" Kevin warned. \n\nShe nodded and let out little whimpers of anticipation. Slowly was the keyword, easing into every kiss. Nadine, the twins, Sin, and even Diana had left him small pieces of themselves. From Nadine, the warrior queen, he learned that lovemaking wasn't a war.\n\nHis tongue touched hers. Helen tasted Kevin on her taste buds for the very first time and wasn't satiated even a little. His tongue lightly caressed hers as he held her head with both hands. She moaned and pressed forward again, but this time she kept herself in check. When she pressed too much, he gently pushed her back. \n\nHis hand caressed her shoulder, traced down to explore her chest. She was eager to show some initiative and grasped his palm in hers, their fingers intertwined, dancing a little jig of their own. Their palms pressed into each other.\n\nHis tongue was inside her mouth. Not intruding but knocking gently, asking politely to come in. It was slow and soft, and it flooded her with want. \n\nHelen was lost in the kiss and the sensations flowing through her as two gentle hands played with her breasts. Kevin coaxed her tongue out to play, his thumbs flicking and brushing her nipples under her tank top. Another crash of thunder exploded nearby, but she barely even heard it. \n\nHe pulled back, smiling and teasing again, but this time she was having none of it. She pulled his head back to hers, and covered his mouth with hers, hungrily. \n\nHis hand traveled farther south, and his fingers caressed the bulge between her legs. Helen gave a sharp intake of breath. He slowly pulled his fingers across her length, and Helen exploded. She didn't even know she was on the cliff's edge. But his body's sweet fragrance, the Kevin scent that sometimes made her hard in the mornings, was all around her. His tongue was in her mouth, and before she knew it, her body arched and the betrayer between her legs ended everything way faster than she was willing to give it up. She exploded inside her pants, drenching everything with lust. \n\nAfter she climbed down from ecstasy, Kevin hugged her head to his chest and nibbled her forehead while she huffed, whispering into her ear sweet nothings. That felt amazing too. \n\n\"I still don't understand, Kevin. How is it even possible?\"\n\n\"You were excited?\"\n\n\"No, silly. You? Me? When did it happen? How, how did it even happen?\" She placed her soft lips against his neck and quietly lingered there. ",
        "\"I dunno exactly when. I hated you at first.\" \n\nHelen buried her face in the crevice of his neck, breathing him in.\n\n\"But not for long. I was curious about your dynamic with Diana. You pretended to be an Ice Queen, but once I took my time and really looked, I could see it was only a mask. And then I accidentally read your letters, and the person who wrote them was warm and sensitive, with a huge heart. You were the opposite of everything you projected. Then we became friends, and in the end...in the end I just couldn't help it.\" \n\n\"But...? I mean...\" She remembered Sharon Richardson, the model, clinging to Kevin at the fund-raising event. If he did hate Diana, why would he pick her when he could pick anyone? \"I mean...Why me?\" \n\n\"You're Helen.\" \n\n\"Last time I checked.\" \n\n\"You don't understand. You are my Helen. You think you're ugly, when in fact you're beautiful, inside and out. When you're stressed, your lip trembles, and you always laugh at my jokes, even the crappy ones. And you never say that anything I cook is less than divine. And when you really start laughing, you sound like a choking fog horn, and you cry in romantic films. And you know Krav Maga, and you blush whenever I touch you like a fourteen-year-old in love. And you won a Bronze Heart for bravery, but you're so embarrassed if I ever mention that to anyone and, and a million other things that I'm crazy about. You're everything that I ever searched for.\"\n\n\"Like Google?\"\n\n\"It was a close race, but Google doesn't have your boobs.\" \n\nHelen sniggered. \"I'm completely, embarrassingly wet.\"\n\n\"Yeah,\" he kissed her ear, \"I think it's about time we get you out of these clothes.\"\n\nHelen tensed.\n\n\"It's okay.\"\n\n\"No, it's just...\"\n\n\"Yeah, I know.\" He pushed himself off her and left her hungry again. \n\n\"You know what?\"\n\n\"I know you, Helen Brion, and I know what you're thinking. That if I see you naked, then I'll run away somehow.\"\n\n\"It's...my scars. They're really ugly,\" Helen said in a low voice. \n\n\"It's crazy, by the way, because I'm crazy about you, and I'm done running.\" He stepped outside the bedroom and hit the light switch. \"Better?\"\n\n\"Much better.\" \n\nThere was dim light from a lamppost outside, but the room was in dark shadow. Kevin could see only Helen's silhouette, which bothered him because he loved looking at her delicate beauty. From the living room, David Bowie sang how \"the shame was on the other side.\"\n\n\"What is he mumbling about there, anyway? That Bowie dude?\"\n\n\"Heroes,\" Helen said. \"It's about two people who are in love, but there is a wall between them. The Berlin wall.\" \n\n\"Want me to shut him off?\" \n\n\"No.\" She took a deep breath, peeled her tank-top off and wriggled out of her soaked leggings and panties. Freedom. Being naked with the man she loved was total freedom and absolute torture. Helen tried to find his silhouette in the dark, then felt the bed move as he sat down somewhere to her right. She reached out, and her fingers bumped into his warm body. Kevin was naked, too, and Helen pressed her fingers into his abs. She had once seen him naked in Diana's room, and the image haunted her dreams. His warm body made her throb again downstairs. \n\nKevin squeezed her leg, and she shuddered. \n\n\"Hey, relax, I won't do anything you don't want me to do.\" \n\n\"But I want you to do...\" \n\n\"Do what?\" \n\n\"Everything?\" \n\nKevin laughed. She heard him squeeze a tube, followed by a squelching sound. \"Just lube,\" he whispered. \"Something you learn to keep around with a futanari girlfriend.\" She felt his wet hand dragging on her cock and had to bite her lip hard to avoid screaming. \n\n\"Wow, you are a big girl.\" \n\n\"Is that bad?\" \n\n\"You're perfect.\" He pushed her on her back again, and his nimble fingers played on the crown of her cock, rubbing the skin and sending electricity through her body.\n\nHelen lurched. \n\nKevin took his hand off. \"Too much?\" \n\n\"No, no, it was nice,\" she said quickly. \"You, you can touch it. I mean, if you want. I, I, I mean, I don't mind.\" \n\nKevin snorted. His nimble fingers played on her corona again and then dragged all the way down. She felt hot breath on her bulbous head and almost exploded again when his tongue tasted her slit. He knelt and kissed just the tip, rubbing the head lightly over his lips like an obscene lip gloss. Helen shivered. Kiss followed kiss on the fat head, each kiss longer and more sensual than the last. He made out with her cock.\n\n\"Ohhhh,\" she moaned and bit her own hand. \n\nHis fingers swept up and down on her length. His other palm patted her ball sack playfully. Helen felt her cock stretching. Kevin held it firmly and used his index finger to support the base of her penis, adding slight downward pressure. He applied some lube in his other hand and slowly stretched out the length of her penis. Once the lubed hand was near the top, Kevin brought his supporting hand up, repeating the same slow stretch. It was trick he'd learned from Diana, who was the master of narcissistic love. \n\nBoth his hands left her body, and Helen was left confused, pulsing, and breathing hard on the bed. \n\n\"Kevin?\" \n\nShe shivered when his tongue dragged down her stomach, his lips pressing into her skin as he traveled the trails of her body southward. She spread her legs, eager, but he trailed his tongue down her hip to her thigh. His mouth made its way to her knee before moving to the other side and working its way back up the inside. He went back to kissing her stomach, slowly, planting love bites around her belly button, his hands rubbing the side of her body. She felt him straddling her legs. \n\n\"I want you, Kevin,\" she heard herself saying. Her head was somewhere in a fluffy cloud, and it was hard to think. She saw his shadow rise above her body, and then his hand was on her cock again. She felt him crouching, and suddenly her tip was rubbing against his ass.\n\n\"Oh.\" \n\nHis hand was on her cock, lined up with his pucker, rolling the tip in a slow circle around his ring, which sent lightning bolts of pleasure through Helen's spine. She felt something drip on her stomach. \n\nHe took a deep breath, groaned the word \"relax\"\u2014she wasn't sure if he meant her or himself\u2014and started sitting down. Helen felt his outer ring stretch around her girth. \n\nNow they were cooking with fire. This was finally happening. \n\nIt was incredible in every sense of the word, and she hissed her pleasure. She pressed up, needing Kevin to envelop her. Her toes curled as she felt the elastic muscle stretching around the head of her cock. \n\n\"Kevin.\"\n\nHe groaned in return. \n\nHe sparingly pressed down, allowing gravity to take more and more control, gradually increasing the pressure. The harder he pressed, the more the circumference of Helen's bloated cock head expanded. Helen moaned, and a second later his hole yielded at last and accepted the blunt tip of her glans. The elastic muscle closed behind her, sealing her in. She was inside. \n\nKevin let out a deep breath. \"Like?\" he grunted. \n\n\"Oh yeah. Is it good for you?\" \n\n\"The best.\"\n\n\"Can, can, can I touch?\"\n\n\"Always.\"\n\nHelen reached out with a shaking hand and touched the point where their bodies melded. She gently caressed his opening where she ended, and he started. Her fingers played on his tiny ass, and Helen cupped each cheek and squeezed. She reached over and laid her hand on his muscular thigh and squeezed once. She left her hand where it was, enjoying the feel of his toned leg beneath her fingers. Her hand accidentally bumped into his erect cock. She reached out shyly, and touched it with the tip of her finger, like a girl discovering a lollipop. Kevin must have found it immensely hilarious because he laughed. She ran her fingers along his length, marveling at the texture and heat. It was the first time she'd touched another person's soldier. The fact that he was hard and leaking excited her. That was her doing. It was a physical attestation. She wrapped her fingers all around it, and Kevin's hard member jumped in her palm. \n\nHe slid further, slowly and gently, and Helen moaned. \n\n\"Ready for more?\" he asked her.\n\nHelen mumbled something in return. \n\nHe drew a deep breath and then slowly but steadily fed the rest of her into his loving butt. After the initial penetration, he slid down until his ass cheeks pillowed on his lover's lap. He was ready and warm and shaped perfectly to every ridge and bump her cock had to offer him, forming to the rigid shaft that probed his insides. She shuddered each time she hit a new spot. When her scrotum bumped into him, Kevin shoved himself forward to make her feel how deep she was. \n\n\"I'm...\" She knew she was on the edge of the cliff this time. \n\n\"Deep breaths.\"\n\n\"I-I'm gonna cum,\" she whispered. \n\n\"Wait. Deep breaths.\"\n\nShe tried. She failed. Helen exploded again. One second, she was breathing hard, and the next she was falling down and apart. Her balls clenched and clenched, and she coated his insides with her seed. She thrust hard as she did, lifting him off the bed with her powerful muscles. Crying his name like a Valkyrie, she grabbed his thighs for support and thrust up hard, pulling out a little and then slamming back in as she hosed him with her baby-making seed. Kevin rode her waves, clutching her with his muscular legs. With a final shout, she lifted herself to a sitting position and hugged him, squeezing Kevin's hard body against hers. Holding him, her head resting on his shoulder, Helen spasmed a few last times inside him. She didn't let go, even as the shock waves subsided. Helen held onto him, breathing hard. \n\n\"I'm sorry,\" she whispered, \"I couldn't wait.\"\n\n\"That's okay.\"\n\n\"Nooo, you should say that I was perfect.\"\n\n\"You are.\" He nuzzled her neck. \n\nOutside their room, the storm grew stronger. The drumroll of hail on the roof meant that Mother Nature was taking it to the next level. Helen wanted time to stand still. She wished she could keep holding him like that through the night, or at least for a little while more, till the next millennium. \n\n\"Did that couple from the 'Heroes' song manage to break down the wall?\" Kevin said.\n\n\"The Berlin Wall? It fell in the early Nineties.\"\n\n\"What about our wall?\"\n\n\"Ours?\"\n\n\"I kept bumping into it since the Seychelles. You wouldn't let me in, and it was so frustrating. I wanted to scream at you, then I remembered all the times I'd lied and pretended. I think it sort of blew up. I'm really sorry that I called you stupid.\"\n\nShe kissed his nose, holding him tighter. Her cock was softening inside him, but she didn't feel like pulling herself out. \"Diana plans to move out with you once we're back, even though I begged her not to. She can really be a little monster sometimes. Every time I looked at you, I kept thinking how she's going to take you away from me soon, and that my heart is going to break. \"\n\n\"Hey, I know it sounds corny.\" He leaned back, took her hand and placed it on his chest. His strong heart pulsed under her fingers. \"She can take me all the way to China for all it's worth, but you're always right here.\"\n\n\"You're right, it is corny.\" She hugged him so tight his bones moved. \"She's not taking you to China, or around the block.\"\n\n\"How was your first...time?\"\n\n\"Amazing. How was your first? I mean, with me.\"\n\n\"Amazing.\" He kissed her lips tenderly, and she opened up like he showed her, her hands holding his face.\n\nHer cock stirred back to life inside him. \"The best you ever had, right?\" \n\n\"Yes.\"\n\n\"Put more heart into the lie, Kev.\"\n\n\"Well, it was kind of short, and I still haven't, you know...\"\n\n\"Hmmm...\" She nibbled his neck. \"I think the problem is not that I came too fast. I think the problem was that you're too slow, Kev.\"\n\n\"Yeah, that's it.\"\n\n\"Crap. I was terrible, wasn't I?\"\n\n\"No, you were amazing. And remember your first dive, how clueless you were? How come you think sex is something you try once, and immediately you should be a master diver?\" \n\n\"I wanna be the best you ever had.\" She pressed her lips to the skin on his neck, just underneath the collar, then lightly bit into the flesh on his shoulder. \n\n\"Ouch.\" \n\n\"I won't settle for second place.\"\n\n\"I know a great guy who's very eager to practice with you.\" \n\n\"Any pointers?\" \n\n\"Do whatever feels good. Explore. Be adventurous.\" \n\n\"Be adventurous?\"\n\n\"Or not. I love you either way.\" \n\nShe grabbed his ass cheeks and pulled him into her. She then shoved into him as far as her body would allow, his loud moan echoing through her. \n\n\"Slow!\" Kevin gasped. \n\nHelen maneuvered their bodies so that she was on top of him, still etched deep in his tight hole. A strip of light from the lamppost touched the edge of the bed that was closest to the window. She supported her body with both hands on the sides of his torso, staring at his handsome face revealed by the light. His purple eyes shone and made her heart flutter. \n\n\"Hi,\" he smiled. \n\n\"Hi.\" \n\nKevin pulled himself up and licked all the way along the underside of her sternum and pressed his mouth there. He swung his head and tongue underneath her right breast, along her side, tracing each rib, then back again. When he brushed his chin close to her nipple, it made her gasp. Kevin opened his mouth, and she held her breath as he sucked on it, his warm mouth wet on her nipple. Then he released it and blew air on it.\n\nShe started a very slow grind, a gentle, extremely slow in-and-out motion. She pulled back a little and then slowly slid it back in until Kevin's ass swallowed her to the root. Kevin placed his hands on her moving, peachy ass; his fingers played on the powerful muscles of her haunches, rolling her long body back and forth. Over and over, she gave him a slow massage. Stomach pressed against stomach, the friction was creating heat and sweat. Kevin's cock was pressed between their warm bodies, rolling as hers moved over his. She smiled as she watched his head jerking a little as she bottomed inside him. She enjoyed a small victory as he closed his eyes slowly, like a cat surrendering to a finger scratching his head. Helen loved him so much at that moment that she was afraid to blink; she might miss something. She stopped to lean and claim his lips for another kiss, then felt his legs curling around her bottom, pulling her in. She lifted herself again and indulged him. Setting a slow rhythm, trying to block out the fantastic sensation of his bottom swallowing her. \n\n\"I want you,\" she said. \n\n\"I know.\" His hands rubbed her stomach, pressing his palm against it. \n\n\"I want you.\" She took hold of his hips. Backing a couple of inches out, she shoved back in. His arms went stiff and clenched on her abs, and his back arched. \n\nShe started again with a slow, steady rhythm and gradually lengthened her strokes. Kevin sighed with contentment. At one point, she sank in balls deep and succumbed to an earth-shaking shiver that unexpectedly ran up her spine. His tightness was so incredibly stimulating. It milked her rod of flesh, and she wanted more than anything to just let loose in him. To breed him on his back. As the wave of passion rose up to her pleasure center, she rested briefly, careful this time not to pop too early.\n\nShe was a stranger in a strange land. What did Kevin say? Explore? Her hand reached out to his cock between them. She cradled his balls, just above the point where her cock was etched deep inside him. She then massaged his rod, scooping pre-cum from his tip. She leaned over to his smiling face, moving out of the shadows into the light and showed him the fluid scooped by her finger. She then licked the tip like a lollipop and finished by sucking it into her mouth and running her tongue over her lips. \n\n\"Hmmm...Yummy. Adventurous?\" \n\nHe must have liked the show because his sphincter reacted by tightening its grip on her tool. Helen started moving harder inside. \n\nShe grabbed Kevin's ankles, she pushed his legs forcefully up, until his knees were on his chest. That made him open and susceptible to every inch of hers. She pulled until only the head was inside him, then she plunged back in, maybe a bit too forcefully, and ground her balls to him. He yelped from the shock of it. She started pounding him faster than before, all the way out and then all the way in till she hit bottom, sometimes making him flinch.\n\nKevin was panting hard, and high-pitched whimpers spilled out of his mouth every time she bottomed out. He was writhing underneath her. Her back arched, pushing herself closer to his body. She grabbed his head, and kissed him deeply, not missing a stroke, fucking him hard as her mouth covered his. Her body was glistening with sweat and some of the pre-cum from his cock. She felt her own wetness streaming onto the mattress from her slit. \n\nShe abruptly pulled entirely out and rolled onto her back. \n\n\"Wha...?\" Kevin sounded as dizzy as she felt. \"Where, where, the\u2014did you go?\" \n\n\"I want you on top,\" she said.\n\n\"Oh, okay.\" \n\n\"No, not like that.\" She said when he straddled her. \"I need you to...\" She flexed her legs, opening them wide. \n\n\"What?\"\n\n\"What?\" She said, a bit confused by his reaction. \"Your turn?\"\n\n\"S..sure.\" He stood on his knees between her legs, not moving.\n\n\"Kevin, what's wrong?\" \n\n\"You want me to\u2014?\" \n\nOne of her hands grabbed him, and her other one wrapped around his cock. It was hot and really wet around the head. It pulsed in her palm. She half pulled, half guided him. Under her smooth, heavy sack lay hidden the female genitalia. Less stretched, more compactly arranged, as it had to share the real-estate with the male parts. Still, it was wet and ready. Diana never even let him touch her there, and his entire body shuddered when the head of his cock breached the wet, tight opening. \n\nThey both gasped in unison. Then he was no longer lost. Mother Nature called him, and Kevin thrust. \n\nHelen's body arched underneath him, and she cried in pain. \n\n\"What happened?\" He stopped. \n\n\"Nothing, just, you know...I guess you popped the cherry. It's my first time.\" \n\n\"Oh, sorry, mine too,\" he said.\n\n\"What?\" \n\n\"My first.\" \n\n\"Yeah, right. Funny.\" \n\n\"No, I swear. I'm...yeah.\" \n\n\"You mean to say that Diana never let you?\" \n\n\"Nope.\" \n\n\"I'm your first?\" \n\n\"Yep.\"\n\n\"Woohoo!\" She made a power fist. \n\n\"Yeah, don't be so smug. Feels incredible, by the way. May I?\" \n\n\"Slowly.\" \n\nIt was an invasion. Helen exhaled as he went deeper; her hand rested on his stomach to control his progress, as she was a little stressed. She tried to relax around him and failed. He thrust, and it burned a bit, but she took care not to wince. She wanted him to keep going and feel the same incredible pleasure his body so generously gave her. \n\nHe saw, though, and stopped again. He wetted his hand and clasped Helen's stiff cock, and the other searched her folds, gently. He lined the labia with his fingers, curling them towards his palm and started lightly touching that lining, from the bottom all the way to the top. Nadine had taught him how to pleasure a futa's folds. \n\nHelen moaned. \n\nKevin found the little knob of Helen's clit that was standing at full attention and stroked it up and down, feather touching. He felt around it and very gently pinched it using his thumb and forefinger. \n\nHelen had a sweet vaginal orgasm. It wrapped her entire body like a soft blanket, from the roots of her hair and down to her toes. She slapped his hand away when he tried to stroke it again. \n\n\"Too much,\" she huffed. \n\nHis other hand pumped her cock, sliding on the slick skin, going up, pinching the head between thumb and index finger, before going back down. \n\nHe started thrusting again. The feeling of entering Helen for the first time, his cock being used for its purpose for the first time, was indescribable. It was right, it felt perfect. Overwhelming. He placed his hands on her waist, marveling at how her hips moved as he plowed inside her. As the head moved deeper, her pussy stretched around his shaft.",
        "Helen's cock erupted for the third time. She still had enough juice in her to drench them both. She heaved and panted, her body arched beneath him, and her legs looped around him.\n\nKevin was in seventh heaven. His head up in the clouds. He intended to make it last forever, but then Helen told him that she loved him and had been in love with him for a very long time. She told him that he was her sun, her moon, and her stars, and he came instantly inside her. \n\nAfter that, there were only warmth and soft kisses. \n\nThe world outside their window was a storm, and nastier storms were brewing on the horizon. Diana was one. Nadine and the darkness that enveloped her was another. There was a lot to be concerned about, but nothing could breach that night the happiness of two people who found each other through heartaches. \n\nOutside their window, people were cruel to each other, people spent their whole lives in miserable relationships, people hated other people for being born different. \n\nBut inside their dome, there was only tenderness. That, and David Bowie, who kept on singing.\n\nI've nothing much to offer\n\nThere's nothing much to take.\n\nI'm an absolute beginner\n\nBut I'm absolutely sane.\n\nAs long as we're together\n\nThe rest can go to hell.\n\n*****\n\nTo be continued...\n\nOh yeah, finally. You've stretched that tease over 9 episodes. \n\nYou know the drill. I write the sexy stuff, you press the stars and leave me a note to show that you care (or not). It's not over yet, but there is light at the end of the tunnel. There are 4 more planned chapters (I hope I won't stretch any of them into two chapters)."
    ],
    "authorname": "allthatisfuta",
    "tags": [
        "futa",
        "futa on male",
        "futa romance",
        "shemale",
        "shemale on male",
        "futanari",
        "futanari on male",
        "dickgirl",
        "dickgirl on male",
        "male on futa"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/family-issues-ch-09"
}