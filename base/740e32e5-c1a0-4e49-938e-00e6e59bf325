{
    "title": "Plotting a Course Ch. 16",
    "pages": [
        "Your comments keep me going. Thanks for your patience.\n\nPlease keep the feedback coming. Thanks so much!\n\n*****\n\nChapter 16: Anchors Away \n\nThe sun was blinding as it reached its apex in the sky. The thick humid air was laced with chlorine. Without warning the crack of a starting pistol sounded. Faceless shapes plunged into the still water on either side of me and I dove to join them. I lost track of my competitors as the water started getting choppy. With a turn of my head I took a breath and realized I was alone. An enormous, curling, white-capped swell started bending towards me. I gasped for breath and tried to reverse my course, but the undertow was wrestling me, pulling me under. The wave crashed and I was disoriented as I twisted and thrashed in the churning water. The smell of chlorine was quickly replaced with salt as water rushed up my nose and burned my sinuses. \n\nI desperately treaded water, searching for shelter. Land wasn't visible and I circled and bobbed, looking for something, anything. Thankfully, a boat was bouncing on the wake and I frantically waved and started swimming to meet it. Something slick wrapped around my legs and I panicked and saw slimy, algae-green sea kelp pulling me under. I kicked and fought but was no match for the tentacle like wrap. I spluttered for breath, flailed my limbs and tried to break free. My lungs filled with water. My vision started to fade.\n\nSomething strong wrapped around my wrist. I shot out of the water with the force of a cannon and felt rough fiberglass beneath me. Lips were on mine forcing air into my lungs. A tongue checked my airwaves for obstructions and I felt stiffness in my trunks and instinctively reached to cover my arousal. \n\nI heard a muffled \"Ow!\" And started to come to. My eyes felt dry and gritty as I got my bearings. The rough fiberglass was replaced by soft sheets. I felt a plump lips around my engorged shaft and sighed deeply.\n\n\"Happy birthday Bobby!\" Rob's green eyes were shining as he looked at me.\n\n\"Were you making out with me while I was asleep?\"\n\n\"Maybe.\" Rob chuckled before he swallowed my cock to the root.\n\n\"Shit Robbie.\" I gasped and fisted the sheets beneath me. \"I thought I was drowning!\" Rob didn't answerer, but I felt rumbles as he laughed around my erection. I blinked rapidly, trying to clear the fog of sleep from my mind. The rough pads of one of Rob's hands was roaming my stomach, leaving an electric current behind. The tip of Rob's tongue worked its magic on the underside of my erection. His mouth was balmy and moist. His lips created a halo, as they engulfed my cock. \n\n\"Feels so good.\" I moaned. Rob acknowledged my praise by pinching my right nipple between his fingers sending a sharp electric jolt coursing through my nervous system. The pad of Rob's thumb was quickly rubbing the sting away as his lips locked around the base of my throbbing shaft. My swollen glans felt the constricted confines of Rob's throat and I lost all control. My hip and stomach muscles tightened as I exploded down Rob's throat. My body was wracked with orgasm and I couldn't control my muscles contractions.\n\n\"Fuck!\" I gasped when my head hit the pillow again. Rob slowly withdrew his mouth from my sensitive prick and wiped the excess saliva from his lips. Rob rested his head on the pillow facing me. He was the most handsome man in the world. His emerald eyes were filled with love and his smile portrayed nothing but happiness and warmth. \n\n\"Happy birthday babe.\" He whispered. His lips met mine and we shared a slow, passionate kiss. I tasted just the faintest hint of my juices in his mouth and tried to stifle a moan. I placed my right hand on his firm, furry chest, his skin was warm and inviting. Gradually, I let it drift lower and felt a steel pole tenting through his boxers.\n\n\"Go get ready for work.\" Rob whispered and stubbornly leaned away from my grasp.\n\n*\n\nI tried to have my birthday off, but was told that they needed all hands on deck. The country club was hosting its annual golf tournament. The top was down on my Jeep and the warm salty air whirled through my hair. I thought about my strange dream and tried to determine what it meant. It was a hodgepodge. It brought me back to my swim meets, but had a starting pistol like a track meet. I was drowning, but Rob had saved me. I was smiling, thinking about how Rob awakened me when I walked into the clubhouse. Ms. Grant met me at reception when I was clocking in.\n\n\"You're going to be getting the grounds ready with Eric today. Go meet him by the golf cart shed.\" Ms Grant watched me sign in and then hurried off. Eric had started working at the club when he had finished his summer class. We hadn't been around each other much but nodded politely when we saw each other. I headed out the side door, close to the shed and saw Eric pulling up on a green John Deere Gator. \n\n\"Guess you're with me today Bobby.\" Eric gave me a half smile as I walked around and took my place in the yellow passenger seat.\n\n\"What's on the to-do list?\" I asked hoping my mouth bore the semblance of a smile. \n\n\"Making sure the grounds are ready. Taking out the trash, making sure the ball cleaners have fluid, just making sure everything is presentable.\" Eric shifted the Gator into drive and we rumbled off to the first hole. We got straight to work and didn't talk much until we got to the fifth hole. I had just begun to pour golf ball cleaner into the dispenser when Eric started speaking. \n\n\"I'm really sorry for how I treated you and Rob.\" Eric shook out a new trash bag and looked away when I glanced at him. \"I just didn't know how, or if I could, express...\" He shook his head and threw a full trash bag in the back of the Gator. \"I was envious. You were so comfortable with yourself. I, well, I'm really sorry.\"\n\nI didn't know what to say. \"Thanks,\" was all I managed to get out. We rode in silence and mechanically did our chores on each hole. \n\n\"How about I take you and Rob out to for dinner tonight?\" Eric asked while I was bending over picking up broken tees from the 14th tee box.\n\n\"I don't think that'll work.\" I stood up and looked back at Eric. He had a disappointed look on his face.\n\n\"Bobby I don't expect to become friends over night, but I really am sorry and would like to...\" Eric stopped short when I shook my head and held up my hand with a smile. Seeing Eric like that made me somewhat happy. \n\n\"No, it's not that Eric. It's just that today is my birthday and I know Rob has something planned.\"\n\n\"Well shit, happy birthday Bobby!\" Eric smiled and patted my back on the way back to the Gator.\n\n\"Thanks.\" We traded some awkward banter and finished our work on the 18th hole. \n\n\"Come on lemme buy you lunch and a lemonade.\" Eric grinned as we pulled back up to the shed.\n\n\"You don't have to.\" I rebuffed.\n\n\"I insist birthday boy.\" Eric lightly punched my arm. \"Hope you don't mind eating at the snack bar. My mom would probably kick us out if she saw us dirty and sweaty in the dining room.\" Eric chuckled and I grinned.\n\n\"Nope that's perfect, I was craving a hot dog.\" We grabbed our food and headed over to a small table under one of the AC vents. I thought it would be difficult, but it was easy to be friendly with Eric. We chatted and I let all of our history wash away, it was water under the bridge. \n\n\"So I saw a picture of you with a guy on Facebook a while ago.\" Eric grimaced. \"Oh sorry...\" \n\n\"It's okay. He was the first.\" Never in my life did I think I would see Eric blush, but his cheeks turned as red as the comb on a rooster. \"Well you know... guy. We had some fun but it didn't work out.\"\n\n\"I got lucky with Rob.\" I must have had a goofy look on my face while I thought about Rob, because Eric started laughing.\n\n\"I think he got pretty lucky too.\" We both broke out into laughter and I saw Eric stop when he noticed others staring at us. \n\n\"Don't worry about them.\" I whispered and he nodded\n\n\"It's hard ya know? You always seemed so comfortable being yourself. It's been a struggle for me.\" Eric absentmindedly swirled a fry in a blob of ketchup.\n\n\"Eric if you ever need somebody to talk to give me a call.\" I picked his phone off the table and entered my number in the contacts. \n\n\"Thinks.\" Eric smiled.\n\n*\n\nSunday morning as I was getting ready for work I noticed Rob acting strangely. He kept picking up his phone and placing it down. He shrugged it off when I asked what was wrong. Today was the final day of the golf tournament which culminated in an awards banquet. Eric and I were going to be setting up for the banquet and I needed to hurry to work. I was required to wear khakis, topsiders, a white dress shirt, and a golden oval nametag because I was working inside today. \n\n\"Forgot your name again?\" Rob stuck out his tongue and winked when he saw me pin the nameplate to my shirt. \n\n\"Not yet.\" I punched his strong bicep as I walked passed him pausing for a brief kiss.\n\n\"You working tonight?\"\n\n\"Ugh.\" Rob's eyes darted back to his phone before settling back on me. \"I have some stuff lined up.\" \n\n\"Stuff lined up?\" I scrunched my eyebrows from his cryptic response, but he didn't elaborate. \n\n\"Don't worry, I'll see you.\" He smiled and kissed my cheek. \"You're going to be late.\" He was right. I grabbed my wallet and headed off to work. \n\n*\n\nThe atmosphere at the club was electric. The staff was hunkered down, catering to the golfers, members, or getting ready for the banquet. I found Eric in the dining room. \n\n\"Wow.\" It looked like Eric had been working on the room for a while. In the back of the room several long tables had been connected and draped in table cloths making it look like one long table. The circular tables were scattered around the room and had pressed table clothes. Empty vases stood on the tables and there were two large boxes of freshly cut flowers, and a couple more filled with various items in the corner. \"I didn't know I was supposed to come in early.\" I felt bad that Eric had done so much of the setup on his own. \n\n\"It's okay, knew we needed a head start so you could get out early.\" Eric shook open a banner and reached in a bag for some rope to hang it. \n\n\"Get out early?\" I asked, unsure of his meaning. \n\n\"Oh, I mean. You know. So we can get out on time.\" Eric amended. \n\n\"Well we have to stay to clean up anyway. So no rush I guess.\" I shrugged and walked over to a box and found printed name cards and began to fold them into little tents. \n\n\"Oh, you're off tonight. Call it a late birthday present. Once the banquet starts you can go.\" Eric smiled before he pulled out a walkie talkie. \"Hey Clyde can you bring the ladder in the dining room when you get a chance?\"\n\n\"Sure thing.\" Came a crackly voice from the speaker. \n\n\"I'm not going to leave you hanging Eric, I'll help clean up.\" I flipped through the clipboard sitting on the table and found the seating chart and set aside which cards were to go on designated tables. \n\n\"Whatever you say Bobby.\" Eric winked just as the ladder was delivered. \"Come hold the ladder so we can hang this banner.\"\n\n*\n\nOne perk to being busy was that the time seemed to fly by. We had just finished setting up the podium and plugging in the microphone when Eric's mom came in to check on us. \n\n\"Everything looks great guys\" She said and smiled. \n\n\"Bobby can you help me for a minute?\"\n\n\"Sure.\" I answered and followed her out of the room. \n\n\"Have a good night Bobby!\" Eric called after me, I started to shout back, but his mom glanced back and I stopped short. We have a special guest arriving on the private dock. Can you go outside and wait for them and tie them up when they dock?\"\n\n\"No problem.\" I answered and turned on my heel to head out back to the dock. \n\n\"Bobby.\" I stopped in my tracks and turned to face my boss. Her face was warm and bore a smile. \"You're a good guy. Thanks for all your help.\"\n\n\"You're we-.\" I started but she held up her hand to stop me.\n\n\"You've been working your butt off. Once you've finished with the boat I don't want to see you for a few days. Take some time off, you've earned it.\" She winked. \n\n\"Thank you.\" I wasn't going to look a gift horse in the mouth and quickly hurried out the back door. I was happy to get some time off, I just hoped Rob could get some time off too, maybe we could go to a movie or find a quiet place to park. I grinned as I thought of the wonderful memory. The sun was starting its decent in the sky, but it was a clear bright day. A round of cheers could be heard in the distance, the final groups of golfers were finishing up. The Chesapeake Bay was fairly calm, a light breeze stirred up a small wake. The pristine dock stood empty. I glanced down the harbor and saw a handful of boats pulling in or going out of the marina. I took a seat at the end of the dock, my legs dangled, my topsiders were inches from the water.\n\nThe water was relaxing. The warm sun radiated into my bones, the waves rhythmically lulled my senses, and I could have easily fallen asleep right there. An engine throttled down and I looked up to see a large boat slowing as it entered the harbor. I stood up and watched the boat as it approached. It looked familiar, but I couldn't place it. I saw nice boats come in and out of the harbor every day at work. It wasn't until I saw Skip emerge and throw me the bow line that I realized who had arrived.\n\n\"Y'all here for the banquet?\" I shouted before Captain Cliff cut the engine. I ran to the back to tie the stern line and got a glimpse of the Captain. He had a warm smile on his face, but he didn't toss me a rope.\n\n\"Nope. We have bigger and better things to do Bobby.\"\n\n\"You do?\" I asked, not sure what he meant.\n\n\"We do, but I'll let this young man fill you in.\" Rob stepped around the center console. He was dressed like I was, wearing topsiders, pressed khakis, and a white dress shirt. \n\n\"What are you dressed up for?\" I shouted and returned Rob's grin. \n\n\"Hop on babe.\" Rob shouted while skip jumped on the dock and untied the bow line before jumping back onboard. Cliff and Skip were both dressed nicely as well. Captain Cliff was wearing a white knit shirt under a blue blazer with tan colored linen pants. Skip had on a short sleeve linen shirt and khaki shorts. \n\n\"What's going on?\" I questioned and looked at the three of them. They all had goofy smirks on their face and I finally settled my gaze on Rob. \"Well?\"\n\n\"Well I knew you'd be tired from working all day, so I arranged a nice relaxing boat ride for us.\" He held out his hand and I took it and he led me to a seat near the bow. He wrapped his arm around my shoulder, and I leaned into the comforting embrace. Skip kept stealing glances and laughing when I caught him, he eventually went to stand beside the captain.\n\n\"This is nice.\" I whispered in Rob's ear. \n\n\"It is.\" Rob whispered back, his steamy breath sent conflicting chills down my spine. His lips lightly brushed against my ear as he spoke. It didn't take long for us to reach the mouth of the bay. An undisturbed sandy beach was broken only by the Chesapeake Bay Bridge Tunnel that connected the Eastern Shore of Virginia to the mainland. The sun was creeping closer to the horizon and the shadows were dark as we passed under the bridges and crossed from the bay and into the Atlantic Ocean. We weren't heading out to sea, or in the direction of Virginia Beach. Instead we adjusted our bearing north and hugged the shore. \n\nWe rode in silence and I enjoyed relaxing, leaning into Rob. The passing boats all waved and we returned the gesture as we continued our leisurely ride. Faint lights were flickering in the distance. Captain Cliff slowed the boat and our wake jostled a lonely sailboat anchored in a cove. Memories flooded my mind when I realized we were approaching the beach where Rob and I shared a romantic evening. Embers rose above a small bon fire. Shadowy figures began to become recognizable. I turned back just as I felt Rob's strong arms wrap around my waist. He had a grin on his face and his eyes were glistening with unshed tears.\n\n\"What is this?\" I whispered. Rob didn't answer, just held me tighter. Captain Cliff pulled the boat up to a dock that had seen better days. There was a small inflatable boat tied to the other side. Skip jumped out and quickly tied the bow and stern lines. Captain joined Skip on the dock and they walked over to the gathered crowd. I saw my parents, my sister, Rob's mom and dad, his Uncle Charlie, Billy, Katy, Clint, Matt, and Chase. There were others in the shadows that I couldn't quite make out. \n\n\"Robbie?\" I tried to speak, but became overwhelmed and fought back tears. Rob took my hand and we climbed out of the boat and onto the dock. All eyes were upon us as we made our way to shore. Rob was about to step onto the beach but stopped and turned to face me. \n\n\"Bobby.\" Rob spoke and my hands started shaking.\n\n\"Rob-.\" I felt his finger brush against my lips before he took my hands in his, sending static waves jolting through me. Rob started kneeling down and I fell to join him, my breath was stolen. His green eyes were on the brink of spilling over. I felt hot tears streaming down my face while Rob smiled his handsome smile. \n\n\"Bobby.\" Rob cocked his head and stared appraisingly at me. \"Thank you.\" He started and I grinned. \"You are the love of my life. You are without a doubt the greatest thing that has ever happened to me. I know beyond a shadow of doubt that I want to spend the rest of my life with you. Who would have thought that that day in the convenience store would have started all of this?\" I watched as a single tear trailed down his right cheek, gently coursing its way down his stubbled face. Rob released my right hand and reached into his pocket. I used the reprieve to quickly wipe the tears out of my eyes, but my attempt was futile and they continued to fall. I inhaled deeply and expected to see my old ring as Rob opened the lid on the small box in his hand. There was a matching pair of glistening rings. The firelight was flickering and I hesitated when I realized that these were not our original rings. They were slightly wider, and a different metallic shade. These weren't Rob's promise rings. They were proper wedding bands. \n\n\"Bobby.\" Rob's eyes were still fighting back tears and his lip and jaw had a slight tremble as he fought his emotions. \"Will you marry me?\"\n\nI tried to answer, but was overwhelmed. Rob, the man I loved, had just proposed. I nodded vigorously as tears streamed down my face. It felt like an eternity before I gathered myself and was able to answer.\n\n\"Of course I'll marry you Rob. I love you.\" Rob leaned in and his moist lips were sealed on mine. His tongue gracefully slid into my mouth to tease mine. I was on the highest of highs. I felt weightless, adrift in space as Rob's tongue explored my mouth. Applause and whistles brought me crashing back to earth. Rob and I stood and I noticed his face was awash in tears. Relief, joy, and love lit up his face as he took my hand and we stepped onto the beach. \n\n\"Lose the name tag.\" Rob whispered out of the corner of his mouth. I chuckled and unpinned the badge and slipped it into my pocket. \n\nAdrenaline coursed through my blood and my eyes quickly took in my surroundings. There was a table set up with drinks a two layer wedding cake with two grooms perched proudly atop. A white wooden trellis stood between the lulling waves and the crackling fire. Our family and friends all smiled at us as we approached. Captain Cliff stood to the side of the fire. I followed Rob as we walked to the trellis.\n\n\"Now?\" I asked. I was more than ready for this, but the abruptness had caught me off guard. Rob's laugh broke through the silence and he nodded and grinned. I suddenly realized that we were standing under the trellis and squeezed Rob's hand tightly. He squeezed back and I felt reassured. \n\n\"Rob had planned to do this out at sea...\" Captain Cliff began to speak, but paused briefly. \"But thankfully The Supreme Court has made this a little easier, as same sex marriage is now legal in The Commonwealth of Virginia. ",
        "\"About damned time.\" Clint roared as others clapped and whistled. \n\n\"For those of you who don't know me, I'm Captain Cliff. That there is Skip. He pointed and Skip waved and rolled his eyes mockingly to muffled laughs. \"I haven't known Rob and Bobby long, but in the brief time I have, one thing is abundantly clear. These two are in love. I have never seen a more natural bond than the one they share.\" Cliff paused and faced us. \"I wish you two nothing but the greatest happiness in life.\" Rob adjusted his gaze and our eyes locked. I developed tunnel vision and had to fight to listen as Captain Cliff spoke.\n\n\"As the tides ebb and flow so to, do the fortunes of life. Footprints in the sand are washed away, driftwood moves on its endless quest for a peaceful harbor. Only a deep and abiding love can withstand the tides of change in two lives. The love of Rob and Bobby is enduring and profound. We gather here to witness this love and the vows they make to each other. To avoid confusion, I will be a little less formal and won't call you both Robert.\" Captain Cliff paused and the onlookers chuckled. \"I'll stick to Rob and Bobby. Today you join yourselves together for life, as friends, lovers, and husbands. As the surface of the sea is sometimes calm and often storm tossed, so also, is a marriage.\"\n\n\"Rob, repeat after me. I pledge to you, Bobby, that my love and my loyalty, will weather the storms of life. I will always seek counsel when I make decisions, and will respect your needs and concerns. No matter what course we set, we will do it together.\" \n\nI listened to Rob repeat the vows and my eyes again flooded with tears. I knew that he meant every word.\n\n\"Bobby, repeat after me. I pledge to you Rob that my love and my loyalty, will weather the storms of life. I will always seek counsel when I make decisions, and will respect your needs and concerns. No matter what course we set, we will do it together.\" \n\n\"Do you have the rings?\" Captain Cliff asked and Rob handed me his. \n\n\"Rob repeat after me. Bobby I give you this ring as a symbol of my commitment to you, as powerful and endless as the sea.\" \n\nRob took my hand and repeated the words before sliding the ring onto my left ring finger. My heart swelled and once again my vision blurred from a steady stream of the happiest tears I have ever known. \n\n\"Bobby repeat after me. Rob I give you this ring as a symbol of my commitment to you, as powerful and endless as the sea.\"\n\nRob held out his left hand I happily slid the ring on, cementing our bond.\n\n\"Barring any objections.\" Captain continued and you could've heard a pin drop when Rob's father stepped in front of the bon fire. His face was stern and Rob's grip threatened to rip off my fingers but I squeezed back and stood stoically beside him.\n\n\"I would like to say something.\" Mr. Johnson's voice was hoarse, filled with gravel. Rob's grip somehow tightened further on my hand and I squeezed back, trying to soothe him. \"I won't pretend to understand this, but if this is the only way I can have you in my life.\" He paused and looked at both of us. \"Then I will do my best to support you.\" His eyes locked on mine. \"Both of you.\" A collective breath was exhaled and Rob's grip loosened as his dad approached. Rob maintained grip on my hand as his dad gave him a hug. I faintly heard him whisper \"Forgive me son?\" before he kissed his son on the cheek. I was caught off guard and squeezed Rob's hand tightly when his dad pulled me into a hug. \"Welcome to the family son.\" He whispered in my ear before patting my back, a little harder than necessary. I glanced out into the crowd and noticed Rob's mom and my mom holding each other, both crying. My dad caught my eye and nodded warmly. Mr. Johnson faded into the group and I noticed him pull his brother into a hug before standing beside Mrs. Johnson. Finally, I let my gaze settle on Rob and saw streaks of tears gushing down his handsome face. \n\n\"Without further ado.\" Captain Cliff resumed. \"Because you, Rob and Bobby have showered our hearts with expressions of your love, and promised each other the joy of all your days. By the virtue of the authority vested in me under the laws of the Commonwealth of Virginia, it gives me great honor and pleasure to now pronounce you husband and husband. You may kiss your husband.\" Cliff stopped and we were showered with cheers and applause. I felt Rob's strong arms wrap around me and tilted my head so our lips could meet. His tongue passionately explored my mouth and I could feel his love as he ravaged my mouth. I poured my emotions into the kiss and squeezed him as tightly as I could. I could feel my arousal straining my briefs and Rob shifted ever so slightly and I felt his unmistakable bulge. Whistles brought me back the present and I felt heat rush to my cheeks hoping our friends and family couldn't see our packages. Rob broke the kiss and smiled a knowing smile. I bit my lip before grinning broadly. We had done it. We were married! \n\n*\n\nThe fire was still roaring and people danced joyfully, possibly drunkenly around it. Rob's eyes flickered with a different fire, a passion that was glowing on his face. \n\n\"Thank you all for coming.\" Rob shouted, slowly gaining everyone's attention. \"We are grateful that you could share this experience with us.\" He took my hand and I nodded and waved briefly.\n\n\"Go make babies!\" Clint shouted and I saw Matt nudge him with his elbow. I didn't need a mirror to know that my face had flushed red. More cheers followed as Rob took my hand and lead me back to the pier. I started to walk to Captain Cliff's boat, but Rob pulled me aside, close to the small inflatable dingy.\n\n\"Where are we going?\" I whispered, feeling our guests' eyes following us. \n\n\"Our honeymoon awaits hubbie.\" Rob grinned and held out his hand for me to hold as I stepped into the dingy. He pulled the hand-crank and the small Mercury motor rumbled to life. A small stream of water flowed out of the engine and I untied the bowline as Rob untied the stern. We quickly made our way to the sailboat I had seen when we pulled in. It was old, but looked to be in great shape. The wood shined and there appeared to be a fresh coat of paint. The sails were down and it looked peaceful in the quiet cove. There was a small plank and we quickly tied up and climbed the ladder onto the deck. Rob ran to the console and flipped a switch and strands of Christmas lights flickered to life, lightly illuminated the deck. It was beautiful. I could faintly hear music drifting from the beach and held out my hand to Rob. He didn't hesitate and took it, pulling me close as we shared a quiet dance. The boat lightly swayed as we lazily moved our feet over the teak wood. My eyes were closed while I cherished the feeling, relishing the fact that Rob and I belonged to each other. I felt his lips brush against my cheek and glanced at him. \n\n\"Be right back.\" He whispered before disappearing through a small door. The sea-breeze was cool against my skin. \"Come on down.\" Rob called and a chill went through me. \n\n\"You've been busy.\" I said as I ducked and took the final step into the bedroom. Orange rose pedals covered white linens on the large, perfectly made bed. Two side tables were glowing with candles inside of lanterns that created prisms of light that bounced around the wooden interior. Rob kicked out of his shoes and I mimicked him. Outside the small window I could see faint lights from the reception on shore. \n\n\"You approve?\" Rob asked, grinning. \n\n\"Of course, it's beautiful. Whose is it?\" \n\n\"Skip bought it and restored it. He was gracious enough to let us use it.\" \n\n\"Wow! That's so nice of him.\" I smiled and Rob pulled me onto the bed.\n\n\"Sorry I didn't let you in on the plan. Are you mad?\" Rob held both of my hands and looked serenely into my eyes. His eyes gushing with sincerity. \n\n\"Mad?\" I laughed. \"No Robbie, I'm not mad. I was surprised, but was so ready for this. It's perfect. I love you.\"\n\n\"I love you too.\" Rob's emerald eyes began to pool with tears. \"I'm just so happy. I can't believe you are my husband. It's surreal.\"\n\n\"I love you.\" I whispered and used my thumbs to wipe away his tears. Rob so rarely cried it was sweet to see him let go. His stubble tickled my hands as I held his cheeks. I dove in quickly and let our lips mingle. A happy moan left Rob's mouth and our arms entwined us into a tangled cocoon of warmth. I opened my mouth and tasted Rob's tongue, as I invited it in to play with my own. I felt my shirt being untucked before Rob's strong fingers started roaming my chest. My body shivered when he pinched my left nipple and a muffled laugh passed from his mouth to mine. \n\n\"Hey watch it buster!\" I laughed and he flashed a toothy grin. His white teeth glistened in the flickering light from the lanterns. \n\n\"Whatever you say husband of mine.\" Rob began to unbutton my shirt before sliding it off my back and arms. His tongue sensuously licked his lips as he took at my bare chest. I returned the favor and deftly unbuttoned the mother of pearl buttons on his shirt and opened it. \n\n\"You shaved.\" I gasped as I looked at his chest, he had trimmed it back which showed off his firm pics and chiseled stomach, but he wasn't clean shaven. \n\n\"Wanted to look perfect for you.\" Rob answered, I must have had a shocked look on my face because he looked concerned. \n\n\"You are perfect.\" I grinned before tugging at one of the newly trimmed hairs around his right nipple. \"But I like my man hairy.\"\n\n\"Hey!\" Rob winced and I bent down and kissed and licked the sting away. He must have like it because his nipple quickly hardened from the attention. Not wanting to neglect the other nipple I lightly nibbled on the nub. I could feel the mattress bounce as Rob squirmed from the sensation. His newly trimmed chest was a new sensation. Tiny prickles teased my tongue as I licked and tasted his flavor. His taste and smell always revved my motor. I paused and kissed my name over Rob's chest before I quickly licked up his neck while he rubbed my back and egged me on. His warm hands slid inside the waistband of my briefs and he cupped my firm buttocks. \n\n\"Robbie.\" I sighed and quickly undid the button on his khakis. With a new urgency I felt Rob's hands slide out of my underwear as he struggled to undo my own khakis. Our legs flailed as we tried to kick free of our pants. Rob had a large bulge in his boxer briefs and a muffled grunt left my lips before Rob reclaimed them with his own. We had turned frantic, desperate. We twisted and tumbled on the bed. Moans and grunts were muffled behind sealed lips and tangled tongues. I felt my body sink into the bed when Rob gained control and climbed on top of me. His lips were swollen and his expression was ravenous. \n\nWithout hesitation I reached out and cupped his plump balls through the tight black boxer briefs. He leaned back and moaned approvingly. I slowly stroked up his swollen shaft feeling his inflated glans beneath the fabric. I felt moisture and paused to rub his slit until a small wet spot started to form. \n\n\"Tease.\" Rob huffed. I smiled and brought my finger to my mouth, and seductively licked the precious fluid that had escaped his slit. \n\n\"Who me?\" I winked before grabbing the top of his waistband and pulling his underwear down below his balls. His hard cock leaped forward and stood proudly, engorged with blood. The skin on his glans was swollen and tight. \"Come here Robbie.\" I whispered and tapped my chest as he slowly moved forward, his proud cock slowly sliding closer to my mouth. My tongue involuntarily slid out and wetted my lips. Rob's plump glans brushed against my moistened lips and I pushed them out to kiss his engorged mushroom tip. \n\n\"Oh yeah Bobby.\" Rob encouraged as I extended my tongue and teased his delta. \"Fuck.\" Rob husked while I opened my mouth and felt his rigid shaft enter my ravenous mouth. The flavor was exquisite and I quickly had his tool glistening in my saliva. I wrapped my right hand around his thick tube and began to bob up and down. \n\n\"Suck me babe.\" Rob closed his eyes and groaned. I could taste a steady flow of sweet pre as it trickled out of his slit and I moaned as it saturated my taste buds. I felt the slick skin slowly slide out of my mouth and sucked in trying to keep him in my mouth. An audible pop filled the small room when Rob's glans escaped my lips. I felt Rob's hand below my chin as he lifted it and bent down to give me a quick, chaste kiss. \"You're going to make me blow babe.\" He smiled and gradually slid back down the bed. His breath was steam as it ghosted down my neck. Rob's satiny soft lips settled at the base of my neck and I felt the suction as Rob brought blood to the surface of my skin. \n\n\"Isn't the ring on my finger enough?\" I teased. Vibration rippled through my skin as Rob blew a raspberry before his lips continued on their journey south. His nimble tongue darted across my nipples before quickly moving down my chest and tracing the terrain of my firm stomach. Rob slid further down and I felt his warm breath through the fabric of my briefs. \"Robbie.\" I pleaded and he looked up at me, mischief twinkling in his emerald eyes. \n\n\"Lift.\" Rob commanded when his strong fingers slid inside the waistband on my briefs. Eager to remove the obstruction I lifted my hips as Rob slid my underwear off and tossed them on the floor. Quick warm kisses tickled and teased from the base of my shaft to the swollen glans. A warm, wet heat enveloped my cock and my head plunged back into the pillow behind me. \n\n\"Oh shit Rob.\" I moaned. Rob's tongue darted and swirled around my raging erection as he enthusiastically sucked up and down my slick shaft. Rob knew just how much pleasure to deliver to keep me on the brink, but slowed down just before I reached the precipice. Cool air contrasted the warmth of Rob's mouth when he released my dick. Steamy breath hit my balls before Rob's lips wrapped around, first my right and then my left testicle. My scrotum was tight as he gently sucked and tugged on my balls with his mouth. \n\n\"Flip over babe.\" Rob growled. It took a second for my brain to comprehend what he was saying, but I quickly rolled over and pulled my knees up and steadied myself on all fours while the mattress squeaked beneath us. Rob's palms cupped my ass cheeks before he spread them wide, exposing my puckered hole. Nerves fired, coming alive, as the precise tip of his exquisite tongue slowly traced my delicate halo. My head dropped and rolled while Rob lapped and loosened my entrance. \"You taste so good.\" I heard before I felt his strong fingers massaging my back as his tongue continued its pleasurable assault on my defenses. He alternated between lapping my hole with broad strokes, or forming a drill and penetrating me with his moist tongue.\n\nI felt the mattress shift and turned around to see Rob rummaging for something on the floor. He was grinning when he turned around holding a small packet of lube. He gave it a quick shake before he tore the top off of the packet. I faced the headboard just as a slick finger rubbed the cool, clear liquid on my tight hole. I took a sharp breath when the finger gently, but firmly lanced my hole. \n\n'Robbie.\" I sighed as it wiggled and lubricated my insides. I groaned as it slipped out, but knew that something far better would quickly replace it. The wait was gracefully short and I soon felt Rob's thick, swollen glans resting, lightly brushing my anxious hole. A subtle pressure slowly built into a gentle, deliberate force, a battering ram seeking entry inside my defenseless sheath. \n\n\"Oh Robbie.\" I sighed and shivered when his engorged head burst through my tight, muscled ring, and gradually, glided down my channel, sending glorious sensations shuttering like current through my body. Rob was patient and moved with a steady, deliberate pressure. Slowly I felt his pubic hairs brush against my ass before Rob was planted deep inside me. Rob's chest radiated heat when he adhered it to my back. Thick, strong arms wrapped around chest. I could feel a slight prickle or two where his trimmed chest hair tickled my skin, adding to the full body stimulation. Warm lips kissed my neck before nibbling on my ear lobes. Rob's warm breath and grasp comforted and aroused me. My cock was straining, standing fully erect. I looked down to see that a drop of pre was dangling precariously from my swollen tip. \n\nSlowly, Rob's magnificently magic wand began to perform. Rob's hips thrust rhythmically and like a conductor performing a symphony, Rob hit all of the right notes. This had to be one of the biggest perks of being married, Rob knew exactly what I liked and how to push all of my buttons. My body was alive, a trembling nerve as Rob's thick cock connected with my prostate, sending electricity jolting down my pleasure pathways. My arms got weak, but Rob held firm as he continued pumping, piston-like into my needy hole. My dick was steadily leaking precome, I was desperate to come. I knew the slightest friction would cause me to spew my load onto the bed below me. Seemingly reading my mind, Rob lifted my arms, and held my chest up. His head moved forward, his face bore a fierce, determined look. His lips met mine and we furiously kissed. It was frantic, tongues were fighting for control, a tangled, sloppy kiss. I leaned further back into Rob's chest and tried desperately to reach my swollen rod. \n\n\"Please Robbie.\" I begged which caused him to thrust harder, and deeper inside me. \"Oh yeah Robbie. Fuck me harder.\" I moaned. There was no wasted energy, every lunge drove me closer to the brink. With every piston of Rob's swollen shaft we moved closer to the headboard of the bed. I reached out and braced myself on it to keep from slamming into it. Rob held my back tightly against his chest and continued his glorious assault on my guts. A tight fist wrapped around my glans, causing my body to shudder from the sudden contact. I lost control and felt the first of my seed rocket out of my slit. A thick strand of pearly-white jizz contrasted with the mahogany headboard as it slowly trickled on the bed. Rob was thrusting furiously and my ass involuntarily clamped onto his battering ram. \n\n\"Husband.\" I gasped as strobe lights filled my vision. I could hear my heart drumming in my ears. I panted and felt Rob's torpedo swell inside me before firing its payload deep inside me. \n\n\"Oh fuck Bobby!\" Rob bellowed. \"I love you Bobby. My husband.\" He panted while his seed flooded my guts. Our skin was slick with sweat and we both gasped for air. Rob's fist finally released my sensitive cock and I watched as he mischievously examined it. There was a thick rope of my juices dangling between his pointer and middle fingers. I watched attentively as his tongue darted out of his mouth and claimed my semen. Rob's deflating cock slowly escaped my tight hole. I turned around on the bed to face Rob who wrapped his arms around my back before pulling me in for sensual kiss. I tasted the familiar taste of my seed in his mouth and we lazily kissed until all of the remnants dissolved. \n\n*\n\nThe red sun of dawn flickered through the windows of the boat. The gentle rocking of the boat was soothing. Rob's tight grip on me had diminished during the night, but his arms were still draped lovingly over my body. I rolled over so I was facing my handsome husband. His nose crinkled as if he had an itch and I quickly leaned in and kissed the tip of it.\n\n\"Morning husband.\" I whispered when I was greeted by Rob's glistening green eyes.\n\n\"Good morning husband.\" Rob's smile was full and he pulled me tightly to him and kissed my lips. \"Oh shoot.\" Rob shook his head and jumped off the bed. I watched as he rummaged through his clothes before removing a small package. It was wrapped in simple brown paper and had a twine bow.\n\n\"What's this?\" I questioned gazing at the package.",
        "\"Only one way to find out.\" Rob grinned and kissed my cheek while he sat back on the bed and watched me attentively. The package was a perfect cube, no larger than two inches per side. \"I was going to give it to you for your birthday, but didn't want to ruin the surprise.\" I quickly untied the bow and threw the twine at Rob who caught it with a grin. The paper was easy to tear off and I stared as the glass cube in my hand. I twisted and studied it. Inside the box were two interconnected rings. \n\nThey couldn't be. I thought to myself. I kept twisting the cube in my fingers. I glanced at Rob who was smiling warmly at me.\n\n\"They are.\" He whispered.\n\n\"Our promise rings?\" I answered. Still gazing intently at the treasure in my hands. \n\n\"Yup.\" He answered flatly. \"It was kind of cool how the jeweler connected them. I knew I was going to get you a new ring, but didn't want to get rid of these.\"\n\n\"That's so sweet Robbie.\" I wrapped my arms around my husband's muscular body. \"Thank you.\" I kissed his cheek. \n\n\"I love you Bobby.\"\n\n\"I love you Rob.\"\n\n*****\n\nThis story will conclude in chapter 17.\n\nThank you for reading. Please let me know what you think."
    ],
    "authorname": "VaRiverWriter",
    "tags": [
        "gay",
        "gay male",
        "mm"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/plotting-a-course-ch-16"
}