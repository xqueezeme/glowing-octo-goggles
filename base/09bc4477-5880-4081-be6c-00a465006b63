{
    "title": "The Priest's Virgin Concubine",
    "pages": [
        "<p align=\"center\">The Priest's Virgin Concubine<br>== || &lt; &gt; || ==<br>~~ All characters in this book are over 18. ~~<br>== || &lt; &gt; || ==</p><br>\n\n<br >\n\n\n\nChapter 1: Help Wanted\n\n\n\n\"Ah, Father Kelly.\" The wrinkled face of the secretary peered around the corner and into the waiting room. \"Come in. Bishop Whitford will see you now.\"\n\nIt really wasn't fair, Justin Kelly thought, as he stood and made his way into the office of the Catholic Bishop of Peoria, that after four years of college and another four of seminary school, a priest still had to go through the process of applying for a position, the same as any other college graduate who left college with a diploma clutched in one fist and a pile of student loans in another.\n\nYou would think, he thought wryly, that after two thousand years the Church would have figured out a better way of doing things.\n\n\"Father Kelly, My Lord.\" The secretary gave him a stern look, as if he were a child who couldn't be trusted not to be rude, and closed the door behind her.\n\n\"Kelly, yes.\" The gray-haired man behind the desk waved a hand. \"Sit, please.\"\n\n\"Thank you,\" he hesitated. \"My Lord.\"\n\nBishop Whitford snorted softly. \"Melissa thinks that she has to remind everyone who comes in here of my exalted rank. Please. Sir will do. Bishop, if you must.\" Faded blue eyes twinkled. \"Or you could just call me John.\"\n\n\"Yes, sir.\"\n\n\"Good enough.\" He picked up a piece of paper. \"You come to us from Mundelein, eh?\"\n\n\"Yes, sir.\"\n\n\"Like it?\"\n\n\"Very much, yes, sir.\"\n\nBishop Whitford looked at him over the rims of his glasses. His face was suddenly intent. \"And why do you want to be a priest, Father Kelly? Why should I put the souls which are my charge in your care?\"\n\nLuckily, his seminary training had left him ready for this question. The priests at the University of St. Mary of the Lake, commonly known as Mundelein Seminary, didn't let anyone graduate who didn't have a vocation stronger than steel. And they spent many of their waking hours rooting out those who thought being a priest was a road to an easy life where the hardest thing you had to do was say mass every morning.\n\nHe leaned forward, trusting that his face would betray none of his inner nervousness. \"I come from a family that has sent many men into the priesthood, sir. My own grand-uncle was our parish priest back home, before he passed away.\n\n\"I first thought that I might have a calling when I was in middle school. By the time I was in high school, I was sure of it. It wasn't a sudden revelation. I simply knew. That I was needed. That a life of service to God also meant a life of sacrifice, but that I was ready to lay my life down on His altar.\"\n\n\"And what did your family have to say about this?\"\n\n\"At first they thought it was just a phase. Something that I would grow out of, the same way young girls grow out of their fascination with boy bands as they grow older.\" He smiled in wry remembrance. \"Even when I was in college, my mother kept asking me if I had met a nice girl yet, and I kept telling her that no, I hadn't, because I was going to be a priest, Mom.\" He snorted. \"Sometimes I think she suspected that I was gay, and that wanting to be a priest was a cover-up.\"\n\n\"Are you?\" Bishop Whitford asked mildly.\n\n\"No.\" A single, flat word.\n\nWhitford studied him, then nodded once. \"Good. I'm not saying being homosexual makes a man a child-molester. But some people can't seem to distinguish between the two. And the good Lord knows we've had enough trouble where that's concerned. I'd rather not have to deal with the fallout from that sort of thing, thank you very much.\"\n\n\"I would think the better idea would be to get rid of the pedophiles who think that being a priest gives them an easy way to prey on the weak,\" Justin said.\n\n\"Yes, yes.\" The bishop waved a hand vaguely. \"Unfortunately, they don't come in here with 'pervert' flashing over their heads in bright red letters, son.\" His mouth set. \"So maybe you let me do my job, all right?\"\n\nJustin took a deep breath, then let it out slowly, hiding his irritation. If the bishop noticed, he ignored it. \"Hmmm. Well and so. Your instructors at Mundelein speak well of you, true enough. 'An agile and flexible mind,' Professor Taub says. 'A man who isn't afraid to think for himself, or to say what he thinks.'\" He grinned. \"Got into a few sparring matches with the old goat, did you?\"\n\nJustin flushed, though part of it was pride. Professor Taub had been one of his professors in theology, and one who delighted in playing devil's advocate, taking up contrary, sometimes even heretical positions, in order to sharpen his student's skills. His sharp mind and acid wit made debating him a hazardous practice. But Justin had managed to pin him down a time or two. \"If every professor had been of his quality, sir, my time at Mundelein would have seemed much shorter.\"\n\n\"Or actually been much shorter,\" the bishop said with a laugh. \"God knows he doesn't suffer fools gladly. Or at all. One of him is enough. Many more, and the dropout rate would triple overnight.\"\n\n\"You know him, sir?\"\n\n\"We went to graduate school together, when we were both a lot younger. He decided to stay on the academic path, while I went into administration. Pity, really. With a mind like his, he'd probably be an archbishop now. Maybe even a cardinal. Of course,\" he said, \"maybe it's for the best. Brian always hated the political side of things. All he wanted was to study and learn, and to pass what he learned on to others.\n\n\"Well.\" The shrewd eyes studied him. \"We can definitely use you, Father Kelly. You probably know that it's standard practice for a new priest to be sent to a larger parish. Preferably one with several other priests who can help him get his feet wet before he is given a parish of his own.\"\n\nJustin nodded.\n\n\"But I've got a bit of a problem on my hands.\" Whitford steepled his fingers. \"Tell me, young man. Have you ever heard of Fertile Valley?\"\n\nHis brows knitted. \"Fertile Valley? Illinois? No.\" It seemed a strange name for a town in a state that wasn't exactly renowned for its high mountain peaks and lush valleys.\n\n\"Yes, Illinois. It's a small town, well south of here, down near the rivers. Not a big place. Twenty-five hundred, maybe three thousand people. Farm town, you know? Set in their ways, don't like change. Your people would mostly be German and Irish Catholics who came over from the old country two hundred years ago and haven't moved since, with a few Swedes and Norwegians pitched in. They had the same parish priest for nearly forty years. But Father Snodgrass retired last fall and moved out to New Mexico.\n\n\"Since then, I've sent three priests there. None of them lasted more than six weeks.\" He shook his head. \"You get that, sometimes. A town just doesn't take to the stranger, and I'm not going to make a man stay in a place where he's not wanted. No one is happy, and before you know it, half the church has walked away and found someplace else to worship. Or decided that it would be a lot nicer to sleep late in Sundays.\n\n\"Last week, after Father Cobden requested a transfer, I received a letter from the head of the Woman's Auxiliary. Very polite it was, too, but it didn't take too much to read between the lines. They want new blood, not an old priest who has bounced around half the country and isn't good enough to settle anywhere. Someone,\" he lifted a piece of paper, and read, squinting, \"'someone who is not so set in his ways that it would take a forklift to get him out.'\" He smiled mildly and put the paper down again.\n\nJustin blinked. \"And you chose...me?\"\n\n\"Why not? You're young, just out of the seminary, and you even have a talent for preaching a decent homily, if what I hear is true. I know it's not a place where a young man with a lot of ambition goes, but there's nothing that says you can't request a transfer in a couple of years.\n\nThe older man leaned forward. \"I'll be honest, Justin. You'd be doing me a favor if you took this position. St. Catherine's isn't a troublesome parish. They're good, hardworking people who don't cause a lot of bother. Not like some parishes, where everyone starts screaming bloody murder every time a gay couple gets married. I just need someone who can mind the house for a while. And after a year or two, if you're not happy there, I'll send you to a parish more to your liking. Chicago, St. Louis, someplace where you can stretch your wings, if you have a mind.\"\n\nJustin shook his head. \"No, sir. St. Catherine's will be fine, I'm sure.\" He smiled crookedly. \"My hometown isn't very big. I didn't really enjoy living in the Chicago area, to be honest.\"\n\nWhat he didn't say was that having a bishop's favor in his pocket was something valuable. Something that could be cashed in later on in his career, if he wanted to. And on the flip side, he didn't want to be known as someone who thought he was too good to take a posting at a small-town parish. According to shop talk at Mundelein, that was the sort of thing that could follow a priest forever, and wreck his career before it began.\n\nAnd besides. My own parish! Not taking orders from some old war-horse who has been there since before the Second Vatican Council, and thinks the mass should still be in Latin.\n\nSo he squared his shoulders, looked Bishop Whitford square in the eye, and said, \"I'll take it, sir. When do I start?\"\n\nThree days later Justin was driving south down the interstate, all his worldly possessions packed into the trunk and the back seat of his old Plymouth. The windows were down, and warm spring air ruffled his hair, almost drowning out the sound of the ballgame on the radio, where, the good Lord be thanked, the Cardinals were beating the unholy bejesus out of San Diego.\n\nMy own parish. Finally. There had been times when he had thought that this day would never come. The confusion of his family. The jeers in high school. The times in college when he had been tempted, so tempted, to put aside his calling and do something easier. Something that would not require him to live a life of chastity and abandon any chance of a wife and children of his own. The harsh years in the seminary, when many of the instructors had seemed almost spitefully eager to drive him away. But all of that was forgotten now, lost in the thrill of his first posting.\n\nHe left the interstate at Marion, cutting west towards Carbondale, and then turned south again, guiding the car down a narrow two-lane highway. Crops were in the fields on either side of the road. Mostly corn and soybeans, the twin pillars of Illinois' agriculture industry, but there was also wheat, coming up from the ground in pale green shoots, many weeks away from ripening to rich gold, and in some fields he caught the unmistakable aroma of alfalfa. The weather was warm, but without the awful humidity which would occur later in the summer, when it pressed down on you like an anvil. Eventually, the road began to rise and fall as it left the griddle-flat plains of central Illinois behind and entered the more hilly regions of the southern portion of the state.\n\nAfter a quick stop to stretch his legs, he was on the road again. The day grew warmer, and traffic was light. Once in a while, he passed through deep tracts of green woods, and the sounds of insects rose on either side of the car like a wave. A last climb up a steep hillside, and then he came to the summit. Warned by the beep of the GPS on his phone, he pulled the car over to the side of the road and got out to take a look. The day was almost eerily quiet, the silence broken only by the hum of cicadas in the underbrush and the soft sigh of the wind in the trees. He could smell the hot asphalt under his feet. Off to the northwest, the dim shapes of thunderheads, dark blue and smoky gray, were slowly growing.\n\nAt his feet, the road fell away in a long, gentle slope. A wide valley ran from northeast to southwest. It was widest in front of him, narrowing on either side. The afternoon light fell on dozens of fields, flung out like a rumpled patchwork quilt done in colors of brown and green and gold. A slash of deeper green showed where a large creek or small river ran through the valley, maybe the same one that had carved it millennia ago. In the distance, perhaps five miles away, he could glimpse the streets and houses of a small town. And in the middle, a white steeple of what might be his church. Far away, he could glimpse, on the edge of sight, blue hills that might be in Kentucky.\n\n\"Fertile Valley,\" he whispered. Somehow, the name seemed completely appropriate. He breathed in deep. The air was rich and strong and full of the smell of life and growing things. \"Well. Let's go.\"\n\nDisappointingly, the steeple he had seen from the hilltop did not belong to his church. Instead, the honor of having what was apparently the tallest structure in Dresden County belonged to the local Lutheran church, which occupied a corner lot at the intersection of Lincoln and Main.\n\nI'll have to do something about that, Justin thought with a grin, as he drove through the small business district. Can't have the local protestants looking down on us. Maybe a fire. Just a small one.\n\nHe shook off the thought as he looked around at his new home for the first time. Unlike some of the small, seedy towns, barely clinging to life, which he had driven through on his journey south, where the only thriving businesses seemed to be dollar stores, fast-food restaurants, and Wal-Mart, Fertile Valley seemed to be enjoying a quiet, low-key prosperity. The stores on Main Street weren't large, but they all seemed to be doing a steady business. There were no boarded-up storefronts, no whitewashed windows. He saw a hardware store, an insurance agency, a grocery, what seemed to be a pair of small restaurants, and a long, low, broad-fronted building whose sign simply read, \"Fertile Valley General Store.\"\n\nGood grief. I must have hit a time warp and come out in nineteen fifty-seven.\n\nBut no. All the cars on the street were modern, right down to the higher-than-normal amount of farm trucks that reminded him of his own hometown. And a pair of teenage girls that he passed were looking at their cell phones and laughing as they talked. As he stopped for a red light, they caught him looking at him and stared back, their expressions curious, but not hostile. Awkwardly, hoping he hadn't been gaping like an idiot, he turned away, but not before he heard their giggles.\n\nThe town wasn't large, and it didn't take him long to find his destination. St. Catherine's was a church in the old style, foursquare and solid, built of brick, with a modest bell-tower painted white and shingled in green. As Justin parked his car in the freshly-sealed asphalt parking lot, he could see the squat shape of the rectory off to one side, which gave the building a slightly lopsided look.\n\nTo his surprise, the front door of the church was unlocked, and he let himself in. Inside, the building was cool and dim, smelling of beeswax and furniture polish. \"Hello?\" he called. \"Is anyone here?\"\n\n\"One minute!\" a female voice responded from down a short hall to his right. A few moments later, a door opened, and a middle-aged woman came out, wiping her hands clean on a dustrag. \"Can I help you?\"\n\n\"Hello,\" he smiled, determined to put his best foot forward. \"I'm Father Justin Kelly. The new-\"\n\n\"The new priest,\" the woman finished for him with a welcoming smile of her own. She cocked her head to the side as she examined him. \"A Kelly, eh? Irish, are you?\"\n\n\"Well, mostly,\" he replied. A phrase of his grandmother's came to mind, and he managed to put the faintest trace of Eire into his accent. \"And haven't we let a few strangers into the clan, to keep us respectable?\"\n\nThe woman put her hands on her waist and laughed. Justin judged her age to be around forty-five or fifty. She was of medium height, slim and rangy, with an air of bustling energy about her. Her hair was a rusty brown, worn past her shoulders, with a few silver streaks at the temples. There were smile-lines at the corners of her eyes, which were the color of corn leaves, and her face was kind. The face of your favorite elementary school teacher, maybe, endlessly patient as you struggled with fractions and state capitals. A small gold band graced the ring finger of her left hand.\n\n\"I'm Megan. Megan Murray.\" She offered her hand, and Justin took it. Her grip was warm and firm. \"Most people call me Meg. We thought you would be arriving today. So I wanted to take a quick look round and make sure that everything was ready.\"\n\nHe recognized the name of the woman who had penned the letter to Bishop Whitford. This was a woman it would not do to offend. \"And to get a look at me so you could tell everyone what I was like, if I happened to show up,\" he guessed with a smile.\n\n\"Of course,\" Megan agreed. She waved a hand. \"So. Do you want the dollar tour?\"\n\nHe nodded, and she led him down the hall. \"Schoolrooms down this way. We have Sunday school here in the morning before mass on Sundays. We used to have a Catholic grade school, but that was a long time ago,\" she sighed. \"Not enough money to pay the teachers.\" She pointed to a door. \"There's a big basement downstairs, where we have things like birthday and anniversary parties sometimes.\"\n\n\"That's nice,\" he nodded. \"And cooking facilities, I'm guessing?\"\n\n\"Lord, yes,\" Megan laughed. \"We have a big pancake and sausage fundraiser every spring. It brings in a lot of money for the church.\"\n\nThey walked back to the vestibule, where Megan pointed out the bathrooms. \"And here is your kingdom,\" she smiled, opening up the wide double doors at the end of the hall.\n\nThe worship area was almost stark in its simplicity. But it was still lovely in its spare beauty. Two columns of pews, made of heavy, dark wood and cushioned in red, perhaps fifteen deep, marched back on either side of a narrow aisle. On the left was an overhang for a choir. The windows were made of stained glass, deep and rich with dark colors -- gold and blue and red and green. To one side of the altar was a small baptismal font.\n\nIt wasn't fancy. It did not have any gold or gilt, any elaborate carvings or rich, heavy carpets. It was plain and solid and functional, just like the craftsmen who had built it long ago. But it was also, very plainly, loved. Every inch of it was spotless - the pews polished to a gleam, the carpet vacuumed, the hymnals set firmly in their racks, and the altar cloth a fresh, laundered white.\n\n\"Well?\" Megan's face was slightly lined with worry. \"Does it look all right?\"\n\n\"It's lovely,\" he said honestly.\n\nThe older woman's shoulders relaxed. \"Thank goodness. You should have seen Father Franklin when he saw it for the first time. He came here from a big church in Detroit, and I guess he was used to things being a little bit more...elaborate. His face looked like he had bitten into an apple and felt something move. I know we're not big and fancy, but we do our best.\"\n\n\"I'm sure you do. And remember, it's not the size, but...\"\n\n\"It's what you do with it?\" Briefly, Megan's eyes twinkled with a wicked gleam, and Justin could imagine her thirty years younger, listening to hair metal with a beer in one hand and a boyfriend on her arm. \"I never heard that applied to a church before,\" she grinned. \"And from a priest, no less.\" Her voice dropped into an Irish accent much more genuine than his own. \"Sure, and wouldn't your poor, sainted mother be ashamed of ye!\"\n\n\"Obviously, you've never met my mother,\" Justin replied. His face felt ready to burst into flames. Great. Prove yourself an idiot on your first day in town.\n\nBut his companion merely laughed. Outside, thunder rumbled. Megan glanced towards the windows. The stained glass hid the outdoors, but the light outside seemed to be fading, as if the thunderheads he had seen on the way in were drawing near. \"Good.\" Her voice held a sense of grudging approval, as if she were willing to give the universe credit for trying. \"We've been praying for rain for the last week. Now.\" She patted his arm in a proprietary manner. \"Let me just show you the rectory, and then I'll let you get settled.\"",
        "His living quarters were reached through a short, narrow hallway at the rear of the church, near his office. Megan opened a battered wooden door and stepped through, her eyes gleaming with pride. \"Here you are.\"\n\nIt was...perfect. The first place, Justin thought, that he could truly call his very own. Not a bedroom in his parents' house. Not a college dorm room. Not an apartment shared with three other guys. And definitely not the cramped student quarters at Mundelein, which half-resembled a prison dormitory. The door opened onto a surprisingly large living room, filled with furniture that was old, but of obviously good quality -- comfortable and well-worn. Through an open arch, he could see a kitchen. A second door led to his bedroom and a small but tidy bathroom. To his left, a large picture window showed him a small patio, flagged with stone pavers, and a well-manicured lawn bordered with a white picket fence.\n\n\"It's lovely,\" he said. He gestured to the fence with a smile. \"Now all I need is a wife, two kids, and a dog named Spot.\"\n\nMegan chuckled. \"Can't help you with the wife. And children would cause quite a scandal, wouldn't they? But every home needs a pet. If you've a mind, I can probably find someone who has a kitten or a puppy for you.\"\n\n\"Maybe,\" Justin nodded. \"Thanks for showing me around,\" he said. \"I appreciate it.\"\n\nThe older woman took the hint. \"I've got to be going,\" she said, looking at her watch. \"The kids and the husband will be wanting their dinner.\"\n\n\"You're married?\" he asked, though he had already seen her wedding ring.\n\n\"Twenty-six years,\" she said proudly. \"And five kids, God knows why.\"\n\nShe turned to leave, then paused, one hand on the door. \"I hope you don't mind,\" she said \"But we've arranged for a welcome-to-town pot-luck Saturday evening. Here at the church. Outside if the weather is nice. Or downstairs if we get rain, which hopefully we won't.\"\n\nJustin wasn't surprised. The parishioners would want to get a look at him. And considering that three straight priests had come and gone in the last six months, they had to be hoping that this time they would get one who could do the job. \"Well, that will give me two days to get settled,\" he replied. \"And it would be nice to meet everyone. Thank you. It sounds like a great idea.\"\n\n\"You're welcome, Father. Have a pleasant evening.\n\n\"And welcome to Fertile Valley.\"\n\n<br >\n\n\n\nChapter 2: Sizing Him Up\n\n\n\n\"I'm home.\" Brittany's mother's voice floated through the house as she opened the back door.\n\n\"Hi, Mom.\" Brittany put her phone in her pocket and walked out to greet her. \"How were things at church?\" she asked, leaning up to kiss her cheek.\n\n\"All right. Where is everyone?\"\n\n\"Sabrina is up in her room, talking to her soulmate on the phone.\" Brittany rolled her eyes. \"Doug is at work. He texted me a bit ago, said he had a chance to pull some overtime, so he might be home late. And Kenna and Bill went to the park with Mrs. Murphy's kids. They should be back around five, she said. And Dad's at work, of course.\"\n\n\"Good. I have a chance to talk to you alone.\" Her mother guided her to the living room and sat her down on the couch. \"The new priest is here.\"\n\nBrittany swallowed, and her heart sped up, thumping against her ribs. \"Really? What's he...what's he like?\"\n\n\"Young,\" her mother smiled, with a faintly predatory expression. \"Good-looking, too, in a bookish kind of way. Dark hair, brown eyes. Good skin. Decent body. He could be taller, but you can't have everything.\"\n\n\"Oh.\" She closed her eyes, hoping. \"And is he...isn't he...do you think that he will work out? That he can be the one?\"\n\nMegan Murray shrugged, her eyes pensive. \"You never know. Maybe. At the very least, he didn't seem to be a bitter old fart like the last three priests that Bishop Whitford sent down here.\"\n\nBrittany shuddered, remembering nasty old Father Cobden. She knew it wasn't very nice of her, but it would have been really hard to complete the rite with him. The old man had a mouth like a prune, and seemed to disapprove of the entire world and everything in it. \"Oh, I hope so. I've been having the dreams again, Mom. I don't know how much longer I will be able to wait.\"\n\n\"Wait for what?\" her sister Sabrina said, thumping down the stairs like a herd of elephants. She was dressed in a pair of sheer pink panties and a crop-top t-shirt that barely covered her bouncing breasts. \"To lose your cherry, Brittany?\" The younger girl laughed. \"I'm glad I didn't. Wally gives me what I need every time we can get together. Sometimes twice.\"\n\nHer mother smiled indulgently at her middle child, while Brittany silently fumed. It totally wasn't fair. Sabrina was only sixteen, and getting laid all the time. Meanwhile, Brittany was eighteen and still a virgin. And her sister seemed to be well on her way to getting a simply world-class pair of tits, while Brittany had to settle for a modest pair of c-cups, though the boys she had dated hadn't seemed to mind how she looked.\n\nOf course, she had chosen this for herself. Her mother had explained it all to her, very carefully, when she turned thirteen. And to her sister a few years later. Teenage girls at St. Catherine's had a choice. They could lose their virginities when they chose. Or they could wait, sacrificing their maidenhood in the ritual which ensured the good health, prosperity, and fertility of the town. It was a rite as old as mankind, though one that had become vanishingly rare these days, when science had taken the place of faith in the minds of most people, and even those who believed in God didn't really think that religion could truly have the kind of effect they sought.\n\nBrittany had been fascinated by the idea, and had vowed to save herself for kind, gentle Father Snodgrass. But the older man had retired last fall, before it was her turn to be chosen. Secretly, her mother had told her that the true reason for his retirement was that he could not complete the rite any longer, due to the diminishing effects of his age. Since then, three priests had made their way through Fertile Valley, all of them completely inappropriate for the combination of pagan ritual and true faith in God that Megan Murray and the other women who truly ran St. Catherine's demanded. As far as Brittany knew, the three priests had never even been told about the rituals, let alone given the opportunity to participate.\n\nShe ignored her sister's smirk haughtily. \"God, I hope he's the one.\" She swallowed. \"Mom? What will we do if he isn't? We've already missed three rites in a row. And Midsummer is less than a month away.\"\n\n\"Three rites, you're out?\" Haley snickered.\n\n\"Hush, Sabrina,\" her mother said absently. \"Honestly, Brittany, I don't know what we'll do.\" Megan frowned uneasily and sighed. \"It doesn't have to be the parish priest, true. But things were easier in the old days, when people here were closer to the land. It could be any male in a position of authority, really. Even the mayor. Or chief of police. But the mayor is Lutheran, conservative-\"\n\n\"And a woman,\" Sabrina put in with a naughty grin. \"Though I guess she could use a strap-on, if you really needed to.\"\n\nBrittany turned up her nose and ignored her. \"And a woman,\" Megan agreed with a shrug. \"And I wouldn't let Chief Riggins get within twenty yards of you. The man is a pig. I knew him in high school, and he hasn't changed a bit since. And the other churches might have some suspicions about what we do. But they're not going to participate either.\n\n\"But don't worry, sweetie. There's time. Fertile Valley won't turn into a dust-bowl overnight, just because we've missed a rite or two. Magic...\" she paused. \"We've been doing this rite for so long, with so many different vessels, that it's got a momentum all its own, like a great big old freight train. True. If we don't get our butts in gear, in time we'll probably start to slow down. And in five or ten years, we might stop altogether, and it would need one hell of a push to get things moving again.\"\n\nShe drummed her fingers on the arm of the couch, her eyes dark with thought. \"We're going to be having a potluck Saturday evening. To introduce him to the congregation. Though I'm going to be making sure that it's the important people who come. And their daughters,\" she hinted. \"But if you truly want this, Brittany, I think you should call up some of your friends.\"\n\nShe blinked. \"My friends? Oh! I get it! And then I can meet him!\"\n\n\"Knock knock!\" a hearty voice said. \"Anyone home?\"\n\n\"Daddy!\" Sabrina said, and flew to the doorway, where their father's figure loomed like a cheerful, friendly bear. She gave him a hug. \"You're home!\"\n\n\"Obviously.\" He frowned down at her. \"Sabrina Ursula Murray. Put some clothes on.\"\n\n\"I've got clothes on.\"\n\n\"Those aren't clothes. They're a potential indecent exposure charge. Herne the Hunter save us, Sabrina. Try to wear something that covers your chest, why don't you?\"\n\n\"I can't help it, Daddy. They just keep getting bigger. See?\" She arched her back proudly, making her chest swell and a glimpse of underboob flash out from under the ragged edge of her shirt.\n\nUnamused, Dale Murray pointed upstairs. \"Clothes. Now.\"\n\n\"Fine.\" Pouting, she stomped upstairs.\n\n\"That girl will be the death of me,\" her father sighed, settling down on a chair. \"Brittany, get your poor old father some iced tea, would you?\"\n\n\"Sure.\" She scampered to the kitchen and came back with a full glass.\n\n\"Thanks, honey.\" He took a long sip. \"Ah, that hits the spot. I was up at the top of a grain silo all afternoon. I can still taste the dust.\"\n\n\"Poor man.\" Her mother's quick smile flickered. \"If you take a shower and clean up, I'll give you an extra-special treat tonight.\"\n\n\"I don't smell dinner,\" he countered. \"Why can't I get my treat right now?\" His strong arms, bunched and corded with muscle from years of working outdoors, lifted his wife and set her in his lap. He nuzzled her throat, and she shut her eyes.\n\n\"Brittany?\" she said, her voice an octave higher than it had been a few moments earlier. \"Can you start on dinner, honey? I'm kind of...busy right now.\"\n\n\"Jesus.\" She shook her head as she headed towards the kitchen. \"Get a room.\"\n\n*****\n\nThe next day was overcast, with a hovering pall of gray clouds and an annoying drizzle of rain that came down in spits and spats. It took Brittany almost all morning to get hold of her friends, and by the time she got on her bike for the short ride to the church, it was after lunch.\n\n\"Hey there, FBFF!\" a voice called as she was locking the bike up at the side entrance of the church.\n\nBrittany turned just in time to catch her Forever Best Friend Forever's hug. \"Hi, Haley.\" She raised her eyebrows at her outfit. \"Whoa. Showing a lot of leg there, girl. Did your shorts get hit by a lawnmower? Or are you wearing denim panties?\"\n\n\"Uh huh.\" The dark-haired girl grinned and ran a hand up Brittany's side. Her breath caught in her throat as her fingertips slid over the side of her breast. \"No bra? I thought so. It looks like I'm not the only one who wants to catch his eye.\"\n\n\"You never have a second chance to make a first impression,\" Brittany intoned virtuously, then giggled. \"Besides,\" she said, lowering her voice. \"Mom saw Father Kelly yesterday, and said he was hella cute!\"\n\n\"Like your mom would ever say something like that.\"\n\n\"We-ell,\" she drawled as they walked into the church. \"She didn't actually say it. But that's what she meant.\n\n\"So,\" she added, \"are you still having the dreams?\"\n\nHaley nodded, her face going distant. \"Just a few nights ago.\" She shivered. \"God, it was hot. Just me. And him. Though I still haven't seen his face. I woke up and Jesus, Brit, I was so wet. It was crazy. I pulled my panties off and rubbed one out right there in bed. It almost makes up for the fact that I'm a virgin.\" She made a face. \"Almost.\"\n\nBrittany made a low noise of agreement. Although, for her, the dreams had become an almost nightly occurrence. She and Haley had been best friends almost since before they could walk. Their birthdays were only a few weeks apart, and they had graduated high school together barely a week ago. She just hoped that when the time came for Father Kelly to choose one of them, it didn't destroy their friendship.\n\nThough he could choose Haley the next time, if she doesn't sleep with some guy when she goes away to college. Maybe at Samhain. And it would fit, really. With that black hair of hers, and those long legs, she'd be like the sexiest, sluttiest Halloween witch ever. The thought made her a little excited, to be honest. She wasn't lesbian. But she and Haley had fooled around, once or twice, on sleepovers. And she knew that the long-legged teen would go off like a firecracker with the right man.\n\nMaybe even the right man and the right woman at the same time, she thought, and shivered happily.\n\nSide by side, they entered the church, to find a dozen members of the choir already there. She said hello, then looked around. \"So. Has anyone seen him yet?\"\n\nMolly, only fourteen years old, shook her head. \"No. We...\" she looked around the circle and lowered her voice. \"We didn't want to bother him. You know what a grump old Father Cobden was. And Father McCartney was even worse. It's like he didn't even want people in church, unless they were putting money in the collection plate on Sunday.\"\n\n\"All right.\" She nodded firmly. \"We all know why we're here. So let's make sure he gets a good look at us.\" She clapped her hands. \"Up to the choir loft, ladies! It's time to practice!\"\n\n*****\n\nJustin was in his office when the first haunting strains of music seeped through the door.\n\nHe cocked his head, drawn out of his perusal of St. Catherine's financial records. To be honest, though, there wasn't much to look at. Like the town, the church seemed to be quietly prosperous, though the amount of money coming in had been trending down over the last several months. It hadn't been hard for Justin to tie the decline to the corresponding slump in church attendance. And from what Bishop Whitford had told him, all of that could be laid at the feet of the three failed interim priests.\n\nWell, he thought, as he closed out of the bookkeeping software on the computer. I'll just have to make sure that they come back. It shouldn't be too hard. From the way Mrs. Murray was talking yesterday, it seemed that Cobden and the rest were doing just about everything they could to alienate people.\n\nHe stretched in his seat, raising his arms above his head and then dropping them to his lap. So far, he couldn't have asked for more from his new parish. He had been quietly stunned when he had looked in the kitchen the night before and had discovered that the refrigerator and the pantry had been stocked with practically everything he needed. Canned soup, fruits and vegetables, milk and juice and cheese. Even a generous sampling of hamburger, chicken, and steaks had been neatly stacked in the freezer. Instead of having to eat his first meal alone in a diner, he had whipped up a supper for himself and had a fantastic night's sleep. Even his new bed was bigger and more comfortable than his old one at Mundelein, and he had woken up feeling refreshed and ready for the challenge of his first day on the job.\n\nThe first song stopped, and another began, the notes clear and pure. \"Holy, Holy, Holy,\" followed by \"Soul of My Savior,\" and then \"Ave Maria.\" He blinked, impressed. The voices were singing the hymn in the original Latin, and the ancient notes echoed through the old church like chimes from a carillon.\n\nHe got up and entered the nave, looking up towards the choir loft. Maybe fifteen teenage girls were there, dressed casually. In some cases, very casually, he noted with a small frown. One tall girl hardly seemed to be wearing shorts at all. But the music coming from them was lovely. Not perfect, of course. He winced at a sour note. But the faces of most of the young women were rapt with a concentration you didn't often see in larger choirs, where faith had been crowded out by pride.\n\nThe last notes of the song faded away, and he clapped. Eyes popped open, looking down at him.\n\n\"Bravo, ladies. Well done,\" he smiled.\n\n\"Oh!\" A young woman, with tan skin and hair of a tumbling reddish-blonde, put her hand to her mouth. \"Are you...Father Kelly?\"\n\n\"That's what it says on my diploma,\" he said easily. He heard his own words and grimaced, hoping he didn't sound to pompous. \"But you can call me Father Justin. Or even just plain Justin. Why don't you come down so I can say hello?\"\n\n\"Or you could come up,\" a young lady murmured. \"Come way up.\"\n\nHer companions shushed her, and the entire group trooped down to ground level.\n\n\"Is this all of you?\" he asked. \"The entire choir?\"\n\nThe tall, slim, black-haired girl, with shorts that were barely a denim accent around her trim waist, nodded respectfully. \"Yes, Father Justin.\"\n\n\"You're awfully young, aren't you? Aren't there any older women in the choir? Or are they all too busy with work and kids and stuff?\"\n\n\"Oh, no. Not too busy.\" A couple of muffled snickers broke out in the ranks. \"They're just...not right anymore.\"\n\n\"Not right?\" He blinked.\n\n\"Well,\" a tiny girl who couldn't be more than fifteen said, in a tone of puzzled reason. \"It's hard to be part of an all-virgin choir when you're not a virgin, isn't it?\"\n\nThe blood ran out of his face. \"A what?\"\n\n\"Kenzie!\" Half the choir turned on the pocket-sized brunette.\n\n\"Oops.\" The young girl bit her lip, then glanced around the circle. \"Was he not supposed to know?\"\n\nThe taller girl turned to Justin. \"Don't get upset, Father. Please?\" She raised her eyes to his, pleading. \"It's traditional here. St. Catherine's has always had a choir of virgin girls. A group of young women, chaste and pure, to better speed our songs and prayers to our blessed mother Mary. And to her Son as well, of course.\" She crossed herself piously, and the rest of the girls followed suit.\n\nJustin blinked. \"I'm not upset,\" he said slowly. \"Just...surprised.\" He smiled, trying to set the group of young ladies at ease. \"How do you...you know?\"\n\nThe red-headed girl seemed to sense what he was asking. \"Know if a girl shouldn't be in the choir anymore?\"\n\nHe nodded, and she smiled shyly up at him. \"We mostly do it by the honor system, Father Kelly. But Fertile Valley isn't very big. Word gets around. If a woman abandons her chastity, people generally know.\"\n\n\"Wish I could abandon mine,\" came a mutter from the back of the group. \"For two cents, I'd do it right now!\"\n\nJustin pretended he hadn't heard the remark. They were just girls, after all. And teenage girls at that, who sometimes tended to be a bit...silly. His glance fell on the tall brunette, who seemed to be one of the leaders of the group. \"How about you introduce me around?\" he suggested.\n\nTo his relief, she did, though the chorus of names threatened to spill out of his head and splash on the floor. Haley and Brittany and Molly. Kenzie and Katrina and Morgan and Lisa. Bailey and Elena and DeeDee and Adrienne and Chloe and Faith. He solemnly shook hands with each of them and said how much he enjoyed their music.\n\n\"Well,\" he said, backing away with a wave of his hand. \"I'll let you guys get back to your practice. But I'll see you all on Sunday, right?\"\n\n\"Yes, Father Justin,\" they chorused, and went back up the stairs to the choir loft. As he walked back to the office, the notes of another song caught up to him, and he found himself almost unconsciously walking in time to the beat of the hymn.\n\nOnce back in his office, he fired off an e-mail to the members of the various church board committees, asking their input about when the next meetings would be held, so he could attend and get a feel for how they went about their business. Then he worked on his homily for Sunday mass, now only two days away. He had said his first mass earlier that morning, but it had been sparsely attended, and he thought that news of his arrival was still filtering through the community. Sunday would be the first day that people in town would be able to get a look at him as a priest, and he wanted to make a good impression.",
        "He typed on the computer, occasionally humming along with the music. When it stopped, it left the church feeling strangely sad and empty. Dimly he heard the sound of the young women chattering to themselves as they left the building. Eventually, there was silence.\n\nUntil it was interrupted by a knock at his office door, so unexpected that he almost jumped out of his skin. \"Father Justin? Are you in there?\"\n\n\"Come in,\" he said, and flushed as his voice emerged in an embarrassing squeak. He firmed it and repeated, \"Come in.\"\n\nThe door opened, and the face of one of the girls peeked in. \"Are you busy? I can come back.\"\n\n\"No, that's all right.\" With a click, he saved his notes and sat up. \"Come in. Brittany, isn't it?\"\n\n\"Yes, Father Justin.\" She sat down in the chair opposite his desk, lowering her eyes demurely.\n\nJustin took a moment to study the girl. Or, he corrected himself, young woman. Brittany was of medium height, but there was nothing girlish about her body. Her blouse clung to the rich curves of her chest, and her legs were long and tanned from the spring sun. Even through her lowered lashes, Justin could see that her green eyes were bright. And her hair was an arresting shade of reddish blond, flowing past her shoulders in a golden river that reminded him of a waterfall at sunset.\n\nHe swallowed, and reined in his appreciation, even if it was only academic in nature. He could no more think of Brittany as a sexual object than he could join the Church of the Flying Spaghetti Monster. \"What can I do for you, Brittany?\"\n\nThe young woman looked up, then back down at her lap, where her fingers were fidgeting. \"I've...been having dreams, Father.\" A quick, bright glance, like the glimpse of a bird's eye in the leaves of an oak tree. \"Strange ones.\"\n\n\"Oh?\" he said encouragingly.\n\nShe nodded rapidly in agreement. \"Almost every night.\" Her cheeks grew pink. \"Sexy dreams.\"\n\nHe swallowed. \"Oh. Um.\" He cast about in his mind rapidly. \"Are you sure this is something you should be telling me, Brittany? Wouldn't you rather tell your mother? Or a friend?\"\n\n\"Oh, no!\" Her pretty brows drew down in consternation. \"I couldn't tell Mom! That would be so embarrassing! I would just die!\"\n\n\"Well, why are you telling me?\" he asked, in what he hoped was a reasonable tone.\n\n\"Because Father Snodgrass always told us that we could tell our priest anything,\" she replied earnestly. Her plump lips thinned. \"Though Father Cobden and Father McCartney and Father Franklin didn't seem to think so. They all told me I shouldn't be having lustful thoughts, and that I should pray to the Holy Mother for forgiveness for having such an evil, wicked, depraved mind.\"\n\nAt last, a life preserver. Though probably one that leaked. \"If you like, I could put this under the seal of the confessional.\"\n\nBrittany's eyes shone. \"Could you? Would you? Please, Father Justin!\" Her legs shifted nervously. \"I need to talk about this to someone!\"\n\n\"All right.\" He got out his stole, kissed it, and set it over his shoulders. \"Whenever you're ready.\"\n\nHer eyes closed. \"It's a dream. I know it is. But it seems so real.\n\n\"It is dark when he comes to me,\" she whispered. \"Dark as night. I can see the stars overhead, clear as crystal in the summer sky. The wind is whispering through the grass. The moon is riding high; fat and full. The grass is wet with dew, and I can feel the rich earth under my bare feet.\"\n\nHer voice slowed, becoming almost hypnotic in its steady rhythm. \"There is a fire. Red light shines on my body. I am naked. The heat surrounds me. Fills me. As he will fill me.\" As if guided by another person's will, her hands rose, fingers undoing the buttons of her sheer white blouse. Justin froze as her firm young breasts, her nipples pink and stiff with desire, came into view.\n\nTerrified, he panicked. \"Brittany! Stop that!\"\n\n\"Why, Father Justin?\" Brittany's eyes popped open, but her voice lost none of its dreamy cadence. \"Father Snodgrass taught me that my body was a gift from God. Should I be ashamed of it?\"\n\n\"Put your clothes on!\"\n\n\"No.\" Her refusal was polite, but with granite-hard conviction under the calm tone. With her blouse open to the waist, her hands began to caress her flesh. \"I can feel him behind me,\" she continued, as if she had not heard his interruption. \"He's male.\" Her throat bobbed as she swallowed. \"Hard. Ready for me. He presses into my back, and I can feel his need.\n\n\"He speaks no words. But I know what I have to do. I drop down on my hands and knees and present myself to him. My haunches are high in the air.\" Sweat was beaded on her upper lip, and the motions of her hands sped, her fingers stroking her breasts, teasing her erect nipples.\n\n\"He takes me. Hard. Like a stallion with a mare. His hands are on my hips. He fills me. And it is good. So good. My body welcomes him. I am the earth. He is the king. The lord of the land, filling me. I sink down. The dew on the grass coats my body. But he drives into me. Over. And over. And then over again. Until there is no me anymore. There is only my body.\n\n\"I can feel it. We are two. But we are one. I can feel it. He can feel me. My body as it rejoices in his strength. His seed as he explodes into me.\" Her eyes sprang wide, something dark and primal and fierce lurking in the depths of her gaze, and Justin's own reaction to her carnal desire was forgotten as her hips began to roll in slow steady motions, like the actions of the waves in a dark, stormy sea. \"I am his vessel. And he is mine. We make the earth bountiful. Man,\" she gasped, shuddering. \"And woman. Male and female.\n\n\"Oh, Father Justin! Oh. OH! OH!\" Her head tilted back as she grasped her breasts, tan flesh showing between the gaps of her fingers. And then her head whipped forward, her entire body curling in a c-shape in the chair, as if she was a puppet whose cords had been cut.\n\nBrittany fell silent, though her breath was deep and labored. Her body still moved in small, languid motions, as she came down from what was obvious, even to him, as a very satisfying sexual climax. Justin tried to hide his own body's visceral reaction to her incredible body. But it was hard.\n\nVery hard.\n\nOh, shut up.\n\nAfter a long moment, her eyes opened. Despite her youth, her face was wise. The face, he thought, of an adult. An adult who knew exactly how deeply she had affected him. And rather than being disgusted by him, was actually pleased. \"Thank you, Father Justin.\" A small smile curved her mouth as she did up the buttons of her blouse. Justin hoped that the pang he felt as she hid her breasts from view would not show in his face. \"What is my penance?\"\n\nHe had to clear his throat twice before he could speak. In his slacks, his erection raged for release. Release, and more.\n\n\"The Church teaches that we cannot be held responsible for our dreams,\" he managed at last. \"As our actions in them are not the result of our own will, but rather that of our dreaming mind.\" He removed the stole from his shoulders, trying to hide the way his hands were shaking. \"You have committed no sin. You need no absolution.\"\n\n\"Thank you, Father Justin!\" The young woman hopped up, her face alight. \"I knew you would understand! Not like the rest of those cranky old men. All they could think about was sin.\" Her nose wrinkled adorably. \"But Jesus told us different, didn't he?\"\n\nOff the top of his head, Justin couldn't recall any place in the bible where a gorgeous young woman brought herself to orgasm by paying with her breasts. Or where Jesus said that was perfectly fine. But with his sex drive screaming at him, the safest course seemed to get Brittany out of his office as quickly as he could. God only knew what someone would think if they saw him alone with the sexy young teenager, who seemed at once completely innocent and indecently depraved.\n\n\"Sure,\" he croaked, adjusting his erection behind the desk, and hoping against hope that Brittany wouldn't realize what he was doing. His cock burned against his belly like a brand, making him squirmingly conscious of his sinful desires. He got to his feet, wiping sweat off his upper lip. \"Will I see you at mass on Sunday?\"\n\n\"Oh.\" Brittany smiled. \"I'm sure I'll see you before that. A lot more. Isn't there a pot-luck here tomorrow? Me and the 'rents and my horrible gross brothers and sisters will all be there.\" She grinned. \"Nothing like a big meal to get my mom and dad out of the house, especially if it's free. Raising five kids takes a lot of food, you know.\"\n\nHis smile suddenly felt sickly. Face Brittany's parents? After this? \"Well, I'll see you then.\"\n\n\"You bet, Father Justin!\" She leaned up and planted a completely unexpected kiss on his cheek, then left the office in a rush. In seconds, the only trace of her presence was a sweet scent in the air.\n\nOh, God. Justin couldn't take it. The pounding pressure in his groin would have broken the willpower of a saint. And he certainly wasn't a holy man, more able to withstand temptation than mere mortals. He staggered through the church to the rectory, shutting the door behind him with the same sense of relief that Noah might have felt when he drew up the plank of the ark as the rain of the flood started pouring down.\n\nHe sank down on his bed, his slacks pooled around his ankles. The throbbing rod of his cock in his fist made him groan. Half in relief, half in sheer need. He closed his eyes as his thumb swept thick fluid around the head of his glans.\n\nBrittany. A phrase echoed through his head.  A body that would make a priest curse his vows. For the first time, he actually understood what it meant. Her young, nubile body, half hidden, half revealed, was graven in his mind's eye. The lovely curves of her breasts. The flat expanse of her belly. The way the light shone down from the window to gild her body in golden light. Her face, rapt with pleasure and feminine beauty, as she confessed her desires to him.\n\nNo. Not to you. To God. You are merely the conduit.\n\nThrough the firestorm of desire, Justin wondered what it would be like with Brittany. He had always felt that the vows of chastity would lie lightly on him. Now they seemed cold and damp and smothering, like a clammy blanket drawn from a fetid swamp, and something that should be cast aside.\n\nSex. His classmates in college had been dumbfounded when he told them that he wanted to be a priest, and that he actually intended to stay celibate. He could still see their slack-jawed stares, as if he were speaking a foreign language, with concepts they would never be able to understand.\n\n\"Dude,\" his roommate Neil had said, his brow furrowed in confusion. \"Like, never?\"\n\n\"Right.\"\n\n\"Never ever?\"\n\nHe nodded.\n\n\"What if, you know,\" he pointed to the television, where a movie was playing. The dialogue seemed to consist mostly of grunts, swearing, and explosions, but some of the other guys in the room were staring at it in rapt attention. Maybe it was because of the actress whose main talent seemed to be her ability to keep a massive pair of breasts inside her skintight top whenever she appeared on the screen. \"What if she knocked on the door, right now, and asked you to get down with her, no questions asked?\"\n\n\"I would tell her,\" he said, trying to hide his amusement, \"that without love to turn our act into a sacrament, what she was proposing was sinful. And also that I was committed to a life of chastity.\"\n\nNeil shook his head and drained his beer. \"You're hopeless, man.\" Murmurs of agreement rose from others in the small, crowded apartment. \"Completely fucking hopeless.\"\n\nBut now his willpower was being put to the test. Sometimes, out of boredom or curiosity or sheer lonely depression, he had watched adult movies on his computer or the television. The experience had always left him with a sour taste in his mouth, disgusted at his own weakness and sickened by the thought of the poor women who had been reduced to selling their bodies. But now he wanted, more than anything, for one of those women to be in bed with him. For him to be able to slake his desperate need.\n\nNo. Not them. His hand began to speed up. Not them. Brittany, pure and virginal and completely wanton, her fingers pulling at her tender young nipples as she told him about her sexy dream. As she had spoken, Justin had begun to fantasize, to put himself in the place of her dream-lover. He had imagined the sensations he had never known in waking life, of the clench of Brittany's hot young sheath around his manhood as he drove into her over and over and over again, seeding her fertile body with his male power.\n\nOh, God!\n\nHe let go. His climax swept over him, wracking his body with shudders that were almost painful in their pleasure. His flailing hand barely managed to grab a wad of tissue from the nightstand and cap his throbbing prick. Blast after blast of his semen burst from his slit, leaving him limp, drained and dry.\n\nSinner.\n\nThe voice of his conscience pounded at him. Look at you. You are not worthy to serve our Lord. One look at an attractive teenager, and you're fantasizing about her and engaging in the sin of self-abuse.\n\nEven though he was torn with guilt, he almost snickered. Self-abuse? Seriously? Who talks like that?\n\nHe closed his eyes. Yes, he had lusted after Brittany in his heart. But it would be far, far worse for his desires to be translated into action. He would not. He could not. To attempt to seduce her would not only shatter his own vows, but would put him at risk of losing the parish he had worked for so long to achieve.\n\nI will be strong.\n\n<br >\n\n\n\nChapter 3: Taking the Bait\n\n\n\n\"So I said to Vern. 'Listen man. I appreciate the work you did cutting her up. And a side of beef is going to come in real handy. But that wasn't my cow. It was yours!'\"\n\nThe men surrounding the story-teller roared with laughter, and Justin smiled politely, though he had lost track of the tale about halfway through.\n\nDespite his fervent prayers for rain, or perhaps a small, non-destructive tornado, born out of a desire to somehow avoid Brittany, the day had dawned clear and sunny, with a light northwest breeze teasing the few cotton-ball clouds that dotted the sky. Around three in the afternoon, Megan Murray had shown up with a dozen other women, and twice that many teenage assistants, and with a speed and efficiency that would have made his father nod approvingly, they had transformed the west lawn of St. Catherine's into a sort of open-air all-you-can eat buffet. Long folding tables were set up to hold the food, and the young men erected a large tent. A short time later, a bucket-brigade brought smaller tables and folding chairs out of the basement so that people would have someplace to sit down and eat.\n\nBy six, the parking lot began to fill and the people to arrive, all of them contributing something to the meal. Casseroles, veggie trays, bread and cheese and cold cuts for sandwiches, huge salads in containers big enough to be a dinosaur's feeding bowl, and every side dish you could imagine, from potato salad and coleslaw to corn on the cob and baked beans. Pairs of men lugged huge tubs of crushed ice with the necks of beer bottles sticking out, and on one table, you could choose between tea or soda or large pitchers of lemonade, with sweat dripping down the frosted sides. At the last minute, a man pulled up in a delivery van and brought out pans full of fried chicken and battered catfish, which sent up a heavenly aroma.\n\nThere wasn't any formal grace, or any time when the meal began. At some point, the pot-luck seemed to hit a critical mass, and people stopped talking and started eating. Some under the tent, and some on blankets they spread out on the lawn. Justin wandered around with Megan, who seemed to have appointed herself as his guardian angel. She introduced him to the various couples and families, and he made sure to invite everyone to his first 'real' mass, scheduled to take place the next morning.\n\nAs they walked around the grounds, he felt the pressure of many pairs of eyes on him, sizing him up. \"So,\" he joked, though he didn't think his nervousness was hidden very well. \"How am I doing so far?\"\n\nMegan smiled at him. \"Relax, Father. You're doing fine.\" Her eyes crinkled at the corners. \"You got to cut them some slack, you know. We've been burned three times in a row by priests were too old, too lazy, or to rigid to fit in.\" She raised a hand, ticking points off on her fingers. \"Father Cobden was just marking time until he could retire. Father Franklin couldn't be bothered to get off his well-padded ass and do his job, and Father McCartney was so conservative he probably thought that the world started going to hell when women learned how to read.\"\n\nJustin snickered, though he knew that he probably shouldn't be amused by other men's failures. \"I guess there's worse things. If I even do a half-decent job, I'll look good by comparison.\"\n\n\"You could,\" Megan said, though the corner of her mouth twitched. \"If we were interested in someone doing a half-decent job.\" Her head tilted. \"Mediocrity is a terrible fate, Father. I hope you have more ambition than that.\"\n\nWhatever reply he might have made was cut off, when a voice he had heard in his dreams exclaimed, \"Hi, Mom!\"\n\nMegan turned, smiling, as Brittany dashed up and gave her a quick hug. \"Hey, honey. Where is everyone?\"\n\n\"Dad's parking the car,\" the young woman replied. \"Doug is bringing the biscuits that someone, I'm not saying who, forgot at home. Billy ran off to play football out back with his friends. Kenna is over there,\" she pointed, \"and Sabrina is up in the choir loft making hot, passionate love to Brett Terhune.\"\n\n\"What?\" Megan looked startled, but not completely shocked.\n\n\"What?\" Justin added, just in case.\n\nBrittany's laughter pealed out. \"Just kidding, Mom. They're being all lovey-dovey over there by the redbuds.\" She snorted. \"You'd think they hadn't seen each other for a year.\"\n\nMegan blew out a deep breath. \"Horrible child. Father Justin, I'd like to introduce you to my oldest daughter, Brittany.\"\n\n\"Number two out of the chute, but number one in your heart,\" Brittany added amiably. \"But me and Father Justin have already met. He saw us at choir practice yesterday.\" She gave him a sly look from under her eyelids. \"Didn't you, Father?\"\n\n\"She's your daughter?\" Justin asked Megan helplessly. But now that he saw the two of them together, the resemblance was obvious.\n\n\"My pride and joy,\" the older woman replied. Something in his expression must have warned her, because she tilted her head questioningly. \"Is everything all right, Father?\"\n\nHe opened his mouth, then cut himself of. He couldn't possibly relate what had happened the previous day. Even if he was willing to make Brittany look like a bimbo in front of her mother, he had put the entire encounter under the seal of the confessional. If he told Megan now, it would be a terrible betrayal of Brittany's trust.\n\nAnd good luck getting anyone else to come to confessional if you pull that sort of crap, Justin.\n\n\"Nothing,\" he said. \"Your daughter and her friends are very talented singers,\" he added weakly.\n\n\"Oh, yes.\" Megan's expression was darkly amused. \"She has all sorts of skills, doesn't she?\"\n\n\"Come on, Father Justin!\" Brittany took his arm. \"Have you had anything to eat yet? I'm starving. And I heard that Mr. Anderson brought chicken and fish from his restaurant for tonight! Let's get some!\"\n\nJustin allowed himself to be dragged to the food, where Brittany helped him load a heaping plate. Before he knew it, he was sitting down at one of the long tables, with the Murrays surrounding him on three sides.",
        "The condemned ate a hearty meal, he thought, but then he took a bite of chicken, and all thoughts were driven out of his head. Crisp and spicy on the outside, meltingly tender on the inside, and completely delicious. Even his mother, who took an understandable pride in her cooking, would have raised an eyebrow in appreciation.\n\n\"Wow,\" he said, and took another bite. Reluctantly, he put the leg down. \"That's the best fried chicken I've ever had in my life,\" he added. \"I have got to get the recipe.\"\n\nAround him, snickers rose from the happily chewing Murrays. \"What?\"\n\n\"Everyone says that,\" Megan's husband Dale said. \"And no one ever gets it. The Andersons have had their restaurant in town for close on to a hundred years, and their fried chicken is probably the best-kept secret in town. My mother,\" he said, nodding towards a white-haired lady who was loudly gossiping with a group of her friends at a nearby table, \"once made fried chicken every Saturday night for a year, trying to figure it out.\" He shook his head. \"Different spices, different ways to marinade, different flour for the breading. She finally threw up her hands one night, gave up, and took us all out to dinner.\"\n\nJustin smiled. \"It's fantastic. I bet if they wanted, they could branch out and open a bunch of restaurants with chicken this good.\"\n\n\"Probably,\" Megan said. \"But why would they want to? All that would mean is more work and more hassle. Bob Anderson has his restaurant, a good wife, three lovely girls, and his first grandchild on the way.\" Her fist tapped lightly on the table. \"And he's happy. And that's the most important thing.\"\n\nHe nodded. \"Those are good reasons.\"\n\n\"Well,\" Dale said, \"we make most of our own fun here in town. We're not big enough for a lot of the big national chains to bother with. And that's the way we like it. When the rest of the world is going to hell, don't be big. Don't be important. Be hard to find.\"\n\nJustin raised his glass in salute, then applied himself to his meal. \"I hope you don't have things like this too often,\" he said after a while, when his plate was starting to look a bit empty. \"I'll blow up like a balloon.\"\n\n\"Not too often,\" Megan agreed. \"Of course, there's always weddings. And first communions. And golden anniversaries. And there's other churches in town, too. They have things like this once or twice a summer. And a stranger is always welcome, as long as they bring a dish to share.\"\n\n\"Goodbye waistline,\" Justin said wistfully, looking towards his lap in dismay.\n\n\"Not if we can help it,\" Megan said, poking his shoulder.\n\n\"I don't suppose there's a gym in town?\"\n\n\"A gym?\" Brittany snickered. \"Why should you pay to exercise? There's all sorts of outdoor stuff you can do, Father Justin. Hiking and swimming and canoeing on the river. And we've got miles and miles of bike trails. And there's Shawnee, less than ten miles from here. Horseback riding and camping and all sorts of stuff.\"\n\n\"Riding is fun,\" the younger sister put in. Sabrina grinned, showing white teeth that looked just a bit sharp. \"Have you ever done it bareback, Father Justin? It's a blast!\"\n\nHe smiled neutrally. \"I'm not what you would call outdoorsy,\" he said.\n\n\"But you can have so much fun outside,\" Sabrina countered. \"How can you know that you don't like something if you've never tried it? Think about it. So much going to waste just because you've never had the courage to try?\" She leaned forward, and Justin had to fight to keep his eyes from dipping down into her impressive cleavage, clearly visible through the scoop-necked blouse she was wearing.\n\n\"Enough, Sabrina,\" Meg said in a quelling tone. \"Your food is getting cold. And Father Justin has enough to think about without you badgering him.\"\n\n\"She's more like a rabbit,\" Brittany muttered, just loud enough for everyone to hear. Sabrina smirked, but did not rise to the bait.\n\nJustin shook his head, reminded of family squabbles with his own brother and sister. As the conversation flowed over and around him, he had to put off a faint pang of envy. Dale and Megan had what he never would. A marriage, children, and a loving family. The big man, his hair lightly grizzled, leaned back in his seat, a bottle of beer idly hanging from his fingers. He looked calm and relaxed, the slightly harried patriarch of a loving clan.\n\nHe sighed, half in regret, and found Megan's wise eyes on him. Her look told him that she had seen more in his face than he meant to show.\n\n\"It is hard.\" The voice of Father Winslow floated out of his memory. The older man looked over the class of young seminarians. \"To take the vows of chastity and forever abandon the dream of wife and home and children. But remember. You won't have one child. Or two. You will have hundreds. Thousands. Every boy and girl who passes through the doors of your church will be in your care. To protect and guide.\" The old man smiled. \"An army whose memories will keep you warm on cold winter nights.\"\n\nEventually the crowd began to thin, couples shaking hands and gathering up their children as they headed towards the parking lot, and Justin realized, with a groan, that as the person who actually lived here, it would be his job to help clean up. Under the gimlet eyes of the older women, everything was broken down and packed neatly away. Everyone was encouraged to take home as many leftovers as they could, but he wasn't surprised at all to discover that a generous portion had been set aside for him.\n\nWell, I guess I won't need to be cooking again anytime soon.\n\nAfter stowing the food away in his fridge, he went back outside. The sun had long since set, and a sliver of new moon was hanging low in the western sky. The tent was coming down with an efficiency that was actually really impressive, when you took the time to think about it. One group of teenagers took down the aluminum poles, while another folded up the tent itself. Off to one side, a cluster of men stood ready to pitch in and give advice if it was needed.\n\n\"My parents like you,\" said a quiet voice at his elbow. A dark shadow was leaning against the doorway, her face quietly pensive. A stir of air made her curling hair ripple.\n\n\"Brittany.\" He trusted that he hadn't jumped and squeaked like a little girl.\n\nShe smiled mysteriously at him and tilted her head up to the night sky. The breeze was balmy, and stars were spangled across the night sky as if God Himself had thrown a handful of diamond dust across a black velvet cloth.\n\n\"I love it here,\" she said quietly. \"Some of my friends can't wait to leave. College. Marriage. Someplace bigger. Not me. This is home. I've been in bigger cities. St. Louis. Memphis. Even New York, once, when we were on vacation. I hated it. It was noisy and crowded and smelly and it made my teeth itch and I couldn't wait to get back home. To Fertile Valley.\"\n\nJustin didn't know what to say, so he just made an encouraging noise.\n\n\"I hope you stay, too, Father Justin,\" she said quietly. Her hand found his arm, and she squeezed it briefly. \"We need all the good men around here we can.\"\n\nWhile he was trying to figure out how to respond, a small figure ran up and put her hands on her hips. \"Brittany!\" she said crossly. \"Mom says to get your butt over to the car! We're leaving!\"\n\n\"Thank you, Kenna,\" he said.\n\nThe young girl's eyes grew to the size of dinner plates. \"Father Justin!\" she squeaked. \"I'm sorry. I didn't see you.\"\n\n\"Oh, go on home,\" he waved. \"I'll see you at mass tomorrow.\"\n\n\"See? What did I tell you, Kenna,\" he heard Brittany say as they disappeared into the gloom. \"Father Justin's nice.\"\n\n\"But what if he tells Mom?\"\n\n\"He won't.\n\n\"He can keep a secret.\"\n\n*****\n\nOver the next few weeks Brittany found herself growing quietly, silently obsessed with Father Justin.\n\nHe was going to be the one. She knew it, as surely as she knew the way from her bedroom to the bathroom in the dark. Everything about him, from his kind, crooked smile, to the way his dark brown hair fell across his forehead, enchanted her. She found herself scheduling so many extra choir practice sessions in the hope of being able to talk to him that the rest of the girls began to grumble. And when she left the house to go to the park or library or to hang out with friends, her eyes were always alert for a glimpse of the handsome young priest.\n\nLuckily for her, though not for her peace of mind, Father Justin had begun to weave himself into the fabric of town. She often saw him as he went about his duties -- visiting people who were sick and needed someone to talk to, hanging out at Miller's Diner with a cup of coffee as he chatted with the old retired farmers who made the diner their unofficial social club, or simply walking around the streets of Fertile Valley, becoming familiar with his parishioners and the things that made each family unique.\n\nShe wished that they would have the chance to be alone together again, but Brittany knew in her heart that it would be a bad idea. She still couldn't believe what had happened that first afternoon in his office, where she had told him about her dreams and played with her tits until the biggest climax of her life exploded deep in the depths of her hot, drippy pussy. And from the look of him, Father Justin couldn't believe it either. His face had been almost...frightened. And when they met the next evening at the cookout, he had always kept an eye on her, as if she were some wild animal, like a bobcat or a coyote, that couldn't quite be trusted and might bite.\n\nFather Justin. Father Justin. Father Justin. His name was like a drumbeat in her chest, making her jittery and nervous. She couldn't even talk about him with anyone. Sabrina would just laugh and run off to screw her boyfriend again, smirking happily that she had what her older sister didn't. Her mother was busy trying to keep five children out of trouble during summer vacation. And Brittany knew that Haley was angling to be the one the sexy young priest chose at midsummer. Every time that she thought of her FBFF, a green spike of jealousy tore through her.\n\n\"Good God, Brittany,\" her mother said one hot, humid Saturday afternoon, when she came into the kitchen for the third time in twenty minutes. \"Can't you settle?\" She looked up from the bowl of cookie dough. \"Find something to do. Or I'll find something for you to do.\"\n\n\"I'm bored,\" she replied, though she hated the whining tone in her voice.\n\nMegan Murray spooned a dollop of dough onto a greased cookie sheet, expertly batting aside her daughter's hand as she tried to steal a taste. \"Brittany, you are a high-school graduate. You have lots of friends, a driver's license, and an entire summer ahead of you. I am not going to watch you mope around the house for the next three months. Or even the next two weeks.\" She smiled, her tone taking some of the sting out of the words. \"I know what you want, dearest. But there is no guarantee that you will get it.\"\n\n\"So what should I do?\" she whispered.\n\n\"Get to know him a little better.\" Almost absently, she spooned out more cookie dough. \"But not alone. Why don't you and your friends invite him out to do something?\"\n\nBrittany blinked. There was really only one thing she wanted to do with Father Justin. Or to Father Justin. Even seeing him at Sunday Mass made her squirm with sexy arousal. She hoped that no one at church realized how she was undressing him with her eyes as he said the homily. \"Like what?\"\n\n\"I don't know,\" Megan said impatiently. \"You're a smart girl. Figure something out.\"\n\n\"Morning,\" her older brother Doug said, wandering into the kitchen. \"Hi, Mom. Hi, Squirt.\"\n\n\"It's afternoon,\" Brittany said crossly.\n\n\"It's also Saturday,\" he replied, pulling a bottle of orange juice out of the fridge. \"And I've spent a week underneath Jack Schmidt's combine, making sure it will be ready for harvest in September. I think I deserve to sleep late for once.\"\n\nShe made a face at him, which he ignored. \"Hey, Mom. Do you know where the keys to Grandma's place are? I was thinking about going fishing today.\"\n\nFishing? Brittany's lips curved. Perfect! \"Doug, can I come?\"\n\nHe didn't even look at her. \"No.\"\n\n\"Please? Come on, Doug. I'm so bored.\" She waited a second, then played her hole card. \"And we can invite Haley, too. And Father Justin.\"\n\nHer brother wasn't an idiot, no matter how hard he tried. \"Father Justin?\" He traded a look with their mother, who was sliding the cookie sheet into the oven. \"It's like that, huh?\"\n\nShe took a deep breath and nodded. \"If you let me come with you, I'll help you out with Haley.\"\n\n\"Haley?\" As if on a swivel, Doug's head wrenched around. Brittany had to bite her lip to keep from laughing. Her brother had been pursuing her best friend, in his own clumsy, slightly shambolic way, since he was a junior in high school and Brittany and Haley were freshmen. \"She's coming?\"\n\nShe grinned evilly. \"Not if I'm not. Looks like the foot's on the other hand now, doesn't it?\"\n\nHer mother choked a laugh, while Doug just rolled his eyes. \"Fine. You can come. But only if Haley does.\"\n\n\"And Father Justin, too.\"\n\nHer brother sighed, making a sigh like a leaky balloon. \"Right. Of course Father Justin too.\"\n\nShe clapped happily and turned to dash upstairs. \"Brittany?\"\n\n\"Yeah, Mom?\"\n\nBrittany didn't even think it was possible for a woman to glare with separate eyes. But somehow she managed to focus on her and Doug at the same time. \"You know how important it is for you to keep your pants on, right? Both of you. The time isn't right.\"\n\n\"A lot she knows,\" she muttered to Doug as she left the room.\n\n\"I'm not even going to wear pants.\"\n\nThirty minutes later, she and Haley were at the church. Instead of going to the front door, they went around to the side and knocked on the door of the rectory.\n\nBrittany bounced nervously on her toes. \"Do you think he's home?\"\n\n\"How should I know?\" her friend answered irritably. \"It's not like I have him under surveillance. Though I would like to,\" she added under her breath.\n\n\"I'm sorry.\" She knew, better than anyone, how having the new priest took a situation that was barely tolerable and cranked it up to something which was almost unbearable. \"Me, too.\"\n\n\"You know,\" Haley said conversationally as they waited. \"If he chooses you instead of me I'll probably have to kill you. But only a little bit.\"\n\nBrittany nodded solemnly. \"That sounds fair. Especially since-\" She cut her reply short as footsteps sounded inside.\n\nThe door opened, and Father Justin appeared. \"Oh. Hello, girls.\" His face bore that combination of good humor and nervousness that Brittany found almost irresistible. \"How can I help you?\"\n\n\"Hi, Father Justin,\" Haley said perkily. Brittany seethed. Her friend seemed to be capable of accounting for eighty-three percent of the world's supply of perk. \"Me and Brittany are going to go out fishing at Brittany's grandma's place, and we thought you might like to come with us!\"\n\n\"Um.\" The priest looked back and forth between them. Resembling, Brittany thought as she stifled a wicked giggle, a hunted animal. But not sure which one of the two women was the greatest danger. \"I probably shouldn't.\" A sickly smile crossed his face. \"I mean, you're young ladies. And I'm the priest.\"\n\n\"Oh, don't worry about that,\" Brittany said breezily. \"My brother Doug is here. So he can protect you from our horrible feminine wiles.\"\n\n\"Do you have wiles?\" Haley asked.\n\n\"Oh, totes,\" she grinned as Father Justin blinked in confusion. \"I've got the best wiles. No one has better wiles than me.\"\n\n\"You big liar. If you've got the best wiles, then why is your brother always drooling after me?\"\n\n\"Because he's my brother. Ew! And he's dumb.\" She looked up to Father Justin, who had been watching their little piece of street theater with a bemused look. \"Please come with us, Father. Or else I'll have to watch Haley bat her eyes at my big dumbo brother all afternoon.\"\n\n\"Well,\" he said reluctantly, as if the words were being dragged out of him. \"I guess. Do you need me to bring anything?\"\n\n\"Nope,\" Haley said. \"We've got fishing poles and bait and towels and snacks and stuff to drink and suntan lotion and everything. Though you probably want to change your clothes,\" she said uncertainly, taking in his neatly-pressed slacks and polo shirt.\n\nJustin smiled, and Brittany melted. \"Give me five minutes.\"\n\nBarely ten minutes later, they were on their way out of town. Doug drove, with Father Justin in the passenger seat, and Haley and Brittany sat together in the back. In the trunk, the fishing poles and other gear set up a jangling, discordant tune. South on Highway 143, and then, at an old auto-body shop, Doug swung right onto a gravel road. White dust rose up behind them in a rooster-tail as he navigated the bumpy track for a mile or more. Trees shaded the narrow road, and then they emerged into sunlight once more.\n\nThe car stopped. Doug handed a key over his shoulder. \"Open the gate, will you, Britt?\"\n\n\"Your legs aren't broke.\" But she took the key nonetheless and undid the padlock that held the gate across the driveway. She pulled out the heavy, rattling metal chain, swung the gate open, and waved the car through, then reversed the process.\n\n\"Wow.\" Father Justin climbed out of the car. \"This is nice.\" He looked around at the small, neat white house, the well-tended yard, and the old barn where her grandfather had kept a few head of hogs and cattle out of habit before he passed away. \"It reminds me of home.\"\n\n\"Yeah,\" she answered. \"This is Grandma and Grandpa Keenan's old place. My mother's parents. They bought it after Grandpa retired and let my Uncle Walter take over the farm.\"\n\n\"Oh. Should we go up to the house and say hello?\"\n\nShe smiled sadly. \"No. Grandpa died about three years ago. His heart. Grandma moved in with my Aunt Bea in town.\" Her lips pressed together angrily. \"There's already some people sniffing around, trying to get their hands on this place. Hah. I hope Mom and Uncle Wally and Aunt Bea and Grandma tell them to go screw themselves. This is our land.\"\n\n\"Come on, Britt. Let's go.\" Her brother already had the trunk open and was pulling out the poles. Britney joined him in getting the gear out, and after a second, Father Justin did as well. In just a few minutes, they were all trooping down the slope towards the lower pond. It was hot, with temperature well on its way to ninety degrees, and insects buzzed in the grass and flew up in startled clouds as they made their way to the wooden dock that her grandfather had built years ago.\n\n\"Choose your poison, Father,\" Doug said as he opened up the cooler. \"What bait do you want?\"\n\nThe older man looked mildly amused. \"I don't know. What are we fishing for?\"\n\n\"There's catfish here. Yellow-belly and channel cat. Largemouth bass, too, and crappie, though we're trying to get rid of those. Too bony,\" he explained. \"And there's always some bluegill along the shore, too,\" he added, pointing around the large pond. \"Especially under the trees, where it's nice and cool.\"\n\nJustin selected a long pole with a cork handle and examined it. \"Well, it's been a while.\" He smiled with startling suddenness, and Brittany's breath caught. \"But I've got a hankering for some channel cat. Pass me that chicken liver, will you?\"\n\nBrittany watched as he hung the smelly, nasty mess on a tri-pointed hook. Pole in his left hand, he cocked it over his right shoulder. Then, with a slinging motion, he cast his line far out into the middle of the pond. The red and yellow bobber bounced once, then steadied.\n\nA veteran of many trips out to her FBFF's grandparent's place, Haley chose to fish with worms, and sent her line out towards a patch of shade at the east side of the pond with a practiced flick of her wrist. Perhaps a little intimidated by Father Justin's casual skill, Doug opted for catfish as well, and slung his bait into the deep waters on the west side.",
        "Brittney hated to fish with worms. They were just so gross. On the other hand, chicken liver stank to the sky, especially when it was hot. With a sigh, she chose the lesser of two evils and went for the catfish. Her bobber hit the pond with a soft splash, maybe twenty yards away from Father Justin's.\n\nShe sat down in one of the folding chairs they had brought with them and smiled at his impressed expression. \"Girls can fish, too.\"\n\nHe grinned at her. The expression transformed his face, making it appear much younger. \"My older sister would rather have been hit over the head with a hammer than go fishing,\" he said. \"She's kind of girly. But I haven't done it in years.\"\n\nBrittany nodded, and a companionable silence fell over the group. The only sound was the faint rustle of the breeze in the trees on the ridge to the east, and the unending chirp and buzz of birds and insects in the high grass around them. The sound was almost hypnotizing, and she found herself falling into a calm reverie.\n\nAfter about twenty minutes, with nary a nibble, Haley drew in her line, grimaced at the dead worm, and rebaited her hook, trying a different spot. \"There are fish in this pond, right?\" Father Justin asked. His voice was slightly plaintive. \"Or are you guys playing a joke on the noob?\"\n\nBrittney laughed. \"No, Father Justin. There's fish. At least, there are in this pond.\" She slanted a look at her brother. \"Of course,\" she added as her brother snickered, \"we could always go to the back pond and try our luck there.\"\n\n\"Don't do it, Father Justin,\" Haley said. \"It's a trap.\"\n\n\"Huh?\"\n\n\"Our grandfather wanted to restock the back pond about five years ago,\" Doug explained. \"There wasn't anything in it but tiny little bluegill. It was too shallow and muddy.\"\n\n\"So he hired a company to come out and dredge out the bottom and to do some landscaping work around the banks,\" Brittany continued, taking up the thread of the story. \"Some outfit from Mount Vernon, with a great big excavator. They were supposed to make it maybe five feet deeper and clean all the mud and silt off the bottom, and then plant grass around the edge so the run-off from the hills wouldn't make it all nasty and gross.\"\n\n\"What they didn't take into account is that we're on limestone down here,\" Doug said. \"Though they should have. And the guy running the excavator managed to punch a hole right through the bottom of the pond and into a sinkhole. By the next day, there wasn't hardly any water in the pond anymore. Most of it had all drained away. There was just a great big muddy hole with dead fish in the middle.\n\n\"God, was Grandpa mad.\"\n\n\"'I can't believe it,'\" Brittany said gruffly, imitating the old man's enraged refrain. \"'I cannot goddamn believe it.'\"\n\n\"It would have been almost funny if we all weren't so bummed out from losing the pond,\" Doug said. \"And the people that he hired just kind of stood there scratching their heads and looking at each other. They patched the bottom, eventually, and paid for it, too, which was the least they could do. So if we ever get a really wet winter and spring, maybe it'll fill back up with water and we can restock it. But that's a long shot.\"\n\n\"Huh.\" Father Justin took off his floppy, broad-brimmed cap and scratched his head.\n\n\"I'm getting some nibbles,\" Haley said.\n\nAll eyes turned to her bobber, which was indeed bouncing on the surface of the water in a hopeful sort of way. After a minute or two, it plunged down, and the tip of Haley's rod bent. \"I got one!\" she squealed, and began reeling her line in.\n\nIt proved to be a bass, though not a very big one. Wrinkling her nose, Haley made Doug take the flopping fish off the hook. \"Go tell your friends to come over,\" he told the fish, then dropped it into a wire-mesh fish cage, which he hung off the end of the dock. \"And your big brothers and your dad.\"\n\nWhile Haley and her would-be boyfriend chatted, Brittany decided to rebait her hook. The mess of chicken liver was even less appetizing than it had been before, and she wrinkled her nose as she put another chunk on her hook.\n\n\"Gross,\" Haley said as she wiped her hands off on an old towel. \"That stuff smells.\"\n\n\"Catches the fish, though,\" she replied, mopping sweat off her forehead and arms. \"God, I'm roasting. Can you hold my pole, Father Justin?\"\n\n\"That's what he said,\" Doug joked, then turned red as the priest raised his eyebrows.\n\n\"You are such a dope, Douglas.\" She handed her rod off to Father Justin, then pulled her shirt off. Underneath, she was wearing a white bikini top. Her shorts soon followed, and she sank back in her chair with a happy sigh, resolutely ignoring Father Justin, who was looking back and forth between her and Haley (who had followed her example) with a slightly panicked expression on his face.\n\n\"Oh, that is so much better,\" she sighed. The bikini was modest. At least, as modest as a two-piece swimsuit could really be. At least she wasn't flashing a camel-toe. The top covered her decently, while at the same time making sure that the tops of her breasts were visible, while the bottom clung to her hips and rear. \"Haley, can you oil me up?\" She waved a tube of suntan lotion at her friend.\n\n\"As long as you do me,\" the taller girl replied, resplendent in a bikini of midnight blue which perfectly complemented her eyes and smooth skin, white as Irish cream. As she slathered lotion on her back, she avoided Father Justin's gaze, worried about what she might see there. Is he a tit-man, or a leg-man? I'm bigger up top, but Haley has better legs.\n\n\"Ugh.\" Haley backed away. \"You smell like chicken liver. I've got to get away from you or I'm gonna barf.\" Picking up her chair and pole, she headed for the shore. \"Doug, want to come with?\"\n\nHer brother didn't need to be asked twice. Like a lovesick puppy, he followed Haley, setting up under a small patch of locust trees maybe fifty yards down the bank.\n\n\"Well, that's nice,\" she said to Justin. \"Doug's been crushing on Haley for years. Maybe she's finally starting to notice him.\"\n\n\"What does your brother do?\"\n\n\"He works for Dresden County Farm Service, in the repair shop. He's really good with machinery. If you ever have car problems, let him know. If he can't fix it, at least he'll be able to tell you what's wrong.\"\n\n\"And Haley?\"\n\n\"College in the fall. Southern Illinois.\" She gazed out over the pond. Was her bobber moving? Or was it just the action of the breeze pushing it around? \"I'm going to miss her.\" She swallowed past the lump in her throat. \"A lot. I thought we'd always be together. But someday in August I'm going to wake up and she won't be there.\"\n\n\"Well, at the risk of sounding trite, change is part of life.\"\n\n\"Yeah.\" She got up and fetched drinks out of the cooler they had brought with them. Diet soda for her, and bottled lemonade for Justin. \"It's just going to be weird, that's all.\"\n\n\"You're not going away to school? I thought a smart young woman like you would be going to college.\"\n\n\"Thanks, Father.\" Yes. That was definitely an interested nibble. She sat up straighter inn her chair, half her attention on her bobber. \"I could go, if I wanted. My grades were good enough. And so were my test scores.\"\n\nThe bobber was gliding out across the surface of the pond. As the slack lessened, the line rose from the surface. Barely breathing, she lifted the pole from its resting place in the metal holder hammered into the side of one of the dock-posts. \"But I've seen what happens to some people, when they go away to school. They come back and they've changed. They look at Fertile Valley, at us, like we're a bunch of ignorant, in-bred, white-trash redneck hicks. Just because we don't have a...a...a Starbucks or a Whole Foods! Why do we need one? Who the heck needs to pay ten dollars for a cup of coffee and a muffin? Me and Haley and Becca Thompson once spent all night drinking coffee and talking at the diner and our entire bill wasn't ten bucks.\n\n\"What's wrong with living where you grew up, marrying a good man, having a few babies, and raising them up right? That's what my mom did. And my grandmothers. Both of them.\"\n\n\"I'd say that if that's what you want, that's what you should do,\" Father Justin said mildly. He looked out across the pond. In his shorts and his silly floppy hat, he looked much younger. Almost her own age. \"And I think you should see what's on the end of your line. Because I think you've hooked something.\"\n\n\"Oh!\" In her stream-of-consciousness outburst, she had almost forgotten. She began to reel in her line, and immediately felt the heavy drag of something on the other end. Something big. \"Father? Can you get the net? It's in the trunk.\" Suddenly, the line grew taut, the surge of power almost jerking it out of her sweaty grasp. She tightened her grip, and her eyes widened as she saw a thrashing ripple break the surface of the pond. Whoa. Maybe we need a harpoon, instead.\n\nFingers shaking, she started to reel the line in. But the pull on the other end was heavy, the fish fighting her for every inch, and the end of her rod dipped toward the water.\n\n\"Don't fight it,\" a calm voice said in her ear. Justin stood beside her, holding the net on one hand. \"You're stronger than he is. Let him tire himself out. Fight too hard, and you could break the line and lose him.\"\n\nBrittany nodded, remembering a catfish she had lost the same way a few years ago, and how furious she had been. She let the fish pull against the line, only pulling it in when the line slackened for a moment. It seemed to take forever, but it probably was only a few minutes before Justin was leaning over the edge of the dock, dipping the edge of the net under the body of a fat catfish.\n\n\"Big one,\" he said admiringly as he hauled it out of the water. The fish thrashed angrily, its mouth opening and closing in comic dismay. \"Five, maybe six pounds, I think.\"\n\n\"Doug caught a nine-pounder once, when I was a little girl,\" she said. She turned to the bank. \"Hey, Doug! Look what I...\" Her voice trailed off in surprise as she took in the two empty chairs.\n\n\"Huh.\" Justin frowned. \"I wonder where they took off to?\"\n\n\"Well, Doug has been crushing on Haley for years,\" she said absently, and reached into the net to free the hook from the mouth of the flopping catfish. \"Today's the first time that she's ever given him a hint that she's interested,\" she added as Justin pulled up the fish cage from the depths of the pond and dropped the cranky catfish in to join his cousin. \"They probably wanted to go make out for a bit. And if Haley's feeling real generous, she might give Doug a beej.\"\n\nThe silence that followed that statement might have been like the one right before God rained fire and brimstone down on Sodom and Gomorrah.\n\n\"What?\" Father Justin asked.\n\nBrittany ran back the last few seconds in her mind, and nearly died of mortified embarrassment. You just told your priest that your best friend might be giving your older brother a blowjob. Idiot.\n\n\"But maybe not!\" she declared desperately. \"Maybe...um...maybe they had to go to the bathroom and went up to the house! The water's still on, and it has to be better than peeing behind a bush, right?\"\n\nFather Justin cocked an eyebrow at her, and one corner of his mouth curled up in the faintest hint of a smile. It made him look so cute that she almost kissed him, even though her hands bore a liberal coating of fish slime and she was shaking so bad that she might have stabbed him in the eye with the tip of her fishing pole.\n\nAnd it's not that pole I'm interested in. God, will he please say something?\n\n\"I'm twenty-six, Brittany,\" Father Justin murmured at last. \"And I wasn't raised on a desert island. I know what young men and women do together.\" His eyes twinkled teasingly. \"And not-so-young men and women, too. Although my knowledge is always going to have to stay...academic.\"\n\n\"Right.\" Her voice shook just a little, and she poured water from the cooler over her hands and dried them on an old towel, cleaning them off. \"I'm sorry.\"\n\nHe shrugged. \"Why? No one forced me to be a priest.\"\n\n\"No, not that! The bit...the bit where I talked about sex.\"\n\nThe older man settled back on the dock, his back braced against one of the pillars as he reeled in his line. \"Don't worry, Brittany. I'm not going to run to Haley's mother and threaten her with eternal damnation and hellfire.\" He frowned at his empty hook, picked clean by some unknown underwater culprit. \"They're messing with me. I know it.\n\n\"Is fornication a sin?\" the priest continued. \"Yeah. Sure. Technically. Do I believe that God will send Haley or Doug to hell for innocently exploring their sexuality, hopeful that they might find that they are the ones God intended for each other?\" He shook his head. \"No. I think the Almighty has more important things on His mind.\"\n\nGood God. Brittany stared at the priest as he stood and walked off the dock and into the underbrush. If he winked at me, I would let him take me right fucking now. And to hell with midsummer, the ritual and everything else.\n\n\"Ha.\" A satisfied exclamation, and Justin came walking back, a spring in his step. \"This will catch me a fish. I know it.\"\n\nBrittney squinted at his fingers, then blinked. \"A grasshopper?\"\n\n\"He wasn't paying attention, was he? And now he has to pay the price. Let this be a lesson to you, young Brittany.\" He waved the buzzing insect. \"Just when we are deepest in our revels, when all the world seems full of joy and mirth, there could be a horrible person just waiting to sneak up on you, stick a hook in the back of your neck, and throw you into a pond.\"\n\nShe narrowed her eyes at him. \"Does anyone ever tell you that you're...a bit weird?\"\n\nHe grinned. \"They never really stop.\"\n\nBrittany watched as the dark-haired priest baited the hook, thankful that the dampness in the crotch of her bikini could be blamed on the heat, the humidity, the fish she had just caught, or choice D -- all of the above. Years ago, she had committed to years of virginity because of the ritual which kept Fertile Valley happy, healthy, and prosperous. But now, she half-thought she was falling in love with the older man. Justin was everything she could want -- smart, kind, handsome, and even a bit funny, even if his sense of humor seemed a bit off-kilter.\n\nBut can you share him? You know you won't be his last lover. Only the first. Her heart was lanced by a pain that was almost physical as she watched Justin cast the madly whirring grasshopper into the shade on the west bank with a flick of his wrist.\n\nBut he will be mine. At least for a little while.\n\nIn the end, they made a pretty good haul. Helped by what he called, \"His little insectoid friends,\" Father Justin pulled a pair of fat bass out of the pond, and Brittney caught another catfish, though nowhere close the size of the first one. By the time that Doug and Haley slunk out of the tall grass with a ratty old blanket from the trunk folded over her brother's arm, the shadows were growing long and the sun was nearing the western horizon.\n\n\"What did you do?\" Brittany demanded, when they went up to the house to wash up and clean the fish.\n\n\"Wouldn't you like to know.\" Her best friend smirked as they stood together at the sink.\n\n\"Haley! Tell me!\"\n\n\"Not all of it. Not even to you, FBFF.\" The expression on her face gentled, becoming almost tender. \"Doug wanted to talk. Just the two of us.\n\n\"So we talked. And talking led to...other things. Nice things.\"\n\n\"How nice?\"\n\n\"Very nice.\" The smile widened wickedly. \"Now I know why your brother is so good with his...tools.\"\n\n\"Did you...\"\n\n\"No. But oh, God, Britt. I wanted to, so bad. I know he's your brother, but...\" Her eyes went soft and dreamy. \"He's got great hands. And great...other things. I made him happy. And he made me very happy. But I still haven't let any visitors through my front door.\"\n\n\"Oh. Good.\"\n\nThough, to be honest, Brittany felt just the tiniest bit disappointed that her best friend hadn't given in to temptation. If she and Doug got together, well, she would be happy for both of them. But if they were together together, then maybe one of her rivals for Father Justin's attention would be out of the running.\n\nIt really wasn't nice of her to think that way, and part of her squirmed guiltily. But another part of her remembered what it had been like a couple of weeks ago, when she had sat in the chair in Father Justin's office, her hands on her tits and her cunt absolutely on fire as she told the wide-eyed priest about her sexy, naughty dreams. Her fingers had pulled at her nipples, and she didn't think Justin had noticed the way she had rubbed her virginal thighs together until she exploded in one of the hottest climaxes of her entire life.\n\n\"Good?\" Haley interrupted her reverie. \"I'm making out with your brother, and that's all you have to say?\" Her eyes fell to her chest. \"God, you're thinking about Justin right now, aren't you? Look at your nips.\"\n\nUnbidden, her glance strayed out the window above the sink, where Doug and Justin were cleaning the fish. Several of the half-wild barn cats had gathered around. The tips of their tails twitched at the prospect of a free meal.\n\n\"He'll pick you,\" she heard herself say. \"You're prettier.\"\n\n\"Maybe.\" Haley rounded her eyes at her teasingly. \"But you've got better titties.\"\n\n\"And you've got better legs.\"\n\n\"And you've got a better ass.\"\n\n\"You think?\" Brittany craned her neck around, trying to get a good look. \"I always thought it was a little too big.\"\n\n\"It's not fat. It's just...bouncy.\" Haley smacked her rear with the palm of her hand, making her jump. \"I'll make you a bet. And it's the best kind. The kind where no matter who is right, we both win.\"\n\n\"What?\" she asked suspiciously.\n\nHer best friend smiled lazily and put her hands on her waist, drawing her close. \"If I win, you know that he'll pick you at Samhain. And after that, I'll try to convince him to let us share him. At least once.\"\n\nHer heart pounded. \"And?\"\n\n\"And if he picks you at the bonfire, you do the same thing for me.\" Haley drew a finger up and down her arm, making her skin rise up in gooseflesh, despite the heat of the room. \"Can you imagine it? All three of us?\"\n\nCaught in the web of her voice, Brittney nodded.\n\n\"Deal.\"\n\n<br >\n\n\n\nChapter 4: Bonfire Night\n\n\n\nThe next morning, Megan Murray trapped Justin after mass.\n\n\"Father, could I speak with you for a minute?\"\n\nJustin nodded, and extricated himself from a conversation with his parents, who had driven down to watch him say mass at his new church for the first time. Not wanting to be separated from her uncle, his little niece Priscilla clung to his leg, complicating the situation. He finally solved the problem by picking her up and carrying her as he turned to Megan. \"What's going on?\"\n\nMeg had two of her friends in tow, women of about the same age as herself. Their faces were friendly, but serious. \"We're having a meeting of the Ladies' Auxiliary next Saturday night. We'd like for you to be there so we can get you....better acquainted with some of the things we are responsible for.\"\n\n\"Saturday night? What time?\"\n\nMeg smiled mysteriously. \"Unfortunately, it's going to have to be fairly late. Some of the group officers have other responsibilities. Family, jobs, you know how it is.\" Justin nodded. \"So we aren't going to be able to start until around nine or so.\"\n\n\"All right.\" Justin silently said goodbye to his plans with a sigh. \"Where at? Here at the church?\"\n\n\"Oh, no,\" one of the other women said. \"That wouldn't do at all. There's just not enough room.\"\n\nJustin eyed the woman curiously. Why would the church not work? There was plenty of room in the basement, after all. Or even in the worship area itself.",
        "\"We change the location on a rotating basis,\" Megan said smoothly. \"That way we're not sticking one woman with clean-up all the time. And our neighbors here at the church wouldn't be too happy if they had to deal with a bunch of noise late on a Saturday night.\n\n\"We'll all be out at Erick and Sue Cantrell's farm. Do you know where it is?\" She smiled at him as he shook his head. \"Well, I'm sure you'll get to know the area soon. I'll e-mail you directions.\"\n\n\"Do I need to bring anything?\" he asked. \"Snacks, something like that?\"\n\n\"Oh, no.\" The oldest woman, who looked to be approaching retirement, looked him up and down. An expression, not quite disapproval, flickered over her round face. \"Just yourself. That's all that's needed. Or required.\"\n\n\"Well, I'll be there,\" he repeated. Something about the intent way all three women were looking at him was just a little bit disturbing. And when he glanced around the vestibule, he found that a large amount of faces was turned their way. \"If you'll excuse me,\" he said. \"My family is here, and I'd like to show them around town.\"\n\n\"Of course,\" Megan said. \"I spoke with your mother before the service. She's very nice. I congratulated her on raising such a pleasant young man. And you, too, of course.\"\n\nJustin bit back a bark of laughter as the sly arrow hit home. His rivalry with his younger brother William had been a source of irritation with his parents for literally decades. And the entire family had been astonished when, after a high-school career which could generously be called \"checkered,' had somehow found a calling working at an animal rescue foundation. That had led to a meeting with a very nice young woman, and he was now happily married with a daughter and another girl on the way. Their sister Jan had been more than a little miffed when the black sheep of the family had presented their parents with their first grandchild. But since she was happily busy backstabbing her way up the corporate ladder at an insurance company in Bloomington and didn't have time for a husband, let alone kids, little Priscilla was probably going to have to wait a while before she had some cousins on that side of the family.\n\n\"Thanks. They had to come down and make sure I was actually still in Illinois. Mom thinks that anything south of Springfield is filled with people who secretly want to invade the north and force us all to play banjos, drink moonshine, and watch NASCAR all day.\"\n\n\"Well, we'd be rude if we kept her waiting then, wouldn't we?\" She smiled at Priscilla, who turned her head to hide in Justin's chest. \"We'll see you on Saturday night, Father Kelly. Remember. Nine o'clock.\"\n\n\"What was that all about?\" his mother asked, coming up as the three women left. With the skill of a London pickpocket, she lifted Priscilla out of his arms before he could do anything about it, settling the toddler against her shoulder with the proprietary air of a grandmother who had seen one of her wishes granted.\n\nJustin shrugged. \"Just church politics, I think. A couple of the movers and shakers invited me to a meeting of the Ladies' Auxiliary next Saturday. There's probably some sort of thing going on that they need my support for, so they're hoping to get on my good side before anyone else does.\"\n\nHe hooked a finger under his collar. Even in the air-conditioned church, the crowded vestibule was sweltering. \"Let me get out of these clothes,\" he said, waving to the robes he had worn to say mass. \"I'll meet you out here in about twenty minutes.\"\n\n\"Oh? What happens in twenty minutes?\" his sister-in-law Kaitlyn said as she wandered up to them, her husband following.\n\nJustin glanced at his younger brother and grinned. \"Something,\" he said, leaning forward and pitching his voice low, \"that I've wanted to do for weeks.\n\n\"You'll like it, Kaitlyn. Trust me.\"\n\n*****\n\n\"Oh,\" Kaitlyn moaned. \"Oh my God. That is so good, Justin. More. More!\"\n\nHe grinned across the table at his brother's wife, who had a chicken thigh clutched in her fingers. In a high chair at her side, Priscilla looked at her mother anxiously. \"I told you. Best fried chicken in the state.\"\n\n\"Is there anything here that won't make me gain weight?\" Jan asked, eying the meal in something approaching dismay.\n\n\"Nope,\" he said, picking out a couple of pieces of chicken from the basket a smiling waitress had placed on their table a short time ago. Anderson's Restaurant was high-ceilinged and airy, with slowly-turning ceiling fans that wafted a gentle breeze across the room. The walls and floor were light-colored wood, and the ceiling white plaster. All around them, families still dressed in their Sunday best were eating their lunch. \"But you can do an extra thirty minutes on the exercise bike tomorrow.\"\n\n\"Not the sort of thing I would expect a priest to say,\" his brother said. \"Aren't you guys the ones who are always telling us we need to avoid temptation?\" Belying his words, he dipped a catfish fritter in tartar sauce and took a bite.\n\n\"All of this is going to go straight to my butt,\" Jan moaned. But she began to fill up her plate from the available choices. Baked beans, sweet corn, chicken and fish, cornbread biscuits and fried mushrooms. At her side, her daughter was happily gumming a chicken strip to death. \"So are you happy here, Justin? I know Mom and Dad were worried, when you got sent to a small town. But this looks like a nice place. You know. Clean. Not like some of the towns I drove through on the way here, where there's rusted-out cars up on blocks in front of every house.\"\n\n\"Well, I've only been here for a couple of weeks,\" he replied. \"But so far, so good, I guess. No one has gotten ticked off at one of my homilies for being too controversial, there aren't any money problems, and everyone seems to want to make me feel at home. I even-\"\n\nHe cut himself off as a familiar profile walked through the door and towards the take-out counter. As if she sensed his gaze, Brittany Murray turned and caught his eye. He waved tentatively, and she bounced over. Good God. Does she ever move at less than a scamper? \"Hi, Father Justin!\"\n\n\"Brittany.\" Today the gorgeous teen was dressed modestly, in an eggshell-blue sundress. \"Getting some take-out?\"\n\n\"Yes.\" She rolled her eyes expressively, and he smiled. \"Mom didn't feel like making lunch, and I certainly didn't.\" She fanned herself with one hand. \"Too hot. So Dad phoned in an order.\" She eyed the other people at the table with interest. \"Is this your family?\"\n\nHe nodded. \"Everyone, this is Brittany Murray. Her mother is one of the first people I met here in town. Brittany, this is everyone.\" He introduced her around the table.\n\n\"So I heard Mom invited you to the meeting on Saturday?\" Brittany asked, when she had said hello to everyone.\n\nHe nodded. \"Cool. I'll be there, too.\"\n\n\"Really?\"\n\n\"Yes, Father Justin. Really.\" She smiled. \"I'm eighteen now. So I guess technically I'm an adult. Mom said I could come if I wanted.\" She shrugged fluidly. \"So I'm coming.\n\n\"Whoops!\" Her glance darted across the room, to where an older man was impatiently holding up a pair of brown paper bags. \"Looks like our stuff is ready. I'll see you later, Father! Bye!\"\n\nAs she darted away, he found his mother shaking her head at him. \"What?\" he asked defensively.\n\n\"I've been waiting all my life for you to fall for someone, Justin. And you do it now?\"\n\n\"What? Don't be ridiculous, Mom.\" He picked up a cornbread muffin and cracked it open. Fragrant steam wafted up and he spread butter on the inside. \"She's just a girl in the choir. And if you haven't noticed, I'm a priest.\"\n\n\"Doesn't mean you can't look,\" his brother said as he wiped mustard off Priscilla's face.\n\n\"Actually, Billy, it kind of does,\" he replied shortly.\n\n\"My name is William.\"\n\n\"Boys.\" It only took one word from their father to halt the budding argument. William and Justin glanced at each other, rolled their eyes in unison, and stopped the impending bickering.\n\n\"You're imagining things, Mom. It's ridiculous. One, I'm a priest. Two, she's eight years younger than me. And three, I'm a priest.\"\n\n\"Well, I think it's completely disgusting,\" Jan said primly, though her eyes were dancing with the deadpan mirth that she rarely let out. \"For one thing, think about the age difference. I mean, it might not seem like much now. But when you're ninety years old, she'll only be eighty-two!\" She shuddered delicately, like a duchess who had just seen a mouse. \"That's just...indecent.\"\n\n\"Not helping, Jan,\" he muttered out of the side of his mouth, as he noticed his mother giving him an appraising look. He put his fork down firmly and looked around the table. \"I'm a priest. I'm happy being a priest. And Brittany Murray is a very nice girl who is looking to get married and have some kids. And that husband is not going to be me. Because I'm a priest.\"\n\n\"All right, Justin. There's no need to get all huffy.\"\n\n\"Huffy? Me? Mom, you're the one who...argh, just forget it.\" Closing his eyes, he took a deep breath, and reminded himself that in a few hours, his family would be headed back north, and he wouldn't have to deal with their attempts to run his life. They cared about him. They truly did. But sometimes they acted like they knew him better than he knew himself, and that they should be entitled to make his decisions for him. Instead, he steered the conversation to his sister-in-law and her daughter, and the baby that was due in October. Priscilla was a never-ending source of fascination for the family. He thought that William and his wife were actually fortunate that they lived a good hour away from his parents. Otherwise, his mother would be driving both of them crazy with her overenthusiastic grandmothering.\n\nAfter lunch, he took them on an abbreviated tour of the town, of which there really wasn't much to see, and then into the surrounding countryside. When the family got tired of farms, he drove east, pointing out the Blackhawk River and the rumpled skirts of the looming hills, capped by the green limestone crags of Shawnee National Forest. By midafternoon, they had seen pretty much everything there was to see, and when they arrived back at the rectory, everyone seemed to be ready to get on the road home, much to his unspoken relief.\n\n\"When will we see you again?\" his mother asked as he gave her a hug goodbye. \"Now that you're not cooped up in that dreadful seminary and can actually set your own hours, I hope to see you visiting a lot more.\"\n\n\"Not too long, I hope,\" Justin replied. \"But I'm still getting my feet wet. The people here have dealt with three priests in a row who haven't done their job. The last thing I should do is skip out when I've barely been here for a couple of weeks.\" He smiled down at her, surprised as always that he was taller than she was. The force of her personality always made her seem bigger in his mind than she was in real life. \"Besides, Mom. My job isn't really a nine-to-five thing. I always have to be there when someone needs me.\"\n\n\"Right.\" She smacked his arm with the flat of her hand. \"Well, don't you be letting these people run you ragged, Justin Andrew Kelly! You're still my son, and if I think they're working you too hard, I'll come down and give them a piece of my mind.\"\n\n\"All right,\" he smiled, and folded her into his arms again. Briefly, a vision crossed his mind, of his mother and Meg Murray facing off, and he didn't know whether he should look forward to it or run for the hills.\n\n\"Come on, Isabel,\" his father said. He was staring at the sky, doubtless plotting the route home in his head. John Kelly was the sort of man who thought that driving across Nebraska was fun.\n\n\"All right.\" William walked up, Priscilla's head resting on his shoulder. He stuck out a hand. \"Be seeing you, dingus.\"\n\nHe gripped it hard. \"Take care of yourself, jackass.\"\n\n\"Boys!\"\n\n\"What?\"\n\nEventually all the goodbyes were said, and Justin was left alone in the parking lot. He waved farewell as the cars pulled away with a vague sense of relief, and then went back into the rectory.\n\nIt was strange, Justin thought, as he made his solitary supper that evening, how quickly the old brick building had begun to feel like home. Much more than the house back on Fowler Street. He didn't need much. Just his books and his job.\n\nDespite his mother's doubts, he had found that he actually liked Fertile Valley. It wasn't big, wasn't sophisticated. No one would ever describe it as a hidden gem of downstate Illinois. But what it was, he thought, chewing, was decent. Not the sort of self-congratulatory morality that you found in some towns, where everyone was smugly proud of how virtuous they were. But the ordinary, common decency of people who didn't need anyone else's approval. People who were quietly confident of their own worth.\n\nAnd now I have to measure up to that, Justin thought uncomfortably. Despite his firm stance with his mother in the restaurant, over the last several nights his dreams had been filled with Brittany Murray. He woke up with the first light of dawn, his sheets a twisted, tangled mess, his cock almost painful with unslaked desire. Her body swam before his mind's eye, dressed in the white bikini that she had worn when they went out fishing a few days ago. But in his fevered imagination, the garment vanished like mist at dawn, and her eyes had grown warm and tender as she gazed at him, her full, plump lips whispering words of soft, sensuous passion.\n\nStop it. He scowled down at his crotch. Even the thought of the gorgeous, nubile teenager was enough to make his body rise, as mindless and eager as a fish striking at an insect on the surface of the pond.\n\nFirmly, Justin put the temptation aside and reached for a notepad and made some notes. The meeting of the Ladies' Auxiliary on Saturday night would be the first time he would meet one of the church groups, and he thought he might be asked to make a few remarks. He definitely wasn't thinking about Brittany, he insisted to himself.\n\nNot at all.\n\nSaturday evening came, and after his supper, Justin stood in front of his closet, wondering what to wear.\n\nOh, for the love of God, he told himself. Who are you trying to impress? Do you really think Brittany is going to pay any attention to you? With a couple dozen other women there? You're twenty-six. It's a little bit late to start acting like a teenager who's going on his first date.\n\nEventually he settled on a pair of charcoal slacks and an open-necked polo, firmly putting aside the temptation to wear a jacket and tie. Even if it wasn't way too formal for a simple church meeting, it was also completely ridiculous, considering the change in the weather. Summer had come, and had squeezed Fertile Valley in its hot, sweaty fist. Even with the sun nearing the horizon, the temperature was still well over ninety, and the humidity made things feel even worse.\n\nBy the time he arrived at the farm, the sun had set, and the glow in the west was fading from blood-red to orange and purple. It was, he noted idly, the eve of the summer solstice. The longest day of the year would be the next day.\n\n\"Father Kelly. Good. You're here.\" Megan Murray greeted him almost as soon as he parked his car. \"Come on around back. We decided to meet outside. It's too hot in that stuffy old farmhouse.\"\n\n\"You know,\" he said with a smile. \"We could have met at the church and been nice and comfortable in the air conditioning.\"\n\nMeg laughed lightly. \"I can tell you've never been part of a woman's group, Father. If we met at the church, how could Sue Cantrell brag about how great her hospitality was? She would lose her chance to score points with everyone else.\"\n\nHe nodded as they walked around the outside of the farmhouse, breathing deep. In the dim light, the scent of growing things seemed to hover around them like a cloud, thick and musky.\n\nThey turned a corner, and a sudden orange light sprang up, maybe fifty yards away. \"Ah,\" Megan said. \"Good timing.\"\n\n\"A bonfire?' he asked. \"In this heat?\"\n\n\"It's traditional,\" she replied. She put a hand on his arm, halting him. \"Father Kelly.\" Her eyes were dark, the green of her irises hidden in the dim light. \"I want you to keep an open mind tonight. Put aside your prejudices, and understand that some things are because they must be. That whatever we do, it is for the greater good of ourselves, our families, and our community.\"\n\n\"I don't understand.\" He frowned, confused, as he saw small groups of women, singly or in pairs or trios, walk towards the bonfire. Their outlines were dark in the light of the leaping flames.\n\n\"You will. Now, come with me.\"\n\nMegan guided him until they were only ten yards away from the fire. The heat was intense, and he felt sweat begin to trickle down his back. Soon, the women had gathered in a circle around himself and Megan. Their ages ranged from Brittany and Haley, who were barely out of adolescence, to a few old women who had to be approaching ninety if they were a day.\n\nWithout a word, the women began to walk around the fire. A low, eerie hum emerged from half a hundred throats in a tune that made the hairs rise up on the back of his neck. Wordless at first, and then a slow, deep chant. As the women sang, their motions began to change. Three circles, turning in opposite directions, with each woman slowly weaving back and forth within the pattern until his eyes were bewildered.\n\nSomething deep inside Justin responded. A cultural memory as the ancient Irish words flowed over him. Beside him, Megan translated, her words pitched just loudly enough for him to hear.\n\nBeautiful \u00c1ine\n\nOur queen and lover divine\n\nYour passion is fierce\n\nYour love eternal\n\nYour gifts too great to count\n\nWe thank and honor you for them all\n\nSun queen, bright one, immortal light and sacred goddess\n\nBe with us as we honor thy land\n\nIn the old way\n\nTwo will meet here tonight, on the eve of Midsummer\n\nA sacrifice for you\n\nOne will give blood\n\nOne will offer faith\n\nTake our gifts and bless this, thy land\n\nA bountiful harvest to come\n\nThe hymn ended, the dancing coming to a halt as the last words flowed over the moonlit fields, and then faded into silence.\n\nHe cleared his throat in the sudden qiet. \"I hope someone plans to tell me what is going on.\"\n\n\"Three circles, Father Kelly.\" Megan's lips curved slightly. \"You're an intelligent man. And an educated one. Surely you can figure some of it out.\"\n\nHe looked over the tableau, frowning slightly. \"Maid, mother, and crone, is that it?\" The closest circle was almost empty, with only Haley, Brittany, and two or three other girls he recognized from the choir. The second was far more numerous, filled with women in the twenties and thirties and older. And the outer was comprised entirely of older women, who were almost certainly beyond childbearing age.\n\n\"I'm no crone!\" snapped an old woman, her face a net of wrinkles. \"I'm in my prime! And if I was forty years younger, I'd teach you a thing or two, young man!\"\n\nThe other women hushed her. \"Yes,\" Megan said. Her eyes closed reverently. \"Three groups of women. One who are past the age when they can conceive. One who have husbands and families of their own.\n\n\"And one group who are still virgins.\"\n\nMegan spoke slowly, as if each word was weighty with significance. \"Tonight, Father Kelly, it is your duty, as the priest of St. Catherine's, to choose one of those young women, to lay with them, and to take their virginity to ensure the continued fertility and prosperity of the town.\"\n\nJustin nodded. \"Right. Very funny. Ha ha.\" He glared down at Megan, his heart hammering in his chest. \"Is this some sort of joke? Or is it a test, to see if the new priest is a secret pervert who would just love to prey on young girls? Because if it's a joke, it's not funny.\" His voice went harsh. \"And if you think I'm a secret pedophile, I am furious that you could believe that of me.\"",
        "Megan met his gaze unflinching, despite the disapproving mutter that went up from the crowd. \"It is neither, Father Kelly. I am completely serious. As are we all.\" She swept her eyes around the circle and was rewarded by an answering murmur of agreement. \"This is Fertile Valley. And this has been our tradition since the church was founded. Our ancestors, bless them, kept to the old ways. Their hearts and souls were large enough to believe that more than one faith could be true. That Jesus and the Irish and German pantheons did not need to be enemies, but could be friends and allies.\n\n\"We are Christians and Catholics. That is our faith. But our roots are deep, bred in the bones of Ireland and Germany and Scandinavia. And we cannot deny Brigid and Freyja and \u00c1ine and \u00c9ostre their due. Four times a year, we seek their blessings. \u00c9ostre at the spring equinox. \u00c1ine at Midsummer. Brigid at Beltane. And Freyja at midwinter.\n\n\"But the old goddesses are not like Jesus. In return for keeping our land fertile and our town safe, they demand payment. So one girl a season sacrifices her virginity at the rite. A young woman, chaste and pure.\n\n\"And enthusiastic,\" came a whispered remark from the crowd. \"Doesn't do no good if the girl doesn't want to get laid.\"\n\nMegan's eyes flicked to the side, silencing whoever had spoken. \"And the parish priest, of course,\" she added smoothly, \"to make the ritual complete.\"\n\n\"Me,\" he said flatly.\n\n\"Yes.\"\n\n\"Why?\"\n\n\"Because it is a...a fusion,\" Megan said. The firelight painted her face, doing strange things to her features. One moment, the wrinkles at the corners of her eyes and mouth made her seem ancient. The next, she looked to be barely out of her teens. \"Can't you see, Father? It has to be this way. Pagan and Christian coming together for the good of all.\"\n\nAt some unseen command, the five girls in the inner circle took a few steps forward. They were all in short, white, sheer dresses that left their arms and legs bare. A sudden gust of wind made the flames flicker and their clothing press against the firm young curves of their bodies.\n\nThen as one they took their dresses off. All five were completely nude underneath. Justin's breath choked in his throat as he took in five stunning young ladies. Tall, short, slender, or padded with generous curves, hair ranging from coal-black to brown to Brittany's reddish-gold. They stood silent, waiting. And not one of them looked the least bit frightened or disgusted. Indeed, DeeDee, a bubbly brunette who always seemed to have a smile on her face, was subtly arching her back in order to make her chest seem bigger.\n\nNot that it really needed any help.\n\nFive women, all caught on the cusp of womanhood. And all his.\n\nAnd to have them, the only price he would have to pay was his integrity and his honor.\n\n\"No,\" he said. He tried to move, but his feet seemed rooted to the ground, as if the earth itself was holding him in its grip.\n\n\"Yes,\" the girls answered in unison.\n\nJustin turned to Megan. He knew he should leave. Should run, should drive back to the church, and get on the phone to the bishop in Peoria to let him know that St. Catherine's was hiding a secret pagan fertility cult. But he couldn't. Not until he had answers.\n\n\"Why?\" he demanded, his voice high with strain. \"Why should I do this? Why should I abandon my vows for you?\"\n\nMegan took one step forward. Firelight glinted on her cheekbones and in the hollows of her eyes. \"Because of what is at stake.\"\n\n\"Fine.\" He crossed his arms. \"What?\"\n\n\"A soul.\"\n\nJustin opened his mouth to fire back a hot retort, then paused. The value of a soul was, quite literally, beyond price. Satan himself had offered all the kingdoms of the earth to Jesus. All he asked in return was that Jesus worship him.\n\nAnd Big J told him to fuck off.\n\n\"All right,\" he asked warily. \"Whose soul?\"\n\n\"Not whose,\" Haley said. She had moved so that she was standing near her friend. \"Whats.\"\n\n\"What?\"\n\nFor the first time, Brittany spoke. \"We are not here for the soul of one person, Father Justin. But for the soul of the town. Of Fertile Valley and everyone in it.\"\n\n\"That's ridiculous,\" he said. He glared around at the circle of women -- some naked, most not. \"Are you trying to tell me that this is some sort of battle between Heaven and Hell? A war in Heaven for the soul of one small town in Illinois? And the way I get to save Fertile Valley is by...by...\"\n\n\"By fucking the virgin daughter of one of the townspeople?\" Meg finished for him smoothly as he stuttered, unable to complete the sentence. \"No. Of course not. We do not try to interpret the will of God here.\n\n\"Besides, who says it has to be a war? The ways of evil are not always clear. No one has a bright red light flashing over their head, warning you that they're a bad guy, like in one of those video games.\n\n\"But the soul of a town is something that is real, Father. You know it. You have felt it. Here, and other places, too. Haven't you ever driven through a small town, and known, deep down in your heart, that the town itself was dying? Farms sold off, businesses shuttered, the schools consolidated? All the people ground down, beaten up, helpless and hopeless, mired in drugs or abuse, only one step away from utter despair?\"\n\nThe older woman raised her chin. \"We have seen it. And we say no. We will not surrender. We will not yield. We worship God in all his bright glory. And at the same time, we sacrifice the virginity of our daughters on the altar of the old powers, as we did in our own time. The hunters guard our town from the predators who would steal our joy from us.\n\n\"And the rewards,\" she said, righteous passion giving way to her normal good humor, \"are more than worth it.\"\n\n\"My vows...\" he repeated weakly.\n\n\"A vow is a serious thing.\" Megan shared a look with her daughter. \"Everyone here knows this. And we do not ask this of you lightly.\" A smile tugged at the corners of her mouth. \"I could be a complete hypocrite and point out that for much of the fist half of the life of the Church, priests could and did get married, no matter what Rome had to say. And that the reason that marriage was banned in the first place was because a bunch of dried-up old farts didn't want women influencing the priesthood. After all. Who is a man going to pay more attention to? The Pope, who is so far away that he might as well be on another planet? Or his wife, who is cooking supper for him right now?\"\n\n\"And once you had married priests,\" Haley put in, her dark eyes blazing, \"It's only a matter of time until the women want to be priestesses. And God knows we can't have that.\"\n\n\"Sophistry,\" he muttered to himself. Under the calm gazes of so many women, he could barely think.\n\n\"What?\" Megan asked.\n\n\"Sophistry. Tailoring your argument so that you reach the conclusion you want. Who cares if priests back in the past could marry? We don't live in those days anymore. It hasn't been allowed for a thousand years.\"\n\n\"So what?\" Haley demanded. Her long black hair fluttered in the breeze. \"A thousand years ago, people thought the sun went around the earth, rather than the other way around. Now we know different. We grow. We change. We become more than we were. Isn't that the way people make progress?\"\n\nAnd then Brittany took a step forward, her eyes blazing in the firelight. \"And who's to say that having celibate priests is actually a good idea, instead of some tradition that keeps on going, despite the fact that it's really stupid? How is a priest supposed to understand the problems married people have if he's never been in a relationship? It's like a blind man telling someone how to drive through town. Eventually, there's going to be a car crash.\"\n\nJustin couldn't concentrate. The fire, the heat, the distracting presence of five naked young women, now only a few feet away, the not-quite-hostile stares of the other women, waiting for him to make a decision...all of it made his head pound and his stomach roil. \"You don't know what you're asking me to do. I've always wanted to be a priest. It's what I am.\"\n\nBrittany lifted her face. Somehow, in that moment, he felt as if she could see his naked soul. \"You can be more,\" she whispered.\n\n\"And we're not asking you to stop being a priest, Father Justin. We're asking you to be our priest. For Fertile Valley.\"\n\nJustin ran a shaking hand over his face. What did you do when you discovered that a dream you never even knew you had could be real? \"Can I...\" He stopped, then started again. \"I need some time to think about this.\"\n\nMegan nodded. \"Sure. We can give you a few minutes. But not much more.\" She cast a glance up to the sky. The moon was rising in the east, a few days past full. \"Not much use trying to perform the rite of Midsummer Eve past midnight.\"\n\nHe turned his back, trying to rein in his galloping thoughts, which were trying to ride in five different directions at once.\n\nFocus, you idiot.\n\nHe had two choices. Leave or stay. If he left, well, he might as well kiss St. Catherine's goodbye. Every woman who held any authority in the parish was at the bonfire tonight, giving silent approval for the proceedings. So he really couldn't count on much support if he chose not to participate. He might not be asked, point-blank, to leave the parish. But he doubted he would get much cooperation, either. Even in a best-case scenario, he would be looking at a situation where he and the women of the church barely tolerated each other. And that attitude would soon bleed over to the men and children as well.\n\nHell hath no fury like a woman scorned. He sighed, rubbing his temples.\n\nOn the other hand, what if he stayed? He would be breaking his vow of chastity. But Megan's words had rung true. There was something different about Fertile Valley. He had noticed it the first time he had seen it. It was as if some benevolent being held it cupped in the palm of a protective hand, keeping it safe from outside forces.\n\nYou know what, Justin? You're no better than they are. If you're going to do this, then be honest with yourself.\n\nI am being honest. Yes. I want her. But I want all of it. Not just one night with a woman. But a parish that is happy and content. And if breaking my vow for one means that I can accomplish the other, then that vow can be broken and damned. I might have to answer to God for this. But didn't I swear to make my life a sacrifice? And who am I to say that my life is more important than an entire town?\n\nHis heart hammered at his chest, feeling hard enough to crack his ribs. But he turned around, facing the circle of women.\n\n\"I'll do it.\"\n\n*****\n\nIt had been almost impossible for Brittany to keep calm through the long, tense standoff between Father Justin and her mother. The priest had been shocked, appalled, quietly furious, and confused in turns, while her mother had somehow faced that outrage with a calm steady presence that she envied.\n\nBut Brittany could also sense the excitement and desire that Father Justin was feeling. It was there, underneath, even if he wasn't admitting it to himself. His eyes had flickered over Haley and Brittany and DeeDee and the other two girls. It was as if he was at war with himself -- his body wanting what his mind was trying to deny him. She wished she could talk to him, without everyone else around. She was sure she could make him understand.\n\nAs it was, though, she had to stand and wait with everyone else, the firelight warming her skin and her desire heating everything else. She would have thought that she would be embarrassed to stand in front of forty or fifty other women, most of whom had known her since she was in diapers, completely naked. But somehow that didn't really seem important. At least, not as important as fucking Father Kelly was. She could feel the deep, steady pulse of the ground beneath her feet, almost flowing into her, as if she were a battery and the earth itself was making sure she had all the energy she needed. The feeling made her pussy hot and wet. If she looked down, she knew she would see that her lips were puffy and slick with her juice.\n\nGod, will he make up his mind? Or maybe I should ask one of the goddesses instead. Father Kelly's back bent. At his sides, his fists clenched in a fury of indecision. Brittany wanted to go to him, to take his hand, and tell him that it was all right. But a single sharp look from her mother rooted her in place.\n\nShe closed her eyes, hoping against hope. And then a gasp from Haley made her open them again. Father Justin had turned and was now looking at them. First her. Then Haley.\n\n\"I'll do it,\" he said.\n\nBrittany's heart leapt. \"On one condition,\" Justin added. His face might have been carved from rock. \"Do you swear, all of you, by whatever god or goddess you worship tonight. Do you swear that all the girls who participate in this...in this ritual of yours are here willingly?\"\n\nBrittany's mouth fell open in silent outrage. To think that her mother, or Haley's mother, would try to force them to take part in a holy rite!\n\nSomehow, Megan Murray stayed calm. \"I swear.\" She titled her head at the priest. \"Do you need me to get a bible?\"\n\nFather Justin raised his chin. \"If your word is good enough for these young ladies, it's good enough for me.\"\n\n\"Good. Now, it's your choice.\" She stepped away, leaving Justin alone in the firelight.\n\nBrittany bit her lip. It really wouldn't be the end of the world if Father Justin didn't choose her, she told herself. There was Beltane. And Midwinter. And the spring equinox. Eventually, surely she would be chosen.\n\nEven if seeing Justin's gaze fall on Haley made it feel as if her soul was being ripped in two.\n\nAnd then he turned, just slightly, and suddenly there were only two people in the whole world. He took a step forward, then another, and held out his hand. With a feeling of disbelief, she took it. When their fingers touched, she was filled by an overwhelming sense of rightness. The ground under her quivered, as if the entire valley was a vast bell that had just chimed the hour.\n\nBrittany smiled up at Justin. \"Me?\"\n\nHis smiled back, and she melted. \"You.\" For a second, he chewed his lip, looking adorable. \"Where? The church? Or your house?\"\n\nShe snickered. \"No, of course not. There's a place at the bottom of the hill. Just for us, where no one will interfere or snoop around.\"\n\nBrittany turned to leave, but a flicker of motion caught at the corner of her eye. \"One second.\" She took five quick steps and hugged Haley, who had been watching them with bitter resignation.\n\n\"I'm sorry,\" she whispered.\n\n\"Don't be.\" Her hair stirred at her best friend's reply, and she could feel the restless heat of Haley's desire. It had not been quenched, she knew. Only dammed up. And when it finally broke loose, people better watch out. \"I want to know everything. And don't forget your promise.\"\n\nShe giggled, sweat-slickened breasts sliding against Haley's chest. \"I won't.\"\n\n\"Good.\" A hand smacked her rear. \"Now go! Haven't you been waiting for this?\"\n\nShe turned and scampered back to Father Justin, who was watching with a bemused look on his face. As they passed out of the circle of firelight, the women parted, then closed back in behind them. A second hymn began, and the high, clear notes followed them down the hill.\n\n\"That's nice,\" Justin said. His hand hadn't left hers. \"Do you know the words?\"\n\n\"Um...\" She looked up at him. \"They're kind of...rude.\"\n\n\"Oh?\"\n\n\"Yeah. When they talk about plowing, they're not talking about farming, that's for sure.\"\n\n\"Oh.\" Even in the rapidly-fading light, she could see the way his face flushed with embarrassment. Luckily, they were nearing the bottom of the hill and she could see the tent that she and Haley and DeeDee and Morgan and Faith had set up earlier in the evening. Maybe ten feet on a side, it was just high enough for them to be able to stand in without crouching.\n\nShe held a flap open for him. \"Come on in.\"\n\n\"A tent?\" he began, then slowed as he crossed the threshold. The tent was lit by small candles, which gave the scene a gentle, golden light. Not the harsh sunlight of day, or the mysterious shadows of night. But a twilight feel, a place on the border. The sweet scent of crushed grass and clover rose up around them, and the floor was covered with soft blankets and pillows.\n\n\"Here, Father Justin.\" Her heart pounding with excitement, Brittany knelt on the floor. \"Let me help you.\" With trembling fingers she untied his shoes, then slid them off his feet. \"And I need to tell you the rules.\"\n\n\"Rules?\"\n\nBrittany smiled up at him, so glad that somehow God had conspired for him to be sent here. \"Yes.\" She stood and began to lift up his shirt. \"Not many. But a few.\" She had to bite back a whimper of desire as his chest came into view. Not ridiculously buff, but definitely attractive, with a flat belly and an interestingly masculine trail of hair leading downward from his navel.\n\n\"First rule. When you...when you...when you...\" Her fingers shook as she undid his belt, and she could not get her stammering tongue to form the words. \"You know,\" she gestured helplessly.\n\nJustin seemed to be fighting back a smile, though the muscles in his stomach jumped when her fingers brushed against him. \"When I climax?\" he said softly.\n\nShe nodded gratefully. \"Yeah. You have to do it in me. And not in my mouth, either. Mom was real clear about how that was super important. She told me that if you wanted to know why you should think about the Parable of the Sower.\"\n\nJustin's brow clouded, then cleared as realization hit. \"Oh. I get it. We want to make sure that my...my seed doesn't fall on barren ground?\"\n\n\"I guess.\" She tugged his slacks down. Inside his boxers, there was a promising bulge. She pulled off the slacks, and after a moment's consideration, his socks as well.\n\n\"So what's the second rule?\"\n\nBrittany straightened, resting her palm on Father Justin's crotch. She felt a moment of pure triumph as he began to harden under her touch. The fabric of the priest's boxers tented outward as his cock began to stiffen. \"Only that we be good to each other.\"\n\nAnd then she lifted her mouth to him, giving herself as an offering, a gift, a virgin whose sacrifice would continue the good fortune of Fertile Valley.\n\nAnd Justin's plunging mouth, unrestrained at last, met hers halfway, their lips locking as mutual desire broke through their barriers. His mouth was clumsy, his lips almost too hard, and she reached up and took his cheeks in her hands, gentling him as she showed him what she liked. She opened her mouth, just a touch, and let the tip of her tongue slip out to lick at the seal of his lips. Once, twice, and then he opened for her. His breath was sweet, and she groaned as his arms closed around her, pulling her to his chest in a sexy, passionate embrace.\n\nInch by wonderful inch, his gorgeous manhood hardened, until she could feel its entire length pressing into her stomach. The sensation, wholly new to her, made her knees shake, and she knew she couldn't stay standing for long. Her hands roamed all over his body, learning by touch what she had wanted to know for weeks.\n\nWhen their lips finally parted, Justin looked faintly stunned, like a young man who had learned that Santa Claus was real after all. \"Wow.\"\n\nBrittany leaned up, brushing his lips with hers teasingly. \"How long has it been? Since you've been with a girl?\"\n\nA sudden blush made his cheeks go red. \"Never.\"\n\nHer mouth fell open. \"What? Never?\"\n\n\"No.\"\n\nBrittany floundered. She knew that priests were supposed to be celibate. But she had never imagined that Father Justin was a virgin, too! \"Um. Okay!\" she said, a trifle desperately.",
        "\"Something wrong with that?\"\n\n\"No! Of course not!\" Oh, God, this was not the conversation she had thought they would be having right now. \"I mean...I hoped...I hoped that you would know what to do. Because it's my first time. And I thought that, you know, one of us should know what they were doing.\" She looked up at him, still shocked. Every boy she had ever gone out with had been a randy, eager horn-dog. Even if she had been careful to draw a firm line with them, they would have been more than willing to step across it if she had ever given them a sign that she was willing. A virgin? Father Justin? And he was...what? Twenty-five? Twenty-six? \"That is just so...sad,\" she said.\n\n\"I knew when I was a kid that I wanted to be a priest. And that priests were celibate.\"\n\n\"Yeah, but.\" She laid her head on his chest, comforted by the beating of his heart. Below, his phallus pulsed against her stomach in the same sensual rhythm, making her wet. \"You could have. Once or twice. Just to see what it was like. Right?\"\n\n\"I could have. I didn't.\"\n\nShe raised her head and searched his face. Somehow, he seemed like the loveliest man in the whole world. There was a tiny dimple in the corner of his mouth, right where it was tucked up in the merest suggestion of a smile. She leaned up and kissed it. \"Then I guess we're going to have to teach each other. Though my sister has been happy to tell me everything she and her boyfriend do. Though sometimes I don't really want to know.\" She turned, then got down on all fours on the floor. The thick blankets were warm against her cheek as she lifted her rear high into the air and spread her thighs wide.\n\n\"Um...Brittany?\"\n\n\"What?\"\n\n\"What are you doing?\"\n\n\"It's the way it happened. In my dream.\" She moved slightly, rubbing her sensitive nipples on the blanket. The prickle in her areola made her belly quiver. \"I'm ready, Father Justin. Please. Take me!\"\n\n\"Good God protect and defend us,\" the priest muttered. \"And all the goddesses above and below as well,\" he added hastily, as if Brigid and Freyja were listening and might be ready to do a little extrajudicial smiting if he wasn't respectful enough. Brittany heard a whisper as his boxers hit the ground, and then felt the floor of the tent settle slightly as Justin knelt behind her. A hand rested on her back. She took a sharp breath as it stroked her, from the small of her back to the nape of her neck and back again. \"I am not,\" he said firmly, \"going to have my very first time like this. Like a couple of dogs humping away at each other in a junkyard.\"\n\nWarm lips pressed into the base of her spine. Brittany moaned as Justin's tongue flickered out and tasted her. \"On your back,\" he whispered.\n\nShe obeyed immediately, without thinking. She flipped over, her head coming to rest on a fat, plump pillow. Her eyes went round as she took in the long, thick length of Justin's manhood for the first time. It was bigger than she would ever have thought in real life, even considering the naughty movies she had sometimes watched with Haley or some of their other friends. It was a lot easier to watch some other girl get boned with a great big cock than to deal with it yourself. Not that Justin was some sort of freak. But still. There was a world of difference between watching something on the screen of her best friend's laptop with a bunch of other girls giggling around you, and having it only a few feet away, big as life and twice as hard.\n\n\"Um.\" Justin looked from her face to her pussy, and then down at his waving cock. Pre-cum, which she had seen once or twice when she had given her frustrated boyfriends a quick hand-job, gleamed wetly in the yellow candlelight. If it hadn't been for the rule, she would have tried to see how he tasted. \"Are there any rules for you?\"\n\nBrittany thought she knew what he was talking about, and smiled. \"No, Father Justin.\" She decided to tease him. Just a little bit. \"I can cum as many times as I like. But I would like it a lot,\" she hinted. \"If you used your tongue on me. Down there.\" Just to make things clear, she pointed at her cleft.\n\nThe young man smiled nervously. And what was he, after all? Priest? Lover? Confidant? Confessor? Or merely a man who would guide her over the border into womanhood, as she would guide him at the same time? \"I'm not going to be very good.\"\n\n\"I don't think anyone ever is, the first time they try. But the important thing is that you actually do try.\"\n\nHe nodded. \"One promise?\"\n\n\"Anything.\"\n\n\"Tell me if I'm doing anything wrong.\"\n\nAnd then he lowered his head, kissing the inside of her thighs.\n\nMaybe he was too nervous, too unsure, to dive right into her pussy. Maybe he thought he would be too clumsy, too inept to please her. God knew that people didn't make things easy for men who were sexually inexperienced. But the feel of his lips on her skin made the wait worth it. So warm. So sweet. So tender. He worked his way up, always closer to where she wanted him, where she needed him, but always too far away.\n\nBrittany closed her eyes, trying to stay calm. This was the hardest part. Her mother had warned her. Megan Murray had been one of the women who chose the virgin's path. Nearly thirty years ago she had been chosen for the rite of the spring equinox by Father Snodgrass, who had been much younger then. And the one lesson she had learned and passed down to her daughter was that you could not hurry pleasure.\n\nSo she relaxed, and concentrated, paying no mind to anything in the wide green world but the heavenly feeling of Justin's lips and mouth and tongue as he wandered from one leg to the next, slowly drawing nearer his goal. Unbidden, her hands came up to cup her breasts, the tips of her fingers slowly stroking the undercurves of her mounds. The sensation made her spread her legs wider. One part of her wanted to pull Justin up, to have him sink into her, to take her unwanted virginity away. Another, wiser portion realized that what Justin was doing was just as important for him as it was for her. And that if she interrupted him he might think that he wasn't pleasing her.\n\nJesus Christ in heaven. And Freyja and Rhiannon and \u00c1ine, wherever they might be. And any other fertility god or goddess who might be listening. Maybe I'm giving him extra credit because he's never been with a woman. But this is so fucking good! Her legs were shaking, her nipples hard as pebbles as her fingers teased them with long, slow pinches that made her pussy surge with hot, liquid wetness. Justin lifted his eyes to her. When they met, their gazes locked, and something passed between them. And the priest moved his head that last, crucial inch, licking her from the base of her labia at the top of her cleft in a long, sweeping stroke that made her toes curl and her head tilt back in rapture.\n\n\"Oh, fuck!\" The words seemed torn from her mouth. She knew she should be ashamed for cursing in front of her priest. But she could not find it in herself to care. The feelings at her core were just so fucking good. Tingles rushed up and down her body, making the muscles inside her sheath clench and breasts feel hot and heavy and swollen.\n\nBut somehow, it still wasn't enough. At least, not when it could be so much better. Justin was lapping at her lips with an enthusiasm which was completely gratifying, even if his skill wasn't all that could be desired. But what would happen if he was actually doing it right?\n\nSo Brittany reached down, tangling her fingers in Justin's wavy brown hair. With a tug she moved him higher, and also shifted her hips on the blanket.\n\n\"There,\" she whispered, pointing to the spot at the top of her labia. She knew what it was, and where it was, even if Justin didn't. But she could help him. If he decided to stay in Fertile Valley, he would be initiating many more women into the joys of sex. And every one of those women deserved to have their first experience to be fantastic. And that wasn't going to happen if Justin didn't know where a woman's clit was. \"Lick me there.\"\n\n\"Hmmm.\" The priest reached down, and ran a finger between her lips. Brittany's hips bucked as they parted under his touch. \"That seems...important.\" In an action that made her eyes widen, he set the tip of his finger between his lips and licked it clean. \"You taste...incredible.\"\n\nOh my God. My priest is a secret perv.\n\n\"If you like what's down there,\" Brittany purred, playing the game. \"You'll love what's up here.\" She reached down and spread her lips wide, making sure her clit was fully exposed. \"She's nice and tasty. Why don't you kiss her hello?\"\n\n\"Hello,\" Justin whispered. With closed lips, he planted a kiss on her bud. Brittany's mouth hung open as a tingle of pure pleasure raced through her body. \"I'm Justin. And I hope we're going to be friends.\"\n\n\"More. Please.\"\n\nA tiny light of triumph lit the young man's eyes, and he went to work on her with a will. Closed-mouth kisses transitioned into deep, soft caresses. And when her pleas turned frantic, Justin began to lavish long, slow sweeps of his tongue that dragged on her pearl until she was writhing in their nest of blankets and pillows, her voice spiraling upward into half-frantic shrieks. All of her being seemed to be focused on the pleasure the shy young priest was giving her, and her hands massaged her breasts, her hips bucking in a rhythm directed by an unknown conductor, until with a hoarse scream, she exploded. Her entire body shattered in a paroxysm of pleasure like dynamite thrown into a pond, a fireball bursting up and through her body until she could not even tell where her limbs ended and Justin's mouth and tongue began.\n\n\"Stop.\" It was less a command then a hoarse, begging whimper. She couldn't take any more. \"Please. God, baby, it's too much.\" With the last strength in her arms, she dragged Justin away from her clit and onto her belly. His eyes, she noted with a ghost of amusement, were very, very pleased with themselves.\n\nBut who could blame him? Over the five years since she had discovered what made her happy, she had brought herself to orgasm with her fingers, a dildo, a vibrator her mother had bought for her, pillows, a stuffed koala, her best friend's tongue (but only twice) and a detachable shower head. Nothing had come close to the climax that Father Justin had just given her.\n\nAnd it was his first time with a woman!\n\nHe was looking at her, right now, his gaze so open and anxious it made her want to take him home and tuck him into bed. \"It was good?\"\n\n\"It was.\" Entirely of their own volition, her lips curled in a lazy smile. \"It was very, very good.\"\n\n\"Good.\" A slight tension lifted out of Justin's shoulders. \"I wasn't sure.\"\n\n\"Me screaming your name wasn't hint enough?\"\n\n\"Oh, God. Everyone probably heard, didn't they?\"\n\n\"Don't worry.\" Despite the fact that her arms felt like loaves of wet bread, she reached down and patted his cheek. \"That's a good thing. You know all of them are going to be waiting to make sure we've done the dirty deed.\"\n\n\"But we haven't.\"\n\n\"No. We haven't. Not yet.\"\n\nHe kissed her stomach. \"So. Tell me about...all this.\"\n\n\"All this?\"\n\n\"You know. Fertile Valley. And how the Diocese of Peoria is apparently playing host to a bunch of bedamned Irish and German pagans. Who sacrifice the virginity of a teenage girl once every three or four months to keep the entire area happy and prosperous. With the parish priest playing the role of divine impregnator.\"\n\nShe wrinkled her nose at him. \"You wish. I'm on the pill. And I don't know much. Just some of the stuff Mom has told me.\"\n\n\"I'm listening.\"\n\n\"Then listen from up here with me. Not down there.\" With a tug, Brittany pulled him up to her level. She rested her head on his shoulder.\n\n\"Our people, Mom and Dad's people, were from the west of Ireland. Places where the old ways hung around the longest,\" she said quietly. \"Places like Cork and Galway and Kerry. The wild lands, where some people still worshipped the old Gaelic Gods. Brigid and \u00c1ine and Hearne and Nuada Silverhand.\n\n\"They settled here. We're one of the oldest towns in Illinois. Older than Chicago or Springfield or Quincy. Almost as old as St. Louis.\"\n\n\"Mmm.\" Justin stroked her hip, making her curl into him happily. \"My hometown has the oldest published newspaper in Illinois.\"\n\nShe poked him. \"Oh. So now it's a contest?\"\n\nHe tickled her nipple, which made her gasp. \"The story.\"\n\n\"It's really not much of a story. The Irish who settled here honored the old ways. And so did the German and Norwegian Catholics who followed. And what was the harm? A ritual that they had followed in the old country transplanted to the new? A choir of virgin girls who would sacrifice their chastity in service to the entire community?\n\n\"No one thought about it. No one cared. It was just a silly tradition, like the drunks who get wasted up in Chicago every year on St. Patrick's Day.\n\n\"Until we woke up one day and realized that it was actually working. That while our neighbors were all falling apart, small towns drying up and blowing away like dust in the wind, we were still doing all right. Wal-Mart didn't come in to set up a store and drive all the other businesses in town bankrupt. We didn't get a McDonald's or a Home Depot. And no one seems to want one.\"\n\n\"And now it's me,\" he murmured into her hair.\n\n\"And now it's you,\" she agreed. She stroked his chest. \"Another girl at Beltane. Haley, maybe. She likes you. A lot. And then another one at Midwinter. And another in the spring. Over and over again.\" A phrase of her mother's surfaced. \"Every year is a ripple in the long slow stream of time.\"\n\n\"I really should be horrified, disgusted, and report this entire parish to the ecumenical council,\" Justin said. \"But to be honest,\" he added, rolling over until he was braced on his elbows above her, and his smiling face was mere inches from hers. \"That sounds like an awful amount of work. And I think there's better ways we can spend our time.\"\n\n\"I like a man who has his priorities right,\" she smiled. Oh, God. It was finally going to happen. The unbearable weight of her virginity was finally going to be taken away. As the tip of Justin's cock knocked at her entrance, she drew him down for a kiss.\n\nAnd opened.\n\n*****\n\nIt should, Justin thought to himself, be an event which was celebrated by marching bands. Perhaps a twenty-one-gun salute. Or maybe a fireworks show and a flyover by the Blue Angels.\n\nInstead, what he had was a somewhat stuffy tent, a bed of blankets and pillows, enough candles that the entire affair could be considered a fire hazard...\n\nAnd Brittany Murray. His heaven, his hell. His temptation, his heart's desire and his fall from grace. Propped above her, her body was a feast and a delight for his sex-starved senses. As he kissed her, his inexperienced mouth doing its honest best to return to her the pleasure she was giving him with every breath, he wondered how he had ever lived without her. Her bright, cheery humor. Her green, laughing eyes. The warm curve of her mouth, that even now was smiling up at him. Her body, so richly curved that it was all he could do to not drop his head and kiss every sexy inch of her until she was a quivering heap in his arms.\n\n\"Justin.\" Her eyes sparkled up at him as they kissed.\n\n\"Hmmm?\"\n\n\"Are you going to fuck me soon? Because that's what we came down here for.\" With an athletic twist of her hips, she managed to draw the lips of her pussy up the throbbing length of his phallus, which had been hard for so long that it almost now seemed to be a part of his natural state.\n\n\"Soon,\" he whispered. He had not got nearly enough of the incredibly gorgeous teen. He lowered his head and nuzzled the twin glories of Brittany's breasts. So round, so firm, capped with pink nipples that stood up high, just begging to be suckled. He took one into his mouth, and then the other, pulling on them as she moaned and twisted. Somehow, they stiffened even further under his lips, and he flicked at the tips with the end of his tongue, which made his lover squeak in a decidedly undignified manner.\n\n\"Justin! Please! I need it!\" One leg rose, Brittany's sleek young thigh running over his hip, over and over again. With a tug at his hair, she pulled him away from her breasts and back to her face, kissing him deeply. Her mouth panted hot breath into his ear, and her teeth nipped at his earlobe. Suddenly, her arms and legs were wrapped around him, trapping him in a web of desire.\n\n\"Oh, Jesus.\" He felt it. Almost by accident, the tip of his cock was at her entrance. He could feel Brittany's wet, fertile heat. Every breath, every whisper of movement, brought an agonizing spasm of pleasure as her slickness caressed his sensitive glans.\n\nHis body reacted, slowly pushing his cock deeper into Brittany's channel. Then, he stopped, a horrible thought crashing down on him.\n\nBrittany must have read something in his expression. \"What? What's wrong?\"\n\n\"Your...\" He managed to pluck the right word out of his memory. \"Your hymen. I'll break it. I don't want to hurt you.\"\n\nShe reached up and patted his cheek. \"You really are the sweetest man alive,\" she said. \"But don't worry about that. It broke years ago.\" Her hips wiggled, and they both gasped as his shaft sank another fraction of an inch deeper into her passage. \"Just...go slow, okay. Because you're kind of big.\"\n\n\"But...\"\n\nBrittany smacked his rear, hard enough to sting. \"That is the only butt I care about right now. You're not hurting me, Justin. At all. In fact, you feel fucking incredible. But it's going to be pretty damn hard for me to lose my virginity if you're scared of actually screwing me.\"\n\nOne look at her face made him throw away what he had been about to say. And who was he, to treat her like a fragile flower that had to be kept under glass? He braced himself on one arm, the other hand cupping the warm, firm swell of her breast, and slowly eased into her. The sensation was so far beyond anything he had ever felt that it was like going from a gray, monochrome world to blazing technicolor. The walls of Brittany's passage slowly parted, and he found his cock bathed in the most incredibly hot, wet, pleasurable sensation of his life. When he finally stopped, the base of his shaft was flush with Brittany's nether-lips, and the young woman's face was soft and hazy with pleasure, her eyes open wide.\n\n\"So...full,\" she whispered. She closed her eyes, her mouth hanging slack. Her hips made tiny rocking motions, and Justin found himself closing his own eyes and fighting the surge of need in his cock. It would be so easy. So easy to pull out and then ram into Brittany, to pound away ay her tender sex until he exploded inside her. After all, that's why they were doing this, right?\n\nWrong.\n\nBrittany's eyes blinked open, and he felt the grip of her channel on his cock ease slightly. \"That's better.\" She ran her fingers over his chest. Her fingers toyed with his chest-hair. \"I've never had something that big in my pussy before, Father Justin.\" Her eyes twinkled up at him merrily. \"I had to get used to you.\"\n\n\"Do I even want to know what you have had up there?\"\n\n\"Nothing like this,\" she replied. Her sheath tightened around him, then loosened again, and she laughed at his expression. \"Just my fingers. And a dildo. But this is so much better. Hot. Hard. Alive.\" She kissed him, her lips nibbling at him, and underneath him, she began to push upwards with her groin. Her mound, dusted with red-gold curls the exact shade as those on her head, ground against his stomach. \"Can you fuck me, Father? Long and deep and slow? I guess I'm not really a virgin. Not anymore. But the rite isn't complete. The land still needs the blessing of your seed.\"",
        "He couldn't answer. Not in words. It was too big. But he returned her kiss, his free hand gliding over Brittany's neck and chest and belly. Her skin gleamed as if it was oiled in the candlelight. And he slowly pulled out until only the tip of his cock remained inside her, and then pushed forward again. Not hard, but in a slow, deep stroke that didn't end until his hot, heavy balls were resting against the taut curves of the sexy young teen's bottom. And then again. And again.\n\nAs Justin made love to Brittany, a strange feeling came over him. It was kin to the strange, tense feel in the air when an August thunderstorm was about to explode in wind and lightning. Or the tense silence of thousands of fans right before a big play at a football game. His entire life seemed to be coming to a climax, the leap and surge of his eager cock in Brittany's wet, hungry pussy the culmination of his existence. He felt the bright power of life within him, echoing his lover's hot, hungry fertility.\n\n\"Yes!\" Her eyes were bright, almost glowing with ecstatic fervor. \"Fuck me, Father Justin! Do it! Seed me! Give it to me! I want your cum! I'm yours!\"\n\n\"You're mine!\" he replied, his voice deep and hoarse. Her arms wrapped around his back, and suddenly he was doing the same, sliding his arms under Brittany's body to clasp her tight. Sweat-slick skin slid under hot, hungry fingers, and he could feel the dig of her heels in his buttocks as she pulled him deeper and deeper on every driving stroke.\n\n\"I'm fertile! Fuck my pussy! Give me your seed!\" She gasped into his ear, and then her teeth had closed on the lobe, biting hard. He growled and pinched a nipple in revenge, rolling it between his fingers as she gasped and her cunt clenched on his pounding cock. He pulled back, meeting her wild, staring eyes, and when the muscles at the base of his shaft began to clench, he hurled himself into her one last time, kissing her so hard and fiercely that their teeth banged together, and her driving tongue invaded his mouth like a rampaging army.\n\nRelease.\n\nIt was a white-hot bolt of lightning at the tip of his rod, pouring fire into the depths of Brittany's pussy. Burst after burst spurted out of him, until he thought his balls had been drained dry. He pulled out one last time, then sank back down into his lover, aftershocks sending white spots up at the edge of his vision. Below him, Brittany was shaking, red-gold curls plastered to her forehead and her legs sagging limply to the floor of the tent.\n\nAnd then it was done. He turned his head and kissed a sweaty cheek. \"Hey.\"\n\nHer eyes opened and she smiled weakly at him. \"Hey yourself.\"\n\nHe cleared his throat awkwardly. \"Are you all right?\"\n\nShe blinked. \"Yeah. Of course. Why wouldn't I be.\"\n\n\"Um. You know. At the end there. It got kind of, intense. I didn't hurt you, did I?\"\n\n\"Oh, God, of course not.\" Brittany pulled him down for a long, slow, sweet lover's kiss. Her tongue ran around the inside of his lips, licking him with loving thoroughness. \"I like having my nips pinched,\" she said when she let him go. She demonstrated as he watched, and he felt a quick flutter around his softening phallus as her body reacted. It didn't hurt. And if it did, it was in the best way.\"\n\nJustin's arms were still under the gorgeous young woman. \"Hold on,\" he said, and rolled over until he was on his back and Brittany's delightfully curvy body was lying on his chest. \"That's better.\"\n\n\"Mmmm, yeah.\" Brittany put her head on his chest. \"Did you feel it? The hand of the gods?\"\n\n\"I felt...something.\" He shivered, remembering that sense of vast power. \"Something big.\"\n\n\"I felt something big, too,\" she giggled. \"And to think! Sabrina said that you probably had a little pecker, since you weren't very tall. Hah! Wait until I tell her!\"\n\n\"Please don't,\" he begged. His face was flaming.\n\n\"Oh, don't worry, Father Justin. We know how to keep a secret around here. But if you don't want me to, I won't tell Sabrina.\"\n\n\"Thanks.\"\n\nBrittany smiled, the expression somehow unnerving. \"But can I tell Haley?\"\n\n\"Haley?\" he repeated weakly.\n\n'Yeah.\" She kissed the corner of his mouth. \"She wants you, Father. Almost as much as I did. She was having the dreams, too. The ones I told you about when you first got here. I think...they're a sign. Though none of the older women will really talk much about things like that.\n\n\"But I hope she doesn't let some asshole take her cherry when she goes away to college. It's only about four months until the rite of Samhain. And after that, if you choose her, well...\" her voice trailed off, though her lips were busily dotting kisses on his chest. \"All three of us could have a lot of fun, after.\"\n\n\"Three?\"\n\n\"Yes, three.\"\n\n\"But I thought that this...\" He waved at the tent. \"That it was just once. One time, with one girl. Until the time came for the next rite, I guess.\"\n\nBrittany rested her chin on her folded hands and shook her head at him. Her eyes were wide. \"Oh, no, Father Justin. That would be just awful. No better than giving a little kid a cookie and then telling him he would have to wait for months until he could have another one.\"\n\n\"I'm not a little kid.\"\n\n\"Yeah, I noticed\" she grinned. \"Thank God. And the goddesses. All of them.\n\n\"But we wouldn't do that to you. It just wouldn't be fair. Mom says...\" her forehead wrinkled adorably. \"Mom says if both people want it, that any woman you choose can stay with you as a conc...a combu...\"\n\n\"A concubine?\" he suggested.\n\n\"That's it!\" She kissed him. \"Maybe for a week or two, maybe for longer. Mom says that Matty Ward was Father Snodgrass's concubine for years and years, until she finally got married. And that it was a good thing, because it made the bond between the priest and the town that much deeper.\"\n\nJustin nodded. Right now, he couldn't imagine leaving Fertile Valley, not if someone called up the next day and offered him a spot at the Vatican. \"So...how does it work?\"\n\n\"Well, I don't know how it worked for Father Snodgrass. Not really. But I think that you would never, ever hurt a woman. And that you would always do your best to make them happy. And after their first time, some girls might want to hang around and fuck you every once in a while. And some will get married, and some will move away, but some will always be around to keep you happy. Like me. And maybe Haley.\" She lowered her voice, as if sharing a naughty secret. \"Can you imagine it, Father Justin? After you take her cherry? One night we'll come over to the rectory, me and Haley. And the three of us will fuck all night long.\"\n\n\"I don't have to imagine it,\" he replied. \"I can see it.\" One woman all red and gold and tan, like a spring dawn. The other tall and cool, with midnight-black hair and skin like cream, the embodiment of an autumn night.\n\n\"Oh, Father Justin.\" Brittany's lips curved in a naughty smirk. \"Maybe you can see it. But I can feel it. Deep inside me. You're getting hard again, aren't you?\"\n\n\"Do you really need me to answer that?\"\n\n\"Nope.\" She sat up, her body all firelight and shadow, and began to rock on top of him. \"But...can we do it different this time?\"\n\nJustin sat up, his arms holding the smaller woman close. Brittany's legs wrapped around his back as he lowered his mouth to nuzzle at the tense tips of her breasts. \"We can do it any way you want.\"\n\n\"Good. Then this time I want it to be the way I wanted it the first time. I want to feel your cock inside me and your belly smacking my ass when you fuck me doggie.\" She put a finger to his lips as he opened his mouth.\n\n\"Remember, Father Justin. I dreamed about this. And it's a very bad idea to get in the way when I goddess sends you a premonition.\"\n\nHe shook his head. \"I wasn't going to say anything.\"\n\n\"Good.\" Supple as a snake, she untangled herself from his embrace and knelt on the floor. A cant of her hips brought the pouting lips of her sex into view.\n\n\"We've given our sacrifice to the goddess, Justin. But the rest of the night is ours.\n\n\"So start fucking me. I've got three years' worth of screwing to catch up on.\"\n\n\"Three years?\" Justin positioned himself behind Brittany. With an ease he did not think possible, he sheathed his staff deep inside her.\n\n\"Try ten.\"\n\n<br >\n\n\n\nEpilogue\n\n\n\nThey did not leave the tent until the first trills of birdsong were beginning to sound in the pre-dawn sky. In the tent, Justin belted his slacks around his waist, while Brittany, in the absence of anything else to wear, pulled his polo down over her tousled curls. The hem of the garment barely reached past her perky buttocks, and it was with difficulty that he restrained himself from lifting it up and giving her body an enthusiastic farewell.\n\nThey blew out the guttering candles, and darkness fell. Outside, the eastern sky was just beginning to show the faintest hints of gray. When they stepped out into the cool, damp air, the grass was coated with dew, and the gibbous moon was sinking towards the western hills.\n\n\"What should we do about the tent?\" Justin asked.\n\n\"Leave it,\" Brittany replied. She smiled up at the young priest, feeling a vast sense of accomplishment. Yesterday, for all her years, she had been a girl. Now she was a woman. And Father Justin was a man. Today was Midsummer. A few months from now, the harvest would be that much richer. She could feel it in the air, sniff it in the cool, damp breeze. A feeling of richness, of growth, a gleam of beauty that would not fade. \"Someone will come by and take it down later today. And then it'll be set up again at Beltane.\"\n\n\"Beltane. Then Midwinter,\" Justin mused. He gave a mock shiver. \"That's going to be an adventure, if the weather's cold.\"\n\nShe grinned up at him. \"Worry about tomorrow when tomorrow comes, Father Justin.\"\n\n\"You certainly are a saucy concubine,\" he teased as they began to walk up the hill. One hand dropped to cup one of her ass-cheeks. She could smell the smoldering remains of the bonfire in the still air. \"You better behave yourself.\"\n\n\"Really? Or what?\"\n\n\"Or...or...or something.\" He snickered, shaking his head. \"I don't know.\" Somehow, they were holding hands, and he gripped hers hard. \"Do you know what? I don't think I've ever been happier in my life.\"\n\n\"Aw, Father Justin.\" She leaned up and kissed his cheek and snickered. \"That's so sweet. My black, evil little heart just grew three sizes. Like the Grinch.\"\n\nAt the top of the hill, they turned and faced the town. A few streetlights were on, but most of the windows were dark. Even the farmhouse was quiet and still.\n\n\"Give you a ride home?\" Justin asked.\n\n\"No need.\" They both jumped as a figure detached itself from the shadows of the porch and walked down the steps. \"Well,\" Megan Murray said as she surveyed them with a keen eye. \"Congratulations. Well done, the both of you.\"\n\n\"Mom!\" Hot blood rushed up to flood her cheeks. \"How can you tell?\"\n\nThe older woman flipped a hand at her. \"Oh, it's something in the way you walk, afterward. Just a little slow. As if you're sore, but not really hurting. And of course,\" she twinkled, \"a person gets a certain look in their eye after they just gave someone a really good lay.\" Her nod to Justin was almost respectful. \"Father. I'll see you at mass.\"\n\n\"Mrs. Murray.\" His nod to her was polite, but his smile was, she knew, meant for Brittany alone. \"I'll see you soon.\"\n\nShe raised her chin. \"Yes. You will.\"\n\n\"Well?\" her mother said, as they drove down the gravel road which would lead them back to the highway, and eventually to town. The farm was fading into the distance behind them. \"Will he stay, do you think?\"\n\nShe smiled. \"Oh, yes.\n\n\"He's staying.\n\n*****\n\nTo: Bishop John Whitford, Catholic Diocese of Peoria\n\nFrom: Father Justin Kelly, St. Catherine's Catholic Church, Fertile Valley, Illinois\n\nBishop Whitford:\n\nI hope this finds you well.\n\nWhen I took the position of priest for St. Catherine's several weeks ago, it was with the understanding that this would be an interim post only. And that if I did not find the town or the parish to my liking, I could request a new position of my choosing.\n\nI am today requesting that my posting at St. Catherine's be made permanent. I will detail the reasons in an e-mail sometime in the next few days. But after much prayer and reflection, I have decided that this is an ideal place for me. The welcome I have received from both the town and the congregation has been so enthusiastic that I cannot imagine going anywhere else. Special mention must be made of Mrs. Megan Murray, her family, and the women of the Ladies' Auxiliary, who have all done their most to convince me that Fertile Valley is a place where one man can make a difference.\n\nI look forward to discussing this matter with you further. Please feel free to contact me at your earliest convenience.\n\nYours in Faith,\n\nFather Justin Kelly\n\nThe End"
    ],
    "authorname": "Glaze72",
    "tags": [
        "erotica",
        "romance",
        "virgin"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-priests-virgin-concubine"
}