{
    "title": "Going on Thirty",
    "pages": [
        "\"We're starting our tenth year of teaching. Is that crazy or what?\" Freddy said.\n\n\"More 'crazy' than 'or what,\" his friend and colleague, Dan, replied. \"Just think. Only 30 more to go until until full retirement, right?\"\n\n\"Gee, thanks. I had no idea this was one of those 'until death do us part' kind of things.\"\n\nHis friend laughed then said, \"It's actually a pretty sweet gig. We only work 180 days a year, get ten weeks off in the summer and a week or two for Thanksgiving, Christmas, and spring break. What's not to like?\"\n\n\"Yeah, no argument there. And we are surrounded by all kinds of hot pieces of ass, you know what I'm sayin'?\" \n\nHe made a disgusting motion with his hips, and when his friend-since-college didn't even smile, he said, \"Come on, man. There are some freakin' babes in high school, Danny Boy. Are you tellin' me you've never once\u2014not even one time\u2014thought about, you know, hittin' that?\"\n\n\"Freddy? You're a pig and getting worse every day.\"\n\n\"Dude, I'm serious, so be honest. You've never, ever thought, 'Hmmm. If I could get away with it, I'd'...\"\n\nHe'd tried singing the Bow Chicka Bow Bow song and Dan finally laughed.\n\n\"Stick to teaching history, okay. Your improv sucks.\"\n\n\"Okay, fine, but you still haven't answered my question. Have you ever once thought...\"\n\n\"No. Never. Not even once, okay?\" Dan said getting rather annoyed.\n\n\"Not even Jami Anderson? Come on, man! She was so hot she could have spontaneously combusted at any moment just standing there. Not even her?\"\n\n\"No, Freddy. Not even her. She was a beautiful girl, but she's not my type. For that matter, no high school girl is my type and let me assure you, they're not yours, either. Got it?\"\n\nFreddy was Frederick J. Thomas, Daniel Snyder's onetime roommate as undergrads at the University of Washington where they'd both majored in secondary education.\n\n\"Not your type. Yeah, sure. Okay. So...do you even have a type? I mean, you no-shit have all kinds of hot female students crushing on you every year while their moms and other teachers are constantly hitting on you, too. Some of us would be happy to have just one out of three, and here you are with unlimited options yet I almost never see you going out. What's up with that?\"\n\nDan laughed then said, \"It's not even close to constantly, my friend.\"\n\nFreddy snorted then said, \"Yeah, I guess that's true. I mean, I have to admit I've never seen a woman hitting on you when you're sleeping or...droppin' a deuce.\"\n\nFreddy paused then before Dan could chide him for being crass again then said, \"Hell, I'd be happy to have anyone crushing on me. Student, mom...Ms. Emerson.\"\n\nDan smiled at the mention of Sarah Emerson, who was by far the best-looking female on staff. In fact, she was in a league of her own. Then again, people often said the same thing about Dan Snyder, and more than a few people thought they'd make the perfect couple and produce beautiful, perfect little babies. There was just one problem. Dan wasn't attracted to her in spite of her beauty.\n\nFreddy finished his thought by saying, \"Dude, do you know how long it's been since I got any puss...\"\n\nThis time he stopped talking and sang it and did the hip thing. \"Bow Chicka Bow Bow?\"\n\n\"Freddy, Freddy, Freddy. What am I gonna do with you?\" Dan said as she just shook his head.\n\nFreddy started to answer so Dan cut him off. \n\n\"Don't say, 'Help me get laid, bro,' again\u2014please. Tell you what. Let's go get you some beer so I don't have to listen to your nonsense anymore, okay?\"\n\n\"Yeah! Now you're talkin', my man! First round's on you!\"\n\n\"Just remember, some of us have to teach school tomorrow and go to school so don't expect me to get hammered with you.\"\n\n\"I don't get it, man. A master's cost a ton of money and it's worth what? Two grand a year before taxes? You might break even before you retire,\" Freddy said in his typical cynical way.\n\n\"I like math. What can I say? And yeah, I'll more than break even in the long run. In fact, I'll be graduating just before Christmas so put that on your calendar.\"\n\n\"Yes! Another excuse to drink!\" Freddy proclaimed.\n\nDan grabbed his keys knowing he'd have maybe two glasses of draught beer while his friend would have\u2014two pitchers\u2014or more.\n\nBefore he let he go of the question in favor of beer, Freddy asked the same thing one more time on their way to their favorite watering hole.\n\n\"Seriously, man, what is your type? You rarely date and you never hook up. If I looked like you, I be gettin' laid seven days a week and twice on Sunday.\"\n\n\"No, you'd be in jail for a very long time,\" Dan said only half joking.\n\n\"You know what, Danster? If I didn't know better I'd think you were a little light in the loafers. You know what I'm sayin'?\"\n\nDan did know. In fact, he knew all too well. He'd been called 'faggot' and 'boy toy' along with many other pejorative things, many times over the years. He was absolutely, 100% straight, but took no offense at being called gay because he knew people didn't choose their orientation any more than they chose to be right or left handed. It just happened.\n\nHe fully understood the reasons why some thought he really was 'light in the loafers.' He took great pride in the way he looked, and dressed in what many called a 'preppy' kind of way. His thick, dark hair was always neatly trimmed and nicely styled. He was habitually smooth-shaven, and wore very dressy, button-down shirts and/or sweaters which were always carefully paired with the right pants, belt, shoes and socks. He even got his nails professionally done once a month or so. So, yeah. The criticism was based on a crude stereotype, but if the loafers fit... \n\nBeyond that, he really was incredibly handsome, and Freddy was right. Every year Mr. Snyder had a new crop of groupies who batted their eyes at him while many openly flirted. He was religiously friendly with all of them, but every girl understood that Mr. Daniel Snyder drew a no-kidding 'line in the sand' when it came to anything beyond friendliness. He was never mean or rude, but he made sure whoever tried crossing that line got firmly set back behind it.\n\nLastly, he was highly respected as one of the best teachers in the entire school. He taught one trigonometry class to sophomores as well as freshman geometry, but calculus and especially AP calculus, was his specialty. \n\nHe had this uncanny ability to explain complex topics in easy, understandable ways and he would use multiple approaches to explain something until everyone got it. In those rare cases where an individual student just couldn't get it, he would tutor them after school for as long as it took. Seeing the light finally come on was one of the things he most enjoyed about teaching.\n\nAt 32, he really didn't date too often, and that was just fine with him, because he really did have a type\u2014both physically and intellectually. If the woman didn't fit his type in both areas, he wasn't interested no matter how beautiful she might be. To wit, one Sarah Emerson. In those rare cases where he saw someone who met his external requirements, he immediately showed an interest in her in order to see if she was his type intellectually. \n\nPhysically, thin was in. A woman almost couldn't be too thin. Very small breasts were a must, and soft, full, bee-stung lips were hugely important, as well. Beautiful, open eyes, high cheekbones, and long, soft, silky hair were equally necessary, but all that was for naught unless she also dressed in way that, as with him, said, \"I take great pride in my appearance.\"\n\nIf that was perceived as overly picky or even snobbish there was nothing he could do about it. He liked what he liked and after nearly two decades of liking the same thing, it seemed hugely unlikely that would ever change.\n\nThe intellectual side of his ideal woman included intelligence, which was very important, but it was much more than that. She also had to have a certain kind of 'unstated sophistication' about her but she couldn't be pretentious. He looked for those things plus maturity, politeness, sweetness, and if she was maybe a bit on the shy side that was a huge plus. Confidence was fine but arrogance or being loudly-opinionated were deal breakers. \n\nDan was a logical, linear thinker so he knew that putting those kinds of limitations on 'the playing field' severely reduced the odds of ever finding a wife. Then again, he intended to marry once and for life and firmly believed that it was more than worth the wait to find the ideal woman.\n\nSo yes, he had a type, but he wasn't about to get into it with Freddy. Not now, not ever.\n\n\"How about we talk about you, Frederico,\" Dan said turning it back around on you. \"I know your type is someone with breasts and a vagina, but don't you want to meet someone and settle down?\"\n\nFor a brief moment, his normally-gregarious friend got serious.\n\n\"Yeah, of course I would. But I'm the Oscar to your Felix,\" he said using The Odd Couple analogy. \"I'm...slovenly. Unsophisticated. Undisciplined. I'm a video game junky. I like beer\u2014a lot. And let's face it. I look a lot more like Jack Klugman than Brad Pitt.\"\n\n\"Brad Pitt's in his 50's, my friend,\" Dan said trying to help his friend out.\n\n\"Yeah. No shit. And yet he still looks better than me.\"\n\nFreddy rarely got down, but Dan knew he was right. He'd be a hard sell to any decent woman who didn't bring a whole lot of her own baggage with her. It was very likely Freddy would never get married or if he did, the relationship would be highly dysfunctional. He hated to think that way, but it was hard to imagine Fred Thomas ever snagging a nice-looking, normal kind of woman.\n\nFour hours and four pitchers later, Dan helped his friend stagger out to the car.\n\n\"You're a good man, Danny Boy,\" Freddy said, his speech heavily slurred. \"Hell, if I was a chick, I'd be in love with you, too.\"\n\n\"Uh-huh. Let's get you home, good buddy. Tomorrow is our first day back. Thank God it's a planning day without students,\" Dan said as he helped Freddy fall into the back seat.\n\nIn spite of a horrendous hangover, Freddy slogged through day one, and by the day after Labor Day, the first day of school and three working days later, both teachers were ready for their students.\n\nThe first day was always devoted to administrative details. Lockers had to be assigned, books had to be issued, class rules, grades, homework, and other expectations had to be discussed, and teachers needed time to learn new names and faces. Having taught math there for ten years, Dan knew most of the students from the previous years, but there were always a few new faces, and Dan genuinely enjoyed getting to know them and hearing their stories about where they'd grown up, gone to school, etc. \n\nAs always, there were numerous young co-eds saying, \"Hi, Mr. Snyder!\" much too enthusiastically. Their male counterparts all noticed and inevitably, one or two would have to say something. \n\n\"Yo, Meghan. You better roll that tongue of yours up before you trip on it!\" \n\nThe comment would be followed by raucous laughter from the other boys, a snide comment from the girl, and even snider comments from other girls who hoped to win their teacher's favor.\n\n\"Eeew! Give it a rest already, Meghan! Mr. Snyder is like WAY out of your league, bitch!\" \n\nThat girl would then look adoringly at her handsome teacher for any sign of his favor. None ever came, and his corrections were always gentle and kind which included something along the lines of, \"Please find a more appropriate way to address your classmates.\" \n\nHe scanned his class rosters one more time after the final bell and noted he had students missing from each of his five classes. In most cases, their friends let Mr. Snyder know when the absent student would be back from an extended vacation or the like. That left just two students unaccounted for, and in both cases he wasn't familiar with the names. Connor Lane didn't show for his 1st-period trigonometry class nor had Kimber Clymer for his 5th-period AP Calculus class. In order to be placed in an AP class, an administrator or guidance counselor would have to have reviewed her records so, in spite of his very strong desire to avoid her, Dan gave the senior-class guidance counsellor, Tammi Simmons, a call.\n\n\"Daniel! What a pleasant surprise. How may I help you on this first day of class? I...do make house calls, you know.\"\n\nShe'd shamelessly flirted with him since being hired during the last two months of the previous school year, and she wasn't slowing down.\n\n\"Kimber Clymer didn't show up today. Did you by any chance place her in my 5th-period class and if so, do you have idea where she might be?\" \n\n\"I did and yes I do,\" she told him. \"Bright girl. Straight-A student and AP classes in math and science the past two years at her previous school in California. She's finishing up a paid internship with a pharmaceutical company in downtown Seattle and should be here tomorrow.\"\n\nWithout being asked, Tammi offered some personal observations.\n\n\"She struck me as being rather atypical for an 18-year old, but not in a bad way. I can't really put my finger on it but she seemed...I don't know...more like a peer than a student, if that makes any sense. Nice kid. Very tiny, too. Not short just...I don't know...whippet thin but also pretty in an emaciated kind of way. You'll see.\"\n\nShe finally took a breath then asked, \"Can I do anything else, anything at all, for my favorite teacher today or...tonight?\"\n\nDan chuckled and told her thanks and 'no thanks' in the kindest possible way. She let him know if he changed his mind he could drop by her place, unannounced, anytime with emphasis on the 'any' part as she reminded him yet again where she lived.\n\nHe hung up the phone just in time to see Freddy show up, who closed the door then said excitedly, \"Dude, I have the hottest chick ever in my 3rd-period class!\"\n\nDan raised an eyebrow but didn't take the bait.\n\n\"She is freakin' smokin' and sat right up front wearing this really short skirt and tight...\"\n\n\"Freddy?\" Dan said giving him the eye.\n\n\"Okay, okay. But you gotta check her out, Danny Boy. Jesus, this girl is hot!\"\n\n\"Jesus isn't into girls, my man. At least not as far as I've ever been told,\" he said with a smile.\n\n\"Buzz kill,\" Freddy said quietly.\n\nThey talked about their first day for a few minutes then got ready to leave but were in no hurry as there was no sense even trying to go home until the busses cleared out.\n\nDan didn't give his conversation with Tammi a second thought until the following day just before the start of fifth period. Several girls were talking rather animatedly about 'the new girl' so Dan casually eavesdropped as his students filed into the classroom.\n\n\"Have you seen this bitch?\" one of them said to the other two.\n\n\"No, but I've heard she dresses like some kind of...secretary or something,\" the second one replied.\n\n\"Yeah! She dresses like she's thirty or something. I mean, come on, right? Who wants to look like they're old, anywayz?\"\n\nDan knew better than to get involved, but that comment amused him so he said, \"God forbid someone might look like they're thirty. Talk about ancient!\"\n\nAll three of them immediately went into apology mode once they realized their thirty-something hottie/teacher was listening. The near-swooning over Mr. Snyder who'd spoken to them began just as quickly.\n\n\"No! Thirty isn't like old old, My. Snyder. Sometimes a guy who's like thirty can be like...really hot!\"\n\nThe other two chimed in with equally vacuous responses like, \"Yeah! Totally!\" \n\nOne of them said, \"We didn't mean you, Mr. Snyder. It's just not cool for someone our age to want to look like...\"\n\n\"Someone my age?\" he said with a smile.\n\n\"No! I mean like...\" the first girl said trying to get out of the hole she finally realized she'd just dug.\n\n\"It's okay, ladies. I get it. But high school is the place where everyone is trying to figure out who they are. That's why we have jocks and nerds and goths and...\"\n\nHe kind of nodded at himself then said, \"And...preppies. Right?\"\n\nThe three of them were red-faced but still smiling adoringly.\n\n\"She's probably doing the same thing so maybe cut her a little slack?\" he suggested as nicely as possible.\n\nThey all nodded just as the bell rang and Dan noted there was still no Kimber Clymer. He finished taking attendance on his desktop and submitted it using the school's app just as there was a knock on his door. \n\nHe glanced over and saw Tammi Simmons smiling at him as he reluctantly stood up to open the door which had to remain locked during class since Columbine.\n\n\"Ms. Simmons. What a pleasant surprise,\" he said dryly as he let her in. \n\nHe turned away and didn't see the other person with her but knew something was up when one of his female students made a face and another said loudly enough to be heard, \"Oh..my...God. You've got to be kidding.\"\n\nDan turned around and when he saw the younger girl with Tammi, he did a double take that was so obvious he felt a bit embarrassed.\n\n\"Mr. Snyder? This is Kimber Clymer, the um...unique student we were discussing when you called me after school yesterday.\"\n\nThe way Ms. Simmons was smiling was so over the top the same girl said, \"Geez. Give it a rest, woman.\"\n\nTammi shot her a snide look then continued talking.\n\n\"As I was saying before I was so rudely interrupted...this is your missing AP student. Kimber, this is Mr. Snyder, our best math teacher.\"\n\nThe same girl said, \"Oh my freakin' God! Someone needs to get real! Like she's got a shot with Mr. Hottie Pants.\"\n\nThe class erupted in laughter but Dan hadn't taken his eyes off of the new student yet. He was trying not to stare, but it was a losing battle. It was as if the universe had read his mind and ginned up the physical personification of every single thing he fantasized about in a woman and hand-delivered her to his classroom here on earth.\n\nShe was undoubtedly a size zero with the most lithe-but-beautiful body he'd ever seen. She was tall for a girl and he guessed her to be at least 5'8\" but in the four-inch heels she was wearing, she was nearly as tall as he was. She was holding a white binder across her chest but it was obvious she was no bigger than an A cup\u2014if that.\n\nHer smile was angelic, revealing a set of perfectly straight, very white teeth set behind two very soft, puffy lips coated in shiny lip gloss. Just above was a nose he found to be equally as perfect as her smile and flanked by very high cheekbones and the most gorgeous blue, almond-shaped eyes he'd could ever remember seeing.\n\nShe wore her very dark hair parted to one side and fell to just below her shoulders in a cascade of silky smoothness. He couldn't be sure, but it seemed that the only other makeup she wore was some mascara which gave body to her naturally-long, full eyelashes and made her gorgeous eyes absolutely pop.\n\nLastly, she was wearing a floral-print dress that fell to just above her knees along with a matching shrug that gave a very sophisticated, model-like appearance. Or perhaps that of a well-paid executive assistant at a successful law firm.\n\n\"Mr. Snyder?\" Dan heard as he realized Tammi was calling his name for the third time.\n\n\"Yes. Ms. Simmons. Right.\"\n\nHe'd nearly fully recovered and broke his stare before looking back and saying, \"Ms. Clymer? It's a pleasure to meet you. Feel free to take any open seat. This is a small class so you have plenty of options.\"\n\nThe girl who'd been making the snide remarks put her feet on the open seat next to her as Kimber approached.\n\n\"The coffee pot's in back, bitch. You might want to sit next to it so you can perform your duties when asked.\"\n\nKimber smiled politely but didn't respond. She took an open seat two rows further back then sat down, opened the white binder, and removed a pencil.\n\nDan noticed she was smiling at him and that he was still staring. He again quickly broke eye contact then thanked Ms. Simmons for personally bringing Kimber to his room.",
        "\"Any excuse is a good excuse to stop by,\" she said quietly as she touched Dan's arm a little too long being leaving. \"Don't be a stranger, Mr. Snyder!\"\n\n\"You're in good hands here, Kimber,\" she said without taking her eyes off of Mr. Snyder.\n\n\"Subtlety, Ms. Simmons!\" the girl said again shaking her head.\n\nDan ignored it and said, \"Okay, so where were we?\"\n\nHe spent the remainder of the second day outlining the curriculum and what they'd be covering during the first six weeks. He repeated the grading policy just before the bell and reminded them he would be introducing the topic of 'limits' the next day.\n\nEveryone filed out except for Kimber who waited until everyone else was gone and for Mr. Snyder to acknowledge her.\n\n\"I wanted to take the opportunity to introduce myself, Mr. Snyder. I know Ms. Simmons did that, but I prefer doing something so important personally.\"\n\n\"I do appreciate that, Ms. Clymer. I can tell already you have a very...adult perspective.\"\n\n\"I try, Mr. Snyder,\" she said politely. \"I take a fair amount of grief for it, but I've recently made quite a few changes in the last year or so, but I now prefer following the beat of my own drummer, so to speak.\"\n\nDan smiled back and told her he understood then said, \"I don't catch quite as much flak as an adult, but I had a similar take on things when I was in high school, too.\"\n\n\"It's funny,\" Kimber began, \"but high school students claim to be these independent, free-thinking individuals, but they're quite likely the most prone to a kind of 'hive-mind' mentality. Within their respective groups, that is.\"\n\n\"Do you consider yourself part of any particular group, Ms. Clymer?\" he asked still smiling.\n\n\"No, not really. I suppose I'm rather most closely affiliated with nerd culture inasmuch as I love reading as well as math and science. Other than that...not particularly.\"\n\nDan Snyder was dumbstruck. He'd imagined a Kimber Clymer a million times, but had only seen a handful of women\u2014or girls\u2014like her. And of those he'd seen, he'd only met one as articulate and well-spoken as her.\n\n\"Well, you can rest assured you neither look nor sound like any nerd I've ever seen, Ms. Clymer.\"\n\n\"Thank you, Mr. Snyder. I often find myself looking to people other than my fellow students for feedback. It's comforting to hear someone let me know I'm not the abnormality my chronological peers make me out to be.\"\n\nHer smile was so distracting he forced himself to make eye contact, but her eyes were downright enchanting so he looked away and said, \"Is there anything else, Ms. Clymer?\"\n\n\"Oh, my apologies, Mr. Snyder. My intention was to see what I might have missed yesterday, and I've done so much talking I lost focus. I certainly didn't mean to monopolize what little time you have between classes.\"\n\n\"No, not at all. I have planning during 6th period, but you don't want to be late, I'm sure, and no, you didn't miss anything significant the first day of class.\"\n\nKimber smiled brightly and said, \"I'm relieved to hear that, and you're right. I don't want to be late to my history class.\"\n\n\"With...Mr. Thomas?\"\n\n\"Yes. Mr. Thomas. I'm very much looking forward to his class,\" she said in a very positive tone. \"Well...I should be going, but I did want to personally introduce myself.\"\n\n\"I'm glad you did, Kimber. It was my pleasure.\n\n\"Same here, Mr. Snyder.\"\n\nShe began walking away when Dan suddenly blurted out, \"Kimber? Before you get away, I would be very interested in hearing about your internship sometime. If you wouldn't mind, that is.\"\n\n\"Oh, no. I wouldn't mind at all. It was the opportunity of a lifetime, one for which I'm very grateful so yes, I'd be happy to share my experiences at your convenience.\"\n\nKim smiled then told him, \"I really do love to read, and I don't particularly care to be at home, such as it is, so Starbucks is kind of my preferred home away from home since I moved up here.\"\n\nShe started to walk out then turned and said, \"Mr. Snyder? I truly hope this doesn't come across as inappropriate, but if you'd ever care to join me sometime, I'd be happy to bore you with the details of my internship. Oh, and it'd be my treat, of course. Or I could just stop by your room. I'm very flexible.\"\n\n\"Is there a particular Starbucks location?\" Dan asked sensing she felt like she'd done something wrong by even mentioning getting together. \"There are more than a few of those in the local area.\"\n\n\"Yes there are,\" she agreed with a smile.\n\nShe gave him the location of her favorite place, then excused herself and headed just down the hall to Freddy's class before the tardy bell rang or before he could respond.\n\n\"Dear God, what in the world just happened?\" he said out loud to himself as he sat back down.\n\nHe was on autopilot for his 7th-period class, still reeling from the experience of meeting Miss Kimber Clymer. \n\nWhen Freddy walked in after the final bell, Dan finally understood\u2014at least to some degree\u2014the way his old friend felt about having a female student in his class who was distracting to the point of disturbing. Unlike Freddy, however, he had no intention of sharing his feelings.\n\nHe did, however, float a trial balloon by saying, \"My new student, Kimber Clymer, said she has you for her 6th-period class.\"\n\n\"Who? Oh, right. The skinny chick who dresses like someone our mothers' age. Yeah, she's a little...different, huh? Oh, today that super hot chick I was telling you about wore this slinky little...\"\n\n\"Freddy?\" Dan said stopping him in mid-sentence.\n\n\"All right. Okay. Jesus, you're such a frikkin' prude sometimes, man. You just wait. One of these days a girl who does it for you is gonna walk into your classroom and then you're gonna...\"\n\nFreddy sat down then said, \"No. Never mind. You'll never experience that because you're Dan Snyder, the last boy scout. Great movie, by the way, right?\"\n\n\"Yeah, Bruce Willis did a pretty decent job in that one.\"\n\n\"Bruce Willis? Dude, are you serious? All I remember is Halle Berry delivering drinks in that bra top and pole dancing. Now that is one hot piece of...Bow Chicka Bow Bow, you know what I'm sayin'?\"\n\nUnfortunately, Dan did know what he was saying as the thought of having a cup of coffee with this most-intriguing new student kept running through his mind. And yet, no matter how attractive he found her, she was still his student and that was a huge 'no-no'. He didn't even know for sure if she really was 18 yet so he carefully pulled up his class rosters on line and nonchalantly checked hoping Freddy wouldn't ask what he was doing or why.\n\nSure enough, she'd already turned 18 which made him wonder if she'd been held back at some point. That was usually the case, but Kimber was clearly very intelligent making that option much less likely unless it had happened early on.\n\n\"Dude? Are you listening? he heard Freddy say.\n\n\"Um...yeah. Sure. I'm ready to go,\" Dan said hoping he could rely on Freddy's predictability to know what he'd just said.\n\nDan still hadn't stopped obsessing about his 'dream girl' a little after 10pm. He rarely ever watched porn of any kind, but he'd been hard off and on all day since his brief-but-intense chat with her after class. He almost laughed when he went to his favorite site where the women were dressed (or at least mostly still dressed) during sex.\n\nHe just couldn't get over the way she looked in her um...dress...all day. He had nothing against sex in the nude, but he found making love to a girl who was at least partly clothed a huge turn on, if what she was wearing 'did it' for him, and the way Kimber dressed most definitely did it for him.\n\n\"One more thing to reduce the number of females in the pool of potential possibilities, right Danny Boy?\" he said to himself as he found a favorite video in which only the woman's skirt was off as her porn star/lover ravished her. It didn't take long for him to fill up not one, but two, Kleenexes with a huge load of white liquid dough that had been building up for at least the last three weeks. Unlike his friend, who confessed to being a 'twice-a-day' kind of guy, a couple of times a month was more than enough for Dan and this release was long overdue. \n\nHe finally laid down but was still unable to stop thinking about her or wondering what she might wear the next day. Just as importantly, he wondered what it would be like to spend time talking to someone who was clearly mature beyond her years and so very well-spoken, as he pictured her easily holding her own on any topic. That was followed by his last thought of the day that thoughts like that were fraught with peril.\n\nDan had been assigned morning cafeteria duty the first six weeks of school so he headed toward the smell of grease and as always, virtually every girl or female staff member he passed smiled and cheerfully said 'hello' or 'good morning' or told him how nice he looked. Out of habit he replied to every one of them with a smile of his own. \n\nThis morning, a custodian, a sweet, rather large black woman named Willie Mae stopped him and said, \"Mr. Snyder? I just wanted to tell you how much I enjoy watching you leave campus every day.\"\n\n\"Am I really so bad you can't wait to get rid of me?\" he teased.\n\n\"Uh-uh. Oh, no. I mean, I keep my eye on you, young man.\" She leaned over and said quietly, \"I just love that little tushy of yours when you walk by carrying that leather bag of yours on the way to your car.\"\n\nShe smiled at him exposing a huge gap in her two front teeth and Dan told her, \"You know you're my favorite, right, Willie Mae?\"\n\n\"Well, a girl'd never know it by the way you never show it,\" she replied in rhyme. \"Now you just keep on walkin', and I'm gonna do me some watchin'!\"\n\nDan heard her say, \"Mmmm, mmm, mmm!\" as he walked away. \n\nKnowing she was a church-going woman he turned around and said, \"The Lord heard that, Miss Willie Mae.\"\n\n\"I know He did, but some things are just worth the cost, young man. Mmmm, mmm, mmmm!\"\n\nDan chuckled and kept going when he noticed Tammi up ahead of him. \n\nAlthough not religious himself, he sort of prayed, \"Dear Lord, please don't let her be heading to the...\" just as she walked into the cafeteria. Even worse, she stopped, turned around, and held the door for him.\n\n\"Well, well, well. If it isn't the best-looking man on campus!\" she said with a huge smile.\n\n\"Good morning, Ms. Simmons,\" he replied trying not to let his frustrations show.\n\nDan tried to slip right by her but she all but glommed onto him as he went inside.\n\n\"So how are your classes so far, Daniel?\" she asked desperate to strike up a conversation.\n\n\"Oh, um...fine. Yeah, everything is just fine,\" he said realizing he wasn't going to shake her that easily.\n\n\"How about the new girl I brought to your room? Any issues there I could help with?\"\n\nDan almost said 'no' then casually asked, \"Did she get held back or something?\"\n\n\"As a matter of fact she did. She was out nearly the entire year last year. The back story is just tragic. Her father was killed in a horrible car accident and her mother was in a vegetative state for months. She refused to leave her side until she passed away, too. As I understand it, she filed for emancipation to avoid becoming a ward of the state then moved up here with her maternal grandmother and turned 18 just before school started. I know she seems like a bit of an odd duck, but she's also a real trooper. You should give her a chance, Daniel.\"\n\nShe leaned over then said, \"You should give me a chance, too. I promise you won't be disappointed.\"\n\nTammi suddenly and mercifully stopped talking and nodded toward the door. Dan turned to look and saw Kimber walk in by herself then take a seat near the wall. She pulled out a book and began reading and sat there alone until the bell rang.\n\nDan immediately took notice of the way she looked and was grateful he'd worn jeans. Kimber was wearing a very white, short-sleeved knit top that was also slightly cropped, but no skin showed thanks to the tight, high-waisted, black pencil skirt she wore with it. It fell to about four inches above he knees, and looked stunning with the black, suede, open-toed high heels with ankle straps. She wore a single strand of pearls with matching earrings and again wore only some mascara and lip gloss. Her soft, silky hair cascaded down around her tiny shoulders and Dan found himself staring yet again.\n\n\"It's kind of bizarre, don't you think,\" he heard Tammi say.\n\n\"Bizarre?\" he asked aware he'd missed something she'd just said. \n\n\"I said I see why you're staring. She has a good sense of fashion, but I've never seen any high school girl dress like that. She told me in private she takes a lot of grief for it, but she claims she doesn't care what other students say. I guess she came into some money after her mother passed away. Not a lot mind you. She had to use most of it to pay off the hospital and long-term care facility bills. Anyway, she evidently made a whole lot of changes in her life to help her cope with her traumatic losses. I feel sorry for her, but she has to know that kind of look just doesn't fit in. She's overdressed to even be a teacher!\"\n\nDan had never been more relieved to see Freddy who waved and headed their way.\n\n\"Dan the Man!\" he said doing a knuckle bump as he walked up. \n\nFreddy's smile faded as he looked at Tammi before saying, \"Good morning, Ms. Simmons. You um...you look very nice today.\"\n\nTammi knew he was Dan's best friend, so even though she found Freddy annoying at best, she smiled pleasantly and said, \"Well, thank you very much,\" Mr. Thomas.\n\nDan was standing between them and used Freddy's presence as an excuse to walk around and talk to a few students, something most teachers avoided doing outside of official business.\n\n\"Here you go, Freddy. You and Tammi should chat while I make the rounds.\"\n\nDan was unaware his friend found the guidance counselor very attractive so it surprised him when Freddy said, \"I'd enjoy that.\"\n\nHe felt bad for him when Tammi said, \"Lucky me,\" just loud enough for Dan to hear as he walked passed her.\n\nThere was only one student he wanted to talk to, but he started at the opposite end of the cafeteria and worked his way toward her to mask his true intentions. He had about ten minutes before the bell so he spent a few seconds at each table saying hello and thanking the many girls who told him how good he looked in his jeans.\n\nThree tables away from Kimber's, Dan heard three different senior girls talking about her so he stopped and casually listened in pretending to be observing like he was supposed to be doing.\n\n\"What's her problem, anyway? She's like...anorexic and yet she dresses all...old or something.\"\n\n\"I heard her parents both got killed in a car wreck. Maybe that messed up her brain or something,\" another said.\n\nThe third girl said, \"Too bad she didn't die, too. She'd have at least been put out of her misery.\"\n\nThe first girl aded, \"And ours, right?\"\n\nAll three laughed just as Jacob Dunning, considered by many to be the hottest guy in the senior class, walked up to Kimber and introduced himself.\n\nDan felt beyond silly when she smiled politely and told him he join her when he asked if she minded. Kimber put down her book and gave Jacob her undivided attention until she glanced Dan's way. She did a double take, but it was almost unnoticeable as the second look was with here eyes only. She smiled at Mr. Snyder as her eyes went back to Jacob such that he thought the smile was meant for him.\n\nThe silliness he'd felt was replaced by a very pleasant feeling he wasn't sure he could describe. It was as if he'd shared some sort of connection with this angelic-looking creature he couldn't get off his mind. He continued walking even as the conversation between the girls heated up over their disbelief at the guy who was willingly sitting with her. Evidently, Dan wasn't the only male on campus who was crushing on one Kimber Clymer.\n\nDan walked behind her table and when Jacob saw him he said, \"Mornin', Mr. Snyder.\"\n\n\"Good morning to you, Mr. Dunning,\" he said in his typically friendly way.\n\nKimber hadn't turned around so Dan reached for her book and asked, \"May I?\" before touching it.\n\n\"Of course,\" Kimber said sweetly. \"Mi libro es su libro, Se\u00f1or Snyder.\"\n\n\"Hablas espa\u00f1ol, Se\u00f1orita Clymer?\" he asked as he leafed through her book.\n\n\"Un poquito,\" she said using her thumb and index finger to indicate a very small amount.\n\n\"The Grapes of Wrath,\" Dan said. \"Is this for one of your classes?\"\n\n\"Oh, no. I just enjoy reading. I had a lot of time on my hands for a while and I read as many classics as I could. This one was just next in the queue,\" she said finally turning her head to look up at him.\n\n\"I go out of my way not to read anything unless I have to,\" Jacob said wanting to join the conversation.\n\nDan set the book down, smiled at Jacob, then said, \"I'm guessing that's why Ms. Clymer's GPA is 4.0 while yours is um...well, just above 'sea'-level.\"\n\nJacob didn't get the word play but Kimber did. She didn't laugh at Jacob, but she did smile at Dan and she also winked before turning back around.\n\n\"I'll um...see you guys later,\" Dan said knowing he couldn't stay any longer without attracting unwanted attention.\n\n\"I look forward to that, Mr. Snyder,\" Kimber said with yet another beautiful smile.\n\n\"Yeah, cool,\" Jacob said not sure what else to say.\n\nAs he walked off, Dan heard Jacob mention prom, and again he felt a sudden stab of jealousy. He stopped and pretended to look at his watch but was really waiting to hear Kimber's reply.\n\n\"I'm flattered, Jacob. But the truth is I'm kind of developing a relationship with someone. Well, I'm trying to anyway.\"\n\n\"What? Here at this school? Do you mind if I ask who my competition is?\" he said trying to play it cool.\n\n\"Um, no. He's not a student at this school. He's an older guy and although we were just recently introduced, I've found him to be quite charming.\"\n\n\"Charming? What does that even mean?\" Jacob asked.\n\n\"It means he's someone I find very...intriguing and also...incredibly handsome.\"\n\nKimber was talking louder than necessary for Jacob to hear her, and another wave of that indescribable feeling swept over him.\n\nJacob went to stand up, and as he did, Dan heard him say, \"You're like smokin' hot, Kimber, but I feel like I'm hangin' out with a teacher or somethin'. And if you're into college guys, I'm outta here.\"\n\nHe stood up and said dismissively, \"Later,\" and just walked away.\n\nDan was dying to go back and talk to her her but knew he couldn't. He settled for a quick look and was rewarded with a smile and a second wink.\n\nTammi was still talking with Freddy when Dan walked up to them barely able to focus on what they were saying.\n\n\"So, how are our students this morning, Daniel?\" Tammi asked as she moved to be closer to him.\n\n\"Well excuse me,\" Freddy said as she stepped in front of and right passed him to position herself to talk with Dan.\n\n\"Sorry, Mr. Thomas,\" she said without looking at him.\n\n\"Fine,\" Dan told her. What he didn't tell her was that he thought one particular student was fine in a completely different sense of the word.\n\nThe bell rang saving Dan from any further conversation, and when it rang, Tammi touched his arm and said she'd talk to him later without so much as acknowledging Freddy. \n\nDan was really taken aback when Freddy said, \"Thanks a lot\u2014buddy. Or in your case, I guess buddy is only half a word.\"\n\nThe implication was clear. Freddy felt like his buddy had just...fucked him.\n\n\"Whoa! Where's that coming from?\" Dan asked.\n\n\"Dude, seriously? It's like every time I like some chick, you step in and steal the show. That's pretty fu...messed up,\" his voice trailing off so no student might hear him nearly dropping an F-bomb.\n\nDan stopped in the hallway and looked right at Freddy.\n\n\"Ms. Thomas? Tammi? You've got a thing for...her?\" he asked trying not to sound incredulous.",
        "\"Maybe,\" Freddy said defensively. \"It's obvious you do, too. I can't blame you, though. I mean, she is pretty hot, right? But could you just this one time maybe give me a little space? Is that asking too much?\"\n\nDan genuinely felt like shit as Freddy'd given no indication he liked her let alone found her attractive. Dan didn't find her unattractive, she just wasn't someone he would ever look at twice, let alone ask out.\n\n\"No, you're right, man. She is a very nice-looking woman, and I honestly had no idea you were interested. As much as I like her, I'm not gonna get in my best friend's way,\" he said as convincingly as possible.\n\nFreddy finally looked at him and then smiled.\n\n\"Thanks, bro. But don't hesitate to put in a good word for me if you get the chance, okay?\" Freddy asked hopefully. \"I mean, an endorsement from you would go a long way.\"\n\n\"Will do...bro,\" Dan assured him. \"Hey, you might want consider getting that mop on your head trimmed up and maybe even get your shirts pressed if you're gonna make a play. She's a pretty sophisticated woman, right?\"\n\nDan didn't tell him he should try washing his shirt's first.\n\n\"Yeah. You're right. Ms. Simmons is a classy kind of lady, isn't she?\"\n\nDan had a very different opinion of her so all he said was, \"You want to make a good impression, right?\"\n\nThe next bell rang and Freddy hurried off saying, \"I do. Hey, thanks for the support, bro. Oh, and the advice!\"\n\n\"Go get 'em, big guy!\" Dan said as he headed toward his room still surprised he had no idea Freddy even liked their guidance counselor.\n\nThat afternoon, Dan mustered all of his willpower and forced himself not to look at his first-ever student crush as he began explaining the concept of 'limits'.\n\n\"In mathematics, a limit is the value that a function or sequence 'approaches' as the input or index approaches some value. Limits are essential to calculus, and are used to define continuity, derivatives, and integrals,\" he began.\n\nEach time he went over a concept, he asked if there were questions. The only student who didn't have one was Kimber.\n\n\"Okay, so please do all of the odd-number problems for tomorrow. If you need help, the even-numbered problems have step-by-step walk-throughs.\"\n\nAfter the bell Kimber again lingered after the other students left. Forced to finally look at her Dan asked if he could help her with something.\n\n\"Have I said or done to something to offend you, Mr. Snyder?\" she asked sincerely.\n\n\"No. Of course not. Why would you ask such a question?\"\n\n\"There aren't very many students in 5th period and yet you never once looked at me. I couldn't help but notice you not only made eye contact with everyone else, but you also addressed each of them by name. Am I being paranoid or was that really just coincidental?\"\n\nHe could 'feel' the hurt in her voice and see it in her eyes.\n\n\"That made me wonder if I'd somehow offended you even though I keep coming up blank no matter how hard I try to think of what it is I might have done.\"\n\nDan exhaled slowly the said, \"No. Not at all, Kimber. I've just had a lot on my mind lately and something's been distracting me. But please believe me when I tell you you haven't done anything wrong.\"\n\n\"Okay,\" she said politely. \n\nAs she had the day before, Kimber started to walk away then stopped and said, \"I don't have any friends my own age, and I don't really relate to them well. I won't ask again, but I really would enjoy talking to you about my internship or...anything else for that matter.\"\n\nHer smile wasn't nearly as bright and Dan could sense she honestly believed she'd done something to upset him. How could he tell her that her presence alone was the cause of so much consternation?\n\nBefore he could stop himself Dan said, \"I don't suppose a cup of coffee would be violating any rules.\"\n\n\"Are you sure?\" Kimber asked hopefully.\n\n\"Is Saturday morning okay?\" he asked even as his brain screamed at him not to.\n\n\"That's actually my favorite time of the week. I'm up crazy early so I get there at 6:30 when it opens. But you don't need to...\"\n\nDan was also an early riser and said, \"That's no problem at all. I'll um...see you then, and I really am looking forward to hearing about your experiences.\"\n\n\"I'm excited to share them with you,\" she told him. \"Oh, um...just in case you're wondering, please know I am fully aware that you're my teacher, Mr. Snyder.\"\n\nShe smiled again then told him, \"And also please know I never, ever...talk out of school.\"\n\nHe sat there once again asking how in God's name he'd taken this next step and yet he somehow found her assurance of discretion very comforting. His brain was still yelling loudly, but it was no longer screaming.\n\nDan didn't sleep much Friday night and was up at 4:30 and out for a run by 5am Saturday morning. He was a strong runner for someone his age and finished a four-mile course in a very respectable 27:09. It was just what he'd needed to clear his head and break free of his obsession.\n\nBy the time he'd showered and dressed, he felt like he was back in control. He'd have a cup of coffee, listen supportively, then excuse himself and that would be that.\n\nIt was 6:35 when he arrived and Kim was just sitting down with a first cup of coffee when she looked up and noticed him.\n\nShe waved at the barista and said, \"Hector? Put his on my tab, okay?\"\n\nThe older man flashed a thumb's up then asked, \"What can I get you, se\u00f1or?\"\n\n\"A regular coffee. Black, por favor.\"\n\nThe weather hadn't turned cold yet although the mornings were already on the cool side. Dan did his best not to stare when he saw Kim in a pale yellow dress with a short-waisted, green cardigan sweater, suntan hose or stockings, and yet another pair of very sexy heels. He thought they were taupe-colored pumps but didn't dare stare. She also wore a simple gold chain with a pendant and her normal, minimal amount of makeup.\n\n\"You look very nice for...\"\n\nHe glanced at his watch before continuing, \"Six forty-one in the morning.\"\n\n\"Well, thank you for saying that,\" she replied, her eyes sparkling with happiness.\n\n\"You look rather good yourself,\" she told him pleasantly.\n\n\"I'm a hopeless preppy,\" he told her as he sat across from her. \"Or so I've been told for as long as I can remember.\"\n\n\"I fully understand clothes don't make the man...or woman...but I see nothing wrong with looking one's best whenever possible,\" she said pleasantly.\n\nKimber smiled then said, \"You never know whom you might meet, right?\"\n\nHer smile was infectious as was the boundless optimism she seemed to radiate. Dan had to remind himself of his agenda then smiled back as he replied.\n\n\"I couldn't agree more. I've not only been called 'preppy' more times than I care to remember, but I've also been called 'shallow' by women when I try and explain how I feel about, well, looking my best.\"\n\n\"I not only won't call you shallow, Mr. Snyder, rest assured I concur wholeheartedly.\"\n\n\"You're a most unusual young lady, Ms. Clymer,\" he said before taking a first sip.\n\n\"Should I be feeling paranoid again?\" she asked still smiling happily.\n\n\"No. Definitely not. I only meant that I've never met a student like you before.\"\n\n\"Um...that's not helping, My. Snyder,\" she said sweetly.\n\nRealizing how that must have sounded, Dan tried to recover.\n\n\"I meant that in the most positive way possible, Kimber. In fact, I don't think I've ever met a woman of any age as fascin...\" \n\nDan suddenly stopped talking then said, \"Why don't you tell me about this paid internship. That, I'm sure will be fascinating.\"\n\n\"Now I almost feel guilty for asking you to let me talk about the internship\u2014not that I couldn't summarize it rather succinctly. It's more that it's tied to many other very personal things and could take quite a while. So...would you prefer the sort version or the long one?\"\n\nKimber was still smiling, but her eyes were different. They seemed...sad. Dan saw her blink a couple of times then say, \"Mr. Snyder?\"\n\n\"Oh, yes. I'm sorry Kimber.\"\n\n\"Sorry? For what?\" she asked unaware his mind was already drifting.\n\nIgnoring her question, he told her, \"Kimber is such a beautiful name which seems fitting for such a...\"\n\nOnce again, Dan stopped before going down another wrong road.\n\n\"Sorry,\" he said again. \"Um...I have time, Kimber, so if you don't mind, the long version would be fine.\"\n\n\"Don't say I didn't warn you, Mr. Snyder,\" she said sweetly. \"And feel free to stop me or hurry me up at any time.\"\n\nShe took a sip then began by saying, \"I guess I've always been a good student. School has always easy for me. I was one of those weird kids who loved going to school. I also loved going home because I had the most wonderful parents who loved one another very much and who also loved me. I felt like my life was as close to perfect as it gets although, like most kids, I suppose I took it for granted most of the time. Anyway, we had didn't have a lot of money, but we did have a nice home, and what seemed like an endless supply of love.\"\n\nShe'd been looking at then looked down into her coffee cup before continuing.\n\n\"I'd even started dating and really liked one of the guys I went out with. Oh, I didn't dress\u2014or look\u2014like this at all back then. I was quite a bit heavier and didn't really care about such things.\"\n\nShe took another a sip of coffee then continued. \n\n\"I honestly worshipped my dad and idolized my mother. He was so loving and caring and funny. My father was ten years older than my mom, and they married the summer after she graduated from high school and never regretted it. My mom was thin and beautiful and my very best friend.\"\n\nKimber smiled and with a voice filled with nostalgia said, \"My mom used to say marrying my father when she was so young gave her more time to keep falling deeper in love with him.\"\n\nDan saw her blink back a tear and she saw his concern.\n\n\"No, it's fine. I'm okay. Really,\" she assured him.\n\nShe drew a deep breath then continued. \"All that changed during the summer after my junior year\u2014a little over a year ago.\"\n\n\"Ms. Simmons told me you lost your parents, Kimber. I am so very sorry,\" Dan told her.\n\n\"Thank you. Me, too,\" she said fighting not to lose control.\n\n\"Anyway, my life was pretty amazing until my parents were coming home from a romantic anniversary dinner in early August. A semi driver fell asleep at the wheel, crossed the median and hit the car in the front left. My dad died instantly, but my mom survived. She survived, but she...didn't live.\"\n\nKimber went on to explain how she was both paralyzed and in a vegetative state until she passed away. \n\n\"That's when reading became my passion. I've always enjoyed it, but I read for hours every day for months as I stayed with my mom. I'd sit there and hold her hand. I'd even read out loud quite often. You know, just in case she could hear me. The long-term care facility even set up a bed for me. I only went home to shower once a day, but sometime after about three months there was an eviction notice on the door. I had no one to turn to except my grandmother up here, and she struggles with mild dementia so...they eventually foreclosed on the house and one of the nurses sort of adopted me and let me stay with he. She helped me file for emancipation, too, as I wasn't about to go into foster care or let my grandmother become my legal guardian.\"\n\nKimber smiled then said, \"I wasn't always this thin, either. And no, I'm not anorexic. I just couldn't eat much, and food still has little appeal.\" \n\nShe took a sip then smiling added, \"Unlike coffee.\"\n\n\"You drink yours black, too, I see.\"\n\n\"Oh, yes. I like the taste of coffee, not cream and sugar,\" she said politely.\n\nKimber swallowed another sip then continued speaking.\n\n\"I read well over a hundred books the seven months I stayed with my mom until she passed away. I read novels, classics, and anything that interested me. Mostly though, I was searching for answers. I read whatever I could about the meaning of life, God, religion, Intelligent Design, evolution, or anything related to those topics.\"\n\n\"Did you reach any conclusions?\" Dan asked.\n\n\"I did,\" she told him. \"The existence of God or the supernatural can neither be proven nor disproven. And yet as I watched my own mother slipping away a little more each day, the idea of a 'Helper' seemed more and more absurd. I realized that just like claims of alien abductions or that Big Foot exists, there was no evidence whatsoever for the existence of God or miracles. It doesn't matter that millions of people claim something is true, what matters is evidence and the only 'evidence' anyone offered was either Bible verses or personal experiences and anecdotal stories. You know, the kind of things no one can examine or test. So now I remain skeptical of any claim until after there's evidence to believe it, be it some deity or a some kind of really big monster.\"\n\nDan was listening carefully to every word and told her he agreed with her completely before saying, \"I enjoy hiking and have to admit I've never seen Sasquatch. But hey, maybe he's moved further up north.\"\n\nKimber laughed and said, \"I like your sense of humor, Mr. Snyder.\" \n\nShe then moved on and talked about her 60-day internship and an offer to come back after she got her BS in chemistry.\n\n\"That's truly incredible,\" he told her sincerely.\n\n\"I'm convinced I was selected because of what happened to my parents. Yes, I did have a 4.0 GPA as you jokingly referred to in the cafeteria, but I was almost certainly not the most qualified candidate,\" Kimber told him.\n\n\"Maybe there is a 'Helper' looking out for you,\" Dan teased.\n\n\"Maybe, but it seems much more likely it was a human being named Dr. Allison Carter who made several phone calls on my behalf. And if there is a 'Helper', why the hell didn't he/she/it 'help' out before my parents got crushed like bugs?\"\n\nDan knew her question was rhetorical and didn't reply.\n\n\"Anyway, after going through that, I decided I no longer cared what anyone thought about me except for myself, and since I loved the way my mother looked and dressed, I decided to copy her style with a few little modifications of my own.\"\n\nKimber was smiling happily again the said, \"Oh, there's one more thing, too.\"\n\n\"I'm listening,\" Dan told her. He found her story heartbreaking, compelling, and inspiring all at once.\n\n\"I realized life is short; that there are no guarantees\u2014except for death, of course\u2014and that love matters more than anything else.\"\n\nDan knew he shouldn't ask, but his heart was breaking for this young woman who'd been through so much.\n\n\"Kimber? Is there anyone in your life to love you?\" he asked anyway.\n\n\"Sadly, no. I mean, my grandmother tries, but I find myself caring for her more than she does for me.\"\n\n\"I am so very sorry,\" Dan told her again as sincerely as he could.\n\n\"We can't control what life brings us, Mr. Snyder. We can only control how we react to it.\"\n\nDan smiled weakly then said, \"Is it possible you really are going on thirty?\"\n\n\"Like all the girls at school say I am?\" she asked sweetly. \"They're not bad people. I know that. They just haven't been thrown one curve ball after the other. In time, they'll get it, too. I just hope it isn't from going through what I did. The easy way really is preferable.\"\n\nKimber took another sip then said, \"That's pretty much my story and you're still awake at least, so...\"\n\n\"No, it was not only very interesting, it was...inspiring. I don't think I've ever met anyone quite like you before, Ms. Clymer,\" Dan said as she sat there looking into his eyes.\n\n\"I could just as easily say the same about you, Mr. Snyder. I can't remember the last time I was able to carry on an intellectual discussion with someone.\"\n\n\"I'm afraid I had very little to contribute, but I am very happy you trusted me enough to share something so deeply personal with me, Kimber. That means a lot to me.\"\n\nDan smiled then said, \"Mr. Thomas and I have been best friends since college and although he knows more about history than anyone I know, no one would ever accuse him of being an intellectual.\"\n\nKimber laughed hard enough that she covered her mouth.\n\n\"He seems like a very sweet man,\" Kimber said.\n\n\"Hmmm. That's another word no one but his mother has ever used to describe him.\"\n\nKimber laughed again then said, \"You are such a nice person, Mr. Snyder. A part of me wishes that, you know...circumstances were different.\"\n\nDan's body released a huge shot of adrenaline when her words registered with his brain.\n\n\"Circumstances?\" he repeated. His mouth suddenly felt very dry like it was full of cotton.\n\n\"Yes. Circumstances. As much as a career interests me, there is nothing I want more in life than a loving husband and children. I've never dated an older man, but I would be more than eager to try\u2014with the right older man, of course. I mean, it worked out quite well for my parents, so I wouldn't be the least bit afraid of doing so.\"\n\nKimber looked away for a moment then smiled sweetly then told him, \"So if the circumstances were different. Were I not one of your students. And were you to ever ask me, I would enthusiastically say 'yes'. But I am your student, and I'm also assuming, of course, or possibly engaging in some adolescent wishful thinking, that a man as attractive and intelligent as you would even consider dating a girl my age, so...\"\n\nKimber saw Dan looking at her but she sensed something was wrong.\n\n\"I sincerely apologize. I have no idea why I just said those things, Mr. Snyder. I suppose I got so caught up being here with you that I forgot who you are and why that's not possible. I'll ask Ms. Simmons to move me to a different class on Monday. \"\n\nShe reached for her purse then said, \"I'll go pay Hector and leave you alone. I really am sorry, Mr. Snyder.\"\n\nKimber slid out of her seat and as she walked passed him, Dan said, \"Kimber. Wait. Please don't leave.\"\n\nHe looked up at her and suddenly felt very small and almost childlike as he looked up into her eyes.\"\n\n\"I...I've never dated a student before, Kimber. In fact, I've never even done anything inappropriate.\"\n\n\"Loving someone isn't inappropriate, Mr. Snyder, and society doesn't always get it right. I'm legally an adult, and I don't think it's an exaggeration to say I've experienced as much as many people do in a lifetime. I know who I am and what I want. And when I said I never 'talk out of school' I meant that sincerely. So yes, I am 18, but I can't argue or even take offense with those who claim I'm 'going on 30'.\"\n\nThis time Dan wanted to speak, but his voice failed him. He just sat there helplessly looking up into her beautiful eyes as she looked down at him.\n\n\"So I guess I'll see you in class on Monday then unless I can get transferred first thing,\" she said still waiting for him to speak. \"I...really am sorry for being so...so foolish and childish and inappropriate.\"\n\n\"Um...yes. I'll...I'll see you then, Kimber,\" he replied barely able to speak.\n\nAnd with that she was gone and once again, but for very different reasons, Daniel Snyder was asking himself what in the hell had just happened. He didn't need a degree in math to understand it was impossible to square a circle. It also didn't matter that the attraction he felt for Kimber was most likely a vicious form of infatuation; one still fraught with peril. His feelings were real and the understanding he could never act on them was the most difficult problem he'd ever encountered.\n\nThe rest of the weekend and the next several weeks passed by more slowly than Dan could ever remember. Kimber was unable to change classes, and every day was filled with a conflation of hope and anxiety. The hope was the thought of seeing her that day\u2014before school, in class, or a stolen glimpse as she passed by in the hall. The anxiety came from wanting to tell her how he felt while knowing he didn't dare while wondering how she really felt about him or if she still felt anything at all.",
        "On the plus side, he was happy for his longtime friend who'd taken his advice. Freddy came to work that same Monday after the Starbucks meeting with a fresh new look. His hair was neatly trimmed and combed and he'd gone out and finally bought some new clothes. He was still Freddy, but the external changes didn't go unnoticed.\n\n\"Dude, I'm starting to understand, in my own small way, of course, what it's like to be Dan Snyder. Everyone's tellin' me how good I look. You know, I think I could get used to this,\" Freddy told him after that day's classes.\n\nBeyond the good news with Freddy, Dan didn't have a lot to be excited about. The strain of being so close to this girl...this...young woman he couldn't get off his mind...was unbearable. Kimber either never felt anything that day at the coffee shop or she was an expert actress able to mask her feelings or more likely, he'd offended her to the point where she no longer had any interest in him at all.\n\nSo each day he struggled to pretend she was just one of his students rather the first student he'd ever had feelings for. It was an uphill battle, but there was nowhere to run or hide as Tammi told him she couldn't move Kimber as the regular calculus class was at it's maximum number of students.\n\nHe did have one bit of good news. He'd finally have the advanced degree before the Christmas break. He had a few more classes and a final to take, but he was essentially done with his studies. \n\nDan was so caught up in his romantic woes (or lack thereof) he'd completely forgotten about Homecoming in late-October which was now only a week away. He'd dodged working on the Homecoming committee, but there was no escaping duty as a chaperone. He'd soon be finished with cafeteria duty which meant he wouldn't be able to see Kimber each morning, and that seemed far worse than the time wasted babysitting high school students.\n\nThe following morning, Dan felt sick to his stomach when he heard his three favorite senior girls gossiping again before the start.\n\n\"Oh, my God! Did you hear who Jacob Dunning is taking to Homecoming?\"\n\n\"I know! It's that skinny little Barbie Doll bitch. Kimbo or Bimbo or whatever her name is. I just don't get it!\"\n\nDan looked toward the back wall just as Jacob sat down next to Kimber. The sick feeling in the pit of his stomach turned to disgust which he immediately recognized as jealousy.\n\n\"What the hell is wrong with you?\" he asked himself just as Jacob leaned in to kiss 'his' girlfriend. He was more than a little surprised when she turned away and rejected the kiss. Jacob was clearly trying to coax her into a kiss, but Kimber wasn't even looking up at him. Dan could feel the boy's exasperation from 50 feet away and for some reason he felt much better. Well, maybe a tiny bit less angry and hurt.\n\n\"What are you staring at?\" Dan heard Freddy say.\n\n\"Geez! You startled me,\" Dan said as he turned around.\n\n\"A bomb could have gone off and you wouldn't have stopped staring,\" Freddy said.\n\nHe moved closer and said very quietly, \"She's your first, isn't she?\"\n\nDumbfounded, Dan indignantly replied, \"I have no idea what you're talking about, dude.\"\n\n\"Uh-huh. Sure you don't. You're not crushing on your first high school student and I'm not about to ask Miss Simmons to Homecoming.\"\n\nDan turned to look directly at his friend before saying, \"You're kidding, right?\"\n\n\"Nope. I'm serious as a heart attack. About both of those things. It really sucks knowing you can't even tell her, huh, bro?\"\n\nDan didn't answer so Freddy kept talking.\n\n\"Why didn't you tell me? Do you really not trust me after all these years? I've told you about every hot chick I ever had a boner for, but you can't tell me about this one girl? Seriously?\"\n\n\"It's complicated, okay?\" Dan replied even more quietly.\n\n\"No more so than any other forbidden student-teacher relationship. She's 18, right? So jail's not an issue. I'm sure you're smart enough to figure out some way to let her know and because you're smart, you obviously trust her, so...\"\n\nDan folded his arms and stared at his friend. Before either of them could speak, Dan recognized the now-all-too-familiar voice of Ms. Tammi Simmons.\n\n\"I see both of my favorite teachers are here again.\" She put a hand on both of their shoulders and said, \"This is quite the bromance, isn't it?\"\n\nDan rolled his eyes and Freddy laughed.\n\n\"Speaking of romance...do you by any chance have a date for Homecoming, Miss Simmons?\" Freddy asked.\n\n\"Um, well, I don't believe teachers are allowed to attend as couples, Mr. Thomas,\" she replied coyly. \"Why do you ask?\"\n\n\"Let me more direct. Miss Simmons, would you you like to be be my unofficial, non-date date to the prom? The one we can't attend as a couple.\"\n\nTammi smiled, glanced at Dan, then said, \"Well, since the other member of the great bromance seems to have no interest in women...\"\n\nShe looked at Freddy and said, \"I'd be delighted to not accompany you.\"\n\nFreddy looked at her then at Dan.\n\n\"Does that mean you'll go with me?\" he asked not sure he understood.\n\n\"It means I would love to serve as a chaperone who will gladly spend her time there with you.\"\n\nFreddy was still confused so Dan helped out.\n\n\"She said 'yes', doofus. Now thank her and tell her when you'll come pick her up.\"\n\nDan recited her address from memory which further added to Freddy's confusion, but he did smile in a big way and thank Tammi before letting her know when he'd drop by before excusing himself and heading off to his room.\n\nDan tried not to laugh when heard Freddy say, \"Yes!\" as he did a kind of subdued fist pump.\n\n\"He really likes you, you know,\" Dan told her.\n\n\"Well...he's not my first choice, but now that I understand a little more about you, I don't feel so bad.\"\n\n\"Ms. Simmons, I am not gay,\" Dan said tersely but quietly.\n\n\"It's okay, Mr. Snyder. It's 2017 and no one cares. Life is short. Be yourself. Love whomever you want.\" She leaned over and said, \"As long as he's over 18, of course.\"\n\nDan rarely let that kind of thing get under his skin, but it ate at him all day. It was only worse when he saw Kimber in 5th period. She looked as beautiful as he could ever remember and he felt like he was at wits end.\n\nHe rarely ever called on her and she never asked questions. She got everything the first time and was acing the class. On those rare occasions when he did call on her he was businesslike and almost cryptic. Today was one of those days.\n\n\"Okay, so...the second derivative is what we get when we differentiate the derivative, right? How do we write the derivative of y with respect to x? Anyone?\" Dan asked looking around the room.\n\nNo one answered, and Dan was very surprised when Kimber raised her hand. Without looking, Dan called on her. \n\n\"It would be d2y/dx2,\", Kimber replied.\n\n\"Correct. Thank you, Ms. Clymer,\" Dan said flatly without so much as a glance her way.\n\nHe was so off his game, that twenty minutes into the class he said, \"Okay, why don't you use the rest of the hour to get started on your homework?\" something he'd never done before as long as he'd been teaching.\n\nHe sat at his desk and kept stewing over the comments Tammi had made. Yes, it was eating at him for yet again about being thought of as gay, but what he really couldn't let go of was the 'love whomever you want' part. He knew whom he wanted to love or at least get to know, but he also knew he couldn't.\n\n\"Fucking square circles,\" he said under his breath hoping no one had heard. \n\nThe total silence followed by open-eyed looks followed by nervous laughter told him otherwise. Dan hadn't blushed in years and had never done so in front of his students, but his cheeks were warm and blushing only added insult to injury.\n\nHe'd never been more relieved to hear the bell ring than he was that day. He was too embarrassed to even look up but was aware of someone standing in front of desk. He didn't need to look up to know who it was.\n\n\"May I help you?\" Dan asked without smiling.\n\n\"I'm not sure,\" Kimber said politely. \"But I do need to ask you a question. If that's all right.\"\n\n\"Yes, of course,\" Dan replied as he shuffled some papers around.\n\n\"What did I do to offend you so badly, Mr. Snyder? I honestly thought you enjoyed our time together...sorry, the time I spent explaining my internship...as much as I did. Was it what I said before we parted company? Was my being honest that off-putting? If so, I apologize, but I can't apologize for the way I feel.\"\n\nDan forced himself to look up and could see the hurt in her eyes and on her pretty face.\n\n\"The way you feel?\" Dan repeated.\n\n\"Mr. Snyder, I know the rumors aren't true. You know, about you being...you know.\"\n\nDan sighed then said, \"I've heard.\"\n\n\"They're not true. I know because...because I saw the way you looked at me.\"\n\n\"The way I looked at you?\" \n\n\"Yes. The same way I was looking at you. That look.\"\n\nDan started to speak, but Kimber asked him to let her finish.\n\n\"Please don't insult me and tell me you don't know what I'm talking about. Like the Meghan Trainor song says, 'I might be young, but I'm not stupid', Mr. Snyder. In fact, I'm pretty sure I know exactly what happened and why you've been so distant and cold ever since. You looked at me that way because you do feel the same way I felt. The way I still feel and in spite of your actions, I believe that in your heart, you still feel that way, too. You just can't figure out how to...square the circle.\"\n\nDan was so taken aback, he couldn't speak. He just sat there and stared.\n\nFinally, he managed to say, \"How can you possibly be 18?\"\n\n\"Maybe I really am going on 30,\" she said sweetly with a smile.\n\nDan found his voice the said, \"But aren't you going to Homecoming with Jacob?\"\n\n\"Yes, but only because the guy I want to go with can't take me. Well, that's not the only reason. I know it's childish, but I thought if I could make you jealous then maybe you'd finally tell me how you feel about me. Since you haven't, I wanted to take one last chance at telling you how I feel about you. So...I just did. And I still haven't forgotten you're my teacher and please don't forget I never talk out of school. Ever.\"\n\n\"Kimber, I...I don't know what to say. I've been trying to um...square this circle since we had coffee together. I just can't. Lord knows I've tried, Kimber. I just can't. But I also can't deny that what you just said is true\u2014all of it.\"\n\nKimber smiled happily then told him, \"I'm happy just knowing you do have feelings for me, and I'll leave you with the lyrics of a song my parents used to listen to when I was a little girl. It goes: 'Oh, but it's all right, once you get past the pain, you'll learn to find your love again. So keep your heart open 'cause love will find a way'.\"\n\nAnother smile then she said, \"Keep your heart open and find a way, Mr. Snyder, because I meant every word I said and I have many more I'd like to say. But first, you have to find a way. A way for us to be together. And when you do, I'll be...right there waiting for you.\"\n\n\"Another song from the past, Miss Clymer?\" he said in reference to the words to another blast from the past, his eyes now bright and clear.\n\n\"I told you I was going on 30,\" she said with the most amazing smile he'd ever seen as she turned to walk out. \"Maybe one day you'll believe me.\"\n\n\"Kimber?\" Dan called out.\n\nShe stopped and turned around and waited.\n\n\"You were right, of course. About everything,\" her teacher said.\n\nShe smiled again then said very sweetly, \"I know.\"\n\n\"And...I will find a way. I promise.\"\n\n\"I know,\" she replied again. \"Bye, Mr. Snyder.\"\n\n\"Good-bye, Kimber,\" he said as he realized he was rock hard and happier than he'd been in weeks.\n\nBy the time Homecoming came around he'd found the answer; an answer that solved the problem. One that squared the circle. He'd barely slept for racking his brain to find a solution when the answer presented itself after a class he was taking for his master's degree in math.\n\nThe evening of the big event, Dan was feeling good for the first time in weeks and it didn't go unnoticed by Freddy who'd stopped by unannounced.\n\n\"Someone's in a good mood,\" Freddy said shortly after arriving.\n\n\"Yeah, I really am,\" Dan told told him.\n\n\"Would this by chance have anything to do with a high school student you find incredibly attractive?\" Freddy asked partly teasing and partly hoping his friend had found away to let this crush of his go.\n\n\"It would,\" Dan told him confidently. \"I think I found the perfect solution.\"\n\n\"Solution? You mean you're not gonna just forget about this thing? Dude, you know you'll get fired if you so much as date her. Well if anyone finds out and in my experience, it almost always gets found out. Please tell me you're not gonna risk ten years of teaching for some skinny 18-year old.\"\n\nFreddy didn't normally think before he spoke and this was no exception. But since he'd started caring about his outward appearance, he'd been doing a better job of monitoring his comments. Realizing what he'd just said he immediately apologized.\n\n\"I didn't mean it like that, man. She really is a beautiful girl. I just prefer a little more um...junk in the trunk and a woman can't be too big up top. For me anyway.\"\n\n\"No offense taken and to each their own,\" Dan said ignoring the slam. \"I just couldn't disagree more. For me, thin is in and a girl can't have too little upstairs or down below. But she's gotta be smart, too. And dress nicely. And...sorry. You've heard it all before. I'll shut up after saying, Kimber is the epitome of everything I ever dreamed about in a woman. I just never pictured her being much under 30 or maybe 25. But yeah, I got it bad for her, my friend.\"\n\n\"So are you gonna share this 'solution' or leave me hanging?\" Freddy asked.\n\n\"Nice tux, by the way. I never thought I'd ever see you in suit let alone a tux. I think someone else's got it bad for a fellow teacher,\" Dan said before sharing his grand master plan with his former roommate.\n\n\"No kidding? That would be awesome! When will you know for sure?\" Freddy asked after listening to his friend's short-but-brilliant-sounding plan.\n\n\"I'm hoping to know within a week although it will be tentative until I have the new sheepskin in hand.\"\n\n\"Does your crush know about this?\"\n\n\"Not yet, but I plan to tell her tonight.\"\n\n\"Hold on, man. Isn't she going with Jacob Dunning? You know, Mr. Handsome Athletic-but-dumber-than-dirt Guy?\"\n\n\"She is, but here's the deal,\" Dan said before sharing the last conversation he'd had with Kimber after class.\n\n\"I have to admit she may be the most mature high school student I've ever met. And although I'm not into the emaciated, supermodel look, she is a very pretty girl,\" Freddy replied trying to be supportive.\n\n\"Yeah, she is. On both counts. But where you see 'emaciated' I see beauty beyond words. So...are you picking Ms. Simmons up or meeting her there?\"\n\n\"I wouldn't have shelled out this kind of dough if she hadn't agreed to let me take her,\" Freddy announced as he pulled on the ends of his black tie. \"I think I've actually got a shot with her, Danny Boy.\"\n\n\"You know what? You just might, my man. If you don't blurt something out about her boobs or her ass.\"\n\nDan paused, smiled, then said, \"Or even worse, some other woman's boobs or ass.\"\n\n\"Yeah, reining it in is easy. Keeping it reined in is another matter. But I really like this girl, man, and if things work out, I've got you to thank.\"\n\n\"Nah, this is all on you, bro. Just remember that if things get serious, you can't default to your old ways. People say it's superficial to care about looks or the way someone dresses, but that stuff matters to some people.\"\n\nDan laughed then added, \"Like me. And from what I can tell, like Kimber.\"\n\n\"Well, all I can say is I'm willing to change and stay changed for a shot at her.\"\n\n\"A shot as in...marriage?\" Dan asked with genuine surprise.\n\n\"Yeah. I mean, why not? I'm not gettin' any younger and as much as I enjoy hangin' out with you, I'd really like someone to come home to every night, you know?\"\n\n\"Yes. Yes, I do know, my friend, and I couldn't agree more.\"\n\n\"Just be careful, okay? I know this kid 'does it' for you, but a girl that age isn't ready to settle down even though you might be. She needs to spread her wings and see the world, so to speak. You know that, right?\" Freddy said with real concern.\n\n\"I do,\" Dan told him not wanting to get into her family history and why he honestly believed she was different in that way, too.\n\n\"Okay, then. I guess I'm gonna roll. I don't wanna show up late for our first date, right?\" Freddy said with a big old smile.\n\n\"Nope. Can't have that,\" Dan told him. \"Hey. Good luck, man.\"\n\n\"Thanks, Dan. You, too. I honestly hope that all works out for you.\"\n\n\"Me, too, Freddy. Me, too.\"\n\nDan showed up early enough to go over the 'rules of the road' for chaperones even though this wasn't his first rodeo. He tried not to smile when the assistant principal reminded them it was appropriate to accept an invitation to dance with a student\u2014once. Asking them however, was strictly taboo. Dan had no intention of asking Kimber to...dance. He also tried not to laugh when Tammi elbowed Freddy when she told him, \"Don't even think about it\" when it came to accepting an invitation from a female student.\n\nStudents tended not to show up early or even on time. The exceptions were those on committees or serving as the DJ. Well, there was one other\u2014Kimber Clymer.\n\nDan was unable to take his eyes off of her from the moment she walked in. She had her arm in Jacob's, but Dan paid no attention to Mr. Athletic or whatever Freddy had called him. Kimber was all he could see and she looked amazing in her light-gray, sleeveless Oriental Blossom dress. It was soft and feminine with a pleated neckline which fell into a floor-length skirt. Between the dress and her almond-shaped eyes, she looked like some kind of beautiful, non-Asian China doll he wanted to shelter and protect. The oxymoronic nature of thoughts had no effect on them. He just knew she was beautiful.\n\nThey headed his way making sure to say 'good evening' to Mr. Thomas and Ms. Simmons before doing the same to her math teacher. Freddy, in turn, made sure to detain Jacob long enough to give Kimber a few moments alone with his best friend as she quietly slipped away.\n\n\"Good evening, Mr. Snyder,\" she said. She kind of curtsied which only added to the mystique.\n\n\"Good evening to you, as well, Miss Clymer,\" he said. \"Wow, you look...stunning.\"\n\n\"Thank you very much,\" she replied, \"and may I say you look very dapper in your suit.\"\n\n\"Not as dapper as Mr. Thomas in his tux, I'm afraid, but thank you for saying that,\" he told her.\n\nThe tension between them was nearly palpable as they stood there in silence for several seconds.\n\n\"I suppose I should get back to my 'date',\" she finally said doing the 'air quotes' thing with her fingers.\n\n\"Oh, sure, but before you do, I um...I wanted you know I've...squared the circle.\"\n\nDan smiled when he saw the expression on her face.\n\n\"That...that's wonderful! I'm dying to hear the details, but I'm not sure how we can talk.\"\n\nDan saw Jacob heading their way and quietly said, \"Teachers can accept one invitation to dance from a student, and I'm saving mine for someone very special to me.\"\n\n\"Yo, Mr. S! Looks like Mr. T outdid you tonight.\"\n\n\"You're looking mighty fine yourself, Mr. Dunning,\" he said forcing himself to stop staring at his China doll.\n\n\"You got that right,\" he said as he looked at Kimber. \"Anything to improve my chances with the hottest girl in school, right, baby?\"\n\nKimber rolled her eyes and in the voice of Cher Horowitz from the movie Clueless, said, \"As...if!\"\n\nShe managed to smile at her favorite teacher in a way that went unnoticed to her date, but which Dan not only saw but returned just before she walked away.",
        "Jacob leaned over and pointing at the back of Kimber's head, mouthed the words, \"I'm so gonna hit that tonight, Mr. S!\"\n\nDan bristled at the crass remark but kept his emotions in check as he replied, \"Good luck with that, Mr. Dunning.\"\n\n\"Luck? Nah. It's a done deal,\" Jacob said brashly before turning to catch up with Kimber. \n\nFreddy excused himself for a moment and sidled up to his friend.\n\n\"I tried to buy you some time, bro. Sorry if it wasn't enough. Did you get to tell her the plan?\"\n\n\"No, but I think I'll get the chance before the night is over,\" Dan said as he watched Kimber walking away. He smiled when he saw her remove Jacob's arm twice in rapid succession both times he tried putting it around her shoulder.\n\n\"Was I as big a shitbag as Jacob?\" Freddy asked. \"You shoulda heard what he said to me. No wait. You shouldn't have heard it.\"\n\n\"Yeah, you were pretty bad, my friend. And he said something to me I'm guessing he probably said to you.\"\n\nDan looked at Freddy and at the same time, both of them said, \"Shitbag!\"\n\nThe evening dragged on for what seemed like days as the gymnasium slowly filled up with students mostly wearing formal attire. A Goth couple and two lesbian girls wearing cammo were the exceptions to the rule. Dan chuckled and again thought of the saying, \"To each their own.\"\n\nIt was almost 1am before the student DJ announced, \"Okay. This will be the last song of the night, folks! We're gonna slow it down so grab that special someone as the official part of Homecoming 2017, comes to end!\"\n\nDan knew where Kimber was almost the entire night. The only times he wasn't sure he'd assumed she'd gone to the restroom. There'd been several stolen glances and even a smile or two but no other contact at all.\n\nJacob wasn't smiling as Kimber pushed him away first once and then twice before heading toward him. As she approached, he could see Jacob angrily gesticulating while on his way toward him, and Dan was pretty sure what had just happened.\n\n\"Trouble in paradise?\" he asked as Kimber walked up and shamelessly took his hand and pulled him onto the dance floor.\n\n\"This is paradise,\" she said as she put her arm on his shoulder and offered him her hand.\n\n\"He looks pretty upset,\" Dan said as he tried to figure out what Jacob was saying.\n\n\"He's not happy with me because I not only told him I was saving the last dance for you, but that I had no intention of going to the motel room he said he reserved for us tonight.\"\n\nShe smiled happily at Daniel then said again, \"As...if!\"\n\nShe moved closer then said, \"I'm dying to hear the news. Can you please tell me?\"\n\n\"I can,\" he said as he squeezed her hand and ever-so gently ran his fingers along her lower back.\n\nIt didn't take long for him to finish and when he did, Kimber said in his ear, \"Oh, Daniel. I am so happy! I can't tell you how much I want that to work out for us.\"\n\nJust hearing her call him by his first name...no, that and the way she felt in his arms and the way she looked and the perfume she was wearing, were causing some serious swelling in a certain place. Kimber's body was already way too close for a student-teacher dance, but the lighting was very dim and neither of them cared.\n\nKimber pressed even closer and felt him then moaned softly. She gently pulled her hand from his and slid it around his neck as she pushed her body against him.\n\n\"Mmmm. You feel so good, Daniel,\" she whispered.\n\n\"You, too, Kimber,\" he said to her while pretending to be looking out into space the way an uninterested teacher should look when dancing with a student.\n\nThe song was just about to end when Kimber said, \"I'm not sure I can wait that much longer. Is there any way we can see each other before then?\"\n\n\"I'll find away...sweetheart,\" he whispered as he let his lips brush against her ear.\n\nAs the last note played, Kimber put her lips next to his ear and said quietly but clearly, \"I love you, Daniel,\" before quickly letting go and walking away.\n\nHer unexpected declaration of love caught him so off guard he was completely unaware that Jacob was in his face saying things other students heard.\n\n\"Come on, you fuck head! Let's go!\" he finally heard.\n\nFreddy arrived just in time and stepped between them.\n\n\"Mr. Dunning? Step back!\" he said. The smell of alcohol on Jacob's breath was very strong. \n\n\"That fuck is trying to steal my girlfriend!\" he hollered as another male teacher arrived and stepped in. He and Freddy each took an arm and dragged him to the other side of the gym.\n\nThe other teacher had his hand out and Dan assumed he was demanding a flask until Jacob dropped his car keys into the outstretched hand. \n\n\"Kimber!\" was his first thought as he realized Jacob had been drinking and what might have happened. \n\nHe'd lost sight of her again and suddenly felt panicked. He was supposed to stay and chaperone on a very large boat the class had rented for the night, but the thought of Kimber alone and with no way to get home was too much.\n\nHe trotted over to Freddy and said, \"I've gotta find her, man. Tell the assistant principal I got sick because that's how I feel.\"\n\n\"I got you covered, bro. Just...be careful, okay?\" he said before telling his friend to go find her.\n\nDan walked quickly to the front of the gym expecting to see Kimber standing there, but she was nowhere to be found. It was chilly outside and her thin dress was no match for the cold night air as he frantically looked around. Couples and individual's were steaming out of the gymnasium toward the parking lot. Many got on the busses the school had provided to take them to the boat.\n\nSeveral minutes passed before Dan realized she wasn't there. He also realized he was worried sick as the busses began pulling away filled with loud, boisterous high school seniors. He was about to go back inside and look around when he saw something, or rather, someone, standing by his car near the back of the parking lot.\n\nHe ran toward her and as he arrived she was shaking from the cold.\n\n\"I knew you'd find me,\" she said as Dan pulled his jacket off and put it around her.\n\n\"You're freezing!\" he said as he held her not caring where they were or who might be watching.\n\n\"No. I'm just fine now,\" she said her teeth still chattering.\n\n\"Come on. Let's get inside and turn the heat on,\" he told her as he fumbled for his keys. \n\n\"I was worried sick about you,\" he said as he opened the door for her.\n\n\"Don't be,\" she replied. \"I had to get away and I knew you'd eventually find me. Here. Waiting for you.\"\n\nHe closed the door then hurried around, got inside himself, and started the car.\n\nKimber was still freezing and her tiny body was shaking.\n\n\"Can you hold me, Daniel?\" she asked as she looked over at him with hopeful eyes. \"I don't want you to get in trouble. I...I just need you to hold me.\"\n\n\"I don't care about trouble or rules or...anything...but you,\" he said as he reached over to hold her close.\n\nThey sat there waiting for the heater to kick in and once it did, Dan asked, \"Warm enough?\"\n\nKimber ignored him and said quietly and innocently, \"Will you take me home with you?\"\n\nHer beautiful eyes were open wide and filled with both hope and longing.\n\n\"Are you sure?\" he asked as he touched her pretty face.\n\n\"I've never been more sure of anything in my life before, Daniel,\" she told him as she reached up and took his hand. Her eyes darted back and forth with his several times before she said, \"Except for one thing.\"\n\n\"What might that one thing be?\" he asked quietly, their faces just inches apart.\n\n\"That I really do love you, Daniel Snyder,\" she said with total sincerity. \"I've loved you since we had coffee together. And yes, I'm fully aware how that sounds. But I do know it. I knew it then and I'm even more sure now. You don't have to say it or even feel it, my love, but I do love you. I do.\"\n\nDaniel could not only see her love for him in her eyes, he could feel it in her voice and in the touch of her hand, and he felt it, too.\n\n\"I've dreamed of meeting someone just like you for as long as I can remember, Kimber.\"\n\nShe smiled and looked down momentarily as he paused.\n\nHe gently lifted her chin up until their eyes met again the said, \"I just never, not in my wildest dreams, expected her to be one of my students.\"\n\nShe smiled happily at him then said very sweetly, \"How many students have you had who are going on 30?\"\n\n\"Just one,\" he told her with a smile. \"And she just happens to also be the only student...no, the only woman...I've ever loved.\"\n\nDan saw her eyes filling with tears as she touched his handsome face.\n\n\"I find it hard to believe a man as beautiful as you has never been in love before,\" she said as a first tear fell.\n\nDan gently brushed it away then said, \"I've always wanted to fall in love only once.\"\n\nHe wiped away another tear as he told her, \"And I want that one time to be for life.\"\n\n\"I wrote those very words in my diary last night,\" Kimber said. She smiled bravely then told him, \"I wrote, 'I love him so very much and I pray he loves me, too. And I pray we never love another for all the days of our lives.\"\n\n\"I won't,\" he said tenderly but with complete sincerity.\n\n\"Then...then please take me home and make love to me,\" she said her voice filled with want and need. \"I've saved myself for you, my love. I didn't know when or where I'd find you. I only knew that when I did, I would know. And when I found you...I knew. I just knew.\"\n\nThe attraction was so strong, so overwhelming, no force on earth could have prevented their lips from meeting that first time. The kiss was slow and gentle, long and passionate. Tongues freely mingled as love was exchanged in some kind of primitive almost primordial, chemical way.\n\nThe sound of tapping on the glass sounded distant at first. The noise didn't make sense as their lips and their minds were locked in this melding of love until it did.\n\nKimber pulled back and sucked in air as the fear washed over her.\n\nDan was afraid to look knowing what this meant.\n\n\"Dude, roll down the damn window!\" Freddy said.\n\n\"What the...\" Dan said as he did just that.\n\n\"Our bus broke down less than half a mile up the road. Tammi's phone is dead and it's the weirdest thing, but no one can get reception. I was hoping you'd still be here.\"\n\nKimber was sitting back against the seat and up against the door when Dan looked over at her.\n\n\"It's okay. Freddy...Mr. Thomas...knows,\" Dan told Kimber.\n\nHe bent down and said, \"Hi, Kimber. Sorry for scaring you guys like that. I just needed to ask Dan for some help.\"\n\n\"So...so you're not...we're not in...\" she said as relief swept over her.\n\n\"No. We're not. This guy's been my best friend from college and he knows.\"\n\nFreddy bent back down, looked at Kimber then said, \"I do. And for what's it worth, I approve. I mean, Dan's like the smartest guy I know and when he said he's got it bad for a high school girl, I don't have to get it. I just have to be glad my best friend is happy. He is, you know?\"\n\n\"Me, too, Mr. Thomas,\" she said sweetly.\n\n\"Call me Freddy when no one's around, okay?\" he said.\n\nKimber smiled then Freddy explained what he needed. In less than three minutes, using Dan's phone, Freddy was on with the dispatcher who promised to send another bus post haste.\n\n\"Thanks, bro!\" he said handing Dan's phone back to him. He tapped the side of the car and said, \"You kids have fun.\" He looked at Kimber then said, \"Sorry. By kids I meant...\"\n\n\"It's okay, Freddy,\" Kimber said. \"No offense taken. After all, I'm going on 30.\"\n\nDan saw the puzzled look and said, \"I'll explain it tomorrow.\"\n\n\"I may be um...somewhere else tomorrow if you get my drift,\" Freddy said in the voice men use when they think they're about to get lucky.\n\n\"Oh. OH! Okay. Well...then I'll see you when I see you...Romeo.\"\n\nFreddy laughed then bent back down and said, \"Goodnight, Kimber. Take good care of this guy. He's not just the best, he's the best.\"\n\n\"You won't get any argument from me, Freddy, and I second Daniel's sentiments. Good luck!\"\n\nFreddy tapped the car again then said, \"I gotta get back. Hot date waiting and all.\"\n\n\"If the heat's out, she's probably freezing by now, but...okay,\" Dan teased.\n\n\"Thanks, man. You really are the best.\" \n\nFreddy waved then turned around and started jogging in the cold night air.\n\n\"You guys are a rather unlikely pair,\" Kimber said with a smile.\n\n\"I've heard that a time or two,\" he told her.\n\n\"Like us?\" she asked sweetly.\n\n\"Like us? Oh, no. I haven't waited my whole life to meet Freddy,\" he assured her.\n\n\"I hope it's been worth the wait,\" she told him.\n\n\"Do you know the Bible?\" he asked her.\n\n\"Not well. I kind of lost faith after the accident, you know.\"\n\n\"I do,\" Dan told her. \"I'm not much on religious things myself, but I was just thinking about a parable I learned in Sunday School when I was maybe five or six. It's called the 'Pearl of Great Price.' It's the thing that a man will sell all that he was in order to get once he's found it.\"\n\nKimber understood immediately and Daniel knew she did. Even so, he still told her.\n\n\"You are my Pearl of Great Price, Kimber. I would gladly give up everything I have for you to include my teaching job.\"\n\n\"And you are mine, Daniel,\" she told him. \"I'm ready to give up...everything...for you.\"\n\nShe leaned over and kissed him this time then said, \"Everything, my love.\"\n\nDan had only made love to one other virgin before and that was the night he lost his virginity, as well. As he recalled it had been clumsy and awkward and rather painful for the girl as he had no idea what he was doing as he thoughtlessly poked around much too hard and too quickly.\n\nBut with Kimber it was very, very different. She was ready and eager and even hungry for him. Dan was loving and patient and spent a great deal of time on foreplay kissing and caressing, touching and gently probing as they explored one another's bodies.\n\n\"You are the most beautiful woman I've ever known he told her when she was undressed.\"\n\n\"Is that in the biblical sense?\" she teased.\n\n\"In any sense,\" he told her.\n\n\"I...wish I was, you know...bigger for you,\" she said feeling slightly self-conscious at not really even needing a bra at 18.\n\n\"No. No!\" Daniel assured her. \"Kimber. Sweetheart. Not all men are the same. I love your body exactly the way it is.\"\n\nHe smiled, touched her face, then said, \"More than you can know. It\u2014and you\u2014are perfect just as you are.\"\n\nShe sensed he was telling her the truth and thanked him.\n\n\"I've always been felt...cheated,\" she told him. \"It seemed so unfair.\"\n\n\"But now you've found someone who thinks you're flawless; someone who wouldn't change anything about you,\" he said as he cupped her pretty face. \"I love your body, sweetheart. And I love you.\"\n\nKimber melted into his kiss and in just under an hour later, she endured the briefest stab of discomfort as she became a woman in the arms of the first and only man she'd ever loved.\n\nMoments after that short 'stinging' feeling was replaced with the most wonderful feelings of pleasure she'd ever experienced. He'd given her an orgasm with his fingers and then again with his tongue. But the feeling of fullness she experienced, the sensation of her lover inside her not only filled her physically, it filled her emotionally and somehow even spiritually as her body shuddered and exploded in another orgasm more intense than anything she'd ever known.\n\n\"Oh, my God,\" she said happily as he lay on top of her, his hard cock still inside her. \"So that's what all the fuss is about. I thought it would be nice, but...\"\n\nShe looked into his eyes then said again, \"Oh, my God!\" as she pulled his head into the crook of her neck.\n\nMoments later, Kimber said without moving, \"How long until we can do that again?\"\n\nShe felt him swelling inside her and said playfully, \"Oh. That soon, huh? Mmmm!\"\n\nThe next morning Daniel wanted to make breakfast for them, but Kimber wouldn't have it.\n\n\"I hope it won't surprise you that I am a very traditional girl. I won't refuse help around the house or tell you not to bring me breakfast in bed on special occasions, but I want to take care of my husband.\"\n\nWhen she realized what she'd said she threw her hands over her mouth and said, \"Daniel, I am so sorry. I didn't mean to imply that...I wasn't hinting around at...\"\n\nHe pulled her to him and said with a smile, \"Stop. I like traditional women and I like the sound of that word when you say it. You know\u2014husband.\"\n\n\"Me, too,\" she said as she drew circles on his chest. \"I have to admit I didn't think the man I'd fall in love with would ever be my teacher, but I did fully expect him to be older than me.\"\n\n\"Just not this much older, right?\" he said as he pulled her over and rolled on top of her.\n\n\"I guess I kind of had ten years in mind\u2014for obvious reasons,\" she told him referring to her parents. \"But then you never expected to fall in love with one of your students, either so...\"\n\n\"How are we going to do this until...\" Dan began saying.\n\n\"Until you get your degree and start teaching college math?\" Kimber filled in.\n\n\"I don't have the job yet,\" he reminded her.\n\n\"I know, but it's just a formality. After the dean interviews you, you'll be a shoe in. I promise,\" she told him playfully.\n\n\"I hope you're right,\" he told her. \"Either way, I can't keep teaching high school. Not when I want to be with one of my students like this all the time.\"\n\n\"But I thought you were going to wait to resign from your job until you know for sure. I can't be the cause of...\"\n\nDan put his finger other lips and said, \"You're not the cause, honey. You're the reason. You're my purpose. I can bag groceries or mop floors in the interim. But I can't keep teaching when I'm so in love with you.\"\n\n\"I love you, too,\" she said her eyes again welling with tears. \"I love you so very much.\"\n\nOn Monday morning, Dan handed the principal his resignation while thanking him for the privilege of having taught there for over ten years.\n\n\"But what are you going to do if you don't get the job, Dan?\" the principal asked.\n\n\"I'll get it,\" he said confidently. \"I have someone who believes in me. Completely.\"\n\n\"Lucky...girl?\" he asked tentatively.\n\n\"Not you, too?\" Dan said shaking his head.\n\n\"Sorry! It's none of my business, you know? I've just heard so many rumors over the years and I can't ever remember you with a date at any function so...\"\n\nDan actually laughed then said, \"No, you're right. But it is a girl. A young woman, actually. A woman who's um...going on 30.\"\n\n\"Well, that makes sense. You must be what? Around 33 or 34 now?\"\n\nDan smiled and said, \"Close. You know, she and I don't make any sense, and yet it's the most wonderful thing I've ever experienced.\"\n\n\"Then she is indeed a very lucky girl, Dan,\" the principal said.\n\n\"No, I'm the lucky one. I've waited for her all my life. I just never thought I'd find her where I did.\"\n\nThe principal laughed then said, \"The Lord...or the universe maybe, works in mysterious ways sometimes, right?\"\n\n\"Yes, it does,\" Daniel agreed before shaking hands and walking out. He laid his keys on the secretary's desk and with that, said goodbye to the only job he'd ever known.\n\nDan took a temporary job as an assistant manager at a hardware store until he interviewed with the dean of the community college who hired him on the spot\u2014pending his successful degree completion which followed two weeks later. He would be starting as an associate professor of mathematics on the 5th of January, 2018, and making about 25% more than he'd made teaching high school.\n\nIn the interim, he and Kimber spent as much time together as they could. They neither flaunted nor hid their budding relationship, and Dan's parents soon learned to love her almost as much as their son once they got passed the shock of learning she'd been one of his students. But just one evening with Kimber proved what their son had assured them. She was indeed 18, but it honestly seemed like she really was going on 30.",
        "She made dinner for Dan the evening of the 5th to celebrate his first day as a college professor, even though he was really still just a teacher as he didn't have a PhD. Regardless, Kimber wanted to share in this important day which turned out to be the most important day in her life as her handsome, older boyfriend asked her to marry him.\n\nThrough tears of happiness she said 'yes' and moved in with him the following weekend as she finished her senior year. The weekend after she graduated from high school, they married at his parents' home and spent a week in Las Vegas, courtesy of Dan's father.\n\nAfter a particularly passionate round of lovemaking, Dan asked his new wife a question.\n\n\"Do you think you'll ever grow tired of me? You know, getting married so young?\"\n\nShe rolled over on top of him and said, \"You didn't know my parents, but I did tell you what my mother said about marrying my father when she was so young. Don't tell me you forgot.\"\n\n\"No, I didn't forget. I just wanted to hear you tell me that, honey,\" he told her with a smile.\n\n\"Well, Daniel Snyder, I will never get tired of loving you. In fact, marrying you when I did means I will have more years to live with you and love you and to keep falling in love with you and to love you more with each passing day.\"\n\nShe smiled and said, \"Satisfied?\"\n\n\"Uh-uh,\" he told her. \"I'm insatiable.\"\n\n\"Hmmm. That makes two of us,\" she said with a laugh as he rolled her over and made love to her yet again.\n\nBy the end of that year, Freddy and Tammi were engaged, and Kimber was sporting a little baby bump. Or at least that's what it looked like on her tiny body even at nine months into her pregnancy. \n\nFive years and two additional children later, she was still a size zero with nothing 'up top' or 'in the trunk' and her husband still thought she was the most beautiful woman he'd ever known\u2014biblically or otherwise."
    ],
    "authorname": "komrad1156",
    "tags": [
        "student-teacher",
        "small breasts",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/going-on-thirty"
}