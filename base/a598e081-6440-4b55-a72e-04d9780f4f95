{
    "title": "End of the Line Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 9 - Fishing and Catching \n\nIt happened unbelievably fast, this time... maybe because I was anticipating it. A motorcycle roared into the parking lot and up to the stage. I could see the motorcyclist, clad in brown pants, tan jacket and black motorcycle helmet, take his right hand from the handlebar of the bike to his pocket, pulling out a gun as he drove between the Press Corps and the stage.\n\n\"Now!\" I shouted to Cindy as I grabbed the rope and pulled it taut. The rope was wrapped around the Handicapped signpost and Cindy took out the slack and pulled on it.\n\nIntent on his mission, the motorcyclist did not see the rope suddenly spring up. It caught the bike just below the handlebars, and while the signpost bent, the rope held. The motorcycle's front lifted... then the machine turned over, throwing the rider to the ground.\n\nAnd then we pounced. Cindy and I ran up to the perp as Della Harlow pulled Myrtle L. James back and several women shielded them. The stunned perp tried to raise his gun...\n\n*WHAP!*\n\nThe red crowbar came down on his hand, making his scream under his helmet. The gun dropped, and as I grabbed the perp and twisted him onto his belly, Cindy was already bagging the gun as evidence. Meanwhile, I'd affixed handcuffs to the stunned perp before he even realized what was happening, and I pulled him up to his knees.\n\nAs the Press surged forward, cameras rolling, I shouted \"And now, ladies and gentlemen, let me introduce you to the bastard that murdered Joe Smedley... Robert Brownlee!\"\n\nOnly after announcing the name did I grab the base of the motorcycle helmet and pull it off. Indeed, the hatred-filled face of Brownlee appeared, looking as if he wanted to kill anyone he could get his hands on... maybe including himself.\n\n\"Robert Brownlee,\" I said loudly, \"You are under arrest for the murder of Joe Smedley, a human being. You have the right to remain silent...\" The Media cameras got it all as Police Cruisers came into the parking lot. Sergeant Rudistan and Sr. Patrolman Morton were the first to come up.\n\n\"Ah, Commander, I see you caught a big fish today.\" said Rudistan jovially. \"Chief Griswold will be impressed. He loves it when someone catches big fish.\"\n\n\"Yes, he does.\" I replied with a half-smile. \"Take this bastard to Headquarters and put him through booking then into I-1. Have a doctor come to make sure he's not injured or bleeding internally, and make damn sure he doesn't get injured on the way, if you know what I mean.\"\n\n\"Roger that, sir.\" said Morton. The Uniformed Officers escorted their former Deputy Chief to the Police cruiser, half dragging him as he made no effort to walk with them. Rudistan was not one to play, and he efficiently hauled Brownlee into the back of the vehicle.\n\n\"Okay, Mrs. James.\" I said. \"Why don't you make that presentation now...\" Though shocked, Mrs. Myrtle L. James regained her composure as the real ladies of the Ladies Auxiliary came out of their Clubhouse, and Della Harlow's award was bestowed upon her...\n\n* * * * * * * * * * * * * * * *\n\n\"I'm impressed.\" said Chief Griswold as we looked through the one-way glass in the anteroom of Interrogation-1. \"You're a lousy fisherman, Crowbar, but good at catching perps. Damn good. And you got all the evidence we need.\"\n\nRobert Brownlee was sitting at the table, alone but for Patrolman Hicks guarding him. Brownlee's handcuffed hands were secured to the ring embedded in the table, which was embedded in the floor. He looked defeated, but also still full of deep hatred.\n\n\"Yes, you did an amazing job.\" said Chief Moynahan. \"I've already alerted the Council than an emergency meet-ing for some awards might be needed.\"\n\n\"Put the Policewomen in the stands and Captain Ross in for the medals.\" I said, my voice sounding strange and eerie to my own ears. \"All I want is to see that son of a bitch die on the table at Jacksonville State Prison.\"\n\n\"So do I.\" said Chief Griswold, with some emphasis in his voice. \"And thanks to you, Crowbar, it's going to happen. Joe Smedley will get Justice. You have avenged him.\" Further words would be inadequate to express the old Chief's emotions regarding my success at avenging Joe Smedley...\n\n* * * * * * * * * * * * * * * *\n\nDr. Richard Searles arrived from University Hospital and examined Brownlee. He found nothing wrong with Brownlee's transplanted heart, and he did not think there was any internal bleeding, but told us to watch for bruising or Brownlee fainting. We'd removed Brownlee's clothes to make sure he had no cyanide capsules (he didn't), and he was wearing international Prison Orange, the standard fashion of my TCPD jails.\n\nBrownlee's lawyer finally arrived. He was the same man that had been handling Brownlee's lawsuits against the County; he was ill-prepared to handle a murder case.\n\nMy chosen interrogators were Teddy Parker and Joanne Warner. As expected, Brownlee said nothing. Finally, his lawyer said \"You have to explicitly invoke your rights out loud. The Ninth Circuit made that idiotic ruling, so go ahead and do it.\"\n\n\"I invoke my right to remain silent.\" Brownlee snarled. \"I will answer none of your questions at any time.\" I knocked on the window, and the Detectives came into the anteroom.\n\n\"I'm going in, just to ask one question.\" I said. \"I know he won't answer, but maybe he'll tell his lawyer later.\" I went inside. The hatred on Brownlee's face turned a shade uglier... if that was possible.\n\n\"I just have one question of your client.\" I said. \"I know why he tried to murder Della Harlow: to get back onto the TCPD. But that was never going to happen anyway. I just want to know why he was so desperate to get back on a Police Force that does not respect him and did not want him. What did he think he would accomplish?\"\n\n\"My client has invoked.\" said the lawyer. Nothing else was said as I stared into Brownlee's eyes. I realized that I was looking into the soul of a deranged man, devoid of sanity. I turned and left the room.\n\nPart 10 - Solution \n\n\"The Sheriff has called me to his office.\" said Chief Moynahan. It was 3:00pm, Friday, October 21st, and we were in the Chief's office. Cindy and Teresa were also there. \"And he explicitly said to not bring the Iron Crowbar.\"\n\n\"Here.\" I said, offering the red crowbar. \"Just in case you need it.\"\n\nMoynahan smiled. \"I am a Cavalryman, Mr. Crowbar. Like Ms. Croyle here, I do not need a crowbar. But I do appreciate the offer.\"\n\n\"I don't need it, either, Chief.\" I said. \"It's just a hell of a lot more fun using it. And Ms. Croyle does not know all the fun she's missing.\" Teresa just shrugged.\n\n* * * * * * * * * * * * * * * *\n\nThe Police Chief stood in front of the Sheriff's desk, not having been invited to sit down. Sheriff Daniel Allgood was sitting in his chair behind his desk, and looking very angry.\n\n\"Why in the hell did you not tell me about this scheme?\" asked the Sheriff. \"If an innocent person had been hurt, it would've been my ass hung out to dry!\"\n\n\"I told you once before, Sheriff,\" said Moynahan, standing his ground, \"that we were not going to come running to you for every little thing. I approved the Iron Crowbar's plan, which was sound and the only way to catch that bastard red-handed.\"\n\n\"Something of this magnitude, you should've run it by me first.\" said Allgood. \"The Press is all over me, calling and asking how the Iron Crowbar knew who the perp was, naming him before taking off his helmet, and wondering why I, not you but me, let him run that half-assed, hair-brained operation that might've gotten someone killed! And you know what? I don't know what to tell them, because I had no idea this was coming!\"\n\n\"You made a point to tell both me and Commander Troy to do our jobs and let you do yours.\" said Moynahan. \"Now you seem to be going back on that, and you want to do our jobs, too. Make up your mind, Sheriff. Which way do you want it?\"\n\n\"That's insubordinate.\" said Allgood. \"I ought to suspend you.\"\n\n\"Then do it.\" said Moynahan. Then he bore down on Allgood. \"But you won't. You're not man enough to do it. And you're not man enough to whip my ass, either.\"\n\n\"There you go again.\" said Allgood. \"You military guys, your mano-a-mano bullshit. I'm sick and tired of it, from both you and the Iron Crowbar. You're supposed to be running a Police Department, not a Fight Club.\"\n\n\"And we ran that Police Department today, Sheriff.\" replied Moynahan. \"We caught the bastard who gunned down one of this County's greatest heroes, and we caught him in a way that will get him the syringe at Jacksonville State Prison. Now if you want to suspend me, and then go tell the Press that you suspended me because I approved the plan of another of this County's heroes to get the bastard, go ahead.\"\n\nAllgood said nothing, then Moynahan said \"You can play this game trying to lord it over me. But the truth of the matter is that you are a politician, an elected official. You were elected to be the face of the Public Safety Department, not the guts of it. The guts of the Police Department are not me either, but are those two people that have earned Medals of Valor and the Officers they lead. So call it insubordinate if you want, Sheriff... but you really should practice what you preach and do your job, let the Iron Crowbar do the job he does so brilliantly, and let me do mine.\"\n\n\"Get out of here.\" said Allgood. \"I'll make a decision on suspending you next week. For now, just get out.\"\n\n\"And if you're going to suspend me, Allgood,\" said Moynahan, pressing his luck, \"have the guts to come say it to my face.\" With that, he turned and left.\n\n* * * * * * * * * * * * * * * *\n\nFriday evening, October 21st. The back room of The Steakhouse had been reserved. When Laura and I arrived, owner John 'Jack' Colby steered us through the front door instead of the side entrance to the back room, and I found out why: as we went through the restaurant, the patrons of every table stood up and began applauding. They had heard of the capture of Joe Smedley's killer. I was very moved as I humbly acknowledged the accolade.\n\nThe gathering for dinner included me and Laura, the kids, Chief Griswold and his wife, Chief Moynahan, Della Harlow sans husband, Molly Ross Evans and the boys, Teresa Croyle and Todd Burke, Joanne Warner and her husband Seth, Theo Washington and his lovely wife, Teddy Parker and his smoking hot date Janice Holloway (how did that happen, I wondered), my mother Phyllis, Tanya Perlman and Jack Muscone, Sandra Speer and Martin Nash, Myron and Mary Milton, David Krueger and Lainie Everett (as a couple? hmmm...), Sergeant Micah Rudistan and Officer Lydia Green (as a couple? hmmm...), Fire Marshal Zoe Singer, and of course Cindy Ross.\n\nWe also had surprise guests: Jenna Stiles, who came with Cindy at my personal request, Loran T. Michaels and his wife, and Captain (Ret.) Leslie Charles, who came with his son, SWAT Sergeant Gregory Charles. \n\nThough invited, not attending were Sheriff and Mrs. Daniel Allgood. That had Laura's curiosity up, and my foreboding. But this was not the time to worry about it.\n\nAs we ate our steak dinners (some just had big salads, but I digress), the chatter was still solemn but becoming more lighthearted. Mr. Colby made sure the wine, beer, and stronger drinks were flowing freely, and things became more relaxed.\n\nI'd made sure Captain Charles sat by Teresa, and things went as well as I'd hoped. When he greeted her and shook her hand, she said \"Hello, sir.\"\n\n\"I'm not a 'sir' to you, anymore, Captain Croyle.\" he replied.\n\n\"That's not for over a week, sir.\" Teresa replied respectfully.\n\n\"Close enough.\" said Charles. \"My son Gregory tells me they're all excited that you're going to be leading them. They know how good you are, and they respect you.\"\n\n\"Thank you, sir.\" said Teresa. \"They're great Officers and a great team.\"\n\n\"Yes, they are.\" said Charles. \"Just remember one thing: they know you are a brave woman and a fearless leader, and they will try to be as brave themselves. Just make sure to remember that, don't let them get carried away. Take care of them.\"\n\n\"Yes sir, I will absolutely do that.\" Teresa replied.\n\n\"And if you ever have any questions, feel free to give me a call and ask.\" said Captain Charles. \"I may not have all the answers, but I've been around the block a few times.\"\n\n\"I appreciate that, sir.\" said Teresa. \"And I will avail myself of your experience. Even the Iron Crowbar asks Chief Griswold for advice, so I know asking questions is a smart thing to do.\"\n\n* * * * * * * * * * * * * * * *\n\n*DING!* *DING!* *DING!* *DING!* *DING!* *DING!* *DING!* *DING!*\n\nSpoon tapped glass, the culprit being Cindy Ross, as usual. The meal was over, time now for the solution. And my platinum blonde partner was impatient... as usual.\n\n\"Okay, it's time to hear the Iron Crowbar's solution of this case.\" she said. There was an acclaim, then applause broke out. I acknowledged it, then had everyone bring their chairs to the corner near the fireplace so we could talk in a closer circle.\n\n\"This would've been an interesting case, had we not had the skin in the game of avenging one of our former Officers.\" I said. \"There were links from the past to it, there were political connections to it, and it all served to make for a strange case that gave me every opportunity to go astray.\"\n\n\"The motorcycle was a big key.\" I began. \"It was reminiscent of Julie Newton in her capacity as Pastor Westboro's mole and operative. The license plate of the bike was blocked with film to blur the letters and numbers, and the motorcyclist came out of nowhere, commenced an attack, then left. In this case, the first attack was on the Campaign Headquarters of Ms. Stiles here, which is why I asked Jenna to be here. Next was the attack that ended in the death of Joe Smedley. And last was the attack on Commander Harlow, which we interdicted.\"\n\n\"Robert Brownlee had worked with some of the people who were associates of the late Pastor Westboro.\" I said. \"He had tried to ingratiate himself with them, though unsuccessfully, the same way he unsuccessfully tried to ingratiate himself into the TCPD. But he was universally loathed, and it does not take great feats of detection to understand why: he was incompetent, and he was a jerk.\"\n\n\"Hear hear.\" said Cindy. Everyone murmured \"Yeah, yeah, yeah.\" as if we were in Parliament or something.\n\n\"So,\" I said, \"when the Smedley attack came, my Detectives did a great job of breaking down the possibilities, and the motives for shooting at each of the possible victims. And I realized quickly that Della Harlow, who Smedley had covered, was the actual intended victim.\"\n\n\"Brownlee wanted to kill Harlow in order to get himself back into the Deputy Chief slot.\" I went on. \"I don't know why he thought this, but he believed that if she was out of the way, he could force himself back into the TCPD and into that slot. And he was so hell-bent on trying that he resorted to murder.\"\n\n\"And I was even more sure of that after I thought of the attack on the Stiles Headquarters.\" I said. \"At the time it seemed senseless or political... and in some ways both... but I remembered that Jenna had made remarks to KSTD that were broadcast on the air, remarks accurately saying that Brownlee hated women and was unfit for Police duty. (Author's note: 'The Usual Suspects', Ch. 01) So he went and smoke-bombed her Headquarters.\"\n\n\"Pardon me, sir.\" said Joanne Warner. \"What was his purpose for that? The way he did it was not really effective. He didn't try to shoot Ms. Stiles, and the smoke was relatively harmless.\"\n\n\"That is correct, Joanne.\" I said. \"I can only say that I think he thought in his own deranged mind that he was intimidating Jenna in some way, or getting revenge for her words about him. Maybe it was a dry run for the next attack. Only Brownlee knows, and he's taken the Fifth. But after I remembered Jenna talking about Brownlee to the Press, I began seeing a pattern.\"\n\n\"So then he attacked the Ladies Auxiliary event, and Joe Smedley went down saving Della's life in his final act of heroism.\" I said. The room was now totally silent. \"After I'd figured out it was most likely Brownlee, I realized that getting proof, proof that would stand up in Court, was going to be very hard to get. We searched his home a couple of hours ago; it was clean of anything connecting him to the crimes. No diaries, no photos with knives embedded... nothing. I doubt the motorcycle was ever kept there, nor the particular clothes he wore during the attacks.\"\n\n\"Soooooo,\" I went on, \"I had to find a way to lure him out, and catch him in the act. And for those who think it was hair-brained and dangerous... you're right. But I also knew we could mitigate the danger.\"\n\n\"First,\" I said, \"the motorcycle was a Harley. That's important because that means it's made in America, and not in England... and therefore the accelerator is on right handlebar, not the left. Brownlee is right-handed; of course I have access to Police records, and he always qualified with his gun with his right hand, never his left, and only a couple of us have qualified with both hands. Is that not right, Ms. Croyle.\"\n\n\"Yes sir.\" said Teresa, who then added with alacrity: \"But that will change beginning next month. I will be expecting every SWAT Team and Special Ops Officer to qualify with both hands.\"\n\nA chorus of \"ooooohhs\" went through the room. Captain Charles's face lit up; I could tell he was pleased with what this new Captain of Operations was going to bring to the table.\n\n\"Outstanding.\" I said, very impressed myself. \"So... Brownlee was right handed, could only accelerate the bike or shoot with the right hand and not at the same time. So I knew he'd have to slow down to shoot... like he did when shooting Smedley.\"\n\n\"The second thing I did was arrange it so that when Brownlee drove into the Ladies Auxiliary parking lot, his route pushed him to have the podium to his right. That would partially protect the Press; I didn't think he'd want to shoot across his body at them when his target was to his right. We also had plexiglass on the podium to protect the women.\"\n\n\"Third,\" I said, \"the way he came in gave me several lines of fire to shoot him without harming people in the background. When he shot Smedley, there were just too many people around to return fire; I worked to minimize that the second time around. So if he came in firing from near the street... which I did not expect... I knew I could shoot back with a better degree of safety.\"\n\n\"That's smart.\" said Chief Moynahan. \"But what if he had not fallen for it? It looked just too much like a set-up.\"\n\n\"That's where I was counting on Brownlee being Brownlee.\" I replied. \"He truly is an idiot.\" The room dissolved into laughter for a minute. After it died, I said \"Seriously, people see what they want to see, hear what they want to hear. I dangled the carrot right in front of that ass's... er, donkey's nose, and sure enough, he went for it.\"\n\n\"Glad he did.\" said Griswold.\n\n\"I guess what I'm not seeing,\" said Molly, \"is the connection between the attack on Jenna and the attack on Commander Harlow... or is there no real connection between them?\"\n",
        "\"None that I know of.\" I said. \"Except the same motorcycle used, of course. I did consider that Brownlee was a tool of politicians that want certain outcomes... and if that were the case then Loran Michaels might indeed have been a target, too. As to Jenna, it was in response to her insults of him... and perhaps due to her former fiancee and his deep hatred of Captain Ross.\"\n\n\"Good thing he couldn't accelerate and shoot at the same time.\" Molly said. \"Or he might've taken a shot at Cindy, too.\"\n\n\"And he would've hit me.\" I said. \"I was right in front of her, and would not have moved out of the way. I'd have shot him, too, no matter the danger of what was behind him.\n\n\"I'm glad you didn't have to take any bullets for anyone, Crowbar.\" said Griswold. \"Charles, you got something to say.\"\n\n\"Yes, Grizz, I do.\" said Captain Charles, who stood up as I sat down. \"First, I want to say that I'm already impressed with this new Captain of Operations, and I look forward to watching her make our Police Force even better than it is today.\" The room broke into applause, which served as a note of congratulations for Teresa.\n\n\"Second... and I hope I can get through this...\" said Charles, about to become emotional. \"I remember when Grizz retired, and I knew it was my time soon afterward. It was time for us old guys to move along, and let you young folk take over for us. It's very hard for us, seeing one of our fellow old-timers go down before his time, even if it was as bravely as he could find a way to do it.\"\n\nCharles continued: \"So I'm grateful to you, Commander Troy, for catching up to that bastard and taking his sorry ass down. You didn't just do that for Joe Smedley, Don... you did it for all of us that served with him, and I just want to say thank you for that.\"\n\nThe room broke out into an ovation, which turned into a standing ovation for me. I did the only thing I could... I stood up and gave Captain Charles a hug.\n\n\"I can assure you that it was a Team effort.\" I said. \"And our entire Team took Brownlee down. And I will relay your thanks in those terms to everyone, Captain.\" Charles nodded.\n\n\"Well,\" said Griswold, standing up, \"I not only echo those sentiments, I want to say more. First, as Captain Charles is saying, we were a close Police family back in our time. And we are seeing that you guys are a Police family today. We lost one of ours, and you guys came through for us. I hope it won't be until the next generation arrives, but if and when one of you go down, come together as a family to do the right things for each other.\"\n\nGriswold wasn't finished: \"And one more thing: when I retired and entrusted this Police Force to this very young man... this very young man...\" he said as he patted my shoulder hard, \"some people thought I was a little crazy.\"\n\n\"And they were right, sir.\" piped up Cindy Ross, generating a burst of laughter, especially from her sister Molly. I was laughing too hard myself to wave any crowbars in her general direction.\n\nGriswold also chuckled, then said \"Well, maybe. But I've been vindicated.\" He paused, gathered himself, and continued: \"I've seen how proud Captain Charles here is of his son... and I want all of you to know is that is how I feel about Don here... as proud as any father could be of a son. And I'm grateful to you, also, Don, for taking down that bastard.\" \n\nThere was a chorus of \"Awwww\"s and applause. I was working hard not to shed tears... and I lost the battle. I stood up and hugged Chief Griswold, knowing that the familial feelings he'd just shared... were reciprocated.\n\nPart 11 - State Funeral \n\nObviously, we did not get to go to Lake Watchacoochie this weekend. On Saturday, October 22d, the final farewell to a hero took place. The weather was beautiful: bright sunshine, just a bit on the cool side, barely any wind.\n\nEarlier that morning, I made a formal inspection of the Police Officer and Firefighters that would be in the procession. Both the Fire Department and Police Force would be sending a contingent to march. I had intended to only inspect the Police Force, but Chief Quinlin sent the TCFD people to be subjected to my baleful eye. \n\nHaving been a military officer, I knew the drill... (my) left to right, top to bottom. Fortunately, badges were shined, gig lines were straight, and everyone looked damn good. I had to make few corrections.\n\nThen we went to City Hall for the funeral march. The Police and Fire Departments had a joint Honor Guard that served as pallbearers. They brought the casket down from the City Hall atrium and strapped it to the carriage that would be drawn by two white horses, courtesy of Mr. John Colby.\n\nJoe Smedley had graduated from Town High School, and the Town High School band preceded the horse-drawn carriage, playing the Funeral Dirge. Next came the University's Army ROTC Ranger Company, that had attended the casket while Smedley lay in state. I'd asked their leader why they'd volunteered, and he'd said \"We Rangers are expected to do the hard jobs as well as the easy ones.\" I asked him to thank his Ranger Company for their help.\n\nAfter the casket came a row of four people, the four persons who were wearing Medals of Valor. Chief Emeritus Antonio Griswold was on the right, in the place of honor. To his left was me, Your Iron Crowbar. To my left was Captain Cindy Ross, and to her left was Fire Lieutenant Roy Easley.\n\nAfter a space, there was a second row of four people. Fire Chief Emeritus Gillem, Police Captain Charles, Precinct Captain Briscoe, and Fire Marshal Zoe Singer, who as an EMT had treated an injured Fireman Smedley a number of times.\n\nThen came Sheriff Daniel Allgood, Fire Chief Quinlin, Command Della Harlow, and Precinct Captain Damien Thompson, followed by the Mayor and some of the younger Council Members.\n\nLieutenant. Teresa Croyle led the contingent of Police Officers, and Superintendent Davies, soon to be Assistant Fire Chief, led the Fire Department group.\n\nCitizens had lined College Avenue, which formed the southern border of Courthouse Square, and watched as the procession went by. At the end, people began going over the barricades and filling in behind the procession, following us down the road towards the Catholic Church... all quiet, all respectful, but following along.\n\nOnce inside the Church, Chaplain Romano led a Mass, which fascinated me as I'd never been to one before. And then it came time to say our eulogies. Chief Griswold told a couple of stories of Smedley's heroic actions, mixed in with some humorous times that made us laugh. Then came my time.\n\n\"Joe Smedley was a student of World War II.\" I said after some opening comments. \"He wrote and submitted some papers to historical magazines, and a number of them were published, including in the University History Department's periodical. In one of these articles, he wrote about the courage of those that braved mortal danger to achieve their missions. Many went forward because it was the only direction they could go, but for the bravest, they always had a choice to go forward, or stay back and hold the line.\"\n\nI went on: \"Mr. Smedley wrote that those that went forward of their own volition, did so because they had someone behind them, someone they were defending, someone on whose behalf they were attacking. That 'someone' could be family, a nation, or one's brothers-in-arms in the fight. But because of the actions of the heroes, the others could continue on, as well.\"\n\nI said \"And there was no greater practitioner of his own words than Joe Smedley. He went forward when it was the only direction he could go... but he went first, and in front, so that his brothers in Police Blue would not have to. He went forward into fires and saved lives, so that his Fire Department brothers could fight on, and those citizens that were saved could continue their life missions. Some of our own will continue because of Joe Smedley's final sacrifice. We will never know the full effects of Joe Smedley's heroic actions over the years, but I have to believe that the greater good came of them and will continue to come of them. Let that be his lesson to us all, and his epitaph.\"\n\n* * * * * * * * * * * * * * * *\n\nJoe Smedley was buried in a place of honor on Cemetery Hill, just a few spaces over from where Corporal Peter M. Feeley lay in eternal rest. The American Flag was folded by the Honor Guard then handed to me, and per Smedley's last wishes were given to the Mayor. Smedley wanted the Town to fly his death Flag, but it would be placed in a triangular box and put in a case in City Hall that also displayed his medals and told his story.\n\nAnd then came the pi\u00e8ce de r\u00e9sistance, so to speak. The police bugler came forward and sounded 'Taps'. As the eerie sound died away, a trumpeter from the Town High School Band shocked everyone by blasting out 'Reveille'. Sir Winston Churchill had had this done at his funeral; Joe Smedley had wanted the same.\n\nAs the thrill of the trumpet call went through us, there was one more thing in store. The Town High Band had waited at the road at the entrance to the cemetery. Now they were joined by the Booker T. Washington High School Band, and after playing another dirge together, they followed up by playing 'When the Saints Come Marching In\", in grand New Orleans funeral celebration in style. The people that had gotten in line and followed the procession began dancing and celebrating to it.\n\n\"That's cool!\" Teresa Croyle said within my hearing. Then she yelled \"Fall out! Join the celebration!\" How could we resist. Almost everyone, even Chief Griswold, went down and participated in the celebration of the life of Joe Smedley. He would've wanted it that way...\n\nPart 12 - Epilogue \n\nSunday, October 23d. The sun had set and I was sitting in the metal loveseat chair on the deck of the Cabin, looking over the twinkling lights of the Town and sipping some single malt Scotch. Laura, Molly, my mom, all the kids, and Cindy were in the greatroom, chatting like parakeets. As the light of a railroad engine came out of the western horizon, Teresa Croyle came up to me.\n\n\"Mind if I sit with you, Commander?\" she asked.\n\n\"Sure, have a seat.\" I said. She sat down in the metal chair to the left of mine.\n\n\"Awesome view.\" she said.\n\n\"Yes, it is.\" I said. \"Want something to drink?\"\n\n\"No sir, thank you.\" she said.\n\n\"You don't have to call me 'sir' while we're here, and alone.\" I said. \"We leave the badges and the ranks at the door when we come into this house.\"\n\nTeresa gave what was for her a laugh. As we sat silently, we were suddenly joined by two good dogs. Bowser came up and sat on the loveseat by me. Buddy jumped into Teresa's lap. Needless to say, both dogs got some good skritchins.\n\n\"Commander,\" Teresa said as she petted Buddy, \"I talked to Jeanine again. She confirmed it was Doug and Roberta Jackson. They've gone back to the Apple Grove area and she hasn't seen them again.\"\n\n\"Good. Thanks.\" I said.\n\n\"She said she was going to ask Michael Burke about it.\" Teresa said. \"I suggested she not say anything right now, but I don't know what she'll do.\"\n\n\"I hope she'll take your advice.\" I said.\n\n\"So do I.\" said a voice, which belonged to my nephew Todd. He came up with a folding chair, and sat between me and Teresa. \"What, no dog for me?\"\n\n\"Todd, if I get a third dog,\" I said, \"I might end up getting a second divorce.\" Todd laughed. \n\n\"No, Uncle Don.\" he reassured me. \"Aunt Laura would lose that battle to Carole.\"\n\n\"You might be right.\" I said. \"But two is plenty. You'll just have to pet your imaginary friend dog.\" Teresa laughed more heartily at that one.\n\n\"Anyway,\" Todd said, \"Teresa is right. I'm worried about Jeanine and the kids.\"\n\n\"Any way you can get little Todd into your custody?\" I asked.\n\n\"Not really.\" said Todd. \"And little Jack, no way. Even if we got little Todd for an extended visit, my dad is almost rabid about keeping little Jack.\"\n\n\"Well, keep an eye on it all.\" I said.\n\n\"Uncle Don...\" said Todd. After a pause he said \"I'm sorta obligated to tell Misaki-sama.\"\n\n\"What, you haven't told him already?\" I asked, somewhat shocked.\n\n\"Er, well, yeah... I have.\" Todd replied.\n\n\"Good.\" I said, relieved. \"That one is bigger than my County, here. I just hope it won't get bigger... and uglier...\"\n\n* * * * * * * * * * * * * * * *\n\n\"So, Teresa, are you excited about your new job?\" Molly asked Teresa after she and Todd came back inside with Bowser and Buddy, and Cindy had gone out on the back deck to talk with the Iron Crowbar.\n\n\"I think I am.\" Teresa said. \"At first I was thinking 'No way would I leave Vice.'. But then I realized that I was too comfortable there, not really challenged anymore. This new position is going to be a lot of fun.\"\n\n\"It's amazing how Don knows just where to put everyone to be at their best.\" Molly said. \"When I first heard about your promotion, I was thinking 'That makes so much sense, why didn't we think about it before?'.\"\n\n\"It's funny how we end up in places we never thought we would be.\" said Todd.\n\n\"Oh, Todd,\" said Teresa, \"I always thought you'd be a big-time Tech CEO after buying out the company from a father you never knew you had.\" Molly burst out laughing at Teresa's unexpected sense of humor. Todd was chuckling, and Molly and Laura both noticed him take her hand in his.\n\n\"Speaking of all that,\" said Molly, \"I was telling Laura how I always thought I'd be in the Royal Canadian Mounted Police. And I did train to become a Police Officer, and eventually ended up becoming one... in the United States. As to Cindy...\"\n\n\"What did she think she'd be?\" Teresa asked. \"Besides 'Miss Physical America'?\"\n\n\"Believe it or not,\" Molly said, \"while in Canada, Cindy always embraced being an American Citizen, just to be different and a rebel, I guess. And she was always talking about being an FBI Agent.\"\n\n\"Really?\" asked Laura. \"That explains why she likes working with them so much, and she's a Consultant with them now.\"\n\n\"True.\" said Molly. \"But for some of her teen years, she was really into the FBI stuff. She'd watch those old TV shows about the FBI, with Efrem Zimbalist, Jr., and read every book and magazine article on them she could get her hands on. She did become a law enforcement officer, but at a different level...\"\n\n* * * * * * * * * * * * * * * *\n\nAfter Todd and Teresa went in, taking Bowser and Buddy, it was Cindy's turn to come out and talk with me. She sat on the loveseat next to me, and covered us both in a blanket against the chill of the night air.\n\n\"It was a sad occasion,\" Cindy said, \"but you arranged a very nice funeral for Mr. Smedley.\"\n\n\"Thanks.\" I said.\n\n\"And in your eulogy, I don't suppose you saw in Mr. Smedley's writings some references to your own heroism, and yourself?\" Cindy asked.\n\n\"I saw more of you in those words.\" I said.\n\n\"Modesty is a human trait, mon cousin,\" Cindy said. \"I will excuse it.\"\n\nI chuckled. \"You've been fishing with the Chief too long.\" I said.\n\n\"The Chief has been fishing alone too long.\" Cindy said. \"He doesn't have much family. I know he has a son, but I don't know what happened to him. But you are his surrogate son.\"\n\n\"Just between us.\" I said quietly. \"I'm not sure what all happened, but his son ended up in The Asylum for a while. Then he got sent to a private mental facility somewhere in the State east of us. I do know it involves Rita, who runs 'Lashes & Lace'.\"\n\n\"You found that out when you hacked the records of The Asylum?\" Cindy asked. \"And how do you know of the Rita connection?\"\n\n\"I would never hack anything like that, at least not without a warrant.\" I said adroitly. \"As to Rita, you've seen the Chief's reaction whenever her name is brought up. Now I don't think she's really guilty of anything bad, but something happened that caused our Chief to very much dislike Rita. The deduction is pretty straightforward, but I just stay clear of all that.\"\n\n\"It's too bad, about his son.\" said Cindy. \"Before you came to the Police Force here, I'd heard stories that he had a son, and something happened to him as a kid. I never met nor saw the kid, and there is not a single picture of him anywhere in the Griswold household. I figure he'd died, and it was too painful to mention to the Chief.\"\n\n\"There's a room in the back of their house.\" I said. \"It's locked off. I think it was his bedroom. At first, I thought the son had died, but he's still alive.\"\n\n\"Why did you go into that room?\"\n\n\"I just opened the door and saw inside it, then I closed it.\" I said. \"I could feel that that was a sanctum to be left alone. As to why I opened the door, I was doing a security check on the house after Pelletier's group murdered Gunny Guernica by mistake.\"\n\n\"Anyway,\" Cindy said, \"the reason I came out here was to ask you if you'd found out anything about the break-ins at the Westboro and Cook homes.\"\n\n\"No, not yet.\" I said. \"To tell the truth, we've had too many distractions for me to really look into that. I do think it will either go away, or will come to a head sooner rather than later.\"\n\n\"Like you're always saying,\" Cindy said, \"the party never stops in our Town and County.\"\n\n\"True.\" I said. \"All too true...\"\n\nFinis"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "police drama",
        "crime drama",
        "mystery"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/end-of-the-line-ch-03"
}