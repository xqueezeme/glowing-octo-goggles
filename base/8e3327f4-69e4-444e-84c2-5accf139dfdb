{
    "title": "Emma is Used in the House of her Mistress",
    "pages": [
        "This is a follow on to \u2018emma finds her Mistress again'. It is not necessary to read the other story first.\n\nChapter 1\n\nWe waved our respective husbands goodbye on their business trip together and my heart was pounding. Standing, I could smell the warmth of her perfume, I watched the movement of her body and the caress of her hair surreptitiously. I wanted to touch her, be touched by her. I was horny. I was reluctantly becoming used to having to do whatever Susan asked of me again. It scared me, but it also excited me a little more every time Susan asked me to do something. \n\nWe had never spent a night together before this. Now we had the prospect of nights and days. Susan had known about the trip before me and she had invited me, via our husbands, to stay with her at her home while they were away. Andrew and John thought it was a wonderful idea. I was terrified but I also knew I was deeply excited by the idea. What would she expect of me? I had sat at home trembling as time passed, by the thought of what Susan might ask me to do. It could be something really nice, but at the same time I was utterly terrified by the prospect of her dominance. It left me so vulnerable in my desire for her. \n\nThe men went through into the passenger's section at the air terminal and disappeared. Susan turned and looked into my eyes. I felt my girlish blushes as she kissed my lips so tenderly in that public place. It still surprised me that after only a slight hesitation I returned her kiss. My vagina pulsed and I nearly swooned there and then. Her lips seemed to be playing with mine for the short time the kiss lasted. My eyes were still closed as she pulled away from the passionate but brief kiss. She smiled at me as I leaned forward trying to maintain the kiss. \n\nFeeling foolish I felt a fresh rush of embarrassment and blood to my face as I knew my response to her and the knowledge of the public place kicked in. My mouth opened and closed after the separation. Two women kissing in public. They could have been long lost friends meeting again after a long parting, but not like this kiss, this was a lovers kiss. If I had seen two other women kissing as we kissed I knew that I would have presumed something other than friendship, if others had seen me they would have been correct.\n\nThe airport bar was dark and half full. We sat on leather seats in a corner with our glasses of wine. Susan unashamedly inspected me, and I felt it. It made me blush, I couldn't stop the blushing. Sitting, the leather chair was cool, and it stuck to my legs. Normally I hardly ever wore a dress I realised. She had made me dress me in nothing but a simple tank dress, buttoning all the way down the front, made of a purple silk, which seemed to whisper as I moved. She had told me skirts or dresses unless told otherwise. She liked my legs, I wasn't that impressed, but she told me that she did, so I did as I was bid. I had forgotten how uncomfortable it was to keep pulling it down and be sitting carefully. I was distracted and self-conscious by the sight of my thighs. I was also fidgeting as my knickers were becoming uncomfortably damp.\n\nMy initial fears had been quite simply over-ruled by Susan once she had dominated me the time we met again. Meeting my ex-teacher again. A teacher who I had submitted to lovingly, sexually, submissively. I wanted her as much, if not more, than when I was her pupil. I felt her pupil still. I had willingly given myself to her as a frustrated school student. \n\nOver the following years I had constantly remembered and fantasised about our feverishly heated sex, my desperate submission, her easy dominance of me, even when doing the most trivial things. It embarrassed me now what she had me do for her at times. It excited me too, I reluctantly admitted to myself. I had wanted to please her. I remembered how easily I had accepted she wanted and expected me naked in private, wanted her fingers on me and even in me in public places. I had wanted to show her that I would do anything for her even if she had me act like a slut. Over the years I had ached for those times, my body throbbing and lubricating freely because of her and what I had done for her. I was petrified that she would just see me as I was then, an easily led kid with a crush. Ten years older now, married now. \n\nShe must know I couldn't possibly do all that now, but I felt things were falling apart since I met her again, since she had taken me again. I could not get Susan out of my mind. \n\nI hadn't been able to sleep properly for nights after giving myself to Susan again. I had expected her to get in touch immediately but she hadn't and it left me in frantic turmoil. Eventually, as I was doing some ironing, she had phoned.\n\n\"Hello my pet.\"\n\n\"Hello Susan.\" Suddenly breathless.\n\n\"Excuse me? Is someone there?\" Sharp. \"If there isn't, what do you call me?\"\n\n\"No. Oh sorry, I am alone. Sorry. Hello Mistress. I am sorry, I didn't know if I should or not.\" Feeling like a silly little girl.\n\n\"Of course you should unless there is a very good reason. Don't ever forget. I am sure you'll be a good girl from now on wont you? After all you told me you wanted me to own your slutty little self again, didn't you?\"\n\n\"Yes Mistress.\" My face had been hot with embarrassment as I had stood holding the phone. My bra tight and my pussy twitching.\n\n\"What are you doing? Are you alone, I gather you are?\"\n\n\"Yes Mistress, I am alone in the house, Andrew's at work. I was doing the ironing.\"\n\n\"Well turn it off now.\" I had done as I was told and waited. \"I want you naked now my little slut, do you hear? You like being naked for me don't you slut? You did when you came over with your husband and he left you with me, didn't you? Describe what you are doing as you undress.\"\n\n\"Here Mistress?\"\n\n\"Oh yes. Don't argue my sweet sub, just strip that body of yours.\"\n\n\"Yes. Yes Mistress.\" Oh God. I had pictured myself undressing for her that last time. Was I really going to do this? I stood shaking, breathing heavily. \"Yes.\" Giving in to her. Giving in to myself. She knew me too well. My body had shivered at the thought of obeying her.\n\nI took my clothes off. Described my movements and the articles of clothing. It hadn't been easy with one hand holding the phone. She made me take everything off even though it was really embarrassing doing it. Though no one could see in the windows it had still felt so wicked and frightening being naked at a time like this and especially being commanded to do so. She had correctly guessed that my face was burning and my nipples were hard. Eventually I admitted I was kicking off my jeans and knickers. My clothes were strewn across the carpet. My nipples had hardened with the cold and that something else. My body throbbed as I stood naked, holding the phone, my other arm around my waist. I had wanted to touch myself but was scared to just yet. I had become so quickly aroused it had scared me.\n\n\"Did you play with yourself after leaving me at the weekend subby?\" As if reading my mind.\n\n\"Yes, yes Mistress. It excited me.\"\n\n\"I'll let this go for now slut but in future I will determine, your playing, your orgasms. Is that clear?\"\n\n\"Yes Mistress. Thank you. I didn't know. I'm sorry.\"\n\n\"Its alright little one. I know that you didn't know. Do you think it is correct, that I should have that control, my sweet slut? Is that what you would like too?\" Her voice had done strange things to my stomach.\n\n\"Yes Mistress.\"\n\n\"Tell me that is what you want then, ask for it nicely.\" I had closed my eyes and stood there naked. Inside, my vagina had pulsed, my breathing had been laboured and I had been reduced to her horny little girl again by what she made me do. So horny and so humiliating it being within her control.\n\n\"Please Mistress, please tell me when I can play with myself or orgasm. I would like that Mistress. It will make them special and make me realise what I am.\"\n\n\"And what is that dear?\"\n\n\"Yours\u2026 your slut Mistress. Your\u2026 sub, your horny\u2026 your horny little subslut that you can do with as you will. Oh God.\"\n\n\"And does that knowledge both shame and excite you my love?\"\n\n\"Oh yes. Oh yes, Mistress.\" A whimper.\n\nI was told to play with my breasts. Both softly and roughly, squeeze my nipples until they hurt, pull them and all the time describe to her how it had felt, describe the redness of the marks I had left and what I had been doing for her. For her. For her. My nipples ached and I had been so aware of my vagina throbbing inside me and pulses of liquids lubricating me.\n\n\"Are you hot for me my little girl?\"\n\n\"Oh God yes Mistress.\" I had so clearly heard the need in my voice. It humiliated, it excited. \"Very hot for you.\"\n\n\"Do you want to finger your hot slit for me Emma slut?\"\n\n\"Oh yes please Mistress\"\n\n\"What is it, that word for your pussy that you find so embarrassing my sweet?\"\n\n\"My cunt, Mistress.\" I had croaked the words out. I had felt sweat under my arms. \n\n\"Well finger your hot cunt nicely as though it was me doing it to you. But don't you dare cum yet.\"\n\n\"Oh no, I won't Mistress.\" Then I had groaned as my fingers had slid over my clit and between my lips. I hadn't realised how wet I had become. I slid inside myself and circled my clit over and over described what I had been doing. Admitted I was fingering myself because I had been told to, that I was doing it for her. I had never became this horny doing it alone. My legs had splayed lewdly to give myself even easier and lewder access. She had made me hold the phone next to my pussy so that she could hear the squidshy sounds of my lubrication and my fingers. I died of shame, I nearly came, only suddenly remembering that I hadn't supposed to. \n\n\"Oh, oh Mistress. I nearly came.\" Panting.\n\n\"Do you want to cum my little bitch?\"\n\n\"Oh yes please. Please.\"\n\n\"Put your fingers in your mouth and listen then.\" I did, sucking hungrily at my juices. So aware of the taste of my juices. \"I want you to stay naked for me until I tell you to dress. I will call and allow you to cum if you have been good for me, but you have to wait. Do you understand?\"\n\n\"Yes Mistress. But please\u2026.\" The phone had gone dead.\n\n\"You're wet aren't you Emma?\" Reality now, in the bar.\n\n\"Yes.\" It just popped out. Furious with myself at my admission. Did she know what I had been thinking? Could she smell me? Her hand slid over my cheek and I leant my face against her as a tear filled each eye. Her finger moved to my mouth and played along my lips causing me to open unaware of my action. A finger slid within and I suckled on it. It felt so humiliating and submissive sucking on that long finger deep within my mouth. Sucking her finger. Mouth opened. Her inside me. So sexual. Obviously submissive. Not sure why I was so turned on. Crossed my legs, a ripple of pleasure shoot through my body. Not remembering ever being this turned on as an adult by the anticipation, of the promise. I felt like a schoolgirl on a date. My vagina pulsed wetly. The finger left me. My mouth attempted to follow it. Feeling slightly foolish, not in control. Was I ever with her? She kissed me again. After the parting of our lips. My chest tight. Breath coming in gasps. She was still so near to me. Peppermints on her breath, eyes like cuffs, holding me.\n\n\"Remember our days in the past. I will have you naked for me soon.\" I could feel the breath in my throat as my chest tensed with excitement. \"You'll like that wont you?\"\n\nI didn't want to answer. I wanted to say no, that I just wanted her loving, just wanted to be loved by her. Instead my mouth whispered, \"Yes.\" Thinking of displaying my nakedness for her, displaying my submissiveness. \n\n\"Emma, you really are an exhibitionist slut aren't you?\" She laughed the words though I blushed yet again and hung my head in shame. \"Look at me. Tell me you liked being naked for me.\" \n\nLooking at her, the feeling of helplessness like tendrils around my body. My eyes watery, my throat tight. . She continued to look at me. Making me speak. My voice quivering, \"Yes\u2026 Yes I do.\"\n\n\"Why did you like being naked Emma?\"\n\n\"I knew it pleased you even though it was wicked. It\u2026 made me feel\u2026 exposed and vulnerable, knowing\u2026 you\u2026 had control. It made me feel easy\u2026. like a slut.\" \n\n\"You are. Such an easy slut too. You are always so wet when you are naked for me. Just think of displaying those tits and cunt of yours to me again. It makes you wet doesn't it? Makes you feel like a slut doesn't it? Makes you know you are my slut again doesn't it?\"\n\nLooking away, looking down, feeling her eyes on me. Eventually I whispered \"Yes.\" I wanted to hide. Wanted to be held. I knew that when I stood naked for her she would find me wet again and know me. Know my real self. I realised suddenly that I had thought \u2018when' rather than \u2018if'. I knew any control I had was slipping.\n\n\"You should call me Mistress shouldn't you?\" It felt like I had some control by not using her title. A vague notion of keeping a little bit of control. \"I will forgive you this time, but remember in future. Or I will punish you again.\" I remembered the way she had smacked my naked breast on our first meeting as adults. I remembered the hurt and the arousal. I shivered. \n\n\"Yes Mistress\" I whispered.\n\n\"Have you been good for me little slut?\"\n\n\"Yes Mistress.\"\n\nShe phoned me every few days. If I was alone and at home she always made me strip so I was naked as I spoke to her. She wanted me to know my nakedness and feel submissive. On my mobile she made me find somewhere where I could touch myself. Oh it had been so easy to do as she had said. I had touched and played with my body. I was easy. I had cum if she allowed me to, been frustrated when it was refused. It was easy to slip into accepting her authority over whether I could give myself release. It kicked in even more arousal. It made me feel she owned my body, whose hands I was in. \n\nFor the last three days I had not been allowed to cum even though I had had to masturbate for her to hear every day. For her to hear my gasps and pleas. For her to hear the lewd wetness of my fingers in the river between my legs as I placed the receiver down there, for her to hear my moans of frustration. I had been obedient yet afterwards laughed at myself at the silliness of my obedience. I had become more and more in need of her. \n\n\"Did you do the two things I ordered you to do?\" My face suddenly flared. Her voice did not hint at the enormity of her request. At first it hadn't seemed much to me, but it had changed me, changed how I saw my relationships. On the surface it had been something that was normal and to be expected, but it turned out to be something very different indeed. She had told me to sleep with my husband. No, rather I was to be fucked by my husband. I had been surprised, but the act didn't sink in then. My lesbian lover, my Mistress, was commanding me to sleep with my husband. It seemed bizarre.\n\n\"Yes. Yes Mistress. I mailed you.\" \n\n\"I know. I read it. Tell me.\"\n\nEven as I had listened to her giving me the instructions I had not fully realised everything it had meant. In the middle of the night. No clothing. Make him hard if need be with my hands. No lights. On my knees from behind. Make him cum. Pretend my own climax. Not to cum under any circumstances. It hadn't seemed much. Just an ordeal to go through for her. I \u2018d do anything for her. I was obsessed by her, her control of me. Though I couldn't in the life of me think why she would demand this of me.\n\nI realised fully when I did it. I knew what I was. I was a whore. I was Susan's whore. It could have been anyone. In the dark. Hot and ready and wet due to all the prior thought. My fingers finding his cock. Hard in his sleep. Felt his hard cock. Waking him. Not speaking. Kneeling for it. Kneeling to be fucked. Having to explain how I wanted him to take me. The heat searing my face in the dark. I had knelt like the bitch I was, pushing up my sex . A cock at my engorged lips, at my well lubricated opening. A cock sinking deep into my body easily. Feeling it more than usual. Wetter than usual. Full. A fucking. Just a fucking. Because I was told to. Ordered to. To fuck, on command. \n\nI was a whore who knew her place and did as I was told. I had broken faith more by fucking Andrew than by fucking someone else. I had become a whore, not just an unfaithful wife, but a whore for my lover. Half asleep he rutted me. He took me fulfilling his own needs not fully realising the little things. In and out of me his cock had pushed and I had accepted it into my body. For her. After, I lay, my body still sensitive with use, his liquids dribbling from me, unable to sleep as I stewed in humiliation and unfulfilled lust. I knew when I woke the next day. I knew now. I knew when I had followed her instructions further and described exactly, in detail, what happened and why, then e-mailed it to her. I also knew it made me so wet. Susan had broken almost all my resistance.\n\nEventually I looked up at her. At her face, serene, perhaps looking a little amused or quizzically at me. \"Yes Mistress, I whored myself for you.\"\n\n\"Did you cum?\"\n\n\"No Mistress.\"\n\n\"Did you want to cum?\"\n\n\"Yes Mistress.\"\n\n\"Because of him?\"\n\n\"No.\" No it wasn't the physical part, nor was it Andrew. Though I had liked being filled, used. It was something quite different. Doing sexually as I was told to do. Being a sexual plaything for her. Pleasing her. \"Because of you.\" I felt her hand caress my cheek and my eyes closed. She knew. I hoped my dress hadn't a wet patch on it. She kissed me again and I tasted her lipstick.\n\n\"And you've done the little task for me?\"\n\nShe had wanted me to do something that showed I was hers. Just a little thing she said. Have my nipples pierced, have a tattoo saying I was owned, or go and have my pubic hair removed. God! Just a little thing. I couldn't do the others so I gave in to being waxed. My pubes. It was shocking. I remember not quite believing her as she told me, as I listened to the words. All of my hair there. I think really she knew I couldn't do the others, that she just wanted me to accept that I would do it. \n\nI had done as I was told yesterday. It was so embarrassing. Surprisingly the woman didn't bat an eyelid, simply carried on gossiping about nothing, telling me how popular it had become that summer. But for me, I knew why I was there. I knew who had made me. I knew that I was doing her bidding. As she removed it I was wet. The pain and discomfort were nothing to the humiliation I felt. I don't know if she knew about my arousal but it was something I cannot imagine her missing even though she managed to do it by sliding the thong from one side to the other. Even though I hadn't been undressed fully. Oh god I was so ashamed of my wetness and the plumpness of my labia. I couldn't wait though to get home and touch my smooth skin. I drove straight home. Undressed quickly. I needed to touch it, myself, frig myself. That bulging flesh was pink and blotchy but I knew it would go as would the slight stinging. It felt wonderful. But the smoothness was wonderful. I looked at myself in the mirror. Looking like a cross between an innocent child and an easy slut. I had decided I would tell Andrew that the doctor had recommended it for thrush.\n\n\"Yes.\" I hung my head but she lifted my chin with a finger and raised her eyebrows. \"Yes. My pussy is bald for you.\"\n\n\"Is it nice?\"\n\n\"Yes . It feels so smooth.\" I couldn't forget my baldness down there. I always seemed aware of it.\n\n\"Good. I will see for myself soon, wont I? But you forgot the Mistress.\" She took out a small box. \"For your jewellery. Everything.\" I wore little jewellery. My wedding and engagement rings and earrings. That was all. I passed them over and she put the box away in her handbag. It seemed so easy to pass my rings over somehow. \n\nWe finished our drinks and with Susan's perfume still in my nostrils we walked to the car park, my hand in hers as I had been instructed. Like a child, like a submissive, like a slut. Hers. It was hot in the morning sun as we approached the multi-storey car park car, cooler and darker within the open skeleton of the building. I opened the passenger door but was stilled before entering. I had my arms on the top of the door and roof. She moved around standing behind me. My pulse racing in anticipation. I hurriedly looked around. A family were getting into their car on the far side, a man pulling a case near the lift, no one near. ",
        "\"Remove your bra.\" \n\n\"No! Please don't.\" I felt a ripple of pleasure throbbing in my loins as I thought about what she was making me do, but I was also scared. \"Please don't Mistress. Not here. People may see.\" \n\n\"Take that bra off. Now. There's no one that can see you.\" \n\n\"I can't\u2026 Please\u2026\" I pleaded. \n\n\"OK. If that's really what you want. I will not cause a scene or force you.\" She waited. The silence killing me. My face again flushed, my skin felt so warm and heated as I felt myself becoming so very aroused. When Susan was near she made my body alive and tingling. She knew the buttons to press. Fear and panic rushed through me. I knew the throbbing need between my thighs, and Susan could make sex more intense than I could ever have imagined. I hated to admit it but I was beginning to need the humiliation Susan brought. My hands moved to my back to unfasten it, I pulled the elastic straps down my arms, removed it through my armholes, keeping my eye on the family. I felt so embarrassed. I shouldn't be doing this. Not here anyway. I threw it into the car as instructed. My breasts moved.\n\nSuddenly I flinched and took a deep breath as I felt her hands on my thighs. \n\n\"Lift your skirts.\" \n\n\"Oh God no! Please Susan. Please Mistress. Not here.\" My voice pleading. It was so humiliating, so disturbing, and so reminiscent of when I was a mere girl with her. \u2018I am older now' I wanted to shout. \u2018I am a big girl!' My adult female mind tried to resist, but the hunger of my body, the submissive latency, beginning to give away more and more control of my mind, made me respond, and pull up my skirt, and show her my knickers. The material slid easily over my bare thighs. I knew I was giving up control over my own life. I couldn't let her do this. I couldn't. My hands now held the back of my purple dress above my hips, my buttocks open to her gaze. I felt her hands at my knickers; felt them eased down as I stood wildly looking about me. \n\n\"Oh God, please. Noooo.\" The last word more a low moan than a real word.\n\n\"Wider. Emma your thighs are together! Let the gusset out from them.\" \n\nI stopped myself from clamping together, felt wet material leave my lips, felt the cool air over them, over my newly plucked mound. She slid them down to my knees. I was fully aware of the feeling of ludicrousness standing with my knickers around my knees. My now free nipples tightened further at the thought. I couldn't stop her. Her body moved against me. I could feel her trousers against the flesh of my naked bottom cheeks, her breasts pushing against my back. I was lost. A hand cupped a breast through my dress. We were effectively outside! She squeezed a nipple slightly, her other hand, cooler than my exposed flesh, cupped my smooth mound as I stood slightly hidden by the car. I heard myself groan softly as she kissed the back of my neck and as her finger lay along my slit. I parted my thighs longingly, whimpering softly, angry at myself.\n\n\"Oh yes that is nice! That is so very nice and smooth.\" Her hand caressed me. My whimpers continued. \"I love to hear those little noises. My God you are a wet horny slut aren't you? What a dripping horny bitch we have here.\" \n\nI didn't reply, closing my eyes, not caring about others just at that moment, the humiliation adding further to the heat. I felt the juices trickle as I was parted and opened. Although I tried franticly to keep still and not respond I felt my hips begin to thrust rhythmically. Slut. Slut. Slut. Almost immediately her hand was removed! I groaned as I heard a little a small laugh behind me. \n\n\"You may lower your skirt over your thighs once seated, but leave those pretty knickers at your knees and your cheeks naked on the seat. You don't want to stain that beautiful dress.\" \n\nI wanted more just then. The feelings of frustration, of wanting her to touch and yet the feelings of abject humiliation at doing these things, wanting them, of giving and exposing myself wherever she wished left me totally confused. I felt as though I was trying to catch up on what was happening, never quite managing it.\n\nShe moved around to the other side of the car as I tried to regain some composure before doing as she instructed. In the car I felt naked, even though covered, the material was so light and nothing constrained me underneath. I smelt my whore smell. My hardened nipples pushed out in the material so obviously displaying my feelings. I felt silly too with the damp black lace around my knees on blatant display to Mistress and me at least. I dare not look out at any passing trucks. I felt ridiculous. They were there to show me that I was a silly little girl still I knew. Feeling so wicked. I remembered as a girl she had often made me go without knickers when together and often fondled me surreptitiously even at her school. My face burnt realising that I hadn't even considered that I would attempt to stop her. I was worried that Susan would make me do something too extreme. How would I explain this to my husband, and friends if caught? I knew Susan was slowly increasing her control, but how could I stop before I was actually naked? I felt my pussy pulse again. I would have to make her stop before it is too late. But was it too late already, was I beginning to want it? I was ashamed. \n\nShe watched as I slipped the hem of my dress above my hips behind. I felt the cool yet animal like touch of the leather seat against my flesh. \n\n\"That's a good little slut. You can be so good.\" My stomach quivered as she praised me. But you were a naughty girl out there in the car park. You didn't do as you were told immediately and you didn't call me Mistress. A naughty girl.\"\n\n\"Yes Mistress. Sorry Mistress.\" I felt a wave of panic as I wondered if she really thought that I hadn't pleased her and I turned to look at her stricken. My eyes wide my mouth open.\n\n\"And what should we do with naughty little girls, Emma?\"\n\nI didn't want to answer. I knew I had to. \"Punished Mistress.\" My mouth dry.\n\n\"Yes, Emma. Yes I think it may be necessary. But I think you will realise what you are and what you want in the following days as we enjoy ourselves.\"\n\nWe drove in silence most of the way back, her hand at times on my thigh. I felt ashamed that I wanted her to touch more of me. My body ached for release. Only gradually did I relax in my shame. I caught myself moving my fingers on my left hand as if the play with my rings but they weren't there. I had given them up. Thought of this strange relationship, of how I needed it. My only regret was that I was having an extra marital affair. What she did to me, what she made me do, I knew I secretly wanted. I looked at my knickers at my knees. \n\nIt might seem bizarre to some but people smoked, drank, took drugs, did all sorts of things that they knew were dangerous. God even driving in the car was dangerous. What I wanted from this wasn't too bad. My stomach tightened inside and I squirmed my buttocks on the seat. Thought of her punishing me. I fantasised of myself draped over her, of her hand spanking me. I had fantasised a lot about her before I met her again. It was all real now. It was so scary and exciting. I looked at her. Her eyes caught mine and I blushed as I quickly looked down.\n\n\"You can speak as long as it is appropriate and respectful but I don't want you tp speak too often otherwise. I know a little subby bitch like you will communicate your desires and needs, except when ordered to be silent. Any disrespectful speech or insolence will not be tolerated. Do you understand?\"\n\n\"Yes Mistress.\"\n\n\"Excited slut?\"\n\n\"Yes Mistress. Scared too.\"\n\nWhen the car pulled into her drive and I got out both of us looked at the damp line on the cream leather passenger seat where I had been sitting. She laughed and I blushed yet again. I had to hobble over to the doorway with my case and keeping my knickers in position at my knees. My breasts bobbled. I stood with my knickers showing at my knees. Although it was doubtful if others would see, I stood sure that they might.\n\nTaking my bag I followed Susan upstairs into her bedroom, with difficulty as I had not been allowed to remove the knickers. I had never been here in her bedroom before. I looked around curiously, being allowed into her sanctum. I stood and trembled deliciously, waiting, not knowing exactly what she may demand of me. I looked at the bed, vast with its metal head and foot ends. Thankfully alone now. In private, just the two of us. I put down my bag. Thankfully I was allowed, as she watched, to remove my knickers. She took them from me and smiled and she smelt them, grinning. My bottom lip quivered.\n\nStanding, she stretched, feline movements. Her hands went to her waist and unfastened her trousers. I stood transfixed by her legs, by her beauty. Her legs were tight, her buttocks firm beneath her French knickers. She stood and her long shirt slipped over them, hiding them again. She hung up the trousers as I watched her, unfastened another button on the shirt but then stayed as she was. She watched as I placed my clothes and toiletries where she directed from her position against the dressing table. My breasts moved against the material of my dress as I bent, again as I reached up. I could feel the slipperiness down at the junction of my thighs. \n\nAfter I had completed my task she looked me in the eyes reducing me to a jelly and then kissed me. Our mouths moved deliciously, my mouth opened by her tongue, our bodies touching, pressing. She pulled back and looked at me, her fingertips touching my neck lightly as they moved to the buttons of my dress. I looked down my front as her hands unfastened each large button, slowly working their way down, one after the other. She peeled it over my shoulders and threw it over the chair. I was naked. Embarrassingly, I realised; I was pleased to be naked. I loved it. I remembered to breathe. My breasts rose and fell, trembled, nipples hard. Slowly she slid her hands down to them and started to knead very softly. A whispered moan escaped from me. She tweaked my nipples, slowly yet gradually increasing the pressure on them until I was grunting softly with something I couldn't differentiate between pleasure and pain. She started to firmly caress my tits again, using less and less pressure. Humiliatingly I felt myself leaning forward trying to get her to fondle them harder.\n\n\"Do you want this?\"\n\n\"Yes. Yes Mistress.\"\n\n\"I own you, my love. I will own you completely. Its what I want. You do know that don't you Emma?\"\n\n\"Oh, oh, yes Mistress.\" I felt so good then, so totally safe and at peace. I loved it, being with her. She kissed me softly, held my face and looked into my eyes. \n\n\"Would you let me own you? Would you do as I tell you totally?\" Her voice gently amused.\n\n\"Yes.\" My voice so faint. \"Yes. I'm yours.\" I said them, words that seemed so simple,\n\nMy breath short and ragged, less rhythmic. My body shivering even in the warm glow of giving. Her finger on my cheek still. The nail against my skin, just touching. I felt its sharpness as it followed my neck, inside my cleavage, passing my throbbing tits, over the curve of my stomach. Daren't move. Her fingers caressed my pubic mound, over the smooth flesh, denuded for her like my body. I shuddered, couldn't help but push forward and part. \n\n\"Oh yes I like this. Does it itch?\"\n\n\"Yes Mistress, a little.\"\n\n\"Keep it slick for me. I have bought you a new Ladies Remington and a Venus razor for the intricate bits. Twice a week. When you need to shave use only a new blade and shaving cream for sensitive skin. Baby oil under the cream. Use moisturisener each day. Powder too. It'll help. Do you understand?\"\n\n\"Yes Mistress.\" Grateful. Still desperately horny.\n\nI knew that she would realise how wet I still was. Fingers slid along the edge of the lips, gently rubbing them slightly apart. Separated, touched the opening. A pool of moisture within building. Hips instinctively bucked, desperate, trying to stand still. Naked and exposed to her now, adrenaline surged through me. My mind focused only on that moment. Her open mouth seemed to be saying \u2018Yes, you want it don't you slut.' I felt the palm of her hand brushing my sensitive skin, gliding over it lightly, fingers toying between the folds once again. The juices that had built within, flowing, trickling down the inside of my thighs. I felt the coolness as it crept along my hot flesh. Fingers played with my velvety lips, now slippery with moisture, my slut wetness. She touched my clit, my body flinching, and my hips jerked suddenly toward her. Each time she touched my sensitive bud, I jerked my hips. Each time I jerked, her hands stopped. Sighing deeply, I became more and more frustrated, more and more aroused. \n\n\"Do you want my finger inside your cunt?\" So embarrassed.\n\n\"Yes! Oh god please!\"\n\nHer index finger down from my clit and slipped into me, slipped embarrassingly easily. It pushed right in. Into my cunt. Oh yes it was my cunt, her cunt. Not pussy. Cunt. It was dirty, her cunt. Belonged to her. Oh god yes. I inhaled sharply. Then I felt two fingers sliding in and out and at the same time found my clit with her thumb. I was humping against her furiously.\n\n\"Who owns you slut?\"\n\n\"You\u2026 you do\u2026 Mistress!\" I almost shrieked. \"Please! Please!\"\n\n\"What do you want?\"\n\n\"To cum! Please let me cum Mistress!\" I began moaning unintelligibly.\n\n\"Who allows or denies you pleasure my little sub?\"\n\n\"You\u2026 you\u2026. aaarg\u2026.You Mistress.\" I was sobbing. Her fingers slid back and forth as fast as she could. I was on the verge of exploding very quickly. \n\n\"Not yet little one\".\n\nI moaned loudly and clutched the fingers tightly inside of me. \"Please! Please, I need\u2026!!\"\n\n\"I will decide what you need.\" You said, pulling out your fingers. My hips continued to pump, though on nothing. Her fingers came to my face, they were covered with my juices. They moved forward and I suckled and as I tasted myself on her fingers I moaned softly in need. They went back inside me. She teased and teased me. Never letting me go over the edge, keeping me so near. Suckling my slut juices from her fingers every so often.\n\nA mist of desire. Standing as still as I could as she moved around the room. My body pulsed. I concentrated as hard as I could on being still. My nipples aching, my cunt throbbing. Mistress took my hand and took it behind me. Something soft was fastened. Then the other. Again the soft fastening. My hands were fastened without me fully realising what was going on. Leather cuffs. My tits thrust forward. They felt good pushing out like that, bigger, obvious. I tested to see if I could pull it off. I couldn't. I pulled until it hurt. I was lubricating so freely on my thighs. Now I was unable to cover myself or protect myself. I turned and looked at her. She smiled wickedly at me. \n\n\"Yes. That's right.\" She could tell what I was thinking. Her grinned and her hand snaked out and took a nipple. Then roamed freely over my body. I was in no position to stop her. I was so aware of that. \"Do you like it? Being bound?\"\n\n\"Yes Mistress.\" I conceded. I did damn it! Exposed and not able to control anything. My body seemed to be about to explode; I couldn't possibly keep all this focus on my submissiveness within.\n\n\"You'll be happy then.\"\n\nHer hands moved to my shoulders and pushed. I slid down her body until I was on my knees, my face against her French knickers between the sides of her shirt. She was excited too. I could smell her and feel her heat through the silk. The fact she was excited because of me excited me more. Her crutch was before me, her pubic hair showing through the thin material. It had a damp patch. I remembered her sex from my youth. The neatly trimmed pubic hair, the smooth lips, proud. The slit between puffy lips showing the nice pink wet slit between.\n\n\"You're here for my pleasure. I own you. Pleasure your owner.\" Her voice throaty with arousal coming to me from above. My breasts hung as leant over to kiss her thighs but she didn't really want pleasure she wanted release. Her hands on each side of my head pulled me to her, to her sex. It was divine. I loved it. My mouth against her centre. Having to lean against her, hands clasped me and rubbed herself against my face. My tits were squashed against her thighs, as she spread even wider they were pressed outwards too. \n\nHer sudden need was catching, I put my mouth to her and licked and kissed every part of her through her knickers. Quickly they darkened with my saliva and her secretions. Feeling her through the thin material amazingly well. Between the fleshy mound and lips I could feel the hardness of her clit and was rewarded by a groan as she arched backwards. Her hands began grinding me against her. Trying to give pleasure as much as I could but I had to accept my passive role as she ground my face over her covered sex. Using me. I wanted to be used this way. I wanted it so badly. Her aroma filled my nostrils, her taste seemed to be coming into my mouth through the silk. Wanted to use my hands, found I couldn't, my cunt pulsed crazily. I suddenly found myself being gagged by her pushing against my mouth. Instead of oxygen I breathed her smell. The intensity growing by the second. If it had been me I would no doubt be baying like a rutting hyena. I was so impressed by her self-control, even though I could sense her nearly there.\n\nIt was my place. There between her legs was my position. I wanted her pleasure. I wanted her to have an orgasm so much. I realised I was concentrating so much on my task that I kept forgetting to breathe. Suddenly she stopped altogether. I could feel the tenseness in her body like a spring and then with a sigh her hips jerked erratically. I heard another sigh and we stayed motionless for a long moment. I realised that I was on the edge myself. My own breathing was ragged and my hips were moving and my thighs were squeezing. She was in control even when cumming! How God. So close. So close. Not there. Her aroma filling me like my arousal. \n\nSuddenly bereft as she moved away. My body teetering on the verge of falling.\n\n\"Stay there.\" She walked behind me out of sight. I knelt expectantly. Time passed. My buttocks out, my hands fastened behind. \"Now, come to me. On your knees.\" With my hands bound it wasn't easy even though the distance was small. I shuffled forward to her. I was very conscious of the movement of my tits, the slipperiness of my thighs. \"Turn around. Touch the floor with your head and spread your knees really nicely wide for me.\" Easier said than done. I bent and needed to lift my hips to rest my cheeks on the carpet. \n\nI realised my humiliating position, it was impossible not to. Mistress would be able to see that my thighs were wet, than my lips were bulging. She would be able to see my crinkled private opening. The faint sound of the bed came to me as she sat behind me. Her shoe caressed inside my thighs. I relaxed at its touch, at its caress. It moved higher. It rubbed over my thick labia and I gasped. My hands opened and closed impotently behind me. It pressed against me, her foot fitting the curve of my body there, her shin against my rear which was now high in the air and spread wide open. Within the limitations of my movements, and even with only my hands fastened behind me, in this position they were limited, I began pressing against it. Whimpering. Knowing I had to wait. It wasn't up to me. \n\nThe pointed toe parted me. Hard against me. Shoe, lips, cunt, clit. Rubbing. Grinding. Me, humping. Saliva dribbled from my mouth onto the carpet. Her foot felt oily. Was it entering me? Had I opened totally. I was so apart, front, back. I couldn't do anything, bound. Oh God. How could I let this happen? It didn't matter. All that mattered was the volcano that needed to erupt. All my world centred on my need, my desire, my lust. \n",
        "\"Cum for me.\" I did. It was if I had split and the lava was coming out of every part of my body. And yet within the explosions of lust that wracked me over and over it and I were constrained by my Mistress.\n\nFinally I became aware of my self and my body again. The carpet wet against mouth, hairs on my lips, my bottom waving in the air, stuck high wantonly. I became aware of her feet near my face. The shoe moved against my face.\n\n\"Clean it my sweet slut.\" I licked the leather that tasted of me. I licked and kissed her shoes it as I knelt before my Mistress. I felt so comforted. \n\nChapter 2\n\nLaying in her armpit, I woke with my face on Mistress's breast. I could feel her heat and the sweat from my face and feel the beating of her heart throw her body. I couldn't move my arms. My shoulders ached dully. I opened my eyes and she was looking at me. Her fingers played in my hair.\n\n\"Happy now?\" I nodded. \"We only slept a while we still have lots of time. Just think about what you have done. My god. Fucking my shoe! What would people think? What would they say? Such a dirty slut of a sub. Does anyone else have any idea that you are such an immoral little slut when you try and pretend you are not?\"\n\n\"No Mistress only you.\"\n\n\"Stop humping my leg!\" Suddenly realising that I was rubbing my hairless mound against her leg. I couldn't believe what a slut I had become. Oh God it was so humiliating. I was so horny.\n\n\"I am sorry Mistress\", I said plaintively.\n\n\"You'll do anything wont you to get off, to get that oozing hungry cunt of yours off. Well that cunt is really mine now again isn't it subby?\" I knew that she was right!\n\n\"Oh yes Mistress.\"\n\n\"Yes slut, your Mistress has a pussy, you have a cunt. You understand that don't you?\" \n\nI nodded and whispered, \"Yes Mistress.\" It was such a dirty word but it was the correct word for me. That's what I was. I was a slut. My Mistress owned my cunt. \n\n\"And tits, you have tits slut, or udders. What do I have?\"\n\n\"You have lovely breasts Mistress. Such beautiful breasts.\"\n\n\"Good. Good. I own you. Now you are my toy, just a sex toy, for my pleasure. What are you?\"\n\n\"I am just an owned sex toy Mistress. Yours.\" She smiled at me and leaned forward to kiss my mouth her tongue playing inside and me responding. My cunt throbbed as she used her toy. Just a toy. But toys make their owners happy, don't they?\n\nShe moved me over onto my back with my arms under me. She played with my hair gently. \"You are such a slut aren't you? Such a smutty, wicked slut.\" Her voice gentle.\n\n\"Yes Mistress.\" Whispered. My hands bound under me, my hips raised. \"Open for me, my lovely little slut.\" I parted my legs craving to please her. Knowing I wanted her to see me. See me open and exposed as she had told me. Seeing me obedient. Looking down and seeing my slippery naked mound pushing up lewdly. Tits thrust up. Exposed and engorged lips parting and available with or without any consent. Shivering at the thought. Still having that overwhelming need throbbing between my legs. I was embarrassed. Aware I was leaking again. Shivering again under Susan's intense inspection of my naked body. Blushing as she reached out and casually cupped my left breast. She rolled my already hard nipple\n\n\"Open wider. Tell me what has been up this slutty cunt of yours lately.\" My tendon aching as I spread my legs wider still. Her fingers slid between my slippery lips. Rubbing me. Entering. Leaving. Over my clit. Deep with me.\n\n\"You know Mistress.\"\n\n\"I know I know. I said tell me.\"\n\n\"Andrew's cock, Mistress.\"\n\n\"Why was that cock up inside you, subby?\" Her voice in tempo with her fingers. Her face near mine. Forcing. Pushing. Demanding. Like her fingers.\n\n\"Because you told me to Mistress. You told me that I had to do it Mistress. Ooooh. You wanted me to fuck for you Mistress.\"\n\n\"Can you remember what it felt like being my dirty whore? Did it fill you? Did that cunt of yours get wet thinking of what you were?\"\n\n\"Yes. Yes. Oh god yes.\" My chest was rising and falling with my breath. \"I was your whore. I was your bitch. Hot bitch. Like you said. Ugmmh. On my knees. Instigated it. Let him. Like you said.\" Panting.\n\n\"Were you wet for me?\"\n\n\"Oh God yes. I was wet for you Miss. Like now!\"\n\n\"Did you cum?\"\n\n\"No Miss. You said. I wanted to so much but I was good. I was good for you. I wanted to do exactly as you told me. Not till today. Not till you gave me permission. I whored and I waited Mistress.\" So submissive.\n\n\"Remember. It is only me that gives it to you. Me that allows it. You orgasm at my wish. Nobody else's. Even yours. That's what you really want isn't it?\"\n\n\"Yes Miss. Oh God.\" Her fingers left me humping air in frustration. I whimpered.\n\n\"You are here to pleasure me, and you happen to have a pleasing body and it pleases me for it to be available and on display to me whenever we are in the house alone. In fact, unless I tell you otherwise, before you enter the house you must always be naked. You need to ensure you are displaying tits, cunt and arse for your Mistress before you enter. Being naked for me will make you know your place. Make you aware what you are and what you are for. You'll probably get off on that too wont you? The humiliation, being naked. I know you don't ever forget. \n\nI know my sub wants the attention. So for punishment we'll put you in the corner and forget you.\" I looked up at her pleadingly but not daring to speak. \"I'll smack you and even whip you, of course, but that will be for my pleasure not your punishment. I'll do it because I like doing it and you will accept it because you'll know your duty is to please.\"\n\nHer hand swiftly slapped my cunt and mound once. A sound like slapping wet mud. I jerked and arched up from the bed. Cried out in shock. She did it again, then again. It hurt and shook me. But I could feel other stirrings too. I pushed up for the next. I pushed up my naked mound for the slap! Pushed it up to be smacked. Arched up, wanting. It didn't come. I blushed suddenly, deeply. Mistress laughed. \"I might do it to simply get your attention, or just to show you your innermost wantonness.\" She laughed again. \"You, my little bitch, become wet so easily don't you?\"\n\nAfter Mistress unfastened my wrists, I went into shower with Mistress and soaped her body and washed her hair. My arms loved being sanctioned to move again. I was allowed to soap her breasts and sex too. She kissed me under the jetting water. Her lips played with mine gently, her wet body slippery against mine. It aroused me. Breasts rubbing over mine and legs entangling. I felt happy. After, I dried her down too in one of her huge soft towels.\n\nMistress dressed in a black leather skirt and a thin red top. Obviously I remained naked. I felt more naked when Mistress was dressed. She knew it. She knew that it aroused me too. \n\n\"Mistress,\" finding it difficult to speak, \"I need to use the bathroom.\"\n\n\"To pee?\" I nodded. She looked at me with her finger lightly touching her lip. \"Yes Mistress. To\u2026 pee.\"\n\n\"We'll go downstairs first.\" I didn't know what she meant but decided it was wisest to say nothing though the pressure in my bladder was growing with each minute. \n\nDownstairs, I stood on a rug before her chair in the kitchen, naked and wanting to pee. It was a very big kitchen, old fashioned in a fashionable way. The floor was tiled with black and white tiles, there were a few rugs. A big table in the middle with chairs, a stove and fridge freezer. A clothes dryer hung from the ceiling above the large brick fireplace. There was a smell of herbs. She had me stand with thighs apart and my hands behind me. My tits thrust, nipples hard and my cunt available. My lower lips were engorged and exposed. It felt formal. It was a position I was expected to know in future. I still had that overwhelming need throbbing between my legs, or maybe it was a new one. I was embarrassed. I knew my lips were getting wetter again. I shivered under Susan's intense inspection of my naked body. I blushed as she reached out and casually cupped my left breast. My body remembered my orgasm and I feel its rapid response to her light touch. I stood and felt my already hard nipple rolled between forefinger and thumb, gently crushing it. I turned slightly to the left hoping my right nipple will be caressed.\n\n\"Who owns you?\"\n\n\"You do Mistress.\"\n\n\"Good. \"I think you already realise your role is to please me. Remember I am a strong woman who knows what it is you really want. When you feel nervous, you will remember that whatever it is you are expected to do that is making you nervous you are giving yourself to your Mistress, for our mutual enjoyment. I will take you and use you however I please, because this is what you want too. I will do everything necessary to make you feel safe and comfortable, and in return, you will not let your fears interfere with your desire to give herself completely to me. If you do well, and obey me at all times, you will be rewarded.\" \n\n\"You are my submissive slut then? My sex toy? To do my bidding, to carry out my orders, to play with, to do as you are told and be obedient?\"\n\n\"Yes Mistress. I am yours, your submissive slut.\" My breasts were heaving and I could do nothing. I wanted to wipe my face, to close and squeeze my thighs. I wanted to cover my nipples as they thrust forward in their need. I wanted to but I didn't, couldn't. It was if I was tied. I was, but not by the cuffs just then.\n\n\"Good. I want you, want you to be that.\" I groaned aloud at that. The pleasure of knowing she wanted me. Wanted to be my Mistress. Wanted me sexually. \"Go and fetch the glass bowl that you'll find next to the sink.\" I brought it, very conscious of my nakedness, my bouncing tits, the slipperiness of my thighs and resumed my position. My bladder pressed inside me, wanting release.\n\n\"Do you still want to pee?\"\n\n\"Please Mistress.\"\n\n\"Well you did well to ask. Because you must ask my permission for everything concerning what goes in and out of that slut body of yours my little bitch. You will not you use the toilet in this house. You will either use this bowl or you will do it outdoors in the garden, at my discretion.\" My mouth must have opened in shock. Her hand slapped my left breast. I groaned and just managed to hold position. \n\n\"Don't even think of arguing. That is what I want, understood?\"\n\n\"Yes Mistress.\" I blurted it out hoping my tender breast would not to be smacked again.\n\n\"Good. Away from the house, of course, you may use a washroom cubicle if permission is given but there will be conditions when I allow that. Now, you will make sure you do not get any on the floor.\" She placed it on the rug and sat down to watch. \"Squat with your thighs well apart. I expect to be able to see clearly.\"\n\nThere was a thumping in my ears. I couldn't believe all I had heard and I was sure there was more to come. My face was on fire but felt my body responding to the humiliation. I thought of Mistress's caresses, the tingling excitement growing yet again between my legs. I felt my clit throbbing as my thighs opened to her. The tingling spread throughout my body, and my nipples were now as hard as diamonds. I squatted feeling humiliation and more. She'd watched me before but many years previously. It was so embarrassing; my thighs spasmed slightly as I squatted wide open so that she could observe. I placed two fingers either side of my hairless lips and pulled up so I could direct the flow, but the flow wouldn't come. I did not want to get it on the floor. I was desperate. I looked up at Mistress who arched her eyebrows silently. I tried and tried. I looked at the floor and thought of taps open and flowing, waterfalls, rivers. \n\nSuddenly it came. A flow of liquid from me. Bursting forth. So wonderful was the relief it wasn't until I heard the noise of the pee going into the liquids already in the bowl that the humiliation returned. Stronger. My eyes were wet but it didn't matter. The knowledge was deep. Knowing the control over myself that I was giving up more and more. I was having to control myself to do my Mistress's bidding. My body wanted to shake but I dare not allow it. I dare not allow the urine anywhere other than in the bowl, it still spurted. Eventually it simply dribbled from me. Then dripped as I became to shake slightly. I didn't know what she wanted as she stared at me.\n\n\"Come here.\" I moved closer still with my legs spread. A tissue had appeared in Mistress's hand. I spread for her, spread my cunt, full of shame and submission. She wiped me as if I was a child. I felt very loved. I couldn't help but whisper thank you to her. \"Now go and empty it and make sure you clean it well. After, put it on the floor so you know where it is to use again.\"\n\nAfter, I was allowed to make-up and brush my hair. We were going out and my appearance was to be considered. Mistress had said as it would reflect on her and I must never show her up in any way. I hoped I was pretty enough as I brushed my hair until it shone. Mistress brought my clothing, she had chosen the same dress as I had worn earlier and I was surprised and pleased to see a clean black pair of knickers on top as she handed them to me. No bra though.\n\n\"You will always be required look your best and are properly dressed or undressed. You must never show me up by looking unkempt. Obviously at home you will be allowed to choose to dress in a manner appropriate to your role, but I will judge how well you present yourself. However, a few specific guidelines need to be mentioned to you. If I allow any underwear it will be appropriately sexy, any top worn will be cut low enough to reveal skin down to the point between the slave's nipples or tight enough to easily display the shape of your tits. If ever I allow you to wear trousers they must be sufficiently tight to reveal the curve of your slutty hips or loose enough for my easy access. \"\n\nI moved as if to put on the dress though I was immediately stopped.\n\n\"You are in the house and I have not given my slut permission to be dressed in the house. Put them on outside.\" Oh god, I had forgotten. I was allowed to put on my shoes inside.\n\nI had to dress in the open porch. I could hear the traffic and someone call out in the distance as, still holding the tiny silk bundle of knickers, I wrapped the dress around myself and fastened the buttons all the way up the front. Mistress made me stand as she undid buttons again. High up my thigh. \"I will decide on the extent of exposure.\" She stopped and caressed my smooth mound. \n\n\"Mmm. I do like this smooth.\" I tried to remain still though it was difficult to restrain from thrusting lewdly. She finally left my increasingly needy skin and unbuttoned the dress at the top further down than I had. To below my breasts. If I wasn't careful I could easily display my breasts to anyone who cared to look in my direction. I slipped into the knickers which covered virtually nothing of me, much of the smooth flesh showing at the side. As I bent and pulled them up my breasts moved obviously, embarrassingly. I could feel the string between my buttocks and knew the smallness of the front would mean that they would eventually slip between my lips. She passed me my purse.\n\nWe moved to the car and drove off in silence, I hadn't been told where we were going. It wasn't far. Parked on the street. I could see large expanses of my globes and acres of thigh as I got out of the car. Walking, holding my purse at my crutch, very concerned about the movement of my breasts and the slight breeze ruffling my skirt. I looked at the ground. Mistress held my arm at the elbow like one does to a recalcitrant child. We stood on the pavement, occasional shoppers passing.\n\n\"There is a sex shop over there. Go in and buy three butt plugs, all different sizes. I will wait in this shoe shop.\"\n\n\"What?\" \n\nA sudden shock hit me. White stars in my eyes. A slap. On my cheek. I looked around. A man saw but walked on, glancing at me. My eyes filled with tears.\n\n\"Never question me like that again! Especially in public. You will do as you are told. Now!\" \n\n\"I'm sorry Mistress.\" \n\n\"Just go and do what you are told.\"\n\nThe windows were opaque. The inside looked secret, forbidden. I had never ever been in a shop like it before. Stepping across the road I gingerly opened the door, really worried that I had upset her. A really loud bell shocked me out of my thoughts as I entered. It announced my presence to all the world. Two men looked up at me. One of them shuffled quickly around a corner but the other carried on looking at me. A hard looking woman behind the counter read a newspaper, smoking. Suddenly the bell again and I actually jumped in shock. A group of office girls came in, loud and boisterous, claiming the space with their laughter. I moved to the wall attempting to hide myself. Old music, sounding like I imagined in a strip club, was playing vaguely in the background. The man continued to watch me amusedly. I suddenly became really aware of my barely covered body. I looked down. A hard nipple very near the button of my dress was exposed. Quickly adjusting myself, blushing. I needed to find what I came for. My head buzzed. I felt sweat on my forehead. The smell of cigarettes all around. \n\nVibrators filled the walls as far as I could see. All sizes, all colours. It was intimidating. I saw the girls looking at some adult games and as my eyes moved I noticed some boxes of something. No. Plastic balls. I was blushing strongly. Although it was darker inside I was scared the finger marks on my cheek would show. The man looked at me intermittently, bored with me now, looking at a dirty magazine. The girls were still too caught up in their amusement to bother about me. My eyes went back to the shelves and there in front of me were packs of three sizes of plugs. I had never seen any before. The ones here were all vivid pink. There was no other colour. I picked a pack sheepishly, my heart beating furiously, thankful I needn't make a choice. The check out desk was high. The woman condescended to look at me as I placed my purchase up on the counter.\n\n\"We have black butt plugs too\", she said loudly. The girls stopped, momentarily looking. Then they carried on, ignoring me. Even though she had her cigarette in her mouth the words sounded booming. I wanted to hide, as the strangers in the shop knew the secret of my purchase. \n\n\"No, no. That's all right. These are fine.\" I couldn't look in her direction. I could feel perspiration running under my arms. She put them in a brown bag and I gave her a note. \n\nThe change was passed over. I took it but I couldn't hold it. Sweaty hands. It dropped onto the floor. Scrabbling on the floor for the coins. Looking up there was the man who had stared at me. My skirts had separated between my thighs, wide up to my knickers; my top gaped displaying my tits. I should have fled immediately but I didn't. I felt like a rabbit in the headlights. I stayed for those extra few seconds allowing a stranger visual access to me. Whore. Slut. Then I fled. Fled with damp knickers. So ashamed at what I had done. What was happening to me? \n\nI found Mistress looking at shoes. I blushed thinking of earlier. I could smell cigarettes still on me.\n\n\"Any problems?\"\n\n\"No Mistress. I've got them.\"\n\n\"Good. You look flushed. Is your cheek alright?\" Her hand caressed it. I was shaking. I wanted to cry.\n\nDown the street I carried the brown bag, my finger aching as they tensed around the folded top. The next stop surprised me. A pet shop. We walked into that musty animal smell that all pet shops seem to acquire. It wasn't busy, one middle aged woman and a small boy. A girl was packing pet food on the bottom shelves, her cerise knickers showing over the rear of her low slung jeans. Concentrating on not exhibiting intimate parts of myself, I followed Mistress who appeared to be looking purposefully for something. We came to a stop and I wondered why we were here. ",
        "\"As my pet you need a collar. A dog collar for my bitch on heat. Now which type and what size?\" \n\nMy eyes must have been like dinner plates. I managed to contain my shock and keep my mouth shut. Frantic I looked around to see if anyone had heard. Mistress picked up a pink one and placed it against my throat. \n\n\"Chin up slut.\" I did as I was told. Mistress tried to fasten it around me but it was too small.\n\n\"Can I help?\" Had she heard me called a slut?\n\n\"Well we need a collar.\"\n\n\"For which breed?\"\n\n\"Oh, it has to be the size of this young things throat.\" The girl in with the cerise knickers looked at me puzzled. \n\n\"What colour?\"\n\n\"Actually I like the black ones. I thought with metal studs initially but they are quite butch and this is for a bitch. I think a plain black one.\" \n\nThe girl found a few different sizes and Mistress asked her to try them around my neck for size. The girl stood looking at us, from one to the other, then shrugged and did as she was asked. I stood blushing furiously, holding my neck up, presenting my throat as the girl tried them around me. Eventually Mistress and the girl found one that matched their satisfaction as stood there mortified, modelling my dog collar. The girl had realised that I was not worth speaking to and only conversed with Mistress now. Passive, standing still. They stood looking at the one they had decided upon around my neck.\n\n\"Oh, and a leash. Chain, with a leather handle?\"\n\n\"Yes. We have those.\" One was found and Mistress fastened it to my collar, letting it hang heavily down my front.\n\n\"Perfect. We'll take these. We might as well keep them on. Well not the leash.\" \n\nThe girl looked from one to the other of us not certain of whether she was being laughed at. \"I'll need to remove it for the code. Oh I can take it without unfastening it.\" She spoke as if in a daze obviously incapable of explaining to herself what was happening.\n\n\"Oh yes, the bitch can still wear it. Don't worry about wrapping them. We have this brown bag that the leash can go in.\" I knew I was trembling. I knew I was so hot as the girl unfastened it and looked at me. I couldn't look at her. I didn't want to see her expression. As we approached the checkout something else caught Mistress's eye. She picked something small from a shelf as we passed.\n\nAt the checkout the girl ran everything through the cash till including the small bell that Mistress had picked up. She put the leash in a plastic bag and Mistress stood me still and spent a considerable time adjusting my new collar and then attached the bell! A customer entered and looked amusedly at me. It hadn't occurred to me why she had bought it up to then. I thought I might faint. As we walked out I was suddenly aware of the wetness between my legs. The bell tinkled.\n\nThankfully Mistress decided that she would like a coffee. The dizziness was gradually reducing. I was wearing the collar, walking around in my collar and my bell. My bitch collar. I could smell the leather, feel it vaguely around my neck. We sat down at a table by the wall in an out of the way spot in a coffee shop. There were only a couple of other tables occupied and there was restfulness about the place. My bell could be stilled. I began to relax. The embarrassment of buying the collar receding a little. I still felt very obvious. Why would a grown woman be wearing a dog collar? It made me feel very humble and submissive. I was just a pet. Nobody had looked at me strangely though. Nobody had looked surprised or disgusted. I realised that the knowledge of what it was rested inside me. I was a pet, I was a submissive, it was my \u2018badge' but inside I was aware that it was only some people who knew. The people who were also into this kind of thing. \n\nThe waitress was beckoned over and took our order. She seemed to look at me for a moment but it wasn't me placing the order. Mistress was taking care of me. I sat quietly waiting looking at my hands. My thoughts were still buzzing around my head and all I wanted was to keep out of trouble and please. Soon our order came and I sat silently, sipping already cooling coffee. Mistress began talking about handbags. I sat as passively as I could, very aware of my bell still. \n\n\"I think I will tie you up more. Keep you opened and in bondage. Would you like that?\"\n\n\"I don't know Mistress.\"\n\n\"I think you do. I think that being bound and not in any position to stop what's done to you would make you dribble down your legs, slut.\" \n\nI looked at the table and let my imagination riot. Eventually, after I could feel her amused eyes on me for what seemed to be hours I whispered a \"yes\".\n\n\"Do you think the girl is attractive?\" The question caught me off guard and I had to look around and look at the girl again. My bell tinkled at the sudden movement and I was scared that she would look at me. The girl was about sixteen, eighteen perhaps with short blonde hair. She was quite plain but had a nice figure and her long legs looked good in her short black miniskirt and black tights and flats. I could imagine her at school. The boys would be pleased to be with her, but not necessarily in public I thought bitchily.\n\n\"She is pretty I guess Mistress and has good legs.\"\n\n\"Yes she has, quite long. Look at her tits. Would you like to lick them if I allowed you to?\" \n\nOh God! Would she ever expect me to do that? I knew that it would not simply be approval if she did, but an order. Like whoring to my husband. Would she humiliate me that much? With someone who knows what I am doing, not only me. Would she give me away like that? No it wouldn't be giving me away, I realised, it would be a performance from me. She'd be whoring me again. Really whoring her slut. She would keep me and expect me to perform for her curiosity. She would like the erotic display and the knowledge that she could humiliate me. I could imagine that. The reality of it made my stomach jump. \n\nI licked my dry lips and looked at the breasts in question. They were larger than mine. Full in a young girl's way, I thought almost insolently pert. Mine were relatively pert I knew from balancing the comments received with observation but hers had that over ripe look of fresh tomatoes. Those extra ten years makes a difference. I hoped that I had other things in my favour. I noticed my mouth was dry, my face hot. I could imagine the pinkness of the nipple.\n\n\"Yes. Yes Mistress.\" My voice husky. \n\nI coughed attempting to disguise it and as I did I became aware of the constriction of the collar around my throat and the tinkling again. I couldn't look at her, instead attempting to look across the room in my uncertainty. The waitress was clearing plates from an empty table. Her skirt stretched tight over her buttocks as she leant forward. Her skin glowed pinkly through her thin white blouse and the straps of her bra showed clearly. I closed my mouth and looked at the table in front of me aware of my blushes. I could imagine my hands caressing her. The more sexual control I gave away the more I was incapable of controlling my dirty thoughts.\n\n\"You are getting wetter again aren't you?\" She looked and sounded surprised though we both knew she wasn't. She was reading my face. We both knew that she was building this in me and teasing me with her comments. This lust, this volcanic coursing inside me was caused by her ownership of me. \n\nI nodded at the table before giving in to speech. \"Yes Mistress.\"\n\nAfter a while the girl approached us with a tray looking empty cups. I looked down as she took them from the table. Mistress said thank you but the girl remained there.\n\n\"Is that what I think it is around her neck?\" I felt my eyes widen and my face heat up.\n\nMistress cocked her head and amusedly looked at the girl. \"What do you mean?\" \n\n\"It's a collar, a dog collar. With a bell.\"\n\n\"Yes?\" I was very aware that I was looking at the table and not defending myself. A drip of sweat ran down my side. The girl didn't say anything for a while and I hoped she would go but she didn't.\n\n\"Is she a submissive? Do you own her?\" My head spun. My eyes blurred.\n\n\"Why do you ask?\" The humour apparent in Mistress's tone.\n\n\"I read these books.\" My throat was tightening. \"Some of the women and men sometimes wear dog collars.\"\n\n\"What kind of books?\" Mistress was spinning this out.\n\n\"Dirty books.\" Her voice confident not embarrassed, as I would have been admitting to reading books like that.\n\n\"Yes she is.\" I thought my breathing would stop! They continued talking for a moment but the only sound I could hear was the thumping of blood in my ears. My eyes were blurred humiliation. I vaguely realised the girl was walking away.\n\n\"Look at me!\" Mistress's voice was stern. Not harsh but a voice I would not argue with. \"You will remember that you are mine and you will obey your Mistress.\"\n\n\"Yes. Yes Mistress.\" My voice rasping on my dry throat.\n\n\"In a moment she will return. All you have to do is remove your knickers and do as I say. She will not harm or touch you. I will not allow it. I will not allow it. Do you understand?\"\n\n\"Yes Mistress. But\u2026\"\n\n\"No buts!\" I remembered the slap.\n\n\"Sorry Mistress.\" \n\n\"You will do exactly as you are told and show me how obedient you can be when things are unexpected. Never mind the problems just let yourself be guided and controlled by your Mistress and you will be looked after. I am doing this because you want it. I am doing this because I can. And I will.\"\n\nThe girl returned and stood before our table. The only other customers were just out of sight at the other end behind plants. She stood there and I could see her legs, but I daren't look up.\n\n\"Are you really going to make her do it?\" I must have missed something earlier.\n\n\"Slut, remove your knickers now and place them on the table.\" \n\nShe looked at me and nodded. I felt like a rabbit in headlights. I silently pleaded but to no avail. Finally I knew I would be in serious trouble if I didn't comply. Other strangers had seen me kissing Mistress, seen my tits, seen me collared after all. This was just another stranger. I stretched my jaw and looked around nervously as my hands dropped to my sides. My right hand crept under my skirt and found the waistband at my hip. I paused and looked up. Her eyebrows arched and I licked my lips. It was like drowning. I could feel any control slipping away and an almost alcoholic heat taking me. Lifting slightly I dragged the band down. I was attempting to keep my head stationary so the bell remained silent. My other hand slid under the other side. Heart was pounding. Nipples throbbing. This girl was seeing the real me that only Mistress had seen before. The left waistband was at my thigh and I had to lift. With both sides at my knees I knee it was the turning point. I slipped my thighs slightly apart and pulled the gusset from my crutch. Bending forward. Tinkling. Tits slipping into view. Chest constricting. Dampness along my thighs. Sliding down them. Oh God. One knee up and over my foot. Then the other. Knickers balled in my hands. Breathing heavy. Sitting back. Face flaming.\n\n\"Put them on the table.\"\n\nAgain the bell tinkled as I could feel myself shaking. My hand came up from beneath the table and I looked in the vague direction of the girl. The hand dropped the balled knickers in the centre of the table and retreated rapidly underneath again. I looked down at the black material unfolding slightly wondering what to do. Mistress picked them up and held them open in the palm of her hand. We all stared at them. The inside of them. The small amount of material was obviously soaked with a whitish stain around the edges of the obvious female secretions. Mistress held them out for the girl who took them.\n\n\"Mmm. It's not everyday a customer shows me her knickers in here. They are rather damp too.\" My body gently shook as she brought them to her nose.\n\n\"Are you still wet?\" It took me a while to register what was said to me. I nodded at Mistress. \n\n\"Show us. With your finger.\" I looked up again abruptly in shock, my eyes and mouth wide. \n\nLuckily I remained silently before I realised that I would have to obey. I realised what I must do. A tear of humiliation ran down my cheek. I looked down at the table feeling completely disgraced because of what I was being made to do in public. \"And look at your waitress as you do so.\" A sob escaped me as I looked into the waitress's eyes feeling totally humiliated as someone else saw me taking orders from my Mistress, such demeaning sexual orders. She was smiling. Grinning rather. Slipping a hand beneath my skirt again I parted my thighs and slide forward on the seat. My eyes caught in the girl's as I did so. I couldn't escape. I didn't know if it was going to be too much. I felt Mistress's eyes on me. My fingers found my bulging smooth flesh on each side of my slit. The eyes, even ones so young, held me. My second finger paused for a moment at my entrance and my eyes closed. I could feel seepage that had occurred in the last few seconds. \n\n\"Open!\" My eyes were snared again. My stomach pressed forward and my finger slid into me. I pushed until I felt I could go no further. The table obscured any view of what actually I was doing but the girl watched my discomfort through my eyes. I remembered to breathe. The bell tinkled softly as my tits bobbled slightly with the sudden breath. Whimpering softly, I withdrew the finger and carefully brought it above the table, sticking up from my hand for them to see. It gleamed in its wetness. Lights reflected from the slippery looking skin.\n\n\"Yes. I think her cunt is rather wet, don't you agree?\" The girl looked away from me and agreed. \"Now clean it slut.\" I paused then sucked my finger clean. \"You see?\"\n\n\"Yes.\" The girl was flushed. I sucked my cunt juices. \n\nWithout turning to me, her eyes still looking at the girl, \"Tell her what you are.\"\n\n\"Your slut, Mistress. Your submissive slut. Your whore.\" I felt my vagina spasm and I was almost cumming. My breathing was shallow gasping breaths, my face hot and dry, my thighs drenched in spurted juices. Vaguely my mind registered that a wet spot would probably show from behind on my skirt. \n\n\"Tell her to play with herself.\"\n\n\"Do it. We want to see what a slut looks like when she fingers.\" \n\nFear turned to excitement, and my body grew even more aroused. I wanted this. My fingers slid under again. Swallowed. Trembling. Tits bouncing. Thighs already parted. Smooth cunt. Wet. Easy. I was so easy. Into my folds. Clit huge. Jerking as I touched it. Too sensitive. Inside my cunt. I began furiously rubbing around my clit. I was close.\n\n\"Does it feel good, you dirty little slut?\" I nodded, not trusting myself to speak.\n\n\"Do you like doing this?\"\n\nI half grunted, half blurted out in a deep sigh, \"yessss...... Oh God Yessss....\"\n\nI could feel my orgasm building. Looking right into their eyes. So humiliating. My fingers on myself for them. I could smell it. Wanting. More than anything. They were watching, a slut was performing for them. Almost there. Sighing. Grunting. I let out a soft whisper of a moan. My body had taken over. \"Ohhhh!!!\" My mouth opened.\n\n\"Stop. Stop! Don't you dare! I don't want her to cum now.\" \n\nI couldn't. A hand on my arm. I froze. My body shook. Really shook as I fought it. Fought to make it do as I was told. \n\n\"Oh.\" The girl was obviously disappointed. Not as much as I was! I continued to rock and could feel Mistress's eyes on me. I pulled my fingers up from my cunt. Onto the table. I looked down and saw a nipple was showing. The seat was wet. I closed my eyes. Attempted to control my breathing.\n\n\"Perhaps another time.\" \n\n\"Yes. Yes.\" Was all that the girl said as though she was in another world. She was aroused I saw. She offered the knickers back.\n\n\"Keep them. To help you remember.\" \n\nThey disappeared inside her curled up hand again. I looked at the table in a mist of submissive need and humiliation. My smelly wet fingers were before me. What did she mean?\n\nWhen I looked up she had disappeared. Mistress was standing and we were leaving. I stood and my thighs rubbed slickly against each other. Too scared to look around to see if the girl was there. I could hardly stand. I felt light headed. I wasn't sure if I was going to faint. Outside the coffee house I had to sit for a while. Mistress was with me. Her hand holding me. Mistress was there. Eventually we made it to the car. Her mouth took mine. Possessed me. My hips thrusting. Her tongue deep. Initially hard and demanding, gradually softer, our mouths playing against each other. I was in her arms.\n\n\"I was proud of your display.\" \n\nI burst into tears of happiness, pressing my face against hers. \"Thank you. Thank you.\"\n\nChapter 3\n\nFor not complying sufficiently quickly and questioning her in public I had been punished. I had knelt inside the lounge with my mouth around the door handle. The circular handle making my mouth stretch wide as I took it in, then filling my mouth, my teeth around the narrow part at the far side. I had to spread my cheeks with my hands so that my bottom and cunt were displayed obscenely. Hanging between my breasts was my leash fastened to my collar. I had been ignored for some time in this position. I had felt humiliated, then penitent, then gratefully submissive as time wore on. I opened myself obscenely and drooled saliva from my mouth. My knees, back and jaw had ached. After, I was sent to stand against the wall to wait. Stiff nipples touching the cool plaster, hands behind me. Again ignored. I cried softly, but not allowing my bell to make a noise. I wanted to be good. I wanted her to be happy with me.\n\nNow I stood brazenly naked, except for my collar. My lease hung down between my breasts and grazed my stomach. I loved it. I was wanted again. I would be good. Mistress sat dressed. My nipples were standing out proudly. I had crawled over to her across the floor. Beautifully degradingly. My bell signalled each movement. She took my leash in her hand. Called me her beautiful whore. She could see my need of her. There was nothing that made my position so obvious as standing without clothes whilst others wear them. I couldn't hide either my presence or my intimate parts. My tits thrust forward wantonly. My cunt was as naked as I was and continually lubricating, and could feel it. I was a slut. This woman owned my sexual being. She had created the lust inside me that effectively meant that she owned all of me. \n\n\"I am going to spank you.\" Oh God!! I didn't know what to do or say. My body trembled and my bell tinkled. She looked at me. \"Not for what you did wrong. That is passed. Over with, forgotten. This will not be a punishment. I want to spank you. Simply that.\" I remembered earlier when she had smacked the flesh of my bald cunt. She didn't order me or threaten me. Just done as she knew she could. As she knew she was entitled to. I knew she was.\n\nMy breathing was shallow as, eventually, I stepped forward, aware of the fullness of my labia as I did so. There is no lady-like way to present oneself over someone's knee. I tried but of course within seconds I was very aware of the humiliation that was bound up with complying with her desire. Mistress lifted her skirt high on her thigh as I stood to the side and leant forward onto her and bent my knees. The weight of my stomach gradually placed onto her legs and I placed my hands on the floor. I felt her skin against my stomach, felt the pile of the carpet on my hands and toes. My knees off the ground, my tits hanging feeling heavy. The flesh of my mound was stretched slightly as it hung over her leg. Most of all I felt the humiliation of my position. So totally humiliating. The total and utter acquiescence that I offered to her. I felt so open and completely defenceless. I felt like a small girl. My bottom was being offered up to her. I was horny. She would be able to see my bottom and the fleshiness of my sex. I was being made to thrust them up to her. I stifled a sob. Fear and excitement. It was hard to bear. As was the secret knowledge that I was excited by this. That I wanted to give myself, that I wanted the humiliation, that it aroused some deep lust in me. Yes that was hard and in some way I was looking forward to the pain somehow making up for my disgusting desires.",
        "One hand in the small of my back restrained me. Her other hand slid over the taut skin of my buttocks, almost lovingly. She had me spread my thighs and of course I did. I could imagine how I looked to her, my needy cunt ripe and available, my bottom hole squeezed tight as it was watched. Another silent sob shuddered through me. Mistress was speaking though I was unaware of her words simply the placating tones. There was a noise in my ears as blood pumped. I felt aware of so much, the texture of the carpet, the pressure against my skin, the blood in my ears, a draught between my spread thighs, the pulsing of my sex, the ache in my stomach. The rest of life didn't exist. My focus had been narrowed. The hand caressed lovingly, over and over. Time stopped as she touched me.\n\nSuddenly, almost without the gap between caress and smack I felt her spank me. Three times in rapid succession on one cheek. Surprised. Hurt. Stinging. Not too much I realised. Actually it left me looking forward to the next. Curious. Her hand on me again, caressing over the skin. Again. The other cheek. Another three. Very slowly building. She built it so slowly. Each set a little harder, my cheeks a little hotter. My body beginning to jerk in response. Every now and again her hand caressing over my skin again. Thighs and buttocks. Near my sex but not on it. Feet off the floor. Wanting to rise, not able to. Mouth open. Hands on my thighs spreading them, either wider or apart again, I wasn't sure. Again and again it happened. My eyes watered. My nose and mouth ran. I cried out. My bottom was spanked over and over. Noises came from me. It was so hot. It was submission. The giving up, the lovely heat taking me over. \n\nThe hand spanked and caressed. I couldn't tell which was which. Pushed up for both. My entire hip region was so hot, heated, pulsing. I didn't know when it had happened but it heated my cunt too. So hot and horny. Ripples of pleasure ran through me. My cunt dribbling juices. Mistress held me tight and I felt safe in her control. Safe and loved and so horny. \n\n\"You liked that little sub slut, didn't you?\"\n\n\"Yes Mistress.\" I finally breathed out the words. I felt in a strange safe submissive space. Nothing else existed. Just my submission.\n\nHer hand caressed over my burning buttocks for long minutes and finally slid between my thighs. I was soaking and her fingers found my secret. I sobbed once more in shame but I jerked wanting her fingers to fuck.\n\nShe held hold two fingers steady inside me and had me try and clench and relax my muscles. It was not easy in my position. My muscles grew tired but I had to continue. Then I had to show her my encouragement as she, very slowly, moved her fingers in and out of me. I begged. I grunted. I pleaded. My body jerked, pushed, leaked. I was being held on the edge of orgasm. I begging like a little girl but I was having trouble forming any rational thoughts with my cunt throbbing, my hard nipples screaming to be caressed. I had to climax, and nothing else mattered. I needed this, and after my spanking nothing else mattered. I was so humiliated obeying my body's lusty needs, instead of thinking like a proper woman, wife. I was such a slut, and to my horror it always felt so great. I loved it.\n\nNext, a finger deep at my other hole. My bottom. My arse. Initially rubbing around and around my anal bud until it gradually relaxed and then inserting more and more each time my body accepted it. My ring so tight. Slowly it entered then retreated only to enter again. I felt like a stuck pig. Her finger inside, the throbbing need in my cunt, my heated buttocks. I sobbed in frustration. I knew that I would do anything to cum. I would cum immediately if she wished it. \n\nSomething cool rubbed around my stretched pink anal ring. Sticky, slippery. A cool hardness pushed. Clenching tight. Pushed again. Again. Again. It was in me. The butt plug. Filling me. Deep. My arse stretched open. Kept open. I felt the flange. I felt the wonderful humiliation so sexually. Her fingers lightly stroked my clit as she spoke. \"Cum for your Mistress.\" I exploded. \n\nIt seemed to go forever. I had two of my most earth shattering climaxes within the same day. It lasted inside my throbbing body for such a long time. I had screamed and thrashed and squirted female juices as she held me. I was such a dirty slut. Hers. I slid off her and licked her right leg clean of my liquids. So much wetness. I loved licking her skin. \n\nAs I licked I could feel that thing in my bottom all the time, the butt plug. It was impossible to forget. Impossible to forget what I was now. She had said that she would not be happy if I allowed it to slip out, that I must retain it. I couldn't imagine it would ever come out. She told me it was only the smallest, yet it felt huge. I would have to take the others when I got used to this one, if I forgot it was there. I couldn't imagine ever being able to forget. It was constant, that awareness, feeling stretched, open, knowing she could see the strong red plastic advertising its presence in me. I felt so subservient after the spanking and with this inside me.\n\nMy leash was tugged. I was told to crawl. Like a bitch. Her bitch. I noticed that she too appeared flushed. My thighs rubbed slickly against each other as I was led like a bitch dog up the stairs and into her bedroom. The room seemed hot. My blood seemed to pump so loudly. I was made to get onto the bed and kneel. Mistress let go of me telling me to stay with my hips thrust high for her. \n\nI could hear Mistress behind me. I wanted to be her slut. That was all that mattered. I was in a haze of sexual fulfilment still. A drawer opened. Mistress beside me. Her skirt removed. Cuffs again. She fastened them on my wrists and ankles as I knelt obediently still. Again she moved away and I could hear her undressing her remaining clothes. I wanted to look but she was directly behind and I felt as if somehow I shouldn't. With me again. Moved further onto the bed. My knees spread wide. My cunt and plug on view. My lips feeling thick and bloated. The plug feeling so big and unnatural.\n\nMistress had a black cock! I saw it out of the corner of my eye! Mistress with a cock. A black one! My mind wasn't working properly. I felt my arms being moved. Still trying to digest it all I complied. Mistress had a strap-on sticking from her. A black thong disappeared between her buttocks, filled the front with this amazing realistic cock sticking out. I stared at it as my wrists were taken and pulled down between my legs. They were fastened to the insides of my ankles. My face was pressed against the bed in the position I was in. I felt her lift my hips higher, more prominently offered. I felt debased. I couldn't move much at all. The cock bobbled in front of me and was gone. The bed moved slightly as she climbed on. I felt it then. It was between my lips! Just resting there. I wasn't moving or breathing. I expected it to be cool but it wasn't. Mistress's hands caressed my hot buttocks. Where I had been spanked. Like a naughty girl. Cool against the heat. But I wasn't a girl now. I was a bitch. On heat. Mistress was going to fuck me. I needed her to fuck me. I wanted it. Wanted to feel her use of me. \n\n\"I am going to fuck you. I am going to fuck you like the bitch in heat that you are.\" She knew. She knew.\n\n\"Yes. Oh god yes! Please. Please.\"\n\n\"This time you may come freely slut.\"\n\nI must have pushed back on it. Mistress laughed softly and I felt the cock filling me. Stretching me. I could feel the plug and the cock. So stretched behind. Oh god. Mistress hadn't moved. It was me. Moving the only way I could move. Rocking onto it further. Mistress held me by my hair.\n\nMistress than shoved the cock into me, filling me completely. Strangely it didn't feel like a real cock. It was obviously a dildo. It was obvious that I was accepting and rejoicing in having my cunt used by anything that was like a cock in the slightest. It was so obvious I was submissive. I heard a little tinkling as my neck moved. The thing in my behind felt huge. It was separated from Mistress only by a thin membrane. I was being opened twice at the same time. I found myself blubbering, murmuring incoherently, pressing to be filled. My mind flashed back to the time I had whored for her with Andrew, being fucked on all fours but this was more far intense, more debasing, more fulfilling. The first few thrusts were firm, my cunt accepting. My anal ring was squeezing rhythmically. My tits squashed into the bed. Gradually my taking became less gentle or loving, not like making love to my husband, I was being fucked. My body used. Pounding now. Taking. Mistress was slapping my bottom with her hand. I cried out. Whimpers. Crying out. Mistress slammed the cock in and out. My two holes felt enormous and open. I was on a different planet. I was being fucked by Mistress. Used. Fucked. Her toy. Her fuck toy. Hers. Within minutes I was screaming out in orgasm. It went on and on. Her hands holding my buttocks for greater access. Not letting up, it was a hard fuck. It was what I needed. I responded truly like a bitch in heat. Somewhere in the red mist that was all around me I heard the soft grunts of Mistress coming. It was enough to make me buck in orgasm yet again. Mistress leant over my back. \"You are a good slut\".\n\nAfter we had knelt there, joined and content and recovering, Mistress pulled out of me to my moans of complaint, not wanting to be empty again. I could hardly keep awake my body and mind was exhausted, but Mistress removed the strap on. Still bound after being used she had me clean it with her mouth. Licking our juices. I didn't realise before this that there had been a dildo on the inside, in Mistress too, as she fucked me. She gentled me, petted my hair in the way a person would pet a favoured animal as my mouth worked, as she fed it to me. I had completely submitted to this woman, leaving no part of my soul unexposed. I belonged. She owned.\n\nI must have slept for a few moments in my bonds, still kneeling, still caked in my juices, still presenting myself. I felt her lips on me, on my back and buttocks. I felt hands rubbing soothing lotion to my buttocks, to my cunt and mound. I wanted time to stop. I was unfastened though my cuffs were kept on around me and I was allowed to stretch out on the bed. Fingers wormed at my plug and pulled. It was so humiliating. I felt myself opened wider again as it came out and then remain fully open to the air. I was sent to clean it in the bathroom. My legs felt weak as I moved. I needed to keep them open. I washed it in the sink carefully. On returning Mistress had covered her beautiful body in her robe. With only a gesture I lay down again. Mistress lay with me. My body was exhausted but I did not feel drowsy any more. If I had been masturbating the amount that Mistress had used me I would feel raw but I didn't. I felt a dull ache and a tenderness inside but I still couldn't believe the difference.\n\n\"You like my cock don't you?\"\n\n\"Yes Mistress.\" \n\nI felt ridiculously shy as she looked at me. Her eyes held my eyes and then I watched as they roamed my body. Suddenly I became aware that I had parted my legs. Oh god. Without being told. Just tin case she wanted to have the sight of me. Wide for her. She leant forward, and kissed me hard on my mouth, and pushed her tongue into my waiting opening. I couldn't believe the way my body behaved any more. I felt another spasm inside me. It wouldn't stop. I needed to let my body relax but Mistress had me in her power. I was returning her kiss with passion, and our passionately French kiss lasted for long minutes. My mouth remained open after she pulled up from me and her hand, almost absently caressed my breast. I almost closed my eyes but I didn't want to lose sight of her.\n\nWe ate. Preparing dinner together. Me totally naked still, Mistress in her underwear and robe. There was no need for words. We ate as music played and our bodies still throbbed contentedly. \n\nAfter I was made to fetch my bowl and pee into it as Mistress watched. Squatted and peed. Keeping my thighs nice and wide so Mistress could see. Standing and moving to her, bending my knees and spreading to be wiped. Stomach tensing and un-tensing. I emptied my bowl and we moved into the lounge. Mistress gave me a cushion and a hard backed A4 notebook. I was made to kneel before the coffee table in the lounge on a cushion. There was a surprise as I clenched my buttocks. No plug opening me. That constant reminder that freedom was blocked for me, that I was opened all the time for and by another. It was something that had been with me regardless of what I was doing. I could squeeze together now I noticed, initially the muscles had refused to go back immediately. \n\nThe A4 black book was before me together with a pen. I was to write a type of journal. Not exactly a diary as far as I could gather, rather like thoughts on directed topics. First I had to write an acceptance and a description of my position as her sub. Mistress lay on the sofa and read a book. I was left to my task.\n\nWriting and thinking made me reflect deeper and begin to realise more. In many ways I had changed more than I had thought it would. I was beginning to be obedient. I felt considerable pleasure when Mistress was pleased with me. I had accepted more control over my actions than I would have considered possible before. Not only that but I could not hide the knowledge that giving up of control and making myself sexually available to her was something my body craved. Simple things like giving up control over what I wore or didn't wear. I liked my body on display for her, for her to use, for her to enjoy. Even more complex things like allowing Mistress to control when I could or couldn't orgasm excited me tremendously. I had never under any circumstances expected to be able to put up with being spanked yet I had been aroused by the slow build up of the pain and the differences between pain and pleasure had completely blurred. In some ways that frightened me. I would gladly drape myself over her thighs again now! In fact it made me hot, just thinking of it. I stole a glance at her and was caught. Blushing I concentrated again.\n\nI had fucked Andrew for her, on her command, just because she wanted me to, at the time and exactly in the manner she had determined. I had whored. For her. Would she expect me to do it again? With other people? After all I had also demonstrated to someone outside our relationship, the girl in the coffee bar, what I was at Mistress's direction. I hadn't refused even though Mistress hadn't intimated that something like that may happen. Although humiliated I knew that I was intensely aroused by the episode. I had even flashed to a man in the sex shop. God I was really a slut. There was no denying that now. What would the people who had seen evidence of my disgusting behaviour think of me? I knew. What else but what I was. I wondered if she would make me do other things. What would she expect? Would she expect me to show them my body? Naked? Show them more? Fingering like I did for the girl openly? Other things? Oh god. \n\nSuddenly I felt Mistress's fingers on my sex. On my wet lips. Laughing lightly she took the book and closed it. She sent me upstairs to run a bath and she gave me instructions as to which bath oils to put in too. Standing, my knees were stiff and I needed to flex them. My little bell tinkled. As I reached the door, \"You wont touch yourself will you my little slut? I will be most unhappy if you touch without permission.\" I ran her bath, kneeling beside the large modern bath, knowing my smouldering arousal but needing to control myself.\n\nMistress came in, her robe now her only clothing until it was hung on the wall. She stepped into the bath and I felt so proud of my Mistress's body. Still kneeling I was surprised as she quickly washed herself intimately and then over the rest of her body. I was even more surprised when she quickly stepped out and told me to dry her. I loved doing that, feeling her body under the soft towel. Still naked she ordered me into the bath. I complied and stood in the hot perfumed water. Mistress wrapped her robe around herself, left, coming back with the black book. I felt her fingers at my throat and the collar was removed. She told me lay back in the water and relax. It felt divine. The water and oils played over my skin and into my muscles. Mistress had sat behind me on the covered toilet and was reading. \n\nI became aware of Mistress at my side. She had slipped out of the top of her robe, allowing it to hang from the tie belt. Her breasts were beautiful. Her nipples dark. She knelt and my eyes widened as I felt her washing me.\n\n\"Mistress?\"\n\n\"Be quiet. I know what you are thinking. I will do what pleases me.\"\n\nHer hands slid over me, cleaning. Inside too. But they made me feel drowsy in their caring and attention. I sat, knelt, turned as directed. I felt loved. She dried my hair and body, my throat lifted as she fastened her collar around my neck again. Her bitch. My cunt and nipples were coated in creams. I felt them soothing. She cared so much.\n\nBefore being allowed into her bed however I was made to kneel and take the door knob in my mouth again. My wrists were fastened behind me.\n\n\"Did I give you permission to display your body to the man in the shop?\" My eyes widened and I remembered my notes. I attempted to shake my head and grunted a negative around the ball filling my mouth. Saliva drooled from my mouth. \"The only time my possession is displayed is with my permission. You will display that sluttish body only when and to whom I wish. Understand?\" Nodding and murmuring. I was left and I cried. \n\nLater, in the dark, under the sheet of her bed, I lay in her arms naked. Her mouth by my ear, whispering. \n\n\"Yes, don't worry my dirty little slut, I want to show you off. I will expect you to display your hungry body and your slutty habits when I tell you.\" My mouth was dry. I could hardly breathe. \"In front of anyone I want. With anyone I want. You'll do everything wont you?\" My head nodding in the dark against her face. \"I want to feel proud to be able to display you as my very obedient, dirty, submissive whore. Do you want to make me feel proud, my sub?\"\n\nI coughed as I tried to speak. Swallowing I managed. \"Yes. Oh god yes. I want to make you proud of me. I'll be good, do anything Mistress.\" Her mouth covered mine, possessed me. \n\nChapter 4\n\nIn the morning Mistress took the leash that hung from my collar again, pulling me with her to the back door. On with my shoes. Out of the back door. Outside. Could others see my nakedness? The air was cooler than inside though already warming in the sun. My nipples reacted suddenly to the change. My skin prickled with goose bumps. Outside! I looked around desperately. Trees stopped prying eyes all around. I relaxed a fraction. It was mainly lawn outside here, with flower beds in the distance and a patio. To the side there was a double child's swing set in concrete, though without the chain or seat on one of them. Opposite the swing was an outbuilding of some kind. A tree which grew half way down the lawn, near the centre, vaguely separated the garden into an area near the house and that beyond. I was pulled to the side of the garden under a tree. I stood just on the grass next to well raked soil next to Mistress feeling very vulnerable in the open air totally naked. I was beginning to cool.\n\n\n\"This is the area of your outside toilet. You will do it here and face that kitchen window with your legs parted presenting me with a view of you should I wish to watch. I can see you from the window. If you do more than pee you are to ask for the trowel and dig a hole and bury it. Is there anything you do not understand, slut?\"\n\n\"No Mistress.\" I stood shocked and embarrassed. Shaking. My bell tinkled occasionally and I could feel my tits vibrating. \"May I use the trowel Mistress?\" I could feel my face ablaze. ",
        "\"Yes. It's by the back door. Fetch it and come back.\" I did aware of her watching my body, both going and coming back.\n\nRemembering to spread my legs wide I squatted by the edge of the grass over the earth after scooping a shallow hole. I squatted and felt so utterly foolish and so utterly vulnerable. Mistress watched me all the time. Looked at my open legs, at my cunt, at my tits. Eventually, after I was able to perform my tasks, and humiliatingly bent over for Mistress to wipe me, we went inside again. I felt so submissive then.\n\nMistress, now dressed in a black bustier and black thong but nothing else, looking ravishing, sat on the sofa and read the papers. I had to lay with my head and chest near her, my legs over the arm. As she read she absently fondled me. Her fingers would caress or squeeze my tits and sometimes they would slide into my mouth. It was low key but it was arousing me. Anything she did seemed to. I had seemingly forgotten almost everything else. Desire filled me all the time I was awake.\n\nSuddenly I heard her quiet voice. \"I want to flog you. Will you allow me to?\" I stared up at her mesmerized, uncomprehending. I slowly took it in. \"Will you?\"\n\n\"Yes. I think so. Yes.\" Mouth dry.\n\n\"You must ask me. I want you to want my pleasure. This isn't for punishment.\"\n\nWe stared at each other for long moments in silence. \"Yes Mistress. Please flog me.\" I didn't know what it was but I would do it.\n\nWe went to the bedroom. She took it from a drawer, the flogger. Gave it to me to touch. It was leather, with tails of about a foot and a half long. It smelt strongly of leather and the tails seemed to be about half and inch or so wide. The handle had braided leather covering it. It scared me. It felt quite warm in my hand. She took it back from me, rubbed the handle lightly against my naked mound, between my legs. My body succumbed to the slightest contact disgracefully. \n\n\"I don't want to tie you. I want you freely accepting. Can you do it?\" \n\nI looked at her numbly and nodded, hoping. She looked at me and moved away, leaving me standing alone. She came back with a glass of cold water. I drank, my throat like a desert. She made me lay face down on the bed. My heart was racing. When I was spanked she was there still touching me. I was over her thighs. This time I was more alone. \n\nIt began slowly, lightly over my buttocks as I lay there on the bed for her. I was desperate to hold my arms high up to the top of the bed as instructed and my legs only slightly apart and straight. She ran the tails over my skin making me feel quite loved then I saw her hold the tips in her free hand before they fell over my bottom. It stung but was not too bad. Again. Again. I felt myself heat up. Again the tips caressed me, then again the feel of the flogging. She took the flogger in her hand with each stroke, pulling the strands together, then letting them arc onto my flesh with a flick of her wrist. The tips moved up and down my back and thighs. I was hurting a bit now but it wasn't something I was concerned about, quite the opposite. It went on and on, building. Her fingers touched my sex, took me. Roused my cunt. Flogged me. Fingered, flogged, fingered, flogged.\n\nWhat was happening to me? I gradually was relaxing to it, wanting it, pushing up to it. My body felt as though I was flying. I trusted my Mistress. She knew what I needed, what I would cope with. My skin felt as if it was scorched and glowing. It went on and on. Mistress varied it, breaking off and caressing or scratching me at times, varying the bite of the tails on me. She would finger me, finger my clit and sink into my moist throbbing cavern. Then restart. I was so aroused. I was losing myself in it. \n\nMistress was saying something. I couldn't tell what it was. She turned me over. The sheets cool on my hot skin. Oh God. Hands high, legs apart again without being told. My right hand was taken and placed under my thigh and to my sopping cunt, rubbed there. I began fingering myself obediently. The flogger came down on my tits. I arched and cried out. Again and again. Fingering and flogged. I was losing myself. I knew I was arching and thrusting up. I could feel my pelvic thrusts as if being fucked. I saw Mistress touching herself too. My flogging was arousing her. I wanted it for her. Wanted so much. \n\nMy tits were stinging, hot, felt so big, so tight. When I looked I was shocked to see them such a bright pink. Oh god. I was near, sliding toward an orgasm. Fingers slapped away. Thighs further pushed apart. Still thrusting lewdly. Sudden shock as the flogger landed between my legs. I screamed, closed my legs. They were forced apart. I was still sliding nearer and nearer to cumming! Again and again. I was squeezing my burning tits. Everything seemed red under my eyelids. The sensations were so intense. My clit was huge and stinging. From somewhere I heard her telling me to cum, I couldn't stop myself. I broke, began to spasm, my orgasm radiating out of my pussy filling my body and mind. Mistress kept up the flogging; not letting me let up. I lost all track of time and space, awash in my feelings. I was grunting. Grunting and moaning and sobbing. I was bucking uncontrollably on the bed until I felt arms holding me. I came again and again in her arms just lying there safe.\n\nAt some point she moved, and rubbed my tortured skin with cream. She fastened my wrists together behind me and I was strangely comforted by that. Even when she refitted the plug in my anus I felt as though it was as it should be. \n\nShe lay again, naked, my mouth suckling her beautiful breast. I was so safe. Later, my wrists still fastened behind me and unable to move freely I rearranged my aching body and stretched my heated skin and slowly pleasured Mistress with my mouth. I loved it. The taste of her, the feel of her slippery flesh, the knowledge that I was pleasing her as she trembled and sighed due to my ministrations. My Mistress, my owner. I was safe. I slept between her thighs.\n\nthank you for reading my story. i hope you became as aroused reading it as i did writing it. There will be another part eventually.\n\nm\n\nxxx"
    ],
    "authorname": "emma_sub",
    "tags": [
        "mistress submissive",
        "control mistress",
        "excited slut",
        "eyes blurred",
        "vagina pulsed",
        "remove knickers",
        "easy slut",
        "cupped left",
        "knowing control",
        "fastened collar"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/emma-is-used-in-the-house-of-her-mistress"
}