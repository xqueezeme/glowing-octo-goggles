{
    "title": "The Mist of Time Ch. 22-Epilogue",
    "pages": [
        "CHAPTER 22\n\nI enjoyed Brian's writing although I thought it somewhat fanciful. Bella was in tears when she finished reading. \"I feel so much for Adelaide.\" She declared. \"Finding love with the man she couldn't have and yet devoting her life to him.\" She stopped and looked at me. \"When we are married we must go up to the old house and tell them.\" I must have looked as if she had lost her senses. \"If we kept Bees we would have to tell them, it's sort of the same thing.\" I shrugged my shoulders, to me it sounded ridiculous, but if that is what Bella wants, I shall humour her.\n\nI had of course gone to see Andy asking him for permission to marry his daughter. He sighed resignedly. \"I appreciate your asking, Daniel, but you have to understand that my permission or not is completely superfluous. Bella will do whatever she wants.\"\n\n\"Well yes, Andy, however I would like to know if you have any objection?\"\n\nHe shook his head and one hand wafted. \"Objection? Of course not. Bella gets happy and I at last get someone with whom I can have serious conversation.\" He changed the topic suddenly. \"Your girl Tina came to see me. I was amazed! Are you sure she isn't one of those hackers we read about?\"\n\nI laughed. \"No. She's a devil for getting information. She once worked for a solicitor, doing conveyancing and she knows her way around the Land Registry site and associated sites. If you want to know who owns what, Tina will find it for you.\" I paused for a brief moment. \"Thinking about it, I wouldn't put it past her to hack.\"\n\n\"No wonder you are successful.\"\n\n\"Please, Andy. Do not ever mention that to Tina. I get enough flak from her already, I don't need more.\"\n\nAndy laughed. \"And you are getting Bella now. Your life is going to be a constant struggle with both of them around.\"\n\n\"Don't I know it.\"\n\nLily had given Tina the name of a surgeon recommended by her reconstructive surgeon and she had a consultation and for the last few days she had been in hospital. Before going she had demanded that Bella and I would not marry until she was back and could attend the wedding, \"with my new tits!\" We had decided to get married at the Registry Office in Braintree. Neither of us was particularly religious and with deference to Andy, it may have been embarrassing for him as he couldn't have walked Bella down the aisle. So it was when Tina returned from her operation our wedding was a double celebration. The reception was at 'Bon Vivant' where Tina gave me a particularly close hug, saying, \"I can get closer to you now I haven't got all that mammary stuff in front of me.\"\n\nI took Bella away to Paris for our honeymoon. We did all the sights, the Louvre, the Tuileries, the Eiffel Tower, a moonlight cruise along the Seine and at Bella's insistence took in the show at the Folies Begere. That night she bemoaned her lack of bosom compared with some of the bare-breasted dancers on stage. It took me some very delightful time to prove that what she had was as sensitive as any and that I loved what she had. It was all very exciting, although for me sitting at one of the many pavement restaurants, sipping coffee and just watching Paris go by was the best. I could certainly take to the boulevardier life.\n\nWe returned to quite a backlog of work, me to deal with property and Bella to exercising horses. Andy had a very good mare, from an excellent sire, and with his mare coming into season he was looking for a stallion to serve her. Thus Bella was quite busy seeking the right stallion. She was also making sure that her personal stallion performed if not every night but regularly. I needed another few hours of sleep some mornings, whereas Bella was seemingly energised by her nights of passion. It was therefore some weeks before Bella decided that we should walk up to the site of the old house. I was somewhat self-conscious at the idea, Bella however deemed that our telling the spirits of my family was important.\n\nThe weather had been for some days inclement, with dark clouds full of rain rolling in from the west and much of that rain fell upon us. Eventually the skies cleared as high pressure gradually banished the depression to our Nordic neighbours of Denmark and Norway. We set out early, although the dew had already been burned off by the sun. As we climbed the hill the warmth of the sun together with our exertions made me wish that we had brought some water. However we gained the top of the hill and rested gathering our breathing to a semblance of normality. The view, whilst nothing to compare with the West Country, Wales or the northern counties of England was good enough to make one stop and think. When before I had come up to the ruins of the old house I had sensed something; a feeling of being cut off from the surroundings. It was something like when you got water in your ears and your hearing appears to be coming through a muffle. At that moment Bella hugged me, her smile bringing my smile in return. \"Ok, Mrs. Chandler. You have got me here now what do you intend to do?\"\n\nSuddenly she was crestfallen. \"I don't know.\" She cried plaintively. \"I had this idea of telling them that we are married and that I am almost sure I am already pregnant.\" That was news to me but before I could say anything she went on. \"Now having got here, I don't know what to say or do.\"\n\n\"Well, let's deal with that in a moment. You think you are pregnant?\"\n\nShe smiled. \"I am pretty certain. Do you mind, Daniel?\"\n\n\"Of course not. In fact I would be surprised if you were not pregnant, considering the frequency you attack me.\"\n\nBella pouted. \"So you don't like it?\"\n\n\"On the contrary, I am not complaining at all.\"\n\n\"Good. I like it too. Tina says that Aleksy is getting more amorous since she had the reduction. I thought men liked big boobs?\"\n\n\"Every man is different. For me, you are perfect. Just think about it, when you are sixty or so your pretty boobs will still be pert. They will not be hanging around your waist and I will find as much pleasure with them as I do now.\"\n\n\"Hmm. Pretty boobs? What are you trying for now?\"\n\n\"Well we are alone and no one will see us.\"\n\n\"Dirty man!\" Yet she smiled as she unbuttoned her blouse.\n\nAlfresco love-making is good, but be careful you do not roll over into the stinging nettles. We agreed to rub lotion on each other once we were back at the Dower House. Bella giggled as we walked down the hill. \"I suppose the treatment could be as interesting as the cause.\"\n\n\"Well you did get stung in some interesting places.\" We left leaving the ruins.\n\n\"Well it seems that Chetford is in good hands.\"\n\n\"Yes, Danbury. Although I thought it was the girl who was in good hands, but yes, he has your looks and your sense of duty.\" Danbury turned and addressed the older man standing near with a woman on his arm. They were both dressed in Edwardian style. \"I think he gets that from you, Father.\" He stopped and examined those words. \"I still find it odd to address you thus.\"\n\nThe older man laughed. \"No more than for me to hear you call me so, Danbury. But no, I disagree. I was a steward. I cared for an estate that came down to me in inheritance. I had little to do except pass it on to the next generation intact. This young man, Daniel has used what little he was willed and built an edifice. It would be impudent of me to offer advice to such a man, indeed I would be in awe of him.\"\n\nThe woman hanging on his arm looked up to him with love. \"As I am of you my darling Rupert. Every time I look at you my heart flutters and I thank Heaven for sending you to me.\"\n\n\"Do you know, Adelaide. That is exactly how I feel when I look at you.\"\n\n\"Flatterer!\"\n\n\"No so, my dear. I tell the truth.\"\n\nThe three were joined by another woman, whose features were still forming. Danbury held out his hand. \"Bella, you have joined us.\"\n\n\"I find it strange to effect this transformation.\"\n\n\"Well you are not as used to it as we.\" Remarked Adelaide.\n\n\"I do find it strange, still. Do we never grow old?\"\n\n\"How can we?\" Rejoined Rupert. \"We have the fortune of choosing what age we appear. And I have to say you have chosen very well. Rumour was that you were a beauty and the whispers were correct. Danbury is extremely lucky.\" \n\n\"Not so lucky as Daniel and my great niece. Did you not see them? Rolling around and clothed as nature formed us. If I were alive I think I would have blushed.\"\n\n\"They did seem to enjoy themselves though.\" Adelaide offered. \"My mind recalled such times myself.\"\n\n\"Mama!\"\n\n\"Oh Danbury. How do you think you were born? You were created with love...And with a great deal of pleasure. If you had survived, you and Bella would have discovered the pleasure yourselves.\"\n\nRupert interrupted. \" We should be less open now. I believe that Robert is joining us.\"\n\nRobert did appear. He had always been a solemn boy and man and even now he reflected that disposition with a dour face. Danbury was the first to greet him. \"Robert! Why the glum face? We were discussing the success of your great grandson.\"\n\n\"Oh I am happy for him, but to choose Chetford? This hateful place. He could have bought anywhere. Why Chetford?\"\n\n\"Robert.\" Rupert chided him. \"Daniel does not know the history, indeed he didn't even know that the estate he bought was Chandler land. However he is over-writing the bad things and creating a new story. He's married the Swinson girl and they are obviously very happy.\"\n\n\"And she is pregnant!\" Added Adelaide.\n\n\"Pregnant?\" Danbury said the word which was on all the other's lips.\n\n\"Did you not hear her? \"Adelaide asked. \"She said she was pregnant.\"\n\nRobert cheered up. \"Forgive my gloom. I was too much in the past. You are right, Papa. A child eh? He is writing a new chapter. Hopefully a much happier story than ours.\"\n\n\"I wish I could have done more for you, my sons. And it would make me most happy if he could know the truth of his parentage.\" Rupert sounded quite melancholy.\n\n\"We understand why, Father. You had constraints.\" Robert consoled his father. \"You made certain that we were comfortable, what else could you do? Perhaps sometime he will know the truth.\"\n\nEPILOGUE\n\nBrian Prescott had continued his research and eventually was able to update me with details of Robert's later years. Reginald Smith had bequeathed him Upton Lodge and the drapery business, and Robert kept that until he retired when his son Douglas took over. This was after World War two. Douglas continued in the family business intending to have his son Dennis take over after him. Dennis, as I knew would not settle for a mundane small business in a country town and he sold the business. There was no detail of how he worked after that, though I am sure that my mother could have been enlightening on that subject. Brian could not find any record about Dennis apart from an article in the Colchester Gazette that mentioned that the Midland Bank had foreclosed on Upton Lodge. It would appear that my father was not paying his debts even then.\n\nOur son was born in the April of next year. We argued just a little over a name for him, but we eventually settled our difference and agreed on a name. Bella was adamant that when the weather was right we should go up the hill and introduce our son to our ancestors. Remembering what happened the last time she sought to do that I was quite happy, but determined to avoid the stinging nettles this time.\n\nThus it was that one day in June we settled the baby in a carry-cot and between us we carried him up the hillock. It was one of those rare days that there was no clouds whatsoever in the sky and the temperature held at a comfortable ambience of some seventy degrees. I again felt that feeling of disassociation as if we were shuttered within a cocoon. Bella caught my mood as we neared the top. \"What is it Daniel?\"\n\n\"I don't know. Sometimes when I come up here, I get the feeling that I have been cut off from the rest of the locality.\"\n\n\"You sense it too?\" Bella seemed relieved. \"I thought it was just me. I put it down to hormones.\"\n\nI laughed to change the mood. \"Ah hormones! Well I don't think we can repeat our last escapade, not with the baby here.\"\n\nWe arrived at the top of the hillock and searched for somewhere we could put the carry-cot down. I picked up our son and cuddled him to my chest. He lay there looking at me, that incurious look that all babies have. \"So what are you going to say?\" Bella asked.\n\n\"Hang on! I thought it was you who was going to talk.\" How typical of women. Deciding on an action yet standing back and asking the man to make it work.\n\n\"It shouldn't be me. You are the descendant, you talk to your relatives.\" Bella's logic was as usual typically female.\n\n\"But this was your idea.\"\n\n\"Yes. But I always thought that you would do the talking.\"\n\n\"Thanks.\" I replied flatly. \"I think another smacked bottom is in order.\"\n\nHer eyes twinkled. \"Oh goody. I like that. Tonight?\" She came and embraced us both, the baby and me and then took the baby from me.\n\nI put my arm around Bella's waist and prepared to speak. I felt like a complete idiot. I cleared my throat and spoke quite loudly. \"I am Daniel Chandler, your descendant and this lovely lady at my side is Annabel, who was born Swinson. Here in my wife's arms is our child, a boy and we have brought him here to meet his ancestors. He is Rupert after his Great, great, great grandfather.\"\n\nSuddenly the feeling of the cocoon strengthened. A slight mist hovered just above the ground. Slowly it reformed and out of the mist two shapes emerged. Gradually they became sentient and I realized that I was looking at Rupert St.John Grantley, by his side was a beautiful woman who clung to his arm. I assumed that she was Lady Adelaide. One part of my mind made that assessment coolly and logically. The other side of my mind was in turmoil. Bella also was in turmoil, I could feel her shaking. The cool side of my mind told me that I was shaking too. Whatever have we got into? \"Daniel, what is happening?\" She whispered in a fearful voice.\n\n\"I have no idea.\" Wondering at the same time what in Hell had we done to cause these apparitions.\n\nRupert took a half step forward. \"You have called your son, Rupert?\" A strong voice yet with a slight quaver of emotion.\n\n\"Y... ye... yes.\" I stuttered. \n\n\"For any reason?\" The apparition asked.\n\nI took a deep breath and managed to speak normally, well as normally as one could under the circumstances. \"If you are Rupert St.John Grantley, then yes there is a reason.\n\nHe nodded his head slightly. \"I am Grantley.\"\n\n\"In that case we named our son after you.\"\n\n\"You know who I am?\"\n\n\"Yes. You are my great, great grandfather.\"\n\nHe was shocked now. \"You know?\"\n\n\"About you, Lady Adelaide, Sir Dashwood, Danbury and Robert. Yes we know.\"\n\n\"How?\"\n\n\"It is a long story, but it started when I was shown a photo of Sir Danbury.\"\n\nA glimmer of understanding came to Rupert's face. \"Yes, of course. There is no denying that somehow you two must be related.\"\n\n\"Yes, something more than having Lady Adelaide in common.\" I took a step towards Lady Adelaide. \"You were described as a beauty and the descriptions were right, grand mama.\"\n\nShe smiled, clasping her hands together to her breast. \"Oh! How it thrills me to hear you call me so. Rupert! Our great, great, grandson has inherited your flattering tongue.\"\n\n\"No my dear. He speaks the truth as I do. Judging from Daniel's choice of wife he is a connoisseur of beauty as well.\" \n\nShe flashed a glance of love to Rupert then addressed Bella and I. \"We have watched you for some time now and I am so happy that you are together. It seems that it was ordained that a Chandler and a Swinson would marry. May I see the baby?\" \n\n\"Would you like to hold him?\" Bella suggested as she moved closer.\n\n\"I would love to do so, but sadly I am a spectre and not physical.\" Bella closed to her and turned so Adelaide could see the child. \"Oh, he's so lovely. Look Rupert, our great, great, great grandson.\" \n\nI talked to Rupert as Bella and Adelaide cooed and fussed over the child. \"I came up here to pander to Bella's idea that we should talk to our ancestors. I didn't believe for a moment that we actually could, so if I sounded a little tongue-tied at first, please forgive me.\n\nHe laughed. \"In your shoes, Daniel, I would have been as well. There is much that you learn once you cross over, but I cannot tell you. You will find that for yourself. In many ways it was you and Bella coming up here that made it possible. We could see you and hear you, but couldn't find a way across the divide. It was your determination to speak to us that brought about our appearance. If the experience has not unsettled you too much come again, call for us and there a good chance that we can appear. I urge you to do that. Perhaps you will see your great grandfather Robert and Bella her great aunt Arabella.\"\n\n\"Bella would like that, I am sure.\"\n\nWe were interrupted by an exclamation from Adelaide. \"You have my ring. Rupert! Bella is wearing my ring.\" \n\nRupert took a step towards them. \"How interesting. How did you come by that, Bella?\"\n\n\"It is a family heirloom.\" Explained Bella. \"My great aunt Arabella wore it all her life and when Daniel and I became engaged I thought it would be nice to wear as an engagement ring.\"\n\nAdelaide smiled. \"Of course. Rupert bought the ring for me, although I could only wear it when away from Chetford. It is valuable and if Dashwood had seen it he would have took it from me and no doubt sell it. When Danbury told me of his intentions to your aunt, I gave him the ring to give to Arabella. Now you have it, and to me it is entirely fitting that you do.\"\n\nRupert brought the conversation to a close. \"Our time is limited. Already I can sense that the power that forms us is weakening. Adelaide!\"\n\n\"Yes my dearest, we have to go.\"\n\n\"Remember, Daniel come up and call out to us, there is much more to say and hear.\"\n\nBella joined me as with a smile Adelaide took Rupert's arm. She started to say something. \"Come aga...\" They vanished. \n\nBella and I walked back down the hill with our son. I could feel Bella's emotions tumbling around. Mine were the same. I could not decide whether we had seen these apparitions or something in our breakfast had affected us like a mind-bending drug. That such a substance would be unlikely to affect us similarly was too logical for my mind to grasp at this moment. Bella voiced for both of us. \"I don't think I shall say anything to anyone. No one would believe us.\"\n\n\"I have little doubt about that.\"\n\nTwo days later, I pulled Brian's manuscript from the filing and slipped it into an envelope. I searched for his address and could not find it. When Tina came in I asked her for his address. She looked perplexed. \"I don't think we have it. Boss. Our correspondence has always been by email.\"\n\n\"Damn. I just wanted to return his manuscript, you did copy it, didn't you?\"\n\n\"Yes, oh Master. It's in the filing under 'Danbury'\"\n\n\"I will phone the Chelmsford Library. They must have it somewhere.\"\n\nI got through to the librarian responsible for the history section. \"My name is Chandler. I wonder if you could help me. I have some correspondence to send to the historian Brian Prescott. Do you have his address by any chance?\"\n\n\"We know of Brian Prescott. We have many of his publications here. He was of great value to the library as he obtained much of the microfilm of back issues of many newspapers. However I cannot give you his address.\"\n\n\"Why? It's a simple request. I just want to return to him a manuscript that he wrote.\"\n\n\"Well, Mr. Chandler it is a simple request, or rather it would be. Brian Prescott died in nineteen fifty-nine.\"\n\nThe End "
    ],
    "authorname": "Kezza67",
    "tags": [
        "mystery",
        "history",
        "doppelganger",
        "romance",
        "ghosts"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-mist-of-time-ch-22-epilogue"
}