{
    "title": "Hot Summer Night Ch. 19",
    "pages": [
        "Hot Summer Night Ch. 19 - Vacation Day 5 \n\nAs a refresher, my name is Mark. I am 43 and in great shape with ripped abs, pecks, back, arms and legs as I work out in my basement gym on a daily basis. I am 6'5\" tall and weigh 230 lbs. My hair is dark brown cut short with blue eyes. My wife Carrie is a smoking hot 43 year old blue eyed blonde who stands 5'10\" in her stocking feet. She has a 38-26-36 figure with large full and pert DD breasts. She has long legs and slim waist and curvy hips. Her hair is shoulder length and is full and wavy. Our daughter Julia will be 19 years old in a couple of weeks and is about to enter college as a freshman next week. She is very slim standing at 5'7\" and weighing around 100 lbs. She has a 32-A bust but has very sexy puffy tits. She has narrow hips and slim waist with long thin legs. She has shoulder length brown hair that is thick and wavy like her mothers. She has huge green eyes and a pouty Angelina Jolie mouth. She is extremely attractive as is her mother. \n\nJulia and her best friend initiated sex with me several weeks ago during the early morning in my bed while my wife faked being asleep next to me (see ch 1). Carrie had been having sex with Julia for some time and felt guilty about that while leaving me on the outside as our sexual and marital relationship continued to erode. I'm not on the outside anymore. Our family relationship is unbelievably strong even if it is unconventional. Read the previous 14 Chapters to fully understand the events of the past several weeks. Chapter15 starts a very hot vacation. Enjoy. \n\nAt six on the dot I was awake and getting out of bed. I dressed as usual for my workout and went to the breakfast buffet and got a coffee and continued on to the gym. I opened the gym door and walked in. As I expected, Angel and Izzy were there working out on the treadmills. I came in and said Hello. \n\nI sat down at one of my bench stations and started working out. I asked how things went in town yesterday. Angel said, \"We had a great time. Roger never enjoys shopping like any man, but he was tolerant. Izzy and I bought so much stuff we don't know if we can get it home in our bags. We may have to buy another bag. \n\nAngel asked how our day was. I said, \"It was an amazing day. I didn't go into any details about Olivia. I did say that Carrie and I had capped of the day with a private hot-tub fuck even though technically it was the start of today. \n\nI asked Angel if there was anything they had hoped to do before they went back to their lives. She stopped the treadmill and turned to look at me. She said, \"Well let me see. Izzy and I had sex with you so I checked that off my list. We have had sex with others down on the beach. What a crazy bunch that group was. I can only think of one thing we haven't done, I guess.\" I stayed quiet and let her finish her thought. \n\nAngel was hemming and hawing and was obviously reticent about continuing this thread of conversation. Finally Izzy just butted it and said, \"We want to have sex with your wife and daughter and we want you guys to be available if we need a cock or two.\" \n\nAngel looked at Izzy and then back at me. She shrugged her shoulders and said, \"What she said.\" \n\nI laughed out loud and noticed that she thought I was laughing at her bucket list item. I stopped and waved my hands and said, \"No. No. No. Wait. I'm laughing because I asked Carrie what her bucket list included that she hadn't done yet this week. She said she wanted a four-way with you and Izzy. I'm not kidding at all.\" \n\nIzzy stopped her treadmill and spun around and said, \"Really. When can we do it?\" \n\nI said, \"Have you said anything to Meat about this.\" Angel looked at Izzy and they both shook their heads. \"Don't you think you should if you want him to be there? I already know the question so I'm in.\" \n\nAngel said, \"Izzy we need to go talk to your dad about this.\" She looked at me and said, \"How about we meet you at the pool later this morning with our answer. OK? It'll have to be by tonight. We go home early in the morning.\" \n\nI said, \"OK. I won't say anything to Carrie until we know so she won't be disappointed if it doesn't work out.\" They both left with a sense of urgency. \n\nI did my one hour workout and every muscle in my body burned when I was done. I stopped at the buffet and ate breakfast. It was 7:20 when I was finishing up. I made a tray for Carrie and Julia to take back to the room. \n\nI ran into Olivia's group coming the other way. Olivia said, \"I was hoping I would run into you this morning.\" She said to the others, \"You go ahead, I'll be right there.\" They continued on their way. Olivia looked around and took my hand and led me into the men's room outside the restaurant. I set the tray on the counter and said, \"What's up.\" \n\nShe came up close to me and pulled herself into my chest and kissed me hard. She said, \"I have been lying in bed all morning since 5:00. I can't stop thinking about your cock and how it felt in me. I have been using the big dildo to fuck myself and I've had so many orgasms I'm a mass of jelly.\" \n\nShe pushed me back to sit on the counter and pulled my shorts down. She immediately went to her knees and sucked my flaccid cock into her mouth. She swallowed it right into her throat and pulled it back out. \"I've been practicing since yesterday afternoon. She jammed my cock back in mouth and gave a furious blowjob and a handjob until my cock was at full attention. She pulled off and said, \"Please fuck me one last time. We go home later this morning. Please. I want to feel the real thing one last time.\" She was pulling down her panties and kicking them aside. \n\nI pushed her down on the floor and spread her legs and knelt down. She was soaking wet, so there was no need for foreplay. She grabbed my cock and pulled me to her pussy. I pushed into her and sank to my balls. She was instantly in orgasm as I started to fuck her hard. She was gasping for air. I could feel her cunt pulsing and grabbing my cock. I fucked her through several orgasms. She was now just throwing her head from side to side as she gasped, \"Oh my God. Yes.. Yessssssss. Oh please. Fuck me forever.\" \n\nI didn't try to hold myself back. I continued fucking her hard and fast. She felt the surge of my cock and she knew I was about to cum. She yelled, \"Yes. Yes. Fill me up with your cum.\" I promptly did just that. She screamed as a flood of cum emptied into her cunt. I was slamming my cock into her trying to pump it deep inside. I continued to fuck her until my cock softened and wouldn't stay in her anymore. Still gasping for air she said, \"Oh my God that was wonderful. Mark, Thank you. I think I love you.\" \n\nI said, \"Olivia darling. You don't love me, you're in lust. You will learn the difference as you get older. Now you get yourself together and go with your friends. OK?\" She gave me a pout and I pulled her up. She pulled on her panties without cleaning herself up. In fact, she reached her hand down and put it in her pussy. Her hand came out with a large glob of cum that had leaked out of her. She carefully applied it to her chin and lower lip. She adjusted herself in the mirror. I looked disgustedly at her and said, \"Now who's bragging.\" I walked out with my tray and headed back to my room. I didn't see Olivia again. \n\nWhen I walked in the room my ladies were up and in the shower. I joined them. Julia wrapped a hand around my cock before I could get under the water sprays. She said, \"Well, I see you have been busy this morning.\" \n\nI told them about running into Olivia on the way back from the restaurant and about her applying cum to her face before she went to meet her friends. Carrie could tell I was upset about it and she hugged me. I said, \"On a brighter note. I ran into Angel and Izzy working out at the gym. It turns out that they both have the same bucket list item that you have and before you get excited, they have to clear it with Meat. They will see us at the pool later with an answer. They go home early in the morning, so it would have to be today tonight.\" \n\nCarrie looked at Julia and said, \"What do you think Jules? Day or night and public or private?\" \n\nJulia said, \"I don't care. It's your bucket list. It's your call mom.\" \n\nWe finished our shower and everyone scurried around to get ready for the day. Carrie asked me which of her bathing suits gave me the biggest hard-on. I told her it was the bright red one with the thong bottom and the triangle patch top that tied behind her neck and back. I suggested that we start at the beach and go in the surf. They agreed. \n\nIt was too early for many people to be on the beach but the men and women who were there couldn't take their eyes off Carrie. Nearly all of them were taking pictures and videos of her. We had a blast body surfing. Every time the run would end Carrie would stand up with tits completely exposed and readjust her top back over her nipples. They were the only things the top covered anyway. I was getting a hard-on which pushed the head of my cock out of the elastic on my left leg. I tried pushing it in and decided the best thing was to let it poke out the top of the suit above my navel. \n\nWe lounged on the beach for quite a while before gathering our towels and heading for the pool. It was 10:00 and the pool-bar would be open. We garnered a lot of attention as we walked toward our usual spot. New people, I assumed. Men's cocks were rising like iron poles to a magnet as my wife walked by; and she was still wearing her bathing suit. She looked magnificent in it though. \n\nWe stood by our chairs and stripped out of our suits. Cameras clicked all around us. Definitely, new people. Many people were sitting around naked but there was no sexual activity in sight. I walked to the bar with dick swinging and ordered our drinks and returned to our seats. \n\nJulia said, \"Let's do like we did at our pool at home when Aunt Rachel and Cousin Sarah were there.\" I smiled and while I stood beside her chair with her drink in my hand, she reached up and started jerking my limp cock. It didn't take long to respond. I glanced around to see everyone close by watching Julia stroke my cock. Several men had their cocks in their hands already stroking theirs. \n\nWhen I was totally hard, Julia pulled my hips closer to her chair and I spilled some of her drink on her shoulder. It was cold but she was hotter and she didn't even flinch. She shoved her mouth onto my cock and started a half-cock blowjob and a one hand handjob. Her lips were stretched and her cheeks were hollow as she took suction on my cock. Out of this rhythm she pushed my entire cock into her mouth and down her throat. She opened her mouth wide and you could see her tongue lathing the underside of my cock and flicking on my balls. \n\nI glanced around and discovered that many of the guys with cocks in their hands now had women bobbing up and down on them. All the others were jacking themselves off. \n\nAfter several moments, Julia pulled back up to the tip and lightly bit the velvety head and grinned broadly. I knew the little imp would do that sometime, it's her BJ signature. \n\nShe gave me one more deep-throat as a couple guys sitting close by groaned as if Julia was blowing them. She pulled completely off my raging hard cock and reached out and took her drink from my hand. She leaned back against her chair and stuck the straw in her mouth and sucked on her drink. She looked up at me, smiled and blew me an 'air kiss'. \n\nI walked over to Carrie's chair to hand the drink in my other hand to her. She looked up at me and put her legs up on the arms of her chair and patted the seat near her crotch. Her pussy lips separated and her clitoris was visible. Her pink inner lips, like the soft petals of a peony were beckoning to me. \n\nAs instructed I sat down facing her with my legs by her hips and feet facing forward on the deck. My cock was pointing slightly above her clit. She never reached for the drink which was still in my hand. She lifted her legs off the chair arms and draped them over my legs used them as leverage to pull her pussy toward my cock. \n\nShe guided my cock into her pussy as she continued to pull herself onto it. Once the head was inside her pussy she pulled hard with her legs against mine and pulled herself up so my cock was buried completely. Her tits were rock hard and her nipples felt like they were piercing my chest. Her arms were around my neck and she was passionately kissing me. I didn't move. She moved her legs so they were wrapped around my back with her feet crossed. \n\nCarrie placed her hands on my pectorals and used her arms to push herself back and then her legs to pull me back on. She continued for several minutes. I could tell she was getting tired from this physical exertion. \n\nAll around us, women were bobbing up and down on their man's cock but every one of them was watching us. Most of the guys were looking down in their own crotch or were sky-gazing as they pumped their loads into the face below them. \n\nCarrie was exhausted and whispered in my ear. \"Turn me over and finish me off, would you love?\" I could tell from years of marriage that she wanted to be dominated right then. She pulled back her legs and I leaned back to pull off her pussy and stood up. I grabbed her hand, like it was my idea and I had total control of my woman, and pulled her up forcefully from her chair. \n\nCarrie screamed lightly as was her role. I spun her around and forced her onto her hands and knees at the bottom of the chair. She gasped out loud, like, 'Oh no. This brute of a man is going to rape me.' I moved my shaft up to the entrance of her sopping wet pussy and pushed into her fast and hard. She screamed out again. I pulled all the way out until the tip was outside her pussy lips and being careful not to miss I fired my cock back into her. Carrie groaned, \"Oh please. Be gentle with me.\" \n\nI had to smile then. Her acting was atrocious. I established a rhythm that was insanely fast and rough. I pummeled her for several minutes and I could feel multiple orgasms crawl through so slowly they seemed to build up like waves on the beach. Her pussy was clamping furiously on my cock. Her head hung down. Her mouth hung open. She gasped for air. \n\nJust as I could feel another orgasm gaining strength, I felt my balls tighten quickly and a sudden surge of cum shot up and into her pussy. She felt it coming and she felt it when it arrived. It was timed perfectly with the crescendo of her climax and she screamed again. I kept on fucking her until my limp cock dropped out of her. \n\nHer orgasm was still going on as each spasm pushed more and more of my cum from her. Julia saw it and launched herself out of her chair and shoved her face into her mother's pussy. She lapped up the new stuff being pushed out and then worked her way down Carrie's legs to get the rest. Then Julia turned around and inserted my flagging cock into her mouth and sucked and licked me all over. When she was satisfied that we were both clean, she sat back down in her chair and smacked her lips and wiped cum off her cheeks and pushed her fingers in her mouth and sucked on those. She stuck the drink-straw back in her mouth and sank back against her chair. \n\nCarrie righted herself and sat down. I picked her drink up off the table and handed it to her. She looked at me and said, \"Why thank you kind sir.\" and grinned. \n\nAs I turned around to go to my chair, a women sitting beside us reached up from her position kneeling on the deck with her man's cock in her mouth and grabbed my cock. I thought she was just going to touch it but she held on tightly as I moved away from her. This snapped me back toward her. She came up off her man's cock and sank her lips around mine. \n\nThis woman stepped her legs on either side of her man's hips and sank her pussy down onto his cock but never relinquished position of my cock in her mouth. One look at her face and I knew she was completely in heat. She was overcome with passion. She had my cock in one hand and while fucking her man, she furiously pushed her head onto my flaccid cock. It didn't respond and after a couple minutes she pulled her head back and smiled up at me with that glassy look which drifted off to concentrate on her fucking rhythm. I walked back to my chair and sat down. \n\nCarrie said, \"Well Babe, I guess we got the balls rolling.\" She laughed at her own pun. Julia giggled too. A new group of people were fucking and sucking everywhere you looked. They were on the grass, on the concrete deck, in their lounge chairs, in the pool and even one couple on the far edge of the bar. \n\nI looked for Phoenix at the bar and she was on duty. She apparently had been looking over at me and waved when I spotted her. I stepped down into the pool and waded with the water-line at my hips over to the swim up bar seats. I sat down and ordered another drink when Phoenix finished with a customer and came over. \n\nShe pulled herself up onto the bar and leaned over to kiss me. I leaned in and kissed her back. I asked her about her day off. She told me it was great but she missed seeing me. She said, \"When do you go home?\" I told her it was tomorrow around noon. She asked me what my room number was. She said she had a gift for me. I told her. \n\nPhoenix looked around at the copulating bodies and said, \"I love it when a new plane-load of people arrive. They are always so tentative until someone sets the tone. Then they know where the boundaries are and 'bam' they're off to the races.\" She looked at me as I was pushing off the bar-stool and said with a grin, \"You wouldn't know who pushed the button this morning would you?\" \n\nI looked at her and with a straight face said, \"I haven't a clue.\" I threw her a kiss, turned around and started back across the pool with my drink in hand. Before I got three feet I heard, \"Yeah right. You're such an asshole.\" I turned back to her and said, \"My wife says that all the time.\" Phoenix laughed and threw a handful of ice at me. \n\nBack at my seat, Carrie and Julia were enjoying the live pornography show going on in 3D all around them. Consciously or not they both had their hands furiously working their own pussies and clits. They were both soaked with vaginal fluids. With my drink still in hand I told Carrie I was going to take a walk. She barely acknowledged me and I walked away through the sex crazed crowd. \n\nI had taken my suit so I wouldn't get in any trouble with the staff. It didn't hide anything and was uncomfortable as hell, but rules are rules I guess. At the sign. I put my drink on a table and pulled it on and finally found a position for my cock that wasn't too uncomfortable. \n\nI finished my drink as I walked and decided to head for the beach bar to get another. The beach was covered with new people as well. This was not the nude part of the beach but topless seemed to be acceptable as there were several topless beauties sit or lying in the sand. \n\nAs I approached the bar a woman ran up to walk beside me. I turned when I noticed her. She stood 5'11\" with nice legs, flat stomach narrow waist and nicely flared hips and massive tits. I would guess 38-GG. If she bought them they were worth every penny. At first I didn't even notice if she had a head. When I recovered from the tits I noticed she had flaming red hair down over her shoulders and a clear creamy complexion. She had emerald green eyes. It was a stunning combination.  \n\nShe was wearing a very small bikini. Maybe it wasn't so small. It was just that any attempt by a bathing suit top to corral her huge tits would be an ultimate failure. It wasn't a thong but she would have stopped time if she were wearing one. Her ass was spectacular. My guess is she was around thirty. She had very faint smile lines around her eyes and had a bearing about her that told me she wasn't a kid. She reached a hand out as we continued toward the bar and said, \"Hi. I'm Kate.\" I instantly assigned her a 'fuckability factor of 9.95. ",
        "I shook her hand and looking directly into her amazing green eyes said, \"Hi back. I'm Mark. Did you get here today? I haven't seen you before.\" \n\nShe responded, \"I got her late last night. Delayed flights and all. A complete bummer.\" She had a slight British accent or Australian maybe. I liked listening to her voice. \n\nI smiled at her and said, \"Can I get you a drink?\" \n\nShe said, \"They are included but yes, you can. Thank you.\" With drinks in hand we both walked down onto the hard sand and sat down. She said, \"I love your suit.\" \n\nI laughed out loud and then frowned. \"My wife insisted that I wear this thing this week. I hate it. It's completely uncomfortable.\" I looked over at her and said, \"I love your suit as well. You are absolutely stunning in it.\" My cock surged at that moment and she caught the movement. \"Are you here with anyone or a group of friends or anything?\" \n\nShe said, \"I'm here with my boyfriend but he is down at the nude pool probably balling some young thing. A frown formed on her face. \n\nI said, \"He's down there and you're over here? Is he retarded or something? I just came from there. It's totally Sodom and Gomorrah. Why are you here and not down there with him?\" \n\n\"Oh, we had an argument this morning and he stomped out. We have mostly an open relationship anyway, at least until he gets jealous. You mentioned your wife. I was hoping you could be my open relationship for the day.\" \n\nI laughed and said, \"I must confess the same thing crossed my mind. Carrie, my wife, is a stunning woman. We had a 'normal' relationship for twenty-five years. I went on to tell Kate how we now have an amazing open sexual relationship. I do other women and she does other women and men and we don't leave out the details when we tell each other about them. I left out the part about Julia's involvement. That is pushing most people's morals. Hell, it did mine too until a month ago. \n\nKatie leaned over and kissed me and I responded. She had strawberry flavored lipstick on. She flicked my upper lip with her tongue and I flicked her lower lip with mine. We kissed each other for several moments and it was starting to get steamy. We broke our kiss and while still leaning in she whispered , \"I noticed one of those four poster double bed mattresses on the beach with the sheet drapes on all four sides.\" She nodded her head to the left and got up on her feet. She pulled me up and we went off in the specified direction. \n\nLow and behold there was such a bed and it was vacant. There were very few people around, not that it mattered to me. No one was within fifty feet. She climb onto the bed and reached behind her to pull the drapes on her side and top. I pulled the sheets at the foot and my side. \n\nI pulled her over to sit between my legs with hers behind my back. I unclasped the skimpy top and it literally sprang forward. Her tits were amazing. They obviously had to sag from the sheer size of them but they didn't sag much. Her nipples were much smaller than I would have expected. She lifted both of her tits in her hands and licked the nipples with her tongue. She said, \"Do you like big tits?\" \n\nI softly laughed and said, \"Show me a man who doesn't and I'll show you a gay man.\" She laughed at that. She lay back on the bed and I moved in to kiss her hard. In very short order passion had overtaken both us. My hands were all over her as her hands were on me. We were kissing lips, face, neck, hair, ears, tits anything we could kiss. We were frantic. I could hear voices close by and assumed people were congregating to listen. I didn't care and apparently she didn't either. \n\nFinally we broke away from each other long enough to get her bikini bottom and my speed-o off. We were now both completely naked and we launched back into each other. She was on her back with me lying to her left. My left leg was between her legs. Her legs were parted. I kissed my way down her neck to her throat and then down between her tits which lay off toward each arm. I ravished her tits and her nipples were standing up long and hard. I didn't notice any incision marks for breast enhancements but I wasn't looking very hard. They felt like real tits to me. \n\nWhile I was sucking on her nipples, she reached down with her left hand and wrapped her fingers around my rapidly rising shaft. She looked down at my face and said, Jesus. How big does this thing get anyway?\" I chuckled and continued my attack on her tits. \n\nI moved down over her ribs to her navel where I flicked my tongue a few time. To my experience, some women's navels are an erogenous zone. It wasn't the case for Kate so I moved on down into heaven. Her pelvic area was nicely trimmed and it was as bright red as the hair on her head. She thrust her pelvis up to meet my lips as I kissed her on her clitoris. I flicked my tongue on it and she surged upward into me. 'Very sensitive', I thought. \n\nMy cock was at full size as she ran her hands the full length and squeezed ever so often. She was just keeping it hard so it would be ready when needed. To her disappointment. I pulled away from her and moved down so my body was between her legs. She was looking down between her tits at my face as I moved in to kiss her pussy. \"Ooooohhhh, \"That is a sight for sore eyes. My boyfriend doesn't do that.\" she said. \n\nI popped my head up to look at her and said, \"Christ. This boyfriend of yours must have a cock of the century or something for you to be with him.\" \n\nShe chuckled and said, \"He does have a very nice cock, but I just discovered that there are nicer ones around.\" I laughed and sank my mouth down to her pussy. She was soaking wet with anticipation. I licked and tongued around her outter and then inner lips which had her moaning. When I pushed my tongue into her she screamed out loud and then threw her hands over her mouth to stifle it. It was too late. \n\nI could hear someone say, \"Fuck. I think he's killing her.\" Kate laughed and yelled out, \"No he's nooooooooottttttttttt.\" as her voice raised several octaves when an orgasm caught her by surprise as she was speaking. I tongue fucked her for several minutes as vaginal spasms quaked through her more or less constantly. I started finger-fucking her to mix it up a little. She was going nuts. \n\nMy cock was only at half-staff as I was concentrating so hard on giving Kate pleasure. After many orgasms and after she had recovered from the last one, I flicked my tongue tip on her clitoris. She screamed again and launched her hips into my face. I started flicking with my tongue tip quickly over her bud which was totally erect and sticking up more than a half inch. She let out a long high pitched scream and sank back onto the bed as a huge orgasm blasted through her. \n\nI then wrapped my lips around the length of her clit and began sucking on it like she was going to be sucking on my cock in a few minutes. As I held it in my lips I strummed my tongue over it. Her hips surge up again and her hands came down on the back of my head to hold me in place. She was bucking all over the bed and screamed loudly again followed by, \"Mother fucker. Yesssssss. Oh God. Oh God. I think you are trying to kill me.\" \n\nWhen she settled down from that last orgasm she lifted my head with her hands and said, \"Let me get you as hard as you have ever been and then I need you in me.\" I pulled myself up on my hands and knees and moved up to her side and kissed her on the lips hard. She returned my kiss in kind. \n\nShe lifted her torso so her tits were resting on my chest and dragged them and her mouth down to kiss my pectorals and on down to lick each of my abs and then to the base of my cock which was rising steadily. She wrapped her right hand around the shaft and started jerking me off. It grew some more. \n\nShe lifted herself up with her left arm and inserted the head of my cock into her mouth. She sank down until the head was between her lips. She then lightly touched the ridge with her teeth and with teeth holding my cock; she opened her mouth wide and pushed her lips down the shaft as far as they would go and clamped them tight. She released my cock from her teeth and pushed it further into her mouth to catch up with her lips. She did this several times and when my cock entered her throat the feeling was sensational. When she was at the bottom she opened her mouth wide and flicked her tongue on my balls. I muttered something like, \"Oh my God. That is amazing. Keep going.\" \n\nShe laughed at that and started gagging as my cock was still buried in her face. She pulled back to the tip. She slapped me on my thigh and with my cock still in her face said, \"Don't make me laugh or I might bite this huge cock of yours off and mount it on my wall.\" I laughed and she went back to work. \n\nAfter several minutes of her amazing blowjob techniques I was going to blow a load in her face. I reached down and pulled her head up and off my shaft. She frowned until she saw me moving around to a fucking position. She lay back on her back and held her tits with her hands as I moved my steel shaft into position on her pussy lips. She had her head lifted to watch until I pushed into her and her head shot back on the bed trying to lift her torso with it. She was instantly in orgasm. It was incredible. \n\nI pushed my cock all the way until my balls bottomed out. Then I pulled out slowly and pushed in hard again. Her head was flailing from side to side and her hands were mashing her tits and nipples. Her hips were rocketing up to meet my thrusts. Her teeth were clenched as she gasped for air through them making a 'sssssshhhhhhhhh' sound. \n\nAs I continued pounding into her she opened her mouth wide in an \"O\" and she started moaning, \"Ahhh...Ahhhh...Ahhhh...Aaaaaaeeeeeeeeiiiiiiiii.\" as another orgasm gripped her. After that one she looked down at me and said between gasps, \"This is not possible. I never. I never. Oh fuck.\" She was shaking her head side to side again muttering, \"Amazing... Amazing.\" over and over again. \n\nI had been holding myself back but my balls were objecting and in the end they always prevail. My cock surge: which set her off again. My cumm boiled out of my ball and up my shaft in moments of shear ecstasy. I collapsed immediately to her left side. She threw her hands around me and pulled herself to me as if she were determined to stop me from exploding into tiny pieces. \n\nI was pulsing just like she had. I groaned loudly and sucked a huge quantity of air into my lungs and just hung there with muscles clenched. It lasted nearly a minute and she was looking at me with concern. Finally, I gasped the air from my lungs and said, \"Jesuuuuuuus.\" My body slowly relaxed. I was gasping for air. \n\nI landed on my right side and rolled onto my back. She immediately crawled up to lay on top of me. I could feel cum drooling from her pussy and running down my balls. She held me like that for many minutes. There were no sounds but our heavy breathing. She would lift her head and kiss me every so often. I couldn't reciprocate. It was like I was in a coma but I was wide awake. \n\nFinally I put my arms around her back and held her to me. Her tits felt incredible on my chest. All of a sudden she started quaking. She was sobbing. She couldn't stop herself. I held her until she settled down. I had tears all over my chest along with makeup and lipstick. \n\nShe finally looked up at me and said, \"I'm so sorry. I have never done that before after sex. I was just so overwhelmed I just...I just...\" I cut her off in mid sentence.\" \n\n\"Kate, honey. There's no need to apologize. I am completely honored that you had that reaction. God damn girl. You are one fantastic lover. I'm not even going to say fantastic fuck. It was so much more than that.\" She smiled up at me. \n\nI held her like that for a couple more minutes before someone outside yelled out, \"Hey. Inside. Are you ok?\" We both said in unison, \"Shut up and get lost.\" We separated reluctantly and sat up in the bed. She found her suit and pulled on her bottom and then attempted to capture those tits in that tiny top. I pulled on my suit and Kate laughed when the tip was outside. I pushed it back in and my cock bulged out. \n\nWe pulled back one side sheet and both scrambled out of the bed to a chorus of cheers and clapping. There must have been twenty people surrounding the bed. We both went red with embarrassment and walked to the bar for a much needed drink. \n\nShe said that she was supposed to meet up with her boyfriend for lunch. I am way late but he always is. I said, \"You need someone who appreciates you.\" She nodded and walked back toward the resort. She turned back a couple times and blew me kisses. I had one more drink and chatted with the bartender and then walked back toward the pool. \n\nThe action at the pool had subsided a little. It looked like many had broken for lunch. I came over and asked Julia and Carrie if they wanted to go to lunch. Carrie said, \"I am starving and I want more than a burger. Let's go to the buffet.\" My two ladies stood and pulled on their suits and then a beach cover-up. I pulled on a tea shirt which did nothing to cover the bulge in my suit. They put on their high heeled sandals and I put on a pair of flip-flops. They went ahead of me and I admired the view of Carrie's amazing body in high heels which is a sight to behold. \n\nAt lunch I told them about meeting Kate and related most of the details. Carrie said, \"It seems she has a real asshole for a boyfriend. Of course it doesn't sound like you made him look any better.\" \n\nJulia piped in with a simple, \"Men!\" and went back to her food. Carrie and I glanced at each other and laughed. \n\n\"Oh yeah.\" I said excitedly. \"Did you hear anything from Angel or Izzy?\" Carrie looked up from her plate and grinned broadly and while chewing she gave me the thumbs up. \n\n\"For tonight?\" She nodded. \"That is great babe. We can go home tomorrow with all missions accomplished.\" She smiled with mouth full and nodded again.\" \n\nWhen Carrie had finished chewing and swallowing and taking a drink of soda she said, \"Yes, Angel came down to the pool all excited while you were on walk-about. She wants to come to our room after dinner; around 8:00 PM. I gave her the room number. \n\nI said, \"Did she say whether Meat was going to come?\" \n\nCarrie responded, \"Angel wasn't sure. He'll either show up or he wouldn't. She was ok either way.\" \n\nJulia interjected, \"Any more of meat and I will be walking bow-legged for the rest of my life.\" We all laughed. Carrie said, \"I hear that.\" \n\nI said, \"Well ladies, do we go back to the pool or is there anything else you want to do while you're here?\" \n\nJulia wanted to do some quick shopping. Carrie wanted to go back to the pool. She said, \"I have my eye on a guy that looks just like a young Paul Newman.\" \n\nJulia spoke out loudly with her mouth half full, \"Yes. I saw him. He is gorgeous and he has a very nice cock too. Don't worry dad it's not near as nice as yours. I'll meet you guys down there later. OK?\" \n\nWe went our separate way. When we got back to the pool, someone was in our chairs. There were plenty of vacant ones so we sat on the opposite side of the pool. I watched Carrie stripped off her cover-up and then took her bathing suit off. All eyes were on her. She was the most beautiful woman at the pool the entire week and the same was true now. I stripped out of my suit which was a huge relief. I sat down in my new chair. \n\nCarrie was still standing and looking around. I saw her smile and I looked toward where she was looking and sure enough there was 'Paul Newman' forty years ago naked as a new born. I was a little amused by the affect he was having on her. She watched him for several minutes. He didn't appear to be with anyone particular but as you can imagine there were plenty of women speaking with him. \n\nHe got up and headed toward the bar and not surprisingly, so did Carrie. I yelled out to her as she went, \"Hey baby. Can you bring me back a drink?\" I was willing to bet anything that she wouldn't come back with my drink even if she came back at all. \n\nShe sat down and rested her tits on the bar and order drinks. When he walked up she smiled at him and checked out his cock. He must have liked what he saw too because he immediately spoke to her and took her hand and kissed it. I could see her flush from here like she was a teenager. I smiled to myself and thought, 'You go girl. He'll never be the same when you're done with him.' \n\nThey talked for a few minutes. They were laughing about something as they got off their stools. They headed for the beach. I watched until they were out of sight. I finished my drink and leaned back against the chair. I was totally buzzed. \n\nI saw Julia coming down the path with a bag in her hand. She stopped where we normally sat and noticed that someone else was sitting there. She looked around and spotted me and came over. She sat in Carrie's chair and asked where her mother was. \n\nI told her that she had already met up with 'Paul Newman' and that they had walked over there onto the beach. Julia looked where I was pointing and said, \"Wooo-hooo. Go mom.\" I smiled at her reaction. Julia jumped up and said she needed a drink. I asked for one too. Still in her bathing suit she waded into the pool and head for the swim-up bar. She sat on the stool and Phoenix came over to take her order. I noticed they were talking for quite awhile. Julia nodded and took two drinks and waded back across the pool to our chairs. \n\nI asked her what was in the bag she was carrying when she came in. She bent down and picked it up and tossed it into my lap. I opened it and looked inside. There was one very large skin colored silicon dildo with molded balls on the end and one very sleek and thin plastic dildo that angled slightly at the tip in neon purple. She said, \"I needed some back-up for tonight. Just in case.\" \n\n'Paul Newman' had started toward the bar to order a drink, but half way there he spotted a gorgeous blonde heading in the same direction. She had a fantastic body and she was no kid. He always thought a beautiful woman with some age on her was true beauty. He had seen thousands of beautiful women come through here and he got to get up close and personal with many of them. He was the resort masseur. Today was his day off and he just wanted to spend it 'vegging' by the pool. \n\nAlthough she didn't appear to be in a hurry, she was walking briskly and her tits and ass swayed with her long stride. She was taller than most and her extremely high heeled shoes forced her to stand erect as she towered over the people she passed. She sat down on a bar-stool. \n\nAs he walked up she turned to look at him. She smiled as she scanned him from top to bottom just as he had done to her moments before. \"Well, hello.\" She said. \"My name is Victoria.\" She offered her hand which I took lightly by her fingers, turned her hand over and kissed her on the back of her hand.\" She blushed and averted her gaze. He introduced himself as Paul. \n\nShe said, \"There is no way your name is Paul.\" \n\nHe responded, \"Actually, many people think I look like a young Paul Newman but my name is truly Paul.\" He explained that he actually worked for the resort as a masseur. She told him that she had never had a massage before. \"That must be rectified immediately. Come. My work station is just over behind the bar near the beach.\" He held out her hand to help her off her stool. \n\nCarrie, or 'Victoria' knew her pussy was soaking wet already as she walked beside Paul toward the beach. His 'work station' was a four post ten foot square building with a roof and no solid walls. There were sheets that he could pull for customer privacy. The surf was the only sound. \n\nPaul laid out a sheet across his massage table and invited her to lay with her face down in the round head rest. She stepped up on a stool and crawled onto the table and did as instructed. He moved both arms to her sides. He could see side tit as he laid her arms down. ",
        "Very serene music started playing softly. He pulled the drapes closed and told her to relax and breathe in through her nose and gently exhale through her mouth. She did as instructed. She could see the lower part of his body as he would walk by and she could see that his cock was growing stiffer. She smiled. She could feel her squishy pussy as she adjusted her hips for comfort. \n\nPaul explained everything he would be doing to her. There was no mention of anything sexual, but she had other plans. He placed a two inch black round smooth stone on her spine near her neck and continued with same at intervals down to her hips. The rocks seemed too hot at first. \n\nAfter the rocks cooled he removed them and he poured some warm oil into the small of her back and started massaging her. He worked from her hips down over her ass cheeks to her thighs, legs and feet. She was a little ticklish on the bottom of her feet and she flinched occasionally. He used his forearm on the calves of her legs and that felt wonderful. \n\nWhen he came back up her legs, working on the insides, he grazed her pussy with his fingers. Her hips surged up slightly. She bit her lower lip a little as she settled back down. He worked up and down her legs and every so often would graze her pussy. It always seemed accidental but Carrie wasn't so sure any more. \n\nHe worked up her slim waist and her back. He walked to the head of the table to work on her neck and shoulders. His cock was right in her face. She resisted her urges for the moment. \n\nHe instructed her to turn over on her back. She did. Her tits were hard from her arousal and her nipples were hard as nails. She could feel oil or vaginal juices running down the crack of her ass. \n\nPaul was getting aroused as he worked his way down her face, neck and shoulders to her chest. His cock was at full attention when he lifted her large tits from each side and pushed them into the middle. He massaged her tits for several minutes and Carrie emitted a soft moan. He lightly pinched her nipples. \n\nCarrie spoke for the first time since climbing on the table, \"Harder. Do my nipples harder.\" He did as she asked. He moved to her side and worked down her chest and sides to her stomach and hips. She was ticklish on the front side of her hips too and she giggled when he touch there. \n\nShe expected that he would continue moving down where she had wanted him to go since meeting him at the bar. He didn't. Hhe moved to the bottom of the table and began massaging her feet again and pulled each toe and stretched her feet. Then he moved up her lower legs to her thighs. \n\nPaul could see that she was soaking wet and he moved his hands in and started lightly massaging around her pussy. When he finally rested his thumb on her clit, her hips surged up hard and then slammed back down on the table. \n\nHe was standing at her side 'massaging' her pussy lips. She looked over and could see that he was rock hard. She said, \"I need that.\" as she glanced down at his cock. \n\nHe continued working on her pussy with his hands and said, \"In due time.\" She lay her head back down. She felt the slight quivering sensation coming from way far away. He apparently did too. He bent down and began 'massaging' her pussy with his tongue and the quivering turned into a full blown quake as a huge orgasm washed over her in synch with the surf washing up on the beach several yards away. She thrust her hips up to meet his tongue. He flicked her clit and she screamed out loud. \"Oh fuck that feels so wonderful.\" she said. \n\nHe continued licking her pussy for several minutes. Her hips would surge and slam down. She was gasping for air through clenched teeth as orgasm after orgasm surged through her. \n\nFinally, he pulled his head back almost to her relief. She lifted her head and said, \"I am a rag-doll. I don't think I can move.\" He looked at her and smiled. \n\nHe moved down to her feet and took a firm grip on the sheet she was lying on and pulled it toward him. Her legs slid off the table until her crotch was at the edge. He held her legs up with his arms as he moved his body in close to hers. She knew what was next and she smiled broadly as she gazed at the ceiling. \n\nPaul rubbed some massaging oil on his cock and stroked a couple times. He placed the tip of his cock into her outer pussy lips and stroked his cock up to separate them. He pushed his cock up further to gently slide over her clit. She groaned with the contact. He pulled back and pushed his cock inside her pussy. With the oils and her own natural lubrication she sensed no friction at all as he pushed into her. The only sensation was the pressure as he pushed further inside. \n\nShe felt the full penetration but it wasn't like anything she had experienced before. She felt his balls move gently against her ass. He pulled out slowly and then the fucking began. \n\nHe had her hips in his hands as he began pounding his cock into her with a fury. He had to adjust his grip repeatedly as her oil slick body slipped away from him. She had put her feet up on his shoulders and he was furiously fucking her. She was groaning. He was groaning. She had no control and he had it all. \n\nShe began rolling from one orgasm to the next as she swung her head side to side. He gazed down at her. Her eyes were glassy and she seemed to go somewhere else. \n\nLater she would describe the experience as \"out of body\". She said that she was above herself looking down over Paul's shoulder. It was weird but she had had many of those experiences before. \n\nAfter many minutes of changing up the pace and depth of insertion, he felt his climax coming from what felt like the bottom of his feet. It seemed to surge up his body. He pushed his cock in as deep as he could and his cum sprayed into her. With each pulse of cum he pulled out and pushed back in as his next shot came. His spasms went on long after his cum was expended. His whole body wracked. \n\nHe finally pulled his limp cock from her and climbed up on the table and wrapped his arms around her and cradled her. She was still vibrating from her orgasms and was still breathing very hard. Her chest surged upward with each breath. \n\nPaul kissed 'Victoria' passionately and then said, \"That was truly amazing.\" \n\nAfter breathing was normal again, Paul got off the table and took a hot towel and wiped 'Victoria' from head to toe to clean as much excess oil as possible. She took the towel and wiped her pussy which was only now beginning to feel normal. She rolled on her side and took his limp cock into her mouth and washed the oil and cum and vaginal juices with her tongue. When he was clean, she stood up and wobbled with his assistance to sit in a chair. \n\nThere was a mirror on the table by her chair and she used it to try to fix her hair. The oils had destroyed her makeup but she assessed herself and thought, 'not bad'. \n\nThey walked back to the bar together. He kissed her for a long moment and then he went his way and she went hers. \n\nJulia happened to see her mother and 'Paul Newman' walking back to the bar from the beach. She watched them kiss and then separate. She poked me and motioned toward the bar. Carrie was carrying her heels as she stumbled and wobbled across the pool deck toward us. Julia got up to relinquish her chair as Carrie stumbled up and collapsed into it. \n\nJulia grabbed a vacant chair and pulled it up next to her mother and sat down. She put her hand on her mother's knee and said with a grin on her face, \"Mom. Are you OK?\" \n\nCarrie looked at her, smiled for a moment and said, \"I'm way better than OK.\" She was like a limp rag. Her arms and shoulders hung limp. \n\nFinally she related the whole thing; the massage, the sex, everything. She turned to me and said, \"His name is Paul. Do you believe it?\" She started laughing uncontrollably. Julia and I looked at each other. \n\nJulia said, \"I think she needs some rest before the evening festivities begin.\" I nodded. We got up and helped Carrie to her feet. With some help from Julia, Carrie was able to get her beach wrap on. There was not point trying to get her bathing suit on. We put our suits on and guided Carrie back to the room. It was hard to get a grip on her with all the oil. \n\nInside the room Carrie collapsed on the bed. Julia went to get the shower going as I undressed. I took the beach wrap from Carrie and maneuvered her into the bathroom. She looked at herself in the mirror and said, \"Wow. I feel better than I look.\" She fluffed her hair as we pushed her into the shower. \n\nI held Carrie steady while Julia washed her several times to remove the oil. When Carrie was rinsed clean, we sat her down on the bench and started cleaning ourselves. I washed Julia and lingered on her tits and pussy. She washed me and more than lingered on my cock. I was feeling horny and my semi-hard shaft instantly went very hard. Julia loves to lather up my stiff cock and stroke it. \n\nShe soap-stroked it many time and it was soon giving the 'heil-Hitler-salute'. She rinsed it off and went to her knees and pulled the head down and sucked it down into her throat. Carrie sat there with a smile on her face and her fingers in her pussy working feverishly. \n\nI looked down at Julia looking up with my cock pushing in and out of her face. Her lips were hollowed and her lips were distended. I reached down and pulled her face from my cock and pulled her up to me. She had a big frown on her face. \n\nI bent over and picked her up. I spun her around upside down and she screamed until she figured out what I was doing. I pushed her up so my face was in her crotch and mine was in hers. I maneuvered her ass so it was under a high power water nozzle lowered her so I could tongue fuck her. She groaned with the initial assault and then she pulled my cock into her face again. She grabbed my ass to control her blowjob. Her thighs were on my shoulders. \n\nCarrie was really frigging herself now and from the 'ahhhh...ahhhhh...aaaaaaeeeeeiiiii' noises figured she was having another orgasm. All I could see Julia's ass-cheeks. Julia was frantically pulling and pushing her face onto my cock. She rocked into an orgasm as my tongue flicked rapidly on her clit. \n\nI knew I wasn't going to last long. I began flexing my hips into Julia's face and she increased the pace even more. I could feel the cum churning in my balls. I didn't want to cum in her mouth. I wanted to cum on her tits and face so I pulled my hips back from her and spun her around again. I moved us out of the water stream. \n\nGuiding my cock with my hand, I launched a huge rope of cum onto Julia's tits. She bent down and the next five ropes of cum landed on her forehead, left eye, up her nose, on her lips and in her mouth. The final two shots landed on her tits. \n\nCarrie stood and came over and kissed Julia on the lips and licked the cum from them. She looked at Julia and licked off all the standing cum from her face and then knelt down and licked both of Julia's pert tits with erect nipple until she was all clean. \n\nWe all washed and rinsed and staggered out of the shower. Julia and Carrie held each other face to face and had a moment. They kissed each other as I wrapped towels around them. \n\nWe dried ourselves off and fell into bed entwined with each other and promptly fell asleep. \n\nWe woke around 5:30 PM and all went to the bathroom to prepare for the evening. Carrie seemed a little anxious. I stood behind her and put my arms around her and tweaked both nipples. I said, \"Are you OK, Babe? You seem nervous. How can anything not go well tonight?\" \n\nShe was silent a moment and then said, \"I'm OK. I just don't know Meat that well and I don't know how he will react if he's sitting on the sidelines. He's just a wild-card.\" \n\nI kissed her shoulder and back of her neck and said, \"Well don't worry about it. It sounds like there is a 50-50 chance he won't even come. Maybe Angel has the same concerns about me.\" She looked back at me and just shook her head. \n\nCarrie and Julia spent an extra amount of time concentrating on their make-up. When they came into the bedroom I said, \"Fuck. You guys are beautiful.\" My cock jumped up to horizontal. \n\nCarrie said, \"Put that thing away before Jules jumps on it and we'll never get out of here.\" Julia started laughing. \n\nJulia said, \"So true. But it does look scrumptious, doesn't it mom?\" \n\nCarrie continued, \"It sure does, baby girl, but don't forget we are on a meatless diet tonight.\" I burst out laughing. \n\nWe all dressed, the ladies in stylish, sexy clothes with their 4\" heels. Me in a pair of gray dress pants, dress shoes and a short sleeve coral colored silk shirt that looked great with my tan. \n\nWe walked out at 6:25PM and headed for the restaurant. Eating in the specialty restaurants could be a lengthy process as the service is slow. We had reservations so we by-passed a waiting line and were ushered directly to our table. Everyone in the restaurant watched my two lovely ladies walk in and many men continued to steal glances at Carrie during our meal. If I was them I would have just been staring at her. \n\nIt was a nice meal with good food and drink. We talked about the day's events and I just had to tease her a little about \"Paul Newman\". \n\nShe teased me back saying, \"Now don't bring him up. I'm getting all creamy again. You don't want me to have an orgasm right here just thinking of him do you.\" I laughed and Julia giggled. There was no more mention of specifics. We had all had our moments today. I thought of Kate and her red hair, green eyes and magnificent tits. \n\nWe each finished off our meal with a half-pony of Frangelico to settle our stomachs. It was 7:45 as we walked out the front door of the restaurant to the same stares of male customers with their wives or girlfriends punching them in the arm when they saw what they were staring at. I am always amused by the looks men, and many women for that matter, give when Carrie walks by. I can't help but think, \"Go ahead and look buddy but you wouldn't believe her in bed.\" \n\nBack in the room, we talked about where this action would take place. On the bed or on the floor were the only logical choices. We moved a bench at the bottom the bed onto Julia's side of the bed against a wall to make more room on the floor. Julia and Carrie decided to stay dressed rather than undress and put on robes. Angel and Izzy would be coming dressed in street clothes. \n\nAt exactly 8:00 there was a rap on the door. I stayed in the sitting room in the dark with a bottle of wine on the table beside me. I could see anything that happened in the bedroom. Julia answered the door and Izzy and Angel walked in sans Meat. There were kisses all around. \n\nThere was some chit-chat and Carrie opened a couple bottles of wine she had bought in one of the shops. After drinks were delivered and the women had discussed their week the topic had to turn to sex. That's what this entire week was about. Izzy was vocal about her experiences. She left out the sex she had had with me. Good for her. Everyone knew all about that but it didn't need to be a topic of conversation. \n\nJulia and Izzy were sitting on the floor while Angle and Carrie were sitting on the bed with their legs over the footboard. Carrie had loosened her heals and they were dangling on her feet. After a couple of glasses of wine, Julia and Izzy started getting amorous. As usual, Julia initiated things when she leaned in to Izzy and kissed her lightly on the lips. She lingered there as Izzy pushed in harder with a kiss. The two mothers watched their daughters engage in erotic contact. I noticed that breathing rates were increasing. \n\nJulia stood up and came over to Carrie and kissed her mother very passionately. Julia broke the kiss and moved to Angel and kissed her the same way. Both mothers returned Julia's kisses with a passion of their own. \n\nIzzy crawled on her hands and knees to Julia and pulled herself up to kiss Carrie and then on to Angel and then to Julia again. Breathing was becoming rapid. My cock was rising and I released it from my pants and started jerking myself off. Julia went to face Angel and started taking her own clothes off slowly. Angel reached up to help. Izzy did the same with her clothes. \n\nWhen Julia and Izzy were down to their bra and panties they switched partners and began taking their own mother's clothes off. Angel had a demi-bra on and her nipples were hard and distended and Izzy leaned in to kiss them. When contact was made air burst from Angel's lungs and she wrapped her arms around Izzy and pulled her in to hold her head to her tit and then moved Izzy's head over to the other nipple. \n\nJulia rushed over to grab the bag she had at the pool. She dumped the two dildos on the bed and then went into her bureau drawer and pulled a large strap-on dildo and threw that down beside the others. \n\nJulia looked at Izzy and Angel and then at Carrie and smiled as they fell into each other on the floor. Carrie and Julia were in a passionate embrace. Angel took the hint and went to the floor along with Izzy. The two couples were all over each other. Julia released her mother's bra and pulled her thong off and threw it on the bed. Carrie did the same for Julia. \n\nJulia pushed her mother back onto the carpet and quickly moved her face into Carrie's pussy. Izzy was taking her cues from Julia and she frantically released Angels front clasp bra and pulled off her panties. Angel returned the favor and stripped Izzy of her bra and panties before Angel pushed her face into Izzy's pussy. \n\nAs Julia was attacking her mother, her own fingers were working feverously in her own pussy. Julia's back was to me and I could see the room lights glistening on her crotch. Izzy's head was to me and I could see Angel's tits hanging down with her ass in the air near the bed. Angel was attacking Izzy's pussy. Izzy had her hands on her own tits as she tweaked her nipples. Her mouth was open. \n\nCarrie was the first into orgasm as a low pitched wail was emitted and her hips were firing. Julia hung on and after another minute she started into her own self-induced orgasm. Izzy followed suit with her own orgasm which became a 'squirt' as a huge quantity of fluid erupted from her pussy to spray her mother in the face and splatter all over the room including Julia and Carrie. \n\n'Fan-fucking-tastic', I thought as I continued slowly stroking my cock. Julia and Carrie were unaffected by Izzy's 'squirt' and Julia kept right on tonguing and finger fucking her mother. Angel got the bulk of the 'squirt' in her face so she had immediately pulled off while trying to deflect the surge. She was spitting and sputtering. \n\nIzzy had a horrified look on her face and had come up on her elbows exclaiming, \"I'm sorry mom. I'm sorry.\" Julia broke contact with Carrie and spun around to Izzy's crotch and buried her face in Izzy's cunt. Izzy went back down to her back with her mouth open again. \n\nAngel turned and buried her face in Carrie's cunt and began licking her pussy and clit with her tongue and finger-fucking her pussy and asshole. Carrie's head was rocking back and forth as another orgasm rocked her. Angel's tongue was being pushed out of Carrie's pussy so Angel pushed her fingers back in. \n\nWith Angel's ass turned toward me I could see she was soaking wet and she needed attention soon. As if on cue, Izzy pulled herself around, trailing Julia behind her and pushed herself up under Angels raised ass and began lathing her mother pussy with her tongue. Angel was taken by surprise and jumped a little from the attack. \n\nCarrie pulled herself away from Angel's attack and stood up. She touched each of them on the shoulder to get their attention. She said, \"Daisy chain.\" Enough said. Carrie lay on the floor on her back with knees in the air. Izzy went down on her hands and knees with her head buried in Carrie's pussy. Angel lay on her back with her head between Izzy's legs under her hips. Izzy lowered her pussy onto her mother's lips. They were forming a circle which was completed when Julia knelt down over her mother's face and lowered her pussy into Carrie's face and then buried her own face in Angel's pussy. 'Daisy Chains' are better with more participants but these four were making it work just fine. ",
        "My cock was raging hard. I didn't want to cum so I backed off with my hand. The sounds in the bedroom turned to oooooohhhh's and aaaaah's and groans and moans. One after the other's orgasms was surging over each of these four gorgeous women. At one point all four were in orgasms at the same time. Bodies were clenching and surging up and down. Slurping and sucking noises were constant. \n\nJust then there was a light rap on the door. None of the women heard it around the slurps and orgasms. I stuffed my cock quickly back in my pants and zipped up. I went into the bedroom and opened the door. Phoenix and Kate were standing there trying to look past me to the noises in the room. I stepped out and pulled the door nearly closed behind me. \n\nI said, \"What's up?\" My cock was still hard and was pushing against my pants. \n\nKate looked down and said, \"Is that a gun in your pocket or are you just glad to see me.\" \n\nPhoenix said, \"I told you I was going to come by tonight to give you a gift.\" She handed me a small box wrapped in tissue paper. She continued, \"You remember Kate right? We met at the beach bar earlier today and she was telling about this guy she met. It could only have been you. She just thought since I was coming by to see you tonight she could come along and say good-bye.\" \n\nThe sounds of more female orgasms erupted behind me. Kate tried to look around me and said, \"Are you having an orgy in there and you didn't invite me?\" Phoenix was smiling up at me as she knew the sounds of orgies well. Phoenix tried to look past me and I moved in front of her and Kate burst by and pushed the door open and into the room. I turned to try to stop her and Phoenix rushed by on the other side. \n\nI came in behind them. The action on the floor was uninterrupted until Carrie opened her eyes and saw people standing in the room. She just looked at these intruders. She knew Phoenix but not this other woman with the huge bust-line. She figured it had to be the Kate. I said, \"Sorry honey.\" I shrugged my shoulders. \n\nAfter a couple minutes Angel, Izzy and Julia stopped what they were doing and looked up at the new women in the room. As always Julia jumped up and said, \"Hi Phoenix and you must be \"Kate with the asshole boyfriend\". \n\nKate burst out laughing and said, \"That would be me.\" \n\nJulia said, \"Well, the more the merrier. Lose those clothes and get in here. There is plenty of room.\" Kate looked at Phoenix and then at the group on the floor. Phoenix shrugged and they each began stripping the other's clothes off. When Kate's bra came off her tits literally sprang out, Julia said, \"Gimme some of those.\" \n\nJulia squeezed her little tits, knelt down and buried her face in Kate's pussy. Kate's mouth opened and she put her hands on Julia's head and pulled her in tight. I unzipped my pants and pulled my cock out. It was incredibly hard. I went back in to the sitting room and sat down slowly stroking it. \n\nPhoenix dropped to the floor and fit herself into the daisy chain. After an orgasm with Julia's attack, Kate dropped down and now we had a six person circle of writhing female bodies all moaning and groaning. Every five minutes or so the chain would split up and reform with everyone in different positions. It was an amazing sight to behold. \n\nEvery once in a while one of these gorgeous women would 'squirt' and flood everyone else with vaginal fluid. It never ceased to amaze me how much fluid was involved in a squirt. It was nothing like a man cumming. It was like a hose turning on for a few seconds as surge after surge of a watery fluid was expelled. None of these women were the least bit bothered by it even when they caught it in the face. \n\nMultiple orgasms by each of these women went on and on for over an hour. The action was slowing down as one after another pulled themselves up to get another glass of wine and rest for a while before getting back into it. The daisy chain had broken up and now there were three couples in a '69' positions and the orgasms continued. The neighbors were probably holding glasses up to our adjoining walls listening. \n\nKate pulled herself off Carrie. There had never been any introductions so she didn't know who any of these women were except for Phoenix. Since it was unlikely that the black women were with Mark, the most likely candidate was Carrie. Carrie moved to suck on Kate's massive tits. Kate held her tits together so Carrie didn't have to chase them. Kate was finger-fucking Carrie. Phoenix moved her face into Carrie's pussy and began tonguing her clit. \n\nKate moved away and stood up. She poured herself another glass of wine. She was getting buzzed. She walked into the sitting room where I was jacking myself off watching the show. She said, \"What a show. It's amazing that you can stay in here with all that pussy out there.\" \n\nI said, \"It's not my place. This was Carrie's bucket list item for the week. You and Phoenix just made it that much better than planned.\" She watched me continue to slowly stroke my cock. I was now looking at her. She lifted her right tit to her mouth and sucked on her nipple and repeated it with her left tit. \n\nShe came to me and knelt down in front of me and with tits in hand wrapped them around my cock and started working them up and down my shaft. I removed my hand. Her palms held her tits together and she used her fingers to hold my cock between her globes. She pushed her chin down and watched my cock rise out of her cleavage. She could flick her tongue on the head but she couldn't get it into her mouth. Either her tits were too big or my cock as too small. \n\nCarrie moved up behind Kate and held her hands against the sides of her tits. Carrie was as turned on by Kate's tits as I was. After several minutes of tit-fucking, Kate pushed her head down on my cock and began giving me a great blowjob. \n\nIt seemed that the tongue in pussy lesbian love show was over as one by one the six women came into the sitting room. Julia turned on a table lamp so everyone could see Kate sucking my cock with Carrie sitting behind her squeezing her tits. \n\nIzzy took Julia by the hand and led her back into the bedroom. Izzy sat on the bed and picked up the strap-on dildo and asked Julia, \"What is this for? I get the dildo part but what are these straps for?\" \n\nJulia took the dildo from Izzy and hooked the clasps around her waist and between her legs and tightened everything up. Julia was standing there with an enormous 'black' dildo pointing out of her crotch. Izzy smiled up at Julia and said, \"I get it.\" \n\nIzzy got back down on the floor on hands and knees with her ass facing Julia. She didn't have to say anything. Julia got on her knees but the difference in their height made the angle wrong. Julia motioned for Izzy to get on the bed and then adjusted the height of her ass so Julia could push the dildo into her. \n\nJulia put some oil on the dildo and touched the head to Izzy's pussy lips and pushed in steadily until the simulated balls pressed against Izzy's clit which was so tender by now that she screamed a little. This brought Angel back into the bedroom to watch her baby girl getting fucked by my baby girl. \n\nIzzy began slamming her ass back into Julia's thrusts as Julia grabbed Izzy's hips to aid the action. Angel sat on the edge of the bed with her finger stroking the length of her pussy onto her clitoris. Angel and Izzy started their orgasms together and Izzy's continued on long after Angel had recovered. Since there was no worries about the dildo cumming, Julia maintained the pace and Izzy started pulsing with another orgasm. \n\nAfter fifteen minutes Izzy collapsed and pulled the dildo out. It stayed pointing out of Julia's crotch and bounced a couple of times. Angel got down on the floor with her ass to Julia and then turned her head and said, \"Julia, baby. Fuck me in the ass, would you please?\" \n\nWith the dildo coated in oil and Izzy's white creamy sauce, Julia had no trouble pushing straight into Angel's anus and deep into her bowels. Angel screamed a little with the initial assault but she wasted no time pulling herself back off and pushing back on again. Izzy moved her body under Angel so her head was looking up at her mother's pussy and watching the dildo move in and out of her ass. Izzy's pussy was now in Angel's face and Angel used her fingers and tongue to bring her daughter right back up into another orgasm. \n\nAngel's attack on Izzy's pussy was only interrupted by her own orgasm which rolled through her with pussy clamping on air. Then Angel's anus started to spasm as she had an anal orgasm. Julia had trouble pushing and pulling as this was underway. \n\nWhen Angel recovered, Julia went back to fucking her. Julia was so horny by then that she reached over and grabbed the small dildo and turned the vibrator on and handed it to Izzy who immediately started fucking it up into Julia's pussy. Within seconds, Julia was rocking her hips with her own orgasm and the dildo in Angel's ass rocked with them. \n\nBack in the sitting room Carrie, Phoenix and Kate were sharing my cock as all three had pushed themselves up on the carpet with Kate between my legs and Carries on my right and Phoenix on my left. All three heads were lathering my cock. Kate had the head trapped at the ridge with her lips and even her teeth as she rapidly flicked the soft velvety glans. Carrie and Phoenix on either side wrapped their lips around their half and slid up and down the length. Carrie's hand was in Kate's pussy fingering her clit. Phoenix's hand was also in Kate's pussy finger-fucking her. \n\nKate launched into a monster orgasm and pulled her head off my cock as she gasped for air. Carrie didn't hesitate and pushed my cock-head into her mouth and started bouncing up and down on the top half of my cock. Phoenix wrapped her other hand around my shaft and started jacking on the bottom half. \n\nAfter several minutes, Carrie pulled off and pushed the head over to Phoenix. Kate had collapsed onto her back as Carrie and Phoenix had continued their assault. Now Phoenix buried her head all the way to my balls and pulled back to the head and started using both hands and mouth to give my an incredible blowjob/handjob. \n\nCarrie pushed her face down into Kate's pussy and grabbed both tits and started roughly massaging them and rolling Kate's nipples in her fingers. Kate put her hands on Carries' head and pushed her tits together with her upper arms. I looked down at this incredible sight as my cock surged in Phoenix's mouth. I had to force myself to settle down. \n\nCarrie moved Kate around so she could get her head between her thighs. This brought Carrie's ass up in the air with her tits on the carpet. Kate's face was a mask of tensed muscles with teeth clenched and lips pursed tight. Kate was pushing hard on Carrie's head so that Carrie had to turn her head slightly to breathe. Kate rolled through one huge orgasm after another. Carrie was trying to finger her own pussy but she needed both hands on Kate's hips to hold her down through the violent spasms of every muscle in body. \n\nIn spite of my attempts to hold back, I could feel my balls objecting. At that moment I didn't want anything else in this world but to shove my cock into Carrie's asshole and deposit this rapidly advancing load in her. \n\nPhoenix could feel the surge of my cock and knew what was coming and she was very disappointed when I pulled back from her and lifted her chin. I bent over and kissed her on the lips. I said, \"I'm sorry baby. My wife needs me right now. OK?\" She frowned but nodded and moved to her left as I pulled myself out of the chair onto my knees behind Carrie. \n\nI took Carrie's hips in my hands as she looked back to see who it was. She smiled and turned back to continue her assault on Kate. As I put my cock on her Anus, Carrie mumbled around Kate's pussy, \"Oh God. Yes baby. I need you right there. Fuck me hard.\" I did just that. I pushed past her anus and continued deep into her bowels. I stopped there until Carrie slowly pulled back off and rapidly pushed back on me. She immediately launched into an anal orgasm that squeezed my cock so hard it hurt. \n\nPhoenix lowered herself behind me and sucked my right testicle into her mouth and began rolling it around with her mouth and pulling back with the suction. The combined sensation was too much for me and I lost the battle with my balls and cum surged up and spurted into Carrie's ass with such force and velocity that Carrie's head came up out of Kate's crotch screaming so loud that Julia, Angel and Izzy came running into the room. With the last cum shot, I collapsed onto my left side and Carrie collapsed down onto Kate's pussy laying flat on the floor. \n\nIzzy was still infatuated with the strap-on dildo and asked Julia if she could try it. Julia unsnapped the clasps and helped put it on Izzy. Some adjustments were necessary as Izzy is a bigger girl than Julia. Now the question was who to use it on. \n\nKate watched Julia attaching the dildo to Izzy with fascination. When Carrie pulled herself up and curled up next to me. Kate raised her hand in the air to get Izzy's attention. Izzy smiled and knew the answer to her question. \n\nKate stayed right where she was as Izzy knelt down between her thighs with the dildo pointing out in front. She was awkward with it as she had no experience with this appendage hanging out in front of her. With dildo in her hand and some help from Julia gauging distance, she finally maneuvered her way up to right spot. \n\nWith Kate's tits still pushed up with her arms she lifted her head to look down over them to see the giant black dildo push into her pussy. It seemed odd to see a big black cock connected to a body with big black tits but in a strange way made it all the more erotic. Izzy put her hands on Kate's knee as she started fucking in and out of Kate, whose face contorted with the assault. \n\nTo my amazement, Phoenix stood and moved to kneel down over Kate with her pussy right above Kate's. She turned her head around and said to Izzy, \"Put that thing in my ass.\" Izzy had a confused look on her face as she stopped her fucking motion. Kate was trying to keep it going my thrusting her hips up onto the dildo. \n\nJulia stepped in and whispered something in Izzy's ear and a broad smile erupted on her face. As everyone else stood and sat around watching, Izzy pulled the dildo out of Kate's pussy and pushed it slowly into Phoenix's anus. Phoenix pushed back on Izzy and she pushed the entire dildo in as far as it would do. Phoenix's head rocked back with her mouth wide open and then slowly dropped down to look into Kate's eyes. \n\nPhoenix bent forward and kissed Kate passionately on the lips as Izzy began furiously butt-fucking her. Kate continued the kiss but Phoenix was engaged in another orgasm. \n\nIzzy pulled out of Phoenix's ass with a 'pop' and dropped it lower and pushed into Kate's pussy. Kate broke the kiss with Phoenix to weather the assault. Izzy went back and forth between Kate and Phoenix for fifteen minutes until Phoenix pulled off the dildo and sank onto the floor beside Kate. After Kate recovered from the latest orgasm she pulled back from Izzy and turned on her side to spoon with Phoenix. \n\nPhoenix put her arm around Kate and held her tits in a tight grasp. The action seemed over and there was complete silence with the exception of gasps for air. Finally I spoke up, \"Holy crap. That was... I don't even have the words for what that was.\" I motioned for everyone to get in the pile and hold each other as we all came down from the ultimate high. There was some kissing and fondling of tits and cock going on but everyone stayed away from pussies lest they get going again. We all just lay there until everyone was breathing normally. One by one these six beautiful women rose to their feet and slowly moved into the bedroom to find their clothes. \n\nIzzy and Angel came back into the sitting room fully dressed, other than their thongs which were hanging from their wrists. As hosts, we pulled ourselves up to our feet. Angel and Izzy kissed Carrie as they encircled her with the arms and held on for several moments. Then they reached up and kissed me the same way. I held them tight until they pulled back. Angel said, \"We had a wonderful vacation, thanks to you three. We won't ever forget you. We will be on the bus before you get up in the morning, so, we will say our good-byes now.\" Izzy had tears streaming down her face as they went out the door. I pulled Carrie to me and hugged her tightly to me. She kissed me on the shoulder. \n\nPhoenix and Kate were still lying on the floor. Phoenix was lightly kissing the back of Kate's shoulder and continued to caress Kate's tits. Kate had reached back and was lightly tracing her finger nails up Phoenix's thighs, up the rise of her hips and down into the valley of her waist and back again. Phoenix was trembling with the sensations. \n\nI whispered to Carrie, \"It looks like these two might get going again.\" \n\nShe whispered back, \"Let's just leave them here to do whatever they want. Anything goes tonight.\" There was no door between the two rooms. We walked back to the bedroom and collapsed onto the bed beside Julia who was snoring lightly. She roused a little when we lay down but promptly went back to sleep. I pulled the comforter over her. She roused again and murmured, \"Thank you daddy.\" And she was out like a light. \n\nI lifted Carrie in my arms. We kissed each other hard. I carried her into the bathroom and shut the door. I set her on the counter and turned on the shower. I moved my hips between her thighs as she sat on the counter and I kissed her deeply. I said, \"Jesus. I love you so much my heart feels like it will burst.\" Before she could reply I kissed her hard again. Our lips stayed pressed together even after the kiss was done. \n\nBoth of us were breathing heavily. My cock was at full attention again. I was so horny for her right then. She felt my cock touching her thigh and she immediately guided it onto her pussy lips. She whispered in my ear, \"Please fuck me right here.\" \n\nI pushed my cock slowly into her. She wrapped her arms around my neck and pulled my face in for another passionate embrace. She then lowered her head onto my shoulder and held me tight as I continued the slow advance of my cock. When I was buried to the hilt, Carrie shuddered and then whispered, \"Oh God. Please fuck me now.\" \n\nI slowly withdrew and pushed in harder and faster. Carrie threw her legs around my waist and clamped her feet together on my ass. As I impaled her and withdrew she was pulling with arms and legs back onto me. I had my hands clamped tightly on her hips as I pulled myself into her with each thrust. For several minutes we clung to each other trying to push another millimeter of cock into her. She was desperate and so was I. \n\nShe quaked from orgasm after orgasm. One after another were all blending into one enormous orgasm. I thought she would explode into pieces. We were alone in the universe. Nothing else existed. Just her and me. My only desire at that moment was that we could do this till the end of time. \n\nAs we continued, intertwined as we were I notice that Carrie was lightly crying. I could feel her tears fall directly from her eyes onto my shoulder. I whispered in her ear without changing the pace, \"What's wrong baby?\" \n\nShe sobbed one big gasp and whispered back, \"Absolutely nothing.\" She sobbed again and the tears flowed as she cried ever harder. I had seen her get this emotional before and I knew it was her ultimate expression of love for me at that very moment. I held her tight in my arms and continued fucking her at the perfect pace. \n\nCarrie had collected her emotions and had several more orgasms. I was rapidly advancing on my climax. I didn't want to come. We were perfectly joined and I didn't want it to stop. But that is never to be and my cum surge forward so hard it caught Carrie and me by surprise. She clamped her legs hard and pulled me into her as deep as she could after the first shot. Her head came off my shoulder and tipped back with her mouth open and groaned out loud as stream after stream of cum launched into her. ",
        "My cock went soft quickly and her continuing spasms pushed me out of her pussy. It dropped to hang between my legs. I held Carrie until she had totally settled down. She kissed me and pushed away from the counter to stand on the floor as she slid down my body. The shower had been running the whole time. \n\nWe stepped into the shower and soaped each other up and rinsed off. I turned the water off and we stepped out onto the tile floor. I dried her off and she did the same to me. We walked back into the bedroom and checked to see if our company had gone. \n\nThey had not. Phoenix had donned the strap-on dildo and was lying on her back. Kate was sitting with the dildo in her pussy as she slumped forward hanging her magnificent globes on Phoenix's tits. Phoenix had her hands all over them. Phoenix's knees were bent and she was lifting her hips to push the dildo into Kate. Kate's head shot back and her hips fired. She snapped back so she was sitting straight up. Phoenix's hands went with her. \n\nAs Kate was coming back down she opened her eyes and saw us standing in the doorway. She grinned and said, \"I've got to get me one of these.\" When she had settled down she slid off the dildo and unsnapped the clasps around Phoenix. \n\nKate began strapping it around her waist. I looked at Carrie who smiled and she nodded her head toward the bed. We left Phoenix and Kate on their own and climbed into bed. I cuddled up close and we were asleep in seconds. \n\nI came awake in the middle of the night. It was 2:10 AM. I felt a body slide into bed beside me. I assumed it was Julia returning from the bathroom and promptly went back to sleep. I felt a hand reach over and wrap around my flaccid cock. Again, I assumed it was Julia. There was a little manipulation going on but I drifted off to sleep and into a very erotic dream. At 3:30 I came awake to someone padding across the floor and into the bathroom. A few minutes later toilet flushed and the padding went across the room but didn't get in bed. 'What the hell is Julia doing at this time of night?' I thought. \n\nThe hand was still on my cock but the manipulation had stopped. I rolled over to face Julia and drifted off again and fell right back into my erotic dream. I woke a half hour later with a hand jerking on my cock and it was as hard as a rock. I was still in a dreamy state when I felt a pressure on my cock but it wasn't a mouth. I just had my cock pushed into a pussy. \n\nI pushed my cock forward and felt it slide in. I reached out to the body lying beside me and went to put my hands on Julia's small tits and was shocked when my hand landed on a mound of soft flesh. \n\nI lifted my head in shock and felt the body all over and could conclude only one thing. Kate had been lying between Julia and me. I reached beyond Kate and Julia was not there. I then noticed a moan from the sitting room. I thought, 'well my cock is in Kate and it sounds like Julia must be getting herself off in the other room.' \n\nKate was lying on her back. She had put her right leg over my hips to expose her pussy. I was on my side flexing my hips to push into her. She had her left hand on my balls and was rolling them around with her fingers. Kate didn't make a sound but the moans (plural) were coming from the other room. \n\nCarrie woke up with the undulations in the bed and said, \"What are you guys doing? Didn't you get enough last night.\" She assumed it was Julia and I since it often is. Then Carrie heard the moans from the other room and said, \"What the fuck?\" She pulled the sheet back and climbed out of bed. Kate and I continued fucking. She was breathing very hard and I could feel her pussy clamp on my cock. Her muscles tensd but she didn't make a sound other than the heavy breathing. Kate's hand moved up to my cock and her fingers wrapped around the part that was out of her and let her fingers slide off as I entered her again. \n\nCarrie walked into the sitting room and in the very dim light noticed that the day-bed had been set up. She turned on a table lamp and looked to see Julia on her knees fucking Phoenix with her strap on dildo. They were moaning around each other's lips as they held a kiss between them. Julia pulled her head up when she noticed the light was on and smiled at her mother as she kept right on pounding the dildo into Phoenix. \n\nCarrie said, \"Jesus Jules. Well I guess you'll sleep all the way home.\" She watched them for a few minutes and her own juices were beginning to flow.\" She shut off the lamp and was heading back to the bedroom when she thought, 'If Julia is doing Phoenix in there, who's her husband doing in the bed? It has to be Kate.' \n\nCarrie stood at the bottom of the bed in the dark contemplating what she was going to do. She could hear Kate's muffled groans and sound of bodies moving on the sheets. She smiled to herself admitting that she was intoxicated by Kate's massive tits. \n\nShe walked around to Julia's side of the bed and pushed herself in next to Kate. Kate was a little surprised but she moved her body toward me to make room for who she thought was Julia. \n\nCarrie lowered her head toward where she assumed Kate's tits would be. Her lips came right down on Kate's left nipple. She instantly sucked it into her mouth and nibbled on it with her teeth. She decided to bite a little harder until Kate emitted an 'ow', after all she was fucking with her man. She had to pay a small price. She considered the price was paid and went back to caressing Kate's nipple with her lips and tongue. \n\nKate was extra-aroused by the attention to her tit and she felt another orgasm surge through her. Carrie felt it to. I felt another hand descend onto Kate's pussy and began stroking her clit. Kate moaned loudly and shoved her hips high in the air searching for the hand. I came out of her. When she came back down she was grabbing for my cock to shove back into her. Carrie reached down and took my cock and guided it back it. I continued to fuck her. \n\nCarrie was getting very horny and very wet. In the dark she lifted herself up and lowered her hips onto Kate's face. Her ass and feet were against the headboard. Kate tipped her head back to receive what she assumed was Julia's pussy. Kate pushed the tip of her tongue against the clit hovering over her. Carrie immediately surged into an orgasm and ground her pussy down into Kate's face. Kate was pumping her tongue in and out of the pussy. She reached up with her hands to push a finger into her and she realized that the hips above her head were too wide to be Julia's. \n\nKate thought, \"Oh fuck. Here I am fucking the man of my dreams with his wife sitting on my face.\" She doubled her efforts to please Carrie and she was doing an admirable job. Carrie groaned and moaned and screamed her way through several more orgasms. \n\nCarrie bent down and pulled my cock out of Kate's pussy and shoved it into her mouth. She deep-throated me and then went into the classic blowjob. Her face and hands were flying up and down my cock. She felt my load coming but Kate was oblivious as she concentrated on pleasing Carrie. \n\nCarrie, being the little minx that she is sucked my cock hard until she knew I would cum any second. At the last second she sat up straight pulling her head off and with hands still jacking me off aimed my cock at Kate's face. \n\nThe first massive rope of cum launched with incredible force and hit Kate right on her chin. The next several equally forceful shots landed on Kate's neck and Carrie's pussy. The latter promptly dripped down and into Kate's mouth. \n\nWith diminishing force, the final few shots landed between her tits and in her navel. Carrie pushed my still hard cock into Kate's pussy and I began fucking her again. \n\nKate knew the person on her face was Carrie but I still assumed it was Julia. I pumped in and out of Kate for more than a minute while my cock softened and then fell onto the bed. \n\nI pulled away from Kate and 'Julia' and expected to bump into Carrie on the other side of the bed. When I didn't, I knew what was going on. Carrie was responding to Kate's continued onslaught with another orgasm. I sat up in bed trying to make out the forms in the dark. I finally turned on the bedside lamp and could then see Carrie riding Kate's face and furious fondling with Kate's tits. Kate had her hands on Carrie's tits returning the favor. \n\nCarrie turned her face to look at me. She had such a serene face on her. I knew she was just about orgasmed out. I heard the moaning from the other room and went to check that out. Phoenix was mounting Julia from behind with the strap-on dildo. I turned back to the bedroom and said, \"Only in America.\" \n\nCarrie collapsed off Kate's face and fell into the middle of the bed. Kate was scooping up my cum from her face and tits and shoving it her mouth. She licked her fingers clean. Carrie rolled back and licked the cum in Kate's navel and smacked her lips. \n\nI did some quick math in my head and said, \"Holy shit. You guys have been having sex for more than 8 hours.\" \n\nJulia said from her position with the dildo buried in her pussy, \"So have you. At least off and on, as men are prone to do. I think we got a couple hours sleep before we started up again.\" \n\nJulia finally pulled herself off the dildo and Phoenix collapsed onto the day-bed and said, \"Jesus, Jules. I was going to keep going as long as you wanted but I am exhausted. You're insatiable.\" Julia and I burst out laughing. That observation had been made many times before. \n\n\"Alright\", I said. \"Everyone get into the bed. At least try to get a few more hours sleep.\" All six of us were crammed into our king-sized bed. It was cozy. There were pussies and tits everywhere. How was I going to sleep? With Carrie's and Julia's hand on my cock as if to protect it, I finally did fall asleep."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "hot sex",
        "incest",
        "group sex",
        "big tits",
        "interracial sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/hot-summer-night-ch-19"
}