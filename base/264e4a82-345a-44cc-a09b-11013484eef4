{
    "title": "Dindi Pt. 04",
    "pages": [
        "Hey!\n\nChapter 4 is here. It took a little longer to be edited, but is finally ready.\n\nYou could call this \"Travis' Chapter\". It's a bit serious. It explains him a little better, and even Morena makes some revelations of her own.\n\nI've said this before, but let me say it one more time.\n\nWhen I started writing this, I knew instantly that this wouldn't be the kind of story (or characters) people in this site tend to love. It's too serious, maybe. But I like real people with real feelings in real life situations. So I figured I'd submit this since Literotica has all kinds of stories for all kinds of people. This is more about the characters and the things they think and feel than about what happens around them. I try my best to write this as well as I possibly can, considering English is not my first language (I'll always say this and apologize for whatever mistakes you might find). However, I imagine things I'm not sure I'm able to convey to you. I hope I do, though.\n\nBe that as it may, some of you make a point of reading every single chapter of Dindi and letting me know what you think of it. I can't thank you enough for all the nice comments and feedbacks (you know who you are!). \n\nThis story even got me a pen pal! linalinnius, you're a sweetheart. Thanks for reading this before anyone else and highlighting (and fixing!) my mistakes for me. \n\nPart 5 (the last part) is all written, just waiting to be revised a million times before I consider it good enough to be here.\n\nI'll shut up now.\n\nI hope you like this,\n\nXOXO,\n\nNana.\n\n*****\n\nTRAVIS\n\nOf everything her lips were what I loved the most. I knew exactly where they began and where they ended. I knew the little dimples in their corners that gave the illusion of a constant smile even when she was upset and serious. I knew that if I pressed three of my fingers to them, they'd disappear, and the contrast between my pale hand and her rich, gold and brownish skin was fascinating. \n\nI loved their fulness. I loved it when they touched my skin. I loved it when she put them around me.\n\nRight now they were all the more plump and pink, swollen from my ungentle kisses. Powerless to resist it, I shifted in my bed and pressed my lips to hers. I didn't want to wake her up. But I wished she would, anyway, so I could make love to her again, and again. \n\nMake love to her. I wondered when I started calling it that. \n\nShe breathed evenly, blowing warm, humid air out of her parted mouth. I kissed her again, I just had to. Dindi was a light sleeper, although she was very appreciative of the activity. \n\n\"Travis.\" She spoke in her full of sleep voice, with her eyes still closed.\n\n\"Shhh. I'm sorry I woke you.\" I lied, moving to kiss her now she could properly respond to me.\n\nMy lips touched hers very lightly, just to tease her. She felt semi-liquid so soft she was. Her body was delicious. Everything just begged me to take her. With a hand on my nape, under my hair, she moved closer and pressed her wondrous bed warm body to mine. She was so small I was afraid I could break her if I touched her too carelessly.\n\nOutside, I heard the honking of cars and general city noises, but her ragged breaths while she kissed me made for better music. Her tongue met mine, insistent as always. They danced together, swirling around each other's as I rolled on top of her. Her breasts were so supple, it was indecent how they felt against my chest. She made one of her satisfied sounds, and it went straight down my spine making my cock readily hard.\n\nMy insatiable fingers grabbed the flesh of her thighs. I hooked them under her knees and brought her legs up, allowing her to lock her ankles on the small of my back. Then I pushed my hips, stroking myself on her. \n\n\"Hmm, Travis...\" She moaned.\n\nLord, she was so wet already. It was me. I did this to her. With great effort, my lips left hers intent on exploring the rest of her skin. There was a little vein on the side of her neck that pulsed frantically. I traced it, making her shiver and wiggle under me when I let my tongue out to lick along it.\n\nI loved her little sounds. Sometimes they were so desperate, so hungry. She begged me not to stop touching her, kissing her, fucking her.\n\nAll the sensation ability on the skin of my back was focused on processing the feel of her nails running over it. The ten tips of her little curious fingers went down my spine until she grabbed a handful of my ass, silently pleading with me to enter her. I growled on her neck, inhaling the scent of the vanilla body soap she left in my bathroom.\n\nMy mouth went down following the path sure to drive her crazy. I kissed her collarbone, beginning on the left and kissing a straight line all the way to her right shoulder. She squirmed under me when the ends of my shoulder length hair tickled her skin while I kissed down her sternum until my tongue dipped inside her navel. Her back arched on the bed, and she grabbed a fistful of my hair coaxing me to move up again. \n\nI indulged her, trailing licks and little bites up to her breasts. They were so firm, but still so soft. They disappeared inside my hands when I grabbed them. She didn't like it. She said it made them feel small, but actually my hands were huge and her tits were fucking perfection. I loved how she whimpered when I squeezed them. \n\n\"Travis?\"\n\nReluctantly, I lifted my head from her soft mountains to look up at her.\n\n\"I want you to go in right now.\" Dindi was a damned demanding woman. Fuck, if I didn't love it about her.\n\n\"I'm not ready to go in yet.\" But I was, I just didn't want to.\n\nI liked to tease her, drive her mad, make her beg, make her come with just my fingers and tongue so when I finally went inside her she'd feel slick and tight and perfect like only she could be.\n\n\"I'll make you ready.\" She said, reaching her hand down to my face, trying to push herself into sitting on the bed. Quickly, I grabbed both her fists and held them above her head.\n\n\"Don't you dare move, Dindi.\" I glared a warning at her.\n\nI knew she wouldn't keep still. She wouldn't because she just wouldn't, and she wouldn't because she couldn't. Oh, what it did to my male pride to know I could make this woman -the most stubborn and sexy woman I knew- beg me for mercy and release. \n\n\"If you don't stay still, I'll tie you up.\" I threatened.\n\nThat made her laugh. \"Promise?\" She asked with a mischief that forced me to consider the possibility.\n\n\"Yeah, I promise.\"\n\nWith one hand holding her wrists, I brought my free one down between us to grab my throbbing cock. I positioned it at her entrance and began rubbing it on her. Over her clit, down around her lips, then back up to her clit again. It always drove her crazy when I did it.\n\n\"Agh! In!\" She gasped, fighting to free herself from my grip.\n\n\"Shhhh. Stay still, woman.\" \n\n\"Oh! You're evil!\" she drawl.\n\nI rubbed and rubbed myself on her, feeling her wetness making my movements more slippery. She was nowhere near still. Even if I tied her hands to the bed there was no containing the rest of her body. Her legs were practically spasming around my waist. She pressed her heels so hard to my ass I felt the pressure in my bone. \n\n\"Travs...pleeeeease!\" She dug her nails on my hand. \"Please, fuck me already!\"\n\nTwo months ago I had seen her for the first time. Marveled at her beauty. But not even in my imagination had I dared think I'd have her under me this way. Begging and giving herself to me so willingly. It was enough to make me come if I didn't hold myself back.\n\nSomewhere along the weeks we've been sleeping together I picked up these little things about her. I had never been with the same woman exclusively, and for such a long, uninterrupted time before. I was able to tell she had put on some weight by the way my hands roamed over her body. She liked it when I kissed her belly and my beard tickled it. Without even asking what she wanted or how she wanted it, I knew when she preferred me to be rough, or when she leaned towards the gentle and slow. \n\nThe way she pleaded and mewled under me, told me she wanted it fast. I wanted to go slow, though. I had things to tell her later. Things I was afraid would drive her away. So I had to enjoy her body as much as I could before risking losing my access to it. Wanting to feel her hands on me, I let go of her wrists and hooked my thumbs under her knees to push her thighs against her chest.\n\n\"Will you be a good girl and come for me?\" And I knew when she needed me to dirty talk her.\n\n\"Mhmm.\"\n\nHer nails bit my ass as she tried to pull me inside her. \n\n\"Say it, Dindi. You know I like to hear you.\" \n\n\"I'll come for you, Travs.\" Her eyes held mine with pure boldness. \"If you make me.\"\n\nEven when I tried to be in control she'd find a way to tease me.\n\n\"Oh, I'll make you come alright, sweetheart.\" Giving her what she'd been asking for, my cock sank inside her. \n\n\"Ah!\" The look on her face was priceless.\n\nIf I could choose one single sensation to have for the rest of my life, that'd be it. That ecstasy I get just when I go inside her, feel her encircling me, so tight, warm, and wet. I forget everything. I forget I exist. The whole world is inside her.\n\nWhen I started to move and pushed deeper into her wetness I knew I wouldn't last too long. I cursed myself for not having my camera with me. The faces she made when I fucked her. So fucking gorgeous and lustful. I couldn't remember ever feeling so much like a man as I did when I pleasured her.\n\n\"Mmmm, yes, yes, Travs! Right there! Don't stop!\" \n\nFuck me if I could stop. Sex with her was unbelievable. I felt like her body was my own because of the way I fit inside her so perfectly. She met every one of my strokes with an animalistic eagerness. I was very well acquainted with the burning pain on my back that would let me find scratch marks there later.\n\nI was slow. Going in. Going out. Moving around in little circles that rubbed at her slick clit. Her legs were over my shoulders, and every time I pushed in, her thighs touched her breasts. She did something -fuck me if I knew how- that made her internal grip on me fasten, squeezing my cock inside her. It drove me insane. \n\n\"Fuck, Dindi!\"\n\nSitting on my heels, I grabbed her hips and pulled her to sit on me, somehow managing to keep my cock inside her. I liked to watch her closely while I fucked her. Face to face I could kiss her without much effort. I brushed her wild hair from her face and found her mouth with mine. I swallowed her sounds as I gradually picked up speed, finding it hard to kiss her with the ups and downs of her body and her strangled moanings.\n\n\"Oh...ah...ahhh!\" She was close. Always so fast. So good.\n\nMy cock was more easily sucked in the tighter her pussy got. She arched her body backwards, moving like a siren, and rubbing herself on me, making me the beacon of her pleasure. One of my hands felt compelled to caress her breasts, one at a time, as they jumped up and down following the movements of her body. \n\nI loved how her areolae and nipples were various shades darker than the rest of her skin; the color of bitter chocolate. The thought made my mouth water and I leaned over to take the little hard peak in my mouth.\n\n\"...Oh...mmm...\" She was going to come. Soon. I could feel her body ready to shatter around me.\n\nI thrust into her one more time roughly, and as deep as I could go. That was all it took. Sometimes I thought that feeling her come on my cock was even better than coming myself. A tremor shook her from the inside out. Her waves of pleasure squeezed me, and my balls tightened until I started to come too. With her. Inside her.\n\n\"Oh...fuck...\" She gasped, and her ohs and ahs died in her throat. She wasn't the loudest woman when she came. It was like she lost her breath and her conscience. Sometimes she screamed my name. Some others she didn't even say coherent things. But she was never scandalous about it. I liked how real she felt.\n\nMy cock was outlined by the quivering inside her. She never stopped moving. Not for a single second during her orgasm, not even after it. She kept moving, and moving, her body wanting more even when it had already reached its climax. When I came, shooting all I had inside her, I was louder than she was herself.\n\n\"Agh...Fuck, Dindi!\"\n\nI held her, encircling my arms around her ribs, and forgetting for that moment how small she was. Forgetting I had to be careful, or else I might break her in half. Her walls were pulsing around my cock that still twitched inside her as I was milked dry.\n\nThe smell of her skin, the soft smoothness of it, were the only things I had in my mind. In those moments with her I had no problems, no life to deal with, no family troubles, no nothing. There was only her.\n\n\"Mmm. I'm ravenous.\" She whispered breathlessly into my hair.\n\nI tilted my head back to kiss her mouth. She always looked absolutely stunning after she came. Glowing and looking so damned satisfied I wanted to give myself a handshake. \n\nLook at this woman, man. Congratulations, you lucky fucker.\n\nSome stubborn curls clung to her sweaty forehead. I swept them back, then laid her on the bed before pulling out of her as slowly as I could just to watch her mouth shape in that O and then the look of loss mar her features.\n\n\"Let's shower first. You're disgusting.\" I said, grazing my lips against her salty forehead. \n\n\"Wanker.\" She laughed.\n\nI crawled out of bed and went looking for my phone.\n\n\"Hey, Dindi. Have you seen where I left my phone?\"\n\nBut when I looked over to the bed she was lying still, sound asleep. Her naked breasts rose and fell in a slow, steady rhythm. I got an itch to wake her up and take her again. Instead I let her rest, going to take my shower feeling as content as I'd been in quite a while.\n\n****\n\n\"I think we can all agree that Jeff Buckley is better than Elliot Smith.\" \n\n\"Black beauty, I love you so...\" I intoned, making Dindi smile and blush hotly. \n\n\"Oh, I love that song.\" She enthused, throwing her head back and exposing the little mark my mouth had made on the curve of her neck. \n\nRarely, we had this talks when she'd tell me these little facts about herself. Things she liked, things she didn't. Precious moments when she lowered her guard. I loved it when she spoke so fluently, waving her hands everywhere. I added it to the list of things I was learning about her.\n\nTalks with her hands.\n\nLoves Jeff Buckley.\n\nVegetarian.\n\nStubborn.\n\nReally loves that disgusting kale smoothie.\n\nEats a lot for such a small woman.\n\nSays she loves the freckles on my back.\n\nSays she loves my mouth, and when I asked her where?, she said everywhere.\n\nWe were sitting in a table at our little bistro. Same place by the corner we always went to after sex.\n\n\"Morena.\"\n\nShe looked at me wide-eyed. Her eyes were always more brown after sex. Just like mahogany polished wood. I hardly ever called her by her name. To me she was Dindi. \n\n\"I want to ask you something.\" I said.\n\n\"Oh, you look very serious.\" She said, setting her wine glass down. \"Ask on.\" \n\nOh, yes. And she loves her wine.\n\nMy use of her name startled her, so I took her hand from across the table and entwined our fingers. \"It's my birthday this weekend.\" I said carefully.\n\nThe brightest smile split her face. \"Really? How lovely. Do you want to ask me for a present, is that it?\" \n\n\"Yeah. Kind of.\"\n\nShe eyed me expectantly. I opened my mouth, but clamped it shut again. It was a big step to take and I had to tread cautiously.\n\n\"Travis, you're being very serious and that's odd. What is it? You want to have a threesome with George and I? Just tell me what you want.\" She joked, trying to make me laugh and succeeding at it.\n\nI took a deep breath then let it out. \"I'm going home. To my mother's house, I mean. I want you to come with me for the weekend.\" I said it like I was ripping off a band-aid.\n\n\"Oh.\" \n\nI already knew enough of her to see that her surprised reaction came from reservation. She had walls around her, walls I had yet to bring down. Of course I knew from the moment I decided to ask her that the invitation would take things to a whole new level. So far, the both of us treated the whole thing as only sex though I, at least, hadn't slept with anyone else from the day I first laid eyes on her. I didn't want to. I figured she hadn't slept with anyone else either, considering she had very little free time, which she divided between George and I.\n\n\"You want me to meet your family?\" I squeezed her hand afraid of the sudden shadow of doubt that passed across her face. \"Travis...\"\n\nJust as I never called her Morena, she hardly ever called me Travis. At least not since we started whatever the hell this was between us. She'd been calling me Travs since that first time. Travis was reserved for conversations of the serious nature, which we almost never had.\n\n\"No, no, Dindi, listen. It's only 'cause it's my birthday. Every year I promise my mother I'll go home, but I never do. Not once in five years.\" I stopped to catch a breath. I couldn't screw this up. This wasn't even the worst part. \"I just want you to come with me. Have some fun. Go to the beach. If it makes you feel better I'll tell my family you're just a friend.\" \n\nMorena laughed loudly, cocking an eyebrow. \"Just a friend? A fuck buddy, and an obvious one at that.\"\n\nI clicked my tongue in disapproval. Was that what she thought she was? Just a fuck buddy? I guess that's what we were, really. At least that's what she liked to pretend we were. I knew better, though. No strictly sex relationship felt like this (I've had a few of those before). Hell, I doubted even real relationships felt this good. \n\n\"Please? These weekends home are shit and having you there would help me go through it. At least I'd have a distraction.\" I needed her to say yes. If she asked, I'd beg her on my knees.\n\nShe pressed her lips into a line and stared at our joined hands. \"A distraction, yeah?\" I sighed relieved catching the light joking tone in her voice. \"And how would I distract you?\" She lifted her eyes to mine.\n\nI brought our joined hands to my lips to kiss hers. \"Well, you could do that thing you do with your mouth, you know? When you put it around my cock, you know what thing I mean? When you suck it like a dirty little girl?\" I teased her.\n\nShe blushed, the crimson of her hot blood showed under her dark skin. \"Oh, that thing? The thing I only do when I want something? Oh, yes, I know what you mean.\" She played along. \n\n\"Only when you want something? No. I think you do it because you really like it.\"\n\n\"Nope.\" She shook her head, making her curls jiggle around her face.\n\n\"Yes, you do. I know you like it, because I'm the one who gets to see your face when you do it. You look like you like it. I have pictures to prove it.\" I was smiling, but when the actual image of the way she looked when she was kneeling down in front of me, taking me in her mouth and eyeing me with defiance in those beautiful eyes of hers...I ignored the urge to throw her over my shoulder and march back to my loft.\n\nShe laughed and pulled her hand away from mine. She always did that. Whenever we were in public and I took her hand, she never let me hold it for too long. She always pulled away after a few minutes, trying to be subtle about it.\n\nIt's just sex. It's all that it is. We had agreed the first night we had slept together. Or rather, I had agreed with her. \n\nStill, she had a toothbrush in my bathroom cabinet. She had panties in my underwear drawer. Her vanilla soap scent infested my bathroom. My sheets smelled more of her than of me. She was in my bed almost every night for the past two months, and the most terrifying thing to her was to think she was something like my girlfriend. As if not saying the actual word would change the fact that I didn't want to be with anyone else. ",
        "Since that first time I had sex with her I knew something was different. That had been weird. Good weird. I didn't remember ever feeling so intimate and comfortable in bed with anyone as I'd felt with her that day. God knows I've had my fair share of bedfellows. But with Dindi it was just...right.\n\nShe was looking at me with her brows furrowed. She cocked her head to one side, and then to the other, as if studying me. \"I like you, Travis. But I don't want to complicate things. This is easy. Easy is all can handle right now.\" She said with a sigh.\n\nThere was this line she wouldn't let me cross. No matter how much I tried to step over it.\n\n\"You won't complicate anything. It won't change anything. It's a weekend. I'll introduce you as a friend. What could be so complicated about that?\" It was a weak argument. But I didn't have a better one. I just wanted her to go with me. In two months I hadn't spent a single weekend without her, and I wasn't about to start now. Specially since it was my birthday. \n\nAlso, I knew better. That would definitely complicate things. I've never brought a girl home before. Even if I told my family she was just a friend they'd know. They'd see right through me. \n\nMorena's gaze was fixed on mine. She seemed to be lost in her head. \"Alright. I'll go with you.\" She said in a low voice.\n\nI exhaled pure relief. \"You will?\" \n\nShe blew air that sent a curl flying upwards before it fell down her face again. \"Yes, Travis, I'll go. As a friend, yeah?\"\n\n\"Yes, you're my friend, Dindi! Thank you! I promise you there will be chocolate cake.\" I said, barely containing my enthusiasm. \n\n\"Oh, I hope so. I'm only going for the cake.\" She smiled that coy smile of hers, with her bottom lip trapped between her teeth. \"Where does you mother live, Travs?\" I was back to being Travs. \n\nI gave her a bitter smile, thinking of home. \"Staten Island.\"\n\n****\n\nMORENA\n\nI was in Travis's bedroom gathering my clothes, which were scattered all over his floor, when he appeared. He leaned lazily on the door watching me, wearing a wary expression.\n\n\"What is it?\" I asked, unfamiliar with his seriousness. He was always smiling.\n\nHe walked toward me and sat on the edge of the bed. \"I want to tell you something.\" \n\nI sat beside him, waiting patiently -but, anxiously- to what he had to say. Travis looked nervous, uncertain in a way I'd never seen before.\n\n\"I'm listening.\" I carefully urged him on, dying of curiosity but not wanting to pressure him.\n\nHe took my hand in his, putting his other one atop it. \"You know my scar?\" The eleven inch old welt running across his left ribs.\n\nI nodded. It was impossible not to notice the scar; pink and protuberant, spoiling his perfect skin. I've always wondered where he'd gotten it, never actually meeting the courage necessary to ask him about it.\n\n\"I got it in a accident. When my father died.\" He confessed, not looking at me, not looking anywhere really. He had his eyes fixed on the floor, but it seemed to me he didn't even see anything in front of him. He looked inwards, at a memory.\n\nI knew his father was dead. He'd never told me so, however, I knew from his reaction when I'd told him about my dad that his was gone too. He'd known my father was dead when I spoke of him by my tone of voice alone, and I had seen the same faded longing and sadness I dragged behind me on his blue eyes.\n\nTravis fell quiet, staring into nothing. To remind him I was still there I moved closer, and encircled my arms around his left one, pressing my nose to his shoulder. By then, his smell was as familiar as my own.\n\n\"My father was a jazz musician. He travelled a lot, played in a lot of places. That day he...\" He trailed off. \n\nI could see him struggling to find the words. I took his face in between my hands and kissed him lightly. \"It's alright, Travis. You can tell me.\" I said. \n\nIt was strange to see him so fragile, so open like that. With me, Travis had always been very caring, sweet, even clingy sometimes, but never so exposed. I had this image of him already formed in my mind and that didn't look a thing like the man sitting beside me now. He was such a big man. He always made me feel so protected and safe in his arms, I got a strange feeling of reversed roles when I became aware of his watered eyes.\n\nHe cleared his throat, turning his face away from mine. \"He'd traveled to play somewhere. I don't remember where, but I was supposed to pick him up at Kennedy and drive him home for Christmas. The night before-\" He stopped and I could see him squinting his eyes, chasing some fleeting memory. \"I had a bad night. It'd been Christmas Eve and I was still hungover when I drove to the airport. Of course my Dad noticed I was shit. He insisted I let him drive, but I didn't.\" He made another pause, his Adam's Apple went up and down as he swallowed dryly. \"I had this old truck, my tires weren't so good. It had snowed a lot and the roads were all slippery...I had the fucking worst headache in history. Everything was shit. My Dad, he...he put on one of those bossa nova/jazz records he loved so damn much, and the music was too loud for my liking. I wanted him to turn it off, he wanted me to wait until this one song was over. 'This is good music son, appreciate it.'\" Travis mimicked his father's voice, letting out a dark chuckle. \"I couldn't even think straight, I felt like my skull was being split open. We started to fight -well, I started fighting him- over the fucking music and none of us saw when the truck came our way.\" One single tear ran down his cheek, disappearing into his beard. He ignored it, so I pretended to not notice it, either. \"I didn't see it coming, Dindi. It came out of fucking nowhere. I just...I didn't see it.\" \n\nHe blamed himself for his father's death?\n\nThat day at the cafe, the first time Travis and I had an actual conversation I could tell he carried a weight on his back. I would never have guessed it was something like this. Something that wasn't his fault. It wasn't his fault it had snowed that day. It wasn't his fault the truck had hit them. The fact he'd drank the night before made no difference.\n\nObviously, someone had told him that before. All the same, there was no point in telling someone something they were determined not to believe. If anyone knew that, it would be me. \n\n\"Oh, Travis...\" I didn't know what to say to make him feel better, all I knew was that I wanted to make him feel better. I wanted to hold him to me. Get it inside that thick head of his that he wasn't to blame for his father's death.\n\n\"We were almost home. It was just an hour drive.\" He muttered, and I didn't know whether he was talking to me or to himself. \"He was in a coma for months. He died the day before my birthday.\" He jerked his arm away from my hold trying to slip away. I didn't let him, though. Before he could run I had straddled him, making it impossible for him to evade me.\n\nI wonder if he's ever told this to anyone before...\n\n\"Hey, Travis. Look at me.\" He was looking down at his hands resting on my thighs. I tried to make him look up, but he kept forcing his head down like a stubborn child. \"Travis, please. Look. At. Me.\" I put a knuckle under his bearded chin and forced his eyes up to mine. They seemed to be clearer blue, glossy and red rimmed with tears he manly tried to keep away. \n\n\"Listen to me, Travs. Can you control the weather?\" I asked. He just stared at me. I pressed my thumb to the soft crease deforming the space in between his blonde brows, trying to magically make it disappear under my touch. \"Can you?\" I asked again.\n\n\"No.\" He croaked.\n\n\"Do you get to decide when people live or die?\" I went on, not really knowing if I could actually be much help.\n\n\"No, Dindi, but-\".\n\n\"Do you think that if you'd left your dad's music alone he'd still be alive?\" I cut him off. \"Do you think that if you hadn't been drinking the night before he'd still be alive? Do you honestly think that anything you could've done would have prevented your dad's life from ending when it did? When it had to?\"\n\nI knew what his answer would be. If he carried that guilt around, he obviously thought he could have changed things. \n\n\"Yes. Yes, Dindi, I think I could've have.\" He admitted.\n\nMy forehead fell on his, and when I shook my head our skins rubbed together. How could I, me, change his mind? No one could. That had to be him, his decision. I tried anyway.\n\n\"No, love, you couldn't have. You can't predict the future. You can't change how things happen. They just do, Travis. It's out of our hands. People die when they do. It's not your fault that truck hit you.\" I kissed him and tasted his salty tears on my lips. \"I'm sorry you lost your father, I know how that feels. But I'm even more sorry you blame yourself for it. I won't tell you it wasn't your fault -even though I know it wasn't- because it doesn't matter how many people tell you this if you don't believe it yourself.\" \n\nTravis laughed. Not the usual amused sound I loved, but a sad, dark laugh. It was no good. He blamed himself and he seemed to project it on everyone else. Recalling what he'd said earlier, about not being back home in five years despite promising his mother, I wondered if his dad was the reason. Certainly his family didn't share his belief that he'd caused his father's death, otherwise his mother wouldn't insist he go home for his birthday.\n\n\"The day after your birthday.\" I began with a careful voice. \"Is that you father's death anniversary?\"\n\n\"Mhmm.\" Was his answer.\n\nWas that the real reason he wanted me to go with him? To support him? Help him through it? Why hadn't he told me this before he invited me to spend the weekend? He must have realized that telling me this would compel me to say yes. Or maybe he thought I'd blame him too, like he did himself?\n\nI was supposed to be the woman he was currently fucking. I wasn't supposed to get involved and risk getting hurt again. Wasn't he some kind of womanizer? Why on earth was he telling me these things? Asking me to meet his family? Regardless of any of that, I wanted to be there when he needed me. It was a feeling I was powerless to fight against. If I had any second thoughts about this weekend, they had vanished the minute he told me about his dad. It explained a lot about his personality. \n\n\"You'll be alright, Travs. I'll be there with you.\" I promised, meaning it and surprising myself for it.\n\nTravis sighed deeply, then hugged me, burying his face on the crook of my neck. His beard tickled and aroused me in conflicting sensations. \"Why didn't I meet you some five years ago?\" He mused.\n\nI pulled away just enough to look him in the eyes, trying to give him the sweetest smile I could put on my face. \"Because I lived across the ocean.\" I said matter of factly. \"And things happen when they do, Travs. No point crying over spilled milk. I'm here now.\"\n\nHe was crying. I brushed my thumbs over his cheeks, wiping away the tears he gave up fighting, but still ignored. They ran down his face, wetting his diligently kept beard. \n\n\"This is getting a bit bushy.\" I tugged at the hairs covering his jaw, trying to lighten the mood. Travis gave me that look he reserved for sex. That look of complete amazement that made me feel special, like I was some kind of wonderful, inimaginable creature.\n\n\"You are really something, Dindi, you know that?\" His smile when he said it was the genuine kind. It rubbed off on me.\n\nI rolled my eyes playfully. \"I do, actually.\" \n\nThen his mouth was moving against mine before I had time to process the information. He kissed me and wasn't kind about it. He kissed me angrily, pouring all of himself into that kiss, making me feel lusted after, admired and punished all at the same time.\n\nHe stood on his feet, bringing up with him. My ankles were firmly clasped behind him. \n\n\"Stay tonight?\" He asked with his lips kissing my neck. \"Please? Stay? I need you.\" \n\nI need you. That was a phrase I was hearing often lately.\n\nI never stayed during weeknights. When my classes were over I went to his place and we played our routine: sex, pillow talk, food, sometimes more sex, then goodbye. Though he always asked me to stay, I never did. Never, except for one time because of a storm. I spent the weekends, never weeknights. This time, though, when he asked me, after what he'd just told me about his father, about his guilt, I wanted to stay.\n\n\"Stay?\" He pleaded with such a tortured look on his face I was helpless to say anything but yes. \n\nMy eyes studied his face for a long moment. Wasn't this becoming too serious? Wasn't this going to complicate things? Wasn't I stepping over my own boundaries? I had just agreed to meet his mother, for fuck's sake. Now I was about to break another one of my rules and sleep in during a weeknight. My control was slipping through my fingers, and I was falling. I could only hope the landing wouldn't hurt to much.\n\n\"Yes.\" I said, not all that certain of myself.\n\nTravis's relief was obviously stamped on his face. I felt the relaxed breath that left his chest. \"Good.\" He said, before he kissed me again.\n\nLater, when he buried himself inside me that look of complete obliviousness loomed over his face. He seemed to be lost inside me, forgetting about the whole world around us, and not for the first time I felt like his anchor, like his drug. Something that helped him forget and feel better. The worst part was that I liked it. I loved it. I liked to be what made him feel better, even though I knew that wasn't all that safe a thing. Not really.\n\n****\n\n\"You're meeting his fucking mom?\" \n\n\"Well, yes, but not like that.\"\n\nGeorge was sitting on the bed while I packed some clothes for the weekend.\n\n\"Not like that? What the bloody hell does that mean?\" From the moment I told him about going with Travis to his mother's for the weekend, George had been relentless in his pursuits to make me change my mind.\n\n\"I'm not going there to be introduced as his girlfriend, Gee. Which I'm not by the way.\" I added quickly. \"I'm just going with him. As a friend.\" The look Gee gave me should have been in the dictionary under the definition of rubbish.\n\n\"Mo. All you've been doing this past month is to pretend you're not his girlfriend when he sees you more than I do! And you bloody live with me! You keep trying to not get in too deep with him but I think you already are, and this just proves it.\"\n\n\"Proves what, George?\" I asked annoyed, already anticipating his answer.\n\n\"You're falling for him when you shouldn't be. Travis is meant to be your boy toy, not your boyfriend.\" \n\nThat remark bothered me too much. What the fuck was the matter with George? He'd been the one to suggest I spread my legs wide open for Travis, in the first place.\n\nI tossed a piece of clothing inside my bag then zipped it closed. I took a deep breath. Gee wasn't all that wrong. The thing was, the thought had crossed my mind. Travis and I had slipped into a comfort zone, a place where we pretty much behaved like a couple, but we had agreed since day one: It's just sex. Just for the sex. No strings attached. Then why did I feel tethered to him?\n\nThe sex was so fucking fantastic. Weird, but not a bad kind of weird, just different. Easy. Natural. Those were good things. We fitted together well. It was just...good. \n\nWhatever people thought of him, man whore or not, Travis was a good man. He was sweet, caring, thoughtful, and his biggest fault was that he didn't seem to know that himself. \n\nSometimes I felt like his cornerstone though. That when I didn't want to have to bear his weight on my back. I wanted to be under him and keep things as simple as that. \n\n\"George.\" I said after a long pause. \"I like him very much. I admit that I enjoy our time together. Yes, things are a bit more serious than they should be, but I've got both my feet on the ground. This time things will be different. I know better now. I know that eventually this will end. Right now I know what I'm doing. And what I'm doing is helping a friend out. That's all.\"\n\nThat was rubbish. Lying to myself wasn't something I was prone to do, except when it came to Travis. The fact was that I wanted to go with him. To be with him. Because when he told me about his father and how he felt guilty about it, all I wanted to do in the world was hug him and try to convince him that it wasn't his fault. At the same time, I didn't want to do it. I wanted him to do it himself. \n\nIn other other words, I was completely and utterly fucked. \n\n\"Gee, I have to go.\" I said, throwing my little bag over my shoulder. \"I'll call you when I get there.\"\n\nHe stood up to his full height and opened his arms for me. I stepped into his embrace. Gee was just as tall as Travis, if only an inch or two shorter. \n\n\"You're my favourite person in the world, Mo. I don't want you to get hurt again.\" I exhaled heavily on his shoulder. George liked to overworry about me, and I hated to worry him. Be that as it may, I could never deny he had a bit of reason to be worried. The last time I had my heart broken, he'd been the one to pick up the pieces. He knew the extent of the damage that caused in me.\n\n\"I know what I'm doing, Gee. Travis won't hurt me. I won't let him.\"\n\nGeorge pulled away and his hazel gaze met mine. \"I wasn't talking about Travis, Mo.\"\n\nI ignored him, whatever he meant.\n\n\"I know what I'm doing.\" I said again, giving him one last quick hug before going out the door.\n\nI know what I'm doing.\n\nIsn't that precisely what people say when they have no bloody clue what the fuck they're doing?\n\n****\n\nI was lying belly down with my chin resting on Travis's back. He had the sort of skin that refused to tan. Instead it coloured scarlet then left inumerous freckles in its wake. I loved those. The summer had brought out even more of them. Points of light brown over light skin. They dotted a path from one of his shoulders to the other in a random pattern like stars in the sky. \n\n\"You need to use sunblock.\" I said, drawing circles on his bare back.\n\n\"Why?\" Travis was lying prone on his bed, exhausted from the mind blowing orgasms he had just given me.\n\n\"Why? Because you should. Too much sun is bad for your skin. If you get sunburned I won't be able to touch you. Also, you'll get older faster, not to mention the skin cancer danger and...\" \n\n\"But I like the sun.\" He interrupted me.\n\n\"You're getting freckled.\" My fingers traced the little dots, connecting them. \n\n\"You love my freckles.\" He mumbled.\n\n\"Yes, I do. They're lovely. But you'll look like raisins by the time you're forty if you don't take care of yourself.\" \n\nIt was hot as hell this time of the year, and he kept running around without sunscreen or a shirt. \n\n\"Well, it's a pity we all don't have such lovely skin.\" He said, turning to lie on his back and exposing his chest to my roaming fingers. They drifted to his scar like a magnet. He shivered, but let me touch it. He always let me touch it.\n\n\"I use sun block, you know.\" I declared mildly offended. \"Just because I'm brown already it doesn't mean my skin won't burn, too. Besides I have more melanocytes to turn into cancer cells, and...\"\n\n\"You are such a nerd.\" \n\n\"What?\" \n\n\"You're a nerd.\" He said again, matter-of-factly.\n\nI moved to straddle him. \"No, I'm not. I'm simply stating a fact that is known by every human being in the world but you. Too much sun is bad for you. Too much anything is bad for you.\" He put his hands on my hips, stroking up and down my sides.\n\n\"Even too much sex?\" He teased with that smirk that drove me crazy, making me laugh and lean over to kiss him.\n\n\"Unfortunately, yes. Even too much sex.\" I said with my lips so close to his, they touched when I spoke. \n\nTravis rolled on the bed, pinning me beneath him. \"I don't think that's accurate, Dindi. You're very smart, but in this you're wrong. There's no such thing as too much sex. Certainly not with you.\"",
        "My mouth was open to protest, but then I was silenced by his tongue getting inside it. I felt the full weight of his naked body over mine. His hair fell like a curtain around his face. My skin started to prickle with heat, but we had no time. I had arrived two hours earlier ready to leave for his mother's house, when he dragged me to his room and got rid of my clothes as if they were on fire.\n\n\"Mhmm.\" I moaned, protesting against his mouth, but he misunderstood my meaning and kissed me harder. \n\nI tried to stop him, but my hands betrayed me, clutching at him instead of pushing him away. When he went down to kiss my breasts I had a window of opportunity to speak.\n\n\"Travs...\" I began, breathless. \"We have to go. Come on. We'll be late. I'm never late.\"\n\nHe responded by biting on one nipple. I should've pushed him away, but I arched my back to meet his mouth. Fresh moisture leaked out of my already pulsing pussy.\n\n\"You're always late to meet me.\" He pointed out.\n\n\"Well, that's...ah...mmm\" His mouth was kissing down my belly, creating a shiver that went from my scalp to my toes. \"That's on...hmmm...purpose...ah, god. Stop it!\" I tried to wiggle away, but he held me in place with his big hands on my hips.\n\n\"Stop it, uh?\" His voice was pure menace. \"You want me to stop? What happened to 'Oh, Travs, don't you fucking bloody stop fucking me!'\"\n\n\"I don't say that, mate.\" I forced my face into a serious mask, despite the urge to laugh.\n\n\"Oh, don't you?\" \n\n\"No. Too many fuckings in one sentence. Also, I don't mingle the fucking with the bloody. It's either one or the other.\" I tried not to laugh, but failed at it.\n\n\"Let's see if that's true.\" He said.\n\nBefore I knew what was happening Travis grabbed me by the hips and flipped me over. I landed on my knees and elbows on the bed.\n\n\"You've got a really nice ass. You know that, Dindi?\" He said, caressing one of my asscheeks.\n\nI was still wet from Travis's previous ministrations, now it was just embarrassing how ready for him my body made me. His voice alone had me afraid my need for him would flow down my thighs. He pulled my hips up and positioned my ass in the air, right where he wanted. His thumb made a slow circle around my remarkably wet clit.\n\n\"Oh, fuck! Now you're just being evil, Travis!\" I cried only to have him laugh at me.\n\n\"You're the one who's being a little tease. Maybe what you need is a dick in your ass.\" And with that he pushed his hard cock all the way inside my wet, still swollen pussy.\n\n\"Jesus!\" He hissed, stilling himself for a second before putting all of his effort into moving his hips inward.\n\nMy head dropped to his pillow which muffled my agonized cry. His invasion of my body was so intense, my eyes watered. Travis was pounding so deep into me that he sent air out of my lungs with every forceful thrust. It seemed like my pussy had molded itself to his cock. It greeted him, holding him as if welcoming him back home.\n\nI propped myself on my elbows and began to circle my hips, rubbing myself on him. It was so good to be thrown under his mercy, letting my body be moved by the sheer force of his thrustings. The slapping sound of Travis's pelvis against my ass filled his room, and just as he'd wanted I began to plead with him for my release.\n\n\"Mmm, god! Travis, pleeease!\" I cried. Then the bastard stopped. I could've cried with frustration.\n\n\"What was that, Dindi?\" Even though I couldn't see his face I was sure he was smirking. I heard it.\n\n\"Fucking bastard.\" I whispered against his pillow.\n\nHe gave me one single harsh thrust almost causing me to hit my head on the headboard. \n\n\"Ah!\" I gasped.\n\n\"What, Dindi?\"\n\nBastard.\n\n\"I said please.\" I turned my head to give him a sour look and answered as flatly as I could manage considering his cock was throbbing inside me.\n\nTravis rolled his hips torturingly slowly, teasing at my engorged clit. \"If you don't tell me what I want to hear, then I won't give it to you.\" He said sounding serious, but I knew he was making fun of me.\n\nI huffed. The bastard. He would get what was due to him soon. Right now I needed him to finish what he had started more than I needed my pride.\n\n\"Travs, please.\" I impersonated my coy inner slut. \"Please, don't you fucking bloody stop fucking me.\"\n\nHe laughed, content with his victory, then his cock resumed its hammering inside me. Swallowing my pride never felt so good.\n\nI was panting and screaming muffled, unintelligible words against his pillow in no time. The thought of the bus we were in risk of missing a million miles away from my mind.\n\n****\n\nTravis didn't drive. At least not anymore. So we had to go all the way from New York to Staten Island by bus. Two buses and two hours later we were dropping our bags in his mother's living room.\n\n\"Mom! We're here!\" He shouted.\n\nSuddenly I felt out of place. The mantra of my relationship with him was: It's just sex. It's just sex. But there I was, about to meet his mother, who would see right through me when he introduced me as a friend.\n\n\"Travs,\" I called. \"You did tell your mother I was coming with you, yeah?\"\n\n\"Of course, Dindi.\" He stepped toward me and kissed my forehead. \"I told her I was bringing a friend.\"\n\n\"And did you tell her your friend has a vagina?\"\n\nHe smiled, turning his back to me. \"She won't mind your vagina. Relax.\"\n\n\"Travis?\" His mother called from somewhere in the back of the house seconds before she emerged wearing gardening gloves. \n\nShe was a short, pear-shaped woman, probably in her late fifties, though her hair was still as gold as his. When she saw him, she brought her glove covered hands to her mouth.\n\n\"Oh! Travis!\" She shrieked, before he engulfed her in a bear hug.\n\n\"Hi, Mom.\" He bent down, folding himself over her.\n\nI stood behind them, studying the scene. Travis had told me he avoided coming home. Clearly, by his mother's reaction, she didn't blame him for his father's death. No one did but himself. Now that I saw the woman sobbing at the sight of him, I wondered just how serious his estrangement from family had been.\n\n\"Oh, my boy, look at you! You look so handsome!\" The little woman said. \"I missed you so much!\" Travis's tall body hid her from my view. And me from hers.\n\n\"I missed you too, Mom.\" \n\nA little jealousy stung me. My mom was an ocean away and I hadn't seen her in months. I missed her like a limb.\n\n\"Mom,\" Travis stepped aside, revealing me. \"This is my friend, Morena. Morena, this is my mother, Evelyn.\"\n\nMrs. Keegan's first reaction as her eyes landed on me was infinitesimal. I doubted Travis would've noticed, but I saw it. Growing up I saw many looks like that. I was used to them. It was as quick as it was subtle. She stepped towards me and took a little bow.\n\n\"Oh, hello, my dear. Welcome.\" She gave me a sweet smile. \"I won't hug you, I might dirty your clothes. I was tending to my roses, you see.\" She held up her gloved hands to me, covered in dirt.\n\n\"Oh, hello.\" I said carefully. \"That's alright, Mrs. Keegan. Thank you for having me.\" I offered her all of the politeness my mother had taught me.\n\n\"Oh, you have an accent! How unusual!\" She giggled. \"I prepared your old room for you, honey.\" She said, turning to Travis. \"And the guest room for your friend.\"\n\nFriend. Yep. She saw right through me. \n\nOf course I wouldn't sleep in the same room as Travis. Here I was his friend not his...what was I? His fuck buddy? \n\n\"Go on up. I'll get dinner ready. You brother and sister are coming!\"\n\nTravis gave his mother a sad smile at the mention of his siblings. The only thing I knew about his brother and sister was the fact that they existed. I made a mental note to ask him about them later.\n\nI took my little bag and followed Travis up the stairs when his mother disappeared into the kitchen.\n\n\"She likes you.\" He said with genuine conviction.\n\n\"Oh, yes. I could tell.\" \n\nOh, why had I agreed to this again?\n\n****\n\nTravis had showed me to the guest room, then gone into his old room in order to get ready for dinner. After two hours in a bus, and the two hours of sex before that, I felt dirty. Literally. I had just exited the shower and wrapped a towel around my still wet body when Travis entered the room, startling me and almost causing me to drop the towel.\n\n\"Don't you knock?\" I chided him.\n\nHe looked fresh wearing a white shirt unbuttoned to his stomach. His long hair was combed back, still wet. He moved towards me like a cat preying a bird.\n\n\"You do know you're not going to sleep in here, don't you?\" He put his long arms around my waist, pulling me to him, allowing his large hands to slid down until they rested on my ass.\n\n\"No, I don't. This is precisely the room I'm sleeping in.\" \n\nHe raised his blond eyebrows, pursing his lips, all thoughtful. \"Well, I suppose that's a better idea. It will be easier to explain things to my mother if she finds me wandering the hallways early in the morning.\" He bent down and kissed me. \n\n\"Uh-hum,\" I pushed him away. \"Travis. We are not doing this here.\"\n\n\"Why not?\"\n\n\"It's your mother's house for fuck's sake!\"\n\n\"So? I lost my virginity in my room when I was fifteen.\" And his mouth was on mine again. \n\nI was going to say something, push him back, but his mouth felt so intoxicating on mine. I twisted my fingers in his wet hair and kissed him back until he groaned lowly in his throat. His fingers found their way down and under my towel. I thought better to stop him while I could still resist him.\n\n\"Go away and let me get dressed.\" I broke the kiss and pushed him towards the door.\n\n\"Don't take too long. I'm hungry.\" He said, offering me a smug look that suggested he didn't mean food.\n\n\"Bugger off, Travis.\" I said in mock annoyance before closing the door on him.\n\nFinally alone, I sat on the bed and ringed George up.\n\n\"Gee?\" I said when he picked up.\n\n\"What happened, Mo.\" He knew something was wrong instantly.\n\n\"Gee, I should've have listened to you.\" George had advised me that coming with Travis might not be the best of ideas. I, unwisely, had disregarded his advice.\n\n\"What is it, darling?\"\n\n\"His mother gave me the look.\" The 'you're a black girl' look. I didn't have to explain it to him. He knew just what I meant. \n\nI grew up seeing that look on people's faces whenever I went out with my very white dad. And later on in life with George, because he liked to tell people I was his sister. \n\n\"Oh, to the bloody devil with her!\" He said \"Did he tell her you're together?\"\n\n\"We're not together, Gee.\" I insisted we were not.\n\n\"Whatever, Mo. You know what I mean.\" \n\n\"He told her we're friends, but of course she knows we're sleeping together.\"\n\n\"You know what to do, Mo. Head up, shoulders back and fuck her.\" \n\n\"Yeah. I know.\" I sighed. If only things were that easy.\n\nI trusted she would treat me with enough civility, because Travis's relationship with her was fragile enough without me making it worse.\n\n\"I'm getting ready for dinner. Any fashion advices?\" I asked, moving the subject away from unpleasantness.\n\n\"Did you pack your blue dress?\"\n\n****\n\nOnce I was ready, wearing the vintage, light blue dress Gee had suggested, I left the room and stepped into the hallway to see Travis closing his bedroom door.\n\n\"Hey, you. I was going down to-\" But when he turned I saw he wasn't Travis.\n\nThe man was just as blond and just as tall as Travis, but his hair was shorter and neatly combed, his beard closely shaved. Where Travis was lean, this man was bulkier. \n\n\"Forgive me. I thought you were Travis.\" I said, apologizing.\n\nHe eyed me with undisguised curiosity. \"No. I'm Max.\" He said.\n\nHis brother.\n\nHe stepped closer and extended me a hand, which I took. His shake was firm. An involuntary shiver raised the little hairs on my arms. He shared the clear, blue eyes with Travis.\n\n\"You must be Morena.\" He said, smirking.\n\nHe knew of me? How very interesting.\n\n\"I am, yes. And you're Travis's older brother.\" \n\n\"The one and only.\" He smiled, and the resemblance between the two brothers was astonishing. They had the same smile, the same uncanny hooded blue eyes. And he was just as handsome as Travis. \"You're going down?\" he asked.\n\n\"Yes.\"\n\n\"Let me escort you?\" He said offering me his arm. \n\nI decided I liked him, so i took it. \"Why, thank you, Max.\"\n\n\"You're welcome, Morena.\" \n\nAnd Max and I marched down for dinner.\n\n****\n\nTravis sister was also beautiful. A family trade, obviously. However, I don't think I've ever seen a woman look so tired. The dinner table was complete with Travis's nieces and nephews. Three from his sister's side (2 boys and 1 girl), and one (another girl) from his brother's. Plus, his brother and sister in law.\n\n\"So, Morena.\" Travis's sister, Charlotte, began. \"What brings you to this side of the atlantic?\"\n\nCharlotte sat across from me in the table, both of us adjacent her mother, who sat in the head of it. I had a nagging feeling Mrs. Keegan had purposely sat herself close to me after Travis had chosen the chair beside mine. \n\n\"Well, I was offered a teaching position in this fancy gallery. One I couldn't refuse.\" I felt like a bug under a microscope.\n\n\"That's great. What do you teach?\" Charlotte seemed to be genuinely curious about me. I was able to tell, by the way she greeted Travis earlier, that they were close. Or at least had been.\n\n\"Art history.\" I responded.\n\n\"Oh, so you're an artist? Like Travis?\" It was Mrs. Keegan who asked.\n\nI turned to face her and she wore such a sweet, naive expression I found myself smiling at her.\n\n\"Not at all. I only teach about art. I have no talent for doing any.\"\n\n\"Oh, I see.\" She said. \"Do you like the chicken? It's Travis's favourite!\"\n\nI gaped at her, not knowing how to tell her I wouldn't eat her special dish.\n\n\"Morena's a vegetarian, Mother.\" Travis answered for me. \n\nI turned to him, smiling gratefully. I could've kissed him. He put his hand, discreetly, on my knee giving me a little reassuring squeeze and leaving it there.\n\n\"Oh, I see.\" She mumbled.\n\nThe subject shifted from me to Travis's nieces and nephews, who were making a mess out of dinner. \n\n\"Teresa! Come back here, little girl!\" Charlotte called to one of her children. A little blond girl who looked more like a doll than a child.\n\nShe jumped off her chair and was circling the table coming right at me. She stopped at my side, between Travis's chair and mine.\n\n\"Are you ucle Trabis girlfriend?\" She asked me, brown eyes wide.\n\n\"TERESA!\" Her mother chided, and the little girl was completely unfazed. \n\nWithout even looking, I knew all eyes on the table were on me. I looked at Travis who smiled the biggest smile I had seen so far, and that's saying something. The clatter of a fork being dropped into a place called my attention, and I turned my head to see his mother was the color of a red chilly pepper.\n\n\"Oh, me? Oh, no. No. I'm his friend, that's all.\" I told the little girl. \n\nShe pouted her plump pink lips and looked curiously up at me. \"You're pwetty.\" She said. \n\nI laughed. At least she liked me.\n\n\"I think so too, Tess.\" Travis said, and I could've punched him this time.\n\n\"You speak funny.\" She giggled.\n\nMy face was burning with the weight of everyone's attention. Mrs. Keegan's disapproval was like a punch in the gut. Charlotte came to pick her daughter up and sit her back in her place. \n\nTaking a sip of my wine I was glad when everyone's interest was drawn to Charlotte's husband the moment I felt, more than noticed, Mrs. Keegan eyes on me. My smile was already painted on my face when I turned to see she wasn't even looking at my face, but at my lap, where Travis's hand laid dangerously far up thigh. My smile dropped. She moved her eyes up to mine and didn't even bother to fake niceness this time. She gave me a stern, hard look and focused on slicing her chicken. I was sure she was picturing my face on her plate.\n\nI avoided looking in Mrs. Keegan direction for the rest of the night, but when I looked at Max he was barely containing his knowing grin.\n\nIf I had a flashing warning on my head saying Travis's girlfriend it wouldn't have been this obvious. \n\n****\n\nIn dire need of a distraction to take my mind off the sudden regret I felt for coming with Travis, I had insisted with Charlotte she let me help her with the dishes. Her mother had retired herself, alleging an unexpected migraine.\n\n\"So,\" She began. \"How long have you been sleeping with my brother?\"\n\nCharlotte's eyes weren't blue like her brother's. But brown and sparkling with wit. I opened my mouth, and choked on a gasp. She was a woman who knew Travis very well. Of course she had figured it all out. The thing was pretty obvious.\n\n\"Two months, give it or take.\" I said with a resigned exhale.\n\nShe stopped cleaning the plate she had on her hands and sat it down on the sink. \"Two months? Uninterrupted?\" There was no mistaking her surprise.\n\n\"Uh, yeah.\"\n\n\"Phew.\" She whistled, returning to her plate. \"He must really like you.\"\n\nTwo months meant he really liked me? Had he never had a long term relationship before?\n\nI had the immature urge to question her about him, like a girl with a crush. I gave in to it.\n\n\"He's never brought anyone here before?\" I asked, trying not to sound so damn interested.\n\nCharlotte gave me a suggestive smile. \"You mean a girl? No. Not ever. He's never really had a steady girlfriend.\"\n\n\"Never?\"\n\nI was so stunned by the new piece of information I didn't even bother to tell her I wasn't his girlfriend. How come he'd never had a steady girlfriend? He was in his mid thirties and he's never had a steady relationship with anyone? George had said he was always dating some leggy model...\n\n\"No. Not since high school, anyway. But I suppose that doesn't count.\" She said.\n\n\"Oh.\" I forced myself to stop my questioning there.\n\nHis sister dried her hands on her april and laid her cold hands on my arms. I turned to see her looking at me tenderly.\n\n\"Did he tell you about dad?\" She asked, to which I just nodded. \"My brother is a baby, but he is a good man, Morena.\" It sounded more like a warning than an affirmation. \"I've never seen him look at anyone the way he looks at you. He deserves someone who's good to him. Are you good to him?\"\n\nCharlotte was just looking after her brother. I recognized her care and worry. I did it with George. \n\nI had to tell her I wasn't his girlfriend. We were just sleeping together. It wasn't my place to take care of him. But in that moment it hit me. I was in his childhood home, meeting his family. I was there because I had wanted to be there with him. I wanted to be with him. No matter how many times I told myself everything was all about the sex, I knew I felt more. The sex itself was more. George was right. I was falling for Travis. At this point, I didn't think I could stop.\n\n\"Yes, Charlotte. I am. I promise you I am.\" And if I wasn't already, I was going to be.\n\n****\n\nTRAVIS\n\n\"So,\" I turned to see Max's bulky frame taking shape in the dark behind me. \"You've finally brought a girl home.\"\n\nAfter dinner I had meant to steal Morena away and lock her in my room, but when I saw her laughing with Charlotte I decided to take some fresh air in my mother's garden instead. Max sat in one of the old swings beside me. Those things had been there for thirty years. It was amazing they could still support us.\n\n\"Yeah. I did.\" \n\n\"How long have you been together?\" He asked. \n\nTogether? Was that the word she would have used?\n\n\"Two and a half months.\" \n\n\"Wow.\" A grin split his face. \"Going steady?\"\n\nGoing steady? Even I didn't know the answer to that. Morena did her best to keep the it's just sex barrier on. But then again, she was here with me. That meant something. It had to.",
        "\"I don't know, man.\" If I could talk to anyone about this, it would be Max.\n\nMy older brother was my best friend. Hardly two years separated us and before our father died we were inseparable. Although we used to fight every five minutes. \n\n\"She's fantastic, Max. I've never been with a woman like her before. It feels natural. Right. But she doesn't let me in. I guess she knows I'm trouble.\" I chuckled bitterly. \n\nI couldn't blame her if she didn't want to get in too deep with me. A two month mark in a relationship was a record for me. Morena was such a smart, independent, mature woman. Who could blame her if she decided to be done with me? We were comfortable enough together, but she never talked about anything too personal with me, not after our first date, anyway. That when I had told her all about my dad and invited her to my mother's house.\n\n\"Are you in love with her?\" Max asked me the question that had been swirling around in my mind for the past week. Was I? \n\n\"It would help if I knew what that feels like. Any tips?\" \n\nMax sighed and pat me on the back. \"With Josie I knew it when I realized she was the only one I wanted by my side when I felt happy. Even more so and I felt like shit.\" He said. We laughed together. I didn't remember the last time we did it. \n\nI always needed Morena with me. I wanted her with me all the time, and not just for sex. For herself. Sometimes I caught myself wishing the hours would go by faster so I could see her sooner and just talk to her, hear her laugh. Have her make me laugh, as well.\n\n\"If you need help, little brother, I can tell you by what I've seen tonight; that girl is smitten. I don't look at my friends the way you two look at each other.\"\n\n\"What way?\" I asked him, feeling insecure which was a new sensation for me. \n\n\"What way?\" He laughed our father's laugh. \"I swear to god I even thought she'd jump your bones right there in front of mom.\"\n\nI believed Max because I wanted to believe him. Maybe she felt that way, but I would never know unless I ask her. I had to risk it, because otherwise I'd lose her anyway.\n\n\"Thanks, Maxie.\" I got to my feet and gave my brother a hug.\n\n\"I've missed you, bro. I'm glad this girl brought you back to us. I like her. And she's hot\" He said and we laughed together for the second time.\n\n\"I've missed you too, Max.\" More than I could tell.\n\n****\n\nMax went back to the house when his daughter started screaming 'Daddy'. I stayed behind, reminiscing my childhood and all the times I had fallen off that old swing when I heard the shuffling of Dindi's feet. She'd worn a little blue dress that had my hands itching to touch her thighs all through dinner.\n\nWhen she reached me I opened my legs for her to step in between. My face came in direct contact with her chest, making it my obligation to breath in her scent. I ran my nose up and down her sternum, half exposed thanks to the dress that only made her more beautiful.\n\n\"What's the matter with you, lollipop?\" She asked, running her fingers into my hair.\n\n\"Nothing.\" My lie was muffled by her breasts.\n\n\"Well, that's not true, now, is it?\" She said knowingly. \n\nI smiled. Unlike her, I was good at lying. Way too good. Nevertheless, she could already tell when I did it. I put my hands on her tiny waist, encircling it and bringing her closer to me. Her hair had grown a little since I'd met her. I pulled at one curl, straightening it, then letting it go. It bounced, coiling back to its original form.\n\n\"How do you make it look like this?\" I asked, trying to change the subject. \n\n\"What do you mean?\" She mimicked my action, pulling at one curl.\n\n\"I don't know, just...like this.\" I snaked a hand around her nape and let my fingers go up into her thick mane of soft curls. She shivered visibly, tilting her head back and closing her eyes. \"It's so soft.\"\n\n\"Mmm,\" She clutched my arm, forcing my hand to slid from her hair to her neck. \"It takes a great deal of patience, and leave-in.\" She dropped her head and pressed her lips to mine. I could taste red wine on them. \"Don't change the subject, Travis. What is wrong with you?\"\n\nNothing was wrong. Everything was too right, and that was the problem. I sighed heavily on her lips. \n\n\"This is good, isn't it?\"\n\n\"What is?\" She asked, confused. In the dark it was hard to see her eyes. The little light that reached us came from the house, some thirty yards away. \n\n\"You and I?\" I treated the words as if they were made of glass. \"We're good, right? This feels good, it feels right.\"\n\nMorena tipped her head back. I saw a crease materialize itself in between her rich brows. \"Yeah. It's good.\" \n\n\"I don't want it to end.\" I admitted only to feel her stiffen in my arms.\n\n\"Everything ends, Travis.\" She said. Her voice carried some harshness that made me feel like a child being told Santa isn't real.\n\nAs far as her personal life was concerned I knew her father was dead. I knew George was like a brother to her. Her mother lived in England, and that was it. Our -her- agreement was to have sex and sex only. We talked a lot, but she didn't tell me much about her life. Nothing about old boyfriends or what had happened to make her so closed to any intimate emotion.\n\n\"I know that, but we don't have to end it, do we? This is good, why end something good?\" I didn't have a better argument. I didn't think I needed one. I wanted to be with her, plain and simple. \n\n\"Travis, I-\" She began, already trying to pull away from my arms.\n\n\"Look,\" I stopped her and held her firmly in place before she could find any plausible excuse to run from me. \"I'm not asking you to marry me or anything. Just stay, you know? Sleep in during weeknights. Let me give you breakfast, hold your hand. Let me walk you to the subway in the mornings.\" She sighed and opened her mouth to discuss with me again. \"Come on, Morena. You have clothes in my drawers. You have a toothbrush in my bathroom. My whole damn bed smells of you. Fuck, everything I own smells of you! You spend most of your time with me anyway! We won't label this if it helps you, but I'm not sleeping with anyone else. Are you?\" There was more exasperation to my tone of voice than I would've liked. \n\n\"No.\" She whispered, looking down. \n\n\"Do you want to?\" When she didn't answer immediately, dread flowed in my veins. \"Do you?\" I asked again.\n\n\"No.\" Her voice was small, like a child being scolded.\n\n\"Then just...stay. Be with me. I...\" I hesitated, searching for the right words. \"I really like you. I like you a lot. Whatever walls you have around you, you can keep them. I won't try and bring them down. I just want you to let me in. Just open a door for me. I promise I'll go easy with you.\" \n\nMorena's eyes were over my head, in the direction of the trees behind me. Wherever she was it wasn't here with me.\n\n\"In my first year of college I met James. We were together for seven years.\" Morena clutched at the little pendant on her neck. It was an M, the first letter of her father's name. \"We got engaged as soon as we graduated from college. Yeah. I was engaged.\" She added with a bitter smile when she registered the surprise on my face. \"We were engaged for two years, actually. I thought I'd marry him, have his children, maybe spend the rest of my life with him, but...two weeks prior to our wedding he broke it off, just out of the blue. I thought everything was fine. We lived together. I was working on my masters degree, saving money, organizing the wedding...\"\n\n\"He said I wasn't going to be the wife he needed. He said I didn't know how to feel love the right way, that I would never be where he wanted me to be. He said 'I can't marry a woman whose priority won't be me'. He didn't like the idea of me becoming a teacher, mind you. He wanted me to be the perfect housewife. He said I wouldn't need to work, because he would take care of me. Yeah, he was a prick. I know that now. But I loved him. He was my very first love. My first serious boyfriend. I loved him madly. He was my whole life. I lived two years of my life thinking I would, one day, become his wife. He hurt me, Travis. A lot. I don't ever want to feel like that again. I won't let anyone make me feel that way again.\"\n\nShe swallowed hard when she finished. I could see she wanted to cry, but was fighting the urge. That was the most personal thing she'd ever told me, and it explained everything. Why she tried so hard to pretend we didn't have a relationship, why she was so emotionally closed to me. I was paying the price for some sexist douche's mistake, and that wasn't fair. \n\n\"I'm not him. Morena.\" Her eyes finally came back to mine. \"Whatever he did to you, it was his mistake. I'm not him. I won't hurt you like he did, so please stay with me. Stay and let me prove to you I'm not him. I need you.\" I pleaded with her and she only nodded.\n\nWhatever battle she was fighting with her emotions, she lost it, because tears began streaming down her cheeks. I held her face in my hands, not bothering to wipe her tears away. I figured she needed to let them out.\n\n\"Will you stay with me?\" I asked, bringing her forehead to rest against mine.\n\n\"You can't bloody hurt me, you understand? If you do I'll throttle you.\" She sobbed so hard she could barely speak any clear words.\n\nI held her tighter, wanting desperately to assure her I would never, in a million years, hurt her if I could help it. \n\n\"God, no. Never.\" I promised intending with all I had to keep my word.\n\n\"Then I'll stay with you.\" She wheezed. \n\nShe barely got the words out and I was kissing her. Kissing her for all I was worth, tasting her tears. Trying to kiss her into believing I wouldn't hurt her, because I wouldn't. There was no way I would screw up the best thing that had ever happened in my life. \n\n****\n\n\"Would you mind?\"\n\n\"Yes, I would.\"\n\n\"Travis! Stop it!\"\n\n\"Oh, come on! You're wearing a bathing suit! How can you expect me to not take a damn picture of you in a bathing suit!\"\n\n\"You have pictures of me naked! You have enough bloody pictures. Now leave me alone, you pervert.\" She was getting mad. I fucking loved it. \n\nEverywhere I went I had a camera with me. It was a habit, a professional one as well as a hobby. Actually I took more pictures for my pleasure than I did for work. Lately, Dindi was my pleasure. So taking pictures of her in every light and angle possible was what I did. She kept telling me I was a weirdo and a pervert. I didn't think she realized what she looked like. If she were some inches taller she'd belong on the runway.\n\nShe was wearing a bathing suit, lying on her back in the sand. It was the same color as the dress she'd worn the first time I saw her. A dusty rose color that matched her skin beautifully. I could swear I could actually see sparkles of gold there, reflecting under the sun. \n\n\"Are you still taking pictures?! Travis, you better stop before I smash the blasted thing.\" She propped herself on her elbows and lifted her ray-bans to her hair. \n\nShe made a move for the camera but I dodged her. With the movement, she rolled, landing belly down on the warm sand. Her ass was a marvelous thing, up and dusted with white sand. I couldn't resist reaching a hand to wipe it away. \n\n\"Travis.\" Her voice was a warning. \"If you take a picture of my ass, I'll bite your cock off.\" She didn't even manage a serious expression when she threatened me.\n\nI laughed. Fuck, if I laughed round her. \"I won't let your mouth near it.\" I said.\n\nShe huffed. \"Like you can resist me.\" Dindi's tongue darted out, licking her lips, tentatively.\n\nI groaned, knowing full well she was right. I took my picture anyway.\n\n\"TRAVIS!\" She shrieked and I laughed again.\n\n\"Oh, come on! Look at this ass of yours! It's perfect! Let me take my pictures! It's my job!\"\n\n\"It's not your job to take pictures of my stretchies.\" \n\n\"Your what?\" Oh, man, I was laughing to the point my abdomen hurt.\n\nShe gave me an annoyed roll of her hazel eyes. \"My bloody stretchies. Here,\" She pointed at her ass. \"You're familiar with them. You've met them face to face.\"\n\n\"Oh, these little cracks, you mean.\" Of course I knew what the fuck stretchies were. I had spent a lifetime photographing models -also sleeping with them on occasion. Stretch marks were their worst nightmare. I just loved teasing Morena. She was easily annoyed. An easy target.\n\n\"Cracks?\" She sounded like she wanted to punch me.\n\n\"Or are they your stripes? 'Cause you're such a kitty. I know you have claws, I mean just look at my back, of course you'd have stripes too -Ouch!\"\n\nHer sunblock bottle hit me straight in the face.\n\n\"Fuck you, Keegan!\" She looked genuinely mad at me. I found it funny, considering she was such a confident woman. At least in my bedroom she had no issues with her so called stretchies. I, myself, only saw a fucking perfect round ass.\n\n\"Oh, come on now.\" I pulled her to me and laid on top of her, feeling the sand between us rubbing against my chest. \"I'm just teasing. You're perfect and you know you are.\"\n\n\"Yes, I am. I do know that. I also know that you're a prick.\" She put her hands on my shoulders as if to push me away, her legs, however, wrapped themselves around my waist.\n\n\"You can't complain. It's only fair you pay a price for such an ass.\" I leaned over to kiss her but she bit my lip pretty hard. \n\n\"Ouch, woman!\"\n\n\"You wanker.\" \n\n\"Wanker?\" \n\n\"Wanker.\" She repeated the insult.\n\nI grabbed her hands, holding her wrists tightly above her head.\n\n\"I don't do that anymore. I have you.\" This time she allowed me to kiss her. \"And your mouth.\"\n\nMorena relaxed under me, rewarding me with one of her ironical smiles. \"I'll bite it off, I promise.\"\n\n\"You wouldn't dare, you like it too much.\" I let my lips skim hers, loving how she was becoming breathless so fast.\n\n\"I can always find another.\" She mumbled.\n\nA little twitch of passing jealousy made me kiss her again. \"It won't be the same. You know it won't be the same.\" My seriousness surprised me. \n\nI sure as hell knew it wouldn't feel the same with another woman. Not the way it felt with her. Sometimes she liked to just stare at me. I saw all the questions she wanted to ask me, but never did, afraid of getting to know me too well, I supposed. Now I did the same. My eyes searched her face; I wanted to ask her if she felt it too. How different and rare our connection was. \n\nShe had promised me she'd give this thing we had a chance only last night. It wasn't fair of me to expect her reservation to just disappear in a few hours. She obviously had been cultivating it for some time. \n\n\"When did you start with this?\" She asked, breaking the tension as she always did when things got anywhere near too intense. \"I mean, the photographing.\"\n\nI removed my body from over hers and sat on the sand by her side. \n\n\"It was my Dad's fault, actually.\" I confessed.\n\n\"Oh, how so?\" Dindi asked expressing real curiosity. \n\nI was elated she wanted to know more about my greatest passion in life. Even if it meant talking about my Dad.\n\n\"Well...he had an affair.\"\n\n\"Ah...?\" She pursed her lips in confusion.\n\n\"When I was about 15 years old he had an affair. When my mother found out she lost it. She spent six months in bed, lost in a pharmaceutical haze.\" I told her, recollecting the worst period of my teen years. \"Max and I had to work in alternate shifts, so one of us would always be home to take care of Charlotte. She was 9.\" Morena snaked a hand around my ankle, her thumb drawing circles in it. \"I worked a part time job printing pictures. Five hours a day in a darkroom. I got a taste for the thing.\" I continued.\n\n\"And your dad?\" She asked.\n\n\"After six months he came back!\" The fight we'd had that day was so fresh in my memory it could've happened yesterday. \"Yeah. Pretending like everything was fine. I mean, with the exception of those months he left us to fend for ourselves, when Max and I practically raised each other and Charlotte, he was a good dad. He spent the rest of his life trying to fix things. I never forgave him. Not until he died.\" I stopped, letting out a long sigh, lost in memories. \"I lost so much time with him, just being angry and blaming him for hurting my mother. The worst part is that before all that, he was my hero. All I wanted in life was to be like him. Plus, Max never understood the fact that I couldn't forgive Dad. So my relationship with my brother was never the same after all that.\"\n\nI conveniently left out the part where my mother remained an unhappy woman whose stability depended on pills while my father didn't hide the fact he'd only ever came back for his children, not her.\n\nMorena forced her body into a sitting position, hugging her shins. \"How did you became the Travis Keegan-super-blaster-famous fashion photographer?\" She asked.\n\n\"My dad he...Well, he came back home, but he still kept the other woman. Without Max as a buffer, I couldn't live under the same roof as him anymore. All we ever did was fight. So, I moved out when I was 17. I studied photography in the NYU, and from there things just worked out for me. I guess I just like my job. It makes it easy.\"\n\nI took a long gulp of the beer I had forgotten I'd opened. It was warm already. The past was meant to stay behind, except I dragged it along whenever I went. A man in his mid thirties crying over his daddy issues. \n\nMorena's golden necklace sparkled in the sun and it caught my eye; The M pendant she carried in honor of her father. She had lived more of her life without than with him, but she still loved him and seemed to have only good memories of him. I envied her that.\n\nShe was looking at me wearing her serious, contemplative expression. I always felt like an open book when she looked at me like that. As if she could she all of the embarrassing, ugly things I had done in life.\n\n\"What?\" I asked her.\n\nShe just shook her head. \"Your eyes are very pretty.\" She said softly.\n\n\"You like them, um?\" I batted my eyelashes teathertrically at her.\n\n\"Yeah, I like them.\" She said already leaning towards me. \n\nHer mouth met mine, eager as usual. We fell on the sand, me on top of her. I kissed her, allowing my tongue to explore her mouth with no hurry at all. The skin on my back was overly sensible because of the sun, and it intensified the feel of her nails running over it. That sensation her body created in mine was flowing down my spine and just when I felt my cock twitch a little voice interrupted me.\n\n\"Why you hurting your girlfriend, ucle Trabis?\" I was on my knees and off of Morena in a sudden jerk.\n\n\"Tess! What are you doing here, sweetheart? Where's your mom?\" I opened my arms to my little niece, who didn't hesitate to step into them while Morena didn't make any efforts to disguise her amusement.\n\nIt's fantastic how children work. If they decide to like you it doesn't matter if you're a negligent uncle who they hardly ever see.\n\n\"Mommy's behind. I want to play.\" \n\nTessa was a lovely child. Looked exactly like her mother when Charlotte was her age. \"Let's play, then.\" \n\n\"Not with you, ucle Trabis. With your girlfriend.\" She pointed a chubby little finger at Morena, who laughed in surprise.\n\n\"With me? I would love to play with you, little Tess. What do you want to do?\" \n\n\"I want to build a castle.\" Tessa presented Morena with a plastic pink bucket.\n\nShe laughed in a way that made me want to cover Tessa's eyes while I kissed her senseless. Then she got to her feet wiping sand off her wonderful ass.\n\n\"Come on, then. Let's build your castle.\" She offered a hand to Tessa who took it without thinking twice.\n\nThey marched together towards the sea while I stayed behind as a mere spectator. Morena didn't object when Tessa called her my girlfriend, just as she wouldn't. Not to a 4 year old. Still, I didn't see any silent objections cross her features either. When I thought of it, of her as my girlfriend, that stupid wide grin was back. Splitting my face in half. ",
        "I took my camera and focused my lens on the two of them laughing and burying their hands in the wet sand. If only to prove Morena right when she called me a weirdo later.\n\n****\n\n\"So, you in looove.\" \n\nThe thing about Charlotte is that she's the youngest. Max and I made her believe she was a princess who was never wrong. Now she was 29 years old and she still believed that.\n\n\"Don't let her hear you say that.\" I retorted.\n\nMorena had the good fortune of attracting the attention of my nieces and nephews. They followed her around like she was a walking candy shop. Surprisingly, she handed them well. Easy-peasy. She had said when I asked her if she needed help. All five of them were down at the beach while I helped Charlotte with the mess my birthday party had made.\n\n\"I like her. She unburdened me of my children.\" Charlotte said.\n\n\"She's good with them, right?\" I mused, smiling to myself.\n\n\"Ow, big brother.\" Charlotte's elbow connected with my ribs. \"Thinking of making a few babies yourself?\" \n\n\"Fuck, no.\" I was quick to dismiss that theory. I didn't even know how to keep a girlfriend, who's to say have children.\n\n\"Ah, you're right. Don't have them. They ruin your life.\" \n\nI pulled my sister in for a quick hug. Charlotte was an incredible woman. She was married too young for my liking, but she raised her children with the necessary measures of devotion and discipline. Unlike my mercurial relationship with Max, Charlotte and I always got along very well. She visited me frequently. Also, she knew me better than I would have liked. Her advices were the ones I made a point of listening to.\n\n\"I'm serious, Travis.\" She said, absentmindedly, while she put the rest of the chocolate cake in the fridge. \"She's nice. I think she's good for you. I mean, look at where you are right now! Last time you were in my kitchen I was pregnant with Tessa.\"\n\nCharlotte had been pregnant when our father died. I hadn't stepped foot in this place since his funeral.\n\n\"I like her too, Lotte.\" I admitted when she came to stand by my side by the kitchen sink.\n\n\"But?\" My sister had a way of making me talk. I was her guinea pig. She used the abilities her degree in psychology had given her on me. \n\n\"Some idiot hurt her. Now I'm paying the price for it.\" My surprise when Morena had told about that James guy...I would never have guessed she'd been engaged. Seven years of her life invested in another person while I surprised my whole family with two and a half months of uninterrupted sex with the same woman.\n\n\"Ah. She has trust issues.\" Charlotte mused.\n\n\"I guess you could say that.\"\n\n\"What a pair you two make. She with trust issues, you with daddy issues...\"\n\n\"Charlotte.\" I chided her.\n\nShe'd been too young to understand what had really happened with our family when dad left. Actually, Max and I made our best to shield her from it all. Where I thought of my father with regretfulness and remorse, she thought of him as her hero.\n\n\"How d'you meet her?\" She asked handing me another plate to dry.\n\n\"I just...I saw her.\" I replied bashfully. She'd give me hell if I told her the whole story.\n\n\"That's obvious, Travis.\"\n\nI blew out a breath of annoyance. Better if I just told her already. I would have to put up with her shit either way. \"I saw her. She was beautiful, so I went running after her. I took her picture, without asking for permission, scared the fuck out of her. She left without even telling me her name.\"\n\nI turned to see Charlotte eyeing me warily. \"Jeez. What a pervert.\"\n\n\"Shut up.\"\n\n\"How did you find her again?\" Charlotte's enthusiasm was almost tangible. \"Oh, come on! I have three children, indulge me with little a romantic story.\"\n\nCharlotte was a champion. She had our mother's brown eyes, the skin under them stained purple with lack of sleep. She had three children who were barely a year apart. Her days were dedicated to raising them. I had no idea how she did it.\n\n\"Her best friend is a makeup artist.\" I continued, indulging her at her own request. \"We move in the same circles. She is living in his apartment, so I gave this party at my loft. Invited him hoping she'd come with.\"\n\n\"And she did!\" She offered.\n\n\"No.\"\n\n\"No? How the hell did you find her, then?\" Charlotte was going to say the same thing Morena did. Same thing I knew to be true. I was a weirdo, and a pervert. But had they no eyes? Couldn't they see how beautiful she was? I'm a hot blooded American man...\n\n\"Well...I had this picture of her, right?\" \n\n\"That you took without her permission.\" She concluded.\n\n\"Right. That's the one.\" I confirmed. \"So, I had it in my bedroom.\"\n\n\"What the fuck, Travis!\" She shrieked.\n\n\"Lotte, come on! Let me fucking finish!\"\n\nCharlotte was laughing so hard I felt like pushing her, the way I did when I was 10 and she took my toys without asking if she could first.\n\n\"So, I had this picture -shut up, Charlotte- in my bedroom. Somehow her friend, George, saw it and called her. She came over. We talked. We went on a date the next day. Now here we are.\"\n\nHowever old you become, your siblings will always make you feel like you're still twelve.\n\n\"Man, you're lucky you're so handsome, Travis. I mean, what other excuse would she have to be with you, considering you're such a pervy stalker?\" \n\n\"Fuck you, Lotte.\"\n\n\"Did you really put her picture in your bedroom? Really? I mean you didn't even know her...Has it been this hard to get a woman to sleep with you? You have to stalk them?\" Another thing about Lotte: When she decided to annoy you, she could really do it.\n\n\"I have hundreds of pictures of hundreds of women, Charlotte. I'm a fucking photographer, you know.\"\n\n\"Errr, but in your bedroom? What was it for, jerking off?\"\n\n\"That's it. I'm leaving. We're not talking anymore.\" I made a move for the door before I turned her children into orphans.\n\n\"Oh, no, no. Come back here! I'm your sister! It's my job to annoy you. I'm sorry. Don't go.\" She grabbed me by the arm. \"Come on. You're never here. Don't go. I'll stop. Promise.\" She kissed her crossed fingers.\n\nNo wonder Charlotte and Morena had gotten along. Both of them liked to tease me.\n\n\"Seriously, now.\" I darted her a warning glare and she put her palms up. \"I just want to know. She's pretty and really nice, that's true. But what is it, Travis? What about this girl has you so stupid?\"\n\nHow could I explain something that made no sense even to myself? It was a clich\u00e9, yes, but my argument was that Morena was different. She wasn't like any other woman I'd ever been with, and not just because she had rejected me at first, when no woman had done it before. She made me feel different. Better. She just felt real. Everything about her was unfeigned. She was always herself, always honest. She never just said the things she thought I wanted to hear, and yet, she made me laugh all the time. Plus, she was stunning, smart and confident. Why wouldn't I want to get my hands on her?\n\n\"I don't know. Lotte. At first, I just thought she was beautiful. I wanted her. Now I just really like who she is, and I like who I am around her.\" \n\n\"Oh, Travis.\" Charlotte put a hand on my shoulder offering me one of her typical knowing smirks. \"You're so in love, big brother. You better watch yourself. Next thing, you'll have more babies with this girl than I do.\"\n\n\"Fuck off, Charlotte.\" I threw the damp cloth I was drying the dishes with on her face and turned my back to leave.\n\n\"Hey,\" She called on my back. \"Whatever your reasons, I'm glad you're home.\" She said.\n\n\"Me too, Lotte. Me too.\" I said, then went down to the beach to make sure Morena was still alive.\n\n****\n\nMORENA\n\nI never fancied myself the kind of woman who wanted to have children. Not too many, anyway. When I thought I'd be living the rest of my life as James's wife I had planned on having one baby at least. But three? When they were barely a year apart? Charlotte deserved a prize.\n\n\"So, basically, Charlotte is your George equivalent?\" I asked Travis. \"You love her like she's your third arm, but she is as inconvenient as one.\"\n\nHe flashed me a wide smile of his foamy toothpaste mouth. \"That's the best description of Charlotte I've ever heard. My sister is a pain, but I can't live without her.\"\n\n\"Oh, I can relate to that.\" The closest person I had to an actual sibling was George. If Travis loved his sister half as much as I loved Gee, than I could understand his affection for her.\n\nI liked Charlotte. A lot, really. She was like a mother bear, to her children and her brothers. She looked tired though, and seemed to have been elated I'd taken her children away from her for a few hours. Max was another story. He seemed to be nice enough and Travis clearly loved him very much too, but I had felt some tension between them. Even so, I thought it better not to ask anything about that. Mrs. Keegan, however...Well, she hated me. Fuck her, then.\n\n\"Are you ready?\" Travis asked, ripping me out of my wonders.\n\n\"Yeah.\" I said.\n\nThe aura around the house was a bit gloomy. The day marked the 5th anniversary of his father's death. He had decided not to go to the cemetery with his family. We had stayed behind, looking after the kids. To his mother's utter disappointment he chose to go alone. Or rather, alone with me. \n\n\"You should go with your family, Travis.\" She had said.\n\n\"Mom, please. I'm here. Don't ask too much of me.\" He had ended the discussion with that, but Mrs. Keegan darted me an accusatory look before leaving. As if I had anything to do with anything. That family was fucked before I was even aware of Travis's existence. \n\nAt first, I had suggested he should go alone, but he insisted I go with him. \"I'd like you to be there.\" He'd said.\n\nSo we were going to visit his father's grave. Together. \n\nIn truth I hadn't really stopped to think about the consequences of our talk. He'd asked me to stay. I'd said yes, but what did it mean? Was I his girlfriend? Because even if we didn't call me that, I felt like his girfriend. Specially since I had agreed to behave as such. \n\nDid I even remember how to be someone's girlfriend? Was I even good at it?\n\nClearly I was shit based on James's idea of one. \n\n\"Come on.\" Travis took my hand and I tensed, unaccustomed to the gesture. He noticed it, but ignored me, pulling me down the stairs with him.\n\n****\n\nTravis cut through the graveyard, stepping on the vividly green grass and going around every gravestone that wasn't his target. I walked behind him, guarding a certain distance between us. Whenever I went to visit my father, even with my mother, I liked to say my hellos on my own.\n\nHe came to a halt, crouching in front of a white marble gravestone. He lay a hand on it, and I chose to stay behind until he needed me. \n\nA lump found its way inside my throat. I couldn't tell why, but I felt an overwhelming urge to cry. I clutched at the M pendant on my throat. I had only shared 9 years of my life with my father. Travis had 30, half of which were wasted in bitterness. What I wouldn't give to have more time with my Pappa. I barely remembered him. I only knew he had the kindest eyes. Clear blue, just like Travis's.\n\nWhen my gaze went back to where Travis was, I saw him sitting on the grass with his elbows resting on his knees, his head bent down. He seemed so lost that my feet took me towards him.\n\nI touched his shoulder; he didn't even look up when he reached a hand to squeeze mine. I simply sat by his side on the damp grass, just in case he needed a hug, a few comforting words, anything I could provide.\n\nWe sat together for a long moment; in which time I took notice of the little oval picture in the gravestone. It could've been Travis, if it weren't for the dark hair. His father looked exactly like him, or rather he looked like his father. I imagined it couldn't be easy to be so angry with a person who had your face. The eyes were the same too. Uncanny, hooded, and the brightest sky blue. Below the picture it read: Marvin T. Keegan. Beloved husband and father.\n\nTravis moved the arm I had my head resting against. He lifted it and wrapped it around my shoulders. I pressed my ear to his chest, listening to the steady, strong rhythm of his heart. \n\n\"Thank you for being here.\" I heard the words gravelly echoing inside him.\n\n\"You're welcome.\" My voice was small, weepy.\n\nI wasn't doing anything. I was just there. Just sitting there. I didn't say anything supportive. I didn't do anything to help him through it. I was just there. and that was enough for him. More than enough, actually.\n\n\"Morena?\" Travis called me by my actual name, noticing the shift in my breathing.\n\nI struggled with him when he put his hands on my face. Of course I lost that fight.\n\n\"What's wrong?\" He asked when he saw the stubborn tears that were stronger than my will to keep them away. \n\nHe brushed away the fat tears on my cheeks, but they kept coming. I felt so stupid I wanted to slap myself. Not even I could explain what the bloody hell was happening to me. I hated crying.\n\n\"It's nothing. Just nonsense.\" I whinnied.\n\nHe pulled my head to his chest again, cradling me. His fingers worked soothing patterns in my hair.\n\n\"What do you tell your father when you visit him?\" He asked me. \"I've never done this before.\"\n\nI straightened myself, sitting cross-legged beside him. \"Well,\" I began, snivelling. \"I always tell him about the important things to me. The things that make me happy. New things I learn. Crazy things my mom has done lately. Just ordinary things.\"\n\n\"Mmm.\" \n\nHe held his shins, bending his long torso slightly forward looking, for that moment, like a 17 year old boy again.\n\n\"Hey, Dad. It's me. Travis.\" He began awkwardly, turning to give me a sheepish smile. I nodded in approval, urging him to go on. There was no right way to do this. \"Uh, I know I haven't been here before. I'm sorry for that.\" He made a pause, gazing up at the sky, blue meeting blue. Then ran a shaky hand down his face. \"I'm sorry for a lot of things, actually. But, hey, there's no point crying over spilled milk, uh?\" At this he chanced a look my way. \"I wanted to tell you that I finally came home. Mom was really glad, you should've seen her. My life is going really well, too. I met a girl.\" I held in a breath. Neither Travis nor I looked at each other. \"She's fantastic, Dad. So beautiful it makes me dizzy. I only pray she doesn't come to her senses and dumps me, because I'm crazy about her. She's the reason I'm here today. Charlotte is such an incredible woman. It's a pity you didn't get to meet little Tess. She's a joy, and, uh, Max and I, we...\" Travis trailed off, letting out a choked laugh. The kind meant to disguise tears. \"We're getting there. He's got more of you in him than I. It's not easy, but we're getting there. We'll be fine.\" He took in a long breath through his nose before speaking. \"I miss you. I'm sorry I wasted so much of our time. I promise you I'll be back soon.\" \n\nSilence settled down around us. I didn't dare move, I couldn't tell if Travis wanted to be touched. \n\n\"How was that?\" He asked after a few minutes, using a strained voice. He had his head down between his knees, hidden from view. Still, I could hear the tears on his voice. Why must men always try to be so tough? \n\nI let my finger trap a loose strand of hair behind his ear. That same stubborn blond strand of hair that never stayed tied behind his head with the rest of his golden mane. \n\n\"It was good. Cheesy, but good.\" I said, making him laugh, to my relief. \"You should've heard me telling my dad about my crush on Miles Griffith when I was fifteen, though.\"\n\nTravis brought his head up laughing loudly, even though the tears running down his face and disappearing in his beard were obvious.\n\n\"Did Miles Griffith like you back?\" He asked.\n\nI was more than happy to go on joking to keep him smiling. I've never been good with crying people. Especially a grown man. His open vulnerability was alien to me.\n\n\"Oh, no. He friendzoned me so hard I couldn't even see straight.\" I said.\n\n\"Stupid Miles Griffith. Will never know what he missed.\" He shifted closer to me, still laughing, and wrapped his long arms around me once more. His beard felt wet on my shoulder. It prickled my skin, causing me to shiver. I just settled there in his arms, absorbing his warmth. \n\n\"Thank you, Dindi.\" He said, yet again.\n\nI responded by holding him tighter, breathing in the scent of his hair and just melting into his embrace. We stayed that way for what felt like forever, until one of us -I couldn't tell each one- moved and we got up to leave. He said goodbye to his father and this time, when we made our way back to the house, I held his hand.\n\n****\n\nMy little bag was packed, I had already called George to tell him I'd be home in a few hours, all that remained was for Travis to decide when we'd leave. He had asked me to sleep in his loft, but I refused. I needed to go home. George was beginning to get mad at me, saying he never saw me. Also, I needed some time to myself. The weekend had been too heavy. A day or two away from Travis would help me clear my mind. Besides, I reminded him, I had promised him I'd stay. Whatever that meant.\n\n\"Take good care of my brother, Morena. He's a big baby. He's never been in love before.\" Charlotte had said when I said goodbye to her.\n\nIn love? Was Travis in love with me?\n\nI went down the stairs to meet Max, who was waiting to drive us to the bus station. \n\n\"Morena.\" He greeted me with a wide smile. \"Ready to go?\"\n\n\"Yes. All set. Just waiting for Travis.\" I said.\n\n\"Oh\" Max rolled his eyes. The ones he shared with his father and brother. \"He's saying goodbye to mom. I don't think she'll ever let him go.\"\n\nMrs. Keegan's sobs were clearly audible coming from the kitchen.\n\n\"Come back soon, will you?\" She said to Travis. \n\n\"I will, mom. I promise.\" \n\nTheir voices were easily carried to where Max and I stood in the living room, waiting. \n\nTravis finally emerged. \"Come on. Let's go.\" He said.\n\nI threw my bag over my shoulder and had my body half turned towards the door when Mrs. Keegan called from her kitchen.\n\n\"Travis, can you come back here, my darling?\"\n\nHe offered me an apologetic look and marched back to the kitchen. Max just shifted his weight from feet to feet, checking his watch nervously. I tried my best to hide my anxiety to go back home when, clear as day, Max and I heard his mother ask Travis:\n\n\"Son, are you sleeping with that black girl?\"\n\n****"
    ],
    "authorname": "Nanaya",
    "tags": [
        "black girl",
        "white guy",
        "romance",
        "interracial",
        "interracial romance",
        "romantic"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/dindi-pt-04"
}