{
    "title": "A Shepherd in France Ch. 01",
    "pages": [
        "Author's Notes:\n\n'A Shepherd in France -- Ch. 1 and 2' is a continuation of 'The Shepherd of Ashburn Court -- Parts 1 through 5'. Minimal effort is made in this tale to explain the backstory so please read the other stories first.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nA Shepherd in France -- Ch. 1\n\n********\n\nChapter 1\n\nBen Shepherd shuffled a few feet closer to the entrance of the customs area in the airport in Paris. His neck was hurting from how it had been positioned when he slept on the flight over from the States. He tried rolling out the kink in the thick muscles. He grimaced in pain and rubbed at it. That was the problem with being muscular. Big muscles meant big muscle pain and Ben was a big man. 6' 3\" and 260 pounds of hard muscle gifted from good genes and earned from a strenuous exercise regimen. He didn't look bad for a man in his forties.\n\nHe looked around at the seething mass of people trying to get through customs. Several large planes had landed and offloaded in quick succession which lead to this ugly bottleneck. Ahead of him in that mass were three women he was in love with and who had expressed their love for him. He never expected to find love in his life after his wife left him for another man. To find it with three women was so far beyond his expectation he still had trouble accepting the reality of it and accepting that he deserved it.\n\nThere was a voice inside him that whispered he wasn't worthy, it wouldn't last, and they would leave him like the others who claimed to love him had. He'd listened to that voice since he was a young child and it never went away. It was a daily struggle though recently it had been quieter than usual. He'd been surrounded by the love of these women and even his despised inner voice couldn't compete with that.\n\nBefore it could get a grip on him again he scanned the crowd ahead and saw Catherine McGovern and her daughters nearing the entrance, the four white blonde heads made them stand out as did their beauty. They were always the easiest to find due to their hair and their height. The mother was 5' 10\" and matched by her oldest, Sophia who was 21. Her other two, Rachel at 20 and Megan who was 19, were just an inch shorter.\n\nHe smiled as he thought of Catherine's amazing blue eyes which often held a mischievous spark. It usually appeared with a sexy grin and the most delightful wrinkles on the bridge of her slim nose. She was truly gorgeous and it still stunned him that she was in love with him. She was all lean muscle and svelte curves from her swimming and her daughters were equally fit though he thought they chose martial arts to stay that way.\n\nEach daughter had been blessed with their mother's looks, eye and hair coloring, and the resemblance was definitely strong but each was like a unique flavor of the same delicious dish.\n\nSophia's eyes were slightly more almond shape, probably from her father's genes and her cheekbones were just a little higher giving her face more of a heart shape. She was the calmest and most composed of the three daughters.\n\nThe middle child Rachel had inherited a bit of her father's strong nose. Not enough to overpower her other features but enough to give her a distinct look from her sisters. Ben thought she was truly lovely and she certainly had her mother's boisterous energy.\n\nMegan was the doer. She was bold and decisive and the personification of cute from her wide blue eyes to her slightly upturned nose. She was also the one who helped drag Ben into Catherine's life.\n\nA few passengers behind them was Tina Lee. Tina was Korean, petite at 5' even, slim and wore her luxurious, straight black hair to the middle of her back. She had a sweet face that showed its breathtaking beauty when she smiled. It always caught people off guard. She was currently living with Ben and had professed her love to him as well. Tina was special in that she was submissive. She'd had a very bad experience with her abusive late husband and Ben had reluctantly taken over as her Dom to the best of his abilities and she claimed he was exactly the kind of man she'd dreamed of finding. She'd worked her way into his heart even though she was only in her mid-twenties. Their age gap had given Ben quite a lot of trouble.\n\nBehind Tina and closest to him in the throng was Gabriella Wallace with her two kids, Miriam, a pretty 16 year old girl, and her brother Daniel who was 13. Gabriella was an inverse mirror of Catherine's fairness and slim physique as she was raven haired and had generous curves. She was by no means fat, she just had curves! She also had brilliant green eyes that he could get lost in. But while Ben was enthralled by her beauty what drew him most was her wisdom and deep compassion. It was she who helped Ben get past his misconceptions of what love was and made him see he could be in love with more than one person and not inflict pain on the others. He loved her deeply and knew she felt the same for him. She was also the one who helped him accept Tina's love.\n\nAs Gabriella kept an eye on Miriam and Daniel she'd glance back occasionally to ensure he was still following. He snorted. Where else could he go? He was being led with all the other sheep into the large hall. He could see multiple queues leading to a series of customs desks. An officer was directing the incoming flow to random queues so he gave up hope of rejoining Catherine's or Gabriella's group. He caught her eye the next time she looked back and he gestured that he'd meet her at baggage claim. She nodded.\n\nThey slowly shuffled forward and as he expected their group began to get split up. Catherine and her daughters were directed to the queue on the far right. Tina, Gabriella and the kids went to the queue to the far left. When Ben arrived in front of the officer his neck spasmed and he grimaced as he rolled his shoulders. The agent stared wide eyed at Ben's facial scar which made an appearance. The officer pointed to the queue directly behind him and Ben stepped past the man. He didn't see the officer immediately call someone on his radio as he saw the queue he'd been directed into was shorter than the others. Ben smiled and felt a little better about his chances of getting through this area quickly. He looked to the left and right but he could no longer see the rest of his group.\n\nBen walked up behind a young couple who were arguing or rather the man was hissing angrily at the woman. She couldn't have been more than twenty five, maybe 5' 6\" and her taller gangly boyfriend wasn't much older. They both wore an array of body jewellery with piercings in their nose, ears, eyebrows, lips, and tongues. The woman, whose bosom was... generous, wore a small halter top which exposed her trim arms, shoulders, most of her back and her flat stomach so her tattoos were in plain sight. While Ben would never consider getting a tattoo of his own he thought the woman's Japanese stylized art of a cherry tree in full bloom on her back was exquisitely done. Pink petals seemed to be blowing across her limbs. Several beautifully detailed, colorful koi swam in the cool waters depicted on her arms. Her auburn hair was braided into a single long braid running down her back past her ass. That was a lot of hair! Her legs were hidden behind a long flowing peasant skirt. She had worn leather sandals on her feet which had obviously seen some miles.\n\nIn contrast, her boyfriend's tattoos were rougher and seemed random. Nothing artistic about them. A fair number of them were just aggressively antagonistic slogans, like 'Fuck the Police' and images of weapons. He wore a mesh shirt which showed his underfed torso, a pair of ripped army pants, and scuffed army boots.\n\nHe was currently poking the woman hard while growling quietly right in her face. She seemed to be crying and shaking her head like she was frightened. Ben saw she was trembling.\n\nFuck.\n\nBen squirmed as he tried not to get involved though his instincts were screaming at him to do just that. He looked for Gabriella or Catherine but they were nowhere to be seen.\n\nFuck. Fuck. Fuck.\n\nThe punk leaned in and hissed at the girl again loud enough this time that Ben heard his words. \"Cunt, I fucking own you! You do as I fucking say or you're dead. You will NOT fuck this up for me! I will FUCKING cut you a new hole if you don't stop your fucking crying!\"\n\nThen he slapped the girl's face.\n\nBen was being fast walked down a corridor by two police officers when he next became aware of his surroundings. His wrists were cuffed behind his back and a third officer was carrying his shoulder bag. They stopped before a door, opened it and pushed Ben inside. They pulled out a chair, undid the cuffs, and sat him in the chair. The cuffs went back on him but through a metal loop on the table's surface. One of the officers barked something at him in French but before Ben could respond they left.\n\nFuck.\n\nGabriella stood by the carousel and their luggage looking for Ben. She was getting worried as most of the passengers from their plane had already passed through customs and had left with their bags. Catherine walked back from the entrance to the customs area and her face showed she'd had no luck.\n\n\"I can't find him anywhere!\" Catherine said to the group with worry in her voice. Sophia looked at her mother then shared a nervous look with Rachel.\n\nMegan, who had been assigned baggage watch duty caught the eyes of her sisters and pointed to the suitcases. Sophia nodded and pulled Rachel over with her to stand with the accumulation of bags. They knew of the three of them Megan was the boldest and would push her way into places the others wouldn't think of entering.\n\nGabriella scanned the baggage claim area once more but Ben wasn't there. She had his suitcase so he hadn't been through the area yet. Megan walked up to her.\n\n\"Give me a few minutes,\" she said and Gabriella nodded. Megan headed off towards the doors to the customs area. Gabriella watched her slip through the doors as a passenger exited. She wished her luck but then the young lady made her own luck.\n\nShe looked over at Catherine and saw she was biting her lip. They were both nervous but Tina was beginning to look frantic. \"Tina, don't worry. He's probably just caught up in some technicality. Megan will find him.\n\nTina trembled but nodded as her eyes remained locked on the doors.\n\nMegan had surprisingly already made progress. She was sitting on a bench next to a young woman with lovely tattoos. As she'd passed the hall to the security offices she'd overheard an angry voice screaming something about killing the big bastard who sucker punched him and how he'd be back to 'cut the bitch'. That sounded like a promising lead so Megan walked into the hall as the police dragged the screaming and thrashing man away out another door. She sat down next to the crying woman who looked up hopefully at her. Megan saw she was handcuffed to the bench.\n\n\"Hi, my name is Megan.\"\n\n\"Lucy.\"\n\n\"Did a large man come to your rescue against the angry guy?\" she asked with a smile.\n\nLucy looked at Megan with large teary eyes. \"Yes! How did you know?\"\n\n\"That was Ben. My mom's boyfriend. He does stuff like that. Did you see which way he went?\" she asked.\n\n\"After he knocked Cecil out the police came and grabbed him. He didn't resist as they led him away. Is Ben simple minded?\" Lucy asked.\n\n\"What? No! Why?\" Megan snorted.\n\n\"He- he seemed kind of out of it when he grabbed Cecil after I was slapped. His face was blank and his eyes were a little scary when he held Cecil up on his tip toes by his ponytail. When Cecil tried to kick and hit him Ben punched him once in the face then dropped him in a pile on the floor. Then he looked at me with a friendly smile.\"\n\nMegan frowned with worry. She recalled her mom saying Ben had zoned out before when he beat up their new neighbor who had abuse his wife. She hoped he wasn't relapsing. If the police had him she had to get Gabriella and her mom on damage control as soon as possible.\n\n\"Are you going to be OK?\" Megan asked.\n\nLucy dropped her eyes down to her cuffed hands and worried a tissue into shreds. \"I don't know. Cecil has my passport. And my money. He's going to lose his shit when he discovers I'm no longer carrying his drugs. He's going to kill me. I just want to go home!\" she blurted then began to cry.\n\n\"The police have your passport by now. Just tell them how Cecil held you captive to be his drug mule. From what I've read that's more common than you think. That should get you free from him hopefully. Here's some cash to get you to our hotel, the Imperial Suites. When we get Ben free we'll meet you there and he'll hook you up with a flight home.\"\n\n\"Oh my god! Thank you!\" Lucy gasped. She started crying again so Megan just patted her on the shoulder.\n\n\"You be careful and we'll see you soon, ok?\" she said and headed back out to the baggage area. She had information some nervous ladies needed to hear.\n\nChief Inspector Antoine Boucher stared through the glass at the large man handcuffed to the table and contemplated how good he was going to look in the news tonight having captured Kirion Rapava, terror of the night! The man's crime spree had come to an end! Women could walk the dark streets at night no longer fearing the blade of this monster.\n\nIf it was him.\n\nThey hadn't proven that yet. There were no clear photos of Rapava nor any accurate eye witness descriptions. All they had was that he was large, muscular, had dark hair, and most importantly he had a scar crossing his face.\n\nBoucher had watched the footage of the big man lashing out at the punk who slapped his girlfriend. He was certainly capable of violence. Boucher was a bear of a man but the man in the room intimidated him.\n\nWhat planted the seed of doubt in Antoine's mind that the man they had in custody might not be Rapava was the gentle smile the brute had given the girl after he dropped the punk to the floor. Why had he protected the girl? That didn't fit the profile they had, at all. Rapava had never shown the slightest bit of compassion to any of his victims. All of whom were female. Or looked like a female in the case of that one unfortunate cross dresser.\n\nThe door opened quickly and Detective Chanel Babineaux pushed her way in with a fierce expression on her face. She drew up short when she saw Boucher.\n\n\"Chief Inspector! Is it true? We got Kirion Rapava?\" She swung her face to look through the glass at the man inside. \"Is it him?\"\n\n\"Detective Babineaux, when did you get here?\" Antoine asked. He took in the wrinkled suit and the short black hair in desperate need of a wash or even a brush. The woman's eyes were dark brown and bore right through your head when she focused on you. She had classic symmetrical facial features and a long limbed, slim build the ladies on the Parisian catwalks would kill for. Had she worn even the slightest amount of make-up or paid any attention to her looks she could have been breathtaking. But the Chief Inspector knew the detective despised all things 'girly'. Still rebelling from her mother's pressure to get her into fashion. He couldn't fault her for wanting to apply her keen mind to the 'more worthy' pursuit of being a detective in the police force.\n\n\"Just minutes ago. I was following a tip that Rapava was coming in on a flight today. I got here and was informed that he was already in custody!\"\n\n\"It might be him. He matches the limited description we have. Our people are going over the documents he had with him. The passport was brand new. Could be fake but it's a really good forgery if it is. Our tech people are working on accessing the computer he had on him. He seemed to be travelling on his own.\"\n\nBabineaux stared at the man shackled to the table. \"Who's doing the interrogation?\"\n\n\"Felix.\"\n\n\"Ah. Good man.\" she conceded. She would have loved to have been the one to crack Rapava. She had a personal connection to this case though she kept that fact to herself. Chanel had been on this case for years. She knew all the details of each attack carried out by that monster. You couldn't bury yourself so deep in the details without it affecting you. Then he struck too close to home. Someone she'd known... intimately... had been killed and all signs pointed to Rapava.\n\nShe examined the man in the room and memorized his features. He was handsome if you ignored the thin white scar that ran from cheek to cheek crossing is nose. Big, dark, and brooding. She wasn't sure how long he'd been in there.\n\n\"Have you seen the footage of him attacking the punk in the custom's queue?\" Boucher asked.\n\nChanel looked at her boss. \"He attacked someone?\" she said in shock.\n\nThe man nodded and passed her a tablet. The door opened and the Chief Inspector was called outside.\n\nChanel queued the clip and watched it. She stopped it the moment he dropped the limp man to the ground. She saw the cold expression on his face as he struck the man. Quick as a whip and ruthless. It had to be Rapava. She put the tablet down and turned to the window again.\n\nShe saw the door open in the room and the man looked at the three officers who entered. He was staring at them as they spoke but he shook his head. She turned on the speaker to hear what they were saying.\n\n\"-English. Sorry, I don't speak French,\" he said.\n\nThe officers closed the door and took positions. One moved forward and removed one of the cuffs and stood back.\n\n\"You will remove your clothes for a body search.\" the officer who released him said. The man scowled at him but looked at the others who had their hands on their weapons. He unbuttoned his shirt.\n\nChanel jumped when the door to the observation room opened and two female officers barged in. They stopped and stared at Babineaux but she just nodded. Rapava deserved the indignity so she was fine with him having an audience. She moved to the left side of the window furthest from the door which gave her a better view anyway.\n\nThree more female officers and two male officers came into the room to watch the unveiling. Their timing was perfect as the man was just taking off his shirt at that moment. He pulled it open and back over his shoulders. He was very muscular and several sighs and coos were heard from the watchers but that stopped when they noticed the scars. The room went quiet.\n\nTerrible violence had been inflicted upon this man. It was difficult to tell the age of some of the scars. Some looked recent. Some were large and others small so there may have been multiple attackers of different strengths. Regardless they were chilling to see. Perhaps most disturbing were the three old bullet hole scars on his lower torso.\n\n\"The pants. Remove them.\" the officer said, his voice betraying his unease.\n\nThe man scowled again but undid his belt, button and zipper. He kicked off his shoes, pushed his pants down and stepped free of them. The watchers gasped and giggled as they saw the thick cock hanging down between his legs. He stood there with his hands at his side waiting while the officer inspected his clothing.\n\n\"Gil, would you like to spend some time with him in his cell?\" Chanel overheard a teasing voice say.\n\n\"Like you wouldn't.\" was Gil's reply.\n\n\"They found his concealed weapon.\" giggled one of the ladies.\n\n\"Maybe you'd like to help conceal it once more?\" chuckled another.\n\n\"You do realize this man is responsible for the brutal torture and murder of over a dozen women?\" Babineaux said critically.\n\nOne of the women looked at her in surprise. \"It's him then? Kirion Rapava? It's been proven?\"\n\nChanel looked away from the officers to stare back at the naked man behind the glass who was bending over the table. \"Not yet. But we're getting closer.\"\n\nThe room winced as they watched the man's reaction to the cavity check. \"You can put your clothes back on.\" the officer who did the inspection said when he was finished.",
        "The man dressed, all the while glaring at the three officers. His blush betrayed his humiliation and his facial scar stood out in stark contrast. Once he was shackled to the table again they left as did the watchers with Chanel. One of the ladies stopped and looked back at the detective. \"I hope it isn't him. Sending such a beautiful man to prison for life would be such a waste.\" she said and ignored Chanel's glare as she left.\n\nMinutes later she watched the door open on the interrogation room again. Detective Felix Mannus entered the room with a file in his hand. Mannus looked like he'd just stepped off a catwalk. Crisp, tailored suit, perfectly mussed hair, chiseled features, the man used his looks as a weapon against those he interrogated. He seemed to be able to get people to open up to him faster. People wanted to trust the pretty man. Babineaux snorted. She'd been told she could do the same thing but she found the idea distasteful.\n\nMannus sat and opened the file.\n\n\"Mr...\" He looked at the file. \"Shepherd it says here.\" he said in French.\n\n\"I'm sorry I don't speak French. Only English.\" the man said.\n\nFelix looked at him. \"I said the file reads that your documents indicate your name is Ben Shepherd.\"\n\n\"That's right.\"\n\n\"Ben Shepherd. Benjamin?\" the detective asked.\n\n\"No, just Ben.\"\n\n\"Why did you attack the man in the customs queue, Benjamin?\"\n\n\"Ben. I- I don't remember attacking anyone.\"\n\n\"Really? You don't remember? You are actually going to tell me that.\" Mannus said with a sigh. He pulled a tablet from under the file and queued up the clip. He turned it to the man and played it.\n\nChanel watched the expression on the man's face. She saw his jaw lock and his eyes go cold. Definitely a killer she thought. It's him! She was convinced.\n\n\"He hit the girl.\" the man said with a voice gone cold.\n\nMannus seemed to be looking carefully at the man across the table from him. \"You struck the man very violently. He lost teeth.\" he said quietly.\n\n\"He hit the girl.\" was the only reply. Again, the smooth, calm voice sent a chill up Chanel's spine.\n\n\"Did you know this man or the woman he was with?\" the detective asked.\n\n\"No.\" he said and began to blink. His eyes began to show confusion. \"I need to let my friends know where I am. Tina especially.\"\n\n\"Your friends? You were traveling alone.\" Mannus said looking at the file.\n\n\"I was traveling with eight other people but we got separated at customs. Listen, Tina has... an anxiety disorder. She's probably in a bad state. I need to let her and the others know where I am.\"\n\nChanel frowned. This was a different ploy. Crafty bastard.\n\n\"Then perhaps you should answer my questions quickly so we can finish up here.\" Mannus said reasonably. The man frowned but nodded.\n\n\"What is the purpose of your visit to Paris?\" he asked.\n\n\"We're on vacation. Sightseeing.\" the man replied but looked towards the door.\n\n\"How long will you be here, Benjamin?\" the detective continued.\n\n\"Ben. Two weeks but we'll only be in Paris for five days. We're visiting several places as we head south and will finish up in Cannes and fly home from Nice.\"\n\n\"Your passport is new.\"\n\n\"Yes, I got it renewed before the trip.\" the man replied.\n\n\"You filled the other one? You travel a lot? Amsterdam? London? Warsaw? Johannesburg? Frankfurt? Rome?\" Mannus said and Chanel recognized the list of cities where Rapava had left his mark.\n\n\"No, I've never traveled before. My neighbor Gabriella who organized this trip asked me to renew my old passport even though it still had a little under a year left on it. I hadn't used the old one.\"\n\n\"So you are claiming you've never been to the cities I mentioned.\" Mannus pushed.\n\n\"That's right. Paris is the first place I've ever traveled to and I'm starting to wish I hadn't.\" the man grumbled.\n\n\"That's odd because we have people claiming to have seen you in those cities.\" the detective pushed again.\n\n\"Then they'd be wrong because I've never traveled outside of the United States before.\" the man insisted.\n\n\"Their description of you was very specific.\" The moment Mannus said it Babineaux wanted to scream.\n\nThe man froze. He looked at the detective. \"Is that what all this is about? I look like someone you are looking for? Is there a photo of this person I'm supposed to be?\"\n\nChanel cursed. Felix had fucked up. She knew Rapava was done talking. She stormed out of the observation room. She had to contact her snitch to see if she could get more information on Rapava's actual reason for coming to Paris. She had to get it before he weaseled his way free of this. They still had his attack on the punk in the custom's queue. So they could hold him on that.\n\nAs she made her way through the halls she saw a cluster of officers and a medical team with a stretcher. There was a body under the sheet on it.\n\n\"Who's this?\" she asked.\n\n\"Just some stupid punk who thought he could smuggle heroin inside his body and get into a fight. He attacked these guys and they put him down. But one of the bags in his intestines must have ruptured. He died of an overdose pretty quickly after that.\" the medic said.\n\nChanel pulled the sheet down and cursed. It was the guy from the queue. Their reason for keeping Rapava. FUCK! She thought quickly. There was still the girlfriend. She'd still be in holding. Chanel set off to find her.\n\nGabriella, Catherine, and Tina sat in a conference room waiting on the Chief Inspector. Megan had returned to them directly after speaking with a young woman who had witnessed the police taking Ben away. She'd filled them in on Ben's situation and everyone gave her hugs for her amazing detective work. The three women had immediately set off for the Security office and demanded to speak with whoever was in charge.\n\nGabriella looked over at Tina and saw she was looking a little better. Now that they knew Ben was in a room nearby the uncertainty was greatly reduced. They were taking action. But they still had to extract Ben from this mess.\n\nA large burly man in a dark grey suit entered the conference room and introduced himself in French as Chief Inspector Antoine Boucher and that he understood they had asked to speak with him. Gabriella greeted him in French and asked if they could speak in English for Tina's sake. He smiled and graciously agreed.\n\n\"So I am to understand you know something of the man we currently have in custody?\" he began.\n\n\"Yes, his name is Ben Shepherd and he is a very good friend and neighbor of ours. We've been neighbors for years and this is his first time traveling outside of the States. Ben is traveling with our group but we got separated in that mess at customs.\" Gabriella explained.\n\n\"Then you are unaware that he was involved in a violent altercation with another passenger.\" Boucher asserted.\n\n\"We understand that Ben came to the assistance of a young woman named Lucy who was being physically assaulted.\" Gabriella said.\n\n\"Ben does that. He is a good man!\" Tina blurted and Catherine took her hand with a smile.\n\nThe Chief Inspector's face showed his surprise that they were aware of the young woman.\n\n\"Ben can't turn a blind eye when a woman is being abused. Did the passenger attempt to attack Ben when he stopped him from hurting the woman?\" Gabriella asked.\n\nThis explanation spoke to Antoine's niggling doubts but he wasn't ready to hand over their suspect on the word of these three women. They were not citizens of France.\n\nGabriella read his unease and spoke up again. \"I'm here on vacation this time but I'm in Paris frequently for my business. I import Parisian fashion from designers here for distributors in the States. I have several business contacts here that will vouch for me.\" Gabriella suggested. Boucher looked pleased and nodded. She brought up the contact details on her phone. She showed them to him and he made a note on his tablet.\n\nWhen he saw the third contact he froze. \"Is this a direct line to Madame Clarisse Leferre?\"\n\nGabriella's face held a warm smile. \"Yes. Clarisse is a dear friend as well as a colleague and she is aware of Ben. I've shown her a picture of Ben as well. She can vouch for me and for how long I've known him.\n\nShe pulled up a photo she had on her phone of her and Ben in the park in the center court during a block party. She turned the phone to Boucher. It was an older picture taken in the summer and Gabriella was showing a little more cleavage than she normally felt comfortable displaying. She'd done it to catch Ben's eye and she recalled it had certainly worked.\n\n\"If you would be so kind to forward this image to my account we will add it to the file... as proof of your previous knowledge.\" Boucher said with a slight blush.\n\n\"Certainly,\" she replied as she entered the email address he showed her on the tablet. The picture was sent and she watched him smile as it appeared on his tablet. Men were such slaves to their penises, she thought, but kept her smile to herself.\n\nHe looked closer at Ben's face in the image and noticed no scar. \"When was this image taken? He is missing some characteristics his face now has.\"\n\nShe looked at Catherine. \"When was our last block party? The big one we had in the park.\"\n\nCatherine frowned. \"I believe that was four years ago.\"\n\nGabriella nodded. \"Ben now has a scar across his face.\"\n\nBoucher perked up. \"When did he get this scar?\"\n\n\"Close to three months ago Ben was attacked by a man with a knife. He was stabbed in the chest multiple times and his face was slashed. He's healed very well but the scars remain.\" Gabriella replied.\n\nBoucher felt disappointment settle upon him. Three months was too recent for this man to be Kirion Rapava. The first report of Rapava's scar was from five years earlier. Still he thought he'd try one last thing. He looked carefully at the ladies. \"Does the name Kirion Rapava mean anything to you?\"\n\nGabriella shook her head as did Catherine and Tina. He nodded.\n\n\"There remains the fact that your friend and neighbor used violence against a fellow passenger. A passenger that is in his rights to press charges. Please give me a moment to call your contacts and to confer with the assaulted man to see how he wishes to proceed.\"\n\nGabriella nodded and cast a worried look at Catherine and Tina. Once they were alone she addressed her fears. \"The French judicial system is different than ours. Here you are guilty until proven innocent.\"\n\n\"We will not get to leave with Ben?\" Tina whimpered.\n\n\"We will see. You may need to be brave Tina.\" Gabriella took her hand.\n\nChanel was in a rage. Felix was in the process of fucking up the most important interrogation of his career, the punk who could have pressed charges against their suspect to keep him in custody was dead, and the girl whose statement might have assisted them with at least delaying his departure was nowhere to be found. The detective was searching for the officer that released her.\n\nShe found him in the small kitchen pouring himself a cup of coffee.\n\n\"Jacob! What the fuck! Why did you release the witness to the attack!\" she barked.\n\n\"Good morning to you, Chanel. You look lovely as usual.\" he replied with a weary tone.\n\n\"Answer my question!\"\n\n\"There was no reason to hold her. The man she was with died. She claimed that he held her captive, took her passport and money, threatened to kill her, and tried to get her to carry drugs which she dumped back in the airport in Amsterdam. She said he would have killed her when he discovered she no longer had them. She was clean, her papers are good and he was dead so there was no reason to keep her.\" He finished with a huge yawn having just finished his extended overnight shift. The coffee was just to wake himself up enough so he could drive home.\n\n\"There is an ongoing investigation she is a witness in!\" Chanel growled.\n\n\"Am I a mind reader? Maybe you should share information like that!\" he growled back.\n\n\"Where the fuck is she now?\" she asked.\n\n\"She said she'd be going to the Imperial Suites then she was flying home to the States.\" he offered then scowled as the detective spun and rushed from the room. \"Fuck you too.\"\n\nBoucher was all smiles when he entered the conference room again. His call with Madam Leferre and subsequent video call with her had been delightful. He normally delegated such calls to subordinates but to speak with such a celebrity of the fashion industry had been a perk he could not deny himself. And she had been as lovely and gracious as he'd expected. The fact that she had suggested they video conference so he could show her the pictures of his suspect for her to identify had been unexpected and very welcome. She had identified the man as Ben Shepherd and confirmed that Gabriella had been neighbors with him for years. When he showed her an image he'd taken of Ben this morning she sighed when she saw his scar and acknowledged Gabriella had mentioned the attack on him.\n\nHe would have Gabriella's other contacts called by a junior officer but Boucher was convinced this wasn't the man they were after.\n\nGabriella, Catherine, and Tina all looked at him with anxious expressions.\n\n\"I have some good news for you. I have confirmed that your neighbor is not the man we are looking for. Also the man he assaulted has died.\" Antoine said with a smile.\n\nAll three women cried out in dismay as he realized what he'd just said.\n\n\"Oh! I'm so sorry! I did not mean to imply the man died from the assault! He was carrying drugs inside his body and got into a fight with the officers detaining him. In the struggle one of the balloons of drugs must have ruptured. He died of an instant overdose. Nothing to do with your friend. Again, my apologies for my careless words.\"\n\nAll three smiled weakly and Tina leaned forward. \"Please may I see Ben now!\" she pleaded.\n\n\"I will bring him to you. Please wait just a moment more.\" Antoine said and glanced at Gabriella who smiled and nodded. He left the office and stopped by the tech department. He looked in and saw two of his tech heads peering at the screen on the suspect's notebook computer. Both were eating as they worked. Antoine shuddered at their poor eating habits. \"Have you had any success?\" he asked.\n\n\"Chief Inspector! Sir, uh, no sir. The security is like something from a spy novel. We have tried to get past it but there seems to be at least three levels of security, including biometrics which only the subject can match. If we had permission to take the machine apart...\" one of the techs said with a hopeful tone.\n\n\"No, we are releasing the man. Close it up, pack it all away in his briefcase and bring it to interrogation immediately.\" Boucher said ignoring their looks of disappointment. He turned and walked back to the interrogation room. He stepped into the observation room and looked through the glass.\n\nBen was sitting as far back in his chair as the handcuffs would let him. He was glaring at the detective across the table but he wasn't saying a word. Antoine tapped on the glass.\n\nDetective Mannus glanced over his shoulder and Ben jerked his head towards the mirror as if he suddenly realized it hid another room with watchers. His face went red but Antoine couldn't tell if that was from rage or humiliation. Even though he knew the man wasn't Rapava he still felt intimidated by him. Must be that damned scar.\n\nMannus closed the file and left the room. Moments later he entered the observation room.\n\n\"Chief Inspector.\"\n\n\"Detective Mannus. Your impressions?\"\n\n\"He's big. He's menacing with that scar but I don't believe he's Kirion Rapava.\"\n\n\"Agreed. He was actually travelling with a group and I've spoken with some of them. They've provided confirmation that he is the man his passport indicates he is. I'm going to release him.\"\n\n\"What about the punk he assaulted?\" Felix asked.\n\n\"He got into a fight with some officers and ruptured one of the balloons of drugs in his gut. He's dead. I don't need the headaches of trying to charge this man with no victim.\" Antoine said. \"Get the officers to unshackle him please.\"\n\nFelix nodded and left. Boucher took another look at the man inside the interrogation room. He sighed. If he had been Rapava there would have been reason to celebrate. Now that they knew it wasn't, and they knew Rapava may have slipped in, they would need to review all of the incoming passengers to see if any others matched the description they had. He saw the officers entering the room so he left to stand in the hall. The tech came by with Ben's shoulder bag and gave it to the Chief Inspector.\n\nMoments later the officers led Ben out of the room.\n\n\"Mr. Shepherd, I'm Chief Inspector Antoine Boucher. My apologies for detaining you but we had to be certain you were not the very dangerous criminal we were informed had come to Paris. Your activities in the customs area helped set that impression.\"\n\nBen looked like he was struggling to control his emotions. Finally, he nodded.\n\n\"You have some ladies waiting for you in a conference room. One in particular seems very upset.\"\n\nBen's expression immediately changed to concern. \"Tina? Is she alright? May I go to her?\"\n\nAntoine smiled and the last bit of doubt he had dissolved. This was not Kirion Rapava. \"Yes, I will take you to her.\" He handed Ben his shoulder bag and nodded to the officers who walked away. Antoine gestured for Ben to walk with him. They got to the room and he allowed Ben to enter first.\n\n\"BEN!\" Tina cried and leapt to her feet. She rushed around the table and crushed herself up against his chest. Ben held her trembling body tight and looked over to Gabriella and Catherine with love and gratitude. The other ladies came around the table as well and shook Antoine's hand and gave him a kiss on both cheeks. He looked very pleased indeed. He led them out of the conference room and once Ben pulled Tina from his chest they followed him into the hallway. They were led to the entrance of the Security offices and this time Tina leaned up to give Antoine a double cheek kiss. She also gave him a small bow then returned to cling to Ben's arm.\n\nBoucher headed back to get the video analysis started and the others headed towards baggage claim.\n\nChapter 2\n\nWhen the group reconnected by their bags there were hugs all around. When Ben learned it was Megan who found him and led Gabriella, Catherine, and Tina to him Ben stepped forward and pulled her into a big hug. Sophia and Rachel looked on with envy as their younger sister smirked at them.\n\nNext came the ordeal of getting them and their baggage to their hotel. This was solved by piling into a number of cabs, Tina went with Ben, and the convoy made its way to the hotel without losing anyone or any baggage. Soon most of them were standing in the lobby of the hotel surrounded by their bags. Catherine was outside paying the last taxi driver and Gabriella was speaking to the front desk clerk checking their party in.\n\nMegan noticed Lucy at the far end of the lobby, beat up backpack at her feet, being questioned by a tall woman with short dark hair. Lucy was shaking her head and didn't look happy. Megan reached over and tugged Ben's sleeve.\n\n\"Ben?\"\n\nHe turned to her. \"Yes?\"\n\n\"The woman I spoke to who pointed out where you were? Her name is Lucy. She was pretty upset as the guy she was with basically kidnapped her. She just wanted to go home but he took her passport and money. I gave her cab fare and told her to meet us here. I kinda told her you would pay for her flight home.\" Megan said looking embarrassed at her presumption.\n\n\"She's here?\" Ben looked up and spotted the girl, in tears now, at the far end of the room. He immediately set out in her direction with Megan and Tina in his wake. Sophia, Rachel, and Daniel remained with the bags while Miriam went to tell her mother where Ben was heading.\n\n\"Lucy?\" he said and her head whipped up. The tall woman spun around with her hand moving to her sidearm. Ben saw fear and rage pass across her features in rapid succession then settle on incredulous anger.",
        "\"How are you here? Why aren't you in custody?\" the woman growled.\n\n\"Who the hell are you?\" Ben growled back.\n\n\"Detective Babineaux. Answer my question!\" she barked.\n\n\"I'm done answering quest-\" Ben began loudly when Tina interrupted him.\n\n\"Chief Inspector Antoine Boucher said Ben was not the man the police were looking for. He set Ben free! If you want to question your boss feel free to speak with him. Until then you may leave us alone please!\" Tina asserted.\n\nBen looked at Tina with a proud smile. Then he looked over at Lucy who was sniffling. \"Are you Ok?\" he asked.\n\n\"I just want to go home!\" she begged looking at Ben pleadingly.\n\n\"Then let's make that happen.\" Ben said kindly, holding out his hand.\n\nLucy picked up her pack, slipped around the detective and seized Ben's hand like a lifeline.\n\nBabineaux stepped right up to Ben and looked him in the eye. The woman was almost his height. \"I don't know how you fooled Boucher and I don't know how you've convinced these women to defend you but I know who you really are Kirion and I will take you down. Know this!\"\n\n\"Lady, you have the wrong guy and while you're wasting your time with me the real Kirion is out there... doing bad things.\" Ben growled.\n\nChanel spat in his face and quickly stepped back waiting for him to attack.\n\nThere was a tense moment then Ben held out a hand to Tina. She placed one of her ever present cleaning wipes in his hand and he used it to wipe the spit from his face.\n\nWhen he was done he fixed a cold stare directly into the detective's eyes. \"Your boss is going to receive a call from me now. You have moved from being merely annoying to assaulting me. It's clear you're becoming unstable. Unstable people who carry weapons are a risk to the public. Maybe you should go speak with him. Convince him otherwise.\" Ben's voice was calm but very cold. He was obviously restraining himself with great effort.\n\nChanel ground her teeth then her eyes caught sight of someone long dead. Her reason for going after Rapava so fiercely. Her face froze with a look of shock as the apparition moved towards her. Tall, fair skinned, white blond hair to her shoulders, fine features, lush lips, and those beautiful blue eyes that looked right into her soul. Babineaux came undone, took a step back then turned and fled before the ghost of her past could reach her.\n\nBen watched the detective push open the side door and rush outside. He looked back at Catherine who was approaching with Gabriella.\n\n\"Who was that?\" Cat asked him.\n\n\"I was going to ask you that very question as she was looking at you like she knew you.\" Ben said. When Catherine shrugged he shook his head. \"She said her name was Detective Babineaux. She was rather upset I'd been released. She still thinks I'm this Kirion guy.\"\n\n\"She spat in Ben's face to get him to attack her!\" Tina blurted.\n\nGabriella and Catherine made angry sounds then they noticed the young woman hiding behind Ben holding his hand.\n\nBen became aware of her again as well. He gently pulled her forward. \"This is Lucy. We're going to help her get home.\"\n\nGabriella and Catherine both smiled and introductions were made as they all walked back to the bags and the other travelers in their group.\n\n\"We're all checked in. We have the top floor to ourselves. All the rooms are ours. We can go up now. Then you can make the arrangements to get Lucy home.\"\n\n\"Is that ok with you?\" Ben asked the young woman.\n\n\"Yes, that sounds very ok.\" she replied with a timid smile.\n\nThey took the elevators up to the top floor and Gabriella led Ben to his room. Catherine led the others to their rooms. Gabriella had arranged the largest suite for Ben as he was paying for the trip. Ben looked around the lushly appointed room in awe. He immediately kicked off his shoes at the door. The carpet in the living room looked like it was handmade and a work of art in itself.\n\n\"This is too much for me! Uh... where's the bed? Does the sofa fold out?\" he asked as he took in the beautiful sitting area.\n\nGabriella rolled her eyes and grinned as she walked over to a set of sliding panels cleverly disguised as frosted windows and slid them apart. Behind them was a huge four poster bed on a raised platform. Ben's eyebrows went up in surprise. He walked in and there was a door beyond the bed that led to an amazing ensuite bathroom with a huge soaker tub and a large shower with jets like he'd installed in his own bathroom at home. He was impressed. The room was a little... ok, way over the top but the bed looked inviting.\n\nFirst thing first though. He had to arrange to get Lucy home.\n\nHe walked back out to the sitting room and saw her staring at the bed with wide eyes.\n\n\"You've booked the entire top floor and they all look like this?\" she gasped.\n\nBen looked at Gabriella who smiled. \"Well, they're not quite as opulent as this room but they're all very nice.\"\n\nThere was a rapid knock on his door and Gabriella opened it. Daniel and Miriam rushed into Ben's room with excited grins on their faces. Their eyes popped as they took in how fancy Ben's room was. \"Mom! Our rooms are awesome!\" Daniel gushed. The kids grabbed her hands and tugged at her to follow them. With a happy smile back at Ben the mother let her kids pull her away.\n\nBen sat down on the couch and pulled his notebook out of his shoulder bag. He flipped it open and grimaced at the oily fingerprints on his keyboard. He pulled out a wipe from a packet in the bag and cleaned the keys. He hated other people using his computer. Not that it was likely they got beyond the login screen. One of his customers installed military grade encryption and login authorization on it for him. He entered his password, swiped his finger across the biometric reader, and looked into the camera for it to map his face. Then he was in. He logged into the hotel's WiFi after his firewall said it was safe to do so and pulled up a travel website to book a flight.\n\nHe motioned for Lucy to sit next to him. \"Where's home, Lucy? How long have you been away?\"\n\nLucy sat and stared at Ben then looked away. \"Phoenix, Arizona. At least it was up until I was eighteen. That was when my step-dad told me to put out or get out. I told my mom and she blew up and called me all kinds of nasty names and said I was lying. I had my inheritance from my grandmother so I just bought a ticket to Amsterdam and left. I've been doing odd jobs, moving from place to place and living off the inheritance when I had to for the past five years. I haven't spoken with my mother since the day I left.\"\n\n\"Maybe you should give her a call before you show up on her doorstep.\" Ben suggested.\n\n\"Could I?\" Lucy asked.\n\nBen flipped his phone on and handed it to the girl. He gave her the country codes to dial the States and she dialed her home. When it started to ring she stood up and walked to the window. Ben tried not to listen but the room was quiet and he heard her side of the call.\n\n\"Mama? It's Lucy... Yes... I'm sorry to call at this time in the morning... It has been a long time. I'm sorry I didn't call before... I'm sorry... Mama, I want to come home... No Mama I'm not in trouble. Can I come home?... Don't say that! Please! Don't say that-... Mama? Hello?\"\n\nLucy pulled the phone back from her head and stared at it in shock and disbelief. Ben had actually heard the final angry yells of the woman on the line at the end. He picked up that the call hadn't gone well and her Mom had hung up on her. She wasn't going to receive a welcome home.\n\nBen stood up and walked over to the young woman. \"Are you ok, Lucy?\"\n\nShe handed the phone back and spoke with a voice gone hollow. \"I won't be needing to make any more calls home because I no longer have one. Mama- that woman told me I'm no longer her daughter.\" Reality caught up with her and the tears started flowing. She'd always held the hope that one day she'd be able to mend that relationship and go back to her mother but the impossibility of that had just been made crystal clear. Ben opened his arms and she turned in to his chest as the flood gates opened. Lucy cried in huge sobs which shook her body. Ben just let her cry as he gently held her in his arms.\n\nGabriella opened Ben's door and peeked inside when she heard the girl crying. Ben gave her a sad look and she came into the room with Megan in tow. They took a seat on the couch and waited quietly as the girl got it out of her system.\n\nA few minutes later they heard her sobs begin to abate and soon she moved into the sniffle stage where Ben was able to pull back slightly.\n\n\"Feeling a little better?\" he asked gently.\n\nShe nodded and glanced over at Gabriella and Megan who both had sympathetic looks on their faces.\n\n\"Lucy has suffered a little set back in her plans so I think she should just take a few days to breathe and consider other avenues.\" Ben said to the others then he looked to the young woman who was still clinging tightly to his shirt. \"Lucy, you are welcome to stay with us while we're in Paris.\" He looked at Gabriella. \"We're here for five days?\" Ben guided her back to the couch and she finally let go of him as she sat.\n\n\"Yes, we have five days in Paris then we set off south.\" Gabriella agreed. \"We certainly have room if she doesn't mind sharing a room some nights. We have the floor, six rooms. Yours, mine which I'll share with Miriam, Catherine's which she's sharing with Sophia, Rachel and Megan are in another, Tina has room with an extra bed and Daniel has his own room which he is thrilled about. As we have the whole floor and elevator access to our floor is controlled by our room keys, I'm comfortable about Daniel being on his own.\" She turned to Lucy. \"You can bunk with Tina... or Tina can stay with Rachel and you can bunk with Megan,\" she amended when she saw the rapport the two young women had. Megan smiled at Gabriella and Lucy nodded.\n\n\"OK, it's settled. You're officially part of our party as of now. If you don't mind I'm going to take a hot bath then I'm going to take a nap. I'm bagged,\" Ben said feeling the weight of the ordeal he'd been through suddenly hit him like a sandbag.\n\n\"Just remember we have dinner reservations for the whole gang tonight at a very nice restaurant two blocks away. We're walking to and from the restaurant but attire is elegant,\" Gabriella reminded him.\n\nThey saw Lucy's face drop. Gabriella held up a hand before Ben could step in. \"Lucy, Megan will take you downstairs to the lovely little dress shop on the main floor and she will help you pick out a dress and some shoes. No arguments, you are our guest.\" Megan jumped up and gave Ben a kiss on the cheek and Gabriella a hug. Lucy stood up and hugged Ben then Gabriella. She had tears in her eyes again but they were of happiness. She picked up her backpack then Megan took her hand and they rushed from the room.\n\n\"Would you mind if Tina were to join you?\" Gabriella asked.\n\n\"No, that would be fine.\" he said as he leaned forward and gave her a sensual kiss. Gabriella smiled and growled playfully as she patted his chest when he pulled back. \"Easy Tiger! Our date night isn't until tomorrow! I'll get Tina.\" She left with a smile.\n\nBen walked around his room and checked out the gorgeous view from his balcony. He walked back in as Tina was coming into his room. She beamed a smile at him and rushed over to hug him but pulled back abruptly.\n\n\"Your shirt is wet!\" she said, wiping her cheek.\n\n\"Oh! I'm sorry Tina! That was from Lucy. She had a little meltdown when she discovered her mother wants nothing to do with her. She has no home to go back to.\"\n\nTina quickly started to unbutton his shirt. \"You cannot wear this now.\" she said seriously but there was a twinkle in her eye.\n\n\"I'd like to soak in the bathtub then take a nap.\" he said as she pulled the shirt from his shoulders.\n\n\"I will get the tub started.\" Tina said as she rushed into the next room with his shirt. He smiled watching her eagerness.\n\nHe heard the tub begin to fill as he walked into his bedroom. He considered how many people had burst into his room and wondered how many of their key cards opened his door. He decided to close the sliding panels to the bedroom for some privacy in case someone else decided to visit.\n\nHe walked into the bathroom and Tina was naked and bent over the side of the tub testing the water temperature. Ben smiled at how quickly Tina had managed that and admired her perfect, round little ass. He undid his belt and the metal buckle jingled quietly. Hearing the sound she turned her head and smiled back at Ben. He dropped his pants and underwear and stepped out of them. He tugged his socks off last and stood naked behind Tina who was starting to squirm under his steamy look. Ben looked at the counter and saw she had unpacked his toiletry kit for him. His tube of lube was conveniently available. His smile turned into a grin as he realized Tina was on a mission.\n\nHe knelt down behind Tina and slid his hands up the sides of her legs slowly, his thumbs sliding up the inside of her thighs. Tina hissed with delight at the feel of his hands on her and Ben felt her trembling. Before his hands reached the top he leaned forward and ran the flat of his tongue over her pussy and pressed it firmly against her rosebud. Tina cried out and pressed back. Ben's hands reached her ass and he squeezed the cheeks firmly as she moaned and squirmed. He lapped at her pussy and she squeaked and gasped with each stroke. He moved his hands down a little and as he slid his thumbs into her wet pussy Tina groaned.\n\nBefore she could prepare Ben began to fuck her ass with his tongue and Tina's legs buckled until she was resting on the lip of the tub. He pumped his thumbs into her dripping pussy as he forced his tongue into her ass.\n\n\"BEN! Oh god Ben! I need you inside me! Please!\" Tina wailed.\n\nHe reached over to the counter with one hand and grabbed the lube. He squirted some over his hard cock then ran his hand over it to coat himself.\n\n\"Ben! Oh please!\" Tina pleaded.\n\nHe glanced at the tub and it was getting a little too full. \"Shut off the taps, Tina.\" he said and she reached over to shut them off. The moment they were off Ben got behind Tina and pressed his thick cock against her wet pussy lips. There was a moment of resistance, he was very large for Tina's size, then he was sliding in. He took it slow and steady to protect her.\n\n\"Oh yes! Ben! So good!\" Tina panted as his cock pressed into her depths. Then he reached bottom. He held still as he felt Tina gripping his cock tightly. He waited for her to relax then he slowly withdrew. Tina shook and moaned. He pulled out to the head then immediately pushed all the way back in again. The lube helped a great deal but Tina's pussy was still very tight for him. With each stroke she became less intelligible. Once he'd sped up to slap against her ass on each down stroke she was reduced to gibberish.\n\n\"Buh buh Bnnnnnnn, oooohhh Beh oh oh fuh! Mmmmm!\"\n\nBen's orgasm was racing up so he began to rub her asshole with his thumb. Tina squealed and surfaced long enough to make her needs known. \"YES! My ass! Touch me there! Please! Ohhhhh!\"\n\nHer pleading triggered Ben's orgasm. He slammed his cock in deep and slid his thumb into her ass. Tina screamed out his name as her own release swept over her. She looked like she was going to fall forward into the tub as her muscles began to go slack so he quickly reached out and grabbed her long hair up by the back of her neck. The sensations of having both her pussy and ass completely filled and her hair pulled roughly sent Tina into overload.\n\nSuddenly her body went rigid and Ben felt her clamp down on his cock and thumb. He grunted from the rippling pressure and his body struggled to cum through her tight grip on his cock. He pulled his thumb free and grabbed under her torso to take the pressure off her hair. He got a rough handful of tit and Tina's wail went ultrasonic as she began to shake. He felt something warm splashing over his balls and he looked down. His legs were dripping and the towel they were kneeling on was soaked. His eyebrows rose.\n\nHe pulled Tina up against his chest and her head rolled loosely on her shoulders. She was out. He lifted her off his cock and his last two streams fired against her pussy lips as his interrupted orgasm finally finished. He shook through the end of his release then very carefully he rose to his feet and carried Tina into the shower stall. He gently turned her limp body in his arms to have her face him with her head on his shoulder. Then he reached out and got the shower running at a nice warm temperature. He cleaned Tina and himself as best he could then he carried her out and dried her with the big fluffy towels.\n\nBen carried Tina out to the bed, pulled down the sheets, dropped a towel over the bed and carefully laid Tina down over the towel. He pulled the sheets up and looked down at her sweet sleeping face. He kissed her forehead then walked back into the bathroom and put the wet towels into the hamper. Then he climbed into the soaker tub.\n\nHe gave himself half an hour in the tub just soaking in the heat. Then he took a quick shower and dried himself off.\n\nClimbing under the sheets next to the petite woman he set his alarm to give them time to clean up for dinner then closed his eyes. Just before he drifted off cuddled up to her he had the impression that he'd forgotten to do something. Then it was gone and so was he.\n\nChanel sat at a table under an umbrella in the sidewalk caf\u00e9 across from the Imperial Suites hotel. Her hands trembled as she tried to collect herself. There had been so many sloppy moves in this case to date and then she went and made the biggest mistake of all. Direct confrontation with Kirion Rapava. How could she have been so stupid! Then to get all flustered and hallucinate seeing... her.\n\nShe sat stewing in the caf\u00e9 waiting for the call from the Chief Inspector ordering her in to hand in her badge and gun. It was so colossally unfair. She had failed and Kirion was going to walk free... unless she could catch him in the act. She turned off her cell phone so she couldn't receive the call. She would watch Kirion like a hawk from the shadows and take him down when the moment was right.\n\nChapter 3\n\nLucy sat in a salon chair facing a mirror in a spa on the main floor of the hotel surrounded by beautiful blondes. Megan was in the chair to her left having her hair shampooed while getting her nails done. To her right Megan's mother Catherine was having the same treatment. Both were facing away from the mirrors but they could see her face. Lucy could see Megan's sisters Sophia and Rachel in her mirror getting the same red polish applied to their nails while their hair was being dried. She knew in a back room Gabriella and Miriam were having a massage. They would be coming out for their hair and nails once that was done. Daniel was enjoying his room and its Internet access. Ben was taking a nap and Tina? She wasn't sure where she was.\n\nShe was feeling a little overwhelmed by the generosity they were showing her, a complete stranger. Catherine had seen her stunned expression up on their floor when they announced they were going to the spa and she was to join them. She'd explained that Ben had insisted to the group that during their visit in Paris they were not to stress about the cost. At the hotel everything would be charged to the rooms. Ben was covering their expenses on the trip. That was final.\n\nShe looked at herself in the mirror as the stylist examined her hair. She hadn't had it cut in years (saving her limited money) and it was extremely long. Too long. That said, she didn't want it all cut off. It was a beautiful chestnut color, slightly wavy, soft, and she preferred it long. The stylist had suggested a short bob but she asked for it to reach her mid back. Catherine had backed her up and the stylist finally agreed. She was beginning to work on it and Lucy was comforted to see the limited amount she was removing.",
        "\"Where is Tina?\" Lucy asked Megan.\n\n\"Spending some quality time with Ben.\" Megan said, wiggling her eyebrows suggestively.\n\nLucy looked over at Catherine who had a serene look on her face as the woman washing her hair gave her a scalp massage. She looked back at Megan.\n\n\"I thought you said Ben was your mother's boyfriend?\" she said directing her voice towards Megan in an attempt to be discreet.\n\n\"He is. He's also Tina's and Gabriella's.\" Megan nodded watching the woman paint her nails.\n\n\"Wow! I didn't get that impression from Ben at all!\" Lucy said with surprise in her tone.\n\n\"What impression would that be?\" Catherine asked curiously.\n\n\"Uh, that Ben was a player.\" she said timidly.\n\nCatherine snorted then blushed at the rude noise. \"Ben is a lot of things but a player he is not.\" she replied firmly.\n\n\"But he has three girlfriends?\" Lucy pressed. \"How does that work?\"\n\n\"Quite well from what I've seen.\" Megan responded and her mother smiled at her. Lucy gave her a frustrated look.\n\n\"It's quite simple really. We love Ben, heart and soul. He loves us the same way. We can't all be with him at the same time but we have full lives with our families and careers so we share his time between us. Tina lives with him but she's a special case. She's completely selfless in her love for Ben and he's really good for her. Her husband, who's no longer alive, was a special kind of bastard to her, taking her submissiveness as permission to abuse her mentally and physically.\" Catherine growled.\n\n\"Mom!\" her daughters chastised her in unison for disclosing too much about Tina.\n\n\"Oh! I'm sorry. I shouldn't have over shared about Tina.\" Catherine said contritely.\n\n\"Ben's a Dom?\" Lucy said quietly in shock, trembling slightly.\n\nCatherine's face showed her discomfort at blabbing and her daughter's scowls didn't make her feel any better. \"He is for her. She's so much happier these days. But I've said too much on that!\"\n\nLucy tucked that information away for a later time. She needed to speak with Tina.\n\n\"Isn't there jealousy with Ben being with three women?\" Lucy asked Catherine.\n\n\"Four!\" Sophia said with a smile.\n\n\"Five!\" Rachel corrected her sister with a grin.\n\nLucy's eyes were threatening to leave their sockets as she stared at Megan's sisters. Her jaw dropped but nothing came out.\n\nMegan caught on to Lucy's misinterpretation first. \"They wish!\" she laughed and her sisters caught on and laughed as well though the two looked pensive.\n\n\"They meant Trish and Rochelle.\" Megan answered. \"They're also neighbors and good friends of Ben who have been in his bed.\"\n\n\"Ben has only expressed his love to four of us and Trish is only just coming around to admitting she feels the same way about him.\" Catherine had an impish look on her face as she looked at her daughters. \"The actual count of women Ben has shared his bed with is nine.\"\n\n\"Nine!\" her daughters and Lucy all yelped at once.\n\n\"Oh! Ten if you count his wife who walked out on him years ago.\" Catherine said after thinking about it.\n\nSophia leaned forward eagerly. \"Mom! You've been keeping secrets from us! Dish! Who else has been with Ben? We only know about you three, Trish and Rochelle.\"\n\n\"You're giving Lucy the wrong impression of Ben.\" she chastised her eldest then she turned to Lucy who was wide eyed. \"Ben is a physically affectionate man. It's completely unconscious with him. He's also a deeply compassionate man. When our neighbor Beth Wilson was going through severe depression he spent an evening with her making her feel loved and beautiful. He and Hannah have group therapy sessions with her and you know how good Ben's hugs feel. Beth's depression turned around and she'd doing really well these days. She's back at work and back to her usual bubbly happy self. Ben played a large role in her recovery.\"\n\n\"Rochelle was lonely and Ben spent an evening with her. She's smiling more these days too though she isn't sure if she can shake her issues with jealousy to be with Ben on a more regular basis. Ben cares for her. He was also with Trish's cousin Shelly but I understand that was Tina's doing.\" Catherine suddenly frowned and bit her lip. \"Maybe I should stop there.\" she said looking uneasy.\n\n\"What? You can't stop there! There are two more! Who are they?\" Rachel gasped.\n\nCatherine looked at her daughters and saw identical looks of frustration and anticipation. She sighed. \"The other two are special cases again. He only took them to bed to discipline them. Oh, that came out wrong.\" she winced.\n\nLucy licked her lips unconsciously. \"Discipline?\"\n\n\"They were exhibiting some very bad behavior jeopardizing their mother's livelihood and their future so Gabriella suggested he use their desire for him as a reward for changing their ways. He had to discipline the young ladies and from what I hear it worked very well. They are both on their best behaviour and are hoping for another session of rewards when Ben gets back.\"\n\n\"OH MY GOD! You're talking about the twins! Lisa and Lori McKellan!\" Megan shrieked.\n\nSophia and Rachel erupted in cries of surprise as their mother's expression gave her away.\n\n\"Twins? How old are they?\" Lucy squeaked.\n\nCatherine looked at her. \"How old are you?\"\n\n\"Twenty three.\"\n\n\"Your age then. Ben has trouble with being so much older than some of the people who want to share his life and his bed. Tina is a special case as I've said but even for her she had to promise Ben to keep her heart open for the possibility of finding someone to love who is closer in age. Ben is paying for her to go to University this fall and she may meet someone there. That's the idea at least.\"\n\nShe looked at her daughters who were still processing the idea of Ben having sex with the twins. They were only two years older than Sophia who had a little smile creeping across her lips as did Rachel. Megan just looked incredulous.\n\n\"Don't get any ideas in your heads. Ben watched you all grow up and he had a really hard time disassociating those memories with the twins. He doesn't need any more mental anguish.\" Catherine growled at her two oldest daughters. They frowned with the unfairness of that.\n\n\"Ben watched the McKellan sisters grow up too! How did they get him past that?\" Rachel insisted.\n\n\"That would be Trish's secret.\" Gabriella said as she and Miriam joined the others.\n\nCatherine smiled at Gabriella who absolutely glowed with relaxation. Miriam was looking a little disappointed that she'd missed out on some juicy gossip.\n\nGabriella looked at Lucy's new hair length with a big smile. \"Oh! Your hair is lovely!\"\n\nLucy smiled at the woman and a tear came to her eye. \"I don't know how to thank you all for taking me in.\"\n\n\"While how we met may not have been in the most pleasant circumstances we're glad you're with us now.\" Gabriella smiled. \"I believe you and Megan are going to be going next door when you are done here to look for a dress for tonight.\" She looked at Megan. \"Something pretty for underneath as well and don't forget to get shoes too!\"\n\n\"We want to go too!\" Sophia said and Rachel nodded.\n\n\"We're not stopping you.\" Catherine smiled.\n\nThey were all looking forward to the evening!\n\nThe group was to meet up in the hotel lobby thirty minutes before their dinner reservation. The plan was to walk to and from the restaurant as it was a beautiful night and the scenery made for an enjoyable walk.\n\nBen and Tina were first to arrive and Tina immediately found a seat to wait in. Even the nap they'd shared hadn't been enough to recharge her after the intensity of their 'activities'. She was wearing her beautiful black cocktail dress and it was all Ben could do to resist sweeping her up in his arms and taking her back up to his room. Tina made it clear though that she needed a day at least to recover from their fun in the bathroom. She smiled in contentment at his steamy gaze.\n\nHe was wearing his classic black suit with a crisp white dress shirt and a grey tie. Tina told him he looked very handsome and that was good enough for him. He thought he looked a bit too severe and with his new facial adornment he was worried the combination might be a little too intimidating. When his back was turned Tina tingled with delight at his new look.\n\nGabriella arrived with Miriam and Daniel next. The woman looked stunning in a green silk dress which did wonderful things with her lush curves. She'd had her nails done as well in a shade of green so dark it almost looked black.\n\nMiriam was wearing a cream and tan cocktail dress and looked very lovely and mature for a sixteen year old. Ben mouthed a 'Wow!' at her and grinned. She returned Ben's smile with a shy smile of her own. Daniel looked very handsome and at ease in his dark grey suit and Ben gave him a serious nod which he returned with a smile.\n\nCatherine stepped off the elevator with her two eldest daughters and heads turned. Each was wearing sleek and short red dresses of different designs and the color popped against their fair skin and white blond hair. Their legs also looked amazing! Seconds later Megan stepped off another elevator, also in a crimson dress showing off her own lovely legs. The McGovern genes were very strong.\n\nBen was all smiles as he took in the lovely women. They were enjoying his appreciative looks. Another woman stepped from the elevator behind Megan and Ben did a double take when he suddenly recognized the ravishing brunette.\n\n\"Lucy?\" he said in shock.\n\nGone was the barely there halter and voluminous peasant skirt. In its place was a tight fitting pink cocktail dress which clung to her slim body like a second skin. The dress was off her shoulders, exposed her arms, and was low in the back so it showed off her tattoos and the color matched the cherry blossom petals. It also showed off a considerable amount of cleavage which Ben struggled to look away from much to her secret delight.\n\nHer auburn hair gleamed in an elegant swept up arrangement on her head. Her feet were in sparkling silver pumps.\n\nBen smiled. \"You look lovely! You all do!\" He turned to Daniel. \"We're going to have our job cut out for us tonight protecting these lovely ladies!\" he grinned. Daniel rolled his eyes and the ladies chuckled.\n\nThey exited the hotel and made their way at a casual stroll to the restaurant. They drew quite a bit of attention on their way. One of those watchers kept them in sight the entire way. The restaurant wasn't too far of a walk and Gabriella had a large section of the rooftop patio reserved. The view was beautiful but Ben found his eyes returning to take in the beauty of the women seated around the table much to their delight.\n\nDaniel had brought along his camera and took pictures of the group. Everyone posed for him and each of the ladies took a turn getting their picture with Ben.\n\nMegan was first and boldly sat on Ben's lap when she looked at Daniel. The boy grinned at Ben's sudden uncomfortable look but waited for him to smile before he took the picture. From that point on all of the ladies wanted the same pose. Tina wiggled a little too much and Ben started to grow quickly. She grinned at him as she slipped off his lap. Sophia was the next in line and her eyes widened when she felt the ridge on his lap across her thighs. She smiled a little too broadly for the picture and Rachel got the next feel. Her grin in the picture was for Megan who missed out this one time. Gabriella and Catherine did their own wiggling as they enjoyed the heat coming from his lap.\n\nThen it was Lucy's turn. She hung back but the other ladies cheered to encourage her to take a turn. She walked up to Ben and looked at him timidly. He gave her a gentle smile and she slid onto his lap and froze. Her face registered her surprise and she leaned back slightly bracing herself against his shoulder. This put the pressure of his erection directly under her own delicate parts. She turned her face towards Daniel and smiled as a flush crept up onto her cheeks. Just as he took the picture she felt Ben throb and move under her. She bit her lip and her eyes closed slightly. Daniel laughed at the funny face she'd made but Megan made him keep the shot when he went to delete it. He took another one which he thought was better but her face was still rather pink.\n\nLucy slipped from his lap and demurely smiled at Ben. She made her way over to the chair next to Tina and the two began a quiet conversation.\n\nWine arrived but Ben abstained. Tina decided to pass as her stomach was a little unsettled. After a moment's consideration Gabriella allowed her kids to taste the wine. Daniel turned his nose up but Miriam was so thrilled to be included she hid her distaste. Gabriella smiled and let her have a glass of her own but only one glass. Miriam was so happy she glowed.\n\nThe waiters were especially attentive to their table and they soon had their meals which were delicious. Gabriella had Ben try a little of each of the different dishes they had ordered. She explained the origin of the dish and word got back to the kitchen. The chef came up to speak with her. They spoke for a while entirely in French as he spoke no English at all. He was delighted with Gabriella and told her he would send her up a very fine bottle of wine, his favorite, free of charge. With a double cheek kiss he went back to the kitchen.\n\nSure enough, within ten minutes a new, large bottle of wine appeared at the table and everyone who was drinking wine got a chance to try some of the new bottle, including Miriam. She found this one to be much more to her taste.\n\nDinner winded down and Ben paid the bill. On their way out they thanked the chef for the amazing meal and the man was very pleased. Ben was surprised by his double cheek kiss and the ladies all had a giggle at his expense.\n\nThe night air was perfect for walking and they sauntered their way back to the hotel taking in the city lights at night and the Parisian ambiance. Miriam was floating back to the hotel on a wave of wine induced euphoria. Her mother had a gentle grip on her hand so she kept her tethered to the ground.\n\nCatherine's daughters were charged up thinking of the night ahead. They planned to go clubbing but Catherine was tired from too much food and wine and begged off. Megan turned to Ben.\n\n\"Ben, will you come to a dance club with us? Please!\" she begged. Sophia took up the chant and Rachel joined in.\n\nBen looked at Tina who had her arm through his. \"I'm going back to my room to sleep off this food. You go have fun! Take Lucy!\" she insisted and something passed between the two women as Lucy dipped her head to Tina.\n\nHe looked at Lucy and she smiled shyly. He nodded. He turned back to Megan and her sisters who were looking at him beseechingly. \"Sure, why not.\" They cheered. Ben looked at Catherine.\n\n\"I'll feel better knowing you are with them.\" she said to him with a smile. He returned it.\n\nOnce they got to the Hotel Tina took Ben's suit jacket and tie as he wouldn't need them at the club and it was a warm night. She opened a few buttons on his shirt as well. Ben started to blush as she undressed him and stopped her hands at the fourth button. She gave him an impish smile.\n\nThe ladies who were not going clubbing but instead were going to bed took turns getting kisses from Ben. Miriam got a chaste kiss on the lips though he'd been aiming for her cheek. She giggled and rushed over to the elevators. He smiled and shook his head at her mother who returned the smile and rolled her eyes at her daughter's behavior.\n\nThe concierge suggested a dance club and hailed them a cab. The McGovern sisters pushed Ben in the back seat first, then Sophia and Rachel followed. Megan got in the front passenger seat and Rachel pulled Lucy in to sit across their laps. She ended up leaning back against Ben. With Sophia pressed tight against his right side and Lucy on his legs and chest his body began to respond. Lucy noticed and smiled up at him as she bit her lip.\n\nThe taxi took them through the Paris streets to travel along the Seine to a large building. Ben paid the fare then he exited the cab carrying Lucy in his arms. It was the easiest way to get out with the woman on his lap. He set her back on her feet and she adjusted her dress which had shifted during the drive. This did interesting things to her cleavage and Ben had trouble looking elsewhere. Rachel was enjoying the effect this had on Ben.\n\nThe women looped arms with Ben in the center and the five walked side by side towards the club. They saw the line outside was rather long. A man with an earpiece and a tablet was walking down the line selecting people from it to enter the club. He glanced over at them then walked over to meet them. With a quick nervous look at Ben, he gestured for them to follow him to the doors. The large doormen sized up Ben and pulled the doors open for him.\n\nThe sisters grinned at each other and up at Ben then they walked into a wall of sound. Even in the entry hallway they could feel the driving beat of the music pulling at them. Megan dragged the group with her out into the main dancefloor and they immediately gave themselves over to the music. The floor was full so they had to stay close together. This naturally led to a fair amount of body contact.\n\nBen was taller than most of the people around him so he had a good view of the crowd. For just a second he thought he recognized a tall woman with short black hair standing at the edge of the dancefloor watching him but when he looked back she wasn't there. He shrugged and let the beat move his body.\n\nLucy was in heaven. She hadn't been to a club since the early days of her arrival in Amsterdam. Back before she'd discovered how she was going to have to be so careful with her expenses. She swayed with the music and looked up at Ben's happy face. His eyes were closed as he moved to the beat and she took the opportunity to study his features. She thought he was a truly handsome man, maybe to the point of being a little too conventionally attractive but his scar added so much character to his face. His attractiveness drew her eyes but the scar roughly captured and held her attention. It was a raw element of danger that gave her a little thrill to look at it. His eyes opened and they were looking directly into each other's eyes and she felt a shock run through her body. She gasped and looked away shyly.\n\nThe sisters were loving the club and the music was so good. They stayed on the dancefloor for song after song. They must have been dancing for over an hour when Sophia started to look around to find a table but the club was so full. Ben caught her look and leaned in.\n\n\"What's wrong?\" he yelled.\n\n\"I'm trying to find us a table.\" she yelled back. He nodded and began looking himself. He spotted a large booth near the edge of the dancefloor that seemed to only have a few people in it. Maybe they wouldn't mind sharing. He held up his finger to Sophia to let her know he'd be back and made his way over to the booth. When he got there he saw there was a very striking brunette woman sitting in the middle of the far couch with four attractive young men sitting with her. One on each side of her on the couch and one on each of the other two couches which were arranged around a central table. The men all had that uniform look of male models which was a little disconcerting. Ben gauged there would be enough room if at least one of either group was on the dancefloor.\n\nThe woman smiled at Ben and whispered something to the man on her left. He stood and the next man stood as well. They filed out of the booth as the woman indicated to Ben to have a seat next to her. Ben nodded to her then took the seat.\n\nSurprisingly the noise was dampened by the curtains over the booth so they didn't have to yell to be heard.\n\n\"Hello, my name is Ben Shepherd. I sure hope you speak English because it's the only language I know.\" he said with a smile.",
        "She smiled back at him. \"You are in luck then for I am fluent in many languages, English being just one. My name is Margaux De la Cruz.\" Her beautiful accent and her last name strengthened his impression of her Spanish origin.\n\nThey shook hands and Ben noted the absence of wedding rings though she wore a few rings on her other fingers and thumbs. Now that he was beside her Ben could tell that she was probably close to his age. She dressed very well and her jewellery didn't appeared to be costume so she may have been well off. Aside from her gorgeous mahogany hair that fell in waves past her shoulders, she had intense dark brown eyes framed by long lashes, a slim nose, sensual lips and unblemished caramel colored skin. Skin she was displaying a lot of in her silver halter style sheath dress. It clung to her curves and left little to the imagination. Ben just managed not to stare at her generous cleavage though she noted his interest with a slight upturn of the corners of her mouth.\n\n\"Are you visiting Paris?\" she asked.\n\n\"Yes, it's my first vacation... anywhere, ever. So my friends invited me along.\" he said with a smile. \"Would it be alright for us to share this table with you and... these men?\"\n\n\"Certainly!\" she smiled at his awkwardness.\n\nBen stood and caught the eye of Sophia and waved her and the others over. He sat back down. Sophia was the first one to step from the crowd and when she saw who Ben was sitting next to she hesitated for just a second. Then she made her way into the booth and sat nearest to Ben's left. Rachel followed and Megan squeezed onto the couch. Lucy perched herself on the arm of the couch until one of the young men received a look from Margaux and gave up his seat for her.\n\n\"Carlos, get these ladies some drinks. Take Byron with you.\" Margaux commanded. Carlos leapt to his feet and took their orders. Byron was the sullen one who gave up his seat for Lucy. His back was to them at the edge of the dancefloor. When the men left Ben noticed the satisfied smile on Margaux's face. She definitely enjoyed having the young men under her control.\n\n\"Such lovely young women you are with!\" Margaux smiled at Ben using a tone which implied much. He felt the need to clear up that misconception.\n\n\"This is Sophia, Rachel, and Megan. Daughters to Catherine... one of the women I'm with.\" Ben said politely with a direct look. \"This is Lucy, a new friend we met just today.\"\n\nMargaux gave Ben an appraising look. \"Ah, I see. Forgive my misunderstanding. It has been my experience that there are many men who surround themselves with beautiful young women. My ex-husband said it made him feel young. I decided to see for myself if it was true. There are certainly some benefits to it.\"\n\nBen nodded and noted Sophia was listening carefully. Still, he felt compelled to answer. \"I have been with women who are much younger than me but instead of making me feel younger I've always found myself wondering why these beautiful young women are wasting their time with someone so much older. They can do so much better than me.\" he said honestly.\n\nThis made Margaux and Sophia sit back a little and look at Ben. They both thought he was handsome but now they saw his lack of ego. For Sophia it just made her want him more.\n\nMargaux wondered if Ben was making a dig at her. When she saw the young women with him she had assumed she'd met a kindred spirit. Someone enjoying what life had to offer with no strings attached. Now she wasn't sure where he stood.\n\nThe young man sitting to Margaux's right snorted at Ben's words as he agreed that the lovely ladies Ben arrived with deserved someone younger, like him. He immediately cursed at himself as he had to be careful not to show interest in any other women while he was with Margaux. He wasn't very quick witted however so he just tried to cover up his snort with a bad fake sneeze.\n\nMargaux turned to look at him. \"Anthony, you should go freshen up.\" she said and he immediately took her hint to be elsewhere for a bit. He got up and slipped past the others until he entered the busy dancefloor.\n\nShe turned back to Ben curious that he'd said he was with more than one woman and implied they weren't young playthings like she kept. She didn't understand this. Maybe they stayed with him for his money?\n\n\"What do you do, Ben?\" she asked.\n\n\"I'm a semi-retired mechanical engineer. You?\" he returned the question.\n\n\"I'm a senior VP for an investment house here in Paris. I also spend time at our head office in Barcelona where I'm originally from. I keep an apartment in both cities and have offices in both as well.\" she said watching his face.\n\n\"I work out of an office in my basement.\" he said with a grin.\n\nSophia heard this and smiled as well. She knew Ben did very well for working out of his house.\n\nCarlos returned with their drinks and Margaux insisted on paying for them. Everyone sipped from their drinks and Sophia indicated that she'd like to dance again, her look hinting she'd like Ben to join her.\n\n\"I'd just like to speak with Ben for a short time longer. I'm sure these young men would love to join you on the dancefloor though.\" She looked at her men and they all stood up with smiles. Anthony returned and gestured for Lucy to join him. She cast a look back at Ben and he found himself nodding to her unspoken question. He caught himself as she left the booth. Why had he done that?\n\n\"You have excellent control over that one and you say you only met her today? Remarkable!\" Margaux complimented him.\n\n\"I don't control her or any of them for that matter.\" he said uncomfortably.\n\n\"I distinctly saw her look to you for permission and she only moved when you gave it to her.\" Margaux explained.\n\nBen scowled. His scar surfaced distinctly. \"That was unconscious on my part.\"\n\n\"So you've dealt with a submissive before?\" the woman asked.\n\nBen's head whipped to look at her. \"Lucy's a submissive?\"\n\nMargaux smiled in wonder. \"Marvelous! You aren't even aware of acting as her Dom!\"\n\nBen stood and looked out over the dancefloor but he couldn't see his friends. He sat back down and looked at Margaux's curious gaze. \"How did you recognize it?\"\n\n\"It's her body language. I see it a fair amount with the parties I attend. My Byron is a Sub. You needn't worry about the ladies being out there with them. They know the cost of being anything less than perfect gentlemen.\" She showed Ben a feral grin.\n\n\"So you 'keep' these young men as playthings?\" Ben asked frankly.\n\n\"Yes. My previous experience with men my own age hasn't proven to be satisfactory. I suppose I'm too controlling. I'm very dominant so I frighten most men away. These young men are easier to control and give me the satisfaction I need.\"\n\n\"But what about love?\" Ben asked, curious.\n\n\"Love? Can you seriously tell me these women 'love you' when they know you aren't theirs exclusively?\" she scoffed.\n\nBen felt a little uncomfortable with her attitude and worried that he might be stepping into dangerous waters. Still, he felt compelled to answer. \"Yes, I can. They don't need exclusivity. They not only say it but they've demonstrated this to me on multiple occasions. There's no jealousy, hurt feelings, or drama. We're all completely honest with each other. They have opened their hearts to me because they know I've opened mine to them and I would never hurt them.\"\n\nMargaux sat back and stared at Ben. She was having trouble accepting his words.\n\nMegan returned to the table to set down her drink as she'd accidentally carried it out onto the floor. Margaux leaned forward to speak with her and caught her eye.\n\n\"Does your mother love this man?\" she asked.\n\nMegan didn't even blink. \"Yes, deeply.\"\n\n\"How many others claim that?\" she pushed.\n\nMegan looked curiously at Ben seeing how agitated Margaux had become. She looked back at the woman. \"Three. Gabriella, Tina, and Trish.\" She looked back at Ben with a wicked smile. \"Mom told us about the twins!\" As Ben groaned she giggled and slipped back onto the dancefloor wiggling her hips.\n\nMargaux looked at Ben in confusion. How did he get four women to love him? Without a guarantee of exclusivity that was impossible!\n\nBen's heart sank when he saw she was upset. \"Look I'm sorry if I said something to upset you. I didn't mean to pry or judge you in any way. I was just curious. Everyone has the right to find happiness in their own way. If what you have works for you then that's wonderful. For me, I'm a mess. I can't do casual affairs. I get emotionally involved too easily and end up getting hurt or worse, hurting the women. With Catherine, Gabriella, Tina, and Trish I can open my heart to all of them without fear of hurting any of them. They know I love them. They aren't afraid I'll hurt them so they aren't jealous of the others. It was Gabriella who showed me how it could work. And it did and still does.\"\n\nMargaux looked at Ben and wished he'd never come to her table. Her conviction that what she had was enough for her was shattered. She remembered what it felt like to be in love but for her, love always carried an element of jealousy. These women had learned to love unconditionally and more they had someone safe to do that with. Someone that protected their love and loved them unconditionally back. That made her envious. Another negative emotion.\n\nSuddenly Lucy burst from the crowd and rushed to Ben who stood up to meet her. She stepped behind him putting Ben between her and the crowd. He spun to look at her and saw she was trembling with her left arm across her bosom clinging to her dress.\n\n\"What's wrong? What happened?\" Ben gasped but the young woman wouldn't look up at his face.\n\n\"Look at me.\" Ben said and she lifted her eyes to his.\n\n\"I'm sorry I ripped the dress you bought for me.\" she mumbled, her bottom lip trembling. He suddenly noticed it was split.\n\n\"How did this happen-\"\n\n\"THE BITCH IS LYING!\"\n\nBen went still as he heard the growl behind him. He turned slowly and saw Anthony standing at the edge of the table looking belligerent.\n\n\"What did you do Anthony?\" Margaux asked with a cold voice. Ben glared at the man who just became more aggressive as his nerves reacted to Ben's silent intimidation.\n\n\"Nothing. We were dancing and the little cock tease was rubbing against me getting me all fired up. I know the rules Ms. De la Cruz so I pushed her back. That's all.\" he explained.\n\nBen turned back to Lucy and leaned down to whisper to her. \"Tell me what he did to you.\"\n\nLucy looked up at him and saw his eyes were fixed on hers. \"The dancefloor is crowded so we did bump against each other. Then he- he grabbed my breast... and he squeezed it so hard! It hurt so much and he wouldn't let go. I tried to get away and the dress tore. I called him an asshole... and he hit me.\" Tears were dripping down her face. He reached up and brushed them away with his thumb. Ben pulled a handkerchief from his pocket and handed it to Lucy.\n\n\"May I see the damage to the dress?\" he asked calmly.\n\nShe gingerly pulled her hand back and the side seam under her right arm had been torn four inches down. Unfortunately this eliminated the support she had for keeping her right breast in her dress. The fabric pulled away and Ben saw the lovely half cup bra hidden under the dress. He also saw the bruises and scratches Anthony's fingernails had left on her breast. Ben put Lucy's hand back in place to hold the dress closed. She looked up and was startled to see his eyes had that strange distant look in them she'd seen in the Customs area of the airport. He turned back to Anthony.\n\n\"I TOLD you the BITCH LIES!\" the man yelled.\n\n\"The bruises and scratches don't lie though, do they? They say you're an abusive little cowardly shit who gets his fun hurting women. That's what you are, aren't you. A weak little coward.\" Ben's voice was cold and flat. Lucy hadn't heard him sound like that before. She recalled what he'd done to Cecil and began to get nervous.\n\nSophia finally managed to get free from her dance partner who'd been trying to keep her from the table. \"Ben, he hurt Lucy.\" she blurted.\n\n\"Yes, I know but thank you for confirming.\" Ben said and Sophia heard that oddness in his voice. His eyes seemed to be looking through Anthony.\n\n\"Fuck you!\" Anthony bellowed and threw a punch at Ben's face only to find himself flying across the table where all their drink glasses were placed. He smashed through the glassware to fall between the couch and table on top of the shattered glass.\n\n\"Get your hands off me, ass wipe!\" Megan yelled as she reached the edge of the dancefloor and jammed her elbow in a quick strike against the eye of Byron who was trying to hold her back. He went down screaming and clutching his eye. The crowd parted and Rachel walked through breathing hard but smiling as Carlos rolled on the floor behind her holding his groin and crying.\n\n\"These bozos tried to keep us from coming back to the table after that asshole hurt Lucy!\" Rachel yelled angrily.\n\nThe asshole in question lunged to his feet, staggered onto the table and swung a broken glass at Ben. There was a deep thud as Ben's fist struck his solar plexus and Anthony was flung back to land on the couch where he lay trying to breathe.\n\nLucy cried out when she saw the red on Ben's shirt sleeve. Anthony's wild swing had cut the back of Ben's left forearm. It wasn't deep but it was bleeding. Megan grabbed some napkins from the table and held them down on Ben's arm. At her touch Ben's eyes started blinking and he looked down at the carnage.\n\n\"You OK big man?\" Megan asked.\n\n\"Uh, sure. Are we done with dancing?\" Ben asked. He looked over to Margaux's men standing at the edge of the crowd tending to their injuries. They looked back with fear in their eyes.\n\nRachel pulled them out of the booth. \"Yeah, we'd better book before the cops arrive.\"\n\nBen looked back at Margaux. \"I'm sorry we broke your toys but I think they were bad anyway. I know YOU can do MUCH better.\" The girls encircled Ben and pushed him across the club and out the door before the bouncers arrived and just before a very agitated police detective made it to the scene. When they got there Margaux was already gone and three young men were beating up a fourth for 'ruining everything'.\n\nBen reached into his pocket and pulled out a paperclip. He bent it into a new shape and gestured Lucy to come over. She stood next to him and gasped as his fingers slipped inside the top of her dress to press gently against the side of her breast. She looked up at his face then held still as he forced the paperclip through the fabric carefully. Then he pushed the other end through the fabric on the other side of the rip. When he was finished Lucy no longer had to hold the dress closed. He looked her in the eyes. \"We'll take this to the dress shop to get them to fix it. Not to worry.\" He leaned forward and kissed her forehead. She blinked in surprise and looked at Megan who gave her a smile but there was worry in her expression too.\n\nThey grabbed a taxi at the taxi stand and rode back to the hotel in silence, each deep in thought. Sophia and Megan were thinking about speaking with their mother and Gabriella about Ben's little phase out during the fight. They both independently sent texts. Rachel was reliving watching Ben put Anthony down with one punch and that gave her tingles in happy places.\n\nLucy was back on Ben's lap and chest and was just enjoying the feel of him. She had major tingles happening herself and wanted desperately to touch herself. Or better, for Ben to touch her.\n\nBen was trying to put together the events of the night but there were gaps and that was worrying.\n\nHe paid and carried Lucy out again. She clung to his chest and pressed her face into his neck. He felt her body trembling so he carried her all the way to the elevators. He set her on her feet when they got in. Sophia moved to stand in front of Ben.\n\n\"Could I get a kiss goodnight here before we get to our floor?\" she asked.\n\nHis eyebrows rose but he nodded. She leaned in and kissed him on the mouth. After the initial surprise he kissed her back. Her mouth was so soft and she smelled so good! She pulled back and Rachel stepped forward and planted her wonderful lips on his before he recuperated from Sophia's kiss. There was no tongue involved but it was a sweet kiss none-the-less. His head was spinning. Megan was wide eyed looking at her sisters. Then she stepped forward and kissed his cheek which surprised her sisters. The boldest of them was afraid of a kiss?\n\nBen moved awkwardly when they stepped from the elevator. Gabriella, Catherine, and Tina were all in the hallway waiting. They were wearing their dressing gowns and pulled the arrivals to Ben's room. Everyone took a seat and Tina took Lucy aside to speak with her briefly.\n\nFirst things first, Gabriella took Ben into his bathroom and they took off his shirt so she could wash and bandage the cut on his arm. She had him put on his dressing gown over his pants as his muscular chest was too much of a distraction. She led him back out to the living room and they took seats with everyone else.\n\n\"Ben, Sophia and Megan both noticed you phased out again tonight during the fight. Did you experience memory loss?\" Gabriella got straight to the point.\n\nBen nodded.\n\n\"We are going to create a record of these lapses so you can play it back for your psychiatrist when you get home. You should describe in as much detail as you can the things you remember. Witnesses will give their statements too. Can we do this now while it's fresh in your mind?\"\n\n\"OK.\" he replied.\n\nTina put her phone down and started the audio recorder application. Gabriella gave the time and date and Ben described their evening. Then Sophia said her part, Megan, and finally Lucy. When they were done Tina saved the recording. Everyone took a deep breath.\n\n\"Time for bed. We have a busy day tomorrow. Listen to Tina.\" Gabriella said cryptically and smiled. She gave Ben a soft kiss and left the room. Catherine kissed Ben and looked on with surprise when Sophia leaned in and got another kiss from Ben. She pulled her eldest along with her and began questioning her on their way out. She looked back in time to see Rachel take a kiss from Ben. The middle child scurried after her mother and pushed the shocked woman out of the room.\n\nTina stood before Ben. \"I would stay with you tonight but I am not feeling too well. We don't want you to be alone so I have asked Lucy to stay with you. Did you know she is a submissive like me? She also has had many bad experiences. She feels safe with you. I have spoken with Gabriella and Catherine so they understand and they agree. You need someone with you and tonight it will be Lucy. OK?\" she explained and looked at him for his agreement. He was wide eyed but looked over at Lucy. Megan was standing next to her with a stunned expression on her face.\n\n\"Megan. Come here.\" Ben said and the young woman jumped. She moved to his side. He curled his finger and she leaned in. He turned her head and kissed her on the cheek. \"Good night.\" he said with a smile. She grinned. Tina kissed him sweetly and left with Megan.\n\nThen it was just Ben and Lucy.\n\nHe took a deep breath. Once more he was about to step outside of his comfort zone. He'd learned how to deal with a Sub with Tina but he knew everyone was different and he couldn't expect Lucy to respond in the same ways Tina did. He was starting from scratch again.\n\n\"Come here Lucy.\" Ben said.\n\nLucy moved to stand in front of him with her hands clenched in front of her. Her knuckles were white.\n\n\"What are you afraid of?\" he asked gently.\n\n\"I've had some bad boyfriends. They hurt me.\" she said trembling.\n\n\"You've spoken with Tina. She's told you I'm not like that, right?\" he asked. She nodded.\n\n\"She also told me how you initially pushed her away because you were worried about the age difference.\"",
        "Ben nodded.\n\n\"I haven't worked out how I'm going to make a life for myself. My inheritance is almost gone. I pissed that away and the time I should have been using to develop some skills to build a life on. I can't go home. There is no home to go back to. I have nothing and I have nothing to offer. I feel like a burden for you and your friends. You came here to vacation and got saddled with me.\" she said in a whisper and tears started to fall down her cheeks.\n\nBen pulled her down onto his lap. She was trembling hard by this point.\n\n\"In my entire life I've never felt as safe as I do when I'm in your arms but I don't know how much time I'll have with you. Every time I've opened myself up to love I've been badly hurt because the moment they learn I'm a Sub they become cruel. But I think I'm more terrified to open up to you because I know you're not like that but I have no place in your future.\" She began to cry. She leapt to her feet. \"I shouldn't do this to you. You don't deserve this!\"\n\nShe rushed to the door but no matter how hard she pulled she couldn't get it to open. She looked up through tear filled eyes and saw Ben had his hand on the door over her head. He suddenly scooped her up in his arms and carried her to his bedroom. He set her on her feet next to the bed and she tried to get away. He took her head between his big hands and made her look at him.\n\n\"Listen to me.\" he said sternly. \"I don't abandon friends because they are 'inconvenient'. I knew what your situation was when we brought you into our little 'family'. I don't know what the future holds for any of us. I try to take it one day at a time but know this! I'm willing to ensure you have a future but you'll need to follow a plan I create for you as I did for Tina. You are young, like she is. You both have all this time in front of you. I know how Tina feels about me. She knows how I feel about her. But she had to promise me to keep her heart open to the possibility of love from someone her age. She agreed. That was the only way I was willing to take her back. If we were to spend time together you would have to be willing to make the same promise. I want you to speak with Tina before you say anything to me on that.\"\n\n\"Now, will you promise not to try running away again? It would totally ruin everyone's vacation if we spent the entire time tearing Paris apart looking for you.\" he rumbled.\n\nShe trembled in his hands and he pulled her into a tight hug. She whimpered as she cuddled in.\n\n\"I would like to go to sleep now and I would love it if you would share my bed. Will you do this?\" he asked.\n\nShe nodded.\n\nBen unzipped her dress and held it as it slipped off her body. He let her step out of it then he folded it over the back of a chair. He removed the paperclip. He turned back to her and took in her sexy lingerie. He unpinned her hair and allowed it to pour down over her shoulders and back. \"You look absolutely lovely!\" he said with a smouldering smile.\n\nShe blushed and squirmed under his gaze.\n\nBen undid his robe, pulled it off and draped it over the same chair. Lucy gasped when she saw his scars.\n\n\"Oh my god! What happened?\" Lucy reached out to touch them.\n\nBen looked down and saw her hands hover over the scars of the stab wounds like she was afraid to touch them, like they might open if she did.\n\n\"They're from a bad man with a big knife and a lot of rage. I stopped him from killing his wife in front of his kids. I think Trish may have killed him or at least helped. To protect Tina and his wife and kids.\"\n\nLucy seemed to be counting them. Then she saw the three bullet scars. \"What- what are these?\" she whispered.\n\n\"Bullet hole scars.\" Ben said quietly.\n\nShe looked up with shock in her eyes.\n\n\"They're from a bad man with a gun and a lot of fear. I stopped him from abducting Miriam when she was very young. Then I killed him. To protect Gabriella and Miriam.\"\n\nLucy looked at the bandage on his arm. \"This scar is from protecting me.\"\n\n\"Badges of honor. Every one.\" Ben said firmly.\n\nShe was biting her lip like she was going to cry again. He reached out and touched her lower lip and gently pulled it from her teeth. She sucked in her breath at the intimacy of his touch. He smiled and touched the small ring piercing her lower lip. She looked at him nervously, fearing his rejection.\n\n\"I've never kissed someone with a lip ring.\" he said with a smile. \"Or a tongue piercing. Or an eyebrow ring for that matter.\"\n\n\"Would- would you like to?\" she asked in a voice that was barely a whisper. She was feeling faint as her heart pounded in her chest.\n\n\"Very much.\" he said as he dipped his face down to hers. His first kiss was light, a test to see how their mouths fit together. The cool metal in her lip was a new sensation for Ben but he didn't think it was particularly bad, just different. He loved the way Lucy caught her breath in a sudden gasp. Before she could recover he kissed her a little harder and sucked her lip between his. He ran his tongue over her plump lower lip and caressed her ring.\n\nLucy moaned and whimpered as he gently tugged at the ring with his teeth. He released the ring then slid his tongue into her mouth and slipped it over hers. When he encountered her little barbell piercing he played the tip of his tongue over it. He felt her hands land gently on his chest and pull back. He took her hands in his and held them firmly against his chest so she could feel they were healed and it wouldn't hurt him. She moaned again as he sucked her tongue while she ran her fingers over the muscles of his chest and his scars.\n\nHe pulled back from her lips and her hands went to his belt. She undid it and the button and zipper on his pants. She looked up at him for permission to push his pants down and he nodded. She slid her hands down over his hips and the pants dropped. His boxers went with them and Lucy gasped again.\n\n\"Oh god! You're big!\" she said.\n\nHe gave her a questioning look. \"Is that bad?\"\n\nShe appeared to be about to hyperventilate so he hugged her to his chest and made shushing sounds.\n\n\"Lucy, I want you to know that I won't do anything you are uncomfortable with. If there is something you don't like to do we won't do it. My pleasure depends on my knowing you are happy. If you don't like something please tell me.\"\n\nAfter a moment she mumbled something against his chest but it was too quiet and muffled to hear. He pulled back a little to hear her better. \"What was that?\"\n\nShe pressed her face harder against his chest and trembled.\n\n\"Lucy, please. You don't have to be scared to speak your mind. Please tell me.\"\n\nIt took a little more time before she finally peered up at him from his chest. \"My ass.\" she whispered.\n\n\"Your ass? Oh, you don't like... anal?\"\n\nShe shuddered and clung to him tighter expecting him to reject her.\n\n\"That's ok Lucy. We won't do that. I won't touch you there. Can I squeeze your butt? It's a really pretty butt and I think it needs caresses and squeezes.\" he said with a smile and she giggled against his chest. He could tell her giggles were just her tension releasing. \"So that's a yes to bum cheek squeezing?\" More giggles and a definite nod. \"Good! How about tonight we just sleep and we leave the rest for later. There's no need to rush. Like I said, we have time.\"\n\nHe walked into the bathroom and went to brush his teeth. Lucy realized she'd left her toiletries in her backpack. Ben noticed and opened a drawer. He pulled out a new toothbrush the hotel supplied and handed it to Lucy. They brushed their teeth together then they climbed into the large bed and shut off the lights. Lucy took off her bra and cuddled up against Ben. She felt his body relax. She felt good that she could do that for him. Tina had let her know that he needed this now. She felt his lips on her forehead and she sighed contentedly, her own body fully relaxing for the first time in years.\n\nDetective Babineaux saw the last light on the top floor of the building across the street go out and cursed under her breath again. First she'd been careless and was almost spotted at the club. Then the fight had broken out and she might have been able to arrest Kirion for causing it but she hadn't been able to get through the crowd fast enough and he got away. The man he'd beaten was so badly bruised from his other assailants there was no point in using him as evidence of Kirion's violence.\n\nShe wanted to stay as he might sneak out but she was too exhausted to keep the surveillance going all night. She'd make a mistake that might prove fatal. She'd return early to watch him in the morning.\n\nFirst things first though. She turned on her phone to see if the Chief Inspector had left her a message asking for her badge or to come in. She was surprised to see no voice mails. She checked her email and spotted a message stating there was evidence on the customs video of a man roughly matching the description of Kirion Rapava. She shook her head and shut her email down. Of course there was. She was standing across the street from his hotel.\n\nThe fact that Kirion hadn't contacted her boss proved once more than it was him. Of course his threat to contact the Chief Inspector was empty. He avoided the police at all costs. Couldn't have the authorities looking too closely at him.\n\nChanel ached for sleep. With a final glance up at the top floor she headed for her apartment.\n\nBen woke up feeling refreshed and looked down at the woman drooling on his chest. He grinned. Lucy looked as relaxed as he'd ever seen her. Ben glanced at the clock and saw they needed to start their day as the others would soon come calling. He nuzzled Lucy's forehead, leading little kisses across her face and he felt her slowly surfacing.\n\nLucy pulled her face back from Ben's chest and felt the drool sticking to her. Her eyes flew open and she jerked back looking down at the mess she'd made. Her eyes shot up to Ben in worry but saw he was grinning at her.\n\n\"I'm going to make you wear a drool bib when you sleep with me,\" he teased and her face flushed red with embarrassment.\n\n\"I'm so sorry,\" she began to babble.\n\n\"I'm teasing. You're not the first to christen my chest with saliva.\" he grinned. \"We need to get cleaned up as we'll likely have guests soon.\"\n\nHer eyes shot to the living room then she pushed back the sheets and sat up. She stretched her arms above her head and yawned.\n\nBen was getting his first clear look at her tits and he was definitely impressed. They were larger than he expected for a girl with such a slim build. Small pink nipples with little gold rings were centered on full orbs of soft flesh. She wasn't quite as large as Gabriella but she had a smaller frame so they just looked larger. She saw Ben's admiring look and her face went red again.\n\n\"You have beautiful breasts!\" Ben said warmly.\n\n\"Thank you!\" she whispered.\n\n\"I'm going to have a shower.\" He caught himself before he asked her if she'd like to join him as he remembered she was a Sub. It was time to start acting as her Dom. \"You will join me. I'll wash you and you'll wash me.\" He saw he'd gotten it right when her nipples began to stiffen and a small smile showed at the corners of her lips. She dipped her eyes demurely and nodded. He got out of bed and pulled her to her feet. He kissed her, quickly and she gasped as his naked body pressed against her. He looked down.\n\n\"Remove those.\" he said pointing to her pink lace panties.\n\nShe blushed again and pushed her panties down. They dropped to her feet and she stepped out of them. Lucy kept her hands in front of her untrimmed pubic hair. This was something that she'd let slide during her time with the bad boy friends. She was embarrassed by the wild growth considering Ben was well groomed in comparison.\n\n\"We'll spend a little time on that this morning as the plan is to go shopping today. Go use the toilet and let me know when you are done.\" Ben said in a commanding tone and Lucy spun in place and rushed into the washroom. Ben waited and soon there was the sound of a flush.\n\n\"I'm done.\"\n\nBen walked in and stepped into the shower. He held out his hand and she joined him in the large stall. He started the water and got it nice and hot but not scalding. Once the jets started he stepped in and wet his body and hair. He pulled Lucy against him and he ran his hands through her long hair. Her tits felt great squeezed against his chest. He began to respond and Lucy gasped as it began to press up against her. Ben grabbed the soap and washed Lucy's body with a firm but gentle touch. He watched her expression change from timid to completely relaxed.\n\nHe washed down her body until he needed to kneel to move down her legs. He washed her pubic area but made sure he didn't get any soap in her. On her, yes, and she was squirming with the tingles he was sending through her body.\n\nHe got back to his feet and poured shampoo in his hands and ran it through her hair. He massaged her scalp as he rubbed the shampoo through every strand of her luxurious locks. He also shampooed her pubic hair though that was more just an excuse to drag his fingers through the patch of dark hair between her legs. He repeated the process with the conditioner.\n\nHe didn't really touch her in a sexual way but his handling of her body had her completely charged up and dripping wet. Lucy was panting with need.\n\n\"Please! I need you inside me! Please!\" she whimpered.\n\n\"I'm not sure if you're ready for me.\" he said.\n\nShe looked him in the eye and begged. He leaned down and kissed her hard. His tongue slid into her mouth to tangle with hers. He cupped her heavy breasts and gently tugged on the nipple rings until she was moaning constantly. He shut the shower's side jets off as he needed the lubricant he was adding to his cock to remain in place.\n\nHe peeled open a packet of lube and rubbed it all over his stiff cock. He gasped when her small hand took a grip on him and stroked him a few times, smearing the lube over its head. Ben lifted her in his arms and positioned himself against her dripping pussy.\n\n\"We're going to take this slow.\" he said firmly as he lowered her onto his cock. He was surprised how easily he was slipping into her depths. She was really wet and not as tight as Tina. When he was halfway in the tightness suddenly began.\n\n\"Oh! Ohhhhhh! OH MY GOD! SO BIG!\" Lucy groaned as Ben slowed her descent. He lifted her back up and she kissed him feverishly. He reversed direction again and went just a little deeper.\n\n\"FFFFFUUUUUUUCCCKKKKK!\" Lucy pulled back from Ben's mouth to groan as the thick head of his cock spread her walls open as it forced its way deeper into her body.\n\nBen lifted her again then sunk more of his cock into her tight channel. She was shaking from the intensity of it and hooked her heels behind his ass to pull him deeper. \"Oh Ben! Ben! Ben! Ben! Ben!\" she chanted as he filled her completely.\n\nOnce he reached bottom he moved one hand up to the hair on the back of her head and he took a firm grip. Her eyes flew open and she looked into his. She was looking for cruelty or sadistic intent. All she found was his hunger for her and she trembled with desire. He dipped his head and caressed her mouth with his. She tried to press her lips harder against his mouth but his grip let him set the pace. She whimpered with need. He sucked her lower lip between his lips and stroked it with his tongue. He moved to her upper lip and nibbled his way from one side to the other. She was almost squealing with desperation for him to kiss her deeper. He was waiting for her to relax her muscles around his cock, a signal that she'd accepted his girth. He captured her tongue and got a grip on the stud. He sucked on her tongue and felt himself slip just a little deeper. She was ready. He released her tongue then lifted her almost all the way off his cock. He slid himself all the way to the bottom in one stroke. Her clit slapped against his pelvis.\n\n\"FFFUUUUUUUU-\" she gasped.\n\nHe did it again. And again, getting faster each time. He was lifting and dropping her, their bodies slapping together. Each time her clit hit Ben she squeaked and her pleasure built. It was already making her head swim. She felt completely under his control and he was making her feel so damn good.\n\nBen changed the stroke to a short, deep but rapid pounding and Lucy's eyes rolled back as her jaw dropped in a silent scream as this brought her to her peak. She shook through her release.\n\nHe slammed it deep once more and pinned Lucy against the wall as he fired his cum up into her body in jet after jet.\n\n\"Ohhhhhhhh Ben! I can feel that! Sooooo deep!\" she mumbled as her head rested forward against his chest. She squeezed him once more with her heels on his ass but he was as deep as he was going to get.\n\n\"I- I'm not on the pill but it isn't my time so we're safe.\" She huffed once. \"Bad time to say that I suppose.\"\n\nBen slowly pulled his shrinking cock from the young woman. He tried to let her innocent words roll off but he must have tensed up as she noticed.\n\n\"What's wrong?\" she asked looking at his face in worry.\n\n\"Nothing. It's nothing.\" He set her gently on her feet and held her steady until her shaky legs could hold her up on their own. \"You don't have to worry about me getting you pregnant.\" He pointed to the lowest bullet scar. \"I had a rather unconventional vasectomy.\" He gave her a grin but it failed to convince. He turned away before he could see the pity in her eyes so he missed the compassion.\n\nBen washed his hair and Lucy washed his body with the soap as he'd said she would. She helped him rinse off then they got out to dry off.\n\n\"I said we'd take care of your grooming and now we will. Do you have any preference as to how much hair we leave?\" Ben asked.\n\nLucy looked up at him and shook her head in a small gesture. He smiled. She was leaving it up to him. She gave him a small smile back.\n\nBen asked Lucy to sit on the toilet with her legs as wide as she could comfortably keep them. He brought out his hair shears from his kit. He carefully trimmed off the excess pubic hair. He brought out his shaving cream and a fresh razor.\n\n\"Do you trust me?\" he asked.\n\nShe looked into his eyes and nodded with a smile.\n\nHe lathered her up and gently and carefully shaved her clean. She was biting her lip and trembling when he finished. Her labia were swollen with lust from his touches and he was hard as iron and she had a clear view of it. He cleaned her off and rubbed some bag balm over her skin to ensure it didn't become irritated.\n\n\"Oh God! Your hands on my skin feel so good.\"\n\nHe lifted her up onto the counter with her pussy right at the edge. He pushed her legs open and took a close look to ensure he'd done a good job of shaving her. Then he looked her in the eye and ran his tongue across her pussy lips. She cried out with bliss and grabbed his head, keeping it over her pussy. He lapped at her a few more times and dipped his tongue inside her deeply a few times for good measure. Lucy was tossing her head back and forth crying out his name so he sucked her clit between his lips and ran his tongue over it roughly making her jolt with sensation.\n\nHe stood up and lifted her in his arms. He carried her to the bed and laid her on it. He grabbed a lube packet and spread it on his hot skin then climbed onto the bed. He lifted her legs towards her chest and ran the length of his cock across her puffy lips spreading the lube across her opening. Then he pulled back and pushed the fat head inside.\n\nThe way in was not as tight as the previous time and Ben soon found his cock bottoming out. Lucy's freshly shaved skin felt amazing against his and she was way more sensitive to his deep thrusts now.\n\n\"Oh god! Faster! Harder! Oh please!\" she moaned.\n\nBen gave in to her demands and began to drive his cock into her at a brutal pace. He kept this up until he felt Lucy's body tense up. She threw her head back against the pillows and began to make unintelligible sounds as she crested again and again. Ben's orgasm struck fast and he exploded into her once more. He closed his eyes and rode out his pleasure as he felt Lucy rocking through her own."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "harem",
        "mature",
        "submission",
        "romance",
        "oral",
        "cunnilingus"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-shepherd-in-france-ch-01"
}