{
    "title": "\u00c6gir\u2019s Bride Ch. 11",
    "pages": [
        "Mikael observed them...his daughter and his wife. Kirsty knelt at the side of the bed with a Dr. Seuss book in hand. Her soft, British accent flowed over each rhyme as she alternated between reading and pointing out things in the pictures that accompanied the text. It was the fourth, or perhaps fifth book of the night. He had lost count.\n\nIt was not bad enough that he had two brothers to be jealous of, now he must contend with his own child. The way that his wife smiled, laughed and cared for his daughter wrapped about his heart just as he imagined that tight cunt would around his cock. While he, as much as Bjorn, hated to be leaving their wife just now, never since the first moment he had held his daughter had he felt more comfortable leaving her on one of these fishing trips. That told him all he needed to know.\n\n'So what the fuck you going to do about it?' asked that irritating voice in his head. \n\nThe damned thing had a point. If he had tried to use domination and sex to bind her closer to him, them, his child that first night without letting her behind his walls, what was he going to do now? And what of their truce? On one level, it was working better than he had ever hoped it might, especially for his little girl. \n\nOnce he would have thought that was enough. It was after all the argument that Bjorn had used to convince him of his crazy scheme. And it honestly was just about perfect, he smiled as Kirsty closed the book. She signed 'sleep' once more as she stood up and walked towards him with a smile. Monika frowned and fidgeted a bit in her bed, but she did not get up, which was always a good sign. \n\nDamn, what was he going to do? Now that using his daughter as a shield wall to reinforce his defences was almost to an end, a long night alone with her in that bed loomed large. He knew what got his cock's vote. There was no question about what his little head wanted.\n\nBut it was his big one that still stood in the way. Logically, he knew that she was their wife. Theirs. Which meant she was as much his as she was Sven's or even Bjorn's. But that did not translate into the insecurities that still plagued him. If he had not been enough for Greta in a monogamous marriage, what chance did he stand against his 'pretty boy' baby brother, the man, who had chosen her and the one, who obviously already held her heart? \n\nWhile his cock might be satisfied if he gave into its damned demands to sink him deep inside that too sweet cunt, he knew that in the end even that would not be enough. He had already wasted years of his life loving a woman that had never really loved him...and he was not in an all-out competition with both his brothers for Greta's affection. \n\nIt was not even a matter of what he wanted. It was more a matter of what his battered ego could sustain. Could he give into his feelings for this woman knowing that she might never return them the way he wanted? That she already loved another man, his own gods be damned brother, whose diapers he had fucking changed, who had tagged along after him everywhere he went, a man-child that he had spent a lifetime protecting.\n\n\"Do you stay with her until she falls asleep or do you leave her?\" Mikael found it hard to concentrate on her words when her hand was covering his heart and her whole lush body leaning in towards his. Could she feel how fast it was pounding? How it skipped a beat occasionally when he imagined how it would feel without any clothes between them? \n\nHe forced his sex-starved brain back from that futile line of thought and focused upon her question, \"I leave her. I used to stay with her, but I think it probably makes things worse. I installed those a few months ago,\" he said pointing at a couple of small cameras suspended from the ceiling. \"They feed to my laptop.\" He blushed a bit as he admitted to her something that no one else knew, \"I keep it on most nights, just in case...\" he stammered.\n\nShe smiled and reached up to brush a soft kiss across his cheek, \"Then move it to my room before you leave, please.\"\n\nHe shook his head as he tried to clear the cobwebs from his brain that even such a simple touch could elicit. \"No need, I can download the app to your tablet and you can use that. But you don't have to. She is fine most of the time. Sleeps through the night usually. If she does have a nightmare, trust me...you will know it. She wakes up screaming, but I don't know sometimes...\"\n\n\"Sometimes what, Mikael?\" she frowned.\n\nHe looked over at his little girl and noticed that she had turned away from them and was already beginning to settle a bit. He knew he hoovered, that he was over-protective. How many times had his father lectured him about it? But damn it, his daughter had it tough enough, anything, no matter how small or silly it might seem that he could do to make things easier, he would. \n\nBut he never expected such things from others, not even his parents and certainly not a woman, whom they had kidnapped and forced into their fucked up world, their screwed up family and their petty jealousies. \"Don't worry about it, Kirsty. It isn't important.\"\n\n\"No, tell me, please. If it is something that helps, something I can do too, let me try. Please.\" Did she press a bit closer to him or was it only wishful thinking?\n\n\"Sometimes if I notice on the cam that she is not sleeping well, I will get up and sit with her. I don't touch her, just sit on the floor next to her bed, just in case I guess. She usually quiets down in a few minutes. I guess I just like to think that maybe it makes a difference...keeps her nightmares away,\" he stammered as he stared at the floor. \n\n***\n\nKirsty felt something shift inside her. Maybe it had been happening since that first glimpse of him and Monika on board \u00c6gir's Captive. Maybe it was the way he tagged so closely after her in the store or that look of fear when she tried to run into the road. It most definitely had the night they gave her that bath together. It had felt so much like she belonged, like the three of them were the perfect little family. \n\nThinking on it, she wondered how she had not seen it sooner. Maybe it was the fact that this was so very different from the intensity that she shared with Bjorn. But that did not make it any less real. The truth was that she loved Mikael. Perhaps differently than she did Bjorn, but every bit as much. How could she not? Her bad boy could win father of the year. What woman could resist that combination? \n\nThe questions now was...what was she going to do about it? How was she going to seduce this husband too? She stifled a giggle at the thought. Who would have ever imagined frumpy Kirsty\n\nDickens seducing one hot guy, let alone two? Whatever would her friends think it they knew? Of course, Roz might get a real laugh out of it, but she would demand all the raunchy details first. \n\nOne thing was for certain...she was most definitely going to seduce Mikael. She was not letting him leave tomorrow morning without...\n\nShe fought back the lump in her throat that threatened to constrict her airway. It was a feeling she had been battling all day, a fear that would not abate. Whether it was Petrine's story of losing Lars or some intuition, but whatever it was, she was not going to risk it. It was not going to live with the regrets and pain that had rolled off her mother-in-law like a tidal wave of despair. \n\nSo that brought her back to one question: how was she going to seduce this husband too? She did chuckle then. Why was it that she had to do the seducing with the ones she loved and the one that sent her blood boiling had no compunction about taking what he wanted?\n\n\"What is so funny now?\" he asked in a whisper.\n\nShe smiled as she looked across the room where her 'daughter' was settling into bed. Yes, that too felt right. If she were going to commit to these men, to this unusual lifestyle, then she committed to all of it. And that included a very special little bonus that had wiggled her way into her heart from that first moment. What took her breath away was how natural and right it all felt, how fucking natural. \n\nShe frowned. Well, most of it. Sven could still go screw himself. But she was not about to let the man ruin this night for her too. \n\nShe stood on her tip toes and brushed a kiss on his cheek. She smiled at the way his beard tickled her nose, but she would far rather feel it abrading other parts of her anatomy at the moment. \"We don't want to wake her. I'll tell you in bed,\" she whispered into his ear.\n\nShe heard the quick intake of breath, felt his whole body stiffen beneath her finger tips, perhaps she even detected a slight increase in the tempo of his heart through her fingertips. She smiled, so her 'bad boy' was not as unmoved by her as he wanted her to think. That bode well for the seduction she had planned this night. \n\nBut his next words did not, \"You know you don't have to. I mean I know that Bjorn...\"\n\nShe was having none of his prevaricating though, she placed her fingertips over his mouth this time. \"I meant what I said, Mikael. This night it is you I choose. So unless you are suggesting we include your brother in our little games, not another word.\" She leaned fully into him, \"But personally, I would rather have you all to myself this time.\"\n\nShe pressed her body as tightly as she could against his and that smile widened as she felt his erection actually throb. With their little girl's back turned to them and her own body blocking the child's view, she could not resist the urge to tease 'daddy' just a bit more. Her fingers that had gone from heart to mouth now covered the front of his jeans, \"Unless, of course, my bad boy needs the help.\"\n\n\"Kirsty, quit playing games,\" he growled low in the back of his throat. \n\nHer hand slipped into his then, \"Who is playing anything, husband? I am trying my damnedest here to seduce you,\" she beamed up at him and she drew him out the door and closed it behind them.\n\nBut she was the one, whose head was spinning a moment later as she found her body slammed against the wall, his pressed so tightly against her that he blocked everything else from her view. \"I mean it, Kirsty. What the fuck do you think you are doing? We have a truce. A truce that is working for my child. I won't screw that up, just to get inside that sweet, hot and too fucking tight cunt of yours.\"\n\nShe opened her mouth to reply but the words never made it out. Not before his tongue made it in. Wrapping about hers and sending those butterflies skittering into flight, just like her 'bad boy' always did. The kiss went on and on. She took up his challenge, pressing tighter against him as she fought to get her hands between their bodies. She lost that battle and had to console herself with her finger nails digging into the hard muscles of his shoulders.\n\nBy the time he finally broke the kiss, they were both breathless. \"No, Kirsty. I am not fucking this up for her. Not this time. Not you too. I can't...\"\n\nThe pain behind his words touched something deep inside her soul. If she had come to love the father over the past few days, the man reached her then. A man that needed her to see past the words to the hurt behind them. A man that needed her love and healing. A man locked as tightly inside that pain as his daughter was in her little world. She needed to bridge that chasm for him as much as she needed to for their child.\n\nAs he pulled back, went to turn away, she stopped him. She reached out and laced her fingers tightly through his, \"You won't, Mikael. You can't...\" \n\nHer throat tightened so fucking much that her head swam as it tried to draw air into her lungs. She felt tears stinging the back of her eyes. Her heart stopped. Full stop for several long heart beats. This might be the hardest decision she had ever made. Harder even than deciding to stay. As Petrine had said, 'sometimes the ones that were the hardest needed her love the most.' \n\nBut giving that love, well, admitting it was a huge risk. With Mikael anyway. Bjorn had made it so easy. Hell, maybe too easy. But her 'bad boy' was locked so tightly behind his ice walls of pain and heart break. There was a very real chance that if she did this, he would only reject her out of hand. Push her even further away. Was it a risk she was willing to take? \n\nShe chuckled as the words she had just read to Monika came to her mind, 'Do you dare to stay out? Do you dare to go in? How much can you lose? How much can you win?' Who would have thought to turn to Dr. Seuss for marriage advice?\n\nYes, she must dare. She had no other choice as she tugged him back towards her. Her other hand caresses his cheek until he turned back to face her. She looked right into those icy grey eyes and jumped head long into the unknown, \"It won't screw anything up, Mikael. It will only make things better. You have my word on that.\" \n\nHe shook his head, \"That's just it...you don't know that. You can't. Neither of us can. What if I lose control again? What if that darkness inside me ruins everything? No, it really is better this way. Go, run, and call little brother. He can give you what I can't.\"\n\n\"No, no, he can't. His love isn't yours and it is your love I want this night. I need tonight.\" She inhaled deeply and prayed to all the gods in heaven and Asgard for strength and courage. \"I need to know that there is even the slimmest possibility that one day you might love me the way I do you. Not because I am good with her either, but because you want me...want me as a woman...\"\n\nShe was the one that dropped his gaze then. If she thought getting naked with them was hard, it was nothing compared to this. And the fact that the damned silence seemed to stretch for all fucking eternity just then was not fucking helping either. The idea of running, fleeing to her room and locking the door behind her, throwing herself in the middle of that big bed and just crying her eyes out raged through her befuddled mind. \n\nShe pushed against his chest, made to do just that, until a steely hand about her arm stopped her, \"Where the fuck you think you are going, Kirsty? Think you can drop that little mind fuck on me and then go hide? It don't work like that, sweet wife. Get your cute ass in that bedroom. The hall is no place for this gods be damned conversation.\"\n\nShe swallowed hard as she lifted her head to face him. His countenance gave nothing away and that made her want to run even more. But instead she simply nodded and whispered, \"Yes, Sir\" as he led her to the heavy closed door that she felt would seal her doom like a crept. \n\nWhen she heard it close behind them, she drew in a deep breath and tried to prepare herself for whatever was to come. But she knew one thing...his rejection was going to hurt her far more than Raj's had. She cursed herself for being so rash. She should not have said it. She should have waited. Given him more time. Given them more time. Perhaps seduced him first...well, she did not have to worry about that now.\n\nShe trembled as she felt herself losing the battle against those unshed tears. \"I'm sorry, Mikael. I should not have...\" she forced the words past that lump which had grown like a snow ball into an avalanche of insecurities that threatened to wipe out everything in its path. \n\nOne word echoed off the dark walls of that dungeon. It was low, harsh and guttural, \"Strip.\"\n\n***\n\nMikael inhaled, fought back the need to push her, to take her even. He waited. And waited for several long heart beats for the answer that he could not even hear when it came. Only the slight nod of her head and her trembling fingers reaching for the edge of her jumper were the real response. \n\nHe was across the room in a moment. His fingers covered hers as he watched the nervous play of emotions of her face. He helped her to lift it over her head and smiled at the pale pink lace confection beneath it. His fingers ran along the edge of it, outlining her breasts that heaved up and down just a bit faster at his touch. \"Get this off now or I will cut the damned thing off.\"\n\nHer eyes were huge as she looked up at him. Those lips that he wanted to taste again more than he wanted to breathe formed a perfect 'O' at his words. He saw it in her eyes. Rather than frighten her, his threat excited her. \"You want that, don't you? You want to feel my knife tonight? You want me to run it across this fucking soft creamy skin until it leaves a trail of faint pink lines like a fucking map.\"\n\nHer chest heaved even more rapidly at his challenge and once more her head nodded silently, \"Not good enough, sweet heart. Say it. Tell me you want to feel your bad boy's knife against your hot skin. Tell me what you want...all of it.\"\n\nShe dropped her eyes and her cheeks flamed a bright red. For a long moment, he feared that he had pushed her too far. Then she inhaled deeply and placed that tiny hand over his heart once more as she stood on her tiptoes and brushed the softest kiss against his lips. She drew back slowly, just enough to look into his eyes as she whispered.\n\n\"First, Mikael, you are overdressed. You aren't the only one that wants to feel skin. Please,\" the way that her throat moved up and down as she spoke told him as much as her words. \n\n\"Out of the damned skirt, but leave on the bra and panties. Then get to work on the buttons, because they won't undo themselves, Kirsty,\" he said as he pressed her hand tighter over his heart for a moment. \n\nShe nodded her head, blushed even pinker and smiled as she began to push the flowing skirt down her legs. When it pooled at her bare feet, she looked up at him, \"Knickers? Sorry, but you told me that first night I was not allowed them anymore.\"\n\nHe worked hard to suck enough air into his lungs at the sight of his wife's bare cunt glistening in the dim light. \"Good girl for remembering.\"\n\nThen even that tiny bit of oxygen fled as she stepped closer and brought those shaking fingers to his chest once more. Her eyes met his as she whispered, \"Always, Sir,\" as the first button sprang free. She leaned forward and pressed a tender kiss to his skin just above his heart. \n\nHis hands fisted at his side as he fought back the urge to rip the damned thing off himself as she repeated the process with next one...and next. By the time that she reached the waistband of his jeans they were so fucking tight that he knew those shaky fingers would never be able to pull the shirt free so he did it himself and ripped the last button as he tossed the damned thing across the room. \n\nHe practically tore the button on his jean off as well in attempt to get at least a bit relief for his aching cock. Her eyes grew even wider, but it was the way that her sweet tongue caressed along her bottom lip that was almost his undoing. \"Don't do that, Kirsty,\" he groaned.\n\n\"Do what?\" she whispered as she took a step forward. When her hand came up between them this time, it scorched the bare skin as it rested once more right over his heart. If that was not bad enough, those fucking lips that were glistening and still just slightly damp pressed a soft kiss just above her hand. \n\n\"That...look at me like that. Like you could fucking eat me alive. Like you want me buried between those sweet thighs half as much as I want to be there. Damn it, woman, you are driving me insane here. Don't you know how fucking hard I am trying not to lose control here?\" he battled to keep his hands fisted at his side even though it wanted nothing more than to rip open that damned zipper, shove her back onto the bed and bury himself so fucking deep inside of her. \n\n\"What if I said I don't want your control? What if I want my bad boy? What if like you said I need to feel your rope, your knife, all of it? Please Mikael...don't fucking stop this time.\" He saw her eyes glisten in the faint light as she dropped her head, he leaned in to hear words that seemed torn from her throat as violently as he had torn his shirt, \"Please, I couldn't...\" she stammered as her hand moved slowly across his chest. ",
        "\"Please, what, sweetheart?\" He gave up on keeping his hands fisted at his side and instead gripped her arms and drew her tighter against his body. This time he wanted her to feel what she was doing to him, all of it, as he ground his hips slowly against hers.\n\nHer head fell back and her eyes closed as she moaned at the intimate contact. \"Please, Mikael, don't tease me like that. Please I can't take it if you push me away again...reject me.\"\n\nHis heart stopped at her words, \"Oh baby, I have never rejected you. Never. I have always fucking done my best to make sure you got what you wanted. Don't you know that? Couldn't you see that?\"\n\nShe shook her head and opened those intense blue eyes that could never lie, \"No, you never gave me what I want most, Mikael. I want you.\" \n\nHer words hit him like a sledge hammer right in the heart that she had been caressing all fucking night. The blow did not knock just the air from his lungs but they cut his knees out from under him as he shoved her back onto the bed, fell almost on top of her. He cursed himself for the fool that he was, if not that first night on the boat then certainly the first one in this bed with her. Why had he fucking fought her then when her surrender was as plain in those blue depths as it was right now? \n\n\"Jag \u00e4r ledsen. I am sorry, Kirsty,\" he leaned his forehead against hers. He was not even sure what to say or do then. How did you tell your wife that she scared the fuck out of you? Made you want things that you had given up on ever having? That you were so fucking scared to even try, because you knew if she rejected you... How did you fucking say any of that?\n\n***\n\nKirsty saw the battle raging inside of him. It was not the first time that she had felt someone's pain. Hell, she had been doing it most of her life. Especially with them. But never had she felt anything as intense as this. It stole her breath and broke her heart. \n\nShe shook her head and pressed her finger over his lips, \"You don't have to say it, Mikael. You have nothing to be sorry for. I understand...honest, I do.\" She lifted her head and buried it against his throat. She could actually hear the pounding of his heart with her ear resting there as her arms wrapped about him. \n\nShe pressed a soft kiss over his pulse that tapping out that loud, fast beat beneath her lips. That kiss became a trail of them along the vein in his throat as her hands began to map a trail across his shoulders and back drawing him closer, holding him tightly to her. \"Show me. Show me, Mikael. Please...\"\n\nShe felt his hand move between them. His fingers press against her mound and she opened her legs. Spread them wide in welcome for him. She needed him to know that he would always would be...welcome inside her. Free to take what he needed, when he needed it. \"Yes,\" she whimpered as she felt his fingers brush against her clitoris.\n\nBut that whimper became a full-fledged moan when his fingers slipped lower, found her wet cunt and slipped inside. She lifted her hips to draw him deeper as she cried out with her first orgasm. Her fingers clutched tighter to his shoulder. Her nails sank into his bare skin as the pleasure rolled over her and over her in one long wave after another. \n\nBut it was not enough. Not with him. He had done this before. Taken her this far, only to pull away. She was afraid he would again. She buried her face against his throat again as she moaned, \"Please, Mikael, that isn't what I need. Not now...not tonight. Not with you...Please,\" she pleaded with him not to reject her again.\n\n\"Then what do you fucking need, my sweet wife? What do you want from me?\" he challenged as his plunged his fingers deeper and faster inside of her. Her whole body arched off the bed to meet his demanding thrusts. \n\n\"You. I fucking need you. Inside me. Not your god damned fingers...\"\n\n\"Me?\" she could hear the teasing in his voice as he too buried his face in her neck as he mirrored her actions, licking softly at the same vein she had chosen on him. \"You have me right now, sweetheart. What is it you really want then?\"\n\nShe stilled beneath him. Drew her head back from his neck and waited until he did the same. Her eyes met his that now twinkled more heated silver than steely grey with passion. \"Fuck me, Mikael. Quit playing these mind games and fuck me,\" she almost demanded. \n\nFor a moment she feared that he was going to deny her once again as he drew back even further in her embrace. His shoulders almost slipped from her finger tips and all she could do was whimper a soft plea. \n\nHis fingers too slipped from her body and she felt incredibly empty...and more scared than she could ever remember being even on all those lonely nights when her mother had denied her even the comfort of a night line and closed her bedroom door with a solid reprimand, 'good girls don't need night lights.' Did they need their husbands? She was certain that her mother would say 'no' but she did. She needed him, just as much as she needed Bjorn. And if he...\n\nThen she heard a soft rasp, but before she could even place the meaning of that sound, he was back. Filling her, deeper more completely than he ever had. Her head sank deep into the mattress as she planted her feet firmly on the edge of the bed and pushed up with all her might to take him deeper still inside of her. \n\n\"Fuck,\" he cursed as his hands tightened painfully on her hips. \"Don't fucking move. Don't move, Kirsty,\" she watched the almost pained expression on his face.\n\nBut she could not stop herself as she began to slowly move her hips in a circle that one moment forced his cock incredibly fucking deep inside her and the next left only the very head wedged between her wet folds. \"Don't move? Are you sure, Sir?\" she teased.\n\nHis hand came down hard on her outer thigh but that only made her press more tightly against him as she felt her body spiralling out of control once more. She cried out as the powerful release hit her hard, making her see stars until she feared that she might actually float away into them. \n\nBut his body moved in perfect time to the contractions of her body drawing her back as her orgasm went on and on. She was not capable of coherent thought, let alone speech so she let her body and the mindless jumble of moans and groans do the talking for her. \n\nShe felt him drive incredibly deep until those stars exploded into the sun itself as her hands clutched tighter to his shoulders. She felt his whole body tremble in time with hers as he joined her in the beautiful music of their mutual pleasure. It was an intense and moving piece that left her almost breathless as she collapsed into the billowy softness of the bed. \n\nJust when she would have drawn him closer, closed her eyes and drifted into an orgasm induced dream, she felt him begin the song again. Her eyes opened to the rather smug smile as he bent and kissed her softly, \"That was not fair. But don't worry, sweetheart. This night is just getting started. You see, my darling innocent, women aren't the only ones that can be multi-orgasmic.\"\n\nShe sucked in her breath at the devilish look in those silvery depths. \"Yes, Sir,\" she whispered, suddenly very much awake and alert. \"Someone did mention something about his knife, if I remember correctly.\"\n\n***\n\nMikael chuckled as he slapped her hip. \"But we keep it light. Do you understand me? I am not having you drop without me around to catch you and care for you. Understood?\"\n\nShe smiled, \"So what? You're threatening me with vanilla sex or something?\"\n\n\"Be good, woman. Trust me I can find ways of punishing you that do not involve pain,\" he saw the shadow that crossed her face at his threat. \"Let me guess...standing in the corner? My brother's high protocol shit.\"\n\nShe sighed as she nodded her head, \"Naked, of course. That's what makes it so bad actually.\"\n\n\"Why? Why does naked make it so bad, elskling?\"\n\nShe blushed, \"Why do you think? I'm not exactly model material here. I am too tall for a girl, but that is the least of it. I am a ginger, covered in freckles from head to toe. I have thunder thighs, a big butt and let's not even talk about my tummy. And you are so...hot.\"\n\nHe could hear the way her voice cracked over each word. \"I like playing connect the dots with those freckles. If you insist on talking about what you think are negatives, let us not forget the positives, lilla gumman. You have the most amazing eyes, an honest face and a heart big enough to love us all so fucking easily.\" \n\nHe watched as that blush deepened. She dropped her eyes and her fingers once more began to toy at the flesh just over his heart. She really did not see it, he realized. She had no idea how beautiful she truly was. How she had wrapped herself so fucking quickly, so fucking effortlessly around that heart. Around his baby brother's. Around his daughter's...and his parents. Hell, if what he suspected was true, she had even managed to melt his eldest brother's, who he had always thought was as cold as the seas they fished. \n\n\"You really don't see how beautiful you are, do you?\" he asked as he turned her head back to face him. \"Then I am going to tell you,\" he moved slowly deeper inside her and watched how quickly that expression turned from one of self-doubt to pure need and lust, \"and show you.\"\n\n\"Head to toes or work my way up?\" he teased and was rewarded as her cheeks reddened even more. He kissed those blushing cheeks, \"Heads, it is then.\" He ran his fingers through her thick ginger tresses. \"Your hair...I like the ginger as you call it. And how can anything be so fucking soft and yet strong enough no matter how hard I pull?\" He buried his face and inhaled deeply. He frowned as the scent hit him, \"My wash...your hair smells like my body wash?\"\n\nShe nodded and bit that adorable bottom lip. He reminded himself he would have to not forget that one too. He smiled, this could take all fucking night. \"Sorry...it is just...\" she stammered and stopped as those eyes once more looked down.\n\n\"Just what, Kirsty?\" he demanded.\n\n\"Bjorn said he did not order me any of my own because he did not want me smelling all girly. That he preferred when I smelled like him.\" She bit that lips until it turned almost white, \"But I figured...I guess I thought if I were coming to you...I mean if you were sharing my bed tonight...I thought you would rather me smell like you.\"\n\n\"Fuck,\" Mikael spat as his cock throbbed inside her at the stammered words. He could not resist as he began to move harder and deeper inside her. \"Damned straight, I do. And fuck, baby brother and I need to have a long talk while we are gone, because damn if I don't like some of his ideas.\" \n\nHis grip in her hair tightened as he pushed deep inside her, he felt her body begin to tremble, knew he was about to push her over that edge again, but that was what he wanted...almost as much as he wanted to be the one to catch her when she fell. He plunged harder and deeper inside of her, pushing her to another shattering orgasm that stretched on for several minutes. \n\nWhen she finally did begin to drift back to him, he slowly moved and flexed inside of her. Not enough to send her over again, just enough to keep her there on the edge of that precipice. He kissed her cheeks, \"I love the way you blush. Whether it is in embarrassment at all the incredibly naughty things we do and say or how red you get when you come, I love these cheeks when they get pink.\" He moved just the tiniest bit faster inside of her, \"Not that I don't love how red I can make your other cheeks with my hand, or belt, or the tawse.\" \n\nThe way that she sucked in her breathe and her body gripped his cock even tighter told him all that he needed to know about how she felt about those. \"But remember, dear wife, tonight is plain old vanilla sex.\"\n\nShe whimpered and he smiled as he kissed her lips. He meant to keep it light, honest he did. But how could he with his cock buried in her wet cunt and those sweet sounds coming from the back of her throat? The look in her eyes was a mix of excitement and disappointment that made him chuckle as he kissed her eyelids. \n\nHe shook his head, \"Those fucking eyes. They show every damned thought and especially everything you feel. How could I have been so fucking stupid not to see it last time?\" He inhaled and brushed another kiss over them, \"That's wrong...I did see. I saw your surrender that night and it scared me so fucking much that I had to push you away, had to push you harder and further than I should have. Jag \u00e4r ledsen for that too.\"\n\nShe shook her head, \"No need, I understand.\"\n\nHis chest tightened, because once more the truth was plain to see...she really did understand. \"Fuck, woman, you make this hard,\" he teased her with his words and his cock as he increased the tempo.\n\n\"Make what hard?\" She looked up at him as her fingers clutched tighter at his shoulders. \"The only thing I want to make hard right now is you, Mikael. Just you.\"\n\nFuck, how did she know, he asked himself. How could she possibly know the exact words that would excite as no others ever could? \"Damn it, Kirsty, I wanted this to be about you...and when you say shit like that I can't fucking put two damned words together,\" he cursed as he fought for control of his body...and hers.\n\nShe arched upwards off of the bed to meet his downwards thrust. He felt her whole body tense just a split second before her cunt tightened so hard around his cock that he swore he saw stars. He was incredibly glad then that she did not like those damned long nails like Greta had or she would have torn his back to shreds. As it was even her shorter nails were making the sadist wonder if he did not have just a touch of masochism. \n\n\"Then shut the fuck up and show me. Show me instead of telling me, Mikael,\" she pleaded.\n\nHe buried his face in her hair, inhaled his own scent upon her as he increased the tempo, pushing her a bit higher and him a bit deeper into the depths of Helveti, because not even Asgard could be half as fucking sweet as her cunt milking his cock as orgasm after orgasm rolled over her. \n\nHow could be possibly deny such a sweet request? He began to move faster and deeper inside of her then. Pushing them both towards what they needed. His hands on her hips tightened until he feared that she would wear finger shaped bruises on them for days...and that idea excited him as much as the knowledge that his back was going to be mapped with hers. \n\nIn the end, he was damned glad that first orgasm had taken the edge off, because he managed to last far longer than he would have thought humanly possible. Then again maybe it was not humanly possible, a prayer to the goddess of love and fertility passed his lips in thanks, \"My sweet Freya,\" he groaned...and he lost the battle and won the war when she screamed in a release so powerful that he swore they would both die and he did not give a fuck just then.\n\nIt went on and on for several long moments then. Until they both collapsed into the soft welcome of the mattress. He wanted to roll enough to take his weight off of her, but he honestly could not move at that moment. Every single muscles and bone in his body had turned to jelly. It took him several long moments just to find the strength to turn his head and smile at her, \"What the fuck was that?\"\n\nHe loved the smile that lit her beauty from within as her fingers began to trace the pattern of red welts that were still raising across his shoulders. \"You really do need to have a talk with your brother.\" He hated the way that her face darkened just then as she shook her head, \"The good one.\"\n\nHe shook his head at her words and the pain that they spoke. How could she, who had seen through all his walls, not see it? How could she not know the real reason that Sven was acting as he was? But he was more convinced in that moment than he had ever been that he was right...his older brother loved her just as much as he and Bjorn did. And that above all else scared Sven like nothing, not even losing \u00c6gir's Captive could. \n\nHe sighed. It would be pointless right now to try and make her see that...perhaps even Bjorn, but maybe, just maybe, he could be the bridge that Sven needed. Back to them...just as she had been for him. It looked like he had two brothers to talk to about their amazing wife. And a few gods and goddesses...especially Freya, to thank for this special woman. \n\n\"Get some sleep, woman. I promise you, you are going to fucking need it,\" he said as he forced himself to use what little strength was returning to his body to roll, taking her with him so that her head rested on his chest. Her head rested just under his chin and he smiled as he closed his eyes at the smell of her hair. He definitely had a couple of things to talk to Bjorn about. \n\n***\n\nKirsty drifted in and out of slumber as she lay draped across his body, her head resting on his chest, just listening to his heart beat. It was a bit slower now, but still faster than it should be after four rounds of love making...or was it five. She chuckled as she realized that she had lost count. \n\n\"What's so funny, lilla gumman?\" she smiled as she felt the rumble in his chest as she slid against his body when she lifted her head just enough to look up into those silvery depths. \n\n\"What is lilla gumman? What does it mean?\"\n\nHe frowned, \"Little girl, little woman, I think you would say.\" His hand brushed her hair back from her face, tucked it behind her shoulder. He frowned then as his eyes transformed to that steel grey, his face going dark as his fingers outlined Bjorn's teeth marks on her neck. She could not stop the slight flinch of pain at even his light touch. \"I'll bet him to a pulp,\" he swore.\n\nShe chuckled, \"You'd be beating the wrong brother too I bet?\"\n\nHis forehead creased as his frown deepened, \"What? Bjorn did that? What the fuck?\"\n\nShe reached for his hand that rested on her shoulder near the mark, \"Do not get puritanical on me, Mikael? Are you forgetting you cut me and drank my blood that first night on the ship?\" She smiled as she watched his cock harden at the reminder...even after...who cared how fucking many. \"If you must know, it was his promise to me. He gave me his word that you would be home before his mark faded from my body.\"\n\nHe smiled and shook his head, \"Damn it, I am coming to like that little brat more and more, woman.\" His face darkened just a bit again, but this time she saw that his eyes were back to silver rather that steely grey. \"He might have another good idea there,\" he said as he rolled over with her still tight in his arms. He reached for his jeans that had been discarded on the floor next to the bed somewhere during round three she thought it was. It took him a moment to find whatever he was looking for since he was only using one hand, the other arm still wrapped tightly about her waist.\n\nHer breath caught in her throat as she caught the glint of the low light on the steel of his knife blade. \"I think I did promise you something, did I not, elskling?\" She was so speechless she could only nod in response. \n\n\"Do I need the rope or can I trust you to be completely still, Kirsty?\" he asked as the cold metal began to caress along her cheek and down the side of her neck. He paused and ran the blade around his brother's very dark bruises there. This time she bit down on her lower lip at the twinge of pain the increased pressure caused and the equally strong flood of need and heat that was centered between her legs. \n\n\"Please, Mikael,\" she whimpered. \n\n\"Please what, my sweet wife? What do you need?\" he sighed heavily. \"Our time is almost up, sweetheart. Choose...a quickie...or my promise, my mark to join my brother's? Either way you have my word as well. We will be back. Soon.\"\n\nAs much as she wanted to feel his hard cock inside her again, it was a surprisingly easy choice. \"Cut me. Mark me. Make me yours,\" she whispered as she looked into those silvery pools that suddenly boiled and bubbled. ",
        "He sighed, \"Hands above your head, sweetheart.\" He bent and kissed her. Slow and sweet but full of all the heat that had raged between them that night. Then she felt his knife moving lower still. Across her shoulder and down her chest. He leaned back and both their eyes were glued to the steel grey against her pale skin. He did then as he had teased her, playing connect the dots with several of the light brown freckles that peppered her chest.\n\n\"Do you mean it?\" the sound was so low as if torn from his soul that she looked into his eyes. \n\nShe shook her head in confusion, \"Mean what, Mikael?\"\n\n\"Mark you? Make you mine? I can you know. Make the wound so deep that it will scar. That it will never fade. Did you want that, Kirsty? To truly be mine...forever?\" \n\nHer breath froze in her lungs at the pain...and the need that she saw in those eyes. She knew that the answer to that question meant far more to this man than even he could admit. And she knew too the answer. Not just because he needed it, but because she wanted it. Wanted him. Just as much as she wanted Bjorn. \n\n\"Yes, Sir.\" She frowned, that was not right. This was more than submission, more than games, this was love and relationships and promises. Building a relationship...a future for them...all of them. \"Yes, Mikael, I want that. I want you.\"\n\nHe sighed low and long. That sexy smile spread across his face, the one that she did not see nearly often enough. \"Hands above your head then. Do not move.\" \n\nShe nodded and steeled herself. No matter the pain, she would not disappoint him. It was ironic...she hated needles. She always had. But something inside had from that first moment on the boat craved this with him...wanted the feel of his blade on her skin. Even more so than now.\n\nAs she did on those rare occasions when she had blood draw, she watched as he moved the blade over her left breast. His eyes caught and held hers for a moment, \"One the count of three, elskling. One.\" She nodded her head and braced herself. \"Two,\" she inhaled and held her breath as his eyes returned once more to the knife and the blade. Hers followed suit.\n\n\"Three,\" the pain was sharp and searing as he pressed the knife far deeper than he had last time. This time she knew it was not merely the skin that he broke, but the muscle and tissue beneath. But still she did not move. Instead she stared in fascination as her dark red blood ran down her skin. \n\nIt was over far faster than she would have thought possible. Then his dark blonde head bent and as he had before his tongue lapped at her blood. As intimate as it always was when he or his brothers buried their heads between her legs and licked her there, it was nothing compared to this. She had read more than a couple vampire romances as well as her penchant for the BDSM and poly ones, but the reality of this man she loved drinking her blood was even hotter than she had gotten then. \n\nShe moaned at the feel of his hot tongue against her skin but when his mouth actually covered the fresh wound and sucked the blood from it, she could almost feel her body tense. Her arms dropped from above her head then, her hands encircled his head and held her lover, her husband to her breast as he drank the very life force from her body. \n\nHis mouth never left her breast, but as if he could feel how fucking tightly she was wound then, he stopped sucking just long enough to whisper, \"My sweet Freya.\" Her mind was beyond the complexities of how this whole orgasm conditioning shit worked. How he could trigger her when it was Bjorn who had trained her? She did not fucking care all she felt was the power of it as her whole body trembled and shook as she reached for the stars.\n\nHis head was once more sucking the blood from his wound as his fingers moved between her open thighs, slipped inside her and augmented her orgasm that was already on the edge of too fucking intense. Within seconds, her body answered his demands as she felt liquid gush around his fingers, wetting the sheet beneath them. Not that she gave a fuck.\n\nEspecially when the pleasure took on an edge of pain like a period cramp. It was strange...the orgasm still felt good, maybe even better. But the cramping was as intense as anything she had ever experienced...more so. Until as it always did the pain mixed with the pleasure and her body gave into all that the experience was. As it went on and on until she cried out and collapsed once more against the bed.\n\nStill he lapped softly as remnants of blood that appeared periodically. She looked down and watched as his tongue traced the mark that he had made on her tit. Much like a child would lick at a melting ice cream cone, savouring its sweetness. She smiled at the letter 'M' that appeared pink and red against her white skin. \n\n\"M for Mikael,\" she chuckled as she ran her fingers through his hair. \n\nHe reluctantly lifted his head and bent to kiss her. If she had been intrigued of the taste of her pussy on their lips after they had eaten her, she could find no words to describe the coopery sweetness of her blood on his lips and tongue. This kiss was as intimate and unforgettable as the man. \n\nWhen he at last broke it, his lips releasing hers from captivity, he smiled, but it was a weak one this time, \"Yes, or mitt, min, even your English mine. Whichever you prefer.\" He sighed heavily, \"But now I must dress it, see that it is clean and will heal properly. Then I must go. Join my brothers. Just know that while this one will not fade as Bjorn's will, my word to you is just as lasting as my mark on your body. We will be home...soon. You have my promise on that too.\"\n\nShe laughed, \"What you going to help Bjorn tie Sven up and throw him in with the fish too?\"\n\nHe laughed, \"Damn, I am liking my baby brother more and more. Good thing, I did not strangle him when he kept pestering me, no?\""
    ],
    "authorname": "Tara Cox",
    "tags": [
        "sexual intercourse",
        "knife play",
        "orgasm conditioning",
        "coming on command",
        "romance",
        "love",
        "polyandry",
        "blood",
        "vampirism"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgir-s-bride-ch-11"
}