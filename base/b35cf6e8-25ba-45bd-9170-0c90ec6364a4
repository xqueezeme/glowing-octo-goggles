{
    "title": "Surefoot 01: Ch. 03",
    "pages": [
        "USS Yosemite, One Year Ago:\n\nCaptain Gombe wanted to be anywhere else in the universe but where he was now. Fighting Klingons. Trapped in an event horizon. Back at the Academy getting yelled at by the Superintendent. Anywhere else.\n\nCertainly his Chief Medical Officer looked like he'd join him anywhere; Dr Rabin appeared to have aged ten years since they picked up the survivors of the Corvallen freighter. \"In all my years in this job, I've never seen physical injuries as extensive as this on someone who was still alive.\n\nEven discounting the years of malnutrition, theta radiation poisoning, and the extreme trauma he must have undergone when they amputated his tail and removed his claws, there are years' worth of broken bones that have been crudely reset, as well as second- and third-degree burns, parasites, evidence of exposure to extreme cold, including the vacuum of space... sexual assault...\"\n\nHe looked like he could down the entire contents of the nearest bar. \"I removed pain-inducing implants from his spine; they'd stopped using them years ago, but had left them in, and they caused infections in the surrounding tissue and-\" Suddenly he stopped and wiped his hand across his brow. \"Sorry, Captain.\"\n\n\"It's understandable, Doctor. And the others? Have they been identified? Do they have similar... injuries?\"\n\nHe nodded. \"Two of them were former crewmembers of a freighter, the Deirdre, reported missing two years ago. The rest are civilians of Federation and non-aligned worlds, many reported missing. Captain, how can we have let this happen? Slavery, in this day and age?\"\n\n\"We didn't exactly 'let it happen', Doctor.\"\n\n\"But the ship that was keeping them prisoner was in Federation space! They talked about the Bel-Zon selling slaves to Corvallens, Orions, the Breen, the Boslic! How many others are out there, right now, unseen?\"\n\n\"I don't know,\" Gombe admitted, horrified at the notion of how many ships he may have let slip by without knowing that there may have been slaves onboard. \"Once word about this gets out, there'll be changes, changes to procedures, to policies...\" He breathed out, wishing he had a drink himself. \"Speaking of which, I have a procedure I need to follow now. However distasteful. He's out of danger?\"\n\n\"Yes. He still has many scars, and of course he'll need to get his tail, his claws and a few of his teeth regenerated, but...\" Rabin frowned. \"You're not really going to do this, are you? The evidence is-\"\n\n\"I'm not Starfleet Command. I only follow their orders.\"\n\n\"Better you than me.\"\n\nGombe didn't blame him.\n\n*\n\nCaptain Hrelle looked somewhat better than when Gombe last saw him - though not much. He had been cleaned up, given fresh sickbay clothes, and from the look of an adjacent tray, had even eaten something. Now he half-sat up, both eyes repaired and focused on the visitor. \"Captain- You are the Captain, yes?\"\n\n\"Captain Matthew Gombe, yes.\"\n\nHrelle nodded. \"Still getting used to looking at the collar pips. When did they change the uniforms?\"\n\n\"Two months ago.\"\n\n\"They look... tight.\"\n\nGombe offered a smile. \"They hurt your back, too. Hopefully they'll be listening to the feedback and improve them soon.\"\n\nSilence rose, before Hrelle noted, \"I want to thank you and your crew for rescuing us.\"\n\n\"It was the least we can do. Captain, what happened to the Corvallens?\"\n\nHis gaze narrowed. \"We happened. We were kept in the recycling section, clearing out theta waste; slaves are cheaper than automated systems, apparently. We were slowly dying. If we refused to work, then we were denied food, water, hyronalin for the radiation. We never knew where we were, of course, but we knew there were periods when we were in Federation space. Eventually we gleaned clues that told us when that happened, when we were going to be approached by a Starfleet vessel to be scanned.\n\nSo... we waited, and bided our time, and when the opportunity arose, we sabotaged the reactors, and packed ourselves into a maintenance pod, in the absence of access to a lifeboat.\"\n\n\"You were certainly packed into that pod, Captain.\"\n\nHrelle nodded. \"I didn't intend to leave any of us behind; at least if we died out there, it would be as free individuals again. Any Corvallens survive?\"\n\n\"No.\"\n\nThe Caitian grunted; he didn't sound too regretful. \"Captain, we didn't exactly have access to calendars where we were... how long have I been away?\"\n\nGombe swallowed. \"Six years, more or less.\"\n\nThe Caitian paled, as if the confirmation of the years had finally caught up with him. \"That long? I knew it was a long time, but...\" He grunted. \"Hannah's gonna finish what the Bel-Zon started when she gets me-\" Then he looked up again. \"Did anyone from the Furyk survive?\"\n\nGombe shook his head. \"The ship was relatively intact, but all the bodies we found had died of massive radiation poisoning. I'm sorry, Captain.\"\n\nHrelle nodded numbly. \"It was a trap. The Bel-Zon, they- my Bridge crew and I were taken- I was... questioned about Salem Four's security- I couldn't-\"\n\nGombe held up a hand. \"Perhaps you shouldn't say any more, Captain-\"\n\nHrelle's expression changed; none of the fragility he had displayed before was there now, only a steely resolve, the same resolve that must have kept him alive all these years. \"Captain, what happened to my wife and child?\"\n\nGombe stiffened. He knew it was inevitable, he knew that no one else could do it, and lying would be exponentially worse. Damned if all that made it easier... \"The Bel-Zon raided Salem Four for the trilithium resin being stored there. There were casualties. Lt. Hannah Hrelle was one of them. I'm... sorry, Captain.\"\n\nGombe had never seen a reaction like that on another person's face. He hoped never to see one like that again. No matter what his fellow Captain might have done, no one should have to suffer this as well. The Caitian's voice cracked. \"They... they died?\"\n\n\"'They'?\" Gombe shook his head. \"No, not your stepdaughter. She survived.\"\n\nIt seemed like the slenderest of threads, but Hrelle clung to it like a lifeline. \"Sasha? Sasha's alive?\"\n\nInside, Gombe was eternally grateful to give this man something positive for once. \"More than that, she... she became the Hero of Salem Four.\"\n\n\"What?\"\n\n\"When the attack started, her classroom was cut off, her teacher critically injured, air was leaking from cracks in the window, the children were panicking. But she kept her head, used a toy tricorder to lead the children out through the maintenance vents and into the shelters, and then went back in with a medical kit, saved her teacher's life, and kept patching the cracks in the windows until help arrived.\" Gombe remembered the story well, it had been one of the very few bright spots on that day. \"She remains the youngest recipient of Starfleet's Medal of Commendation for exceptional valour.\"\n\nTears welled in Hrelle's eyes, and he forced a grunt that could have been laughter, had he any amusement left in him. \"When I was ten, I thought it was a great achievement to keep my tail from getting caught in doors... that she could do all that...\" He wiped his face repeatedly. \"Captain, I have to see her- where are we, how far away-\"\n\n\"Captain Esek Hrelle,\" Gombe announced, forcing himself to adopt formality at this stage; there was no other way he could get through the next minute. \"It is my duty to inform you that, following your disappearance and the attack on Salem Four, an investigation was conducted by Starfleet Intelligence. They concluded that you had colluded with the Bel-Zon, providing them with the necessary intelligence to bypass the station's security, and most likely were hiding in neutral space.\"\n\n\"W-What?\" Hrelle's face creased in confusion. \"They think that I-\"\n\n\"You were court-martialled in absentia. There are standing orders to put you into custody should you ever return to Federation space. I'm sorry.\" Gombe's face tightened; how many times was he going to have to apologise to this man? \"Captain, once the truth is revealed, once they find out what you and the others went through, I know they'll overturn their ruling-\"\n\n\"Have you got irons?\"\n\n\"Excuse me?\"\n\nHrelle rose to his feet, and only then did Gombe realise just how tall his fellow Captain was in comparison. He held up his wrists. \"Are you gonna clap me in irons, Captain? Got a cell waiting for me? Will I be drawn and quartered? Go ahead, I'm used to worse, believe me-\"\n\n\"Captain, please-\"\n\nHrelle's face twisted now, and his hands became fists, and he spoke through clenched teeth as he drew closer to Gombe. \"Come on, man! Do your duty! It doesn't matter what I went through. Do you know what I went through? While all of you having been sitting around, free, with full bellies and content minds, enjoying yourselves? Do you even care?\"\n\nGombe found himself backed against the wall of the medical room, his pulse quickening. \"Captain, I must ask you to control yourself-\"\n\n\"They want to lock me up? Fine! They can even kill me if they want! I'd deserve it, and more! I killed her! I killed them all!\"\n\nGombe was ready to call for security - but then he saw the shift in the emotion of his fellow Captain's eyes: the rage was still there, but more was mixing into it.\n\nThen he saw the eyes well up again. \"Captain Hrelle-\"\n\n\"She's dead- Hannah's dead- my wife- my Beloved- She's dead-\"\n\nAll the strength, all the resolve, bled from him like one of his many wounds. He collapsed, sobbing, held up by Gombe, who waved off the concerned looks of the medical staff who entered the room. He whispered words unclear in content but clear in meaning.\n\nGombe still would rather have been anywhere else - but for the moment, he was glad that he was here, now, for another person in such terrible distress.\n\n*\n\nUSS Surefoot, Today:\n\n\"Well,\" Neraxis muttered. \"I don't think much of your Dad's ship. Looks more like a cargo bay.\"\n\nSasha showed her friend how many middle fingers she had on her right hand. Not that she was genuinely offended; she can't imagine anything bringing her down at this point. Even seeing Giles Arrington looking peeved at being on a ship commanded by Esek Hrelle was only a boost to her enthusiasm.\n\nTheir transport had docked with a port on the side of the Surefoot, and the cadets were marched out with their belongings into a large cargo bay, whose walls were lined with containers and crates of various sizes and shapes, stacked and secured. The central area was illuminated from above, and now occupied by the cadets forming a parade square of six by three, leaving their baggage stacked behind them, while T'Varik was conversing with crewmembers.\n\nSasha couldn't stop grinning. She would actually be serving with her father! Just like those days when they would pretend to go off on Away Missions, exploring planets and fighting Klingons! She hadn't felt this optimistic in a long time!\n\nShe looked to Eydiir, standing beside her. \"I can't believe it! Can you?\"\n\nThe Capellan woman kept her eyes fixed ahead. \"You're meant to be at attention. Show some discipline.\"\n\nSasha frowned. She knew her friend leaned on the formal, stiff-necked side, but she seemed even more like she was, in the days when they first arrived at the Academy together and shared a dorm room, both of them wary and suspicious, albeit for different reasons.\n\nBut before Sasha could question her friend's attitude, T'Varik called out to them. \"Cadets, welcome onboard the USS Surefoot, an Oberth-class starship originally designed for planetary and stellar surveys. It has since been modified for its current multi-mission role, transporting supplies, maintaining communication relays and buoys, conducting customs and safety inspections, and, when necessary, assisting in search and rescue missions. We are based in the Leonis Sector, 99.2 light-years from Earth; further details of this sector and the stellar bodies within are available via your information packs in your cabins.\n\nI will now introduce you to our Captain, Esek Hrelle, who wishes to greet you personally.\" After a moment, she added, \"I understand that there are those of you who may have... issues regarding him. I will remind you that Starfleet has cleared him of any wrongdoing whatsoever, though I suspect some of you might still hold strong opinions on the matter. You are of course entitled to your opinions. But your entitlement should not prevent you from showing anything less than the requisite respect he deserves as your commanding officer.\"\n\nAs T'Varik continued to speak, a door slid open behind the assembled cadets. Sasha didn't even notice it until the figure who walked through it had already passed her. And though she instantly recognised him, she had to keep the urge to call out to him in check, remembering T'Varik' s earlier warnings.\n\nSo she watched her stepfather as he... just walked along, like everyone else. He looked... older than when she last saw him. Slower. Greyer. More fragile. He never replaced his tail, or claws. He had quite a bit more more weight around the belly, more then when she last saw him, something closer to the cuddly man she grew up with, but still...\n\nAnxiety now mingled with anticipation within her. She had been informed of his survival not long after Starfleet, and the Superintendent had arranged transport out to him at the Starbase where he was being treated - and incarcerated, pending an extensive debriefing and a subsequent investigation. It killed her to have to leave him again and return to Earth after a few weeks to complete her final exams, though they promised each other that they would stay in touch.\n\nWord about the slave trafficking taking place within Federation borders spread like a supernova blast. Starfleet Intelligence, who had already come under fire for failing to anticipate the attack on Salem Four, now faced renewed criticism for this oversight. Commander Arrington, in response, had doubled down on his attack on Captain Hrelle, suggesting that his criminal cohorts had betrayed him, or that at the very least, he should have tried harder to escape or resist, and it was a feeling that his family were eager to spread through the organisation.\n\nSasha had been appalled by the number of people, within and without Starfleet, who agreed with that sentiment. They were typically the Ignorati, the ones who had never fought or served onboard a starship but still thought they knew what they were talking about, armchair admirals who believed in death before dishonour and other melodramatic nonsense, the ones who couldn't or just didn't understand how terrible real life can be beyond their Utopian bubble - and hated her stepfather and the other survivors for reminding them of those harsh realities. She had little patience for the less scrupulous agents of the public media networks, who seemed to revel in the details of the torture he and the others had undergone.\n\nHe had ultimately been declared not responsible for revealing information that assisted the Bel-Zon in their raid on Salem Four, and after extensive counselling and physical therapy, was deemed fit to return to duty -- the only Starfleet survivor found to do so, the remainder understandably taking permanent retirement or medical leave. Many, including Sasha, thought he might look to return to the Banaris Sector, perhaps to command another frigate and maybe even pursue the remains of the Bel-Zon, most of whom had been either arrested or chased out of Federation space.\n\nInstead, he was here, five hundred light years away from that, commanding a small supply ship.\n\nHe had walked around the square, never even looking at the cadets, and was ascending the raised platform to join T'Varik, when Giles, standing two rows ahead of Sasha, nudged the cadet beside him and declared, \"Looks like he had a hard time on the litter tray.\"\n\nSasha felt her face burn, and almost broke ranks to confront the jerk, when her attention was taken by Captain Hrelle suddenly turning in place, descending the steps and retracing his steps, up to the place where Giles was standing, gently pushing aside the surrounding cadets to look directly at him. His voice was low, gravelly. \"Follow me, please.\"\n\nHe turned and departed again without waiting -- and without even looking in Sasha's direction, and he must have known she was there, even by scent alone! -- as Giles followed, his face red and his eyes wide, looking to those cadets around him for support, or even a reaction. No, no help there.\n\nHrelle returned to the platform, with Giles in tow like he was on a tractor beam, until the Caitian turned and faced him again, regarding him once before he looked at T'Varik. \"Have the standards been relaxed at the Academy since I was there?\"\n\nThe Vulcan looked to the boy. \"You are meant to be at attention, Cadet.\"\n\nGiles snapped to it. \"Cadet Giles Arrington reporting as ordered, Sir!\"\n\nHrelle folded his hands behind his back. \"Arrington? That's a familiar name. And how old are you, Mr Arrington?\"\n\n\"Uh, seventeen, Sir.\"\n\n\"Seventeen? Are you sure? Because you tell jokes like a nine-year-old.\"\n\n\"Sir?\"\n\n\"Your joke about my using a litter box. On those rare occasions when I hear jokes made about my race, they're usually only made by nine-year-old children who don't understand how offensive they are being.\"\n\n\"I- I didn't say anything, Sir.\"\n\nThe group somehow went even more silent than before. Hrelle's expression stiffened, and his tone changed, only slightly, though he never took his eyes off of the cadet. \"Mr Arrington, there are many stories told about Caitians, some true, some not. But the one about our having superior hearing is true. It's as good as Vulcans, I expect. Did you hear what Mr Arrington said about me, Commander?\"\n\n\"Yes, Sir,\" T'Varik confirmed. \"And I will of course initiate formal disciplinary proceedings-\"\n\nHrelle held up a hand in her direction, stopping her from continuing, though he continued to speak with a russet-faced Giles. \"You had a long and tiring journey here, so I'll overlook you lying to a superior officer just now. The joke, however, is harder to overlook.\" Now he turned to the assembled group, speaking more loudly and clearly. \"It always was. When I was your age, a group of upperclassmen made my life Hell, and with the open support of the Superintendent at the time too - Mr Arrington's grandfather, as a matter of fact.\n\nBut as far as I'm concerned, the moment you put on those uniforms, you earned more respect than that. So while you're on my ship, though you will still be cadets, still be taking classes and exams, you will also be working, earning pay, earning service time and leave time, and learning the practical side of your various majors and minors. Your rank will not be 'Cadet' but 'Crewman'. If you are prepared to act like adults, I am prepared to treat you like adults.\"\n\n\"However,\" Hrelle added, looking at Giles again. \"If you're prepared to act like a child...\" He indicated the steps to the platform. \"Sit on the bottom step, Mr Arrington.\"\n\nGiles glanced behind him, bemused. \"Excuse me, Sir?\"\n\n\"The bottom step. That's our Naughty Step. That's where children go to sit until they've learned their lesson.\"\n\nTitters ran through the cadets. Giles stared back in disbelief. \"Sir-\" As if driven by the responses from his friends, he straightened up further and declared, \"Captain, with- with all due respect, you can't make me do that!\"\n\nT'Varik stepped closer. \"Mr Arrington is correct, Sir. This is not an approved punishment.\"\n\n\"No, it isn't,\" Hrelle conceded. \"But if we did follow regulations, Mr Arrington would be facing a permanent note on his record. Now, my option would allow him to sit on a step and be humiliated for a few moments, and nothing more will be said about it.\" He looked to the group again. \"Hands up how many of you would choose to take the Step?\"\n\nAll hands, or appropriate appendages, rose.",
        "Hrelle looked back to Giles. \"So... what's your choice, Mr Arrington?\"\n\nGiles looked as if he would have given his soul to be able to beam out of there and not come back. Turning redder than it should be possible for a human, he faltered as he replied, \"I'll, ah, I'll take the Step, Sir.\"\n\n\"Excellent. Oh, and for the record: I don't use a litter box, I don't chase mice, I don't drink milk from a saucer, and I don't lick myself.\" To the group he added,\"Though not for lack of trying.\" As they laughed aloud, he returned to Giles, waving him towards the step. The laughter grew as Giles descended, his gangly legs looking ridiculous as he sat down on the bottom step, finding an excuse to look anywhere else but at the group.\n\nAs everyone quieted down again, Hrelle faced the group again. \"So... welcome aboard. For those not in the know, the original Surefoot was a historical naval vessel on my homeworld. It was a little ship, one that delivered supplies, medicine and communications to the people of the islands of the R'Trerah Archipelago. It was not a warship, it was not a flagship, and it never carried anyone famous. The work was never glamorous, ballads were never sung for its crew. But it saved lives. It was essential.\n\nAnd our work here is essential, too. There are colonies, outposts, research stations, observation stations, navigation and subspace communication buoys in this sector, all in need of our presence. The majority of Starfleet personnel will never explore strange new worlds, will never seek out new life and new civilisations. They will most likely boldly go where others have already gone before. But they will still make a difference. And if you still want to grumble about the lack of glamour, imagine all of your planetbound ancestors who dreamed of going to the stars, and would give up their right arms, or equivalent appendages, to have the chance that you have here and now.\n\nFor the course of the year your time will be divided between the continuation of your studies and actual work experience. Your academic side will be supervised by Commander T'Varik, and your work side by your appropriate supervisors. Although our mission objectives do not normally include scientific or security-related aspects, those of you majoring in those fields will still get an ample opportunity at practical experience.\n\nThere is a permanent crew of twelve, including the Commander and myself; you'll get the opportunity to meet everyone tonight at 2000 hours, at a mixer we're throwing in our rec room/mess hall/meeting room. Your quarters have been assigned, and from there you can access further information on your work and academic schedules, crew roster, deck plans, Starfleet regulations, and information about our sector of operations.\n\nNow, perhaps we should get you to your quarters and-\" He paused, rubbing his jaw. \"Wait, I forgot something. Oh yes: I need to speak with a cadet here. What's her name?\" He snapped his fingers repeatedly. \"I think it's, uh, Sassy? Sassy Hurrah? Am I getting that right?\" Louder now, he called out, \"Is there a Sassy Hurrah here? Report, please.\"\n\nThe dismay she was feeling on seemingly going unnoticed or unmentioned by him fled from her like snowflakes in a fusion reactor, and she fought to stay deadpan as she broke ranks and walked around to the platform.\n\n\"A little hurry up, if you would, Ms Hurrah, some of us are old and decrepit and not long for this life.\"\n\nShe quickened her pace, stepping around Giles as she strode up and stood at attention. \"Crewman Sasha Hrelle reporting as ordered, Sir.\"\n\nHe seemed stunned by her appearance, looking her over. \"Is this it? Is this all there is of you?\"\n\n\"I think you'll find it's more than enough, Sir.\"\n\n\"Really? You seem like the Runt of the Litter.\"\n\n\"I was, Sir.\"\n\n\"Oh? And where are all your brothers and sisters?\"\n\nA smirk was breaking through her demeanour. \"I ate them, Sir.\"\n\nBut Hrelle cracked first, laughing as he reached in and embraced her, lifting her up and spinning her around before setting her down again, though he still gripped her upper arms. \"Look at you! It's incredible how much you've grown since I last saw you! You look amazing!\" He glanced down at her chest. \"Where'd you get those things from?\"\n\nShe blushed as she heard laughter from the cadets. \"Got them from Mom.\"\n\nHe laughed and hugged her again, then turned to T'Varik. \"Commander, I have such stories to tell you about my baby! And they're all guaranteed completely embarrassing for her!\"\n\nThe Vulcan raised an eyebrow. \"I have no doubt. Perhaps in the meantime the crewmen can escort the cadets to their assigned quarters?\"\n\n\"Excellent idea!\" He turned around. \"Mr Arrington! Stop lounging about down there, go join the others!\" To Sasha he added, \"You go get unpacked, meet your squad members, and I'll see you at the party later.\"\n\nShe grinned. \"Yes, Sir!\"\n\nAs she departed, she heard T'Varik asked, \"Captain, if I may speak with you at your earliest convenience?\"\n\nSasha practically bounced back to her friends. This was going to be wonderful!\n\n*\n\nHrelle indicated a seat near his desk, only after taking his own noting that T'Varik remained standing. His quarters and adjoining office were smaller than what he had on the Furyk -- but was a palace compared to how he had lived for so many years after. \"Can I get you a drink, Commander?\"\n\n\"Thank you, no.\"\n\n\"Well, then, what can I do for you?\"\n\nShe remained at attention. \"Firstly, I wish to formally request permission to come aboard, Sir.\"\n\nHe leaned back in his chair. \"Oh, I don't know, you look very suspicious...\" When she didn't react, he added, \"Permission granted -- but only if you stand at ease, you're making my back ache.\"\n\nT'Varik did relax -- a little. \"Secondly, I wish to formally protest your treatment of Cadet Arrington.\"\n\nHe raised an eyebrow, then dropped it in case she thought he was mocking her. \"Oh? You think it was cruel and unusual punishment?\"\n\n\"On the contrary, I believed it lenient. Mr Arrington displayed an openly racist sentiment, not to mention his disrespect towards a superior officer. Both warrant at least a note on his permanent record.\"\n\nHe folded his hands on his belly and leaned back further. \"If he had a genuine issue with dealing with other races, I doubt if he would have made it past the entrance exams -- even if he is one the Mighty Arringtons. However, let the Counselor know so she can discuss it with him. As for the open disrespect, I was willing to let it slide - this once. Well, if that's all-\"\n\n\"I have a further objection: My role as First Officer is to support and enforce your decisions in front of the crew. However, when I persuaded you to take this position and join the AWE Program -- and to allow Sasha to serve onboard with you -- it was with the understanding that I would be in charge of the cadets.\"\n\n\"Oh? And what's my role here? Just sit in the Captain's chair and stay handsome and quiet?\"\n\nT'Varik tilted her head. \"I cannot vouch for your attractiveness. As for your quietude... you have already amply demonstrated to me your capacity for this during our meeting with the Superintendent.\"\n\n*\n\nStarfleet Academy, Two Months Ago:\n\nHrelle sat quietly, allowing T'Varik to carry the conversation. She seemed as pleased to do so as any Vulcan can be pleased to do anything. \"And a non-Terran commanding officer can also provide a positive role model for the cadets. Particularly one with Captain Hrelle's considerable experience.\"\n\nAcross the table, the Superintendent was nodding, but beside her, her predecessor, Admiral Jeffrey Arrington, had remained dubious throughout, without ever once looking at the object of his derision.\n\n\"I can also confirm that Captain Hrelle has completed the required instructions certification to allow him to act as the supervisor for those cadets majoring in Command.\"\n\nAdmiral Arrington made a sound. The Superintendent and T'Varik glanced at him curiously, but Hrelle just tugged at the sleeves of his uniform. He was still getting used to the new designs.\n\n\"The Surefoot's size and mission fits the required parameters for the cadets' training,\" T'Varik continued. \"And can be quickly adapted for their use. And its sector of operations is well within Federation space.\"\n\n\"You've done your research with the expected thoroughness, Commander,\" the Superintendent, looking to Arrington. \"Well, Admiral? Are you satisfied?\"\n\nArrington was a callow, balding man with a pointed, dimpled chin and sunken eyes, eyes now moving from officer to officer. \"That the requirements have been fulfilled in this instance? Reluctantly, yes.\" Now he settled his glare on Hrelle. \"But I want the chance to speak my mind.\"\n\nHe pointed a spindly finger at the Caitian. \"You're a malcontent, Hrelle. You always have been, you always will be. I recognised you as such from the moment I first set eyes on you thirty years ago, on these very grounds. You're rude, irreverent, licentious, facetious, corruptive, and from what I hear, you've inflicted those same bad traits on your stepdaughter.\n\nAnd though you may have deceived everyone else in Starfleet, as far as I and many others are concerned, you remain a coward and a traitor. You're responsible for the deaths of the crew of the Furyk, as well as those on Station Salem Four. Including your wife.\" His already-wrinkled face somehow creased further. \"There, I've said my piece, you can say what you want now.\"\n\nHrelle felt the room tense. Even T'Varik seemed taken aback by the venom; the Admiral was retired, but had managed to get himself reinstated and wrangle his way into becoming an adviser for the AWE Program, though he refused to wear the new uniforms. For his part, Hrelle could have asked what he had done all those years ago to warrant Arrington's ire, enough to have his nieces and nephews, upperclassmen all, give Hrelle hell for four years. He could have reminded the Admiral of all the years of exemplary service he had given to Starfleet, of his confirmed innocence, of the grief and trauma he was still undergoing because of his terrible experiences, and appealed to the man to put the past behind them and move on.\n\nHe could have said all that, and more.\n\nInstead, he settled for, \"Kiss my furry ass.\"\n\nArrington blinked. \"What did you say?\"\n\n\"I said kiss my furry ass.\" Hrelle's tone was soft, even mild. \"Pucker up those cracked, colourless slugs you call lips and kiss it. Bring your whole miserable, rotten family along, too, you old bastard, and make a feast of it. It shouldn't be too difficult, now I don't have a tail in the way. And if you can't bend down, I'll raise my hindquarters for you. Be quick, though, I had a curry for lunch-\"\n\nArrington slammed his fist down on the table. \"I hope you enjoyed that, Hrelle, because your words have finished you now! I'll see to that!\"\n\n\"Admiral,\" T'Varik interrupted calmly, drawing his attention. \"You invited us to say what we wanted. That statement constitutes granting us permission to do so. Captain Hrelle was within his rights to make his... colourful suggestion.\"\n\nArrington frowned so much he looked like his face would implode.\n\n\"They got you there, Jeff,\" the Superintendent admitted, looking like she was struggling to keep a straight face.\n\n*\n\nUSS Surefoot, Today:\n\n\"What is it, Commander? You looked lost in thought.\"\n\n\"Vulcans do not get 'lost in thought'. I was merely comprehending how much of an influence you have been on Sasha.\"\n\n\"For the good, I hope.\"\n\n\"Yes... when neither of you is being provoked by a member of the Arrington family, that is.\"\n\nHrelle chuckled, but then sat up and grew serious. \"Commander... you are correct to raise an objection to my handling of the boy. I will endeavour not to repeat that mistake, at least not without discussing it with you first.\"\n\n\"Thank you, Captain. I should inform you of an incident that occurred on the transport here, between Mr Arrington and Ms Hrelle.\"\n\nHe grunted. \"I'm not surprised. I think our families are gonna end up the Twenty-Fourth Century version of the Montagues and the Capulets. Still, we don't always get to serve with people we like, and as long as they're on different shifts, their interaction time will be limited.\"\n\nT'Varik paused, before replying with, \"About that...\"\n\nTO BE CONTINUED"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "space",
        "federation",
        "caitian",
        "starfleet",
        "starship"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-ch-03-welcome"
}