{
    "title": "Tapestry Ch. 01",
    "pages": [
        "Chapter 01: A New Love\n\nThe relationships we have are threads in a tapestry, each woven together to show the life we have lived and connections we have with one another. This is the first of an open-ended series that will feature characters from some of my past stories, and introduce some new friends for us to get to know. It picks up right after \"McKayla's Miracle Revisited\" left off.\n\nIn a bit of shameless cross-promotion, I suggest that you check out some of my other stories to learn a little bit more about Amberle, Kevin, McKayla, Melanie, Melinda, Nichole and some of the others who appear here. As with many of my tales, if you're looking for quickie sex, these are probably not the kind of stories you want to read. I love to hear from readers, so please leave me a comment or send me an email.\n\n****************\n\n\"I will give you fifty bucks to get on the bull and ride it,\" Melanie slurred. The music in the club was deafening and we could barely hear her.\n\nThe rest of us giggled. I was half covered in the champagne my friend had spilled on me earlier in the night, but I didn't care. We were all blitzed. It's a good thing that there was a limo waiting outside so none of us would have to drive.\n\n\"Not a chance in hell!\" Nichole shot back.\n\n\"I rode it! You bitches can, too!\" Melinda pounded on the heavy wooden table and put back a shot of straight tequila.\n\nPerhaps against my better judgment, I had allowed myself to be dragged along with my good friend Melanie Westcott and some of her friends for a girls' weekend out. I had known Melanie for about fourteen years. She was married to my wife McKayla's old college roommate, Kevin. This was something she had planned with some of her girlfriends and they invited me along.\n\nMelinda went to high school with Melanie and Kevin. She is an English professor and bestselling author of trashy romance novels that she writes under a pseudonym. Melinda was also the most outgoing of the bunch and some of the crazier things we did that weekend were her ideas. Like me, she was in a \"non-traditional\" marriage, only where mine was a lesbian marriage, she was in a plural marriage that involved her husband, two co-wives and 8 kids.\n\nI had met Becky before when McKayla, Kevin, Melanie and our kids took a Disney World vacation a dozen years ago, and have run into her with Kevin and Mel a couple of times since. She was one of Melanie's friends from college, and she had stopped by with her husband for a few days on the way to a cruise ship in Miami. Becky was normally quiet and reserved, although I think she was one of those wild, freaky animals behind closed doors.\n\nThe fourth girl in our group was Lara, and if there was ever someone who should have been a spoiled princess, it was her. Both of her parents came from old money, Ivy League families. Yet, they were also good, old-fashioned northeast liberals in the tradition of the Kennedys. Lara never needed to work a day in her life if she didn't want to, but she spent her days as a public high school guidance counselor and volunteered at more charities than you could count, including Kevin's scholarship foundation. As I recall, she and her husband knew Kevin from graduate school. She was a fun drunk, and I don't recall ever seeing her without a glass of wine in her hand that weekend.\n\nThe youngest of our group was Nichole, who was the reason for our little soir\u00e9e. She was slender and fit. Born and raised in New York, she had the sensibility of a big-city girl. She could be loud and boisterous, but also incredibly kind and compassionate. She had just turned forty a couple of weeks before and we were ostensibly out for her birthday. Melanie and Melinda were ten years older, and the rest of us fell somewhere in between. I found out later that Nichole spoke fluent Mandarin Chinese and Japanese, and she met Melanie when they both worked as translators for multi-national companies.\n\nI also found out that like me, Nichole was a widow, having lost her husband to a car accident a decade and a half before.\n\n\"I'll give you another fifty to ride the bull!\" Lara shouted.\n\nReaching into my purse, I drew out a Benjamin, doubling the pot. \"Two hundred!\"\n\nMelinda waved to one of the hunky, young guys working in the bar. He came over and took Nichole's hand and led her to the center of the crowd. There were hoots and hollers as she adjusted the sparkling tiara on her head and climbed up on the mechanical bull.\n\nVery quickly, she was back on the ground; I'm sure the alcohol played a considerable role in her incoordination. But she was laughing as she rejoined us, and laughed even louder as Melanie played back the video on her iPhone.\n\nThe six of us were staying in a beach house south of where I lived. It was on the other end of town, and not quite an hour from my house. I invited Melanie and her friends to stay with Maureen and I, but she said that I had to come stay with them. She didn't want me to feel like I had to be the hostess, keep everything clean or make sure there was enough food and liquor around.\n\n\"This is a vacation for you, too,\" Melanie said. And that was that. The house she got was beautiful and spacious. It had a private pool and hot tub. There were three big bedrooms, each with its own bath. Melanie had also made arrangements to have a driver on hand for almost the entire long weekend. Really all we had to do was have fun.\n\nLara leaned over and had to shout into my ear over the music. \"That guy over there is checking you out!\"\n\n\"He's my daughter's age!\"\n\n\"I'll bet he'd rock your world,\" she giggled.\n\n\"Shit,\" I snorted. \"I'd kill that boy.\"\n\nWhen I was in college, I thought there was nothing more pathetic than seeing a group of old women out pretending that they were twenty-one again. Now that I was one of those women, it didn't seem so bad. Of course, over the past two decades, being a \"cougar\" or a MILF somehow became acceptable, and even desirable.\n\nThe six of us stayed at the club for another hour or so, and sure enough, that young man came over and asked me to dance. Despite the taunts of my friends, I didn't leave with him, nor did he get my number, but if I said he didn't make an older woman feel pretty for a night, I'd be lying.\n\nAll of us had kids and only Nichole and I were single, but we very quickly realised that we weren't in college anymore and 1:00 AM was definitely past our bedtime, so we piled into the limo, which took us back to the house.\n\nMelinda, Melanie and Lara broke out the Captain Morgan's and started doing shots. Becky started up a pot of decaf coffee. I took a handful of ibuprofen, said my good nights, sent a text to my daughter letting her know that I hadn't been roofied and went to bed.\n\nSome time later, Nichole quietly slipped into the room we were sharing and got in the big, king-sized bed.\n\nWhen I woke up the next morning, I heard her rhythmic breathing and felt her arm draped around my waist.\n\nAnd for just a moment, I realised how lonely I had been for the last six years.\n\n****************\n\nThe rest of the house slept in until almost noon. I have never really been a morning person, but I have a certain routine and I'm usually up by about eight, even on the weekends. Have I mentioned that I'm 44 years old, basically retired and that I only work when I want to?\n\nI went out into the living room and turned on the TV, careful to keep the volume low. The sun was up and there were two empty rum bottles on the table.\n\nRummaging through the cabinets, I found some Diet Pepsi and cereal. I dug my iPad out of a bag and began scanning the news. I also read a couple of chapters about the Starks and the Lannisters on my Kindle app and snuck in some Angry Birds.\n\nAlthough I have lived at the beach for the last 20-plus years, I still love the early mornings, listening to the waves crashing against the shore and feeling the warm breeze blowing through the open windows. As the day wears on, more and more people head to the beach and the temperature goes up. The sounds of boats and jet skis and four-wheelers interrupt the calm. The early morning hours are the time when it's just me and the ocean.\n\nThe only other person to wake was Melinda, who made a brief appearance to whip up two cups of chai latte tea in the Keurig, then she disappeared back into the biggest of the bedrooms.\n\nI was out on the back deck when I heard Nichole rustling around in the kitchen. Going inside, I found her brewing up a pot of coffee and looking for something to eat. We had packed some snacky foods and a lot of wine, but there really wasn't much by way of actual food. Especially if you wanted to ward off a hangover.\n\nThe night before, I was plenty buzzed, but I knew when to quit, which was well before the rest of them. In college, I got into the habit of taking an ibuprofen or four before going to bed, and found that usually preemptively wards off a hangover.  \n\n\"Good morning,\" she said with a smile.\n\n\"Sleep well?\" I asked casually.\n\n\"Very well, thank you,\" she replied. She, too, found the cereal and poured herself a bowl. \"I hope my teeth grinding didn't wake you.\"\n\n\"I didn't even notice.\" That much was true; once I get to sleep, nothing short of a tornado will wake me. McKayla used to tell me that I often slept through her molesting me and Maureen crying in the middle of the night, although in my defense, as I got older, I got better at listening for my daughter, especially when she was coming in after curfew.\n\n\"Do you know what the plan is for today?\" she asked. We both had a little chuckle at that. Our friend Melanie is a planner. She used to be a commercial lender, but now is a loan officer at a credit union. If you know accountants, think of every organisational stereotype you know, multiply it by ten, and you have Melanie Westcott. Her husband bought her a shirt one year that said \"Does anal retentive have a hyphen?\"\n\nI think her whole life is scheduled and planned. She has contingencies for contingencies. She can tell you at any given minute exactly what her checking account balance is (down to the penny!), how many more miles she can drive in her car before it will need gas, and when all of her bills are due for the next three months. That's not to say that she's rigid or inflexible, but she is compulsively on-time and is always thinking two events into the future. That is, unless she's been drinking, and then all bets are off.\n\n\"I'm not sure, but I'm going to go with hangover recovery from now until five, dinner some place nice, and then more drinking later,\" I replied.\n\nIn one of the other bedrooms, I heard the shower start up.\n\n\"I am so not in the mood for Cheerios,\" Nichole muttered. \"Are you hungry?\"\n\n\"Starved, actually,\" I said. \"I know a nice little place up the road. They should be serving brunch right about now.\"\n\n\"I'm going to get cleaned up and let's go. I'm buying.\"\n\nNot being one to argue, I poked my head into each of the other rooms. None of the other four were in any condition or mood for breakfast. I guess there's a reason why people in their forties eventually stop going out like we did the night before.  \n\nNichole and I changed into something casual, then got into my convertible and went out for brunch.\n\n\"Stick shift, huh?\" Nichole asked as we pulled out of the under-house parking area. Many of the houses at the beach, especially the rentals, are built up on stilts. We don't get many hurricanes where we are, but when we do, they're doozies and the storm surge has been known to wash entire neighbourhoods away. There was parking for four cars under the house, but there was only my car and Melanie's rental taking up the spaces.\n\n\"Yeah,\" I slipped off my shoes and drove barefoot. McKayla was a BMW girl. In the fourteen years or so that I knew and loved her, she only drove 3-series convertibles, and they all had three pedals. Maureen drives the last car her Mom bought, a red M3 with a retractable hardtop that we have lovingly maintained. After my wife died, I picked out cars I thought she would like. I guess that's one of the ways I try to hold on to little pieces of her.\n\nOver the years, we've done so much business with the local dealer that I can call the sales manager on Monday and tell him I'm looking for a new car, and by Thursday, he will have the perfect candy-apple red car waiting for me in the showroom at a price that is a good deal for me, but still makes them some money. \"They're too much fun.\"\n\n\"I can't drive a stick,\" Nichole admitted sheepishly. \"There's no point in having one in New York. You'd burn the clutch out in three months.\"\n\n\"If you can ride a bike, you can drive a stick,\" I repeated the words my father had told me in the year or two before he died. Before he would let me get my driver's license, there was a list of simple automotive things I had to master: check tire pressure, top off fluids, jump start a dead battery, change a flat tire, change the oil, replace headlamps and taillights and drive a manual transmission. I made sure Maureen had to go through the same check list, too. \"And if you can drive a stick, you can drive anything. If you were going to be around for more than a couple of days, I could teach you.\"\n\nShe just smiled.\n\nThe drive to the restaurant was quick. It was in one of the artsy communities on the intercoastal side of the main drag. We got a table right on the water and spent longer than either of us expected just talking.\n\nNichole had been married three times, but was now single. Her first husband was a dear childhood friend who was killed in an automobile accident. She didn't talk much about him and I didn't ask. She met another man a few years later and she remarried. They had a son, who was now nine, but they divorced after six years because he couldn't keep his dick in his pants. Her third marriage ended in annulment only a year before. Apparently, he has a gambling problem, and prior to their marriage, he failed to disclose his substantial debts and credit issues.\n\n\"In fact,\" she told me, \"It wasn't until we were married for three months that I had a clue about his issues. I started getting bills for credit cards I didn't know I had and calls regarding credit checks for loans I was allegedly applying for.\"\n\nThis was very disconcerting to her because she was a fairly successful businesswoman in her own right and luckily had insisted that he sign a pre-nuptial agreement. She found relief only after doing a lot of digging into his finances, which she acknowledged that she should have done before they got married. The marriage was annulled due to fraud, but her credit had still taken a minor hit and she was gunshy about dating again.\n\nI talked a little bit about McKayla and living at the beach. I found out that she was a Yankees/Jets girl, while I was Braves/Falcons. Since she was from New York, at least she came by her fandom honestly, and wasn't one of those hangers-on who jumps on a bandwagon just because a team wins a lot. We compared notes about our kids. She was funny and smart.\n\nAbout halfway through the meal, I noticed just how pretty she was, too. She was neither drop-dead gorgeous, nor simply plain. Neither of us were young, hot things anymore, but Nichole had a certain kind of confidence that radiated vibrance and vitality. She had something of the girl-next-door appeal, but she was also very fashionable in the Sex-and-the-City-on-a-regular-person's-budget way.\n\nAs we drove back to the house, I felt something in the pit of my stomach, which I hadn't felt for many years: butterflies. They both scared and excited me at the same time.\n\n****************\n\nAfter our big wild, Friday night out, we had a more subdued Saturday night. The other girls had come in on Thursday afternoon or evening, and they were all heading home on Monday. We went out to dinner at a nice, upscale local seafood restaurant (that's why you go to the beach, right?) and then came back to the house to talk and gossip and just hang out.\n\nAt some point during the day, Melanie had gone out and gotten some real food and a couple of bottles of wine, so we weren't starving.\n\nI love hanging out with other girls. We talked about everything under the sun, from football to spouses to kids to cooking to vibrators to retirement plans and everything in between. Although I had just met some of these women only a couple of days before, they were a fun, non-judgmental group. Each was successful, confident and pretty. They were full of supportive words and witty zingers, sometimes in the same breath.\n\nWe swapped email addresses and friended one another on Facebook. I found myself sitting next to Nichole on the couch. My pulse raced when our hips inadvertently touched.\n\nAll the while, I wondered if it was my imagination, since she didn't seem like the type who would be in to girls. Maybe it had just been so long since I'd been intimate with anyone that my mind was playing tricks on me. Maybe I had been out of the dating game for so long that I could no longer recognise when people were attracted to me and when they were just being friendly.\n\nOr maybe, she was genuinely interested in me.\n\nI made myself cut back on the wine or I knew I'd probably do something I would regret later.\n\nAt about 10:30, the six of us were sitting around, still talking comfortably, when there was a knock on the door. Melinda went to answer it and soon two police officers came in, looking for Nichole. Apparently she was wanted for outstanding parking tickets or regicide or something silly like that.\n\nThey had us going for about a minute, and then Melanie started up some loud dance music on the house's stereo. Soon enough, the two (very good-looking) young men were peeling of their \"uniforms\", Nichole found herself wearing the \"Birthday Girl\" tiara again, and somehow a champagne flute found its way into my hand and it never seemed to empty.\n\nI think the guys would have let us have our way with them if we had wanted to, but they settled for the fair number of large bills which found their way into their g-strings. The side effect was that when the show was over, there was a house full of six tipsy middle-aged women in various stages of menopause who were suddenly very horny.\n\nAfter they guys left, Melinda excused herself to go Facetime with her husband and/or wives, Becky retreated to the other bedroom for some time with Mr. Rabbit and Lara found herself suddenly needing to take a bath that involved candles, champagne and the jacuzzi jets.\n\nNichole, Melanie and I stayed up talking for a little while longer, then we all went to bed. I needed a few minutes to sober up or I'd be paying for all of the champagne in the morning.\n\nI changed in the bathroom, but Nichole came in after a few minutes as we brushed our teeth and pulled our hair back. Neither of us were particularly modest, but nor did we go out of our way to expose ourselves to one another. Since we had both been married, we weren't strangers to having other people in the bathroom while doing our business.\n\nAs she was finishing up, I plugged in my iPhone, tossed back some ibuprofen and climbed in to bed. Nichole shut off the lights and slipped in afterwards.\n\nWe lay there for a few minutes, not speaking. Her body jerked a couple of times, and then her breathing became regular.\n\nI spread my legs and found the space between them to be surprisingly wet. Trying not to wake the other person in the bed, one of my hands found its way to my breast and the other began to gently stroke my clit.\n\nAlthough it was the male strippers who had gotten my libido going, it was thoughts of women that fueled my fantasies. Usually when I masturbate, I think about McKayla or Jessica Alba or Salma Hayek or someone similar; you know: brunette, voluptuous and gorgeous (although Christina Hendricks somehow finds her way into some of my redhead fantasies).",
        "Don't get me wrong; I like men and I loved feeling a nice hard cock inside me, but I think women are so much more attractive than men.\n\nI'd like to think that I've aged well. I try to stay in shape, although I'm a little heavier than I want to be. In college, my rear end was amazing, but now I think it's merely very nice. My breasts were never big, but that means now they're not too saggy and hanging down to my waist.\n\nMy nipples are still sensitive and I punched them as I rubbed my sex. I had to bite my lip as I flicked the hard little nub of my clit.\n\nIn my mind, someone was nibbling on my breasts and cupping my ass. I began to buck my hips ever so slightly, meeting the strokes of my fingers.\n\nMy lover kissed and caressed me. I ran my fingernails along the skin on my sides, from my hips to my chest.\n\nA little faster. A little harder.\n\nI felt my pussy flood with warmth and cried out just a little.\n\nJust when I was about to climax, Nichole shifted in her sleep. I stopped moving, lest I wake her.\n\nI could hear the blood pounding in my veins, and the thought of getting caught masturbating by someone I had just met a couple of days ago was oddly exciting.\n\nWhen her breathing was regular again, my fingers resumed their ministrations.\n\nIt didn't take much longer and soon my body tensed for just a moment, and then my clit seemed to explode against my hand. I gasped louder than I should have, then I fell back into the plush pillows.\n\nMy sex pulsed as my orgasm was released. I curled up into a ball and rolled over on my side, the waves of pleasure receding.\n\nA few minutes later, I fell into a contented sleep.\n\nWhen I awoke the next morning, Nichole's body was pressed up against me, her arm once again draped around me. Instead of feeling strange this time, I pushed back against her so we were holding one another underneath the covers.\n\nMy fingers wrapped around hers and I went back to sleep, happy to once again feel close to another person.\n\n****************\n\nA little while later, I stirred again. Blinking the sleep out of my eyes, I realised that I was alone in the bed. The sun was trying to peek in from behind the drawn curtains.\n\nI padded out to the living room in my pajamas where I found Nichole and Melinda. Our other three friends were still in bed, but it was early. A pot of coffee was warming.\n\nMelinda gave me a warm greeting, but Nichole only winked at me. I blushed slightly.\n\nWe sat around and talked quietly until the rest of the house was up. After everyone was dressed, our limo came around and took us out for Sunday brunch and then to the touristy area by the fishing pier. We walked around and did some shopping while our food digested, but then found out Melanie and Melinda had made arrangements to go parasailing, which was a lot more fun than I thought it was going to be. I'm normally deathly scared of heights, but after a couple of mimosas, my courage was up.\n\nThe girl and two guys operating the parasailing boat were young, tanned and pretty. Melinda had paid a little extra and rented the entire boat, so it was just the six of us. That also meant that we could spend a little more time up in the air.\n\nLara and Becky went up first. For us, they had a side-by-side harness for two people. The ocean wasn't too rough or choppy. They put the parachute up first, then strapped us in the harness. Once the riders were airborne, a tether bound the riders to the boat, and then we rode around for a while before reeling the line in.\n\nAfter the first pair was done, it was Nichole's and my turn. The cute guys strapped us in, and then began unwinding the tether.\n\nOnce we got about a hundred feet up, all of the noise from the boat and the ocean faded away. There was just us and the wind. It was actually very peaceful. Melinda had gotten us the 1200 foot spool instead of the 800 foot tether and it took awhile for the line to let out.\n\n\"So did you spoon me, or did I do you?\" Nichole asked once we got up to the apex.\n\nI blushed. \"I think it was a little of both.\"\n\n\"I liked it,\" she said gently. \"Thank you.\"\n\n\"That's the worst part of being single,\" I admitted. Before I met McKayla, I really wasn't much of a cuddler. I hated sleeping and feeling my boyfriend or Travis (my daughter's father) touching me. Yet from the first night I spent with McKayla, I never wanted to sleep without feeling her next to me. I don't know what it was about her and I can't explain it. I just needed her near me. \"Not having someone to hold me at night.\"\n\nNichole looked away for a moment. She took a deep breath. Her voice was soft, and I could just barely hear her above the wind. \"The first year was the worst. I cried myself to sleep every night after Michael died.\"\n\nI took her hands in mine. It wasn't sexual or even casual-friendly. It was the intimate touch that only people who have lost the one and only love of their life know. We didn't speak for the remainder of our parasailing flight.\n\nAfter about ten minutes, they began reeling us in. Her hands never left mine until there are only about two hundred feet left on the line.\n\n\"I hope you'll spoon me again,\" I said, only half-joking.\n\nShe squeezed my hands before letting go. \"Play your cards right and we'll do a lot more than just spoon.\"\n\nBehind her sunglasses and wry smile, I couldn't tell if she was serious or not.\n\n****************\n\nAfter we got back to the house and changed, the waiting limo took us to dinner. It was a nice, upscale fusion restaurant that featured a menu of Pacific Rim-style seafood and sushi, with a little bit of Polynesian/Hawaiian thrown in for good measure.\n\nWe ordered all of the appetizers on the menu, half of the main entrees and passed everything around. The grilled seabass over rice pilaf was especially good and the house sommelier matched our meal to the perfect wines. In a check-grabbing coup, I managed to pay the bill without the others finding out until it was too late, a move which would have made McKayla especially proud.\n\nOur next stop was a bar that featured dueling pianos. The guys playing were absolutely brilliant, and we tried to stump them with requests that ranged from Big Country to Jimmy Buffett to Lady Gaga to the Indigo Girls. All night long, I kept looking nervously over at Nichole. A couple of times, I found her looking back at me. She smiled nervously, and then turned away.\n\nA gazillion things ran through my mind.\n\nWhat signals was she sending? My gaydar has always been way off; hell, the first time we met, I had no idea McKayla was a lesbian or that she was interested in me. I certainly would never have pegged a woman who married three different men to be into girls, too.\n\nAnd what was I thinking? Was I just lonely? Was I ready for another relationship? If she was interested in me, did Nichole even want a relationship? And what about the distance? She lived in New York. I was well established at the beach. What would my daughter think? Would her family like me? Would her family kick her out for being gay? Would I be betraying McKayla if I got involved with someone else?\n\nCan you tell that I tend to over-think things?\n\nI lost track of the time, but I knew it was late when we left the bar. I think the other girls figured that since they were flying home the next day, they could go a little crazy. Again. About half way through the night, Melinda and Lara started ordering shots for everyone. I think the instructions were, \"Everyone gets two shots every ten minutes until someone passes out, then it's every five.\"\n\nBecky was the first one gone. Although she didn't quite pass out in the bar, one of the bouncers had to pretty much carry her to the limo. We tipped him well and I think Melinda even inadvertently flashed him with her big, round bosom that was falling out of her V-neck top.\n\nWe got back to the house and the limo driver had to help us stumble up the steps. He also got a pretty nice tip.\n\nEveryone pretty much went straight to bed. I changed into a set of cotton pajamas with loose-fitting long pants and a short sleeve top. Nichole's were similar, but with shorts that showed off her shapely, athletic legs.\n\nI took my customary dose of ibuprofen, brushed my teeth then got into the bed, nervously wondering what the night had in store for us.\n\nNichole turned out the lights, so only a soft glow came through from behind the curtains. I felt her get in on the other side of the bed. I was laying flat on my back, under the covers.\n\nHer hand brushed my shoulder and she snuggled up close to me.\n\nNeither of us spoke. I think we were each waiting for the other to make a move.\n\nMy heart raced. I hadn't felt this way in years.\n\nIt was terrifying.\n\nIt was exhilarating.\n\nI took her hand in mine. Her breaths were short. I heard her lick her lips in anticipation.\n\nShe took a deep breath. My nipples crinkled up when she squeezed my hand.\n\n\"I want you to kiss me,\" she whispered.\n\nPushing her over on her back, I rolled on to my side. Our legs intertwined as I pressed my body against hers.\n\nMy hands cupped her face. I felt desire building within my gut. Any guilt I might have felt was washed away by the alcohol, and the burning touch of the woman with whom I was sharing a bed.\n\nNichole tilted her head back and I leaned in. Our lips met, briefly at first. I went in for a second pass.\n\nShe threw her arms around my neck and pulled me in to her. Our noses brushed. Her kiss was soft and tentative.\n\nOur clothed breasts pressed together.\n\nHer hands brushed the hair out of my face.\n\nShe gasped when my lips left hers and went to her neck. She dug her nails into my shoulder when I gently bit her ear.\n\nI felt like I was going to pop when she sucked on my collarbone.\n\nWe lay in the soft bed for what seemed like an eternity, just kissing and exploring one another. She made no move to undress me.\n\nThe thought of touching her breasts or sex never even crossed my mind.\n\nThe closest we came was when her hands went to my hips and she began to slowly grind against me.\n\nShe cupped my ass with her palms for just a second, but then went back to pulling my neck close to hers.\n\nSome time later, Nichole rolled me over and she took a turn on top. I ran my hands up and down her back over her pajama top. Our tongues dueled and she suckled the soft underside of my chin.\n\nI fell asleep with Nichole's head resting on my shoulder and her arms around me.\n\nWhen I woke up, I was spooned up behind her, my arms pulling her close to me, a contented smile on my lips.\n\nAnd that's when the guilt started.\n\n****************\n\nLook, I know that I really didn't have anything to feel guilty about. My wife died six years before from pancreatic cancer that spread very aggressively to her colon and brain. She'd had one bout with colon cancer a few years earlier. The doctors found the cancer's return in May and she died in October, not long after our thirteenth \"wedding\" anniversary.\n\nI think there was a part of her that was happy that the cancer got her. You see, she also had Huntington's Disease, which is a hereditary degenerative neurological condition very much like Parkinson's with Alzheimer's thrown in. She had some tremors and physical symptoms, but the cognitive parts hadn't begun to manifest themselves. Relative to the Huntington's, which she may have lived with for another five or for thirty more years, the cancer took her quickly.\n\nStill, when I woke up in Nichole's arms, all I could feel was guilt. Guilty for waking up with someone other than my beautiful, devoted wife. I know I shouldn't have felt that way, but a part of me thought that I was cheating on the woman with whom I shared such deep mutual adoration, and with whom I had fallen so completely and madly in love.\n\nAt the same time, it also felt good to be held once again. Even before she died, McKayla made me promise that I would find someone else to fall in love with. I promised only to placate her, and truly, I never conceived the notion that I would ever find anyone who could even come close to matching my feelings for McKayla.\n\nLike her Mom, our daughter is a cuddler, and after McKayla died, we spent many nights crying in each others's arms. That ended as we adjusted to the fact that she was gone, and then Maureen started high school and went to college.\n\nIt just felt so good to be held, even if it was by a woman I barely knew.\n\nNichole stirred a few minutes later, and pressed herself back against me.\n\nMy arms were still wrapped around her and I pulled her close, feeling the warmth of her body. She turned her head and I reflexively kissed her.\n\nHer lips lingered on mine for just a second, then she pulled away and turned so that we were both laying on our sides, facing one another.\n\n\"Regrets?\" She smiled knowingly. I didn't say anything. It was like she could read my mind. \"You've never been with anyone since she died, have you?\"\n\nAll I could do was chew on my lip. Nichole's hand caressed my shoulder and then she took my hand supportively.\n\n\"I understand,\" she whispered gently, and a chill ran down my spine. \"I can see it in your eyes. It was almost two years after Michael died before I would even consider going out with anyone. I know you're comparing me to her. I know you're wondering if she's upset with what you're doing. I've been there.\"\n\nI had to close my eyes and take a deep breath.\n\n\"It's been six years,\" I said softly. \"I should be over this by now.\"\n\n\"Over this?\" Nichole shook her head sorrowfully. \"Amberle, listen to me: You will never get over it. Not ever. I think about Michael every day of my life, and he died sixteen years ago. I knew him growing up, and even though we were only together for three years, he was my one and only true love.\"\n\nI choked back tears.\n\n\"How did you go on?\" I whispered.\n\n\"I got up every day because Michael would have been pissed off if I didn't,\" she said simply. \"We had no kids, but our families are close. I had to go on, for his parents and mine, for my brothers and sisters and his, too. I met another man, who was wonderful to me, and we were happy, at least for a while . . . happy enough to have a beautiful baby boy. Not a day goes by that I didn't wish I have Michael's child, too. At least then, I'd have a part of him with me always.\"\n\nHer voice trailed off for a moment.\n\n\"You are too young to dwell on your wife's death for the rest of your life,\" Nichole said after a long moment. \"But finding someone new doesn't mean that you've forgotten her, or that you love her any less. Your heart will always be hers, just as mine will always be Michael's. I think that's part of the reason why my second husband strayed so often. He knew that as much as I loved him, there was always going to be a part of me that would never be his.\"\n\n\"Did you love him?\" I dared to ask. \"Your second husband, I mean.\"\n\n\"Yes.\" There was regret in her voice. \"He's a good man, and a wonderful father. We met in graduate school, and he deserved more than I could give him.\"\n\nI reached over and brushed the hair out of her eyes. \"So am I going to be damaged goods for the rest of my life?\"\n\n\"Only if you want to be,\" she replied. \"When I got married again, I wasn't in a good place to be in a relationship. You might be ready. I wasn't then, even though I wanted to be. You are the only person who knows if you're ready.\"\n\nNichole took my hand in hers and kissed it. We lay next to one another in silence for a moment before she spoke again. \"So what about last night?\"\n\n\"You tell me.\" My face flushed at the memory of her soft, gentle caresses. \"I didn't figure you to be into girls.\"\n\n\"I went to Wellesley. If you didn't at least make out with another girl, they thought something was wrong with you,\" she giggled. Wellesley (not to be confused with Wesleyan) is a selective all-women's college in Connecticut, one of the Seven Sisters. While she was most certainly exaggerating a little, it's probably fair to say that there are more than a few LUGs (lesbians until graduation) in the student body. \"What about you? You seem very straight to me.\"\n\nAll I could do was shrug. \"I guess I'm more bi than gay. I'm not really sure if I believe in gay or straight anymore. If McKayla taught me anything, it was that love doesn't care about chromosomes or sex or anything like that. I think we fall in love with people, regardless of their sex. Have you ever been with a woman?\"<br>\n\n\"Beyond making out? No,\" Nichole flashed me a pernicious smile. \"And even then, that was when I was in college . . . over twenty years ago. Maybe we were both a little too drunk to be thinking clearly last night.\"\n\nShe paused for a second and squeezed my hand before I could speak.\n\n\"But I feel like there is just something . . . something.\" Her voice trailed off as she searched for the words. \"Something I can't explain.\"\n\nWe lay there staring into each others's eyes for a minute. My mind raced.\n\nYes, it could have been the liquor the night before, but deep down, I knew there was something else. We both knew what it was like to lose a spouse. We had both held them as they died. We soldiered on for our families. We acknowledged birthdays and anniversaries and wondered what might have been. We burst into tears over simple things, like being unable to open jar of pickles or fill car tires with air because those are things McKayla would have done for me.\n\nThat didn't explain our seemingly-mutual attraction.\n\nPlenty of people have lost a loved one. There are support groups that help one another through the dark days. And almost none of them encourage their members to make out with others in the group as part of the healing process.\n\nWhen I met McKayla, I think I knew deep down that we were going to fall in love from the moment that I first saw her. It took a couple of months for me to come around, but it was always there.\n\nI didn't feel that way about Nichole. Sure, she was smart and pretty. We shared some common interests, but even as we lay in the bed together, there was a little bit of doubt in the back of my mind as to where our relationship might go, if we were to have one at all.\n\n\"You're a wonderful kisser,\" I said, and that made her smile.\n\n\"So are you. I told you yesterday that you might get more than just the spoons.\"\n\nWe both laughed.\n\n\"May I call you?\" I asked playfully.\n\n\"You most certainly may,\" she replied. Her lips pressed against my fingertips. I closed my eyes as she suckled on the pads of my index and middle fingers and gasped.\n\n\"I don't suppose you can stay for a couple of days?\"\n\n\"I'm sorry, but no,\" Nichole signed. \"My ex and I are on a week-on/week-off schedule with Stephen. I was supposed to get him back yesterday, so he's staying with my brother and his wife until I get back.\"\n\nA part of me was actually kind of relieved that we wouldn't be able to pursue our relationship . . . well, whatever it was that we had going on . . . immediately. I needed some time to think, and to talk to my family and friends.\n\n\"Maybe you could come up to New York and stay with me,\" she said after a minute, a hopeful tone in her voice. In truth, that would be very easy. I didn't have any commitments I couldn't get out of, and no real obligations, but I didn't want to rush into anything.\n\n\"I'll see if I can clear my schedule,\" I smiled.\n\nWithout another word, she leaned in and kissed me gently. My heart skipped a beat and she caressed my cheek with her hand.\n\nI knew I was in trouble when she pulled back and I felt disappointment.\n\nShe went in to shower first and I was tempted to follow her in, but she didn't invite me and I didn't ask. I lay in the bed, resisting the temptation to masturbate, until she came out. A part of me wanted to watch her dress, but I resisted that, too.\n\nBy the time both of us were cleaned up, we found the other four in various stages of packing/dressing/hangover recovery. They had all planned for early/mid afternoon flights, and since that was something I didn't have to worry about, I told them I'd take care of the check-out with the rental agency.",
        "Melinda cooked breakfast for the six of us, which she says was the easiest meal she had prepared in a long time. Apparently, in her marriage, she has herself, a husband, two wives and eight children: quadruplets who were sixteen and in high school, three who were nineteen and in college, and a daughter who was twenty two and had just graduated from the Naval Academy and received her commission.\n\nI love my little girl . . . excuse me, young woman . . . more than life itself, but I if I had eight children, I think I'd go bananas. Although her living arrangements seemed odd to me (and this is from someone who had a lesbian marriage before they were legal), they worked for Melinda and her family, so who am I to judge?\n\nWe took care of the things on the check-out list and then the other five girls loaded their things up in Melanie's rental SUV. I gave my old friend a warm hug and thanked her for inviting me along. I promised to keep up with my new friends.\n\nNichole was the last to load up. We shared a secret smile, and then she gave me a quick embrace. I turned my head and found her lips pressed against mine for the briefest of seconds.\n\n\"I'll be back to see you,\" she whispered in my ear.\n\n\"I can't wait,\" I replied.\n\nI'm sure the other girls saw us, but no one said anything, at least not to me. Nichole got in the car and they drove away.\n\n****************\n\nI have been out of the dating game for so long I don't know what the proper etiquette is anymore. Could I call her the next day? Three days? What about text or email?\n\nMelanie posted some pictures on the Facebook that night when she got home and tagged us all, so I got to make some snarky comments about my new friends.\n\nThe next day, Nichole called me. I was sitting out on the deck beneath the awning and reading a book on my iPad. Maureen was off at her part-time job.\n\n\"Hey, there,\" she said.\n\n\"Hey, there, yourself.\" All I could do was smile. \"I take it you got home okay.\"\n\n\"Yes,\" she replied. \"Although I got stuck in Charlotte for three extra hours.\"\n\n\"See?\" I said in a teasing tone. \"You should have stayed for a day or two.\"\n\n\"I wish I could have.\" There was a wistfulness in her voice. Of course, she had to work and be a mother to her son, where I could pretty much lounge around whenever I wanted. There was a long pause before she spoke again. \"About that . . . would you like to come up next weekend?\"\n\n\"This coming weekend or the next one?\" I asked. I switched over to the calendar app.\n\n\"Um, not this weekend; I'll have Stephen,\" she said. \"How about the sixteenth?\"\n\nI frowned to myself. \"I can't. Maureen goes back to school and we're moving her into a new apartment. What about the thirtieth? You could come back here and stay though Labor Day Monday if child care wouldn't be an issue.\"\n\nShe didn't say anything for a minute, and I could hear here shuffling a calendar. \"Don't want to come to New York?\"<br>\n\n\"I love New York,\" I said. \"There's only one problem with me coming to visit you.\"\n\n\"What's that?\"\n\n\"I'm out, and you're not.\"\n\nNichole started to say something, but stopped herself. She knew I was right.\n\n\"Look,\" I took a deep breath. \"I don't know what you think about us. Hell, I don't know what I think about us. I like you, and if you don't want anything more than just hanging out, that's fine with me, but if you do want more than that, I need to know if you're at least interested.\"\n\n\"I like you, too,\" she said, and I could hear a tremor of fear in her voice. \"I mean, I really like you. But you're right. Coming here might not be such a great idea . . . at least not right away.\"\n\nNeither of us spoke for a moment.\n\n\"What are you thinking?\" I finally asked quietly.\n\n\"That I've lost my mind.\" Although her words were flippant, I knew exactly how she felt. The conflict, the doubts, the uncertainty; all of those had raced through my mind just before my first date with McKayla. \"What are you thinking?\"\n\n\"That I can't wait four weeks to see you again,\" I whispered. Sure enough, because of her custody arrangements and my schedule, it would be almost a month before we could get together again.\n\n\"Can you travel during the week?\" she asked suddenly.\n\n\"I'm retired,\" I replied simply. \"I can pretty much travel any time.\"\n\n\"I have a business trip next week.\" I could practically hear the gears turning in her head. \"Baltimore on Monday and Tuesday, then DC from Wednesday to Friday. Would you like to meet me there for a couple of days?\"\n\n\"I would love to,\" I breathed. It had been so long since I felt the tingle of anticipation in my stomach. And if I would let myself admit it, it felt so good!\n\n\"Excellent.\" She sounded relieved. \"I'll get the hotel information for you.\"\n\n\"Lovely. I can probably only stay for a couple of days,\" I checked some of the other days on my calendar. \"We're taking Maureen up to school on Thursday, but I can come up for Monday and Tuesday, at least.\"\n\n\"Okay.\" She sounded just as nervous and excited as I did. \"Oh, and Amberle?\"<br>\n\n\"Yes?\"<br>\n\n\"When I woke up this morning, I wondered where you had gone.\"\n\n****************\n\nThe next week seemed to drag on. Nichole and I talked a couple of times. There always seemed to be a nervous undercurrent in our conversations. I think we both just needed to know what we wanted, if only for our own sake.\n\nIt took Maureen about a day to figure out that something was up.\n\n\"You've met someone!\" She seemed positively giddy when we went out to dinner one night.\n\n\"I wouldn't go that far,\" I blushed, and hoped she would be okay with my seeing someone new. I had dated a little bit while she was away at school, but for the most part, after McKayla died, I didn't go out very much. I couldn't bring myself to even consider opening my heart up again. \"We both want to take this slow.\"\n\nMaureen asked about Nichole, and we did what girls do: we went shopping. Truly, I didn't need any new clothes, but I did need to spend some time with my daughter. She helped me pick out a couple of new outfits. I refused to try on some of the things she suggested; I was forty-four years old, not twenty-two, and there are few things I hate more than people being dressed inappropriately for their age.\n\nI did ask that she not tell her grandparents; McKayla's mom and stepdad, Suzie and Don, had been trying for a while to set me up, but a part of me felt like I was betraying them if I went out with someone else after being so in love with their daughter. I know it was irrational of me, but if things didn't work out between me and Nichole, I didn't want to have to face them about it unnecessarily.\n\nThere was also a little nagging voice in the back of my head that doubted that I was ready for another relationship, even after so long.\n\nBefore I left, I promised Maureen that I'd be back in time to get her moved into her apartment at school.\n\n\"You deserve to be happy, Mommy,\" my daughter told me. \"And even if things don't work out with this girl, it's nice to see that smile again.\"\n\n\"What smile?\"\n\n\"The one you used to have when you and Mom were holding hands.\" I was touched that she seemed to be genuinely pleased that I was interested in someone else. \"By the way, the next time you talk to Aunt Melanie, tell her she owes me a hundred bucks.\"\n\nMy connecting flight was in Pittsburgh, which seemed strange to fly north and past where I wanted to go, then come back, but that's what you get when you live in a place with a po-dunk airport that has no direct flights anywhere.\n\nNichole told me she had business meetings all day Monday and part of Tuesday, so I was flying in late Sunday afternoon. She had rented a car for the three hour drive from New York to Baltimore and sure enough, she was waiting for me on the curb at Thurgood Marshall Airport.\n\nMy heart raced when I saw her leaning back against the car. She was wearing a thin blouse and nice pair of jeans. Her sunglasses held her hair back. She smiled at me. I walked over to her and smiled back.\n\nWe stood there for a long moment, each wondering if the other was going to make a move.\n\nFinally, she opened her arms and I stepped into a warm embrace. She kissed me on the cheek.\n\nI put my carry-on suitcase in the backseat of the rental sedan, and we drove off. The sun was just setting as we pulled into the Inner Harbor area.<br>\n\n\"Have you eaten yet?\" Nichole asked conversationally.\n\n\"Not since lunch,\" I replied.\n\n\"What do you like? Steak? Seafood? Cheesecake Factory? Sushi?\"\n\n\"I'll eat just about anything. You pick.\"\n\nShe drove along the interstate to downtown Baltimore, then we followed Pratt Street along the Inner Harbor area, all the while listening to the Garmin spit out directions.\n\nSoon enough, we pulled up to a place called Ra Sushi, which is a chain that has several locations throughout the country. She parked in a spot along the street and we got out.\n\nRa is what I consider to be a \"Vegas\"-style sushi restaurant. The crowd is young and hip, the ceilings are high and the music is loud. All of the servers are thin and pretty. You can get some traditional sushi and sashimi, but mostly the food is some type of fusion sushi with lots of spice and \"flair\" that makes traditional sushi chefs wince.\n\nThere wasn't much of a crowd on Sunday night and we were seated quickly. The pulsing dance music made it very easy to have a private conversation in a public place.\n\n\"Do you trust me?\" Nichole asked playfully.\n\n\"I don't know that I like the sound of that,\" I smiled back.\n\nWhen the server came back with our drinks, Nichole ordered a plate of sushi and sashimi, a couple of appetizers and a bottle of plum wine.\n\nThe two of us made small talk. She was in town trying to drum up business. While her family owned a produce shipping company that supplied the lower west side of Manhattan with food, she was into real estate.\n\n\"After Michael died,\" she explained to me, \"I got a very generous life insurance settlement, plus I won a wrongful death lawsuit against the driver who killed him. So I took the money and bought the apartment building where we lived. I live on a full floor of the building. I lease out the first two floors as retail and office space. Everything else is apartments. The building sits on Central Park West and you can hit Columbus Circle with a water balloon slingshot from the roof, so I can charge premium rates for the location.\"\n\nOf course, she was able to buy the building fifteen years ago after her husband died before the price of real estate in New York was merely high and not ridiculous.\n\n\"Do you have problems filling vacancies?\" I asked.\n\n\"Not really,\" she replied. \"There's always someone who wants to move in. The apartments are easy. But I hate trying to find tenants for the stores. The trick is to find a business that will last. Most places, especially restaurants, fold within a year. It can get expensive turning over a space every six months. Plus, if a location earns a reputation as being bad for business, it's hard to fill it. I'm hoping to convince some folks from here to branch out and open a store in New York.\"\n\n\"Have you ever thought about selling?\"\n\n\"A couple of times. Trump says he wants to buy the building, but he keeps low-balling me.\" Our food arrived and we dug in. She paused for a moment. Our eyes met and I knew what she was going to say before her lips formed the words. \"It was also where Michael and I lived, and I'm not ready to sell our home yet.\"\n\nI reached across the table and took her hand. That was the real reason why I hadn't sold the house McKayla and I raised Maureen in; it was way more space than I needed, but it reminded me of the happiest years of my life, and I wasn't ready to part with it. She squeezed my hand appreciatively and we shared a secret smile.\n\nNichole changed the subject to something more light-hearted and talked for the rest of the meal. She made a valiant attempt to grab the check away from me, but I swatted at her hands until she acquiesced.\n\nThe drive back to the hotel was short.\n\nI found out Nichole only stayed at Marriott properties so she could accumulate and use their rewards points. We were staying at the Residence Inn on Light Street. Even though she was only going to be there a few days, she liked the suite setup and they have valet parking. I wheeled my small suitcase behind me and we went up to her room.\n\nWe had carefully avoided any discussion of our relationship so far.\n\nThe suite she was staying in had a bedroom that was separated from a small living room and kitchenette. We were staying far enough up that the ever-present sound of sirens couldn't be heard through the thick glass, nor would the catcalls of the prostitutes in the alley behind Peter's wake us in the middle of the night.\n\nIt was almost nine o'clock when we got back to her room and I found out that she like True Blood as much as I did, so we settled in. Both of us changed into full top and bottom pajamas. We both liked to see Eric's naked rear end and I found out the only person who actively cheered for someone to punch Sookie in the face more than I did was Nichole.\n\nAs the show opened, I found myself propped up against the headboard with Nichole snuggled up beside me. My arm seemed to naturally fall around her. Halfway through, her fingers wrapped around mine. Neither of us spoke, except to sigh disappointedly when someone invariably rescued Sookie Stackhouse from some problem of her own making.\n\nThe show ended after giving us a couple of nice shots of Alcide's backside and the promise of more bloodshed in the next week's espisode.\n\nMy heart started to race as Nichole turned off the TV. Without a word, we brushed our teeth side by side. I climbed into the queen-size bed as she flipped out the lights.\n\nThe soft glow of the street lights shone around the curtains.\n\nI lay flat on my back, Nichole slipped under the covers. One hand brushed my breasts as she draped her arm over me. My nipples crinkled up immediately.\n\nWe lay like that for several long minutes. I could hear both of our hearts pounding.\n\nEver so gently, I took her hand in mine and brought it to my lips. She drew in a sharp breath as I suckled on her fingertips.\n\nHer hand brushed my chin and drew my lips to hers. Nichole fell into my open arms, our clothed bodies pressing together.\n\nThose lips. Pouty. Full. Soft.\n\nThey tasted so sweet. Our tongues intertwined. I rolled her over so she was laying on top of me.\n\nOur legs seemed to instinctively cross and I pushed my hips against her. She pushed back and my sex started to tingle.\n\nI brushed the hair out of her face. She pulled back. Our eyes had adjusted to the semi-darkness. Nichole's hazel eyes seemed to bore right through me.\n\nDesire smoldered in her gaze, although she also seemed hesitant and tentative.\n\nNeither of us spoke.\n\nMy hand caressed her cheek. She turned her head just enough to nibble on my palm.\n\nKnowing that I would probably have to make the first move, I pushed her on to her back. She seemed to breathe a sigh of relief as I took charge.\n\nWe kissed again, her eyes closed. She gasped with surprise\u2014and delight\u2014when my hand squeezed one of her ripe breasts.\n\nI made no move to undress her, but we began to explore one another with our hands and our tongues.\n\nMy lips ran down from her cheek to her ear to her neck. My teeth raked her collarbone and she let out a low, throaty moan.\n\n\"What can I do to you?\" she whispered. \"I've never\u2014\"\n\n\"Shhhhhhhh,\" I purred into her ear. \"Don't speak. Do what comes naturally.\"\n\nThis may have been Nichole's first time with a women, but she was a quick learner and a very good kisser.\n\nHer hands ran over my body. Up and down my back. Across my shoulders. She palmed the cheeks of my ass and pulled my hips to hers. Our breasts mashed together.\n\nNichole's teeth gently bit into the soft underside of my neck when her fingers found their way under my pajama top, leaving a trail of goosebumps across my back.\n\nI bit my lip and stifled a scream when her hands maneuvered to my front and she cupped my breasts. She rolled my nipples between her fingertips. She was a natural!\n\nIt became a contest between us to see who could get the other topless first. Mind you, there were no losers, even though it was my tits out in the cold air before hers.\n\nNeither of us are very large in the chest, but that meant neither of us had a lot of flop or sag. In fact, for two forty-something year-old moms, I'd say we were pretty fucking hawt.\n\nI sat back, my hips straddling hers. Our eyes devoured one another. While not as big or nice as McKayla's, Nichole's breasts were still perky and only sank a little to the sides. When I was younger, I often wondered why guys liked boobs. Then I put my hands on my wife's, and I realised that they are pretty damn awesome.\n\nLeaning over, I kissed my lover a little hungrier this time. I pressed my chest forward and her mouth sucked one of my nipples right in.\n\nMaybe it was because I hadn't been with anyone for over six years\u2014actually it was probably closer to six and a half, since after McKayla started treatments for her second bout with cancer, sex was the furthest thing from our minds\u2014but I almost creamed my panties right there.\n\nMy hands went to her breasts and I began to knead them gently.\n\nI straightened my legs so I was laying on top of her. I resisted the urge to shed my flannel pajama bottoms.\n\nNeither of us seemed to be in any kind of rush, which was good. I savoured each pass. Each caress.\n\nNichole cried out when I went to work on her breasts, my teeth raking her skin. The chiseled points of her nipples hardened in my mouth and she reflexively began to grind her hips against me.\n\nWe dry-humped a little harder, and my toes began to tingle.\n\n\"Yesssss,\" she moaned when I bit gently on her earlobe.\n\nI lost myself in the moment as Nichole and I held one another. I didn't think. I didn't worry. All I did was react. I let my id fully take control.\n\nHer touch was so soft. So gentle.\n\nOur bodies fell into an easy rhythm. The only sounds in the room were our shortened breaths.\n\nWith each pass, my covered mound pressed against Nichole's just a little harder. A little faster.\n\nShe gave up fondling my breasts and instead grasped me by my shoulders, her nails digging into my skin.\n\nAll the while, my lips never left her body. If they weren't nibbling on her neck or tugging on her ear or bathing her breasts with soft kisses, they were pressed against hers.\n\nWhen her legs began to tremble, I knew she was close. Her skin was flush and warm.\n\n\"Oh, Amberle,\" she whispered, and threw he head back into the pillow. Her eyes were closed, her jaw clenched in ecstasy.\n\nI leaned in and gave her one last hard, desperate kiss just as her body went limp. I collapsed into her arms and felt another woman against my bare skin for the first time in half a dozen years.\n\nWhen I awoke the next morning, I was on my back. Nichole's head lay on my shoulder, her breath soft and regular and warm.\n\nI kissed her forehead and she purred in her sleep.\n\nWhat surprised me when I first woke up was that I had no regrets. What didn't surprise me was how much I had missed this feeling.\n\nThe alarm went off a few minutes later. Nichole stirred in my arms.\n\n\"Good morning, sleepyhead,\" I whispered.\n\n\"I don't want to get up,\" she said softly.\n\nMy lips pressed to hers. \"I'll be here when you get back.\"\n\n\"I'll hold you to that,\" Nichole slipped out of the bed and she went in to the shower. When she came out, I lay in the bed, watching her dress. Admiring her confidence and beauty. She gathered her things and headed out to her day of meetings.\n\nOn her way to the door, she paused only long enough to lean over and kiss me. One hand slipped under the covers and she squeezed my bare breast. I bit her lip and our tongues pressed together. Her hand went down to my waist and she tugged at my pajama bottoms. \"Make sure these are gone when I get back.\"",
        "Nichole kissed me one more time and then went out to face her day.\n\nWhen she returned, I was waiting for her.\n\nNaked.\n\n******************\n\nI lay there watching Nichole sleep until she stirred. Her sandy blonde hair had fallen over her face and I brushed it away. She looked so peaceful. We were both naked and the air-conditioned room seemed a little brisk. That didn't bother me, mind you; it gave me an excuse to cuddle up close to her under the nice down comforter.\n\nSomehow, we had both managed to find a way to sneak away for a long Labor Day weekend at a little bread and breakfast in upstate New York. Maureen was back at school and my days were made up of working, volunteering for my favourite charities and trying to figure out where my new relationship was going.\n\nAfter our first trip away, Nichole and I had found two other occasions to get together. She was traveling a lot for business, trying to find tenants to rent retail space in the building she owned on Central Park West. Being basically retired, I could go pretty much anywhere at any time. We got together in Boston for a couple of days one week when she didn't have her nine year-old son, and she had made arrangements for him to stay with her folks over Labor Day.\n\nWe were both tentative at first. Me because I had never really thought of pursuing a relationship after my wife McKayla died almost six years ago. Nichole because she had never been in with another woman before me.\n\nWhat neither of us could deny was that there was the mutual attraction between us. I don't think I was in love with her, at least not then. I didn't feel the kind of insatiable burning desire that I felt from the first moment I met McKayla, nor did I know, right then, that I would give Nichole my heart and soul without reservation. Still, she made my heart skip a beat when we kissed, and I missed feeling her close to me when we were apart.\n\nComplicating matters was the long-distance nature of our relationship. She lived in New York. I lived at the beach. We were both well-established where we were. Mobility was less of an issue for me, but I had spent the last two decades of my life in my house and I really didn't feel like giving that up. She had lived her entire life in Manhattan and had a school-age child to consider. Of course, that was assuming that we were going to pursue a long-term relationship.\n\nThat was the furthest thing from my mind right then. After McKayla died, I never had a rebound. I just went on with my life, which centered around our daughter. Now that she was out of the house, it was nice to think about me for a change. If I would have allowed myself to think on my relationship with Nichole as something more than a weekend together here or there . . . well, that was a discussion for a later time.\n\nAs things were, I was just happy to fall asleep and wake up with another person in my arms.\n\nThe first couple of times we were together, I think being with a woman was awkward for Nichole, but what she lacked in technique, she made up for with enthusiasm and a fair amount of natural talent. I loved that she didn't seem to be in a rush of any kind when it came to our relationship, either in a physical or emotional sense.\n\nWe spent a lot of time just kissing and making out. She never seemed to be racing to get into bed, but nor was she timid. A part of me reveled in the excitement of a new lover. The chase, the seduction, the exploration. Those were things I missed very much.\n\nAt the same time, she wasn't smothering or overbearing. Nichole seemed to enjoy my company, but I never got the feeling that she spent her time in New York pining away for me. We communicated a lot by text and email, and called one another a couple of times a week.\n\nFor my part, I was just happy to find a kindred soul of sorts. After all, we were both widows. We were both financially secure and neither of us needed to have someone else in our lives. It was a nice place to be.\n\nMy hand brushed her cheek and she smiled contentedly. She rolled on to her side and into my arms. Her head fell on to my shoulder.\n\nHer warm breath brushed my skin. I kissed her forehead and drifted off, our bodies intertwined.\n\n******************\n\n\"I think Emily is going to come home with me.\"\n\nI smiled. If Emily was coming, her parents probably were, too.\n\nMaureen was going to be home from school for a long weekend. A long weekend that included what would have been McKayla's and my nineteenth \"wedding\" anniversary. We were never legally married; two decades ago, that wasn't an option. We presented ourselves as a couple and raised our daughter in a household that was more loving than the kind many kids with heterosexual parents have.\n\nFor years, it always pissed me off when straight couples would get a divorce, apparently not realising how lucky they were to have all of the legal entitlements and responsibilities that comes will being married to the person you love more than anything. As I got older, my feelings mellowed. Legal or not, my marriage to McKayla was before God and our friends, and my love for her knew neither bounds nor limits.\n\nShe died shortly after our thirteenth anniversary, but every year after that, I did something to celebrate the day, even if it was just with our daughter.\n\nA part of me wanted to spend the day alone, moping and brooding. It was pretty much the one day per year of self-pity I allowed myself. Having Maureen and our dear friends Kevin and Melanie Westcott plus their kids at home would be a pleasant diversion, if only for a few days.\n\n\"That's great,\" I said. \"I'll fix up the guest rooms.\"\n\n\"Thanks, Mommy,\" she said. \"I'll see you on Friday. I love you.\"\n\n\"I love you, too, Pumpkin.\"\n\nThey ended up arriving late on Thursday night. Duke is about a five hour drive and they left right after getting out of class. I was in bed, but I heard the garage door open and close (it's a mom thing), voices in the kitchen, and then the house got quiet again at about half past midnight.\n\nWhen I went out the next morning, I found that all of the cushions had disappeared from the couches. They had somehow found their way into Maureen's room where they had been made into a giant blanket fort. I peeked my head and saw my guests were still sleeping, so I closed the door and went back down the hallway before I allowed myself to have a good laugh.\n\nIn many ways, Maureen can be as silly and whimsical as her mother (and I don't mean me), and I knew that she would always have my wife's impish grin and mischievous giggle.\n\nThe kids emerged from the bedroom at about ten o'clock, which was earlier than I had expected. I had watched Emily Westcott grow up from when she was about seven years old, which was when her mom and stepfather got married. Kevin was McKayla's best friend and roommate from college. Melanie had a son who was two years younger than Emily, and was a senior in high school. Kevin and Melanie had another son together shortly after getting married and the five of them have been among the dearest friends anyone could ask for.\n\nI gave Emily a big, motherly hug. In some ways, she was a second daughter to McKayla and me. Like Maureen, she was smart, mischievous and beautiful. And like my daughter, she had gotten in to Duke, which was where her mother had gone to school and was right up the road from where they had grown up in Raleigh. The two of them lived together in an off-campus apartment they shared with a pair of twins, David and Isabel Thompson. All four were good kids. Aside from the usual college life, each was on the dean's list and they all seemed to have the world at their feet.\n\nA part of me expected Maureen to bring a boy home one weekend, but so far, that hadn't happened. When she was in high school, Maureen never dated much. Part of it was that she spent a lot of time studying. I think she knew from the time her mom was first diagnosed with cancer, she wanted to be a doctor, and like her mom, when she decides she's going to do something, she never half-asses it. Not only was she going to medical school, but she was going to get into the best one on God's Green Earth. Duke was always her first choice, I think mostly because it was close, but if Harvard, Columbia or Johns Hopkins had come calling, she'd have gone there in a heartbeat. And she knew that she needed to get high test scores and grades to get in to any of those.\n\nThat's not to say that she didn't have a life in high school, but school was always her first priority. She graduated at the top of her class, and I believe\u2014although she never admitted it to me\u2014she was truly pissed off that she \"only\" got a 35 on the ACT.\n\nJust like her mom, our daughter always had a lot of friends, although she only had a handful with whom she was really close. She dated a couple of boys, but none seriously. We talked frankly and openly about a lot of things, including drinking, drugs and sex. I let her and a few of her friends drink at my house on occasion provided that they turned their keys over to me at the beginning of the night, never left and showed me exactly what it was they were in too. To the best of my knowledge, she smoked pot a couple of times, but never did any harder drugs or popped pills.\n\nWhen she was fifteen, one of her best friends got pregnant. We talked about being sexually active and I offered to put her on the pill. She declined at the time, although one day when she was seventeen, she asked to go on birth control. I took her to the doctor that afternoon and got her started, no questions asked. I also made sure there were always condoms at the house for both her and her friends.\n\nI didn't want to be the permissive parent who let their kid do whatever the hell she wanted, but I was realistic enough to understand that my daughter was going to find a way to do thing things I may not approve of whether I liked it or not. So I made up my mind that I was going to put her in the position to make the best choices possible, and that she fully comprehended the consequences of fucking things up.\n\nAll in all, Maureen was a pretty good kid. She was too smart for her own good, but she didn't talk back much, generally did what I asked her to, stayed out of trouble and at 19 years old, was well on her way to becoming the world's leading oncologist.\n\nI cooked up a good, old-fashioned southern breakfast of eggs, bacon, hotcakes, biscuits and sausage gravy. The pair spent the rest of the day hanging out on the deck and in the hot tub.\n\nKevin and Melanie showed up right before dinner. Their sons Toby and Anthony had stayed at home. Apparently, they had football games they didn't want to miss and Toby was old enough to babysit his brother for a weekend.\n\nWe put salmon and steaks on the grill and had a nice big meal with the five of us. We stayed up late talking as old friends do. My friends made me laugh and cry, sometimes at the same time. Kevin and I chased the girls around the house with the Nerf dart guns that were seemingly hidden in every nook, cranny and cabinet as Melanie soaked in the jacuzzi. The girls got into the digital picture frames and spent hours scrolling back through a lifetime's worth of photos, giggling at their fashions from middle school and recalling funny vacation stories from all of our years together.\n\nAbout halfway through the night, Nichole called via Facetime and for a little while, there were six of us talking and chatting away. I excused myself for a few minutes to have some alone time with my lover.\n\n\"I wish I was there with you,\" she lamented.\n\n\"Me, too,\" I said, and truly I meant it.\n\n\"Maybe you can come up to New York in a couple of weeks,\" Nichole suggested. \"I want you to meet my family.\"\n\nI drew in a sharp breath. \"Are you sure?\"<br>\n\nShe only smiled. \"Yes. . . I think so.\"\n\n\"You can't 'think' about it, Nichole.\" I didn't mean to lecture her, but this was something very serious. \"Once you're 'out', you're 'out' for good.\"\n\n\"I know.\" She smiled. \"And yes, I want you to meet my family. Now go back to your friends. We'll talk later.\"\n\n\"Good night, honey.\" I blew her a kiss through the iPad camera.\n\nShe winked and closed the window.\n\nThe others gave me a good ribbing. Melanie even dug into her purse and made a big show out of giving a hundred dollar bill to Maureen. \"You were so right about your mother and Nichole, Reenie. Now we're even.\"\n\nI just rolled my eyes.\n\nThere were kisses all around and I hit the sack right before one o'clock.\n\nWhen I went to bed, I didn't feel quite so lonely. As much as I missed my wife's touch, when her friends were around, it was like she was there with us. I fell asleep cuddled up against a wall of pillows and under the heavy comforter.\n\n******************\n\nThe next day started out as a quiet one for me. I was the first one up. Melanie joined me out on the deck with a cup of coffee as Kevin cooked up some breakfast. We didn't see the girls until about noon.\n\nI suggested going somewhere for dinner, but Kevin told me that plans were already made and all I had to do was show up. I just shrugged, and a part of me was happy to not have to think about entertaining my guests. I was also eternally thankful for having such supportive friends who I knew were thinking not only about the mother and friend they had lost, but me as well.\n\nMy brother Ander and sister Brin both called. Both had made generous donations to the local Hospice House in McKayla's name. Even Maureen's father Travis made a point to send me a nice message via Facebook.\n\nAfter the girls emerged from Maureen's bedroom, Melanie packed the four of us went out to the local spa for a girls's afternoon of pampering. It was just before dinner when we got home and Melanie rushed to get me dressed. Kevin had disappeared and would be meeting us where ever it was we were going.\n\nI was not surprised that we ended up at the little Italian restaurant which had been \"our spot\". It was where we went on our first date, and where we celebrated birthdays and anniversaries and graduations and everything else. The couple who own the place are some of the nicest people on the planet and always went out of their way to accommodate anything we ever asked for.\n\nWhat did surprise me was that they had closed the open air section of the restaurant for our little group. It was a garden area in the center of the building, giving it the feel of a little Italian villa. Usually they had eight or ten tables set up along with a bar, but tonight there was just one big elliptical table, and as we were escorted to our table, I could tell other guests were ticked off that the prime seating was all taken.\n\nKevin was already there; I later found out this was something he and Maureen had cooked up. McKayla's parents Don and Suzie were also seated and waiting for us. I gave them each a warm embrace. Over the last two decades they have been nothing but completely supportive of McKayla and me. My own parents had both died before I graduated from high school and Don and Suzie filled that role in my adult life. I even called them \"Mom\" and \"Dad\".\n\nLike my other friends, they had spent the last six years trying to fix me up on dates with friends and acquaintances, going so far as to scold me in a familial way for not moving on after a couple of years to find happiness with another person.\n\nIn the center of one of the long sides of the table was a single red rose in a small vase centered on a single plate. I knew this was to be McKayla's seat. I sat to the left of the empty chair and Maureen sat on the right. The others filled in four of the other five seats.\n\n\"Who else is coming?\" I asked Maureen.\n\nShe only winked.\n\n\"That would be me.\" The voice behind me made my heart skip a beat.\n\nI turned and saw Nichole. She walked over and gave me a familiar, if formal hug. She kissed me on the cheek but then quickly pulled away. I was at a loss for words.\n\nFortunately, Melanie quickly took over. \"Everyone, this is Nichole Galloway. She's a good friend of mine . . . and Amberle's.\"\n\nMy friend introduced her to everyone, who received her enthusiastically. Privately, I feared introducing anyone new to my daughter and McKayla's parents, but that had apparently been taken out of my hands. I didn't know quite how I felt about that right then.\n\nNichole took a place across from me, between Kevin and Don.\n\nThe servers simply started bringing food. We had been coming here so often, the owners knew exactly what we liked and soon the table was filled with calamari and mozzarella and bruschetta and carpaccio and steamed mussels and anything else you could think of.\n\nAfter the introductions, neither Maureen nor McKayla's parents turned the conversation to Nichole, which was a relief to me.\n\nI knew from experience that if Alan and Marissa wanted to make a big production out of a meal, they were going to. The first wave of food was quickly followed by a second, and then a third. The portions were all small, but it seemed like they were cooking the entire menu for our table.\n\nDon and Suzie asked Maureen and Emily about school. Melanie dispensed investment advice. I tried not to make eyes at the woman sitting across from me.\n\nAt a lull in the conversation, Nichole spoke up. \"So, tell me about McKayla.\"\n\nIt could have been taken as awkward, but no one took it that way. We were out to celebrate our anniversary, and we would have eventually gotten around to talking about her at some point, even if Nichole wasn't with us.\n\n\"She was the smartest, prettiest, funniest girl in the world,\" Kevin started, and I could see him smile at the memory. \"We were roommates in college . . .\"\n\nThroughout the rest of the meal, everyone shared their stories of McKayla with Nichole. We broke out our iPads and smartphones and even some old-fashioned pictures (remember those?). Nichole seemed to soak it all in.\n\nFor the rest of us, it was a new, wonderful experience. The first couple of years after she died, we always talked about McKayla with sadness and loss in our voices. As time went on, the feeling changed to fond, nostalgic remembrances. But there was always this undercurrent of, \"what might have been\" hanging over us.\n\nThis time, we were sharing our beloved daughter, wife, mother and friend with someone who never knew her. Where there had always been grief underlying our feelings before, on that night, laughter rang throughout the patio. We recounted stories and relived memories in what truly became a celebration of the life of the person symbolised by the empty plate to my right. And in a way, it was like she was there, laughing along with the rest of us.\n\nDon and Suzie even told us a couple of new stories that they had forgotten over the years, like the first time he took her sailing and they capsized their small boat, when she pitched a no-hitter for the boys' Little League team and the first time she had asked why one squirrel was climbing all over another squirrel in the backyard.\n\nWhen it was time for the main course, the servers brought out several dishes and served them family-style, so everyone could get a little bit of something.\n\nExcept for one plate, which Alan brought out personally. The owner of the restaurant gently set the rose to the side and placed the dish at the empty place. The crab-stuff lobster was steaming hot, served in a heavy cream sauce over a bed of risotto and asparagus.\n\nIt was McKayla's favourite meal, which they had intended to be a short-term special. She loved it so much that if they knew we were coming, Alan and Marissa would order the ingredients just to make it for her. It hadn't been on the menu for many years.\n\nAlan said nothing, but leaned over to give me a kiss on the cheek and squeezed my hand, as I wiped the tears from my eyes. Like Nichole, he also knew what it meant to lose a spouse, and in the weeks and months and years after McKayla's death, he and his new bride had always been there for me and Maureen in whatever ways they could.",
        "Our joyous conversation went on, even after Maureen started picking at her Mom's food. She even plucked the lobster out of its shell and dropped half of it on my plate with a wink.\n\nAs I sat there, with my dearest friends and family, I never wanted that night to end.\n\nWhen we got up to leave, Melanie and Nichole were walking towards the door. I stopped them before they could get away. \"Where are you staying?\"<br>\n\n\"We got Nichole a room at Embassy Suites,\" Melanie said nervously.\n\n\"Go get her stuff and bring her to my house,\" I said.\n\n\"I, um . . .don't want to intrude.\" Nichole shifted uncomfortably.\n\n\"You're already here,\" I snorted. \"And you're not staying in a hotel.\"\n\nThe pair of them gave me a resigned smile, knowing that I wasn't in the mood to argue. Besides, it was my anniversary, and I could do whatever the hell I wanted.\n\nI rode back to the house with Don, Suzie and Maureen. \"Thanks for doing this for me.\"\n\n\"Before you get angry, Mommy . . .\"\n\n\"I'm not mad, sweetheart,\" I took her hands. \"I appreciate you guys thinking of me, and I'm happy to have you here on our day.\"\n\n\"But . . .\" There was no sliding anything by my daughter.\n\n\"But I wanted to introduce Nichole to you all when I was ready.\"\n\n\"Amberle, we're all on Facebook,\" Suzie said in a matronly, but unpatronising, way, \"You two have been all over each other for two months now. We knew. Even if you didn't.\"\n\n\"I just don't know if I'm ready,\" I whispered.\n\n\"You are, Mommy,\" Maureen said gently. \"You are. Even if Nichole isn't the one, you deserve more than living by yourself in a house that's too big for you without kids or pets.\"\n\n\"It just feels strange.\" I fidgeted with my wedding band. \"On our anniversary.\"\n\n\"The only thing that's strange is that you've spent six anniversaries alone,\" McKayla's mother said. \"We all just want you to be happy, Amberle.\"\n\n\"I know.\" Maybe this was for the best. After all, left to my own devices, I probably would have lived out my days as an independent, but brooding, widow. I had no plans on remaining celibate for the rest of my life, but I kept putting off any thoughts of dating or moving on with convenient excuses. \"Thank you.\"\n\nThe four of us arrived back at my house ahead of the others. I went straight to the kitchen and popped open a bottle of Reisling. Don and Suzie brought their things in and took them to the back bedroom. I made a note to monitor the couch situation in case Maureen and Emily decided to make another blanket fort. Kevin and Melanie would be staying in the fourth bedroom, which probably meant Nichole and I would be sleeping together.\n\nOr at least next to one another.\n\nA few minutes later, our guests arrived. The conversation picked right back up from where we had left off at the restaurant. As the night wore on, McKayla remained the center of our discussion. Maureen broke out our wedding video and albums.\n\nNichole was a good sport through it all, and she seemed genuinely interested in my past life. The deluge of memories was both overwhelming and comforting at the same time.\n\nAfter a couple of hours, Don excused himself and the girls retreated into Maureen's bedroom.\n\nLike me, Kevin and Suzie were engulfed in their own pasts with our departed spouse, friend and daughter.\n\nWe stayed up until well after midnight when the others finally went to bed, leaving Nichole and I sitting on the couch, surrounded by photos, mementos and empty bottles of wine.\n\n\"She was a very beautiful woman.\" Nichole held our wedding portrait in her hands. \"I'd have gone gay for her, too.\"\n\n\"Yeah, well you have to settle for me,\" I smiled.\n\n\"And you are just as beautiful.\" She took my hands in hers. I scoffed. \"No, really, Amberle. You are just as pretty as she is. You just don't realise it.\"\n\nThrough my buzz, I couldn't tell if she was joking or just trying to make me feel better about myself.\n\n\"What's with the pointed ears?\" Nichole asked.\n\n\"My parents named me after a character in some books they liked.\" I smiled to myself, the thoughts of all the times McKayla called me her \"Elven Princess\" reminded me of her loving touch. \"Amberle Elessedil was an elf. McKayla was into all sorts of fantasy nerd stuff: Shannara and Lord of the Rings and all that. The elf ears were my sister's idea.\"\n\n\"Brin, right?\"\n\n\"Yes. She and my brother Ander are also named after characters in the same series.\" Like a lot of people, when I drink, the filter between my brain and my mouth usually disappears. I changed the subject suddenly. \"So why are you with me?\"\n\nNichole emptied her glass of wine and took a deep breath.\n\n\"Want to know the truth?\"\n\nI nodded.\n\n\"I'm not really sure,\" she sighed.\n\nThat made me feel better. Not.\n\n\"There's a part of me that's tired of putting up with shit from men,\" she poured the remainder of a bottle of zinfandel into her glass. \"It seems like all the single guys our age are either divorced with three kids or are in the middle of their mid-life crisis and want to date their daughter's friends. Or they need someone to take care of all their baggage and debts.\"\n\nI snorted sympathetically.\n\n\"And then you came along,\" she said with a wistful smile. \"You're smart and pretty and I'm fairly certain you don't need my money.\"\n\nThat much was true. Not to sound too arrogant, but McKayla made sure that Maureen and I would never want for money for the rest of our lives.\n\n\"Listen, Amberle, I'm sorry if my surprise visit upset you,\" Nichole said softly. \"I didn't know if it would be a good idea . . .\"\n\nI took her hands in mine, and looked her in the eyes. \"Don't be sorry, Nichole. I'm happy to see you and I wanted you to meet my family . . . and in a way it was right for you to be here with us tonight.\"\n\n\"Even on your anniversary?\"\n\n\"Yes, even on my anniversary.\" I took a drink from her wineglass. \"McKayla always said she wanted me to move on after she died. I know she would like you.\"\n\n\"So what do we do now?\"\n\nI reached out and pulled her to me. I kissed her gently. Her hands cupped my face and I lost myself to her soft touch.\n\n\"When we sober up, we're going to have a long conversation about that,\" I whispered. \"We need to talk about a lot of things . . . but for right now, we're going to bed.\"\n\nNichole didn't say a word. I took her by the hand and led her back to the bedroom. We changed, I took a handful of ibuprofen and we slipped under the sheets. I pressed my body back against her and she wrapped her arms around me as we dozed off.\n\n******************\n\nThe sun woke me the next morning. I reached for the covers, not realising that I had left the blinds open, but they weren't there.\n\nSomeone's head rested on my shoulder. I turned, expecting to see Nichole, but it was Maureen.\n\nI blinked the sleep from my eyes and it took me a moment to recognise that I wasn't in my room. Nor was I in my house.\n\nWe were sitting on the beach, the first rays of the sun coming up over the ocean. We were both wearing our pajamas, and I had a short robe on, too.\n\nMy daughter was waking along with me. I'm sure she was just as confused as me.\n\n\"Did you dream about Mom?\" Maureen blurted out.\n\nI nodded.\n\n\"Did she say anything to you?\"\n\nI nodded again.\n\n\"What did she say?\" Her voice trembled.\n\nOver the last six years, both of us have dreamt intermittently of McKayla, but never on the same night. Usually it's when we're under a lot of stress; I think it's our brain's way of coping.\n\n\"She said to tell you that she loves you more than anything.\" I cradled our daughter in my arms. In my dreams, images of my wife are fleeting. I can feel the love we shared radiating from her. But she almost never speaks. And try as I might, I can never touch her. It's like she is always just out of my reach. I try to pull her close to me, and just as we are about to embrace or kiss, I wake up, often drenched in sweat and shaking.\n\n\"Mom hugged me last night,\" Maureen whispered. \"She didn't say anything. She just held me. I think she was trying to tell me something, but I couldn't hear the words or read her lips. And then I woke up here with you.\"\n\nI smiled and kissed the top of her head. We both had the same dream. But I had heard what she said.\n\n\"Is this the last time she's going to visit us?\" There was fear in our daughter's voice. \"Was that good-bye?\"\n\n\"Of course not,\" I said, although I would be lying if the same thought hadn't crossed my mind. \"Look at me, Pumpkin . . . Your mother will always . . . always . . . be watching over us. She is with us everywhere we go. She laughs with us, she cries with us, her heart breaks with us and you will never be without her. And when we die, she will be the first person to welcome us to Heaven.\"\n\nMaureen started to cry softly. I choked back tears of my own.\n\n\"Your Mom was in our lives for fourteen years.\" I stroked Maureen's curly hair. \"Fourteen wonderful years beginning before you were born. And she gave us a lifetime's worth of love in the time that God let us have her. She loved you . . . no, she loves you . . . completely and unconditionally. You are her pride and joy, Maureen, and don't you ever, ever forget that.\"\n\nThe two of us sat there on the beach, in the spot where McKayla used to hold me as we would watch our daughter play in the sand or swim in the ocean. When the sun was well over the horizon, and signs of life were heard from the house, we gathered ourselves up and went inside to attend to our guests. I held my daughter's hand as we walked back to the house.\n\nIt turns out that was not the last time Maureen and I dreamt of McKayla. It was, however, the last sleepwalking episode either of us had, and it was the only time we ever had the same dream.\n\nI love you, Amberle, and I always will, McKayla had also told me in the dream. I don't know if my mind was playing tricks on me, but it seemed very real. She smiled at me. She smiled with that loving, haunting smile that made my heart melt. The smile that made you think she knew something you didn't. The smile that turned my world on its side and made a straight girl go gay. You have a life to live, my dear Elven Princess. Don't spend it alone. Tell Nichole that Michael and I will be waiting for you."
    ],
    "authorname": "HLD",
    "tags": [
        "amberle & mckayla",
        "nichole"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/tapestry-ch-01"
}