{
    "title": "Take a Load Off",
    "pages": [
        "After a quick sauna, I make my way into the bodywork practice room. I'm a regular here, and the room at the exclusive spa has been pre-reserved for me. I'm a managing partner at my firm and upon turning 40, I gifted myself biweekly deep-tissue massages to help with the stress, not to mention the aches and pains of an athletic guy entering his 40s. The midtown spa, really a wellness center, is equipped with a Finnish sauna, a hammam, an ice bath, a modest pool, the works. The massage therapists I've had -- whether male or female -- have always been top-notch. I enjoy the various modalities and approaches and don't yet have preferred therapists. Hence it's always a surprise who I get.\n\nI undress and lie face down on table, get under the warmed sheet, and adjust my head on the cushioned face cradle. Right on schedule, there is soft knock and a woman's voice asks, \"Ready?\" \n\n\"Yep, all good.\" I'm facing the floor so don't see what she looks like, and as I mentioned, I don't mind who it is since all the therapists I've had have been great. I can only see she's wearing indoor workout shoes and loose pants. She closes the door and stands still for a moment. I hear a shuffle of papers and gather that she's reading my profile and notes from past therapists. \"Marc? I'm Irene. How are you feeling today? Any special focus this week?\"\n\n\"Not really. The usual, with special focus on neck and shoulders.\"\n\n\"You got it.\" She sounds very efficient and professional. She places her hands on me over the sheet to do that preliminary rocking thing massage therapists do. Probably to connect and to test how tense I am. I'm pretty loose from the sauna, but it still feels nice.\n\nShe then gently folds the sheet half over so that my lower body is covered, pours oil into her hands, and standing at the head of the table, starts to work on my back in long strokes from neck to top of hips. There's always that brief moment at the beginning of a session when you wonder if the therapist will have the right touch. Indeed she has a strong yet calming touch, as good therapists do. I turn my mind off right away to enjoy the next 75 minutes. \n\nShe proceeds to work down my back body, using her elbows to work my buttocks. As she's working, I can sometimes feel the soft swell of her breasts which is very pleasant. But I am used to this with the female therapists. We all have body parts. And the wellness center is not where I go to meet women. \n\nShe works all the way down to my feet to finish up my back body.\n\n\"OK, Marc, you know the drill. I'm going to lift this sheet so you can turn facing up, and don't forget to scoot down so your head is off the cradle.\"\n\n\"Yes, ma'am\". She chuckles slightly at that. I think that's the first time she reacted in quasi conversational way. I flip over and am vaguely relieved I don't have a semi. Sometimes lying facing down and being pressed into the table gives me a slight erection. I'm sure they are used to this, but still. She drapes the sheet back on me so that it covers my hips and legs and tucks a bolster underneath my knees. As she turns back to the stand where the oils are, I sneak a peek at her figure. Hey, I'm a red-blooded guy, what can I say?\n\nAs I had surmised, she is wearing drawstring cotton or linen pants that are somewhat loose yet don't conceal her form. She's got a small waist and slim hips, blessed with a curvy butt. I'm an ass man, so this is very easy on the eyes. And I was faintly surprised to see that instead of a shirt, she has on a bikini top. I'm going to assume she is dressed this way to allow more freedom of movement in her work. I had never seen that before, but I guess there's nothing wrong with it. Her breasts are smallish (B-cup?) so it's not like she's falling out of it. I take this all in during the 3 seconds it takes for her to add oil to her hands.\n\nShe proceeds to work my front, focusing on shoulder girdle as requested. Now that I'm facing up, I can detect her faint scent when she leans in close. She's not wearing any perfume, just a clean shower fresh scent along with her personal smell -- a smell I can only describe as clean skin. Wholesome, yet somehow sexy especially when I recall that she is basically working in her bra. \n\nShe skips my hips and folds up the sheet starting from my feet so now I have a four-fold sheet across my hips. My cock is definitely awake so I am thankful for the sheet which lends some extra weight. She spends extra time on my quads (per previous request in my file). Again, she makes use of not only her hands but also her forearms, elbows, and sometimes her shoulders to work on the big leg muscles. It's making more sense now, the fact that she's skimpily dressed on top. But part of the side effect is I can feel her breasts brushing against my legs, which only feeds my hard-on. It doesn't help that I can gaze at her from under my half-closed eyes and can see that her nipples are very perky. \n\nShe's now at the foot of the table and with both hands are working on my feet. I do like footwork and am enjoying the symmetry of both feet being worked on at the same time. Her smooth strong hands strongly knead my toes and arches. Amazing. At one point, she interlaces her fingers with my toes and holds them like that for a bit. The technique is oddly intimate but feels really good, especially when she releases them.\n\nI rarely chat with the therapists but today I am moved to ask, \"Are you new here? You have some different moves compared to past therapists I've experienced here.\"\n\n\"Yes... I just started here 2 days a week. I do a lot of different things. I'm a dancer and also do another kind of therapy.\"\n\n\"That makes sense you're a dancer. You seem to use your body in novel ways and very efficiently.\"\n\n\"Thank you, yes, I'd like to think so. Also as a dancer, we receive a lot of bodywork and I know what feels good for people who exercise a lot, like yourself.\" I appreciate that she can tell I work to keep myself in shape. By this point, she is working her way up my legs to do a last pass on my quads (again, per previous request).\n\n\"And what is the other therapy work you do?\"\n\n\"You could say I'm a sex therapist.\" I'm sure my cock perked up in the dark room upon hearing this.\n\n\"Did you go to school for that?\" I mean, what do you say when a woman wearing a bikini top is working your thighs in a dark room and tells you she's a sex therapist?\n\n\"Not exactly. I used to work in a sex toy store -- a nice upscale one, geared towards couples, not one with sticky floors. All day long, I would chat with people about what they were looking for or looking to achieve. Eventually I found myself basically giving informal counseling. Over time, by word of mouth I would get requests from people wanting to learn how to enjoy sex better, for themselves and/or for their partners, how to choose toys or other aids, stuff like that. I'm not having sex with them, but I do often provide them with very graphic information.\"\n\n\"Don't you get a lot of pervs?\"\n\n\"Sometimes, but I've gotten very good at detecting them right away and weeding them out. They're harmless enough, and I derive great satisfaction counseling the people who need the training. Plus I get paid well for it, so win/win.\" As she's nattering on, she is by this point gliding her warm oiled hands up my thighs, from above the knees and finishing at the tops of my thighs with the web between her thumbs and forefingers terminating right at my crotch line.\n\nBy now, my cock is more than half hard, as my mind runs over the scenario of her dispensing sex ed, handling sex toys, facilitating demonstrations... I feel somewhat pervy that I'm getting turned on, but she didn't have to divulge that she's a sex educator now, did she?!\n\n\"Would you like me to massage your penis? Looks like could use some attention there. Based on what I just told you, you can rest assured I can provide relief without attachment or taboo.\"\n\n\"Er, I mean, I'm not gonna say no. I should tell you I'm an attorney. You're not going to yell harassment after the fact, are you? Should I get you to sign a waiver?\" I chuckle to myself at this.\n\n\"Ha, no. I know you're a lawyer from your profile. Just so you know, I don't offer this to all the guys... or girls, for that matter. Only because I like your vibe and mainly because I feel like it, OK?\" \n\nShe removes the sheet, and my cock springs up into the warm air of the room. I am fully hard now, yet I am amused and intrigued at the same time. I wonder where this will all lead.\n\nShe lathers up both hands with oil then begins to rub my lower belly with one oily hand and with the other hand, she takes hold of my cock and starts to take long pulls on it. Something about the one hand on the belly is so comforting that oddly it doesn't feel completely like a sex act. Although of course, it totally is a sex act but with the quality of bodywork. Strange, pleasant, exciting.\n\n\"Hmmmm, that's nice. Your hands are wonderful.\"\n\n\"You have a beautiful penis. It's a nice handful.\" It's true, my 8-incher is girthy. Her hand can barely close around the widest part near the base.\n\nAfter a moment, the hand that was on my belly transitions to my cock as well, and the hand that was massaging my cock slips lower to nudge my legs apart and proceeds to massage my balls. Sometimes a fingertip would glide over my asshole and lightly indent into it. I can feel my cock creaming up precum. I probably could come relatively quickly, but she's keeping things at a pace that doesn't indicate any need to rush.\n\n\"So Marc, I can continue this way or I can do this with my body. Up to you.\"\n\n\"Isn't this a lot of extra work for you?\"\n\n\"Believe me, I enjoy the so-called work. I don't do a single thing I don't want to do.\"\n\n\"Well, I would love to experience whatever you are offering.\"\n\nShe slowly draws her hands off my body and reaches down to release the drawstring of her pants. They drop to the floor, and I see she has on a teeny tiny bikini bottom. She proceeds to shrug that off, and even in the semi darkness, I can see that her pussy is smooth except a small dark triangle high on her mound.\n\nShe sees me lick my lips and asks, \"Do you want a taste, Marc?\"\n\n\"Yes, Irene, I would love a taste.\"\n\n\"I have only one stipulation: keep your hands to yourself. Think of it as I'm massaging you with different parts of my body.\"\n\nShe kicks off her shoes, and immediately I notice her beautiful feet with ruby-polished nails. She carefully climbs on the table and positions herself so that her pussy and ass are above my face and she is facing my cock. She lowers her hips so that they are mere millimeters from my face. I take a deep inhale -- she smells so fucking good. The nectary tangy scent of her pussy coupled with the musk of her ass closer to my nose is tantalizing. I absolutely love licking pussy; also, she wouldn't know this, but I am an anal sex enthusiast and love eating out the ass of a woman. \n\nI stick out my tongue and give an exploratory lick along the hood of her clit and the skin around her pussy and perineum. She is completely smooth from clit to ass, with not a hint of stubble. I love it when women get waxed. It's very sexy to imagine them on the table getting taken care of, ending with the technician waxing the anal area. Just thinking about sexy Irene receiving such a treatment turns me on even more and I start eating her out in earnest.\n\nShe sighs softly and takes hold of my cock in her oiled-up hand again and resumes pumping my cock. For my part, I am greedily licking her pussy and eventually work my way to her asshole and swirl my tongue around her puckered star. Good Lord, what a lunch break this is. \n\nSuddenly I feel something wet on my cock and realize she is now licking and sucking on my cock as well. Just as she knows how to use her hands, she certainly knows how to use her mouth. I am bucking my hips rhythmically to meet her movements, spearing up my tongue into her ass with the same rhythm. Her pussy is creaming, and she is now working her clit with a free hand. I would love to grab her hips and ass cheeks with my hands but am diligently observing her stipulation. Believe me, it's difficult, especially since I ache to insert my fingers in her tight hole. At the same time, it's fun to be receiving and passively giving. I'm liking this.\n\nAfter some moments, she lifts off my cock and reaches for the oil again. She takes off her bikini top and slathers a good amount of oil on her perky breasts. She sits up to do this, so that she is literally sitting on my face with my tongue in her asshole. I reach for my cock and slowly pull on it as I rim her out and wait for the next move. Hey, she didn't say anything about not touching myself.\n\nShe leans forward again, pulls away from my face (tragedy!), and slithers towards my legs until her sexy tits are hovering over my cock. She undulates her body to massage my cock with her firm tits, their nipples hard as pebbles. . So hot and I get to admire her pretty ass gyrating in my line of vision. I am halfway to blowing my load, but again, I am curious to see what this sex educator will offer up next. I aim to be a good student.\n\nAfter several minutes of the titty massage, she again sits up and walks on her knees towards the foot of the table, until her hips are aligned with mine. She reaches for the oil and slathers on a generous amount to her ass cheeks and, leaning forward, works some the oil into her ass cleft and asshole. It's clear she's enjoying the display as she coyly spreads her cheeks and teases a fingertip into her anus from time to time. The light is dim in there, but I can make out enough detail to appreciate. Fucccckkk. I forget myself and reach to touch her pucker with a fingertip, and she playfully swats my hand away.\n\nShe then adjusts her feet and legs so that she's in reverse cowgirl, her feet on the table framing my thighs, her hands pinned to the table on either side of my chest, and her back to me. She proceeds to rub her oily ass on my cock, sliding the cleft of her firm dancer's ass up and down my cock. It is amazing to experience this on my back while she's essentially suspended above me. I ache to slip my cock into her ass, but that has to be her move. If it happens. For now, I'm perfectly content.\n\nAfter a few moments, she reaches to the oils stand and materializes a vibrator that, of course, I had not noticed. \"Marc, I need you to support my hips now with your hands. You may put your hands on me.\" You don't have to tell me twice. I reach up and cup her glorious oily ass cheeks with my hands as I complement the frottage movement with my hips while gently pressing the cheeks inward to more tightly frame my cock. Supported by the tripod of her one hand and her feet on the table as well as my hands under her ass, she starts working her clit with the vibe. I guess the dancer's agility comes in handy.\n\nShe is openly moaning now. The teacher has become the participant. \"Marc, I'm very close. Put the head of your cock in my ass for when I come. Now.\" \n\nIt's a massive turn-on that she dispenses completely with me fucking her pussy and knows exactly what she wants. Clearly, we have a fellow anal lover in our midst.\n\nI am happy to oblige. I swivel my hands slightly so that my fingertips are facing each other near her anus and gently part the flesh of her seat. There is so much oil that my cock easily slips into the aperture. She bears down and groans her delight. After a few seconds, the tight ring relaxes somewhat, and I can feel the mushroom head of my cock slip a bit further inside. Absolutely heavenly.\n\nI fuck her ass with my cock head with short quick strokes as she brings herself off. \"Oh my god... oh fuck, your cock head feels so good in my ass! Mmmmm, I'm coming on it. Feel my asshole twitch on your cock as I cum. Ahhhhhh, yessssss...\" Indeed I can feel her ass pulsate on my cock -- one of my favorite things about anal sex. It's the most intimate and sensual moment, to be that connected with a woman in the peak of her pleasure and feel the tight glove of her ass squeeze my cock as she cums.\n\nShe lets go of the vibrator and continues to work her oil-lubed ass on my cock with her hands now on my shoulders. More than half of my fat 8-incher is pumping in and out of her ass now. Somehow I don't think she intended to go this far with me, but I'm not complaining. Her pussy is creaming onto my cock, adding to the makeshift oil lubrication, and the ensemble feels fantastic.\n\nShe must sense I need to blow my load soon and is speeding up her rhythm now. I reach around front and play with her clit with the pads of two fingers, while my other hand strokes her back and the base of her neck. What an amazing sight and sensation. A desirable woman, very knowledgeable about earthly delights, pleasuring herself on my cock with her ass. We move in perfect unison as I quicken my movements, nearly all my cock in her ass now. She alternates relaxing and squeezing her anus as my cock goes in and out.\n\nI feel the snake of my orgasm originate in my balls, and as we both piston away, I finally reach the point of no return and mash my hips up to hers to shoot up load of hot cum up into her rectum. She moans her appreciation and arches her lower back to grind her hips onto my cock, by this point completely sunken into her hot ass, her wet cunt dripping moisture onto my balls, and her tight ring stretched taut around the wider base of my cock.\n\nShe comes off her hands and reclines completely on top of me, folding her slim legs and resting her sexy feet on my shins. I wrap my arms around her and run my hands all over her oily front torso, tweak her perky nipples, gently stroke her clit, dipping my fingertips into her soft pussy. She is still lazily gyrating her pelvis onto my hips, my half-erect cock nestled in her slick tunnel.\n\nShe sighs deeply and says, \"You should know I have never done that with a client. Don't even think about over-tipping. Call it research for my work.\"\n\nAs I nuzzle her neck with my face and gently nip her neck with my lips and teeth, I ask, \"Do you make house calls? I am happy to volunteer as a research participant...\""
    ],
    "authorname": "POVscribe",
    "tags": [
        "analingus",
        "big cock",
        "fetish",
        "frottage",
        "masseuse",
        "reverse cowgirl",
        "shaved pussy",
        "small breasts",
        "waxed pussy"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/take-a-load-off"
}