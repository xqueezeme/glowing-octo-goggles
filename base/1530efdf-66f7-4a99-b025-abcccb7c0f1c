{
    "title": "A Kiss is Still a Kiss",
    "pages": [
        "Growing up in the same neighbourhood as Amy Jones and Samantha Williams, he'd known them from a distance since they were both knee-high to a grasshopper. But he couldn't remember a single time when the two of them were not together.\n\nIf either of them had been in the least bit plain, they would have drawn snide comments from other schoolchildren about their sexuality, no doubt, perhaps even earning nicknames suggesting that their closeness went beyond mere friendship. \n\nBut they were far from plain \u2013 Amy with her long golden hair and big green eyes, a few sweet freckles on her otherwise perfect face; Samantha with her long mousy hair, a little more demure than her blonde friend but just as breathtakingly attractive. As a result \u2013 and the fact that their parents were on the wealthy side - the two girls were the centre of the popular group in school, dating sports studs for the most part \u2013 though, of course, always on double dates \u2013 and always having someone to open doors for them. \n\nHarry had watched them grow up, turning into stunning young women, and naturally he had daydreamed about being with one or other \u2013 or both \u2013 of them. Harry wasn't a sports stud, though. He wasn't a spod, either \u2013 though his parents weren't rich enough to afford designer outfits like other studs, he wouldn't have said he was particularly ugly. He was just in that grey middle ground where most kids hang out in school, under the sign that reads \"nothing special\".\n\nThings changed when he won the lead in the school play in that final year.\n\nThe surprise wasn't so much that he did win the lead - Romeo, the star-crossed Montague of Verona \u2013 he had had some major parts in school plays before and had diligently worked at his acting through his years at school. The surprise was that Samantha Williams won the part of Juliet \u2013 it was a bit surprising she'd auditioned at all. Amy had auditioned too, but she didn't cut the mustard as an actress. The only explanation for their taking interest in the school play was that it was getting towards the end of high school, and they were obviously concerned about having something on their resum\u00e9 in the 'interests' section. \n\n\"What d'you mean it's no big deal?\" Finch's eyes were about as wide as the Mississippi when Harry told him who was to be his Juliet.\n\nHarry shrugged, \"It's just the school play.\"\n\n\"Yeah, you idiot, don't you see? You get to make out with Samantha Williams. You never seen the movie?\" \n\nFinch was a spod. A brain box with your classic beer-bottle glasses, who wouldn't get a girlfriend until he hit the jackpot with some clever business move that would bring plenty of gold-diggers out of the woodwork.\n\nThey were walking towards the first read through \u2013 Finch was the only one of Harry's friends to have been given a part, in this case the Friar, which was almost good casting.\n\nHarry dismissed his friend's drooling connotations, he said: \"I only get to kiss her once, and it's not like we're going to practice. And \u2013 it'll all be on stage, in front of everyone. Including her boyfriend.\"\n\nFinch laughed, \"You should slip her some tongue. Especially if that ape Jeb is watching.\"\n\n*\n\nThe girls were just a mystery to Harry: he was just eighteen and had never been close to one before. They looked so beautiful, they smelled so sweet, their laughter was music to the soul and their smiles could melt his heart in a moment. But he was always sure he wasn't good enough for them. Especially ones as beautiful and aloof as Samantha. He wasn't a jock, after all, and apart from the folks that returned again and again to perform in school plays, he wouldn't have said anyone considered him popular.\n\nSo it was quite strange to find himself kissing her \u2013 even if it was just for the play.\n\nFor a while, they just read through the lines. There were long, gruelling practices and even longer, more gruelling hours of line-learning. Harry had always been pretty good at learning his lines, but it was still the hardest part of a major production. Then, at last, they hit the stage and began to work on the actual performance. \n\nAfter a couple of weeks, Harry found to his surprise that he was quite comfortable around Samantha. She was beautiful, she was one of an unapproachable clique, but because of their close involvement in the play, he found he could forget about her beauty and previous aloofness, and just see her as another performer. \n\nThey were just two performers putting on a show, and though Amy came to watch every rehearsal, after a few practices, Samantha seemed to lose that sheen of cliquey aloofness and for the hour or two of each session, seemed almost to join with the performers' own loose-knit group. \n\nThen things stepped up a gear. They were practicing the scene in which Romeo and Juliet kissed for the first time. The play director, Mr Howard, took them through it, showing them where they should be on stage, how the characters would be thinking, acting, and so on. He didn't seem fussed that his two lead performers would have to kiss. \n\nThey took it from the top, running through the scene with Harry professing his love for Samantha \u2013 his mind completely on the lines, putting himself right in the shoes of Romeo himself. Then they came to the kiss and they both stopped, not really thinking that they'd actually have to \u2013 \n\n\"Hey, why have you stopped?\" Mr Howard yelled. \"Keep going! Harry, kiss her for God's sake. You two are supposed to be lovers!\"\n\nThe two of them paused a moment as it sank in. Harry looked at Samantha, beautiful Samantha, and a burning ache erupted inside his chest. Kiss her. He noticed a look of complete uncertainty pass over her pretty face as she looked at him. There was a snigger or two from some of the other performers as they watched.\n\n\"Come on, let's go back to the previous page and take it from there,\" Mr Howard said. \"And don't stop this time, imagine you are actually in love with each other.\"\n\nThey went back a page and Harry tried to imagine he was Romeo, not Harry, and that she was Juliet, not Samantha. Like jumping into a pool of ice cold water, he decided the best way to approach it was dive straight in, get the shock over quickly and move on.\n\nHe leaned into her, imagining they were in love, he looked into her beautiful brown eyes and his lips touched against hers briefly. Her skin so soft, so sweet, he could smell her delicate perfume, even if it was only for a moment. Then they continued with the next line.\n\n\"Wait, wait, wait!\" Mr Howard broke in. \"What was that? You two ever kissed anybody before, or what? Come on, you're not supposed to be brother and sister, guys! Make me believe you're in love. This is all about believability. If the audience don't believe you're in love, they're not gonna care a dime when it comes to the tragedy at the end of the show.\"\n\nThey went back a page again, and this time when the kiss approached, Harry tried to forget he was Harry and she was Samantha. He tried to imagine he was some stud like Jeb, and Samantha was his girlfriend. He leaned into her and really kissed her, tenderly, gently, tasting her lips and breathing in her sweet scent. And she kissed back, closing her eyes and moaning softly as he ran his fingers through her silky hair.\n\nIt seemed to go on forever, the most amazing kiss he'd ever had, stirring the warmth of arousal throughout his body. Her hand slipped around to the back of his head, pressing him to her, keeping the kiss going beyond what seemed necessary.\n\n\"Now that's what I'm talking about,\" Mr Howard said as they broke apart at last. \"On with the show!\"\n\nHarry noticed that there were no sniggers now, the other kids in the hall were silent. Looking into Samantha's beautiful eyes now, he saw a look of what could only be surprise, shock even. She seemed to be slightly flushed after the kiss, and she was looking completely astounded at him standing there in front of her. After a brief moment, she blushed and then quickly went on with her next line, putting the kiss behind her.\n\nAt the end of the rehearsal when Mr Howard called time, Samantha hurried from the stage, leaving Harry to stand there scratching his head. And just before she hugged her friend and led her out of the hall, Amy Jones flashed a strange glare at Harry, as though warning him away from her friend.\n\n\"What was it like, what was it like?\" Finch demanded, as Harry stood watching Samantha and Amy walking away.\n\n\"Incredible,\" he replied, his voice seeming far away.\n\n\"Damn, you two were really going at it \u2013 I can't believe she let you do that!\"\n\n\"No,\" Harry said. \"I can't believe it, either.\"\n\n*\n\nThe next day, Amy came up to him just before rehearsal got going, and she did not look happy. \n\n\"I don't know what you've done to dupe her into liking you,\" she said with pure venom in her voice, \"but you'd better un-do it fast, jerk, or you'll be sorry.\"\n\n\"Wh-what?\" he stood there a little dazed, not quite knowing what she meant.\n\n\"Sam. If you don't back off, I'll tell Jeb, and he'll beat you into a pulp.\"\n\nBut Harry wasn't concerned about the threat of Jeb, and in his daze he didn't even worry about Amy's ferocious anger. His head was in the clouds, mulling over the blonde's first words to him there: I don't know what you've done to dupe her into liking you... \n\n\"What d'you mean she likes me?\" he said, his insides burning with an intense mixture of excitement and uncertainty. \n\n\"God, ever since that kiss she's gone all gooey, I mean God, you're such a dork,\" Amy said before turning her head and storming off to where Samantha sat learning her lines. \n\nWas this all part of some cynical ploy to humiliate him? Setting him up for a fall? Harry looked over to where Samantha sat, seeing her with a new-found interest. So incredibly beautiful \u2013 how could she like him? It was ludicrous.\n\nUp on stage, Mr Howard was getting everyone arranged for the opening scene. Harry walked to the front of the auditorium, to sit next to Finch on the front row on the opposite side to Amy and Samantha. Amy noticed him looking their way and flashed him an angry warning glare. \n\nBut then Samantha turned and saw him, and gave him a warm, pretty smile. \n\nDamn.\n\nOf course Harry smiled back, but he turned away from her quickly as he felt the blush spreading across his face. His heart was pounding inside his chest, and he even found he was slightly breathless. But how could she like him? Maybe it was just a friends thing. Maybe Samantha had told Amy she thought Harry was okay, not such a bad guy, not the \"dork\" the popular kids assumed that everyone outside their clique was.\n\nBut it was that word \"gooey\" that Amy had said that caused Harry to burn inside: that surely meant something.\n\nThen he was up on stage, and though Samantha was sometimes up there with him, with the lines flying thick and fast he had no opportunity to stop and think. But with Mr Howard aiming to put most of this early work into the more tricky and important scenes, they soon came to the kissing scene once again.\n\nAs Mr Howard got them going, Samantha looked at Harry, and he thought he detected some fire in her large brown eyes. She grinned impishly, and he was forced to return the expression, without knowing why she was suddenly being nice to him.\n\nAnd when the moment came, he was rather surprised to find that it was Samantha that leaned forward to kiss him this time, becoming the instigator of the move rather than the reluctant ice maiden.\n\nShe kissed him, and fireworks were going off all over the place. It was so incredible, so powerful, the softness of her lips, the sweet scent that filled his lungs, the warmth of her touch and the sweetness of it all. He never wanted it to end, it was the most incredible experience, his body was completely alight, his cock hard as stone as they kissed so tenderly.\n\n\"Okay guys,\" Mr Howard said, \"that's enough \u2013 we're not staging Nine and a Half Weeks here.\"\n\nShe broke apart from him, and as the two of them continued with their lines, he saw genuine delight in her face \u2013 she couldn't be that good an actress, surely. Not in her first major production. \n\nThen the scene came to a close, and Mr Howard decided to go back to a scene with Benvolio, in which neither Romeo nor Juliet were present. Harry wasn't involved and neither was Samantha, but as he walked off-stage to his surprise she accompanied him, and said furtively: \"Where did you learn to kiss like that?\"\n\nA shot of heat shot through his heart. He gulped, and said: \"Uh... well...\"\n\n\"You're a really good kisser,\" she said, all warm smiles and so heart-stoppingly beautiful. \"I'm sure stage kisses aren't usually like that.\"\n\nAnd then Amy was there, taking Samantha away from him without even acknowledging his presence or existence. Figured.\n\n*\n\nHarry's preconceptions about Samantha had been rocked \u2013 as much by her change in attitude towards him as by her kiss. The aloof picture formed over his school years had begun to tumble down, and goodness how he wanted it to! He wanted to be with her, breathing her in, kissing her and not stopping for anyone. \n\nBut was it really possible?\n\nLying awake at night, he thought about her pretty smile, and his cock was like a pillar of rock \u2013 so much so that he found it very difficult to get to sleep. The feelings running through him were so strong \u2013 wonder at the experience of kissing her, surprise at what she had said, bewilderment and a little dread at the attack from Amy Jones. His biggest feeling was hope, hope that he could kiss her again like that, hope that it was more than just a stage kiss, more than just acting. \n\nBut the trouble was, the only time he could get alone with her \u2013 or at least, away from Amy \u2013 was up on stage, right in front of everyone. Otherwise, Samantha and Amy were inseparable. \n\n*\n\nAll through school the next day, Harry acted as though nothing was going on. He acted as usual in class, talking to his friends, Finch, the others, smiling and chatting as though everything was as it had always been. Finch questioned him about his Juliet, but Harry brushed it off easily.\n\nHis calm was put on. Under the surface, a million butterflies of pure uncertainty were fluttering around his insides. He couldn't stop thinking about Samantha, he really could not stop thinking about that last kiss, and he could not wait for that evening's rehearsal, to see her again, to kiss her again.\n\nYet when the time came, Harry's hopes were dealt a crushing blow: Mr Howard said they'd nailed the more intimate scenes, where Romeo and Juliet kiss. They would spend the rest of the time until the dress rehearsals on some other scenes. There would be no more kissing of Samantha until the actual staging of the production.\n\nHe hid his disappointment well, but secretly he was mourning that he would have no excuse to get close to Samantha. And that dufus Jeb was in the audience for this rehearsal, too \u2013 sitting next to Amy and her boyfriend as though he were a chaperone. Amy had to have requested his presence.\n\nStill, she was still there, just the sight of her seemed to make his heart beat faster. Stunning. And when she looked at him, she smiled as though he was an old friend rather than someone she considered a \"dork\", as Amy apparently did.\n\nHe managed to put aside his feelings of disappointment and roll on with his scenes, and thankfully he forgot about it all. The play was going pretty well \u2013 Finch was a surprise hit as the Friar \u2013 while his death scenes with Samantha were really quite moving.\n\nSo it was something of a surprise when she came up to him at the end and said quietly: \"Would you mind doing some extra practice with me some time?\"\n\n\"Extra practice?\" he didn't quite get what she meant, mainly because it was so unexpected.\n\n\"Yeah, I mean... if you want to.\" She was toying with a strand of hair \u2013 was she nervous? How could Samantha Williams be nervous? With the pause growing awkward, she said: \"I mean we could run over some of the scenes a little more \u2013 so we're more confident. Mr Howard said it would be a good idea to do some practice out of hours.\"\n\n\"He did?\"\n\n\"Yeah,\" she smiled warmly. \"He said there wasn't enough time for everyone to get together often enough to really get good enough.\" \n\nHarry saw Amy and Jeb stand up, heading slowly towards the steps up to the stage. There was little time left. And funnily enough, he noticed that Samantha also reacted to them approaching, as though she had similar feelings with her best friend and boyfriend on the way over.\n\n\"Uh... so how about it?\" she said almost under her breath, pressing him to answer before Amy came over.\n\n\"Uh yeah...\" he said, not believing that she wanted to spend more time with him. His heart was turning in cartwheels, \"absolutely.\"\n\n\"Great!\" she smiled cheerfully \u2013 the most beautiful picture ever. She slipped a small piece of paper in his hand and said: \"Why don't you come over to my house about eight?\"\n\n\"Sure,\" he said, his voice drying up from this surprising development.\n\nShe smiled again, then as Amy and Jeb and Amy's boyfriend Greg came up behind them, she put a finger to her lips to furtively urge him to keep quiet about their extra practices.\n\n\"You were great!\" Amy said, putting an arm around her friend before almost physically forcing her to turn her back on Harry and walk away, leaving him standing there with powerful hope burning sensation in his chest.\n\n*\n\nThe clock seemed to move so slowly towards eight o'clock that evening. After the rehearsal, Harry went home and surprised his parents slightly by refusing supper. Instead, he went to the bathroom and took a long shower, making sure he was as clean as clean could be.\n\nHe couldn't be certain that Samantha wanted to do anything... intimate... perhaps she did just want to practice the scenes, go over their lines, ensure that the play would be a huge success. But Harry couldn't stop thinking about the possibility that she might want to see how far their wonderful kiss might go unchecked and out of sight of the other play performers \u2013 and Amy.\n\nHe felt it was all so unreal, this seemed so unlikely \u2013 a nobody like him thinking, hoping, he would be given a chance with a somebody like Samantha. A beauty like her. He felt like the ugly duckling that had woken up one morning to find he was a magnificent swan.\n\nAnd the biggest hint had to be that Samantha hadn't wanted him to let Amy know he was coming over.\n\n*\n\nAt last, eight o'clock approached, and he found the address she'd written on that piece of paper \u2013 she must have written it before that rehearsal \u2013 and headed out to find her house.\n\nSomewhat unsurprisingly, her house was in the wealthy side of town \u2013 Beauleigh Heights, no less \u2013 and when he turned up at the gate, Harry's jaw dropped in awe. It was a mammoth house, a mansion! Her parents had to be very well-off. Business magnates, lawyers, surgeons or something.\n\nHe felt very small walking up the drive to the front door. And as he stood in the porch in front of the door, he felt very nervous. He wasn't exactly experienced with girls \u2013 what if he mis-read her signals? It could all go so badly wrong... And at the edge of his mind there was Amy, who would somehow organise his destruction if she found out he wasn't keeping his distance from her best friend.\n\n\"Harry!\" \n\nHe didn't have time to be nervous \u2013 before he even rang the doorbell, the door opened and there was Samantha, looking divine as usual. Tonight, with her hair tied in a long ponytail, she was dressed in a pair of soft pink sweatpants and a spotless white tank-top that left her midriff tantalisingly bare as well as the soft swell of the top of her pert little breasts, which made it difficult for Harry to keep his eyes on hers.\n\n\"Uh... hi...\" he said.\n\n\"I'm so glad you made it!\" she leaned forward and kissed him on the cheek. She was wearing a trace of expensive perfume \u2013 just enough to heighten her femininity, catch his attention, but not enough to swamp him or asphyxiate him. ",
        "\"Uh...\" he felt like a simpleton, his tongue tripping over itself. She was so gorgeous, how could he concentrate on the play with her looking like that? \n\n\"Come on up to my room,\" she said, closing the door behind him, then leading him up the sumptuous staircase that led around the entrance hall up to a landing in the huge house. Harry wondered where Samantha's parents were, dreading meeting them a little \u2013 he wasn't dressed in expensive clothes, after all, he'd probably present a poor impression.\n\n\"You know, Amy's been warning me about you,\" she said as they walked. \n\n\"She has?\"\n\n\"Yeah. She thinks you're a dork because you're not into the whole jock-football thing.\"\n\n\"Oh,\" he said, not so much surprised that Amy thought he was a dork, but that Samantha would reveal her secrets to him like that. \n\n\"You know, I thought you were a bit of a dork too,\" she said with an amused glance, \"before you opened my eyes.\"\n\nHis heart was pounding again \u2013 he was almost surprised she couldn't hear it, it was so loud, so forceful. What was she saying? \n\n\"You know, I think it's easy to see anyone outside your social circle as a bit of a dork,\" she said. \"I mean, you probably weren't particularly fond of me before... well... anyway, here we are \u2013 this is my room!\"\n\nSamantha's bedroom \u2013 he was standing in Samantha Williams' bedroom. What kind of a miracle of fate was that? If he'd told Finch that one day he'd be standing in Samantha Williams' bedroom, Finchy would have laughed his socks off and urged him to go see a shrink. But here he was.\n\nIt was an immense bedroom \u2013 Harry was pretty sure that you could have put an entire floor of his house in her bedroom. Spacious, light, breezy, it had no clothes lying about like in the normal teenager's bedroom and everything was spotless. No doubt they had a maid or something.\n\n\"You like it?\" she asked.\n\n\"Uh... yeah...\"\n\n\"It's got a gorgeous view, too. We only moved in a few months ago.\" She closed the bedroom door, shutting them into the great luxurious bedroom. \"Now,\" she said, a flicker of fire in her eyes, \"let's get down to business, shall we?\"\n\nHarry pulled out his copy of Romeo & Juliet from his back pocket, and said: \"Where do you want to go from?\"\n\nHe looked up to find her right there, standing just inches away from him. \n\n\"I want to go from where you kiss me,\" she said, and leaned towards him, her soft lips touching gently against his before opening up into a sweet, wet kiss.\n\nIt was amazing, the sweetest experience ever, she kissed him and brought her hands up to support his head as she did so, while he found his hands moving to her back, pulling her towards him, kissing her back \u2013 so tenderly, so sweetly. \n\nIt went on for an age and a while, and periodically he would open his eyes as if to check he wasn't dreaming. She was so beautiful, lips locked to his, tight little body pressed to his, her exquisite scent filling his lungs. \n\nHarry was trembling when they finally broke apart, but Samantha was beaming broadly, an ecstatic smile on her pretty features.\n\n\"You are so amazing,\" she said breathlessly. \"I didn't know it was possible to kiss someone like that.\"\n\nHarry was speechless.\n\n\"Are you okay?\" she asked.\n\n\"Yeah,\" he said, worried he would freak her out or something. \"I've just never known anyone as beautiful as you.\"\n\nShe blushed slightly, and kissed him briefly again. \"You're the sweetest thing, you know that?\" she said, then she said: \"You think we should practice that scene where Romeo and Juliet are on the bed together?\"\n\n\"Wh-what scene was that?\" he asked.\n\n\"Oh, I think it was in the deleted scenes,\" she joked, \"Shakespeare had to cut it because the studio kept bitching about running time.\"\n\nShe smiled, lust in her eyes, and pulled him over to her bed. Damn, she was gorgeous. Harry felt the tightness inside his pants \u2013 he hoped she wouldn't notice just how strong her effect was on him.\n\nLying there next to him, she pulled the copy of Romeo & Juliet from his hands and tossed it over to the bedside table. \"You're so sweet, bringing the script,\" she said. \"I mean, wasn't it obvious I didn't want to practice my lines with you?\"\n\n\"Well, I guess...\" he said, trying to appear confident but failing miserably. How could he have possibly have known for certain she didn't want to run over the lines? \"I... I thought you were with Jeb,\" he said, surprising himself by bringing up the issue of Samantha's boyfriend. On second thought, he was pleased he had brought it up, it had to be brought up. \n\n\"Jeb's a big dumb lug,\" the pretty brunette said. \"He's like a gorilla, he treats me like a trophy and I'm sick of it. I only ever went out with him because he was like the Alpha-Male of the group. Amy and Greg is the same, I'll bet.\"\n\n\"Oh,\" he said, every other thing Samantha said seemed to astound him.\n\n\"That time you kissed me,\" she said, trailing a soft finger down his cheek, \"you showed me that there really can be tenderness between two people. I... I guess I've always gone out with guys like Jeb.\"\n\n\"While I've known you,\" Harry nodded and smiled.\n\n\"Well, that's gonna change,\" she said, and planted a peck of a kiss on his lips. \"I don't care what anyone says \u2013 even Amy.\" She slipped a cool hand up under his shirt, caressing his chest, and kissed him again.\n\n\"But Amy hates me,\" he said, breaking away from Samantha.\n\n\"Amy doesn't know what's good for her,\" Samantha said. But Harry still felt slightly awkward. \n\nHe said: \"But you two have been friends forever \u2013 if she doesn't approve, she'll be pissed at you.\"\n\n\"If she's like that, she shouldn't be my friend,\" Samantha said simply, and that was apparently that.\n\nThey lay on her bed and for a long while, just kissed. It was sensational, exploring each other's mouths, tongues dancing, lips tangling, soft like silk. Harry was a fast learner, it seemed, because though he'd never done this before, he was soon confident. \n\nBut slightly afraid of what he was allowed or not allowed to do, he did not try to move things further. He was happy enough to be kissing her, this most beautiful of girls, enjoying rolling around with her, running his fingers through her soft hair, caressing her cheek, her neck, nibbling gently on her lips, breathing in her sweet scent. \n\nAt length, he was conscious that they'd been in the bedroom for quite a while, and he broke apart from her, saying: \"What time is it? Are your parents going to object to us being \u2013 \"\n\n\"My parents are probably at some restaurant,\" she said, seeming flushed now, but apparently as happy as he was. \"They don't care \u2013 I'm old enough to do what I like now. Are your parents expecting you -?\"\n\n\"As long as I'm home by midnight there won't be a problem,\" he said.\n\n\"Great,\" she said with an impish grin, \"then we've got plenty of time.\"\n\nFor so long, they just kissed, until it seemed that she was purposefully pressing her chest against his \u2013 a sign? A signal of consent for him to touch her breasts? He wasn't sure. He didn't know. \n\nThen she put her hand on his cock, emitting a sexy little moan as she felt his hardness, and Harry decided that this gave him the right to touch her breasts.\n\nShe moaned louder as Harry placed his hands tentatively on the soft rise of her breasts, and he figured that was as good as a permission slip. As she began to caress his erection through his pants, he began to caress her firm little breasts, slowly and gently at first as if to give her ample time to get him to stop. But she didn't want him to stop. Her moaning grew louder, more breathless, \n\nShe continued to stroke his cock through the thick material of his trousers, and slowly Harry built up enough courage to slip his hands under her shirt. Moving so slowly, again leaving her time to stop him, tell him he was going too far, he cupped her handful-sized breasts in his palms, feeling the heat of her irresistible mounds and the stiffness of her nipples through the thin soft cotton of her bra. \n\nFor a long while, it stayed like that \u2013 again, Harry worried he wasn't allowed to go any further. She enjoyed the slow pace of their exploration, though, it seemed. It was wonderful \u2013 really exploring each other, inch by inch, every now and then taking a fresh step, taking the risk of going a little further.\n\nSure about the boundaries they had already broken through, he felt safe kissing her, caressing her, touching her breasts through her underwear. Then as her moaning and pressing against him seemed more urgent, he weighed up the risk and decided to break another boundary.\n\nHe slipped his fingers up under her bra, dipping inside it from the top to touch her incredibly soft skin under the tight cotton. He gasped at the sensational softness of her bare breasts and his first touch of her stiff little buds. Had he gone too far? No, she was smiling at him, kissing him, touching his cock through his pants, moaning as he took her hard nipples between his fingers and thumbs and began to squeeze them.\n\n\"Oh God...\" she cried out, then battled to remove her top and her bra.\n\nHarry took in another breath in wonderment as she revealed her pert little breasts to him for the first time. Unbelievable. Feeling that she was again giving him permission to go further, he began to kiss his way down her neck, then onwards to the soft little pillows of her breasts. She had cute tanlines, the bare flesh of her breasts white compared to the slight brown of the rest of her skin. And her nipples were so pink, so hard. \n\nSamantha Williams, topless in his embrace.\n\nKissing his way around her exquisite breasts, he took her nipples into his hot mouth and drew out a long, loud groan. He loved that she was allowing him to take his time, that she seemed to love every caress, every touch. He didn't know and didn't care how many other guys she'd been with before, but the way she was acting now was like she'd never been touched before. It was new, exciting, exhilarating. \n\nThen something incredible happened. He was sucking hard on one nipple, teasing the other in his hand and coaxing both breasts with his hands, periodically switching over breasts, and she seemed to be responding well to his attentions. He took his time, feeling comfortable in the act though it was both intimate and dangerously close to where he thought she might say \"no more\". Then her moaning changed tone, growing higher in pitch, more breathless, more urgent and definitely louder.\n\nUncertain, he slowed and almost stopped his ministrations \u2013 but she quickly pressed his head to her again, urging him in no uncertain terms to continue. He did so, and her moaning again accelerated and became more vigorous, until Harry was worried that Samantha's parents would surely come running to find out their daughter's torment.\n\nIt grew to the point at which she was almost yelping, her body writhing underneath him. Then suddenly her whole body seemed to shake, and she became silent in an instant.\n\n\"My God!\" she said breathlessly, \"What the hell was that?\"\n\n\"A-Are you all right?\" he asked her, feeling slightly worried that he'd hurt her somehow.\n\n\"My God yeah!\" she said, kissing his forehead. \"That was amazing \u2013 how do you do that?\"\n\nIt was only on the way home again, the clock having reached twelve in miraculously quick time, he figured that perhaps she had had an orgasm. Could girls really do that by just having their breasts touched?\n\nHe was so tired when he got home, he felt quickly asleep despite all the strange feelings rushing around his system. Would they have gone further if they'd had time? Or would that be as far as it got? How much further was further? \n\nThere were a lot of questions in his mind, not least how to deal with Amy. Samantha had said she didn't want Amy to know for a while, until she'd figured out how to tell her without ruining their close friendship. \n\nSo the next day, both Harry and Samantha acted as though nothing had happened. But at rehearsal, there was a glint in both of their eyes, and in the middle of one break, Samantha whispered to him that he should go over to her house again that evening.\n\n*\n\nThe next evening was the same as before: Harry turned up on Samantha's doorstep, and was ushered into the pink-and-white confines of her huge bedroom.\n\nThere, she fell into his arms again, kissing him, holding him, and it still felt very strange being so intimate with the princess of popularity.\n\n\"I've been craving this all day,\" she said as they moved towards the bed again.\n\n\"Me too,\" he replied, kissing her again. \n\nShe was wearing a similar tank-top again, but this time a very short pink pleated skirt \u2013 a signal they were to go further? But whatever, she looked gorgeous, as ever. As she lay on the bed and patted the mattress beside her, gesturing for him to come over, he even thought he caught sight of her panties \u2013 but perhaps not.\n\nHer legs were as gorgeous as the rest of her, toned, slightly tanned, smooth and velvety. Harry didn't stop long to look, though, but went over to her on the bed.\n\nLike last time, they started by kissing and touching each other, but Harry found that he was comfortable and confident in doing with her anything right up until the boundaries they had reached the night before. So though they again took their time, it was much quicker before they reached the point at which they had ended things the night before.\n\nHarry soon had her topless before him, her perfect breasts available to be caressed and kissed, stroked and sucked. They were comfortable together with being naked from the waist up, and Samantha even began to grind her pussy on his hardness, covered by his pants \u2013 and her panties.\n\nFor a while, it seemed to Harry that this would be as far as they would go. But then she took them one step further. \n\nHe had taken to planting kisses all around her beautifully toned stomach, which he found as much of a thrill as kissing her breasts: her midriff was stunning, and seeing it bared during the day meant that when he came to caress it with kisses, it was a real thrill. And kissing his way along the belt line of her skirt, he detected the trace of a new scent he had never encountered before, just under her subtle perfume, a slight mustiness.\n\nAs Harry was considering this, Samantha reached down and pulled up her skirt \u2013 causing Harry to draw in another gasp. His heart-rate soared as she revealed more of herself to him, even more personal than before \u2013 her panties at the top of those long, smooth legs: a little scrap of the most expensive and luxurious white lace.\n\nThat gently musty scent was thicker now, and he realised it had to be her arousal. That gave him yet another thrill. But what did she want him to do now? He moved between her legs now, and played it safe by kissing his way around her slender thighs. Though he was playing it safe, the closer he came to her pussy, the more audible her moans became. \n\nHarry's mind was almost on overload: her pussy was right there in front of him, covered by the flimsiest scrap of lace, apparently oozing her spicy scent as he caused arousal within her. Samantha Williams, spread before him. Available. Allowing him, now, to kiss his way right close to her pretty panties, her aroma so intoxicating and strengthening every minute.\n\nSamantha tilted her hips slightly, and raised her pussy up a little, making him aware that she wanted him to push the boundaries a bit more. He wasn't entirely sure what he was supposed to do, but as he had first touched her breasts through her underwear, he did so again with her pussy, tentatively brushing her panties from her mound down to her pussy. Her panties were wet, soaking wet, saturated with her juices, and as he touched her there, Samantha let out an especially forceful moan. \n\nThat had to be a good sign, so Harry continued to trail his fingers around her panties, loving the heat he could feel through the delicate lace, the moisture that came from her aroused pussy. She purred and almost growled as he did so, loving his touch there. \n\nStill, he took his time, not wanting to rush anything, wanting to indulge in every sensation he could, perhaps even teasing himself by leaving that skimpy lace barrier between himself and her pussy, the pussy of a girl he'd lusted after since he knew how to lust.\n\nHarry's cock was so hard underneath him, straining under his weight, but this was such an amazing experience he didn't even think about it. He was inhaling her sexual aroma with every breath, that thick musky scent that seemed to thrill him to the core. He was stroking the juicy pussy of Samantha Williams! And she was so beautiful, writhing around as he touched her skimpy panties, her moisture seeming to saturate most of the material now, she was so aroused.\n\nAs he stroked her with his fingers, he continued to kiss around the edge of her panties, but then as the time progressed, he grew bold enough again to take the next step, planting soft kisses on her panties, tasting her moisture for the first time.\n\nShe let out another long, low moan as he pressed his hot mouth to her most sensitive area, covered only by that thin lace. He loved her flavour: it was strange at first, but he liked it. Spicy, salty, luxurious and exotic. \n\n\"Oh God...\" she moaned as he ran his tongue along the groove that marked her pussy underneath the lace.\n\nLooking up at her from that angle was so wonderful, seeing her flat stomach, cute breasts with those pebble-hard nipples, her pretty face contorted by bliss. Her eyes were closed, her hands by her side, gripping the bedclothes as she continued to writhe under his teasing mouth. \n\nA little later, he decided he was in such a position that she would hardly stop him if he slipped a finger under the scrap of material covering her pussy. Would she? Surely not. \n\nIt was time to take the risk: he slipped a single finger under the side of her panties. She didn't stop him, and her moans even seemed to be encouraging him. He used his finger to stoke her, detecting a tidy patch of silky public hair \u2013 so real, so sexy. So soaking wet with her juices.\n\nHe was stroking this pretty girl's mound, running his fingers through her pubic hair, and she wasn't stopping him, she wasn't outraged. She was actively urging him on by pushing her hips upwards slightly and letting out the kind of urgent moans that had indicated an approaching orgasm the previous day, he had thought.\n\nSuddenly, his finger was gently running along the silken folds of her pussy lips, he was touching her pussy! Dipping inside her slightly for the first time, Harry waited to see if she was comfortable with going that far. Her loudest moan yet seemed to confirm that she was. She gasped as he boldly but slowly drew his finger inside her hot, tight vagina.\n\nSamantha was so incredibly wet, her juices were slick around Harry's finger, lubricating it as he penetrated her. Her soft vagina, smouldering hot, squeezing his finger as it glided inside her as far as it could go. \n\n\"Oh Harry...\" she gasped, \n\nHarry saw her alarm clock, showing the time was approaching midnight \u2013 he was going to have to go! He decided to take one more risk before calling it a night, there was just time to breach one more boundary \u2013 if she was willing. \n\nSlowly \u2013 again, giving her time to object \u2013 he nudged aside her panties, revealing her pussy in all its glory for the first time. Nestled in the middle of the pale skin of her tan lines, her tidy triangle of mousy hair matched the hair on her head, and below it opened her pink, glistening flower, so juicy and tempting for him lying there. \n\nHe kissed her mound, just above her clitoris, where her pussy lips began. He kissed her there and breathed in the sweet cocktail of aromas \u2013 her perfume and her arousal in a sweet blend. She responded with a long groan, and as his kisses approached her pussy lips, she moaned more desperately, more urgently, as she had the time before as he had sucked her nipples.",
        "\"Oh please...\" she moaned, which was all the pleading he needed.\n\nHe licked her pussy, tasting her juices from the source, loving her flavour. It was wonderful: salty, tangy, slightly sweet \u2013 the refined taste of femininity. Perfect. He penetrated her hot vagina with his tongue, then began to really eat her, driving his tongue inside her, lapping up her free-flowing nectar. He kissed her pussy, teasing her with his tongue, brushing his nose against her clit. \n\nHis senses were entirely filled with her arousal, it was incredible to be there, to reach his arms under her shapely thighs and lock her slender hips in his grip as he feasted on her soaking pussy.\n\nHe looked up, still half unbelieving that he was there, lying between the legs of this mouth-watering beauty, his lips dancing with her pussy lips, his tongue slipping inside her, his nose grazing her little clitoris.\n\nShe was building up to another orgasm, her chest heaving with her deep breathing, her pretty face flushed, her pussy seeming to tremble as he devoured her. \n\nBy the time midnight came, she screaming out his name and pressing his head to her pussy, shaking as the force of her climax took her, her juices flowing copiously into his willing mouth as a wave of energy swamped her petite form..\n\nOn his way home, he was shaking with pent up energy \u2013 what an amazing girl Samantha was! And as he went to his own bed, he had her sweet taste still on his lips.\n\n*\n\nHarry didn't see her over the weekend, not once. As far as weekends go, it was hell. Suddenly, from feeling on top of the world, he felt as low as low could be. Had she had second thoughts? Had Amy talked her out of seeing him?\n\nHe didn't have her phone number \u2013 how stupid was he? He simply hadn't remembered to ask for it. She hadn't asked for his, either. At the time, he probably figured he's see her in class on Monday, and at the first dress rehearsal that evening \u2013 but what if he had lost her? \n\nHe could have gone round to her house, but what if she didn't want to see him? What if Amy was there? He couldn't handle that. What if Amy was there, and Samantha hadn't told her yet? He would ruin things. \n\nSo he kept away from her that weekend, but it was difficult. He was so nervous, he felt sick. His mother even got worried about him, he wasn't eating properly. \n\nAfter the feelings Samantha had given him, to lose it now would be very painful. Yet the relationship was still in that fragile, unstable time before it settled down into a permanent fixture. \n\nHe went down to the beach with his board, but a few waves and he just wanted to sit on the beach, thinking. Worrying. He went with Finch to see a movie, and could not follow the plot.\n\nMonday came, thank goodness, but she wasn't in class. \n\nWhat was going on?\n\nHarry went to the dress rehearsals feeling beside himself with worry. It was not a full dress rehearsal, they were doing a few scenes this evening, a few the next evening and a few the next. Then the full dress rehearsal would be the night after, before the actual performances started up.\n\nHarry wasn't in the scenes on that Monday, which was good, since he was pretty sure he would have been awful. So he sat in the audience with the other cast members not needed that night, watching.\n\nHe saw Amy sitting on her own over the other side of the hall \u2013 that had to mean Samantha was here tonight, she'd be on stage. Of course she would be - they were doing her scenes tonight.\n\nThe scenes were going well \u2013 and then there she was, perfection personified. She was wearing a fairly plain white dress, which seemed slightly transparent in that old-fashioned kind of way. Like some kind of fancy night-dress. Samantha made it look good, though, and with all those bright lights on her she looked like an angel. \n\nBut with the auditorium bathed in darkness and the bright stage lights on her, there was no way she was going to see him in the audience. What could he do? To go up to her at the end would be pretty obvious, and if Amy saw it could cause trouble.\n\nSo the sickening feeling inside him continued: he felt helpless. Tomorrow, he would be involved in the scenes, but she wouldn't. It wasn't until the Wednesday night that she would be up on stage with him.\n\nWhat if it was too late by then? What if she was testing him, if she was testing him over the weekend, to see if he would call her? And he'd failed...\n\nHe was so deep in thought, he hardly noticed when the rehearsal came to a close and the lights went up. He was sitting there, like a lemon. Realising the lights had gone up, he looked across to see that the stage was empty and Amy had gone from where she was sitting.\n\nHe just sat there for a few moments, feeling dreadful again. His heart had lifted seeing her on stage like that, but now Amy had probably taken her away from him again, never to be seen again. Perhaps it had been a mistake to allow himself to be led into the whole thing like that \u2013 but how could you turn down Samantha Williams? No guy in any high school in America would turn down a girl like Samantha Williams.\n\nIt was getting late. He pulled himself up to his feet and began to wander out along the row of seats towards the exit. Might as well go home, put his feet up, withdraw and face the fact that fate had played a cruel trick on him.\n\n\"Hey!\"\n\nThe voice behind him startled him. Damn it, Finch always got cheap thrills from creeping up on people. But turning around to see who it was, he realised the voice was too high for Finch.\n\n\"Hey, Dork.\"\n\nIt was Amy.\n\n\"Uh... hi Amy,\" he said, uncertain of what to do or say. Had she come to gloat? You lose, buster.\n\n\"You just going to leave?\" she asked him, not giving him any easy answers.\n\n\"Uh... well...\" he fumbled.\n\n\"She's waiting for you, you know,\" Amy's voice seemed somehow softer, more tender. Like she wasn't angry at him any more.\n\n\"Uh...\"\n\n\"Aren't you gonna walk her home?\" the blonde girl asked, and then for some reason decided she had made him suffer enough. \"She told me everything,\" she explained, and even smiled at him! \n\n\"I'm sorry,\" Harry said earnestly, realising it couldn't be easy for Amy to see her lifelong best friend fall for someone from the wrong side of the tracks.\n\n\"Don't be sorry,\" she said, \"Just don't hurt her \u2013 or I'll come after you with an axe.\"\n\n\"Right,\" he nodded, feeling his heart beat quicken and his breathing grow heavier \u2013 Samantha wanted to see him! She hadn't been talked out of it! He asked: \"Where is she?\"\n\n\"In the dressing room, getting changed,\" she said casually.\n\n\"Ah, uh... okay, I'll wait,\" he said meekly.\n\n\"No, go in, you loser!\" Amy laughed. \"God, you're such a dork!\"\n\nHe grinned bashfully at the attractive blonde, and walked past her towards the female dressing room. Damn. Turning, he saw that Amy had gone already. Did Samantha really want him to go into the female dressing room? What if there were other girls in there getting changed?\n\nHe caught his breath. She wanted him to go in there: it was like official acknowledgement that they were an item. Harry was allowed to go into the female dressing room while Samantha Williams was still changing. How bizarre. \n\nHis heart in his throat, he pushed open the door and slipped inside the dressing room.\n\nShe was sitting in there in only her underwear \u2013 fairly simple bra and panties of soft white cotton with what looked like strawberries on them. Kind of girlish, they looked incredibly sexy on her \u2013 but then, anything looked sexy on her. granny pants would no doubt look sexy on her.\n\n\"Hi!\" she beamed as he entered the room. \n\n\"Hi.\" \n\nShe stood up, and walked over, placing her arms over Harry's shoulders and pulling him in for a slow, lingering kiss. God, he was a walking erection already. It was so sweet, she was so gorgeous. He hands came down to her beautifully sculpted behind, squeezing her to him as they kissed.\n\n\"Enjoy the show?\" she asked as the kiss came to an end at last.\n\n\"The show you've just given me, or your scenes on stage?\" he asked, making her smile.\n\nShe kissed him again briefly, and said: \"I'll show you more if you come home with me.\"\n\n\"Mmm... that would be nice,\" he said. \n\n*\n\nOn the way back to Samantha's house, the atmosphere between them seemed somehow different. He couldn't really explain it. Samantha seemed somehow less guarded with him, more relaxed, more confident. Had her talk with Amy given her reassurance that this was the right thing to do? Maybe that was it. Maybe it was the fact that they had been seriously intimate with each other now, and their relationship had stepped up a gear.\n\nMaybe it was just him, though, not really having been in a relationship like this before. Not a sexual one.\n\n\"So you talked to Amy?\" he asked her as they walked up her driveway.\n\n\"Yeah,\" she said. \"It's hard for her: you have to realise, us two are like sisters. Boyfriends have never been important to us, they've never come between us before. I guess both of us sort of kept our distance from that sort of thing \u2013 the guys we went out with, we didn't really ever connect with. They were never an issue.\"\n\nShe looked at him, and caught his hand in hers, giving it a squeeze. \"It's different with you, though.\"\n\nHe smiled, but looked confused.\n\n\"I never felt like this before,\" she explained. \"And I don't think Amy's ever felt like this. The two of us never used to go anywhere or do anything without each other. And I guess it'll still be that way, but now I have you, too. So that complicates matters.\"\n\n\"What did she say?\" he asked her. \n\n\"Well, she was pissed at first \u2013 more, I think, because I kept a secret from her. But then she said she'd seen a change in me, she saw that for some reason I'm happy right now.\"\n\nSamantha squeezed his hand and smiled at him again. She said: \"But she still thinks you're a dork!\"\n\n\"Ah well,\" he grinned. \"Some things never change.\"\n\n\"She'll see you in a different light some day.\"\n\nBut as they entered Samantha's house, the sweet brunette seemed to tremble. It occurred to Harry that she was as nervous as he was. What was it? Perhaps she knew they were going to take the next step \u2013 she had already allowed him the most intimate contact without going all the way. Harry shivered a little, too, in anticipation.\n\nThen they were upstairs again, the door of her bedroom closed, and they were kissing and clumsily pulling each other's clothes off. Harry left her standing in her little strawberry panties, not yet certain she wanted to be completely naked in front of him. But Samantha even pulled down Harry's boxers, leaving him completely exposed before her, his cock standing up rock hard.\n\n\"Mmm...\" she purred, her soft hands sweeping around his shaft. \"I think we should give you a little release tonight \u2013 you need it!\" \n\nIt felt kind of dirty being there naked in front of this exquisite creature. But so good \u2013 she made him feel as though his insides were on fire. She kissed him, and he was about to touch her perky breasts when she suddenly dropped down in front of him. Then he nearly collapsed, as he felt his cock enveloped by the most incredible heat and wetness. It was sensational, Samantha had taken his cock in her mouth, and was calmly sucking while cupping his balls. She was magnificent \u2013 he'd never felt anything like it.\n\nAnd after what he'd been through in the last week, he wasn't going to last long with her velvety mouth wrapped around his penis like that, squeezing it, massaging it, playing with it, exploring its shape with those sensual fingers.. \n\nBut she seemed to have realised that, for just at the right moment, she stopped and stood up, pulling him towards the bed. His hands moved to her small but perfect breasts as she kissed his mouth, coaxing them, pinching her erect nipples. He still felt a little strange being naked with her, never having been naked with anyone before. But her appreciative noises as her fingers continued to explore his cock gave him confidence \u2013 he wasn't disappointing for her, thank goodness. \n\nHe was touching her breasts, and though she seemed to like it, after a while she smiled at him and calmly removed one of his hands, pushing it down to languish between her legs. It was clear what she wanted, and Harry was only too willing to do as she wished. Her cotton panties were already damp, and judging her mood, he didn't delay too long before slipping a finger inside the slippery folds of her pussy. \n\n\"Oh God,\" she moaned, saying breathily: \"I've been waiting all weekend for this.\"\n\n\"Me too,\" he said while kissing her delicate neck, his finger stirring inside her tight, hot vagina, already so slick with her juices. \n\nShe paused, her hands leaving his cock, much to his disappointment, but moving to slide her panties down her thighs so that she was naked, too. Harry felt his heart flutter: he was in bed with Samantha Williams, and she didn't have a stitch on! He could see the patch of dark public hair between her legs \u2013 he felt so incredibly fortunate. \n\nWithout her underwear in the way, his hand had more freedom to explore her pussy, to seek out her clit. She responded well to that, her moans containing more than a hint of surprise that someone as new to this as Harry was seemed so tuned to her needs.\n\nTaking her stiff nipples into his hot mouth, he touched her clit with a thumb as he slid his longest finger inside her pussy. Samantha was writhing on the bed as he caressed her inside her sensitive vagina, until she came quite forcefully, vocally. \n\nHe thought that would be that, after her climax, but before she'd even got her breath back, she said to him: \"Make love to me, Harry \u2013 please.\"\n\nWow, this was the ultimate boundary as far as Harry was concerned. Was she really asking him to do what he thought she was? His hesitation clear, she clarified: \"I want you to fuck me.\"\n\n*\n\nSamantha looked into his eyes with burning lust. Fireworks seemed to be exploding inside Harry, he couldn't believe his good fortune. But though he wanted it \u2013 he wanted it more than anything \u2013 he felt uncertain, he didn't really know the protocol. He knew the theory, but not the practice. He was paranoid he would get it wrong somehow, humiliating himself, angering Samantha.\n\nHe said: \"I've never... never done it before.\"\n\nSamantha smiled warmly, perhaps happy that his hesitation was from virginity, not because he had any doubts about being with her. \n\nShe slipped one of her legs over one of Harry's, and affectionately caressed his hardness, smiling all the time now, as she said softly, \"I'll take care of you.\"\n\nShe kissed his mouth again for a while as she played with his penis, seeming almost to calm him down, get him relaxed. Then she withdrew, and despite his previous relaxation, Harry found his heart beat soaring again. Was this really it? For a while, it seemed, he was lying there alone, naked and vulnerable, his cock like a burning stone against his stomach. He remained lying back, looking up, so that he couldn't see what she was doing, where she had gone. But he wasn't thinking about where she was gone. He was thinking about losing his virginity, still incredulous that it was to be with Samantha Williams.\n\nThen I felt her hands, and a sudden intense heat enveloped his cock. More than a little surprised at this, he looked down to see her taking his shaft inside her mouth again. This time, though, she was using her mouth to roll a condom onto him.\n\nShe straddled him \u2013 so beautiful, her nipples erect, her pink pussy lips glistening - and she guided his hard shaft to the entrance of her hot vagina. He could hardly believe it, his cock was about to be inside the most beautiful girl he'd ever seen. She smiled, and the head of his cock slipped in past her labia. \n\nShe paused, looking at him with burning desire in her eyes. Then she sank down, his hardness filling her, and even with the latex sheath between them it was incredible \u2013 the tightness, the amazing heat closed around his cock, intense, wonderful. He was inside her, no longer a virgin, granted such sensational favour by this exquisite beauty. \n\nSoftly, she said: \"How does it feel?\" There was a knowing look there, she was his first and seemed to gain a thrill from that, loving that it was her guiding him through this first time.\n\n\"Amazing,\" he said, unable to say much else.\n\n\"You wait,\" she said, and began to slowly gyrate her hips. \n\nShe seemed almost to dance upon his cock, sitting up to give him a show, her pert breasts on display, her nipples hard, her fingers running over her own body so sensually. The feelings drawing through his hardness were just incredible, and looking down he wondered at her slender thighs parted over him, her dark pubic hair, her pussy sinking and then rising on his latex-covered shaft.\n\nSomehow, he didn't explode right away \u2013 it was a miracle, really, considering the sensory overload she was putting him through. But it was so wonderful, he didn't want it to end, so he held on and held on, never wanting it to stop. \n\nShe was touching her breasts as she moved on his cock, coaxing her supple curves, rolling her nipples in her fingers, looking into his eyes as she milked his thick shaft with her tight vagina, biting her lip, both of us moaning now. He reached up to touch her breasts himself, and as the rhythm between them intensified, she leaned forward to kiss his mouth before whispering into his ear gently: \"You feel incredible inside me.\"\n\nHer words almost made him erupt inside her, but somehow managed to hold onto it again. But now it seemed that she couldn't hold onto it \u2013 he recognised the signs of her approaching orgasm now, and soon enough she was getting there again. Locked together with Samantha on top, the two of them seemed to be trying to push themselves together, to achieve as much contact as was humanly possible. Their lips were crushed together, her breasts pushed against his chest and as he ground his cock within her, he placed his hands on her smooth behind to pull himself as far into her as possible to maximise the sensations of his cock moving inside her exquisite pussy.\n\nSamantha was shaking and almost crying by the time she hit the peak of her climax, and if she was feeling anything like the sensations Harry was feeling, he could understand why. As she yelped and shuddered, her vagina tightening around his shaft, he let himself go, allowing his burning seed to burst forth inside her.\n\n*\n\nThey lay there for a while in silence, breathless, exhausted. She remained on top of him, her head on his shoulder, one hand affectionately stroking his cheek while he reciprocated with a hand running through her silky hair.\n\n\"No one ever gave me an orgasm before,\" she said after a while, breaking the silence. \"Not before you came along.\"\n\nHe didn't know what to say. He was shattered, speechless.\n\n\"How was it?\" she asked him.\n\nHe kissed her, \"It was the most amazing experience of my life.\"\n\nShe grinned broadly at that, her freshly flushed complexion full of contentment. \"I'm going on the pill,\" she said, \"I want to feel your beautiful cock inside me without anything in the way.\"\n\nHarry felt that warm feeling of excitement stirring inside him again: there would be plenty of boundaries left to explore with Samantha."
    ],
    "authorname": "MaxSebastian",
    "tags": [
        "harry samantha",
        "inside harry",
        "samantha parents",
        "samantha house",
        "samantha beautiful",
        "pretty smile",
        "dipping inside",
        "harry found",
        "harry stop",
        "girl samantha"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-kiss-is-still-a-kiss"
}