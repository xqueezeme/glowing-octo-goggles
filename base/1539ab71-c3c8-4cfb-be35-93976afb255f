{
    "title": "Exploring the Ring of Kerry",
    "pages": [
        "** Part one: The Bus from Killarney **\n\nIt had been a terrible summer: tough work and girlfriend trouble.\n\nAfter graduating from university, I had taken an internship with a national newspaper in London. I had worked hard at the paper, and was rewarded with a contract at the end of the internship. The work was demanding and relentless. I was churning out copy like there was no tomorrow, and every sub-par piece led to a call into the editor's office. Working for the paper was my dream job, but my na\u00efve idea that I could change the world through my writing was beaten out of me in a matter of days.\n\nThen there was Rachael. We had met in our second year at university, introduced by mutual friends. A little too much cheap wine and a night of passion led to love. As graduation neared, the constant in our plans was a life together. When I moved to London to start the internship, I persuaded her to live with me in my small London flat. Setting up the flat and enjoying London life was great for a while. Rachael got a job in a caf\u00e9, even though she had a good degree in economics. I was immersed in my work, and she soon grew unhappy with our situation. Our carefree student lifestyle had ended, our sex life fizzled out, and reality was a disappointment. Our relationship turned sour and ended bitterly.\n\nA few weeks after things finished with Rachael, I booked some much needed time off work. I decided I needed to get away from it all, to get some breathing space. It was a bit of a whim to backpack around Ireland. In Dublin, I had tried to get into the nightlife in the tourist-trap of Temple Bar. I had tried to psych myself up to pulling a girl in a bar, but just couldn't bring myself to it. I left Dublin, and travelled round Cork, Blarney, Cobh and the Ring of Kerry.\n\nStaying in youth hostels and travelling by bus, the closest I had got to a sexual encounter was sitting on a cliff near Portmagee, overlooking the Atlantic, and wanking into the ocean. It sounds rather sad as I write about it, but it was a necessary release, and a fond memory. After walking for a couple of hours, I had sat down on the cliff edge to eat my sandwiches looking out over the ocean. No one was around, and I was relaxed and desperate for some release. I thought about how great sex once was with Rachael, and my cock was hard in seconds. I unzipped, and jerked myself off in long, slow strokes for an age. The ocean lapped below, and the sea breeze breathed over me. It was sweet agony as my balls contracted and I pumped my cum into the void between cliff and ocean. A minute or so later, a German couple came hiking by, and I put my cock away in haste.\n\nIt was time to head home. Rather stupidly, I had bought a bus ticket all the way from Killarney to Dublin Airport, a journey of over six hours. Either the train or the plane would have been a far better idea, albeit more expensive. I had been travelling on Bus \u00c9ireann coaches everywhere since leaving Dublin, and they were cheap and fairly reliable. It was thus out of habit that I hadn't thought of any other alternative than making the epic bus journey from Killarney to Dublin.\n\nThe number 40 bus sat in Killarney bus station: white and red, emblazoned with the Irish red setter running down the side. There were fewer than a dozen people spread out around the coach, but I moved to the back, ensconcing myself in the back corner seat. The energetic setter motif was repeated on the grey-and-red upholstery of the seats. The emergency exit at the back afforded a little more legroom, so I settled down into my lonely corner spot. As the bus pulled out of the bus station, I prepared myself mentally for the long journey ahead. Suddenly, the coach came a jolting halt, as the driver slammed on the brakes. The driver opened the door, and a young woman with long wavy black hair hauled herself aboard. \"You near ran me over, you old fecker!\" she exclaimed. The driver didn't seem too taken aback by her address. She showed him her ticket, and then disappeared from my sight, down out of the door of the bus. The driver reluctantly followed her, with his polyester company tie positioned like the swoosh of a ski slope over his beer belly. I heard the luggage compartment open, then close. The driver huffed back on board and lowered himself in behind the wheel.\n\nThere she was again, striding up the aisle as if she owned the bus and everyone on it. As she moved up the bus, I saw she was wearing low-slung skin-tight jeans, under a white vest top, with a cloth bag swinging from her right shoulder. As she came closer, I could see her vest was thin, translucent, revealing her dark bra underneath. I marvelled at the work of engineering: the vest was a snug fit around her breasts, but then hung in loose, shifting folds over her abdomen, falling a little short of the top of her jeans, revealing momentary flashes of flesh as she walked toward me.\n\nThe bus began moving again. The beautiful woman reached up to the luggage racks on each side to stabilise herself, pushing her breasts up and out, in a perfect display. The coach turned out onto the street, and the arc made the woman's hips sway one way and the next. The movement continued up her body, and her breasts were a marvel of pendulum motion, with the material below rippling like a thin curtain, emphasizing the motion. I was transfixed, and I left it a little too late to pull my gaze away. Her eyes \u2014 azure pools \u2014 met mine, and she grinned in full knowledge that she was in control of the situation. My cock hardened, and I shifted in my seat.\n\n\"Do you mind if I join you back here? I just like sitting at the back, so I do.\" She was well spoken, but her voice was musical \u2014 not the music of a symphony, but a fiddle band. It made me smile.\n\nI was flustered and let out a vague \"OK, sure\".\n\nShe beamed me a smile, and my cock twitched, hidden under my stone-coloured chinos. She turned to put her cloth bag up in the luggage rack. The bag had a logo and 'School of Medicine, UCC' printed on it. As she turned from me and reached up, I got my first look at her bubble-shaped backside, straining denim, and my cock twitched again. She turned back, and as the bus turned another corner, she put her arms out to grab the seat headrests on either side, and her breasts shimmied again right in front of me. Braced against the swaying bus, she leant forward and swung herself around onto the back seat. I got a perfect view of her cleavage, framed by the two rising mounds of her breasts. I didn't know where to look, and she knew it. It was almost as if she was putting on a show, toying with my inability to resist her control.\n\nThe young Irish woman's raven hair framed the pale skin of her face and vibrant blue eyes. High, round cheeks hoisted the ends of her winning smile \u2014 thin, but expressive pink lips that smirked, beamed and surprised as they spoke their own language. She wore no makeup \u2014 unsullied and natural was her beauty. She bounced into the seat beside me. The waves of her dark tresses brushed back and forth over the pale skin of her sculpted shoulders, covered only by the spaghetti straps of her vest top and the dark-green satin straps of her bra. Her hand jutted out towards me. \"How yuh doin'? I'm Aoife\", she introduced herself.\n\nI raised my clammy hand and took hold of her long, thin fingers in a rather imperfect handshake: \"Uh...'Ee-fuh'?\" I tried to pronounce her Irish name right, and she nodded. \"Hi! I'm Mark\", I returned.\n\n\"So, Mark, me young fella, were you getting an eyeful of me tits just then, or just watching out in case I fell over like?\" She opened our conversation with a cheeky smirk.\n\nHer directness flustered me, but it was too late to deny it. \"Killing two birds with one stone\", I replied, and rather pleased at myself with the witty response.\n\nHer lips curved once more into that smile, and she let out a low, throaty laugh. \"Hah! So, you're English, are you? Always having your cake and eating it, bloody imperialist bastards!\"\n\nIt was now my turn to laugh at the banter. \"Yeah, I've come over here and colonised a fair few Irish pints and sea views!\"\n\n\"Maybe you've seen and viewed a little too much now!\" she shot back, steering the conversation back to her breasts.\n\nIt was almost as if she had made me take another look \u2014 my gaze lingered \u2014 magnificent \u2014 and she smiled as she watched me ogle her.\n\nShe licked her lips, moistening them. \"I could bloody murder a pint right now!\" It was a warm summer afternoon, and the air on the bus was a little clammy.\n\n\"I've got a couple of cans of Guinness in my bag\", I blurted out. I stopped at a small supermarket on the way to the bus and bought some sandwiches and two tin cans of stout to keep me going on the journey.\n\n\"'Tis all Guinness and leprechauns for ye'r lot, so it is!\" Her voice contorted into mock 'Hollywood' Irish.\n\n\"You don't have to have one; I was saving them for the journey.\"\n\n\"Are you going to Cork?\"\n\n\"Not really, I'm just changing in Cork for the bus to Dublin. I'm flying home from the airport.\"\n\n\"You eejit \u2014 taking the bus from Killarney to Dublin! Do you know how long that'll take you?\"\n\n\"I think it'll take me just over six hours to get to Dublin\", I sighed as I admitted the foolishness of my travel plans.\n\n\"Sure, you bloody eejit. I hate riding these damn buses, but I'm a damn culchie eejit too now!\"\n\n\"So we're both 'eejits' together: how about that beer?\"\n\nAoife pressed her long fingers together over her lap, slid the prayer pose between her knees so that her upper arms squeezed her breasts together, and leant forward to display an obscene amount of her chest. I admit that I then let out an audible sigh that made her curl another smile.\n\n\"How about it then?\" she pleaded.\n\nI almost had to ask her what she meant, before I remembered the beer. I stood up to fetch my bag from the luggage rack, and wondered whether she could see my erection through my trousers, just a few inches from her face. It was a game of words and bodies, and it was getting hotter.\n\nI brought down the two cans, handed her one, and sat back down. The cans felt a little warm and perhaps had been rolling around in my backpack. Aoife pulled the ring open on hers and the stout frothed up on the top of the can. I opened mine to similar effect. She tilted her can towards me, and said \"Clink!\"\n\nTrying to be clever, I touched my can to hers and said \"Sl\u00e1inte!\" in my best tourist's Irish.\n\n\"Sl\u00e1inte yer bollocks!\" Aoife retorted dismissively. She tipped her can back towards her, and it began to surge more froth from the agitation. To stop the can top overflowing, she raised it to her lips and slurped the foam noisily. Disaster averted, she lowered the can from her mouth, revealing a little trickle of beer foam clinging to the side of her cheek.\n\n\"Err... you've got some on your face\", I gestured.\n\nShe raised a hand and wiped up the foam from her cheek, licking it from her long fingers, and giving one of them a momentary suck. She caught me watching, and smirked, \"What do you expect when you suck head, but jism on you face!\" and her accent bubbled and hissed 'fehss'.\n\nI almost choked on my warm stout. I had to respond to that provocation, and told her, \"You're quite the tease, aren't you, Aoife?\"\n\n\"You're giving as good as you get, young fella!\" she shot back at me.\n\nIn unison, we sipped on our warm beers. We sat looking down the coach as it stopped at Glenflesk to let on another passenger, an elderly priest, who moved up the bus and sat six rows in front of us, the closest of our fellow passengers. Silence passed between us; not an uncomfortable silence, but a satisfied one, warmed by the beer.\n\nAs the bus pulled on and passed through villages and small towns, we chatted, and shared with each other about who we are and what we do. Aoife was two years younger than me. Her family lived in Killarney, and she was a medical student in Cork. That's about all I learnt, for I was sharing more than she was.\n\nThe edginess of her banter had eased off, and that made me open up to her, just like a general who feigns a retreat to draw the enemy in. I hadn't properly talked to anyone about my breakup with Rachael, and I trawled it all up for her to hear. \"Eventually, she had had enough of London, my work, getting stressed out, and she had had enough of me\", I spun the story for her.\n\n\"Erm...so, did she dump your sad English arse then?\"\n\nReminiscing, I chuckled, \"Yeah, I got brutally dumped\".\n\n\"Sure 'tis good to see you starting to laugh about it though\", Aoife continued with some compassion.\n\nI was almost oblivious; like someone vomiting, I had to get it all up. The final bit of sick came as I told her, \"You know, she kept saying to me, 'You tiny limp-pricked bastard!' She kept repeating it, screaming it at me, each time getting louder, and at higher pitches. It's etched on my mind.\"\n\n\"So, is that true now?\" Aoife commented.\n\n\"Is what true?\" I shot back.\n\n\"Do you have tiny, limp prick?\" She seem gratified that she had found an opportunity to steer the conversation away from my depressing reminiscences and back to the salacious banter she enjoyed.\n\nI laughed nervously, shrugged, and tried to wrest control of the conversation. \"I think she was just upset that I hadn't invested in the relationship.\"\n\n\"But talking about a fella's prick like that could do untold psychological damage\", she continued, trying to sound like one of her medical textbooks, but betrayed by her smirk.\n\nHer words sunk into void left by my sad reminiscences. I felt angry for the first time, and wondered why I had let Rachael pin all the blame on me. She had made me the kind of guy who was too timid to pull in Temple Bar, and had to sit wanking on a cliff top. I turned to my confidante, feeling weightless, looked her in the eye and said, \"You know, I think I've been feeling pretty rough about it all\".\n\nAoife held my eye line, and seemed genuine in her concern. Without looking away, she asked, \"So, how do we start putting you back together now?\" There was a brief silence between us. Then she put a hand on my shoulder, saying, \"You know, I'm a doctor. You know you can trust me\". Her look of compassion developed that smirk again as she added her punchline, \"So let's see your cock!\"\n\nI gave a short nervous laugh and retorted, \"Hah! You're not a doctor yet, Aoife\".\n\n\"I have my anatomy class done, so I can tell you a thing or two about the marvels of the human body now.\" She paused, not wanting to be distracted from her mission. \"After all, your eyes were all over me tits when I got on, and fair's fair!\"\n\n\"But I didn't ask you to actually get your tits out, did I?\"\n\n\"To be sure, I noticed a stirring in your pants when I sat myself down next to you.\"\n\nI had thought that she hadn't noticed my reaction to her display. \"Isn't there something in the Hippocratic Oath about not using your medical qualifications to perv at guys' cocks?\" I shot back at her.\n\n\"How else does a good Irish girl from County Kerry get an education about these things? 'Tis the whole reason I'm studying medicine now.\" She giggled, winked, and continued, \"And we need to prove that ex of yours wrong, so you can put it all behind you. So come on, just unzip a little for me and show us how big you are in your underwear... You are wearing underwear, aren't you?\"\n\nI swallowed hard, and felt adrenaline shoot into my bloodstream. I pushed up my black t-shirt, unbuckled my belt, unzipped my trousers, and revealed my light-blue boxer briefs.\n\n\"Nice colour!\" she responded, and leant in to peer at my crotch. I got an eyeful of her cleavage again, and my underwear fabric twitched. \"Ooh! I see movement!\"\n\nSeeing as I had this beautiful stranger staring at my underwear, I decided that there was little need for subterfuge, and told her, \"I think it's because I can see right down your top at this angle\".\n\nAoife looked down at her own d\u00e9colletage and gave a tiny side-to-side jiggle, just looking up in time to observe another fabric twitch between the open teeth of my zip. \"So you're a breast man, are you?\"\n\n\"Obviously.\"\n\n\"The data is inconclusive: 'tis hard to see through all that fabric.\" Her hand rose to her shoulder, sliding the spaghetti strap of her vest top and her dark-green bra strap off so they swung just above her elbow. She curled two fingers around the deep neckline of her vest and just inside the cup of her bra. Slowly, she eased both fabrics down together, as her right breast undulated and slowly rolled out of its confinement. The flesh of her breast was luxuriously pale, almost shimmering, translucent. Her rose-pink nipple popped out into place, and swelled hard. I stared, no longer concerned to hide my enjoyment of her body, drinking in the glorious sight.\n\nAoife looked up, arched her back, and presented her breast at attention. Her breast wasn't huge, perhaps a C-cup, but it was high and pert, and she certainly knew how to dress her breasts for maximum effect.\n\n\"Now, fair's fair\", she repeated, as her hand smoothed down my lap and unbuttoned my boxers with a casual flick of her fingers.\n\nI offered no resistance, focused entirely on her beautiful breast. Without touching me, she tugged either side of my underwear slightly so my naked cock popped through the opening. It hung there semi-erect, but still bent over.\n\n\"Now we're getting somewhere!\" she exclaimed, \"I don't think we'll be needing the microscope, but the only proper way to evaluate a cock is to see it fully erect\".\n\nShe took my hand and placed on her naked breast. I eagerly gave it a fondle, and her flesh responded and moved unpredictably under my touch. She straightened up more, throwing her head back a little, sighing, and pushing herself into my hand. I gazed at her, and then felt the cuticles of her fingers brushing gently against the length of my cock. I drew in a breath, and my cock twinged. \"Is this fair now?\" she asked teasingly.\n\n\"Very!\" I sighed, and gently squeezed at her hard pink nipple.\n\nShe shuddered at the attention, pursed her fingers together like a bud and brought them up to the head of my cock. Slowly, she pushed her pursed fingers onto my cock, sliding back my foreskin and squeezing the rim of the glans. Now it was my turn to shudder, and my cock instantly hardened to perfection in her hand.\n\n\"That's more like it, Mark!\" she exclaimed, and I watched her staring at my fully hard cock. \"My diagnosis \u2014 as a future medical professional \u2014 is that you have a lovely prick, and the two of you have many happy years to look forward to!\"\n\n\"Thank you, doctor. I'm no professional, but I must say that your tits are sensational.\"\n\n\"I'm glad you like them, but the other's getting no attention now.\" She winked at me again.\n\nAt that invitation, I slipped my hand into the cup of her left breast and gave it a squeeze. I slid my hand up Aoife's collarbone to her shoulder, and slid the straps off. My hand continued its motion downward until her other breast was fully exposed. She straightened up, and arched her back, tilting her head back, and presenting a perfect canvas across her neck, shoulders, the cleft between her collarbone, the rise of her breasts, the cleavage delved between them, the rosy, fortified summits, and the gentle slopes down to her ribs. I raised both hands, and surveyed this new territory in tactile fashion from the outer side of each breasts. I squeezed once, twice, and swept my hands up, so that my palms rubbed her hard nipples in a circular motion. She responded with a series of short sighs, pushing herself into my hands, so as not to loose any contact.\n\nAoife's hand was still pursed over the head of my cock. She swung her hand around to the side, and made a fist around my cock, just under the glans. She gradually moved her hand down, drawing my foreskin fully back, exposing the head and making it pull forward a little. She pulled my cock's skin down a fraction more, and made a little bud of dew appear from its eye. I shuddered, tilted my head back and let out a low consonant that flowed from a nasal 'ng' to throaty 'gh'.",
        "I looked up, and saw that she was smiling, pleased with the control she had over me, and aroused by my caress of her breasts. I slid both my palms over her reddening nipples, over the hump of the top of her breasts, and, my fingers splayed like a fan across the base of her neck. She arched right back and moaned, making herself audible, and also visible to anyone on the coach who happened to be looking up the aisle. \"Shhh!\" I said urgently, and took her by the shoulders, pulling her back behind the seats.\n\n\"Are you worried we'll get caught now?\" she said.\n\n\"Aren't you?\" I replied.\n\nShe smiled as if to say she wouldn't be worried if the whole coach saw what we were up to. Then she began to return her focus to my dick, and started to pump slowly up and down. I sighed again, \"Uhh!\", thinking of my cliff-top experience and how much better this hands-free wank felt.\n\nI bowed my head closer to hers, and murmured, \"That feels great!\" My head dropped lower and I began kissing the rump of her right breast.\n\n\"That's boys for you: always wanting to latch on like the babies!\" she exclaimed.\n\nDeciding not to upset her worldview, I took her nipple between my lips and began sucking on it. At which, Aoife began to stroke my cock a little faster, tightening her grip.\n\n\"Has it been a long time since you last got a shag?\" she breathed over the top of my head.\n\nWe had got to the stage where that kind of question was no longer impertinent, but suddenly the thought that she was dangling the possibility of having sex with her in front of me was like electric to my skin. I circled her delicious nipple with my tongue, and then kissed up her breast and collarbone to her shoulder. \"Months\", I groaned in her ear, before confiding, \"and even longer since it was any good\".\n\n\"Lots of wanking yourself off then?\" she said with relish as she wanked my cock for me.\n\nI smiled and shared with her my dirty little tale, \"Well\", I smiled at her cheekily, \"I did jerk myself off last on a cliff top near Portmagee; I came in the Atlantic\".\n\nHer body quivered under my hands, and I could tell she found the idea of my open-air wanking thrilling. \"I wish I could have seen it\", she whispered, and jerked my cock with increased vigour. It was my turn now to moan a little too loudly, and her turn to \"Shhh!\" me. She eased up on her cock-work, and said, \"How about a bet?\"\n\n\"A bet on what?\" I replied, a little hesitantly.\n\n\"I bet you can't keep absolutely quiet while I suck your cock now\", she breathed, staring hungrily into my eyes, smirking at the naughtiness of her own game.\n\n\"What if I lose?\"\n\n\"The embarrassment of the whole coach hearing you moaning ugly, that's what you get.\"\n\n\"What if I win, and keep quiet?\"\n\n\"You get a blowjob in the back of the bus, you eejit.\"\n\nGiven the stakes, I didn't hesitate to answer, \"I would love to feel your mouth on my cock\".\n\n\"C\u00e9ad m\u00edle f\u00e1ilte romhat! The tourist board should give me a medal!\"\n\nAoife moved down to the floor between my legs. \"Let's be getting you comfortable now\" she said as she began tugging my trousers and underwear down. I lifted my backside of the seat, so she could ease the fabric down. My cock sank back inside the opening of my underwear, and then popped back up over the elasticated waistband. She made an approving hum as she watched my hard cock dancing around my lap from the result of the motion. She moved my trousers and boxers down to my ankles, and let them pool around my shoes.\n\nI moved down in the seat, splaying my knees out to give Aoife easier access to my cock. She reached forward and began wanking me again. I closed my eyes, and then reopened them to feast on the sight of Aoife's lovely face and fabulous breasts backgrounding my cock. I reached down to pinch her nipple. She stopped wanking me, and pulled her arms through the straps of her vest and bra, letting the fabric fall like a loose sash around her waist. She rose up on her knees, shifting position so that I could feast my eyes on her stretched, lithe body from neck to navel.\n\nShe settled back down again on her knees, leant forward, held my cock, and began rubbing the tip of my cock first against one nipple and then the other. Both the sensation and sight were incredible, the combination made me shudder with intense pleasure. She pushed her nipple against the tip of my cock, and I could see its eye opening up, carelessly gobbing its dew all over her nipple. She shifted over to her other breast, doing the same. There was something quite macho, even caveman-like, in painting the body of a woman with the juices of my arousal, like marking my sexual territory. The thought of it excited me, and I moaned without thinking.\n\nAt that, Aoife pulled my cock back from diddling her nipple, and said, \"Now that could be a bet loser, young fella\".\n\n\"I thought the bet was about getting a blowjob\", I teased her, desperate for the next course.\n\n\"Are you reading me the rules now... ordering me to suck your cock?\"\n\n\"Yes, I reckon the bet doesn't start until you start sucking me.\"\n\n\"So why don't you order me to do it now?\" she demanded, wanting me to talk dirty.\n\n\"Aoife, suck my cock!\" I complied with pleasure. The power play aroused both of us.\n\nShe dove forward, and without any cock kissing or other preliminaries, went straight down onto my cock with her mouth and started sucking me off. Her lips clamped around the ridges of my glans, applied suction, and flicked her tongue back and forth across the head. I concentrated on enjoying being sucked off while trying to stay absolutely quiet. Her tongue started a spiral motion, and with her spare hand she began cupping and massaging my balls. Her tongue then started moving up and down the eye of my cock. Our eyes met, and she released her lips, sticking her tongue out, so I got the memory snapshot of my hard cock propped up against her outstretched tongue as she looked right at me. A long finger began flicking back and forth over my perineum, and my cock danced on her tongue with this new sensation. I momentarily thought about how much better this was than Rachael's perfunctory blowjobs, and banished the recollection. This was elegant, accomplished and slutty, even though those things shouldn't belong together.\n\nAoife began tonguing the dorsal ridge of my cock all the way from my balls to the tip, pushing it down against my belly, locking eyes with me as she reached its peak, and encouraging me to watch as she then let my cock slip out from under her tongue and spring back up in the air. Twice, three times, she planted her tongue at the point where cock met balls and drew her saliva up the shaft until she carelessly released me. With a mind of its own, my swaying cock slapped her shoulder once, her cheek another time. A fourth time: balls, shaft, head, spring... and it whacked her on the tip of her alabaster nose. She giggled with delight.\n\nThen she resumed the act of sucking: my cock in her mouth, moving up and down while her tongue was everywhere. I gazed at the point of intersection between her lips and the shaft of my cock, as she pistoned it up and down, in and out of her mouth, mesmerically. Her fingers gently squeezed my balls and tickled my perineum. I tilted my head back, closed my eyes and enjoyed every sensation. Her pace increased, and she started increasing the intensity. I moaned out loud, but she didn't stop and declare the bet lost. I realised that the bet was long forgotten, and she was hungry for my cock.\n\nShe didn't stop, but inflicted me with round upon round of more intense pleasure. It had started to reach the point of exquisite agony. I moaned again: she didn't stop, wouldn't stop, couldn't stop. My balls began to draw up, ready to come. I panicked, grasped her chin in both hands and pulled her off my cock. She looked at me quizzically from behind my throbbing, saliva-soaked member. \"You're going to make me come if you keep that up\", I informed her.\n\n\"Isn't that the idea?\" she replied.\n\nThen I realised that Rachael had been really uptight about how and where I came: once I had not been quick enough, and came in her mouth, and she momentarily declared no more blowjobs, ever. I felt unsure of myself: I didn't know the ground rules with this beautiful stranger.\n\n\"OK\", I hesitated, \"I've got a packet of tissues in my backpack\", pointing up at the luggage rack.\n\nShe pulled herself up on her knees, took my hands up to her breasts, and pressed herself into me. \"Young fella, I don't think a tissue is going to manage what you're after storing up down there.\" She began to move away and down to resume, and then lent back in to make sure I understood. \"We don't want to make a hames of it back here, so you're going to have to pump your load right in me mouth\", and then she added, \"Keep Ireland tidy now!\".\n\nShe moved back down. The conversation about the etiquette of coming, had allowed me to regain some composure, but then, as she repositioned my cock in her mouth and began to move on me, her last words were on repeat in my mind \u2014 \"what you're after storing up down there\" \u2014 \"pump your load right in me mouth\" \u2014 \"keep Ireland tidy\". I was desperate to comply, and to come with total abandon in Aoife's mouth. She was moving faster and faster, working every single part of my crotch. My balls tensed again. I felt out of control, and then reminded myself that I didn't have to worry, that I was in good hands \u2014 fantastic hands. I leant back in the seat, closed my eyes and thought \"Bring it on!\"\n\nI began to feel that exquisite agony, needing to come, but not quite being there. Aoife's long, thin little finger moved from tickling my perineum to begin to probe my asshole, which I had just presented as I leant back. My whole body became tense as her finger circled my asshole, first tickling one way and then the other. My balls tightened into hard lead bullets.\n\nAoife took her right hand from my balls and reached up to my chin, while continuing her exquisite blowjob. She curled her index finger into my open mouth. I sucked on it as she moved her finger slowly between my lips. She withdrew her finger, slickened with my saliva. She brought her hand back down to my scrotum. Her wet index finger suddenly wash nudging against my asshole, making me inhale sharply with shock. Before I knew it, her finger had penetrated just inside me, bringing an unknown yet not unpleasant sensation. As the sensation rippled through me from the point of entry, she squeezed my scrotum hard, increasing the intensity. She plunged her mouth tightly down the shaft of my cock. My hips bucked up to meet her mouth, making her eyes widen. It was almost painful when my cum released itself uncontrollably into her mouth. I moaned loudly, fell back, and then another spasm sent more cum into Aoife's mouth as my hips bucked, throwing her head to the right as she locked onto my pulsating cock. We rebalanced ourselves without disengaging when a third spasm threw us in the other direction. Then I fell back into the seat, tensed and shaking, as my cock slowly pumped out the last few drops into Aoife's mouth.\n\nI looked down at her, and she looked dishevelled, hair ruffled, thrown from side to side by the intensity of my orgasm, with trickles of excess cum foaming out of both sides of her mouth. Sensing the last of my cum, she pulled her mouth off my cock, creating another dribble of cum on her chin. She swallowed hard twice to get all the cum in her mouth down, and then panted to catch her breath. After a momentary pause, she looked at me and smiled with satisfaction, a smile only enhanced by a frame of my own cum around it.\n\nAoife pushed herself up on her knees. \"I think you deserve a taste, young fella.\" For the first time, we kissed. Her tongue darted into my mouth, and I could taste and smell my salty cum. A warmth flooded my body, and my orgasmic tension melted away. She pulled back and wiped the cum from her face, shovelling it into her mouth. We kissed again. She moved down and gently sucked my cock to clean it off, making me twitch in her mouth. She rose up, kissed me deeply, gave me more cum-covered tongue, and then pulled back, pulling my head forward and down to her breasts. With hands and mouth, I thanked every part of her breasts for what she had just given me.\n\n\"We're coming into Cork now\", she said, nodding out of the window. With that she pulled her bra up into place, covering and cupping her breasts. I thought to myself that it was a shame that I didn't have time to enjoy how her breasts were sculpted by this classy green bra before she prematurely unwrapped the gifts. She pulled her light vest up, and threw herself back into the seat beside me. \"All of Cork will be loving seeing your cock\", she gestured, and I pulled my underwear and trousers up, fastening them.\n\n\"You were great; thank you\", I whispered in her ear.\n\n\"I thought that would put a smile on your face\", she purred.\n\n\"So, did I win the bet?\" I asked.\n\n\"Young fella, you lost it big time!\" We laughed together.\n\n\"Do you think anyone noticed?\"\n\n\"If they did, they seem not to want to do anything about it\", she replied.\n\nI moved my arm around her shoulder, hugged her close, and rubbed my spare hand across her now clothed breasts, easily bringing her nipples to rise through the fabric. \"Play time is over now!\" Aoife said sternly, but made no effort to move my hand off her breasts.\n\n\"That's a real shame\", I told her, as I fondled her breasts dejectedly.\n\n\"So how long do you have to wait here for the Dublin bus now?\"\n\n\"It's about an hour's wait.\"\n\n\"Good, let's go get a pint and some food.\"\n\nThe bus pulled into Parnell Place bus station, and all the passengers began gathering their belongings and leaving.\n\n\"Come on\", Aoife said, and we moved down and off the coach.\n\nI thanked the beer-bellied driver, and we both collected our cases from the baggage hold.\n\n****\n\nAoife led me to a pub a few streets away from the bus station, where she ordered us each a pint of local craft stout and a plate of scampi and chips.\n\n\"That's OK for you, isn't it?\" she asked after ordering.\n\nI nodded, accepting the fait accompli, acceding to her being in charge.\n\nThe stout was enriched with flavour from storing it in old whiskey casks. She lifted her pint glass to her lips, and drank \u2014 \"Ahh! This is far better than the boring old Guinness, and it goes down so well with fresh English cum!\"\n\nI stared at her pink lips, remembering that only a few minutes ago I was using those lips for much needed sexual relief.\n\nAoife looked at me, saying, \"You know you owe me now, young fella\".\n\n\"What do you mean?\" I wondered.\n\n\"Did I, or did I not, just suck your balls dry of cum on the back seat of the bus from Killarney?\" Putting her question in such black-and-white terms, made what had just happened pleasingly real.\n\n\"It was fantastic!\" I said, \"I enjoyed every minute of it\".\n\n\"Then I figure you're in my debt, so you are.\"\n\n\"Your debt?\" I breathed slowly, not knowing where this was going.\n\n\"Look, I don't start back at medical school for a few days, and 'tis going to be a long, lonely journey to Dublin on that bus for you.\"\n\n\"What do you have in mind?\"\n\n\"If you get me on that bus to Dublin, I could keep you company\", she suggested, smirking. I certainly liked where this was going. \"So there's a price...\" she continued. We leant in towards each other conspiratorially. She purred excitedly, \"You have to eat out my cunt\", enunciating every dirty consonant.\n\nShe moved back, grinning and scanning my face for a reaction. I coughed, taken aback by her lewd request.\n\nShe leant forward again, explaining, \"Fair's fair, and my cunt is aching for some relief after getting myself all excited after blowing you\". She leant back, continuing in a mock-coy voice, \"To be sure, if you don't eat me, I'll just have to go back to my student flat and finger myself silly, so I will\". She illustrated this by spreading her legs and rubbing her crotch through her jeans. She continued the action for a little longer than was strictly necessary to get the point across, and I realised that this was one horny woman.\n\nI leant across the table. Although she had stopped rubbing her crotch, she remained with her legs open and hand poised to recommence her public display if she needed some more. I told her as loudly as I dared, \"OK. I'll get you on that bus, and I'll get nicely acquainted with your pussy...\", I promised in the most genteel of terms.\n\nShe moved her slender hand from her crotch to my lips; it was warm. \"No, if you're planning on talking dirty to me, you've got to learn to say that you'll eat my cunt. That's my little lady's nasty name, and none of that English pussy talk!\"\n\n\"OK... I would very much like to eat your cunt\", I corrected myself, and my cock stirred to the explicit vocabulary.\n\nShe squirmed in her chair. \"Now that sounds more like it; you're making her drip with anticipation.\"\n\nI felt my cock harden. It felt different somehow: my new cock had experienced something my old cock had never felt. I'd never had as part of my body a cock that had been so wonderfully sucked empty, and experienced so violent an orgasm.\n\nAoife's return to dirty talk and my stiffening cock steeled me to take things even further. I searched her eyes, leant across the table and said, \"You know, I bought a packet of condoms before I came away on holiday, hoping to get laid\".\n\n\"Still unwrapped then, are they?\" she smirked.\n\n\"Yes, still unwrapped. So, if I get you onto the bus, I promise to...\", I checked for the correct words, \"eat your cunt out...\", she squirmed with her phrase's repeated use, \"but I really, desperately want to fuck you. I want to fuck you so bad\". I think the businessmen at the next table heard that.\n\n\"So, me young English fella, you want to invade Ireland all over again, do you now?\", she teased.\n\n\"Fuck, yeah!\" I cheered excitedly at the thought of fucking her lithe alabaster body, and jokingly sought her approval, adding, \"That's not 'beyond the Pale', is it?\"\n\nAoife leant in close, shifting forward in her chair. The businessmen at the next table were not being subtle as they listened and watched. She smiled in their direction, reached out, and slowly rubbed my cock through my trousers. \"Nothing is beyond the pale\", she whispered salaciously, and one of the businessmen coughed uncomfortably. We realised that it was time to rush back to Parnell Place for the Dublin bus.\n\n** Part two: The Long Journey **\n\nAoife and I rose from the table after our late lunch. I handed her her suitcase, standing to one side and watching her hips and bubble-shaped backside in skin-tight jeans swing out of the chair. She leaned in to take her case from me, giving a pleasant view of her cleavage, her breasts swaying with the movement. I followed her out of the pub, passing the two businessmen at the next table who were also following her with their eyes. God, I was lucky!\n\nWe rushed back to Parnell Place bus station to catch the coach to Dublin. I was going to pay for Aoife's ticket, but, as the coach door was open, she insisted that I distract the driver by the luggage hold while she hop on board. The driver of X8 to Dublin was a bald, muscular man in a tight short-sleeved shirt. I didn't want to get on the wrong side of him. I passed him both our cases, and began to question him about whether the bus went to the airport and how long it would take. I turned to see her slipping onto the bus, and went to follow her. I felt my cock twitch in my trousers with expectation as I boarded.\n\nAoife had laid claim to back seat, as before, and settled into the corner seat. A few other passengers had got on between us, and, to my horror, I saw a homely middle-aged woman in a sky-blue cardigan take the opposite corner of the back seat to Aoife. I looked back at Aoife, whose expression was not one of satisfaction. She looked up at me and frowned. I stowed my hand luggage in the rack next to her cloth bag, and flopped into the seat beside her.",
        "Perhaps we should have realised that the express from Cork to Dublin was going to be a lot busier than our first coach. It was a little more than half full, but the passengers had spread themselves evenly around the seats, leaving no space for a horny couple to get it on.\n\nAoife turned sideways in her seat to face me, whispering, \"What will we do now?\"\n\n\"Fuck, I don't know!\" I replied.\n\nHer hand stroked the back of my neck, and I looked into the beautiful blue pools of her eyes, full of disappointment. I put my hand on her thigh, stroking it gently. For the first time, we weren't touching each other passionately, but comforting each other in the gloomy realisation that our plans for further exploration each other's bodies had been scuppered.\n\nThe engine started up, and the coach begin to move off. We remained locked in that loose embrace, slumped on our sides in our seats, facing each other. It was nearly ten minutes before Aoife broke the silence, \"I so need to get off\".\n\n\"I'm so sorry that I've got you on this bus under false pretences... Are you always quite this horny, Aoife?\"\n\nShe gave a sharp laugh, and flashed me a smile. \"Medical school is crazy busy... I have so little time for myself, so I do... And I've been back in Killarney with family for two months, doing only what a good Irish girl can... masturbating furiously!\"\n\nI moved my hand around her backside, caressing it, adding a sexual dimension to my comforting stroking of her thigh. \"You know, I reckon you knew exactly what you were doing when you got on the bus in Killarney, right up to blowing my cock and my mind.\"\n\n\"Sure, I was a wee bit horny, so I was. Then I caught you eyeing up my tits...\"\n\nI brought my free hand around her hip and up to left breast, where no one could see. I drew my palm gently over its curves, fascinated at how it responded and moved under my touch.\n\nShe read my mind. \"The puppies have a mind of their own, so they have. I think they like you.\"\n\nI felt her nipple nuzzle into my palm through the fabric.\n\n\"Jayzuss, I need fucked!\" she exclaimed, throwing her head back in dejection and pushing her breast into my hand with a hunger for more.\n\nI bent my head down and warmly kissed her neck. She looked at me with deep longing, and her hand on my neck pulled me in for a passionate kiss. I could taste the rich, malty stout on her lips and tongue, remembering that the last time we kissed I was tasting my own cum on her.\n\nWhen we came up for air, I shared the thought with her, \"Last time I kissed you, I could taste my cum in your mouth\".\n\nAoife trembled slightly, getting turned on by the memory. \"You tasted so good, young fella.\"\n\n\"I'm sorry I was so rough when I came; I feel I abused your mouth for my own sexual release.\" I did truly feel undeserving, spoilt even.\n\n\"You're not sorry for one moment: you loved it. Sure, and I loved feeling your hot, salty cum squirting into my mouth.\" She was getting more turned on, and her right hand began caressing my cock through my trousers. \"Shit! I shouldn't have ordered us food, and just led you to the pub toilet and let you fuck me senseless!\"\n\n\"Mmm...\" I murmured at the thought of it. I moved my hand down to her waist, and then up under the curtain of her vest top. I squeezed my fingers into the cup of her bra, my fingertips searching out, finding and titillating her erect nipple.\n\nShe responded by unzipping my fly and slipping her hand inside. She was through my boxers and tickling my cock with admiration, \"Hello now, lovely English cock!\"\n\nMy body stiffened up in the uncomfortable position, my cock fully hard under Aoife's gentle strokes. I was sure someone was looking at us, and I strained my head to look around. Everyone was in their seats, and the blue-cardigan woman was looking out of her window, watching us pass through the outskirts of Cork. Aoife's hand grasped my cock, and I pulled myself back to her. She started pumping me as best she could in the position. I moved my hand from out of her bra cup, and into its opposite number, realising that the woman across from us would be able to see exactly what I was doing if she turned toward us. Aoife shifted her weight, pushing her breast into my hand and getting a better angle on my cock. She reinforced her grip and began wanking me more vigorously, and I squeezed her breast with pleasure. I noticed that she was glancing over my shoulder at our 'third wheel'.\n\n\"Get your hand off my tits!\" she whispered firmly to me, and I thought that we must have been seen, but then she continued, \"...and put it in my pants!\"\n\nI obediently withdrew my hand and attempted to slide it under the tight waistband of her jeans, only getting trapped at my knuckles.\n\n\"Doesn't an English gentleman open a door for a lady now?\" she riddled me.\n\nI paused, looking to her eyes, before realising what she meant, and unbuttoned her jeans. This new vista was one of her perfect belly button floating on the pale sea of her abdomen that washed on the dark shores of green satin and lace. The smooth fabric of her knickers puckered and swelled slightly as it curved over the headland of her pubic hair, before crashing perilously down between her pale legs. I drank in the geography for a long minute, and she remained still under my gaze like a cartographer proudly holding back the edges of a map.\n\nShe shifted from her lower hip, back into a more seated position so she could spread her legs wider. \"Mark, I need your fingers in my cunt now!\" she demanded.\n\nI teased back the upper hem of satin with my fingertips and probed into the warm, humid tangle of her pubic hair. With a flat hand, I pushed around the curvature of her crotch, my middle finger lightly riding over the crease of the opening to her cunt. She breathed deeply, and I could feel her lungs push out her ribs against my forearm. I curled my middle finger back, lightly ploughing her little furrow. Her head lolled back as she emitted an \"Ohh!\".\n\nI heard a cough behind me, and I froze. I was about to remove my hand, when Aoife's eyes bore into mine, telling me that I couldn't bail out. So, I remained frozen in position, my hand clamped by the elastic of her underwear against her quivering crotch.\n\nShe returned to pumping my cock, leading by example, but the angle wasn't easy. I returned to curling and uncurling my middle finger along her outer folds. She eased up on the awkward movement inside my pants, and refocused on enjoying my touch in hers. My finger sank little by little as her fleshy furrow slickened slightly and yielded to me. Her breathing synchronized to the movement, heavy and slow. I made contact with her inner opening, and she let out another \"Ohh!\"\n\nAnother cough came from the same place. I froze once more. Aoife breathed out sharply in annoyance, her body tensing under me. She placed her hand on my wrist encouraging me to keep moving in her knickers. I hesitantly began once more to move my finger in long strokes the length of her cunt opening. She began to relax again under my touch, \"Mmm!\"\n\nFrom behind me came a sharp hissing intake of breath, quickly released as a percussive tut, directed so that we both heard it clearly. Aoife tensed up again. Her hand came to my wrist and pulled me out of her underwear. She pulled up on the waistband of her jeans and quickly buttoned them. My hand hung limp in my lap beside my gaping fly.\n\n\"I am having none of this prudery!\" she hissed angrily at me. She pulled back, sat upright and straightened her hair and her top, before standing up, and throwing one leg then the other over my slumped form. Once she had climbed out of the corner, I straightened up in the seat, zipping my trousers.\n\nAoife put her right hand up on the luggage rack to steady herself against the swaying of the bus, nonchalantly placing her other hand in the pocket of her jeans. \"Excuse me, madam!\" she purred \u2014 suddenly sweet and polite \u2014 to the other woman on the back seat. The middle-aged woman looked up at Aoife, and I could see from her eyes that she was steeling herself for a confrontation. \"I am so, so sorry to bother you. I hope we weren't disturbing your journey now.\" As she spoke, Aoife lowered herself down to perch on the seat beside the woman. I could see that her charm was beginning to melt her opponent's demeanour. \"You see now, my husband and I are just now after getting hitched. We're away on our honeymoon, we are, see.\" I then understood why she had hidden her left hand in her pocket. \"I don't want to be a nuisance to you at all, madam, but I need to have some time alone with my new man before we get into Dublin. Would you mind awfully much at all moving down the bus to another seat, so to give us some privacy now?\" Although Aoife's back was to me, I knew that her ever-so blue eyes were bearing pleadingly into the woman's soul.\n\n\"Well, I don't know, young lady. You're quite an impertinence!\" muttered the woman. Then she reached up to the headrest in front of her and pulled herself to standing.\n\nAoife pushed herself back into the middle, aisle seat to give the woman room.\n\nThe woman looked way down the coach, and fixed her eye on a spot much nearer the front. She squeezed past Aoife, turned briefly to the two of us saying, \"God bless your nuptials!\" and she was off to her new seat.\n\nAoife turned and whispered, \"We Irish are the most prudish people on the planet, but we're also insufferably polite\". She climbed over my legs, back again into the corner. Rather than sitting straight down, she smirked down at me, holding my gaze for a few seconds. Then she suddenly unbuttoned her jeans, hooked her thumbs into the waistband on each side, and pulled both jeans and knickers down past her knees. She straightened up, presenting a luscious carpet of curled black hair that furnished the cusp of the entrance between her legs. As I stared, she wrapped the fingers of both hands behind my neck, leant in and whispered in Irish, \"Beann\u00fa do mo phit beag\". She straightened up a little and pulled my face towards her crotch. I inhaled her warm scent \u2014 slightly musky, slightly whiskey: sweet and heady \u2014 and I planted a reverent kiss in the heart of her rainforest. I took hold of her hips, and pressed my face into her, tracing firm kisses in an arc from one thigh to the other, passing over her lower abdomen and pubic hair. I caught the reflection of her high, round exposed arse in the window, and realised that any of the good people of Fermoy out on the streets were getting a glorious glimpse at an Irish treasure as the bus swung through the town.\n\nI pulled the half-naked young woman down into the corner seat, and she flopped down, kicking off her green ballet flats. I moved myself down to the floor between her legs, and leant in so that my mouth was by her ear. \"Now it's your turn, Aoife. You deserve this...\", I remembered our agreed wording, \"I'm going to eat out your cunt!\" Her bare backside squirmed in the seat, and my cock hardened at the word.\n\nShe pulled one bare foot out of her clothes, and parted her legs as wide as she could in front me. Kneeling, I lowered my head in line with crotch. I was close enough to smell her scent again, and my eyes locked onto juicy pink flesh \u2014 the same colour as her tasty nipples \u2014 opening in the frame of her silken black hair. I moved my head in, turning, and kissed down the inside of one thigh, and then the other. Her body warmed to my touch, and she let out little, blissful susurrations as I kissed her. I pressed my lips the top of her entrance, and she quivered under me. I slowly kissed all the way down her, and swirled my tongue once as a flourish. Her quivering came in gentle waves as she responded to every move.\n\nI moved back up a little, opened my mouth, extended my tongue, and I began to lap at her entrance gently. I tasted her salty sweetness and knew I had new favourite flavour. I relaxed into lapping thirstily from her. Aoife's noises changed to a more audible \"Mmm!\" I picked up the pace a little, and probed a bit deeper with each lap. I continued for as long as I could before coming up for air.\n\n\"Don't stop now!\" she sighed.\n\n\"Is that OK for you?\" I asked, to which she nodded. I thought it was time for a little fun, and asked her, \"So, how exactly do you spell 'Ee-fuh'?\" Up until that point, I had only known her name phonetically from her first introduction.\n\nShe glared at me as if to say that Irish spelling was not part of this tour package. \"'Tis spelt A... O... I... F... E...\".\n\n\"Really? There's an O in there?\" I asked quizzically, and she sighed getting despondent with my ignorance and the change of subject. I bowed my head down towards her neglected crotch, \"Spell it to me slowly, Aoife\", I demanded.\n\n\"A...\", she sighed reluctantly.\n\n\"A...\", I repeated, and drew my tongue in an apex up the left side of her opened cunt to just above her emerging clitoris, and then down the other side. She shuddered, and then shuddered again as drew a crossbar below her clitoral hood. \"Next letter...\"\n\n\"O...\", she continued, this time much more interested in the letters of the alphabet.\n\n\"O...\", I repeated, and gradually swirled my tongue in a wet circumnavigation of her cunt. As the tip of my tongue tripped over her clit, she quaked and involuntarily repeated the letter for me. \"Next letter...\"\n\n\"I...\", she breathed in anticipation of learning how an 'I' might feel.\n\n\"I...\", I repeated, and drew my tongue up from the base of her cunt, delving deeply up through her, until firmly pushing up into her clit, making her writhe and moan, until my wet tongue slipped over it \u2014 just as she had done to my cock on the other bus. \"Next letter...\"\n\n\"F...\", she panted.\n\n\"F...\", I repeated, and made the same motion as for 'I', but slightly to the left of centre. It was nowhere near as intense as the last letter, until I drew the upper horizontal straight through her clit. Aoife bucked sideways as I burrowed through her sweet spot from left to right. I moved down for the lower horizontal stroke, and took the liberty of interpreting it as an excuse to plunge my tongue as deep into her cunt as I could. Her back arched and she groaned as my tongue entered her passage and then retreated with aching slowness. \"Next letter...\"\n\n\"E...\", she moaned, desiring it.\n\n\"E...\", I repeated, and gave her another 'F', but taking longer for my tongue to cross her clit on the upper bar, and going deeper inside her with the middle bar. The additional lower bar of the 'E' wasn't very straight, but swirled around her perineum. That wasn't as intense, but mewing susurrations showed it gave her a warm sensation. \"I like learning to spell your name, Aoife.\"\n\n\"You're full of surprises, young fella! I don't think I'll ever write my name in the same way again!\" I straightened up from kneeling, leant in and kissed her passionately. \"I can taste my juices on your tongue\", she whispered.\n\n\"I love the way you taste. I could get gastronomical about eating your cunt!\" And we smiled and giggled at each other.\n\n\"You know I have middle names, so I do!\"\n\nThat was my cue to resume stimulating her with my tongue. I'm not sure I can remember her middle names, as they came as a string of letters reinterpreted as lascivious assaults on her undefended cunt. I remember 'G' worked to good effect: mostly the sweep of an 'O' but spiralling deep inside her. 'M', 'R' and 'T' all involved some serious teasing of her clit that made her respond vigorously, and 'S' was a slow meander across her now throbbing clit all the way down snaking across her pulsating cunt. There was an added thrill when she said, \"And my confirmation name is spelt...\", and I worked my way through its letters, giving her a new interpretation of a name given her by her priest.\n\nEventually the stream of letters and names ended and I came up for air. We kissed again. My lips and cheeks were now covered with her sweet juice, and she enjoyed my sharing it with her. Then she licked two fingers of her right hand, covering them with saliva, before pushing them into her cunt. She closed her eyes and began to masturbate vigorously right in front of my eyes, pulling her splayed knees up higher onto the seat to pull herself completely open. Her eyes opened and met mine, and she smiled, knowing how much I was enjoying watching her ram her fingers in and out of her cunt. She closed her eyes so that I could continue to watch in privacy, as she built up speed.\n\nShe slowed, removed her fingers with a sigh, and brought her slick hand to my mouth to suck on. When I had cleaned her fingers of her juice, she pulled my head close to hers, scanning my eyes. \"I need you to make me come now.\" She took my hand and sucked on two fingers, covering them with saliva as she had done for her own. \"I need you to fuck me with these two fingers. You can do it quite hard. I want you to lick and suck my bud as you're doing it, and don't you dare stop till I come.\"\n\nI nodded wordlessly, and she wriggled in her seat to prepare herself for the onslaught. I had my orders. I eased my fingers, slick with her saliva, slowly into her as she bore down, pushing herself into my hand. I bent down and sucked on her clit, and her body arched on the seat. I flicked my tongue around it, making her shudder. Then I began to piston my fingers in and out of her in a smooth, firm rhythm. Aoife threw her head back, arching her body, allowing herself to take the punishment she had ordered for herself. She began to vocalise with \"Huhh... huhh... huhh\" in rhythm with my fingers. As I tongued her clit she produced a drawn-out \"Uww...\", and as my fingers pounded her at the same time, that new sound rolled into the other, \"UwwHuhhUwwHuhhUww\". My tongue flicked her clit, and she jolted electrically, adding a \"Ngg\" into her vocal score.\n\nHer hands tousled my hair, and then pulled my head hard into her sopping cunt. I got what breath I could through my nose, and didn't dare stop. Her hands dropped from my head and fell behind her knees, as she pulled her legs back on the seat, opening her cunt to me as wide as should could. I began finger fucking her ever more vigorously. The movements of the bus and my fingers together jolted her all over the seat. Her vocalising grew louder and faster in response. I thought about removing my fingers to apply more saliva, but the inner walls of her cunt were drenched in her juice. Her clit danced, swollen on the tip of my tongue. She had opened herself so wide for me, that I was becoming merciless with her. I added a third finger easily into the action. It stretched her open more, and she affirmed the change with a panting, \"Yuhss... Yuhss... Yuhss...\".\n\n\"Cuh... meen... nguh...\" she strained, barely able to indicate that she was about to come. I sucked hard on her clit, which had begun to pulsate by itself, as I pounded her hard with my three fingers. Her upper body bucked forward over me, and she grabbed my shoulders as if her long fingers were talons. She violently pushed her crotch into my face, knocking me a little backwards and off rhythm. She moaned a primal scream, and her cunt clamped my fingers tight. In quick waves, she bucked, moaned and contracted her cunt tightly on my hand. I held my fingers in place until the pulses began to slow. As I began to retreat, she grabbed my wrist to make sure that I slid out slowly. My fingers came away coated in her viscous secretions, and her cunt remained stretched open, with white ribbons of her juices stretched across the blackness of her gape, like a newly sighted galaxy.\n\nI looked up at Aoife's face. Her hair was a mess, her pale skin beaded with sweat, and her thin vest top rendered even more translucent because of it. She was panting, trying to catch her breath, her cunt and clit still giving her small aftershocks that electrified her body. She took a few deeper breaths, regaining a little more composure, and pulled me in on top of her, kissing me gratefully. \"You're...\" she drew another breath, \"You're really not bad at that\".",
        "\"You're welcome.\"\n\n\"I so needed that, so I did.\" She kissed me again, and then pulled me on top of her clothed breasts. I realised I was almost as exhausted as she was. \"Tell me: is your cock hard?\"\n\n\"Yeah, it is.\"\n\n\"Did it turn you on, doing that to me?\"\n\n\"You are so incredibly hot!\" I exclaimed.\n\n\"So now, 'tis my turn to be in your debt. Why don't you fetch down that pack of condoms; 'tis time we christen them.\"\n\nAs I moved to stand up, I realised that all my limbs were aching from the cramped position I had taken on the floor. I swung my backpack off the rack, and quickly fished out the unopened packet of condoms, leaving a slick of Aoife's juices on the zip and strap of the bag.\n\nI looked down to see the woman I had so vigorously fingered lying spread-eagled across two seats, naked below the waist. As she was taking up the seats, I returned achingly to kneel in front of her glistening cunt.\n\nShe took the packet from me, inspected it, and began pulling the plastic wrapper from it. In her impression of the Queen's English she mocked, \"I now declare these condoms open. May God bless them and all who sail in them!\" We grinned at each other. Then she opened the pack itself, detaching one foil-wrapped condom. She moved herself to a slightly more upright position, put the condom wrapper between her teeth, and her hands under my elbows. She pushed me to stand up, so I rose, steadying myself with one hand on the luggage rack behind my head. She stroked the visible bulge in the front of my trousers, and proceeded to undo my belt and unzip me. Almost in a replay of her sudden strip standing in front of me, she hooked her fingers around the waistbands of both my trousers and boxers and yanked them all the way down. My cock sprang out of hiding and danced around right in front of her face. She scooted forward, took the condom wrapper from her mouth, and proceeded to suck me for a few minutes, ensuring I was completely hard and horny. All I could do was look down on the top of head, her wanton hair washing back and forth across her shoulders as she moved her pink lips up and down my cock. She looked up at me, mid suck, and the sight was so sexy that I almost lost my load straight into her mouth again. As much as I would have loved that, I had my heart set on fucking her. I gently eased her face off my crotch to prevent any mishaps.\n\nShe leant back in the seat and began to open the wrapper and remove the latex. I stretched and looked up. That's when I realised I was standing with my hard cock clearly visible through the rear and side windows of the bus. It was now the turn of the good people of Mitchelstown to get an eyeful of a naked Englishman's erection riding Bus \u00c9ireann.\n\nI felt Aoife's hand grab my swaying cock, and I looked down to see her approach it with the condom in her mouth. She stretched it expertly over the head of my cock, and took me deeper in her mouth to push the condom tightly around my shaft with her lips. She pulled back, examined her work, and drew me down to her.\n\n\"This is for you now\", she whispered, \"You deserve to fuck a good Irish girl on your holidays, so you do. You've given me a lovely orgasm, so you don't have to worry, just fuck away to your heart's content\".\n\nI kissed her gratefully. Even though we had given each other great orgasms, we had not yet fucked. My cock twitched, eager for its coronation. I knelt back so that my cock hovered at the height of her awaiting cunt. She reached between her legs and opened the lips of her cunt for me, smiling as she looked me in the eye. I could hesitate no longer, and moved my cock forwards and into her welcoming cunt.\n\nShe was still slick from moments before, and my first gentle thrust slid me in deep enough for my balls to slap her. We both let out an \"Ahh...\" in united pleasure. I bent over her, kissing her, enjoying the sensation of being engulfed in her warmth. I drew my cock back, enjoying her full depth. At which, she placed both her naked feet on the floor, bringing her knees to either side of my hips. When I thrust back into her, she was tight, gripping my cock lovingly all the way in.\n\nI made a couple more slow thrusts in and out, enjoying every inch of her cunt's passage. I curled my hands around her ripe buttocks, so I could pull her into my cock. I picked up the pace, thrusting into her hard, starting to give her a proper fuck. She gave out another \"Ahh...\", and I saw that she had closed her eyes, lying back in the seat to enjoy the experience. I brought my hands up and groped her breasts greedily through the layers of fabric, and continued to fuck her hard. She moaned under the ministrations of my cock.\n\n\"I'm not sure I'm going to be able to last that long\", I told her, knowing that her blowjob and the tightness of her cunt had combined to make control nigh impossible.\n\n\"That's fine. You can come whenever you want\", she replied. I felt totally content, and did what she told me to do. I fucked for a few more minutes without holding back. Then my balls twinged, and, with little warning, I came inside her on a deep in-thrust. I collapsed on top of her, panting for breath. I just held her, gratefully, for a long moment. It wasn't an earth-shattering orgasm this time. In fact, it was fairly ordinary. Yet I wasn't disappointed, there was something refreshingly beautiful about having a nice, ordinary orgasm with Aoife.\n\nI eased my slowly softening cock out of her. She brought her legs together, so I could collapse on the seat beside her. She ran her fingers through my hair, kissing my forehead. She reached down and released my cock from the condom, before using her mouth to clean me off. She kissed me again, \"Remember this?\" she said as I tasted my cum in her mouth. It mingled with the lingering taste of her sweet cunt, and I felt totally satisfied.\n\nWe cuddled together for some time, occasionally kissing, not saying a word, each naked from the waist down. The South Tipperary countryside flashed past the windows.\n\nEventually I asked, \"Do you think anyone heard us?\"\n\n\"They did, to be sure\", she responded.\n\n\"Oh, I wondered whether we were getting a bit loud.\"\n\n\"Don't worry, it was pretty much all me screamin' like a banshee as you got me off. Even me ma's told us off: 'What will the neighbours think now?', so she says.\"\n\n\"Has she caught you masturbating at home?\"\n\n\"She hasn't caught me, but she's wise to the noises she do be hearing from my room ever since I was a teenager.\"\n\nThe film played in my mind of Aoife masturbating through her teenage years on a little single bed in a picture-postcard cottage. The film reel ended, and I became aware of our surroundings again: the countryside beyond the window, the coach passengers, our tired, naked crotches side by side. \"So, you think they heard us?\"\n\n\"Young fella, I betcha everyone on the whole coach, from the driver back, knows full and well that we're shagging back here now!\"\n\n\"Really? No one seems to mind.\"\n\n\"They're too fecking polite and prudish to come up and say, 'Do you mind awfully not shagging the feck out of each other back there?', so they are.\"\n\nI thought about it: everyone knows. I had unconsciously become a sexual exhibitionist, and enjoyed every second of it. It felt OK. It felt kinky, but it also felt OK. Getting used to my new identity as an exhibitionist, I stood up and stretched. Anyone on the bus would have had to have had exactly the right angle of view to glimpse my limp cock between the headrests. There didn't seem to be anyone by the road side who might glance in at it, and there was no one behind us to be horrified by my full moon through the rear window. I stretched my weary limbs, and felt Aoife affectionately kiss my cock. It didn't react, it was quite happy with the entertainment it had received. Aoife moved back and pulled on her green knickers, she handed me my blue boxers.\n\n\"Cover yourself up, young fella!\"\n\nI sat down, and pulled on my underwear, watching her pour herself back into her jeans. A minute after we were both fully dressed the bus came to a stop in Cashel to let a passenger off. The passenger, a middle-aged man in a checked shirt and flat cap, gave us a disapproving stare from the pavement, as the bus pulled off past him. So, there's the reality, I thought.\n\nAoife stood up and fetched down her cloth bag. As she was closer to the aisle, her standing drew the attention of the odd few glares from the fellow passengers a few seats in front. \"Oh, it looks like they're not happy\", she reported.\n\n\"I'm happy though\", I told her sheepishly.\n\n\"Glad to hear it now\". She took a tissue from a pouch in her bag and wiped her face and hands. Then she took a brush and began fixing her hair with it. I watched, the sight taking me back to observing her when she got on the bus in Killarney: her raven tresses dancing in long, loose waves over her thin, pale shoulders. \"You know what this is now?\", she asked.\n\n\"What what is?\"\n\n\"What we've got here, on the back seat of these buses... Serendipity!\" she declared.\n\n\"That's a nice word for it: two strangers coming together.\"\n\n\"Or coming one after the other\", she smirked at me. \"A chance meeting between two total strangers who hit it off and fulfil each other's needs. A mutual exchange, to be sure. You're a fancy journalist in London, and I've got medical school. You'll get on that plane, and I'll... So, I'll probably crash at my cousin's place in Dublin, and then \u2014 like any sensible person \u2014 catch the TRAIN back to Cork tomorrow. What I'm saying is that who knows if we'll meet again. And I just want that to be OK, to have this now.\"\n\nI hugged her close, \"You're right, I find it too easy to romanticise things, but I should just be grateful for today, grateful to you\", and I kissed her.\n\nWe sat talking in a loose, casual embrace, talking about her staying over in Dublin, catching the train, what I would do first when I got back to London, enjoying the little details of each other's lives. She spoke a bit about medical school. She was a dedicated student, possibly even boring to her classmates, but she clearly was going to be a talented doctor.\n\nWe sped through the Irish countryside, and the bus was quiet. Aoife leaned in and kissed me passionately, then she dropped a hand to my lap and began caressing my cock through the cloth. I was a little surprised, as it couldn't have been more than forty minutes since we finished having sex. I looked at her: her head was lower than mine, and her beautiful blue eyes were like a puppy dog's looking up at me. She had chosen the lower, submissive pose, which gave me a panorama of her cleavage. I had so neglected her breasts, I thought to myself. I bent my head and returned the passionate kiss, then I reached out and cupped her left breast, enjoying feeling it move under my touch. She sighed in my mouth.\n\n\"You know, there are still five condoms in that packet now\", she related. Her hand was still brushing my lap, and my cock, which had been warmed by this touch, began to get a little more stimulated at the big hint she was dropping. She looked me in eye, \"Do you want to fuck me again?\"\n\n\"Yes, I'd love to, but won't they kick us off the bus if they hear us doing it a second time?\"\n\n\"In the middle of County Tipperary or County Laois or wherever we are? No decent Irishman would even think of abandoning anyone here!\" And she was right, we were in the middle of nowhere, rolling green countryside, dotted sparsely with the odd whitewashed cottage.\n\n\"Do you want me to eat your cunt out again?\" I offered like a gentleman.\n\n\"'Tis a nice offer, but I don't think my cunt is up for that again quite yet now.\" She nuzzled my neck and purred, \"I'll settle for a bit of a shag though. How would you like to take me?\"\n\nHer question set off a Kama Sutra flipbook in my mind. I grinned at her, and said, \"You driving the bus and me taking you from behind!\"\n\n\"Hah, and driving the bus over a cliff as I came!\"\n\n\"What a way to go!\"\n\nShe unbuttoned her jeans and pulled them down, as if getting herself ready to saunter up to the driver and say 'Do you mind awfully, but me young fella and I would like to shag ourselves silly in your driver's seat'. While I was thinking about the comedy sex, she was already taking off my trousers. She smoothed her long hand in a spiral over the blue fabric covering my lap, and cock tingled. Then she drew herself up to kneeling sideways on the seat facing me. I held her, and nuzzled my head into her welcoming bosom. She lifted my chin and kissed me passionately, her hands were lifting and caressing under my black t-shirt. She moved her head down, and holding up my t-shirt, swirled her tongue around my nipples and kissed her way down my chest and abdomen. Her lips moved over my boxer briefs and then back up to my waist. She sighed, and her hands pulled open my shorts and freed my half-erect cock. She stared at it, observing the movement of the bus making it sway.\n\nShe bent her head lower and kissed my cock, it rising slightly to meet her lips. Her mouth kissed back and forth along my cock, stimulating me, until its head rose. Her lips parted and engulfed the head of my cock. I sighed at the pleasure of her touch. I looked down at her, her hair tickling against my belly and leg, and her vest slid up under her arms, revealing the clasp of her bra and rippling of her backbone down the milky sea of her bare back. Her backside, cupped by her dark green knickers rose and fell steadily in time with the pleasure I felt from my lap. I watched, mesmerised by her arse. Slowly realising that I was not the only the one who was able to enjoy the sight; anyone looking up the aisle of the bus could glimpse this bobbing emerald and alabaster glory. If the driver were to look in his mirror, he would have found a wonderful redefinition of 'rear view'.\n\nAoife noisily slurped her way up and down my cock, coating it with her saliva. I realised I was completely hard, but I was in no particular rush. It was a couple of minutes before she came up and kissed me.\n\n\"Let's fuck!\" she sighed in my ear.\n\nI fished out the condom packet that had been stuffed between the seats, and secured the rubber in place. She took my cock in hand, giving it a few strokes. Then she climbed between my legs with her backside towards me. She reached back and pulled the crotch of her knickers to one side, exposing her cunt to my sight. With knees slightly bent she took my cock in her other hand and gradually lowered herself onto it.\n\nShe wasn't as wet as before, understandably, and the rocking of the bus made her ease herself onto me cautiously. I drank in the view of the lips of her cunt parting to admit me.\n\nAoife was grasping the headrest of the seat in front of us, which was thankfully empty. She experimented with a few shallow strokes, teasing the head of my cock with her opening. She came down my cock halfway, moaned a little, and pulled back up. Then she gradually sank all the way down to sit in my lap, taking my whole length inside her.\n\n\"Jay-zuss, that feels good!\" she moaned as our interlocked sex throbbed against each other.\n\n\"I love being inside you, Aoife. You feel so good!\" I returned.\n\nIt was as if time stood still as we enjoyed being locked together as the countryside strained to glimpse us through the window. Then she repositioned her hold on the headrest, and started fucking me in long slow strokes. I pulled back the gusset of her knickers further to stop it interfering with the motion. Her puckered pink asshole was exposed to me, and it was beautiful. I held her hips, and hungrily pulled her hard onto me, bucking my own hips up to increase the power. We grunted in unison at the physicality of our desire. She crouched over me, allowing me to thrust up into her for a few strokes, before letting her take control of the motion once again. I perched on the edge of the seat, leaning backwards to watch her wank me off with the warm grip of her cunt, observing the declinations of her pink star above.\n\nI leant back into her body, and slid my hands under her vest and up her spine. She mewed to my touch. I brought my hands round and cupped her breasts, using them for purchase to pull her into me more forcefully. Disappointed with the feel of satin mounds, I circled back around and unclasped her bra, feeling masterful in my sexual dexterity. My hands circled back and slipped below the loose underwire to envelope her bouncing breasts. Her delightful nipples nudged into my fingers as I took full possession of her. She gave a pained moan at the new-found burden of her pleasure, and impaled herself with greater vigour and speed.\n\nGrasping her naked breasts, I began thrusting up to meet her, sensing that she needed help. She willing submitted to my thrusts, hovering over me, willing me to fuck her. As I fucked her harder, she vocalised each thrust. Each time she would be pushed up and forward into the seat in front, which creaked against her.\n\nMy hands moved down to hips so I could fuck her harder still. She was now almost standing, but with legs akimbo to receive my eager lust. She had wrapped her arms around the headrest, and rested her chin on top of it. I inched up, until I had to move one of my legs up onto the seat to kneeling, with the other on the floor. Like a spring under me, my leg muscles helped me power into her.\n\nI rose up, driving into her.\n\n\"Fuck...!\" she exclaimed in a long, drawn out expletive.\n\nI kissed her naked shoulder, and then my eyes rose to see faces turned towards us from all around the coach, seeing my visage in deep sexual concentration bob over the shoulder of the oblivious raven-tressed young woman moaning out the throes of her passion.\n\n\"Fuck!\" I hissed for quite different reasons, and pulled her off the headrest. We fell back into the seat, and my cock surged violently into her as we crumpled into each other.\n\nShe, still oblivious, cried, \"Ahh...Ngg!\"\n\n\"Shh! Everyone's watching us\", I hissed in her ear, while clamping her down on my lap to stop her moving.\n\nShe didn't answer, but lolled her head back on my shoulder, wearied by the exertions. I kissed her stretched-out neck.\n\n\"I don't care!\" she mouthed dreamily, \"Fuck me like that a bit more, and you'll make me come\".\n\nIt was hard to resist the solemn duty of a gentleman to give pleasure to his woman. So hard, that it almost blotted out the horror that everyone was watching us. As soon as my hands released her hips, she was in motion, sliding herself sloppily up and down my cock with obvious glee.\n\n\"Do me hard, Mark\", she continued in her dream-like voice, \"Please!\"\n\nWithout thought I thrust into her.\n\n\"Yuhsss!\" she moaned loudly, \"more!\" she begged.\n\nMy right leg was still bent under me. Its tendons and muscles tightened into an explosive thrust deep in Aoife's cunt. She screamed, and I thought I could hear uncomfortable murmurings around the coach. I put my hand to her mouth to tell her to keep it quiet, but she sucked greedily on my fingers. She impaled herself on my cock once more, and I instinctively thrust up to meet her motion. She bit into the skin between my thumb and forefinger with the urgency of her pleasure. Realising it would keep her quiet, I held my hand so that she could bite down it hard with every thrust. The pain of her bite was mitigated by the pleasure hormones surging through my brain.\n\nI began fucking her hard again, letting her rip into my hand with her teeth. It took less than a minute then to bring her to the summit of her delight. The first I knew of it was a bite that I thought would shear the bone in my hand, then I felt her cunt clamping hard on my cock, and she fell forward quivering, letting my bruised hand slip from her mouth.\n\nHer pulsating cunt irresistibly squeezed me. I repositioned myself against her collapsed frame, and drove deeply into her. It took only five deep strokes into her helpless, quivering body before I too exploded, \"Ahh!\" sighing deeply and loudly at the release.",
        "I removed my leg from under me, and slowly eased the two of us down onto the seat, still engaged. Aoife's head lolled back onto my shoulder again, and I repeated my kissing of her neck. The corners of her eyes glistened with tears, and I repositioned so that I kiss the salty tears on her right cheek.\n\n\"You're crying\", I said compassionately.\n\n\"'Tis just... you fucked me so hard, you brought tears to my eyes\", she said emotionally.\n\n\"I'm sorry, Aoife. I didn't mean to hurt you.\"\n\n\"You didn't hurt me. These are tears of joy.\"\n\nI kissed her deeply, crying a bit myself at the emotion of our post-coital exchange, allowing myself to be vulnerable with her.\n\nShe pulled herself gingerly off my softening cock and repositioned her twisted underwear to a state of moderate modesty. She fell back into the seat beside me like a ragdoll.\n\nSomewhat wary of the other passengers, I pulled up my trousers and fastened them. Then I wrapped my arms around the beautiful, exhausted woman beside me and held her close. She wriggled in my embrace, finding a comfortable position.\n\nWe lay together in that position for such a time that I thought that one or both of us might fall asleep from our exertions. I was stirred by her tapping my shoulder.\n\n\"You're squashing me now\", she said.\n\nI noticed that I had become slumped over her, so I moved back into my seat and stretched my arms. She sat up and did the same, yawning. She saw that her bra was undone. Instead of refastening it, she pulled her vest top down to her waist to reveal her breasts hardly contained by their loose emerald cups. She pulled off her bra, and let it fall into her lap. Disencumbered, she stretched out in the seat. The invitation was too much to resist, and I greedily brought my mouth to her chest. She brushed her fingers through my hair, holding me to her lithe body. I kissed her breasts, her nipples, her cleavage, her lower neck, all with the reverence of one kissing a sacred artefact. She hummed softly under me, with her head thrown back and eyes closed. She brought my head up, bowed forward and kissed me gratefully.\n\n\"Thank you for that\", she sighed in my mouth.\n\n\"No, thank you\", my breath returned into her mouth.\n\nWe kissed again, and then another lingering embrace before pulling back. She passed her hands through the straps of her vest and looped them back over her shoulders. Without her bra, the top was rather obscene, her nipples poking through the gauze-like cotton, and every contour of her breasts on display. She sat curled there in her vest and knickers as if we were having a sleepover.\n\n\"You do realise what position you were in while we were fucking, don't you?\" I said, thinking I should tell her quite how exhibitionist we had been.\n\n\"To be sure, you were taking me from behind, the way you said you like it\", she smiled at me.\n\n\"But you were clinging on to the seat in front for dear life\", I added, gesturing at the said recently defiled property of Bus \u00c9ireann.\n\n\"Hah! Can you see my fingernail marks in it?\" she inspected the back of the seat.\n\nI looked at my still reddened right hand, and told her, \"But look, see what you did biting my hand off\".\n\n\"Hah-hah! Sure, I did wonder whether I was hurting you, but you didn't take your hand away, so I thought I'd just take my mouthful of it now.\" She reached for me and rubbed my hand soothingly.\n\nOddly, I felt hungry, from what she said and the exertions. I remembered my preparations for the trip and asked her, \"Are you hungry? I've got some sandwiches in my bag\".\n\nShe nodded, and I stood, reaching up for my backpack. Eyes were glowering all over the coach. My heart compressed and my mouth felt dry. I hurried the shop-bought sandwiches out of the bag, and sank back into our partial privacy.\n\n\"Fuck, they're pissed off at us!\" I hissed at Aoife.\n\n\"Sure they are\", she sighed, as her tits shimmered under their veil.\n\n\"You know, I was basically fucking you up against the back of this seat.\" I gestured towards it again, this time with a packet of sandwiches in my hand.\n\nShe smiled at the memory of her orgasm, and took the cheese and pickle sandwich I offered.\n\n\"You had your arms wrapped round the headrest, with your chin on top, but you were oblivious. When I pulled myself up against you, I saw the whole bus had turned round to look at us... they could see!\", I exclaimed.\n\n\"So, they all got a good look at my fuck face now. Bet that scared them!\" she shot back at me.\n\nI visualised her contorted face in the throes of desire, and felt myself horny once more at the thought, rather than scared off.\n\n\"The whole coach saw us fucking, and they got an eyeful of you moaning your head off!\"\n\nShe came in closer, kissed the lower part of my cheek, and whispered, \"Sure 'twas worth it though\".\n\nI gazed into the azure pools of her eyes, and down her barely covered body. My cock surged in my pants, and I knew that, against my better judgement, I wanted to fuck her again.\n\n** Part three: The Journey's End **\n\nI was completely entranced by Aoife. She could be so strong and also so weak, so sharp and witty in conversation, yet know how to heal with her words. I had enjoyed her initiating sex with me, but felt the manly urge to turn the ignition key myself. It hadn't been that long since we last had sex, but looking at her, thinking about her, made me hard again.\n\nWe had both munched through the sandwiches I had bought earlier in the day in Killarney, and I felt refuelled. I did not want to ask her, I had to tell her, \"Aoife, I'm going to fuck you again now\", I whispered firmly in her ear as I held her. I pushed my hand between her legs to make the point.\n\n\"You dirty English slut\", she exclaimed, \"You're not long after bouncing me off your cock now!\"\n\nI didn't want to lose the upper hand. I asked her, \"How do you want me to take you?\"\n\n\"You seriously want to fuck again right now?\" she shot back, looking into my eyes.\n\nI stared into her so-blue eyes and my cock strained in my trousers. Affirming my bodily counsel, I nodded.\n\nShe drew her long fingers across my crotch, investigating my hardness. \"So you are serious now\", she answered her own question without inflection in her voice.\n\nShe looked away in concentrated thought, her hand resting against my bulge. She brought her eyes back to mine, and I searched them, unsure of what she was thinking.\n\n\"Today has been really special, so it has\", she began thoughtfully, and I was saddened by the thought that she was about to call time on our adventures of the flesh. \"And you're really special, Mark. I'm so glad I met you, so I am\", she continued. I steeled myself for the 'but...'. There was a long pause, and my eyes fell to her lips, waiting for her words. She sighed, and her eyes bore into me deeply. \"I want to share something special with you.\"\n\n\"Aoife, what we have is special, and, if you want to say that that's enough, I'll just be happy with what we've shared, but I just want...\"\n\nShe raised her hand from my crotch to my mouth to hush me. \"I don't want you to get the wrong idea now...\", she continued, trying to search for words. \"'Tis just there's something special I have only shared with a couple of lovers...\", she continued with some difficulty. \"Gawd...\", she tilted her face to heaven for divine inspiration. She took a deep breath and brought her face down to look at me again. She had changed out of her earnest state of confession, regained control, and that impish smile was back on her face. \"To complete your tourism experience now\", she grinned, \"How about I show you the true Ring of Kerry?\". She left the question dangling between us. She inhaled and exhaled deeply, clearly glad that she had managed to say it.\n\nI looked at her quizzically, not comprehending what she meant. What could she possibly mean by the Ring of Kerry? After all I had bussed and walked myself all around that route in the last week, and now we were many hours from her home county. Yes, she's a Kerry girl all right, and a downright sexy, wonderful one. What could a sexy Kerry girl possibly mean by offering to show me the Ring of...? It hit me like brain freeze from a hasty ice cream, and my jaw dropped.\n\n\"You're a bit slow on the uptake, young fella\", she grinned at me.\n\n\"Sorry, but... err... but...\". There was no delicate way of putting it.\n\n\"Precisely!\" she answered, and then realised that she needed to stop toying with me. She leant in, her ungirded breast nuzzling my bicep, and her mouth close to my ear. \"Mark, it would be really special if you fuck me in the arse\".\n\nI couldn't believe how purely and lovingly she said it. If she had said it in Irish, I would have ignorantly taken it for some sweet nothing by its tone, yet in plain English she had woven the dirtiest of propositions into poetry.\n\nMy eyes shifted from right to left, not knowing which way to go in this conversation. I took in a sharp breath. I wanted to fuck her, and the thought of this kinky twist, hardened my resolve, but...\n\n\"You know it won't turn you gay now!\" she joked unhelpfully. \"At least not any gayer than you already sound with that English accent of yours!\" she jibed.\n\n\"I just... I just... don't know what to say\", I said the truest thing I could.\n\n\"Just yes or no, 'tis fine now.\"\n\n\"But don't you need some room to do that... You can't do it on the back seat of a bus... Don't you need lube or something.\" I really didn't know why I was finding excuses, apart from the whole idea felt impossible.\n\n\"So, you've never taken a girl... or a guy\", she added cheekily, \"up the arse before?\"\n\nI hadn't realised that I had so obviously demonstrated my inexperience in this matter. I placed myself in her hands, looked her in the eye, and told her, \"You've hooked yourself a virgin here\".\n\nShe placed a hand on my arm comfortingly. \"This is something really special for me to share with you. To be sure, I didn't like having anal sex when I first tried it, but then I grew into it, like an acquired taste, so it is. I think 'tis because I'm a medic: I'm fascinated by what the human body can do.\"\n\nI took her hand from my arm and kissed her fingers. I inhaled deeply, knowing I had lighten up. I smiled at her and joked, \"You know how much noise you made when I was just fucking your cunt... You'll blow out a tyre if I fuck you in the ass!\"\n\nThat broke the ice, and we laughed, more for release than for the humour of it.\n\nAoife pulled back from me, and slipped the two spaghetti straps of her vest from her shoulders. The fabric rippled as it fell over the contours of her naked breasts to pool at her waist. She straightened her back, presenting herself to me. I stared hungrily at her rose nipples, knowing that they were proffered as sugar cubes to coax a gun-shy horse.\n\nI circled her in my arms, and leant in to plant a kiss on the azimuth of her right breast, then kissed her passionately on the lips.\n\n\"It seems my tits have got a way with you\", she purred.\n\nI descended to suck longingly at her nipples, while gently kneading her breasts.\n\n\"So, do you want me to lead the way?\" she asked with her lips to my scalp.\n\nI looked up like a baby from my feast, and nodded. So much for taking control!\n\n\"Will you fetch my bag down for me?\" she said with her hands on my shoulders to emphasize that I should move.\n\nI stood, grasping the corner of the luggage rack. No one was looking in our direction this time. I wondered whether they had forgotten what we did earlier, but knew that they were just stewing in silence.\n\nI lifted Aoife's cloth bag down to her. As I lowered myself back to the seat, I told her, \"We need to be quiet this time. I really don't want to upset these people\".\n\nShe pursed her lips and wrinkled her nose a little, as if to concede that trying to be quiet and doing so are two completely different things, especially where anal sex is concerned. She pulled a toiletries bottle from her bag and handed the bag back to me. I repositioned it in the rack, checking to make sure that it was still all quiet on that front.\n\nWhen I returned, she had tucked the bottle between the seats with the packet of condoms. She leant back against the side window and pulled me onto her. We kissed each other deeply, as I massaged her breasts and she fondled my rump.\n\nWhen we came out of the kiss, she had the air of a teacher, saying, \"This is how 'tis going to work\", she paused to check she had my attention. She had it. She pulled her vest back over her breasts and shoulders. \"I need you to pull my knickers off, and eat out my cunt again.\"\n\n\"I'd love to taste you again\", I told her.\n\nShe smiled and trembled a little at the thought of it. \"I really enjoyed how you played with me earlier, so I did... But I need you to get me worked up as quick as you can now.\"\n\n\"I think I know how to do that\", I smiled.\n\n\"So then we change places, and I'd like you to fuck me for a bit like we did before... in my cunt... to make sure we're both ready. Then...\" She paused, and fished out the little bottle from between the seats. Its label read 'Aloe Vera Facial Moisturiser'. \"Now this will be our lube.\" She squeezed a small dot of the clear gel onto her forefinger and dabbed it on my nose in a flash. She grinned cheekily at me, and then rubbed it up to the bridge of my nose and back.\n\n\"Are you sure this stuff is OK with condoms?\"\n\n\"To be sure, it hasn't any oil in it that could break down latex\", she said authoritatively, and I remembered that she knew about these things. \"The main thing is that 'tis slippy, and that's just what we need. You need to use lots of it now, or else you'll have me screaming the place down. When I tell you, I want you to squeeze as much moisturiser on your finger as you can and slowly push it in my arse, keeping it gentle like. Have you got it?\"\n\nI nodded, and kissed her passionately. Remembering step one of her beginner's guide to anal sex, I knelt in front of her and pulled her knickers off, dropping them on the seat beside her. She planted a foot either side of me. The sight and aroma of her waiting sex was more than familiar to me, it was like a homecoming. I threw myself rapturously into the valley, and began gentle lapping strokes of her rosy cleft. Aoife purred gently at the commencement of her pleasure. I worked slowly deeper into her, and then gave attention to her emerging clit. Tasting that she was overflowing with nectar, I licked two fingers and fucked her with them, all the while spiralling my tongue around her clit. Her head was lolling back, and she was sighing, now fully aroused.\n\nShe allowed me continue for a minute more for her own pleasure, before doubling over me and sighing, \"I need your cock inside me now\". She pulled me out of her with her fingers weft through my hair, and kissed my dew-stained lips firmly.\n\nWe changed places. She hastily yanked down my trousers and boxers. She was breathing heavily as she reached for the condoms. Fiddling with the wrapper, she prepared me for my undercover mission. She wanked my erect cock a few times, eliciting sighs from me.\n\nBefore I knew it, she had assumed the same position as before, and was impaling herself eagerly back down onto my cock. My work in preparing her made her cunt slide easily over me, yet still hugging tightly. Without hesitation, she began long, slow movements, taking me from just the tip of my cock to the base of its shaft. We duetted with quiet moans of appreciation.\n\nThere before me was the rising and setting of the rose star, gazing right back at me with monocular vision, crinkled in a smile. I did a mental checklist, feeling out for the moisturiser bottle, and mentally preparing myself for my rocket trip thither.\n\nAoife's cunt squeezed me as she twisted slightly to speak to me. \"I think you better grease me up now\", she purred.\n\nThe aloe-vera gel spurted into my hand. I made sure I coated my finger with as much as it would carry before bringing it to bear. My fingertip spiralled the corona of her anal opening, the gel making it twirl fast and slick on her pucker. I could feel her cunt reflexively bearing down on my cock sheathed inside it with anticipation, as her breathing became slow and heavy.\n\nI grasped her left hip with my left hand, and began to probe with my finger. There was a momentary resistance before she opened herself, and my finger slipped into her up to the first joint.\n\n\"Hohw...\", she moaned.\n\nI rotated my finger, bending it back and forth a little to ease back the muscle. I slipped in as far as the second joint, and found I had enough lubrication to begin to move in and out of her about half and inch.\n\n\"How's that?\" I whispered to her.\n\n\"'Tis good, add more lube and slowly go deeper.\"\n\nI slowly withdrew. Her asterisk didn't close but held the space where I had been. I liberally applied more gel to my finger and revisited. I slid further, and she moaned softly. As I went further, her cunt tightened on my cock. With my finger, I felt my own cock twitching through the walls between her ways. Then I began to move my finger in and out of her, further than last time, finger fucking her ass. She once again gripped onto the headrest in front of her, and flexed herself so that I could go deeper. As my finger continued to fuck her, she drew herself up my cock a little and slid back. Her movement synchronized with mine and she allowed herself to be doubly fucked. My finger in her ass pushing her cunt tightly round my cock.\n\n\"Time for the next level now\", she panted.\n\nI eased my finger from her, and she shuddered as I pulled out of her. She slid herself off my cock and grabbed the moisturiser bottle, squirting a large helping into her hand. Rubbing her hands together, she proceeded to run both hands all over my cock, covering its latex sheath with a coat of the gel. As she rubbed me, I leant back to enjoy it. She was standing, straight-legged, bent at the hips between the seats. I saw that the limited space meant that her backside was pushed right against the side window. In reflection, I saw she was presenting her aroused cunt and gaping anus to the passing world.\n\n\"Sure don't move until I tell you!\" she said, straightening up and turning her bubble bum back to me. She held her arse cheeks wide and nudged the tip of my greased cock against her still unclosed ring.\n\nObediently, I remained still as she brought her muscle down halfway over my glans. She had trouble bracing herself against the movement of the bus while holding herself open. I placed my hands on her hips to steady her. With that support she sank a little lower. Her breathing was focused, making herself relax, as she pulled her muscle over the rim-ridge of my glans. Once done, she moved her hands back to the headrest for more support, allowing herself to get used to my intrusion. I gently rubbed her naked thighs, as her anus crushed the head of my cock. The pain of this cock torture was exquisite.\n\nI don't know how long we paused like that, with me just inside her opening, as we both adjusted to the sensations. Then she bore down about an inch on me.\n\n\"Haww...\", I gave voice to the cock torture of her vice-like anal passage, while she grunted primally. The movement continued up and down, slowly expanding its gamut, and we were fucking. I was virgin no more.\n\nAoife gripped the headrest and held herself at the height of the movement. Her voice fell down under her armpit, \"You can move in me now\".\n\nI took her hips in hand, planted my feet firmly, and eased my hips up, slowly plunging my gelled-up cock into her. I slowly adapted to her impossible vice: each stroke, each fraction of each stroke, was an exertion of power, of body as of will. I matched her earlier speed, and then pushed for a little more: a little more depth, a little more speed.\n\nI pushed up into her further, and she cried in pleasured pain. I suddenly felt destructively animalistic as I drove into her harder. She vocalised her experience wordlessly, allowing me to continue the wanton destruction of her ass. She twisted, placing a heavy hand on my shoulder, gasping, \"I can't take any more\". She pushed me back into the seat, and ever so slowly eased herself off me. We both grunted \"Huhng!\" in unison as she eased my rim through hers. Finally released, my throbbing cock flailed in my lap like a prisoner brought up from solitary confinement who could no longer walk. Above it Aoife's stretched asshole gaped wide and red.",
        "She slithered down the back of the chair in front as her legs buckled under her. I half caught her, hooking my wrists under her armpits, and lowered her down. She came to rest half kneeling on the floor, her head forward, against the seat cushion.\n\n\"I'm sorry, I didn't mean to get so rough with you\", I said stroking her hair.\n\nHer flushed face turned up at me from under a mess of her hair, she breathed, \"I... I wanted... you... us... to take it out of the comfort zone. I wanted to let myself be vulnerable to you\".\n\nI bent over her and kissed her scalp hotly again and again, as if wanting the kisses to push through to her brain. She kissed her way up the inside of my thigh. Then she titled her head to me, looking at me with eyes full of emotion for what she had shared. Her left hand brushed my other thigh, and then eased the condom off my aching cock.\n\n\"I want your cum now\", she whispered, half to my cock, half to me. She ran her tongue up the shaft of my throbbing cock, her saliva a salve for my hot soreness. She licked my cock wetly, without teasing or pressing, knowing exactly what I needed.\n\nShe came to composure on her knees, and reached for the moisturiser. She didn't ask permission, she didn't have to. I moved slightly forward in the seat, then slumped back, so she could get what she wanted. Her lubed-up thin finger passed easily into my asshole. Even though she had toyed with me here earlier, this was different, there was the slick gel and I was ready to give her my vulnerability.\n\nHer mouth hoved delicately down my cock's shaft, and, thus distracted, she plunged her finger a little deeper into my ass. The double sensation was unlike anything I had ever experienced. She began to suck my cock in long, wet strokes, conducting them in harmony with the anal finger fuck she was giving me. I loved this dirty, kinky blowjob. I could not deny my ass, my cum to this wonderful woman now.\n\nShe pulled her mouth from the apex of her blowjob with a slurp, kissed down the dorsal ridge of my shaft and began to swirl her tongue around my balls. As she did, she rotated her finger inside me. Then she began to beckon me, inviting me to come to her, curling her finger slightly inside my anal passage. \"Haah...\", I exhaled roughly through this new sensation. Of course, good Doctor Aoife knew how to find my prostate. She continued to nudge the spot she knew would bring me unspeakable pleasure as she resumed sucking my cock. The two movements together combined to transport me to another plane. I let my head roll back in the seat, closed my eyes, and opened my legs wider to let Aoife take all of me.\n\nHer expert ministrations meant she didn't have to wait long for me to come. As she beckoned me with her crooked finger, I came for her. Her anatomical knowledge made me feel every part of my orgasm separately: tightly pumping testes, squeezing prostrate and throbbing cock. I was going to tell her I was coming, but I knew it was OK, and I knew that she could feel exactly what was happening inside me. I flung my arms wide like a man crucified, and pumped my cum gratefully into her mouth. The spasms were intense, but this time I was not bucking around on the seat, these clenches happened far too deep for that.\n\nI looked down at Aoife, as she beamed back at me, a dribble of cum on the side of her mouth.\n\n\"How do you like it when I fuck you now?\"\n\n\"I love it, doctor. You know how to play me like a puppet!\"\n\nShe snorted with laughter and began to disengage her finger from my asshole.\n\n\"Slow! Please, slowly!\" I exclaimed.\n\nShe slowed to a careful withdrawal.\n\n\"Deep breath in\", she said.\n\nI did what the doctor ordered.\n\n\"And deep breath out\", she added.\n\nI exhaled as she pulled her finger out of me. She smiled at the success of her expert rectal examination.\n\nI pulled her onto the seat beside me, and passionately held and kissed her, tasting my cum on her. We lay kissing in that embrace, both naked from the waist down, and covered with aloe-vera gel and each other's bodily secretions.\n\n\"Mark, I don't mind whether you get your bag or mine, but I think we need tissues.\"\n\nI nodded and staggered to my feet. My cock and asshole felt raw from their exertions. I shifted on my feet try to feel more comfortable. Then my eyes locked with those of a red-haired woman a little older than me. She mouthed a perfect 'O', and I realised that the angle up and across the aisle gave her a full view of my flaccid, but still stretched, cock. I swiftly grabbed Aoife's cloth bag and fell back into hiding.\n\n\"Fuck!\" I breathed, \"I've just given a woman an eyeful of my cock!\" as I handed her her bag.\n\n\"Hah! You should charge now!\" Aoife sniggered. She opened her packet of tissues and handed me one, saying, \"Wipe yourself down and get your knickers on\".\n\nShe pulled her feet up onto the seat, so she could wipe down her cunt and asshole. I pulled up one foot and wiped my raw hole. We went through a few tissues as we cleaned up, and Aoife pulled on her knickers and brushed her hair. I pulled up my boxers and trousers, fastening myself up. Just in case my flashing my cock around stirred up trouble I tried to assume a look as if nothing had happened.\n\n****\n\nThe coach's address system crackled on, and I thought that the driver was going to address the whole coach about the naughtiness on the back seat. Instead came a gruff, \"Newlands Cross. Newlands Cross\", announcing we had reached the outer suburbs of Dublin.\n\nAoife and I sat silently side by side, my arm around her shoulders, her hand on my chest. She still wore her thin vest without a bra and green knickers, not wanting to pull on her clothes. I hugged her closer.\n\nWe sat in happy silence as the coach continued through the South Dublin suburbs. The rush-hour traffic was coming out of the centre as we passed in the opposite direction.\n\n\"We're almost there\", I stated the obvious.\n\n\"Just serendipity remember\", she reminded me.\n\nI sighed, \"I know: two strangers fulfilling each others needs\".\n\n\"To be sure, we've shared something special\".\n\n\"I don't want you to misunderstand me, Aoife. I certainly am not the one-night stand kind of guy...\"\n\n\"Or one-bus stand!\"\n\n\"Two buses, Aoife. Remember?\"\n\n\"Hmm... Our first blowjob!\" she reminisced, rubbing her hand against my t-shirt, stimulating my nipple.\n\n\"You know, I've never allowed myself to be quite so vulnerable with a woman\", I told her.\n\n\"Sure, I was worried you'd dismiss me as some weird nympho when I asked you to fuck my arse, but I knew I wanted to make myself vulnerable to you. 'Tis something really special, and I suddenly knew I wanted to share it with you, so I did.\"\n\n\"I feel very comfortable with you, Aoife. I'm surprised how emotional fucking a beautiful stranger can be.\"\n\n\"Sure, you caught me welling up after sex.\"\n\n\"Are you OK?\"\n\n\"I'm fine. 'Tis just as you said now: this has been emotional.\"\n\n\"As I said, I don't want you to misunderstand...\"\n\n\"Just say it then, Mark.\"\n\n\"You know, with what we've shared, I could... err...\" I paused, losing myself in the pools of her eyes.\n\n\"Sure, say it.\"\n\n\"You know, I could so easily tell you that I loved you right now...\"\n\n\"So...\"\n\n\"Let me just say this: I could have said that, but I know exactly what you said: serendipity. So, I just wanted to tell you that I'm not going to tell you that I love you.\"\n\n\"Hah! And we're back at having your cake and eating it now! In response, Mark, my young fella, I would like to tell you that I too am not going to tell you that I love you.\" Her eyes were fixed on mine, and my heart flipped.\n\nThe speakers crackled, \"Heuston Station. Heuston Station\".\n\nOur emotional exchange rudely interrupted, we fell laughing into each other's arms.\n\nThe coach came to a halt outside the squat wedding cake of station building. A handful of passengers got off. I hoped to see the red-haired woman that I had accidentally flashed getting off, to ease my embarrassment, but she didn't.\n\n\"Don't you want to get off here for the Cork train?\" I asked Aoife.\n\n\"\"Are you trying to be rid of me now?\" she joked, and continued, \"I'll catch the train tomorrow\".\n\nThe bus moved off again, and I began to see some familiar Dublin streets as we passed into the centre of the city.\n\n\"No, I'm not wanting rid of you, but where do you need to get off for your cousin's place?\"\n\n\"I could go with you all the way to the airport now.\"\n\n\"No, Aoife, you don't have to do that, and I don't like prolonged goodbyes.\"\n\n\"So, I could catch a city bus from Bus\u00e1ras to my cousin's.\"\n\nWe fell silent, my arm around her shoulders. The coach crossed the River Liffey. \"Eden Quay. Eden Quay\", was announced. The bus stopped beside the river, glowing in the light of the early summer evening. Most of the passengers got off, leaving maybe half a dozen besides us.\n\n\"You better get dressed\", I told her. She was still in her flimsy vest and knickers.\n\nShe folded her long fingers around my neck and drew me in for a lingering kiss. \"Touch me quickly\", she sighed in my mouth.\n\nWithout needing any further invitation, I plunged my hands up under vest and took possession of her breasts. We kissed as I caressed her with desperate hunger. I desired her, and we had no time.\n\n\"Bus\u00e1ras. Bus\u00e1ras\", crackled the speakers, as the coach pulled into the 1950s glass-and-concrete fantasy that served as the city's central bus station.\n\nI pulled my hands free from Aoife's clothes in disappointment. The bus halted and the remaining passengers moved off.\n\n\"I could stay through to the airport\", she said again.\n\n\"No, pull your jeans on and get to your cousin's house. All good things come to an end.\"\n\nShe slumped against me. The bus felt empty. The luggage hold clicked shut, and the driver got back on the bus. He glanced up the bus, and our eyes met. He came striding up the bus, his white shirt straining against his muscles. I tapped Aoife's shoulder.\n\n\"The driver's coming up.\"\n\nShe sat up in the seat, trying to compose herself. The driver slowed as he approached. He looked down at me, and I thought he might haul me off by the scruff of my neck.\n\n\"I... I'm going to the airport\", I offered him.\n\nHe looked at Aoife, clearly enjoying how her body was displayed in her thin vest and knickers. She simply smiled at him and said nothing.\n\nAfter sizing us up, the driver said, \"So, 'tis young lovers now, is it? I thought once or twice of hauling you off the coach. You know you upset a helluva lot of good people today with your shenanigans back here.\"\n\n\"I'm really sorry... we're really sorry...\"\n\nAoife held her silence, gratuitously half naked in the corner.\n\nThe driver looked her over again. \"If I were you, I wouldn't be able to keep my hands to myself now\", he continued. \"So, young lovers, we don't pick up passengers here, and the bus is empty except for us three. It'll take us a fair 25 minutes to get to the airport, maybe longer with traffic. I'll just drive now. You go knock yourselves out.\" He looked at Aoife again. \"Just don't get me in trouble with the Guards, you hear?\"\n\n\"Thank you. No, we won't. Thank you\", I responded politely and somewhat nervously, anxious not to upset the driver, but also wondering what he had just offered us. I couldn't ask him: he had started making his way back down the bus.\n\n\"So, I'm coming with you to the airport now\", she stated, \"Now go sit it in the other corner\", she ordered me.\n\n\"Why, what have I done?\"\n\n\"Go!\" she shooed me.\n\nAs the bus moved away from Bus\u00e1ras, I hauled myself into the opposite corner from Aoife, into the seat last occupied by the blue-cardigan woman.\n\nAoife stretched her feet out across the seats. Then she took hold of the lower hem of her vest with crossed hands, and pulled it up over her head. For a moment she paused, leaning back against the side window, with the white cotton of her vest manacling her wrists together above her head, her breasts high and presented.\n\nI moved towards her, but she lifted a bare foot to block me.\n\n\"Stay in your corner and watch!\" she ordered me.\n\nI sank back into the corner seat, admiring the view from afar.\n\nShe released herself from her top, and brought her hands down over her breasts, cupping and lifting them, then circling her nipples with her fingers. On cue, the tips of her breasts came to bud. She slid her hands over her flat abdomen, stretched out across the seats. She looped her thumbs into the sides of her emerald knickers and pulled them round the full curve of her buttocks. Then with her legs extended like aerials straight up, she pulled her underwear up to her knees, giving me a good view of her newly aroused cunt lips between the backs of her thighs. She pulled her knees into her chest, opening her cunt and showing her asshole. Then she threaded the last piece of her clothing around her calves and over her feet.\n\nI was made horny again by her display. She pushed her feet once more straight up in the air, and I admired her shapely white legs, like a monument raised to her exposed sex.\n\nLike a gymnast, she gradually began to part her legs into an upright 'Y' shape.\n\nIt was too much, I whispered loudly across the space, \"I want to fuck you, Aoife!\"\n\n\"What did you say, young fella?\" she retorted.\n\n\"You heard me: I want to fuck you!\"\n\n\"I want to hear you say my name.\"\n\n\"Aoife...\", I stared at her beautiful cunt, \"I want to fuck you\".\n\n\"Hmm... that sounds nice\", she purred. Her legs tired, and she placed her feet on the seat, knees bent, still completely open to me. Her hand skimmed across her abdomen and began rubbing her crotch lewdly. \"Take your shirt off, young fella\", she demanded. \n\nI pulled my black t-shirt over my head.\n\nShe curled a finger into her cunt. \"And the rest now: I want to see you cock.\"\n\nI couldn't refuse her. I unfastened my belt and unzipped my chinos and pulled them completely off, kicking out of my shoes. My light blue boxer briefs failed to hide my state of arousal.\n\n\"Hmm... Nice! Take them off\"\n\nI slid my underwear down, showing Aoife my cantilevered cock, and showing the city of Dublin my bare ass through the window.\n\n\"I want you to walk over here with that lovely cock, and put it in my mouth\", she told me.\n\nI knew it meant exposing myself, but I couldn't resist her. I stood full naked, and edged along the back seat, my cock bobbing openly before me. When I got to Aoife, she cupped a hand around my backside, pulling me towards her. She leant in, and took my cock in her mouth. I delighted to the warmth of her tongue and lips on me. I stood up taller, pushing my hips forwards slightly to feed Aoife a greater length of my cock.\n\nI looked up and caught myself in the side window. As the city streets passed by, I offered them full-frontal nudity. At least my cock was tastefully obscured by Aoife's head, leaving no doubt that I was getting my cock sucked on Bus \u00c9ireann. We passed a bunch of young men heading out for a night on the town, they looked up at me, as the bus crawled slowly past them. When they realised what they were seeing, they cheered. One shouted, \"Fuck her face, you bastard!\" and they started chanting it. Goaded on by the lads, I put one hand behind Aoife's ear and gave her four shallow strokes of my cock into her mouth. She accepted me willingly, so I took a deeper thrust and shocked her eyes open wide. I pulled out before she gagged.\n\nShe coughed, \"Did I hear people cheering your naked bod now?\" She turned to look out the window just in time to catch a middle-aged couple gawking up at me from the pavement. This time, of course, my erect cock was on show, glistening in its spit shine. She bunched herself into back of the seat and pulled me down onto the warm seat edge, lying next to her. I kissed her, exploring her breasts. She kinked her knee up between my legs, placing firmly against my perineum. My cock skated erratically over her abdomen.\n\nShe pushed me down and climbed on top of me. \"You know I like being on top\", she reminded me. Placing her hands on my shoulders, she pulled herself up and down my body, ploughing my chest with her breasts, as cock achingly returned the favour into her stomach.\n\n\"This is the first time we've both actually been naked\", I told her.\n\nShe silenced me by pulling herself up and covering my face with her breasts. I nuzzled and kissed her chest, sucking on her nipples until she moaned.\n\nAoife rolled off me, standing up beside the seats. I looked up her: the pillars of her thighs, the curled mat of black hair that emphasized her cusp, the milky ocean of her belly, the pinking of her high breasts, raven tresses flowing over her shoulders, prominent rosy cheeks, finely sculpted nose, and those eyes that defined the meaning of 'blue'.\n\nShe admired herself in the window. I couldn't see how many others could enjoy the view. She kissed down my chest and abdomen, until I enjoyed the sensation of her sucking my cock once again. I closed my eyes to enjoy it. The next thing I knew, she was straddling my face.\n\n\"You know what to do now\", she told me, before engulfing me in her dampening crotch. She continued to suck me, while I worked my tongue into her. I tilted my chin back to get a better angle, and I could see the street lights coming on. The next picture in our erotic gallery that we showed the city streets was Aoife's perfect naked backside held open and moving on my tongue.\n\nI whispered into her opening cunt, \"I want to fuck you, Aoife... Fuck you one last time\". I reached into the crevice between the seats and pulled one wrapped condom from the packet.\n\nAoife turned herself around, placing one foot on the ground. I pulled on the condom just in time for Aoife to slide herself onto it. She kissed me hard, opening her mouth so that she could taste herself on me, and I could taste me on her. She moved down, kissing my neck, tickling my chest with her hair, and then she began humping herself into me with overt desire. I let my fingers play up and down her back, and run through her hair, pushing my hips up to grind into her. She moaned helplessly into my chest. \n\nI took her hips and rolled her into the seat back and under me. She squealed, and I drove my cock into her hard, converting her squeal into a throaty moan. I took her wrists and pinned her arms against the window. I raised myself up so I could admire her beautiful body displayed below me and watch my cock sinking into her. I bent to her and kissed her nipples, and she wrapped her legs around my waist. The new angle invited me deeper inside her, and I pushed through her. I pushed again, again, again.\n\n\"I love fucking you, Aoife\", I groaned loudly.\n\n\"I love fucking you, Mark\", she purred against the top of my head.\n\nI fucked her deeply; it seemed like forever; I wanted it to be forever.\n\nI pulled her up so she was sitting in my lap facing me, and she eagerly bounced herself on my cock. I gladly let her take over, watching her breasts rise and fall against my chest. I looked out of the window and a green open-top tour bus pulled alongside us. Those on the lower, covered deck were slightly below us, and those on the open deck slightly higher, but both levels could see inside. I could hear the tour guide describing some monument in German over the speakers. One pair of eyes after another turned to behold us sat naked, locked in our coital embrace.\n\nAoife threw her head back, arching her body. She was putting on a show for her audience. I was about to stop her, hold her close, but she began to grind herself into my cock, and I was helpless to her moves. I turned to look at our audience. They were attentive. I felt Aoife moving up on my cock, and I saw German mouths widen. I turned back to Aoife the see her pushing herself up my cock, whilst turning to face the window. She dropped one foot to the floor, leaving her other leg up beside me. As she turned, she showed her entire beauty generously to our audience. She arrived at the top of my cock holding it vertical below her, showing my entire length to the voyeurs. I looked from them to her, and she continued her performance, arching her back and gradually impaling herself on my cock. The tour bus moved off, and a few German tourists strained to see as much of the rest of Aoife's show as possible.",
        "She leant in, whispering, \"I've never done anything like that before. It just felt so sexy to share what we have\".\n\n\"Maybe the tourist board should give you a medal!\"\n\n\"How about taking me from behind one last time?\" She pulled herself off my cock, gestured for me to move back, and she assumed the classic doggy-style pose. I knelt between her legs, kissed the cheek of her ass, and slid myself into her. I took hold of her hips and eagerly fucked her, watching her face in the window and the pendulum motion of her breasts below. I slid my hands round her hips and cupped her breasts, and continued fucking her. Then I took hold of her hair, pulling her head back as I began to fuck her harder. Her back arched beautifully under me, and her breasts swung forward and up at the window.\n\nThen my eyes caught sight of the moisturiser gel stuffed between the seats. Before I knew it, I had greased up my finger and was circling her asshole.\n\n\"Yuhs... finger my arse!\" she moaned, and I dipped into her. It wasn't long before I was giving her both my finger and my cock in a solid rhythm. She started trembling under me, and I knew she was close. I brought my other hand to her abdomen, and slid it down and around to her exposed clit, rubbing it with my thumb. Luckily my concentration was not tested. I plunged my finger into to ass, my cock grazed against her wall, my thumb skimmed her clit, and Aoife quaked out her orgasm, screaming as successive waves of pleasure hit her.\n\nShe slumped forward with exhaustion. At this new angle, I could push my finger and cock hard against each other through her, as she spasmodically clamped me in both places. The resistance against my cock hardened, and I exploded within her, collapsing over her back.\n\n\"Now, that's what I call serendipity!\" I mouthed into her shoulder blade. I kissed down her back as I eased myself free from her. We fell into the seat, into each others arms, kissing with unrestrained emotion.\n\nThe speaker crackled, \"Airport. Airport in five minutes. Passengers are kindly requested to collect their belongings and to put their clothes back on. Thank you\".\n\nWe giggled and hastily retrieved our clothes. Aoife placed her well-used moisturiser back in her bag, and then she picked up the packet of condoms. She pulled out the remaining two wrappers.\n\n\"'Tis a pity we didn't to finish the pack, so it is.\"\n\n\"I think we gave it a good go.\"\n\nShe separated the two condom wrappers, handing one to me. \"Souvenirs\", she said. She fished a marker pen from her bag, and scrawled 'AOIFE' in black ink across the wrapper. \"You're so good at spelling my name. So you don't forget it.\"\n\n\"I don't think I could forget you.\" I took her pen and wrote 'Mark' on the other wrapper.\n\nWe exchanged. \"If we ever meet again, at least we've got a condom with each other's name on it.\"\n\nWe pulled up at the airport, and got off the bus. The driver was at the luggage hold, pulling our cases to the pavement. \"So, you don't see that every day now. You put on quite a show, a bus driver story my wife will actually listen to.\" He looked at Aoife, adding, \"Well worth the price of a ticket from Cork\".\n\nI laughed, \"Thank you for putting up with us\".\n\nAoife placed her hand on the driver's arm. \"Say hi to your missus from me, Eamonn.\"\n\nI gave her a puzzled look, and she smiled back at me.\n\n\"Right, I best be off,\" said Eamonn, and he climbed back onto the bus.\n\n\"You know him?\" I asked Aoife.\n\n\"'Tis a small island, so it is\", was her only answer, as our bus pulled away.\n\nSuddenly, it was just Aoife and I without our bus, oblivious to the bustle of the pavement outside of departures. I felt oddly naked without the grey-and-red upholstery of Bus \u00c9ireann in which we had wrapped our dreams. I held her tight, my hand in the small of her back, hers around my neck, and we kissed until we knew we had to part.\n\nI held 'AOIFE' in my pocket.\n\n\"Serendipity, Aoife!\"\n\n\"Serendipity, Mark!\"\n\nI watched her walk away, her hair caught by the summer evening breeze, and then she was gone.\n\n****\n\nWe never saw each other again.\n\nWhen colleagues ask me why there's an old condom wrapper on my desk with a bunch of vowels scrawled on it, I tell them it's a souvenir of when I explored the Ring of Kerry, a souvenir of serendipity.\n\n****\n\nWith thanks to Bitanters for reading, editing and advising on this story."
    ],
    "authorname": "Gorza",
    "tags": [
        "irish",
        "bus",
        "travel",
        "exhibitionism",
        "anal",
        "blowjob",
        "cunnilingus",
        "flashing",
        "younger woman",
        "ireland"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/exploring-the-ring-of-kerry"
}