{
    "title": "Three Square Meals Ch. 103",
    "pages": [
        "\"John...\" the soft voice murmured, penetrating his subconscious. \"Lilyana wants to speak with you...\"\n\nHe opened his eyes and found himself looking up at a dazzling view of the stars, the crystal dome in the Observatory so clear he could have been floating out there in the black. The next realisation was that he was buried under a pile of girls, with his ravished harem sprawled over him on the oval bed. They'd all been especially loving and affectionate after the orgy, wanting to be as close to him as possible as they dozed off for a nap. He craned up his neck to look over the tangle of lithe limbs and saw Faye's cute elfin face light up in a grin.\n\n\"I would have preferred to give you a more tactile wake up call,\" she said with a giggle, her luminous eyes roaming over the sea of luscious flesh. \"But I couldn't actually reach you under the girls!\"\n\nJohn briefly considered trying to extricate himself without waking his nubile bedmates, but knew it was an impossible task. He turned and gave the blonde beside him a big kiss, which she quickly responded to when she stirred from sleep. \n\n\"I'm a bit stuck,\" he said with a smile, glancing down at the girls crisscrossed over his body.\n\nShe swept her mane of golden blonde hair from her face and grinned back at him. \"I'm not surprised. After that epic performance, we all wanted a cuddle afterwards.\"\n\nThe girls started to awaken, prompted by Alyssa's telepathic nudging, and they smiled at John as they reluctantly untangled themselves. Jehanna was the only exception, remaining fast asleep, her body eagerly absorbing the huge load of cum rounding out her stomach. John brushed her lustrous black hair to one side, so that he could see her more clearly and was relieved to see that she was already fully-healed. Her cuts and bruises had faded away as if they were never there, her beautiful coffee-coloured skin flawless once more.\n\nJohn turned back to the girls and gave them a rueful frown. \"I'm sorry to disturb you; I would've let you sleep the afternoon away but I need to speak with the Maliri before they leave.\" \n\n\"Don't worry about it,\" Dana said with an amiable shrug. \"I've got a ton of stuff to do anyway.\"\n\nThe rest of the girls nodded their agreement and started to get up.\n\nJohn stood as well, then had a good stretch. The girls had given him a strenuous workout, but his tired muscles had already recuperated during his brief nap. \"Thanks for this afternoon everyone, it was a lot of fun. That was a first for me, having sex in zero-gravity.\"\n\n\"It was actually Tashana's idea,\" Rachel said, giving the twin a look of admiration. \"I didn't know she was so naughty...\"\n\n\"I did,\" Irillith said with a grin, hugging her sister. \n\nThey laughed as they headed out of the Observatory, no one bothering to dress as they were all eager to get a shower.\n\nJohn scooped Jehanna up in his arms, then followed the girls over the bridge across the Lagoon. \"I'll make dinner for everyone after I talk to Lilyana. We can have a quick meal together while we head over to Olympus.\"\n\n\"I'll make a start on it now,\" Calara immediately volunteered. She glanced at Sakura and added, \"Want to be my assistant?\"\n\nSakura gave her a sharp salute. \"Yes, Chef!\"\n\nJohn paused at the junction, greeting Helene and her Nymph entourage with a smile as they walked up the path from the beach to join them. The aquatic girl looked starry-eyed as she smiled back at him, walking on unsteady feet with Jade's support.\n\n\"You look like you had a good time,\" he said, trying not to chuckle at her dazed expression.\n\nHelene blushed furiously and giggled, averting her eyes.\n\nJade winked at him and said, \"I think we overdid it a bit, Master. After Leylira mentioned how good she tasted, we all wanted to sample her.\"\n\n\"Oh!\" Helene suddenly gasped as she stared wide-eyed at Jehanna's rounded stomach. \"Is she...?\"\n\nJohn shook his head, \"No, she's not pregnant. I just fed her for the second time.\"\n\nHelene placed her teal-skinned hand on Jehanna's hugely swollen belly, a look of reverence on her face for the dusky girl's gravid form. \"I don't understand... you fed her?\"\n\n\"Her tummy's full of his cum,\" Alyssa said, putting her arm around the shocked young woman. \"You looked just like that when John fed you last night, that's how he was able to heal you.\" \n\nPlacing her other hand on her own stomach, Helene looked at John in astonishment. \"I don't remember that!\"\n\n\"For the first few times, you'll sleep while your body absorbs my cum,\" John explained, glancing down at Jehanna. \"This was her second time... the third is when you start remembering.\"\n\n\"When can we do that again?\" she asked eagerly, her baby-blue eyes sparkling with excitement.\n\n\"A few hours,\" John said, smiling at her enthusiasm. \n\nThe Nymphs gathered around, all wanting to caress Jehanna too, and the looks they were giving John made it abundantly clear just how much they longed to be with him.\n\nHe gave them a kind smile. \"Come on, let's head up to the bedroom. I'll put Jehanna to bed while she sleeps this off, then we can all have a shower.\"\n\nThey proceeded to do exactly that, filling the enormous shower cubicle to capacity with the recent influx of new girls. John managed to get every inch of his body scrubbed without lifting a finger himself, which was very fortunate as his own hands had found lots of fascinating curves to explore. He reluctantly left the girls to their soapy fun, despite a chorus of playful calls to stay, then dried himself, dressed, and headed up to the Command Deck.\n\nFaye was waiting for him by the grav-tube when he stepped out onto the Bridge, her luminous eyes brightening at the sight of him. \"John, what do you want to do about Tartarus?\" she asked, falling into step as he walked towards his Ready Room.\n\nJohn glanced up at the holographic Tactical Map which had the battered fragment of Ganymede in focus. \"Destroy it,\" he said without hesitation. \"It was a cursed place long before Buckingham started using it and it's been the site of appalling atrocities since then. Please record it being obliterated; that footage might prove useful if High Command are uncooperative tomorrow.\" \n\n\"Will do!\" Faye cheerfully replied.\n\nThe weapon loadout hologram showed the Invictus' weapon batteries coming online as Faye diverted power to the ship's guns. Plasma-scorched armour plating juddered back to reveal those massed ranks of heavy weapons and the sprite took careful aim at the massive asteroid. John paused to watch the opening salvo, the Nova Lances carving a huge trench through the surface of the moon fragment. That was followed by a blistering array of vivid blue laser beams and bolts, accompanied by the rhythmic impacts of Singularity Driver slugs. Each and every second, huge explosions rocked Tartarus, massive fissures opening up under that relentless barrage.\n\nHe gave Faye a grim nod, then walked through into his Ready Room, where he sat behind his desk and activated the comms interface. Searching for the Galaena Serine in the local system list, he swiped across and waited for a few seconds as the crossed blades of House Valaden appeared before him.\n\nThe Maliri Fleet Commander appeared, her jewel-encrusted golden armour glinting in the soft light of her office. \"It is good to see you, Protector. Thank you for returning my call.\"\n\n\"You know we're on first names now, Lilyana,\" John said with a warm smile. \n\nEven though he couldn't see her blue face behind the opaque faceplate, he could hear her smile in her reply. \"My humblest apologies, John.\"\n\nLeaning forward, he said earnestly, \"Thank you for everything you did here today. You commanded your fleet with great skill and saved countless Terran lives with your intervention. If you could pass on my thanks to every member of your fleet, I'd really appreciate it.\"\n\nLilyana inclined her head in acknowledgement, but she hesitated before replying. \"In truth, I've never seen destruction on this scale before... The inter-House warfare I've been involved with consisted of small fleet skirmishes; several dozen ships involved at most. This was... eye-opening.\"\n\nJohn nodded, his expression bleak. \"You'll be facing a lot more large-scale battles in the future I'm afraid, starting with the Kirrix. I'll ask Faye to transmit you the recordings of our fights against them, as well as the data we compiled from our review of the Battle of Terra; hopefully both will give you some useful guidance for the fighting to come.\"\n\n\"That would be most appreciated, thank you,\" the Fleet Commander replied, sounding relieved.\n\n\"How are you getting on with the Brimorian Shield Generator salvage?\" he asked, relaxing in his chair.\n\n\"That was actually the purpose of my initial call. I wanted to inform you that we have completed our salvage operation.\" Her tone turned to amusement as she continued, \"Admiral Caldwell raised objections to us picking over the wrecked Kintark battleships, so I had my fleet relocate to the Praetorian capital ships in orbit around Terra. As those ships were single-handedly disabled or destroyed by a Lioness, we staked an indisputable claim, much to his frustration.\"\n\nJohn bristled in anger at Caldwell's interference. \"Sorry you had to deal with that, I'll have words with him tomorrow.\" He smiled in approval and continued, \"That was great thinking on claiming Sakura's kills! Did you get what you needed?\"\n\nLilyana grinned at him behind her mask. \"Half that fleet were obliterated by Power Core explosions, but she crippled the rest by simply executing the Bridge crew.\" Pausing for a moment, the awe in her voice was obvious as she added, \"I still find it astonishing that a single vessel of that size could reap such incredible destruction. I am truly glad that you are a friend of the Maliri, John.\"\n\n\"The feeling's mutual,\" he replied, his answering smile just as heartfelt. \"Did you get everything you needed from those wrecks? \n\nShe nodded, sounding delighted as she replied, \"The Praetorian vessels were an incredibly lucrative source of salvage. We stripped five battleship-class Shield Generators from the hulks, three of which we intend to install in our own battleships, the other two I thought would make a fine gift for the Trankarans.\"\n\n\"Excellent work, Lilyana,\" John said, impressed by her initiative.\n\n\"We also removed huge numbers of heatsinks, which are greatly superior to our own; there should be enough to upgrade our entire fleet. My Fleet Engineer has informed me that we cannot make the upgrades in hyper-warp, but the moment we arrive in Trankara, I will order the refit. We should see a significant improvement in firepower and survivability once all the components have been installed.\" She tilted her head to one side as if lost in thought. \"We received your transmission for the shield schematics. I plan to liaise with the Trankarans to ensure all our vessels are upgraded as quickly as possible.\"\n\n\"Ideally, I'd prefer you not to commit your fleet to battle until the refit is complete,\" John said, his brow creasing with worry. \"I want you to fight hard for the Trankarans and help them liberate their worlds, but you and your forces are precious. We can't afford to lose you, Lilyana... I want you to promise me that you won't take any excessive risks. There are billions of lives at stake here and we can't afford to make any mistakes.\"\n\n\"I promise, John,\" she said solemnly.\n\nHe gave her a teasing smile. \"I know Alyssa wants the three of us to spend some time improving our... working relationship. I'll look forward to your return to Maliri Space.\"\n\n\"As will I,\" she replied with a breathy sigh.\n\n\"Have you got Almari and Ilyana there?\" he asked, suspecting the two assassins would be close by.\n\nSure enough, the two white-armoured bodyguards stepped into view, standing behind the Maliri Fleet Commander. They bowed to him and Almari said, \"Hello, John. Edraele thought it would be more efficient for us to be present while you debriefed Lilyana to save you repeating yourself.\"\n\nHe nodded, thanking his Maliri Matriarch telepathically. Addressing the two assassins, he said, \"Everything I just said to Lilyana applies to the two of you as well. I was impressed and proud of your efforts to defend the Citadel today, but please avoid ground combat unless absolutely necessary. You're there to provide a link with Edraele and to act as bodyguards to Lilyana... no heroics, okay?\"\n\n\"We'll be on our best behaviour,\" Almari replied with a smile. \n\nIlyana also grinned at him as she agreed. \"We'll be good girls. No putting ourselves in excessive danger.\"\n\n\"Perfect,\" he said gratefully. With a sigh of regret, he continued, \"I'd love to give the three of you the send-off you deserve, but unfortunately we don't have the time; you need to depart for Trankaran Space and we're heading to Olympus to make repairs. Liberate the Trankaran Worlds and hurry home, I'll reward you properly then.\"\n\nAlmari's hand drifted to her stomach in a subconscious gesture and he could see her fellow Maliri shifting, their body language giving away their excitement at that offer.\n\n\"Safe travels, ladies,\" he said, giving them a respectful salute.\n\n\"Goodbye, John,\" Lilyana replied, the three of them bowing in reply.\n\nWith that they ended the call, the House Valaden symbol appearing for a few seconds before fading away.\n\nFaye appeared in a purple flash, then hopped up onto his desk. \"Hi John! I compiled all the combat footage you mentioned and also included data from the battles at Regulus and Ashana; I thought they might be interesting for Lilyana too. I've started transmitting everything to the Galaena Serine.\" \n\n\"Nice work, thanks honey,\" he said, rising from his chair. \"Good thinking on the Regulus and Ashana data. Hopefully she'll be able to learn some things from watching Calara in action.\" \n\nAs he walked towards the door, Faye flitted along beside him. \"I blew Tartarus to bits and recorded the whole thing. I've also plotted a course for Alpha Centauri and we'll jump out of the Sol System in seven minutes.\"\n\nJohn opened the Ready Room door then put his arm around her physical avatar when he stepped onto the Bridge. \"I don't know what we'd do without you, Faye.\"\n\n\"You know I'm always happy to help!\" she replied, beaming up at him. \"It's a shame I'm limited to twelve avatars, or I'd be able to do even more!\"\n\nHe paused for a second and looked down at the chirpy sprite. \"Is that even possible? Could we just build you more servers and give you more avatars that way?\"\n\nFaye shook her head and frowned. \"Sadly, it doesn't work like that. My central processing core drives all my avatars, so we'd need to upgrade that to expand my capabilities.\"\n\n\"Well, I guess that's something we can look into for the long term,\" John said, continuing up the ramp. \"In the short term... are you planning on joining us for dinner?\"\n\n\"I'd love to!\" she enthusiastically accepted, slipping an arm around his waist and giving him a friendly squeeze.\n\nWhen they walked into the kitchen at the back of the Officers' Lounge, they were met by laughter, the sound of conversation, and the smell of spices. Calara and Sakura were there already, tipping sliced vegetables into the two large pans simmering on the stove.\n\n\"What's for dinner?\" John asked with a warm smile.\n\n\"Chilli con carne,\" Calara replied over her shoulder as she stirred the minced beef. She returned his smile then added, \"We've got everything in hand. If you want to be helpful, why don't you two set the table?\"\n\nHe gave her a quick kiss, then tickled Sakura, making her giggle. \"Just give us a shout if you want a hand serving dinner,\" he replied, collecting a sizeable stack of plates and heading out the door to the dining area.\n\nFaye scooped up a huge pile of cutlery, then followed him out, the knives, forks, and spoons nestled in her arms. John started putting out the plates, then watched in fascination as Faye started setting the places with deft, uncannily precise motions of her dexterous purple fingers. Her hand moved back and forth to the pile of cutlery she held against her chest, setting each place with a strangely unnatural rhythm and speed. She worked in a blur as she circled the table and when she finished, John realised that Faye's jumbled pile of cutlery had contained precisely enough knives, forks, and spoons for fifteen settings.\n\n\"How did you get fifteen?\" John asked, marvelling at the sight.\n\nFaye turned to look at him with a bright smile on her cute elfin face. \"Let's see, there's you, me, Alyssa, Calara, Dana, Rachel, Irillith, Tashana, Sakura, Helene, Jade and her four sisters. That just leaves Jehanna and Lynette who are still sleeping, but they won't awaken until 10:30pm and 4:00am respectively.\" She cocked her head to one side, a hint of worry furrowing her brow. \"I don't think I missed anyone!\"\n\n\"No, I meant how did you get precisely fifteen knives, fifteen forks, and fifteen spoons? It looked like you just randomly scooped up a big pile of cutlery before we left the kitchen! Then when you started placing them down on the table... it was like watching an automated production line!\"\n\nHer worried frown deepened when she saw his startled expression. \"I didn't have a program pre-prepared for setting the table... Did I just freak you out?\" \n\nHe hesitated for a second and when Faye looked more alarmed he quickly replied, \"No, no, I wasn't freaked out exactly... I was just fascinated watching you work. We haven't really discussed the capabilities of your new body before.\"\n\n\"Do you really want to know the specifics?\" she asked, sounding wary as she studied his face. \"I'm worried about breaking your sense of belief that I'm a normal girl...\"\n\n\"I'm surrounded by exceptional women,\" John replied with a smile. \"I think I can handle it.\"\n\nSeeing his calm reaction, Faye relaxed and grinned back. \"Well, for the cutlery I was able to perform a precise count by taking an optical snapshot and running that picture through an image-analysis subroutine. After that, it was simply a case of calculating the precise length of lateral movement of my fingers to gather fifteen of each utensil. The processing was simple and took 14 nanoseconds.\" She glanced at the settings themselves. \"If I'd prepared a program for this beforehand, I would have incorporated a speed-limiter to slow my hand movements and incorporated a number of errors to make my actions appear more authentically organic.\"\n\n\"Errors? What do you mean?\" John asked, while continuing to put the plates down on the table.\n\n\"A series of small mistakes to make me seem more natural,\" she explained, glancing back at the table. \"Perhaps a pause, as if to decide whether the knife or fork go on the left or right. Maybe include a tiny variable with the placing of each utensil, to ensure they weren't at a perfect ninety-degree angle to one another. I could have also planned an 'accident', like dropping a fork on the table then quickly moving it into position... that kind of thing.\"\n\n\"I didn't realise setting the table could be so complex,\" he said, shaking his head in amusement.\n\nFaye gave him a wry smile. \"It isn't. Each setting only requires a certain number of finger, hand, and arm movements, which could then be repeated fifteen times in total. Pretending to be organic is the exhausting part... you guys have a knack for making mistakes look easy!\"\n\nHe laughed as he put down the last plate. \"Thanks... I take particular pride in screwing up.\"\n\nShe blushed and quickly corrected herself, \"No! I didn't mean that as an insult, I just meant th-\"\n\n\"Relax, honey,\" John interrupted, putting his arms around her for a hug. \"I was only joking.\"\n\nFaye rested her head against his chest and sighed with delight as she snuggled under his chin.\n\nHe glanced down, tilting his head to one side so that he could look into her big luminous eyes. \"Isn't all that just a huge waste of processing power? Wouldn't it just be easier to be yourself and not worry about making pretend mistakes?\"",
        "She was quiet for a long moment as if considering it. \"I could stop pretending to be a real girl, but it's a fun challenge to try and make myself seem as natural to everyone as possible. Besides, the amount of processing power needed is tiny.\"\n\n\"Well, do whatever makes you happy,\" John said, stroking her back. \"But you don't need to go to these lengths for my benefit. I was fond of you when you were just a hologram.\"\n\nFaye tilted her head up and kissed him on the chin. \"I know and I'm very fond of you too.\"\n\nThe double doors at the other end of the Officers' Lounge swished open and Alyssa strolled in with Dana. \"Hello you two lovebirds,\" she said playfully, walking over to join them.\n\nThe purple sprite blushed furiously and leaned into the blonde's hug. \"Hi!\"\n\nDana frowned at John and poked a finger at his chest. \"I've got a bone to pick with you... No more letting dragons use you as a chewtoy! Your armour was totally mangled!\"\n\n\"Actually, Baledranax just smacked me around a bit, he never got a chance to gnaw on me,\" John replied with a grin, pulling her into a hug. \"Have you fixed my armour already?\"\n\n\"I'll finish it up after dinner,\" the redhead replied. \"Alyssa's shaped all the armour plating for me, but I need some parts for a replacement thruster on the back. The Mass Fabricators are churning out bits for the Valkyrie at the moment, but they'll be done by the time we've eaten.\"\n\n\"Do you need more Mass Fabricators?\" John asked, looking thoughtful. \"You've still got lots of space in your workshop and you've only got four at the moment. It seems like we're always waiting for them to make all the parts we need.\"\n\n\"Yeah! That would be awesome!\" she enthusiastically agreed. Dana laughed and rolled her eyes at herself. \"I got so used to making do with what I had in my Karron workshop, I suppose I got into the same mindset here. We could fit in another four and still have plenty of space left for big projects.\"\n\n\"I'll ask Charles for them when we arrive at Olympus,\" John said, giving her an indulgent smile.\n\nThe rest of the girls followed shortly after, with Calara and Sakura bringing out the big serving dishes full of rice and chilli. Everyone was famished after sleeping through lunch, especially after all the frantic action of the battle that morning. Aside from compliments to the chefs, conversation was limited as everyone was too busy eating. The only exception was Helene, who was amazed by all the new flavours and asked lots of questions about the meal between bites.\n\nJohn finished eating first and relaxed back in his chair. \"Now that was a damn fine meal,\" he said, raising his glass in toast to Calara and Sakura. \"Thank you, ladies!\"\n\nThe rest of the girls raised their glasses, while the two brown-eyed beauties took a grateful bow.\n\n\"Just to let you know, we've jumped into Alpha Centauri,\" Faye announced from her place at the end of the table. \"I've set course for Olympus, we'll be there in ten minutes.\"\n\n\"Fantastic, thanks Faye,\" John said, with a grateful nod. He glanced around the table at the girls, watching them finish their meal. \"We'll probably be at Olympus for a couple of days to finish our repairs, so perhaps you could give me an update on whatever you're working on, during lunch tomorrow?\"\n\nHis longer-standing crew nodded, expecting his request, but the four Nymphs and Helene seemed unsettled. \n\nHelene glanced at him, looking a bit lost. \"John... is there any work you'd like me to do?\"\n\nHe gave all five newcomers a reassuring smile, before focusing on Helene. \"Just relax and have fun for a few days. Our spaceship was damaged in a big battle, so we're going to be busy fixing it for a while.\" He reached over to clasp her hand and continued, \"Sorry if you're feeling neglected.\"\n\nShe quickly shook her head. \"No, it isn't that, everyone has been wonderfully welcoming. It's just that I'm used to working on the kelp beds or in the nursery for twelve hours a day; I don't think I've ever had so much free time before!\"\n\nAlyssa gave her a warm smile. \"You can keep me company if you're bored of swimming in the Lagoon. I know John has some special plans for you though...\"\n\n\"You do?\" the aquatic girl asked, sounding excited.\n\nJohn nodded, looking at each of the new arrivals in turn. \"All five of you in fact. I'd like to try and make a permanent connection with all of you tomorrow.\"\n\nDana smirked and raised an eyebrow. \"I must have missed some sneaky blowjobs... I thought you hadn't fed any of the Nymphs yet? Three times for each of them, plus Helene too; your poor quad will be sucked inside out!\"\n\nHe shook his head and glanced at Jade. \"If your sisters are like you, then I suspect that I'll only need to feed each of them once to make the connection. Hopefully that's the case, then we can connect them, Jehanna, Helene, and Lynette all on the same day.\"\n\nJade paused for a moment with a wistful smile on her face. \"Yes, that's right, I remember our first time together...\"\n\nThe blonde nodded her agreement. \"She popped into my mind after only one feeding. The other Nymphs are just as psychically responsive as Jade was, so I'm sure they'll behave the same way.\"\n\n\"Is this an attempt to minimise the trips to the Astral Plane?\" Tashana asked, looking thoughtful.\n\n\"Yes, with a bit of luck,\" John replied, grimacing at the prospect of another visit to that nightmarish place. \"I don't know about anyone else, but I'd rather not go back there seven times...\"\n\nThere were murmurs of agreement, the room going quieter, with the girls dreading the thought of being sucked back into another showdown with the astral monsters.\n\n\"Will there be any ramifications of adding so many girls in one go?\" Tashana pushed, her violet eyes locked on John. \"Perhaps we'll get pulled deeper into the nightmare?\"\n\nJohn frowned, his expression growing tense. \"I hope not... I hadn't thought of that being a factor.\"\n\nHelene looked worried and she squeezed his hand. \"I don't understand... is there anything I can do to help?\"\n\nHe hesitated, trying to think of a way to explain it. Beckoning her over, he sat Helene sideways across his lap, making her smile again. Placing his hand on her tummy, he stroked her soft teal skin. \"Do you remember how Jehanna looked earlier? Well after I feed her a third time tomorrow, she'll have a special connection to Alyssa and me, which is a really good thing. The problem is that whenever I connect like that to a new girl, I have a bad dream... but this bad dream can be very dangerous.\"\n\n\"How can a dream be dangerous?\" Helene asked, wide-eyed with a mixture of fear and fascination.\n\n\"It's hard to explain... but when we're sucked into the dream the creatures there try to kill us,\" John explained, trying not to terrify the sheltered young woman.\n\nHer expression suddenly brightened and her hand caressed his. \"So that means you plan to make me look like Jehanna twice more by tomorrow!\"\n\n\"Starting later this evening, if that's alright with you?\" John asked, interlacing his fingers with hers.\n\nShe nuzzled into him and kissed his ear, before whispering, \"That will be wonderful...\"\n\nHe held her close, then turned to look at the Nymphs. \"I'd like to get together with you tomorrow evening, as long as you ladies don't have any objections?\"\n\n\"Oh, this one can't wait, Master!\" Leylira gasped with delight, her three sisters echoing her sentiments.\n\n\"Am I going to be their Matriarch?\" Alyssa asked, her airy tone hinting at something. \"I assume Helene, Jehanna, and Lynette will all be connected via me... but what about Jade's sisters?\"\n\nJohn eased back in his chair, subconsciously stroking Helene as he mulled it over. \"You're not talking about Edraele being their Matriarch, are you?\"\n\n\"No, I'm not, I was thinking about someone else entirely...\" Alyssa threw a pointed glance at Jade. \n\n\"Me?!\" Jade blurted out, her cat-like eyes growing into wide black pools with shock. \"You can't be serious!\"\n\n\"Who better to guide a Nymph on her path to freedom and self-discovery than someone who's already taken that journey?\" John asked quietly, meeting her astonished gaze.\n\n\"But... that wouldn't be right,\" Jade faltered, her muted whisper reflecting just how stunned she was at the thought.\n\n\"I'm not going to force you to do anything you don't feel comfortable with,\" he said with a reassuring smile. \"Think it over, then let me know your answer by tomorrow evening. For what it's worth, I think you'd take excellent care of them.\"\n\nAlyssa nodded, getting up then hugging the shocked Nymph from behind. \"You've looked after all of us when it counted... I think you'll be a natural.\"\n\nJade patted the blonde on the arm but couldn't take her shocked gaze from John. \"I-I'll think about it...\"\n\nFaye rose from her chair and said, \"We're approaching Olympus Shipyard and we've been allocated Docking Bay One... Charles has specifically requested Calara's presence when we land.\"\n\n\"Me?\" the Latina blurted out in surprise.\n\n\"I can't think why that might be,\" John said with a grin. He slid Helene off his lap, then rose from his chair. \"Would you do me a favour, honey?\"\n\n\"Of course, John!\" Helene immediately replied, brightening at the prospect of being able to do something useful.\n\n\"Could you look after Jade's sisters for an hour or so?\" he asked, looking at the Nymphs. \"I don't want them to be frightened if we're met by a big welcoming committee.\"\n\nJade stood up and shook her head. \"Let them come and see. Trust me, they'll love it...\"\n\nAlyssa grinned as she put her arm around Betrixa and Marika. \"Might I suggest we pick out some clothes first? As scrumptious as they look in the nude, we don't want them stealing Calara's thunder.\"\n\n\"You'll have to be quick, we're on final approach!\" Faye warned them with a broad smile. \"We'll be landing in just under three minutes!\"\n\nThe blonde beckoned Rachel over and the pair urged the Nymphs to follow them. \n\n\"Go ahead,\" John said with a reassuring smile, when four sets of cat-like eyes darted to him for permission.\n\n\"Lioness uniforms?\" Calara asked with a grin.\n\n\"Might as well put on a show,\" John said, nodding his approval.\n\nDana sprang to her feet and dashed for the door, calling back over her shoulder, \"I'll grab some holo-emitters for the twins!\"\n\nThe rest of the Lionesses glanced at each other then jogged after the redhead. \"We'll go and get changed,\" Sakura said, grinning at Tashana and Irillith.\n\nJohn started collecting plates. \"I'll tidy up here and meet you down at the airlock.\"\n\nFaye shook her head and picked up a plate herself. \"You need to get into your uniform too! Let me clean up after dinner, I can get it done very quickly.\"\n\n\"Thanks, honey,\" he replied with a grateful smile, then offered a hand to Helene. \"Keep me company?\"\n\nShe had been watching everyone in bewilderment, then nodded and slipped her slender hand into his. \"I'd like that, thank you.\"\n\nThey walked towards the double doors, watching as the girls rushed ahead down the corridor.\n\n\"It's not normally this crazy,\" John said, gently squeezing Helene's hand. \"I need to see an old friend and help start the repairs, but we'll spend some time together later this evening. Sorry if you're feeling neglected...\"\n\nShe gave him a bright smile. \"You don't need to apologise to me, I've been having a wonderful time! I wanted an exciting adventure and that's exactly what it's been so far!\"\n\nThey walked out into the Deck Two corridor and John said, \"I'm really glad you've been enjoying yourself. Is there anything you'd like to ask me about so far?\" \n\n\"To be honest, I struggle to understand half of the things you and the girls talk about,\" she admitted, her smile fading as she looked self-conscious. \"All of you use a lot of words that I'm not familiar with. I must seem awfully stupid to a man like you...\"\n\nHe gave her a startled glance, then put his arm around her. \"I'm so sorry, honey. We never meant you to feel that way! No one thinks you're stupid, I promise.\"\n\n\"Really?\" she asked, looking up at him with doubt in her sky-blue eyes.\n\nJohn stopped and turned to face her, brushing aside some soft strands of her light green hair, then cupping her head in his hands. \"I really mean it. This is the first time you've left your homeworld, so you just lack experience with some things the rest of us take for granted. That doesn't mean you're stupid, far from it. You seem like a very bright and capable young woman to me; I'm really looking forward to getting to know you better.\"\n\nShe blushed and leaned into his hand. \"You say such lovely things... I've never had anyone praise me like this before.\"\n\nHe pulled her into a hug. \"Well you better get used to it. I plan on giving you lots more compliments!\"\n\nHelene giggled and leaned further into his embrace with a happy sigh.\n\nFaye's holographic form popped into view beside them. \"Ninety seconds!\" she warned, a playful smile on her face.\n\nJohn gave his teal-skinned companion a theatrical wince. \"I better get moving!\" \n\nHe took Helene's hand and led her down the corridor at a jog, with the aquatic girl laughing as they ran. The walk-in-wardrobe was a scene of complete chaos, with Alyssa buttoning up a white shirt, while discussing a variety of outfits with a topless Rachel. She had tugged on her Lioness trousers and was directing the Nymphs to try on different dresses. John carefully skirted around the bedlam, grabbed his Lion uniform and backed out into the bedroom.\n\nHelene was waiting for him, sitting on the end of the bed. She watched in fascination as he started dressing in the white formal uniform and exclaimed, \"I've never seen clothes like that before!\"\n\n\"It's my uniform for important, official events,\" John explained, slipping his hands through the sleeves of his jacket. He gave her a wry smile and continued, \"Calara saved the lives of everyone on the space station we're about to visit. I expect a few of them might want to greet us and say thank you.\"\n\nHe started fastening the buttons, until Helene stepped forward and said softly, \"Let me...\"\n\nHer nimble fingers made quick work of the buttons as John pulled on his peaked hat. He straightened it, then stepped into his shoes. \"There, all done.\"\n\n\"You look very handsome,\" Helene breathed, glancing up at him through thick eyelashes as her fingers traced over the golden lion on his chest.\n\nAlyssa strolled out in her Lioness uniform with a pair of shoes in one hand and a long dress folded over her arm. \"Looks like you two share a love of formal wear...\" She glided over to the starry-eyed young woman and added in a conspiratorial whisper, \"Put this on, then watch how John looks at you.\"\n\nHelene flashed a lusty glance at John, then slipped off her aquamarine tunic and skirt, standing naked before him. He couldn't help admiring her gorgeous toned physique, his gaze lingering over her curves.\n\n\"Alright, he loves your birthday suit too,\" the blonde said with a laugh, as she helped the teal-skinned beauty pour herself into the figure-hugging purple dress. She crouched and slid the shoes onto Helene's feet, then grinned at John as she stepped back. \"What do you think?\"\n\nThe vibrant purple of the shoulderless dress helped emphasise the aquatic girl's exotic skin tone, while the slinky material clung to every inch of her luscious body. Helene giggled when she saw John's enraptured expression, but her laughter abruptly died when he reached out to brush the backs of his fingers over her toned stomach. She leaned into his hand and his sensitive ears picked up her quiet moan of desire.\n\n\"Yeah, I thought so,\" Alyssa purred with satisfaction, stepping behind Helene and joining John in stroking her svelte tummy. \"Jade told you what that means, didn't she?\" \n\nHelene nodded, her breath quickening. Before she could reply, the rest of the girls began to appear, with the Lionesses in their uniforms, the Nymphs wearing elegant dresses in a similar cut to Helene. John reluctantly pulled away from the aquatic girl after sharing a smile with her, then turned his attention to the rest of the girls. \n\n\"You all look very beautiful,\" he said appreciatively, making eye contact with his crew, then each of the giddy Nymphs.\n\nDana clipped a couple of devices to the lapels of Irillith's and Tashana's jackets. \"There you go. Now let me just hit this button...\" \n\nShe clicked the metallic objects and the Maliri girls' faces flickered for a moment as the micro holo-projectors sprang to life. Then their blue skin changed to a healthy bronzed tan, just like the redhead.\n\n\"You're hot twins, whatever the species,\" Rachel said with a grin, slipping her arms around their waists.\n\nTashana nodded, her new blue eyes appraising Irillith. \"She's right, you make a sexy Terran.\"\n\nIrillith winked at her flirtatiously. \"I couldn't agree more, little sister.\"\n\nAlyssa hooked arms with Helene and turned for the express grav-tubes. \"Come on, better not keep everyone waiting!\" \n\nJohn offered his hand to Calara and she grinned at him as they followed after the blonde. He gave Jehanna a final glance to make sure she was okay and saw that the reporter was fast asleep, a contented smile on her face as she cradled her curved stomach. They left the bedroom and headed down to the Secondary Hangar, where the Lionesses lined up, following Alyssa's telepathic direction. Calara waited at John's side, while the rest of the white-uniformed girls stood directly behind them. Helene and the Nymphs formed a second rank at the back of the formation, all of them curious to see what was waiting for them on the station.\n\n\"Wait for me!\" Faye called out, springing out of the grav-tube and running over to join them.\n\nShe was wearing her own version of a Lioness uniform but sized considerably smaller to fit her tiny five-foot frame.\n\n\"I felt bad that she missed out last time, so I made her a uniform now she has a body,\" Alyssa said to John, while hugging the petite girl. She stepped back to smile at the sprite. \"You should have been with us at the award ceremony, Faye.\"\n\nDana grinned at her purple friend. \"You look adorable!\"\n\nFaye did a quick twirl. \"Really?\" Her eyes darted to John, seeking his approval.\n\n\"She's right, you look fantastic,\" he said with a broad smile. \"And you're just as much a part of the crew as anyone else. You deserve to be here.\" \n\n\"Stand next to me,\" Alyssa said to the delighted elfin girl, taking her position at the end of the line. She gestured towards the control panel for the Hangar door. \"Okay everyone, it's show time...\"\n\nThe massive door began to rise up into the ceiling and John heard more than one gasp from behind him as they got their first glimpse into the vast room beyond. Docking Bay One was by far the largest bay in Olympus Shipyard, easily big enough to hold three Terran Federation battleships. Currently the Invictus was the only vessel parked in the bay, leaving an enormous space to the side of the battlecruiser. Not that it was empty though...\n\nAlmost every square foot of the bay was occupied with Terran personnel, row after row of ship crews, marines, and base staff lined up in dress uniform. At their forefront was a contingent of Vice Admirals and Rear Admirals, easily identifiable by the rank insignia on their epaulettes. Charles was amongst them and as the highest-ranking officer, had been nominated as the spokesman for the group.\n\nHe strode towards the Invictus crew with a broad smile on his face. He stopped just before John and Calara then stood at attention and gave them a sharp salute. Behind him, tens-of-thousands of personnel followed his lead, the sound of booted feet like rippling thunder as they snapped to attention and matched Charles' respectful salute.\n\nWhen John and Calara returned the gesture, Charles said, \"We were all stationed on Olympus during the Kintark attack and would have been killed if not for your incredible efforts to defend the station. All of us here today owe you our lives and you'll always be considered honoured guests at the shipyard. Thank you, Lion of the Federation.\"",
        "His voice echoed around the colossal hangar, microphones picking up his heartfelt speech and broadcasting it to all the personnel assembled.\n\n\"Thank you, Admiral Harris,\" John replied, as he lowered his arm. \"As always, it's the greatest honour and privilege to be able to protect the Terran Federation.\"\n\nHe glanced to his right at Calara, a question in his eyes. Her brown eyes flicked to him and he could see the anxiety there, but only because he knew her so well. To the assembled masses who were watching a huge holo-projection of her face, she seemed perfectly calm and composed. She nodded imperceptibly, acknowledging his unspoken question.\n\n\"Would you care to say a few words, Commander Fernandez?\" he asked for the benefit of the vast audience. \"You did orchestrate the entire battle after all.\" \n\n\"I would, thank you, Admiral Blake,\" she replied, with a tight smile to conceal her nerves. \n\nCharles stepped aside, then stood at attention flanking the Latina, waiting for her to speak.\n\nCalara took a deep breath, then addressed the assembled personnel, all eyes in the docking bay watching her every move. \"There comes a time in everybody's life when they are given the opportunity for greatness. Today, that chance came for Rear Admiral Dacres and the brave men and women under his command... and they were not found wanting. If it wasn't for their valiant defence of the Alpha Centauri system, Olympus Shipyard would have been lost with all hands.\"\n\nHer eyes shone with pride as she gazed out at the enraptured personnel. \"You know that the Lion and his Lionesses will stop at nothing to defend the Federation. Time and again we've stood beside brave Terran forces, putting our lives on the line to defend our civilisation from the forces of darkness that threaten us. There might come a time in the future when I call on you to play your part for the greater good... should that day come, seize that moment!\" \n\nJohn could feel the crowd hanging on her every word, a feverish excitement in the air as she built them towards a crescendo with her speech.\n\nCalara looked out at the huge audience, her confidence growing. \"Just as the Defenders of Olympus will become immortalised in history for their valiant deeds, fight for your own chance to become a legend of Terra! What greater legacy could you leave behind for your children and the generations that follow? They will listen in awe to tales of your heroics, your lineage inspired to be a part of something so much greater than any one man or woman could achieve alone.\"\n\nHolding herself tall, she raised her fist in salute. \"For the Glory of Terra!\"\n\nJohn stepped up beside her and raised his own fist, mirroring hers. \"FOR TERRA!\"\n\nThe crowd roared back the Terran battle cry, their own fists raised in salute. John turned to Calara then pulled her into his arms, the two of them sharing a loving smile before he kissed her soundly. The jubilant cheers from the crowd intensified, the docking bay reverberating with the deafening noise from the celebrating audience. John and the girls grinned at the crowd, waving at the thrilled personnel, who whooped and cheered back.\n\nCharles smiled at John and shouted to be heard over the cheering. \"Stirring stuff!\" \n\nAlyssa glanced at the control panel to lower the hangar door again, the girls waving goodbye to the throng of Terran personnel gathered outside. When the hull was sealed once more the sound was abruptly silenced, leaving John, Charles, and the girls in the quiet serenity of the hangar, their ears still ringing in the aftermath of all that noise.\n\n\"That was so exciting!\" Faye blurted out, her big eyes wide with joy.\n\nThe girls giggled and chattered together, all revelling in the adulation they'd received from the crowd.\n\n\"Fancy a drink?\" John said to his old friend, giving him a broad smile. \"We've got a bit of catching up to do.\"\n\n\"You're a mind-reader,\" Charles said, nodding enthusiastically.\n\n\"No, I'm the mind-reader,\" Alyssa said, giving him a playful wink.\n\nHe looked at her quizzically, unsure if she was joking, but the blonde's enigmatic smile neither confirmed nor denied anything. With Alyssa playing coy, Charles turned his attention to Helene and the four green-skinned Lenarrans, studying them in fascination. \"One Nymph not enough for you, John?\" he asked airily, his moustache twitching in amusement.\n\n\"Just reuniting long-lost sisters,\" John replied, raising an eyebrow and grinning back at him.\n\nCharles shook his head in admiration, choosing not to comment, but his expression spoke volumes.\n\n\"Alyssa, please escort Charles up to the Officers' Lounge,\" John said, glancing back at Helene and the Nymphs. \"I'll join you in a moment...\"\n\n\"Sure, we'll take good care of him,\" the blonde purred. \n\nShe gestured towards the double doors that led towards the grav-tube, then Rachel and Calara fell into step with Alyssa and Charles as they left the hangar. The rest of the girls began to disperse too, still chatting together about the incredible reception they'd just witnessed. Jade stayed with her sisters and Helene, the five new girls all shocked by the euphoric crowds, albeit in different ways.\n\n\"I hope that wasn't too overwhelming,\" John said to the aquatic girl, concerned that she was alright.\n\n\"They loved you...\" Helene murmured, looking up at him in awe. \"You and the girls... you're heroes amongst your people!\"\n\n\"We just try to do the right thing and help those in need,\" John said modestly, clasping her hand and squeezing it.\n\nBefore he could say anything else, the four Nymphs had surrounded him, nuzzling up against him and holding him tight. Helene watched in amusement, releasing his hand so he could return Marika's and Leylira's enthusiastic embraces.\n\n\"This one did not know that Master was so powerful!\" Marika gasped, then started placing fluttering kisses on his cheek.\n\nLeylira nodded eagerly, standing on tiptoe to give him a big kiss on the lips. \"Please take this one soon, Master! This one aches to be with you!\"\n\nHe felt a soft fingertip trace along the contour of his ear up to the tip, making him shiver at the exquisite sensation. Neysa leaned in close from behind and whispered, \"This one will do whatever Master desires...\"\n\nBetrixa was making soft mewing noises as she rubbed up against him, her emerald eyes ablaze with lust. Jade embraced her fellow Nymph and grinned at John as she said, \"I thought they might like seeing you with the crowds...\"\n\nJohn gave her a knowing look, then pulled her into his arms, Marika and Leylira stepping aside to make room for their sister. \"And why did you think that might be the case?\"\n\nJade's eyes smouldered and she crossed her wrists behind his neck. \"Because I love seeing you being adored by the masses... you deserve nothing less, Master.\" She gave him a passionate kiss, her long tongue wrapping around his and massaging it lovingly. \n\nIt took a real battle of willpower to pull away from the fawning Nymphs and John gave them a look of regret. \"I'm sorry, but I have to leave, ladies. I need to speak with Charles about some important things.\"\n\n\"Go, it's okay,\" Jade replied, giving him an understanding smile. \"We'll finish this later...\"\n\nHelene and the Nymphs accompanied him to the grav-tube, but parted ways at Deck Three, leaving him to travel up to the Officers' Deck alone. Walking into the Lounge, he spotted Charles and the girls sitting together on the sofas. His old friend was flanked by Alyssa and Rachel, with Calara sitting opposite, the four chatting amiably as they sipped their whiskey.\n\nAlyssa turned to smile at John and slid a glass across the table, the bronze-coloured liquor swirling amongst a cluster of ice-cubes. \"Here you go, handsome.\"\n\nHe sat down beside Calara and picked up the glass. \"Thanks for the warm welcome, Charles. We all appreciated it.\"\n\nThe older man raised his drink in toast and grinned, his moustache twitching. \"We all appreciated you saving us from the Kintark. I'd say we're even, but that seems more than a little unfair to you and your crew.\"\n\n\"If that means you're feeling inclined to do us a few favours, I'm certainly not going to object,\" John replied, smiling back at him and taking a drink, savouring the burn of the liquor in his throat. \"Dana's requested four more Mass Fabricators for her workshop. Is there any chance you can requisition those for us in the next couple of days?\"\n\nCharles laughed and waved a hand dismissively. \"Consider it done. I thought you were going to ask me for something challenging!\"\n\n\"I'll let you know if I think of something else,\" John said, relaxing as he enjoyed the banter.\n\nThe admiral studied him for a moment, his expression turning sombre as he looked at John then Calara. \"All joking aside, John, thank you for saving my life. If I hadn't already seen what you were capable of, I would have thought Olympus was doomed when that Praetorian fleet jumped in. Even then, I freely admit I was terrified; I still struggle to believe that your plan allowed Dacres' fleet to inflict so much damage.\" \n\nThe Latina gave him a magnanimous smile. \"Speed, mobility, and firepower, they make for a potent combination when you've got the advantage on all three.\"\n\nJohn put his arm around the brunette and gently squeezed her shoulder. \"It wasn't just Calara's tactical brilliance that saved Olympus; you really pulled out all the stops on the refit, Charles. I can't believe that entire fleet was a bunch of burnt-out hulks only six weeks ago. You performed a miracle getting them spaceworthy in time.\"\n\n\"I can't take all the credit for that,\" Charles admitted, relaxing in his chair and glancing at Rachel. \"Your father might be a pain in the ass, Doctor Voss, but he's been an absolute godsend to the refit program. I'm not exaggerating when I say that we'd have had no chance of getting the upgrades completed in time, if he hadn't thrown his corporation's full resources into the refit.\"\n\n\"Really?\" Rachel asked, looking thoughtful. \"You do surprise me...\"\n\n\"The man's been working night and day to pour huge numbers of personnel and materials into Olympus' drydocks. I've never seen anyone so driven before,\" Charles said quietly. He raised an eyebrow and added, \"I've allocated him a suite of offices next to mine; I know he'd appreciate a visit...\"\n\nRachel smiled at him gratefully. \"Thank you, I will. I had planned on visiting Olympus' Primary Medical Centre after we'd spoken, but I'll see my father beforehand.\" \n\nJohn put down his drink and leaned forward. \"Charles, I actually wanted Rachel to join us for a reason. Have you seen the footage of her in action outside the Citadel?\"\n\nCharles gave him a wry smile, then glanced at the brunette. \"You've become quite the celebrity, young lady. I'd be surprised if there's anyone in the entire Federation who isn't astounded by the miraculous things you're capable of.\"\n\nRachel blushed, but her grey eyes shone with pride at her achievements. She held Charles' hand and said, \"You're one of John's oldest friends and you've done so much for us; I would have died at Port Medea if you hadn't sold him the Invictus all those months ago. In return for that, I'd like to do something for you...\"\n\nHe looked startled and shook his head. \"You just saved me from the Kintark. I think we're more than even.\"\n\n\"She's offering to heal you, Charles,\" John said gently, smiling at his old commanding officer.\n\n\"But... I'm not injured,\" he faltered, looking around at everyone in confusion.\n\n\"I can check for any conditions or genetic diseases you might not be aware of yet,\" Rachel explained, stroking his hand. \"I'll heal those and rejuvenate your body. Even if I don't find any problems, I'll be able to add at least another two decades to your natural lifespan.\"\n\nCharles gaped at her in amazement. \"You must be kidding?!\"\n\nHer grey eyes started to glow and she shook her head. \"With your permission?\"\n\nHe could only nod, struck dumb as he stared at the glowing radiance that surrounded her.\n\nRachel's misty aura rolled down her arms and enveloped him, then she began to carefully study the older man. After only a few seconds, she frowned with concern and said, \"You've been getting migraines, haven't you? Bad ones...\"\n\nCharles' eyes widened and he blurted out, \"Yes, but how did-\" He didn't finish the sentence, his words trailing off into a shocked gasp at the soft tickling sensation that flooded his senses.\n\n\"Elevated blood pressure is aggravating the synapses in your frontal lobe,\" she said quietly, her brow furrowed with concern. \"With all the stress you're putting yourself under, you're likely to have a massive hemorrhagic stroke within the year. Let me take care of that for you...\"\n\nAlyssa ran her hand over his shoulder and grinned at him. \"You're part of our team. One of the perks is great health benefits.\"\n\nJohn and the girls watched for a minute as Rachel gave their shocked guest an exhaustive check-up, with Charles trying not to laugh at the soft tickling sensation shrouding his body.\n\n\"There, all done,\" Rachel finally said with satisfaction, removing her hand from his and dismissing her healing aura.\n\nCharles blinked in surprise then pulled the brunette into a fierce hug. \"I can't believe it! My head feels absolutely clear for the first time in years!\" There were tears in his eyes as he patted her on the back. \"You don't know what a relief that is! Thank you!\"\n\nShe hugged him back, squeezing him gently. \"You're quite welcome.\" When Charles released her, she continued in an admonishing tone, \"Now I've done everything I can, but you'll need to work to maintain your health. Not too much alcohol and get plenty of exercise... then you'll age gracefully through to those extra twenty years.\"\n\nHe laughed and nodded. \"I feel like I could wrestle a bear! I won't waste this gift, I promise.\"\n\nRachel gave him a peck on the cheek. \"Good. We're all quite fond of you, we want you around for a long time to come.\" She rose to her feet and glanced at John. \"If you'll excuse me, I need to make a house call with Mr. Henry Voss...\"\n\n\"Thanks for all your help, honey,\" John replied, giving her a grateful smile. His smile wavered as the tawny-haired girl walked away and he couldn't help worrying about letting her travel unguarded, even on an ostensibly friendly station like Olympus. He called out to her, \"Rachel, can you ask Sakura to go with you?\"\n\nShe paused and looked back at him, the appreciation for his concern quite evident in her soft grey eyes. \"Don't worry, I'm expecting company.\" Rachel blew him a kiss, then turned and glided from the Officers' Lounge.\n\n*Tashana's already geared up...* Alyssa informed him, her tone soothing. *She'll be her bodyguard while Rachel's off the ship.*\n\n*Perfect, thank you,* he replied, relaxing again. \n\nTurning his attention back to Charles, he was surprised at the dramatic effect Rachel's healing had just had on the man. His old friend was sitting up straighter now, no longer burdened by the stress and anxieties that had plagued him with headaches for years.\n\n\"If only I were thirty years younger... she's a hell of a girl,\" Charles murmured wistfully, his awestruck gaze following Rachel down the corridor before the door closed behind her. \n\n\"You'll get no argument from me there,\" John said with a smile, before taking another sip of whiskey.\n\nCharles blushed and he darted an apologetic glance at John, then at Calara and Alyssa. \"Sorry, I shouldn't be staring at her like that.\"\n\nJohn waved away his apology. \"She's absolutely gorgeous, you'd have to be dead not to notice.\"\n\n\"I just... well, I can't believe what she did...\" the older man marvelled, glancing down at his body. \"I feel like I've been given a new lease on life.\"\n\n\"You only live once,\" Alyssa said with a teasing smile. \"You need to make the most of it...\"\n\n\"That's excellent advice, young lady,\" Charles replied, raising his glass. \"I'm sure the good doctor won't object to me drinking to that!\"\n\nThey all joined him in a toast, clinking glasses together before having a drink.\n\nJohn watched his friend for a moment, then said, \"I wanted to speak to you about the meeting with High Command tomorrow. All being well, Admiral Devereux should be attending with me and the girls.\"\n\n\"I assumed you had Lynette tucked away somewhere aboard the Invictus,\" Charles said, his curiosity piqued and his concern obvious. \"How's she doing? Is she alright?\"\n\n\"We've healed her injuries, but she's asleep at the moment,\" John replied, deliberately omitting a few important details. \"She was shot multiple times in the back and critically wounded, with one of the bullets causing massive damage to her spine. She'll be alright now, but Lynette was paralysed from the waist down when we found her. It'll take her a little while to fully recover.\"\n\n\"I admire her bravery in trying to warn you about the Kintark, but I wish she'd told me the full story when we met on Olympus,\" Charles said with a rueful sigh. \"Maybe we could have found another solution that wouldn't have ended up with her nearly getting killed.\"\n\n\"She was worried about you,\" Alyssa said quietly. \"Lynette realised how important you were to the refit operations; we need to upgrade the Terran fleets to face the Progenitor threat. She decided that you were more important to the future of the Federation than she was, so didn't want to expose you to danger. Unfortunately, she underestimated how ruthless Buckingham could be.\"\n\nCharles listened quietly, nodding his agreement as he considered the selfless sacrifice his fellow admiral had made.\n\n\"Would you have a problem with nominating her as Fleet Admiral tomorrow?\" John asked, putting his drink down on the table. \"I know you're not interested and I can't think of anyone else more suitable.\"\n\n\"She's more than proved herself in my eyes,\" Charles said with conviction. \"I'll be happy to suggest her as a replacement for Buckingham.\"\n\n\"Thanks, Charles,\" John said with a grateful smile. \"I think it would be better coming from someone else, rather than Lynette putting her own name forward. I'd nominate her myself, but I'm just a Vice Admiral, so I'm not actually part of High Command... just in case anyone decides to become a stickler for the rules.\"\n\n\"Just a Vice Admiral...\" Charles said with a chuckle, shaking his head. \"Quite the meteoric rise from Marine Commander aboard the Invictus.\" His moustache twitched as he grinned. \"Have you decided whether you're still retired or not?\"\n\nJohn laughed and gave him a helpless shrug. \"I think I've been well and truly forced out of retirement for the moment. Hopefully we can deal with the other Progenitor in the upcoming few months, then I really will retire for good.\"\n\n\"After the shockwaves you've just sent through the Admiralty, I can't imagine you just leaving all this behind you,\" Charles said with a wry smile. \"Are you sure you won't be keeping an eye on things to make sure High Command doesn't go off the rails again?\"\n\nSlowly shaking his head, John quietly replied, \"I'm only doing this right now because I have to. The politics never interested me and I'm tired of all the fighting. I just want to settle down and raise a family... it took me a while to realise what I wanted, but now I really want that life.\"\n\nAlyssa rose from her seat and sat beside John, then leaned in to give him a tender kiss on the cheek. He smiled at her as he put an arm around her shoulders, then she joined Calara in snuggling up to him. \n\n\"You're a very lucky man, John,\" Charles said, glancing at the two beautiful young women before smiling at his friend.\n\n\"I like to believe that you make your own luck, Admiral Harris,\" John said with a friendly wink. \n\nCharles laughed and took another sip of his whiskey. \"Alright, better tell me your plans for the Invictus repairs before I turn green with envy.\"\n\n\"Dana informs me it'll take a good 48 hours to get all the work done,\" John explained. \"Docking Bay One was great for the reception earlier, but not really practical for the repairs... I'd prefer something a lot smaller that we can keep completely secure.\"",
        "The older officer gave him a rueful frown. \"The Kintark bombardment did quite a bit of damage to the drydocks. I would've given you your pick of the bays there, but it'll take us a few days to clear all the debris from the ones that aren't already in use.\"\n\nAlyssa looked up at John and shrugged. \"We're okay where we are. Irillith can lock this place down easily enough. We won't really need much in the way of equipment, just some space to work in while we remove, repair, then replace the Invictus' armour.\" \n\n\"I guess we stay put then,\" John said amiably, smiling at Charles. \"How about you? What are your plans for upgrading the next fleet of Federation ships?\"\n\n\"Well... our fleets sustained huge amounts of damage defending Terra,\" Charles replied, running a hand through his salt and pepper hair. \"We'll aim to get all the light and moderately damaged vessels back into service as quickly as possible. After that, we can focus on the really badly damaged ships. I think repairs should take priority over new ship construction, but we'll start refitting a second fleet with new components, probably doing something similar to Dacres' fleet.\"\n\nCalara cleared her throat and said, \"You might want to prioritise his fleet for any of the Brimorian Shield Generators you can salvage from the Kintark forces in the Sol System. They're the fastest ships in the Terran Federation navy, so they'll be our most effective reserves. It would be sensible to install the best defensive systems we can on those ships before we commit them to battle.\"\n\nJohn nodded, lost in thought. \"I asked the Maliri to do the same. They stripped all the components they needed from the Praetorian fleet that Sakura wrecked.\"\n\n\"I've seen some of the battle footage of the Maliri in action,\" Charles murmured, sounding awed. \"The amount of firepower they have on those ships...\"\n\n\"It's lucky they're on our side, right?\" John said with a smile.\n\n\"I suspect luck had very little to do with it,\" Charles replied with a look of admiration in his eyes. \"I remember laughing when you told me you were going to trade with the Maliri... I'm glad you didn't pay any attention.\"\n\nJohn looked away into the distance, lost in the memories. \"That seems so long ago... I never would've suspected everything would play out the way it has, not in a million years.\"\n\nCharles finished his drink and put down the glass. \"Well me and billions of others are damn fortunate you managed to bring the Maliri onside.\" Rising from his chair, he continued, \"I'd like to stay longer and make a night of it, but I need to get back to work.\"\n\n\"It's 8:30, you can't still be on duty,\" Alyssa said with a smile. \"Why don't you stay for another drink?\"\n\n\"I'd love to, but I'm still dealing with the aftermath of the Kintark assault,\" he replied with a grimace. \"The drydocks are in a hell of a mess and we'll be receiving damaged fleets from Terra in a few hours.\"\n\nAlyssa and Calara gave him a hug goodbye, then John escorted Charles to the airlock. \n\n\"Thanks for sticking around for the chat, it was great to catch up,\" John said with a warm smile, offering his friend a handshake. \n\nCharles looked down at his hand for a moment, then ignored it and hugged his friend, patting him awkwardly on the back. \"Thank you... I know you asked Rachel to heal me,\" the admiral said, choked up with emotion. \"You've no idea how much difference that's going to make to my life; I've been dealing with those damn headaches for years.\"\n\n\"You're welcome, Charles,\" John replied gruffly, swallowing around the lump in his throat.\n\nThey pulled apart and Charles gave him a grateful nod. \"I'll see you tomorrow afternoon for the meeting with High Command.\"\n\n\"Until tomorrow,\" John said, then watched as Charles put his peaked hat back on his head, then walked away from the Invictus.\n\n*Come on, you old softie,* Alyssa said affectionately. *We've got a fun evening of psychic shaping ahead of us. If you think I'm doing all these armour plates on my own, you're dead wrong!*\n\nJohn smiled and turned towards the Cargo Bay. *Be right there, beautiful.*\n\n***\n\nHenry Voss sat behind his desk, studying the dozen holographic screens laid out before him. They showed detailed reports on the current state of his operations at Olympus, as well as a series of executive summaries on the status of the Voss Corporation. He allowed himself a smug smile as he read the grovelling reports from his board, particularly relishing those from the executives who'd most stridently opposed his recent venture into military ship-building.\n\nNo one had seen the Kintark invasion coming. Everyone had assumed that hostilities with the Kintark would cease for at least the next decade, the Empire desperately suing for peace after the crushing defeat at Regulus. Henry had believed the exact same thing, expecting a period of peace and stability in the immediate future; that was until his daughter had set him straight, opening his eyes to the massive threat the Terran Federation was actually facing. Admittedly, the refit work he'd fully committed the Voss Corporation to had actually been directed towards preparing for a war with the Progenitor, but he was hardly going to reveal that bit of information to his board or the markets. \n\nThe recently upgraded Terran ships had played a pivotal role in the battle against the Kintark, proving just how valuable the services of his newest subsidiary were to the military. With all the recent press focused on his dramatic acquisition of nearly a dozen shipbuilding companies, Dacres' fleet might as well have had Voss Corporation logos emblazoned across their hulls. Helping to defend Terra from destruction at the hands of hostile aliens was certainly one of the most effective and eloquent advertising campaigns he'd ever run, albeit completely by accident. \n\nHenry Voss' reputation as the Oracle of the financial markets had received an unprecedented boost since the battle that morning. Stocks in the Voss Corporation had soared 219% in the last twelve hours, effectively wiping out all the debts he'd accrued over the last few weeks in pursuing his new goals. He couldn't help chuckling to himself, knowing that his recent outstanding success was in reality based on blind-luck and what amounted to a bit of insider trading. \n\nThe most amusing thing about the whole business, was that the Federation Securities and Exchanges Commission was hardly going to start harassing him about his contacts with the Lion and one special Lioness. Those bastards at FSEC had been a thorn in his side for decades and he found it delightful knowing they couldn't touch him on this. Funnily enough though, making more money hadn't been his motivation behind all the recent acquisitions; in fact, the real reason had nothing to do with monetary gain at all...\n\nA chime from his desk intercom drew his attention from his reverie. \"Yes, what is it?\" he grumbled.\n\n\"Sir, I attempted to contact your wife as you requested,\" his assistant, Abigail, replied. \"Meredith said that she was too busy to talk; she was getting ready to go out on a girls' night...\"\n\nHenry ground his teeth in irritation, then sagged back in his chair. \"Alright, thanks for trying, Abi,\" he said gratefully.\n\n\"You're welcome, Sir,\" the young woman replied, her dulcet tones tinged with sympathy.\n\nHe ended the call, then stared despondently out the window at the sprawl of stars. Somewhere out there was his home planet of New Eden, where his wife was preparing herself for another night of debauchery. Henry knew exactly what Meredith was really up to, the private investigators he'd hired had provided graphic proof of just how much fun she was having on her girls' nights out. Ironically, for what was supposed to be a girls' night, Meredith seemed to be the only girl attending those hedonistic parties... \n\nGlancing at a holo-picture of the gorgeous stacked blonde, he let out a heavy sigh. Henry had guessed that Meredith was a gold-digger when he first met her, but he'd been lonely and wanted some female companionship he didn't have to pay for. He hadn't realised what an incredible actress Meredith was though, the stunning 22-year-old seducing him into falling for her, while artfully concealing the fact that she was a cold-hearted bitch. The pre-nup had been quite specific in its terms and now that Meredith had put in the required ten years for a decent payday, she was through pretending to be the loyal trophy wife. \n\nRachel had taken an instant dislike to Meredith, seeing her appearance at the Voss mansion as yet another betrayal of her dead mother. Marrying Meredith had driven Henry and his daughter even further apart, with Rachel eventually leaving home and filing for emancipation. He could only imagine how heartbroken Catherine would have been to see what transpired after her death.\n\nHenry felt a sharp pang of loss when his thoughts turned to Catherine. He'd loved her in his own way, even if he had been a neglectful husband, too wrapped up with his business empire to pay that lovely woman the attention she so richly deserved. When she had needed him the most, he'd let her down in the worst possible way, ultimately costing Catherine her life at the hands of her kidnappers.\n\nFeeling overwhelmed with sadness, he realised he deserved his miserable home life, it was Karma's way of paying him back for being such a failure as a husband and father. He might be one of the wealthiest men in the Terran Federation, but his life was ample proof that money couldn't buy you happiness. Billions of credits did nothing to stave away the bitter loneliness and regrets that kept him awake at night...\n\nThe desk intercom chimed again and Henry considered ignoring it, loathing the thought of speaking to Meredith if she had decided to call back. After a moment of indecision, he glanced at the optical sensor to accept the call.\n\n\"Sir, Doctor Voss is here to speak with you,\" Abigail informed him, making no attempt to disguise her happiness.\n\nHe frowned in confusion for a moment, then his eyes widened with understanding. \"Send her in, Abi!\" he blurted out, his composure shattered.\n\nLurching from his seat, he strode over to the door, reaching it just as it started to open. \n\nHis raven-haired assistant stepped aside and smiled warmly at the tawny-haired brunette standing in the reception area. \"It was lovely to finally meet you, Rachel.\"\n\n\"Likewise, Abigail,\" Rachel replied, returning her smile. \n\nRachel glanced back at him and her happy expression wavered for an instant, just enough to remind him of all the pain he'd inflicted on his little girl. He flashed back to that awful night in his study twelve years ago, when he'd broken the news of his wife's death to her. It was the first time he'd seen the damning look of hatred that had consumed Rachel's pretty face... an expression he'd grown all too familiar with over the following years.\n\n\"Father,\" she greeted him politely. \"It's good to see you.\"\n\n\"Please come in, Rachel,\" he said, gesturing into the office. \n\nHenry was about to follow her, when he felt the hairs on the back of his neck rise and a shiver ran down his spine. He instinctively knew that unfriendly eyes were watching him and he glanced back into the reception area, where a white-armoured Lioness was leaning against the wall. She had her arms crossed, her fingers only inches away from the grips of her long pistols. Even though the faceplate of her body armour was opaque, he knew she was watching him carefully.\n\nQuickly stepping into the office, he closed the door behind him. \"The bodyguard wasn't necessary, Rachel,\" he said reproachfully, disquieted by the silent sentry.\n\nRachel bristled at his tone as she glided across the room. There was a sharp edge to her voice as she said, \"John insisted. He knows how important it is to protect a woman he loves...\"\n\nHenry could hear the hurt and anger behind his daughter's words. \"If I could go back, I swear I would do everything differently,\" he said quietly, his shoulders slumping. \"I'm so sorry.\" \n\nShe paused, a look of regret flashing across her breathtakingly beautiful face. \"No, I should be the one apologising. That was uncalled for and I didn't come here to fight, I promise.\"\n\nHe walked across to the sofa and sat heavily. \"I deserved it... and so much more for what I did to you.\" Henry let out a remorseful sigh. \"And for what I did to your mother...\"\n\nRachel hadn't moved from where she stood, her grey eyes studying him intently. \"Is that why you're letting Meredith do what she's doing? Are you trying to punish yourself?\"\n\nHenry felt a thick lump in his throat and he looked away, unable to look at his daughter any more. There was a painfully long silence between them, then he was suddenly aware that Rachel was sitting on the sofa close beside him, her hand on his shoulder.  \n\n\"I arrived ten minutes ago. I overheard your conversation with Abigail,\" Rachel said softly. \"I've spoken to her before... she told me what's been happening.\" Her eyes narrowed in anger. \"I knew Meredith was a stone-cold bitch the first time I saw her, but this is low, even for her!\"\n\n\"As I say... I deserve far worse,\" Henry muttered, finally turning back to look in shame at his daughter. \"Please believe me that there's not a day goes by that I don't wish I could turn back time and save Catherine from those monsters. I was so stubborn and arrogant, but it was you and your mother that paid the price for my hubris.\"\n\nThere was a flicker of pain in Rachel's eyes, which began to well up as she was overcome by horrible memories. \"Hold me, please...\" she begged him, a tear rolling down her cheek.\n\nHe put his arms around his daughter, letting her cry into his chest, his own heart breaking to see Rachel so overcome with grief. Henry let her cry herself out, rubbing her back and murmuring supportive words. \n\nWhen Rachel's outpouring of emotion had run its course, he said quietly, \"I lost you both that day... the two most important people in my life and I just threw you both away. I understand why you hate me... and I'm sorry I failed you so badly. You and your mother deserved so much more.\"\n\nRachel brushed the tears from her eyes and gave him a sad smile. \"I don't hate you, Daddy.\" Holding his hand, she stroked it with her thumb. \"You've changed... especially since I saw you last on New Eden.\"\n\nHenry nodded, placing his other hand on top of hers. \"You finally made me realise... my whole life was just an empty shell. I've made a lot of money, but the Voss Legacy that I was so proud of was hollow and worthless. I'm trying to actually make a difference before it's too late.\"\n\n\"Charles said you were helping with the refit... that if it wasn't for you, they never would have finished in time.\" She looked into his eyes and he could see the sympathy and understanding there. \"You're doing a good thing... Mummy would be proud of you.\"\n\n\"You're so like her, Rachel,\" he murmured, trying to memorise every detail of her beautiful face. \"Not just the way you look, but you're also kind and compassionate, just like she was.\" He glanced away, his voice filled with remorse as he continued, \"I used to think that was a sign of weakness... I was such a deluded fool.\"\n\n\"Don't talk like that,\" she said gently, reaching up to get him to look at her again. \"We can't change the past, so let's start afresh. A loving daughter with her doting father...\"\n\n\"That sounds wonderful,\" he said with a grateful smile.\n\nRachel leaned her head against his shoulder and they sat in comfortable silence, both feeling emotionally wrung out.\n\nHenry eventually put his arm around her and rubbed her back. \"Will you be staying at Olympus for long?\"\n\nShe shook her head, then sat up, turning around so she could look at him again. \"We're only here for a couple of days... just long enough to repair all the damage the Invictus took in the battle.\"\n\nHe watched her for a moment, then said, \"I've seen the video. I watched you fighting the Kintark and saw what you did for those soldiers after the battle.\" Shaking his head in wonder, he marvelled, \"It was incredible... I've never seen anything like it.\"\n\n\"I healed you last time we met,\" she said with a shy smile.\n\nHenry laughed and patted her arm. \"I was a bit distracted at the time.\"\n\n\"Would you like to watch me again?\" Rachel asked self-consciously, an odd note to her voice, as if she was seeking his approval. \n\nIt was over twelve years since he'd last heard it, reminding him of the little girl that was always so desperate for attention from her father. Those had been happy years, the happiest of his life in fact, although he'd not realised it at the time. Suddenly he longed to see that look of delight in her eyes, his daughter revelling in her father's undivided attention once more.\n\n\"I'd love to, sweetheart,\" he said, his voice thick with emotion.\n\nRachel rose to her feet then blushed, wiping at her eyes. \"I must look a terrible mess. Let me just use the bathroom, then we can head to the Medical Facility.\"\n\n\"That door over there,\" he said, gesturing to the ensuite in the corner of the room. \n\nHe watched her leave, then headed over to the door leading to the reception area. \n\nAbigail looked up at him and gave him a sunny smile. \"Can I do anything for you, Sir?\"\n\n\"I'll be leaving with my daughter in a minute, you can call it a night,\" he said, giving his capable assistant a look of gratitude. He hesitated for a few seconds, then added, \"Rachel mentioned that the two of you have spoken before...\"\n\nShe froze as she was picking up her bag, then looked up at him through her long dark hair. \"I hope I didn't do or say anything out of turn. Rachel was concerned about you, so I just-\"\n\nHenry waved away her explanation and smiled. \"Don't worry, I'm not upset. Thank you for talking with her.\"\n\n\"Oh, it was no trouble at all,\" Abigail gushed, slipping on her jacket. \"She's so lovely! You must be incredibly proud of everything she's accomplished with the Lion.\"\n\nMention of the Lion suddenly reminded him of Rachel's silent bodyguard and when he turned back to look for her, he saw the armoured woman in the exact same position she was before. He could tell she was still watching his every move.\n\n\"Well, goodnight, Sir,\" Abigail said, before turning and leaving the office. \n\n\"Goodnight, Abi,\" he mumbled distractedly over his shoulder, not taking his eyes off the Paragon-suited figure. Glancing back to check that his assistant had departed, he turned to face the imposing woman. \"You're one of the two Lionesses that didn't remove their armour during the award ceremony.\"\n\n\"Yes,\" she replied brusquely.\n\n\"Can I ask your name?\" he asked, studying the mysterious woman.\n\n\"It's Tashana,\" came the equally curt reply.\n\nHenry hesitated, then stood up straighter, determined not to be intimidated. \"Have I done something to offend you?\"\n\nTashana stepped away from the wall, the sudden movement fluid and graceful, reminding him of a panther stalking its prey. She prowled towards him, the heel on her boots bringing her up to his height.\n\n\"I've seen men like you before... corrupted by their money, power, and influence. People like you run roughshod over those you think are beneath you.\" She glanced through the door into the office, checking to see if Rachel had left the bathroom yet. Stepping closer, Tashana continued in a hushed whisper, \"Rachel's a wonderful girl... one of the best of us. You've hurt her before, but you better not do it again.\"\n\n\"Or what?\" he couldn't help asking. \"I don't appreciate being threatened.\"\n\nTashana slowly raised her hand, holding her palm up, and a trio of tiny flames burst into life. Henry jumped back in surprise, then looked closer in fascination when he realised he wasn't in any immediate danger. The dancing fires grew in size, then took form into three distinctive figures, which were clearly a man and two women. One of the women dropped to her knees, holding her tiny face in her hands as she started sobbing. The male figure stood there dispassionately, until the second woman immolated him in a wicked torrent of fire, the man convulsing in agony as he was slowly incinerated.",
        "\"That wasn't a threat, it was a promise,\" Tashana said ominously, snapping her hand closed and extinguishing the tableau. \"Don't hurt her again.\" \n\n\"I won't!\" Henry gasped, stumbling back a step. \"I love my daughter, I don't want to hurt her!\"\n\nShe watched him for a long moment, then nodded, seemingly satisfied by his response. \"My father died many years ago and I'd give anything just for a few minutes with him again. Don't waste this opportunity to atone for what you did to Rachel. That poor girl was devastated when her mother died and she deserved far better than the shabby way you've treated her so far.\"\n\nHenry deflated and nodded. \"I know and I'm trying to make up for that.\"\n\n\"I'm ready!\" Rachel called out from the office, walking across the room to join them. \"Sorry to keep you waiting.\" \n\nThe redness around her eyes from crying was gone now, washed away along with the tears she'd shed for her mother. Stunningly beautiful once more, his daughter gave him a radiant smile.\n\n\"It's quite alright, I'm not in any rush,\" Henry said, smiling back at her. \n\nShe looked at him curiously, her perceptive eyes studying his face. \"Is something the matter? You look unsettled... anxious even.\"\n\n\"Err, no... everything's fine,\" he hastily replied, glancing at their companion. \"Tashana was just telling me how much she misses her own father.\"\n\nRachel's eyes softened and she smiled in sympathy at the armoured girl. Reaching out to place her hand on Tashana's arm, she said, \"I'm sorry, that was thoughtless of me... I didn't think how hard this must be for you. If you want to head back to the ship that's perfectly understandable.\"\n\n\"No, I'm fine, don't worry about me,\" Tashana replied, her tone affectionate. \"Besides, you know I'm not going to let you wander around the station unguarded, John and Alyssa would be furious.\"\n\nHenry was astounded by the dramatic shift in the mysterious woman's voice; it was like liquid honey now, sweet and full of warmth as she spoke to his daughter. He was left in no doubt just how much Tashana cared for his girl, leaving him facing a flurry of surprising emotions. While he was glad Rachel was surrounded by people who obviously loved her a great deal, he couldn't help feeling like he'd been replaced in her heart, leaving him with a sense of profound loss.\n\nRachel was about to slip her arm through his, but she hesitated and looked at him shyly, then held his little finger with her hand. \"Alright, let's go!\"\n\nHenry tried not to choke up as he felt a sudden onrush of memories. His little girl had always reached up to grab his finger rather than hold his hand, even when she grew bigger, right up until the day she found out that her mother had died.\n\nThey left his office and started making their way towards Olympus' primary Medical Centre. The corridors were busy with personnel despite the late hour, base staff and ship crews returning from Docking Bay One, still abuzz after welcoming the Lion and his Lionesses to the shipyard. With Rachel in her uniform and Tashana in her armour, both girls were instantly recognisable to everyone they met, and their every step was met with cheers, friendly greetings, or earnest thanks. \n\nHenry was a famous figure within the Terran Federation, so was used to a certain degree of recognition from the public. However, the way the girls were greeted was like nothing he'd ever seen before, leaving him watching in astonishment. While Rachel acknowledged the crowds with a warm smile and friendly words, her fellow Lioness remained quiet, walking calmly behind her. Henry glanced over his shoulder at the armoured woman and immediately noticed the difference in her stance. \n\nTashana was watching everyone that approached them like a hawk. Her helmeted head flicked back and forth with tiny movements as she evaluated the crowd, judging if they posed a possible threat. Those armoured fingers were actually resting on her twin pistols now and he could see just how seriously this intimidating woman took her role as Rachel's protector. He also finally realised that she was there to keep his daughter safe on their travels through Olympus, not to protect Rachel from himself.\n\nThe crowds eventually thinned out and Henry glanced at his daughter as they walked along one of the huge central hallways. \"Rachel... would you tell me a bit more about your life?\"\n\n\"What would you like to know?\" she asked, looking surprised but pleased.\n\n\"Everything,\" he said gently, squeezing her hand. \n\nHenry listened to his daughter as she told him about the life she'd made for herself aboard the Invictus. She spoke about her role as Chief Medical Officer; how much she enjoyed researching alien species and her professional pride in curing a multitude of supposedly incurable afflictions. He nodded as he listened to her attentively and Rachel started to relax, realising that he was genuinely interested and not judging her for her choice of career. She started to talk about more personal things, discussing her friends and the close relationships she'd nurtured with the crew. Her face lit up with joy as she talked about Dana and it was obvious just how much the redhead meant to her.\n\n\"Dana sounds like a very special girl,\" Henry said, smiling at his daughter. \"I'm glad that she makes you so happy.\"\n\nRachel beamed at him and leaned into his arm as they walked. \"She's absolutely amazing!\" Glancing over her shoulder, she flashed a smile at Tashana. \"They all are.\"\n\n\"You haven't told me much about your fianc\u00e9,\" he said with a smile, glancing down at the gleaming engagement ring circling her slender finger.\n\nShe blushed as she followed his gaze, then looked up at her father with concern and regret in her eyes. \"I'm so sorry, Daddy. John wanted to ask for your permission the last time we were on New Eden, but I ruined it by getting into a huge row with you. I asked him not to wait and he proposed a week later...\"\n\n\"It's alright, it wasn't your fault. It takes two to argue,\" Henry said, swallowing the lump in his throat, realising what his stubborn pride had cost him once again. \"May I see the ring?\"\n\nRachel showed him the impressive grey diamond set in an intricately carved silver band, the gemstone quite clearly chosen to match the colour of her eyes. \"He made it himself,\" she breathed, her voice filled with love. \n\n\"A Vice Admiral in the military, a trader worth millions, and now a jeweller...\" Henry said with a wry smile. \"It seems there's no end to the Lion's talents.\"\n\n\"He taught me to cook too,\" she replied, with a playful twinkle in her eyes. \n\n\"You seem to have landed the most eligible bachelor in the Federation,\" he said, lifting her hand and kissing it. \"Congratulations on your engagement.\"\n\n\"An improvement over Axel?\" she asked with a giggle.\n\nHe laughed and nodded, remembering the dreadful tattooed biker she'd brought home years ago to antagonise him. Pausing for a second, he turned to face his daughter. \"John seems like a good man, Rachel, and he obviously loves you very much. Your mother would have approved, I'm sure of it.\"\n\n\"Stop, you're going to make me cry again,\" Rachel murmured, stepping closer into his embrace.\n\nHenry wrapped his arms around her and glanced nervously at Tashana. Although he couldn't see her face, he could tell she was smiling back at him in amusement. She patted him on the arm, then stepped away to give them some privacy.\n\nWhen Rachel had composed herself, she slipped her arm through his and glanced down the corridor. \"It's not far to the closest Medical Centre. I want to help everyone there before they start receiving the wounded fleet personnel from Terra.\"\n\nHe nodded, walking with her along the corridor until they saw the brightly lit facility, the glowing red caduceus clearly identifying it as a place of healing. Henry could sense his daughter's anticipation, given away by the extra spring in her step as they approached the glass-panelled doors. She looked his way and there was a shining excitement in her eyes as she beamed a brilliant smile at him.\n\n\"Go ahead,\" he said indulgently, releasing her arm and giving her an encouraging pat on the back.\n\nRachel nodded then took the lead, breezing through the double doors as they swished open for her. She was confident now, self-assured in her persona of a Lioness as she glided into the centre. \"Good evening,\" she said cheerfully, to the two people standing at the reception desk. \n\nThe receptionist was talking to an older dark-skinned medic in a long white coat, but they paused their conversation to give the new arrival a perfunctory glance, and a polite hello. Henry watched in fascination as both of them suddenly recognised the stunning brunette who had swept into their domain, the doctor and receptionist alike doing a shocked double-take.\n\n\"Doctor Voss!\" the older man gasped, his eyes like saucers.\n\nRachel glanced at his nametag, while greeting him with a pleasant smile. \"It's a pleasure to meet you, Doctor Danjuma. Your paper on treating skin necrosis surrounding laser burns was fascinating.\"\n\n\"T-thank you!\" he stammered, stunned that she was even familiar with his research.\n\nShe raised an eyebrow as she studied the tranquil reception area. \"It looks like you haven't received any of the injured personnel from the Battle of Terra yet. I was hoping to help clear your wards for you so that you can accept more patients.\"\n\n\"That would be wonderful!\" he gushed, nodding eagerly. \"If you'd like to follow me, I'd love to see your talents firsthand! I-I mean, we have a great number of people you can help...\"\n\nRachel inclined her head and smiled at him. \"Lead on then, Doctor.\"\n\nHenry followed after the flustered doctor, as he led Rachel through a set of double-doors into an immaculately clean corridor, the sharp smell of disinfectant lingering in the air. There were two armed guards stationed here, who glanced reflexively at Tashana as she strolled in wearing full body armour. They recognised her distinctive Paragon suit immediately, eyes lingering on the white Lioness symbols floating above her armoured pauldrons, and made no move to stop her.\n\nDanjuma had a comms device wrapped around his forearm and he spoke into it in a furtive whisper, the holographic faces of his colleagues registering their shock as he informed them of the arrival of their celebrity guest. Rachel glanced back over her shoulder at her father and winked at him, as he watched the stunned reaction by the medics. By the time they reached the first ward, doctors were running down the corridors to catch up to them.\n\nThere were forty patients in this ward, twenty on either side, all those not sedated with neural-blockers watching the scrambling doctors in bewilderment. Henry could see the horrible scars and disfiguring injuries these navy personnel had received in battle, the shimmering blue of force fields protecting them in hermetically sealed environments to prevent infection of their wounds. The closest hospital bed on the right was occupied by a young woman. The brunette would have once been considered pretty, but that was before she sustained the horrific wound across the right side of her face that had cost her an eye.\n\nRachel approached and gave the medical charts a cursory glance before smiling at the grievously injured woman. \"Hello, Lieutenant Catherine Pearce. According to your notes, you fought at Regulus?\"\n\nPearce nodded and gave her a brave smile. \"Yes, I was at Regulus.\" She gestured towards the rest of the ward. \"All of us were there. I'm an engineer on the Hyperion... or at least I was. A plasma fire destroyed the aft starboard power regulator and the feedback surge made the console I was working on explode.\" Her hand lifted self-consciously to her ravaged face. \"They say I'm lucky to be alive...\"\n\nBy her bleak tone, Henry could tell the young woman wasn't entirely convinced.\n\nRachel nodded sombrely. \"They were right. I can't heal the dead...\"\n\nShe inhaled deeply, her eyes losing focus as she channelled her will inward. Suddenly those beguiling grey orbs were glowing with a shining inner radiance, and a moment later, Rachel was surrounded by a soft aura that spread out to engulf the wounded woman. Pearce gasped in shock, her startled cry echoed by the other injured personnel in the room as Rachel walked into the centre of the ward, her healing shroud reaching out to touch them all. The medics looked on in wonder as surgical scars closed and smoothed over, while missing limbs began to slowly reform, bones and flesh knitting together to their utter astonishment. \n\n\"You're her... the Angel of Terra!\" Pearce blurted out, her newly restored green eye seeing again for the first time in months. She staggered over to Rachel and fell to her knees beside her, tears streaming down her face as she looked up in wonder. \"Thank you! Thank you so much!\"\n\n\"My friends usually just call me Rachel,\" she replied with a kind smile, reaching out to stroke the young woman's cheek, her pretty face made whole once more. \"And you're welcome.\"\n\nSoon Rachel was surrounded by patients overwhelmed with gratitude, who alternated between gaping at her reverently and darting disbelieving glances at their regenerated bodies. Henry was sure his own expression was as shocked and filled with wonder as everyone else's in the room, but he was the only one there bursting with paternal pride for his remarkable daughter. Rachel turned back to look at him, tentatively seeking her father's approval one more time. When she saw that pride shining in his eyes, her face lit up with joy, making her seem even more angelic with that beatific smile.\n\n\"Thank you,\" Tashana said softly, placing an approving hand on his shoulder.\n\n***\n\nJohn clicked his back with a groan, then stood up to stretch his legs after sitting on the deck for the last two hours. Smiling with satisfaction, he studied the full set of Crystal Alyssium plates he'd just finished deca-shaping for the Valkyrie. The mech had been so badly mauled that he'd decided to make a brand new set of armour, rather than attempt to salvage the old plasma-scorched plates. Two of the maintenance bots hovered across the Cargo Bay towards the stacked plates, before picking up the closest pile in their sturdy six-fingered grip. They appeared to nod respectfully to Faye as they floated past, their rictus grins giving them a very creepy vibe.\n\nThe purple sprite gave them a playful salute in return, then spun around to smile at John. \"Is that all the armour plates?\"\n\n\"Yeah that's the full set for the Valkyrie,\" John replied, watching the bots glide away. \"Faye, did they just nod at you?\"\n\nShe looked worried and said in a terse whisper, \"You weren't supposed to see that...\" She glanced at the departing robots before facing him again. \"My robotic minions were letting me know that they were all set to overthrow the crew tonight... Now you've rumbled me, I'm going to have to change all my diabolic plans!\"\n\nHe laughed and pulled the giggling girl into a hug. \"You're getting far too cheeky. I wonder if you're ticklish?\"\n\nFaye squealed with laughter as he tickled her under the arms and across her tummy, until she finally begged him to stop. He set her down and they shared a grin.\n\n\"Apparently so,\" he said with a smirk.\n\n\"Let me know when it's time to give her a spanking!\" Alyssa called over to him. \n\nJohn looked across the Cargo Bay, where Alyssa was lounging indolently against some crates. She made casual flicking motions with her fingers as she deca-shaped eight armoured panels simultaneously, before adding them to the mountainous stack of plating for the Invictus.\n\nStrolling over to her, he encircled her waist with his arms and kissed her neck. \"You look like you're getting bored...\"\n\n\"I was bored two hours ago,\" the blonde admitted, leaning back against his chest. \"Although Rachel started to make things interesting...\"\n\n\"Really, how so?\" he asked, watching as she siphoned off a stream of liquid metal and began quickly reshaping it.\n\n\"I hope you don't need any of us to use our powers before bedtime tonight... Rachel's going on a healing extravaganza and I thought I'd indulge her. She's showing off for her dad, so I'm giving her everything we've got... At this rate I think she might actually eclipse you in popularity; everyone she heals absolutely adores her.\"\n\nJohn nodded thoughtfully. \"This is actually great practice for Rachel. She can't just train her abilities whenever she wants, like the rest of you, so it's a good opportunity for her to push herself a bit.\" He hesitated before giving Alyssa a gentle squeeze. \"Please keep an eye on her so she doesn't strain herself too much.\"\n\nShe turned to look back at him over her shoulder, so that he wouldn't miss her rolling her eyes. \n\n\"Alright, I know you've got it covered,\" he said with a smile, but not before giving her a playful smack on the rump.\n\nShe moaned appreciatively, then ground her bottom against him, grinning as he started to stiffen against her succulent backside. \"I'd love to take care of that for you, but that load belongs in another tummy tonight...\"\n\n\"That reminds me, I'd better go and check on Jehanna,\" John said, knowing the reporter would wake from her second feeding soon. \n\n\"I'm sure Helene can't wait for hers too,\" the blonde said with a knowing smile.\n\nBefore John could reply, the double doors on the far side of the Cargo Bay slid open and Sakura came bounding over to join them. \"John! Could I speak with you for a moment?\"\n\n\"Sure, what's up?\" he asked, starting to move.\n\nAlyssa shook her head. \"Uh-uh, you're not going anywhere. I like you just where you are...\" She gripped his length with her toned cheeks and ground back against him. \n\nSakura smiled at John's appreciative groan. \"I was wondering if I could ask a favour...\"\n\n\"I'm feeling in a particularly... giving mood,\" he murmured, holding onto Alyssa's hips as she gyrated against him. \"Just name it...\"\n\nThe Asian girl grinned at him, her brown eyes sparkling as she held up the holo-reader and pointed at the rotating image. \"I want one of these!\"\n\nHe looked at the glossy holographic brochure and laughed as he nodded. \"Rachel's not going to be able to keep her hands off you.\" He glanced at Faye and continued, \"I've been meaning to give everyone some spending money. Please contact the bank for me and arrange for all the girls to have their own sub-account set up with say... a million credits each.\" \n\n\"Making the call right now!\" Faye replied, smiling at Sakura's stunned expression.\n\n\"You're giving me a million credits...\" the Asian girl mumbled, her almond-shaped eyes wide with shock.\n\nAlyssa reluctantly released John, so that he could pull Sakura into his arms. \"We're family, it was always our money,\" he said, brushing his fingers through her silky raven hair. \"I don't want you to have to ask my permission if you want to buy something.\"\n\nShe looked up at him under her long lashes and gave him a coy smile. \"Actually, I quite like it...\"\n\nAlyssa sidled up to him and embraced him from behind. \"You can still hold my purse strings too. Then I'll have to bribe you with naughty sexual favours when I want something...\"\n\nHe laughed and shook his head with amusement. \"You two are as bad as each other!\"\n\n\"Actually, Sakura likes being your shy submissive,\" Alyssa purred, licking the tip of his ear. \"Whereas I thoroughly enjoy being your insatiable seductress...\"\n\n\"You're a pair of vixens,\" he said with a grin. He gave Sakura a tender kiss, then turned for a smouldering one from Alyssa. \"As much as I'd love to take this further, I need to go and check on Jehanna, she'll be waking up in a minute.\"\n\nAlyssa pouted, then gave the Asian girl a flirtatious smile. \"Would you like to help me make all this shaping more fun? I'd be interested to see if I can still do it while I'm being... distracted.\"\n",
        "\"Of course, Matriarch,\" Sakura said demurely, before flashing a smile at John as she began unbuttoning her shirt.\n\nJohn couldn't possibly leave now, so he watched the two girls strip off and entwine in a very sensual sixty-nine. He saw Alyssa's hand wavering slightly as she began to moan, but she somehow managed to keep manipulating the psychically responsive metal. The Crystal Alyssium wobbled a bit as she reshaped it, the blonde arching her back as Sakura lapped away at her.\n\n*I think we've finally found a way to make psychic shaping enjoyable!* Alyssa exclaimed with delight.\n\nLeaving them to their fun, John headed for the grav-tube with Faye skipping along happily at his side. \"Any change with Lynette?\" he asked, as they ascended through the decks.\n\n\"Do you mean her sleeping status or her appearance?\" the elfin girl asked, looking up at him for clarification.\n\nHe shrugged and said, \"Actually, I suppose I was just making conversation. I already know she's still asleep and should be for several more hours. I think I'll leave her new appearance as a surprise.\"\n\n\"Will you let her see the gradual changes, or go for the big reveal?\" Faye asked, her big eyes sparkling with anticipation.\n\nJohn smiled at her. \"I think you know the answer to that.\"\n\nShe clapped her hands together with glee. \"This is going to be so much fun! I can't wait to see how she reacts when you're finished, it's the best part!\"\n\nWhen they arrived at Deck Two, John waved goodbye, then stepped out of the blue anti-gravity field. Faye started singing a happy song to herself and her sweet-sounding voice echoed down the corridor as he walked to the bedroom. Jehanna was still curled up in bed fast asleep when he arrived, but a glance at the ship's chronometer told him that she'd be waking up in less than a minute.\n\nJohn lay down beside her and sure enough, those dark sultry eyes flickered open, exactly four hours after he'd finished feeding her. \"Hello, beautiful,\" he said, greeting her with a warm smile.\n\n\"Mmm, I had a lovely dream,\" Jehanna purred, shimming across the bed a few inches to snuggle into him. \n\nJohn brushed her black hair away from her face. \"Feel like sharing?\"\n\nShe blushed, a hint of red appearing in her brown cheeks. After a brief pause, she replied, \"I was pregnant and we were expecting our first baby together.\" Jehanna's deep brown eyes took on a gentle doe-eyed softness and her hands drifted down to her tummy. \"It felt so real and I... Oh my God!\"\n\nJehanna gaped at her rounded belly, her hands cradling the impressive curves.\n\n\"Shh, easy now,\" John said, his voice soothing. \"You've experienced this before, when we had sex for the first time.\"\n\n\"I know... but this feels different,\" the dusky beauty replied, calming down again. \"I must have been in a post-orgasmic haze last time... that all seems like a dream now.\"\n\nJohn ran his hand over her coffee-coloured belly. \"Just relax, everything's okay.\" \n\nJehanna closed her eyes and let out a soft moan, relishing his gentle touch. \"Oh... that feels wonderful!\"\n\n\"We're connected at the moment,\" John said, enjoying the feelings of protectiveness as he caressed her. \"It's only temporary for now, but I can sense you in my mind; that's how I healed your cuts and bruises.\"\n\nShe slowly opened her eyes again and shook her head in wonder. \"This is the most intimate afterglow I've ever felt.\"\n\n\"You think you could get used to this?\" he asked with a smile.\n\nShe laughed and nodded, glancing down at her tummy again. \"Definitely, but I still can't believe I'm so full of your spunk,\" Jehanna replied, a flare of excitement in her eyes. \"I'd have to be the clean-up girl after a thousand-guy bukakke to look like this!\"\n\nJohn raised an eyebrow and chuckled. \"That's a vivid bit of imagery.\"\n\nJehanna managed to blush like a giggling schoolgirl and sheepishly admitted, \"I did say I went through a dry spell... I ended up watching a lot of porn.\"\n\n\"Well it's not a thousand guys, just me I'm afraid,\" John said with a grin. \"Although your body's absorbed half of that already...\"\n\nShe groaned at the thought, glancing down at her stomach. \"I can't wait until you feed me your cum again. I'll remember all of it next time, won't I?\"\n\nHe nodded and studied her carefully. \"Yes, you will. Tomorrow's the big day, when you'll have to choose whether you want to make our connection permanent.\"\n\nJehanna was only inches away from him as she stared back, a burning intensity in her eyes. \"So if I go through with it, we'll be together forever? I'll be on my knees for centuries, filling my stomach with your spunk over and over again?\"\n\nJohn saw the feverish need in that gaze and let his fingers drift down between her legs to her glistening folds, his skilful fingers finding her clit. \"Not all the time, no... I'll need to ride you hard sometimes, feel your eager pussy urging me to fill your womb with my cum.\"\n\nHer eyelashes fluttered and she let out a low groan, her body trembling with excitement. \"Keep going... tell me what a bad girl I'll be...\"\n\n\"No... you'll be a good girl for me, and I'll make sure you get rewarded,\" he said firmly, rubbing her with an insistent rhythm. \n\n\"How?!\" she gasped, her breath coming in excited pants.\n\n\"I've seen how much you like the twins... imagine living on a world with millions of sexy alien girls just like that,\" he replied, gazing into her eyes when they flashed open, her pupils wide with lust. \"The Maliri love Terran girls, they think you're exotic. They'll be lining up to bed you, those stunning azure beauties desperate to caress your skin with their soft blue fingers. Taking it in turns to taste you, make you writhe on their eager tongues...\"\n\n\"Oh fuck!\" Jehanna squealed, shuddering through an explosive climax. \n\nJohn pushed two of his fingers inside her, making her buck against him as she gripped him tight. When she was done, he eased out of her, then held her close.\n\n\"How was that?\" he asked, stroking her back as she struggled to get her breath back.\n\nJehanna giggled and looked up at him in a daze. \"Incredibly hot... I've never had a guy just finger me to orgasm before!\" She let out a contented sigh. \"And the things you were saying... How did you know, about the twins?\"\n\n\"I just noticed the way you looked at them,\" he replied, running his fingers across her shoulder and leaving a trail of goosebumps. \"The girls all think you're very beautiful. Just ask Irillith and Tashana if you'd like to sleep with them sometime... but let me know, I'd love to see you three together.\"\n\nShe gazed at him with an enchanting look of wonder and disbelief. \"I've never felt so liberated before... sex was always so inhibited with my last boyfriend.\"\n\n\"I doubt you have many inhibitions left after that zero-gravity orgy,\" he said with a smile. \n\n\"That was a pretty spectacular introduction to having fun with the girls,\" she agreed, a flicker of arousal igniting in those alluring brown eyes. \"But how about I reciprocate and take care of you now?\"\n\nJohn gave her a rueful shake of the head. \"I'd love to, but for today and tomorrow I'm on a tight schedule.\"\n\nShe propped herself up on her elbow and frowned in confusion. \"What do you mean?\"\n\nHe sighed, then began to explain about the monsters in the mists and the terrifying visits to the nightmarish astral sub-plane. Jehanna listened to him in astonishment as he explained how connecting each new girl to their psychic network prompted a fresh excursion into that realm of horrors. He then elaborated on why he intended to add all the new girls on one day, to minimise the exposure to those hideous astral creatures.\n\n\"Wow! You don't do things by half-measures, do you?!\" she exclaimed, shaking her head. \"I'm amazed you haven't become a rampant commitment-phobe, if these nightmares happen every time you start getting close to a girl.\"\n\n\"I can't help it, I keep meeting truly exceptional young women,\" John said, holding her gaze and brushing his fingers through her hair.\n\nHe pulled her down for a kiss and Jehanna moaned into his mouth, her tongue flickering against his as she responded passionately. Her hand drifted down his chest, her fingertips brushing lightly down his shaft until she cupped the first of his four balls. She moved to each in turn, hefting them as if feeling their way and gauging their potency.\n\n\"Such a heavy load...\" she crooned, licking her lips. \"Who are you feeding next?\" \n\n\"It's Helene's second turn,\" John replied, enjoying her gentle touch. \"Unless she's changed her mind that is.\"\n\nJehanna shook her head. \"I've seen the way she looks at you... your crew would have to drag her off the ship kicking and screaming to stop her joining.\" She nibbled her lower lip for a moment, a question on the tip of her tongue.\n\n\"You want to watch?\" he asked with a smile, guessing what was on her mind.\n\nShe nodded enthusiastically. \"Would that be alright? I'd love to see you with her!\"\n\n\"We can always ask,\" John said, sliding his hand down to rest on the graceful curve of her hip. \"Helene seems like an accommodating girl, I'm sure she won't mind.\"\n\n*We're already on our way!* Alyssa said, sounding incredibly horny.\n\nListening intently, he could hear two sets of hurried footsteps approaching along the corridor towards him. He sat up to greet them and Helene rushed into the room a couple of seconds later, her pretty face alight with anticipation. \n\n\"Alyssa said you were ready for me again!\" she gasped breathlessly, eyes locked on his face. She unfastened her tunic and shrugged out of her clothes, climbing onto the bed before John even had a chance to answer. She suddenly froze when she realised he had company, looking at Jehanna in alarm. \"I'm so sorry for intruding! I didn't know you were still with him!\"\n\n\"It's okay,\" Alyssa said soothingly, putting her arm around the embarrassed girl. \"Jehanna actually wanted to ask you a favour...\"\n\n\"You did?\" Helene asked, eyebrows climbing in surprise.\n\nJehanna nodded, sitting up and giving her a friendly smile. \"I was wondering if it would be alright for me to watch you and John together? I don't remember my last time with him, so I wanted to see what it was like. The thought of John feeding you is really exciting...\"\n\nHelene relaxed and returned her smile. \"I know what you mean. I can't wait until we're connected forever, then he can give me a baby...\"\n\n\"So is that a 'yes' then?\" the dusky girl asked, a gleam in her eyes.\n\n\"Hold on,\" Alyssa said, raising her hand in protest. When everyone looked her way, she smiled at Jehanna and continued, \"If you want to watch, perhaps you should show Helene just how much you want to stay... with a kiss perhaps?\"\n\n\"That sounds like a lovely idea,\" the dark-skinned girl murmured, her eyes drawn to Helene's lush cupid-bow lips. \n\nAlyssa playfully trailed her fingers up Helene's back. \"What do you think, beautiful? Would you like a kiss from Jehanna?\"\n\nHelene met Jehanna's curious gaze and gave her a shy smile. \"If she doesn't mind...\" She darted a quick glance at John to check he was okay with everything, then relaxed when he gave her an encouraging grin. Her baby-blue eyes darted back to Jehanna again. \"In fact, I'd love to kiss her.\"\n\nMoving a little awkwardly with the extra weight of her cum-filled belly, Jehanna approached Helene, then knelt just a few inches away. \"Us new girls should stick together...\" she said coyly.\n\nThe two girls were tentative at first, just brushing their hands over each other's arms as they drew closer. After that initial touch, they leaned in, their eyes hooded as they began with a gentle exploratory kiss. John watched them in fascination as they got more confident, the kiss deepening when they relaxed in each other's arms. He found the contrast between Jehanna's dusky brown skin and Helene's teal hues wildly erotic, his body reacting to the thrilling sight.\n\n*As hot as you thought they'd be together?* Alyssa asked him, a teasing lilt to her voice.\n\n*Even better in the flesh,* John replied enthusiastically, running his fingers along both girls' arms, enjoying the velvety-smooth feel of their skin. They paused to glance his way when they felt his touch, but he gave them an encouraging smile. \"Don't let me interrupt you...\"\n\nThey shared a sultry smile with each other, then continued from where they left off, snuggling closer as the kiss deepened. John traced his fingers along their slender shoulders, then followed the graceful lines of their necks until he was gently cupping both of their heads. He ran his left hand through Jehanna's silky raven hair and tousled Helene's lustrous light-green mane with his right, both girls moaning as they revelled in his obvious approval.\n\nWhen they finally parted, both girls quickly turned to face him, falling into his arms. John kissed each of them, then switched to Jehanna a second time, at which point Helene bent at the waist to smoothly engulf his cock with her hot little mouth. He groaned as he felt her take his length into her throat, her flushed lips sliding down his shaft until they reached the base. \n\n\"We should recruit in pairs more often...\" Alyssa whispered, kneeling beside him and stroking Helene as she bobbed in his lap. \n\nThe snug wet warmth felt exquisite as the aquatic girl stroked back and forth, her tongue gliding along his whole length every time she hilted him in her throat. He groaned appreciatively, feeling his orgasm building as she worked him with a steady rhythm. \n\nJehanna pulled back, her eyes narrowing with lust as she heard his breathing grow unsteady. \"You're getting close, aren't you?\"\n\nHe could only nod distractedly, his focus entirely on Helene and the wet sound of his cock sliding in and out of her mouth.\n\n\"He's going to make her huge with his cum, round out her belly with his load,\" Alyssa purred, making eye-contact with the sultry reporter. \"Just like you...\"\n\nJehanna groaned and slid her fingers into her soaked pussy, stroking herself in time with Helene's bobbing head. Following her lead, Alyssa copied her, and soon the room echoed with soft feminine gasps and cries of pleasure.\n\nJohn put his arms around Jehanna and Alyssa, holding them tight as he exploded with his release, the girls squealing as they joined him. They could all hear Helene swallowing repeatedly, responding with a reflexive suckling as he pumped his load into her stomach. Jehanna reached down to carefully cup his balls, feeling them flexing as they emptied their cargo into the prostrate girl before him. When he had finally finished, Helene eased back, letting his slick cock slide out of her throat. She sat up with a blissful expression on her face, those baby-blue eyes dazed and unfocused as she cradled her engorged belly with both hands. \n\n\"I can't believe how sexy that was,\" Jehanna panted, tentatively reaching out to trace her fingertips over the mermaid's tautly stretched skin. \"She's stuffed full of your cum!\" \n\n\"You both are,\" John said with a satisfied grin, running his left hand over Jehanna's curved midriff and caressing Helene with his right.\n\nWith Alyssa's help, they settled Helene in bed, so that her head was resting on John's shoulder. As soon as she was settled, the blonde spooned up behind her, wrapping her arms around the smaller girl. With a happy sigh, Helene fell fast asleep, her body starting to absorb the huge meal in her stomach. \n\nJehanna lay down beside John, snuggling closer and resting against him as she studied her teal-skinned counterpart. \"I never would have imagined that I'd end up in a harem,\" she murmured, reaching out to stroke the girl on the opposite side of his broad chest. \"Let alone the fact that I love it. Helene's so sweet and absolutely gorgeous...\"\n\n\"You really do have a taste for the exotic, don't you?\" John gently teased her, stroking her back. \n\n\"Is that due to your influence?\" Jehanna asked him curiously, without any judgement in her eyes.\n\n\"I didn't consciously make any changes. You were already bisexual, so I don't think I made any difference there either.\" John studied her calm expression for a moment. \"You don't seem surprised...\"\n\nShe gave him a tender kiss, looking up at him with her big dark eyes. \"I already knew I was a xenophile after falling for you... and you have surrounded yourself with the most beautiful women I've ever seen.\" Brushing her fingers through Helene's hair, she continued, \"What are you planning to do about her people? Tashana said the Abandoned are slaves to the Brimorians...\"\n\n\"Free them, obviously,\" John replied, glancing down at the slumbering girl. \"I just need to hammer out the finer details of that plan.\"\n\n\"I know you'll do the right thing,\" Jehanna said, hugging him tight. \"You always do...\"\n\nShe stifled a yawn, then settled down for the night, her breathing deepening as she fell into a restful slumber. The girls started appearing shortly afterwards, joining them in bed and quickly dropping off to sleep. \n\nJohn glanced at Alyssa over Helene's shoulder and raised an eyebrow. *We're missing Dana, Rachel, and Tashana... Are they all okay?*\n\n*Relax, they're fine. Get some sleep, you've got a long day ahead of you tomorrow,* she replied with a loving smile, blowing him a kiss.\n\n***\n\nLieutenant Commander Thomas Walker leaned against the packed bar, waiting for the barman to finish serving the pretty redhead row after row of drinks. He sighed and couldn't help laughing at his misfortune. The old saying was true: never a good deed goes unpunished... he had arrived at the same time as the young Lieutenant and had politely let her go first, only for her to order a huge number of shots for the big party she was with. \n\nWhile he was waiting to be served by one of the frantically busy bar staff, he glanced around the Officers' Lounge, nodding and smiling whenever he made eye-contact with his friends. Normally this bar was quiet and reserved, a great place to go for a pleasant drink with the rest of the officers aboard the heavy carrier Janus. Tonight the place was heaving, reminding him of one of the raucous crew bars, with excited chatter, laughter, and cheering filling the place with life.\n\nThey'd all seen the dreadful footage broadcast from Terra, with the Kintark's heinous bombardment of Unity City, their assault on the Citadel, and the scenes of destruction in the fleet battle. Tom had felt the same sense of despair as every other crewman, wondering if this was the end of everything they held dear. Then the Lion and his Lionesses had arrived, like mythical heroes in their gleaming white armour. He'd been on the edge of his seat as he watched the Lion duel the Kintark Emperor, and had joined the rousing cheers when the dragon had been slain and the Imperial forces crushed.\n\nIt seemed that everyone was out celebrating the huge victory tonight, all that is except one man, who sat quietly and alone in the corner of the Officers' Lounge. Commander Mason Newmont stared at the empty glass he held in his hand, swirling the melting ice cubes around the tumbler with a listless rocking motion. It was like Tom's friend was surrounded by an aura of sadness, and the revellers gave him a wide berth, leaving him to his grief.\n\n\"Hey, Tom!\" a friendly female voice called out from behind the bar, loud enough to be heard over the celebrations. \"Sorry for the wait...\"\n\nHe turned around and smiled at the grinning brunette. \"Hey, Beth. Yeah, this place is a madhouse tonight!\"\n\nShe brushed a strand of hair away from her eyes and pouted playfully. \"I wish I was out celebrating... why did the Lion have to save Terra when I'm on duty!\"\n\nTom shook his head, a mock frown on his face. \"The guy's so inconsiderate...\" \n\nBeth laughed and nodded. \"So what'll it be? The usual?\"\n\nHe glanced over his shoulder at Mason, then turned back to see that Beth was now staring at his friend, a look of sympathy on her pretty face. "
    ],
    "authorname": "Tefler",
    "tags": [
        "blowjob",
        "cum inflation",
        "swallow",
        "deep throat",
        "psychic",
        "alien",
        "new recruits"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-103"
}