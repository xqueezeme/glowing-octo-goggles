{
    "title": "Sliding Into Home",
    "pages": [
        "Boston MA, September:\n\nMy cleats made that wonderful 'clickety-clack' noise as I climbed the stairs of the dugout and made my way to the on deck circle. It was a cool day at Fenway Park in the afternoon fall sunshine for the final instalment of the 162 game MLB season. For both of the teams the season was drawing to a close. Neither the Red Sox, nor ourselves the Rays, were featuring in the post season.\n\nAs I stood there taking a few warmup swings my mind wandered a little. Not only was this the final game of the season, but for me it was my final game. At 37 years of age and 11 seasons in the Majors, I had decided it was time to retire. Thoughts of my journey to get here swirled in my mind, and I smiled that I was finishing my career here in Boston. It was seeing a game at this ground that fired my imagination to play baseball as a child.\n\nMy family visited Boston while on a holiday to America when I was 9 years old, and I became addicted to baseball. Back home in Australia I started playing baseball and was fortunate I had some talent for the game. The visions of my career raced through my head; leaving home at 18 to take up a scholarship to University of California, playing in the College World Series playoffs, getting drafted in 2<sup>nd</sup> round by the Rangers, playing through their minor league teams in North Carolina, and throughout Texas. Making my big league debut down there, my first home run, 4 seasons down there, traded to Minnesota for 3 seasons, the very weird 3 way trade deal that brought me to Boston, the best season and a half of my career, being traded to the Rays where I have remained for the past 2 and a half seasons. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nI was brought back to Earth when I heard our batter called out strike 3 at the plate. Looking across at the scoreboard I could see that the game was all but over; Down 8-0, 2 out, in the top of the ninth. The ground announcer called \"Now batting Number 25, Third baseman, Adam Maxwell.\"\n\nI went around to the right hand side of the plate, took my stance like I had done thousands of times before, and looked toward the pitcher.\n\nHernandez's first pitch was high and inside, wanting to impose himself a little into the contest, as he always did. I just smiled. Second caught the inside corner, one and one the count. Knowing his pitching I just knew that the next would be outside half going further away. The pitch came just where I expected it to. Swinging the bat I caught a reasonable piece of the ball, hitting it between 3<sup>rd</sup> and short into left field. I scampered up the base line, turning at first before stopping and going back to the base. The left outfielder already had the ball in the air towards shortstop, cutting off the throw.\n\nOur first base coach Tim came across and I handed him my elbow and ankle guards.\n\n\"Nice hit Adam. 2 for the day, good job. Finishing your career with a hit, just like you started it.\" He said as he patted me on the back.\n\n\"Thanks mate.\" I replied with a smile.\n\nRed Sox first baseman Martinez heard our conversation.\n\n\"You retiring 'Maxy'?\"\n\n\"Yeah 'Rique. Time to hang up the cleats.\"\n\nHe reached out his hand and shook mine.\n\n\"Well done my friend. Been great playing against you.\" He said with sincerity.\n\n\"Thank you. It's been great.\" I replied with a smile, shaking his hand.\n\nThe game went on and I took my lead off from first base. Our next batter, Jansen, got hold of the first pitch and launched it into the Red Sox bullpen for a home run. As I trotted around the bases I really took it all in. I touched home plate and waited for Jansen to complete his home run. We bumped arms and did the overly convoluted team handshake before heading to the dugout.\n\nTurning around I took one last look around to take it all in. Walking back to the dugout I took of my batting glove. I saw a young fan standing near our dugout, so I threw the glove to her. She had the biggest smile and said thank you as she caught it. High fives, fist bumps and handshakes were the order of the day as I made my way through my teammates in the dugout to my seat.\n\nI barely had time to sit down when our next batter was caught in the outfield. With that, the game was over. I took a deep breath and sighed. My 11 season Major League career was over. I had now officially retired. After the game everything was a blur. I did the post-game press conference along with the manager. I spoke of how lucky I was to have had a career as long as I did in the Major's and thanked the organisations I'd played for. I also mentioned how I was looking forward to heading home to Australia after 19 years living overseas.\n\nBack in the clubhouse there was lots of hugs and congratulations from my team mates. While we hadn't had the most successful seasons since I'd been there, I still had plenty of friends in the group. About half of the team were catching a flight back to Tampa that night. I was staying a night in Boston to catch up with friends that evening and the next day. I was then flying back to Tampa to start packing for the trip home.\n\nReturning to my locker there were two bottles of champagne waiting for me. One was from the Rays, thanking me for my contributions to the organisation. The other was from the Red Sox. In the note they congratulated me on my career and thanked me for my time playing with their organisation. Then curiously there was something else. The note asked if I was free to see the Operations Manager of Red Sox Baseball the following day at 10:30am. My curiosity was well and truly piqued. I rang the number mentioned on the note and confirmed I could make the meeting the following day.\n\nAfter a good night out with friends and team mates, I headed back to Fenway the following morning for the meeting. Chief Operating Manager Ben and Head of Scouting Mike invited me in, and we sat together in Ben's office. We chatted about my career and the various organisations I played for. They confirmed that when I was traded from the Sox it wasn't because they didn't want me in the club, but to get the player they required they had to trade someone of value. They asked what I was doing when I returned to Australia. I had no plans at that stage, other than to finally be able to live in my house I had purchased in North West Sydney.\n\nThey went on to explain the reason for the meeting. Major League Baseball had bought the top tier Australian baseball competition, the Australian Baseball League (ABL). They were expanding the competition to eight teams and the bigger MLB clubs were having an affiliate team in the ABL. The Red Sox were now affiliated with the Sydney Blue Sox. Mike and Ben were interested to see if I wanted to play for them and act as a scout spotting talent for them.\n\nEverything they presented sounded good to me. The season was short, only 3 months, December, January and February. Prospects from the Major League club would be playing with the team, along with local Australian talent. Experienced Boston coach Tim Beaufort was going to be the manager for at least the first season. They wanted an experienced big leaguer to lead the team and the fact that I was Australian was even better. The financial package they offered was also quite lucrative.\n\nI signed right there for one season with an option for a second season as a player. If I didn't want to continue playing after the first season there were options to just scout, or possibly even manage the team at a future date. I told them I was heading back to Sydney the following week. They said the team would gather in November for a December season start.\n\nI had been retired less than 24 hours and was now a ball player again.\n\n***********\n\nSydney, NSW, Australia, Late January\n\nAnother game had finished for the Blue Sox as we beat the Brisbane Bandits 7-3 at home in Blacktown. The team had gelled quite well and we looked like we were heading to the playoffs. It appeared as though we were going to be playing against the Melbourne Victorians in the playoffs. They were one of the new teams in the league and were backed by the Yankees. So it was a promoters dream having the classic Sox- Yankees rivalry from the Majors infiltrating the ABL.\n\nThe games were of good quality, probably AA ball back in the States. I was hitting well and my defence was effective. After so many years in the big leagues, the pitching did seem a little easier to hit. The biggest culture shock for me was the crowds. Not the enthusiasm, as our fans were passionate and loyal to our team. It was just the sheer numbers. At Tampa we played in front of 15000 people per game, at Boston it was nearly 35000 a game. In Sydney it was closer to 1500 people. These numbers were up considerably since the new MLB backed ABL started this season.\n\nAs players we did lots of work to engage with the fans. Coaching clinics, school visits, fan days were all part of our season. Given that our games only took place on Friday, Saturday and Sunday, with an occasional mid-week game, these extra duties were easily accommodated. Even after games we stayed and signed autographs for the fans.\n\nThis Sunday afternoon, five of us were sitting at the table in front of our home dugout as our fans lined up for autographs. I was at the end of the table after some of our younger, popular players; Franco, Raphael, Jackson and Jared Mansell. There was a good line of people waiting for our autographs.\n\nAs the line was dwindling down, I noticed a young woman joining the end of the queue. As I finished signing for another fan, I looked across and could see her with Franco. She was a beautiful girl, about 5'7\" tall, long dark hair, lovely face, attractive smile, shapely but fit body. She was wearing a Red Sox Jersey\n\nAs she came to me a big smile appeared on her face, more than when she had interacted with the other players.\n\n\"Hi. How are you going today?\" I asked as I always did.\n\n\"Oh, very good thanks. I can't believe I am finally meeting you Adam. I have been a fan of yours for such a long time.\" She replied, sounding very excited.\n\n\"Well thank you. It is always nice to meet a fan.\" I replied feeling a little surprised.\n\nI went to sign her program and she said \"Can you please make it out to Jessica. That's me.\"\n\nI signed her program and Jessica was absolutely beaming. Handing her the book back she then asked \"Would you mind if I took a picture of us together?\"\n\n\"No not at all.\" I replied. \"Come around here and we will get a good shot.\"\n\nJessica came around and we moved together and she took a selfie of us with her phone. Jared then piped up and offered to take a picture of the two of us. Jessica thanked him as she handed him her phone. He took a better picture of the two of us together. Having Jessica close to me as we took the picture I could smell her delicate perfume. Her face was so pretty and her eyes were a mesmerising blue green. Jessica was so attractive, but there was something else about her, something I couldn't put my finger on.\n\nAfter taking the pictures, Jessica thanked Jared and thanked me again. She put her phone back into her pocket and reached out to shake my hand. As we shook hands, she placed a small piece of paper in my hand saying \"It's great to finally meet you Adam. Thanks again.\"\n\nShe then walked off to join her friends that were waiting for her. I watched her walking away, noticing the wiggle in her walk and how well she filled her jeans. Looking up I noticed her Red Sox jersey had 'Maxwell' on the back and my number 25.\n\nI looked at the piece of paper.\n\n'I would love to talk with you properly sometime. Please give me a call. Jessica.'\n\nIt then had her phone number on it. I looked up and saw Jessica looking at me. She smiled and waved at me. I waved back, slightly awkwardly, smiling at her.\n\nJared and Franco both saw this exchange and proceeded to give me grief about having a 'groupie'. It had been a long time since a girl had just given me her number like that. It was very flattering, as Jessica was a very attractive girl and to have her show interest in me was great for the ego. I laughed at their good natured teasing as we packed up before heading to the clubhouse.\n\nAs I changed out of my uniform into my civilian clothes I looked at myself in the mirror. Even though I was older than the other players, I still looked alright at 37. I was 5'9\" tall, full head of dark hair (even though it was cut short at the moment), green eyes and still fit. I was single and to have female attention like that was great.\n\nDriving home that night I thought about our upcoming schedule for the week. We had recovery and training tomorrow. This was to be followed by morning training sessions Tuesday, Wednesday and Thursday until flying to Adelaide Friday morning. We would be down there for a Saturday night, Sunday afternoon series. Putting my hand into my pocket, I found the piece of paper Jessica had given me.\n\nSitting down on my lounge I flicked on the TV and looked at the piece of paper. I almost analysed all of the words written there, as well as going over the events of meeting her. There was just something about her that really fascinated me. I could not get her out of my mind. I decided to throw caution to the wind and dialled the number. My heart was pounding.\n\n\"Hello Jessica speaking.\"\n\n\"Hi Jessica, it's Adam Maxwell. We met today at the game.\"\n\n\"Oh, hi Adam. How are you? You played so well today. Oooh, I can't believe you actually rang me.\" Jessica replied. She sounded so excited.\n\n\"Yes it was a good day. I was... Intrigued when you gave me your number, so I decided to ring you and say hello.\"\n\n\"Oh Adam, that is so nice. Thank you for calling. I was so nervous giving you my number. I haven't ever done 'that' before. I didn't think that you would call me.\"\n\nWe spoke for a few minutes when I said to Jessica that I was in Sydney until Friday. I then asked if she'd like to get together for a coffee. Jessica immediately said yes and we worked out where to meet. She had just moved to Sydney University and was living on campus. We arranged to meet at a caf\u00e9 near there on Tuesday afternoon at 2pm.\n\nWe spoke for a little longer, before saying our goodbyes. I surprised myself that I had done this, but I was so happy that I did. Having been single for the past 4 years had affected my confidence with women. However speaking with Jessica on the phone made me want to know her better, and I couldn't wait for Tuesday.\n\n*******\n\nTuesday afternoon found me walking up to the caf\u00e9 we spoke about. I was a few minutes early and I was very surprised to see Jessica already waiting for me. She had the biggest smile on her face when she saw me come in. I walked over to the table where she stood up and gave me a hug. This surprised me, but I joined in.\n\nMoving apart, I could see Jessica was wearing nice jeans, flat shoes and a University t-shirt. In her flat shoes she was shorter than at the game, about 5'5\". She wasn't as 'made up' as at the game either. I could see a light smattering of freckles across her nose, her blue green eyes were still mesmerising and her smile captivating.\n\nI went and ordered us coffees, and we sat down to talk. She amazed me with how much she knew about my baseball career. She really was a big fan. I found out a little about her as well. Jessica was 18 and starting her first year of Uni. She was studying Journalism and was living away from home for the first time. The more we talked, the better we seemed to get along.\n\nWhile talking I mentioned how nice it was to meet her at the game. Jessica shifted in her chair and started to look like she wanted to say something.\n\n\"Ummm, Adam, Sunday wasn't the first time we met............ We met many years ago actually.\"\n\n\"Really?\" I said somewhat dumbfounded, wracking my brain as to when I would have met her.\n\nJessica reached into her bag and she pulled out what looked to be an old photo. She looked really nervous as she started to hand it over to me.\n\n\"Yes we met when I was very young. I believe you know my Mum.\"\n\nLooking at the photo I couldn't believe my eyes. There I was looking very young and standing next to me was my best friend from childhood Fiona Sterling and in her arms was a toddler girl.\n\n\"You're........ Fiona's daughter.\" I said barely stringing the words together.\n\n\"Yes I am.\" Jessica said with a nervous look on her face. \"And......... ummmm......... Adam........ I think you........ Might be my father.\"\n\nI could feel the colour draining from my face. My mind was a jumble of thoughts. I couldn't believe it.\n\nFiona Sterling was my best friend growing up. Her family lived just up the street from our house and Fiona and I were in the same classes in at school. We did everything together. She blossomed into a beautiful young woman. Fiona was 5'5\" tall, long caramel hair, curvy, busty and great legs. She would often come to my ball games and cheer me on, and I would go and watch her play sport and dance as well. I couldn't have asked for a better friend.\n\nWe had never been romantically involved as we were too close as friends to have a romance. We both dated other people and even helped organise dates for each other. But the last night before I went to America to go to University.......\n\n\"But.... But your mother was with...... Paul at the time...... You are his daughter.\" I stammered, trying to get the jumble of thoughts in my head out into words.\n\n\"Yes Adam. But I think that you are my father, well my biological father anyway.\"\n\nMy mind was a whirl. Jessica was 18. I was with Fiona that one time, in January before I left for California. Working out the maths I realised that it could be possible. Looking down at the picture of Fiona and me, I remembered when it was taken. It was the last time I had seen Fiona. I was home after my third year in California, and I caught up with her and her fianc\u00e9 Paul while we were all visiting our respective parents. I remember Fi specifically asking for Paul to take a picture of her and me together while she was holding her daughter.\n\nLooking back up at Jessica, I could now see what it was that I couldn't work out about her. She had so many of her mother's features, but some that appeared to be mine as well. Her hair was dark like mine, her eyes a real mix of blue and green, combining both Fiona's and mine. Jessica's face was shaped like her mother and she even had freckles like her mother did.\n\nJessica looked really worried, and I wasn't exactly feeling great.\n\n\"Adam, are you ok?\" she asked.\n\n\"I'm shocked Jessica....... This is all a bit hard to take........ When.......... How........... Ummm........ Why do you think I'm your father?\"\n\nJessica began to speak \"As I grew up I had my doubts about where I came from. I looked like Mum most, but I had none of my father's characteristics. Dad was tall 6'2\", light brown hair, brown eyes, olive skin and I have none of these features.\"\n\nI sat there trying to absorb this, but nodding my head as I remembered that was what Paul looked like.\n\n\"Anyway Dad passed away about 5 years ago from cancer.\"\n\n\"Oh Jessica I'm so sorry.\"\n\n\"Thank you Adam........ At the time they were looking for blood donors to try and help Dad. I was only 13 at the time, but I offered to donate. The hospital took my blood, but I was told some time a little later that my blood wasn't compatible........... Mum reassured me that this was often the case. I remembered seeing Dad's blood type as 'O'. I knew Mum's was 'A' but I didn't know mine. When I moved here for Uni I had to get a blood test for some insurance or something. I found out that my blood type is 'AB'.\"\n\nI spoke quietly. \"I have B type blood.\"\n\nJessica had a big smile on her face. \"Really Adam?\"\n\n\"Yes.......... What does your mum have to say about this? You must have asked her about this?\"\n\n\"I did, after Dad died. Mum just laughed it off and assured me I was their daughter. I still had my doubts, as Mum followed your baseball career almost obsessively. I became a fan of yours through her. Seeing your pictures and footage over the internet and games on TV, I became more and more convinced that you were my father.\"",
        "Just then Jessica's phone rang. She excused herself to take the call, and I was left to try and comprehend what had just happened. It appeared as though I had gotten Fiona pregnant just over 19 years ago and Jessica was my daughter.\n\nI was still trying to get these thoughts into my brain when Jessica came over and very apologetically said she had to leave to go to work.\n\n\"But Jessica, I still have so many questions.\"\n\n\"I'm so sorry Adam, but I have to go. I will ring you tonight when I am finished....... I'm sorry for throwing all of this onto you and having to leave. I will talk to you tonight. I promise.\"\n\nI stood up, and Jessica gave me a hug. I held her close to me for a few precious seconds before we moved apart. The look on Jessica's face showed how much this all meant to her. Looking at her I was actually seeing my daughter. We moved apart, and she left the caf\u00e9.\n\nI sat back down and took a deep breath. Sitting on the table in front of me was the picture that was taken all those years ago. Looking at the picture, Fiona and I both looked so young. I couldn't get over that she had brought up such a smart, clever, intuitive, resourceful girl. I just had to speak to her and get to the bottom of this once and for all.\n\nI spent the rest of the afternoon trying to come to terms with this. My mind went back to that night before I left home........\n\nEverything changed between Fiona and I on my last day before going overseas. We spent the whole day together. It felt really different between us, as we both knew we wouldn't be seeing each other for a long time. We walked hand in hand and cuddled up close at every opportunity, which was totally unlike us. As night fell we had dinner together, before driving to the headland overlooking our local beach.\n\nSitting there in my old second hand car, Fiona and I cuddled up close and told each other how much we would miss each other. Looking into her beautiful blue eyes just melted my heart. Fiona held my gaze and leaned in towards me. I did the same and we kissed for the first time. We pulled apart after a moment. My eyes opened and so did Fiona's. We both smiled and leaned in again. Our kisses became passionate, desperate, wanting each other.\n\nSoon we moved into the back seat of the car. Our embraces and caresses moved into full blown love making. We made love in the most passionate experience I had experienced. I completely enjoyed Fiona's beautiful curvy body. We shared everything with each other and had the most amazing time together. We spent the night together in the back of my car, sleeping snuggled together under a blanket, waking as the sun came up.\n\nSaying goodbye as I dropped Fiona back at her home was the hardest thing I had ever done. We hugged and kissed, tears being held back. We promised to keep in touch. Watching Fiona as I drove away, seeing the tears pour down her face, I truly knew what heartbreak felt like.\n\nFiona moved to Newcastle for University and early in that first year she fell for a fellow student, Paul. They became engaged quite quickly and married and had their daughter soon after. We kept in touch through emails of course. The last time I saw them all was when I had a flying visit home after my third year away. Our lives gradually moved apart and we lost touch. They were still living in Newcastle the last time I had heard about them.\n\nMy thoughts were dragged back to reality a little after 9pm when my phone rang. I could see that it was Jessica's number.\n\n\"Hi Jessica. How was work today?\"\n\n\"Hi Adam. It was okay, thanks for asking. Ummm......... Adam, how are you?\"\n\n\"I'm ok. It has been a big day for me. I started out going to meet a fan and ended up with....... Potentially a daughter.\"\n\nJessica giggled a little as I said this.\n\n\"Jessica, I have to see your Mum. I need to talk to her....... I have wanted to catch up with her since I have been back in Australia, but didn't know where she was. I can't even remember her married name.\"\n\n\"It's Jones by the way. And yes we should go and see Mum together. I need to talk to her about this. Find out once and for all.\"\n\n\"Yes Jessica. You and me both.\"\n\nWe arranged to travel together to Newcastle on Thursday. Jessica was going home for the weekend and I agreed to take her home so I could see Fiona again. Jessica and I arranged a time to meet on Thursday morning at her College at the University and said our goodnights.\n\nThat night curiosity got the better of me and I went on the internet and tried to look up Fiona. I couldn't find anything much about her, but I did find that there was a Fiona Jones that ran the Newcastle branch of a nationwide chain of clothing stores.\n\nFalling asleep that night was difficult as my mind raced. Jessica could be my daughter. Why hadn't Fiona told me? What was going to happen now? Would Fiona even want to see me? I eventually drifted off to sleep.\n\n*************\n\nThursday arrived and at 11am I was waiting out the front of Jessica's residence at Sydney University. She came out looking all casual Uni student, saying goodbye to her friends. When she saw me a big smile came over her face as she bounded over and gave me a hug. I loaded her bag into the boot of my car and we headed out on the trip 3 hours north.\n\nAs we talked in the car, I was amazed at how well I got along with Jessica, and how much of a wonderful person she was. We talked about a lot of things and she even made fun of my car and my driving.\n\n\"I thought you were an athlete. Can't you go any faster.\" She said with a laugh.\n\n\"I only speed around the bases, never on public roads...... When I was young and driving with your mother, she always used to say to me...\"\n\nThen we both said together \"Slow down. You're going too fast. Are you trying to kill me!!!?\"\n\nJessica and I both looked at each other and laughed at this.\n\nWhen the laughter faded away I asked \"So Jessica, what did Fiona say when you told her I was visiting with you today?\"\n\nJessica looked out of the car window. \"Hey Adam, did you see that Porsche that just went past the other way. Was it a 911?\"\n\n\"Jessica, you did tell her I was coming didn't you?\"\n\nJessica turned and looked towards me with a real guilty look on her face.\n\n\"Fiona doesn't know I'm coming?\"\n\n\"No Adam, I thought it would be a great surprise.\" Jessica said, a little nervously.\n\nI was disappointed by this. \"So what is your plan? To show up on the doorstep and say 'Hi Mum, look I brought my father home.'\"\n\n\"No Adam, not at all. I didn't tell Mum as she might not like the idea. I have worked out what I want to do though.\"\n\nJessica then ran through what we were going to do when we arrived. I wasn't sure that it was a great idea, but we didn't have any other options at this stage.\n\nWe arrived at Fiona's house a little after 2pm. Jessica directed me to park in front of the next door neighbour's house so Fiona wouldn't look out of the window and see me coming.\n\nI retrieved Jessica's bag from the back of the car and we made our way to the front door. The house was an older style, very nice suburban home in one of Newcastle's suburbs. It was neat and tidy and the gardens were beautiful.\n\nJessica knocked on the screen door and yelled \"Mum I'm home.\"\n\nI stood just to the side, out of the view from the front door. I could hear Fiona coming down to the front door.\n\n\"Oh Jess it is great to see you. Haven't you got your key? You could've just come in.\" Fiona said. Hearing her voice brought a smile to my face. She sounded just like she did when we were young.\n\n\"Mum, I have brought a friend home with me. Is that ok?\" Jessica said.\n\n\"I wish you had let me know Jess. But it is alright.\" Fiona replied as she unlocked and opened the screen door.\n\nAs Fiona did this Jessica grasped my hand and pulled me around into sight.\n\n\"Hi Fiona.\" I said feeling slightly embarrassed at surprising her like this.\n\nI could see Fiona's face change as she recognised me. She beamed her beautiful smile directly at me, just like she used to.\n\n\"Oh my god, is it really you Adam?\" She said, her voice quivering a little.\n\n\"Yes it is Fi.....\" I replied as Fiona came forward and wrapped her arms around me. I did the same and we hugged each other really tightly. Fiona had her face buried into my shoulder. As we moved apart slightly I looked down and could see a few tears in her eyes.\n\n\"I can't believe it. You're back and I am seeing you again....... Come in, come in.\" Fiona said as she took my hand and led me into the house.\n\nWe all moved into the lounge room. Fiona directed me to sit on the couch and she sat down next to me. Jessica sat in an armchair opposite us. Looking across I could see Fiona beaming at me. She looked great and I was trying to take this all in. Her hair was still a beautiful caramel colour, shoulder length. Her smile was still entrancing and her blue eyes sparkled. She looked a little 'softer' in the middle than when we were young, but who wasn't.\n\nFiona reached out and squeezed my hand as we spoke a little about how Jessica and I met at the game on the weekend. I told Fiona that when I realised Jessica was her daughter I wanted to come and see her. Things were going well, but I noticed Jessica was starting to look a little anxious. In a lull in the conversation Jessica spoke up.\n\n\"Mum, when I caught up with Adam after the game we spoke for a long time, talking about a lot of things.\" As she said this, I noticed Fiona stiffen in her seat and begin to look nervous.\n\nJessica continued \"As we chatted I showed Adam that photo of you, me and him together when I was a toddler and....... I told Adam......... that I......... thought that he........ Is my father.\"\n\nI looked back from Jessica towards Fiona and I could see tears starting to run down her face. Her beautiful face creased up as she started to cry. Seeing her like that took me right back to the day I left for California seeing her cry as we said goodbye.\n\nFiona was now crying, with her head slumped down. She stood up and left the room, sobbing. Jessica was looking upset in the chair across from me. She just looked at me. I motioned to her to go and find Fiona and be with her. Jessica got up and went to find her mum. I heard her knock on her Mum's door and go into her room. There were more tears and muffled conversations I couldn't make out.\n\nI was there in the lounge room, not really knowing what to do. To be honest I was actually in shock. It seemed as though everything Jessica had surmised appeared to be true. I felt really bad seeing Fiona so upset. A small part of me was upset, possibly angry. Why hadn't she told me about this before?\n\nLooking around the lounge room I could see photos of Fiona, Paul and Jessica from various stages of their lives. It was obvious they were a happy family. There were fewer photos as a family as Jessica got older. Then there were pictures of Jessica just with Fiona.\n\nI don't know how long I was there by myself, but I heard movement in the house and what sounded like the back door opening. I turned around and Jessica was standing there, looking like she had cried a thousand tears. She smiled weakly at me and said \"Mum would like to see you Adam.\" She motioned me to follow her.\n\nWe went through the house out to the kitchen, where Jessica guided me to the back door. I could see Fiona outside on the patio, her back to the door, looking out towards the back of the yard. I opened the door and at the sound of the door opening Fiona turned to look at me. I stepped out and could see that her face was stained with tears and she looked really worried.\n\nI walked to her and she looked me in the eye, before dropping her head down.\n\n\"I'm so sorry Adam.\" Fiona said, sounding as deflated as she looked.\n\nI went up to her and put my arms around her and held her close. After a few moments her arms went around me too.\n\n\"I'm so sorry Adam that I never told you about Jessica.\" Fiona said, her voice slightly muffled from her face against my shoulder.\n\nI tried to think of the most consoling thing to say, but it was difficult. \"It's history Fi. We can't change it. Please don't be upset.\" I said.\n\nFiona held me for a little longer before she snuffled and said \"But I thought you'd be mad at me when you found out.\"\n\nWe pulled apart and I looked at Fiona. \"I was......... very surprised when Jessica told me she thought I was her father. I still am a very surprised........... I'm in shock actually and very confused. Confused yes. That's it, confused....... You must have had your reasons for not telling me at the time........ Why didn't you tell me?\"\n\nFiona wiped her eyes and said \"I didn't want to ruin your chances of playing in the big leagues Adam. You would have given up on your dream and come back home to be with me. You were always the good guy and.......... I didn't want you to hate me for making you give up on your dream. So........ I never told you about Jess.\"\n\nFi was looking at me with such sadness in her eyes. It all happened so long ago. I leant down and kissed her on the forehead. We embraced again for many minutes, Fiona's sobs slowly fading away.\n\nAfter a while I quietly asked \"So is Jessica happy now that she knows I am her father?\"\n\n\"I think she is actually in shock about it. We both are a little.\"\n\n\"That makes three of us.\"\n\nFiona and I held each other close. Holding her in my arms again felt great, even under these very strange circumstances. I didn't feel mad at her. I just couldn't believe that she did this so I could play ball overseas and chase my dream. I felt numb.\n\nAfter a little while I said \"Come on Fi. Let's go and see if Jessica is alright.\"\n\nWe went inside and found Jessica in her room, lying on her bed, looking at the old picture of her as a toddler with her mother and me.\n\n\"Jessica, can I come in?\"\n\n\"Yes Adam.\"\n\nI sat on the edge of her bed and Jessica moved to sit next to me. The expression on her face was difficult to read.\n\n\"Are you ok?\"\n\nJessica took a deep breath.\n\n\"I think so.\" She turned and smiled at me, and then towards her mother who was standing in the doorway.\n\nShe moved off the bed and went to her mother. They embraced again, as only mothers and daughters can. After a few moments Jessica turned and looked at me. She motioned me over with her arm.\n\n\"Come on Adam.... Dad....\" She smiled.\n\nI went over and hugged the two of them. As I did I started to cry. The emotion of everything finally hit me. I had a daughter. Fiona and I had a daughter.\n\nFiona and Jessica both comforted me as the enormity of the situation washed over me. I didn't know what to do. I wiped my eyes and moved out of their embrace.\n\n\"I... I need to.... Just a few minutes.... A minute......\" I babbled, not making sense.\n\nI walked out of the bedroom and out the front door. I had to walk and settle my mind. I just went out and walked. My mind was churning. I had a daughter. I had a child with Fiona. She hadn't told me.\n\nAll these thoughts bounced around my head as I walked. I didn't know how long I had walked for, but I ended up at a sporting field that appeared to be at the far end of Fiona's street. These were big fields with multiple sporting facilities. Cricket ground and practice facilities, baseball diamond, netball and basketball courts and an athletics track.\n\nIt was now late in the afternoon and the fields were a hive of activity as teams and players trained. I took a seat and unconsciously watched the goings on. My mind was whirling as the events of the last few days were trying to be sorted. I could see boys and girls training for their baseball teams, doing the drills we sometimes still do in the pros.\n\nJust then a father walked past, holding his daughter's hand. She would have been 7 or 8 and they were headed to the children's play equipment. That brought tears to my eyes seeing them together like that. I mourned not being there to share these moments with Jessica. I worried about all of the things I had missed in her life.\n\nAs I was immersed in my self-imposed misery, I saw a young man being dropped off at the diamond by his girlfriend. He would have been 17 and she looked about the same age. They both were out of the car and embraced, kissing like teenagers in love do. He trotted off to join his teammates for training. She watched as he moved away with a happy smile on her face, before getting back in the car and driving away.\n\nI instantly thought about Fiona and I. She had been to so many of my games when I was young. I too had been to many of her sporting events and dance concerts. There had been hugs of course, but never kisses. We had only been romantically together that one time and it truly awakened what had obviously been there the whole time. I missed that, that connection with someone; that connection where you have the strongest of feelings for someone. Not just physical, lustful feelings, but feelings of love and happiness. We had shared those feelings for a long time before we were physical.\n\nI stood up and began to walk back towards Fiona's home. My mind was a little more at ease. Yes I had a daughter and I wanted to get to know her. I realised I couldn't change the past. What had happened was now history. I had to make the most of this opportunity I had been given.\n\nAs my travels took me back towards Fiona's house, the skies began to darken. An afternoon summer storm was a common occurrence at this time of year. I must have been walking for nearly an hour when I finally saw my car parked just near her house. The wind had picked up and the first spits of rain were falling.\n\nApproaching the house I could see Fiona out the front waiting for me. When she saw me a big smile filled her face. It was a look I had seen a thousand times before. This time it felt great to see her smile at me like that.\n\n\"Are you ok Adam? We've been worried about you. Quick come in before the storm hits.\"\n\n\"Yes Fi. I'm ok. I just needed a little time to process everything. That's all.\" I replied smiling at my friend.\n\nBack in the house I noticed Jessica had the same worried face that her mother used to have. I smiled when I saw her and she smiled with a mixture of happiness and relief.\n\n\"I just had to process everything Jess.\"\n\nI could see that she needed a little reassurance. I went and held her hand.\n\n\"Are you sure you're ok Adam?\" Fiona asked again.\n\n\"I will be ok. It's....... getting better all the time. Just a lot to take in.\" I smiled back at her.\n\n\"I've ordered some take away for dinner as neither of us felt like..... Would you like to stay for dinner Adam?\" Fiona asked.\n\nTurning my head I looked at Jessica and could immediately see the answer she wanted me to say. I could also see what Fiona wanted.\n\n\"I'd love to stay. Thank you so much.\" The relief on their faces was palpable. \"It will give me a good chance to get to know.... My daughter.......... And reconnect with my best friend.\"\n\nFiona and Jessica both looked happy as I said this and hugged me again.\n\nThat evening we ate together and shared a bit more about our lives, in particular about Jessica. I learnt about her schooling, what she was like as a child (much to her embarrassment), the things she liked to do. As we chatted I could see the pride in Fiona's face as she talked about Jess. Everything I had thought about Jess was true. She was a wonderful young woman; smart, funny, resourceful and determined.\n\nBy the time we finished eating I looked at the time and realised it was 8pm. I had a three hour drive home that I had to make, as I had a flight to Adelaide in the morning. I reluctantly had to leave and end what had been a momentous day. We were all in a surprisingly content mood, having connected together.\n\nFiona and Jess both came outside to say goodbye to me. I went to Jess and gave her a big hug.\n\n\"Thank you Adam for believing me when I told you that I was your daughter.\" Jess whispered as we embraced.",
        "\"Thank you Jess for being the amazing person you are. I am so proud that you are my daughter.\"\n\n\"Really?\"\n\n\"Yes really.\"\n\nWe pulled apart and I said to her \"You can call me any time Jess. If you will have me, I want to be part of your life, and I want you in mine.\"\n\n\"I want you as part of my life too. I will talk to you soon Adam.\"\n\nI leant in and gave her a kiss on the cheek. Jess relaxed in my arms as I did this. As we moved apart Jess said \"I think I'll let you say goodbye to Mum by yourselves.\" She looked very happy as she headed into the house.\n\nI moved across to Fiona. \"Well this has been a big day.\" I said.\n\n\"It's been a huge day Adam. I'm so glad that you finally know.\"\n\n\"Me too Fi. Me too. We will have to keep in touch.\"\n\n\"It's so good to have you back. I've missed you.\"\n\n\"I've missed you too.\" I replied with total sincerity.\n\nWith that we exchanged phone numbers and said our goodbyes. I went to give Fi a hug, and she hugged me back. The hug felt right, just like it always did. I turned to kiss her on the cheek and she turned at the same time. I kissed her on the lips. My eyes opened, as did Fiona's and we kissed for a little longer. We laughed as we pulled apart. I leant in again and kissed Fiona on the lips for a few seconds. We both said goodbye again.\n\nAs I got to my car, I turned to Fiona and said \"I'll talk to you soon.\"\n\n\"You'd better Adam.\" Fiona replied with a big grin on her face.\n\n\"See you soon.\" I said as I drove off.\n\n**********\n\nThe following day the team flew to Adelaide and after checking into our hotel we went to the field to have a practice session. This was to stretch our legs and get used to the field for the upcoming two game series. After a couple of hours practice we went back to the hotel and cleaned up before many of us went out for dinner.\n\nThis wasn't a team dinner as our Manager liked the players to do what they wanted to do before games. Some players had room service and relaxed at the hotel, others liked to go out and have a meal. I went out with my two closest friends on the team Jared and Franco. After the events of yesterday I definitely needed to get out of my room.\n\nOur meal at a nearby pub was very enjoyable and a couple of beers went down a treat. I was still a little quiet however. I still couldn't believe I had a daughter. Seeing Fiona again was so amazing. She looked great. Her smile still grabbed me. She hadn't changed.... Just then my phone beeped with a message. It was from Fiona.\n\n'Hey Adam, Are you ok after yesterday?'\n\nThe message made me smile and lifted my mood. I excused myself from the table and went to give Fiona a call. She answered after the first ring. She sounded happy to hear from me. I told her I was doing ok and asked how Jess was doing. She said Jess was happier than she had been for a long time.\n\n\"And how are you doing Fi?\"\n\nShe took a deep breath. \"I'm good Adam. Really good....... Relieved would be the right word. Relieved to have told you at last and that you took it so well. Relieved you want to be part of Jess's life.... Also relieved you still want to talk to me.\"\n\n\"Of course I want to still talk to you. You know....... I wanted to see you when I came home but I couldn't remember your married name.\"\n\nFiona laughed. Her laugh hadn't changed and it took me back 19 years.\n\n\"Can I ask you something?\"\n\n\"Sure Adam.\"\n\n\"Are you free Tuesday.... As I'd like to take you out for dinner? Just us.\"\n\n\"Are you asking me on a date Adam Maxwell?\"\n\n\"Yes I am Fi.\" I replied.\n\n\"It took you long enough. Only 25 years.\" Fiona said with a laugh.\n\nI laughed too. \"So Fi, do you want to come out with me?\"\n\n\"I'd love to Adam.\" Fiona said with a real joy in her voice.\n\nWe arranged to go out the following Tuesday night for dinner. I had to be in Sydney next Wednesday night for a make-up game. I would come to Newcastle on Tuesday and stay the night in Newcastle, and travel back to Sydney the next morning.\n\n*******\n\nThe series against Adelaide went well, winning both games. We were on a roll now and fine tuning everything for the upcoming championship series. It was now certain we'd be playing Melbourne in the title deciding series starting in two weekend's time. I myself played well, but was a little distracted off the field. Fiona and I had started messaging and talking regularly. It felt great to be reconnecting with her.\n\nOn the Tuesday I drove to Newcastle I went and checked into a hotel, so I didn't have to drive home after our evening together. I put in a big effort getting ready for our date as we were going to a nice place and I wanted to show Fiona I was very interested in her. Showered sparkling clean, dressed as sharply as I could manage, good shirt, dress pants, good leather boots.\n\nI wanted to give Fiona something as this was our first real date. I remembered when we were younger one of her dates brought her flowers, but she said to me later that she would have rather had chocolates. I had bought some chocolates that we used to like as kids to give to her.\n\nI left the hotel and I drove out the 5kms to Fiona's house. When I arrived I was so nervous. It was right on 7, so I took a deep breath, collected the chocolates and went to the front door.\n\nFiona answered the door and she looked stunning. She was wearing a beautiful blue dress, almost matching her eyes. It was knee length, with a thin black belt around her waist. It had little cap sleeves and was cut square across her chest. The dress showed off her legs a little and they looked gorgeous. Her caramel hair was out and flowing down over her shoulders. I thought Fiona looked beautiful.\n\n\"Wow Fiona, you look amazing.\" was all that I could manage to say.\n\n\"Thanks Adam, you look great too.\" She said with a smile.\n\nI handed her the chocolates and told her why I had picked them. Fiona laughed and was amazed that I remembered that from so long ago. We then made our way out to the car.\n\nOn our way to the restaurant and once we were seated we made slightly awkward small talk about nothing in particular. Looking across the table I could see how beautiful Fiona was. I was happy that we had returned to being the two old friends that we always were.\n\nConversation began to flow. Fiona spoke of her work and I spoke of my time in America.\n\nShe then quizzed me on my life in America, particularly romantically.\n\n\"Adam, I know all about your baseball career over in America, but what else happened for you over there. Did you have many girlfriends over there before you got married?.......... I can't imagine you living like a 'monk' over there for the 19 years you were there.\" She asked seriously.\n\nI had always been honest with Fi and I was never going to change that, so I told her everything.\n\n\"Well Fi, I had three.......... real relationships while I was over there......... The first was with Bethany. She was a student at university who I had a couple of classes with. She was a beautiful, sweet girl, really funny and a nice person too. We really hit it off and were together for nearly 2 years. Baseball was taking up so much of my time....... She moved away to further her studies and we tried to do the long distance thing, but it just didn't work for us.\n\n\"The next one wasn't until I was drafted by the Rangers. I was playing high-A ball in North Carolina and I met Larissa. She was tall, dark hair, different to any of the girls I'd ever been out with. That ended when I got promoted to AA ball in Texas half way through the season. I didn't have a serious relationship for a couple of years after that.\"\n\nI looked at Fiona and could see she was listening to every word I said.\n\n\"It wasn't difficult to find..... Companionship as a ball player. Especially as I was from Australia and sounded different to everyone else....\"\n\nFiona smiled and shook her head. She reached out and took my hand.\n\n\"Then I made the Major's and concentrated on my playing as I didn't want to go back to the Minor Leagues. In my second year with the Rangers as you would know I met Kim. She had been to University in California at the same time I did. We didn't have any classes together but she knew me through the baseball games. We did have a couple of mutual friends however.\n\n\"It was great at first. We were in love. We married at the end of my third season in the majors with the Rangers.\"\n\nI hadn't spoken much about my marriage and divorce, and I was finding it difficult to find the right words.\n\n\"Kim was working as a weather girl for the local news station. She liked the job and the attention it brought her. She liked to look good and being on TV helped that. Blonde, tanned, slim, with that sunny California disposition.\"\n\n\"I know what she looked like Adam.\" Fiona said a little tersely.\n\n\"Of course....When I was traded to Minnesota she managed to get a job with one of the stations there too. We set up our house and were having a good life. Of course I was away playing ball a lot..... I started to have my suspicions she was cheating on me..... Strange phone calls that hung up immediately when I was at home, whispered calls when I was there.\n\n\"Early in my last season for the Twins we had a game washed out. I headed home early and saw a car parked in our driveway that I didn't recognise. I went and peeked in through the windows and there was Kim making out with the news anchor of the station.\"\n\n\"Oh my god Adam..... What did you do?\" Fiona gasped.\n\n\"I was devastated Fi. And so bloody angry!! I took my phone and snapped a couple of pics of them. They were completely oblivious to my being there. I wanted to catch them in the act, so I went around and blocked the back door with some garden furniture before returning to the front of the house.\n\n\"I made a bit of noise as I let myself in. Kim was half undressed and screamed as I entered the lounge room. I then heard a crash at the back door as the news guy tried to get out of the house by the back door and he couldn't get it open. I absolutely lost it at the two of them. He got away as he dived out of a window and ran to his car....\"\n\n\"Oh that was terrible.\" Fiona said quietly. Her hand held mine tight. She smiled sympathetically at me and I returned the smile.\n\n\"Do you know Fi, I still find it ironic...... The weather girl was caught out because of rain.\" I replied.\n\n\"Adam I heard you were divorced, but never the details. Surely these stories would have gotten out?\"\n\n\"No they didn't. Part of the divorce deal. She moved to another state, the lead anchor did the same, bit a different state to Kim. She got nothing from me.\" I said with a smile.\n\nFiona listened to my twisted love life with understanding.\n\n\"That is how my life worked out outside of baseball. I have been single now for over 4 years and I'm so glad to be home.\" I said.\n\nFiona then said \"I suppose I should tell you about my life then.\"\n\n\"Only if you want to tell me Fi.\"\n\n\"Adam I lived with secrets for far too long. I don't want to have any secrets from you anymore.\"\n\n\"Sounds good to me.\" I said reassuringly.\n\n\"You know I met Paul at Uni. We fell in love and got married. He was so good to me...... He looked after me so well even though he knew that Jessica wasn't his. He really did love me and Jessica and I loved him........\" Fiona paused.\n\nI had to ask her something.\n\n\"Did Paul know Jessica was my daughter?\" I asked quietly. It still felt strange to say 'my daughter'.\n\n\"He did...... I told him the truth before we got married. He had asked if you were still in my life and I honestly said no. I never expected to see you again Adam....... When you came home from University, you know when that picture of us was taken, you were so 'Americanised' I was sure you'd never come home. We chose to live like Jess was his child, our child........ Paul couldn't have children. He had a bad cycling accident when he was young. The pedal sheared off, he fell straight down and well.... You know.\"\n\nI winced at the thought of such an accident.\n\n\"He was the sweetest guy and he truly loved me. I met him in the pub where I worked part time. He doted on me when he met Jess........ He did his Uni studies, while I deferred Uni as I was raising Jess. When he finished and got a job at the hospital, I went back to Uni when Jess went to school. I ended up finishing my Commerce degree and got a job with one of the radio stations up here in the sales and marketing department.\n\n\"I was building a career and Jessica was growing up so much. Jess would have been about 9 I think when Paul first started to feel something wasn't quite right. He did all the tests......... That is when we found out how sick he actually was. He had treatment and seemed to respond........ For a couple of years he was his old self. However he got worse very quickly. He fought till the end. That was 5 years ago........... I gave up work to look after Paul........\"\n\nI took her hand and she seemed to relax into me as I did this. Looking up at me she gave a small smile and continued talking.\n\n\"When he passed away I had to go back to work. I found a job working for the store I now manage, just working as a salesperson. They knew my qualifications so when the time came I took over the store. It is now running really well.\" Fiona said, now looking a lot happier than she did while talking about Paul.\n\nShe then looked into my eyes. Her blue eyes seemed to be drawing me in.\n\n\"And then my life got turned upside down again when Jessica's father came back into my life.\" She said with a giggle.\n\nI laughed too. \"I was so amazed when Jess approached me after the game and slipped me her number.\"\n\n\"Did she now? Hmmm she never told me that part.\" Fiona replied with a true 'mum' look on her face.\n\n\"Yes I was very flattered at first. But she had a different agenda...... She said later that you followed my playing almost obsessively.\"\n\nFiona looked away from me a little embarrassed. But then she turned and smiled at me.\n\n\"Of course I followed your career. You were my best friend and you were living out your dream. I was so proud of you when you made it to the majors with Texas..... I followed along all through your career, but only really watched in earnest when you made it to Boston.... To see you play for the team you loved as a kid was so good.\" The happiness on her face was so wonderful to see.\n\n\"Jess was wearing a Red Sox jersey with my name and number on it when I first met her.\"\n\n\"I told her you were my best friend and showed her all the pics of us together as kids and yes the one of her as a toddler too. She wanted the jersey and I got it from the States for her. That was after Paul had passed away.....\" As Fiona said this, the expression on her face changed. Almost like a realisation hit home.\n\n\"I obviously didn't hide the truth from her all that well did I?\"\n\n\"In a way Fiona I'm glad you didn't.\" I replied with sincerity.\n\nI then expressed to Fiona what had been worrying me the most since I found out about Jess being my daughter.\n\n\"When you confirmed that Jess is my daughter there has been one feeling that has plagued me most of all.\"\n\n\"What's that Adam?\"\n\n\"It's guilt. Feeling guilty at not being around, seeing her grow. I also feel guilty at not helping out, particularly financially. Fi I had a reasonably successful career and was rewarded well. I would have helped out any way I could. If I had known....... If I had known who knows how different my life would have been.\"\n\nFiona took my hand.\n\n\"Adam you have nothing to feel guilty about, nothing at all. We gave Jess the best life and she didn't miss out on anything.......... I'm the one who still feels guilty. I should have told you.\"\n\nI could see Fiona was serious about feeling guilty and that they had given Jess a good life. She wouldn't be the girl she is if they hadn't. I tried to lighten the mood a little.\n\n\"Guilt obviously enjoys company.\" I smirked. Our mutual guilt was drawing us together. Fiona smiled too. She knew what I meant.\n\nThe longer the night went the better it felt between us. Dinner was wonderful and the longer Fiona and I talked, the more I began to feel something other than guilt. Sitting there with the candle light flickering between us I could see how gorgeous Fiona was. All I could think about was how stupid I had been to miss out on being with her all those years ago, and how I wasn't going to waste this second chance. It also seemed to me that Fi was being a little flirtier with me too.\n\nIt was a fine night so after dinner we went for a walk along the waterfront. The moon was shining on the river. It was a perfectly romantic scene. Fiona and I walked along talking and laughing. Fiona's hand found mine as we walked and our fingers intertwined. I gave a little squeeze and she returned it, gazing across at me as she did. Our eyes met as we both smiled at this.\n\nWe walked along to the end of the river section, turning around to see the lights of Newcastle sparkling on the water. As we looked out over the beautiful scene, I turned Fiona around to face me and slipped my arms around her shoulders. Fiona slipped her arms around my waist as she smiled a little.\n\n\"I have had an amazing night with you tonight Fi.\"\n\n\"Me too Adam. I'm so glad we finally did this.\"\n\nWe moved a little closer together as I said \"Fiona, I can't believe it took us 18 years to go out again. You are so beautiful, and......\"\n\nFiona interrupted me by kissing me. It wasn't a long kiss, but it was amazing. We pulled apart and I could see Fiona's blue eyes were sparkling. She had a beautiful smile on her face, and I must have had a similar look on my face.\n\nWe came in together and kissed again. Lips opened this time and tongues began to tease a little. We held each other close as we made out, with the sound of the water lapping the shore as our accompaniment.\n\nAfter a short while we came up for air. Fiona was still smiling so contentedly at me. I leant across and kissed her gently again. We then decided to head back to the car. I had my arm around her shoulders and she had her arm around my waist. We were holding each other close.\n\nTravelling back home Fiona had her hand on my knee as I drove the car. Arriving back at her house, Fiona moved across and kissed me again.\n\n\"Adam I have had a wonderful night tonight. It has been the best date I have ever had.\" She said with a smile.\n\n\"I've had an amazing night too Fi. Easily my best date of all time. We will have to do this again soon.\" I said before kissing her.\n\nWalking her to her front door I slipped my arms around Fiona, and leant in towards her. She immediately leant up and kissed me. I held her tight as we kissed again, tongues dancing together once more. I never imagined I would be doing this with Fiona again, but I could not remember a time I was more attracted to anyone.\n\nWe eventually broke apart. Fiona squeezed my hand as she went into her house. \"Goodnight Adam. I can't wait to see you again.\"\n\n\"Goodnight Fi. Can't wait to see you either.\"\n\n***************\n\nThe next morning I woke up early to a beautiful day. I went for a run and a workout in the hotel gym, doing my daily fitness workout to keep me as sharp as possible. When I used to workout I would visualise my batting, focusing on pitchers I would be facing, mentally watching their actions for tell-tale signs of what they were going to be throwing to me as I ran or lifted weights. Today however, all I could think about was Fiona. How good she looked, how fun she was to be around, how she laughed, how she smiled at me. I couldn't get her out of my head. Not that I wanted to get her out of my head.\n\nBack in my room I looked at the time and noticed it was just 8am. I really wanted to see Fiona again. I had to be in Sydney by 5pm for our make-up game at home. But I had the rest of the day free. I knew that if I didn't see Fiona today I wouldn't be able to see her until the following week. I was heading to Perth the next day for our final away series on Friday, Saturday and Sunday. Then it was back to Sydney Monday and Tuesday before down to Melbourne on Wednesday morning for Thursday's Game 1 of the Championship series.",
        "I went and picked up my phone and dialled Fiona's number.\n\n\"Hi Adam. I was just thinking about you.\" Fi answered.\n\n\"Hi Fi. I was thinking about you too.\"\n\nAfter talking about how much we both enjoyed the previous night, and confirming Fiona was going to work, I said \"Fiona, I don't have to be in Sydney until late this afternoon for the game. How about I come to your shop and have lunch with you before I head down there?\"\n\n\"Oh, Adam that would be great.\" She replied. From her voice I could picture her beaming smile as she spoke.\n\nShe told me where her shop was in the mall and what time to meet her. We then said our goodbyes and Fiona said excitedly and a little nervously. \"I can't wait to see you Adam.\"\n\n\"Me either Fiona. See you soon.\"\n\n**********\n\nI arrived at the shopping centre a little early. I walked around to familiarise myself with the layout and found Fiona's shop. It was a lingerie store, part of a nationwide chain. Looking inside I could see that there were two other women working with Fiona. I continued my tour of the shopping centre, picking up some flowers for Fiona at the florist. Looking at the time, I noticed it was still a little before our agreed meeting time, but I decided to head to Fiona's shop and surprise her with the flowers.\n\nWalking into the shop I held the flowers behind my back. I was approached by one of the other sales people and asked if I was looking for something in particular.\n\n\"Well yes I am. Is Fiona available?\" I replied.\n\nThe sales person looked a little confused, but said Fiona was there and she would go and get her. I watched her head out to the back of the shop. I could hear them talking out the back and Fiona came out onto the shop floor. Fiona looked good in her work blouse and black pants. She had a very 'professional' look on her face as she came out. Once she saw it was me, a huge smile came on her face and she giggled a little seeing the flowers I bought for her.\n\n\"I just wanted to bring you some flowers to brighten your day.\" I said as she came over to me.\n\n\"Just seeing you has brightened my day.\" Fiona gushed as she took the flowers from me. \"They are so beautiful Adam. Thank you.\" She said taking them from me, smiling so happily at me.\n\nIt was then we realised we were being watched intently by Fiona's two salespeople. Fiona giggled as she took the flowers into her office and came back out with her handbag, telling the other women that she was going out for lunch today and would be back in an hour.\n\nWe then walked together out of the shop. As we exited the doorway, Fiona slipped her hand across and took hold of mine. We went to a nearby caf\u00e9 and had a nice lunch together. Fi and I talked, laughed, flirted a little and had a great time. It felt so good to see her. I had the biggest grin on my face the whole time, still not really believing we were finally going out. We worked out when I could see her next and we were both looking forward to next Wednesday.\n\nOur lunch finished and we headed back to Fiona's shop. Just as we got inside Fi turned around and slipped her arms around me. I did the same and we kissed. Our kisses were passionate, holding each other close as we did. We pulled apart and looked at each other. I was feeling so happy and Fiona looked ecstatic.\n\nAs we said our goodbyes and kissed again, Fiona whispered in my ear with a giggle \"This will give the girls in the shop something to talk about.\"\n\nWe pulled apart, still holding hands. I squeezed Fiona's hand and said \"I will talk to you tonight after the game. I hope you can watch it.\"\n\n\"You know I will be watching you play. I can't wait to see you next week.\"\n\n\"Me either.\"\n\nWe kissed again and I left the shop. I turned around and saw Fiona head towards the counter and her two salespeople came over to her excitedly asking questions.\n\n************\n\nThe next few days were very busy for me. Our makeup game against the Tassie Tigers was a straight forward win. I managed to crack a home run during the game and all I could think of was that I hoped Fiona and Jess had seen it.\n\nOur final away series in Perth was tricky, but we picked up 2 wins from the three games. My form was really good, hitting well in all the games. I felt so relaxed on the field. But truly all I could think of was Fiona and I couldn't wait to see her again.\n\nMy teammates Franco and Jared had both noticed my good mood on the trip and the increased amount of time I was spending on my phone talking and messaging. They put 2 and 2 together and good naturedly teased me about having a good time with my 'groupie' from the autograph signing a couple of weeks ago.\n\nWhen they did ask me about 'my groupie' I replied. \"No it wouldn't work. She is young enough to be my daughter.\"\n\nFiona and Jess both talked and messaged me throughout the weekend and it was great to hear from them. Their encouragement was wonderful. They watched the games and when we spoke they talked about things I did.\n\nIt was after 10am Monday when I finally arrived back at my house after catching the red eye from Perth. I had a message on my phone from Jess which made me laugh.\n\n'Mum has been talking about u a lot. I think she really likes u. U should ask her out'.\n\nI sent back to her 'Really Jess. I'm not sure she likes me that much.'\n\nImmediately she replied back 'I think she does. You really should go out with her.'\n\n'Ok I will think about it'\n\nI immediately rang Fiona and told her about this. Fiona laughed and said she was talking with Jess about my form in the games over the weekend, but didn't think she gave away that she liked me.\n\n\"I don't mind if you like me. I like you. A LOT.\" I said\n\n\"I like you too Adam.\"\n\n\"I can't wait to see you on Wednesday. I'm really looking forward to taking you out again. I....... I have missed you.\" I said a little sheepishly.\n\nFiona giggled like the schoolgirl she once was. \"I've missed you too. And yes I can't wait to see you either.\"\n\n************\n\nI travelled up to Newcastle again on the Wednesday morning. When I checked into my now usual hotel I found that I was upgraded to an apartment suite for the night. It was a much bigger room, separate bedroom, large lounge/ dining area.\n\nI was very pleased with this. I went and picked Fiona up from her house. I was greeted with a very long kiss and cuddle. Immediately after this Fiona grabbed her bag and we headed out for the night.\n\nAgain we went out to dinner, but nowhere near as fancy as we had previously. Now that all our worries had been laid bare previously we could just enjoy being us again. We sat next to each other in the booth. After eating and chatting, Fiona and I were sitting together. I had my arm around her shoulders and she was snuggled in close. I could see all the little details I remembered about her; her beautiful blue eyes, the smile she always shared with me, the now faded freckles across her nose. Sure there were a few more lines around her eyes, to me though she looked so gorgeous.\n\nFi moved slightly away from me. She looked right into my eyes and had a cheeky look on her face. \"So Adam, you're single and have been for the last 4 years?\" she asked quizzically.\n\nLooking at Fiona smiling so happily at me, I decided to throw out a little teaser.\n\n\"Yes, that's correct...... Although I think that...... I might actually be taken after all.\" I said seeing Fiona smile at me. I leant across and gave her a kiss.\n\n\"Oh, I don't think you should be doing a lot of 'looking around' if you know what I mean.\" Fi replied before kissing me again.\n\n\"That is very good to know.\" I said.\n\nWe laughed and cuddled together again.\n\n\"Good.\" Fiona said before kissing me again.\n\nWe finished our meal and headed back towards where I parked the car. Walking along holding hands Fi said to me \"Adam, why don't you show me where you are staying? I haven't been to your hotel before.\" She said this with a real mischievous grin on her face.\n\nI leant across and kissed Fiona. Arms went around and held each other close. When the kiss finished I said \"I think that can be arranged.\"\n\nI wanted to lighten the mood a little, so I decided to ask Fiona a question.\n\n\"So I guess that you are single at the moment?\" I asked with a smile and a giggle.\n\nFiona moved up and kissed me. Deeply, passionately. Our tongues danced and hands held us close together. I loved holding her in my arms and she always held me really close. Breaking our kiss apart, Fiona's eyes opened. Her beautiful blue eyes looked straight into mine. I was entranced as her eyes drew me into her.\n\n\"Well Adam I......... I 'was' single. My best friend has come back into my life.......... And I'm not letting him go this time.\" Fiona said still holding me tight.\n\n\"I'm not letting you go either.\" I replied.\n\nWe went back to my hotel and went into my room. We got comfortable on the lounge before kissing and cuddling again.\n\nOur kisses were more passionate than we had ever experienced together. I had slid down the lounge and Fiona was on top of me as we kissed and cuddled. We explored with our lips and hands, tasting and teasing each other. Fiona's perfume was intoxicating and kissing her beautiful neck was an utter joy. Having my arms wrapped around her and feeling her against me was wonderful.\n\nFiona was feeling my chest as she kissed me. She found that I liked having my ears nibbled and she even reached under and squeezed my bum. She was moaning and groaning in pleasure, and I was doing the same.\n\nMy 'excitement' was beginning to show and I could feel myself pressing against Fiona as she snuggled with me. She must have felt this, as she adjusted herself and moved her hips so she was grinding against me. We both moaned in unison. Fiona looked at me, smiled and bit her lip. We continued making out. I hadn't been this aroused ever and I so wanted to be with Fiona. No, I wanted to make love with Fiona. I really did love her, and I wanted to show her how much I loved her.\n\nFiona propped herself up off me a little, sitting up properly. \"Adam....... You make me feel so good..... You feel so good....... I get butterflies every time I see you.\" She giggled nervously.\n\n\"I.......... I want to be with you so much.\" Fiona paused. She looked at me, right into my eyes. Her blue eyes sparkled as she smiled at me. Then she looked down, away from my eyes, before she spoke again.\n\n\"I have always wanted to be with you Adam.\"\n\nFiona dropped her gaze from mine again. She was opening her heart to me and was feeling vulnerable. I let go of her hand and gently caressed her cheek. She leant in against my hand, squeezing her face against my hand.\n\n\"Fiona I have always wanted to be with you. When I left you all those years ago...... I didn't think I would ever get over you...... I don't think I did ever get over you. Since you have come back into my life, I have been so excited every time I have seen you. I can't wait to hear from you, to see you. Even getting texts from you is brilliant. I have never forgotten our night together. And I want to be with you more than ever Fiona.\"\n\nWe moved in and kissed again. Our tongues danced and we held each other really close. I slid down the lounge, and Fiona was on top of me again. Hands went exploring again as we passionately expressed our feelings towards one another.\n\nAs we caressed and embraced, it felt both very familiar and totally different at the same time. I ran my hands down Fiona and squeezed her beautiful bum as she lay on top of me. She felt so beautiful in my arms. As I caressed her bum, she slid her hand down between us and gently stroked my arousal. I groaned with extreme pleasure at her gentle touches.\n\nFiona adjusted her position so that she was lying directly on top of me, her hips moving with enjoyment. Fiona was groaning as she moved on me and my hips began to move of their own accord in response. We were kissing passionately, both becoming more aroused by the second. I slid my hand down and caressed Fiona's beautiful breasts. Fiona groaned and kissed me harder as I did this. She moved her shoulders and chest so that she was forcing her breast into my hand. I could feel her nipple becoming erect even through her clothes.\n\nWith that Fiona sat up off me. She had the biggest smile on her face and she looked a little flushed from our making out. Fiona's right hand came to rest on the front of my jeans, right on top of my throbbing, rock hard erection. She gently gave me a little squeeze and stroked me lightly.\n\n\"Why don't we get more comfortable Adam?\" Fiona purred.\n\nShe kissed me again and walked out of the lounge room. She seductively swayed her hips as she walked, and I watched her move away from me. Fiona turned around at the doorway of the bedroom to see me looking at her with desire written all over my face. She smiled and started undoing the buttons of her shirt. Taking it off, she threw it at me before turning and laying down on the bed.\n\nI laughed and I could hear Fiona laughing too. I walked through into the bedroom and there was Fiona lying on my bed, propped up on her right elbow. She was still in her jeans, but was wearing an eye catching black and red bra. This covered her full breasts beautifully. She smiled as she could see I was taking in her beauty. Reaching the bed I laid down beside her. I kissed Fiona, deeply. Her blue eyes opened after the kiss, and I could see so many emotions running through them. My hand moved over the warm skin of her back and touched her bra.\n\n\"I just got this set. I haven't had much reason before to buy sexy lingerie from work.\" Fiona said quietly.\n\n\"Fiona you are so beautiful. You're gorgeous, stunning. You are the most beautiful woman I know.\" I said before kissing her again.\n\nPulling apart from the kiss, Fiona looked into my eyes and said \"I have changed a bit since we did this before. I know I'm not...........\"\n\nI interrupted her. \"Fiona, Fiona. Have I ever lied to you?\"\n\n\"No Adam, never.\" She said still looking into my eyes.\n\n\"I'm not disappointed at all. I'm enraptured with your beauty. You have always been beautiful. You are beautiful. I have never known a more gorgeous, beautiful woman in my life. There is nowhere else in the world I would rather be than right here, right now with you my gorgeous girlfriend.\" I said as I slid my left hand along her side, feeling her womanly curves.\n\n\"Ohhh, Adam I want you right now.\" Fiona gushed as she leant forward and kissed me. Her arms wrapped around me and held me close.\n\n\"I want you so much Fiona.\" I moaned as we kissed and caressed.\n\nFiona had worked her hand inside my shirt and was feeling my chest. I propped myself up and took my t-shirt off. Fiona groaned as she saw me with my shirt off. I am not overly muscular, but I am fit from the exercise I do for my baseball. Fiona ran her hand through my chest hair and down to my reasonably flat stomach.\n\n\"Adam you are so sexy.\" She said, before pulling me close and kissing me again.\n\nI was caressing her breasts through the bra. Fiona's breasts are large, but I thought they were perfectly proportioned for her body. I leant down and kissed her chest, moving slowly down her breasts. I continued kissing her breasts, feeling her nipples hardening under my lips, through the lace of the bra.\n\nFiona managed to undo my jeans and I slipped out of these, being fully naked with her. My hands moved down to her jeans and I undid the button, before sliding my hand inside. As my hand moved over her silky panties Fiona hips moved and she ground herself against my hand. She was so hot to touch and very aroused. We kissed again and I moved my hands up to undo her bra as Fiona propped herself up and we kissed as she slithered out of her jeans. Her thong panties matched her bra and she took these off with her jeans.\n\nTaking a moment I took in the gorgeous woman Fiona had become; her large, full breasts, her slightly soft tummy, her neatly trimmed mound disappearing between her thighs. The expression on her beautiful face though grabbed her to me. Her blue eyes drew me in closer as we moved together to kiss.\n\nI rolled her onto her back and kissed down her neck, onto her chest and down to her breasts. I cupped her left breast in my right hand, while kissing her right breast. My tongue flickered and licked her erect nipple, tasting her skin.\n\nFiona was moaning with pleasure. \"Ohhhh Adam. That's sooo goood. Ohhhhh.\"\n\nI looked up and could see that she had her eyes closed and was biting her bottom lip, as I kissed her breasts. I moved my attention to her left breast and continued savouring her beautiful body. As I licked and gently sucked her breast, Fiona's hands started to roam down my body, gently raking her fingers up and down my back\n\nWorking my way back up her chest, I kissed and teased with my tongue until I reached her waiting lips. We kissed passionately again, my hand cradling her face. She held me tight, grinding her loins against my steel hard member, her hands firmly gripping my bum, feeling her skin on my skin.\n\nWe kissed again and I felt Fiona's hand move down between us. Her fingers wrapped around me and she was slowly stroking my erect penis. It felt unbelievably good. I groaned with arousal at her touch, as she kissed my neck.\n\nI followed her lead and let my hand drift down her body to her now exposed womanhood. Slowly and lightly I brushed through her trimmed hair and gently ran my fingers between her legs. I reached the base of her delicate lips and slowly ran a finger up between her folds. Fiona was sopping wet and she shuddered slightly at my touch. I lightly slipped through her lips and felt the wetness of her tunnel and then up to the erect bud of her clitoris. Fiona squealed a little in my ear and then groaned, moving her hips against my hand.\n\nShe released my erection and with both hands grabbed my shoulders and pulled herself around under me. I nestled myself on top of her, my purple head bumping gently against her mound. Fiona's legs were open wide and I adjusted myself so I was at the entrance to heaven.\n\n\"I want you inside me Adam.\" She pleaded as she looked deeply into my eyes.\n\nI pushed into her, slowly but firmly, holding my gaze into her eyes. Our souls, so long apart were joining together again, as we physically became one. We were both groaning with pleasure as her resistance lessened around my arousal as I slowly entered her. My erection throbbed even more within her slippery confines.\n\nI leant down and kissed Fiona deeply as I fully entered into her. She moaned loudly as I filled her completely. Her hands still gripped me tightly, holding me even closer to her.\n\nI started slowly moving in and out, and Fiona began moving her hips underneath me, getting into a rhythm. I was thrusting deeply into Fiona as she clung to me, arms wrapped tightly around me. Her groans and moans had changed as she let herself succumb to pleasure. Lust and passion had taken control of me. We both seemed to be releasing our combined absence of sexual activity together.\n\n\"Yes, yes, yes. Adam that is it. Ooohhh, munnngh.\" She groaned into my ear.\n\n\"So good Fiona. So, so good\" I grunted as I kept thrusting in time with Fiona's motions under me.\n\nOur rhythmic motions increased in pace as we both headed towards climax. I was moving in time with Fiona and was soon feeling the inevitable rumblings down in my groin.\n\n\"Yes Adam, I'm cumming! Yes, yes.\" Fiona squealed in my ear, as she bucked her hips wildly, trying to draw more of me into her.\n\nThat set me off as I started to climax. \"Ohhh Fiona, yes. I'm cumming! Muuumnnngh\"\n\nRope after rope flowed out of me as I came deep inside Fiona. Fiona was thrusting her hips with her own orgasmic rhythms. I had not had an orgasm like this ever. I was seeing stars. I felt like I would never stop cumming. We continued to move together as our combined years of sexual frustration ebbed away.",
        "Once I regained my senses I looked again into Fiona's eyes and kissed her gently. She broke out into an amazing smile. My friend was the most beautiful woman I had ever seen.\n\nI slipped out from Fiona, and climbed off her. Her legs were slightly shaking from the strength of her orgasm. I lay on my back and regained my breath. Looking across I found Fiona was looking at me with her gorgeous smile directed right at me. I was smiling too. Nothing was said between us. Nothing needed to be said. It had been the most amazing sexual experience of my life and it looked to me as though Fiona had enjoyed it immensely as well.\n\n***********\n\nI woke to the most beautiful pair of blue eyes looking at me. I had sensed Fiona was waking and I woke up too. Her hair was all messed up and Fiona was smiling at me, her eyes sparkling. I leant across and kissed her and she kissed back, moving closer to me in the bed.\n\n\"Good morning.\" She said happily.\n\n\"Good morning, how did you sleep?\" I asked.\n\n\"I had the best sleep I have ever had. How about you?\" Fiona said dreamily.\n\n\"I slept so well. Must be because I'm with my best friend.\"\n\nFiona giggled and cuddled up to me. It felt so right, so natural for the two of us to be together. I reached out and pushed some hair out of Fiona's face. She looked so happy.\n\nI said \"Last night was amazing Fiona. It felt so right for us to be together.\"\n\n\"It felt right to me. Very right.\" She smiled and kissed me again. \"This is much better than waking up in the back of your car.\"\n\nI laughed as she said this. I kissed her again.\n\n\"This time is better though.\"\n\n\"I think so too.\" Fiona smiled.\n\n\"Well I'm definitely not leaving for 19 years today.\" I said with a grin, but also with a hint of seriousness.\"\n\n\"You had better not be Adam.......\" Fiona paused. She had said this with a laugh, but her expression changed. The smile disappeared from her face.\n\n\"It broke my heart to lose you last time Adam.\"\n\n\"You aren't going to lose me again.\"\n\nWe kissed and embraced. We held each other tight, our emotional connection enhanced.\n\nJust then the alarm on Fiona's phone went off. I looked across at the time and noticed it was 6:45am. Fiona reached across to kiss me. \"Adam I will have to leave shortly. I have to get home and get ready to go to catch my flight for work.\"\n\nI kissed her again. I felt a little sad to be letting her go, but I could understand what she meant. I got up and made us both some coffee as Fiona got dressed.\n\nWhen Fiona came out to join me she looked so beautiful to me. She took her coffee, thanked me and smiled so happily.\n\n\"I can't believe we spent the night together Fiona. It was so great.\" I said. Fiona came over and slipped her arms around me and cuddled me tight.\n\n\"It was great Adam. It was better than I had dreamed and......... I had dreamed about it.....a lot. It was great because it was with you.\" She replied.\n\n\"No Fiona. It was great because it was us together.\" I said, kissing her. Her lips tasted of coffee and toothpaste, such a great combination.\n\n\"Why didn't we keep doing this?\" I asked rhetorically.\n\nFiona just giggled and shook her head.\n\nWe had to leave not long after that. Fiona had to catch a plane to Brisbane for a couple days of work meetings. She was returning on Saturday morning. I had organised tickets for her and Jess to come to the game on Saturday and they were staying at my place Saturday night.\n\nI drove Fiona back to her house, where our goodbye at her door was passionate and heartfelt. She had her hand on my chest as I held her close.\n\n\"Thank you for a wonderful night Adam.... And thank you for having somewhere for us to go.\"\n\nConfusion quickly raced through my mind. Fiona could obviously see the change in expression on my face.\n\n\"Being with you was amazing Adam, and I want to be with you so much. I just..... I just don't think I could have done that........ Here.\" Fiona said as she dropped her gaze from mine. In that instant I realised what she meant. I moved closer and gently kissed her.\n\n\"That's ok. I understand. And I want to be with you too my beautiful friend.\"\n\nFiona kissed me deeply, her tongue seeking mine and playing as they met.\n\n\"You're still coming to the game on Saturday afternoon?\"\n\n\"Yes Adam. Jess and I will both be there. I fly back into Sydney that morning and we will go straight to the park. Are you sure it's ok we can stay at your place that night after the game?\"\n\n\"Of course it is. I'm looking forward to showing you both my house.\"\n\n\"I can't wait to see it. And to see you too.\"\n\nWe kissed again and said our goodbyes. Driving away I looked in the rear view mirror and could see Fiona smiling happily as she waved goodbye. I had a grin on my face you couldn't wipe off.\n\n**************\n\nWith the happiness I was finding in my personal life, I was becoming a walking clich\u00e9. My mood was so much better. Little distractions didn't worry me. I was talking and messaging Fiona all the time. Life was bliss.\n\nAs I knew Fiona and Jess were coming to my house to stay on Saturday after the game, I gave my place an extensive clean. Not that it was dirty, but just the sheer size of the place meant that it took a while. As I had my head down cleaning and tidying, I almost missed getting to the airport in time. I was the last to arrive and the team gave me a plenty of ribbing for that. We were off to Melbourne for the first game of the 5 game championship series against the 'Victorians'.\n\nThe first game down there was played before a full house of rabid Melbourne fans who wanted nothing more than to see the 'Victorians' smash us. For many of our team it was the biggest game they had ever played in. There was a lot of tension in the clubhouse before the game. For me, however, I felt strangely detached from the situation. My mind definitely wasn't where it should have been.\n\nThe game itself was a see-sawing affair. My performance with the bat was less than exemplary, 1 for 4 for the game. We hung tough but couldn't quite get the result we needed, going down 3-2. The team was disappointed, but not despondent. We felt that the 'Victorians' had played at their absolute best, fuelled on by the parochial crowd, while we hadn't been at our best.\n\nI felt disappointed in myself. I hadn't played that badly all season. I had forgotten the cardinal rule of professional sport- leave your personal life outside the locker room. My mind had been pleasantly distracted by my new relationship with Fiona, and my having a daughter. After I showered and changed, I looked at my phone. There were messages from both Fiona and Jess, offering commiserations. Fiona even noted that I didn't look at the top of my game.\n\nAs I put the phone down our manager Tim called me into his office. He sat me down and immediately noted that I didn't look like I was in the game. Tim and I got along really well and as all good managers do, he knew his players, so he could tell if something was different.\n\nI looked back and made sure the door was closed. With a sigh I started to tell him what had happened; from Jessica approaching me, her theory about me being her father, seeing Fiona again, us going out, the whole story. I also told him how happy I was that this had all happened.\n\nTim listened as I told him what had occurred, never interrupting, letting me say everything on my mind. The longer I spoke, the better I felt. It felt great to be able to share this news with someone, almost like lifting a weight off my shoulders. When I finished talking Tim was sitting there with a smile on his face.\n\nIn his thick Boston accent he replied with a smile \"Well it's no wonder you played like shit today.\"\n\nI laughed at his reply. He wasn't lying. I had played like shit.\n\n\"Adam it sounds to me like you are getting your life ready for after baseball. Having a family is such a wonderful thing. And with all this happening to you over such a short period of time it's no wonder you weren't as focused as you might have been.\"\n\n\"I know Tim. I'm sorry for my efforts today, I really am.\" I replied with sincerity.\n\n\"You just have to get a little more balance between work and family. I know you will be right for game 2. We will be back at home. Are Fiona and... Jessica right? Are they coming to the game?\"\n\n\"Yes they are. I've arranged tickets with front office.\"\n\n\"Good. I'm sure having them there will be good for you. I'd like to meet them too.\"\n\n\"Ok Tim. That would be great.\"\n\nWith that he sent me out of his office with a smile. As I walked out of there I smiled to myself. Having Fiona and Jess there would be good. Looking back into the office I could see Tim was writing notes down. I wryly shook my head. I had gone in there feeling down on myself for not giving my best. Now I was excited to play in front of my girlfriend and daughter. Tim was indeed a good manager.\n\n************\n\nAfter returning home from our disappointing game 1, I put a concerted effort into making sure I was ready for game 2. I still had been speaking to Fiona and Jess and they were excited to see me play. Fiona had told Jessica we had been out together a couple of times and she was really excited. Jess messaged me almost immediately asking about our dates, did I like her mum? I told her I did like Fiona, and it was feeling good between us. Jess seemed really pleased this was the case.\n\nFor the game 2 I was at the park early to get a little extra hitting practice in. It was beneficial for me to swing the bat, getting my rhythm back. I was heading back to the dugout when I saw Fiona and Jess walking down the stand to their seats near our dugout. I called out and they came down to the fence to see me. Fiona kissed me and hugged me, and Jess was beaming as she hugged me.\n\nManager Tim was walking past and I called him over to meet Fiona and Jess. After saying hello and chatting for a minute it was time to go and get ready.\n\n\"Sorry ladies, but I have to take Adam away now. We have a ball game we want to win.\" Tim said. It was like flicking a switch, time to go to work. I said my goodbyes and that I'd see them after the game, before running to join my teammates for some fielding practice.\n\nBy the time the game started the place was full with 5000 people crammed in to watch the game. Unlike down in Melbourne we played with confidence. Our pitching was hard to hit and our defence looked alert. I was hitting at 3 and I came out in the first inning with one runner on first after a walk and one out.\n\nMelbourne's pitcher Stevenson was trying to settle in to the game having taken his first out. I had seen him during the regular season and knew he was quite good if he got a roll on. He did look nervous as he was setting up to pitch. This made me smile to myself and I tightened my grip on the bat.\n\nAfter a quick look to check the runner at first, Stevenson went into his wind up. I could see the pitch and instinctively started to swing. In all scouting reports on my hitting they would have said 'Don't pitch low and away in the strike zone.' This pitch was right in my zone and I extended my arms and launched into it.\n\nThe instant it hit the bat I knew it was going over the fence. The sound it made was perfect. I dropped my bat and trotted towards first base watching the ball sail over the right outfield fence. The crowd went wild. Two runs on the board in the bottom of the first. I moved around the bases and touched home plate, high fiving Jared who had completed the first run. I moved to the dugout without reacting or carrying on to the crowd. Looking up I could see Fiona and Jess cheering and clapping wildly. I gave them a smile and a quick wink before heading into the dugout.\n\nAfter our flying start took the wind out of their sails, the Victorian's couldn't get back in the game. We ended up winning 8-1, with their only run coming in the 8<sup>th</sup> off a solo shot from our relief pitcher Bond. I gathered the team together before we took the field in the ninth. I reiterated we needed to focus and finish this game off. The guys all nodded and agreed. Then I told them not to celebrate wildly. We have played well today, but we don't win the championship by just winning today. Everyone clapped hands and we headed back onto the field.\n\nOur closer from the States, Jack Webb, finished the game quickly. After the last out, a fly ball to left which was caught easily by Franco the crowd erupted. We gathered together in a huddle, did our team chant and headed off the field waving to the fans. No fuss, no carry on. Two wins to go.\n\nI played much better than the previous game and was so pleased that Fiona and Jessica were there to see it. The next game of the series was back in Melbourne on Thursday night, before returning here for Saturday and if needed Sunday.\n\nThe TV crew there asked me for a post-game interview and I repeated the message I told the team. Yes we had played well, but there were still 2 more games to win. We weren't getting ahead of ourselves and we would have to play really well to beat a very tough 'Victorian's' team. As I finished the interview I noticed that a lot of fans had already left the stadium. There were still plenty hanging around our dugout. I could see Fiona and Jess were standing in their seats cheering the team. Fiona blew me a kiss and Jess looked so happy. I signalled that I'd be out in about 20 minutes and they waved back.\n\nAfter Tim addressed the team congratulating us on our performance and reiterating that we still had 2 wins to get, I quickly showered and changed into my regular clothes. Coming out of the clubhouse there was the usual crowd of people gathered wanting autographs and I signed a few as I always did. Looking up I could see Fiona and Jess waiting over at the players carpark, their car parked next to mine just as I had organised.\n\nThey looked so happy to see me and I know I had the broadest smile on my face. Fiona gave me a kiss and Jess 'oohed' in a joking manner. We went to our respective cars and Jess suggested that Fiona should ride with me and she would follow in her Mum's car. I could see Fiona giving Jess a real 'stop interfering' glare. With that Fiona and I got into my 2 year old Ford Focus, Jess into her mother's Mazda 6 and we headed off on the 25 minute trip to my home.\n\nOnce alone together in the car Fiona beamed. It was just like our date from earlier in the week. We talked about the game, our date the other night and the fact that Jess now knew we were dating and how happy she was for us. As we approached where I lived Fiona began to notice the area I lived in. She had never asked where I lived. I just said I had a nice house not far from the ballpark.\n\nLooking in the rear view mirror I could see Jessica was still behind me as we drove through the semi-rural area I lived. Approaching my house I reached into the centre console and picked up a small remote control. I hit the button as turned off the road into the driveway. The gates to my house opened.\n\n\"This is your house?\" Fiona asked in absolute surprise.\n\n\"Yes Fiona. Welcome to my home.\"\n\nWe drove down the drive which ran along the left side of the property. My home was a single story ranch style property on 5 landscaped acres of land. My house was about in the middle of the land, with a double garage attached. Behind the house was a pool and tennis court with automated batting cage attached. Adjacent to this was a large storage shed, almost a barn, for my gardening equipment and the few 'toys' I had brought back from America.\n\nParking in the garage, Jessica pulled up behind me. Her eyes were wide as she tried to take in everything. Guiding the ladies through the internal access from the garage, I showed them around. 5 bedrooms, 3 with ensuite facilities, large kitchen with a central island prep bench and views out the back to the outdoor entertaining area and pool, lounge room and dining room. Next to this was my pool room, which housed my billiards table as well as most of my memorabilia from my playing career. Jess was super excited seeing my house. Fiona seemed a little stunned.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nI showed the ladies to their rooms, as Fiona didn't want us to share a room just yet in front of Jessica. She was always thinking of her daughter. Fiona had her suitcase from her trip away for work and Jess carried a small backpack. As they settled themselves in, I gathered things for dinner. I had prepared a couple of salads before going to the game, so I dressed these. Getting some steaks out I took everything outside to the patio to cook up a barbeque for our dinner.\n\nFiona and Jess joined me and we chatted together. Jess was keen to talk about the game and my house. Fiona looked at me a little strangely when the topic of my house came up.\n\n\"I bought this place years ago when I got my first Big League contract with the Rangers. My agent told me to invest it, or buy something substantial, so I had something to fall back on when my career finished. So I bought this house. I always wanted a nice house and this was good at the time. It still is.\n\n\"Over in the States, after the divorce, I lived in apartments relatively close to the ball parks of the clubs I played for. So I could use their facilities to train and for it to be easy to get to games. I lived fairly basically over there, not buying flashy clothes or jewellery. I had a few toys but nothing as extravagant as some of my team mates.\"\n\nAs I said this, Fiona seemed to relax a little in her chair. She smiled at me with her real smile for the first time since arriving here. I asked about her work trip and she told us all the details of her trip away. I was very interested to hear about her work as I knew about her, but didn't know a lot about her work.\n\nJessica chimed in and we discussed her work at university. She was enjoying the independence of living away from home, but Fiona noted that she and Jess now seemed closer than ever before. Sitting there outside in the warm evening sun I don't think I could have been any happier. The sun was starting to descend from the sky, bathing everything in a warm glow. Fiona looked great sitting next to me and my daughter was sitting close by telling us all about her studies. Sheer bliss.\n\nAs the conversation lulled a little, Jess wanted to see the outside of my home. We cleared the table taking some things inside before I showed them around. Jess was super enthusiastic seeing the pool and the tennis court. She even had a go in the batting cage. I smiled when she picked up the bat and took a left handed stance.\n\n\"She has done that ever since she was a child. Everything else she does is right handed.\" Fiona whispered in my ear. She had a knowing smile on her face. Jess was just like me.\n\nAfter her hit in the cage, Jess asked me a question.\n\n\"What do you have in the shed Adam?\"\n\n\"Just my ride-on mower, gardening stuff, pool chemicals and a few toys from back in the States.\"\n\n\"Oooh like what?\"\n\n\"Come and I will show you.\"\n\nWe all walked over and I opened the door and turned on the light. Closest to the door was gardening equipment, but further back was four large items under dust covers.\n\n\"Come with me Jess and help lift these off.\" I asked.\n\nUnder the first cover was my 2 jet-skis back from my days in Tampa Bay, the second revealed the first of my cars, a 1957 Chevrolet Bel Air. Black and chrome, wide wheels and tyres, still with its American license plates. The next one was my 1966 Ford Mustang convertible, candy apple red and pony interior. Jess was getting really excited and Fiona looked on with her arms folded with a strange look on her face.\n\nThe final cover was lower than the others. Once I dragged Jessica away from the other cars she took hold and helped me lift this cover off. I could hear her gasp as it revealed the car underneath.\n\n\"A Ferrari!!!\"\n\n\"Yes Jess, a Ferrari. But not just any Ferrari, it's a 1984 288 GTO. One of only 272 ever made.\"",
        "\"You..... you had a poster of that on your wall when we were kids. You always talked about that car.\" Fiona exclaimed.\n\n\"Yep and now I have one. Or actually have had one for 3 years. Divorce present.\" I said.\n\nFiona looked at me and just shook her head. Jess had already opened the door and climbed into the driver's seat. I smiled at her before sticking my head in the driver's window and was talking with Jess. I told her I was organising to have these all registered here and I wouldn't be driving them until I did.\n\nI looked across and could see Fiona looking at the other cars, so I got in with Jess and told her some of the details of the Ferrari. By the time we finished talking, I noticed Fiona had left the shed. Jess and I quickly put the covers back on the cars and jet ski's before locking up. As we left the shed I called out and Fiona replied she was out near the barbecue.\n\nThe sun had faded from the sky, and night began to fall. Fiona was carrying things inside from the barbecue. I told her to leave those things.\n\n\"Why Adam? Do you have a maid to come and clean for you too?\"\n\nI shook my head. \"No I don't. I will clean those things up.\" And smiled at her joke. Fiona had a strange look on her face.\n\nWe all chatted together in the kitchen for a while before Fiona piped up.\n\n\"I'm going to have to go to bed. It's been a long day for me, I've been up since 4:30 this morning.\"\n\nJess went and said goodnight to her mother and then I gave Fiona a hug and a kiss. She seemed strangely subdued as we hugged, before going to her room.\n\nJessica and I chatted together for another hour or so, as she wanted to see some of my playing memorabilia. After this she said goodnight I went to my room.\n\nThe next morning I was up early as usual and went for a run around my property as I did every day. Then I did some sprints around the improvised diamond I had in the far front corner of the property. When I finished these I walked back into the house through the garage.\n\nGoing into the kitchen I could see Fiona was already in there having a coffee. She looked across to me and gave a small smile. I went over and hugged her and she leant into the hug. I asked how she slept and she said not great as she was over tired and was thinking about work things from her meetings in Brisbane.\n\nJust then Jessica came into the kitchen and I proceeded to fix breakfast for everyone. She asked what I was doing today and I replied I had little on until 4 pm when we had a team training and video session out at the field. Fiona said she had lots to do to be ready for work the following day and wanted to head home soon. We then arranged that I could take Jess back to University, allowing her to travel straight home.\n\nWe all said our goodbyes a short time later. Fiona hugged and kissed me, but she seemed somewhat distracted. Jessica and I waved goodbye from the front of the house as Fiona left.\n\n\"Mum's acting very strange. Did you two have a fight or something?\" Jess asked as we walked back inside.\n\n\"No we didn't...... Come to think of it, she has been acting a little strange ever since we arrived here.\"\n\n\"You're right Adam. I wonder what's wrong?\"\n\n\"Perhaps she is just tired from the trip away and work.\" I pondered out loud.\n\n\"I wouldn't think so. She's done that trip before..... I don't know.\" Jess replied.\n\nA few hours later I took Jess back to University. She hugged me as she got out of the car.\n\n\"I'm off to the ballpark now. If you get the chance Jess please ring your Mum and see if you can find out what's bothering her. I will ring her too later tonight.\"\n\n\"Ok Adam. I will. Talk to you later.\" She said before kissing me on the cheek and giving me a hug.\n\nI travelled out to the ballpark and we had the video session and light workout. Our schedule for the week was announced, with another practice tomorrow afternoon, before a Tuesday morning flight to Melbourne, afternoon practice, Wednesday game at 4pm, them providing the game stayed to time, a 9pm flight back to Sydney that night to be ready for a Friday night game at home.\n\nBy the time I had arrived home it was after 8pm. I checked my phone and there was a message from Jess. She had spoken to Fiona who had insisted everything was alright. Fiona maintained she was just tired and overloaded with work stuff from her meetings. Jess still didn't think her mother was being completely honest.\n\nI rang Fiona shortly after and we chatted for a little while. She did sound very tired, but I still felt she was upset with me somehow. I asked her this and she said she wasn't upset with me and everything between us was fine. I didn't push the point.\n\n**********\n\nThe next couple of days were busy for me with preparations for game 3 in Melbourne. We did message and chat a little when we could and Fiona still seemed to be somewhat distant from me as we spoke. Thoughts of why she was acting this way plagued my thoughts. Sitting in my hotel room on the Tuesday night in Melbourne I decided to ring her and find out once and for all what was going on.\n\nFiona answered and we chatted pleasantly for a couple of minutes. Fiona said she was fine, but 'fine' is never fine. I decided to come right out and say what was on my mind.\n\n\"Fiona, you've been acting strange ever since you came to my house. What's going on?\"\n\n\"Nothing..... I liked your house......\"\n\n\"Well it feels like I have done something wrong. You aren't talking to me or messaging me the way we were before you visited here.....\"\n\n\"Adam..... Adam you're different.... You've changed....\"\n\nThis took me aback.\n\n\"How... How am I different?\"\n\n\"You've changed....... I still see you.... As Adam from down the road. My friend from school who went and chased his dream...... Now you have this beautiful house, cars. You have a FERRARI Adam.\"\n\nI tried to reply, but no words would come out. I couldn't believe what she was saying.\n\n\"You are different from the man I thought you were.\" Fiona said quietly.\n\nThis totally threw me.\n\n\"So you think I've changed because of my house and my cars?\"\n\n\"Yes...\"\n\n\"But what about when I came to your house with Jess and I found out Jess was my daughter. Or when I took you out on our first real date? Or our second date? Am I different from when we spent that amazing night together Fiona?\"\n\nFiona was quiet on the other end of the line.\n\n\"Yes I have a nice house and yes I do have a Ferrari. But I'm still the guy who went on those dates with you, who has an amazing time with you EVERTIME I see you. I get excited even when I get a message from you. You mean everything to me Fiona. You really do.\"\n\n\"Oh Adam.....\"\n\nI took a breath. I realised this was Fiona's hang up and not mine.\n\n\"Fiona, I'm me. I'm Adam, the guy you've known since you were 10 years old. Yes I'm older, but I'm still me. I'm still the guy who was your best friend, who went and saw you dance and play sport, who shared the most unbelievable experience with you before I left for college. It was an experience that thankfully brought me back to you all these years later. I'm still the guy who you wanted to go out with when we reconnected.... I'm the guy who is still mad about you....\"\n\nI sighed. I wished we were having this conversation face to face so I could see Fiona's face, just to see if I was getting through to her.\n\n\"I think you need to think about this Fiona. I haven't been this happy in a long time, having you as my girlfriend. I hope I can make you happy too.\"\n\nI could hear Fiona sniffling a little. Looking across at the clock it was now after midnight and I needed sleep.\n\n\"Fiona I will speak to you today later. I have to get some sleep. I have a big day today..... Goodnight Fiona.\"\n\n\"Good night Adam.\" She sniffled before we hung up.\n\nI couldn't believe she was hung up on my house and cars. I went and took a shower to clear my head before going to bed.\n\n************\n\nI woke the following morning after a less than perfect night's sleep. I put my running shoes on to go for a short run to get the blood pumping and the body moving before the big day. I returned to my hotel room and had a shower. Changing to go down to breakfast I saw a message pop up on my phone. My heart raced when I saw it was from Fiona.\n\n'Hi Adam. I'm sorry for how I've been acting the last few days. You were right. It was my hang ups. I have never been happier than I have been with you. I want to keep seeing you. I won't explain everything now, but I will when I see you in person. I will be watching this afternoon, wanting to see my bf win today, so I can see him and his team win the title in person on Saturday. Can't wait to see you and be in your arms again Adam xxx'\n\nSitting back on the bed I was so relieved. Part of me thought Fiona was going to break up with me. Seeing that she still wanted to see me made my heart soar. I knew then it was going to be a good day.\n\nThat afternoon's game was the toughest of the whole season. It was tight throughout. Runs were hard to come by, defence ruled the game. We led after scoring 2 runs in the fourth. Melbourne got one back in the fifth. Both pitchers were dominating and it was close.\n\nBy the bottom of the eighth it was still a one run game. Our starter Peterson had thrown long into this game but was now tiring. He allowed 2 hits on his first two pitches moving runners to first and second. Manager Tim came out to the mound and brought in our closer Rogers. Looking around I could see the tension on our players faces. The noise in the ballpark was rising as the crowd were getting into the game.\n\nTheir pitcher Ward was at bat, and the field moved in as he wasn't a good hitter. Rogers pitched and the batter cracked a shot towards me. I moved to my right thinking I was a chance at a catch, but it bounced just before me. I scooped the ball and instinct took over. Lunging across I stepped on third base, turned and threw a good throw to second, right on the base. Our second baseman, Pete, stepped on the base in time then released the throw to first, beating out the batter scampering up the first base line. It was a classic '5-4-3' triple play, getting us out of the inning with our slender lead intact.\n\nThis energised our team, and deflated the Victorians. The lower half of our order knocked in a couple of runs in the last before we sat their batters down in order to win 4-1. When the final out happened the team huddled up together. Even though it was a great win and we were all excited, to a man we were all focused on getting the one more win we needed to take the title.\n\nWe then raced off the field, showered and changed before catching the bus to the airport. We finished just before 7pm and were at the airport by 8pm for the 9pm flight home. I had messages from Fiona and Jess congratulating me on the win. Fiona asked me what time I was going to be home as she couldn't wait to talk to me. I told her I was expecting to be home by 11pm.\n\nJess also congratulated me, not only on the win, but turning her mother around. She said Fiona seemed really happy today when they spoke. I replied that we had made up and Fiona wanted to talk to me more tonight.\n\nBy the time the flight arrived in Sydney and we bussed back to our ground to pick up our cars it was 10:40pm. I messaged Fiona and let her know I was nearly at my house and she said she couldn't wait to talk to me.\n\nAs I approached home, the tiredness of the long day started to make its presence felt. Driving down my road the phone rang. It was Fiona.\n\n\"Adam are you nearly home? I can't wait to talk with you properly.\"\n\n\"Yes Fiona. I'm nearly there. I'm just coming around the bend in the road and.... Hang on a second. There is a car out the front of my place.\"\n\nThe car flashed its headlights.\n\n\"Guess who?\" Fiona said with a laugh.\n\nAs I pulled the car up at the front gate I asked \"What are you doing here?\" with excitement in my voice.\n\n\"I couldn't wait to see you Adam.\"\n\n\"Well come in.\"\n\nI drove down to the garage and Fiona followed me. As I parked my car and got out, Fiona pulled up outside the garage. She hopped out of her car and ran over to me. Her arms wrapped around me and mine around her. We kissed and held each other as close as we could. Fiona smothered me in kisses and I returned them with passion.\n\nShe moved her face back from mine and looked into my eyes.\n\n\"I couldn't wait to see you Adam. I missed you so much.\" Fiona said. She kissed me again and leant back. I moved her hair away from her face. Her gaze fell for a second before she looked back into my eyes. Her arms seemed to hold me a little tighter.\n\n\"I love you Adam.\" She said clearly, with a little sigh afterwards.\n\n\"I love you too Fiona. So, so much.\"\n\nThe smile on my face was wide, matching the one on Fiona's face. We kissed again, relaxing into each other's arms. This kiss was long, slow, and deeply connecting. When we came up for air Fiona looked into my eyes again.\n\n\"I think we should go inside Adam.\"\n\n\"Oh yes... Do you want me to get your things?\"\n\n\"The only thing I want is you Adam.\"\n\nI kissed Fiona again, our lips locking and tongues seeking the other. Fiona ground her hips against me and I grabbed her bum and pulled her even closer to me. She began to moan as we kissed. Moving apart slightly from the kiss I released my hold on her beautiful bum and took her hand. We then proceeded into my home.\n\nWe kissed our way right through the house, hands roaming over each other. We almost tripped many times, but neither wanted to let the other go. Somehow Fiona and I managed to stumble into my room and fall onto the bed. Lying beside each other on the bed only inflamed the situation. Our kisses and caresses somehow became even more urgent. Any tiredness I had felt driving home had now disappeared.\n\nI was now extremely aroused and Fiona had her hand firmly gripping me over my jeans. My hands were full with her beautiful breasts, caressing her over her t-shirt. Love and lust built up inside me. I wanted the woman I loved more than ever. Fiona fumbled with the button at the top of my jeans but she managed to get this undone. I slithered out of these, still kissing her and she did the same, whipping her jeans off in a fluid motion.\n\nI slipped my arm around her waist and pulled her tight against me. My erection was rubbing against the front of her panties, as we continued to kiss and cuddle. I slid my hand down her back, under her bottom of her t-shirt and into the back of her panties. I was caressing her beautiful bottom and kissing her neck. She had her hand down the front of my boxer shorts, stroking my rock hard erection.\n\nEverything had become a bit more urgent. She was moaning and groaning, as I slipped my hand around to the front of her panties and began to gently caress between her legs. I slid my hand right down the front of her panties, and could feel the light covering of hair above her sex. Moving down a little further I could feel her clitoris was already hard, and very sensitive to my touch. She groaned loudly in my ear and held me tightly against her as I touched her.\n\nI slid my hand down lower and gently slipped a finger inside her womanhood. She was very wet and I felt her kisses become more frantic as my finger slid inside her.\n\n\"Ohhh Adam, that is soooo good.\" She panted in my ear. Her stroking of my excitement increased in intensity.\n\nI moved up and kissed her, before moving my way down her body. She was now on her back and my fingers took hold of the sides of her panties. I began to remove them and Fiona arched her hips and lifted her bum, allowing them to come off. I put them on the floor and her legs fell open. She looked at me with arousal and love written all over her face.\n\nSmiling at the love of my life I proceeded between her legs where I kissed my way up her inner thigh. Fiona immediately grabbed my head and pulled me to her sex. My tongue opened her slick lips, tracing all the way up before lavishing attention to her stimulated clit. Fiona's hips bucked the instant I touched her. She moaned and groaned as I tasted and teased her excitement. She held my head, guiding me where she wanted me to excite her.\n\nJust then she pushed against my head.\n\n\"Stop Adam. Stop a second.\" She grunted.\n\nWith those words I lifted my head up and Fiona sat up. She threw off her t-shirt and quickly unfastened her bra. She released her gorgeous breasts from their confines. My hands reached out and felt her breasts. Her nipples were already hard and she squirmed with obvious pleasure as I firmly, but lovingly played with them.\n\nI quickly followed her lead, taking off my boxer shorts and t-shirt. She grabbed my erection and continued to stroke it before rolling me onto my back. With a lustful look in her eye she lowered her mouth down and licked the tip of my erection. I throbbed in her hand as she toyed with the head. Moving her tongue a string of pre-cum stretched up to her lips. Fiona licked and put this inside her mouth with a smile.\n\nShe then licked from base to tip as I groaned my approval, before taking me in her mouth. Fiona teased and sucked on my impossibly hard member. I could feel every move she made and I couldn't help but moan in absolute pleasure. Looking down I could see her free hand was moving between her legs. Seeing her enjoying this too only made me more excited. Fiona could tell I was getting close, so she slowly raised her mouth off me. Her grin filled her face.\n\nI lay still as she manoeuvred herself so that she was straddling me. Her hand grasped my now throbbing cock to the entrance of her vagina. She slid me against her folds, up to her clitoris and all around her opening, smearing my pre-cum and her juices everywhere.\n\nFiona climbed onto me and her eyes never left mine. I slid most of the way inside her and she grunted and groaned loudly. She rose back up and adjusted her position slightly, before sliding all the way onto me. I groaned and began thrusting almost as soon as she was on me.\n\nShe leant forward and kissed me and I held her close to me. I stopped thrusting and kissed her deeply.\n\n\"Oh god I love you Fi.\"\n\n\"I love you my Adam\" she replied, as she managed to tighten herself around me\n\nOur tongues intertwined as we kissed and I began to thrust again. Our movements became a bit more intense, a bit quicker. Her long caramel hair fell down over my face as she ground her hips against me, moving with the motions of my thrusting. I could feel her breasts rubbing against my chest, as she began to bite my neck in enjoyment.\n\nIt was passionate, frantic but loving. To share our love in this manner was so much more intense than I thought it would be. Our loins were slapping together with that satisfyingly squelchy sound. Fiona's groans and movements encouraged my efforts.\n\nIt was all getting too much. The familiar rumblings were happening, and I knew I was going to cum soon.\n\n\"Ohhhh baby, I'm gonna cum, I'm gonna cum.\"\n\n\"Muunnngh, yes Adam, yes. Cum inside me. I want you inside me.\" She grunted in my ear.\n\nThat set me off. I came and came hard. Rope after rope surged out of me as I thrust into her. She groaned and started to buck her hips really fast. She sat up on me and squealed loudly, her eyes opening wide as she experienced her own orgasm.\n\n\"Ohhhh God Adammmmm..... cummmmmmingggg unrghhhhh\"\n\nWe both continued thrusting and bucking as our orgasms took hold. I finished cumming what seemed like a never ending stream into her womanhood. Fiona's face was contorted in pleasure as she continued to rock her hips on me, milking my orgasm and continuing hers. Shortly she collapsed forward onto me, her forehead resting against mine.\n\nShe was panting as her beautiful blue eyes looked into mine. I moved my hand and brushed her hair away from her face. We kissed and she wrapped her arms around my neck and head. My arms held her close. Intense didn't even come close to explaining how close we felt. We lay there revelling in sharing our love, as my erection slowly subsided within her. I slipped out of her involuntarily, as we continued to kiss after our exertions.",
        "As we came down from our orgasmic high, Fiona moved across and lay her head on my shoulder and chest. I wrapped an arm around her as I leant down and kissed her head. Fiona sighed and snuggled in a little closer.\n\n\"This is perfect Adam. I don't think I want to move.\"\n\n\"I don't want you to move...... I don't ever want you to be away from me.\"\n\nFiona looked up and smiled.\n\n\"Me either. I love you so much Adam.\"\n\n\"I love you too Fiona.\"\n\nFiona turned her head back to its original spot and absent-mindedly traced her fingertips over my chest. We lay like this for seemingly a long time. I could have lay there like that forever. Fiona moved slightly against me.\n\n\"Adam.... I'm sorry for how I...... acted the other day.\" She said quietly.\n\nShe looked back up at me and I leant down and kissed her on the lips.\n\n\"You definitely weren't acting like yourself Fi.\"\n\n\"I know.......... I just couldn't believe it when I saw you, my friend Adam who I've known since I was 10, in this beautiful house and with a Ferrari...... I still saw you as 'Adam from up the street' and not as a grown man who has a successful career...... It just threw me totally off course.\"\n\n\"I could tell.\" I replied, trying to be deadpan with my answer.\n\nFiona looked at me and laughed.\n\n\"But you said it yourself when we spoke on the phone. You are the same wonderful guy I've always known..... It was just me.... I don't know if I was trying to deny my feelings..... Or if I was trying to protect myself......\"\n\nI was stroking Fiona's back as she spoke, making sure we were close. I started to speak.\n\n\"Fiona you don't need to protect yourself. I'm never going to let go of you again ever. I love you and I'm never going to leave you again.\"\n\n\"And I'm never leaving you Adam. I love you.\"\n\n*************\n\nFiona stayed with me for the next 4 days. She wanted to see everything I did, wanting to know everything about my life as a professional baseball player. I trained, worked out, ran, did my own batting practice and she was there with me. Having her in my home made me realise that while my house was excellent, it was a home when she was there.\n\nBy the time she left to pick up Jess to watch game 4 on Friday, we were already talking about ways to merge our lives together permanently. She was trying to work out how to move down with me as we didn't want to be apart any more.\n\nI was on the field warming up when I saw Fiona and Jess arrive at the ground. They were both wearing my Blue Sox playing jersey's, ones I had worn earlier in the season. I broke away from warm ups and went to greet them. Jess was so excited.\n\n\"Adam, Mum has been telling me all about your plans, that is so great, you two are so great together, I love you both.\" She babbled quickly as we hugged. As she looked at me I could see tears in her eyes.\n\nFiona gave me a hug and kiss. She looked into my eyes as she moved her face back.\n\n\"Go and win that game today.\" She said in a serious tone.\n\n\"Yes Sweetheart. I will.\" I said with a wink.\n\nWe kissed again before I went and re-joined my teammates warming up. The mood amongst our team was focussed. Manager Tim spoke to us all individually as we warmed up, making sure our heads were in the right place.\n\nWe hit the field in the top of the first. The very parochial crowd were cheering our every move. We sat the top of the Victorians order down in order after only 7 pitches. Our starter Jacobs was on fire.\n\nOur turn at the plate saw our two lead off batters both get on base, a hit and a walk. I came out in the 3 slot and after taking a ball and a strike I knocked a ball into the right field corner for a stand up double and 2 RBI's. The crowd were cheering like mad. Looking across to our dugout I could see our team patting our batters on the back and clapping, but no exuberant celebrations. Just above the dugout I could see Fiona and Jess cheering and clapping. I smiled across at them, but kept my head in the game.\n\nJared came up next and cracked the first pitch into the Victorian's bullpen for a home run. I gave a small fist pump as I saw the ball disappear over the fence. I waited at home plate for Jared to round the bases. We grabbed hands briefly and hugged.\n\n\"Keep going. No let up.\" I yelled over the noise of the crowd.\n\n\"Fight till the end.\" Jared yelled back, before we went to the dugout.\n\nBefore heading into the dugout to accept the pats on the back I looked up to Fiona and Jess. They were both cheering and clapping loudly. I gave them a wink before going to join my teammates. Fiona later said she had never seen me so intense while playing as at that moment.\n\nThe game itself was for all intents and purposes over by that stage. We had completely taken the wind out of the Victorian's sails and they seemed to have lost their fight. Jacobs had only two hits off 7 and 1/3 innings pitched and no runs. Our defence seemed to be everywhere the Victorian's hit the ball. The Victorian's got on the board in the top of the 8<sup>th</sup> with a solo shot of our reliever Williams. By then the damage had already been done.\n\nI ended up with 3 hits and a walk from 4 at bats, with 4 RBI's, as we put 12 runs on the board to their solitary score.\n\nAnticipation was trying to be kept in check in the top of the ninth. The bench were all up on the rail cheering us and the crowd were ready to erupt. Our closer Webb went to work and with a strike out and a shallow centre-field fly ball sat down the first two hitters quickly. Looking around I tried to take it all in. I could see my teammates all bouncing on edge. They were all willing the ball to come their way.\n\nWebb put two strikes on the batter after two pitches. He threw the next pitch and everything seemed to go in slow motion. The hitter chopped the ball almost straight back to Webb. He grabbed the ball in his glove and ran towards first. The batter headed up the base line and Webb underarmed the ball to Raphael at first. With my arms raised above my head and I screamed \"YES!!!\" as Raphael caught the ball and touched the base. We did it.\n\nThe next few minutes were a blur. I ran cross to first and jumped on the pile of teammates that were already there. Hugs, handshakes, back slapping, high fives, heart felt congratulations. Some of my team were genuinely overcome and more than a few tears were shed. I sought out my closest mates on the team and our hugs meant so much. Manager Tim sought me out and we hugged. The boys then huddled up and we chanted our team song before spreading out and went to all corners of the ground, soaking in the excitement from our fans.\n\nWe made our way back to home plate and Manager Tim and I were presented with the Claxton Shield trophy for winning the ABL. As we held the trophy aloft the team joined us and showered us with champagne. It was truly a moment to savour.\n\nThe crowds began to head out of the ground but we weren't going anywhere. Our family and friends came onto the field to share in our success. Fiona and I hugged and kissed and she said she was so proud of me. Jess hugged me and said she was proud of me too. My girls stayed there with me long into the night as we celebrated.\n\nWe celebrated as a team with our families and friends long into the night. I was still in my uniform as I hadn't even wanted to change clothes. Sharing this moment with Fiona and Jess meant the world to me. As the night wore on I noticed Jess was over talking with Jared. She seemed really interested in what he was saying judging by how close she was standing to him. I turned Fiona's attention to where Jess was.\n\n\"I don't know if I want our daughter going out with a ball player.\" I said, with my tongue firmly implanted in my cheek.\n\nFiona put her arm around me and smiled before kissing me.\n\n\"Oh I don't see why not. It turned out alright for me.\"\n\n************\n\nAugust\n\nMy cleats made that wonderful 'clickety-clack' noise as I stepped out of the dugout. The sights were so familiar to me, but different at the same time. I had climbed those stairs many times at Fenway Park but today though was special. I was not wearing a Red Sox Jersey, nor that of any other MLB team. I was in my Sydney Blue-Sox jersey.\n\nAs a reward for our team winning the Australian Baseball League title, the owners had arranged for the team to fly to America to play against the AAA rated Worcester Red Sox in an Exhibition game at Fenway Park. This game was taking place early in the afternoon before the Red Sox played that night against the Orioles.\n\nFor the majority of the Blue Sox players this was the opportunity of a lifetime to play in a Major League Stadium. For me though it was that one final chance I never thought I'd have. It was a chance to share what my life had been like with my amazing girlfriend and my wonderful daughter.\n\nIn the preceding six months a lot had changed in my life. Fiona had moved in with me and we were living a wonderful life together. She organised a transfer of her work to a relatively close Sydney branch. With Jess living down here on campus for University there was nothing tying Fiona to living in Newcastle. Having her in my house made it home and we merged our households seamlessly. She truly was the love of my life.\n\nJess loved having her mother closer and our relationship grew and grew. She was a truly wonderful girl I was immensely proud of. She dated Jared for a little while, but that relationship fizzled out. Jess didn't want to be tied down and wanted to live out her dreams. Fiona and Jess both made the trip over with the team to Boston and I loved showing them around the town I called home for nearly 2 years. I showed them where I lived, some of the places I liked to visit, restaurants I liked.\n\nFor me I thought the title winning game would be my last. I couldn't think of ending my career on a better note. I arranged with the Blue Sox to join their coaching staff for the next 3 seasons. Baseball had been my life and to be able to share my knowledge with younger players was the least I could do to give back to my sport.\n\nWe played the game against Worcester, acquitting ourselves well against a clearly better team. We lost 6-3 but played well. I even managed to knock one off the 'monster' for a double which was very enjoyable. There were only a handful of fans there, as well as our family and friends who had travelled over with us to see us play. As the game was wrapping up a few of the big leaguers were sticking their heads out of the dugout to see what was happening. I said hello to many of them and introduced some of my Blue Sox teammates to them.\n\nAfter the game finished, we showered and changed into fresh jerseys. We were all staying for the big league game afterwards as we were to be presented to the crowd before the game started. Our families were all in great seats near the Red Sox dug out and my team was taken down under the stands to the gateway beside the 'Green Monster' to wait to be presented. Standing altogether, everyone was chattering about how great it was to play here, how much fun we had experienced on the trip.\n\nSomeone from the Red Sox management came over and grabbed myself and Jared aside. We were asked to throw out the ceremonial first pitch for the game. Instantly nerves hit me. Our manager Tim joined me. He had a Blue Sox Jersey over his Red Sox jersey, as he was coaching Third base in today's game for the Red Sox.\n\nThe ground announcer came over the PA.\n\n\"Ladies and gentlemen, please turn your attention to the big screen. Last winter for the first time, the Boston Red Sox had a team in the Australian Baseball League. This team, the Sydney Blue Sox, played a great season, finishing the league on top, before defeating the Melbourne Victorians, to take the ABL title.\" As the announcer was speaking highlights of our season were being shown on the screen.\n\n\"Today, we would like to welcome the Sydney Blue Sox to the Fenway Park. Carrying the Claxton Shield trophy are their manager, our Third Base coach Tim Beaufort and Captain, former Red Sox third baseman, Adam Maxwell.\"\n\nWith that they opened the gates and the roar of the crowd hit us. We walked down the field, waving to the fans. I could see some of my teammates had their phones out and were filming our walk. Arriving at the diamond we shook hands with the Red Sox Owners and they presented us all with Championship rings, something we didn't know was going to happen.\n\nJared and I then went and threw the first pitches out and thankfully mine hit the catcher's glove with some force and was reasonably on target. We were all then shown to our seats. Fiona and Jess were so excited after seeing the ceremony and that I got to throw the first pitch. I gave the ball to Jess and kissed her on the cheek.\n\nSitting there I could finally relax as we chatted and watched the game. The girls truly enjoyed the experience of watching a big league game live for the first time. We ate hot dogs, booed, cheered, sang 'Sweet Caroline' and had a great time. The Sox won an easy game 9-2 over the Orioles. As the game was finishing an usher came and told us to stay in our seats after the game. I smiled as I knew what was going on.\n\nWhen the game finished and the MLB players left the field, we were all shown out onto the field, Blue Sox players, families and friends. This was supposed to have happened after our game earlier, but our game ran a little late. We all gathered together and had pictures taken. Everyone was allowed to roam around the field for 15 minutes, just sharing in the experience. Players and families stood at home plate, on the bases, out in the outfield, sharing with their loved ones why we played the game. Everyone was doing their thing.\n\nI took Fiona and Jess over to third base. I showed them where I stood, took pictures of them, of us together. Looking across at Jess I caught her eye and smiled. She grinned at me and lifted her phone. I went and took Fiona's hand and went to third base. She looked at me wondering what I was doing, as I dropped to one knee on the third base, taking a ring box out of my pocket. Instantly she giggled and started to cry.\n\n\"Fiona I have loved you since I was 10 years old. You have been my best friend, my lover, mother of our daughter. Now I'm asking you to be something else, something I have wanted for longer than I realised. Fiona will you marry me?\"\n\nFiona had her hand over her mouth and her face was scrunched up in tears. She was nodding her head vigorously, before her hand came away from her mouth.\n\n\"Yes Adam, yes.\"\n\nI stood up and we kissed and hugged. I could vaguely hear the cheers of everyone else there on the ground with us. Jess came over in tears too and we all hugged together.\n\nNow we were truly a family."
    ],
    "authorname": "demon160",
    "tags": [
        "romance",
        "love story",
        "baseball"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/sliding-into-home"
}