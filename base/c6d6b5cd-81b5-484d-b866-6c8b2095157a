{
    "title": "There and Back Again Ch. 014",
    "pages": [
        "Chapter Fourteen: Staying Calm\n\n We met up with the others, who had just finished their chores as well. With just a nod, Aedan handed the blade off to Sten. He took it, dumbstruck, and Leliana had to grab an arm to drag him with them as they all headed to the tavern to relax for a few minutes before the battle. I went back to the Chantry, as a noblewoman would not be seen sitting and drinking in a local tavern, especially with a bunch of fighters. As they left, I gave Aedan a look and he nodded - I had told him to recruit Lloyd and Berwick, and he remembered. \n\n In the Chantry, I took off my cloak and surreptitiously covered my sword so no one would see. I sat with a very anxious Bann Teagan and tried to raise his spirits. We talked about my pretend family, and though I wasn't claiming a lover in Redcliffe this time, he seemed fascinated by my story of a horrible upbringing with a mad elderly father who never let me go outside. He very seriously told me that he would help protect me from my father should he come looking, and invited me to stay safely in Redcliffe once the castle's undead problem had been dealt with. I wondered if he was flirting with me or just trying to distract himself from his worries. If it was flirting, it wasn't a serious attempt, and it occurred to me that maybe he just flirted with all eligible noblewomen like that. I made a conscious effort to dial it back a bit. I didn't need Theron jealous or any more reasons to be embarrassed among my companions. Or any guilt later, in case he was serious, about misleading Teagan when I knew damn well I wasn't ever going to be any nobleman's wife.\n\n I was unfailingly positive that we would be fine through the night, and my optimism seemed to rub off on him a little. He sat a bit straighter, smiled a bit more, and some of the lines on his tired but handsome face eased. As it happened, the villagers huddled in the Chantry also seemed to pick up on the mood, and soon everyone seemed a bit more hopeful. I offered Mother Hannah help with tending the wounded, which she declined, but when I learned that there were two tiny orphans around, whose parents had been killed the first night of the attacks, I immediately sought them out. They were about two and three, I figured, both walking but only the older talking beyond a few garbled words. I dug through my pack and found them some bread and cheese, kneeling down to their level and offering it by the simple expedient of placing it in their chubby little hands. \n\n I had always been good with children, a result of necessity when living in foster care with multiple kids; I soon was sitting on the floor with the two of them curled up against my side, eating and snuggling their little faces into the fake velvet of my dress. I didn't have any books, so I started telling fairy tales from home as much as I could recall. I soon had a small audience of the other children trapped in the Chantry with their mothers, and I tried my best to keep their minds off what was happening. I told the stories of the little mermaid, and Cinderella, and the old lady in the shoe, even adapting the story of Wall-E to be about golems and a boat that was sailing on a lake rather than robots in space. I talked until I was hoarse, still sitting on the floor, now with two children sleeping in my arms, grateful parents coming to collect the other little ones as they saw that I couldn't keep going.\n\n Aedan, Alistair, and the others came to see me before the locked the doors to the Chantry. I was stroking the soft hair of the two tiny angels who were still sleeping, thumbs in mouths and their heads on my lap. Leliana, eyes bright, helped me settle them on the floor on top of my blanket, with my cloak over them to keep them warm. This revealed the sword I had been hiding under the cloak, and I just shrugged as Teagan gave me a strange look. I left it sheathed, but kept it with me. I hugged each of my companions, including an incredulous Sten and a surprised (but pleased) Alistair, begging them to be careful. Then the Chantry doors swung shut and the bars dropped, Theron and I stuck inside and the rest of our friends stuck outside.\n\n I settled near the Chantry doors, and Theron stiffly sank to the floor beside me. Teagan did the rounds, ensuring everyone was as settled as they could be, then also took position on the floor near us. Teagan again glanced at my sword. I leaned over to whisper softly, so that no one else in the Chantry would hear.\n\n \"I don't think we need to worry, but I believe in being prepared. I am not a helpless child, to sit in here relying entirely on others to protect me. If, by some terrible occurrence, the creatures manage to get through the defenses and enter this building, I will not stand by and watch us all be slaughtered. Whatever it takes,\" I looked back at the tiny kids sleeping curled in my cloak, \"I will not let anything happen to these people. We will fight, and we will prevail, because the alternative is unthinkable.\"\n\n Teagan studied my face in surprise, and I wondered if I had just blown my cover as a noblewoman. I had thought that it wasn't uncommon for Fereldan women to train, to fight, but perhaps that had just been for the benefit of any women who wished to play the game. But as my gaze passed over Theron's face, he gave me a smile and a slight nod (which looked to be perhaps pride?), and I figured I couldn't have blown it too badly. Theron himself propped his shield against his knees, unsheathed his sword and left it close at hand, and gave the impression of being a one-man army. Even Teagan fingered the sword at his own waist, and I knew that, should the worst happen, at least three of us would fight to protect the innocents huddled behind us in the flickering candlelight.\n\n So, we waited. The people behind us slowly seemed to fall into a fitful sleep, and everything became deathly quiet. Only the three of us near the door could hear the muffled shouts and the clash of steel on steel through the enormous Chantry doors. But nothing ever seemed to approach the doors themselves, and the sounds remained soft and unobtrusive. \n\n After a while, I think I drowsed, leaning back against a pillar, chin on my chest, only to wake every few minutes listening to the minutest sounds filtering through the doors. I had no idea of the passage of time, and after a bit got up to pace lest I become too stiff with the sitting. Theron shadowed me, and Teagan did the same, periodically; we were the only movement in the stuffy building. When my legs were no longer stiff, I sat again. In this way, we passed a very boring, very tense night.\n\n I was startled awake by an insistent knocking on the Chantry door. There was a rhythm to it - two knocks, pause, then three more knocks, and this was repeated several times before anyone inside had the presence of mind to get up and unbar the doors. When we did, we were greeted by the sight of a group of villagers, only one or two less than there had been yesterday, crudely armed and armoured, the dwarf and his men, and my companions. Everyone was covered in something sticky, but none of it looked like their blood. I studied each in turn, looking for any sign of injury, and finally allowing a sigh of relief to pass through me once I convinced myself they were all whole.\n\n Teagan gave a short but heartfelt speech thanking each of the people who had fought to defend Redcliffe. Afterwards, I helped to organise the villagers into groups - kids and anyone who seemed squeamish to go gather wood for pyres, the rest to remove valuables from the recently re-dead and drag their corpses to a pile behind the Chantry. Mother Hannah came out to say a few words over the largely unrecognisable corpses and then we consigned them all to the fire. \n\n Inside the Chantry, I consulted with Mother Hannah regarding the orphans. She promised to care for them and try to find them homes, and I left her with a small pile of silver to ensure they had everything they needed. They might end up like me, passed from one resentful substitute parent to another, but I swore to myself that if I was ever able I'd do something to help them. I walked away, after one last snuggle, unshed tears glistening in my eyes. Aedan, who knew a little of my past, wrapped his arm around my shoulder as we walked up the hill to the Windmill to meet Teagan. \n\n Once at the windmill, no one had a better plan, so we chose to do exactly what had been decided in game. Isolde showed up; Teagan gave his ring to Aedan to access the secret passageway. He went with Isolde inside the castle, and Theron and I were to stand by the castle gates with Ser Perth and his men until the rest of the group could fight their way through to open them. With another hug for luck for each of my new friends, I walked to my assigned place and waited again. I could sense Theron getting frustrated, but knew of nothing that would soothe his wounded pride at having been left behind, or his impatience at having to wait around for others to do what he saw as his job. So I sat, exhausted, while he paced.\n\n We ate a quick meal with the knights, then waited some more. Finally we heard a creak as a small door, barely visible through the gates, opened to reveal Aedan's wary face. They filed out of the cellar door, looking around and seeing nothing threatening. I realised that even Morrigan was spattered with blood, but no one was limping or otherwise obviously hurt, so I assumed either the blood wasn't theirs or relatively minor injuries had been managed with poultices. Aedan sent Leliana to open the gate for us. Just as she reached the lever, Prince started barking, loudly, and the hair on my arms stood up. We were about to be ambushed, I was suddenly certain, and it was my fault because I'd forgotten this detail.\n\n As the portcullis rose, so did the bodies strewn all over the ground that somehow we had all managed to ignore. In the blink of an eye, the courtyard was full of rotting undead, archers as well as axe- and sword-bearing zombies, and then the icing on the cake - in the courtyard, nearer Leliana than anyone else, rose a strange, ghostly being, floating above the ground, no real feet or easily distinguished features, just a strangely humanoid-shaped grey blur. Sonofa...that's a Revenant. \n\nA string of curses burst from my mouth as I realised that Leliana was close, too close. I was running, Theron was running, as were Ser Perth and his men, but there wasn't enough time. The Revenant raised its arms, if blobs could be said to have such appendages, and some sort of fel energy gathered between them as it looked at her. I made to stab it with my sword as I drew near, but it seemed to effortlessly flow out of the way. Theron and the knights had all been intercepted by groups of undead. I screamed as the magic gathered, Leliana was already screaming, and suddenly there was an explosion of sorts. Animated corpses started dropping all over the courtyard, like puppets whose strings had been cut. The ball of energy the Revenant had been building just fizzled out, and my sword streaked through where it was still floating, eliciting a high pitched screech. Theron and Ser Perth joined me, and as they hacked at it, chunks of grey mist floated away only to vanish, as did the Revenant moments later.\n\nI finally looked up to see Aedan and Alistair finish off the last few undead, and the courtyard subsided into total silence. Leliana was on the ground, though struggling to get up, and I stepped over to her, pulling her to her feet, assuring myself that she was fine. Apparently almost losing the only girlfriend I'd ever had scared me more than I wanted to admit, and my eyes were leaking. Again with the crying! I turned to find Morrigan staring at us, and I launched myself in her direction, stumbling over to grab her into a fierce hug, thanking her earnestly for her timely intervention with the Revenant. The witch stiffly pulled away, and I heard her mutter something about 'nothing'.\n\n\"It's not nothing, Morrigan! Leliana could have been killed. Thank you.\"\n\n\"You aren't listening to me. What I said is that I did nothing. 'Twas not me who caused that explosion, who interrupted that creature. I was too far away, couldn't even sense the spell that did it. I was out of mana because that oaf,\" she pointed to Alistair, \"accidentally hit me with his templar ability. You should direct your thanks elsewhere.\" Breaking out of my grasp, Morrigan sniffed once, sounding offended, then turned her back and stalked away, digging through a pouch to find a Lyrium potion. \n\nI looked over at my other companions, all of whom looked as confused as I felt. We had no other mage. If it hadn't been Morrigan, who had it been? We all shared suddenly uneasy glances.\n\nSer Perth, oblivious to what had just happened, came rushing up, asking if we were ready to go inside the main hall of Redcliffe Castle. Trying to put aside our worries, I nodded at the same time Aedan did, and so we all trooped slowly up the steps to the main doors. We traipsed through a foyer and a couple of other rooms before entering the main hall where I knew Connor would be with his mother and the enthralled Teagan. Forewarned by my memories of the events, I heard Morrigan mutter the moment she entered the room and suddenly Connor fell over, snoring, surprised by the apostate's sleep spell. Isolde squealed in concern, bending over her son, while Teagan suddenly looked up from the floor where he'd fallen when clowning around to 'amuse' the abomination.\n\nI left Alistair and Aedan to explain, with Morrigan's aid, what was happening. I sank into a chair, near the back of the room, suddenly fatigued beyond what I could ever remember. I felt Leliana's hand on my back, could tell from her voice that she was concerned, but I couldn't even bring myself to focus on her words. Her voice was so soothing, especially when Isolde shut up for a second, and I felt myself sinking deeper. Pretty soon there was just nothing.\n\nWhen I woke, I opened my eyes to pitch blackness. Despite having my eyes closed before that, there wasn't enough light to tell anything about my surroundings. I lifted my hand in front of my face and saw nothing.\n\nThe movement of my arm confirmed for me that I wasn't in some hospital gown, but instead in the commoner dress Leliana had bought for me in Lothering. Okay, still in Thedas then. I felt around me, realising I was on a real bed. I rolled cautiously, putting my feet on the floor and sitting up. Barefoot, toes on a stone floor. I eased myself to stand, then cautiously walked forward, hands out, one small step at a time. I found a wall, and followed it around a corner until I reached what could only be a door. Opening the heavy wooden door with some difficulty, light poured into the room and I breathed a sigh of relief. Damn good thing I'm not afraid of the dark or claustrophobic. \n\nI heard a noise behind me, and spun, hands searching for my sword even as I registered that I was completely unarmed. I heard a small chuckle at the movement, and recognised Leliana's voice. A chair scraped, cloth rustled, and the bard, now wearing a simple linen tunic and pants, stepped into the rectangle of light. \n\n\"It's just me, Sierra. I'm sorry about the dark - I must have fallen asleep and let the candle burn out.\" She stepped out into the hallway, holding something up to the small sconce on the wall opposite the door. A candle, I realised, as it flickered and then lit. Coming back into the room, the small candle gave minimal light, but I could see that we were in a bedroom of sorts, complete with four-poster bed, fireplace (currently unused), and a curtained off area that I guessed contained a chamber pot. There was a small table with a wooden chair, and a larger, padded chair that Leliana had been sitting in.\n\n\"We're in Redcliffe Castle?\"\n\n\"Yes. You passed out, down in the main hall. Alistair carried you up here,\" I grimaced and blushed, \"and a maid helped me get you undressed. They've taken your clothes for cleaning, don't panic. And your sword is over there.\" She pointed at the wall, and I saw my belt hanging from a hook, sword in its sheath. \"I promised Aedan I'd stay with you tonight. He seemed really concerned that you not be left alone.\"\n\nI smiled softly at his thoughtfulness. I never knew having a brother would be so nice! Leliana noticed.\n\n\"He's special to you.\" She gave me a suggestive look, and I almost laughed.\n\n\"He is, but not like that Leliana. He's my long-lost brother, I think.\"\n\n\"Ah. Poor Aedan. And does he know this?\"\n\n\"What? Oh. Yes, of course. It's why he's so protective of me. Really, Leliana. Trust me. It's nothing romantic.\"\n\n\"And what of poor Tomas?\" I blinked.\n\n\"What about him?\" She rolled her eyes. \"Wait, no! It's not like that. If Aedan is my brother, then Tomas is...sort of an adoptive father. Besides, I think he's asexual.\"\n\n\"He's wha..?\n\n\"Uh. Sorry. I mean that he isn't interested in sex, that way.\"\n\n\"Oh!\" Another smirk. \"Don't even try to convince me the same about Theron.\"\n\n\"Oh, he likes sex well enough. But I'm not interested in being his mistress, so...\"\n\n\"I somehow don't think he's entirely given up hope on that front.\"\n\n\"Don't I know it! He's just...not my type.\"\n\n\"Which indicates that there's someone who is your type.\"\n\n\"Nope. Not me. I'm type-less.\"\n\n\"Oh come now, you think I haven't seen it?\"\n\n\"Nothing to see. Truly.\"\n\n\"Uh huh.\" \n\nI sighed. \"I will never be in a relationship with anyone in Ferelden, Leliana. It's just not part of my future.\"\n\nShe searched my face, her own teasing smile faltering, as she realised I was serious. I looked away, feeling awkward and somehow miserable at the same time. Finally I changed the subject.\n\n\"What time is it, Leli?\"\n\nLooking delighted at the use of a nickname, the bard set down the candle and darted over to crack open the shutters on the one small window. \"I think maybe a couple of hours before dawn.\"\n\n\"Is it acceptable for me to be seen in these clothes?\" Leliana examined me critically before nodding. \"Then I think I might go wander around a bit. I'm not tired enough to sleep. Why don't you hop into bed? That chair can't have been very restful.\"\n\n\"Are you sure you don't want me to come with you?\"\n\n\"Yeah. I wouldn't mind having some time to think.\" I pulled on my boots, which got a funny smirk from Leliana, and left, softly closing the door behind me.\n\nI wandered down the hall, stopping to listen at doors as I passed, hearing mostly snoring. Guest rooms, I assumed, containing my companions. I found an open archway that lead to a set of stairs, and crept down them quietly. I spotted an empty dining room, a few more closed doors, and an entryway to the main hall. When I looked into a room that was clearly Eamon's study, I couldn't help myself. I rifled his desk and found Alistair's mother's amulet. I put it around my neck for safekeeping, alongside the one from Leliana, and then left again. I had no desire to look through the Arl's papers and personal effects.\n\nI found a different set of stairs leading up, and crept up them quietly. At the end of the hallway at the top was an open door, leading into an elaborately decorated room. As I wandered towards it, I passed a room with Connor in a bed, Morrigan asleep in a chair by his bedside. A couple of closed doors later, and I stuck my head into what must have been the Arl's bedroom. The man himself was asleep on a huge bed, covered to his chin, his face a strangely ashen grey. I wondered where Isolde was, until I noticed a large, blond man slumped over in a chair by Eamon's bedside. I knew Isolde would never choose to stay in the room with Alistair, so she must have left him there and slept elsewhere. Bitch. And what an annoying voice.\n\nI tiptoed into the room, not wanting to wake Alistair or disturb Eamon in any way. Alistair looked even younger than normal, and sweetly innocent, snoring softly in the large chair. The room was chilly; I looked around and found a blanket on a nearby table, gently drawing it over his sleeping form. I stared at him for a couple of moments, still amazed at how difficult it was to come to terms with this reality. On a whim I slipped his mother's amulet off and carefully tucked it around his own neck, then tiptoed back out of the room.",
        "By the time I made it back into the main hall, the few servants left in the castle had started to stir, and I passed a few people rushing around. They always stopped to bow or curtsy, and it made me feel really awkward. Finally a young woman approached me directly.\n\n\"My Lady? I have returned your garments to your room, cleaned. Would you care for me to have a bath drawn up?\" I nodded eagerly, and she smiled shyly. She ducked her head into a side room, muttering instructions to another servant, and then I followed her up to my room to pick up my clothes, sneaking in quietly so as not to disturb Leliana, and then to a nearby bathing room. Several servants were coming and going with buckets of scalding water, filling a large tub. She showed me an assortment of soaps and the like, and they closed the door as they left. I threw the latch, unceremoniously stripped, and climbed eagerly into the hot water. It was hot enough almost to scald me, but I sank into it, uncaring. I soaked for a while, easing the aches and pains of the last day of travel, and allowing myself to relax. Safe, for five minutes. What a revelation."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-14"
}