{
    "title": "Catalysts",
    "pages": [
        "It was a warm afternoon for the end of October. The sun reflected dramatically in the leaves of our backyard maple tree, and the fiery red matched the cloaks of our centurion costumes. Though their armor was plastic, they looked reasonably realistic. With the tall wooden fence blocking out the rest of the neighborhood, my two housemates looked a lot like a scene from a gladiator movie, had it not been for the beer bottles in their hands.\n\n\"Hey, Alex, do you want another one?\" David asked, noting that my bottle was empty. He pointed to a beer-filled cooler.\n\n\"Nah, I'm good,\" I replied. \"Better not get drunk before the party starts, hey?\"\n\n\"It's another hour 'til the guests come, and, for once, we're ready too early,\" Marco said. \"What shall we do, general?\"\n\nHe referred to me as such because my costume was different from theirs. The cloak was longer, and the helmet had a large plume. We intended to get matching outfits, but the store only carried the officer version in my size, whereas my shorter friends had to settle for the common soldier version. So, to stick to character, I was the general for the day.\n\n\"I guess we should go tell Professor Fredriksen about the party and apologize in advance,\" I said. \n\n\"I ran into her yesterday,\" Marco said. \"Her kid is staying with his dad for the weekend, and she said she won't mind some noise.\"\n\n\"Great,\" I said. \"But let's try to keep the music down. I don't want to get on her bad side.\"\n\nWe couldn't believe our luck when we got the lease for our house. Many landlords wouldn't want three male college students as tenants, but ours didn't care one way or the other, as long as we didn't cause any problems. The house was in a great neighborhood, close to our campus but away from busy traffic. It was at the end of the street and had only one neighbor. Less ideal, that one neighbor turned out to be our history professor.\n\nHistory wasn't what drove me to go to college, but our curriculum required that we took at least one social sciences course. And when we reluctantly went through the list of courses, we stumbled on History of Engineering. It sounded like a loophole but ticked the box. It turned out to be one of my favorite courses, and Professor Fredriksen was no small part of what I liked. Her lectures were always interesting, and she had a charismatic demeanor that made whatever she said interesting. \n\nAnd, admittedly, she was attractive. I didn't usually have a thing for older women, but there was something very appealing about her. She hada sweet, round face with dimples that deepened every time someone correctly answered one of her questions to the class. Needless to say, I came well prepared to every lecture.\n\nStill, I was nervous to have her as our neighbor, especially since all our friends decided that our place was the best place for big parties\u2014one of which was about to happen tonight.\n\n\"Teacher's pet,\" David teased.\n\nI was just about to retaliate when I heard a strange noise. It sounded like a woman in agony.\n\n\"What's that?\" I asked, holding up my hand to silence my friends.\n\n\"Sounds like it's coming from the neighbor's house,\" Marco said. \n\nThere was a dull smacking sound, followed by a meek yelp. Was someone hurt?\n\n\"Are you OK, Mrs. Fredriksen?\" I yelled.\n\nThere was no reply, but the moaning continued. By now, I was convinced she was in pain. My mind raced, trying to make out what was going on. Maybe a robber had broken in. Or maybe she'd just fallen and hurt herself. \n\n\"Kristin!\" \n\nIn no way was I at first name basis with her, but this was no time for manners. Still, there was no response.\n\n\"Come on, let's go!\" I commanded and started to climb the fence.\n\n\"I don't think...\" Marco began, but I didn't care what he had to say. Our neighbor and teacher was in trouble and needed our help.\n\nTaller than my friends, I was the first to make it over the fence. I landed on my feet and scanned around her backyard, searching for signs of an attacker. But instead, my eyes landed on Professor Fredriksen. Her living room had large windows overlooking her backyard. We stared in shock at each other.\n\nAnd we would have been an unexpected sight to appear on her lawn. There I stood\u2014a roman general\u2014foolishly reaching for the plastic sword at my side, as though it could scare off a potential intruder. Behind me, two more centurions dropped down from the fence. \n\nBut her appearance was even more unexpected. She was naked, lying chest down on her couch. The curve of her sizable ass poked to the ceiling, raised by a pillow under her hips. Though there was a voice in the back of my head telling me I shouldn't stare, I didn't have the willpower to look away. One of her arms was wedged beneath her, and her hand had obviously been busy between her legs. Even more shocking, her other hand held a paddle and she seemed to be in the midst of swatting herself. A laptop was open on the coffee table in front of her, and though I couldn't see the screen, I could still hear a woman screaming. Now I recognized it as a mixture of both pleasure and pain. I couldn't tell to what extent the sounds we'd heard came from our neighbor or the porn she was watching. And had there been any doubts about what she was doing, the collection of sextoys next to her computer made it obvious. Her blonde hair partly covered her flustered face.\n\nKristin was the first to react, and she released a cascade of anger, which her windows did little to mute. \"What the fuck are you doing here? Stop staring, you morons! Get the fuck out!\"\n\nShe did her best to cover her breasts with one arm while using the other to projectile the paddle towards us. It banged against the glass. Collectively, my friends and I apologetically held up our hands.\n\n\"We're so sorry!\" I shouted. \"We thought someone was in trouble!\"\n\nWith our tails between our legs, we climbed back to our side of the fence.\n\n\"I'll fucking report you!\", she yelled after us. \"Stupid idiots!\"\n\n* * *\n\nI walked in anxious circles in our backyard.\n\n\"Fuck, fuck, fuck!\" I chanted. \"This is not good. This is not good.\"\n\nSure, the sight of my naked teacher had been nothing but a delight, and the image was forever imprinted in my memory. I had already had more than the occasional impure thought about her. Even though she always dressed conservatively in class, her feminine curves were too apparent to be hidden. She was the ultimate combination of the MILF next door and the hot-for-teacher fantasy. And yet, the erotic sight of her naked form surpassed any fantasy I'd ever had. But all I could think about was how ridiculous I had been, thinking I was going to rescue some maiden in distress.\n\n\"I told you they weren't moans of pain,\" Marco said.\n\nI shot him an angry glance. I vaguely remembered his cautious objection, but this wasn't the time for \"I told you so.\" The way I saw it, our entire futures was at stakes. Could she get us kicked out of the university? And what did she mean by reporting us? To the police? Though our intentions were good, we had broken into her property. I was panicking. \n\nThe sound of our doorbell cut me off. I glanced at my watch. \n\n\"Shit,\" David sighed. \"Is it too late to cancel the party?\"\n\n\"Well, it's a bit late if someone's already here,\" I said, shaking my head in disbelief. I wasn't the slightest in the mood for a party, but maybe a drunken evening could distract me from my worries.\n\nBut when I opened the door, any hope to forget about my neighbor and professor vanished. There she stood in a conservative blouse and skirt, much like I knew her from her lectures. I just gaped at her.\n\n\"Hi, can I come inside?\" she asked and glanced anxiously around her.\n\n\"What? Yeah, sorry...\" I stuttered. \"Of course, please. We're in the backyard.\"\n\nShe followed me through our Halloween decorated house. \n\n\"We're having a party,\" I said, nervously stating the obvious.\n\nMy friends looked dumbstruck when I reappeared with our professor behind me. \n\n\"Hi Kristin,\" Marco said. \"I mean, Professor Fredriksen.\"\n\nDavid just stared at her with his mouth open.\n\n\"I won't stay long,\" she said. \"I just have something I'd like to bring up. Three things, actually.\"\n\nIn many ways, she sounded like she did in her lectures\u2014calm, structured, and professional. But there was no doubt she was nervous beneath the collected surface. \n\n\"First off,\" she began. \"One of you dropped this.\"\n\nShe held up a plastic sword.\n\n\"That's mine, I guess,\" David said, and she handed it to him. \n\n\"Second,\" she continued. \"Am I to understand you climbed over the fence because you thought someone was in trouble?\"\n\nWe nodded in unison, and I was sure she was about to lecture us on how stupid we were.\n\n\"Sorry,\" I said. \"It sounded like someone was in pain. But...\"\n\n\"No, I'm the one who should apologize,\" she interrupted me.\n\nStupefied, we looked at her. \n\n\"Uhm, what?\" I started. \"We should...\"\n\nShe held up her hand to silence me. \"You thought someone was in trouble and acted on it. I always say the world would be a better place if everybody did the right thing one time too many rather than one too few. I just forgot about that when you caught me...\"\n\nShe trailed off, as if realizing she'd just reminded us all of what she'd been up to when we barged in on her property. She blushed but tried to look unperturbed.\n\n\"I shouldn't have yelled at you,\" she said. \n\n\"OK,\" I said, unable to believe my luck. I glanced at my friends and they seemed equally confused.\n\n\"And finally,\" she said. \"I'd like to ask you all a favor.\"\n\n\"Uhm, of course,\" I said. \n\n\"Anything,\" David added.\n\n\"As I'm sure you understand, I would appreciate if you kept what happened to yourself,\" Kristin said. \"What you saw, I mean. I don't want there to be rumors or misunderstandings.\"\n\nCaught up in the worries about my own future, I hadn't even thought about what an incident like this might do for her reputation. \n\n\"Of course,\" my friends and I said in unison. \n\nShe nervously licked lips. \"So, I have your word, then? You won't go blabbering about it with your friends tonight?\"\n\n\"Absolutely,\" I reassured her.\n\n\"Why don't you come over?\" Marco suggested.\n\nI shot him a stupefied look. Normally, Marco was the smartest of us, but this time he appeared outright stupid. Why on earth did he think she'd like to spend the evening with her students, especially after what happened? \n\n\"I mean, you can see for yourself that we don't talk about what happened,\" he added.\n\n\"Uhm, I...\" Kristin began. \"No, I can't. I don't have a Halloween costume.\"\n\nOnce again, her reaction surprised me. Not because she declined the invite, of course. That was entirely expected. But the excuse wasn't what I expected. \n\n\"Not everybody will dress up,\" I said. \"At least not in Halloween costumes.\"\n\n\"Yeah, we don't look very scary, right?\" David added.\n\nI wasn't exactly sure why we were trying to persuade her. Most students don't want to embarrass themselves by being drunk in front of their teacher. But it appeared that she for a moment entertained the idea, and it intrigued me. \n\n\"Wouldn't it be a lot more fun to go to a party than staying home alone?\" I asked.\n\n\"Surely you have something at home you could wear?\" Marco suggested. \"One of the guys last year just came in his hockey gear. If you wear a helmet, no one will even know it's you.\"\n\n\"I don't play hockey,\" she said after a long pause. \"And maybe I'm going to another party. Sorry, I should go.\"\n\nShe suddenly seemed in a rush to leave, as if staying might make her accept our invitation. I followed her to the door.\n\n\"If you change your mind, you're always welcome to pop over,\" I said before closing the door behind her. \n\nIt was odd to talk so casually to my professor. Here I was, inviting her over like some folksy neighbor. Undoubtedly, the incident had changed how we saw each other. We hadn't just caught her naked; she had been pleasuring herself, watching porn on her laptop. And apparently, she'd attempted to reenact some domination scene by swatting herself with a paddle. I felt a stir as the image reappeared in my mind. She looked so vulnerable\u2014her big round ass pointing to the sky. The sight surpassed any fantasy I'd ever had about her.\n\nArousal was followed by guilt. We'd barged in on her for noble reasons, but the thoughts developing in my mind were far from noble. I made a pledge to myself to not let the incident change my perception of her. I was going to pretend we hadn't seen what we'd seen. It wasn't meant for our eyes. Nothing good could come from associating her with what I'd seen. I wouldn't allow myself to even fantasize about my professor anymore. \n\nBut my pledge was soon put to test. \n\n* * * * * \n\nA few hours later, our party was pumping, and I had almost managed to forget about Professor Fredriksen and the incident. The masquerade offered many welcome distractions; most of our female friends had gone with a Halloween clich\u00e9. The house was full of sexy nurses, sexy cops, sexy superheroes\u2014even sexy witches.\n\nA couple of guests were leaving early, and seeing them to the door, I spotted Kristin outside our house. She was sort of loitering, and I got the impression she was working up courage to knock on our door. Still, I pushed that notion away, thinking it was my imagination playing tricks on me.\n\n\"Hi Professor Fredriksen,\" I said, struggling not to imagine her in the state I caught her in earlier that day. \"Is everything OK? We're not disturbing you, I hope.\"\n\nShe looked flustered, as if I'd again caught her doing something indecent. \"Oh, hi. No, I was just...\"\n\nShe trailed off. She wore a long coat that covered her from the neck down, and she straightened a few wrinkles in the fabric with her flattened palm, as if trying to make herself presentable. With nervous fingers, she proceeded to check the buttons, making sure none had come undone.\n\n\"I was just on my way home from a party,\" she continued.\n\n\"Oh, so you went out after all,\" I said. \"Did you have a good time?\"\n\n\"Yeah, it was fun. I decided you guys were right\u2014I should make the most of my free evening. But our party wasn't as wild as yours, I think\"\n\nBehind me, the pumping music blended with drunken conversations and laughter.\n\n\"Do you want to come in for a bit?\" I offered. It went against the notion to not let the incident affect how I interacted with my professor, but we'd invited her over earlier. It seemed rude not to reiterate the invitation now. \n\n\"I don't know,\" she said. \"I probably shouldn't.\"\n\nI was just about to accept her half-hearted decline when David and Marco appeared beside me.\n\n\"Hi Professor,\" Marco greeted her. \n\n\"How's your evening?\" David asked.\n\n\"Good,\" she said and appeared even more flustered now that all three of were there. \"I went to a masquerade after all.\"\n\nMarco lit up. \"Oh, so you found a costume?\"\n\nShe looked nervous and again fiddled with the buttons of her coat. \"Well, yeah. I wasn't planning on going, so I didn't prepare. But I did what you said and wore something I had at home.\"\n\n\"What are you?\" David asked. \"Some private detective?\"\n\nKristin chuckled. \"Oh, no. I used to do a bit of belly dancing, and I decided to wear my costume. It's a bit tight, but it still fits. But I didn't want to walk around town in it.\"\n\nMy eyes were not the only ones dropping to her coat, imagining what she currently looked like underneath. My pledge to not see her in a different light temporarily went out the window. When I returned my gaze to her face, she appeared humbled by the attention but not upset. \n\n\"Great,\" Marco said. \"So, then you'll come inside for a bit?\"\n\nShe hesitated, and it was clear she at least entertained the idea. \n\n\"I shouldn't,\" she said. \"Not dressed like this.\"\n\n\"Dressed like what?\" Marco pressed. \"In a coat?\"\n\n\"No, in my costume, I mean.\" \n\n\"No one will care,\" David said. \"You should see some of the other costumes in there.\"\n\n\"Go on, show us,\" Marco said. \n\nI think we were all stunned by his boldness. It sounded more like an order than a suggestion. My friends and I were far from the stereotype of testosterone-filled college guys who act inappropriate against women when drinking. We were three well-behaved engineering students, all of us with modern views of women and respectful of boundaries. Why did he suddenly think it was OK to be so pushy with our professor? \n\nI was just about to nudge him to back off when something in Kristin's expression made me hesitate. Rather than being outraged, she looked nervously passed us into the hallway. Was she mainly concerned our guests would see her? I shut the door behind us, leaving my friends and me alone with her in the empty street. She faltered a moment, looking anxiously around her.\n\n\"Oh, well,\" she sighed. \"It's not like you haven't already seen more of me.\"\n\nShe blushed as the words left her mouth, and she seemed to regret them. And it was unclear whether she was justifying her behavior to us or to herself. I couldn't tell why she didn't just refuse Marco's suggestion, but at that moment I didn't care. I was too mesmerized by the movement of her fingers, which were busy with her buttons. The cacophony of the party behind us continued, but I felt as if a bubble had formed around us, blocking out everything but Kristin's disrobing. In the gap of her parting coat sparkled gold and sapphire blue, adding to the impression that she was revealing a valuable treasure. \n\nWhen her last button came undone, she took a bracing breath. She let the coat slide from her shoulders and left it hanging behind her with the sleeves around her forearms. A long blue skirt hung from her hips, and its long slits along the front of her legs reached all the way up to the waistband. The skirt was accompanied by a belt of coins and gems, drawing further attention to her curvy hips. In the center of her bare midriff sparkled a belly button barbell with jewel in matching blue. Yet, our attention was primarily drawn to her chest. The sparkling bra alluringly framed her breasts. It became clear what she meant when her outfit was borderline too tight for her now; she was overflowing in a way that made it impossible to not stare.\n\nShe was right, of course. We had caught her far more exposed earlier that day. But that was by accident\u2014now she was exposing herself on purpose. And as far as I could tell, the only reason she was showing us her costume was because Marco told her to. She looked adorably bashful as she presented herself.\n\n\"Is that a face veil?\" Marco asked, breaking our silent admiration.\n\nKristin reached for the light fabric wrapped around her neck like a delicate scarf. \"Yeah. Most belly dancers didn't actually wear them. They were introduced in...\"\n\nShe trailed off. Lecturing for us only emphasized that she shouldn't be dressed the way she was in front of her students. \n\n\"That's perfect,\" Marco said. \"If you wear the veil, none of the others will know it's you.\"\n\nAgain, I was stunned by how pushy he was. Clearly, he didn't share my sentiment to not let what we'd seen change how we behaved around our teacher. Even more puzzling, she seemed equally prone to reshape our relationship. Not in a million years had I expected to find her on our doorstep, purposefully showing us her revealing outfit.\n\nAnd perhaps it was inevitable that the incident would change our dynamic. My friends and I had stumbled on something we weren't meant to see\u2014something she wasn't meant to show anyone. Neither she nor we wanted anyone else to know about it. Whether we liked it or not, the secret tied us together. \n\n\"I don't know,\" Kristin said. \"Someone might still recognize me.\"\n\nShe was obviously intrigued, though I couldn't understand why.\n\n\"Nah, you'll be fine,\" I said. \"Most of the guests are quite drunk by now, and they don't know you're our neighbor. They won't expect you there.\"\n\n\"Come on,\" David added. \"I'll make you a cocktail.\"",
        "\"Don't you want to come in and spy on your students?\" Marco suggested, winking at her.\n\nKristin nervously licked her lips. \"Well, I suppose it's better than them spying on me.\"\n\n\"I'm not so sure about that,\" David said and grinned at her.\n\nI glanced skeptically at my friends. Were they seriously flirting with her now?\n\n\"But what if someone asks who I am?\" Kristin protested.\n\n\"They won't,\" I reassured her. \"They're different groups of friends, many don't know each other.\"\n\n\"And if someone asks, we'll just tell them you're a palace slave,\" Marco said. \"Maybe a gift from Cleopatra herself.\"\n\nKristin looked stunned. But instead of protesting, she appeared to be blushing.\n\n\"I...\" she began. \"I don't think there is any evidence of belly dancers from Egypt at that time.\"\n\nWas that her main objection to Marco's bold suggestion to pretend she was our slave\u2014it might not be historically correct?\n\n\"I'm pretty sure there's no evidence of sexy mummies either,\" David said. \"And there's one in a push-up bra in there.\"\n\nKristin drew a slight smile, but it was obvious she was still nervous.\n\n\"Go on, slave,\" Marco said in a pompous tone. \"Give me your coat and cover your face!\"\n\nKristin froze, and I could see the conflicting emotions blinking in her eyes. Could she really allow a student to talk to her that way, even if the remark was just a jovial attempt to stick to character? But her hesitation only lasted a few seconds. She followed Marco's instructions, handing him her coat before pulling up the veil. A few golden coins dangled from the delicate fabric, and their weight made sure the veil wouldn't inadvertently flap up and reveal her to the other students. Apparently, we were going through with this.\n\nMy heartbeat increased as I opened the door. I felt like we were smuggling Kristin behind enemy lines. She was probably right that not all the students wanted her there. At the same time, I didn't want her to get a bad impression of us or our friends. She'd become one of my favorite teachers, and Marco's change in attitude towards her made me wary. I lead the way in front of her, feeling I should safeguard her against drunk students. My heart skipped a beat when a girl from our class, dressed in an increasingly failing witch costume, approached Kristin in a stumbling shimmy. But the girl staggered away without striking up conversation. It seemed I was right; no one recognized Kristin or even pay much attention to our new guest. \n\nI led us into the kitchen. That's where we kept the alcohol, and we had promised Kristin a drink. David was the one with the greatest bartender skills among us, and we left it to him to sort something out for her. While she watched him mix her cocktail, I took Marco aside to have a serious talk to him. I looked around, cautiously making sure we weren't overheard. \n\n\"Hey, let's make sure we don't make her uncomfortable,\" I said. \"She must be feeling really embarrassed about what we saw.\"\n\nMarco nodded. \"Yeah, for sure.\"\n\nHe took a sip from his beer, his eyes wandering to Kristin. He watched her in silence, but obviously had something more to say.\n\n\"And yet, here she is,\" he said eventually.\n\nI gave him a puzzled look, pressing him to continue.\n\n\"Do you remember that lecture,\" he said. \"The one she gave about the importance of mistakes in technical breakthroughs?\"\n\n\"Uhm, yeah, I think so,\" I said, not understanding why he suddenly changed the subject. \"You mean how that guy stumbled on the pacemaker when he put the wrong component in a device meant to record heart rhythms?\"\n\n\"Exactly,\" Marco said. \"And the microwave was discovered by accident when someone tried to fix some radar equipment.\"\n\nI nodded. \"Yeah, pretty interesting. But what's your point?\"\n\nMarco shrugged. \"Not sure. Perhaps that sometimes mistakes lead to interesting discoveries. We weren't meant to see what she was doing in the privacy of her own home. But we did. And now\u2014for the first time since we moved here\u2014she suddenly decides to come over. And...\"\n\nHe trailed off as Kristin looked over to us. It was odd to have her in our home, dressed like a sensual belly dancer\u2014our palace slave, according to the characters Marco made up on the spot. Bright blonde, she didn't look much like a gift from Cleopatra. \n\nI wondered what she looked like to the guests who didn't know who she was. Her bare midriff didn't look like the others around, and her curvier hips suggested she wasn't a woman in her early twenties. But in no way was she any less appealing to look at. If anything, she stood out as exceptionally erotic to my eyes. She was a grown woman who\u2014for whatever reason\u2014decided to spend her evening with us in a costume clearly meant to attract attention. I tried to tell myself that a belly dancing outfit didn't necessarily mean to convey sexuality, but it still seemed daring given her otherwise professional demeanor. \n\n\"What do you think she was watching on her computer?\" Marco asked, startling me out of my train of thought.\n\n\"Porn,\" I said, too distracted not to be blunt.\n\nMarco chuckled. \"Yeah. And it sounded like a woman being dominated. Spanked, right?\"\n\nI nodded, and the image reappeared in my head\u2014Kristin with the paddle raised over her ass.\n\nDavid gave her a cocktail with a straw, allowing her to sip it without removing the veil. They approached, David leading the way.\n\n\"What is this?\" he asked, taking on an imperious voice. \"Our general doesn't have a drink!\"\n\nMarco took on a stern expression. \"Slave, get the general a beer!\"\n\nKristin nodded. \"Oh, where are they?\" \n\n\"In the cooler on the porch,\" David said.\n\nOur eyes followed her as she walked away, her coin belt rattling with her steps. \n\n\"Well, this is interesting,\" David said, giving us a knowing smile\n\n\"What?\" I asked, feeling annoyed. It would be a stretch to describe David as dim. Sure, he was goofy, but though he often had to struggle, he always passed his classes in the end. Still, if Marco had the sharpest mind in our group, David was typically the naivest. And yet, it appeared he now had grasped something I hadn't. That bothered me.\n\nDavid grinned. \"Is it just me, or does she kind of like to take orders?\"\n\nMarco shook his head. \"No, it is not just you. The question is\u2014what do we do about it?\"\n\nKristin came back inside, beer in hand. Even in the dim light, I could see that she had a few wrinkles around her eyes, again revealing that she didn't belong at a student party. Yet, I felt that she was tied to me in my friends. Maybe it was hard to read her with the veil covering most of her face, but her eyes seemed to be pleading for something, though I couldn't understand what. \n\nMy mind wandered back to when we caught her earlier that day. What had gone through her mind those slow-moving seconds from when we unexpectedly appeared in her backyard until her anger took over and she began yelling at us? Was her delayed reaction just shock, or was it a sign that she wasn't sure how to react? Had a part of her considered a different reaction? I tried to shake off the idea, but my friends' words echoed in my head. They were right\u2014she didn't seem to mind taking orders from her impromptu masters. \n\nThe drunk witch stumbled past us again and made her way to a makeshift dance floor that had formed in our living room. A small group was slowly swaying to the music. On a whim, I came up with a test to see just how much Kristin was prepared to follow the character Marco assigned her. \n\n\"Dance for us,\" I said.\n\n\"I...\" she began, and it was clear that her first reaction was to protest. But nothing came out.\n\nAnd as if she couldn't possibly object, Marco quickly changed the music to something more suitable for a belly dance performance. David escorted her to the dance floor, and the small crowd cheered and formed a circle around her. \n\nShe was obviously hesitant to dance for her students. But after looking to us for support, her hips started cautiously rolling with the music. It was enough to warrant another cheer from the audience, and it seemed to spur her. Her hips intensified, rising and falling with the beat. The rattling of her coin belt emphasized the rhythm and drew attention to her ass. Her twirls caused a centrifugal lift of her skirt, and for a brief second, it was high enough that I could see she wore underwear in a matching blue color. \n\nEven if it had been a while since she last danced, she still had skills. It was impressive that she managed to keep her head still while the rest of her body gyrated and swayed, adding a distinct elegance to her increasingly sensual moves. It also made sure her face was safely covered beneath her veil. \n\nMy eyes were repeatedly drawn to the sparkling jewel in her belly button. Lots of my female friends had such piercing, and I wouldn't normally pay much attention to it. But on Kristin it emphasized that there was a lot more to her than the professional surface presented in class. Underneath hid a sensuous woman with passions and desires. And if I had sexual fantasies about my teachers, was it unthinkable that she had some taboo desires about her students?\n\nThe crowd enthusiastically clapped along with the music. But from the way she kept looking at my friends and me, it was obvious who she was dancing for. She playfully shimmied, and her heavy breasts swayed with her movement. The coins that dangled from her bra drew further attention to her chest. I glanced at David and Marco, and they seemed as enthralled as me. \n\nAnd as her movement grew bolder, it became increasingly obvious that her bra was a size or two too small for her. As she swayed, more and more of her breasts escaped their confines. Before long, her areolas became visible above her cups. I was certain I wasn't the only one who noticed, and it was likely part of why she rained down such enthusiastic applause when the song ended. \n\nI noticed a fair few of Kristin's other students in the audience and cautiously decided it best to escort her away from the crowd before someone approached her. She would have been embarrassed to be recognized even before her tits were halfway out of her bra. With David and Marco behind us, I led her back to the kitchen.\n\n\"Very nice,\" I complimented her, not sure myself if it was for the dance or the sight of her breasts escaping her bra. \n\n\"Oh my god!\" she yelped, realizing what our eyes lingered at. \n\nShe instinctively reached to adjust her bra, but I held up my hand to stop her.\n\n\"Wait. Shouldn't you ask first?\"\n\nIt was surreal to hear the words coming out of my mouth. I held a deep respect for this woman, and here I was, suggesting she needed permission to put her tits back in her bra. But I was growing increasingly convinced she wasn't craving our respect. She lusted for something entirely different.\n\nAnd this was the Litmus test. I needed to see just how devoted she was to abide by our instructions. Her eyes were wide with shock as she stared back at me, and for a moment I was sure she was going to start shouting at me again. Yet, she slowly lowered her hands. I could hear her breath tremble as her chest rose and fell. \n\n\"May I cover up?\" she finally asked.\n\nThe words hung in the air. How embarrassing must it not have been for her to ask this from her students? What little I could see of her face was blushing deep red, and I was certain it wasn't just from her vivid dance performance. Yet, the tone of her voice was resolute. \n\n\"You may,\" I said eventually. \"But you must continue to entertain my soldiers.\"\n\nShe nodded. \"How...?\"\n\nI wasn't sure myself what I expected her to do, but her dance had been a treat to watch. I wanted more. And from the way she'd been looking at us while dancing, I was certain at least a part of her wanted nothing more than to continue her performance for us. But our kitchen wasn't the right place, I thought. Arousal was thickening in our bubble, and it was too risky to let it escalate further so close to prying eyes. Our party needed to move elsewhere.\n\n\"Take us to your place,\" I commanded.\n\nDemonstrating her compliance, she gave a slight nod and headed for the front door. My friends and I followed. No one spoke as we made the short walk over to her house, and the expectant silence continued all the way inside.\n\nWe had to step over a few toys in the hallway, but these weren't the only signs Kristin was in a very different place in her life compared to us. Unlike the collection of cheap chairs and tables we'd scrambled together for our place, her furniture actually matched. On the walls hung paintings in styles I couldn't name, but all of them were very different from the band posters that decorated our walls. As we silently made our way through her house, I peeked into her office and noticed a pile of student reports she was grading. Clearly, Kristin was a classy woman, a mother, a professor... and yet, she'd let three of her students escort her back to her place for something I hoped was going to be unfitting for a woman of her stature.\n\nWe stopped once we reached her living room\u2014the same space where we'd caught her earlier that day. This time, however, she made sure there wouldn't be any interruptions; she systematically lowered the blinds to block out the outside world. Only our strange alliance mattered\u2014a mature woman and her three young owners. \n\nIn the meantime, my friends and I shed our plastic helmets, chest plates, and swords, placing them in a pile on the floor. I still felt the need to hide behind our characters, but there was no need for armor to enjoy a private show from our favorite slave. Dressed in our red tunics, we lined up on her couch, with me in the middle and my centurions next to me. \n\nOnce the blinds were down, Kristin remained standing. And why wouldn't she? We hadn't yet told her what we wanted her to do.\n\n\"Dance for us again,\" I said.\n\nWithout hesitation, she put on suitable music and started to move with its rhythm. Her body undulated in mesmerizing waves that accentuated her hourglass curves. She turned slowly with the music, emphasizing the rhythm by punching with her hips. \n\nHer moves were less playful than when she danced at the party, as if the thick anticipation in the room impeded her movement. Her breasts rocked heavily as she swayed before us. Yet, she wasn't shimmying with the same energy as she had back at our place, and there was no hope her tits would escape her bra. At least not by accident.\n\n\"Take off the top,\" I commanded.\n\nI was growing familiar with the thrill of commanding her. It was undeniably erotic. But this was a tall order, and I gave it while she was dancing with her back towards us, as though the lack of eye contact made my words less outrageous. At first, nothing in her movement indicated she'd even registered my order. Still facing away from her audience, she just continued to sway with the music, and I eventually started to wonder if she deliberately defied her instructions or if she hadn't heard me. I was building up the courage to reiterate my scandalous command. \n\nBut there was no need. She reached for the clasp behind her. We watched as her nervous fingers struggled, but she was resolute and eventually managed to unhook her bra. She stayed like that for a long time, her undone bra hanging from a shoulder. I couldn't tell if her silence was begging for mercy or another push to go through with it. But she got neither. She held her breath and yanked the bra from her shoulders in a rapid motion. She threw it aside, as if holding on to it might give her the opportunity to put it back on. \n\nThere she was, topless in her living room with a very excited audience. With her back towards us, we could only see the side-curves of her large breasts. It was an arousing sight, but I craved more.\n\n\"Turn around,\" I said.\n\nEver so slowly, she obeyed. She glanced over her shoulder, and it seemed the sight of her audience made her grasp the reality of what she was doing. The second she was about to expose herself, her hands leaped up, cupping a breast in each palm. Her hands were far too small to completely protect her modesty, but at least she managed to keep her nipples covered. \n\nShe barely moved with the music anymore. There was no mistaking the struggle inside her. On the one hand, she obviously wanted this\u2014to let us admire her\u2014to let us command her. But it was crazy. We were her students\u2014the last people in the world she should let see this side of her.\n\nBut as we locked eyes, my gaze was apparently enough to sway her. Without further instructions, she lowered her hands. \n\nAnd there they were\u2014Professor Fredriksen's tits in all their glory. Certainly, her breasts hung lower on her chest than the women I'd previously had the fortune to see topless. But in no way was she any less sexy. In fact, the way she bravely exposed any imperfection made her the most desirous woman I'd ever laid my eyes on. The fact that she obviously was a mature woman emphasized that she by most standards should know better than to expose her submissive side to her students. And yet, here she was, ready to obey our commands. \n\nShe resumed her seductive dance. Freed from their confines, her breasts swayed mesmerizingly. Had there been any doubt that performing for us excited her, her nipples certainly gave it away. They stared back at us at full attention.\n\n\"And the rest,\" I said.\n\nKristin didn't seem the slightest surprised. Presumably, she'd known the moment she decided to compliantly take off her top that we'd push her further. Not breaking her enticing dance, she untied her coin belt. It made a rattling noise as she dropped it to the ground. \n\nShe turned away from us and eased her skirt down. To make sure it wouldn't inadvertently shift while dancing, the elastic hem was tight, and she leaned forward as she wiggled it over her hips. It gave us an enticing view of her round cheeks. Her blue panties weren't a thong, but they were cut high, leaving most of her voluptuous ass exposed.\n\nAfter stepping out of her skirt, she turned back around. A narrow strip of sheer fabric covered her most intimate parts, matching the color of the veil that still covered her face. And she seemed to understand that \"the rest\" included her panties. She ran her fingers over their hem, repeatedly hooking her thumb inside. \n\nBut each time she started to pull her panties down, she soon stopped. Slowly rotating before us, she repeated this over and over, growing bolder each time. Soon, she lowered her panties low enough that we got to see her cheeks dividing above them\u2014but only for a second. Similarly, turning to face us, she pulled down in the front just enough to give us a glimpse of her pubes before letting the hem snap back. In part, her slow progress was likely because she was building up the courage to go through with it\u2014to strip completely before us. But she also seemed to have accepted that her purpose was to excite us, and her teasing certainly did the trick. Yet, I decided it was time my friends and I gave her a helping hand.\n\n\"Come here,\" I said.\n\nShe seemed surprised to receive another order before completing the previous one, but she didn't object. She stepped over in front of the couch, and my friends and I took time to admire her up close. Then, without warning I reached out and grabbed the front hem of her panties. Kristin gasped, but did nothing to stop me. It was intoxicating to literally have what was left of modesty in my hand. \n\nYet, I didn't pull down. Since I got on board with Kristin's desire to be at our disposal, I had taken a leading role. Sure, I was the one with the general costume, and as long as we were hiding behind our characters, it made sense that I would hand out the orders. But with our armor removed, our tunics didn't convey much hierarchy. And to push this further, I needed my friends' active participation. Their eyes were transfixed on my hand, waiting for me to reveal what we all wanted to see.",
        "\"Together,\" I said.\n\nDavid and Marco were slow to snap out of their trance, but eventually they grasped what I was suggesting. Just like me, they hooked their fingers into the hem of Kristin's panties. In a slow and synchronized movement, we pulled down, stripping our teacher. She awkwardly held up her hands, and I couldn't tell if it was to stop herself from interfering or if she was signaling her complete surrender.\n\nWe let her underwear fall to her feet, and she remained standing in front of us, passively letting us drink in her nakedness. Her chest heaved with her excited breath, and her trimmed pubic hair did little to hide her glistening wetness.\n\n\"Now, dance,\" I commanded. \"Naked.\"\n\nOnce again, she started to sway to the hypnotic music. But I held up my hand to stop her.\n\n\"Naked,\" I reiterated. \n\nIt was amusing to me that she'd saved her face veil for last. It seemed she wanted this last barrier to hide behind, as if concealing her face might hide that it was really her\u2014our respected professor\u2014who was standing there naked before her students. But I wasn't prepared to give her that refuge. It took her a moment to react, but eventually she pulled the veil off, revealing her flustered face. Her predicament was stunningly erotic to watch. \n\nBut her embarrassment didn't stop her from obeying. She resumed her dance, swaying seductively before us. She was dancing close to us now, and our eyes travelled up and down her body, taking in her every detail. She blushed a deeper red every time our eyes lingered at her pussy; she knew we could see how excited she was to perform for us. But embarrassment didn't dissuade her. On the contrary, it seemed to incite her. She rocked back and forth, deliberately making her tits rock before our eyes. And when she turned to dance facing away from us, she catered to our hungry eyes by making her ass sway compellingly. \n\nWhen the song ended, she looked nervously over her shoulder. She seemed uncertain what to do next. So was I, but there was one thing my lust-drunk mind was certain of\u2014no one in the room was prepared to end this night. My eyes once again dropped to her round cheeks. The first time I saw her curvy ass, she was lying in the same couch I was now sitting in. The flashback inspired me. \n\n\"Lie down,\" I said and patted my lap.\n\nShe may have been shocked by her new command, but there wasn't a hint of disobedience. She simply lay down across our laps, trying but failing to retain some of her modesty by keeping her legs together while climbing on top of us. I was no longer surprised by her compliance. I understood just how deeply she craved to be controlled\u2014to be relieved of responsibility.\n\nAnd her natural submissiveness drew out parts of me I didn't know existed. I felt a strong desire to dominate her, and the sight before me was inspiring. She was lying where we first caught her reenacting what she was watching on her computer, and just like then, her big, round ass now poked to the ceiling. But her hips were supported by my lap instead of a pillow. Without hesitation, I ran my hand over her thigh and up over the curve of her inviting ass. She panted with excitement.\n\nShe must have expected what was about to happen, but she still gasped in shock when I slapped her ass. I soothingly rubbed the point of inflection before landing another blow on the other cheek. It was breathtakingly erotic to watch her ass move with the impact. As I continued, I spanked her along the curve of her ass to emphasize the rocking movement. \n\nWith the music gone, the room was silent beyond heavy breaths, Kristin's gasps, and the impact of my hand against Kristin's ass. Sure, we could still hear the party pumping over at our place, but the outside world seemed insignificant. Only our bubble mattered\u2014the four of us and the roles we had accepted. Kristin's head rested in David's lap, and she awkwardly dug her face into the fabric of his tunic, as if trying to hide her shame. Equally condescending and comforting, he patted her head.\n\nMy prior experience with spanking was minimal, to say the least. Yet, at that moment, it felt perfectly innate. Big and round, her ass appeared perfect for the purpose. And it wasn't just her body that made it feel natural to dominate her. She was radiating submissiveness. When I paused my spanking, she arched her back, instinctively making her ass inviting.\n\nHer cheeks had developed a pinkish tone, and it made my head spin with lust to see the proof of what I had done. Yet, I hadn't been spanking her hard. I sensed that the significant inflection for her was the mental torment of submitting to her students. And I knew her ass needed to last. I glanced at my friends.\n\n\"Stand up,\" Marco said.\n\nKristin pulled her face out from the protective blanket she'd made out David's tunic. As she rose to her feet, she appeared confused and disappointed that her spanking might have stopped already. But even if I wasn't sure what Marco had in store for her, I was convinced her precious agony wasn't over. \n\n\"On the table,\" he commanded and pointed to the coffee table in front of us. Making his intentions clear, he placed a cushion for her knees on top of it.\n\nSlowly, she eased down on her hands and knees on top of the table. Perpendicular to her audience, she stared straight ahead to avoid eye contact. For a long time, we just sat there, marveling at the sight. Her arched back offered an inviting presentation of her ass. \n\nEventually, Marco rose. He stepped over to the other side of her, making sure David and I had a good view. He ran his hand over her back and down to her ass. He lingered there, greedily roaming over her cheeks. I smiled. Clearly, I wasn't the only one with an obsession for her sizeable, round ass. She whimpered softly when he finally slapped her.\n\nAs he continued to spank her, I sat back and watched. It was nearly as exciting as spanking her myself. The mixture of pain, pleasure, and embarrassment in her face was a delight to watch. The way her tits pendulated with the impact of Marco's hand added to the carnal eroticism of the scene.\n\nDavid also observed for a long time, but eventually he decided to join in. He rose from the couch and stood opposite Marco. Kristin clearly had fantasies about being spanked, but I wondered if she'd ever imagined ending up on the receiving end of multiple domineering hands. \n\nContinuing to slap her, David and Marco ran their free hands up her body towards her tits. I heard them grunt as they reached their target. This was an opportunity I couldn't forfeit, and I soon joined in. The three of us circled our slave, spanking and groping her. Most of the time, she had at least one hand pulling at her thick nipples.\n\nI could only imagine what might be going on inside her head as she passively held her pose while we helped ourselves to her body. Occasionally, she let out a moan, and it seemed like the evidence of how much she enjoyed her ordeal embarrassed her as much as the ordeal itself. But embarrassment appeared to be a large part of her excitement.\n\nOur groping hands soon found their way to her pussy, and her moans rose each time someone circled a finger over her clit. She was invitingly open, and I ran my finger over her slit a few times before pushing inside. She squealed as I continued to pump my finger in and out of her. Somewhere in the back of my mind I must have known how crazy this was; I was fingering my teacher! But at that moment, I was unable to focus on anything other than my current purpose\u2014to dominate this marvelous woman.\n\nBut this was a shared adventure. I withdrew, knowing she wouldn't be left empty for long. We continued our rotating scheme, hands and fingers playing with our pet. Her moans escalated, and she repeatedly approached the point of no return, only to be deprived as we traded places. \n\nStill, our pet deserved her reward. Eventually we silently agreed on pushing her over the edge. David pumped several fingers in and out of her cunt while I focused on her clit. Marco tended to her tits, tugging at her thick nipples. To give her the final push, David and I started spanking her ass with synchronized slaps.\n\nHer wailing as the orgasm took her sang with gratitude. She trembled out of control. Yet, it didn't distract us from our mission; we drove her through her climax with steady hands. She collapsed her arms and fell forward, resting her chest on the table.\n\nShe stayed like that through her aftershocks. We removed our hands and marveled at the sight. Her capitulated pose left her even more exposed. Her cheeks were parted, and we stared straight Professor Fredriksen's asshole, on display for our prying eyes. \n\nShe must have realized how indecent she was, and she tried to straighten her arms again to retain some minimal modesty. But Marco stopped her with a hand on her shoulder. He knelt down and whispered in her ear, yet loud enough for David and me to hear.\n\n\"Your toys\u2014where are they?\"\n\nHer breath shivered as she pointed to an inconspicuous black box sitting on a smaller table next to the couch. It wasn't until Marco opened it that I understood what he was after. It was full of sex toys. I assumed this wasn't where she usually stored her pleasure box and that she'd planned to continue what we interrupted earlier that day. Yet, she unlikely thought we'd be there to finish it with her. \n\nI had noticed the toys she'd laid out on the coffee table when we barged in on her backyard, but I was too absorbed by the image of my naked teacher to register exactly what they were. Marco, however, seemed to have paid more attention to her collection. There were several butplugs in the box, and without hesitation, he picked a mid-sized one with a sparkling blue jewel at the base. Kristin stared in disbelief at the toy in his hand, but she obediently held her pose. \n\nMarco was in no rush. He teased her with the tip of the toy, running it up and down the valley of her parted cheeks. But he never ventured to her sensitive center. Kristin hugged her arms around her head, and together with her blonde hair, they provided a shelter in which to hide her embarrassment. But her body betrayed her. When Marco grazed within an inch of his target, she emphasized her arching posture, silently begging him to give her what she now craved. He removed the toy, and for a moment I thought he heartlessly called off what he'd started. But instead he reached into the box for some lubricant and coated the plug. She gasped when he placed the slippery tip at her rim and began circling. Her asshole appeared to repeatedly open and tighten, as if clasping for the toy. But her body didn't move. Submerged in obedience, she left it to her owners to decide if and when she'd get what she craved.\n\nMarco placed the toy at her opening, but he didn't push inside.\n\n\"Push back,\" he commanded.\n\nKristin obeyed, and pressed back against the toy. But Marco withdrew before she got more than the tip. They repeated this pattern over and over, and Kristin rocked back and forth, each time stretching her hole slightly further around the plug. She let out a grateful moan when he finally pushed the toy all the way inside. We stared in awe at the sight of the sparkling jewel between her cheeks. \n\nTunics turned out to be a good garment for the occasion; I was certain my erection wasn't the only one appreciating the latitude of loose fabric. But I was rock hard by now and felt a need to escape my underwear. And while the contrast between our naked pet and her clothed owners added to her erotic humiliation, it was time to take this party to another level. My friends had the same idea, and we all disrobed.\n\nNaked and invaded, Kristin continued to hide her face. But eventually she grew curious about what was going on behind her. By the time she peeked back over her shoulder, we were naked. Her eyes widened in shock. Though she couldn't be surprised we'd stripped down, being faced with three towering erections asserted the reality of what we were in the midst of.\n\n\"On your knees,\" David said. \"On the floor.\"\n\nWithout hesitation, Kristin slid from the table down on the floor. Her eyes wandered among our swaying erections as we approached. She stroked her blonde hair behind her ears and looked up at us with pleading eyes. \n\n\"Go on,\" David said.\n\nShe went for his cock first, touching him only with her tongue. Awaiting my turn, I watched as she systematically explored every inch. And I didn't have to wait long. She knew she had several masters to please and moved her tongue along to me. She tasted me with long, sweeping lashes. On some level, the experience was surreal. Here was my teacher\u2014on her knees and worshipping my cock! But looking down at her, it felt surprisingly natural, like we'd aligned inherent parts of us that flourished in our bubble.\n\nWhen she shifted over to Marco, I glanced at the piles of costumes on the floor. Oddly, I found myself thinking of chemistry. It was nerdy, of course, and totally unwarranted for the situation. Yet, I couldn't help thinking about a recent lecture about catalysts\u2014substances that facilitate chemical reactions through alternative pathways for the process. Our costumes and the roles we assigned ourselves had served that very purpose. Along with our inadvertent breach of her privacy, they had allowed us to morph into this alternate state\u2014a reality where it was entirely befitting for a mature woman to submit to a group of young men.\n\nAnd just like in chemical reactions, our catalysts weren't needed to uphold the new state. They had served their purposes and we no longer needed to hide behind our characters. We weren't roman soldiers; we were three college students with a burning desire to sexually dominate our submissive teacher. She was not a gift from Cleopatra; she was a gift from herself, willing to serve.\n\n\"Open your mouth,\" Marco said.\n\nA part of her must have felt deeply humiliated, looking up at us with her mouth gaping. But she was too far gone to hide her submissive urge. She waited obediently, her mouth open and ready. Both Kristin and Marco moaned as he finally fed her his cock. He pumped back and forth, gradually pushing deeper inside her mouth. \n\nBut he didn't occupy her for long. We took turns, fucking her mouth with increasing intensity. With smearing lipstick and saliva dripping from her chin, her face grew messier with each thrust between her lips. It would be stretch to say her appearance was classy, but there was certainly something adorable about her demeanor. She'd bravely torn down all barriers and was revealing her devotion to sexual servitude in all its glory. The stark contrast to how she usually presented herself emphasized her sluttyness. \n\n\"Lead us to your bedroom,\" I said, pulling my cock out of her mouth.\n\nShe started to rise but stopped. Instead she placed her hands on the floor and crawled on her hands and knees. It may have been in part because her knees were too weak with excitement to stand, but it also conveyed that she'd fully accepted her position as our obedient pet. Eyes drawn to the blue jewel between her round cheeks, we followed her.\n\nReaching her bedroom, she crawled onto the bed but kept her position on her hands and knees. We climbed on the bed and encircled her. Her ass was pointed at David, and he didn't falter. He placed his cock at her cunt and pushed inside, filling her deep with a steady thrust. Her mouth fell open in a muted scream. \n\nClasping my hand in her hair, I guided her mouth to my cock. We were far too high on excitement for a slow build-up, and we drove her with determined force. The sight of her heavy tits rocking with her movement added to the wantonness of her display. Marco began playing with them, pinching at her nipples. The sensation quickly became more than she could handle. Even though it was only minutes since her last release, she came again, trembling uncontrollably as we fucked her through her climax. \n\nI felt my own need for release build, and it was getting increasingly difficult to hold back. But I knew we were not done. After a brief pause to let her recover, we started a new rotation scheme, taking turns on her mouth and cunt. I could feel the plug in her ass press against my cock as I slid back and forth inside her. And as I pressed my hips against her ass, my pelvis pushed the toy deeper, increasing the pitch of her muffled moans. \n\nThe position however made it challenging for her to include her hands in her servitude. Still inside her, Marco grabbed on to her hips and pulled her along with him as he fell back. He steadied her on top of him, and David and I encroached on her sides, giving her hands and mouth access to serve our cocks as she rode Marco. \n\nDavid left the room for a moment, and when he returned, he'd fetched the paddle from her box of toys. I thought at first he was going to use it on her ass like we'd caught her about to do to herself. But I soon realized he had other plans. The paddle was flexible, and he used it to trace the outline of her massive tits. Kristin responded by straightening her arms against the bed behind her, instinctively pushing her chest out to let him do with her as he pleased. She probably expected it, but still yelped in shock as he slapped her breast.\n\nAs she continued to bounce on top of Marco, David and I began passing the paddle between us, taking turns at spanking her tits. The impact was never hard enough to inflict more than a sting, but it emphasized our commitment to dominate every part of her. Never in my wildest dreams had I imagined sharing an experience like this with my friends. Yet, it felt right. There was no better word to describe it. It seemed to me her desire for submission was so vast that it took three domineering men to match it. \n\nWhen it was David's turn to occupy her cunt, he made her straddle him face to face, allowing him continued access to her tits. Marco fed his glistening cock into her mouth, and she greedily lapped up the essence of her own excitement. I watched for a moment, marveling at the sight. The blue jewel shimmered like a lure between her cheeks as she bounced on David's cock. \n\n\"Go for it,\" Marco said. \"All at once.\"\n\nHe'd noticed where I'd been looking. I wasn't sure why I was going to have the privilege of taking her ass, but I could tell he was struggling to hold back much longer. Repeatedly he had to pull her hungry mouth away from his cock. Also, we had long since checked our egos at the door. We were a well-oiled machinery with the sole purpose to dominate our collective pet. \n\nI fetched the lube from her box and made sure she watched as I coated my cock. She stopped bouncing and stared with nervous amazement as I prepped myself. Clearly, she understood what was about to happen. And once my cock was slippery and ready, I slowly pulled the plug from her ass, leaving her temporarily empty. She fell forward, resting her chest against David as she obediently waited to be filled again. She was our submissive slut, and she knew it.\n\nI aligned my cock with her hole and pushed forward ever so slightly. A submissive yelp escaped her mouth as I stretched her. I repeated my thrusts, each time going slightly further. Though my cock was much thicker than the toy, her ass offered little resistance. Soon I had worked the tip past her rim, and she wailed in the rhythm of my thrusts as I continued to gradually push deeper inside her. \n\nOnce my hips pressed against her ass, we gave her a moment to adjust to the sensation. But not for long. Soon, we were pistoning in and out of her every orifice, finding a synchronous rhythm. The sensation of her tight ass around my cock was a mind-blowing treat. \n\nAnd it was a treat for our pet too. Her triple penetration drove her ecstatic. Repeatedly, her escalating moans indicated she approached yet another orgasm. But we slowed our grinding each time, forcing her to dwell a moment longer in her state of complete surrender. ",
        "But it was getting increasingly hard to control my own climax. And judging from my friends' strained grunts, I could tell they were struggling too. When she next approached her point of no return, we didn't stall her. Instead, I slammed harder against her ass, pulling her back over the cocks that filled her cunt and ass with a steady grip of her hips. \n\nEven with Marco's cock between her lips, her grateful moans as she trembled into ecstasy were ear-shattering. Had I cared about the outside world, I probably would have worried that our friends still partying at our place next door might have heard her. But I cared only about what was happening in our bubble. We slapped her already rosy ass, emphasizing her submission throughout her release.\n\nAs she came down, she rocked slowly back and forth. Still filling her ass, I could feel the shivers of her aftershocks on my cock. And I needed my own release. Yet, Kristin was spent, and it was getting obvious that she couldn't take much more. We allowed her to slide away, and she collapsed onto her back. \n\nHer eyes wandered among our throbbing cocks, all of which were ready to burst. It seemed we all had the same idea of how to end this extraordinary experience. She stroked a few blonde strands from her face behind her ears, and we encircled her, David and Marco from her sides and me straddling her chest. She still shimmered with that submissive glow, looking up at us with pleading eyes.\n\n\"Please,\" she whispered. \"Mark me as your slut.\"\n\nThese were the first words she'd uttered since we entered her house. And they were enough to push my friends and me over the edge. We erupted in unison, showering our grateful pet with cum. Her orgasmic aftershocks returned, making her quiver as white strands splashed across her face. Our excitement had been building for hours, and our collective eruption seemed to go on forever. She gaped wide and swallowed gratefully all that landed in her mouth. \n\nWhen our shower eventually subsided, she looked up at us with gratitude, a gentle smile breaking out on her cum covered face.\n\n\"Thanks,\" she said. \"That was...\"\n\nShe trailed off. We all knew there were no words to describe what had happened. She sat up and looked down on her chest, watching as cum dripped onto her tits. Spent, no one seemed to be in any rush to move. \n\nThinking back on the evening, it was obvious I'd been right\u2014she hadn't been craving our respect. Yet, as she sat there a slutty mess, I couldn't help but feel a great deal of admiration for her. It had taken a lot of guts to so brazenly live out her deepest desires.\n\n\"Do you mind if I go clean up?\" she asked eventually.\n\nShe was still asking for permission, but her voice now sounded more courteous than meek. I could tell she was gradually transitioning out of submissiveness. She disappeared towards her bathroom and soon thereafter we heard the shower go on. \n\nWhen she came back out, we had gathered our things and\u2014in lack of other options\u2014put our tunics back on. Kristin had put on a robe and wore a towel wrapped into a turban around her hair.\n\n\"Going back to party, hey?\" she asked.\n\n\"Uhm,\" I began. \"We should probably make sure everyone's still alive.\"\n\n\"Unless you prefer we'd stay, of course,\" David added.\n\nKristin chuckled. \"My ex-husband is coming over with the kid in the morning. No offense, but I rather not explain why you're here.\"\n\nWe laughed for a moment.\n\n\"But before you go....\" Kristin continued. \"Can I ask you for another favor?\"\n\n\"You can relax,\" Marco said, thinking he knew what she was about to ask. \"We're not going to tell anyone about what we did tonight.\"\n\n\"Yeah,\" I added. \"If someone asks where we've been, we'll just tell them we had to fight off a Carthaginian invasion.\"\n\nI winked at her, and Kristin broke out in one of her signature smiles, her dimples turning into deep valleys. \n\n\"That sounds good,\" she said. \"Thanks. But I already assumed you weren't going to tell anyone about this\u2014and frankly I don't think anyone would believe you!\"\n\nI chuckled. \"Fair enough. So, what it is it?\"\n\n\"Well...\" she began. \"I have another free evening in two weeks. Any chance you guys are free then? I can cook you dinner and...\"\n\nShe trailed off, and the submissive blush returned to her face.\n\n\"And...\" she continued, her voice tentative. \"Well, maybe after dinner you can do whatever you want with me?\"\n\nWith a lack of appropriate words, we all nodded enthusiastically, and she thanked each of us with a tender kiss on the cheek. We left, knowing that our neighborhood had just gotten even better.\n\nThe end\n\n- - - - -\n\nThis is an entry to the Halloween contest. Don't forget to vote if you liked it. A big thanks to Dazmine for her valuable editing. "
    ],
    "authorname": "tomlitilia",
    "tags": [
        "butt plug",
        "costumes",
        "facial",
        "mmmf",
        "professor",
        "slave",
        "spanking",
        "submissive female",
        "teacher"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/catalysts"
}