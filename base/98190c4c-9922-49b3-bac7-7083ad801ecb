{
    "title": "Medusa: Fate's Game Ch. 12",
    "pages": [
        "~~Chimera~~\n\n\"The sun will be rising very soon,\" he said.\n\n\"Fuck. Fuck fuck. We can't sneak into the city come sunrise. Fuck.\" The little queen stomped around, and punched him in the leg. She was only a little thing, and her punches were powerful enough to send her back a foot or two across the grass from its own force. Fate's Children punched hard, and he winced as her knuckles hit muscle. \"Your fault.\"\n\n\"I am sorry.\"\n\nThe adorable bundle of fury rolled her eyes, and looked around at the terrain. Definitely not a nice place to be, against the cliff side with the trees thick and tall, tight against massive boulders.\n\n\"We'll need a place to stay for the day then. Hide from the manticore and all that.\"\n\n\"Medusa and I killed many. The noise would have attracted nearby manticore, if there were any nearby. Their bodies are hidden in the earth and woods.\" A bit of a boast, but the night had been very successful. Smiling, he leaned back against one of the huge boulders, and let his body slide down against it until he was on his butt, on the soft grass.\n\n\"So you think we'll be safe out here?\" Otrera walked over his legs \u2014 she had to make a tiny hop to get over them \u2014 and marched the little area they were in. It wasn't a cave, but it was an empty area in the midst of the trees and rock. Good enough to sit and rest.\n\n\"I smell no manticore, and I doubt any will find this place.\" Barely more than a hole in the ground. \"We will be safe. I will hear or smell any that approach.\"\n\n\"Guess I'll have to get some sleep here then. Staying up all day right here though? Ugh, going to get bored.\" She threw herself onto the grass on her back, and stared up at the sky through the small cracks in the canopy. The clouds were starting to break with sunrise, and while Chimera knew the sun had yet to pierce the horizon, the stars were managing a quick peek at them from the sky before they'd inevitably fade.\n\n\"Sleep,\" he said. \"I will stay on guard.\"\n\n\"Always on guard! Come on, why can't you sleep like us?\" Weightless, the little Amazon jumped back up onto her feet, and stood between his legs. With her standing between his ankles, and him sitting, he was still a little taller than her.\n\n\"It is difficult for me to fall asleep. To find slumber can take hours, perhaps a day.\"\n\n\"Hmm. Maybe try sleeping for a couple days then, stay up for ten? Us humans get pretty exhausted without regular sleep.\" Otrera started to undo her armor. A leather cuirass, custom fitted to her small but fit body, no doubt. A metal band covered over her right breast, strapped tight to her chest. Metal guards covered her right wrist and left shin, and leather straps dangled from her waist. All of it was placed on the grass, along with her sword and shield.\n\n\"Whatever happened to your second sword? It worked well against Bellerophontes.\"\n\n\"Left it with the resistance. They needed an extra sword, and a shield is better when you're trying to survive the fight.\" She winked at him, and took off her sandals. Soon she was in nothing but a tunic, and she raised her arms to stretch.\n\nHis eye caught her body as she did. There was little light, with the trees tall, and the sunrise young, but he could still see well in the dark. He could see how her short tunic exposed her legs when she raised her arms, how her small body was hard with muscle, but curved with a woman's physique.\n\n\"... you staring at me?\" she said, and stepped closer to him until she was standing directly in front of him, between his legs.\n\nPerhaps she could see better in the dark than he thought.\n\n\"I am.\"\n\n\"Yeah well, I'm going to take a nap. Keep your hands to yourself. We're supposed to be having less sex, remember?\"\n\nHe grumbled and looked to the side. \"You initiated last time.\"\n\n\"... yeah, that was my fault, wasn't it?\" Chuckling, she stepped up onto his leg, and balanced on it with her bare feet, walking up and down its length. \"But I didn't expect you to bring us closer to them! Nearly had an orgy.\"\n\n\"I saw your eyes on the serpent, and thought you would want to be closer.\" Something about seeing Otrera intrigued by the pleasure of Medusa was indeed beguiling, and arousing.\n\n\"She is so damn curvy! I bet her tits feel like the softest pillows.\"\n\n\"Did you have sex with women often in your tribe?\"\n\n\"I did. Much as I like big muscles, there's something really hot about a woman's body, you know? Maybe it's huge breasts, small breasts, a great ass, legs, the waist, or a really nice, tight little pussy. But women have a certain something to them that men just don't.\"\n\nHe quirked a brow and tilted his head to the side. \"It sounds like you would enjoy touching Medusa's body.\"\n\n\"... I kinda would, not gonna lie.\" She walked up his leg until she was near his chest, and leaned against his shoulder with one hand. \"Not really interested in Darian, and I don't think Medusa's interested in you \u2014 she likes softer things. But if we... uh, have sex next to them again, would you mind if I... I don't know, did a few things to her?\"\n\nHe could see her blush, even in the night.\n\n\"May I watch?\"\n\n\"Ha! Dirty bastard. Yes, of course you can watch. And I wouldn't even touch her if you weren't there. We're in a relationship now, remember?\"\n\nHe nodded, and raised a hand to stroke his beard as he smiled. The other hand reached out, and he placed it on her hip along her tunic. His hand was big enough to almost completely circle her waist, and he offered her a gentle squeeze of her hard stomach. \n\n\"Relationship.\"\n\n\"Yeah. I'm in a relationship with a thousand-year-old giant. Older.\" One of her hands drifted down to his wrist \u2014 she couldn't get her grip even halfway around it. \"But I'm a little afraid of him. He's huge, and has a habit of running off alone to do scary things.\"\n\nAt least she avoided mentioning the beast. But it was still true, he was scary creature, and every time he exposed a bit of himself to Otrera, he must have frightened her more and more. He lowered his gaze again, but she reached out and pushed his chin up.\n\n\"Want to make me a little more comfortable then?\" Her eyes lit up like fire. The Amazon was still standing on his leg, with one hand braced against his shoulder so she could lean into him. It let her other hand drift free, and slide up and down his bare chest.\n\n\"... I thought you wished for sleep, and that I was to keep my hands to myself.\"\n\n\"I'll sleep better after a good fuck. And you will keep your hands to yourself.\" More chuckles. There was something devious in her eyes, like a sneaking weasel. She stepped off his leg and stood in front of him between his thighs. \"Got that? No touch. In fact, keep your hands on the ground.\"\n\nDevious did not do her grin justice. He nodded, and set his palms down against the grass and rocks beside him. What would the little vixen do? Not touching her would be difficult; it always took some willpower to not fuck her hard enough to damage her. And no doubt, she wanted to be sure he was truly in control, and not a slave to his beast.\n\nHe was not a slave to his beast. He was not. Keeping his hands at his side was a small price to pay to prove that.\n\nOtrera slipped off her tunic with a much slower grace than usual. She dipped her hips left and right, gradually, and smiled at him as she slid the fabric from her shoulders and laid it across his leg. The limb was more than thick enough to keep the fabric from touching the grass. But he barely noticed, his eyes locked onto the dancing woman as she slid her hands up and down the abs of her stomach, up her hard arms, and across her pert breasts, small and delicious against her hard chest. Not as muscular as he, but muscular nonetheless, fit, strong, with feminine curves highlighted by muscle definition rather than buried by it. Her nipples were small, a darker shade than her skin, and already starting to stand upright.\n\nLikewise, his member hardened against his loincloth. But he was not allowed to raise his hands, and he would not. Even as images of the woman trapped underneath him, mewling, cumming on his cock filled his mind. He wanted to wrap his hands around her, pin her to him, sink her balls deep onto him, pound her tight flesh until she was squealing, and gushing over him while he filled her with his seed.\n\nBut he was not allowed to move, and he wasn't going to.\n\nShe undid the knot of her loincloth and set it upon his leg next to her tunic. Her hands slid down her legs, her thighs, and as she did a few slow turns, she squeezed her large, powerful ass for him. A blatant dance, something he never expected the warrior woman to do, let alone without request. Her hands slid between her thighs again, down to her knees, and back up to the thickest part of her developed legs where she squeezed them.\n\nThe sun was only just starting to pierce the forest, and beams of light cut through the leaves and between trunks to find and hit the dark warrior's naked body.\n\n\"This is fun,\" she said. \"I mean, I love a hard fuck. And I admit, I really do love feeling helpless in your hands.\" Enough blood pumped into his erection to make it painful against his loincloth, and it only got worse as she stepped a little closer, and reached down. Her hand found his only piece of clothing, and she pressed her palm against it against his cock. \"But sometimes a girl like to show off.\"\n\n\"... you have many sides I did not anticipate, Otrera.\"\n\n\"You have no idea.\" Grinning, she reached around to the sides of his loincloth, and undid the knot. The animal fur was quite large compared to her, the size of her torso, and she laughed as she set it onto his leg next to her own underwear. \"In public, I'm hard as stone, because I have to be. But in private?\" Fingers found his cock, and pushed against the underside to press the heavy, malleable shaft to his abs. She caressed the underside with the tips of her fingers, from his heavy testicles underneath, up to the swollen and sensitive tip.\n\nHis breathing quickened, as did his heart rate. Sex between the two of them had become quite comfortable, but he was always in charge. He hadn't expected the queen to reverse the role; but as her tiny hand slid up and down his shaft, he was growing happier that she did. Her eyes were half-closed, her own breathing faster, and her gaze fell to his stomach and the shaft she'd laid along it.\n\n\"You are a very sexual creature,\" he said.\n\n\"I am, and I like that you are too.\" Her weight fell forward as she put her hand to his chest. With him on his butt, and her standing in front of him, she could reach all of him easily. Fingers gripped his cock tighter, though she couldn't circle his girth with her fingers completely. \"And it's a good thing I'm a Fate's Child now. Much as that whole situation is horrible, it... well, I can fuck you as much as I want without needing a week break between bouts.\"\n\nSexual indeed. She was talking to him, but it was his member she was staring at, squeezing, stroking. He could smell arousal grow on her with each passing second. Touching him was arousing her.\n\nAnd her touching him was doing more than arousing him. The warm tingling pleasure of his fluids starting to build underneath his testicles stirred his quiet rumbles, and he opened his mouth to let the rumble sound vibrate in his throat and chest.\n\n\"You sound like a purring... very very large animal,\" she said.\n\n\"Do I?\"\n\n\"Yeah. It's... do it more often.\" She lifted her hand along his cock, and teased her fingers along the sensitive flesh. He shuddered, and rumbled a little louder. \"You vibrate when you do that! I can feel it.\"\n\nHer hand grew faster, and she squeezed his shaft a little harder. His rumbling returned, and her strokes grew faster once again.\n\n\"Gods this thing is as long as my forearm.\" Chuckling, the little queen got down onto her knees in front of his cock, and pressed her elbow to his pelvis beside his testicles. She compared his erection to her forearm; it was indeed the same length, and thickness.\n\n\"You have no shame,\" he said. He did feel a little odd with how casual she was about comparing their body sizes. Of course, the comparison only made him want to fuck her all the more. Perhaps that was her plan? To push him to the edge to see if he'd break.\n\n\"Me? I remember you took advantage of me that first night, when I was tied up. Remember?\" Her smile grew, and she put both her hands around his member. One hand squeezed the thickness closer to the top, while the other squeezed closer to the base. His cock molded to her grip, just a little, and she giggled \u2014 an unexpected sound \u2014 as she made the malleable phallus bend in her grip slightly.\n\n\"Enjoying yourself?\" he said.\n\n\"Yes!\" She punched him in the lower section of his abs, and grinned to follow. \"I've had a varied and fun sexual history as Queen Otrera. Men, women, satyrs, nymphs, werewolves. Different cocks, different things to admire. Yours has veins like a man, and the underside here is soft like a man's. But it's a little more flexible, a lot heavier, warmer. And... gods, fitting this inside me? I can feel the veins, the bumps in texture when it spreads me apart, the way the tip's softness stretches me in deep enough until I feel like I'm going to burst.\"\n\nHe blinked. The woman was an animal, of a different kind. Her breathing was hot against the underside of his shaft, and her whole body was leaning in closer and closer to his erection as she explored it. He knew he had a large sex drive; apparently it was the one similarity in their odd quartet. But Otrera was growing more and more sexual every day.\n\n\"... no centaurs?\" Evidently, she delighted in reminiscing about her sexual history. And maybe a little more conversation would prevent him from raising his hands, pinning her to the grass, and fucking her senseless.\n\n\"No. Not that I have anything against the idea, just never had the chance. They're as prone to fight as fuck; not good for relations with a tribe of women.\"\n\nAs if things couldn't get any harder for him, she set one hand around his testicles to caress them with massaging fingers, while the other pressed against the underside of his member near his glans to pin it to his abs. She massaged it as well, thumb sliding up the sensitive flesh and sending sparks down the length, into his pelvis and core as her thumb caught precum on the tip. It was her turn to groan as she massaged the wetness into his ripe glans, and pull more rumbles from him. And rumble again when she leaned in, and planted slow, tender kisses up and down the underside of his cock.\n\n\"You are... very comfortable with sex.\" His fingers dug into the grass and dirt as more of his warm fluids started to build. Fingers around his testicles, massaging them in her small palm, made each wave of cum that pooled into his growing need feel warm, inviting, and gentle as her hand fondled underneath his shaft. \n\n\"I'd be lying if I said I wasn't. But... never really... just craved it constantly... like with you. Never really wanted to do something like this... just... because...\" Her hands slid up, worked together to encircle his girth near the tip, and guided his cock toward her mouth.\n\nWhere her fingers had been pleasant, her mouth and tongue against his glans were bliss. The gentle sparks of pleasure were no longer gentle, but powerful waves of delight that made his cock twitch in her hands as she suckled on the tip. She couldn't fit it into her mouth, not completely, but she made do as she kissed along its underside, moved her lips around to suckle the base groove of the bulbous tip, and finally wrapped them around the top half of his glans.\n\n\"I will... cum soon,\" he said.\n\nShe smiled around his cock, and lifted her mouth. \"You can put your hands on me. But no control! Just touch.\" With a wink, she put her lips back onto his glans, and made slow, long, loving licks along edge.\n\nFinally. He raised his hands, and put them around her hips and back. She was such a tiny thing, sitting between his thighs on her knees, hands and lips on his cock. But her touch was Elysium, and he rumbled deeper, into his belly as he felt his pleasure growing. Pouring warmth rose into the base of his cock, and he flexed his pelvic floor to keep from erupting.\n\nBut his obvious efforts to keep his climax at bay only seemed to entice the demon between his legs. She grinned up at him, hands stroking him harder, faster, while her suckling lips were unending. His rumbling grew louder, and his hands on her tightened a little. But he didn't stop her. He forced his hands to hold still, and his mouth opened with another deep rumble as the hot fluid started to flow up his length.\n\nAnd still she did not stop. The final drop of his precum fell onto her roaming tongue, only to make her chuckle, before at last the first gush of his cum poured into her mouth. His breathing came to a hard stop, his body flexed tight as that first wave sent trembling pleasure down his length into his pelvis, along and underneath his testicles, and back up into his shaft as flexing muscles earned a second wave of fluid. It too flowed into Otrera's mouth, and overflowed. White cum squirted out of her mouth where her lips were locked around the tip of his cock, and ran down his length onto her hands.\n\nIt was a lot of cum. She giggled again, and as his fluid flowed out of her mouth, she slipped one hand down his length and massaged his testicles once more, while the other squeezed and milked at his length as best it could. Her mouth stayed on him, kissed and licked at the tip of him, and coaxed more waves of pleasure into his length. And as he stared down at the tiny warrior, he could see she was swallowing as well. He could not tell how much of his seed she was drinking, but she seemed determined, and leaned her head into him to pull more of his cock's head into her lips. The pleasure grew almost painful as she kissed and suckled, as more cum flowed up into his cock, and out into her mouth.\n\nAnd the sight had him frozen. She was milking him, pulling his seed from him, and as her mouth overflowed, his cum trickled over his shaft and down his length until it was dripping onto the grass. His hands, each half the size of her torso, stroked her naked body, fingers caressing her spine and shoulders, as the tiny queen returned the gesture with both hands around his cock.\n\nWhen the last drop of his cum rose to the tip, she ran her tongue over his glans, and pulled away her lips with an audible kiss before she swallowed.\n\nBut she didn't stop playing with him. Her hands still squeezed his girth, and now that it was coated in cum, her fingers moved through the mess of white to continue stroking him, massaging him, working his cum on his skin. Pleasure forced his inner muscles to flex, and forced another drop of his cum to the tip of his length that she again licked away.\n\n\"You taste like... a beast,\" she said. Her eyes were locked onto his body, his shaft in her hands, his stomach, and where his cum was dripping around the base of his length down his testicles. Her breathing was heavy, loud, and her nipples were not only hard, but glistened with a touch of sweat. She was shivering, and he could smell her copious arousal in the air.\n\n\"... thank you,\" he said, \"for pleasuring me, I mean.\"\n\n\"Come on, you big dumbass. If we're going to try... you know, 'us', you can dispense with thank yous.\" She stood up, hands dripping with his cum, and she pointed down at the grass. \"Lie down.\"\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~Otrera~~\n\nUs. Us? She liked the sound of that. The Amazon and the giant, roaming Greece, defeating enemies, living off of the land. The ridiculous, juvenile, absurd, silly idea got her heart beating faster.\n\nThe big lug, normally the aggressive and dominant, was listening to her and doing what she wanted. And there was a quiet click in her mind when he did. Always she was the submissive one when they had sex, always she did as he told, let him control, indulge in letting him do things to her. But seeing him do exactly what she told him? She hadn't realized him capable of taking orders, of controlling himself just to please her.",
        "Just to please her. Her smile grew, her heart beat faster, and a tingling sensation started to run up and down her spine, and into her thighs and toes. Maybe she'd always thought of him as the dangerous guy that was only good for a lay. Now... more than just a lay.\n\nGood gods she was turning into Medusa.\n\nBut she kind of liked that too. The giant was lying down for her, smiling at her, and setting his massive, hard body down on the grass for her. Just because she asked.\n\nAnd of course, cum was dripping from her hands, his cock was coated with it, and she could feel her own juices on her thighs. If she waited any longer, she was going to die.\n\nSo she walked beside the lying giant, and stepped up onto his abs. Walking on his stomach, her weight wasn't even enough to indent his muscles. He raised a brow as he looked up at her, and she chuckled. And jumped a little too, from the ball of one foot to the other against his hard stomach. Chimera looked at her like she was crazy, but it only made her laugh more.\n\nWhen was the last time she had genuine fun? Fun in the bedroom, fun not worrying about taking care of other people. Fun just for herself? And fun for someone else too. Gods, just relaxing for the first time in so damn long? So damn fucking long.\n\nShe chuckled, and got down onto her knees, facing the colossal slab of stone and muscle. Their sex was always a messy business, and after resigning herself to a need for a bath \u2014 maybe find a hidden little stream in the forest \u2014 there was no need to be concerned with getting messier. Messy was fun too. She slid herself back along Chimera's abs, and set his huge cock between her thighs, pointed up along his stomach.\n\nAnd she let out a slow, deep sigh as she sat herself down on his cock, her pussy against its underside as it lay across his abs. Giant or not, his cock wasn't stone, and she treated it with a soft touch as she slid her sex's folds back and forth along its girth. He was soaked in white, and she groaned as she felt the warmth of his cum coat her entrance. The beast's body was too wide for her to set her knees down against the ground around him; she had to rest her knees against his lower abdomen instead, her ankles back between his thighs, feet underneath his testicles, his cock laying between her shins.\n\n\"This really is ridiculous,\" she said. \"You've cum enough to drown someone. And... still... hard?\" She could still taste his cum on her lips. Not a good flavor, but in the haze of arousal and need for a serious fucking, the smell of sex and sweat and cum mixed into an aphrodisiac. And she was spreading it over her snatch as she slid herself back and forth against the base of his cock. A giant's cum that she'd drunk, and more than a little.\n\nShe was riding a giant. The shiver went up her spine again, and she pressed her fingers down against the array of muscle before her. She was too small to reach his head while straddling his cock, but she could still reach his chest, and her wet fingers traced lines down his pectorals and onto his abs as she shifted her hips against the underside of his member. Her clit, swollen to the point of pain, demanded to be touched by something hot, something wet and inviting, and the cum-soaked underside of his cock was doing that just fine.\n\nShe reached down, and with both hands, cupped the other side of his cock to raise the heavy phallus and press it to her body. With her cunt sitting against the base where it connected to his testicles, she held his length along her abs where it went well past her navel until its swollen glans sat between her breasts. She knew it didn't go that deep, as it subtle softness and malleability meant it conformed to her insides \u2014 at least, a little. Still, holding the absurdly huge cock against her body, comparing herself against its, rubbing her abs and clit on it, had her quivering. Her own juices were joining the mess.\n\nAfter laying his cock back down against him, she slid herself further up along his abs, crawling on them on her hands and knees. And once she was kneeling in the middle of his chest, she reached down between her legs underneath her, grabbed his cock near the tip, and guided it toward her aching muscles. This wasn't going to be easy, she realized. She tried to back herself up against it, but with how big it was, it pressed against her entrance, only to get pushed back by her own efforts. His erection wasn't hard enough to keep it perfectly straight and pointed at her.\n\nShe laughed. And a good thing it wasn't, or she'd be dead.\n\n\"Help me out here.\"\n\nChimera nodded, reached out to take her waist in one hand, and slid her back until she was again seated at the base behind his shaft. Then he raised her up, and with his other hand, took his cock and pointed it up to her entrance.\n\nAnd then he started to lower her. She tried to maintain eye contact, but the overwhelming sensation of being stretched open, having her muscles spread to the limit as his glans slid into her clenching pussy was too much. She looked down, and moaned at the sight of her lips spread until she was taut, and his white cum was being pushed down by her clenches.\n\nOnce she was halfway down, she tapped his hands, and the giant put them back on the grass. She had control once again, with almost half a foot of the beast inside her. Already she could feel him at her cervix, and she had to stop, take a breath, and look down again. Her abs were starting to show a subtle bump where his cock filled her; any thicker and she'd probably split apart.\n\nBut she managed him, and she loved doing it. With half of him inside her, her own hand around his cock was enough to keep him aligned while she sank herself lower.\n\n\"Gods... deep enough... to...\" Her head was swimming. The sensation of his girth, his veins filling her, sliding into her, rubbing against her g-spot while his glans stretched her deeper, and deeper, it all sent warm sparks out into her legs and up into her core. Everything was soaked in sex, and it was only getting worse as she sank more of him into her insides.\n\nChimera didn't touch. Good. He did as he was told, watched, waited, but she could see the struggle on his face. He desperately wanted to grab her, and slam her down, sink her balls deep, and fuck her like an animal. And maybe later they could do that; Fate's Children healed fast, after all, and a little bruising from hard sex was worth it. But for now, she wanted control, she wanted to see the deadly giant relax, lean back, and enjoy a little passivity.\n\nHer moans turned into groans, and as the inches disappeared, she put both hands onto his stomach again to brace herself while she sank her ass toward his pelvis. Always at that last moment, always when she felt like he'd skewer her stomach, her butt found the curves of where his thighs and pelvis connected.\n\n\"Fucking... finally.\" Deep breaths, deep breaths. She felt dizzy, and exhausted. But she'd managed him, and she slid her legs out so she could sit upon him proper, her ass molding to the grooves of his body while her feet rested upon his sternum. A normal man would have had her feet next to his head, but Chimera was too damn tall, and as she set her legs out along his abs and chest, her heels stopped on his sternum.\n\nShe leaned back, one hand on his massive right leg behind her to brace her weight, while her left hand drifted up and down her abs. The subtle distension of her body went past her navel. She could feel her poor little cunt getting stretched wide enough and deep enough to hurt. But every movement, every twist and turn and shift of her hips, it all pressed his cock against her sensitive flesh enough to make her skin tingle, her breath come out in pants, and her toes curl.\n\n\"Are you ok?\" he said.\n\nAw! The big bad giant was worried about her. She giggled \u2014 oh gods she sounded like a child \u2014 and folded one ankle over the other, heel on his chest, legs out straight along his abs. She'd been giggling a lot today, she realized.\n\n\"You've really changed,\" she said. \"Would old Chimera have been able to sit there and let me have my way with him?\" She started to move. Just a little, just enough to feel his girth fight for space inside her, for the friction of it to send more sparks into her legs. The pressure of his warm cock against her deepspot was making her shake, and her juices continued to spread out over the mess.\n\n\"... no.\" He raised his hands, and set them upon her legs and feet. But he did not move her, or interfere, only lightly caress her ankle, her calf and shin with a thumb as he watched her. Perfect.\n\n\"I didn't realize it when I first met you. You say little, but think a lot. I can appreciate that.\" While one hand stayed behind, weight against his leg so she could continue to lean back, her other drifted down to her clitoris. The tiniest touch on the overly sensitive nub of flesh made her tremble.\n\n\"I believe I have been thinking for too long.\"\n\n\"Agreed.\"\n\nShe smirked at him, and refolded her legs again, one foot over the other. Without missing a beat, Chimera moved his hands, let her adjust, and resumed pampering her legs. Ah, to be a queen again. All the while, she continued to masturbate, stroking and caressing her clitoris and her swollen flesh around it, bringing her closer to orgasm; and the beast did not move. He must have been dying to, with how she was quivering on his cock, and she could see the hunger in his eyes too. But the giant stayed still, and watched.\n\nAnd she came. A sharp pleasure, one that hit her quick and fast from her clitoris. Her legs spread apart, and the giant let them fall off the edges of his waist until they were dangling off his sides. Her back arched, and her hands planted themselves against the legs behind her as she leaned back, and let the pleasure work through her. Her mewls were getting louder, and her body felt like it was on fire.\n\nShe braced her weight against his abs as she recovered, leaned forward with hunched shoulders, and took a deep breath. Chimera's hands, already by his hips, reached up for her ankles and knees again, and held her legs in a gentle grip as she came on his cock.\n\n\"Any... manticore... hear that?\" she said.\n\n\"No.\"\n\nConfident, wasn't he? She chuckled, and sat up straight again. Her hands roamed up her naked skin, his cum that had touched her stomach and chest, her nipples that demanded some caressing, and the inside of her thighs where his cum was pooling against the groove of his hip and her leg. Her juices were joining it.\n\nWith another deep breath, she started to shift her hips back and forth. Immediately she stopped, and shivered. It wasn't easy to be the one doing the fucking, not when her insides were stretched to their limit, and every motion was a euphoric combination of a touch of pain buried in pleasure. Stretched to bruising, but gods, she did love it.\n\nShe tried again, focused harder, and started working her hips side to side. Side to side was easier, and she got into a bit of a rhythm with it as she stared down at the giant's stomach. But when she tried front to front, the pleasure waves started to build up again. Fighting them off wasn't easy, and certainly wasn't the usual goal, but she wanted this to last. She leaned back again, and tried shifting her hips around in a figure eight while her hands pressed to the colossal legs behind her, back was arched to point her breasts skyward.\n\nShe was loving it, and it wasn't just the fucking. There was a certain joy to looking good while fucking, to entice the partner's eyes with your movements, your dance. And Chimera was watching like a starving animal, mouth open, fangs exposed, and breathing coming in pants not too dissimilar to her own. If she pushed him too far, he'd crack and start fucking her hard enough to do more than just hurt a bit. That thrill again, racing up her spine, making her hips move faster, knowing what he wanted to do to her while she danced on his cock?\n\nShe came again. Deeper this time, deep inside where his cock was stretching her. Instead of a sharp explosion, the pleasure came out in waves, pouring through her, into her toes until they curled, into her chest, up into her neck until her head fell forward. She wriggled on his cock as the pleasure spasms forced her to move, despite her attempts to stay still, while her body flowed pleasure through her. And her juices renewed all the more, until she had to look down and gawk at the mess she was making.\n\nOnce she could breath again, she looked across the valley of hard meat before her to Chimera's face. He must have been close with how he was licking his fangs and staring at her. His grip on her legs was getting a little tighter too. But still he did nothing but watch, and she shivered when she caught his eyes.\n\nShe tried to bounce a few times. No good. A single bounce left her breathless as she felt his girth drag along her insides, only to press into her depths once she took him back to the hilt.\n\n\"I uh... can't um... get a proper fuck going.\"\n\n\"Continue as you were before,\" he said. \"The dance? It was perfect.\" A rumble escaped him, deep in his belly, and she sighed happily at the sensation of his vibrations filling her, up through his cock and where her legs hugged his waist.\n\nOh, the beast liked gentle sex? She smirked as she thought of Medusa, who no doubt must have loved it whenever Darian gave her a long, romantic, hug-and-kissing-filled fuck.\n\nBut gentle sex was good too. She grinned and started to shift her hips around in a circle again, this time a little faster than before. She sat up straight, put her hands on her own hips, and put herself on display for the giant once again. Better this time, with a little more force to her hips, she drove them back and forth, side to side, and squeezed her pussy around his girth as much as she could between waves of the dance. Bouncing up and down was too hard, but he said he liked the way she moved her hips; and she was fucking loving it.\n\n\"You are like fire dancing upon a wick,\" he said.\n\nShe laughed. A loud laugh too, one that made her stop her dance and her shoulders shake up and down.\n\n\"Am I fire to you?\"\n\n\"Yes.\" His hands drifted higher up her legs, but she gave them a light tap, and he lowered them back down.\n\n\"I'll burn you.\"\n\nOh gods, no she didn't just say that. She shook her head and raised a hand to bury her face in it, but managed to stop herself in time before she did. No need for a face full of cum, and her fingers were still sticky with his.\n\n\"Perhaps neither of us are the cold, hard individuals we think ourselves as. Or present to others.\" The giant's hands squeezed along her calves, gently at that, massaging and rubbing her tired muscles.\n\n\"Yeah, well, we can open up and get all cuddly and romantic with each other later. I... am not... done.\" Big words. She was already trembling and panting. A couple beads of sweat worked down her body, but she wanted to keep going. Hands back on her hips, she started to shift back and forth again. Each dip of her hips and clench of her insides made his cock rub against her flesh in different ways, and she experimented. Certain angles allowed her to rub her clit against him, others pushed his cock toward her g-spot; those were her favorite. All of them had his length stretching her so deep every action made his fat glans rub against her deepspot, tender, sore, but sending powerful jolts of constant pleasure into her core.\n\nAnd before she knew what she was doing, she was working herself to another orgasm. As much as she enjoyed dancing on his cock for him, with hands on her hips and showing off her amazing stomach, she needed her hands for support. She put her palms to his abs, and started to push herself back and forth, ass and hips working together to fuck him faster.\n\nChimera rumbled, deeper and louder than usual, enough she could feel it through her whole body. And cumming after that was easy. She stopped, or tried to stop, but the orgasm poured into her limbs once again and forced her to tremble. Muscle spasms within milked and pulled at his cock, and each made her hips shift back and forth. Her juices started to come out in rhythm with her clenches, and she squirted around his cock with each trembling wave of bliss.\n\nAnd as she did, warmth started to gush into her. She managed to look to Chimera, and found herself beaming as the giant struggled to keep his eyes open. He was cumming too. It was a delicious combination of wet warmth flowing out of her, and her own pleasure spiking with each gush of it. She watched it, even as her body quivered and writhed, she stared down at the pouring white flowing out of her.\n\nAnd the white was joined by trickling spurts of her own juices. Her fluids soaked what was already a pool of cum around her pussy, and grew with each new spurt from her clenching insides. Each clench earned another rumble from the beast, and another shift her of her hips forward to meet him. She convulsed, squeezed on his girth, and milked him of cum as her own leaked down her thighs and legs. His cum was simply too much though, and while hers soaked her thighs, his eventually trickled down her thighs, and then calves, until thick drops of white were dripping from her toes on the grass.\n\nAs usual, they'd made a huge mess. She laughed, fell forward onto her elbows against his stomach. Dragging herself forward, she chuckled all the more, and shivered as she managed to get far enough up along his body for his cock to slip free of her clenching insides. As orgasm aftershocks worked through her, she set her chest down on the beast's chest, cheek against the hard stone of his muscle, and her hands teasing along the indentations of his array of muscles underneath his arms.\n\n\"Ok... very tired now. Need sleep.\" She stroked his sides, put her chin up on his chest to look at him, and smiled.\n\n\"You smile often lately,\" he said.\n\n\"Yeah. It's making my cheeks hurt.\"\n\nIt was his turn to chuckle. She put her ear against his chest to listen. And she heard more than his chuckle. She heard his massive heart, beating slow, steady, and his deep controlled breathing. She heard the rumbling, like a constant earthquake in his belly. She could even hear the shift of his muscles as his hands stroked her back.\n\n\"We should bathe,\" he said.\n\nBut she barely heard him. Eyes drifting closed, she waved a hand and dismissed his suggestion. She wanted to keep her ear on his chest, and let the deep sounds of his body lull her to sleep.\n\n\"Five more minutes.\"\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~Darian~~\n\nJust him and his love. Before sunrise, Patrius, Tritus, Sophia, the others, they all left. They couldn't be seen leaving by villagers, it'd risk their plans being reported by civilians. Civilians like Sophia.\n\nDarian chuckled, and stepped away from the table in the center of the room. A couple candles and Medusa were all that remained, and Medusa looked as guilty as all Tartarus.\n\n\"If it's any consolation... no, I suppose I can't say that.\" He sighed, and pet the beautiful woman on her shoulder. \"I would have let Sophia die.\"\n\nMedusa was coiled up in a tight circle, human half laying atop her snake half, and her cheek against the scales, arms dangling. She was drawing random designs onto the floor with a fingernail, and her snake hair was flat to her head. Before, she'd been bubbling with energy, but no longer.\n\n\"I risssked everything to save a random woman.\"\n\n\"Yeah, I can't say that was a good idea. If I'd been here, I would have stopped you.\"\n\n\"... really?\"\n\nQuite the way with words, Darian. He walked around her a little to get in front of her human half, and he sat down on his butt in front of her. Her snake body was thick, and stacked on top of each other in coils. It raised her resting torso four feet into the air, enough so he could get a peek at her face from underneath. When she saw what he was doing, she turned her face inward toward her coils, away from him.",
        "\"Really.\" He reached up for her hair, and slid his fingers into it. Snakes raised from their drowsy weight, and slipped in between his knuckles, around his wrist, and against his palm. Their little noses nudged into him, and tickled his fingers with flicking tongues. \"And that's why I love you.\"\n\nShe flinched at the L word, and turned her face back to look at him, smile returned. \"Really?\"\n\n\"Really. And if we did what I'd have done, we'd be worse off for it. You recruited more people to our goal, and saved a mother and child. Like Patrius said, you're rewriting your legend, and now we'll have more people helping us.\"\n\n\"We will?\"\n\n\"You kidding? If there's one thing that can stir a people to move, it's helping a mother and her wounded child. When Sophia gets out there and starts recruiting people, it'll work a million times better than Patrius's efforts, or even Tritus's and the others. But...\"\n\n\"But?\"\n\n\"But that's not why I love you. I love you cause you're too damn nice.\" He set his other hand on one of her coils, stroked it and caressed it, until her hand drifted to hold his. \"Cause... kingdoms are built on the backs of slaves and the dead, and everyone seems ok with that. Except you.\"\n\nSmiling, she slipped her fingers into his free hand, and nudged her head into where his other palm rested on her temple. \"Being nice isn't going to win us this battle though.\"\n\n\"Hey, you never know. You got lucky with Sophia, and the underdog needs some luck to win. We'll get this done yet. We'll get the mask back, get Pegasus back, and the Fates will let us talk to Athena.\"\n\nHollow words, and they both knew it. Medusa nodded again, and slid her human half off of her coils to lay it upon his lap, on her back. He smiled down at her, folded his legs to make room for her to get comfortable, and continued to comb her hair while she returned the smile up at him.\n\n\"Athena,\" she said. \"I... sometimes I wonder if it's a good idea. To talk to Athena, I mean.\"\n\n\"You don't want your legs back?\"\n\n\"I do, but... the gods aren't kind or fair creatures. It may be better we don't talk to her at all.\"\n\n\"Maybe. Maybe... but... I really want to help you out here, Medusa. Whatever you want.\" He set his free hand on her stomach, and ran his fingers down the human skin and onto her hip where the scales began. Snakeskin was beautiful, hers especially, and he traced the designs of black that dotted her green scales. The bumps were soft, not as soft as human skin but soft nonetheless, and he caressed them with massaging fingers.\n\n\"... I don't want to be hated by everyone anymore.\"\n\nHe gulped. Having Athena turn her back into a human would be more doable than that. No more scales, no more snake hair, no more snake eyes or fangs or tail, all of that could be taken away. But the hatred for the monster Medusa permeated all of Greece, and as soon as anyone found out her real name, the hate would arise anew.\n\nMaybe once Athena cured her, the story would spread, and people would accept the new view that Athena had forgiven her? Maybe. Hate is a difficult thing to let go of, it runs deep, lives in the bones, and devours you.\n\n\"Patrius doesn't hate you,\" he said. \"If anything, he's impressed by you. He'd have done the same as I, and let the manticore take Elias, let it kill Sophia if she intervened. The fact you couldn't do that, it... well, changed you in his eyes.\"\n\nShe grinned, and set her hands to rest on her belly. \"Sophia actually followed me after I helped her. Said I saved her, while Athena was letting them suffer. Said... said nice things.\"\n\nThe first nice things said to her by anyone normal, ever, since her transformation, most likely. Much as he loved her, and did his best to soothe her wounded soul, he was as much a freak as her. As Chimera, and now Otrera. For a regular person, a mother, to compliment her must have been a powerful moment indeed. Medusa was glowing with it too, and she looked up as she remembered.\n\nHe smiled down at her, at the beaming joy on her face, and lost himself in her. Why was she the only thing that settled his heart? Every time he looked at Patrius, Tritus, Chimera and Otrera, he felt ready to fight. Every damn time he looked at the city, the resistance, their goal, he was ready to fight his allies just as much as the enemy.\n\nRabid dog. Not Chimera, the giant haunted by visceral temptations. Not Otrera, the ruined queen with only fire and fury for a heart. He was the rabid dog. No empathy? He looked down and let his eyes wander while his fingers stroked Medusa's fingers over her belly. Why couldn't he care about these people? What was wrong with him? Only her. Only her.\n\n\"I wonder how Gallea is doing during the day,\" she said. Her words cut through his thoughts, and his eyes snapped back to hers.\n\n\"I'm sure he's charming the local folk well. Man knows what he's doing... sort of. Tomorrow night he'll give us an update, and we can decide what to do then.\"\n\nGallea. Darian forced his face to a standstill to hide the frown, and looked up toward the candle on the table. The satyr had risked his life to save Medusa, and Darian knew he should owe Gallea some trust. And yet no matter how often Gallea reported to them, told them something, shared information, shared a drink or laugh, Darian could still feel the edge inside him ready to cut the man to pieces.\n\nThe only damn person he wasn't willing to kill if the situation came to it, was the silly, naive, beautiful, amazing woman in his arms.\n\nWhat the fuck was wrong with him?\n\n\"Hey.\" Fingers found his cheek, and stroked along his neck and jaw. \"You're brooding. I thought we weren't going to do that?\"\n\n\"Sorry! Sorry, just... things on the mind. We'll have to move soon, I'm sure. Our resistance is growing too fast; we're bound to be noticed. And with all the manticore you and Chimera killed, Andromeda must have noticed something.\"\n\n\"Ssso the battle will be sssoon?\"\n\n\"Yeah...\" He gulped again, and raised his hand from her scales to hold the one stroking his beard. \"And we're getting through this alive. If that means we abandon the mission, then so be it. I... I'm not going to sacrifice you to save Pegasus. He'd kill me.\" And he really would too. Stomp him into paste.\n\n\"No! You can't give up, and I wouldn't be able to live with myself knowing your friend is a slave.\"\n\nHe knew she'd say that. Damn woman was going to turn him into a good person if it was the last thing she'd do. Her face had scrunched up like a squirrel's, and her fingers around his were getting tighter. She was ready to do anything to save his friend, someone she'd never met, and an animal at that.\n\nHis best friend, and Darian couldn't see himself doing that. The thought cut through him until he felt his insides burn.\n\n\"Guess we're in this until the end then.\" He leaned down and put his forehead to hers. Snake hair rose to mingle with his own, and tickle against his beard with nudging noses.\n\n\"Not the end. We'll live, I know we will!\" She gave him a soft pat on the cheek \u2014 so like a mother \u2014 and a kiss too. \"Otrera and Chimera didn't make it back. The sun should be up now.\"\n\n\"I'm sure they'll be fine. Chimera is... Otrera can... do for him what you do for me.\"\n\nMedusa giggled and put another kiss on him, this time on the nose.\n\n\"Maybe. I think they're a little different than usss.\"\n\n\"Agreed. But they'll be fine.\" And he knew they would be. Chimera was insane \u2014 or being tortured by some sort of curse, and Otrera was just the right kind of fire to burn through that. Otrera had stood up to Darian, defended Chimera, and faced the giant's power head on. And of course, they were both strong enough to deal with any ambush. He couldn't ask for better help on their fucked up adventure.\n\nJust remember that Darian, when the blood flies. You kept your head in the volcano, and saved Chimera when Medusa was in danger. Can you do it again?\n\nMedusa reached up, hugged him, and picked him up. Weird for the woman in his lap to be the one picking him up, but she wrapped her arms around him, and using the weight anchor of her snake half, she lifted him up and sat him in the middle of her coils.\n\n\"Ssssleep,\" she said. \"Tomorrow night may require all our energy.\"\n\nNodding, he leaned back against her scales, shifted around to get comfortable, and closed his eyes. Something about the feel of her snakeskin through his tunic, on the back of his neck, settled the constricting feeling in his chest.\n\nA few breaths later, he was asleep.\n\n~~~~~~~~~~~~~~~~~~~~~\n\n\"Hey Darian.\"\n\nHe woke with a snap when something jabbed his arm. Sword never far away, he grabbed it with a twitch flash of muscle, gripped it, and drew it from its scabbard in a slicing motion.\n\nOtrera blocked his wrist with one hand, and punched him in the face with the other. He barely had enough time to realize what was going on and register the knuckles coming at him before they collided with his cheek and sent him rolling over Medusa's coils.\n\nMedusa sprang up with a jolt and twisted around. \"What? What's going on?\"\n\n\"No idea how you wake that man without getting stabbed,\" the Amazon said.\n\nDarian groaned and pushed himself off the floor. His sword was still in his hand.\n\n\"She wakes me gently.\"\n\n\"Yeah well, enough gently for you. Seeing the two of you sleeping was too damn cute.\"\n\nMedusa giggled and slithered over to Darian before helping him up. \"Darian just needs a soft touch. And you were out all day with Chimera. Did you sleep at all?\"\n\nDarian managed a quick peek at Medusa, and caught the sly grin on her face along with her flickering snake tongue.\n\n\"We did,\" Otrera said. But she returned the grin, and did a little shake of her butt. \"It was a good day.\"\n\nUnless he was horribly drunk and seeing things, Otrera did not only just smile, but she did a little dance, involving an ass shake and tiny jump. He quirked a brow, looked her up and down to be sure it was her, and looked to the giant.\n\nChimera rumbled as he sat down against the wall, folded his arms across his chest, and folded his legs, knees apart. Typical statue, but at the same time, a soothing presence. Darian choked on a chuckle. Soothed by Chimera's presence?\n\nWell at least they were in good spirits.\n\n\"No manticore, didn't even see any on the trip here.\" Otrera sat at the table, and peered at the single candle lit. They were burning through a lot of candles. \"So either Chimera and Medusa have done great work, or Andromeda is baiting us into a trap.\"\n\n\"Bit of both I imagine.\" He got up and joined her, rubbing his jaw where she punched him. He deserved it though, couldn't wake up without being ready to kill someone.\n\nWhy was this eating at him more than usual?\n\nGallea, Patrius, Tritus, and at least twelve other men \u2014 a few women too \u2014 joined them moments later. Sunrise was their queue. They'd have preferred Darian and them came to their smaller hideout, but Medusa would have been cramped. Chimera wouldn't have fit at all, either.\n\n\"They treating you well?\" Medusa said.\n\nGallea nodded and patted Medusa's hand. \"Yeah. And people don't seem to mind me being here. Visitors don't stay long after spending a night here, feeling like they're sick with that curse on the city.\"\n\n\"Is that what visitors think of it?\" Darian said as he looked to Patrius as Tritus.\n\n\"Yes, and then they leave. And nothing happens. My guess is the sorceress does something to their minds to make them forget. I mean, how are people just forgetting about these manticore and the weird guards at night? I don't know,\" Gallea said. Patrius sat down next to him. The table in the center of the room was quickly becoming the 'minds of the operation' table.\n\nGallea hopped up onto the table. \"We have a problem.\"\n\n\"Oh?\" Otrera said.\n\nPatrius nodded. \"We have Gallea to thank for this information. He's a good sneak.\"\n\nThe satyr shook his head and waved his hands in the air. \"Don't! Don't mention my name. Leave me out of this, this is your sto... resistance. I'm just providing some information.\"\n\nEveryone raised a brow and blinked at him. Otrera and Darian squinted. He was going to say story.\n\n\"Information wins wars... but alright.\" Patrius shrugged and turned back to Darian. \"Andromeda has picked a new sacrifice. Seems she needed one, and if it wasn't going to be Sophia's boy, it was going to be someone else.\"\n\nMedusa hissed and slammed her tail, a lot of it. Most of the people in the room jumped back, and trembled at the sight of the angry serpent. But she slithered over to Darian, put her hands on his shoulders, and he caressed one of her hands with his own. Poor creature. All she wanted to do was help people, and the situation was preventing that at every turn.\n\nHow would she do when the blood started to flow? He shuddered and squeezed her hand harder. She'd survived so long taking care of herself, fighting and killing heroes come for her head. It was a different matter to fight when your allies are dying around you.\n\n\"Then I guess we have a choice,\" Otrera said as she leaned forward and put her elbows to the table. \"Try and take advantage now, while our numbers are still small, but maybe catch Andromeda by surprise. Or we wait, build up our forces, and potentially give ourselves away. We'd be better off for the fight... maybe, but worse off if Andromeda figures out what we're doing.\"\n\nThe resistance looked at each other, eyes shifting, hands rubbing knuckles.\n\nTritus stepped up from the group and sat down with them. Big attitude, big pain in the ass, the man was getting more and more annoying each moment. Worse was how he was more than happy to meet Darian eye to eye, try and stare him down, and snarl.\n\n\"... they took Rhea. A friend of mine.\"\n\nThat explained his extra surly attitude at least. Darian frowned, and leaned in a little toward the man. Nothing quite as disgusting as two men having a silent pissing contest by trying to stare the other one down. The whole room grew silent, and held their breath. If Tritus was going to\u2014\n\n\"I think we should go tonight,\" Medusa said.\n\nThey all turned to the gorgon. Some let their jaws drop, and Tritus's stern gaze faded away as he looked up at the woman over Darian's shoulders.\n\n\"We've only been here a few nightssss, and we've taken out many of the manticore. Her forces are weakened, she probably doesn't know what's going on yet, and we can take advantage of it. And Sophia, she said she'd... she'd really help. I trust her! I trust her, and we can get the whole city together!\" She slammed her tail again, and everyone jumped again. But no one was frowning anymore. \"Right now! We take Patrius's gift from Athena, go around the homes with Sophia, Patrius, Tritus,\" she said as she gestured to the table, \"and march up to the acropolis before she kills Rhea!\"\n\nChimera rumbled, and Otrera laughed. A lot. Then Patrius joined in, Gallea, and others along with them. Maybe not as loud as Otrera, but soon everyone at the table was laughing; Tritus was even smiling a little. Darian was too.\n\n\"You really want to awaken the resistance tonight and march on Andromeda? She'll be sacrificing Rhea at sunrise.\" Much as Patrius was chuckling, there was still some worry lines on his forehead.\n\n\"Then we go before sunrise.\" Darian shrugged, and patted the hand of his love once again. \"How's the weather outside?\"\n\n\"Clear.\" Tritus sighed, shook his head, and clenched his fingers until knuckles cracked. \"Every time there's a sacrifice, the night before, the sky is clear, the moon and stars are bright, and... the patrols hang around the bridge.\"\n\n\"Lovely.\" Otrera laughed again, and hooked her hands behind her head. \"We tear through them in one go.\"\n\nTritus raised a brow. \"You can't be\u2014\"\n\n\"Chimera will break through their lines.\" Otrera motioned to the huge beast sitting nearby, grin on her face and her hand raised in a powerful fist. \"Darian and I will follow behind, and kill as we follow. Medusa is our support behind us, and our secret weapon. But I guarantee the four of us just marching up that mountain won't end well. We need the resistance, and more. We need an army, or better yet, a mob.\"\n\nA riot. Darian stroked his chin and beard, and looked to Tritus.\n\n\"... you want to save Rhea?\"\n\n\"Of course I want to save Rhea.\" \n\nAnd he did. Darian could see it in the man's eyes, the stern look, the hard stone look. Maybe he'd underestimated the man? He seemed like a fool, but he was a member of their little resistance; he deserved credit for that. And now, it seemed less like a pissing contest, and more like a man who had trouble trusting people, being forced to trust strangers with saving a woman he cared about.\n\nDarian could understand that.\n\n\"Good. Everyone here use Patrius's gift, clear your minds of the curse for tonight. Then Patrius, go with Tritus, take Athena's gift, go get Sophia, and take her from door to door. I want Sophia to offer each of them to use the gift, and you, you tell them it's now or never.\" He leaned in closer toward Tritus, whose eyes were growing wider and wider. \"Don't explain anything to them, don't listen if they try and talk, just move onto the next house.\"\n\nThey wanted a riot. They needed a riot. He knew how to create a riot.\n\n\"But what about the patrols? There are less manticore out here in the outskirts, but toward the city center there should still be some, and the guards... we don't know anything about them.\"\n\n\"Like you said, they'll be near the bridge. Just stay away from there, and let the flame spread.\"\n\n\"Flame?\"\n\nIt was Darian's turn to grin. \"Take a torch.\"\n\n~~~~~~~~~~~~~~~~~~~\n\nThe flames started to grow. One torch came out into the streets. And then another. And another.\n\nNot enough, not yet, but more torches were growing. Those who didn't have a torch brought a candle and did their best to hold it by hand. But once they were near the crowd, a candle was unneeded, as each torch that added to their numbers lit the streets more and more.\n\nVoices grew too. At first no one was willing to make a sound, but as the resistance handed out swords and shields to those willing to wield them, people started to talk. Who was the dark-skinned woman in Amazon armor? Was that really Otrera? Who was the short warrior wearing the black armor and helmet with the white-hair crest? Why were they standing by an alley and not letting anyone in?\n\nNo need for them to see Chimera and Medusa, not yet.\n\nDarian took a deep breath, and looked up. The night sky was absolutely beautiful. Clear, radiant. The crescent moon shone bright enough they barely needed the torches, and the stars twinkled to the point he wasn't sure he was staring at the sky anymore. Tritus said the night always shone this way before a sacrifice. Part of Andromeda's magic then?\n\n\"Wow. Look at how many there are.\"\n\nMedusa slithered up behind him, low and to the shadows of the alley. She reached out to touch him, but drew her hand back as it entered the light of the crowd's fire.\n\nSo he stepped deeper into the alley to meet her. His arms found her in the dark, and he took her hands into his before bringing them up to his lips to kiss them.\n\n\"Step one, get people together and ready to fight. Step two, point them in the right direction, and unleash the wave. Step two will be the hard part here, we need them to agree to help Medusa the gorgon and Chimera the giant.\"\n\nChimera rumbled. He was crouched in the back of the alley, quiet, still and stone as always. But Darian could see his eyes glancing up at the sky too. Nervous, maybe?\n\nOtrera patted Darian on the arm, and looked back to the crowd. She too was leaning against the alley wall, opposite of him, and her eyes flickered with the torchlight growing before them.\n\n\"Sophia is doing good work. One look at her eyes and pleas, and people are up in arms ready to fight, despite the years under the curse.\" The queen rotated her shoulders and smiled. \"How much longer you want to wait while the crowd grows?\"",
        "\"Tritus said he had an idea of the best places to check out. When he gets back, we'll start. We'll have to convince them Medusa is here to help.\"\n\nOtrera shook her head. \"You don't. Sophia does.\"\n\nMedusa gasped and shook her head. \"You want Sophia to talk to this... mob?\"\n\n\"They're her people, Medusa,\" Otrera said. \"She wants to help. And if anyone's going to convince these people to trust a gorgon, the Medusa, it's her.\"\n\nThe Medusa. A title. Darian frowned and let go of Medusa's hands, but when he walked closer to Otrera, Medusa put her hands on his shoulders and pulled him back into the alley darkness.\n\n\"It's ok,\" she whispered. \"Otrera's right. I... just... can't imagine a mother being a part of this. When she was crying for her son, she...\"\n\nAnd silence. Otrera stared at the crowd, Medusa looked down, and Chimera rumbled something closer to a sigh.\n\nNo one talked about children. Athena cursed Medusa to be a monster and forever alone; the chance Darian and she could have a child was slim to none. Creatures of a different race, satyrs and centaurs and humans and such, could occasionally have children together. A rarity at best.\n\nAnd though Darian never said it, he was happy about it. No one else to risk. He forced down a bile-filled chuckle, and grit his teeth. A disgusting cliche, the man too afraid to have children, afraid to pass on his sins, his hate. Or worse, kill his children.\n\nNot the time Darian. Not the fucking time.\n\nThe four of them sat in silence, and watched the crowd grow, until people were struggling to fit into the streets. When Tritus and Sophia returned, they were dripping with sweat, and panting. Must have been running around the whole city.\n\n\"It is done,\" Tritus said.\n\n\"A lot of people came.\" Sophia took a few deep breaths and walked up to stand between the four of them in the alley. \"A... a lot. They were all hoping for something like this, someone to give them a push. I knew it! I knew they... I knew it'd work.\"\n\nThe mother was beaming, and smiling, and looking at Medusa more than anyone else. And it was making Medusa very uncomfortable. She squirmed, raised her hands to her lips, looked away and up and down, looked anywhere but the human that was idolizing her. Darian smiled, and watched his love struggle, even when she looked to him for help. Nope, not gonna help her deal with a fan.\n\n\"There's... a lot of people out there,\" Medusa said. She slithered a little closer, but stayed behind Darian, pushing him ahead so she could see more of the crowd. He wasn't a very good shield though, and she had to stay close to the ground and shadows.\n\n\"And we have to point them toward the person that's been dominating, controlling, and killing them for a few years now.\" Otrera tilted her neck until it cracked \u2014 a very Chimera thing to do, Darian noticed. \"Tritus?\"\n\nBut the man shook his head, and walked over to Sophia. \"Her words are far more powerful than mine.\"\n\nThey all nodded, except Medusa. She was trembling, that way she always did when she was nervous.\n\n\"This may be new to all of you,\" Sophia said, \"But we've been in this horrible place for so long, and unable to fight back. We want to fight back!\" She stomped back out, out of the alley, and turned around to face them all. \"And now we have a chance. My son gets to live because of Medusa, and... and so will Rhea!\"\n\nShe stomped her foot down again, and Otrera choked on a chuckle. Darian found himself looking at the woman a little longer though, and his eyes settled on hers. Hard eyes, like Tritus.\n\nPatrius stepped up from the crowd. A few eyes followed him, torches held above, and some people turned to walk after him. The old soldier walked up to Sophia and Tritus, and soon a few dozen were behind him. A mob, following the leader. And once they were unleashed, they'd pour over the enemy like a swarm of locusts.\n\nOr they'd pour over Medusa, Darian, his companions, the resistance, and turn them all over to Andromeda. Fear makes people do stupid things, and the mob in front of him all had wide eyes, shivering hands with shaking torches, and nervous glances over their shoulders.\n\n\"Ready?\" Patrius said.\n\nSophia nodded, and held out her hand for Medusa.\n\n\"M-me?\" Medusa said.\n\n\"Yes you! You saved me, my son. You... just come. The rest of you too! Stand behind me, and everything will be fine.\"\n\nWho was this woman? Sophia, just a normal woman, a normal mother, tall, with tattered clothes like many of the civilians. But she walked out into the crowd of hundreds, and did not waver as she dragged the trembling Medusa.\n\nDarian fell in beside Medusa and put a hand on the small of her back. When she slithered upright, she was a tall thing, and her head was a couple feet above his, a couple feet above everyone else's. It meant everyone gasped as one as the gorgon came into view of the crowd.\n\nAnd the gasp was followed by silence. They had no stage or platform, no way to stand above the crowd other than Medusa's natural height. So Sophia took them toward the crowd, and into its center. People spread apart like water, and stared the gorgon up and down with dropped jaws. They whispered her name, and glanced between each other as their eyes grew wider still.\n\nAnd of course, things only got worse when Patrius came out with Otrera and Chimera. The two stood on each of his sides, and Chimera walked tall, with no effort to hide his height. Darian glanced around at the crowd that was circling them, but they were circling only because the monsters were stepping into the middle of their congregation. None of them moved forward or got closer, or drew their swords. At least that was a step in the right direction.\n\nDarian took off his helmet, and hooked it under his arm. Let them see he was human at least, forehead forever marked.\n\n\"Medusa.\"\n\n\"It's Medusa...\"\n\n\"And a giant.\"\n\n\"Is that... Bellerophontes? Hero turned slave?\"\n\n\"I know her! The dark-skinned Amazon, Otrera.\"\n\n\"Didn't Bellerophontes kill her?\"\n\n\"Bellerophontes? Then... the snake tattoo on that giant! Is he...\"\n\nWell, they were famous, he knew that. He didn't think they were that famous though, at least not him and Otrera. They were even guessing Chimera's identity by association, which wasn't a good thing. And as they got closer, the crowd started inching back, hands trembling all the more.\n\n\"People!\" Sophia raised her hands, and waved at everyone with open arms. \"Calm yourselves. These people are the reason we're here tonight. The reason I'm alive.\"\n\n\"They're the reason?\" A stranger stepped out from the crowd, a tall man, big shoulders, scars on his hands and face. Someone with a history, Darian figured, someone with weight to their name. \"I thought... I'd seen this stranger around, putting together what I guessed was a rebellion.\" He gestured to Patrius.\n\n\"And I have been.\" Patrius moved in closer to Sophia, and held out his hand. Athena's gift, just a tiny jar in his hand, innocuous. \"But my old friend has arrived, with back up. Medusa, the gorgon. Chimera, the giant. And Otrera, Queen of an Amazon tribe.\"\n\n\"Old friend eh? Bellerophontes?\"\n\n\"Please Hieremias.\" Sophia shook her head and put out an arm, as if blocking Darian and his friends from this rather aggressive stranger. \"Just listen. Patrius has been doing his best to start a resistance, but he was working in secret, as a stranger. Bellerophontes has come to aid him, and... he has made interesting friends.\"\n\n\"Interesting! That a joke?\" Hieremias frowned and swung his torch through the air to light up the four monsters. \"A dead Amazon, a giant and enemy of the gods, a hero Zeus cast down, and Medusa herself! Athena will\u2014\"\n\n\"Athena has done nothing for years!\" Sophia marched up to the man, and shoved him back, hard. He stumbled back, and only the arms of the people behind him prevented him from falling over. \"And when one of the beast was taking my son, it wasn't Athena who saved him, it was Medusa!\"\n\nDarian thought the earlier silence was bad. Everyone stopped breathing when Sophia was done. The only noise was the soft murmur of a hundred torches.\n\n\"Medusa... saved your son?\" Another person from the crowd asked.\n\n\"Yes! Medusa saved my son, and me. And not only that, these four have been killing the beasts while they prepare to attack the one who holds us here, the one who has taken Rhea!\"\n\nMore gasps. Darian raised a brow, stared at the mother turned rebel leader, and at the rest of the crowd. They were nodding, clenching fists and raising them, gripping the swords that Tritus and his crew started handing out.\n\nThe crowd started to shift, whisper, and step in a little closer to hear Sophia better. Their eyes were so obvious, so blatant in their shifting emotions. Fear turned into anxiety. Anxiety turned into excitement. People nearby got to a knee to let others behind them see the newcomers over their heads, and as Darian looked over the crowd, he could hear them whispering their names, along with 'warriors' and 'saviors'.\n\n\"My challenge is not to Athena. I do not know why she had helped so little in our time before now. But not only has Medusa come to my aid, Patrius's gift here that lifts you from the city curse is a gift from Athena herself! They have both arrived at near the same time. Coincidence?\" Sophia smiled and gestured to Medusa. \"Or is Athena giving Medusa, and indeed the others, a chance for redemption?\"\n\nThe crowd erupted. Smiles turned into cheers. Fists turned into swords held high. Torches raised with them, and those without torches raised their shields. Just a few words, a few seconds, and the mob was on their side.\n\nDarian bit his tongue. Athena's motivations with Patrius were still a mystery, and the timing of his arrival far too coincidental. The four of them knew better than to trust a god, but at the same time, Sophia did, as did the city. Many trusted Patrius, and they all took Sophia's words as divine revelation. Athena had sent them to help, and in her infinite wisdom, was providing the four of them with the opportunity to redeem themselves.\n\nHe swallowed his vomit. Otrera had waged war on cities that worshiped Athena. Chimera was an enemy of the gods. Medusa was a monster Athena created. And he was struck down by Zeus, for daring to fly toward the Olympus peak. None of them should be helping her, but they had no choice.\n\n\"Then we march! While we have the chance, while the night is young, Rhea alive, and these warriors at our sides!\" Hieremias drew his sword, pointed it up, and then toward the sea where the acropolis stood upon the high cliff. In the clear night sky, lit by stars and moonlight, the target was easy to see, and everyone in the crowd turned to face it.\n\n\"Yes!\" Patrius did the same, and Darian smirked. Still spry for an older fellow. \"We march, and attack her head on while we still have the element of surprise!\"\n\nOtrera grimaced, but was quick to hide it. Darian was thinking the same thing too: it was going to get bloody. A part of him considered the sneaky approach, him and Otrera climbing the mountain while Andromeda was distracted with the riot. But the risk would be too great, with too many unknowns; he had no idea what sort of spell trickery Andromeda could use. The march with their newborn army was the better plan, if they could disguise their approach in the waves of the riot.\n\nThe problem was the inevitable bloodbath their current plan was going to cause. It meant a head-on confrontation. It meant Medusa being in the middle of a battle. He didn't know if she could handle that, and she shouldn't have had to.\n\nHe did not like any of this, but it was his best shot at getting Pegasus back, getting the mask back, and meeting Athena. So, he swallowed the rising bile in his throat once more, and looked back to Patrius. The old soldier was grinning at him; reliving his glory days, probably. Darian did his best to not think of the man's wife and children.\n\n\"Bellerophontes. Otrera.\" Hieremias walked up to him, his frown having grown into a full grin, ready for a fight. \"You two, your names are known. You have fought many battles. What should we do?\"\n\nDarian looked to Otrera. She was smiling, and as far as he could tell, it was genuine. Not a lot of men asking for her advice, probably. And given the Amazon's history of constant failure in war, it must have been a pleasant change of pace for her.\n\nAnd as long as she didn't forget the mission, he was glad to gesture toward her, and hand her the choice.\n\nOtrera raised her hands, and motioned down with her fingers. The crowd grew silent, until again all they could hear was the breathing of lungs and torches.\n\n\"We will march to the bridge. You say the beasts and guards remain there while the sorceress prepares her sacrifice, so it is there we will meet them. Patrius will lead the people, and the four of us will hide within your ranks. We must disguise our presence, Chimera and Medusa too.\"\n\nHieremias raised a brow and looked between the two taller monsters. \"They'll have to crouch.\"\n\nPeople laughed. Even Darian couldn't hold back a tiny chuckle. As much a mindless peon of Athena this Hieremias was, he was growing on him.\n\n\"But,\" Hieremias continued, \"do you intend for us to\u2014\"\n\n\"When the guards and beasts attack, the four of us will burst from the crowd!\" Otrera stomped down her foot. Her tiny weight against the ground was thunder. \"We will be the sword and shield that breaks their ranks, tears through their defenses, and shatters their confidence. We will kill many, and as the four of us march up the path to the acropolis, the people will clean this city of their filth. Those that slip by us, the people will destroy!\"\n\nAnd people cheered. Swords and torches were high once more, and many started to jump and stomp their feet. Otrera had a way with words.\n\n~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~\n\n~~Medusa~~\n\nShe'd never been so nervous in her entire life. Her hands were shivering, cold and tingling at the tips. Her snake hair was dancing in random sways, and no matter how much she tried, she couldn't get a deep breath. Her snake body was trembling, even as it pushed her along while she crawled forward.\n\nSlithering forward on her hands was easy, natural even, as it kept her whole body parallel with the ground. What wasn't natural was doing it with a crowd of people all around her, close to her, hiding her from enemy eyes through sheer proximity and numbers. She could feel the heat of their bodies, hear their murmurs and whispers, and see the shaking hands. Everyone was afraid, but for the first time, it wasn't of her.\n\nNot completely, anyway. Those that were closest to her kept glancing her way, at her hair and her snake body. Her bow was on her back, quiver too, and some of them stared at the magical weaponry, while others stared at the length of thick snake muscle that followed behind her. They had to stay close enough so she couldn't be seen, so they had to keep within inches of her. It made slithering hard, and as she struggled to get into a rhythm with the nearby feet, she glanced up at the crowd protecting her. Some met her eyes, and managed a nervous smile. Others turned away.\n\nSophia would have given her a big smile, but she'd stayed behind. Mothers with children under twelve were not to join in the riot; such was the way of these people, for mothers to remain at home, protected. It made Medusa frown. She wished she could have seen Sparta when they were near, and see all the wonders she'd heard about how they treat their women. Would they march next to the men to rebel against their captors?\n\nChimera was close, silent and moving like a prowling lion. He was walking on his hands and feet, and he had a big blanket draped over him. Medusa could see glimpses of him through a few of the rows of people between them. Her guard. It felt like so long ago, the giant had beaten Darian in a fight, and she had to defeat him instead.\n\nAnd only last night that he taught her how to embrace her transformation, learn to stay in it, control it, unleash it. She didn't want to, not in front of all these people, but Sophia taught her something: not everyone was as mindlessly afraid of her as she thought.\n\nOtrera and Darian walked in the crowd near her. She glanced up at them from her low spot over the ground, and they glanced her way every so often to make sure she was still doing okay. Darian especially, every few seconds, and she had to give him a small, dismissive wave of her hand to get him to stop. She would be fine, much as her love worried about her. It was him she was worried about.\n\nAfter a while, they came upon the bridge. Medusa couldn't see it well, not with everyone in front of her, and her to the ground, but looking up she could see the towering cliff. Everything was so bright in the unusual night sky, even the torches of the mob around her didn't wash it away. The acropolis was a tall building, and it drew the eyes of everyone beneath it. But only for a moment. The guards and manticore upon the bridge were what drew them next.\n\nEveryone silenced, as if the ocean had swallowed them whole, and only the ebb and tide of the breeze and torch fire made noise.\n\nLaughter drew their gaze. Otrera's. The Amazon queen stepped forward to the front of the crowd, and as he did, the masses parted for her.\n\nMedusa had a moment to peek past her to see what lay ahead. A bridge as described, a massive thing though, something an entire kingdom would have had to work together to build! Wood and metal, it was wide, thick, and it reached across the bay to the center cliff as a grand road. Along its pillars, torches were lit as well as huge braziers, each burning strong with magnificent fire.\n\nAnd upon it stood a hundred things, a dozen manticore before them. The felines she recognized, she'd killed many, but the guards behind them she did not. Glowing red eyes, and hoplite armor that exposed black skin where human skin should have been. So these were the guards the others were talking about.\n\nOtrera and the crowd stayed in front of her, enough so that she couldn't get a good look at the exact center of the bridge. But there was no mistaking the sound of hooves on wood.\n\n\"Otrera, you live?\"\n\nMedusa's body went still, petrified, breath stuck and eyes locked onto Otrera's back.\n\nPerseus.\n\n\"I do, Perseus.\"\n\n\"Well! I must say, I didn't expect to find you here. I knew a little rascal had been stirring up trouble, someone named Patrius, but I had no idea you were involved. Tell me, how did you come to Aethiopia? Why are you here? I thought for sure Bellerophontes and his monsters would have tortured you to death for secrets you did not know.\"\n\n\"Came here for a little payback.\"\n\n\"Why? For what?\"\n\n\"You know what.\"\n\n\"... and this is why you brought a mob?\"\n\nOtrera chuckled all the more, and raised her sword. \"Brought more than a mob.\"\n\nShe lowered her sword, and pointed it at Perseus. The ground shook, quaked, and everyone dodged out of the way as it ripped apart underneath Chimera's feet.\n\n\"The beast!\"\n\nThe crowd cheered and yelled as Chimera ran into the group of manticore that lined the front of the bridge. The cats were stunned, eyes wide, and their shrieks joined the overwhelming noise as the giant rushed them down.\n\nChaos erupted. The crowd jumped aside; at least they remembered to stay out of the way, and hopefully follow the quartet as they pushed forward. It'd be the people's duty to clean up stragglers, and make sure no surprises came at them from behind. So far so good, Chimera had full room to unleash his size, and in a single swing of his arm, swiped one of the felines in the side of the face hard enough to send its head sideways, too far over its own shoulder.\n\n\"Otrera! What is the meaning of this!?\" Perseus, atop Pegasus's back, backed away from the madness. Still forty feet between him and the front lines, and dozens of the onyx-skinned guardsmen around him.",
        "Otrera laughed. Over the chaos and screams of dying felines, Queen Otrera's laughter overtook it all.\n\n\"Revenge, you murdering bastard.\"\n\nShe charged, sword and shield at the ready. Medusa had to duck her head left and right to see past the legs that blocked her view, but the Amazon's approach was unmistakable. Where everyone else was hesitating, she was sprinting forth with the speed of a Fate's Child. And Darian was right next to her.\n\n\"Bellerophontes!?\"\n\nDarian ran up to Chimera, and as he got near, he sliced into nearby felines while running by. It was only once Darian joined the chaos that the black guards rushed forward, shields up and spears out. A phalanx. They moved as a wall, covering the bridge from edge to edge, the sound of their sandals in perfect unison.\n\nThere were no more cats. In the surprise, Chimera had ripped them to shreds. Literally. Bits of their bodies were strewn about, their tails severed, jaws and heads torn asunder, and blood everywhere. The crowd was awestruck \u2014 so was Medusa. She gasped and bit a knuckle as Chimera stood among the once mighty manticore, covered in blood and cuts, gashes as long as his limbs, but all meaningless against his might. She'd never seen him so... unfettered.\n\nBut the phalanx was approaching. Perseus, still sitting on Pegasus's back, started to back up, but the phalanx was behind him. Or at least it was. The mighty hero turned and fled, with the loud crack of hooves against the wood. But when he jumped over the guards, he didn't land. Pegasus spread his enormous wings and took to the sky.\n\n\"Medusa! Shoot him down!\"\n\nWell, no point in hiding anymore. She stood up, drew her bow, and blinked at Darian.\n\n\"W-what?\"\n\n\"Shoot him down! Try and get him in the wing, but shoot him down! We can't have Andromeda escape!\"\n\n\"B-b-but he might die!\"\n\n\"Do it!\" Darian turned to face the oncoming guards. They raised their shields, shoulder to the shoulder of their right companion, and spears between barriers. A wall, perfectly formed, with no gaps and only spear tips to greet them.\n\nAt least until Chimera charged into it. The giant did not care about the spears stabbing into his stone body, his arms and legs and belly; twigs compared to the size of him, and he roared until the mountain shook as he crashed into the wall of shields. The soldiers flew back, weightless, and rolled over themselves as they landed. Beside the beast, Otrera and Darian charged onto the recovering soldiers \u2014 out of the way of Chimera's rampage thankfully \u2014 and started to cut.\n\nMedusa gulped and forced herself to look away from the attack. Pegasus. She had to shoot Pegasus. It seemed an eternity, but only a few seconds had passed, and Perseus was already almost fifty feet into the air. In the bright night sky, Pegasus was a clear target, and he'd yet to gain any speed. His wings were so huge! Colossal, they put any bird to shame.\n\nShe aimed one of her arrows, drew the bow until her muscle started to strain, and fired.\n\nThe arrow shot through the sky, a glint of its metal a crack of lightning as it pierced Pegasus's wing. Pierce was an understatement! The first thing she'd ever truly shot with the bow, the first living creature, and the arrow put a hole through it. Where there were huge feathers and a grand display of majestic white, Medusa could see the night and mountainside through.\n\nPegasus fell. A mix of roar and neigh filled the air, and he crashed onto his side, Perseus along with him. He landed a ways up the mountain path, not so far Medusa couldn't see him though. She looked to Darian again, hands shaking, snake hair flat to her scalp. She shot his friend.\n\nAnd she could shoot him again. He wasn't so far the magical bow could not reach him. She waited for Darian's command.\n\nCommand turned into battle cry. Chimera and the two Fate's Children pushed into the guards, and the sound of swords and spears against shields filled the air, until all anyone could hear was Chimera's roars, and battle.\n\n\"Now!\" Otrera said. \"Charge!\"\n\nThe mob rushed in. The sound of hundreds of people running was louder than thunder. All around her, people poured, yelled, roared their own little roars, and charged at the destroyed phalanx. The obsidian guards were many, but not as many as the mob, and they struggled to get back to their feet as Chimera charged through the layers of their numbers.\n\nIn a perfect unison, Otrera and Darian ran beside him, a little ways behind him. They caught the broken tide as their shields fell, and their swords cut into their onyx skin. And those that did not fall, or were not caught in the initial charge, were met with the mob. Hundreds of swords and torches, raised and crashing down in a mess. While Darian and Otrera breathed the flow of combat, until watching them made Medusa almost envious of their dance, the riot was like watching river rapids. These people didn't know how to fight, the just jumped onto the guards and started to cut and bash.\n\nBut it worked. Medusa stood tall, well over the crowd, and aimed her bow down onto the mess of the bridge before her. It was chaos, but at least it was chaos controlled. Chimera and the Fate's Children were at the other end of the bridge already, and from where she stood, Medusa could see guards being thrown into the air as the giant tore through them.\n\nShe moved forward with the crowd. She was easy to see, easy to use as a land mark, and the crowd moved with her. And as she moved onto the bridge, the remains of the onyx guards came into a better light.\n\nSo close, the onyx skin of the guards melted away. All that was left was bone.\n\nSkeletons! As more of the guards came into close proximity, whatever blackness covered their skin peeled away under the light of a hundred torches. Glowing red eyes continued, but instead of a deep obsidian that hid all within, she could see the white of their skulls, the cracks of their old teeth, and the spine of the neck.\n\n\"The undead!\"\n\n\"The sorceress has raised the dead!\"\n\nMedusa waved her hands around at the people about her. \"We have fought these before! Break them apart into pieces, and they are undone!\" she said. For a moment, she wasn't sure who was talking.\n\nAs if she summoned an army of lumberjacks, the crowd evolved, and where before they were stabbing, now they were chopping.\n\nShe raised her bow, drew an arrow tight, and unleashed the mighty slab of metal. The large, shining tip tore through one of the nearby skeletons, and from her angle above, it drilled the undead into the wood of the bridge. Its breastplate opened at the center, blown open, as if a god himself had punched a hole into its chest. And the skeleton wasn't pinned as she planned; rather, the undead thing was left without a torso to connect its limbs.\n\nShe blinked down at the bow in her hands. If Otrera had hit Darian with this from this close, outside Tiryns, he'd have lost his arm!\n\nScreams. She aimed to the left, arrow drawn before she knew it, and unleashed another arrow. It tore through the helmet of another skeleton, but the creature already had its spear in someone's belly. Gurgled cries of pain joined the roar of the mob, and the headless skeleton ripped its spear from its victim, only to stab at someone else.\n\nPatrius jumped in, shield up, and caught the spear with it in a spin. Sword out, he brought it down at the end of the spin, through the skeleton's spear arm. He dug his foot in, lunged in close until his shoulder was against the thing's chest, and swung his sword back up, through the other arm.\n\nHeadless, armless, the undead floundered helplessly as Patrius kicked it over.\n\nGetting in close like that, she'd seen that before. Darian had done that, to the second soldier he'd killed the first time they met. Shivers worked through her, but she shook her head and focused.\n\nAnother arrow, and another. The crowd moved behind the three that speared the assault, and waved torches around with each of the undead they felled. Many took to using the torches as weapons instead, and jammed the fire sticks into the faces and arms of the skeletons, but quickly learned that bones do not burn easily. It did not deter the mob, and they cut into the overwhelmed undead like an army of ants with blades.\n\nMedusa looked past them to the cliff. Perseus was getting up. He didn't have his huge shield this time, and if Medusa lined up another shot, she was sure she might be able to hit him. But he was quick to get back onto the wounded horse's back. She couldn't shoot Pegasus again, she couldn't! Darian didn't ask her to shoot twice, and she wasn't going to. All she could do was watch as Perseus drove his heels into Pegasus, and sent the horse galloping up the mountain.\n\nHe wouldn't be flying, but he was getting away to warn Andromeda. But unless the sorceress had some way to leave the island without Pegasus, and quickly at that, they were coming for her.\n\nThey were coming for her. Medusa felt a buzz work through her as the words danced across her mind. They were coming for her. They were on the offensive, and their plan was working. She'd never known the feeling before, the thrill of a battle going in her favor, of a plan succeeding. Don't get too excited, you're not done yet. But still, as the mob pushed the guards down, chopped them into bits, and rolled their severed torsos into the sea, she couldn't help it. They were going to win!\n\nShe shook her head again. What would Darian say? Or worse, what would Otrera say? The Amazon would smack her for being so naive. Focus! She lined up another arrow, and shot down another one of the guards that Otrera and Darian had let slip by. And another. She got faster, timed the shots with her breathing, and kept drawing arrows. No need to worry about wasting them, they were infinite. And no need to worry about lining up the shot, she was fast enough to take each one and make it land. She really was a good shot.\n\nIt was easier for her to focus on hitting the skeletal guards, and ignore the wounded around her. The mob were mostly without armor, and the few that were had led the charge. Many were lying on the bridge, hands around their arms or stomachs, groaning and coughing a mess of blood and agony. Some were women, and their cries brought her to a standstill. For a brief second, she wondered how much of a hypocrite that made her, wincing more over the wounded women than the men?\n\nA cry snapped her back to reality. One of the skeletons jumped up from the bridge floor using its arms \u2014 someone had cut off its legs and took its spear \u2014 and threw itself onto a nearby man. Tritus! She couldn't shoot it, she'd hit him too. But, he was close enough, and she snapped out her tail. It cracked against the skeleton's side hard enough to shatter it inside its breastplate. A couple inches lower and she'd have hit Tritus in the face, and killed him.\n\nShe smiled down at him, slithered over to him, and pulled the man back to standing.\n\n\"The battle goes well,\" she said, and she drew another arrow as she started to slither along with the crowd. No need to compensate for walking, she was able to line up a shot as her snake half moved her forward. Chimera and the others had already reached the end of the bridge, and were clearing it of the remaining guards. Nearby, some of the mob were rescuing the injured. Thank the gods.\n\nTritus fell in beside her, a nod and smile on his bloodied face. \"We just needed the push.\"\n\nTheir push came to a halt when a flash of lightning lit up the sky. Thunder ripped through them, and many stumbled as it shook the air and ground alike. Medusa gasped, and aimed high.\n\nA new light appeared at the top of the cliff, at the edge where the acropolis peeked over to look down upon them. Andromeda. Why could Medusa see her so clearly? High above them, small enough and far enough Medusa had no hope of hitting her with an arrow, and yet, the woman stood clear against the night sky, wearing a flowing robe of white, and holding a white staff.\n\n\"You will all suffer for this,\" Andromeda said. Otrera had mentioned Andromeda was a cold woman. Medusa could feel the ice in her voice as if the woman was speaking over her shoulder. Sorcery. \"And Otrera. You betray me? After all I've done you for?\"\n\nOtrera raised her sword and pointed it up to the sorceress. \"You deceived me! Tricked me! These people do not deserve to die!\"\n\nAndromeda slammed her staff down, the base of it cracking against the stone she stood upon. Lightning ripped the sky in tandem, and thunder buried the riot's voice, just a murmur in comparison.\n\n\"You bring a swarm of insects to my door, and hope to do battle?\" A dead moment of broken hope hung in the air, and Andromeda snatched it as she raised her staff high. \"So be it.\"\n\nLittle dots of red started to appear at the top of the cliff next to Andromeda, and more. And more. More until the it looked like a swarm of fireflies covered the sky.\n\nThe red dots started to pour down over the cliff to meet them, each a pair. Each a set of eyes."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "large penetration",
        "squirting",
        "violence",
        "blood",
        "fantasy",
        "greek fantasy",
        "adventure fantasy",
        "monster girl",
        "blowjob"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/medusa-fates-game-ch-12"
}