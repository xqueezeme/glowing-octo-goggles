{
    "title": "Return of the Black Widow Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 10 - New Crime Scene, New Black Widow \n\n\"Good morning sir, ma'am,\" said 2d Precinct Captain Damien Thompson as Cindy and I came up to the property that was hosting the crime scene on the morning of Wednesday, August 10th. We gave Patrolman Culver our names, ranks, and badge numbers, duly recorded, then went inside.\n\nThe property was a complex of public storage units. Three long buildings stretched back from the road, the far end of the property facing the half-creek, half-sewer that was Jefferson Creek, which emptied into the River west of this location. \n\nIn one of the empty back storage units in the left-side building was a young, fairly light-skinned black man. His hands were tied behind him and he was strapped to a metal chair with a black cushion seat. He was wearing a light brown jacket over a white t-shirt, blue jeans and athletic shoes. \n\nThe jeans were pulled down to his knees, and his penis was elongated, though not as large as Reece Patrick's cock had been. On his chest was simply the two red triangles touching at their apexes to form an hourglass, outlined in white with no black background. His head was thrown back, his sightless eyes looking at the ceiling. He'd been hit in the back of the head, as well.\n\n\"Who called this in?\" I asked.\n\n\"Guy who runs this place.\" said PCpt. Thompson. \"Name is Mike Jones. Been running this facility, called Town Public Storage, for seven years now, though the property is actually owned by T-Square's business corporation. We've had an eye on it as a place drugs or contraband might be left and picked up, but nothing solid.\"\n\nThompson continued: \"Jones says that he always does a check of the property when he gets here; he goes up and down the aisles to make sure nothing happened the night before. He came to this unit and the metal door was open. When he looked inside, he saw this. He ran back to the front office and called 9-1-1.\"\n\n\"Well,\" I said, \"I'm delighted to see the Crime Lab laid down a path.\" Indeed, the Crime Lab had checked a path to the body for footprints and other evidence, then laid down a thin strip of carpet for us to walk on. Everyone was told to not walk anywhere else until they got right to the body.\"\n\nAs the Crime Lab team worked on the body, I started looking around the place. Near the opening, I saw footprints to one side, as if someone had stood there to not be seen.\n\n\"Get someone to get photos and impressions of those prints in the dust.\" I told Cindy. She went and got Christina Cho and the Police Photographer.\n\n\"High heels.\" said Christina. \"Not very large feet. Likely a woman, or a small man, even an underage boy. But most likely a woman.\"\n\n\"I'll buy that for a dollar.\" I said. \"But why did she go there?\"\n\n\"Maybe to close the door.\" said Cindy. \"The switch is over there.\"\n\n\"Likely enough.\" I said. \"Good observation.\" I then went up along the carpet path to the body. \"Good morning, Martha.\" I said. \"Any idea of a time of death?\"\n\n\"Good morning, Commander. About seven hours ago.\" said Martha. \"I'd say one to two o'clock in the morning.\"\n\n\"Not that long ago.\" I said. \"Whaddya got, J.R.?\"\n\n\"The needle where the poison was injected is in the back of the neck, just below the head.\" said J.R. Barnes. \"Looks like a crowbar or tire iron to the back of the head, versus something wider like a baseball bat. Not as hard or damaging as previous victims' wounds, though it did damage. No black grease paint, but the white paint and red lipstick look the same as the other recent killing. Lab tests will prove or disprove that.\"\n\n\"Sex involved?\" I asked.\n\n\"Yes sir.\" said J.R. \"And a condom was definitely used. We got some of the lubricant from under the foreskin.\"\n\n\"And his manhood is not as big as Reece Patrick's was.\" I said.\n\n\"Our new Black Widow downsized.\" said Cindy, flat deadpan.\n\n\"And just destroyed the reputation of the Black Man's size... dammit.\" said Damien Thompson humorously.\n\n\"I wasn't gonna say it... I wasn't gonna say it...\" I said jokingly. Thompson laughed and even Cindy chuckled a bit.\n\n\"Sir,\" said a Uniformed Patrolman, \"I ran the guy's fingerprints through our app. He's not showing up in our database.\"\n\n\"Send that to me and I'll forward it to the FBI.\" I said. The Officer did so, and I did so. But the results came back negative.\n\nJust then, the entrance to the facility darkened. There were seven men in the doorway: T-Square, his 'Regiment', and his lawyer. T-Square was the real owner and financial backing of this facility... which is one reason the Police paid attention to the place.\n\n\"Well, hello Miss Universe. You're looking fine, as always.\" said T-Square to Cindy, deliberately ignoring me. \"Any time you're ready to work my poles... at my strip clubs... just let me know.\"\n\n\"I'll keep that in mind.\" Cindy said, not rising to the bait. \"No beauty pageants here, though. Commander, you want me to keep these guys back?\" It is possible that a green crowbar was being tapped in a platinum blonde's hand as she spoke.\n\n\"Naw, let 'em look.\" I said, then added: \"So they can tell me who this dead man on T-Square's property is.\"\n\n\"Good thing you're a cop, I.C.\" said T-Square as he came up. \"I heard you can't fly helicopters worth a shit. Your last passenger didn't complain, but that's because he came over all dead when you crashed.\"\n\n\"My last two passengers, actually.\" I said, remembering the final flight for Mrs. Veasley. \"Probably not a good idea to book a flight with Troy Family Airlines, T-Square. By the way, I heard your 'Regiment' there did pretty well with black crowbars, though I hope they don't get ideas about making that a permanent fashion statement while in my County.\"\n\n\"Being associated with you is definitely not a fashion statement I want to encourage, I.C.\" said T-Square.\n\n\"Neither is what I'm seeing here.\" I said, indicating the body. \"Any idea what's going on with this?\" I asked, letting him and his group come up the path. \n\nIn reply, T-Square did something I had never seen him do before: he took off his shades and peered hard at the body, his eyes wide with surprise. \"Jeeezzus...\" he said, his voice barely above a whisper. \"What the fuck is that about, I.C.?\" he asked.\n\nI went to the body and took a picture of the dead man's face, then brought it back to the group and showed it to them. \"Anyone recognize this guy?\" I asked. They all said they did not, and I believed them.\n\n\"I'll make inquiries.\" said T-Square. \"But he looks more like a college kid than one of my boys.\"\n\nT-Square's lawyer leaned over and whispered to him, within my hearing, \"Why are you helping this cracker cop?\"\n\n\"I am not helping a cracker cop.\" said T-Square, with authority and emphasis in his voice. \"I'm helping the Iron Crowbar. Do not ever forget that he is the real deal in this Town. And he is investigating a murder on my property.\" The lawyer just nodded.\n\n* * * * * * * * * * * * * * * *\n\n\"The victim's name is Jason Marquis Solomon.\" said Myron Milton. \"Facial recognition came up with him from his I.D. in the University database. He had no arrests, and his fingerprints are not on file anywhere. He was 20 years old. His mother is deceased and his father is in State Prison. He was raised by his maternal grandparents. His grandmother is white and his grandfather is black, if that's of relevance.\"\n\n\"It could be.\" I said. \"Please, keep going.\"\n\nWe were meeting in the Main Conference Room, and it was 2:00pm. The Chief was presiding, me at the other end of the table, with Cindy Ross, Wes Masters, Teresa Croyle, Della Harlow, Myron Milton, and J.R. Barnes in attendance.\n\n\"He was student at the University, about to start his third year though he had Senior hours already.\" said Myron. \"He had a 3.4 grade point average, double-majoring in African-American Studies and Management. Member of the Black Student Union, Alpha Kappa Psi Fraternity, and the Student Intercommunity Council, which my father says is theoretically a liaison between Students and Faculty, but the Faculty and School leadership could not care less about what the students say.\"\n\n\"Active student, leadership positions.\" said Cindy. \"Looks like we're going to have to work with the Campus Police again on this.\"\n\n\"Good thing a few of us have excellent secret sources there.\" I said, thinking of my wife and Myron's father. \"So nothing at all on him, Myron?\"\n\n\"No sir.\" said Myron. \"The J.P. Goldman Bank gives University students free checking accounts, and he had one. A little over a hundred dollars in it. The amount goes up when he gets scholarship money to deposit, then goes back down when he pays matriculation and other fees. Other than that, no financial issues or strangenesses at all.\"\n\nJust then the door opened and in walked Sheriff Daniel Allgood. \"I came to get a briefing on this new murder.\" he said, then added with some acerbity \"I wasn't aware you were having a meeting, Chief.\n\n\"Sheriff, we have meetings all the time.\" replied the Chief. \"Should we tell you about each and every one of them?\"\n\nAs Daniel Allgood pulled up a chair to sit between the Chief and Myron, he said \"If it gets to the point I have to ask you to do that, then maybe so. Is this latest case the work of our Copycat Black Widow?\" I saw the Chief glance at me; he was getting angry that Sheriff Allgood had usurped his meeting.\n\n\"J.R., what's the Crime Lab report?\" I asked, ignoring Sheriff Allgood and keeping the meeting going.\n\n\"Grease paint and lipstick appear to be identical to those substances found at the Reece Patrick crime scene. We're running the tests to confirm that. Early blood tests also suggest the injected poisons are the same as the Patrick scene, though we'll need the tests for confirmation. Martha the M.E. did make one other observation; apparently an air bubble was injected with the drugs, and it got to his heart and expanded. That, and not the drugs nor the blow to the back of the head, is what killed him.\" \n\nI nodded. \"Interesting. The blow to the head, it wasn't that severe, was it?\"\n\n\"No sir.\" said Barnes. \"Martha says it did damage, but the blow delivered to Reece Patrick as well as Harlan's victims were much worse.\"\n\n\"Any connections with the first crime?\" asked Sheriff Allgood.\n\n\"Too early to tell, Sheriff.\" I said. \"We're working with the Campus Police to get as much information on the victim Solomon. Only then will we be able to see if any patterns or correlations show up.\"\n\n\"Have you discussed this latest crime with Dr. Karpathian?\" asked Sheriff Allgood.\n\n\"No.\" I said. \"And we are not going to. The fewer people that we talk to about this, the better.\"\n\n\"Commander,\" Allgood said, formality in his voice, \"Dr. Karpathian is an expert on serial killers, and the copycats of them. She is also a professor at the University, where this kid was a student, no? We should avail ourselves of her expertise.\"\n\n\"Sheriff,\" I said, looking Daniel squarely in the eye, \"We've got a pretty decent record of solving crimes around here, and there is nothing Dr. Karpathian can tell us that the people in this room can't figure out for ourselves. I don't want any more outsiders involved here, not even Lt. Perlman.\"\n\n\"I think you're making a mistake not to have Dr. Karpathian consulting with us.\" said the Sheriff.\n\nI stood up, my back screaming in pain. \"Chief, apparently the Sheriff thinks he and Dr. Karpathian can do a better job of solving crimes than I can. So I'll leave them to it. Have a good day.\" With that, I walked out of the meeting.\n\n* * * * * * * * * * * * * * * *\n\n\"Winning friends and influencing people, as Chief Griswold would say.\" said Cindy Ross as she came into my office less than one minute behind me. \"You okay?\"\n\n\"I'm fine. But I don't need that shit.\" I said, the calm in my voice contrasting with my inner anger.\n\n\"I don't blame you a bit.\" said Cindy. \"I don't care if he's Sheriff, the President, or the Queen of England, that was just uncalled for by him. By the way, Chief Moynahan ended the meeting, threw everyone but Commander Harlow and the Sheriff out, and I suspect that they are having a 'philosophical discussion' about this right now.\"\n\n\"I'm sure they are.\" I said. \"And don't you dare tell me I should've run for Sheriff myself.\" I added, knowing my cousin's thoughts.\n\n\"Obviously I don't need to.\" Cindy shot right back. After a second we started chuckling, which turned into outright laughter for a minute.\n\n\"Good grief.\" I said, composing myself. \"All right, until my suspension becomes formal, go ahead and have 'Coldiron' send the troops out to interview people that knew this Solomon kid. And see if we can establish a timeline of his movements, and when he might have disappeared.\"\n\n\"Think there might be a racial issue behind his death?\" Cindy said. \"I know I'm speculating here, but we know that Reece's fraternity, the Alphas, favor the White race, while Solomon was involved with Black issues on Campus.\"\n\n\"Yes, that's true.\" I said. \"But don't bring that up with anyone interviewing people. I don't want their questions to be colored, pun not intended, with preconceived notions. By the way, is Callie Carrington still in Town?\"\n\n\"Yes.\" Cindy said. \"You think she's a suspect?\"\n\nI smiled, a brief, mirthless smile. \"She and about 5000 other people.\"\n\nCindy got up. \"Anything you want me to tell the Sheriff before I beat him down with my new crowbar?\"\n\n\"Yeah... he's also one of the 5000.\" I replied.\n\nPart 11 - Secrets and Government \n\nI spent the rest of the afternoon in the Federal Building, correlating some more Westboro Syndicate stuff with the FBI. I met with several U.S. Attorneys as they began putting together legal cases, and got them up to speed with the tremendous amounts of data they were having to deal with.\n\n\"Bring a seat cushion to Federal Court.\" one of them said. \"You are going to be on the witness stand for a long, long time.\"\n\nAfter dealing with that, I went into the Plexiglass 'Cube' with Jack Muscone. I had told him and his boss about the man I'd never seen before in my 'dream state' during Casey B. Walker's torture of me, and wondered who he was. The DepDirector said he'd see if he could find out.\n\n\"No progress on that.\" said Jack Muscone. \"And we might not get very far with it, either. Washington wants to bury 'Operation BEEKEEPER' as fast as they can. They've even reached out to your personal lawyers and offered a settlement for five million dollars. Your lawyers said twenty million plus legal fees on top of that, and the CIA's lawyers didn't bat an eyelash agreeing to it. So congratulations, you're a millionaire now.\"\n\n\"Yes, Ms. Gillem told me... and her firm netted six million out of it.\" I said. \"Anyway, I can understand why they want to get all that behind them. But there was something about that guy...\"\n\n\"Perhaps I can help you with that.\" a female voice said. An older female voice. To my shock, the woman whose name cannot be mentioned, whom Laura named our daughter 'Diana' after, came into the room.\n\n\"Please, stay seated.\" she said as I attempted to stand up out of courtesy. \"Your back is still hurting you, I perceive.\"\n\n\"You perceive correctly.\" I said. The woman asked Jack for a moment alone with me, and he quickly exited the room.\n\n\"I just wanted to tell you, Commander Troy,\" she said, \"that I personally was as upset as your wife when I heard what that bastard Walker did to you. And I had no problem with your wife's order to terminate him. I would like to have carried that order out myself.\"\n\n\"Thank you.\" I said. \"So how may I be of service to you today?\"\n\n\"I am here to be of service to you.\" said the woman as she sat down. \"Please sign this paper that you will not divulge what I am about to tell you... not even to your wife.\" I signed the paper.\n\n\"I have been briefed on what you've told your wife and the FBI.\" she said. \"Let me first give you some background. There are a number of people like myself within various branches of the Federal Government. Our names, positions, ranks, and job descriptions are classified and compartmentalized at the very highest levels.\" I nodded.\n\nShe continued: \"We, meaning the FBI, your wife, and myself, believe the man you saw while under that enhanced interrogation was one of those people, someone so deep in the shadows that even I don't know a thing about him. And I will tell you this, Commander... you should never speak of him again. If he knew you saw him, and could identify him by sight... he might try to finish what Walker started. You are a wise and careful man, Commander, but we are not talking about politicians at the County level, here.\"\n\n\"I understand, ma'am.\" I said. \"Any ideas what he's about?\"\n\n\"You have been working with the FBI Deputy Director on white supremacy issues, and a group known as 'Superior Bloodlines'. He may be involved with that. He may be on the Deputy Director's side, or Superior Bloodlines's side. I don't know. Certainly if I find out anything, and especially anything that is a threat to you or your family, I will let you know, or I'll tell Laura and she'll tell you.\"\n\n\"Thank you.\" I said, then asked suddenly: \"Ma'am, what is Melina Allgood's role in all this? And in the CIA?\"\n\n\"I believe you know just about everything about your former wife.\" the woman replied. \"And I'm not dodging your question; there simply is nothing to tell, there.\"\n\nUh huh, I thought to myself, but let it go. Instead I hit the woman with the bombshell: \"Ma'am, how are you feeling today?\"\n\nMy capacity to surprise this woman was long since gone, but she understood. \"Not much gets by you, Commander, as I've had previous occasion to understand. To answer you: this entire conversation is classified and under that document just signed. You had better not speak even one word of my health to anyone, and especially not your wife.\"\n\n\"Ma'am,\" I said, \"my wife loves you as if you were her own mother. Please... do right by her and let her know.\"\n\n\"I'll consider your suggestion.\" she said. \"But it is my decision to make.\" I nodded, unable to argue with that. She then said \"If you'll excuse me, I will go surprise your wife in her office. Please don't call her; let me surprise her.\"\n\nI nodded, not saying out loud that this woman was chock full of surprises at every turn...\n\n* * * * * * * * * * * * * * * *\n\nAt 5:45pm I walked back into Police Headquarters. My I.D. card allowed me in, and no one tried to take my badge from me. As I was about to go into the anteroom of my office, Helena said \"Don't even cross the threshold, Commander. The Chief wants to see you in the Main Conference Room.\"\n\n\"Thanks, Helena.\" I said. \"Well, if worst comes to worst, thank you for all you've done for me.\"\n\n\"It's not that bad, sir.\" Helena said with a smile. \"At least that's what Captain Ross said.\" I nodded and told Helena she could go home... and that she could consider that an order to do so.\n\nThe Main Conference Room was occupied by the Chief, Captain Ross, Commander Harlow, and the Three Mouseketeers: Detective David Krueger, Supervisor Myron Milton, and Master Technician Mary Mahoney Milton.\n\n\"Welcome back, Commander.\" said the Chief as I sat down... slowly. \"How was your day with our friends of the FBI?\"\n\n\"Enlightening.\" I said.\n\n\"That's a good word.\" said the Chief. \"Our County Sheriff received some enlightenment today, as well. He has agreed to let us do our jobs, and will stay out of your wayyyy.\"",
        "\"Is the threat of a green crowbar beatdown involved in his agreement?\" I asked, my eyes glancing sideways at my Captain of Detectives.\n\n\"Not much gets by you, Don.\" said Della. Cindy just assumed an innocent look on her face that fooled no one present.\n\n\"Sir,\" said Mary, \"the Campus Police and our Officers have done interviews and I've collated their expedited reports. Everyone on Campus that knew Jason Solomon was shocked by his death. No one knew of any enemies he had, anyone who had threatened to harm him or had argued, meaning really argued, with him in the past.\"\n\n\"Any idea on a timeline for him last night?\" I asked.\n\n\"The Black Student Union had a meeting last night.\" said David Krueger. \"He was there from 7:30 until at least 10:30 when the meeting ended. There were two speakers at the meeting, one talking about the history of integrating colleges in the South back in the 1960s and 1970s, and the other discussing the role of the Black Student Union on campus and working with the State Legislature to pass bills the Black Community wants passed. According to Detective Washington, who interviewed the BSU members along with Sergeant Carswell, nothing in the meeting was inflammatory nor overly political.\n\n\"After the meeting,\" said Krueger, \"Solomon left to go back to his dorm room. He was enrolled in the Summer semester. However, his roommate said he never came home last night, and his roommate didn't worry about it, thinking he'd probably gone home with a girl.\"\n\n\"Is the roommate black or white... or 'other'?\" I asked.\n\n\"Black.\" said Mary. \"He is also in the Black Student Union, but had stayed home to study for exams.\"\n\nJust then my Police cellphone chimed, indicating an email deemed 'urgent'. I looked at it. \"Ah,\" I said, \"T-Square has sent an email. Hmmm... a personal services contract offer for Captain Ross...\"\n\nCindy glared at me. I continued, unperturbed: \"Ah, he says this kid Solomon is a University student, has a job tutoring football players and other athletes, and was an intern for Councilman Reginald B.F. Lewis last summer. T-Square says Solomon had no dealings with anyone T-Square is connected with.\"\n\n\"Nothing we didn't know already.\" Mary said. \"We knew about the connection to Councilman Lewis, and Theo has made an appointment to talk with the Councilman this evening.\"\n\n\"Good.\" I said. After a moment I realized I'd gone into a reverie.\n\n\"Any ideas, Commander?\" asked the Chief.\n\n\"Let me ask everyone... anyone see any connections between our two 'New Black Widow' victims?\" I asked in reply.\n\n\"Both were Management majors.\" said Cindy. \"Then there's the mirror-image relationship of one being in a Good Ole Boy fraternity and the other in the Black Student Union.\"\n\n\"Stating the obvious, sir,\" said Krueger, \"they were both college students, and Patrick was visiting the University, while Solomon was an enrolled student.\"\n\n\"Good point, and we should not make the mistake of overlooking the seemingly obvious.\" I said. \"And adding to it: both were either on or very near the Campus when they disappeared. That could be important.\"\n\n\"I've already talked to Campus Police Commissioner Robinson.\" said Chief Moynahan. \"They're stepping up patrols, and we're going to send a few patrols through to help them out, as will the Sheriff's Department. President Wellman called Sheriff Allgood asking for that assistance, to make it formal and keep things tidy.\"\n\nJust then, there was a knock on the door. The Duty Desk Sergeant looked in. \"Commander, Dr. Bonnie Karpathian is in the front lobby. She says the Sheriff asked her to come down so you can brief her on this latest Black Widow killing.\"\n\nEveryone was in shock, and I groaned out loud. \"Thanks, Sergeant. Ask her to wait in the waiting room and someone will come to get her.\" The Sergeant left.\n\n\"I feel like going and hiding somewhere.\" I said. \"I don't want to be mean to Bonnie, but I am not briefing her on this.\"\n\n\"I'll handle her.\" said the Chief.\n\n\"I'll hide in Captain Ross's office until she passes by.\" I said. \"Then I'll sneak downstairs where she's not allowed to go. Maybe I'll get in some range time, even though Captain Ross needs it more than I do.\"\n\n\"That sounds like a challenge with a bet behind it.\" said Cindy. \"And it is accepted.\"\n\n* * * * * * * * * * * * * * * *\n\nCindy won the shooting contest. Consider me not surprised. For her reward, I offered her an evening with my family at the Mountain Nest, complete with being fed supper, having Carole 'read' to her, and petting Bowser and Buddy. She said she'd take a raincheck, as she and Callie were going out to dinner tonight.\n\nMy mother did join us for supper. Afterwards, she and Laura put the children to bed while I took the dogs out to do their business. As I sat outside waiting for them, I considered the two crimes of the new Black Widow. But my thoughts kept drifting to other things.\n\n\"Yes, you should be wondering what is going on with the Sheriff.\" I heard my mother's voice say from behind me. She then came around and sat down beside me.\n\n\"Taking up psychic lessons, Mom?\" I asked. \"I thought you didn't like P. Harvey Eckhart.\"\n\n\"You're right about that, son.\" my mother said. \"As to what you're thinking... a mother knows.\"\n\n\"And what's your answer?\" I asked.\n\n\"Daniel Allgood is a good man, and he means well.\" my mother said. \"But he lacks one quality that you possess: he cannot handle pressure very well, certainly not as well as you do.\"\n\n\"And he's under pressure?\" I asked.\n\n\"Oh, yes.\" my mother said. \"You're able to handle the fact that your wife is a CIA Agent obligated to withhold secrets from you. Daniel has not understood that of his wife. Daniel still does not understand why his wife was beaten up so badly on the day you destroyed that despicable Consultant of Crime. I don't understand that either, perhaps you do, son?\"\n\n\"Nope.\" I said. \"I have not figured that one out, at least not yet.\"\n\n\"And being Sheriff is a very political position.\" my mother said. \"He has this Robert Brownlee situation to deal with. It's easy for you to deal with; it's very difficult for him, especially with Public Health Officer Loran Michaels going to the Media about him, the Sheriff. And then he has this rebellious young Police Commander to deal with.\"\n\n\"I wouldn't be 'rebellious' if he'd let me do my frickin' job.\" I mumbled. \"And that part of it, I don't understand. I think I've demonstrated that I do a pretty good job. Help me to understand his problem with that, Mom. And with me.\"\n\n\"Oh, I have no idea.\" said my mother. \"What I do know is that there is a conflict somewhere, and it is creating a conflict within Daniel. And it is that conflict, and the root of it, that is our key to understanding everything else. Now let me ask you this before I go back to my apartment and you talk to Laura: do you have any idea what these Black Widow killings are about?\"\n\n\"I have some ideas, Mom.\" I said. \"But I can't prove a damn thing right now, nor do I even see where to start finding the evidence to prove it.\"\n\nPart 12 - Into the Parlor \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" Bettina yelled at 7:00am, Thursday, August 11th, from in front of City Hall. \"Channel Two News has learned that Public Health Officer Loran T. Michaels will run for the Town & County Council seat vacated by the death of Pastor Raymond K. Westboro! Mr. Michaels says he is running to, and I quote, 'rein in the actions of the most arrogant Sheriff in the State'. Mr. Michaels has expressed strong opposition to Sheriff Daniel Allgood's plan to put former Police Deputy Chief Robert Brownlee into an equivalent position in the Public Health Department.\"\n\n\"In other news,\" continued Bettina, \"Police still have no clues in a second murder believed to have been committed by a copycat killer imitating the methods of serial killer Angela Harlan, a.k.a. The Black Widow. SBI Director Jack Lewis, who is running for Governor, said that the Town & County Police should call in the SBI to help solve these cases, and avail themselves of the superior resources of the State-level organization. Sheriff Daniel Allgood has stated that he expects the TCPD to solve these murders quickly and he expects them to prevent future killings, as well.\"\n\nBettina continued: \"Police Chief Sean Moynahan stated that he wants no help from the same SBI whose Agent Leonard Sharples tried to assassinate his Police Commander, and that he trusts Commander Troy and his team to solve the copycat killings.\"\n\n\"That is ridiculous.\" said Teresa Croyle as we watched the Bettina broadcast.\n\n\"Which part?\" I asked.\n\n\"All of it.\" said Teresa. Have I mentioned that others share my deep hatred of the Press?\n\n\"Hey, Theo!\" called out Cindy Ross. \"What's this I hear about your cousin being on the Enemy football team?\"\n\n\"He's not with State Tech.\" I said. \"He signed with the Wildcats.\"\n\n\"That's even worse.\" said Cindy, taking a direct shot at me. \"Now Theo and Franklin are going to be going around in red jerseys...\" She sighed.\n\n\"I went to Eastern State, in the State east of us here, ma'am.\" said Theo. \"But yeah, I hope Jamaal does well.\" Jamaal Washington was a tall, strong wide receiver who had committed to the Wildcats. He was a true Freshman, but expected to play for Coach Richmond's offense this year.\n\n\"I hope he does well, too.\" I said, then added for Cindy's benefit: \"Especially this October across the street.\" A green crowbar was waved in my general direction.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay,\" I said at the 'Crowbar-level' meeting, \"Nothing new nor exciting from the Crime Lab reports. The Mouseketeers report no connection between Solomon and Reece Patrick, nor any connection between any of their families. Simply nothing to connect these two young men... except they're young men and college students.\"\n\n\"That in itself might be a clue, sir.\" said Lt. Teresa Croyle. \"The absence of a connection is in itself something of importance.\"\n\n\"You are most very correct, Lieutenant.\" I said. \"It is important. Okay, any new agenda items?\"\n\n\"Just some new State regulations on crime scenes.\" said Cindy. \"Nothing we don't already do: securing the scene, setting up blinds or tents to keep people from seeing too much, collection and identification of evidence, videotaping of the crime scene.\"\n\n\"Email that to all of us.\" I said. \"Let's make sure our ducks are in a row at the crime scenes.\"\n\n\"Sir,\" said Teresa, \"I've got something. It may be small, and we're just developing it, but since Pastor Westboro died, there may be someone coming in trying to set up a gambling operation. They may be doing it alternatively on and off Campus.\"\n\n\"Who's behind it?\" I asked.\n\n\"Early reports are a guy named Harry Silver.\" Teresa said. \"Small-time bookie, was in Southport but Jimmy 'Coffin' Cerone's Mobsters ran him out of there and revoked his 'Southport privileges'. He's currently believed to be operating tables somewhere in the City, and with Westboro gone, he thinks he can get puppy points and become a Made Man if he can successfully set up here.\"\n\n\"For all his many, many faults,\" I said, \"Westboro was no fan of the basic vices: Gambling, Drugs, Prostitution. Unless he was running those operations himself, of course. Lieutenant, we will have to show Mr. Silver the error of his ways if he tries to come into our County.\"\n\n\"Yes sir, we will.\" Teresa said, the look on her face being one criminals did not want to see...\n\n* * * * * * * * * * * * * * * *\n\n\"Sir, ma'am,\" said the Duty Desk Sergeant to me and Cindy, coming into my office at 9:15am, \"we've got another one.\"\n\n\"Shit.\" I muttered. \"Where?\"\n\n\"Safe-Mart, on Meridian Avenue.\" said the Sergeant. The Safe-Mart was a small grocery store, just west of the bars and apartments on the west side of University Avenue, named after its founder. Students and 'Millennials' often went there, allowing the store to compete with the Krogers and other big-store chains.\n\n\"Thanks, Sergeant. All right, Captain, let's go.\" I said, grabbing my red crowbar. \n\nWe got into my Police SUV and drove over. My vehicle was allowed through the cordon that blocked off the alleyway to the back of the store. After parking, we went towards a back door entrance, giving our vital stats to Patrolman Culver.\n\n\"Why is Patrolman Culver always the one taking our numbers?\" I asked Cindy as we walked towards Sergeant Irwin.\n\n\"Because he does it well, and because he has no interest in the Detective track.\" Cindy replied. I couldn't complain about that.\n\n\"Okay, Sergeant Irwin, what's going on?\" I asked.\n\n\"Sir,\" said Sergeant Irwin, his voice connoting warning, \"the Sheriff is already here, and he brought Dr. Karpathian.\"\n\n\"What?!\" Cindy almost screamed.\n\n\"Easy, Crowbar 2.\" I admonished. I led the way inside, where Officer Phil Goodwright led us to a back warehouse room. Among the boxes of canned food was the crime scene. The Crime Lab people and Martha the M.E. were examining the body of a man in his late thirties or early forties, tied to a metal chair with a black seat cushion, pants pulled down to his knees.\n\nSheriff Allgood was talking to Bonnie Karpathian at the edge of the crime scene. She smiled brightly at us as we came up and was about to speak, then realized that my face matched Cindy's in stone-cold anger at her presence as well as the Sheriff's. Cindy outright glared at them. I nodded to them but did not speak as I went up to within 3 feet of the body, and crouched down to peer at it.\n\nThe 'Black Widow' markings were on his lower abdomen, just above his groin. Either his penis was not engorged, or it was very small. \"I guess there have to be some short-dicked men to make that five inch average work, eh, Captain?\" I said to Cindy.\n\n\"Sounds about right, Commander.\" Cindy replied as I noted that the hourglass in the black circle were much smaller than those on past victims, barely the size of a Kennedy half dollar.\n\n\"Commander,\" said Martha the M.E., \"I am not convinced that this man achieved an erection at all. I'll know more after the autopsy, but I don't think he got it up, even with drugs being injected into him.\"\n\n\"No condom, either.\" said J.R. Barnes. \"And I'm not finding any residual semen, so far. So I think Martha may be right, and this guy didn't get it up.\"\n\n\"Interesting.\" I said, which caused the Sheriff to peer hard at me. Bonnie was just watching, seemingly fascinated by the process.\n\n\"Sir,\" said J.R. Barnes, \"this guy was not hit in the back of the head at all.\"\n\n\"Air bubble in the bloodstream, Martha?\" I asked the M.E. as she examined the body.\n\n\"Could be.\" Martha said. \"Definitely a syringe injection. And before you ask, time of death was between midnight and 1:00am.\"\n\n\"Thanks.\" I said. Then I called out: \"Sergeant Irwin! Who called this in?\"\n\n\"If I may begin at the beginning, sir...\" Irwin said.\n\n\"By all means.\" I replied.\n\n\"His name is Bert Cooper.\" Irwin said. \"He's thirty-nine years old and he was the evening shift manager. He was usually the last to leave, and he locked up after they close at 12:00 midnight. He was found here this morning by the morning shift employees coming in. They called 9-1-1. We're getting the names of evening shift people so we can send Officers to interview them as quickly as possible.\"\n\nI nodded. \"Excellent. Captain Ross, where is Lt. Masters?\"\n\n\"At Headquarters, working with Myron and Mary to get any evidence from any cameras in the area.\" Cindy replied. \"I asked him to do that, so if that's wrong, blame me, not him.\"\n\n\"No, that's fine.\" I said, inwardly elated that Cindy was stepping up and taking responsibility for her people, even though Lt. Masters probably should be here. \"So, J.R., anything in the room or building that could be of interest to us?\"\n\n\"Very little, sir.\" said Barnes. \"They do a good job of cleaning and waxing the floors, so there's no dust to give us any impressions. There are camera in the grocery store areas, and we have those tapes. There is only one camera in these back office areas, which is trained upon the safe in the manager's office. The safe is undisturbed, and it appears that no money nor any merchandise has been stolen. Cooper's car is in the front parking lot, and a team is dusting it down for prints.\"\n\n\"Ms. Universe,\" I said to Cindy, lowering my voice, \"would you please ask the Sheriff how he came to hear about this crime and arrive so quickly? I'll be looking at the body.\"\n\nI examined the body more closely as Cindy went over and talked to the Sheriff and Bonnie. I noticed that the man's fingernails were clipped, not chewed on nor bitten, and that his face had no razor cuts nor razor burns. I also noticed that his hands were zip-tied behind the chair.\n\nCindy came back over to me. I said \"I'm finished here, Captain. Anything you want to look at before we go?\"\n\n\"No sir.\" said Cindy, her eyes showing suppressed anger. \n\nAs we were leaving, Sheriff Allgood called out \"Leaving, Commander?\" there seemed to be just a hint of mocking and acerbity in his voice, which irritated me. Other Officers noticed it, too, which irritated me even more that the Sheriff had called me out in front of my subordinates. I turned to face him.\n\n\"Yes, Sheriff.\" I said. \"I've seen all I need to see here, and learned what I wanted to learn. I'm sure everything is equally obvious to you.\" With that, I turned and strode off, Cindy struggling to keep up without running.\n\nOnce we were in my Police SUV, Cindy said \"Seriously? You know who is behind these killings?\"\n\n\"Maybe.\" I said. \"So, what did the Sheriff tell you?\"\n\n\"He said he heard it on the Police Band radio and then called Dr. Karpathian.\" Cindy said. \"Which is pure cow dung because we've had radio silence on these killings to keep the Press from finding out about them, and we're only communicating through cell phones. So I don't know...\"\n\n\"He was tipped off.\" I said. \"And he doesn't want us trying to figure out who his source is.\"\n\n\"With you it's never 'trying', it's succeeding.\" Cindy replied. \"Scott Peterson, maybe?\"\n\n\"Maybe.\" I said as we passed by the First Baptist Church property. \"Wow, they cleared the church rubble pretty fast, and now they're marking off the new foundations for pouring.\"\n\n\"Yes, they're not wasting time rebuilding.\" said Cindy. \"So, are you going to tell me what's going on here?\"\n\n\"Let's get back to the office first.\" I replied.\n\n* * * * * * * * * * * * * * * *\n\n\"Cooper was divorced about four years ago.\" said David Krueger. \"Wife moved out of State. No children from the marriage. He had an Associates Degree from Town Technical Institute. Worked at this Safe-Mart Grocery for two years now. Worked at the Kroger near the Northwest Mall before that. No social nor service clubs, no involvement in anything. Totally unexceptional guy.\"\n\nWe were in my office at 10:30am. With us was Myron, Mary, and Cindy. The Mouseketeers had quickly amassed what little data there was on Bert Cooper.\n\n\"He had a bankruptcy about four years ago.\" said Myron. \"Coincident with his divorce. Didn't have much before that, but his wife really took him to the cleaners. Got some scoop on him having an affair, and the judge gave her everything.\"\n\n\"Probably didn't help him that his wife later married the lawyer that was representing her in the divorce.\" said Mary.\n\n\"Hoo boy.\" I said. \"Don't get me started on the double standard of divorces.\"\n\n\"What are you complaining about?\" inquired Cindy Ross, knowing my divorce from Melina had been amicable and without problems.\n\n\"I was the exception that proves the rule, mon ami.\" I replied. \"Okay, any correlation at all to the other two copycat Black Widow victims?\"\n\n\"Absolutely nothing.\" said Kreuger. \"If either Reece Patrick or Jason Solomon went to that grocery store, they paid cash... because there are no records of them using credit or debit cards there. The FBI has absolutely nothing on Cooper being involved with any racial issues, nor being politically active. Cooper has no ties to the University that we know of, either.\"",
        "\"We're running through all the other employees of the store, as well.\" said Myron. \"Nothing on any of them so far, and no correlations to the first two victims.\"\n\n\"Like he was chosen at random.\" said Cindy, more to herself than any of us.\n\n\"Yes.\" I said. \"I agree... and I wonder if maybe all of these killings are random.\"\n\n\"You mean these victims were not chosen for any particular reason, sir, ma'am?\" asked Krueger.\n\n\"Well,\" I said, \"they're not connected to each other, so we have to consider that this copycat Black Widow is doing this for other reasons. Okay, guys, you did great getting this information this quickly. I need you to do two things: first, get with the FBI and all Police Departments in the region, including over the State Line, and ask if any unidentified bodies have been found. Contact the Campus Police and ask if there are any missing persons reports. You can ask the FBI that, as well. Okay, y'all can go.\" With that dismissal, the Mouseketeers left. I went into a reverie. Cindy waited me out.\n\n\"Captain, let's go see the Chief.\" I finally said, pushing myself up out of my chair.\n\n\"Your back is not right, is it?\" she asked, seeing me struggle to stand up.\n\n\"It lets me know if I move it in the wrong way.\" I said, not discussing the true extent of the pain. Concerned, Cindy followed me to the Chief's office, into which we were admitted.\n\n\"Sooooo...\" said the Chief after he had us sit down, \"... what do you think of this last killing?\"\n\n\"It seems to be random, or at least this victim is random in relation to the other killings.\" said Cindy. \"I have to admit that I'm at a loss to see any connections.\"\n\n\"There is one connection.\" I said. \"The same person did all three killings. Before this last killing, I considered that it might be more than one person, but I now believe it to be the same person.\"\n\n\"What else can you tell us?\" asked the Chief.\n\n\"This person had or has a limited amount of the grease paints and lipstick.\" I said. \"This person may have had an accomplice for the first killing, but not the last two, so we're dealing with a Lone Wolf. I don't believe the victims are connected to each other. As to the motives of this Bad Actor, I feel like we're the flies being invited into the spider's parlor.\"\n\n\"So Chief,\" I continued, \"I'd like to ask you to tell the Sheriff that I won't be visiting any more of these Black Widow crime scenes, that I'm assigning Captain Ross and Lt. Masters these cases, and that I will not be personally involved with them any further. And you can tell him to feel free to disseminate that information as far and wide as he cares to.\"\n\n\"Are you serious?\" Cindy asked.\n\n\"Heh heh heh heh.\" chuckled the Chief in his unique way. \"I think I see what you are doing, Mr. Crowbar. And yes, I will tell our Sheriff exactly those things.\"\n\n\"How about telling your 'Kato' what you are doing.\" Cindy 'suggested'...\n\nPart 13 - Flytrap \n\nThursday evening, August 11th. It was about 10:30pm, and the sun had long since made its way past the western horizon, leaving the Town in Summertime darkness. I was sitting in my office, wearing a civilian black shirt, khaki pants, and black Army boots.\n\nI was deep in a reverie, putting together the pieces of the puzzle. I was sure who the New Black Widow was. The trouble... was proving it. Even just getting probable cause to execute a search warrant and then an arrest warrant. And doing something... before someone else was killed. I looked up at the ceiling, making patterns in my head of the indentations in the tile. Then I looked over at the framed shields of Pete and Tanya. My eyes closed...\n\n\"Oh, Commmannnnndderrrrrr..\" said that husky voice.\n\nI opened my eyes. It was dark, only the moonlight filtering into the room. I was seeing in black and white. Angela Harlan was sitting on my desk, naked but for her black pumps, her shapely legs crossed in front of her, yoga-style. \n\n\"Soooo close, my darling Commander... but soooo far away...\" Angela said. I couldn't tell in my head if it was a commiseration or if she was taunting me.\n\n\"What did Westboro do to you?\" I heard myself ask.\n\n\"Ohhhh, I seeee...\" said Angela. \"You're beginning to figure it out.\" She looked over towards Feeley's badge. \"Way too late, though. Waayyyyy too late.\"\n\n\"What do you want, Angela?\" I heard myself ask.\n\n\"Mmmm... sex with you was... out of this world, for lack of a better term.\" Angela said, grinning. \"Of course, Callie was the perfect medium, wasn't she? And don't tell me you didn't like it...\"\n\n\"Okay, I won't tell you.\" I said. \"So why do you insist on being in my head right now?\"\n\nAngela stretched out her legs, then stood up on the floor. \"Just to tell you,\" she said, \"that your problems are solved...\" Then I was blinded by a light and closed my eyes...\n\nWhen I opened them, my office light was on, I was seeing in color... and I was seeing Captain Cindy Ross standing on the other side of the desk.\n\n\"Sorry I woke you up, Commander.\" Cindy said. \"You okay?\"\n\n\"Yeah.\" I said, feeling disoriented. \"What brings you here?\"\n\n\"You.\" Cindy replied simply. \"You're obviously expecting something to happen. How can I help?\"\n\n\"You and your 'vibes'.\" I said, very sure that's what it was. \"Well, I---\" \n\nJust then my Police cellphone chimed. There was a text message for me. When I opened it, I gasped in shock as I saw the picture. I showed it to Cindy.\n\nA woman was tied up, and her mouth was gagged. She was looking at the camera that had taken the picture of her face from up close. But more chilling was the message. It said to come to the warehouse where Pete Feeley had been murdered... and to come alone.\n\nIt was signed 'The Black Widow'.\n\nTo be continued.\n\nSo, dear readers, who is the New Black Widow? And who is her latest, tied-up victim? And what is the reason behind these killings? Solution next chapter... and a whole lot more."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/return-of-the-black-widow-ch-03"
}