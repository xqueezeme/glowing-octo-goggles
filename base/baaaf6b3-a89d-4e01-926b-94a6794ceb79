{
    "title": "Taking Command",
    "pages": [
        "We all understand the impact of leadership on organizational dynamics and effectiveness. In a military unit in a war zone the impact can be more pronounced and more rapid. \n\nWhen I arrived in the RVN in the summer of 1969 I was assigned to an Assault Helicopter company commanded by a Major. A commander served for six months; in my one-year tour of duty I experienced three commanders. The first one was \"short\"; that is, scheduled to leave the unit in short order, when I arrived in the unit. He was a bigger than life and charismatic character. There were always affectionate jokes about his style and his Italian American argot but it was clear from the start that he was respected, revered---even loved. The unit in question was one of the most decorated of its type to have been activated during the Vietnam conflict. They saved many lives during the siege of KehSan and the battle for Hue.\n\nHe was replaced by a man as different in style as one could imagine. My second commander was a third tour aviator; he was quiet, understated and firm but never flamboyant. The unit continued to flourish under his calm, soft-spoken leadership.\n\nSadly he was replaced after six months by a man who didn't deserve to wear the uniform let alone the insignia of an officer. A pocked marked, oily, red faced little man who couldn't say ten words without four of them being profane and who was virtually illiterate in both oral and written communication. He lied, acted unethically and embarrassed himself at every opportunity. He wasn't even a very good pilot. \n\nWithin a month drug use skyrocketed and stupid accidents increased. At least one crew was lost during a blatantly idiotic attempt to fly under a bridge, another was involved in a senseless, inadvertent killing of an innocent civilian and we had our first attempted fragging of an officer. Missions were missed or poorly executed, maintenance availability plummeted and the unit went to shit---while the ugly little man turned redder and screamed even louder. Even more startling, the other officers in the command---who had excelled under their previous leaders---began to demonstrate traits and behaviors every bit as onerous as the commander.\n\nHow did the man become an officer, let alone a field grade officer, even more unthinkable, a unit commander? I certainly don't have a clue.\n\nThe other night I was watching an episode of The Unit. The TV show is loosely based on a book about Delta Force. In this particular segment, the highly trained special forces team must defend a small logistic outpost manned by poorly trained soldiers who lack discipline and any vestige of unit integrity due in part to an unclear or poorly established chain of command between the \"box movers\" and the security platoon assigned to protect them. The young female lieutenant in charge has apparently been tentative about taking command in the past. Under the expert tutelage of a highly trained and experienced sergeant major she becomes the commander she needs to become if the outpost is to survive.\n\nThe sergeant major could easily have said: \"LT, you have zero combat experience and I have lots of it. This is now a combat command and I need to be in charge.\" She would have agreed instantly. Instead, he reinforces her role as commander, coaches her quietly and helps her find her own inner grit. To some this may seem overly optimistic and unrealistic; admittedly the story suffers under the confines of an hour in prime time. \n\nI've seen it happen time and time again in the military, although it generally takes more than an hour. Sometimes it's a new commander. A General Ray Davis taking over the 3rd Marine Division and completely securing an Area of Operation that had been nasty for years in barely six months. Sometimes it's a good lieutenant, captain or even a lowly staff sergeant. You notice the initial changes in attitude and bearing within a day. \n\nWe all crave competent, ethical leadership; it brings out the best in us. Our current national malaise certainly has its genesis in too many years of unethical, incompetent and uncaring leadership in all branches and levels of government.\n\nI touched on this theme in a previous work entitled, A Man Among Women. My fictitious unit this time, assigned a mission in an equally fictitious war is probably typical of many units in the US Army today. Populated with young men and women who joined up to help pay for college or learn a trade and inadequately trained in combat operations under the Army's recent and pathetic, \"kinder, gentler\" training regimens. Virtually all of the unit's members are assigned non-combat occupational specialties, have received inadequate training in basic security measures and never expected to hear bullets flying over their heads.\n\nIt would be realistic to expect that a generic aviation company with the basic mission of moving \"boxes and bodies\" in a combat support role would be heavily populated with female aviators and support troops. One would expect that they would be highly competent and adequately trained in their logistics role and flight duties but not so prepared to face the rigors of war.\n\nNot having the luxury of replacing the failing unit or of replacing the bulk of its personnel with more seasoned soldiers, the division commander calls on the services of an old war horse with significant previous combat command exposure. The general officer is desperate; his fighting units need their bullets and butter. If this aviation company can't be whipped into shape quickly, many soldiers will perish from lack of critical supplies. He needs a miracle and prays that he's found the right man to deliver one.\n\nThis is not remotely a celebration of war or a political statement. It is, I hope, a tribute to our nation's combatants with a special nod to our citizen soldiers, those we call back into service long after they have fulfilled their obligation.\n\n***\n\n\"I can't say I'm pleased to see you standing in front of me, Major. I didn't pick you; the division commander has flagrantly usurped my authority as the support brigade commander...forced you on me.\"\n\n\"With all due respect, ma'am, I can't say I'm particularly pleased to be standing in front of you. I've done my time and paid my dues---in three conflicts.\"\n\n\"Your DD214 indicates that you are...forty-four? That's pretty old for a Major; I assume you've been passed over for promotion more than once.\"\n\n\"No, ma'am, that would not be a valid assumption. I spent eighteen years of active and reserve duty as an aviation Warrant Officer---Chief Warrant Officer, W4. I was commanding a reserve aviation company and someone decided that since it was a Major's billet it should be commanded by an O4. I accepted a direct commission in the reserves four years ago. I intended to stay in the reserves for thirty and draw retirement. Now I'm here.\"\n\n\"In my opinion you are absolutely the wrong person for this command. These are not combat soldiers; they are not used to the rigors of this kind of assignment. They need to be handled with finesse, a gentle hand...understanding. My lord, you're almost old enough to be one of their parents! You'll have a very difficult time relating to them.\"\n\n\"My understanding, ma'am, is that their stateside commander failed to deploy with them due to unspecified personal issues. The commander subsequently appointed to take charge---by you---failed to do so. The unit has yet to adequately perform their assigned mission on even a basic level. I was of the impression that I was here to command them---not relate to them or be their buddies. You're stuck with me, Colonel, and with all due respect it appears that I'm stuck with you and the command of a dysfunctional aviation company. I'd like to get on with it so, assuming we have nothing further to discuss...Colonel.\"\n\n\"You border on disrespectful and insubordinate, Major.\"\n\n\"I'm not much for politics and butt kissing, Colonel. I'm just calling it the way I see it. Will there be anything else, ma'am?\"\n\n\"No, I suppose not. You're dismissed.\"\n\n\"Yes, ma'am.\"\n\nJust take care of moving your fucking boxes and stay the hell out of my hair, lady! Major William Wallace mused as he walked from the brigade commander's office in the direction of his new unit. He heard the HUMVEE racing up behind him and moved as far off the dirt road as was prudent. He heard it screech to a halt and turned to see the two star VIP plate affixed to the front of the vehicle. He came to attention and saluted as the division commander exited his command vehicle.\n\n\"Major, it would seem that the good colonel failed to present you with your commander's tabs. May I do the honors?\"\n\n\"Of course, sir.\" The green tabs signifying a command billet were quickly affixed to the epaulets of the major's combat utilities.\n\n\"Stand at ease, Major.\" The general intoned, extending his hand. \"Good to see you, Bill; it's been a few years.\"\n\n\"Nothing personal, sir, but a good dinner and some single malt at one of our favorite watering holes would have been just fine with me.\"\n\n\"I'm sorry to have done this to you, Bill, but I was out of options. I need you here; I need one of your miracles.\"\n\n\"I'll give it my best, sir.\"\n\n\"I know you will. On another note, here is a copy of your new unit orders; I was on my way to deliver them to the colonel. I need you to deploy that aviation company to a forward support base. They're useless to me back here in the rear. I need it done in seventy-two hours. Once you deploy the unit, you are under the operation control of the First Mechanized Brigade; your unit will ferry material to their five combat outposts, each of battalion strength. \n\n\"Chinooks and trucks---when they can get through---will drop off their loads at your location. You're unit will break them down, redistribute the loads to Blackhawk size and deliver them to the combat outposts.\"\n\n\"Security?\"\n\n\"My engineers are already erecting berms, digging trenches and clearing a perimeter. You'll have a Marine platoon assigned.\"\n\n\"What's that amount to, sir? Thirty some Marines to protect 298 aviation and supply personnel and eighteen Blackhawks? How close is the nearest combat battalion?\"\n\n\"Three hours overland, twenty minutes by air. Have you had a chance to take a look at what you just took command of?\" \n\n\"You know me, sir. I put on my trusty E5 chevrons and did a little scouting yesterday. The troops appear to have a high degree of military bearing. Their company area is clean and well policed. Their aircraft and vehicles are well maintained. They have regular formations and do daily physical training. Military courtesy is observed and enforced---salutes and greetings are exchanged. It's a textbook garrison unit...not so sure it's a combat unit or even a combat support unit...or ever will be.\"\n\n\"Anything else you noticed?\"\n\n\"Not a single hard stripe or commissioned officer who isn't female. A few maintenance specialists and a handful of male warrants but essentially...petticoat junction. Their security platoon, what there is of it, appears to be deployed picking up trash and painting rocks white...and even it is over three quarters female.\"\n\n\"Is that going to be a problem you can't handle?\"\n\n\"Just an observation, general. We both know that none of these folks went through even a realistic stint in basic training. It's doubtful that any of them have fired a weapon since their last annual qualification---although I'm sure all of their personal and crew served weapons are well maintained and...neat as a pin. If they ever had a one hour class in unit security, they probably don't remember it.\"\n\n\"Carry on, Major. I can't think of anyone more qualified to turn things around and make that company effective. The colonel, in spite of the fact that she is, with those orders, not in your direct chain of command anymore, can be meddlesome...loves to micro-manage. If she becomes an issue, let me know---immediately. Once you deploy she has no real business coming out to see you although she is in overall charge of the division's support and logistics. She is not a combat branch officer---you are. Hopefully you won't have to remind her of that fact.\"\n\n\"Does she know her stuff, sir?\"\n\n\"She is a friggin' genius when it comes to logistics. She is a solid support brigade CO and, as irritating as she can be at times, she runs a tight ship and knows her business. Make me proud, Bill...make us all proud.\"\n\nTen minutes later Major Wallace walked into the portable structure that served as the unit's orderly room and headquarters. As stunned as they might have been to see a weathered, male major wearing command tabs in their midst, the fetching young specialist who first noticed him quickly called the room to attention. It is traditional to do that once each day, the first time a senior officer enters a work area.\n\n\"Carry on.\" he intoned and the people present returned to their tasks. \"I'm looking for the XO.\" The Executive Officer had been designated as the temporary commander of the unit.\n\n\"She's not here, sir. She's teaching a class on local customs, language and sensitivities,\" replied the young specialist.\n\n\"Marvelous! Perhaps the First Sergeant?\"\n\n\"I'm the First Sergeant, sir,\" said a woman moving toward him from the back of the structure. \"First Sergeant Margaret Cummings, sir. How may I help you, Major?\"\n\nBill quickly perused the short, stocky woman who he judged to be his age or a few years his senior.\n\n\"Have you always been in aviation, top?\"\n\n\"No, sir. Started out in the MPs, then most of my career in supply...I'm fairly new to aviation...two years, sir.\"\n\n\"Well, First Sergeant, it's a pleasure to meet you.\" Bill said extending his hand. \"As you've doubtless surmised, I'm your new CO. In my hand I have new orders for this unit---deployment orders. Please have someone retrieve the XO and the unit's officers, commissioned and warrant, and have them fall in outside in...fifteen minutes---all of them. Then I'd like a formation of the entire company on the hour---everyone, even the walking wounded. Whatever uniform---or non-uniform---they happen to be in at the moment.\"\n\n\"Yes, sir!\" the first sergeant replied, unable to suppress a quick smile.\n\nAll of the officers were in formation within the designated time frame. They were all in proper uniform and their haircuts were regulation. Bill told them to stand at ease and introduced himself. He then read them the deployment order. He identified key leaders and addressed them individually. Then he addressed the entire group.\n\n\"Make no mistake, ladies and gentlemen. We will deploy from this location within seventy-two hours. Heavy lift will assist us with the equipment we can't handle ourselves. Load the TO&E (Table of Organization and Equipment, or the essential equipment and supplies required for a line unit to operate) first. After that, prioritize the 'nice to have' stuff with first priority to spare parts, tools, weapons and ammo. I expect this unit's officers to roll up their sleeves and make this happen efficiently and safely.\n\n\"After the company formation, I want to meet with the senior NCOs while you communicate with your people. Following that we'll meet back here so you can brief me on your load out plans. Security platoon leader, please remain behind with your soldiers. XO, dismiss your officers.\"\n\nThe security platoon leader was a tall, wiry, attractive young brunette lieutenant. There were six men and twenty-four women in her charge including a somewhat mannish Sergeant First Class. Bill walked the ranks and did a quick visual inspection. They looked very sharp; they looked very young.\n\n\"Sergeant, take charge of your formation. Lieutenant, let's step into my office...assuming I have one.\" The young lieutenant fell in beside her new CO. \n\n\"Have a seat, Lieutenant. Tell me about your security platoon.\"\n\nThe young lieutenant proceeded to do so and do so quite well. \n\n\"Lieutenant, now tell me a little about their commander. How'd you get here?\"\n\n\"I'm a reservist, sir. I was called up to augment this unit. I know most of my people from civilian life, sir. They're solid. They're damn tired of painting rocks...it's not what they signed up for. I did a four year hitch in the MPs, then the last three in the reserves. I'm a cop back home---so are more than half of my people. My platoon sergeant is rock solid; she's also a cop---state police.\"\n\n\"Combat experience?\"\n\n\"Maybe less than half in checkpoint security and such. My NCOIC (Noncommissioned Officer in Charge---the platoon sergeant) saw significant action in the last conflict.\"\n\n\"And you?\"\n\n\"A six month deployment in what wasn't supposed to be a war---but turned into one...in the Caribbean. You sir?\"\n\n\"I seem to be unable to miss any of our little adventures overseas. This is my fourth.\"\n\n\"You commanded an aviation unit before, sir...in a combat zone?\"\n\n\"On more than one occasion.\"\n\n\"Outstanding, sir.\"\n\n\"Lieutenant, as soon as we link up with our Marines I want you connected at the hip to their platoon leader. Don't let your ego get in the way. If you can't work together effectively I won't be pleased. If you are missing anything---or need anything you don't have which isn't on the TO&E---let me know.\"\n\n\"A Ma Deuce (M2 fifty caliber heavy Browning machine gun, first used in WWI and still in regular use today) would be nice...two of them even better.\"\n\n\"We don't have any? Fuck! Excuse my French. Get me a list---within the hour. Carry on, Lieutenant.\"\n\nMajor Wallace was pleasantly surprised when he met with his officers a while later. They appeared to have already kicked off their deployment plans. He had been equally impressed with the tenor of the senior NCOs.\n\nA couple of hours later he went to another location to meet with the combat brigade commander to whom he would report.\n\n\"The Commanding General speaks very highly of you, Major. I sense you two have some history?\"\n\n\"I was a brand new wobbly-one Army Aviator twenty some years ago when he was just a Captain. We seem to have bumped into each off and on over the years. I suppose we've hauled each others butts out of the fire a few times.\"\n\n\"What can I do for you, Major?\"\n\n\"I need to beef up the security platoon's weapons load. A couple of M2 fifty cals, a couple of mortar tubes, some sniper rifles.\"\n\n\"You have personnel trained to use 'em?\"\n\n\"I've got two Michigan state police snipers who own Barretts(.50 cal sniper rifles) back home. My M60 gunners have received M2 training. I've got a warrant aviator who started out enlisted in mortars. And wire---a hell of a lot more wire, some Claymores---here's the list, Colonel.\"\n\n\"Well, the one thing we seem to have here in the rear is a shit load of excess equipment and ammo. I'll get with my S4 (the brigade logistician) and get it on a seven ton and in your hands by the end of the day. Anything else, Major?\"\n\n\"No, sir. That should do it.\"\n\n***\n\n\"Portable toilets, Major,\" said the first sergeant on Bill's return to his unit.\n\n\"Way down my priority list, top. They make perfect targets for an enemy sniper or mortar. They're impossible to service and maintain in the field. If they go in the load plan at all---they go dead last. Even then, I'm thinking no, but let me think about it.\"\n\n\"A suggestion, sir?\"\n\n\"Shoot.\"\n\n\"Just say no, Major.\"\n\n\"Your call, top.\"\n\n\"Thank you, sir.\"\n\nA few minutes later, the first sergeant again stuck her head in the CO's door.\n\n\"A USMC 1LT named Jenkins is here to see you, sir.\"\n\n\"I'll come to him.\"\n\n***\n\n\"Tell me about yourself and your Marines, LT.\"\n\n\"I did a stint as a platoon leader with a Battalion a year or so ago. I'm prior enlisted---basic rifleman. Went to recon school and volunteered to bring this platoon over. Solid NCOs and over half of my Marines have seen combat---all recon trained. Still, I just flew back in from our new home. It's a lot of friggin' terrain to cover with thirty-four Marines.\"",
        "\"Plus my security platoon, which you and I need to go meet with. More than half of them are reservists and cops. Maybe less than half have been shot at before. The LT and the NCOIC appear solid. I'm augmenting their basic complement with some heavy weapons. Lieutenant...\"\n\n\"Sir?\"\n\n\"This unit is ninety percent female; my security platoon only slightly less so. I need you and LT Chandler to work well together---connected at the hip, as they say. Recognizing your greater experience, I would expect that she will be receptive to your ideas. It is her platoon---her command---however. I know enough about the USMC to know that having females in what could very quickly become a combat environment is anathema. Make it work, lieutenant; I've already delivered that message to her in no uncertain terms. Any questions?\"\n\n\"We'll make it work, sir. Sir, you seem a little older than the average Army O4...how'd you end up here?\"\n\nBill knew that the young lieutenant was probing the new commander to determine his fitness.\n\n\"This is my fourth of these little cluster fucks, lieutenant. Two on active duty---as a warrant officer or 'gunner' to you. One other recall from the reserves, and this one, thanks to one Major General who just won't leave me alone. This is my third combat command, to include a special ops aviation detachment many years back. I've been in a similar position on one former occasion, running an air cavalry troop out of a remote base. In that instance I had my own ground troops for security and helicopter gun ships. I don't have combat hardened soldiers or gun ships this time. The unit appears to be well disciplined and motivated. They've lacked leadership---hence my appearance on the scene. Most of them have never been shot at---or shot at anyone. \n\n\"I figure we've got a month of good weather and then we're going to be out of business aviation wise for days or even weeks at a time. This is a tenacious enemy we are facing; if I were going to pick a high value, sensational target---I'd pick us. I'd accompany it with a whole bunch of diversionary attacks to prevent the cavalry from coming to our rescue. LT, the question isn't if they're going to attack---it's when. My prediction would be within twenty-four hours of the weather closing in. We need to be ready, while at the same time we need to perform our mission over the next few weeks. Let me introduce you to your counterpart and let you two get acquainted. Where are your Marines, by the way?\"\n\n\"They're on site, supervising the engineers, setting up registration points...digging in.\"\n\nThe two young officers checked each other out very carefully. After making the introductions, Bill left to attend to other pressing issues. He knew it was imperative that the two young security officers function seamlessly together. He also knew that only the two of them could make that happen...had to make it happen.\n\n***\n\nAs he watched the load out and deployment unfold with only minor mishap, he had to wonder how and why this unit could have become so dysfunctional and been unable to accomplish their mission. His officers showed good leadership skills and his pilots knew their craft. The senior NCOs appeared to hold the respect of their subordinates and work well with their young officers.\n\nPerhaps the most pleasant surprise was the joint security plan his two security officers presented to him. If there was any friction there, he couldn't detect it. The two young officers almost seemed to be reading each other's minds. He was very pleased.\n\nEvery spare minute following deployment was devoted to weapons training and security planning. If the unit was attacked during inclement weather, every person, officer and enlisted, would need to man a position. Countless drills were performed, few with the entire company as the re-supply mission became job one. Bill Wallace hoped that it would all fit together when the need arose.\n\nHis maintenance platoon kept the aircraft in the air and his pilots performed safely and flawlessly. Kudos came their way from every echelon all the way to the top.\n\nHe had expected modesty and personal hygiene issues or at least complaints. He received none. He sat in the cramped van which was the combination headquarters and operations center late one night with his XO and first sergeant. This had become a regular nightly gathering. \n\n\"All I can say is, ladies, thank God this isn't a Muslim country like the last one of these! I've never been a big rum drinker but this stuff is right up there with single malt. Not a bad cigar either considering we couldn't be legally smoking 'em back home.\"\n\n\"It's still contraband, sir,\" said the first sergeant. \"How the hell did you get your hands on this stuff?\"\n\n\"I have friends in high places; it was a gift from an old friend. I don't think we should expect a steady diet of it.\"\n\n\"Thank you, sir.\"\n\n\"My pleasure, Captain.\" Bill said, addressing his executive officer.\n\n\"No, I didn't mean for the rum and Cubans---but thank you for sharing. I meant thank you. Thank you for letting this unit show what they are capable of. Thank you for ...thank you for...taking command. That's all we ever needed...someone to show us the way...trust us...teach us...mentor us...lead us.\"\n\n\"Here-here!\" said the crusty first sergeant, raising her metal canteen cup. \n\n\"Thank you, Captain. In all honesty I had no idea how this was going to turn out. So far...damn good, but there's still a lot of road ahead of us. Folks, the next hurdle is going to be different---I'm damn sure of it. And for most of us it's going to be unfamiliar terrain.\"\n\n*** Three days later the seasonal weather closed in. The loading pads were stacked high with supplies from the last Chinook loads before the ceiling dropped to the deck. In a country without benefit of modern navigational aids, further missions inbound were impossible. The Blackhawks made one last re-supply run to their designated unit locations, barely returning to base before the ceiling dropped to zero and the visibility to less than a hundred feet. The forecast said it would get worse before it got better if that was possible. All of the aircraft were secured in revetments. When he walked into the operation area, he was greeted by some rag tag civilian with a camera hanging from his neck.\n\n\"Major Wallace, I'm Ben Ying from...\"\n\n\"I know where you are from Mr. Ying. What I don't know is what you are doing on my base.\"\n\n\"I was dropped off here by one of the Chinooks; I was told I could get a ride from your people out to one of the 1st Mech forward bases.\"\n\n\"Mr. Ying, I don't know if you've taken a serious look at the weather outside but we just suspended all flight operations. Our last birds barely made it back. Based on the forecast, it will be several days before we'll flying out there---or anywhere else for that matter. I am not happy to see you here. Are you a unit assigned imbed?\"\n\n\"No...I'm more or less choosing my own destinations.\"\n\n\"Well, congratulations, Mr. Ying! You final destination for the foreseeable future is an aviation company---basic 'ash and trash,' not a combat outpost. Although, assuming this weather sticks it to us, you may just see some 'combat' yet. We will try to find you someplace to bunk---no small challenge in a unit that is almost ninety percent female. I am up to my ears in alligators right know, Mr. Ying so I don't really have time to chat. \n\n\"Do not take any pictures without asking permission from the people in those pictures. Do not take any pictures that might disclose a land feature outside of the camp since from said picture it wouldn't be too hard for the enemy to pinpoint where we are---not that they don't already know. Every person in this unit who is not bunked out is busy preparing for the inclement weather---and a probable enemy probe. Stay out of the way and don't bother anyone. I'll talk to the first sergeant about finding you a place to stay. Now excuse me.\"\n\n***\n\nAs Bill Wallace viewed the mountain of material that still remained, a single small observation helicopter came in on approach, darting in and out of the low cloud cover. He had no such aircraft in his unit. Who the fuck is that idiot? A familiar figure exited the small aircraft as he approached. Without a doubt the last person he wanted to see or needed to see. It was the support brigade commander. As her pilot secured the aircraft, Bill approached.\n\n\"I don't even rate a salute, Major?\"\n\n\"Check your Army regs ma'am...the 95 series. Salutes are not exchanged on a flight line or during flight operations. What in the hell are you doing here, Colonel?\"\n\n\"Trust me, Major Wallace, this is the last place on earth I want to be. I was checking up on our log operations at the forward bases. The weather came out of nowhere. It's completely socked in between here and the rear. We were running low on fuel and almost didn't find your base. It was here or out there somewhere.\"\n\n\"Frankly, Colonel, as unhappy as I am to see you at my base, I could use your help. My load officer and her folks have been up for twenty-four hours in a row; we've been running around the clock for three days knowing the weather was coming. I need to send them to their bunks before they hurt themselves but I've got a mountain of shit here that I need to get sorted and dispersed. There's enough ammo here to blow up this whole base. We need to sort it, disperse it---and pull out anything we might find useful over the next however many days. My air crews who are just coming off down time are going to help. I need a load officer---someone who knows what this shit is without having to look it up.\"\n\n\"That I can do, Major. I would doubt that there is a single supply nomenclature that I don't know by heart. And Major, just for the record---this is your base. I am not in the combat arms---you are. Just point me in the right direction.\"\n\n\"Yes, ma'am. I need to go coordinate with our security folks. I have a bad feeling about what could be coming. Armor plate, ammo, C4, Claymores, crew served weapons---please put them aside and we'll go through and see if there's anything there we might need.\"\n\nWhat he heard from his Marine LT raised the hairs on his neck.\n\n\"There's significant movement out there sir, still a few thousand meters out but it's coming this way.\"\n\n\"How long?\"\n\n\"I'd expect a probe in the morning.\"\n\n\"Okay, you know the drill; I'll notify the XO and get as many people in their bunks as we can afford. When you have a second, grab LT Chandler and get over to the log pad; we've got a ton of shit there and some of it might be useful.\"\n\nWhen he returned to the log pad a couple of hours later, he was pleased to see a major dent in the piles of supplies. The colonel had her blouse off exposing her green tee shirt and was loading supplies onto vehicles along with the rest of the complement of primarily officers. Wiping her brow with her forearm, she turned to greet him.\n\n\"There's a hell of a lot of water here; we're leaving it to last since it isn't hazardous. There's also more damn ordinance than we can safely disperse throughout the base. We need to move some of it outside the wire and blow it. Also, six bladders of diesel which I don't think we want inside the camp.\"\n\n\"We've got plenty of fuel for our generators and vehicles. Let's move the bladders out to the closest defensive berm\u2014spaced around the camp. We've still got a Bobcat left over from when the engineers were here. My maintenance platoon fixed it. Put each of them in the ditch behind the berm, and cover 'em with dirt. Hopefully we've got someone here who knows how to rig explosives for maximum effect.\"\n\n\"What about throwing some of the 155 rounds into the pile? There's also a ton of powder bags.\"\n\n\"Sure, the bags will burn hot but not explode. The rounds should cook off and the berm should be sufficient to protect out people.\"\n\n\"There's plenty of C4, det cord, wire and detonators. I can handle that, Major.\"\n\n\"Colonel, what do you know about EOD?\"\n\n\"I started in Explosive Ordinance Demolition...enlisted; my first husband and I met there...I've stayed up to date but shit, we're talking pre-Vietnam technology here, I can handle it.\"\n\n\"Take the personnel you need, Colonel.\"\n\n\"There are also four M2s, two 80mm mortars and this.\"\n\n\"Even I know that nomenclature! Not that I have a clue what we're going to do with a 7.62 mm mini gun---if we could make it work. What the hell? My maintenance platoon leader seems to have a gift for gerry rigging things. Send it over to her and see if she can do anything with it. My security platoon leader and her Marine counterpart will be over shortly to scarf up the Brownings, mortars and the plating. Maybe we can mount the M2s on a couple of the vans or even a seven ton. Take the powder bags and put them inside the empty sand bags. We just might find a use for all that smokeless powder yet.\"\n\nBy midnight the log pad was free of dangerous items and most of the rest of the supplies had been dispersed. There was still a mountain of water but there wasn't a good reason to move it.\n\nBill met with his unit in small groups throughout the day and night. If there was an attack or probe in the early morning he wanted to ensure that everyone was fed and hydrated so the modest mess tent remained operational throughout the night. As he addressed each small group while they ate, he had the same message.\n\n\"We are the smartest, best educated, best trained, best armed, best supplied and best led army in the history of the world. We are well dug in with excellent firing positions, superior weapons and clear, overlapping fields of fire. We are prepared far better to fight than our enemy can even imagine. We will win---because we must. \n\n\"If the fight comes to us, politics and causes be damned! We won't be fighting for some esoteric ideal---we'll be fighting to live. It'll get ugly. People will be wounded...some will die. Keep your heads; remain calm and do your jobs. 'Bravery is being the only one who knows you are afraid', according to some nutty colonel who led troops into battle in another war a long time ago. When the bullets come we'll all be afraid, each in his or her own way. Use the fear to your advantage---channel that adrenalin into action not inaction---and we'll come out of this just fine.\"\n\nBill met with his XO and first sergeant as he had on other nights. All knew this gathering might well be their last for some time. He invited the colonel to join them. Each received the last of the aged rum and a final cigar.\n\n\"Any word from the cavalry?\"\n\n\"Evidently they've got their own fish to fry. We've been told to hold our position and possibly expect some air support down the road but no promises.\"\n\n\"Major, how many---what kind of attack ratio---can we repulse?\" the colonel inquired.\n\n\"Assuming an equally competent army, no commander attacks with less than a three to one advantage and most would opt for something closer to ten to one. They are fearless and quite likely hopped up. They make up for a lack of technology with fanatical zeal. They will fight to the death---a message we need to keep drumming into our people's heads. \n\n\"This is an excellent defensive position and we have a few surprises for them. If we're lucky, we might get some air support, although the only aircraft that can put down precision ordinance in this weather are based many hours from here. Unless they literally over run us with more bodies than we can kill, we should be able to resist almost anything...for a couple of days and nights. \n\n\"After that, without relief, they'll just wear us down and I wouldn't want to take bets on the third night. We need to maintain discipline---which won't be easy once the bullets start to fly. The second attack---after the probe---will give us a better idea of what we are dealing with---from them as well as from our own soldiers. Where in the world is our maintenance officer?\"\n\n\"She's still trying to get that damn mini gun to work. She got it running but it won't leave the clearing cycle.\"\n\nAs the others present registered confusion, Bill spoke. \"It's an aircraft weapon. When it fires, the barrels get so hot that the rounds in the chambers can cook off and cause an unexpected discharge. When the trigger is released, the gun clears the chambers without activating the firing pins to prevent cook offs.\"\n\n\"She's also trying to figure out how to slow it down. At the maximum possible bench firing rate of 8,000 rounds a minute the barrels would melt even on a helicopter. At 4,000, the normal max rate for aircraft, it depends on airflow to cool it. With no airflow, the barrels would still melt in short order. She's trying to get it down closer to 2,000 rounds per minute, or roughly 334 rounds per minute per barrel---half of a typical M60 rate per barrel---which should allow for a pretty impressive stream of fire. It didn't come with a maintenance manual.\"\n\n\"What's she got it mounted on?\"\n\n\"A seven ton rigged up with a bunch of hillbilly armor plate we had left over. She's got it bore sited, so if she ever gets it to work it would be nice to have.\"\n\n\"Let's get some sleep folks. It's going to be a long day and it's likely to begin early.\"\n\nAs he moved toward his quarters, he encountered the unwanted journalist enjoying a smoke.\n\n\"Mr. Ying, I apologize if I was short with you earlier. For the record, we are expecting an enemy attack by sunrise.\"\n\n\"Surely your higher headquarters will be sending a combat unit to protect you.\"\n\n\"Not going to happen. They're up to their asses in their own problems.\"\n\n\"But this is essentially a non-combat unit, what---ninety percent female?\"\n\n\"Every soldier in this man's Army has to be prepared to fight. My people have trained for this possibility over the last month or so. We've got a Marine recon platoon out in the bushes and a good defensive position.\"\n\n\"A platoon of Marines---that's all?\"\n\n\"Plus 298 officers, warrant officers and enlisted personnel from the best Army in the world. An Army---and a nation---for which you have occasionally shown a degree of disdain. Yes, I can read, Mr. Ying, and I do peruse your rag. It prompts many heated debates.\"\n\n\"I've never been unfair to the troops; I've certainly gone after their leaders on occasion.\"\n\n\"Well, I'm sure we'll become great buddies, Mr. Ying.\"\n\n\"Not at your level, Major---the higher ups. Have you ever faced a situation like this before?\"\n\n\"I've been in combat and led soldiers in combat, if that's what you mean. Look, you won't get much argument from me when it comes to most of the 'perfumed princes' back in Washington. No love lost here for the bonehead politicians who get us into these messes---and then don't have the fortitude to see it through. But the two star in charge of this division is an exceptional man and a good friend. Although he tested that friendship by yanking me back into harness.\"\n\n\"You're a reservist?\"\n\n\"As are a quarter to a third of the personnel on this base. Doesn't that make you feel safe? Where are we putting you up, anyway?\"\n\n\"I'm bunking with...the First Sergeant.\"\n\n\"I don't even want to know about it---watch yourself.\"\n\n\"What?\"\n\n\"Just kidding. Look, Ying, keep your head down and wear a helmet and armor when you go outside. Make sure you know where the nearest bunker is.\"\n\n***\n\nThe probe came before sunrise. To his relief the fixed crew served firing positions held their fire as they had been instructed. The enemy was attempting to determine their strength and readiness and ascertain the location of the heavy weapons. There were no casualties within the camp and he assumed only moderate ones on the enemy side. The enemy quickly called off their probing attack, certainly very aware that their foe was ready for them and well disciplined. Other than those facts, the enemy force had learned very little about the camp's defenses. ",
        "There were two more half-hearted probes during the daylight hours. There were more enemy bodies in evidence than Bill would have expected. More disconcerting was evidence of movement on their flanks. Their rear quadrant, thanks to terrain, was the only direction from which an attack was unlikely if not impossible on any scale that would pose a serious threat. They had expected all along to be attacked on three fronts or at the very least, a 180 degree front.\n\nThe attack on the second night was a full scale assault or at least a probe in force on a wide front. The attack included indirect fire weapons---mortars---but of such low intensity that it could be assumed that they enemy was not well supplied with such ordinance. A significant number of enemy soldiers got within a few meters of the forward lines but all paid the price for their efforts. They took their first casualties that night. Three dead, three seriously wounded and a dozen ambulatory. It cast a pall over the command and sowed the seeds of doubt.\n\nMajor Wallace rallied his leaders and ensured their heads were back in the game. He sent each of them out to check their lines, redistribute needed supplies and reassert a spirit of confidence and competence. The Marines successfully took out two mortar tubes and indirect fire---which always kills and wounds the most in battle---became a non-issue.\n\nThe third night involved a basic infantry charge in astounding numbers reminiscent of the Chinese pouring across the border into North Korea during the Korean War. The detonation of the buried fuel bladders killed or maimed hundreds but still the attack continued. Daylight would show that some of the enemy died within a few feet of the friendly lines and at more than one location the unit soldiers had to fall back to fighting positions behind them. There were more wounded friendlies and two more KIAs.\n\nThe attack raged for hours and threatened to overwhelm them. Without air support or heavy artillery, Major Wallace himself was beginning to lose his resolve. His radio crackled with the voice of hope.\n\n\"I've got a full load of assorted munitions and my orders are that it belongs to you. Mark your perimeters and give me a box to drop it in.\"\n\nThe edges of the base were marked with special transponders which the B1 bomber thousands of feet overhead would use to determine the extent of the friendly lines. Bill transmitted the coordinates of the box he wanted annihilated. \n\n\"That's danger-close, old buddy. This stuff is precise but not that precise.\"\n\n\"Drop it East-West so you don't end up skipping one in on us. There's a low berm between us and the box. Anyplace else but the box I gave you and it isn't going to do us much good. Give us the heads up and we'll get our heads down.\"\n\n\"You got it, friend....bombs away...two minutes to impact...thirty seconds...duck!\"\n\nThe tens of thousands of pounds of high explosive ordinance dropped in a strip and set with proximity fuses to explode over the target and not on impact had the desired effect. Hundreds of enemy combatants were killed instantly. Their disorientation allowed the aviation unit's security platoon and the Marines to execute a counter attack and kill the remaining enemy between the camp's outer perimeter and the target box. A cheer rang up within the camp. Bill was grateful for the morale boost but knew that the battle was not over.\n\n\"Any more of you guys up there?\" he asked their savior.\n\n\"Tomorrow night we'll get you another load\u2014don't know exactly when but we won't forget about you.\"\n\nThey didn't have any more surprises for the enemy other than a few rows of claymore mines and some booby traps. They'd used up all of their most impressive stuff repulsing the attack. Fighting positions were reinforced, ammunition was redistributed and people slept in their fighting holes in shifts. Bill had been confident that they could make it through two nights; counting the first probe they were coming up on their fourth. He met with his Marine LT.\n\n\"Major, we've taken out their observation posts and we nailed 'em pretty good last night. There are several hundred vehicles massed about three clicks (kilometers) North. My gut says they're forming up for one final hurrah.\"\n\n\"What are we talking about---a cavalry charge? Haven't these people ever heard of General Custer at the Little Big horn?\"\n\n\"We've seen this before, sir. They'll mount up in a bizarre assortment of vehicles and just try to drive into the camp. It's suicidal but they don't seem to care. I recovered a half a dozen shoulder launched TOW (Tube launched, Optically tracked, Wire guided) missiles from the log pad but that's only going to take out a handful. There are probably fifty LAWs (Light Anti-tank Weapon) we could distribute but they're not worth much beyond seventy-five meters---if that with an untrained operator.\"\n\n\"Wait! Did you tell me that you took out their observers? They can't see what's going on down here?\"\n\n\"Roger that....but they'll be replaced.\"\n\n\"I want to set out another line of fighting holes fifty meters in front of where we are now. Don't waste a lot of time digging. Sand bag 'em with the bags of smokeless powder we prepared. Wire 'em up with whatever you can find. There are enough AKs(AK47 Assault rifle the preferred weapon of third world armies) out there to stick a couple over the top of each one. Maybe it will at least ruin their breakfast.\"\n\n\"I like the way you think, Major.\"\n\nThe next member of his command to speak to him was his maintenance officer.\n\n\"I got it working sir---the mini-gun...it works. I've got it on a seven ton with every damn box of linked 7.62 I could lay my hands on. Where do you want us to deploy, sir?\"\n\nOne more surprise in their bag of tricks...would it be enough?\n\nSoon after nightfall the \"mechanized\" assault by the tenacious enemy commenced. The fifty cals hammered away at the speeding vehicles but the onslaught seemed unabated. The TOWs were deployed with excellent, albeit meager results. The LAWs took their toll and still the vehicles kept coming.\n\nThe enemy dismounted, taking cover in the newly created false fighting positions and were quickly incinerated when the rapidly burning powder was touched off. A B1 returned as promised and laid down another strip of death and destruction but by that time there were already enemy trucks inside the wire moving relentlessly toward the friendly fighting positions. \n\nThe enemy had ignored the presence of the seemingly disabled seven ton truck on their flank which was perfectly positioned to lay down a field of enfilade fire. Major Wallace gave the order to commit his last surprise. His brave young maintenance officer advanced on the trucks, tearing them to pieces with a blistering stream of hot death spewing from the six barrel weapon at 2,000 rounds per minute. She herself was at the wheel; when the young woman manning the gun went down, she climbed up on the back of the truck and took over for her fallen warrior. A member of the security platoon rushed to the cab and took the wheel.\n\nThe enlisted woman behind the wheel was killed and the young Captain manning the machine gun critically wounded but not before turning the tide. A counter attack was organized; the remaining trucks were routed and their occupants slain. There were now twelve dead, fourteen seriously wounded and untold walking wounded. As day broke, Major William Wallace surveyed the death and destruction before him. He could see easily a thousand bodies and hundred of burning or burned out vehicles.\n\nHe had been able to determine from radio chatter that similar attacks were in progress throughout the war zone. This had been the enemy's Tet offensive, as in Vietnam in 1968. Just as then, it had been a final, last ditch effort---and it had failed.\n\nThey had no more surprises and were even beginning to run low on critical supplies. The enemy had fallen back...to regroup and attack again? No one could be certain.\n\n***\n\nThe cavalry finally came later that morning, better late than never, in the form of a mechanized task force augmented with a howitzer battery from one of the nearest supported combat units. As Major Wallace walked out to greet them, he was surprised to find himself face to face with an old friend with two stars on his lapel.\n\n\"Last I checked, General, this looks like a Lieutenant Colonel's billet at best. Where the hell you been, sir?\"\n\n\"Had a few battles of our own to fight. What's your status?\"\n\n\"Twelve KIA, fourteen critical but stable WIA and I have no idea how many walking wounded.\"\n\n\"I've got a surgical team with me. Point them in the right direction.\" Wallace did so.\n\n\"Enemy KIA?\"\n\n\"We haven't had time to count. A thousand---thousands? Hard to say.\"\n\n\"Jesus Christ! There were attacks all over the country---all repulsed decisively. It would seem you and your people were of special interest. How'd your folks do?\"\n\n\"Damn good, sir...damn good. Fought their asses off...every last one of 'em. I couldn't be more proud.\"\n\n\"Stand down then, Major, the task force will secure your perimeter. Let your people get cleaned up, fed and get some shut eye. Is that imposing figure over there who I think it is? What the hell is...\"\n\n\"Long story, General, but she's one damned handy person to have around when the shit hits the fan...one hell of a soldier. Seems she loves to make things go boom.\"\n\n\"Do tell.\"\n\n\"If it's okay with you, sir, I like to get my soldiers together and say a few words.\"\n\n\"Carry on, Major. I wasn't sure what I'd find here this morning. It would appear you gave me another one of your miracles. I owe you, Bill.\"\n\n\"I'd have to give all the credit to my officers, NCOs and men and women. I'd be proud to serve with each and every one of them anytime and anywhere. All I did was...\"\n\n\"Lead 'em?\"\n\n\"I suppose, sir...give them the opportunity to show what they're made of?\"\n\n\"That's what leaders do, Bill...I'm not telling you anything you don't know. Go attend to your soldiers, Major.\"\n\n***\n\n\"Folks I guess this would be a good time to conjure up a famous quote from my name sake; the only one that comes to mind is, 'Every man dies. Not every man---or woman---really lives.' From this day forward I assure every one of you that life will be just a little sweeter...a little more precious. Many read history---few have the honor of living it.\n\n\"The accounts of this unit's exploits---its courage and mettle---will become warrior lore for years to come. You are all insanely brave...you're all heroes...valiant warriors. As we mourn our dead and care for our wounded, as we recall the gallantry of our fallen comrades...as we view the horrific carnage which is all around us, hold your heads high and just for an instant, smile and enjoy the sweet taste of victory, for only the chosen few ever have that unique opportunity and no one can ever take it away from you.\n\n\"I am proud to have served with you...proud to have led you...proud to have known you. I salute you now as courageous and tenacious warriors---the best of the best...the proud children of a proud, free land.\"\n\nThe general leaned over and whispered to the colonel. \"I think I'll pass on following that act---how about you?\"\n\n\"I couldn't agree more, General. Tell me, sir...is he a descendent of...\"\n\n\"If not in blood line, certainly in spirit...has been as long as I've known him.\"\n\n\"What's he do? I mean, what's his civilian job?\" asked the reporter from the major metropolitan newspaper.\n\n\"He's a school teacher. He teaches high school history.\"\n\n\"Remarkable!\"\n\n\"That he is...that he is.\"\n\nEdited by Techsan "
    ],
    "authorname": "Dinsmore",
    "tags": [
        "military",
        "war"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/taking-command"
}