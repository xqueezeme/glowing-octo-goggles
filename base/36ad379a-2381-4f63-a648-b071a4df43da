{
    "title": "Freakish Friday",
    "pages": [
        "The premise of this story is from the movie Freaky Friday, which I only saw the trailer, but I am sure is nothing like this. I would be interested to get feedback if you consider this incest or not. This story falls into many categories, interracial, group sex. All characters referred to as being in high school are seniors and are 18 years old or older. \n\nIt was the same argument they always had and Tricia always countered her mother by saying that she was 18 years old and legally an adult. Her mother, Jill, typically countered that she was then free to get a job, pay her own bills, buy her own clothes and find her own apartment.\n\n\u201cAs soon as I graduate High School I am so out of here\u201d Tricia would threaten, and then there would be silence.\n\nMr. Chin who owned the Chinese Restaurant near there home would witness this same argument many times. They always ate here when Jill\u2019s husband Roy was out of town.\n\n\u201cLook Tricia, I don\u2019t want to start this again. I just don\u2019t think it\u2019s appropriate for a young lady like yourself to stay out all night Friday\u201d.\n\nJill was brought up in a very strict household. Considered old fashioned by her friends and prudish by those not so friendly, she was a virgin when she married Roy and very vocal about what is moral.\n\n\u201cMom, it\u2019s the last days of finals\u2026.all the kids are going out tomorrow night to just blow off some steam. You always think something nasty is going on\u201d \n\nTricia was as opposite of her mother as a person can be except in the looks department. Both women were extremely attractive and young looking; most people assumed they were sisters. Tricia was also very active and experimental sexually. This was something she knew her mother would be shocked to learn. Tomorrow night most of her friends were going to throw a wild party that would most certainly turn into an orgy.\n\n\u201cTricia, you\u2019re a very sweet girl and you know I trust you, however I know how some kids can get kind of wild and people do drugs and before you know it you smelling the smoke and then you get\u2026..\u201d\n\n\u201cMom\u2026.my friends are not like that. What kind of people do you think I would hang out with?\u201d\n\n\u201cTricia I don\u2019t mean to say your friends are like that but it happens on the news all the time. Once I heard\u2026\u201d\n\n\u201cMom, look\u2026I have my math final tomorrow morning and I need to go home and study. You are the math genius in the family, but am close to failing math\u201d.\n\nMr. Chin decided he could help this family. If only they could see each other\u2019s point of view. He came back to the table and both Tricia and Jill greeted him with smiles. \n\n\u201c Mrs. Bosworth I have a Holiday gift for you and your daughter\u201d.\n\nMr. Chin then produced a small box sitting in the palm of his hand wrapped in red paper with gold Chinese characters. \n\n\u201cThis is special Chinese tea, it was made to help couples understand each other by letting them see each other\u2019s view point. Both of you take a cup before you go to sleep tonight. Mrs. Bosworth since your husband is away it will make you sleep easy and Miss. Tricia, when you wake up your mind will be with clarity and you will do very well on your math test.\u201d\n\nBoth women graciously took the package of tea and thanked Mr. Chin. Later that night before they went to sleep they shared a cup of tea and said their goodnights. Jill dreamed that she and Roy were on a moonlit beach, while Tricia\u2019s dreams were of a threesome with Justin Timberlake and Kobe Bryant.\n\nThe alarm clock rang at 6:00 AM and within minutes there were simultaneous screams from each of the bedrooms. Jill and Tricia ran from their rooms and met in the hallway between them. They stared into their own faces and screamed again. After 15 minutes of questions the reality had set in, they determined it must have been the tea that somehow caused them to switch bodies.\n\nTricia suggested that they have another cup of tea, figuring that it would change them back. Jill then worried that another cup might prolong the effect. She was sure Mr. Chin was just trying to help them. She remembered how Mr. Chin said it would let them see each other\u2019s point of view.\n\n\u201cMom you are na\u00efve. Mr. Chin is nice cause we frequent his restaurant and pay him. He could be an illegal immigrant, a terrorist or some Red Chinese spy. We have no idea what his intentions could be or how long we can be stuck in each other\u2019s bodies\u201d\n\nOnce they calmed down they decided to wait until the restaurant opened and confront Mr. Chin. Jill determined the restaurant opened at 11:00 for lunch and they would sit at home and wait until then.\n\n\u201cMom, I can\u2019t\u2026.I mean you can\u2019t. I have a math final today. If I don\u2019t show up I fail, but you can take the test for me! It\u2019s perfect, you will pass with a hundred\u201d.\n\nJill was flabbergasted. Go to High School and pretend to be her daughter, take her test then come home. This was not only cheating it was surreal. Tricia pressed and told her mom how her life would be ruined, not being able to go to college and worse of all being left back with all the Juniors she had made fun of for the past year. She was the Senior Prom Queen; she couldn\u2019t possibly be left back behind. It was her tears that won her mother over and she relented. It took a long time for her to find clothes that Jill would wear and that Tricia would want to be seen in school with. \n\nAnd Jill was off to school.\n\nJill was wearing a loose fitting blouse, and plaid skirt. Tricia had given her instructions; she was not to talk with anyone \u201cpretend to have laryngitis\u201d. She was to attend only the Math class at 10:00AM and be back home by noon where they would both go to see Mr. Chin.\n\nJill smiled, as all the kids seemed very friendly to her. She decided it would be an opportunity to really get to know her child and her friends. She saw Heather and Janice up ahead, Tricia\u2019s best friends. \n\n\u201cTrish your going out with us tonight right? It\u2019s going to be the shit,\u201d laughed Heather.\n\n\u201cWell I don\u2019t know, my dad is coming home tonight and my mom wants me to stay and\u2026\u201d\n\n\u201cThe bitch\u201d spit Janice \u201cno way, your not going to let that prude run your life are you?\u201d\n\nJill was flustered; Janice was always so respectful and nice when she came by the house. Did she really feel that way about her? Heather spoke up.\n\n\u201cNo way Jan\u2026.Trish has her mother wrapped around her finger, right? I mean the party wouldn\u2019t be the same without Trish, tell her\u2026\u201d\n\n\u201cErr\u2026yeah\u2026you know\u2026I\u2019ll be there\u201d murmured Jill, and then wished she had remembered she was suppose to have laryngitis \u201c\u2026its not like there\u2019s going to be\u2026\u201d \n\nJust then a pair of hand grabbed her tits from behind and whispered into her ear \u201cguess who?\u201d\n\nThe two girls giggled while Jill was shocked. The only man whoever grabbed her breasts before was her husband Roy, and even that was done only in bed. She spun around and stared into the eyes of a handsome young man with blue eyes, blonde hair and a wicked smile that simply mesmerized her. \n\n\u201cHey baby..What?\u201d He wondered why she was looking at him in a strange way, he then bent down and kissed her passionately on the lips. Jill\u2019s knees slightly buckled.\n\n\u201cHey get a room you two\u2026.or wait for tonight\u201d Heather giggled.\n\nThe boy pulled away, smiled and winked at Jill and took off down the hall. Janice walked in front of Jill and grabbed her shoulders. \u201cYou never kissed me that way. See ya later\u201d. She then left and Heather and Jill started toward class. Jill was speechless as Heather talked on about this video she saw last night. Jill was confused; she felt attraction to that boy, who she didn\u2019t even know his name. Then there was the remark Janice made. Was that a joke or did she mean that her daughter had kissed a woman before. Jill then decided she would find out more about her daughter\u2019s life and not run home after the math final. In the back of her mind she also wanted to find out more about that boy who kissed her. Kissed her like no one had done before.\n\nAt home, Tricia marveled at her mother\u2019s body. At 38 it wasn\u2019t bad. Although they were about the same height (her mother was an inch taller), her mother had larger tits and fuller hips. The one thing she didn\u2019t like was her mom\u2019s pussy; it looked like it was hardly ever trimmed. She decided to shave and trim the hairs like hers. Afterward she found her mother\u2019s purse, she could take out the car, and do some shopping with the full array of credit cards. \n\nShe then heard a truck pull up at the front driveway. It was the pool boy Larry. Larry was a 28-year-old hunk, but always treated Trisha as a little schoolgirl. She wondered how Larry would treat a woman. Tricia ran to her room and put on her sexiest bikini, with the added breast size, the bikini was sexier than anticipated, her boobs mostly hanging out. She then put on her sunglasses and strolled out to the lounge near the pool. She waved politely at Larry.\n\nLarry stared at Mrs. Bosworth. This was the first time she sat out by the pool when he came to clean it. Larry enjoyed his reputation for having sex with most of the MILF\u2019s in the neighborhood (Mothers I\u2019d Like to Fuck) all except Jill Bosworth. The only contact they had was once she gave him a glass of water when it was 90 degrees. Now in December it was a warm 70 degrees here in San Diego, but most residents still don\u2019t use the pool now. Larry saw an opportunity to try is technique on the \u201cice princess\u201d as he termed her.\n\n\u201cHey Mrs. B\u2026.nice suit\u2026.going to cool off a bit, cause you look hot\u201d\n\nTricia smiled at Larry\u2019s attempt at seduction. She stood up and walked in front of him and twirled \u201coh you like it?\u201d.\n\n\u201cErr\u2026jeez maybe I should take a dip and cool off\u201d he nervously laughed.\n\nTricia looked down and saw his huge erection and made it obvious to Larry that she noticed. She put her hand lightly on his chest and said \u201cmaybe you should\u201d. She then pushed him into the pool. She laughed then he laughed he tried to pull himself out from the side of the pool and she bent to give him a hand when he pulled her in too. Her breasts easily popped out of her top. Larry closed within inches of her. \u201cMrs. B\u2026\u201d She then pulled him to her wrapped her legs around him and kissed him, pushing her tongue into his mouth.\n\nLarry squeezed her tits then pulled the strings on the sides of her bottom and pulled it away. Tricia unzipped him and rubbed his penis through his shorts. She pulled away and backstroked to the shallow end of the pool by the stairs. Larry tossed his shorts and t-shirt out of the pool and naked swam toward her. Tricia thought that this was going to be the first real man she ever had. All her previous sex partners were high school students.\n\nAs Larry approached the shallow end he stood, his cock sticking out from the water. Tricia took her tongue and circled the tip then swallowed it whole. Larry watched Mrs. Bosworth rapidly sucking his cock. He was certain that she was not only the most beautiful woman on the neighborhood, he was certain that he would never have her. So much so it haunted his dreams, but now this was a fantasy come true. He grabbed her head to hold it still and he thrust his hip forward, fucking his cock in and out of her mouth. \n\nLarry pulled away before he came, he wanted to taste this woman. He laid her back on the top stair covered over by an inch of pool water. He then lifted her ass up and crouched down to eat her pussy. Tricia was in the throes of ecstasy, the only one who could eat pussy like this was Janice, and most of the boys were just interested in blowjobs or fucking. After her second orgasm, Larry stood and placed the tip of his dick at her pussy lips. \n\n\u201coh yeah baby\u2026.fuck me\u201d she cried. \n\nLarry shoved his dick into her pussy and leaned over her kissing her lips and neck while thrusting the full length of his cock into her pussy. This was the tightest pussy he had in months. He supposed he would no longer be able to call her the Ice Princess. Tricia spread her legs over his shoulder as he pounded her pussy. Her orgasm made her shutter and she felt him cum inside her. They rested for a while and then he rolled off her and picked up the pool net to finish the cleaning. Tricia gathered herself together, blew him a kiss and walked back into the house. She hugged herself, feeling warm all over. She wondered how long it has been since her mother had sex like that. She was sure her father and mother didn\u2019t have sex that often. She then smiled that she herself hasn\u2019t had sex like that in while either. She knew she was now done with boys, from now on it would only be men\u2026..or women.\n\nThe math final was a breeze for Jill. The only mistake she really made was putting her name on the paper instead of her daughter\u2019s but she corrected that before handing it in. Heather walked with her as they left class and they met up with Janice at her locker. \n\n\u201cHey Trish\u201d Janice smiled. \u201cThe crowd is cutting the last class today and were going over to Pete\u2019s for lunch, coming?\u201d\n\nJill thought Pete\u2019s was probably a local hang out where she could get to know her daughters friends. It turns out though that it was Peter Lichtor\u2019s house and when they arrived there were about 30 kids already there and a stack of pizzas. Heather handed Jill a cup of Hawaiian punch, it did taste as sweet she noted, especially with all the grain alcohol in it. She finished the cup of punch and was about to have a slice of pizza when she was handed another cup. She noticed some of the kids had stripped down into bathing suits and were dancing in the living room and pool area. \n\nJill wondered what Pete\u2019s parents would think of this going on. She looked around for Heather or Janice and stepped into the den where, although dark, she can see kids making out in various stages of undress. She turned away quickly and almost lost her balance, her head was spinning. She bumped into Heather.\n\n\u201cI feel funny. My head is spinning\u201d \n\nJill had never been drunk before but knew that this must be how it felt. Heather knew Tricia loved her booze and needed more. Heather gave her a pill of ecstasy. Jill thinking it was aspirin swallowed it with the punch.  \n\nJill moved around the house, feeling warm, she loosed up her blouse. She saw Janice talking with a black student and walked up to her and tapped her on the shoulder. In fact Janice was kissing the 18-year-old student and she turned smiled at Jill and clutched her, forcing her tongue into Jill\u2019s mouth they kissed. At first Jill was taken aback. In her mind she was pushing Janice away, but her muscles wouldn\u2019t move in that direction instead they wrapped around Janice and held her tighter. She felt a cool breeze hit her thighs and was vaguely aware that the black student had pulled down her skirt and panties. \n\nJill\u2019s head was swimming she needed to be held, she realized she was lying on her back look up at Janice. Janice moved down her open blouse, kissing her nipples, belly button and then her pussy. Jill closed her eyes and felt a tongue entering her lips, she opened her eyes and saw she was kissing the black student who had his shirt removed. \n\nJill had never kissed anyone but her husband and now she was kissing a black man, no not a man, a boy of 18. She vaguely wondered if Tricia did this type of thing or was this herself Jill succumbing to this debauchery. She felt wonderful as Janice worked on her pussy. Roy had tried a few times to eat her, but she felt it was dirty and didn\u2019t let him pursue it for very long. \n\nThe boy pulled away from her lips and his tongue was replaced with something else, something longer, thicker and harder. Jill had tried this a few times on Roy, but they both decided since she didn\u2019t like it, it wasn\u2019t pleasant for him either. The black cock slowly went in and out of her mouth as she sucked in. She heard the boy groan and knew she must be doing something right. She herself was groaning as Janice had made her cum. The boy pulled out of her mouth, Jill was disappointed for a moment when Janice came over to sit on her face. The smell of Jill\u2019s pussy on her nose filled her with desire and she quickly darted her tongue in and out of her pussy. She found her clit and flicked it with her tongue sucking it like she sucked the black cock, the same cock that was now entering her pussy.\n\nFor a moment she wondered if this black boy was going to take her daughters virginity, but she experienced no pain and realized that Trish was not a virgin. This thought did not bother her, instead she now felt envious that her daughter was having so much fun.\n\nThe black boy was fucking Tricia hard, they had fucked often and he always enjoyed her, but this time she was responding like it was there first time. He had never heard her moan and whimper like this. He pounded her cock in her harder and felt his cum explode deep inside her pussy.\n\nJanice got off her mouth and kissed Jill. \u201cthanks honey\u201d she said to her. Jill smiled a welcome and saw her walk off with the black boy whose cock was still dripping with cum. She looked up and saw the blonde hair boy from earlier in the day. He was nude and helped her up. He then swooped her in his arms and took her to the den. She leaned into him and kissed him. She wanted him to fuck her. She wanted to fuck them all, and they would.\n\nTricia got home around 1PM from her shopping spree. She bought herself some new clothes and CD\u2019s. She pricked teased the teenage boys in the stores and was tempted to go for a fuck with a strange man at the Video store, but she had to be careful of her mother\u2019s reputation around town. She realized she already had one indiscretion and hoped her mother wouldn\u2019t get pregnant by the pool guy, she assumed she was too old for such stuff.\n\nTricia was unpacking her new stuff in her room and was thinking about the party tonight. She wondered where her mother was. She probably went to see Mr. Chin without her. She heard a car in the driveway, it was a taxi, and her dad was home early.\n\nTricia ran to the door she was going to yell \u201cdad\u201d when he spoke up first \u201chi Jilly,\u2026surprise\u201d. Tricia stopped herself, she had to remember she was her mother. She had to figure out how to tell him what happened.\n\n\u201cRoy, this is a surprise, I thought you would be back later this evening\u201d\n\n\u201cI took a earlier flight since the seminar wrapped up in the morning. Jill, you look great, playing dress up with Tricia?\u201d\n\nRoy never saw his wife dress in a mini skirt and halter-top. He took her in his arms. Tricia hugged him but Roy wanted more, he kissed her hard on the mouth. Tricia felt his strong hands and opened her mouth expecting his tongue, when it didn\u2019t come she put out hers and explored her fathers mouth.\n\n\u201cThis is my father, what am I doing\u201d she thought. Roy responded and moved his hands to Jill\u2019s ass. Tricia thought that what she was doing was wrong and slight broke away. \n\n\u201cWell, this was the best homecoming I ever had. I have to make sure I always arrange my flights to come back in the afternoon\u201d he smirked. \n\n\u201cRoy would you like some lunch?\u201d\n\nTricia walked away toward the kitchen. She was thinking how much she liked being held by him. She loved her father, but for the first time she looked at him not as an authoritative figure, but as a tall, handsome man.\n\n\u201cI am hungry honey\u2026.but not for food. What time does Tricia come home\u201d He winked at her.\n\nTricia could see the tent forming in his pants. She licked her lips and smiled. Hell it\u2019s not incest since she was using her mother\u2019s body. This might be the only time she would be able to experience something as forbidden as this. The thought of making love to her father without the incestuous consequences turned her on. She took off her top and climbed the stairs to their bedroom looking over her shoulder at her with a \u201ccome hither\u201d look.\n\nRoy\u2019s tongue could hit the floor. He was joking with his wife, thinking that she would never go for a \u201cnooner\u201d but he didn\u2019t argue with her. He stumbled over his feet running after her up the stairs. When he reached the bedroom door way he saw his lovely wife sitting on the bed nude smiling at him. He approached her slowly taking off his tie and shirt. As he stood in front of her she unzipped him and pulled down his pants and shorts. ",
        "She stared at her fathers cock, \u201cgood\u201d she thought, \u201cnice and big, just the way I like them\u201d. She looked up into his eyes as she slowly brought the cock to her lips and devoured it. Roy was amazed, not only didn\u2019t Jill enjoy sucking cock, she would normally never even have sex with the lights on. Here she was sucking him off in the middle of the afternoon with the all the window drapes open.\n\nTricia wondered if her mom could give a good blowjob, she knew all the boys she sucked gave her five stars. Although this was not a boy, this was a grown man her own father. The thought of her actually sucking her father turned her on and she started fingering herself, bringing herself to an orgasm. Her father tried to pull her mouth away from her lips because he was about to cum, but she inhaled it more, holding his ass forcing his cock deep down her throat. He exploded into her mouth and she eagerly swallowed it all, she loved cum and wanted her fathers seed.\n\nRoy hadn\u2019t had sex for 2 weeks, and couldn\u2019t hold out long. He thought Jill would be pissed that he came in her mouth, but instead she smiled and licked her lips and then proceeded to lick his dick dry. She climbed onto the middle of the bed and spread her legs. Roy didn\u2019t know what got into her but he wasn\u2019t about to mess this up. He always wanted her to act more sexually but several years ago relented that she was never going to be the sex kitten he desired. Instead he went on trips and on his laptop in hotel rooms he surfed porno sites to fulfill his fantasy.\n\nRoy climbed between her legs and started licking her pussy as he played with the nipples on her huge breasts. Tricia moaned, her father was eating her pussy, well not hers per see but for now it was. She mumbled \u201coh daddy\u201d but she caught herself and didn\u2019t think he noticed.\n\nRoy enjoyed hearing her moan, Jill was usually so quiet when they infrequently had sex. He thought she heard her say \u201cdaddy\u201d but it was probably \u201cdats it\u201d. As he ate her, his own penis became erect again. The hardness strained against the mattress and he need to fuck her. \n\nTricia wanted his cock and pulled his head toward her. They kissed and tasted her on his lips. She looked down between them and saw his cock posed at her cunt. She grabbed it and fed it into her pussy. \n\n\u201cOh yeah baby\u2026fuck me\u2026.fuck me hard\u2026Roy\u201d\n\nRoy felt his cock fill her pussy and started sliding it in and out listening to her yelling his name. He didn\u2019t understand what turned her into this sex animal, was it something she saw on Oprah or what, but he wasn\u2019t going to argue about it now. He\u2019ll ask her after he gets through fucking her pussy.\n\nTricia wanted to yell out \u201cfuck me daddy\u201d but was content in shouting it in her mind. She kept thinking \u201cmy daddy is fucking me, oh my daddy can fuck\u201d. She wanted it all. She put her hands against his chest and slowly pushed him off. Roy thought he was doing something wrong maybe fucking her too hard, when she turned over and bent over, her ass in the air. Roy smiled, he had fucked her doggy style once, years ago, and Jill thought is \u201canimalistic\u201d and dirty. \n\nRoy pushed his cock into his wife\u2019s pussy and grabbed her ass. He fucked her hard like he had fantasized about. She had a great ass and he slapped it she yipped \u201cyes slap my ass daddy\u201d Roy smiled, I guess I don\u2019t know my wife as well as I thought, she likes getting her ass slapped as if it was her dad slapping her. \n\n\u201cYeah Jill, you\u2019re a bad girl, daddy\u2019s going to slap you\u201d\n\nTricia was worried about the slip but was relieved when her father went along with it. She decided she need a thrill too and grabbed his cock pulled it out of her pussy and stuck it in her ass. Needless to say Roy was dumbfounded. Anal sex? This was something he never brought up before only because he was afraid his wife would think he was a pervert and deny him sex forever. Now he was fucking her in the ass. Her sweet tight ass.\n\nRoy was about to cum again. He thrust his cock deep inside her ass gripping her ass pulling her towards him. Tricia felt the warmth of his cum pour into her butt. She fell flat on her stomach and smiled, \u201cher dad had fucked her mouth, pussy and ass\u201d. \n\nRoy lay next to her stoking her hair.\n\n\u201cJill, that was the best sex we have ever had. Tell me what got you going like that.?\u201d\n\n\u201cHoney, there are some things you just can\u2019t explain. But I can tell you this, if you ever bring this session up again, I will pretend it never happened and it never will again.\u201d\n\nShe then kissed him, squeezed his penis and went to take a shower. She thought that would be the end of that. Tricia looked at her watch, it was almost 3PM, and where was her mother and what she was she up to?\n\nJill was getting dressed.\n\nShe woke up in the den, most of the kids were gone the other half were still fucking. She lost track of how many boys and girls she had sex with, the one thing she knew was she loved it. How could she have missed so much fun in her life? \n\nJill got dressed and tried to put her hair and makeup back together. She would never admonish Tricia about going out on the weekends again. She was glad she was having so much fun. She would talk to her to make sure she was on the pill and took precautions, but she would let her be her. In fact, she was feeling a little envious, back in her own body she would never cheat on her husband, but maybe she can get him to loosen up a bit sexually. She decided she was going to surprise him when she got back to normal.\n\nJill arrived at her house. Tricia saw her mother approaching the front door and ran down the stairs to greet her. She wondered if any of her friends told her about her lifestyle, if she were in trouble or even had any friends left.\n\nWhen Jill opened the door she saw her body running toward her with outstretched arms. She too was happy to see her. They ran into each other\u2019s arms and like a lightning flash a shock ran through their bodies. Jill pulled away and stared into her daughter\u2019s eyes. They both smiled and hugged again. \n\nRoy was at the top of the stairs and called down.\n\n\u201cHey you two act like you haven\u2019t seen each other in days, I am the one that was gone\u201d\n\nThey smiled at each other. Jill walked up to Roy and gave him a passionate kiss leaving him with a bewildered look. \n\n\"Tricia, have a good time tonight\" smiled her mother.\n\nTricia watched them and felt something dripping down from her pussy onto her thigh. She watched her mother take Roy back upstairs and winked at her. Tricia knew everything would be all right and better than back to normal."
    ],
    "authorname": "MagicWand",
    "tags": [
        "school jill",
        "mother jill",
        "roy smiled",
        "kissing black",
        "smiled jill",
        "black student",
        "ass roy",
        "incest mother",
        "pussy tricia",
        "boy pulled"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/freakish-friday"
}