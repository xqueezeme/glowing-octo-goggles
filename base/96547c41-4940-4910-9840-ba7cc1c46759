{
    "title": "The Slave's Conquest",
    "pages": [
        "Author's note: This story is quite a slow one, so try to read with patience. :) It contains shemale orc on human male action, and also has a strong emphasis on body fluids and body odors. Enjoy!\n\n*****\n\n\"Forgive me, my lady, but this is foolish!\" Yari whined in a way unfit for her rough looks and bassy voice. \n\nThe black-haired woman gently set her glass of red wine back on the 20 feet long dining table. \"How many times must I remind you?\" she said, a slight stern tone cutting through her calm eloquence. \"There is no need to refer to me as 'my lady'. Edna is fine.\"\n\n\"Edna, please reconsider your decision! I am a bodyguard, not a caretaker!\"\n\n\"Oh, hush,\" she dismissed with a nonchalant hand wave. \"Aaron and I will only be gone for a day. It's hardly worth hiring someone else for. Besides, you and Jonah get along quite well, don't you?\" \n\n\"I... I suppose, but...\" Yari began, searching the back of her rather simple mind for anything that could convince the carefree woman. \"What if I... break something? What if he gets injured?\"\n\n\"If he gets injured, you summon a doctor. You're no less capable than me or Aaron in doing that, nor in making sure that Jonah stays safe. And neither of us mind if you break something.\"\n\n\"B-but...\"\n\n\"Enough,\" said Edna. \"It has been decided. You will do just fine, I assure you.\" Staring down the glowing, red eyes of the mountain of muscles for a slave standing at her side, she casually took another swig of wine and set the glass down on the table once more. \"Now if you don't mind, I'm going to have to ask you to leave. You know how it is having you around. Even an old woman like me starts to feel the tingles after a while!\"\n\nYari's green cheeks darkened in a sudden blush. \"As you wish, my la-... uh, Edna.\" She gave a quick bow before reluctantly following her master's order, exiting the huge, luxurious dining room into the corridor. Like always, she had to be careful not to stumble as she continued past the rows of candelabra and vases, lest they shatter from the force of her huge body coming into contact with them. \n\nShe wasn't clumsy, but she certainly wasn't built to navigate through human-made buildings either, even fancy, spacious ones like this. But despite the concerns she had voiced moments ago, what she truly worried about had nothing to do with damaging neither any of her masters' material goods nor their son. Though in one way or another, he was definitely part of the equation... Not that Yari was about to tell them the specifics, of course. \n\n\"Are you sure you don't want any help, father?\" a bubbly voice suddenly echoed into the corridor from the entrance hall. \n\nYari turned the corner to see a suited-up Aaron walking up to the front door with a suitcase in each hand. His strangely energetic son was following him so closely that anyone could see that he was being little more than a nuisance. Aaron, however, remained as calm as ever.\n\n\"I'm sure, Jonah,\" he said as he put the suitcases on the floor. \"Go get your mother while I load the wagon.\" \n\n\"At once, father!\" With that, the boy spun around and, on quick, light feet, headed right towards the same corridor from which Yari had emerged. He looked at her standing in the corner of the big entrance hall as he ran up to pass her, a big smile engraved on his face. \"No nanny this time, Yari! Let's make the most of it!\"\n\nUnable to think of a reply to her young master, Yari merely gulped and nodded. Like always, she made sure to back up as far against the wall as possible as he went by her, still unsure of whether or not he realized why. Her tense body remained in place until he was a good half-way down the corridor, after which she took a deep breath and tried to collect herself to the best of her ability.\n\nHesitantly, she walked up to her older master as he fastened the straps of his boots. \"I expressed my worries to Lady Edna...\" she mumbled. \"She would not listen.\"\n\nAaron went on to grab his coat without as much as looking at his slave. \"And like I've already told you, neither will I. It is not up for discussion.\"\n\n\"Do you really trust me with all this?\"\n\nHe turned to her with the usual blank look on his face. \"The fact that you worry so much is all it takes for me to trust you. If something truly goes wrong, I will blame myself.\"\n\n\"Then I shall do my best, my lord,\" Yari said, complete with a rather deep bow that made her shoulder-length waves of auburn hair hang down around her face.\n\n\"Stand,\" Aaron ordered. \"And do not call me 'lord'. Do your best to remember that until we return. Understood?\"\n\nShe rose, her chin raised high. \"Understood!\" They shared a glance, allowing Yari to admire those brown, enchanting eyes that all three family members possessed in addition to a dusky skin tone, before her master turned to open the front door. With that, he took both suitcases with him and headed for the wagon at the ready outside. \n\nAaron may have been pushing 50, but he had truly aged like fine wine by orcish standards. His slim, toned body was almost perfectly preserved despite him having access to more food and alcohol than the average citizen could only dream of seeing in their lifetime. The faint wrinkles in his perfectly groomed face didn't really diminish his handsome looks either, and next to his much younger but largely identical son they actually added some character. Regardless, while young orcs usually went after humans close to their own age, Aaron would surely have been a target of desire, were he to be taken captive. \n\nBefore long, Edna and her son came to join Yari in the entrance hall, both of them seeming to be in a good mood, but Jonah especially so. \"I trust your duties have been made clear?\" said Edna to the towering, green brute, gently holding up the skirt of her huge, puffy dress as she walked up to the door. \n\n\"Yes, my-... Edna.\"\n\n\"Good,\" she replied with that textbook aristocratic smirk that seemed to hint at a feeling of superiority. \"Now be a dear and go wait in your room while we say goodbye to Jonah, okay?\"\n\nYari nodded and did as told, at once heading for the staircase leading to the second floor. She cast a final glance back before going up the stairs, knowing that the next time she saw her young master, the two of them would be all alone. And only the goddesses knew how it would play out to have an orc in her physical and sexual prime spend a whole day with a cute, young man like him... \n\nAs she closed the wooden door to her room behind her, Yari's mind was already working overtime in trying to plan out how she would avoid corrupting her young master. She looked around, searching for ideas within the small space that had served as her bedroom since her first arrival several years back, but came up short. She knew that even if she were to quickly wash herself in the little bathtub in the corner, it would hardly make a difference. Especially considering that she had done just that as soon as she had woken up that very morning. \n\nHer scent just wouldn't go away. She was arguably more concerned with bathing than her highborn masters, and yet her orcish musk would always follow her like a cloud clinging to her huge body. Among her own kin it wouldn't be an issue; rather, it would be the norm. But in human society, especially the part of it consisting of the rich elite, she always stood out in spite of her every attempt at shying away from the spotlight. \n\nSometimes she wondered why her current masters wanted her in the first place. Back when she was first enslaved she was but a little girl, and throughout the years she had been bought and sold more times than she could count. Her tasks varied from place to place, mostly in some form of physical labor, but occasionally she would be required to stay closer to her masters. And seeing as how she was currently a bodyguard, such was the case in her relationship with young Jonah, who had been by her side for half his life. However, to her it was doubtful whether or not it was worth having orcish brawn to protect the future heir of the giant mansion when the whole family had to endure the powerful pheromones in her sweaty scent as a result. Not that they seemed to mind, but the last thing Yari wanted was for them to think of the all-shemale orcs as dirty, stinky brutes.\n\nFrom out of nowhere, the wooden door suddenly swung open with a force that almost caused the frail thing to shatter against the wall, and in the opening stood a beaming Jonah. \"What are you sitting there for?!\" he said, virtually bouncing up and down. \"Let's play!\"\n\n\"B-but, my lord...\" \n\n\"No 'buts'!\" Jonah shot back, entering the young orc's room. \"And no 'lords' either! Call me by my name!\" With that, he reached out to grab Yari by her thick, powerful wrist, and went on to attempt to pull her onto her feet.\n\nWhile his minimal strength alone could never have budged Yari's heavy body in the slightest, she reluctantly followed along with his demands. \"Jonah, I am only meant to watch over you! We shouldn't stay too close to one another!\"\n\n\"It's fine! My parents aren't the ones making the decisions right now.\" \n\n\"But it's not safe...\" Yari said. By then she had already been pulled along into the hallway by her cute master, and he didn't hesitate to continue in the direction of the kitchen. \n\nJonah turned his head back, still trudging on. \"You wouldn't want me to be bored, would you?\"\n\nYari's throat dried up within an instant. Of course he had to do that to her. Of course he had to flash her his irresistibly adorable begging expression, piercing right through her orcish willpower with those big, brown eyes. He must have been exaggerating to get what he wanted, even going as far as to squeeze out a crocodile tear or two. Sure, he was barely an adult, and in Yari's experience a bit of a crybaby, but to this extent? No way. \n\n\"Fine, I get it...\" she said nonetheless and ceased the ever so slight resistance in her steps. \"What do you want to do?\"\n\nJonah quickly went back to smiling. \"What don't I wanna do? There are so many things mom and dad forbid me from doing.\"\n\n\"Okay... Starting with?\"\n\nIt was then that the two entered the luxurious kitchen, and Jonah immediately pointed to a wooden box on top of a huge cabinet in the corner. \"Eating all the pastries they tried to hide, of course!\"\n\nYari rolled her eyes at her young master's childishness, but more so at the prospect of allowing him to steal from his parents. They said they didn't mind if she broke something, and it was hard to imagine that having their son eat a few of their stashed away treats was a big deal, but there was no telling what kind of slippery slope that could lead them down. Next he might ask to play with a sword from the armory, which he surely knew that Yari had access to. \n\n\"With all due respect, my lo-... Jonah, why do you need me for that?\" \n\n\"Why do you think?\" Jonah said, one eyebrow raised at her as if the answer was obvious. \"I'm only five and a half feet tall, and you're over seven. I can't reach it.\"\n\n\"Well, neither can I. It's still too far up.\"\n\nJonah sighed. \"I know, silly! That's why we work together!\"\n\n\"How?\" the orcish slave asked. Jonah merely looked up at her in silence, condescendingly tilting his head as if awaiting her to find the answer on her own. And so she did, and felt all the more silly as a result. \"You don't mean to... what, sit on my shoulders?\"\n\n\"I knew you were a sharp one,\" Jonah said, smiling. \n\nYari tried taking a step back, but only found herself bumping into a wall. \"W-wait, can't you just use a chair?\"\n\n\"No!\" the boy protested. \"There aren't any chairs tall enough. Just help me!\"\n\nThere was no way out of this one, Yari realized. She could probably have found a ladder or something that would do just fine, but somehow she doubted that Jonah possessed the patience required. Furthermore, she understood him. He was finally free to have someone to play with in this remote palace of a home. And as his slave, how could she refuse him?\n\n\"Okay, okay, I understand...\" she said. \"Don't blame me if you get hurt, though.\"\n\nJonah's dark features lit up. \"I promise! Now lift me up!\"\n\nTaking a deep breath, Yari looked at the cute boy as he turned around with his arms raised to the sides. For as long as she could remember, she had always managed to stay far enough away from him to prevent any obvious signs of affecting him with her orcish pheromones. Now, all that was about to change. Hell, they had already been too close since his parents left, and if he hadn't noticed anything yet, he definitely would while on top of her shoulders.\n\nNevertheless she stepped forward and bent down, her rough hands reaching for the boy's waist. With only the thin, baggy fabric of his black tunic between their skin, Yari gently gripped him around his surprisingly sturdy midsection. From there, she lifted him up like he was nothing, and lowered him onto her wide shoulders. She could immediately feel him tighten his thighs around her head to get a better hold of her, and her body suddenly felt drained of its strength. His weight was not even close to being an issue, but the feeling of his slender, boyish body squeezing her sent tingles through every fibre of her muscles. \n\nJonah put on a bright smile, and grabbed onto Yari's copper-haired head. \"See, there's no way I'll get injured! You're strong as an ox!\" \n\n\"W-well, my strength was never the issue,\" Yari said. \"I could still lose balance, or accidentally knock your head into something...\" \n\n\"Nonsense!\" said the young boy in response, his tone as childish and devoid of worry as ever. \"We'll be fine, because I say so. Now take me to the pastries!\" \n\n\"Okay, okay. Just... please try to stay calm, my lord.\"\n\n\"It's Jonah!\"\n\n\"Jonah...\" Yari mumbled, walking over to the cabinet at last. \n\n\"Hold still now,\" Jonah said, leaning forward against it so that his abdomen pressed into the back of Yari's head. \n\n\"Hey, careful!\" It was clear to her that he was counting on Yari keeping him safe, hardly caring about how he was shifting her balance forward in his eagerness. Such was the norm for him; relying on others to do all the dirty work while he spent his time playing around in the mansion. She looked up to see him reach out above the tall cabinet with his thin arms, seeming to struggle to reach the box that he so desperately sought. \n\n\"Almost there...\" he grumbled. \"Try standing on your toes. That should do it.\"\n\nYari sighed, but did as told. Anything to end this childish endeavor as soon as possible. Part of her enjoyed being close to her master, seeing as it was exceedingly rare for them to even touch one another. But her orcish nature was threatening to get the better of her. She may only have been a mere slave, but she still took pride in being professional and doing a good job, and feeling Jonah's legs squeezing her tightly awoke something within her. Something that an orc living among humans would never be allowed to express. \n\nAnd it wasn't only the physical contact that was to blame. Unlike her own species, humans seemed to always have a sweet, enticing aroma, and Yari's wide nostrils could confirm that her master was no exception. Indeed, her scent was supposed to be the issue, and yet young Jonah showed no signs of having fallen under its effect. Perhaps that meticulous shower Yari had taken at dawn had just about done the trick, even though she herself could have sworn that there was no difference. As far as she knew, there wasn't a single existing procedure to truly cleanse herself.\n\n\"Got it!\" Jonah said at last, the wooden box firmly in his grasp. \"Put me down, put me down!\"\n\n\"O-okay.\" With just as much as ease as she had raised him onto her shoulders, Yari once again gripped his waist and lifted him down to the floor. Once at long last having broken physical contact, she backed off a few feet in an attempt to halt the potential buildup of orcish pheromones. Jonah paid her no mind. He was too busy gently shaking the freshly acquired box as if it were a birthday present. \n\nHe turned to her with an impish look of triumph on his face. \"It's so heavy!\" he exclaimed. \"This will be a breakfast like you've never seen, Yari! Come with me!\"\n\nYari was hardly given a chance to respond, as Jonah quickly scurried into the adjacent dining hall. She stayed behind for a moment, leaning against one of the kitchen counters as she gathered herself, a phantomic feeling of her master's legs lingering on her shoulders. It might all have been in her head how his scent seemed to have likewise etched itself into her nose, but rather than finding enjoyment in it, it was the source of a gnawing frustration.\n\nPart of her wanted to take a quick trip to the bathroom in order to sort it out, but another part worried that it might come off as suspicious. Jonah was an innocent boy, but he wasn't stupid. And though he was rebellious enough to oppose his parents, Yari was unsure of how he might react if he were to find out that his smelly brute of a slave was committing indecencies rather than watching over him. Though that outcome might have been preferable to having him see her in her current state... Her masters really ought to have given her better clothing. The ragged shorts of leather she wore almost seemed on the verge of bursting from the inhumanly large bulge at the front...\n\n\"Yari?\" Jonah called out from the other room. \"What's taking you so long?\"\n\n\"Oh, uh... My apologies. I'm coming.\" She took a deep breath, tensed every muscle in her body, and let her imagination run wild with anything that didn't involve young Jonah. Thankfully it did the trick to a decent extent, the flow of blood returning to her brain rather than groin, and her body cooled down with the droplets of sweat that started to coat her. Unfortunately, sweating was truly a double-edged sword in this instance. While it helped in bringing down her temperature, it also enhanced her orcish musk that was already threatening to rewire the innocent boy's brain.\n\nNevertheless she finally went to join him in the dining hall, finding him on the opposite side of the room, sitting in the same spot that his mother had been drinking wine in earlier. The chair was noticeably larger and fancier than the others, excluding the one right next to it. Normally serving as the seating of lord Aaron and lady Edna, they were now free to use by their son. \n\n\"What are you standing around for?\" said Jonah across the table. \"Come have a seat!\" \n\nYari cleared her throat. \"Oh, there's no need for that... I'd rather stand.\" \n\n\"Don't be such a bore! I'll command you if I have to.\" \n\n\"... Understood,\" Yari said. On heavy, stiff legs she made her way around the long table and came up to Jonah's side. She grabbed one of the smaller chairs and slid it back with a creak, only for Jonah to stop it with his hand.\n\n\"Not that one, dummy,\" he said and slid out the larger chair next to him. \"This one. No need to be bashful.\"\n\nYari stood there quietly for a second, nervously eyeing the young boy. She had voiced more objections today than in the rest of her life, and yet they achieved nothing. Jonah seemed to have a new demand every five minutes, and while they were innocent enough, such behavior was still vastly different from that of his parents. Rarely did they ever ask anything of her; rather, they knew that she could handle her everyday duties without much guidance, and they were hardly difficult tasks in the first place. \n\nBy now she had at least realized that it was pointless to try to reason with him. Though he was a young adult by now, it was clear to anyone that he still possessed a childish mind. What his parents might think about allowing him to do as he pleased would remain to be discovered, but considering their calm and easy-going personalities, there was little chance that any blame would be pinned on her, should Jonah's shenanigans go too far. ",
        "With such thoughts at last putting her mind at ease somewhat, Yari let out a sigh of resignation. \"Have it your way,\" she said. She may have been against Jonah's insistence on eating his parents' stashed away pastries, but seeing him in such a giddy state did make her happy. The youthful and boyish features on his face lit up as he opened the lid, his pearly-white teeth especially highlighted in a mischievous grin that cut through his bronze complexion. He didn't hesitate for a second to reach inside the box and take out the packet of protective paper filled with what looked like a rather heavy bunch of whatever baked goods the boy was after. \n\n\"They thought they could hide them from me,\" he said. \"As if I hadn't seen father put them in this box after his morning tea. What a fool!\" \n\n\"So these are just leftovers?\"\n\n\"Yes, from yesterday. But they're still good. Would you like to try one?\" \n\nThough immediately salivating upon the thought, Yari still recoiled in her chair. \"Oh, I... I couldn't. Such fine pastries would be wasted on someone like me.\"\n\n\"Why is that?\" said Jonah with a glare. \n\n\"... Well, because I'm-\" \n\n\"An orc?\" he filled in. \n\n\"I mean... that, and I'm a slave...\" Yari mumbled faintly. \n\nJonah let out a little mutter. \"I don't care what your title is. Your circumstances for being here in the first place are complicated, I'm sure, but it doesn't matter. You're still a valuable member of this household.\" \n\nYari's tusk-adorned jaw hung open in pure shock. She stared at the intense look of unwavering conviction on her young master's face, unsure of whether those words had truly come from him. Perhaps she had been wrong to think of him as the same little boy she had watched grow up. Perhaps he was more mature and kind-hearted than any of his aristocratic peers, despite his tender age of 18. Or perhaps he was a fool for trusting a mere orc. Of course, Yari knew that the way that humans portrayed orcs as nothing but savages with only sex on their minds was largely propaganda. But Jonah's kind words certainly weren't doing anything to stop the ever-growing fire inside her body as her orcish nature threatened to manifest in full.\n\n\"Here,\" said Jonah, breaking the sudden silence and holding out one of the pastries in his hand. \"Just take one.\"\n\nSaying nothing, Yari grabbed the moist piece of flaky dough, its buttery exterior immediately coating her fingertips upon touch. It was shaped like an oval, with several lines of what looked like strawberry jam on top. Feeling its sheer heft in her hand made her gulp, knowing that within the dough was nothing short of a treasure. Then, after all that hesitation, she finally went in for a big bite.\n\nSometimes Yari found short moments of enjoyment in her enslavement. On the one hand she often dreamt about what kind of life she would have amongst her own kin, hunting, riding and training out on the vast orcish steppes. On the other, such a life would mean missing out on the wonder that was human pastries. How someone was able to squeeze so much sweet, rich creaminess into such a small piece of food without being labeled a mage was beyond her. \n\n\"Not bad, I take it?\" Jonah said in a muffled voice as he continued to stuff his mouth. \n\nYari nodded. Within seconds of stuffing her mouth, she swallowed the huge chunk she had bitten off while savoring the lingering taste of vanilla and strawberry, then damn near inhaled the remaining half of the pastry. Her cheeks puffed out as she chewed, in a moment of complete disregard for the usual grace she presented herself with. Jonah watched intently, having switched most of his attention from eating to her. After swallowing once again, Yari looked back at him longing for more, and he almost seemed to be waiting for it. \n\nShe cleared her throat. \"May I... have another, my lord?\"\n\nJonah grinned. \"It's Jonah. And yes, you may.\"\n\n-----\n\n\"Perhaps it would be for the best if you were to rest for a while?\" \n\nJonah spun around, but continued to walk just as fast backwards. \"And why would that be?\" he said, his carefree nature evident in his tone.\n\n\"Well, physical activity should be avoided after eating that much food, no...?\" Despite having such a large physical advantage over her master, her long legs were barely able to keep up with his. Granted, he almost ran in excitement, as if he had to exert his vast energy at all times. \n\n\"Good thing the horse is the one doing the physical activity, then!\" \n\nWatching as Jonah turned back to face the direction he was heading in, Yari couldn't even gather the energy to explain how tiring horse riding can be. She merely let out a little mutter and followed her master in his steps. At her side she was carrying a saddle and all the straps that came with it, having been forced to comply with the next demand of going on a horse ride. It was the worst kind of situation for her. Roughly a couple of hours past noon the sun stood high in the sky, and in the subtropical countryside where they lived, clouds were few and far in between.\n\nNow Yari could handle it just fine, but such hot weather paired with exercise was surely going to turn her into a dripping, stinking mess. With any luck, Jonah would allow her a shower after they were done, but she doubted that he had the patience to wait for however long it would take. But while she would no longer utter any complaints about whatever he wanted to do, she could always try to persuade him into joining her for a bath in the nearby lake. To Yari, that definitely sounded like something a playful boy like him would enjoy.\n\nHaving crossed the mansion's garden, Jonah ran up to the large barn where the lawn turned to wheat fields. He hummed to himself as he went to lift the wooden latch out of its socket and away from the large pair of doors that it covered. With Yari on standby a few yards behind him, he swung them open without a hint of patience, letting the afternoon sun into the rather dark interior of the barn.\n\n\"Now then,\" he said. He glanced left and right at the various horses staring at him over the edge of their stalls, but quickly cast his focus further inside. Entering the barn, he made his way down the hay-covered floor between the stalls on each side, the horses necks turning with him. \n\nFollowing in his tracks, Yari inspected the individual steeds. \"Are these not to your liking, Jonah? They seem energetic enough.\" Her presence seemed to make every last one of the horses recoil as far as they could into their stalls. They probably weren't used to a bipedal creature towering over them like she did, let alone one with her particular scent. \n\n\"How much do you weigh, Yari?\" Jonah called out as he continued down the long building. \n\n\"Uh... Forgive me, but why does that matter?\" \n\n\"Just answer. Or are you offended at such a question?\" \n\n\"Of course not,\" said Yari. \"I weigh about... 550 pounds. I think.\" Taking offense to such an inquiry was mostly a human phenomenon. Yari was a she, but she was not a lady. With that said, it did feel strange to reveal such information for the first time. While monstrously muscular in comparison to the humans in her life, she was actually a little bit on the light side for an orc. Regardless, the number alone didn't do her appearance justice. Her kind was powerfully built no matter their lifestyle, but the high density of their muscles allowed them to keep a feminine physique, rather than looking like the boulders one would imagine upon hearing commonly claimed weight numbers hovering around the 600-pound mark. The large amount of fat stored in their breasts and buttocks also contributed to such an appearance. \n\nIn Yari's case, she often found herself hoping that her body shape aided somewhat in fitting in with humans. She was rather slim of shoulder and waist, while still possessing a burly, sinewy body that made her useful and respectable as a slave, as well as distinctly womanly curves that many human males desired. Usually the most flattering reaction human onlookers gave her was one of awe at her unmistakable power, but she often kept her eyes open for more than that. It would be a dream come true for her to have one of her three masters sneak a peek at her cleavage, ass or bulging crotch... A shallow thought perhaps, but one that meant a lot to her nonetheless. Anything to make her feel more desired by the people she lived with. \n\nJonah unlocked the gate to the stall that occupied the entire far side of the building. \"This one should be perfect then. Wait here, Yari.\"\n\nThe young orc stood there, watching as Jonah entered the stall. Unlike the other ones, this one had solid walls that went all the way up to the ceiling and a door with only a small barred window to see through. Yari knew why it looked different, and why it was so much larger than the ones she had walked past. That's why she was confused. Surely Jonah wasn't about to have her ride a horse, right?\n\nBut indeed, such appeared to be his plan. He came back out of the stall in no time, opening the gate with a grin on his face and a lead rope in his hand. A downright enormous horse followed in his steps, calmly emerging through the doorway that barely left enough room for its frame.\n\n\"2,800 pounds of horse should be enough to carry you, no?\" Jonah said. He immediately came all the way up to where Yari stood amidst the stalls housing the smaller steeds, then stepped aside to let horse and orc come face to face. \n\nShe stared at the magnificent beast with awe. Its fur was a deep chestnut color, covering a build a good twice as muscular as the average, and the top of its head reached an even greater height than Yari's more than seven feet. Staying true to its intimidating appearance, it didn't show any signs of discomfort at her presence, unlike the many other horses along the walls of the long building. And Yari felt the same way. It was as if there was a mutual understanding between the two; a sort of relief at not being met with scorn or fear during a first meeting. \n\nJonah reached out to lay his gentle hand on the horse's large neck. \"You can pet her. She's not as dangerous as she looks.\" \n\nYari nodded and copied her master, slowly raising her big, rough hand up to its face. As carefully as she could, she let her fingers come into contact with the fur above its muzzle and gave it a somewhat awkward stroke, but the horse didn't seem to mind at all. In fact, it even lowered its head a bit, as if to encourage the touch of someone other than Jonah, who already seemed used to handling it. \n\n\"Her name's Belle,\" he said. \"You like her?\" \n\n\"Yes... She's beautiful.\"\n\nJonah sighed. \"Mother and father won't let anyone ride her. They just leave her in her stall all day because they find her intimidating, and they're too prideful to find her better owners.\" \n\n\"That sounds lonely,\" Yari said as she kept petting the horse's face with increasing affection.\n\n\"Indeed, even the other horses are afraid of her,\" Jonah continued. \"I bet she would love to be taken out for a ride. Would you like to do the honor?\" \n\nAt this point Yari no longer wanted to refuse him. \"I would love to. But It's been a while since I rode a horse...\" \n\n\"Don't worry. I'll be there with you.\" \n\nYari glanced over at Jonah's sweet, yet somehow sinister smile. There was no way he was planning to instruct her from the sidelines or pull the horse along by its leash. He wanted them both to ride Belle; she understood that much. Which, of course, meant that Yari would be forced to stay closer to him than ever... \n\n\"So?\" the boy added. \"Are you gonna saddle her already?\"\n\nThe towering orc took a deep breath. \"Yes... Jonah.\" \n\n-----\n\n\"Calm yourself, Yari. You're not going to fall off.\"\n\nYari continued to squirm in the saddle, trying to distance her crotch from Jonah's butt as much as she could. \"I-I know that, my lord...\" she said. \"It's just a little cramped on the saddle...\" \n\n\"You should have learned what to call me by now,\" Jonah replied calmly. With Belle's reins in his hands, he guided her on a slow walk along the wide path that cut through one of his family's wheat fields. It was a track that was often used by his parents and various employees as a way of exercising their horses, stretching around the entire land they owned and connecting to the various roads that led to neighbouring homes and the nearby city. \"Sit properly and you will be fine. And hold the reins instead of my shoulders!\"\n\n\"... My apologies, Jonah. It has been a while, like I said.\" It was strange how comfortable Yari was with holding onto him, knowing that the alternative was reaching around his slim, cute body to join their hands together at the rope that guided the massive horse. Nevertheless she did just that, her shaky arms stretching out around Jonah, wrapping him within her green muscles. His narrow grip around the reins was likewise enclosed by Yari's huge hands. \n\nA near-silence set in as she did her best to not let her nervosity show. Right above Jonah's messy bundle of black hair, Yari's chin was dangerously close to dripping orcish sweat onto him. It was a miracle that she managed to curve her spine enough to only have her heavy tits graze him ever so slightly, rather than flattening against his back, but even so, there was no way he didn't take notice of the sensation. Even her cock was a concern that she had to be wary of, despite painfully having tucked it backwards between her huge buttocks. The mere smell of Jonah's hair was almost enough for a massive erection to spring forward into his backside. \n\n\"Summertime out here is really something, isn't it?\" the boy said out of nowhere. \n\nYari took a deep, calming breath of the fresh summer air. \"It is. Nice and warm.\"\n\n\"Indeed. Perhaps a bit too warm sometimes, no?\"\n\n\"Y-you think so?\" Yari stammered. \"I think it's quite pleasant most of the time...\" \n\n\"Really? That's surprising. You're from the north aren't you?\"\n\nShe let out a sigh of relief. \"Yes, that's correct. But I've almost always lived in this climate, so I'm used to it.\" For a moment she thought that Jonah was hinting at her outrageous sweating, but it was all mere small talk. She was indeed a northerner, her bright green complexion being the equivalent of the pale-skinned humans who inhabited regions of a similar latitude. Not that a darker skin tone would have helped much in this instance. Even the mildest of sweating could bring out the intoxicating odor of her kind, and, in any weather other than that of a harsh winter, mild sweating was inevitable. \n\n\"How much time did you spend there?\" the boy went on. \"In the north, I mean.\"\n\n\"Hardly any. Truth be told I don't remember any of it.\" Part of Yari wanted to drop the conversation subject in fear of digging up painful memories. Another part of her was happy to share her past hardships with Jonah, seeing as how he had become part of the closest thing to a family that she could ever hope for. Her real family wasn't even a memory to her. She would never know whether or not her human mother and orcish \"father\" conceived her in an act of forbidden love, or if she was simply the result of another horny orc's sexual assault. Regardless, the fact that her mother had kept her alive past birth meant that perhaps she had been loved at some point in her life.\n\nJonah cleared his throat. \"So... You wouldn't happen to know who lord Tarion is, would you?\"\n\n\"I would,\" said Yari. \"He's one of the Firstborn. They worship him like a god up there.\" \n\n\"Do you know what he looks like?\"\n\nYari shrugged. \"More or less, I suppose. Only from paintings and statues, though. Why?\"\n\n\"Describe him for me.\"\n\n\"... Uh, okay,\" she said, unsure of what direction the conversation was heading in. She looked up into the clear sky, collecting the scattered pieces of information in her mind to form a picture before her. \"He's around average height, I think. Has a slim, pale and hairless body with a little hint of muscle. Straight, golden hair that almost goes down to his shoulders, and crystal-blue eyes. A very intense northern look, I guess you could say.\"\n\n\"What about his face?\" Jonah asked. \n\n\"Hmm, well, he has rather mild facial features... But I guess I would say a thin nose, defined cheekbones, and... a decent jawline? I remember him always being painted in a way that portrayed him as kind and gentle, too.\"\n\nJonah went quiet for a moment as only the sound of Belle's hooves continued. \"... Is he attractive?\"\n\nYari let out a snort of amusement. \"One of the most attractive people I've ever seen. At least if the paintings are accurate enough, considering I haven't seen him in person.\"\n\n\"I knew it.\"\n\n\"... Knew what?\"\n\n\"You do have an interest in human males after all,\" Jonah said, looking back at Yari with a shrewd grin. \n\nYari's brain finally caught up to the words that had just exited her mouth, her green cheeks growing darker in a blush. \"W-well, of course I do,\" she stammered. \"Why wouldn't I...?\"\n\n\"Oh, I don't know. You've always seemed like a loner, that's all.\"\n\n\"I'm just trying to do my job...\" said Yari, scratching her chin.\n\nJonah giggled. \"Respectable, I suppose. Still... I wonder how many orcs have lusted for lord Tarion throughout the ages...\" \n\n\"That's beyond counting,\" Yari said. \"And it's not just orcs either. I heard that since he lives in the far north, there have been countless failed attempts by the lycanthropes at kidnapping him.\"\n\n\"Wow,\" Jonah mumbled, staring off into the distance. \"I can't imagine what that would be like... Being craved by everyone around.\"\n\nYari let out a bassy chuckle. \"Isn't that the standard for humans in this world? I mean, your people are always lusted after, doesn't matter where you go. All other species see you as prices to be won.\" \n\n\"My, Yari...\" Jonah said slyly, casting a glance back at her. \"Do you share that view of humans?\" \n\n\"Wha-... N-no! I mean, I like humans, but it's... I don't see you as mere... sex objects... or anything like that...\" \n\nJonah's sudden laugh cut through Yari's rambling. \"Calm down, Yari! I'm joking.\" \n\n\"Oh...\" \n\nWith the conversation coming to a sudden halt, the two merely stared off into the sky as Belle continued to walk along the path. Yari could never hope to completely shake off her worries, but at this point she was no longer in a panic from Jonah's presence. She became more and more relaxed in her seat with every passing second, barely even noticing that her arms and hands were rubbing up against Jonah's as they both held on to the reins, nor that her tits pressed against his back in a way that he couldn't miss. \n\nHer masters had always treated her with respect, but to say that they had ever engaged in a meaningful conversation with her would be inaccurate. She would guard, herd, carry, and patrol, most of it in silence, which she ultimately didn't mind. But this very moment was one that she would gladly experience again. Not only did Jonah treat her like an equal, but he seemed to be genuinely interested in hearing what she had to say. Such a relationship was rare between an orc and a human, and though she may have been sold into slavery, Yari was glad to be a part of Jonah's life. \n\nIt certainly helped that he was prime mating material in addition to his kind nature... With his mildly toned, yet limber and boyish body, as well as a cute face topped with shiny, black hair, keeping one's hands off him would prove a struggle for most orcs, Yari being no exception. Thankfully she had enough sense to hold such desires back. Well, if she tried really hard not to think about them, that is. \n\n\"Um, Jonah,\" she spoke up with a few beads of potent sweat reemerging from her pores, her cock simultaneously starting to swell where it lay tucked back between her buttcheeks. \"Perhaps we should head back? There were more things you wanted to do today, were there not?\"\n\nJonah shook his head. \"No. Not anymore. I'm enjoying being out here with you.\"",
        "\"I-I see...\"\n\n\"Let's go for another few rounds around the fields. I want to see the sun start to set before we go inside.\" \n\n\"As you wish,\" said Yari. With that, she forced her mind to wander away from the lecherous thoughts that had hit her, letting out a deep breath as she gazed upon the treeline surrounding them on all sides. The large branches swaying in the wind was a distracting sight, reinforcing Jonah's statement from earlier: Summertime out here was truly something.\n\n-----\n\nThe evening sun shone upon Yari's huge body as she stared out of the arched window, her normally lime-green skin taking on an orange hue from the warm rays. She had closed the curtains of the other three windows in Jonah's large bedroom, and with this last one, the day would officially come to an end. The young lord and heir of the mansion had gotten a taste of what it was like to be in charge, but the moment he and his orcish slave went to sleep for the night, things would return to the way they normally were by the next time they saw each other in the morning. \n\nYari finally grabbed the curtains and pulled them shut. It was still quite early in the evening, thus also an early end to being forced into Jonah's presence, but she couldn't help but feel that it was a bit of a waste. Despite everything, she had enjoyed herself. Jonah was an energetic boy, and as tiring as his antics might be, he was easily the most charismatic and easy-going of Yari's three masters. \n\nShe couldn't help but worry about the nature of Jonah's abrupt mood shift an hour prior. After their drawn-out but rather enjoyable horse ride, he had complained about a sudden sickness, and decided to skip dinner altogether. The pair had parted ways, with him going to the bathroom and Yari proceeding to eat the food that Aaron and Edna had left them. With nothing else to do as she waited for him to be done with whatever he was doing in there, she had taken her time to set the boy up for a good night's rest. Aside from the basic task of closing the curtains, she had fluffed up his massive down pillows and lit not only a few candles here and there, but an incense on the other side of the room as well. Though in reality, using the incense was merely her own over-the-top idea of masking the scent that she spread onto everything that came into contact with her.\n\nAt long last, a creak was heard from the door behind her. She turned around, worrying that she would find Jonah in a worsened state, but any trace of sickness was nonexistent. The young boy stood there, healthy as ever, leaning with one hand against the doorframe as he smiled at Yari. A pair of white, silken underwear adorned his pelvis, with the rest of his slim body visible in all its bronze-complexioned glory. Rarely had Yari ever seen so much of his skin at once, but she could have sworn that his cute, small frame had never looked so soft and erotic. Whatever he did in the bathroom clearly went beyond merely tending to his sickness. Nowhere to be seen were the typical stains of dirt upon his face nor the ruffled hair that a full day of nothing but playing would result in. Instead, he looked groomed in every sense of the word; his face glistened, his eyebrows seemed to have been plucked into thin, symmetric lines, and his black hair was swept to the side, plastered to his head as if meticulously water-combed. \n\n\"Are you finishing up?\" he said and entered the room. \n\nYari's stare was starting to sting her eyes, until she finally blinked and cleared her throat. \"Yes... I'm all done.\" \n\n\"Great. Forgive me for troubling you with this.\" \n\n\"D-don't apologize...!\" Yari blurted. \"Taking care of you is my duty, my lor-... Jonah.\"\n\nStanding next to his bed, Jonah looked at Yari with what seemed like a hint of a frown. \"Still,\" he said as he lifted the cover and climbed onto the mattress. \"I hope I haven't been too much of a nuisance today.\"\n\n\"I would never think such a thing...\" \n\n\"You're very kind, Yari,\" Jonah cooed, his face shifting into a slight smile. He wiggled underneath the bed's cover and rested his head against the pillow as he stared off into the distance. \"Hey... I know this is a bit childish, but mother usually gives me a hug before I go to sleep. Maybe you could give me one this time?\"\n\nYari stood speechless for what felt like a full minute. \"Uh... No offense, Jonah, but perhaps that kind of thing should be reserved for your mother.\" \n\n\"Oh...\" Jonah mumbled, his face sinking. \"Perhaps it's impossible to make you look at me in such a way after all...\"\n\n\"... In what type of way?\"\n\nHe expelled the air in his lungs with a deep sigh. \"The way an orc would normally look upon a human. Perhaps I'm a fool for hoping that you ever would. I suppose even I am guilty of human narcissism, huh.\" \n\nYari blinked at him, her mouth hanging agape. \"Forgive me, my lord, but... What exactly are you talking about?\" \n\n\"There you go again!\" he exclaimed, sitting up straight. \"'My lord this, my lord that.' You're an orc, Yari! I should never have been your lord to begin with!\"\n\n\"I-I still don't follow...\"\n\n\"I think some part of you understands completely,\" said Jonah confidently. \"But I have never seen that part of you. And I wish to. It would seem that I'm just not desirable enough, however.\"\n\nThe fire within Yari's body once again began flaring up as she experienced this strange, tender side of Jonah. Regardless of whether or not he was trying to say what she suspected, his words nevertheless spoke to her orcish nature like nothing else ever had. Not that she was going to act on it, of course. It might all have been a misunderstanding, and she couldn't risk jeopardizing their relationship by assuming that a boy as innocent and sweet as Jonah had somehow developed feelings for a rough orc like herself. That said, she definitely couldn't have him believe that he was anything other than perfect in her eyes. \n\n\"Don't you ever say that you're not desirable,\" she spoke up. \"You are beautiful, Jonah... I always find myself staring at you, and when I do, my body reacts in ways I cannot control.\"\n\nJonah lit up where he sat. \"You... you mean it?\"\n\n\"Of course,\" Yari said. \"Perhaps I'm saying too much, but... That is how I feel.\" Her eyes darted around as she waited for an answer, but none came. She could feel Jonah's stare penetrating into her very soul, as if all of her wildest fantasies were being revealed in front of him. Such a mild confession didn't necessarily indicate any dirty thoughts at all, but Yari was an orc after all. Her people certainly had a tendency to view humans in the most erotic ways imaginable, and when there was love involved, like in this case, those views could manifest even stronger yet.\n\nJonah drew her gaze back with a sudden pat on the empty half of the mattress next to him. \"Will you join me for the night, Yari?\" he mewled softly. \"I won't command you to... I will only beg you. Please?\"\n\nYari's heart began racing at the realization that this completely alien scenario was reality. That very look of pleading submissiveness on Jonah's face was something she had only seen in her dreams, and now here it was in front of her without any effort on her part. \n\n\"I... I couldn't...\" she began, holding back her tensed up limbs from giving in and pouncing on her master. But perhaps she was merely trying to avoid the inevitable. Jonah had already proven to be a stubborn one, and although he wasn't commanding her, his pleas were almost equally as effective in forcing Yari to do as he said. Then again, she had wanted this herself for a very long time. \"... Are you sure, Jonah?\" \n\n\"I'm sure... I've always needed you in my life, now more than ever.\"\n\nThe orcish slave gave an awkward bow, then stepped forward to the edge of the bed. She reached out with her powerful, but trembling hand, lifting the silky cover that shrouded Jonah's sexy body. Slowly but surely, Yari put her knee onto the mattress, her eyes glued to Jonah's in order to detect any hint of him having a change of mind, but none came. On the contrary, he seemed to get more excited with each one of Yari's stiff movements that slowly heaved her giant body onto the bed. \n\nWith both legs laid flat against the silky surface, Yari lay down with her head against the luxurious pillow situated right next to Jonah's. Still sitting up, he stared at her where she lay, while she in turn had all of her focus directed at the ceiling above. Despite every single one of his advances, be it the strange looks he gave her or the pleas he had uttered moments ago, Yari still found a way to deny their legitimacy in her head. For many years she had trained herself to never act on her instincts, and such training was hard to forget. She would never suspect Jonah to merely be testing her resolve; surely he would never do something so cruel. And yet...\n\n\"Even now, you're holding back,\" he said, cutting through Yari's thoughts with his words. \n\n\"H-holding back...?\" \n\n\"Stop pretending, Yari. Surely you understand that I didn't invite you to merely sleep next to me, right?\"\n\nIt couldn't be. He couldn't really mean that, could he? \n\nBut then he turned away, awkwardly scratching his head. \"Forgive me if I'm making you uncomfortable, Yari,\" he said, his voice gentle and sweet, and in stark contrast to his normally loud and bubbly one. \"I don't want to force you to do anything. I don't even want to initiate anything. All I'm trying to do is leave the decision entirely to you.\" \n\n\"Why?\"\n\nNow smirking, he crawled closer to her, before laying his head down on the same pillow hers was resting on. \"Because that is how the relationship between a human and an orc should be,\" he said. \"I've grown up with you by my side. I've seen everything you're capable of. I've seen up close how big you are. How strong you are. How sexy you are.\"\n\nIf the mere inches between them wasn't enough, his words were certainly fueling Yari's steadily inflating cock. \"W-wait a moment!\"\n\n\"But most of all...\" Jonah continued, laying his arm across Yari's thick abs, and with his face now turned to her, he took a long whiff of the orcish musk oozing off her body. \"... I love the way you smell. I can't get enough of it. Not only are you physically superior, but you can also leave us mere humans drooling after a tiny whiff of your scent. Isn't it obvious that humans are meant to serve orcs, not the other way around?\"\n\nYari's vision became a complete blur immediately upon registering Jonah's words in her brain, and her muscles went limp to the point where her robust body almost seemed to melt into the bed. All this time he had known the full extent of what Yari tried so desperately to hide. All this time he had lusted for her, and who knows how much Yari could already have taken advantage of that fact. \n\nFrom out of nowhere, the gentle touch of Jonah's hand graced Yari's burning cheek, and the next thing she knew she had her face forcefully turned towards his. She looked straight into his glimmering eyes, feeling herself almost get lost in their darkness, while he in turn smiled at her with both clear confidence and a hint of pleading. It was the type of expression that indicated that Jonah knew it was only a matter of time until he got what he wanted.\n\n\"I'm right here, Yari...\" he purred. \"Please don't let anything hold your desires back. My parents won't need to know...\" \n\nThe mere mention of Lord Aaron and Lady Edna should have served as a stern reminder of the severity of what was taking place here. As lenient as they were, Yari couldn't imagine them being fine with her defiling their son, no matter how much he begged for it. His assurance that they would remain ignorant didn't actually do too much to soothe Yari's nerves, knowing that all it took for them to find out was for her guilt to become too unbearable to keep to herself, or for Jonah to have a slip of the tongue during his typical bursts of energy. But despite all that, she knew that she would not be able to resist him any longer. \n\nWith her nostrils flaring out wide with each heavy breath she took, she finally took the first step in uncorking her bottled-up instincts, inching closer towards Jonah's face and those inviting lips of his. She closed her eyes and pouted out her lips as far between her tusks as she could, bracing for a kiss as innocent and careful as possible. Their breaths mixed, as did their scents, Yari's strong musk quickly overtaking Jonah's fresh scent of soap and boyish aroma... Then, it happened at last. \n\n'Awkward' didn't even begin to describe the initial contact of their mouths. Yari's huge lips enveloped Jonah's from top to bottom, and her tusks that pressed against his cheeks served as nothing more than two bars that boxed him in. Nevertheless, they both remained in place for a few seconds of motionless pressure of lip against lip, without any indication from Jonah that he was uncomfortable. Yari could only barely detect a hint of his sweet saliva seeping into her mouth, but even so, her lust immediately cranked up tenfold as a result.\n\nWhen she finally pulled away, it was mostly to halt the sensations from claiming her mind entirely. \"F-forgive me,\" she blurted. \"I've never done this before...\" \n\nJonah, in turn, put on a bashful smile and bit his lip. \"May I have another... my lady?\" \n\nAnd just like that, the lid was off. Yari's several year-long suppressed desires were released in an instant, and as the big, strong orc she was, she lunged down as if she were about to devour Jonah's cute face, only to instead shove her fat tongue into his awaiting mouth. Though still in an awkward, inexperienced manner, she kissed the boy with a downright ravenous hunger, flooding his mouth with her saliva, sucking his far smaller lips into her mouth, while her tongue filled his entire oral cavity to the point where he could hardly even reciprocate. \n\nNo longer caring about the manners she had come to adapt in her human-centered world, she grunted like a beast into Jonah's mouth as she rolled on top of him, grasping his skull with both of her huge hands to hold him still as she continued to do as she pleased. She slobbered and drooled all over him, and the bulge in her leather shorts throbbed against his pelvis each time she gyrated her hips forward. Her grunts, wet kisses and the squeaks of the bed nearly drowned out the noises Jonah made in response. Yari did not know whether they were whimpers of excitement or protest, but in that moment it didn't matter. She had finally gotten past her inhibitions, and if Jonah wanted to see the true her, she was damn well going to show it. \n\nWhen she sensed a desperate need for oxygen in him, she pulled back once more. Thick strings of spit hung between their lips, with more of it dripping from her gasping mouth into his. Their intermingling breaths were practically visible as steam.\n\nJonah swallowed back a mouthful of orcish drool. \"More...\" he mumbled. \"Please...?\" \n\n\"F-fuck, Jonah...\" Yari snarled and licked her lips. \"You're too gorgeous... I won't be able to hold back.\" \n\n\"I wouldn't want you to...\" \n\nWords were insufficient at this point. Yari instead chose to act purely in accordance to her wildest fantasies, and thus, she proceeded to spit out a fat wad of her rapidly accumulating saliva straight into Jonah's face. Through the evident shock on his face as it splattered across his sexy features, he let out a gasp that was evident of a lust-laden sense of submission. At that point he would probably have let Yari take him in any way imaginable. \n\nYari dove down to ravage him with her mouth again, giving him several wet smooches in rapid succession. But this time, she would not just target his mouth. She stretched out her dripping tongue while he watched with pure awe, then gave him lick after lick from his chin and up. His lips, nose, cheeks... All of them were quickly coated in a thick layer of drool, while the mild taste of his soft, flushed skin almost had Yari's tongue tingling in excitement. \n\nJonah let out a loud, androgynous moan. \"Yes... Use me... I'm nothing but your toy.\"\n\n\"Oh, you bet I'm going to use you,\" Yari said without a trace of her normal courtesy. With that, she sat up straight, with her knees on each side of Jonah's narrow hips, then used both hands to grip the front of her vest around the tightly laced placket. She then pulled her hands apart, tearing the laces to shreds like they were nothing, all to give Jonah his first glimpse of what he had likely fantasized about countless times. As if having been held back by a corset, Yari's heavy tits flopped out of the broken garment, slinging droplets of sweat onto Jonah and the bed. Her dark-green nipples stuck out thick and hard with arousal, and the human admirer lying underneath her looked at them as if suddenly dying of a thirst for mother's milk. If only there actually was any... \n\n\"Wow...\" he said. \"They're even more beautiful than I expected...\"\n\nYari pushed them together, accentuating the way they gleamed in the dim light of the candles around. \"You will have to wait to play with these, so feast your eyes. There are more important things to take care of right now.\" \n\n\"Well, then... What are you waiting for?\" \n\nYari watched contentedly as Jonah's eyes followed the movement of her hands that traveled further down. Like with her vest, she grabbed her shorts on each side of her crotch and, with only a mild rip, the seams that held together the scraps of leather all snapped in an instant. It was free at last: The bulge that had almost burst out on its own several times that day. \n\nThe kisses, touches and loving stares she had shared with Jonah up until now had been a start, but this would mark the true beginning of their relationship. As if with the power of falling timber, her cock came slamming down on Jonah's mildly toned abdomen like a dense, green log of flesh. Just shy of being fully hard, it still rested against his skin somewhat, and the vein-riddled skin still reached nearly all the way to the tip, where the output of precum began drenching the area between Jonah's pecs. From there, the shaft ran all the way down to his pelvic region, above which more than just orcish cock sprouted off Yari's crotch. Namely, a pair of shiny, mango-sized balls, their sweat-coated surface already having made their stinky imprint on Jonah's white undergarments. \n\nHis face went completely blank. \"Oh my goodness...\" he gasped, his previous determination seemingly having been drowned out by fear.\n\n\"I hope you know what you're getting yourself in on, because I'm gonna fucking breed you...\"\n\n\"I've dreamt of hearing you say that...\" Jonah said, a smirk forcing itself through his evident worry. \n\n\"And I've dreamt of rubbing my cock all over you,\" Yari said in a gruff voice, grabbing her shaft by the midpoint. \"Of covering you with my stink until you can never wash it off.\" \n\nJonah stretched out his arms across the bed, leaving himself completely exposed. \"Go ahead. Do as you please with me.\" \n\nYari grinned sadistically as she slid forward on her knees, putting her leaking cockhead right above Jonah's nose. She held it in place for a moment of suspense, before sitting her ass down on the middle of his torso, pressing the now rock-hard cock against the boy's chest, as well as his chin, lips, and nostrils. His rapid breaths immediately flowed out against Yari's almost fist-sized, dark-green glans, and within seconds he would be completely under the effect of orcish pheromones. But that was not enough. While it was only possible for humans to detect the pheromones via scent, Yari was nevertheless going to make sure that they seeped into his skin; that his every pore was clogged with them. He was going to be marked.\n\n\"Here's that smell you love so much,\" Yari purred. \"Breathe it all in. Show your submission to a superior race.\" As slowly and teasingly as she could before Jonah's face of pure awe, she tugged at the middle of her veiny shaft, pulling back the thick foreskin that housed a bomb of stink behind it. ",
        "Jonah visibly gulped as his lips and nose were smeared in precum and whatever oily secretions Yari's fat glans produced. \"It... it smells so good... Your stinky cock is making me light-headed...\" \n\n\"I'm only getting started. Your weak, human mind will be shattered once I'm done, slave.\" Without allowing her civilized self to register the words she had just uttered, Yari likewise gave Jonah no chance to reply as she began rubbing her cock from side to side across his mouth and cheeks. A low moan was all he managed, uttered whilst pouting out his lips to kiss the orcish cock as if on reflex. \n\nAs a result of having violently shredded the tattered shorts that had barely contained Yari's pelvic region, nothing was in the way of spreading her most potent sweat across Jonah's bare torso. Her cock, balls and asshole were all in contact with his soft skin, and her marking ritual thus turned into a full-body movement. She rocked her hips back and forth, rubbing the small boy slick with her body fluids, while pressing her cock down with her hand to ensure that each breath he took would be infused with orcish essence as she slid it across his face. \n\nThe scent of freshly washed human was all but gone before long. Even to Yari, her own stink seemed to cling to her skin, and being used to it mattered little in that moment. Her nose practically stung from the thick musk, and she couldn't even begin to imagine what it was like for Jonah. But in the same way that only a hint of his scent remained, so did Yari's concern. If anything, the smell merely spurred her on to defile Jonah further.\n\n\"Time to open your mouth,\" she said, her hips sliding back her cock off Jonah's face. \n\nJonah stared at the heavy, green cockhead resting upon his lips. \"Y-yes, my lady...\" \n\n\"Good boy,\" Yari cooed as the first hole she was going to violate slowly gaped open under her cock. As she reached out to grasp his head in her hand, Jonah's brown eyes looked up at her with visible lust that seemed to have amplified several times already, but it was obvious that said lust still hadn't completely eradicated his fear. If only for a split second, Yari looked upon him and hesitated.\n\nBut one throb of her cock that had her whole body shuddering for release was all it took to get her back on track. She yanked Jonah's head towards herself, lifting it off the pillow to put his mouth at a perfect angle to enter him. And so she did, her girthy glans stretching his lips as the tip of her cock slowly sunk past them. To her eyes it was an impossible fit, but despite the circumference of her cock that far exceeded that of Jonah's mouth, the first inches stubbornly forced their way in, sliding along his tongue. She grunted as his teeth scraped against her flesh, the soft sponginess of which allowed it to squeeze together to power through all the way.\n\nBefore long came the moment that Yari sought after. Jonah's lips and teeth slipped past the wide rim of her glans, and thus he was stuck in place with a mouthful of the most abundant source of orcish pheromones. He whimpered, but actively continued to swallow the precum that now pumped directly into his throat, and Yari, who had paused to witness it all, put on a grin that revealed near all of her teeth as well as her two tusks. \n\n\"Beautiful,\" she said in a voice that rumbled with more bass than normally. \"You serve your role well, human. Now squeeze those lips together. Suck on it.\"\n\nJonah seemed overwhelmed, as if not knowing how he could possibly squeeze his lips any further. But sure enough, even if just slightly, they began massaging the top portion of Yari's veiny shaft like a tight tube of flesh that continued to stretch forward along her length, audibly squelching as frothy drool leaked out on all sides. It was as if Jonah had turned his lips into rubber, intent on proving that they were mere sheaths for orcish cock. \n\nYari moaned as the remaining foot of cock beneath her glans received such unexpected attention from his mouth, and with that it quickly became impossible to sit still and let Jonah do everything. Her hips rammed forward on instinct, drawing out splutters and gags from her master as the back of his mouth took the full brunt impact. Yari was far too hung to proceed into his throat that easily... but that was a fact that she could exploit, seeing as how there was no way he could choke. \n\nWith the same rocking motion that had already ground her body fluids into his skin, her hips continued their assault. Holding only Jonah's hair in her hand, his head bobbed back and forth as Yari violently fucked his mouth, and his watery, cross-eyed stare made his consciousness seem waning. Despite having gone at it for but a few minutes, Jonah clearly wanted a pause. His erratic whimpers came out like muffled cries against Yari's cock, and his hands went from limp at his sides to clawing into the thick, green abs in front of him. \n\nThankfully that pause would come soon. Yari knew there was no way to stop herself from ejaculating prematurely, having been forced to suppress her urges for a full day. As her fat balls sloshed against Jonah's body with each thrust, there came a distinct feeling of them tightening over and over, as if the internal tubes that they dangled from were being pulled up to squeeze the sperm out. Her cock throbbed in tandem with her balls, by now so hard that Jonah's jaws looked damn close to snapping each time. \n\nAt last, Yari's flexed muscles shivered in the strongest wave of pleasure yet. \"Fuck, slave!\" she roared, stopping mid-thrust with the tip of her cock as far back into Jonah's mouth as it could get. \"Drink! Prove your submission!\" The bottom part of her massive cock inflated as the first load of hot cum coursed through it, entering Jonah with such force that some of it immediately exploded out of his nose. She came like she was pissing, with hardly any pause between each spurt of custard-like semen that clogged up Jonah's throat. The stream came out with such force that he didn't even seem to be swallowing it, instead letting it flow into his stomach while hanging on with a body and mind drained of strength.\n\nYari, on the other hand, retained most of her senses. She knew that Jonah needed a fresh flow of air, but that was not the true reason for suddenly pulling her cock out of his mouth. Rather, she just wanted to shower his bronze skin in white. And so she did, aiming the continuous deposits of thick globs of cum straight into his face. They hit him hard enough to splatter into droplets that flew all around. The bed's headboard, the pillow, the floor... All of it was stained in Yari's wake. \n\nAs the flow eventually ebbed out, so did her growls of pleasure. She slumped over Jonah, taking heavy breaths as her brain finally started reflecting on what she had done. Thankfully the view in front of her, of Jonah's face having been painted so thoroughly that he blended into the white pillow, did not induce any immediate guilt in her. Rather, she was relieved to finally have lived out the fantasy that no sort of punishment could make her regret. \n\nJonah on the other hand seemed to be in a state of mild panic. He tried to raise his head above the puddle as he gasped for air, but the thick fluid rose with him, clinging to him like a mask. The boyish face that Yari had come to love was almost entirely shrouded by a layer of cum; a layer that still connected to the drenched pillow with gluey strings. Jonah seemed in shock, his eyes forced shut behind orcish seed and his breaths shaky and strained. Even Yari couldn't believe what she was seeing. Countless times she had used the small wooden bucket in her room, normally used for showering, as a late-night cum dumpster, but she couldn't picture it holding the load she just showered Jonah in. And that wasn't even taking into account the amount she had made him drink; his dinner, come to think of it. Even more unbelievable was that she wasn't even close to satisfied. Her balls and abdomen practically boiled within her as they produced their next concoction for Jonah to receive. \n\nHe finally wiped his face with his hand. \"That was...\" he began, opening his eyes to stare at the mass of cum that had obstructed them. \"... Amazing.\" \n\n\"I... may have lost my control a bit there... You're not hurt, right?\" \n\n\"Oh, Yari,\" said Jonah, panting for air with a smile on his face. He returned to caressing the heavy cock resting on his chest and gave its tip a smooch. \"Even after all this, you're still so kind. I don't deserve you.\" \n\nYari enveloped his stroking hand with her own. \"You deserve so much more than me, Jonah. No matter what I say or do, I will always care for you.\" \n\n\"I know that. That's precisely why you shouldn't be afraid to show me your savage side.\" His eyes strayed further down, and his hands followed along, cupping one fat testicle in each. \"These things need release, after all...\" \n\nThat touch of his... He might as well have been tampering with the wiring of Yari's brain. The warmth she just showed was almost immediately dragged back into a dark abyss as her balls were fondled by soft human fingers. Her inner warrior that was destined to conquer and breed rose up once more, this time as what felt like an unstoppable force of nature. \n\n\"Okay, Jonah,\" Yari said as her patience quickly dwindled. \"The night is young. Roll over for me.\"\n\nJonah's cum-stained face lit up anew. \"A-at once!\" he stammered. \n\nYari rose from her seated position and lifted her heavy cock off the boy's chest, allowing him to roll onto his stomach. His glance stabbed into her naked, green body from where he lay, his cheek against the sullied pillow, as Yari immediately went on to undress him. To rid his pelvis of its white silk. Hours earlier she would never have dreamt of touching such beautiful human craftsmanship with her sweaty fingers, but the time had come for her to take charge and stop worrying about the pettier aspects of humanity. Though she refrained from ripping and tearing this time around, she hardly exuded any patience in her actions. She tugged at the strings around Jonah's waistband, almost ripping them apart before the knot finally came undone, then yanked at the loosened fabric along his legs. \n\nThe sight that presented itself before Yari's glowing, red eyes was one she would have wished to gaze upon forever. But at that moment her mind could not allow the slightest pause. She seized the two soft and unblemished buttcheeks in her hands, watching the firm, but pliable brown flesh spill out between her fingers. With giggles coming from the other side of the bed, she kneaded Jonah's ass open-mouthed and drooling, letting her thumbs travel into its cleft and prying it open. His asshole revealed itself before her, a brown little ring without a single strand of hair around it. \n\n\"What are you waiting for?\" Jonah purred. \"I'm already prepared, you know.\"\n\nYari gave him a puzzled look. \"Prepared? You mean...\"\n\n\"Why do you think I spent so much time in the bathroom?\" he continued, the words spoken in a playful, teasing tone even by his standards. \"Then again... I suppose I have been preparing for a long time. My entire hand is not even a challenge any more.\"\n\nThe image that formed in Yari's mind left her breathless. Within seconds, the half-flaccid cock that she had momentarily tucked aside inflated as if by a pump, swinging in an arc as it reached full mast. Jutting straight out from her pelvis, its massive shadow danced across Jonah's back with each throb, and precum once again flowed freely onto his skin. \n\nDazed, Yari practically fell onto her elbows on each side of Jonah, her cock pressing itself in between Jonah's buttcheeks and her auburn hair dripping down around his head. Her hips pulled back and delivered a far too premature thrust in her impatience, rubbing her shaft along the cleft of the supple ass underneath. With delirious growls of frustration she repeated the process as she tried to hit the mark without any thought going into it. Her cock stabbed and stabbed, almost bruising the human boy with each precum-drenched kiss. \n\nAnd then, it happened. At complete random, the slit of her cockhead made contact with the soft wrinkles of Jonah's asshole, which immediately swallowed up enough of it to lock it in place. The pair gasped in unison, and Yari's thrust continued through with surprisingly little resistance. She could feel it all in utmost detail. Her foreskin being peeled back by Jonah's brown little ring; his lubricated insides coating her in their warmth; and every single thick vein across her shaft being practically strangled by his tight embrace. \n\nAt last, Yari's every hardship as a slave was repaid in full. To sink their cock into someone like Jonah was every orc's dream, and Yari had been blessed with the privilege of being begged to do it. The feeling of his ass squeezing her stiff cockmeat together was heavenly, but the view of him lying underneath her in a pool of sweat and cum was arguably just as arousing. He was right, no doubt about it: Humans were made to be claimed by the orcish race. \n\nWith Yari's cock fully sheathed within him, Jonah shivered in anticipation. \"Breed me...\" he mewled. \"Please, mistress. Use me.\" \n\n\"You know I will. Brace yourself, human.\" As she spoke the last word she had already retracted her cock halfway, and equally as abruptly as her initial entry she shoved it back. Her hips dropped onto his ass, which accepted her entire arm-thick cock with a wet slurp.\n\n\"Mm, yes...!\" he screamed, casting his head back against Yari's shoulder. \"Your stinky orc-cock is so huge!\" \n\nYari's entire face contorted into strained wrinkles and a vicious grin. She humped against Jonah over and over, faster and faster, letting her heavy balls bounce off the mattress. The sweat from them and the rest of her body flew everywhere around the bedroom, perhaps even reaching as far as the ceiling, but Yari's older masters' opinions on such a matter did not worry her in the slightest. Her scent would likely remain even with cleaning, she knew that much. But if Jonah could learn to love it, so could they. So could any human, really. If only 'lord' Aaron and 'lady' Edna could get even the tiniest whiff of the current stink she had filled the room with... That would surely grant her two new slaves in an instant. \n\nWith her desire to dominate getting ever stronger, Yari lifted one hand from the bed and firmly clasped it around Jonah's neck. He gasped and turned his face towards her, who was already awaiting him with an open mouth. She didn't hesitate to shove her tongue down his throat while tremors continued to course through him from the pulverizing slams of Yari's heavy body. Rather than ending the kiss, Yari's lips remained adhered to Jonah's face as they continued upwards. Along with the tongue that hung out of her mouth, she coated his face anew, this time in drool and mucus that rose from her throat, and all of it while Jonah responded with one long, seemingly never-ending moan. \n\nThough his tight ass and delicious kisses were no doubt sufficient, Yari wanted to take him in true orcish fashion. She loosened the hand around his neck, only to wrap her arm around it instead, then took him with her off the mattress as she sat up on her knees. He gurgled, suspended in the air only by neck and asshole as the pistoning cock continued to fill his guts over and over. Raspy grunts once again began quaking within Yari's throat, getting increasingly loud with each thrust. She fucked Jonah so hard and deep that a clear bulge could be seen in his belly when she entered him, one that curved along his insides in a way that showed how his body had surrendered and adapted to please cocks of Yari's size. \n\nMixed feelings arose as Yari could feel the next climax approaching. If possible she would have fucked Jonah raw and swollen without pause for several hours, but such a feat would require a strength of mind and body that bordered on divine. It hadn't even occurred to her that she was no longer a virgin. In this moment she had become a true orc; someone that her ancestors would be proud of. \n\nHer own thoughts were only making it harder to endure. In fact, the next climax suddenly came rolling in from out of nowhere, sending convulsions through her huge body as her saggy balls tightened against her crotch. Drained of energy, she almost fell over just as her insides erupted with cum, and Jonah was left impaled on her cock while she held him loosely. \n\n\"Oh, fuck...\" she blurted. \"Your ass feels too good... I'm gonna cum!\" With that, her second load came splattering into Jonah as violently as the first one. Muffled, wet noises resounded from within him with each drawn out burst of cum, and with his asshole plugged by such a huge cock, all of it had only one direction to go in. \n\n\"Y-you're filling me up...\" Jonah gasped, his voice nearly choked off. \n\nYari looked down to see it in all its glory. None of the actual semen was visible this time around, but the effect it had on Jonah was. His belly began pouting out as her orgasm continued, the forceful seed making its way through his intestines, perhaps even further. The possibility of filling him up from mouth to anus purely with cum was not out of the question...\n\nThen, it was over, as quickly as it had started. The tip of Yari's cock still dripped within him, but the bulge had stopped growing. Her dripping balls hung low again, and any whimpers and moans in the room had been reduced to heavy breaths that took in the musk around. \n\nYari chuckled, wiping sweat off her face. \"You're a mess, slave,\" she said teasingly and gave Jonah a kiss on the head. \"But it will get worse. I'm not even close to done.\" \n\n\"Wait, Yari...\" he begged. \"Let me rest... Just a little while...\" \n\n\"A minute's rest. Then I'm filling your ass again.\" Indeed, the night was still young. Yari had hardly expected Jonah to be able to keep up, but that would not stop her. She would fuck him in his sleep if she so desired... and she knew that he would want that. \n\nOn the opposite side of the bedroom burned an incense, its sweet scent all but eradicated by that of the triumphant orc. \n\n-----\n\nThe sun stood high in the sky once it shone upon Yari again. With a grumble, she scanned her surroundings through the thin gaps of her eyelids, her mind clouded with confusion but her body rested. She couldn't fathom what exactly had caused her to die and wake up on soft clouds in what must have been the afterlife, but the sensation was so - that not even the slightest sense of panic set in. \n\n\"Good morning.\"\n\nJust like that, her relaxed muscles tensed up. Her head spun in the direction of the angelic voice, and before her lay the being that had offered her the piece of heaven she found herself in. On an off-white stain upon an otherwise luxurious pillow, and with caked-up black hair surrounding his head, he stared at her with a soft smile on his dark lips. \n\n\"My lo-... Jonah!\" Yari blurted, raising her upper body off the bed with her arms. \n\nJonah giggled. \"Well, seems like you remember. Kind of.\" He huddled closer, resting his hand on Yari's massive bicep, then gave her a kiss on the shoulder. \"I wonder how much more you remember of yesterday...\" \n\n\"We... We had... Oh, goodness me...\" Covering her face with both hands, Yari felt her core twisting and turning with such anxiety that it almost had her vomiting. \n\n\"Do you regret it?\"\n\nShe turned back to Jonah, whose smile was still present and evidently knowing. \"N-no,\" she stammered. \"I just hope I didn't hurt you...\" \n\n\"You're so sweet,\" said Jonah. \"You certainly roughed me up, but... I think I can manage another go...\" \n\nYari gulped as his fingers enclosed around her stiff nipple. \"Wait... What about your parents? They will be returning today, right?\"\n\n\"Don't worry. They always take the same evening wagon home whenever they visit the city.\"",
        "Yari did not even have to utter her hesitance. As if on clockwork, footsteps began resounding in the corridor outside the bedroom, having gone unnoticed due to the sheer size of the mansion, no doubt. The lovers sat up straight in a panic, casting their gaze at the door as the noises outside grew louder, like a clock ticking down to their demise.\n\n\"Shit!\" Jonah hissed between his teeth. \"I just had to say it, didn't I...\" \n\nYari barely even had time to picture herself being sold off once more, as the huge bedroom door opened up before her. As if they both had accepted that it was over, her and Jonah hugged each other with their eyes glued to the doorway, in what could very well have come to be their final embrace. Like scared little rabbits, they even went as far as to pull the silken cover halfway up their faces in a futile act of submission. \n\nAs they had already figured out, presented in the opening were none other than Lord Aaron and Lady Edna. Strangely, they stood shoulder to shoulder as if trying to squeeze their way through the frame of the door, still donning the fanciest of suit and dress, their white color contrasting the deep tan of their skin. Their mouths gaped open and their brown eyes nearly popped out of their sockets, but there was no immediate anger. Far from it in fact. That was, at least in Edna's case.\n\nShe glanced at her husband with a grin while he hung his head low, sighing. \"Looks like I win this one,\" she said. \"I told you he would follow in my footsteps!\" \n\n\"Yes, yes... I admit defeat.\"\n\n\"W-what?\" Jonah spoke up. \"What is this about?\"\n\n\"Aaron owes me a massage and a three-course meal cooked by himself, that's what this is about!\"\n\nHe shrugged. \"What can I say? I didn't anticipate this to happen so early in your adulthood, Jonah.\" \n\n\"You bet on...\" Jonah began, turning to his orcish lover. \"On us...\" \n\n\"Yes, we can be a tad juvenile sometimes,\" his mother said. \"But we both knew it would happen eventually. Don't think we haven't seen how you two look at each other.\" \n\nYari was ready to faint from shock. At first she thought that she was hallucinating a scenario that would save her of mental trauma, but the angry outburst that would shatter the illusion never came. Indeed, if this was truly happening, the two people she had always respected as serious, yet caring individuals had kept a downright massive part of their personalities hidden from her since she was little. All this time they had been rooting for her and Jonah to get together, while she had tried to avoid his presence at every cost. \n\nJonah's mouth quietly opened and closed as he searched for words. \"But... I don't understand. What do you mean 'follow in my footsteps'?\"\n\n\"Well, I suppose it's time to finally tell you,\" Edna began. \"See, there is this place in the city that your father and I frequent, in the basement of an inconspicuous building. It's a bit of a secret but... Well, to put it in simple terms, it's one of many places where humans can experience some fun of the exotic kind. As long as they have memberships, that is.\" \n\nNo way... Yari thought. Broken Tusk... She had only heard the rumors of its existence. A secret society said to have members in every human city that participated in the orcish slave trade, in which droves of women would cheat on their husbands in underground orgies, where orcish cum flowed like water in a bathhouse. Men often joked about it, as if confident that such a concept was absolutely ludicrous, and that their wives would never willingly come close to creatures so savage and grotesque. Rarely would said wives comment on the matter, however... \n\n\"And Aaron happens to be quite the center of attention,\" Edna added, nudging the lord's shoulder. \"He's always one of the only men there. I swear, I constantly worry that he'll drown in a sea of green.\" \n\n\"Okay, that's enough,\" he interjected. \"I'm sure Jonah can live without hearing the details.\" \n\nEdna threw her head back with laughter. \"Ah, yes, fair enough. I suppose we should leave you two alone for the time being. Wouldn't you agree, Aaron?\"\n\nHe cracked just a hint of a smile, something Yari had never seen in her life. \"I suppose so. Oh, and Yari, I'd like to see you later. The time has come for us to discuss your inheritance of the mansion.\" Without waiting for an answer he disappeared into the corridor in his wife's footsteps, bringing the door shut. \n\nSpeechless, Yari looked at Jonah to find him equally as confused. Some level of disgust on his part was to be expected at what had just been revealed, but there didn't seem to be any. If anything, there was a hint of what looked like regret on his face, perhaps at the realization that he had been hiding his feelings towards Yari from his parents for nothing.\n\nAfter some silence, he blinked and turned to Yari. \"Well... That makes things easier, doesn't it?\" \n\nYari smiled, before lunging forward to kiss him. Their arms came coiling around each other, and down onto the mattress they fell. There were still so many unanswered questions, most pressing of which regarding whether Jonah had already rejected inheritance, or if Lord Aaron always meant for Yari to take over eventually. But she would ponder about such details later.\n\nMore hot, nasty sex was due. For hours. If not days."
    ],
    "authorname": "ScumDumpster69",
    "tags": [
        "fantasy",
        "orc",
        "musk",
        "sweat",
        "futanari",
        "dickgirl",
        "interspecies"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-slaves-conquest"
}