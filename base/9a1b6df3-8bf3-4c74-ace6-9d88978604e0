{
    "title": "Newfound Lake",
    "pages": [
        "Prof: Newfound Lake is a story I wrote for the Summer Lovin' contest. Sadly, I finished it a few days too late for submission due to life and my high standards. I have no patience to sit on this for a year for the next contest, so please enjoy my first self-contained, short story. \n\nThe main characters, Evan & Jane are in the 21-22 age range, though it was never specified in the story. All Characters engaged in sexual activity are 18+\n\n**********\n\nNewfound Lake\n\n*****\n\nJUNE\n\n******\n\nEvan made his way into the busy kitchen to grab another beer. His friend Zack had convinced him to come out to one last party before he went away for the summer. Evan wasn't really sure why, as Zack ditched him within 15 minutes to talk to some girl he had been wanting to bang. It must have gone well because he was on his own for the rest of the night, which he was used to by then. Normally he wouldn't be feeling as awkward as he was but every year he found himself more ready to leave his hometown and everyone in it behind. \n\nOn the way to the backyard, he saw a semi-familiar face go by him, glancing up and giving a small smile like she always did. He had known of Jane since 1st grade, all the way up through high school. The college he went to was big enough that she could be going there too as far as he knew. He saw her at most of the parties he went to and they had quite a lot of mutual friends. For whatever reason, they had never said more than a sentence to each other; maybe a few paragraphs if he counted the 5th-grade school play. \n\nJane always seemed to be on the move, heading to some other more important thing where no one else was invited. He had always thought it was a little funny that a girl could be nicknamed 'hippie' while appearing to be so stuck up. They had even managed to not speak at the office supply store that they worked at during college. The same one that Evan had just been 'laid off' from. He followed Jane, realizing that they finally had something to talk about. \n\nHe made his way out the front door, hoping she hadn't left yet. There were only a handful of partiers out front and soon he found her sitting alone at the far end of the porch, face buried in her phone. He hesitated for a few moments as a strange childhood nervousness gripped him. He had a small, quick crush on her when they were 14, nothing at all serious, but to Evan, Jane had always been unapproachable. \n\nShe had dirty blonde hair halfway down her back that was usually straight or pulled back into a ponytail; always a bit messy as she was always running her hands through it. The hippie label was probably due to her style of dress as she seemed to have specific tastes that evolved to include some more regular clothes now and then. That night it was tight tan work pants and a yellow shirt with flowers all over it that looked like it had been passed down from the 60's. All of these details would leave many guys to believe that Jane was more approachable but he didn't see her that way. In his opinion, the most unattractive quality about her was how aware she was that she looked like a model without having to try. \n\nJane lit up a cigarette and noticed Evan walking towards her. She resisted an eye roll, as she didn't have the greatest opinion of him either. He had always seemed to have this arrogance about him that only she noticed. He was wicked involved in school and even made people, like her, look bad at work. Evan was a classic overachiever, which was only made worse by her friends never having a bad thing to say about him. \n\nHe had hooked up with a few of her friends over the years, which disgusted her as they would gush about him as if he was god's gift or something. Evan was definitely hot but everything about his personality came off as fake to her. She felt justified in her assumptions about him as she considered herself to be a great judge of character; except when it came to the guys she dated. He would probably end up being a future serial killer, as too many people liked him, it just wasn't normal. \n\nDespite all of her reservations, she offered, \"Want one?\" in reference to her cigarette. \n\n\"No thanks, I don't smoke. Cigarettes at least,\" he said casually. Jane took it as moral superiority. \n\n\"Normally, neither do I but it's been a struggle lately.\"\n\n\"So you got laid off too, huh?\" he asked her, as that was the only reason he had for their interaction. \n\nJane laughed bitterly. \"I don't know anything about layoffs. My ass was straight fired like a week ago,\" she explained. \n\n\"Seriously? What happened to you?\" he asked.\n\n\"You first, why would they let wonder boy go?\"\n\n\"Wonder boy?\" This was easily the longest they had ever talked alone. Evan wondered if maybe there was a valid reason for his avoiding her over the years that he had somehow forgotten.\n\n\"Sorry, why did you get laid off,\" Jane asked more politely. Maybe Evan rubbed her the wrong way but he wasn't who she was really upset with. \n\n\"I got a voicemail telling me they were making employee cutbacks; getting rid of all the part-timers. I ran into Bill when I went to grab my last check.\"\n\n\"I always liked Bill,\" Jane interrupted.\n\n\"Yeah same, anyway he managed to keep his job. He told me that fucking goon, Chad was behind the layoffs right after he was promoted to manager. Bill overheard him talking about replacing everyone with his buddies and 'hot chicks'.\"\n\nJane looked thoroughly embarrassed when she admitted, \"I didn't know anything about that, but I'm not surprised.\" She gave him a calculating look before she decided to tell him her story. \"I was kinda dating that goon for almost a year. By the way, that's a great description of him, goon, I'm stealing that. So, I found out like a week ago that he'd been seeing a couple other girls while we were supposed to be exclusive. I dumped him right away. Later that night, he posts on my wall that HE's breaking up with me, and to not bother coming in to work again.\"\n\n\"Damn, that's fucked up,\" he said. He figured she was one of those girls always going after the assholes but at least she didn't put up with their shit. \n\n\"You wanna know what's even more messed up? I hate social media. It just seems like a waste of time to me, no offense to anyone else. I only created an account because Chad said it made him feel more comfortable dating me,\" Jane was definitely still in the anger stage which was understandable. \n\n\"I hope you deleted it then,\" Evan said. \n\nJane looked up at him and actually smiled. \"Right after I saw the post.\" \n\n\"You manage to line up another job for the summer?\" he asked.\n\n\"No, everywhere I've tried is already full up before June. I'm totally screwed. I need to be making money all summer before I go back to school. What about you?\"\n\n\"I don't know about anything around here during summer. I'm usually away until September.\"\n\n\"Let me guess, you and the fam vacation in Italy every summer or something?\" Jane said with a smirk.\n\nEvan almost became defensive until he realized that maybe Jane was just teasing him. \"Who the hell do you think I am? I'm away every summer because I've had a job up north since I was 15,\" he explained. \n\n\"What job?\" she asked, clearly desperate.\n\n\"My uncle has this restaurant on the lakeside. It's usually three times as busy during the summer, so I go up to help out,\" he explained.\n\n\"Wow that actually sounds pretty cool,\" she admitted.\n\nEvan hesitated before he made the offer, \"Look, he's always telling me to bring along a friend or two to help out for the summer. You'd get free room and board. I know we don't know each other that well but you definitely seem desperate.\"\n\n\"I am but would I have to stay up there?\"\n\n\"No one's gonna force you to do anything, but it would be a waste of money going back and forth. It's almost a 4 hour round trip.\"\n\n\"Yeah, that would be a total waste. So we'd be living in a house with your uncle? He's not the pervy one, is he? Everyone's got a pervy uncle.\"\n\nEvan laughed before saying, \"No he's not. Actually, I have a pervy aunt instead. But also, I have my own little apartment above the garage so, yeah.\"\n\nJane gave him a questioning look and asked, \"So I would be living alone in a house with your uncle?\"\n\nEvan chuckled and said, \"He's not usually alone himself if you know what I mean. But the second floor is all guest rooms and as far as I know, no one else is going to be staying there this summer. You'd have the floor to yourself and your own bathroom.\"\n\nJane thought for a moment when she suddenly had that sick feeling. \"I'm not gonna owe you anything if I do this, right?\" she asked awkwardly.\n\nHer question almost went over his head. \"What no way! Don't get me wrong, you're an attractive girl but when I go up there, I like to keep my options open. You know, cute locals, girls on vacation looking to have as much fun as they can before they go back home. I'm sure if you wanted to hook up too, you'd probably have way more options than I would.\" \n\n\"I'm sorry, I had to ask. Some guys-\"\n\n\"Some guys are fucking creeps,\" he told her. \n\nJane smiled, nodding in agreement. \"When would we be leaving?\"\n\n\"I'm leaving Wednesday, but you could head up a week after if you wanted.\"\n\n\"Nah, if I'm gonna do this, I need all the money I can get.\"\n\n\"You have my number right?\"\n\n\"Why would I have your number?\" Jane asked, confused. \n\n\"The employee call sheet at work? That's why I have yours.\"\n\n\"Oh,\" she giggled. \"Text me, can I get back to you about this?\"\n\nEvan pulled out his phone, looking for her name. \"Yeah just let me know by Tuesday night.\" \n\n\"Will do,\" she said, looking at her phone to ensure she got his text. It vibrated in her hand but instead of a number, she was surprised to learn he was already in her phone listed as 'Kiss-Ass'. Jane held in a laugh, having no memory of when she had gotten his number in the past. \n\nThe text said, \"Since I already admitted you were attractive, I hope you won't take this the wrong way. You'll make a killing at this place in tips. I've seen it plenty of times.\"\n\nJane looked up as he walked back into the house, his hand up above his head waving goodbye. \n\n******\n\nThe next day, Jane called her friend Maria to get a bit more information on Evan. She was leaning towards going though it wasn't as if she had much choice. A few years back, Maria and Evan had gone out for a few months. They didn't as much break up as decide they'd be better friends than anything else. At that point, the only thing Jane wasn't sold on was Evan but she knew her friend would take care of that. \n\n\"Heya, what's good? How are you holding up?\" Maria asked in reference to Chad. \n\n\"It's looking like I'll survive another year. I think I may have found a job for the summer,\" she said, avoiding the guy conversation.\n\n\"Awesome, what is it?\"\n\n\"Well, I'd be going up north to some lake and working at some restaurant. I guess I'd be living there too but I'll probably come back home once a week, at least.\"\n\n\"That's cool, where did you hear about this?\"\n\n\"Evan,\" Jane admitted.\n\n\"Evan, who,\" Maria asked, not thinking it was the same one.\n\n\"The Evan you used to fuck,\" Jane said bluntly.\n\n\"Oh...Go, Jane, good for you girl. He's a great fuck and you guys will be at the lake all summer. This sounds just like one of my naughty novels.\"\n\n\"Eew, absolutely no way in hell. I am not fucking him. I learned my lesson from Chad. I'm never having sex or dating anyone I work with, ever.\"\n\n\"Fuck, relax. I didn't mean anything by it. What is your problem with Evan anyway?\"\n\nJane sighed, \"I don't have a problem exactly. I just always got a fake vibe about him. I can't really explain what it is but it's like he's holding back or hiding something.\"\n\n\"Maybe that's because you don't really know him at all. And you're wicked paranoid,\" Maria gave her honest opinion. \n\n\"Well, that's why I called. This whole thing sounds perfect. The only part I'm not sure about is him.\"\n\n\"Okay, so you're at least giving him a chance finally,\" Maria said.\n\n\"To be friends, possibly, yes,\" Jane clarified. \n\n\"Hmm, well he's a really nice guy but not like too nice where people take advantage of him, you know. He's smart, and charming, and sexy-\"\n\n\"Rein it in Maria,\" Jane said, rolling her eyes.\n\n\"Yeah, yeah, he's really cute too but you already know that,\" she teased.\n\n\"UGH!\" Jane feigned anger.\n\n\"In all seriousness, I always thought you two would get along. You have more in common than you'd think,\" she said before Jane got too pissy. \n\n\"Like what?\"\n\n\"Uh-uh, if I tell you, you won't get to know him yourself. That's how you make friends, dear,\" Maria assured her.\n\n\"Thanks, mom, so to clarify, what you're saying is that Evan and I have the potential to get along well enough for me to practically live with him for a couple months. And, if my body turns up skinless floating in a river, it's your fault?\"\n\n\"If that happens, it's your own fault for dating the guys that you do.\"\n\n******\n\nJane called Evan the next evening to tell him she was down to go. She got his opinion on a list of things to bring, learning the first thing they had in common; the outdoors. He told her he was bringing his camping gear, bathing suits, and a bunch of things that made it sound more like a vacation than work. When she asked, he told her it wasn't a sweatshop and they would have plenty of time off. He even gave her an official invite to come with him to any parties or things his friends were doing. \n\nWednesday came and Jane hopped in her car to head to Evan's place. She pulled up directions on her phone and when she saw how far away it was she said, \"You're fucking kidding me.\" Evan lived less than 5 minutes by car from her. She wasn't too surprised to see Evan's mom and dad standing outside, waving as they drove away. She did recognize that the week before, she might have called him a pansy because of it, but it was actually kind of sweet. \n\nShe followed in her car, blasting her music and enjoying the ride. To her annoyance, just as there were mountains and trees all around, she received another random text from Chad. This one read, \"If you want your job, you better text me back.\" She immediately deleted it, throwing her phone into the passenger seat. She turned her music up even louder, ensuring she wouldn't potentially hear the vibration. \n\nA series of quick bright flashes caught her attention out of the corner of her eye. \"It better fucking not be,\" she said out loud. Grabbing her phone she saw it was, in fact, him again. \"Did you block me?\" it read, causing Jane to laugh. She deleted that one too and almost threw it into the back seat, instead she called Evan.\n\n\"Hey, that's still you behind me, isn't it?\" he answered. \n\n\"Yeah, right here. I was just bored and thought I'd see how entertaining you could be,\" she said playfully. Maria telling her she was glad she was giving Evan a chance kept playing in her head until she had decided to do just that. While she owed him no sexual favors, she did owe him for letting her join him on this much-needed experience. \n\nEvan went with it. \"Um, okay. Wait, are you trying to say you're not in love with this view right now? I'm always surprised when I make it up there without crashing because I'm gawking at how awesome nature is.\"\n\nJane looked around because it really was an amazing scene. \"Magnificent is more like it. But really I decided I should get to know you better. You're gonna be the only person I know up there for a while. Besides, how else are we supposed to wingman for each other if we can't communicate?\"\n\n\"Ah, but you're assuming I need a wingman. This lake, it's my turf.\" \n\n\"Oh, we're getting cocky now are we?\" she teased, though he did seem off somehow.\n\n\"A little, I feel so different when I'm up here. It's like, back home I'm not the real me, but here, I am,\" Evan admitted.\n\nJane was silent, realizing that she was right all along, but wrong in thinking he was being fake to trick people. \"Thank you for telling me that. It explains a lot honestly,\" she said. \n\n\"You're welcome? Oh, check out this log cabin looking place on the right. They sell fireworks, weird little toys you can only find up here, and other random cool stuff. It was one of my favorite places on the way to the lake as a kid.\"\n\nJane listened, learning plenty about her new/ old friend. He pointed out anything he knew something about, somehow making it interesting to her, no matter the story behind it. It was easy to tell when they arrived at the lake, even though it was easily seen because Evan started talking faster trying to keep up with the number of stories he had. Not only was he apparently his 'true self' but also a kid again. \n\nEvan saw the sign in the distance. \"Here we are,\" he alerted. \n\nThe sign read Lake House Bar & Grill. Jane felt stupid for not realizing that it was a large lake house, thinking it was just a name. She briefly considered if that was where she would be staying when they continued past the dirt parking lot to a second lake house with a garage that had to have previously been a barn. Evan told her she could park in the garage with him and he hit the button he always had in his truck to open the door for them. The barn-garage legally belonged to Evan. He had paid for it by doing odd jobs and other things related to the restaurant's business over the years. \n\nEvan and Jane both stretched after the long drive. Jane walked out to check the whole new situation while Evan watched, happy to see her look of surprise. \n\n\"I thought you were overselling this place but now I actually think you undersold it,\" she said. Classic rock could easily be heard from the Lake House and Jane began walking towards it almost as if hypnotized. \n\nEvan saw something white on the door to the other house. \"Wait, follow me,\" he said, heading towards it. \n\nAs they got closer, Evan could tell there was a note on the door, probably for him. Even closer, the music was quieter, allowing them to hear the sounds of frantic sex going on inside. \n\nThe note read: \"Evan, if we're still doing it, slam the door when you come in. Sincerely, You'll See.\"\n\n\"Evan,\" Jane said to get his attention. \"It's sexy mystery time,\" she continued excitedly. \n\nThey stepped in, slamming the door as instructed, and the sex stopped. Evan cleared his throat so they knew what they had heard, sounds of fumbling followed. The mystery girl said, \"He's here!\" in such a way that Evan thought he must know her. A young brunette girl appeared from the hallway past the kitchen, wearing nothing but panties and a huge grin. Her hair was in shambles and her body glistened with sweat. The girl ignored her messy, nude state. \n\nShe screamed, \"Evan!\" before she ran across the room and jumped into his arms. \n\n\"Lisa,\" he stated, more in understanding than surprise. \n\nEvan actually swung her around a couple times as she giggled. Jane was pleasantly surprised as she had never seen anything quite like what she had just walked into. Putting her back down, he took a step back, looking her over. \"Lisa you still look real fine. And sweaty,\" he winked at her. \n\nLisa blushed, and Jane stared at Evan thinking, \"Who are you?\"\n\n\"Thank you, and yes. Mike really knows how to fuck. Guess it runs in the family,\" she commented. That was when she noticed Jane was there. \"Shit I'm sorry, I'm with Mike, there's nothing going on between Evan and me,\" she explained to her. She made no new effort to cover her body.\n\n\"No worries, Evan and I are just old friends. I do, however, agree with him that you look damn fine. I'm Jane by the way,\" she told her, glancing at Evan. \n\n\"I'm Lisa, the hostess slash bartender at the House.\"\n\n\"So you and Mike finally happened. Congrats, Lisa,\" Evan said.\n\nLisa giggled, \"Yup, and I lost track of how many times he rejected me, but I never gave up.\" \n\nA man walked out from the hallway where Lisa had come from. He had shaggy brown hair and a trimmed beard. He was shirtless and wore jeans, looking as if he had just woken up. He walked right up to Jane with his hand out. \"Don't worry, I washed my hands. Name's Mike, Jane right?\" he said.",
        "Jane laughed before she shook his hand. \"Great to meet you and thank you so much for this opportunity,\" she said. \n\n\"Any friend of Evan's blah, blah. You don't have a problem with her being half naked do ya?\" Mike asked, gesturing to Lisa. \n\nJane glanced at Lisa, who put her hands on her hips, smiled, and looked towards the ceiling in a pose. She chuckled and said, \"No not at all, but I have to know why you would reject a woman like her so many times.\"\n\nMike grumbled before he began, \"There's a 17 year-\"\n\n\"SIXTEEN!\" Lisa corrected him. \n\nMike glared back at her comically while Lisa just innocently batted her eyes at him. Turning back to Jane he compromised, \"16 and a half year difference between us. This place is different during summer, but it's still a small town. Things get spread around quickly. Owning a business while people think you're some creep taking advantage of a 19-year-old could lead me to have to move. Though I love her and she'd be coming with me.\"\n\nJane said, \"I personally have no problem with you guys. I mean you look like Evan's older bro, not his uncle so it's just not weird to me. What about...Sorry, it's none of my business,\" Jane shut her mouth. \n\n\"No, it's okay. Speak your mind,\" Lisa urged her.\n\n\"Do you guys experience any backlash? I'm asking in case this is supposed to be on the down low or something.\"\n\nMike groaned, walking off to the kitchen. Lisa took over, \"Everyone at work is okay with it. I've had a pretty obvious crush on Mike since I was a little girl, so no one was surprised. The only person who has a lightning rod up his ass about it is my father. But I don't live under his roof anymore so he can go back up a toilet with his opinion.\"\n\nJane and Evan laughed while Mike came back out with a cup of coffee, kissing Lisa on the head. \n\nMike said to Jane, \"I'm sure Evan told you everything but I like repetition. I'm assuming you came here because you need the cash?\" Jane nodded. \"Good, you'll certainly earn some. There will be days off which I encourage you to treat like a vacation, as that's the point, yeah? You get your pick of the rooms on the second floor, hell no one else is going to be staying here so take a different room every night if you want. There's a big ass breakfast every morning right here and all other meals are free to you at the House. Oh, and watch out for the bedroom facing the garage. If you leave the curtains open, Evan might be peeping on ya.\"\n\n\"Why would I have to peep on her when naked girls are just popping out of your room? No offense Lisa,\" Evan defended himself.\n\n\"None taken,\" she said. \n\nJane gestured to all three of them, she said, \"I have to say, I love this whole situation and I feel ten times better about this than I did a couple days ago.\"\n\n******\n\nEvan and Jane unpacked before they headed to the House, what employees and regulars called the place. Jane experienced no pressures her first night, as she was only being trained. The other bartender/ chef, Scarlett had taken Jane under her wing. She had worked there since the place opened 15 years before. She was an older woman and tough as nails; Jane admired her almost immediately. \n\nThere were three other waitresses that night. Jenna, Cindy, and Blair were all very welcoming; though Blair seemed to be particularly edgy with her. Evan was running around the place, listening to Mike explain any new additions or ideas he had as they went along. As it got later and Evan was caught up with business, he stole her away from Cindy who was showing Jane her tables. \n\n\"Take a seat. What'll ya have?\" Evan asked her before heading behind the bar. \n\n\"What's your favorite drink?\" Jane asked when he was back in front of her again. \n\n\"Actually, you wanna know another secret about me?\" \n\n\"Yes, in fact, I do,\" she responded, playing along.\n\n\"I only drink hard liquor during the summer; here basically. And my favorite is a rum called Kraken.\" He lifted a bottle up to show what he was going for. \n\n\"I'll have what you're having then,\" she requested.\n\nEvan poured their drinks and they touched their glasses together before taking their sips. \"So what's your impression now? Still, think someone's going to sell you into sex slavery?\" he joked.\n\nJane looked around with a smile on her face. \"This place is better than I imagined,\" she said.\n\nEvan saw her walk into the restaurant suddenly. Jane followed his gaze to see a hot little curvy redhead scanning the place looking for someone. \n\n\"I'll be back in a few okay?\" Evan told Jane. \n\nShe nodded and he left to meet up with the girl. Jane didn't bother pretending she wasn't watching their interaction, spinning around in the stool. As soon as the redhead spotted him, she screamed, \"Evan!\" causing Jane to wonder just how many girls would be screaming that during the first week. Unlike the first girl, this one was dressed in short shorts and a see-through white shirt which told everyone she was wearing a green bra. She jumped him in the middle of a few crowded tables, something Evan seemed to be just a bit annoyed with. \n\n\"That's Maggie. 120 pounds of bitchy, psycho, slut,\" Lisa clarified from behind the bar. \n\nGlancing back, Jane asked, \"So what, is she like Evan's summer girlfriend?\"\n\n\"No way, Evan wouldn't have it. If Maggie had her way that's what it would be. They hook up with each other as well as other boys and girls. But Maggie will catch a girl eyeing him sometimes and she jumps all over him to scare them away.\" \n\nJane nodded, knowing quite a few girls like that. \"How bad is she exactly?\" Jane asked, understanding possessive and entitled girls very well. \n\n\"She wouldn't or couldn't physically harm you, but she may make a face like she's gonna shit herself,\" Lisa said, giggling before she finished. \n\nJane laughed as well. \"Should I go over there?\" she asked, more hoping to be dared.\n\nLisa leaned over the bar to conspiratorially whisper in her ear, \"Ask him what YOUR plans are tonight.\" \n\nJane shot her an evil grin before walking off towards Evan. Lisa watched from the bar as Scarlett came up next to her. \"At least she's got balls,\" Lisa said, knowing she was watching too. \n\n\"Maybe so, but if she hurts Evan, they'll never find the body,\" Scarlett affirmed. \n\nLisa held her fist up and Scarlett pounded it before walking away. \n\nJane walked right up to Evan purposely ignoring Maggie she asked him \"So what are our plans for the night?\" She winked so Maggie couldn't see to assure him she was just fucking around. Maggie stared at her, offended, and made a noise like she was clearing her throat to spit on her. Jane looked at her with an expression that said, 'What the fuck is your problem'. \n\n\"We have a welcome home party for us actually. I forgot to tell you,\" Evan answered, smirking.\n\nMaggie pushed between them. \"I can just give you your welcome home present before the party then.\"\n\nWithout even looking at Jane, he said, \"Well yeah, of course.\" He smiled and she popped up to kiss him on the cheek. \n\n\"Text me when you're ready to get off,\" she said before turning back to glare at Jane. She looked her up and down like she was sizing up competition before walking off. \n\n\"You are such a guy,\" Jane said knowingly. \n\n\"Hey, in my defense she gives really good...Welcome home presents,\" he joked. \n\n\"I'm sure she does. Is there really a party?\" \n\n\"Yeah, but it's not until Friday. It's for you too, like a welcome to our world,\" Evan informed her. \n\nEvan didn't need to text Maggie since she had been waiting around. Maggie wasn't being extremely obvious but Jane still noticed they kept making eye contact more than normal. \n\nAs they closed up, Evan approached Jane. \"You going to be good without me?\" he asked. \n\n\"Yeah, Lisa already invited me to drinks back at the other house. I think she likes me.\"\n\n\"I'm glad to hear it. I'll either see you later or tomorrow then.\" \n\n\"Hope you enjoy,\" Jane teased him. She watched Maggie practically drag him out by the hand. \n\nMaggie led him across the lot to his place. When they got to the top of the stairs, she even took his keys from him to unlock the door herself. They stepped in and she went straight for his fridge. Evan was a bit annoyed with how she made him feel like they had just walked into her apartment. Knowing what was coming, he decided not to mention it. \n\n\"You want a beer?\" Maggie asked. \n\n\"I would love a beer, thanks,\" he said sarcastically. \n\n\"Well, sit down,\" she ordered him. \n\nEvan complied, sitting on his couch. He was used to Maggie being bossy. He always shut her down when she got out of control, but occasionally he let her get away with it. She always showed her appreciation whenever he did. \n\nShe handed him his beer. Standing there, she chugged half of hers on the spot. She placed the bottle on the floor away from them and kneeled down between his legs. She couldn't wait, undoing his cargo shorts. Trying to rip them off in a way that told Evan to stand back up, he did, she pulled them and the boxers down as he stepped out of them.\n\nMaggie was licking his shaft before he even sat back down. She rubbed her face against it as he watched it grow to full hardness. She licked all the way back up, just when he thought she was going to suck him in, she licked back down again. She knew how to take care of him so he simply sat back and relaxed. She licked and sucked on his balls as she jerked him, all he did was groan in response. \n\nLicking her way back up, she went slower as to tease him more. Evan knew that meant she was about to get to it. Sliding her hand up his sac, she circled the base with her thumb and forefinger. She smiled up at him before she circled the head with her tongue, going right down onto his length. He watched as every time she went back down, her tongue darted out ahead of her mouth licking anywhere she could reach. \n\n\"Fuck, I needed this,\" Evan told her. Maggie had been giving him welcome home head for years now, sucking it just the way he taught her. He had a secret tradition that went along with it. He would save up his cum for as long as he could, usually a week's worth, just to watch her struggle with his large load that first night. It was payback for the many times she had purposely fucked with him or pissed him off for whatever reason she had.\n\nShe pulled him out of her mouth long enough to say, \"Blondie doesn't do it for ya?\" She went right back down on him so he would be less likely to respond. \n\nIt took Evan a few moments to compute what she said as she worked him ever harder as a distraction. \"Jane's just an old...uh...friend. Fuck yeah. She needed a job, so I helped.\"\n\nMaggie pulled off again, \"Yeah right,\" she said before going back down. \n\nTo her surprise, Evan pushed her by the forehead and pulled his cock out of her mouth. \"Listen to me. These welcome back blowies were your idea. While I'm very appreciative of the things you do to me, or for me, this is just a casual thing, during summer only. I've said it so many times before and apparently, I have to say it again; you have a fucking boyfriend!\" Evan exclaimed, highly irritated. Both of them were surprised at how fast he got soft.\n\n\"But it's different-\" She tried to protest, but stopped when Evan held his hand up saying he didn't need to hear it again. \n\n\"I know, you're in an open relationship, which is the only reason it's cool that we hook up. But the simple fact that you have a boyfriend at all means I cannot take something between you and me seriously. You fuck other guys during summer you know I fuck other girls. Interrogation is not what I want to deal with my first night back; actually, I don't want to deal with it at all during summer. So for like the 248th time, can you be okay with that?\"\n\n\"Maggie sat back on her feet before saying, \"I know, I'm sorry, you know I'm not always happy with Tom. If I had it my way, we wouldn't be in an open relationship, but we are. I guess...I just get lost in you, like the fantasy that we're together during the summer even though we're not.\"\n\nEvan almost went off on her when she said that but he understood all too well. Navigating sex and relationships on the lake could be particularly difficult for locals. The vacationers never cared as they were always about to leave. He definitely felt for Maggie, however unhealthy her fantasy was, sometimes people needed a good fantasy to keep them going. \n\n\"I get it, Maggs. I really do,\" he said as he brushed some of her red hair out of her face. \n\n\"I'll try to back off, okay?\" she told him.\n\n\"There is no try,\" he joked.\n\n\"I will back off, I promise. But, just out of curiosity, what's the deal with Jane?\" she tried to look cute and innocent so Evan would know she really didn't mean anything by it.\n\nEvan rolled his eyes even though he wasn't really upset. \"I've gone to school with Jane since 1st grade and we've barely ever talked until a week ago. She's desperate to make some money this summer so I invited her. And before you ask any more questions, I'm sure she's planning on fucking her own tourists and locals, she's not interested in me at all.\"\n\nMaggie reached out to grab his flaccid cock again, running her fingers up and down it. Evan smiled approvingly at her as she leaned forward testing to see if the conversation was finished. \n\nWith her lips wetly on his pole, she asked, \"Can I keep sucking it now?\"\n\n\"Please?\" Evan asked happily. \n\nMaggie giggled before grabbing his cock, aiming it back at her mouth, and sucking it in. He watched as she pulled him in, forcing her face down to push him deeper as she easily got him hard again. She actually liked giving Evan head as she was a fan of his cock. Soft, he was maybe four inches but hard it was somewhere around 7. When he got more excited, it also seemed to get twice as thick too.\n\nShe had to open her jaw a bit wider as his pleasure built up. Gripping him more firmly at the base she pulled back again to lick all around his head. He was at full strength so it wouldn't take much longer unless Maggie decided to draw it out. All Evan needed to do was place his hand on the back of her head and she pushed herself down on him. She had never been able to deep-throat him because of his fat dickhead but it always felt incredible in her pussy. \n\nGagging, she backed off to catch her breath. When she caught it, her eyes shimmered with lust before dropping her face back down on him. Evan couldn't hold back his moans of appreciation, thinking how that was the definition of head. He felt that familiar feeling while Maggie felt him thicken even more.\n\n\"I'm close,\" Evan huffed out.\n\nMaggie's bobbing increased speed with any part of his cock, not in her mouth being jerked off. Evan's eye's rolled into the back of his head getting ready to blow an 8-day load in her mouth.\n\n\"Now,\" he warned her. She went hands-free, sucking him as hard and fast as she could. Evan let out one loud moaning sigh as he started to cum. Maggie had to back off him a bit at every spurt, his cum filling her mouth so quickly that she had to open her lips around him to let it out. While Evan always wished she would swallow, there was something so sexy about watching it spill out of her mouth and drip down his shaft. \n\nMaggie kept at it for half a minute after he finished. Pulling off him, she grabbed her beer, took a swig and swished it around in her mouth. Then she spat the beer-cum mixture back in the bottle as Evan had seen her do many times before.\n\nJane walked back into her room from her shower, dropping her towel as soon as she closed her door. It was a tradition for her at home, if her bedroom door was locked, she was naked inside. The air felt a bit stale so she opened the window, stuck her torso out, and felt the lake air wash around her damp hair and nude form. Suddenly, she realized anyone outside could see her and she looked around in a panic. Luckily, that side of the house faced away from her new workplace, and the parking lot was far enough away you couldn't see anything anyway. \n\nDespite Mike's joke, she took the bedroom facing the garage as it was the furthest from the stairway, and easiest to access the bathroom. She definitely wanted to see the inside of Evan's apartment as it was sure to have a great view, being surrounded by windows. That's when she noticed Evan sitting on the couch with Maggie between his legs. She was about to give them their privacy when she noticed Maggie wasn't actually doing anything and they were instead arguing. Jane wondered if he was getting shit for inviting her up there with him until she started blowing him with fervor.\n\n\"Go, Evan,\" Jane cheered him on. She knew that was when she should walk away, but she didn't, staying until the very end. Afterward, she was so horny she knew she'd jump the first cute guy that looked at her that weekend. \n\n******\n\nAlmost two weeks later, Jane arrived back home for her second weekly checkup on her dad. He was healthy enough but she had been the mother of their house since she was 11. She found him at their family's garage, where she and her two youngest brothers had worked as well. Once her dad saw her, he walked right outside into the lot towards her. \n\nJane sped up getting ready to hug him, when he asked, \"What the hell are you doing back here?\" \n\nShe stopped dead in her tracks at that. \"I told you I was coming home once a week.\"\n\n\"And I told you it was a waste of gas,\" her dad said as he held out his arms anyway. \n\nThey hugged and made their way in towards his office. Sitting down at his desk, Jane's dad stared at her suspiciously.\n\n\"What?\" she asked, nervously that he knew about something she thought she got away with as a kid.\n\n\"Why wouldn't you want to stay up at a beautiful lake all summer long, working, getting a tan-\"\n\n\"I barely ever tan,\" she interrupted. \n\n\"My point is, you're a gorgeous young woman, and this is your last summer vacation. Yeah, you have a job, but you have a chance to have a hell of a time up there. Instead, you're coming back down on your days off. Do you really think I'm just going to drop dead? I'm not that old.\"\n\n\"I really am partly homesick. Mostly it's because I've always known one day Jessie would burn the house down. Maybe it hasn't happened because I was here? Adam's friends are worse than he is. And you're at the garage more than the house,\" she said gesturing to the cot in the corner of his office. \n\n\"You know, Adam may be a year older, but he looks to you for answers. Not only does he take after you in some ways but he picks up where you leave off, every time you're gone,\" he explained.\n\nJane had always gotten along better with Adam than any of her other brothers. Still, she was surprised that he had accepted her responsibilities in her absence. \n\n\"Alright, I'll try to chill out,\" Jane tried to appease him.\n\n\"Yes you will; lakeside. This is your last visit home. I'm officially kicking you outta the house until September.\" Jane gave her father a look of horror and he continued, \"Don't look at me like that, I still love you. I just want you to have a life outside of this garage. Can you do that?\"\n\n******\n\nJULY\n\n*******\n\nJune flew by as it always did. The fourth of July was complete madness for anyone that worked at the Lake House. While Mike had thrown his own party of sorts for the locals, it was a business tradition to make tourists feel like they were lucky to be in on a private event. While it was still a party for employees and their families, they were still working to an extent. Up at the lake, the 4th lasted practically a whole week; it was almost over.\n\nIt was the Friday the 6th and things were just barely starting to die down when a family of four sat in Jane's section. As soon as she greeted them, the son Todd ignored his family, openly flirting with her. Jane kept it professional in front of them but if he made a move without them around, she was going to let it happen. The last guy she had sex with was her ex; almost a month and a half ago. She wasn't familiar with the idea of casual sex in the traditional sense but it was going to happen sooner than later.",
        "When she returned with their orders she noticed Todd's sister, Rachel staring at something hungrily. Following her gaze, she wasn't surprised to see it was Evan that had her attention. She asked the table if they were good for the time being before heading straight over to him. \n\n\"Super cutie at one of my tables has been eyeing you,\" Jane told him.\n\nHe looked up from whatever he was writing at the bar and said, \"I noticed, that's not her boyfriend next to her?\"\n\n\"He better not be because he's been looking at me like I'm on the menu.\"\n\nEvan smiled, \"That bodes well for both of us then,\" he said.\n\n\"So, what's the move exactly?\" Jane asked, hoping he wouldn't tease her for needing help.\n\n\"Are you asking for me, or for you?\"\n\n\"Both I guess. I'm curious how you would go about it. Also, believe it or not, I'm not really a random encounter kinda gal,\" she explained.\n\n\"You know you don't have to. I mean, if you're not comfortable.\"\n\n\"I won't go into details, but yes, I have to,\" she hinted.\n\n\"Ah, I hear you. Well, there's really nothing to do unless their parents leave and they stay here. You get ID's on em'?\"\n\n\"Yeah they're both 24, I'm guessing twins? That would really cement our newfound friendship; bagging twins together,\" Jane half-joked.\n\nEvan chuckled, \"Then chances are good they'll stick around later than the rents. Then they'll both come to us, that's the move,\" he said.\n\nJane chanced a glance back at the table and Rachel looked away to not be caught. \"I can see the dude hitting on me but the sis looks so shy and innocent.\"\n\n\"An innocent girl on vacation?\" he suggested with a grin. \n\nJane looked back at him with a sly smile. \"Whoa, good point,\" she said. Evan gave her his own innocent shrug before heading off to do whatever. \n\n40 minutes passed and the table of four looked ready to go. Jane was about to head over to ask them if they wanted the check when Blair, one of the other waitress' yelled, \"Hands off, fuck-boy!\"\n\nBlair was a bit of a bitch in general but tips were a great motivator when it came to a sunnier disposition. If she resorted to her out of work persona that meant someone had just messed up. Evan and Mike were at Blair's side in a flash which only seemed to escalate the situation as the table full of young guys all stood to defend their drunk, groping friend. Voices raised fast and while only one had started the problem, the rest were just drunk enough to finish it. \n\nBen, who worked in the Kitchen, began his usual act when things threatened to get out of control. He came out to the group, screaming in Spanish, waving a cleaver over his head. Jane tried to play along and not giggle at the scene as she had seen it four times already since she started. It was always 100% effective as the troublemakers would leave peacefully, leaving a more generous tip as an apology. The situation played out as it always did after they left Ben would turn around and bow to everyone else in the restaurant.\n\nIn his true Boston accent, he said, \"Please everyone, enjoy yah drinks n' meals; nothin' ta see hea.\" It always drew a few laughs and a round of applause, bringing the fun atmosphere back. \n\nOnce things calmed Jane looked back at her table and saw it completely empty. \n\n\"Fuck!\" she said, knowing she had just been stiffed during the distraction. \n\n\"It's all good, I'm right here.\" She turned to see Todd who had introduced himself earlier. \n\n\"I hope with money?\" she asked.\n\nHe handed her two bills, a 100 and a 20. \"This is like a 50% tip?\" she commented, though she didn't hand it back.\n\n\"Yeah my dad wanted to get the hell outta here but he's always been a generous tipper,\" he explained. \n\n\"Wow, tell him I said thanks then.\"\n\n\"I will. I also stayed because I wanted to talk to you,\" he started.\n\n\"Oh yeah, Why's that? Oh, and did your sister stay too by any chance?\" she asked for Evan.\n\n\"No way, my dad's really protective of her. He took her home when the fight started. Why, you more interested in her?\"\n\n\"She's hot but no I was asking for a friend,\" Jane said.\n\nTodd made his move when he said, \"So what time do you get off?\"\n\nJane smirked, \"I've got like another hour and a half,\" she said.\n\n\"Would you be into hanging out after?\" he asked cockily. \n\n\"I guess you're just going to have to wait around and find out,\" she said, turning to walk away. \n\n\"I guess I will.\"\n\nJane got away earlier than close and met Todd outside. He followed her into the other lake house, straight up to her room. When the door was closed, Jane turned back around to see Todd undoing his pants. For a moment she thought it was happening way too fast but decided to be grateful instead that Todd skipped right to the point. She walked up to him, dropped to her knees, and took his cock right into her mouth when it was free.\n\nHe was maybe 8 inches long and thick enough that she knew she would at least feel him if he didn't know how to use it. She sucked him in as deep as she could, only to pull back and repeat the process. It didn't take him long at all to get hard but she teased him longer because her own excitement built fast. \n\nShe was surprised when barely a minute later he said, \"If you keep it up I'm gonna cum.\"\n\nShe stopped immediately as she didn't want that. Jane stood up, taking off all of her clothes in a flash. Sitting on the edge of the bed, she waited for him to pull off his shorts before he took hold of his cock and aimed it right for her pussy. Holding back her disappointment that he hadn't even considered going down on her, she lifted her legs open happy to be getting any at all. Todd moved slowly until the tip of his length was in place before he shoved it inside her quite uncomfortably. \n\nThere were about 20 seconds of agony until he started to feel good inside of her. All Todd did was hump into her and hold her by the thighs. His dick did all the work which she had suspected so she did what she could to use it like the dildo he was. She pushed her pelvis into his when he would push in and Jane was finally getting what she needed. They went on in the position for a few more minutes with Todd asking rhetorical questions like, \"You love this dick don't you?\"\n\nSuddenly he picked up speed and pulled out of her. Jane was about to move into another position when she noticed him fisting his length with his eyes closed. \n\n\"What are you doing?\" she asked, praying it wasn't what she thought. \n\n\"Cumming, what does it...oh fuck yeah,\" he said before shooting multiple ropes of cum from her waist to her breasts.\n\nJane stared incredulously on as he finished stroking himself off on her. Once he was finished, he turned around and sat on the edge of the bed to catch his breath. \n\n\"Can you grab that towel on the chair in front of you?\" she asked.\n\n\"Jeez gimme a minute will ya,\" he said still out of breath.\n\nJane shook her head, getting up to get It herself to wipe off his cum. While she wasn't horny anymore, being completely turned off by the whole encounter, she was pissed. \n\nJust to see what he'd say, she asked, \"So you can go again right?\"\n\nTodd huffed a few more times before he stood, pulling his pants back up. \"I'll be free tomorrow sometime,\" he said, not knowing he was making a mockery of himself. \n\n\"Nah, I don't think I'll have a minute to spare,\" she joked, still amazed at his ignorance.\n\nThat was until he put on his shoes and said, \"Your loss, I'm gonna take off. I know my wait out.\"\n\nJane's jaw dropped in shock. He was either ignorant, apathetic, or both. \"I should hope so you've only been here a couple minutes.\" \n\nJane listened and waited for him to leave the house before moving to her window to watch him walk through the empty lot. Without hesitation, she took off towards the shower to wash the failed experiment off. It was easily the most unsatisfying sexual situation she had ever been in. Wondering if she should even bother attempting again with anyone else, she settled on asking Maria what she thought. She finished her shower, drying off back in her room, and called Maria on speaker. \n\nShe didn't answer, reminding her that she was off with her boyfriend in Europe somewhere. Scanning through the rest of her contacts, she threw the phone on the bed, giving up. She stood up, walking over to her bureau to grab one of the joints she had packed. Retrieving it she saw a flickering light through her window from the corner of her eye. Evan's apartment was mostly dark and it was too early for him to be asleep; the light she had seen was coming from behind the garage. \n\nShe grabbed her phone, texting him, \"Is that fire you?\"\n\n\"It is, wanna join?\" he responded soon after. \n\n\"Sure, are you alone?\" Alone? Why did she ask him that? No, it was just to make sure she wouldn't interrupt his fun. \n\n\"Yup.\"\n\n\"Down in a min,\" she replied, throwing her phone back on the bed. \n\nShe sat there for a moment thinking about things. A case rapidly built for why it would be okay to fuck Evan just one time. She had to shake the thoughts out of her head until she had successfully cleared her mind. \n\n\"You will not fuck Evan. You need this job, and you need the money even more. Its still early July; there will be plenty of guys around. Evan is off limits,\" she said out loud to herself, trying to memorize it. She stood up and made it to her doorway before she realized, the first way to ensure she didn't have sex with him, was to put some clothes on her naked body.\n\nA few minutes later, Jane was walking around to the back of the garage. There was a small downed tree you had to duck under like a hidden entrance to a clubhouse, though the fire could easily be seen from behind. Passing through, she saw a pretty awesome little spot. Surrounded by bushes, trees, and the garage was a small patch of beach. There were two beach chairs already set out facing where Jane came from, with the fire between.\n\nEvan watched her dip down and when she popped back up she definitely seemed impressed while checking the spot out. He was impressed too but more with her body. For whatever reason, she wore one big almost see-through white shirt and boyshorts; clearly sans bra as he had to tear his eyes away from her nipples. Evan had seen various parts of her body over the years but never so much at once as that summer. Long legs, a great ass, firm stomach, and breasts he had always thought were on the smaller end but weren't; plus a feeling that made him feel like he was in over his head when he talked to her always made him nervously excited. \n\n\"Welcome to my secret spot. I have rum & beer what'll ya have?\" he welcomed her.\n\n\"Definitely rum, thanks,\" she said taking the seat next to him. She could see out across the lake from there and the sound of the water quickly relaxed her. \n\n\"So, how was it,\" he asked, handing her the glass.\n\n\"How fucked up are you?\"\n\nEvan smiled, \"I'm on my way,\" he said.\n\nJane giggled at him. \"Well we haven't been out of work long enough for me to have had an orgasm so what does that tell you?\"\n\n\"Ooh, shit, I'm sorry,\" the words came out but he still chuckled. \"Vacation hookups are still sex. You never know if it's going to be good or bad until you do it,\" he continued.\n\nHis comment made her wonder if that meant he was one of the talented ones; she pushed the thought out of her head before she could hear her friend's voices telling her he was. \"Yeah I guess but that was a total dud. Like he had a nice enough dick and everything but he just couldn't last. Then he had the nerve to completely ignore me like I had obviously enjoyed it...Fuck I just feel like a hole right now,\" she ranted. \n\nEvan pulled a joint from his pocket and offered it to her. She pulled out her own and they laughed. Jane lit hers to start. \n\nAfter exhaling her second hit, she passed it to Evan and said, \"Thanks, that's why I smoke. I get so stressed out sometimes about everything.\" Looking around again, she asked, \"So, is this your spot?\"\n\nEvan exhaled before saying, \"It's one of my favorites, and easiest to get to, but I have a bunch of spots all over the lake. In these 15 square feet, I have the highest chance of getting trashed.\"\n\nJane laughed but also realized she had always thought he had a stick up his ass; this Evan was extremely laid back. \"You know, this summer has already shattered the person I thought you were,\" she admitted. \n\n\"Judgmental bitch,\" Evan said, straight-faced.\n\nShe laughed despite his seriousness, he joined in soon after. \"Yeah, so what, I bet you think I'm someone else too,\" she teased.\n\n\"Maybe, how about we tell each other? It'll probably be hilarious,\" he dared.\n\nJane narrowed her eyes at him and said, \"You're on. I always thought you were a suck up at work and school. It always made people like me look bad, granted, back then I didn't care as much.\"\n\n\"First of all, I kicked ass at work because the old manager let me take 3 months off during the summer to come up here. As for school, I'm kind of a nerd.\"\n\nJane laughed, \"That's not necessarily a bad thing,\" she told him. \"I also never really saw you let loose like you do up here, like at all those parties we were at together, or at the same time.\"\n\nEvan considered her comment before responding, \"Well I love my friends back home...\"\n\n\"But?\" she pushed.\n\n\"But they're always the ones getting trashed and I'm not interested in doing that all weekend, every weekend you know? Besides, I'm too busy stopping them from killing themselves jumping off something or getting arrested for vandalism.\"\n\nJane sighed, \"Yeah, I feel the same about my brothers at my house or at my dad's garage. I'm like the mom around there,\" she revealed. It wasn't a huge secret, but she was often picky about who she invited to her house as only her closest friends knew the whole situation. \n\n\"Wait, what do you do at the garage?\" he asked. He knew about her dad's garage but had assumed she had nothing to do with it. \n\n\"Work the desk, order parts, and dumb it down for customers; occasionally I work on the cars if we're really swamped.\"\n\nEvan held up the rum, offering her more, she accepted. \"I always thought you were taking off because you had better things to do,\" he said.\n\nJane was pleased she had proved him wrong. \"Those were usually the things I had to do; that and trying to keep the family and the business from drowning.\"\n\nEvan held his glass up and after a moment their glasses clashed together a bit roughly. \"I'm really glad you told me all that because I like you so much more as a person now; swear it's not just the rum and bud.\"\n\nJane laughed. Looking back out at the lake, she remembered a question she had wanted to ask him since they got there. \"Evan, what is it about the lake that makes you seem so different?\" she asked, hoping he wasn't about to say he was going to turn into a pumpkin at the end of summer. She genuinely enjoyed his company. \n\nIt didn't take him long to answer, \"Everyone up here is like family. I've passed out right in this spot before. Instead of waking up, floating in the middle of the lake with dicks drawn on me, someone had thrown a blanket on me or they would bring me in. I'm not as sloppy as I make it sound either.\"\n\n\"No, you're not. I've seen you and not only are you a happy drunk but sometimes you can be just delightful to watch,\" she joked.\n\n\"Well, thanks. My point is, people up here have my back, no matter what. It's like my real home, not that I don't love my parents.\"\n\n\"Sounds like you're planning on moving up here someday.\" \n\nEvan firmly stated, \"I am, maybe in a couple years. I'm going to school for business management. After I'll get a job or jobs and once I have at least 10 K, I'm moving up here permanently and becoming a partner in the Lake House.\"\n\nJane really was impressed by his plan; he became more attractive to her then, so she looked away. \"You really have it all planned out. I'm seriously jealous. I always thought someday when I settled down it would be on a beach, a lake, or just anywhere near water really. I'm actually going to school to help the family business too.\"\n\n\"Really, what's your plan?\" he asked, equally impressed.\n\nJane became just the tiniest bit shy. She didn't really talk about how most of her plans for her life revolved around her dad and brothers. Evan happened to have the same things in common and it was also pretty easy to talk to him. \n\n\"I'm going to school for accounting so I can help out the garage. I've even taken some classes in marketing for ideas on how to expand the business so we can service more people and maybe hire some help. My dad, he sleeps at the garage a lot. I just want to get us to a place where he doesn't have to ever again,\" Jane revealed.\n\n\"That's really cool, Jane. I'm glad I know that about you too.\"\n\nJane smiled at him. \"So what's something else you used to think about me?\"\n\nHis mind wandered back to roughly seven years earlier. \"When we were 14, at freshmen orientation, I was super nervous. Yeah, everyone was, but I was like panicking looking around the gym for someone I knew. When I saw you, I didn't even think it was you at first. I think you got a lot taller or something. But I thought you were the most beautiful girl in the whole room.\"\n\nJane called him out, \"Okay now I know you're either drunk or fucking with me because I was such a little nothing back then.\"\n\n\"I guess not to me,\" he said, very matter of fact like. \n\nJane's expression turned serious, she shut up and let him continue. \n\n\"There were a bunch of other pretty girls in our school, yeah. But you never looked like you had to try as hard as they did,\" he admitted. \n\n\"What ended the crush?\" Jane asked, hooked.\n\n\"I realized I wasn't your type. By the end of the year, you were getting picked up by older guys all the time. I just dropped it.\"\n\n\"Yeah those were sadly mostly my brother's friends; it was a thing for a while.\" \n\nThey were quiet for a minute or so before Evan asked, \"It's not weird now is it?\"\n\n\"Which part?\" Jane joked.\n\n\"The crush part, you're not worried that I'm harboring feelings or some shit?\" he asked, feeling like he may have said too much. \n\nJane laughed yet again. \"Some shit? No not after that. I'm honestly flattered. I've been thinking more and more that maybe you and I weren't supposed to be friends until now. Like maybe we would've hated each other back then.\"\n\n\"Yeah maybe,\" Evan said, looking back towards the lake. \n\nA comfortable silence picked up after that. Every once in a while they'd joke about something or tell a story but it was just some regular old good times. They stayed out there together for another 40 minutes before retiring to their own rooms. \n\n*******\n\nThe next afternoon the craziness of the 4th appeared to be dying down, even though it was Saturday. Rachel, Todd's twin sister entered the Lake House by herself, heading straight for the bar. Scarlett was the bartender, after checking the girl's ID she was extremely welcoming to her. Jane noticed her on her way back to the kitchen. She was about to avoid her when she instead thought about Evan. \n\nRachel spotted her before she reached her and said, \"Oh good, I was looking for you.\"\n\nJane was confused, \"For me?\" she asked.\n\n\"Yeah, um, no offense but did you hang out with my brother last night, Todd.\"\n\nJane cringed a bit but managed a laugh. \"First of all, thanks for putting it that way. But yeah, I hung out with him, very briefly.\"\n\nRachel rolled her eyes and said, \"I'm really sorry. He has a reputation with the girls back home for being a 'No-hit Non-Wonder'. That's his actual nickname too. I just thought I should come by and apologize.\"\n\n\"Wow, you really didn't have to do that, but thank you. He was just another in a long line of disappointing hangouts,\" Jane said, both girls laughed. Rachel took a sip of her drink as if she were trying to draw it out. \"There anything else I can help you with, anything at all?\" she pried.",
        "Rachel blushed and said, \"Well, the bartender from last night, the one that tried to break up the fight? The young one...\"\n\nJane knew where she was going. \"That's Evan want me to go get him for you?\"\n\nA few minutes later, after Jane had dug through Rachel's shyness, she knocked on Mike's office door. \n\n\"Come in,\" Mike hollered.\n\nJane walked in, stood up straight, pretending to be a soldier she said to Mike, \"I have urgent news concerning Evan's virginity.\" Mike broke down in laughter while Evan shook his head at Jane for the good burn. \n\nWhen Mike calmed down again, Jane explained to Evan, \"That twin, Rachel is at the bar asking for you.\"\n\n\"Oh? Sweet, I was a little disappointed she didn't stick around last night. Do you know when she's leaving?\"\n\n\"Tomorrow afternoon sometime,\" Jane informed him. \n\n\"Well, unless she wants to hang out later tonight, or tomorrow morning before she leaves, I can't,\" Evan said ready to move onto the next order of business. \n\nThat's when Jane saw the old Evan coming back. She wanted to kick that version of him in the balls. Fortunately, Mike did it for her, verbally.\n\n\"Evan, you're fired,\" Mike told him in absolute seriousness. \n\nEvan looked at his uncle like he was crazy. \"Excuse me?\"\n\n\"You're fired until tomorrow afternoon. You go and show that girl a good time; you might even have one too.\"\n\nEvan protested, \"I can't leave. It's the Saturday after the 4th and every Saturday in July is-\"\n\n\"Not your problem until tomorrow at 2,\" Mike confirmed.\n\nEvan stared at him, looking back to Jane as if she would actually take his side. Finally, he gave up when he said, \"Fine, but I'm taking the boat.\" He grabbed the keys off the hook in the office and left. \n\nJane was a little bothered still by what she saw. Luckily she was comfortable enough with her boss to ask, \"Mike, just now Evan acted like the Evan that I used to know. Like, rest of the year Evan, I guess. What's that about?\"\n\nMike took a look at Jane to evaluate her intentions before he responded, \"He feels responsible for everything sometimes. It's not his fault either just he's so used to picking up other's slack everywhere else. Sometimes he slips back into it. But you and I, we just stopped it, got him to have some fun. That's all he needs. \n\nJane nodded, considering what it would be like to deal with him back home. \n\nEvan took Rachel out in the boat on a vague tour of the lake. Their first stop was a tire swing by a bridge near the lake entrance to all the renter's cabins and houses. Evan was happy to see that once Rachel took her clothes off, she was much less shy. She had dark brown hair, freckles, and once you got to know her, a bubbly personality that was more excited about her future than annoying to others. Probably somewhere around 5'6-7, she managed a curvy, yet athletic figure; accentuated by a skimpy orange bikini. \n\nRachel was already having more fun with Evan on her forced family vacation than at any other point. She wished early on that she had met him sooner, or she was staying longer. She was a fun and sweet girl, Evan considered if they had met back home, she would be the type he'd ask out and take seriously. Having years of practice, he reminded himself that she was leaving the next day, but that didn't mean he wasn't going to show her the best time he could.\n\nThey moved to a deeper spot on the lake, where they could anchor and swim. Rachel felt like she was in some dirty teenage romance novel around Evan. She hoped it was the kind where he turned into a beast at night. Their flirting became more aggressive until she moved things along by climbing back onto the boat as sexily as possible sticking her ass out to him. Instinct made Evan follow the sway of her hips. \n\nOnce he climbed on board, Rachel was sitting there waiting for him. She drew him to her with her finger and when he was close, she grabbed the waistband of his bathing suit to pull him over to the seat next to her. Evan's ass had barely touched the cushion before Rachel's tongue was in his mouth. She made her intentions known when she grabbed his hand and pushed it roughly into her tit. Though her aggression was new he still didn't expect her to grab his cock through the suit.\n\nBacking away, he said, \"I really like where this is going but we probably shouldn't do it here. Too many boats going by, you know?\"\n\n\"Yeah, I figured. I just wanted to show you where I hope this ends up. I've had such a great time with you already,\" she explained.\n\n\"Well, I'm glad to know it,\" he said, giving her a quick kiss. \"When do you need to get back to your family?\"\n\n\"Not until tomorrow before we leave. Not that we have to hang out until then...\" she began to get shy.\n\nEvan heard what she said as well as what she wanted to say. \"Alright, here's what I'm thinking. We head back to my apartment to shower-\"\n\n\"Together?\" she asked slyly.\n\n\"Sounds good to me,\" he said, smiling. \"After the shower, we can head to the restaurant and grab dinner, on me. Then we can hang out for a bit, have a few drinks, and later head back to my place for the rest of the night?\"\n\nRachel kissed Evan before she said, \"That sounds like a fantastic plan.\" She seemed to be thinking something over until she continued, \"I'm not sure if I should ask you to tone it down a bit. Not that you've done anything wrong, more like everything right. I might expect a lot more from the boys back home after the way you treat me.\"\n\nEvan was very flattered and said, \"Maybe you should.\"\n\nThe temporary couple headed back to Evan's place to shower. There were roughly 10 minutes of cleaning with another 20 of groping. Rachel insisted on lazily stroking his slippery length the whole time, making dirty comments about how much more excited she was for that night because of it. Evan moved his hand to her pussy to tease her back, the moment he touched her clit she let go of him telling him she wanted to cum. A few minutes later she came harder than either of them expected, her screaming deafened him from bouncing off the walls in the small space. \n\nNext, they went back to the House for dinner. Evan found it pretty strange, being a customer on a busy Saturday night. From that perspective, ideas poured into his head. He would have to convince Mike to do the same sometime to see what he came up with. There were a few times during the night where it had become particularly busy and he had to resist the urge to help out.\n\nThe interaction between Rachel and Evan appeared not to faze anyone except Jane. If anything she was curious how this could seem like a really good first date, all leading to her leaving the next day. What would happen one day when the girl wanted to stay?\n\nAfter midnight, Rachel was ready for Evan; more than ready in fact. She was practically on top of him as if contemplating fucking him right there in the booth. The girl really knew how to tease him, slowly grazing the outline of his cock through his shorts keeping him hard. She brought him up to his tipping point; he needed to be inside her.\n\n\"Wanna get outta here?\" he asked her as she nibbled on his earlobe.\n\n\"Very much,\" she said lustily. \n\nThey both speed-walked across the lot to Evan's pathetically unable to stop touching each other along the way. Rachel stripped off her shirt on the way up the stairs, removing her shorts once inside the apartment. Back in her orange bikini, she watched Evan kick off his shoes and rip off his shirt. She undid her top, revealing her delicious globes to him again. She stepped up, undoing his shorts for him.\n\n\"I want you to know, I've never given a blowjob to a guy that wasn't my boyfriend,\" she admitted, pulling down his shorts. \n\n\"You don't have to,\" he said as a formality. \n\n\"Evan,\" she pulled down his boxers, kneeling down with them, his cock popped up in front of her face. \"I really want to suck your cock. I want to make you feel good, the way you've made me feel all day.\n\nWithout any more hesitation, she wrapped her lips around his meat, massaging the tip with her tongue. Evan sighed, placing his hand gently on the back of her head encouragingly. Rachel came out of her shell, drooling on his shaft, sporadically deep-throating as much of him as she could with her hands on his thighs. The sloppy sounds of her sucking were music to his ears along with her moaning more than he was; she really did want to suck his cock, he realized. Neither had noticed nor cared that the door to the apartment was still wide open while she fellated him a few feet away. \n\nAfter however long, Evan was as hard and wet as he could be. She gave him one final lick before standing.\n\n\"I want you to fuck me like I've never been fucked,\" she urged him, untying her bikini bottoms and dropping them to the floor.\n\n\"I'll do everything in my power,\" he assured her.\n\nThey kissed as Evan directed her with his hands on her hips towards the couch. When they stopped, Rachel turned around, climbing over the couch into the doggy position. She smiled mischievously back, bobbing her ass at him in case he needed more convincing. Evan wasted no time dropping to his knees, devouring her little peach like a starved man.\n\n\"Oh fuck, I was so hoping you'd do that, mmm,\" she purred.\n\nEvan felt the same as her, wanting to make her feel as good as he could. He would never see her again after the next day, but he derived a strange pleasure at giving a girl a hopefully memorable experience. Evan could not hold back a prideful grin at how she screamed when he sucked on her clit for the first time. She pushed back into his face, hinting for him to tongue fuck her; he did. Rachel giggled and squealed whenever his tongue traveled up, circling her ass, another thing she wouldn't have let anyone else do. \n\n\"Please, fuck me, Evan. I need you,\" she begged him.\n\nSilently, he stood and aimed his pole at her opening. \n\nMomentarily she wondered if he would even fit inside her but she shook the thought deciding that she'd make it fit. She didn't need to tell him to go easy, knowing she was in very good hands. He eased the tip against her until it popped in causing Rachel to take in a deep breath. Freezing, he waited for the go-ahead to venture deeper. When she nodded, he pushed all but one inch of his length into her opening in one long, slow stroke.\n\n\"Fuuuuck...I've never felt so full,\" Rachel said happily.\n\n\"You're so tight,\" he commented, gently easing in and out. \n\n\"You're not exactly average size, you know,\" she teased him. Evan grinned at her compliment. \n\nAfter a couple minutes of getting used to him, she commanded, \"Faster.\" Evan complied, gripping her backside and finally starting to fuck her like she wanted. A continuous string of obscenities flew out of her mouth as Evan tried to hold in his laughter at the fact that she hadn't said so much as 'damn' or 'hell' the entire day. The way she backed into his groin, trying to give as good as she got, rallied him on. At the sight of her creamy pussy making a mess on his cock, he knew the first round wouldn't last much longer for him.\n\nAcross the yard, Jane stepped into her bedroom after the long Saturday shift. Pulling her work shirt and bra off was the highest priority. She opened the window facing the garage to feel the breeze against her bare chest, her new tradition, only to be treated to a view of Evan pounding away at Rachel bent over the couch. Only the shades facing the restaurant and parking lot were usually closed; Jane wondered if Mike's warning of bedroom choice was due to Evan's apparent exhibitionism. She rationalized that playing with herself while watching two hot people fuck was just so much better than porn, so she pulled her panties off. \n\nLeaving on the short black skirt she bought just for work, she kicked off her sneakers and relocated the chair in her room to face out the window. Thankful that Evan faced away from her, she imagined it was just another sexy stranger as she ran her fingers between her lips. Masturbation had become a routine for her on the lake. She played before breakfast, after work at night, and sometimes even snuck off in the afternoon to cum anywhere she could get the privacy. The real live porn couldn't have come at a better time as Jane was already soaked. \n\nRachel was super cute and she had admired Evan's ass on a few occasions; never before that summer of course. The two of them together was just so needy and raw that it would be stupid to waste such a show. \n\nEvan was fucking her as hard as he could and he needed to know what to do. \"Where do you want me to cum?\" he asked.\n\n\"Anywhere but...Inside me,\" she huffed out, ready for a third and much bigger orgasm of her own. \n\nEvan could feel the way she tensed up, gripping him tighter somehow. He picked up the pace, the tiny bit he had left, desperately trying to make her cum so he could too. She had stopped swearing only grunting or moaning then, completely lost in pleasure. Evan adjusted his angle in some way that caused the fat head of his dick to continuously bump into the most perfect spot inside her. Rachel felt as if she exploded into a thousand pieces as her orgasm rippled through her entire body.\n\n\"Fuck, fuck, FUCK!\" she screamed as her fingers dug into the back of the couch. She resisted collapsing like she desperately needed to stay in position for him to finish. \n\nHe didn't make her wait, pulling out, he said, \"Yes!\" blasting his cum all over her asshole and mound. It was a surprising feeling but definitely not an unpleasant one for her. She felt so naughty feeling him drip down her thighs, hoping he wasn't finished with her for the night. When Evan finished sharing his load with her, he ran to get a towel and clean her off. Once she was spotless, she rolled over onto the couch, feigning exhaustion. \n\nHe smiled down at her, catching his own breath. \"You can sleep here tonight if you want. I want you to I mean,\" he told her. \n\nShe opened her eyes and asked, \"I would love to spend the night, as long as you want me.\"\n\n\"I want you, Rachel. If you're up for it, two more times tonight and again in the morning?\" he teased.\n\n\"Mhm, I'm game. We'd better get started,\" she played along. Evan picked her up off the couch causing her to giggle. On the way to his bedroom, she admitted, \"I'm never going to forget this day Evan. I want you to know that,\" she said with a small amount of love in her eyes.\n\n\"That's exactly what I was going for,\" he said before kissing her and throwing her onto his bed. \n\nJane had had a small orgasm just from watching them both cum. It didn't stop her from being highly irritated that they were taking it to another room that she couldn't see into. Instead of ruining the mood, she closed her eyes to replay everything she had seen. Slipping her fingers inside, she drew circles around her clit with her other hand, getting right back into it. \n\nAt first, her reimagining had her joining in with them. Rachel ate her out while she watched Evan barrel into her from behind. She was grinding her pussy against Rachel's face, pulling her head into her mound by her hair. She added a third finger to her wetness and as if some switch had been hit, Rachel disappeared and it was Evan fucking her. She could even hear the sounds of him slapping into her.\n\n\"Oh Evan,\" she groaned out loud.\n\nHer thoughts were a mess after that. \"No, not Evan, you're just friends. You don't want him that way. You don't...I don't...Fuck, I don't fucking care,\" she thought.\n\n\"Yes, fucking Evan, fucking fuck me,\" she squealed, at the onset of her own strong orgasm. Her fingers moved in a flash and she pressed directly on her clit to push herself even farther. The spasms folded her up in the chair with her knees near her head and her toes curled on the edge of the seat. As she came down, her knees would jerk back towards her chest occasionally, causing her to smile at the intensity of it all. Finally, she sat back in the chair like a lump, looking out at the star-filled sky.\n\nShe decided thinking about Evan fucking her in no way broke any rules. It was just the fact that he was off limits that turned her on so badly, that's why she did it. Yes, she was attracted to him, but no good would come from doing anything more than fantasizing. \n\n*******\n\nThe following Tuesday Jane finally caved in. She needed to have sex, comfortable, familiar sex; with someone, she knew longer than a week. No more failed attempts to hook up with strangers. The time for pride was over, it would never happen again after anyway. At 2 O'clock in the afternoon, she texted Chad, to come up to the lake. \n\n\"We are never getting back together. I cannot forgive you for what you did to me & I will not. One time only offer tonight, you come to Newfound Lake in NH, sneak up to my room & fuck me...For the very last time. You tell no one or I will tell my brothers what you did.\"\n\nShe didn't want anyone to know how low she was about to sink, regretting the text immediately. He had texted her less as summer went on, which was exactly what she wanted by ignoring them all. Still, she wondered if he wasn't going to post it online behind her back. He would make an even bigger fool of her than he already had. \n\n\"Anything, I miss you, babe,\" he responded.\n\nJane rolled her eyes and started her response angrily a few times before deciding on, \"Last fucking time. And look up the directions to the lake before you respond so you know what you're in for.\"\n\nIt took him longer to get back to her so naturally; she assumed it was due to the stupidity. He bitched about the 4-hour drive back and forth but ultimately said some things about her having the perfect pussy, which swayed his opinion in the end. She gave him the address restaurant with explicit instructions to text her when he arrived and GPS the drive so he'd get there no earlier than 1:00 in the morning.\n\nJane sat in her bed, waiting for her ex to show while listing to music and smoking in her room. The feeling of the breeze from the water coming through her open window was hypnotic. After a while she had almost convinced herself the wind was speaking to her, she was that high. \n\n\"Don't fucking move!\" the wind said. \n\nJane giggled for a few seconds before her eyes shot open. She went to her window and saw who she assumed was Mike, holding a shotgun on who she assumed was Chad. \n\n\"Mike I know him, I'll be right down,\" she yelled out the window. Jane Rushed downstairs to the front door, where Lisa watched through the window. Lisa tried to warn her of the intruder situation but Jane said; \"He's my ex.\" Opening the door, she continued, \"Moment of weakness.\" \n\nLisa joked to herself, \"This week on Lakeside!\" before following to watch the events unfold. \n\nMike still held the shotgun on Chad, so Jane repeated, \"Mike, he's my ex. I invited him here.\"\n\nHe lowered the shotgun. For whatever reason, Chad kept his hands up. Without looking away from him, Mike asked, \"You're allowed to have visitors. He didn't have to sneak in.\"\n\nThat is when Evan joined the scene to which Jane rolled her eyes. To Mike, she explained, \"I was embarrassed to be hooking up with a shitty ex. Put your fucking hands down,\" Jane directed towards the intruder. \n\nMike chuckled, \"Fair warning, I'm pretty sure he pissed himself when he saw the gun.\"\n\nJane glanced at his crotch and the light that Lisa had turned on illuminated his pathetic predicament. She shook her head and asked him, \"Are you serious?\"\n\n\"What the fuck else am I supposed to do when someone pulls a gun on me,\" Chad defended.\n\nJane laughed, \"Not piss yourself,\" she taunted. Shaking her head, she continued, \"It was a mistake to ask you to come. You should go.\" Lisa stood beside her for silent support. Evan looked on, impressed. \n\nChad was not happy with that. \"I drove three hours up here. I'm coming in,\" he threatened. Mike raised the shotgun back up to him, causing him to revert back to his small self. ",
        "Jane smiled, fully realizing she was, in fact, a part of the family up there. \"Look, it was a mistake to tell you to come. I was so horny it affected my common sense and my self-respect.\" Glancing back down to his crotch she added, \"More to the point, when your vagina wet itself, mine dried up.\"\n\nMike, Evan, and Lisa all cracked up on impact while Jane took in the feeling of telling the prick off. \n\n\"You're a fucking bitch!\" Chad proclaimed. That time, Mike cocked the shotgun. Chad finally ran away. \n\nThe four of them laughed together as a team. When it died down, Jane apologized, \"I'm sorry about that.\"\n\n\"No need, that was thoroughly entertaining,\" Mike said.\n\n\"I think we've all been there,\" Lisa assured her. \n\nMike and Lisa retired back into the house while Evan waited for their privacy as Jane appeared to need to tell him something. When the coast was clear she said, \"You were the main person I was trying to hide that goon from.\"\n\nEvan was surprised, \"Why? I don't care who you...You know,\" he shyly said. \n\n\"I know I just didn't want to hear how dumb I was being because I was fully aware of it.\"\n\n\"Jane, I'm really not that judgmental. You guys haven't been broken up that long so I get the need for something familiar. Personally, I hope you would never date the goon again after what he did to you. But it is what it is.\"\n\nJane was so satisfied with her new best friend that she rushed over to hug him. He squeezed her, picking her a few inches off the ground to show his love. She sighed, squeezing him back. \n\n\"I'm definitely keeping you around when we go back home,\" she promised him. \n\nEvan smiled, hoping she meant that. \"I'm glad to hear it,\" he said, squeezing her again. \n\nJane choked back a moan, without thinking she leaned up and kissed him sensually on his collarbone. She was about to do it again to his neck when she jumped away. \n\n\"Fuck, I really need to get to bed,\" she tried to play off what she had done. \n\n\"Yeah, I hear you. Goodnight Jane,\" Evan said, turning to go back to the garage. \n\nJane watched him take a few steps before heading back inside too. \n\n\"Oh, and sometimes all I need to get things back into perspective is...You know, rub one out, get the poison out,\" Evan offered a bit awkwardly. \n\nJane smiled at him giving her masturbation advice. \"Thanks, I'll keep that in mind,\" she said. Every night she was alone that summer she had been doing something of the sort to please herself. Whatever she was experiencing was an entirely new condition that had yet to be diagnosed. \n\n*******\n\nJane was learning her way around the bar, finally, when a big football player type walked into the Lake House on Wednesday afternoon. He scanned the room, settling on approaching Jane. \n\n\"Excuse me, is Maggie around?\" he asked.\n\n\"Yeah, I saw her somewhere earlier,\" Jane told him, thinking nothing of it. \n\n\"Which tables are hers? Or, what section?\"\n\nJane confusedly said, \"She doesn't work here, or at least she hasn't this summer. As far as I know, she's just a regular.\"\n\nIt was the guy's turn to be confused. Jane looked around, spotting Karen, one of Maggie's friends. \"That's one of her friends over in the booth in the corner. She's probably over there,\" Jane pointed out to him.\n\nTom, Maggie's boyfriend, made his way over to the booth. \n\n\"Maggie...Maggie...Maggie,\" Karen tried to warn her. \n\nArriving, Tom looked across the table to see Maggie's red head mashed up against some guy, obviously making out. To make matters worse, from his angle looking down on them he could see his cock was out with Maggie's spit-lubed hand pumping it. \n\n\"Maggie!\" he screamed in what almost sounded like horror.\n\nShe whipped around, recognizing the voice. Her expression was certainly horrified as he had never come to find her there before. Attempting to hide the cock, in case he hadn't already seen it, she cupped her hand over it, pushing it down. Horrific, was exactly how Maggie would forever think of that day; the way she gripped the other guy's end caused him to cum right there in her hand out of fear. The guy made girly sounds, letting out his orgasm as Maggie tried to hide her hand still under the table.\n\n\"You gotta be fucking kidding me. Did he really just cum?\" Tom asked.\n\n\"Tom, I...\" Maggie was in shock.\n\nTom turned to leave followed quickly by Maggie pulling on his arm to stop him. He pulled away from her, \"Don't fucking touch me with another guys cum on your fucking hands you psycho slut.\" He looked around to the twenty or so people in the Lake House. \"It all makes sense now. The reason behind you always bitching, and accusing me of cheating; you're the cheater so you dumped your guilt on me. What a piece of shit,\" he snarled at Maggie.\n\nThe ejaculator disappeared during the commotion. Tom only waited to see what Maggie would say, when she didn't say anything, he walked out. Maggie stood there stunned, tears streaming down her face as she watched her life collapse under all of her lies. A few people began clapping to shame her further. \n\n\"Enough!\" Evan yelled at them in an uncharacteristic move. The place went quiet. He stepped up to Maggie and she refused to look him in the eyes. He took his time to gather what he was going to say; the first few things that came to mind were possibly a bit too harsh. \n\n\"So you were never in an open relationship, huh?\" he asked as calmly as he could. She didn't respond so he continued, \"Get out.\"\n\n\"What, for how long?\" Maggie asked, panicking.\n\n\"I don't care. I don't want to see you for a while,\" Evan growled.\n\nMaggie retained as much of her dignity as possible after everything by holding the rest of her tears until she left. Most started to clap and cheer for Evan but he shut it down once again. \n\n\"Cut it out,\" he snapped, turning to walk back to the office.\n\nJane got the feeling not many had ever seen Evan that angry. She decided Maggie got off a little too easy, following her outside to the parking lot. Jane got her attention by calling out her name. Maggie stopped but didn't turn around. \n\n\"You're a real piece of work you know that?\" she said, realizing that she was treating Evan like he was one of her brothers in the same situation.\n\nMaggie turned around, whimpering with tears running down her neck. \"Can you please not right now. This is already the worst day of my life and yes I know it's all my fault. Just please, some other day you can say whatever you want; please not today,\" she begged.\n\n\"Okay,\" Jane said, backing off. She actually had some sympathy for the girl. Maggie turned to walk away but Jane spoke up again, \"I know you're feeling really shitty right now but you can use it to change things. You can be different; make your own second chance.\"\n\nMaggie looked back at her, nodding in understanding. She felt Jane had possibly gone through something similar. Jane watched her walk away, realizing that was her years ago.\n\nLater that night after close, Evan sat in his beach spot, trying to forget what had happened that day. Having the next day off, he decided to work on a hangover for the morning. He felt for Tom, Maggie's very exclusive boyfriend, but she used and lied to him as well.\n\nJust when he was about to go to that negative place, he got a text. His phone was face down on the table beside him so he couldn't immediately see who it was. There was a sick feeling in his stomach that it was Maggie, or worse, Tom because he knew about them. Not knowing was always worse than knowing so he grabbed it, being highly relieved.\n\n\"Want some company?\" Jane had texted.\n\n\"I wouldn't be too fun to hang out with tonight,\" he texted back.\n\n\"I doubt that,\" Jane said from right in front of him, startling Evan.\n\n\"Fuck, don't do that,\" he began to protest until he noticed her. \n\nJane held up a 6-pack of his favorite beer as a gift so she could stay; it was the last thing he noticed. She wore a tight brown vest that covered less than a sports bra with only two lazy buttons holding it together between her breasts. Below that was a pair of skimpy short jeans that he hadn't seen before. Even her dirty blond hair looked different somehow, maybe curlier? The fire reflected off her long legs all the way down to her bare feet. \n\n\"Evan, are you checking me out?\" she asked, happily. \n\nHe glanced up to find her expression was as flirty as her tone. \"How could I not? Are you going somewhere?\" he asked, still looking her up and down. \n\n\"I am, here, that is if I'm welcome,\" she asked, holding up the beer. \n\n\"Please,\" he said, gesturing to the chair next to him. \n\nShe placed the beer on the sand between his feet before she turned, moving the other beach chair closer to Evan's. She sat down slow enough that he noticed the bottom of her butt spilled out of the shorts and the dimples on her lower back he always loved to see. She smiled as if thanking him for his reaction. They shared a few beers, talking about anything and everything but that day. Both had the next day off, so there was no limit to the night. \n\n\"Hey, can I get some rum,\" she asked, diverting from beer. Evan grabbed the bottle, filling 1/4 of the small glass, and handed it to her. She downed it and offered her glass back to him to fill it again. He did with the same amount and she downed it again, this time giving him back the glass. \n\n\"You're either about to go skinny dipping, or you have something you want to say,\" Evan commented. \n\nJane giggled, saying, \"Dare me to skinny dip? I love being naked when I'm sober so that's nothing.\"\n\n\"I'd settle for seeing you naked, you don't have to go in the water,\" he replied, waiting to gauge her reaction.\n\n\"Are you flirting with me?\" Jane asked, thinking it odd he would choose that night specifically to start.\n\n\"I am, but only because this is the first time you've acted flirty with me. So what's the deal?\" he asked like a friend would.\n\nJane flushed, asking, \"Am I really being that obvious?\"\n\n\"Not really, just noticeable, that's all,\" he eased her into it. If she wanted to fool around, he was ready for it.\n\nJane looked at him sheepishly. \"We get along well enough I've been thinking we could...Have pity sex this one time.\"\n\n\"Wow pity sex...That's such a turn-off,\" he stated, a little offended. \n\nJane panicked at him taking it the wrong way. \"No, no I meant you could pity me. Fuck, I'm making this so awkward. Look, what Maggie did was fucked up, and she deserves a swift kick in the cunt for what she did to you and other guys. But I don't pity you for that; I only wish it hadn't happened to you.\" She gathered her courage before she continued, \"I meant you could take pity on me for not being properly laid in longer than I care to admit.\"\n\nEvan realized he had gotten a bit defensive after the earlier revelation about Maggie. Deciding to recognize Jane's vulnerability with him, he switched tactics and said, \"Oh, yeah. If that's what you mean, I'll pity the fuck out of you...Fool.\"\n\nJane laughed to his relief. \"So you can do this just once right?\" she asked.\n\n\"Just once, as in this one night?\" he asked\n\n\"Yeah, I...We both have tomorrow off so, that's what I was thinking.\"\n\nEvan could tell she had put some thought into it. \"Yeah, one night only, I can do that. Honestly, I've been having some thoughts about you, you know, impure ones,\" he joked, winking at her. \"I've been thinking maybe a night with you would get it outta my system,\" he explained. \n\n\"Yes, that's it for me too. We're definitely on the same page,\" she said excitedly. \n\nEvan grinned, looking down he collapsed the armrests on both of their chairs between them, turning them into one larger chair. Jane was clearly impressed. \n\n\"Oh, that's cool and smooth,\" she declared, sliding over closer to him. \n\nHe put his arm around her bare waist, feeling a jolt of excitement at what was about to happen, but mainly about who it was. \"Anything I should know before we begin?\" he asked.\n\n\"My safe word is 'Banana Slug',\" she teased, staying in the moment. Jane also felt nervous about being with him. She could never tell Maria that she did what she swore she wouldn't.\n\n\"I love that show,\" he said before leaning in slowly and kissing her. \n\nJane responded right away, kissing him back sensually. How many girls had he kissed on the lake over all those years, she wondered. Placing her hand on his chest, she finally admitted to herself how firm of a body he had. Their tongues massaged one another's as she slipped her hand up his shirt to feel his skin. Moaning into his mouth at the contact, Evan pulled away from the kiss to remove his shirt. \n\nJane blatantly checked him out, biting her lip. She brought her eyes back up to his to watch his reaction as she undid the two flimsy buttons holding her tiny vest together. It opened in the middle but not all the way, being held in place by her hard nipples. Evan wanted to see them, opening the vest the rest of the way he grazed the pink nubs with his thumbs. Jane sighed at the lovely touch. \n\nMoving things along, she slipped the vest off. Evan was on her in no time at all, sucking a nipple into his mouth, pinching the other lightly with his fingers. Jane started to giggle but it quickly turned into a groan at the attention he was giving her breasts. She ran her hand through his hair, urging him on. He kissed up towards her neck while he groped her.\n\n\"I was totally going to kill you if you tried to skip foreplay,\" she admitted huskily.\n\n\"No way, that's half the fun,\" he said, kissing her flushed lips again.\n\nJane slipped her hand right up Evan's loose shorts, finding his hardening cock right away. Teasing the head with her fingertips caused it to twitch; Evan sighed, Jane giggled. Whatever Jane was doing was making him hypersensitive. The way her fingers wrapped around his shaft, gently tugging on it, only to glide to another spot and do the same. Feeling wetness on the tip of his cock, she spread it all around his head with only a finger.\n\n\"Whatever the hell you're doing feels amazing,\" he told her with his eyes closed.\n\nJane was glad she already had such an effect on him. \"I'm just playing with it, teasing you, that's all,\" she said. \n\nLooking down, she noticed it looked just as hot as it felt. His end stuck out of the bottom of his shorts with the strong outline of the rest of the log of flesh clearly visible through the fabric. She briefly contemplated teasing him for his skimpy shorts but the easy access was a big turn on for her. All she had to do was lift the leg hole up to his waist and it was revealed to her.\n\n\"Well, well, congrats Evan,\" she complimented him. \n\nEvan rolled his eyes. \"C'mon, it's not like a porn cock,\" he said. While he loved his penis, he very oddly got embarrassed and modest whenever a girl said something about it.\n\n\"Haven't you seen any Casting Couch porn? Most of those guys are below average, I guess so they don't scare the girls off. Yours is slightly above, but not too much because that's actually a thing for some girls. But this,\" she wrapped her finger and thumb firmly around him. \"You're pretty thick, and I'm looking forward to that the most. Honestly, I kinda want to see how much it weighs,\" she half-joked.\n\n\"Hey I'm just happy you're happy,\" he said, trying to divert her analytical side.\n\n\"Oops, I'm talking too much,\" she realized, moving her head down to his lap. \n\nShe brushed her hair to the opposite side so she could watch his reaction and he could watch her. Laying her head on his thighs, her mouth was only an inch or so away from the trunk of his dick. Her tongue snaked out to have a lick, Evan's mouth opened but nothing came out. Inching closer, she sucked sloppily on the underside of his shaft, finally getting a groan out of him. Licking his length a few more times, she teased the tip before backing off again. \n\n\"You're gonna return the favor, right?\" she asked him lustily. \n\n\"Looking forward to it,\" he said which was very true.\n\nJane's green eyes sparkled before she opened her mouth wide, taking in the first few inches. Evan groaned louder when she tightened her lips around him and started to suck. Her fingers lightly stroked the rest of his length as she went down on him lovingly. She went slow, deliberately licking his shaft in the most pleasurable ways. He was solid faster than expected; she wondered if she wasn't better at giving head than she thought.\n\n\"You can last right?\" she asked, pausing on him. \n\n\"I can last as long as you want, go again, whatever,\" he begged her. He was the 14-year-old version of him self's hero from that point on. \n\nShe crawled topless onto the sand between his legs which was something he never thought he'd be lucky enough to see. Resuming her stroking, she waited for eye contact, holding him in her gaze as she continued to feed on him. The way Jane stared him down with his cock in her mouth had him hypnotized. He swore he felt himself get harder at the thought that she fucked like she sucked; graceful, sexy, erotic, etc. When she finished making his cock as hard and wet with her saliva as it could be she deep-throated him.\n\n\"Uh, uuhauuh,\" he groaned, making the same exact noise the following 5 times she did it again after.\n\nHis dickhead bumping the back of her throat turned her on even more. Needing more, she pulled back to catch her breath. Evan was mesmerized by a long strand of spit still connecting her lips to his dick. The scene only got hotter when Jane gathered as much of it as she could, relocating it to his shaft and fisting him to spread it around. She grinned at his shocked expression.\n\nStanding up, she undid the button and zipper on her shorts, inching them down in a quick striptease. She kicked them off onto the chair and posed for him to take her in. Never forgetting Evan's admission of his crush on her added a spark of excitement that she was giving him something he had wanted for years. The look on his face told her she wasn't far off in her assumption. But when Evan looked at her below the waist, he shook his head as if something was funny.\n\n\"Seriously, what if I giggled when I saw your dick?\" she asked, not entirely mad.\n\n\"No, no I love it, it's just something else. Your nickname, the hippie, I always wondered just what that meant. I remember the first time I saw under your arms I was totally surprised there wasn't any hair. I guess I always thought...\" he tried to explain, getting shy at the end.\n\n\"You thought I had a giant 70's bush, didn't you? Are you disappointed that I shave?\" she asked, giddily. \n\nEvan chuckled, \"That's precisely what I thought, and no, not at all. Get over here,\" he gestured to his mouth.\n\nJane's eye's twinkled with excitement. Kicking hers out of the way; she walked up to his face with her legs on either side of his chair. Evan barely waited for her to get her balance before he leaned forward, licking at her wetness. Jane sighed, grabbing the back of his head encouragingly. She could tell he got off on pleasing her like she had him. \n\nThe situation got tenser after that when Evan fucked his fingers up into her as his tongue lapped at her clit. Grinding against his face, she experienced a small orgasm before she stepped back from him. She stood there a few moments, coming to life again. Back from wherever she went, she looked down to her target before squatting on top of him. With her knees beside his waist, she aimed his pole at her entrance while Evan waited patiently. \n\nHis head popped in and she circled her ass in the air, bringing him along with her. He loved the way she was enjoying every little step of their secret encounter. Done playing, she straightened out and proceeded to slide down his flesh an inch or two at a time. They both moaned during the process until Jane was seated in his lap with him buried deep inside. He waited for her to get used to him, gently caressing her sides for support.\n\nEventually, she began rocking back and forth. Evan gently pushed himself up into her when she would come forward, much to her satisfaction. Once she was used to him, she shot him a quick smile before leaning in and kissing him. His hands were all over, feeling her body move with the fluidity of a belly dancer but 100 times better. Jane absolutely fucked liked she sucked.",
        "Every move she made was intentional and pleasurable for both; Evan had never been fucked with such purpose and need before. He only got to tease her nipples for a little while before she ended the kiss, leaning back. Evan grunted at the way her pussy threatened to pull his cock right off. Jane froze, watching his reaction as she squeezed him more with her walls.\n\n\"Fuck, that feels and looks so good,\" he huffed out, wishing he was recording the scene. \n\n\"Fuck yeah it does,\" she agreed, squeezing again.\n\nWhen she was finished showing off she shifted her legs in front so she could stand while squatting on him. He never left her as she held on with her sheath. Wrapping her hands gently around his neck, she started to fuck him again. Evan had been officially benched as she rode him, using his member to please herself. Jane moaned louder, longer, and more often; already glad they were continuing into the night. \n\n\"Fuck, oh fuck Evan. Fuck me, I love your cock,\" she moaned out before a high pitched shriek shot out of her mouth. \n\nEvan almost reminded her that sound carried over water but he was enjoying her so much he dropped it. In the following 20 seconds, Jane leaned forward onto her knees again, giggled for a few, and then suddenly began riding him with purpose. Bracing herself on his chest, she furiously undulated on him. Evan jumped back into the game, bucking into her to the delightful sounds of smacking flesh. One hand held her by the hip while the other played with her nipples, allowing her movements to work for him. \n\n\"You can...go again...right?\" she huffed.\n\n\"Yeah, where-\"\n\n\"In me...It's fine,\" she said.\n\n\"You sure,\" he asked, praying she was.\n\n\"Uh huh,\" she uttered, half smiling. \n\nTo her surprise, Evan began fucking her from the bottom. He grabbed her by the hips, holding her still while he pounded away. Letting him take over, she pinched and pulled on her nipples, purring and moaning frequently. Without warning, Evan forced her down, bottoming out inside of her. \"Fuck!\" she screamed louder than anything before as her most intense orgasm in a very long time ripped through her. \n\nEvan let out one long continuous groan as he unloaded deep inside of her at the same time. His orgasm only increased the power of hers as she swore, screamed, and squealed on top of him. Jane rocked slowly as they both came down before collapsing on top of him. Evan wrapped his arms around her on impact. When Jane felt her energy beginning to come back, she sat up, lifting up off of him. She sat back down with her pussy against him and his cum dripping out onto his balls. \n\n\"That definitely hit my fucking spot,\" she assured him.\n\n\"Mine too, at least one I didn't know I had,\" he said.\n\nLooking down, she started rubbing her wetness against his barely softened member. \"You still wanna go again, right?\" she asked.\n\n\"If I only get one night with you I'm going to make it count,\" he promised, leaning in to kiss her.\n\nEvan put out the fire with sand and mud while Jane gathered her clothes. During the summer, the moon was in the perfect position at night to light up Evan's spot. Ensuring the fire wouldn't light back up again, he watched Jane's nude body move about in the moonlight. \n\nShe was about to put her vest back on when he yelled a bit too loudly, \"Don't!\"\n\nJane froze with one arm in her vest as Evan cracked up, remembering he was a little high, and a bit tipsy, along with living out a small fantasy. Jane joined him, knowing what he was going through as she was feeling all three herself. \n\nWhen he calmed down he suggested, \"Let's streak back to my place.\"\n\nJane considered it, clearly open to the idea. \"Would anyone see us?\"\n\n\"I doubt it. Besides isn't that the point?\" he convinced her. \n\nJane pretended to think it over, looking around to make sure she had all of her stuff. When she was prepared she yelled, \"Last one there is on the bottom!\" sprinting towards, the tree, ducking and disappearing.\n\n\"Shit!\" he said, bolting after her.\n\nEvan caught up to her near the door to the stairs. He slapped her cute naked butt as a distraction, Jane whipped around, but he jumped in the opposite direction. Coming up from behind, he lifted her up in his arms, spinning her around. When he put her back down, he faced her, shoving his tongue directly into her open mouth. Jane was lost in his playfulness, and unprepared for when he pulled away, opened the door and ran up the stairs.\n\n\"Unfair!\" she yelled, louder than she meant to. Realizing she was still naked, with his cum dripping down her legs, she ran after him. \n\nWhen she arrived in second place, he said, \"Sorry, I really wanted to be on top this time.\"\n\n*******\n\nTwo days after the newfound friends had had sex, multiple times, they managed to keep things the same. Every now and then, one would look at the other conspiratorially, as if they had gotten away with something. For the most part, they had become even closer, as friends. Evan figured that things were at the stage that they could even hang out at night without any expectations. He invited her over to his apartment after work to watch a movie and wind down.\n\nJane joked about it being a Netflix & chill scenario to which he said he had HBO so there would be no pressure. She almost didn't catch his retort, when she was finished laughing, she gladly accepted the invite. The two parted, as two friends that weren't up to anything would, but it was still noticed by many pairs of eyes in the double digits inside the Lake House. Mostly, it was Lisa that was catching on to the subtle changes in their relationship. Not that she had an opinion about it; she was only curious whether they saw what was happening. \n\nAfter they had both showered, Jane knocked on his door. Evan answered, wearing cargo shorts and a tank top. She had her hair in a ponytail, wearing extremely boyshorts and a slightly larger tank top. Her outfit looked liked it had shrunk in the wash so naturally he couldn't take his eyes off her. \n\n\"Um, Hi,\" she said, hiding her amusement.\n\n\"Hey, you look really cute,\" he remarked, still checking her out. \n\n\"Down boy, these are just my sleep clothes. I wanted to be comfortable for our movie night,\" she lied as she always slept in the nude.\n\nJane took a seat at the end of his couch, curling up immediately. She had felt like a little girl staying up late to watch a horror movie with her dad or brothers. It was a testament to how comfortable she felt around Evan and she used it to think of him like a brother, so she wouldn't be tempted to treat him any other way. Evan turned off the lights and joined her on the opposite end of the couch. She glanced at him, realizing that he was trying to keep things PG, silently praising him for it. \n\nDespite that, she said, \"Why are you sitting all the way over there? Come sit next to me. It's not like we're going to accidentally have sex.\"\n\nEvan shot her a look like that was exactly what was going to happen. He saw her feet buried inside the couch cushions. \"Ah ha, I know what you're up to. You just want me close so you can shove your cold feet up my ass,\" he accused.\n\nJane tried so hard not to smile and she succeeded for a few seconds before breaking down. \"Are you going to move or not,\" she said, looking back to the TV, trying to hide her reddening face. \n\nThere was something about Jane that whenever he thought he had the upper hand, she would take it back with some small comment or movement. She constantly challenged him, which he could not deny he liked the most about her. Silently he slid over to the middle seat, she immediately shoved her bare feet under his thigh, staring at him like, \"Yeah, that's right, I did it.\"\n\nIgnoring her gloating, he asked, \"What are you in the mood for?\"\n\n\"Um, not sure yet. Check out what's on the movie channels first.\"\n\nHe opened the guide and soon after seeing it, Jane demanded, \"Ooo, Wild Things! I love that movie. I haven't seen it in years.\"\n\nEvan looked at her like she was crazy. \"You can't be serious?\" he said, pleading her with his eyes. \n\n\"Do you not like that movie?\" she asked, completely missing the point.\n\n\"No, I like it. It's an old favorite of mine.\" One he had jerked off to a multitude of times. He gave up, restarting the movie.\n\nAs soon as the theme music began, Jane realized her mistake. That movie had made her wicked horny when she was younger and it must've had an even stronger effect on Evan when he was too. She rationalized that they were both adults and friends could watch a semi-dirty movie together. It turned out to be all in their heads, as they got more into the movie they both began joking about different parts, having seen it so many times. They were so familiar with it they both became eerily quiet as the FFM threesome scene loomed ever nearer.\n\nMatt Dillon arrived back at his hotel room, Jane looked right over to Evan. Seeing the move out of the corner of his eye, he looked over at her. Her expression was blank, but she opened her legs, bringing her left foot up to the top of his thigh. It was Evan's move, he brought his hand up to her calf touching her skin lightly. In response, she moved her foot further into his lap; his hand instinctively moved up past her knee to her thigh. \n\nJane turned her head back to watch the hottest part of the movie as Evan slid his hand right up to the edge of her mound. Her shorts were so small he could see half of her slit already and since she hadn't stopped him yet, he pushed his fingers into her slit. Jane sighed, opening her legs more for him and searching out his cock with her foot. Evan Finger fucked her as Jane made him hard with her foot up his shorts, fondling it with her toes. The scene was over, and both stopped to look at the other. \n\n\"One, last time, and that's it,\" Jane managed to say before Evan tackled her. Jane giggled whenever she wasn't busy kissing him until he had managed his way inside of her. It was no longer a laughing matter as Evan fucked her right there on his couch. They didn't leave it for the next 57 minutes, with 5 position changes. Jane fell asleep on top of Evan for about 2 hours before she woke up, covered him with a blanket, and snuck back over to her room. \n\nLate the next morning, Jane came down to breakfast as usual. Evan was still waking up, using coffee to speed the process. Jane smiled at him sexily, barely hiding what they did. Evan grinned at her, focusing back on his plate. Breakfast went on as normal until Mike and Lisa announced they were off to a market, leaving Evan and Jane alone.\n\n\"Hey Evan, after breakfast, can you come take a look at my laptop in my room? It won't turn on for some reason.\" Jane asked casually, finishing her meal.\n\n\"I don't know that much about laptops but yeah, I can check it out. Can't you bring it down here?\" he asked, obliviously.\n\n\"Nope, I can't because it's super heavy,\" she said, nudging his knee with her foot under the table to get his full attention. Once she had eye contact, she said, \"Do you want to come up to my room with me, help me TURN ON my LAPtop, that I didn't even bring up here to the lake?\"\n\nHe stared at her a few more seconds, as he had not woken up that long ago. The light bulb went off, Evan popped up from the dining room table, jogging towards the stairs. \n\nJane laughed at his willingness to have fun, rushing after him. \"Hey, you know you kinda need me to do this too, right? Wait up,\" she called after. \n\n*******\n\nThe next day, Jane caught Evan at Mike's right before their shifts started. \"Hey, can we chill tonight. If you're free of course,\" she asked.\n\n\"Yeah sure, you have anything in mind?\" he asked, hoping it would be a continuation of what they 'hadn't' been doing. \n\n\"Yeah, actually, I thought we should go over our rules again,\" she said sure of herself. \n\n\"Okay,\" he said, thinking it over. \"By go over the rules do you mean, we can keep having sex, or we have to stop,\" he whispered since Mike and Lisa were in their bedroom nearby. \n\nJane decided to give him a preview of her decision. She looked past him to make sure Mike's bedroom door was closed before leaning up on her toes to sensually kiss him on the neck. \n\n\"I definitely\"...kiss...\"Don't want\"...lick...\"To stop.\" She finished by sucking on his neck for a couple more seconds. \n\nWhen she stepped back from him, he was stunned by how she looked completely unfazed by the way she had easily seduced him. \n\n\"Let's meet back at the bar after close. I have the keys, we can have a drink while we discuss stuff,\" he informed her. \n\n\"Sounds great,\" she confirmed excitedly.\n\nLater on, Jane walked into the House to find Evan already sitting at the bar, as it was the only light on. He turned to see her in a small black tank top and her short black skirt from work. She ran her hand through her hair, pushing it back out of her face like she often did. Jane gave him a look that dripped with so much sex he wondered how the fuck any guy could cheat on her. She walked right past him, around to the other side of the bar, picking out a bottle of Jameson she placed it on the bar in front of him.\n\nEvan took the liberty of filling a glass with the choice for her. When she neared him, coming back around the bar, he swiveled in his stool to hand off her drink. She took a sip from it, not wincing at all, and stepped between his legs to put the glass back on the bar behind him. Evan instinctively put his hands on her bare sides which seemed to be the right move as Jane moved in to kiss him with passion. She ended the kiss without a word, gracefully escaping his embrace to climb up and sit on the bar in one fluid motion. \n\nShe crossed her legs, pleased he stared at them. \"So, I think I'm finally ready to adopt your whole 'summer hookup mentality' thing. I know we work together and that was my biggest problem before. But, we've gotten really close this summer and I definitely want to keep our friendship afterward,\" she began. \n\n\"But you turn into a pumpkin that I can't have sex with when we go back home,\" he finished for her. \n\n\"Pumpkin doesn't sound very flattering but yeah, pretty much,\" she confirmed. She appeared just the tiniest bit nervous he would say no, when she continued, \"Can you handle that, like, shutting it off the end of summer?\"\n\nEvan closed his eyes as to not be swayed by the sight of her when he thought it out. On one hand, her pussy was like magic to him; he omitted the thought as it was only distracting from the point. Of course, he wanted to continue fucking all summer and he wanted, even more, to be friends with her after he knew her better. It wouldn't have to ever be awkward as he had become friends with quite a few girls he had sex with in the past. Besides, the chances that they'd have sex again, 'just one more time' after they returned were pretty good.\n\n\"Yeah, I'm in,\" he told her.\n\nHe reached for her thigh, pulling on it so she would uncross her legs. She did and he lifted it up over his head, resting her ankle on his shoulder. He noticed she wasn't wearing panties during the move and the look on her face told him she was pleased with herself. He reached for her sides, sliding her over in front of him. She opened her legs in front of his face, more than satisfied with the way he was treating her. \n\n\"So is this hooking up exclusive between us?\" he asked, grazing his fingers along her thighs.\n\n\"You can still do whatever you want with whomever you want,\" she told him. His hands ventured further, under her skirt; she allowed him to seduce her. \"I'm good with you, comfortable I mean, so I don't see any need to look anywhere else,\" she continued.\n\nFinally, he pressed his fingers against her slit, Jane let out of a soft moan. \"Did you forget your panties, or did you just assume I was going to say yes?\" he asked.\n\nHer eyes were closed and she was smiling at the way he teased. \"Maybe I just decided I wouldn't wear underwear around you anymore,\" she tried to give it to him back. It earned her his finger circling her clit. \"Aha, mm, I feel like you're rewarding me for right answers,\" she guessed. She felt her open for his fingers, a welcomed intrusion. \n\n\"I really wouldn't feel good about going after other girls when I have an extremely sexy and horny friend like you next door,\" he admitted.\n\n\"I was kinda hoping you'd say that. I promise I'll keep you busy,\" she said, inching her butt to the edge of the bar, simultaneously sucking his fingers deeper in. \n\nEvan grinned wide up at her before he lifted her skirt and dove down onto her clit.\n\n\"Oh fuck,\" she stated loudly, echoing across the empty restaurant. \n\nHer feet were pressed into his shoulders with her left hand braced back against the bar. Her right hand pulled him by the hair, mashing his face against her mound as she rode it. His fingers pumped in and out while he constantly searched out her clit with her bouncing around on him. After a few minutes, Jane quit moving around, letting him focus directly on her. That was it as she came right there on the bar which only made it hotter. \n\n\"I need you to fuck me now,\" she said with a mixture of positive emotions. \n\nMaking sure she had her balance, he stood up and picked her up again by the sides, seating her on the same stool. Evan ripped off all of his clothes right there in front of her before easing his manhood inside, needing her just as badly. She held him straight as he pushed in, soon enough they were fucking right there with abandon. There Evan went again, coming to her horny rescue. If anyone thought it was corny when Evan thought Jane's pussy was magic, she thought his dick was the cure.\n\nJane leaned her back against the bar, holding onto the stool, as Evan held her thighs open. He very shockingly burst forth, bottoming out inside of her. Leaving his pole buried inside her, Jane had what she later thought was a \"Momentary out-of-body experience.\" Returning, Jane's reaction was to practically climb onto him, wrapping her limbs around. Evan went with it, holding her by her bottom, he proceeded to fuck up into her as hard as he could. \n\nHe only lasted a few minutes in that position as it sapped his strength quickly. Kicking a chair out, he pulled out of her, setting her down on it. Jane had hair stuck to her face after the animal fuck which only gave her an idea. Without standing, because she wasn't sure she could yet, she slipped her skirt off. Her shins would hate her for it the next day but still, she flipped around to kneel on the wooden chair, presenting her ass to him. \n\nStill, without words, Evan pressed back into her. \"Mhm yeah, fill me,\" she purred at the return of him stretching her cunt again. Quickly, they got into a steady, pleasurable rhythm. Before long she looked back and said, \"Fuck me as hard as you can, I can't take much more.\"\n\nHe obliged her, as he would probably pass the fuck out after he came. And what a champ he was as he pounded into her right there in the middle of the Lake House; the sounds of his groin slapping her ass echoing throughout the emptiness. Jane basically had a string of orgasms, one after the other. She felt him thicken more before he tried to warn her.\n\n\"Jay...uh, cum,\" he babbled.\n\nShe figured it out, pulling him out of her and flipping over to sit down. She dropped onto his knob with her mouth wide open like a predator. He would've pulled back if the result hadn't been so pleasurable. Holding her hands behind her back, she furiously bobbed on him; Jane hoped he wouldn't ask how she knew he liked that. He started to throb in her mouth so she gripped him like he was a fire hose about to turn on.\n\n\"Ah, uh, fuck,\" he rambled.\n\nThe best thing he could've seen at that moment was Jane working him feverishly, staring up at him begging for his seed with her eyes. He gave it to her, filling her mouth on sight. Her eyes watered a little but no matter how much he squirted, she swallowed it, never looking away from him. ",
        "When he was finished, she let him out with a plop to catch her breath. She looked back up to him, opening her mouth to say something, but looked down instead. He was about to ask her what when she took him back into her mouth, sucking softly. The way she did it was so loving that it didn't even feel too sensitive. His legs gave out before she was finished. \n\n\"Jane, I need to sit down so bad,\" he begged her. \n\nShe dropped him from her mouth, laughing so he could. They both sat there smiling goofily at each other for a few minutes longer. Soon after they retired back to Evan's bed, passing out together. \n\n*******\n\nThey were both lost in the easiness between them as all that seemed to set them off was bumping into each other in a room alone. Jane's newest mantra became 'I will not catch feelings for Evan' as she took on the perspective of the summer fling that he had taught her. Right away, Lisa and Mike saw Jane sneaking over to Evan's apartment, or Evan pretending he hadn't woken up in Jane's room. They were obvious, and too into each other to realize that things were heating up quickly.\n\n*******\n\nAUGUST\n\n********\n\nWith one month of Jane's last summer vacation left, she made one final rule change on Evan. They were already fucking like rabbits wherever and whenever they could, still, Jane was missing something. She wanted him to treat her the way he treated Rachel; like a summer girlfriend. When she gave him fake permission to not pass down any other hookups, they both should've have noticed the warning signs. On Evan's end, he was not thinking about any other girls and on Jane's side, if he hadn't told her exactly that, she would've been pissed. \n\nWhen Jane continued to change the depths of their relationship, Evan couldn't help but think it was developing into something more. Neither would mention the end, only focusing on the moments they had together. He didn't allow himself to fantasize about when they went back home, not at all. Not even when a few days after they arrived home, Jane would change the rules yet again, meaning they would be together. \n\nOn the flip side, Jane gave no thought to any time after the summer. What-ifs popped into her head and she forced them out. Evan got off on making girls feel good on vacation and he was very talented in that area. Jane deserved to be treated right and if Evan was willing to offer his services, why shouldn't she accept them. She liked him so much she knew she could never take advantage of him; especially when she was giving him what he wanted right back. \n\nOne by one, he took her to every secret local spot he knew of around the lake and beyond. They always managed some sort of sex act in every spot, no matter how public, or during the day it was. Jane was the first to suggest they were christening his spots, giving him, even more, hope that it meant they would come back together next summer. Employees and regulars openly teased them about their 'friendship', half the time their reaction to it was to sneak off and fuck again, obviously. Mike was one of the few that could tell what Evan was thinking, he was more concerned with the handful of protective women working for him that would tear Jane apart if she diverted from where she acted like it was going. \n\n********\n\nOn Thursday, August 30th, Evan was running out of time. He knocked on Mike's office door, waiting for permission to enter. He got it, walking in and closing the door behind him. Evan looked at Mike as if he knew why he was there.\n\n\"Hi, can I help you?\" Mike asked, waving a hand around to snap him out of it. \n\n\"I saw Jane was off until tomorrow. I wanted to take her somewhere so; can I have tonight off?\" Evan asked, hoping there was no need for questions. \n\nMike eyed him curiously, intentionally longer as to make his nephew nervous. \"You know, everyone that matters has noticed you both making 'fuck me' eyes at each other at work. And I'm not sure how many times Lisa or I have seen one of you sneaking to the other's room,\" he cut through the shit. \n\n\"Did we break the rule?\" Evan asked, knowing they hadn't.\n\n\"No, that rule was to stop you from bringing a girlfriend up here to work who would snap on you 2 weeks later because some girl in a bikini checked you out. The rule was specifically to prevent drama from forming. But you and Jane don't seem to be having any problems, yet,\" he said ominously. \n\nEvan rolled his eyes, \"Gee, what's that supposed to mean,\" he asked sarcastically.\n\n\"Evan, you like this girl. I know it, a few others do too. Some of those same people, including myself, think that from the way Jane acts around you she may feel the same. I'm just asking what's up.\" Mike asked, only looking out for him.\n\nEvan considered the question briefly. Seeing no reason to lie, he said, \"I do like her, a lot. You know we barely knew each other at first but now that I know her, I don't want to not know her. I don't think she does either. She's already changed the rules three times, why wouldn't it continue back home. For fuck's sake, I could walk 10 minutes to her house for a booty call.\"\n\nMike laughed, \"I'm sure you could but you're still avoiding a very important local rule,\" he reminded him.\n\n\"I know, 'anyone can change with the seasons'. So in case Jane turns back into the bitch I used to think she was, can I borrow the boat overnight and have tonight off?\"\n\nAn hour and a half later, Evan and Jane were in Mike's boat on the way to the surprise location. All Jane knew was they were camping somewhere overnight and it was definitely a big deal to Evan. \n\n\"Hey, check out that little island,\" Evan pointed out to her. She hopped over to the front of the boat in her sexy little tie-dyed, hemp bikini she had bought at one of the local stores. \n\n\"Can we go explore it real quick, or are we on a timeline?\" she asked, almost childishly. \n\nLooking back, Jane saw that satisfied grin she had come to love, realizing the island was their destination. She jumped on him, shoving her tongue in his mouth, extremely happy with the surprise. He drove the boat over to a small clearing on the island after prying her off. They tied the boat off to some trees to make sure they wouldn't be stranded. Jane followed as they carried their gear to a spot he had already picked out. \n\nThe island was the best surprise Jane had ever had. Completely deserted, they had it all to themselves. She questioned whether or not it was legal, to which Evan replied that he had personally called the Sheriff to make him aware that he'd be there, impressing her further. They set up camp, collected firewood for the fire pit already there, finally proceeding to have a quickie in the tent. \n\nAfter they worked up an appetite, Evan prepared their dinner; steaks, mashed potatoes, and green beans. Jane knew he pulled out all of his cards for her. Possibly the best part of that night was the way Evan acted like it wouldn't be the last time they had such a romantic night together. She could see his eyes knew the truth, so she didn't push it. \n\nIt was dark by the time they were full. The clearing they were camped in gave a nice little view of the sky if you blocked out the fire well enough. A large blanket was laid over the ground and a downed tree, Evan sat on the log with Jane on the ground next to him. Love for classic rock was another thing they shared, playing low enough so they could hear each other talk. They drank, they smoked, and they shot the shit; times like those were exactly what neither of them wanted to lose. \n\n\"I think I'm there,\" Jane announced with a goofy smile. \n\n\"Me too,\" Evan agreed with a similar look. \n\nThey were referencing that point after a few beers, and enough smoke, where you comfortably felt awesome. They also agreed that it made them both very horny. Evan ran his fingers through her hair, knowing she was like a cat in heat when he did it. She showed her appreciation by leaning her head on his thigh while giving him a calf/ leg massage. Jane enjoyed the attention he gave so much she slipped her hand into her shorts.\n\nShe began lightly moaning, Evan watched stunned by the turn of events. \"Did you forget I was here?\" he joked.\n\n\"Nope, you're the reason why. I think it means I'm really comfortable with you. Take off your shorts,\" she demanded huskily. \n\nEvan stood right up and pulled his shorts down, placing them over the blanket covered log to hopefully make it softer. Sitting back down, Jane leaned her head back against his thigh while she pulled her own shorts down to her thighs. When she knew Evan could watch she hooked her other arm under his leg, grabbing his flaccid member. Jane proceeded to tease her slit with one hand while simultaneously tugging him with the other. It was amazingly hot to watch as his head kept darting back to her fingers disappearing inside of her and his cock being teased to hardness. \n\nLeaning her head back to look up at him, she said, \"Fuck, this is so hot.\"\n\nEvan smiled down at her, \"You should see it from where I'm sitting,\" he replied.\n\nJane shot him a mischievous grin and said, \"No worries, I'm on my way up there.\"\n\nWith that, she pulled her shorts completely off before awkwardly climbing under his leg to get between them. Evan chuckled at her playfulness until he felt her tongue licking his balls, turning it into a sigh. She sucked them in, rolling them around in her mouth causing him to groan out. When she was finished with his sac, she locked eyes with him as she dragged her tongue from base to tip. At the top, she spat on his rod before wrapping her lips around it, inching her way down.\n\nAfter a month and a half, both of them continued to work harder to please the other. Jane admitted Evan was getting her best head game because he had earned it. There on the log was no different, slobbering down his member, looking up to him as often as she could. Before long she was attempting to swallow him whole as she had been determined to do since they started. She had gotten much closer to fitting him in her throat but would easily need a few more weeks practice; to him, it was more evidence that they would continue.\n\nEvan's thoughts of the future were disrupted by gagging sounds and the feeling of her stuffing her mouth on him. The back of her throat squeezed his tip, causing him to groan out. Opening his eyes, he instinctively reached forward, leaning over her to play with her pussy and return the favor. He pressed a finger against her asshole eliciting a moan around his shaft. Moving on, he found her already very wet from her own teasing and her pleasing him.\n\nPushing his fingers in conflicted Jane on whether or not to back into them or forward, taking the cock deeper in her throat. She decided on both soon leading to ecstasy. The combined sensations brought on a small orgasm that could barely be noticed. Evan removed his fingers, knowing she would be ready for more. She took her time, slowing down her suction while keeping as much spit as she could on it.\n\n\"Mm, that's so fucking hot,\" she commented on his slobber coated length proudly.\n\nJane turned around, grabbing his base so she could point it at her entrance. Evan loved that position whoever was sitting on his dick, but Jane brought something special to every position in his opinion. One thing she always did at the beginning of sex was with just the tip inside she would bounce on it lightly as if her pussy was sucking on it. Really everything she did drove him wild and he would always get impatient like then. He grabbed her by the hips and tried to fuck her.\n\nSlapping his hands away, she said, \"You can do whatever you want when you're on top.\"\n\n\"Okay,\" he said like a sad little boy, making her giggle.\n\nIt also made her want the same, three slow up and downs later she was seated fully in his lap. She thought even if they did continue having sex after summer, she would still revel in the full feeling he gave her every time. Another insignificant thing he did that she was becoming addicted to was the way he gently ran his fingertips anywhere on her body he could reach when things slowed down. Finding her balance, she placed her hands on his knees and began a slow rise and fall onto his length. \n\n\"I know I say this every time but watching your pussy swallow me is so fucking hot,\" Evan declared.\n\n\"Ever since I saw that...uh, video you took iee...Ha, don't blame you for saying...it.\"\n\nJane adjusted her footing, gripped his knees tighter, and increased her speed. Evan used all the muscles in his back to stop them from tipping when she would lose it towards the end of the ride. Jane bounced on him like a dribbling basketball, mesmerizing him while making him feel divine. When she looked like she was tiring, Evan grabbed her tight ass, taking over. It was a move he tried to keep sporadic, so it would have the desired effect of sending her over the edge. \n\n\"Fuck!\" she screamed in sweet agony at him randomly bottoming out.\n\nShe sat still on him for a minute to catch her breath. Lifting herself off of him, she stood back up slowly, straightening her legs and stretching. Once she was loose, she turned and jumped right back on him. Luckily, he was becoming used to her jumping him so they were able to coordinate it so nothing would be crushed. \n\nWith her legs on the other side of the log and her hands around his neck, she lifted up. \"Evan, I'm so empty,\" she said with a lusty smile.\n\nEvan positioned his cock at her entrance and the moment she felt him, she sank slowly right down to the base. They sighed in unison as he pulled her closer to him. Moving together lazily in no rush, she kissed all over his face just because she felt like it. Jane needed to be distracted from it all ending and sex was one of the best distractions. She also needed to savor the feel of him, so she could remember everything when it was gone. \n\n\"What are you thinking?\" Evan asked, seeing that glimmer in her eye. \n\nShe kissed him on the nose and said, \"I'm thinking I want you to wear me out tonight. The island is amazing and this was such a great idea. But, there still isn't that much to do, so why not just keep fucking all night? Stay naked under the stars, like our own personal reality show. We can call in 'Naked and Horny.'\"\n\nThey continued in that position for a little while longer before Evan put out the dim fire for safety reasons. Neither bothered dressing as Jane instructed Evan to bring his rum. She grabbed the big blanket and they made their way over to the beach they had come across earlier. Across the lake were a bunch of houses still lit up with people awake inside. Jane got a tremendous thrill, having been told by Evan that sound carried over water a few times by then. \n\nLaying the blanket down, Jane kneeled on it, urging him to join her. \n\nHolding up the bottle of rum, she asked, \"If I poured this on me, would you lick it off like Wild Things? Or would that be a waste of good rum?\"\n\n\"Jane I will always say yes to licking anything off you,\" he said honestly.\n\nJane giggled, removed the cap, and took a swig. Sitting up, she leaned back sticking her breasts out trying to recreate the scene. With one last dirty smile, she dripped the rum from her mouth down to her mound conservatively. Without hesitation, Evan dropped down to suck on her clit, causing a high pitched squeal from her. After the quick tease, he licked and sucked the rum off her belly, taking his time on the way up. \n\nWhen he arrived at her tits, she splashed some more on her chest like bait. He took it, lunging up to lick all around her supple mounds, more interested in them than the alcohol. Both loving that scene in the movie, they had subconsciously wanted to try that someday for kicks. It turned out to be much more erotic than either suspected. To Jane's delight, Evan lost it, sucking and biting on her nipples as if they were the source of rum. \n\n\"Fuck, we should've does this months ago, huh?\" she joked, loving the attention.\n\n\"Mm,\" he mumbled as he attacked her other nipple. \n\nHe focused on her breasts a short while longer before licking up her neck to her mouth. Sharing the rum he collected from her body, they kissed sloppily. \n\nEvan smacked her ass and commanded, \"Turn around.\"\n\nJane did as she was told, getting in the doggy position and shaking her ass at him playfully. He impaled her quickly, needing to be in her. She had intended to scream louder than necessary to show the people across the water what a good time she was having. It wasn't necessary as the way Evan savagely penetrated her made her wail, turning on more lights across the water. Momentarily, he worried that someone might call the cops thinking she was being murdered.\n\nAfter only 10 more minutes, he warned her, \"I'm so close.\" \n\nIn a flash, Jane whipped around, taking him in her mouth. With her fingers wrapped around the base, she dutifully sucked him off, begging for his cum with her eyes. She knew exactly how to play him, and he loved it. Closer and closer he came until he noticed her hand furiously rubbing her clit. He filled her mouth for the second time since they arrived on the island and she swallowed every last drop yet again.\n\nRetiring back to the tent they took a short rest since the night wasn't yet over. They couldn't keep their hands off each other, however, heating them back up quickly. It turned into a naked, dry-humping, make out session. In unfamiliar territory, their every movement was uncharacteristically slow and even more sensual than usual. She tugged on his newest erection, conveying her readiness for him. \n\nEvan moved between her legs, kissing her until he was in position.\n\n\"Evan...\" she started. \n\nHe looked up to see a few expressions battling for control of her face. Need, want, fear, and excitement somehow said it all. Leaning in, he kissed her gently, signaling he knew what to do. While her mouth was kept busy, she felt him enter her slowly. At that moment, Jane was extremely grateful to him for not making her admit she wanted to make love for the first time, ever.\n\nIt was the most intimate experience of Jane's young life. Her sex life mostly consisted of guys more concerned with their own needs, much less often giving her the attention she really craved. Evan was different, she trusted him, and he could never make her regret giving herself to him this way. Their time together was running out but on that island, the clock stopped. She couldn't help the loving look she gave him, like a girl with a crush. \n\nEvan noticed it, and when combined with what they were finally doing he had to take it as a yet another sign. He had made love before when it was requested, but it was nothing like with Jane. Starting to realize it was because of the feelings he had for her, he picked up his pace for a few minutes to celebrate. Sex with her was in another league altogether already. Never had he been with someone so reactive to everything he did, and such a similar eagerness to please. \n\nAfter what Jane assumed was more than an hour of the slow lovemaking, she said, \"Cum with me.\"\n\nHe gladly picked up speed to finish their fun as he was almost completely out of stamina at that point. The buildup was easy, as they had been edging each other along the whole time. Evan's cock thickened and pulsed inside of her, setting her off on her own journey. While his orgasms varied slightly, what he experienced was still more powerful than normal. Jane's orgasm was intense, but more abnormal was its length. \n\nAfter his release deep inside, Evan forced himself to hold out longer while Jane moaned and twitched beneath him. He was about to collapse on top of her when she finally showed signs of coming down. Pulling out, he fell over onto his back beside her as she started giggling. Jane rolled right onto him, cuddling up close. \n\n\"What are you laughing at?\" he asked, barely still conscious. \n",
        "\"I have no idea, it just felt so fucking good,\" she said, sighing.\n\n\"Fuck yeah it did,\" he said, pulling her closer to him.\n\nJane draped her leg over his thighs and said, \"Thank you so much, Evan. For this and everything else, I'll never forget it.\"\n\n\"Anytime,\" he said, clearly losing the battle with sleep.\n\nShe smiled at him, leaning up to kiss him on the cheek. She placed her head on his shoulder, joining him in exhaustion. \n\nJane was awoken by a nightmare a few hours later. The only details she could remember were the need to get away because she was suffocating, maybe even drowning. She snuck out of the tent as to not wake Evan, feeling immediate relief from the wind blowing against her sweaty body. The trapped feeling persisted and for whatever reason, she walked all the way through the trees to the beach they had caused a scene on earlier. The moon in the sky complemented by its reflection in the water gave her the relief she needed from the bad dream. \n\nDreams and nightmares had captivated her since she was little. She was analyzing the one that night just as she had many times before but it was different at that time; she couldn't remember anything but emotions. The pieces came together quickly and she knew why she had dreamt what she did. The lake, she never wanted to leave. She hadn't experienced a true vacation since she was a baby before her mom took off. \n\nAn overwhelming sense of loss, like losing a loved one, followed her first revelation. If she was honest with herself, she had to consider Evan as a whole. It was too easy to admit that she had fallen in love with him; the summer version at least. The summer version of him would be gone in three days and it would be as if he were staying up there and she was going home alone. Hopefully, they would be able to continue being friends when they returned; it would kill her to have to end things completely.\n\nJane did a terrible job convincing herself she was totally ready to do what needed to be done. Back in the tent, she never really fell back asleep for the rest of the night.\n\n********\n\nThe next morning, Evan woke up feeling pretty fantastic. He practically bounced out of the tent to make coffee for them and brush his teeth. Jane felt like melted shit after the nightmare and lack of sleep. Resolving to not take her bad mood out on him, she went out to get things moving. \n\n\"Mornin' I'm making coffee first, then breakfast. What do you want to do after?\" he asked pleasantly.\n\n\"Actually, I didn't sleep much so now I feel like shit. Can we head back after the coffee?\" she asked groggily.\n\n\"Yeah, sure,\" he obliged. \n\nHe had woken up next to her plenty of times recently, never seeing her like that. It eerily reminded him of the way she used to treat him before summer. Ignoring the thought, he concentrated more on helping her feel better. He collapsed the tent and packed everything up while Jane took her medicine in the form of coffee. \n\nThey had everything on the boat ready to leave the island when Evan let the nagging voice in his head take over. \n\n\"I'm sorry if I'm off base on this but there's nothing else bugging you is there?\" he asked, cautiously. Evan knew by then that she couldn't only be tired.\n\nJane would've snapped at him, but she took the opportunity to get it off her chest. \"Instead of getting any sleep all I could do was think. I may have driven myself crazy,\" she explained.\n\n\"What about?\" he asked, trying to be supportive. \n\n\"Evan, last night was perfect. It was easily the best night of this entire summer,\" she admitted.\n\n\"But,\" he said.\n\n\"AND, I think it's where we should leave this. End things with a bang.\"\n\nEvan shook his head, having not expected the conversation for possibly another week. \"We still have three more days. Why can't we stop then?\" he asked. Not that he wanted to stop at all. \n\n\"Because last night was perfect and I'd rather hold onto that than some quick fuck before we set off in separate cars for 2 hours. Besides, maybe we should start toning it down, get used to things changing,\" she rationalized.\n\nEvan stared at her almost responding but unable to find the right words. \n\n\"Do you have something to say, Evan,\" she practically taunted.\n\nIt pissed him off so he said, \"Fuck it, yeah, why can't we continue after? We can just change the rules like you have been all summer.\"\n\nJane rolled her eyes, knowing that was coming. \"We're completely different people back home and you know it.\"\n\n\"Bullshit!\"\n\n\"No, it isn't. Even up here we're different. You're a local, I'm just a tourist. That was the only reason this worked up here. You agreed to this,\" she said, acting like the entire conversation was just a pain in her ass.\n\nHer denial of what he had seen between them was infuriating. \"The only difference is we'll be busy with school and shit. We're still us, and you can't pretend none of it happened. We live down the street from each other for crying out loud,\" he argued.\n\n\"It doesn't matter how close we live. This was just a summer fling. You're the one that taught me all about this shit. You get off on giving girls a good time, and I'm not judging that. Taking me to your spots, dates to the Drive-In, incredible sex; you gave me what I asked for and more. I will always be grateful for that and I'll certainly never forget it. Summer's over, you should be used to this. It makes me think...\"\n\n\"Think what?\" he challenged.\n\n\"Think maybe we were lying to each other about being friends after this,\" she said blankly, which only hurt more. \n\nEvan smirked angrily at her. She was absolutely right all along, they were different. Only she was the only one faking. \n\nHe turned to start up the boat but turned back and said, \"I've taken girls to maybe four or five of the same spots.\"\n\n\"What's that even supposed to mean?\"\n\nGlaring at her, he continued, \"I've never taken anyone to all seventeen of them before. This Island, the only other person I've been here with is Mike and that's because he showed it to me first. I've pointed it out to girls on the boat before, they've asked me to take them, and I always refused. I'd lie and say some creepy old man lives alone on it. It's wicked haunted and anyone that goes there is cursed by some dead serial killer who used to bury bodies there back in the eighties.\" \n\nHis expression softened a bit before he finished, \"I didn't realize how big of a deal it all was for me until I regretted you being the one I shared it with.\"\n\nEvan turned, starting the boat. They pulled away from the island fast as Jane sat stunned at the harshness of his final comment. Tears built up in her eyes and she wiped them away instantly in case he turned around again.\n\nEither he was speeding, or simply skipping the scenic route because they were back at the Lake House soon enough. They unpacked the boat without a word before splitting to their rooms. Lisa noticed the exchange, wondering if she should warn Mike of the potential shit storm coming. Right away she took Evan's side, thinking it couldn't have possibly been anything he did. She became annoyed that she had gotten along so well with Jane over the summer but she decided to wait and hear the story first.\n\nEvan hid in his apartment before the Friday shift started. Jane showered, heading straight to Mike after. She found him in the kitchen when she came down from her room.\n\n\"Hey Mike, can we talk?\" \n\n\"Sure, you want coffee?\" he asked, fixing his own cup.\n\n\"Nah, I'm good, thanks,\" she said. \n\nMike gestured to the large dining room table and Jane sat with him. \"What's going on?\" he asked.\n\nJane looked embarrassed when she said, \"I think it would be best if I left after my shift tonight. It's the last one anyway, right?\"\n\n\"It is, but we still got the party tomorrow and then Evan's staying until Sunday night or Monday morning,\" he tried to convince her.\n\n\"I'm pretty sure Evan would prefer I not be here for those things,\" she hinted, trying not to think of how much he was going to hate her.\n\nMike gave her a calculating look before he said, \"You know Jane, you two haven't exactly been subtle, especially the last few weeks. You can talk to Lisa and you can talk to me too if you want.\"\n\nJane considered his words and then her reply. \"I asked more from Evan than I probably should have. I wanted him to treat me like he does some of the other girls on the lake. It went too far, and I should go before it gets any worse,\" she explained, allowing a couple tears to drop that time.\n\n\"You're going to talk to him before you leave?\" he asked. Mike could tell there were some complicated feelings around the situation.\n\n\"Yeah, I try not to be a complete bitch when I can,\" she laughed at herself, sadder than anything.\n\n\"Jane, we've loved having you up here. You've become a real asset this summer in such a short time. Lisa sure took a liking to you as well. I'd be willing to have you back if you and Evan can work things out,\" he offered.\n\nJane needed to leave before she really broke down. \"Thank you so much, Mike, really. This has been the best summer, and the most fun job I've ever had,\" she told him.\n\nThey both stood, hugging one another like old friends. After, Jane went back to her room to compose herself. \n\nLater that night, near the end of Jane and Evan's last shift of the summer, Jane sought out Evan to tell him she was leaving. He was behind the bar talking to a customer when she approached. \n\n\"Hey Evan,\" she said. Then she noticed the customer was Maggie. \"Shit, sorry, hey Maggie. Evan, can we talk when you have a sec?\" Jane asked, walking away again.\n\n\"Wait, no. I said what I needed to, he's all yours,\" Maggie said hopping off her stool. \"And Jane, thank you for what you said that day. I'm really trying to change things,\" she told her before walking off.\n\nJane looked at Evan, the tension was palpable. \"So she apologized?\" she asked.\n\n\"She wants to meet after work. I'm guessing that's what she's going to do.\"\n\n\"Yeah,\" she said, cattier than she meant to.\n\nEvan got a little irritated, clarifying, \"Nothing else is going to happen.\"\n\nJane scolded herself. \"I know, I didn't actually think you would. I'm sorry, look, can we talk quick?\"\n\nEvan led her to Mike's office, closing the door for privacy. \n\n\"I was a wicked bitch to you earlier and I wanted to first apologize for that,\" she told him.\n\n\"Okay,\" he said, clearly unimpressed.\n\nIt was harder than Jane thought but she continued, \"I also didn't mean what I said about us not being friends. Of course, I want that. I think I just need to get back home, back to normality and think about shit. When things are less confusing and busy, I'll hit you up.\" She looked away at the last part and instantly he knew she was full of it. \n\n\"Yeah, definitely, when are you leaving?\"\n\n\"Tonight, after work,\" she told him.\n\n\"Wow,\" Evan said, shaking his head in disbelief. \n\n\"I know, it's just time for me to go home,\" she said shyly. \"Can we hug?\"\n\nEvan hesitated but opened his arms anyway. Jane squeezed him much harder than he expected. That exchange wasn't 'see you later'.\n\n\"Thank you so much from the bottom of my heart, Evan. This summer has meant the world to me and I will never forget it.\" Ending the hug, Jane was crying when she said, \"See you back home.\"\n\n\"Yeah, goodbye, Jane,\" he said, going with honesty.\n\nJane looked at him for a few moments as if trying to memorize his pained expression. Finally, she walked out quickly, closing the door behind her. Evan was fairly sure he would never see her again after she left. Unless by accident, then it would just be awkward as fuck.\n\nEvan met briefly with Maggie outside of the restaurant. She appeared conflicted about going back up to his place when he offered. She officially apologized for how she lied to him and other things she had done that he was already aware of. She told him she hoped that he could one day forgive her and they could possibly even become friends. Seeing a totally different Maggie, he forgave her, sealing it with a quick hug. \n\nEvan waved to Maggie as she drove off. He saw Jane packing her car in front of Mike's house, resisting the urge to go over there and kiss her. He would tell her how stupid she was being, rip her clothes off right there, and hate fuck her until she realized it. There were so many mixed emotions he walked back into the House instead. Mike and Lisa were waiting in there for him since Jane had said goodbye to both of them already. \n\nWhen they saw the taillights of her car leaving their small peninsula, Evan asked, \"What the hell is my move now?\" They stayed silent and Evan looked over at them in desperation.\n\n\"Hey, I really liked Jane, and Jane really seemed to dig you. I'm also very surprised that she left like that but it makes me feel like there's something missing here. After you told us what happened, maybe she's hiding something? Or, maybe she does have feelings for you and just couldn't deal,\" Lisa gave her honest opinion.\n\n\"But what does that mean? What am I supposed to do about it?\"\n\n\"There is no move, dude. If she's conflicted, you gotta let her un-conflict, know what I'm saying?\" Mike ventured his guess. \n\n\"So basically, I just sit here and hope things work out on their own?\" he asked bitterly.\n\nMike shrugged and Lisa advised, \"The only thing you can do is let her figure her shit out. Getting in touch with her could only make things worse.\"\n\nEvan knew their advice was solid. Still, he was furious at the thought that the last two days of his summer would feel hollow and rotten. Going home wouldn't even be a relief as she would be there, somewhere. \n\n********\n\nSEPTEMBER 1st\n\n*********\n\n\"Jane!\" her brother Adam hollered from her doorway. \n\n\"What?\" she yelled back. \n\nShe had been sitting there on the edge of her bed, staring off into space when Adam walked up. Stranger, he was there for at least three minutes watching her be a total zombie. He briefly considered if his sister was hosting some alien slug in her brain, receiving orders from their queen.\n\n\"Are you infested, possessed, or something? You're exhibiting symptoms of a need to be quarantined,\" he said seriously.\n\n\"Huh,\" she responded.\n\n\"How was your vacation?\" he asked as if he hadn't said anything else.\n\nJane looked down when she admitted, \"It was probably the best summer of my life.\"\n\n\"Then why do you look so depressed? Just because it's over?\" he asked feigning concern but actually a bit concerned. \n\nShe hesitated but eventually said, \"I really didn't want it to end, it just had to.\"\n\nAdam could tell there was something majorly out of whack with her, more than usual. He walked in and sat next to her bed, signaling he was willing to listen.\n\nAfter a minute she said, \"I fell for the one guy I was not supposed to while I was up there and it really fucking sucks.\"\n\n\"Isn't that what you always do though? What's different about this guy?\"\n\nJane ignored the jab. \"It was Evan, the guy I went up there with. Before summer, I strongly disliked him. Then up there everything was so different, we actually got pretty close-\"\n\n\"I bet you did,\" he teased. That time she slapped him pretty hard on the arm. \n\n\"Yeah, that happened too. But I really fucked up when I just kept asking him for more. It was so unfair, I kept taking. All summer I told myself we could just go back to the way it was before the sex; complete fucking lie,\" she continued.\n\nAdam confusedly asked, \"So where's the fucked up part where he hurt you?\"\n\n\"The fucked up part is he didn't. He's just too good for me. I'm not ready for that kind of relationship.\"\n\nAdam looked at her as if she were in fact mentally challenged. \"So you can't be with this guy because he doesn't fuck your friends, cheat on you whenever you aren't around or treat you like shit?\" he asked bluntly. Jane looked away, thinking that was exactly why. \"Seriously Jane, I could never understand why you put yourself into those situations over and over. Don't you want to be happy?\" he continued. \n\n\"I've been thinking about that all summer. You know how I used to be the worst kind of girlfriend.\" Adam was aware as he had lost a friend to her cheating. \"It's just my bad karma,\" she explained.\n\n\"But it doesn't work like that. Good and bad karma come to you, you can't force it. If you're really dating assholes to punish yourself, then you're just getting shit on twice.\"\n\n\"I know, or at least I've started to realize that too.\" Jane knew there was no point in holding back from Adam as he often was the only person she could talk to. \"I think I'm really just terrified about how I might feel about Evan. Like, have I ever really felt that way if this is so different?\" she barely admitted. \n\n\"Damn, you're so damaged you can't even say the word,\" he joked, Jane only blushed in response. \"You're being wicked dumb. You're scared of the possibility of being happy, but you run full speed into dating shitheads that hurt you.\"\n\n\"I'm so fucked up. I'm scared I'll let my guard down, be happier than I've ever been, and then the hammer will come down, destroying everything. That's when the bad karma will come; when I least expect it,\" she said blankly. \n\nAdam felt for his sister. \"From that POV, yeah, it's scary. But still, you can't let that stop you if you think things could be different with him. You should see how it plays out, for you. Start thinking about your own life and what you want.\"\n\n\"What does my life have to do with this?\" she asked.\n\nAdam let his frustration be known. \"Do you want to run the garage someday?\"\n\nThat threw her off a bit but she still answered, \"No, I want to help make it much better. Take as much of the pressure as possible off dad. Someday, maybe we'd all own it together, but by then I'd only want to be there in spirit. So I can finally go where and do what I want to.\"\n\nAdam had set her up, and it was time to knock her down. \"So what's the first thing you could work on to get where you want, besides school?\" he asked, smirking.\n\nJane thought about it. Soon after, an unpreventable smile took up most of her face. It was a person. \"I love Evan,\" she said, finally.\n\nAdam smiled happily for his sister. \"Jane, you need to tell him right away,\" he advised.\n\n\"That's not something I can text him. He'll be back in 2 days anyway.\"\n\n\"How did you leave things with him?\" he asked.\n\nJane looked sick when she said, \"I pushed him away as much as I could and said a bunch of shitty, untrue things hoping he would hate me.\"\n\n\"You need to go back to the lake now then. You fucked this up, you need to fix it.\"\n\n\"I don't know, Adam. I'm not sure how welcome I would be. Evan's probably explained in detail how much of a cunt I was by now.\" \n\nHe thought on it for a few moments before asking, \"You must've made other friends up there. Is there someone you could text on the inside so they can help it along?\"\n\n\"Shit, when did you get so damn smart?\" she said, thinking of Lisa.\n\n\"Probably around the time you got so fucking stupid,\" he replied, being her brother after all.\n\n*********\n\nThe End of Season party at the Lake House was lit. Employees, regulars, and their families were all there. Since Jane had left the night before, Evan had an increasingly empty feeling at the fact that he was the only one at the party that wasn't sticking around. Even though he had his parents, friends, and one more year to get his degree, he had never wanted to stay at the lake more than he did then. He would go back to rarely seeing Jane and worse; they would both easily be avoiding each other purposefully when they did. \n\nWalking over to the open bar, he poured himself a Jameson, not even realizing he had picked that up from her too. He needed more of a distraction than alcohol, so he went to find Mike. Of course, he was with Lisa, who was showing him something on her phone when he walked up.\n\n\"Hey guys,\" Evan said. Lisa hid her phone, looking guilty, but Evan thought nothing of it.",
        "\"Hey, I'm about to give my speech. You wanna go last?\" Mike asked.\n\n\"Nah, I'm not in a mood for speeches. I'll say bye to everyone the normal way,\" he said. Thinking a moment, he asked, \"Last? Who else is speaking?\"\n\n\"Quickly, Mike covered, \"It's a party, right? Anyone can make a speech if they want.\" \n\nEvan figured Mike would tell him why he was acting strangely later so he dropped it. Mike grabbed a chair, bringing it over to the deck entrance, he stood on it. \n\n\"Everyone, can I get your attention over here please,\" he announced, waiting for them to gather around. \n\nWhen everyone's eyes were on him, he continued, \"First, I want to thank all of my employees, even the temps. You guys had my back and I have yours eternally for that. I've kept this a close secret so it could be a surprise for right now. This summer, we hit a record high on visitors and profits!\" A few people clapped and all the employees had a great sense of pride.\n\nMike tapped his fist, \"This thing on?\" he said. He grinned, then continued, \"Oh, and you guys are all getting bonuses because of it.\" That time everyone clapped, cheered or whistled. \"Yeah that's what I wanted to hear,\" he yelled, happy he had made their years, hopefully. Winter in New England on the lake could be disastrous for some. \n\nOnce everyone had calmed, he continued, \"I want to thank our regulars too, who are here today because they're here every fucking day.\" Most laughed at that.\n\n\"Do we get bonuses too?\" Johnny, one of the regulars asked.\n\n\"John, your drinking my booze for free right now, shut the hell up.\" Johnny raised his beer to him as others laughed on.\n\nAgain, Mike continued, \"Next up, I want to add someone to my list of people I couldn't survive without. Lisa,\" he said to her, she lit up completely. \"I never thought I would be truly happy again after Teresa passed, but somehow I am. Believe it or not, she always used to tease me about the crush you had on me. Somehow, I know she would approve. You help me get through the offseason. You keep me honest and very occupied. You do so much it would take too long to list it all. I love you, baby.\"\n\nLisa blew him a kiss as she wiped tears from her eyes. Evan watched, thinking how lucky Mike was to have a girl like her so in love with him. \n\n\"And then, there's my nephew,\" Mike said, getting to the end. \"This kid...Sorry, fine young man; has been there for me during the worst time in my life. He's helped my business more than anyone besides Teresa and her parents back in the day. He's my half-son, my nephew, my brother, and my future partner. To Evan,\" Mike said, raising his beer before chugging it. \n\nMuch of his family cheered for him, patting his back. He really wasn't great with receiving praise since he thought all he was doing was his job or what he was supposed to. He gave the polite smiles and anything else that would finish the kind words. Making his way back to the bar, he opted for rum that time. After downing the glass he heard the strangest thing.\n\n\"Hey, everyone, could I get your attention back, please? Just for a few more minutes,\" a familiar voice said.\n\nEvan looked back to the chair to see Jane stood there now. Having not been drinking enough to hallucinate, he stepped forward to hear what she had to say.\n\n\"I'm Jane, as I think most of you know...Wow, I'm honestly really nervous. I had some things to say but had no idea I'd be saying them to a room full of people,\" she said nervously, glancing briefly in Evan's direction. \"First, I don't think I've ever had a more fun job than working at the Lake House. I've certainly never been so quickly accepted by people as I've been here. For that, I have to thank you all.\"\n\nJane was far too nervous to look at Evan, which may have been good because he was doing everything he could to keep a straight face. \n\nShe focused on Lisa instead, \"Lisa, thank you for being my summer best friend. Maybe things will work out so we can keep in touch.\" Lisa smiled, nodding conspiratorially. Turning to Mike, she said, \"Mike, Thank you so much for this once in a lifetime opportunity. The free food, a place to stay, and the money were the best ever,\" she joked, getting a few laughs, Mike raised another beer up to her.\n\nJane looked down, resisting the urge to flee that wanted to take over. With resolve, she looked up to Evan, who was slightly taken aback by the intensity in her eyes.\n\n\"Many of you don't know this but before Evan invited me here, we had barely spoken. Now, I'm talking about someone I've known since 1st grade. We both lost the same job we worked the rest of year and Evan took pity on me by inviting me up here to make some extremely necessary money. I told myself to give him a chance, get to know him and maybe we would become friends after all; we did. We got closer and closer until our relationship evolved, and evolved. The point is, Evan showed me the best time of my life so far, and I hurt him in return.\"\n\nEvan looked down, not wanting to add to how she may have felt. It took some time for Jane to compose herself, revealing such personal things to an audience. \n\n\"Evan, I came back to apologize to you. Everything I said yesterday was bullshit I only said because I was scared. I want to change the rules again. Let's be us all the time. Not only do I want us to continue after summer but also...\" She turned to Mike, \"You said earlier if Evan and I worked things out, I was welcome to come back. If that were the case, would you be willing to drop the 'no girlfriends' rule?\"\n\nMike instantly loved this girl for Evan. \"I would, as long as he's cool with it,\" he told her. Everyone else in the room was looking back and forth between those involved.\n\nJane looked back to Evan for the moment of truth. \"What do you say, Evan? Forget summer girls, I want to be your year-round woman,\" she declared.\n\nEvan tried not to, very hard. The grin spread too quickly to pretend it wasn't the greatest thing he had ever heard. Everyone in the House had their eyes on him but that time he wasn't anxious; he was confident. \n\nHe walked up to her, holding his hand out to help her down from the chair. She took it, hopping off but never letting go of him.\n\n\"What changed?\" he asked quietly, as a few people stepped close to overhear. \n\nJane glanced back to the crowd before saying, \"Everything, we can talk about it in private whenever you want,\" she said, nodding her head towards the eavesdroppers. \n\n\"So, boyfriend and girlfriend, that's what you want?\"\n\n\"Yup,\" she confirmed confidently.\n\nEvan smiled devilishly, \"On one condition,\" he said.\n\nJane bit her lip, looking him dead in the eyes, she said, \"Anything.\"\n\n\"I want an open relationship,\" he stated seriously.\n\n\"No fucking way in he-\"\n\nEvan grabbed her, kissing her passionately to the eruption of cheers and whistles. Jane responded immediately, returning the same passion. Anyone that loved Evan and wasn't sure about Jane before her speech was sold after. Evan and Jane quickly forgot they had an audience and needed to be broken up by Mike. He ushered them into the hall leading to his office.\n\nEnsuring no one would listen in, Mike said, \"So I'm very happy for the two of you and all but I was wondering if it'd be okay to steal your thunder.\" Mike pulled a small box out of his pocket to show them. \n\nJane covered her mouth with her hands in excitement while Evan grinned wide. \"So, it's like that, huh?\" Evan asked happily.\n\n\"It's like that. I love her more than I ever thought I could love someone again,\" Mike declared.\n\n\"Well, better not keep her waiting,\" Jane urged him. \n\nMike smiled at them before walking back over to Lisa. He took her hand, leading her back over to the chair. Lifting her up, he told her to get everyone's attention again.\n\n\"Hey everyone, Mike has something else to say?\" she announced, unsure of what her lover was up to. \n\nWhen they had an audience, he began, \"None of you would have been invited here today if you had a problem with Lisa and I being together. Thanks, for that you're not banned. You guys are my family and Lisa has become more important to me as the days go by. This woman standing here before me is my world and I know I'm hers. So,\" he dropped to one knee. \"Lisa lets become a family legally,\" he said, opening the small box to reveal the ring he had been holding onto since before summer. \n\n\"Oh my god, Mike, YES!\" she exclaimed, jumping down and tackling him to the floor. \n\nOf course, everyone cheered, yet again. Mike had lost his wife in a car accident years earlier. After, he went down a very rough path, coming out of it mostly by the grace of Evan. When he recovered he still gave no thought to ever falling in love again. That was until Lisa made her moves on him despite being turned down so many times. \n\nWhen the commotion died down, Jane asked Evan, \"Wanna get out of here?\"\n\nHe smiled at her in response and Jane grabbed his hand to lead him outside. Past the parking lot, Evan tried to lead her to his apartment, she resisted.\n\n\"Uh uh, we should talk first,\" she said, gesturing they go to Mike's house instead. \n\n\"We can talk at my place you know,\" he said, barely able to contain his bullshit smile.\n\nJane giggled, pulling him in her direction. \"If we go to your place, I won't want to talk,\" she explained, smiling seductively back at him. \n\nEvan gave in, following her lead. \"You do realize what just happened?\" he asked. She looked back questioningly so he continued, \"I just let my girlfriend get her way.\"\n\nJane blushed almost turning away instead she let him see how he made her feel. She had slowly shown him more of herself over the summer, but that day he got all of her at once. The way she turned red, held his hand, and seemed so giddy; it was as if they were 14 again. She took them to the dining room table, sitting on top with an open chair in front of her. Evan sat there, remembering the time on the bar.\n\n\"I wish you were wearing a skirt,\" he teased, slipping his hands in her pants to massage her ankles. \n\n\"I'm glad I'm not, it's already getting cold, not that I wouldn't want to do that again sometime,\" she said, reminiscing. \n\n\"So, let's talk,\" he got to the point.\n\nJane blushed again, covering her face she said, \"I don't know why I can't stop doing that.\"\n\n\"It's adorable,\" he assured her.\n\nGaining courage from his compliment, she powered on, \"So, I think we should discuss what I said yesterday. If only so it doesn't get brought up in an argument months from now because there are still shitty feelings. To start, I meant none of it, not really. Everything I said was out of fear and panic.\"\n\n\"I figured that around the time you were making your speech. What I'm way more interested in is what changed? You're like the complete opposite now,\" he commented.\n\nJane winced, knowing she should tell him everything. \"Evan, I...If we had dated in high school, I would've cheated on you, because that's who I used to be. About 4 years ago, I got caught, humiliated, and shamed for it. And just like Maggie, I deserved it. I made the decision to not be that person anymore. Sadly, to punish myself I purposefully dated guys I thought, or knew would cheat on me. I was trying to balance out my karma so when a good thing came along, it wouldn't be ruined.\" \n\n\"Am I the good thing?\" he asked like a boy with a crush.\n\n\"Is that seriously the only part you heard?\" she feigned anger.\n\n\"Of course not, please continue,\" he appeased her. \n\nJane laid her hands, palms up on her knees, Evan took them. \"My brother Adam helped me realize that I was scared by how I feel about you. If I consider this summer as the beginning of us, then I love you, Evan,\" she explained quite proudly to his surprise.\n\n\"I love you too, Jane. I didn't realize it until you left last night,\" he said, standing up between her legs. \n\n\"I'll never do that again, I promise,\" she assured him. \n\nThey kissed until Evan started undoing her pants.\n\n\"Let's go up to one of the bedrooms,\" she suggested.\n\n\"Why, we have the house to ourselves. All the booze is over there so nobody's gonna bother coming over here,\" he explained, continuing to pull her pants off.\n\nJane lifted her ass, letting him take them. She gave him a sultry look as she knew Evan wouldn't change any after summer. Pulling her shirt off as he took off her shoes, she sat there naked on the dining room table, ready for their first makeup sex. Standing back up, he pulled his shirt off as she worked on his pants. \n\nOnce he was free, she said, \"Damn, I've never seen you that hard before I did anything.\"\n\n\"It was pretty much instant when you said you love me.\"\n\n\"Aw, it's a love boner, gimme,\" she said, grabbing it and pulling him to her opening. \n\nEvan pushed himself in easily, moving in and out with need. After the summer they shared, more than 24-hours without being inside her was too long. She felt the same, feeling him fill her so perfectly once again. A flutter of excitement filled her too, thinking of all the places they were going to do it back home. They would be pissing off her brothers with the sounds of sex in no time. \n\nJane's legs went up, down, and around his body trying to pull him in more. She clawed at his arms, back, and chest as her butt stayed in place on the table. Evan held onto her thighs, attempting to have a quickie but enjoying her too much to really try. He did love her, and she loved him back, finally. The crush he had when he was younger never ended, it was just waiting for a better time. \n\nThey had gone at it longer than they realized.\n\n\"Ahem,\" Lisa announced her presence. They both froze, gazing at her in shock. \"You know, this party is also a going away for you both. Seeing as you can officially do it whenever you want, hurry up and finish so you can join us again,\" she said, giggling at them. \n\n\"Be right out,\" Evan said, lacking any other retort.\n\n\"I'm sorry, Lisa, and Congratulations by the way,\" Jane apologized.\n\n\"Thanks, and no need, honey. You're not exactly the first girl to get fucked on that table,\" Lisa hinted, winking.\n\nJane smiled back as Evan couldn't help pulsing inside of her at the scenario they were in. \n\n\"Oh and you'd better clean it when you're done,\" Lisa ordered, turning to leave.\n\n\"Yes Aunty,\" Evan teased, welcoming her to the family.\n\nLisa turned the deepest shade of red. \"Evan please, I'm so not ready for that,\" she said, walking away so they could finish.\n\nAs soon as Lisa was gone, Jane was all over him. Kissing his chest and neck while she rubbed the rest of his body with her arms and legs; worshipping him. \n\n\"What has gotten into you,\" he asked, not that he minded at all.\n\n\"You and I don't just mean literally. You make me feel this way and you better keep it up because I'm pretty low maintenance otherwise. Keep me happy, love me, feed me, fuck me; see I'm easy. I'll do it all right back,\" she said, knowing the offer was irresistible. \n\n\"I'm so in, and I also mean that literally,\" he declared.\n\n\"Oh, and starting Monday, you need to give my poor pussy a week off. It needs to recover so we can get back at it.\"\n\n\"I probably need one too. Just to build up my cum reserves,\" he joked.\n\n\"Speaking of, cum in me, I really want to feel you again,\" Jane begged him.\n\n\"As you wish,\" he said before picking right up where they had left off."
    ],
    "authorname": "Professor_Chaos",
    "tags": [
        "college",
        "teen",
        "cumswallowing",
        "co-worker",
        "female masturbation",
        "voyeur",
        "pussy eating",
        "blowjob",
        "lake",
        "creampie"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/newfound-lake"
}