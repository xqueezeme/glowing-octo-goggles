{
    "title": "14 Months 06: January",
    "pages": [
        "Sophie woke with a gasp. The dream had seemed so real. She could still see the blood and hear the horrible shrieks of Mimi as she dragged Sophie away from the men who swore to keep her safe and into the arms of the stranger who had called out to Frankie on the street earlier that evening. She struggled and fought, but then there was an older man breathing heavily, like Darth Vader and the moment when he pronounced, \"I am your father,\" truly scared her. \n\nNot wanting to close her eyes again or lie there and analyse the dream any further than admitting she should never have let Darius convince her to watch the Star Wars movies with him, Sophie climbed out of the big bed and padded down to the kitchen to get a glass of water. Being careful not to wake anyone she managed to walk the stairs soundlessly and crept through the darkened house toward the kitchen. Thinking she could relax a little on the lower level as all the sleeping people were upstairs and with the house being so big, she would hardly disturb them. Perhaps she could visit the music room where she always felt so calm and happy.\n\nZander sat in the quiet darkness of Darius home with an album sitting on his knees while he sipped at the brandy, he had poured himself from his friend's well-stocked bar. He liked this time of night when everyone else slept and the night sky was at it darkest. He saw the silhouette of the girl he was coming to care for ghost down the stairs. He guessed it must be around two, the nightmare had been later than usual tonight, and although he was loathed to disturb the darkness, he flicked on the lamp beside him. \n\n\"Having trouble sleeping, again?\" he asked in a stage whisper as she gasped and spun around to look at him.\n\n\"I was just getting some water,\" she whispered back and continued her walk towards the kitchen, feeling his eyes on her even though he didn't get up to follow her.\n\nZander watched her go resisting the urge to get up and follow her into the kitchen, hoping she would come back to him so they could talk. He and Jayce had brought Sophie home, believing that staying in a city where she might be recognised again was too much of a risk. It was Angelo Calabrese's home town, and those most loyal to him who would have known Frankie were many and any of them could recognise Sophie for who she was, like the man who had accosted her on the street. \n\nDarius had developed respiratory problems which kept him in the hospital longer than they had thought he would need to be. Zander knew his brother would return soon, however, and he would have to leave this house and the girl who had been slowing working her way under his skin and brightening the darkness he lived within. He had known from the first moment they had met that Sophie was more than what she seemed, but even he hadn't expected the sweetness and light that flowed from her so easily. A man could be forgiven for believing her na\u00efve and innocent when they looked into her big guileless eyes, but he knew better. In his time between the Jazz club and now he'd done his own research into her past and knew how she had come to be working at Michelle's club.\n\nFeeling guilty for causing Mimi to snap and lash out almost killing his brother, Zander had stepped up and stayed with Sophie which he could see now had been a mistake, while he had believed he would have enjoyed the girl's company as he had been doing up until that point, he hadn't realised just how much she had already affected him. She was stronger than she looked, despite her occasional panic attacks. She was attractive, and when she sang, he could watch and listen to her all night. Her cheeky sassiness took him by surprise, especially when she was trying to lighten the mood. \n\nHe could admit, if only to himself that he wanted to stay and help her win the challenges, alongside Darius. He just wasn't sure if it was feasible or if Darius would allow him into their lives and contract the way he wanted or if, as he suspected, Darius would be unable to accompany her the Australia Day event and would ask Asher to take his place instead of himself.\n\nHe was in the challenge up until this point and had the schedule of events for this month and next month already so he took it upon himself to help Trent to organise Sophie's team. Trent himself and the dietitian Margaret were experienced and good at their jobs. Dr Susan Howard had far too much attitude for his liking and had been unhappy when she found out about Sophie's damaged wrist but had deemed it a sprain only and warned her not to overuse it. Sophie had been unusually tight-lipped about how it had happened and hadn't corrected Susan's assumption that it had occurred in the altercation with Mimi, which made him curious. Whether he stayed or not, the trainer would have to go as soon as Darius returned. He hadn't met her stylists yet, but from what he had seen, they were competent.\n\n\"I'm sorry I disturbed you,\" Sophie said quietly as she came from the kitchen interrupting his thoughts. \"I was going to spend some time in the music room, but it's soundproofed so I shouldn't disturb you if I close the doors,\" she said as if she was asking for permission instead of just telling him what she was doing.\n\n\"I'll come with you. I need to return this to its proper place,\" Zander tapped the album in his lap. He and his brothers each had one of these albums. Zander had found Darius's copy in the music room, and he left it closed, running his hand over the carefully crafted cover rather than revisiting the contents.\n\n\"I can use the keyboard and earphones so you can continue with what you were reading,\" she said helpfully. \n\n\"It's an album,\" he said, \"Just pictures. Your playing and singing never disturb me. I enjoy it far too much to have you deprive me of it tonight.\"\n\n\"Oh!\" Sophie said in surprise and went to the piano instead of the keyboard. She sat and tinkled over the keys for a few minutes before playing a few chords and singing Fireflies quietly and slowly in a way Owl City had never meant it to be sung. \"You would not believe your eyes. If ten million fireflies lit up the world as I fell asleep.\"\n\nIt wasn't until the chorus that Zander recognised the song as she had slowed down the cadence and rhythm of the song and he sang along with her in his mind as the familiar words started to fit into the style of the unfamiliar music. \"It's hard to say that I'd rather stay awake when I'm asleep 'cause everything is never as it seems.\"\n\nThe song continued in the same soft, slow pace and Sophie sang in little more than a loud whisper, \"To ten million fireflies, I'm weird 'cause I hate goodbyes. I got misty eyes as they said farewell. But, I'll know where several are if my dream gets real bizarre, 'cause I saved a few, and I keep them in a jar.\"\n\nZander couldn't help but focus on her as she closed her eyes and swayed with the music as she played. \"I'd like to make myself believe. That planet earth moves slowly. It's hard to say that I'd rather stay awake when I'm asleep 'cause everything is never as it seems.\"\n\nSophie sighed and remained quiet as she finished playing. She could feel Zanders eyes on her. He'd stopped scowling at her all the time over Christmas, but she wondered if the carefully neutral face she always encountered now was more worrisome than the scowls had been.\n\n\"Why are you still awake?\" Sophie asked, raising her voice slightly so he could hear the question.\n\n\"I like the quiet of the night. Everything is so still and calm,\" he shrugged. \"Why are you down here instead of sleeping tucked up in that enormous bed?\" Zander threw the question back at her.\n\n\"Bad dream,\" she sighed. \"Everything that happened down there, with Mimi and Darius, seems to merge into something even more bizarre when I close my eyes,\" she confided.\n\n\"Can you tell me about it?\" he asked softly.\n\n\"I'm not sure I can even explain it to myself,\" she laughed lightly and shook her head, her fingers tinkling a jaunty little tune over the keys. She was still only playing basic chords to the songs she liked and filling in the melody with her voice occasionally, but she had been learning the melodies of a few songs that were personal and meaningful to her. Songs that made her feel that life would work out the way it was supposed to because she had been loved once. She had a family of people who had loved her, and there had to be a purpose to her being the only survivor of her family. Why else would she still be here despite everything?\n\n\"Come, I'll take you back to bed and stay with you until you fall asleep. Darius will be back tomorrow we hope, and you don't want to look like you haven't slept for the whole time he's been gone. His ego is too big as it is,\" Zander chuckled trying to make light of the situation, but the initial words were a command, and she looked up at him and the tone of his voice when he had spoken.\n\n\"You'd stay with me?\" she asked.\n\n\"Yes, if it means you will sleep,\" he nodded. \"I don't want Darius thinking I haven't been looking after you properly. Who knows maybe I'll even close my eyes for an hour or two?\"\n\n\"Fine, but I am not tired,\" she lied. She was exhausted after a week of bad dreams, and she had considered talking to Susan about getting something to help her sleep.\n\n\"Try to sleep anyway,\" Zander said in a commanding tone then tried to soften it a little for her. \"I imagine tomorrow will be a difficult day for all of us,\" he said softly rising to stand and holding out his hand for her to come and take. He could admit his own apprehension about seeing Darius face to face again after what Mimi had done to him when she had been trying to lash out at himself for saying he didn't think she was good enough to stay even if given a handicap.\n\nFollowing her upstairs Zander wondered what he was doing. This was beyond stupid given that this girl had been getting under his skin. Still, he followed her into the bedroom, and as she went to the bathroom, he toed off his shoes and removed his jeans before lying on the bed in his t-shirt and boxer briefs waiting for her.\n\nSophie said nothing but her face showed her surprise as she went to the other side of the bed and got under the covers feeling better that he was on top of them. Once she was settled, Zander rolled toward her and pulled her closer, making her squeak in surprise as he spooned her with the covers between their bodies.\n\n\"Sleep, Beautiful, I've got you, nothing will harm you while I'm here,\" he murmured into her hair breathing in the scent of it, allowing himself this closeness after a week of keeping her at arms-length, most of the time. He wasn't sure how he would go back to his empty house after this if that was what Darius wanted. \n\n*****\n\nDarius looked in the mirror at the long-jagged wound reaching in a diagonal line from one side of his jaw across the front of his throat to just above his collar. He had been lucky that the glass had only nicked the anterior jugular and that the rest of his vascular system was intact when he arrived at the hospital. The glass, however, had torn through muscle and cartilage, creating a wealth of damage and affecting his breathing. Lowering the mirror, he lay back and allowed the nurse to dress the wound glad that the drainage tube had finally been removed and he would be able to return home and rebuild his relationship with Sophie.\n\nAs far as he was concerned, she still belonged to him, and while Andrew and Reed had both insinuated that he would be unable to continue competing in the game, he was determined to prove them wrong. He wasn't about to send her back to where she came from, and he certainly wasn't about to give her to the council, she would stay with him, or he would take her somewhere and hide her far away from their reach, and protect her from those who might want to use her for their own dangerous games, he just had to get home to her first.\n\nIn his more rational moments, he knew that Asher would step up and be his second and allow him to still have influence over her time in the game and the challenges she would face, but Asher was ineligible this year as was Jayce, perhaps his special circumstances could change that situation, it was their fault he had been injured after all. They were prepared to change the rules for Mimi after all until she tried to kill them and threatened disclosing the secrets around Sophie. Still, he wasn't sure they would stretch the rules that far and he grimaced both with the thought and the pressure the nurse put on his damaged throat.\n\nThat only left Zander to ask to be his second, and again because of Mimi, Darius wasn't sure he would be eligible. He wasn't sure he even liked the idea because, at the heart of it, they were too much alike to ever share the ownership of her contract without coming to blows themselves. Both were strong Alpha type personalities that often argued and butted heads over decisions despite their brotherly love for each other.\n\nStill, before he could even consider any second or continuing in the game himself, he had to get back to her and convince her not to leave him after he had hurt and frightened her during the ball. Guilt ate at him and made him more than impatient to get back to his home. He had been continuously gruff and unfair to the staff here as he attempted to throw his wealth and power around in order to be transferred to a hospital close to his home. The one saving grace of his time here, as always in his life, had been Asher. \n\nAsher had made connections in the Alliance generation based in this city, the Knights, and had managed to gather some intel on Angelo Calabrese and his family as well as uncover the rumour that a possible blood heir to the Calabrese empire might have been found. Luckily the man on the street outside the hotel who had called out to Sophie thinking she was Frankie, had not been thinking fast enough to get a photograph detailing her face but had snapped one of her back with a slight glimpse of her profile which they had been circulating amongst their men. \n\nDarius was happy Sophie had returned home when he heard that news, although he had been livid at the time. He knew Jayce and Zander would keep her safe and stay with her. She also had her team and Zander would know the schedule for the next event if not two. She shouldn't be disadvantaged by his absence, but it didn't mean that he was happy not to be the one guiding her through it and seeing to her needs. Was she enjoying Jayce's quiet steadfastness? His trustworthiness? Was she building relationships with his brothers that he would have to overcome to take back his rightful place as her partner in the game? The thoughts galled him, and his temper rose again as the nurse wrote in his chart and turned to leave without a word. \n\n\"Stop!\" he snapped at her in his hoarse whispered voice. \"When is the doctor coming to release me?\" he asked his temper once again fuelling his need to be discharged and on his way home.\n\n\"I'm unsure, Mr Blackstone. I will find out for you, but it should be this morning. The wound looks good I'm sure he will release you today,\" the nurse said in response, her voice kind and gentle as if speaking to a scared child instead of an angry, overbearing grown man. Darius huffed and fell back to the pillows propped behind him regretting both the huff of breath and the movement of his head as he fell back. \"Good morning Mr Blackburn,\" the nurse said just outside the door, and Darius smiled.\n\n\"Good morning, and don't you look like a ray of sunshine in his gloomy skies,\" Asher flirted unabashedly. \"He sounds like he's a bit cantankerous this morning, let me see what I can do about that,\" Asher chuckled and winked before he stepped into the room and the nurse giggled as she walked away.\n\n\"The doctor's on his way, and we are going home today,\" Asher said in a cheery sing-song voice noting the scowl on Darius's face. \"Fine, I won't rhyme anymore,\" he rolled his eyes dramatically. \"I thought you would be in a good mood about going home, at least.\"\n\n\"Believe it when I see it,\" Darius groaned. \"The only reason I haven't checked myself out of here days ago is that Byron threatened me but so help me if it's not today, I'll be doing just that!\"\n\n\"You know she is fine, right? Zander is with her and Jayce is there between work and researching our little mystery,\" Asher said. \n\n\"Fucking Zander, if he has touched her...\" he let his hoarse voice trail off with a growl.\n\n\"You know as well as I do that Zander would never do that behind your back, in front of you, yes, but never behind your back,\" Asher laughed. He had heard Sophie liken the two men to a Viking and a Barbarian, and he could see what she meant. Both were huge, strong domineering men which was why they always seemed to butt heads over decisions but they were also similar in personality as well as stature, and that might be just what Sophie needed right now in Darius's absence.\n\nAsher kept up a steady stream of chatter going over all of the new information he had put together during his week in this city and combining it with what Jayce had discovered from his own investigations. It wasn't much, and there was little evidence for their suppositions, but as Zander had said during their reflection, sometimes coincidences just don't add up, and in this case, two and two seemed to make six.\n\nThe doctors came and went, signing the discharge paperwork almost as eagerly as Darius took it and he dressed and readied himself for the flight home. It was unsurprising to the two men that when they boarded the Alliance jet to return home, they were greeted by the ruling council. While Darius took his seat silently, Asher grinned.\n\n\"So is this an ambush because you are concerned about us, or are we about to get told to toe the Alliance line and stop considering the man who accosted Sophie on the street as a threat. We know you know what I have been doing, the question is, why do you care?\" Asher said, sitting and tightening his seatbelt as the men in the rotating chairs seemed to ignore him then turned and locked their chairs into place for take-off. \"Fine, I'll wait,\" he smirked at Darius who also knew the meaning of having the six council members on this flight with them. Once the plane had taken off and levelled out the men all turned their seats so as to be sitting in a rough circle, and Asher immediately opened his mouth to talk again.\n\n\"Do us all a favour and shut up, Ash,\" Steven said with a smirk. \"You were always too clever for your own good. All of you were, and that's our fault, I suppose. We taught you to question everything and everyone, whether friend or foe,\" he sighed.\n\n\"Who pieced it together first?\" Andrew asked assuming Jayce would have been the one to see the tell-tale links and threads that wove the girls together.\n\n\"Pieced what together. Sir?\" Asher gave him a vapid look that was all wide-eyed innocence.\n\n\"Zander,\" Darius grumbled and noted the surprise on Andrews's face and the small smile of satisfaction on Henry's. \"He worked out that all the girls were linked to the same family, including Sophie though that is hard to prove.\"\n\n\"DNA doesn't lie,\" Byron threw a folder onto his lap.\n\n\"What happens to Mimi now that you can't possibly keep her in the game. I have the feeling that puts a rather large spanner in your plans. Care to enlighten us about those?\" Asher asked, taking on the voice for both himself and his injured brother.\n\n\"How about you tell us what you know first, and we can fill in some of the gaps,\" Henry said shrewdly.\n\n\"Alright, we don't know much and have evidence for even less,\" Asher began. \"My guess is that for your own reasons each of you hunted down a girl with blood ties to the original ruling families of the underbelly of this country. Then you directed us, pretty strongly in some cases to those girls except Jayce and I who were not entering the challenge and couldn't be persuaded because we never leave our team without back up support to cover deficits at work or help with challenges. Four was the max you could get from us so who would you go to for the other two. I am guessing Rob took, Jayce's place, he's in the same generation as Reed and would be easy to monitor from a distance and let's see who would have replaced me in your little scheme,\" Asher tapped his chin thoughtfully before smiling. \"Andre would be a bit obvious after seeing what happened with Mimi, so I am going to go with Samuel and his girl, Victoria.\"",
        "\"To clever for your own good,\" Steven muttered, but he was more than pleased with his prot\u00e9g\u00e9's powers of reasoning.\n\n\"The question is, why? Why go to all this trouble? Why those girls? Why now?\" Darius asked in his raspy voice. \"Why not tell us your plan in the beginning so we could have been forewarned about Mimi's instability? I would have been more than happy to avoid this,\" he lifted his chin, indicating the large dressing he still wore. \n\n\"We don't believe that was meant for you but rather Zander, you just got in her way when she broke free after crushing the glass in her hand,\" Andrew said as if he felt genuine remorse for what had happened. \"Truth be told it could have just as easily been you we sent after Mimi instead of the sweet girl you took. We debated long and hard about who to send after each girl. Mimi presented as nothing more than a spoilt princess whereas Sophie presented as too independent, a runner, and a wild card we couldn't be sure of because while she needed the money and the chance at a new life, she didn't want to be trapped in a situation she couldn't run from. Signing a contract and coming into our world traps her here for at least a year,\" He said knowing that none of those six women would ever leave the Alliance even when the game was over for them.\n\n\"You believed Sophie would be harder to handle than Mimi?\" Asher whistled and shook his head.\n\n\"I'm still not sure she won't call me when you return to ask about the loophole,\" Byron said, looking at Darius. \"Tell me about the argument that caused the damage to her wrist. Susan has put in a complaint that the girl was put in danger by you and us by allowing Mimi close enough to her to cause the damage, but we all know that didn't happen which means she is either protecting you or your brother David who left the ballroom with her. Which is it?\"\n\n\"Fucking Susan again!\" Darius growled. \"I never should have put her on the team.\"\n\n\"We'll come to her place on your team and what we can do about it. Tell me about the injury,\" Byron persisted.\n\n\"I was concerned with the near-pornographic display with one of her dance partners. She argued that she was trying to win the challenge and that the partner had made her look good, desirable even. She got up to leave the table, and I reached out to grab her wrist at a bad angle for both of us. I offered to take her upstairs after the last time she used the bathrooms at an Alliance event, and she refused unconcerned with her own safety and thinking I was too overbearing. The damage was done in the first moments, a sprain that shouldn't have happened and I am truly regretful about. It was never intentional; I would never hurt her like that. I apologised profusely on the night and intended to make it up to her. She was talking to me just like she normally would when you came to get us to see Mimi,\" Darius explained.\n\n\"Her dancing was quite mesmerising,\" Byron nodded accepting the story and understanding his jealousy.\n\n\"We believe there is a way to strengthen your team, keep Sophie in the challenge despite your injury and stay within the rules if bending them slightly,\" Henry stated sitting back in his chair and crossing his arms as if readying himself for backlash from Darius.\n\n\"You will not be able to compete as Sophie's partner until the wound on your neck has healed completely, and I have given you my clearance, even though Reed can be the doctor you see when we return you to your home,\" Andrew said seriously. \"It is me that will give you that clearance to compete again. Do you understand?\"\n\n\"The fuck I won't!\" Darius growled in a low, hoarse whisper, the strain in the muscles of his throat showing as he tried to shout. His face turned red with anger and frustration.\n\n\"Okay, let's stop fucking around, Darius. You are injured. On the night of the ball, it was David who calmed down Sophie's panic attack and brought her back, so you and she didn't get disqualified after you hurt and scared the girl into running,\" Michael said standing up and hovering over Darius menacingly. \"And do you know who it was that looked after Sophie after the shit went down? Do you even care that the girl went back and danced after witnessing that so that you and she weren't disqualified? Did you even ask what happened to her in the aftermath? Stop being an arrogant, selfish bastard for one fucking minute and listen to the people trying to help you and the girl! You can't do this your way anymore. You will have to negotiate and compromise now, or you will both be out! Do you understand me?\"\n\n\"Sit down Mike, let him wrap his head around everything,\" Daniel said, quietly looking around at his brothers. \"You're right Ash we do have our own agenda, but that is not something we are willing to divulge at this moment. Let's just say that it is important for us to keep these girls in the game and the challenges as long as possible. To that end, do you know who got Sophie through the rest of that night or did you think we just gave her a pass because you were injured?\"\n\n\"She danced?\" Darius frowned. He had thought she had been given a pass on the last couple of dances.\n\n\"She did, still suffering shock and confusion but she danced because Zander supported her. He told her she had to stay in the game so she could be there for you when you got home. He practically begged her not to let Mimi get her disqualified. Told her that she couldn't let you or your brothers down like that or let Mimi win by making sure she got kicked out at the same time as she did. Did you know he convinced her to make that recording for you? Firstly, because the words were true and secondly so you would be mad enough with him to recover fast so you could get home to punch him in his self-satisfied face,\" Daniel chuckled as he still spoke in a slow, calm voice posing all the questions Darius should have been asking himself.\n\n\"Zander is the only reason you still have a girl to go home to,\" Henry summarised for him. \"Given that both you and Mimi have been removed from the game albeit temporarily in your case, it stands to reason that Zander would partner with Sophie until you have your clearance.\"\n\n\"We talked about it and decided I would do it. I would partner with Sophie for the Australia Day event at least,\" Asher said. \"They hadn't actually had that discussion, but Asher knew Darius would trust him with Sophie far more than any of his other brothers.\n\n\"While that is admirable Ash, you aren't eligible, and you know it. Even in extreme cases like this, it is only that Zander lost his partner not through disqualification or losing a challenge but through medical diagnosis that we believe it would be within the rules to partner them,\" Steven said. \"Initially I too championed Asher's involvement due to the close friendship he has with you, Darius, but in the end had to admit that it was Zander, who from that first moment in the room when Mimi and Darius were both taken to hospital, never left Sophie's side. He barely sleeps because he listens for the nightmares she has had since seeing you lying in a pool of blood. I know you have checked in with your brothers Ash, but have you talked to Sophie at all?\" Steven asked in a gentle but accusing tone.\n\n\"No,\" Asher admitted getting the point Steven was making for not only Darius but for him.\n\n\"Behind Zander's hard and dark demeanour is a heart as big as he is, which was why you were chosen to collect Sophie and do what needed to be done to get her into the game. He would not have been so ruthless. Kidnapping and stowing her away in the country, taking every safe haven away from her, so she had little choice but to negotiate a contract with you was possibly the only way to approach her. Don't misunderstand me, Zander can be a true arsehole at times, especially when that darkness overwhelms him, but I don't think he could have stood against Sophie's lost little girl persona and made the hard decisions,\" Henry admitted.\n\n\"What makes you think he can now?\" Asher asked, hating that he had been taken out of the running and poising himself to nominate Jayce rather than Zander. Jayce had helped Zander take the traumatised girl home and had been visiting her to report back to himself and Darius.\n\n\"Darius has done the hard part. She understands that she has relative safety with us and the rewards involved in competing in our game can be great. I don't think she will run back to live on the streets again willingly, even though she has run from you twice that we know of Darius,\" Henry said.\n\n\"She wasn't running,\" Darius sighed. \"Both times, it was a panic attack brought on by outside forces. When these attacks occur, she needs to be outside, to know she has the freedom to run even if she doesn't. You take that away, and she truly will run and not look back. If you trap her in any way, she will lose what's left of her mind after...\" he shook his head. \"She's more damaged than you realise,\" he admitted.\n\n\"They all are,\" Andrew said quietly. \"We had expected Mimi to be a survivor like Stella,\" he admitted. \"We were wrong, and now we are trying to correct that mistake by bending the rules of the game without breaking them. It will be up to you to negotiate a new contract for Zander and Sophie that either includes you or doesn't. If you don't do this with Zander, you will both be out, and we will take Sophie somewhere safe until our plans come to fruition.\"\n\n\"You would take her?\" Asher asked furrowing his brow. \"But we promise the girls a new life, and freedom when the contract is done.\" Not that anyone was ever truly free of the alliance the freedom was an illusion they indulged until they required something in return for their generosity.\n\n\"These are special women and trust us; there are reasons for our actions. You know yourself that you got Sophie out of where she was before she was picked up by someone else who had heard the rumours of her heritage,\" Byron pointed out. \"Trust that we are protecting them because they are with the best people to do that, including you and all of your brothers. Make your peace with Zander and live as a trio if you must stay involved with the girl or hand her to us if you can't find a middle ground. You will have forty-eight hours to negotiate a new contract. Bear in mind Zander already had a team assembled for Mimi, and it might be a prime opportunity to trade your medic for a new one. Susan is bitter about the end of our relationship. I perhaps let her believe things I shouldn't have. She will undermine the Alliance in subtle ways to Sophie unless you get a handle on it.\"\n\n\"Think about what we have said we have more work to see to during this flight,\" Henry announced and stood walking towards the front of the plane where a small conference room sat between the door and the flight deck.\n\n\"Henry?\" Asher halted the man. \"What makes you think Zander would be open to sharing a girl with Darius?\" The fact was neither man liked sharing or compromising in this respect.\n\n\"I don't, but there's only one way to find out, and I know how persuasive the two of you can be when you want something badly enough,\" he chuckled.\n\n*****\n\nSophie jogged beside Layla, who was struggling with the longer distances they had started running since finding out the next event would be a fun run. Although not mandatory like the first of the month events, it came with bonus points and no one wanted to be lagging behind on the points table. Layla was taller than Sophie, but she didn't have the stamina or the motivation to run, despite her trainer's best efforts, she didn't see the carrot of bonus points and money as being important to her. \n\nSophie knew the remaining twelve girls and their partners would run in groups of four, and it was a fun run so points would be awarded on more than just their place in the race, it would be the fun and thought they put into it. With that in mind, she considered how she could get the most points now that she was partnered with Layla by default, assuming that Darius wouldn't be able to run to his usual fitness level when he returned if at all. His injury must have been worse than they told her for him to have been in the hospital and unable to fly home for a week.\n\nShe saw Zander peel off from the small group and stand to the side of the narrow running track to answer his phone. She considered if it was Darius telling them he had landed, although she didn't think it had been that long since Zander had told her he was on his way to the airport to get the jet home. Not wanting to leave Layla to jog on her own with the trainer this morning, Sophie stayed with her and within minutes Zander could be heard catching up behind them again to shadow their run. Layla nervously looked behind her and put on a small burst of speed surprising Sophie.\n\n\"That's more like it, let's see if we can keep that up,\" the trainer encouraged. \"Make it harder for Zander to catch us.\" Stella and Chloe were so far ahead they couldn't see them now as they ran with their trainers pushing them to dig deep and go faster along with Sophie's trainer who routinely ran marathons and triathlons. Sophie wasn't much of a runner herself, but she could almost keep up with Stella on a good day. Zander caught up to them again, and she turned her head to him. \"Darius?\" she asked.\n\n\"They're still in the air, they'll be landing in an hour, so we will need to head back soon,\" he said jogging easily beside them as Layla continued to struggle. \n\n\"Why am I even doing this if Connor isn't,\" Layla slowed to a walk finding that burst of speed took it out of her. \"He hates running he probably won't even be there on the day or do more than a walk.\"\n\n\"Even if we come last, we get points for participating, and if we come up with some awesome theme that doesn't have costumes to weigh us down, then that will get us points too. It's not about the winning it's about participating and supporting the charity,\" Sophie explained again. She turned to Zander and said, \"Can you find out if Connor is going to bail on the fun run? It's pretty cruel to make her do this if he isn't planning on running. And I will need to join another team who also hasn't got someone to run with at the same speed. I need these bonus points.\"\n\n\"You don't need them, Sophie,\" Layla said softly through a hard breath. \"You must be in the lead between the jazz club and the dancing. Between your costume and the guys who danced with us, we all did well that night I bet, but you were pretty hard to miss on the dancefloor. Our guys weren't so happy about it, but they didn't ask us to dance themselves.\"\n\n\"What do you mean the guys who danced with us?\" Sophie asked.\n\n\"There were six guys, Joe, Derek, Paul... umm,\" Layla began, and Sophie recognised the names.\n\n\"Alexi?\" Sophie prompted. \"Oh yeah he was lovely, he was enjoying watching his boyfriend dance the tango with you when he danced with me. They danced with you, me, Stella, Chloe, and that other girl who sat at my table at the jazz club on the first night, umm, maybe, Vicky? She was sitting with you and Darius at the ball.\"\n\n\"Victoria?\" Zander asked thinking that explained who the six were to him. He wasn't one hundred per cent sure there would be six, but there had been after all.\n\n\"Gosh Layla, I've never heard you talk so much,\" Sophie laughed. \"You notice everything, don't you?\"\n\n\"Who can get a word in around Stella when we are all together,\" Layla shrugged making Sophie laugh even more. \"She can be a little intimidating, you know?\"\n\n\"Yeah, the first time we met at the Jazz club, she came across as intimidating, but she loosened up and helped me out when I fell,\" Sophie smiled. \"She's a cool chick once you get used to her.\"\n\n\"I'll just have to take your word for it, we've been jogging together for a while now and she all but ignores me, and couldn't wait to lump you with me and take off with your trainer,\" Layla shrugged again.\n\n\"You aren't the easiest person to get to know. You rarely talk to us. This is the most you have ever said to me,\" Sophie defended Stella, who could be over-talkative sometimes and leave Layla out of their conversations. It was true Stella had a penchant for taking over where she could to make sure she got the best outcome for herself.\n\n\"I guess I'm just more comfortable with you, and it's not like he's paying any attention to us,\" she indicated Zander who was messing with his phone as they walked. Sophie frowned.\n\n\"The men bother you?\" Sophie asked. \n\n\"Not really anymore. Connor has tried to prove I am safe here with you all but, experience tells me not everything is what it seems in organisations like the Alliance,\" she sighed. \"Forget it, we better hustle if you want to get back before Darius's plane lands.\"\n\nLayla started to jog again, and Sophie knew she wouldn't be able to draw any further information from her about what she meant today. It was enough though to set her thinking about how each of the girls had come to be here and if their situations were the same or even worse than hers when these brothers kidnapped them.\n\nThey jogged slowly back, and Sophie swore that took more out of her than if she had been running at her own speed. At least it would have been faster if she could have gone it alone, but without Connor there for Layla and with her own trainer advising with the front runners as he always did, she had to plod along. She knew she should complain that Parker acted more like Stella's trainer than hers lately, but it was what it was when they all went out to train together.\n\nLayla waved as she walked with her trainer and her personal assistant who waited for them back towards Connor's house and Sophie kept jogging to the house she shared with Darius not stopping as she went through the back door, grabbing the bottle of whatever electrolyte drink Margaret had concocted for her from the kitchen, then ran up the stairs to the bathroom to shower and change, ready to greet Darius on his return.\n\n*****\n\nZander considered Asher's hypothetical question as he stepped into the shower. He had told Asher he would consider it when his brain and body were screaming \"Hell yeah,\" into the silence. Did he want to second for Darius who wouldn't be allowed to partner with Sophie until his wound was fully healed and he got the all-clear from Andrew? \"Fuck, yes!\" Did he have some conditions of his own to go along with that though, hell yeah, he did, and his mind raced over Sophie and Darius's contract he had found during the week. He wanted another look at it before Darius returned though so he scrubbed down as fast as he could ignoring his bodies need for release with thoughts of how he had woken with Sophie's sexy little body curled into his side and her legs tangled with his.\n\nLetting Margaret know that Darius would probably be home for lunch with Asher as he passed through the kitchen, he went into Darius's office closing the door. While he wouldn't tamper with Darius computer, he would pick a lock and look at the hard copy of the contract, and he smiled as the drawer gave way and he took out the folder holding the contracts for Sophie and all of the staff who made up her team. Parker would be the first to go if he had any say about it. The trainer he had for Mimi could step into that position. Margaret did well, Trent was loyal to Darius alone as was the assistant he had given Mimi loyal to him, perhaps they could work together. He would reserve judgement on the stylists, but he had concerns about Susan and decided to broach the subject of a change there too.\n\nHe needed to be very clear about what he wanted before agreeing to this proposal. The game itself was important but not as important as the girl herself. Although Asher hadn't said it, the fact that Darius was even entertaining this idea told him that the council would step in and take Sophie if he and Darius couldn't agree. That put him in a position of power over his brother, and he knew Darius would fight that shift in power in any way he could. He would have to negotiate this carefully because at the end of the day. Sophie had to agree to it, even if he and Darius could come to an agreement and share responsibility for the girl in a way that made them both happy. In the end, as always, it would come down to the girl, Sophie.",
        "Having looked at the staff contracts, he concentrated on Sophie's contract reading it far more carefully than he had the first time and losing track of time until his phone beeped with an incoming text. \n\n\"Ash: 15 out be ready.\"\n\n\"Zander: what's that supposed to mean?\"\n\n\"Asher: Be there in 15 minutes. Be ready to step in if needed.\"\n\n\"Zander: Step in how?\"\n\n\"Asher: 10 out. Just be ready.\" \n\nZander put the files away and relocked the drawer. Then went in search of Sophie. He found her unsurprisingly in the music room tinkering with a melody he hadn't heard before.\n\n\"He'll be here in five minutes,\" Zander announced as he walked into the room. \"Remember I told you how grumpy he gets when an injury restricts him?\"\n\n\"Uh-huh,\" she nodded and drew a deep breath standing from where she sat to move toward him. \n\n\"Remember too, that I am here for you while you need me,\" he reminded her and walked her out to the front porch to wait for Darius's arrival.\n\n\"He wouldn't intentionally hurt me,\" she said quietly looking at the wrist that Susan insisted she keep the brace on until her next check-up, but she had taken it off rather than make it an on-going issue between herself and Darius.\n\n\"I know that, but he has been recovering and from what I heard, he is was irritable as ever with the hospital staff.\n\n*****\n\nDarius could see Sophie standing with Zander at the front of their home when they turned into the gated cul-de-sac. It both cheered him and saddened him to see her. It was a hopeless situation. Share her or lose her. He drew a breath and closed his eyes. What choice did he have really? He had forty-eight hours, and he was going to enjoy coming home to her before he did anything else.\n\nPulling up the collar of his shirt to partially hide the dressing on his throat Darius stepped from the car and made his way directly to where his Angel stood, nodding at Zander as he approached. Without a word picked Sophie up and kissed her as he walked into the house, not acknowledging anyone else as he took the stairs two at a time and slammed the door to his bedroom as they entered.\n\n\"Hi, I missed you,\" he said with a grin pressing her against the door as he turned to lock it.\n\n\"I might have noticed that,\" she laughed softly and put her hands from his shoulders being careful of the large dressing surrounding his throat. She looked from the dressing to his eyes, and they stared at each other for a moment before he wrapped a hand around her hair, gently tilted her head back so that he could kiss her, slowly, deeply, passionately without putting too much pressure on his wound. They both felt the longing and need from the past week in the kiss. Her nails scraped over his shoulders as she pressed closer, and their bodies melded together. It surprised her how much she had missed the intimacy she shared with Darius.\n\nSophie practically whimpered when Darius broke the kiss. He tugged her head back a bit more and waited for her eyes to flutter back open and focus on his. Then he tilted her head, and his mouth moved to her ear. His lips, teeth and tongue nibbled and kissed his way from there down her neck. He tightened his hand around her waist as he felt her squirm in his hold. He knew what this did to her, and, listening to her heated sounds, he lifted his head to see the heat in her vibrant green eyes.\n\n\"I have missed that sound more than anything!\" he growled. He backed her up against the wall next to the door, holding her there with the weight of his body against hers. He couldn't help but groan as she began to roll her hips, pushing against him.\n\nHis hands slid along her arms, pulling them from his shoulders until he was able to press them over her head against the wall. He held her wrists together above her with one hand. He used his other hand to grasp a nipple through the fabric of her shirt. She inhaled sharply and arched toward his hand.\n\n\"Open your eyes, Angel,\" Darius murmured and watched her focus on him again, her beautiful green eyes, overly bright now. \"I have dreamed of those eyes, this mouth,\" he kissed her briefly, causing her to arch toward him when he pulled away, wanting more. Letting go of her hands, he took advantage of her raised hips and bent, sliding his hands up her legs under her skirt to hook into the sidebands of her panties and whisk them down her legs.\n\nDarius stood, kissing her hard again as he loosened his belt and pushed his pants and underwear down his legs. He needed her, needed the release so badly. He pushed her skirt up again and pulled her legs over his hips and felt her hands drop to his shoulders again for support. He entered her roughly, revelling in the feel, sound and taste of her. He fucked her like a man possessed, promising that later he would fuck her properly and make it all about her. For now, he just needed her and this release from all the pent-up frustration of the last week.\n\nSophie was surprised at the speed and force with which he took her, but she felt the same way. For months she had lived with this insatiable man, and she felt the need to reconnect with him on this physical level, and she met his thrusts, rocking her hips into him as she matched his need with her own. \n\nDarius came with a roar, and even though Sophie sought her own release, she didn't quite get there, and only a small wave of satisfying tingles travelled through her. She felt the connection with him, however, as gripping her tightly, he carried her to the bed, pulling her down on top of him as if already preparing for round two where she would get the high, she was used to achieving with him.\n\n\"I'm sorry,\" he murmured into her shoulder, kissing the bare skin around her collarbone.\n\n\"I'm not,\" she smiled softly and smoothed her hand over his cheek. \"I missed you, too,\" Sophie said honestly then leaned down and kissed him. \"Tell me everything. I want to know it all. No one would give me any information about why you were in the hospital for so long! It must have been much worse than they said when they took you in the ambulance. This is a big dressing for a small wound.\"\n\n\"I'm going to be fine eventually, and there are more important things for us to talk about,\" Darius said getting comfortable and pulling her small body against his larger one as they lay on the bed together still mostly clothed feeling content just to have her in his arms again. He knew he shouldn't be this possessive and needy where she was concerned, but he couldn't help it. She was his, and while he might have to share her for a little while, he wouldn't let anyone take her from him. Negotiating with Zander was going to be a hard pill to swallow, he knew.\n\n\"Okay,\" she said suspiciously.\n\n\"The council have decided that I require more recovery time before I partner with you in the game again,\" he began but stopped as she squirmed out of his hold and sat up looking at him with a panicked expression.\n\n\"So that's it it's over? Just like that?\" she asked her voice higher pitched than usual, showing her anxiety. \"I go back to where I came from, and you take the time to recover properly?\"\n\n\"That is one option but not the one I want you to take,\" he said seriously reaching out to her again. \"Come back and let me explain, we have options though only one of them makes sense at this point in time. Still, I will give them all to you so you can make an informed decision. Come lie back down with me while we talk,\" he cajoled, pulling her back to him and wrapping his arms around her.\n\n\"Okay,\" she whispered uncertainly.\n\n\"Firstly you could walk out of here today knowing you had fifty thousand dollars in your bank account for the two months you have been here plus the bonuses from the Jazz Club and how well you handled yourself at the ball and completed the challenge even after I had been attacked and taken away. If you were careful about how you used that bank account no one would be able to track you or find you including the Calabrese men who tried to take you from Michelle's club before I got there and the man who thought he recognised you at the hotel the ball was held in,\" he said giving her his worst-case scenario first.\n\n\"You think they will be looking for me because I look like this woman they used to know?\" she asked, not even having contemplated the idea before.\n\n\"I do and so do the council so as another option, you could call Byron to end our contract and leave the game and the council would protect you in a safe house where you would stay until we could get to the bottom of the Calabrese's families interest in you and the Frankie they believe you look like,\" Darius explained not exactly telling the whole truth but hating that option even if it was better than letting her walk out to face the world alone.\n\n\"Is there a third option?\" she asked hating that she would have to leave before she was ready and without the amount of money she would need to start the new life, she had been allowing herself to dream of since accepting her place in this bizarre world and game.\n\n\"There is, and while this might be the hardest for both of us to accept, it might be the best option we have,\" he started to explain. Sophie turned on her side and leaned up on her elbow resting her head on her hand so she could see his face as he talked but stayed silent wondering what could be harder than walking away with what she had now and trying to make a new life somewhere else with limited skills and money.\n\n\"The council have said that they would allow Zander to be my second. That would mean that until I gained clearance from the Alliance head doctor, Andrew, you would partner and compete with him instead of me. I am not willing to hand you over to him completely, however. I couldn't do that after all we have shared. Which means that we would need to renegotiate a contract to include him and the needs he has from his partner. Essentially you would be partnered with both of us if we could come to an agreement and devise a contract within the next forty-eight hours.\" Darius explained. He was under no illusions about what Zander would want from his part in their partnership.\n\n\"You wouldn't prefer Asher? I mean he's so close to you,\" she said out loud, but in her mind, she could picture the tall, dark and handsome Asher, that she had been attracted to from the beginning. She would be more inclined to let him into their relationship rather than the dark and brooding, sometimes scary, figure of Zander, no matter how much he had lightened up in the last week.\n\n\"That was my first thought, and Asher's. He volunteered immediately. Maybe a little too quickly, if you ask me,\" he chuckled. \"Unfortunately, the council have deemed him ineligible but have relented on Zander because he was already in the game and Mimi has genuine mental health problems that she had hidden well before he brought her into our game. So, his disqualification was through no fault of his own.\"\n\n\"I see and when you say his needs...\" she left the words hanging without actually asking the question.\n\n\"I would think he would want a contract similar to ours but negotiated to include the three of us. Once we do this, he would probably stay within your contract in some way even after I receive the medical clearance to return to the challenges, if I know him. We are more alike than either of us like to admit and although we argue and butt heads often, he is my brother, I know him well and I trust him above anyone outside of my family,\" Darius admitted. \"Keeping you with me even if I have to include him would be worth it in my mind. I am not ready to give you up.\"\n\n\"Our contract was only ever temporary, Darius,\" she reminded him trying to come to terms with what he was saying and reconcile it with her own goals for this game.\n\n\"Angel,\" Darius gathered her into his arms. \"It may have started that way, but I'm not sure I could ever let you go now.\" He was distracted as his phone sang with a shrill tone, and he groaned. He stood from the bed to rescue it from the pocket of his pants that lay discarded on the floor. \"Yeah alright, we'll be down,\" Darius spoke shortly and ended the call. \"Lunch,\" he said, collecting his pants from the floor as she moved to the edge of the bed.\n\n\"Forty-eight hours from when?\" Sophie asked as they got themselves together. \n\n\"This morning,\" he said sighing.\n\n\"The sooner we talk about what the contract would look like exactly the sooner it can be drawn up. I think that will take time, won't it? And if we have a deadline for me to decide,\" Sophie prevaricated. \"I need to know what it looks like before I choose to stay, just like I did with you in the beginning and I can't look at what is being offered if it doesn't exist.\"\n\n\"Zander and I will talk immediately after lunch to give you enough time to consider your options,\" he agreed. \"Would you like to be involved in that conversation or just read the contract we come up with that makes us all happy with the arrangement?\"\n\n\"You'd let me be there to create it?\" she tilted her head. She had thought the men would want to argue amongst themselves.\n\n\"You will decide what stays or what gets changed in the end anyway,\" he said thinking perhaps Zander would give in to some of Darius's demands if Sophie was present. \"Lunch first, then we talk to Zander. Don't discuss it in front of the team until we know the outcome,\" he warned knowing that Trent's loyalty to him would be a sticking point for Zander.\n\n*****\n\n\"Ash give us half an hour before you follow us in,\" Zander said as the three men headed to the office with Sophie. He was surprised and glad that Darius intended for her to be part of this initial negotiation. \"We are hardly going to come to blows when he's injured already.\" At least he hoped they weren't, but he needed to make his point early if not immediately and then he would compromise more than he wanted to because as hard as it was to admit he wanted this and he was grateful that Darius hadn't pushed for Asher to be his second. The council obviously wanted the girls in the game badly enough to give in if Darius had pushed for Ash.\n\nAsher raised an eyebrow at Darius who nodded almost imperceptibly, and Asher turned and went into the living room to wait as Darius led the way into his office. Asher hated not being able to second for Darius. Sophie was a beautiful girl there was no doubt about it, but he loved Darius and would have enjoyed being able to enhance the bonds of brotherhood between them with intimacy, using the girl as a buffer. He wasn't sure when it had happened exactly, perhaps the first time they had shared a girl during those experimental years when they were younger, and while he would never think to say that he was gay, bi-sexual perhaps, he knew his attraction for his brother was more than he would ever get in return. Restless now that he had been left to his own thoughts, he went in search of Trent to get a play by play of Sophie's week without Darius.\n\nZander remained standing as they entered the office. Rather than take his seat of power behind the big intimidating desk, Darius walked to the soft furnishings at the other end of the room and took a seat in one of the armchairs allowing Sophie to sit on the couch alone and indicating that Zander should take the other armchair.\n\n\"I take it you are aware of why the three of us need to talk?\" Zander asked Sophie looking directly at her.\n\n\"Darius outlined the three options I have, and as I said to him, I can't make a decision before I know exactly what the negotiated contract for the three of us would look like,\" she said quietly showing not only that she knew about his role in her life if she stayed but that she had options.\n\n\"Before we begin our discussions, however,\" Zander said carefully. \"I need to know something first. Will you trust me for a moment, please?\" He sent the question to both of them but held his hand out to her to stand with him. \n\nDarius's eyes narrowed, but Sophie came to her feet. This man had done nothing but look after her and keep her safe even from her nightmares in the last week. She had no reason not to trust him despite the dark scowl that had returned to his face since Darius's return.\n\n\"It is one thing to say he will share you attentions to keep you here with us, but the reality of that is never as pleasant, so I need to know, if he and you are serious about the negotiations we are about to enter into,\" Zander said wrapping one arm around her waist and pulling her close as he spoke. The other hand cupped her cheek and brought her mouth up to his in a tender kiss that slowly deepened as his tongue insistently pressed at the seam of her lips until they parted allowing him entrance and her body began to relax against his much larger one. \n\nZander allowed himself to be in the moment and enjoy the kiss deciding that if Darius couldn't handle it, he would only get one punch in before Zander would end the confrontation and to his dismay the negotiations. He knew now that he couldn't spend so much time with her playing the game and attending challenges without having her entirely and he was prepared to give in to Darius on anything else and offer her the same compensation she was already getting doubling the money she would earn as long as he could have her, if not right away then eventually.\n\nSophie barely had time to take in his words before his lips were on hers. He wasn't possessive and dominating in the same way as Darius. Instead, he was tentative as if asking her permission to deepen the tender chaste kiss. His arm stayed around her waist and the hand on her cheek as if letting her decide how far to take this without his demands forcing her greater intimacy within the kiss. It was so different from what she had always known, even with Darius, especially with Darius that she felt herself giving in to the unspoken questions and feeling her own need to explore the strange sensations he created in her. Her hands caressed his chest as she relaxed against him, and he deepened the kiss.\n\nDarius ground his teeth, and he felt the damaged muscles in his throat protest as he worked his jaw. Neither of them looked at him or seemed even aware that he was still in the room and his rising anger over this display of affection already in place between them from the last week left alone stung his pride as his eyes remained glued to the tableau before him. He hissed a breath knowing that if she stayed, it would be this way often and more than this, but he would also have his time to hold her and love her. He tried hard to reconcile what he needed to do with what he wanted to do as they stayed locked in that intimate embrace for long minutes. By the time the kiss broke, and Zander released his tight hold on Sophie, Darius had begun to calm down and come to terms with the fact that keeping Sophie meant sharing her. There was no other alternative available to them that he could live with.\n\n\"Point made,\" Darius said rising from his chair once they had stepped apart. \"It goes both ways though, brother, will you be content to sit back and allow me the same leeway in front of you?\" He took Sophie by her hand and spun her into his body feeling the familiar warmth of her as she came to him without resistance and turned her face up to his as if knowing he would need to reclaim her.\n\nSophie gave a small whimper as his mouth crashed down her hers in a hard and possessive kiss his hands stroking up and down her body as she gave in to the heady feeling of his possession and the way it made her feel. When he released her, she stepped back unsteadily and noted that Darius wore a self-satisfied smirk. She looked at Zander who wore his dark scowl again, and she wondered if they could negotiate, compromise and share the partnership to her in the game and its challenges at all or if it would be a contest between the brothers that would leave her too exhausted for the game.\n\n\"Point made,\" Zander said in a husky voice. The fact that the small amount of voyeurism Darius had just offered him acted as a turn-on rather than a turn off had surprised him, and he considered pushing for a m\u00e9nage rather than dividing Sophie's days and nights between them. \"Shall we get on with it then? I have read over the contract you have with Sophie, and I am prepared to agree to it all with only a few stipulations, so if you hear me out first, then you can tell me what it is you want, Darius. I think Sophie needs to hear from both us, so she knows what she will be agreeing to, don't you?\"",
        "\"I guess I shouldn't be surprised that you read the contract, it's pretty standard aside of the few limits Sophie requested,\" Darius shrugged as if this wasn't a big deal. In the grand scheme of things he thought to himself, it wasn't. \"Go on with your stipulations,\" he said magnanimously as if he were in charge of this meeting rather than it being a three-sided negotiation.\n\n\"First, if I am in, I am in until the end,\" he paused and waited but Darius said nothing and Sophie just looked at him curiously. \"Second, I want it all, including the girlfriend experience, and although we can negotiate how that will look and play out, I won't be a third wheel,\" he paused again and looked between the two of them, but they seemed to let him get on with it without interruptions. \"Third, I had planned to give money to Mimi for her performance in the challenges, and I will happily give that money to Sophie essentially doubling her monthly allowance and any bonus's she receives if my conditions are met.\"\n\nSophie gasped her eyes flying wide at the mention of doubling everything she earned. She wouldn't interrupt, but just the thought of it made her eager to explore whether this arrangement could work. It was less than a year that remained in the game, and if she could make it to the end, she would be richer than she could have believed and be able to live and do what she wanted, where she wanted without having to worry so much about the sustainability of her dream.\n\n\"Sorry, I didn't mean to interrupt you. Please go on,\" Sophie said, settling back into the couch again feeling their scrutinising gazes lift from her as Zander drew a breath.\n\n\"There will need to be changes to Sophie's team, effective immediately, starting with getting rid of her trainer. He trains Stella more than Sophie and runs with her leaving Sophie to languish with Layla who can barely walk the distance when I know Sophie wants to run. I have idea's about how to fix that situation, but we will need to speak to Conner first. The trainer I had for Mimi is good and can step in and trust me Stella's flirtations won't entice that woman. Sophie deserves a trainer who is focused on her and her alone. Now that I have a say in the matter, we need to find a partner who will run with Sophie and make Stella regret ever trying to sabotage her game,\" Zander said trying to rein in his anger at Parker again. He wasn't in the position to make the call yet, but he knew Darius would take his words seriously and get rid of the man, he knew what was happening.\n\n\"Done,\" Darius spoke in a growl, unhappy about Zander's take on Parker and his neglect of the woman he was being paid to train. \"What else?\"\n\n\"Margaret is great at what she does. I have no complaints about her remaining on the team. From what I have seen so far, the stylists are good at their job, but I haven't had to deal with them personally, so I will withhold my judgement on them which brings us to Trent and Susan,\" he paused. \"Trent is loyal to you as my man is to me, I suggest they work side by side to begin with and see if they can work out some sort of job-share arrangement, so we are both in the loop and getting the same information rather than creating a fuck up for Sophie in the confusion.\"\n\n\"We can try that on a temporary basis,\" Darius nodded understanding now that Zander needed control as much as he did and was finding this type of arrangement just as hard as he was. The fact that he had not just been here to watch over Sophie until Darius returned while carrying on with his own life, Zander had obviously become invested in Sophie and her place within the game. \"I have doubts about Susan remaining, but she won't go quietly, and to this point, she has done nothing to break her contract, maybe a job share situation, like with the assistants would suffice until we can work out the details.\"\n\n\"We could tell her it was the new rules. No one has done what we are attempting to do in the game before. There is no precedent. The contracts would end if you and Sophie were out of the game. Well, you are out, albeit temporarily, we could use that to end it if she argued being replaced,\" Zander suggested.\n\n\"I would like Susan to stay, job share if you have to, but I would like her to stay please,\" Sophie said quietly. She was the only person she had ever seen stand up to Darius, and she didn't want to lose her, just in case she needed to make plans of her own at some stage if this all got out of hand.\n\n\"I guess I could live with a job share arrangement,\" Zander shrugged and looked to Darius who nodded. \"The rest of the nuts and bolts we can work out as we go along but as far as the contract goes that's what I want. Your turn,\" he said as he settled back into his chair and tried to be as calm and accepting as Darius had been of his words.\n\n\"First, I have some things to say to you as my brother,\" Darius began. He'd had some time to take in what he had been told about what Zander had done after he had been injured at the ball and over the week since then and he knew he owed his brother his thanks if nothing else and he was determined to show him that he was not such an arrogant prick that he took it for granted. He had thought she would have been checked on by his brothers, but Zander had gone above and beyond, and after hearing him, talk, Darius knew he had become invested in Sophie well before today and the announcement that he could second for him\n\nZander quirked a brow. This could go either way. Darius might be mad that he had taken the liberty of taking control of Sophie and her team this week without being asked or he could be royally pissed that he wanted the whole contract with Sophie as it was, and equal to Darius himself.\n\n\"I only found out today that Sophie didn't get a pass on the last dances of the Ballroom challenge and that it was you who got her out of that room and calm enough to complete the challenge so that she wouldn't get disqualified,\" Darius admitted. \"I had assumed and didn't bother to ask, so I owe you my gratitude, brother. Even that video you sent me, I know you made to spur me into recovering faster if only to get home so I could punch you for having to prove a point even when everything else had gone to shit,\" Darius shook his head and gave a half chuckle.\n\n\"I was right,\" Zander chuckled with him. \"You can't deny it in the face of the evidence.\"\n\n\"You were right in that it was what I needed to see. I needed to know Sophie was still okay after everything she had witnessed and without me there to protect her,\" Darius admitted. \"I was also told you have been here full time this week and barely sleep because you know she has nightmares about it all and that you watch over her every night as well.\" He saw Zander give a quick look at Sophie who was staring at him with wide eyes. He hadn't told her he watched her at night as well and his gratitude to his brother rose again. He had done it all without knowing that he would be asked to stay and assist with Sophie's challenges.\n\n\"You see, I'm not sure I could negotiate to share my contract with someone who hadn't done so much and proven that he cares for her in the way you have over the last week and longer if I am honest. So, I can agree to your terms although it will take time to find a balance between the three of us. Neither of us is known for our willingness to share our personal pleasures in life, but I will try to compromise as you seem to be doing.\"\n\n\"Well, Fuck,\" Zander said, running his fingers through his hair. \"I expected more of an argument or debate than that,\" he admitted. \n\n\"I have only ever wanted to keep her safe and happy and with me. I didn't want to leave her for even a night over Christmas, and I don't know how this is going to work, but you're willing, and I would be the biggest arsehole in the world if I didn't at least try. Until I am cleared to compete again, you are the one that can ensure that she has fun while competing in challenges while I watch, but I want to be involved as much as possible. That's my stipulation. I'm injured not weak or incapable of being involved at all,\" he said with determination in his voice that stressed that he would not budge on this point. He would still be involved in every decision where Sophie was concerned. \n\nThe truth was that Darius had expected a fight, argument and debate not necessarily in that order but it seemed that Zander never intended to take her away from him but wanted to share her and the responsibilities that went along with keeping her in the challenge for as long as they possibly could. That fact along with the gratitude he felt that Sophie hadn't been disqualified and that no other Alliance member could challenge her on that fact was all he needed to compromise so easily and speak as calmly as he had.\n\n\"Done,\" Zander said. To him, it was a given that Darius would have ridden him hard for any and all information where Sophie was concerned, so it was an easy stipulation to give his agreement on. \n\n\"Your turn Angel,\" Darius said softly turning to look at where she sat alone on the couch between the two men in their armchairs. \"What is it you want from this, if you choose this option?\"\n\n\"Wait! What other options have you given her?\" Zander scowled hating that he was left out of their initial conversation but grateful that Darius had taken the time to forewarn her at the same time.\n\n\"Darius told me I could run, take what I have earned so far and try to hide not only from the Alliance but Frankie Calabrese's family who are looking for me. I'm not sure about that but twice now people have mistaken me for a woman that I'm not so I can only take his word for it,\" she said quietly looking at Zander and then at Darius as if for confirmation. \"Or I could take the loophole and call Byron as he would put me in a safe house and protect me until they would work out why that woman's family were so interested in me,\" again she paused to look at them both.\n\n\"Both are options,\" Zander agreed reluctantly. \"Not ones you are considering, I hope.\"\n\n\"She has the right to know what her options are and that neither you nor I would trap her into any contract or situation she didn't want,\" Darius said hoping Zander would pick up on the word trapped and let the options stand for consideration as Sophie worked it out for herself that they were not good options in any way, shape or form.\n\n\"Sorry go on, the third option?\" Zander sat back again trying to relax despite the horror he felt that she might choose to leave now that he had tasted her kiss for himself.\n\n\"The third option is what you have been discussing with Darius,\" she sighed. \"It's no secret that I signed on to play the game and get the money I need to be able to make a life for myself after this. I didn't know Darius when I signed on, and I don't know you that well either all I can go on is your actions since meeting you,\" she pointed out to Zander knowing that Darius was aware of how she judged people. \"The money alone is enough to tempt me into believing this is the best option for me but,\" she paused and swallowed. \"How would it work exactly? Would we all live here? At Zander's house? Would I have to divide my time between you both equally or...\" she ran out of ways to ask the obvious question.\n\n\"I'm not trying to split the two of you up. Any fool can see how much you care for each other,\" Zander said into the silence that followed her words. \"I expect it would be easiest to all live together, either house is big enough, but I would not make you move away from the music room you love so much.\" She smiled at that and Zander could see the relief in Darius's shoulders. \"That doesn't mean I'm not going to want alone time with you and I am sure Darius feels the same but if we are all honest with each other about how we feel we can work it out.\"\n\nDarius's phone blipped in the middle of the small table that sat between them, and he looked at it. \n\n\"Looks like the others have started arriving. I'll get Asher to keep them busy 'til we're done. None of them knows of the deal yet I expect,\" Darius grumbled at the interruption he wanted Sophie to have the time to think and ask as many questions as she needed to in order to be comfortable with the situation and the new contract.\n\n\"I guess I was asking more specifically about the umm, sleeping arrangements?\" she blushed and looked down in her hands. The thought of two such big men wanting her and invading her body at the same time both scared her and aroused her in equal measure.\n\n\"The aforementioned alone time,\" Zander said and then quirked a teasing lip. \"Unless Darius is willing to install a bigger custom-made bed for the three of us and we make a pact to keep sex outside the bedroom until we are all comfortable being in there together.\"\n\n\"That could be arranged,\" Darius agreed. \"If that was what you wanted. It's your choice Sophie, all of this and you have time to think even though we are on a deadline. Zander and I can make up a contract from what we have agreed upon so far this afternoon when the others leave tonight, and you can have the morning to go over it before making the decision.\" That would mean she was still his alone tonight and he planned to make the most of it. \"Or like the last time, we can go over it together line by line, so you know exactly what you are signing and what it means for you.\"\n\n\"Yes, please,\" she nodded. She had a lot to think about and fell silent for a moment before lifting her head as if just remembering something and turning to Zander. \"Did you mean what you said about finding me another partner to run with and talking to Connor about doing the same for Layla?\"\n\n\"Yes. What Stella did was underhanded and mean but what Parker did in encouraging her instead of looking out for your best interest was reprehensible. Fire him tonight Darius or I will in the morning,\" Zander said letting him know he wouldn't be moved on this issue.\n\n\"I'm in full agreement with you,\" Darius nodded. \"You can start feeling out other partnerships this afternoon if you want to give her the best chance at dealing out a little payback. Everyone underestimates our little Angel, but that will change. Let me know if you need me to do anything aside from getting rid of Parker and send through your trainer's details to me.\"\n\n\"Thank you,\" she said quietly. \"But I would like to explain to Layla that I am not doing to her the same thing Stella did to me when you talk to Connor, please.\" They were talking as if she had already agreed to stay and sign the contract and truthfully it was the best option, but the dread and anticipation of taking on two demanding and controlling boyfriends at once made her question her sanity at even contemplating it. \n\n\"That's understandable, why don't we invite them to dinner tonight?\" Darius said being as placating as possible in the face of possibly losing her.\n\n\"Sounds good,\" Zander agreed. He was concerned that during this meeting, she had lost that sassy little spark in her demeanour and words. He would talk to Darius about whether it was just the gravity of the situation or if she was often like this when not in the social situations where he had normally interacted with her beyond this week.\n\n\"If you could write it up and go through it with me in the morning, that should give me enough time to consider all three options. Sophie knew little about Byron or the council, but she couldn't believe for one moment that being locked up in a safe house would be in her best interests, so it was this or run and if she planned to run, Susan was probably the only person that would dare to defy Darius and help her if she needed it. She hoped that Darius would call a team meeting tonight or first thing in the morning to tell them about the possible changes in her contract.\n\n*****\n\nThe afternoon wore on as the six brothers sat in Darius'office and discussed what had occurred on the plane ride home and the options Darius and Zander had given Sophie. It was agreed that it was time to bring Bart Roberts and Rob Loxley in on the council's involvement and interest in the girls since Asher had confirmed the other two girls also had links to the underworld families and were being watched carefully during the challenges.\n\nDarius and Zander both suggested dinner the following night to gather the group together. That way they could speak with Connor and Layla about the run and possibly feel out Samuel about the race since Rob had already agreed to run with David and Stella. They would also feel out some of the other men entered in the game this year to find her a partner just as determined as she was. The brothers had left before dinner sensing that Darius and Zander still had details to work out amongst themselves and agreed to attend the next night with their partners.\n\nAsher was reluctant to leave. He didn't like that the bonds were already growing stronger between Darius and Zander as they gave each other meaningful looks or raised eyebrows during the night without saying anything or backing each other up when disagreements arose. He didn't like feeling on the outside of things where Darius was concerned. They had been a dynamic duo since they were thirteen and even though he would never admit it out loud, he needed that special bond. Without it, he had to stand on his own without the unconditional love and acceptance, Darius had always shown him despite how frustrated and angry his other brothers became with him. \n\nHe wanted to talk to Darius but wasn't sure how to express what he was feeling. He stayed for dinner when no one else had and felt the chasm widening as the two other men spoke without details about the contract, they needed to write up that night and the plans they needed to start working on for Sophie's revised team and the next set of challenges. After dinner, Ash left planning on returning the next day with a clearer idea of how to approach his brother.\n\n\"I missed my practice today, so if you gentlemen don't mind, I think I will go play for a little while before bed,\" Sophie announced standing from the table and for once not trying to hip check Margaret in order to take her own plate to the kitchen.\n\n\"We'll probably be up pretty late,\" Darius admitted wanted nothing more than to take his Angel and head to that bed with her right then and there. His throat hurt from all the use it had this afternoon and exhaustion was weighing heavily on him.\n\n\"The sooner you start, the sooner you'll be done,\" Zander said looking between the couple and knowing they needed some time to reconnect properly. \"Truthfully the original only needs a couple of tweaks here and there. We aren't changing much aside of the money you will receive and the team assisting you.\"\n\n\"Possibly the fact that I will be...\" she bit her lip stifling a smile as she glanced at Darius. \"That I will have two boyfriends.\"\n\n\"You can say the word fucking in front of Zander,\" Darius laughed easily surprising her. \"He might look like a shy little petal, but trust me, he is difficult to offend. I'll reiterate because I am pretty sure Zander will agree that what we will pay you for is to be at our beck and call twenty-four hours a day, seven days a week for training, the events and the challenges. We'll pay you to look the way we would like you to look and wear the wardrobe we provide. We'll pay you to put up with our work schedules and missed events due to business dealings or our brothers. We'll pay you to compete in the challenges given by the Alliance and give you bonuses if you win. The fucking, as you put it so eloquently last time we went through this together, will be a bonus and for all intents and purposes over the next year, you will get double that bonus with two men to satisfy your needs,\" Darius said letting his mouth quirk up in a half-smile as Sophie shook her head remembering the conversation well and how the team that was present at the time choked on their lunches when he had said it.",
        "\"It is what it is. You don't have to sugar coat it for me. I know where I was when you came for me. I know the deal Michelle made. I am still the girl that you took from a sex club, not some innocent Angel. No matter how many times you call me that. I know you know all this, but Zander needs to hear it from me. I'm here because I'm being paid. I'll fuck you because that's part and parcel of the deal I will more than likely sign tomorrow. There is no future beyond this bizarre game for any of us, and as long as all three of us are on the same page then we can have some fun and enjoy this while it lasts. Be warned, though; I will win every event I can to collect those bonuses, so make sure you can keep up your end of the bargain\" Sophie said without pulling any punches and noting with satisfaction the look of surprise that registered briefly on Zander's face.\n\n\"Well that was unexpected,\" Zander chuckled as Sophie left them to go to the music room.\n\n\"Not really, let's go to my office and get started. I can fill you in on our relationship while we work,\" Darius sighed. \"She was trying to shock you out of seeing her like a lost little girl, did it work?\"\n\n\"The opposite, I wanted to take her over my knee and spank her for being so crude,\" Zander murmured in a low voice that sounded heated even to his ears. \"She'll learn though,\" he said to himself and knew he was going to enjoy having Sophie even more than he thought he would. Buoyed up with that thought he began working on the contract with Darius and true to his word he changed very little about it aside of the pronouns to plural to include him and the changes they had agreed on together earlier.\n\nAs they worked, Darius spoke about breaking down those brittle barriers that made Sophie harden, and talk about herself as a bought and paid for whore no matter how he explained that she was no longer a whore for anyone. He knew he had scared her at the New Year's Ball and that he would have to rebuild those bridges that had burned because of his jealousy and rage. He spoke of his very real regret and his determination to recover the sweet angel he knew she was underneath that hard shell.\n\n\"I'll finish this off and start putting together some plans for the February challenges. I need to go home to pick up a few things tonight. I've been staying in the spare room that links to your room through the bathroom. I'll keep it until this is settled and we work out sleeping arrangements. I meant what I said, and I won't take her from you or the music room,\" Zander said seeing how much Darius wanted to go to Sophie rather than sit with him to complete the work they had to do. \n\n\"We can iron out the details once she's signed this,\" Darius nodded and looked at the monitor showing the contract.\n\n\"Don't overdo it, hey,\" Zander said seriously. \"You don't want to end up back in the hospital when we have so much to deal with right now.\"\n\n\"Yeah, I hear you. Thanks, Zan. For everything,\" Darius said, getting to his feet feeling the exhaustion of the day. At this point, he would be content to hold his Angel close and rest his eyes and throat. He owed it to her to fuck her brains out tonight, but maybe she would forgive him and allow him that privilege in the morning instead. He needed his pain medication badly at this stage. \"Are you coming back tonight or in the morning?\" he asked as he got to the door.\n\n\"I'll give you the night before moving into your territory on a more permanent basis,\" Zander chuckled. \"Go, I'll see you at breakfast.\"\n\n*****"
    ],
    "authorname": "Helleon",
    "tags": [
        "bootcamp",
        "contract",
        "funrun",
        "hospital",
        "injury",
        "race",
        "trainers",
        "welcome home",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/14-months-06-january"
}