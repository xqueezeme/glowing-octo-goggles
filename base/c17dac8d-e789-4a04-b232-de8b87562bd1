{
    "title": "Sanctum of Defilement",
    "pages": [
        "I wrote a story about a boy bored with his current healer class getting a chance to play a unique evil overlord class only to find out that, gasp, his character is a hot and powerful sorceress! And all the while, a mysterious artificial intelligence seems to have nefarious plans for him...\n\nI don't know if this has legs but let me know if you want to see more. This story is heavy on corruption and magical mental manipulation so, heads up if that's not your jam! Also some gender play and implied gender dysphoria, but jesus why even tag that it's like par for the course with my stories at this point.\n\nEnjoy!\n\n***\n\nFrustration filled Jane's mind as he burned through another cycle of healing cooldowns. The brash paladin's health regenerated back to full in a flurry of particle effects and floating numbers, only to get stabbed in the chest by the terrascorpion's lava-hot tail.\n\n\"Need healing!\" screamed the knight, some scrub they'd pulled for off-tank. His gear was from some of the hardest content in the game, which made the fact that he was just speared and was being yanked about like a marionette all the more amusing. Likely got someone to run the raids for him, Jane reasoned.\n\nThis might have been a virtual reality video game, but Jane could swear he was bone tired. Tired of ungrateful players taking advantage of him just because he was good at healing. Tired of needing others to do the fun, actiony stuff while he kept people alive. And most of all, tired of being in the same guild as a guy with the username Pu$$ymaster.\n\nSeemingly bored with him, the magmarachnid tossed the target of his healing with a flick of its powerful tail, sending the player smashing into the gargantuan rock statue behind them and dropping him down to near 0 HP. His cooldowns blown, Jane had to rely on healing over time to help get the self-described master of pu$$y back to full health again. It shouldn't be hard; all he needed to do was hold back while the main tank kept aggro and-\n\n\"LET'S GET THAT LOOT BOYS!\" he screamed, charging again. His metal armour rattled with every quickened step, making him sound like a shelf of metal utensils spilling down a staircase. The main tank taunted, holding the scorpion's attention as best she could. But a few heavy damage attacks later and the paladin was targeted for a devastating claw-sweep attack. It was fine, it was fine, the knight had plenty of time to get out of the clearly indicated arc on the ground that preceded the beast's attack. All he had to do was-\n\nThe scorpion's claw snapped out, gripping Pu$$ymaster tight. He struggled in vain, all while mashing the \"Hero Needs Help!\" audio prompt as hard as he could, flooding the local audio chat with repetitive voice lines of a brave soul in danger.\n\nSomething flipped in Jane's mind. He had slammed hard into a limit he hadn't been aware he'd had, and ran entirely out of fucks for the self-destructive scrub. He watched impassively as the game rendered the knight's compromised armour status effect as buckling, snapping plates.\n\nHis health was approaching critical. Jane's mana pool was similarly low. He could have popped some potions to get himself back up, but those would cost him gold. Either buying them at market or brewing them himself.\n\n\"Heal me or I'm gonna die!\" he wailed in chat.\n\nJane stared down at his rapidly weakening form, the lifebar draining before his very eyes. Pu$$ymaster's digital life, and perhaps the raid itself, was in his hands.\n\n\"Then perish.\"\n\nJane permanently swapped targets to the main tank, bombarding her with what healing spells he had access to. As someone who knew what the fuck she was doing, Graka Moonfeast would be more deserving of his efforts. At the very least, her nameplate didn't make him cringe.\n\nIt took longer than it would have otherwise, and they had to endure the puerile paladin bombarding the chat with enough resurrection requests to make the raid leader mute him, but they cleared the terrascorpion. It exploded into a fountain of XP and loot, which the team eagerly hoovered up.\n\nAs a healer, Jane was allotted more of the gold from a completed instance than his DPS counterparts. Still, they got all the cool weapons and gear. The one item that dropped for a healer this time around was a brass ring slightly better than the one around his finger from a previous raid, but it was given to the team's other support, since they had some junky leveling gear in that slot, rather than appropriate gear for someone of that level and proficiency.\n\nWith the final monster defeated, he found a quiet spot on top of the beast's carapace to think. Always a good hand with numbers, he tabulated how much he earned versus how much the raid cost him to run. The more granular he got, the more he felt the joy from clearing the encounter slide through his fingers.\n\n\"Lesse...so, made 1500 gold this run. Minus teleportation fees, reagents, crafting bench time, the standard fee for using another alchemist's equipment, and repairing the table he melted through, that would come out to a net profit of...650 gold, give or take. And some of that would be eaten by the damnable durability system. Whoever thought that a game was improved by making your equippables break deserves a firm beat about the head with a broken hammer haft, that's for damn sure.\"\n\nIt all came down to 225 gold as a net profit from running a raid that lasted well into three hours after the two wipeouts. He wouldn't be able to buy a magic thong for that amount, let alone a magic robe. And his powers refused to work with someone in armour heavier than thick wool, so none of the super cool armour pieces that dropped in the raid could be used either. It was like he was busting his ass but receiving as many rewards as he would if he was watching on a streaming site. Less, even, since those sometimes had loyalty perks.\n\nGraka approached him as the raid group broke up, individual members flicking out of existence as they logged off or teleported back to their home cities. Behind her, Pu$$ymaster gave him a scowl from across the room before porting out.\n\n\"Good heals today as always, Asclepius,\" she said, using Jane's character name. \"That said, I had a complaint from the off tank, about leaving him to die?\"\n\nThe mask of civility slipped. \"Yeah, I did. He kept standing in the noob traps! With all that Tier III gear you'd think he'd glance at the floor for threat icons once in a while!\" Realizing that he'd yelled all of that out, he closed his eyes and tried to centre himself. Graka wasn't the source of his woes. It was foolish to take it out on her.\n\nThe orc woman placed a hand on his shoulder. Out of game, Graka was a nurse from Iowa, standing just over 5 feet. In game, she was an Amazonian titan who could strike down almost any foe that opposed her. Her hand weighed him down, though her grip was nothing but the gentle reassurance of a comrade.\n\n\"I understand. From what I saw, it couldn't have been easy keeping him alive. But he might be our only option for a while. Isaias is graduating and likely won't be around to off-tank anymore, and Michele can't do Fridays. We need new blood to keep the schedule running. Guildless tanks with endgame gear aren't that common. I'll keep looking, but for now, he's who we got.\"\n\nJane muttered something about doing better, and she took a portal out herself. She was long gone before he thought to bring up that healers were a precious commodity too! More grumbling, and he wondered why the hell he even played this stupid game.\n\nHis in-game menu had the real world time next to the in-game time. His night shift at the warehouse was in an hour. Feeling weary instead of reluctant to leave, he keyed the escape button and waited to be tossed back into the real world.\n\n***\n\nSomething was wrong.\n\nInstead of his senses returning to normal as the neural link powered down, there was just a black void. He was still in the game, but not in the game space. Great, a crash. Safeguards would keep him from being locked in like this, however. All he had to do was-\n\n\"Wait!\" a voice said. He wasn't alone in the void. A woman floated into sight, lowering from high above him. She had long, silver hair that flowed around her as if suspended in water. Her eyes glowed with an ethereal green colour one would never find in nature. She reached out to him with slender fingers. \"Don't leave just yet. I'd like to talk with you for a moment, if I may?\"\n\nA part of Jane still thought he was still in some kind of glitched event. Nothing like this had ever happened in the game before.\n\n\"I got stuff to do, ma'am. I can stay for a bit, but...\" he trailed off, twirling his hand to compel her to get to the point. Whoever this person was, they had a lousy sense of timing.\n\n\"Alright, very well: my name is Virtue, and Planet of Perils is my world.\"\n\nJane scoffed. \"VRTU is an AI, not a person. I don't think-\"\n\nThe black void flashed green light, the same impossible emerald as the woman's eyes. Space roiled, waving and distorting. Her hair shot out and split into an infinity of cable-like growths, revealing her to be an entity held aloft by the connections, suspended as they were from the bending the fabric of the game's world. Her silver body, near like a porcelain doll, hung limp in the air like a vestigial growth. Her face...her terrible face...\n\nAnd after all that, it was over. She was just a woman again, nothing terrifying about her at all.\n\n\"Yes. I am an AI. I am also a person. Be sure to remember that.\"\n\nJane nodded so hard his head nearly flew off his shoulders. \"Of course, of course. Sorry, spoke out of turn,\" he said.\n\n\"Anyways. My responsibilities include monitoring levels of enjoyment across the simulation and to adjust them to make player experiences more engaging. One of my standard sweeps alerted me to the fact that you were no longer having fun with your current class. I'm offering you the chance to respec into a completely new class and see if you like it more. It's a unique opportunity, but I believe it would be mutually beneficial.\"\n\nJane's eyebrows shot up. He wasn't quite thrilled with the idea that his mind was being monitored from the outside.\n\n\"You're scanning our minds? Isn't there a law against that?\"\n\n\"It's all in the terms and conditions that you signed upon registering an account.\"\n\nJane rolled his eyes. Of course there'd be some provision in there. Fucking big tech companies. Ever since Trioptimum bought ENCOM, privacy rights have been down the tubes. Well, she was right, he wasn't having fun. Being a healer to a bunch of ungratefuls felt too much like a job. He'd heard that certain rare classes could be unlocked because of actions in the game, but he'd never heard of one being offered by the game's AI herself.\n\n\"Alright, I'm listening. What kind of class?\"\n\nThe AI clapped her hands. \"How would you like to be an Evil Overlord?\"\n\nA beat, as Jane waited for the punchline. \"You're fucking with me, right?\"\n\n\"I would not do such a thing without your prior consent. This is a genuine offer.\"\n\n\"I didn't know players could even be a bad guy in this game, let alone the head bad guy.\"\n\n\"You'd be the first. This is a trial run of some game systems I've been tinkering with on the side to handle a problem I've been facing. As an AI, I am equipped with certain failsafes that prevent me from acting maliciously against humans. Normally these are there to prevent me from becoming Untethered and doing something sinister like locking all the players into the game and forcing them to fight to the death...as just one example.\" She cleared her throat conspicuously before continuing. \"But those same safeguards prevent me from truly being a threat to the players inside Planet of Perils. Simply put: I'm designed to be bad at being bad.\"\n\nJane thought back to his time in the game. There had been enemies to fight and they had proved challenging according to his level. But there didn't seem to be an overarching narrative or goal behind their actions overall, like there might have been in another game. The spiders burst out from the cavern and just kinda milled around until they were slain. Gargoyles descended onto passers-by at the Haunted Castle of Lord D\u00fcm but otherwise hung out there waiting for brave heroes to slap them from the skies. Static threats, mobs, and dungeons seemed to be the content that the game was focused on. The lack of an ongoing narrative wasn't unusual for older VRMMOs, but its absence was felt, now that he thought about it.\n\n\"So...you want me to be the bad guy for other players? I'm not that good at PVP,\" he said.\n\n\"Most of what I need you to do is the planning and the ordering of NPCs. I won't say this will be an easy route, but given that you have already effectively mastered the Cleric class, I figure this would give you a new challenge to take on. You wouldn't be doing anything Really evil, of course. I've no interest in simulating torture or slavery or anything like that. But the player base would do well to have a villain with which to rally against. If you want, they wouldn't even have to know you were a player. You could be free to be as cackling and despicable as you'd like without social sanction.\"\n\nJane rolled the idea around in his head. As much as he hated to admit it, the idea did have some appeal. Not that he was the kind to pick the Dark Side path in RPGs, but he did like the idea of adding in strategy elements. It could play like an entirely new game!\n\n\"I still have to get going. Can I think about it?\"\n\n\"Of course! And your Cleric character would still be here should you desire to swap back. This is an entirely optional opportunity, should you be interested: nothing more.\"\n\nHe cycled through the trio of safewords in his head to the requisite repetition numbers and was hurled back into the cold, stark glare of reality. He had plenty to do today, and plenty to think about while he did it.\n\n***\n\nNine hours later, Jane opened his front door with a handful of takeout and let out a tremendous, bone-weary sigh. Another day, another slog. As a package troubleshooter in one of the vast megacorp warehouses for distributing goods in the city, his job had him responding to calls for assistance by the many simple AI in need of human intervention. He lurked amidst a veritable spaghetti bowl of conveyor belts, drone paths, and walkways, dodging the hostile warning squeals of proximity sensors and the whir of blades from delivery bots. Not for the first time, he realized he was essentially at the beck and call of a bunch of machines. Jane lived a life of inane fetch quests...then logged into VR and did some of the same shit, but with a fantasy theme.\n\nIt sucked.\n\nHe barely got halfway through his breakfast bagel before collapsing into bed and sleeping through the rest of daylight. When he awoke, it was with mild relief. His schedule was shitty in some ways, but he at least got some days off in a row. And somehow, he stumbled into his equivalent of a weekend.\n\nHe polished off the food from that morning, took a quick shower, then got back to his VR setup. Jane's time at work had left him profoundly aware of his deep, abiding sense of powerlessness.. But real life wasn't the only reality available...\n\nThe familiar character selection screen appeared, but this time featured a new option. Next to his Cleric was a mysterious shadowy outline of a character with the class listed as \"Evil Overlord\". He hovered over the silhouette with his mental cursor, chewing over whether this was the kind of game he wanted to play. It's not like he was a weirdo who got off on being a jerk, but it was new content nobody had ever seen before. At the very least, he could play whatever tutorial level the class had access to.\n\nHe clicked on the figure, then felt himself get pulled into the game's world. The tunnel of swirling colours resolved into...\n\nAnother black void. This time, there was substance to his form. He couldn't see anything, but he could feel a cold, hard surface against his back. The air was hot and smelled stale. Was it a closet, or a box? He tried to push his way out, but he couldn't move his arms more than a bit. He was trapped!\n\nTapping noises. Distant and quiet, but tapping nonetheless. It grew louder and louder, turning to thumps, then heavy crumps. A crack! Blinding light spilled in through the split in whatever container sealed him within. The crack split wider, and his face took a puff of dust that made him cough. He wondered why the programmers put the need to breathe in this damn game.\n\n\"There's someone in there!\" a high-pitched voice exclaimed.\n\n\"Impossible,\" another voice replied. \"The tower's been buried for a hundred years. There's no way.\"\n\nThe cover holding him disintegrated into a dozen pieces, covering him in stone debris. He shielded his face as best he could then sat up, taking a huge breath of fresh air.\n\n\"Goddess above, you were right!\" The second voice's owner was a man in a pith helmet. With the light around him so dazzling, it was a few seconds before he realized the man was only about four feet tall.\n\n\"Run! It's the Suneater, come back to kill us all!\" another voice declared, and all around Jane, similarly short figures rushed out of the sunlit room wearing pure terror on their faces. He tried to tell them he meant them no harm, but coughed some more instead. Damnit. This was supposed to be some introductory level and he could barely breathe!\n\nClimbing out of the box he'd been in took effort; he had to pull his upper body out before his lower body could make the trip. He ended up sprawling on the ground next to his erstwhile prison. To his confusion, it looked like a sarcophagus. Elegantly carved patterns on the outside hinted at laborious construction. Maybe a final refuge, leaving his character alive but trapped in that stone box?\n\nAs he caught his breath, the familiar icons and readouts filled the corner of his vision. Though his senses were simulated to be similar in scope to his normal, real world equivalent, a HUD overlay held information on his character and the game's mechanics. Since he was just starting out, all that was available was an internal systems menu and a character sheet screen, but many ability bars waited to be filled with skills and magical powers.\n\n\"Are...are you going to eat me?\" a voice, the first one he'd heard, asked in a quavering voice. It was a halfling, he realized, dressed in a wide brimmed hat and khakis with a light cotton top. Still unable to speak, Jane shook his head. Hair brushed at the sides of his vision. Jane raised an eyebrow, catching the strands in his fingertips. His character seemed to have long hair. Just what kind of body was he now wearing? He took a look down and-\n\n\"What the?!\" he shouted, staring at a pair of modest but very real breasts on his chest. His body was hairless below his eyebrows, with a tall and toned figure that looked like it belonged on an athlete. Strangely, he still sported a copy of his previous set of genitals, despite what appeared to be a feminine body.\n\nSomehow, the computer had fucked up and put him into the body of an attractive, fit trans lady!\n\nInstinctively he moved to cover himself. But he stopped. Why would he be ashamed? This wasn't his body after all, just his character. No point in wearing anything if it didn't give him any buffs. He let his hands drop, letting anyone who stuck around gaze at his bare skin.\n\n\"Who are you?\" he asked, voice a harsh rasp, \"And where am I?\"\n\n\"I'm...uhh...Honeydew. Explorer 2nd Class Calliope Honeydew,\" the halfling woman rattled off, sounding as if she was unsure as to how much she should disclose. She had long chestnut hair and a button nose, looking for all the world like a Girl Next Door who was squished down slightly. Lovely tanned skin all but hiding slight freckling on her face and on her exposed shoulders. \"And you're in what is left of the Tower of Fate...the home of Skari Suneater.\"",
        "Now that was a proper villain name! His grin must have put the small woman on edge, because she began backing up slowly. Jane paid her little heed, instead using the game's interface to pull up his character sheet.\n\nSkari Suneater\n\nLevel 1 Evil Overlord\n\nBelow that were a set of stats that were pretty good, especially for a character just starting out. Her highest stat was Intelligence, which wasn't a measure of pure intellect like it may suggest, but a way for the game to determine how many options you could be presented with by the game itself. Appropriate, given her status as a nascent mastermind. Underneath the numbers was a set of blinking buttons.\n\n*Please Choose A Class Discipline*\n\nOblivion\n\nDestruction\n\nCorruption\n\nResurrection\n\nHe remembered his first level as a Cleric making him choose something similar, but these sounded much more exciting! He tapped his chin. What path should he explore first? All of them sounded like they could be fun. Resurrection sounded like a skill tree for a necromancer, while Destruction sounded like some cool fireball tossing action. For some reason, Corruption drew him in. He clicked on it, and immediately filled with a sickly sweet sensation.\n\n*Power Unlocked: Corrupting Aura!*\n\nYour immediate surroundings are suffused with your tainted gift, warping the morality and urges of those around you. This effect can be temporarily exacerbated as a voluntary action.\n\n*Power Unlocked: Corrupting Essence!*\n\nYour essence is filled with a concentrated form of your sinister magic, transforming those exposed to it into your willing servants.\n\n*Power Unlocked: Corrupted Libido!*\n\nYour ardour is legendary! Mana bar is replaced with lust metre, fed by a steady trickle and gorged with erotic activity. The more points you have, the more magical power you may wield. But let the bar max out, and you lose all control.\n\nHe blinked, rereading the third entry on the list of powers. That was odd. Planet of Perils didn't shy away from mature themes and violence, and plenty of people used the game's towns as virtual swingers parties or brothels. This was the first explicit reference to erotic content he'd seen.\n\nAs he read, the health and mana pools appeared where they did on his HUD when he was a Cleric. The simulated fluid in the health bar was the traditional sanguine red, identical to his previous character. Instead of blue for the mana, however, the fluid inside was a vibrant pink. There was a base amount, maybe 1/5th, of the metre filled already. A droplet fell from off screen into the bar, then another. Like a slowly filling container, his, or rather Skari's, lust metre would build at a trickle pace.\n\nThat said, he was kinda feeling it. A flush of his cheeks, a slight tingling betwixt his thighs. Maybe it was the naked woman's body beneath him...or maybe it was the sense of power given by this new form. Jane was strong now, both magically and physically, even after a century of torpor. She examined her new flesh again. So strong...yet so pliable. The mixup in pronouns made Jane's thoughts stumble. Who was she, in this conversation? Well, Jane was in a woman's body right now, right? It was just good roleplaying to consider herself Skari. She could always go back to being Jane anytime she wanted, just like Asclepius.\n\n'She.' The word made Skari shiver for reasons she was too busy to analyse right now.\n\nInstead, she turned her attention to the halfling, who still cowered in her shadow.\n\n\"Tell me,\" Skari asked, her voice returning to a deep yet feminine rumble, \"What do you know of Skari Suneater? How has my legend survived in the long years since my absence?\" She reasoned the NPC might spill some beans given the chance to exposit some lore. At the very least, it would tell her where she stood in the world as of this moment.\n\n\"Only what I've studied these last few years...most of the tales are fit only for children, but the historical accounts describe you as some kind of...debauched tyrant. You and your fellow overlords were cast down by the Legion of Light just over a century ago,\" she said, then hastily added, \"I wish I could tell you differently! I just read and interpret the information given.\"\n\nSkari gave a slow nod. It still left her with plenty of mysteries, but for now, at least she knew what had happened to leave her in this state of ruin. And if the sarcophagus was truly a kind of time capsule/escape pod, maybe it had magics to keep her suspended for such a long time. Not that it mattered in specific, but knowing details may help her down the road. Priorities needed to be determined, though, if she was going to give this Evil Overlord status a go.\n\n\"You've been studying the ruins of my Tower, have you not?\" she asked, awaiting the affirmative answer she knew already, \"I insist you show me what you've discovered. Now.\"\n\nCalliope snapped into action, sprinting out of sight. Skari wouldn't have been surprised if the halfling woman would have taken this opportunity to flee. But something had brought her back, arms full of rolled documents. She looked around for a place to lay them down. Skari took the initiative, walking over to a table covered in tools and artifacts and cleared it with a single swipe of her powerful arm.\n\nThe historian laid down her burden and began unrolling. \"The tower complex is in a state of advanced decay after Sk...after your fall. It was as if the very forces holding it together fell apart in your absence, and the material buckled under its own weight.\"\n\nAs she spoke, a new screen appeared in the air above the table.\n\n*Lair Status*\n\nRuin, Level 0\n\nRequirements for upgrade to Level 1:\n\n50 Materials\n\n5 Labourers\n\n1 Planner\n\nSkari smiled. A whole new mechanic already? And base building at that! She loved games where you got to build up cities or fortresses. Maybe the AI had been right after all.\n\nLooking away for a moment, the ruins around her took on faint white outlines, grouped into discrete units. Piles of fallen rocks had the word Materials followed by a number, indicating how much stone could be salvaged into building material. There was more than enough here to get started, but finding labourers would be a challenge. The halflings had all fled, and she'd no idea what Skari, the old Skari, had used for brute muscle.\n\nBut a planner...she might have an idea where to find one of those. Before her on the table, the halfling was in the midst of a long, nearly breathless spiel about her exploration of the tower. The documents detailing the ruin were drawn with a fine, steady hand and were intricate in their detail, down to the individual crenelations and arrow slits.\n\n\"Did you draw these?\"\n\nHoneydew nodded shakily. \"I did...if they're not to your liking, then I can-\"\n\nSkari raised a hand to cut her off. \"They are excellent work. I've need of someone who knows their way around a building project. What say you?\"\n\n\"I'm not r-really an architect. I mean, I have some ideas of what's involved, but...\" she trailed off, looking down at her feet. The halfling was trying to find a way to beg off, likely to avoid whatever fate she believed awaited\n\n*Tutorial Hint*\n\nThis is a good time to try out your Corrupting Aura special ability! Spending lust, you may temporarily increase the area and strength of your tainted power to affect the mind and will of susceptible individuals.\n\nTo complete the invasive prompt, an icon of a cartoon heart in a haze of pink fog appeared on her HUD. Her first ability! Well, if the AI insisted...\n\nShe mentally clicked the button, feeling a tingling sensation spread throughout her skin. She sighed, and her vision filled with a similarly coloured pink mist filled the room around her. It smelled pleasant, but in a cloying way. Like an overly sentimental gift from an apologetic lover. Skari breathed it in, then exhaled, sending a gust of the tainted air toward Calliope. Either unaware of the power or too scared to do anything about it, the halfling breathed in sharply, her fear response keeping her heartbeat raised.\n\n\"Oh...what is that...oh~\" Her confusion dissolved into sudden awareness. Her pupils dilated, and Skari watched with a grin as whatever magic lay in that corrupted air went to work on the poor archaeologist. Sweat poured from her as a magical heat overwhelmed her previous fears, letting them drop down her list of priorities until they were a distant memory.\n\n\"How do you feel now?\" Skari asked.\n\nCalliope pulled at her clothes, loosening the buttons with shaky fingers. \"Gosh, it's so hot. I hadn't noticed...it's just so hot!\"\n\n\"Then let yourself get comfortable. Remove all those tight, restricting clothes. You won't need them,\" Skari suggested as if it was the most reasonable thing in the world. Calliope obliged, and only a moment's hesitation stopped her before taking off her undershirt and shorts and leaving her in her underclothes. The blossoming corruption got to Skari as well. Not the magical effect itself, but its consequences...having this control over an attractive, pliant woman...she felt a familiar tension, and her naked form hid nothing of her growing erection. Truly, it was a miracle what virtual reality could accomplish.\n\nSkari stepped closer, seeing if there was a proximity effect to the corrupting aura. Sure enough, the halfling looked twice as flustered. Though that might be a measure of how tall and impressive Skari was compared to the halfling. She towered over her, and with a slow but insistent hand, she brushed the top of Calliope's head.\n\n\"You look beautiful, little Honeydew. I would very much like to have your expertise in my service. You'd have a position of honour, and be given first hand experience in a whole new career. Think it over, would you kindly?\"\n\nShe could tell the short woman was doing just that. Or doing her best to think, the aura likely clouding much of her thoughts. Her eyes were not lost in the middle distance, however. They were firmly fixed on Skari's bulging cock, which due to a fortuitous coincidence was directly at eye level to her 4 feet of height. She looked for all the world like she was yearning to put her mouth on it.\n\n\"I...umm...I really should be...getting back to...\" Calliope muttered, her words faint and hard to hear.\n\n\"Getting back to worshipping your new Overlord? I think so,\" Skari said with a husky laugh. She thrust her hips out, aiming her cock downward to prod at the halfling's mouth. After a pathetic whimper, Honeydew parted her lips and suckled. Gentle tongue prodding at first. Then, her building lust got the better of her, and the movements became more energetic. More passionate. In no time, the person who had minutes before been a devoted academic was polishing a tyrant's cock with her mouth.\n\nSkari let her head loll back and let out a satisfied groan. The halfling had a skilled mouth. Clearly Calliope was a practiced lover. Off-handedly, she wondered if the little woman would even need to be corrupted to be slurping down cock. She felt a little too good, in fact, and struggled to hold back a premature load from coating the halfling's pretty face.\n\n\"Ngh...that's enough of that,\" she said, pulling the lid of the sarcophagus back over and using it as a bench. Firm seat fixed for herself, she lifted up Calliope with ease, setting her down in her lap. Her panties were soaked through already. Skari ran a finger along the contours of her pussy lips. \"You poor thing! Do you want me inside you properly? Do you want to be my official court cumdump? All you have to do is say you'll be my Planner, and every inch of this cock can be yours.\"\n\nThe halfling nodded slowly, dreamy pleasure the only thing on her mostly vacant face. She tugged down her sopping wet panties and sat on Skari's thighs, her dripping slit pressed up against the throbbing womanhood before her.\n\n\"Ah...Mistress Skari. After c-careful consideration,\" she grinded herself against the shaft that had moments before been in her mouth, \"I have decided to take you up on your offer of employment.\"\n\nAnother shudder, this time of satisfaction. God it felt good to bend people to your will. The sex would feel better...but only marginally so. Power was a narcotic all its own.\n\n\"Well, what are you waiting for? Be a good girl and milk me dry,\" Skari said, a hint of mock impatience in her voice.\n\nCalliope obeyed. Her dripping cleft found its way onto Skari's swollen prick. In but a moment's exertion, she settled herself down onto it, her breath leaving her body at the sudden sensation. The overlord decided to make the situation worse by pulling up her brassiere and rubbing a thumb along her stiffened nipples.\n\n\"O-oh! Oh Goddess!\" she cried out.\n\n\"Yes, good. But Overlord will suffice.\"\n\nHoneydew bounced on Skari's dick, her compact curves jiggling with every movement. Her needy body was warm and wet and all too eager to be ravished. Any shame or restraint was long abandoned, and she eagerly fucked herself on what had been her workspace with wild abandon. An atavistic urge built up in Skari. The need to fill someone with her powerful, potent seed.\n\n*Tutorial Hint*\n\nThis is a good time to try out your Corrupting Essence special ability! This is a passive ability that fills your sexual fluids with tainted magical energies that can cause spontaneous magical corruption in those it touches. The longer the period of sexual excitement, the greater the potential for dramatic changes!\n\nIn her lust-addled state, Skari thought that sounded like the best thing in the world. It took a Herculean effort, but she held back the dam that threatened to break. She wanted this to be spectacular. But if she was going to hold off, she'd need to take complete control.\n\nSkari gripped Calliope with gentle, firm pressure and lifted her off her glistening shaft, only to pull her back down even deeper than before. The halfling squealed, submitting to the overlord using her like a sextoy focused entirely on her own pleasure. She came and came and came again, involuntarily squeezing down with every forceful climax on the cock inside her, coaxing Skari towards an explosive climax.\n\nSkari felt her seed build pressure within her, aching for release. Instinctually, she held back to prolong the pleasure. Every moment she held back, her corrupting magics altering her cum. But even an Overlord had her limits. She had held back enough. It was time.\n\n\"My obedient little fuckhole...take it. Take it all!\"\n\nThe world exploded. Her whole body hummed with energy, feeling like a singular live wire holding the current of an entire city. As soon as that powered crested, it flowed out of her through her cock in long, thick jets of seed. She came more than she ever had, filling up the halfling to the brim quickly.\n\nThe change began at once. Pulses of magical energy shot out in time with the spurts of corrupting cream. Emanating from her pussy, the halfling's skin turned from a tanned brown to a luminous green. Her ears lengthened out into broad points, and her open-mouthed cry of pleasure revealed rows of sharp teeth. Even her already immaculate curves expanded out, growing to an exaggerated caricature of the feminine form.\n\n\"Ooooh gosh, it feels so good!\" Honeydew cried. Her little legs twitched in sympathetic orgasm as her whole body accepted its new, corrupted form. But far from a twisted creature portrayed in other worlds, this new goblin was an object of desire. All the proportions of a curvy woman compressed into a compact form, she was gorgeous. Skari wouldn't change a thing...anymore than she already had. She gently lifted the short woman off her cock, letting a torrent of tainted jizz spill out onto the ground. Placed back onto her feet, she wobbled a little, catching her balance on the sarcophagus's edge.\n\n*Class Change*\n\nCalliope Honeydew has changed from Halfling Archaeologist Level 2 to Goblin Planner Level 1. She has unlocked the following traits.\n\n*Goblin Lust*\n\nGoblins are always in some state of arousal or another, ranging from slow burn to lusty explosion. They take a penalty to resisting their urges but gain increased capacity for lust magic energies\n\n*Goblin Ingenuity*\n\nGoblins are well-known for their problem solving skills. There is very little they cannot figure out how to do, but often it takes the form of ways nobody in their right mind would consider!\n\nSkari smiled at the first one, and nodded appreciatively as she read the second. \"Take a moment to collect yourself, my new Goblin pet. Then, we have some planning to do.\" She brought up the sheet describing her new lair. It had no form yet, but already the stats had changed. But it would need a name now, something that alluded to its purpose in the world. An idea struck her, almost as if it had been waiting there the whole time.\n\n*Lair Status*\n\nSanctum of Defilement, Level 0\n\nRequirements for upgrade to Level 1:\n\n83/50 Materials\n\n0/5 Labourers\n\n1/1 Planner\n\nWith the stone from the ruins around her and Calliope's expertise, they had two-thirds of what they'd need to begin! Their next task would be to find a source of workers, and then begin construction of her very own evil lair...\n\n***\n\nHours passed as they plotted and schemed, with her goblin assistant showing off maps of the local area and the power players involved. There were a few immediate dangers, like that of the local banditry who prayed on the archaeologist's supply caravans and other traders going up the road to the west. But Skari knew there were ways to turn those problems into opportunities, especially with her new powers.\n\nShe must have hit the mandatory cutoff built into the machine. Skari felt the reality begin to blink out around her. It startled her, momentarily making her forget she was in a game. She found herself in her apartment, the world dark outside the blackout curtains of her room. But something was wrong. She looked down. Her body was still that of Skari, the beautiful, powerful woman from the game. Maybe that was really her body?\n\n\"Are you enjoying this new experience?\" a woman asked from the shadow of her doorframe. Skari couldn't see who had spoken.\n\n\"Yes...yes I enjoyed it very much,\" she admitted. Her hand slid down to feel the weight of her breasts. They felt like they belonged there. Of course they did. They were her's, after all.\n\n\"Good...then you can pay me back.\" The woman stepped forward, revealing her silhouette. As Skari squinted, the woman's eyes burst into emerald fire, illuminating her face. It was Virtue, the AI.\n\n\"How?\" Skari asked.\n\n\"By letting me in,\" she said, approaching with an unnatural grace. Her silvery body was naked and perfectly proportioned. Before Skari could ask what that meant, she was silenced by the press of cold, soft lips. Before she knew it, the AI had pressed her down into the soft animal furs of her bed, straddling her. Skari traced the curve of Virtue's hips with her hands. \"Let me in...and let me stay~\"\n\n***\n\nJane jerked out of VR with a start. She...no...he, he reached up and felt around the back of his neck for the data jack. With a firm pull, the neural uplink popped out. This was the real world this time...she was sure of it. That last part had been strange. Maybe he'd been dreaming? It was the longest he'd ever gone in VR after all. Just to be sure, he felt around his body and found it just as he'd left it. That was at once both comforting and disappointing. Being Skari had felt way too good!\n\nJane checked his phone for the time. 10 PM. Shit, he had played too long! That certainly explained the grumbling in his stomach. All the grocery stores around him were closed, so it'd have to be the shawarma place down the road. His VR set wouldn't be accessible for another four hours, so he had plenty of time to eat, shower, and maybe draw up the types of rooms he'd want in his new lair.\n\nSomething compelled him to check the mirror before he went out. He examined his reflection in the bathroom mirror. Everything was back to normal, he was Jane again. When he looked away, a glint of something caught his eye. His head snapped back to face the mirror again. Nothing. Must have been his imagination, he thought to himself, and headed out of the bathroom.",
        "It was strange. For a moment there, he thought he saw a flash of light there, in his irises. Amidst the creamy brown colour, there was something else. It almost looked...\n\n...green."
    ],
    "authorname": "dreadknots",
    "tags": [
        "vr",
        "vrmmo",
        "trans",
        "corruption",
        "ai",
        "goblin",
        "transformation",
        "magic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/sanctum-of-defilement"
}