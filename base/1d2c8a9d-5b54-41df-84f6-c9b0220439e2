{
    "title": "Penny and Megan Pt. 08",
    "pages": [
        "Preface:\n\nI left a bit of a cliff hanger on the last installment. A reference to trouble with Megan's ex-boyfriend. Well, the truth of the matter is that I've written that part about six times now and can't get it to read correctly. I think, perhaps, I was getting too anxious to have P&M end in Part 10 and tried to do too much too fast. There are some other concerns in their lives which need to be covered before we deal with him.\n\n* * * * * * *\n\nSaturday, August 2, 2014, \"Mistress.\"\n\nIt had been a month since Penny first had sex with me and I'd told her I was going to claim her. It didn't happen all at once, but I realized I really was happy with her. I'd expected her to spend almost all her time as the kitten. And she did spend most of her time that way, but she also spent several hours a day as a woman. Usually nude, which I'd taken some time to adjust to.\n\nI still tended to wear panties and a t-shirt around the house but, sometimes, would do without one or the other, which delighted Penny. She's convinced me to spend a Saturday nude. I enjoyed it, to an extent, but I still had some body image issues to get over. My small breasts, height, and how thin I was made me self conscious. Especially around her enticing voluptuousness.\n\nShe commonly did her cat things, lick my hands or face, rub her body around my legs, climb in my lap an so on. But if I wasn't wearing panties, once in a while she'd attack my pussy with her mouth. And she was right when she said she was very good. I really had just seconds to stop her during one of these attacks before she had me. At those moments I really wondered who was in charge?\n\nShe did whatever I told her, but when she took me this way I was helpless. If I was standing, I had to grab something and hang on. A few times she made one of these attacks then stopped just before I came. She called it \"edging.\" She be going at me furiously then just turn and walk away.\n\nShe'd go sit a few feet away and groom herself, leaving me to either try to calm down or to finish myself off while she watched. She said she loved watching me masturbate. After this happened a few times I guess I came to believe her because I always did when she did this to me. And, again I wondered while doing it, who's really the mistress?\n\nShe also started to bite me sometimes, usually when I was petting her. In an odd bit of acceptance, I didn't think anything of it the first few times. My cat had done the same thing when it was a kitten. I'd become so adjusted to her being a kitten that I'd hardly noticed it.\n\nI was planning to formally claim her tomorrow. I had bought her a new collar and had a gold tag made for it. One of those with \"My name is\" on the front and \"If found, please call\" on the back. Her name and my cell phone number. I'd also bought her new ears and a tail, having gathered a sample of her hair from her brush and paid to have them made to match.\n\nPenny rarely just up and offered opinions, and didn't talk much about her past. She'd answer anything I asked, but didn't often offer anything without prompting. She wasn't so much secretive as she didn't think her past was important.\n\nSo, this Saturday afternoon, with my plans for tomorrow, I decided to ask about her dropping out of the world so suddenly. We'd just finished lunch, which we'd had in the back yard. She from her cat bowls, me the more usual way. I was sitting in the grass, leaning up against one of the light poles along the brick paved path that went to the garage.\n\nShe was laying partially on the grass, but with her upper body in my lap. She had the back of her head up against my stomach so we both faced the same direction. I was petting her, from her head down her side and over the swelling of her hips. Every couple of strokes I'd also go further and run her tail through my fingers. I thought that the new one was so much softer and a better match for her hair. I wiggled her cat ears a bit. Her tail and ears had certainly seen a lot of use. I made a mental note to order a couple more sets of the new set, so we'd always have fresh ones on hand.\n\nI said, \"Penny, you never did tell me why you dropped out of the word. I understand that you found the pressure to much, but your disappearance was so sudden. Don't tell me if you don't care to, I don't want to raise ghosts for you. I'm just curious.\"\n\nI could hear the smile in her voice, \"I'd fight ghosts for you, Megan.\"\n\nI was still petting her, but could Sense she was a little bit tense.\n\nI said, \"I love you. I see you don't want to. I'm sorry I asked.\"\n\nShe was still quiet, but relaxed.\n\nShe said, \"I love you too, Megan. I have almost from the start.\"\n\nAnother pause. Then, \"I'll tell you.\"\n\nI said, \"Please, I don't need...\"\n\nShe cut me off, \"Hush.\"\n\nI smiled down at her. She hushed me from time to time when she wanted to say something. I don't think she was even aware of how inconsistent that was with the idea that she was supposed to be the submissive in this relationship.\n\nShe began...\n\n\"Why I disappeared you know. I realized very suddenly that I was becoming something I didn't want to be. I didn't want to be an \"inspiration to young artists\" or a role model or anything else. I just wanted to paint. I found that so much of my time was being taken up with public appearances and speeches and gallery openings and what not that I didn't have much time to paint. And when I did I got interrupted or was distracted and my work wasn't the same.\"\n\nShe asked, \"You had a cat you raised from a kitten, right?\"\n\nI said, \"Yes. My parent's thought it would teach me responsibility. I guess they were right.\"\n\nI didn't mention that almost every child with Powers was given a pet. Cats were favored because of their independence. The child had to learn to get along with them rather than make them submit to the child's will.\n\nShe asked again, \"So, you had to take care of it?\"\n\nI replied, \"Him, yes. I got him as a barely weaned kitten for my fifth birthday.\"\n\n\"Well, mine was different. My parent's got me a kitten that was born the same day I was. As I grew up he was always there. He didn't get a name until I gave him one. Everyone just called him \"cat\" or \"kitty\" or \"the cat\" until then.\"\n\nShe said, in a quieter tone, \"That's why I love it so much when you call me 'kitty'. Memories.\"\n\nShe continued, back at her normal tone. \"When I did give him a name, I was still pretty young. Learning to name things by what they did. Chairs were 'sit on's' and telephones were 'talk to' and so on. I guess it wasn't surprising that I called the cat 'Meee,' after the sound he made when he wanted attention.\"\n\n\"Over time that got shortened to 'Me'.\"\n\nThe memories jumped back into my mind. One of the oddities of 'Penelope' was that she always brought this small orange cat with her wherever she went. Places with restrictions against animals had to either make an exception for Me, or Penelope wouldn't appear.\n\nBut she was still talking, \"Me was sort of a security blanket for me. People tried out all kinds of ideas about why his name was 'Me,' but, oddly, nobody ever just asked me. I guess they liked their wild theories better.\"\n\n\"And, of course, my handlers were forever trying to get me to give up taking him everywhere and got quite angry with me when some place wouldn't make an exception and I didn't show up. I wished I could have been strong like that about other things.\"\n\nI Sensed her turn sad. \"He died that day in Chicago the morning before the opening. Natural causes, he was pretty old by then, for a cat. I wanted to cancel my appearance, to fly him home, to my parent's, and bury him. My manager said I couldn't do that, the show was too important.\"\n\n\"I went to the opening, but wasn't paying much attention to anything. Among other things, I couldn't figure out what to do with my left arm. He snuggled in between my body and my left arm, under my breast, when I had to be on my feet. The space there felt empty and I was fretting that someone would throw him in the trash before I could get him home.\"\n\nShe was quiet for a long time. I could Sense that it wasn't time to interrupt. I waited. Her mood changed, turned angry.\n\n\"Then my manager said, 'Jesus, Penelope, lighten up. It was just a cat.\"\n\n\"And, for a moment, I was strong. I said, 'You're fired,' turned to leave and collapsed to the floor, sitting, hugging my legs to my chest with my face in my knees and cried and cried and cried. My publicist, who happened to be there, got the gallery manager to clear the room then had my body guard...\"\n\nShe paused. \"I had a body guard, for crying out loud, Megan!\"\n\nShe continued, \"...had my body guard pick me up and carry me out. Called an ambulance and I went to the hospital. Then she did her best to hush it all up. She and the body guard are still on my payroll, but they managed my charitable interests now.\"\n\nShe'd calmed down and just lay there. \n\nWhen I Sensed she was calm enough, I asked, \"So that's why you decided to become a kitten?\"\n\nShe rolled over and look up into my eyes.\n\n\"No. I'm not a kitten as a tribute to Me or anything like that. I tried it out before I was ten years old. He seemed like the happiest creature I ever encountered. I tried it and loved it. I've always loved it. But after I dropped out of the world I realized I could do it with someone else, so I got into the BDSM and pet play communities. I wanted someone to take care of me. I'm pretty submissive, though, and that led me into the wrong company.\"\n\nShe smiled, \"But it also led me to you.\"\n\nShe started nuzzling my breasts. \"Take your clothes off, Megan.\"\n\nI asked, \"Aren't you the submissive here?\"\n\nShe giggled then said, \"Please take your clothes off, Megan.\"\n\nI ran my hand across her belly and down between her legs. She spread them apart for me. She was wet, but I'd known that from my Sense. I usually play around a bit, slowly opening her then finding her clit and sort of petting it. Working up to really trying to bring her off.\n\nThis time I went straight for her clit, and rubbed it hard. She let out a mewling sound, arched her back, and grabbed at her own breasts. I used my other arm to pull her up to me and closed my mouth over hers.\n\nI'd had a months or practice manipulating her body. I knew her very well and, as much as she could to me, I could do whatever I wanted with her. This time I brought her to orgasm in just about two minutes. And, of course, I could Sense what she was feeling which gave me a huge edge in getting the response I wanted from her body. Just before she came I broke the kiss and watched her face.\n\nShe screamed in a very human manner but also made cat like noises. I could hear her voice echo off the house and garage. If we'd had close neighbors I'm sure they'd have come to see who'd been killed. I cuddled her, rubbing her slowly between her legs and on her belly, while she came down.\n\nWhen she was almost recovered, just breathing a bit hard, I gently laid her on the grass then stood up and started removing my clothes. When she opened her eyes I was already topless and had kicked off my shoes. I quickly removed my jeans and panties.\n\nI leaned back against the light pole, reached over my head to grab it with both hands, spread my legs, then just stared into her eyes. She rolled over then sat up in her royal cat pose. I Sensed her lust as she scanned me up and down. In situations like this, Sensing how she felt when she looked at me, I felt beautiful.\n\nI thrust my hips out towards her. She meowed the same way she sometimes did when I put her food bowl down and advanced on me. Those sensuous cat like movements. She paw climbed up my front until her face, her mouth, was right in front of my bare pussy. Bare because she shaved me every morning. I thrust my hips out again, \"kissing\" her mouth with my outer labia.\n\nShe looked straight into my eyes, locked into my eyes, held me with her eyes and slowly moved her mouth over my sex, cover the upper part of my slit with her wide open lips. Still holding my gaze, she extended the flat of her tongue and licked my from my opening up over my already swollen clit.\n\nI convulsed and was thankful I had a firm grip on the light pole. God, I was so turned on I was going to come whatever she did to me. I felt her hand moving up my left thigh then two fingers plunged into my dripping hole. I shuddered again and she licked me again. The same way. And got the same reaction. I was breathing hard and could hear myself whimpering. I couldn't maintain eye contact. My back arched, my neck curled back and, for a moment, I was looking at the sky before my eyes slid shut. My entire sensation was focused between my legs.\n\nI heard, and felt, her growl into my clit. She curled her fingers around inside me and hit that special spot. The rubbed it hard and licked me one more time, but so, so slowly. Putting pressure on my poor nub. As the tip of her tongue reached my clit she closed her lips over it and sucked it into her mouth, where she licked it hard and fast.\n\nI came with a scream and nearly forgot to hold onto the light post. My knees gave out and I slid down it until I was kneeling with my back to it. I pushed off and came down on all fours. I knelt there trying to catch my breath, Feeling the tremors going through me when I felt her licking me from behind. I screeched and pulled away, but I'd come again too. I collapsed onto my belly then rolled over looking at the sky.\n\nI looked around for Penny. She was stalking me like a cat stalks a rat. Well, she was stalking my pussy. I put my hands over it and closed my legs.\n\n\"No, Penny. Too much.\"\n\nShe sat and started grooming herself again.\n\nShe said, \"If we're together long enough, you'll learn to take a lot more than that.\"\n\nI raised my head and said, \"Are you sure you don't want to be the Dominant in this relationship?\"\n\nShe stopped. Then turned to look directly at me. \"Do you want me to be?\"\n\nI dropped my head back on the grass and thought about that.\n\nAfter a few seconds, \"No. I like being in charge. But it seems that you want to run things. I don't understand.\"\n\nShe said, \"It's called topping from the bottom. Yes, I guess I do. Do you want me to stop.\"\n\nAnd something stirred inside me. I had an insight into what it meant to be a Dominant and what it meant to handle a submissive.\n\nI said, \"Yes, if you want to suggest something to me, you can. But you'll do so respectfully. Understood?\"\n\nI Sensed her mood change. A rush of lust, a rush of... I wasn't sure what to call it. I'd never experienced the emotion before in myself or anyone else. I came, in the weeks that followed, to think of it as her submission. She was comforted by my being authoritative.\n\nShe replied, \"Yes, Megan.\"\n\nI turned my head so I could see her face. And, without any hesitation, I said, \"Mistress.\"\n\nShe gasped, her eyes went wide, and her mouth hung open for a moment.\n\nShe replied, \"Yes, Mistress.\"\n\nI put my right arm out to her, she cat walked over to me and I gathered her into a snuggle, her head on my shoulder, her body against my side, with her arm and leg over my body. I wrapped my right arm around her body, my hand falling into the curve at her waist.\n\nWe could feel that we were going to fall asleep out there on the lawn, beside the walkway, under the lamp post and the dimming sky.\n\nJust as we were fading off, she said, \"I love you, Mistress.\"\n\nI said, \"I love you too, little kitten.\""
    ],
    "authorname": "VirginiaMarieAndrews",
    "tags": [
        "bisexual",
        "milf",
        "young",
        "consensual",
        "kitty girl"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/penny-and-megan-pt-08"
}