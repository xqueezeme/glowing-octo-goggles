{
    "title": "Hampered in His Plans Ch. 06",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people.  These scenes, words and actions are used only for the literary purposes of this story.  The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n\nPart 29 - Good for the Soul \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" said the lovely redheaded reporterette from the front lawn of University Hospital, with the Hospital in the background, on Monday, January 25th.  \"Channel Two News is bringing you continuing coverage of several events over the weekend, including a car explosion at University Hospital, and the arrest of an alleged donated-organ snatcher!\"\n\nBettina started:  \"The special edition Lamborghini that was destroyed in the explosion at the parking deck of University Hospital belonged to one Steven Moschel.  Mr. Moschel was found to be running an unauthorized organ delivery service, and had forged paperwork.  He is believed to have been paid well over $100,000 for stealing the organ which was meant for Amy Croyle, who died last week after another suitable organ could not be found.  Moschel has reportedly confessed to his crimes, and may soon be transferred to State or Federal custody.\"\n\nBettina continued:  \"Moschel's legal status is somewhat in limbo, in that the SBI and FBI are fighting over jurisdiction of the car explosion, and this battle is spilling over into other areas.  The SBI's Bureau of Firearms and Explosives, the SBI-BFE, began investigating the explosion last Saturday.  However, the FBI's Anti-Terrorism Task Force, based in the City and led by Special Agent In Charge Dana Fox, claimed Federal jurisdiction.  The SBI did not yield, with SBI Director and candidate for Governor Jack Lewis declaring that the FBI was violating State sovereignty and the Tenth Amendment to the Constitution in their egregious overreach.  The SBI is expected to file a lawsuit in Federal Court today over the matter.\"\n\nMore Bettina:  \"Meanwhile, Deputy Police Chief Robert Brownlee received a heart transplant Friday night.  The surgery was performed by nationally renowned cardiologist Dr. Richard Searles, who said that the surgery went very well, and that Robert Brownlee should recover fully.\n\n\"However, Commander Brownlee's status on the Police Force and in the Public Service Department is also in limbo, as Police Chief Sean Moynahan joined Sheriff Daniel Allgood in a report to the Council that Brownlee's position must be filled soon, that Brownlee is not entitled to that specific job, but could be assigned to an equivalent job anywhere within the Public Safety or Public Health Departments.  The Town & County Council is asking for legal opinions, and will make a judgment soon.\"\n\nAs Bettina signed off, Martin Nash said \"Doesn't seem right.  Nice girl like Amy really needed that organ, and died when she didn't get it.  Brownlee would've lived on without a transplant, did get one, and gets to walk to of the hospital.\"\n\n\"I wouldn't wish death even on Commander Brownlee.\" said Joanne Cummings.  \"But we did get the guy who stole Amy's organ, and her life.\"\n\n\"Yes.\" I said.  \"Yes we did.\"  I was remembering the events of the weekend...\n\n* * * * * * * * * * * * * * * *\n\nOn the previous Saturday morning, Police Headquarters was a near-madhouse.  The SBI and FBI were there.  I kicked out the SBI, saying they had nothing to do with the organ theft case.  Then I watched from the anteroom of Interrogation-1 with Chief Moynahan, Cindy, Teresa, FBI Agents Jack Muscone and Sandra Speer... while Steven Moschel was interrogated by Lt. Perlman and Detective Theo Washington.  Sergeant Rudistan, no worse the wear from his stint guarding the parking lot, was in the room as the Uniformed presence.\n\nDoctors had checked Moschel, and said that he appeared drunk.  But blood tests came up clean for alcohol and drugs... well, drugs like marijuana, cocaine, and the like.  They didn't know to look for traces of neurotoxins and pain-inducing chemicals created by the demonic brilliance of my late nephew Ned's mind.\n\nAt first, my guys got nowhere.  Moschel took the Fifth, and his Gresham & Mason lawyer was being particularly belligerent.  After a few minutes, I said \"I'm going to go assist them with their inquiries, and shut that fucking lawyer up.\"\n\n\"Crowbar, are you sure?\" asked Chief Moynahan, the only person who could stop me, but showed wisdom in not actually doing so.\n\n\"I'll just take a minute.  No worries.\" I said.  I opened the door to the Interrogation Room, and walked in... with my Tilley Hat on, the Police Badge restored underneath the Airborne wings.\n\n\"Lieutenant,\" I said levelly in the sudden dead quiet of the room, \"is this suspect cooperating?\"\n\n\"Not like I would like, sir.\" Tanya replied.  My gray eyes did not waver from Moschel's.  I could see the look of fear in his eyes, and his gaping face.  I leaned over from behind Tanya, staring harder at Moschel.\n\n\"That's... unfortunate.\" I said quietly.  \"I hope he will reconsider his situation. Things could become quite... painful for him through this long, legal process.\"\n\n\"Now just a damn minute!\" shouted the attorney.  \"Who the hell are you to come barging in here threatening my client----\"  But it was to my back, as I was walking out of the room already. \n\nThe transformation in Moschel was stunning.  He not only looked scared, he began sweating and shaking.  \"Okay, I'll talk, I'll talk!\" he gasped.\n\n\"What?!\" cried out the lawyer  \"No!  Keep your mouth shut, you've taken the Fifth!  That was not an abrogation of his right to silence!  Now let me have a moment with my client----\"\n\n\"NO!\" shouted Moschel. \"I want to talk, I want to confess!  You...\" he said to the lawyer, \"get out of here.  Now.\"  Turning back to Tanya he said \"This guy no longer represents me.  I want to talk.\"\n\n\"Well,\" said Tanya to the legal beagle.  \"I guess you can be on your way, Counselor.  There's a nice diner on University Avenue on your way out of Town, if you'd like some breakfast.\"\n\n\"I.... I'm going to get to the bottom of this.\" snarled the lawyer.  \"I'm going to find out what happened here.  Preserve the videotapes of this interrogation;  I'll be subpoenaing them!\"\n\n\"Mr. Moschel,\" said Tanya, \"are you sure you do not want this man to represent you further?  Would you like to call another lawyer to represent you?\"\n\n\"I'm sure.  I want to talk.  I want to cooperate.  I don't need another lawyer.\" said Moschel, still shaking.\n\nMeanwhile, the anteroom was about to explode.\n\n\"What did you just do, Commander?\" asked Chief Moynahan.\n\n\"Why, I just suggested he reconsider his situation.\" I said, with as much of an innocent look as I could put on my face.\n\n\"Sheesh,\" said Jack Muscone, \"That is one hell of a reputation that you've developed.  I'm jealous, for damn sure.\"  Sandra Speer just grinned at that.  Cindy refused to look in my direction.\n\nSteven Moschel gave up everything.  Within two hours, a Federal warrant to shut down Vauxhall was issued.  Another warrant to investigate City & Counties Bank was issued.  The FBI formally asked for the help of the TCPD's Data Branch, and I gave permission provided that I was also a part of the investigatory team with first knowledge of whatever they found.  It took all of five seconds for the FBI DepDirector to agree.\n\nThere was one issue.  As Detective David Krueger took over the interrogation of Moschel, Tanya came and got me.  Going to I-1, I saw that Detective Julie Newton had also gone into the Interrogation Room.  She was just listening, but staring at Moschel, and he seemed unsettled.\n\nI knocked on the glass, stepped into the room, and with the crook of my finger made that universal sign to Julie that meant 'come here'.  She came out.\n\n\"Detective Newton,\" I asked, once we were out of the anteroom and into the hallway.  \"Why were you in there?\"\n\n\"I wanted to hear his stuff about the money laundering.\" said Julie.  \"There's likely some stuff I've run across in the past, so that information can help me, and I can help David, as well.\"\n\n\"I understand.\" I said.  \"But you can watch the tapes of the testimony.  Don't go back in there until they're done.  If you have some questions, pass them along to Krueger or Lt. Perlman, or make a list and I might can give you some time with Moschel after they're done, okay?\"\n\nJulie was not pleased, but she didn't have a choice.  She agreed, somewhat perfunctorily, then headed down the hall to her office, her high heels clicking on the floor.\n\nPart 30 - Odds And Ends \n\nBack in the present, Monday, January 25th, I heard Theo Washington ask \"What about Commander Brownlee returning, sir?\"\n\n\"Months off, if it happens at all.\" I said.  \"Bettina's a bit behind the power curve;  the Council has already gotten legal opinions and have resolved the matter.  You'll see that this coming Monday... oh, that's embargoed, you did not hear a word of that.\"  \n\nThe Detectives all grinned happily.  They might not solve the Kennedy Assassination, but they knew what was up with that.\n\n* * * * * * * * * * * * * * * *\n\nCindy had not been at the coffee klatch;  she was going to City Airport to pick up two friends.  So I spent time getting paperwork done, and there was a hell of a lot of it.  I then stepped into Paulina's office, which was next to my own, to inquire about something.\n\n\"Murder can't be among the charges, Don.\" said Paulina, in reply to my suggestion of tacking that on to Moschel's long list of charges.\n\n\"Not even murder in the commission of a felony?\" I asked, still trying.  \"What about manslaughter?\"\n\n\"No.\" said Paulina.  \"Look, he'll have an adequate defense in saying there was no guarantee this liver transplant would've saved Amy's life for sure.  I talked to Dr. Searles and your wife.  They both said it was a longshot at best.\"  \n\nThen Paulina dropped her voice and said \"I don't want Teresa or Cindy to hear this, but both doctors said it was likely Amy would've died on the operating table, and if she'd survived that, it was better than 50/50 that she would've rejected the liver and would've died anyway.\"  Seeing the sad look on my face, she said \"I'm sorry.\"\n\n\"No, I understand, and you're right.  On all counts.\" I said.  \"I had just hoped... for more.\"\n\n\"He won't be executed at Jacksonville State Prison.\" said Paulina.  \"But I suspect he's ultimately going to get what is coming to him... one way or another, in this life or another.\"\n\n\"We talked about 'Justice' the other day.\" I said.  \"I don't think there's any way that bastard can be administered proper Justice on this Earth.  It will have to come from a Higher place.\"  Paulina just nodded.\n\n* * * * * * * * * * * * * * * *\n\nCindy asked me to come to Town Fitness Centers and then go to lunch with her and her friends.  So I went over there.  I went into the Co-ed side, which had a few older men working out.  Most of the weekday business was in the morning and after normal working hours.\n\nI saw Cindy talked to two women, and did a double take.  They were both drop-dead gorgeous!  A black-haired woman about Cindy's age was wearing a black dress and strappy high-heel sandals.  Her body was magnificent, and well-toned on top of that.  The other woman was older, with dirty blonde hair, full lips (a little too full, if you know what I mean), and wearing a blouse and Capri pants.  Her legs were too good for those pants, I thought as I went up to them.\n\n\"Oh, Don, there you are.\" said Cindy.  \"Ladies, this is my boss as well as my cousin, Commander Don Troy.  Don, this is Ariel and Wanda.\"\n\n\"Call me Don, please.\" I said, shaking hands with them in my flirtatious way.  The younger black-haired woman was Ariel;  she didn't really respond to me.  The older woman was Wanda, her eyes sparkled as I took her hand in mine.\n\n\"Don,\" Cindy said, \"Ariel and Wanda are looking to buy in to the gym.  They were on the 'Miss Physical America' Tour with me.\"\n\n\"If all the men in this Town look like Don, here,\" said Wanda, who had a Southern accent to her voice, \"it's a done deal for me.\"\n\n\"No doubt about that.\" said Ariel, in a friendly but more polite voice.\n\n\"How about we go to the Cattleman's Club for lunch?\" I suggested.  \"My treat.  And it'll definitely improve my reputation to be seen with three women as lovely as you are...\" \n\nPart 31 - End of the Line \n\nJust as I got back from lunch, Patrolman Hicks came up to me in the hallway.  \"Commander, we've got a problem. EMTs are trying to block the entrance to University Hospital.\"\n\n\"Okay, head on over there, call in another couple of patrol cars.\" I said.  I went to MCD, seeing Martin Nash at his desk.  I asked if he had his armored vest, and he pulled it out of his desk drawer.  We headed out.\n\nI arrived at the Hospital in my Police SUV, Martin riding shotgun.  I had deliberately gone south far enough to turn left and back up University Avenue, so that I was on the same side of the street as the drive to the Hospital.  I came right up to the kerb, blue lights blazing.\n\n\"Stay in the car for a second.\" I told Martin, who was fastening the straps of his vest over his shirt and tie.  I then got out, the red crowbar prominently visible.  The EMTs did not attack me.\n\nAcross the street was a contingent of Fire Department personnel.  They'd been occasionally staging counter-demonstrations, trying to goad the EMTs into something foolish or confrontational.  Over the past few days and weeks, the EMTs had consolidated their efforts to the front of the Hospital, where they could be seen by passersby on the highway as well as anyone going to the Hospital.  The 'Drive-By Media' had pretty much stopped covering the strike.\n\nAssistant Fire Chief (AFC) William Jefferson almost got killed as he burst across the street, as motorists had to swerve to avoid hitting him.  Undaunted, he ran up to me.  \"They blocked the ambulances, Troy!\" he shouted exultantly.  \"We've got it on videotape, three times over!  They blocked the drive and impeded an ambulance.  Arrest them all!  Clear their worthless asses out!\"\n\n\"I'll handle it.\" I said, and turned to find the EMT leader.\n\n\"God damn it, Troy!\" said the AFC, whose rank was the same as mine.  \"I said we've got them on tape breaking the law!  Now I demand that you arrest them!\"\n\n\"I said I would handle it.\" I replied, not rising to the bait.\n\n\"Fuck you!  Who's side are you on?\" snarled Jefferson.  I turned on him.\n\n\"Fuck yourself, Jefferson!\" I yelled, my hand tightly gripping the red crowbar.  \"I'm sure as hell not on your side!  Now get back across the street, and leave me to do my job!\"\n\n\"Or what?\" Jefferson yelled.  \"You gonna hit me with that thing?  Or arrest me?\"\n\n\"Not a bad idea.  I just might arrest you, right here in front of all those EMTs.\" I replied, squaring up to him.  \n\nJust then, two more cars flew in.  One had a red lightbar and was a red car, and it was Fire Chief Quinlin's.  The other one, a beige SUV with red, clear/white, and blue lightbars, contained Sheriff Daniel Allgood.\"\n\n\"What's going on here, William?\" asked Quinlin.\n\n\"We've got video of those cocksuckers blocking an ambulance.\" said Jefferson.  \"And this bastard won't arrest them!\"\n\n\"I haven't even had time to check anything out.\" I said, more to Daniel.  \"This bozo in the bad fitting uniform just ran at me and began yelling.  He's disobeyed Police instructions to get back across the street, too.\"  My implication was that an arrest was imminent.\n\n\"Patrick, get your guy across the street.  Keep them all there.\" Sheriff Allgood said, authority in his voice.  As Quinlin escorted a pouting, protesting Jefferson across the street, Daniel turned to me and said quietly \"I'll just tell you now, Don.  Put an end to all this.  The Council is not going to tolerate much more.  Either they or the Campus Police are going to swear out warrants to arrest these guys, so see what you can do before it gets uglier.\"\n\n\"Yes sir.\" I said.  I walked towards the striking EMTs as Daniel went to secure the video evidence from the Fire Department personnel.  I saw a KXTC van a little ways down the road, and a crew filming us.  The EMTs were holding signs, but were clearly blocking the lane.  I had Nash get out of the SUV and join me.  I called out \"Who's the leader here?\"\n\n\"I am.\" said Wilbur James, coming up.\n\n\"Mr. James, you can't block ambulances.\" I said.  \"There could be a dying person inside one of them.  I know that you and all your EMTs would never want to be responsible for an innocent person dying because they couldn't get to the help they need.\"\n\n\"I understand, Commander.\" said James.  \"But we're desperate here.  We're dying, and that's not just saying words.  My guys will have no jobs, no income, they'll never find work in this County and they can't afford to move, either.  They are literally...\"  He didn't finish.\n\n\"You know I'm sympathetic.\" I said.  \"But I can't let you block ambulances nor access to the Hospital.  Now the Fire Department bozos are saying they have video of your guys doing that, and breaking the law in the process.  They want me to arrest every one of you, and I obviously don't want to do that.  So have a word with your people, but let them know that I'm not leaving until they disperse from here, and from the Campus... and although I'm a patient man, when I get tired of it I'll have to start making arrests.\"\n\nWilbur James looked exhausted and totally defeated.  He knew what that meant, but he did the right thing.  \"Okay guys, let's meet back at Union Hall.  We can't stay here.\"  There were voices beginning to be raised, and while it was probably Wilbur James that persuaded them, it might also have been the three Police cruisers that drove up that convinced them to stand down.  Within fifteen minutes, they were all gone.\n\n* * * * * * * * * * * * * * * *\n\nBack at Headquarters, I was called into the Chief's office.  He had me sit down, then said \"You did a great job handling that EMT situation today.  The Fire Department guys have been harassing them for days now.\"\n\n\"But on the flip side,\" continued Moynahan, \"the Sheriff said that tapes show the strikers blocking an ambulance, and when the ambulance tried to go around over the grass, the strikers ran to block it again.  The Assistant Chief still wants the strikers arrested, but Chief Quinlin is going to lay down the hammer on his people and start squashing further hostilities.\"\n\n\"Good.\" I said.\n\n\"My second thing is that I don't know what happened with that Moschel guy, and I don't think I want to know.\" said Chief Moynahan.  \"But leave the 'cowboy law enforcement' to the Sheriff in the cowboy hat.  You be that shining example of setting the example and solving the hard crimes that everyone loves you for being, if you get my drift.\"\n\n\"Yes sir.\" I said.\n\n\"So... Monday is set.\" said the Chief.  \"Anything else?\"\n\n\"Yes sir.\" I said.  \"Some disciplines on Thursday, the 28th.  Oh, by the way... do you still have friends in Midtown you can ask to check something for you?  All my friends from down there are either in this Department or Nextdoor County now, and of course that one guy with the SBI Inspector General.  I don't have anyone down there to talk to, anymore.\"\n\nMoynahan grinned.  \"You hire us all away, then complain about it.\" he said.  I chuckled.  He then said \"Yeah, I've still got contacts down there, what do you need?\"\n\n\"The donor of Brownlee's new heart was a young man who had a motorcycle accident.\" I said.  \"I emailed you the details that I got, including his name. Maybe you can ask your friends down there to let you know what happened.  If it seems like just an accident, maybe they can be persuaded look a little bit deeper for us?\"",
        "\"Hmmm...\" said Moynahan.  \"You think something's up with that?\"\n\n\"It seems a little too convenient around the edges.\" I said.  \"It may be paranoia on my part, but maybe a quick check...\"\n\n\"I'll tell you...\" said Moynahan with mock asperity.  \"You come up with some wild and crazy shit, and then it turns out to be something big.  Okay, I'll make some calls...\"\n\n* * * * * * * * * * * * * * * *\n\nI had told Cindy to offer to let Ariel and Wanda stay at the Cabin.  Laura and I also invited them to have dinner with us at the Mountain Nest, with my mother Phyllis taking the sixth seat at the table.  Buddy was a bit skittish of people, but took well to Wanda, who quickly showed herself to be a dog lover.  Bowser watched over Carole, of course.\n\nAfter dinner, as we were talking in the den, Cindy told me quietly that it was a done deal, that Ariel and Wanda loved the gym and the Town, and they were going to buy 24% each of the ownership, and would manage and run the place.  That would really help Cindy free up some time.\n\n\"So Ariel will handle the women-only side, and Wanda the co-ed side.\" I said.\n\n\"Not much gets by you.\" Cindy said.  Confirming my observations, Cindy told me that Ariel was bisexual, and that she and Ariel had been close on the Tour, including getting to know each other's bodies very intimately.  Wanda, by way of contrast, was totally straight and had been married but had left her husband.  \"No doubt seeing you helped Wanda decide to hang around.\" my cousin said with a 'knowing' look.\n\n\"And they are both stunning women.\" I said.  \"Your business is going to grow.  Just feature them in a few ads, press releases of them buying in as owners...\"\n\n\"Way ahead of you on that.\" Cindy said.  \"And they're another temptation for your libido, as if your wife, my sister, your ADA, and the Intendent aren't enough to keep you satisfied...\"\n\nIf I'd had it in my hands, a red crowbar would've been waved in Cindy's general direction.\n\nPart 31 - Crime and Punishment \n\nWednesday, January 27th:  \"This is Bettina Wurtzburg, KXTC Channel Two News!  The EMT strike is over!  While not officially declared ended, the former EMTs have given up the fight, having made absolutely no gains as a result of their illegal actions.  Meanwhile, the Assistant Fire Chief has made a complaint to the Inspector General that Commander Donald Troy of the TCPD ignored video evidence that the striking EMTs broke the law by blocking ambulances.\"\n\nVideo, obviously provided by the Fire Department troublemakers, showed the desperate, striking EMTs blocking an ambulance's path.  Then KXTC footage taken with a long range lens showed me talking with Wilbur James.\n\nBettina said \"Reached for comment, Commander Troy said that the situation was de-escalated, and that he used discretion in dispersing the EMTs rather than arresting them, as was his prerogative to do.  Sheriff Daniel Allgood, also at the scene, said that Commander Troy made the correct call once again, and Fire Chief Quinlin said he considered the matter closed with the dispersal of the strikers, and that arrests were not needed.\"\n\n\"However, many Firefighters celebrated the end of the strike and the demise of the EMS service.\" Bettina finished as some videos of firefighters celebrating and mocking the EMTs was shown. I was sure that that video footage was well planned and carefully orchestrated...\n\n* * * * * * * * * * * * * * * *\n\nThursday, January 28th.  In the Army they call it \"Article 15\".  In the Navy, they call it \"Captain's Mast\".  They are the military's forms of non-judicial punishment.  In the Army, they have 'company grade' Article 15s, usually issued by a company commander;  and 'field grade' Article 15s, more serious punishment and administered by a field-grade officer, such as a battalion commander.\n\nEvery month or so, near the end of the month and if needed, the Town & County Police Department has similar punishments.  Most are handled by division Lieutenants, sometimes the Captain of Uniformed Personnel (at this time covered by Lt. Masters), and then up to Precinct Captains or a division Captain.  However, I as Commander decide who administers what, and I sometimes take certain cases myself.  I had three such cases today.\n\nCaptain Ross was sitting on the sofa in my office and watching that afternoon as the offending Police Officers were brought in by Lt. Masters.   The first was Patrol Officer Jeremy Hatch.  I was taking this to add weight to a host of problems from this inept officer.  Why he was still here was a bit beyond me.\n\n\"Officer Hatch.\" I said as he stood at attention before my desk.  \"You were to bring three issued warrants back to Headquarters.  However, you went to lunch first, and then brought the warrants, rather than the other way around.  While the warrants were issued, my Vice Squad didn't know that, and nearly missed a bust.  In addition, this is not the first time you've been disciplined for these types of bad decisions.  One more strike, Mr. Hatch, and you are out.  A reprimand will appear upon your record.  Dismissed.\"  Hatch left.  Sergeant Toole of Second Precinct was brought in.\n\n\"Sergeant Toole,\" I said to the older Police Officer.  \"We first have a case of you taking sides in a dispute in Second Precinct, where a black family and a white man had a car collision.  Although plenty of evidence shows the white man failed to yield the right-of-way, you issued a citation to the black driver as being at fault.  That will be resolved in Court, but I agree with the official complaint of racial bias, which is entered into your record.\n\n\"In addition, Sergeant Toole:  later that same night, you became intoxicated at a bar and engaged in a physical altercation with other bar patrons.  Fortunately others separated the sides, but your actions reflect badly upon the Police Force.  I am demoting you to Corporal, but am suspending that demotion for one year.  If you stay clean for that year, the demotion will be expunged, but if I have any more problems with you, any at all, the demotion will be applied.  Furthermore, a reprimand will appear upon your record.  Dismissed.\" \n\nAfter Sergeant Toole and Lt. Masters left, I looked at Cindy.  \"Go get her.\" I said.  Cindy left, and I put on my Duty Dress jacket, making myself look about as formal as I could.\n\n* * * * * * * * * * * * * * * *\n\n\"It's time.\" Cindy said as she entered Lt. Croyle's office.  Teresa nodded and stood up.  She was in her Duty Dress uniform, as was Cindy.  \n\n\"I have no idea what he's going to say or do.\" Cindy said.  \"So just take the asschewing and we'll drive on.\"\n\n\"Yes ma'am.\" Teresa said formally.  They left the office, Cindy leading the way, both of them feeling eyes looking at them from the Vice and MCD rooms.  They knew the seriousness of what was coming...\n\n* * * * * * * * * * * * * * * *\n\nTeresa came in and stood before my desk, at attention, looking dead ahead.  I opened the file in front of me.  Cindy stood behind her, off to one side, as Lt. Masters had stood relative to his officers when they'd come in.\n\n\"Lieutenant Croyle.\" I said.  \"Your longstanding instructions were to avoid conflict during the Christmas season, particularly on Christmas Eve.  However, you instead acted to investigate a situation at the Saskia Warehouse, which led to a larger conflict between other Officers.\"\n\nI looked up at her;  she just stood there, taking it, making no attempt to defend herself nor her actions.  Good, I thought to myself... it's time...\n\nI said \"Lt. Croyle... because of your actions, this Police Force... is rid of one very bad, dirty officer, that being Bryce.  In addition, you discovered a runaway orphan and her dog, and brought them to my home.  Because of these actions, we were able to get the girl medical attention, and the dog cared for. \n\n\"Because of your actions, Lieutenant, that girl was given a chance to live she otherwise would not have had.  Furthermore, your actions during the arrest of Steven Moschel were exemplary, and reflected great credit upon yourself, your leadership, and the Town & County Police Force.  And in his arrest, we may have a chance to clean out some of the filthiest corruption ever seen anywhere.\"\n\nI looked up and said \"Nevertheless, you did take actions contrary to the spirit of my instructions.  I am sure you understand that, no matter the result, the need to take action in this matter, Lieutenant?\"\n\n\"Yes sir.\" Teresa said, still looking ahead... perhaps seeing something far beyond this room.\n\n\"Good.\" I said.  \"You have left me with no choice, Lieutenant... a commendation will appear upon your record.\"  Teresa had not flinched, but Cindy's face broke into obvious relief.\n\n\"Have your uniform looking a hell of a lot better than it looks right now,\" I said, \"as you will be in front of the entire Police Force next Monday, receiving at least one medal.  Dismissed.\"\n\nTeresa turned to leave.  I nodded to Cindy to follow, but as Teresa got to the door I called out \"Teresa...\"  She stopped and turned around as I stood up.\n\nI looked at her as I said \"I was told that bringing you back here was a mistake.  I was told that you would never make it, that you would pop off again and do something wrong.  My judgement was questioned.  So... I am grateful that you have vindicated my faith in you.  Please continue to vindicate me.  You can go.  Captain, you also.\"  The women left my office.\n\nBack in Teresa's office, Cindy was ecstatic.  \"Did you hear that?  That was absolution!  Congratulations!\"  She hugged her friend.\n\n\"I...\" Teresa started as Cindy hugged her, then said \"Between us... I wanted to kill that bastard.  I really did.  The only thing that stopped me... was hearing Amy's voice asking me to forgive him.  I... can't forgive him, I won't... but it stopped me from killing him.  For Amy's sake.\"\n\n\"You did much better than that.\" Cindy said, hugging Teresa again.  \"Come on, I'll buy you dinner.  It's either that or another lonely night in my condo, and I want you to meet my new gym partners.  And don't forget that Sunday night we have the Orange Order dinner...\"  \n\nPart 32 - Dishonor and Honor \n\n\"Jimmy Lawson is being bound over for trial.\" said Paulina to me.  \"His lawyer filed a motion that his bail is unreasonably high, and he demands a speedy trial.  Judge Nance seemed almost overeager when he granted the motion and set Lawson's trial for late February or early March.\"\n\n\"I really will laugh if you go into labor during the trial.\" I said.\n\n\"Krasney's already considered that.\" Paulina said.  \"He's going to have someone else handle it.  He said he will be contacting you about that, as well.\"  I nodded, trying to keep my face passive, and hide my elation from the lovely black ADA...\n\n* * * * * * * * * * * * * * * *\n\n\"Are you all right?\" the lovely Sinon asked.  She had never seen him this dark, this moody.\n\n\"Would you care for a drink, my lovely Sinon?\" he asked, already a bit inebriated himself.  \"I'm having gin tonight.\"\n\n\"No thank you, I'm driving.\" she said.  \"You only drink gin when you're upset.  What's happened?\"\n\n\"That God-damned piece of dog shit, the Iron Crowbar, is what's happened.\" he spat.  \"Jack Muscone and the FBI have raided Vauxhall, they are all over City & Counties Bank like a wet blanket, and over one-third of my financial operations have been destroyed.\"\n\n\"But you still have plenty of money in other places.\" the lovely Sinon said helpfully.\n\n\"It's not about the money.\" he said. \"They are beginning to be able to trace things back to me.  I was on the verge of making the jump to new, more secure operations, but I can't now.  The Iron Crowbar has truly hampered me in my plans.  He has trapped me in the proverbial corner, and the only way out now is to fight my way out.  I cannot slip out with the shadows of the Night.\"\n\n\"What can I do to help?\" she asked.\n\n\"I was hoping you would ask that, my lovely Sinon.\" he said.  \"I have something for you to do, and it is only the beginning.  It is time now to begin using you for the purpose for which I've recruited you, trained you, groomed you.\"\n\nShe smiled, glad that at last! her time to strike had come... \n\n* * * * * * * * * * * * * * * *\n\nMonday, February 1st.  It was cold, but clear and beautiful.  It was going to be a busy day, too.\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted Bettina from in front of the Federal Building on the north side of Courthouse Square at 7:00am.  \"Channel Two News has learned that the FBI has made several significant raids based upon the information provided by Steven Moschel, who plead guilty to multiple counts of theft of donated organs, theft of drugs from hospitals, money laundering, and aggravated assault, which stems from stealing the organ meant for Amy Croyle and the fatal harm that caused her.\"\n\n\"The FBI raids are large, and could lead to some of the most important white-collar busts since the death of Henry R. Wargrave and the dismantling of his criminal empire.\" Bettina continued.  \"Several companies, including Vauxhall Enterprises, Castor & Pollux Enterprises, and John Clay Financial Services have been raided.  City & Counties Banks, based in the City, is now under investigation by State and Federal authorities.\"\n\nBettina continued:  \"And in a surprising development, University Hospital Administrator Louise Alcott was placed on administrative leave without pay, as both the TCPD and FBI have opened investigations of her involvement in the organ theft rings.  In addition, a Nursing supervisor was also placed on unpaid leave, but no details of that case have been released.\"\n\n\"Laura is going to be ecstatic about that.\" Cindy said.  We were watching in my office rather than MCD, as we'd been talking about what was going to happen at the upcoming ceremonies.\n\n\"And she's not alone.\" I replied.  \"The Hospital was close to losing some good people.  With Alcott gone, Wellman has one less headache, and everyone is happier.\"\n\n\"I can think of another organization that is happier with a person being gone.\" said Cindy.  \"The Admin people are ecstatic that Brownlee is not going to be back.\"\n\nBettina then said into the televisions of the region:  \"And the District Attorney's race is heating up in these cold months, with incumbent D.A. Gil Krasney and A.D.A. Jenna Stiles trading barbs about each other's records.  With the EMT strike and the guilty pleas of several Firemen in connection to the incident involving the rape of an EMT, the political atmosphere has settled down, and D.A. Krasney's lead is up to eleven points.\"\n\n\"How are things with Jenna?\" I asked.\n\n\"I told her that with my new gym partners coming in, I would have some time to help her with her campaign.\" Cindy said.  \"I thought that she would be happy about that, and she said she'd be glad to have me working with her...\"\n\n\"But the vibe is not there?\"\n\n\"I was going to say that I did not have to be the Iron Crowbar to see that she was more skeptical than welcoming...\"\n\n* * * * * * * * * * * * * * * *\n\nThe ceremonies would be in the backyard of Police Headquarters, our 'parade field'.  There were bleachers there, and access from the gym as well as around the side of the building.  They were scheduled to begin at 9:00am, and there were a lot of officers from 2nd and 3d shifts milling about.\n\n\"We had a bit of an issue.\" said Captain Della Harlow, the Administrative Captain.  \"The Fire Department hasn't had a Medal of Valor recipient in nearly 30 years, so they were wearing the red rectangle with the silver metal border for the Fire Cross on their duty uniforms.  We haven't had a Police Cross recipient in 30 years, but three MOVs.  The Council and the Sheriff had to tell the Fire Department to get with the program, so I had to order these for them..\"\n\nShe showed me the white rectangles, bordered by silver metal, to denote the Fire Cross and Police Cross.  They were actually not-quite-bright-white, but a mere hint of silverish-gray white.  I nodded.\n\n\"Nice.\" I said.  \"And yes, your Police Commander and Chief Emeritus won that argument with the Fire Department, and the Council took our side.\" I said.  \"But it's not a big change for the Fire Department, and the white looks good between red and blue.\"  \n\nBlue was for the Distinguished Service Award.  Chief Griswold had one from the Police and one from County-level, so his blue ribbon was bordered in gold.  Sergeant Briscoe, who'd worked with Cindy in the Disappearing Couple case, had one, and he was nearing retirement.\n\n\"And here's the biggie.\" said Della, showing me the Medal of Valor in its box.  Even though one that looked exactly like it was around my neck at the moment, I never got used to the sight:  it was still impressive to see in the box.  Della continued:  \"They asked me to order it;  I've had practice the last few years.\"\n\n\"Too much practice.\" I said.  \"It looks good.  Okay, that's at one o'clock in Courthouse Square.  Let's go give some medals away now.\"\n\n* * * * * * * * * * * * * * * *\n\nAnd there were a number of medals to give out.  A lot of Officers got Achievement Medals for a number of things;  even I got one for solving the BigPharmaCorp case.\n\nDetective Martin Nash was awarded a full Commendation Medal, partly for the Stevens case, and partly for overall service as I thought of the future.  Sergeant Rudistan also got a Commendation Medal, as he'd been doing a great many things... and keeping his mouth shut about some of them.  And, as I'd promised, Lt. Teresa Croyle received a Commendation Medal, ostensibly for busting Viscotti Cabs, but more for her overall work in Vice.\n\nThe SWAT Team got Public Safety Commendation Medals for the raid that saved Jenna Stiles.  Those were just a bit higher on the ladder than Police or Fire or Deputy Sheriff Commendation medals.  I'd've awarded them higher medals, but there was a quandary:  their armed raids are their jobs, and the Council was not going to award them higher medals every single time they went into a raid that had a firefight. But the Stiles raid was special, even by their standards, so the Sheriff solved the problem by putting them in for the overall Public-Safety-level (a.k.a. the 'County-level') award.\n\nAnd then came the piece d'resistance of the Police Force's medals day.  I read the proclamation as Captain Ross pinned a Police Star of Gallantry on Lt. Croyle's uniform.  Teresa's actions had not been 'normal', and the entire SWAT Team had written the Council to ask them to award it to her for leading the raid, as well as leading the Beanstalk Gang raid.  I had tried to get Teresa a Police Medal, but the Council did what it does, ratchets it down a notch.  Even so, the Star was considered to be our equivalent of a military Bronze Star;  it was a very big deal for Teresa to be awarded it.\n\nThen came promotions.  Because of attrition and Council edicts, there were few. But one big one... one mighty big one.  I again read the proclamation, this time promoting Della Harlow to Deputy Chief.  \n\nChief Moynahan and her husband pinned Commander Harlow's oak leaf clusters on her shoulders as the Personnel, Properties, and Public Relations people cheered loudly.  They knew what this meant, as did we all:  Robert Brownlee, bless his transplanted heart, would not be returning to the Town & County Police Force.\n\n* * * * * * * * * * * * * * * *\n\nThere was a parade through Town, composed of several Fire trucks and engines, with the honoree, Engineer Roy Easley, riding on top of one of them.  The bands of the three high schools, Town High, County High, and Booker T. Washington High, also marched in the parade.  At the end of it, on the Courthouse Square grounds, the B.T.W. High Band broke into some seriously good coordinated moves, reminiscent of Florida A&M and the 'battle of the bands', and even the graduation ceremony in the movies 'Stripes'.",
        "With most of the bad blood gone, the day went well.  At 1:00pm, the Council members, Sheriff, high-ranking Police and Fire Department officers, and other personages all took their places on stage, all shaking hands with each other and chatting.  The Fire Department had the center bleachers in the front rows.  A large crowd, well over 1000 people, had also gathered to watch as Roy Easley was brought to the front of the stage.\n\nFire Chief Emeritus Gillem read the proclamation.  Cindy was holding the box, and I took the red-ribboned medal from it and draped it onto Easley, fastening it at the back of his neck.  I then retreated, as did Cindy, leaving Easley alone to receive the tremendous ovation, well-deserved, as the newest Medal of Valor recipient...\n\nPart 33 - Epilogue \n\nAt 2:30pm or so, the majority of Police Officers began trickling back into Headquarters.  I had been talking to Commander Della Harlow about offices.  She wasn't getting mine, she thought Brownlee's space was too much, and with Gor-don disappeared, we and the Chief were going to angle for Della to have the office next to Jenna's old office, now empty.  The 'other' office was larger than Jenna's.  Even Tanya Perlman thought that would be appropriate.\n\n\"AAAHHH!\"\n\nThe scream had come from my office, and the voice was my assistant Helena's.  She looked white a sheet as we came running up.  She pointed at the wall to the right of my desk.  I looked, and felt a deep shock:\n\nPete Feeley's badge and it's frame were gone!\n\nThe Laika crowbar was gone, also.  And in place of the badge and it's frame, was a note pinned to the wall.  Putting on latex gloves, I removed it.  It read:\n\n\"<s>crossed path</s>,\n<s>incommoded</s>,\n<s>seriously inconvenienced</s>,\n<s>hampered</s>,\npositive danger.\"\n\nUnderneath was scrawled the word \"Troilus\".\n\nAmong those that had come to see what the Disturbance in the Force (literally) was about, was Lt. Tanya Perlman.  Her eyes got wide when she saw what was missing.\n\n\"Tanya.\" I said.  \"You need to be very careful.  You need to take extra precautions, especially over little Pete's security.  Ross!  Get the word out to all Detectives and all the Police Force!  Everyone is to be on watch!\"\n\n\"Yes sir.\" Cindy said.\n\n\"I'll take precautions.\" said Tanya.  \"But what does this mean?\"\n\n\"Vauxhall.  City & Counties Bank.  The organ donor ring.\" I said.  \"We've hit him hard.  We have bloodied his nose.  We have hampered him in his plans, and he is like a wounded, man-eating tiger in a storm drain.\"  I looked at the note again, foreboding in my very deepest soul...\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/hampered-in-his-plans-ch-06"
}