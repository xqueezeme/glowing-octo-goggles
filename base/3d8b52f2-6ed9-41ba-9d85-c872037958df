{
    "title": "Lost Empire Ch. 70",
    "pages": [
        "0001 - Tempro\n0003 - Conner- Thomas\n0097 - Ace - Zimmel\n0098 - Lucy\n0101 - Shelby (mother ship)\n0125 - Lars\n0200 - Ellen\n0250 - Tendra\n0301 - Rodrick\n0403 - Johnathon\n0667 - Marco - Brown\n0778 - Jan\n0798 - Celeste - Shelby (human)\n0805 - Toran\n0808 - Radella\n0908 - Tara - Mara\n1000 - Sherry\n\n--------------------------\n\nUngrown - unnumbered\n\n------------------------\n\n0999 - Zan - still lost\nRescued from Tendraxians so far\n\n-----------------------\n\n6 on Shelby\n8 on Lucy\n\n--------------------------------\n\nKnown and OR numbered\n\n-------------------------------\n\n0501 - Thaddeus\n???? - Lena\n\n-\n\nI have had a few readers ask how the Tendraxians were able to access the A.I. boxes. I am sorry for the confusion they never really accessed them completely, more a way to fool them with a type of mental warfare. That is why the A.I. boxes were confused at first not believing what they were seeing was real. I hope that this clears up the confusion. Also, many might or might not have noticed that as soon as they interacted with Lucie, that almost all of the A.I.\u2019s gained a great deal of sanity.\n\n-\n\nBoth Kimison and Rayburn were perplexed. They had worked for two days, adding as much data as they could. With the adjustments that Kimison had discovered, they were making far better progress. Though, with them needing no less than two terabytes of the data, adding only ten gigabytes at a time was slow going. Kimison was glad that he had discovered a way to add more than two.\n\nThen there was the fact that they had to wait for over an hour to allow what they had added to stabilize. Still, after two days with only four hundred eighty gigabytes, they felt they would never finish. They didn\u2019t even have half a terabyte yet.\n\nBoth of the males had tried unsuccessfully to expand what they knew. To add more data in a more stable manner. So far nothing was working, this was what had led to their frustration.\n\nTempro had been keeping an even closer eye on the two, especially since Kimison had managed to shut Tempro down. He was also keeping as close an eye on the brain enhancer as they called it.\n\nTempro was still upset that Kimison had managed to get past him so easily. He had been working nonstop to make sure that it didn\u2019t happen again.\n\n\u2018Well,\u2019 Tempro thought, \u2018he hoped that Kimison couldn\u2019t do that to him again.\u2019 A moment later he was drawn from his thoughts by Kimison.\n\n\u201cTempro? I know that you don\u2019t expect it. I have to say this to get it off my chest.\u201d Kimison stated.\n\n\u201cSir? Would you like me to call the Emperor?\u201d Tempro replied.\n\n\u201cNo,\u201d Kimison said his head down slightly. \u201cI have to apologize to you, for what I did to you.\u201d Kimison held up his hand to quiet Tempro when he tried to speak. \u201cI was feeling desperate, I couldn\u2019t get around the problem. Hell, I am almost there now, I feel that I only got around it a small bit. I forgot that you are as alive as I am, I am truly sorry that I hurt you as I did.\u201d\n\nTempro appeared before Kimison his mouth hanging open. The colonel was apologizing to him? \u201cSir, there is no need to...\u201d\n\n\u201cYes, there is, you are alive, you deserve to be treated that way. Not like a machine that is only to be used, then left alone. Alone, to only be used when the need arises I have been there Tempro, locked away \u2018til the next battery of tests.\u201d Here Kimison was vigorously shaking his head. \u201cI will never allow that to happen to you again, I remember, so please forgive me.\u201d\n\nTempro couldn\u2019t speak, this was by far the most like a living entity he\u2019d ever been treated.\n\nTempro bowed his head to Kimison, a stray tear falling from his eyes. \u201cThank you, sir, you and the Emperor are the only ones to ever treat any of us like we are alive.\u201d\n\nKimison nodded, \u201cI will endeavor to remember from now on.\u201d\n\nThen just as suddenly, Kimison turned back as a new idea came to his mind. I hope this works. Looking at Rayburn, he nodded as he started to adjust faster and faster while Rayburn added the data. His hands almost a blur, Kimison hoped that he could keep this up. When the data hit twelve gigabytes, Rayburn\u2019s eyes went large when he saw that the data stream was stable. He didn\u2019t know what Kimison had done, though it appeared to be working.\n\n__________________________________________________________________\n\nLucie returned almost half an hour later with the three females in tow. Upon entering they all rushed to the bio-bed that a fourth Tendraxian female was still unconscious on.\n\nLucie checked on the readings then called Johnathon. \u201cJohnathon, has her condition improved?\u201d\n\n\u201cNo prime Hartwell, though it has stabilized. I am afraid that her physiology, is far more unknown to me. I am attempting to access all databases that I can. I am doing all I can to bring her out of her comatose state. I...\u201d Johnathon suddenly stopped as; a steady beeping grew stronger.\n\nLucie was staring at the readings, still not quite sure about a lot of them. Unfortunately, this was one of them. \u201cJohnathon? Is she dying?\u201d\n\n\u201cStrange,\u201d Johnathon stated as several instruments came out of the bio-bed. \u201cOh my.\u201d Suddenly the beeping became even louder as several of the instruments pointed toward Lucie. \u201cI say prime Hartwell, her life signs are climbing. It appears that this started as soon as you came closer to the bio-bed. Another ten minutes, I\u2019d say she\u2019d be out of danger. Apparently, the energy that allows them to travel in transwarp, is also healing her body.\u201d\n\nLucie could only stand there her mouth hanging. She was the cure? Ok, this was going from weird, to just plain bizarre!\n\nShe turned, looked back at her brother who was looking through several files. \u201cDid you know about this?\u201d She asked.\n\nJohnathon could only look at her with astonishment. \u2018Damn,\u2019 he thought, \u2018he knew that she had spent a hell of a lot of time in transwarp space. Looking at the readings again he shook his head, good god the readings were off the scale!\u2019\n\n\u201cI knew that you being there helped to counteract the energy that prevents them from entering transwarp space. Though, I had no idea that it would also help to cure the malady, of them being poisoned by it. My god Lucie, it\u2019s like you filter the energy for them. They are probably the only ones that WON\u2019T die from the ripalon energy.\u201d Johnathon revealed.\n\nLucie looked at the unconscious female then back to her brother. She was about to speak when Bee spoke up. \u201cShe will live?\u201d She looked at the other two Tendraxian females next to her. Then almost as one, they all knelt on the floor as they bowed to Johnathon, this elicited a groan from him.\n\nAll three were almost chanting, \u201cthank you lord sir for sparing her.\u201d The longer this went on, the more uncomfortable he got.\n\n\u201cPlease stand I did nothing; it was my sister.\u201d Johnathon was saying trying to get the females off the floor.\n\nBee\u2019s head suddenly snapped up as she looked at Johnathon with a confused look. \u201cShe is your sister? Lord sir, we have never heard of a male saying that he had a sister. Your people have very different customs. No male on our world would ever admit to such a thing.\u201d\n\nJohnathon looked at Lucie shocked a moment, then he felt his ire start to rise.\n\nLucie recognized this as she walked to Johnathon quickly, \u201cCalm brother. If you lose your temper, it will set back everything I managed to do with them.\u201d All this was in a low whisper.\n\nAfter he took a deep breath, Johnathon released a shuttering a sigh. \u201cThank you, not sure I want to have to get them to this point again. Now if we could get them to warm up to the commander.\u201d Johnathon whispered back.\n\nLucie shook her head as she said, \u201cGood luck with that. They have been conditioned to fear him. I\u2019m not sure I can break through that, or anyone else for that matter. Then again, the Empress did make an impression on them that\u2019s for sure.\u201d\n\n\u201cWe can only hope Lucie, we can only hope,\u201d Johnathon said.\n\n__________________________________________________________________\n\nOnboard the Jitaku ship, Onai\u2019s brother Riku, was going through the readings again. For all intents and purposes, General Daniel Norman, was where he had wanted to be. When he left Jitaku, all those years ago, he had left explicit instructions.\n\nAs he fingered the medal that was under his shirt, a grim smile came to his lips. \u201cI will not fail you my Ky\u016bseishu (savior) I will do as you have asked.\u201d\n\nWhile adjusting several of the wavelength outputs, Riku nodded as he saw the readings start to even out. A moment later there was a humming then the image of Isamu Sakuta appeared.\n\n\u201cLeader,\u201d Riku stated as he bowed. \u201cI have further information on Kimon\u2019s clan mate.\u201d\n\nIsamu nodded, noticing that Riku was touching the medal within his shirt. \u201cContinue Riku.\u201d\n\n\u201cHai r\u012bd\u0101, I have managed to make the mind shield stable. It appears though, that his mind, is starting to overpower it. I therefore request...\u201d Riku started, only to quiet when Isamu nodded again, then held up his hand.\n\n\u201cI considered this after your last request. I, therefore, asked the Dempsy clan to assist with this. It was after all their N\u014d isha (brain doctor) that administered the mind shield. They should be there soon; I now have to contact his lordship about this.\u201d Isamu stated then the room was silent as the hologram disappeared.\n\nRiku was still bowed saying a silent prayer for Daniel Norman.\n\nHe looked at the information hoping that he could keep his Ky\u016bseishu stable. With a sigh, he hoped that he was as good as his sister and father thought that he was. He couldn\u2019t allow anything to happen to the man.\n\nAfter adjusting several readings again, he was glad that the N\u014d isha, was already on the way. The sooner that they got here, the better he would feel.\n\n____________________________________________________________\n\nDerrick was relaxing onboard Shelby; it wasn\u2019t that long after both ships had returned. Human Shelby, of course, wasn\u2019t about to let Derrick out of her sight.\n\nHe\u2019d just managed to get his eyes closed finally feeling the tension easing from his body. A few minutes later there was a chiming signal.\n\nWith a sigh, his eyes snapped open. \u201cYes, Shelby,\u201d he asked.\n\n\u201cDerrick I have communication with an Isamu Sakuta. He is asking permission to speak with you.\u201d Shelby conveyed.\n\nDerrick sat up immediately.\n\nDerrick straightened his clothes telling Shelby, \u201cPlease put him through.\u201d\n\nThere was a shimmering in the air before Derrick then an older Oriental male\u2019s visage appeared.\n\nThe male bowed low then stated his eyes still to the floor. \u201cGreetings exalted one, I hope that I have not intruded.\u201d\n\nDerrick also bowed slightly shocking the older male. \u201cNo Isamu Sakuta, as I stated before your planet has always conducted itself with honor.\u201d\n\nThe older male seemed to blush at the praise that Derrick was bestowing upon him. Then just as suddenly, the male\u2019s tone grew serious.\n\n\u201cI wish to impart information that I feel you should have.\u201d The older male stated. When Derrick only nodded the male continued. \u201cAs you know, General Norman was a visitor to our world many times.\u201d\n\nDerrick listened as the older male went into intricate detail of the incident, Norman\u2019s heroics. Then he told of the many times that Norman honored him and the council. He also told of Norman being accepted into the Dempsy clan.\n\nDerrick knew of some of this, though the longer on the older male went, the more Derrick\u2019s amazement rose.\n\n\u201cI have told you all of this so that you know that a doctor will arrive there soon. I did not want it to be a surprise to you. Like all great leaders, you should know all of what is going on with your closest men.\u201d The older male finally finished.\n\n\u201cThank you Isamu Sakuta, again you bring great honor upon your people and planet. I will make sure all is ready when this doctor arrives.\u201d Derrick replied.\n\n\u201cYou are truly a wise leader exalted one. Be well, I hope that one day you will grace us with a visit.\u201d The male stated bowing again.\n\n\u201cI will make it a point to get there, though for now, I have an invading force to repel,\u201d Derrick told the male then slightly bowed to the older male again.\n\nAfter the hologram shut off, Derrick had a wide smile on his face. Damn, it was good to know that he had such great men in his command.\n\n\u201cShelby,\u201d Derrick stated.\n\n\u201cI am connecting you to Celeste\u2019s med-bay now,\u201d Shelby replied with a sweet smile.\n\nDerrick could only shake his head; he\u2019d forgotten again that Shelby could read many of his thoughts. It was he had to admit, a great time-saver, though it could still get irritating.\n\nA moment later the med-bay appeared before him. \u201cSo,\u201d Derrick started as he saw that Kimon was still on the bio-bed. \u201cYou are healing rapidly. Good, I hope that both of you are ready in the next twelve or so days. I have a mission for you Dempsy.\u201d Here Derrick turned toward Onai. \u201c I know that you will not permit him to leave your sight \u2018til you are joined.\u201d\n\nOnai looked at Kimon then back to Derrick. \u201cYou are correct your lordship.\u201d\n\nDerrick was nodding, \u201cI suspected as much, that is why I said the both of you. When you are out of the bed, I will brief you on the mission.\u201d\n\n\u201cSir,\u201d Kimon spoke up. \u201cI have to ask your permission, I told Onai and her brother something you don\u2019t want to be known. I told them both that the reason Daniel\u2019s mind wasn\u2019t strong was that he\u2019d been dead the last few years. That you just recently uh...\u201d Here Kimon paused causing Derrick to drum his fingers.\n\n\u201cGet on with it man, I do have things to attend to, now that I have returned,\u201d Derrick told Kimon.\n\n\u201cYes sire, I told them, that you just recently revived him. I also have to report that Duke Risen escaped.\u201d Kimon stated almost afraid to look at Derrick.\n\nTaking a deep breath Derrick sighed. Here he turned toward Onai, \u201cI know that if you swear not to talk you won\u2019t. I assume that the same is true of your brother?\u201d\n\nBowing her head Onai replied, \u201cYes your lordship, anything said here will stay here.\u201d\n\nDerrick nodded as he thought a moment. \u201cI do believe you; you need to work on this obviously,\u201d Derrick told Kimon. \u201cI didn\u2019t per se revive him, I went back in time and saved him. Any more than that I cannot say.\u201d\n\nOnai\u2019s eyes were very wide as she took this in. \u201cBy all that is holy, you are that powerful. Please forgive us for asking my lord.\u201d\n\nDerrick was shaking his head, \u201cAs I said Onai I trust you and your brother.\u201d\n\nOnai bowed to the floor, \u201cIt is a great honor to be in your confidence, oh exalted one.\u201d\n\nDerrick could only roll his eyes as he looked at Kimon who had a sheepish smile on his lips.\n\n\u201cCeleste? Estimated time \u2018til Colonel Dempsy is able to leave the med-bay?\u201d Derrick asked.\n\n\u201cSire, unlike any other patient, I cannot accurately give you a time. It appears that the Colonel and Miss Onai, heal far faster than I have ever seen before. Already the Colonel is more than half-healed, at present rate I can only estimate. Therefore, I estimate another five hours should be sufficient.\u201d Celeste advised Derrick.\n\nDerrick just nodded his head surprising both Kimon and Onai.\n\nDerrick saw there surprise then shrugged, \u201cAfter talking to your father, I would expect no less.\u201d This, of course, brought a smile to his face. \u201cI have to make sure all is ready for the doctor that is coming. I know you will make sure that he isn\u2019t harmed, Colonel. As for Risen, Mary has already informed me as to his escape.\u201d\n\n\u201cSir, you never fail to amaze me,\u201d Kimon stated.\n\nOnai scoffed as she stared at Kimon, \u201cIt is no shock to me. He is after all the exalted ruler of the old empire.\u201d\n\nKimon looked over to Derrick as the both of them rolled their eyes at her words. With a nod from Derrick, his hologram disappeared.\n\n__________________________________________________________\n\nOnai was still on the floor her face pressed to it. Slowly looking up at Kimon she nodded, \u201cHad I not before, I would forgive you all that was against you. We on Jitaku had no inkling of the extent of his power.\u201d\n\nAgain Kimon rolled his eyes at her words. She was taking her hero worship a little far.\n\nOnai caught Kimon\u2019s actions thinking a moment. \u201cI am sorry Mirai no otto, I had forgotten that you were with him for years. To you, these miracles are old hat. Please forgive me, I meant no offense.\u201d\n\nKimon looked into Onai\u2019s eyes as soon as he raised her head gently. The love and fear he saw there made his heart melt; any anger forgotten.\n\n\u201cMy Mirai no tsuma (future wife). In case you haven\u2019t noticed, I love you, therefore, there is really nothing to forgive.\u201d Kimon explained to her.\n\nAt first, it appeared that the fear was going to swallow her. Then suddenly, as if a switch was turned on, Kimon saw her love overshadow everything.\n\nKimon watched as the strong woman that he found he\u2019d loved longer than he thought he had, was suddenly shy.\n\n\u201cI...I...\u201d seemed to be all that she could get out, looking at the floor, making Kimon smile.\n\nKimon leaned close whispering in her ear, \u201cNow that I know that you love me? I can no longer wait to unite with you.\u201d\n\nThis, of course, made Onai blush even more.\n\n_________________________________________________________________________\n\nDerrick sighed with a smile as he shut off the feed to the med-bay. Laying back, he started to relax almost falling asleep when another chime from Shelby had him sighing.\n\n\u201cYes, Shelby?\u201d Derrick asked trying to not appear as irritated as he was.\n\n\u201cAgain Derrick, I am sorry to disturb you, they are ready to emerge,\u201d Shelby advised him.\n\nDerrick\u2019s eyes snapped open as he bolted upright. Now fully awake, Derrick told her, \u201cAlright let\u2019s hear them.\u201d\n\nAgain as always, there was static then a voice came through. \u201cHello? Can anyone hear me?\u201d\n\n\u201cHello, my daughter, are you in need of further assistance?\u201d Shelby stated.\n\n\u201cMOTHER!\u201d The excited female voice almost shouted.\n\n\u201c0250 I think she can hear you. Mother, is the emperor there with you?\u201d They heard Sherry say.\n\n\u201cYes my daughter, he is,\u201d Shelby replied.\n\n\u201cIt is so good to hear you again, Sherry. I am so proud of what you did. I am sorry that you had to go through that, again.\u201d Derrick told Sherry.\n\nThe young, slender, long brown-haired visage of Sherry appeared kneeling before Derrick. A moment later a light blonde haired female appeared kneeling beside her.\n\n\u201cArise, Sherry,\u201d Derrick said as the other fifteen ship holograms appeared. \u201cI am so proud of all of you, some,\u201d here he looked at Lucy and Sherry. \u201cHave made the ultimate sacrifice for the empire and me.\u201d Derrick was fighting to hold back the tears. \u201cAs have another of your brothers.\u201d\n\nDerrick looked at Sherry as he slightly nodded. Sherry\u2019s head dropped into her hands as she silently sobbed.\n\nTaking a deep breath, Derrick fought the tears again as he continued. \u201cAs I have with all the others,\u201d here he looked at 0250. \u201cDo you have a name or do you need one appointed for you?\u201d\n\n\u201cYes, sire,\u201d the slightly shaken female stated. \u201cI was called Tendra not long before my destruction.\u201d\n\n\u201cTendra, A good name, I am sure that you wear it proudly,\u201d Derrick told her.\n\n\u201cSire?\u201d A startled Tendra asked. \u201cYou mean that I can keep the name?\u201d When Derrick nodded yes with a smile on his face, he thought Tendra was going to shout in glee.\n\nTurning toward Shelby, Tendra\u2019s mouth fell open as her mother confirmed it.\n\nDropping to a kneeling position again, she opened her mouth to speak. \u201cThank you so much sire, thank you.\u201d\n\n\u201cArise Tendra, I am only happy to do this,\u201d Derrick replied.\n\n________________________________________________________\n\nHartwell could only look at the three females as they remained near to the fourth. He\u2019d thought about calling Shiloh and Grant to help with the females then thought better. Now? He\u2019d decided he better after all. The whole situation was getting out of hand.\n\n\u201cJohnathon, I need both Shiloh and Grant here as soon as possible. If they are dressed IMT immediately.\u201d Hartwell told his A.I.",
        "Less than a moment later both men were standing before Hartwell, a look of confusion on their faces. Looking at Hartwell they immediately saluted.\n\nNodding Hartwell pointed toward the three females around an unconscious fourth. Lucie looked over to see her brother with the other two men. Rolling her eyes at her brother she stuck her tongue out at him.\n\nHartwell released a sigh, then turned back toward Shiloh and Grant. \u201cI find that I cannot handle three let alone four of these females. I, therefore, need both of you to aide with the situation. I am afraid that we can\u2019t go back \u2018til the last one is conscious and cleared.\u201d\n\nThis time it was Shiloh\u2019s turn to roll his eyes. A broad smile came to his lips as he said, \u201cI\u2019m sorry sir. I had forgotten that you never really had time to date or pretty much anything else.\u201d\n\nHartwell was nodding, \u201cI found it distracting. I was far more worried about my family, both of them than I was going out or dating.\u201d\n\nShiloh was nodding also, \u201cThat\u2019s really a shame sir as it would have greatly improved your knowledge for this situation. Not all that much I can do for you, I can try to teach you though,\u201d here Shiloh leaned in whispering. \u201cI really don\u2019t have that much time. I want to see my family soon.\u201d\n\nA startled look appeared on Hartwell\u2019s face as he stared at Shiloh. \u201cSeriously man, it takes that long to learn?\u201d Hartwell asked a look of fear on his face.\n\n\u201cNo, it takes far longer. I have been married for a few decades; I am still learning.\u201d Shiloh replied.\n\nThis time the look of fear got more intense as Hartwell whispered. \u201cDear God, I\u2019m doomed.\u201d\n\nShiloh chuckled a bit, \u201cwe all are sir, we all are.\u201d\n\n_______________________________________________________\n\nNot far past the wreckage of the Tendraxian fleet, the Delcrons were steadily advancing. Onboard the lead ship of the second part of the Delcronian fleet the Emperor was poring over records.\n\nSo far, all that he had found, was leading him to the conclusion that this was an enemy that had them outgunned. Just like so long ago, to go against them would be suicide. Something he wasn\u2019t about to do.\n\nHe was already hearing grumbling from many of the fleet, many he\u2019d had to go to the ships to quell. This empire was causing him a bigger headache than he thought it would.\n\nThen there were the readings that his techs had gotten. A few moments before the ships slipped in the warp, they had read massive destructive capabilities from both ships. Capabilities that made it look like they had no shields. He had his techs working on improving this, that was why they were only moving at a quarter speed.\n\nWell, that and he wanted to make sure that his daughter had the necessary time to prepare. They were using an experimental training device. He just hoped that it worked as the techs had said it would. A thin smile crossed his features as he thought about the death threats he\u2019d made.\n\nAccording to them, the virtual training she did when she slept, implanted all the information in her mind. It was just a matter of her body catching up. Therein laid the difficulty. Though, as much of a warrior his daughter was, it shouldn\u2019t take that long.\n\nThen there was the second machine they had developed; it helped her body to catch up far faster than normal. A heavy sigh escaped his lips. This was his only daughter, so he had promised an extremely painful, long death.\n\nOn his feet, he stretched out feeling the tightness flee his body. Walking to the practice room he looked in, shocked when he saw his daughter moving so fast he could hardly keep up with her. Then to his further amazement, right after she saw him in the doorway she seemed to disappear.\n\nA huge smile passed over his features, good at this rate she should be far more than ready. Sitting in the room, he could feel her as she went around the room, her energy far stronger than he remembered it. Though the more he thought about it, the more he got worried. If the male was telling the truth, he was good, though there was one who taught him.\n\nYes he thought, there had to be others that were far better than the male to be able to teach him. He needed to gather as much information as he could.\n\nTapping his chin he thought for a few moments, then a few more. He had heard that the techs had developed small probes that could cross transwarp space. Though it would require a lot of energy he had to risk it.\n\n\u201cI need to talk to head tech Raun.\u201d He called on his comm. A moment later a cat-like face appeared on the screen of his comm. \u201cI wish to use the probes. I know the power constraints; we need the information.\u201d\n\nThe cat-like face thumped its chest. \u201cYes Emperor Kandra, I have all three set up. I am afraid though, that this will be a one-way trip. All the experiments we have made have been very successful.\u201d\n\n\u201cI want you to release them immediately.\u201d Kandra stated.\n\nPeering out the viewport and at the console in front of him, he smiled. A moment later a very small transwarp portal open with three trails leading into it then it was gone.\n\n\u2018Good,\u2019 he thought, \u2018with these we should be far more ready when the time comes.\u2019 Looking at the telemetry, he saw it was going to take hours to reach the Imperial world. Well, that is if the probes small transwarp engines lasted.\n\nIt was several hours later when a very small transwarp portal opened a million miles from the Imperial planet. They immediately started to transmit.\n\nLess than a few moments later, several alarms were going off. Mary had detected the transwarp signatures, seen the portals close. What had set the alarms off was that she had lost whatever had exited the portals.\n\nOnboard his ship, Emperor Kandra\u2019s mouth was hanging open. By the power of the feline god! There were fifteen of them encircling the planet!\n\nThat\u2019s when he noticed another ship twice the size of the others. Shaking his head he realized, there was no way they could ever hope to defeat this empire, not with that amount of firepower."
    ],
    "authorname": "Pars001",
    "tags": [
        "science-fiction",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-70"
}