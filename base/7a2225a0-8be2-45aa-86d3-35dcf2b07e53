{
    "title": "Maul Santa",
    "pages": [
        "I'm fifty-three years old and my life has evolved into something comfortable. It wasn't that way thirteen years ago. At the risk of sounding like a country song, I lost my job, the bank reprocessed my truck, my wife divorced me and she took the dog with her. All in the same year before the trees turned colors and dropped their leaves. To add insult to injury, my hair turned white almost overnight and, when I stopped shaving, my beard was white as well.\n\nA year later, forty-one years old, unemployed, single and living in a one room, barely furnished, studio apartment with more worn and dirty clothing than would fit in the one tiny closet, I was on the verge of ending it all. One rainy autumn afternoon, sitting on the floor in front of the one window I had, looking at the brick wall across the alley contemplating how to end it all with one of the two sharp knives I owned, I changed my mind. I still wasn't feeling any different. I just didn't want to end it all with a knife. I imagined the first stab would hurt like hell and not do enough damage that a second and probable third stab would be necessary and not possible. Someone was sure to find me before I died but not before I made a horrible mess.\n\nI needed to do something to make enough money to at least buy a gun and one bullet.\n\nI needed work. Any work would do. The holidays were coming. Retailers would be hiring for the end of year sales staff. I might get lucky. I bundled up and walked to the nearby mall.\n\nBack then, I didn't have the well proportioned male physique that I have now. I was prematurely gray with a full white beard and underweight. My skin had assumed an unhealthy ruddy complexion probably due to the consumption of cheap, fast food. I wandered the mall, seeking help wanted signs. I filled out several employment applications and spoke to two store managers. Nothing seemed even close to a possibility. Face it, my appearance wasn't the image most retailers wanted to showcase their establishments.\n\nI was sitting in the food court, nursing a cup of hot coffee, preparing for the walk back to my apartment, when a gentleman in a three-piece suit spoke to me. \"Excuse me,\" he said.\n\nI looked up from the fascinating surface of my coffee, where I had been watching the coffee consume the last swirl of milk, unsure if the gentleman had been talking to me.\n\n\"Excuse me,\" he repeated. \"Can I talk to you for a few minutes?\" he asked.\n\nI motioned to an empty seat at the table. \"Sure,\" I mumbled.\n\nHe sat. \"I don't mean to pry,\" he said, \"but you look as if you could use a break.\"\n\n\"That obvious?\" I asked.\n\n\"I have an inkling of what you must me feeling,\" he said. \"I was where you are myself once.\"\n\n\"Hard to believe you're still alive,\" I said morosely.\n\n\"I understand,\" he said. \"At the time, I thought suicide was my only option. My guess is that you're having similar thoughts.\"\n\n\"The world does suck,\" I commented.\n\n\"Can I offer you an alternative?\" he asked.\n\n\"I have nothing else to do,\" I admitted.\n\n\"Okay, I'm Simon Davidson,\" he said and put out his hand.\n\n\"Nickolas Myra,\" I responded and shook his outstretched hand.\n\n\"Nick,\" Mr. Davidson said. \"Let me get right to the point. I'm the manager of this mall. I need help and you seem to need work. I think I can solve both of our problems.\"\n\n\"I'm listening,\" I said.\n\n\"Work for me,\" he said.\n\n\"Okay. What did you have in mind?\" I asked.\n\n\"I need a mall Santa for the holidays.\n\n\"And you think I resemble Santa Claus? You're eyesight needs to be checked,\" I stated.\n\n\"Actually, with some minor adjustments, you're the perfect Santa Clause,\" Mr. Davidson said.\n\n\"By 'minor adjustments' you mean a full body replacement, like with someone else,\" I suggested.\n\n\"With a shower, hair and beard trim, new clothes and some Santa-like accessories, I think you'd be almost perfect. Add an attitude adjustment and a smile and you're more than believable. You'd actually be Santa. What do you say we give it a go?\"\n\n\"I'd like to be part of your fantasy but I don't have the funds for the haircut never mind the rest,\" I admitted.\n\n\"I can manage that part,\" Mr. Davidson assured me. \"Let's start with the hair and beard trim. There's a salon in the west wing of the mall. Come with me. My treat. Then we'll talk some more.\"\n\nForty minutes later, I was sporting a shorter beard and trimmed hair, both blown dried to a fluffy, Santa-like appearance. I had to admit, in the mirror, with a pair of rimless glasses and a red hat, I resembled Clement Moore's poetic Santa.\n\n\"What do you think?\" asked Mr. Davidson.\n\nWhile I was thinking about it, a child's voice from the mall aisle in front of the salon cried out, \"Look mom. Is that Santa getting a haircut?\"\n\n\"You may be right,\" I admitted.\n\nGreat,\" expressed Mr. Davidson. \"Go home, clean up, put on some nice casual clothing, black shoes and meet me in the mall office at nine tomorrow morning. We'll fit you for a Santa suit and the rest of the accessories.\"\n\n\"That's easier said than done,\" I commented.\n\n\"Problem?\"\n\n\"A big one. No funds,\" I explained.\n\nMr. Davidson took five twenties from his wallet and handed them to me. \"This should help,\" he said.\n\n\"I'd rather not take your charity,\" I said.\n\n\"No charity,\" he said. \"A salary advance.\"\n\n\"It would take forever to pay you back.\"\n\n\"Quicker than you think. You'll play Santa from noon to eight in the evening, seven days a week and receive five hundred dollars a day from the Friday after Thanksgiving until Christmas Eve. That's a $14,000 payday,\" outlined my new boss.\n\nI showed up the next morning in clean freshly pressed slacks and shirt courtesy of my elderly landlady, Peggy Mitchell's washer, dryer and iron and new, shiny black shoes. Mr. Davidson met me in the mall office with a gentleman who measured me and specified alterations to a Santa costume he had with him.\n\n\"You'll be working with four elves who will handle the lines, sales and photos. All you have to do is listen to the children tell you what they want for Christmas and respond appropriately. Never make promises. You don't know the financial realities of their parents. One of the elves will take notes and give them to the parents to handle,\" explained Mr. Davidson.\n\n\"If a child wants to sit on your lap, that's fine. Just don't make any child do something they're uncomfortable with. Let the elves and parents handle problems with the children,\" further instructed Mr. Davidson.\n\n\"By the way, how are you with children?\"\n\n\"In general, I like children and they usually relate well to me,\" I answered.\n\n\"That's all it takes,\" agreed Mr. Davidson. \"And, you can call me Simon in the future.\n\n\"Thanks, Simon,\" I said. \"I really appreciate your confidence in me.\"\n\n\"I flatter myself with my ability to read people and I think you're going to be fine,\" Simon told me.\n\nThanksgiving was the next Thursday. My landlady, Peggy, and I shared turkey sandwiches and a cheap bottle of red wine. I arrived at the mall at eleven in the morning the next day. I left enough time to change into the Santa costume and meet my elves.\n\nSimon's taste in elves was as good as his ability to judge people. They were young college coeds wearing short red and white outfits that showed off their obvious attributes. Eye candy for the fathers bringing their children to see Santa and they were overjoyed to be working with Santa.\n\nIt would have been an understatement to say that I was nervous that first day. Fortunately, the day started slowly and by the time the lines began to form, I had the butterflies in my stomach flying in formation. All the kids were anxious to see Santa. Most wanted to sit on my lap when they listed their wants for Christmas. Only one little guy had a boisterous breakdown at the concept of meeting Santa. His mother was pushing him to sit on my lap without success. Fortunately, the elves were helpful in calming him down and, when I sat on the floor to talk to him, he stood calmly in front of me and told me his dreams of gifts for Christmas.\n\nOn Monday, Simon handed me an envelope. He told me it was an advance against my pay. Later, when I checked the contents, I found fourteen hundred dollars, pay for my first three days less the hundred he had loaned me earlier. I shared my windfall with my landlady. I handed her two hundred for her kindness in helping me get ready for my first meeting with Simon. She responded and I soon had a larger domicile, with a separate bedroom and a larger closet. \"You clean up really nice,\" she commented.\n\nPayday was Thursday. I got the remainder of my first week's pay.\n\nThe elves and I shared a dressing room to get into our costumes. It was a mostly bare room with several chairs, lockers for our costumes and street clothes and dressing tables for the elves to check their makeup. We were all uneasy the first couple of days, changing into our costumes in front of each other. By midweek, the comfort level was vastly improved and the elves were frequently topless in front of me changing into their elf costumes that didn't require a bra and I was comfortable in my Fruit of the Looms changing into my Santa Suit. It didn't seem sexual although several of the elves had breasts I'd love to explore and I had to turn my back several times when my man parts responded inappropriately.\n\nWe settled into a comfortable pattern, Santa and his elves greeting wide-eyed children and their proud parents. Tuesday of the second week provided a sudden, welcome change in the routine. Early in the afternoon, I noticed three young women hanging around the North Pole area. They gave me the impression that they were coeds at the local university. They were dishing with each other and seemed to be daring each other to see Santa. After about an hour, one of the coeds, the one with the largest breasts, got into the line behind several five to eight year olds. Her companions laughed and pointed to her and she gave them a sly middle finger salute when she thought no one was looking.\n\nShe paid for a picture and eventually stood in front of me. I looked at her, confused by her presence. \"Can I sit on your lap?\" she asked.\n\n\"Of course,\" I told her. I'd have been a fool to refuse.\n\nShe settled on my lap and squirmed around until she was comfortable. I was decidedly uncomfortable. She had managed to maneuver my penis into the space between her cheeks squeezed into her tight shorts with the expected results. She put one arm behind my neck and said, \"Hi, Santa. I'm Sara.\"\n\n\"Hi, Sara,\" I said. \"What can I bring you for Christmas?\" I asked.\n\n\"I think I've found it already,\" she said and wiggled her ass against my budding erection.\n\n\"I'm not sure that's available,\" I told her.\n\n\"That's okay,\" she said. \"I was just checking if Santa wanted anything for himself for Christmas.\"\n\n\"And, what did you learn?\" I asked.\n\n\"That everything about Santa is exaggerated,\" she said.\n\nSpeechless, I turned her toward the camera for her picture. She smiled for the photo and slid invitingly off my lap. \"Thanks Santa,\" she said as she left.\n\nJulie, one of the elves whispered in my ear, \"That was interesting.\"\n\n\"It certainly was,\" I whispered back.\n\n\"I can see that,\" she responded. \"Maybe I'll tell you what I want for Christmas some day.\"\n\nI was speechless again so I turned to the next kid and her mother. Fortunately, the little girl didn't want to sit on my lap and the few minutes I spent with her gave me the time I needed to relax my potential embarrassment.\n\nThe next day, the three coeds were back. They engaged in the usual banter with each other before the two who hadn't seen Santa the day before got into line. I had a good idea what was coming and I took a short break to arrange myself into a position I thought would avoid the events of the previous day.\n\nMy effort was ineffective. Molly, the first to get to me, sat in my lap and, when she was unable to get as comfortable as she wanted, she brazenly used one hand to reposition me, hopefully unnoticed by anyone nearby. Sara, watching from the sidelines, almost collapsed in laughter.\n\nSatisfied, Molly expressed her desire for Christmas and I told her I was pretty busy that day and I was sorry to disappoint her. She left and I was sure she wasn't disappointed. Sue, the third coed of my experience, quickly replaced Molly with similar results. When she left the three of them blew kisses in my direction and walked away arm in arm, asses wiggling as they disappeared down the mall.\n\nNext was a woman with her son. He appeared to be about six years old and his mother in her late thirties or early forties. The boy sat on my lap, unaware of my extended body part, and told me his extensive list of Christmas gift requests. After we got his photo, one of the elves led him away. His mother paused in front of me.\n\n\"Can I tell you my Christmas wish?\" she asked.\n\n\"Of course,\" I said.\n\n\"Great,\" she said and she turned to sit in my lap. No way was this going to be comfortable for either of us.\n\nI was wrong, she was very comfortable with what she discovered. I imagined I could feel her heat through Santa's trousers.\n\n\"Those young ladies were a challenge,\" she commented.\n\n\"True,\" I admitted.\n\n\"They're too young for you,\" she continued.\n\n\"Possibly,\" I said.\n\nShe laughed quietly. \"I'm not,\" she said.\n\n\"Oh,\" I managed to say.\n\nShe turned on my lap for her photo. She used one hand on my leg and the other directly on my erection to lift her body to make turning easier.\n\n\"I'm not wearing panties,\" she told me after the photo. \"Do you want to check?\"\n\n\"Not here,\" I said.\n\n\"A wise decision,\" she said. \"When do you get off?\" I wonder if she was aware of the double entendre.\n\n\"Eight,\" I continued with my one word responses.\n\n\"Meet me at Applebee's bar out front when you finish here,\" she offered.\n\n\"Okay,\" I said without thinking.\n\n\"Good,\" she said. \"Then I can tell you what I want for Christmas.\"\n\nWhen she left, my favorite elf was back again. \"Are you okay?\"\n\n\"I think so,\" I said.\n\n\"Do you need a break?\" she asked looking at my expanded package.\n\n\"No, I'll be fine,\" I said.\n\n\"I'm sure you will be,\" she said as she left to attend to the next family.\n\nAfter eight, the atmosphere in the changing room was noticeably friendlier. I removed the top half of the Santa costume and hung it on a hanger in the locker. I removed my shoes, lowered the bottom half of the costume and sat in a nearby chair to complete the removal. I was sitting in my t-shirt and briefs for a second, when Julie came over and sat in my lap. She was topless and wearing only panties. It was impossible to hide the shadow of her pudenda or my reaction. \"See anything you like?\" Julie asked.\n\n\"You already know the answer,\" I told her.\n\n\"I do,\" she said and I think we should explore the possibilities further.\"\n\n\"Julie,\" I said, \"Not tonight.\"\n\n\"I know. You already have a date,\" she said. \"I just wanted you to know that Santa is entitled to gifts for Christmas too.\" \n\n\"I'd like that,\" I said.\n\n\"So would we,\" she said.\n\n\"We?\"\n\n\"We! Before Christmas,\" she asserted.\n\n\"The nights are short before Christmas,\" I said.\n\n\"Okay,\" she agreed. \"After Christmas but before New Year's.\"\n\nShe left to talk to the other elves while I dressed in civilian clothes.\n\nI got to Applebee's near eight thirty. The lap sitting woman of my afternoon was sitting at the end of the bar waving to me. She looked different in the light of the bar. She was wearing the same clothes as the afternoon and appeared to be in her late thirties. She wasn't overweight but she wasn't morbidly thin either. I could admire some of her more promising attributes that escaped me in my earlier confusion.\n\nI sat next to her with my back toward most of the restaurant and she turned slightly toward me to ease conversation. \"Hi, Santa. I'm glad you came. I wasn't sure if you'd show up.\"\n\n\"Hi,\" I responded. \"I wasn't either but I wanted to satisfy my curiosity.\"\n\nThe bartender came by and she ordered a Sapphire martini with no vermouth and olives. I ordered a pint of Guinness.\n\nWe said very little to each other until the drinks arrived. \"Thanks for wearing the same outfit as this afternoon. I might not have noticed you otherwise.\"\n\n\"You're welcome,\" she said. \"I'm wearing the same outfit and I've added nothing,\" she teased me.\n\n\"So,\" she said, \"tell me about your curiosity.\"\n\n\"You did offer a hard to resist opportunity,\" I told her.\n\n\"So,\" she said.\n\n\"So?\" I questioned.\n\n\"Are you going to check?\" she asked.\n\n\"Here?\" I asked, a more inviting repeat of my concern earlier in the day.\n\n\"Why not?\" she asked. \"This is less public, the lighting's dim and I don't think anyone is watching.\"\n\nWhen I didn't move, she moved her stool closer to me until our knees were touching. \"Give me your hand,\" she ordered.\n\nI offered my hand. She took it and placed on her knee under the hem of her skirt and separated her legs invitingly.\n\nI still didn't move.\n\n\"What's the problem?\" she asked.\n\n\"Here we are, having an adult conversation and you're suggesting I slide my hand up under your skirt and verify something I already know is true and I don't even know your name.\"\n\n\"I guess I've gotten a little ahead of myself. Angela,\" she told me.\n\n\"Angela,\" I repeated. \"I like Angela. Can I call you Angie?\"\n\n\"Angie,\" she mulled. \"No one's called me Angie since college.\"\n\n\"It seems were on the way to repeating things we haven't done since college,\" I commented. \"So, Angie it is.\"\n\n\"I can live with that,\" Angie said. \"And you are?\"\n\n\"Oh, how careless of me,\" I admitted. \"Nick.\"\n\n\"As in St. Nick?\" Angie asked.\n\n\"Only between noon and eight, every day until Christmas,\" I said.\n\n\"And Nick is your real name?\" Angie asked.\n\n\"It is,\" I confirmed. \"Any further resemblance between me and St. Nick is merely coincidental.\"\n\n\"Angie and Nick,\" said Angie. \"I think we make a nice couple. Tell me, do you have a car outside?\"'\n\n\"No,\" I said. I live nearby. I walk to the mall. Why do you ask?\n\n\"I like the idea of repeating some my college hi jinks but I draw the line at getting laid in the backseat of a car ever again,\" Angie explained.\n\nI had no response. I took a sip of my beer with my free hand.\n\n\"I'm still waiting,\" said Angie.\n\n\"Waiting?\" I asked.\n\n\"For you to check,\" she said.\n\n\"As you request,\" I said. I moved my hand between her legs, turned my palm up and slid my hand slowly between her thighs in the direction of her crotch. I confirmed the absence of panties. I also confirmed swollen labia and a damp and heated space between them. Satisfied, I began to remove my hand. Angie grabbed my hand through her skirt and held it in place. She slid her body toward me on her stool. I extended two fingers and Angie continued sliding forward until my fingers were between her labia and inside her up to the first knuckle.\n\nAngie closed her eyes and we held that position for several moments. Angie opened her eyes and let go of my hand. I reluctantly removed it from between her legs. Not knowing what to do about the residue on my fingers, I put them in my mouth and cleaned them off.\n\nAngie closed her eyes again. Her knees pressed together and I saw her tremble slightly.\n\n\"Fuck,\" she whispered. \"I can't believe that just happened.\"\n\n\"Did I miss something?\" I asked.\n\n\"No, you caused something,\" Angie said.\n\n\"I'm listening,\" I said.\n\n\"When you licked your fingers,\" Angie explained, \"I had a small orgasm. Something that usually leads to something larger. That's never happened before,\" she asserted.\n\n\"You've never had an orgasm before?\" I asked.\n\n\"No. I've had thousands of orgasms, just never sitting on a bar stool watching some guy taste me rather than wiping his fingers on a napkin or his pants.\"\n\n\"You've done this before?\" I asked.\n\n\"Actually, I haven't,\" Angie said. \"I've never been this brazen. I think I like it but I'm a bowl of jelly inside.\"",
        "\"That pretty much describes me at the moment,\" I confirmed. \"Where do we go from here?\"\n\nAngie reached into her purse and produced a white plastic card. She put the card on the bar in front of me.\n\n\"What's this?\" I asked.\n\n\"Where we go from here,\" Angie said.\n\n\"And where's that?\" I asked.\n\n\"Room 214 in the Holiday Inn Express next door,\" Angie stated.\n\nShe finished her drink, stood up and smoothed her skirt. \"Don't disappoint me,\" she said.\n\n\"I don't have a toothbrush,\" I quipped.\n\n\"You can use mine,\" she said and walked away from the bar and out the front door.\n\nI finished my beer, picked up the room key and followed her out the door.\n\nOutside, I didn't see Angie anywhere but the Holiday Inn Express was well lighted and about a block away.\n\nI walked to the hotel, through the lobby and stood waiting for the elevator. I exited the elevator on the second floor and followed the signs to room 214. I knocked softly. When I didn't get an answer, I used the room key and opened the door.\n\nThe room was dimly lit and the drapes drawn. Angie's clothing was tossed over the back of the chair and Angie was lying in the queen-sized bed with the covers drawn up to her neck.\n\nI closed the door and stood facing the bed. \"Don't dawdle,\" Angie said. \"Drop those clothes and join me.\"\n\nShe held up the covers in invitation. The image of her naked body supine on the white sheets in the dim room was all the invitation I needed. Minutes later, I was alongside her, naked, and kissing her with my arms around her body.\n\nI followed up, kissing her breasts and inhaling the feminine aroma that drifted up from between the sheets.\n\n\"Nick,\" Angie said. \"I want to repeat everything I can remember from my college years except the back seat of Eddie Bowden's Chevy, but, right now, I want to feel you inside me. We're going to get there eventually and I don't want to wait. Everything else is going to be much easier and more satisfying after we fuck each other.\"\n\nI lay alongside her, hesitant of continue.\n\n\"What's the problem?\" Angie asked.\n\n\"I have no idea,\" I told her.\n\nAngie reached between us and held my limp penis in her hand.\n\n\"Oh,\" she said. \"I know this works. I confirmed it this afternoon. What's the problem now?\"\n\n\"I have no idea,\" I repeated. \"I want you as badly as I've ever wanted anybody but my erection seems to have gone on strike. It's never happened before,\" I finished.\n\n\"You must have some idea,\" Angie said.\n\n\"It's not physical,\" I said. \"You have an incredible body and I can feel the testosterone surging. It must be psychological,\" I suggested.\n\n\"Psychological?\" questioned Angie. \"Is there something about me that's bothering you?\"\n\n\"I have had a recurring thought all afternoon,\" I said.\n\n\"Share,\" Angie requested.\n\n\"I've never had sex with a married woman who wasn't my wife. Somehow, it seems improper, getting between another man and his wife, even if she wants to,\" I explained.\n\n\"Who told you I was married?\" Angie asked.\n\n\"No one. I just assumed it,\" I said.\n\n\"You're wrong,\" said Angie, holding up her left hand to show me she wasn't wearing rings.\n\n\"But the little girl and the visit to Santa,\" I said.\n\n\"You assumed she was my kid and I was married to her dad?\" Angie asked.\n\n\"It seemed a reasonable conclusion,\" I countered.\n\n\"Well, Meghann isn't my daughter. She's my neighbor's daughter. I took her to see Santa Claus because her mother couldn't get away from work to take her and she needs free time for other Christmas necessities that Meghann can't be around for,\" Angie explained. \"And furthermore, I've never been married. I live alone in a house too big for me next to terrific neighbors that I am more than willing to do favors for. Meghann calls me Aunt Angela. Satisfied?\"\n\n\"I feel like an idiot,\" I admitted.\n\n\"Well, let's see if you can be an idiot with an erection,\" Angie stated.\n\nShe pushed me onto my back and slid down under the covers. Without hesitation, she took my unresponsive penis into her mouth and began an incredible blowjob. I tossed the covers aside to watch.\n\nHer efforts were rewarded. I mentally added my own contribution. \"She's not married. She's not married. She's not married.\" I repeated the mantra to myself over and over until I could hardly think coherently.\n\nMy loss of coherent thought was coincident with my loss of erectile dysfunction. Angie was a miracle worker. With her help I achieved a personal record best erection.\n\n\"Don't move,\" Angie said as she climbed on top of me and straddled my hips. She slid down on my erection in short, deliberate movements, one inch at a time, until her labia were pressed against the pubic hair at the base of my erection. She closed her eyes, arched her back, exhaled and held her breath as my cock swelled within her. I was desperately trying to avoid the inevitable. I lost it all when she moved.\n\nIt was only a tiny shift of her hips that set me off. I tensed my body and pushed pulse after pulse of months of sequestered semen into her. Her eyes popped open, her body pushed against mine and her moan joined mine.\n\nEventually, I was complete, emptier than I'd been in a long time. She rolled off me and curled up next to me. \"I'm sorry,\" I apologized. \"It's been a long time,\" I rationalized.\n\n\"Nothing to be sorry for,\" Angie said. \"That's the best reaction I've ever had. I didn't know that much volume was possible. Don't go anywhere. I'll be right back. I need something more than a few tissues to prevent damage to the sheets.\"\n\nAngie jumped off the bed and, holding one hand between her legs, half sprinted toward the bathroom. When she returned, she tossed a small towel into a corner and climbed back into the bed next to me.\n\n\"Now that that's out of the way, do you think we can start over?\" Angie asked.\n\n\"I like that plan,\" I agreed, \"but it's been a long time so I can't promise anything about the timing.\"\n\n\"We've all the time we need,\" explained Angie. \"Reach back into your memory and tell me what you want?\"\n\n\"I don't need to remember,\" I said. \"I prefer to be in the moment and nothing's off the menu,\" I committed.\n\nI leaned over her and kissed her. She kissed back, adding her tongue to the encounter. We swapped tongues and saliva while I palmed her breasts and slid my other hand between her legs. Angie moaned between my lips. I refocused my kiss on her neck, chest and then her breasts while sliding two fingers between her labia.\n\nI sucked her nipple between my lips and my fingers entered her. My tongue swirled around the rapidly expanding and hardening nipple. My curled fingers stroked against the front of her vagina. Angie's body began to squirm on the bed in response.\n\nI had thought about kissing down her body, spending time with my tongue in her navel on the trip, but her body wanted something more immediate. I quickly slid down, spread her legs and kissed the hard nub of her clitoris I found waiting for me.\n\nAngie almost leapt off the bed. I tried to hold her in place with my arms over her hips without much success. I managed to keep my lips on her clitoris and my fingers inside her. Her seemingly random thrashing morphed into a stiff, arched back, trembling body and her subsequent orgasm flooded my face, hand and bed.\n\nI rested with my head on her hip and my fingers resting quietly inside her while she recovered. Several minutes later, she exclaimed, \"Fuck, there's no hope for the sheets now. Was that a memory?\"\n\n\"No,\" I quietly replied. \"It's never happened that way before.\"\n\nI wiggled my fingers inside her vagina.\n\n\"Whoa,\" Angie cried. \"I need a break before we go there again,\" she insisted.\n\nShe wiggled out from under me and rolled out of the bed. I watched her walk unsteadily toward the bathroom again. \"I need a shower,\" she declared. \"You coming?\" she asked.\n\nI followed her into the bathroom. I started the shower while she peed. We got into the shower together and I peed in the shower. \"That's not fair,\" Angie complained.\n\n\"What?\" I asked.\n\n\"You peeing in the shower while I had to sit on the toilet,\" she explained.\n\n\"Nothing stops you from peeing in the shower,\" I told her.\n\n\"Except the pee runs down my legs,\" Angie complained.\n\n\"So, what,\" I said. \"You're in the shower.\"\n\n\"You have a point,\" she conceded. \"Maybe next time.\"\n\nThe shower was a perfect segue between where we were and where were going. We washed each other gently and respectfully. Her body was firm and pliant at the same time, especially when soaped up. I sat on the shower floor and carefully washed her girl parts while she stood with her legs separated in front of me. She returned the favor and her gentle motions restored my erection.\n\n\"Neat,\" she commented. \"I think I can find useful things to do with this.\"\n\nShe stood up and bent over under the shower. \"Do you remember this part?\" she asked.\n\n\"I do,\" I said. \"But not here for the first time.\"\n\n\"Just a test,\" Angie said. \"You know. Check the size and fit for later, and,\" she added, \"it's not the first time.\"\n\nHer logic was unassailable since I was just as curious as she was. It wasn't our first time but it was the first time I would be in control. I moved behind her and I slid inside her without a problem. We moved together under the hot water falling on us until Angie was breathing heavily and I was approaching another eruption.\n\nI slid out of her to postpone the inevitable.\n\n\"Why did you stop,\" she managed to say.\n\n\"I was going to cum,\" I said.\n\n\"So was I,\" confirmed Angie. \"Stopping was not appreciated.\"\n\n\"I was saving something for later,\" I evaded.\n\n\"Later is later,\" Angie stated. \"Now is now. Get back here immediately.\"\n\nWe resumed the position and we were soon approaching our previous state of frenzy. Angie went over the edge first and I followed quickly after. We slipped apart. Angie turned around, threw her arms around my neck and kissed me passionately. \"All is forgiven,\" she said. \"That was fun.\"\n\n\"It was,\" I agreed.\n\nWe took our time, letting the hot water wash the excess fluids from our bodies. Angie squatted and expelled a blob of semen. She stood and looked at me as the hot water washed the semen down the drain. \"I probably shouldn't have done that in front of you,\" she apologized.\n\n\"It's fine,\" I said. \"If you can pee in front of me there's not much else you need to hide. Anyway, unless I misunderstand the situation, there's not much else you can do with it.\"\n\n\"If you're referring to whether I'll get pregnant, you're correct. Pregnancy is not in my future,\" she affirmed.\n\nAngie dried my body and hugged and kissed me. Since she was still wet from the shower, she had to dry my body again. I dried her body and hugged and kissed her. She didn't need it, but I dried her body again as she laughed.\n\nArm in arm, we headed for the bedroom. Angie examined the bed. \"We could call housekeeping to change the sheets but then we'd have to waste time while they worked. I'd rather we use the time productively and avoid having two sets of destroyed sheets,\" she concluded.\n\nAngie pulled the top sheet over the mess and crawled onto the bed. She patted the space next to her and I lay beside her. Dry and temporarily sated, we stroked, petted and gently kissed each other. Given enough time, even a forty-one year old man can have third erection after sex. I was no exception and things evolved until we were locked together in the common missionary position. We didn't just fuck. We didn't just have sex either. At the risk of being called inane, we made love. Long, luxurious, passionate love. We took the long climb up the orgasm mountain together and jumped off into the void together.\n\nWe repeated the process several times during the night with periods of entangled sleep in between.\n\nBefore sunrise, I woke Angie and told her I had to leave. I had to become Santa at noon and Santa needed a few hours sleep before going to work. She objected but understood. Before I left, we worked out a routine for additional nights together. Until Christmas, if Angie walked by the Santa display in the mall and waved to me, I would meet her at Applebee's after eight.\n\nLater in the day, after four hours sleep and a cold shower, I was in the changing room at the mall getting ready to be Santa. Julie, the stacked elf, came by where I was sitting. Tucking her breasts into her costume, she asked, \"How are things today, Santa?\"\n\n\"Same old, same old,\" I replied.\n\n\"You look a little tired,\" she stated as she finished adjusting her costume by pushing up her breasts with both hands.\n\n\"I'm fine,\" I insisted.\n\n\"I was just wondering,\" she said.\n\n\"Wondering?\" I asked.\n\n\"Yeah. I was in Applebee's last evening and I thought I saw you sitting at the bar with an attractive woman.\"\n\n\"She's nobody special. Just someone I met recently,\" I said.\n\n\"I thought she looked familiar too,\" Julie said. \"Didn't she bring a little girl to see Santa yesterday?\"\n\n\"She did,\" I confirmed.\n\n\"And I remember she also sat in your lap and told you what she wanted for Christmas,\" Julie stated.\n\n\"I remember that,\" I agreed.\n\n\"So, it was just a coincidence that she happened to be in Applebee's sitting next to you in the bar.\"\n\n\"No coincidence and I would appreciate your keeping my personal life confidential,\" I suggested.\n\n\"And the hotel key card she left for you on the bar too?\" Julie asked.\n\n\"Please don't mention it to anyone. I like being Santa,\" I asked.\n\n\"And Santa's elves?\" Julie asked.\n\n\"I especially like Santa's elves,\" I agreed.\n\n\"Okay,\" Julie committed. \"My lips are sealed as long as Santa has something for us before New Year's,\"\n\n\"Us?\" I asked.\n\n\"The four elves. You know. One for all, all for one,\" Julie explained.\n\n\"Sounds exhausting,\" I commented.\n\n\"We hope so,\" Julie said as she walked away.\n\nThe rest of the Christmas season at the mall followed the expected routine. Angie came by twice before Christmas Eve and, each time, Julie followed up the next day reminding me of my commitment to the elves. The mall closed early on Christmas Eve and we shut down the Santa operation at five pm.\n\nIn the changing room for the last time, I was sitting in my t-shirt and briefs getting ready to get dressed when the four elves were suddenly standing in front of me. I couldn't miss them. All four were topless and wearing just panties.\n\n\"We need to set a schedule for the next week,\" Julie told me.\n\n\"Okay,\" I agreed as my eyes bounced uncontrollably from tit to tit, nipple to nipple.\n\n\"When are you available?\" she asked.\n\n\"I don't have any plans for the next week,\" I told her.\n\n\"Cool. Today is Thursday. How about we meet on Saturday, after Christmas,\" Julie proposed.\n\n\"I guess that will work,\" I agreed hesitantly.\n\n\"You sound unsure,\" Julie commented.\n\n\"Well, you have me at a disadvantage. Four against one,\" I admitted. \"Anyone would be a little nervous.\"\n\n\"How about a little encouragement?\" asked Julie.\n\n\"You don't think the four of you standing in front of me topless is encouragement enough?\" I asked.\n\n\"We just want to be sure,\" Julie countered.\n\n\"Okay,\" I said. \"Encourage away.\"\n\nCasey, the elf at the end of the line on my left, smiled and stepped forward and directly in front of me. The others moved back to make room for her. She turned around slowly until she was facing me again, gave me a huge grin and put her thumbs into the sides of her panty's waistband. She bent over, her breasts hanging inches from me and removed her panties. She was clean shaven and her feminine charms evident as she pirouetted again and walked away twirling her panties on a finger of her right hand.\n\nJackie, Amy and Julie repeated Casey's performance sequentially. They were landing strip, bare as a baby's bottom and neatly trimmed respectively. Julie called back to me as she walked away, \"Applebee's, Saturday at six. Be there.\"\n\nI sat in my chair until the elves left, wondering how my life had suddenly changed and thanking the spirits it had. I put on my civilian clothes and I was standing in front of the bench where the elves had laid out and left their panties in a neat row when I heard someone enter the room behind me. When I looked up, Mr. Davidson was walking toward me. He stood alongside me and stared at the four pair of panties.\n\n\"Why do you think they left them there?\" he asked.\n\n\"I don't know,\" I said. \"Maybe they forgot them.\"\n\n\"In my experience,\" Simon said, \"no woman forgets her panties unless it's intentional. I think they left you a message.\"\n\n\"A message?\" I asked.\n\n\"At minimum it's a message,\" he explained. \"It could be a thank you or a tease. In this case, my bet it's an invitation,\" he guessed accurately.\n\n\"But that's none of my business,\" Simon said. \"I stopped by to thank you for your service as Santa. We've had hundreds of messages complementing you for their Santa experiences and thanking us for making it possible. I also want to ask you to come by the office on Monday morning to discuss where we go from here.\"\n\n\"I don't know what to say,\" I admitted. \"I'll be there.\"\n\n\"Nine AM okay?\" Simon asked.\n\n\"Nine is fine,\" I agreed.\n\nMr. Davidson turned to leave. \"Turn out the lights when you leave and don't forget to take your panties with you,\" he said.\n\nI walked back to my apartment trying to imagine what Mr. Davidson wanted to talk about on Monday, what the elves planned for me Saturday night and what I should do with the four pair of previously worn panties stuffed in my pockets.\n\nPeggy was waiting for me in my apartment. She had prepared a Christmas Eve meal of roast pork, mashed potatoes, gravy and carrots for both of us. We had become close friends over the holiday season despite the fourteen year difference in our ages and it wasn't uncommon to share a meal together.\n\nWe ate quietly at her table in my furnished apartment, alone with our thoughts about the holiday season and what was next for both of us.\n\nAfter dinner, we cleaned up the dishes, put away the leftovers in the refrigerator and settled on the sofa in front of the television to watch a movie. We watched the Christmas classic, \"It's a Wonderful Life\" with James Stewart and Donna Reed.\n\nPeggy woke up in my apartment Christmas morning. She had been sitting curled up next to me on the sofa watching the movie with her head on my shoulder when she fell asleep. I managed to separate from her without waking her, settled her on the sofa and covered her with a light blanket.\n\nWe had a simple breakfast when she woke. She expressed embarrassment at falling asleep and I deflected her apology telling her she could sleep at my place anytime.\n\nWhen Peggy left, I sent a \"Merry Christmas\" email to my ex without any expectation of a response and spent the rest of the day watching basketball and football on TV and finishing the leftovers from last night.\n\nSaturday morning dawned brightly. The sky was cloudless and the breeze brisk. I was obsessed wondering about my meeting later with the elves. I was confident I understood the nature of Julie's invitation but I was concerned that I had somehow misunderstood, particularly how she could commit for the others.\n\nI walked over to the mall. It was teeming with shoppers, or more likely, returners and exchangers. I didn't go inside. I thought too many of the patrons might identify me with Santa and spoil the illusion I had created for their children. I ate lunch at Applebee's. I was five hours early and Julie wasn't there. I hadn't expected her to be but I was at loose ends and killing time.\n\nBack home again, I showered, shaved my cheeks and neck twice, and dressed in pressed slacks, including underwear, a collared shirt and moccasins. At quarter to six, I walked to Applebee's for the second time that day. Julie was sitting at the bar. She was dressed conservatively and looked older than the nineteen or twenty year old elf I remembered. I might not have recognized her except the she waved when I walked in.",
        "I sat next to her. She looked at her watch. \"You're five minutes early,\" she commented.\n\n\"Do I seem anxious to you?\" I asked.\n\n\"Anxious is good,\" she said.\n\n\"You look incredible,\" I complemented her.\n\n\"Thank you,\" she responded. \"I hoped you would like it.\"\n\n\"You forgot something Christmas Eve,\" I said.\n\n\"I have more,\" she said. \"In fact, I'm wearing another pair right now. Do you want to check?\"\n\n\"Not here,\" I deflected. \"I need to return the other pair of them to you.\"\n\n\"Keep them. I have plenty,\" Julie told me.\n\n\"What can I do with them. I certainly can't wear them,\" I explained.\n\n\"That would be something,\" Julie laughed. \"I don't know. Don't wash them and put them in a drawer for a lonely night or sell them on eBay,\" she suggested.\n\nI looked at the glass in front of her and changed the subject. \"What are you drinking?\" I asked.\n\n\"Just tonic. They wouldn't serve me anything else without identification,\" she explained.\n\nI put up my hand to summon the bartender.\n\n\"Don't order anything,\" Julie said. \"We have to get going.\"\n\n\"Where are we going?\" I asked.\n\n\"That was a problem. We talked about it several times and agreed that you should join us at our sorority house. Most everyone has gone home for the holidays and won't be back until early January, so we'll have the place to ourselves,\" she explained.\n\n\"Your sorority house?\n\n\"Yeah. It's like a fraternity house except that it's all women,\" Julie said.\n\n\"I kinda assumed that,\" I said.\n\n\"I was being facetious,\" Julie said. \"I know you're not that dumb. Officially, we're Alpha Gamma Chi. It's an all girls club. Our house has lots of space, food, beer, entertainment and bedrooms. I think you'll find it comfortable,\" Julie insisted. \"And, best of all, it's off campus and only a ten minute walk away.\"\n\n\"Sounds intriguing,\" I said. \"Drink up and let's get started.\n\nWe left Applebee's, Julie put her arm in mine and led me away from the mall and my apartment. Ten minutes later, we were walking down a treed avenue with large stately homes. \"Fraternity Row,\" Julie commented. \"We're third from the end. The one with the neat lawn, manicured horticulture and the fresh coat of paint.\"\n\nThe front door was unlocked. Julie led me into a mirrored entry and locked the door behind us. She pointed to a chair against one wall. \"Wait her for a moment. I'll change and then introduce you to the others,\" she suggested as she started for the stairs leading to the second floor.\n\nLess than five minutes later, Julie came down the stairs. She was barefoot and wearing a short light blue negligee. The material could only be described as diaphanous, not see through but close enough to leave little to my imagination. She was obviously braless and wearing matching, similarly translucent panties underneath.\n\nShe stopped on the last step and turned around to give me a complete view. \"Like what you see?\" she asked.\n\n\"I like what I don't see as well,\" I said.\n\nI stood up and adjusted myself, a necessary process.\n\nJulie laughed. \"Come with me,\" she said.\n\nShe led me down a short hallway toward a large double door. I could hear muted music from the other side. Julie knocked softly. The music stopped and the doors opened slowly from the inside. The room was carpeted except for a small area in the center that was obviously a dance floor. Sofas, lounges and comfortable looking chairs lined the walls.\n\nStanding in the center of the dance floor were four of Julie's sorority sisters all dressed similarly to Julie. While I stood, mesmerized by the beauty in front of me, two additional sorority sisters walked from behind the doors and joined the others in the center of the room. Julie left me standing alone and joined the others in front of me.\n\nI was confronted with a bevy of women in a rainbow of colors. All were dressed, if you could call it dressed, in negligees, baby dolls or peignoirs in pastel colors, none duplicated. From my vantage point, I determined that none were wearing bras and all were wearing panties.\n\nAs I scanned their smiling, and inviting, faces, I recognized the other three elves. A fifth face seemed familiar and I soon realized it was Sara, the young lady in the mall who had sat in my lap the Tuesday after Thanksgiving. I looked closer and remembered Molly and Sue who adorned my lap the next day.\n\n\"Damn,\" I managed to say.\n\nThey all laughed, a sound like angels singing.\n\n\"This can't be a coincidence,\" I commented.\n\n\"Obviously,\" responded Julie. \"We've been planning this since we met you the day after Thanksgiving,\" she added.\n\n\"I'm flattered,\" I said.\n\n\"We're hoping you're more than that,\" replied Julie.\n\nTwo of the 'sisters,' I didn't know how to refer to them and 'harem' seemed harsh and misogynistic, came over to me and took my arms. The group separated and they led me to a sofa against one wall. The girls sat next to me, on the floor at my feet and on the back of the sofa next to each of my shoulders. Only Julie sat on the floor directly in front of me.\n\n\"How to start. How to start,\" she mumbled.\n\n\"If you don't have a problem with me making some suggestions,\" I said. \"I have some ideas.\"\n\n\"Ideas are good,\" Julie said and the others agreed.\n\n\"Okay then,\" I started. \"First, I assume we're all of the same mind,\" I said.\n\n\"If you're referring to sex,\" Julie said, \"then you're correct. We plan to write some new chapters in the book,\" she added.\n\nThe other's giggled in agreement.\n\n\"Second,\" I started. \"I have no idea how to refer to you as a group. Girls, gals, women, ladies, sisters all seem inadequate. I could use some help. Do any of you have any ideas?\n\nA multivoice discussion ensued. Terms like sisters, group, skirts, and hos were suggested and discarded. Sue suggested harem. Casey jumped on the term. \"I like it,\" she said. \"It perfectly describes our relationship with Nick.\"\n\n\"I thought of that myself and discarded it as sexist and disrespectful,\" I told the group.\n\nSue stood up for a moment. \"Look as how we're dressed,\" she suggested. \"We couldn't look more like a harem. I vote for Santa's Harem as our collective title.\"\n\nThe motion passed unanimously with one abstention, mine.\n\n\"Don't I have a say in this?\" I asked.\n\n\"How about 'yes,'\" suggested Julie.\n\nI've always been a sucker for women who say \"Yes.\" However, I said, \"How about something less degrading than harem,\" I said.\n\n\"Okay,\" said Sue. \"Then I suggest 'angels.'\"\n\n\"That's much better than harem,\" agreed Julie.\n\n\"Okay,\" I agreed. \"Santa's Angels is officially named and the meeting called to order. Now for the most difficult, and unavoidable issue,\" I told the Angels.\n\n\"None of us has an issue. We reached agreement before you arrived. What's bothering you?\" Julie asked.\n\n\"I'm forty-one years old,\" I told them. \"I'll bet none of you has ever had sex with anyone close to my age.\"\n\nI looked around. No one disagreed with my assertion.\n\n\"Well, most of us are no longer members of the 'slam, bam, thank you ma'am' school of sex.\n\nThere were several \"ooohs\" from the angels.\n\n\"We are more inclined to squeeze the maximum amount of pleasure and enjoyment from each encounter.\"\n\nMore \"ooohs.\"\n\n\"Another reality of men aging is that the recovery time between encounters increases with every year. Combined, these facts limit the number of encounters in the time available.\"\n\nMy audience was paying attention.\n\n\"So, the reality meets the present. There are seven of you and only one of me. I'm forty-one and you're all between eighteen and twenty-two.\"\n\n\"Nineteen and twenty-one corrected Julie.\n\n\"Okay, nineteen and twenty-one,\" I corrected myself. \"The math doesn't work. There aren't enough hours in the night for each of you to have sex with me on the same night. Even if there was, my reserves aren't unlimited. Some of you will almost certainly get short changed. That's not acceptable to me and it shouldn't be acceptable to you,\" I concluded.\n\nThe energy in the room was beginning to fade. \"You obviously been thinking about this for some time and I'm hoping you have a solution,\" Julie said.\n\n\"I have and I do,\" I answered. \"Today is Saturday. New Year's Eve is next Thursday. Including tonight, there are five nights between now and then. If my memory is correct, none of the other students are due back on campus until after New Years, including your sorority sisters. Therefore, I'd like to offer a revised schedule. I propose we all meet here, just as we are now, every night until, and including, Wednesday night and let things play out organically. I believe we'll have many opportunities to be with each other as couples or more and eliminate the need for a lottery or some other system to determine an artificial order of events.\"\n\n\"Oh yeah,\" squealed Sue.\n\n\"I'm wet already thinking about it,\" added Molly.\n\n\"Meeting adjourned,\" said Julie.\n\nSomeone was kissing my neck and two others were removing my shoes. Several hands were rubbing my chest and unbuttoning my shirt. Someone leaned over me and rubbed her breasts in my hair. Under the circumstances, I saw no reason to object. Two members of Santa's Angels, I was uncomfortable referring to them as my angels, were working on my belt buckle. Seconds later, my shoes were off and my pants undone. The two perpetrators began pulling the sides of my slacks over my hips. I lifted my hips to assist them. Soon, I was sitting on the sofa in just a white t-shirt, blue briefs and dark socks.\n\nSomeone noticed the socks and quickly removed them.\n\nJulie stood in front of me and offered her hand. I took it and stood up. She adjusted my briefs that had slipped down during my depantsing, up around my waist. Music, suitable for romantic dancing filled the room. Julie led me to the dance floor, put her left hand on my shoulder and took my left hand in her right hand. My right arm moved naturally to her waist and we began to dance in time with the music. Julie adjusted our positions. Her arms were around my neck and my arms around her body. She moved her body against mine. There was little doubt she was aware of my erection.\n\nJulie kissed me and whispered into my ear, \"You're supposed to remove one piece of my outfit.\"\n\n\"I'd be honored,\" I told her. \"Which one?\"\n\n\"I'm only wearing two. Your choice,\" she responded.\n\n\"I think I'll opt for your panties,\" I informed her of my choice.\n\n\"Oh. I'm surprised,\" she said.\n\n\"Surprised? How?\"\n\n\"I would have bet you'd have chosen my top.\"\n\n\"I like the mystery you exude in your choice of clothing and removing your panties changes the allure of your body the least,\" I explained.\n\n\"I like that,\" Julie said. \"Remove away.\"\n\nI knelt in front of her and slid my hands up the sides of her thighs. I could feel the subtle trembling of her body as she anticipated what I was about to do. When I reached her waist, I took the waistband of her panties in each hand and began pulling them down slowly. I paused for a moment to maneuver her panties over her backside and pushed them to her ankles where she stepped out of them. She kicked them aside and someone gathered them up from the floor.\n\nFrom my position on the floor in front of her, I could see the bottom third of her neatly trimmed pubic hair and the detail of her swollen labia. When I stood up, the change in angle caused her short negligee to hide her intimate parts from view.\n\nWe danced together for several minutes, the knowledge that her naked pussy was against my briefs and my erection inside them, engraved in my brain.\n\nJulie stopped dancing and kissed me with a promise of more to come. \"Now you have to remove the same item from each of the other girls,\" she said.\n\n\"You all planned this,\" I stated.\n\n\"We did,\" Julie said. \"Maybe I'll explain later but now, just go with the flow. I guarantee you'll enjoy it.\"\n\nAmy was my next dance partner. She was shaved bare and when I paused kneeling on the floor after removing her baby doll panties, obviously absorbing the detail of her pussy, she spread her legs wider to accommodate my voyeurism. Amy kissed me and made room for Molly.\n\nSara was the last of my dance partners. Her panties joined the others neatly arranged in a row on the carpet next to the dance floor. She was the only member of the Angels with pubic hair shaped into a narrow arrow pointing to the location of her clitoris. Once her panties were in place on the floor, the group formed a circle around me on the dance floor.\n\n\"You're turn,\" stated Julie.\n\n\"My turn?\" I asked.\n\n\"Yes. Your turn to remove something. You can do it or leave it to us to choose and remove it for you,\" she explained.\n\n\"Well,\" I said. \"Removing my t-shirt continues the mystery of my body just as removing your panties preserved the allure of your bodies, and I think I'll let you do the honors.\"\n\nFourteen hands gripped various parts of my t-shirt and it quickly joined the girl's panties on the floor.\n\nI remained in the center of the circle of girls.\n\n\"One more step,\" suggested Julie. \"Time to remove the last items of clothing. Only this time, you go first.\"\n\nI was surprised but it made sense. At least, I though it did at the time. \"So much for the mystery of my body,\" I said.\n\nI held out my arms in invitation. I was facing Molly and she advanced on me. She wasted no time in stripping my briefs and tossing them aside. She was on her knees in front of me and my raging erection just as I had been in front of her earlier. She was not shy about taking my erection in her hands. \"Oh my,\" she exclaimed.\n\nShe stood up and kissed me. Her arms went around my neck and one of her legs came up over my hip. She was grinding against my erection and I had to grab her body to stabilize us when her second leg went around my waist. She was squirming to connect her pussy with my erection. She shoved a hand between our bodies, found my erection and improved its aim. I closed my eyes as the heat of her vagina surrounded my cock.\n\n\"Come with me and fuck me,\" Molly whispered in my ear as she settled back on the floor in front of me and took my hand.\n\nShe led me out of the room, up a flight of stairs, down a short hallway and through the door of a feminine bedroom with a full-sized bed. She closed the door and turned toward me. Before she could react, I took her chin in one hand and kissed her gently, passion without insistence, promise without haste.\n\nMolly stood in front of me, peacefully smiling as I took the hem of her sheer, pale yellow chiffon baby doll nightie and lifted it over her head. Molly's breasts were high on her chest, bulbous, the left one slightly larger than the right, with small areola and tiny, erect nipples.\n\nI held her chin again and kissed her again. After the third kiss, I kissed her neck and then her shoulder. She tried to pull me toward the bed and I resisted. When she tried to say something, I put a finger against her lips to quiet her. Then I kissed her shoulder again followed by a kiss at the top of her right breast and another softly on her nipple.\n\nI sensed her legs weaken and I wrapped an arm around her waist and kissed her breast again, this time pulling her nipple between my lips and dragging my tongue over the peak of her nipple.\n\nI caught her as she fell into my arms.\n\n\"Molly,\" I asked. \"Would you honor me with your body?\"\n\n\"Yes. Oh God, yes,\" Molly managed to say.\n\nI held her in my arms, lifted her body and placed her on her bed. I knelt alongside the bed, kissed her lips, her breasts and then her navel. I moved her over on the bed and knelt on the bed alongside her legs. I kissed her navel again. I kissed the space above her hairless pussy.\n\nMolly's labia were swollen and rapidly throbbing in sync with her heartbeat. When I moved a knee between her legs, she spread her legs wide allowing me access to her most womanly features. I moved my other knee between her legs and leaned over to kiss the space above her slit again. I teased the hard nub of her clitoris from beneath its hiding place with my tongue and held it between my lips. I tugged her clitoris with my lips. The trembling of her body became shaking and thrashing.\n\nI dragged my tongue from below her clitoris, through the crevice between her labia, to the entrance of her vagina. I reversed the direction, pushing my tongue as deeply into her vagina as I could in the process and ending at her clitoris again. I kissed her navel, her breasts and lips again, my body prone over hers supported by my arms.\n\n\"Molly,\" I asked. \"What do you want?\"\n\n\"I want you inside me,\" she managed to say. \"I want to feel you inside me.\"\n\nI held my erection in one hand and separated her labia with the head of my cock. I lubricated my erection with the secretions I found between her labia.\n\nMolly's hips began to buck. \"Please, don't tease me,\" she begged. \"I want to feel you inside me.\"\n\nI pushed the head of my erection between her labia and into the opening of her vagina.\n\n\"Oh, my God,\" repeated Molly. \"More, please.\"\n\nI pushed the length of my erection into Molly, slowly but without pause. I rested inside her when I reached my limit. I was surprised by the heat and pressure of her vagina squeezing me. I pulled back slightly, intending to start a rhythmic stroking within her.\n\n\"No,\" moaned Molly. \"Not yet. Let me feel you filling me up.\"\n\nI resumed my position completely within her and waited. I could feel Molly's vagina pulsing against my erection, adapting to its size and shape. It was a feeling I was happy to share with her. I leaned up to kiss her and noticed tears in her eyes.\n\n\"Are you all right?\" I asked.\n\n\"I've never been more all right,\" she whispered.\n\nI kissed her tears and then her lips. Her arms flew around my neck and head and she kissed me with a fury I didn't know was possible. Her tongue forced its way into my mouth and when my tongue entered her mouth, she sucked it in, stretching it until it hurt.\n\n\"Now,\" she said. \"You can move now.\"\n\nI withdrew a few inches and pushed back inside. Pull, push, repeat. I began a slow rhythm sliding my erection inside her body. Molly's body began to match my rhythm. Her legs came up wrapped around my body and she increased the pace. I matched her pace. When I pushed inside her she pushed back and when I withdrew, she paused until she could push again.\n\nPull, push, repeat. Ever faster, ever deeper until Molly screamed and I felt her body contract against mine until I almost couldn't move. My unstoppable orgasm was rushing toward me. Molly had me in an unbreakable embrace with her arms and legs. I struggled to pull my cock out of her and managed to barely escape in time and came all over her abdomen and breasts.\n\nI lay on top of her for several seconds to get my breath, our bodies pressed together with my semen spread between them. I rolled off Molly and lay beside her. Eventually, her breathing returned to near normal. She ran a hand over her body, smearing my semen over her chest and breasts.\n\n\"What's this?\" she asked.\n\n\"Cum,\" I told her.\n\n\"What's it doing here?\" she asked.\n\n\"I thought it was better there than inside you,\" I said.\n\nMolly continued to rub my semen over her chest and breasts. \"This is nice,\" she said, \"but unnecessary.\"\n\n\"You're nineteen,\" I reminded her. \"Pregnancy is not something you should experiment with.\"\n\n\"I'm twenty,\" Molly reminded me, \"and pregnancy is not one of my concerns. Birth control is a requirement of membership in the sorority. We usually insist in condom use, not because we're afraid of getting pregnant but for health reasons. The guys on campus are pretty indiscriminate in choosing partners and we don't want to be caught off guard. I really do appreciate your concern but, next time, let me feel your orgasm inside me.\"\n\nDuring her monologue, she continued to rub my semen into her nipples with both hands.\n\n\"Molly,\" I said. \"You're older than your years and I appreciate that. Next time, and I hope every time after that, you can be sure I'll be wherever you want me to be when I cum.\"",
        "I kissed her several times and suggested that I could use a bathroom.\n\n\"The bathroom's down the hall,\" Molly told me. \"Grab a towel and washcloth from my dresser,\" she offered.\n\nI found the bathroom at the far end of the hall, peed, washed the drying semen off my chest and abdomen with the washcloth and headed back to Molly's room. If you think first time sex with someone is intimidating, try walking around a sorority house naked.\n\nI hung the towel and washcloth from an open dresser drawer and stood alongside Molly in the bed. She appeared to be asleep. I kissed her on her forehead and lips. She reached up, arms around my neck and intensified the kiss. \"Spend the night with me,\" she asked.\n\n\"Molly,\" I replied. \"Not this time. I made a promise to the others.\"\n\n\"You just want to fuck the rest of them,\" she insisted.\n\n\"I won't deny that the possibility intrigues me but so does all night with you. I did make a promise and breaking a promise is one of my anathemas.\"\n\n\"Go and be good to them. As good as you were to me. I want to lay here until I can't feel you inside me anymore before I go downstairs again.\n\nI kissed her and left the room quietly. At the top of the stairs, I found Julie. She was sitting the top step in her short lavender negligee. The hem was almost at her waist and most of her neatly trimmed pussy was visible.\n\n\"I thought you'd never finish,\" she said.\n\n\"I'm not finished,\" I replied.\n\n\"You want to spend more time with Molly?\" Julie asked.\n\n\"I do, just like I want to spend more time with you and all the others,\" I insisted.\n\n\"Then, maybe it's my turn,\" Julie suggested.\n\n\"I don't have a list and I'd be concerned if you and your sisters had planned some sort of sequence. I prefer opportunity based sequencing.\"\n\n\"No plan. I'm here. You're here. I would like it if we could be someplace else together,\" Julie commented.\n\n\"Lead on,\" I said.\n\nJulie led me down the hallway to a room in the rear of the building. We passed Casey in the hallway.\n\n\"Found him,\" said Casey.\n\n\"I did,\" replied Julie, \"and he seems to have survived Molly in good shape.\"\n\n\"I'm envious,\" commented Casey.\n\n\"Care to join us?\" asked Julie.\n\nHer comment stopped me in my tracks. Was she proposing what I thought she was?\n\n\"I don't want to interfere,\" balked Casey.\n\n\"You won't be interfering,\" insisted Julie.\n\nCasey looked at me. Silently, she seemed to be asking me if I was okay with Julie's proposal. I answered her unspoken question by taking her chin in my hand and kissing her.\n\nSurprised, Casey whispered, \"Okay.\"\n\nJulie's room was similar to Molly's but it had its own small bathroom. Julie closed the door and stood next to Casey in front of me, her queen-sized bed behind them. They exuded expectation but didn't seem to know where to start.\n\nI kissed Julie. I kissed Casey again and stood back. The women looked at me and then at each other. Julie leaned toward Casey and kissed her. A surprised Casey kissed her back. It didn't look to me like a first kiss. Maybe a first kiss in front of a man.\n\nJulie and Casey became so engrossed in their kiss, I think they forgot about me. I moved around them and sat on the bed to watch. Casey's hand moved under Julie's negligee to palm her breast and leaving Julie exposed below the waist. Julie responded and Casey's green peignoir landed on the floor when Julie groped her breasts and bent to kiss them. Casey groaned and pushed her breasts against Julie's lips.\n\nCasey interrupted Julie. \"Nick's watching,\" she said.\n\n\"I think that's a good thing,\" Julie opined. \"I don't think I'll need this much longer,\" she added as she stripped of her negligee and tossed it on the floor next to Casey's pajamas.\n\nThe women faced me with their arms around each other's waist. \"I'm sorry. We've been ignoring you,\" said Julie.\n\n\"Not a problem,\" I responded. \"I haven't felt left out at all.\"\n\n\"I can see that,\" said Casey pointing to my erect penis. \"What can we do with that?\" she asked.\n\n\"Anything you want,\" I told her. \"But first, I want to insure that you, both of you, are happy, sated and satisfied in the next couple of hours.\"\n\n\"How do you propose to do that?\" asked Casey.\n\nI didn't answer her directly. Instead, I got off the bed, held Casey in my arms and kissed her. A kiss different from the kisses she shared with Julie. A man kiss. Not a lip crushing, I'm going to fuck you, man kiss. A man kiss demonstrating a desire to please and satisfy the woman first. Casey felt and Julie noticed the message in the kiss.\n\nI sat Casey on the bed and turned to Julie. Julie looked expectant and I didn't torment her. I wrapped my arms around her naked body and kissed her, same intensity, same message, different woman.\n\nSeconds later, I was on the bed between Casey and Julie. They were taking turns kissing me as touching the rest of my body. Casey was the first to stroke my erection and Julie was the first to begin kissing down my body.\n\nI sensed her intent and held her back for a moment.\n\n\"I think I know what you're planning. I can't think of a single thing that would please me more but this is about you, not me. You know, gifts from Santa, not for Santa.\n\n\"What?\" questioned Julie.\n\n\"Roll on your back,\" I said.\n\nWhen she did, I excused myself to Casey, telling her that Julie needed my attention for a moment.\n\nI positioned myself between Julie's legs. She spread her legs and I moved up between them. I think she thought I was going to enter her but I leaned over her and kissed her breasts and gently sucked on her nipples instead. Before I could kiss further down, Julie moaned, \"Nibble my nipples. Bite them.\"\n\nI dragged my teeth over her nipples and bit each one several times gently. Julie's eyes closed and her back arched as she tried to push her breasts against my teeth. Satisfied that I had fulfilled her request, I began to kiss down the center of her body, lingering at her navel and progressing through her pubic hair until I ended at her waiting clitoris.\n\nI kissed her clitoris and sucked it between my lips. Julie's body lurched each time I applied pressure to her sensitive clitoris. Casey added her own actions when she kissed and bit Julie's breasts and nipples.\n\nJulie was on the verge of a huge orgasm. I relaxed my efforts, allowing Julie to retreat from the precipice. Casey sensed my intent and coordinated her efforts with mine. When Julie's breathing slowed and her shaking was a mere quiver, I pushed my tongue against her hard clitoris with a predictable result. Casey added a nibble of her own to advance Julie's loss of control.\n\nI dragged my tongue down, through the space between Julie's swollen labia and then reversed direction, ending with her clitoris between my lips again. Two more round trips with my tongue and Julie was almost there. Casey added tiny bites to her nibbling. Julie's back arched until she was supported on her shoulders and heels on the bed and we eased off.\n\nJulie retreated again from an uncontrollable orgasm. When she could speak, she cried, \"Cut that shit out. If I'm going to lose my mind as least let me have the orgasm first.\"\n\nI nodded at Casey and together we sent Julie into orbit.\n\nWhen she landed safe and sane, she turned on me. She kissed me with an unexpected fury. \"Fuck, that was incredible. It was worth every pain, every torture from both of you.\"\n\nThen she turned on Casey, pushing on her back and kissing her.\n\nI exploited the opportunity and kissed Casey between her thighs, below her denuded pussy. Casey responded by spreading her legs for me and pushing Julie's head over her breasts.\n\nCasey didn't respond in the way I expected. Her orgasm was a slow burn, not an explosive fire. It took Julie and me longer to get her ignited and we couldn't take her to the edge since Casey's distance from the edge wasn't obvious. Julie and I worked continuously on her breasts and clitoris knowing that Casey would eventually surprise us.\n\nCasey edged closer to an orgasm when I pushed two fingers inside her vagina and pushed them against my tongue with her clitoris in between. Like a nuclear power plant warning siren warming up, Casey began to loudly exhale with a sound several octaves above her usual voice. When I pushed another finger into her ass, her screech climbed another octave and her entire body became rigid, supported off the bed on her head and heels. Earthquake sensors worldwide recorded the intensity of her orgasm.\n\nIt was a good five minutes later before Casey could talk. \"Fuck,\" she managed to say. \"Why haven't I had an orgasm like that before?\"\n\n\"Because the men in your life and bed, mostly inexperienced and more interested in counting coup than finishing what they start, don't give you the opportunity,\" I suggested.\n\n\"He's right,\" added Julie.\n\nJulie pushed me on my back. \"Now that you've had your fun ...\"\n\nI interrupted her. \"That was for your pleasure, not my fun,\" I insisted.\n\n\"I get that,\" Julie agreed. \"But it's hard to believe that you didn't have fun at the same time.\"\n\n\"Guilty as charged,\" I said.\n\n\"Okay, but as I was saying, now that you've had your fun, it's our turn now.\"\n\nJulie kissed me and progressed down my torso and abdomen just as I had with her. She caught up to my unusually hard erection hovering over my abdomen just below my navel. She kissed the tip and pushed her mouth over as much of it as she could. I was only half thinking with the feeling of Julie repeatedly pushing my erection to the back of her throat as Casey watched. It was enough to realize that I wanted Casey to participate. I used one hand to pull Casey's hips closer to my head and then straddle me.\n\nCasey immediately responded to the opportunity. I put my hands on the underside of Casey's thighs as she lowered her damp and aromatic lady parts toward my lips and tongue.\n\nJulie repeatedly brought my libido to the edge and caused it to retreat. As much as I wanted to scream at her to give me relief, I wanted more to give her the pleasure of being in total control of events. Honestly, I also didn't want Casey to abandon her position over my face.\n\nOnce, after a particularly close call, Julie shifted her body up on mine and lowered herself on my erection. The silky warmth of Julie's vagina stretched and surrounded my erection. For the second time that evening, I was home again, where I was supposed to be. With the affection of someone I truly cared about.\n\nThat feeling changed everything. I no longer wanted immediate release. I wanted a prolonged, total immersion in this woman until she was ready to share her orgasm with me. My earlier encounter with Molly ensured I would still be there at the end.\n\nI think Julie had a different agenda. The way she ground her body against mine, the way she shifted her hips against mine, the way she stroked up and down on my shaft, told me she wanted me to release my orgasm inside her.\n\nCasey leaned forward and kissed Julie. \"Julie,\" she said. \"I want you to have all of Nick but do you think I can have him for a few minutes too?\"\n\nI thought, \"Why not?\" and tried to nod my head still imbedded between Casey's thighs.\n\n\"Nick's nodding,\" said a laughing Casey.\n\nThe girls changed places. Casey felt different as she carefully impaled herself my erection. The heat of her body was significantly warmer than Julie's and I felt her reach bottom before I was fully engulfed. Casey did some position rearranging and she sunk down, completely encasing my erection.\n\nJulie settled on my face. Her vagina was drenched with her fluids. Her aroma was muskier than Casey's and she tasted sometimes sweet, sometimes tangy and always salty. If I didn't need to hold my hands under her thighs, and occasionally lift her to breathe, I could have surrendered to her many charms and drowned in her copious fluids.\n\nAfter about ten minutes, Casey suggested that it was time for Julie and her to switch places again and five minutes later, I erupted inside Julie.\n\nWe paused, wrapped in each other for another ten minutes before we took turns in the bathroom, although it was obvious the women didn't really care for much privacy and didn't give me much either. We cleaned each other up with a warm face cloth that we also used on other parts of our bodies.\n\nWhen we were presentable, we went, arm in arm, back to the great room where we had started.\n\nIn was near midnight. Jackie, Amy, Sara and Sue were in their rainbow nightwear tops, Julie, Casey and I were naked and Molly was missing. It's less intimidating walking naked in a sorority house when accompanied by two naked sorority sisters.\n\n\"I'm sorry to keep you waiting,\" I said to the foursome.\n\n\"No problem,\" said Sara in her sexy black Baby Doll top with her exposed narrow triangle of pubic hair. \"Molly told us it would be worth the wait.\"\n\n\"Casey and I can confirm that,\" Julie added.\n\nJulie, Casey and I sat on a nearby sofa and Jackie, Amy, Sara and Sue swiveled around to face us\n\nSara seemed to be the spokeswoman for the four on the floor. \"It's late,\" she said to me, \"and we were wondering if you would spend the night?\"\n\n\"It is late, our agreement is that I'll go home and be back tomorrow evening. As I explained earlier, I have a natural limit and I could use the rest.\"\n\n\"We agree,\" said Sara. \"We want you to rest and rejuvenate. We just want you to do it here instead of home.\"\n\n\"Sara,\" I said. \"Let's be real. I'm sitting here looking at four beautiful women, dressed for sleeping and other sports. I can't believe that I'll, or any of you, will get any rest.\"\n\n\"No. No,\" responded Sara. \"We guarantee rest, for all of us. We want you to have as much rest as you need, and more. Molly shared the benefits of rest and we know the power of rest. Stay with us overnight. You won't regret it.\"\n\nI looked at Julie and Casey, telepathically asking them what they thought with a subtext of helping me out.\n\nJulie looked at Casey. \"I think we need to let this negotiation proceed without us.\"\n\nJulie and Casey left the room.\n\nSara took off her black baby doll sleep and play attire. \"Does this help you decide?\" she asked while holding both her natural breasts in her hands.\n\nBefore I could decide, Jackie's short white nightgown, Amy's blue negligee and Sue's red peignoir hit the floor beside Sara's baby doll top.\n\n\"You girls make a powerful argument,\" I said.\n\n\"Does that mean you'll stay?\" asked Sara.\n\n\"If you honor two other modifications to the agreement,\" I told her. \"First, I get to go home sometime before dinner tomorrow and, second, tomorrow is Sunday and I have an important meeting Monday morning so I can skip tomorrow evening and see you guys again Monday evening.\"\n\nA chorus of four female voices almost sang, \"Agreed.\"\n\n\"Without consulting the others?\" I asked.\n\n\"They already agreed,\" said Sara.\n\nI couldn't respond. I wasn't an expert on how the female mind thought and communicated then and I'm still not now. I wasn't going to poke that bear imagining the rest of my night.\n\nI don't have a clear memory of that night other than I had tits and pussies over almost all of my body. I think I had sex at least twice during the night, Amy and Jackie I think. I woke Sunday morning in a large room, on the largest bed I've ever experienced. The mirrors on the ceiling were about ten feet away. Arms and legs were splayed over my body. I turned my head to the right. Sara was staring at me. She kissed me and said loudly, \"He's awake.\"\n\nI looked to the left. Molly was staring at me. She kissed me too and said, \"Hi.\"\n\n\"Wait a moment,\" I muttered.\n\nI lifted up to see the others in the bed. Amy and Jackie were there but not Sue \"Where's Sue?\" I asked.\n\n\"She had another invitation,\" Sara said.\n\n\"Julie?\" I asked.\n\n\"How did you know?\"\n\n\"Intuition,\" I said.\n\nMolly leaned over me, her breasts dangling over my face. \"Like what you see?\" she asked.\n\n\"Out of focus but still amazing,\" I answered.\n\n\"Maybe I'm not close enough,\" Molly commented.\n\nShe lowered one breast until her nipple was touching my lips. I opened my mouth and she dropped her nipple inside. I sealed my lips on her nipple and sucked gently.\n\n\"I think you're rested enough,\" Molly commented.\n\nShe turned around until she was face to morning cock and took me into her mouth. She straddled my head and lowered her clitoris to my lips. I sealed my lips on her clitoris and sucked less gently.\n\n\"Oh, God, I love that,\" cried Molly.\n\nI expected Molly to work oral wonders on me until I was almost ready to pop, then turn around and finish me off. I was half right. She used her oral skills to get me ready but she then sat up on my face and turned my locked a loaded erection over to Sara. Sara didn't waste a second settling her vagina around my erection and begin kissing Molly. It took her almost three minutes before she completed her mission and I erupted inside her.\n\nHer response was an increase in the intensity of kissing Molly before rolling her off my face, rolling onto her back and pulling my face between her legs. I understood her message, I owed her one and the presence of my semen was no excuse. I found her sweet spot with my tongue and paid my debt about five minutes later.\n\nWhile Sara was recovering, Jackie and Amy rolled me over between them. They spent the next hour insuring I had plenty to do while I was recovering. My first recovery took about twenty-five minutes and an excited Amy quickly disposed of it. My second recovery took longer and a patient Jackie took her time extracting her ounce of fluid.\n\nIt was Sunday morning, I was surrounded by four naked women, I had cum three times and I hadn't had my morning coffee yet. Almost a religious experience. Molly showed me where the shower was and helped me scrub up for breakfast. She led me to another small room. I assumed it was hers. She found a diaphanous robe for herself and a short, too small terry robe for me. She might as well have been naked and I was covered unless my disobedient cock played peek-a-boo.\n\nWe found everyone except Sue in the kitchen. They were all wearing just clean panties in various colors. Breakfast was coffee, orange juice, scrambled eggs and bagels with cream cheese. The climate in the kitchen was very domestic. I helped Julie and Molly clean up after breakfast while the others left for parts and activities unknown. Molly cleared, Julie washed and I dried the dishes, glasses and silverware.\n\nJulie was drying her hands when I moved up behind her, kissed her neck, put my arms around her and held her breasts. She leaned back into me. \"God, that feels so good,\" she moaned.\n\nI kissed her neck again. \"Is this what life is really like?\" Julie asked.\n\n\"If you're comfortable with each other and spend more than just three minutes scoring for points or notching bedposts,\" I informed her.\n\n\"How do I get more of this?\" Julie asked.\n\n\"From me it's easy,\" I said. \"Just be natural, casual and let me kiss your neck when I'm behind you. From the fraternity brothers, probably not possible. After college you'll find someone who understands the real meaning of relationships. Offer your neck and let everything else evolve naturally.\"\n\n\"Exposing my neck is sometimes more erotic than exposing my tits and pussy?\" asked Julie.\n\n\"Absolutely, under the right circumstances,\" I suggested.\n\n\"I want some of that,\" said Molly.\n\n\"I think we all want some of that,\" echoed Julie. \"Nick and I have a date right now. You can be next. Meanwhile, set the expectations for the others.\"\n\nJulie led me back to her room. Inside, she turned her back on me and tilted her head. I put my arms around her waist and kissed her neck. I nibbled on her ear lobe and ran my tongue behind her ear. She tilted her head the other way and I repeated kissing, nibbling and tonguing on the other side. She moved my hands up to her breasts and held her breath as I kissed the nape of her neck.\n\n\"Fuck,\" Julie said. \"Why didn't I know about this sooner?\"",
        "\"Because your partners don't know either,\" I said. \"It's part of foreplay.\"\n\n\"I thought foreplay was kissing, squeezing tits and stroking cocks. Maybe oral,\" said Julie.\n\n\"All of that and a lot more,\" I said as I kissed her neck again and squeezed her breasts.\n\n\"You can do that all day as far as I'm concerned,\" said Julie.\n\n\"I could but I bet you'd want something more before long,\" I answered.\n\n\"I bet I would too,\" agreed Julie. \"Let's see how long it takes.\"\n\nMinutes later, my robe was on the floor and we were on her bed. I kissed her neck. She kissed my neck. I kissed her nipples. She kissed my nipples. I moaned in pleasure. \"You like that?\" Julie asked.\n\n\"You like it,\" I said. \"Why wouldn't I?\"\n\n\"Are there more places you'd like me to kiss?\" asked Julie.\n\n\"Many more,\" I answered.\n\n\"Where?\"\n\n\"The fun is looking for them,\" I said.\n\nI kissed her eyelids, nose and lips. I nibbled on her nipples and let her nibble on mine. I took her hand and kissed her palm, the spaces between her fingers and sucked slowly on her fingers. Julie went limp in the bed. \"Keep looking,\" she suggested.\n\nI kissed every crease, nook and cranny of her body. Most were received with ooohs and aaahs. Her hips were ticklish as were the backs of her knees. She squirmed when I sucked on her toes. \"Damn,\" she moaned. \"Enough exploring for now. I'm shaking like a leaf in a gale and only one thing is going to help.\"\n\nI slid up between her legs, kissed her nipples and entered her slowly, a natural extension of our slow foreplay.\n\n\"Oh my God,\" Julie hissed. \"That feels like heaven.\"\n\nI settled deeply inside her and kissed her lips. We hardly moved. We didn't need to. I could feel her emotion in the subtle quivering of her body and the pulsing of her vagina around my erection. Eventually, she shifted her hips and I responding by moving back and forth and inch or so inside her. Our rhythm increased. Julie's legs came up straight in front of me and I put my arms around her thighs as I stroked inside her. I let go of her legs, they separated and Julie pulled them with her hands behind her knees until they almost touched her shoulders.\n\nI was in her as deep as I could go and she wanted more. \"Turn over,\" I whispered.\n\nWe separated for a second while Julie turned over. I lifted her hips until she was on her knees and I entered her again from behind. I think I managed to go deeper. She responded as if I had. Her quivering increased until she was shaking and further until she was bouncing on the bed with each stroke I made inside her.\n\nI felt the tension building. She was hugging a pillow with her shoulders on the bed and her back was arching, forcing her hips higher against my erection. Her body shook violently until it stiffened, almost statue hard. Her vagina squeezed my erection so tightly I couldn't move. She screamed into the pillow as her orgasm overwhelmed her. The peak of her orgasm passed, the pressure of her vagina relaxed and I erupted inside her, pulsing semen into her six or seven times.\n\nWe collapsed on the bed together. We didn't speak for several minutes while we recovered.\n\n\"Fuck,\" said Julie. \"I thought I could have sex with you all day. Now I'm not so sure.\"\n\n\"It's not always that way,\" I told her.\n\n\"It's never been that way before,\" Julie said. \"But I'd like to do it again.\"\n\n\"No guarantees,\" I said. \"But, with enough foreplay and complete submission to the right partner, it's possible.\"\n\nI hugged her and she curled up against me for the next half hour. She fell asleep and I gently unfolded myself from her. I kissed her on the forehead. Without opening her eyes, she asked, \"Are you leaving?\"\n\n\"I have to pee,\" I explained. \"I'll come back.\"\n\n\"No. No. It's okay. Leave me here and find some other necks to kiss,\" she suggested.\n\nI peed, washed, tied my robe and headed downstairs. Molly was standing at the bottom of the steps. When she saw me she turned her back and tilted her head. I came up behind her, put my arms around her waist and kissed her neck, nibbled her ear lobe and ran my tongue behind her ear. She collapsed against me and we headed for her room.\n\nThat happened three more times, with Casey, Amy and Sara, before I got dressed to leave for the day. Someone had pressed and neatly folded my clothes. Julie walked me to the door. Have you ever tried talking to a naked woman while you're fully dressed? You should try it sometime. It's quite stimulating.\n\n\"I haven't seen Sue all day,\" I commented. \"Is she all right?\"\n\n\"Sue is Sue,\" replied Julie.\n\n\"I don't understand,\" I said.\n\n\"Sue had a really bad experience her first time having sex,\" explained Julie. \"She's fine in a group, flirting and playing around but alone with a man is a real problem for her. She compensates by avoiding the situation completely.\"\n\n\"I'll be back tomorrow evening,\" I said. \"Maybe you can convince her to join us and I can talk to her.\"\n\n\"That's doable,\" Julie promised.\n\nI had a restful period at home and in the morning I showered, shaved and dressed in business casual, jacket without a tie. I walked to the mall and arrived five minutes early. I wasn't kept waiting and, minutes later, I was sitting front of Mr. Davidson in his office.\n\n\"Nick,\" opened Simon. \"I'm about to do something out of character for our company. Some of my staff think it's a crazy idea but I'm sure I'm making the right decision.\"\n\nI sat listening, focused on his eyes.\n\n\"I want to hire you as my intern,\" he said. \"What do you think?\"\n\n\"Your intern?\" I asked. \"What does that mean?\"\n\n\"I want you to shadow me all day,\" explained Simon. \"See and learn what I do every day for the next six months.\"\n\n\"Okay,\" I say hesitantly.\n\n\"I want you to see what it takes to manage this place. After a few months, I want you to participate in the decision process. Add your comments, suggestions and criticism,\" added Simon.\n\n\"I think I can do that,\" I commented.\n\n\"I'll pay you the same five hundred dollars a day for a five-day week as I did for the Santa deal and, after six months, we'll get together again to discuss what comes next. Deal?\"\n\nI quickly calculated that Simon was offering me sixty-five thousand dollars for the next six months to follow him around while he works. He had something more in mind but I didn't have an idea what it was. I'd be a fool to refuse, so I said, \"Deal,\" and we shook hands on it.\n\n\"Now don't disappoint me,\" added Simon. \"I'm counting on you. You can start the first Monday after New Year's. Dress business casual, no tie.\"\n\nWe stood, Simon shook my hand again and I left happier than I'd been in ages. $65K for six months work, that equated to $130K for a full year, significantly higher than I'd been making before my termination. My life was not only turning around, it was barreling down the tracks almost out of control.\n\nThings continued to get better in the evening. I knocked on the door of the sorority house early, at five in the afternoon. Julie answered the door wearing jeans and a sweater.\n\n\"Hi,\" she said. \"You're early. I'm not ready for you,\" she added indicating her outfit.\n\n\"I am and you're perfect,\" I told her. \"I'd have as much fun removing that as anything else.\"\n\n\"I'm sure you would,\" Julie agreed. \"Let me get Sue for you and warn the others that you're here. Then I'll change and be back quickly.\"\n\nI sat on a bench in the entryway and waited. Sue wandered into the room, dressed similarly to Julie and walked over to me. I moved over and Sue sat on the bench next to me.\n\n\"You wanted to see me,\" she asked nervously.\n\n\"I did,\" I responded. \"I asked Julie why I hadn't seen much of you, excuse me, I didn't mean it that way. Let me start over.\"\n\nSue smiled at my almost misstatement.\n\n\"I was wondering why you were part of the group sometimes and not others,\" I stated.\n\nSue looked at me with sad eyes. \"Sometimes I'm not comfortable with the group,\" she said.\n\n\"I get that. Julie explained,\" I told her.\n\n\"Julie told you?\" Sue asked suddenly, her body ready to escape.\n\n\"No details,\" I assured her. \"Just the simple fact that you're not comfortable alone with a man.\"\n\n\"I have my reasons,\" Sue insisted.\n\n\"You do and I respect that,\" I told her. \"I'm not trying to convince you otherwise. It wouldn't be good for either of us. I do, however, have some advice.\"\n\nSue sat, quiet but listening.\n\nI continued. \"Someday you'll meet someone who you care deeply about. That's an important thing. You should also trust them explicitly. Trust them enough that you're confident they mean you no harm or have ulterior motives. Finally, you should respect them and know that they respect you. Respect your feelings and your body. No means no.\n\n\"With those three things, love, trust and respect, you can replace the bad memories with new ones and have a real relationship.\"\n\nSue looked at me. I could see moisture in her eyes. Before I could comment, she said, \"Thanks,\" stood up and walked away.\n\nJulie came back into the foyer as Sue was leaving. She was wearing a flowing, translucent robe hanging from her nipples and matching, all but transparent panties, her trimmed pubic hair easily seen through them.\n\n\"Is she okay?\" Julie asked.\n\n\"I hope so. I didn't do anything to upset her.\"\n\nJulie led me to the large room again. Inside were six magnificent sorority sisters all dressed similarly to Julie and all with their backs to me and their heads tilted.\n\nI laughed. \"This is a Casanova's dream,\" I said, \"but there's no way I'm going to pick one of you. That's not what I thought this week was about. I'm not going to choose you, you're going to choose me. So, I'm going to leave the room and count to twenty. When I return I expect to see just one of you.\"\n\nWhen I reentered, Sara was alone in the room. When she saw me she turned her back to me and tilted her head. I walked slowly up behind her, prolonging the anticipation as long as possible. I put my hands on her hips, leaned forward and kissed the bare space in her neck. Sara moved back against me and I kissed her neck again.\n\nI felt her body relax against mine when I nibbled on her ear lobe and her legs weakened when I ran my tongue behind her ear. She grabbed my hands and moved them up to her breasts and almost knocked us over when she leaned back against me. She turned in my arms, kissed me and led me from the room. We ended up in her bedroom.\n\nThe rest of the evening followed a similar pattern. Each time I returned to the great room, a single coed was waiting for me. They all turned their backs on me and tilted their heads.\n\nI visited five bedrooms that night, the last was Julie's.\n\nTuesday evening was more of the same. Casey met me at the door, turned her back, tilted her head and led me immediately to her room. Molly was waiting at the bottom of the stairs when I came down with Casey. Casey kissed me so long and Molly turned her back to me.\n\nMolly is an incredible woman. She led me to her room, stripped and climbed into her bed alongside me. We kissed tenderly, stroked each other and, for over two hours, did just about everything possible except have complete sex. That doesn't mean we didn't have sex. We engaged in almost every type of sex you can imagine. I sure Molly had numerous orgasms. Me, not so much. Molly was very skilled at bringing me to the edge and pulling me back at the last moment. At the end of the two hours, I was sated but not relieved.\n\nMolly was lying on top of me after edging me for about the fifth time, when she suggested we should take a break and \"give someone else a chance.\"\n\nShe got off me and the bed, picked up her scanty nightwear and waited for me. We hugged and kissed. In her best Schwarzenegger imitation said, \"I'll be back.\"\n\nMolly scooted out of the room and pulled the door closed behind her. She left me wondering, first she warms me up without allowing me to overheat and then she leaves me alone in her room. Unable to explain her actions, I opened the bedroom door.\n\nSue was standing in the hallway outside Molly's bedroom. Her hair was down and she was wearing an ankle length satin nightgown with a high neckline. The opaque material clung to her body in all the right places. Sue looked at me, turned her back and tilted her head.\n\nAt first, I was at a loss for words. For days I had been surrounded by beautiful women who wanted to please me. Now, in front of me, was a true angel. I managed to walk up behind her and put my hands on her hips.\n\nI felt her body tense as I touched her. I leaned over her shoulder and whispered, \"Are you sure?\"\n\n\"I ... I am,\" she said her words not quite matching her body language.\n\nI moved her hair from her neck and kissed it. For an instant, the tension in her body increased and then slowly diminished as I prolonged the kiss. When I nibbled her ear lobe, she relaxed against me. I kissed her neck again. She pulled my arms around her body and pushed back into me. I dragged my tongue on her neck and kissed her again. Her body felt limp in my embrace. I slid my hands slowly up her body until I was cupping her breasts, one in each hand. Her breasts weren't large. They were perfectly sized for my hands and they felt wonderful as I rubbed them through the satin nightgown. Her nipples hardened as I rubbed them, the satin increasing the feeling for both of us.\n\nSue turned around and I kissed her. \"Not here,\" she whispered.\n\nSue led me up to the third floor and down a long hallway to a small room at the end of the hall next to the bathroom. Inside was a twin sized bed against the wall, a dresser, two chairs and a table. Sue moved closer to me and kissed me again, her lips soft against my lips. Her mouth opened slightly and her tongue traced my lips. My mouth opened and her tongue traced my teeth.\n\nI extended my tongue and she held it between her lips and sucked the end of it into her mouth. I held her close, pulling her hips against my naked body. My hands explored the smooth satin covering her ass and I lifted the nightgown until I was holding her naked ass in both hands.\n\nI paused for a second and asked, \"Are you sure about this?\"\n\n\"I am,\" she replied as she pushed me back to sit on the bed. Sue stood in front of me unsure of what to do next.\n\n\"Let me help,\" I said.\n\nI stood in front of her and began to lift the nightgown up her body. Her eyes locked on mine as the satin moved inexorably up her body, exposing her pubic mound, her navel and her breasts until it was completely off and laying on the floor.\n\nI sat on the bed again and pulled her toward me, my arms around her hips and my hands on her cheeks. Sue pressed her breasts against my head as I kissed her abdomen. I kissed up her body until I was kissing and sucking on her nipples. She threw her head back, arched her back and pushed her breasts against my face.\n\nI brought her around me and sat her on the bed next to me. I pushed her on her back and began to kiss down her body, past her navel and toward her perfectly trimmed pussy.\n\nSue stopped me. \"That feels wonderful,\" she said, \"but I need something else first.\"\n\n\"You're sure?\" I asked. \"We don't have to rush.\"\n\n\"I don't want to rush,\" she responded, \"but waiting doesn't exorcise the memory and I can't overcome my reluctance to all of it while I still have the memory.\"\n\nI moved Sue back on the small bed and positioned myself between her legs. Her legs separated, her right leg against the wall and the other off the bed below the knee. I lay, suspended over her and used one hand to slowly drag my erection between her labia to both lubricate and prepare her for entry.\n\nSuddenly, Sue asked me to stop. I looked at her. She had tears in her eyes. I kissed her tears and lay alongside of her in the narrow bed. She crawled into my arms and put her head on my shoulder, her tear drops landing on my chest.\n\nWhen her body stopped quivering and her tears stopped, she turned to me. \"Kiss me,\" she asked.\n\nI kissed her gently.\n\n\"Nick,\" she said. \"I want to make love with you. I really do. You're everything none of the other men I've met are. My mind's made up but my body disagrees. I was ready. I was willing. I was happy but, at the last moment, my body was afraid. Afraid of another painful and traumatizing event.\n\n\"Hold me. Let me soothe my body and then I want to try again. Be patient with me. I'm yours. I know that. I trust you absolutely. Give me the chance to prove it.\"\n\nWe lay together on the bed. I could feel her breathing and her heartbeat. I kissed her forehead while her pulse rate settled. Eventually, she kissed my chest, raised her head and kissed my lips.\n\n\"I'm ready,\" she said, \"but I need to be on top.\"\n\n\"I understood her need to be in command, to manage the pace of what we both wanted. There was only one minor problem. My erection had relaxed with the rest of me. Sue quickly recognized the problem. She reached down my body, took my flaccid penis in her hand and held me gently. She moved down and kissed the top of my cock.\n\n\"I've never done this,\" she admitted.\n\n\"You don't have to,\" I told her. \"There are other ways.\"\n\n\"I think I want to,\" she said. \"Do you mind?\"\n\n\"Sue,\" I replied. \"I'd be a fool to mind.\"\n\nShe giggled playfully and kissed the top of my cock again. Soon, she had me in her mouth and I swiftly responded.\n\n\"I like this,\" Sue commented.\n\n\"I glad you like it,\" I said, \"but, if you continue much longer, the result is inevitable and I thought you had something else in mind.\"\n\nSue relented, insisting she wanted to continue later. I moved to the center of the bed and she straddled my hips. She used one hand to rub my erection between her labia much like I had done earlier. She centered my erection and settled down on it just far enough for the crown to slip between her lips.\n\n\"This is perfect,\" she commented. \"Hold my breasts.\"\n\nI supported her breasts with my hands from below and she slid down further with me inside her. Two more pushes and our pubic hair was mingled between our pubic bones.\n\n\"Oh, God,\" she moaned. \"I knew it would be like this.\"\n\nSue moved slowly and deliberately on me. She plunged up and down, shifted forward and backward and rotated around until I was on the verge of exploding.\n\n\"Sue,\" I said. \"I'm going to cum.\"\n\n\"Try to hold back a little longer,\" she asked. \"I was having so much fun I almost forgot. I'm feeling something happening to my body and I want to push it forward.\"\n\nI tensed every muscle I could to postpone an orgasm. I probably couldn't have made it if it hadn't been for the tuning up Casey and Molly had given me earlier. Meanwhile, I could feel Sue's orgasm building. Fortunately, she got there before I did and she gushed onto me seconds before I gushed into her.\n\nShe lay on top of me, breathing heavily and regaining her strength. Eventually, she rolled alongside of me again with her head on my shoulder and her fingers slowly running through my sparce chest hair.\n\n\"Thank you, Nick,\" Sue said. \"I knew it would be wonderful with you and it was better than that. I want to do it again. I want you to take me. I want you to fuck me.\"\n\n\"Sue,\" I said. \"I can't do that. It has something to do with respect. I can make love with you and I can also have sex with you but I can't fuck you.\"\n\n\"I'll settle for sex,\" Sue said.\n\nThirty minutes later, after a repeat oral reawakening, sex was on the agenda. I was suspended over Sue and I slowly entered her. The next ten minutes was some of the best sex I'd ever had. It ended two orgasms for Sue later with her legs on my shoulders and me pulsing a half dozen times inside her again.\n\nI had two more orgasms that evening with Sue. The third was after we tried several different positions for sex and the fourth when Sue was determined to have me cum in her mouth. We lay on her bed afterward, comfortable in each other's arms.\n\n\"What time is it?' I asked.\n\nSue wiggle around on the bed until she could see the clock on her desk. \"Just after eleven,\" she told me.",
        "\"We've been here almost four hours,\" I commented.\n\n\"Is that a problem?\" asked Sue.\n\n\"Not for me,\" I answered. \"Sue,\" I said. \"I love your name but Sue is such a simple name for such a complex woman,\" I told her. \"It's too common for the beautiful and sexy woman you are.\"\n\n\"Suzanne,\" said Sue.\n\n\"Suzanne?\" I asked.\n\n\"That's my real name. Sue is just a nickname.\n\n\"Suzanne. That's perfect. A sophisticated name for a sophisticated woman. You'll always be Suzanne to me,\" I promised.\n\nWe managed to get out of the bed. Suzanne looked at the numerous puddles and damp spots. \"I get to sleep with part of you with me all night,\" she said.\n\n\"You may change your mind after it cools for a while,\" I commented.\n\nI headed for the door. \"I think my clothes are in Casey's room,\" I said.\n\n\"Check the great room first,\" suggested Suzanne.\n\n\"Coming with me?\" I asked.\n\n\"Not this time,\" Suzanne replied.\n\nI walked naked, down two flights of stairs. It wasn't the first time walking naked in the sorority house but it's a feeling that I'll never get used to. I didn't meet a single person on the walk.\n\nI found my clothing folded neatly on one of the sofas in the great room. I dressed and left the sorority house. No one offered me a good night kiss as I left.\n\nI walked home, thinking about Suzanne the entire time and fell asleep in my own bed dreaming of Suzanne.\n\nWednesday was group night. I didn't know that until I got there. I knocked on the door of the sorority house at just after five PM. The door opened and Julie peered around it to see me. \"Hi, Nick,\" she said. \"You're early. Come in.\"\n\nWhen Julie closed the door, I could see why she was positioned behind the door when it opened. She was naked. It was the first time she'd greeted me naked. I wasn't surprised. I'd seen her naked numerous times but I was intrigued.\n\nShe led me to the great room. Sitting in a semicircle on the floor were the other six members of Santa's Angles, all naked. Julie had me sit in the center of the circle and she joined the others on the floor.\n\nI looked at each of them in the dim light of the room. I had seen them all naked frequently all week. I was heartened to see that Suzanne was sitting in the center of the group.\n\nJulie took charge. \"Okay. Everyone's here. All of you know that tonight is the last night of our agreement with Santa. Tomorrow is New Year's Eve. The other members of the sorority will begin to arrive and we've all got parties to get ready for. There's not much we can plan for the following weekend with nonmembers of Santa's Angels back in the house and Nick begins his new job on Monday, so, tonight's it. We've planned a different kind of night. We all know about it except Nick.\"\n\n\"Nick,\" she continued. \"Tonight is group night.\"\n\nBefore I could respond, she continued, \"All together, all night. Games, entertainment, adult beverages and, of course, sex. Sex in ones, twos, threes and more. Tonight we let off steam, get it out of our systems and dissolve the Angels. The last week has been educational, exhilarating and fulfilling but we can't continue when the rest of our housemates return. There will be thirty sisters living in this house and I doubt Nick could survive the result.\"\n\nThere was giggling from the group as they all looked at me. Someone used a remote and soft music with a beat filled the room. Suzanne stood up with a long, wide ribbon of gossamer fabric. She began to writhe rhythmically with the music. She twirled and wrapped her body in the diaphanous material. She stood in front of me and unwrapped her body one layer at a time until she was naked again.\n\nBy the time she was finished, I was hard as a top of the line dildo and Suzanne's labia were swollen and glistening with her tasty looking secretions. I put out my arms and looked into her eyes. She stepped closer to me, I put my hands on her hips and pulled her even closer. Close enough that my tongue easily reached across the void between it and her waiting pussy lips.\n\nI held her in place while my tongue traversed the space between her lips and slipped over the top of her clitoris. Her knees buckled slightly and my tongue lost touch with her. I savored her flavor. She had me stand and unbuttoned my shirt which she tossed to Sara sitting next to me. Suzanne kneeled in front of me and undid the button and zipper of my trousers. She pushed my pants down, dragging my underwear with them and, before I could react, wrapped her mouth around the top of my erection.\n\nMy knees buckled. Who was this woman who, barely twenty-four hours ago, was a reluctant participant in sexual activities with me?\n\nI sat on the floor and Suzanne, with help from Sara, removed my shoes, socks and my bunched up trousers and briefs. The two women began to share my erection, alternately sucking it into their mouths and occasionally kissing each other.\n\n\"I'm aching,\" whispered Suzanne.\n\n\"You first,\" agreed Sara.\n\nSara moved back and Suzanne snaked up my body until she was positioned over my erection. Sara held me vertical while Suzanne lowered herself onto me. With our pubic hair entwined, Suzanne began to writhe on my erection forcing me as deep into her as possible. Her circular motions transformed into a back and forth shifting, her vagina pulsing with every movement.\n\nI wasn't going to last long, succumbing to her actions.\n\n\"My turn?\" asked a waiting Sara.\n\nSuzanne reluctantly lifted herself off me and held me erect for Sara. Sara squatted down on me and pumped up and down with me inside her. Suzanne watched for several seconds and then positioned herself over my head, facing Sara. I tasted her again. I pushed my tongue into her as far as I could while breathing through my nose positioned between the cheeks of her ass.\n\nWe worked together until Sara moaned. \"I'm not going to last much longer.\"\n\n\"Save him for me,\" ordered Suzanne.\n\n\"I'll do what I can but I can't promise anything,\" responded Sara.\n\nSara's moan started like an air raid siren warming up, low and increasing steadily in pitch and intensity, until her body tensed and shook with her orgasm. She relaxed and took several deep breaths before changing places with Suzanne. Suzanne mounted me without help and resumed shifting on top of me.\n\nI barely touched Sara's clitoris with my tongue and she orgasmed a second time, streaming a sweet and salty effluent over my mouth, chin and neck. Seconds later, Suzanne was losing the battle with her own orgasm.\n\n\"I'm waiting for you,\" she said to me.\n\nShe didn't have to wait long. I released my semen inside her. She tensed, her orgasm followed and she collapsed on top of me, her head on my chest. Sara knelt next to me and kissed me. \"That was incredible,\" she opined.\n\nMinutes later, the other five sisters had me at their mercy. Julie was sitting on the floor with her back against a sofa. I was lying on my back, between her legs extended along my sides with my head on her pubic mound. Two of the elves were massaging my feet and occasionally kissing my toes while another was kneeling alongside me gently stroking my relaxed penis. Jackie straddled my chest, and when she leaned over to kiss Julie, her breasts hung invitingly over my mouth. I didn't resist the temptation and I sucked one nipple between my lips. Jackie moaned through her kiss with Julie and pushed her breast firmly against my face.\n\nThe emotion of the moment, with all the attention, my penis became an erection. Jackie slid down my abdomen, pulling Julie with her to maintain their lip lock and settled down with me inside her. With all the activity of the last week, my ability to postpone orgasm and maintain an erection had been enhanced. The next several hours were a blur of sexual activity. I'm sure I spent time inside each of the women although only Molly and Sue, again, were filled with my semen.\n\nIt was well past midnight when everyone, wet and weary, drifted off to get some rest. Suzanne led me to her room where I spent the night sleeping with her but not really getting any rest. Suzanne had become a fan of sucking an erection, frequently orgasming while swallowing semen. She was an orgasmic tsunami when I returned the favor, frequently cuming each time I sucked on her clitoris.\n\nSuzanne wasn't a fan of anal play, a situation she promised to correct in the future after I teased her rectum with my tongue during one of my other oral examinations of her girl parts.\n\nDawn was breaking when I wandered downstairs to find my clothes. By the time I was dressed, all seven of the girls were waiting to bid me good-bye. They each kissed me and insisted I kiss their breasts. Julie was the last to offer her breasts to me. \"I really don't want this to end,\" she wished in a whispering voice.\n\n\"I would like that,\" I responded.\n\n\"I'll find a way,\" she insisted.\n\nI walked home in a daze and collapsed into my own bed. I woke near three in the afternoon, showered, trimmed the edges of my beard, dressed and headed out to the nearest Dunkin' for coffee. When I returned, Peggy was in my apartment working diligently at my stove.\n\n\"Hi, stranger,\" she called as I entered. \"I thought could have a last meal of the year together and watch the ball in New York City ring in the New Year,\" she added.\n\nI agreed. Peggy was always good company and I needed female company without the stress of performance anxiety.\n\nPeggy's dinner was perfect. I helped clean up and we settled on the sofa to watch a move together. Peggy chose a romantic comedy suitable for the season, a 1950's flick staring James Stewart and Kim Novak.\n\nPeggy curled up next to me watch the movie. As the movie progressed, Peggy cuddled closer to me and put my arm over her shoulders. Before the movie ended, Peggy was almost in my lap, lazily resting her head on my chest and her hand on my thigh.\n\nPeggy woke up in my apartment for the second time in a week. This time she was in my bed and we were both naked. Peggy was an excellent landlady and a better lover. Her willingness to involve us in sexual gymnastics was second only to her skills in doing so. We initially had a long, slow and luxurious fuck with fantastic endings for both of us. Afterward, she showed me things I never knew and probably wouldn't have tried if not for her.\n\nHer final hurrah, before we fell asleep, was a professorial tutorial on all things anal. I'd never experienced sexual intercourse with a woman's ass and Peggy was patient in teaching me the ins and outs of the process. Her orgasm during the process was unexpected as was mine shortly after.\n\nPeggy was also the first to slide a finger into my ass. The way she managed to stroke and excite my prostate caused a first-time orgasm by me.\n\nPeggy and I woke shortly after eight on New Year's Day. We took turns peeing. We showered together somehow managing in the small shower of my apartment. Peggy managed a meager breakfast for us and we went back to bed. No shyness. No guile. We were there for one thing, to screw each other. The two times we fucked before she left were among the finest screws of my experience. Her body was incredibly limber, her skin unnaturally smooth, her kisses tender, her breasts large, her clitoris erect and sensitive and her vagina lubricated.\n\nWe were like sexual athletes together. Not sprinters. Long distance runners, even marathoners. We rolled around, changing positions frequently. The first time ended with her legs on my shoulders and me stroking deep into her as I emptied my prostate for the first time in the New Year. The second time, Peggy was riding me, pushing her breasts into my chest, when she came forcefully. She finished me with one of the best blowjobs of my memory.\n\nPeggy left just before one in the afternoon. She told me the rent for January was paid and she'd be back for the next payment on the first of February.\n\nI spent the day watching bowl games and regaining my strength.\n\nSaturday I took a long walk, avoiding the mall and the sorority house.\n\nSunday I walked by the sorority house. There was significant activity but I didn't see any of the sisters I been so fond of the previous week. I resisted knocking on Peggy's door to ask if there was anything she could do for me or I could do for her. I hadn't been laid in two days and I was experiencing withdrawal symptoms.\n\nMonday was the first day of work and a chance to refocus my thoughts. I walked to the mall. Simon was in the mall office waiting for me. He explained my duties again. I was to shadow everything he did and ask questions about what I didn't understand. The goal was for me to be able to eventually do his job. I took that to mean that he had major plans for my future. He checked my ego when he reminded me that we would have a review of my skills in six months.\n\nShadowing Simon wasn't very difficult. He was very busy and he made many decisions, most of which, given the information he had, I would have made too.\n\nWednesday, when I left the mall office at the end of the day, Julie was waiting for me. I was delighted to see her and apprehensive about why she was there.\n\n\"Hi, Nick,\" Julie greeted me.\n\n\"Hi, Julie. I'm surprised to see you.\"\n\n\"I miss you,\" Julie said.\n\n\"I miss you too,\" I said, \"but I thought we couldn't continue as we were.\"\n\n\"We can't. Too many others around all the time. But I was hoping there was another way.\"\n\n\"I like the way you think,\" I agreed. \"Do you have any ideas?\"\n\n\"Could we go to your place?\" asked Julie.\n\n\"We could but it's not much,\" I answered.\n\n\"It's private,\" Julie stated.\n\n\"It is except that my landlady is there to take care of me,\" I said.\n\n\"She could join us,\" offered Julie. \"I don't mind sharing.\"\n\n\"You're assuming a lot,\" I said.\n\n\"Maybe I shouldn't have come here,\" Julie said.\n\n\"No. You're fine,\" I told her. \"Actually, I'm glad you're here. Walk with me.\"\n\nWe started to walk together. As we exited the mall, another young woman approached us. \"Hi, Julie,\" she said.\n\n\"Hi, Fran,\" said Julie.\n\nI looked at them and smiled.\n\n\"Nick,\" said Julie. \"This is Francine. She's one of my sorority sisters.\"\n\nI looked at their smiling faces again. \"Meeting Francine here is not an accident, is it?\" I asked.\n\n\"I shouldn't have tried to fool you,\" admitted Julie. \"Francine was waiting for us.\"\n\n\"Is this when you tell me the rest of the story?\" I asked.\n\n\"Like I said,\" began Julie. \"Francine is a new freshman sorority sister. Somehow she knows how we spent the winter break and she wanted to meet you.\"\n\n\"Really?\" I asked. Nobody said anything. \"She just figured it out by herself?\"\n\n\"It's the truth. I don't know how,\" responded Julie.\n\n\"Okay,\" I said. \"Walk with me while you tell me the rest.\"\n\nJulie and I started to walk again. Francine lingered.\n\n\"You too, Francine,\" I said.\n\nFrancine hurried to catch up. We walked together in the direction of my apartment while Julie filled in the story.\n\nFrancine knew enough but not most of it and she wanted more than just meeting me. I confirmed Julie's assertion with Francine. Her nervous answer was enough to convince me. She explained what I'd heard from some of the others. Francine was frustrated with the attitudes of the boys on campus and wanted to spend time with a man with a compassionate respect for their partners. Someone, she wouldn't tell us who, suggested she talk to Julie and here we were, arm in arm at the entrance to my apartment building.\n\nAt my apartment, the women paused before entering.\n\n\"I warned you, it wasn't much,\" I told them. \"It's temporary until I get on my feet again and that begins with my first paycheck at the end of the month. Meanwhile, it is what it is. It's mine and the bed is clean.\"\n\nThat seemed to comfort them. They settled on the sofa with a space between them.\n\n\"Let me get you something to drink,\" I suggested.\n\nI looked in the refrigerator. \"I have beer and beer,\" I offered.\n\n\"I'll take a beer,\" said Julie.\n\nFrancine agreed and I opened three beers and sat between them on the sofa.\n\nI took a deep swallow of my beer. The girls sipped theirs.\n\n\"Okay, ladies,\" I commented. \"What's the agenda?\"\n\n\"Francine wants to experience sex with someone who cares about her and not his reputation with his fraternity brothers,\" explained Julie.\n\nFrancine seemed embarrassed by Julie's directness.\n\nI looked at Francine. The slight blush on her cheeks was a perfect counterpoint to her brilliant blue eyes and long blonde hair. I reached out and took her beer from her hand. I gave both beers to Julie and held Francine's hand in both of my hands.\n\n\"Francine,\" I said. \"Three things. I care about Julie and if you're her friend, I care about you. Two, I'd like you to trust me. I'll never ask you to do anything you don't want to do. Finally, I respect you. I respect your feelings and I respect your body. No means no. No exceptions.\"\n\nFrancine looked more mystified than embarrassed. I took her chin in my hand, leaned over and kissed her gently on her lips. Just a light touch that lasted less than two seconds. She didn't resist, nor did she return the kiss.\n\nFrancine looked at me. \"Why did you do that?\" she asked.\n\n\"Information gathering,\" I said. \"I wanted to know if you were real.\"\n\n\"And?\"\n\n\"Not much information,\" I admitted.\n\n\"Would you kiss me again?\" Francine asked.\n\nI approached her again. This time she tilted her head and closed her eyes. The kiss lingered. Her lips quivered and parted slightly. She put a hand behind my head and pressed her lips tighter against mine. The kiss ended with us both out of breath.\n\n\"Now?\" Francine asked.\n\n\"Information overflow,\" I said and went in for another kiss.\n\nThis time her mouth opened and her tongue caressed my lips until my mouth opened. We swapped tongues and saliva. We breathed each other's breath. When the kiss ended, we sat back and assessed each other.\n\n\"I've never been kissed like that before,\" Francine said. \"I've had boy friends in high school and dates in college. I've kissed them all and I never been kissed like that before.\"\n\nI watched her nervousness fade and her resolve strengthen. She turned her body more in my direction and gestured for me to move closer.\n\n\"Maybe I should leave you two alone,\" suggested Julie.\n\n\"No,\" I said. \"Stay. I think Francine would be more comfortable if you did.\"\n\n\"Yes,\" added Francine. \"Please stay. You're as much a part of this as is Nick.\"\n\n\"Okay,\" agreed Julie. \"But I'm not going to be content to just watch.\"\n\n\"Perfect,\" said Francine before gesturing for me to move closer again.\n\nThis time Francine was fully involved. I had one arm over her shoulders, one arm on her waist and she lay against my chest with both arms around my body. Our lips were perfectly aligned and our tongues alive in each other's mouth. I felt her body relax against mine and mold against mine. Mid kiss, she took one of my hands and placed it on her breast. Her breast was heavy and firm, her nipple hard under her clothing. I could feel her heart beating rapidly in her chest.\n\nI moved my hand down intending to move up again under her blouse. She sensed my intent and pulled her blouse from her jeans to ease the transition. Her skin was warm and velvety under her blouse and I moved my hand up to cup her breast in her bra.\n\nI felt a sense of exasperation from her. She used her hand to pull the bottom of her bra up and her breast fell into my hand. She moaned into my mouth when I rubbed my fingers over her nipple. When the kiss ended, Francine fell back on the sofa. I kept my hand on her breast.\n\n\"Did you say the bed was clean?\" she asked.\n\n\"I did,\" I replied.\n\n\"Show me,\" Francine insisted.\n\nWe got up off the sofa and started for the bedroom.\n\n\"You too Julie,\" said Francine.\n\nIn the bedroom, Francine pulled down the spread and had me sit on the side of the bed. She stood with Julie in front of me. \"You've been here before,\" she said to Julie.",
        "\"Not exactly,\" Julie admitted. \"Something similar.\"\n\n\"But he's seen you naked before,\" Francine stated.\n\n\"He has,\" admitted Julie.\n\nThen you should undress me for him,\" Francine insisted.\n\nJulie looked at me for guidance. I wasn't much help. Either one of them could go first. Either way, they'd both be naked in front of me. Julie changed the direction with her next comment.\n\n\"Why don't we undress him first?\" Julie suggested. \"It might influence you although I don't think so.\"\n\n\"I like that,\" agreed Francine.\n\nShe put out her hand to help me stand. She looked at me with an impish grin. \"You know,\" she told us, \"I've never undressed a man before. They usually strip off their clothes as soon as they think they're going to score with me. Twice, they were wrong,\" she laughed.\n\nJulie began to unbutton my shirt while Francine knelt and struggled with my belt and trousers. My shirt landed somewhere on the floor and Francine pushed my pants down around my calves. \"Why not?\" I heard her mumble before she pulled my Hanes briefs down on top of my pants. My raging hard on pointed straight at her nose.\n\n\"Oh,\" commented Francine.\n\n\"Nice,\" commented Julie. \"I told you, you wouldn't be disappointed,\" she added.\n\nFrancine stared for several seconds, undecided what to do next.\n\n\"You can touch it,\" suggested Julie.\n\nJulie's comment broke Francine's trance. \"Let me get his pants off first,\" she responded.\n\nThat wasn't as easy as she thought. I still had my shoes on. Francine knelt, untied each shoe and I lifted one leg at a time, balancing with a hand on her head, so she could remove them. I repeated the balancing act while she removed my socks and again when she removed my pants. One more time and she had my briefs off.\n\n\"What to do. What to do,\" Francine mumbled.\n\n\"Go ahead,\" urged Julie. \"Touch it. Kiss it if you want.\"\n\n\"Most guys want a blowjob but I've always refused. Ended a few dates that way. Why do I want to wrap my mouth around it this time?\" Francine questioned.\n\n\"Maybe because Nick didn't ask you to,\" suggested Julie. \"It's your decision and you can do what pleases you.\"\n\nFrancine took my erection in her right hand and stroked its length, twice. She approved of how it felt, leaned forward and kissed the tip. The kiss led to a lick and then to her lips around the collar of the head of my erection. Seconds later, she pushed down her mouth until I hit the back of her throat. She reversed direction and started back down again. This time she went further and she gagged when my erection blocked her throat.\n\n\"That wasn't fun,\" she commented after coughing.\n\n\"You can train yourself to manage that,\" Julie told her.\n\n\"Not now,\" Francine said. \"However, I wish I had gotten undressed first.\"\n\n\"Let me help you,\" offered Julie.\n\nI sat on the bed to watch. Francine stood and, together, they removed her clothing. Francine's body was better than I imagined. Her breasts were pale, like her body, high on her body with pink nipples. She had a narrow waist, flat ass and long slim legs with a triangle of blonde pubic hair where they met.\n\nJulie leaned over and kissed Francine's right breast. Francine shivered as Julie sucked her nipple. When Julie stood up, Francine leaned over with her breast in my face. \"Your turn,\" she whispered.\n\nI kissed and sucked her nipple. Francine's shiver was more like a tremble. Francine pushed me on my back on the bed and straddled me to kiss me again.\n\n\"Hey, guys,\" said Julie. \"Remember me?\"\n\nFrancine and I looked at Julie, standing alongside the bed with her clothes on.\n\n\"How inconsiderate of me,\" replied Francine. \"You need to get undressed too.\"\n\nFrancine stood and helped Julie strip off her clothing. There wasn't much, blouse, no bra, shorts, no panties and sandals that Julie kicked off. Francine leaned over and kissed Julie's breast. Francine shivered as she sucked Julie's nipple. I grew harder watching them.\n\nFrancine started for the bed again. I moved aside and guided her to her back alongside me. I kissed her lips, her neck, her chest and her breasts. Francine relaxed into the bed and closed her eyes. Julie joined us on the bed next to Francine opposite from me. I kissed further down Francine's body and Julie kissed her lips, her neck, her chest and her breasts.\n\nI kissed through Francine's pubic hair, circled her clitoris with my tongue and kissed the hard nub it had become while Julie continued to fondle and kiss her breasts. \"Fuck, you guys are killing me,\" cried Francine. \"Do more of that,\" she requested.\n\nI assumed she was talking to me. I dragged my tongue through the slit between her pink and puffy labia. \"Not that. What you did first,\" clarified Francine.\n\nI reversed course and sucked her clitoris between my lips. I could watch her heart rate increase as her inflated labia pulsed. Her back arched and her hips came off the bed as a first orgasm wracked her body. Julie and I waited for her to recover.\n\n\"Why did you stop?\" asked Francine when she could speak.\n\nJulie and I exchanged a glance and returned to pleasuring Francine. Seconds later, Francine's body was suspended off the bed on her heels and shoulders as her second orgasm consumed her.\n\n\"God,\" she cried. \"I'm on fire.\"\n\nJulie and I paused.\n\n\"No no no no. \"Don't stop,\" Francine screamed.\n\nSeconds later, she demanded, \"Now. Now. I need you inside me now.\"\n\nJulie smiled at me and tried to hold Francine steady. I repositioned myself and entered her slowly.\n\n\"Oh my God. Oh my God. Oh my God,\" shouted Francine.\n\nI paused.\n\n\"Don't stop. Don't you dare stop.\"\n\nI settled deep into her and began a rhythmic stroking within her. Her orgasms started almost immediately. Julie couldn't manage to keep her lips in contact with Francine's bouncing breasts and settled for holding her tightly in her arms.\n\n\"Jesus, I can't stop it.\"\n\nFrancine squeezed my erection with her vagina restricting my ability to move within her. When her grip on my erection eased for a second, I erupted inside her. She squeezed again, interrupting my pulsations. A second relaxation allowed me to finish and her orgasm returned more forceful than ever.\n\nJulie rode Francine's body as it tossed and twisted on the bed. Her vagina tightened again and forced me out of her. She rolled on her side, curled into a fetal position with her hands between her legs and lay perfectly still.\n\n\"Damn,\" I said. \"Is she alright?\"\n\n\"She's still breathing,\" confirmed Julie.\n\nI kissed Julie. \"Nice work,\" I said.\n\n\"We do make a good team,\" she admitted.\n\nWe gently stroked Francine's arms and body while she recovered.\n\n\"What happened?\" Francine eventually asked.\n\n\"You happened,\" said Julie.\n\n\"That's never happened before,\" Francine said.\n\n\"Welcome to the real world,\" said Julie.\n\nBefore they left, I had sex with Julie with Francine's help. Julie had an impressive series of orgasms without passing out and Francine insisted on 'practicing' swallowing my erection without gagging. She was very determined and, when I came in her mouth, it surprised her. She managed to swallow my contribution and smiled afterward.\n\n\"Can we do this again?\" Francine asked as they prepared to leave.\n\n\"You know where I live,\" I told her. \"However, it is probably not a good idea for a parade of young coeds coming to my door. It's sure to be noticed and raise uncomfortable questions.\"\n\nThat's the day I began my tutoring business. We agreed that all the visitors to my place would arrive with an armload of textbooks.\n\nAfter the girls left, Peggy knocked on my door. I let her in and she sniffed the air.\n\n\"Have you been engaging in some intimate activities?\" she asked.\n\n\"Is that a problem?\" I asked.\n\n\"Not as long as everyone's over eighteen and consenting,\" Peggy stated.\n\n\"That's always the case and, if it helps, I'm actually offering a tutoring service for the coeds and they'll arrive carrying books for studying,\" I explained.\n\n\"That helps,\" agreed Peggy. \"I know I can't keep up with you but I really like cooking supper for you occasionally.\"\n\n\"Peggy,\" I said. \"I'll always have time for you.\"\n\n\"Have you had supper yet?\" she asked.\n\n\"I haven't but I'm not very hungry right now,\" I responded. \"How about tomorrow night?\"\n\n\"Perfect. I can't wait,\" she answered.\n\nMy life and schedule was coming together nicely. I worked with Simon Monday through Friday with the weekends off. Over the next week, I had supper with Peggy and three tutoring sessions with Suzanne, Molly with Sara and Julie with Francine. Things were definitely looking up. I was anxious to receive my first paycheck at the end of the month and start looking for a more suitable place to live. I planned to break the news gently to Peggy and make her the first person to have my new address.\n\nYep. I was cloud nine with my new life, until the third Wednesday of the New Year. Something happened as I left work that Wednesday, Angela.\n\nI have to admit, I was delighted to see her and apprehensive at the same time.\n\n\"Hi,\" said Angela.\n\n\"Hi, Angie. Nice to see you,\" I responded.\n\n\"Really? I haven't heard from you in over three weeks,\" stated Angie.\n\n\"I know. I realized too late that we didn't leave our contact information with each other,\" I explained. \"I didn't know how to find you. How did you find me?\" I asked.\n\n\"I forgot that small detail,\" Angie admitted. \"I apologize for my tone.\"\n\n\"Forgiven and forgotten,\" I said. \"How did you find me?\"\n\n\"I saw you in the food pavilion yesterday at noon and followed you here. Just a fortunate coincidence. I thought, since you were Santa during the Christmas season, that you might be working here so I came back this afternoon and waited for you and I got lucky,\" she explained.\n\n\"We're both lucky,\" I added.\n\n\"Do you want to get lucky tonight?\" Angie asked.\n\n\"I'd love to but I have to come back to work in the morning,\" I explained. \"Friday would be better,\" I suggested.\n\n\"How about dinner and a quickie?\" suggested Angie.\n\n\"A quickie?\" I asked. \"Would that be enough?\"\n\n\"I miss you more than I expected. It would get me to Friday,\" Angie admitted.\n\n\"Dinner and a quickie it is,\" I agreed. \"Lead on.\"\n\nWe had dinner at Applebee's and Angie reserved a room at the Holiday Inn Express using a Blackberry phone. Two drinks and a meal later, we walked hand in hand to the hotel. Angie's mood was buoyant and infectious.\n\nThe quickie was actually two not so quickies and I got home just before midnight.\n\nOver the next week, I had two \"tutoring\" sessions and dinner at my place with Peggy. Throughout, I nursed a single thought, Angie. On Friday, I used a pay phone in the mall to call her. We set a date for dinner and more at her house that night.\n\nI hurried home after work, showered and dressed in nice slacks and collared shirt. I went through an old phone book looking for a taxi service take me to Angie's house, tore out the page and headed to Peggy's apartment to call. When Peggy answered the door, she analyzed my apparel and commented. \"Hot date tonight?\"\n\n\"The hottest,\" I answered.\n\n\"And yet, you're here. I don't suppose it's for a warmup,\" she guessed.\n\n\"Sorry. No. I need to borrow your phone,\" I told her.\n\n\"What do you need my phone for?\" she asked.\n\n\"To call a cab so I can get to my date,\" I explained.\n\n\"Hold a second,\" said Peggy and she went to a draw in her kitchen. When she returned, she tossed me a ring with two keys on it. \"Light blue, 2004 Chevy Malibu out front,\" she said. \"Bring it back in one piece,\" she requested.\n\n\"Peggy, I can't,\" I demurred.\n\n\"Yes you can,\" she insisted.\n\n\"But it's another woman,\" I explained. \"I can't use your car to go see another woman.\"\n\n\"Yes you can,\" she repeated. \"And I think it's wonderful.\"\n\n\"Thanks,\" I said. \"I love you,\" as I headed for the door.\n\n\"Do you say that to all the women?\" she asked.\n\nI paused. \"No. I don't usually say it to anyone,\" I admitted.\n\n\"Don't waste it on me,\" Peggy averred. \"I love to fuck but I'm not marriage material. Tell it to the lucky lady tonight.\"\n\nI got to Angie's ten minutes early. On the drive, all I could think about was Peggy's comment. She was right about two things. She did like to fuck and I hadn't thought about her as marriage material. Was she right about Angie? Was she the one? The more I thought about it, I could imagine living with Angie for the rest of my life. Yes, she was good in bed but there was something more there. Something I was ignoring after the painful breakup of my last marriage.\n\nAngie was waiting for me, barefoot and in a very short cotton robe. She greeted me with body squeezing hug with braless breasts and a mind-altering kiss. Dinner was a lingering affair punctuated with conversation about everything from sports to politics. The promise of great sex was in the air but we never talked about it. We both knew it was on the agenda. We both wanted it but we didn't hurry to get started.\n\nTalking with Angie was almost as satisfying as the sex. Angie was an educated, multidimensional woman who could carry on a conversation, offer opinions and judge fairly the opinions of others. In some cases, just holding her hand was as satisfying as hugging her.\n\nCould I live with her for the rest of my life? I was beginning to think so.\n\nEither way, I wanted to prolong our relationship as long as possible and that required some honest discussion with Angie about my relationships with the Angels and Peggy.\n\nSo, I swallowed several times and spent the next almost two hours describing the relationships I had with the Angels and Peggy. I omitted the prurient details, relying on phrases like \"slept with\" and \"spent the night together\" to convey the depth of the relationships. I wanted to get it all on the table before the expected agenda for the evening in case Angie was upset by my revelations. I didn't want her to think I had taken advantage of her for one last time before telling her in case she reacted badly.\n\nAngie listened stoically. Her response surprised me. \"Why are you telling me all this?\"\n\n\"I sense that we're at the beginning of a long, committed affair,\" I started. \"I don't want any surprises, now or in the future, to derail our relationship.\"\n\n\"Nick,\" said Angie seriously. \"We're middle aged. We probably have at least sixty years of post puberty relationships between us. During those years we've had more than a handful of intimate relationships, including sex. I don't plan on sharing my sexual history with you and I don't see a reason for you to share yours with me. Our history starts now. What happened before 'us' is prologue and unrelated to the future I also sense we're creating together.\"\n\n\"I agree,\" I told her. \"My history isn't relevant. I wasn't describing history.\"\n\n\"Wait a minute,\" Angie said. \"You're currently having sex with ... how many ... one, two. ... nine other women other than me?\"\n\nI don't know if I can adequately describe what contrite looks like, but I did my best to look like I was. I weakly nodded my head.\n\nAngie was pensive for the longest minute of my life. \"I don't see how that's a problem,\" she finally said.\n\nMy relief must have been obvious.\n\n\"Eight of the women are coeds in the local university. You've become a father figure to them. An incestuous father figure but a father figure none the less. Your relationship with them is a cornerstone in the foundation for the rest of their lives. I see no reason to disturb those relationships. They will graduate, get jobs, find husbands and eventually drift away.\"\n\nI listened to Angie's analysis and I agreed with her. There was no problem but there would be a solution as long as Angie didn't have an issue.\n\n\"One condition though,\" she continued. \"I get to meet all of them.\"\n\n\"What? Really?\" I managed to ask.\n\n\"Yeah. Really. If they're going to be part of your life during the early stages of our life together, then they have to be part of my life too. Meeting them is the beginning,\" she averred.\n\n\"Okay,\" I agreed. \"I'll see what I can do.\"\n\n\"No problem,\" Angie stated. \"We're going to have a party.\"\n\nWe had a hell of a party. Angie planned it for the second week of the summer break from the university. She found a five bedroom \"cabin\" on a private lake in the foothills not two hours from us. She rented it for two weeks and I invited the Angels and Peggy to join us for the entire time.\n\nEveryone, except Peggy, accepted the invitation. We arranged transportation. Check in time was noon on Saturday and by one, everyone was there. Introductions were quick and painless. The environment and the joy at being there made everything simple.\n\nThe property was about two miles down a gated dirt road. The \"cabin\" was huge. About three thousand square feet on two stories. Four bedrooms upstairs and a large bedroom on the first floor. There was a fully stocked kitchen, a dining room with a table that could sit sixteen, a screened porch and a lake with an imported sand beach about one hundred feet from the back yard. The whole property was surrounded by tall pines and other hardwoods. The air was clean and smelled of pine.\n\nEveryone picked a roommate and a bedroom. Angie and I had the first-floor bedroom. Within an hour of arrival, five of the Angels ran to the beach, stripped off their clothes and jumped bare assed into the water.\n\nAngie elbowed me as we watched from the porch. \"Looks like you're going to have an exciting time,\" she commented.\n\nThe second day we were there, several men in small boats were anchored in the lake about two hundred yards offshore. They had binoculars and were watching the Angels cavort on the beach and in the water. When I pointed them out to Julie, she and the rest of the women made a point of facing the boats and waving to their admirers. Discovered, all the boats, except one, left and we didn't see them again.\n\nOne boat hung around until I stripped and waved to him. I did more than just wave. I beckoned for him to come closer. He turned and left quickly. \"Nice work,\" said a laughing Angie.\n\nWith our privacy insured, clothing became optional.\n\nI slept with Angie every night but we were rarely alone in bed. With Angie's encouragement, I also spent time in each of the other bedrooms before returning to the first floor in the middle of the night.\n\nSupplies weren't a problem. We arrived fully stocked and I made two trips into the nearest small town for food, adult beverages and suntan lotion. Each round trip took about four hours during which time Angie was alone with the Angels.\n\nAfter the first resupply trip, and we had everything unloaded and put away, Angie and I were lounging on the beach watching three of the Angels swim, two others sun and the rest either hiking through the pines or entertaining themselves in the cabin.\n\n\"You're really enjoying yourself,\" I stated.\n\n\"I am. I could get used to swimming naked, hiking naked and generally living naked,\" Angie admitted.\n\n\"I wasn't talking about swimming or hiking,\" I clarified.\n\n\"Oh,\" responded Angie. \"Is it that obvious?\"\n\n\"Not obvious, but hard to miss,\" I told her. \"I want you to know I don't have a problem. I'm glad you're expanding your experiences.\"\n\n\"Not expanding,\" said Angie. \"Renewing.\"\n\nIt was my turn to say, \"Oh.\"\n\nAngie got to know the Angels very well and they got along famously. The outcome of the party at the lake extended far into the months that followed.\n\nAt the end of June, Simon and I had a conversation about my future with the company. Simon conveyed that he was immensely impressed with my efforts on behalf of the company and he offered me a raise and the management of the mall on my own. I quickly accepted. He had one caveat. He wanted me to continue to be the mall's Santa during the Christmas season. I could work it into my schedule and the extra money would be an end of year bonus.\n\nI had a dinner conversation with Peggy. This time I cooked the meal. When I explained my building relationship with Angie, she was more than understanding. She was ecstatic at my good fortune. When I revealed that I would probably move out, she told me she was expecting that. I offered to continue to give her the extra money each week, she told me not to worry about her. She was going to raise the rent on my apartment anyway. We hugged and kissed after dinner but we didn't head for the bedroom together. Peggy didn't want to engage in end of relationship sex. She wanted to keep the memories intact. I agreed with her.",
        "I was almost living with Angie at her place. We had dinner together after work almost every day and we slept together every night. One particularly memorable night, we were lying facing each other after a languorous and intensely intimate sharing of bodily fluids. Angie was sleeping with her head on my arm under her neck. Her right arm was alongside her body and hung over her abdomen. Her left arm was somewhere between us. The lighting was perfect and I lay quietly, fascinated by the display of her breast lying on her chest.\n\nThe curve of her breast started high on the inside of her chest, descended smoothly in a perfect arc near her other breast and continued up in a spiral, past her nipple and ended high on her chest near her arm. Her nipple sat at the peak of the curve, an island in a sea of perfect skin. The play of light and shadow on her breast, moving slightly as she breathed, completed the captivating display.\n\nI wanted to reach out and touch her breast but I couldn't. I couldn't bring myself to disturb the perfection of the moment. I wanted to capture the image permanently. I thought about the skill of a master artist who could memorialize the moment in oils. But I was no artist. I considered photographing her breast so I could look at it forever and remember this moment, but I couldn't. I couldn't photograph her breast without her knowing it. It was so beautiful that I'd have to share it with someone and, even though a picture of just her breast was anonymous, any one I showed it to would figure out that, if I had the picture, it had to be Angie's breast.\n\nInstead, I memorized every detail so I could replay in my mind whenever I wanted. I focused on the arc of her breast one inch at a time, memorizing the texture of her skin and the play of light and shadow. I memorized the perfectness of her nipple resting on the plumpness of her breast and I focused on the sounds of her breathing as her breast expanded and contracted with each breath she took.\n\nI was almost catatonic, unblinkingly focused on her breast when Angie opened her eyes.\n\nConcerned at my intensity, she asked, \"Are you all right?\"\n\nHer voice broke my concentration. In that moment I realized how much I loved this woman. How much I wanted to spend the rest of my life with her. How much I wanted to wake up every morning in the shadow of her perfection, with the sound of her voice, with the joy of her laughter and the depth of her intelligence.\n\n\"I love you,\" I admitted.\n\nAngie's eyes opened wide. \"Oh my God,\" she said.\n\nShe rolled on top of me and showered me with kisses. \"Thank you. Thank you,\" she repeated. \"I've wanted to tell you for weeks but I was afraid to say it. I was afraid I'd scare you and I'd lose you forever.\"\n\n\"I love you. I love you,\" she repeated and kissed me furiously again.\n\nWe held each other in a tight embrace, unwilling to separate in case we'd lose the moment. We repeated the words dozens of times and we meant it each time.\n\nThat was twelve years ago. Angie and I have been married for over ten years now. We had an unusual wedding. Neither of us had immediate family. Angie had only a brother that she hadn't heard from in over two decades. Simon was my best man and the Angels were Angie's bridesmaids. For balance at the altar, the elves stood on my side and the rest with Angie. Peggy served as her Maid of Honor.\n\nI moved out of my apartment. Angie sold her small house and we bought a house with four bedrooms. Angie said we needed two guest rooms and a home office in addition to the master bedroom. I didn't question her logic but I did wonder what she thought was possible.\n\nWe love the new house and our life together. We start every day with good morning sex and end every day with a loving good night.\n\nI still work for Simon. Now I'm the regional director with a half dozen malls in my portfolio. They spread over several hundred miles and I have a company car to facilitate the travel and the infrequent overnight stays. I rarely travel alone. Angie comes with me whenever she can and she nominates someone else when she can't. I'm still Santa at the mall during the holidays but now, there's a privacy curtain down the center of the changing room.\n\nAngie was right about our future with the Angels. Over time they drifted away to lead their own lives. We exchange Christmas cards with Peggy and five of the former Angels that have married and have children of their own. Two of them have young boys named Nicolas.\n\nTwo others have left for parts unknown. Only Suzanne remains in our lives. She visits irregularly and claims to be looking for \"Mr. Right.\" Angie isn't convinced of Suzanne's assertion. We're trying to find a path for Suzanne that doesn't involve us.\n\nWe've developed relationships with several new couples, all married. The extra bedrooms have been useful.\n\nFinally, we continue to have an annual two-week stint at the cabin at the lake. We manage to fill the bedrooms every year. Initially, with the Angels and lately with our new friends. Fourteen days of naked frolicking every year provides stimulus that carries us through the rest of the year."
    ],
    "authorname": "wajawhiii",
    "tags": [
        "group sex",
        "mild lesbian"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/maul-santa"
}