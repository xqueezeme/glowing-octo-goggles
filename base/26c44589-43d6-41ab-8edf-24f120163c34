{
    "title": "The Mark of the Immature Man Ch. 02",
    "pages": [
        "This is Part Two of a two-part story. \n\n***** \n\nWhen I saw Tina's number a few paragraphs before the end of her letter, I subconsciously reached for my phone even before I was done reading. I began crying when I started the letter, but by the last few paragraphs, I was bawling like a child. I don't know that it really mattered what Tina would have said to me, though it was such an unbelievably eloquent and emotional letter that I couldn't help but be moved by it. But since I hadn't ever gotten over her, if she had included her phone number and simply said, \"Call me,\" I think I would have done what she was asking, without thinking, regardless of how terse or dispassionate the content of the message. \n\nIt took me awhile to compose myself. I cried for a good long time, cried not because the woman that I loved had told me that she still loved me, but because I now knew that she had suffered for six years on my account, and that suffering proved her love more than anything that she had said. It was such an incredible story, and I realized that Tina had done the only thing that she could have done. I certainly couldn't fault her for her handling of the situation. Quite the opposite, I figured that, in all likelihood, I literally owed her my life. \n\nI wanted to call her immediately \u2013 to tell her that, of course, I wanted her to come back to me \u2013 but then reason and rationalism crept stealthily into my brain. This wasn't going to be as simplistic as I initially thought it would be. There was a multitude of issues that I needed to consider, and because I was at least a little more mature and forward thinking than I had been, there were complexities to any reunion with Tina that would never have entered my mind six years ago when I first lost her. I guess I had changed more than I realized. So I decided to wait until I was less emotional to make that call and until I knew exactly what I wanted to say. \n\nWhen I went to bed that night \u2013 the last evening in May, I think I must have dreamed about Tina all through an unusually fitful night of sleep. Just prior to waking up, I must have been lying on my back, though I had somehow inexplicably turned my body 90\u00b0 in my bed, so that my legs were dangling over the side. And then apparently while I was dreaming, I began subconsciously moving, mimicking the sexual act. \n\nIt was an incredibly vivid dream, and I simulated in reality every movement that I was making in the dream. Tina was riding me reverse cowgirl on the edge of the bed. She was standing with her feet on the floor next to the bed, squatting over my haunches and thrusting her fine ass so her pussy was sliding up and down my length while she was turning back to stare at me with an extraordinary look of sensuality decorating her gorgeous face. \n\nShe kept saying over and over again, \"Keep fucking my pussy, sweetie; shoot your hot cum deep inside me!\" And then I must have started thrusting my pelvis upward even more, tightening my butt muscles, and lifting my hips off the mattress to meet Tina's thrusts. And then I came, and Tina was screaming, \"Oh sweetheart, yes, yes, I can feel you cumming!\" When I finally opened my eyes and became fully conscious, I realized that the inside of my underwear was wet and sticky with a load of thick semen. It was only the second time in my life that I had had a nocturnal emission. The only other time was when I was 12. \n\nAfter waking up, I realized that every muscle in my body was sore. It was like I had been fucking all night long. Thank god, I wasn't sleeping with Kendra that evening; I might have had some explaining to do! \n\nKendra \u2013 she was one of the first really significant complications that I knew I would have to deal with. There was no doubt that I liked her. During the time that we had been dating, she had developed as a kind of yin to my yang. \n\nThere was only one problem with Kendra. She wasn't Tina, and she would never become Tina, and so, despite my attraction, I had been hesitant to express myself to her emotionally. That might have been some advantage in my moving on from her, but breaking up with someone is never easy, no matter what the nature of your relationship. \n\nI wasn't looking forward to telling Kendra about Tina, but I felt that regardless of how specific and detailed I would be in explaining my history with Tina, I owed Kendra an explanation of some kind. Even before talking to Tina, I started thinking of how I would approach Kendra. But I had a phone call to make first \u2013 the most important phone call of my life. \n\nThe next day was Saturday, and so after I had had a chance to plot out all of my talking points, I sat down to call Tina. I had actually written out what I wanted to be sure to say to her, considering that she had quite obviously spent a good deal of time phrasing her thoughts and emotions in her unbelievable letter to me. I dialed the number. But then, once I heard Tina's voice, everything that I had planned and hoped to say to her \u2013 all of my passionate, scripted thoughts \u2013 melted away like so much spring snow. \n\n\"Hello.\" It only took the lilting grace of that one word for every memory of her and all of my strange emotions and awkward embarrassment to come flooding back simultaneously, and I was again an immature kid, hopelessly enamored by a woman twice my age. \n\n\"Tina, is it really you?\" \n\n\"Oh, sweetheart, I am so glad you called me. I have been hoping and praying that you would call. It is so wonderful to hear your voice. I have missed hearing it so much. Thank you! Thank you so much for calling!\" For the first few minutes of the conversation, we were both talking through our sobs and tears. \n\n\"Thank you for writing. I didn't think that I would ever hear from you again, but when I got your beautiful letter, I understood everything \u2013 why you had to leave, why you couldn't contact me sooner. Tina, I am so sorry I put you through all of that!\" \n\n\"Oh, sweetie! You didn't put me through anything. Instead, I put you in harm's way, and I have felt so awful about that for the past six years. I'm sorry, sweetie; I'm so, so sorry.\" It was unfathomable to me that Tina felt guilt over having very possibly saved my life, but it was just so like her to think of me before she thought of herself. \n\n\"So, you've been living in North Carolina?\" \n\n\"Yes, Chapel Hill. I've been working for the University here, in the Registrar's Office. How about you, sweetie? What are you doing now?\" \n\nI went on to explain about graduating from college, about my job, about teaching English, but I didn't like listening to myself talking. Instead, all I wanted to hear was Tina Roche's mellifluous voice. And then inexplicably and despite her declaration of love, I suddenly wanted to know if she had been with anyone else in the time we'd been apart. I don't know why I wanted to know that. It was juvenile of me to be curious. Besides, I hadn't planned to ask, and quite frankly it mattered naught, one way or the other. I was hopelessly in love with her. Still, for some inane reason, I asked anyway. \n\n\"Tina, if this is the wrong time to ask this question I apologize. I know I shouldn't be asking at all \u2013 it's really none of my business, so if you don't want to answer, you don't have to. But, I was wondering \u2013 has there... has there been anyone else, I mean, since you and I were together? I mean, if there has, I would completely understand, but I'm just curious.\" There was a long pause and a few muffled sobs. \n\n\"No, Evan, there hasn't been anyone else. I've more or less lived the life of a recluse for the past six years. I was deathly afraid that if I spent too much time in public, somehow, some way Justin would have found me. Besides, I saw no point in looking for somebody to love when I was still hoping I would be able to come back to you.\" \n\nShe paused for a long time, and the thoughts that ran through my head painted a mental picture that was hard to erase from my brain \u2013 a beautiful, voluptuous woman who was hidden away, suffering in silence and loneliness \u2013 a sort of Southern belle caricature of \"Eleanor Rigby.\" \n\nFinally, she spoke again. \"What about you, Evan? Has there been anyone else in your life?\" \n\nNow, I felt like a complete ass, and I regretted prying into Tina's personal life, acting like I thought she somehow owed me an explanation that she clearly did not. I knew her question was a fair one, especially considering that I'd asked first, and I knew that she deserved an answer. I also knew that I couldn't lie to her. I cared too much for her to do that. \n\n\"Yes, I've had a few girlfriends, and I'm dating someone now, but, Tina, please, I want you to know this more than anything else in this world, and I want you to know that this is the God's honest truth \u2013 none of them could ever replace you; none of them have replaced you. I'm still hopelessly in love with you, Tina. I've never stopped being in love with you.\" \n\nThen, Tina broke down. She cried uncontrollably for a good ten minutes, while I kept saying over and over again through our faltering cell phone connection, \"Tina, I love you; I love you so much!\" I must have said it a hundred times, and though I could not see her face, I knew that she was crying tears of joy. \n\nI don't remember much about the remainder of the conversation. After that initial burst of emotionalism, the rest was all just inconsequential particulars \u2013 love meant so much more than all of that. I know that Tina told me that she would be arriving in Minnesota the following Wednesday morning, and that once she met with the attorneys in Rochester to iron out the inheritance of her husband's estate, she would drive up to Minneapolis that afternoon to see me. Seemingly, the timing couldn't have been better \u2013 that Wednesday was the last day of the school year. \n\nWe talked for perhaps a half an hour, and though I had failed miserably to deliver my calculated and carefully scripted declaration of undying love, I was more than satisfied with how my improvising had been received. \n\nI was so incredibly excited to see Tina. After I hung up, I jumped in the shower, and just as I had done almost six years ago, the day that I first met her, I masturbated envisioning Tina's beauty. When I got out of the shower, I knew I had another phone call to make, and I decided that I might as well get the unpleasantness over with as soon as possible. \n\nI called Kendra, and asked her if I could come over to see her later that afternoon. I offered to take her to dinner at the Loon Caf\u00e9, a modest, hipster eatery in the warehouse district downtown that featured a unique Minnesota take on Tex-Mex dishes, along with an assortment of sandwiches and burgers. She enthusiastically agreed, and that enthusiasm scared me just a little. Kendra was usually quite reserved and unemotional, so hearing the excitement in her voice made me think that this was going to be even more difficult than I had expected. \n\nShe lived in a posh, high-rise condominium downtown \u2013 a building called Skyscape on Portland Avenue. It was a pretty luxurious place, and the first time I went there, I couldn't figure out how Kendra could afford it on her teaching salary, though I certainly didn't mind hanging out there. I later learned that she had grown up in one of the Twin Cities most exclusive suburbs and that her wealthy parents had agreed to set her up in her own place once she had gotten the job at Bloomington Jefferson. The apartment must have cost them a pretty penny. \n\nWhen I arrived at the Skyscape late that afternoon, Kendra buzzed me up to her apartment, and when she met me at the door, I found her dressed to the nines. She was wearing a little, black dress, replete with ruffles on the shoulders and front, and a scooped neckline. It was form-fitted and also sported about six inches of sheer, diaphanous fabric around the midriff and a hemline that ended halfway up Kendra's slender thighs. The dress was augmented by a pair of black, ankle-length sandal-strapped high heels. \n\nShe looked amazing, and I knew that this was another bad sign. Kendra didn't usually dress up like this, and though there was no question that she was a really attractive woman, she didn't ordinarily play up her sexiness. Tonight she had more than done so. \n\nKendra Lind was about 5'5\", and she barely weighed a hundred pounds. She was really slender with a narrow waist and hips, and nicely sized breasts, though they were considerably smaller than Tina's. She had long, coffee brown hair, dark eyebrows, a pale complexion, and stunning blue eyes. She looked really innocent, even though she was older than I was. \n\nI found her really sexy, but I could tell she didn't understand that aspect of her appeal. All through high school and college, she had been really shy around guys, and she told me once that she had only had one lover before me. Now that we had been together for a little while, she had started, albeit slowly, to break out of her cocoon. She was just beginning to understand her sexuality, and though I didn't want to think about that at the time, sex was clearly on her mind that night. \n\nWhen I entered her lavish living room, she greeted me with a deep kiss and a playful pinch on my butt \u2013 another bad sign and another deviation from Kendra's characteristic demeanor. Something was up, though I couldn't put my finger on it. \n\nWe shared a bottle of wine and talked for an hour or so about the end of the school year, and her plans for the summer. Though it was probably a stupid idea to do so before dinner, I tried to steer the conversation in a direction where I could segue into my break-up speech. I just wanted to get it over with. \n\nLike my phone call to Tina that morning, I had spent a fair amount of time that afternoon plotting out my talking points, so that I would be sure to let Kendra down as gently as possible. But she was so animated and happy that I just couldn't work our conversation the right way. I decided that I would wait until dinner \u2013 maybe it would be easier in a public place. \n\nWe decided to walk to the restaurant. It was a beautiful night out, and the Loon was only about a mile away, so a stroll through downtown seemed like a pretty good idea. When we got to the restaurant, the place was packed, and even though I had a reservation for 7:30 p.m., we had to wait for a few minutes for our table. \n\nI ordered the Walleye Tacos, and Kendra chose the Haba\u00f1ero Crusted Walleye \u2013 you can take us Minnesotans out of Minnesota, but you can't take the Minnesota out of us, even if you paint things up like it's San Antonio! \n\nWe order a couple of beers to go with dinner, and then shared a dessert, before walking back to the Skyscape in the gloaming. Try as I might, I still hadn't found the right moment to tell Kendra about Tina. \n\nKendra held my hand throughout our walk home, and a block before we reached her building, she affectionately put her head on my shoulder. She wasn't making my job any easier, and when we got back to her apartment, things got even worse. \n\nShe told me she had a surprise for me and made me close my eyes as she walked me over to a corner of her living room. When she told me that I could open them, I was staring at the shelves of her liquor cabinet that were filled with bottles of my favorite Scotches, gins, bourbons, and tequilas. \n\n\"Kendra, what's all this? Why did you buy all of this booze?\" \n\n\"I thought it might be a nice house-warming gift.\" \n\n\"Kendra, you've lived here as long as I've known you. What do you mean 'house-warming gift?'\" \n\n\"Something to make you feel at home.\" She paused for a few seconds and then looked deeply into my eyes before continuing. \"Evan, we've been dating for four months now, and I don't see why you're wasting your money living in that flat in Uptown when I have all of this room here. I was thinking that you might be happier living with me. I know I would be. We could drive into work together, so you could save money on gas as well.\" As usual, Kendra's argument was practical and logical, but Jesus, her timing was awful! Had she proposed this a week ago, I would have jumped at the opportunity, but now... \n\n\"Kendra, I've been meaning to tell you something, and I think I better do so right now. I... I don't know where to start, but...\" Again, all of my \"best-laid plans\" quickly flew out the 21<sup>st</sup> story window. This wasn't going to go the way that I had planned. \n\n\"Don't... don't start!\" She interrupted. \"Look, Evan, you don't have to give me an answer right now. I just want you to spend the night here making love to me, and we can talk about this in the morning or whenever you want to. I'll give you all the time you need.\" \n\n\"But, Kendra, that... that would be a big mistake! I... I...\" \n\n\"No! No! No! It would be 'a big mistake' for you to look a gift horse in the mouth.\" And with that, she dropped to her knees and began unbuckling my belt. \n\n\"Kendra, please, I've got to tell you something \u2013 it's really important.\" I put my hands on her head, and tried to hold it away from my crotch, as she continued to unzip my fly, and pull down my shorts. \n\n\"It's not so important that it can't wait until morning. Right now, I just want you inside me, and I've got another surprise for you! A big surprise.\" By the time the words had left her lips, my cock had entered them. \n\nAgain, I tried to stop her, and kept saying over and over again, \"No, Kendra, please, don't,\" but she wasn't taking \"no\" for an answer, and before I could do anything, my cock was growing harder and harder as she was staring up at me with wanton eyes while she slid her soft lips back and forth around my stiffness. \n\nAnd pretty soon my pants were around my ankles, and I didn't want her to stop, even though I knew it was wrong and knew that this development was really going to complicate matters. Besides, I felt like I was cheating on Tina, cheating on both of them. But I was thinking with my dick now, and Kendra was doing things to me that she had never done before. She was on fire! \n\nNext, she took each of my balls into her mouth, licking and sucking them with great enthusiasm, while she stroked my cock with both of her small hands. Then, she reached behind my balls with her right hand and began caressing my asshole! Before I knew it, I was moaning uncontrollably. \n\nAnd then Kendra paused long enough to pull my shoes, socks, and pants off me, and then she stood up and while she continued to stroke my cock with one hand, she began unbuttoning my shirt with the other. An instant later, I was standing naked in that luxury apartment with my raging hard-on pointing provocatively at the Minneapolis skyline. \n\nThen, she whispered into my ear, \"Let's go to my bedroom. I want you to take me in my ass tonight!\" This was a shocking revelation, considering that Kendra had already told me that she had never before engaged in anal sex and didn't think she ever could. And now as I tried to prepare her for the news that I could no longer be with her, she wanted to have anal sex? She grasped me hard around my girth and tried to lead me into the bedroom, but I tried again to resist. \n\n\"Kendra, I shouldn't do that!\" \n\n\"You should, and you will!\" She demanded with a smile on her face, momentarily playing the role of faux dominatrix. \n\nAnd then her real personality re-emerged. \"Come on, Evan. You've told me several times before that you like anal sex, and now I'm finally ready for it. I spent some time getting myself all prepared for you. I've cleaned myself up because I thought you wanted this, baby. But now? I've gotten so excited thinking about it. Now I need it! And I need it, right now, baby!\" Kendra had never before been aggressive or demanding with me, but there was something crazy going on, and now I was caught in a trap from which it became pretty clear I could not escape. ",
        "I didn't want to do this. I knew that if I told Kendra about Tina after we did this, it was going to appear as if I was a total asshole who had taken advantage of her. Having anal sex with her for the first time only made the entire spectacle look even more unsavory. Besides, if there was anything that I had learned about sexual relations from Tina, it was that men and women can only be mutually respectful partners if they are completely honest with each other about their sexuality and all it encompasses. If this had happened a week ago, I would have had no moral qualms about it, but knowing what I now knew made me think that this was dishonest. \n\nOn the other hand, either I was going to disappoint and anger her now, or I was going to do it later. In some ridiculous stab at rationalization, I reasoned that at that very moment I was naked as a jaybird and sporting a throbbing erection, and I assumed that that wouldn't be the case in the morning. Better to anger a woman when your cock is concealed and at ease, I falsely reasoned, than to do so when your prick is conspicuous and excited! \n\nI didn't say anything, but I made it clear that I was acquiescing. We retreated to Kendra's bedroom, where I spied a bottle of lube and a hand towel on the nightstand. Then regrettably, I resumed my usual role as the primary instigator in this sexual relationship. I began peeling her little, black dress off her. \n\nKendra wasn't kidding when she said she was prepared for me. What I found underneath her dress got me even more excited. She was wearing some kind of black, harness bra and matching G-string. The front of the bra reasonably concealed her tits, while the front of the G-string barely covered her thick, dark, trimmed bush. But the back of each was a different story \u2013 they essentially consisted of nothing more than a series of strings that wove their way around her slender back and shapely derriere. \n\nI unbuttoned three buttons that held her dress tightly against her cleavage, and then I eased that little, black number down her bosom, waist, and hips until it fell harmlessly to the floor, and she was able to step out of it. I left her heels on. I pulled her tits out of the cups of her bra, but left it on. It just looked sexier that way. \n\nThen, Kendra crawled onto her huge bed on all fours, tantalizing me with her tight backside, like a trainer dangling a carrot before a horse. I followed her onto the bed, and grabbed her butt cheeks with both of my hands, and began caressing her taut skin. Then, I leaned forward to pay homage to her ass. \n\nI only had to spread her cheeks apart and move one string aside to reveal her virgin hole to my lustful eyes. Then, I went down on her tight, little starfish and began alternately licking her voraciously and gently fingering the slick, quivering tissue of her hole. \"Oh my god, that feels good!\" she cooed. I was leaving behind abundant amounts of saliva as I tongued her. It would soon serve as additional lubrication once Kendra was ready. \n\nThen, while I continued to tongue her asshole, I pulled the front of her G-string aside so that I could enter her pussy with my fingers. Kendra was soon breathing deeply, moving her hips against my urgent probing, and softly mewling her approval.  \n\nI bent down further and moved my face to Kendra's now leaking pussy and began to run my tongue up and down her lips. I withdrew my fingers from inside her and used them to spread her lips wide open, so that I could run the flat of my tongue all the way from her clit hood to her asshole. I could feel her arousal running down the length of her vulva until her small, but dense patch of dark brown pubic hair was saturated with her juices. \n\nI wanted to make Kendra cum before we embarked on something she'd never tried before. In my experiences, not every woman enjoys anal sex. It seems as if they either love it or hate it. If Kendra didn't like it, I at least wanted her to have enjoyed what came before. I figured that meant making her cum by eating her pussy. So I placed my left hand on her tight ass, with my palm facing down, and I reached my thumb to her gushing sex. Then, I began sawing it back and forth inside her, unleashing another round of erotic groans and an additional flood of arousal. \n\n\"Oooooooohhhhhhhh! Oh my god, that feels so good, baby! Keep fingering me!\" \n\nAnd then I went for her clit. While I continued to finger her wet pussy with my thumb, I wrapped my mouth around Kendra's pink pearl, sucking it deeply into my mouth, where I could flick just the tip of my tongue back and forth across it, darting here and there, making direct contact and then backing off, pleasing and then teasing. Then, I altered the motion, moving up and down, and then changed things up again, swirling around it and over it with my tongue. \n\n\"Oh, lick my clit, Evan! Oh fuck! Oh fuck! You're gonna make me cum all over your face! I'm really close, Evan! Make my fucking pussy cum; make it cum!\" \n\nSo, I stopped teasing, and began urgently sucking her clit into and out of my mouth while I continued relentlessly tonguing it, until I could feel the spasms starting to build deep inside her. Finally, she screamed her release, \"Fuuuuuuuuuuuuuuuucccccccccccccccckkkkkkkkkkkkkkkk!\" \n\nI could feel her pussy convulsing around my thumb, and then I felt a rush of warm fluids bathe my face. Kendra's knees were quaking under her, and then I saw her upper body slump forward and she fell onto her tits on the mattress. Her orgasm lasted a long time, and throughout she was breathing really quickly and whimpering softly. \n\nAnd now I was really excited myself, and I wanted to be inside her. It was going to take me awhile to prepare her ass for my cock, and I figured I might as well enjoy her pussy in the meantime. Before I did, I reached for the lube and hand towel on the night stand, and dropped it onto to the bed where I could reach it when I needed it. Then, she got back up onto her hands and knees, and I peeled Kendra's G-string off her. I was rock hard, so now I just withdrew my thumb and replaced it with the head of my cock. Then, I thrust into her pussy in one long, slow stroke. \n\n\"Oh my god! You're so big! Jesus Christ, you're gonna make me cum again!\" \n\nThen, I started moving in and out of Kendra's frothy sex. I grasped her hips with both of my hands and began building a steady rhythm. She was looking back at me now, and her face was painted with the most erotic expression \u2013 her stunning blue eyes spoke to the pleasure she was deriving from every thrust, and her mouth formed an \"O\" that appeared poised to elicit sensuous words, but instead produced only a string of feral sounds whose cadence matched the rhythm of my thrusting, \"ugh... ah... oh... ugh... ah... ohmagod... ugh... ah... oh... ohmagod... ugh... ugh... ugh...\" \n\nThen, I picked up the bottle of lube with one hand, while I continued to hold Kendra by the hips with the other, and I squeezed a big dollop of lube into her tight little hole that seemed to be egging me on, urging me forward, and then, just as I had done earlier, I put my free hand on her slender ass, and with my thumb now slick with lubrication, I used it to enter her virgin backdoor. As I pushed gently, I felt her sphincter muscle give way, and my thumb slid in all the way to the knuckle. \n\nShe responded with an elongated and vulgar groan, \"Aaaaaaaaaaaggggggggggghhhhhhhhhhh!\" Then, I began moving my thumb back and forth, beginning my protracted preparations to enter Kendra's virgin ass with my manhood. What I hadn't appreciated was that she was already really close to reaching another climax, and with my vigorous thrusting and the additional sensation that my thumb was producing, she was right on the edge. \n\nSo I was unaware of the effect that my next move would have. I withdrew my thumb and, after squeezing another stream of lube into her slick hole, I repositioned my hand so that my index and middle fingers could enter her simultaneously. They initially met the same resistance as my thumb, but then I slowly slid my joints past her slick opening and soon my knuckles too were snuggly gripped by her tight hole. \n\nAs then, Kendra commenced another extended round of shuddering. Her asshole was amazingly sensitive, and I could feel her convulsing around my two digits. She let out another erotic moan, \"I'm cumming! Oh fuck, I'm cumming again! I'm cumming again! Aaaggghhh! Aaaggghhh! Aaaggghhh! Aaaggghhh! Aaaggghhh!\" The tremors shook her slender frame, as I continued to saw my fingers in and out her tightness and my cock deeply into and out of her creamy pussy, withdrawing all but my engorged helmet on every stroke. Kendra rode both throughout another long, drawn-out orgasm. \n\nI was happy that I had made her cum so easily, but I now realized that Kendra was about to become one of those women who fall in love with anal intercourse. I hadn't even entered her yet, but I knew that she was destined to become a devotee. Under the circumstances, that wasn't a good thing. \n\nThen, I added more lube to her ass, before introducing a third finger to her now gaping orifice, and I continued to stroke in and out of both of her holes. \"Oh my god! I didn't think it would feel this good! Jesus Christ! Oh baby! I want your cock! I'm ready for it!\" \n\nSo, I withdrew my throbbing meat stick from her pussy, and doused it in lube. Then, I pulled my fingers out of her tight ass and replaced them with just the head of my prick. When my bulbous knob pushed past Kendra's sphincter, she turned and stared back at me with a look of disbelief. \"Holy shit! You've never been this big before! Oh my god! I don't know if I can take all of it!\" \n\nI looked down, and I think Kendra might have been right. I don't remember being as engorged as I was at that very moment. \"I'll go really slowly, baby! But you tell me if it hurts at all, even just a little bit, and I'll stop!\" \n\n\"I don't want you to stop! It doesn't hurt, but it's so big! I think I can... I think I can take more of it! I want the whole thing!\" \n\n\"Okay, baby, but you need to start touching yourself while I push my way into you! Rub your clit, baby! Don't stop rubbing it! I've got a long way to go!\" \n\nSo, she began massaging her clit with two fingers. And pretty soon, through that thin membrane that separated her two erogenous zones from each other, I could feel her fingers thrusting in and out of her pussy. She was alternating between rubbing her pink button for thirty seconds or so, and then fucking her seething hole with her middle and ring fingers for another minute. All the while, she never stopped moaning. \n\nI started to gain a half an inch here and another quarter inch there, and after 10 minutes or so, I had half of my cock in her backdoor. She was breathing really deeply now, and every time I pushed a little deeper, she held her breath momentarily, before emitting a long, low growl. Now, I was poised to enter her with the thickest part of my shaft. \n\nI looked down and saw that I had all but about an inch of my manhood inside her, and I wanted to try to fully impale her on my erection. \"Okay, baby! Are you ready for the last part of me?\" \n\n\"Oh my god! How much more of it is there? I can't believe how much you're filling me up! But it still feels really good, and I want you to start fucking me with it! It's a completely different kind of feeling, but I know you're gonna make cum once you start thrusting! Just go slowly once you start moving, please?\" \n\n\"I will. I promise.\" So, I started to push the last few centimeters into her slick anus, and as I did, I squeezed some more lube onto the base of my cock. When I was finally in to my root, I told Kendra. \"That's it baby! You took it all! Are you okay? Do you want me to start moving?\" \n\n\"Jesus fucking Christ, Evan! You're huge!\" She took a deep breath. \"Oh my god! Okay, you can start fucking me now! Just go really slowly.\" She went back to rubbing her clit with two fingers, wrapping her middle and ring fingers on either side of her clit hood and sawing her them back and forth around that long, slender jacket as she massaged herself. \n\nI started to withdraw, but I only pulled out an inch or so before I moved back in again. \"Oh my god, that feels good! Holy shit! You're gonna make me cum again! Keep moving, baby! Fuck my ass! Fuck my ass with your massive tool!\" \n\nSo I slowly began to increase my pace and the length of my strokes, and in 10 more minutes I was penetrating her with at least half of my throbbing cock. And once I did, Kendra was soon lost a different world. She was grinding her fingers over her sensitive pearl and then plunging them back into her sex, while long, guttural sounds emanated from deep inside her, \"Ugh!... ugh!... ugh!... ugh!... uugghh!... uugghh!... uugghh!... uugghh!... uuuggghhh!... uuuggghhh!... uuuggghhh!... uuuggghhh!...uuuugggghhhh!... uuuugggghhhh!... uuuugggghhhh!... uuuugggghhhh!... uuuuuggggghhhhh!... uuuuuggggghhhhh!... uuuuuggggghhhhh!... uuuuuggggghhhhh!\" \n\nThen, she slumped forward so that her ass was sticking up in the air, while her upper body fell forward onto the bed again, and her face was turned toward me, but there was no comprehension evident in it. Kendra didn't know where she was or what was happening to her. Instead, all she could do was feel, feel me thrusting fully into her, and then the quaking began anew, and she was cumming again, her whole body was cumming now, \"Uuuuggggghhhhh!... uuuuuggggghhhhh!... uuuuuggggghhhhh!... uuuuuggggghhhhh!... uuuuuggggghhhhh!... uuuuuggggghhhhh!... uuuuuggggghhhhh!... uuuuuggggghhhhh!\" \n\nI could feel her asshole convulsing around my thickness, and, at the same time, I could feel that she had thrust all of her fingers inside her pussy as it too trembled around her invading digits. But, in fact, it wasn't just her erogenous zones that were orgasming; every muscle in her body was twitching and jerking involuntarily, and feeling Kendra's own climax washing through her, put me over the top. \n\nI could feel the electricity arising from my balls, and soon the surge moved through my dick, and I began my own involuntary movements. Grabbing Kendra tightly around her hips, I was thrusting now as hard as I could into her ass, and while I did, I announced my orgasm, \"Oh baby, I'm cumming in your ass! I'm cumming in your ass! Jesus Christ, I'm cumming hard!\" \n\nAnd then I felt my thick ejaculate washing through her tight channel, bathing my throbbing member with even more lubricant. I must have deposited at least 10 powerful ropes deep into Kendra's anus, and it was only gravity that kept my seed inside her. Had her ass not been suspended as if in midair, I know my cum would have started to drip out of her. \n\nMy orgasm lasted a long time. Every time I thought I was done twitching, I slid back in an inch or so and felt another contraction of my cockhead. Finally, after two or three minutes, I pulled my oversensitive member out of Kendra. \n\nShe didn't move. All I could hear was her deep breathing, the dim sound of her heart beating out of her chest, and a soft, but continuous whimpering emanating from somewhere deep inside her. I was afraid that I'd hurt her, and the longer she lay there like that with her eyes closed, her head twisted around as if to look behind her, and her ass propped precariously atop her shaky legs, the more convinced I was that I had gone too far. \n\nI collapsed onto the bed, and pulled Kendra's ass down until she was lying next to me so that I was spooning with her. And then, sure enough, as soon as I did that, I could see my spunk oozing out of her gaping hole. She still didn't open her eyes, and now I was really worried. \"Kendra! Kendra! Are you okay? Did I hurt you?\" I wrapped my arms around her in a nurturing embrace. \n\nShe still didn't answer. I propped myself up on my elbows and tried to turn her face toward me, caressing it gently with my hand. She continued to lie there that way for at least 10 or 15 minutes. I could see that she was breathing and her heart was beating fast, but other than that, she didn't appear to be responsive. I kept gently stroking her pretty face. Finally, she opened her eyes, and then ever so slowly a grateful smile began to wash across it as her recognition of me registered in her intellect. \n\n\"You've come back! Are you sure you're okay, Kendra? You had me worried, baby!\" \n\n\"Oh, I'm better than okay! I probably won't be able to walk tomorrow, but right now, I don't think it's possible to feel more completely sated. Thank you, baby! I really needed that! I think you've ruined me for normal sex now, but my god, that felt so unbelievably good!\" Then, she added rhetorically, \"Can we do it again soon?\" \n\nShe kissed me really passionately, and now I was worried again. That night had made tomorrow that much more difficult, and besides my conversation with Kendra, I had somewhere else I needed to be in the morning. We fell asleep spooned together like that and slept right through the night. \n\nI awoke first in the morning. I got out of bed, took a quick shower, got dressed, and made coffee for both of us. Then, I started to review my talking points for the impending disaster that I was about to unleash. Again, this ultimately proved to be a big waste of time. I wound up improvising anyway. \n\nAn hour after I got up, Kendra tentatively stumbled out of bed, visibly walking gingerly as she approached the small dining area where I sat brooding over a cup of strong coffee. \"You're an old hat at this anal sex business, right? Which comes first the next morning, Evan, a couple of Ibuprofen or a cup of coffee?\" \n\n\"Neither. They both come at the same time,\" I said, pouring her a cup of joe, and handing her a pair of pills that I'd already pulled from her medicine cabinet for her. I knew she'd be sore. She threw back the pills with a long swig of coffee and then looked me in the eyes warmly. \n\n\"You know, as sore as I am this morning, I wouldn't have regretted last night even if I couldn't walk at all today! That was really something, baby!\" She said smiling. A knot was growing in my stomach, and it was only going to get more unpleasant. \n\n\"Kendra, I really need to tell you something, and, unlike you, I do have regrets, real regrets that I didn't tell you this last night.\" \n\n\"What's wrong, baby? Are you trying to tell me that you don't want to move in with me?\" \n\n\"That's only a tiny part of it, Kendra.\" She got a really disappointed look on her face. \"I've never told you about what happened the summer after I graduated from high school. It was a kind of painful experience, so I wasn't disposed to talking about it at all. I've never told anyone about this \u2013 no one, not my best friends, or even my family.\" \n\nI took a big sip of coffee, and I looked deeply into Kendra's blue eyes. Even with sleep still in them, they were stunningly beautiful. \"I met a woman that summer at the lab that I worked at. We started dating, and I really, really liked her, Kendra. She was just an incredible person, and though I didn't even really know it as it was happening, I was falling in love with her.\" \n\nThe pain in Kendra's face was palpable, and now I wished that I had had the courage to say all of these things last night. I was reminded of that day in Tina's apartment six years ago when I hid in the bathroom when Justin nearly broke down Tina's door. I was lamenting that cowardly streak that I knew was an unforgiveable aspect of my makeup. \n\n\"Anyway, to make a long story short, that woman just disappeared one day that summer, never called me, never wrote me, and I never heard from her again, until the day before yesterday. She wrote me a long letter that explained why she had left, and I don't want to go into all of that, Kendra, especially to you, but she had really, really good reasons for doing all of the things that she did. She didn't really have any choice. The bottom line is that she feels the same way about me that I feel about her, even now six years later, and this week she's coming back here to Minnesota to see me.\" ",
        "She didn't say anything, but I could tell that beneath a calm exterior, Kendra was seething. I continued. \"Kendra, I feel really, really bad that I have to tell you all of this, especially after last night. You're a great girl, and I really like you, Kendra. But I really hope that you'll understand and that you'll want what's best for me. And I think that this is what's best for me.\" \n\n\"You like me! Is that what you say to all of the girls that you fuck in the ass, Evan? Jesus Christ! You're really full of yourself, aren't you? You think because you've got a big dick and know how to use it, that you can just shit all over everyone else?\" \n\n\"Kendra, I tried to tell you this last night! I tried to stop you, but you weren't taking 'no' for an answer. The last thing in the world that I want to do is to hurt you, Kendra!\" \n\n\"Yeah, you tried really hard, almost as hard as you tried not cumming in my ass! We've been going out for four months, Evan. You've had four months to tell me this, so don't give me that bullshit about how I wasn't taking 'no' for an answer last night!\" \n\n\"But Kendra, until 36 hours ago, there was nothing to tell you. I had no idea that this woman was even alive anymore, much less that she was still in love with me!\" \n\n\"Oh, that's such a sweet, romantic story! Forgive me if I don't shed a little tear for poor, poor Evan! Hey, I wonder, did you fuck 'this woman' in the ass the last night you spent with her too? Did you leave a little something in her ass to remember you by? And can you explain why in your pathetic vernacular I'm a 'girl,' even though I'm older than you are, and the slut you've been pining over for six years is a 'woman'? How old is this bitch, anyway?\" I winced when I heard the word. \n\n\"Quite a bit older than I am, but, Kendra, that has nothing to do with anything! If I would have known how she felt about me, or that she was ever going to come back, I would never have started up with you or anybody else. The only real mistake I made was last night. As soon as I knew, I should have told you. I'm sorry, Kendra. I'm so, so sorry!\" \n\n\"The only 'real mistake' you made was last night? Well, how the hell do you think I feel about that 'mistake'? Jesus Christ, Evan! I buy up half of Surdyk's inventory for you! Then, I invite you to move in with me, and give myself an enema so that you can fuck me in the butt for almost an hour until you shoot about a gallon of cum up my ass! Now, there's a wet spot the size of Lake Calhoun in the middle of my bed, I won't walk straight for a week, and you can tell everyone at Jefferson that you took me in the ass the night before you dumped me! And you have the audacity to think that you made a mistake?\" \n\nShe certainly had a point. There was nothing more that I could say. Despite the fact that she was sitting two feet away from me, we were both so far away from each other at that moment that nothing I could do would have made one iota of difference. The only thing left was for me to apologize again. It was the most honest thing I could do. \"I know you don't believe me, Kendra, but I'm really, really sorry that I hurt you! I wasn't honest with you, but please forgive me!\" \n\n\"Forgive you!\" She stood up, shaking her head, and walked slowly back to the bedroom. I walked the other direction to the door. It was the last time I ever saw her. \n\nI took the elevator down to the lobby, and I walked outside into the cool, clean air of a beautiful June morning. My car was in the parking garage, but I needed to walk, and there was someplace I wanted to go. The closest Catholic church was about six blocks away on 8<sup>th</sup> Street \u2013 St. Olaf, but I decided that I could use a longer walk, so I headed southwest over to the big place \u2013 the Basilica of St. Mary near Loring Park. \n\nI hadn't been to church since I was in high school, but I had made a deal with God all those years ago, and I got the feeling that He was now calling in His marker. I had made a bargain, and I took pride in keeping my promises. Besides, I had some serious sins for which I needed to ask forgiveness. Maybe Kendra would never absolve me of my guilt, but I had the impression that God might be a little more open to mercy than \"a woman scorned.\" \n\nIt was interesting to me that six years of heartache, rather than squashing any faith that I might have possessed, had had the opposite effect. Like so many other young people raised with religion but confused and frustrated by too many unanswered questions, I was an avowed agnostic when I left high school. \n\nTwo months later, Tina disappeared. When she did, I had promised God that if he brought her back to me, I would begin praying and going to church again. I took it on faith that if God existed, returning Tina to me would be the sign that I needed to confirm His existence. And though that sign hadn't manifested itself for six long years, I had already changed my mind about God. \n\nEventually I reasoned, however illogically, impractically and narcissistically, that if I had been granted the magnificent blessing of loving Tina for a month, how could God not exist? A big part of working my way through the grief that I felt when Tina left me was reconciling the fact that even if I was stricken with unbearable sorrow and anguish, I had at least been given something wonderful for a short period of time, and, for that, I should be grateful. Besides Tina herself, to whom should I feel gratitude, if not God? \n\nMy timing couldn't have been better. 9:30 Mass was just starting when I climbed the dozens of steps to the entrance of the Basilica. I sat in the back, and I said the prayers, listened to the readings and the homily, thanked God for His blessings and asked for forgiveness \u2013 from Him, from Kendra, and from Tina. I even went to Communion, though I don't know whether I should have or not, but it made me feel better anyway, and I was glad that I had done so. I pledged that I would go to confession, and I would come back to church the next week and the week after that, and on and on. \n\nI was dreading the next three days because I was sure that I would see Kendra at school, and that would be incredibly awkward and possibly really embarrassing. But the three days of school that week were reserved for finals, and we only had students in the building for a few hours each day. I never saw Kendra at all. \n\nI had signed my contract to return to Jefferson in the fall, and I knew that Kendra had done the same. Now I regretted that decision, and I started to think about whether or not I needed to begin looking for another job. But, in truth, there was just so much up in the air at that moment that I figured I had better make some decisions with Tina before I started to consider my professional future. There was no sense, I determined, in putting the cart before the horse. \n\nOn Wednesday morning I gave my last finals, and then I spent the afternoon grading all of my students' tests and finalizing their semester grades. I had already completed all of the finals and grades for my classes that held tests on Monday and Tuesday, so by about 4 p.m. I had completed all of my grading, turned in semester grades, and checked out with my principal. That meant that summer break was starting, and I expected Tina to arrive in the next few hours. \n\nI rushed home and then rummaged through my frig only to find \"the cupboard bare.\" I was hoping that I would be able to cook Tina a romantic dinner, but I quickly surmised that I didn't have time to go to the store, buy everything I needed, and still have time to prepare something nice before she arrived, so I decided that I would take her out for dinner instead. At least I had a couple of nice bottles of wine to share with her. \n\nI was sitting on my living room couch trying to think of the right restaurant for our first meal together in six years. Then, I decided on steak. That was what we'd had for our first meal together in the hotel in Rochester, so I picked up my phone again and made a reservation for 8:00 at a steak place downtown. I didn't know when Tina would be arriving so I wanted to make the reservation late enough that there wouldn't be a problem. \n\nJust as I hung up, my phone rang again. I didn't recognize the number, but I answered anyway. The male voice on the other end of the line sounded annoyingly officious, \"Is this Mr. Evan Hughes?\" \n\n\"Yes, I'm Evan. Can I ask who's calling?\" \n\n\"Yes, this Karl Leitermann of The Law Offices of Engelberg, Johnson, &amp; Leitermann. I represent the estate of Ms. Christina Buchanan.\" \n\n\"Who?\" I asked rudely. \n\n\"Miss \u2013 Chris \u2013 ti \u2013 na \u2013 Bu \u2013 cha \u2013 nan,\" he said in such an exaggerated way, enunciating so ridiculously slowly that he seemed to be suggesting that he thought he was talking to a four year old. I thought for a moment, and then it dawned on me \u2013 Tina. This must have been Tina's new name! Buchanan wasn't the surname on the return address on the letter that sat on my end table only a few feet away from me at that very moment. When Tina sent that letter, she had used the named Roche. Had she really changed her last name in the last few days? I also didn't know that her first name was \"Christina.\" It was a pleasant, but surprising and kind of embarrassing thing to learn that I didn't actually know the real first name of the woman that I loved. \n\n\"Mr. Hughes, before I continue, can you verify the last four digits of your Social Security number for me please? In addition, can you verify your mother's maiden name? And finally, in what city and state were you born?\" \n\n\"You're calling me, asshole,\" I thought to myself when the obnoxious voice on the other end of the line stopped talking, but still I answered all of his questions, if only because I thought he'd mentioned Tina. Otherwise, I think I would have told him that he had better do some explaining before he started asking me questions about my identity. \n\n\"Thank you, Mr. Hughes. I am calling to inform you that a sizeable portion of Ms. Buchanan's estate has been signed over to you. This involves a stocks and bonds portfolio that had been set up as a retirement account. In addition to letting you know that the portfolio has been transferred to your name, I wanted to find out if you would like it to remain in the form of a retirement account or whether you would like to alter your access to this investment.\" \n\n\"A formal letter offering a prospectus, as well as a request for your decision on how to proceed with this matter is forthcoming, but I am calling at the request of Ms. Buchanan herself to offer you the opportunity to make such a change effective immediately if you so choose. As the letter will explain, you have the next thirty days to make that change without penalty. After that time, you would have to pay additional fees to effect the change.\" \n\nI was surprised and confused. I had no idea what the hell he was talking about. I figured it must have been a mistake, but I couldn't figure out how he had all of this information about me. Was \"Christina\" really \"Tina,\" and was she really trying to give me some money? Before I answered Karl's fucking question, I thought I would ask one of my own. \"Mr. Leitermann, can I ask the value of the portfolio?\" \n\n\"As of the last financial report, Mr. Hughes, the portfolio was valued at over $260,000, though that valuation was effective at the end of the first quarter of this year. I suspect that it is greater than that amount now, probably in the range of 270 to 275 thousand.\" I nearly fell off the couch! I couldn't breathe for a moment or two, and when I didn't say anything, Karl started talking somewhat frantically. He must have thought he'd lost the connection. \"Mr. Hughes? Mr. Hughes? Are you still there? Mr. Hughes?\" \n\nMy heart was beating really fast, but I just wanted the phone call over with so that I could try to figure out what had just happened. \"Yes, Mr. Leitermann, I'm sorry. I'm still here. I think that at this time I should not make any changes to the investment. I may reconsider after I read your formal letter in full and look into the specifics. I look forward to receiving that communication. Thank you for letting me know about this matter, Mr. Leitermann. Good day, sir.\" I hung up abruptly.  \n\n\"What the fuck?\" I said out loud. Why in God's name would Tina give me more than a quarter of a million dollars? Had she actually changed her name? I thought about these and at least dozen other questions when suddenly my meditation was interrupted by the buzzer from the lobby. Now, my heart was beating so fast that I was reminded of that day when I hid in the closet in Tina's apartment six years ago when the cops showed up. That was the last time I could remember hearing my own heartbeat pounding through my chest. \n\nI got up from the couch and tentatively pushed the intercom button. \"Tina, is that you?\" \n\n\"Yes, sweetie, it's me. Can I come up?\" Her voice washed every thought that I possessed right out of me. \n\nI was crying now, but I fought through my sobs, \"Yes, god yes, please do. I'll meet you at my door.\" \n\nI lived on the fourth floor of a brownstone apartment building that consisted of eight flats, two on each floor. I walked out into the hallway. Tina could have taken the elevator, but I knew she wouldn't, even though it would take her a little longer to mount the steps to my floor. That was just her way. I could hear the sound of her heels clicking on the marble steps of the stairwell, and every click added to my nearly unbearable anticipation. The clicks grew louder and louder until finally, after what seemed like an hour \u2013 though it was only a minute or so \u2013 Tina emerged from the stairwell. By the time she did, both our faces were awash in tears. \n\nShe looked different, but if anything, she was more beautiful than ever. She had changed her hair color to a dark chocolate, and it looked to me that that hue was her natural shade. She was trying her best to smile, but the sadness in her beautiful blue/green eyes was unquestionable. \n\nNeither of us said anything. Instead, we each walked toward the other, until our bodies melted into an indissoluble embrace. I don't know how long we held each other like that. It could have been 10 minutes or 10 hours; time had become absolutely immaterial. Yet throughout that indeterminate interval, uncontrollable, heaving sobs shook both our bodies, and I could feel my tears falling until they saturated the shoulders of her shear blouse. My own light blue shirt was equally drenched as a dark, wet stain spread across my chest. \n\nThen, after a long time, I pulled away, but only long enough to stare beauty in the face for a moment. It had been so long, and though I had thought about that face every day for almost six years \u2013 2116 days to be precise \u2013 its perfection still took my breath away. For another unspecified period of time, we just kissed each other's faces everywhere, as if we were trying to suck the marrow of life from each other. \n\nFinally, I stepped back, and still holding my embrace, I spoke. \"I love you, Tina.\" \n\n\"I love you, too, Evan. I love you so, so much! I have missed you so very much, sweetheart. I didn't know if I would ever get to see you again! Let me look at you.\" She stepped back, and holding me around my upper arms, she looked me up and down. She was still crying, but she was smiling now. \"You've grown up so much! My god, you are the most handsome young man I've ever seen! Your arms \u2013 they're so muscular.\" \n\nI blushed. I hadn't really thought about my own changes. I guess she was right; I looked a lot different than I had six years ago. My body had filled out, and after I started college, I had begun working out. I wasn't some fucking bodybuilder, but I guess I also wasn't the scrawny kid that she remembered. When I graduated from high school, I was 6'2\" and weighed 165 pounds. I had put on at least 25 pounds since then and had built a fair amount of muscle mass. \n\nI wanted to change the subject. I didn't want to talk about me. \"You've dyed your hair,\" I said stupidly. \n\n\"No,\" she responded, smiling, \"I stopped dyeing it! This is my natural color. I thought it would be harder for anyone to recognize me if I changed it. I'd been blonde for a long time.\" \n\nI had no idea how long we'd been standing in that hallway, but it was too long. \"I guess I'm a pretty rotten host. I should have invited you inside a long time ago.\" \n\n\"Sweetie, we could be standing in a garbage dump for all I care. Just seeing you is enough to make me happy for the rest of my life.\" \n\nI held her hand, and we entered my apartment, and she looked around at everything in it, as if it was all somehow a part of me. \"You've got a nice place here, Evan. You have good taste.\" \n\n\"Thank you,\" I said kind of sheepishly. We sat on my couch, facing each other, and we continued to hold hands. \n\nFor a moment, I just sat there and stared at her, smiling like a damn fool and marveling at her beauty. I know that it's \"in the eye of the beholder,\" but at that moment, the only thing I could think was that Tina was the most beautiful woman in the world. She was just ageless. \n\nI thought about things for a moment and did the math. Tina was 48 years old now, exactly twice my age. She was only four years younger than my own mother, and though my mother was a pretty woman, it was hard to conceive of the two of them on the same plane. For just one brief moment, I said a short, silent prayer of thanks. \"Lord, how could I have ever doubted you? There cannot be beauty of such incredible magnitude in this world without a God having created it! Thank you, Lord! Thank you for returning her to me!\" \n\nI was crying again through my smile, but now I decided I had better start acting like an adult, instead of the silly, smitten teenager that I imagined Tina staring at. \"Would you like something to drink, Tina? Maybe some wine? You must have had a really long trip, between your flight, your meeting today, and the drive up here to the Cities.\" \n\n\"I would love some wine, sweetie!\" \n\nI got up and found a bottle, a corkscrew, and some wine glasses. Then, I opened the bottle and began pouring us each a glass of a decent California Pinot Noir. \n\n\"Evan, do you remember that first night we spent together at the Doubletree in Rochester? I gave you some wine that night. I probably shouldn't have; I guess I was 'corrupting a minor.' I don't think you had ever drunk wine before! You were so cute! I could tell that you didn't know what to make of it, but now it seems like you're some kind of a connoisseur!\" \n\n\"I'm not a connoisseur, but you're right, I think I had only tasted wine one other time before that night. I actually drink wine now. I guess the difference is that now I can buy it legally, and I can afford to drink it.\" I handed her a glass and sat down next to her with my own. \n\nI took a big sip. \"Speaking of which, I got an interesting phone call today, right before you arrived...\" I was about to explain the whole thing, but Tina interrupted. \n\n\"You didn't know my name was \"Christina\" did you, Evan?\" \n\n\"So it was you! Tina, what gives? You can't be serious about giving me that kind of money!\" \n\n\"I'm not giving it to you. Justin gave it to you. It was his retirement account.\" \n\n\"Okay, Tina, but it's yours now!\" \n\n\"No, Evan, it's yours now! Look, Evan, Justin ruined both of our lives for six years. He destroyed something beautiful, because he himself was incapable of appreciating beauty. I'm just so grateful and amazed that I didn't lose you forever because of him. The way that I look at it, he owes you for having taken me away from you. It's probably a silly way to look at things, but I figured if you took your annual teaching salary and multiplied it by the six years that he stole me from you, it would add up to about exactly what's in that retirement account.\" I did the math quickly in my head and marveled at how close she was. ",
        "\"That's why I asked the attorney to call you, because I didn't know whether or not you needed the money now, sweetheart. If you want it now, you can have it now. I thought maybe you wanted to buy a house or something. Besides, I don't need it. I'm pretty much set up for life now. I own the house in Rochester, and it looks like I might be moving back there! Oh, I forgot to tell you! I went to speak to the people at the lab today, sweetie. They've offered me my job back there and offered me more money than I currently make. I thought that I might take them up on their offer. How would you feel about that, Evan?\" \n\n\"You'd move back to Minnesota? That's incredible! Of course, I'd want you to Tina! Jesus, I'd only be an hour and half away! I'd see you all the time!\" I was really excited, but Tina had a disappointed look on her face. \n\n\"Evan, I was hoping maybe you'd be a little closer than an hour and a half away. Sweetie, I lost you for six years. You might as well have been living on the moon during that time. I was serious about what I said in my letter to you, sweetheart \u2013 I realized something during the time I was in North Carolina \u2013 I can't live without you, Evan, or maybe more accurately, I don't want to live without you.\" Tina smiled another sad smile and drank her wine. \n\n\"I don't want to live without you either, Tina.\" I too took another big sip of wine. \n\n\"Then, would you consider moving back to Rochester? It's not that we have to live in Rochester. I know the Twin Cities is a lot more exciting place, especially for someone your age, but now I have the job there if I want it, and I also own the house. You wouldn't even need to work if you didn't want to, sweetie.\" \n\nI grimaced. \"Tina, if I'm with you, I don't have a problem living in Rochester. Yeah, it's pretty boring, but if I can be with you, I'll live anywhere. So, that's not the issue. But I have to work. I wouldn't be able to live with myself if I didn't have something to do. Besides, I spent a lot of money going to college and a lot of time training to be a teacher. I've only been teaching for two years now, but I want to keep teaching. I think that maybe I'm pretty good at it, and even more importantly than that, I like it. I'm sorry. I know I'm being really selfish.\" \n\n\"Oh, Evan, you're not being selfish! And I know you're a great teacher! How could you not be? You're brilliant, and I can tell you're really passionate about it. Besides, I cannot think of a more noble profession. Do you think that maybe you'd be able to get a teaching job in Rochester?\" She drank again. \n\nI thought for a moment. Maybe she was right. The timing wasn't bad. I had over two months to find something, and most teaching positions were filled in the late spring and summer. It was June 4<sup>th</sup>. Besides, after what had happened with Kendra, I had a lot of incentive to leave Jefferson. I realized I couldn't forget about that, and once I started thinking about it, the guilt feelings kicked in. I knew I had to tell her, and maybe I had learned my lesson after fucking everything up with Kendra \u2013 the best thing I could do was to tell her right away and hope to hell it wasn't a deal breaker. \n\n\"Maybe, I can. That's not such a bad idea, but, Tina, right now I... I... I have to tell you something. I'm sorry. I know I'm changing the subject, but... Jesus Christ... this is hard, Tina. I... I... I've got a really, really important confession to make to you.\" I was crying again, even though I thought I'd run out of tears. \"I haven't been true to you, and I don't know if you can ever forgive me for that.\" \n\nShe set her glass down and hugged me tightly, and I felt like an idiot. She was old enough to be my mother, and now I'd forced her to act like my mother, \"Don't cry, sweetie,\" she said sympathetically. \n\n\"I know. I know I shouldn't do this. I'm acting like a baby. I cry way too much. I guess I'm still really immature.\" \n\nThen, she got a curious look on her face. She leaned back, shook her head, and grasped me firmly by the shoulders again and started talking in this really serious voice. \"Sweetheart, do you know that one of the most important things that I've learned in my life \u2013 my long life \u2013 is that people don't cry enough. Maybe, if they cried more often, we'd solve some of this world's fucking problems. At least, we'd acknowledge that some things are so horribly sad and fucked up that they scream for solutions. Tears aren't a mark of immaturity, Evan. I think it's exactly the opposite \u2013 they're a sign of a mature and caring human being.\" \n\nShe reached for her glass and took another drink. \"Evan, I don't care what you've done. You don't have to tell me what you've done, because I forgave you before you ever did whatever it was you did. I forgave you because love, sweetheart, is forgiveness.\" \n\n\"Evan, if you weren't an honest man, you wouldn't have confessed to me in the first place, and you wouldn't have asked me for my forgiveness, so I don't want to hear another word about this, sweetie, because I love you. Besides, after I abandoned you, I don't know why you think you owe me anything.\" Jesus, I thought to myself, she just gave me over a quarter of million dollars, and she thinks I don't owe her anything? \n\nShe hugged me again, and then deftly produced a tissue from her pocket and used it to wipe the tears from my face with one hand, while she held her nearly empty wine glass with the other. Even though she wasn't a mother, I realized then that Tina would be a great one \u2013 maybe the best. That was probably Justin's biggest sin. He'd denied her that chance, and he had denied a child or several children the opportunity to be raised by someone with a greater capacity for love than any person I had ever met in my life. On the other hand, maybe it wasn't too late to change that. \n\nI got up from the couch and retrieved the bottle of Pinot. I poured us each another glass. We drank greedily, and I realized then that all of the barriers to our love were inconsequential \u2013 our ages, where we lived, what we did with our lives, and all of our sins and missteps \u2013 none of that really mattered. The only thing that did matter was that we loved each other unconditionally. And at the moment, I realized that wasn't in doubt, and it would never be in doubt. \n\nThen, I had this powerful urge to take Tina back to my bedroom, not to make love to her, but just to hold her and kiss her for the rest of the night. When I proposed that idea, she shot me down, but in such a kind and lighthearted way that I couldn't possibly be offended. \n\n\"We will, sweetie, I promise, but first can we get something to eat? I'm starving! I really need to eat something,\" she laughed. \n\n\"I'm sorry! I really am a rotten host. You probably haven't eaten all day! I'm so sorry, Tina! Jesus, I'm an idiot. Why didn't you say something earlier?\" \n\n\"Because there's nothing I love more than just talking to you, honey! Except, of course, making love to you! Anyway, I didn't realize it until just now. I think it's the wine. It just hit me all of a sudden.\" \n\n\"Okay, so here's what I was thinking \u2013 do you remember that room service meal we shared at the Doubletree \u2013 those steak dinners? I have this craving to eat steak tonight \u2013 I don't eat it very often \u2013 but I kind of feel like I owe you a steak dinner. There's this steakhouse downtown that's kind of a Minneapolis institution. It's called Murray's.\" I looked at my phone. It was 7:00 p.m. already. \"Wow! I didn't realize it was so late. No wonder you're starving. I made a reservation for 8:00 \u2013 I didn't know when you'd be arriving \u2013 but it's a Wednesday night, I'm sure they can get us a table right now.\" \n\n\"Steak \u2013 that sounds wonderful, Evan. You read my mind!\" \n\nWe both drained our wine glasses, and then I drove us downtown to Murray's Steakhouse. We went right past the Skyscape on the way, and I thought about having confessed to Tina about my indefensible mistake with Kendra, and I marveled at how lucky I was to be in love with someone who was as kind and forgiving as the woman who was sitting next to me at that very moment. \n\nWe had a couple of New York Strip dinners again and another bottle of wine, and we talked and laughed and reminisced. I was simply amazed at how effortlessly and seamlessly we resumed our love affair after such a long and convoluted separation. Then we came back to my apartment, happy and satisfied. I don't think we ever stopped touching each other the whole evening. \n\nOnce we got back to my place, I led Tina into my bedroom. We were standing next to my bed, and we were still holding each other. I was serious about spending the rest of the night just kissing and touching her, and I would have been completely satisfied doing just that. Though I wanted more than anything to be inside her, I thought she might think I was being selfish if I expected sex that night. I didn't want to go too fast. Besides, we had the rest of our lives to make love. But when I proposed my puppy love idea again, she shot me down once more. \n\n\"Sweetheart, I would love to do that, and maybe tomorrow that is exactly how we can spend the day, but, Evan, I haven't been with a man for six years, and right now, I really need you to make love to me. I don't think I've ever needed anything so badly in my life! Will you please make love to me, Evan? Will you make love to me all night long?\" \n\nI realized that in my efforts not to be so, I was being selfish. I had had sex recently. I had enjoyed a woman's body, quite a number of women's bodies since Tina left, but she had denied herself that need. For six long years, she had denied one of her most basic needs, and all because of me. \n\nAnd so, I learned a really important lesson at that moment \u2013 it was immature not to try, however imperfectly, to see the world through the eyes of those you love, to try to give them, not what you decide they need, but what each desires in his or her heart of hearts. Not trying was a failure of basic humanity. I decided to make a joke of it, but I realized that Tina, in her gentle and loving manner, had taught me another life lesson. \n\n\"Twist my arm behind my back,\" I responded sarcastically. And then I stared at her, and I could see and feel her desire, could see how much she wanted me \u2013 my lips and mouth, my body, but most importantly my cock, and then all her pent-up desire, started to excite me. \"I'm getting hard right now, just like I used to do every time I would come to see you in your office!\" She looked down at my pants, and I knew that she could see me beginning to grow. I stared back at her, smiling.  \n\nAnd then, I almost had to pinch myself to be sure I wasn't dreaming. She was just so incredibly beautiful, and the whole thing just felt so surreal. Even as I write this down, it doesn't seem like it could actually have happened. The whole thing still feels like a dream. Then, I remembered the other morning when I woke up after dreaming about her. \"Do you know what happened to me the night I got your letter?\" \n\n\"No, sweetheart, what happened?\" she asked, as we held each other around our waists. \n\n\"I was dreaming about you all night long, and in the morning, just as I was about to wake up, the dream became really vivid, and I imagined that you were riding me, and all of sudden I was thrusting my hips off my mattress, and you were saying the most erotic things to me, and then I came, and when I woke up, my underwear was full of cum. That hadn't happened to me since I was 12!\" \n\n\"Wow, that's a pretty sexy story! I wish I could have been there to see that! But speaking of stories, let me share one with you. Do you remember telling me that night at the Doubletree about how you used to masturbate all of the time thinking about me?\" \n\n\"Yeah, I do! That was the truth, you know.\" \n\n\"Yeah, I know it was. Well, I have a little confession of my own, Evan. Do you know what I have done every single night since I left Minnesota all those years ago? Every single night!\" \n\n\"No!\" I said with amazement. \n\n\"Yes, Evan. I masturbated thinking about you making love to me. Every night I thought about a different position or a different way that you made me cum \u2013 eating me or touching me or filling me with your cock, and I touched myself or I used a toy on myself. If I hadn't been able to imagine that, I think I would have gone insane. I'm not kidding! I truly believe that if I couldn't have imagined all of that, I would have lost my mind.\" \n\n\"The human imagination is incredibly powerful, isn't it?\" \n\n\"Yes, it is, but now I don't want to have to imagine. As good as dreaming is, the real thing is better!\" \n\n\"You're damn right it is! Now, can we stop talking and start making love?\" \n\n\"Sure, sweetie!\" she laughed. \n\n\"Do you need to get ready? Would you like to use my bathroom?\" \n\n\"That depends. Would you like me to dress up for you?\" \n\n\"Is the bear Catholic? Does the pope shit in the woods?\" \n\nShe laughed again, \"I'll take that as a 'yes!'\" \n\nI went down to her car, and I carried her suitcase into the apartment and to my bedroom, and she gathered up some things, and slipped into the bathroom as I got undressed, pulled back the covers on the bed, and propped myself up against a stack of pillows laying against the headboard. It was remarkable how much that night reminded me of the night at the Doubletree \u2013 me waiting with a huge erection while I thought about Tina putting on lingerie, and then her coming out of the bathroom, looking so fucking sexy that I almost came before I even touched her. \n\nThis night she had really outdone herself. She was wearing this white, lace halter dress that had garters at the bottom that connected to white silk stockings and encased her slender legs, dripping seductively into a pair of white, stiletto heels. The dress had a low neckline that swooped down between her massive breasts, so that her stunning cleavage was showcased, and because the dress was basically transparent, through the lace, I could see her huge areolas and hard nipples. Underneath the dress, she wore a white G-string that just barely covered her trimmed bush. \n\nTina climbed up onto the bed and then crawled toward me with this really sensuous look on her face. My god, she was so beautiful and sexy, and I swear to god, her body looked younger than the last time I had seen it in all its glory. \n\nI decided that this night would be all about her. My pleasure shouldn't matter. I decided that I would try to make her cum as many times as I could. She deserved that after how long she'd waited. But as usual, she started on me first. \n\nShe crawled between my legs, took me into her warm, wet mouth, and began concentrating on the head of my cock. When it was fully engorged, she began jacking me off with her right hand while she continued to concentrate her sucking on just my helmet. \n\nThen, I suppose it was inevitable. She started sliding her lips up and down my length. Most of the time, I was inside her mouth, but every once and a while she would wrap her lips around the outside and move back forth for a few strokes from my crown all the way down to my thick root, like she was sucking the salt and butter off an ear of sweet corn at the State Fair. \n\nAnd before I could stop her, she started taking me into her throat, and then it was just like that first night, I was doing everything I could \u2013 writhing uncontrollably, arching my back, and grabbing ahold of the sheets, or the headboard, or anything I could find \u2013 to hold myself back, while simultaneously, she was doing everything she could to make me cum. \n\nUntil I stopped her. \"Baby, let me make you cum first!\" I pleaded. I didn't explain, but she must have sensed my desperation and understood that I wanted this night to be about her, so she relented. I wanted to go down on her, but I could tell that sucking me off had already gotten her ready for my cock, and so before I knew it, she had crawled astride my hips, and lifting one leg so that her knee was bent and her foot rested on the mattress, she reached down to grasp me around my erection and, pulling her lace G-string to the side, she began to rub my cockhead up and down the length of her vulva and back and forth over her deprived clitoris. And when she did, I could feel her pussy unleash a flood of arousal and her throat a long, deep groan, \"Oooooooooooooooooooooooooooooooooooooooooooooooooohhhhhhhhhhhhhhhhhhhhh!\" \n\nAnd she continued moaning irrepressibly for at least the next hour, and my touch on her skin must have felt like an electrical current. I cupped both of her enormous breasts in my hands, though they weren't big enough to hold them. Then, I began to lick her huge areolas and suck her nipples into my mouth through the lace fabric of her dress. \n\nAnd then releasing, my grip on her right breast, I slid my hand down, toward her trimmed bush, and my index finger searched inside her G-string for her clit hood. And finding that long, delicate fold of skin, I ran my finger up and down its length until it shed her tiny pink button, and with as gentle a touch as I could muster, I ran just the tip of my finger over the most sensitive place on Tina's mind-bogglingly amazing body. And then simultaneously, she suddenly just impaled herself on me! \n\nIn one fell swoop, she slid down the entire length of my cock, so that it invaded her creamy pussy, a pussy that had been waiting nearly six years to be penetrated by it, and in so doing, Tina let out a cry so loud, erotic, and animalistic that I swear the rattling windows were turned on. \"Oooooooooohhhhhhhhhhmmmmmmmmmmaaaaaaaaaaggggggggggoooooooooodddddddddd! I'm cumming! Jesus Christ, I'm cumming!\" \n\nI couldn't believe how quickly it had happened \u2013 one stroke! She dropped her knee to the mattress, and sliding her hands behind her so that they rested on my thighs, she looked to the heavens and began riding out her orgasm by thrusting her hips up and down in the saddle. She was sliding up and down my engorged pole, and as she frantically ground her clit against my pubic bone, and I felt a rush of fluids pour out of her. \"Ooooooh! Ooooooh! Ooooooh! Ooooooh! Ooooooh! Ooooooh! Ooooooh! Ooooooh! Ooooooh! Ooooooh! Ooooooh! Ooooooh! Ooooooh! Ooooooh!\" \n\nHer climax lasted a long time, for several minutes at the very least, and I could feel her pussy convulsing around my thickness the entire time. And when the pulsing contractions finally slowed, Tina surprised me. She didn't stop! She kept going! And going! Changing her position just a little each time, for the next hour, she continued to ride me in a slightly varied version of the cowgirl position. Each variation made her cum again, so that by the time I lifted her off me, she had climaxed six times! \n\nIn the first variation, she lifted both of her knees from the mattress, and squatting over my erection, she repeatedly dropped her taut ass onto my spike, and it slapped loudly against my hips like the staccato reports of an automatic weapon. I reached underneath her to support as much of her weight as I could, and within another ten minutes, she was reaching her peak again. \n\nAfter she rode that climax to conclusion, she put her hands on my chest, and began twerking her ass up and down my stolid erection, building her rhythm until, after another ten minutes, she was pivoting her tight, round ass on the perfect curvature of my dick so quickly and relentlessly that I couldn't figure out how I didn't cum. In fact, my cock was so oversensitized by the pounding that her saturated pussy was subjecting it to, that somehow magically I did not climax. Again, the twerking achieved the desire conclusion, and Tina came again, screaming nearly as loudly as before, \"Shit! Fuck! Oh my god, I'm cumming again. Fffffffffuuuuuuuuuccccccccckkkkkkkkk!\" ",
        "Then, after that orgasm had waxed and waned, she lifted one leg again, and placing her foot on the mattress out in front of her, while I tucked my lower legs underneath me. Then, she began grinding her pussy around the root of my member, gyrating in a clockwise direction until another climax rolled through her! \n\nAnd somehow, I managed to stay hard throughout this marathon ride, and Tina, who was generating so much arousal now that we never needed to slow our feverish coitus to add lubrication, was like an \"Energizer Bunny\" \u2013 she just kept going and going and going. \n\nNext, she lifted her feet from the mattress so that her knees were supporting all of her weight, and leaning into me, she began bouncing up and down, with her gigantic jiggling tits in my face. She was challenging me to catch her nipples in my mouth without using my hands to corral them, and when I did so successfully, sucking first one and then the other of her sensitive knobs into my mouth and gently grinding my teeth over them, she came again! \n\nFinally, she leaned back, and again squatting with her feet flat on the mattress and her legs spread wide she hovered above my haunches with the head of my cock barely penetrating her. Then, she placed her hands behind her, pulling my thickness away from me and changing the direction in which it entered her to such a delicious angle that, once she started rocking up and down, it brought both of us to the edge. When I reached out at arm's length to caress her clitoris again, she came for the sixth time that night! We had only been in bed for a little over an hour! \n\nBut now I wanted to cum, and I knew what would allow me to do so. I slid Tina's G-string off her, and I reached out, and, grasping her around her slender waist with both hands, I gently lifted her off of me, laying her down on her back with her legs still spread wide. Then, I climbed on top of her, entering her missionary style. I reached my arms out in front of me so that my hands rested astride her shoulders on the bed and lifted her legs so that the backs of her knees rested in the crooks of my elbows, and I began thrusting, building a steady cadence until I knew that I was going to cum. \n\nThen, as my pace increased, I lifted my knees from the mattress, and I started plunging my entire length into her effervescent sex. The scene that lay before me was incredibly erotic and stimulating \u2013 Tina, whose face was as flushed as if she had just run a marathon, was laying back with her huge tits pointing skyward, her nipples, erect and engorged and encased in that lace fabric, her legs spread so wide that there was nothing obscuring my view of my huge erection sliding cockhead first into her waiting pussy until my entire length disappeared and my thick root was crashing against her pubic mound, her beautiful brown tresses disheveled by perspiration and spread out over the mattress, and the look of passionate resignation in her eyes \u2013 and then I realized that despite all of her earlier climaxes, Tina was going to beat me to the punch! \n\n\"Oh! Oh! Oh! I'm cumming again. My god, I'm cumming again! Oh! Oh! Oh fuck! I'm cumming again! Ooooooooooooooooooooooooohhhhhhhhhhhhhhhhhhhhhhhhh!\" And yet again, I could feel Tina's pussy contracting around my cock, and I realized I had reached the point of no return myself. \n\nI announced my impending climax, screaming more loudly than I wanted to, \"Oh Tina! I'm gonna cum!\" And as soon as she heard the word, she forgot about her own passion and squealed her lewd encouragement, \"Oh sweetie, I want you to cum on my face! I want to taste your cum! Come on, baby, cum for me! Cum hard for me!\" \n\nAnd so I pulled my slathered member from her gaping hole, and dropping her legs to the mattress, I scooted forward until I was straddling her massive tits, and I started erupting, shooting rope after rope in every direction. My cum was flying everywhere \u2013 on her tits, her face, her hair, on the sheets, on the pillows, on the headboard \u2013 as I let loose with a series of guttural groans, \"Aaaggghhh! Aaaagggghhhh! Aaaaaggggghhhhh! Aaaaaagggggghhhhhh!!\" \n\nAnd when my sputtering spasms slowed, and I realized I had not an ounce of strength left, I fell to my side, and collapsed on the bed next to her. We were both breathing so hard that neither of us could speak, but we began kissing each other like we thought the plane we were in was going to crash into the ground any second now. \n\nMy heart was beating so fast, I thought that I might have a heart attack, but then finally after it slowed just a bit and I regained some breath, I spoke, \"I love you, Tina,\" and Tina smiled the most gorgeously beneficent smile and responded, \"I love you too, sweetie! I love you so much! Thank you! Thank you! Thank you!\" \n\nWe lay together like that kissing, hugging and touching each other for at least 20 minutes. \n\nThen, Tina got up from the bed and went into the bathroom and brought back a towel to clean us both up. Then, she came back to bed, and I wiped my cum from her beautiful face, and she bathed my cock and balls. And then I marveled at her again. She was just so unbelievably beautiful and sexy that she just didn't seem real. \n\nAnd then finally, I said it, said what I had been thinking for six years, \"Tina, I don't think that I've ever told you how incredibly beautiful you are. I don't know why I haven't told you that, because I have always thought that you were the most beautiful and sexy woman in the entire world. I've thought it every day of my life since the day I met you. I'm sorry it took me so long to say it.\" \n\n\"Sweetheart,\" she said, kissing me with a passion that took my breath away again, \"first of all you have said it, that first night at the Doubletree. Don't you remember how you convinced me that I was desirable and how hard you made me cry when you told me? But even if you hadn't done that, you didn't have to say the words because your eyes always said them for you! After that night, I've always known that you thought I was beautiful, and, Evan, I didn't think that I was, until I met you!\" \n\n\"Justin never made me feel beautiful. In fact, he made me feel exactly the opposite. I hated myself when I was married to him, hated the fact that I could be with someone that I didn't love. He always made me feel dirty and disgusting and ugly. But when you started coming into my office with those big erections bulging out of your pants, and especially after that night at the Doubletree, you changed me, Evan, changed the way I thought about myself.\" \n\n\"Do you know why I decided that I couldn't live without you? Because I realized that I needed you to allow me to love myself. You saved me, Evan. I'm not kidding; you saved my life. I think I might have killed myself if it wasn't for you. I was certainly thinking about it. A lot.\" \n\nThat revelation sort of stunned and scared me, but I still thought Tina was wrong. \"I think it's the other way around. You saved me. From your husband.\" \n\n\"I guess we'll never know that, but I do know that I couldn't love myself until I knew that you loved me. That gave me a reason to live, and ironically that was especially true after I left you. Even though I couldn't see you, couldn't talk to you, couldn't write you, couldn't email you, I could think about you. I could remember you loving me, could envision your eyes telling me that I was beautiful, and that's how I got through every day \u2013 2116 days! It's the only reason I'm here now.\" \n\n\"Oh my god, you were counting them, too! You were counting the days, too! Tina, that's fucking amazing; I was doing the same thing! I counted the days that we were apart. Every few weeks I added them up all over again. I counted them again today \u2013 2116 days! 2116 days! It's just weird! It's freakish that we were both counting!\" \n\nIt was more that weird or freakish; it was almost mystical. How could you explain it except to say that there was a symbiosis between us that just couldn't be explained in rational, clinical, or scientific terms? Neither one of us said anything for a while, but it struck me that we had both come to regard our separation in the same philosophical terms, not unlike the way a prisoner thought about his or her incarceration, counting the days by marking Xs on a calendar. \n\nAnd then I could tell that Tina must have thought the same thing \u2013 that those 2116 days were some kind of sign, some sort of metaphysical marker. And then suddenly, she got up from the bed, and found her purse, sitting on my nightstand, and then she came back over to me. She grasped my left hand in both of hers, and got the most serious look on her face I'd ever seen, even more serious than the night at the Doubletree or in her apartment that afternoon all those years ago, or even earlier that night. \n\n\"Evan, I know it's not supposed to happen this way. I know our society has some pretty time-honored and rigid mores and traditions for how this is supposed to go down. Honey, I know I'm supposed to wait for you to ask me, but, sweetie, fuck 'em, that's what I say, fuck all the rules. I've been thinking about this since I talked to you on the phone four days ago, and I think we both want exactly the same thing. No... no... I know we both want exactly the same thing, so I'll say it first, even though I'm not supposed to.\" \n\nShe opened her purse and pulled something shiny out of it. She rolled it back and forth between her nervous fingers, and at the very moment that I realized that it was a ring, she started saying as humbly as I think was humanly possible, \"Evan Hughes, would you marry me? You would make me the happiest woman in world if you said 'yes.'\" \n\nI was dumbfounded, but the answer came seemingly while the question was still on her lips. \n\n\"Yes, fuck yes. I'd marry you in heartbeat. I'd marry you this very moment if I could. I'll marry you tomorrow. I'll marry you whenever and wherever you want to. Tina, there isn't anyone in this world that I've ever loved in the way that I love you.\" I was bawling like a baby. \n\nThe tears were streaming down her face, too but she continued, \"Okay, Evan Hughes, all I need from you right now is your finger. Would you let me put this ring on it?\" \n\nI couldn't speak. I was crying so hard, and I couldn't stop. I just stuck out my hand, and Tina slipped a gold ring, with a diamond band across the front, onto my ring finger. I'd never worn jewelry before, so it was a weird feeling, but I can't say that I have ever felt happier, more satisfied, or as grateful. I kissed her passionately, and we held each other tightly until our sobbing ceased. \n\nFinally, I spoke again. \"Will you let me buy you a ring tomorrow, Tina?\" I asked, embarrassed that I was the one wearing the jewelry. I think she sensed my embarrassment. But it wasn't that it was traditional for the man to ask the woman, for the man to buy the ring, and put it on the woman's finger. It wasn't that at all. It was that she was giving me something, and I had nothing to give her in return. With Tina, it seemed like that was always happening. \"Rings are supposed to be an expression of love, and I don't have one to give you, right now.\" \n\n\"Sure, sweetie, but let's worry about that tomorrow. Besides, you don't have to tell me how much you love me with a ring, just show me.\" So we lay back in bed and made love all night long. The morning light was just starting to trickle from the east window of my bedroom when we fell asleep in each other's arms. \n\nIt's funny, I haven't thought about immaturity since Tina came back to me. I guess that means that, based on my own definition, I've grown up! I also don't ever think about the age difference between us anymore. God, there are so many important issues in our lives, so why does anybody pay attention to any of the irrelevant details? The years that we were each born seems so incredibly picayune in the grand scheme of things. \n\nThe next day we stayed in bed together, kissing and hugging each other until about four in the afternoon, and then we walked down the street to the nearest jewelry store, and I bought Tina an engagement ring. \n\nThe day after that we drove down to Rochester, and I introduced my fianc\u00e9 to my parents and my brother and sisters. I won't say that they understood right away, but it didn't take Tina more than a week or two to win them all over. They love her now almost as much as I do. \n\nAnd that week or two was about how long it took me to find a teaching job in Rochester. I'm working now at Lourdes High School, the only Catholic high school in town, and my alma mater. Tina's back at the lab, and happy to be there in that same posh office overlooking the 4<sup>th</sup> Hole of the country club, where I first met her. They still keep the postage machine there, too! \n\nWe called Tina's parents and told them our news. They were happy for us, and I look forward to flying down to Georgia over Thanksgiving to meet them and Tina's sister for the first time. \n\nWe've been seeing Tina's OB/GYN together. I think between me and the doctor she's now convinced that maybe it's not such a crazy idea to explore trying to have a baby. The doctor has told her that all of the signs are good. When he examined her, he couldn't believe his own eyes. He told her that she has the body of a 30 year old woman. Hell, I could have told him that, and I'm not a doctor! \n\nI think that a child is something that Tina needs, though she tells me that I'm enough. We'll see, but even if we can't have our own, she has agreed that we can always adopt. \n\nShe decided to sell the house that she and Justin shared \u2013 too many bad memories. But we bought a different house together that's even nicer, and we only have to keep our living together in it a secret from the priests, nuns, and administrators at Lourdes for a few more months! \n\nThat's because we're going to be married next year on February 1<sup>st</sup> right here in town! You're probably asking why anyone would get married in Rochester, Minnesota, in February. I mean, it's probably going to be about ten below zero! My own mother tried to talk us out of it. If you have to get married in February in Rochester, why not, she asked, at least wait until Valentine's Day, which coincidentally will be my 25<sup>th</sup> birthday \u2013 something a little more romantic, she reasoned. \n\nBut I don't think we'll feel the cold at all because 2/1/16 has special significance to Tina and me! Somehow it seems perfectly appropriate, and I know neither one of us will ever forget the date! \n\nOh, and the wedding? It's going to be held at St. Francis of Assisi Church, where Tina and I are now parishioners. And the site of the reception is appropriate too. It's going to be held at the Doubletree downtown. We booked the bridal suite too \u2013 Room 1121."
    ],
    "authorname": "stfloyd56",
    "tags": [
        "busty",
        "teacher",
        "brunette",
        "oral sex",
        "fellatio",
        "cunnilingus",
        "anal sex",
        "deep throating",
        "mature",
        "facial cumshot"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-mark-of-the-immature-man-ch-02"
}