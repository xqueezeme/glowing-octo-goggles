{
    "title": "Schoolgirl Uniform; Mandy",
    "pages": [
        "In her pink tennis shoes and knee length, white socks, Mandy's feet made their way along the sidewalk on autopilot. A few inches above the socks, the bottom hem of her plaid skirt swished back and forth beside her bare thighs. Tucked into where the skirt hugged her slim waist, her white, button-up blouse covered her torso and arms. In deference to school rules, the clothes weren't tight, yet the curves of her tiny, heart-shaped ass and full, C-cup breasts were still evident. A pair of straps over her shoulders held a bookbag against her back, its weight bouncing lightly with her strides. With her head tilted down so her bright green eyes could focus on her phone, the long loose tresses of her rich strawberry-blond hair hung down and partially obscured her sweet, innocent features.\n\nInstinctively knowing she was nearing home, she absently reached for bookbag's side pocket, where her keys should have been. But when she didn't find the familiar bulge, an image of the keys hanging on their hook as she had left the house that morning flashed in her mind.\n\n\"Shoot,\" she huffed past her slim lips.\n\nNot knowing what else to do, she called her mom at work.\n\n\"Hey Mandy. What's up?\" Ms. James answered the phone.\n\n\"I, um... I forgot my keys this morning,\" Mandy admitted, embarrassed.\n\n\"Oh Honey. I can't come home for a couple hours.\"\n\nThis didn't surprise Mandy. Her mother had a demanding job with little flexibility. Yet, the schoolgirl was crestfallen as she stood on the sidewalk, trying to think of a solution.\n\n\"Hey, I know,\" her mother piped up. \"I think Matt, that is Mr. Kole, still has the key we gave him last year when we had to rush out to Grandma's. Why don't you see if he's home?\"\n\n\"Um, yea, his car's in its spot,\" Mandy sighed, somewhat reluctantly.\n\n\"Okay then, Honey. I'll see you later.\"\n\nWith that, her mother hung up, leaving Mandy to stand on the sidewalk, trying to work up the courage to ring their neighbor's doorbell. Her hesitation wasn't because she didn't like Mr. Kole. Just the opposite, in fact. He was tall and handsome, with an easy, genuine smile, and she had had a crush on him for a couple years. So she didn't want to look silly in front of him.\n\nYet, the only other option she could think of was to hang out in their backyard until her mother got home, and her phone needed charged. So, taking a deep breath to steal her nerves, she stuffed her phone into the bookbag and walked to the Mr. Kole's door.\n\nWhen he opened it, Mandy's breath caught in her throat. Standing more than a foot taller than her in his bare feet, he wore a pair of dark slacks and a dark shirt. The latter was untucked and unbuttoned, hanging open to show his firm torso and, while Mandy had known he had a nice body, she had never seen it.\n\n\"Hey, Mandy. What's up?\" He smiled his genuine smile as his eyes quickly took in her own outfit.\n\n\"Um, uh, I'm locked out of our house.\" Color rising to her cheeks, she tried to meet his gaze, but couldn't and she ended up looking down. \"Do you still have that key from last year?\"\n\n\"I think so. Why don't you come inside and I'll look for it?\"\n\n\"Uh... Yea, okay,\" she managed.\n\n\"Come on. It's probably in the kitchen,\" he said, leading the way.\n\nThe front of his house had an open floor plan with only a low partisan wall separating the living room from the kitchen and a hall leading off these toward the back. Following him past the partition wall, Mandy thought she recognized a familiar aroma but brushed it off as her imagination.\n\n\"I've got this drawer that somehow collects all kinds of things,\" Mr. Kole said over his shoulder as he started rummaging through the drawer.\n\nFeeling a weird kind of nervousness, Mandy stood near the little table next to the wall. After a moment, she realized she was looking at his ass and felt the color returning to her cheeks.\n\n\"I'm not seeing it,\" he announced, still pushing things around.\n\nA slight change in his voice drew her gaze up to the thin layer of smoke hovering above him. That was when she noticed that he was only using one hand to dig around in the drawer, his other hand busy holding a joint: the origin of the familiar aroma. Mandy's lips curled into a little smile. Although she had had the crush on her neighbor, she had always thought of him as just another older man and never considered that he might do things like smoke pot. That was something her generation did, something the older generation had given up, if they had ever done it.\n\n\"Well, if I do still have it, I can't find it. Sorry,\" he apologized, closing the drawer and turning around.\n\n\"Um... OK,\" she sighed, her gaze once more dropping so that her hair partially obscured her innocent features.\n\n\"Well, if you want, you can hang out here until your mom gets home,\" he offered.\n\n\"I don't know.\"\n\n\"I'm not doing anything important, just making me some dinner,\" he shrugged.\n\nDespite being nervous, the idea appealed to her. She had never had the chance to really hang out with him. They had chatted briefly during neighborly cook outs and he had always been polite and amusing. Yet, she didn't really know him. Heck, she hadn't even known he smoked pot.\n\n\"Yea, okay,\" she shrugged, thinking she had nothing else to do.\n\n\"Great,\" he smiled, waving at the table for her to have a seat. \"You want a bottle of water?\"\n\n\"Yes, please,\" she nodded, dropping her bookbag onto the table and pulling out a chair.\n\nOn his way to the fridge, he dropped the joint in the tiny ashtray on the table and when he set the bottle of water down in front of her, Mandy was absently staring at the glowing tip.\n\n\"I guess I should first ask what your mother would say if I offered you some?\"\n\n\"Huh?\" The question surprised Mandy.\n\n\"Would your mother be okay with me offering you a hit? Or would she skin me alive?\"\n\n\"Who said she'd have to know?\"\n\n\"Okay then,\" he grinned, casually indicating the joint before turning to the counter and starting to cut up some vegetables. \"How old are you now?\"\n\n\"I turned eighteen a few months ago,\" she answered after taking a hit.\n\n\"Oh yea, that's what that party was for. Well, happy birthday again.\"\n\n\"Thanks.\"\n\n\"You're a senior in school, right?\"\n\n\"Yes.\"\n\n\"So, you'll be graduating in a few months.\"\n\n\"Yes.\"\n\n\"Any plans for college?\"\n\n\"Why do all adults ask the same questions?\" Mandy exhaled smoke.\n\nMr. Kole set the knife he was using down and turned around. Grinning, he reached out to accept the joint in her outstretched hand.\n\n\"Yea, I guess we do,\" he acknowledged before taking a puff.\n\nAgain, she found it difficult to meet his gaze, but her lips did curl into another little smile.\n\n\"So, forget I asked,\" he shrugged, handing the joint back to her then lifting a rocks glass to his lips and taking a sip of the amber liquid inside before turning back to the vegetables.\n\n\"What are you making?\" Amber asked.\n\n\"Chicken Stew.\"\n\n\"Chicken Stew? Not beef?\" The marijuana was calming her nerves and she got up to stand a couple feet to the side of where he was working.\n\n\"Well, I work out--.\"\n\n\"It shows,\" Mandy interrupted him, the color returning with disbelief that the words had slipped out of her mouth.\n\nAgain, his knife stopped cutting as he turned his head slightly to offer her a smile.\n\n\"Thank you,\" he said before turning his attention back to cutting the vegetables. \"So, I also like to eat healthy. Makes the work-outs pay off more. And beef isn't the healthiest, but I always loved the blended flavors of stew. So... Chicken Stew.\"\n\n\"Makes sense,\" she took another hit from the joint then offered it to him again.\n\n\"No thanks. I've had enough for now. That's some pretty good stuff so be careful. I can't have you stoned when your mom gets home.\"\n\n\"Yea, I am feeling pretty good,\" she admitted, setting the joint in the ashtray then returning to the counter.\n\n\"So, tell me, little miss Mandy. Do you have a boyfriend?\" He asked as he slid the diced vegetables from the cutting board into a pot.\n\n\"Yea. Well, kinda,\" she answered, uncertain of how to define the boy named Donny she spent time with.\n\n\"Kinda?\"\n\nShe was definitely feeling a buzz and suddenly wanted to sit down, but she didn't want to sit at the table where she would be forced to stare at his back. Deciding to hop up and sit on the counter like she had hundreds of times at home, she turned her back to it and set her palms in place. But went she went to hop up she realized she must be higher than she thought as she lost her balance and started to fall.\n\nMoving quickly Mr. Kole caught her, his hands grabbing her waist firmly.\n\n\"Careful,\" he smiled, as he effortlessly lifted her onto the counter.\n\n\"Thanks,\" she sighed, now embarrassed for a whole different reason.\n\nHe stayed there for a moment, his hands lingering on her waist. Too embarrassed to lift her face, she looked up at him through the tops of her eyes. Seeing his gaze crawling down over her body, checking out her semi-hidden curves and slightly parted thighs reaching out from under her skirt, sent a tingle racing along her nerves.\n\nThen he stepped over to the sink where the chicken part of his stew awaited preparations.\n\n\"So, what's this 'kinda boyfriend' about?\" He asked, turning on the water and starting to wash the skinless breasts.\n\nAfter catching him looking at her like that, it took her a moment to find her voice.\n\n\"Well, we hang out and do stuff. But he's not...\" She tried explaining when she did find it, the words trailing off with uncertainty.\n\nThey were silent for a couple minutes while he washed the chicken and set it on the cutting board.\n\n\"Does he pressure you for sex?\" He asked, his tone casual as he started cubing the meat.\n\nThe question caused the color to rise once more in Mandy's cheeks and a small, embarrassed giggle escaped her lips.\n\n\"Did I say something funny?\" Mr. Kole feigned ignorance.\n\n\"No. No, you didn't,\" she whispered.\n\n\"So does he?\" He pressed after a moment.\n\n\"I- I'm saving myself for marriage.\" The waver in her voice reflected her conviction in the statement. Her and some girlfriends had taken a pledge when they were 13, but in the years since she had grown to doubt in it and didn't know if she still was waiting. She just knew Donny wasn't the one she wanted to give herself to.\n\n\"Hmm. That's... an interesting choice in today's world.\" He paused his cutting. \"But it doesn't answer my question.\"\n\nThis new line of questioning was pushing past the relaxing effects of the pot to make her nervous and she hesitated in answering, almost wishing he would go back to asking her about college. Yet, his casual demeanor made her curious to see how far he would take it.\n\n\"Um... Uh... Well, yes and no.\" She stammered as a partial answer.\n\n\"OK...?\" He drew the single word out as a question.\n\nAgain hesitating, she realized that she was dangerously close to telling a very intimate secret to this older man whom she had a crush on. Thinking she could just hang out in her backyard until her mom got home, she considered refusing to answer. She could simply get down counter and leave. She doubted if he would try to stop her.\n\nBut she didn't. Her curiosity about how he would react to her secret keeping her there.\n\n\"There's more than one way to have sex, you know,\" she managed to whisper, her nerves keeping her from saying it any louder.\n\n\"Well, I do know that,\" he nodded, adding the meat to the vegetables.\n\nThey were silent again while he washed his hands.\n\n\"So, what are we talking about?\" He asked as he dried them.\n\nWhen he stepped over to stand near her and rest a hand on the counter Mandy reflexively looked down. Seeing his hand only inches from her skirt-covered thigh, her nerves began to tingle again. Lifting her gaze for a brief moment before she had to look down once more, she looked in his eyes and she saw something familiar in them. A gleaming hunger that she saw in Donny's eyes when he wanted to have sex with her. But it was different in Mr. Kole' eyes. More confident. Less nervous and hesitant. And it made her heart start to race within her chest.\n\n\"Um... Uh...,\" she stammered, her breath catching in her throat.\n\n\"Mandy,\" he sighed deeply. \"What do you and this 'kinda boyfriend' do?\"\n\n\"We... Um... We...\" She haltingly whispered, her eyes creeping upward to the crotch of his slacks and the obvious outline of his manhood. Her racing heart sped up and she blurted out her secret as a single word, \"He-puts-it-in-my-butt.\"\n\n\"Really. Anal huh,\" his exhaled softly. \"You like it?\"\n\n\"Yes,\" she breathed. \"I-I di-didn't at first cause it hurt. But then I got used to it and now it feels good when we do it.\"\n\n\"Do you use lube to make it easier?\"\n\nNodding meekly, she indicated her bookbag without understanding why.\n\nRetrieving the bag, Mr. Kole held it up and she adroitly unzipped the side pocket to extract the tube of anal lube. Setting the bag off to the side on the counter, he took the lube from her and gave it a cursory inspection before confidently slipping it into his back pocket.\n\nWith her head tilted down and her eyes still staring at his crotch, Mandy felt his eyes roving over her body again. This, combined with the fact that he stood close enough that his hip was nearly touching her leg, sent tropical gusts wafting through her body. These were enhanced when his hand slid across those inches to gently rest on her thigh where the skirt covered it.\n\n\"So, if you're saving yourself, why do you do it?\" He asked.\n\n\"I-I like kissing and... other things,\" she whispered breathily.\n\n\"You like kissing,\" he breathed.\n\nThe tropical gusts grew as he used his body to force her legs apart just enough for him to slide between them, coming closer. His hand at her thigh slid back to cup the curve of her ass and other one came up to her chin. Lifting her face, he looked into her eyes with a confident, understanding gaze.\n\nIs this really happening? She asked herself, her own eyes filled with nervous uncertainty.\n\nA few strands of her strawberry-blond hair lay along her cheek. Brushing these back, he leaned in to bring his lips to hers. Lifting herself to meet him, she closed her eyes. His lips lightly brushed against hers once... twice... three times, the hand at her chin sliding back to cuff the back of her head. Then his lips locked gently against hers and guided them open. His tongue slid into her mouth and she raised hers in greeting. As the two appendages swirled over and around one another, his fingers tensed against her ass, pressing at it through her skirt.\n\nThey kissed for several minutes, their lips pressing together, parting for a breath, then pressing together again. Their tongues swirling and swiping. With each kiss... every connection of their lips... every brush of his tongue against hers, the tropical gusts grew warmer and warmer, wafting through her to stir the embers within her loins, making them start to smolder.\n\nMandy couldn't believe she was making out with Mr. Kole in his kitchen. She had imagined what it would be like to kiss him, but she had never actually believed it would happen. As if to reassure herself that it was real, she reached out to grip his forearm with one hand and scratch at his shirt where it covered his chest with the other.\n\nEventually pulling away, he gently kissed her cheek a couple of times. Using his hand to keep her hair out of the way, he leaned in and kissed the tip of her ear, then ran the tip of his tongue delicately down along its edge. Reaching the lobe, he caught it between his teeth and gave it a gentle nip.\n\n\"Uh.\" Mandy inhaled, electricity shooting through the nerve-endings and making her close her eyes again.\n\nWith her head tilted, her hair hung down to brush against her hand and his forearm. Her other arm was bent inward, her tensing fingers remaining at his chest.\n\n\"Did you like kissing me, Mandy?\" He whispered, his warm breath swirling in her ear.\n\nHer breath catching in her throat, she sighed a quiet whimper of confirmation.\n\n\"You said you like other things too.\" His lips remained close to her ear, his breath swirling inside it. \"What other things?\"\n\nNow that he had kissed her after she had told him that, she wasn't sure how to answer. Or if she could... if she should. She wanted to... wanted to see what he would do... wanted him to do things. She just didn't know if she had the nerve. So, instead of answering him, she sat there biting her lip with uncertainty.\n\n\"Tell me Mandy. What other things do you like?\" He insisted huskily in her ear.\n\n\"I-I li-like to be tou-touched,\" she exhaled, again unsure why.\n\n\"Mmm.\" The sound vibrated knowingly in his throat as he brought his lips back to hers.\n\nKissing her, he drove his tongue into her mouth again and she enthusiastically raised her own. As they kissed his hand came away from the back of her head. The fingers brushed her neck, tracing delicate lines on her flesh before slowly sliding across her shoulder. The weight of the digits teased her as they gradually crept downward, slipping along the side of her breast. Then they slid inward to cup her lush mound... fondle it gently.\n\n\"Mmm,\" Mandy mewled into their kiss, electricity sparking along her nerves to make her fingers scratch harder at his shirt as the breezes wafting through her fanned her smoldering embers.\n\nTheir lips pressed together... parted... pressed together. Their dueling tongues swirled and swiped at one another.\n\nSliding his hand further back on her taunt ass, Mr. Kole pulled her forward, forcing her legs to part more and her skirt to ride up her thighs a couple of inches. And as they kissed, his confident fondling of her breast gradually grew heavier, his fingers squeezing at the pliant flesh with a building hunger.\n\nThat growing hunger was reflected in Mandy's body with each passing moment... each warm kiss... every manipulation of his fingers. Her breathing grew shallow. Her heart pounded within her chest, and within her breasts an ache manifested. Jolts of electricity sparked along her nerves. The tropical gusts turned her smoldering embers into sizzling, sparking coals of desire.\n\nThe growing desire caused her to timidly slide her hand down from his chest. Slipping inward, her fingertips lightly scratched at his exposed abs for a long moment as she fought with the nerves keeping her from doing what she wanted. Partially winning, she managed to lower her fingers to the waistband of his slacks, where they haltingly slid them back-and-forth for another minute.\n\nAs if knowing her internal struggle, he pulled his hand away from her ass and reached between them to takes hers, guiding it down to his crotch. Letting him place her hand atop the obvious bulge of his cock, she felt it throb under her touch. The sensation turned her sizzling embers into red-hot briquettes and her fingers instinctively scratched at his slacks, trying to wrap themselves around him. Although she could tell that he was bigger than Donny, she didn't yet think about what that meant exactly.\n\nContinuing to kiss her, he returned his hand to her ass and they spent a few minutes exploring one another.\n\nWhen he did pull back again, she opened her eyes to look at him, the nervous anxiety running through her reflected in her gaze and the way her bottom lip timidly trembled. In his eyes she saw that the familiar hunger had grown... stronger with an intimate need. But again, it had that confidence and lack of uncertainty that was never in Donny's eyes. It was more insistent. Less needy.\n\nIt kept her from having to wonder what he intended... she knew. And he knew he could. That she would let him. That she wanted him to.\n\nReleasing her breast, he used that hand to cup her ass as well and slid her forward a little more before lifting her off the counter. As he brought her to him, she hooked her legs around his waist, brought her arms up around his neck, and folded herself to him with her head resting against his shoulder.",
        "Carrying her down the hall, he took her to his bedroom and laid her near the center of his bed with her head on a pillow. Then, standing at the foot of the bed, he locked eyes with her while purposely removing his shirt.\n\nShe lay there with her long tresses splayed out across the pillow, framing her innocent features; lax and flush with arousal, her bottom lip delicately trembling. Her blouse was slightly askew, the material twisted and partially conforming to the shape of her breasts. Her disheveled skirt had ridden up on her thighs just enough to provide a hint of her simple white cotton panties underneath.\n\nLetting his shirt fall, he took the bottle of lube from his back pocket and tossed it onto the bed. Then he undid his slacks and pushed them down.\n\nHer eyes drawn there, a wave of trepidation rolled through her when she got her first sight of his semi-erect manhood and compared its size to Donny's.\n\nClimbing onto the bed, he laid beside her and held himself up on one arm to gaze down into her eyes. Resting his other hand on her tummy, its heat radiated through her top to simmer against her flesh.\n\n\"Mr. Kole?\" She whispered, her nerves making her forget about his size for the moment.\n\nLeaning down, he brushed his lips against hers a couple times before once more pressing them together and guiding hers open so their tongues could swirl over one another. As they kissed, his hand slid upward, lightly brushing up past her breasts to the top button of her blouse. Casually undoing it, his hand slowly moved down to undo the next button... then the next... and the next. The rise of her breasts caused the top to fall open a little more with each button, gradually revealing her simple, white bra and allowing cool air to swirl over her exposed flesh. Reaching her skirt, he gently tugged the top free and undid the last button then pushed the top's flaps aside.\n\nUntil that moment the bra had been doing a decent job of concealing her stiffening, little nipples. But as the swirling air slipped under it, they grew stiffer to poke obviously at it.\n\nResting his warm palm on her tummy again, Mr. Kole' drew tiny lines in her flesh. His deliberately tensing and relaxing fingers caused her abs to quiver and stirred fluttering butterflies in her belly. After a few moments, his fingers lightly crept upward, their touch a combination of teasing and delicate tickling as they crawled over her lower ribs. At the bottom edge of her bra they slid back-and-forth a few times before sliding across and dipping down her side.\n\nThe transition from the kitchen had caused the ache within her breasts to grow with need. Instinctively knowing that need would soon be answered, she rolled toward him slightly and arched her back, giving him access to the bra's clasp at her back. Then, when he had nimbly unhooked it and brought his hand out, she settled back on the bed.\n\nPushing the bra up off her tits, he allowed the cool air to rush over the milky flesh of her mounds and caress the little pink nipples atop them. Covering the far one with his palm, he rubbed at it as his fingers squeezed her plaint flesh with a restrained hunger.\n\n\"Mmm,\" she whimpered, the ache being both answered and fueled.\n\nMolding and reshaping her breast with his fingers, his palm shifted atop her nipple, sending electricity sparking and crackling through the little bud's nerve-endings. As it hardened into a rigid spire, he swiped at it with his thumb while his fingers continued fondling the fleshy mound it sat atop.\n\nThe attention combined with the heat from her glowing embers to make her legs scissor upon the bed. Feeling her skirt-covered thigh press against his nearly erect cock, a wave of lust coursed through her even as her mind once more reeled with its size.\n\nStill kissing her, he moved his hand to the other breast to give it the same treatment for a few moments before returning to the far one. It was then that he broke their kiss and shifted down to gently kiss her chin... her throat... her collarbone. Slowly working down her flesh, he left a trail of soft, moist kisses.\n\nHer nipples tingling with anticipation, Mandy laid there with tropical gusts wafting through her, fanning her embers more and more. Her head resting on the pillow, her features grew lax as her shallow breathes slipped past her lips. His slow progress made it seem like forever before the trail of kisses eventually traveled up the breast nearest him. Then his mouth was hovering above the nipple, his warm breath swirling over it, and she whimpered with need. His tongue flicked out... gave the swollen bud a firm, intentional lick.\n\n\"Oh!\" She gasped, the nerves of the sensitized nub screaming with electrical jolts.\n\nCaressing the nipple with his tongue, he lowered his mouth onto it and gently suckled.\n\n\"Oh God, Mr. Kole.\" Mandy panted, the jolts intensifying and her hand coming to the back of his head.\n\nContinuing to fondle the far breast, he suckled at her other one, his tongue brushing at her nipple.\n\n\"Oh yes. Oh yes,\" she panted, the dual attentions fueling the ache that was now starting to pulse through her whole body, her eyelids growing heavy. Her free hand came up to his shoulder so that both could hold him to her gently as her legs scissored more and more, the one bumping against him again and again.\n\nPulling his mouth from her breast, he raised up to gaze down at her. Returning his desire-filled gaze with her own nervous passion, she bit at her trembling lip, she returned his gaze.\n\n\"You are so beautiful,\" he sighed, as if he needed to. Then, shifting his body, he lowered his mouth to her other breast.\n\nMandy's body reacted on its own, her hands following him as her back arched slightly to offer the fleshy mound to him. And, as his lips closed around the little bud and his tongue swiped across it, she arched a little higher and held him to her while quietly mewling.\n\nShe had never felt the sensations that Mr. Kole was conjuring within her, never had her breasts loved and manipulated with such care and adoration. He seemed to be almost worshipping them. His suckling was a firm, yet gentle. His tongue resolved, but giving. His fingers strong, while yielding.\n\nShe had thought she liked being touched by Donny, but he was always so clumsy and impatient. And it felt nothing like this.\n\nMr. Kole was making her entire body tingle and pulse with need... every inch of her flesh simmer. Within her loins, her glowing embers snapped and crackled, the tropical breezes fanning them, and her legs scissored more with each passing moment. Her skirt gradually rode up her thighs, allowing the cool air to caress more of her flesh and revealing the dark spot developing at the center of her white panties.\n\nWhen, after a few minutes he moved back to her other nipple, his hand slid away from her breast to drop downward. Drawing delicate lines across her flesh, his fingers slowly moved over her abs, making them quiver anew. Reaching her skirt's waistband, he mimicking her earlier action by tracing his fingers back-and-forth along it.\n\nLying there, panting, Mandy wanted him to reach down. To touch her... there. And she wondered if he expected her to guide his hand down, like he had done with hers. Although she wanted it... her body ached with the need for it... she didn't know if she could. Of course, she had never had to with Donny. He always grabbed at her with that same impatience he had with her breasts.\n\nBut again, Mr. Kole wasn't Donny, not anything like him. And his hand remained above the waistband for an eternity before finally slipping down to rest on her inner thigh a couple inches below her crotch. Its heat mingling with her own, his fingers drew tiny circles in her flesh.\n\n\"Oh God, Mr. Kole. Oh God,\" she whimpered, the proximity of his hand making her body desire his touch even more. Her legs stopped their scissoring, her feet found a perch and her hips lifted, her body trying to force the contact.\n\nCrawling upward centimeter... by... centimeter, his fingers continued tracing lines in her flesh until they reached her crotch. Then his hand cuffed the curve of her, fingers pressing at the wet spot in her panties and the heel of his palm pressing against her clit.\n\n\"Oh God. Oh God,\" she mewled, lifting herself to the hand.\n\nSuckling on her breast, two of his fingers casually probed at her through her panties.\n\nMandy's embers ignited into dancing flames and her body trembled with need. Panting and biting at her lip, she threw the hand at his shoulder down to her side, her fingers scratching at the bedspread under her.\n\nMoments later she whimpered with loss when he pulled his mouth from her nipple and shifted his body down, leaving a new trail of kisses along her ample tit. Her one hand followed him as he kisses moved down across her quivering abs.\n\nHis lips lingered near the skirt's waistband while his hand slid up from her crotch to hook a finger under one side of her panties' waistband. Tugging it down off her hip, his finger slid to the other side to pull it down as well. Consciously bringing her legs together, Mandy lifted her ass off the bed as his hand shifted back-and-forth, slowly working her panties down onto her thighs. As he pushed them past her knees and over the socks covering her calves, her hand fell from his hair to join the other in scratching at the bedspread. Popping her shoes off and letting them fall to the floor, Mr. Kole pulled her panties off and tossed them aside.\n\nMandy's legs fell freely open again and she laid there, her body tingling with anticipation. Her hair was spread out around her head resting on the pillow, her soft and innocent features lax with arousal. Her blouse lay open under her and her bra was askew above the milky flesh of her ample breasts, topped by the tiny, rigid spires of her pink nipples. Her splayed legs struck out from under her disheveled skirt, its hem high on her thighs, partially concealing her sex.\n\nClimbing between her legs, Mr. Kole rested his hands atop her thighs a few inches below the skirt. The heat from his hands sizzled against her flesh as they slowly slid upward, gradually coming closer... and... closer. Pushing her skirt higher, he fully revealed her glistening pussy with the delicate feathering of strawberry-blond hairs sparkling dew-like. Her engorged labia were flowering open ever so faintly in invitation, her swelling clit daintily poking out near the top. Cuffing the indent of her inner thighs where they met her torso, he brought his face to hover inches from her and his breath swirled over her wetness.\n\n\"Mmm.\" She mewled, her hips rolling in anticipation.\n\nLeaning in, he kissed her... his lips firm, yet giving.\n\n\"Oh,\" she sighed, her hips freezing in place.\n\nSlowly sliding his tongue up and down between her labia, he gently licked at her juices.\n\nThe dancing flames within Mandy's loins grew, their heat radiating outward to consume her body. Her head lulled back, her eyes closing as she bit at her trembling lip. Her fingers scratched more insistently at the blanket. Her feet skidded across the bed, searching for a new hold and, finding one, she bent her knees and lifted herself toward him.\n\nSlowly slipping up through her slit, his tongue came to her clit and gently rolled against it.\n\n\"Oh God,\" Mandy whimpered, electricity shooting through the swollen bud to fan her fires even higher.\n\nLicking her clit with a gentle determination, he shifted his hands so that his thumbs could massage her labia with teasing, yet assured, pressure.\n\n\"Oh yes. Oh yes\" she mewled, a familiar sensation awakening deep inside her.\n\nCoated by her juices, his massaging thumbs slipped inward a centimeter to caress the inner edges of her labia. Wrapping his lips around her clit, he sucked on it for a moment, then pulled back to lick it some more.\n\n\"Oh God. Oh God, yes,\" she whimpered, her fires roaring higher and the familiar sensation building... her sex growing wetter... her lips flowering further open in invitation.\n\nAlternating between biting her lip and gasping past it, her head lulled to one side, then the other, strands of her hair fluttering with it. Again, Donny had never loved her like this and within her passion ravaged mind she sensed that this orgasm would be nothing like anything she had experienced before, that it would ravage her body with more power than ever before.\n\nAnd her body trembled in anticipation.\n\nSucking on her clit again, one of Mr. Kole' thumbs slipped into her opening to gently massage the edge.\n\n\"Oh God. Oh god,\" she whimpered, his failure to press harder... refusal to penetrate her... urging her growing orgasm to form and linger teasingly at the precipice of release. Its promise making her fingers grab at the blanket and her feet kick into the bed, needily lifting herself to him.\n\nHer actions pushed herself onto his thumb, the digit spreading her walls to dip inside her in unison with his tongue lapping hard at her clit. The dual sensations ripped her orgasm free and sent it raging through her.\n\n\"Oh God yes! Oh God yes, Mr. Kole!\" Crying out, her body arched off the bed, causing her skirt to slip higher on her waist.\n\nHer muscles spasming with the force of the orgasm, her head to rolled back as fireworks exploded behind her closed eyelids. Her blouse fluttered under her and her loose bra slipped under her chin. Topped by her swollen nipples, her tits rolled upon her chest. Her fists clenched at the bedspread, tugging at it as her hips rolled and jerked.\n\nSlipping an arm under and around her leg, Mr. Kole kept her spasming body from jerking away so he could continue lapping at her clit and massage her opening. Yet, he still refused to press harder with his thumb and actually penetrate her.\n\n\"Oh God yes! Yes!\" She whimpered again and again, her lithe body being wracked by tidal waves of pleasure, her nerves screaming with electricity. Her straining, tense muscles relaxed... tensed... relaxed. Her head snapped from side-to-side, strands of her hair fluttering with it, and a thin sheen of sweat made her flesh glisten.\n\nWhen the orgasm did eventually begin to fade, her softening body settled back on the bed to shuddering with the aftershocks.\n\nLying there with Mr. Kole gently lapping at her juices, again showing her pussy a love like she had never experienced, she found herself on the verge of asking him to take her virginity. She wasn't thinking about the size of his cock, nor how it might hurt her. She was just enraptured by his touch... by the way he was treating her.\n\nAnd she might have.\n\nExcept before she could, his hands slid out to her waist and flipped her over and she reflexively scramble onto all fours with her head on the pillow and her ass in the air. The hem of her skirt fell down, cover her ass, and her top fell to one side of her head. The cups of her bra became piled on the bed and her breasts hung down, the nipples nearly touching the blanket. Her still-burning fires danced and swayed as he knelt behind her and pushed her skirt up, piling it around her waist.\n\n\"Such a beautiful little ass,\" he sighed, taking a taut, little cheek in each hand and giving them both a hungry squeeze.\n\nThe hungry admiration in his voice mixed with the feel of his massaging hands to stoke her fires higher and she pushed herself back into his grasp.\n\nBut then he used his thumbs to pull her cheeks apart to reveal her little brown hole and an image of his sizable cock flashed in her mind. Apprehension rolled through Mandy and she tried to relax. His hands left her ass for a moment before one returned to again pull her cheek aside. With equal measures of excitement and trepidation she held her breath, waiting to see what he would do exactly.\n\nA fingertip, wet with lube, was placed against her sphincter. As it penetrated her, the excitement gained ground and she quietly mewled. Rolling the digit around, coating her anus with the lube and caressing its nerve-endings, he fed the excitement.\n\nIt lost some of the gained ground when he extracted his finger, making her wait again. Inserting the finger again, he added more of the lube to her opening before sliding the digit in and out of her, finger-fucking her ass. The sensation refueled her excitement and she whimpered into the pillow while rolling her hips enticingly in response to the limited penetrations.\n\n\"Oh yea. You do like it,\" he sighed appreciatively.\n\nAfter loosening her up, he extracted the finger and set his cock's bulbous head against her sphincter. Flashing through her mind once more, the image of him brought a wave of trepidation with it, eroding the excitement's advances. And as she knelt there, trying to relax, she again considered asking him to take her virginity instead.\n\nBut she still hesitated.\n\nAs much as she knew she didn't want to let Donny do that, she knew she could give herself to this man. She just wasn't sure if she was ready.\n\nBesides, she enjoyed the sensation of a cock sliding back-and-forth along her sphincter... the feel of the rigid shaft filling her ass again and again.\n\nAt least I enjoy Donny's. She thought, reimagining the size differences.\n\nThen Mr. Kole pushed his lubed cockhead into her, forcing her to accept it as well as the first inches of his shaft.\n\n\"Oh God,\" she whimpered, strained by its thickness.\n\nStopping, he held himself inside her for a moment, letting her get used to this initial penetration before pulling back slightly. Extracting a small portion of himself, he pushed forward again without pause, forcing her to accept more of him.\n\n\"It's so big,\" she whimpered, her ass being stretched open.\n\nThe pain diminished her fires and her body reflexively tried to pull away, but he gripped her waist with both hands now, keeping her in place as he held still for another moment. Gasping into the pillow, her fingers clawing at the bedspread, Mandy struggled to relax and accept him.\n\nHe began to slowly pump his manhood in and out of her ass and the feel of his rigid shaft caressing her sphincter restirred her arousal, helping to ease some of the pain. Then, just as her gasps started to morph into whimpers of pleasure, he shoved even more of his cock into her.\n\n\"Oh God! It's too big!\" She cried, the additional penetration causing her new pain. \"Stop. Please stop.\"\n\n\"No, Sweetie. You asked for this. So, you're gonna take it all,\" he groaned hungrily behind her, rolling his hips so that his stiff cock shifted within her canal.\n\n\"But it's too big, Mr. Kole. It's too big.\" Her pleading was laced with her own uncertainty over wanting him to stop and her ability to take any more.\n\n\"You can take it, Sweetie,\" he assured her, holding still and allowing her to become accustomed to him before pulling back slightly then pushing into her further.\n\n\"Oh God! Please, Mr. Kole.\" Her head lifted off the pillow and she stared wide-eyed at the headboard, her fingers tugging at the blanket.\n\nDonny's hadn't felt like this, not even the first time. Still, she had grown used to it. Grown to like it... to enjoy it so much that she had told this man about it. Had basically invited him to do it too. Her mind reeling with how big it felt... how filling, she tried to relax and to convince herself that he must be completely inside her.\n\nBut she knew better.\n\nAnd a moment later he proved it.\n\nPulling back once more, his hips rocked forward again to press his crotch against her asscheeks.\n\n\"Oh God!\" She cried, her head snapping back and her hair flying as she felt like she was being ripped in two.\n\n\"Oh yea, Sweetie.\" As if reading her mind, Mr. Kole again patiently waited.\n\nNow knowing that he was completely inside her, she closed her eyes and focused on relaxing. The pain had nearly extinguished her fires, their diminished flames flickering weakly within her loins. After a moment the pain subsided just enough for her head to droop forward, her hair hanging down on either side.",
        "Seeing this, Mr. Kole started pumping a couple inches of himself in and out of her. This limited fucking, combined with the sensation of his shaft sliding back-and-forth along her opening, weakened the pain more and she mewled quietly.\n\nWith his hands holding her waist, his hips slowly rocked back-and-forth, gradually sliding more and more of his cock in-and-out of her. Soon he was withdrawing all but his cockhead before thrusting forward again. While each stuffing of her ass stoked the lingering pain, the rhythmic caress of her sphincter lessened its overall strength and fanned the fires within her loins.\n\n\"You have such a beautiful little ass,\" he groaned, his hands slipping from her waist to squeeze her asscheeks as the rhythm of his pumping cock increased slightly.\n\nHolding herself up on all fours, her body rocked slightly as his crotch lightly smacked into her cheeks. Her hair gently fluttered. Her breasts swayed beneath her, the hard nipples brushing against the material of her bra where it lay on the bed. Tantalized by this, the buds once again crackled with electricity, adding fuel to her fires and their heat vanquished all but the last bits of pain. The pleasurable bits.\n\n\"Oh God, Mr. Kole,\" she whimpered, her fingers releasing their grip on the blanket.\n\n\"Yea. You do like it,\" he groaned, his hands once more grabbing onto her waist as his fucking rhythm intensified slightly more.\n\nThe sensation of his rigid manhood sliding along her sphincter and repeatedly stuffing her ass fueled Mandy's fires higher. Opening her eyes, she let her drooping head swing with her rocking body.\n\nIn and out his cock pumped...\n\nCaressing the nerve-endings...\n\nStuffing her...\n\nFucking her...\n\nAgain and again...\n\nThe flames within her grew and grew, dancing higher and higher. Within them, another powerful orgasm began to form, its promise echoing through her body. Her breasts once more pulsed with ache and, in answer, she dropped onto her elbows to press the ample mounds into the bed.\n\n\"Yes. You like it.\" Mr. Kole' rhythm increased more, his crotch starting to slap against her cheeks harder, making them quiver.\n\nAlthough his rhythm increased, it remained gentle and patient and fueled the growing strength of the orgasm's promise even as it forced her body to gently rock upon the bed. Whimpering with pleasure, she held her head up to stare at the headboard, strands of her hair fluttering.\n\nIn and out his cock pumped...\n\nFucking her...\n\nIn and out...\n\nStuffing her...\n\nIn...\n\nOut...\n\nIN...\n\nOUT...\n\n\"Oh God,\" she whimpered, the orgasm emerging from the flames to momentarily tease her.\n\nHis pumping cock slid into her... its length filling her... every centimeter of it caressing her sphincter.\n\n\"Oh God! Oh God!\" She cried, the orgasm rocketing through her.\n\nWaves of rapture crashed against her nerves to make her entire body tense and shudder. Closing her eyes against the brilliant fireworks, her head snapped back, flinging her hair. Her fingers clawed at the blanket, jerked at it. Her feet kicked at the bed. Crying out and gasping, she shoved her ass back at him, her hips twitching on him.\n\nHolding tightly onto her waist, he fucked her writhing body with limited strokes, keeping the majority of his cock inside her while the orgasm continued. And he continued this limited fucking when it slowly began to fade, her body shuddering with the lingering quakes.\n\n\"Oh, Mr. Kole,\" she mewled, as her muscles relaxed and her body softened. Her mind quickly grasped onto the idea that he had yet to cum and she anxiously waited for him to start fucking her in earnest again.\n\nBut he didn't.\n\nInstead, he pulled out of her and used his hold on her waist to flip her onto her back. Whimpering with loss, she watched him reach up and grab a pillow. Then, scooping her ass up in one hand, he lifted her off the bed and stuffed the pillow under her.\n\nDonny had never done anything like this and, as Mr. Kole positioned himself between her splayed legs, she wondered what he was about to do... wondered if he was going to take her virginity. Still uncertain if she wanted him to, or at least if she wanted him to right then, she tried to find her voice to say something even though she wasn't sure what would come out: if she would ask him to or try to stop him.\n\nAs he knelt between her splayed legs and guided his cock to her, time seemed to stand still.\n\nBreathing heavily, she laid there wondering and struggling with her indecision and desires. Her strawberry-blond hair lay in a messy fan around her head as it rested on the pillow, her internal turmoil reflected in her innocent features, trembling lip, and bright green eyes. Her arms lay at her sides, her fingers nervously scratching at the blanket under her. Her blouse and bra were askew, pulled in opposite directions with the latter partially covering the top half of one firm breast. Atop the fleshy mounds, her hard, pink nipples stood proud. Just above where her skirt was twisted around her waist, her tummy quivered with her breaths. She still wore her socks and with her knees bent, her feet set on the bed, her legs were splayed open in invitation, her pussy glistening wetly between them. Her swollen labia flowered open in invitation and her engorged clit poked out from under its hood.\n\nThen his cockhead pressed at her sphincter, forcing it open once more and his entire cock slid easily inside her ass.\n\n\"Oh God, Mr. Kole,\" she mewled, the renewed penetration relieving her sense of both loss and indecision.\n\n\"Damn, you are so beautiful,\" he sighed, gazing down at her and starting to pump his cock in and out of her ass.\n\nAs she was pushed upward with each full insertion of his manhood, the thick shaft stuffing her, her body arched slightly, her hips reflexively sliding down to greet him. Her head rolled back on her bending neck; her eyes partially hidden behind heavy lids.\n\n\"Oh yes. Oh yes,\" she whimpered, her fires being newly stoked.\n\nFor the first few minutes his hands held onto her bent knees with a gentle firmness that provided him with stability and leverage. But as he found his rhythm, one of them slipped down her leg and came to rest just above her sex and his thumb began pressing and rolling at her clit.\n\n\"Oh God! Oh God!\" She whimpered, electricity screaming through the engorged button to shoot outward through her body.\n\nFucking her with a building rhythm, he pumped his cock in and out of her ass, caressing the nerve-endings with each and every stroke of his shaft. Her body shifted up-and-down upon the bed, her head shifting upon one pillow, her ass on another. Her breasts rolled upon her chest, their flesh shuddering fluidly.\n\n\"Oh yes. Oh God, yes,\" she whimpered, her head lulling back and her eyes closing as another orgasm quickly formed.\n\n\"So damn beautiful,\" he growled, continuing to toy with her clit as his rhythm steadily built.\n\nBack and forth his hips rocked...\n\nFucking her...\n\nHis cock pumping in and out...\n\nFilling her...\n\nStuffing her...\n\nAgain and again...\n\n\"So... beautiful,\" he panted as he drove himself into her harder... faster.\n\n\"Oh yes. Oh yes,\" she whimpered, the orgasm growing and making her fingers scratch at the blanket with its promise.\n\nHis rhythm continued to build until he was fucking her with an almost wild abandon, driving his cock into her and making her body shudder upon the bed, her breasts jiggling excitedly. And as he shoved himself deep into her ass again and again, her clenching sphincter sensed him growing stiffer.\n\n\"Oh God, yes, Mr. Kole. Yes,\" she cried with the desire to feel his cock twitching and jerking in her ass as it exploded... to feel him cumming inside her.\n\nIn and out his cock pumped...\n\nHarder...\n\nIn and out...\n\nFaster...\n\nIn and out...\n\nIn...\n\nAnd...\n\nOut...\n\nWith its feet firmly planted within the fires, her orgasm leaned toward its release... reached for it... its form elongating.\n\n\"Oh yes!\" He growled as his thrusting rhythm deteriorated into a few awkward jerks before he crammed himself as deep inside her as he could and his cock twitched excitedly, unleashing his load.\n\n\"Ooh God yes! God yes!\" She cried, the sensation ripping the orgasm free and sending it crashing through her. For a third time fireworks exploded behind her closed eyes as her head snapped from side-to-side to make her hair flutter. Powerful electricity shot along her nerves, making her muscles tense and relax in rapid succession as a fresh sheen of sweat made her flesh glisten. Her hands slapped at the bedspread, her fingers clawing at it and jerking. Her body arched up off the bed, shoved herself down into him, her hips jumping and twitching.\n\nTo keep her body from twisting away, he grabbed her legs with both hands and crammed his crotch against hers. This took his thumb away from her clit and the loss made her whimper sadly even as she laid there writhing in ecstasy, the orgasmic waves continuing to crash through her.\n\nWhen he finished cumming, his cock settling down within her ass, her body instinctively humped herself on it, her clenching sphincter milking the last drops from him.\n\nThen her orgasm began to fade, her body softening and her fingers releasing the blanket. Lying there, shuddering with the aftershocks, she felt him slowly withdraw himself and the bed shift under her as he laid down beside her. Slipping an arm under her shoulders, he pulled her to him. Rolling onto her side, she rested her head on his chest and swung one leg across his waist. As the two of them laid there for a few minutes, catching their breath, he gently caressed her arm and back through her disheveled blouse.\n\n\"The key to your house is hanging on a hook by my back door,\" he eventually whispered, his tone letting her know that he had known where it was all along.\n\nThe End"
    ],
    "authorname": "PrevertedMe",
    "tags": [
        "older man",
        "younger woman",
        "mature"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/schoolgirl-uniform-mandy"
}