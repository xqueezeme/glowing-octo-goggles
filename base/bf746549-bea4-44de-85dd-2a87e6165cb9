{
    "title": "Let Me Help You, Good Doctor Ch. 04",
    "pages": [
        "Dominique was actually a little shocked by how much fun she was having with everyone, including Candy. She didn't let anything between her and Nik hinder her from being all over him and playing touch-football with everyone but Katrina. Candy decided to have the wedding there and Dominique put on a fake smile as she made notes in her planner. What shocked Dominique more was the permanent smile that she had every since she showed up. Nik was actually playing along nicely and she allowed herself to fall into the lie briefly, despite what happened the other night. \n\nAs everyone was leaving, Nik followed Dominique to her car in silence, which was killing him. Just a few minutes ago, she looked so free and happy, like she enjoyed herself and now; it was back to the old Dominique. He liked seeing her with that smile on her face, it did something to him. He felt like a heel every time he thought about her finding out his full name. He needed to explain it to her, but he could barely explain it to himself. \n\n\"Dominique, I'm glad that you came.\" He finally said and she nodded, not even glancing his way. He needed to get this out. He grabbed her arm and turned her towards him, \"Look, we need to talk about the other night.\" She stuffed her hands in her pockets, staring back at him, \"The reason why I didn't tell you about me being Batista is not the reason you think it is. I mean, I'm not ashamed to admit it; I may have a little problem with commitment. When that old woman said something about I would meet the person I was supposed to be with, I was a little skeptically, but intrigued. Then when I saw it was you, I got a little scared. Hell, your little pack of friends already claimed two of mine.\" He chuckled lightly and she couldn't help but to return that smile, \"I'm sorry that I didn't tell you earlier, but I didn't do in an attempt to make me look like a hero or anything like that. I mean, look at me, I don't have to play any games.\" He said flashing his killer smile.\n\nDominique just shook her head, \"That almost sounded sincere until that last part, but I believe you. I shouldn't have gotten upset like that especially with everything that I'm making you do for me right now.\" \n\n\"Did what happened inspire your outfit today? Because I have to tell you, you look smoking hot in jeans.\" He said noticeably checking her out. \n\n\"Nik, please. I just thought that I would be a little presentable today.\"\n\n\"Well, I like it and it seems that your boy toy is watching too.\" Nik said briefly looking off.\n\n\"Are you serious? He is like watching us, right now? With Candy watching?\" \n\n\"I don't think she is paying attention; she is talking to Jade right now.\"\n\n\"Oh, wow.\" The smile that spread across her face made Nik jealous a little, \"So, what should we do about that?\"\n\n\"Well, I think the way we are standing and looking at each other is making it look like there's a little trouble in paradise, so\" he hinted pulling her closer to him as his body heat instantly relaxed her, \"we should make a good show, huh?\" he whispered before kissing her softly, feeling her body rest against his.\n\nHe always knew how to make her melt, she thought bitterly as she wrapped her arms around his neck. He grabbed a hold of her hips, drawing her closer to him as he pushed his tongue into her willing mouth. She didn't want to make this a habit that every time he touched her, she would forget why she was mad at him. She pulled away briefly, but he quickly closed the gap again with a bold urgency that she never felt from him before that made her knees buckle.\n\n\"Are you trying to make this look really good?\" she whispered against his lips.\n\n\"Well, I always have been known for being a good actor. Plus there maybe a possibility that I miss your lips.\" He said and she shook her head stepping away from him as he laughed. \n\n\"Why do you have to play like that?\"\n\n\"I'm not playing, but I do have a favor to ask and it's slightly big. I need your help.\"\n\n\"Oh, you need my help for a change? What's going on?\"\n\n\"Remember I told you my father is retiring and they are having a big party for that and my parent's anniversary?\" she nodded, \"I was wondering if you would come with me.\"\n\n\"Wait. You want me to pretend to be your girlfriend to your family? No, I can't lie to your family.\"\n\n\"You are not lying and you don't have to pretend. Look, my big mouth sister, Ama, told my mother that you were over at my house and I was cooking for you, so she wants to meet you.\"\n\n\"Just because you cooked dinner and I happened to be there? What's the big deal?\"\n\n\"I told you Dominique, I don't do that for everyone and apparently, my family knows that so she wants to see you. I told her I would ask and see if you want to go.\"\n\nDominique frowned, wondering if he even wanted her there, \"You don't sound too excited about me being there.\"\n\nHe instantly shook his head, \"No, it's not that. It's just I don't want my family to make a big deal out of this and I have a feeling that they are.\"\n\n\"Why do you say that? I'm sure you have brought plenty of girls home to meet your parents.\" There was a brief silence before he slowly shook his head, \"None? At all? I'm the first?\" he nodded, \"I don't like this no more.\" She said suddenly loosing her breath.\n\n\"Come on Dominique, I know it sounds a little overwhelming but it will be alright. I already told them that you are my friend so nothing is going on between us.\"\n\n\"You are bringing me to meet them? I am the first girl that you are bringing over there; how could they not think that something is not going on between us.\"\n\n\"Dominique, come on now. You can go and have fun with some Italians. That and if you tell boy toy over there that I went to see my parents and you didn't, he could think that something was suspicious.\" He hoped that he had roped her with that last statement. \n\nShe took a long sigh, trying to think of something to say but in reality, he had a point, \"If I do this, then this whole I do what you say when you say it thing is over. Deal?\" Damn, he thought to himself, \"Deal.\" He reluctantly said, \"Do we seal the deal with a kiss.\"\n\n\"You already had your kiss, buddy.\" She said folding he arms, \"So, when do we leave, so I can arrange some things in my schedule.\"\n\n\"You can't just go on a vacation and enjoy it, can you?\"\n\n\"I do sometimes, but this is going to be different. You said you don't live far from here?\"\n\n\"Yea, maybe five hour drive from here. It's by the coast and the weather is going to be real nice, so wear more jeans.\" He said giving her another look.\n\n\"Nik, stop being such an ass.\" She said feeling hot under his glare.\n\n\"Well, just my opinion,\" He nodded, \"but really, I do like what you are wearing.\" He ended by pulling her close to him, wrapping his arm around her lower back.\n\n\"Well thank you very much and no I didn't wear it for you.\" She said trying to put some distance between them by placing her hand on his chest.\n\nShe tried not to stare into those sensual eyes that held so many promises. She had to admit that the connection was getting more intense at times but she didn't pull away. There was that girlie side of her that always snuck in and enjoyed the extra attention. She could allow herself to feel desirable for little bit.\n\n\"Hey you two, you thought about getting a room.\" They both turned and saw Jason standing behind her.\n\n\"Hey, what's going on?\" she said turning in Nik's embrace.\n\n\"I was just wondering if something was wrong; you two have been standing around here for a while.\"\n\n\"We are just enjoying the scenery.\" Nik smiled, laying his chin on her shoulder.\n\n\"Actually, we were talking about plans for this weekend.\"\n\n\"Oh, well I was going to see if you wanted to hang out a little this weekend. I have some spare time and Candy is flying out to New York to try on a couple of dresses.\" He was alone, she thought smiling to herself.\n\nThe moment Dominique finally waited for; he was going to be alone for the weekend and she could really win him over, \"Um, I could possibly do that. I will let you know.\" She said and instantly felt the hold around her waist loosen.\n\n\"Alright, I will give you a call.\" He smiled, \"Hey man, no hard feelings about earlier. I just worry about her sometimes.\"\n\n\"That's sweet man, it really is, but it's not your job to worry about her. Anyway, I'll catch you later, baby.\" He said moving away from her and heading over to his car.\n\nDominique's brow wrinkled in confusion at Nik's sudden outburst. It wasn't till he got to his car that she put it all together and she felt like slapping herself across the face. What could be going through Nik's mind since she just told Jason that there was a possibility that they will see each other this weekend? Well, he should understand, right? That was the whole point of them pretending to be together, but she still felt like a first class heel. She watched him burn rubber down the street, leaving her standing there with her thoughts. \n\nThe next day, she was pacing her apartment rationalizing with herself on what she wanted to do. She already promised Nik that she would go, but she couldn't miss this opportunity to be alone with Jason. Little miss perfect is going away for the weekend and she could have him all to herself, but for some reason the thought didn't really appease her now. The worst part was that she has been trying to call Nik and he hasn't picked up his phone. How did it go from her being mad at him to him being mad at her? She was about to go to the kitchen when she heard the door bell. Must be one of her friends, she thought as she went to answer the door.\n\n\"Hello ma'am, I'm from the phone company and I'm just here to check your phone since you haven't called your younger brother.\" She looked up and saw Taro standing there.\n\n\"Very funny.\" She said shaking her head and walking away from him. \n\n\"So, what's up? You don't want to call me or is it that you are too busy?\" he said showing off his cute boyish smile that made girls swoon.\n\nShe always thought her brother was adorable in his own little way. He was a little taller than Dominique, but inherited his father's looks. She remembered that people use to always compare him to Jet Li, but he would just laugh that off. In truth he really does and she couldn't quite understand why he was still single, other than being picky. Taro was more of a skater guy, she tried to make him look more professional but, he wasn't having that. He liked to be comfortable but still be in designer clothes. He has his own house and owns a successful photography business. She remembered the last relationship he had was eight months ago. \n\n\"Um, I have been a little preoccupied.\" She said plopping down on the couch.\n\n\"That doesn't mean that you cut me out. What's going on little sister? How is the book?\" he said walking around the place, a little habit he always had when he comes here.\n\n\"It's going good. It should be released in a couple of months.\"\n\n\"How is Katrina?\" he said with a little smile and she just shook her head.\n\n\"She is still married, pregnant, and happy.\" She listed.\n\n\"So, are you pretty much saying that I have no shot?\" \n\n\"In the long run, yes; me, on the other hand, I am confused.\"\n\n\"Well that's normal.\" He said sitting next to her as she looked at him up and down, \"What's going on?\"\n\n\"Jason is in town and he is getting married.\" She sighed.\n\n\"Jason? Isn't that the guy you had a huge crush on when we were little?\"\n\n\"Yes, it is and I think I started something in my haste to get him back.\" \n\nShe went through the whole story of how she got Nik into this and everything that she had planned, leaving out the deal her and Nik made. After she was done with the story, Taro just sat there staring at her.\n\n\"Wow, I'm shocked. I didn't know you had that kind of deviousness inside of you.\" He said with a hint of a smile.\n\n\"I know, I feel terrible about hurting Nik's feelings like that, but I don't want to miss this chance with Jason.\"\n\n\"I'm still shocked. Dominique, why are you going after a man that's not yours? You are so much better than that.\"\n\n\"It's not that I'm going after him and besides, he was mine first.\" She pouted.\n\n\"No, he wasn't. Ya'll have always been just friends and you haven't made any moves on him. Now you brought this other guy in the mix.\"\n\n\"Why do you have to make me feel worse than I already do? Besides, I think me and Jason will be great together.\"\n\n\"Okay sis, let me ask you, would you want me to lie to you or tell you honestly what I think?\"\n\n\"I'm scared to hear what you think.\" \n\n\"I think you should go with this Nik guy. He sounds like he doesn't ask for much and that he could be feeling you a little bit.\" He nodded pulling his skull cap further down his head.\n\n\"You just don't know Nik. I mean he is the typical player and wants a different girl every night.\"\n\n\"If that was so true, why is he wasting so much time with you? If he can truly have any woman he wants, why hasn't he used his gifts on other women since you two have been pretending?\" Dominique swallowed hard, running her fingers through her hair.\n\nShe wouldn't admit it but he somewhat had a point, \"I thought I had the degree in therapy and you are here trying to counsel me.\" \n\n\"Hey, what can I say?\" he shrugged, \"I'm multi-talented. Now, let me give you a deciding factor before you do this: do you like Nik?\" he asked and Dominique nibbled on her lower lip considering the question that she has asked herself several times. After all her emotional meltdowns that she put Nik through, she should do something for him, right?\n\nThe next day, Dominique hurried out of bed and jogged her mile and half on the treadmill. She hadn't contacted Nik with what she decided to do about today. She was stepping out of her normal comfort zone, but hell, why not for just once. She did hear that he was leaving around ten so she hurried and threw on a turquoise flowing summer halter dress and denim jacket. Well, here goes everything, Dominique thought to herself as she looked in the mirror one more time before grabbing her bag and heading out the door. She was taking a risk assuming that Nik hadn't left yet, but she had to have some sort of hope. She was about to knock on the door but jumped back when it swung open and Nik was standing there with his own bags and Armani dark shades on. Her eyes scanned the rest of his body in a black button down shirt with dark blue jeans that fit him very nicely especially around his thighs. For someone on a cop's salary, he sure can dress. She shook her head and looked back into his covered eyes. \n\n\"What are you doing here?\" he asked not even bothering to remove his shades. \n\n\"Well, I made a promise to you about going to see your family and I don't break my promises; most of them.\" \n\n\"What about lawyer boy?\" he quickly asked. \n\n\"I already told him I have plans with my boyfriend, so he will just have to live with it.\" Dominique breathed a sigh of relief when she saw the corner of his lips turned up, \"I'm glad you changed your mind. Now we have to get on the road, it's about a five hour trip with stops.\" \n\n\"Okay, well I made some food, so that should eliminate some of the stops.\" She said holding up a basket. \n\n\"Good thinking.\" He took her bag and lugged everything down to his truck. \n\nAfter loading the bags, they took off down the road. Dominique text Katrina and Jade to let them know so they can check in on her place. She fumbled with her planner, realizing that she was a little bit nervous about this going away for the weekend thing. She didn't want to make a big deal out of it, but it sort of was. She never got that far meeting a guy's parents and even though they weren't dating, it still made her nervous.\n\n\"So, am I going to hear a lot of Italian this weekend?\" she finally asked, thinking that talking would make her feel a little better. He smiled, \"More than likely. My mom and dad were both born in Italy, it's just my dad stayed longer than my mom. He use to serve in the Italian navy and moved here and met my mom. Even though English was his second language, he learned it real well and quick.\"\n\n\"So, your dad served as well? Is this a trend with the men in your family to be in the armed forces?\"\n\n\"Not really. It's just both my mom and dad wanted all of us to go to college. My brothers knew that if there was any college money saved up, it was going to go to the girls. So, all three of us got into the military; my youngest brother is in the navy now.\" \n\n\"Wow, I can't believe how big your family is and you seem pretty close.\"\n\n\"Well, just like any other family, we bicker and argue, but at times of crisis we are always there.\" Any other family but mine, Dominique thought with a sigh.\n\nShe just took a deep sigh and pretended to be interested in what was going on outside. She didn't want to think about how families are suppose to be. She had enough examples of that looking at Katrina's family. She knew this was going to be a long weekend and she wasn't sure what to expect. That was the scary thing; she was always prepared for anything, but now she was going into this thing blindfolded. Well, at least all of her friends knew where she was heading too. Dominique laid her head against the back of her chair and slowly felt her eyes getting heavy. \n\nDominique didn't even realize she had fallen asleep till she felt someone shaking her. She sat straight up, trying to collect herself as Nik looked on with a smile on his face, \"I'm sorry, you looked so cute when you were sleep, but I had to wake you up.\" \n\n\"I see, are we almost there?\" Dominique yawned.\n\n\"Yep, about a good ten minutes away.\" \n\nDominique looked outside and saw trees and fields galore with nice houses in between. Wow, the scenery looked so beautiful, she thought as he pulled into one house with a lush garden that rivaled her mother's. Her mouth instantly dropped as she stared at the two story house that was modeled after a very small Italian villa. \n\n\"Nik, this is beautiful.\" She said in awed.\n\n\"I know, my dad got some of his friends together and they built this for my mom as a wedding present.\"\n\n\"Seriously, so this has been in the family?\"\n\n\"Yea, and they want to keep it that way.\" He said getting out of the car and she followed behind him, \"Now, don't let my sisters scare you away too bad, they can be a bit pushy sometimes and my brothers, well, they may flirt with you a little.\"\n\n\"So, none of them are married?\"\n\n\"Well, Rafael is engaged and Gianni, well with his career, he can't afford to get married right now.\" he said noticing the way his tone dropped when he mentioned his older brother.\n\n\"How close were you?\" she asked as he took out some of the bags.\n\n\"Real close. I wanted to be him, but after I realized what he actual does; I didn't want to hang out with him much. Then when he found out what I was doing, he really laid into me. That's one reason, why I wanted to move away to go into the police squad.\" She nodded, trying to take one of her bags from him, \"No, you will not. You will not have my mother tongue lash me for letting your carry your own bags.\"\n\n\"It's okay, I'm a big girl now.\" \n\n\"I know you are, but I will not hear the end of it if I let you.\" \n\n\"Well, I will explain it to her.\" Dominique said grabbing the handle to her roll away bag and when she looked up, she was met with Nik's lips against hers in a light chaste kiss. One that she never had with Nik before; it was sweet and made little butterflies in her stomach, but she felt him holding back. Once she felt that, she realized she didn't want him to hold back. She dropped the handle and pressed her body against his, wrapping her arms around his neck. As her body pressed against his, Nik felt his control on the edge. He meant for it to end quickly, but he couldn't pull away; he had to actually feel her lips. \n\nHe quickly realized where they were and pulled away and met her dark slanted eyes, \"Mmm, I had to get one taste to last me the weekend.\"",
        "\"Right,\" Dominique quickly said pulling away from him, \"because they would ask questions if we do it in the house?\" she nodded.\n\n\"Well, knowing my folks, we will be in the pool house because my room is no longer my room.\"\n\n\"Really? They converted your room?\"\n\n\"Yea, show you how much they love me.\" He shrugged, closing the back trunk and heading to the door. \n\nShe followed behind him and her nose was assaulted by the fresh flowery scent. Dominique gawked at the array of roses arranged in front of the house. His mom must have a real green thumb. He knocked on the door and she could hear the foreign tongue behind the door which made her a little bit nervous.\n\n\"Quick! How do I say hello?\" she whispered.\n\n\"Ciao but for my mom and dad you may want to say Buon pormeriggio.\" He said. \n\n\"Bueno who?\" she said as her eyes widen.\n\n\"Just say ciao and I will explain it later.\" He smiled shaking his head and looked back up as the door swung open.\n\n\"Ciao fratello.\" The man said enveloping Nik in a big hug. He must be Rafaela, he looked like a younger version of Nik but shorter.\n\n\"Ciao, come siete, grande testa?\" Nik smiled and Rafael just shook his head,\n\n\"I see you still have jokes.\" He said. Finally some English, Dominique thought.\n\n\"Hey, I have to pick on my little brother.\" Rafael's eyes shifted to Dominique.\n\n\"Who is this? Is this a girl you are bringing home?\" \n\n\"This is my friend, Dominique.\"\n\n\"Um, ciao.\" She meekly said and he took her hand.\n\n\"Ciao bella. Why don't you come in? I see why mom can't wait to see you.\" He said making room for the both of them to come in. \n\nDominique took a look around the house. It reminded her of the pictures that Jade said she wanted to decorate the bed and breakfast that James was working on. She would love this house then. Dominique loved the colors that meshed so well together. She suddenly looked up when she heard chatter coming from the kitchen from four different voices.\n\n\"Mamma!\" Nik called and all chattering stopped.\n\nSuddenly a beautiful older woman came through the door with a big smile on her face, \"Oh, mio bambino!\" She said rushing to him and delivering kisses on his cheeks, \"Siete cosi bello ma voi sia troppo scarno.\" \n\n\"Mamma.\" He whined which made Dominique smile harder. \n\nAfter the mother, three more beautiful girls came out of the kitchen; two of them looking just like his mom. Those must be his sisters, she thought. They all came and hugged Nik, firing off in Italian to him. Rafael stood close by Dominique waiting for the moment.\n\n\"I don't know if you ever been around Italian women Dominique, but this is going to be an interesting experience for you. See they pounce on him first because they know about you coming, but wait till he actually acknowledges that you are here.\" Rafael whispered.\n\n\"Should I be afraid?\" she smiled looking up at him.\n\n\"Definitely.\" He smiled back and she just chuckled.\n\n\"Mamma,\" Nik finally got out walking towards Dominique, \"this is Dominique, my friend.\" \n\n\"Ciao.\" Dominique meekly waived.\n\n\"Ciao, I am Giada, but you can call me Ada. Well, aren't you a beautiful girl that somehow got mixed up with my son?\" her voice was as smooth as silk with her accent.\n\n\"How did that happen?\" one of the raven haired girls responded.\n\n\"I guess it was his lucky day.\" Dominique shrugged.\n\n\"Well, I obviously still have to teach my son's some manners for letting you carry your own bag.\" She said noticing Dominique's hand still on her bag.\n\n\"Oh, um, I told him to let me bring it here. I didn't want him to hurt himself carrying my bag and his.\" She breathed.\n\n\"Are you nervous, caro?\" Ada asked.\n\n\"I maybe a little bit.\" She smiled.\n\n\"Oh don't be. We are just a normal family and you can relax as if we were your family.\" If you only knew, Dominique thought with a smile, \"I should also talk to my son about not teaching you some Italian.\" \n\n\"Mamma, there was no time.\" Nik sighed.\n\n\"Maybe when you were cooking for her, you could have taught her.\" One of the sisters teased with shorter hair. \n\nDominique was starting to realize that she like that these women can make him feel so uncomfortable. She looked up at him and saw him shaking his head.\n\n\"Figlio, you are not a rock star, you can take the sunglasses off in the house. Now you and Rafael take the bags into the pool house. Dominique is coming in the kitchen with us.\" She smiled and Dominique saw the smiles on the other three faces. Suddenly she felt like she was being thrown to the wolves.\n\n\"Um, am I going to be grilled?\" Dominique asked.\n\n\"Of course not honey.\" Ada smiled.\n\n\"That means yes.\" Rafael and Nik chimed.\n\n\"Nonsense, come on. You can help us cook for tonight.\" Dominique nodded with a smile.\n\n\"Mamma, where is papa and Gianni?\" Nik asked.\n\n\"Oh, Papa, Gianni, and Armad went to get some wood for tonight; you know it gets cold out here.\"\n\n\"Yep, it gets cold enough for people to snuggle up with each other.\" The short hair sister said laughing and Dominique looked back at Nik with pleading eyes before she disappeared into the kitchen. \n\nThe more Dominique sat with the ladies and talked, the more she was loosening up to them. She was shocked at how much they opened themselves up to her and how sweet they were. Ada reminded her of Aunt Crystal, so warm and nurturing; the way she always wanted her mom to be. His two sisters reminded her of her brothers: Amadora was the oldest and free spirit that talked about constantly changing her hair and Fiorenza was the youngest that constantly talked about her husband Armad and how happy she was now. The other woman with the dark brown hair was Rafael fianc\u00e9e, Mika and she reminded her of Katrina. Her and Rafael grew up together and fell in love back in high school. Now they were preparing for a wedding which she still wasn't sure what date to set. Dominique was actually content helping the ladies prepare dinner and learning more embarrassing stories about Nik and the family.\n\n\"Was Nik really that big when he was younger?\" Dominique asked, helping Mika with vegetables. \n\n\"Oh dear, he was a huge little ball.\" Amadora said, giggling, \"He outweighed all the little kids back in school.\" She laughed with Fiorenza.\n\n\"Now don't pick on my little fudge ball.\" Ada softly said, but instantly quieted the two sisters, \"He was a little big for his age, but when he started working out with Gianni, he started to feel a lot better. Nik always thought his siblings looked better than him and he used to be so sad when he was younger, but now he knows he is handsome.\" She proudly smiled.\n\nWow, Dominique couldn't really imagine Nik with low self esteem, it was actually kind of refreshing to hear that, \"So, Dominique, what do you do?\" Fiorenza asked.\n\n\"I'm a therapist. I have a small practice back home.\"\n\n\"Oh, so maybe you can figure out what's wrong with our brothers.\" Amadora said with a smile.\n\n\"Hey now, my Rafael is good, he can be a little special at times, but I love him all the same.\" Mika said with a smile.\n\n\"How did you and my Nik meet, Dominique?\" Ada asked.\n\n\"Well, he is friends with my friend's husband, Scott.\"\n\n\"Oh Scotty, that's a nice looking young man.\" Amadora said, \"His wife is really pretty too. So, what's going on between you and Nik?\"\n\nDominique was actually prepared for this question, \"Well, we are just friends. He lives next door to me and we have just been helping each other out.\"\n\n\"Oh, that's it?\" Fiorenza asked with a smile. Dominique quickly cleared her throat, \"Yes, that's it. He has been a nice guy and a good friend.\"\n\n\"Well, Alfonso and I started out as good friends and you see where I am now. That's the best type of relationship to have is when you start off as friends and grow into something else because that person knows you already and excepts all your faults. It's a wonderful feeling to have your husband as your best friend.\" Ada said.\n\n\"Yes it is.\" Mika chimed and Dominique just smiled.\n\nHow far did they really expect them to go? They were just friends, true she did enjoy kissing him, but they were nothing but friends. After this, Nik would go back to what he usually do and ignore her. \n\nDominique was just about to say something when Nik, Rafaela, and an older looking version of Nik walked in the door. Wow, he was really good looking for an older man; his hair was covered in gray which only made him look more distinguish. He still had a lean body with muscled arms. That has to be his dad and she could see how they made such beautiful children. \n\n\"Il mio amore, you didn't tell me I would have another beautiful woman in my kitchen.\" He said, kissing Ada on her forehead.\n\n\"Blame your son, she is his friend. Dominique, this is my husband Alfonso.\" \n\nHe walked over to her and grabbed her hand to kiss the back of it, \"Ciao.\" Dominique meekly said with a smile.\n\n\"Come siete, bella signora?\" oh yea he was definitely Nik's dad. \n\nSo, that's who he learned his skills from. Nik came and stood next to Dominique as Alfonso went back over to Ada. \n\n\"Well Nikky, looks like you found a very lovely woman. You know your mother doesn't let just anybody in her kitchen.\" Alfonso said with his heavy accent. \n\n\"I know papa, but Dominique is a friend of mine.\" He said and both of his sisters looked at him with a quizzical stare. \n\n\"Yes friends. Well, I was friends with Ada before. When we were kids back in Italy, I use to terrorize her and tease her mercilessly. Then one day after I took one of her barrettes out of her and pushed her down on the ground. She got up, smacked me across the face, took back her barrette and walked over me as if nothing happened.\" Dominique started laughing as Ada nodded her head.\n\n\"My grandmother just bought me that barrette so I wasn't going to let him take it.\" Ada added.\n\n\"After that we became friends and then she moved away to the states three years later. When I came to the states, I found her at a dance club and I found out that she was the one; when I danced with her.\" \n\n\"That's so sweet.\" Dominique smiled, \"So, what are you going to do now that you are retiring, sir?\"\n\n\"Well, after getting past tomorrow, I plan on helping out around the house and possibly taking some trips with my wife. We are thinking about going back to Italy and visit some family.\" \n\n\"That will be nice.\" Dominique said, \"So, what's the plan for tomorrow?\"\n\n\"Well, the guys decided to hold off the retirement party till Sunday, but we are going to have our anniversary tomorrow night.\" Ada said, \"I just need to confirm some things with the hotel we are having it at and go shopping. Dominique, you should come with us. My friend that owns a dress store has a killer dress that would be perfect for you.\"\n\n\"Really for me? Sure, I would love to come with you.\"\n\n\"Great, I can't wait to go shopping.\" Ama said going over to rinse off the lettuce.\n\n\"Please Ama, something that covers all the important parts up.\" Alfonso said and Ama just pouted as everyone else laughed.\n\n\"So Dominique, you heard about us, what about your family?\" Ada asked.\n\nNow that question she wasn't prepared for. Dominique's mouth dropped and she quickly closed it, trying to think in her head what to say.\n\n\"So dad, where is Gianni?\" Nik interrupted, bringing everyone's attention to him. \n\n\"Well, he said he will be back. He had some work that he had to do. You know Gianni is always busy working.\" Alfonso smiled, shaking his head.\n\nNik meekly smiled thinking in his head if they only knew what he did. The subject of Dominique's family was dropped as they finished preparing dinner. They ate together at the huge table and sat around afterwards as the men started the fireplaces. Dominique went ahead and called her friends to let them know she made it and she was okay. Before they could ask anything else about her and Nik, she went ahead and made up some excuse about having to go. Things were confusing enough without them confusing her further. \n\nShe needed some fresh air and wanted to see more of their house. She marveled at the acres of land they had out in the back. In the center was a small pool house and then behind it was a crystal blue lake. Everything was so plush and green, even when she took a deep inhale, she could smell the various flowers. Wow, his dad picked a great spot when he built this house. A sudden chill came over her and she wrapped her arms around her but felt something being draped over her shoulders. She looked up and saw Nik standing next to her.\n\n\"Thanks.\" She smiled quickly looking away from him.\n\n\"No worries; have you gotten tired of everyone hounding over you?\" he asked with a smile.\n\n\"No, your family is great. Your mom and dad are so cute. I hope that one day I can have something like that.\"\n\n\"I told you, they really inspired me.\" She nodded, \"Well everyone is about to turn in, if you want, you can go ahead and go the pool house.\"\n\n\"Okay, it's so nice out here. How did you not fall in love with being here?\"\n\n\"I did. That little swing over there.\" He pointed to a small swing in front of the lake, \"I built that with my dad. I use to come out here and relax, especially after the days some of the kids would pick on me. It helped out a bit.\"\n\n\"I thought you were going to say that you brought your dates out here.\"\n\n\"Remember, you are the first girl that I brought to my house. Besides, something about sharing that moment with someone else, that's sacred to me.\" Dominique smiled as she looked up at Nik staring at the lake. \n\nShe couldn't explain why, but she wanted to kiss him again. She admits the kissing thing was getting out of hand but at this point she didn't mind or care. She just urgently wanted to feel his lips. Her hand touched his forearm, lightly tugging him to face her. His green eyes stared back into hers as they darkened. It was nice to know that he felt the same way. She was about to kiss him, when the glass door slide open. They both turned at the intruder that had a smile on his hard face.\n\n\"Well, well, Nikky. I had to see it to believe.\" He said.\n\nDominique instantly notices the tension in Nik's arm and she knew who he was, \"Hello Gianni.\" Nik responded. \n\n\"Long time, no see and this must be the lovely lady that I heard about. Dominique right?\" he said taking her hand, \"You brought home a cute one I see.\" He said leering at her and kissing the back of her hand.\n\n\"Hello.\" Dominique smiled, ready to take her hand away.\n\n\"Please to meet you.\" He said staring back at her but didn't let go of her hand.\n\n\"Dominique, can you go to the pool house please?\" Nik said not taking his eyes off Gianni.\n\nThat seemed like a good idea, Dominique thought as she took her hand away and walked over to the pool house, leaving the two giant men alone.\n\n\"Got you a cute little blasian girl, I see.\" Gianni said with a smile.\n\n\"What's going on with you Gianni? Still telling mom and dad you doing honest work?\"\n\n\"Nikky, I told you before, do not judge me on what I do.\" \n\n\"Well I can't help but think it's something you shouldn't be doing in the first place. Do you know how dangerous it is? Then God forbid if something happens to you, what do you expect me to tell mom and dad?\"\n\n\"That's why I'm getting out.\" He said softly, but Nik quickly caught it.\n\nNik closed his mouth finding his voice, \"What?\"\n\n\"I'm getting out. I can't do this anymore.\" He stuffed his hands in his pockets and Nik relaxed a bit, \"I'm 35 years old, never been married, seen and done some things that you never believe and in the end I have nothing to show for it. Hell, Fiorenza is married, Rafaela is getting married, and even you brought home someone. I know it shouldn't be long till Amadora says she is getting married to that artist dude she has been dating. Me? I have nothing.\"\n\n\"When did you tell them you are getting out?\"\n\n\"It was a week ago. I have been setting up some place to go. I need to get away from here, so I won't have the past come back for me.\"\n\n\"Come back home with me. My friends Scott and James are there and it's very relaxing and not only that but I have the police force behind me.\"\n\n\"I don't know man.\"\n\n\"That's where Scott met Katrina and that's where I met Dominique.\" Nik hinted.\n\n\"Oh, so they got women that look like that over there? Well, maybe I should come and check it out.\" He said with a smile and Nik laughed, \"But, I am going to need your help baby brother if I do. Just get me a place and a job.\" \n\n\"You got it.\"\n\n\"Well, I will let you get back to your girl.\" Gianni smiled.\n\n\"She's just my friend.\" Nik reminded, Gianni looked back at him and chuckled, \"Yea, right.\" He said going back into the house.\n\nNik shook his head and headed over to the pool house. His body was worn out and tired so he was ready to hit the sheets. He went into the bedroom and saw Dominique sitting at the edge of the bed with that same satin short robe and her hair down around her face. Damn she looked so cute sitting there waiting on him, at least he can dream she is waiting on him.\n\n\"Are you okay?\" she asked staring back at him.\n\n\"Yea, he told me is getting out.\"\n\n\"That's great.\" She smiled.\n\n\"I know, it just seems a little unreal after so long.\"\n\n\"Um, they didn't mention that this has just one bed.\" She chuckled and he shook his head.\n\n\"Yea,\" he said scratching the back of his head, \"if it makes you feel comfortable I can sleep on the couch out there and you can take the bed.\" He said hoping that she wouldn't take that deal. \n\n\"Nik, we are two adults. I think we can handle sleeping in the same bed together.\" She said before she could stop herself. She has been having a lot of slips of the tongue around him lately.\n\n\"Are you sure?\" he asked.\n\n\"Yea, I'm sure. Like I said we can handle it.\" She smiled standing up from bed and untying her robe. \n\nNik went and grabbed his pajama pants and caught a glimpse of Dominique sliding the robe down her shoulders revealing the satin light blue camisole top with matching shorts. Now, he wasn't sure if he can handle it. He took a deep inhale and went into the bathroom to get all his hormones together. \n\nDominique snuggled in bed bundling the covers around her. If she had known that they were going to be sharing a bed, she would have packed more appropriate night wear. She sighed to herself as he came out of the bathroom baring his hard chiseled chest. Dominique wanted to pull the covers over her head so he wouldn't catch her staring. She turned on her side with the covers pulled up to her neck. She felt the bed dip and some of the covers being pulled away from her. She took a deep inhale feeling his body heat. Okay, you can do this, she tried to calm her body down \n\n\"Dominique, thanks again for coming.\" She heard him say.\n\n\"Oh, no problem. I'm happy I came.\" She quickly said, \"Good night.\" \n\n\"Night.\" She heard him mutter and then the room was cast into darkness. She finally relaxed a little and felt her eye lids get heavy as she fell into slumber.\n\nThe next morning, Dominique felt so warm, but something was poking her bottom. She backed into it, trying to see if she could push it out of the bed, but no matter how much she pushed it didn't budge. She wasn't sure what it was, but it was thick. \n\n\"Dominique, if you don't want something to happen this morning, I suggest you stop backing into me.\" She heard Nik mutter and she instantly sat up.\n\n\"Sorry. Sorry. Sorry. Sorry.\" She repeated looking over at him.\n\n\"It's no problem Dominique, just be a little careful.\" He smiled.\n\nShe ran her fingers through her hair and laid back down, \"Is there a specific time that your family gets up for breakfast? It seems like your family would have breakfast together.\" \n\n\"We do, it's usually around nine, which means, and you have an extra hour to spare.\"\n\n\"Oh no, I have to get up and go jogging or something.\" She said about to get out of bed and Nik quickly pulled her back in.",
        "\"Dominique, you are on vacation, which means you relax and stay in bed for a little bit longer.\"\n\n\"And do what?\"\n\nHe shrugged, settling back against the pillow, \"Well you could always go back to sleep or just lie here.\" \n\nLay in bed? Dominique gazed back at him as if he grew an extra head. She was supposed to lie in bed and not do anything. She never has done that before. She would normally get out of bed as soon as she woke up. She laid down on her back staring up at the ceiling feeling her body tense. Nik opened one eye looking at her, \"You know, you can relax a little.\"\n\nShe sighed out loud trying to get comfortable. Nik pulled her closer to him and that's when she realized that heat she felt was coming from him. The contact lulled her body to slump against his and she turned on her side to face him. \n\n\"See, you didn't turn into a pillar of salt or nothing.\" Nik commented with a small smile.\n\n\"You think you are so funny.\" \n\n\"I know I am. I would give you a good morning kiss, but I know you didn't brush your teeth.\" Her mouth flew open in shock as his smile spread wider, \"Oh really, that's what stopping you.\" She smiled.\n\nShe leaned over and kissed him. His nose wrinkled so she kissed him again and again. Soon the little pecks turned a little lengthier. He pulled her over to him and pressed his lips firmly drinking in her lips. She ran her hand softly up his arm, massaging the back of his neck. He maneuvered her on top of her not breaking the connection. He ran his fingers through her hair as he pushed his tongue deeper in her mouth. She moaned lightly, nibbling on his bottom lip. She was going to drive him up the wall, he thought. He had to have her. He let one hand linger at her waist, slowly pushing the top up. Just like a magnet, her body pulled towards his hand relaxing her completely on top of his.\n\n\"I have to get this off.\" He whispered in between kisses and all she could was nod.\n\nJust before he could lift the shirt up, they both heard someone clearing their throat in the room. Dominique quickly got off of Nik and pulled the covers over her head. Nik looked over and saw Gianni standing there with a smug smile on his face.\n\n\"Mamma, told me to come get you two for breakfast. She started a little early.\" He said.\n\n\"Yea, thanks Gianni.\" Nik said sighing.\n\n\"Friends, huh Nikky?\" he said shaking his head as he left out the room.\n\n\"Are you kidding me? Now they are going to think something is going on.\" Dominique said not even coming out from the covers.\n\n\"Baby, this is my family, they already think something is going on between us.\"\n\n\"Well this is confirming it.\" She said trying to pull the covers around her.\n\n\"Well if you want, we can always just finish what we started and let them know for sure something is going on?\" her head peeked out from under the covers with a scowling look, \"Or not.\" He shrugged.\n\n\"I'm going to take a shower.\" She whined pulling all the covers with her as she treaded to the bathroom and Nik could do nothing but smile watching leave.\n\nAfter they both showered and dressed, they went and joined everyone for breakfast. Gianni must have kept his mouth shut because there weren't any strange glances or anything at the two of them while they were at eating. Good, Dominique thought to herself, she didn't want his mom to think something that wasn't. Well, she wasn't exactly sure what wasn't anymore. Every time she thinks about just feeling his lips, something escalates and then a little something turns into something big. She thought if they would just kiss a little that she would get it out of her system, but her body was always soon begging for more and to take it a bit further. She knew that but she always tried to hide it and deny it. Nik couldn't be that charming, it had to be something else. \n\nShe thought long and hard over what it could possibly be even went through most of the day with the ladies scrutinizing about it. She didn't snap out of it until she heard her name a couple of times. \n\n\"Huh? I'm sorry.\" She quickly said noticing Fiorenza was right in front of her.\n\n\"Are you alright?\" she asked looking generally concerned.\n\n\"I'm sorry, yea I'm alright just thinking about some work stuff.\" She quickly said.\n\n\"Are you sure you are not thinking about our hunky brother?\" Ama hinted.\n\n\"No, why? What do you know?\" Dominique panicked and they both laughed. \n\n\"Nothing dear, we were just teasing. Are you sure you are alright?\" Ama said walking over to her.\n\n\"Yea, I'm fine. I'm sorry I kind of space out sometimes when I'm really thinking about something.\"\n\n\"Well, don't let your mind get too cloudy. We still need you for tonight.\" Mika said.\n\n\"I know. Now where is this dress that is so me?\" she smiled and Ama disappeared with a sly smile on her face. \n\n\"So, can I ask you something about my brother?\" Fiorenza asked.\n\n\"Go ahead.\"\n\n\"How do you feel about him? I mean, do you see yourself being with him?\"\n\n\"Oh wow, wasn't expecting that. Well, I like Nik, he is really sweet and charming.\"\n\n\"I mean a little more than that. Don't give me the normal answers.\" She laughed and Dominique couldn't help but laugh too.\n\n\"Oh, I mean he can be a little arrogant and cocky.\"\n\n\"Well, that is a trait for the men in our family.\" Fiorenza added.\n\n\"Yes it is.\" Mika agreed.\n\n\"But there are times I feel like there is something extra there that no one really see but me. The part beyond the smooth talker and suave guy; I get to see the real Nik. The only part I don't know is how do I tell the difference between Nik and the bullshit?\" \n\n\"It's not that hard. I've seen my brother in action. Most of the women he talks to and pursue, he doesn't really tell them anything about him or the family. He would much rather hear about them. It makes it easy for them not to leave a mark on him.\"\n\n\"But in the end, it's up to you to decide which is which.\" Mika said, \"I know with Rafaela, I had to distinguish that myself. Mind you he wasn't as smooth as Nik or demanding as Gianni, but he was very sweet under that. You just sometimes have to look past it and see the real guy.\"\n\n\"And with my brother you can find that out if you search hard enough. Just like my dad said, he found out that mom was the right one after one dance, it was pretty much the same for all of us.\" Ama said coming back with something red in her hand, \"You will meet mine tonight. His name is Alfred, he's an artist and very brilliant.\" \n\nShe smiled, \"This is for you.\"\n\nShe held it out for Dominique, \"You don't even know what size I wear.\" \n\n\"Well, let's just say I have an eye for it.\" She smiled and Dominique took the dress heading to the dressing room, \"And how about we stop by my beauty salon and if you want I can do something to your hair?\" \n\n\"Oh sure, if you want to try and tame it, I'll let you.\" Dominique shrugged.\n\nAs she took off her clothes, Dominique heard Ada's voice joining them. She went to a little jewelry store to get something for Alfonso and from the excitement in her voice, he was going to love it. Dominique smiled to herself as she shimmed into the dress letting it flow down to her knees. The dress zipped up the side and Dominique took a long look in the mirror. It took her awhile to know that it was actually her in the dress. It hugged her perfectly showing a hint of cleavage with the scoop neck. \n\n\"Come on Dominique, let's see it.\" She heard Ama on the other side.\n\nDominique took a deep breath and opened the door. She looked between the women and saw smiles spread over their faces. Okay, so she didn't look hideous, she thought from the look on their faces. \n\n\"So, you like it?\" she finally said a little uneasy about their prolong silence.\n\n\"Good job Amadora; that is completely her.\" Ada said nodding, \"Cara, you look so beautiful.\"\n\n\"Thank you, so I don't look completely huge in it.\"\n\n\"Of course not. I think you should get it and wear it tonight.\"\n\nDominique had the feeling that arguing with these four women would be a lost cause. She went ahead and bought the dress without any argument and went to Ama's salon. As Ama started working on Dominique's hair, the women started talking more. Normally, she would be nervous and worried about being left alone with people she didn't really know, but she felt completely at ease and like herself with them. \n\nThey finished out the whole day together and got everything together for tonight. She didn't bother Nik at all, thinking that he was with his father and brothers. That night she got ready at Ama's house with Fiorenza and Mika. Ada was going to make an entrance with Alfonso. As she put on the dress again, she looked over at how the whole outfit was coming together. She had picked up a pair of black stilettos that had little rhinestones that wrapped around her ankle. Ama had straightened her hair and cut enough to leave it just at the bottom of her shoulder blade. She pulled it up in a bun with a couple of tendrils hanging around her face. Yea, she definitely had to get a picture of this for her friends, she thought with a smile. \n\n\"Well, I should say you look exceptionally sexy tonight. I think my brother would love it when he sees it.\" Fiorenza said as Dominique carefully sat down the cake.\n\n\"Oh well, I do like the dress. I probably won't have another occasion to wear this.\"\n\n\"Oh sure you will. Tell Nik to take you out one night.\" She smiled.\n\nDominique just laughed, \"Maybe.\"\n\n\"Well, you can tell him that now, because here they come with the food.\" She said glancing towards the front.\n\nEven thought he was surrounded by his brothers her eyes zeroed in on him swaggering in. He was in an all black suit with a red button down shirt. His eyes were covered by dark red tinted sunglasses. All the women's heads were turning once they saw them, but Nik came to a screeching halt once he saw Dominique. She took a deep breath and hated those glasses. She couldn't gauge his reaction and that made her stomach cringe. Her breath caught in her throat and she felt her palm sweating. Do something, she sighed. He finally moved his feet closing the gap between them two. \n\n\"I was thinking something was wrong with you.\" She smiled as he sat down some of the bags. \n\n\"I'm sorry; I got blinded by you for a second.\" He said standing to full height staring down at Dominique.\n\n\"Whatever Nik, you are so full of it.\" She said shaking her head, but Nik really couldn't take his eyes off her. \n\nThe way the dress formed against her body almost like it was second skin and it made his imagination run wild with what she had on under her tight dress. He was ready to skip out on this party and go back to the pool house to finish what started this morning, but he knew he couldn't successfully do that and not have his family question their relationship again. He went through that earlier with his father and his brothers. How could he give them an answer when there were times that he wasn't sure himself? He knew they were friends, but something else was brewing between them and in a way it scared him. For now, he was pushing those thoughts out of head to focus on her bending over again and again to help out his sister. His body shivered as he went to divert his attention to other matters.\n\n\"Your girl is looking mighty nice tonight, Nikky.\" Gianni said standing next to him.\n\n\"I haven't really notice.\" He said trying to play it cool.\n\n\"Don't try to fool me; you forget who saw you two this morning? I can't say that I blame you. I figured you would have hit that already.\"\n\n\"Do you have to be so crude all the time?\" Nik said shaking his head.\n\nGianni's head snapped to Nik, \"Oh you really like her?\" \n\nNik slowly turned his head to see his brother's smiling face, \"I told you she is a friend and that's it.\"\n\nNik didn't expect Gianni laughter, \"Yea little Nikky, tell that to someone that didn't teach you the techniques.\" Gianni said turning towards the entrance as some of their parent's friends came in. \n\nThe party was going really well so far and it made Nik smile to see his parents having so much fun and being so loving. Every now and then he glanced over at Dominique who was doing her thing socializing with some of the people and family members. He was actually getting sick of people coming up to him and saying that she was a good girl. He already knew that, but he didn't need to hear that from everyone.\n\nHe watched some of the older men dance with her and he couldn't help but stare at the smile on her face. This was the most he ever seen her smile like that and feel at ease. It made him also wonder, what happened in her life that made her try to be such a hard ass. \n\n\"My bambino, you should dance with your girl.\" His mother said coming around him.\n\n\"Mom, she is having fun dancing with Uncle Frederico.\" Nik countered.\n\n\"I know but you know how your uncle is around young women. Go take her away.\" She smiled, nudging him lightly.\n\n\"Don't try to recreate the moment you and dad had. We are just friends.\" Nik reiterated.\n\n\"Well as a friend go and dance with the girl.\" His dad said slapping his shoulder. \n\nNik brushed himself off and headed to her. Uncle Frederico was probably telling Dominique one of those lame jokes that he always tells everyone and she was honestly laughing at him. \n\n\"Excuse me Uncle, you mind if I take lovely lady off your hands.\" Nik said taking off his sunglasses.\n\n\"Aw, always had to be a spoiled sport, just like your daddy.\" He grimaced, \"Save another dance for me sweetheart.\" He directed to her.\n\n\"Okay.\" She laughed as he left them alone, \"Well you have a very charming family.\" She finally said.\n\n\"Yea, I think I will keep them too. So, you want to dance with me?\"\n\n\"I guess since you took away my dancing partner.\"\n\nAs he wrapped his arms around her waist, a familiar song started blasting through the speakers. Overjoyed, that's the same song his dad use to play every Saturday when he helped him in the garage as a kid. Nik held Dominique tight as she wrapped her arms around his neck, staring deep into him. He noticed that he eyes slightly sparkle looking at him. Her tongue slowly traveled across her lips as she tightens her hold. God, she felt so good pressed against him. He could feel his cock stirring as he held on to her waist. Dominique's hand slowly traveled down his neck to his shoulder. She rubbed his shoulder with her lips parted. She tuned out the entire outside noise and the words to the song and just moved against him. What she wouldn't give to kiss him right now? She didn't care who was around just feel that connect one more time. She quickly blinked the feeling away when she heard the applause of others. They both came crashing down as everyone smiled at the DJ. Nik adjusted his jackets trying to straighten his head out. He looked over at Dominique as she looked everywhere but him. He was about to open her mouth when Ama stepped in between them, \"Dominique, you mind if I steal my brother away for picture?\"\n\n\"Um, sure. I think I am going outside for a breather.\" She said without waiting for a confirmation. \n\nNik watched her intently as they all poised around and took a picture. She walked over to the door, ready to leave. She didn't need to be outside by herself. He quickly took the picture and excuse himself to follow her outside. He pushed past everyone determined to check on her and see what was going through her mind. \n\nHe finally made it outside and found her leaning against the building, the phone attached to her ear. She didn't even look his way as she continued talking to someone. When he heard her say, 'I don't know, I'm just confused' that's when he made his way to her. When her eyes flicked open, she saw him standing there with his half cocky smile.\n\n\"You know you shouldn't be out here alone.\" He said in a husky whisper and took the phone away from her ear.\n\nHe closed the phone, not taking his eyes off her. He closed the gap between them and leaned down towards her. Dominique closed her eyes, hoping to feel his lips against hers. Yes, she needed it. She could feel his breath against her full lips, knowing that he was close. \n\n\"How about we leave?\" he whispered and her eyes flickered open again staring at him so close.\n\nHis green eyes were darken as his eyes diverted from hers every once in awhile to settle on the top of her breast. All she could do while looking at those sultry eyes was nod her head in response. He grabbed her hand and led her to his truck her breath stuck in her throat the entire walk there. He quickly helped her in the truck and got in on his side driving away. Dominique felt like she was forgetting how to breathe at this point. She knew what was coming if they would be left alone and it scared her but at the same time excited her greatly. Yea she attempted at one point to seduce him with her thinking that sex was just sex, but now it's different. When they were dancing she realized she was starting to feel things she shouldn't towards him and she didn't know what to do about these feelings. She was so engrossed in her own thoughts; she didn't realize that the truck stopped. She looked up and saw that they were at the house. She was about to open her mouth and say something but she felt him grab the back of her neck and pulled her towards him pushing his lips against hers. She sighed against his lips, feeling warmth spread quickly through her body almost scorching Nik. He angled her head to probe deeper in her mouth so she could feel every inch of his long tongue. He tasted so good, she thought to herself as she laid her hand on his chest and she swore she could feel his heart pounding against his chest. \n\nNik never had a woman effect him the way Dominique has. He wanted her like he wanted his next breath and he was intent on not stopping until he had her writhing under him. He kissed her again before laying his forehead against hers trying to catch his breath. \n\nAfter a brief moment, he broke away from her and got out of the truck. She took a breather but followed him to the pool house. She stood by the door as he talked on the phone to Gianni telling him something about Dominique wasn't feeling too well and that they left. \n\nDominique stood behind him, running his hands softly up his arms feeling his biceps flex under her touch. She reached around in front of him and started unbuttoning his jacket. \n\nAfter unbuttoning his jacket, she went for his shirt and he felt the tips of her finger tips licking his burning flesh. He was still on the phone with Gianni half paying attention to what he was saying and focusing on Dominique. She felt bold as his body slightly tremble under her touch and licked her lips. Her hands slowly traveled down to the top of his pants and his breath quickened. She pulled the zipper to his pants down and unbuttoned them. She had one hand linger around his crotch, feeling the tent forming. Oh my, she thought with a smile. \n\n\"Yea, I know what they are going to say, but you know she wasn't feeling well.\" Nik breathed and Dominique smiled to herself. \n\nShe backed away from him, taking the pins out of her hair and walked around him, unzipping her dress as she headed to the bedroom. She looked back at him with a coy smile holding the dress up to her before she disappeared in the room.\n\n\"Gianni, I'll call you back.\" Nik quickly said, closing his phone, and throwing it on the couch. \n\nShe waited until he walked into the bedroom and peeled the dress down her body. He watched her curvy frame slowly appearing in front of him inch by inch. He took the jacket and shirt off as he closed the space between them, pressing his lips firmly to hers. He was officially done with the teasing. She moaned into his mouth, nibbling on his bottom lip as he maneuvered over to the bed. She lightly pushed him down and stood between his legs. She took a deep breath feeling that nagging voice in the back of her head wondering if he liked what she was doing. She silenced the voice by reaching behind her to unsnap her bra. He reached up to pull the infernal contraption away from her body revealing her gorgeous caramel globes to him. His mouth watered at the site of her puckered nipples, begging for his attention. He pulled her closer to him and his tongue raked across her nipple, tasting her. She grabbed on to his shoulders as he did it again, this time letting his free hand pinch the other nipple. She arched her back to his touch craving more. She pressed her thighs together, feeling the moisture in her thong and he could smell her. It was a sweet smell like a chocolate cake fresh out the oven. ",
        "Dominique shut her eyes as she felt his hot mouth move to her other nipple, giving it the same attention. Her nails dug into his shoulders but he didn't feel the pain, just ready to give Dominique the pleasure and release they both deserved. She felt his one hand against the front of her thong as he let one finger trace over her V, coaxing her to open her legs wider. Her breath quickened but she complied with his request and as she prepared herself for full contact of his fingers. \n\n\"You are so wet.\" He whispered as she felt his fingers stroking her and her nails dug deeper into his shoulder that she was sure she was going to draw blood.\n\nHe didn't seem to mind, Nik was too engrossed with Dominique. He felt himself get harder staring with her head thrown back and her mouth parted as the room filled with her little mewling sounds. Her knees buckle a bit as she felt his fingers push inside her moist opening. She bit down on her bottom lip as he pumped his fingers inside of her feeling how tight she was just around those two fingers. \n\n\"Nik.\" She moaned feeling her knees give out. \n\nHe pulled her over to him and had her straddle his lap, \"I got you babe.\" \n\nHe started sucking one of his fingers that were inside of her and she took the other finger in her mouth tasting herself along with him. Nik's eyebrow raised as a sly smile appeared on his face. He lay back down on the bed with Dominique, kissing her full magnetic lips again. Much to Dominique's surprise he kept pulling her up till their lips parted. Once she realized what he was doing, she moved the rest of the way till she was straddling his face. Nik took a deep inhale as he moved her thong to the side. His thick tongue slicked her lips making her gasp out loud. He held her firmly against his mouth as he dove into her, his green eyes staring back into hers holding so much promise. Dominique couldn't believe what he was doing, she never had someone do oral to her and her she was sitting on his face as his tongue worked wonders inside of her. She found her hips moving against his tongue as he probed deeper inside her.\n\n\"Oh right there, Nik.\" She moaned arching her back.\n\nHe didn't want her to get use to him being there just yet. He moved to flicking his tongue at her harden nub and she almost leaped off him feeling the light suction he gave. Her body felt like it was all over the place, like how would scribble all over the paper when she was a kid. She ran her fingers through her hair as she rode his tongue harder losing herself in the pleasure his tongue was creating. He loosened his grip on her thighs and maneuvered one of his fingers inside of her while still sucking on her clit. Dominique's eyes widen as she looked down at his smiling eyes feeling that she was on the brink. She realized she didn't want to cum like this first. She needed Nik inside of her.\n\nShe maneuvered from his sensual tongue slowly sliding down his tone body. She moved to the floor and pushed Nik's pants down his thighs. Her eyes immediately diverted to his cock standing out long and hard as steel. She was in awed for a moment; because she never dealt with anyone so huge, but she would of course never tell him that. She wrapped her small hands around it and heard him take in a sudden breath as she pumped her hand up and down his length. Her mouth started to water as she felt herself pulsing in need. \n\n\"Dominique, get up here.\" Nik said not hiding the urgency in his voice. \n\nShe smiled as she climbed back into bed and lay down next to him. Nik quickly moved on top of her and reached for a condom. At least he plays it safe, she thought with a smile as she watched him slowly roll it on his cock. She licked her sudden dry mouth and looked back up at him as he positioned himself in between her legs. She pulled him down by his face, to feel his lips again. She tasted so good; Nik thought to himself and new that she was going to feel even better. He slowly eased himself into and felt her bite down on his bottom lip. Normally Nik wasn't big on pain, but with Dominique, it was different. He opened his eyes and saw her wide eyes staring back at him as he pushed more inside of her. She clamped down on him inch by inch that he had to get under control before he had a too soon accident. \n\nThe moment he was under control, he moved his hips slowly pumping inside of her tightness. Dominique wrapped her legs around him; pushing him deeper as she felt him stretch her beyond what she was use to. Her mouth fell open but no sound was coming out. Yet he could see the pleasure etched on her face. \n\n\"Oh damn Dominique, I knew you would feel this good.\" He whispered and that's when he heard her throaty moan fill the room.\n\nShe gritted her teeth together as she held on to him relentlessly pumping his hips inside of her. She never prepared herself for this intensity, this raw pleasure that was building in her gut and Nik needed to be in deeper. He positioned her legs in the crook of his arms and pistoned his hips inside of her. Dominique couldn't do anything but take it.\n\n\"Oh fuck Nik. Oh yes that feels good.\" She finally said.\n\n\"You like me being inside of you, huh?\" she moaned in his response, \"I want you to take it all.\"\n\n\"Oh yes give it to me, Nik!\" she shouted as she felt her toes curling.\n\nHe wanted it to last a little longer but he could feel his balls tightening and knew that he was cumming soon. This was something that didn't happen very often with him. He kept his eyes glued to Dominique's as she tugged on his hair. Damn she was a wild one, he thought as he felt her body began to shake.\n\nDominique screamed out feeling her whole body convulse. Nik felt her clamp down on him tighter and couldn't last any longer. He let out an animalistic growl as he came. He stayed still for a moment as their bodies shutter. \n\nAfter what felt like forever, Nik finally pulled away from her and lied down next to her. Dominique's eyes were still closed and the only noise in the room was their heavy breathing. She turned to him and wrapped her arms around him snuggling against his chest. Nik smiled to himself as he returned the embrace and for some reason he felt like his heart was beating in double time. Okay, he has had plenty of after sex reactions that he was use to but that wasn't one of them.\n\n\"So is that what I have been missing?\" she finally whispered and Nik couldn't help but chuckle.\n\n\"Something like that. Damn Dominique, I didn't know you had it in you like that.\"\n\n\"I guess I can be full of surprises, but can I ask you a question?\"\n\n\"Anything baby.\"\n\nShe looked up at him with this amazing brightness to her face and a big smile, \"Can we do it again?\""
    ],
    "authorname": "Myanlass",
    "tags": [],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/let-me-help-you-good-doctor-ch-04"
}