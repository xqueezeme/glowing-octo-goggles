{
    "title": "Forever Again Ch. 05",
    "pages": [
        "Author's Note: This story depicts graphic lesbian sex and mind control. If these topics do not interest you or are prohibited in your area please back out now.\n\nThis is the fifth installment of a long story. Those that have read my other stories will know that I tend to have some story behind the sex so if you're looking for a quickie this story may not be to you liking. \n\nFor those of you that haven't backed out, I hope you enjoy my words.\n\n~CD\n\n*****\n\nOver the next few weeks Vala discovered that despite what her new title, Assistant to the Steward of the Baroness von Wolffe, may sound like, she was in reality little more than an errand runner for the Steward. She spent much of her day going about the keep getting reports from the various areas within the massive structure. Information about how much mutton was left in the larder from the head cook, how many bars of iron were needed by the blacksmith, how many wine barrels the cooper had prepared and so on and so on. By the end of the first week Vala figured she must have walked fifty leagues at least.\n\nShe found however that her new position did elevate her quite a bit above most of the rest of the staff of the keep. There were no official rankings among the staff, but it was easy to see after just a few days at the keep had a very complex social hierarchy. The Baroness, whom Vala still had yet to meet or even see, was at the very top with the Steward directly under her. In fact, in so far as Vala could see, for the day to day running of the keep the Steward appeared to make all of the decisions, only getting direction from the Baroness on more far reaching matters.\n\nUnder the Steward was the head of the guards, a big, older man named Captain Holt. He was gruff and stern with his soldiers but had always been courteous and respectful to Vala on the occasions when she had to speak with him.\n\nAfter the Captain, or perhaps right beside him Vala suspected but wasn't sure, was Miss Bernadette as head of all the staff. Under her were all of the respective heads of the different trades of the keep. The head blacksmith, the head cooper, the head cook and so forth. Finally under them was the remainder of the keep's vast staff with another whole social order that was too vast and complicated to grasp at a glance.\n\nAt first Vala thought of herself as merely an errand runner for the Steward but as some time passed she began to realize that this assumption was not correct. Rather she found to her surprise that she appeared to fall roughly into a place directly under Miss Bernadette, at a level equal to or perhaps just above the heads of trades. This gained her considerable respect among the rest of the staff despite her humble origins. At first Vala wondered at this but as the days passed it became apparent to her that most of the staff just assumed that she had always been of that station and had come to the keep from just such a position somewhere else. They didn't know, because no one had told them that she was just a common farm girl. Perhaps if they knew of her origins they wouldn't regard her as they did. \n\nAlso to her surprised delight she also found that she now rated her own private chambers and a new wardrobe.\n\nThe private chambers were very small and simple when compared to the Stewards chambers or even to most of the guest chambers but to Vala they were the grandest place she had ever imagined herself sleeping. The outer room was a small sitting area with a small sofa, two stuffed chairs, a table, a desk and a fireplace. A small, narrow window looked out onto the courtyard far below. The adjoining room was a small bedroom with a smaller fireplace, a bed and another, smaller desk. The bed was small by the standards of the rest of the keep but it was still larger than the rough straw bed that up until a few weeks ago she had shared with her two sisters.\n\nUnaccustomed to wearing anything other than rough farm cloths and at most her Sunday dress, the new wardrobe embarrassed Vala at first. Like the room, it was very simple compared to the Steward's or even Miss Bernadette's clothes, but the long, heavy velvet and wool dresses would have been considered quite grand back in her village. Vala asked if wearing the new clothes was really necessary and Steward assured her that it was absolutely imperative for her to look her station.\n\nThe next day when Vala first walked in wearing her new wardrobe it was immediately apparent to the Steward just how uncomfortable she was with the new clothes. Taking pity on Vala, the Steward sat and talked with her for a few minutes. \"You are not a common chambermaid Vala. You're no longer even a commoner and you mustn't think of yourself like that anymore. You have taken your first steps to greater things. It is a chance that very, very few ever get. You are a very uncommon girl Vala. Bernadette saw that almost immediately and I can easily see it now was well. You should be proud of that. Wear those new clothes as a matter of honor and pride and for heaven's sake don't be ashamed.\"\n\nGradually over the proceeding days Vala had indeed become accustomed to the new clothes and the deference that the other staff now showed to her.\n\nThere were other benefits of her new station that took longer for Vala to adjust to.\n\nVala had met the chambermaid the morning after being moved to her new chambers. Vala was busy making her bed after having spent a wondrous night sleeping in the decadently soft feather bed. There had been a quiet knock at the door and when Val had said to enter, a petite young woman with shoulder length, curly red hair tied back with a white kerchief walked in wearing the uniform of a chambermaid. Upon seeing what Vala was doing her eyes opened wide with horror.\n\n\"Oh, please milady, no! Let me do that.\" She practically yanked the bed sheets out of Vala's hands and escorted her out of the room.\n\nVala tried to protest saying that she would help her but the young woman only looked even more scandalized.\n\nVala gave up and went off to her duties for the day. At the end of the day she found the young woman again in her chambers, this time she was building up the fires to fend off the chill of the autumn night.\n\n\"Good evening milady.\" She had said upon turning and seeing Vala enter the room. \"Is here anything I can do for you?\"\n\nVala eyed the young woman, taking a closer look than she had in the morning when she had been shooed out of the room. She was a few hands shorter than Vala and gracefully slender. Big green eyes over a pert nose which was covered with freckles that spilled over onto her cheeks. Her curly bright red hair was pulled back in a single thick ponytail. The white kerchief tied over the top of her head probably helped to keep the dust from her hair while cleaning.\n\n\"What is your name?\" Vala asked.\n\n\"Branwen, milady.\" Said the girl with a small curtsey.\n\n\"And how long have you been here Branwen?\"\n\n\"All my life milady. I was born here in the keep and have served the Baroness since I was nine years old.\" She said and again made the same small curtsey.\n\n\"Branwen, I'm no Lady. Please stop calling me that and don't curtsy anymore.\"\n\nThe girl looked up and seemed confused. \"But you work for the Steward.\" She paused as if nervous of what to say. After a moment she said cautiously, \"And, and ... how... what... what am I to call you milady?\"\n\nVala gave her a small smile. \"Well, I was...\" Vala paused, not sure if she really wanted to reveal her past to anyone. After a second of hesitation she continued, \"Er...well, I sort of came into this position by chance. And my name is Vala. You can try calling me that.\"\n\nBranwen looked uncomfortable, \"But if the Lady Bernadette or anyone else ever heard me use your first name I'd be...\" she paused and looked at the door to the hall, \"...they wouldn't like it much.\"\n\n\"Well, then if anybody else is about then you can use the title, but in here,\" she waver her hand idly indicating the chambers, \"Please, call me Vala.\"\n\n\"As you wish m... Vala.\"\n\nVala sat heavily on the couch and motioned for Branwen to sit on the chair. After a few moments of hesitation the girl finally sat hesitantly on the edge.\n\n\"So you are responsible to taking care of my room obviously? I assume you're not my personal maid.\" She said with a wry smirk. \n\n\"No milady. I take care of all the rooms on this floor in this wing. However, most are the smaller guest rooms and are often unoccupied.\" \n\nVala nodded, \"So you were born here? Does that mean you parents serve the Baroness as well?\"\n\n\"They did but they were both taken by sickness many years ago. Now only my sister and I serve the Baroness.\"\n\n\"You have a sister?\" Vala asked.\n\n\"Yes, my sister's name is Greta.\" Branwen nodded a little nervously. She was apparently not comfortable sitting down in Vala's chambers, probably afraid that someone might walk in and think her loafing. She stood again and smoothed down her dress as she asked, \"So, is there anything you require?\"\n\n\"No, I don't think so. I really just need to get some sleep. It has been a long day and tomorrow will be just as long.\" Vala stood and headed for her bedchambers. She started to say something over her shoulder but was surprised to see Branwen following her. She paused, \"Is there something you still need to prepare in the bedroom?\"\n\nBranwen looked shocked, \"No Milady. Of course everything is prepared for you.\"\n\n\"Then why are you following me in?\" Vala asked.\n\nGesturing with her hand Branwen said, \"Do you not require help getting you dress off? And I must hang it for you so it will not get spoiled.\" She nodded at the room, \"Come milady, let us get you in your bed so you can rest.\"\n\nVala decided that maybe she could use some help getting the unfamiliar dress off. Last night she had to remove it by herself and she had found the many small buttons to be very difficult to manage. She also decided to let Branwen's relapsing into calling her 'Lady' go for now.\n\nThe bedroom was pleasantly warm and Vala paused in front of the fire for a moment savoring the rich smell of the burning oak logs. It reminded her of home and her thoughts were drifting back there when she felt hands on her back. She jumped and the unexpected contact.\n\n\"I'm sorry milady. Did I hurt you?\" Branwen asked.\n\n\"No, no... sorry. I was just... it was nothing. My mind was elsewhere.\" Vala said, a little embarrassed at herself. \"Please, continue.\" \n\nAs Branwen's fingers began working at the many small buttons down the back of the gown, Vala suddenly became acutely aware that she was alone with a pretty young woman and that she was being undressed by her. With a suddenness that startled Vala, she felt a surge of excitement that made her shiver.\n\n\"Are you cold milady? Should I build up the fire?\"\n\nVala shook her head, \"No, no I'll be fine. I just need to... to, ah... get in to... to bed.\" She stammered, trying to clear her thoughts.\n\nAgain the fingers resumed their work and Vala had to suppress another shiver of excitement. As she tried to reign in her reactions she wondered apprehensively at this turn of events. It had been many days since Rae had gone and in that time she hadn't experienced any of the sapphic longings or even had one of her dreams. She wondered with apprehension and yearning if this now meant the dreams would be back as well.\n\nWhen all the buttons were unfastened Vala felt Branwen's hands come up her sides and start to pull the dress down and away from her breasts. She almost groaned with the thought of what the woman's small hands would feel like cupping the sensitive orbs. She shivered again as the heavy velvet dress slid down the length of her body, over her hips and down her legs leaving her standing only in her small clothes. She couldn't control a small sigh as she felt Branwen's wondrous red hair brush her back as the girl bent to pick the dress off the floor.\n\nUnaware of Vala's condition, Branwen went to the wardrobe and hung the dress up for the night then pulled down the covers on the bed. Turning to Vala she asked, \"Do you require anything else milady?\"\n\nComing to the bedside Vala looked directly into Branwens eyes. The wide green eyes glistened red in the firelight and Vala felt herself starring deep into them. \"Yes...\" She said using that same hypnotic tone that she had used so many times now. Raising her hand and gently brushing the side of Branwen's face she said, \"Yes, I do need something...\"\n\nBranwen's eyes glazed. She looked suddenly lost and helpless, gazing dazedly into Vala's eyes she whispered, \"Yes milady...\"\n\nBelatedly, Vala realized that in addition to her voice, she was now using her gaze to enthrall this young woman. How had she known to do that? Once again she wondered about her newfound powers, what they really were and how it was that she knew how to use them without even thinking about it. The thought was fleeting however as her attention was drawn almost immediately back to the young woman before her. \n\nVala cupped Branwen's cheek with her hand and drew the unresisting girl closer. She caught a whiff of the girl's scent and was instantly enthralled by it. Dust and ash from cleaning, lye from soap, oak from the firewood and something else that Vala couldn't place, a vaguely flowery, almost sweet smell that was under all the others. All common smells but somehow they instantly came together in Vala's mind as uniquely representing this young woman. Branwen's scent. Vala drew in a breath through her nose, savoring and the heat in her core flared. \n\nWithout really thinking, Vala started lowering her face to Branwen's, moving in, her lips parting slightly, eyes sliding closed... \n\nA sharp pop echoed from the fireplace as a log split, sending a shower of sparks spiraling up the chimney. The sound startled Vala back to reality and she yanked her hand away from the disorientated chambermaid.\n\nWhat in Hell am I doing? Vala though furiously at herself. Haven't I already learned enough lessons about the consequence of doing this? Do I want to be kicked out of here as well?\n\n\"Um, ah... yes, that will be all Branwen. Good night then. Please close the door for me on the way out.\" Vala stammered as she climbed into her bed, pulling the covers over her and looking resolutely away from the pretty young maid.\n\n\"Ah... yes... yes, of course milady.\" Stammered Branwen as the girl struggled to collect her bearings. She sounded confused and more than a little flustered. Vala had seen in the instant before she turned away that the girls cheeks were flushed a bright red. \"Good night milady.\" Branwen said as she pulled the door closed.\n\nAfter the latch fell with a metallic clack Vala let out a strangled gasp and shuddered with suppressed need. One hand slipped down her front and slid under her petticoats to find her needy sex. It was already dripping wet with her arousal. At the merest touch of her finger she groaned. It was both delightful and a little frightening just how quickly she could become aroused now. \n\nWithin moments she was panting heavily as her fingers slid in and out in a steady rhythm. She now hoped the dreams would be back and she couldn't wait for them. Perhaps she thought, tonight it will be the young chambermaid who would feed her wanton dreams. As her climax approached she imagined how easy it would be to take the pretty red headed girl to her bed and share with her all the pleasures of the flesh that she had learned in her dreams and practiced in the last few weeks.\n\nImagining the look of pure bliss on the freckled face was finally too much for Vala and with a muffled cry she fell into ecstasy.\n\n* * *\n\nThe next days and weeks were a delicious agony for Vala. After that first meeting with Branwen, Vala made an oath to herself that she would not pursue the beautiful young woman in any fashion. She was fortunate enough to have found a place here at the keep and by some stroke of luck she had even been given a position of some importance rather than just emptying chamber pots all day. However tempting the young chambermaid's charms were, Vala's experiences with Else and Inga had shown her that uncontrolled passion was the quick way to ruin.\n\nBut as the days rolled past and Vala saw the beautiful young woman more and more she found it increasingly difficult to keep her oath. As Branwen got to know Vala more she became increasingly comfortable around her and even started calling her by name without having to be reminded first.\n\nWith each passing day Vala found herself more and more attracted to the young woman. Adding to her attraction was the memories of what the two of them did in her dreams. Vala awoke almost every morning covered with sweat and smelling strongly of her own sex. Indeed, several mornings she even awoke with the afterglow of a powerful climax still surging through her veins.\n\nVala wondered with a twisted little smile just what Branwen thought of it when she made up her bed in the morning.\n\n\"Vala?\" Vala? Are you listening to me?\" The Steward's voice intruded into Vala's memories.\n\n\"What?\" Vala's snapped her attention back to the present. \"Oh, sorry Mam'. I was just... erm, sorry. I didn't sleep very well last night. I guess I'm just a little sleepy this morning.\"\n\n\"Hrm.\" Said the Steward with a little shake of her head. \"Yes, well, you had best wake up now. I need you to go down to the laundress and take care of this for me.\" She handed Vala a slip of parchment.\n\nVala looked at it and slowly read the wording. After a few moments she looked up and said. \"Do you want me to come back with the totals?\"\n\n\"No, I want you to take care of it all.\" She eyed Vala for a moment then continued. \"If you ever want to be more than a just an errand girl then you had better learn to make decisions. Now go take care of it.\"\n\n\"Yes milady.\" Vala gave a curtsy and left the room.\n\nHer head reeled a little as she headed down the long corridor to the servants stairwell. So far she had only run messages and gotten information for the Steward. This was the first time that she was actually being allowed to make a real decision. In truth it wasn't really a big decision. It was only some preparation for the coming festival dinner that was planned for next week, but still...\n\nNever having made this kind or preparation before Vala decided her first stop would be Miss Bernadette. With her help she found what materials were on hand and what would be needed. Next she visited the laundresses to see what would need to be prepared and then a trip back to Miss Bernadette to see about getting the staff to make the preparations. Finally another trip back to the laundress to finalize everything. By the time everything was all done it was well past the mid-day meal and Vala felt as if she had walked to the moon and back.\n\nHer feet were aching as she walked into the kitchen to see about getting something to eat since she hadn't had a meal all day. She walked into the bustling kitchen and was pleased, if a little surprised to see Branwen stirring one of the huge iron pots suspended over a fire pit at the far end of the room.\n\nMaking her way through the crowd of cooks and assistants she stole up behind her and said, \"Hello.\"\n\nBranwen turned and almost dropped the spoon in surprise. \"Oh, I'm sorry milady. I didn't see you come over.\" She curtsied again. \"Is there anything I can get for you?\" She asked while whipping her hand on a towel tucked into her apron. \n\nVala studied her for a moment. She wasn't dressed in her usual chambermaid's uniform at the moment but rather dressed as a cook. The white uniform and apron were stained with a hundred different colored smudges and smears and sweat beaded her brow from working in the hot kitchen. Aside from the uniform change, there was also something strange in the way the girl was acting but Vala couldn't seem to put a finger on it. She shook her head slowly, \"No, it's quite alright. I was just looking for a bite to eat. I missed my mid-day meal and was a bit hungry.\"",
        "\"Oh, of course milady. Let me get you some soup. It should be just about ready. And I have some fresh bread and cheese as well. Would that be alright?\"\n\nAgain, Vala felt as if something was wrong but she nodded. \"Yes, that would be lovely. Thank you.\"\n\nBranwen went off quickly and in a minute or two was back with a bowl. Placing it on a small table off to the side of the main kitchen. She asked, \"Would you like to eat here or should I bring it somewhere for you?\"\n\n\"No, right here will be fine, thank you Branwen.\"\n\nThe woman looked at her blankly for a moment then shook her head slightly, \"Branwen? No, I'm sorry milady, but my name is Greta.\"\n\nVala stared at her for a moment then it fell into place. \"You're Branwen's sister.\" It was a statement, not a question.\n\n\"Yes, Branwen is my sister.\" Greta nodded seemingly a little confused.\n\n\"But you look exactly alike.\" Vala said now studying the redhaired girl more closely.\n\n\"Yes, milady, we're twins.\"\n\n* * *\n\nThe darkness enveloped Vala in its warm, comforting embrace and she reveled in it, knowing what was to come. \"Mistress?\" She heard herself call out questioningly.\n\n\"Yes, my Dear. I am here for you again.\" The sultry voice purred through Vala's very being. A single, now familiar musical chord sounded in the back of Vala's mind, as if her very soul were singing. \n\n\"I haven't seen you in so long Mistress.\" Vala said into the darkness. Though the dreams of lust had indeed returned after that first meeting with Branwen, Vala had yet to be revisited by her Mistress. She felt a deep longing within her core and hoped that her Mistress would finally choose to visit with her tonight. It had been many weeks since she had last seen her and the absence was weighing on Vala's heart.\n\n\"Have you really missed me my Valamera?\" The voice cooed, closer this time.\n\nVala found that to her surprise she actually did. \"Yes Mistress, I have missed you. Won't you come to me tonight?\" Vala asked, feeling the heat in her core flare with the admission.\n\nStrong hands gripped her shoulders from behind and Vala felt hot lips kiss the side of her neck. The hands kneaded the sore muscles in her shoulders and neck, melting away the tension like butter in the hot sun. The volume of the ringing her mind swelled, resonating throughout her body. The tone was musical yet constant, filling her soul but never at the forefront, always deep inside her mind. \n\nVala groaned. \"Mistresss...\"\n\n\"Yes my Valamera.\" The voice cooed in Vala's ear. The breath was hot and close. Vala felt a tongue trace the sensitive skin up around her ear followed by the nip of teeth as her Mistress worried her earlobe.\n\nVala groaned again, louder this time as euphoria flowed like hot candle wax through her veins, searing her from the inside out. \"Please Mistress...\" Vala reached up and gripped the head at her Mistress's neck. Her hands worked into the thick, lustrous hair and pulled the teeth in tighter. \"Yesss...\"\n\nThe hands moved to Vala's breasts and gave them a playful squeeze. \"Soon my dear, very soon we will be together. Bt the time is not yet here.\" The fingers pinched Vala's nipples, giving them a firm twist.\n\nVala gasped with delight.\n\n\"Do you like that my Valamera?\" The voice asked playfully.\n\n\"Ooohhh...\" was all Vala could manage to say through the haze of bliss.\n\nThe fingers pinched harder and began to roll the nipples to a slow, torturous cadence. For several minutes, maybe longer the fingers continued, keeping Vala's passions burning at a steady heat. \"Good?\" The Mistress cooed.\n\nVala could only moan incoherently as she felt her body give little shudders and twitches under the slow erotic agony. She wanted her Mistress to do more but couldn't make her mouth put words to her desires. It was as if her mind had ceased to know how to control her body. Somehow her whole being had been given over to the primal hunger deep in her sex.\n\n\"Perhaps this?\" Her Mistress said, gently but firmly forcing Vala down onto her knees and bending her forward. Vala's face was pushed into something soft in the smothering darkness but she couldn't tell what it was nor did she care. She felt her Mistress's fingers trail along the insides of her thigh then with a luscious, gentle grace; tease the outer lips of her sex.\n\nPleasure flooded through Vala and she felt herself whimpering with need. Every passing second of the erotic torture was driving her higher and higher. But still what she yearned for, what she needed, the ultimate release, eluded her. \"Please.\" She begged. \n\n\"Please?\" Her Mistress asked. \"Please what my Valamera?\" \n\n\"Please Mistressss... I need you...\" She moaned with a desperate need.\n\n\"What do you want my Valamera? What is it you need?\" Her Mistress continued to ask.\n\nFinally Vala's pleasure fogged mind got what her Mistress was asking, \"In me, I need you inside me Mistress... please Mistress...take me!\" She begged. The musical note in her swelled, its tone growing more insistent yet somehow never changing, spreading throughout her body yet never leaving the back of her mind. The tone, high and pure, was bliss to Vala's soul. \n\n\"Take you?\" Her Mistress mocked. \"You want me to take you? And yet you won't take the one you want. Will you my Valamera?\"\n\n\"Mistress?\" Vala gasped uncomprehendingly. She was finding it increasingly difficult to breathe let alone speak. The music in her mind faded and Vala's soul cried out at its retreat. She whimpered. \n\n\"Yesss.\" The silky smooth voice hissed in her ear. \"The red haired one, you want her and yet you deny yourself the pleasures of her delightful young body. Why? Take her, she cannot resist you.\"\n\n\"Nooo...\" Vala moaned but even as she did the image of Branwen flared in her mind. She imagined slipping her tongue into the young woman's wet, hot sex. She pictured the look of bliss on the redheads face as she cried out Vala's name during a climax. Vala could actually smell the woman's lust and taste her musky sex. She gasped with pleasure. \"Yesss...\"\n\nHer Mistress whispered in Vala's ear, the enchanted words seeping into her mind, controlling her will, changing her very being. \"Yes my Valamera. Take her. Take the young maid, she is all yours now.\" And with her words the Mistress pushed her fingers deep into Vala's aching sex with a slow, smooth push. \"She will not resist you. She cannot resist you. No mortal woman can.\" The words filled Vala's mind as fingers filled her sex, \"Take her.\" \n\nBlinding pleasure exploded in Vala's mind as all of her pent up sexual energy was released in one shattering instant. A piercing shriek was ripped from her throat as fire coursed through her veins and her entire body became as taut as a bowstring. She felt her sex contract around the fingers deep inside her and her body rocked back against her Mistress's unmoving hand. Vala pushed back and tried to drive the fingers deeper into herself. With each thrust of her hips she felt another surge of pleasure and another paroxysm deep in her core. Again and again she pushed, each one driving another cry of ecstasy from her lungs.\n\n\"Take her my Valamera, she is yours.\" Her Mistress hissed, the words crawling deliciously through her mind as another shattering climax was ripped from her sex.\n\nVala pictured the beautiful young red haired girl and as her body tensed for yet another climax she cried out, \"Yes! She's mine! Yesss...yesss... YESSS...!\" Then her body went rigid and everything faded to darkness as the beautiful music sang. \n\n* * *\n\n\"I hear you did an excellent job handling those preparations yesterday Vala.\" Said the Steward from behind her grand wooden desk as Vala walked into the office in the morning.\n\nThe morning sun streamed in through the tall windows and fell onto the grand sapphire blue tapestry that hung behind the Stewards desk. Vala thought she could see the golden embroidery actually sparkling in the brilliant light.\n\n\"Thank you my Lady.\" Vala said trying to mask her pride at the compliment.\n\nThe Steward nodded, \"I talked with Bernadette yesterday after sundown and she was most impressed with how thoughtful and thorough you were. That's quite a compliment. Bernadette does not typically impress easily. Keep up like that and you may have my job in a few years.\"\n\nVala practically glowed at the comment and she tried, unsuccessfully, to restrain a smile. She saw the Steward glance up and give a slight smirk of her own but the woman didn't comment. Vala felt her cheeks heat with a bit of embarrassment.\n\nAfter a few moments of silence the steward put down her quill and picked up the piece of parchment she had been writing on. \"Here you go. I'll expect you to deal with all of this by sundown.\"\n\nVala looked over the list, struggling to make out the loops and curls of the Stewards script. After weeks of practicing she was getting much better at reading it but she still wasn't a fluent. Many times she had gone to Miss Bernadette when she had trouble with a word or phrase in the Stewards instructions. Bernadette was always very patient and helpful and had even given her several reading lessons after hours or when they had a few free minutes during the day.\n\nNothing on the list looked to be very difficult. It was mostly more preparations for the banquet next week. Vala nodded as she got up. \"I'll take care of all of this my Lady.\"\n\nThe Steward nodded and picked up her quill again, \"Good. See that you do. I would hate to have to go back to the Baroness give her a different report on your progress.\"\n\nVala paused at the door and turned, glancing back to the Stewardess with a bit of apprehension. She could see that the older woman was looking at her keenly from under her eyebrows while pretending to continued writing. \"The Baroness?\" Vala asked.\n\nThe Steward paused and looked up with a shrewd smile, \"Yes, she had asked about your progress personally last night. I had told her that you were doing very well. She seemed pleased and said she looked forward to meeting you at the Banquet.\" The Steward raised one eyebrow, \"Quite an honor really for one such as yourself to be noticed by a great lady.\"\n\nVala wondered secretly why the Baroness would even care about her but aloud she said with a curtsey, \"Yes, my Lady, I am honored.\"\n\nThe Steward looked her over for an uncomfortably long moment before that shrewd smile played again at the corners of her mouth. \"Yes, I suspect you are...\" she said almost to herself. Then louder she said, \"Well, enough of that, off to your duties.\" And with that she picked up her quill and appeared to dismiss Vala from her mind completely.\n\nVala quietly exited the Stewards chambers and made her way down to the servant's levels of the keep as her mind chewed over the events of the last few minutes. She hadn't pulled any real meaning from the Stewards words and reactions by the time she met with the laundress she had pushed the thoughts from her mind till later.\n\n* * *\n\nVala settled heavily onto the couch in her chambers and warmed her sore feet by the fire that was already burning in the hearth. She had to admit to herself that after a life of doing everything for herself and others, having someone to wait on her was an agreeable change. She never would have imagined that something so simple as having another person start a fire for her before she got to her room could be so pleasant.\n\nAfter some time there was a soft knock at the door. Vala straightened a bit and said, \"Come in.\"\n\nThe door creaked slightly as it opened and Branwen entered carrying a bucket of water. She smiled pleasantly. \"Good evening milady. I thought you would like to clean up a bit before bed. I suspect you had a busy day.\"\n\n\"Yes, that's a wonderful idea Branwen.\" Vala said with a smile. She stood and headed for her bedchamber, Branwen followed.\n\nOnce she was in the chamber Vala started trying to remove her gown. Branwen saw this and said, \"Oh, please let me help you milady.\" Shortly, Vala was standing in the chamber dressed only in her small clothes. She was thankful that the fire in the hearth was burning well warding off the chill autumn air.\n\nWith one eye on Branwen who was busy across the room turning down the bed Vala smiled to herself and began pulling off the last of her clothing. By the time Branwen turned back around Vala was completely nude and starting to wash herself down with a damp towel.\n\n\"Oh! I'm sorry milady, I didn't mean... ah... I'll be out...\" She stammered upon seeing Vala's nude body. Her face heated to a brilliant red and she made for the door back to the main chamber.\n\n\"No, it's alright Branwen.\" Vala said smoothly. \"In fact could you come here for a moment, I can't seem to reach my back very well.\" She turned to Branwen and held the scrub cloth out to her.\n\nBranwen stood paralyzed, her eyes locked on Vala's naked form. After a moment her mouth opened as if she was about to say something but no words came. Still she didn't move.\n\n\"It's alright Branwen,\" Vala said in a sugary voice that was now no stranger to her. \"We're both women, there's nothing here that you haven't seen before, is there?\"\n\n\"I... uh... no. No I... I suppose...\" Branwen stammered, her eyes still locked on Vala's naked body. Finally she seemed to get a hold of herself and she looked up as if startled out of a dream. \"But I should step out while you bathe...\"\n\n\"Come over here and help me Branwen.\" Vala's voice was still smooth but now carried a bit of an edge to it and it caused Branwen to freeze.\n\n\"Ye...yes my... milady.\" Branwen said haltingly as she came over to Vala's side. Taking the damp towel she waited till Vala turned away then slowly started to scrub down Vala's back was it? \n\nVala was also beginning to discover with no small amount of concern how much she really liked the feeling that being so completely in control of another person gave her. She was finding that the more she pushed a woman the more she liked it. A shiver of anticipation ran through her as she wondered just how far and how fast she could push the young maid. No, not too fast, she corrected herself. After all, the seduction was half the fun. She grinned wickedly. \n\n\"Lower Branwen.\" Vala said in her silken voice, lacing the words with her will. \n\nBranwen didn't pause. She dunked the towel into the bucket again and resumed the rubdown lower this time.\n\nVala's smile widened as she felt Branwen's strong hands caressing her backside. She even imagined that the red haired girl was lingering a bit at the tops of her thighs. Trying to make it seem as if she were only shifting her weight slightly, Vala spread her legs a bit and waited patiently as Branwen continued washing her up. \"That's wonderful Branwen.\"\n\n\"Yes milady.\" Branwen said in a breathy whisper.\n\nVala smiled and started to say something but her next words were cut off by a startling jolt from her sex as she felt Branwen push the towel between her thighs. The intimate contact almost made her moan but she restrained her reaction. Her skin prickled and a shiver that was only partly due to the chill of the air rippled through her.\n\nBranwen continued to work her way down the back of Vala's legs until she got to her ankles. As she turned to dunk the towel into the water bucket Vala spun around to face the young woman. Branwen's eyes widened when she turned back and saw Vala was now facing her. The light outside the windows was now mostly gone and the only illumination came from the flickering fire in the hearth. Vala could see confusion mixed with passion in Branwen's green eyes. She let the look linger there for several seconds before raising her eyebrows and asking, \"Something wrong Branwen?\"\n\nBranwen jerked back as if startled out of a dream. \"What?\" She looked Vala in the eyes then blushed furiously. \"I... ah, no milady.\" She hurriedly plunged the towel back into the bucket and splashed water onto herself and the floor.\n\nWith a little cluck of her tongue Vala said, \"You've gotten your dress wet. Here let me help you with it.\" She came up behind Branwen who was standing as if frozen, staring down into the water bucket in confusion.\n\n\"No...\" The girl whispered.\n\nIgnoring her, Vala started unfastening the small wooden buttons that ran down the back of Branwen's dress. When she had finished she slowly pushed the dress off one shoulder, then the other. The coarse dress fell down a little to hang loosely across the tops of Branwen's breasts.\n\n\"No...\" Branwen whispered again.\n\nVala noted with satisfaction that Branwen's meager protest came in a rich, throaty voice and that the girl had made no move to stop her in the slightest. She reached around and with a gentle pull, slid the dress over Branwen's breasts. The dress didn't fall completely because Branwen was still gripping the towel in the bucket, but it did slip down to about her waist, exposing the tops of her petticoats.\n\nEver so slowly, Vala brought her hands up and started to gently knead the tight muscles of Branwen's shoulders. At the first contact the girl shivered but after a few seconds she stopped and just stood there stone still.\n\nAfter several minutes Vala became bolder and started letting her hands roam farther afield. With her fingers she traced the bumps of Branwen's spine down to the small of her back. From there she worked around to the girls sides, then down a little more to the flare of her hips. With fingers that trembled with anticipation, she pushed Branwen's petticoats down a little and worked the tender skin under them. After a few minutes, she pushed the petticoats down further still, exposing more of the girl's luscious curves.\n\n\"Milady... please... I can't...\" Branwen whispered. But even as she spoke, her hands fell from the bucket allowing her dress to slide the rest of the way down and pool at her feet.\n\nContinuing to slowly work her fingers into Branwen's hips, Vala studied the slim girl in the flickering firelight. Her skin was smooth and very pale. Over much of her back and arms was a smattering of freckles that seemed to increase up to her shoulders which were heavily covered. Looking down Vala wondered wickedly if there were any freckles on the girl's backside. She decided there was only one way to find out...\n\nBranwen gasped in surprise as Vala smoothly slid her petticoats down in one quick movement then came back and ran her hands over the girls now fully exposed body. \"Nooo...\" Branwen moaned.\n\nWith delicious languidness, Vala ran her fingernails up Branwen's spine and over her shoulders. She grabbed the smaller woman tightly and pulled her close till their bodies touched. Vala almost moaned at the feel of her breasts pressed into Branwen's firm body but contained herself for a few moments more. Pressing in close she whispered in Branwen's ear, \"If you really want me to stop, I will.\" Then she pressed her lips to the side of Branwen's neck and gave her a long, sucking kiss. She moved up and started worrying on the girls earlobe as one hand moved to her flat belly, pulling them tighter together.\n\n\"Milady... Vala...\" Branwen whimpered. \"Please...\"\n\nVala moved her other hand from Branwen's shoulder down to cup the red haired girl's breast. Giving the firm mound a squeeze she whispered in her ear, \"Please what?\" As she spoke she gripped the girl's small nipple with her fingers, giving it a rolling twist.\n\nA gasp of surprise escaped Branwen's lips but it quickly turned into a little hissing sigh as she breathed out through clenched teeth. As Vala continued to tease the sensitive little nub Branwen shuddered. \"Nooo...\" She moaned again.\n\nVala licked her ear then said, \"But doesn't if feel so good Branwen? Doesn't it feel so right?\" As she spoke her other hand trailed down Branwen's stomach till she was just touching the tuft of red hair nestled between her thighs. With a fingertip she traced around the edges of the course red hair. \"Don't you want to see just how good I can make you feel? How good we can make each other feel?\" She gave her nipple another twist, eliciting another moan from Branwen. Vala relished in her feeling of mastery over the beautiful young woman. She felt the excitement as a tightness in her core which was increasing with every passing second. She somehow knew that whatever power her voice now held was total. As her Mistrees had said, there was no way for any woman to resist her commands. Vala wondered just how far the control could go. How far could she take Branwen and how quickly? What could she get from the girl? Her lips twisted into a predatory little grin as one thought slipped to the forefront of her mind... everything.",
        "\"Milady, I can't...\" Branwen started but her words broke off as Vala traced her finger over the crease between Branwen's legs, making her gasp.\n\n\"Oh, I think you can my dear, in fact I'm very sure you can.\" Vala cooed in her ear even as she slid one finger easily into Branwen's wet sex. The effect was instant. The young chambermaid's eyes snapped open wide before rolling back as she gave a low, soft moan. She sagged back into Vala's arms and her knees parted slightly, giving Vala easier access. \"This is what you want, Branwen.\" She pushed her finger deeper making Branwen moan again. \"You want me to please you.\" Vala purred sweetly in her ear.\n\nBranwen moaned incoherently, \"Meee...?\"\n\n\"Yes Branwen.\" She said slowly, letting the thick words seep into the girls very being. \"But most importantly, you want to please me Branwen. That's what you really want Branwen, that's what makes you happy... pleasing me.\"\n\nBranwen's head rolled back and she gave a long, low sound from deep in the back of her throat. \"Milady...\" she moaned. \n\n\"You will willingly give yourself to me Branwen.\" Vala whispered right in her ear. \"Your body, your heart and your soul. You will give yourself to me completely. Give yourself to me Branwen, give yourself to your new Mistress.\" \n\n\"My Mistress...\" Branwen said in a voice almost too soft to hear.\n\nVala's smile was wicked. \"Say it.\"\n\n\"Mistress...\" Branwen moaned. \n\nVala pushed upward into Branwen and hooked her finger slightly, holding the girl by her sex. \"Say it.\" Vala hissed into her ear. \"Say that your body, your heart and your soul belong to me.\" \n\nIn a throaty voice filled with passion Branwen said, \"I'm yours my Mistress. My... my body, my heart and my...\" she moaned loudly then collected herself, \"...my soul are... are... yours.\" Just as she finished speaking a spasm shook her body as she had a long, powerful climax. She cried out something but her words were unintelligible, mixed in as they were with her cries of ecstasy.\n\nVala watched enraptured with Branwen's display but even more so with the feeling of complete mastery that she seemingly now held over the girl. Vala wasn't sure where the compulsion to make Branwen say those words had come from but once she had started speaking it seemed perfectly right. Like it was something she should have done long ago, something she should have thought of while with Rae or Inga or Else. The thought of holding all of their souls in her grasp gave Vala a surge of euphoria that made her breath catch in her throat.\n\n\"Look into my eyes Branwen.\" She hissed fiercely. When the girl's brilliant green eyes locked on hers Vala had to hold back a moan at the look of unrestrained passion she saw burning in those clear emerald pools. \"You love me Branwen. You love me wholly and completely without any reservation. You are completely devoted to me and making me happy from now on.\" \n\n\"Mistress.\" She whispered reverently. \n\nFeeling the heat in her core, Vala decided it was time for a release. Sitting on the edge of the bed, Vala gently but firmly she pushed Branwen to her knees in front of her. Taking hold of the girl's thick red hair she tipped her head up and made her look into her eyes. Vala spread her legs slightly and licked her lips. \"Branwen, do you love me?\"\n\nBranwen looked up at her with wide, brilliant green eyes full of devotion. \"Yes Mistress.\" \n\nVala shuddered with euphoria at the complete submission in Branwen's voice. \"Then show it by pleasing me.\" She said huskily as she guided the young redheads face to her needy sex.\n\nVala jerked involuntarily at the first contact of Branwen's tongue. It was as if an electric shock had run straight from her sex to her brain. Biting her lower lip to control her noises, Vala's eyes slid closed and her head rolled back as she let Branwen have her first taste of another woman.\n\nInexperienced, Branwen's first attempts at pleasing Vala were clumsy and awkward. But after a few minutes she figured out what worked by listening to the tone of Vala's vocal appreciation. Her tongue probed deeper and deeper into Vala's sex, testing out every part she could reach, eager to please her new Mistress.\n\nFeeling her peak coming, Vala gripped Branwen's hair tighter and forced the girl to look up into her eyes again. It was awkward for Branwen to do and keep her tongue in Vala's sex but somehow she managed it. The look of open submission in Branwen's eyes was too much for Vala and with a cry she came. Burning ecstasy flooded her mind and poured down into her body, soaking her very soul with a feeling of complete bliss. Her body shook with each contraction of her sex around Branwen's tongue and she felt her wetness flowing into the girl's eager mouth. She looked down and saw Branwen was still gazing up at her with eyes full of love and also something more... naked, unbridled lust.\n\nVala's sex gave sharp contraction forcing a cry from the back of her throat. Another powerful spasm shook her then another finally until it was too much. She fell backward with a long, throaty sigh of complete satisfaction as the fire of multiple climaxes faded to a warm glow that enveloped her completely. \n\nVala closed her eyes and took a deep breath. She was just about to say something to Branwen when she felt the girl's hair tickle the inside of her thighs. Before she could make a move, Branwen had her head back between her thighs and was once again working her tongue into Vala's torrid sex. The touch was even more blissful than before now that Branwen had better access afforded by Vala's prostrate position. She slid her tongue in deeper twirled it around in a move that made Vala moan. \"Branwennn...\"\n\nBy way of answer Branwen wrapped her lips around Vala's clitoris and sucked gently on the sensitive little nub.\n\nVala let out a long groan of delight as her hips lifted up, arching her back. \"Yesss...\" she hissed. She thought distantly that Branwen was apparently a fast learner. \n\nBranwen's hands cupped Vala's bottom and pulled her face even tighter into Vala's sex. After afew minutes she shifted position and tip of her tongue started circling her clit with a slow, steady cadence.\n\nThe contact of the tongue directly on her sensitive center was too much for Vala and with a grunt she climaxed again. Her hips thrust up even higher in a quick jerk that pushed hard against Branwen's mouth. The sharp contact gave Vala even more pleasure and she cried out incoherently as her world dropped into a sweltering sea of rapture. The room dissolved around Vala and her ears sang with the blood pounding through her veins. Her back arched more as her body tried to increase the sensations by pushing even harder against Branwen's beautiful face.\n\nDistantly Vala felt something that was left lying on the bed digging painfully into her shoulders. She felt Branwen's sharp fingernails digging deep into her backside as the young redhead tried to maintain her hold. Distant sparks of pain in a hurricane of bliss. But somehow those bits of pain only seemed to make the rapture more intense, more all consuming.\n\nVala felt another contraction building and sucked in a ragged breath. Unable to even cry out, Vala bucked and shook with the sensations flowing through her. She felt wetness flow from her sex and down her backside. She felt Branwen's tongue eagerly licking up every drop, drinking her in. Another climax began deep in Vala's sex but before she could cry out darkness claimed her.\n\n* * *\n\nThe feel of fingers gently running through her hair brought Vala slowly, luxuriously back to consciousness. With a smile she indulged in a long, decadent stretch before opening her eyes. She looked up to see Branwen's wide green eyes gazing down at her.  \n\n\"Is everything alright Mistress?\" Branwen asked.\n\nGiving a contented sigh Vala said softly, \"Yes Branwen. Everything is wonderful.\"\n\nBranwen's breath seemed to catch in her throat a little at Vala's words. After a second she said, \"And was that experience pleasant for you? Did I please you?\" \n\n\"Oh yes Branwen. That was absolutely magnificent. You pleased me greatly.\"\n\nAs Vala watched, Branwen's eyes slid closed. Her shoulders hunched slightly as she gave a small convulsive shudder, followed by another, then another all accompanied by small, hissing inhalations of breath. Vala cocked an eyebrow as she looked at the young girl. \"Branwen, what was that?\" She looked at the girl closely, saw the lust in her eyes, \"Did you just...?\" She let the statement hang.\n\nAfter a few more seconds Branwen seemed to collect herself and with a deep breath opened her eyes. \"Yes Mistress.\" Her cheeks blushed and she looked down. After a few seconds she said quietly. \"I just went into rapture.\"\n\n\"Why?\"\n\nBranwen seemed confused. \"Why?\" She resumed running her hands through Vala's hair. \"I... I don't really know. I just...\" she paused, thinking. \"When you said I pleased you greatly it just made me so happy, so overjoyed knowing that I made you feel good that I...\" her face flushed an even deeper scarlet, \"I... it...\" she shivered and said in a small shy voice, \"it made me climax.\"\n\nVala stared at her unbelieving, \"Just because I said it was good?\"\n\n\"Because I knew I pleased you Mistress.\"\n\nVala couldn't help but smile at the look of complete submission in Branwen's wide green eyes. \"Do you love me that much Branwen?\"\n\n\"Yes Mistress.\"\n\nShifting slightly, Vala pulled Branwen closer. \"Let's go to sleep.\"\n\n*****"
    ],
    "authorname": "china-doll",
    "tags": [
        "lesbian",
        "all girl",
        "vampire",
        "mind control",
        "hypnosis"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/forever-again-ch-05"
}