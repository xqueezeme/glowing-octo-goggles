{
    "title": "Out of Darkness Ch. 17",
    "pages": [
        "The end has come for this series. I hope I've been able to answer most of your questions, although maybe not all. But fear not, I have plans for the future. One of my plans is to re-work Wolf's Pet a bit. So if you see it being posted again, it will be the re-edits. Also, there may be some surprises in store for you in the coming months. When I write something that is more in the middle of these various storylines, I'll put in the tag line which story it is a part of.\n\nAs always, a huge thank you to Archangel_M! What would I do without you AA?\n\nPlease enjoy, vote, and comment if you feel the urge.\n\nlilgirlsix\n\n~-~-~-~-~-~-~-~-~-~-~\n\nNevada -- Present Day\n\nKelly slumped back into her chair, exhausted. Orsolya sat next to her, taking her hand and patting it softly. \"You were amazing, my dear, just amazing.\"\n\n\"It's over.\" Jenna stood looking at her sisters, a smile spreading slowly across her face. \"Erobos won't threaten us ever again.\"\n\n\"Grandmother, what do we...\" Orsolya spun around in the chair. \"Grandmother!\" Orsolya jumped to her feet. \"She's gone. She's gone.\" Orsolya slowly returned to her chair. \"Grandmother, please, come back!\" She whispered in the direction where her grandmother had last been.\n\nJenna came over to Orsolya and knelt in front of her. \"She's not gone for good, Orsolya. She'll be back if we ever need her again.\"\n\n\"How can you be so sure?\" Orsolya was on the verge of tears. She'd felt as if she'd lost her grandmother all over again.\n\n\"Because she's here with me.\" Jenna pointed to her heart and smiled. \"I think she's always been with me, but I never realized it. I do now, and I know how to ask for her guidance if we need it in the future.\"\n\nKelly got up without anyone noticing and stood at the window looking out at the sky. The winter sun had almost passed beyond the mountains. Why did she suddenly feel the urgent need to run? She looked down at her hands, turning them over and over. In her mind's eye she saw them as huge furred paws with deadly claws. But they were still human hands. Hurry, Drago. I need you here so badly. I feel funny.\n\nI'll be there as soon as I can, baby. I promise. I have one more job to do.\n\n~-~-~-~-~-~-~-~-~-~\n\nAlmost everyone from the Baxter and Bertrand/Kardos packs were outside waiting for the return of their fighters. They already knew the outcome, but they wanted to welcome their heroes. The two packs, along with the panthers, had beaten the odds and destroyed their enemy once and for all.\n\nThe full moon above portended a new future. For many years their numbers had dwindled. But now, there were many new cubs expected in the fall; it was the dawn of a new day for the Baxter Pack and the were as a whole.\n\nA cheer went up from the gathered Omegas when they saw the headlights in the distance. The long line of SUV's drove slowly into the compound and were immediately surrounded by family and friends.\n\nThere was another group waiting silently outside the hospital entrance. They watched for the line of cars that would break off and pull in to deliver their wounded comrades. Sarah stood with her arm protectively around Karen who stood wringing her hands. Karen knew that Cole would live, but he'd come so close to death, she had to see him to reassure herself he wouldn't leave her.\n\nThe first SUV stopped and was quickly met by the waiting medical team. Jeff had his stethoscope out immediately and heard the loud, regular heartbeat in the chest of the big chocolate wolf. He turned around, spotting Karen, and smiled. \"Let's get him into the treatment room.\" Jeff stepped to his next patient, shouting out orders as he triaged the wounded.\n\nI think I had some help, but I made it back to you pet. You won't be rid of me for a long, long time. The sparkling green eyes sought out their mate and found her. Her face lit up when she met his gaze.\n\nKaren grinned and hugged Sarah. \"I'm fine now, Sarah. Go find James. I know you're dying to.\"\n\nSarah returned the hug and dashed off. She knew where he'd be. The patrol cars were escorting the dead to the other side of the hospital. She stopped running when she saw the blue and amber lights flashing. I'll wait for you.\n\nThank you, baby. I won't be long.\n\nJames, Steve, Troy, and Trey somberly carried the bodies of their dead to the area where they would await their final sendoff to their ancestors. Sarah backed into a dark corner as Carr arrived with Nathan. She watched with appreciation as the Alpha went to each of his fallen Betas and touched them, saying something quietly into each one's ear. It was only the Baxter Pack that had lost fighters. She was thankful there weren't many, but any was more than they'd hoped for. Carr spoke with each of his on-duty officers before walking away, Nathan right behind him.\n\nSarah cocked her head. She knew Brett was okay, so why was Nathan acting as second? Very odd. But she really didn't care. She just wanted, no, needed to touch James to know he was fine. She was practically dancing around with anticipation as she waited for James to be finished with his duties.\n\nWhile she waited for her mate, Sarah saw Lee walk purposefully towards Carr, never showing the emotion that Sarah was sure filled her heart as much as the rest of the females that had waited for their mates to return. The Alphas still had their duties to attend to before they could be selfish and think of themselves. Sarah smiled when she saw Carr take Lee's hand in his. They stopped walking for a moment, and she saw Nathan nod his head and walk away. Sarah knew their final duty for the night was to meet with the families of the dead. A tear fell down her cheek as she thought of them.\n\nI'm glad I don't have that job. It's hard enough to face you after a fight, much less parents and mates of the fallen.\n\nSarah whirled around and threw herself into James' arms. She hadn't even realized how worried she'd been until this very moment. But now, feeling his arms tighten around her, she felt nothing but relief running through her. She almost melted into his embrace, and every bit of her body that touched his felt like it molded to fit his perfectly. \"And I always thought being married to a cop would be horribly nerve-wracking. Being mated to a werewolf who's a cop is even worse!\"\n\n\"Ha! Well it's a good thing this werewolf cop is tuckered out, 'cuz with the full moon, if you weren't already pregnant, you sure would be after tonight!\" His hands traveled over her body which he'd grown to know and love so well in the last few months.\n\nSarah looked up into the brightening sky. \"Guess we've all been so preoccupied we didn't even realize it.\"\n\n\"You're just easily distracted. Most of the pack remembered, but we had to ignore it. There will still be a few out tonight.\"\n\n\"Who could possibly have enough energy to go on a hunt tonight?\"\n\n\"Remember our first hunt under the full moon?\" James pushed Sarah's long black hair out of the way so he could inhale her scent. He closed his eyes and nuzzled her neck, his teeth just barely nipping at the scar from her mating bite.\n\nSarah shivered when she felt his teeth and remembered that first full moon. \"I remember.\" She whispered as she moved her head, hoping to invite him to bite down a little harder. Her hands found her way to his arms, sliding along his hot skin.\n\nHis fingers slipped slowly across her skin where his teeth had just grazed. \"That first mating under the full moon is what seals a mating bond. So any new mates will be out there tonight, tired or not.\"\n\nSarah felt a long, jagged wound on James' arm. \"Well we are headed to the hospital to get this tended to, and then we're going to our place to spend the night alone. No hunting for us tonight.\" She took hold of his arms and spun him around towards the hospital.\n\n\"Yes, ma'am. Anything you say, ma'am.\" James grinned ear to ear. He liked it when Sarah thought she was in control.\n\n~-~-~-~-~-~-~-~-~-~\n\nZsigmond looked up at the rising moon, so bright in the sky. He gazed at his son, still throwing rocks into the pit that held the remains of the creature that had once been Erobos. He had destroyed so many lives in the last thousand years, but his reign of terror and destruction was over. It was a new day for the were, both in America and Europe. It was a new day for his family, his son. \"That is enough, Drago. Even the carrion eaters didn't want him when he was alive; I doubt they'll want him now that he's dead.\n\nThey had sat in awe as the coyote had come down from the hills, sniffed at the dying dire wolf and slowly backed away, not daring to turn their backs until they had reached a suitable distance. Vultures and crows had landed, pecked once, and flown off to find other food.\n\nZsigmond had thought the idea a good one, but the scavengers weren't playing by the usual rules. He had finally decided he just couldn't wait forever. \"Drago, would you start collecting rocks? I'll watch him.\" He waited as his son dutifully stood up and went searching for rocks to throw on top of the makeshift grave.\n\nZsigmond climbed off the boulder where he'd been seated and moved slowly towards the still-breathing thing tied spread-eagled on the ground. His stomach had been flayed open, and the two limbs that Leo had nicked with his teeth were quickly becoming gangrenous from the panther saliva that was poisonous to dire wolves. The muscles in his neck had been severed, so he couldn't move his head. His throat had been slashed and he'd bled out almost all of his blood, but still he drew breath.\n\nDrago was newly mated. He needed to finish their mating tonight or wait another month to the next full moon. Zsigmond thought his son deserved to live a normal life. He deserved his chance at fathering cubs. As far as Zsigmond was concerned, the sooner the better. Waiting here tonight would delay that. He had thought the animals would finish the job for them while making Erobos suffer more than he had already. But such was not to be.\n\nZsigmond knelt down next to the shaggy black head. He leaned in close to the wolf's ear and whispered. \"You tried to destroy my family, but you failed. We have survived. We have thrived. And my son will carry on my family line. What sons have you fathered, Erobos?\" He smiled when he saw the pained look. \"You have failed. You are a failure. You have left nothing to carry on for you. And your life is now over.\"\n\nZsigmond stood up as the black eyes followed his every move. He held the shovel high above his head and brought it down with tremendous force, slicing through the dire wolf's neck in one motion, separating the head from the body. The head of the dragon!\n\nI know why you did it, father. Thank you.\n\nZsigmond turned slowly and gave his son a small smile. \"Let's bury this filth and get home. Your mate will be impatient.\"\n\n~-~-~-~-~-~-~-~-~-~-~\n\nRebecca and Danielle stood on their tip-toes and looked out the window when they saw the reflection of the light bars from the patrol cars. They waited until the cars had left the back of the hospital before racing out the door to find their mates, turning long enough to wave a quick good-bye to their sister panthers.\n\nOrsolya wiped her tears and gave Jenna a long, lingering hug that was really meant for her grandmother. She knew that Jenna understood. She caught a familiar scent in the air and smiled. \"My big brown wolf has returned to me, once and for all. No more shadows from the past for us.\" She hugged each of her remaining sisters and flew to his arms.\n\nGuillame felt her leap into his embrace and laughed as he twirled her around. \"It's over, it's finally over.\" He whispered in her ear. He felt an overpowering urge to inhale deeply, the intoxicating scents of lilac and birch going straight to his brain. His eyes focused on his flame-haired kitten. He couldn't keep from smiling.\n\n\"What are you looking at, Guillame?\" Orsolya looked behind her but didn't see anything unusual. \"Is something funny?\"\n\n\"It's the full moon, my love.\"\n\n\"Yes, I know. My panther feels the pull. But you must be so tired.\" She could see the slightly feral look to his beautiful eyes. \"What are you thinking?\"\n\n\"Haven't you noticed?\" He laughed at her look of confusion. \"My wolf noticed as soon as we walked in the building.\"\n\nOrsolya didn't understand what he was talking about.\n\nMy love, you are in heat. And my wolf and I would very much like to have more cubs. We are ready. Are you?\n\nOrsolya gasped, her hand flying to her mouth in surprise. This prompted a few strange looks from those still in attendance.\n\n\"Orsolya, are you alright?\" Jenna looked for something that could have surprised her friend. From the mischievous look on Guillame's face, it was obviously something her mate had said through their bond.\n\nOrsolya began to giggle.\n\nWe have not had a cub in many years. I would like to have another.\n\nOrsolya was surprised at her panther's admission. She had thought the panther was disinterested in any more cubs. She had never brought up the subject.\n\nOnly because it distressed you so. And we had no mate for so long. Now that we are with him again, I would like to have a little one, perhaps a male this time.\n\nOrsolya blushed and looked at her beloved Guillame. I would love to have more cubs with you, Guillame!\n\nGuillame swept Orsolya into his arms and strode through the house, a spring in his step he hadn't felt in decades.\n\nKaty and Jenna were still giggling when Rhys and Alistair arrived in the room.\n\nThe two males looked at their mates and exchanged confused shrugs of the shoulders.\n\n\"We will be having a quick meeting with the Alphas, other than Guillame, I suppose. Then we will be free for the evening.\" Alistair gazed longingly at his beautiful mate. But something, he wasn't sure what, something was slightly different.\n\nRhys sat down with a loud plop and pulled Katy into his lap.\n\nShe sighed and leaned back, holding his arms that he had wrapped tightly around her waist. \"I'm so glad it's over.\"\n\n\"Yes, we must decide what we will do now.\" Rhys absent-mindedly stroked her long red hair. The silky smooth feel of it between his fingers was mesmerizing. When was the last time they'd had some quiet time to be alone? He couldn't remember. So much had happened since the day they had met just a few short months ago. So much.\n\n\"Do?\" She pushed herself a little away from his arms so she could twist in his lap. \"What do you mean, what we will do?\"\n\n\"Where we will go next. The Archivist travels to gain knowledge of the different packs. That is my duty to the Council. Had you forgotten, little one?\" He could feel the tension in her body.\n\nShe relaxed her body into his and leaned back. \"I had forgotten. I'm sorry, Rhys. I just naturally thought that now that we had the Seven Sisters we would stay together.\"\n\nKelly had forgotten the others in the room until she heard Katy talking about the Seven Sisters. She pulled herself away from the window where she had been staring at the moon. \"No, Drago and I are going to live with my grandfather's pack, in Idaho.\"\n\nJenna noticed the almost hysterical pitch to Kelly's voice. \"Don't worry, my dear. We haven't forgotten. When the Seven Sisters need to be reunited, we'll find a way.\" Jenna gave her a quick wink.\n\nAlistair cocked his head. That didn't sound like Jenna. He'd never heard her speak to one of the women in that way, calling them \"my dear\".\n\nJenna saw his strange expression and stifled her own laugh. I'll explain later, my love. I have so much to tell you.\n\nIndeed? Alistair raised an eyebrow and smiled. He had a feeling a great deal had happened in this room that he had not been privy to. He hoped she would share it all with him.\n\nI promise not to leave out a thing!\n\nTracy sat so quietly in the corner that they had all forgotten she was even there. But as soon as Konstantin arrived, the little blond was suddenly a different person, animated and lively. She giggled when he tickled her before squeezing her between his big arms in a long hug.\n\n\"Now that the drama is over, and I am staying in America, we must decide where to live, m\u016fj and\u011bl.\" He tucked her under his arm as he gazed at her lovingly, his steel grey eyes meeting hers. She was so tiny he always worried that he could crush her by accident. He was always very careful of his and\u011bl.\n\nTracy gave him a worried look. \"I'd always hoped we would stay here. My friends are here. Where would we go?\"\n\n\"I don't know. I know no one but those I've met here. I just thought you would like to find your own place to live. We can live anywhere we want. A member of the Council owes no allegiance to any one pack. We can live with a pack, or away by ourselves, if we so choose. I will leave the choice to you, m\u016fj and\u011bl.\"\n\n\"May we stay here?\" She looked up at her silver-maned mate hopefully.\n\nThe tall were dropped to his knees so he could look up into his mate's lovely grey eyes. \"I will ask for permission from the Alpha, m\u016fj and\u011bl. My life is wherever you are, so if this is where you wish to be, I will move heaven and earth to make it so.\" He took her small hand gently in his large one and brought it to his lips, kissing it lightly, as he watched her beautiful face light up.\n\nTracy blushed a bright crimson as her fellow panthers giggled behind her and waved imaginary fans in front of their faces.\n\n\"Now why can't you be that romantic, Rhys?\" Katy playfully hit his arm with a balled-up fist, then shook it as she silently mouthed the word \"ow.\"\n\n\"I am at my most romantic when we are alone, little one. Unless you would like me to show my love more in public. I am more than willing to take my mate right here in the house.\" He mockingly leered at her and took a step closer, his hand at his pants zipper.\n\nShe laughed as she put out her hand to tell him to stop. \"I think I like my romance more in private, thank you.\"\n\n\"As you wish, little one. As you wish.\" Rhys winked at Alistair as he sat down, pulling his mate back into his lap to wait for the rest of the Alphas and Council members to arrive.\n\nSandalio sauntered through the hallways, his voice reverberating through the large rooms as he spoke on his cellphone. \"\u00bfEn serio? \u00a1Qu\u00e9 maravilla! Estoy tan feliz por ti, \u00c1lvaro. S\u00e9 que t\u00fa y tu pareja se Alphas espl\u00e9ndidas. Te llamar\u00e9 m\u00e1s tarde para m\u00e1s detalles.\"\n\nThe tall Spaniard had a wide smile on his face as he entered the room and found a seat. He grinned as he looked at his friends. \"Isn't it wonderful?\" He saw their blank stares. \"What? You don't think it is wonderful?\"\n\n\"Sandalio, unless you would like us to use \"Google Translate\", we have no idea what you're talking about.\" Alistair thought his friend must be having a nervous breakdown brought on by the stress of not sleeping enough. When he wasn't in meetings with the Alphas or on his cellphone with his Council, he was playing with Julia, the Baxter female who had caught his attention.\n\n\"I am so sorry. I was just speaking with \u00c1lvaro. He has informed me that about fifteen minutes ago the Sardinian pack, as a whole, felt their Alpha bonds dissolve. So I assume that means that Erobos is finally dead. A few moments later, they bonded with a new Alpha, and that is what is so wonderful.\" Sandalio could not believe they didn't understand the implications. \"They have bonded with \u00c1lvaro. He is the new Alpha of the Sardinian pack. Of course he will be hard for me to replace, but I think it is well deserved.\"\n\nAlistair cracked a grin. \"Yes, Sandalio, I agree, it is a wonderful thing.\"\n\n\"And with the death of Erobos, I believe I am no longer needed here. So I will be leaving in the morning. I have just one more bit of business with Carr before I leave.\"\n\nAlistair watched the Spaniard closely. For the first time since they had known each other, Alistair thought that Sandalio seemed nervous.",
        "Sandalio jumped up when Carr and Lee entered the room. He was about to speak but thought better of it when he saw the weary faces in front of him. He slowly took his seat. He could wait.\n\nCarr ran a hand through his chocolate brown hair, the white scar clearly visible across his forehead. He didn't notice the frown on Lee's face as she looked at it. He leaned against the wall and let his head fall back, making a loud \"thunk\" sound when it hit the wood. Closing his eyes, he sighed loudly and smiled when he felt Lee's hand take his and squeeze.\n\n\"How many did you lose, Carr?\" Alistair hated to ask the question and knew from the Alpha's face how much it pained him to think about it.\n\n\"Four. I don't know how some of them made it. I saw Cole go down and thought for sure he was dead when he hit the ground. I really didn't expect him to make it back alive. But I sure am glad he did, thanks to Nathan pulling him out in time.\" He squeezed Lee's hand.\n\n\"Actually, The Seven Sisters had a hand in that. I'm not sure how, but I'm sure we'll learn more later.\" Alistair lifted an eyebrow as he looked at his mate who smiled and nodded her head.\n\n\"Well I'll take any help I can get. I wish they could have saved them all. Jason was the only son in his family and had no cubs of his own. Luckily, he hadn't found a mate yet.\" Carr paused for a moment and thought back to the meeting with Jason's parents. It was heart-wrenching. And it was the same with the other families. \"Only one was mated. No cubs for any of them. I never know what to say.\"\n\nLee wrapped an arm around Carr's waist and hugged him close. \"You always say the right things. The families know it was for the good of the pack. Isn't that what a werewolf lives for? The good of the pack?\"\n\nCarr held a hand to Lee's face and stroked her cheek, moving forward to lean his forehead against hers. \"I think you're the one that always knows what to say.\" He brushed her lips with his. \"Thank you.\"\n\nAs much as he wanted to take his mate into the woods under the full moon, he knew he had business to take care of. Carr turned slowly to the Spaniard. \"Sandalio, I heard you wanted to leave but you wanted to speak with me first.\"\n\n\"Yes, well, as you know, I have been spending a great deal of time with one of your females, Julia.\"\n\nCarr cocked his head. Where was this conversation going? \"So I've noticed. And?\"\n\n\"Before now, my wolf wasn't really interested. He played along for my sake, as always. But when I passed her on my way in here, now that the fighting is over, my wolf has suddenly realized that she is our mate. So I would like to take her back with me.\"\n\nCarr and Lee exchanged amused glances. \"And she has agreed to this?\" Carr winked at Lee.\n\nSandalio seemed surprised at the question. \"Agree? Why wouldn't she agree?\" Sandalio suddenly panicked. He hadn't thought to speak with her. Would she possibly refuse him?\n\nLee laughed. \"Don't worry, Sandalio. She'll agree. She's known you were her mate since the Wolf Moon. But she was smart enough to wait for you to realize it. She knew you were distracted.\"\n\nThe look of relief on Sandalio's face was amusing to the group surrounding him.\n\n\"In fact, I believe she's packed and waiting for you now.\" Lee looked through the open door towards the foyer, where her former Beta waited for her new mate. She smiled as she watched the female pacing nervously.\n\n\"How did she know I had a charter waiting?\" Sandalio whispered under his breath as he smiled at the beauty who would accompany him home.\n\nRhys grinned. \"She will make a fine mate, Sandalio. She seems rather resourceful, doesn't she?\" Rhys ducked, evading Katy's slap across the shoulder.\n\n\"So I take it you'll be waiting to mate then?\" Alistair knew that Sandalio and Julia would have a difficult trip. Their wolves would want to mate, but he knew the Head of the European Council was expected to mate during a lavish ceremony. Julia would enjoy being the center of attention.\n\nSandalio stood up, clearing his throat loudly. \"Yes, unfortunately, I have no choice in the matter now.\" He turned to the Alphas and bowed, reaching out to take Lee's hand and kiss it in the European fashion of his time. \"It has been a pleasure. Thank you for your hospitality, and I hope to someday repay it in kind.\"\n\nSandalio made his way around the room, saying his good-byes to this group of new friends. He saved a bear hug for his old friend, Konstantin. He whispered into his ear. \"Take care of your little mate, old friend. Don't crush her by accident.\"\n\nThe big silver-haired were roared with laughter. \"Never, my friend, never. M\u016fj and\u011bl will be the safest when she is in my arms.\" He looked down lovingly at the tiny woman ,whose skin had blushed the brightest red he'd ever seen.\n\nKelly hadn't heard a word of what was happening a few feet from her as she stared at the rising moon. Every time she closed her eyes she saw the ground moving quickly beneath her four big paws. She felt like she couldn't hold still.\n\nHe will be with us soon.\n\nKelly really needed to get used to her other half talking to her.\n\nDrago will be back soon. Perhaps it would be best to wait outside.\n\nKelly sighed to herself. She needed to get used to her grandfather talking to her too. She quietly excused herself from the room and walked out of the big house. But where should she go? She stood in the middle of the driveway and looked around. The full moon lit the area all on its own without any help from electric lights.\n\nShe saw the lights on inside the surrounding homes and heard laughter and giggling coming from some, sobbing from others. She thought for a moment of Jason and felt a tear rolling down her cheek. She'd never forget his face, watching her with so much hope.\n\nI'm proud of you, baby. You helped so many. Drago's voice was like a soft whisper in her head.\n\nDrago, when will you be here?\n\nSoon, baby, soon. Wait for me in the meadow. I'll join you there.\n\nBut how do I find it?\n\nYour panther will know where it is. Let her show you.\n\n~-~-~-~-~-~-~-~-~-~\n\nKelly rubbed her crossed arms with her hands. She wasn't cold, just antsy. She couldn't hold still for a second. She looked down at the ground and realized there was a track in the grass that had formed in the last fifteen minutes. After all they'd been through today, and all that she and Drago had been through in the last few weeks, why was she so nervous now?\n\nThe soft wind blew through the trees surrounding the meadow. Kelly didn't feel scared at all, which surprised her. She'd never been one to go out alone in the dark, especially in the middle of nowhere. She stopped for a moment, listened to a wolf howling in the distance, and smiled. She knew there were no wild wolves in Nevada. It must have been one of the pack with his mate.\n\nIt was cold by human standards, maybe thirty degrees. Kelly didn't care anymore about things like that, but her skin felt so hot she wished there was a lake nearby. Maybe I should just strip. What was it going to hurt? Anyone she might run into here would be from the packs and nudity was an everyday thing for them.\n\nShe couldn't get her clothes off fast enough. Her whole body felt like it was on fire! Maybe the cold grass would make her feel better. Am I sick? She lay down, stretching out in the wet grass. But her relief was only momentary. Too soon the overwhelming heat returned. What's wrong with me? In frustration, she closed her eyes, her face pressed against the ground, trying to cool her burning skin.\n\nShe felt him near before she heard him. How had she missed his approach? \"Are you sneaking up on me?\" Now as she listened carefully, she heard the cadence of four paws on the ground.\n\nNever, Kelly.\n\nShe felt a large, wet tongue slide along her skin from her tail bone to the nape of her neck. She wasn't cold but she shivered nonetheless. Where his tongue had passed felt momentarily cooler as the wetness was cooled by the breeze.\n\nDrago, what's wrong with me? I think I'm sick. Maybe you should stay back.\n\nShe felt his cold nose on her neck and his course shaggy hair along her body as he lay next to her.\n\nNo, you're not sick, Kelly. You are in heat! This is the first full moon after our mating. Tonight we will seal our mating and our bond.\n\nAnd I might get pregnant? Kelly felt his laughter more than heard it.\n\nYes, baby. You might get pregnant. I want cubs, as many as we can have. So many nowadays have none.\n\nKelly had never really thought much about children. But, she had to admit, since becoming a werepanther she had been thinking about children, cubs.\n\nCould I have gotten pregnant yesterday when we mated?\n\nShe felt him pressing against her body, the whole length of him against her side. She found herself snuggling into his furry body.\n\nNo, you weren't in heat yesterday. But today you are. I can smell it.\n\nAgain she felt more than heard his amusement. This was going to take some getting used to. It was almost like she was inside his head and sharing his emotions just as much as his thoughts.\n\nOnly when I let you. We can shut each other out when we need to. But I hope we don't make it a habit.\n\nKelly rolled over and looked at her handsome, strong, brave black wolf. His dark eyes seemed to shine under the light of the full moon. I never want to shut you out, Drago. Again, she felt his laughter without actually hearing it.\n\nSomeday you will, and that will be fine. We'll learn when to share and when not. Drago gazed into Kelly's deep blue eyes. His nose drifted along his mate's neck, inhaling deeply, lavender and orange filtering through his nostrils into his brain and every cell of his body. And there was another scent there, the evidence of her heat. He knew he would soon lose any control he had over his wolf.\n\nKelly stretched languorously as she felt the slow exploration of her skin by her mate. When she felt his tongue lapping at her nipples she surprised him by purring loudly as she lifted up her body, pressing her breasts closer to his tongue. When she felt the sharp points of his teeth biting into her tender flesh she didn't scream or jump away; she bit her lip and moaned loudly as he lapped at the blood that came to the surface. The small wounds quickly healed.\n\nShe watched his every movement as he slid down her body, to her boiling center. Her purrs became roars of pleasure when his tongue delved deeply inside her, drinking her. Drago, Drago please!\n\nLet your panther take over, baby. Don't fight her.\n\nKelly closed her eyes and gave herself over to her waiting other half.\n\nThe wolf watched his beautiful human mate roll to her hands and knees and become his stunning black panther. She was lovelier than he had ever imagined possible. He stood in awe, watching her long tail as it flipped back and forth behind her. The panther turned her head to look behind, and Drago saw his mate's gorgeous sky blue eyes looking back at him.\n\nKelly's whiskers twitched as she scented her mate; her ears swiveled to listen for his breathing. The black wolf who stood behind her was imposing, his size much larger than most of the wolves that she'd seen since coming here. The only ones of comparable size were the Alphas and Drago's own biological father.\n\nHe will be a fine father for our cubs. Kelly had to agree whole-heartedly with her panther. They had been lucky to find him. She knew that fate was involved somehow, but she would never understand it.\n\nDrago, the wolf, pressed his nose to his mate's wet and swollen opening, flicking his tongue to taste her. He was shocked at the difference between the taste of his human mate and his panther. It was like the flavor and scent had intensified to an almost unbearable level. Drago, the human, was shoved backwards in their shared mind, and the wolf fully took over. It was time to breed, and he would control it.\n\nThe wolf reared up on his hind legs, his stiff cock entering his mate swiftly, impaling her in one thrust. He felt her hips rise higher to allow him even deeper inside. Her tail had moved far to the side to allow him unimpeded access.\n\nHe heard her roar of pleasure and hooked his front paws around her rib cage, pulling himself forward to force himself as deep as he could possibly go. His hips bucked against her, propelling his cock into her tight sheath. His brain was flooded with pleasure as his cock was squeezed by her body. The instinct to plant his seed deep inside her drove him to mercilessly pound into her over and over. He was close and felt her body readying itself.\n\nThe panther could feel her mate's need, equaling her own. A were fulfilled their destiny by bringing cubs into the world; wolf or panther, it didn't matter.\n\nThe panther's body stiffened momentarily before her body clamped down on her mate's cock. She roared when she felt his knot force its way inside her and knew the time was close.\n\nThe wolf leaned forward, steadying himself by digging his claws into the panther's sides. With his knot seated, his movement was curtailed and his thrusts shorter, but more urgent. He was close and found her neck, his teeth closing on the skin, tearing, tasting blood. He bit down hard and heard her cry out with her pleasure as he flooded her with his seed. His cock shot load after load deep inside her, his knot keeping any from escaping. He let go of her neck and lifted his head to the sky, baying at the full moon high above them. The wolf pulled them both, still tied, to the ground and they lay there together while he slowly licked the wound he had inflicted on her neck. He felt the wound heal under his tongue.\n\n~-~-~-~-~-~-~-~-~-~\n\nGuillame held his red kitten in his arms, stroking her soft skin while they waited for his knot to shrink. He heard her sigh and squeezed her tighter. \"Is something wrong?\"\n\n\"No, everything is right, finally. I feel like the whole world is open to us. When we first mated, I knew we had so much heartache in front of us, but there was this sense that something good would happen, sometime. I just didn't know it would take one hundred and sixty years to find it.\" She turned her head and kissed him softly.\n\nThey heard the roar of a panther and the answering howl of her wolf from a distance and smiled.\n\n\"It sounds like Drago and Kelly have sealed their bonds.\" Guillame nuzzled the back of Orsolya's neck.\n\n\"For the first time since the eclipse, the night your father and grandmother died, I feel hope, like the darkness has finally lifted.\"\n\n\"Then that is what we will name our daughter; Hope.\" Orsolya slid her hands over Guillame's, moving them over her stomach. \"My panther tells me we will have a girl, Guillame. You will have your chance to be a father. And this cub will know and love you as our first cub never had the chance to.\" She smiled when she felt his arms tighten around her. His love warmed her heart.\n\n~-~-~-~-~-~-~-~-~-~\n\n\"Drago?\"\n\n\"Hmmm?\"\n\n\"Did you know that panthers can tell as soon as they're pregnant?\"\n\n\"I had heard that.\"\n\n\"Can we name our son Jason?\"\n\n\"Yes, baby, we can.\" He held her tighter, so proud of his incredibly strong, beautiful, and brave mate."
    ],
    "authorname": "lilgirlsix",
    "tags": [
        "werewolf",
        "werepanther",
        "alpha",
        "beta",
        "omega",
        "dire wolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/out-of-darkness-ch-17"
}