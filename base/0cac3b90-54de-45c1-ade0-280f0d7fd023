{
    "title": "Company Policy",
    "pages": [
        "Note: This is an entry for the Valentine's Day Contest 2014. Enjoy! \n\n*****\n\nThe taxi came speeding down the city street straight at me, and there was no way it was stopping in time to miss me. My life began to flash before my eyes. In second grade I had pushed Emily down and denied the whole thing, I still feel bad about that. In third grade I.....\n\nInstinct cut in as the blaring horn of the taxi cut through my whirling mind; and, my muscles went into involuntary overdrive. Somehow, someway, I propelled my body into a lunge forward, narrowly avoiding becoming road kill. I looked up and around the busy city corner, but no one returned my glance. Just another day in the city.\n\nI crawled up from the ground; and, as the adrenaline from my near miss began to wane, I realized that I had landed, if only partially, in a puddle of icy slush. I made a chide remark about how the icy puddle and the freezing wind did nothing but improve my mood. Brushing myself off the best I could, I made my way down the street and into my office building. I didn't wave to the door man today, nor did I stop to chat with the janitor. Instead I stormed into the elevator and went straight to the 15th floor.\n\nI slammed the office door, walked into the small lobby entrance of my firm, and then slammed into the small door in front of me as I attempted to open and walk through it in one quick motion, only to be foiled by the lock. \n\n\"Oh! Sorry sir, you're early sir!\" The girl sitting at the desk behind the glass tellers' window buzzed the door open; but, I didn't move for the door. Instead I hung my head, put my hand against the door and took a deep breath. I turned toward the girl behind the desk and played a quick mental game of guess who. Sally? No, Sally has red hair. Jen? No, no... Jen had more weight to her. Think, Brandon, think. Ah!\n\n\"Cher!\" I exclaimed out loud in my 'aha' moment as I involuntarily pointed at her.\n\nShe shied back away from the window, looking at me like I was about to come through it at her. I threw my hands up and shook my head at the misunderstanding. \n\n\"Sorry, I wasn't yelling at you. I just couldn't remember your name. Then when it came to me, it kinda jumped out of my mouth. It's no big deal.\"\n\n\"My name is Claire.\" She said timidly from the other side of the window. I couldn't help but chuckle at how absolutely horrible everything was going, and now here I was, making a complete fool of myself. \n\n\"I'm sorry Claire, it's been a rough day, and it's only seven. Plus we have like, six interns in the office that all started two weeks ago, and as you may have gathered, I don't spend much time out of my office.\"\n\n\"It's ok, really, I'm sorry about the door.\" The poor girl still looked like she was terrified of me. I guess my foul mood wasn't very welcoming. \"Um, you're all wet, Sir.\"\n\nI looked down at my coat and suit, dripping wet on my left side, and covered in a murky stain. Good thing I wasn't going anywhere important today. \n\n\"So I am. I tried to jump over a taxi this morning, and things didn't work out quite the way I was hoping.\" I fiddled in my pocket trying to find my bathroom key as she puzzled that out. Sighing in dismay, I realized I left my office keys back at the condo. \"Claire, would you happen to have a spare key to the men's bathroom handy? I'd like to try and clean up the best I can, and I seem to have misplaced mine.\"\n\n\"Let me see if it's in here somewhere.\" She took to opening and closing the drawers and fiddling around inside of them. \"I'm sorry sir, I don't really work the front desk, I'm just covering for Amy this morning. I can't find any keys.\"\n\n\"Please, don't call me Sir. My name is Brandon, but you can call me a mess. I'll just make do.\"\n\n\"One second.\" She reached into something under the desk near her feet - it must have been a purse or bag of some sort, and came up with a couple keys. \"I have the keys to the women's room. You could use it really fast. No one really gets here before 8.\"\n\n\"I think I'll pass.\" She was right, most people didn't start til 9, and precious few arrived before 8:30; but, with my luck so far this morning, I wasn't about to take any chances. \"I don't want to risk making an even bigger fool of myself today.\"\n\n\"I could stand outside the door and watch the hallway for you.\" She offered.\n\n\"Well, I really do need to wipe some of this off of me, and I don't have any other options. So if you stand guard, then I'll give it a go.\"\n\nShe smiled, hopped up off her chair and came around into the lobby as I ventured off toward the bathrooms. Once inside the ladies room, with Claire posted outside to keep lookout for actual ladies, I took off my jacket and began to use the paper towels by the sink to pat myself down and wipe away some of the muck. Once I was fairly cleaned up, I threw some water on my face and looked into the light brown eyes in the mirror. My brown hair had an ashy tint to it that I was terrified would turn grey at an early age. I was only 24 but the last few years hadn't been nice to me. I worked out at the gym to keep my body in some sort of shape and to burn off some steam. I spent decent money on good clothes, and tried to look kept. Try as I might though, no matter what I did, I still had that tired, over worked, over stressed look that made people add at least five years to my age. \n\nI had been successful early on. I got a lucky break and was managing my own department at the R&D firm. I only had a 2 year degree; but, I knew someone at the firm and got a temp job that turned into a permanent position. It helped that I lacked a personal life. I immersed myself in my work and rode a slew of promotions until I was handling our biggest client all within 3 years. It came at a price. I lost a lot of friends who moved away from the city; and, the girl I dated in college left me when she went to continue her own education, partly because of the distance, but mostly because I didn't have as much time for her as she wanted. So now I worked during the week, researched when I got home at night, and went to conferences and expos during the weekend. My company loved me for it; and, both their pocket book and mine benefited. But I doubt running that myself into the ground was doing me any good. I tore away from my reflection and went out into the hallway where Claire was waiting. \n\n\"How do I look?\" I asked, holding out my arms.\n\n\"Give me a twirl.\" She made a loop in the air with her finger that looked condescending; but, she sounded completely serious.\n\n\"What?\" \n\n\"You had some on the back of your jacket. I want to make sure it didn't soak through.\"\n\nI tried to look at my own back and turned at the same time. I probably looked like a dog chasing its tail. What a fantastic start to my morning, indeed. When I finished 'twirling' once, she gave me the thumbs up sign.\n\n\"Thanks for all this by the way. Here's your key.\"\n\n\"No problem.\" She smiled warmly, took the key and started off toward the office. I took the opportunity of being behind her to give her the mandatory once (over. I am but a man, for I am weak. Her blonde hair came down just past her shoulders atop her thin frame. She had on a small suit jacket, and her white blouse poked out the back just underneath. I scoured mental images and didn't recall seeing any cleavage this morning. I ,therefore, assumed she was either conservative, or didn't have appropriate work attire that looked decent but also managed to show off what were either a pair of large A cups or small B cups. She had on what looked to be a pencil skirt that was probably a size to big, as it didn't really hug her hips and legs the way I thought it was meant to. Then again, I am a guy and my knowledge on women's clothing or fashion of any kind is near non-existent. It could also be that her petite frame just wasn't built for form fitting skirt suits. My eyes slipped off her cute and round, if small, butt to her legs that complimented the rest of the body they carried. I made a mental note to take her to lunch a few times to see if I could stuff a few pounds into her. Girl needs a sandwich.\n\nWe reached the lobby, where I was able to walk about 4 feet before I ran into Claire. We both cursed out loud as I grabbed her hips to keep her from toppling and almost fell forward into her. She threw her hands up and caught the door to break our fall. We regained our balanced and got a grip on the ground. I silently thanked my stars that no one else was there to see us, with my hands on her hips, my body pressing into her as she held herself up with the door; it was a compromising position to say the least and I was immediately embarrassed. She swore again as she smoother her clothes out.\n\n\"I'm so sorry, I didn't know you were stopping an-\" She cut me off.\n\n\"No, not you. The door. Amy works the front, so she gave me the key for this morning. But I didn't put it on my ring with the rest of my office keys.\"\n\nI looked at her, at the empty desk, then back to the door, and finally at my watch. 7:15. I had entirely too much work to do to wait for someone else with a key to show up.\n\n\"I have an idea.\" She went to the window that looks out into the lobby from the front desk and slid it open. \"I already unlocked the window!\" \n\n\"Oh good! Can you reach the key?\"\n\n\"No.\" She looked back at me and shook her head. \"It's in my purse under the desk. But I think I can fit through the window, if you help me up.\"\n\n\"I'm willing to try anything once, let's give it a go.\" I walked toward her but stopped a foot away. It was a more than a little awkward.. How do you lift up someone that you don't know? Where do you grab? My thoughts must have been painted on my face because she took the initiative.\n\n\"Just grab onto my waist and give me a start up. Once I can get my knee inside the window, you can let go and I can just crawl in.\" I nodded and she turned around toward the window and I gently grabbed her waist. She put her hands on mine and turned her head back toward me. \"Just don't, like, look up my skirt or anything.\"\n\nI chuckled, \"Of course not.\"\n\n\"You don't seem like the sleazy type, but you can never be too sure.\" She laughed, trying to break up the awkwardness.\n\n\"All men are dogs, never trust them.\" I joked.\n\n\"I guess you would know. Ok, on the count of three I'll jump, you lift. One, two, three.\"\n\nShe hopped off the ground and I lifted her up into the window. It worked as planned and as soon as she was up on the ledge, I turned the other way to respect her privacy, but quickly turned around again when I heard her gasp and cry out. She was slipping into the window, threatening to go heels over head. I quickly grabbed her waist to keep her from falling in. \n\n\"Are you ok? What happened?\" I said from behind her.\n\n\"I forgot the desk is lower than the window ledge and lost my balance.\" She sounded a little scared from the close call, so I didn't let go right away in fear that she would fall again. For the second time in the past few minutes, I found myself in another compromising position with Claire, her knees on the window ledge, my face level with her butt, still covered by her pencil skirt, (though the slit in the back threatened to undo that) and my hands on either side of her tiny waist. Almost too tiny. \n\n\"Can I take you out to lunch some time?\"\n\nShe turned around, eyes wide in astonishment, as I stood there, holding her waist, and cursing the day that God handed out filters for mouths and I missed mine. I smiled hoping she would take it as some sort of joke, and to my relief she giggled. \n\n\"Sure, get me in the office and I'll buy you whatever you like.\" \n\n\"I'll hold you to that. Are you good now? I'm going to let go.\"\n\n\"Yeah, I'm good, thanks for catching me.\"\n\nFor the second time I turned around to avoid seeing anything indecent. I heard a click and short buzz and turned around to see her sitting at the desk, her blue-grey eyes looking innocently at me.\n\n\"Good Morning, Brandon. Have a good day.\"\n\n\"Why thank you, Claire.\" and with that I entered the firm and headed to my office.\n\nThe next couple days I didn't see Claire much, though I did recall her bending through the office window one particular night while I was alone in my city condo. \n\nAs luck would have it, about a week later Claire knocked on my door and poked her head into my office.\n\n\"Brandon?\"\n\n\"Claire, nice to see you again. \"\n\nYou remembered my name.\" she laughed.\n\n\"Difficult to forget now, how can I help you?\"\n\n\"Actually, how can I help you?\"\n\n\"Help me?\" I said, confused. I didn't have an assistant, and never needed one. I didn't request any interns, and I didn't remember being asked to give any of them work.\n\n\"Yeah, Mr. Debeur told me that I'd be helping you with the two deadlines you have coming over the next 2 weeks.\"\n\n\"Deadlines?\" Kevin Debeur was the head of our firm, and often checked in on the inner workings of each department personally; but, I only had one client report coming up on the 13th of February. I racked my brain for anything I had forgotten, nearing panic mode when Kevin walked in behind Claire.\n\n\"Brandon! How's it going? Oh Claire! You beat me to the punch I see. Brandon, listen, we got a request for a proposal I'd like you to handle. I know that you have that FOIA report due the 13th, so I asked Claire to be your personal assistant and help you with both projects.\n\n\"Oh, sure. Not a problem Kev, when is the proposal due?\"\n\n\"The presentation is in the morning on Monday the 16th. I know it's already the end of January, but with Claire helping you should be fine. She's the best intern in the place and we're paying her for her hours with you. If she does well, we may have to give her your job.\" He winked at her and I chuckled. \n\n\"Its hers now if she wants it. I need a vacation anyway.\"\n\n\"Very funny Brandon, you know damn well you can't quit until we say you can. You're ours for life.\" He laughed as he walked out leaving me and Claire alone again.\n\n\"Well? What'll it be, boss?\" Claire turned and asked me.\n\n\"Ugh, no. Don't call me boss either. Just Brandon.\"\n\n\"Ok Just Brandon, what are we doing today?\"\n\nThis was new territory for me. I've never had any help before and I tended to micromanage my projects. But if I was going to do everything before the deadlines, I was going to have to accept her help. That meant telling her to do things. I was never very confrontational, and I never had to be anyone else's boss. I preferred doing things all by myself over putting someone else to any tasks.\n\n\"I'm not sure where to start to be honest. I'm so used to doing everything myself.\"\n\n\"Just tell me what you want me to do.\" She shrugged.\n\n\"Um, well, go get us some coffee, and we can discuss the mechanics and details of each project, and decide where to go from there. I'll get out the paperwork I have so far on the FOIA request while you're gone.\"\n\n\"Ok, I'll be right back.\" And she darted down the hallway.\n\nThe next several days were a blur of numbers, reports, and information about our new prospective client, while trying to keep things on track for the FOIA request. \n\nBefore I knew it a week had gone by and I didn't feel as if we were making nearly enough headway on either project, even with Claire doing nearly as much work as I was.\n\nWith a week and a half to go, I took to staying late after everyone left and working overtime. It wasn't the first time, and I enjoyed the time in the office to myself. I turned my music up too loud, took off my suit, tie, and dress shirt, kicked off my shoes, and had few beers while I chipped away at the excess work I couldn't fit into the work day. \n\nOn the Friday before the first deadline, I found myself still sipping some wine left over from a retirement party earlier that afternoon with Billy Joel blaring on my speakers, singing something about Catholic girls. Pandora wasn't perfect; but, I could forgive Billy Joel. \n\nI must have had more of the wine than I thought because I was singing along as I compiled and organized the chart. I had just got to the last chorus when Claire popped her head into my office. Whoever said white men can't jump has never seen me scared, because I'm sure that I could have shown Jordan a thing or two about getting some air. \n\n\"Holy shit!\" I yelled after reentering orbit.\n\n\"I'm sorry! I didn't mean to startle you.\" She claimed, not looking one bit sorry.\n\n\"Its ok, I wasn't expecting anyone else to be here. How did you get in?\"\n\n\"I got a copy of the key from Amy in case I need to cover for her again. I forgot my wallet, so I came back to grab it real fast. What are you doing here?\"\n\n\"I've been working late, to keep on track with the deadlines. \"You know, it's a violation of company policy to make unauthorized copies of keys.\" \"Brandon! You've been working late, and haven't asked me to stay? \"\n\n\"Um... no. I didn't think you'd like to stay. And I enjoy kicking off my shoes and relaxing in the office.\"\n\n\"And singing Billy Joel?\"\n\n\"Hey now, don't knock the classics.\" Great, I sounded like a hippy.\n\n\"Brandon, it doesn't matter what I want to do, if you need me to stay late, just tell me to. I'm your assistant, remember. You're supposed to tell me what to do.\"\n\n\"Yeah yeah... I know, I just assumed you had other things to do.\"\n\nShe smirked at that and waved, as if dismissing my comment all together.\n\n\"So where you off to now?\"\n\n\"Oh, just back home. Going to catch up on some TV shows. Don't stay too late Brandon, I'll see you Monday.\"\n\n\"I won't, have a good weekend Claire.\" \n\nShe smiled warmly and disappeared from sight. I heard a phone ring and she stopped moving to answer it. I couldn't help but overhear her conversation. \n\n\"Hello? Yes I found it. I know honey. I'll be there soon.\" She paused and giggled. \"I love you too.\"\n\nAhh... so she was seeing someone. This had to be a fairly new development, because word around the office a few weeks ago was that she was single. And why should she be single? She was an attractive young woman, she should have no trouble finding someone to make her happy. I was happy for her; but, happiness felt an awful lot like a missed opportunity. \n\nThe weekend came and went too fast; and, before I knew it, Monday had reared its ugly head. I made it through the morning without wanting to kill anyone, and stumbled into the lunch room to find Claire eating some vegetables out of a plastic bag, and a salad that clearly didn't understand the adjective 'exciting'. \n\n\"Oh for christsake, put the plants in the fridge for later. I'm taking you to lunch.\" It was no wonder she looked so tiny.\n\n\"Brandon! I was looking for you this morning, I finished my usual things and I'm ready to help with the projects some more. But you weren't in your office.\"\n\n\"I had to run a few errands and stop by the courthouse to pick up some deeds, but we can work after lunch. Let's go, put the bird food away, I wasn't joking. Were getting you a burger, maybe two.\"\n\n\"Hey, I like eating healthy!\"\n\n\"You can get light grease on yours then, and I'll eat your fries.\"\n\n\"I don't joke about fries, reach for them and I'll put a fork in your hand.\" She was stone cold serious.\n\n\"That's more like. Let's ditch the carrots and go get you some fries.\"\n\nShe laughed and gathered her things to join me at the elevator. I was able to give her a glance down on our way there. She had on a Navy blue pants suit that looked pleasantly tight in the rear with a frilly blouse that had ruffles around the v-shaped neck line that threatened to show the tiniest big of cleavage if she was to lean all the way forward. Maybe.\n\n\"So tell me about yourself.\" She turned and looked at me while we waited for the slowest elevator system in the city to begin moving toward our floor. \n\n\"Hmm? Uh, like what?\" I asked. \n\n\"Well, anything. I mean, I don't know anything about you other than where you work, and what you do here... other than stripping down to just your t-shirt, pants, and socks and rocking out to Billy Joel when everyone else leaves.\" She turned back toward the elevator with a sly smile. Some things you just never live down.",
        "\"It was one time! Ok, let's see. I live in a condo a few miles outside the city, north of the loop, and a few blocks away from the lake. I got my two year degree at a community college up north. My favorite color is orange, and I have a cat named Killer.\" The elevator finally arrived with a ding, and we were able to begin the descent down 15 floors that felt like 30 at the crawling speed of the old machinery. \n\nShe giggled, \"You don't seem like the cat type.\" \n\n\"Oh, it's a manly cat. Very fierce.\"\n\n\"How old is he?\"\n\n\"She.\" I corrected. \"She is three years old, and the cutest damn thing you've ever seen.\" She stifled another laugh as I said it.\n\n\"So is it really your cat, or do you have a girlfriend or something?\"\n\n\"Just me and Killer in the condo. Killer is very jealous, so I don't bring any girls home. What about you?\"\n\n\"I have 2 cats and a puppy at home. None of them sound as fierce as Killer though.\" She answered. I was looking for more guidance on her relationship status, but I felt like my intention in that question was clear. She was obviously avoiding answering it, so I dropped the subject. I was trying to think of something else to ask to avoid any awkward silences when she beat me to it.\n\n\"So how old are you, like really?\"\n\n\"What do you mean, 'like really'? Why would I lie about my age?\"\n\n\"It's not that, it's that everyone in the office really doesn't know anything about you. I mean, I'm sure Kevin does, and maybe some of the other department heads and supervisors, but all of us unimportant people and interns rarely see you, let alone talk to you.\"\n\n\"First off, everyone in the office is important, even the interns. Second, I'm just so busy all the time. I get to the office, I stay in my office, and I run out for lunch and then back to my desk. Actually, you're the first person I've gone to lunch with that wasn't for something business related or at the company's expense.\" We finally reached the lobby and headed out onto the street.\n\n\"You didn't answer my question,\" She pointed out, ignoring everything else I had just said.\n\n\"I'm 24.\" I said, while simultaneously pointing toward my favorite burger joint just a block away.\n\n\"Wow.\" \n\n\"Wow? What the hell does wow mean?\"\n\n\"It's a statement of wonder.\"\n\n\"Hilarious, why are you using it?\"\n\n\"It's just that we all thought you were 30, or at least closer to it.\"\n\n\"Fantastic, next you'll tell me these pants make my ass look fat.\"\n\n\"Nope, your ass looks great in those slacks.\" She stated very matter of fact.\n\n\"Uh, thanks.\" I stole a glance in her direction, but she wasn't showing any notable emotion. We walked into the burger place and were seated near the back, where we quickly placed an order for two burgers and fries. I ordered a beer to wash it down.\n\n\"Isn't that against company policy?\" She accused.\n\n\"Not when I do it. Now keep your mouth shut, or I'll sing like a bird about that key you have.\" I shot back. She put her hands up in mock surrender.\n\n\"Whatever you say, as long as I get a sip of your beer.\"\n\n\"You got yourself a deal. Now, tell me a bit about yourself.\"\n\n\"Well, let's see. I'm 18, I just started college last semester at UC, and I live about 30 minutes west of here in the suburbs.\" My beer arrived as she finished.\n\n\"Did you say you were 18?\" I clarified.\n\n\"Yeah.\"\n\n\"You definitely cannot have any sips of my beer then.\" Then I promptly took a long gulp from my beer.\n\n\"Oh come on. Did you seriously think I was 21?\"\n\n\"I didn't really think about it. I'm not used to hanging around with anyone under the age of 40 anymore.\"\n\n\"Into cougars then, I respect that.\" She joked as our food arrived.\n\n\"Ha. Ha. Very funny, my love life is no concern of yours, little girl.\"\n\n\"Oh, I'm a little girl now?\" She rifled through her purse and came out with her phone. I was about to ask her what she was doing when the flash went off.\n\n\"What the hell was that for?\" I asked while trying to blink away the spots in my eyes.\n\nShe turned her phone toward me and on the screen was a picture of me, holding a beer. There was a long pause, then I checked for any staff and handed her my beer, which she gladly accepted and took a smug swig from.\n\n\"I can't believe you just blackmailed me.\" \n\n\"So what do you do for fun, Brandon?\" She took another swig of my beer.\n\n\"Oh you know, provide alcohol to minors, cards every Wednesday, late night Netflix.\"\n\n\"So you don't have any hobbies? Nothing you look forward to doing?\"\n\n\"Well, I used to go to a lot of concerts, I love music, and I really do play cards with some guys from my condo association on Wednesday. I used to read a lot too, but I just don't have the time right now.\"\n\n\"That's sad; you should make more time for yourself.\"\n\n\"Oh, you know, one day I will.\"\n\nShe shook her head at me and finally gave me back my beer. \n\n\"Do you have any family?\" She asked.\n\n\"Yeah, they're all in Idaho. They moved there when I was in middle school. I moved back as soon as I finished High School. I couldn't stand the emptiness of the area after growing up in the city. I needed something busier. Sometimes I think that was a mistake.\" The waitress came by and placed two heart shaped cookies in front of us. I stared at them in confusion but was never one to turn down free cookies. \"What about you, any family?\"\n\n\"Yeah, I still live with my parents now. I can't afford to pay for college, work an internship that up until recently wasn't paying me anything, and live on my own.\"\n\n\"That's understandable.\" I assured her. \"You'll get it together eventually. You probably have a job waiting for you at the firm when your internship is up. That's what happened to me.\"\n\n\"I would like to get my degree first.\"\n\n\"Then you can work part time until you're ready.\"\n\n\"Do you think they'll let me do that?\"\n\n\"I'll put in a good word for you. Trust me, Kevin will do whatever I tell him is best. He's the reason I have this job, we go back a ways.\"\n\n\"How did you meet him?\"\n\n\"He's my Dad's best friend. I've known him forever really. It's part of the reason I came out this way. I knew that I could get some experience and maybe a part-time job here until I could find something sustainable, but it just kind of worked out.\"\n\n\"That's really nice! Lucky you.\"\n\n\"Yep. Well, lunch time is just about over. Let's call it quits and head back to the office before they start wondering if I kidnapped you.\"\n\n\"It's always the quiet ones.\" She laughed. \n\nWe made it back to the office and parted ways under a disapproving glare from Amy at the front door. God only knows what that's all about, and why did she decorate the office window with little baby angels?\n\nI focused the rest of the week on getting the grueling work for both projects out of the way, and handing over to Claire as much as I thought she could handle. Thursday, February 12th was here before I knew it and I had the FOIA request due the next day. My plan was to try and knock out the rest of the FOIA request today, and somehow finish the proposal on Friday so I wouldn't have to work during the weekend. I was zoned in and punching at my keyboard when Claire popped in and yelled my name, succeeding in scaring me senseless for a second time.\n\n\"Brandon!\"\n\n\"Damn it, Claire.\" I finally muttered while clutching my chest.\n\n\"You scare too easily. It's because you're so high strung.\"\n\n\"Is that what you came in here to tell me? Because if so, I'm going to throw this stapler at you.\" I lifted the stapler for good measure.\n\n\"No, it's snowing! Like, a lot. They say that it's going to be very bad. I wanted to make sure you didn't stay late tonight and get stuck in it.\" She actually sounded concerned.\n\n\"Well, I still have a lot to do, so I probably will stay late today. I'll be fine though, I promise.\"\n\n\"Brandon! If you have a lot to do, why haven't you given me more to work on?\" She was visibly disappointed in me, like a mother scolding a child.\n\n\"I can finish the rest, really. I'll just need to stay a little later to get it done.\"\n\n\"Then I'm staying with you. We can finish sooner and get out of here before it gets really bad.\" Her tone didn't leave it open for discussion, and she punctuated it by walking out of my office. \n\nAbout an hour later, with a half hour left in the day, she showed back up in my office, again without knocking. I was on the phone with someone else, so I held up a finger and she took a seat across from me. I politely listened to the client on the other line, adding affirmation or agreement where it was needed. I had already included this laundry list of items in our reports, but when the client wants to reiterate, you listen. I looked at Claire, who was on her phone, and I glanced at her chest, and then noticed that this was the first time I had seen her hair up in a ponytail. Wait a second. Was that cleavage? My eyes darted back down and saw that she must have invested in some kind of push up bra, because she was showing off a little boob at the top of her low cut, black long sleeve shirt made from some thin and snug material. It was tasteful, but pleasing to the eye regardless. My eyes darted up just in time as she put her phone down and looked up at me. \n\n\"You know, cell phones are also against company policy.\" I pointed out for my amusement alone and possibly to cover the fact that I had just been ogling her body.\n\n\"Excuse me?\" The client said on the other side of the line.\n\n\"Oh, no not you, sorry sir.\" I smacked my own forehead as Claire covered her mouth to stifle a laugh. \"I was just scolding one of the interns as she walked past my office. You just can't find good help these days.\" I sneered at her and she stuck her tongue out at me. \"Yes sir, I understand. Yes sir, you'll have it first thing tomorrow. Alright, have a good day, bye.\" I hung up and glared at her.\n\n\"Don't get mad at me for your own stupidity.\" She scolded.\n\n\"You shouldn't be on your phone anyway! You'll have to text your boyfriend some other time.\" She gave me a quizzical look and then shook her head.\n\n\"How late are you staying tonight?\" She said instead.\n\n\"As late as it takes, probably another two and a half hours worth.\" \n\n\"Is that factoring in me staying tonight?\"\n\n\"You don't have to stay; I told you already, I'll be fine.\"\n\n\"I'm staying. So we should be able to knock it all out it an hour or hour and a half.\"\n\n\"Is this why you came in here, to tell me what I'm doing?\" I laughed.\n\n\"Pretty much.\"\n\n\"You know, I'm your boss. You're my assistant, remember?\"\n\n\"Well then, when you start enforcing your rules with more backbone, I'll start listening. Just tell me what to do.\" She got all smug like she does when she thinks she's won something.\n\n\"Fine. Touche. Go grab one of the laptops. You organize everything and code each file, I'll finish the reports to send to you, and then you can clean it all up to send to the client.\"\n\n\"Deal.\" She hopped up and bounced down the hallway, her white flowing skirt was threatening to get caught in the flow of air and show more of her creamy white thighs then could be considered decent. I sighed inwardly. She had been dressing to impress more often. I guess whoever is dating her now must be feeling pretty happy about himself. \n\nWe knocked out the work in about an hour, clicking away and chatting idly about music and books that we had heard or read. By the time we closed up and looked out the window, there was probably two inches of fresh snow on the ground. Perhaps it was abnormal weather for the middle of February, but nothing to write home about.\n\n\"This, this was the bad storm?\" I turned and asked her. \n\n\"Hey, the weather guy said it was going to be really bad.\"\n\n\"I want a job where I can be wrong half the time and still get paid.\" \n\n\"It's not that easy you know; they just go with what the numbers suggest and what has happened in these conditions before... I think.\"\n\n\"I wouldn't know, but I'm not about to defend them until they can tell me when it will and will not rain on a regular basis.\" \n\n\"I think it's supposed to snow more tomorrow and this weekend. I hope it doesn't ruin anyone's plans. Do you have anything going on?\" She asked me while staring out the window.\n\n\"Not really. Just another weekend at home with Killer. I'll probably get started on some reading material for the next R&D conference in a few weeks.\"\n\n\"So no big plans?\"\n\n\"No, should I have big plans?\"\n\n\"Well, I just thought because of the holiday maybe you'd be up to something.\"\n\n\"Holiday?\" I asked.\n\n\"Saturday is the 14th, Brandon.\" She rolled her eyes at me.\n\n\"So?\" No light went on in my head.\n\n\"Of February.\" She exasperated. \"It's Valentine's Day.\"\n\n\"Ooooh... Right.\" Images of heart shaped cookies and angels and pink everything floated through my consciousness connecting dots like the slowest dial-up connection from the 90's. \"Well, regardless, I'm still doing nothing. Maybe I'll tip the Chinese delivery guy an extra five or something.\"\n\nShe laughed. \"Ok then. I'm sure he won't find that creepy.\"\n\n\"I'll buy him a card too.\"\n\n\"Please do, and then get a picture of his face when you hand it to him.\" We shared a good laugh and sighed. I checked my watch again and glanced out the window.\n\n\"Well, thanks for staying with me Claire. I'll see you tomorrow, and we can knock out this proposal and be done with everything.\" I held out my hand, which I immediately regretted because it was awkward as hell. She pushed my hand down and gave me a quick hug. \n\n\"Handshakes are for losers Brandon, I'll see you tomorrow.\" She made an 'L' sign on her forehead and took off down the hallway.\n\nThe following morning I woke up early to find an additional four inches of snow and shook my head. Half a foot was a little out of place this late in the winter. Still, it was only snowing lightly now and all the roads had been plowed and salted. I got to work early to find Claire already in my office, turned with her back toward me, bent over my desk, rummaging through papers there. Her blond hair was curled and cascaded around the sides of her face. She had on a short deep dark red dress made of some sort of cloth material that reminded me of a summer dress, but for winter. It hugged her form in a flattering way that made her look less wiry and more petite with hints of small curves. Her cute butt was perked up in the air and a few inches below were sheer black tights that led to dark red heels which matched her dress.\n\n\"Ahem, can I help you miss?\" I said, part curious as to what she was doing, part embarrassed to have stared for so long.\n\n\"Oh!\" She turned with a start and her dress fluttered up around her thighs, inching higher than it was originally intended to be. She brushed her curls out of her face so they set upon her shoulders and smoothed out her dress. The front was striking with thin dark lines swirling around in a design that accentuated her small curves. The top of the dress plunged down the front of her neck to about mid chest level, showing small soft creamy white mounds of flesh that perked up slightly more than usual. The bra she had on must do wonders, because the way they were pushed up and together made my hormones take notice. \"Brandon! You scared me, creeping up like that.\"\n\n\"I wasn't exactly being sneaky. What are you doing here?\"\n\n\"I came in early to organize all the client info files we put together so it would be easier to reference them during the proposal.\" She lifted a handful of the files that I had thrown together sometime last week.\n\n\"Awesome, well let's see if we can't bang this out so you're not late tonight.\" She gave me a quizzical look, and my eyes betrayed me and stole another glance at her dress. She looked down and somewhere a light lit up. \n\n\"Oh, I don't have anything going on tonight. I just wanted to wear this today, with Valentine's Day being so close and all.\" She explained.\n\n\"Wow, well you look great. I almost want to know what you'll wear tomorrow.\" I joked.\n\n\"Nothing impressive, probably just some warm pajamas and fuzzy socks.\"\n\n\"So, no date?\" I asked, genuinely confused.\n\n\"I'm not seeing anyone right now. So, no.\" She went back to shuffling the papers on my desk.\n\n\"Oh! I assumed you were. I heard you on the phone the other day when you caught me singing.\"\n\n\"Ease dropping were we?\"\n\n\"It was hard not to hear you; we were the only ones in the office.\"\n\n\"I was just talking to my little brother. He's the cutest kid you've ever seen.\"\n\n\"Oh, I see.\" My mind took note of the change in ground and I made a quick attempt to avoid awkwardness. \"He's probably not as cute as my cat though.\"\n\n\"Nuh uh, he's probably ten times cuter than your cat.\"\n\n\"Ok, that's enough children.\" Kevin commanded as he walked into my office.\n\n\"Kevin!\" I exclaimed. \"You're here early.\"\n\n\"Yeah. I came in early to finish some stuff up. Word on the street is that the snow is going to pick up again early afternoon. I don't want to get stuck here.\"\n\n\"Really?\" I asked.\n\n\"Brandon, do you not watch the news?\" He asked. I heard a giggle and shot a look toward Claire who was grinning ear to ear.\n\n\"Nope, it's too depressing.\"\n\n\"You don't have an app on your phone?\"\n\n\"I think I do somewhere. I just never check it. I live five miles away. I've never been too concerned about what the weather is going to be like. I get up, it's cold, it's warm, or it's raining. I dress accordingly and go to work.\"\n\n\"Well, today it's going to snow. So plan accordingly. Great work on the FOIA request, the client said they got everything they needed. How's the proposal?\"\n\nClaire, having finally stopped grinning at my lack of weather knowledge, chimed in. \"We're almost done. Just a few more things, hopefully we can get it done before the snow gets too bad.\"\n\n\"Ok, good luck. I'll see you guys later.\"\n\nAs he walked out, Claire turned toward me. \"We better get moving if you're going to make your date with Killer tonight.\"\n\n\"Oh shut it.\"\n\nWe worked the rest of the morning on organizing all our information and files. Claire went out and got us burgers and we scarfed them down. Somehow we got a few words in between bites.\n\n\"So you're really single?\" She asked.\n\n\"Yep. No time for a gal, work keeps me too busy to hold a serious relationship. What's your excuse?\"\n\n\"Work and school take a lot of my time up. Living with Mom and Dad and my little brother doesn't necessarily invite the boys from the college in. They rarely leave the campus; all the easy girls are in the dorms.\"\n\n\"Where can I find these dorms?\" I cracked.\n\n\"Yeah, let me just write that down for you.\"\n\n\"So you're telling me that there isn't a single guy in that college that is after something more than one night stands?\"\n\n\"Oh, I'm sure there are, but all the guys I run into have the maturity level of a middle school kid. They still laugh when someone says boobs.\"\n\n\"So you're looking for an older, mature man. I hear Dave in accounting is single.\"\n\n\"Ew! He's like, older than my father!\" She threw her napkin at me in mock disgust.\n\nWe finished our burgers while continuing to joke around. After Claire tossed the garbage she came over to the desk and handed me a piece of chocolate. It was a tiny little thing, shaped like a heart with red foil wrapping. She sat down and unwrapped one of her own while I looked at mine. \n\n\"It's not poison, see.\" She popped hers in her mouth and retrieved another from a small bag. \"I just thought they looked cute, and you might like some. So I grabbed them while I was out.\"\n\n\"Thanks. Does this mean I'm your Valentine now?\" I chuckled as I popped one into my mouth. She didn't respond, instead she looked out the window and gasped.\n\n\"Brandon! It's really coming down now!\" I turned around and was met by the blizzard I had forgotten was coming.\n\n\"Shit. We better finish this written portion so you can get out of here.\" I quickly flicked my computer back to life and started adding the finishing pages on the proposal script while Claire stacked the files against the wall and loaded all the documents we had typed up into the company Cloud Drive. We finished everything around three o'clock and all I had left to finish were the presentation slides. I thought it would be best if I told Claire to go home before it got too bad. We had already accumulated six more inches on top of the six from last night. ",
        "\"Really, it'll only take me a little bit.\" I assured her for the third time. \"I can be out of here in an hour or two. If I can't get a bus or taxi, it's only five miles to my place and I've walked it before.\"\n\n\"It'll be dangerous. Call me so I know you made it home.\" \n\nI assured her I would call her and bid her good luck on her five block trek to the train station. As soon as she left I took a few seconds to gather my thoughts. So, Claire was single. I assumed she was seeing someone because I heard her talking on the phone , and because of the way she had been dressing lately. Not that someone needs a significant other to dress up nice, but I figured that was the reason.\n\nI took the next half hour to finish the slides and then went to print everything we needed. The damn copy and printing machine was giving me trouble again; so, I had to shimmy to the side of it, duck under a shelf and open up the back of the machine to get to the jam.\n\n\"Stupid paper. Stupid old ass giant printer. Stupid broken rollers. Just print the damn thing so I can go home.\" Needless to say, I wasn't exactly having fun.\n\nI had just grabbed the last bits of paper out from a particular roller when I heard my name. It took me off guard and I turned sharply, cutting my arm on a piece of the printer still jutting out. I swore and tried to stand up straight, only to run my head up into the shelf above me. I fell to the ground and tried to blink the stars away. I heard a gasp, but I was still groggy and in too much pain to care. That damn shelf hurt. \n\nI looked over and saw Claire kicking off her snow boots. For the life of me I couldn't understand why she would be taking off her shoes at a time like this. As confused as I was about her boots, when she grabbed at her tights and yanked them down, I was absolutely floored. Either I had hit my head so hard I was now hallucinating wonderful things, or, I was still in the land of reality and my brain wasn't processing things right. I tried to voice my confusion, but before I could say anything, Claire had knelt beside me ,balled her tights up and pressed them against my arm. The snow must be pretty high, because a part of them was cold and wet, even though she had changed out of her heels into snow boots. I looked over at Claire and saw that her face was bright red; and, as coherency flickered back to life through the pain, I found I could form words again with my mouth.\n\nUnfortunately, coherency was slow to draw speed; so, the first think I managed to spit out wasn't anything profound. \"What?\" \n\n\"Are you ok? Are you ok?\" She sounded hysterical.\n\n\"I'm... what are you doing here?\" Two thought processes couldn't really run at the same time in my head yet. I wanted to tell her I was fine; but, I still couldn't grasp why she was back.\n\n\"Can you see ok? Is your vision blurred? How does your arm feel?\" \n\n\"I'm fine. Why are you here?\" I was finally getting back my full cognitive functions.\n\n\"I had to come. The trains have stopped. Are you ok? How do you feel? How is your arm?\"\n\nI used my free arm to grab onto her hands that were pressed so hard against my arm that I was forced to lean away from her. \"Calm down. I'm fine.\" I was still in quite a bit of pain, but it was starting to wane, and I could think clearly again. She took a few deep breaths but kept staring into my eyes like I might close them and die at any moment. I shifted my weight so I could sit up straight and rubbed my head. I didn't feel anything wet up there; so, I just banged it up pretty good. I could probably look forward to a headache soon. I looked down at my arm; it was still covered up with her tights.\n\n\"It doesn't hurt that bad, let me see.\" I said as I tried to push her hands away. \n\n\"No! Wait.\" She clenched her eyes shut and turned her head away. \"Is it ok?\"\n\nI squinted at her, trying to figure out what the hell was wrong, and gave up trying to decipher it. Perhaps I wasn't functioning at one hundred percent yet after all. I pulled the tights away and took a look. It was just a light cut, albeit a long one; And, there was a minimal amount of blood smeared around it. I don't think it was even really bleeding anymore. \n\n\"It's fine.\" I said. \"You know, it's not even that bad, you could have just gone and got some paper towels or something instead of ruining your tights.\"\n\n\"Yeah, well.\" She muttered with her eyes still clenched shut. \"I don't like seeing other people's blood. It freaks me out. I kind of panic.\"\n\n\"I hadn't noticed.\" I quipped. \"It's really just my head that hurts. Let me go clean this up.\"\n\n\"Did you cover it back up?\" She asked timidly.\n\n\"Yeah, yeah. It's hidden.\"\n\nShe let out a sigh of relief and opened her eyes. \n\n\"Let me go clean up. I'll be right back. In the meantime, see if you can get this printer to give me the last few pages I need.\" \n\n\"Ok.\" She agreed. I went to my office and grabbed my button down shirt before I went to the bathroom to clean up. My head felt much better, but I was still going to have to nurse a small headache. I rinsed the little bit of blood on my arm, put my button up shirt on over my t-shirt and rolled my sleeves so the cut couldn't be seen before heading back to the printer. Claire had successfully battled the printer for the sheets I needed. \n\n\"So, why are you here again?\" I asked.\n\n\"Well, I made it all the way to the station just to find out that they had stopped all outbound trains until the snow slows down some. They said the estimated delay was 3-5 hours. So, I called my house and left them a message that I was stuck at the office. I came here to help you. If I'm stuck down here, I might as well stay and finish.\"\n\n\"Oh, well, I'm all finished now.\"\n\n\"Oh.\" She paused, seemingly mulling something over. \"Well what are you going to do now?\"\n\n\"I guess I can stay here with you until the trains start up again, unless you want to try and catch a taxi to my place?\" \n\nHer eyes lit up for a second before she looked at the ground and muttered. \"There are no taxis. I didn't see anyone else except for the people already camped out at the station.\n\n\"Well, we could walk to my place, but if it's as bad as you say it is out there, we're probably better off just staying put.\" I was slightly upset that I wasn't going to be bringing her back to my condo; but, I suppose being alone with her at the office wasn't all that bad either.\n\n\"Alright, well let's just get this all cleaned up, and then we can scour the office fridge for something to eat.\" She grabbed the papers off the printer and headed to my office, grabbing her boots along the way.\n\nWhen we had everything set I slumped into my chair and stared out the window at blizzard. It didn't show any signs of stopping. I turned to find Claire sitting in the chair across my desk slipping on black, thick, heavy knee high socks. When she crossed one leg over the other I glimpsed further up her dress than she probably would have appreciated. \n\n\"What? A girl has to be prepared.\" She said when she saw me staring at her legs.\n\n\"Oh not that.\" I said quickly, and then quietly cursed myself. \n\n\"Then what are you staring at?\"\n\n\"I...\" Good job Brandon, you should have just gone with her carrying around socks. \"I just... you have nice legs.\" Nice legs? What the hell Brandon? Now she's definitely going to think you're a pervert.\n\n\"Oh.\" She blushed. \"Well thanks. I'll go, um... check the fridge.\" She carefully uncrossed her legs ,stood up and walked out of my office in her black knee high socks without putting her shoes back on.\n\nI put my face in my hands and sighed. God, I could be stupid sometimes. I saved my work on my computer and shut it down for the night. I straighten up my desk the best I could in my attempt to stall and headed toward the kitchen. \n\nWhen I got there, Claire had pulled out one of the tables from where they were all pushed together and put two chairs on either side. On the table was a vase of fake flowers that we usually kept in the entry way, and two old birthday candles lit on either side of it, sticking out of two apples.\n\nThere were paper plates set with plastic silverware and napkins from McDonalds. On the plates were some mini pizza bagels, half a hot pocket each, and some chips. I was still staring at the arrangement when Claire appeared in the doorway with two cans of Coke from the vending machine. \n\n\"It's not steak, lobster, and red wine, but it'll have to do for our makeshift Valentine's dinner.\" She said. \n\n\"You're a day early for that, you know.\" I chuckled. \n\nShe shrugged. \"I guess you'll just have to make it up to me tomorrow. \n\n\"Are you asking me on a date?\" \n\n\"No. I'm asking you to ask me on a date.\"\n\nI couldn't help but laugh. \"Now dating co-workers is definitely against company policy.\"\n\n\"Oh please. Everyone knows that Amy is screwing Kevin. I doubt anyone would care if two people in the office had a serious relationship.\"\n\n\"Well... what Kevin does in his spare time is none of my concern. Can't account for taste, but hey.\"\n\n\"Well? Are you going to join me or what?\" She demanded.\n\n\"Hold on just a second.\" I ran back to the supply office and took a full bottle of wine out from a toner cartridge box. I saw Kevin hide it there after the retirement party last week. I came back to the kitchen and grabbed the plastic wine cups that we kept laying around for special occasions. \n\n\"Aha! We do have wine!\" She exclaimed happily. \n\n\"I know a guy.\" I said with the best bold face lie expression I could pull off. Apparently she wasn't buying it because I seemed to have caused a fit of giggles.\n\n\"You're not half bad when you're not all wound up for work, you know?\" She said seriously. \n\n\"Hey! I'm tons of fun, ask anyone.\" I protested.\n\n\"Compared to what?\" She asked dryly. I took it as rhetorical, and sat down at our freezer feast. \n\n\"So...\" I mused. \"Come here often?\"\n\n\"Monday through Friday.\" \n\n\"Yeah, I'm a regular here too.\" I sighed and filled the two wine glasses.\n\n\"A toast!\" She held up her glass to me.\n\n\"A toast?\" \n\n\"To us!\"\n\n\"To us?\"\n\n\"For finishing the proposals on time!\"\n\n\"Oh, sure.\" We clanged our glasses together and I took a sip out of my glass. Claire, on the other hand, drained hers. I looked at her empty glass suspiciously as she held it out to me.\n\n\"Hey, I don't have to drive anywhere.\" She said defensively. I couldn't argue with that logic so I gulped down my glass and poured us another.\n\n\"I can be classy and hold to one glass of wine when you take me out on a real date.\" Claire giggled.\n\n\"I can't even remember the last time I was on a real date.\" I said, more to myself than Claire.\n\n\"It's been that long then?\" She asked as she took another sip of wine.\n\n\"Too long. A couple of years probably.\"\n\n\"Wow, that is a long time.\"\n\n\"Tell me about it. I remember the good days in high school and college, back when I wasn't constantly working and busy. I'd have time to find a girl at a party, take her out a few times, give her a good time. Then there were those wild and crazy nights. Well, you know, typical young people stuff.\"\n\n\"I don't know actually.\"\n\n\"What do you mean? Didn't you go out and stuff in school?\"\n\n\"Well I went on a few dates, but I never really partied or had any 'wild and crazy nights.'\" She added her own finger quotations and rolled her eyes.\n\n\"What about your boyfriends? Were they all as tame as you?\"\n\n\"My boyfriends were as tame as any other non-existent boyfriends.\"\n\n\"You've never dated anyone? I find that hard to believe.\"\n\n\"I've been on a few dates, but never anything official. It's hard to find a guy who is interested in more than just getting in my pants. Raging hormones be damned, I wasn't about to give it up to any of those assholes. I'd rather stay a virgin.\" She held out her empty glass to me as I choked on my last sip.\n\n\"You're a virgin!? You can't be serious.\" I hadn't considered that she had never been with someone before.\n\n\"I'm dead serious!\"\n\n\"Everyone starts so... early these days though.\" I poured us some fresh wine.\n\n\"Not all of us.\" She sneered, then sighed. \"Not for lack of trying.\"\n\n\"Don't rush, you'll find someone when the time comes.\" I assured her, mentally calculating how many dates it might take for that time to come.\n\n\"I know, I just get antsy sometimes. I want a real relationship that comes with all the perks.\" She accentuated the world 'all' suggestively. \n\n\"I hear you. Being celibate wasn't my first choice either.\" I joked.\n\n\"It's probably why you are so stressed out all the time. You just need a good lay!\" She laughed, whether at her own joke or my surprised expression, I didn't know. I just didn't imagine she was capable of crude jokes.\n\n\"I'm not that high strung. Thank you very much.\" I crossed my arms in mock indignation.\n\n\"Brandon, please, you're like a rubber band ready to snap.\" Claire was clearly enjoying this opportunity to rib me; and, despite some of the truth behind her words I was having a genuinely good time. I felt a little warm and fuzzy as the wine worked its way through my system. I noticed Claire's cheeks looked a little flush, either from laughing or the wine. I suspected the latter. \n\n\"Well then little miss perfect. If you're getting as much action as I am, what's your secret to a stress free life?\"\n\nClaire ducked her head and looked around the room as she set down her wine glass, and then motioned with her fingers for me to lean forward. I went along with her act and leaned in, turning my ear toward her as she whispered. \"They make toys for that kind of thing.\"\n\nI pulled back with legitimate surprise on my face. This conversation had taken an interesting turn, and I feared for the state of the wine box.\n\n\"What, do you just go out and hook up with someone at a club or something?\" She asked me pointedly.\n\n\"What? No. I told you I don't have much of a social life.\"\n\n\"Well then, what do you do about those... urges?\" She gestured vaguely with her hands.\n\n\"The same way any other single guy does.\" I said defensively.\n\n\"Then why are you so surprised that I have a toy? Women have needs to you know.\"\n\n\"I... just didn't think about you that way. That's all.\"\n\n\"Is that why you were staring at my legs then?\" Her eyes sparkled mischievously.\n\n\"No... uh... well... I just...\" My mouth moved freely but I couldn't get any input from the cognitive parts of my brain.\n\n\"Look, Brandon, let's not pretend that we aren't attracted to one another. It's silly and downright frustrating. I know why you were looking; it's the same reason why I look at your ass when you walk down the hallway.\"\n\n\"You look at my ass?\" I said incredulously. \n\n\"You don't look at mine?\" She countered.\n\n\"I...\" She gave me a no nonsense look that suggested she already knew the answer. \"I do.\" \n\n\"That wasn't so hard, was it?\"\n\n\"I don't typically find myself admitting to staring at a woman.\" \n\n\"And I don't typically find myself in the office flirting with my boss over a box of wine.\" She set her empty glass in front of me and winked.\n\n\"Oh, this definitely isn't flirting. That's against company policy. This is just... an employee bonding program.\"\n\n\"Oh is it now?\" She said in mock surprise as she grabbed a small pizza bagel. \"And do you treat all of your employees to such a grand meal?\"\n\n\"Of course, though the boxed wine is only for the firm's best employees.\"\n\n\"So I'm one of the best then, huh? So can I ask you for a raise?\"\n\n\"Nope. Sorry, that's Kevin's job.\" I laughed. \n\n\"I think Amy would have better luck asking for a raise than I would.\" She pointed out coyly. \n\n\"You don't need to sleep your way to the top. You're a pretty girl, you're smart, you have a great personality, you work well with others, and you know how to get shit done. You'll do just fine in life.\"\n\nClaire might have blushed; but, her cheeks were already rosy, so it was difficult to be sure. She looked at me funny for a few moments but then shook her head and chuckled. \"Why Brandon, that almost sounded like a professional recommendation.\"\n\n\"I can put it on company letterhead if you wanna use it as a reference.\" I stood up and began to clear the table of all but the wine.\n\n\"You're funny.\" She didn't look at me, but rather at the table when she said it.\n\n\"Me? You think I'm funny?\"\n\nClaire tore her gaze away from the fascinating fold up table and looked at me with a goofy smile on her face. \"Have you ever danced, Brandon?\"\n\nI couldn't help but laugh. \"No. I most definitely do not dance.\" I dumped the plates and napkins into the garbage and went to the sink to wash my hands. I was startled to feel something touch my back and even more surprised to see it was Claire. I didn't even hear her get up. She rubbed her hand up and down my back as I rinsed the soap from my hands.\n\n\"You've never danced then? Not even a little bit?\" She looked up at me. Her blue-grey eyes twinkled in the less than romantic florescent lighting.\n\n\"Does it look like I dance? How much have you had to drink?\" I chuckled as I turned off the sink.\n\n\"I just figured that, with the way you keep dancing around the opportunities to make a move on me, you had to have started somewhere.\" She was still running her hand up and down my back, but was staring at the sink where I still held the handle.\n\nI didn't know what to say so I just looked at her. She turned her gaze back over to me and her eyes met mine. I looked into them for a few seconds, but my eyes quickly dropped to her lips as her tongue darted across them. A light shade of red covered them and they glistened just slightly. I desperately wanted to lean in and take them between my own - to see what they tasted like. I was lost in the idea of spending hours kissing her, only pulling away long enough to breathe. Claire put her hand on my shoulder, and I snapped out of the day dream her lips had induced. She turned me slightly from the sink so that I was facing her and took a small step forward so that her body touched mine. She again looked up at me, this time expectantly.\n\nMy eyes darted from her eyes to lips several times in succession as my mind raced. Should I allow this? What was there to lose? What if she didn't like it? What if someone found out? I'm like six years older than her, is that weird? I'm her boss; that is definitely against company policy. I really want to kiss her though.\n\nShe interrupted my thoughts by leaning in toward me. Her eyes were staring right into mine and I couldn't break her stare as she inched her lips closer toward mine. I leaned in slightly, trying to decide if I should hold her eye contact or close my eyes when she brought her face to the side of mine. I felt her nose brush against my cheek in a small semi-circle in an almost a nuzzling gesture. She put a hand on my neck and I lowered my face as she wrapped her fingers around the back of head and pulled me down toward her. Then she put her lips on the side of my face lightly and brushed them back to my ear. I felt her hot breath against the side of my face as she whispered to me. \n\n\"It's entirely too quiet in here for you to be thinking so loud.\" Her lips brushed against my ear with each word. Suddenly music was playing my eyes shot toward the source. Claire had just put her phone on the counter next to the sink and it was playing a soft light tune. She took my hand in hers and let her other hand fall from my neck to my back. Then she stood and waited.\n\nI wasn't lying when I said I don't dance. I really don't dance, except for that one time at that wedding when I had entirely too much to drink. This wasn't that kind of dancing though. The music playing now only required that you hold each other and move slowly in a circle with some swaying movement in your body. Even someone with two left feet could accomplish that. So I placed my other hand around her waist and moved to the music.\n\nI stepped on her within the first minute. I swore under my breath and apologized, but she only giggled and moved closer into my body. She let go of my hand and put it on my shoulder, and rested her head on my chest, leaving me to place both hands around her back. We were essentially hugging while moving in a circle in a barely noticeable rocking sensation that may or may not have been to the rhythm of the soft music she had playing. There was a dim light coming from the little birthday candles she had stuck in the apples on the table that helped set the mood in its own odd way. If you closed your eyes, it almost seemed romantic, the way Valentine's Day should be.",
        "The song on her phone ended, but after being so close to Claire for the past few minutes I was sure I didn't want to let her go. I stopped moving when the music did and she looked up again at me, her eyes met mine and the blue grey color sparkled as she studied my face. I knew what I wanted, and I threw all cares and caution out the window as I slid my hands up her back and over her shoulders to pull her slightly away from me. I brought my face to hers, not all at once, but in small measures forward, ensuring she knew my intentions. I was so close I could feel her breath on my lips as I slid one hand to the side of her face. Meeting no resistance, I closed the small space between us and brushed my lips against hers. It was a light brush but electricity flowed from the contact into my body granting courage I didn't have before.\n\nI kissed her again and I felt her sigh as our lips locked together. I cradled the side of her face with my hand and used the other to pull her closer to me so that there was no space between us. She placed both of her hands around my neck and held me there, as if I might try to pull away. Warmth flooded my chest as I held her against me; and, our lips moved against each other, soft caresses of skin that folded into one another like perfect pieces of a puzzle. We stood still but her body seemed to move under my touch, slightly turning one way and then the other. I kept my body flush with hers as our kiss became less soft and more passionate. My face felt hot as we embraced and our lips devoured each other's. I sucked in her bottom lip into my mouth and slid my tongue along it; the faintest taste of wine lingered there. Then she caught me off guard as she pressed her tongue into my mouth and danced between my lips for a brief moment. I let my teeth scrape against her lips with each twist and turn of our mouths, desperately wanting more of her with each passing second. \n\nI'm not sure when we started moving, but I found myself against the counter with Claire pressing into me. Her breath was ragged and I felt her heart beating in her chest nearly as fast as mine. She finally pulled her lips from mine, panting as she stared up at me. Her chest heaved; causing me to stare at the two small mounds pushed together showing liberal amounts of cleavage in her dress. Claire followed my gaze and giggled, but then took to kissing my neck. Her lips and tongue danced across my skin as she nipped at my neck and showered me with quick light delicate kisses. She began to unbutton the top of my shirt and continued her assault of kisses down the front of my chest. My muscles tightened and my skin tingled under her lips. I put my hand on the back of her head and felt her move lower with each button undone until finally the shirt was off and lips and tongue traveled along the top of my belt. \n\nI think it was at that point that we both noticed I had an erection. I wasn't sure exactly what to say when she saw it. It dawned on me that she may not have ever seen one before if she was a virgin. I mean, there were pictures and movies and even her toys; but, it's not the same. She looked excited and nervous all at the same time as she sat there staring at it. I bent over and helped her up, bringing her into another passionate kiss, careful to keep from pressing my erection into her. I begrudgingly broke away again and looked at her, unable to read her expression.\n\n\"Look, Claire, things moved pretty fast there. We should stop while we're ahead. Pick this up again when we're ready.\" Even as I explained it aloud, I felt opposing opinions forming up inside my body, each calling the other a bunch of dirty names.\n\nShe looked up at me and a smile spread across her face so big it was almost comical. Then she grabbed ahold of my erection and giggled. \"Looks like you're ready now.\"\n\nI tensed under her touch and felt my knees threaten to give out as the pressure from her hand sent a wave of pleasure throughout my body. \"That's not what I meant.\" I managed.\n\n\"I know what you mean Brandon. Thank you for saying that, but I know what I want, and you're going to let me have it.\" She almost sounded cocky.\n\n\"I see.\" I chuckled under my breath. \"And what if I don't let you?\"\n\n\"I'll just have to tie you up.\" She smirked at me.\n\n\"Kinky.\" I said in my best deep faux-sexy voice.\n\nShe laughed and kissed me again. \"Promise to take me out tomorrow?\"\n\n\"It would be my pleasure.\" I said honestly as I patted my lips across her neck.\n\n\"Don't you stand me up either! I know where you work.\" She teased.\n\n\"Good thing I didn't give you my address then.\" I laughed and continued to peck her neck and shoulders.\n\n\"I've got a pretty good idea about where it is, you said it's north of the loop, about five miles outside the city. I think you also said it was just 'a few blocks from the lake.'\"\n\nI paused my kisses and pulled back from her. \"You remember all that?\"\n\nShe giggled and nodded. \"I listened to everything you said, I took notes on the important stuff.\"\n\n\"My address was important?\" I said suspiciously. \n\n\"No silly, but I remember that you said it.\"\n\n\"Man, I'm going to have to make sure they hire you. I could use an assistant like you around all the time.\" I silently considered more late nights at the office too.\n\n\"I'm sure that's the only reason you'd want me here.\" She laughed again as I lightly bit her neck. \n\n\"Let me run you through the employee benefit program.\" I picked her up and she squealed in surprise as I set her on top of the kitchen counter. \n\nI gave her plenty of kisses up and down her neck, sucking, licking, and lightly biting as I went. She laughed and tried to push me away and turn her neck this way and that as I teased and tickled her with my mouth. She twisted and turned on the counter so I grabbed her hips to hold her still. Her squirming on the counter gradually stopped as I brought my lips lower down her neck over her collar bone and toward her chest. Instead of pushing me away, she hooked her legs on either side of me as my lips brushed against the exposed parts of her chest. I let my tongue leave small wet spots as I traced the border of fabric that eventually met with the other side of her dress in the middle of her chest. When I reached the bottom of her cleavage, I began the journey back up her smooth skin but she stopped me.\n\n\"No... more.\" She said breathily and emphasized her command by placing her hand on the back of my head. \n\nWho was I to deny to her what she wanted? I used my nose to nudge some of the fabric back and lavished her chest with my lips. I could tell by the pressure on the back of my head that she was clearly enjoying it; but, I had a feeling she wanted more. As if on cue, she shrugged her shoulder and tugged one side of the top part of her dress down. She had on a nude colored bra underneath. It wasn't particularly sexy, it was practical, but cute in its own way. I again applied kisses along the border of clothing that kept my tongue at bay, but once I reached the bottom I let go of her hip and brushed my hands up her arm and over her shoulder until I had the strap in my fingers. I expected her to breathe heavier when I started to slide it over her shoulder; but, instead I found that she was holding her breath. I ceased the removal of the strap and attempted to read the tone of her body for signs of unease or approval.\n\n\"Please...\" She whispered so that I could barely hear her. \"Don't stop.\" \n\nI hooked my finger on the half removed strap and gently pulled it the rest of the way off. I let my lips and tongue slowly move the cup of her bra out of my way, now that there was nothing keeping it in place. Her chest didn't move. She had round perky spheres of perfect shape which probably could have foregone a bra altogether. There was a small round circle that appeared a bright pink amongst the not quite pale skin that surrounded it. It was accentuated with a tiny peak in the middle that displayed her excitement and anticipation. I made every effort not to go straight for it. I circled it with my tongue, placing kisses as close as I dared. Claire began to twitch under my touch and moved anxiously, either on purpose or subconsciously, toward the direction of my mouth. I let a little self control slip and sucked her nipple into mouth, pressing my tongue hard against it. She let out a long breath and a humming noise akin to something you might utter when sinking into a nice hot bath. I felt her nails lightly scrape the back of my head as she grasped me and pushed her chest further out. I wouldn't have let go if I wanted to, and I didn't. \n\nI licked and sucked and nipped at her chest until it was a bright pink glistening with my saliva. Claire was writhing on the counter and against me, and now satisfied that I was pleasing her I snuck north for another kiss. Claire kissed me fiercely, her tongue darted into my mouth and her teeth captured my lips in her mouth. I moaned and ran my hands up her legs. I either had completely forgotten or on some other layer of consciousness intentionally ignored the fact that she was in a dress and no longer had tights on. I was momentarily surprised when I ran my hands from her knees to her hips to find my fingers flush with the skin of her thighs, and the very tips of my fingers touching a silky material that had to be underwear of some sort. Though I was temporarily confused, Claire took it in stride and moaned into my mouth at the sensation of my fingers gliding over her naked skin. \n\nMy fingers were frozen in place, and my kisses slowed as I calculated my next move. Apparently I wasn't thinking fast enough for Claire, so she grabbed one of my hands and tucked it between her thighs. I was pretty certain it wasn't to keep my hand warm; but, you could have fooled me with the heat that radiated there. She clenched her thighs together and released a short moan, and I quickly acquiesced to her demands and moved my hand against the material there. Claire opened her legs slightly and it allowed me more access to move freely. The first thing I noticed was how wet she was. The silky fabric was soaked through and as I slid my finger up and down the length of the material she seemed to only get wetter. She mumbled a few words between kisses, but I didn't catch them and continued to explore the uncharted skin at my disposal. I noticed it was also completely smooth, I didn't feel any hair or stubble of any sort. Curious as to her grooming preferences, and almost without thought, I slipped my finger under the fabric and felt the wet skin to find it completely bare. \n\nA harder nip than expected on my lips brought me out of my cognitive exploration and to the matter, which was quite literally, at hand. I pushed my finger into the folds there and met no resistance. I traveled to the top of the slit and applied pressure to the top of the area I was seeking and was rewarded with an involuntary thrust from Claire.\n\nI moved my finger in circles slowly, to build tension, and each completion of a lap brought more squirming and movement from Claire. The kissing had all but stopped, she had both her hands around my neck and her mouth was open in a silent perpetual moan as I continued to press and circle and caress her with my fingers. I figured if she wasn't going to occupy my mouth, I would find something more useful for it to do. I kissed her neck and shoulder and returned to her exposed breast to give it some much needed attention, though I didn't linger long. I then crouched down quickly, not giving Claire enough time to think about it and kissed her inner thigh. She gasped in surprise and looked down at me, questions playing across her face. I broke her gaze and again kissed her thigh, this time closer to my final destination. \n\nAs I kissed and licked my way further up Claire's thighs, I studied her intimate parts as they came into view. Smooth white skin surrounded her upper thighs that looked like it might resemble porcelain. Black silky material obscured the rest from vision, so I hooked my fingers inside the bands on the side and gently tugged down once. I could feel Claire hesitate, but seconds later her body moved up slightly, allowing me to pull them down and off her legs. I wasted no time in returning my mouth to the inside of her thighs and took in the new view. In the center of it all was pink skin that was a stark contrast to the surrounding pale flesh, like a pink flower upon fresh snow. I could smell her now, a feminine sent that was sweet and light. I felt my mouth actually water at the scent, and for the life of me I couldn't ever remember having that reaction to a woman before.\n\nMy tongue swelled and I knew what I wanted. I brushed my lips against her smooth skin until I was positioned just above her pussy. I pressed my lips against the pink skin and let my tongue slip out and tasted the wetness there. It tasted like the rest of Claire, only sweeter and more intense. I wrapped my hands behind her, pushing her dress skirt completely up and then rested my hands on the bare flesh behind her. The top of her cute little bubble butt was cold to the touch, much like the counter surface, but; I, don't believe her attention was on the counter. I stuck my tongue out and lightly touched the tip of where my finger has pleased her moments ago. I barely touched her and I felt her breathe in sharply, another light lick and she hissed the air out. I licked again, with more contact this time but still quickly and she again gasped in air. I put an end to the teasing and enveloped the entire area with my mouth and pressed my tongue flush against her. This time I didn't hear her breath, but instead I felt her legs tighten and lock around either side of my face, including my ears. I then felt her grab the back of my head and she held me in place for several moments before she loosened her grip by both thighs and hands. \n\n\"Sorry. That feels really good.\" She sounded embarrassed, it was adorable.\n\nI didn't have a vocal response, so instead I did it again, harder this time. She again tightened her grip and bucked slightly against the counter. I figured with all the anticipation and stimulation, she was probably close to peak and decided to make a run for it. I sucked the skin there into my mouth as she held me and I gave it quick repetitive licks over and over, never ceasing my oral assault.\n\n\"Yesyesyesyes.... Yes.... God, Brandon.\" Her voice seemed higher pitched than normal and slightly bordered hysteric. I took it as a good sign.\n\nI inched my face slightly lower and stuck my tongue between the pink flesh there, licking up and down like you might the most delicious ice cream cone in the world. The wetness there rolled over my tongue and drove me to lick harder and faster until I was pressing my tongue as deep as I possibly could inside of her. Claire, the poor girl, was trying to ride my tongue and stay on the counter at the same time, exclaiming and dropping an expletive here and there between gasps of air. I switched again to sucking her clit into my mouth and flicking it with my tongue over and over and over, never ceasing or slowing down. Claire clenched her thighs tighter and her body became rigid signaling the coming orgasm. I move as fast as I could with my tongue and applied pressure to the most sensitive areas and moved my head with her rocking hips, desperately trying to coax her orgasm out before her involuntarily movements could sever the physical stimulation. Only a few seconds later did it happen.\n\nHer whole body got tight. I could feel all the muscles seize up as she felt the build in intensity, then her entire body trembled and she let out a low airy moan. She must have shaken for 15 seconds before she finally regained control. Then she experienced several small tremors, aftershocks of some sort I assumed. I took my mouth from her and again she trembled and I felt scratches on the side of my neck. She shook twice more and then leaned back against the wall. I brought my hand to my neck and felt three raised marks, but apparently I wasn't bleeding so I had no reason to worry. Claire opened her clenched eyes and looked at me, a new light in her eyes reflected lust and passion that excited me to the point that I felt myself twitch below the belt. I wiped my mouth with the back of my hand and before I even finished Claire had grabbed both sides of my face and began to kiss me, hard. \n\nI grabbed her bare hips and pulled them toward me, I could feel the wetness between her thighs against my stomach as we groped and kissed one another. Finally she pulled away from me, I don't know what I expected to see on her face, but I know what I didn't expect: Determination.\n\n\"I want to give you that. What you just did with your mouth... Brandon, that was amazing. I want to make you feel that. I want to lick you and make you feel like I did. I want you to cum. I want you. Please.\" She waited for me to reply, which is like asking a kid if he wanted more candy after dessert. \n\n\"I would gladly accept that, if you are so inclined.\" I stepped away from the counter so that she could hop off of it, which she did. Then she grabbed my hand and started walking out of the kitchen. \"Um...\" I started to ask where she was taking me, but apparently she was a few steps ahead of me both figuratively and literally.\n\n\"Your office. Chair. Let's go.\"\n\nI gladly followed like an excited puppy, I probably looked ridiculous as I pictured in just moments Claire on her knees before me. I didn't care how I looked, I had a beautiful girl offering to give me a blowjob in my office; it was the stuff movies were made of. Well, adult movies, but movies none the less. It seemed to take forever to get to my office. A trip to Mordor would have been shorter and less nerve racking. My senses were on overload and when we finally made it to my desk I pushed Claire against it and satisfied myself with several deep long kisses. Then I slid her dress down and over her other shoulder so that both breasts were bare above her dress skirt that crumbled around her hips. I allowed myself several moments on each breast, giving them ample amounts of attention from my tongue. \n\nClaire was clearly enjoying it, but it seemed like she had other things she wanted to get to because she shoved me off her and pointed at the chair. I stepped around my desk and took my seat. Claire came around the desk and stared at the tent in my pants. She actually bit her lip while looking at it, and it was single handedly the hottest thing I'd ever seen her do, until she started to remove her dress. She ran her hands down over her shoulders and cupped each of her breast in her hands, then lightly caressed them and traced her fingers along the outside of her small nipples. Then she slid her hands down and hooked her thumbs inside the dress skirt and wiggled her hips so that the dress fell down her ankles. She kicked it across the room and knelt down in front of me with only the knee high socks to cover her.\n\nHer hands slid along my pants and up my thighs, slowly reaching the hardness that lie underneath. She ran her hand over it once, then again, seemingly sizing it up in her hands. I tried not to fidget, but it's extremely difficult to sit still when you have a gorgeous naked girl on her knees in front of you. Taking note of my movement, Claire sped the process up and undid my belt and unbuttoned the top of my pants. She took her time with the zipper, like a kid before opening a gift Christmas morning, peering slightly at different angels to get a glimpse of what might be inside. She looked up at me as she hooked her fingers in my belt loops and started to pull the pants down; she didn't break eye contact until she had them around my ankles. \n\nI tried to read her expression as she eyed the bulge under my boxers. I couldn't decipher what was going through her mind and I started to worry. Her face took a quizzical look as she took her finger and traced the outline of my erection though the clothing. I wondered if she thought it would be bigger, maybe she was disappointed. I wasn't large by anyone's standards; but, at almost seven inches I had never been called small either. My worries washed away as she looked up at me and smiled... then licked her lips. She bent over my lap and kissed the tightened fabric from base to tip, then leaned forward and kissed my chest and my stomach as she worked her way back toward the elastic band. Her lips felt hot on my skin and her tongue made me sigh with pleasure. When she ran out of exposed skin she grabbed the bottom of my underwear and started to pull them down agonizingly slow, the whole while kissing and licking each inch of newly exposed skin. I felt open air on the tip of my erection as it sprang out under the boxer, but Claire ignored it and continued to tease the other areas of my skin. ",
        "Finally, when I didn't think I could handle it any longer, she slipped the boxers over my knees and tossed them to join my pants a few feet away. She moved her hands, slowly as if hesitant, toward my newly exposed erection. She gently moved her hand along it until she reached the base, where she curled her fingers around me and held me straight up in her hands. There was a long pause as she simply stared it, I could feel the tension of my muscles tightening further as she touched me, and I felt myself pulse in her hands. Then she looked at me again, eyes sparkling and biting her lip like the hottest thing this side of the river. \n\n\"It's... very nice.\" She said softly.\n\n\"I'm... uh... glad you think so.\" I don't care who you are, when a girl like Claire has her hand around your pulsing cock, certain parts of your brain go on vacation. Maybe another time, with more thought and blood flow I would have come up with something better to say, but it was all I had at the moment.\n\nClaire giggled; it was the cutest damn thing I'd ever heard, though I could be biased. She leaned forward and propped her elbows on my thighs and moved toward me with her lips slightly parted. Her chest rubbed against my thighs as she leaned in and I drew a sharp breath in anticipation. Claire stopped as I inhaled and looked up at me with seductive look painted on her face as she realized I was at her mercy. \n\nShe settled between my legs once more and closed her eyes as she brought her mouth closer to me. Blonde ringlets fell to either side of her face, and then I felt her tongue against my tip. It was a quick lick, fleeting, like testing a hot cup of tea; but, it still sent nerves firing through the rest of my body. She took her free hand and brushed the curls back so that I could see her again, her eyes were open again and she stared right at me. This time when her tongue made contact it stayed, delivering a slow deliberate lick along the upper portion of my cock. When she reached the tip she reversed the movement and slid her tongue back down. She pulled away slightly so that she could reposition her head and began pressing her lips against my shaft. She kissed and licked me up and down the entire length, not dissimilar from the way we had kissed one another earlier in the kitchen, and certainly matched in our fervent passion. \n\nI squirmed in my seat under her ministrations and was almost relieved when she pulled away again, giving me a moment to catch my breath. The break was short lived as she took me off guard by wrapping her lips around the tip of my shaft. I moaned in ecstasy as her mouth tightened around me and her tongue pressed against my tip, rubbing back and forth on my sensitive head she had captured between her lips. She brought my cock almost completely out of her mouth before dipping slightly further than she had before. The feel of her tongue pressed against the underside of my shaft, combined with the feeling of the inside of her cheeks sliding along the sides of me, and the pressure of her lips had me clenching the arms of my chair. I was desperately trying to hold out for as long as possible. Each up and down movement of her head brought me further into her mouth and after the first few minutes I already felt the strain of impending orgasm.\n\n\"I'm... I'm going to cum Claire.\" I warned her, unsure of how she would want to handle it.\n\nI clenched the muscles between my legs and in my torso in vain, attempting to fight off the inevitable. My hips rose slightly as the pressure inside of me welled to a peak. Claire was moving faster, her head bobbed in my lap as I again tried to warn her, but the peak of my climax stole away every other bodily function and all I could manage was noises that solidified I was being thoroughly pleasured. Like a broken dam, I felt the pressure in the base of my shaft snap and rush through me into Claire's mouth. I pressed back against the chair and let the waves of pleasure wash over me. Claire made a noise I recognized as surprise or shock as I erupted into her mouth; but, as the second and third flow entered her mouth she made a very different noise. She sounded like she was enjoying it. She moaned around my shaft as I emptied myself across her tongue and she eagerly sucked my cock further into her mouth. I clenched my teeth at the overwhelming pleasure of cumming combined with the continuing movement and vibration of Claire's mouth. \n\nJust when I thought that I had finally reached the top of my orgasm, my eyes shot open and confirmed what I had just felt. Claire was still sucking long strokes of my cock, and with each descent, her lips brushed against the base of my shaft. Claire looked unfazed at the feat, and continued to swallow what remained in her mouth with each stroke, prolonging my orgasm to astounding lengths. Finally she slowed and pulled away from me, leaving my now semi erect cock against my stomach. She wiped her mouth with the back of her arm and looked up at me, uncertainty on her face. \n\n\"Did... was it good?\" She asked innocently.\n\nI moved my mouth a few times, but gave up at word formation and nodded my head enthusiastically instead. She smiled at me and shifted uneasily on her knees in front of me. I reached out toward her and pulled her up into my lap so that she was straddling me. I wrapped my arms around her and kissed her passionately, ignoring the fact that we were naked for a few moments as I caressed her and let my lips press against hers before brushing them across her neck and up to her ear. I bit the bottom of it playfully and finally managed to get my voice back.\n\n\"Thank you.\" I whispered into her ear. She laughed softly and pushed me back against the chair so she could see my face. \n\n\"I'm glad you enjoyed it. I've never... you know... so I wasn't really sure what to do. I just did what I thought was right.\"\n\n\"You have got to be kidding me.\" When she said she was a virgin, I didn't realize that encompassed most other things too. The way she took me into her mouth, I assumed she had to have had some kind of practice.\n\n\"I read a few magazines... talked to a few friends... maybe I saw a movie once or twice... I just stringed together the important things.\" She explained as I stared at her amazed.\n\n\"Tell you what, I'm going to chalk that up to natural talent, or beginners luck for now. But later I want to see these magazine and videos you're talking about so that we can market them to the women in the world. Your tongue... and your lips... and... God... I mean, you took me all the way into your mouth.\"\n\n\"Isn't that what you're supposed to do?\" Claire asked me with a confused look on her face.\n\n\"Uh...\" I stared at her blankly, trying to form a response. \"Let me put it this way, I haven't met many people capable of it.\"\n\n\"Well, looks like you'll just have to keep me around then!\" Claire laughed. \n\n\"Damn straight.\" I agreed and pulled her in for another kiss. I let my hands wander up and down her body as we made out like horny teenagers. Well, she technically was a horny teenager I guess, but the point stands. I cupped her breast and rolled her nipples between my fingers and was rewarded with a gasp from Claire. I chuckled and bit her lip as I picked up the speed of my fingers. Claire began to squirm on top of me, making contact with me, still semi-erect, and leaving telltale signs of her excitement behind. Each brush of her soft wet pink skin against my cock brought new life to my erection. It wasn't long before she was grinding her swollen pussy lips against my erection as we groped at one another. She broke the kiss and leaned back as she caught her breath.\n\nI took one look into her eyes and knew what was to come. She was overcome with lust, caught in the moment and filled to the brim with desire. She reached down between her legs and lifted up slightly so that she could grab ahold of my throbbing cock. I reached up and brought her face back to mine, kissing her passionately as she ran her hand along my length several times. She pulled away from me again and I felt her move my cock so that it slipped within the soft skin there, then she looked at me as her hand placed me against her opening.\n\n\"Slowly.\" I advised as she brought her hand away and began to press against my body.\n\n\"I... I think I'll be fine. Toy and all.\" She laughed nervously.\n\nI nodded and she lowered herself slightly more. The pressure was enough to press me inside of her. She gasped slightly at the sudden change and held herself in place. She placed both of her hands on my shoulders, and I supported her weight by holding her hips. She again pressed down and succeeded on taking more of me inside her. She winced and I rocked my hips down to take back the ground gained. \n\n\"No, it's ok. Really. You're just... a little bigger than my toy I guess.\" Another nervous giggle followed, and I nodded my head in understanding. I also may have smirked at the compliment, intended or not, I was taking it.\n\nShe pressed down on me again, taking a small amount more than before then stopped again. She was incredibly tight and despite feeling amazing around my cock, I really didn't want to hurt her. She drew in breath and pressed down further, whimpering slightly as she did so. We were at the half way mark, and her grip on my shoulders was getting painful. I rocked my hips so that I slid out and then halfway back in, enhancing the natural lubrication between us in hopes of helping. \n\n\"Oh!\" Claire exclaimed. Her eyes snapped open and she looked at me in surprise. Then she hastily nodded her head. \"Yes. Do that again.\"\n\nI grabbed either side of her hips firmly and began to rock her body with mine. Slowly she pressed down as we moved together taking more and more of me until there was no more to take. She unclenched her eyes again and looked at me again. She relaxed her body on top of mine and let go of my shoulders to take either side of my face in her hands. A torrent of emotions played across her face and I tried to read what she wanted. Her eyes glistened and I remembered back to my first time and understood. \n\n\"Claire?\" I asked softly.\n\n\"Yes?\" She said breathily.\n\n\"Will you be my Valentine?\"\n\nClaire looked at me and blinked several times, fighting any tears that threatened to spill forth. She smiled a huge smile and nodded her head. She leaned forward and kissed me several times in quick succession. I chuckled silently and ran my hands along her back as she kissed the side of my neck. She paused next to my ear and I felt her lips brush my skin as she whispered.\n\n\"What do you want me to do now?\"\n\nI didn't respond. Instead I moved her hips back and forth on top of me. Claire picked up on the movement and slowly grinded her hips down against mine as I rock underneath her. Claire lifted her cute ass into the air a little and I grabbed ahold of it as she started to bounce on top of me. We moved slowly for some time, kissing and touching and moving with each other, enjoying the feel of it all. I took her nipple into my mouth and began to run circles around it with my tongue while she pressed her hips down against me, each time taking me completely inside of her. She began to pant and moan more often and tried to move faster on top of me, taking longer and quicker thrusts. Apparently needing more, she leaned back away from me and grabbed on to my desk behind her, grinding forcefully on top of me. \n\nI grabbed her hips and helped her move by lifting her ass up with each thrust. Her chest bounced as she continued to bottom out on top of me. Each bounce was accentuated with its own short moan and her skin turned red from her neck to her chest. She began to move so fast that I was having a difficult time keeping up with her pace in my current position, but I moved as much as I could to accommodate her. Claire stopped moaning and instead clenched her eyes shut and bit her lip, clearly chasing orgasm.\n\n\"Yes!\" Clair called. \"Don't stop. Please. Don't stop!\" She pushed harder against me and I felt my chair start to move back. I scooted my whole body forward to offset the motion and Claire apparently enjoyed that.\n\n\"Fuck! Yes, Brandon. Yes!\" I pressed against her again and forced her hips to move up and down at as fast a rate as I could keep up with as she grinded on top of me. I felt a clenching sensation around my cock buried deep inside of her and let out a loud moan. Claire began to tense on top of me, going rigid again as her orgasm neared. It made it slightly more difficult to continue the stimulation, but I thrust and tried all movement at my disposal to help her get off. It happened rather suddenly this time, Claire let go of the desk behind her and flung her body forward into mine. I wrapped my arms around her and trusted upwards as Claire clutched her arms behind me, holding her body tight against mine. Then she cried out and I felt the walls around my cock ripple and wetness flood between us. She continued to grind on top of me and I felt her teeth on my shoulder as she rode out her orgasm. She shuddered several times before her body loosened around me. \n\nShe leaned back and kissed me several more times, each kiss causing me to twitch within her. Claire looked down between us and then back up at me. I raised an eyebrow and Claire pulled her body up and off of mine. I started to ask her what was wrong when she pointed to two stacks of files on the top of my desk.\n\n\"Are these important?\" She asked of the papers.\n\n\"Uh...\" My mind tried to connect the dots for the papers, straining to remember what they were for. Claire shook her head and pushed both piles off my desk, sending papers floating to the ground. \n\n\"Doesn't matter. I'll clean it up later.\" She said, and then she leaned over the desk and wiggled her hips at me. \"Come here.\"\n\nI smirked and hopped out of the chair and came up behind her. I lined myself up and slid my cock up and down her slit until I found her entrance. I pressed myself in, which was indefinitely easier this time, and began to slowly fuck her from behind.\n\n\"Harder.\" Claire turned back at me and smirked as she pressed back into me.\n\nI responded with a sharp thrust deep inside of her. She cried out in what sounded like a mix between surprise, pleasure, and laughter.\n\n\"That's better.\" She said, a devilish look on her face.\n\nI leaned forward and blissfully started to thrust into her at an increasing rate. After only a few minutes, I finally felt a familiar tingling sensation at the base of my cock. I began to move in and out of her in long fast strokes, each inward thrust was met by Claire pressing back against me. The sound of our bodies echoed throughout the office until they were replaced by short sharp moans escaping Claire's throat. I reached around her legs and pressed my finger against her clit, moving it back and forth as fast as I could as I tried to hold off my own release. Claire straightened her back and lifted slightly at the stimulation, changing the angle of my entrance. It must have worked for Claire because within seconds she was calling my name and moaning louder than ever. I felt her clench around me again in quick successions as several small orgasms rolled through her body, peaking over and over with each thrust. The muscles in my body involuntarily clenched as I fucked her through her orgasm and I knew I was seconds from the edge.\n\n\"I'm going to cum Claire. I'm going to cum!\" I called out to her. \n\nClaire, clearly thinking with her head unlike myself, pulled forward, spun around, and dropped to her knees in the time it would have taken me to blink. I was stunned at first, but luckily Claire knew exactly what I needed. She grabbed the base of my shaft and started sucking my cock eagerly. Within seconds she was taking my entire length into her mouth and I immediately peaked to release, firing into her mouth shot after shot. Each spasm in my shaft elicited a hungry moan from Claire as she swallowed. When I finished unloading, my knees went weak and I fell back into my chair. Claire climbed into my lap and wiped the bottom corner of her lip with her finger before looking at me expectantly.\n\n\"That. That was fantastic.\" I said. \n\nShe beamed at me and showered my face with kisses. When she was satisfied that I had been kissed enough she looked out the window and sighed. \n\n\"It's stopped snowing.\" Claire said, she didn't sound happy.\n\n\"So?\" I asked.\n\n\"I'm going to have to go home eventually. I just... I don't want this to end.\" She said sadly.\n\nI looked up at her and smiled. \"It won't end. I'll see you tomorrow. 7 o'clock. Don't be late.\"\n\nShe looked at me and matched my smile. \"Are we... together?\"\n\n\"It's just you and me here. At least I hope so.\" I looked around the office suspiciously. \n\n\"That's not what I meant.\" She said, slapping my shoulder. \"Are we... dating? Or whatever you want to call it.\"\n\n\"I'm all yours.\" I said \n\n\"Good.\" She threw her arms around me and we spent a long time embracing and making out without a care in the world. Sometime later we managed to get dressed and I walked her to the train station through all the snow and cold before starting off toward my house, promising her I'd text her when I got there and that I would be safe. I took me double the time it usually does to walk the five miles in that weather. Claire was right, I couldn't find a taxi to save my life, but I kept warm with the memories of Claire replaying though my mind.\n\nValentine's Dinner ended up being Chinese takeout at my place, due to reservation issues (who would have thought?). We still had a fantastic time getting to know one another outside of the office. We laid down the ground rules for our professional behavior and screwed like rabbits throughout the night. I couldn't ask for a better Valentine.\n\n~Epilogue~\n\nI walked into the office lobby to Amy sitting at the desk and Claire inside the lobby placing little four leaf clover stickers on the office window. She turned when she heard the door and smiled at me, probably recalling the same things I was about the previous weekend. \n\n\"Hey Claire, how was your weekend?\" \n\n\"Oh, fine. How was yours sir?\"\n\nI cringed as she said sir, but let it go for the sake of Amy. \"Wonderful!\"\n\n\"Oh, what happened to your neck?\" She asked and pointed to three raised marks jutting out just above my collar.\n\n\"My cat got me in my sleep.\" I lied, even as my eyes sparkled in telltale lust. \"Listen, I need you to come to a R&D meeting with me this Friday night, there's too much to do by myself. It's not far, only about 5 miles outside the city, north of the loop, just a few blocks from the lake. I hope that's not a problem.\" I tried to keep a straight face as I said it.\n\n\"It should be fine, I'll be able to make it. What's the dress?\" She had a devilish grin on.\n\n\"Casual.\" I replied, not trusting myself not to slip up my own word play.\n\n\"Great. I'll stop by your office later today to get more details.\" She winked before she turned back to the stickers. She backed away from the wall she was facing and bent over at the waist to apply some clovers to the base of the window. She had on tight slacks that accentuated that cute little butt. I couldn't help myself. I pinched it.\n\nClaire gasped, and Amy made a noise and gave me a rude look.\n\nI looked at Amy and pointed. \"Oh, don't even.\" That seemed to have taken her aback and she blushed slightly. I winked at Claire and made my way to my office. Life was good.\n\n***** \n\nEnding Note: Remember this is a Valentine's Day Contest 2014 entry. Please vote & comment if you feel so inclined. \n\nA special thank you to my love and muse, AMA, for editing this. It's nice to have your own English Major laying around. Hopefully you'll cringe less than usual through my stories. \n\nTil next time,\n\n~Red"
    ],
    "authorname": "Red_Jakal",
    "tags": [
        "virgin",
        "office sex",
        "intern",
        "18-year-old",
        "romantic",
        "blowjob",
        "oral",
        "cum swallow",
        "skinny",
        "petite"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/company-policy-red"
}