{
    "title": "Gaming: D&D Pt. 09",
    "pages": [
        "I don't know quite how I felt, at first. Stunned, I suppose. There was disbelief, and white-hot anger. I buried the anger, deep - and then I poured all of that negative energy into my exams. I was going to ace the fuckers, and then I could show Diane that she hadn't gotten me down. \n\nShe called me, four times a day. Cherie had to answer the phone, and tell Diane that I wasn't home. Gabby called a few times, as well. \n\n- \"She called me, too.\" said Coop. \"Crying ... asking what she could do to get you back.\" He looked me in the eye. \"Is there anything she could do?\" \n\n- \"No.\" \n\n- \"Understood.\" he said. \"Too bad, though - I liked her.\" \n\n- \"So did I.\" \n\nParvani gave me a gentle hug. She was kind enough not to say 'I told you so', or anything like that. The two girls had never warmed to each other, despite the fact that Diane knew that Par was one of my best friends. Some day, I would have to ask Parvani why she hadn't liked Diane all that much - but not today. \n\nNate didn't have to say anything: he was just there for me. So was my sister. It was a great comfort to have four friends who really cared about me. \n\nGabby tracked me down on campus. \n\n- \"She's crying all day - every day.\" she said. \"Won't you at least give her a chance to explain?\" \n\n- \"No.\" I said. \"I really don't want to hear it.\" \n\n- \"Ian - she loves you.\" said Gabby. \n\nI wasn't going to dignify that with an answer. \n\nIt had to happen, I suppose. Diane caught me coming out of one of my last exam. She was sitting on a bench beside the entrance to the quad. I was exhausted, after a 3 hour ordeal, but I decided, on the spot, that it was better to get this over with. \n\nI sat down next to her. \n\n- \"Go ahead.\" I said. \n\nShe sobbed. \"That's all you have to say to me?\" she asked. \n\n- \"I have nothing to say to you.\" I said. \"But if you want to get something off your chest, go ahead.\" I shouldn't have said 'chest' - it made me think of her wonderful breasts. \n\n- \"I made a mistake, Ian.\" she said. \"I was stupid.\" \n\nI wasn't going to argue with her. \n\n\"It didn't mean anything, though. You're the one I love. There's no one else I love like you.\" \n\nI didn't respond. \n\n\"Aren't you going to say anything?\" she asked. \n\n- \"No.\" I said. Technically, that was saying something - but I thought that it might speed up the process. \n\n- \"Ian - tell me what I can do - what I have to do.\" \n\n- \"You have to go home, Diane. Or back to work.\" I suggested. \n\n- \"Aren't you going to fight, Ian?\" she asked. \"Aren't you going to try to save what we had?\" \n\nI stood up. \n\n- \"It's too late, Diane. You killed it. It's dead. There's nothing left to save.\" \n\nShe burst into tears, as I walked away. I didn't feel all that much better. Sometimes, it's no fun being right. \n\n*** \n\nSimran phoned, and asked if I could meet her for a drink after she got off work. I accepted - then I had second thoughts. In the end I went with my third thoughts. \n\n- \"I'm so sorry.\" she said, right off the bat. \n\n- \"Thanks.\" I said. \n\n- \"I can only imagine how you feel - though I think that we have this much in common: you invest so much into another person, and they betray your trust ... \" \n\n- \"Thanks, Simran.\" I said. I think that I was trying to make light of the whole thing. To pretend that it didn't really hurt. \n\n- \"She's an idiot, Ian.\" she said. \"She had no idea how lucky she was. She's going to regret it some day - but you shouldn't.\" \n\nMy head came up. Those were virtually the same words I had used to comfort her, when she had broken the engagement with Arjun. She had remembered them - exactly. And she was now repeating them to me, in an attempt to console me. \n\n- \"You have a an excellent memory.\" I said. \n\nShe smiled. \"They were wise words, Ian. I've thought about them many times since you said them. And they're just as true in this case.\" \n\n- \"Thank you.\" I said. I meant it, this time. \n\nWe talked some more about our common ground. For Simran, her experience with Arjun had been profoundly disturbing. \n\n- \"I kept wondering how I could have been so blind, for so long.\" she said. \"When I finally realized who he was - what he was - I couldn't believe that I'd missed all of the signals.\" \n\nI nodded. \n\n\"Were there signs, in your case, Ian?\" she asked. \"In hindsight?\" \n\n- \"In hindsight? I might have been dazzled - or even blinded - by Diane's physical beauty.\" \n\nAnd by the sex. I was going to miss the sex. I wasn't about to discuss that with Simran, though. \n\n\"I guess there were signs, all along ... I didn't miss them, exactly. It was more a case of seeing signals, and then ignoring them.\" \n\n- \"Such as?\" \n\n- \"I don't know ...\" I was reluctant to run Dianne down. \n\n- \"It helps, Ian - to talk it through. Trust me on this.\" \n\n- \"Well, Cherie didn't like her much. And I wasn't crazy about her brother. But I think it was more disturbing that Diane couldn't warm to Nate and Par - or they to her. She did like Coop, though.\" \n\n- \"Everybody likes Coop.\" said Simran. \n\n- \"True. I knew that I was never going to be close with her friends, either. Gabby and Kelly were fun girls, but a bit too shallow for my tastes.\" \n\n- \"Arjun had no friends.\" said Simran. \"They were colleagues at school. Either they looked up to him, because of his intelligence, or they were people that he looked up to. Or men that he felt could help him in his career.\" \n\n\"They were all male. He didn't have any female friends. Two sisters, but he ignored them. They looked up to him, too - but I'm not sure that they liked him.\" \n\n- \"I know what you mean.\" I said. \"It's easier to see these things afterwards.\" \n\n- \"Isn't hindsight wonderful?\" \n\n- \"You're right, Simran. This did help, a bit. Thank you.\" \n\n- \"You're welcome, Ian.\" she said. \n\nOn my way home, I remembered one more small detail. When I told Diane about Grad school and the grants, she was less than enthused. It felt like she wanted me to graduate and get a job, as she had. Interesting. \n\n*** \n\nI graduated cum laude. And a week later, I got an invitation to lunch from Dr Welsh. After congratulating me, he went straight to the reason why he had called me. \n\n- \"I'm going to London for research in July. Three weeks. Well, two weeks of work, really, and a week to visit. I have a graduate student who's gone with me before, but she's unavailable this time. Would you be interested in the job?\" \n\nLondon, England. Digging through old documents in the Public Record Office. Working for Dr. Welsh - and getting paid. Of course I was interested. \n\n- \"Your flight and accommodation would be covered.\" And then he named a surprisingly generous salary, for two weeks work. \"It would be six days' work per week,\" he warned me, \"but the final week could be a holiday for you.\" \n\nI accepted on the spot. \n\nThat left me with some juggling to do. With Coop's help, I managed to hang on to my summer job for May and June - on the understanding that I would train my replacement for July and August. \n\nThen I called Parvani, and asked her to have dinner with me. Her alone - without Nate. She wore just a little makeup, and looked absolutely fantastic. I told her so. \n\nShe smiled, suddenly shy. \"Thank you, Ian. But I'm sure that's not why you invited me here.\" \n\n- \"Well, Nate told me told me about your interview on Tuesday.\" I said. Simran had pulled a string or two, and got Parvani an interview at the publishing House. \"You'd be excellent in that job.\" \n\n- \"If I get it.\" she said. \"Cross your fingers.\" \n\n- \"You will.\" I predicted. \n\n\"But you're right. There's something else I have to ask you.\" \n\nShe nodded. \"Go ahead.\" \n\nI took a deep breath. \"I want to ask Simran to go out with me. Would that bother you, Par?\" \n\nParvani looked surprised. \"Why would you ask me?\" she said. \"Does Simran know?\" \n\n- \"No. She doesn't. And she never will, if it would make you unhappy. I won't ask her.\" \n\n- \"Oh.\" Parvani reached for her glasses, on reflex. They weren't there. \n\n- \"I'm serious, Par. I won't even mention it again, if it would make you uncomfortable.\" \n\n- \"It doesn't make me uncomfortable.\" she said. \n\n- \"Are you sure?\" I asked. \n\n- \"How long have you been interested in Simran?\" \n\nThis was the part I was most afraid of. It was the one thing that might hurt Par most. But I wouldn't tell one of my dearest friends anything less than the whole truth. \n\n\"From the first time I met her.\" I said. \"You and I had been friends for a while; it would have been awkward to hit on your sister. There was the age difference, of course. But I also wondered if ... if you had ever felt like Simran got all the attention, while you ...\" \n\n- \"Felt like the uglier sister.\" said Parvani. \"The ugly duckling.\" \n\n- \"Not any more, Par. If you ever were ... that's in the past. You're just as beautiful as she is.\" \n\nParvani smiled - or half-smiled, to be more accurate. She was staring off into the distance. It was the 1,000 yard stare, the face of a person who's looking inwards. Then her eyes re-focused, and she looked at me. \n\n- \"Thank you.\" she said. \n\n- \"You're welcome.\" \n\n- \"That's ... perceptive of you, Ian. You never made me feel ... ugly.\" \n\n- \"You weren't, Par.\" I said. \"You've always been beautiful. I just wanted your friendship too much to risk fucking it up.\" \n\nThe waiter arrived, sparing Parvani the need to respond. That might have been a good thing. Once we had placed our orders, Parvani smiled again. \n\n- \"This is so bizarre.\" she said. \"If I read something like this in a novel, I'd think that it was overdone. Exaggerated. And yet ... here we are.\" \n\n- \"They do say that truth is stranger than fiction.\" I said. \n\nShe nodded. \"Thank you, Ian - for considering my feelings. Nate and I thought about you, of course - but you know all of that. Maybe I should have asked you before agreeing to go out with him.\" \n\n- \"No, Par. That's not what this is about. You guys did ask me. I appreciated the courtesy - but it wasn't necessary. You know how happy I am that you two got together.\" \n\nShe nodded. \n\n\"This is different, because I don't know how you feel about your sister. I know that you love her - but I didn't know if you'd feel jealous, or angry ... if I asked her out. I had to ask.\" \n\n- \"I appreciate you asking, Ian. It was very thoughtful.\" She raised her head. \"You can ask Simran out. I hope she says yes.\" \n\n*** \n\nI didn't have an epiphany, and I wasn't struck by lightning, or anything like that. It was more a gradual realization. \n\nThe age difference didn't seem like such a big deal, anymore. And having talked to Parvani, I felt more comfortable that I wasn't going to hurt our friendship. But what motivated me most was fear: if I waited too long, Simran might find another boyfriend. I didn't think that I could stand that. \n\nSo ... ready or not ... \n\nWe were gaming at Parvani's. Everybody was there. More important, Simran was home. She'd be going out later, to give us some privacy, but she offered to make us a pot of tea. I jumped up to help. \n\nAlone in the kitchen, for a moment ... I took a deep breath. For some reason, my knees were shaking. \n\n- \"Simran, are you free next Saturday evening?\" I asked. \n\nMaybe my voice was a little off, or something about my manner alerted her. Simran turned to look at me. \n\n- \"I think so.\" she said. \"Why?\" \n\n- \"I'd like to take you to dinner.\" I said. \n\n- \"Oh? What's the occasion?\" she asked. \n\n- \"No special occasion. I just want to take you to dinner - will you go out with me?\" That came out better. And there it was - out in the open. \n\n- \"You mean ... like a date?\" she said. \n\nI didn't get a chance to answer, as Parvani bustled into the kitchen. \n\n- \"Need some help?\" she asked. \n\nIt took her only a second to realize that she had interrupted something. She blushed, and tried to beat a hasty retreat. \n\n- \"I'll take the sugar. And the milk.\" she said. Then Par left the kitchen as quickly as she had come in. \n\nSimran smiled. The tension - or the awkwardness, at least - was gone. But she gave me a serious answer. \n\n- \"Can I think about it, Ian?\" she asked. \"Would you mind?\" \n\n- \"You can go out once, as a friend.\" I said. \"And then you can say no to a second date, if you don't want to go.\" \n\nSimran smiled again. She recognized her own words immediately. It was the advice she had given her sister, when Coop had asked Parvani out. \n\n- \"I'll call you.\" she said. \n\n*** \n\nShe accepted. \n\nFor some reason, I wasn't nervous. I was probably more uptight the first time I went out with Diane, or when I was taking Tanya out, trying to make it seem like a date when it really wasn't. Or the reverse. \n\nWith Simran ... I didn't have to impress her. She already knew me fairly well. My good points, anyway. And while I could always learn more about her, I didn't expect anything to be a game-changer. \n\nRelax, have a good time. Be myself. That was the plan. \n\nBut I wasn't prepared for how good she looked when I picked her up. Her long black hair hung loose, a foot past her shoulders. She had just enough makeup on to enhance her lips and draw attention to her eyes. \n\nShe wore a dark blue dress - dark enough to be almost purple. It wasn't low-cut, but it did hug her curves. It was also short enough to expose quite a bit of her slender legs. Other than her legs, Simran was solidly built. \n\nI promptly forgot the plan. I remembered to turn on the Bruce Cockburn tape I had cued up, ready to go. After that, I didn't have a clue. So I reverted to the Nate approach: get her talking about herself. \n\n- \"So Parvani's interview went well?\" I said. \n\n- \"Can you keep a secret?\" said Simran. Then she shook her head, and smiled. \"Of course you can. They're going to offer her the job on Tuesday.\" \n\n- \"That's great!\" I said. \"She'll be thrilled.\" \n\n- \"I hope so. I think she'll like the people there. I know she'll enjoy the work.\" \n\n- \"Do you still like it?\" I asked. \"It must be interesting, reading all of those submissions.\" \n\n- \"Sometimes. Mostly it's not all that exciting.\" \n\n- \"But ... you like it better than your old job, don't you?\" \n\n- \"Human Resources? Oh, hell yes.\" Simran chuckled. \"Did I ever tell you why I quit the insurance company?\" \n\n- \"I don't think so - no, you didn't.\" \n\n- \"It's partly your fault, you know.\" she said. \"That night at the hospital, after Parvani's party? When you gashed your hand?\" \n\n- \"I remember.\" \n\n- \"You were talking about anything and everything.\" she said. \"Then you asked me if I enjoyed my work.\" \n\n- \"You said that it was challenging and that they paid you well.\" I said. \n\n- \"You do remember!\" Simran smiled. \"And then you said: 'That's not what I asked'.\" \n\nI nodded. I remembered that night at the hospital very well. \n\n\"I couldn't stop thinking about that.\" said Simran. \"Arjun predicted that I'd be Head of HR within two years. That didn't help at all.\" \n\n\"My boss kept telling me that I had a great future with the company. And then I woke up one morning and realized that I didn't want to go to work. I wasn't sick, or bored - nothing like that. It was what my boss had said; that was what I dreaded - that my future was there.\" \n\n\"The thought of still being there, 25 or 30 years later, terrified me.\" \n\nI didn't interrupt her. I just drove, and listened. I even turned down the music, so that I could hear her better. \n\n- \"That's why I changed jobs.\" she said. \n\n- \"Any regrets?\" \n\n- \"Oh, boy - at first, they gave me technical writing. Descriptions of products, computer hardware, engineering ... business proposals, a proposal for a medical grant ...\" \n\n- \"Dull?\" \n\n- \"You have no idea. But I was learning a great deal ... about a variety of fields that I'd never been remotely interested in before. I got better at it, too.\" \n\n- \"Is there anything you're not good at, Simran?\" I asked. \n\n- \"Thank you for the compliment, Ian.\" she said. But of course there are things I'm not very good at. Sports, in school. Engagements ...\" \n\nI didn't know whether to laugh, or to show sympathy. She provided the answer by laughing out loud. \n\n\"In any case, I have you to thank for getting me started - for making me think. Thank you for that, too.\" \n\nWe got to the restaurant. It was slightly upscale, but they preferred substance over style. It was good food, in a pleasant setting, and the prices weren't outrageous. At least, that's what Dad and Jill had said. I was relieved to see that they were right. \n\nWhen I asked her what she wanted, Simran chose the least expensive item on the menu. \n\n- \"Is that what you really want?\" I asked. \"You know I'll be making a fair bit of money next year. And I got another bonus with this research trip. Please - order what you'd like. I certainly will.\" \n\nSimran changed her order. Then we talked about London for a while. Her parents had taken the girls there when they were very young. Parvani had only vague recollections, but Simran had quite a few memories. \n\n- \"I was still pretty young.\" she admitted. \"But the mummies at the British Museum were amazing, and I remember how terrified Parvani was of the ravens at the Tower of London. They're huge.\" \n\n- \"Did you go anywhere else?\" \n\nWe talked about England for a while, and then books. Simran surprised me by bringing up the subject of Christopher Tolkien, and the publication of his father's collected notes. \n\n- \"Nothing as good as The Silmarillion.\" she said. Then she saw my face. \"Why do you look so stunned? You know that I loved Lord of the Rings, too. I've read it three times.\" \n\n- \"You did?\" \n\n- \"If I played D&amp;D, I'd be a high elf. Not just a wood elf, like Legolas, but an ageless one ... like Galadriel.\" \n\n- \"D&amp;D?\" I sputtered. \n\n- \"Parvani tells me about her characters. And yours, and Nate's. Interesting psychological profiles, there. She also told about some of the plotlines you're created. Sometimes I can recognize the source material - but sometimes I don't.\" \n\nI had to ask. \"Simran - why didn't you ever play D&amp;D with us? It sounds like ... like you would have enjoyed it.\" \n\nShe shook her head. \"No, Ian. That was Parvani's group. Her first really good circle of friends. I would never want to spoil that for her.\" \n\n- \"But ...\" I started - then I subsided. I knew what she meant. There was always the chance that Simran would have overshadowed her sister. Simran was more confident, more outgoing ... and more beautiful - I don't think that it was wrong to admit that. \n\nIt's odd. I still felt the urge to protect Simran - to be there to support her. Yet she was probably the first woman I'd ever been close to that didn't need my protection. \n\nI don't mean that she wouldn't have appreciated support - just that ... she seemed so utterly self-sufficient. It was part of her beauty - of her appeal. \n\nShe turned down dessert, but we lingered over coffee. We were at the restaurant, talking, for well over two hours, and I never felt the time passing. \n\nOn the way home, Simran saw the tapes I'd lined up in the well between the seats. It was a collection of her favourite groups and artists. She recognized what I'd done right away, and she smiled. \n\nWe were both quiet, though, as I drew nearer to her house. We were completely silent as I pulled into the laneway. \n\n- \"Simran - \" I began. \n\n- \"Could I borrow this one?\" she asked, holding up the Neil Young tape I'd made. \n\n- \"Sure.\" I said. \"Of course.\" \n\nShe put her hand on my arm. \n\n- \"Thank you.\" she said. \"For dinner, and for your company. I had a wonderful time.\" \n\n- \"As did I.\" I said. Wow - there I went again. It seemed like every time I was around Simran, I lapsed into chivalric talk. \n\nI was about to speak, but she forestalled me. ",
        "- \"I have a feeling ...\" she said. \"I may be wrong, but I have a feeling that you want to ask me out again.\" \n\n- \"I do. Absolutely.\" \n\n- \"Ian ...\" she said. \"Could we ... go slow? Could you wait - maybe until you get back from London? I need some time ... to think.\" \n\nIt was mid-June. Simran was asking me to wait for six weeks or more. \n\n- \"I can wait, if that's what you want.\" I said. \n\n- \"Please.\" she said. \n\n*** \n\nThe trip to London was my first time on a plane. I tried to act like I'd done it all before, but I don't think I was fooling anyone. We went to a small hotel in London. That first night, Dr. Welsh took me to a classic English pub - it had all of the atmosphere I could have asked for. \n\nHe gave me a better idea of the work I would be doing. Basically, I would be looking through a stack of hundred-year old documents, searching for references to certain people, places, and a couple of key events. It was research, but I chose to see it as detective work. \n\nThe next morning, we took the subway - or the Underground, if you prefer - to Kew Gardens, near Richmond. The PRO (Public Record Office) is called the National Archives today. \n\nWelsh showed his card, and we were taken to a reading room. He filled out a request sheet - loads and loads of numbers - and the attendant went down to the repository to get the documents he was asking for. \n\nThey came up on a trolley. And we were off. I was reading handwritten reports from the 1860s - some were originals, though most were later copies. Whenever I found one of the key names, or keywords, I noted the I.D. number of the document and the date, and then wrote a brief summary of the reference. \n\nThe idea was that Welsh would later read the ones that I flagged as 'interesting'. The more I knew about what he was doing, the better I would do, so he had told me quite a bit over a few pints in the pub. \n\nIf I did my job, I could save him tons of time. It might sound dull to you, but I actually enjoyed it. There were some fascinating details, and ... okay, I'll get to the point. \n\nAfter a short break for some shitty cafeteria food, Dr. Welsh sat down with the notes I'd made. He had to check over the same documents I'd been reading, to make sure that I wasn't missing anything. He was also trying to figure if he could trust my summaries. If he couldn't, then he was going to have to waste time re-training me. \n\n- \"Your notes are succinct, Ian. But accurate. Well done.\" he said. \n\n- \"Anything of use?\" I asked. \n\nHe held up a folder. \"This one looks promising.\" Dr. Welsh had a page photocopied, so that he could re-read the material later on. \n\nThat was it. On my first day, I uncovered a grand total of one nugget of information that he could use. Maybe. \n\n- \"Don't be disappointed, Ian.\" he said, as we took the train back into London. \"You've eliminated a stack of documents that I would have had to read through myself. That's a great help.\" \n\nAfter the second day's work, Dr. Welsh read my notes on the train, on the way back. He pointed to one entry. \n\n- \"What was your impression of this one, Ian?\" he asked. \n\n- \"My impression?\" \n\n- \"Yes - what did you think, when you were reading this one?\" \n\n- \"Well ...\" I said. \"It may sound stupid, but ... I got the feeling that he was lying.\" \n\n- \"Really?\" said Dr. Welsh. \"What makes you say that?\" \n\n- \"The language he uses. It's classic CYA - cover your ass. He's suggesting - well, hinting, anyway - that he wasn't at fault, and that we should take a closer look at this guy and that guy.\" \n\nDr. Welsh smiled. \"Thank you, Ian. Well done.\" \n\nHe took me to dinner after the third day's work. He seemed very pleased. \n\n- \"I'm not just satisfied with you work, Ian. I'm delighted.\" he said. \"I'm so glad you came.\" \n\n- \"Me too.\" \n\nI wish I could tell you that we found out who killed Kennedy, or discovered a cure for something. It wasn't like that. But for a guy who was trying to figure out the truth of why the British had invaded Abyssinia - Ethiopia, now - in 1868, anything we turned up was a possible clue. Was it a just war? An honourable mission, undertaken at staggering expense? Or just the usual power politics, with a complete disregard for the cost in lives and money? \n\nThat's just a long-winded of way of saying that I enjoyed the research, and that I was especially pleased when I turned up something that Dr. Welsh might be able to use. \n\nThe evenings were mine. I walked a lot - from the Tower of London, to St Paul's Cathedral, and to Westminster. I found a busy pub, where the talk was all soccer - Liverpool and Tottenham Hotspur. Then I found a quiet pub where I started writing a letter to Simran. \n\nThere's no comparison, nowadays. Email and texting - never mind tweeting - are just ... so quick. A few moments to type, or to flap your thumbs, and boom - it's sent. \n\nI started three letters to Simran. The first two I tore up. I told her what I was doing, and that I missed her. It took me four handwritten pages to do that. I mailed it before I could change my mind. Chances were excellent that I would be home long before the letter arrived. \n\nThe PRO was closed on Sundays and Mondays. Dr. Welsh wanted to spend half of Sunday going over my notes, and the photocopies he'd made based on my work. But in my time off, I visited the Tower, and the British Museum - which rivals the Smithsonian. \n\nI had time to think, too. I was pretty sure that I was over Diane. Yes, she had hurt me. But maybe I was better off this way. I had plenty of time to examine my feelings for Simran. \n\nIt wasn't just lust. Hell, I'd been holding back my feelings for her - for years. There I was, writing her a second letter, describing what I'd seen ... and I just knew. I wanted to see her. To spend time with her. To talk to her. \n\nIt may sound odd, but I wanted to know Simran as well as I knew her sister. Parvani and I had a friendship based on shared interests and common experience. It had taken years to build. Without the hours and hours we had spent together, walking to school, and playing D&amp;D, we wouldn't have been so close. \n\nD&amp;D was like that famous comment on sports: it didn't build character - it revealed it. You couldn't share your dreams and fantasies through role playing without letting your friends see what kind of person you were. At least, that's what happened with our circle. \n\nI learned almost as much about my sister through playing the game with her, as I had living in the same house for years. \n\nYou could argue that I would have learned a lot about Cherie if we been in the same bowling league. That may be true. But I believe that D&amp;D revealed a great deal more. \n\nThat didn't mean that I wanted to play D&amp;D with Simran - although I was intrigued by the thought of her playing Galadriel. What I really wanted was to have the hours to spend in her company, to learn what made her tick, what she liked, and what she didn't. \n\nOf course, I wanted to kiss those lips, too. And hold her close. to feel that beautiful body pressed against mine. But I was just as entranced by the sound of her voice. I wanted to repeat our first date - many, many times. \n\nMany of these thoughts found their way into the pages of the second letter I wrote to her. I didn't explicitly say that I wanted to kiss her - but I may have implied it. \n\n*** \n\nNear the end of our second week of research, Dr. Welsh found that we were ahead of schedule. He gave me the afternoon off. I surprised him by asking for a Reader's card. \n\n- \"There are a few things I'd love to look at.\" I told him. \n\n- \"Use mine.\" he said. \n\nI called up a few documents, and spent the afternoon reading. The subject was one that I'd covered in a paper for Dr Welsh's class. It might seem weird, to want to read more about a topic I already knew. \n\nBut to use a baseball analogy, it was the difference between reading the boxscore, and watching the film (the game had already been played, so I couldn't actually be there). \n\nSo, for example, let's say that my favourite player went 0-4 at the plate. \n\nThere are routine ground balls, and then there are well-hit balls that require the defence to make an outstanding play. There are pop-ups, and there are lazy fly balls. But there are also line drives, a rocket to the gap, which results in an out only because the outfielder made a spectacular diving catch. \n\nThe box score says that your hitter had zero success. But in a rematch against that same pitcher, would you bench your player? Not after he made solid contact, and hit the ball all over the diamond, you wouldn't. \n\nDr. Welsh was curious when he saw what I was reading. He wasn't a baseball fan, but when I explained the analogy, he got the point. \n\nOn our last day at the PRO, he only had about two hours work for me. Afterwards, I called up more documents on my own, and took notes. I also had about a dozen pages photocopied. I thought that the material might be useful to me, another time, but I also wanted to be able to show Simran - and my D&amp;D group - what I'd been working with in London. \n\n- \"Are you free for dinner this evening?\" asked Dr. Welsh. \"There's a colleague - a friend of mine - that I'd like you to meet.\" \n\nI had no plans. I accepted. \n\nThat was how I met Dr. Bennett-Smythe. She was in her 40s, I thought, with glasses and a severe hairstyle. But her eyes were alive with intelligence and good humour, and she was fascinating to listen to. It was the quality of her voice, as well as the things she talked about. That was exactly the same reason that I had found Dr. Welsh so interesting, the first time I was in his class. \n\nThey were obviously well-acquainted with each other - colleagues and kindred spirits and all that. I found myself wondering, though, if they had been even closer, at some point. Or even now? \n\nBoth professors included me in the conversation. In later years I met many academics. Most had no time for graduate students. They considered us a lower form of primates. For undergraduates, they had nothing but contempt. These assholes considered having to teach classes as a complete waste of their valuable time. The university would have been perfect, they felt, if only there were no students. \n\nThese two were different. In fact, they discussed teaching techniques, and how to make their subject areas more appealing. They frequently asked my opinion on a variety of topics. She encouraged me to call her Yvonne. \n\n- \"Professor Bennett-Smythe is such a mouthful.\" she said. \"My students call me 'Dr. B.S.', for short. I can't help feeling that they're being mildly disrespectful.\" She and Dr. Welsh laughed - it was plainly an old joke. \n\nThey were plainly quite comfortable with each other. She called him 'Colin' - something I couldn't do. After all, he was going to be my thesis advisor next year. \n\nI excused myself before the dessert and coffee, to leave them some time alone. \n\n- \"I appreciate the invitation.\" I said. \"I enjoyed the dinner - very much.\" \n\n- \"It was a pleasure to meet you, Ian.\" said Yvonne. \"I shall follow your career with interest.\" \n\nThe next day, I caught the train to Chester. I had a week on my own, and I knew exactly where I wanted to spend it. \n\nChester was the main Roman legionary base in Britain. It's full of classic Tudor and Victorian buildings. It's also the gateway to North Wales, which was where I was headed. \n\nI had seen pictures of famous castles in books. Some of the most spectacular were concentrated in Northern Wales. I saw Caernarvon, Conwy, Criccieth and Harlech. I even made it to the Isle of Anglesey, to visit Beaumaris. \n\nI took photos, knowing that they couldn't reproduce what I was experiencing. But maybe I could find a way to get them into our D&amp;D campaign. \n\nIn the evenings I found a quiet restaurant, or a pub. And I wrote a third letter to Simran. I described the things I was seeing. On my last night in Wales, I sat in a fog - literally and figuratively. \n\nAll I could think about was that I would be flying home the day after tomorrow. And then I would see Simran. She had asked for time to think; I gave her over a month - she didn't know about the letters yet. I left her alone, and gave her space - even as I thought about her all the time. \n\nI was eager, and yet terrified, simultaneously. \n\n*** \n\nCoop met me at the airport, and drove me home, where Nate and Parvani were waiting with Cherie, my Dad and Jill. They all had the same question. \n\n- \"How did it go?\" \n\nI told a few stories, and described some of the sights I'd seen. My rolls of film would have to be developed, so I had no pictures to show them (times have changed, I guess). \n\nCoop left first, and then Nate and Par. Parvani gave me a big hug. \n\n- \"She's home - alone.\" she whispered. \n\n- \"Should I call her, first?\" I asked. \n\n- \"No.\" said Par. \n\nIt was a short walk. Twelve minutes. I knocked on the door, rather than ring the doorbell - I have no idea why I did that. Simran opened the door. \n\nI just stared. She was wearing a simple grey dress that clung to her body like Saran Wrap. My God - she was stacked. I had to keep my eyes fixed above her collarbones, or forever lose my mind. \n\nThere she was. Simran seemed just a little bit nervous. Maybe I was affecting her composure, just a little. My own attempt at nonchalance melted like a soft ice cream cone. \n\n- \"Welcome home.\" she said. \"Can I make you a cup of tea?\" \n\n- \"Yes, please.\" I said. \n\nI sat on the couch, while she put the kettle on. \n\n- \"How was your trip?\" she asked. \n\n- \"I thought about you the whole time.\" I said. Smooth, Ian - real smooth. \n\nSimran blushed. \"I thought about you quite a bit, too.\" she said. \n\nI knew better than to start anything serious. The kettle would whistle, and she would need a few minutes to make a pot of tea. I waited, and let her do just that. \n\nShe brought it all out, on a tray, and set it between us. There's a ritual, to serving tea - it may not be quite the equal of a Japanese Tea Ceremony, but it's still time-consuming, and somehow warming. \n\nI stirred the milk and sugar into my cup, and watched as Simran filled her own. It took all of my patience to wait until she had finished. I breathed deeply, and counted to ten. \n\n- \"Simran - \" I began. \n\n- \"Yes.\" she said. \n\n- \"Yes?\" \n\n- \"Yes, Ian. I'll go out with you.\" \n\n*** \n\nI waited almost a whole week. Then I took her to dinner at the Old Mill. The food was okay, but the ambience - and the view - were excellent. It was busy, though, and there were people seated fairly close by, so we didn't try to tackle the central issue between us. Instead, we talked about my trip, and what had been going on while I was gone. \n\nWe skipped dessert, and went for a walk on the path that circled the lake. Finally, we could talk more openly. \n\n- \"Why did you say yes?\" I asked her. \"What changed while I was away?\" \n\n- \"I needed time, to think.\" said Simran. \"I like you, Ian - you must know that. But I had to think about ... the complications.\" \n\n- \"Is it the age difference?\" I asked. \n\nSimran looked surprised. \"No. It's only three years. Wait - do you think that's important?\" \n\n- \"Well ... when I first met you - you were so much more mature.\" \n\n- \"Ian, my mother is six years older than my father.\" she said. \"Age difference is the least of our problems.\" \n\nI was relieved - for a split-second. Then I heard the rest of what she said. \n\n- \"We have problems?\" \n\nSimran tilted her head, to look at me almost sideways. \n\n\"Parvani?\" I asked. \n\n- \"Ian.\" she said, with extra patience. \"I've already told you that I thought - I hoped - that you and Parvani would end up together. You obviously liked her, and she was mad about you. But I've had time to see that she loves Nate. They're good for each other.\" \n\n- \"They certainly are.\" I agreed. \"Wait - if that's not a problem ... what is?\" \n\nSimran sighed. \"Ian - how long have you been interested in me? As ... as more than a friend, I mean.\" \n\nI had to be truthful. \"Since the day I met you.\" \n\nShe nodded. \"I had that feeling. But you were Parvani's friend. And then I started dating Arjun. I felt ... strange, around you. I have more experience suppressing feelings for you, than I do thinking about you.\" \n\n- \"You knew? That I was crushing on you?\" \n\n- \"You weren't very subtle, Ian.\" she said. \n\nI thought that I had been circumspect. \n\n- \"No.\" she said. \"But that wasn't what had me worried, while you were away.\" \n\n- \"Oh?\" \n\n- \"I have to admit something - I'm not proud of it. I was jealous, Ian, when you started dating Diane.\" \n\n- \"What? You never even met her.\" I said. \n\n- \"Parvani described her to me. She was beautiful, wasn't she?\" \n\n- \"Not like you.\" I said. The words just spilled from my mouth. They were true, though. \n\nSimran smiled. \"I had no right to be jealous.\" she said. \"I was engaged to be married. All I could think of, though, was how you had said that you felt jealous when Coop asked my sister out - but not when Nate did.\" \n\n- \"Simran.\" I said. \"I don't understand - where's the problem?\" \n\nShe bowed her head. \"I was afraid, Ian.\" she said, softly. \"That you were still hurting from what happened with Diane. That you were ... on the rebound.\" \n\n- \"But ... \" I was still confused. \"You don't sound afraid now, Simran.\" \n\n- \"No.\" she said. \"Your letter arrived yesterday.\" \n\n- \"Oh.\" \n\n- \"It was beautiful, Ian. Thank you.\" \n\n- \"You're welcome.\" I managed to say. \n\n- \"Will you allow me a small experiment, Ian?\" she asked. \n\n- \"Of course.\" I answered. What else could I say? \n\n- \"Cinnamon Girl.\" she said, softly. \n\nI'm sure that I blushed. \n\nSimran sang. \n\nI want to live with a Cinnamon Girl \n\nI could be happy, the rest of my life, \n\nWith my Cinnamon Girl \n\nMy entire face was red. I had zero control over my body's reactions. \n\n- \"May I ask you something, Ian?\" she said. \"Am I your Cinnamon Girl?\" \n\n- \"What?\" that was the best I could do. \n\n- \"You had that song recorded on both sides of your tape.\" she said. \"And I remembered how you blushed, when that song came on ... when you were with me.\" \n\nI blushed again - I couldn't help it. \n\nSimran sang again. \n\nA dreamer of pictures, I run in the night \nYou see us together, chasing the moonlight, \nMy cinnamon girl. \n\nI couldn't answer. My eyes were moist, with tears. \n\nSimran kissed me. \n\n*****"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "girlfriend",
        "friends",
        "breaking up",
        "cheating",
        "age difference",
        "dungeons and dragons",
        "dating"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/gaming-dandd-pt-09"
}