{
    "title": "My Favorite Girl Pt. 04",
    "pages": [
        "*This is a work of fiction. Names, characters, businesses, places, events, and incidents are either products of the author's imagination or used in a fictitious manor. Any resemblance to actual events is purely coincidental. All character's involved in sexual activity are 18 or older.*\n\n---------------------------------------------------------- Part 4 ----------------------------------------------------\n\n------------------------ The Friday before Memorial Day, eight months later --------------------\n\nI couldn't wait to get there and see Emma as I sped down the road towards the apartment. It had been a couple of months since the last time I had been with her and that was just a short twenty-four hours back in March. That was only because I had to take a break to fly to Austin where my mom had filed the civil suit so I could sit in the courtroom and listen to the judge hear the facts of the case. The case was dropped right after both sides presented some simple arguments and facts. That was the last of the bad mojo to be lifted from my shoulders after that horrible September from last year.\n\nOctober was a great month. Emma and I made up and spent a few days with Dory. Although, that was in the last part of September, it was close enough to October to count. It was after that, that things got really good. Emma got moved into her new apartment the following week when we got back. It was in a very nice area and that made her safe and feel more settled which spilled over to me. I felt much better knowing she was safe and secure.\n\nTwo weeks later I won the second sponsorship exemption tournament and found myself with a tour card and a license to play in almost any pro event on tour. It was so long college and see you later Austin right then. I moved my stuff to Florida and called my home, home. It made it easy once I was there. It was a couple of hours' worth of driving and I was in Tallahassee with Emma. We'd spend a week together then I'd go home or play in a tour event before returning.\n\nThat lasted until January when the tour really kicked off again. October through December was considered the off season and the events were spaced out, pretty low key, and didn't count towards the total earnings for the year. Earnings and points were important because it was one of the ways to keep your tour card. January through September was when the more important events took place, and you didn't dare miss very many of those ones if you could help it.\n\nOnce you get a card, you have to keep it, or the next crop of golfers move in and take your card. The easiest way to keep the card is to play, earn points and money, or simply win again. I found out quickly that winning wasn't easy, the competition was stiff, and the grind was hard. But I had made it and I was out there most weeks making cuts and adjusting my game to fit the pros.\n\nI didn't have to take that week off in March to go to court, but my lawyer said it would look better if I was there. It was a good excuse to take a break, see my favorite girl, and ultimately relax for a week at home once the hearing was over. It was nice of Emma to fly in and join me since she had to take two unpaid days off to do it. I told her it wasn't necessary, but she wanted to be there for me and to see me too.\n\nThis current week was an invitation only tournament that focused on the big names and the hot tour players of the past six months or so. I was neither of those at this point, so I was not invited to it. I now had a ten day stretch with nothing on the schedule. I took a short detour and visited some old friends in Austin before I headed off to Tallahassee. It was perfect timing how it all played out. Friday, today, was the last day of school for Emma and now she would be off for the whole summer. Every time I was off from now until the fall when she had to start teaching again would be spent with her.\n\nI pulled to a stop and parked in her designated parking spot in front of her apartment. It was always open every time I came to town. She didn't have a car and really didn't need one. She now lived four blocks away from the school and two blocks the other way away from the big chain retail store. If she needed to go any further than that, she would bum a ride from one of the other teachers that lived here, or she would hop on the bus.\n\nI reached over to the passenger seat and grabbed my small bag. I opened the door, jumped out, then locked it before searching for the key to the place. I walked up the sidewalk with the key in hand and right to her corner apartment on the bottom floor. I pushed the handle just to see and much to my surprise the door swung open.\n\nI walked in and closed it behind me. I looked up and stopped dead in my tracks. There was Emma leaned against the wall near the kitchen. The leg closest to me was down on the floor, the further one was bent with her foot resting against the wall. She had the tip of her pointer finger in her mouth chewing on it seductively as she looked at me with burning desire in her eyes.\n\nIt wasn't the way she was standing; it was what she was wearing that did it for me. She had this sexy black half bra on that cupped her tits and lifted them but did not hide them one bit. Her nipples were pointed straight out, at least the one that I could see was. She had a black garter belt on, straps that ran down to the thigh high black nylons, and the high heels to complete the look.\n\nMy dick was already swelling in my pants as I drank in the sight of her standing there. Her finger had dropped away as she now chewed on her bottom lip. She knew I loved that as I lifted my finger and twirled it. She stepped away from the wall and turned around fully letting me see the black lace thong framed in between the straps, garter belt, and the nylons.\n\n\"Gawd damn!\" I cried. \"You look in-fucking-credible.\"\n\n\"Do I?\" she growled.\n\n\"Mm-hmm,\" I growled right back.\n\nShe was so sexy, so seductive, so sensual as she stood there and looked at me. She was every man's wet dream right now.\n\n\"Prove it, Pinocchio,\" she said coyly.\n\nMy bag hit the floor as I ran to her. I took her into my arms and pulled her into my kiss. Her mouth crashed into mine as we frantically kissed each other. I was pulling her into my mouth, tongue battling hers as she moaned and panted into my kiss. Her fingers were pulling my belt to get it to release as I kept backing her up towards the kitchen.\n\nHer taste, her kiss, her scent, her desire, everything about her came flooding back to me. I didn't realize how much I had missed her until right now. It had been over two months since the last time, and she must have missed me too. We bumped the kitchen table as the belt finally opened. Her hands were searching for the button or the zipper or some way to get my swollen cock out.\n\nI was still kissing her, pulling her into my lips as I waited for her to pull my cock out. It was taking a touch longer than I thought it would, so I let one hand fall between her legs. It knew right where to go as it slipped under her thong from the side and touched the smooth skin between her legs. She gasped into my kiss as my finger split her wet lips and dipped into her center. I slowly worked my finger back and forth, waiting for her to open my pants.\n\nFrustration won over practical thinking as she finally just pulled and pulled hard until the button popped off my pants and flew across the kitchen. She grabbed either side of my pants and pulled them apart and down, making the zipper open before they dropped to my ankles. I let my hand slip away from her pussy as hers were working my boxers in search of my dick.\n\nI went in through the pee hole on my boxers and pulled my own dick out just in case she couldn't figure that out either. It was better safe than sorry. My dick was out now, her fingers wrapped around it as I scooped her up and set her on the kitchen table. I pressed forward and into the thong guarding her entrance. She pulled it to one side, slipped my dick up and down her wet lips before pulling on it. I went on instinct and pressed into her pussy.\n\n\"Fuck,\" she gasped as I pressed inside. It was the first words we had spoken since this started.\n\nHer legs wrapped around my hips as her shoes flew from her feet and bounced on the floor. Her heels dug into my ass cheeks, encouraging me to drive deeper inside. We were still kissing, tangled around each other as I was fucking her on the kitchen table. Right now, I couldn't tell who wanted it more. We were both humping into each other, this wild display of animal lust as we burned off some long overdue sexual energy.\n\nShe was soaking, sopping wet as I slipped in and out of her. She was dripping onto the table with each plunge into her center. Her puss was on fire, this liquid heat wrapped around my cock and squeezing it with urgency as she was already nearing climax. I wanted to pound into her right now, wanted to pin her down and let her feel every inch I had. I was stuck with my pants around my ankles at the moment.\n\nShe stopped kissing me now but was inches away from my face panting and moaning loudly as we continued. The kitchen table was moving an inch at a time backwards as I pressed into her. I had to change my stance again then went heel to toe and lifted. One shoe popped off and was free. I changed again and tried to go heel to toe and get the other off. After three attempts, I gave up and kicked my leg free from the one side that the shoe was off.\n\nShe announced loudly that she was cumming. I already knew by how wet she was. I waited until she was at the peak before I scooped her up again and moved us towards the next spot in the house. The living room and the couch were a few steps away and that's where we ended up after some careful navigation so I wouldn't trip over my pants as they trailed behind me.\n\nI set her on the arm of the couch, pushed her back, and lifted her legs. She was slanted down in the seat, her ass on the armrest, legs draped over my one shoulder as I gripped them. I pressed in deep, ground against her, then held as my cock touched her core. She gasped and yelped in pleasure before I released and repeated. She raised her brows almost daring me to go faster and pound into her.\n\nI pushed forward and down as she braced herself by pushing back on the couch and into me. She looked so sexy all balled up on the couch, in her hot little outfit, waiting for me to pound into her. I pulled the thong over again so it wasn't rubbing on my cock before I started picking up the pace. The couch started to move away from me as I slapped into her. I adjusted my stance and her legs to get it to stop before continuing.\n\nWe were slapping together, the wet sounds of sex echoed off the walls along with moans, pants, grunts, and single repeated words. We were being loud and the neighbors would soon know I was back in town again. Emma was biting her finger to try and keep quieter. I didn't care and made no attempt to keep quiet. I was enjoying myself and let out a loud cry as I erupted inside of her.\n\nWave after pent up and blissful wave left my cock. She was begging me not to stop, not to slow down as I filled her full with shot after shot. It was running from her as the wet slaps grew wetter. It felt too good to slow down so I kept right on going until her cunny quivered and released. She turned her head into the cushions and cried out as I kept right on going.\n\nI was panting hard, out of breath, as I slipped from her puss and stepped back. I could see her swollen and wet lips as we leaked out. The thong slipped over and covered her as she twisted around to get out of the position she was in. I circled the couch and sat down next to her. We both were silent as we panted and tried to catch our breath from the intense exchange.\n\nShe had her legs crossed as she sat there and rested. The nylons looked so sexy on her. I was drinking her in as I continued up her body to her boobs. I was so focused on screwing her I hadn't even tried them yet. They were pushed up perfectly on display as the half bra had them propped up. I glanced up at her face as she sat there and wore her seductive smile. She knew exactly what I was thinking as she leaned over and brought them towards my mouth.\n\nI leaned down and sucked her nipple into my mouth. She growled softly as my tongue circled it then my lips sucked hard on it. I left the one for the other and repeated then chewed softly with my teeth. Her hand curled my hair as she held my head there. I continued chewing and flicking it with my tongue as my hand cupped the other one.\n\n\"You like my outfit I take it?\" she asked softly.\n\nI nodded but didn't answer as I switched from one boob to the other. I was already hard again and wanted round two. I took her hand and moved it to my cock and set it there. She instinctively grabbed it and used her thumb to circle the head and my slit. I was still leaking cum and desire as her thumb teased the sensitive underside right near the tip.\n\nI leaned over more as I left her boobs alone and went to her neck. I knew the spots I needed to touch to get her going for round two. Not that she really needed any convincing, the way her hand was stroking my cock told me she was more than willing. It was all part of the flirt game we played with each other. I loved every minute of it and loved how her body responded to it.\n\n\"Ok,\" she panted. \"Sit back.\"\n\n\"But I didn't even get to all my spots,\" I teased.\n\n\"You can do that later,\" she cooed. \"Tonight, you can do whatever you want to me.\"\n\n\"Something is going in your butt,\" I half teased.\n\n\"Mmm,\" she growled. \"I hope so.\"\n\nI sat back as she stood and turned to face me.\n\n\"I bought these panties for this reason,\" she said as her fingers pulled the ties at her hips. They untied then fell off as she opened her legs a little. \"So you could untie them.\"\n\n\"At least I didn't rip them off,\" I teased as I referred to my pants.\n\nShe put her hands on her hips as she looked at me. \"Whatever.\"\n\nI drank her in as she stood there before me. The garter belt, the straps, and the nylons all created this perfect frame of black around her softly tanned skin and her cunny in the middle. The line her slit made, the curves her thighs, pelvis and mound made inside that frame was exquisite. She had such soft and feminine features along with the perfect set of curves. My dick was throbbing as I took in her soft details. The only thing I was slightly disappointed about was the treasure trail was gone.\n\n\"Jason!\" she called in her little girl voice.\n\nI looked up at her. \"I don't care about my pants.\"\n\n\"What are you looking at?\"\n\n\"How sexy, stunning, beautiful, perfect you look standing there right now,\" I replied.\n\n\"Really?\" she questioned with a sexual sass in her voice.\n\n\"You'd probably look better sitting in my lap though.\"\n\n\"Is that so?\" she giggled as she stepped forward.\n\nI bounced my cock. \"He wouldn't lie to you.\"\n\nHer legs straddled mine as she settled down in my lap. Her lips parted as my cock touched them before sinking inside as she pressed down. She started a soft and slow turn of her hips.\n\n\"Fuck,\" I sighed. \"You feel so incredible right now.\"\n\n\"Mmm,\" she growled. \"That's because I've been thinking about you and this visit for ten days now. You make my little pussy so wet.\"\n\n\"Ten days?\" I asked teasingly. \"That's it? I've been thinking about you for two months.\"\n\n\"What took you so long to make your way here then?\" she panted. She was starting to rise and fall as she twisted.\n\n\"Well...... I was trying to think of my dare for you to do.\"\n\n\"Hmmm,\" she giggled. \"I believe it's my turn.\"\n\n\"No,\" I responded quickly. \"The hotel and the hot tub.\"\n\n\"Oh gawd,\" she growled. Her hips were turning faster now. \"But you made me play with my pussy in front of the jets.\"\n\n\"Yeah, but you dared me to fuck you right after.\"\n\n\"I couldn't help it,\" she panted in pleasure. She was thinking about that event mixed with my cock being deep inside of her right now. \"I was so wet and so horny.\"\n\n\"That was the fifth time that day,\" I teased. \"You are almost as bad as me.\"\n\n\"Nobody can be as bad as you,\" she giggled. \"You horn dog.\"\n\n\"Really?\" I teased about the hot tub incident again. \"Please Jason, just slip it in my wet little pussy. Just the tip, I only want the tip. What did that turn into?\"\n\n\"More than just the tip,\" she panted and started rising and falling faster on my cock.\n\n\"With all those people over in the pool,\" I reminded her.\n\n\"Fuck, Jason,\" she gasped. \"I was so wet. Wet like I am right now.\"\n\nShe was soaking wet right now. As I thought back, she was pretty wet in the hot tub too but not like she was right now. It was running from her, I could feel it coating my boxers and my sack.\n\n\"Remember how hard you came?\" I asked.\n\n\"Do I ever.\"\n\nI fell silent as my hands ran along her legs and felt the stockings slide along under my touch. I leaned forward and found her hard nipple again with my mouth. She gasped and curled her fingers through my hair again as I sucked on it then chewed it softly with my teeth. My hands followed the straps on her nylons up to the belt before circling and feeling her cheeks.\n\nI squeezed them first then separated them and pulled her down harder on my cock as she dropped. I touched her core as I thrust up into her. She moaned loudly as she turned her head up and looked at the ceiling. I couldn't help myself and used the chance to find her neck right at her throat. I licked it first then kissed it wetly trying not to leave a mark. She growled and tickled my lips as I repeated again.\n\nMy hands left her cheeks and traced the lace around her hips. Felt her hips turning and working as she rode my cock and brought deep pleasure to us both. I continued up, feeling her tummy then ribs as my fingers slowly ran across her soft and smooth skin. I loved the feel of her skin and how soft it felt under my touch. I retraced my path on her skin as my lips still worked her neck.\n\nShe had tilted her head and leaned down a little. Her silent way of telling me to find her jawline and the spot right by her ear. I knew her body so well by now, I had lost track of how many times I had been with her. She was panting by my ear, hot breath hitting my skin and fueling my desire for her as my hands cupped her tits. I gently squeezed them, feeling their weight and perkiness that the bra provided. They didn't need the bra, that was an added bonus.\n\nHer moans were growing more urgent and she was starting to bounce harder, making my lips lose contact with her skin. I had to let one of my hands leave her boob and the nipple I had twisted between my fingers to hold the back of her neck. I steadied her there so my lips and tongue could continue to work on her. I could taste her sweat on my tongue as her soft scent filled my nose. I loved her scent and inhaled it deeply.\n\nShe held her upper body still as her lower body started to lift at her knees. She was twisting her hips, humping into my cock as she moaned above me again. She was staring at the ceiling once more as my mouth found her throat right at her jawline. She was panting, moaning, and warning me that she was going to cum again. I did nothing but encourage her to soak my cock between kisses and licks.\n\nShe flooded me, pussy gripped my cock as she released and soaked me once more. She dropped down and ground herself in my lap letting my dick touch her core. I left her neck and found her nipple with my mouth. Pulled it into my mouth and sucked it hard then let my tongue swirl around it. As she reached her peak, I closed my teeth around it and pulled it a little before letting it go.\n\nShe rested in my lap and panted into my kiss. Hands cupping and pulling my face into her kiss as she recovered and rested. Her cunny still squeezing my cock as I flexed it and made it swell inside of her. She giggled in satisfaction as I did that before pulling away from my mouth to look at me. Her thumb wiped my lips before she spoke.",
        "\"What dare did you have in mind?\"\n\nI raised my brows and flexed my cock again. \"I'll tell you over dinner. What are you going to cook for me?\"\n\n\"Ha,\" she snorted then laughed out loud. \"Jason, Jason, Jason. You've known me for how long?\"\n\n\"My whole life.\"\n\n\"And have you ever seen me cook?\"\n\n\"A couple of times,\" I lied.\n\n\"Right,\" she laughed. \"That must be some other girl.\"\n\nI shrugged.\n\n\"You're going to take me out to dinner,\" she stated.\n\n\"Oh?\" I laughed and squeezed her cheeks. \"I am, am I?\"\n\n\"Yeah,\" she smiled her sly smile while nodding her head.\n\n\"Fine,\" I agreed. It wasn't like I wasn't going to take her out anyway. We always went out when I was with her. \"But, I'm not done with you yet.\"\n\n\"I figured you weren't,\" she raised her brows now. \"And I wasn't done with you either.\"\n\n\"Hands and knees on the coffee table,\" I ordered.\n\n\"It's an ottoman,\" she corrected me.\n\n\"I don't care what it's called,\" I laughed. \"If you want dinner, you better get yourself on your hands and knees so I can have you from behind.\"\n\nShe spun off of me and onto the ottoman right behind her. I was right behind her once my shirt flew off and landed on the couch and my boxers rested at my ankles. I didn't even attempt my stuck shoe or pants, having her was way more pressing.\n\nI slipped into her cunny and watched my cock split her lips apart as I slowly sank into her. My hips touched her ass as I rested there and let her adjust to get comfortable. We both knew what was coming once she was settled and ready. I gripped her hips as I slipped out then back in a few times slowly before picking up the pace.\n\nWe were slamming into one another, it sounded like somebody running in flip flops as she pushed back and I pulled her to me. Sweat was pouring from me, skin was sticking together for that brief second we connected, her cheeks rippled with perfection, nails dug into the soft cushion, frantic cries coming from the both of us before I exploded inside of her again.\n\nShe had already cum and was begging me to cum as I did. I had just released thirty minutes ago but it felt blissful to be releasing again. I washed her walls and filled her as I kept slamming into her. My balls were slapping against her clit and her fingers as she rubbed it still. She suddenly cried out that she was cumming again and not to stop. I kept going, cock still hard as a rock as the last of my orgasm left my body. I felt like I could go on like this for days.\n\nWe were both back on the couch again, panting and recovering. I was looking at her, she was looking at me. We were temporarily satisfied. It wouldn't last for long though. We both had quite the appetite for sex, this was like the first course in a five-course meal. We would talk about dinner in a few minutes, probably have sex again, go get dinner, then finish the night well into the morning doing all sorts of things to each other.\n\n\"So?\" she started once she caught her breath. \"Tell me about this dare you thought of.\"\n\n\"Well,\" I said then paused to think. \"It's a little different.\" I stopped again.\n\n\"How so?\" she asked.\n\n\"Just hold your horses,\" I smiled. \"I'm thinking of a way to explain it.\"\n\n\"Just tell me,\" she almost begged. \"You know I probably won't say no.\"\n\n\"It involves you, a dress, a public place, and a book.\"\n\n\"Ok?\" she smiled. \"Go on.\"\n\n\"You wear a dress and only a dress. No bra, no panties. We go to a public place where you sit down and read a chapter in the book while letting your kitty cat out subtly.\"\n\n\"Subtly?\" she questioned.\n\n\"Yeah, you know? Like, you sit with your knees up, so you are exposed while you read. Or you sit with your legs parted and read, but you pretend you don't realize you are exposed.\"\n\n\"I can do that,\" she cheered. \"You know I like public stuff like that. But, how does this involve you?\"\n\n\"I'll be there watching and recording you on my phone. It's up to you about how daring and exposed you want to be.\"\n\n\"Jason,\" she smiled her devious smile. \"You're bad. And you're making me wet thinking about it.\"\n\n\"Really?\" I asked.\n\n\"Mmm-hmm. Let's go pick out the dress. I've got a yellow sundress I think will be perfect for the occasion.\"\n\nAn hour and a half later we were at the restaurant waiting for a table to open up. We went to her room and picked out the yellow dress, had the second course and almost the third one. She was ready to go try the dress idea out right then, but it was getting dark and I wanted it to be during the daylight. We took a shower together then ended up here. A table opened up and we were taken to our seats. We sat, ordered drinks, browsed the menu, ordered some starters and our food, then sat and waited.\n\n\"Emma,\" I said as I smiled at her in my sly way.\n\n\"Jason,\" she replied and shyly batted her eyes as I looked at her with a little lust and desire. She loved how I looked at her and raised her brows.\n\n\"I've missed you,\" I offered.\n\n\"Mm, have you?\" she questioned slyly.\n\n\"I have.\" I couldn't help but think of her little outfit from earlier. She looked so damn sexy in it. She was in a pale blue shirt that showed some cleavage and a pair of dark grey yoga pants that hugged her curves perfectly right now. She was hot and got some looks as we waited for the table, but it was nothing compared to earlier.\n\n\"Funny thing is,\" she said and broke my thoughts. \"I've missed you too.\" Her foot was touching my leg as she let it rub up and down it a little.\n\n\"So?\" I asked. \"How have you been?\"\n\n\"Good,\" she replied. \"A little busy with the end of the school year stuff but that's expected.\"\n\n\"You've got a bunch of free time coming up,\" I started. \"What are you going to be doing with yourself?\"\n\n\"Mmmm, I don't know?\" she shrugged but had this look on her face. \"I'll figure something out I'm sure.\"\n\nI nodded and smiled as her foot rested in between my legs. Her toes were trying to tease me, but she was just a little too short.\n\n\"Maybe I'll go with you for a couple of weeks,\" she suggested.\n\n\"On tour?\" I questioned.\n\n\"Yeah, maybe.\"\n\n\"If you want to, sure. I don't know how much fun I'd be though. You'd be stuck at a hotel for most of the day while I'm out on the course.\"\n\nShe shrugged. \"Maybe I better stay here and find something more local then.\"\n\n\"Yeah?\" I said and chuckled a little. \"You've been doing that already though.\"\n\nShe tilted her head a little as her look changed from flirty and sexy to more serious and worried. \"Jason?\"\n\n\"Relax Em,\" I sighed. \"I know you've been dating, and I don't care.\"\n\n\"You do? How?\"\n\n\"You told me back in March that you've been on a few dates.\"\n\n\"I did?\" Her foot dropped out of my lap as she sat up more.\n\n\"Yeah,\" I smiled again and nodded. \"I don't care if you date.\"\n\n\"You have been too though,\" she said as if she needed to defend herself.\n\n\"I haven't been,\" I said. \"I've been too busy golfing to have a personal life.\"\n\n\"Last week... with Jenny,\" she said.\n\n\"That,\" I started then stopped to think. \"That wasn't really a date. I mean, she has been bugging me for a while that if I was around that we should do something for old time sake. I was in Dallas when I missed the cut, so I asked her what she was up to and...\"\n\n\"I didn't ask you for the details,\" Emma interrupted me now.\n\n\"No, but I feel like you are kind of curious,\" I offered.\n\n\"Well,\" she shrugged. \"Since you started explaining...\"\n\nIt had been months since Emma had questioned me about my personal life and what I had going on in it. She used to get a few digs in here and there wondering about other girls, but she hadn't done that in quite some time. I thought maybe we had gotten over that hump, but this was bringing us back down that path again. There wasn't much to talk about anyway. Once I left Austin after I got my tour card, I had been with her and her only. Even my 'date' with Jenny resulted in nothing.\n\n\"I flew to Austin, met Jenny, took her to dinner then a comedy show afterwards,\" I explained. \"After that, we went our separate ways and left it as we would try to do this again sometime in the future if I was in the area again and she was free.\"\n\n\"That was nice of you,\" Emma offered kindly.\n\n\"She had been bugging me for a while so it was the least I could do. Plus, while I have had relations with her, I still consider her a friend. She's helped out and bailed me out a few times, so...\"\n\n\"I'm not in charge of who you choose to be friends with,\" she said carefully so there was no tone behind it. \"I was just saying that you've been on dates and I've been dating.\"\n\n\"But you,\" I said carefully then paused. \"You brought up my date with Jenny.\"\n\n\"To make a point that you've been out and I've been out.\"\n\nI sighed and took a long pause from the conversation to let the mood reset. I didn't want this to turn into a tit for tat thing that blew up into something it didn't need to be. She did the same and reset with me before we started again but with more calm and care.\n\n\"Em, I don't care if you date. Are we going to stay single forever and pretend this is casual, and....?\" I swirled my hands around in the air trying to make a point without saying it.\n\n\"No,\" she answered.\n\n\"So date,\" I said and smiled. \"I would, but I just don't have the time.\"\n\nShe took an uneasy breath and let it out slowly. \"Well...... since you brought the subject up.\" She took another measured pause. \"I've got something I need to tell you.\"\n\n\"Ooo-kkk,\" I said slowly.\n\nShe sighed again and shifted uneasily in her chair. \"I just...... I don't know how to tell you.\"\n\nI had a sinking feeling now as she looked very nervous about whatever she had to tell me. I tried to reassure her and myself.\n\n\"We agreed to have an open and honest relationship with an open dialog. Just say what you have to say, and we will work through whatever it is together.\"\n\n\"I don't want you to get mad though,\" she said softly.\n\n\"If I do... we can work through it together.\"\n\nShe sighed again. \"First and foremost, I was going to tell you, I just wasn't going to do it until Sunday night because I didn't want it to ruin this weekend. Secondly, I wanted you to come here, I wanted us to have a good time together, and I hope me telling you this doesn't change that.\" She paused and took a long sigh again.\n\n\"I've been on a few dates with the same guy and last week he asked me to be his girlfriend,\" she finally revealed and then braced for impact.\n\nAnd there it was, the sinking feeling I had was just confirmed. She was now somebody's girlfriend and thus this thing between us just got more complicated. Or, much more simpler depending on which way the next couple of minutes went. That was what we were going to be talking about next. How were we going to go forward from here? I didn't respond right away, I let the bombshell sink in for a couple of seconds before I responded in the best way I knew how.\n\n\"Did you say yes?\"\n\nShe swallowed hard then cracked a soft smile. \"Yeah.\"\n\nI knew that she had said yes already. Why else would she have brought this up?\n\n\"Are you ok with me being somebody's girlfriend?\" she asked.\n\nI knew this day was going to come and I had practiced this situation several hundred times before in my head, so I knew how to answer the question. It was like second nature now, like when somebody tosses something at you, your reaction is to raise your hands and try to catch said object. My response came without hesitation even though it was a pretty hard pill to swallow.\n\n\"It doesn't bother me at all. I knew this day was going to come, I just thought it would be sooner.\"\n\n\"Oh?\" she said completely stunned. \"Really?\"\n\n\"Yeah,\" I replied and continued with my practiced response. \"You're a great girl, and anyone would be lucky to have you.\"\n\n\"Thanks, Jay,\" she smiled softly. She was still stunned I had taken the news so calmly.\n\nTruth be told, it was killing me right now. I had an internal struggle going on all the time involving her and our relationship. Those few months from October to mid-January had built something between us that I couldn't shake. I wrestled with the thoughts of telling her how I felt, that I wanted something more, that she meant the world to me, but I always talked myself off the relationship ledge. We couldn't be that way, we couldn't be together, we both agreed on that.\n\n\"So?\" she asked now. \"Where does that leave us?\"\n\n\"Well,\" I said then stopped to think. \"I guess that would be entirely up to you at this point. You made the significant other, boyfriend/girlfriend clause.\"\n\n\"We are just starting out, so it might only last a week,\" she said.\n\n\"Who? Me and you, or him and you?\"\n\n\"Him,\" she said to clear things up.\n\nI sighed and shrugged. \"It's up to you, Emma. I can still come and see you. It's just going to be a little weird.\"\n\n\"Weird?\" she questioned.\n\n\"Yeah. You have a boyfriend now. Before you were single and... available. Now, you kind of... belong to somebody.\"\n\n\"But you've had girlfriends,\" she said carefully.\n\n\"I wouldn't call them girlfriends,\" I replied. \"They were just... filling a need until I could get back to you.\"\n\n\"Is that what you are worried about with me?\" she asked. \"That he's going to be filling a need? Because we haven't done anything yet and we won't be for a while.\"\n\n\"No. That's not it.\" I took a second and thought about it. \"Well... maybe.\"\n\n\"Are you... jealous?\" she asked very carefully now.\n\n\"Yeah.\"\n\n\"Why?\"\n\nI shouldn't have admitted that even though it was written all over my face. Now I had to think quickly to get myself out of it. \"Because... he gets to call my favorite girl his girlfriend.\"\n\n\"But we both agreed that we wouldn't, or couldn't be that,\" she said.\n\n\"Well, I know that. I mean like... he gets to spend time with you whenever he wants. My schedule is already a mess and my time with you is limited enough. Now...,\" I had to be careful of my word choice here, so I took a pause before I continued. \"Now, there's the added element of a boyfriend that's going to want to be with you. Coming to see you will be that much more challenging.\"\n\n\"You can still come see me whenever you want,\" she offered.\n\n\"Well.... within reason I suppose,\" I replied.\n\n\"We've been together for less than two weeks,\" she said. \"We aren't together all the time.\"\n\n\"Right now, you're not,\" I replied. \"A month or two from now that might not be the case.\"\n\nThe conversation took another pause. For some reason her telling me this had me worked up and I couldn't think of anything but her with some other guy at the moment. It was exactly like what I was doing to her in the beginning and now I knew how she felt. I had to be careful what I said right now as I didn't want to make her upset, I didn't want to ruin these couple of days together with her, and I didn't want to say something that I couldn't take back or that would hurt her.\n\n\"Are you ok?\" she asked.\n\n\"Yeah,\" I lied. \"I'm just processing everything.\"\n\n\"You really are jealous,\" she said with concern.\n\n\"I'm just trying to figure out how all this is going to work. If you two are together, how am I going to be able to come see you?\"\n\n\"We won't be together all the time,\" she offered. \"He does business and is in and out of town so there will be openings for you to come.\"\n\nI sighed as I thought.\n\n\"I shouldn't have said anything,\" she sighed now.\n\n\"No,\" I said quickly. \"That wouldn't have made it any better. What are you going to do, hide him from me for forever?\"\n\n\"I meant I shouldn't have said anything until Sunday night. I wanted to have a good weekend with you.\"\n\n\"Well... we can still have a good weekend. We just have to talk this out and find a common ground that we both can stand on. That was one of the stipulations with the agreement.\"\n\n\"Then tell me how you feel. Tell me what is bothering you and we can work on figuring out a solution.\"\n\n\"Emma, you're a great girl and I knew this day was going to come. I have to take my own self-interests out of the equation for a moment and think about you. I don't want 'us' to complicate your relationship with this guy or any other guy you should happen to date.\"\n\n\"Ok?\" she asked in confusion. \"I just said...\"\n\n\"What I mean is, if we want to continue our sexual relationship then we can. But I don't want it to complicate your personal relationship with him by you thinking we have to keep this going. If you want to stop having sex with me, I have to be ok with that and learn how to be around you without wanting to screw you all the time. I don't want you to think you need to keep having sex with me for us to still remain close. Does that make sense?\"\n\n\"We already discussed this before when we created this agreement,\" she offered. \"I thought that went without saying.\"\n\n\"Well,\" I replied. \"A, we have never crossed this bridge before. Both of us have been single until now. B, we made that agreement on the side of the road as we sat on a guardrail naked after a wild sex ride. I don't know how much merit it really had. C, I never actually conceived the thought of one of us getting into a relationship. By that I mean I didn't think we would make it this far. I figured we would screw around over spring break, maybe once or twice at the house, then we would drift off and life would pull us apart.\"\n\n\"So, should we stop what we are doing and separate?\" she asked carefully.\n\n\"You know how I feel about you,\" I replied. \"You are my favorite girl and I've done things and shared secrets with you that I have never told anyone before. I can't give an unbiased answer to that question. I, unfortunately, would have to leave the burden of answering that question with you. If you want us to end, you have to make that call at this point and I would accept that without holding a grudge.\"\n\n\"You know how I feel about you too,\" she said after some thought. \"You are my best friend and you have always been there for me when I have needed you. I want to keep seeing you, keep the relationship the same, and keep enjoying our time together. I'm not getting married to the guy, I'm just seeing where it goes.\"\n\n\"I know,\" I smiled softly. \"I have to learn to deal with this. Don't put your life on hold because of me. If you want to date, I want you to date. It's not fair for me to hold you back. Like I said, I knew this day would come, I just didn't understand the emotions it was going to bring up by hearing it was actually going to happen.\"\n\n\"This isn't the easiest thing for me either,\" she said. \"It has been me with you since last year, and me with nobody for the year and a half prior to that. I'm taking a big step forward too. And know this, I'm not doing this to hurt you in any way.\"\n\n\"No,\" I said quickly. \"I know you're not doing it for that reason. You're doing it because its time and you are ready for a relationship.\"\n\n\"A more serious one,\" she added.\n\nI sighed. \"If only we weren't related.\"\n\nThe look on her face just then, I shouldn't have said that either. It was the first time I had even slightly admitted that I wished we weren't related so we could have a normal relationship as boyfriend, girlfriend. We both knew we wanted a committed relationship, but we had never actually spoken the words to each other.\n\n\"Well,\" she said as she thought. \"People and life just won't let that happen.\"\n\n\"Yeah,\" I agreed but felt defeated.\n\n\"Sorry Jay,\" she offered. \"Sorry I might have ruined the weekend for us.\"\n\n\"Ruined?\" I questioned. \"No. It started out great, but we hit a little hiccup at the moment. Let's have dinner, I'll let this digest before I store it away until I can get back out on the road and really think about it. Let's enjoy the weekend together.\"\n\n\"You sure?\" she asked still unsure if I was ok.\n\n\"Yeah. Let's enjoy this weekend together and not worry about it for right now. I'll get back out on the road and have more time to process it and figure out what and where we go from here.\"\n\n\"You're not going to leave me hanging in the dark for forever, are you?\"",
        "\"I call you twice a week,\" I smiled. \"You'll know.\"\n\n\"K,\" she nodded.\n\n\"Let's just enjoy us.\"\n\nShe nodded in agreement. We took a break for a moment as we drank our drinks and thought about the conversation. I was already compartmentalizing the information, but I couldn't help but ask her the one question that did pop into my head.\n\n\"So, when do I get to meet the guy?\"\n\nShe looked kind of shocked that I asked.\n\n\"I want to know what I'm up against,\" I said and stole her line.\n\n\"Do you now?\" she half smiled.\n\n\"I wanna make sure he's treating my favorite girl with the upmost care and respect.\"\n\n\"You seriously want to meet him?\" she asked still shocked.\n\n\"Sure, why not?\"\n\n\"But I've never met one of your others before,\" she countered.\n\n\"No,\" I said. \"But I've never been official with any of them. And, you social media stalk them, so... which is how you found out I took Jenny to dinner I'm guessing.\"\n\n\"Yeah,\" she replied sheepishly.\n\n\"Exactly why I don't have any accounts,\" I chuckled.\n\n\"I can find out if he's going to be around and ask him to stop by,\" she offered.\n\n\"I leave Monday morning for Ohio,\" I reminded her.\n\n\"I'll ask later on and see if he can do lunch with us tomorrow or Sunday.\"\n\n\"Make it Sunday,\" I said slyly.\n\n\"Why?\" she asked with her devious smile after she saw my sly one.\n\n\"Because, after we get back from the farmers market where you let your kitty cat out, you're not leaving the bed. I'm going to have you over and over and over.\"\n\n\"Jason,\" she sassed in her sexy little voice.\n\n\"Maybe it's a good thing you got a boyfriend,\" I teased. \"I'll be back more often to mark my territory.\"\n\nShe just raised her brows and smiled her sly little sexy smile at me.\n\nThere was a multitude of ways this thing was going to go from here. None of which would be solved or figured out by the end of the weekend. She could date this guy for a few weeks then it could be over and things would be as they are. She could get serious with him and I'd be more in limbo than I was at this current moment. I could wait and see where it went then finally work up the courage to tell her how I felt about her. I could actually put some effort into dating myself and move on that way.\n\nTime would tell how things were going to work out. At this moment, as much as it was bothering me to hear her say what she had just said, I had to compartmentalize it and store it away for another time. This weekend was about me and her and each other and I couldn't let the boyfriend bombshell get in the way. She obviously wasn't worried about it right now. The sexy outfit, the first and second course already, the talk of more after dinner, the dare for tomorrow all said she was serious about one thing. If she wasn't worried about it right now, why should I be either?\n\nThe service was slow that night at dinner and it took forever for us to get our food and eat, then get the bill, then pay the bill. We finally left the restaurant and headed back to the apartment. The third course started in the car once we got back to the apartment. We were half naked but made a beeline for the door. It continued in the living room then slowly worked its way into the bedroom where it continued for quite a while.\n\n----------------------------------------------------------- Saturday -----------------------------------------------\n\nI wanted to get to the farmers market early, but after last night spilled over into the early hours of the morning, we weren't as motivated to actually get up and get going. I finally got her up after some teasing and convincing. I made us breakfast then cleaned up as she got dressed. Once I was dressed, we left the apartment and made it to the market.\n\nIt was a beautiful morning, the sun was shining, there was a soft breeze stirring the midmorning air, the birds were singing, there was just a hint of coolness left from the morning. It was almost summertime in Florida and the mornings would soon be sticky, stale, and hot with no relief in sight for months to come.\n\nWe parked as close as we could to check things out and get a feel for the place before we went ahead with the dare. It was pretty laid back and low key with several venders selling various items and a few dozen people strolling along checking things out. I watched the people as they worked their way down the one row of tents before crossing over and working down the other side. There were a few people gathered in a group at the far end talking and laughing it up.\n\nI looked over at Emma as she sat there in her yellow sun dress. Her nipples pressed against the material on top showing she was braless. My hand had already been under the skirt as we drove here and touched the bare skin below. She was looking out the side window at a couple as they walked up the sidewalk towards the first tent in the row.\n\nI turned back to the crowd and had another look. I watched for a moment longer and figured it was not too crowded, mostly laid back and would be a pretty safe bet to pull this off. I forgot the crowd and focused on a place to actually do the dare. I had to find her a place where she could sit, expose herself, but not be too obvious when she did.\n\nI found the spot and smiled to myself. I watched it for a minute or two and saw very little activity near it. Just one person walked by so it was the perfect spot. I started the car, checked the mirror, then backed up. I moved us all the way across the lot, so we were way out there with no other cars around us before I parked again.\n\n\"Does it look safe enough?\" she asked with a little nervousness in her voice.\n\n\"I think,\" I replied. \"Are you ok to do this?\"\n\n\"Mmm-hmm,\" she replied.\n\nI reached into the back seat. \"Here's your book. Start with chapter three.\"\n\n\"Why chapter three?\" she questioned.\n\n\"Because I said so.\"\n\nShe half shrugged not fully understanding why but not wanting me to explain myself.\n\n\"See the wall across the way?\" I asked.\n\n\"Yeah,\" she said as she moved around in the seat to get the best look possible.\n\nIt was a knee-high brick wall with a decorative border on top of it perfect for sitting. It divided the makeshift market area from the grass and trees behind it. To the front was the sidewalk it bordered and then the parking lot turned market.\n\n\"That's where you are going to go. There's nobody behind that wall so you only have to worry about people on this side.\"\n\n\"How do I go about doing it? I mean, do I just sit down and spread my legs or....?\"\n\n\"Stroll leisurely over there and try not to draw attention to yourself as you do,\" I began explaining. \"Don't stop and look at things or talk to anyone, just walk normally to the wall and take a seat. You pick how you want to sit. If you dangle your legs, start with them crossed. If you sit up on the wall, sit with your legs flat. You're a hot young lady wearing a dress, you're going to get some attention. I want you to sit covered at first. Start with chapter three and begin reading.\"\n\n\"Ok,\" she nodded.\n\n\"As you read, glance up every once in a while, but don't blatantly stop and look around, just a quick glance. You're there enjoying a book and trying not to draw attention to yourself. Chapter three is twenty-two pages long. By the time you reach the end of the chapter, you need to expose yourself. Just make sure it's safe enough to do it. I'll be on the bench right near the wall and I'll be watching. If I get up for any reason, just calmly reposition so you are covered, wait a minute then leave.\"\n\nIt took her a couple of seconds before she spoke. \"Is that it?\"\n\n\"Yeah. It's all on you from here on out.\"\n\n\"K,\" she smiled apprehensively.\n\n\"You go first,\" I said. \"I'll be along in a couple of minutes. I don't want us walking up together.\"\n\n\"How long do I have to be exposed?\" she asked as her hand pulled the door handle.\n\n\"All day,\" I teased.\n\nShe laughed just a little while shaking her head with her smile.\n\n\"I'll give you a clear sign when it's time to go,\" I assured her.\n\nShe opened the door, grabbed her book, and headed off to her destination. I waited until she was halfway there before I left the car and followed her path. I watched as she found her spot, sat down then turned and twisted until she was stretched out along the top of the wall with her legs and feet flat on it. She opened the book as I sat down on a bench some distance away and watched her start reading.\n\nShe looked so sexy sitting there pretending to read her book. I had my phone out and was pretending to use it, but I was scanning the crowd to see if they were paying attention to her. I was also waiting for her to make her move. After a couple of minutes, I knew she wasn't really reading, it shouldn't have taken her this long to make her move. She was just turning the pages every so often.\n\nAfter ten minutes, she changed the way she was sitting. She didn't even bother to look around, she just bent her knees and brought them up to a comfortable position before resting the book in her lap. I had the perfect angle from where I sat and now opened my camera to record a little of her exposure. She glanced my way and smiled her devious smile as she notice me holding my phone.\n\nHer legs were bent, not spread, but it opened the dress up from below and showed anyone who was to look, her cute little pink pussy. I could see her glancing at me, smiling her smile as she pretended to read and turned the page. Her legs went higher and lifted the dress up more. It exposed her lips as they now softly parted and started to leak her cream.\n\nI kept watching her and snapping a few photos then recording another clip. I was also glancing around checking if anyone had noticed the cute girl in the yellow dress reading the book. I noticed a few people looking but from where they stood, they couldn't see what I was seeing. I set my phone down and just enjoyed the show and waited.\n\nShe turned the page again. I watched her eyes jump to the opposite page where I had written a note in black marker. 'Show me your tit.' She looked up now and had this surprised look on her face. We hadn't talked about this in the dare the previous night, it was something I thought up while I was cooking breakfast and she was sitting there at the table completely naked. I smiled at her and lifted my hands softly to ask her if she was going to do it or not.\n\nShe was so perfect in her execution. She kept the book open in her lap but held it with one hand as the other one went to her shoulder and the strap. She glanced up and around very subtly before reaching in and 'itching' her shoulder. She pushed her hand in and slipped the strap off her shoulder then somehow curled her hand around her boob and lifted it out. It was out for a couple of seconds before she reversed course and pulled the shoulder strap back up and into its intended place.\n\nI didn't even manage a photo of her she did it so quickly and so flawlessly. I just smiled and raised my brows before adjusting my bulging hard-on in my shorts. She smiled and giggled a little then returned to the book like nothing was out of the ordinary. She changed her position just a little and brought her legs slightly higher to expose more of her cunny to me.\n\nShe turned the page, set the book face down on the wall, then yawned. She leaned back and stretched, pushing her boobs up and making the hard-little bumps stand out, before she reached down and grabbed the hem of her dress. She gave it a toss and flared it out to be a tease. It exposed a lot of skin for the second or two it floated before settling back down to where it was originally. She returned to the book again after smiling her smile at me and raising her brows. She was such a little flirt sometimes.\n\nShe turned to the next page now and read the next note in black marker, 'one finger inside'. Her mouth hung open as she read the note again. She didn't look up at me this time, she just turned a shade of red as she blushed. It took her a minute before she finally looked up at me then around to check her surroundings.\n\nI was zoomed in with the camera on her as she prepared to follow through with my dare. I captured the wetness as it leaked from her slightly parted lips. She was dripping and there had to be a wet spot on the part of her dress she was sitting on. I snapped a zoomed in pic of her leaking before I pulled back to capture her body more.\n\nShe left the book in her lap and held it with one hand again. The other slipped down and around her knee so she was touching the back of her leg just under the dress. She rubbed back and forth for a few seconds before letting her hand trail down to her one cheek right at her side. Her fingers were now inches away from her exposed cunny. She paused and waited for a moment then turned the page and carried on like nothing was out of the ordinary.\n\nShe made her move right after she turned the page. She didn't look, didn't do anything to draw attention to herself as she touched her sex with her fingers. She just moved her hand to her middle and touched the trail of wetness before letting two fingers dip into her parted pussy. She pushed them in as she curled her fingers as deep as she could get them. I was snapping pictures as she pressed in then held for a few seconds before she withdrew.\n\nHer fingers were soaked, dipping her fingers caused her to leak more juice. It dribbled out and slowly trickled down between her legs to the material under her butt. Her fingers trailed up her leg as she cleaned the juice off on her skin. I was watching her face and waiting for her reaction. She held steady, the only reaction was her nipples swelling and pressing the fabric on her chest. I knew she was turned on, but I didn't realize how much so right now.\n\nShe turned the page and found the next note. 'Dare over. Go to the car.' She closed the book, spun off the wall and walked right on past me without even acknowledging me. I watched her go, checked out the crowd for a minute, scrolled through the pics I had of her, and then left for the car.\n\nI opened the back-driver's side door and found her there. Her legs were spread, fingers splashing into her cunny as she panted and rubbed herself. I climbed in, shut the door, and watched her for a minute as she played with herself.\n\n\"Jason,\" she whined in her sexy little girl voice. \"Quit watching me play with myself you weirdo. Can't you see I need more than just fingers?\"\n\nSo began round one for today.\n\n*\n\nThe bed was bare except for the one fitted sheet still covering the mattress. The pillows, blanket and the other sheet were in random piles around the bed on the floor. We were in the center of the king-sized bed, deep into round number two. Round one ended in the parking lot of the farmers market after she had her dare. We finished with all four doors of the rental car wide open and her riding me in the backseat.\n\nI was behind her now, pounding into her as she cried out her warning that she was about to cum. I gripped her wrists as they rested at the small of her back and pulled her harder into my thrusts. Her lips were a blur as my cock sawed between them coated with her wetness. She was cumming now and begged me not to stop until she was done. Then she begged me to slow down so she could recover.\n\nI pulled from her creamy hole and watched it quickly close after some juice dribbled out. I flopped to the bed next to her. She remained balled up on all fours as she panted and recovered. She was looking at me, I was staring straight back at her waiting for her to climb on top of me. She took a deep breath then swung her leg over my hips before sinking my cock into her cunny again. She let it rest there for a moment but squeezed her muscles.\n\n\"I didn't think me sitting there in a sundress, reading a book, would turn you on so much,\" she panted.\n\n\"I saw how wet you were,\" I recalled. \"It was leaking from you.\"\n\nShe growled and started working her hips. \"It was a really good book.\"\n\n\"Liar,\" I said as my hands gripped her hips.\n\n\"Prove it,\" she shot back.\n\n\"What was the book about?\" I instantly fired right back.\n\n\"Hmm,\" she cried so seductively. \"It had some very interesting one liners in it.\"\n\n\"I bet,\" I said and found her nipples.\n\n\"Fuck,\" she moaned and looked down at me. Lust and desire filled her eyes as her hips started to turn.\n\nIt took a few minutes, but she was going full force again after some more teasing and dirty talk. I had my hips tilted; her cunny was mashed against my cock as she ground down on me. We were bone on bone down there, I was touching so deep into her core. It was hurting the way she was grinding on me, but the pleasure was way more intense than the pain was.\n\nShe was panting and crying out in ecstasy, nails digging into my chest and leaving marks, eyes closed, nose wrinkled, mouth hung open still. Her damp skin stuck to my damp skin as her legs were spread but next to mine as she rode me. I was pushing off the bed into her, loving how deep I was inside of her right now. She was so turned on, so wet, so on fire down there. The little dare did more for her than it did for me as I teased her about it again.\n\n\"Somebody likes letting their kitty cat go outside,\" I said softly.\n\n\"We probably shouldn't do that anymore though,\" she moaned.\n\n\"Why not?\"\n\n\"Because,\" she panted. She fell silent except to gasp.\n\n\"Because.... that's all you got?\" I teased.\n\n\"I have a boyfriend now,\" she said daringly.\n\n\"You do?\" I questioned jokingly and took it in stride.\n\n\"Yeah. We probably shouldn't be doing this anymore either.\"\n\n\"Oh really?\" I asked with my brows raised.\n\n\"Umm-fuck,\" she cried as she pressed herself down hard and held.\n\nI grabbed her hands off my chest and brought them to her hips. I held her hands and her hips then rolled us quickly until I was on top between her legs with my cock pressed all the way inside of her still. I now had her hands and arms pinned to the bed above her head and stretched out as I stared right into her eyes. She had a little fear in them and thought maybe she had gone too far with her comment.\n\n\"Tell me to stop fucking you then,\" I said with my smile as I pulled back until my tip was resting right inside her opening.\n\nShe gave a throaty growl now, then wrapped her legs around my hips and hooked her ankles together at my ass. She pulled herself up and made my cock sink into her puss as she lifted herself off the bed. \"Don't stop. I never want you to stop.\"\n\nI dropped to the bed and pinned her to it. I tilted my hips, dug my cock into her pussy again and held it there. \"Thought so.\"\n\n\"Fuck,\" she panted again.\n\nI was turning my hips but stayed buried deep inside of her drenched cunny. I was slow and short with my in and out of her, pressing against her end with each turn of my hips.\n\n\"You probably don't even have a boyfriend,\" I whispered next to her ear. I wetly kissed her neck before I continued. \"You just said that to make me jealous.\"\n\nI moved to her neck and collarbone where I wetly kissed and licked her. She was twisting her upper body into my mouth and rolling her hips with mine as my cock pressed into her.\n\n\"You get to meet him tomorrow,\" she finally answered in a heavy pant.\n\n\"Tomorrow?\" I asked as my one hand let her wrist go and moved to cup her boob.\n\n\"Mmmm,\" she moaned as I twisted her nipple. \"For lunch.\"\n\n\"Good,\" I said as I looked at her now.\n\n\"Good?\" she questioned with her sly smile.\n\n\"That gives me plenty of time.\"\n\n\"For?\"\n\n\"To fuck you raw and leave you completely satisfied until I can come back,\" I said with my sly smile.\n\n\"Oh gawd!\" she roared. \"I hope so.\"\n\n\"And, it's my turn now,\" I said as I referred to our game.\n\nThe look on her face, the sly and sexy smile that she flashed as her hand slipped between her legs and touched her pussy said she couldn't wait. I felt her fingers teasing her clit then spread her lips to feel my cock sliding in and out of her down there.",
        "\"What's the dare?\" she bravely asked.\n\n\"Can't tell you,\" I replied. Her fingers were now teasing my balls. \"Wear a skirt... but.... with panties.\"\n\n\"With panties?\" she questioned.\n\n\"The sexy red ones you wore to court back in March.\"\n\n\"K,\" she smiled. \"What shirt should I wear?\"\n\n\"You pick. Just make sure it matches the skirt. I want you to look good for your... boyfriend.\" I put a little extra emphasis on boyfriend.\n\n\"Mmm.\" She squeezed my balls a little. \"I know just the one. Baby blue, V neck, stops at my hips.\"\n\n\"A red bra won't go with the blue,\" I teased.\n\n\"Pasties on my nips,\" she shot right back.\n\n\"Perfect.\"\n\nWe rolled again so she was back on top. Once we were settled, she spun around so her back was to me. She started a rapid rise and fall, slapping down on me then twerking and grinding before going back to her wild and rapid pace. My hands went to her hips and started pulling her down as I thrust up into her. She was begging me to cum with her, I told her I was almost there and to go ahead. She cried out, came hard and flooded me then slowed down and looked over her shoulder once she was finished.\n\n\"You lying shit,\" she giggled.\n\n\"Raw,\" I reminded her. \"It's only two o'clock, I've got another four hours before I might get hungry and need a break.\"\n\nShe sat back and let me sink down into her creamy center as she still looked over her shoulder at me. She chewed her bottom lip for a moment and had this smoldering sexual look on her face before she spoke.\n\n\"Where do you want me then?\"\n\nMy finger tapped my chin as I pretended to think.\n\n\"Like this, from behind, facing you, on my back, in my bum, on the couch, in the kitchen,\" she was naming things just to be a tease.\n\n\"Let's see how flexible you are,\" I responded now. \"On your back on the edge of the bed, legs behind your ears.\"\n\n\"That's easy,\" she said so seductively. \"Childs play really.\"\n\n\"Yeah,\" I replied. \"Which hole do you want the rubber fist in then?\"\n\n\"You pick,\" she replied without hesitation.\n\n\"Get up then,\" I ordered.\n\nShe rolled over and got twisted up like I requested. The marathon of sex continued on until well past six in the evening minus the fist.\n\n-------------------------------------------------------------Sunday ------------------------------------------------\n\nThe first thing Edward said to me as I shook his hand set the tone.\n\n\"My name is Edward, don't call me Ed.\"\n\nEmma introduced us. \"This is Jason, Jason this is Edward.\"\n\n\"Hey Ed, nice to meet you,\" I said as I held my hand out.\n\nIt was right after that he dropped his opening line. I ignored it and let it slide. Maybe he was socially awkward. I'd give him a chance to redeem himself. Besides, if he didn't, it wasn't like I had to deal with him. I figured if I did come to see Emma, he wouldn't really be around. What would the point of me coming around be if he was?\n\nWe struck up a conversation about me, golf, the tour, what it was like, and the whole nine yards. He was curious about how it worked, the ins and outs, the rules, the courses, were we secretly a bunch of party animals, how I made it, if we could play a round together sometime. We talked about it for a good fifteen to twenty minutes as Emma brought out some finger foods and drinks before joining us and the conversation.\n\nI turned the conversation to him after a while longer. What was his business, how did he run it, what was he dealing with? He got evasive, dodged my questions, flat out told me I probably didn't understand business. I let that go too. I understood people and my read on him so far, not good. He was the guy my dad would move right past because he had little to no value. The only thing of value he had was the fact that we were after the same woman. I was light years ahead of him in that regard.\n\nShe asked a couple of questions that he did answer but kept them short and simple. She and I started talking after that. He joined in here and there but for the most part it was us telling stories about the good times and the times we were apart. My drink was empty, hers was shortly after mine, then his a while later. She stood and took the empties inside to make more.\n\nShe looked damn sexy right now. The skirt, the same one she wore at her graduation party, had my attention. I was trying to keep my eyes away from it, but I couldn't help it. I knew what we did in that skirt and I knew what was under it. Hell, you could see what was under it. The material was thin, her red panties were visible, and those, those looked so sexy on her too. I recalled those in the hotel room after court that afternoon.\n\nShe came back out, set the drinks down then passed them out. I thanked her, gave her my smile as she smiled back and gave me a wink. He was on his phone texting away and oblivious to us and the sexual tension in the air right now. We hadn't had sex today, we were letting it build, taking a break after yesterday. Even me, the horn dog, was a little sore after yesterday.\n\nWe sat for another ten to fifteen minutes, the three of us, and talked. It was mostly me and Emma talking again. Ed, or Edward, was listening but mostly working on his phone. He'd say something or ask something here and there but for the most part he wasn't even there really. He was just taking up space and making me wait until he was gone before I could have Emma all to myself again. It was my fault in the first place that he was here so I couldn't blame her for that. I should have thought this out a little better before I went and opened my big mouth.\n\n\"Can you help me make lunch?\" she asked me sweetly once the conversation took a pause.\n\n\"Help you make it?\" I asked.\n\n\"Yeah. I'm making turkey bacon club sandwiches with a salad and some chips for lunch. I need help cooking the bacon.\"\n\n\"You do?\" I teased. \"I thought you didn't cook.\"\n\n\"I don't,\" she smiled. \"Hence the reason I need you to cook the bacon.\"\n\n\"But I'm having such an interesting conversation though,\" I said sarcastically. \"How dare you interrupt me?\" Edward didn't even hear it he was so lost to his phone right now.\n\nShe looked at me with annoyance. \"Can you help me or not?\"\n\n\"Come on,\" I sighed.\n\nI stood over the pan cooking bacon a few minutes later as she stood near the sink working on everything else.\n\n\"What do you think of him so far?\" she asked.\n\nPlay nice I reminded myself.\n\n\"I don't honestly have an opinion of him yet,\" I replied to keep things vague. \"He's on that phone an awful lot though.\"\n\n\"Well, we did spring this on him so he might be busy with something,\" she defended him.\n\n\"Maybe,\" I said and let it go.\n\nShe was behind me now and wrapped her arms around my body. Her nails scratched a trail down my chest to my shorts. She cupped my flaccid cock and gave it a shake. I wasn't going to play the game, but she made the first contact with me. And so, it began.\n\n\"I'll make it up to you later for putting up with him,\" she offered. \"Thank you for being nice so far.\"\n\n\"I'll try to continue,\" I said as she squeezed my cock again.\n\n\"Any bacon ready?\" she asked.\n\n\"Nothing yet,\" I replied. \"Another turn and I'll have some.\"\n\n\"K,\" she said after another squeeze. She returned to her spot in the kitchen.\n\nI pulled the bacon and put more in the pan before walking it over to her. I set it down near her, checked the porch, then wrapped my arms around her. She growled softly, melted into my touch and molded her body to mine as my hands cupped her boobs. She couldn't find the pasties, but the red bra that matched the panties had her boobs lifted and squeezed together making them appear more than perfect.\n\n\"Yes?\" she questioned with a little growl in her voice. My hands had left her boobs and were at her tummy then her hips.\n\n\"There's a couple of pieces to start with,\" I said. My hands were at her cheeks now and squeezing them.\n\n\"Thanks,\" she replied, breath caught in her throat just a little as I slipped my hand into the skirt and touched her panties from the front.\n\n\"I only need a few more,\" she panted. Both my hands were under the skirt, one between her legs from the front, the other from the back. Her panties were still between me and her skin.\n\n\"I better go flip them over,\" I said and left her standing there.\n\nWe were both stealing looks at each other as we worked. She was busy toasting, cutting, chopping, and preparing. I was tending the bacon. We were both wondering who was going to make the next move. She had touched me, I had touched her, who was going to up the game? I finished the batch I had started then brought the plate over to her and set it down.\n\n\"I'm going to go out and grab my drink,\" I said. \"I'll be right back.\"\n\nI left her there in the kitchen and in a slight state of shock that I didn't try anything further with her. I went out and sat down. He glanced up from his phone then went right back to it again as I took a long drink and emptied my glass. I looked out at the community pool that was right behind her porch and watched the people enjoying their day.\n\n\"We should be out there enjoying the sun,\" I said to Edward.\n\n\"Maybe,\" he replied.\n\n\"Of course, I see the sun every day, so....\"\n\n\"Yeah, me too,\" he said without looking up. Ed was pretty pale, he and the sun did not see each other often. He obviously wasn't paying attention again. I sat there for a moment in silence.\n\n\"I thought you were coming back in?\" Emma quipped as she came out with the sandwiches.\n\n\"I had to cook the bacon,\" I offered. \"I did my part.\"\n\n\"Oh, ok,\" she half smiled. \"I'll be back then with the salad.\"\n\n\"And a refill,\" I called and shook my glass.\n\n\"Does this look like a restaurant?\" she asked sarcastically with her hand on her hip.\n\n\"Your house, your party,\" I replied.\n\nEdward chuckled a little at that.\n\nShe looked at him then back at me. \"Whatever!\"\n\nShe grabbed my empty glass and headed back into the kitchen. I gave it a minute then left the porch and quietly went inside. Emma was working on the salad as I stood behind her again. She knew I was there but said nothing and did nothing. She just continued on working as my hands slipped up under her skirt again.\n\nI grabbed her panties at her hips and pulled them straight down until they got to her knees. From there gravity took over and they dropped the rest of the way to her bare feet. She didn't react, did nothing but pretend I wasn't there. The only thing she did was step out of them. I bent down and picked them up, studied them for a moment and noticed the wetness in them before I placed them into my pocket.\n\nI was under the skirt again, hand on her cheek, fingers feeling the crack that split them in half. I traced it with my middle, pushed them apart and let my tip touch her pucker first. I leaned down and breathed on her neck letting her know I was there. She tried to ignore me still, but her head tilted and exposed her neck just a little. I licked her neck up to her ear then blew on it softly. My finger left her pucker and moved just a little further between her legs. They instinctively parted just enough so my finger could find the wetness that coated her entrance.\n\n\"Emma,\" I whispered next to her ear. I blew softly on her skin right after I spoke her name. Goose bumps popped on her skin as she shivered a little.\n\n\"You're being mean,\" she spoke softly in her sexy little voice.\n\n\"I was teasing you, Emma,\" I whispered. My finger sank into her.\n\n\"Well, I don't like it,\" she protested.\n\n\"Your pussy is telling me a different story.\"\n\nShe tilted her neck more as my lips found the now flush skin. I was pulling my finger in and out of her excitement as she pushed her neck into my lips and started to give in more.\n\n\"I don't know what you're talking about.\"\n\nI started curling my finger inside of her faster, then wiggled it back and forth. \"Hmmm, hear that?\"\n\nWe could both hear her wetness as my finger moved.\n\n\"I'm trying to make the salad,\" she said almost breathlessly. Her one hand was still holding the tongs. The other was wrapped around my head with her fingers curled in my hair pulling me into her neck as I kissed her again.\n\n\"I'm not stopping you,\" I countered. Her head was up and tilted back giving me the needed space to let my lips and tongue find her throat. My finger was swirling around the walls of her cunny as deep as I could reach without straining.\n\n\"Your tongue is very distracting though.\"\n\nI stopped licking her and went to wetly kissing her and moving my way back around to the side of her neck where I had started.\n\n\"And your lips,\" she half giggled.\n\nI let my nose now trail across her skin and blew softly where I had kissed earlier. I knew what was coming next, but I tried to prevent it by touching her spot deep inside of her.\n\n\"Hmmm, and your finger too.\"\n\nMy free hand went to my zipper and quickly unzipped it. I reached in as I responded. \"Now who's being mean?\"\n\n\"You should have come when I asked.\" My finger was still inside of her but slowly dipping in and out of her.\n\n\"Are we talking about yesterday in the bedroom?\" I teased.\n\n\"Jason,\" she giggled. \"Not that kind of come.\" My cock was out now, I was waiting for her to tell me to get my finger out of her.\n\n\"Oh,\" I replied and played dumb.\n\n\"Oh,\" she mocked me. \"Your finger is still distracting me by the way.\"\n\nI dropped it out, held her skirt up, pushed forward and let my dick slide between her legs.\n\n\"Jason,\" she growled in her sexy little voice.\n\n\"What? It's not any of the three things you told me I couldn't use.\"\n\nHer lips were parted and coating my cock with her cream as her hips moved subtly back and forth. I don't think she even realized she was doing it at first.\n\n\"Now that your hands are free, can you help me make the salad?\"\n\n\"What would you like me to do?\" I was moving my hips now and sliding along her parted lips. I wasn't inside but her wetness and the squeezing of her thighs made it feel pretty dang close to it.\n\n\"Open the croutons.\"\n\nI reached over and picked up the bag. As I leaned, she tilted her hips and pushed her butt out. I could feel her clit riding along my shaft as it moved. I pulled the bag open and tried to hand it to her.\n\n\"You put it in... them in.\"\n\n\"How much do you want?\"\n\n\"A little,\" she practically panted.\n\nI gave the bag a shake and let some of the croutons fall out. She was leaned more forward now, basically begging me to take her up on her innuendo and put it in.\n\n\"That good?\" I asked.\n\nShe glanced back at me wondering why I hadn't picked up on what she said. I moved back an inch but held still and waited for her answer.\n\n\"No, a little more.\"\n\nI turned the bag over and let a few more fall. At the same time, I moved back and let my cock rest right at her opening. The curve of her body, how wet she was, how hard I was, the way I was leaking my desire for her, all one of us had to do was move and it would slip in. I didn't, I held and waited on her to take me.\n\n\"Good?\"\n\n\"Yeah,\" she whimpered. \"The dressing now.\"\n\nI reached over, not moving my lower body, and grabbed the dressing off the counter. Even just the little shift let my head dip into her opening before I pulled back again.\n\n\"How much?\" I asked.\n\n\"All of it,\" she yelped as she pushed back.\n\nI sank into her, felt her lips part and her cunny grip my cock as she pushed back into me. Her heat and wetness surrounded me and made me gasp out loud.\n\n\"Fuck me, Jason,\" she begged softly.\n\n\"What about...?\" I softly spoke by her ear.\n\n\"I don't care, fuck me.\"\n\n\"Emma,\" I gasped in mock shock.\n\n\"You do this to me,\" she panted. She was pushing back and forth, letting her cunny slide on my cock as I stood still. \"Make me so wet, I can't stand it. Please Jason.\"\n\n\"We have all night after he leaves.\"\n\n\"I can't wait until then. I need you now.\" She was working her hips faster, my cock slipping more and more, in and out.\n\n\"Emma,\" I said calmly. \"We need to get back out there.\"\n\n\"Jason,\" she whined in her little girl voice.\n\n\"Right after lunch,\" I whispered so close to her ear. My hot breath hitting it and making her shiver a little. \"Right after lunch I'll have you.\"\n\nI stepped back and let her skirt fall back into place. My cock was soaked as my hands tucked it back into my shorts. She was standing there panting; her puss was on fire right now after that little exchange. I picked up the salad bowl once I was tucked away.\n\n\"I'm going to take this outside,\" I said. \"Are you coming?\"\n\n\"In a second,\" she exhaled. \"I have to fix your drink.\"\n\nA half an hour later lunch was over. She was sitting there the whole time, molten cheeks, flush neck, playing footsies with me under the table as we ate. He was completely oblivious to the whole thing. It didn't take a genius to see that a woman was turned on. He just ate his lunch, said very little still, then went right back to his phone once we were done.\n\nShe stood and started gathering the dishes, looking at me the whole time wondering if I was going to come inside with her.\n\n\"Do you need help with the dishes, Em?\" I asked.\n\n\"Sure,\" she smiled. \"It'd be nice if my boyfriend would help though.\"\n\n\"I've got to take care of this deal then make a call,\" he replied. \"Can you give me ten minutes?\"\n\n\"Do what you have to do,\" I said to him. \"I'll help you, Em.\"\n\nI grabbed what I could then headed inside.\n\n\"I'll wash,\" I offered. \"You keep bringing them in.\"\n\n\"K,\" she smiled.\n\nI rinsed the plates and small things then loaded them into the dishwasher. The larger things I started hand washing them then placing them into the rack to dry.\n\n\"Are you almost done?\" she asked. She was right beside me leaning in with her cute little smile and mischievous look.\n\n\"Almost,\" I said and leaned over to kiss her on the lips.\n\n\"Well... hurry up and finish so we can finish.\"\n\n\"Finish what?\" I asked playing dumb.\n\n\"You know what,\" she sassed. Her hand was slowly running down my chest.\n\n\"You know what we were missing from today?\" I asked.\n\n\"What?\" she asked cutely. Her hand was now at my zipper and pulling it down.\n\n\"Pinky.\"\n\n\"He's in the bedroom. It's a little late now.\" My cock was out as she stroked it.\n\n\"Now who is the one distracting who?\" I asked. Her thumb was circling my leaking desire.\n\n\"Distracting?\" she questioned. \"Motivating.\"\n\n\"Sit up on the counter right here,\" I ordered and patted it.\n\n\"And do what?\"\n\n\"Show me. Play with yourself.\"\n\n\"I already am,\" she replied.\n\nI glanced down at her to see that her hand was between her legs. For whatever reason, that did it for me. I shut the water off and scooped her up into my arms. We spun around and moved to the island counter where I set her down. I glanced out the slider and could just see his legs as he sat there at the table still just out of sight.\n\nShe sat right on the edge of the counter, skirt balled up, legs open, fingers still busy between her legs. She seldom played with herself, only when she was really turned on, and right now, she was drenched. I was between her legs, poking her fingers with my tip until she guided it home. I was inside of her, my mouth finding hers in a wild kiss as my hips thrusted hard into her wet hole.\n\nWe were frantic right now, fucking like animals right there in the middle of the kitchen. I was pulling her into me using her ass as leverage. She was humping into me, fingers circling her clit and bumping my dick as it sawed in and out of her. The kissing had stopped, her face was buried in my chest as she let out muffled moans.\n\nShe was barely on the edge of the counter as I continued pulling her into my thrusts. Her legs rested on my hips and opened herself up more for me. I was twisting my hips and driving as deep as I could get into her. Nails digging into my back as the raw pleasure ripped through our bodies.\n\nI grabbed one leg as the other dropped and touched the floor. She was half standing, half sitting now but still humping into me. Her fingers still played with herself between her legs as my cock drove in and touched her deep inside. She was crying out into my chest, digging her nails into my back as I started to explode into her. My hand gripped her body tighter telling her I was cumming without saying it.",
        "I kept going, lifted her up and set her on the edge of the counter again right after I finished. She was panting louder and warning me. I was encouraging her, my fingers replaced her fingers as I flicked her clit. She leaned back, one hand covered her mouth, the other balled up my shirt so she could hang on to me. I was full in and out, using my length to push her over the edge.\n\nShe was begging me not to stop, she wanted another one, wanted me to fuck her again right then. I stepped away and pushed her back further onto the counter. I tossed her skirt down her legs and turned around to go to the sink after telling her not to move, not to do anything but sit right where she was. Two seconds later, he opened the door and walked inside.\n\n\"So, I called her back and left her a voicemail, but I haven't heard anything back,\" I said and pretended to be in a conversation with her as I scrubbed a clean pot.\n\nMy cock was still out, I was still panting from the wild exchange we had just had. I was hoping he wouldn't come over by the sink. I was hoping she was sitting there still and not panicking. I didn't dare turn around. I just had to let it play out and hoped for the best.\n\n\"Do you think I should call her again?\" I asked.\n\n\"Give it a day or two,\" Emma replied rather calmly.\n\n\"I hate waiting.\"\n\n\"He's in the bathroom,\" she whispered to me.\n\nI glanced back as she tilted her head towards the bathroom. She was still panting a little but remained right on the counter where I had pushed her. I took the moment to push my dick back into my shorts and zip up.\n\n\"You're a bad girl,\" I whispered.\n\n\"I know,\" she smiled her devious smile. \"Just wait until later when pinky joins us.\"\n\nThe bathroom door opened so I quickly turned back to the sink and splashed some water around.\n\n\"I hate to eat and run but I've got to get going,\" he said.\n\n\"You do?\" she asked.\n\n\"I've got to get this deal worked out and I need to be home to do that.\"\n\n\"Ok,\" she said.\n\n\"I'll call you tomorrow,\" he offered.\n\n\"It was nice meeting you,\" he called to me.\n\n\"Yeah, you too. Next time I'm in town we can hit the course together.\"\n\n\"Sounds good,\" he said.\n\nAs soon as she closed the door and locked it, she was dropping her clothing. \"You, me, and pinky in the bed, right now.\"\n\nI shut the water off and chased her into the room.\n\n*\n\nI never did understand what she saw in Edward. But somehow, they managed to stay together. They were complete opposites of each other in every aspect of life. I met him a couple of more times over the summer as I came in and out of town and then at Thanksgiving with Uncle Ronnie and Aunt Joy. That's a whole other story. I will say Uncle Ronnie was unimpressed with him.\n\nEvery time I saw the guy it was more of the same. He was odd, controlling, self-centered, egotistical, all about himself, and rude to Emma. He also had a strangeness to him like he was hiding something from all of us. The way he dodged questions, hid his phone from view, and stopped talking suddenly when we would come into the room was just not normal.\n\nHe was in and out of town for business, but he really couldn't tell me what business he was in. It left an odd taste in my mouth and didn't sit well with me. I warned Emma something was off, but she didn't see it. She told me to stop being so critical and jealous of him and give him the chance he deserved. I had to play nice, bite my tongue, and let my frustrations with him remain unspoken so I could keep the peace between Emma and me.\n\nIt was August, my last summer visit before she had to return to teaching, that she dropped the next chunk of bad news. She was not going to renew the lease on the apartment, she didn't need my help anymore, and her and Edward were moving into a condo together. We had to have another long talk about us, what it meant, and where we were going to go from here. At the end, we were still 'us', but I knew this was just another step in the direction of a heartbreaking end.\n\nI renewed the lease on the apartment for another year. If we were still going to be us, I needed a place to stay when I came into town. I wasn't going to stay with her at their place and have relations with her there. I hated the guy, but I had some respect in that regard. Plus, if they did break up, she would have a place to go.\n\nIt was odd coming into town that next visit. I was at our place, the apartment, but it was just me there by myself. She came over, visited for a while, we had sex, then she went back to him. The whole visit was like that, she spent the night once. It wasn't how I wanted us to be. It just wasn't the same and didn't have the same magic it once had.\n\nI started dating again but never took anything too serious. I went back to Jenny, tried that out for a couple of months but I knew that wasn't going to work. She was in college, I was on the road, we seldom met, and if I did have free time, I wanted to spend it with Emma. Jenny and I did the mutual breakup thing and haven't seen each other since. We still talk, but dating is out of the question.\n\nDating made me realize quite a few things. I always found myself comparing them to Emma and what I had with her. No matter how hard I tried not to, I always did it. The facts were simple, I wanted Emma. I wanted to be with her, to have her, to hold her, to call her mine, to start a life together, and to plan for the future with her. There were two major problems with that. The obvious one, she was with Edward, and the second one, which was just as difficult to overcome, she had made the rule that we couldn't be together in a serious relationship.\n\nI realized something else too, and this one was far more disturbing. We were changing. I was trying not to be the jealous other guy, but I couldn't help that. I'd drop these subtle hints and little digs that she would ignore but I knew she understood what I meant. She was getting worn down and changing too. He was manipulating her and changing her from the happy and free Emma to a more run down and this is the way things are and I can't do anything to change them.\n\nThe last time we were together really opened my eyes and made me realize how bad it had gotten. It was the week between Christmas and New Year's, I was off, she was off, he was gone out of town again. I flew in, spent the night with her, then we left town to go someplace to get away.\n\nShe revealed to me during the trip that she had caught Edward in a lie. She ended up finding out that he had been cheating on her. Emma and I, of all things, ended up getting into a fight about him cheating on her. I told her she needed to leave him. She wanted to give him another chance. It didn't make any sense to me why she wanted to stay with him.\n\nWe fought and didn't speak to each other for half a day before I finally yielded and made peace with her just so we could talk again. The trip was rocky after that. It wasn't the normal, Emma and Jason trip. She complained about him a lot, I listened and tried to be nice. Then I'd drop a few subtle digs against him, she'd let it slide. By the end we were edgy again, and for the first time since we had become 'us', we were happy to get away from each other.\n\nI should have handled it differently. I should have been more open and understanding. I should have told her then how I felt about her. I realized after the week was over and I had time to think about it, that everything happening to her was partly or mostly my fault. I had slowly, over the course of time, trained her to accept the fact that men were jerks, they strayed, lied, manipulated, abused, and were all the same. I had strayed on her, lied to her, and was a jerk to her at times. I was no better than Edward, the only difference was I was doing it in front of her, right to her face, rather than behind her back. And I told her I wasn't like that.\n\nAfter that trip, we were in a holding pattern if you will. I would call her, she wouldn't answer and not call me back for a couple of days. When she would call, I would miss it, then not return her call for a couple of days. That went on for a couple of weeks until she finally picked up the phone and talked to me.\n\nI wanted to see her and have a face to face about everything. I wanted to tell her everything and lay it all out there. She was evasive and wasn't ready to see me yet. She was busy with school and with him and trying to repair their relationship. I didn't push it; I was happy we were starting to talk again. I had to wait on her to invite me to come see her.\n\n------------------------------------ Saturday, Mid-March, ten months later ----------------------------\n\nI invited myself, her invitation still hadn't come. She had called an awful lot these past couple of weeks. She would call, complain a little, not want to hear any real solutions, then hang up annoyed with me. Within the next day or two, it would repeat itself. The straw that broke the camel's back was last night. I finished my round of golf late, got dinner then got settled in for the night before I noticed all the missed calls and the texts she had sent me. I called her immediately.\n\n\"Emma?\" I questioned as the phone clicked a few times. \"Em, you there?\" Nothing. The call dropped.\n\nI redialed again and let it ring until she answered.\n\n\"Hey,\" she half whispered.\n\n\"I got your messages,\" I said. \"Why are you whispering?\"\n\n\"No reason,\" she said very softly. \"Where were you when I called earlier?\"\n\n\"Golfing.\"\n\n\"But you were done by noon time yesterday.\"\n\n\"We switch,\" I replied. \"I golfed in the morning yesterday, so I had to golf in the afternoon today. I didn't get finished until the sun was about down. Now I'm getting ready to hit the hay.\"\n\n\"Oh,\" she said kind of disappointed by that.\n\n\"I'm here,\" I said quickly. \"Talk to me Emma, tell me what's on your mind. You sounded pretty down yesterday. You don't sound very happy today. Is everything ok?\"\n\n\"I'm just... I'm just tired,\" she sighed. \"You know, I'm tired of everything.\"\n\nI didn't know exactly as it could be a number of things. It could be me, it could be him, it could be the situation. I had to dance around and figure it out before I could focus my thoughts and honestly look to help her.\n\n\"Tell me what I can do to help,\" I offered. \"What do you need?\"\n\nShe sighed again. \"Nothing. I know you're busy and I shouldn't have called.\"\n\n\"I'm never too busy for you,\" I reminded her. \"Tell me what you need and I'll try to help.\"\n\n\"I have to go, Edward is home,\" she said softly. \"Sorry I called.\"\n\n\"Emma?\" I questioned but the line went dead.\n\nI called her right back, but it went straight to voicemail as she denied me. A text came right after saying that she was busy and that she would call me back. It didn't sit well with me. You know that little voice inside your head that says you need to do something or else? He was screaming at the top of his lungs right now and kicking the pit of my stomach on top of that. That's when I invited myself.\n\nAs bad as the timing was, I had to do this right now. It was going to hurt to tell her how much of a fool I had been and how sorry I was for hurting her all this time. But I had to swallow my pride, confess my feelings, and hope it wasn't too late. It was now or never, that precious little girl that you actually really do love deep down, on a different level, actually needs you to fight for her right now.\n\nI made a couple of calls and got my flight set up for early morning. I barely slept that night thinking about all the things I needed to say, all the things I needed to do, and all the things I should have done. I wouldn't be in this situation if I had just realized how important having her really meant to me. Losing her made it clear and hopefully I wasn't too late.\n\nThe plane landed and taxied the runway before stopping in the hanger. I left in a hurry and jumped into the waiting car that would take me the rest of the way. I ran around in circles in the car about what I was going to say. How was I going to tell her how I felt? How would we make this work? Would she even be willing to hear me? I hoped for the best possible outcome as I knocked on the door and waited for her to answer.\n\n\"Jason!\" Emma gasped in surprise when she answered the door. \"Holy shit. What are you doing here?\"\n\nIt took me a second to answer as I looked at her. Her long brown hair was now short and blonde. She had bags under her eyes and looked thinner than her normal thin figure. She didn't have the extra pounds to lose and she was down about ten from our last visit together. She looked run down and tired, a far cry from the happy and spirited Emma I was accustomed to seeing.\n\n\"You didn't sound good,\" I replied. \"I came to see what's going on.\"\n\n\"Nothing,\" she sighed. \"Everything is fine.\"\n\nI looked at her and shook my head. \"It's not. I can tell just by looking at you it's not. What's going on?\"\n\n\"Jason,\" she said getting defensive. \"I'm fine. See, look?\" She spun around. \"I was just having a bad day, that's all.\"\n\nI shook my head. \"It's more than just a bad day. What happened to you?\"\n\n\"Don't you have golf or something you should be more worried about?\"\n\n\"I didn't make the cut,\" I lied. The truth was I was leading by three shots after two rounds and I was set to tee off around two in the afternoon. Right now, that was up in the air if I'd make it back or not. This was by far more important than golf.\n\n\"Sorry,\" she offered. \"I guess we were both having a bad day yesterday.\"\n\n\"I don't care about golf right now,\" I said. \"I care about you and what's going on. So, tell me what's going on. Where is Eddy? Do we have time to talk?\"\n\n\"He's out at the moment,\" she replied.\n\n\"Ok? So, do we have time to talk or not?\" I questioned with a little annoyance in my voice.\n\n\"There's nothing to talk about,\" she said with a little anger in her voice. \"I just told you, I was having a bad day and I overreacted. There's nothing to talk about.\"\n\n\"Dammit, Emma!\" I cried. \"Stop being so defensive. Is there something going on that's more serious? Is he hurting you? Is he hitting you? What is he doing to you?\"\n\n\"He's not hitting me,\" she said softly as her lip quivered a little. \"He's just upset at something and I got the brunt of it. I'll be ok though. Don't worry about me. I'll be fine.\"\n\n\"Ok,\" I nodded. I was thankful he wasn't hurting her physically. \"We need to talk though. You and I need to sit down and discuss a few things. Can we sit down and talk?\"\n\n\"If it's about Edward, you can save it,\" she hissed. \"I don't want to hear it.\"\n\n\"It's about me,\" I said. \"And you. And a little bit about him but you need to hear it. Please!\"\n\n\"Ok,\" she whimpered as her eyes started to tear up. \"Come inside please so we don't make a scene out here.\"\n\nShe thought she knew what was coming as she let me inside. I was here to break it off with her. That's what she was thinking. Why wouldn't I do that? She was with him and she said they were serious so that's why I was here.\n\nI stepped inside and stopped to let her shut the door as I looked around the place. I would let her decide where she wanted to have this conversation. She surprised me as she wrapped her arms around my body and hugged me tightly. I hugged her back and held her tightly for a moment before we let go and looked at each other.\n\nShe was teary eyed and sniffled a little as she looked up at me. The hurt, the pain, the situation, the stress from everything was plainly written on her face. Fear was also there. The fear that this was over, and I was here to tell her that it was over. It was hard to look at her and see her like this right now. Emma just wasn't Emma right now.\n\n\"What has he done to you? You don't sound like you anymore. You don't even look like you anymore.\"\n\n\"I'm still me,\" she said faintly.\n\n\"I don't see it,\" I said softly.\n\n\"Is it my hair?\" she questioned.\n\n\"It's not just the hair,\" I replied while shaking my head in disbelief. \"It's everything.\"\n\n\"Edward likes blondes, so I did it for him.\"\n\nI was just about to go off the deep end, but I took a breath and relaxed. The girl Edward had been with was a blonde, so Emma changed her hair color for that reason. I exhaled slowly before I spoke.\n\n\"I like blondes too, Em, but I wouldn't make you change your hair color just for that.\"\n\n\"He didn't make me,\" she offered. \"I just kind of did it....\"\n\nI was shaking my head in disbelief again. This was not going the way I had planned. I had to regroup and refocus on expressing my concerns and telling her how I felt about her and us. I needed to ease into it though based on her mood right now.\n\n\"Let's go sit and talk,\" I said calmly. \"Shall we?\"\n\n\"Ok,\" she sniffled and wiped her eyes. \"Come on.\"\n\nWe walked to the dining area and sat at the table across from each other.\n\n\"So, you dodged my question,\" I started. \"Where is he exactly?\"\n\n\"He's out for the day,\" she said still annoyed I was asking about him.\n\n\"Ok,\" I sighed and was about to move on to a different topic.\n\n\"What?\" she quipped. \"I'm not sure where he is at the moment. He could be at work, he could be at his girlfriends, he could be on a golf course, he could be at the bar for all I know. He just said he was going out for the day.\"\n\n\"Aren't you his girlfriend?\" I asked. \"Shouldn't he be here with you?\"\n\n\"You know what I mean.\"\n\n\"I honestly don't though,\" I said calmly. \"You're the one who suggested that, not me. I just want to be able to sit here, talk with you, say what I need to say, and not have to worry about him coming back. That's why I keep asking you where he is.\"\n\n\"I don't know where he is,\" she sighed in annoyance.\n\n\"Ok,\" I groaned and gave up on actually learning where he was. She obviously didn't even know. \"But, since you brought up him and cheating, why are you still with him? The Emma I knew wouldn't have put up with a cheater, ever. If he's at his girlfriend's house right now, that's twice that you've caught him.\"\n\n\"I've been cheating on him too though.\"\n\n\"With who?\" I asked with genuine curiosity now.\n\n\"You,\" she said slowly.\n\n\"That doesn't count,\" I said. \"It's different with us.\"\n\n\"How so?\" she questioned.\n\n\"I don't know,\" I sighed. \"It just, it just is. It's us, Em. Me and you. It's our thing.\"\n\n\"Oh,\" she huffed. \"Good answer. That makes me feel better.\"\n\n\"I mean.... what do you want me to say?\" I asked with a little desperation in my voice. \"It was me and you long before he was even in the picture.\"\n\n\"So, that makes it better?\" she asked with growing anger.\n\n\"Oh gosh,\" I sighed to myself as I hung my head. I was losing focus again and getting way off track. It was time to read and react. That's what I did best.\n\n\"Yes, Emma,\" I snapped. \"That does make it better. At least I'm not hiding it from you. You know I date.\"\n\n\"Thank you, Mr. Considerate,\" she shot right back.\n\n\"It's funny that you mentioned him being at his girlfriend's house. Someone I know saw him with another girl last week.\"\n\n\"Who?\" she asked.\n\n\"Your boyfriend.\"\n\n\"No! Who saw them?\"\n\n\"It doesn't matter,\" I replied. \"I have the pic they sent me if you want to see. And it's not the blonde girl either.\"\n\n\"Where did they see him with her?\" she asked.\n\n\"Texas.\"\n\nShe was hurt now and knew I wasn't lying or bluffing. It wasn't my intention to hurt her. I was way off track again, but I was taking the conversation where she was leading it. I had to get back on track. Why was this so hard?\n\n\"I'm sorry, Emma,\" I offered. \"I really am. I hate to see you hurting like this.\"\n\n\"I thought you were here to talk about us,\" she quipped. \"You're doing an awful lot of talking about him instead.\"\n\n\"I'm sorry, Emma. I really am. I did come here to talk about us, but I keep going off on these tangents. But I have to ask why? Why have you given up on your basic principles of what a relationship actually means? Do you hear yourself right now? This guy is totally disrespecting you and everything you stood against and you're letting him walk all over you.\"",
        "Finally, she stopped being so defensive about him for a moment. \"What do you want me to do then? What should I do?\"\n\n\"Try leaving him and walking away. You don't deserve this, nobody does. You are ten times better than this idiot you call your boyfriend. I'm sitting here right in front of you and I hardly recognize it's even you right now. Emma, what has he done to you? This is not who you are.\"\n\nShe sighed hard and looked at me. \"At some point, we all have to change and let certain things go in a relationship.\" She was back to being defensive again.\n\n\"Have you absolutely lost your mind right now!? Are you saying that just to make me mad? If you are, it's working.\"\n\n\"Fine!\" she cried. \"What should I do? Should I walk out of here? Should I just leave? Where will I go if I just leave?\"\n\n\"Yes!\" I exclaimed. \"Tell that idiot he's done hurting you. Walk out of here and start over. You can come with me. Come live with me and I'll take care of you. I'll be there for you.\" I was just about to tell her how I felt but she jumped in now.\n\n\"I can't keep doing that anymore either, Jason,\" she croaked. \"I can't keep pretending to be your girlfriend anymore. I'm tired of the rollercoaster of emotions, I'm tired of lying, I'm tired of living two different lives, I'm tired of hiding things. I can't do this anymore.\"\n\nI jumped at the chance now. \"Then let's stop pretending.\"\n\n\"You didn't come here to check on me, did you?\" she asked while shaking her head. \"You came here to tell me this is over and you are done with me.\"\n\n\"No-no-no,\" I said quickly. \"That's not it at all.\"\n\n\"Then what, Jason?\" she scorned. \"What did you come here for?\"\n\n\"I came here to tell you how I feel about you,\" I started. \"I came here to tell you I don't want to pretend anymore. I want us to be real. I want our relationship to be real. I want a real future with you. I want to be with you.\"\n\n\"I don't understand,\" she said in a much calmer voice. \"What do you mean?\"\n\nThe way she was looking at me as she asked me her question told me that she understood what I was saying, but she didn't believe that I actually meant what I had just said.\n\nI was talking with my hands and being about as serious as I could be right now. \"I, want to be with you. No more pretending, no more sneaking around, no more here today and gone tomorrow. No more of this casual relationship bull shit we have been calling this thing between us. I want you to be with me.\"\n\nShe looked at me hard now. I didn't know if it was good or bad at the moment. She finally spoke after a moment of thought. \"We agreed that we couldn't be like that. We both agreed we wouldn't get into a serious relationship with each other.\"\n\n\"Who cares about the agreement?\" I fired back. \"It was supposed to be casual. It kind of is, really kind of isn't. It was supposed to be if we were together for some reason, like the summers or holidays or family gatherings, and we had a need to be filled. You started out by coming to see me then we switched, and I've been coming to see you. We both know this isn't a casual thing anymore.\"\n\n\"So, it evolved and changed and the rules got bent a little,\" she offered. \"The main idea was that we could not be together.\"\n\n\"So, you're willing to break all the other rules but not this one?\"\n\nShe slowly shrugged as she thought about it now, but she didn't answer.\n\nI was soft and calm as I spoke now so it would get her attention. \"Seriously, Emma. I want something more with you than this casual thing. That's why I'm here. I want to stop pretending that this... us... is just this casual thing. It's not for me anymore. I have these deep feelings for you that I've been trying to bury deep down inside of me for the sake of you, and us, and normalcy, but I can't anymore. I can't bury them anymore, I have to get them out and express to you how I truly feel about you.\"\n\nIt hit her hard right then as the weight of the situation became clear to her. She didn't quite know what to say, she was left slack jawed for the moment as the emotions started to well up from down inside of her.\n\n\"It's crazy, right?\" I asked. \"I know it is, but I can't hide this anymore. You are my Emma, my favorite girl, the only girl that I've been with that I've shared a deep and meaningful connection with that makes my soul smile. How many times have I told you that you are my favorite girl?\"\n\n\"More than I can count,\" she finally spoke but barely got it out. The tears were starting.\n\n\"More than I can count too,\" I agreed.\n\n\"So, this is me,\" I said before she could speak again. \"This is me, not pretending that this relationship is just a casual thing. This is me, confessing to you that I have these feelings for you that I can no longer hide or do I want to hide any longer. I want to confess that I'm in love with you, have been in love with you, want to be with you, and want to fall more in love with you each and every day.\"\n\n\"I-I-I......,\" she just stuttered now before falling silent.\n\n\"I love you, Emma. On this deep and powerful and emotional level that I can't begin to express. You make me feel things that I've never felt before, see things that I didn't know were possible, and express things that I've never been able to do with anybody else. I've tried to hide it, I've tried to ignore it, I've tried to deny it, but I just can't anymore. You make these things possible and I can't be without you anymore.\"\n\nShe was sitting there in silence with tears running down her face at the moment. I was right there with her, minus the tears, filled with emotion as I expressed myself for the first time openly to her. It actually felt good to get it out and let her know how I felt. I took a pause, gathered myself to keep it together before I spoke again.\n\n\"I know you have these feelings for me too. I've known it since that first night when we broke down the barrier of us. Why are you denying that right now?\"\n\nShe sniffled and wiped her nose first before she spoke. \"I'm not denying anything.\" She wiped her eyes then looked at me. \"I'm just.... I don't.... we can't. What would people think about us if we were together?\"\n\nThe one person who knew about us popped into my head right now and gave me the perfect answer to her question.\n\n\"Let me ask you one simple question then. How many people actually know who we are and what we actually are and have seen us together?\"\n\n\"Well,\" she sniffled and wiped her eyes again. \"Just Dory. She's the only person that I can think of that actually knows the truth.\"\n\n\"Has that made a difference in our relationship?\" I asked. \"Have we not felt great things and experienced great things together without telling everyone that we are related?\"\n\n\"No,\" she relented and had to agree with me on that one. \"We have had some great times together.\"\n\n\"Why do we have to tell people? Why can't we just live a quiet life together loving each other? I don't need to stand on the tallest mountain and shout to all the people down below that I love my cousin. Why do I need to do that? It's not going to change the feelings I have for you if nobody knows or everybody knows. At the end of the day, if the world turns it's back on us, I'll have you right by my side. What more do I need?\"\n\nShe looked at me with disbelief now. \"I don't know, Jason...... I mean....\" She was at a loss for words right now.\n\n\"Why are we even having this argument right now?\" I continued. \"I'm telling you something you've waited two years to hear me tell you. I want to be with you, I want to give you a good life, I want to treat you with respect and dignity and worship the ground you walk on. What more do I need to do right now? Do you honestly want to live like this anymore?\"\n\n\"Why are you telling me this right now?\" she asked as she finally found the right question to ask. \"What are you trying to get out of this?\"\n\n\"You,\" I said quickly. \"I want you. I want us to be together. I want a serious relationship with you. Haven't you been listening to what I've been saying? I came here to tell you how I feel about you, to get you to leave that idiot, Ed, and to come with me so we can plan a life and a future together with each other.\"\n\n\"But, Jason,\" she sighed hard. \"Why now? Why not a year ago or when I first started dating? Why now?\"\n\n\"Because I'm an idiot. Because I didn't know how to tell you the things I felt. Because I thought these feelings would go away if I denied them long enough. Because I thought I would lose you if I confessed how I felt about you. Because of the agreement. The reasons are dumb, the fact is I can't live my life without you in it, by my side, building a future together.\"\n\nShe sighed long and hard as she processed. I took a moment's pause and regretted what I was going to say next, but I had to say it.\n\n\"I also can't be the other guy anymore. I can't keep sneaking around with you. I want you all to myself. I know how you felt when I was doing it to you and it's a pretty terrible feeling. To make it worse, when I come to see you, you just aren't the same person. It's just not the same. As much as it kills me to say what I just said, I have to. I have to say, you need to come with me, or I can't do this anymore. This situation isn't fair to either one of us anymore and we both know that.\"\n\n\"You're giving me an ultimatum now?\" she quipped.\n\n\"I don't have any other option right now,\" I said firmly. \"I'm all in, going for broke, laying it all out there right now. I'm tired of being in this situation, tired of watching you be with some other guy, tired of wishing I was the guy, tired of thinking about you all the time. I either have to be with you fully, or not at all.\"\n\n\"So now I have to choose you or him?\" She was completely shocked I had told her me or him.\n\n\"This situation isn't fair to any of us,\" I quipped. \"Not to you, not to me, not even to Ed. You have to split your time and sneak around. I have to keep everything bottled up and pretend I'm fine with things the way they are when I'm not. It's reached a point where something just has to give, something has to change.\"\n\nShe took a deep breath and buried her face into her hands. She was shaking her head as she slowly pulled her hands away from her face and looked at me. She was crying again, breaking down and really looked distressed about the whole situation.\n\n\"This is hard,\" she sniffled. \"The both of you have been so hard on me, so emotionally draining since I started dating. You with your coming into town this week and everything is fine, and we are on top of the world and everything is great. Then you're gone for months at a time and I have to shift gears and focus on life without you and I have to pretend everything is fine and be with Edward. Lately you're full of subtle insults and little digs and telling me what I want to hear. And now, now you lay this on me.\"\n\n\"And Edward.... where do I begin with him? He cheats on me, lies to me, yells at me, leaves town more often than even you do. He manipulates my emotions, tells me what I want to hear then does whatever he wants, hides things, takes things....\" She was shaking her head again as she trailed off.\n\n\"I don't know how much more I can take from either one of you at this point. I'm so emotionally drained and broken down.\" She was sniffling and wiping her eyes again.\n\n\"I can't fix Ed,\" I said softly. \"But, I can fix me. I can do better if you just give me a chance to show you my intentions are genuine. But you have to come with me, or I can't fix anything.\"\n\n\"I don't know, Jay,\" she sighed in exhaustion. \"I just don't know anymore.\"\n\nI left my chair and got down on my knees in front of her. I placed my hands on her legs and looked at her with my pleading eyes. She looked back at me, emotionally exhausted, teary eyed, worn down, tired, and wondered what I was going to say now.\n\n\"This is me, Emma,\" I begged. \"Telling you that I love you, that I want to be with you, that I want a future with you, that I can't see myself connecting with someone as deeply and emotionally as I have with you. I want you to come with me, I want this relationship to grow, I want that feeling I get when I'm with you to never end.\"\n\n\"You are my Emma, my favorite girl, my happiness, my one person I'm supposed to be with, the one that makes my heart and soul warm and fuzzy. I was too dumb to admit it back then, but I felt it. I felt it the moment I kissed you on that railing that night. I knew it was over for me, knew I found the person I was meant to be with. I was just too scared to admit it. But here I am right now, admitting it, telling you how I feel, telling you I want us, not a pretend us, but a real us.\"\n\nShe was crying again as I kept right on going and kept speaking from the heart.\n\n\"I'm sorry, Emma. I'm sorry for the way I've treated you in the past. I'm sorry for the lies I've told you. I'm sorry for the times I've let you down. I'm sorry for telling you things that I should have meant but I didn't fully mean. I'm sorry for every horrible thing I've done to you unknowingly that has led us to this point. I'm sorry for not being there for you when you needed me the most. I'm sorry for not being here sooner, I'm sorry for the emotional rollercoaster I've put you on for the past two years. I'm sorry for everything I've ever screwed up with you.\"\n\n\"I'm the most sorry for creating this situation that you are in right now. Had I been a much better man, not been so foolish, so proud, so disrespectful, not put myself above you, had I said something sooner, had I not put you through what I've put you through, you wouldn't be in this situation. I unknowingly taught you that it was ok to be treated like this, and for that, I am truly sorry. You deserve so much better.\"\n\n\"But I'm here now, begging you for your forgiveness, telling you I'm done with the games, my old ways, and my old life. I'm here telling you the honest truth from the bottom of my heart that I want you and only you in my life and there will be no others but you. I want to make up for my mistakes, work hard to earn your trust again, show you how much you truly mean to me, treat you the way you have dreamed of being treated, and build something that will last a lifetime with you. Take my hand Emma, come with me and leave this situation as just a bad memory. Will you please come with me? Please?\"\n\nShe sat there with tears streaming down her face as I sat there on my knees in front of her begging. She looked down at me after wiping her eyes then sniffled and looked away again. I knew the answer before it left her mouth by the way she was stalling. My heart was already breaking as she opened her mouth.\n\n\"No... I can't,\" she sobbed.\n\nI hung my head and felt the life draining from me right then. I felt crushed. Like the day I found out my dad died, crushed. I knew coming here that it could go this way, but you never prepare your heart for that. You think about it, but you never can prepare.\n\n\"Please, Emma, please!\" I had my hands together begging her. \"Please come with me. Let me prove to you I mean everything I've just said. Please!\"\n\n\"I can't,\" she sobbed still. She buried her face in her hands and cried like I had never heard her cry before. It was a painful, soul crushing cry and it broke me. \"I just can't.\"\n\nI was sobbing now in utter disbelief that she had said no.\n\n\"Why? Why? Why can't you?\" I asked between gasps for air as I cried uncontrollably.\n\n\"It's just...... no... I can't.\" She could barely speak she was so emotional.\n\nI wanted to curl up into a ball and hide it hurt so badly right now.\n\n\"I'm so-so-so sorry, Jason,\" she sobbed.\n\nIt felt like an eternity sitting there on my knees in front of her crying and balling my eyes out before I found the strength to try and stand. I barely stood my legs were shaking so bad right now. I finally looked at her as she sat there balling her eyes out with her face in her hands still. It was horrible to see her like this. My heart broke even more seeing her like this and knowing there was nothing more that I could do right now. I had nothing left to give, nothing left to explain, nothing left to offer. I just overlooked the fact that she needed me long before this day and I wasn't there for her.\n\n\"I'm sorry,\" she said faintly\n\n\"Me too,\" I croaked as I tried to gather myself. \"Is there anything I can say right now to change your mind?\"\n\nShe left the chair and wrapped her arms around me. I felt the pain and the anger inside of me now, but I couldn't help but hug her back. I loved her. I loved her so much that it hurt, and it was so, so damn hard to hold her like this right now. But I did. I just held her and sobbed with her as the tears poured from our eyes. I finally relaxed my grip and looked at her.\n\n\"If everything I have ever told you was a lie, please know that my apology wasn't. I meant every word of it and I am truly sorry for hurting you like I have.\" I was all choked up again as I looked at her.\n\n\"I know.\" She was choking she was crying so hard.\n\nI hugged her tightly again and held her once more. It was a tight, sobbing embrace between the two of us. Everything we had been through, and everything we had shared together, and this was how it was going to end. What would become of us after this? How would we face each other after this?\n\nShe let go of me and took a step back. \"You should go. I don't think there's anything left to say.\"\n\nI wiped my face and cleared my eyes a little. \"I love you, Emma.\"\n\nIt was just raw emotion on her face as she started sobbing again. It was so heartbreaking to see her like this.\n\n\"Bye, Jay,\" she managed.\n\n\"Bye... Em.\"\n\nI somberly walked away and headed towards the door. I looked back one last time before turning the knob to let myself out. She was crying uncontrollably as she lay there on the floor in a tight ball. It broke me again as I walked out and left her there. I staggered off and headed back to the waiting car. It was over now, the best thing I had ever had, and it was all over. I lost what was probably my one true love, and my best friend all at the same time.\n\n*\n\nI don't even know how I was on the golf course that afternoon. My mind was more than a million miles away from here at the moment. All I could think about was Emma and all the broken promises I had made to her, all the half-truths I had spoken, and all the times I had let her down. I didn't even want to be here right now, but I forced myself to play.\n\nI knew getting off the plane that I had to golf, I had to focus, I had to perform. She made this choice and I had to live with that. I just hoped that she was ok and that she was up off the floor and in her bed resting and not hurting so much. I was out here, no smile, no pep in my step, no fight really. I was just going through the motions and thinking about her.\n\nI was even for the round but still had the lead by one at the moment. Nobody was playing particularly well today for some reason, myself included. Maybe the universe was tilted slightly off its axis because of this morning. Three bogies started my round then three pars, then a few birdies, the rest pars and I was still even. I had just missed a short birdie putt on fourteen and was now walking to fifteen.\n\nI thought back to the fifteenth hole two years ago. I smiled a little as I reached the tee box and stood there to judge the wind and pick a club. A five iron should get me there with the wind flat at the moment. I pulled the club and walked to the box, spiked the ball, and thought about it for a moment while taking a few soft swings to clear my thoughts.\n\nShe probably hated me right about now. Telling her all those things that I told her. She probably thought they were just another bunch of halfhearted lines to tell her what she wanted to hear. But they really weren't this time. They were the truth and I meant everything I said.\n\nI turned and looked straight into the camera that was pointed my direction to capture my shot. I made a heart with my hands and held it over my heart for a moment before pointing to the camera. I grabbed my club and focused on what I needed to do right now. I had never acknowledged the camera before, they were no different than the trees and the crowds that lined the course. It was purely for Emma, maybe she was watching, maybe she wasn't. I just wanted to let her know I loved her still and I was still thinking about her."
    ],
    "authorname": "betweenthesheets",
    "tags": [
        "cousins",
        "love story",
        "upskirt",
        "public"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/my-favorite-girl-pt-04"
}