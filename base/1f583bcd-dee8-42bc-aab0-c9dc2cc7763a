{
    "title": "Studying Hard Ch. 03",
    "pages": [
        "The sound of laughter and praise echoed through the campus common. Peter and Ashley camped on a short brick wall on the edge of the quad, enjoying their first hour of fall break in the unusually warm October morning. The sky was cloudless and the leaves around them were a mix of red and yellow, which was a beautiful contrast.\n\nAshley was laying on the wall with her head in Peter's lap while he stroked her short blonde hair. These small moments of contact had become rather important for him, and he cherished every moment of their young love. \n\nNearly two weeks had passed since Peter and Ashley had pronounced their love for each other. Both of them had had a lot of school work between then and now, including several exams and papers. In between their studying, they found plenty of time to spend together.\n\nNormally it would be Friday when they would be casually sitting outside after all of their classes, but it was fall break for the college and the last day of classes for the week were on Wednesday. So that was how the students all found themselves much more stress free in the middle of the week. \n\nPeter's relationship with Ashley did not diminish that of his relationship with his Aunt Julia. Their love had also only recently been pronounced, at least in the way that love works when intimacy is involved. It had been nearly four weeks since he had begun 'studying' with his aunt. This 'studying' was sometimes legitimate, but often it also meant that they were having sex. He continued to visit her house during the past couple of weeks, ensuring her that even a match with someone like Ashley could not keep his dick out of his aunt. \n\nHis third relationship, which was in a new stage of development, was with his mother. He had struggled to internally confess his love for her, but found it easy once he discovered that she had loved him in return. Both of them were cautious but willing to love each other in a way that was new to them but taboo to society. The interesting thing was that neither of them talked about it with each other. His mother sometimes teased him by leaving things around the house (like an open door or a used dildo), but otherwise it was only through Aunt Julia that they were able to express their love. Neither of them were ready to commit sexual acts with each other yet, out of nervousness and the fear of change.\n\nBut now that it was fall break, perhaps it was as perfect of a time as any to take things further with his mom.\n\nA leaf suddenly fell on Peter's head, and Ashley laughed. He smiled at her.\n\n\"You know, that really hurt,\" he joked. \"You shouldn't laugh at my pain.\"\n\n\"If that hurt you, I don't wanna know how painful this is.\"\n\nShe lifted Peter's shirt and started tickling his stomach, causing him to squirm and squeal in protest. She only laughed harder, and Peter had to remove her from his lap and run a couple steps away to escape.\n\n\"Very painful,\" he said, panting. \"I'll get you for that, you know.\"\n\n\"I'd like to see you try,\" she said, sticking out her tongue. He chuckled and returned to her, sweeping her up in his arms and kissing her full on the lips before setting her back on the wall.\n\n\"Oh, you're so strong,\" she coed. He sat next to her and she leaned her head on her shoulder, and he kissed her forehead.\n\n\"I'm lucky,\" he said.\n\n\"Not as lucky as me.\"\n\nHe responded by kissing her again on the lips. After a moment she squealed and pushed him away. She was blushing profusely.\n\n\"Don't do that right now- you're gonna get me all worked up! Before you know it I'll be pouncing on you with our clothes off right here in the quad.\"\n\n\"Maybe we should go somewhere else then?\"\n\n\"But it's so nice out!\"\n\nPeter moved in for another kiss but she dodged him.\n\n\"Okay, fine, you've convinced me. Can we go back to your aunt's place?\"\n\n\"We sure can.\"\n\nThe couple left campus in a hurry of excitement, scurrying down the a few blocks to his aunt's house. In their anticipation they lacked patience, and it felt like it took forever to make it there. Julia was expecting them, as Peter had told her they were on the way. When they arrived, she unlocked the door for them and disappeared for a yoga session in the basement.\n\nPeter led Ashley upstairs and into the guest bedroom, which his aunt had designated as their room for sex if she was ever home while they wanted to do it. Peter was thankful that he was free to do what he wished with Ashley while preserving the love of his aunt.\n\nBoth of them were so sexually charged that they wasted no time getting right down to business. Ashley tore her shirt off while Peter clumsily stepped out of his jeans. He threw his girlfriend on the bed and she lifted her hips amidst her fit of giggles, allowing him to remove her leggings. His cock had quickly hardened during this process, but he wanted to taste her pussy before plunging into her. He knelt at the edge of the bed and leaned in.\n\nHe found that she was already very wet when he placed his mouth on her labia. She scrunched her hand in his long hair while he ate her out, moaning and whimpering with pleasure.\n\n\"Oh fuck! I'm ready, I need your cock!\" she cried.\n\nPeter lifted his shirt over his head and stood up, aligning himself with her opening. Before he penetrated her, he slapped his cock playfully on her stomach. His nine-inch cock extended dauntingly far up her torso, and he was amazed the he could possibly fit all of it inside of the young blonde. Ashley seemed to have a similar thought, despite knowing that she could take it, for she bit her lip and stared at him pleadingly.\n\nHe finally shifted back and then forward again, angling his cock so that it slid into her tight pussy. She cried out and rolled her head, grasping her breasts out of lust. She was wet enough, plus more used to his size from weeks of experience, that he was able to start fucking her at a quick pace after just a few seconds.\n\nFor the next fifteen minutes, the room was filled with panting and moaning and swearing. Peter was too horny to stop and change positions, and wanted to cum all over her lovely body. He was thankful that she didn't ask him to use a condom anymore.\n\nWhen he reached his climax, he grunted and withdrew, spraying his semen everywhere. Most of it shot right at her labia, and the sensation of the hot fluid hitting her vagina caused Ashley to orgasm so violently that she actually squirted a small amount of fluid onto Peter's leg. That turned on Peter enough that his final spurt of cum was much more powerful than usual, and streaked from her bellybutton to her collarbone.\n\n\"Fuck,\" he said, plopping on the bed next to her. He watched her examine her own body, admiring his load and relishing in the aftermath of pleasure.\n\n\"You sure do cum a lot,\" she said.\n\n\"You had me worked up.\"\n\n\"I had you worked up, huh? Did you feel how wet I was before we even started?\"\n\n\"Did you feel how hard I was?\"\n\n\"Did you see me squirt?\"\n\n\"YES! It was so hot!\"\n\n\"I know! I wonder if I have more of that in me.\"\n\nShe leaned forward and spread open her pussy, examining her sexual region with wonder and amazement. \n\n\"We'll try again next time,\" he said.\n\nThey lay there for a few minutes in silence and smiles before cleaning up and heading back downstairs. Julia was still in the basement doing yoga, and Peter called out that they were leaving. She rushed upstairs to say goodbye.\n\nAunt Julia was wearing light grey yoga pants and a black sports bra, Peter quickly eyed her cleavage, but only momentarily as Ashley was present. When he looked at her face, he saw her wavy brown hair was tied into a tight ponytail and that she was sweating a little. She was stunningly beautiful.\n\n\"Well that was quick!\" she remarked. \"You had fun, didn't you?\"\n\nShe was looking at Ashley when she said this. The love makers were hasty in their clean up, and her hair was disheveled. Ashley turned red and looked away, grinning with embarrassment.\n\n\"We did. We have to get going. Mom said she'd take the two of us out to lunch to celebrate fall break.\"\n\n\"Do you need a ride?\" she asked.\n\n\"That's okay. You're in the middle of yoga and the weather is nice. But thanks.\"\n\n\"Of course. Have fun at lunch! I love you!\"\n\n\"I love you too, Aunt Julia.\"\n\nAshley waved goodbye and tried to flatten her hair as they walked out the front door. Peter laughed and ruffled up her hair even more, which prompted her to slap him on the arm.\n\nOn their way home, they talked about what they wanted to do over fall break. Ashley admitted she would have some studying to do.\n\n\"I wish my professors didn't assign anything. I can't believe I have an exam on Monday!\" she shouted in frustration. \"Why couldn't he have just made it today!\"\n\n\"That is bizarre,\" admitted Peter. \"But you have plenty of time to study and still hang.\"\n\n\"I know. I'm looking forward to bowling with Kirsten tonight! And, you know, our little plan for after...\"\n\nThe plan for after bowling was that they would return to Ashley and Kirsten's dorm room and have a threesome. After some discussion, they had agreed that it would be a fun and casual experience for all three of them.\n\n\"I'm excited for that too,\" he replied. \"I just hope you don't use it an excuse for distraction when I whip your ass in bowling.\"\n\n\"Watch it, mister.\"\n\nHe laughed. He loved how they were so in love yet didn't have to be serious all the time.\n\nThe couple enjoyed the pleasant weather of their walk to Peter's house. Ashley had only been to his house once, for an evening movie and discreet sex session (he was still embarrassed to make notice of anything sex-related in the relative presence of his mother). Ashley seemed to like Peter's mother more than she did his aunt, which was likely because his mother didn't make any awkward comments about the pair's intimate activities.\n\nWhen they arrived at his house, Peter's mother welcomed them in, and asked them to wait for a moment while she finished getting ready. They sat on the couch patiently for fifteen minutes or so before she came down sporting a cute red blouse to match her auburn hair.\n\nIn the car, while his mother and girlfriend made small talk, he thought about how strange it was that he and his mother knew so much about each other's desires yet neglected to act upon them. Actually, if it weren't for Aunt Julia, Peter wouldn't have thought anything of his mother's behavior that day. But now that he was conscious of her love, he noticed how she snuck him into everything she said when she could.\n\n\"...the sandwiches they make are just so delicious! Peter and I have been going for almost fifteen years now, right?\" said his mom, looking at him in the rearview mirror. Peter was sitting next to Ashley in the back.\n\n\"Yeah, it's one of my favorite places.\"\n\n\"How come you haven't mentioned it to me before?\" asked Ashley.\n\n\"I like a lot of restaurants downtown. I would have brought it up soon, without a doubt.\"\n\n\"Moe's is your favorite, isn't it sweetie?\" chimed in his mom. Peter thought back to the burger joint where he had taken Ashley on their first date.\n\n\"Yeah, probably. It's hard to pick favorites though in a town like this.\"\n\n\"I love that you're so attached to this place,\" said Ashley. \"It's really sweet.\"\n\nHis mother grinned at him through the mirror. Peter smiled back, still thinking about her in ways that Ashley would probably find disturbing. But Ashley was completely unaware of his family's incestual connections. If there was one thing that Aunt Julia had seriously established, it was that there was no way anyone could know about what was going on between mother, son, and aunt.\n\nAt the restaurant, which was busy with other college students celebrating their extra two days of freedom, the three placed their orders and found a booth near the back. Peter held onto the buzzer, which would go off when their food was ready. While they waited, his mother questioned them about their classes.\n\nPeter was in the middle of talking about the contents of one of his essays from the previous week when the buzzer went off.\n\n\"I'll get it,\" said Ashley. \"You keep talking with your mom.\"\n\nThe blonde left them alone and Peter found that he had lost track of what he was saying. His mother changed the subject to something he wasn't quite expecting.\n\n\"How's your studying with Aunt Julia going? Are your grades improving?\" \n\nHe stared at his mother. She knew that his \"studying\" sometimes meant sex. She had never brought it up before, and now she was doing so in public.\n\n\"Uh, yeah, I'm doing a lot better in anatomy but I still have work hard to get my grade higher. She's starting to help me study for my other classes as well, which I appreciate.\"\n\n\"You've been going over to her house a lot.\"\n\n\"I suppose it's more convenient to study there than at our house. I don't always go there, though. I've been studying on campus more too.\n\n\"How come?\"\n\n\"It's nice to spend time with my friends. Sometimes I see Tristan and sometimes Ashley and her roommate. Never all three together, as Tristan and Kirsten don't get along anymore.\"\n\n\"Oh?\"\n\n\"He dumped her.\"\n\n\"Oh.\"\n\n\"Yeah.\"\n\n\"Well, I hope you don't forget about me. It's starting to get lonely around the house.\"\n\n\"I could never forget about you, mom! You will always be my girl and I will always come back to you. I may be spending more time with some other women right now, but there's always going to be a part of my heart reserved for you.\"\n\nShe beamed and Peter felt a genuine rush of affection for her. His mother was much more fragile than his aunt or Ashley and she needed his love whether it was sexual or not. He knew in his heart that, no matter what, nothing could break their relationship.\n\nShe was about to say something else when Ashley arrived with the meal. She placed the tray on the table and sat back down next to Peter.\n\n\"Did I miss anything? Did you tell her about the Battle of Waterloo? I love that one.\"\n\n\"No, I haven't gotten there yet.\"\n\n\"Well go on then! Tell her what you told me last week!\"\n\nThey resumed conversation while eating their lunch. Their discussion fluctuated from homework to dorm life to cooking to careers. Peter's mom explained that she was in the real-estate business before Peter was born, then quit to focus on raising him. His father had worked for a literary publishing company before being diagnosed with cancer. After his death, they had been able to get by with the help of Aunt Julia and Uncle Dave, who paid for the medical bills and gave them some cash whenever they needed it. Peter's mom didn't like to keep borrowing money, however, so throughout Peter's childhood she occasionally took a local job, often at the supermarket.\n\n\"Aunt Julia has always been very generous though,\" added Peter.\n\n\"Wow, she must have been very successful in her career then!\" chimed Ashley.\n\n\"She definitely made a lot of money, at least more than you'd think at first glance. She doesn't ever flaunt it. Plus, Uncle Dave still makes plenty.\"\n\n\"She's also one of the most intelligent people I've ever known,\" added his mom. \"She had a perfect GPA in college on top of playing soccer and being a part of several clubs.\"\n\n\"I didn't know that!\" exclaimed Ashley.\n\n\"Yeah,\" said Peter, \"she's so casual sometimes that it's easy to forget what she can do.\"\n\n\"You two ready to get out of here?\" asked his mom, seeing that everyone was finished eating.\n\n\"Sure,\" they both replied. The three of them tossed their trash in the can and headed out the exit, led by Ashley. Trailing slightly behind, Peter's mom tugged on his sleeve and whispered in his ear as he leaned toward her.\n\n\"Did you mean what you said earlier? About me being the love of your life?\"\n\n\"Every word.\"\n\nShe smiled broadly and kissed him on the cheek. As they followed Ashley to the car, Peter felt as though his face had been doused in a splash of warmth centered around where he had been kissed. He loved his mother dearly.\n\n***\n\nThat afternoon, Peter and his mom dropped Ashley off at the dormitory and went home. They didn't talk much in the car, but it wasn't awkward; both were simply content with being in each other's presence. \n\nPeter spent the rest of the day in his room, either playing video games or lying in bed looking at his phone. A month ago, he would have probably used the time to jerk off; now, he found it was better to save his loads for the special women in his life. Plus, he was relieved by either Ashley or his aunt often enough that he never felt the need to relieve himself.\n\nAs his bowling date approached, he began to feel a little nervous. He was going to have a threesome with his girlfriend and her roommate. Would he be able to look at Kirsten the same way after? Would he be able to remain friends, or would he fall in love with her too? He figured that loving three women simultaneously would be possible, but a fourth? Who was he to really know how much love he could hold?\n\nHe decided that he probably wouldn't love Kirsten after sex, for they had already been perfectly normal friends for the past couple of weeks without any intimate desire emerging within him. If he did fall for her, he would just have to accept that it couldn't happen and let it dissolve over time.\n\nWhen it was time to leave, Peter sent Ashley a text saying he was on his way and called out to his mom that he was going out for the night. Rather than call back, she emerged from her room just before he approached the front door.\n\n\"Peter,\" she said, \"I know you've been spending a lot of time with Ashley because it's a new and exciting relationship, and your aunt because of your study sessions... but promise me that you will spend time with me at least one of the days before the end of fall break?\"\n\nAfter only the slightest hesitation, in which he thought about how he would put aside basically any other plans to spend more time with his mother, he replied \"Of course mom. I'll see you later.\n\nThe last thing he saw of his mom before he stepped outside was her loving smile. He left the house and drove to the dormitory, parking out front. It was a few minutes before Ashley and Kirsten came out of their building.\n\nAshley looked as attractive as always with her short blonde hair straightened and her body sporting light jeans and a thin white turtle neck. When his eyes moved to Kirsten, he found her surprisingly attractive as well. While he always considered her a fine looking young woman, she looked particularly stunning tonight with her long black hair curled and in a yellow blouse and leggings. Peter felt a slight swelling in his pants. \n\nWhen the girls entered the car, they all exchanged greetings and Peter hit the road. Ashley was pretty talkative, but Kirsten seemed shyer than usual. As they pulled into the bowling alley parking lot, Peter addressed her directly.\n\n\"Hey, Kirsten? I don't know exactly what Ashley told you, but let's just have a good time tonight, okay? You better be focused on bowling if you don't wanna get whooped.\"\n\n\"Okay, Peter,\" replied Kirsten. She had a smile on her face for the next few minutes, and seemed less nervous from then on.\n\nPeter parked the car and the three of them walked into the building. They were greeted by the front desk employee- a teenager with more than a few pimples and greasy dark hair- and received their shoes. Since it was Wednesday night, it wasn't very busy, and only one other lane was in use. Peter, being a rather large human being, picked up a fifteen-pound bowling ball. The girls both went with tens. \n\nAshley put in her name to the monitor first. Only five letters were allowed. She went with FCKME.\n\n\"What?\" she asked in defense when she saw the looks the other two gave her. \"It's funny.\"\n\n\"We better not get kicked out for that,\" warned Peter. Kirsten put her name in next, smiling. Peter watched her type DILDO.\n\n\"Okay,\" he said, holding up his hands in submission. He went for the keypad but Ashley blocked him in excitement.",
        "\"Wait, wait! I got one for you- \"\n\nShe typed in BIGDK. Peter immediately felt his cheeks burn. Both girls eyed him hungrily.\n\n\"Why would you put that in?\" he complained. \n\n\"What do you mean? It stands for BIG Donkey Kong.\"\n\nPeter grunted as Ashley started the game. He soon forgot about any negative feelings as the bowling quickly became competitive. He found he wasn't as good at it as he thought he would be, and the girls were better than they all expected, so everyone's score was within ten points going into the tenth frame. Ashley stepped up with 119 points, the lowest score of the three.\n\n\"Alright, if I win,\" she started, looking back at them, \"then... tonight, you get to cum wherever I want.\"\n\nKirsten laughed while Peter looked around nervously.\n\n\"Alright, winner gets to choose where Peter finishes?\" followed Kirsten.\n\n\"Sure, sure,\" said Peter. \"Just bowl.\"\n\n\"You okay Peter?\" asked Kirsten as Ashley took her turn.\n\n\"Oh, yeah. I just don't like being so public about private matters.\"\n\n\"Ah, don't worry about it. No one's around anyway.\"\n\n\"I know. Still, it's a public place.\"\n\n\"Well we'll be in a more private place real soon.\" Kirsten winked at him.\n\nAshley finished with a score of 128. Kirsten took her turn and narrowly finished with 131. Peter went in with a score of 120. \n\n\"C'mon...\" he muttered to himself. He threw the ball and it unexpectedly curved, hitting only four pins on the left side. The girls giggled. He stepped up for the second bowl and was about to throw when Ashley called his name. He turned around and saw her sitting in the booth, flashing her tits.\n\nPeter gaped for a moment, then shook his head. She was just trying to distract him! He took a deep breath as he turned back toward the pins and threw the ball. He wasn't sure what happened with his throw, but the ball somehow went right into the gutter. He was frozen in disbelief for a few seconds before returning to the booth in shame. The girls were laughing hysterically.\n\n\"I guess I get to choose your target,\" said Kirsten as their laughter settled down. Peter rolled his eyes but grinned. He lost, but at least they were having fun.\n\n\"You can tell me later,\" he said. \"One more game?\"\n\nThe girls agreed to another game, and their second one was much less competitive. They each tried different fun strategies, such as through the legs and around the back. They didn't finish with very many points.\n\nWhen their second game was over, they called it quits and headed back to the dorm. On the drive back, they picked up some fast food for a late dinner. They brought it up to the dorm room to eat.\n\nAs they finished up their meal, the atmosphere became somewhat tense. They all sat quietly, Ashley and Peter on her bed and Kirsten on hers. No one knew how to make the first move.\n\n\"Will this be the first time for all of us?\" asked Peter. \"A threesome, that is.\" The girls nodded. \n\n\"It will also be my first time with another girl,\" said Ashley.\n\n\"Me too,\" added Kirsten. \"How should we start?\"\n\nThey all exchanged glances.\n\n\"Peter and I could start,\" said Ashley. \"You know, since we're used to each other.\"\n\n\"Would that be okay?\" Peter asked Kirsten. \"You could join when you're ready.\"\n\n\"Okay. I probably won't wait too long.\"\n\nAshley shifted in the bed so that she and Peter were sitting on the edge. She lightly stroked his hair and leaned in for a kiss. He returned it tenderly, both of them taking their time in the start of their lovemaking. Kirsten watched in silence but with eager attention.\n\nThe kiss began to gain intensity, and as it did so Ashley patted the bed on the other side of Peter. Kirsten walked over and sat down there. With a hot girl on either side of him, Peter was getting more excited.\n\nKirsten stroked his thigh while watching them make out. Peter heard her breathe desperately, but she was patient. Ashley continued to kiss him and stroke his hair.\n\nAfter a minute or so, Ashley retracted and immediately turned Peter's head toward Kirsten. The latter leaned in carefully for a kiss of her own, and his lips accepted hers with welcoming pleasure.\n\nWhile watching, Ashley snuck her hand into Peter's crotch and stroked his semi hard-on through his pants. Soon after, she leaned closer to him and nibbled playfully on his neck. Peter sighed into Kirsten's mouth.\n\nKirsten withdrew from the kiss and bit her lip. She noticed Ashley's hand placement and reached in to join. She gasped at her first contact with Peter's huge cock.\n\n\"Do you want to see it now?\" asked Ashley. \n\nKirsten nodded. Both girls slipped off of the bed and dropped to their knees in front of Peter. Ashley gripped the waistline of his pants and he allowed her to remove them by momentarily lifting his hips. She slid off all layers of clothing and his cock sprang free. Kirsten's eyes went wide.\n\n\"Damn! You weren't kidding when you said he was huge!\" she exclaimed. \"How are you supposed to fit that inside of you?\"\n\n\"You just have to try your best and open as wide as you can,\" said Ashley.\n\n\"Can you show me first?\" asked Kirsten.\n\nAshley responded by immediately leaning forward and taking Peter's cock in her mouth. She quickly coated it with saliva by both bobbing her head on the tip and licking her way up the sides. Kirsten leaned in so close to watch that if she stuck out her tongue she may have been able to lick it as well. After making his cock slick, Ashley withdrew with a small gasp and handed it off to Kirsten.\n\nKirsten took it eagerly, starting by licking under the shaft and flicking her tongue all over. When she finally took his penis in her hot mouth, Peter moaned. She blew him slowly but powerfully, her mouth widening enough to get up to half of his cock into her throat before reaching a wall. Despite her nervousness, she was obviously just as experienced as Ashley.\n\nWhile her roommate sucked her boyfriend's dick, Ashley leaned under Kirsten and began to suck Peter's balls. His pleasure instantly intensified and he felt like he was in a dream. He watched the girls alternate between his balls and his cock, getting more and more sloppy with their sucking. He was in a state of pure bliss.\n\nAfter a few minutes, Kirsten placed her hand on Ashley's cheek and guided the blonde to her own lips. The girls French-kissed passionately for a moment, both keeping one hand on Peter's cock. He wasn't sure he could get any harder.\n\nThe first to break the kiss was Kirsten, who resumed sucking Peter's cock. Ashley locked eyes with his, staring up at him hungrily as their friend sucked him off. She didn't break eye contact even when she received his cock from Kirsten and took over blowing him.\n\n\"Fuck, I'm so wet,\" said Kirsten as she began removing her clothes. While she did so, Peter quickly stripped his shirt. He then watched Kirsten's heavenly body begin to reveal itself while keeping an eye on Ashley's mouth-work. Kirsten's breasts were about the same size as Ashley's (c cup), but her nipples were larger and they had a slighter droop. She gave them a slight squeeze for show before turning around and taking her bottoms off. She bent over enough so that Peter got a glimpse of her glistening pussy. \n\nAshley stopped blowing him and looked at her friend. She grinned and stood up next to her. They exchanged a very wet kiss before Kirsten kneeled back down to suck Peter off while Ashley began to strip.\n\nPeter was used to seeing his girlfriend's body, but as he saw her this time he couldn't help but think she looked more beautiful than ever. Soon, there were two naked girls back at double blowing him.\n\n\"I don't know how much longer I'm gonna last,\" grunted Peter.\n\n\"I get to pick where you cum!\" exclaimed Kirsten. \"Do it on my tits!\"\n\nBoth girls backed up and Ashley continued to pumped his cock while Kirsten cupped her tits in her hands. The sight alone sent Peter over the edge- in a sudden force his orgasm surged through him and an explosion of cum shot out of his penis. Ashley tilted Peter's spurting cock towards Kirsten's breasts. \n\nThe girls both moaned as his seed erupted out of him. A couple of streaks hit Kirsten's face, and as his orgasm died down, some cum oozed onto Ashley's hand.\n\n\"Shiiiiiit,\" Peter muttered as his girlfriend squeezed the last drop out of his penis. She ended her job by giving his cock a small kiss on its underside. Kirsten fingered some of the spunk off of her chest and stuck it in her mouth. Before she could do the same with the load on her face, Ashley grabbed her arm.\n\n\"Let me,\" she said as she leaned towards her and licked the cum right off of her face. They ended this erotic show with a quick French kiss before turning to Peter.\n\n\"Wow,\" he said breathlessly. \"You two are quite the show.\"\n\nAshley winked and Kirsten blushed. The former gave his cock a loving tap. It had gone into a semi-erect state.\n\n\"I'll be ready to go again soon,\" he said. \"Why don't I treat you beautiful girls while I recharge?\"\n\nHe stood up and made room for the girls eagerly lay on the bed, their legs hanging over the side. It was his time to kneel for them, and he did so very willingly. He was excited to taste Kirsten's pussy, but he was patient. He would get the chance very soon.\n\nThe girls spread their legs and put themselves on display. They were so close together that Ashley put her left leg over Kirsten's right. Peter took a moment to study their pussies. Both of them were gleaming in the light of the dorm. Kirsten's labia were slightly bigger than Ashley's, although her clit was not as pronounced. While Ashley had shaved her pubic hair, Kirsten had trimmed hers into a cute triangle. They both looked lovely, in his opinion.\n\nHe sensed how turned on they were and knew it wouldn't take long to make them cum. He leaned between Ashley's legs and kissed her inner thigh a few times before brushing his lips softly over her labia. While he did so, he reached over the intertwined legs with his right arm and kneaded Kirsten's thigh. Then he reached for her pussy. The girls moaned softly and lightly humped their hips while Peter teased and pleased them. He simultaneously began licking his girlfriend's pussy and fingering Kirsten's, starting at a flirtatiously slow pace. Their bodies only writhed harder, and Peter increased up his efforts exponentially. \n\nIt may have been because his mouth was on Ashley, but Peter thought he could feel her orgasm coming sooner than Kirsten's. He continued his motions on both girls for another few seconds before grabbing Ashley's legs with both his arms and sending his tongue into overdrive. Almost instantly did a flood of fluid gush out of her pussy while she locked her legs around his head, arching her back with a loud moan. \n\n\"FuuuuUUUUUCK!\" She cried. Kirsten sighed from the departure of Peter's fingers but watched her roommate's orgasm with much excitement. She reached over Ashley and pinched her nipples with both of her hands, causing her to squirm even harder. Her mouth widened open, silent at first, then an \"OOOOOOOHHHHHHHHHHH!!\" escaped her. \n\nHer muscles began to relax, letting Peter back up after a few more tender licks of her clit. She shuddered and breathed heavily while he shifted over to Kirsten's legs. Kirsten responded by grabbing his head and pulling him into her pussy.\n\n\"Give me what you gave her!\" she requested. Peter immediately ate her out with as much vigor as he could muster, not wanting to displease her.\n\nAshley quickly recovered and twisted onto her side, facing Kirsten. While Peter ate her out, Ashley massaged her breasts lovingly and kissed her neck. Kirsten turned her head and intensely kissed the blonde on the mouth. \n\nThe heat of the scene was enough to make Kirsten's orgasm arrive quickly and powerfully. As the flow of her fluid began to increase, Peter inserted his fingers and curled them inside of her pussy to touch her g-spot.\n\n\"YESSSS! OH GOD I'M CUMMING!!\"\n\nKirsten cried out and Peter was suddenly shot in the face with a powerful squirt of liquid. He withdrew his face and watched several streams of fluid shoot out of Kirsten's vagina through the sloshing of his finger-fucking.\n\n\"Holy shit!\" Ashley shouted. Peter thought the same thing- Kirsten was a major squirter!\n\nWith one last whimper, Kirsten relaxed on the bed. Ashley kissed her lips, then slid between her legs.\n\n\"I want to taste it,\" she said as she leaned down and licked her friend's pussy several times. Kirsten cooed at the touch of her tongue, then guided Ashley's legs over her own face. Now in a sixty-nine position, the girls passionately ate each other out. Peter felt like he was in a daydream as he watched.\n\nAshley looked up for a moment and giggled (and slightly jumped as Kirsten tongued her clit). Peter's hard cock swung close to her face. Wanting a surprise, she nodded with a devilish smile and gave him enough room to align his long dick with Kirsten's wet pussy.\n\nKirsten was too focused on eating out her roommate and wiping a few strands of her sweaty hair out of her face to notice what Peter was doing. Suddenly, she felt a light poking at her labia, then an overwhelming feeling of being stuffed.\n\n\"Oh fuck- FUCK!\" she screamed as Peter began penetrating her. He wanted to go slow, not wanting to hurt her, but he was so turned on by their threesome that he thrusted a little faster than he meant to. Luckily, Kirsten was wet enough from her orgasm that her tightness did not reject him. Plus, Ashley was spitting on his cock to add lubrication.\n\n\"Oh god oh god oh god oh god,\" she repeated as he inched into her. He stopped at about two-thirds of the way to full penetration. While he waited for Kirsten to adjust to his size, Ashley gave her pussy several more licks. Kirsten's response was to eat more of Ashley's pussy, although she found it more difficult with the discomfort of being impaled by a monster cock.\n\nPeter took a moment to appreciate his girlfriend's help before thrusting further into Kirsten. At this point, she was incredibly tight- he wasn't sure if he would be able to bottom out.\n\n\"You've almost taken all of him!\" said Ashley excitedly.\n\n\"You mean I HAVEN'T yet?\" cried Kirsten. Ashley laughed and rubbed Kirsten's clit with her fingers. With one inch to go, Peter really felt like he couldn't go any more. Instead, he began to slowly rock back and forth.\n\nAfter a minute or so of slow fucking, he felt her loosen up a little, and tried to go for the last inch. Yet again, he was denied by tightness. Rather than hurt her more than was pleasurable, he resumed fucking her at half penetration. He still found this particular act of sex to be extremely arousing; his girlfriend hovered right above his penetration of her roommate. \n\nThey fucked in this position for a few minutes, Kirsten continuing to eat out Ashley between moans. Then, Ashley held out her tongue, and Peter withdrew from Kirsten. His girlfriend sucked his cock hungrily, and for a moment he wasn't sure if she would let him go. This brief thought was broken when Ashley got up and laid down next to Kirsten, urging her to lay on top of her. Kirsten complied and suddenly Peter found himself with the option of choosing to fuck Ashley missionary or Kirsten doggystyle while they sandwiched each other.\n\n\"Take your pick,\" said Ashley sweetly. Not wanting to neglect his girlfriend, he stuck his cock into her soaking pussy and quickly pounded her with desire. Kirsten rocked on top of her and kissed Ashley hard. Ashley moaned into her mouth, unable to do much activity while being fucked so hard.\n\nAiming to be playful, Peter withdrew after a minute and penetrated Kirsten without much of a warning. Both of the girls were surprised from the sudden switch. They only briefly broke their kiss, and resumed when the shock had subsided.\n\n\"Mmm, mmm, mmm,\" moaned Kirsten as her tongue danced with Ashley's. Another minute went by before Peter switched back to Ashley, and he continued this pattern of short and powerful penetrations until all three were ready to change positions again.\n\nIt was Ashley who moved first, and in a quick series of commands, Peter was on one end of the bed and Ashley the other. Kirsten straddled Peter and impaled herself on his cock, riding him reverse cowgirl style. Ashley's plan was to masturbate while watching her roommate ride, and the success caused her to cum on her hand after only a few minutes.\n\nPeter watched his girlfriend bring herself to orgasm while holding Kirsten's bouncing waist. He felt pretty far along himself, and slowed his pace to try and preserve his load. Kirsten sensed his slowing motions and decelerated with him. They continued to fuck at a more gentle speed. Ashley soon stood up.\n\n\"I want you to cum like this, on Kirsten's belly,\" she said.\n\nPeter grunted in agreement. He liked how his girlfriend was taking charge. Kirsten sped up her riding again, leaning back and placing her hands on Peter's muscular chest. Peter thought it would only be a couple more minutes before he came.\n\nSuddenly, Ashley began lightly fondling his balls, and his expected few more minutes quickly shortened to only a few seconds. He quickly felt himself tightening up, groaning more and more as his explosion built inside of him. In a final act of powerful lust, Ashley gave Peter's balls a good warm lick, and Peter felt himself heat up like an oven.\n\nHe lifted Kirsten off of his penis and sat her on his belly. His load violently exploded, sending streak after streak of foggy fluid onto Kirsten's stomach and breasts. Ashley continued to softly finger his balls and lick his shaft, laughing erotically.\n\n\"Oh my!\" exclaimed Kirsten as she became covered with his thick semen. His orgasm was one of the most powerful he had ever felt, and it lasted for least ten seconds before he relaxed and let go of Kirsten's hips.\n\n\"Fuck Peter, that was a huge load!\" giggled Ashley before taking his cock in his mouth. He was still mostly hard, but beginning to soften. After his massive cum explosion, he was extra sensitive and thankful that Ashley was being gentle with her mouth.\n\nKirsten laid back on top of Peter while Ashley continued to finish off the last stand of his erection. He took her tits in his hands and fondled them lovingly while she turned her head back to kiss him. When Ashley was done, she licked a few splashes of semen off of Kirsten's belly, then crawled up on the bed next to them.\n\n\"Hey, don't forget about me!\" she teased. Peter and Kirsten stopped kissing and she slid next to him, opposite of Ashley. They all lay there in silence, except for their panting, for several minutes.\n\n\"Well damn,\" Peter finally said. The girls both chuckled. \"That was so fucking good.\"\n\n\"I'll say,\" said Kirsten. \"I can't thank you enough for letting me join you in this.\"\n\n\"We were just as excited as you,\" said Ashley, snuggling her head on Peter's shoulder. \"I hope you're feeling better.\"\n\n\"I certainly am.\"\n\nPeter looked at them both, realizing something important. He definitely was not in love with Kirsten, as he had feared he would be, and he was more in love with Ashley than ever before. Rather, he felt that he could continue to be Kirsten's good friend (perhaps with benefits), and he hoped that the girls' relationship as roommates would only strengthen as well.\n\nHe tuned back into the conversation, after Ashley had said something about Kirsten's squirting.\n\n\"I knew I could do it, but I didn't say anything because I've only done it twice. Both were during masturbation. That says a lot about what you can do to me, Peter.\"\n\n\"I was just having fun,\" he said.\n\n\"I told you he was a stud. He won't admit it though,\" said Ashley\n\n\"I will always respect you two as boyfriend and girlfriend, and I would never want to hurt your relationship, but fuck you,\" said Kirsten jokingly. \"Why couldn't I have found Peter first?\"\n\n\"Would you actually want to date me?\" he asked.",
        "\"I'm mostly kidding, I'm perfectly happy being your friend. I just mean I wish I had found someone like you.\"\n\n\"You can have him anytime you want,\" said Ashley.\n\n\"What?\" Peter and Kirsten asked together.\n\n\"I mean you can keep fucking him, if you'd like. I kind of like sharing him with you, but only because it's you. I suppose I don't even need to be around, but I'd like to. Just promise me one thing.\"\n\n\"Sure, what?\" Kirsten asked.\n\n\"You won't take him away from me.\"\n\n\"I pinky swear.\"\n\nThe girls locked their pinkies and stared at Peter. \n\n\"What?\"\n\n\"You have to swear too. She can have your dick, but I want your love AND your dick.\"\n\n\"Sounds good to me,\" he agreed, folding his pinky around theirs. They held their finger-made pretzel for a few seconds before releasing.\n\n\"I'm pretty worn out,\" said Kirsten. \"That is one big cock.\"\n\n\"Sorry,\" Peter muttered.\n\n\"Don't ever say that,\" she retorted. He smiled.\n\n\"You get a little used to it,\" said Ashley. Kirsten yawned, and they all chuckled.\n\n\"Want to go to bed?\" asked Peter. \"It's a little early, but we can just talk until we all fall asleep.\"\n\n\"Sure,\" said the girls.\n\nKirsten and Ashley cleaned up the remaining cum (much to Peter's delight) before they got under Ashley's sheets. There was some talking, but not very much. They were all much more tired than they had expected. Plus, they had the entirety of fall break ahead of them and needed their rest. Peter especially.\n\n***\n\nKirsten woke up first. She was on the outside of the bed, so she rolled out and went to the bathroom without causing too much of a stir among the couple. When she returned, she got right back into bed with them and snuggled into Peter's arm. \n\nIt was another half hour or so before Ashley woke up to pee, and since she had to climb over the other two, all three were awake by the time she was putting Peter's shirt on.\n\nWhile Ashley was in the bathroom and Kirsten getting dressed, Peter checked his phone. The first message he saw was from his aunt.\n\n'Reply to this when you're ready to receive a picture of your study sheet.'\n\nStill half asleep, it took Peter a second to realize that the \"study sheet\" was probably a picture of his aunt's breasts. He didn't want to risk the girls seeing that, so he would wait until he was in the car to respond.\n\nHis mom had asked him if he was coming home soon. He had forgotten to text her during the evening, so he sent her a quick apology and a promise that he would see her soon.\n\nAshley returned to the room and sat next to Peter, who was still naked under the sheets. Not shy at all, he sat up and let his body be revealed as the sheets fell away. The girls both gawked at his fit figure.\n\n\"You really need a haircut,\" said Ashley as she brushed his golden bangs back with her hand. He shrugged.\n\n\"I can give you one,\" Kirsten piped up. \"I used to give haircuts to my younger brothers since my parents were both working and we didn't have a ride to an actual place.\"\n\nAshley raised an eyebrow at him.\n\n\"You don't like my flow?\" he asked.\n\n\"It's not that, it's just-\"\n\n\"Neither do I, it's out of control,\" he interrupted. \"Sure, I'll take a haircut.\"\n\n\"Do you want to come back later today? Better sooner than later.\"\n\n\"Sure, I'll let you know when I'm free. I promised my mom I'd spend more time with her this weekend since I've been spending the past few weeks almost exclusively with Ashley.'\n\n\"Okay!\"\n\nPeter put all his clothes back on (it was a struggle to get his shirt back from his girlfriend) and gave both girls a kiss and ass squeeze before leaving. The hallway smelled surprisingly fresh, and then he realized the dorm room probably just reeked of sweat and vagina.\n\nAs he walked down the stairs, he replied to Aunt Julia that he was ready. Her reply arrived seconds later, but he didn't open it until he was safely in his car. His jaw dropped when he saw what she had sent.\n\nIt was a video. His aunt was standing in her master bathroom wearing a red silk robe. \"Hey Peter,\" she said as she felt up her own curves with her free hand, \"I thought you might like to have something like this for yourself, in case you don't have any sexy girls around to please you.\" She reached off camera and brought a large skin-colored dildo into view. She slowly licked it from its fake balls to its fake head before putting it in her mouth and giving it a realistic blowjob. She also somehow managed to push her robe aside while doing so, exposing her perfect breasts. She sexily shook her dark brown hair and gave peter a show by letting drool drip down from the dildo onto her chest. She ended the video with a wink and a smile.\n\n\"Fuck,\" he muttered aloud to himself. His aunt never failed to turn him on. His cock strained against his pants. While he was watching the video, she had sent him another text.\n\n'Come over?'\n\n'I have to go home first,' he replied. 'I'll call you when I can.'\n\nHe drove home in somewhat of a daze. He never imagined his sex life would have become so... lively. A month ago, he just wanted to improve his grades and maybe go on a date along the way. Now, not only were his grades working their way up, he had a hot girlfriend who was willing to share him with her hot roommate, a hot aunt that wanted to give him everything sexual, and a hot mom who he was sure would give him the gentlest love he would ever feel.\n\nWhen Peter arrived at home, his mom was nowhere to be seen. Her car was in the driveway, so he assumed she had gone on a jog. He passed the time by watching some television, but she returned home quickly enough that he didn't finish the episode of the cartoon that was on.\n\n\"You're watching cartoons?\" she asked, half laughing, half panting. She had just come through the front door and into the kitchen. She was wearing a headband, and her auburn hair was tied into a ponytail. Her top was a light blue tank above a black sports bra, and her bottoms were a pair of black leggings. All of her clothes were tight and her figure looked as curvy as ever. In spite of her sweatiness, and Peter thought she was gorgeous.\n\n\"Just passing the time,\" he said while he studied her. She took notice of his eyes and blushed.\n\n\"How was your date?\" she asked earnestly. He gave her a brief recounting of his night, excluding the threesome (although he figured it might actually turn her on, remembering what his aunt had told him about her past experiences).\n\n\"Sounds fun!\" she said, washing her face with a wet paper towel. \"I'm going to go take a shower. Did you want to do anything today?\"\n\n\"Well, I was going to go back to Ashley's a little later. Kirsten said she could give me a haircut. Also, Aunt Julia asked if I could go over for a little.\"\n\nPeter's mom let out a heavy sigh. He stood up and walked over to her.\n\n\"I don't have to go if you don't want me to,\" he said. His mom's eyes lit up, but she kept any more excitement to herself.\n\n\"You can go get a haircut, since that should be quick. But whenever you go to Aunt Julia's house, you, uh... spend a long time there.\" His mother looked down. \"I just want to see you more.\" Peter lifted her face by her chin.\n\n\"Don't worry mom, I won't go today. I'll go for a quick haircut and then spend the rest of the day with you. Aunt Julia will understand.\"\n\nHis mom couldn't contain her smile, and the one that spread across her face was genuine and contagious. Peter smiled back and leaned down to kiss her cheek. She lightly turned toward him, enough that when he kissed her, the corners of their mouths touched. They both paused for a moment, which felt like an hour, staring into each other's eyes less than an inch away from each other. Then they kissed.\n\nPeter hadn't realized that his heart had been beating faster than normal until his lips met hers. As soon as they did, his heart, his mind, and the rest of his body drifted away. He knew his hand was on her arm, and her hands eventually found his waist, holding him with the tenderness only a mother could show. His other hand was then lightly pressed against her cheek, but he didn't know how it got there. It was like he was watching from heaven itself, feeling only his areas of contact with her and nothing else. \n\nThey didn't do anything but hold each other and kiss. They didn't use any tongue, or break apart, or open their eyes, or anything. They just held it, breathing but unable to hear it, lost in the bliss of the moment. Peter gradually returned to his body, and it struck him that he was kissing his mother, not as a son but as a lover, and it was the most passionate feeling ever to flow through the comprehensions of his mind. He never wanted it to end.\n\nBut it did. Peter's mother slowly broke it off, so slowly that he could feel the tectonic plates moving faster than her. But it had ended, and they continued to hold each other in the same position, except they were now looking at each other.\n\nHis mother's face was extremely red- partly from desire and partly from embarrassment. But she didn't say anything, and neither did he. They just stared.\n\nA garbage truck stopped outside and the noise snapped them out of their trance. Peter cleared his throat, not taking his eyes off of his mother. She, on the other hand, looked down and spoke.\n\n\"I, uh, have to go shower now.\"\n\nPeter didn't respond, couldn't respond, still in disbelief. What he didn't believe was how right it felt. To kiss his mother. She went upstairs.\n\nThe connection had been made, and Peter now felt like he and his mother were closer than ever. He felt like they knew each other, they could sense what they were feeling simply through love.\n\nHe knew she was going to masturbate to orgasm in the shower.\n\nHe didn't bother her. She wasn't ready for more yet. Somehow, he had returned to the couch and was staring at the cartoon again. The, all at once, his mind returned to normal. He took a deep breath.\n\n\"Wow,\" he said, to himself but as loud as if he were talking to someone across the room. He reached for his cell phone, which was on the ottoman, and called his aunt.\n\n\"Hey Peter!\" she said after a few rings.\n\n\"Hey,\" he said, and before he could say any more she interjected.\n\n\"What's wrong?\"\n\n\"My mom and I just kissed.\"\n\n\"Like on the lips?\"\n\n\"Yeah.\"\n\nShe was silent for a moment.\n\n\"How did it feel?\"\n\n\"I can't explain it with any words other than perfect.\"\n\n\"Well, Peter, I always knew you two were meant to be. You two are going to be happy together.\" He could hear her smile, and could tell she really meant it. \n\n\"We only kissed. But I guess it's a start.\"\u2028\u2028\n\n\"That's the biggest step, I think.\"\n\n\"Thanks, Aunt Julia. For setting all this up.\"\n\n\"Of course, Peter.\"\n\nThey were both silent for a moment before she spoke again.\n\n\"What's on your mind?\"\n\n\"Well, actually, nothing really. I just feel so at home. It's hard to explain\"\n\n\"Ah.\"\u2028\u2028\n\n\"Julia?\"\n\n\"Yeah?\"\n\n\"What about you?\"\n\n\"What about me?\"\n\n\"This won't affect us, will it? I mean, I know I sort of asked before...\"\n\n\"Think of it this way. You've found your true and highest love, but we both know you have enough room in your heart for more than one person. And I, as your aunt, will continue to love you as I have. No matter what.\"\n\nPeter didn't say anything. He was at a loss for words.\n\n\"I'll take that as an 'I love you too, Aunt Julia.'\" she teased.\n\n\"I do. I do love you. You know I do.\"\u2028\u2028\n\n\"That's better.\"\n\n\"Hey, by the way, I don't think I can come over today. I really want to, especially after that video, but I think I have to be here.\"\u2028\u2028\n\n\"I understand. But I did want to talk to you about something, if you have the time.\"\n\nPeter listened to his house for a moment. The shower was still running.\n\n\"Sure,\" he said.\n\n\"Your uncle will be back tonight.\"\n\n\"Woah, what? I mean, I'll be happy to see him, but I thought he wasn't coming back for another week or so?\"\n\n\"He convinced his boss to let him come home early. Apparently he had thought about what I had said and wanted to make it up to me.\"\u2028\u2028\n\n\"How long will he be home for?\"\u2028\u2028\n\n\"I don't know.\"\n\n\"Will we still be able to... you know?\"\n\n\"Oh, I'm going to find a way to fuck you. We'll go to a hotel if we have to. Don't worry about that. But I will have to spend time with Dave.\"\n\n\"That's okay.\"\n\n\"You bet it is! You have plenty of other women in your life to keep you satisfied. Plus, I could use some of Dave up my pussy. Hopefully he doesn't find it too loose now.\"\n\n\"You're real dirty, you know that?\"\n\n\"I guess I am,\" she sighed and he laughed.\n\n\"Well hey, I'll see you around. I'll stop by tomorrow to say hi to Uncle Dave, at the least.\"\n\n\"I'll see you tomorrow then! Have fun with your mom, stud.\"\n\n\"I will. I love you.\"\u2028\u2028\n\n\"I love you too. Bye, Peter.\"\n\nPeter hung up and set his phone down. He supposed it was time to get his haircut, but he didn't feel like moving. He wanted to stay in this house with his mom forever.\n\nHis reasoning overtook his desires, however, and he texted Kirsten that he would be available soon and could come over whenever she was ready. She responded a few minutes later saying he could come over now. He got up, heard the shower still running (damn mom, he thought) and left the house once again.\n\n***\n\nKirsten held up the mirror for him to see the back of his head. They were in front of the tall mirror in her dorm room. The towel underneath his chair was covered in clippings of light brown hair, and as he looked in the mirror, he was pleased with what was left on his head. It was still rather long, but by no means a \"flow.\" The sides were trimmed pretty short, but it faded up to the top of his head, where a spicy golden mop of fluff sat freshly clipped. \n\nAshley was sitting on the bed, where she had been during the whole haircut. Throughout the process, she and Kirsten went back and forth about how after Peter had left that morning, they had a brief and sensual lesbian session.\n\n\"It was by no means as hardcore as last night,\" had said Ashley, \"but very sensual. We kissed and slowly undressed each other and ate each other out at a comfortably, easy going pace.\"\n\n\"It was a lot of fun,\" Kirsten explained. \"We wished you were there.\"\n\nPeter had been smiling through the whole story, not saying much. His cock did, however, pitch a tent in his pants, which prompted Kirsten to tell it to \"Go away, we're busy.\"\n\nHis mother was still much on his mind, even during the erotic tale. He wasn't in as much of a peaceful daze anymore as he was in a state of confidence and optimism. More than anything, he was looking forward to going home.\n\nKirsten brushed off most of the stray hairs off of him (she borrowed a friend's large paintbrush from down the hall) and fluffed the hair on his head one last time before giving him a finishing pat on the shoulder. Peter stood up and thanked her, and she reached up and gave him a kiss.\n\n\"Well, now you've gotta give me one of those,\" said Ashley. Peter walked over and gave her an even harder kiss, which caused her to shudder and nearly fall off the bed.\n\n\"I have to go. I'll see you girls later this weekend!\"\n\n\"Bye, Peter!\" they both replied.\n\nAs he left the dorm for the second time that day, Peter passed several people in the hallway. He hadn't seen anyone in the morning, but now that it was the afternoon, the dormitory was lively. A couple of other girls giggled after he smiled at them. A guy at the end of the hall smiled as a greeting before walking upstairs. Peter walked down the stairs, and eventually out of the building to his car.\n\nThe weather was still warm, as it was the day before, but the forecast predicted that the rest of the weekend would be much colder and perhaps even rainy. Peter had the idea to spend some time with his mother outside, perhaps for an evening picnic, while the weather was nice. He would make them sandwiches and lay out the blanket for her and gently run his fingers through her hair as she ate...\n\nHis fantasy continued as he drove home. When he arrived, he went straight inside to find his mom. She was in the kitchen washing some dishes. Her hair was slightly darker than usual, due to a hint of wetness from the shower, but it was mostly dry. She was wearing a pair of high-waist jean shorts and a tucked white and gray plaid shirt with the sleeves rolled up. When she noticed him, she turned off the sink and turned toward him, resting her hands behind her on the counter.\n\n\"Hey,\" he said.\n\n\"Hey.\"\n\nThere was a brief moment of awkwardness, where neither knew what to say but both looked at each other. \n\n\"I, um, like your haircut.\"\n\n\"Mom, I love you. I want you, and I know you want me. But let's take it slow, okay? As slow as we need to. We have all the time in the world, because I will never stop loving you. I don't care if it takes a month or a year or ten, I will be patient with you and give you all of my love each and every day.\"\n\n\"Oh Peter!\" she cried, rushing over for a hug. \"I love you too!\"\n\nHe stroked her hair and she started to cry. He held her tight as she sobbed into his chest with tears of immense joy. It felt like ages went by until she stopped, but Peter didn't care. He would have stood there forever, holding her.\n\n\"Thank you,\" she said through her sniffles. He kissed her forehead before she leaned her head back against his chest again, scratching his muscular back.\n\n\"I want to spend the rest of the day with you, and as much of the weekend as possible,\" he said. \"What did you want to do today?\"\n\n\"I don't know. I just want to be with you.\"\n\n\"Want to hear what I had in mind?\"\n\n\"What?\"\n\n\"How does a picnic sound?\"\n\nShe hugged him tighter as he continued.\n\n\"I'll prepare all the food. We can walk to the park in the evening and I'll roll out the blanket and set up the basket. While we eat, we can watch the sunset.\"\n\n\"You don't have to do all of that for me.\"\n\n\"I want to.\"\n\n\"At least let me help!\"\n\n\"You can carry the dessert.\"\n\n\"Oh yeah? And what would that be?\"\n\n\"Your lips.\"\n\n\"Oh, stop!\" she exclaimed. Peter eased his pressure on the hug and leaned down to kiss his mother. She gladly complied, pressing her lips softly against his. This kiss was even more passionate than their first, strengthened by the fresh acceptance and openness of their evolving relationship.\n\nIt lasted several minutes, and Peter ended it with a light smack on his mother's booty. She squealed and ran away from him, to the other side of the kitchen.\n\n\"I can start making the sandwiches soon, but we still have a few hours until sunset,\" he said. \"What do you want to do until then?\"\n\n\"Hmm,\" she murmured. \"I don't mind going a little early. We can also go someplace other than the park.\"\n\n\"Where?\"\n\n\"Some place farther out, where we don't have to be afraid of people knowing that we're mother and son.\"\n\nHe caught her implication and nodded. They went on preparing the meal (she insisted on helping) and picked a destination. She found a park about an hour north of town, and thirty minutes later they packed everything into Peter's car and drove off. In the car, they talked like normal mother and son- she asked him about school and Ashley and all she could about his life, while he asked her if she had been holding up okay lately. She said she was doing just fine.\n\nThey arrived at the park just before four o'clock. It was a large park with a gravel parking lot by a small lake, and there were people all over the place. There were kids playing on the playground, some teenagers playing volleyball, and others just sitting on the benches enjoying the weather. If the leaves hadn't been red and orange, it might as well have been summer.\n\nPeter carried the blanket and basket while his mom locked up the car. They hiked to the opposite end of the park, to a large willow tree right next to the lake. Not only was it a beautiful spot, but there were few people nearby.\n\nHis mom observed the lake and surrounding scenery while Peter unraveled the blanket and unloaded the food. They weren't quite hungry yet, but did enjoy some iced tea while they sat and watched some birds fly over the water.",
        "Conversation was again normal. They both acted exactly how they preferred to- completely comfortable with each other. In their enjoyment, time passed quickly, and as 5:45 approached, the sun was flirting with the far end of the lake.\n\nWhile they ate their sandwiches and drank their tea, speaking began to fade and a more physical exchange began. They were both conscious of their public domain, and despite their distance from home, were hesitant at first to kiss. But the sun on its way to the other side of the Earth, and the population of the park was thinning, and Peter's mother looked young enough and fit enough and sexy enough from a distance to not be Peter's mother, despite her obvious maturity. And so they began to act more like a couple.\n\nIt started with Peter running his fingers through his her perfect auburn hair, which caused her to coo and sometimes even shiver. Then she reached around him and scratched his tricep lovingly. He gave her cheek and forehead some pecks, and she leaned into him. She put a hand on his chest, slowly and lightly feeling his pecs through his shirt.\n\nWhen they had finished eating, the sun had already penetrated the horizon. It wouldn't be long until complete sunset, and in the romantic lighting, they seized the moment and began to kiss. This time, they were much more passionate in their act of affection. There was tongue, as Peter would fondly and vividly remember forever. As the sun fell further into the Earth, they too fell backwards onto the blanket, wrapped in each other's arms. Their hands innocently explored each other's body, avoiding places that would significantly increase their arousal. It wasn't like they needed it, anyway- they were both incredibly hot.\n\nTheir kissing continued past the sunset, and even into the blackness of the night. What stopped them wasn't time, or the desire to leave, but the temperature. Without the heat of the sun or protection from the wind, it had quickly become chilly.\n\nThey laughed and giggled their way back to the car, holding each other awkwardly at a brisk jog. In the front seat, his mother wrapped the picnic blanket around her while Peter packed up the basket in the back. They left the park in high spirits.\n\nBack at home, Peter ran upstairs and retrieved one of his sweatshirts for his mom. When she put it on, they both laughed at its enormous size on her small womanly body. They cuddled up on the couch under a blanket and turned on a movie, but continued to kiss instead of watch.\n\nTwo hours later, the movie was done and their mouths were incredibly dry, but they didn't stop. Another thirty minutes later, Peter's mother was gasping for a drink, and he himself craved water as well.\n\nThey laughed and cuddled and talked and shared kissed for the rest of the night. It was perfect, in Peter's mind. They went to bed (in separate rooms) around midnight. Neither minded, for both were too happy and grateful to push things any further. They slept well.\n\n***\n\n\"And then she we both yawned, several times in succession actually, so we went to bed. In our own rooms.\"\n\nPeter had called Julia early that morning, on his way home from the gym. She hadn't said much, to spare Uncle Dave from discovery, but was undoubtedly excited to hear about Peter's evening with his mother.\n\n\"That's very nice Peter!\" she said objectively. 'We can talk about it more another time. Are you coming over today?\"\n\n\"Yeah, I'm going to go shower and change and then I'll be over. And, if mom is awake, say good morning. I'm sure mom will want to come too, now that I think about it.\"\n\n\"Okay! Why don't you just wait until she's up to come?\"\n\n\"That works. I'll see you later, then.\"\n\n\"Bye!\"\n\nShe hung up, and Peter continued to walk home. The forecast was correct- the weather was colder and cloudy, with an ominous sense of impending precipitation. He only had to bear it for another minute before he arrived home.\n\nWhen he got home, he took a quick shower and threw his sweaty clothes in the laundry. His mother was not awake yet, so he cooked up some scrambled eggs and toast to bring up to her. He knocked on the door, not wanting to walk in on her doing anything private. When there was no answer, he knocked again to be sure, and then entered.\n\nThe room was almost completely dark, and his mother was fast asleep under the sheets. Peter set the tray of food on the dresser and drew back the heavy curtains. Since it was cloudy, the room was spared complete illumination, but the sudden appearance of light was still plentiful enough to wake the sleeping angel.\n\n\"Good morning, mom,\" said Peter soothingly. She groaned and rubbed her eyes. \"Did you sleep well?\"\n\n\"Oh, yes!\" she said after clearing her throat. \"I guess I was pretty tired. I slept like a rock.\"\n\n\"Good! I made you breakfast.\"\n\n\"Aww, thank you sweetie!\" she exclaimed as she sat up. She had on a thin white robe, and she held it so that it remained closed in his presence.\n\n\"I didn't want to wake you, but Aunt Julia asked if we wanted to go over and say hello to Uncle Dave soon. I thought sooner than later would be better, so I saved some time by making you eggs.\"\n\n\"You're the best. Let me eat and freshen up. I'll be down soon.\"\n\nPeter started to leave, but stopped quickly in his tracks, turned around, and kissed his mother full on the lips. She giggled and blushed, playfully swatting him away to let her eat. \n\n\"Thank you for a wonderful night!\" she called as he was shutting her door. He gave her a big smile before letting her be.\n\nIn an hour or so, Peter and his mother were on their way to Julia's house. While she drove, Peter studied her (she caught him looking several times but only smiled to herself). She wore a cozy navy blue sweater and jeans. He thought he saw her nipples subtly poking through the cotton. \n\nJulia warmly welcomed them into her house with big hugs, calling for Dave to come say hello. Dave appeared at the top of the stairs and looked as welcoming as ever with his thin beard and healthy black hair. He was wearing sweat pants and a white t-shirt, but was a handsome man. His face lit up when he saw the visitors.\n\n\"If it isn't Beth and Peter!\" he shouted as he coasted down the stairs. \"How are you two?\"\n\n\"We're good!\" said his mother. \"Nice to see you again, Dave!\"\n\n\"Hey, I couldn't stay away forever! How's school going, Peter?\"\n\n\"It's going well. It took me awhile to adjust, but I'm enjoying it.\"\n\n\"I hear you have a girlfriend now?\"\n\n\"Yeah, her name is Ashley. She's cool.\"\n\n\"I'd like to meet her sometime!\"\n\n\"How was your trip?\" asked Peter's mother.\n\n\"Oh, the usual. Enjoyable but extensive. I'll tell you more about it in the kitchen, I need a drink.\"\n\nThe four of them walked into the kitchen and Dave poured them all a glass of lemonade that Julia had conjured earlier. While Peter's mom listened intently to Dave's trip details, Julia casually whispered in Peter's ear.\n\n\"I plan on going shopping this afternoon. Want to come?\"\n\n\"Sure.\"\n\n\"What's your mom up to later?\"\n\n\"She mentioned something about going to the bank. She said it might take an hour or so.\"\n\n\"Good.\"\n\nJulia left it at that and Peter was forced to listen to his Uncle's story. Afterwards, they sat and talked about various things until lunchtime. Julia made them all grilled cheese and tomato soup. It was a pleasant time for Peter, catching up with his uncle and eating a yummy meal.\n\nPeter's mother mentioned she had an appointment at the bank and took her leave. Julia, meanwhile, said she was off to the store, and Peter went with her instead of to the bank. His mother looked slightly disappointed at his request, but kept her cool and let him go.\n\nIn the car, Julia made a loop around the block and drove towards Peter's house rather than towards the mall.\n\n\"Are we not going to the store?\" he asked.\n\n\"No, we're going to your place so I can fuck you.\"\n\n\"Oh!\" He laughed. \"I can't believe I didn't catch that.\"\n\n\"I also wanted to talk to you about your mom. I have an idea that might speed things up between you and her.\"\n\n\"Well, I don't mind taking things slow with her. But I'll hear you out.\"\n\n\"Okay, let me finish before you say anything.\"\n\n\"Okay.\"\n\n\"So, when we go have sex now, we record it with your phone and upload it to your laptop. We have to be fast in case your mom's bank visit is a quick one. Then-\" she paused for a brief laugh at Peter's reaction \"-you ask your mom if she wants to have a movie night, and say you have something special from me that I wanted you two to watch. Say you don't know what it is. Then, when the video starts playing, you'll both be surprised at the scene, but you'll end up watching it together. It'll turn you on so much that you'll want to have sex with each other to break the tension. What do you think?\"\n\nPeter was silent in disbelief for a moment.\n\n\"Well,\" he finally said, \"I guess the recording in itself would be hot. I don't know about showing it to my mom though. You think she'd react in the way you'd expect?\"\n\n\"I know what kind of porn she watches. Plus, she knows about us. And she's in love with you. I think she'd enjoy it.\"\n\n\"Alright... I'll give it a try.\"\n\n\"That's what I like to hear!\"\n\nThey pulled into Peter's driveway and hurried inside to his room. He set up his phone on the dresser so that it had a good shot of the bed. Julia undressed, and when he saw her nakedness, he did the same. They were going to get right into the action for his mom. He held his thumb above the record button on his phone.\n\n\"Ready?\"\n\n\"Yep.\"\n\nPeter pressed record and walked over to his aunt, who was sitting on the bed with her legs crossed. He leaned down and kissed her passionately on the mouth. While doing so, his cock grew into its large hardened state, swiping Julia's belly. She cooed into his mouth and started to stroke his cock, pausing once only to spit on her hand for a slicker feel. Peter reached down and massaged her large breasts, running his thumb over her sensitive nipples. \n\nIn the interest of time, Julia pulled Peter onto his bed after only a minute of their initial entwinement. After adjusting herself so that she was laying on her stomach next to him with her head over her lap, she started to suck his cock. She was slow at first, gently playing with his balls and giving him loving glances. The gentleness quickly evolved into rapid blowing and jerking. Peter gripped his aunt's hair and followed her movements so that the camera could easily see her work.\n\nHaving the scene videotaped was a surprising turn on for both of them. Peter groaned at the slickness and swiftness of his aunt's blowjob while she rocked her ass back and forth out of her own pleasure. He reached down her body with his free arm and rubbed her labia with his fingers. She moaned into his cock loudly as he stuck two fingers inside and began to pump his hand.\n\nJulia took a short break of blowing and sucked his balls while jerking her nephew's cock. When her head moved back up, Peter held it still and humped his dick into her mouth. She gurgled and drooled all over his thick shaft. When Peter stopped, she gripped his cock and rapidly jerked him off while sucking on his tip.\n\nFeeling assertive, he shifted to a kneeling position on his bed while his aunt moved onto all fours. He held her hair with both hands and mouth fucked her quickly. Like before, she gagged and drooled heavily onto his sheets. To top it off, he pressed himself into her mouth, feeling her throat willingly and enthusiastically take him in. The last inch was a struggle, but she did it. They held this position for a short moment, his penis completely inside her hot bulging throat, before she gagged and forced him out. She laughed and stuck her tongue out while pumping him in her hand once more.\n\nBoth ready for the main event, Peter returned to his original spot on the bed while his aunt straddled him cowgirl style. He lay back and let Julia place her hands on his sturdy chest for support. They locked eyes as she lowered herself onto his giant cock, taking him all in one efficient plunge. Her hot wetness enveloped his cock effortlessly, giving him wonderful sensations of pleasure. She moaned loudly and began to ride him hungrily. \n\nPeter held her hips while she worked her way up and down his long cock. She rode him so hard and quickly that each time her ass made contact with his legs, the slap echoed through the bedroom. Her eyes only left his when the pleasure forced her head back with a great sigh, and she returned as quickly as her body would allow. He loved the lust in her eyes as much as anything she did with him.\n\nHe began matching her squats with thrusts of his own. His loose balls slapped against her asshole, adding small shocks of pleasure to her riding. Her eyes closed and her breathing shortened, and Peter increased his pace as much as he could. She cried out as she stopped and let him fuck her hard and fast. Suddenly, her orgasm overcame her with great force, and she clamped down with his cock completely inside her. Hot fluid washed over his penis. Her hips twitched, grinding her sensitive clit on his body, and she collapsed onto him.\n\nWhen he felt her begin to relax, he gave her pussy a few more thrusts before whispering \"doggy\" in her ear. She nodded and unimpaled herself, returning to all fours on the bed. Peter kneeled behind her and thrust his cock into her easily. Julia moaned in loud bursts as he fucked her hard from behind. She fell forward on her arms, unable to hold herself up, and bit into the sheets. Peter squeezed her ass, occasionally giving it a modest slap.\n\nJulia's face was red and her hair beginning to stick to her face. They had never fucked each other so hard before, and she was loving every second of it. Peter loved it too, especially in seeing her desire. He pulled her hair back, which lifted her head up forcefully. In her new suspended position, Julia gazed into the camera with her mouth wide open, moaning rhythmically.\n\n\"I'm gonna fucking cum,\" Peter grunted. Julia cried out something unintelligible and squirmed onto her back while he stroked himself over her. She squeezed her tits together and stuck out her tongue, panting. He suddenly burst, and hot cum sprayed into Julia's stomach and chest. She giggled as the hot fluid hit her skin. As the last of his semen exited his cock, his breath returned in a massive gasp. Julia reached forward and gave him a gentle squeeze before he fell into a seat. They sat there for a minute or so, breathing heavily.\n\n\"Fuck,\" said Julia. She smiled and wiped her forehead.\n\n\"Damn, Aunt Julia. That was incredible!\"\n\n\"You said it! I loved every second of it!\" She shifted onto her elbows and met him halfway for a kiss. Then she fell back and closed her eyes, a satisfied smile sprawled across her face.\n\nPeter stood up and stopped the recording. He watched his aunt rest for a few minutes, her glazed chest peacefully rising and falling. Then he cut the beginning and end of the video so it didn't show him walking between the bed and his dresser. He uploaded it to his laptop just as Julia stirred.\n\n\"I feel like I'm in heaven,\" she whispered. Peter gave her another kiss. and threw her clothes on the bed.\n\n\"I don't wanna rush you, but you're the one who said mom might come home soon.\"\n\n\"I can put my clothes on, but my face probably has 'freshly fucked' all over it. I'm not sure I can go home yet.\"\n\n\"Well you can't stay here!\"\n\n\"I know... wait! I could stay in your room! You and your mom probably won't come in here, right? You two can watch the video downstairs and then move up to her room. I can sneak out while you're busy.\"\n\n\"I don't know if that'll work...\"\n\n\"Trust me! If I get caught, I'll just join you.\"\n\nPeter sighed and got up. He used a moist towel from the bathroom to wipe his and Julia's moist bodies, then put his clothes on. Julia fixed her hair and returned to Peter's bedroom while he went down to the kitchen with his laptop. He made himself a sandwich and moved to the living room.\n\nHis mother arrived at the house not too long after Peter sat on the couch.\n\n\"Hey, mom!\" he called through the house.\n\n\"Peter!\" she called back, rushing over to see him. He stood up and brought her in for a hug and a kiss.\n\n\"I'm happy you're home,\" he said. \"I was hoping we could watch a movie or something, but first I have a video from Aunt Julia. I don't know what it is, but she wanted us to watch it together.\"\n\n\"Oh! Okay!\"\n\n\"I'll hook up my laptop to the TV. Why don't you get settled on the couch?\"\n\nPeter connected his computer to the TV with an HDMI cable and opened the video file. There was no thumbnail, so they couldn't see what it was. He pressed play and joined his mom on the couch.\n\nShe gasped loudly when she saw what was on screen: Julia and Peter were both naked on his bed, kissing and fondling each other.\n\n\"What the-\" he started.\n\n\"Peter!\" she blurted. \"What is this?!\"\n\n\"I don't- it's just-\" he stammered, trying his best to fake his reaction.\n\n\"Was this... was this what you were doing while I was at the bank?\"\n\n\"Uhhhhh...\"\n\nShe was talking to him in a scolding sort of manner, but her eyes were glued to the television and her expression was almost... playful. Peter relaxed a little as he began to explain.\n\n\"Yeah, that's what I was doing. But you already knew we were doing that.\"\n\nHis mother looked at him, her face nearly as red as her hair. Then she looked back at the TV.\n\n\"Julia sure is a cunning one, isn't she?\"\n\n\"Yeah.\"\n\n\"Well, I guess it's all out in the air now.\" She sighed. \"I'm okay with you and her.\"\n\n\"Thanks.\" They watched in silence for a moment before he spoke again. \"I want you just as much as I want her. If not, more.\"\n\n\"Really?\"\n\n\"Yes.\"\u2028\n\nShe sensed the honesty in his voice and smiled. They watched the sex video with apt attention. Julia was blowing him now, and the camera caught it perfectly. Peter realized that this was the first time his mother had seen his penis all grown up (in more ways than one).\n\nHe discretely eyed his mother and saw that her hand was caressing her own inner thigh. Liking where it might be going, he began hardening in his sweatpants. His mother saw him beginning to tent and bit her lip. Through a mutual sort of silent understanding, they each put their hands in their own pants and touched themselves. They both watched the video as they masturbated, but stole occasional glances at the other's movements.\n\nWhen Peter reached full hardness, he pushed his sweats down to his feet and put his cock full on display, figuring if he was shown on screen he could be shown off screen as well. His mother gasped at his reveal, and worked her fingers on herself even harder. She did not take off her own pants, however, and Peter was slightly disappointed. His patience prevailed, however, and they continued to watch while jacking and jilling.\n\nAs the video showed Julia taking Peter's cock deep into her throat, his mother shuddered on the couch and shut her eyes. The real Peter licked his lips and watched her fend off a mini orgasm. When her eyes reopened, they shone with lust. He made no moves on her and kept his distance.\n\nOn screen, Julia straddled her nephew and began to ride him. The knuckled bulge in his mother's pants began to move more rapidly. Her juicy lips lingered in a barely open slit. The hand that wasn't on her pussy drifted up to her breast and gently squeezed it. Peter was watching her more than he was watching the video.\n\nThe sex with Julia was getting rough, and it only made his mother hotter. She rubbed herself violently, failing to withhold any moans at this point. When Julia came on Peter's cock, his mother shook through another, more powerful orgasm. Peter felt like he was going to cum any minute now.\n\nHis mother took a deep breath and slowed her fingers, watching her son please himself. Both of them had their eyes on each other almost full time now, and were missing most of the rough doggystyle sex that had started on screen. Peter tried to hold himself back so that he could cum with his past self in the video, but was finding it difficult. His mother looked infatuated with him, and it was making him hotter than ever.",
        "At last, he recognized that the video was close to finishing. He started to groan, the familiar feeling building up inside of him. As Julia squirmed onto her back in the video and digital Peter's load shot all over her, real Peter's dick erupted off of the couch and onto the carpet.\n\n\"Ooooooh!\" cried his mother, trying to watch both the television and her son's present orgasm. When Peter was done, he flopped back on the couch and stared at his mother. She gave her pussy a few more rubs before withdrawing her hand from her pants. Her fingers were glistening. \n\n\"That was really hot mom!\"\n\nShe only smiled, her face still flushed. Peter pulled his pants up and slid next to her on the couch, going in for a kiss. They shared lips passionately, dancing their tongues around each other. When they withdrew, his mother held up her slick hand.\n\n\"I'm going to take a shower,\" she said. \"I loved that, but I don't want to do anymore tonight.\"\n\n\"That's- that's okay.\"\n\n\"I know you want more, and I'm sorry. But you won't have to wait as long as you think.\"\n\n\"Really?\"\n\n\"Yep. And if you want something to think about until then, take this.\"\n\nShe moved her hand in front of his face. He inhaled the strong scent of his mother's orgasmic juices and sighed. As he closed his eyes, she put her fingers into his mouth. He sucked the fluid off of her, savoring the taste of sweet nectar that he had been conceived in.\n\nPeter opened his eyes and his mother gave him a wink before retracting her hand. Then she left. It was over as quickly as it had started.\n\nThe video had been paused on its final frame, which was a shot of Peter sitting next to his cum-covered aunt. He turned off the computer and television and checked his phone. Julia had texted him about a minute prior.\n\n'I hear your mom in the shower. I hope you two had fun ;) Change of plans, I'm going to talk to your mother when she's out. I need you to give us some space. Why don't you go see Ashley?'\n\nPeter was about to type a response, then realized something and typed something else.\n\n'Change of plans my ass. This WAS your plan, wasn't it?'\n\n'You're a clever boy. Go fuck your girlfriend.'\n\nHe sighed and decided it wasn't worth pursuing. He gave Ashley a call as he grabbed his keys and wallet from the kitchen.\n\n\"Hey Peter!\"\n\n\"Hey Ash. What are you up to? I gotta get out of the house for a bit.\"\n\n\"I'm in a classroom in the bio building trying to study. I don't think I should get too distracted.\"\n\n\"I understand. Why don't I just come over for a little brain break? It's be quick, and then I'll be outta your hair and let you study.\"\n\n\"You'll be quick, huh?\" she teased.\n\n\"This time, yeah. You're alone, right?\"\n\nShe paused for a second. \"Yeah.\"\n\n\"I'm on my way. What room are you?\"\n\n\"317, but I really have to study!\"\n\n\"I hear ya, I hear ya.\"\n\nAshley laughed. \"See ya, stud.\"\n\n\"See you soon,\" he replied. She hung up.\n\n***\n\nBack at Peter's house, his mother was in the shower when Julia snuck into her bedroom. She watched Peter leave from the window before making her next move. She knocked on the bathroom door as she opened it.\n\n\"Beth? It's me.\"\n\n\"Julia?\"\n\n\"You know it.\"\n\nBeth pulled the shower curtain aside but didn't turn off the water. She peeked out at her sister, eyeing her mysteriously.\n\n\"Did Peter leave?\" asked Beth.\n\n\"He just did. I watched him pull out.\"\n\n\"Thank you for setting that up. It was really fun.\"\n\n\"I still can't believe you were the one who came up with the idea, Beth! That was really hot for me, too.\"\n\n\"You've still got quite the moves, sis.\"\n\n\"Oh, I'm sure you do too. You'll know so, soon.\"\n\n\"I wish he and I were having sex right now.\"\n\n\"Hey, trust me! Acting timid is just building you both up for the hottest sexual experience you'll ever know. By tomorrow night, you'll both be like sex bombs ready to go off at the subtlest tease.\"\n\n\"I'll take your word for it. He's been very patient with me. It's hard to believe he isn't in on it.\"\n\n\"Oh, how the tables have turned.\"\u2028\u2028\n\n\"Indeed they have.\"\n\n\"You know... I still need to shower before I go home to Dave. Can I join you?\"\n\nBeth smiled at her sister.\n\n\"I thought you'd never ask.\"\n\nJulia stripped her clothes and hopped into the shower. There wasn't a lot of space, but they made it work. Once Julia got her body all wet, she placed her hands on her sister's shoulders. She was standing behind Beth, and breathed gently onto her neck.\n\n\"I love you Beth,\" she whispered into her ear. Beth responded by turning her head back and kissing Julia full on the lips. Julia slid her tongue into Beth's mouth. She massaged her sister's shoulders for only a few more seconds before reaching under her arms and fondling her large breasts. Beth's nipples were stiff- a resulting combination of her earlier arousal and the feel of her sister's mouth and hands. Julia's tits were pressing into Beth's back, the sensation of which felt comforting to both of them. \n\n\"Oh god,\" Beth whimpered through the kiss. Julia grinned and turned her sister around. They were then tightly pressed against each other, their breasts like four melons in a bowl of arms. They continued to kiss passionately, their hands roaming from each other's hair to ass.\n\n\"I've missed this,\" said Julia during a quick breather.\n\n\"Me too,\" admitted Beth. They were nearly equal height (Julia an inch shorter), and in the wetness their hair looked almost identically dark. If it weren't for minor differences in their facial structure and body, Peter could have mistaken them for twins if he had walked in on them.\n\nBut the sisters were alone, free to enjoy the pleasure of the taboo lesbian encounter in which they were participating. They resumed kissing with a fiery thirst. Beth reached down between the two of them and placed a finger on Julia's clit. She felt Julia's mouth tighten as she rubbed her hand back and forth. \n\n\"Oh Beth,\" she moaned. Julia no longer had the power to kiss, her face angled upward at the mercy of her pleasure. Without access to her lips, Beth instead kissed her neck and breasts, suckling her skin with a leisurely force. \n\n\"Right there!\" Julia begged. \"Right there, oh yes, right th- EEEEEEEEP!\"\n\nHer begs were interrupted by a cry of shock. The water had suddenly gotten cold and the women quickly escaped by shutting It off and hopping out of the tub. Beth grabbed a pair of towels for the two of them, and they briefly patted themselves dry before scurrying over to the bed. Both laughing, they jumped on the sheets excitedly and resumed their playful kissing with their heads at the pillows.\n\nJulia took the lead at first, straddling slightly over her sister and reaching down to her pussy. Beth was wet from more than just the shower- in fact, she was soaking onto her sister's hand as soon as it was present in her crotch. Julia stuck two fingers into her, pumping them slowly while her thumb caressed Beth's clit. Beth, not wanting to deprive her sister of reciprocation, reached down and around Julia's hand and found her pussy.\n\nThey lay there for ten minutes or so, entangled in a sisterly fingerbang, before Beth moved her whole body down the bed and aligned her mouth with her sister's pussy. Julia grabbed Beth's hair and pulled her into face into her crotch. Beth's mouth met wetness and added her own saliva to the mix using her tongue, circling around the labia and teasing the clitoris.\n\n\"Oh fuck! Yes, Beth!\" Julia cried. Beth smiled as she ate her sister's pussy.\n\n'You're so wet!\" Beth exclaimed as she stuck her fingers in. Julia only moaned in reply as Beth had then resumed the use of her tongue. They went on like this even as Julia began viciously squirming her hips in her sister's face, reaching her climax. A gush of fluid soaked Beth, and when Julia had finished they eagerly switched positions. While doing so, Julia reached into Beth's bedside drawer and retrieved her pink dildo.\n\nIn their newly reversed roles, Julia did not hold back in her attack of Beth's pussy. Her tongue glided around the labia and flicked her clit with great force, and Beth's wetness soon tripled. Julia continued her obsessive eating for some time before beginning to tease her opening with the dildo. Beth jumped at the touch of the toy, but cooed as Julia slid it in.\n\n\"Yes!\" Beth cried as the dildo penetrated her pussy. Julia continued to lick her clit for a few seconds before stopping to whisper teases to her sister. \n\n\"I want you to pretend this is Peter's cock.\"\n\n\"Oh!\"\n\n\"He's soooo big. It's stretching you out and you love it.\"\n\nThe dildo wasn't actually that big, but it was nice to pretend. Beth was squeezed her own tits and pinched her nipples, her mouth frozen wide open.\n\n\"Your son is fucking you,\" Julia continued. \"His huge cock is sliding into your hot pussy.\"\n\n\"Fuckkk!\"\n\n\"'I love you, Mommy,' he whispers. 'You feel so good.'\"\n\n\"Oh, Peter!\"\n\nJulia quickened her pace, penetrating Beth with the toy as deep as it would go. Beth's eyes were glued shut. Imagination was a strong element.\n\n\"He cries out to you. 'Mom, I'm gonna cum!'\"\n\n\"Cum inside me, Peter! Cum inside Mommy's pussy!\"\n\n\"You feel his hot load gush inside of you,\" Julia said, rubbing her free thumb on Beth's clit. This sent Beth overboard, and she came in a sudden and powerful orgasm.\n\n\"OoooOOOOOOHHHHHH!!\"\n\nJulia slowed her probing immensely, imitating the decelerating of a man's post ejaculate thrusting. While Beth's screams of pleasure echoed through the house, Julia watched her sister squirm and flex her abs in an involuntary crunch. Her orgasm may have been strong, but it would be nothing compared to what her son would actually give her.\n\nWhen Beth relaxed, Julia withdrew the dildo and leaned back down, beginning to lick her pussy again. She was more tender this time, enjoying the taste of her sister's juices. Beth's breasts rose and fell like oceanic waves, and as Julia gently ate her, she ran her fingers in circles around her own nipples. She sighed several times.\n\n\"You're gonna love your son,\" said Julia as she licked her lips and scooted back up next to her sister. \"He can do more to you than I ever can.\"\n\n\"Is he really that good?\"\n\n\"Did you not see the video?\"\n\n\"I missed some of it,\" Beth admitted, blushing.\n\n\"Why don't we rewatch it now?\" Julia suggested. \"I can grab his laptop and bring it up.\"\n\nBeth nodded and bit her lip. Julia scurried out of the bedroom and downstairs, her tits bouncing free on her body. She returned with the laptop and they turned it on, thankful that Peter didn't have a password.\n\nWhile they rewatched the video, both women absentmindedly fingered themselves, entranced by the erotic scene. When it was over, they watched it again. And again after that. When they were as satisfied as the video could make them, they quickly dressed themselves and Julia left for home, leaving Beth no less horny than she had been before the day had taken off.\n\n***\n\nAround the time his mom and aunt were stepping out of the shower, Peter had arrived at the biology building on campus. He found parking easily and hurried inside to meet his girlfriend. Room 317 was toward the end of the hall opposite the stairwell, and as he passed by the other rooms he noticed that none of them appeared to hold any students. That was good.\n\nHe knocked on the classroom door where Ashley was studying as he opened it. The room consisted of lab tables meant for two students at a time, but Ashley's study materials took up all of the space on hers. She looked up from her notebook and smiled at him.\n\n\"Hey sexy,\" said Peter, walking behind her and leaning down to kiss her. As he did so, he squeezed one of her breasts.\n\n\"Hey,\" she scolded, \"I seriously have work to do! I don't have time for fooling around.\"\n\nPeter read her face and found it to contradict her own words. He laughed and kissed her again, this time more zealously.\n\n\"You seem stressed. Maybe it would be good for you to take a quick break.\"\n\n\"Quick? You don't know yourself as well as I do.\"\n\n\"I'm sure you're right,\" he said, now placing one hand on her breast and one between her legs.\n\n\"What's with you!\" she laughed. \"I haven't seen you like this since we fucked all around your aunt's place!\"\n\n\"I'm really horny. I've missed you all day.\"\n\n\"I've missed you too. I wish I didn't have this stupid exam on Monday.\"\n\n\"Forget about the exam,\" he said, pulling Ashley to standing. \"Just forget about it. Let's get loose for a bit. I promise it'll be quick.\"\n\n\"Promise?\"\n\n\"With all my heart.\"\n\n\"That's a pretty big promise.\"\n\n\"You know it,\" he said as he lifted her up, holding her ass and kissing her hard. He managed to kick the rolling chairs out of the way and place her on the desk behind hers, which was empty. Ashley held his face in her hands as their tongues twirled. Peter moved his hands around her back, underneath her shirt.\n\n\"Ooh!\" yelped Ashley when she reached for Peter's cock, feeling that it was already hard. She tugged at the waistband of his sweats playfully before pulling them down. His cock felt large and warm in her hands, as if it were its own living creature. She stroked him. Their kiss never broke. \n\nWanting to hold true to his word, Peter pulled off Ashley's leggings so quickly she didn't have time to react. Knowing she hadn't had time to get wet, he finally broke their kiss so he could lube up his cock with his saliva. As he did so, Ashley drooled on her hand and used it to rub her pussy.\n\n\"Gentle,\" she instructed as he aligned his dick with her vagina. As eager as he was, he complied and carefully pushed his hips forward. She wasn't as accepting as she normally was, which was expected, and he had trouble getting himself into her. She spat at their penetration twice, missing the first time but hitting his cock the second. He let her stroke his thick penis, spreading the saliva and keeping him pleasured.\n\nIt seemed as if time had almost slipped away when Ashley had finally widened enough to take his cock. She whimpered as he slowly slid into her, not quite bottoming out but coming close. He held her head in his hands, their foreheads touching and her blonde hair seeping through his fingers. As he began to fuck her, her eyes began to show to the desire that Peter's already had.\n\nOnce she was wet enough, Peter fucked her much harder. If anyone had been the surrounding classrooms, they would have heard Ashley's cries and the smacking of their skin. If they had investigated and peered through the doorway of 317, they would have seen the scene from behind the boy, the girl's legs wrapped around his ass, the two of them entwined in upright hardcore table sex.\n\nBut no one was around, and in retrospect the couple would consider themselves extremely lucky. Ashley had become quite loud, as Peter was getting rough. His horniness had taken over him. He grabbed Ashley's hair and held it tightly behind her head, keeping her face at a teasingly close distance to his. She wanted to kiss him, but he wouldn't let her, and that made her even wetter.\n\nSatisfied with his pace and position, Peter withdrew his cock so quickly from Ashley's pussy that she squealed at the sudden emptiness. He pulled her to standing and turned her around, pushing her to her elbows on the table. He swiftly reentered her and immediately fucked her at the same quick speed. As ripples coursed through her ass cheeks, he grabbed her breast in one hand and her hair in the other. She was completely at his mercy.\n\nThe sex with Julia was so hot that Peter wanted it to happen again. Semi-consciously, he wanted it with his mother. But Ashley was always available to him, and his mother was not ready, so he had to let his animal out here in the classroom.\n\nThey fucked so hard that Peter was going to cum soon, despite having cum twice within the past few hours. He grunted to let Ashley know that he was almost there, and she dropped to her knees, pumping his cock rapidly into her mouth. Peter's cum sprayed into her hot throat, Ashley happily taking every drop. As he was finished, she reached down and fingered herself, quickly orgasming a few seconds later. Through her quivering, she managed to keep her mouth around Peter's cock.\n\n\"Shiiiiit,\" he sighed, feeling weak in the knees but unable to take his eyes off of his girlfriend. When she reopened her eyes, she gazed up at him lovingly and stuck out her tongue. There was no white fluid to be seen.\n\nPeter lifted her onto the table and sat next to her. They both panted, holding each other closely. He kissed her forehead, the gentlest form of contact he had given her since arriving. She giggled and fixed her bra and top.\n\n\"You're an animal,\" she said. \"I love it.\"\n\n\"I don't even know what got into me.\"\n\n\"You were just horny. I was too, don't get me wrong. But I wasn't expecting THAT.\"\n\n\"Sorry if I wasn't gentle enough.\"\n\n\"You're gentle when you need to be.\"\n\nShe stood up and checked her wetness with her fingers. \"Damn,\" she sighed. She found a box of tissues in the front of the room and brought them over to their seat. Peter stood up too, and Ashley laughed.\n\n\"What?\"\n\nShe pointed to the table they had been sitting on, and he turned around. There were sweaty imprints of their butts, as well as droplets of various bodily fluids.\n\nPeter wiped off the table and floor (there were some disinfectant wipes in the back) while Ashley wiped herself as dry as she could. They kissed one more time before both sliding their pants back on. Peter's sweats failed to hide the slight bulge of his drained cock.\n\n\"Back to studying, I take it?\" he asked.\n\n\"Unfortunately, yes. I would love it if you would stay for a little, but not for too long. I won't be able to focus with you here.\"\n\n\"That's okay.\"\n\n\"Thank you for the brain break.\"\n\n\"Anytime, my darling.\"\n\nThey sat together at Ashley's paper-covered study table for about twenty minutes, during which they heard at least two people walk through the hall. They grinned at each other when a couple of faced peered into the room before quickly disappearing.\n\n\"They might be in my class,\" Ashley said. \"Good thing you got here earlier.\"\n\n\"Yeah. Or... maybe it would have been hot to get caught?'\n\n\"You don't want to get caught.\"\n\n\"Yeah, you're right. I'll get out of your hair now. Thanks for letting me visit.\"\n\nRather than giving a verbal reply, Ashly kissed him hard on the lips.\n\n\"Thank you for visiting,\" she said.\n\n***\n\nThe remainder of Peter's day was rather uneventful. When he arrived home, his mother welcomed him with her usual motherly love (Which was now stronger than ever). They watched some television and ordered pizza for dinner, but didn't do much other than kiss. Both of them were tired out from their adventures, although neither knew the details of the other's later afternoon.\n\nEarly the next morning, Peter made his routine visit to the gym. It was now Saturday, and the gym wasn't as crowded as usual. It was easier for him to focus on his lifting without women constantly admiring his body.\n\nHow that Saturday was about to unfold, he had no idea. But he had a feeling that it was going to be special. He was unable to describe why, and was not even fully conscious of the feeling, but on that day his chest was puffed and his expression content.\n\nHe returned home for breakfast and enjoyed the solace of the quiet house. Confident that his mother was going to take full advantage of her slumber, he took the opportunity to relax. The temperature had dropped even further than the previous day, and he missed the warmth. However, the coolness allowed him to wear a cozy set of sweats: an extra-large red hoodie and loose light gray pants.\n\nTime seemed to slow while he sat on the couch, absentmindedly watching the television and scrolling through social media on his phone, but he was alright with it. There was something about the morning that made him feel at peace.",
        "It was merely cloudy when he had returned from the gym, but after some time on the couch he heard a distant rumble. A light drizzle tapped at the windows. Within the next quarter hour or so the rain became heavy, and the thunder less distant. He would have loved to be woken up by the rain and thunder, but was committed to his fitness. \n\nHe had been texting Ashley throughout the morning and they established that she was going to spend the day studying and Peter was going to spend the day in his house. After a few minutes of conversation, he let her focus.\n\nBy the time Peter's mother had awoken and made her way downstairs, the storm had fully set in. Thick drops of rain knocked loudly against the windows. The thunder was more consistent, and sometimes shook the house.\n\nHis mother had also put on a cozy outfit. She wore a thick forest green sweater with sleeves that nearly went past her hands and navy blue pajama bottoms. Her hair was tied up in a loose bun. When she plopped next to Peter on the couch, he gawked a little.\n\n\"Good morning,\" she said with a smile, that beautiful perfect smile of hers.\n\n\"Good morning, mom. Ready for a lazy, stormy day?\"\n\n\"You betcha. Already eat?\"\n\n\"Yeah. Want me to make you something?\"\n\n\"No, thank you. I'll just have a yogurt with fruit in a few minutes.\"\n\nThey watched the television for a couple of minutes before she indeed got up and went to the kitchen. She returned quickly with a bowl of vanilla Greek yogurt and banana slices. Peter watched her take her time eating it, and every time she caught his gaze she giggled.\n\nWhen she finished her breakfast, Peter took her bowl to the kitchen and rinsed it for her. When he returned to the couch, she gave him a sweet kiss.\n\n\"So,\" he started, sitting back down. \"What do you want to do today?\"\n\n\"This is fine for now,\" she said, easing back into the cushions. \"Later, I thought we could take a nap.\"\n\n\"A nap?\"\n\n\"Yeah. In my bed.\"\n\nPeter was flaberghasted for a moment, his mother's coy eyes studying him.\n\n\"Ah.\"\n\n\"Are you okay with that?\"\n\n\"Oh yes, I'm very okay with that.\"\n\n\"Me too, baby. I'm ready for you.\"\n\n\"You keep talking like that and I'm not sure I can wait until later.\"\n\nHis mom moved closer to him and placed her arms around him, her hands caressing his face.\n\n\"I've been having trouble waiting too. But I've been told that waiting makes it more special.\"\n\n\"You were told- ah ha!\"\n\nHis face lit up with realization and his mother continued to smile at him.\n\n\"Aunt Julia has been playing you too, huh?\" he asked.\n\n\"Yep.\"\n\n\"So you held back because of her?\"\n\n\"Well, not at first. I really was nervous and hesitant for a while. It wasn't until we first kissed that I realized how right it felt to have you. I started talking to her more and more about how to proceed in the most gratifying way possible... and she filled me in with plenty of ideas.\"\n\n\"So that's what you were doing yesterday when I left? Talking?\"\n\n\"Not exactly.\"\n\nShe blushed and he laughed.\n\n\"No way! You and Aunt Julia? That's really hot, mom.\"\n\n\"Yeah, well... she's a very convincing woman.\"\n\n\"Trust me, I know.\"\n\nThey kissed, attacking each other's lips in a fury of smooches. Peter placed his hand on his mother's knee, but did not move it.\n\n\"It's okay,\" she whispered. Peter's heart raced. He swept his hand up her inner thigh, again stopping just before reaching her crotch. Instead of touching her most forbidden area, he raised his arm up and touched her breast. Even through her sweater, he could feel the perfect firmness and roundness that made his mother's chest. She sighed as he gently squeezed her- if he was at his roughest yesterday, today he was the opposite. One of his mother's hands fell down to his own thigh, and the proximity to his penis sent a shiver through him.\n\n\"Oh god, mom,\" he whimpered. \"I can't take it anymore! I need you now!\"\n\n\"Me too,\" she said breathlessly. A boom shook the house, and Peter picked up his mother and carried her upstairs like in a shot out of a romance movie. She giggled wildly from the moment she was lifted to the moment she was thrown on the master bed. Peter crawled up to her and she pulled his face into hers once again.\n\nThe rain continued to pound the house. Mother and son were on their way to crossing the line of incestual lovemaking. The room was naturally dim, except for the occasional flash that infiltrated through the window. The lovers were quickly becoming hot, and they began stripping their clothes while continuing to kiss. At the moment the final articles of clothing flew onto the floor, Peter kneeled back and observed his naked mother.\n\nIt was astonishing how similar her body was to Julia's. Her body was just as fit and curvy. Their breasts were nearly identical, except his mother's appeared sturdier and she had larger nipples. He glanced between her legs, despite the darkness, was able to see enough detail to acknowledge the difference in the shape of her pussy. Her labia were spread more outward than his aunt's. Another similarity that they shared was their preferred method of trimming their pubic hair, which were in the thin \"landing strip\" style.\n\nPeter's mother blushed at her exposure. She had already seen her son's body via the video, and partially during his masturbation, but seeing him fully bare up close was more erotic than she could have imagined. His cock had already grown close to its full size, and she felt slightly intimidated.\n\nAnother nearby thunder strike quaked the house. Peter's mother let her hair down and opened her arms for him. He lay on top of her, their kisses intensified by the feel of their naked bodies. Their lust soon took over any further hesitations, and she stroked his cock slowly while he caressed at her breasts. \n\n\"I want you inside of me, Peter,\" she whispered. \"Mommy wants you inside of her.\"\n\nThe word \"mommy\" sent a shiver down his spine and made his cock jump. His mom licked her fingers and used them to rub her pussy.\n\n\"I'm ready Peter.\"\n\n\"Me too, mom.\"\n\nShe spread her legs wide and held her son's cock at the correct angle. Peter thrusted his hips forward slowly and felt the warmth of his mother begin to surround him. Each millimeter of penetration pulled his heart closer and closer to hers. Her hands moved to his muscular back, calmly guiding him downward. Her face, on the other hand, expressed a mixture of desire and discomfort at his size. She was tight, but welcoming enough. He took his time, allowing her to adjust to each inch as needed.\n\nWhen he finally bottomed out, he felt more at home than he had ever felt before. That was it- The peak moment that his aunt had set them up for; the one he had always truly wanted. He held himself there, laying on top of her busty chest and breathing into her soft neck. How long they held this position, neither would later be able to say, but the rain did not stop.\n\n\"I love you, mom.\"\n\n\"I love you too, Peter. Now fuck your mother's pussy.\"\n\nAnd so it began. Peter pumped his cock in and out of his mother, continuing to lay on her in an affectionate embrace. Her hands gripped his back and her legs were wrapped around his butt. His face was in her neck, and he nibbled at it occasionally, but otherwise let the sex be as sincere and simple as possible. It was just mother and son, woman and man, committing an act of passionate and gentle intercourse. \n\nNeither had any desire to rush. The past few weeks had been building up to this moment, and they found it more meaningful than they had expected. This was lovemaking at its finest.\n\nHer pussy was hot and wet, and Peter slid in and out more easily than he anticipated. He kept his body pressed close to hers. The connection they shared was amazing. Neither spoke for several minutes; the only sounds that escaped either of their mouths were moans and whimpers.\n\n\"Oh mom,\" Peter involuntarily whispered, bringing both of their senses back to Earth and into the reality of what they were doing. His mother suddenly clamped down on him, her legs holding his body tight against hers. She quivered and expelled a flow of warm fluid around his penis. He held still and watched her face as she rode out her orgasm. Her expression was one of pure bliss.\n\nWhen her body relaxed, he began to thrust again, this time continuing to watch her face. She opened her eyes and moved her hands up to the back of his head. Her hazel eyes became locked on his blue ones, and again they forgot about all else in the world.\n\n\"Oh Peter,\" she moaned, \"please cum inside me. Cum inside mommy.\"\n\nHe normally would have asked a girl if she was sure when she said to finish inside of her, but he knew it was okay. They shared a deep understanding of each other. He hadn't felt close to cumming until now, for her request had accelerated his looming orgasm.\n\n\"Please!\"\n\n\"Oh fuck, mom!\" he cried as she again begged for a creampie. Quickly did his body become hot in a surge of testosterone. The pressure that had swiftly build up inside his cock and balls had released, and his sperm shot into the vagina that he had been conceived in. They both cried out in ecstasy as he held his cock deep inside of his mother.\n\nTheir moans were soon reduced to heavy breathing. When Peter's cock was emptied, he carefully collapsed on top of his mother. They lay there for a moment, his mother smooshed under his heavy body, her nipples pressed into his chest. \n\nAt last he withdrew and plopped next to her. They lay face up, panting and staring at each other. Peter briefly investigated her pussy and smiled incredulously at the sight of his cum oozing out of her. After several minutes of recovering, his mother kissed him on the cheek.\n\n\"That was beyond words, my sexy son.\"\n\n\"You don't need to say anything. I love you and I know how you feel. That was the most amazing sex I've ever experienced!\"\n\nShe laughed and threw herself over him, her hair flying in his face. He brushed it away and kissed her passionately. Some cum oozed onto his leg. Her leg brushed his cock as she draped it over him, and she gasped.\n\n\"You're still hard?\" she asked in awe.\n\n\"How can I not be when I'm in bed with a woman like you?\"\n\nShe laughed. \"Now that you've made love to me, I need you to fuck me.\"\n\n\"I can do that.\"\n\nPeter rolled his mother over and kneeled below her. He kissed her legs only a few times before hungrily eating her pussy.\n\n\"Oh, Peter- OH!\"\n\nShe threw her head back and gripped his hair, keeping his face in her crotch. Peter wouldn't have left it anyway. Once she got a slight hold of herself, she looked down at him and watched him bury his mouth in her pussy. His nose brushed her line of pubic hair and smooshed against her pelvis. Her juices flowed out of her, mixed with some of his semen. Peter didn't care for the saltiness of his own secretion, but he was too lost in the love of his mother to care. Yet he made an effort to avoid getting it in his mouth by focusing on her clit with his tongue and his fingers for her pussy.\n\n\"Yes! Right there, yes!\" she cried. Peter curled his fingers and hit her G-spot as he sucked her clitoris into his mouth. She came fast and hard into his face, and any of his cum that wasn't safely inside of her was then expelled. \n\n\"FUCKKKK!\"\n\nHe eased off as she shook, but did not withdraw. Instead, as soon as she showed the first sign of relaxation, he continued his conquest. Her squirms became more intentional as she recovered in attempt to grind her pussy against his tongue. He pumped his fingers so quickly that her fresh fluid was splashing him in his face.\n\nNot even two minutes later did she come again. She howled wildly and quivered, unable to breathe for a few seconds. This time, Peter backed up and watched his mother while continuing to finger fuck her. Her legs were vibrating and her fit abs were flexed. One of her hands was strongly gripping the pillow under her head and the other pinching her nipple. His fingering caused an eruption of liquid greater than Kirsten's to fly into his chest.\n\nHis mother recovered with a great gasp and let her limbs fall limp onto the bed for a moment. Peter crawled up and kissed her hard.\n\n\"Mmmm!\" she mumbled at the taste of her own juices on his face. She held his cheeks in his hands, not wanting to let him go. No match for his strength, however, she was unable to keep him from leaving her lips. Her disappointment was only brief, for he quickly pulled her body to the side of the bed and stood up in front of her. \n\nSoon his penis was once again penetrating her, aided by her incredible wetness. He grabbed her legs and rested them on his shoulders. She was totally at his mercy, and as he pounded her hard, she wildly searched for the right spot of the bedsheets to grab. Her eyes could not open, the pleasure was too great.\n\n\"FUCK FUCK FUCK FUCK!\" she wailed, with her brow scrunched and face flushed. Peter was releasing his inner animal again, and he had no words- only the primal desire to fuck his mother. Her cries faded in and out, the space filled in with an attempt to catch some oxygen.\n\nSatisfied with the missionary position, Peter withdrew again, so quickly that his mother jumped. He flipped her over onto her knees and held her ass under his cock before backing up. She looked over her shoulder and watched his pelvis make contact with her body once again, his cock deep inside of her.\n\n\"AHH-AHH-AHH-AHH-AHH-AHH...\" repeatedly escaped her mouth, in sync with his thrusts. She eventually fell onto her elbows, unable to hold herself up. Peter responded by grabbing her hair and forcefully pulling her up. She grabbed her tits and squeezed them, her upper body suspended in the air.\n\n\"Fuck yeah, mom,\" Peter grumbled. He pumped his cock nearly completely in and out of her, watching both his entire length penetrate her and her shapely body respond to it. Her body was arched, showing her sexy back muscles and making her ass look curvier than ever.\n\nHe lowered her to the bed and let go of her hair. She was now on her stomach, and had little time to react before her son planked over her, arms extended and cock still inside her pussy. He continued to fuck her hard, he ass jiggling at each moment of contact. Her arms gripped the sheets in front of her and her face was buried into the bedding, redder than her hair.\n\nFortunately, his endurance was nearly as high as his strength, so he was able to continue pounding her for several more minutes. However, he began to finally feel tired, as he had been doing most of the fucking. He thrusted into her several more times after the first sign of fatigue, then removed his cock from his mother and lay with his head on the pillow, cock up.\n\nPeter's mother shifted with him, and knelt at his legs. She took the tip of his large penis in her mouth, sensually pumping the shaft with both of her hands.\n\n\"Oh, fuck!\" he exclaimed at the sight of his mom's blowjob. Their eyes met and she winked. More of his cock entered her mouth, and one of her hands reached down to his balls. Drool leaked down from her mouth, quickly spread out by her twisting hand. \n\n\"Guess who taught your aunt how to deepthroat?\" she teased before pushing her mouth down on his cock. Despite his thickness, she seemed to take him even more easily than Julia had. Peter felt the tightness of her warm throat willingly accept his penis. She only gagged slightly as she approached the base.\n\n\"Fuck, mom!\" he cried as her nose touched his pelvis, her mouth wrapped completely around him. She gently massaged his balls with her fingers before pulling her head back up. Several thick lines of saliva connected her mouth to his cock through the air, and rather than wipe them away she returned for another go.\n\nShe happily deepthroated him several more times, surprising him with her skill. It appeared as though she didn't have a gag reflex at all. His cock was soaked in her saliva as she brought it out of her mouth one last time. Then she straddled him and impaled herself on his largeness.\n\n\"Fuuuuuck...\" she moaned as he filled up her insides once more. Taking the lead, she put her hands on her son's chest and began to bounce on his cock.\n\n\"Oh, Peter! You fill up mommy so well!\" she cried. He grunted in appreciation and grabbed her hips, more so feeling her shape than guiding her.\n\n\"You feel so fucking good, mom!\"\n\n\"So do you!\"\n\nAs she plunged herself on her son's cock, the sky let out another great boom. In most circumstances, a person might have cowered under their bedsheets. Yet Peter's mother continued to ride him, oblivious to the state of the weather. \n\nShe soon rotated her body around without letting his dick leave her pussy. He now held her waist from behind. Her hair bounced lightly on his face, but he didn't mind. A moment went by before he squeezed her magnificent tits, then reached over her leg and rubbed her clit as she rode him.\n\n\"Ooooooh!\" she moaned, grinding against him. She fell back and turned her head to kiss him, one of her hands wrapped around his head. He was back in control, thrusting upward into her and lightly fingering her clit. A small orgasm escaped her, causing her to shudder once again.\n\n\"I'm gonna cum, mom!\"\n\n\"Outside! I want to feel it on my skin!\"\n\nHe gave her a few more thrusts before exiting her. She reached down and slowly jerked him off as his semen shot up her belly. Peter grunted in pleasure while his mother moaned at the feeling of the warm liquid that was spraying her.\n\nAs he finished, his cock finally began to soften. His mother twirled off of him and caressed his limp penis. They kissed again, softly like time their lips first met. Then she nestled her head into his shoulder.\n\n\"That was incredible,\" she sighed. Her face and chest were rosy and she emitted the glow of a freshly-fucked woman. Peter kissed her forehead.\n\n\"I want to stay here with you all day,\" he said. She giggled.\n\n\"Me too. What time is it?\"\n\nPeter looked at the bedside clock. It read 11:54.\n\n\"It's about noon,\" he said. He shifted slightly to get more comfortable. \"Are you going to want to eat soon?\"\n\n\"I guess I am getting hungry,\" she admitted. \"And I also need more energy for later. Mommy needs more of your cock today.\"\n\n\"And I need more of mommy's pussy. But I need a break,\" he chuckled. \"Want me to make you a sandwich? I'll be quick.\"\n\n\"Yes, please!\"\n\nPeter hurried down to the kitchen, not bothering to put on any clothes. His mother lay patiently on the bed, naked and at peace. The storm had not let up, and the heavy rain added a layer of relaxation for the both of them.\n\nPeter returned about five minutes later with a plate containing two sandwiches, as well as two glasses of water. They sat in the near-darkness and consumed their fuel. When they had finished, she went to the bathroom while he brought the dishes back to the kitchen. He picked up his phone on the way back upstairs.\n\nBack in bed, Peter's mother was soon once again curled up beside him. They were under the blanket this time, cozy as ever. She had also tied her hair back into a loose bun, although it was perhaps even messier than before. They conversed occasionally, but mostly relaxed. \n\n\"There is one more thing I want to do today,\" she said about a half hour after they had eaten.\n\n\"What's that?\"\n\n\"I promised your aunt that she could join us after our first time. She was really eager to do so, and so am I. What do you think?\"\n\n\"Fuck yeah! That would be incredible!\" He kissed her on the lips, and then the neck. \"But I'm really enjoying our day in bed alone right now.\"\n\n\"Oh, I wasn't planning on having her come over until much later. I want you to myself at least two more times before I have to share you.\" He smiled at her words.\n\n\"Why don't I give her a call and ask her to bring dinner? That gives us several more hours alone.\"\n\n\"I like that. Give her a call now! But don't forget to tell your aunt how well you fucked your mother's pussy.\"",
        "Peter grinned and called Aunt Julia. She picked up after several rings.\n\n\"Peter!\" she said excitedly. \"How goes it?\"\n\n\"I think you probably know the answer, you mischievous sexy woman.\"\n\nShe laughed. \"Did you both enjoy it?\"\n\n\"Very much. She wants me to tell you that I fucked her well.\"\n\n\"Good to hear! I told you that you two were meant for each other. Just don't forget about me.\"\n\n\"That's why I'm calling! I'm inviting you over, but not until dinner. We want some more time alone first. Would you also mind bringing pizza for dinner?\"\n\n\"Sure! That works out because your uncle will be attending an employee only gathering for work. If he were home, I'm not sure I'd be able to slip away.\"\n\n\"Great!\"\n\n\"What kind of pizza do you want?\"\n\n\"What kind of pizza?\" he repeated to his mother, who was resting her head on the pillow and staring at him.\n\n\"Just cheese,\" she said.\n\n\"One large cheese is fine,\" he told his aunt. \"Thanks a lot. See you later!\"\n\n\"Bye Peter!\"\n\nHe hung up and turned to his mother, kissing her tenderly. This progressed into a series of passionate French kisses, and later another round of sex. Peter fucked his mother doggystyle again, less roughly but no less lovingly. The rain had let up slightly, and her moans were perceptually louder than earlier. After ten minutes or so, he slowed down and brought her up to standing off of the bed.\n\n\"I love the rain,\" he stated. She nodded in agreement, still slightly disoriented from his fucking.\n\nHe picked her up and carried her over to the window. Her head was above his and her legs and arms wrapped around him like a spider. He pressed her back against the window, and she jumped at the coldness. Then, he lowered her onto his cock and fucked her pinned against the glass.\n\nOnly several minutes passed before he came inside of her. As his semen shot into her womanhood, a light thunder vibrated the window. She came as well, clamping down on his cock and tightening her hold on his body.\n\nOnce again satisfied, they returned to the bed and dozed off for a brief nap. An hour later, Peter was awoken by his mother's warm mouth. She engulfed his growing penis in a slow and affectionate blowjob. They soon became lost in sex once again, with her riding him in as many ways as possible before he finally came a fourth time. His load was significantly less powerful, but she made a sexy show of having it cover much of her face as she jerked him off to finish.\n\nThey spent the remainder of the afternoon and early evening cuddling. Peter's mother was as true to her word as ever, having him two more times but no more. She was saving him for later.\n\n***\n\nJulia arrived with the pizza around 6:00. She forgot an umbrella, and had been rained on during her walk to and from the pizza place, and again from her car to Peter's front door. Her attitude was rekindled when she was greeted by a naked Beth, who kindly welcomed her inside.\n\n\"How long has it been since you've worn clothes?\" Julia asked her sister.\n\n\"Something like nine hours. Come one in, we're hungry!\"\n\n\"I'm sure you are,\" Julia chuckled. Peter's mother called him downstairs and all three met in the kitchen.\n\n\"Your clothes are wet,\" Peter stated when he saw his aunt. She laughed again.\n\n\"I guess I should take them off and let them dry, huh?\"\n\nPeter and his mother needn't have nodded, for Julia quickly stripped off her jeans and rain jacket, followed by her sweater and undergarments. They all stood naked in the kitchen, smiling at each other.\n\n\"Some family, aren't we?\" Beth joked. They all laughed and dug into the pizza. Beth poured them all some wine, which she retrieved from the cabinet. Both Peter and Julia had deeply admired her naked body as she reached up to grab the bottle. \n\n\"Remember when this was about studying?\" Peter said through chews.\n\n\"I'd say you're becoming very fluent in anatomy,\" Julia replied before gulping down some wine.\n\n\"You're the reason for all of this Julia,\" stated Beth. \"Thank you.\"\n\nJulia blushed. \"I suppose our taboo works for us. I mean, it's not like we're having babies, but still. Not all mothers would have been as accepting of my actions.\"\n\n\"I'm thankful for both of you,\" Peter said, raising his glass. \"To incest!\"\n\n\"To incest!\" the women repeated, giggling. They clanked their glasses together and took a sip of their drinks.\n\nLater, with the pizza and wine in their bellies, they sat on the couch and digested. By 7:00, following a casual nude conversation, they moved up to the master bedroom. They stood around Beth's bed for a moment.\n\n\"Before I join you two,\" Julia said, \"I want to watch. I want to see the son fuck his mother.\"\n\nPeter and his mother shrugged and sat on the edge of the bed. Julia positioned herself upright at the pillows, and as Peter and his mother began kissing, she began to slowly rub her pussy.\n\n\"God, this is hot,\" she muttered as she masturbated. Beth, meanwhile, was once again handling Peter's cock. It took a little more effort to get it hard because he was so spent, but they were both determined. For several minutes it was merely in a semi-erect state, and she broke the kiss to kneel in front of the bed. She placed her large breasts around his cock and spit between them for lubrication. Then, she began titfucking her son, and he quickly reached hardness.\n\nJulia moved slightly to the side of the bed to get a better view. Peter's cock was large enough that his mother could easily suck his tip while fucking him with her tits. When he was hard enough and lubed enough, she pushed him onto the bed and stood up.\n\nWanting to give her sister a good view, she turned around and backed into him, her legs together and hands on his thighs. She was tighter like this, but still able to ease herself onto Peter's cock once more, her pussy lips looking thicker than normal as they engulfed his shaft. She and Julia moaned simultaneously upon penetration; the latter was more vigorously rubbing herself now.\n\nBeth bounced on her son's hard cock, her curvy ass shaking each time it impacted his pelvis. She rode his entire length with each squad, the sensations and visuals of which were causing Peter to crunch his face. \n\n\"Fuck yeah, mom,\" he mumbled, more than enjoying her riding. She beamed back at him.\n\nThe rain was easing off now, reduced to making a slight patter on the windows. Peter began thrusting up in harmony with his mother's bounces. She moaned even louder, and her hair tie finally fell out, causing a splash of auburn waves to fall down her back.\n\nPeter grabbed her hair and pulled it back, now taking full control of their fucking. Her body stood frozen in a squat while he pounded into her, his free arm on the bed for support. Neither were aware of Julia's self-produced orgasm.\n\n\"Yes Peter! Fuck mommy, just like that!\" Beth shouted, and he continued to do so for several minutes, until his supporting arm begged for rest. Instead of slowing down, he stopped and stood up. He turned his mother around and went behind her- they were now facing Julia. He bent her over and began to fuck her again in standing doggystyle form.\n\n\"Oh!\" exclaimed Julia as her sister met her eyes. Peter also watched his aunt, turned on by the presence of the observer.\n\nBeth's face was getting red again. Her breasts bounced underneath her shapely body as she was rocked back and forth by her son's thrusts. Peter smacked her ass, leaving a slight handprint that appeared after a few seconds. She cried out upon impact, never taking her eyes off of Julia.\n\nPeter's balls slapped against his mother's pussy, and her next orgasm was building up inside of her. He slapped her ass three more times in succession, the third of which finally sent her overboard. She came hard on his cock, and her expulsion of juices forced himself to withdraw.\n\nHis mother fell forward on the bed, exhausted. He leaned over her, ready for more, when she placed a hand on his chest.\n\n\"I hate to say it,\" she said, \"but I'm exhausted. I haven't fucked a man in years and I'm feeling worn out.\"\n\n\"Let me finish him off for you,\" Julia chimed in, and Beth smiled and nodded. While his mother slowly moved up to the pillows, Peter gladly crawled over to his aunt. Julia hadn't moved, and she remained laying with her head on the pillow and her legs spread as Peter slapped his cock on her pussy.\n\n\"Fuck!\" she cried at the tease, grabbing his penis and aligning it with her opening. He thrusted forward- a little too fast, as Julia hadn't been fucked yet- and met some unexpected resistance.\n\n\"Woah there, cowboy,\" she said, wincing. \"Give me a minute to get the cave open.\"\n\nShe was already wet from her masturbation, but it still took a second for her to fully accept his cock. Once she was ready, Peter thrusted in and out of her at full speed. She wrapped her arms around him and moaned loudly. Beth watched her son fuck her sister from only a few inches away, too drained to even touch herself.\n\nPeter's cock was a little sore at this point, but he was still going to cum at his current speed. Not bothering to waste time changing positions, he fucked Aunt Julia nonstop from on top for at least ten minutes. When he finally felt himself beginning to blow, he grunted loudly as a warning.\n\n\"Fill me up!\" Julia begged, and Peter did so willingly- his cum surged inside of her as he slowed down, his muscles twitching and his pelvis touching hers.\n\n\"Ahh,\" whispered his mother, who hadn't taken her eyes off of them. Peter looked at her, and she smiled wearily. As the last seep of his seed exited his penis, he quickly softened and withdrew himself. Julia kissed him hard on the mouth.\n\n\"I love you,\" she said, holding his face in her hands.\n\n\"I love you too, Aunt Julia,\" said Peter. He slid between the women, his mother scooting over to make room. \"And I love you too, mom.\"\n\n\"I love you, my son. I suppose there's room in your big heart to love two women, is there?\"\n\n\"Three women. I love Ashley too,\" he declared. Julia didn't react, but his mother's eyes widened slightly.\n\n\"Is that so?\"\n\n\"Don't worry mom. There will always be enough room in my heart for you.\"\n\nHe put his arms around his female companions and they snuggled in, Julia covering them with the blanket. They were silent, simply enjoying each other's naked presence. Beth drifted off to sleep first, indicated by the slowing of her breathing. Julia was soon to follow, and Peter only remembered an instant of having two beautiful sleeping women in his arms before he too was in a slumber.\n\n***\n\nThe weather had cleared when Peter woke up, a feeling of warmth encompassing his body. The origin of the warmth was located in his pelvis, but it was too dark to see what was going on. At some point, the curtains had been closed to prevent the inevitable sunlight of the following morning.\n\nThe sole, small amount of light came from the clock, which read 2:12 AM. Peter grumbled, somewhat involuntarily, before suddenly realizing what was happening: He was receiving a double blowjob from his mother and aunt.\n\n\"Fuck,\" he whispered. Rather than reach forward and risk poking their eyes out, he focused on the physical feelings they were giving him. The mouth on the left (likely his aunt, as that was the side she had slept on) was bobbing up and down on his tip, stopping only occasionally stopping to give his balls a gentle suck. The mouth on the right (likely his mother, by the same logic) had mainly been kissing around the circumference of his shaft, only to take the tip when the other mouth had gone to the balls. \n\nOne of them had giggled when they realized Peter was awake. Rather than converse, he let the women do what they pleased with him. How long they had been blowing him, he did not know, and he didn't care.\n\nThe women lined up their mouths along either side of his shaft and quickly moved them up and down in unison. Peter already felt like he was going to cum soon. He grunted, and they slowed their pace, eventually resolving to simply kissing his cock all over.\n\nAt this hour of the night, not much went through Peter's thoughts- in fact, he felt like he was in a dream, and his body felt light. He laid there with his eyes closed, feeling the wet mouths explore his dick. Eventually, one of them took him in the throat and pushed down. She gagged near the end of her deepthroat, and Peter interpreted that it was his aunt.\n\nJulia withdrew the long cock from her mouth and handed it to Beth, who then took it in her throat without gagging. The moment she reached his base, Julia leaned under her and sucked his balls. Within seconds, a feeling of warmth surged through Peter's body. His cock exploded into his mother's throat, and she backed up slightly so that she could taste it. His aunt switched from sucking his balls to licking them.\n\nWhen he had finished unloading his cum into his mother's mouth, he fell asleep almost immediately. When he woke up next, it was 8:47 AM, and he had to urinate very badly.\n\nAs he shifted in bed, he noticed both his mother and aunt sleeping serenely on either side of him. Not wanting to wake them, he slid out of the blanket and down the bed as softly as he could, but bumped his mother's leg just before he was in the clear. She stirred and smiled at him, only opening her eyes for a moment before closing them again.\n\nPeter went to the bathroom and, after having woken up a little, realized how sticky his skin was. Probably from a combination of both sweat and sexual fluids. He looked in the mirror after he washed his face. The same young, muscular blonde boy looked right back at him. He felt good about his life.\n\nBack in the bedroom, he checked his phone to see if he had any messages from Ashley, which he indeed did. First, however, he checked one that he had received from Uncle Dave from about one in the morning.\n\n'Hey Peter, Is Julia at your place? I came home late and didn't see her. Figured she was still with you and your mom, but just making sure.'\n\nHe smiled, both in admiring his uncle's acknowledgement and at the thought of what his wife was doing with them. He replied: 'She's here. Stayed up really late watching a movie and fell asleep on the couch. She'll be home soon.'\n\nNext he checked Ashley's message, which was what he had expected to receive at the end of the night.\n\n'I haven't heard from you so I assume you're busy hanging with your mom. Just wanted to say goodnight! Let me know how your day was :) Love you!'\n\nBefore replying, Peter walked over to the window and slightly drew them. The sun was out amidst some small clouds and the streets was damp. He turned to the bed and appreciatively studied the two sleeping women. His mother was on her side, the blanket around her midsection, her breasts squeezed between her arms and her hair draping over her face. Aunt Julia was on her back, fast asleep with her head to the side and one arm over her stomach. Her side of the blanket was thrown down to her legs, and Peter admired her large round breasts and sexy crotch. \n\nHe stared for a minute or so before finally replying to Ashley. He could not reveal his incestual relationships by any means, but felt that his Saturday was worth sharing to some extent. This is what he said:\n\n'Good morning! Had a wonderful and relaxing day in the house with my mom and aunt watching some movies. We certainly weren't studying hard like you were, that's for sure.'"
    ],
    "authorname": "HotAndFun21",
    "tags": [
        "incest",
        "taboo"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/studying-hard-ch-03"
}