{
    "title": "Celestial Wars Ch. 02",
    "pages": [
        "Here we are again.\n\nThis story is the direct sequel to \"Celestial Wars Ch. 01\" and should not be read without reading that first.\n\nThis is the second of three parts.\n\nMiddles are curious things. Middles are written to bring the reader from an interesting beginning, to an exciting ending. This means middles are often overlooked, even though they make up the bones of a story. Unfortunately, this story is all middle.\n\nIn lieu of some emails that I continue to receive, I feel obligated to warn you gentle reader, that this story does not immediately launch into the sex...however, I feel that if you've stuck with me until now, you know that already.\n\nAs always, your comments, emails and your votes mean the world to me...so thanks.\n\nNow, come walk the Noble path with me...\n\n-Noble Truth\n\nChapter 7\n\nTruth Telling\n\nThe Fourth Sphere of Heaven is a glorious training ground. Sounds of virtuous battle ring joyfully throughout its verdant hills. High Legionnaire Dardihel is the Lord of this Sphere, by right of skill and loyalty. ~Alexander Morningstar's Celestial Matters\n\n-Alarial-\n\nWith a wan smile, Master's beautiful dark countenance faded away. He took his dream with him. The bed of black silk gave way to expansive darkness.\n\nFor a time I floated upon this sea of nothing...adrift...like a lost ship on unfamiliar waters.\n\nIt was altogether peaceful... and altogether lonesome.\n\nMy mind gently tumbled over stray thoughts and flashes of memory.\n\nThe warmth of Sister Maria's hands was suddenly on my face. She was smiling in that way that made her eyes crinkle at the sides. Then she was gone and the Mother of the Abbey was showing me to the door. She begged me to take my vows. When I didn't, it was to the streets for me.\n\nMemory sparked again, and my nose was filled with the stink of the Parisian gutter. An old tavern keeper let me wash his dishes for a bent copper every night. Two coppers could buy half a loaf of bread.\n\nA man approached me one night after the dishes were done. His breath reeked of garlic and stale wine, and what little teeth he had were browned and rotting. He offered me five silvers to 'stick me,' as he called it.\n\nThe next day I bought a dress with my new money and knocked on all the doors of all the Parisian brothels I could find. Eventually, the Rosy Garter took me in.\n\nThe images faded back into the swelling blackness. Thankfully, no more followed.\n\n***\n\nMy body returned to me slowly... or perhaps more accurately, I returned to it.\n\nIt began with a tingling in my limbs, and then a feeling of being warm...much too warm.\n\nI opened my eyes blearily. A dying campfire greeted my visage. Glowing white embers gave off half-hearted smoke as they cooled in the breeze of the forest. In the sky, the purple hues of twilight were giving way to the pink and orange of a new dawn.\n\nA blanket was wrapped tightly around my body restricting my arms, causing the uncomfortable warmth that had roused me into wakefulness.\n\nI sat up, and after an embarrassing amount of effort, I managed to slip from the blanket's grasp.\n\nThe cool morning washed over my body, and I sighed.\n\nI froze.\n\nWhat had happened? I thought suddenly. The woman, what happened to that strange woman?\n\nThe last thing I remembered was being handed that teacup. My dream with Master had made it slip my mind for a moment.\n\nWere we still in danger? I glanced about our little camp.\n\nBlackened splotches of grass dotted the clearing around the well. My nose twitched. There was an odor in the air that smelled familiar.\n\nMagic...\n\nTwo forms lay about the fire, shrouded in the long shadows of the dawn.\n\nDaniel lay perfectly still... his breath was even... and a small smile played about the edges of his face. His rusted sword rested on his belly. I sniffed the air... the smell of magic was emanating from his blade.\n\nI was about to move in closer and look at the strange sword when movement from the second form distracted me.\n\nA low-pitched groan hissed from under the rough blanket. That was Jon's voice. There was no mistaking the pain in that sound. I rushed to him.\n\nHis forehead was beaded with sweat.\n\nWith fumbling hands, I put my palm over his forehead. He had a fever like none I had ever felt.\n\nHe cracked one eye open and gave me an unfocused stare.\n\n\"Jon!\" I whispered. \"What's wrong with you? Are you sick?\"\n\nThe butler's teeth were clattering together as he convulsed beneath his coverings. I tore the bedding from his body with strength I didn't know I had. Underneath, Jon lay in a tattered shirt. Burn marks glistened on his shoulder... broken only by red, angry wounds that oozed with green and white puss.\n\n\"Wound...\" he managed to stutter. \"Not healing, forgot about... the ring.\"\n\nHow was he wounded? Did they fight the strange lady? How had a woman living alone in the woods managed to injure a five-hundred-year-old swordsman?\n\n\"What do I need to do, Jon?\" I whispered.\n\nJon wheezed for a brief moment. He did so quietly, biting his lip the entire time. We both intuitively knew that we shouldn't wake Daniel.\n\n\"You're going to have to cut my finger off, Maria,\" he said, once the episode had passed. \"In my boot there is a knife... should be sharp enough for the job.\"\n\nWith his other foot aiding him, Jon kicked off his right boot and then lay still upon the ground. \"Hurry.\"\n\nDeep breaths, Maria, I thought to myself. Do what must be done.\n\nBut deep breaths didn't come, no matter how hard my lungs called to them. All I managed were shallow gasps and frantic fingers. The knife slid out of the boot easily into my trembling hand.\n\nI removed it from the sheath.\n\nA wicked edge caught the dawn's light... a blade for killing more than eating.\n\nJon extended his hand. The silver ring on his finger was smoking. Every other moment it would spark with red magic.\n\n\"My immortality is trying to heal me... but it is trapped... hindered by the ring.\"\n\nHis kind eyes met mine as I sat there too frozen to move.\n\nHe smiled lightly. \"Just imagine I have the rot in my finger, Maria. The affected limb must be cut off, so the rest of the body may be saved. Be brave.\"\n\nI nodded once.\n\nWith steadier hands, I took him by the wrist and set his hand palm up upon the grassy ground.\n\n\"Curl all your fingers but the ring finger, Jon,\" I whispered, trying to be soothing.\n\nHe complied, closing his eyes tight and turning his head away.\n\n\"Be brave with me, Jon.\"\n\nHe gave a dark chuckle.\n\nThe knife cut through the bone and sinew easily. Dark red blood coated the flat of the blade... and then the deed was done.\n\nJon jerked his hand away, cradling his maimed limb to his chest.\n\nThe finger and the ring remained on the ground. The ring began to glow brightly. A small flash and crack echoed through the clearing. When the light cleared, the ring sat nestled in a bed of ashes.\n\n\"What was that?\" cried Daniel from the other side of camp.\n\nI scooped the ring out of the ashes and slipped it into my shoe.\n\n\"I don't know,\" I called out to the Monster Hunter.\n\nDaniel climbed to his feet from the ground and twisted his back. \"Nothing like sleeping on the ground to make a miserable morning,\" he said with a winsome grin.\n\nJon groaned. I moved to cover him with more blankets.\n\n\"What's wrong with him?\"\n\n\"The wound he took yesterday is troubling him,\" I said quickly. \"You might have to drive the carriage today.\"\n\nDaniel shrugged. \"I know some herbcraft. I could maybe take a look at him.\"\n\nI shook my head. \"He said he'd be fine... though you might have to carry him to the carriage.\"\n\nDaniel smiled widely. \"Carry him yourself, Half-Angel. I know you can.\"\n\n***\n\n-Daniel-\n\nThe look on her face was priceless. Her silver eyes widened in shock before rapidly narrowing into cold suspicion.\n\nShe opened her mouth and gasped. A small wheeze escaped her throat, like the rattle of a dying man, but nothing more.\n\nI raised a brow. \"Trying to lie to me will be quite difficult, Aethling,\" I said soothingly. \"I don't mean you any harm. You are not a monster that I'm hunting.\"\n\nI didn't mean her any direct harm. Just her lover.\n\nThis pale and shaking blonde had not yet mastered the art of half-truths and unsaid omissions. She had tried to lie to me outright, and the words had died before they could be uttered. This is how it has always been for those of the Light.\n\nSlowly, Maria gathered herself, and nodded. \"Yes, I suppose it was foolish to think I could hide that I am a monster from a monster hunter.\"\n\nI blinked. That was shocking. This heavenly creature referred to herself as a monster.\n\nYou must understand, Daniel. I suspect that Maria has recently been awakened, Vraiel whispered in my head. She thinks she is a monster because she has been human until now.\n\nI resisted the urge to shake my head in front of Maria. Instead, I offered a small, humble smile. \"It is beneficial to my job to be able to recognize supernatural entities,\" I said softly. \"But don't refer to yourself as a monster, Maria, because it's not true.\"\n\nThe mistrust on Maria's face cleared slightly, and she let out a slow breath. \"I guess I can carry him then, Monsieur Daniel, though I'm afraid I don't know how to drive a carriage.\"\n\nWhy would such a sweet creature align herself with such evil?\n\nI gave a low bow. \"I believe I can be of service in that regard, my lady.\"\n\n***\n\nThe sun was just breaking over the surrounding trees by the time we set off.\n\nJon was safely stowed in the back and Maria and I sat upon the driver's perch. Silently, we watched the north-bound road disappear under the horse's hooves. The reigns dangled loosely in my grip; the steeds in front of me required almost no direction.\n\nI can detect a whiff of magic through the wood of the carriage, Vraiel whispered in my ear.\n\nI know, I replied silently.\n\nIt smells exactly like your demonic core's magic. It has the same stink and tenor. Like a man with bad breath, whispering sins in your ear.\n\nI stifled a small grin. I had no idea I smelt that badly.\n\nHumor aside, Daniel, we must assume Devnikolus has granted this man immortality, Vraiel said.\n\nBut how would he have won the duel? I asked. He's just a human.\n\nVraiel didn't respond, and I knew that it was because he was still turning his theory around in his mind.\n\nMaria stirred next to me and leaned back against the driver's bench.\n\n\"Not very comfortable, is it?\" I asked with a forced smile.\n\nShe forced a smile of her own. It oozed a sticky, barbed sweetness. \"Not as uncomfortable as being visited by Pierre the Giant, one of my old regulars.\"\n\nI didn't understand the reference, but five hundred years of being a man insisted that I shut up.\n\n***\n\nSalt hung in the air.\n\nAt first it was subtle, like a taste at the back of the throat, a tingle on the lips. Then it grew stronger, and it filled my nose with its acrid, tangy presence.\n\nI smiled.\n\nWe were drawing closer to the sea. Our journey was nearing an end. An hour later, the smell of salt was joined by the low din of the breaking waves, and for a moment, I was back on The Jezebel sailing toward the continent and the Holy Land.\n\nThe port town bustled with the natural restlessness of humans. The frantic activity was undercut with the slight edge of panic of men and women who didn't quite know where their next meal would come from.\n\nFish guts and human sweat were the odors of the docks. A small dirt road skirted the small town by half a league, allowing us to lead our carriage directly to the waterfront.\n\nThree small ships moored at port this morning bobbing gracefully in the afternoon's calm waters.\n\nEyes followed Maria and me as our carriage rolled to a halt.\n\n\"We should find a place to sell our carriage and horses before we book passage,\" I said to Maria as I helped her down from the driver's perch.\n\n\"Perhaps,\" she said, her brilliant silver eyes peering into mine before darting to the carriage. \"I'm going to go check on Jon,\" she said after a pause. \"He will hopefully know what to do.\"\n\n-Alarial-\n\nI left Daniel to stand with the team of horses and nervously approached the carriage.\n\nThroughout the entire drive, the intoxicating smell of Master's magic had been drifting from Jon's resting place. My body tingled slightly and tightened. All it took was a hint of his presence and I longed to both whimper and worship him.\n\nBefore my hand even grasped the handle of the carriage door, it turned. Jon stepped out looking hale and hearty.\n\nHe treated me to his full, mischievous smile, his brown eyes twinkling.\n\n\"Jon!\" I said. I flung my arms around the manservant before he could even speak.\n\nHe chuckled lightly and patted me on the back.\n\nI drew away, unable to stop grinning.\n\n***\n\nJon refused to let Daniel sell the carriage.\n\n\"But it makes no sense!\" Daniel said, still shaking his head in confusion. \"These horses alone could pay for our fare on the most regal of ships.\"\n\nJon dangled the jewelry pouch on his fingers. \"I assure you, Master Monster Hunter, that the price of voyage will be no obstacle. Now, I must return the carriage to its resting place.\" Jon turned and whispered into the lead horse's ear. The black stallion nickered as if in understanding.\n\nSuddenly, the carriage lurched into motion as the team of horses galloped away along the earth-packed road. Daniel watched silently as they turned and disappeared into the maw of the forest.\n\nI smiled lightly at Daniel's expression. I patted him on the back gently. \"I've had to get used to these sorts of things. You'll figure it out eventually.\"\n\nHis face turned down into a scowl. \"Talking to a Monster Hunter like he's green behind the ears... really,\" he muttered as he shook his head.\n\nJon cast his gaze about the moored ships and picked out the biggest one. \"If you two would excuse me, I'm off to have a chat with the captain of that lovely vessel.\"\n\nDaniel and I watched the butler's retreating form and sighed.\n\nWe looked around for a place to wait.\n\n***\n\nThe ship was called the Adrienne.\n\nThe captain's name was Adrien.\n\nThe latter was a fat, squat man with beady eyes and a beard that looked like it was made of rat's fur.\n\n\"This man has been kind enough to make room for us on his vessel,\" Jon said as he gestured to the captain.\n\nAdrien bowed as much as his stomach would allow. \"It is an absolute pleasure to make your acquaintance, friends,\" he said in a surprisingly articulate and cultured voice. \"I know my business and these waters like the birds know the sky. Your journey will be a pleasant one.\"\n\nThe sailors around us scurried about, tying knots and securing barrels. They would pause briefly to stare at us through slitted eyes.\n\n\"Thank you, Monsieur,\" Jon said smoothly. \"As agreed, here is half now.\" Jon poured six golden coins into the Captain's outstretched hands. The large man smiled. He gestured to a man standing nearby. \"First mate Enzo will show you down to the guest quarters.\"\n\nDaniel edged up next to Jon. \"Are you sure about this, Jon?\" Daniel whispered as he glanced around at the rugged crew members. \"They seem as likely to feed us to the waves as carry us over them.\"\n\nJon just smiled. \"I've made this trip more times than you'd think, Daniel,\" Jon said. \"I'll warm the crew to us after we've been settled.\"\n\nI personally shared Daniel's opinion. Their eyes crawled over me like hungry insects. It took all my willpower not to cross my arms over my breasts. A sea breeze blew some of my blond locks in front of my face. I decided it would be best not to adjust my hair.\n\n\"Right this way,\" said first mate Enzo.\n\nThe first mate didn't look quite as intimidating as the rest of the men. He had a shaved head with a scar on it, but his eyes were kind.\n\nWe followed him down into the bowels of the ship, to a small room underneath the foredeck. A single lantern swung unlit on an iron chain.\n\n\"This is all the room we have for guests, I'm afraid,\" Enzo said, sounding slightly apologetic.\n\nThe room was no bigger than a generous broom closet. We would be sleeping right on top of each other.\n\nI had been hoping for some privacy with Jon. I needed to let him know that Daniel knew about my true nature. There was also the matter of Jon's missing finger. Daniel hadn't commented yet, but he had sharp eyes.\n\n\"Thank you very much, first mate,\" Jon said cheerily. \"We'll be up on deck to acclimate ourselves once we've shoved off from shore.\"\n\nEnzo stiffened. \"I'd be happy to show you to the mess and tell you when Cook will have food set aside for you... but it would be best for everyone if you avoided the crew. We picked up a rough group of lads in the English ports this summer.\"\n\n\"Don't worry about us,\" Jon said as he waved Enzo out the door.\n\nThe first mate looked confused, but withdrew without comment. His eyes lingered on me as he shut the door. I was a woman on a ship full of men. I could feel the heat of their desire beating at me.\n\n***\n\n-Daniel-\n\nMaria's eyes darted back and forth between Jon and myself. She looked nervous, like a whore who knows she's poxed.\n\nBut I didn't detect any fear directed at me. My revelation that I knew her secret might have rattled her, but she still trusted me. It must be all the crew members.\n\nShe probably wants to tell Jon that you know she's an Aethling, Vraiel whispered.\n\nI smiled to myself. Our little party was so full up of lies and half-truths you could bathe in them.\n\nI was traveling with an immortal and a half-Angel, and we were on our merry way to see their foul master.\n\nThey will sing songs of our victory.\n\nChapter 8\n\nNo Return\n\nOnly HE can force an Angel to enter Hell. Once a being of the Light has walked within the Halls of the Damned, there is no saving them. The Dark always keeps those who embrace it.\n\n-Devnik-\n\nHer breath went out slowly... and with it came a whisper.\n\n\"So good...\"\n\nThe words were soft and muffled... and they were lead-heavy and full of a woman's emotions. The sound of it was utterly foreign to me. I didn't understand it... not even a sliver.\n\nI drew her closer and softly trailed the pad of my thumb across her temple. The hot tips of her breasts lightly brushed against my stomach. I was about to say something... most likely words full of vitriol and dark promises... but she shifted lightly against me, and I knew she slept.\n\nI collapsed us into formless Darkness and pulled our joined embrace through the rock of my underground room. We materialized in the master bedroom. The faint glow of sunset was visible from the windows, but direct daylight never found its way into this room.\n\nCariel spilled out of my hands and onto the bed like she was boneless. Her red hair fanned out upon my black silk sheets as her head fell to one side. I couldn't help but follow her pale jaw line with my eyes until it ended at her full lips, still moist from our joining.\n\nMy gaze wandered further.\n\nHer sex was still slick and red with arousal. She looked strangely wanton as she lay naked upon my bed. Like a creature made for nothing but soft kisses and rough hands.\n\nI had just taken my pleasure, and still she drew me.\n\nBut it was not time for that now. The last time I had seen Orias, he had said he would call on me this night. I needed to be kept abreast of the latest news. I needed to know if I was properly baiting the trap.\n\nWith a gentle hand, I pulled the sheets out from under the bed at the sides and wrapped them around the sleeping angel. I tucked the silk in underneath her and stepped back. She was swaddled like a babe.",
        "She looked innocent and at peace. Nothing but the glittering collar clutching at her neck suggested that she was anything but a young girl at rest.\n\nThe room darkened as the sun's light died on the horizon.\n\nI drew myself up and flexed my magic. Life and power thudded through me. I was full up on this sweet girl's lifeblood, and the strength of it seeped from my skin.\n\nIt was time to go out and play.\n\n***\n\nThe night greeted me like an old friend as I made my way down my garden path. Shadows swirled around me, and the air smelled damp and deep and wonderful.\n\nFlowers spiraled out of the ground between old and twisted tree roots. My magic had long ago claimed this place. My garden looked wild and ancient. It was beautiful to me, and I had cultivated its creation carefully.\n\nBeauty is everything after all.\n\nI was picking a violet when I felt him arrive.\n\nThe air dropped in temperature, and I felt the wisps of his power sliding through the air. Red sparks flashed briefly before they melded themselves together.\n\nOrias smiled grimly at me and bowed. \"Much has happened, Lord Devnikolus,\" he said formally.\n\nFor a moment I was shocked. Orias was wearing the full robes of his station and standard. A black tunic with a golden fringe clung to his slender form. Woven within the fabric was his standard, three stylized stars arranged in a half circle.\n\nI nodded. \"Let's do this properly then, Lord Orias.\"\n\n***\n\nMy magic conjured up some wrought iron garden chairs and a tea table to match. Using the rend in creation that I often grasped my sword from, I pulled up a stoppered vial of blood.\n\nOrias held out his hand for the bottle and I handed it to him. Deep purple liquid sloshed slightly as Orias examined the delicacy.\n\n\"Fae blood,\" Orias said with barely concealed delight. \"My favorite.\"\n\nI inclined my head slightly, waiting for him to say the words.\n\n\"Your offer is most acceptable, brother,\" Orias said.\n\n\"Then please,\" I said warmly, \"avail yourself of my hospitality, and my table.\"\n\nWe both sat, having satisfied a ritual as old as evil.\n\nMy flesh tingled as I felt ripples of Dark magic emanate from our completed formality.\n\nOrias flicked his fingers and two obsidian goblets appeared. With a lazy hand, he poured the thick purple blood into my cup and handed it to me. Then he filled his own.\n\nWe both drank deeply.\n\nFae blood tastes like old spiced earth and overripe fruit.\n\nI thought of the meal I had just had.\n\nAngelic blood tasted like liquid fire and hot ecstasy.\n\nI knew which one I preferred.\n\nWe both put our cups down. Orias smacked his lips. His mouth was stained with the fae's blood. The Demon Prince's face widened into a satisfied smile, and I could see that his teeth were colored purple as well.\n\n\"That was potent,\" Orias said as he gazed up at the sky. \"The donor must have at least been an Earth-Tender.\"\n\n\"She was a Tree-Shaper,\" I said proudly as I poured him another goblet. \"And no, I won't tell the story.\"\n\n\"We don't have time anyway, I'm afraid,\" he said wistfully. \"I have to be gone before midnight.\"\n\nI settled back against the hard metal chair. \"Why did we have to do the meeting ritual? Neither of us are in audience. We are not calling on each other's realm of Hell.\"\n\n\"The Light has captured a few Unami in service to Mammon,\" Orias said offhandedly as he continued to star gaze.\n\nI raised an eyebrow. The Unami were the least powerful of the Greater Dark Entities. Their entire race should be grateful Orias and I were even talking about them at table.\n\n\"Why do I care about this? What does this have to do with meeting formally?\" I was rapidly losing patience. Despite my great fondness for Orias, it was vastly irritating trying to make sense with an entity that could see the future.\n\nOrias tapped the table, reminding me it would be bad form to lose my temper while acting as a formal host. Smug bastard.\n\n\"Mammon has been spending the past fifty years trying to steal some old piece of Chaos-touched gold. The stars haven't told me what these Unami were doing for him specifically, but they've been far too talkative in captivity,\" Orias said calmly. He paused, his eyes flickering back up to the sky. \"In fact, from what I've seen, they've barely even been tortured.\"\n\nI fiddled with my cup as Orias' gaze remained skyward. I wasn't sure if I would need to wait until he was done.\n\nOrias can only tell the future with his eyes fixed upon the stars. They whisper the currents of the future to him... and the way he tells it, his power is dangerous... much like mine is.\n\nThere is a great temptation to learn just a little bit more of the future. To watch the sky for but another moment and listen for just the next hour... or two... or until the sun comes up. One time, he said he was caught in the sun, and was unable to move as his Dark flesh writhes under the light and his eyes shrivel in their sockets. Orias told me about that happening once. I wondered how many times it had actually happened.\n\n\"Get to the point,\" I said, finally unable to keep my patience.\n\nHe sighed, tearing his gaze from the sky. \"With the Unami talking about Mammon's plans, the Light has been distracted from your tiny little flareup-wielding Destruction.\"\n\nI winced. In truth, I probably hadn't been using it enough. Cariel had served as too sweet a distraction.\n\nOrias noticed. \"Don't fret, my friend. I've brought something for you to practice on. I'll give it to you before I leave.\"\n\nI nodded. \"Thank you.\"\n\n\"So, I decided that to regain some of the Light's attention, we would give the Unami something new to talk about.\" Orias smiled.\n\nThen I understood.\n\nThe Dark meeting ritual between two Princes of Hell contained pervasive and wide-reaching magic. Every being that belonged to the Dark would feel the nature of Dark magic bend and shift as a result of the ritual.\n\nEvery being of the Dark would know that Lord Orias, Prince of Prophecy, Stars, and Change, had just called upon Lord Devnikolus, Prince of Destruction, Undoing, and Fire.\n\nThe fact that this meeting occurred formally in the mortal world would be doubly interesting. Normally, these meetings took place in the deepest reaches of Hell, within a Prince's stronghold.\n\nI let out a breath. \"Will these Unami be able to sense where the meeting took place as well?\"\n\nTo my eyes, Orias had to visibly brace himself, to resist the urge to check the stars. \"I believe so,\" he said. \"In fact, I believe that at this very moment they are about to offer up news of our meeting to our captors.\"\n\n\"Mammon should use better slaves.\" I poured myself another cup of blood. \"I will be speaking with him about this next time I see him.\"\n\nOrias shrugged. \"He has grown bold in the past two centuries. Lilith and Baal did much to temper some of his actions in ages past... but Lilith has not left her stronghold in a century, and Baal has been emulating you recently... spending much time amongst the mortals.\"\n\n\"Perhaps I should take a turn scolding Mammon,\" I said darkly.\n\nOrias held up a hand. \"Let us forget about Mammon's negligence for now... His actions can be rectified, and we have even turned them to our advantage.\"\n\nI allowed the matter to drop, but I knew the Prince of Greed and I would be having words.\n\nMy flowers swayed slightly as the wind picked up around us. Clouds moving from the north swept in front of the moon.\n\nThe vial of blood was empty, and Orias sighed.\n\n\"I'll have to be going,\" he said slowly. \"But first, I need to tell you what to expect. The Light is going to be coming at you from two sides. One you might suspect, but the other comes treading from the fogs of the past. I'll tell you what to do and hope that the currents I have seen hold their course.\"\n\nI nodded, attending to his words.\n\nOrias continued. \"Tonight, there are things you must do...\"\n\n***\n\n-Cariel-\n\nWarm silk and the smell of crushed roses greeted me as I returned to consciousness.\n\nI turned over, and the liquid soft sheets moved with me. Never could I remember feeling so warm and content. My body felt heavy and languid.\n\nIt was a curious sensation, as if the echo of some great pleasure had followed me through sleep and had woken with me.\n\nWhat could have caused this? I wondered as I stretched and flexed my toes. Who replaced my sheets? And refurbished my chamber? This didn't look like my cloister in the Northern Second Sphere...\n\nSuddenly, memories poured into my mind, and I jerked violently.\n\nDevnikolus filled my mind's eye completely, his smile both cruel and caring as he lowered his mouth to my throat.\n\nI remembered the sharp pain as his teeth sunk into my neck. I remembered how that pain had given way to the most glorious body-thrumming, mind-enslaving, all-consuming ecstasy.\n\nA tiny spark of arousal jumped in my sex at the mere memory.\n\nThe bed felt no less soft, my flesh no less sated, but everything was different nonetheless. I hugged myself, trying to find solace in my own embrace.\n\nI was losing my mind.\n\nWhen will I need him to bite me again? I thought bitterly. Will I need it in a week? Three days? Every day?\n\nI closed my eyes. The need wasn't on me now. But I had heard stories. I had seen better angels than me... mad with the addiction.\n\nThere was no turning back now. I had given myself to him last night... and in the thrall of the demon's seductions, I had done it gladly. But now, away from the distracting sex, I had to acclimatize to what that truly meant.\n\nThere would be no return.\n\nA dark road had opened its wide maw in front of me. I was staring down an eternal path of slavery, ridden with sex and with evil.\n\nHow long would it be until I didn't recognize myself?\n\n***\n\nEventually, I could stay abed no longer. My thoughts continued to spiral down into depression, and I decided there was nothing to do but face my future.\n\nNoises from far off rang from somewhere within the mansion.\n\nI guess I should present myself to my new Master, like a good little slave girl, I thought with cold anger.\n\nI had no clothes of my own. When I opened the towering wardrobe, I discovered that there was nothing in there but the demon's impossibly large human attire.\n\nHe's never given me clothes before, I thought. Perhaps a creature of my lowly status was to be kept naked... for easy access to all the intimate bits that clothes were supposed to protect.\n\nWhether they be demon or divine... men are all the same.\n\nI descended the stairs gracefully, mindful that a harsh step would set my breasts swaying.\n\nThe entrance hall was empty, as were the kitchen and sitting room. The door to what I assumed was the library was locked, and I didn't think that forcing it would get me into the demon's good graces.\n\nI didn't bother looking in the servant's wing.\n\nThe only place I hadn't checked was the mansion grounds. My hand hesitated as I reached to open the grand front door. Going outside might make my collar think I was trying to escape.\n\nI gritted my teeth and pushed my way out into the waiting midnight.\n\nThere was no resistance from my collar. The grounds were very dark, and I blinked twice... trying to get my eyes to adjust. I heard voices in the distance, Devnikolus' deep timbre among them.\n\nI walked down the garden path, following the sound of my Master's voice.\n\nThe path twisted at the base of an old, winding oak tree. As I turned the corner, the Demon Prince came into view.\n\nHe was standing in front of two handsome young men. They stood straight and still as Devnikolus paced back and forth in front of them.\n\nI couldn't understand what he was saying, as he was speaking in the Demonic language.\n\nThe two men had large black feathered wings protruding from their backs. Their hands were clasped behind them. Instead of fingers, they had long, wicked-looking talons.\n\nMy hands clenched as I stared at them. I had a special hatred for Bra'rul.\n\nI had called up my sword with barely a thought towards what I was doing. Nearly one thousand years as a ranking Seraphim had ingrained strong instincts within me.\n\nIn the back of my mind, I expected my collar to pull me up short at any moment.\n\nBut it never did.\n\nMy feet carried me quickly across the grass. I saw the closest Bra'rul tense and turn to look at me. I jumped, and then sailed through the air with deadly intent. The silver point of my sword was aimed straight for the throat of the nearest Bra'rul.\n\nDevnikolus stopped his Demonic speech and looked up.\n\nHis red eyes met mine for but the smallest moment of time... but it was enough.\n\nRed lightening erupted from the Demon Prince's fingers.\n\nThere was no pain... rather... just an incredible force. My body was flung into the winding oak tree. Roots creaked as my impact disrupted the bark.\n\nThen, the tree glowed a sickly red, and the gnarled branches moved and wrapped themselves around my body like serpents. This was not a separate spell. The tree was sentient. It was aiding its Master.\n\nIf this were a normal tree, I could have ripped myself free in an instant. To my dismay, the branches hardly moved in response to my struggling.\n\n\"Stay there, little one,\" Devnikolus called out sardonically. \"I'll be along shortly to deal with your disobedience.\n\nHe turned back to the wide-eyed Bra'rul, who were looking at both me and Devnikolus with shock and confusion. They both had their talons bared... as if prepared for more angels to jump out of the underbrush.\n\n\"Raak, Ezrih,\" Devnikolus said soothingly as he looked at the two respective Demons, \"it is alright. There are no more angels here. We are not under attack.\"\n\nThe Bra'rul named Ezrih didn't look convinced, his red eyes still darting about the treetops.\n\n\"How can you be sure, Master?\" Raak asked, gesturing with a taloned hand. \"By the smell of her, that angel is a Seraphim. She is probably leading a sortie of Legionnaires.\"\n\n\"Silence!\" Devnikolus spat, all attempts at calming the Bra'rul abandoned. \"She is a recent acquisition of mine, and is subject to my will.\"\n\n\"Subject to your will? What sort of...\" Ezrih trailed off hastily.\n\nFrost was growing rapidly along the grass. The air took on a malevolent red tinge.\n\nBoth Ezrih and Raak dropped to their knees in a blur of supernatural speed. They kept their heads lowered and spoke no more.\n\nDevnikolus' voice was as cold and hard as an executioner's smile... and it seemed to echo as he spoke. \"Ezrih, once you have completed the first task I have already given you, you are to join Raak in freeing the Unami. Raak, if four days have passed and Ezrih has not joined you, you are to attempt your rescue, regardless.\"\n\nDevnikolus paused. \"Try to let at least one of them escape so that they may run away telling stories. Make sure to let them see your faces. I've chosen both of you because you are renowned for being in my service.\"\n\nThe Prince of Destruction eyed his servants. \"Do you understand my orders?\" Devnikolus said, his voice finally losing a little bit of its edge.\n\n\"Yes, my Lord,\" both Bra'rul replied in harmony.\n\n\"Dismissed,\" Devnikolus said with a wave of his hand. He didn't spare another look for the two Greater Demons; he was already stalking towards me.\n\nI had long since given up struggling for eavesdropping, but I renewed my halfhearted efforts as he approached.\n\nOver my Master's shoulder, I could see Raak look at me with a face full of hatred. Then both he and Ezrih both took flight upon their dark feather wings.\n\nDevnikolus was staring at me, his eyes glowing red in the dark. A small smile played at the side of his mouth.\n\n\"It would seem you've woken up on the wrong side of the bed this evening, Cariel,\" he said. \"Did I not leave you satisfied?\"\n\nThe bark was rough against my naked flesh, and I could see a small cut on my shoulder seeping blue blood.\n\nI decided to ignore his vulgar mention of our coupling.\n\n\"I was merely taking advantage of an opening, Master,\" I said, with as much impertinence as I could muster.\n\nHis small smile widened into a wolfish grin. \"Yes... I suppose you were. I could command you not to attack anyone without my permission... but I can see how that might be dangerous for you if I'm not about.\"\n\nThe Demon paused and tapped his finger on his chin in a mock display of thinking.\n\n\"Hmm... I suppose there is nothing for it. I'll just have to let you use your own judgment and then punish you if you make poor choices.\"\n\nI winced.\n\nDevnikolus stepped closer until I could feel his cool breath on my face. \"Did you make a poor choice, Cariel?\" he asked in a slow, leading voice... like a teacher to a student that has forgotten his lessons.\n\nI stared back at him. \"I refuse to play this game. I want to...\" My voice died in my throat as Devnikolus cupped my cheek with the palm of his hand.\n\nHis hand was warm and dry. I could feel my skin come alive under his touch. My mind didn't want to remember last night, but my body hadn't forgotten. The deepest parts of me remembered that white-hot pleasure.\n\nI wanted to close my eyes. I wanted to hide. Almost as much as I wanted him to touch me.\n\n\"Shh...\" he said soothingly as he took yet another step closer... too close. The heat of him radiated from his chest and made my hair stand on end.\n\n\"Keep looking into my eyes, Cariel,\" Devnikolus said as he put his hands underneath me.\n\nThe tree was loosening its grip on me. It almost seemed like it was handing me off to the demon, as a mother might pass a child to its father.\n\nMy naked body slid into his arms, and he cradled me close to his chest. His body heat was all around me now. I could feel my center clenching as wetness gathered there.\n\nHe pulled my head in so that it rested snugly on his shoulder.\n\nSlowly, he began walking back up to the mansion... his strong arms taking care not to jostle me.\n\n\"It will get easier, little one,\" Devnikolus said kindly in my ear. \"Every time you'll put up less and less resistance. Maybe one day you'll forget to resist at all.\"\n\nI whimpered and tried to bury my face in the crook of his neck.\n\nHe was both my tormentor and my solace.\n\n\"You realize I will have to punish you, don't you?\" he said, as if it were the most natural thing in the world.\n\nI nodded into his body, and he started whistling while he walked.\n\n***\n\n-Devnik-\n\nI brought her back to the master bedroom.\n\nThe sheets were still rumpled on the four-poster bed.\n\nCariel was very still in my arms, but her silver eyes were bright and alert. Her face was a picture of contrast... She looked like she didn't know if she should laugh or cry, so she did neither.\n\nThe sight of it heated my blood.\n\nIn truth, Cariel had simply given me an excuse that I had been craving. She had reminded my hands of how to seduce and pleasure Angelic flesh... but they ached to remember what it felt like to give pain.\n\nI wanted to pull this red-haired girl through a crucible of pain. I wanted to push her to the edges that defined her. I set her down gently on her feet.\n\nCariel wobbled slightly as she took up her own weight. She looked at me curiously, a question on her lips.\n\nBefore she spoke, I snapped my fingers.\n\nBlack chains descended from the ceiling in a whirlwind of red sparks. Manacles clamped around Cariel's wrists as she stared on dumbly.\n\nBlue sparks flashed faintly as the chains hauled her up off her feet. They died down quickly though.\n\nI gazed at my prize. Cariel dangled a mere inch off the ground. Her pale feet swung in the air... so close to the ground, but very far away.\n\nI snapped again, and more black chains emerged from the floor and wrapped themselves around her ankles to prevent her from kicking.\n\nCariel found her voice... but she didn't say what I thought she would\n\n\"It's okay if you hurt me,\" she said in a soft voice. \"I can take it.\"",
        "My eyes met hers, and I nodded.\n\nShe looked so small bound up in those chains. So frail... so trusting.\n\nI walked to my wardrobe and pulled out a long black leather belt. I flicked it and it snapped with a dull thud against the air.\n\nCariel jumped in her chains, making them clatter.\n\nI slowly walked back to the pale, suspended angel and stood behind her. Her muscular ass clenched and unclenched as she turned her head trying to get a look at me.\n\n\"I have a belt in my hands, Cariel,\" I said calmly.\n\n\"Okay...\" she responded placidly.\n\n\"I'm not going to tell you how many strokes I'm going to give you... because I don't know. I'm going to hit you until I can't.\"\n\nI could see the first signs of tension stirring along Cariel's bound muscles.\n\n\"I'm not going to ask you to count. Instead, I'd like you to scream. Don't fake it, but when the pain warrants it... I'd like you to scream for me.\" I put one hand on the small of her back. She jumped. \"Can you do that for me?\" I asked gently.\n\nCariel nodded, facing away from me. \"Yes, Master.\"\n\nI took a step back and began.\n\nSwinging the leather belt, I whipped the smooth strap across the back of her thighs, where the leg thickens into the buttocks.\n\nI had put my full human form strength into the blow. Dark welts already sprung up on her pale skin.\n\nHer body stiffened with pain and she took a deep breath.\n\n\"I'm sorry I was disobedient, Master,\" she said through gritted teeth.\n\nI didn't respond... I was fully in the thrall of my darkest impulses.\n\nThe belt fell again. This time it landed on her right cheek. Cariel thrashed a little in her chains. This was real pain, and her instincts were being brought kicking and screaming to the surface.\n\nI called upon my powers. Using inhuman speed, I slashed and whipped with the belt.\n\nThirty blows landed within five seconds, and her thighs and posterior darkened into blue slash lines. She hadn't screamed yet... but she whimpered desperately in her chains. Her toes were flexing involuntarily and her arms and legs flailed as much as they were able to in her restraints.\n\nThe belt swung back again. This time the tip slipped between her legs and kissed her cunt with a loud thud.\n\nThe pain was right on her sexual being... and despite what must have been mind-numbing agony... the red-haired beauty began to roll and gyrate her thighs, her weeping sex looking for more contact. The moisture of it flowed down the inside of her thighs.\n\nI took a deep breath. I could feel myself losing control.\n\n-Cariel-\n\nI felt a shocking numbness before the fire. That last hit upon my flower had broken something inside me. At first, I had resolved to take my punishment stoically. Then when I whimpered and thrashed, I promised myself wouldn't scream. Now, I couldn't remember my promises at all.\n\nThe pain upon my body was too much for me to take... and so my body was diverting some of it... into pleasure. After that hit, I felt a change come upon me. The pain was different. It was now like a kiss... with a bite... Sex, with some hair pulling.\n\nI knew the demon was losing control. The air was growing cold... just like it had out in the garden.\n\nI knew he was going to hurt me some more... but that was okay. I needed him to hurt me now. I wanted to feel the pain of his sharp teeth sinking into my body. I wanted him to drink again. But, for now, I was content with the belt.\n\nI knew I needed to take it.\n\nI knew he needed to give it.\n\nI spread my legs a little wider, giving him better access to my folds.\n\nBehind me, Devnikolus roared. This little act of submission had done something to him.\n\nThe belt hit the floor. Suddenly, his rough hands were mauling my sore thighs and ass. The pain tingled, and my cunt contracted in response.\n\nFuck me.\n\nPlease fuck me.\n\nHe gripped my flanks. With one sharp thrust, he was inside me.\n\nHis cock roughly pushed deeply within me. The suddenness of it made me cry out in pain and a little bit of shame. But that passed quickly. Now my cunt was welcoming him... and trying to coax him deeper as it hugged and milked him.\n\nCreation is truly cruel... The one man who can give you this kind of pleasure is a sadist... and evil.\n\nHe pistoned his cock in and out of me, and then I reached my peak.\n\nMy mind exploded in pleasure... as my body went limp in the chains.\n\nDimly, as darkness encroached on my sight, I sensed that Devnikolus hadn't even slowed down.\n\nI didn't lose consciousness... but rather, I entered a dreamlike place.\n\nA place where I felt soft and warm and yielding.\n\nChapter 9\n\nButler at Sea\n\nLeviathan is the Demon Prince of Wrath, Deep Dwellers, and Violent Waters. His moods are mercurial and ever shifting. He has never set foot on the dry lands of Earth.\n\nJonathan the Courageous\n\nThe boat shifted slightly as we shoved off. Timber and board creaked delightfully as the waters of the channel caressed the hull. I smiled and sighed. Boats are wonderful things. Five hundred years of living, and a strong ship and sea breeze still made me grin like a fool. But, I was a simple man back then. With simple goals and simple pleasures. That was when loyalty and honor were the words I lived by. When chivalry made up the bones of me.\n\nNow I am a servant and a liar... and I am good at both... exceptionally good.\n\nI glanced at Daniel Fleeting as he moved his bag into the back of the room and nearly rolled my eyes.\n\nHe thought himself clever; he thought himself righteous.\n\nHe thought he could fool me.\n\nWhat does a misguided pawn of the Light know about lying? Did he think the scrap of Darkness in him made a difference?\n\nHe did save you and Maria from the Afflicted woman, came the unbidden thought from the oldest part of me.\n\nHe did it because Maria and I are his meal ticket to the Master. He saved me so he could stick that holy sword in Lord Devnikolus. Little does he know that I'm bringing him to his own demise. Master will be pleased to have this pest squashed.\n\nA good deed is a good deed. Whether it be done by a righteous man or a wicked man. Your own words, Sir Jonathan.\n\nI've been Jonard the Butler for longer than I was Sir Jonathan. Jonard the Butler would have no qualms about pushing this Judicar into the sea... despite whatever aid he might have rendered. Despite whatever noble words I've said long in the past.\n\nIt was Jonathan Peter's son that said those words. Is this how father taught you?\n\nFather never taught me of demons... I chuckled darkly at that, and both Maria and Daniel looked at me.\n\nI shrugged and smiled again, pulling the scars on my face tight.\n\n\"I'm simply happy to be moving,\" I said to both of them. \"I'm sick of horses and I'm sick of forests. In truth... I'm also wholly sick of France.\"\n\nDaniel raised a bemused eyebrow, and Maria gave a laugh like silver bells.\n\nAh, Maria, I thought sadly as I looked at her bright face and golden hair. I hope you find nothing but happiness with the Master... I hope you keep changing him. That melancholy thought made the nub where my finger had been ache. I really hope Master can do something about that. Eternity with a missing finger will be annoying.\n\nMaria sat on the bunk. Daniel leaned against a wooden beam. They both looked ready to spend a long bout of time in the cabin.\n\nI didn't relish the idea of spending time in close quarters. Daniel's Judicar sword spewed the most disgusting smelling magic. Besides, I wanted to go spar with the crew. On a short journey like this, that was how the sailors would pass the time.\n\nI decided to wait until after supper.\n\n***\n\nThe four hours until dinner in the mess hall were excruciating.\n\nMaria fell asleep and snored prettily on the top bunk. To be young again, I thought wistfully.\n\nDaniel simply sat down, still leaning against his wooden beam. He kept his sword across his lap and stared at it with a mesmerized look... as if it were a roaring fire.\n\nI had nothing to do. So I did nothing.\n\nAnd doing nothing for a man of my age was an excuse for remembering.\n\n***\n\nHalf a Millennium Ago\n\nTones of deep violet and splashes of hesitant pink were all that colored the sky.\n\nFrom a canvas bag I was pouring a rough circle of what looked like dark sand on the ground. The sand was made up of cold iron, new salt, and old bone.\n\nOnce the circle was complete, I moved over to a small rock. My armor clinked with each step. I had propped an open book upon the stone. Its pages were made of old papyrus and bound in old black leather.\n\nI had found the book in an old burned-out convent in the Highlands in a lonely and forgotten vale. All the other books had been nothing but charred pages and ash. This book was untouched.\n\nWhen I had picked it up, it had been cold. I discovered that even if I set it out in a day's worth of sun... it would always be cold to the touch.\n\nThe book held many secrets... all of them dark.\n\nOne page told me how to mix a draught that would turn a man's heart black. Another told me how to put a sickness on a person with nothing but their hair and a few words. There was even a recipe for marrow soup.\n\nThere were some pages that told of things too wicked for repeating.\n\nMany times, I found myself about to throw the book into a well, or into the sea. But each time, I stopped, curious to read just a little more.\n\nThen, one page offered me immortality.\n\nI thought of all the good an immortal knight could do. My arm would never grow weak. My shield would never falter. I could be an eternal good, forever riding the hills of England, rooting out the sorts of evil the black book spoke of.\n\nAll I had to do was summon a demon... a very specific kind of demon. The black book said that only ten demons had the strength to grant immortality. The page read:\n\nOnly one and nine of the Dark\n\nAre able to impart\n\nThe everlasting heart.\n\nFirst be Caim, the Wild and Fierce,\n\nSecond, Leviathan, the Wroth and Deep,\n\nThird is Soneillon, the Slothful and Bitter.\n\nFourth, Orias, the Knower and Schemer,\n\nFifth, Mammon, the Covetous and Merciless,\n\nSixth, Devnikolus, the Destroyer and Unmaker.\n\nSeventh, Baal, the Liar and Shadowed,\n\nEighth, Lilith, the Lustful and Sanguine,\n\nNinth, Beelzebub, the Devourer and Gluttonous.\n\nLast, there is the Lord of these:\n\nLucifer, the Prideful and Powerful.\n\nI didn't know which to pick. I didn't recognize any of the names except the last two. I knew Beelzebub and I knew of the Devil.\n\nI resolved not to choose those them.\n\nIn the end, I closed my eyes and touched the book with a blind finger. When I looked, I saw my finger had landed on Devnikolus, who was also called the Destroyer.\n\nI winced. I wondered then if I should break my word with myself and choose the one the booked named the Slothful.\n\nBut I had never broken my word before. Not even to myself.\n\nDevnikolus it was then.\n\n***\n\nAfter I had poured my circle, the book said there was only one more thing to do... and that was to say the words.\n\nThese strange words made up the only phrase in the book that I couldn't read. I couldn't even remember them unless I was looking right at them.\n\nSo, in the dying light, I sounded the words out as I read them from the page.\n\nWith each syllable, it felt as if the Earth itself shuddered and grew colder. It was as if each word I uttered gave permission for winter to creep closer... even though it was still a full moon away.\n\nThe circle began to glow with a fierce, unnatural red light. Shadows that moved and slithered like liquid snakes emerged from the darkness of the night and gathered inside the bright red shimmering of the circle.\n\nWhispers that sounded like the cold voices of the dead emanated from those shadows. I would have turned to run... but icy, primitive fear kept me rooted to the spot.\n\nThe darkness swirling inside the circle took on a human shape.\n\nBut that wasn't quite right. They took on the shape of a man made out of shadow flames. Two red eyes opened on the shadow-flame creature... red eyes that burned with such an intense malevolence my knees began to wobble.\n\nThe shadow-flame man stared at me. It had no mouth, yet still it spoke.\n\n\"This circle cannot hold me, human,\" the creature said in a voice that sounded like crackling flames and breaking stone.\n\n\"I am Prince Devnikolus, and I cannot be bound.\"\n\nThe book had said this. It had also said I needed to state my intent quickly.\n\nI cleared my throat, yet even my deepest voice sounded like a child's in the demon's presence.\n\n\"I am the knight known as Jonathan the Courageous,\" I said slowly, trying to enunciate each word. \"I have summoned you this night with purpose... I wish to duel for immortality.\"\n\nThe demon called Devnikolus was silent for a beat. The creature cocked its head to the side. I could tell that the entity within my circle was considering me.\n\nI had a sinking feeling it was the same consideration a bored farm cat gave a mouse.\n\n\"Jonathan the Courageous, indeed, it would seem,\" the demon said in its terrible voice.\n\nTo my horror, the shadow-flame man took a step... then two... and then stepped completely out of the red glowing circle.\n\nBut... it was strange. As soon as one shadow-flame foot left the circle, it became a regular human foot... then as the rest followed... the shadowy substance immediately also transformed into pale human skin.\n\nThe red circle vanished now that it was unoccupied. In front of me stood a beautiful dark-haired youth.\n\nIn his hand was an elegant black sword, and on his face was a perfect smile.\n\n\"Well?\" he said in a soothing baritone. \"Shall we begin?\"\n\n***\n\nPresent Day\n\nThe ship's bell roused me from my memories. I blinked twice and realized that my eyes had been closed. Dreams and memories had apparently melded together as I lay on my bunk.\n\nI heard Maria yawn and stretch on the top bunk. Daniel blinked several times, and then shook his head. With what seemed like great effort, he pulled his eyes from his sword and looked about the cabin.\n\n\"That was the bell for supper,\" I said as I stood.\n\nThe rocking motion of the wooden cabin felt odd to me. It felt odd that I wasn't standing in the center of that clearing. It felt odd that I smelled the brine of sea air, rather than the earthy scent of late autumn.\n\n\"We best go collect what rations they've set aside for their paying guests,\" I said, gesturing to Maria to hop down from the bed.\n\nThe Aethling girl edged her way to the side of the bunk and slipped off. She seemed to float down. I had noticed that Maria had been showing more and more signs that revealed her true nature. Her powers were continuing to grow.\n\n***\n\nThe mess hall smelled like smoke and bread and sweat.\n\nThe sailors filled the place with a noise that was almost too big for the small space. The ship had just been restocked, and the journey scheduled was short. As such, all the men had wine or something stronger in their cups. I kept a hand on Maria's shoulder.\n\nIn truth, I shouldn't have brought her into the mess hall. A normal lady would never leave her rooms on a normal voyage, save perhaps to visit the deck or the Captain's cabin.\n\nKnowing Maria, she probably wouldn't have stayed anyway.\n\nFirst Mate Enzo was waiting for us next to the kitchen. He smiled when he saw us, pausing for only a brief moment to ogle Maria. There was no harm in it. I had met a dozen men like Enzo. He loved his women, but he loved an untroubled conscience more.\n\n\"Hello, First Mate,\" I said cheerfully. \"We heard the supper bell and could barely contain ourselves. You said something would be set aside?\" I asked leadingly.\n\n\"Yes,\" Enzo said quickly. He reached behind the counter and pulled out a sack of foodstuffs. Then he pulled out three full skins of water. \"Please, take this and retire to your rooms. The lads are rowdy tonight. Having a lady on board has made half the men talk of bad luck. The other half talk about 'good luck,' if you take my meaning.\"\n\nHis warning was too late.\n\n\"Ha ho! Look here, boys!\" came the loud voice of a man just behind us. \"The girly has decided she couldn't resist our charms for a moment longer!\"\n\nThe speaker was a giant of a man with frizzy red hair and more freckles than could be counted. He was built like a tree trunk. Long, but stout.\n\n\"Yeah,\" said one of the smaller men behind him. \"Look at those tits! You'd never go hungry with a cow like that!\"\n\nMaria took a step behind me, her face blushing a deep red, her hands covering her chest. I watched Daniel's eyes narrow and decided to step in before he did something stupid.\n\n\"I'd like your name, sir,\" I said, allowing my French accent to drop away in favor of my native English.\n\nThe red-haired man smiled, as if my response was just the next move in a game he wanted to play.\n\n\"My name's Harry. How much for a tumble with your girl?\"\n\nI looked at the mob of sailors that had gathered round. This game inevitably ended in violence. So I decided to skip a few moves. \"Sparring,\" I said simply.\n\nThe smile that Harry had been displaying quite broadly dimmed slightly.\n\n\"What, now?\" he said in confusion.\n\nI tapped my foot, as if impatient. \"Come now, you heard me,\" I said. \"I will spar you for the girl. I would offer to use wooden swords, but since something so precious to me is at stake, I must insist on real swords. The match will be to first blood.\"\n\nPoor Harry had just had a good deal of information that he hadn't expected dumped on him. He expected me to take a swing at him, after which he and his crew would beat us bloody and have an excuse for the captain later.\n\nThis new development wasn't accounted for.\n\n\"I... um... well,\" Harry muttered as he looked back at his companions.\n\nThe small man that had spoken before said, \"Teach this rich bastard a lesson, Harry. Look at him. He's half your size.\"\n\nThe rest joined in.\n\n\"Knock their heads, Harry!\"\n\n\"Nobody talks to you that way!\"\n\n\"Fuck that slattern!\"\n\nThis din of obscenities seemed to be all the encouragement Harry needed. His grin returned, and he was suddenly back in his element.\n\n\"Don't know why ya thought this would be a good idea, but if it's a thrashin' ya want, I'll give ya one before I take the girl.\"\n\n***\n\nWe were standing on the deck facing each other.\n\nMy sword throughout the centuries gleamed in the lantern light of the ship. The edge was sharp, the blade clean. The years hadn't touched this sword... just as they hadn't touched me.\n\nThe rowdy crew members were mostly quiet in the presence of the half-moon and bitter night air. Water lapped at the sides of the ship. The air was still and hushed... as if it too were waiting for something.\n\nHarry had to borrow his sword from another crew member. He looked quite different outside in the dark of night with naked steel in his hands.\n\nMaria walked up behind me and whispered in my ear, \"I'm not worried.\" After a pause, she added, \"Don't kill him.\"\n\nI smiled and nodded. She had never even seen me fight, and yet she put her faith in me.\n\nHow strange, how wonderful.\n\nHarry was the first to break the hush. He did it with his normal bellicosity.\n\n\"Right!\" he said. \"Now, I'm standing out here in the bleedin' cold and I'm waiting for you to come make a fool of yourself.\"\n\n\"Well,\" I said, copying words said to me lifetimes ago, \"shall we begin?\"\n\nMy calm voice was Harry's undoing.\n\nThe talking was done.\n\nHarry lunged at me with surprising quickness. He moved with sea legs that spoke of a lifetime on the water. Mine were one hundred years rusty.",
        "His sword swung wildly at my head, and I was forced to skitter away. His side had been exposed for a moment, but I had promised not to kill him. I would need him to attack once more. Then I would see the answer in the steel... this was my gift.\n\nThe red-haired man turned and bore down on me with hateful eyes.\n\n\"Coward!\" yelled someone in the crowd.\n\nHarry charged again. I easily turned his thrust. The swords made a sweet song as metal met metal and sparks jumped. My feet pivoted, and I darted my sword up in a half-teasing feint that made him leap backwards.\n\nThe good humor of the sailors had vanished. After an elegant move like that, even a fool could see that Harry would lose eventually.\n\nWhat they couldn't know was that I already had the measure of him. They couldn't know that I saw how this man moved better than he ever would. After just two exchanges, I could see him.\n\nHarry came forward. I met his gaze without faltering. Something he saw there made him pause, not for long... but long enough.\n\nThen I moved. I moved in a way that spoke of five hundred years spent with a sword in my hand.\n\nA rich, sparkling ring filled the air as Harry's sword spun through the air and over the side of the ship.\n\nHe had switched his grip for his thrust... a beginner's mistake. I would have made my squire run with water buckets in his hands had he done that in practice.\n\nWith Harry unarmed, the fight was over. I slipped my sword out, almost as an afterthought, and sliced his cheek gently.\n\nA small drop of blood seeped from the wound. It probably wouldn't even scar.\n\nHarry reached a hand up to his cheek and scowled.\n\nI extended my hand, about to offer him peace, when I was interrupted. Captain Adrien's voice sounded from above on the quarterdeck.\n\n\"What in God's name is going on out here?\" cried the fat man, his cultured tones high and distressed.\n\nOne of the sailors spoke. \"Sir, if it please you, these passengers you've taken on insulted Harry's dead da!\"\n\nI looked up at Adrien. His beady eyes were sweeping over his crew... taking in every face and expression. \"Is this true, Mr. Wright?\"\n\nHarry's face broke into a slow, sick smile. He winked at me before turning and looking up at his captain.\n\n\"Aye, sir, what he says is true. Me honor demanded we fight.\"\n\nI didn't hear the Captain's reply. I had already guessed at what he would do... what he would have to do. Mutiny is a word that always lingers in the shadows of a Captain's mind\n\nMy eyes had drifted and I was staring aimlessly at the night sky. It was clear and calm in the way it can only be at sea. My gaze almost slipped right over an inky blot in the distance.\n\nConcentration focused my sight, and I could make out a shape.\n\nThere were dark wings on the horizon.\n\n***\n\n-Daniel-\n\nMy hands were clenched and shaking at my sides.\n\nThat filthy liar! Harry Wright was a sinner that needed a sharp point through his black heart. Jon had fought exceedingly well, moving with a precision that had seemed almost supernatural. The man moved only when he needed to, and no more.\n\nDespite his ability, Jon was far too soft with this vagabond.\n\nCaptain Adrien seemed like a shrewd man. I doubted he would believe Harry's story for a moment.\n\nMaria glanced at me from the small nook she had managed to find. Her face was mostly in shadow. I could only make out a few strands of blonde hair that caught the lantern light.\n\n\"Well,\" Captain Adrien said after Harry finished his tale, \"it would seem I've picked up a couple of ruffians masquerading as gentle folk.\"\n\nMy mouth opened. I stood there looking on at this farce like a gawping peasant.\n\nThe Captain shook his head. \"I really must confess myself embarrassed. I let them onto my ship because I thought them to be civilized, but now that I think about it, they've given me no titles or reasons for this journey. They're most likely on the run. Surely the gold they carry is stolen.\"\n\nThe crew were smiling and edging about with unspent energy. My hand drifted to my hilt.\n\n\"Lads!\" the captain said after a dramatic pause, \"seize these rogues and take their gold off them. We'll throw them overboard in the name of the King's Justice.\"\n\nDaniel! Vraiel suddenly shouted in my head, I sense potent Dark magic flying in off the sea.\n\nBefore I could respond, Maria gasped softly next to me. \"Is that my Master?\" she asked as she pointed to a creature born aloft by the Dark wings of the damned.\n\n***\n\n-Jon-\n\nEzrih was now visible to everyone on deck. His dark wings thrummed softly as they beat the night air, a small trail of crimson magic floating behind him. A spell of silence enraptured the crew. Captain Adrien stopped his speech and simply watched, his fat face slack with rapture.\n\nEzrih touched down gently onto the ship. The dark magic swirling around him made the cold sea air frigid and biting.\n\nThe Bra'rul had long, midnight-black hair that fell past his shoulder blades. His face was bone white and slender, and his eyes glowed a bright, pulsing red. He was, perhaps, slightly too angular to be handsome.\n\nTo the crew, he must have looked like the Angel of Death, come to collect them.\n\nHe favored me with a small bow. \"Greetings, brother,\" Ezrih said. \"I come on behalf of the Master.\"\n\nI returned his bow. Normally a Bra'rul would never bow to a human... but I sat close at Devnikolus' side.\n\n\"Your timing is good, Ezrih,\" I said. \"These men were about to throw us overboard.\"\n\nThe demon's eyes glittered, and he bared his clawed hands. \"I've come to bring you and the two you travel with to the manor. I will gladly kill the rest.\"\n\nThis stirred the crew, who had been looking on with horror. Dark magic has that effect on mortals. Simply being in its presence could freeze you in terror.\n\n\"It's a monster!\" screamed a crew member as he drew his sword and looked about, wild-eyed, wondering why no one else was moving.\n\nCaptain Adrien found his voice. \"Men!\" he shrieked, \"they're not just thieves! They are the damned! They've made deals with the Devil and his spawn! Burn that thing! Burn it!\"\n\nThe Captain pulled one of the lanterns off the ship's cabin and hurled it at Ezrih. A dark wing unfurled and slapped the lantern away. It tumbled overboard.\n\n\"Those two are my companions, brother,\" I said as I pointed out Maria and Daniel to Ezrih. \"The rest are yours.\"\n\nThe Bra'rul's unnaturally long tongue slithered out and licked his pointed teeth. \"Very well,\" he said.\n\n***\n\n-Alarial-\n\nShrieks of pain echoed loudly on the ship, followed by the moans of dying men and the sound of hot gore dripping on wooden planks. The demon was fast... too fast to see. He would disappear for moments at a time, and then materialize on the other side of the ship, where he would rend another sailor into shreds with his claws.\n\nI tried to close my eyes and tell myself that these were wicked men. But the sounds of pain are the same from any man or woman. Tears dripped down my face.\n\nDaniel put a hand on my shoulder, offering me an awkward embrace. It was sweet and I appreciated it.\n\n***\n\nIt was over in about a minute.\n\nEzrih stood before us amongst a scattering of bodies, his arms stained with blood up to the elbows.\n\n\"Come now,\" the demon said in a dry, raspy voice. \"We've spent too long here, already. I must have you returned before sunrise.\"\n\nI tried not to look at a severed hand that was still curled around a sword.\n\nI decided to talk...it might distract me from the eyes that were still open but unseeing.\n\n\"How are we going to get there? You can't carry all of us,\" I said. It unnerved me to speak to a creature that had just slaughtered twenty men.\n\n\"I will transform,\" Ezrih said patiently, \"and you will all get on my back.\"\n\n\"What do you\u2014?\" I stopped as Jon held up a hand.\n\n\"Watch,\" Jon said.\n\nEzrih glowed red, until his entire form was outlined in a malevolent scarlet. His body grew outward, his wings larger.\n\nWhen the light died down, a true monster sat before us.\n\nIt had a massive black body covered in thick fur. It had a long serpent-like neck and head that ended in a snout that looked as if it belonged to a wolf. Both its forelegs and hind legs ended in massive black claws. The wings were still made of black feathers, but they were larger now.\n\nThese descriptions were accurate, yet also woefully inarticulate. In short, the monster in front of us looked like nothing I'd ever seen before, and nothing I had ever imagined.\n\n\"Climb on, Maria,\" Jon said softly. \"He'll take us back to Devnik.\"\n\nI nodded and took his hand.\n\nChapter 10\n\nJealousy\n\nHush now my baby you're safe where you lay,\n\nThe forest is napping, now sleep and let be.\n\nHush now my baby you'll wake all the fae,\n\nThe forest is stirring, you must hear my plea.\n\nHush now my baby they seek out young prey\n\nThe forest is moving, they'll steal you from me...\n\n-Forgotten Lullaby-\n\n-Cariel-\n\nThe dark iron chains felt cool against my heated flesh.\n\nThat was the first sensation that came to me... as my mind slowly clawed its way out of the deeper place it had fled to. I could still feel the pieces of that place in my mind... and I knew it would only get easier. I knew I would find myself there more often.\n\nThat was the place where submission was as natural as breathing. Where obedience covered all thought with a thick warmth that felt like safety and acceptance.\n\nI could feel Devnikolus' hot seed leaking from my still pulsing sex, and then slithering down the inside of my thigh. It slid over one of the welts the belt had inflicted, and the sting of it made me jump in my bonds.\n\n\"You look exquisite, little one,\" said the demon in the room.\n\nI opened my eyes. I hadn't remembered shutting them.\n\nHe was standing in front of me. His dark hair had tumbled over his pale face and obscured one of his red eyes. He was wearing a boyish smile that made him seem young and happy, and carefree.\n\n\"Every time I look at your face, I can see just a little bit more of what you will become,\" he said softly. With a grace that should be denied to evil, he traced his pale fingertips across my forehead and over the hair that sweat had pressed to my face.\n\nWe both knew what I was becoming. \"Have I been sufficiently punished, Master?\" I asked in a tone that conveyed no contrition.\n\nDevnikolus laughed. It sounded like a deep rumble. It sounded like the laugh of the male who dominated me.\n\nSomething deep in my belly tightened again.\n\n\"No,\" he said. \"I'm afraid not.\"\n\nI stiffened. Surely, there couldn't be more? The backs of my thighs throbbed in time with my heartbeat. My sex felt sore and sated.\n\n\"I'm afraid I had more than one reason to dress you in chains.\"\n\nI didn't like where this was going. \"Why?' I asked, in a voice that didn't quite convey how much I wanted to both kill and kiss him. Then I remembered he hadn't ever kissed me... and that made me sad.\n\nDevnikolus ignored my question and started to move about the room. He returned the belt to the wardrobe, and then he slipped out the door.\n\nA hot flash of anger rippled through me. I swear on all that is Light, if he left me here I will gut him.\n\nBut then he returned a moment later, carrying a hot washcloth. Steam curled off it, and it was dripping slightly. He met my eyes for a moment and gave me a small smile. Before I could say anything, he began to clean me. The towel burned pleasantly as it moved down my thighs.\n\nA small, traitorous sigh snuck through my lips.\n\nThen he softly dabbed my sex... and I couldn't suppress a full-throated moan. A part of my mind broke off from the rest. It danced about madly in the corners of my being... and it chanted:\n\nI will never have enough of him...\n\nI will never have enough of him...\n\nI will never have enough of him.\n\nThe rest of me was trying to gather itself. I managed to get my mouth to form words... even though my mind was busy fracturing. \"Why did you want me in the chains?\" I asked in a voice that sounded small and girly.\n\n\"I have to go out tonight,\" he said, not looking up from his task, \"and you have demonstrated an uncanny knack for getting in the way.\"\n\nThe nerve... \"I could break these chains if I wanted to,\" I said haughtily.\n\nHe looked up at me and grinned. \"Could you?\" he asked, like a parent to a willful child. \"Show me.\"\n\nI gave him a sharp, brittle smile with too many teeth. \"Of course,\" I said. My magic gathered around as I called it. Blue lighting crackled around me, and I could feel my limbs fill up with tremendous strength. With this power I could stave in a rock wall with one mighty blow... I could rip a man apart like a lightning bolt might split a tree.\n\nI yanked at the chains. The manacles pulled sharply on my wrists as the chain pulled taut and still. They clanked and rattled, but none of the links bent or broke.\n\n\"Seithi Rei!\" I shrieked, frantically pulling and twisting in my bonds like a wild woman. The chains remained hard and unforgiving. A dull ache traveled up my arms as I expended all my magic... and then finally, I fell still and silent.\n\nHow had Alarial broken his chains? I thought despondently. Perhaps he fashioned stronger ones for me...\n\nThrough all of this, Devnikolus stood patiently, his hands clasped behind his back, his red eyes dancing. One side of his mouth was turned up into a little half smile.\n\nDamn him.\n\n-Devnik-\n\nThe little redhead breathed heavily as she gazed up at me. Her proud breasts rose and fell rhythmically, and a light red flush had crept into her cheeks. All that sweet, pale flesh had wobbled wonderfully as she had tried to free herself.\n\nI wanted to bite her again. I wanted to sink myself into her so hard and long that she'd forget what it felt like to not have me inside her. I wanted her on her knees, slavishly kissing my feet while whispering her devotion to me. I wanted all of these things... but I couldn't stay and claim them. There was much to do this night, and much that could go wrong.\n\nTonight was the night I would get my darling sweet Maria back... and that was more important.\n\nHowever, Orias' visions weren't always perfect. Great powers could divert the river of the future, and I had to be careful. Part of this caution called for Cariel to be bound in chains. She was willful and not yet completely broken to my will. I trusted that the mental commands of the collar would hold her, and I also trusted that she would bait the chains magnificently for another.\n\nStill, so much could go wrong. Tonight was rife with variables, as Orias liked to call them.\n\n\"Are you finished trying to escape, little one?\" I asked soothingly, as if I were trying to calm a scared animal.\n\nShe looked up at me with hooded eyes. \"Yes, Master,\" she said in a strained, breathy voice.\n\n\"Good,\" I said, and I lay a cool hand on the hot flesh of her flank. Cariel shivered at my touch and leaned into it imperceptibly. I doubted she even realized she craved our contact. I brought my hand up her side and briefly hefted one of her breasts.\n\nSoft, firm flesh rose in my cupped palm. Her eyes widened and she looked at me with a wild, untamed lust... completely separate from civilized thought. I let go of her breast and stepped back.\n\n\"What is happening tonight?\" Cariel asked in a voice of forced calm. \"What did you tell those Bra'rul to do? Why do I need to be restrained?\"\n\nI shook my head and offered her a small smile. \"I can't tell you that, Cariel. All I can say is that I will be back before the sun rises in four hours.\"\n\nShe opened her mouth to speak, but I was already collapsing into black smoke. Before she said a word, I had disappeared altogether.\n\n***\n\nIf a witless human had been standing in the field I had chosen, they would have seen something strange. They would have seen a dark mist rising and twisting from the ground... writhing like it was angry and sentient, moving swiftly and silently. Sparks of red would be seen deep within it... as it formed the shape of a man.\n\nThen they would have seen me, standing in a dark field five miles from my mansion. But they wouldn't have known it was me, Lord Devnikolus, Hellish Prince of Destruction and Unmaking. They would have simply seen a dark-haired man in a cloak, pinned with a ruby, and black vest... with brown eyes that looked almost red.\n\nBut sadly, there was no one around to witness my greatness... which was a pity... because what I planned on doing next was truly impressive.\n\nI reached my hand into Hell and pulled out a sword. But it was not my sword. This sword was dented and scratched along the blade. It had a simple leather handle that was torn and singed in places.\n\nAlong the side of the blade, the words 'Merciful Mary' glowed a faint blue when they caught the light. In my hands, I held the sword of a Judicar.\n\n***\n\nEarlier this Night\n\n\"Tonight, there are things you must do,\" Orias said as he pushed his hand upwards through a rend in creation. He pulled out a worn and weary-looking sword that pulsed with Light magic.\n\n\"For instance,\" Orias continued, \"you must destroy this sword tonight using Destruction.\"\n\n\"Is that a Judicar's sword?\" I asked. \"How did you come by that?\"\n\nOrias tapped the table with his free hand. \"Devnik, I don't really have time to tell you. Now, listen, you must pick a place away from your mansion and use Destruction to destroy the sword. This will kill the angel bound up within it.\"\n\nMost Judicars thought that the angel bound to them resided within their physical bodies... but the angel really resided within the sword that they carried. That is why they are told not to break the sword. Usually, if they did break it, the angel would simply slip back into heaven.\n\nThat wouldn't be the case if I fed it to my flames.\n\nOrias looked at me pointedly. \"You know what this will do. The Light is extremely sensitive to the death of one of their own. I imagine that a sortie of Legionnaires will be dispatched within the hour.\"\n\n\"Why do I want to attract Legionnaires to myself?\" I asked darkly, not liking the sound of this plan.\n\n\"Because the death of one angel will bring the Legionnaires running,\" he said. \"The slaughter of an entire sortie will bring the greater entity of the Light running. Lucifer is hoping this will leave his prize unguarded.\"\n\nOrias handed me the sword, saying, \"One thing always leads to another.\"\n\n***\n\nPresent\n\nI sat down with my legs crossed on the grass. In front of me, the Judicar sword stood upright with its point stuck forcefully into the ground. 'Merciful Mary' glinted sadly in the light in front of me, and I briefly wondered who the sword belonged to. The Judicar had to still be alive. The bond was broken if they died.\n\nI wondered if the angel in the blade was aware of what was about to happen. I wondered if they were hoping that their Judicar would die of a heart attack in the next few minutes so that they could escape to heaven.\n\nNo matter. I closed my eyes and sought out Destruction.\n\n\"We are here, Master...\" the black flames whispered. \"We are hungry... and it is a beautiful night. Let us dance for you under the light of the ever-shimmering moon.\"\n\n\"I have grown weary of your disobedience in the past,\" I said aloud.\n\n\"Please, Master... all we wanted was to show our service. We have been shut away from you for so long. We miss your love.\"\n\n\"So be it,\" I said.\n\nI lowered my mental barriers and directed my power.\n\nSmall shadow flames guttered and sparked at the ground around the sword sheathed in the earth. The grass around the sword didn't burn. I kept Destruction focused and intent.",
        "Slowly, wisps of black flame crawled up the blade. Then, within a minute, the flames surrounded the entire sword.\n\n\"Destroy,\" I said calmly.\n\n\"Yessssss,\" hissed the flames.\n\nWith their fetters removed, the black flames began to feast and glut themselves upon the blade. The silver metal darkened and cracked and splintered. Throughout the night, the flames of Destruction sounded like breaking bone and twisting metal.\n\nOn a hint of wind, I thought I could hear the angel in the blade screaming.\n\nThen the blade was gone. Not a trace of it remained. There was no ash, no shards or fragments. It had been obliterated... utterly and completely.\n\nThe black fires died down at my command.\n\nNow it was time to wait. There was more killing to be done this night.\n\nDestruction cackled with glee at the thought.\n\n***\n\n-Alarial-\n\nEzrih's wings thudded heavily around us as we moved swiftly, high over the coast. We had passed over the channel and the tip of England in a matter of hours. Now we were traveling quickly up the shores of Ireland.\n\nHigh cliffs and rocky beaches blurred by. It was bitterly cold up here in the sky, and I had to take slow, short breaths to keep dizziness at bay.\n\nJon was sitting up straight behind me. His hands were clasped loosely around my waist, holding me steady, keeping me warm. Daniel was behind Jon. I had glanced back at him once. He was hunched over with his eyes clenched shut.\n\n\"We're nearly there now,\" Jon whispered in my ear.\n\nI nodded, shifting in anticipation.\n\n***\n\n\"We have arrived,\" boomed Ezrih. His voice was loud and animalistic in this form, his words choppy from speaking through rows of razor teeth.\n\nThe great black wings all around us slanted to the right, and we began to circle in the air slowly. Below us, a mansion made up of stone and mortar and climbing ivy sat on a small hill. Around the building proper was a sprawling garden made up of large old oaks and twisting flower blooms.\n\nThe place looked wild. The place looked cared for.\n\nI closed my eyes. In my mind I could see my Dark God carefully tending his garden... his soft red eyes looking down at his creations with intent and care. For a brief moment, I allowed myself to fantasize about living here with him... strolling by blood-red roses and gnarled trees under a starry sky.\n\nWhen I opened my eyes again, we were nearly on the ground. The wind under Ezrih's wings batted leaves and dust away as his claws touched down on the ground. The demon's great black body settled, and his large muscles knotted and relaxed as he sat down on his haunches.\n\n\"Please get off my back,\" Ezrih growled. \"If I hurry, I can attend to another task the Master has given me before the sun drives me to shelter.\"\n\nJon adeptly swung his leg up and over, dismounting with grace. He held his hand up to me, and I took it. He gently aided my dismount. It felt good to touch solid ground again.\n\nDaniel slid to the ground, his knees buckling. His face was green, and his body shuddered. He dry-heaved once, but didn't puke.\n\nEzrih's monstrous body took on its transformative red glow. I listened as tendons and joints snapped and popped as the demon's body reworked itself. In a moment, Ezrih stood before us as he once looked... all angular and pale. His sharp white face had a tiny smile on it. He looked pleased with himself.\n\n\"Thank you, Ezrih,\" Jon said with a bow. \"We owe you our lives.\"\n\nEzrih returned Jon's bow. \"It was a good night, brother,\" Ezrih said. He looked at all of us with his unholy eyes, and bowed to me as well. \"I have been instructed to tell you to wait within the manor house until the Master arrives.\" Ezrih paused. \"You are not to leave for any reason.\"\n\nJon cocked his head, and I could swear he glanced over at Daniel. \"Where are you going, Ezrih?\"\n\nThe demon's black wings unfurled. \"I have been given another task by the Master, and I must be away to meet Raak. If I hurry, I will make good time. Farewell.\"\n\nWithout our weight on his back, the demon moved with a speed difficult to comprehend. His dark wings hurled him into the air, and before I could blink, he was darting away through the sky.\n\nJon turned to Daniel, who was still looking faintly ill.\n\n\"Well, Monster Hunter,\" Jon said with a smile, \"you've gone above and beyond the call of duty. I think you have earned your gold and more besides.\"\n\nDaniel straightened himself as best he could and returned Jon's smile. \"Thank you, Jon. We've come a long way, and I didn't expect to see an Afflicted or a Bra'rul on our little journey.\"\n\nJon gestured for us to follow him to the house. \"Well, thank you for taking Ezrih in stride. I know your trade and your guild might have demanded that you attempt to slay him.\"\n\nDaniel shrugged. \"No one was paying me to slay the demon, and he was saving my life at the time. I truly never even thought about it.\"\n\nJon pushed open the heavy dark oak doors that led into the manor house.\n\nThe smell of Master's magic hit me like a thunderclap.\n\nShivers dotted every inch of my skin. I could feel my sex throb and clutch and dampen in reaction to the pervasiveness of his presence. But... Ezrih had said that Master wasn't here. Why would he send someone for us, but not be here to receive us?\n\nJon and Daniel were still talking.\n\n\"Do you think I could stay the night here?\" Daniel asked. \"It has been a long journey, and I'd like to be rested before I take my leave.\"\n\n\"Of course,\" Jon said as he handed the monster hunter a handful of thick gold coins from the purse. \"Here is your payment. The mansion has spare rooms in the servants' quarters, and I'm sure our Master will want to thank you personally when he returns.\"\n\n\"Would you mind if I went to bed? Daniel asked.\n\nJon smiled, and he gave Daniel instructions to the servants' wing.\n\nDaniel turned, said goodnight to me, and disappeared down the corridor.\n\nAs soon as he was gone, I whirled around to face Jon. My voice came out breathy and low as I struggled to contain my excitement. \"Which room is Master's room, Jon? I have to be ready for when he returns,\" I said all at once.\n\nJon raised his hands in bewilderment. My gaze flicked to his missing ring finger, and I felt a twinge of guilt. I hoped Master and his magic could fix his hand.\n\n\"Calm down, Maria,\" Jon said. \"I believe the Master will be back to take refuge from the sun by daybreak. You have plenty of time to get his sheets toasty.\"\n\nI could feel heat creeping into my cheeks. Every once in a while I realized how odd and desperate my sexual cravings for my Master must seem. Others might not understand how much I needed it. Even now my body felt pent up and eager. My sex felt unused, my felt neck unbitten. I had too much blood in my body...\n\n\"There's no need to be like that, Jon,\" I said softly. \"I can't control the cravings.\"\n\nJon sighed and ran his noninjured hand through his hair. \"I didn't mean to sound like a cad, but I've been on edge. I'll walk you to the Master's bedroom, but while we walk, I must tell you some things about Daniel in privacy.\"\n\nAbout Daniel? I wondered.\n\n***\n\nJon led me up a grand staircase just off the main hallway. The old boards under the plush carpet creaked as we ascended. The smell of Master's magic had become overwhelming. It was all I could do not to fall to the floor and whimper.\n\n\"Daniel is not our ally, Maria,\" Jon said suddenly as we made it to the landing at the top of the stairs. His words managed to pierce through the ever-growing haze that Master's magic had created about my mind.\n\n\"What do you mean? He saved me from that scary woman. He tried to protect me on the ship!\" I exclaimed.\n\n\"It is not you he wants to hurt,\" Jon said slowly. \"It's Devnik.\" Jon's words sounded far away as he elaborated.\n\nDaniel is a Judicar. Daniel is a member of the Light. He bested Master in a duel for immortality five hundred years ago, on a battlefield outside of the Holy City. He seeks to kill our Master, so that he might find forgiveness for accepting unholy eternal life.\n\nRed tinged the side of my vision. My hands were clenched tightly at my sides. It was all I could do to hold myself in one place. My feet itched to fly back down the stairs and rip Daniel limb from limb.\n\n\"Maria, calm down!\" Jon said in a sort of hushed shout.\n\nI blinked and looked down at myself. Blue sparks crackled violently at the ends of my fingertips. My entire body felt light and quick and deadly.\n\n\"Take a deep breath,\" Jon said. \"Devnik will be back later tonight. It will be safer to let him handle our 'friend,'\" Daniel said softly.\n\nI did as Daniel asked, and I gradually felt my power fading. I was almost sad to see it go. The world looked dimmer without my magic crackling at the surface of my being. No wonder Master was so arrogant. Magic made you feel invincible.\n\n\"This is the Master's room,\" Jon said as we stopped in front of a large door at the end of the upstairs hallway.\n\nOne sniff of the air and I knew it was true. Master's magic crept out from under the door like a thick fog.\n\n\"Try and get some sleep,\" he said as he turned the handle. \"I have a feeling that something is afoot beyond our trouble with Daniel.\"\n\nThe door swung open, and my mind stopped as I looked inside.\n\nBound up in chains of pitch black iron was Cariel.\n\nHer red flowing hair was like a flame as it trailed down her pale, shivering body. The tips of her locks ended just at the slope of her breasts. Harsh and angry lashes colored her thighs and sex. Her collar glimmered with green runes around her slim throat.\n\nNo, I thought numbly. Master wouldn't. He loves me. ME, not HER!\n\nMy rage felt like a living thing as I took in the sight of the red-haired angel bound up in my Master's chains. The last time I had seen her she was cutting a line across my Master's chest. I wanted to strangle her. I wanted to weep.\n\nI wanted my Master. I needed to know why.\n\nCariel stirred in her chains. Her eyelids fluttered and her silver eyes opened. She took one look at me and her face crumpled. Her eyes filled with a thin film of tears. She lowered her head, and her hair fell like a curtain over her face.\n\n\"Don't look at me, sister,\" she said hoarsely, in a voice filled with more shame than I had thought possible.\n\n\"Please don't look at me.\"\n\nChapter 11\n\nRain and Flame\n\n~Humans live two lives. First, they live out their mortal years, and those determine if they shall fall unto Hell, or ascend unto Heaven. Second, they live as a soul of either Light or Dark. When the soul dies... it vanishes unto Nothing. ~The Third Lesson of the Magician's Guild.\n\n-Devnik-\n\nClouds rolled in across the night sky... quick and low and determined.\n\nMy tongue flicked out to taste the air. It was heavy and filled with the promise of rain. I turned my head up, and watched the stairs and moon disappear behind the clouds.\n\nIt was better than staring straight ahead. It was better than staring at the spot where the sword with an angel inside it had been consumed. Half an hour had passed since then. The Light was responding slightly slower than I had estimated.\n\nThen I caught their scent out of the air. I hadn't noticed it at first, the smell of humidity and damp earth had masked their magic.\n\nI turned my eyes northward. There were eight of them. An ordinary detachment of Legionnaires numbered at seven, no more, no less. Seven is the number of the Light.\n\nAn extra angel was accompanying their sortie.\n\nThey were about thirty miles away. I would have about one minute before they were upon me. I uncrossed my legs and slowly got up from the ground. Stray pieces of grass clung to my trousers, and I brushed them off.\n\nTheir white wings were now visible on the horizon.\n\nI rolled my head back, and my neck popped gently.\n\nThey come to play... they come to burn... they come to die, cackled Destruction in the back of my head.\n\nI clasped my hands behind my back. My cloak billowed dramatically in the wind, and the ruby at my neck glittered malevolently. I'm sure I cut quite the figure.\n\nThe angels landed heavily. They had to brace themselves with a hand and drop to one knee. Seven of the angels wore brilliant gold armor that swirled with ornate decorations. Blue wards glistened as they moved along the surface of the metalwork. Each angel wore a matching helm with tiny stylized angel wings clinging to the sides. Their visors were down, which obscured their faces. These were the Legionnaires, the golden foot soldiers of the Light.\n\nI eyed the swords they kept in their sheathes. They were not swords of power. An angel that could materialize a sword of power was given greater rank.\n\nThe other angel was Viriel. He was dressed in the ornate white robe and blue cape of an Ophanim rather than the furs and sapphire of a Legionnaire commander.\n\nThat was odd.\n\n\"Good night to you, Viriel,\" I said as all the angels straightened to their full height. The Legionnaires all grasped the pommels of their swords. I ignored that.\n\n\"It would seem that you've been promoted,\" I continued as I flashed him a wide smile.\n\nThe blond hair that Viriel usually kept tied back hung loose around his angelic face. For a brief moment, I could see Maria standing next to him... as his Aethling wife. They would have both been bright and blond and utterly sinless together... had it not been for me.\n\n\"Demon,\" Viriel said, \"I am here under orders tonight not to settle our personal debt. However, I suspect that both my orders and the call of my feelings might be in alignment.\"\n\n\"Does being an Ophanim instead of a lowly Legionnaire make you happy, Viriel?\" I said mockingly. \"What sort of rewards do your heavenly task masters dole out, I wonder?\"\n\n\"QUIET!\" Viriel roared, his voice echoing across the tree tops, his hands clenched and shaking.\n\n\"I am here under the authority of High Lord Michael the Valiant to investigate an extreme spike in Dark magic that resulted in the death of the angel Hariel, Guardian of the Fifth Sphere,\" he spat. \"What do you know of this, cretin?\"\n\nViriel was the only angel I had ever met who was both astronomically inferior to\u2014and rude\u2014to me. Only the highest-ranking angels, like Arch-Angels or Seraphims, could even dream of going toe-to-toe with me... and the Seraphims would be wise to bring at least four or five friends. If Viriel had any sense, he would be shivering in his boots.\n\nThe dew on the ground froze and clung to blades of grass as I drew my powers close. A lurid red tinged the sky. The Legionnaires all drew their golden swords. They held them up and at the ready as they shifted into a low combat stance.\n\n\"I've never really understood why angels volunteer to be sealed inside a sword,\" I said whimsically. \"It's hard to fight back encased in metal. It's hard to call for help. I recently discovered that it's hard to even scream.\"\n\n\"Slay him, men!\" screeched Viriel as he waved his hand in an intricate motion. A short sword with a silver handle and a blue blade appeared in his hand.\n\nThe golden soldiers all rushed at me, weapons raised. Metal clanked and rattled as they ran in their armor. To my eyes, with my powers drawn close, they looked as if they were moving with comedic sluggishness.\n\nI clapped my hands together, and the ground shook slightly. Between my palms, a bright orb of red magic thrummed into existence. The ball of energy pulsed like a heartbeat as it grew large and brilliant. I watched as the eyes of the Legionnaires grew wide and fearful. But it was too late for them.\n\nI pulled my hands apart, and the orb burst with a deafening boom. A shockwave of crimson magic ripped through the Legionnaires. They were knocked skyward like paper dolls. Their bodies tumbled through the air like spinning leaves for a quarter-minute before landing hard and awkward on the ground.\n\nAll seven of them lay unmoving. Their once golden armor was blackened and bent. From the joinings between their breastplates and pauldrons, I could see blue blood leaking slow and thick onto the field.\n\nViriel was flat on his back, wrapped up tight in his white angel wings. His feathers were charred and flaking, but they had spared him the brunt of my spell.\n\nHe got shakily to his feet. He sheathed his wings on his back, and they disappeared. His cape was in tatters, but he looked unscathed otherwise... apart from the look of bone deep dread in his eyes.\n\n\"All those years...\" Viriel said softly, almost as if he were talking to himself.\n\nI held a hand up to my ear. \"Speak up, angel. Muttering ill becomes you,\" I said cruelly.\n\nViriel took a deep breath and set his shoulders.\n\n\"For all the years that you and I have fought, you have never used that much power,\" he said. He spoke loudly, but none of the previous arrogance even touched the edges of his voice. \"Why did you toy with me for centuries, demon?\" Viriel asked. \"And why would you reveal your true strength now?\"\n\nI glanced up at the sky. It was still covered with clouds, and not a single star was visible.\n\n\"I toyed with you because it amused me,\" I said truthfully. \"When you are as powerful as I, any fight becomes rare and entertaining. So, I let you think we were evenly matched so that you might stand and face me again someday, rather than run and cower.\"\n\nViriel's silver eyes flickered as he spoke. \"When others told me of your power, I thought they overestimated you.\" He paused. I could tell how much he hated being played for a fool. \"What changed?\" he asked.\n\nI shrugged. \"Tonight, I am under orders as well. I do not have time to dally with you, or your shiny friends,\" I said, gesturing to the fallen Legionnaires.\n\nThere was a pause, and we both looked at the bodies. One of them stirred.\n\n\"Devnikolus,\" Viriel said, \"please, let me gather my wounded men. We will depart to lick our wounds. You have won the day.\" He took a deep breath. \"I cannot promise you that Heaven will not dispatch agents to make you atone for the angel you killed tonight, but I promise that I will tell Michael of the mercy you showed my legion.\" His voice was pitched low. It sounded like pleading, which was only one small step away from begging.\n\nSomething tugged at my emotions. I felt a tightening in my chest. Viriel's words reminded me of why I hated fighting Lucifer's war. But, I had no choice. I feared the Devil more than my own underused conscience.\n\n\"I'm sorry, Viriel,\" I said. \"But I can't. My actions aren't my own tonight.\" His eyes widened, and for a moment, I think he heard the utter sincerity in my voice.\n\nThen I snapped my fingers, and all seven of the wounded Legionnaires were engulfed in shadow black flames.\n\n\"NO!\" Viriel screamed as he ran to his men.\n\nThe Legionnaires on the ground howled in pain as Destruction ate at their very beings. Viriel stopped just short of touching them. He hopped up and down and cursed and cried at his helplessness.\n\nHe turned to face me, his sculpted face awash with glimmering tears.\n\n\"Please,\" he sobbed, \"don't do this.\"\n\nI could feel tears of my own gathering in my eyes. I touched my cheek, and my fingertips came back wetted with black demon tears.\n\nThen, the sounds of agony died down, and the flames dissipated. The Legionnaires were unmade.\n\n\"I have to tell him... have to tell him...\" Viriel chanted through his grief. He staggered away from me, and his injured wings erupted from his back. The feathers that were burnt fell off as he flapped his wings during takeoff.\n\nI didn't move as I watched him fly away. His movements were erratic due to his injuries, but soon enough, Viriel slipped over the horizon.\n\nJust then, a thunderclap rumbled through the sky and cold rain began to fall.\n\nI kept my eyes on the spot where Viriel had disappeared. When I was sure that he was gone, I teleported away from my killing field, and back to the manor.",
        "***\n\n-Cariel-\n\nShame.\n\nThat was all I could feel. It burned hotly in my veins.\n\nThrough my hair, I could see Alarial standing in the doorway. Her face was a masterwork in conflicting emotions. I could see rage clearly in her eyes... and I could see jealousy in her balled fists. However, underneath all of that, her sadness was the most profound. She truly and utterly loved Devnikolus.\n\nMy body twitched in the chains reflexively.\n\nI was a hypocrite. I was pathetic. Not more than a few nights ago, I had sanctimoniously preached about how I would rescue her from the demon controlling her mind. She had begged me to just go away... but I didn't listen.\n\nNow the demon had me as well. I was tied just as tight as her. Sisters in blood and sisters in service. Degrading, pleasure-wrenching service.\n\nAlarial took a step forward into the bedroom. The soulless knight kept pace with her. He looked as if he were readying himself to restrain her if necessary.\n\n\"Tell me what happened,\" Alarial said. Her voice was pitched in the unnatural calm that sometimes precedes loud and terrible anger.\n\nI peeked up and made the mistake of looking straight into my sister's bright silver eyes.\n\nMy heart wanted to apologize. It wanted to beg forgiveness. But my mind was sullen, and my shame had awakened my battered pride.\n\n\"I think you know,\" I said sullenly.\n\nAlarial nodded. \"Yes,\" she said, \"I think I do.\"\n\n\"Well, well!\" called a voice from the doorway. \"Look what I've stumbled onto!\"\n\nAlarial and the soulless knight whirled around. I peered over Alarial's shoulder trying to get a glimpse of the speaker.\n\nA man with dirty blond hair stood at the threshold of the doorway. In his hand he held a sword. Along the flat of the blade the words \"Fleeting Light\" gleamed with blue magic. The man was a Judicar, a mortal selected to be a judge of Heaven.\n\nThe soulless knight smiled consolingly and took a step towards the Judicar. \"This isn't what it looks like, Daniel,\" he said. \"This angel wronged our Master. No harm will come to her. Besides, what do you care? No one has paid you to do anything, Monster Hunter.\"\n\nThe man called Daniel spat, glaring at Alarial and the knight with loathing. \"I heard your conversation on the landing, Jon,\" he said bitingly. \"I know that I didn't succeed in fooling you for even a day.\"\n\nA thunderclap echoed in the distance.\n\nJon raised a hand. \"Be very careful what you do, Daniel,\" he said. \"You are in The Prince of Destruction's house... and he will be\u2014\"\n\nJon was cut off when Daniel raised his free hand. Blue magic erupted from his palm, and Alarial and Jon were flung in different directions. They rattled off the walls with a dull thud.\n\nDaniel rushed over to me. \"Quickly, m'lady,\" he said breathlessly. \"We must get you free of those chains before Devnikolus returns. I have a thrice blessed cross that can aid us, but I will still need your help to destroy him.\"\n\nI could feel my eyebrows raise. A thrice blessed cross was a rare thing and took years to make. However, they could drain an enormous amount of power from demons. Such an advantage might have been enough to tip the scales in his favor... if I had been capable of fighting.\n\nI thought about telling Daniel that I couldn't help him. I thought about telling him about the collar around my neck. I nearly did. I opened my mouth to speak.\n\nThen I realized the collar felt warm and soothing as it rested against my skin. I had never realized how bare my throat had felt before. Suddenly, the thought of having my collar removed made my muscles tense in fear. It was easier to be owned. All I had to do was let myself float away and fill myself up with His will. All I had to do was move at his word.\n\nDaniel was oblivious to my inner turmoil.\n\nHe raised his sword and brought it down hard on my chains. The moment his blade touched the dark iron, red magic whooshed into life, and demonic runes began to glow fiercely all over the room.\n\nSuddenly, the manacles around my wrists and ankles released me, and I fell to the floor. The chains that had entrapped me began to writhe like snakes.\n\n\"No!\" Daniel yelled hoarsely. \"Shit, Vraiel... help me! It's a trap!\"\n\nDaniel's human brown eyes filled with power and changed until they were colored silver. Blue sparks gathered around his hands... but I could already tell it wasn't enough.\n\nThe power that radiated from the wards placed on the chains and in the room was unbelievable. It bore down like a heavy, oppressive weight.\n\nThe wriggling chains lunged, and both manacles encircled Daniel's wrists. His sword fell from his hands and clattered onto the wooden floorboards. Daniel thrashed violently as the chains pulled him up off the floor. He kicked his feet madly as they dangled in the air. Then, the ankle restraints had him... and his feet were immobilized.\n\nDaniel looked more beast than man as he tried to jerk his arms and legs out of his bindings.\n\n\"No! I'm so close! I'm going to get you! Show yourself, Devnikolus! Come and let me KILL YOU, YOU THRICE CURSED BASTARD!\"\n\nDaniel's voice sounded broken and crazed. Never in all of my fifteen hundred years had I heard a human scream as he did.\n\n***\n\n-Alarial-\n\nMy head throbbed from hitting the wall.\n\nA spell of dizziness blurred my vision and obscured my hearing. It was like trying to see through a fog, like trying to hear through water. I could hear screaming. Terrible, rabid screaming. But I couldn't discern the words.\n\nJon! I thought to myself frantically. What if Daniel is killing Jon?\n\nI shook my head, trying to clear it. A sharp pain gathered at the back of my head and neck, but my vision did slowly clear.\n\nI had to get up. I had to get up.\n\nNow was not the time to let my Master down. The moment I thought of my Master was the moment I mastered myself.\n\nBlue sparks filled my vision as I rocketed to my feet. My eyes found Daniel's face, and I raised my hand. Lighting arced from my hands. The magic hit Daniel squarely in the chest. Sparks danced angrily across his body as the magic crackled down to the bottoms of his toes and the tips of his fingers.\n\nDaniel opened his mouth to scream, but only a dry, rasping noise scraped from the back of his throat. Chains rattled as his arms and legs twitched in them.\n\nThat wouldn't do, I thought darkly. He needed more pain. He wanted to kill my Master. He needed all the pain I could give him.\n\nI raised my hand again and more blue power came eagerly to my palm.\n\n\"Alarial! Stop!\" screamed the voice of Cariel.\n\nBut she seemed far away, and Daniel's agony-ridden face was all I could see.\n\nSuddenly, a soft body tackled me, and I fell to the ground with them on top of me.\n\nI blinked.\n\nCariel's naked body was on top of me. Her hands were pressed against my shoulders, holding me down. Her silver eyes were glistening with tears.\n\n\"Please stop, sister,\" she said softly, in a voice that sounded small and gentle. \"Please, he's already locked up in chains. Look.\"\n\nShe rolled off of me but kept a tentative hold on my arm. Daniel was dangling limply in the black chains that Cariel had just been restrained in.\n\n\"How?\" I said in slow wonder.\n\nCariel rubbed my arm. \"The Master must have somehow anticipated this Judicar. He had the chains spelled to trap the first one to touch them.\"\n\nThis was all too much. Master had somehow known about Daniel? Cariel called my Dark God Master now too? Cariel was acting as bait for Daniel?\n\n\"I didn't know about the spell,\" Cariel said, having seemingly read my thoughts. \"He never tells me anything.\"\n\nThere was a pause.\n\nThen I giggled.\n\nFor a brief and absurd moment, I giggled at something this red-headed angel said. A part of me hated the fact that I was sharing this moment with someone who I should despise, but I couldn't help it.\n\nCariel's eyes narrowed slightly, and I couldn't tell if she was angry at me for laughing, or questioning my remaining sanity.\n\n\"That does sound like him,\" I said as an explanation.\n\nCariel gave me a wide smile of her own... one that reached her eyes. We sat there like that for a full moment, quietly grinning at each other. Then her smile faded, and she looked away. Her cheeks darkened as she blushed.\n\nShe made a haphazard attempt to cover her bare breasts with her hands, and she crossed her slim legs.\n\n\"I'm sorry,\" she said. \"I'm naked... and I know you must hate me.\"\n\nShe looked so vulnerable and hurt. She looked nothing like the proud creature that had bravely attempted to defeat my Dark God.\n\nIn that moment of vulnerability, I saw how similar we were.\n\n\"Did you call me sister a moment ago?\"\n\n***\n\n-Devnik-\n\nI appeared in the entrance hall with my hair slightly damp from the rain. I shook my head, and small little droplets scattered. For a brief moment, I paused to collect myself. Seven angels had just died by my hand. Despite Orias' assurances, I didn't feel entirely comfortable provoking the Light in such an open manner. Perhaps I was out of practice... It had been a long time, after all. But still, after tonight, I would be in for a fight very soon.\n\nWith my mind settled, I began to calmly walk up the stairs to the master bedroom.\n\nI knew Daniel was in my house. I had smelled the stink of his sword from the field. He didn't concern me. Especially after what I had just done.\n\nBefore I was even halfway up the stairs, I felt a tug on my magic, and I knew the Judicar had sprung my trap. Cariel did make delicious bait after all. It had probably helped that she had a few belt marks on her. The Light loved their heroics.\n\nIdiots, all of them.\n\nAnd Daniel might just be the biggest idiot of them all.\n\nI paused on the stairs to listen to his incoherent screaming. My lips curled into a smile. I had to force down a small chuckle.\n\nThen, suddenly I saw a bright blue flash. The smell of foreign Light magic lit up my bedroom like a beacon.\n\nNo, it couldn't be. There was no way Daniel could work magic when he was bound in chains made by my own hand. I blurred up the rest of the stairs and up to the open door in time to hear Cariel scream, \"Alarial! Stop!\"\n\nWith my eyes, I scanned the room, using my powers to enhance my perceptions. Within a mere second, I had taken in everything.\n\nJon was in the corner of the room. His skull was cracked, but his immortality was healing him.\n\nDaniel was uncurious as well. He was bound up in the chains that I had left to trap him. There were small scorch marks on his clothes and skin, and a red line of blood dripped from his nose.\n\nThen, my eyes landed on them.\n\nCariel was on top of my Maria. For a moment, my stomach tightened. Maria's face was twisted in rage and confusion. Her eyes looked slightly unfocused, but she was no less lovely.\n\nEven there, rumpled and splayed out on the floor, she looked beautiful. Her thick blonde hair fanned out in a golden wave behind her. Her pale and strong jaw quivered as she looked up at Cariel. A weight that I hadn't realized I was carrying suddenly slipped from my shoulders.\n\nMaria was here. Maria was safe.\n\nShe was right there. I could go touch her if I wanted. My hands had missed the soft feel of her.\n\nI was about to step in and drag Cariel off of her when I heard the red-haired angel speak again.\n\n\"Please stop, sister,\" she said in a voice that didn't carry a hint of violence. \"Please, he's already locked up in the chains. Look,\" she said.\n\nIn an instant, I decided there was no danger. With a flick of my finger, I cast a spell of invisibility. I disappeared from the threshold just as they looked at Daniel.\n\nI wanted to eavesdrop on them. I wanted to know what they would speak of while they thought they were alone. Beings of my power rarely hear the truth of what others think of them. Most are afraid to speak the harsh words they carry in their hearts. Some might think this is a blessing, but they don't know how lonely it is.\n\n***\n\nI laughed silently along with Maria when Cariel pouted about being used as bait. My mirth soured slightly when Maria made a joke at my expense.\n\nI thought that would be a good time to reveal myself. It would be fun to let them know I caught them being naughty. Their punishments would be... delightful.\n\nThen Maria spoke. \"Did you call me sister a moment ago?\"\n\nCariel stiffened, and then nodded. The naked angel was sitting cross-legged with an arm over her breasts. I doubt she could have imagined a worse situation to talk about their relation to one another.\n\nCariel struggled to speak. When words came, they sounded stilted and heavy with embarrassment. \"We're half-sisters,\" Cariel stuttered. \"We have the same mother.\"\n\nMaria ran a hand through her hair. She looked hard at Cariel, as if trying to see the family resemblance.\n\n\"That's why you tried to save me,\" Maria said. \"You were family.\"\n\nCariel nodded. Tears glimmered in her eyes. \"Yes. I had to try. No one else would.\"\n\n\"Why didn't our... um... mother try to help you?\" Maria asked.\n\nCariel laughed darkly. The sadness that had been threatening to overcome her was quickly replaced with smoldering fury.\n\n\"Mother is far too important to disobey orders,\" Cariel said bitterly. \"No... she was all too willing to fall into line when Seraphiel gave the order to abandon you as a lost cause.\"\n\n\"I see,\" Maria said sadly. \"I guess I'll never get to meet her anyway. I doubt that Master would arrange for us to meet.\"\n\nCariel shrugged and glumly looked down at her bare toes.\n\nThey both lapsed into silence for a moment. I wanted to know what they were both thinking.\n\nThen Cariel spoke. \"I guess none of this matters anymore. We're simply the kept women of a demon now. Our futures are what he makes of them.\" Cariel looked up, fixing her sister with a look. \"Doesn't that powerlessness frighten you? Don't you wonder what will become of us?\"\n\nMy patience was suddenly exhausted.\n\nBefore Maria could respond, I stepped smartly into the room and let my invisibility spell fall away. Both of them jumped in surprise.\n\nI smiled at them, basking in their expressions.\n\n\"Hello there...\"\n\nChapter 12\n\nDark Embrace\n\n~We each carry a sadness that lies heavy within us. Most of the time it is obscured, lost beneath muddied waters. But sometimes, in times of great stillness, the silt settles, and we can see our sadness, lying hard as ice in a crystal cool pool.~ An Old Fae Parable\n\n-Alarial-\n\nTwo little words.\n\nThat was all it took...that was all that I needed.\n\n\"Hello there...\" came the silky baritone of my Master.\n\nJust his voice reminded me of his hands on my breasts... his teeth against my flesh...his heavy ivory manhood as it roughly invaded my sex.\n\nBut that was not all I remembered. I also remembered his whispered words...uttered close against my ear. I remembered him saying, \"I love you Maria, and I think I always have.\"\n\nWith those words ringing in my ears, I turned, and looked upon my Master.\n\nHe stood in the doorway and he looked every inch the Dark God.\n\nHis midnight hair was slightly damp, and water dripped slowly from the tips of it. At his shoulders, his dark black cloak hung down to his feet. The fabric was pinned with the deep red ruby that he seemed to like so much. The gem seemed to sparkle even though no light touched it.\n\nBut none of these mattered compared to his eyes. His eyes were dancing. They glowed red and warm and welcoming as they looked right at me.\n\nHis perfect face and lips were drawn up into a smile, \"I'm right here pet,\" he said with outstretched arms.\n\n\"Don't keep me waiting.\"\n\nA laugh skipped out of my throat before I could stop it. I scrambled up off the floor, and over to the creature I loved.\n\nI was full up of joy and bubbling happiness.\n\nI didn't slow until I bumped forcefully into his chest. He didn't budge an inch. Instead, he drew his arms around me and held me tight. I was right next to him...it felt like a dream. It felt like everything would suddenly be alright.\n\nI wanted to meld with his very being. I wanted to slip inside of him, where I could lay down and inhale his essence with every breath. There, I could doze and languidly sleep forever...contented and at peace.\n\nMaster's hands trailed down my flanks. He caressed the sides of my breasts, then continued downward, until he reached my thighs and buttocks. His fingers pressed into the soft skin there, and I mewled into the crook of his neck.\n\nThen suddenly, I felt a hand grab at the back of my traveling dress. With a great heave, I was forcefully yanked backwards, and I slipped for my Master's grip.\n\nWith a quick turn, I slapped the hand clutching at my clothes. Cariel withdrew her hand quickly. She rubbed it while glaring at me. Her silver eyes had narrowed into focused slivers, and she darted her gaze back and forth between me and Devnik.\n\nMaster looked amused, \"Do you think to keep Maria from me little Cariel?\" He said in a voice rich with mockery.\n\nCariel squared her shoulders, and drew herself up. She didn't look particularly imposing. She was still naked, and angry welts still colored her thighs.\n\n\"Her name is Alarial, Master,\" Cariel spat. She put a disrespectful emphasis on her words. \"And I sacrificed a great deal to keep her from your grasp.\"\n\nListening to her was like listening to myself...back when I didn't truly accept that he owned me. That denial had made me angry and irrational.\n\nDevnik raised a perfect eyebrow, \"And how do you plan to keep her from me little one?\" He asked. \"You can't even keep yourself from me.\"\n\nCariel grew rigid and tense with anger. Her fists balled at her sides, and for one brief moment I thought she would try to punch him. Then, something unexpected happened. Cariel took a deep breath, and both Devnik and I watched her anger cool.\n\n\"I hate this,\" Cariel said softly. \"My emotions keep swirling inside of me. It's like living in the center of a windstorm. I can't settle myself, I can't keep myself from getting caught up in the gale.\"\n\nMaster's face turned thoughtful. For a brief moment, a silence stretched out, and the only sound that could be heard was Daniel's wheezing breath.\n\nDevnik cast an irritated look at Daniel's bound form. He snapped his fingers, and Daniel disappeared in a flurry of red sparks.\n\nThere was a silence following Daniel's disappearance.\n\nCariel had her eyes fixed on the floor in front of Devnik. She was shaking slightly...but not in the way one does when they are cold. Rather, she shook with the frantic movements of someone in the throes of great fear...or great anticipation.\n\nFinally, Master spoke, \"Perhaps you need a few moments to settle yourself.\" He motioned to a corner of the room.\n\n\"Jon,\" Devnik said, \"if you could be so kind as to escort Cariel to the guest quarters I would greatly appreciate it.\"\n\nWhile we had been talking, Jon had been busy dragging himself up off the floor. There were flecks of dried blood on his clothes, but he otherwise looked quite recovered from Daniel's spell.\n\n\"Good to see you again too Master,\" Jon said with a smile. \"I was worried that you were losing your touch. You had been in the room a full five minutes without giving me an order.\"\n\nDevnik smiled and waved a casual hand, \"You'll wish I had forgotten about you very soon. Cariel needs someone to watch her and calm her down.\"\n\nCariel widened her stance and raised her arms slightly. She stared at Jon with a look that would make a statue cringe.\n\n\"Just you try and take me somewhere little human,\" Cariel said venomously, \"I'm not done talking to him.\"\n\n\"Cariel...\" Devnik intoned softly, drawing her attention from Jon, \"Why are you being difficult? You said you were feeling emotional. I am generously allowing you time away from me. Isn't that what you want?\"",
        "The red haired Angel blanched, \"I, um...yes...\" Cariel was cut off as her face began to pale. She started choking on her words before she could get them all out.\n\nThose of the Light cannot lie.\n\nDevnik continued on, his voice pitched low and dangerous, \"Tell me the truth then Cariel. I am giving you a direct command to tell me what you want.\"\n\nThe green runes around her collar flashed.\n\n\"I want to be yours!\" She screeched as she fell to her knees. Her slim hands shot up to her collar. She tugged on the metal band. Muscles and tendons bunched up tight as she tried desperately to pull it off. But it didn't move.\n\nAnd all the while she spoke...driven by the compulsion magic.\n\n\"I want you to fuck me. I want you to hit me. I want to forget that I ever even had free will,\" She took a deep breath, and then continued, her voice cracking with unrealized sobs.\n\n\"I want to crawl at your feet. I want you to touch me...I want to touch you.\"\n\nCariel paused, and her hands fell from her collar. She simply knelt there, and spoke as softly as a whisper of wind.\n\n\"But most of all, I want you to bite me...please... I just want you to bite me...I'll do anything...I'll even love you...if you want me too.\"\n\nNow her tears started to fall. They slid down her cheeks in big droplets. Her chest rose and fell as she tried to recover from her litany of confessions. She looked wrung out...as if she had finally been squeezed of all resistance.\n\nI knew exactly how she felt. Now that Cariel had put it into words, I knew exactly what I wanted as well. I needed to make the blood deal with Master. Throughout the entire journey to Ireland, I had felt an overwhelming need for...something.\n\nNow I knew what it was.\n\nCariel and I were both addicted to Master's bite. We were sisters in service, pleasure...and mind consuming addiction.\n\n***\n\n-Jon-\n\nCariel didn't move from her place on the ground.\n\nI didn't quite know what to make of the situation. It wasn't every day that a creature as powerful as a Seraphim kneels and cries in the middle of a room. I spared a glance at Devnik and I met his red eyes.\n\nHe nodded to me.\n\nA servant's work is never done I suppose.\n\nI drew close to Cariel, making sure to keep my movements slow and visible. It felt like approaching a spooked animal. If I moved to fast she would either flee or fight.\n\nI placed one light hand on her bare shoulder. Her skin was hot to touch.\n\n\"Cariel,\" I said, \"Let me take you to the guest room. I'll find you some clothes, and then maybe you can get some sleep.\"\n\nShe swung her head around and looked at me. There was a vacancy behind her eyes...almost as if some part of her had fled, in order to escape the intensity of her feelings.\n\n\"Will master be okay if I go?\" She asked. Her voice sound soft and light...innocent like a child, yet sultry and concerned, like a woman.\n\n\"Master wants you to feel better,\" I said gently, in the caring tones I used to use on my own boy many, many years ago.\n\nCariel paused, and then nodded her assent.\n\n\"Come on then,\" I said, as I helped her to her feet, \"It's just down the hall.\"\n\nI held her hand as I led her from the room. As we passed Devnikolus at the door way, Cariel stopped, and looked at him with that same vacant expression.\n\n\"Would that be a fair deal Master?\" Cariel asked, \"If I give you my love will you take my blood?\"\n\nFor a brief moment, the good and noble knight that I used to be cringed at Cariel's words. This Angel wanted nothing more than to give herself, body and soul, to our Demonic master. Was this how Maria felt on the inside?\n\n\"Go rest Cariel.\" Devnik said simply.\n\nCariel nodded, and I tugged on her hand, and she allowed me to lead her out of the room.\n\nI closed the door behind us.\n\n***\n\n-Devnik-\n\nWe were alone at last.\n\nMaria stood in front of me, and I could tell simply by looking at her, that she had just realized this as well.\n\nShe was dressed in a dark brown traveling dress. Her blonde hair was mussed from the road, and a smudge of dirt was just visible on one cheek. Her silver eyes were looking down at my feet, and she was wearing a small, sweet smile. I noticed all of these things without meaning to.\n\nPerhaps that is what love is...being painfully aware of someone. So aware that you almost wish you never met them, so that your mind could be free of their laughter...and the looks that they give you when no one else can see.\n\n\"Master?\" Maria said, without lifting her eyes.\n\n\"Yes?\" I responded.\n\n\"I missed you.\"\n\n\"You saw me when you walked in my dreams,\" I replied with humor in my voice.\n\nMaria shook her head. \"It wasn't the same. We were distracted. We didn't talk about what mattered. We couldn't touch properly.\"\n\nI laughed, \"Yes, we did plenty of improper touching if I recall.\"\n\nMaria's cheek grew red, and she shook her blonde head.\n\n\"I was so scared....back in that field in France. I thought you might die.\"\n\nPoor girl...she had been carrying such a great weight on her shoulders. Two weeks ago she was a prostitute in Paris. Now she claimed to love me, the Demon Prince of Destruction.\n\nShe had even saved my life.\n\nI took two heavy steps towards her, and she fell back into my arms. She was soft and perfect. I took a deep breath. Her hair smelled like damp stone and clear autumn rain.\n\n\"Maria,\" I said, and I could hear that my voice had lowered, and taken on a serious tone.\n\n\"Hmmm,\" she muttered into my chest. I could tell she was quickly becoming caught up in how close we were. The awakening bond would cause her body to shiver with arousal in my presence.\n\n\"I want to say something to you...something that is rare for one of the Dark to say...and rarer still for them to mean it.\"\n\n\"What is it Master?\" Maria asked without taking her cheek from my chest.\n\n\"I wanted to thank you for saving my life. The magic from our blood deal existed outside of myself. Because of this, when you made your wish, I was able to use that magic to whisk myself to safety...even though I was caught unprepared in the sun.\"\n\nMaria drew away from me.\n\n\"Don't say that Master. If it wasn't for me you would have never been fighting in the first place. I'm so sorry that I've been so much trouble.\"\n\nBefore I could say anything...before I could point out how ludicrous that logic was...Maria dropped to her knees. She unbuttoned her brown dress, and it slide from her shoulders.\n\n\"Let me make it up to you Master,\" she said. Her voice was tinged with raw emotion. She genuinely believed that she needed to atone for some imaged infraction.\n\nHer pale breasts swayed as she leaned forward, and put her hands against the buttons on my trousers. She looked up at me, her eyes silently looking for permission.\n\nI nodded.\n\nShe gently unbuttoned my pants, and undid the laces holding the fly together. I was already mostly hard. She gave me a mischievous grin when she saw this. Her hand was caring and careful as she took hold of my manhood.\n\nShe inched herself closer, and lowered her head around my cock.\n\nSatin soft lips glided down my sex slowly. She pressed them hard around me, giving just the right amount of pressure.\n\nThen, her tongue swirled around the head of my sex.\n\nI stiffened, and let out a slow guttural growl. I let my eyes slide shut, and snuck both of my hands up into the tresses of her long golden hair. She moved her mouth up and down at a slow indolent pace.\n\nEvery minute or so, I would hold her head still, and she would simply kneel there with my cock unmoving in her mouth.\n\nMy climax was approaching. She lowered her mouth again. My hands moved to the sides of her head. I started to thrust back at her while I controlled her head with my hands.\n\nMaria didn't miss a beat, and she started to match my rhythm. She licked and sucked and moaned, and the combination of her wet tongue and the vibrations at the back of her throat undid me.\n\nWith a roar, I emptied myself into the back of her throat. Maria trembled in excitement and arousal, as she felt my cock pulsing on her tongue.\n\nI pulled her from my sex, and lifted her like a doll up into my arms. She giggled as she wrapped her legs around my waist, and put her arms around my neck. Her soft breasts and pointed nipples pillowed against my chest.\n\nShe tilted her face to the side, and looked at me questioningly. Then, she pressed her lips to mine.\n\nOur kiss was long and searching. It seemed to draw out for an eternity.\n\nWhen she finally pulled away her eyes were lidded with sleep.\n\n\"The sun will be up soon,\" she said delicately. \"You'll be wanting to go to sleep soon.\"\n\nI grinned at her. \"We're not done dear one. Not yet, not by a half.\"\n\nShe unwrapped herself, and I set her down on the floor.\n\n\"Go lie on the bed,\" I said. \"Lie on your back with your hands clasped behind your neck.\"\n\nShe walked slowly across the room at a languid pace. The air was thick with tension, and the smell of her sex permeated every breath.\n\nI let her lie on the bed for a while...so that she could suffer in wonderful anticipation. Then, I went to join her. With a soft hand, I spread her legs.\n\nWith my thumb and forefinger, I spread her sex, and gently trailed the pad of my middle finger across the sensitive flesh an inch deep in her channel.\n\n\"Master...so good,\" Maria muttered. Her legs gyrated as she fought to keep them parted. She drew a deep breath and said, \"Are you going to hurt me tonight Master?\"\n\nI shook my head. \"No pain tonight love, only pleasure.\"\n\nI took her ankles in my hands and pulled them up to rest on my shoulders. She whined slightly, and she pushed her sex up at me...desperate for me to keep touching her.\n\nI entered her slowly. I watched her wet sex hungrily stretch around my cock. Maria gave a sharp cry, and her body seized up before relaxing into a few tiny shudders. She was hot and tight, and her sex was clenching and welcoming.\n\nI pushed a little deeper, and I watched the last inch of my sex disappear into her.\n\n\"Every surrender feels like the first...doesn't it dear one?\" I said as I kept my cock fully seated within her.\n\nMaria nodded with her eyes closed. Strands of blonde hair had fallen over her face, but she didn't move her hands from behind her neck. I could tell that her entire being was focused on my manhood...hard and thick and unyielding.\n\nI pulled back all the way, and then back in...then out again. Soon, I built up speed, and the bedroom was filled with the meaty sounds of our flesh slapping roughly against one another.\n\nHer eyes opened as I grasped her thighs and pulled her pelvis up off the bed, allowing my cock access to the deepest parts of her. Her sex glazed eyes could hardly focus on me.\n\n\"After you come, I want to bite you little one. I will need you to offer me the blood deal for the third and final time.\"\n\nMaria moaned something that sounded like, \"yes.\"\n\nI quickened my pace to supernatural speeds. I slapped one of her breasts, and she shrieked in pain. I slapped the other breast, and she opened her mouth to cry out...but she uttered no sound. Her sex clamped down hard around me and her body became rigid and still.\n\nThen, the tension in her legs and sex drained away, and her ankles slide off my shoulders. My cock slid wetly out of her.\n\nMaria's eyes were closed again, and I watched her belly rise and fall as she struggled to compose herself.\n\n\"Maria,\" I said soothingly. \"For the third and final blood deal, you need to say the words that you said for the first deal. All you need to do is say those words...I will take care of everything else.\"\n\nI gave her one long look, she hadn't opened her eyes.\n\n\"Do you remember the words Maria?\" I asked.\n\nWithout opening her eyes, Maria flashed me a lazy grin. \"I freely give my own blood to fulfill my own desires.\"\n\nCheeky girl...I thought warmly.\n\nI moved up and lay down next to her on the bed. I put one hand on her cheek, and the other on her shoulder. I softly sunk my teeth into the joining where the shoulder meets the neck.\n\nHot, blue, Angelic blood poured into my mouth.\n\nI took long, deep, dark, draughts from her willing body...while her limbs twitched in fevered ecstasy.\n\n***\n\nWhen I had drained her dry, I pulled my teeth from her flesh. She lay still and unmoving. She was deeply asleep.\n\nI was just about to pull up the covers, and slip in beside her to sleep, when I heard a tapping at the window. The window was the only one in the bedroom, and it faced north. It never admitted enough sunlight to reach the bed.\n\nUpon the window sill was a large blackbird. It was tapping its beak against the glass insistently. Behind the bird, the sky was beginning to lighten into a tepid, hazy purple.\n\nI moved across the bedroom, and opened the window.\n\nThe bird hopped inside. It twisted its taloned foot up at me, and proffered a note of rich vellum. I took the note from the bird. It hopped back up on the window sill. With one wing, the bird gave me a deep bow.\n\nI nodded at it.\n\nThe blackbird chirped, and then fluttered out into the early dawn.\n\nI flicked the note open, and read:\n\nOrias says that he will not wait until nightfall to attack you. He will be upon you no later than noon. You will have to take the proper preparations to account for the sun. Lucifer says he needs at least half of an hour to achieve his goals. You will need to distract him for this time.\n\nYours,\n\nCaim.\n\n***\n\n-Jon-\n\nCariel was sitting up on the guest bed, hugging her knees to her chest.\n\nI was seated on the spare chair in the corner of the room. From my position, I had heard nearly everything that Devnik and Maria had done in the master bedroom.\n\nFor Cariel, a powerful supernatural creature with supernatural hearing, I was willing to wager she had heard everything with crystal clear clarity.\n\nShe hadn't said a word since we had arrived. We had both remained silent as we had listened to the passionate love-making down the hall.\n\n\"It's dawn,\" Cariel said suddenly.\n\nI peered out the window. The sky had brightened into a lively orange hue. \"So it would seem,\" I replied, unsure of what the Seraphim was trying to say.\n\nCariel's eyes suddenly sharpened. The dull glassy look that had covered them like a film washed away like it had never been there. In its place, was an expression of wide eyed terror.\n\n\"It's him,\" she yelled as she bolted from the bed.\n\nShe was halfway to the door when she froze. The green runes on her collar fizzled and crackled manically. The entire room was bathed in a unearthly green light.\n\n\"I'm a full-blooded Angel...\" Cariel whimpered as she put a hands on her collar. \"I have to obey...but to obey would be to disobey.\"\n\nI moved to her cautiously, ready to help if she needed it.\n\n\"What are you saying Cariel?\" I asked.\n\n\"He wants me to go outside and meet him...but the collar thinks this would be an attempt at escaping.\"\n\nCariel put a hand to her head...and her face scrunched up into an expression of livid agony.\n\n\"Who Cariel?\" I asked frantically. I was mere seconds from running down the hall to get Devnik.\n\n\"Michael,\" Cariel whispered between gasps of pain.\n\n\"Michael is here.\"\n\n~\n\nSpecial thanks to Lady Ver for editing this story for me. If you enjoyed it, and more importantly, were not confused by it, you have her to thank. Any and all remaining errors are mine.\n\n-Noble Truth "
    ],
    "authorname": "Noble_Truth",
    "tags": [
        "demon",
        "female sub",
        "angel",
        "magic",
        "bdsm",
        "fantasy",
        "mind control",
        "long",
        "male dom",
        "slave"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/celestial-wars-ch-02"
}