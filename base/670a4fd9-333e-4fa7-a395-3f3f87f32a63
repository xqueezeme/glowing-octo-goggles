{
    "title": "Terri's Frustrations",
    "pages": [
        "[This happened many years ago and it still has a very exciting effect on me whenever I think of it! It took place over the course of a couple days. I was told by my wife about this experience a few weeks after it occurred.]\n\n*\n\nThursday: 8:00 p.m.\n\nIt was late Thursday evening when we headed out to the supermarket. Terri didn't bother to change from her work clothes, which consisted of a thigh high skirt, nylons and a light cotton blouse. We took Terri's car as it was parked at the end of the driveway. I had been horny most of the day. \n\nAs I drove I began massaging Terri's nylon covered thigh. She must not have minded because she scooted her butt away from the back of the seat and parted her legs slightly. I got braver as we continued our short journey. My hand crept to her inner thigh being careful not to spoil the mood by going too fast. I continued to stroke her inner thigh as her legs parted even more, allowing me access to her pussy. I gently cupped her pussy in my hand as I pushed down on her mons and began squeezing her sex. Although she wouldn't admit it yet she was getting turned on. She slouched in her seat even more so she could splay her legs as far as the confines of the car would allow. I began tracing my index finger up and down her inner thighs, barely touching the outer area of her mound. Ever so slowly I began tracing the shape of her pussy with my index finger, until at last I was running my finger up and down the outer folds of her nylon clad vagina. \n\nMy efforts had been rewarded as I began to feel a dampness penetrating the fabric covering her pussy. I could see that her nipples were straining against the fabric of her bra and blouse. She began to breathe a bit shallower and tried to get me to put more pressure on her pussy by arching her back a bit. She didn't say a word; instead she unbuttoned the top four buttons on her blouse, raised her left hand to the opening, slid her hand under her blouse and began fondling her right breast through the fabric of her bra. I could see her gently pinching her nipple and rolling it between her fingers. Then, finally she spoke \"want to see?\" Of course, I told her \"Yes!\" I would love to see your stiff nipple. She opened her blouse and slowly removed her entire breast from its silky restraint. \n\nI moved my hand up to touch her breast and work on attempting to make her nipple stiffer. My timing could not have been worse as we arrived at the supermarket. Terri was obviously very frustrated as she said \"don't you ever get me this horny again when we can't finish.\" She hurriedly placed her breast back in its cup, straightened up in her seat and fixed her skirt so no one would know what we had been doing.\n\nWe hurriedly entered the store and completed our shopping. The trip back home was fairly quiet as the trip and work had drained both of us of much of our energy. I was more than willing to sacrifice sleep to screw my wife! Terri however pleaded exhaustion (this may have been punishment for not getting her of earlier). It was difficult for me to get to sleep, I really wanted to jack-off to relieve the sexual tension that had risen in me, but I knew Terri would be angry if she caught me jacking-off or suspected that I had. So, I simply went to sleep with a hard on.\n\nFriday Morning: 4:30 a.m.\n\nI got up the next morning, showered and made my way to work, knowing that I wouldn't see Terri until I got back from out of town. I knew I would not get home until about 11:00 p.m. at the same time Terri had plans to have an old high school friend, Sherri over for coffee and possibly some minor shopping.\n\nFriday Morning: 8:45 a.m.\n\nTerri awoke only to discover that she had pressed the snooze button on the alarm clock too many times. She only had twenty minutes to get ready and get to work. She hurriedly jumped into the shower, wishing she had time to play with her pussy and relieve some sexual tension from last night, but there just wasn't time. At least today was dress down day, so she could wear jeans and a casual blouse. \n\nFriday Morning: 9:00 a.m.\n\n\"Just in time\" she thought to herself. She got to her desk and began doing some paperwork. As she settled down after the unsettling start to the day she began to reflect more about the previous evening's events. Her pussy had been sending her messages that it needed attention all morning. Every time she moved or walked the zipper portion of her jeans only served to stimulate her clit. As it was her clit had been in a state of semi-arousal the entire day. It almost seemed as if her clit was buzzing between her legs. \n\nHer plans for coffee with Sherri were going to negate any possibility of sexual release until Sherri left for the evening. Terri knew that she actually needed to cum in order to be able to regain her focus. No matter what she thought of she couldn't figure out how she was going to get off before Sherri arrived at her home. \n\nFriday Afternoon: 5:00 p.m.\n\nFinally, the day had come to an end. Terri walked to her car and planned on trying to frig herself through her jeans on the ride home. Oh, how she had worn a skirt today. As she drove home her frustration increased as she couldn't seem to rub her pussy through her jeans to get some much needed release. She couldn't even get the zipper of her jeans down so she could at least give her clit some attention. \n\nShe noticed Sherri's car parked in front of her house as she pulled into her driveway. She walked up to Sherri and gave her a hug. Terri and Sherri talked all the way into the house. Terri told Sherri that she had to get changed out of her work clothes as she ran up the stairs. Unfortunately Sherri followed her and waited outside Terri's bedroom door. Terri picked out a short skirt, white lace garter, black thigh-high nylons, a white lace half-bra and a thin silky white blouse. No panties to day...as soon as her husband got home she was going to be ready to get screwed. Sherri talked through the door as Terri dressed. Terri put the garter and thigh-high nylons on, put on her bra and surveyed the effect in her full length mirror \"not bad\" she thought. She stared at her reflection in the mirror as she put on the silky blouse. As she finished buttoning the blouse she saw just how erotic the effect of the blouse, garters and nylons made as her trimmed pussy mound's dark hair attracted her attention. She thought about fingering herself right there, but didn't want Sherri to catch her. \"There couldn't be any harm in flicking her clit a bit and fingering her slit really quickly\" she thought. She slowly flicked her clit back and forth right forefinger as she pushed he left forefinger slid into her moist canal. The pleasure was immense, and it was sooo... hard to stop, but she knew she had to. Terri forced herself to remover her finger from her damp slit and pulled her other finger off her now erect clit. \"This is even worse\" she thought. Quickly she licked her fingers off, put her skirt on and came out of the bedroom after putting on her favorite perfume, hoping that Sherri wouldn't catch a whiff of her damp pussy and figure out what Terri had just been doing. \"Well at least I didn't get myself all worked up to the point I had to cum\" Terri said to herself. \n\nAs the two went down the stairs Terri could feel air flowing over her exposed pussy, chilling her a bit, but at the same time increasing her excitement, giving her a \"naughty\" feeling. Her pussy was out, but no one else knew. Terri was glad Sherri volunteered to drive. Sherri suggested that they visit the local mall and walk around to see if anything caught their eye. As they traveled to the mall every bump and stop gave Terri a little pleasure as it vibrated her now excited pussy. \n\nTerri had almost forgotten how forward Sherri was about any topic, as Sherri told Terri that she needed to get some lingerie for a date tomorrow evening. Sherri told Terri about her latest sexual exploit with baby oil and felt covered handcuffs. As soon as Sherri began talking about sex Terri started thinking about how she was going to screw Tom's brains out tonight when he got home. Sherri pulled into the parking lot and explained that she also needed to get some \"personal items\" after the mall expedition was over. \"Oh God\" Terri thought...this shopping trip is going to be so long. \n\nFriday Evening 8:00 p.m.\n\nThey entered the lingerie store where Sherri began browsing. Terri figured she might as well browse also. There were some very interesting crotch-less panties she knew Tom would just love. Maybe even a see through lace camisole. She spied Sherri in the next room and headed over to meet her. as she walked Terri could tell her thighs were getting damp. Every time Terri stopped walking she squeezed her thighs together when no one was looking, just to get some stimulation, and maybe cum so she could relax with Sherri. \n\nSherri had picked out a beautiful silky black lace, push-up bra to support her ample tits. Sherri asked if Terri would mind coming with her to get a pair of crotch-less panties, and Terri agreed saying \"I was thinking about getting a pair also, you know to surprise Tom.\" Although it had been many years since she had seen Sherri naked, she was turned on at the though of her in just the crotch-less panties and see through black lace bra. Not that Terri was gay or even bi; she was simply turned on by women in various states of nakedness. Sherri and Terri both picked out black lace crotch-less panties and headed out to the cashier just as the store was closing. The cashier remarked that two such pretty women buying lingerie must be planning an exciting evening. Terri blurted out \"No we're just friends,\" held up her left hand and said 'look I'm married.\" As she blushed not with embarrassment but at the thoughts she had been having about Sherri in the lingerie. Sherri giggled about the remark and didn't seem to feel the need to defend her choices.\n\nThey left the store with their purchases and headed back to the car. Sherri said only one more stop and we can go back to your place and catch up. Sherri drove downtown and parked on the main street. \"Here we are\" she said. \"Where\" Terri asked? I told you I need to get some personal things, but I wanted to wait until I had someone with me. I hate going alone. Terri was trying to imagine what one would want company to purchase. As they got out of the car and strode down the block, Sherri pointed to a store front, which had \"hot pink\" marker, proclaiming \"Ladies Night Every Friday, 20% Off Purchases.\" Terri was shocked to see that it was an adult book store. Although Terri had never been in adult bookstore she knew what the sold, because that was where Tom had purchased her first vibrator for her. Terri could feel the blood rush to her cheeks in embarrassment and to her pussy in excitement. \n\nEntering the store Terri noticed the chubby woman at the cashier's counter, and magazines displayed all over the walls and on tables throughout the visible portion of the store. Terri asked \"What are you looking for, you like looking at porn mags?\" \"Yeah, but that's not what I came here for\" Sherri responded. \"Follow me\" Sherri said. As the two women turned the corner, Terri saw the largest collection of sex toys she had ever imagined. Sherri grabbed Terri's elbow and directed her toward the vibrators. Terri could feel the heat in her pussy as Sherri picked up a rather large vibrator and asked Terri \"God, this has to feel great.\" It was all Terri could do to stammer \"y..y..yes it would. Immediately Terri had thoughts of ramming her pussy with that plastic cock right there in the store, but knew that there was no way she dared to...no matter how much her pussy yearned for attention and some stretching. If only Sherri knew how much she was unintentionally teasing Terri with a tempting array of self-pleasure toys, maybe she would stop Terri thought. Again the prude in Terri won out and she, her pussy and her stiff clit suffered in silence. Sherri directed Terri's attention to a \"Bullet\" vibrator that as Sherri put it \"Fits up inside your cunt and has a remote control...so no one knows about it. Sherri added \"You can drive, walk, work, or just sit while it hums in your pussy and gets you off\" \"Now, that would have been a wonderful idea for this trip\" thought Terri. Sherri asked if Terri had one, and Terri told her that she was happy with the purple vibrator that Tom had purchased for her. \n\nSherri asked Terri \"Is there anything you want to get today?\" Terri responded by saying \"Oh, No...I don't need anything like that.\" \"OK, cool\" replied Sherri. I will just get my stuff...you look a bit dazed, why don't you wait by the entrance where we can see each other. \"I will\" Terri said. As she waited by the entrance she watched Sherri moving in the aisles for a few minutes, and then appearing suddenly at the checkout. Terri stood as still as she could shifting her weight from one foot to the other in an effort to keep from stimulating her aroused pussy, but Terri's pussy was just aching for some direct attention. Sherri walked up to Terri and said \"You ready?\" Yup\" replied Terri. Good, let's get to your house so we can relax.\n\nIt only took ten minutes to get home. Sherri grabbed her bags and the two made their way to the house joking and giggling at the items in the adult book store. \n\nFriday Night: 10:30 p.m.\n\nThe two gravitated toward the kitchen and sat down. Terri offered Sherri coffee, wine, or soda. Sherri said \"We deserve to treat ourselves, some wine would be wonderful.\" Terri got two glasses out of the cupboard, the wine from the refrigerator, and poured each of them a glass. They sipped the wine and discussed more of the amazing things they had seen on their shopping trip. Sherri asked Terri if Terri would do her a favor. Terri said \"Of course, what is it?\" Sherri told her that she wanted to make sure that her lingerie looked good on her. Hesitantly, Terri agreed. \n\nSherri took her bag into the restroom and closed the door. \n\nTerri pulled her skirt up and began fingering her clit furiously. \"Oh God...please let me cum before she comes out.\" She continued to strum her clit, hoping Sherri would not return too quickly. Terri's pussy was getting wetter by the second as she could feel the wetness of her slit increasing.\n\nThe restroom door creaked; but Terri didn't hear it. She was too intent on her impending orgasm. Sherri emerged from the restroom to see Terri's finger dipping into her wet hole and massaging her clit. Not wanting to interrupt and being intensely turned on by watching her friend finger herself, Sherri was determined not to make a sound. As Sherri's left hand began massaging her breasts as her right hand began its journey toward her warm pussy. As Sherri massaged her self squeezing her mound and teasing her pussy lips she heard Terri let out a slight moan. This only served to increase Sherri's excitement as she slid her index finger into her slit to moisten it for her clit. She wiggled her finger inside her canal a bit pulled it out and gasped when her finger touched her clit.\n\nTerri's head snapped back to view her friend rubbing her tits and fingering her clit. Terri had masturbated in front of a mirror, but had never seen another woman masturbate before. Terri was mesmerized at the sight of another woman fingering herself. She was so embarrassed that she had been caught that she stopped her finger's clit stroking. Hurriedly she began to pull her skirt back down to hide her sex.\n\n\"I'm sorry.\" Stammered Terri\n\n\"Please don't stop, it's beautiful\" replied Sherri as she continued fingering herself.\n\n\"I...I...can't do that\" cried Terri\n\n\"Why not\" asked Sherri\n\n\"I've never done it in front of another woman\" Terri replied.\n\n\"It got me hot just watching you!\" whispered Sherri as she began moving closer to Terri.\n\n\"Would it help if I let you watch me finger myself while you finger yourself?\" asked Sherri.\n\n\"I don't know\" answered Terri as her gaze fell to see her friend still fingering her slit.\n\n\"I don't know why you wouldn't want me to watch, you have a lovely pussy\" explained Sherri with her voice beginning to quiver as her finger worked its way up to her clit.\n\n\"Would it be OK if we went upstairs?\" Terri asked. \n\n\"Oh, God...you sure?\" Sherri blurted out.\n\n\"I think it would be fun to watch you too!\" answered Terri.\n\nAs the duo made their way to the stairs Sherri grabbed her bag from the restroom and made her way up the way up the stairs and followed Terri. After making sure the curtains were drawn, Sherri unbuttoned Terri's blouse and removed it. She wrapped her arms around Terri to unhook the rear clasp of her bra, purposely rubbing her bra clad tits against Terri's exposed tits. She deftly unzipped the skirt and slid it down to the floor where Terri stepped out of it. As Sherri knelt in front of Terri her breasts strained at the thin fabric of her bra. She unhooked the snaps at the top of the nylons and proceeded to roll the right one down Terri's leg, lifting her foot to finish taking it off. Her head was a mere foot from Terri's pussy; she could smell the wonderful aroma of wet pussy. She could see the wet hairs of Terri's pussy curled in toward her slit. But her slit was open enough that Sherri could see Terri's clit standing erect, exposed from its hood. She took the top of the left nylon and began rolling it down Terri's leg, pulling her foot up to finish its removal also. Still on her knees, Sherri wrapped her arms around Terri's waist to remove the garter belt, her right breast brushing against Terri's hot pussy. Terri placed her hands on Sherri's face and gently pulled her up. As Sherri stood and backed up to take in the sight of Terri's nude body. \n\nTerri slowly walked up to her friend and gingerly unhooked the front clasp of the bra, allowing Sherri's tits some freedom. She then slowly removed the bra cups making sure to brush the lace against Sherri's nipples. Terri pressed her erect nipples into her friend's breasts as she wrapped her arms around Sherri to finish removing the bra. Terri felt more heat in her already excited cunt as the pair's nipples touched each other. Terri moved back and surveyed Sherri once more. Terri kneeled in front of Sherri, placed her forefingers in the waistband of the crotch-less panties and gently pulled them from her friend's body. Terri stared at the wonder of another woman's pussy that close to her face. She saw the beautiful fold that was the center of another woman's sex. She could see that Sherri's pussy was also in an extremely excited state. She could smell the juices from her friend's wet cunt. \n\nTerri: \"let's get on the bed where it's more comfortable.\"\n\nThey climbed on the bed and sat facing each other, neither one sure how to proceed. Terri's need for release won out as she leaned forward and gently kissed Sherri on the lips. Sherri responded by parting her lips and separating Terri's lips with her tongue. Their lips pressed together as their tongues played in each other's mouths. The kiss ended, both women were flushed with excitement. \n\nTerri leaned back and began rubbing her pussy. It felt so good to know she was going to be able to get a much needed release soon. Without the hurry and frustration she had experienced in the kitchen she relaxed and began enjoying the warmth and wetness of her pussy as her finger danced over her clit, teasing it with each stroke. She could feel the heat in her loins as her orgasm began to build with each stroke of her clit. Terri had relaxed and she could feel herself beginning to reach her plateau, as her other hand purposely playing with her nipples as she massaged away the ache in her clit and pussy.\n\nAs Sherri was witnessing Terri's show she began to massage her own breasts and tweak her already stiff nipples. Her right hand trailed down to her moist vagina as she began tracing her finger from the top of her slit down to her asshole. As her cunt became engorged, opening with excitement she continued fingering her slit and poking her finger into her pussy. She began pumping her finger in and out of her hole, making sure Terri could see everything. Her excitement at having another woman watch her diddle herself was so erotic she knew it wouldn't take her long to cum. She could see the wetness of Terri's pussy dripping down onto the sheet into a small expanding pool. ",
        "Terri lay down on the bed to get easier access to her hungry cunt. Terri plunged her finger into her own wet canal and raised it to her mouth to lick off. She then resumed her fingering. She could feel the tightness begin in her abdomen and cunt begin to increase as her orgasm mounted. She had waited all day to cum...\"damn it feels good\" she thought. As the tightness in her groin increased she began to moan in ecstasy. She strummed her clit at a steady pace. Her hips began twitching involuntarily as she came close to her peak. \n\nSherri fingered away at her snatch as she watched Terri's snatch quiver and her hips buck. The look of exquisite agony on Terri's face as she strummed her clit was beautiful. She had never witnessed another woman orgasm, except on a porn video. Sherri became even more turned on as she witnessed Terri in the throes of orgasmic frenzy.\n\nSherri began to feel her own impending orgasm gain momentum as she began concentrating her efforts on flicking her clit. She could feel her own juices begin to gather at the entrance of her pussy as her index finger began tracing circles around her clitoral hood. Sherri was enjoying Terri's show and she really wanted to see Terri cum. She wanted to see her face as her release began, as the waves of pleasure swept over her body. She was almost ready to cum herself. \n\nTerri pulled her finger from her hot cunt and began stroking her clit. She was torn between her intense need to cum and the embarrassed of being so exposed to her friend. As she stroked her clit her hips raised to meet her probing fingers. The pleasure of her fingers and audience was so intense that Terri had reached the threshold of orgasm and wanted to delay her release to intensify her orgasm, but try as she would she couldn't stop her finger from strumming her clit. Her mind was a blur of passionate need. She was at the brink of orgasm, the point of no return, It didn't matter who was watching her now, there was no way she could stop. Her back arched to meet her stroking finger as her body stiffened. She could feel her muscles cunt contracting as waves of pleasure flowed through her body. As she continued to cum her cunt alternately contracted and relaxed, her juices trickling down her slit o her pink asshole eventually collecting in a second puddle on the bed sheet. Her hips began shaking as the orgasm took over. She couldn't stop it now, no matter what else happened she was cumming. \n\n\"Oh my God...\" \"I'm cumming...Oh God!\" \"I can't stop it...\" Terri squealed in ecstasy. \n\n\"Please cum...I want to see your pussy cum!\" added Terri as she continued to gently massage her still swollen pussy and sit up to get a better view of her friend finger fucking herself. \n\nSherri took Terri's lead and lay down to relax as she entered the final seconds before she came. She spread her legs as wide as she could to allow Terri a full view of her now fully engorged cunt. Sherri felt the flutter in her abdomen as she began to grind her hips into the bed. Her legs stiffened as her own orgasm began taking over her body. Her senses were a blur as she felt her own release begin. The whole universe seemed to be between her legs as she arched her back as if to invite penetration. As her orgasm swept over her being, her juices wet the sparse hair of her mons as she continued rubbing her pussy. \n\n\"Ungh...oh...ahhhh...I'm cumming\" Sherri grunted as her body spasmed uncontrollably under the deft ministrations of her fingers.\n\nAs Terri lay down next to Sherri she let out a sigh of contentment. The pair lay quiet and still for a few minutes as they both calmed down a bit. Sherri turned on her side so Terri could see her entire naked body and asked Terri \"Did you like it?\" as her hand reached over to cup Terri's right breast in her hand and began rubbing the nipple with her thumb. \"I loved it\" replied Terri.\n\n\"Would you mind if I touch your pussy?\" Sherri asked as her hand began trailing from Terri's breast down her stomach. \n\n\"Why would you want to do that?\" queried Terri as her stomach muscles quivered at the touch of the other woman's hand. \n\n\"I want to feel how wet your pussy is.\" replied Sherri.\n\n\"Uh...Ok...I guess, if you really want to.\" Terri replied.\n\nSherri gently slid her hand over Terri's mound and felt Terri's pulsing pussy lips tremble at her touch. She rubbed Terri's mound as Terri squirmed a bit. Sherri began tracing her finger over Terri's swollen cunt lips, pushed her index finger into Terri's well lubricated hole and slid her finger up to the top of Terri's slit and lightly brushed Terri's still stiff clit. Terri's body shuddered as Sherri touched her where no other female had touched her in twenty-five years.\n\nAs Sherri continued to gently play with Terri's pussy she thought \"This could get even more interesting...\"\n\n*\n\nTo be continued...\n\nI appreciate any feedback...thank you for reading my post. "
    ],
    "authorname": "IRonMan78",
    "tags": [
        "mutual masturbation",
        "voyeur"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/terris-frustrations"
}