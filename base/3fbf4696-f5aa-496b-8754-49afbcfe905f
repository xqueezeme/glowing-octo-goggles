{
    "title": "Fitting In Pt. 02",
    "pages": [
        "There was about four inches of snow on the ground when I left the highway and made my way into the scenic overlook area, I was on gravel about fifteen feet off the road, far enough off the main road to be safe and close enough to be seen. Before I texted Brook I took a piss writing my name in the snow as I'd done so many times as a young boy, then called Mr. Bremmer, the owner of the feed mill to let him know I was safe and what my plans were. He was glad to hear from me and happy to know that I was not only safe, but that I would remain safe along with the truck. With the engine running and the clearance lights on I settled into the passenger seat to text my soon to be bride.\n\nMe: Hi, it's 12:44 and I'm stopped for the night, gonna have a sandwich and attempt to sleep. If the snow wasn't so disastrous to drive in it would be beautiful, big nickel size flakes softly floating to earth. Wish you were here in my arms right now.\"\n\nBrook: I wish I were in your arms as well, I know ways to keep you warm, we could have quite a make out session in that big seat. Will you wait for the county trucks to go through in the morning before you head home?\n\nMe: Yup, once they plow and salt I'll be right behind them, it'll be slow but it's better than putting this rig in the ditch. I let Mr. Bremmer know, he's good with everything and told me to take my time getting back, he doesn't have any more feed deliveries scheduled until after the holidays. That means I can spend more time with you. (I sent along a kissing smiley face)\n\nBrook: Here's three kisses and a hug for you, going to bed now, text me when you leave there in the morning.\n\nI dozed on and off throughout the night, the snow began to let up just after three, I noticed two four wheel drive pickups with plows and yellow lights flashing as they creeped along toward Princeton around four fifteen, more than likely local guys with contracts to plow parking lots and driveways in Princeton. With seven inches on the ground an early start was imperative for them. I'd taken a leak and was standing at the front of the truck as daylight filtered through ever so gently, from my left was a familiar and welcome sound, a plow truck making his way through.\n\nI inched my rig next to the road and as he drove by waving at me I slipped in right behind him, we weren't exceeding twenty- five miles per hour, but we also weren't in the ditch. Going south from Princeton the roads changed dramatically when I crossed over into Buffalo County, they had obviously been plowing much earlier than Green County where I had been parked. I had my phone on Blue Tooth, when Brook called, I was able to keep on driving uninterrupted while we talked.\n\n\"Hey how come you didn't text me when you hit the road?\" She asked.\n\n\"The county truck popped up so fast that I only had enough time to jump in the drivers eat and get in behind him, I wanted to wait a little bit before I called.\"\n\n\"I've been up since five thirty Frank, mom has scolded me twice for pacing the floor. Now that I know you're okay and on the way home I think I'll go back to bed, don't do this to me anymore, it's too stressful.\"\n\nI laughed, \"Sure, like I have something to do with the weather, I'm okay Brook, if the roads stay clear I'll be back in town by one, wanna have lunch with me?\"\n\n\"Got a better idea, I'm home alone until about four, I'll make lunch and we can eat together. You know, like playing house. Tee heehee.\"\n\nShe had opened the metaphorical door, I was gonna walk through, \"Is that all we'll do if we play house? I'm having withdrawal pains after no kisses last night.\"\n\nShe giggled, \"I know what you have in mind dirty boy, but my panties are staying on, even if your hand is in them as long as I keep them on I'm okay, because the minute you get them off me I won't be able to say no. So ... panties stay on, alright?\"\n\n\"Okay hon, panties stay on, for today. I would like to touch you inside them though.\"\n\n\"Stop it Frank, you're making me damp and horny. Call before you come over and I'll have everything ready. Ham, eggs, hash browns and toast sound okay?\"\n\n\"Perfect babe, perfect.\"\n\nI had called my folks the night before shortly after Brook and I stopped texting, I figured it was time for an update. While we talked I told mom I was going over to Brooks for lunch, the line was silent for several long agonizing seconds.\n\n\"Frank, you be careful, don't be foolish since you're so close to asking for her hand. I know her folks and sister aren't there because we saw them headed out of town this morning. You behave you hear me son, you've held out this long, don't take advantage of an opportunity that might lead to heart break.\"\n\n\"You don't need to worry mom, we aren't having sex, at least not yet anyway. We'll behave, we always do.\"\n\nWhen I backed the truck into the heated bay it was covered in salt residue and slush. The kid who took care of washing the trucks was pissing and moaning about how dirty it was when Mr. Bremmer tapped his shoulder from behind.\n\n\"Kevin, while you were tucked in your warm fuzzy bed last night Frank was battling a snow storm over ice, while mommy was making you supper Frank was holed up in the cab with lousy convenience store sandwiches and chips, while you waltzed in here this morning all chipper and raring to go Frank was happy to be anywhere but a ditch. Those are but a few of the reasons you're going to clean this truck top to bottom and inside, oh, and if that doesn't suit you don't let the door hit you in the ass. Now shut yer yap and get busy.\"\n\nAfter turning in all my paperwork and the receipt for the fuel I was ready to head out, Mr. Bremmer wasn't having it, he wanted to know the cost of everything I'd purchased. I gave him the receipts and turned to go, Mr. Bremmer's voice stopped me where I stood.\n\n\"Hold on Frank, I want you to know how much I appreciate everything you did yesterday from making sure everyone got what they ordered to being willing to sacrifice your comfort to get the rig home unscathed. Guys like you need to be rewarded.\"\n\nPulling a hundred-dollar bill from his wallet he handed it to me.\n\n\"Take that pretty girlfriend of yours out to a nice dinner on me. I'm sure she had as hectic a night as you did worrying about you. There'll also be a little extra in this year's Christmas bonus as well, now get outa here, get some sleep and I don't wanna see your mug until the 27<sup>th</sup>. Oh, and Frank, you'll be paid in full for these extra days off, consider them comp time.\"\n\nWith Christmas on Friday I would have three extra days off. Brook was waiting for me on the porch as I drove up, a sweater wrapped tight around her and a smile on her face. When I was three steps up the five she launched herself into my arms damned near knocking me backward. Kisses and a soft *thank you Lord* was all I heard for the next two minutes, picking her up cradling her in my arms I walked to the door, she reached for the handle and we were inside. More kisses, more tight squeezes, more whispering it was so good to see her.\n\nBreakfast for lunch was perfect, it hit the spot and put me half to sleep. Laying on her bed we necked and touched a little, but I was exhausted, kissing me she told me to nap and she'd wake me later. Around three I heard a ruckus in the living room, it was her family. Jerome was the most vocal.\n\n\"I see Frank's truck at the curb, where is he?\"\n\nI heard Brooks voice, \"He's in my bed.\"\n\nJerome's voice raised about five octaves, \"In your bed, what the hell is going on here girl? That boy needs his ass kicked if he thinks he's going to take advantage of my baby girl while we're out of the house.\"\n\nI then heard Alice, \"Jerome be quiet, Brook why is Frank in your bed?\"\n\nShe went on to tell them of my night and subsequent morning, how she'd made us lunch and I fell asleep on her bed on top of the duvet fully clothed, she put a blanket over me and closed the door. Tracy piped up down the hall, \"Yup, he's dressed, it looks like he's awake. Can I go in?\"\n\nTracy had no more than asked the question when she pranced into the room.\n\n\"Hi Frank, pisser of a night huh? So, sleepin in my sister's bed? Good thing Brook aint in it as well or daddy would be beatin yer ass right about now.\"\n\nAlice grabbed her arm and spun her, \"Close your mouth you sassy thing. Be glad you're 18 or I'd wash your mouth with soap. Where do you learn trash like that?\"\n\nTracy smirked as she left, Brook was seated on the mattress at my feet, Alice was standing mid-room and Jerome was standing in the doorway trying not to glare. I felt like I'd messed things up.\n\n\"I'm sorry Mrs. Ellory, I was so tired, I didn't mean no harm.\"\n\nShe smiled as she sat next to Brook, \"Shush, you've done nothing wrong lad, do you want to sleep longer?\"\n\n\"No ma'am, I think I need to go home and sleep in my own bed. Mom will wonder where I am, I told her Brook and I were having lunch but that was a while ago.\"\n\nAlice patted my leg, \"That's a good idea, mom's like to know where their kids are. Say, why don't we get together with your folks Christmas Eve after church service, we could have hot chocolate and dessert at our home. I'd like to get to know your parents.\"\n\n\"I'll ask mom, I'm sure they would like that, they want to be better acquainted with you and Mr. Ellory as well. They'll likely go to the evening service at St. John's Lutheran, they could meet us here afterward.\"\n\nAlice smiled, \"Us, are you coming to church with Brook?\"\n\n\"Yes ma'am, she asked if I would and I said yes, maybe I'll like your church better than St. Johns, it's mostly old people and as exciting as watching paint dry.\"\n\nBrook reached for my hand helping me sit up, \"Come on wayward traveler, you need to go home and sleep.\"\n\nI had forgotten to tell her about the hundred dollars Mr. Bremmer had given me, as we walked to the truck I reached in my pocket for the keys and remembered it was there all scrunched up. At the door she had her arms around me as we kissed goodbye, I handed her the bill when we moved apart telling her the story. She smiled and told me she'd tuck it away in her purse and we should do something special with it New Year's Eve.\n\n******Brook*****\n\nI was wishing I'd done more than wrap a sweater around me when I walked Frank to the truck, the cold wind was cutting right through it, I stood on the porch until his truck turned off of Holiday Drive and no longer in sight, shivering I closed the door and walked right to the couch where my folks were sitting. Plopping myself onto dad's lap and snuggling into his broad chest I broke down blubbering, he let me cry until I had been diminished to sniffles and asked what was wrong.\n\n\"I could have lost him daddy, it took so long to find him and I could have lost him. What if his truck had crashed or something like that?\"\n\n\"First off kitten, he didn't crash, second he's a good driver from all I've heard, third he had the good sense to pull over and wait it out and last but most importantly, he made sure you knew where he was at all times and that his goal was to get home to you. I'm not saying it couldn't have been worse, but the way that boy loves you it would have taken a tornado to keep him from getting to you.\"\n\nI blubbered, \"I love him so much it would kill me to lose him, I don't know what I'd do without him.\"\n\nMom entered the conversation, \"Honey our men leave every day to provide for us, driving is what Frank does and like your dad said, he's very good at his job. If you two end up being together you'll need to get past this worrying and fear or it will destroy you.\"\n\nI almost bristled when she said *if we end up being together* and it must have showed.\n\nMy face stiffened, \"Together, of course we'll be together, I'm going to have his babies some day when he asks me to marry him. There's no *if we'll be together*, in my mind and I think Franks that's settled, no man has ever paid a moments attention to Brook the freak until Frank, who happens to be the same kind of freak I am. We accept each other for what we look like and don't give a rat's ass what anyone thinks other than family.\"\n\nMom grimaced when I swore, \"Where do you and your sister learn this foul mouthed stuff, you've certainly never heard your father or I talk like that.\"\n\nI thought to myself, *yeah right, you obviously don't know how thin your bedroom walls are because I've heard you yell far worse when dads nailing you to the mattress* but the better part of judgment took over and I said nothing. Once I'd cried myself out, I went to the kitchen for a snack and turned in early.\n\n*****Frank*****\n\nBrooks mom Alice was on the phone to mom as I walked in the kitchen, \"Yes he's here, just walked in. Thanks for checking, and tell that sweet Brook how grateful I am that he has her to love and take care of him. Christmas Eve? Yes, that sounds lovely, nine o'clock your house, we'll be there. Bye.\"\n\nHanging up she pulled me in for a hug, \"You, young man, scared the bee-jeebers out of me last night. Don't you ever do that again you hear.\"\n\n\"It wasn't like I planned for a storm to move in ma, it just happened. Besides, I'm home and no I don't want anything to eat, I'm going to shower and sleep until tomorrow morning. Tell dad g-night for me when he comes in.\"\n\nFresh crisp sheets had never felt so good, with my head on the pillow and the quilt tucked tightly around my neck I remember nothing more than three or four breaths before sleep took over, with sunlight peeking around the curtains I rolled out at 7:20, I hadn't slept that late in ages. Making my way to the smells of breakfast mom was clearing the dishes and dad was getting ready to go outside for morning chores, with a hug he patted me on the back and left.\n\n\"Eggs or pancakes, there's some sausage left if your interested. By the way, you'd better call Brook, she called twice last night and this morning at six when you didn't answer your phone, I told her you likely had it switched off.\"\n\nWhile breakfast cooked I called Brook, we had a quick conversation before she had to leave for work, I told her I'd pick her up at the store when she got off at four. Thinking I'd like to start a tradition by getting her a poinsettia for Christmas I went in early, she waved and smiled when I entered the store, because I hadn't thought of it sooner the plants were picked over except for the scrawniest looking and the very big ones. Remembering I would be getting a bonus I picked out a pink one covered with blossoms, it had to stand over twenty four inches tall and was an easy foot and a half across, at $34.99 I felt Brook was well worth it.\n\nStanding in her lane she was so excited once I'd reached the front of the line, we chatted a little as I checked out, she told me she'd see me in about ten minutes. I had that monstrosity of a plant in the back seat when I opened the door for her, as I got in my side she was faced sideways looking at it admiringly.\n\n\"Is that for your mom, she's gonna love that.\"\n\nPulling her to me I laid on the most passionate kiss in my arsenal, breaking she sort of whispered.\n\n\"Dang boy, you really missed me didn't you.\"\n\n\"Brook, the plant is for you.\"\n\n\"Oh Frank, it's beautiful, you still aren't going to get my panties off, but I wouldn't mind if you tried. NO FRANK, not here people can see in the truck you horny bugger. The new Appleby's just opened, let's go to supper there, I'll let mom know so she doesn't worry.\"\n\nNormal payday for me was Thursday, but with it being Christmas Eve day the checks would be ready Wednesday, I stopped in about noon, Edna gave me an envelope and told me Mr. Bremmer wanted to see me in his office.\n\n\"Frank, come in, sit a minute. I wanted to thank you again for Monday and into Tuesday, that truck is less than two years old and would have taken a while to replace even though it's covered by insurance. Here, I want you to have this, it's a little something extra from the missus and me to say thanks. Do something special with it, something you and your little filly will enjoy. Merry Christmas son.\"\n\nI took the envelope, stuck in the inside pocket of my jacket and promptly forgot about it. When I picked Brook up from work she was kissing me hello in the truck with her hand laid against my chest.\n\n\"Hey, what's in your pocket?\"\n\nReaching inside she withdrew the two envelopes opening the thicker of the two first, it was my regular paycheck and three one hundred dollar bills, our regular Christmas bonus. When she opened the other, she gasped.\n\n\"Oh my God Frank, you need to see this. Oh my, oh my.\"\n\nShe pulled a check out of the envelope for five thousand dollars, I knew that the truck was expensive, I mean like a couple hundred grand expensive once it was fitted out, but I had no idea simply bringing it back undamaged was worth the extra money they had given me. She was in tears, I was in shock, never before had I been so blessed by someone outside my family.\n\n\"Oh my gosh Frank, we have to send them a thank you card, this is just too much to wrap my head around.\"\n\nI ate supper at her house then helped her finish wrapping gifts in her bedroom before we went out to Wally World for more paper, it was only right since we'd used it up and Tracy still had gifts to wrap. While parked at the curb outside her house we took advantage of the fact that her folks were still at the Credit Union party and steamed the windows of my truck with a make out that surprised the hell out of me, taking my hand she put it under her dress tight to her mound.\n\n\"Remember I told you I wasn't going to let you take my panties off, but I wouldn't mind you trying.\"\n\nThat was all I needed to hear, as I pressed against the mound her legs opened and she moaned into my mouth, sliding my hand up until it touched the elastic I could smell the damp aroma of her over heated pussy, it was so damned enticing, I now understood why the bulls will sniff a heifer in heat and snort as they roll their head backward. I was experiencing the same thing, it wasn't like I hadn't touched her before, but it had always been at the end of a long make out session and then only briefly, it had never been so blatant before, nor had she ever initiated it. With my fingers twiddling in her fur pie her hips lifted off the seat, then came the whisper in my ear.\n\n\"Put your finger down to where it's real wet, uh huh, now up a little until you feel that hard little ---- oh my gosh, it feel so much better when you touch it. Use the juice from my pussy to rub that little nub, yes, like that baby.\"\n\nIn minutes she was writhing and groaning as her hips rocked back and forth, I simply went with the flow and continued to rub her clit. Her breathing stopped, her body stiffened and her abdomen shook, looking in her face I couldn't tell if she was in ecstasy or pain as she softly made UH sounds over and over. As her body relaxed she put her hand on top of mine holding it still.\n\n\"No more baby, no more, it tickles too much. Cup me with your hand, mm-hmm, see how wet you've made me.\"\n\nMy first witness of a live female orgasm, and it had been my finger that had caused it. There was a sweet smelling thick stickiness coating my fingers, I think I surprised her when I dipped my finger into the folds, withdrew it and put it in my mouth sucking it clean. She stared at me wide eyed, then softened her expression and grinned, she knew I was hers as she leaned forward to French me, we had taken our relationship to an entirely new level in less than an hour, a level neither of us regretted.\n\nI put on the defrosters to help clear the windows before anyone noticed, she was adjusting her panties when I offered to help, pushing my hands away she fixed her dress.\n\n\"If I let you touch me again tonight after what we just did these panties are coming off and I'm not ready for that yet. I've read hot steamy romance novels, but tonight I lived one. Frank, I love you, please don't think I'm a tease, I want to give you everything but I'm not quite ready.\"",
        "We kissed long enuf for the windows to clear, I assured her of my love and that I was okay with the progression of our intimacy. Walking in the house Tracy bounded off the couch with a shit eatin grin.\n\n\"You guys must have been doing some serious suck face cuz the windows were so steamed I couldn't see nuthin. Way to go big sister.\"\n\nBrook looked aggravated, \"Tracy, you say nothing, got it? One wrong word and I'll let mom know you have a little vibrating friend tucked in your panty drawer.\"\n\nIf Tracy's dark skin could have shown red she would have looked like a fire hydrant. Grabbing the bag of paper she huffed off to her room. I looked at Brook.\n\n\"Vibrating friend?\"\n\n\"Don't ask Frank, I'll show you when we're married.\"\n\nI feigned shock, \"We're getting married?\"\n\n\"Bet your striped ass we are, do you think I'd let any old boy make me cum with his finger? In case you haven't figured it out tiger, you're mine, don't even think about another girl because you're MINE.\"\n\nDriving home I was excited, I had planned to ask for her hand Christmas day but decided since my folks would be at Brooks the next night I would do it then, after church. What better place or time than when both families were together. Mom and dad wanted me to attend service with them at St. Johns, I wanted to go with Brook and her family, in the end my folks understood, Brooks life and mine were beginning to become one.\n\nI'd heard mostly good things about where Brook attended, Faith Family Church, of course like any large gathering there will always be a few who want to spoil it for everyone, I was smart enough to ignore the naysayers. Walking in I was pleased to see so many folks I knew never realizing they attended, it was an eclectic mixture of colors and nationalities, I knew there were a number of black families in town but had never paid much attention to how many. Nearly half the congregation were of black descent in one form or another, oh yes, there were lots of lily white Norskies, Pollocks, and Czechs like me.\n\nThe music started out far more upbeat than my old Lutheran Church, folks were clapping, some had their hands raised in the air, something I had never seen in a traditional church setting. Following a few faster songs they settled into slower more traditional Christmas songs, the black lady leading was short and rather round, boy could she belt it out, and talk about being in authority, she ran that music team like a well-oiled machine. I was used to an organ or piano or both, FFC had guitars, keyboards, a piano, drums and three singers beside the lead, for a church of 200 they certainly made a big impact.\n\nFollowing the service Brook and I were hand in hand toward the entrance waiting for her family, lots of people stopped to say hi to Brook, meet me and shake my hand, no one seemed to notice the dark purple streaks and splotches that ran through my skin, nor the lighter ones on Brook. I found myself wondering if it was a set up or if these people truly were that friendly and not moved by our skin abnormalities. I left it at that, simply a wonderment, with her family at the door we jumped in the family van headed to her house.\n\nMy folks rolled in about ten minutes after we did, Brook and I were pleased by how well our parents got along, lots of smiles, joking and meaningful conversation. Enjoying hot chocolate and lemon bars Tracy stood up.\n\n\"It's our family tradition that everyone gets to open one gift on Christmas Eve, so we're gonna do that now if you guys are okay with that?\" She made a sweeping motion with her hand across the room.\n\nWhen I thought everyone was done with their gifts Brook stood in front of me with a package, \"Here, this is my Christmas Eve gift to you.\"\n\nI unwrapped a pair of lined leather winter gloves, good gloves, like go to church gloves for which I was grateful. All I owned were yellow fleece Wells/LaMont chore gloves which didn't go well with anything other than work clothes. I gave her a hug and felt brave enough to kiss her. As we sat, I announced I had an early gift for Brook as well. Facing each other holding both hands I began.\n\n\"Brook, do you remember when I was falling asleep on your bed after my overnight trip?\" She nodded. \"You were running your fingers through my hair as we lay face to face talking, you must have thought I was asleep when you moved from the bed. You bent and kissed me, then you said. I love you Frank and I want to have your babies someday.\"\n\nBrook shrieked, \"You heard that? Oh my God I'm so embarrassed.\"\n\nI had the engagement ring on my little finger with the stone turned inside so it was barely visible, letting go of her left hand I presented the ring with my right and asked.\n\n\"Brook Ellory, if you truly mean that will you be my wife?\"\n\nThere were gasps and tears and soft laughter throughout the room, no one more happy than Brook.\n\nThrough tear filled eyes she said softly, \"Yes, a thousand times yes to both being your wife and having your babies. What can I say, you've made me the happiest girl in the world.\"\n\nTracy was eyeballing the ring then quipped in her smartass way, \"Nicely done sis. Hey Frank, you got any brothers or cousins might be interested in a sassy chocolate bar?\"\n\nI thought Alice was going to come unglued, all the rest of us were laughing including Jerome, it took a half minute before Alice settled down and appreciated the humor. My folks left a half hour later, we were at the front door necking (saying goodnight for the thirtieth time) when her dad bellered,\n\n\"Knock it off you two, that's enough.\"\n\nIn a soft voice she answered him, \"Daddy be quiet, I'm engaged to this man and if I want to kiss him I will. Isn't mama calling you, must be time for your weekly rendezvous.\"\n\nHe perked up, \"She is? I didn't hear her calling, goodnight Frank, see you tomorrow.\"\n\nHe was off the couch dousing lights as he rushed down the hall, we snickered and laughed to ourselves. During our last kiss she pushed her mid-section into mine, my cock was hard as a broomstick, there was no way she didn't feel it pressed against her tummy. Moving her body side to side rubbing against my cock I nearly came.\n\n\"Stop, Brook, honey. Stop, I can't take it, I'll end up with a mess in my underwear.\"\n\nSnickering as she leaned back, \"We don't want that do we. You know darling, now that we're engaged it won't be long before we can put all that cream somewhere else, and with me being on the pill we won't have to worry.\"\n\nIf I didn't know better I'd say my dick jumped an inch and grew another three. She was telling me my dick would be in her tight little pussy soon, I nearly came just from the thought. Lifting her sweater she put my hand underneath and placed it on her breast.\n\n\"I think the girls would like a goodnight squeeze before you go.\"\n\nPushing up her bra I did exactly as she had told me, as many times as I had touched those 32B's in the past, I still found myself awestruck by their soft warmness, the way her little nipples would harden, the way she would whimper into my mouth when I gently rolled them. Deciding we'd better stop before we got in trouble I parted with the promise that I'd be back by eleven in the morning. As I drove away she was standing on the porch looking down at the diamond on her finger sparkling in the light.\n\nLying in the dark I heard the doorknob turn and then a sliver of light from the hallway, mom stuck her head in the door and asked, \"You awake Frank?\"\n\n\"Yup, come on in mom.\"\n\nSitting at my feet she patted my calf, \"You made a huge step tonight Frank, neither your dad nor I had any inclination, it was such a pleasant surprise. She is such a sweet girl, you make sure you take care of her, you're a month from 22 and she's right behind you, you're both of legal age for any and everything .... make wise choices, and remember, it isn't just you anymore. You'll need to learn to include her in all that you do, it doesn't come easily, but with commitment it's do-able.\"\n\n\"Mom I've never loved anyone like I do her, I mean I love you and dad, but it's a different love. She sets my world on fire, I get all wooly headed when I'm with her.\"\n\n\"Frankie, are you kids using birth control? No sense bringing a child into this world before you're both ready.\"\n\n\"We're still virgins ma, we haven't had sex yet.\"\n\nI couldn't see her face clearly but there was enough light to see a faint smile before she spoke, \"I'm proud of you kids, not many your ages can say they're still a virgin. By the way, don't *have sex* when you do take the plunge, make love to each other, it's so much more rewarding than *sex*. You sleep well and I'll see you for breakfast, probably our last Christmas breakfast with just you, none of your siblings come home any longer and hopefully by next Christmas you'll have a wife with you.\"\n\nShe was right, it would be Brook and me next year, we had no intention of waiting a long time to marry, we hadn't formulated any plans as yet although we had talked about it snuggled in each other's arms like lovers do when they dream out loud. Christmas morning was as usual, I got mother some jewelry and a gift certificate to her favorite dress shop, I got dad a twelve pack of chore gloves like every other year, a Carhart jacket I knew he wanted and a new scope for his 308. I got underwear as I had every Christmas since I could remember, two work shirts, a pair of dress slacks and socks, who could forget socks.\n\nWhen I arrived at Brooks she was out the door bounding toward the truck, the ever present sweater wrapped around her shoulders with the bottom flapping in the breeze she was creating, as I opened the door and slid out she was in my arms.\n\n\"Good morning my love, did you have a nice morning with mom and dad?\"\n\nHearing her call my folks mom and dad might take some getting used to, but then it would be the same for her I guess. Having a second set of parents on either side would more than likely be good for us, neither had any designs on running our lives, at the same time having age and wisdom with them in our corner can't be a bad thing as long as they offer advice and let us decide on our own. I can remember mom talking about the fine line between loving and meddling. I kissed Brook and held her tight.\n\n\"Good morning future Mrs. Frank Svoboda.\" (pronounced as it looks, Czechoslovakian)\n\n\"Oooooo, I like the sound of that, Mrs. Svoboda. I think I'll be the first and only black Czech in town. Won't that be a hoot.\"<br >\n\nWalking hand in hand around the other side of the truck she helped me carry in two arms full of packages, there were items from me as well as items from Brook and me. Tracy was holding the door for us as we made our way to the porch, it seemed like a perfect Christmas morning, it had snowed a few inches overnight, the sun was shining bright, the air was crisp but not but not biting and the love of my life was with me.\n\nAs soon as all were settled we exchanged gifts, of course none of the others knowing I was intending to ask for Brooks hand the gifts were basically generic things for me, which was great, I wasn't expecting anything other than from Brook. When we got to the part where her mother handed the girls each a soft looking package both set it beside them and we went on. When I inquired Brook whispered, \"Underwear\".\n\nI laughed, \"What is it about parents who think they need to get underwear for their kids every year?\"\n\nWith a look of exasperation on her face she replied softly enough we didn't think anyone else could hear.\n\n\"I don't know but I have this to say, her idea of panties and mine are worlds apart, and next year I'll be buying your underwear, not your mother.\"\n\nLittle did we know Alice had ears like invisible radar, \"There's absolutely nothing wrong with the underwear I buy you girls.\"\n\nTracy blurted, \"They're gross mother, you might like baggy britches that come to your waist, but I don't. I want them cute and sexy, even if I'm the only one who sees them.\"\n\nJerome was becoming agitated, Alice put her hand on his, \"Easy tiger, I have it all under control. So, tell me Jerome, do you like my panties?\"\n\n\"With a seductive voice he answered, \"Baby I love your panties, on or off.\"\n\nAlice shouted, \"Jerome, TMI but I love your answer.\"\n\nThe girls both moaned and said *gross* in unison.\n\nAlice laughed, \"How do you two think you got here?\"\n\nTracy responded, \"Yeah, but that's when you were young, now you're old and it's just gross. I mean, old people don't have sex.\"\n\nJerome laughed, \"Who are you calling old little girl? Your mother and I are quite comfortable with our level of intimacy.\"\n\nAt that point Alice stood and declared, \"Okay, that's enough talk about underwear and sex, girls help me get the table set so we can eat.\"\n\nJerome came and sat next to me where Brook had been. \"Do you need help with the ring or your truck financing or anything like that. If you do come see me at the office.\"\n\n\"No sir, my truck is paid for, the rings are paid for and I have money in savings as well as a checking account. I'm not rich by any stretch sir, but with nowhere to go and no one to see or spend money on until I met Brook, I put most of what I earned in the bank. Matter of fact, in a few more months I'll have enough set aside in a car fund to buy Brook a decent used car, something reliable.\"\n\n\"Don't go using up all your savings on a car, auto loans are cheap right now. How much more do you need?\"\n\n\"I won't be touching my regular savings, I set up a separate account a year ago for a newer truck, but I don't need a newer truck and Brook needs a car. With the five thousand I got as a bonus I have nine thousand in the truck account and when I get to eleven we'll go looking for a car.\"\n\nHe stared at me, \"I'll be damned, a young person with a savings account, you aren't the norm I can tell you that Frank. I have an idea, I need to clear it with Alice, but I don't think there'll be an issue. How about we give you kids another three thousand as an engagement gift, use the eleven to buy the car and the remaining thousand for registration and insurance.\"\n\nAll I could do was smile. Later that evening as Brook and I sat on the couch of the living room while the rest were in the family room, I divulged what my plan was and how her parents wanted to help. She was as elated and overwhelmed by their generosity as I had been, then she turned to me with her arms snaked about my neck talking just above a whisper.\n\n\"You were really gonna buy me a car? Am I the luckiest girl in the world or what? Can I get something with heated seats, the winters are brutal on my tender bottom.\"\n\nLowering my hand to her butt I squeezed, \"We can't be havin that, heated seats it is, it will be easier to keep my baby warm.\"\n\nShe giggled, \"That aint all it'll keep warm. I have that hundred dollars you gave me, let's do something special with it, let's go somewhere for New Year's Eve, just us ---- overnight.\"\n\nI gulped hard as we stared at each other, \"You mean, like stay overnight somewhere? Is that what you mean?\"<br >\n\n\"Why not, we're old enough to be on our own, and now that we're engaged I think it's time I let you take my panties off. I want our first time to be special, not hiding in my basement, or in the truck or hiding in the bushes somewhere on a blanket. I want it to be in a bed somewhere all by ourselves, just us, we can learn in comfort and not be worried about others finding us.\"\n\n\"I wanna do that so bad Brook, but what about your folks, your dad will string me up.\"\n\n\"Don't worry about my folks, I've already talked with mom, she told me she knows sooner or later we're going to do it and it may as well be somewhere special. As for dad, she'll handle him, she told me there are certain parts of her body that have complete control over him, knowing how turned on I make you I can believe that. Speaking of turned on, is that a tree branch in your pants or are you just happy to see me?\"\n\nWith her tiny hand wrapped around as much of my cock as the slacks would allow I croaked, \"I'm happy to see you. Are we really gonna make love, do we hafta wait until New Year's Eve?\"\n\n\"Yes lover, I have something special in mind that I'm gonna wear, something to make you hard as a broomstick.\"\n\nThe weekend and first few days of the week flew by, I had given Brook my debit card and told her to make all the necessary arrangements, she knew what she wanted, I didn't, it was one less thing to worry about for me. At one forty-five New Year's Eve day we backed out of her driveway waving goodbye to her mom and Tracy, Alice would handle things with Jerome when he came home early at three. We had a two hour trip ahead of us, she had booked a room at the Best Western in Carson City, the room was more than the hundred I'd given her, but then, we knew we weren't going to be able to do what we wanted for a hundred dollars.\n\nWith a stop to pee and grab snacks on the way, by the time we navigated our way to the BW it was just after four, checking in we got looks from several people going to and fro through the lobby, the young gal on the counter couldn't stop looking at us, Brook finally spoke up.\n\n\"It's called Vitiligo and occurs in approximately four percent of all humans, now, can we get on with registering?\"\n\nFrom that point all went well, there was a highly rated attached restaurant with a live band scheduled for that night which meant we wouldn't need to traipse all over town, we could do everything in-house. Once checked in we played around a little necking and petting as we dressed for our dinner reservation at six. I was mesmerized as I watched her dress, I'd never seen her in a situation like this where she walked around in her panties and bra, when she rolled the thigh highs with the lacy tops up her legs my cock was at full attention. Sitting on my lap she told me to get dressed, I could have all of her later that night.\n\nDinner was excellent, we each had the queen cut prime rib, I'd never paid attention to how much the little woman I was going to marry could pack away. When I asked about dessert she smiled and winked.\n\n\"I'm your dessert silly boy. Tonight, we dine on each other.\"\n\nShe was wearing a lovely teal colored dress that ended mid-thigh and had an abbreviated scoop neck showing just enough cleavage to make me want to stick my face in between her tasty mounds. We'd found a table by ourselves and were enjoying the night alone dancing, talking and being in love when suddenly another couple stood by our table with smiles. Both were white, both looked like me in a manner of speaking, his discolorations were more pronounced than hers, but it was obvious they were born as we were.\n\nThe lady stuck out her hand to Brook, \"Hi I'm Linda and this is Greg, mind if we join you? We usually aren't well received in outings like this, when Greg saw you guys we thought what the heck, it's worth a try.\"\n\nI stood to shake his hand while Brook did the same with Linda, we invited them to spend the evening with us and we had a splendid time. More than once I noticed Greg looking Brook over, to her credit Brook made sure she had her hand in mine at all times letting Greg know she was taken. When the girls went to the ladies room he commented on how pretty she was, I let him know I thought she was gorgeous and that she was my fianc\u00e9', which seemed to stop any more attempts at flirting.\n\nWhile dancing I sensed a change in Brook, whereas she had always been composed, tonight she was loose and ready for more to happen. Her tiny body pressed tight to mine, during the last slow song she shifted to her right and wedged my thigh between hers, I was experiencing overload, my pressure relief valve was ready to pop. I didn't have to say a word, she already knew, we bid our new friends a goodnight and made our way to the elevator. How is it women, even inexperienced women, seem to know what to do to control lustful situations? When the doors closed, she pinned me against the wall kissing me, leaned back and with a smile said.",
        "\"Tonight is the night babe, we make each other ours, I know we'll need to start slow, but I'm ready. Mama told me what to expect, let's take a quick shower then I want you to wait on the bed while I get ready. Okay?\" I simply nodded.\n\nStripping for our shower was both exciting and intimidating in a sense, I'd had my hand in her panties and hers in my briefs but neither had ever seen each other completely naked. We helped take off the others clothes down to our underpants when she stopped me.\n\n\"Not my panties Frank, I'll take them off now because when I let you take them off I'm going to want you to make love to me, which will be very soon.\"\n\nMy naked cock stood proud as I watched her delicately slip her panties down and step out of them, she stepped into the shower and reached for my hand, we soaped each other, I couldn't get over how sexy it was to stand behind her and gently mold her breasts with her tiny ass pressed against my stiff dick. She spent equal time washing and massaging my dick, at one point leaning over and kissing the head.\n\n\"You look so big.\" She cooed in my ear. \"I don't know if my little pussy can take all that, but we're sure going to try aren't we?\"\n\nI nodded and stepped back, my hand was in her muff, water streaming through as I felt the warmth between her legs, she told me it was time to let her get ready. I grabbed a towel walking into the bedroom as she closed the door. We had lit three scented candles before stepping in the shower, the room smelled wonderfully inviting, just as I knew my Brook would be when she emerged from the bathroom.\n\nIn the bathroom doorway with the light shut off my bride to be stood in the soft glow of the candles in a bright white ensemble, a half bra letting her nipples be exposed, the tiniest of thongs barely covering her bush, a garter belt and stockings under a sheer white robe tied at the neck. Walking toward me she slowly spun giving me a 360 panoramic view, I was naked sitting on the edge of the bed, my cock was bouncing up and down, doing a mating ritual all its own. A foot away she untied the bow and let the robe fall, I was literally salivating, if I had been a dog I'd have been slobbering all over the place.\n\nCupping her breasts under the half bra she asked, \"You like what you see Honey? I hope so because I'm ready to show you everything.\"\n\nFrom the moment she'd exited the bathroom door our eyes never left the other's, each of us transfixed with passion. Reaching behind she unhooked the bra and let it fall, stepping to me she told me to open my mouth, as I did she put a nipple in and told me to suck. I'd done this many times before and knew exactly the way she liked it, I could smell her arousal and slipped a finger through the gap at the top of her thighs, she spread her legs slightly as she moaned and pulled my head tight to her chest. I alternated breasts for several minutes before she pulled back looking down into my face.\n\nWith a soft voice she said, \"Take my panties off Frank, it's time for you to claim me as yours, to make love to me.\"\n\nWith my fingers in the waistband of her thong I slowly lowered it, I wasn't very sure what I would do next, but I knew I could take her panties off seductively. I took my time, kissing along the different colored areas across her tummy and into her bush, when I began kissing along her upper thighs she pushed back.\n\n\"You don't have to do that, maybe another time, right now I want you inside me, we can try oral later.\"\n\nI hadn't planned on oral but if she was game later on so was I, I dropped her panties and then surprised her by pulling her in tight so my face was in her bush and kissed it. She squealed a little and called me a naughty boy. Neither of us knew how to proceed, oh sure, we'd read books and knew all the clinical terms, but when it came to us actually making love physically with one another we were clueless. She wanted to leave the belt and stockings on which was A-Ok with me, lying next to the other we made our first moves.\n\nKissing, lots and lots of kissing, on the mouth, along her neck, across her breasts, sucking a nipple and then kissing more until we felt we were ready, I was stiff as a board leaking pre cum and she was literally so wet she had droplets of her arousal glistening on the few pubic hairs along the labia. I moved above her and got into what I thought the best position would be, me with outstretched arms and my hips ready to settle into her love saddle.\n\nReaching between us she grabbed my dick, \"This is where mom told me I should move you up and down my slit to get you wetter, then to put you at my opening and for you to push gently until you're inside me.\"\n\nWith my dick having moved through the outer labia I met resistance at the inner folds, I continued to push until I felt myself slip inside and she yelled, \"STOP.\"\n\nThinking I hurt her I was going to pull out when I realized she had her hands on my butt cheeks holding me still. \"It's so big Frank, I've never had anything inside but your finger or a tampon. I need a minute to relax, mom told me it's important that I relax before you break my hymen, she said it won't hurt as much if I'm relaxed.\"\n\nI waited as she caught her breath and relaxed, \"She said to have you go in and out real slow a little at a time until you reach my hymen, then stop and when I'm ready to have you break it with one movement. Are you ready my love?\" I nodded.\n\nI began to stroke ever so slowly, barely getting much more than the head inside when she relaxed a bit more allowing me to go a fraction deeper with each three or four strokes until she flinched, I knew I'd hit her maidenhead and stopped. She was breathing hard and trying to stay calm, then looked at me and said,\n\n\"Make me a woman, your woman.\"\n\nI pulled back heard her say *now* and pushed forward, I felt it break and felt horrible as her body tensed and she cried out, I felt like some sort of monster for causing her pain. I kissed the tears running down her cheeks and kissed all over her face apologizing over and over when I felt her hands at the sides of my face.\n\n\"It's okay honey, I'm alright, mom said the pain and discomfort will go away as we continue, so let's continue.\"\n\nI worked back and forth slowly taking my time, instinct told me to slam my cock into her sopping wet pussy until I came, my head told me to go slow so we both enjoyed it. As her body relaxed she became more animated and vocal, when our pelvis met for the first time she squealed.\n\n\"You're in me Frank, all the way, I can feel your body against mine, I'm so full but I like it. I like being full of my husband's cock, I wonder what it will feel like when you blast off?\"\n\nI was determined to make sure she had an orgasm before I did, I'd read where not all women did but all wanted that, I was on a mission to fulfill that goal. We'd been going steady at least five minutes when she began to push up into me ever so slightly and then she whispered.\n\n\"A little faster baby, maybe a little harder but not too much.\"\n\nI had been lying over the top of her on my elbows with my hands under her shoulders when she pushed me up to full arm's length never missing a stroke, I noticed she was looking down between us, watching our bodies meld into one as I slid in and out, her little hips beginning to raise meeting mine.\n\n\"Are you looking Frank, we're being one like the Bible says, I love watching you go in and out of me. I think I'm getting ready to climax, can you go just a little faster now?\"\n\nAs I sped up her body went tense, her hips were pushing back and forth into me, her breathing was ragged and her head was back while she moaned out loud. I heard her say a word that had previously never left her lips in my presence, \"Oh Fuck that's so good baby. So good. Try and cum with me, I want to feel you shoot inside me.\"\n\nThe feral animal within took over as I picked up the pace and began pushing into her harder, I felt her body tense again and then my balls began to churn, oh boy, it was on the way and there was no stopping it now. I pushed my body forward as I came within her pulsating tight pussy, three, four, a fifth and then nothing but dribbles. Her second climax was much stronger than the first, she kept saying.\n\n\"I can feel it Frank, I can feel it. Oh my God that is so good, no wonder sex is so popular. I could do this every day.\"\n\nSoftening I pulled back, as my cock left her body she flinched, when I looked at her bewildered she smiled, \"I'm sore and swollen, it will take me a little while before we can make love again.\"\n\nI looked at her, \"You mean days?\"\n\n\"No silly, I mean like hours, now that I've had it, I want it as much as I can take it. We have the room until one tomorrow, I'm sure we'll do this some more. Let's try oral in the morning, you wanna?\"\n\nI nodded, what else is there to say when your soon to be wife wants to do oral? No one had told me to do the next thing, it just came naturally, I got a warm washcloth for her to clean up, to my chagrin she handed it back.\n\n\"You made the mess, you get to wash me, gentle though, I'm sore, remember?\"\n\nBeing clean and sated we drifted off to sleep wrapped in each other's arms. Brook was already awake when I opened my eyes, she was sitting at the desk talking on her cell, I quickly surmised she was on the phone to her mom.\n\n\"Yes, I'm okay, it went pretty much like you said it would. One thing I wasn't ready for is how big he feels inside, I mean, I have no idea what other men look like but he has all I want. No, it only hurt when my hymen broke, ten minutes later the good was overriding the discomfort, when I climaxed the first time it felt nothing but great. Yes, two times. What, you're kidding, I thought women climaxed every time. Oh my, I am blessed aren't I? Mom, he's starting to stir, we're going to try oral this morning. Okay, okay, TMI, see you when we get home.\"\n\nSince it was early she wanted to try oral before breakfast, she wanted to go first, I washed up and sat with my back against the headboard. She had watched a couple of vids and had an idea what to do so it went fairly well, I say fairly well because I was so worried I would cum in her mouth I couldn't get off. I finally lifted her off and scooted down next to her.\n\n\"Honey I'm sorry, it feels so good and I'm right there but I'm so afraid I'll cum in your mouth and gross you out, then you'll never want to do it again. Let me do you now. No, don't wash, I want to smell your pussy all wet and ready.\"\n\nAs she lay down with her legs parted I lay between her thighs and lowered my face toward the prize, a few inches from her pussy I inhaled deep, I was hooked forever. Never had I smelled such a lovely aroma of passion, eroticism, and anticipation, it flooded my brain as I extended my tongue to lick. I too had watched some porn of pussy eating, but this was the real thing, a furry little pussy directly in front of my eyes waiting to be licked. I thought I was doing a good job when she put her hands on my ears and raised me about an inch.\n\n\"Right there baby, yes, on my clit. Mmmm, right there, suck it gently, my clit will like that. At least the article said I would.\"\n\nIn minutes her head was back, mouth open moaning, right hand in my hair, her left squeezing and pulling her breast, hips starting to undulate rapidly then her ass lifted off the mattress, she cried out long and loud holding my face to her gushing pussy as I rode her climax until her ass hit the mattress again. Pushing my head away she kept mumbling, *no more, no more*. I was looking at her as if I'd done something wrong, she smiled.\n\n\"It was wonderful, I just can't take anymore, it tickles too much. Now that I'm warmed up and ready and you haven't cum I think you should fill my pussy before we go eat.\"\n\nShe wanted to try it from behind resulting in not two but three orgasms before I dumped a ball boiling load inside her quivering vagina, I swore I could feel the walls squeezing my cock trying to get every ounce of sperm I had in my body. At one point during breakfast she looked at me with a surprised look and then giggled.\n\n\"What happened, what are you giggling about?\"\n\nLeaning close to my ear she whispered, \"I'm leaking, I just felt some cum drip into my panties.\"\n\nMy dick was instantly hard, she put her hand on my bulge and smiled, \"Unh-uh, there will be plenty of play time before we check out, we have time for at least once more, I'm swollen but this is too much fun to stop.\"\n\nAs we left the parking lot she wanted to call her mom and let her know we were on the way. \"Yup, we tried it, went okay. No I won't turn into a slut. Yes I know my body is a temple, but what good is a temple if nobody worships it? You too mom, see you in a few hours, oh, how's daddy taking all this? Well his little girl isn't a virgin any longer and he'll have to come to grips with that. Bye.\"\n\nOur reception upon getting to her house was tense but quickly relaxed as people realized we were in a good place with all that had happened. When I got home ma had an old dog-eared book laying on my bed, entitled *Sex for Newlyweds*, taking it with me to the living room she patted the couch next to her.\n\n\"Honey read that book, you and Brook both. Stop watching those stupid porn movies, none of that is real. Your dad and I learned from that book, so did all your brothers and sisters, time for you and Brook to learn. There are suggestions, some stick figure illustrations and the last chapter is all about how the bedroom is undefiled when both parties agree. I'm so happy for you and Brook, I want you to have a fulfilling sex life.\"\n\nBrook and I couldn't have been happier, we made the decision to marry in May. Our love life wasn't much more than once a week when we could find a secluded spot, generally in the back seat of the truck, her with one foot on the ceiling and the other on the back of the seat, me with my feet braced against the door and my hands under her shoulders so her head didn't hit the armrest. Her folks went out of town every last weekend of the month for some sort of mission program working amongst the homeless. Tracy turned 18 in February and was having her boyfriend over those weekends, we all kept each other's secret as we banged away in adjacent bedrooms.\n\nHer folks had given us the three thousand dollars late January, within two weeks we'd found a car for her, a six year old Hyundai Elantra with ..... tada ..... heated seats. I thought the girl was going to cream her jeans when she drove it off the lot, watching her in the rearview mirror I didn't see the smile on her face leave the entire drive to her house. The winter passed by with her mom and sister doing the wedding thing, dresses, deco's, ceremony would be in their backyard with a reception at the American Legion Hall.\n\nWe saw each other nearly every night after I got back from my runs, Brook wanted me to have supper with her each night, it was simpler than driving home, changing clothes and returning. Mother said it was fine with her, she planned to have pa take her out more often. Brook would tell me all about the plans, if there was something I didn't agree with or fully understand we would talk it through, no arguing or confrontation, just talk. Through the winter Brook had been promoted to a position of head cashier which meant she was seldom on the registers spending her time scheduling and working at the service counter.\n\nThe incident with the snow storm and my getting the truck home in one piece garnered me a substantial raise March first, We weren't rolling in the dough so to speak, at the same time between her salary and mine we were going to be able to live comfortably. We were open to paying for our wedding but neither her folks nor mine would hear of it, so, we let them do as they pleased and were thankful.\n\nThe wedding turned out beautiful, it had rained some the day before but the sun shone bright the morning of our wedding. Neither of us had what one might consider *close* friends, we opted for Tracy to be her bridesmaid and one of the guys I worked with as the best man. Between the two families and work acquaintances there were just over one hundred people at the wedding and reception, we chose not to have a band instead hiring a DJ with a play list we approved.\n\nOur honeymoon was at a lake resort in Canada spending most days on the water fishing and every night rutting like animals in heat. My aunt Pauline (moms last sister) had died over the winter months bequeathing her older three-bedroom ranch with an attached garage to Brook and me, it was ours according to her estate the day we married. Returning home from our screwing fest in Canada we moved our belongings in, she had left the furniture and appliances, the appliances were fairly new, but the furniture was very outdated. It made sense to keep what was there and replace items as we could afford them, the first being a new bed before we moved in.\n\nThe excitement of spring two years down the line was double, the first Tracy was engaged to be married and the second we announced to all that Brook had a baby in her tummy, a new life growing within, a byproduct of our love. How I loved watching her flat tummy begin to grow, our baby was inside, we joked as she got bigger how the stripes of pigmentation began to widen, I made sure she knew it never bothered me and paid special attention to her body. We would sit on the couch or lay in bed while I softly rubbed her baby bump which had become a small mountain, she would whisper in my ear, \"Make love to me.\" Those were some of the sweetest, most sensitive times for us, slow, loving, fulfilling.\n\nTracy was married that December fifteenth and our little girl arrived in late March, a perfect specimen of humanity, our fears had been allayed, she had no pigmentation issues whatsoever. Sixteen months later we announced our second was on the way at the same time Tracy announced their first. Whereas my folks quiver had been full of grands for years, Jerome and Alice's began filling quickly. In the six years that followed I was promoted to manager of the mill with a salary and benefits commensurate to the position, that in turn allowed Brook to stay home with first our two daughters, then a set of twin boys and another little girl.\n\nWe stopped at five, it was one more than planned but there was plenty of love in our hearts to go around. All our children were born with a light to mild brown skin with no pigmentation issues and all had their grandmother's signature wavy hair. With the kids in school life remains busy, my dad passed on but great grandma was still the kids favorite place for cookies, we had moved her from the farm to our three bedroom and taken over the farmstead all together. With five bedrooms and three baths it simply made more sense. We raise a few beef for the freezer, some chickens for eggs and we rescued a pony that was destined for slaughter, the kids named him Lucky.\n\nWith Tracy and Brian's four kids Jerome and Alice now have nine grands, to say get togethers at their house is far more than ever expected is an understatement. For us life was good, life was very good.\n\nWe had started out as freaks in the eyes of many around us, but in the end we found the very best in each other."
    ],
    "authorname": "R410a",
    "tags": [
        "wedding",
        "drama"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/fitting-in-pt-02"
}