{
    "title": "I've Always Been a Nurturer...",
    "pages": [
        "Loyal readers of mine will notice a few familiar names in here. Enjoy!\n\n* * *\n\n\"Goddammit!\" I shrieked at my rearview mirror as the light ahead of me changed to red. The fucking stoplights had been my nemesis this evening, and now? There was a cop behind me. I'd have blazed right through, otherwise; as it was, I could see him giving me a cynical look from behind as I had to stomp on the brakes when I realized I wouldn't be able to make the yellow.\n\nI wasn't late, I told myself, not really. I'd been told the parents wouldn't get there until six, and it wasn't even 5:40 yet. But I knew myself, and I knew my sanity needed to give me at least ten minutes or so to settle myself down and be my usual grinning self before my very first Parents' Night as a full-time teacher at Bennett-\n\nSanderson High School. I'd wanted to get there by 5:45, but the red lights had seen to it that that would never happen.\n\n\"Fuck,\" I sighed; suddenly, the silence oppressed me. I'd turned off my stereo to focus on weaving in and out of the slower cars, but now I flicked it on and tried to relax to the dulcet strains of the Finnish death-metal Ben was trying to get me into.\n\nWithout success, so far. Though I did find myself drumming on the wheel as the red light stared at me, mocking my haste. On top of everything else, I needed to pee. I sighed. Thanksgiving was coming, and I didn't have much to be thankful for just then.\n\nMy tires chirped as I flew over the stop-line when the light turned green, my eyes on my mirror; the cop wavered, undecided, before sending his SUV down the other street, and at once I floored it down Madison St, behind the junior-high, until my worried eyes caught the glow in the distance: the lights in Memorial Stadium, where our girls' soccer team was holding its Senior Night.\n\nI whipped my car right on Shaeffer, down past the apartment complex there, and then with a hard reckless smile of relief I was barreling into the high school parking lot, narrowly missing a pair of custodians out there putting up a sign telling the parents where to park. In... shit!...in just eleven minutes, I'd need to be behind my desk, composed and, hopefully, de-urinated.\n\nI hunted for a space, on the prowl. Off to my left, the Alternate Field stretched into the twilight. Coach Jenner had his football team out there, running drills, a few of them already taking off their helmets; practice ended at six, apparently. Jenner stood there with his hands on his hips, yelling, tall in his trucker cap; Jenner was an okay guy, but he had a bad habit, when talking to younger teachers, of speaking directly to their breasts.\n\nEspecially if they were well-endowed. So, Coach Jenner spent a lot of time speaking to mine, whenever he had a chance.\n\nI spotted a space not far from the staff door in the back, down from the loading dock, and only after I'd pulled my Honda into the space did I look at that same rearview mirror I'd been so obsessed with and realize, with an anchor dragging my heart down to my stomach, that my door fob wasn't hanging there. \"Fuck!\" I pounded the wheel in frustration, my brain reminding me that, sure enough, I'd left my fob on my desk, where it now waited happily for me.\n\nMeaning I wouldn't be able to get into the staff door unless there was someone there, inside, waiting to let me in. My thoughts went to the loading dock, but no; half the time that door was locked, too.\n\nI frowned at myself in that mirror, the clock ticking. Ben said I frowned well, my full lips making a curve that, he claimed, looked sexy; just then, I wasn't seeing it. I was seeing a super-pissed young woman, running late and getting later. I could get in from the front door, I knew, but that was clear on the other side of the campus. Fuck that.\n\nStill frowning, I sprang out of my car and spun to grab my big leather teacher-bag from the backseat. The bag was a monstrosity that my mom had bought me when I'd gotten this gig, the permanent one at the end of the summer. That had been just a couple months ago, though I'd been in the building last year for a few months as a long-term sub.\n\nI paused, glaring up at the staff door. I didn't see anyone through the glass; hell, the lights weren't even on back here. Everyone, tonight, would be using the front door. I glanced around; full parking lot. I was probably the last teacher to arrive.\n\nIt was dinner. Stopping for food had delayed me too much. I should've had my food delivered, clearly, but I'd had to rush home and feed Ben's cat. Fucking cat. I ground my teeth and clenched my bladder and cursed myself for dating a guy with a cat. I mean, I like cats. In this case, it was the owner I had a problem with; the cat was just an excuse. Things, I reflected, would be much better right now if my cat-guy had a better penis.\n\nHad to be said. Ben was warm, kind, and generally awesome, but... well.\n\nI stomped up the steps toward the staff door. Jenner's voice drifted from way behind, across the parking lot and on the field; he'd need to leave soon too. He had his PE classes to be ready for, if any parent even bothered coming in to see their kid's PE teacher. I pushed listlessly at the bar on the staff door, the thing not even budging: yep. Locked. I thought about pounding on the glass, even shouting, but I knew that would draw Coach's attention.\n\nHe'd probably come straight over to help out the fresh new young history teacher. While staring at my cleavage. He'd come eventually anyway and let me in, probably right at 5:57 or so, but I wanted into the building now.\n\nI whirled, glancing all around me for an idea. The football team was breaking up over on the field. The lights on the stadium across the street showed soccer players, charging around. And my watch kept on ticking.\n\nMy wild eyes found sudden salvation at last: a door was ajar! Just a few feet away stood two doorways, to the girls' and the boys' locker rooms. One of them was wedged open just now, kept from closing by a flip-flop jammed into the door. I gasped, smiling, thinking about this: I could totally do it. I could charge on in there, sprint through the locker room, and break on through into the school's rear corridor, lickety-split, then make a pit stop at the downstairs bathroom before flying up the stairs.\n\nI checked my watch. I'd be there, emptied, by 5:55.\n\nI didn't hesitate. There was a 50/50 chance it was the boys' room I was shoving into, but it shouldn't matter either way: the boys were out at practice, the girls were in the stadium. The locker rooms should be deserted. So I barged in through the opened door, my nose instantly picking up dirty socks, wet grass, and sweat as I passed through the darkened vestibule and into the fluorescent blaze of the room proper, rows of blue lockers receding into the distance.\n\nI'd never been in here, obviously, since as soon as I stepped into the light I realized it was the boys' room I was in. I paused a moment, listening, trying to figure out where I should go: the door had to be on the far side of the room, though, so with the entire football team getting finished up out on the Alternate Field, I knew I'd better hurry.\n\nI moved, my heels clacking loudly, all the way down that first row of lockers, deeper into the stench. In the corner, my heart exulting, I expected to see a door leading out into the school... but found nothing.\n\nFuck.\n\nOnce more I whirled, my teacher-bag swinging. I had to get out of there. Frantically, I gathered my bearings and started off blindly to the opposite corner, my hopes rising again, and just as I figured I had to be almost to the end of the room?\n\nIt happened.\n\nI rounded a corner, heels clicking to a loud halt that still wasn't louder than my gasp, for in front of me stood a naked boy. No, a naked man: this was Jared Meyer, the top running back, a senior who'd taken a year off with leukemia as a seventh grader. The whole town talked about what a nice kid he was: talented, mature, polite, with soft blue eyes that made almost everyone want to be his friend.\n\nAnd now here he stood, nude, facing me with those blue eyes wide.\n\nThere passed a single, silent instant where we both realized, real quick, that me standing there staring at him was not a wonderful thing: on the contrary, it was suddenly very fucking complicated. \"Oh my god!\" I blurted, but of course I'm a normal woman: my eyes flickered down his body, and Jesus Christ was it ever a luscious sight. His muscles flowed smoothly behind his tanned flesh, every line of his six-pack, of his hipbones, up from his strong thighs, pointed inexorably toward where my eyes went anyway:\n\nHis dick.\n\nIt hung plump and perfect from an impudent little bush, the only hair I could see anywhere, his fleshy shaft dangling slightly to the right. But what drew my eyes the most, what pulled the soft sigh from my flustered mouth, was what I saw swinging underneath... for I am a total sucker for a nice, well-formed pair of balls. And his were delectable, hanging tight and juicy and low, quivering slightly as I watched.\n\nI knew I was staring. And, suddenly, I realized he knew it too: it started as a twitch after about two or three seconds of the two of us standing there, and even as my eyes widened I could see that thick, glorious mushroom-head of his start to rise... I flung my hand over my mouth. \"Jesus Christ, Jared, I'm so sorry!\" I wailed. I looked away, but I had to force myself to do it. \"Goddamn! Um, how do I get out of here?\"\n\n\"Shit.\" He was looking down at himself in disbelief, Adam's apple bobbing as his cock firmed up before our eyes. \"Oh my god!\" He finally seemed to realize where he was, and who I was, and what was happening, and he dived to the side to try to find a towel or something. Which, of course, just showed me his tight, smoothly muscled ass, with those glorious balls peeking through... \"I'm sorry, Ms Norland!\"\n\n\"No, no, it's my fault!\" I swallowed in a thick throat, desperate to get the fuck out. \"Jared, honey, tell me where the door is. I'm just trying to get through to the school... I didn't mean to...\"\n\n\"No, uh, it's over in that far corner. There's a door. It lets out into the PE offices.\" He was still naked, still bent over, still rummaging, and I knew I had to get the fuck away from there.\n\nSo, trailing a final \"Sorry!\" over my shoulder, I tore my eyes away from Jared's sublime body and fled. And that's exactly what it was, a headlong retreat from that smelly locker room and that beautiful body, out toward the salvation of the doorway to the rest of the high school, and all of a sudden the boys' locker room door was slamming behind me and leaving me, blinking, in the vestibule of the PE department, with a couple of parents already trailing in through a side door.\n\nIt wasn't until I'd at last plopped down at my desk as the clock hit 5:58 that I realized I hadn't been able to hit the bathroom. Motherfucker!\n\n* * *\n\nI left a lot more slowly than I'd arrived, my butt numb and sweaty from sitting in my chair for two hours, processing parent after parent after parent. They were nice enough, to be fair, and so was I: I have what my mom has always called \"charm,\" by which she means the ability to put people at their ease. I was keenly aware that I was the new teacher on the block, and that the parents would justifiably be curious about me, so I made a special effort to be nice.\n\nThe dads were definitely curious about me, especially if I leaned forward a little when I made a point.\n\nBut I was done now at the stroke of eight o'clock, and I stretched my body high as I got up out of the chair. The rapid-fire arrival of the parents, starting almost as soon as I'd sat down, had kept my mind off anything but my job, though at the very first gap in the wall of parents I'd taken a quick, undignified jog to the bathroom, hiked up my skirt, dropped my panties and let it all go in a stream that was almost orgasmic in the sense of relief it gave me.\n\nThat had been an hour ago, so as I slung my teacher bag over my shoulder and trudged toward my door, I was pleasantly befuddled before I noticed one last parent standing in the doorway, looking uncertain. I summoned my charm, forgot about the clock, and smiled. \"Parents' Night is technically over, sir, but if there's something I can do for you...\"\n\nThe man looked up from his phone, startled. \"What? Oh! Sorry. I just got a text from my son, telling me to come here.\" He glanced at my room number. \"201. Are you Ms Norland?\"\n\n\"Call me Ella,\" I smiled. \"Pleased to meet you. Whose parent are you? I've got a few extra minutes for a late arrival.\" I dropped my bag on one of the front desks and hauled my gradebook back out. \"Let me guess. Period 2?\" It had been the class with the fewest parents showing up, a sad gathering of vapid freshmen with limited brain capacity, as far as I could tell.\n\n\"Uh, no. I don't think my son actually has you.\" He frowned once more at his phone. \"I'm Kenny Meyer. I'm Jared's father.\"\n\n\"Oh!\" I squeaked, at a complete loss, wondering suddenly whether I should get my resume together for the job hunt I'd need to do once his dad took me to task. Or whether it would even matter, if I was fired for creeping on a nude student in the boys' locker room. For in that moment, rushing at me like a tsunami, I remembered those sweet-looking balls dangling beneath that burgeoning young penis and I swear to god, my mouth started watering. \"The running back,\" I stuttered, my composure quite gone.\n\n\"Yes. He texted me just now.\" Mr Meyer looked nice enough, though frazzled-looking, standing there in a flannel shirt and some Levi's. Steel-toed boots. Safety glasses. I wondered whether he worked construction or something. \"He was wondering... well, I mean, he sent me to ask you about this thing the school does? Some kind of tutoring program?\" I nodded, my heart pounding. I know my face and neck were scarlet. \"He needs some help, like, with social studies.\"\n\n\"He's a senior, I think,\" I managed. \"I teach freshmen.\"\n\n\"Right, but he's in Mr Herrick's senior elective class, and I... well, I don't think he's getting very much out of it. In fact, I just spoke with Mr Herrick, and he thought tutoring from someone else might be a good idea.\" He scratched at a balding scalp. I wondered, nervously and incredibly, whether he had as nice a dick as his son did, then banished that thought far away.\n\n\"Did Mr Herrick specifically suggest me as Jared's tutor?\" I was signed up for the tutoring program, sure enough, and Scott Herrick was my department chair. But it seemed weird that he would recommend me. He barely knew me.\n\n\"Uh, no. That was Jared.\" He held up the phone helplessly, as though he could never think of refuting what was on it. \"He says one of his teammates' sisters is in your class, and she thinks the world of you. So he wanted me to come up and see if you're available.\"\n\n\"Um.\" I knew the right answer, of course: hell fuck no! There was no conceivable good that could come out of me ever having anything to do with Jared Meyer and his magnificent body... I licked my lips. \"Absolutely I'll do it. You know there's no charge for the program, Mr Meyer. There's a grant that pays us.\"\n\n\"Oh!\" He brightened. \"That's great. No, I didn't know that.\"\n\n\"We usually do the tutoring here, after school, but if it's more convenient for Jared, and if everything's going well, we can make other arrangements: the public library, maybe. At a park, if the weather's nice. Something like that. Though it's getting colder now.\" I was feeling giddy, letting my brain take a break while my heart took over. I felt a prickly heat behind my chest, and knew my blush was spreading. \"Should I get Jared's contact information off the computer tomorrow, or do you want to just give it to me now?\" I was talking fast, I knew, my heart thudding.\n\nI wondered whether he could smell my pussy. I'd long since given up thinking this through, pondering the mistake I was letting myself in for. Those balls I'd seen... I didn't want to fuck Jared. Truly, I didn't. I just wanted to be around such a glorious man for awhile, to know what I was doing to him; I remembered that rising mushroom head...\n\n\"Sure.\" He frowned down at his phone, and that's how I left Bennett-Sanderson Parents' Night with the phone number of a gorgeous young man whose dick I'd seen lurching to half-mast.\n\nFor me. It had lurched for me. The thought made me blush anew, all the way down the stairs to my Honda.\n\n* * *\n\nHerrick was not helpful when I asked about Jared. \"Well, you know, I teach a history-topics elective, in addition to AP,\" he explained from behind his big desk. Papers lay everywhere. \"I assign a big project every year, and the seniors can do any topic they want. He wants the middle ages, so I advised him to ask a freshman teacher.\" He looked wearily up from my tits. \"He picked you, huh?\"\n\n\"I guess. What part of the middle ages, Scott?\"\n\n\"No idea. You can help him refine everything.\" He shrugged. \"Jared's smart. I figure he just needs a refresher; it's been almost four years since he's learned your material.\"\n\n\"Oh.\" That sounded a little safer. If Jared had asked for me because I'd made him hard, I didn't exactly want that getting around the school. But if he really did just need someone who understood the middle ages, that was a little better. \"He's clearly heard the rumor that I'm excellent when it comes to feudal duties, cathedral architecture, and three-field agriculture.\" Herrick nodded doubtfully at me; he was not a medievalist. \"When should I start?\"\n\nHe spread his hands across his desk and sighed. \"I don't care. The project's not due until the spring. That class is just in the introductory stages now. But as far as when you meet? That's up to you, Jared, and whoever coordinates that tutoring grant.\" He frowned. \"The guidance office, maybe.\"\n\nBut I didn't really care. I had Jared's number in my phone and trembling fingers to text it with, so I sent off a neutral suggestion of next Wednesday after school for him to come in and see me in Room 201. He replied at once: I've got practice then. I frowned and asked him when he was available, and that's how I found myself waiting in my classroom at the end of the school day... on Friday.\n\nI won't say I'd chosen my outfit with care, but I also hadn't slouched off, either. People at that school tended to dress down on Fridays, but I'd gone with one of my dresses, bright yellow so as not to point out how pale I was: my genes, alas, don't allow me to tan. I'd debated about wearing a little cardigan over top, and in the end I'd gone ahead and put one on. I was top-heavy enough without showing too much cleavage. And I didn't need Jared to see me blush down there, either.\n\nI figured I'd be blushing.\n\nHe made his way in out of the packed throng in the hall, loping easily into my classroom like a man pulling himself out of a river. I was over on the other side of the room, pulling the blinds, when I heard his footsteps. \"Hi, Jared!\" I called over my shoulder with my usual bright smile. \"Have a seat. I'm just closing these because the sun in the afternoon is just a bit too much for this room.\"\n\n\"Okay.\" I was keenly aware, as he scraped one of the chairs out, that my calves probably looked great with me reaching up like this, and if I held the pose a second or two longer than necessary? What did that matter? \"Uh, thanks for agreeing to tutor me, Ms Norland.\"\n\n\"Of course.\" I moved on to the last window. I'd given a lot of thought to this meeting: would either of us mention the elephant in the room? If so, whom? Should it happen organically? Or should I, as the responsible and professional adult I was, just take the bull by the horns and confront it right off the bat? \"Mr Herrick mentioned the middle ages, and that's my favorite thing to teach,\" I went on, the blinds clashing down before me. \"I'm looking forward to discussing it with you.\"",
        "\"Thanks.\" When I turned, I saw his tall body folded into one of the freshman desks, wearing grey track bottoms and a school hoodie. His eyes looked apprehensively at me, so I decided I'd better be that responsible and professional adult, after all.\n\n\"So, Jared.\" I kept my smile as I moved to my office chair and sat down, making sure I kept my knees together. \"I'm glad to see you. Ah, this is definitely different than the last time we met.\" I waited for his eyes to settle down, but they didn't. I could already feel my cheeks getting warm, dammit. \"I wanted to apologize again for barging in like that.\"\n\n\"Oh.\" He looked down. \"It's fine, Ms Norland.\"\n\n\"Just... look, I know how inappropriate it was, and I'm really sorry.\" I hesitated before moving on, but the next thing had been bothering me a bit. \"I also wanted to thank you.\" Now, his eyes did perk up slightly. \"You know, for not telling anyone I was in the boys' locker room?\"\n\n\"Oh!\" He produced a half-smile at that one. \"I thought you probably wouldn't want anyone to know about that.\"\n\n\"Oh, hell no!\" I gushed, chuckling nervously. I don't usually swear in front of students, but \"hell\" is hardly a bad one. \"That could probably get me in real hot water with the administration. Not to mention your coach,\" I went on, not really thinking, just filling in the silence now. \"I doubt he needs a distracted running back.\"\n\n\"Distracted?\" He cocked his head cutely to one side and shifted his legs under the tight desk.\n\n\"Well, I mean...\" I gestured vaguely down at his lap, suddenly aware I should have shut my mouth about a dozen words ago. \"You... y'know. Uh, you reacted.\"\n\n\"Oh! Shit!\" His eyes went wide with alarm. \"Oh my god, Ms Norland, I'm so sorry about that. I didn't think you'd noticed. I'm so sorry if that was, like, offensive...\"\n\n\"No no no!\" I had a sudden urge to get up and give the kid a hug, he looked so distressed, but not in a million years did I think that would be a good plan. \"Don't be sorry, Jared. It's, you know, natural?\" Now I could definitely feel my face, flaming away. \"Maybe we should just forget about it and start over. Like, you can pretend I was never in the boys' locker room; that'd be great. And I can pretend... like...\" I felt myself smiling again.\n\n\"That you didn't... see me.\"\n\n\"See you. Yes. Exactly.\" I beamed hopefully. \"Make sense?\" He nodded, his eyes trying hard not to look down at my chest. I kept on smiling, wondering frantically whether I'd forgotten to do up the top button. \"Great! So. Mr Herrick said you're interested in doing something mediaeval...\"\n\nThe next twenty minutes involved a lot of solid advice about the later Plantagenet kings, who'd been my main focus in grad school. I nodded at him at one point. \"Yeah, you're definitely going to need to look at Agincourt. That means getting into Shakespeare, too, at least a little.\"\n\n\"But that's English!\" he protested.\n\n\"No,\" I corrected, grinning smugly, \"that's a secondary source!\" I leaned forward, and just like that I saw it as Jared shifted in the desk: he was hard, his cock poking far up into his tracksuit bottoms, tenting them with a vague air of lewd menace, like he could turn it into a weapon and attack me with it. My voice faltered a bit when I saw it, and I pressed quickly on in hopes he wouldn't notice I'd seen what he had going on down there. \"Like, you know, a secondary source is written material that takes other peoples' recollections and sort of compiles them together.\" I was babbling, filling in the space while I dragged my eyes back up to his.\n\nHard as a fucking rock.\n\nHe swallowed hard, that Adam's apple bobbing again, and we went on a bit longer about... fuck, I had no idea. None at all. I was completely zoned out, focusing on nothing but the stiff, eager dick on the young man just a few feet away from me. Somehow, though, I got to the end. \"...and then, next time, we can talk about feudal duties. Tunnage and poundage; you'll love it. Otherwise, I think we're done!\" I smiled at him, all bright-eyed again, but he showed no signs of moving. \"Was there something else?\"\n\n\"Umm.\" He looked around vacantly with a little tinge of pink on his cheeks, and I realized he was a blusher too. He glanced down at his lap. \"I, uh, can't really stand up right now, Ms Norland.\"\n\nMy hands flew to my face, eyes wide, and I glanced at once at the classroom door. I'd been careful to keep it open, in accordance with BSHS policy that says thou shalt not be alone behind closed doors with a student, but for every rule there's an exception. \"Oh, god, I'm sorry,\" I bleated, kicking the door closed on my way over to him. He looked so miserable, sitting there mournfully with his big hard dick and his shamefaced expression, and the only thing I could think to do was to try to comfort him.\n\nWhat can I say? I've always been a nurturer.\n\nHe went totally rigid when he realized I was coming to hug him, his mouth dropping open wide, and I swear I wasn't even thinking of anything sexual when my arms went around his neck.\n\nWell. I should say I wasn't thinking of anything sexual yet. Because, as I'd have known if I'd even paused for half a second's thought, a woman my height hugging a seated football player can only have one outcome: his face crashed hard into my cleavage, my big tits smothering him as I rested my chin on his head. \"Poor Jared,\" I whispered, and that's when I looked down and saw my popped cardigan buttons, my flushed chest, and his sandy hair buried between the sweetly rounded tops of my breasts.\n\nAnd I realized this was a bad idea.\n\n\"Mmgff,\" he muttered, his breath hot against my chest, and then I felt his hand go tentatively to my leg, grabbing behind my knee as his whole body seemed to vibrate against me.\n\nI waited a moment or two, firmly convinced I'd screwed up big time, but not quite sure just how badly yet. I patted his head awkwardly, the silence stretching past the point of decency. I was very aware of his hand on my leg, right where the dress ended. \"Umm. Jared, honey? You okay?\"\n\nHe answered in a small voice. \"The hug didn't help, Ms Norland.\" I looked down at last to see his face, even more miserable than before, staring mournfully up from my d\u00e9colletage. \"I sort of had an accident.\"\n\n\"Oh no,\" I breathed, smelling his hair, feeling his body. This is what I was saying earlier. When I went in for the hug, sex wasn't on my mind. I was trying to use compassion to take a kid from shame to something more like reassurance, and now everything had gone horribly wrong... but shit. His hand was on my skin, his face on my tits, mouth separated from my nipple by nothing but a yellow dress and a Secret Whispers bra, and suddenly I felt the need to glance over at the door and make sure it was still closed. \"Oh, I'm so sorry.\"\n\n\"No,\" he sighed, his breath tingling my skin, \"it's okay. It's just... you know. Awkward.\"\n\n\"Oh, of course!\" I gushed, releasing his head and stepping back. Don't look, I begged myself with the last shreds of Jared's dignity, don't look at his lap... but, of course, my eyes went straight there. \"Oh,\" I sighed, quite involuntarily, seeing a massive cloudy stain spreading on his grey tracksuit. \"I'm... I'm speechless, Jared.\"\n\n\"I'm so embarrassed,\" he bleated, and I had to stop myself very firmly from gathering his head right back into my bosom.\n\n\"Don't be,\" I soothed, wondering wildly whether it would be a good idea to crouch down to his eye level; I decided against, figuring my unfastened cardigan would combine with the length of my dress to do more harm than good if I got low. Instead, hesitantly, I laid my hand on his neck. \"You did nothing wrong, Jared. It's just nature.\"\n\n\"I have to go,\" he said abruptly, twisting his neck out of my hand; I pulled my arm back like I'd just fucked up and pushed it into a fire. \"Thanks, Ms Norland. Really. I'm just going to leave.\" He shot to his feet beside me.\n\n\"You can't leave like... well, like that,\" I said, low-voiced, staring down at last. His penis was still half-hard in the thin bottoms, stretching out the material. His cumstain was huge. Unwillingly, he lowered his head to look down at it, and the two of us just stood for a few moments, contemplating the aftermath of his ejaculation. It was fucking surreal. \"You just can't,\" I repeated, shaking my head.\n\n\"I can just, like, cover it. With my hand.\" He shrugged heavily. \"It's fine, Ms Norland. I'm just going to head straight out. There's almost nobody in the halls.\"\n\n\"No,\" I told him firmly. \"Student Council is meeting right down the hall. Listen... just wait. I'll get my stuff together and run interference.\"\n\n\"Interference?\"\n\n\"Yes, dork. Like, I'll walk in front of you. Like a blocker. You just follow close by; I'll get you down to the student parking lot. Easy-peasy.\"\n\n\"Shit, Ms Norland, that would be great.\" He smiled, a crazy floppy grin of relief, then reached unconsciously down to adjust himself. I found myself watching without even thinking about it, his fingers moving his cock and balls around with the ease of long practice. \"That's really nice of you. Uh, were you going to get your stuff?\"\n\n\"Oh! God! Yes!\" I scrambled at once, as if shaking myself out of a reverie, diving to grab my bag and hitch it over my shoulder. I glanced back down at his lap; the stain had become even more obvious, impossibly, and I could tell he was still not soft. \"Look, just walk close behind me, okay? I'll just pretend like nothing's happening.\" I looked into his face until he made eye contact. \"Hey. Breathe. You have nothing to worry about, Jared. This is totally normal, and I can keep a secret.\"\n\n\"Oh shit,\" he moaned. \"This is the most humiliating thing ever.\"\n\n\"Shh.\" I took his shoulder, the firm muscles there filling my hand. \"Just breathe, honey, okay? You got this.\" I nodded at him with what I hoped was a fiercely reassuring smile, then jerked my head toward the door. \"All right. One foot in front of the other. Let's roll, Jared.\"\n\nHe moved in lockstep with me, as far as I could tell, his massive feet hitting the tiles just as soon as my pumps left them, and in the same place. I wondered whether I could feel the heat off his body through my dress; it was unseasonably warm for late October, and I hadn't worn a jacket. I was extremely conscious of his eyes back there, no doubt roving down past my thick hair, tracing my bra-strap through the material of my dress.\n\nStaring at my butt. There was no possible doubt. And I liked it, dammit.\n\nI strode with pride from the building, then down the steps to the parking lot. It was nearly deserted, and I flashed a wry smile back at him. \"See?\" I called gaily, \"easy-peasy. I told you.\"\n\nHe was smiling back, shyly, still close to me. \"Thanks, Ms Norland. You're the best.\"\n\n\"Aw. I'm just trying to help out.\" I whirled near my car, turning my smile back to him, but when my eyes found him he was once again digging at his crotch. \"Jesus,\" I exclaimed. \"Again?\"\n\nWhen he looked back at me now, I didn't detect as much shame anymore. Made sense; we were co-conspirators now, and it wasn't like his continual hard-ons were a secret anymore. Far from it. \"I mean, you're standing, like, right there...\" he sighed, his eyes straight down my dress.\n\n\"Hey. Focus.\" His face snapped back up, eyes on mine at last. \"Look, is this going to be a huge problem, Jared?\"\n\n\"Yes,\" he admitted slowly.\n\nI thought quickly. \"Well,\" I said cautiously, not at all sure how he'd take this, \"I mean, I'll just come out and say it. If I'm going to keep having this effect on you, maybe we shouldn't meet at school.\"\n\nHe raised his eyebrows. \"Really? Like, we can meet someplace else?\"\n\n\"Oh sure. Some of the other tutors meet their students at the public library, for example.\" He grimaced, but I put up my hand before he started to speak. \"I'm not suggesting that. I mean, heck, if you're going to... well, if this is going to happen here, it'll happen there too. Right?\" I frowned, pondering. \"I was thinking someplace private. So you wouldn't need to worry about, you know, being seen. And laughed at.\" I nodded decisively. \"I'll think about it and text you. Okay?\"\n\nIt never even occurred to me to just tell him we just shouldn't meet anymore. Who knows why? Lust already had me. And when I slid into the seat of my Honda, I could feel how wet I'd made myself.\n\n* * *\n\nAnd? My behavior in the matter of young Mr Jared Meyer kept reaching new lows, I reflected as I steered the Honda into the driveway at the address he'd given me.\n\nI knew there were occasional times when teachers in the tutor program made trips to students' homes. I also knew they were supposed to inform the grant administrator and the building principal, neither of which I'd bothered doing. Further, I was quite sure my prior encounters with Jared would have made a visit to his house extremely, no, absolutely unacceptable.\n\nBut hell, I figured. I'd seen the guy's nude dick in the first moment I'd met him. This had started out as absolutely unacceptable.\n\nI'd called Ben and told him he'd need to feed his cat that afternoon, even though it was a Saturday. He worked for a nonprofit and spent a lot of time doing really hard, serious stuff with truly damaged people, but still. He could feed his own damn cat today. I was also trying hard not to feel vengeful about Thursday night, when he'd used the \"I'm tired\" excuse to avoid fucking me. I'd lain awake for an hour after that, staring at the ceiling with a weepy pussy.\n\nThinking of Jared Meyer's juicy, low-hanging nuts.\n\nI needed to snap out of it, I told myself. Things were already bad enough with that kid; he didn't need me showing up in heat. It was bad enough that I was going to his house. On a Saturday afternoon. I parked my car behind a beat-up Lumina, then checked my face in my rearview mirror.\n\nI hadn't put on lipstick, and I was nervous about that. Jared had never seen me without it. I think I'm a pretty plain-looking chick, generally, though to be fair I'd never had a problem getting it when I wanted it. I brooded, staring into my own eyes in the mirror, telling myself I did not want it from Jared. Or, rather, that I could not have it; I was a new teacher on her first real contract. No way could I fuck a student. No way at all.\n\nI sighed, my heart racing. The house was small but tidy, with new windows and fresh paving on the driveway under my flip-flops as I got out. That was another thing today: I was in shorts and a shirt. I'd gone without a scoop-neck today, figuring he'd seen enough cleavage in my classroom last week... at close range. The air was just now starting to take on that November snap, but I'm a girl who doesn't abandon shorts until it's well past the point of common sense. Jeans mean socks, and I'm anti-socks as a rule.\n\nThe little lawn was freshly mowed; I could see the lines in the grass and smell the clippings in the air. It would be time, soon, to put the mower away for the winter. I strolled up the nicely bricked walk, my teacher-bag heavy on my shoulder. The doorbell tinkled inside the house, and I stood there on the cement porch trying not to feel awkward. I felt like a little kid, new in town, showing up early for a birthday party at a house I didn't know too well.\n\nHis feet shook the door as I heard him thud down the stairs, and I put my best smile on when I heard the deadbolt snick back. The front door opened to show Jared, in loose jeans, with a flowy tanktop showing most of his smooth upper chest and shoulders. He smelled, all sweat and grass clippings. \"Hi, Ms Norland. Uh, welcome.\"\n\n\"Thanks for having me.\" I peered inside to see a nice, tidy house with everything tastefully arranged for the space. \"I just parked in the driveway. I'm blocking in your parents' Chevy. Is that okay?\"\n\n\"What?\" He leaned past me out the door and glanced at the driveway. \"No, that's my car. My dad drives a pickup truck. He's working.\"\n\n\"He's not here?\" I wondered whether I sounded as surprised as I felt. Something twinged in my stomach, down low, and I wasn't sure what it was.\n\n\"He works all the time. He's a construction manager. And my mom doesn't live with us, so...\" Jared shrugged and glanced down at my legs. \"Like, come on in. We can get started.\" He turned and headed into the living room, his jeans drooping about halfway down his ass. I giggled, and he arched an eyebrow over his shoulder. \"What?\"\n\n\"I can see your underwear, Jared.\" I stepped in and shut the door behind me. A construction manager, I mused. That explained the new driveway and the windows. \"It's just a little unexpected.\"\n\n\"I'm sorry, Ms Norland.\" He pulled the tanktop down, since a belt apparently didn't occur to him. \"This is just how I usually dress, you know, around the house. I'll go change.\"\n\n\"No, no.\" I held up my hand and grinned. \"Your home is your castle, Jared. It's just... well. They're very bright.\"\n\nHe frowned when he reached the couch on the far wall, then peeked underneath his tanktop at his waistband, and for the first time his grin was genuine instead of tentative. \"They're red,\" he nodded, as if it was a surprise to him too. \"Just what was on top of the drawer. I was out mowing.\" He picked up a sports drink. \"Can I get you anything?\"\n\n\"Some water, if you can,\" I nodded, taking a seat on the far side of the couch. It was a sofa bed, the cushions sagging under me. \"I brought the textbook, and some stuff from home we can look at. Mostly collections of primary sources I used in college.\" I watched him walk toward the back of the house, relieved that there was no erection in evidence.\n\nYet.\n\n\"I'll get you some ice,\" he called from back there. I was inspecting the house, the way you do when you're curious about a new space, and the rattle of the icemaker startled me. I shook my head and started laying out some books on the coffee table, then my laptop, just in time for his shadow to fall over me as he handed me a tall glass. His smell was already sending me signals... the wrong kind. \"Here.\"\n\n\"Thank you, Jared.\" I smiled up and found him just a foot away, those eyes of his a little bit bolder here in his own domain. The glass sweated in my fingers. \"Perfect!\"\n\n\"It's just water,\" he shrugged, easing his way around the coffee table to take a seat further down the couch.\n\n\"Are you, umm...\" My smile turned into a little smirk as I nodded toward his lap. I just couldn't resist even though I knew I'd already been pushing it by commenting on his underwear. \"Can you concentrate so far?\"\n\nHe blinked, then the message got through and that uncertain smile came back. \"I've got it under control, Ms Norland.\" He hesitated. \"I, uh, I sort of took care of it before you got here.\"\n\n\"Really!\" Jesus! The kid had masturbated just a few minutes ago! I took another look at his crotch. \"Well, I guess I'm glad,\" I blurted. \"You should be able to focus today.\" I laughed too loud, my head filled with imagery: Jared, fresh from mowing. Sitting on his bed, stroking that big long cock, those balls bouncing... I licked my lips unconsciously. \"Definitely, you should be able to focus.\"\n\nCould I? Not so far...\n\n\"Yeah. I just still feel bad.\"\n\n\"I'm telling you.\" I resisted the urge to reach over and touch his arm. \"It's nothing to worry about. You're, what, eighteen?\"\n\n\"Nineteen.\" He sniffed. \"I got held back a year, with the cancer.\"\n\n\"Well then.\" My smile warmed. \"Seriously. Your secret is safe with me. Really, truly, it's nothing to worry about.\" I knew I should stop there, but my mouth had been getting me in trouble for over 25 years. It didn't stop now. \"Actually, it's kind of a compliment,\" I snickered.\n\nHe arched an eyebrow. I noticed he was sitting sort of hunched forward on the couch, not relaxed at all. \"Huh?\"\n\n\"Well,\" I went on slowly, pretty sure I was once more on pretty shaky ground here, \"I mean, it wouldn't be happening, you know, if... like, if I was some kind of ugly hag. Right?\"",
        "\"Oh!\" He did smile at that, a quick one. \"God. No way. You're not, at all.\"\n\n\"Thank you!\" I beamed, my last couple of books finding their way into the stack on the table, and as soon as I glanced away at them it happened: a quick motion out of the corner of my eye showed me Jared moving, his hand digging swiftly between his strong thighs as he sat on the couch. I felt that same little thrill I'd been feeling for days now. \"So, yeah. Sort of a compliment. You shouldn't feel ashamed, because I don't feel offended.\"\n\n\"Really?\" He'd stopped touching himself, I could see. He'd tried for one of those quick, nonchalant adjustments men always think women don't notice. I gave him a few more moments, messing with my books, him thinking I hadn't seen it. \"Wow. That's amazing. I guess I always assumed girls would be, like, grossed out.\"\n\n\"That's girls, Jared,\" I sniffed, unable to keep the smug judgment out of my voice, \"not women. That's one of the main differences. We like being admired. We don't think you have cooties.\" I laughed, that simple carefree laugh I'd always been able to summon, the one that tended to put people at ease. I half-turned on the couch, hiking my leg up onto the cushion and curling it under my butt. \"I'm telling you. It's not a problem. You just be yourself, honey.\"\n\n\"Yeah?\" He reflected for a moment, then his Adam's apple bobbed again. \"Well. Thanks.\"\n\n\"For what?\" I blinked.\n\n\"Well I need to, like, adjust myself. It's kind of hard like this, sitting on the couch.\" He took a deep breath, then sent his hand burrowing up under his tanktop and down the top of his underwear, digging. I chuckled.\n\n\"That's a pun.\" I winked, knowing it was a bad idea. \"'Kind of hard like this?' A double-entendre. Do you know what those are?\"\n\n\"Yeah. Ms Bishop taught us about those in English.\" He pulled his hand back out and settled more comfortably into the couch cushions. \"Metaphors. Stuff like that.\" He leaned back at last, and I made my eyes stay on his face.\n\n\"Ms Bishop,\" I mused. She was a friend of mine, taller and skinnier. \"Does she cause the same... um, reaction that I do?\" I asked it lightly, with a smile.\n\n\"Uh, well... sometimes,\" he confessed, and then we were both laughing on his couch. My water waited on its coaster, forgotten beside my equally-forgotten books as I settled myself more comfortably. Both my legs were up on the couch now, my arm across its high back. I was aware that I was displaying myself, and aware that it was a bad idea, and I didn't care. He smelled so good... \"Like you said, Ms Norland, it's totally natural.\"\n\n\"It is.\" I nodded slowly, then waited again for his eyes to find my face before I lowered my eyes, slowly and deliberately, down past his bare arms and the side of his chest in the tanktop's oversized arm-holes, past those six-pack abs I remembered from that day in the locker room, now sadly hidden, and down to his lap. I stared, letting him see me do it. Letting my mouth mold itself into a sly smirk. \"I thought you said you took care of that, Jared. Before I arrived.\" I knew I was already scarlet. \"That you had it under control.\"\n\nHe waited to reply. I could almost read his mind, the wild hormones in his body. He wasn't going to speak until he could be sure to get it out smoothly, without his voice cracking. \"I thought I did,\" he admitted. He sounded a little deeper than before, but quieter. More intense. \"Maybe I don't.\"\n\nFuck! I looked down at myself, my shirt pulled tight over my left tit with my arm high up like that, the shorts creeping up my thighs... \"I'm probably not helping, either,\" I mused, \"since I'm apparently not an ugly hag.\" I'd stopped thinking much at that point, remembering that sweet strong young man standing there in the locker room... knowing that beautiful body wanted mine... His smell overpowered me.\n\n\"Fuck no, you're not,\" he breathed. It came out in a gush. I felt my lips tighten triumphantly.\n\n\"If you need to adjust yourself again, Jared, you should.\" I could hear the burr in my voice now, a dangerous huskiness. I knew what it meant, but again, I'd stopped thinking. I'd been like this before, sometimes, especially in college: there'd been guys I'd fucked just because I was horny and they were handy, without even seeing their dicks first. This time, it was so much more powerful, so inexpressibly naughty. \"Feel free,\" I added. I wasn't smiling anymore.\n\nHe nodded like a bobble-head, eyes wide on my chest, his hand moving on autopilot back under his tanktop, burrowing once again into his bright red undies. I willed it there. I wanted him to cum again, and I knew he would. This time, I wanted him to do it willingly, and it was important to me that he knew I wanted that. Craved it. \"That's it,\" I cooed, joining him in his nod as his hand pushed deep. I could feel my nipple pressing hard against my bra; if my shirt had been white, he'd have been able to see it clearly.\n\nNext time, I promised myself vaguely, I'd wear white.\n\nI looked greedily down at his lap, hiding nothing anymore, my eyes on his fingers as they curved deep down underneath those beautiful balls of his, freeing them. His eyes remained riveted to my tit, and it occurred to me that I should probably take my shirt off, give the kid something to look at... but lord, what a line that would be to cross!\n\nI laughed at myself. Like there was a line, anymore.\n\nSo I hooked the hem of my shirt, easing it up, saying nothing as we watched each other. I don't have the world's flattest belly, but I didn't care; in the moment, I wanted to show myself to him, to justify what he had shown me, even unintentionally, in that locker room. To give him something he could think about and masturbate to for years, like I would be masturbating for him.\n\nI loved that we didn't even need to talk.\n\nHe was jacking himself more openly now, his hand in long steady strokes inside his underwear, legs opening. I got a sudden urge to join him, to unzip my shorts and shove my hand down inside them and plunge two or three fingers deep inside me, to let him see my pussy-drool when I pulled them out and licked them off. My hand across the back of the couch dipped down, along the cushion there, until my fingers found his shoulder. I could feel the muscles there in smooth motion as his distant fingers groped himself.\n\nMy shirt rose up my stomach, his eyes staring greedily, then up and over the great firm mound of my left breast, the one closest to him. I could feel the shirt stretch along my whole right side. His eyes grew wide and somehow feral when he saw my pale, full tit in the navy-blue bra I'd stuffed it into that morning. I knew he could certainly see my nipple now, circled by wide areola gone dark and hard with my lust, all of it caged by blue lace.\n\nHis shoulder was hot and smooth beneath my fingers; I was idly stroking the skin there, and I hadn't even thought about doing it. I leaned up off the couch, pulling my shirt higher, an invitation: he was looking. He could touch, if he wanted to. I was way, way past the point of caring about much of anything to do with school, or propriety, or my job, or whatever. We were just two people here, alone, doing what came naturally, and it felt so good.\n\nOne more time, I saw that Adam's apple bob, and I was just about to nod at him, maybe even lean in to breathe his body in when his dick erupted, the two of us closed now in a bubble of lust quivering, growing, waiting to pop, when suddenly we heard a loud noise from outside.\n\nA pickup truck door, slamming closed.\n\n\"Oh my god!\" I scrambled on the couch, shifting, hauling my shirt back down over my chest; Jared's hand whipped out of his underwear just in time as his dad opened the front door. He walked in to see me staring up at him from among my piled books, smiling crazily. \"Hi there, Mr Meyer!\"\n\n\"I forgot you were coming over today, uh, Ella.\" He looked tired. \"Jared, thanks for mowing. I'm going to do some quick spreadsheet stuff in my room, then it's back out onto the jobsite later this afternoon.\" He nodded at us. \"I'm glad Jared got you some water, Ella. Did you just get here? You're all flushed.\"\n\n\"Yeah, I was running late,\" I lied, my nipples still taut. My pussy shouted at me, craving relief. \"I hurried in. Jared's been a great host, Mr Meyer.\"\n\n\"Awesome. Well, don't let me interrupt you,\" he nodded, heading for the back of the house in his heavy work boots.\n\nDon't let me interrupt. If he only knew. We sat there on the couch, breathing deeply, staring at each other. And then Jared shrugged and pulled up his tanktop and I giggled, for he had another set of cumstained clothing to deal with.\n\n* * *\n\nI saw him in the hall the following Monday, as I did my bathroom duty, walking along with his friend Mikey Lee and his sports drink and his low-slung jeans. Seniors often ditched class informally, asking for the bathroom pass and then meeting up with their friends. We made eye contact, and I know I blushed. \"Hi Ms Norland,\" he nodded.\n\n\"What's up, Jared?\" I asked, and as the double-entendre struck home, we shared a small secret smile. I followed it up with a quick, cool glance at his crotch, but by that time he and Mikey were already on their way back to class, drifting down the hall in that lazy way students have when they're informally ditching class.\n\nI looked down. Good thing I wasn't wearing white today, or Mikey Lee would have had something to tell his friends.\n\n* * *\n\n\"They're not going to score,\" Brenda lamented.\n\n\"Sure they will.\" Bennett-Sanderson was on the fifteen yard line, driving against Glen Avery, and Jake sounded certain of himself. He and I were both new hires this year, him in the English department. In a world without Ben, his inferior penis, and his cats, Jake was a guy I might have my eye on. Even though he was married. \"They'll get it to Jared Meyer. He'll score.\"\n\n\"I dunno.\" Brenda sighed and sipped at her Pepsi. \"He's good. I don't know if he's that good.\" He wasn't either, running the ball in his grass-stained football pants straight into the teeth of the Glen Avery defense. \"See?\"\n\n\"He'll get the next one.\" Jake smiled at me, but I only had eyes for Jared's butt in those pants. \"What do you think, Ella?\"\n\n\"I don't know him,\" I blurted.\n\n\"What?\"\n\n\"The Jared kid. I teach freshmen.\" I hoped I wasn't blushing yet.\n\n\"Yeah, but you have been watching the game, right? You do know that he might be able to run the ball, right?\"\n\n\"He's a nice kid.\" Brenda was Ms Bishop, of the metaphors and the secret hard-ons. I wondered whether she guessed. \"Bright.\"\n\n\"I don't know him,\" I repeated, leaning forward. The play was about to go, the tension rising on third down, and next thing I knew Jared was bouncing through three defenders and dragging a fourth, lurching over the goal line with the ball. The stands thrummed beneath my feet as the crowd went crazy, deliriously crazy, and I'm not sure I'd ever been so horny in my life. \"Wow!\"\n\n\"Right?\" Jake beamed at me and traded a high-five with one of the students on his other side.\n\n\"Excuse me,\" I said quickly. \"I'm off for a trip to the ladies' room. Anyone need anything from the snack bar?\"\n\n\"Nah.\" Brenda was still working on her hot chocolate, which was just as well; I figured to be gone awhile. I wasn't peeing.\n\n\"I'll be back.\" The crowd buzzed around me, for Jared had just put Bennett-Sanderson up by five. I wended my way carefully among all the students and their cheery grown-ups, treading obliviously over spilled popcorn and stepping on peoples' blankets, for I had just one single-minded goal: the stalls in the womens' restrooms back by the fieldhouse.\n\nWhich were, thankfully, deserted. The fieldhouse had only been built last year, so the bathrooms were still nice and clean and functional... and, importantly, the stalls all had doors. I hip-checked the stall door open and practically dived inside, whipping my leggings down to my knees and pushing my thong down along with them. My bare ass was on the seat in moments, leaving me to marvel at how wet I'd gotten the lining in my underwear.\n\nNowhere near as bad as the soaking I'd had to put up with at Jared's house, with his dad puttering in the back bedroom and the son and I pretending to do history while the semen dried under his tanktop. But still pretty bad. I parted my thighs as much as I could, my eyes heavy, and within seconds I was sighing in relief with my fingers churning through my soupy pussy.\n\nI wasn't going to last long. I'd need to bite my lip to keep from shrieking, though, I knew that much. I slid two fingers straight in, blunt, to spread my lips, and then I hooked them upward to stroke my g-spot while my palm put pressure on my burning clit. I was into it at once, already zoning out, my mind on Jared and his big sexy balls, when the outer door creaked open.\n\nIt didn't stop me. Nothing would have. But I definitely picked my head up and started paying close attention to myself. I could not get caught. I figured the school would take a fairly dim view of a teacher frigging herself in a public restroom during a football game. But there were definite footsteps out there now, the light feet of students in tennis shoes, two girlish voices talking.\n\n\"Fuck! I hate Lindsey!\"\n\nAh. Students.\n\n\"She's always late on that last flip.\"\n\nCheerleaders.\n\n\"What a run, though.\" The second voice was sure, confident, and I started: I heard that voice every morning, doing the building announcements. Alyssa Maclean, the student body secretary. \"Fucking Jared, man. He's so good.\"\n\n\"I know, right?\" One pair of shoes stopped at the sink; if I peeked below my stall door, I could see them crossed casually as Alyssa leaned there calmly. Her friend plunked down on the toilet in the stall beside me, and I bit my lip harder. My fingers kept dancing. The voice came from right beside me now. \"I might blow him tonight, after the game.\" Well. That pricked my ears up.\n\n\"Get in line.\" I heard a small, cute grunt, and then Alyssa's shoes were swinging under my door as she perched her butt up on the sink. \"That run he just made might be the winning score. All the cheerleaders are probably going to want to blow him.\" She paused, and I heard the clack of her nails on her phone. \"I'm not interested,\" she added distantly.\n\n\"No?\" I heard the tinkle of the other girl's piss. My own fingers had slowed way down. \"Why not?\"\n\n\"Been there, done that.\" Alyssa sounded bored. \"He and I hooked up at a party last summer, Meghan Gordon's eighteenth.\"\n\n\"Ooh!\" The urine continued. \"Meghan's such a bitch. Hooked up how? Did you go all the way?\"\n\n\"I tried.\" Alyssa laughed softly. \"Look, don't get me wrong; Jared's great. But he's just not... long-lasting. Never has been.\"\n\n\"Oof. Poor guy.\" The tinkle slowed. \"That's weird. He's so hot. Does he just get awkward? Like, is he a virgin or something?\"\n\n\"He is hot,\" Alyssa agreed, \"and his dick is really awesome. He's just, you know, a nightmare from the stamina point of view. He's not a virgin, though. Remember Whitney Taylor, who graduated last year?\"\n\n\"Yep.\" The toilet-paper dispenser trundled next door.\n\n\"She had him. Said he lasted about two and half thrusts. She didn't even come close to getting there.\"\n\n\"Yeah, well, if it was his first time...\"\n\n\"Nah, he hasn't gotten much better.\" Alyssa sighed. \"It's really unfortunate. That hookup I mentioned? At Meghan's? We were naked and everything, totally ready to go. He was on top of me, and let me tell you: I was fucking desperate. I mentioned how great his dick is, right?\"\n\n\"Hell yeah.\" The other girl flushed.\n\n\"So I was wide open and wet as hell. I reached between us to, like, push him down? Toward my pussy? And the moment I touched him, he nutted.\"\n\n\"No shit!\" She giggled. \"He busted, like, on your tits?\"\n\n\"No, just like all over my stomach. I wasn't into it.\" The other girl's giggle was rising to a chuckle. \"It wasn't funny, Brittni. I was needing dick that night. And he's such a nice guy; I'd have totally let him cum in me. But?\" She sighed as the other girl washed her hands. \"C'est la vie, I guess.\"\n\n\"What's that mean?\" Brittni asked, after a pause.\n\n\"I dunno. It's something my grandma always says.\" I heard the rattle of the paper-towel dispenser, then a creak as the outer door opened. \"Anyway. Like I said, you're welcome to suck his dick as far as I'm concerned. But I can't imagine it'll last that long. Poor guy.\"\n\n\"I think I might. At least it'll be another senior. I'm keeping score, of course.\" Their laughter faded into the night.\n\nThe door closed.\n\nAnd my fingers churned back to life. \"Two pumps into Whitney Taylor,\" I muttered to myself, imaging what she'd felt, the power of that amazing penis pushing inside her for its first trip inside a pussy, and then I imagined that I was her, panting underneath him, and then my fingers were growing slicker and slicker as I sagged down on the toilet seat, my self-control evaporating into an orgasmic haze.\n\nI reached my other hand out and stiff-armed the wall that had separated me from the peeing Brittni, biting hard on my lip, suppressing a gasping sigh of relief as my orgasm took me far away on a frothy pink haze, my whole body surging as if I was feeling my pulse beat in every part of it, centered on my trembling clit as I lost control.\n\nGoddamn.\n\nI was shaky when I wiped up and got to my feet. The face I saw staring back at me in the mirror was all mottled pink and white desperation, my eyes fiery with lust. I looked disheveled and sated and fucking hot, all at once.\n\nSo I made sure to run my fingers through my hair and touch up my lipstick before I found my way back to the stands, where I told my friends I'd gotten waylaid by a parent.\n\nThey didn't seem to care, and Brenda still hadn't finished her hot chocolate.\n\n* * *\n\nI felt weird hanging out inside the school building after the game. I told myself I had grading to do, which was certainly true... but there was no reason why I should be doing it in my classroom at... I checked the time on my phone... eight-thirty at night. Mind you, the building was still busy: the Senior Council was meeting in Mr Janes' classroom just down the hall from me, planning the pep rally, and then there was the girls' volleyball team: they'd get back on the bus from St Aidan's Prep anytime now. But I didn't care about any of that.\n\nI'd taken a deep breath after the game and texted Jared.\n\nI didn't really want to admit it to myself, but I was stung by Brittni (whoever her tarty little ass was) and her vow to suck his dick. Something in me rebelled against that. It was lust, partly, sure, but there was something else: a feeling that if Alyssa was right (and, based on the two cumstains I'd seen in his lap, I figured she was), then he needed someone better than Brittni. Someone who could appreciate him. Someone who could help him out.\n\nSomeone like me, I guess. He was nineteen, I wasn't his teacher. Thanksgiving was coming: it was cuffing season, so why not? That's what I told myself, anyway.\n\nI was tingly as I sat there at my desk, compulsively checking my phone. He'd not texted me back yet. I'd congratulated him on scoring the winning touchdown, then I'd told him I'd be available for tutoring if he wanted to wait until everyone else left. I was aware that could take awhile: the team finished a game, the coach talked to everyone, I assumed they showered and packed up, and then they all left. I was hoping Jared would see my text and want to stay.\n\nAnd that he wasn't going to shower.\n\nBut I'd been waiting half an hour now, and... nothing. Not a damn thing. I had a momentary panic as I wondered whether he'd left his phone with his dad, say, at the moment my text came across, but I reassured myself that there hadn't really been anything about it that was super-suggestive. Sure, offering tutoring services in the school after eight on a Friday night was suspicious, but...",
        "Jesus. I had it bad.\n\nWhen my phone shook on my desk, I pounced on it at once. The screen came aglow too slowly for me, but eventually it lit up to show what I wanted, no, needed: a text back from Jared Meyer. Who was, according to him, in our old stomping ground: the boys' locker room. My fingers flew across my phone with deceptive speed, telling him I was just about to leave... but I'd come congratulate him before I did.\n\nHis reply made me wonder whether he'd figured all this out yet: Shud I wait at the door?\n\nI smiled to myself as I replied. No need. As long as no one else is in there with you, I'll be sneaky. Like before. I thought about adding a thumbs-up or, god forbid, a heart, but in the end I just decided to head on down there as I was. Only, I did sit up in my chair, check to make sure nobody was out in the hall, and perform that complicated feminine maneuver where we pull our bra off without removing our shirt.\n\nI was almost hyperventilating by the time I got all my stuff loaded back into that damn teacher-bag, but by the time I was clacking down the deserted halls toward the stairs I caught sight of myself in one of the windows of the trophy case and realized I looked a lot calmer than I felt. So I made myself slow down, breathing, moving with much greater deliberation. I already knew he had stamina problems: the last thing he needed was me, flying in there as if I was late with my rent, stressing him out.\n\nI didn't know what I was going to do with him. Honestly. I just knew I didn't want someone like Brittni anywhere near him. I'm keeping score, of course... He deserved better.\n\nThe only thing I saw on my way toward the PE department was one of the custodians, way down the hall, pushing a mop bucket in the other direction. As near as I could tell, the volleyball team still wasn't back. So they wouldn't be mopping down this way until later, I hoped, but by then that familiar door was beckoning me with BOYS LOCKER ROOM painted on it in white freehand, and I was taking a deep, deep breath and then pulling it open as quietly as I could.\n\nThe room inside looked and smelled exactly as it had the night I'd first seen Jared naked, just a couple weeks ago. I poked my head inside and listened, but heard nothing at all; when I glanced to the side, where the office was, the lights in there were all off. The whole room seemed completely deserted, but then I'd made that mistake once before...\n\nI stepped inside and felt the door close softly behind me. I opened my mouth. \"Hello?\" I called, none too loudly. I was rewarded with a clang off to the side, like a locker closing.\n\nThe silence grew heavy.\n\n\"Ms Norland?\"\n\nI felt my face virtually split open into a broad grin as I hurried toward the sound of Jared's voice. \"Are you alone?\" I hissed as loudly as I dared, searching among the endless aisles of lockers.\n\n\"Yeah.\" The voice provided me a marker to aim at, and I raced down the next aisle with my bag flopping behind me.\n\n\"Oh my god!\" I gushed as I rounded the last corner. \"I'm so glad you stayed!\" I'm not sure what I was expecting: my wild fantasies featured him, shirtless, once again stinking of grass and sweat and with his penis already hard through those tight football pants. Still, I wasn't about to refuse whatever I did get, so when I saw him in jeans and a t-shirt I lit up anyway. He smiled at me, especially when his eyes found my free-swinging tits, so highly obvious in my tight shirt. \"Hi there, Jared.\"\n\n\"A little late for tutoring, Ms Norland,\" he said quietly. He was leaning against the lockers with his hands in his pockets, but he was smiling, eyes on fire, all lit up with the glow of health and the pride of victory. \"Kind of a weird place to do it, too.\"\n\n'Oh, shut up.\" I dropped my bag on the floor, then smirked up at him. \"I was wondering if you'd, like, change. And shower.\"\n\nHe shrugged. \"I had to. I was waiting around for everyone to leave. I had time to kill.\" I stood there, shifting my weight from one foot to the other, conscious of my loose tits and the way the leggings gave me cameltoe. He noticed, too, his eyes roving my body.\n\nI cleared my throat. \"I just, you know, wanted to congratulate you. That run for that last touchdown...\" I shook my head and looked down his body. \"You looked so good,\" I said in a rush, my voice hitching a little at the end. \"So good.\"\n\n\"Aww.\" He smiled, boyish and handsome and fresh and warm, and I felt my heart and my pussy melt. Goddamn, this guy was hot! I couldn't believe I was there. \"It's a team sport, Ms Norland.\"\n\n\"No,\" I replied at once, \"the team won the game, sure. But you. Looked. Good.\" I said it slowly and firmly, making strong eye contact, trying to make sure he knew what I meant. On impulse, I reached out and took his wrist, pulling his hand out of his pocket. His fingers gripped mine, and I started to get very warm. I knew my nipples were firm and obvious. \"Really, Jared. You're amazing.\"\n\nHe swallowed, Adam's apple bobbing, his chest starting to rise and fall faster. \"I mean, if you insist? I guess I am amazing.\"\n\nI laughed, way too loudly. \"I do insist.\" Our fingers toyed with each other briefly, and I forced myself not to look down at his groin. \"I mean, I really was proud of you tonight.\" I heard that burr in my voice again and let my smile go crafty, knowing. \"I'd give you a hug, but... well, I know what that would do to you.\" I finished in a mock whisper, with a big wink, just enjoying being with him. \"I don't want you to stain another outfit. If you know what I mean.\"\n\n\"I, uh, sort of enjoy it,\" he rumbled with a faint smile of his own, and I let my mouth curve into a huge grin.\n\n\"Oh my god!\" I smacked his chest with my other hand. \"That's fresh.\" I did look down this time, making a show of it, and giggling when I saw it. \"I knew it.\"\n\n\"Might as well hug me now, though.\" That shy smile again, and I was nodding as I stepped to him, arms opening. This was nothing like the usual teacherly half-hug, either; I wanted to feel his body against mine, and I wasn't shy about leaning against him. I rested my head on his broad chest, hearing his breathing, and I closed my eyes. His hands went to my back, tracing up and down; if he didn't know I was braless before, he'd know it now. His penis was a bullet, prodding my belly, and there was suddenly nothing I wanted more than just to press my body against it.\n\n\"Mmm.\" I let him feel my breath through his shirt. \"Wow. A stain is a definite risk, Jared.\" We both chuckled, though, and his hands didn't stop moving up and down my back. I felt warm and safe, melting into the arms of this beautiful young man, and then my mind started wandering... why not... \"You know,\" I purred, backing my face off his body so that I could look up at him with my back arched, \"stains aren't a foregone conclusion, honey. There are ways to avoid them.\"\n\n\"What's that?\" He was hunched over slightly, trying to keep his hips back. Poor kid. No, there was no way someone like Brittni was going to damage Jared, not if I could help it. \"Avoid them?\"\n\n\"Sure.\" I was speaking softly, our faces close. His breath smelled like that sports drink he liked. \"I mean, you'd need to get the clothes out of the way. It's pretty much that simple.\"\n\n\"Wait. What?\"\n\n\"It's not the end of the world, Jared,\" I giggled. I knew I was scarlet, all the way down. I felt hot and giddy. \"We've established, by now, that you pretty much always react to me that way. And that I'm okay with it.\" I took a deep breath. \"And, you know, I've already seen... it.\" I smiled encouragingly. \"In this very room. I didn't ask for it, but.\"\n\nHe was nodding, Adam's apple bobbing again. \"It's different,\" he whispered, his voice as husky as mine. \"Like... hard. It's different, taking it out.\"\n\n\"It doesn't have to be.\" I was cooing now, riding a wave that only the two of us could feel. \"It doesn't have to be different.\" I took a deep breath, no longer smiling. \"Do you want me to take it out, Jared?\" He was staring at me, wide-eyed, completely overwhelmed. He was going to cum, and there was nothing stopping it; I did not want him to have to go home hiding his lap again. My voice roughened. \"I want to take it out.\"\n\n\"You want...\"\n\n\"Shh.\" I had decided. It was for the best, for him and for me. For us. I nodded at him. \"Just relax, honey.\" I untangled myself from his stunned arms, backing off, my face flaming. It seemed the most natural thing in the world to slither down to the floor, kneeling for him, looking up past his pants and his shirt to see disbelieving eyes riveted to mine. \"Relax, Jared. Let me do this.\" And suddenly? Fuck. I wanted it, wanted it badly. I wanted to pull out his cock and suck it into my mouth and take his load. My voice, when I spoke, didn't even sound like my own. \"You've already cum for me, on your own. Let me do it this time.\"\n\n\"Fuck.\" It came out as an awed whisper, and why not? He was watching a teacher lift her hands to his waist, my lower lip clamped between my teeth, and undo his fly. I could almost feel warmth pulsing behind his pants, a blazing wash of body heat flooding from his dick to my hands as I unzipped him, then pulled his jeans down. \"Ms Norland, I...\"\n\n\"Relax, honey.\" I sounded like a smoker, my voice choked with lust. \"Spread your legs a little.\" He was standing like a soldier, his pants clamped by his thighs, and as he kicked his feet apart I let his pants side down those perfect, muscular thighs. I gasped. \"Oh my god, you're beautiful,\" I whispered, and then I looked up and there it was, straitjacketed by another pair of briefs, these ones black. I could see the long, hard ridge of his penis through the cloth, and I licked my lips. \"Just beautiful.\" I glanced up. \"Take off your shirt, honey. You have a lovely body.\"\n\nHe was nodding crazily now, sweeping his shirt up and off as I snaked my fingertips into the overworked elastic of his waistband. His skin was hot against my fingers as I pulled the briefs down, the elastic catching hard against his penis and pulling it down, down, its veiny thickness sprouting from that jaunty little bush of his, until I dragged them low enough that, at last, that fat long dick went springing up straight before my eyes.\n\nI squealed. I know I did, even though I wasn't really thinking of anything at that point but the magical, unbelievable fact that I was kneeling face to face with Jared Meyer's glorious hard-on. I know my face lit up. I know my mouth watered. I know my pussy gushed. And I know that when I'm on my deathbed, that's the penis I'll remember as the best and most desirable I ever saw.\n\nIt was altogether perfect. Its rightward lean when soft didn't translate when hard: it poked straight at me, rich and thick, every ridge and vein standing out in firm relief. It had a symmetry that I'd often glimpsed in other men, but never really appreciated before. His color was that sexy shade of dark, deep red, the red of a straining man ready to fuck. His head flared gracefully out, meaty, velvety, its slit glimmering now in the harsh light of the locker room. \"Holy fuck!\" I exclaimed hoarsely, looking up past his smooth abs and his chiseled chest to see an odd expression on his face, an expression I imagined he'd had when he scored that touchdown:\n\nPride.\n\n\"I love your cock,\" I marveled, and I hadn't even touched it yet; I bent low, craning my neck eagerly, desperate for another sight of those tempting balls of his. They waited for me, shadowed now by the tower above them, in a dark scrotum bristling with fine hair. I licked my lips and sat back a bit, my eyes rising and falling, taking him in. \"Just beautiful.\"\n\nJared shifted his weight. His cock stood well above the horizontal, and it called out to me: I needed it, and it needed me, and I leaned in to cross my eyes on his cockhead as my hands drifted slowly up past his knees, along his thighs, feeling the life flowing through his muscles, the heat and scent of his skin.\n\nMy mind was overwhelmed.\n\nI had no conscious thought of giving him a blowjob; it's simply what my brain screamed at me to do, so when I leaned forward with my lips puckered, eager to taste his flesh, it seemed like the most natural thing in the world.\n\nUntil he drew back from me.\n\nI turned my face upward, mouth expectant, eyes wide, my hands resting lightly on his hips, and the odd drugged expression on his face gave me no real warning at all before his dick erupted all over me. His first blast sprayed my chin with great force, feeling like a spatter of hot chocolate; I flinched back, startled, in time for his second spurt to come sailing out.\n\nAnd it was a lot bigger than the first.\n\nBut not quite as big as the third.\n\nHe groaned his way through six hard, overeager shots, his penis twitching joyfully with nothing touching it, and every drop of those six shots smacked right onto me. I felt it everywhere: on my lips, in my eye, up my nose. A big, slow, viscous wave of it went rolling down my neck and into my shirt, which had taken more than its share of direct hits as well.\n\nThe guy had delivered such a massive load that I looked like a bukkake refugee.\n\nI was laughing when I wasn't coughing, his taut body slowly relaxing beneath my palms, my mind filled with the crafty joy of having made him cum properly this time. Well, almost properly. \"You're supposed to wait until I get it in my mouth,\" I giggled, cocking my one good eye up at him. My nose and mouth were full of him, a salty-sweet thickness whose flavor shot straight to my pussy and made me want more.\n\nHe was looking down at me desperately, almost panicking. \"Holy shit,\" he said low and hoarse, as if he'd shocked himself.\n\n\"What?\" I blew his semen out of my nose and into my hand, then licked it up greedily. I sat back on my heels. \"Never given a girl a facial before?\"\n\n\"Not... not like that.\" He was grinning now, though, my good mood infectious. \"Are you okay?\"\n\n\"I'm better than okay.\" I was lolling my tongue around my lower face like a windshield wiper, trying to get all his spunk into my mouth. His sperm crept down my chest, tickling my cleavage, my shirt totaled. I laughed again. \"Much better. Damn, Jared! That was amazing.\"\n\n\"Sorry about your shirt,\" he mused, standing there with his chest heaving.\n\n\"It's fine,\" I beamed, smiling up at him. \"I don't mind you staining my clothes.\" I tittered. \"That's not the only stain I've got either, Jared honey. If you know what I mean.\" His wrinkled forehead told me he didn't really, until he gave it a little thought. \"That's right. I enjoyed it too.\"\n\nI was dripping inside and out, panties and shirt already sticking to my skin. Somewhere in the back of my mind I was already coming back down to earth, thinking of what I'd need: I'd have to rinse my face off, then sneak in before Ben saw me while hopefully leaving no semen in my car to stink it up. I'd need to run a load of laundry tonight, the moment I got home. Maybe he wouldn't be there...\n\n\"I loved that, Jared,\" I beamed. \"Don't you dare apologize. But, honey? Can you do me a favor and point me toward a sink? I don't think I'll be able to get all of this into my mouth,\" I winked, my fingers clearing my other eye. My nose felt weird, like after you shoot some nasal spray in there.\n\nHe was very solicitous, holding my hair back as I washed my face, which was a lot more than some guys had done for me after frosting my face. I left him with another close, no-holds-barred hug, then stepped back quickly before I could feel him harden up again. I'd gone quite far enough with him; I didn't need to go any farther that night, and that was how I became perhaps the oldest female ever to do the walk of shame out the back entrance to the BSHS boys' locker room. The look I gave myself in the rearview mirror showed me wide, vivacious eyes in a face flushed with excitement.\n\nAll that... and I still hadn't actually touched his cock. Amazing.\n\n* * *\n\nThings didn't go much better the next time I saw Jared.\n\nFor starters, full disclosure: yes, I comprehend that I should have stopped having anything to do with the kid, long before I let him cum all over me. I understand all that. It's generally frowned upon, I realize, for a new teacher to let students blow their loads on her face.\n\nI get that.\n\nBut every time I thought about that, the justifications rose up like phantoms: he wasn't my student, really. I was a teacher at his school, sure, but I wasn't his teacher. And he was old enough: in other times and other places, he could pick up a gun and fight in a war. And? Most importantly of all?\n\nI couldn't let the supercilious laughter of tarts like Alyssa and Brittni be the soundtrack to which such a magnificent penis launched its loads.\n\nIn my mind, that was clear: Jared deserved a good partner, the right woman with whom to share these experiences. And, to me, it went without saying that I was the right woman. So? I texted him the very next day.\n\nAnd that's why I was back at his house just a couple days later, on another Saturday. His dad was more reliably gone this time, he insisted, and so off I went in my happy Honda. By this time it was solidly mid-November, so I was in boots over another pair of leggings and a fleece. Once again, I dispensed with a bra; this time, I also dispensed with my teacher-bag.\n\nWhy pretend? He was doing fine on Scott Herrick's assignment, anyway. He'd really never needed tutoring, just advice.\n\nSo the next time I went over there, I felt ready. I figured he'd know by then that we wouldn't be doing history work; he'd clearly had the wit to empty himself that first time I'd gone over there, so I assumed he'd go ahead and do it again now. Even though it hadn't worked all that well last time; maybe familiarity, the decresing novelty of cumming with me, would let him last longer.\n\nAfter all, much like Jared Meyer's dick, hope springs eternal.\n\nIt had started out great. He'd let me in and I'd asked him what he wanted. \"Necking? A little make-out? Want me to try to blow you again?\" I'd frowned doubtfully. \"I'd happily give you a handjob, but who'm I fooling? I know you wouldn't last, honey.\"\n\n\"I came, like, ten minutes before you got here,\" he'd protested. \"I can do this.\"\n\n\"Do what?\" But I'd smiled indulgently, and let him lead me over to the couch. We'd taken a seat in silence, with little of the organic passion I'd felt for him last time, and I'd reached over to take his hand. \"Are you nervous?\"\n\n\"No.\" But of course he was, so naturally, his penis had betrayed him once more. This time, at least, I'd saved my own clothes; he'd spewed while I was in the process of showing him my tits. I'd been aware mine weren't the first he'd seen, obviously: Alyssa had mentioned the two of them being naked, but she was a lot smaller than me. And, let's face it, I was a teacher. I was forbidden fruit for him just as he was for me, so as soon as I pulled my shirt up off my breasts and let them jiggle back down, he'd been in trouble.\n\n\"Touch them, baby,\" I'd urged, my voice finally starting to get hoarse as he leaned up over me on the couch. He'd gotten his shirt off too, and as his eager lips found my nipples I'd been unable to resist reaching straight down his pants and grabbing that splendid cock he had in there for me.\n\nAlas. I should have taken Alyssa's indirect advice.\n\nThe first few seconds were transcendent, his lips sucking on my tits while my fingers explored the beauty of his shaft, feeling the skin give under my touch like velvet over re-bar, but I had a mission that day: I wanted those nuts. So I delved deeper, and just as my nipple was hardening nicely, reaching for his teeth, I dug my fingers around and behind those sweaty, sexy big balls he had. They were molten in my hand, but not as molten as the cum that all at once came blasting out of his dick, clearing his waistband like a pilot skimming a power line, then leaving a long, hot trail from my belly button to my chin.",
        "Well. It wasn't all bad. I did get to feel his balls quiver in my hand as they drove their load out. That was something. But all in all, it was far from the most fulfilling sexual experience of either of our lives.\n\n* * *\n\nSo I needed advice. Fortunately, my older sister is a slut.\n\n\"Wait. What?\" She blinked at me over lunch, my treat. \"You need sex advice?\"\n\n\"Well, 'need' is a strong term,\" I shrugged; I didn't want her to get a swollen head. She's definitely got me beat on the number of men she'd had, but I was no slouch in that department either. \"Just... I'm having some issues. Well, not me.\" I sipped my iced tea, the realization slowly dawning that talking to Kate might not have been the best idea.\n\nShe cocked her head oddly. \"Ben? Or are you getting some on the side?\"\n\n\"Is it really on the side if we're not married?\" I grumbled. \"But yes. It's Ben.\"\n\nHer face took on a weird look then, guarded. Almost furtive. \"Ben,\" she sighed. \"You know, Mom keeps waiting for you to announce an engagement.\"\n\nI knew that. \"She'll be waiting awhile longer. I'm not marrying him.\"\n\nKate nodded, chewing on her edamame. \"Is it this? This sex thing? Is this why you don't want to marry him?\"\n\n\"No.\" I sighed. \"Well. Partly. It's all different sides of the same dice, you know? I just don't think we're compatible.\" I looked away. \"I should know better than to try to date a cat person.\"\n\n\"What's wrong with cats?\"\n\n\"Just... I think maybe I get along better with dog people.\" I dug through my salad. \"I think they fuck better. I think there's like an alpha-dog thing.\"\n\nShe sat thoughtfully for a moment, and when she spoke she was quiet. \"In my vast experience, cat guys fuck just fine, Ella.\"\n\n\"Whatever.\" I shrugged. \"It's just weird in bed. It honestly feels like a high school romance. One of those super-awkward ones.\" Because it was, of course.\n\n\"Are we talking about the same Ben?\" She blinked. \"The one you've been dating for like a year and a half?\" She considered her words again. \"He doesn't seem very awkward. It's hard to think of him having fuck-problems, frankly.\"\n\n\"Like you'd know,\" I sniped, and I got that weird look again. \"Anatomically, it's all good. I mean, his dick is... well. It's amazing.\"\n\nShe chewed. \"I think it's interesting that you think that.\"\n\n\"What?\"\n\n\"Well.\" She seemed to realize she'd said something strange. \"Like, why would you even bring that up? It's a weird thing to say. Look, what's the real problem, Ella? The basic problem?\"\n\n\"The basic problem?\" I swallowed. \"He cums too early.\"\n\n\"What?\" That one really seemed to surprise her. \"That's not my... I mean, really? Like, how early?\"\n\n\"As soon as I touch him, pretty much.\" I shrugged. A disagreeable-looking woman was eyeing us from the next table, and I gave her a smile. \"Lately, I can't even get him in me.\"\n\n\"I see.\" She arched her eyebrow. \"Has this been going on awhile?\"\n\nI pondered, thinking about the conversation I'd overheard in the bathroom. Meghan Gordon's birthday. \"Last summer. Maybe a little before.\"\n\n\"No shit?\" Kate blinked at me and paused a long time. \"That's... well. That's a surprise to me.\"\n\n\"Why?\"\n\n\"No reason,\" she shrugged glibly. \"Maybe he should empty the pipes before you try anything?\"\n\n\"He's tried that.\" Twice, I left unsaid. \"He has zero problem getting it up. And, again, he's... well. His penis is great. But then? He just shoots first and asks questions later, if that makes sense.\"\n\n\"Well. So, he's probably all worried about it then. Like, that's probably all he thinks about when you're about to get it on.\"\n\n\"Oh, no doubt.\"\n\n\"Right. Think of it this way, Ella: he's obsessed with his own dick.\"\n\n\"I'm obsessed with his dick!\" I wailed.\n\n\"Not like he is.\" She was having wine, in precise sips. \"He sounds like he's at the point where he's constantly thinking of himself. And not in a bad way, like selfishly: he's just got a complex about his dick. You need to encourage him to have a complex about you.\"\n\n\"Huh.\"\n\n\"Try this. Tell him every time he thinks about cumming, he should just put his mouth on you somewhere.\" She considered. \"Preferably, your vagina.\"\n\nI chuckled, thinking of the way that mouth had mauled my nipple on his couch. \"I'm not sure he's there yet.\" I caught another odd glance from her. \"I mean, Ben's not into eating out,\" I guessed.\n\n\"That's not something I'd noticed,\" she mused.\n\n\"Wait. What?\"\n\n\"Nothing. Look, focus. Get him to think less about him and more about you. Like, encourage him to take charge.\" She took on a faraway look. \"Hell. If in doubt, just tell him to slap you around. I've found that men who take all the power in the bedroom are usually too busy fucking me up to cum prematurely.\" She shrugged. \"Besides, it's hot.\"\n\n\"What's hot? Getting smacked around?\"\n\n\"No. Getting owned.\" She sipped again. \"Don't knock it 'til you've tried it. But, baby steps. Next time, when he's getting close, just have him do something to you.\" She winked. \"Eventually, he'll gain confidence. He'll get over the hump, then he'll fuck you for hours.\" She turned casually to the disagreeable-looking woman, who now looked shocked. \"Look, can you do my sister and I a favor and stop eavesdropping? Or should I start talking about how my backup boyfriend likes to choke me with the beads he's just pulled out of my asshole while he has his friend wear a Joker mask and fuck me missionary?\" She winked. \"Wanna hear about that?\"\n\nApparently, the disagreeable-looking woman did not want to hear about that.\n\n* * *\n\nAnother day, more bathroom duty, another perambulation by Jared Meyer and Mikey Lee. This time, he smiled first. \"What's up?\" I nodded.\n\n\"The usual. Same stuff that's always up.\" His face shaded the slightest red, and I'm sure mine did worse. Mikey tapped on his phone, oblivious. I let my eyes go a little wider at his flirt.\n\n\"My!\" I cooed, \"so talkative today!\" I made sure Mikey still wasn't looking, then glanced down at his jeans. I knew he saw me do it.\n\n\"Mike, I'll catch up in a sec,\" he nodded to his buddy. \"I need to check with Ms Norland about my project.\"\n\n\"Huh.\" Mikey barely even looked at me. \"Science?\"\n\n\"Nah, History. Herrick. I'll catch you.\" They did a complicated kind of handshake thing as Lee walked off to class, leaving Jared standing there with me. I looked both ways to make sure there was nobody in the halls, then I arched my back to push my boobs out. \"Something's up now,\" he smiled, blushing darker.\n\n\"Well. I would hope so.\" I felt giddy. This was so much fun, and so naughty! I was in a red dress, and I wondered whether I could get away with flashing him my panties, which would have been quite an escalation. Especially in the middle of the school day. I licked my lips. \"There's a bathroom right here, if you don't want something to be up anymore,\" I whispered, and I knew I could take him into the bathroom, lock it, and have him take me over the sink if I wanted. The fantasy flashed straight to my clit: I could totally do it. It could all be done in about forty seconds.\n\nFuck.\n\nInstead, I just pulled my cardigan over my chest. \"Jared. I've been doing some thinking. I know you enjoy... what we do,\" I began, his face looking suddenly apprehensive; poor guy thought I was kicking him to the curb.\n\nScrew that. I wasn't Whitney fucking Taylor. I was in it to win it. \"Yeah?\" he said cautiously.\n\n\"Well, that joy that you get?\" I was speaking very low. There were cameras in every corridor in this building, and the jury had always been out about whether they picked up sound or not. \"I think it would be awesome if we could make it last longer, you know? I want to try something new next time, if you want.\"\n\nHis face lit up. \"Next time?\" He hesitated, searching for confidence and finding it. \"Like you said, there's a bathroom right here...\"\n\n'Oh my god!\" I had to cross my legs suddenly. Fucking clit, throbbing inconveniently... \"I was joking. Why would we do that, when you've got a perfectly good house I can drive to?\" And a perfectly good boyfriend who believes me when I say I'm coming in on Saturday to help with the Mock Trial team? \"If you're free this weekend, I'd love to come by and help with your thesis about Thomas Becket...\"\n\n\"You can come by.\" He was smiling now, that warm one he used. I was looking to make it a little more devious, though. Baby steps... \"Text me, Ms Norland.\"\n\n\"I sure will, Mr Meyer.\" I winked as he moved off, then treated him to more cleavage as a parting gift. \"Oh. And, um, you know how you usually... prepare for our tutoring sessions? Don't do that.\"\n\nHe did a double-take. \"Wait. Don't do that?\"\n\n\"I want you full.\" I whispered it, looking around to make sure nobody was around. \"It's an experiment.\"\n\n\"Oh.\" He smiled, the warm one. \"I look forward to it, Ms Norland.\"\n\nSuch a beautiful young man!\n\n* * *\n\n\"Know what we should do, Jared?\" I'd just walked into his house to find him padding around in his socks and a pair of sweatpants. The weather had turned chilly this week.\n\n\"What's that, Ms Norland?\" He'd lost a lot of his shyness around me, but that only made sense: I've learned that once a man glazes your face, he starts looking at you differently. He gets a little more confident, especially when you keep coming back for more.\n\n\"Today, I think we should find a bed.\" I took a chance, stepping close and tiptoeing up to kiss him on the cheek. It was the first time my lips had touched his face. \"And then I think I should try something new with you.\" I glanced down. \"Are you hard, honey?\"\n\n\"Starting to get there.\" He wasn't blushing when we talked about his penis anymore, either: all good things.\n\n\"Good. I think we should both get naked today, too.\" I trailed a finger down from his shoulder and gave his bicep a squeeze. \"If you don't have any objection.\" His answer was a pointed glance at his own groin, where his sweatpants were already tenting. \"Whoah there, cowboy,\" I giggled. \"I guess you're fine with that too. Why don't you take me to a bed, then I'll tell you what I've got planned.\"\n\n\"Fuck.\" He almost bounded off into the back hallway, with me smiling in his wake. Already this was going better than that awkward encounter last time, on his couch. That time, I'd been content to let things happen. Which had taught me that Jared and I did better when I had a plan. \"My room's kind of a mess, Ms Norland.\"\n\n\"Does it have a bed?\"\n\n\"Yeah,\" he chuckled.\n\n\"Then I don't really give a shit that it's kind of a mess.\" He glanced back, smiling, and I realized it might have been the first time he'd heard me swear. \"Oh. Sorry. Should I not have used such foul language around a student, Jared?\" I was already getting throaty, my pussy twinging. \"Does it offend you when I say things like 'shit?'\"\n\n\"Oh! No. Not really.\"\n\n\"Good,\" I smiled, \"because sometimes, I have a really dirty mouth. You might find that out one day.\" I took a chance, unable to resist, reaching forward and smacking his butt. \"I bet you will find out, actually. But first, we need to make you last a bit longer.\"\n\n\"I want to,\" he agreed as we passed the bathroom and reached his door. \"I really do. This... well, this has always been a problem for me. If that makes sense.\"\n\n\"It does.\" His room was nowhere near as bad as he'd made out. There was the usual teenage detritus, some trophies and shit, a bookshelf. Clothes in disarray all over the floor. But at least my feet didn't stick to the carpet, and it didn't smell. And, best of all, he had a decent-sized bed. \"Sweet room, bro,\" I laughed, eyeing the mattress. It looked like a full.\n\nIt would do.\n\n\"Now then.\" I stepped out of my Uggs, stopped at his desk, and took my earrings off, then my watch. \"Here's my idea. You ready to hear it?\"\n\n\"I'm all ears, Ms Norland.\" He was adjusting himself already, though he wasn't jacking it or anything. Still, if the past was any indication, that might not matter: twice, he'd cum hands-free. Three times, actually, though that third time I was willing to give him a pass for: he'd been looking at me, on my knees with my lips puckered, about to suck his meat. He perched himself on the desk.\n\n\"We're sure your dad's not coming home?\" I pressed. \"No spreadsheets or anything?\"\n\n\"Nah. He's on a huge project. A bank downtown, I think.\"\n\n\"Ah.\" I drove past the sight every morning on my commute. \"Good. Then we have time. So, here's my idea to make you last longer.\" I sat on his bed. \"I think you're preoccupied with what's happening in your own body. Is that right?\"\n\n\"I, like, worry. Every time,\" he nodded. \"Like, I keep promising myself I won't lose control, and I really concentrate.\n\n\"I know, honey.\" I'd worn a flannel over a bra, with matching panties, and my fingers began working casually at the buttons. \"I think you're concentrating too much, sometimes. So I want you to try something different today.\" I popped one button. Two. Three. The baby-blue lace of my bra peeked out.\n\n\"Yeah?\" His Adam's apple was already bobbing, his sweats fully tented.\n\n\"I want you to focus on something else.\" Four. \"Do you know what I want you to focus on, honey?\"\n\n\"You?\"\n\n\"Yes, Jared.\" The burr was back, in both of us. I shrugged my flannel onto his comforter and sat there, back straight, tits on display in that lush bra. \"Look at me. Imagine me. Think about how I look, how I taste. What you want to do to me.\" I reached to my waistband. \"Let's take our pants off, honey. How does that sound?\"\n\n\"Oh my god.\" He watched, eyes greedy, as I stood and then peeled off my leggings. My thighs are not the thinnest in the world; if he was used to the Alyssa Macleans of the world, mine did not compare. But they were here, now, and hers weren't.\n\n\"Look at my legs.\" I spoke with some urgency, desperate to keep his mind off his penis. He obeyed. \"At my panties. At how they ride over my hips.\" He nodded, eyes wide, standing there in his underwear and a t-shirt. \"At how they cover my pussy.\" I'd trimmed with care for this; I knew he'd be able to see the downy triangle of my pubic hair through the lace. I stood as tall as I could with my hands on my hips, feeling myself grow damp. \"Look at how my underwear frames my body. Think about how I chose it just for you.\"\n\n\"Fuck.\" It was a low, hissing whisper. He took his shirt off.\n\n\"Think about me, Jared. Not you. Me.\" I sat back down. \"Think about what was going through my mind as I got dressed this morning. How I knew I was going to be here with you. With my Jared.\" I looked at his crotch. \"Do you feel like you're going to cum, honey?\"\n\n\"Yes.\" The answer was hard, flat, immediate.\n\nI remembered Kate's advice. \"Then come and put your mouth on me. Somewhere. Wherever you want.\" I arched back on his mattress, propping myself on my arms, feeling my hair cascade behind me as I stretched my neck. \"You pick. Just come taste me.\" He lunged across the room, curving over me like a predator. I made myself avoid looking down at where his cock stretched his briefs. \"Hurry, lover. Put your mouth on me.\"\n\nHe was clearly tentative, but there was no wrong answer here; the moment I felt his lips on my collarbone, over my bra strap, I locked a hand around the back of his head and started talking. \"That's it. Taste my skin. Feel my hand. Think of me, honey. Think of my reactions, my pleasure.\" I felt my breath catch; holy fuck, this was turning me on! I felt strong, powerful, joyful: a week ago, this kid would have already stained his underwear. \"Look down while you kiss me; look at my nipples. Look what you're doing to my body.\"\n\nHe did, groaning low. \"You're so hot,\" he murmured.\n\n\"You're making me feel so special. Because you're thinking of me.\" I took his chin in my hand and aimed his eyes at mine. \"You're wanting me to feel good. And I do, baby. I feel so good.\" I was moving toward him already, my lips shining. I'd never kissed this young man, and I needed to. His mouth was warm and eager, leaning into me as if kissing me was all he'd ever wanted to do, and just that easily our lips were sliding against each other, tongues tangling, both of us breathing hopeless moans at each other.\n\nI fell back, boneless, surrendering as he crawled over me on the bed. His body was a lean, feral collection of clean lines and hard muscle, the bed sagging as he climbed on top. His cock, straining hard at his underwear, pressed against my thigh like a warm gun barrel, loaded and pointing, threatening me.\n\nI surged up against him, overjoyed: he hadn't lost control yet. I pulled my mouth back in a wash of spit, his and mine both, and croaked encouragement. \"Think of me. Feel my body.\" I whipped my arms around him and drove my hands insistently into his briefs, feeling at last the hard muscles of his bare ass. \"Oh my god, you're beautiful,\" I whispered at him. \"Put your mouth on me if you feel like you're going to cum, Jared,\" I reminded him, my breath in his ear, and then his lips were on my neck, his tongue gliding behind my collarbone as I pushed his underwear off his body. He was naked on top of me now, and he groaned low and deep as he realized it. \"I want to see your cock, baby,\" I gasped. \"I want to see it over me. I want to see it pulsing over my body.\" I had no idea what I was saying: this was my heart and my clit and my tongue, urging him on.\n\nHe pulled up, his face an odd mix of desperation and eagerness and joy and hope, and then he was straightening his arms into a push-up, both of us looking down our squirming bodies. His penis quivered between us, nestled above the blue-lace valley of my thighs, big and gorgeous and ready to spear me. His balls drooped low, grazing my mound. He gave a breathy, indistinct syllable, and I gripped his upper arm, my legs spreading in response to a deep, sensual signal from my libido.\n\n\"Think of me,\" I commanded. \"Don't think of anything but me. I'm here for you; you be here for me,\" and somehow, teeth gritting, he nodded incoherently and dropped his head low to kiss my chest, his lips running down my cleavage, then up the mountain of my right breast with so much more gentleness, so much more feeling than that last time, on the couch. I arched up to him, his hand sweeping my bra cup away like it was nothing, and then I shrieked as his fingers gripped my pale flesh, his lips and tongue lashing at my nipple. \"Oh fuck yes!\" I cried, my arms tight around his head, and then?\n\nThere it was. His cockhead, pressing insistently atop my pussy, a red-hot battering ram driving my panties between my swollen, wet lips, and then suddenly his breath was washing over my tit, his hot thick semen soaking the front of my panties, dousing the expensive lace in the sticky wash of his cum. He groaned five times, deep sexy masculine groans, his cock bursting each time.\n\nMy mind caught fire at once, dragged into a deep pool of lust by the feel of his dick at my slit, and I lost it. \"Holy fuck!\" I whined, twisting, worming my way out from under him: I had one thought, only one, and I acted on it at once. I'd never felt any urge so powerful. I curled my legs up close, pushing my sodden underwear down and whisking them straight off over my socks. Jared slumped onto his elbow beside me, his dick still trembling, the head covered with his spunk.\n\nI lay back, bottomless, my eyes wide and wild as I pulled my wrecked panties up to my mouth and wrapped my lips around the front. The stiff lace flowers embroidered there crumpled under my jaw, but I was already sucking hard, pulling his cum and my juices out of the delicate fabric and onto my desperate tongue. He watched, amazed, as I licked, making little contented sounds at the taste of his cum, still warm from his body. \"Oh my god,\" he marveled, his voice a whisper. \"That's so hot, Ms Norland.\"\n\n\"Mmm,\" I replied, stretching catlike on the bed beside him. My eyes found his. \"Glad you like it.\" My voice was a cracked, husky mess. \"We taste so good.\"",
        "\"Fuck.\" His fingers went to his tender penis, pulling it gently. \"That felt so amazing.\"\n\n\"See, baby?\" I cooed, deeply happy, \"it worked. It's so much more special when it lasts longer.\" On impulse, I rolled to him and offered my lips and tongue, enjoying the hunger with which he sucked on them. I pulled back, our chins gleaming, and watched his eyes as I reached my hand down to stroke his spent, naked cock. \"I love making you cum, Jared honey,\" I confessed. \"I've loved it every time.\"\n\n\"I... wow.\" He was still shocked. \"I tried to hold it. All I thought about was you, Ms Norland.\"\n\nI sighed happily, wrapping him in my arms. \"That's what I want, Jared. That's what everyone in the world wants. Could you tell how happy you were making me?\" He nodded, looking down at my body. \"Yes. I know you could.\" On another impulse, I kissed him again and then pushed my mouth toward his ear. \"Want to make me even happier?\"\n\n\"Yes.\" His lips worked at my jawline.\n\n\"Want to make your slutty teacher cum?\" I hissed. He swallowed, his eyes flaring open.\n\n\"Yes.\"\n\n\"Want to fingerbang my wet snatch and hear me call your name?\" I growled, and he was nodding before I was even done.\n\n\"Fuck yes,\" he gasped, his cock jerking in my hand. I lowered my hand between his legs, cupping his balls, amazed at the weighty way they filled my palm.\n\n\"Then do it,\" I ordered, lolling on my back with my legs spread lewdly. He leaned over me, looking down, seeing a harlot: bra messy, hair messy, lipstick smeared, with stray cum patching my belly. My legs settled wide, giving myself to him, and he reached down to play.\n\nThe first touch of his hand, slipping through my trimmed hair and curling down between the tops of my thighs, electrified me. I tossed my head back, groaning as his fine, quick fingers found my slippery pussy. \"Just touch me gently, baby,\" I urged him. \"No need to be eager. We've got time now, and I want us to enjoy you making me cum. Okay?\" I figured he'd pop again soon. \"And when you get hard? I'll make you cum again, too. But the whole time, Jared, what's your focus?\"\n\n\"You.\" He said it at once, his fingers slow and delicious as they hovered on the edge of my pussy lips, as if he was deciding on just the right time to enter me. \"I'm focused on you, Ms Norland. Your body. Your... your pussy.\"\n\n\"Mmm. That's right, lover,\" I sighed dreamily, watching his face as the word took effect: it made him confident. Strong. Determined. He wanted nothing but pleasure for me, which made me happy and proud. \"Can I ask you a personal question, Jared?\"\n\n\"Under the circumstances?\" he said quietly. \"I guess,\" he answered himself, as I giggled.\n\n\"How many girls have you played with like this? With your hand?\"\n\nHe cocked his head. \"A few...\"\n\n\"It's fine, honey. You're a natural.\" He was, too, his touch gentle and yet firm at the same time. \"Just like that.\" I laid my hand gently atop his. \"You're making me feel like I'm the only one you've ever had,\" I told him in a soft whisper, kissing him. \"That's very special. That's why I asked.\"\n\n\"Thanks.\" It wasn't awkward now. Nothing was. He'd finally unbent a little, loosening up. His confidence would only grow from here. \"I can feel you. How... how much you like this.\"\n\n\"Fuck yes,\" I sighed. \"Tell me, sweetie, do you know where the G-spot is?\" He cocked his head. \"The clitoris?\" He began to look worried. \"Don't sweat it.\" I stretched out again, a cat in a sunbeam, free and loose and easy. \"Explore my pussy. Practice reading my body. Touch it until I love what you're doing, babe, and then touch it some more.\" I rested my hand idly on his penis, protecting it. Claiming it. Even half-hard, it was as long and thick as Ben's. \"Fuck,\" I grunted suddenly, my whole body twitching; he'd sent a solid jolt of pleasure all along my nervous system. I'd never felt so alive.\n\n\"Found it?\" he guessed.\n\nI smiled, in bliss. \"Just play, honey. Do what my body wants you to d... ohhh...\" He was a great listener, obviously, because I was melting in seconds, his fingers stirring me smoothly, playing me like a musical instrument. I squeezed his cock, feeling it grow hard again, his balls twitchy as we stretched nude beside each other...\n\nWe came together, smiling, our eyes open as we searched each others' faces, and afterward I licked my fingers before I licked his. \"You should taste yourself,\" I told him quietly, my entire body tingling. \"That way, you'll know what I'm craving. You'll be closer to me.\" He nodded, licking at my hand as the last of his cum dribbled out on his thigh and comforter. \"We totaled the sheet,\" I pointed out. \"I feel bad. More than half of it is mine.\" I am a leaky woman.\n\n\"It's okay.\" He stretched that magnificent body of his, my mouth watering as I looked. \"So,\" he said, smiling, his cock softer at last, \"what do we do next?\"\n\n\"Next?\" I stretched high on his stained bed and reached back to undo my bra. \"Remember how we've learned that you need to put your mouth on me when you feel like cumming?\" He nodded. \"Next, your mouth is going to get to know my body. What it likes and doesn't like. How it responds. Then? Next visit?\" I kissed him. \"You'll have some moves to use on me while you're hard.\" I winked and whispered hotly in his ear, \"And maybe you can be in charge.\"\n\nHe smiled slowly, his cock bouncing once, and then his lips closed in on my tits as the bra finally came off.\n\n* * *\n\nI sent my sister Kate a bottle of decent rum and a card with an Ahab's giftcard in it. The card featured my very best cursive.\n\n\"You were so right. It's great to have a go-to whore that loves me. Thanks!\"\n\nI didn't hear back from her, but for some reason she texted Ben. He told me she loved the rum.\n\n* * *\n\nMikey Lee came to see me after school one day around the 20<sup>th</sup> of November, smiling that plastic smile I sometimes saw on salesmen. \"You're Mike, right?\" I asked.\n\n\"Yeah, Ms Nordlan, Mikey Lee. My boy Jared said you might be a good person to ask about something. I'm a captain on the football team, and we're supposed to go around setting this up.\"\n\n\"It's Norland.\" I arched an eyebrow. \"What's the deal, Mikey?\" And why the fuck is Jared talking to you about me?\n\n\"Well, so, you're like new here? So we wanted to introduce you to something the football team does every Thanksgiving.\" He produced a flyer out of a folder, the same flyer I'd seen and ignored all through the halls this week. \"It's a homeless thing,\" he added uselessly. \"The Turkey Bowl.\"\n\nI scanned the paper. \"This says you guys all get together and serve a Thanksgiving meal to homeless people?\" I laid the flyer down and beamed up at him. \"Mikey! What an incredible gesture! How can I help?\"\n\n\"Well, like, some of the teachers come along and help serve? Or you could bake pies or make mashed potatoes or whatever. Or donate money.\" He didn't seem all that interested, a kid doing the minimum his coach was demanding. \"It's mostly to fulfill the team's community service hours, but we're grateful for any help we get? There's a sign-up thing. Can I sign you up for something, or do you want to, like, think about it?\n\n\"I can bake pies. Two of them. And I can help serve, if that's needed.\" I scanned the sheet. \"Next Wednesday night?\"\n\n\"Yep. Right before the holiday.\" He was thumbing rapidly across the face of his phone. I waited patiently, then cleared my throat.\n\n\"Um, honey?\" I waited a few moments more until he raised his eyebrows and looked questioningly at me. I smiled warmly. \"It's not polite to text while you're talking to an actual person, Mikey?\"\n\n\"What?\" He blinked. \"Oh! No, Ms Nordlan. Er, Norland? I was just signing you up.\" He turned his phone for my examination, smiling brightly, showing an electronic form he'd slapped my information into. \"It's all automated now, you see,\" he told me gently, with the caring patience eighteen-year-olds always show to the technologically illiterate twenty-six-year-olds in their lives. \"See? You just click submit.\"\n\nI blushed. \"Well. Don't I feel like a jerk.\" I laughed. \"Thanks a lot, Mikey. Do I just bring the pies with me on the night, or should I bring them earlier? Like, to the PE office?\"\n\nHe shrugged and turned to go, clearly done with me. \"I don't know. Just bring them, I guess? Maybe you can call Coach Jenner for any, you know, questions.\" He put that fake smile back on and waved, staring at my chest. Finally. He'd lasted a lot longer than most, though. \"Thanks! See ya.\"\n\nI stared at the flyer, thinking. Pondering. Remembering what it had felt like to guide Jared's fingers inside me and let him play.\n\nGoddamn, I wanted to fuck him. Next Wednesday night.\n\n* * *\n\n\"You know, Jared,\" I muttered to him on Tuesday, as I happened to walk past his locker, \"I think you should go over to Mikey's for a sleepover after the Turkey Bowl. Since, like, it'll take so long for you and the other players to do all the cleanup.\"\n\nHe looked up from filling his backpack, smiling as he spotted my legs. I'd stood close behind him, my dress brushing him. Kids milled all around us, oblivious, and the idea that he and I were flirting illicitly in public thrilled the shit out of me. \"Yeah?\"\n\n\"I also think your car should start acting up.\" I glanced side to side, then winked quickly.\n\n\"Wait. What?\" He got to his feet, slinging his backpack and running his hand through his hair. He towered over me, and I felt that little stabby pulse in my pussy that I often got at times like these. It had been over a week since he'd made me cum on his bed, and I was one horny woman.\n\nI was going to let him take me like a bitch in heat. As many times as he wanted. I smiled up at him, waiting until the hallway cleared out a little bit. \"Tell your dad you're staying with your friend,\" I explained, trying hard to keep my face neutral. As if we were discussing the Plantagenet campaigns in France, say. \"Tell your friends your car is acting up. I'll do the rest.\" I flashed a quick smile. \"Trust me.\"\n\n\"I do,\" he nodded at once, and my heart leapt. At some level, I understood that his devotion to me was a problem... but I couldn't help it. It made me happy. Because what can I say? I've always been a nurturer.\n\n\"There's a lot for us to be thankful for this year,\" I smiled, \"and there'll be more soon, I think. I'm really looking forward to the Turkey Bowl, Jared.\" I nodded and raised my voice as Scott Herrick rounded the corner near the drinking fountain. \"I'm telling you. You can't do a thorough job without explaining the importance of the dysentery that struck Henry V's army.\"\n\nHe caught on, of course. \"Got it covered, Ms Norland. After Harfleur.\"\n\n\"Yes, and also during.\" We both nodded at Herrick, who smiled. \"Your boy here's going to get an A, Scott!\" I bubbled. While I get the D. I chuckled to myself.\n\n\"Sounds great!\" He smiled faintly, clearly on his way to the bathroom. \"Have a good day, Jared,\" he tossed back at us as he headed off. And it was all I could do not to go up on tiptoes and kiss Jared before he headed off.\n\nI had it bad. Or maybe I was just desperate for that hard cock. Probably both.\n\n* * *\n\nThe custodians did a good job, I reflected when I toted my two pies into the Bennett-Sanderson fieldhouse the Wednesday night before Thanksgiving. The place was swept and cleaned, and Student Government had put up a thousand decorations. The place was filled with round tables and chairs donated from St Anthony's Church up the road, and the school's own kitchens were alive and well over by the cafeteria, producing gallons of stuffing and ten full-size turkeys. Long tables along the edges of the gym, where the bleachers stood folded against the walls, protested under the weight of a dozen families' Crock-Pots, steaming with trimmings of all kinds.\n\n\"Hi, Ms N!\" Shae Lewis, the cheer captain, was manning the registration table next to my favorite gossip, Alyssa Maclean. The cheerleaders were all staffing the event, waiting the tables, and I wondered which of them was the mysterious Brittni... and I also wondered how many times Shae had seen Jared's dick. \"You've got pies, hmm?\"\n\n\"A pumpkin and a pecan.\" I smiled, eyeing the number of tables. \"I think I should have made about five more...\"\n\nShae smiled. She was a truly gorgeous girl, but dumb as a box of rocks. Nice, though. \"Every little bit helps, Ms N. There'll be plenty for everyone. We really appreciate your contribution. I'm sure they're delicious.\"\n\n\"Yeah,\" Alyssa nodded, not looking up from her phone. \"Fourth table on the left. You'll see a bunch of other pies, too. There's aluminum foil over there if you need it.\"\n\n\"And, really: thanks again. So much.\" Goddamn, but Shae was a wholesome one! If I'd been into girls, I'd have wanted to rail her with a long thick strap-on, and she'd love every minute of it. \"If you could just stay behind the dessert table and help serve? Kaythanks!\"\n\nThat's where I was when the football team came out from the cafeteria, all in their jerseys, with heaping platters of turkey all over the place. The seats had filled slowly, but they had filled: local politicians, the School Board, and a scattering of school administrators all filled in spots at the tables among the city's various homeless, senior citizens, veterans, and other people with noplace to go on the holiday.\n\nThe girls were very polite. Humble, even. I could tell that the cheer coach had briefed them carefully: they were dressed in more fabric than I'd ever seen on any cheerleader anywhere, their bodies strapped into sportsbras in a way obviously calculated to lead nobody into temptation. They stood smiling beside the tables as the boys laid the platters down, and then they went to work.\n\n\"They're all so wonderful.\" The woman I was manning the dessert table with was a sophomore parent, and an insufferable bore. Plus, she cried a lot; I'd been compelled to remind her, as the homeless shuffled in, not to weep on the pies. \"Just... so wonderful.\" She turned away to sob some more. I was careful not to roll my eyes; you never know who's watching. Instead, I patted her on the shoulder and gave her my biggest smile.\n\nI'm a nurturer, you see.\n\nI could see Jared, over on the far side of the room, shuttling dishes to and from a table holding the PTA president, the town's Veterans Representative, and about five senior citizens. I licked my lips, just thinking about him, silently loving the fact that every cheerleader here had nothing on me. Sweet little old me, the freshman history teacher. Sexy Shae, beautiful Alyssa, and that skank Brittni? Nothing. Because Jared wasn't cumming for them, he was cumming for me.\n\nThe thought soaked me.\n\nI was still pumping out my juices a couple hours later, as me and the Sobbing Mama cleared away our table and stacked it with the others for the custodians to pick up on Friday. I'd already put my pie tins back into my tote, and I was just standing there pulling my hair back into a big gloppy ponytail when Jared drifted by. Nobody else was in earshot. \"Hey,\" I whispered, my face lighting up. \"Come here, stud.\"\n\n\"Hi.\" He had a little schwerve in his step these days, I reflected, and well he should: he was no longer a two-pump chump. He was probably up to five or six, and I was going to make him more more like forty or fifty. Though, I reflected, probably not tonight. I was so wet I'd be cumming in seconds, most likely. \"Good turnout.\"\n\n\"Fuck the turnout, honey,\" I purred quietly, \"though, of course it's awesome doing such amazing things for people less privileged. Sure. Now, let's get down to business. Your dad knows you're out all night?\"\n\n\"Yep.\"\n\n\"And when you complain about your car not working, it won't be weird?\"\n\n\"Nope.\" He was looking at my boobs, despite the fact I was showing no cleavage. Like the cheerleaders, I'd dressed down. I gave him a small shimmy.\n\n\"So I'll be standing around, puttering, and then I'll offer you a ride. Because you're going my way. Right?\"\n\n\"Right.\"\n\n\"And then I'll take you home.\" I winked. \"To my home, that is.\" He broke into a broad grin, and I blushed hard. I'd told Ben I would come over to his place tomorrow so that we could both go to my parents' house for Thanksgiving, and I'd been clear that I wasn't taking no for an answer. As far as he was aware, I was on my period. \"And we'll have a sleepover. Got it?\"\n\n\"Got it.\" He glanced around, his Adam's apple giving a quick wobble. \"But it's not really a sleepover.\"\n\n\"No, you sexy piece of meat, it's not.\" I saw a gaggle of cheerleaders drifting over to finish clearing up the Crock-pots, and I winked. \"Now get the fuck out of here. I'll be over by the door.\" And I would be. But first, I'd head for the bathroom and prepare a little surprise for him...\n\nAnd, somehow, it all worked.\n\nOne of the School Board people clearly thought it was slightly weird that a teacher was offering to give a student a ride home, but a flattering chorus of voices spoke up from the cheer and football contingents to vouch for me. It helped that I offered to not drive him home after that, but as I'd expected the School Board asshole relented. \"Oh, it's fine. Don't even worry about it.\"\n\nI won't, fucker, I told him in my mind. It wouldn't really have mattered; worst case, he'd have gotten a ride to his own place, hopped out, then waited behind some bushes outside for me to come get him, thence to get behind my bush.\n\nIn any case, the early moon shone on the two of us crossing the back parking lot, his Lumina standing derelict over by the school buses. \"You can come and grab your car tomorrow, Meyer,\" Coach Jenner had told him, leaving nobody in any doubt that it wasn't a request. \"Bring your dad along; he can get it running to get it out of the parking lot.\"\n\n\"Yes, coach.\" I made myself walk far apart from Jared as we headed for my Honda. All around us, other cars were careening out onto the roads, and my car chirped at me as I hit the lock button. I was buzzing, my mind aglow, as he slid into my passenger seat and shut the door. \"Alone at last, Ms Norland,\" he sighed, leaning back.\n\n\"Jared?\" I put the key in the ignition.\n\n\"Yes?\"\n\n\"I want to straddle you right this fucking minute and slide that hard cock straight into my sloppy cunt,\" I told him conversationally. \"Do you want that, you goddamn big-dicked stud?\"\n\n\"You know I do,\" he smiled.\n\n'Good. I've got a little surprise for you, honey.\" He was still smiling as I reached into my jacket pocket to pull out my drenched panties from earlier, when I'd gone into the bathroom and shucked them. \"That belongs to you now, Jared. And so does the pussy-juice inside them. And so,\" I added in a rush, scarlet now, \"does the woman who wore them. Tonight, at least.\" I reached over and squeezed his thigh. \"How's your dick, baby?\"\n\n\"Hard.\" He lifted my panties to his face and inhaled deeply. My mouth fell open when he did that; such raw, natural sexuality he had. Fuck.\n\n\"Hold on,\" I giggled, throwing my car into gear. \"It's a quick ride.\"\n\nHe paused a moment, then went for the joke. \"Hopefully not.\"\n\nI laughed. Hard.\n\n* * *\n\nWhen I led Jared by the hand into my apartment, I hoped he could see that I'd spent two hours cleaning it that afternoon. I hadn't gone so far as to light candles or scatter rose petals, but there was definitely wine in the fridge and clean sheets on the bed. \"Make yourself at home, honey,\" I urged in the doorway, gesturing at my sectional. I kicked the door closed behind me. \"There's the couch... the bathroom down the hall... the bedroom...\" I giggled as he swept his arm around me, exuberant, unable to believe he was here with me. I wondered how hard he was, then it occurred to me there was no reason not to grab him and find out.\n\n\"Jesus,\" he breathed as my hand clamped firmly at his slacks. Inside, he was his usual iron-rod self. I let him feel me clasp him, my eyes growing serious on his.",
        "\"Two weeks ago, you'd have been spurting right now,\" I husked. My own pussy was creaming my jeans, I knew: the underwear meant to protect them was now in Jared's pocket. \"Let's see what you can do tonight, lover.\" I leaned up, my body already starting to ache with need, and when our lips met there in my own living room, it was magic. He was an excellent kisser, I'd learned, and as he'd grown more used to me he'd only improved. I tasted mint gum and sports drinks, lust and need; his hands crept around to my ass, pulling me close.\n\nAnd we hadn't even gotten out of the doorway yet.\n\n\"Remember,\" I whispered, my throat feeling like sandpaper, \"when you feel like you want to cum? What are you going to do, baby?\" He responded with his mouth, trailing down the side of my face, over my neck, kissing me with wet excitement as I felt his hands trying to plunge down the back of my pants. \"Yeah. That's it,\" I urged. \"Devour me.\" My fingers found the snap at the front of my jeans, tearing them impatiently open: he drove them halfway down my thighs as both his hands shot down to grip my naked ass. \"Fuck!\" I grunted tightly, needing his lips once more, sucking his tongue hard into my mouth.\n\nI felt my pants pool around my ankles, realizing dimly that my Chucks would make it hard to get them off. He was up the back of my shirt now, desperate for the feel of my skin, clawing at my bra strap. He was an animal, sucking at the base of my neck. \"Hold it,\" I whimpered, needing his dick inside me, praying my body wouldn't make him cum too quick. \"I need to get my shoes off.\"\n\n\"I need to get my pants off,\" he groaned, and with that we parted, still feverish; I found myself on my ass on the ground, leaking all over my carpet as my clumsy fingers ripped at the knots on my shoes. Why did I wear high tops? I raged at myself, but above me Jared was having a similar problem: he'd stepped out of his dress shoes, but getting his slacks and briefs down over his swollen dick was taking him some effort.\n\nBut he'd learned to persevere.\n\nAnd still, despite my shoes, I found the time and energy to notice when his dick popped out above me, balls dangling, head shining and ready for my pussy. \"Goddamn.\" It came out in a gaspy rush. \"You're so beautiful.\" He had a new look on his face now when he looked down at me, a ripe woman below him with need in her eyes, wanting nothing but his cum in me.\n\nHis penis leapt suddenly, but he held it in; kicking his pants off, he dived over me on the floor, mouth open to suck at me. \"Yes!\" I yelped, at last getting my shoes off. \"I'm your slut, Jared.\" He'd pushed his face up under my shirt, lips busy at my belly button, and I crooned a feathery moan when he pushed his hand hard against my swollen red pussy, fingers shooting straight into me. \"I'm your little fucking whore!\"\n\n\"Yeah,\" he grated, his teeth on my skin. I was humping up into his fingers, and as I finally wormed my jeans off I spread my legs wide for him and pulled his oversized football jersey up over his head. \"You're so sexy.\" His voice came out muffled from under my shirt. His hand had learned from the last time, on his narrow bed, and I was already feeling my orgasm build here on my living room floor.\n\nI was caught in a need more intense than I'd ever remembered, a deep female craving for him. I pulled at his hair until his head popped out of my shirt, bleary eyes on mine. \"I want to cum from your dick,\" I blurted, crazed, and then he was nodding as he got his knees in between my flailing legs.\n\nI craned my neck, raising my head to watch his cock reach down for my overheated body. We were both moving already, our hips in rhythm even as his dripping, fat cockhead dipped low for me. I found his eyes once more, in these last moments, my hands harsh on the sides of his head. \"Don't hold back, baby,\" I snarled. \"I'm almost there already. Fuck me!\"\n\nHe glanced down so that he could watch himself enter me for the first time, and my head hit the carpet sharply when, at last, I felt the wet velveteen heat of his head splitting my lips. The sensation only lasted for a moment, though, his hips already in motion, sliding that thick shaft all the way inside my tight pussy. We breathed a gaspy, moaning sigh into each others' mouths, his butt already rising again, pulling out only to thrust back into me.\n\nWe rutted hard, frenzied, needy, following what our bodies told us to do, and then his teeth clamped down on my nipple and I knew he was doing what I'd told him: he was thinking of me so that he could make himself last.\n\nFor me.\n\nThe force of that set me off, my primed body reacting to his mouth, to his feelings, to the wet slapping noises his cock was making as it plunged again and again into my vagina, and I screeched as I came hard on my own carpet. The orgasm radiated out from his dick to my fingertips and back, each wave more powerful than the last, my body a clinging, powerless mess, ruined for Ben or anyone else as I responded to the power of the man above me, taking me, using me.\n\nHe knew, too. I saw it in his eyes, in the way he looked down at me when his lips finally left my flesh, trailing saliva off my skin. I felt it in the urgency with which he fucked me, driving me into the floor, marveling that I'd cum. And I smelled it as he breathed into my face, the gasp coming from somewhere deep inside him as he came, too.\n\nI'd taken his load on my face and body, across my chest, in my hands. I knew how much hot, thick cum he could send out, how far he could shoot it, how hard it would pump. And that's why I orgasmed again, on the heels of the first one, knowing he was spewing one of those remarkable loads where it was meant to go: deep inside his woman's wet pussy after he'd defiled her, his hips scooping low as he drove as far inside me as he could get and then unloaded in great, powerful spurts.\n\nI felt the heat, the fullness, the twitch of his dick, both of us gasping out our pleasure into each others' sweating faces as he took me for his own. \"Holy shit,\" he gasped, a wavering smugness to his tone, his eyes wide.\n\n\"That's it, baby,\" I rasped, my voice not sounding like my own. \"Cum inside your slut.\" I was grappling his body to mine with my arms and my legs both, my whole self wrapped around him. I sucked his tongue between my lips, recklessly, greedily.\n\n\"Oh my god,\" he whispered. His hand rose trembling to my hair, leaving reddened fingerprints behind where he'd gripped my tit as he came. He felt better than he'd ever felt, I saw; I knew it just as surely as I'd ever known anything in my life, and I was the one who'd brought him there.\n\nIt gave me a glow. Almost a third orgasm.\n\nI relaxed my legs, planting my socks on my carpet and loosening my arms across his back. Later, I would notice the marks my fingernails made there, raking along his spine; now, all I felt was lassitude, the glorious lazy aftermath of a fully satisfying fuck, that rarest of things. I captured his lower lip between mine and sucked on it gently, feeling his cock still inside me. \"Thank you, lover,\" I purred. \"You make me feel so good.\"\n\n\"Oh my god,\" he said again, our hips sweating against each other. \"I never knew I could feel like that.\"\n\n\"You can.\" I smiled at him, the loving smile I saved for moments when I was unguarded. I almost never gave that smile. \"Anytime you want to, just call me. I'll come over. You can practice tasting my body, and then I'll practice keeping you from cumming, until we both feel like we're the most important things in the world to each other.\" I was whispering, soft, intimate. Tender.\n\nI'm a nurturer.\n\n\"Just hold me,\" I murmured. Later, I knew, we'd feel the carpet burns on my ass and his knees. Later, I'd need to clean our cum from the rug. Now? I wanted to be close to him. \"Hold me until you want me to clean you off, baby.\"\n\nHe cocked his head. \"Clean me off?\"\n\nI smiled dreamily. \"I love your dick, Jared, but it's never been in my mouth. Tonight, it will be.\" I kissed him. \"I want it there. I want to taste our bodies on your cock. I want to suck your balls.\" He spasmed inside me, and my smile turned sly. \"Ooh. You like that.\" I sucked at his lip once more. \"See what I can do? See how I can suck?\" I took him in again, my tongue bathing his, lips pulsing. \"Go on, honey. Bring me your balls. Feed me your cock.\" I was whispering in his ear, making my voice a low, sexy purr. \"Choke me with your dick, baby,\" I begged.\n\nHe looked at me a moment in disbelief, then he surged up and off me. Out of me. His wet penis barely drooped as he swung his legs alongside mine, straddling me, gazing down at me as a man gazes at a queen. At an empress. At a goddess. I curled myself up, just slightly, my arms kinking behind me to get my bra unhooked, and then I was wrestling with my shirt and bra. He reached down to help, both of us wanting me to be naked with him, and even before I had a chance to settle back down he was on me, my bare tits clamped between his meaty thighs with his sticky dick looming before me.\n\nHis smell rolled over me, the heady scent of sweat and balls and pussy and cum, bathing me in our hormones. On impulse I raised my face, nuzzling him, my nose batting his balls side to side; I was in bliss, filled with him inside and covered with him outside, but then my mouth felt empty and I opened wide.\n\nHolding his gaze while my lips locked around his scrotum was a transcendent experience. I got to see the longing wonderment in his eyes when he peered down at me, amazed that I could want to do this for him. I sucked hard and deep, feeling him fill my mouth, my tongue probing between his testicles. They were fat and heavy in my mouth. The smell of my pussy where his dick crossed my nose addicted me.\n\nI needed it.\n\nI spat his balls out, my head twisting sideways so my lips could caress the rich veins on his shaft, tasting us. He looked down the whole time, his body imprisoning mine, and I could not have been happier: I feasted, sating myself, needing the contact. His ass filling my hands was a bonus, a sensory delight. But not the only bonus.\n\nI felt it.\n\n\"My my, Jared,\" I murmured up at him, my voice smoky. \"You're hard again.\"\n\n\"Fuck yeah.\" He was finished being shy. I was proud of him.\n\nI gave him a long, wet lick from root to tip. \"Why are you hard again, baby?\"\n\nHe nodded. \"Because I want to fuck you.\"\n\n\"Yeah?\" I made it sound breathy, vulnerable. \"You want to fuck me? You want to fuck my sloppy pussy?\" It was, too; I could feel his cum trickling out, into my buttcrack. \"You want to stuff me full of this big fat cock, stud?\"\n\n\"Fuck yeah.\" It was a grating rasp now.\n\n\"How do you want to take me, baby?\" I kissed his head, feeling his whole dick shudder in response. \"Want to have me from behind? Hmm? So you can see me bend over for you?\"\n\n\"Goddamn.\"\n\n\"That's it. My ass shaking as we fuck. My big tits swinging.\" I chiseled my fingers into the crack of his ass, wanting to feel every part of him. \"Let it out. Tell me what you need.\" I sucked him into my mouth and held him there a moment, feeling the tightness of his skin on my tongue. \"Because I'll do anything you want, baby.\"\n\n\"Bend over the couch,\" he commanded. His Adam's apple bobbed. He got up off me and lightly slapped a breast still marked by his hands. I yelped a giggle. \"Get up. Now.\"\n\n\"Okay.\" I curled under him, stretching, then wormed my way out from between his thighs, his balls dragging over my flesh. My living room reeked of sex. His cock was its usual rebar self, as if he hadn't just shot a monster load a few minutes earlier. \"I'll do it. For you, lover.\" I sat up against him, my nipples crushed against his, and gave him my deepest kiss. \"Fuck me hard,\" I urged, throaty, as I pulled back. He knelt on the floor as I uncoiled, positioning myself, my head and arms on the back of my sectional as, my mouth falling open, I looked back at Jared. I opened my legs and spread them wide, my back arching low.\n\nI could feel his cum on my inner thighs, trickling slowly. It made me shiver.\n\nHe rose on those fluid legs of his, cock in hand, his look as feral as it had been the first time I showed him my tit in that baby-blue lace. It seemed like a lifetime ago. Fuck, I wanted him to take me. To pummel me. I sensed there was no point in telling him: he would see it in my eyes, in my ready body, in my braced arms and legs.\n\nHe laid his hands almost reverently on my hips, running them over the fleshy globes of my bent ass, admiring me, and then I lowered my head between my arms in surrender. So I was looking back between my hanging tits, watching as he penetrated me, his hand steering his cock into my slit.\n\nMy whole body trembled when I saw those beautiful, spit-soaked balls press against my clit.\n\nHis nails dug in; I caught the line of his thighs changing, sharpening, his muscles tensing, and then he was taking me. His first thrust pushed me into the couch despite my arms, and then he waited while I reset. His second thrust did the same thing, and then he nearly made me cum again as he found his voice. \"That the best you can do, Ms Norland?\"\n\nFuck.\n\nI pushed back into him, hard, my muscles straining, showing him I could take his cock however he wanted to give it to me. I was gritting my teeth as he pushed in the third time, but I held firm, and by the fourth thrust I was pushing back a bit. And then?\n\nWe were animals, legs slapping loudly as they met. His fingers tore at my flesh, gripping hard, holding me where he wanted me. I was his then, entirely: his bitch. His whore. His cumslut. I was who he deserved, him with his splendid cock and those eager young balls swinging as he claimed me. I needed to be his.\n\nSo I braced myself further, thrust my body back, and let him have me.\n\nI'm sure the neighbors heard my shrieks, punctuating each powerful thrust like a tennis player hitting returns, each of them rising to a clenched sob at the end before starting all over again in the next second as his fingers tightened and his dick slid back inside me, again and again, filling me with every stroke as he plunged into the welter of his own first load.\n\nI saw my own thighs glisten, froth dripping away from us with every tit-shaking thrust, and then just when I thought my arms would give out, just when he was holding hard and speeding up and grunting my name, just as his sweat was sprinkling my back, he gave a final great thrust that pinned me to the couch once more before his balls tightened on my body and he came again, dousing my juicy pussy, leaving me full and him empty as the sectional stopped inching across the rug.\n\n\"Holy shit!\" he raved, triumphant, his body smothering mine. I felt it now, the ache in my thighs and back: he'd slammed me hard, controlling me, and I loved it. I twisted my head slowly around, panting, my face showing the mottled blush of the lust he'd unleashed. \"Jesus, Ms Norland.\"\n\n\"Yeah,\" I replied dully, my throat hurting. \"Look, Jared, do me a favor?\" I gasped as he flexed his dick, still embedded deep inside me. Still summoning lightning bolts from my pussy. \"Call me Ella.\"\n\nHe gazed happily down at my bare ass. \"I think I could get used to this.\" He was blowing like a racehorse.\n\n\"Just wait.\" I felt delicious. Vibrant. Wanted. \"We haven't even made it to my bed yet. Happy Thanksgiving, stud.\"\n\n* * *\n\nThank you for reading! Make sure you get a chance to read all the other Holiday Contest entries and vote on your favorite!"
    ],
    "authorname": "Voboy",
    "tags": [
        "student",
        "teacher",
        "infidelity",
        "premature ejaculation",
        "seduction",
        "tutoring",
        "big tits",
        "thanksgiving",
        "winter holiday"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/ive-always-been-a-nurturer"
}