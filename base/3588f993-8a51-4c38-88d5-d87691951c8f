{
    "title": "The Year of the Cat Ch. 24",
    "pages": [
        "100% Fiction. All sexualized characters are adults.\n\n\"Okay. Everything is packed in the car.\" Matt said, striding through the front door. \"Just gonna take a quick pee and I'll be ready!\"\n\n\"Sounds good, babe.\" Janice answered. She was busy going over the complicated watering instructions of her plants with Tracy, who followed her, taking notes.\n\n\"We'll only be gone for a couple days.\" Janice said, finally.\n\n\"I know.\" Tracy groaned. \"You've told me, like, eleven times already! What's up? Are you nervous?\"\n\nJanice was wringing her fingers distractedly. \"Oh... maybe. I don't know what to expect at this trade show and I keep wondering why they chose me to represent the company.\" she said to Tracy. \"I really don't want to fuck this up.\"\n\n\"You won't!\" Tracy exclaimed, stepping forward and giving her sister an encouraging hug. \"You got this! And if you're ever in doubt, let the girls out!\" she giggled, toying with Janice's top button on her blouse.\n\nJanice scoffed. \"That's sound advice for YOUR business, Miss Cupcakes, but I've been studying hard for this! I've been rehearsing my customer approach with Matty all week. I want the success of this to be based on me being good at my job, not just because people like looking at my boobies.\"\n\nTracy volleyed a scoff right back at her sister. \"Well, speaking as someone who's made ten thousand dollars in a week from people who like to look at boobies: you're fucking crazy.\"\n\nTracy's FAN page had become a success beyond either of their wildest expectations. She and Matt had amassed a gallery of photos and videos over the course of the week of Tracy adorned in her sister's minuscule 'comfy' shirts. To say the reception was warm would be vast understatement. Tracy's subscription numbers were in the thousands with hundreds of messages flooding her inbox daily.\n\n\"Anyway...\" Janice said with a sigh. \"Are you sure you'll be okay here alone with Bubsy?\"\n\n\"Oh sure! He and I are becoming best buddies. He always hangs out and watches when I change or take a shower.\"\n\n\"Sounds about right.\" Janice chuckled. \"What are you going to do while we're gone?\"\n\n\"I have a metric shit ton of mail to answer. Don't worry, I won't get bored.\"\n\n\"Well, call me or Matty if there's any questions or concerns.\"\n\nMatt emerged from the bathroom. \"Alright, Tracy. See you soon, sexy.\"\n\nTracy wrapped her arms around his neck and gave him a long, wet kiss with a sensual moan to accompany. \"I'm going to be climbing up the walls here, waiting for this cock to come home!\" she growled in his ear.\n\nJanice smiled. \"Don't worry. I'll make sure I leave him with enough energy for a proper welcome reception.\"\n\n\"Okay, you two...\" Tracy exclaimed. \"Drive safe and have FUN!\"\n\n~~~~~~~~~~~~\n\nThe mid morning traffic had thinned out by the time Matt and Janice had reached the long rural highway towards Greenville.\n\nThe two conversed and laughed as they sped down the highway for several hours. In the lull of talk, Janice reclined while Matt drove, her fingers idly gliding up and down the thigh of his pant leg.\n\n\"Doing ok? Need to stop and stretch your muscles, baby?\" Janice asked.\n\nMatt caressed her hand. \"I'm hanging tough, baby.\" he said with a smile. \"Long distance drives don't bother me. My old job would let me drive myself to big projects we had on the west coast. So, I'm more used to road trips lasting several days... five hours is easy!\"\n\n\"Cool! I wouldn't mind taking a trip like that with you one day!\"\n\n\"I would love it! I have so many hidden gem camping spots that I've found across this whole country! I can't wait to show you!\"\n\nJanice gulped, nervously. \"C-camping?\"\n\n\"Wha- You don't like camping?\"\n\n\"I... I don't know! I've never been. It seems a little scary to me.\"\n\nMatt chuckled. \"Well, It would be wrong to say that there's NOTHING to worry about out there, but all you need is a little common sense. When the weather gets a little warmer, do you want to take a little camping trip with me up to the mountains? Just to see if you like it? I have more than enough camping gear!\"\n\n\"Absolutely!\" Janice exclaimed. \"I think I would be able to have fun and relax if I was with someone who knew what they were doing.\"\n\nMatt smiled contently, raising Janice's hand to his lips. \"I just really like spending time with you anywhere.\"\n\n\"Same here, baby.\" Janice cooed.\n\nUp ahead, a tractor trailer was struggling to gather speed upon entering the highway. Matt entered the left hand lane to pass the large truck.\n\n\"Think I should flash this truck driver?\" Janice giggled, hands at the ready, clutching the bottom hem of her buttoned blouse.\n\n\"Hell yeah! That'll be the highlight of his day. No doubt!\" Matt chuckled as his car began to overtake the lumbering transport vehicle.\n\nJanice's massive tits tumbled out of her lifted brassiere as she sat up straight, twisting her torso towards the passenger window.\n\nThe bearded driver, who was tensely seated forward, happened to glance out of the window as the car beside him passed on the left. One of the last things he had expected to see was a pair of enormous tits pressed against the inside glass of the car's passenger seat window. Their enormous mass almost spread across the entire glass surface. Janice squealed with laughter watching the man's jaw fall in his lap, his eyes barely paying attention to his driving.\n\n\"Ok, baby! Hit it!\" she laughed. \"Let's get out of here before this poor guy has an accident!\"\n\nMatt's right foot mashed the accelerator and the lightweight sedan was soon far away from the plodding tractor trailer, which sounded out two appreciative blasts from his horn.\n\nJanice sat back, laughing hysterically. \"God! I should have taken a photo of that guy's face! Haha!\"\n\nMatt was laughing loudly, wiping tears from his eyes. \"Damn, baby! You are wild! I didn't think you were going to do it, to be honest!\"\n\n\"You know it was only a matter of time before the girls came out!\" Janice giggled. She left her shirt and bra bunched up over her upper chest, letting her round, beautiful behemoths wobble to the physics of the road. Matt couldn't resist risking peeks over at Janice's gorgeous breasts every few seconds. Before long his lustful gazes began to affect the shape of his lap. A thick, dome tipped cylinder arose from between his legs, tenting the loose fabric of his athletic shorts in an obvious display.\n\nJanice, naturally, was quick to observe. \"Well, well! Look who woke up!\"\n\nFrom his periphery, he saw Janice reach over to him. Matt bit his lip feeling her hand caress his thick cock through his thin shorts.\n\n\"Mmmmm! Ever had 'road head', baby?\" Janice cooed, seductively.\n\nMatt shook his head, glancing at her with an excitement in his eyes.\n\n\"Okay then...relax and try not to drive off the road.\" said Janice, leaning over to kiss his cheek.\n\nShe drew the loose leg of his shorts, up and over his massive erection. Then, leaning over Matt's lap, lowering her lips towards his bare, erect penis, Janice began gliding her tongue over the domed tip, playfully.\n\n\"Mmmmm!\" Janice's muffled moans filtered up to Matt's ears. \"You keep your hands on the wheel and I'll handle the STICK!\"\n\nMatt could feel her tongue and lips begin their zealous worship of his throbbing cock. He fell into a euphoric trance, his eyes locked onto the empty highway before him. Matt reveled in the delightful suction she applied to his pulsing, purple cock head. Her hand slowly, sliding up and down his long shaft.\n\n\"Oh my god!\" Matt gasped, trying to keep his hands steady on the steering wheel.\n\nSoon, Janice felt his dick perform it's tell tale spasm, signaling the imminent burst of sperm approaching. \"Mmm! Yes, baby! Let me have all that delicious cum!\"\n\n\"Oooohh, shit!\" Matt cried as the wave of ecstasy hit him. His view became blurry for an instant as the he gripped the steering wheel, desperately. Janice was ready to receive every lurching gulp, greedily, when his cock had finally surrendered it's load.\n\nShe stroked his dick, coaxing every drop from his balls. \"Fuck yeah!\" Janice exclaimed, sitting back up.\n\nMatt exhaled. \"Phew! Fuck yeah, indeed! You make an EXCELLENT copilot, babe!\"\n\nJanice took a sip from her water bottle, smiling. \"Imagine doing THAT all the way across the country!\"\n\n\"Now it seems like the only way to travel to me!\" Matt chuckled.\n\n~~~~~~~~~~~~\n\nThe sun was in it's golden hour when the two found themselves pulling up to the luxurious hotel / convention center.\n\n\"Wow! Time flew by!\" Janice exclaimed. \"We're here already!\"\n\nMatt and Janice handed their keys to the valet and wheeled their luggage to the check in counter.\n\nAfter they were handed their keys, the two rode the elevator up to the eleventh floor.\n\n\"I have to call my assistant to let him know I've arrived.\" Janice said, fishing through her purse for her phone. \"He's in charge of setting the booth up for show.\"\n\nMatt held the door open to their room while Janice entered. The spacious suite was beautifully accommodated and spotlessly clean. He rolled the suitcases inside while Janice waited for a response on the phone.\n\n\"Hi... Bruce? This is Janice Paige. I just arrived at my room, how's it going down there?\"\n\n\"Fabulously!\" a deep, crooning voice sounded over the phone's speaker. \"This booth is going to blo-... JEFF THAT GOES OVER THERE!!!... ahem... this booth is going to blow people's minds!\"\n\n\"Fantastic! Is there any way I can lend a hand tonight?\"\n\n\"No, honey! I've got a gang of gorgeous, sweaty men doing my every bidding and I'm loving it!\" he chuckled, deviously. \"See you in the morning! Bright and early!\"\n\n\"Okay, bye, Bruce.\" Janice smiled, ending the call. \"Well, he sounds like a character, huh, baby?\"\n\nMatt didn't respond.\n\n\"...baby...?\" Janice said, turning towards where he stood, motionless.\n\nHis mouth hung open in amazement, staring into the open door of the bathroom. Janice approached to inspect what held his enraptured gaze. Inside, was a giant, glass walled shower with six massaging water jets studding the tiled wall and a large rainfall shower head above.\n\n\"Oh... shit!\" Janice breathed.\n\n\"Yeah... last one in is a rotten egg!\"\n\nThe two immediately began wriggling out of their clothes, laughing.\n\nIn the shower, the warm, pulsing jets of water battered their weary muscles with soothing pressure. Their naked, wet skin pressed against one another while the two made out passionately underneath the gentle shower of warmth. They took turns, sensually rubbing soapy body wash over each other's every inch, then letting the exhilarating spray rinse the weariness of the road away.\n\nMatt led Janice to the wide, tiled bench within the huge shower stall and knelt in front of her. She took a seat and spread her legs.\n\n\"Yes! Baby!\" Janice hissed when she felt Matt's tongue sweeping over her clitoris. \"Mmm! Make me cum good, baby! Oh yes! Right there!\"\n\nMatt felt Janice's clit go rigid as wetness bathed his lips. \"Oh fffffuck yes!!\" Janice squealed. \"Just like that, baby! Holy shit!\"\n\nShe gently persuaded Matt to switch places with her on the bench. \"I'm gonna bounce on this fat cock now.\" Janice said, breathlessly. She turned her back to him and straddled his legs. Guiding Matt's thick cock into her pussy, Janice moaned in pleasure when his exquisite girth spread her inner labia apart.\n\n\"Oh god! Fuck yes!\" Janice exclaimed as her bouncing tempo began. \"Your cock feels so deep inside me!\"\n\nMatt reached forward, cradling her massive tits. \"Yes!\" Janice called out. \"Hold my titties so I can go to town on your amazing dick!\"\n\nMatt gave his best attempt at corralling her rollicking, soft breast flesh with his hands as Janice's bouncing efforts kicked into overdrive.\n\n\"Holy... shit...!\" Matt croaked, feeling Janice's tight pussy sliding up and down his erect penis in a rapid tempo.\n\nJanice was screaming in ecstasy. Matt's cock pressed and slid against every available space she had in her vagina. \"Oh baby... I love you so much!\"\n\nHearing her words instantly made Matt's balls spasm. \"I l-love... y-you t-t-\" he sputtered as the surprise orgasm practically rendered him speechless.\n\nJanice's own orgasm blasted through her when she felt the warmth of Matt's climax flowing through her insides. \"Oh-oh-ohhh my god!!!\"\n\nThe two kissed each other, lovingly before rinsing off and donning their fluffy bath towels.\n\n\"There's a nice restaurant on the ground floor.\" Janice said, patting her skin dry. \"Wanna get dressed and have dinner? The company is paying for it.\"\n\nMatt's stomach grumbled. \"Free: my favorite flavor!\"\n\n~~~~~~~~~~~~\n\nThe intimate seating area of the restaurant was nestled among the reaching fauna surrounding the indoor koi pond. Sounds of trickling water and echoing murmurs of distant conversations from the immense open lobby flitted past Matt and Janice as they took a seat at an empty booth.\n\n\"It's so beautiful!\" Janice exclaimed, nestling herself in her seat close beside him.\n\n\"Rather romantic, wouldn't you say?\" Matt smiled, entwining his fingers in hers, leaning over for a soft kiss.\n\n\"Mmm! Finally, a date night alone with my man!\"\n\nThe two ordered cocktails and hors d'oeuvres, enjoying a quiet, yet lively conversation, while travel weary people shuffled up to the bar line for a sip of relief.\n\n\"Watch my stuff. I'm gonna take a wiz.\" Janice said, scooting out of the booth along the soft bench.\n\nShe trotted to the Ladies room. After relieving herself, drying her hands at the sink, Janice stood before her reflection. She inspected her buttoned blouse for any duty stragglers.\n\nA woman at the sink beside her was hardly paying attention to her hand washing, instead she was openly gawking at Janice's chest through the mirror's reflection.\n\n\"Damn. What I wouldn't give to have, like, a half... no... even a quarter of your titty size!\" she exclaimed.\n\nJanice chuckled at the woman. \"If I only had a dime yadda yadda...\"\n\n\"Yeah, I bet.\" the woman smiled. \"You're here for the big show, I assume.\"\n\n\"Yep! Tomorrow's gonna be exciting!\"\n\nThe woman swiped three hand drying napkins from the dispenser on the wall. \"Someone sure knew what they were doing inviting YOU to be in their booth!\"\n\nJanice blinked for a moment, processing the woman's words. Before she could ask to clarify, however, she was exiting the bathroom.\n\n\"Have a great show!\" the woman called out to Janice over her shoulder as she departed.\n\nJanice dried her hands and headed out of the bathroom back towards her table. Turning the corner, she was alarmed to see another woman talking very closely to Matt, this one was young, thin, with long red hair and green eyes burning into Matt's.\n\nJanice hardly ever allowed the specter of jealousy to influence her, but a green flame ignited within her, nonetheless. Janice was immediately able to recognize the attractive woman's predatory seductiveness from across the room. The woman stood leaning over Matt, one hand resting on the seat back of his chair, the other at the table before him. Her daringly low cut dress displayed the full cleavage of her large, round, artificial breasts only inches from her boyfriend's face.\n\nMatt sweated as the strange woman spoke to him in a low tone. His polite eye contact with her was broken every few seconds by a quick, desperate scan of the room for Janice's return.\n\nMatt sighed in relief when he finally saw Janice approaching. \"Oh! Here she is! Hi, baby!\" he exclaimed to Janice as she scooted into her seat and snuggled next to him. She could hear a frantic edge in his voice.\n\nThe woman barely acknowledged Janice's presence. Matt gulped. \"Uh... honey, this is Connie. She was just telling me that this will be her third-\"\n\n\"Fourth!\" the woman interrupted.\n\n\"Oh... uh, forth year in a row that she'll have won 'Best in Show'.\"\n\nConnie scoffed. \"Not 'Best in Show'! It's not a fucking a dog competition! It's the 'Best Booth Showcase'!\"\n\n\"Oh! Yeah, sorry. Connie, this my gir-\"\n\n\"The show hasn't even started. How are you so sure you'll win this year?\" Janice said, cutting in coldly as her eyes bore into the woman's.\n\nConnie giggled condescendingly, regarding Janice for the first time. Janice's embracing hold on Matt's bicep tightened from her hunched over position. \"You don't actually think that YOU stand a chance, do you, little lamb?\"\n\nJanice's confidence faltered. \"I... I have just as much of a chance as everyone else.\" she said, attempting to mask her shaking voice.\n\nShe shook her head, looking sadly at Janice. \"Poor little princess... so hopeful... yet so hopeless.\"\n\nConnie then stood up straight, hand on her hip, practically arching her back to accentuate her large, spherical breast implants stretching her top open in a proud public display.\n\n\"Let's just say it'll take more than big, blue eyes and a button nose to stand out to the judges, blondie. But thanks for coming out to play!Ta-ta!\"\n\nWith that, the woman abruptly traipsed away, weaving her way through the milling diners, towards the elevators.\n\n\"Phew!\" Matt exclaimed, taking a deep, calming breath. \"Thanks! You saved me, babe! I swear, all I did was compliment her computer bag and the next thing I knew, I was getting an entire lecture about all her life achievements! Loony tunes! Some people really take this show seriously, huh babe.... babe?\"\n\nA scowl was frozen to Janice's pretty face, her eyes fixed to nowhere in particular as her mind was in obvious, active calculation. Matt wasn't sure if she had heard him or not, but he dared not interrupt her cold thought processes.\n\n\"I'm gonna win that fucking prize.\" Janice growled at long last.\n\nHe could see her eyes alight with tenacious purpose when she finally gazed into his. \"Just watch! This year, that bitch ain't going home with SHIT!\"\n\n~~~~~~~~~~~~\n\nMatt woke the next morning, well before his alarm was scheduled to ring, to discover Janice was absent from bed.\n\nHe poked his head into the adjoining suite to find her completely naked on the floor, holding a yoga pose on her rubber mat.\n\n\"Morning, baby.\" Janice said through her deep breathing. \"I'm just getting the blood flowing before the day starts.\"\n\nMatt smiled. \"Good morning, beautiful. Keep at it. I'll brew up some coffee and order us some breakfast.\"\n\nOver the course of the next hour Janice mentally prepared herself for the unknown challenges ahead while she bathed, ate and dressed.\n\n\"I think I'm ready.\" she said at last. \"How do I look?\"\n\nJanice had chosen to wear a long black, business dress and a dark gray blazer over it. Her incredible, curvy assets were only hinted at in her modest attire. The collar of the dress clung around her neck, draping all the way down past her knees. Janice's hair had been pulled back into a tight, conservative bun.\n\n\"You look like you're ready for business, honey.\" Matt beamed. \"Absolutely beautiful!\"\n\nJanice breathed a sigh of relief. \"Alright. I hope you don't get too bored while I'm working.\"\n\nMatt approached her, giving her a tight squeeze. \"Don't you worry about me. I'll be fine. Just focus on killin' it out there today!\"\n\n\"Okay.\" she grinned. The two kissed, deeply before she opened the door to leave. \"I love you, baby.\"\n\n\"I love you, honey. Good luck!\"\n\n~~~~~~~~~~~~\n\nThe convention center was staggeringly enormous. Janice had never seen a more spacious building interior. As far as the eye could see, people were bustling to achieve their final preparations to their trade show booths before the opening bell rang. The flurry of activity nearly overwhelmed Janice's senses upon her arrival.\n\n\"Holy shit!\" she thought to herself. \"...Focus, Janice. Just pull up your big girl panties and let's do this.\"\n\nHer head was on the swivel as she traversed the rows of vendors, craning her neck to locate her company's booth. Finally, Janice spotted the bright logo emblazoned above a sleek, stylishly appointed trade show booth. Warm light illuminated the appealing display. Huge, mounted monitors were playing the company's recorded promotional video. The medical educational equipment products (the main draw of the booth) were each occupying small display stands, like museum exhibits.",
        "A handsome, well dressed man was meticulously straightening presentation materials on the round tables that stood within booth boundaries.\n\n\"Hi! Good morning.\" Janice said, brightly. \"Would you happen to be Bruce?\"\n\nThe man spun on his heels with a bright smile to respond to the female voice, but before his words could be uttered, his pleasant expression fell into a wide eyed gawk of disbelief as he stared directly at Janice's bosom.\n\n\"Oh! My! God!\" he exclaimed loudly. \"Oh, girl... what have these men got you into?!\"\n\nJanice gulped, nervously. \"W-what do you mean?\"\n\nThe exquisitely groomed man scoffed. \"I knew ol' VP Woodward was tired of losing the booth showcase award every year, but I never thought he would stoop to that cunt Connie's tactics!\"\n\nJanice blinked in surprise. \"Pardon me?\"\n\nThe man suddenly seemed to become aware of his brashness. \"I'm sorry, sweetheart. Forgive me. Yes, I'm Bruce. You must be Janice.\" He extended his hand to give Janice a dainty greeting shake.\n\n\"That's me!\" she chuckled through her nerves. \"It's nice to meet you. The booth looks incredible! Uhh... what were you saying about the showcase award?\"\n\nBruce's eyes made a quick sweep of his surroundings, before speaking low to Janice. \"There's a bitch here that wins the best booth award every year-\"\n\n\"Connie, right?\"\n\n\"Yes! Skinny lil' annoying ass, bird-looking bitch with her ridiculous bolt on titties!\" Bruce spat.\n\n\"I met her last night.\" Janice chuckled. \"We... uh, didn't hit it off.\"\n\n\"That's nothing but a good endorsement for you in my book, doll!\"\n\n\"So... how does she win every year?\" Janice asked. \"And what do I have to do with ANY of this?\"\n\n\"She wins by waving those repulsive, fake titties around! She wears these skin tight dresses with her gross thingies almost falling out of the front. Eww! And her shoes make me want to vomit!\" Bruce shuddered. \"For some reason it works on the judges. I assume they just turn into salivating dogs for big boobs... the appeal is a mystery to me... ANYWAYS...that brings us to YOU, Tits McGee.\"\n\nJanice gulped, coming to realize her role in the trade show. \"I'm... just... here to be eye candy?\"\n\nBruce pursed his lips and awkwardly averted his eyes. \"I wasn't gonna say it like THAT!\" he muttered.\n\nOverhead, the loud speakers announced the commencement of day one of the trade show.\n\n\"Fuck that, Bruce.\" Janice exclaimed, buttoning her blazer over her chest. \"I WILL be winning that prize this year... and I'm going to do it by being the best salesperson I can at this absolutely gorgeous booth. Not by flaunting my body... but by doing it the RIGHT way!\"\n\n\"You mean the impossible way? Mmm-kay!\" Bruce tittered under his breath.\n\n\"It's not impossible! Now, let's get into character. Here they come.\"\n\n~~~~~~~~~~~~\n\nMatt laid in his underwear, bedsheets strewn across the bed. The open curtains didn't provide much of a view; a distant expressway crowded with rushing vehicles and a vast parking lot directly before him. The uninspiring vista only encouraged him to stay in bed.\n\nSuddenly, his phone rang, offering a welcome reprieve from stagnant monotony.\n\n\"Hello?\"\n\n\"Hey, stud.\"\n\n\"Tracy! How's it going? Everything okay?\"\n\n\"Oh, yes. Just fine. Bubsy says 'hi'. I was just calling cause I miss my partner. How are you?\" Tracy spoke.\n\nMatt smiled. \"I'm just fine, darling. Thanks. I'm laying here in my underwear for the day...\"\n\n\"Me too!\" Tracy exclaimed. \"Except I'm answering DM's all day.\"\n\n\"Having fun?\"\n\nHe heard an exasperated chuckle over the phone. \"Yeah... Some of 'em are charming...\" Tracy said. \"But there's a lot of crazies out there, dude!\"\n\n\"That doesn't surprise me.\"\n\n\"Also, I've been getting a few requests from people. They... uhh... want to see me tittyfuck someone. I figured I'd ask you since you have a porno cock anyway. What do you say? Wanna let people watch you bury your big dick between my fat titties when you get home?\"\n\nMatt let out a loud sigh. \"If I HAVE to!\"\n\nTracy giggled. \"Poor fella! Getting paid thousands of dollars to film himself busting a nut all over some big boobies.\"\n\n\"It DOES feel almost criminal to be making this much money for doing what we're doing.\"\n\n\"I know!\" Tracy exclaimed. \"And just think: we're only getting started!\"\n\n\"It's exciting!\"\n\n\"Speaking of exciting starts, I sure hope Janice is having one right now.\"\n\n~~~~~~~~~~~~\n\n\"This blows.\" said Janice, slumping back in her chair. Bruce was idly doodling pictures on a promotional pamphlet. Only a few straggling attendees had poked their noses within the boundaries of their booth for the four hours they had been open.\n\nA catered lunch break had been announced in the dining hall, reducing the show's crowd to only a few, milling individuals.\n\nBruce raised his eyes to see a group of middle aged men making their way down the aisle, carrying on a spirited conversation amongst each other.\n\n\"Look alive, sugar tits.\" he muttered to Janice, prodding her lightly with his elbow. \"There's the judges on their way to lunch.\"\n\n\"Shit!\" she hissed. Janice bolted to her feet in panic, smoothing out the wrinkles of her dress quickly and securing any loose, straggling strands of hair. She armed herself with a handful of promotional pamphlets and practiced her brightest smile.\n\n\"Bruce!\" one of the men exclaimed as they approached the booth. \"Welcome back! Honestly, man. You outdo yourself every year. The booth looks AMAZING!\"\n\n\"Thank you, Mr. Clemson!\" Bruce replied, fluttering his eyelashes.\n\n\"Where's Charlie? Is he getting lunch?\"\n\n\"Charlie didn't make it this year.\" Bruce replied, turning towards Janice. \"We have a brand NEW recruit this go around. This here is Janice Paige and she is absolutely busting at the seams (wink)... with excitement to be here! Janice meet Mr. Clemson and the rest of the judges panel.\"\n\n\"Hello, gentlemen!\" Janice smiled, extending her hand to shake.\n\n\"A pleasure, my dear!\" said the smiling Mr. Clemson, grasping her hand, lightly. The group of men standing idly in the aisle nodded in greeting, some too distracted to respond, staring suspiciously at Janice's filled out sports blazer.\n\nShe cleared her throat. \"Would any of you be curious to know more about our products?\"\n\nBruce winced, quietly.\n\nThe rotund Mr. Clemson laughed, dismissively at Janice. \"She's all business, this one, huh, Bruce?\"\n\nBruce raised his eyebrows. \"She's a 'go-getter', that's for sure!\"\n\nMr. Clemson and the other judges began to shuffle onward, continuing on their way. \"Keep her on the straight and narrow, Bruce!\" he called out of his shoulder. \"You got potential, kid.\"\n\n\"I got her covered on that 'narrow' part, for sure!\" Bruce giggled.\n\nJanice's shoulders slumped in defeat as the men turned the corner. \"They completely ignored me!\"\n\n\"What did you expect?!\" Bruce snapped. \"They didn't come here to 'know more about our products'. They came over to shoot the shit! You have to take a giant chill pill and RELAX!\"\n\nJanice blinked. \"Well... I... just wanted to present an image of professionalism....\" She walked over and snatched away the paper that Bruce was doodling on. \"And that's tough enough with you over here drawing pictures of dicks on our pamphlets!\"\n\n\"That is a work of art!\" Bruce gasped.\n\nJanice inspected the drawing in her hand. Bruce had added an enormous, erect, dripping penis peeking out of the lab coat of the handsome doctor pictured on the cover.\n\n\"Mmm. Not bad.\" Janice shrugged.\n\nBruce's eyes widened. \"Where have you seen cocks better than that?\"\n\n\"My bo-... NEVER MIND.\" Janice said, trying not to get too flustered. \"Anyway... so, what? Did I just fuck up our chances of winning?\"\n\n\"I told you: we never HAD a chance to begin with!\" Bruce said, grabbing a pen and a fresh pamphlet. \"Now, sit down and show me your dick drawing skills. That'll kill some time.\"\n\nJanice sighed, shaking her head. \"No... I'm going to take a walk around convention center while everyone is still at lunch. Hopefully it will calm me down. \"\n\n\"Thoughts and prayers.\" said Bruce, absorbed in his drawing.\n\nJanice ambled through the endless rows of vendor booths, her mood darkened by disappointment. She distracted herself by observing the various displays and sales representatives enjoying their temporary reprieve from duty. It was obvious that her company had clearly made an significant investment into the 'curb appeal' of their display. Most of the other booths she glanced at were paltry in comparison.\n\n\"Our booth deserves to win the prize based on Bruce's merit alone!\" Janice thought silently. \"I wonder why they were so dismissive.\"\n\nJust then, Janice happened to spot the group of judges that had just visited her booth gathered around a brightly lit display located mid way down the aisle. The men all had bright smiles, engaged in an entertaining conversation. Janice's eyes narrowed when she recognized Connie standing in the center of the cluster of men, throwing her head back in raucous laughter.\n\nConnie's sequined dress seemed like it was only held to her body with tape. Her surgically lifted cleavage was out and on display in full force within her minuscule garment. The pack of middle aged men hovered over her like flies around a picnic potato salad.\n\n\"I guess that answers my question.\" Janice sighed to herself. \"These judges really are just a pack of horn dogs.\"\n\nBruce was applying a cross hatched shading technique to a vein running down the length of another highly detailed penis, when he saw Janice approaching with a determined gait to her advance.\n\n\"Fuck it.\" he heard her mutter.\n\n\"Mmm. Here we go...\" he said, rolling his eyes at her. \"What's up with you?\"\n\n\"Nothing...\" Janice replied, unbuttoning her blazer. \"If you can't beat 'em... JOIN 'em!\"\n\nShe threw her jacket back from her shoulders. The solid black dress she wore beneath was conservative in it's coverage, but gripped her wild curves tightly from top to bottom, revealing her astonishing figure.\n\nBruce's jaw hit the table. His eyes nearly shooting from his head. \"HO-LEE SHIT!!\" he shouted. \"You are a fucking BRICK SHIT HOUSE, woman!\"\n\nJanice reached up and loosened the tight bun that pinned her hair back. Her long blonde curls draped down past her shoulders as she ran her fingers through the golden, wavy strands.\n\n\"Seriously... what the fuck is happening to my penis right now?!\" Bruce exclaimed in shock, unable to look away from Janice's bulging physique.\n\n\"Uhh... T.M.I., Bruce!\" Janice said, reapplying her makeup.\n\n\"Don't worry. I'm not switching teams or anything. Vaginas will always terrify me.\"\n\n\"Okay.\" Janice said, snapping her makeup case shut and taking a deep breath. \"Let's see how it goes now.\"\n\n~~~~~~~~~~~~\n\nMatt was idly watching the long line of car tail lights moving out of the parking lot from his window, when he heard the door knob click. Janice entered the room, looking weary and disheveled.\n\n\"Uhhhhg! What a day!\" she moaned.\n\n\"Hi, baby!\" said Matt, striding forward for a hug. \"How'd it go?\"\n\nJanice fell into his embrace with a sigh of relief. \"I'm so happy to be here with you... today was... a lot.\"\n\nMatt cocked his head. \"How so?... Wait!\" he flashed an excited smile. \"Would you like to tell me about it while you soak in a hot bath?\"\n\n\"Sure! I'll get one start-\"\n\n\"There's one waiting for you now. Just finished filling the tub. Still plenty hot!\"\n\nJanice's eyes grew wide. \"You're kidding me!\"\n\n\"No! Come see!\" Matt led her to the bathroom where nearly a dozen lit votive candles had been placed around the bathroom, casting a dim, wavering, romantic light upon the darkened room.\n\nJanice almost welled up with tears. A chilled wine glass had been placed in her hand, unaware to her.\n\n\"Oh, baby! This is so beautiful! But... oh, god... I hate how ungrateful this sounds, but I'm starving. I haven't eaten since-\"\n\n\"Dinner arrives in ten minutes.\" Matt cut in, looking a the clock.\n\nJanice's knees felt weak. \"Oh my god... I'm swooning.\" Her grip around his neck brought his head close into a deep, passionate kiss.\n\n\"If I wasn't madly in love with you already...\" Janice said softly. \"I surely would have fallen hard just now.\"\n\n\"I love you too, baby.\" Matt said, gathering the bottom hem of her dress and pulling it up her body.\n\nJanice's arms instinctively raised as the fabric glided over her head.\n\nMatt moved forward for another deep kiss. Janice felt her bra being undone at her back. Her shoulder straps loosened and slipped down her arms. Next, she felt her panties being slid down her hips. Matt knelt, placing light kisses on her belly as he guided her panties down to the floor.\n\nJanice stretched her limbs in naked freedom. Holding on to Matt's hand, she guided herself, delicately into the hot, frothy bubble bath.\n\n\"How did you know that this was EXACTLY what I needed?\" Janice sighed, laying back among the white blanket of bubbles.\n\n\"Judging by how many cars I saw coming and going throughout the day, I had a feeling you were having an active time down there. Tell me how it went.\"\n\nJanice sighed, staring into the foam. \"Well...I found out the reason why they chose me to come do this show...\"\n\n\"Oh, really?\" Matt replied, taking a seat nearby on the closed commode. \"And why are you here?\"\n\nMatt couldn't help his eyes from growing wide as two huge cream colored flesh mountains arose from the white soap foam scape, capped with pink nipple peaks.\n\n\"These...\" Janice said, letting her massive breast's buoyancy sway them back a forth slowly in the warm bath.\n\nMatt had to blink himself from getting lost in a trance, watching her huge breasts. \"Mmm-...wait. What?!\"\n\n\"Yep. Bruce told me: Connie wins the booth award every year for showing off her fake titties...\"\n\n\"Geeze...\" Matt shook his head. \"So they brought you in to blow Connie clear out of the water!\"\n\nJanice chuckled. \"In a manner of speaking... yeah.\"\n\n\"Are you sure though? Seems really unprofessional. Bruce could have a chip on his shoulder, you know?\"\n\nJanice shook her head. \"I saw it, first hand. Then, I tested out his theory by leaving my blazer off and just wearing my tight black dress.\"\n\n\"And...?\"\n\n\"As much as I hate to admit it: he was right! Our booth was PACKED the rest of the day! Bruce and I took SO many orders from customers.\" Janice exclaimed. \"And wouldn't you know it; before long, a couple of those judges started hanging around, pretending that they weren't checking me out.\"\n\n\"Mmm...\" Matt rubbed his chin. \"Creep-tastic!\"\n\n\"For real!\" Janice shuddered. \"What should I do tomorrow? Do I say 'fuck that prize' and bundle myself up?... or do I wear that little maroon number I brought and guarantee a win?\"\n\n\"Well, I guess it depends on what's more important to you. Food for thought...\" Matt answered. Just then, a knock on the front door sounded out.\n\n\"Room service~\" said a voice behind the closed door.\n\n\"Speaking of food!\" chuckled Matt.\n\nJanice dried herself from the tub and joined Matt at the small table, where he had arranged their plates and utensils. The two enjoyed their delicious meal in the quiet room.\n\n\"I suppose you'll be ready to lie down now, huh?\" said Matt, pushing away from the table and stretching his arms.\n\n\"No! You poor thing. You've been cooped up in this room all day! Let's go downstairs and I'll buy you a drink at least.\" Janice exclaimed, grasping his hand.\n\n\"That doesn't sound like a bad idea, actually. Sure! Let's throw some presentable clothes on and have a night cap.\"\n\nTwenty minutes later, the two stood beside each other, hand in hand as the elevators car slid silently to the ground floor. The doors opened upon signaling the bell of arrival. Matt and Janice stepped out into the moderately populated lobby and strolled to the bar area, taking a seat at two empty bar back chairs, facing the bartender.\n\n\"Hi! What'll it be, you two?\" the handsome male bartender smiled.\n\n\"Crown and coke for me.\" answered Matt.\n\n\"Moscow Mule, please.\" Janice grinned.\n\n\"Coming right up!\" the bartender replied.\n\n\"Well! Look who's here!\" came Bruce's slurring voice, suddenly from behind Janice.\n\n\"Hi, Bruce.\" Janice replied, wearily turning to greet.\n\n\"My! My! Who's your handsome friend, here?\" said Bruce, eyeing Matt up and down in his chair.\n\nJanice cleared her throat loudly. \"This is my BOYFRIEND.... Matthew.\"\n\n\"A pleasure.\" Matt smiled, shaking Bruce's hand.\n\n\"The pleasure is MINE! Jesus, girl!\"\n\n\"Behave, Bruce.\" Janice deadpanned.\n\nBruce scoffed, rolling his eyes as he sipped his bright blue cocktail. \"So, Missy... are we winning that grand prize tomorrow or what?\"\n\nJanice sighed. \"I don't know, Br-\"\n\n\"Winning MY grand prize?!\" a female voice spoke loudly behind the group.\n\nThe three turned their heads, quickly to see Connie, in another over-revealing evening dress, standing close enough to overhear their conversation.\n\n\"Bartender...\" she called out with a condescending chuckle. \"I think these three have had WAY too much to drink!\"\n\nBruce gave her a look of disgust. \"Yeah... I sure don't remember ordering a 'Red Headed Slut'.\"\n\n\"Fuck you, Bruce.\" Connie said with a pasted on smile. \"That prize is mine... so, you and your little partner better prepare yourselves for disappointment.\"\n\nJanice cleared her throat, loudly. A look of malevolent glee was in her eye as she twisted in her seat, turning her torso to face Connie. Janice's low cut dress offered a clear view of nearly ten inches of bulging, natural cleavage. Connie's eyes couldn't help nearly bugging out of her head when she looked down upon the vista of natural titty flesh Janice's enormous breasts offered.\n\n\"I think you should be the one preparing yourself... bitch!\"\n\nIt was as though Connie hadn't heard Janice's reply. Her complexion was pale as she stood, staring fretfully at Janice's chest.\n\n\"Those are-... oh shit..\" Connie stammered, backing away quickly, self awareness yanking her from her trance.\n\nOnce the three watched Connie speed away, fretfully towards the elevator, Bruce slapped the table with a loud cry of glee.\n\n\"Haha!\" he cackled. \"She's running upstairs to go shit a brick! Look at her!\"\n\nHis cackles reverberated through the open lobby.\n\n\"I'll never forget that look an her face!\" Bruce chortled. \"Connie's in for a long day tomorrow!\"\n\n\"We ALL are.\" Janice sighed. \"In fact... I'm probably only going to have this one drink and then we should go get some rest, baby\" she said, patting Matt's leg.\n\nMatt nodded as he sipped his cocktail.\n\n\"What-ever.\" Bruce sighed. \"I know you just want to hurry upstairs to get a good dicking down. I see it in your eyes, girl.\" he chuckled.\n\n\"Bruce!\" Janice exclaimed.\n\nHe thrust his chin out her. \"Tell me I'm wrong!\"\n\nJanice's opened her mouth to protest, but quickly closed it when she realized he was right.\n\nA smile crept across Bruce's face. \"Drink up, you two. I'll take care of your tab. It'll give me an excuse to flirt with this fine ass bartender.\"\n\n\"Thank you, Bruce.\" Matt replied.\n\n\"Yeah, you're the best, Bruce.\" said Janice.\n\nIn the elevator heading up to their floor, Matt became aware of a pregnant, quiet pause in Janice's usually cheerful demeanor.\n\n\"Everything okay, baby?\" he asked.\n\nJanice's eyes looked up into his with an expression of trepidation. \"Can I ask you a question?\"\n\nMatt blinked. \"Yes, of course.\"\n\n\"Are... these things the only reason you love me?\" Janice said, pressing her open palms to her bosom.\n\nMatt's brow furrowed. His hand reached over and pressed the 'Emergency Stop' button. Janice's eyes were wide as the alert bell rang out a single chime and the elevator car halted to a stop.\n\nShe was trembling when his palm reached up and cradled her cheek, gently.\n\n\"You listen to me, Janice Paige.\" Matt spoke, gazing deeply in to her wide eyes. \"For all the joy your beautiful breasts bring to me... it's NOTHING compared to the love I have for what's behind them... your heart.\"",
        "Janice was speechless. She attempted to swallow only to find her mouth dry. \"I... I believe you, Matty... and I love you too.\"\n\n\"I'm glad...\" Matt said, re-pressing the button to allow the elevator car to continue its ascent. \"I'll go ahead and spend my life proving it to you anyway... if it's all the same to you.\"\n\nJanice chuckled. Her fingers entwined with Matt's as she nestled close to him. \"That sounds like something I could deal with forever.\"\n\n~~~~~~~~~~~~\n\nBruce arrived early the next morning to prepare their booth for the final appraisal from the judges later that day.\n\n\"Good morning, Bruce!\" Janice's voice called out. He spun around to see her approaching the booth wearing a long overcoat. In her hands she carried two large cups of coffee and a box of donuts.\n\n\"Good morning to you!\" Bruce exclaimed. \"Wow! You brought breakfast!\"\n\nJanice grinned. \"I figured this'll give us a good boost of energy to start the day.\"\n\n\"So...\" Bruce said, sipping from his styrofoam cup. \"What did you decide?\"\n\nJanice gave a wink and began unbuttoning her overcoat. She opened her jacket to reveal a maroon, flower patterned dress. The top portion wrapped across her titanic breasts allowing a billowing display of bare cleavage bounding out of the top hem. Bruce almost choked on his coffee regarding the dozen compressed, bulging inches of cleavage exploding out of her dress.\n\n\"I decided...\" Janice cooed. \"...to win.\"\n\n\"Whoah!\" Bruce exclaimed, staring directly into Janice's colossal display. \"I do believe victory is ours!\" he chuckled.\n\nThe opening announcement was heard from the loudspeaker overhead. Soon people began filtering through the aisles of trade show booths. Heads turned and became fixed in position when Janice's huge twin mounds of flesh were spotted.\n\n\"Holy fuck!\" a hushed exclamation was heard from a passer by. \"Some major league titties, there!\"\n\nJanice serenely smiled, standing with her hands clasped behind her back, waiting for customers to approach.\n\nA few men were milling about the booth, attempting to hide their frequent glances in Janice's direction, when a familiar voice was heard.\n\n\"Good morning, you two. Hope you're having a good start to the day.\"\n\n\"Thank you, Mr. Clemson. It's starting out deliciously!\" Bruce replied.\n\n\"It certainly is!\" Janice said, approaching unseen from behind Mr. Clemson, holding a large box of donuts open in front of her bosom. \"Would you care for a treat, sir?\"\n\nThe rotund man chuckled. \"I don't mind if I do!\" he said, reaching into the box. \"She's learning to loosen up a bit, huh Bruce?\" the man spoke over his shoulder.\n\nJanice's smile stayed put as the lid closed down onto the open box, revealing two, giant, cream colored spheres of soft flesh rising out of the deep 'V' cut of her dress to Mr. Clemson's widening eyes.\n\n\"You know what they say about 'all work and no play'.\" Janice said, softly, giving a charming wink.\n\nThe red faced man could barely keep his composure. \"G-good... very very good.\" he struggled to utter. His eyes valiantly stared into to hers, not even risking a blink.\n\nJanice couldn't resist shimmying her shoulders a bit as she placed the large box on the table. Her massive breasts jiggled in natural suppleness. The flummoxed Mr. Clemson nearly let his frosted, sprinkled pastry fall to the floor.\n\n\"I-I... think the... uh... other judges and I owe it to ourselves to give your boob- err... BOOTH... a closer look today.\" the middle aged man sputtered.\n\n\"Wonderful!\" Janice exclaimed, hopping up and down on her heels, causing her enormous breast mass to bound from her dress, almost striking her chin.\n\nMr. Clemson chuckled nervously, his eyes almost bugging out of his head as he departed. \"Holy shit...\" he muttered softly as he turned to make his way down the aisle.\n\nBruce had a satisfied smile pasted across his face while he watched the round man hurrying past booths to go gather his comrades. \"Oh... now this is almost too easy!\" he laughed as Janice, who was wearing a smug smile, took a large bite of her donut.\n\nA steady stream of customers and curiosity seekers visited Bruce and Janice's booth. Bruce was reveling in the crowd of handsome men that were being attracted to their display, even if they were mostly just there to ogle Janice's incredible bust.\n\n\"Knock knock! Me again.\" Mr. Clemson's voice called out from behind. \"I brought the boys over.\"\n\nJanice turned her torso to look behind her. The group of men approached with eager grins; Mr. Clemson owning the most excited expression of all of them.\n\nShe picked up the small bowl of individually wrapped mints from the table and turned around to greet the men.\n\n\"Hello, boys.\" Janice smiled. Her hip was cocked at an angle. She held the small bowl close to her mammoth, protruding d\u00e9colletage. \"Have a mint!\"\n\nAt first sight of Janice's extraordinary round, full breasts bulging out of her dress, the men collectively paused their advancement, stunned to a standstill. Then, regaining their wits, they all dove their hands towards the bowl at once, nudging each other out of the way to reach in first.\n\n\"Thank you, ma'am.\"\n\n\"Please... it's Janice!\" she said, smiling.\n\n\"Uhh... Janice?\" Mr. Clemson said, clearing his throat, nervously. \"You... uh, wanted to tell us about the products your company offers here yesterday. Would... would you like to... uh, make a presentation?\"\n\n\"Why, Mr. Clemson!\" Janice exclaimed, placing a tiny palm over a portion of her deep cleavage. \"I'd be happy to!\"\n\nShe walked over to the display stand and retrieved a life sized plastic replica of a male torso, sans arms. The head of the dummy had nondescript facial features, except for its permanently open mouth. Laying it down upon it's 'back' on a low table, she approached and stood above it.\n\n\"Gentlemen, I'd like to introduce Robby. He's one of our latest model of CPR instructional manikins. Handsome fella, huh?\"\n\nThe men chuckled.\n\n\"Does anyone here know CPR?\" Janice asked. The group of men shook their heads.\n\n\"Well... then, please allow me to demonstrate. Pay attention! This might actually save someone's life one day!\"\n\nJanice ran her finger along the center line of the plastic torso to a spot at the base of the dummy's rib cage. Leaning over the manikin, directly in front of the men, she place one hand on top of the other and locked her arms in straight rigidity. Her upper arms squeezed her astonishing tits together, coaxing them to balloon outward, nearly eclipsing the dummy below.\n\n\"Once you've found the right spot, just place your hands like so... and begin a steady compression.\"\n\nJanice's whole body rocked up and down as she began pressing her hands, forcefully down against the manikin's chest in a repeating, thrusting motion. Her huge, rollicking breast mass bounced with abandon, up and down, over and over, nearly bursting the seams of her dress.\n\nAll heads simultaneously nodded in tandem to to the movement of Janice's hypnotic display.\n\n\"Wanna know the secret to timing this right?\" Janice breathed, through her exertion. \"Get the song 'Stayin' Alive' by the Bee Gees stuck in your head.\"\n\nJanice's thrusts were soon accompanied by her breathy voice singing in time: \"Ah! Ah! Ah! Ah! Stayin' alive! Stayin' alive!\"\n\nA man in the back of the group steadied himself from fainting.\n\n\"Ah! Ah! Ah! Ah! Stayin' aliiiiiiiiiive!~\"\n\nMeanwhile, Bruce silently sat in chair, biting the tip of his pen, tensely, eyeing the points emerging from the pant fronts of the men watching Janice.\n\n\"Now for emergency breathing.\" said Janice, ceasing her compression and tilting the manikin's head back. \"Stay with me, Robby!!\" Janice chuckled as she dove forward, pressing her lips to the mouth of the plastic victim. An audible moan was heard from one of the men, longing to trade places with the dummy. The plastic chest cavity of the victim rose with each of Janice's exhalations.\n\nSuddenly, a green light blinked from under the plastic skin in the center of the manikin's chest.\n\n\"He's alive!!!\" Janice exclaimed, lifting the rigid dummy's head and pressing it's face between her breasts in a loving embrace. \"You made it, Robby!\"\n\n\"My...\" Mr. Clemson said, catching his breath. \"Well done!\"\n\n\"Thank you!\" Janice replied, brightly. \"As you can see on the display stand, we have female model manikins also.\"\n\n\"Any of them have YOUR proportions?\" a man quietly chuckled amid the group.\n\nJanice looked over her shoulder, giving a wry smile as she placed her hands on her hips. \"Now how feasible would that be? After all... have you seen many women with MY proportions?\" she said turning her torso towards the men and proudly arching her back.\n\nAll the men in the small group shook their heads 'no'.\n\n\"Even Connie doesn't come close!\" a man whispered.\n\n\"Who?!\" another scoffed.\n\n\"Well...\" Mr. Clemson, cleared his throat, patting sweat off his brow with a handkerchief. \"Thank you VERY much for the presentation, Miss Paige. You were... extraordinary!\"\n\n\"Thank you, gentlemen!\" Janice replied with a gleeful smile.\n\n\"Thanks, boys!\" Bruce called out from his chair as the men sauntered out of the booth and down the aisle, casting longing glances at Janice's stunning figure.\n\nJanice had a satisfied grin on her face as she turned to Bruce. He arose to his feet and gave her a quaint golf clap, smiling broadly. \"Bravo!\"\n\nJanice playfully curtsied in response. \"Well, there! I did it their way... hope it was worth it.\"\n\n~~~~~~~~~~~~\n\nMatt waited in the room browsing through the cable channels in an unending loop. An 'Indiana Jones' marathon caught his attention for a portion of the day. When he could no longer stomach another commercial interruption, Matt left the room to walk around the facilities of the giant luxury hotel, hoping to pass the time in a less sedentary manner.\n\nAfter having a bite to eat, Matt returned to the room for a long nap.\n\nIt seemed like he had only just closed his eyes, when he found himself being nudged awake gently.\n\n\"Hello, Mr. Sleepyhead~!\" Matt heard Janice's lovely voice coo in his ear.\n\nMatt's eyes flew open, he suddenly gasped. \"Shit! I overslept!\" he cried, throwing off his covers. \"I'm supposed to have dinner ordered and... and a bath drawn... and candles lit...\"\n\n\"Honey!\" Janice exclaimed. \"Relax! I don't need any of that. I just want you!\"\n\nMatt blinked for a moment and then fell into her arms where they embraced, tightly.\n\n\"I missed you so much today, baby.\" Matt said, kissing her neck.\n\n\"Oh my god, I've missed you too, honey.\" Janice breathed. \"You were on my mind all day.\"\n\n\"Oh shit!\" Matt exclaimed, suddenly remembering. \"How did it go? Did you win the Best Booth award?\"\n\nJanice chuckled and gave Matt a bright smile. \"We sure did!\"\n\n\"Holy shit!! Congratulations!\" Matt cried, tightening his embrace. Janice clutched his body, lovingly.\n\n\"We'll make room for your trophy on the living room bookshelf!\" Matt said, excitedly. \"How big is it?\"\n\nJanice hesitated. \"I... uhhh... I let Bruce have it. He's the one that actually deserves it, after all.\"\n\n\"Oh!\" Matt said, blinking in contemplation. \"That was an awfully decent thing to do.\"\n\n\"Thanks. I thought it was only fair; the booth really was fantastic.\" Janice smiled. \"Besides, the only trophy I want for showing my boobies off is your hard cock dousing me in cum!\"\n\n\"You win that award every day!\" Matt chuckled.\n\n\"And it's the greatest prize in the world!\" Janice squealed.\n\nJanice pressed her lips lovingly against Matt's. He met her lustful onslaught with ready passion as their tongues curled around each other.\n\n\"Mmm!\" Janice cried. \"Get me out of this fucking dress!\"\n\n\"Oh, fuck yes!\" Matt growled, yanking her dress open, letting her gorgeous, bra clad breasts free. The cloth dress was pulled down, over her shoulders, down to her hips. Janice moaned, feeling Matt's hand reach up her back and undo the five hooks of her brassiere with a single flick.\n\n\"You're getting really good at that!\" Janice chuckled softly.\n\n\"Practice makes perfect.\" Matt smiled.\n\nThe dress and undergarments were laying in a pile on the carpet before long. Janice pawed at Matt's shorts, pulling them down as she allowed his lips access to her erect nipples.\n\nHis face was submerged in blissful softness as her massive breasts pressed down upon him. Matt's tongue found her erect nub of a nipple and closed his lips around her areola, sucking with a passionate moan.\n\nJanice, completely nude, pushed Matt onto his back upon the bed covers and climbed on top of him, straddling his waist. His erect, throbbing cock was being bathed in the moistness of her wet pussy.\n\n\"Just slide it in, baby!\" Janice moaned. \"I've been pining for this cock all day!\"\n\nHe felt he hips shift before a tight, gripping friction surrounded his penis head. Stubborn resistance made the progress slow, but little by little, Matt's entire cock was finally buried to the hilt within Janice's quivering vagina.\n\n\"Oh fuck... this is the best pain in the world!\" she exclaimed, wincing.\n\n\"You want me to go slow, baby?\"\n\n\"I don't want you to do anything!\" she breathed. \"You just lay back and let momma drive!\"\n\nAn excited smile spread over Matt's visage before he felt her hips shifting on top of him. Soon, Janice was slamming her twat onto his cock in a rapid tempo, impaling herself on his girth gifted phallus.\n\n\"OH! FUCK!!! YES!!!! YES!!! YES!!!\" Janice cried at the top of her lungs.\n\nAll Matt could do was hold on tight. His senses were nearly overwhelmed by the forceful thrusting his girlfriend was employing on his erect dick and the gargantuan swinging mammaries rollicking wildly, striking his face repeatedly.\n\n\"I'm cumming so hard right now!\" Janice squealed as she continued to bounce her hips.\n\n\"Oh god...\" (slap) \"I fucking\" (slap) \"love you so-\" (slap) \"MUCH!\" Matt managed to say between his billowing soft pummeling.\n\n\"I love YOU so much!\" she cried in response.\n\nMatt's lasting power had been boosted by his frequent masturbation sessions during the long, boring day, so Janice was able to have five more fierce orgasms before he felt his balls begin their ejaculation sequence. He embraced her sweat damp body against his as he thrusted his cock forward.\n\n\"Oh fff- UHHG!\" Matt croaked out, feeling the exquisite sensation of his sperm launching forward into Janice's warm womb. The expansion Janice felt within her from his orgasm triggered one final climax from her as well.\n\n\"Oh my GOD!\" she screamed, arching her back, hands clutching her face in disbelief.\n\nAfter the massive wave of pleasure had washed over them both, Janice crumpled to the bed beside Matt's sweaty body.\n\n\"Fuck me! Can it possibly get any better?\" Janice chuckled, catching her breath.\n\n\"I promise...\" Matt replied. \"We're going to find that out together.\""
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "huge boobs",
        "big tits",
        "enormous breasts",
        "slow burn"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-24"
}