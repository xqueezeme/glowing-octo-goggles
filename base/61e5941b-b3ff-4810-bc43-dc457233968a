{
    "title": "Jill's World Ch. 04",
    "pages": [
        "I had trouble falling asleep again. \n\nFirst, images of Courtney, mocking me as I undressed and climbed onto the desk during lunch.\n\nThen, thoughts of Rebecca, how to end this enemy relationship.\n\nAnd of course, my freedom. I could wear anything I wanted tomorrow. I belonged to nobody. Such a thrill. \n\nAnd Jill. \n\nWhy was I even considering it? \n\nWhat was wrong with me?\n\nI could go back to being just Carrie, a normal senior. No more beatings. No more humiliations. No more Jill and her band of miscreants.\n\nBut, something about her. About the way she cared about me from the very start. \n\nShe is a grown woman. She has Sue. She apparently has a lot of friends who would do anything for her. She has money apparently. Power, definitely. She had a judge at her house! And a state legislator too!\n\nAnd they saw me naked. They ate food off my body and the judge mercilessly fucked my throat. And she beat me with that dreadful cane.\n\nAnd she made me cum so hard.\n\nAnd then there was Julie...\n\nAnd on that thought... I fell asleep finally\n\nIt was not a very restful sleep.\n\nI woke up from a dream of Courtney feeding me grapes one at a time while I lay naked on the desk in the classroom. Except the classroom was full of students and my legs were spread wide towards them. And I had to beg for each grape and thank here when it popped into my mouth. And each time she would giggle in her Courtney way and there was a river of juice flowing from my cunt, onto the desk and down to the floor. And everyone mocked me.\n\nMy sheets were wet. My nightshirt was very wet. My panties were saturated. I needed to cum badly.\n\nThere were messages on my phone. It was weird how much I ignored my phone lately. But, I had to be fast. I had unfinished homework before driving to pick up Julie.\n\nKAREN: YOU COULD LET A GIRL KNOW IF HER PLANS FOR SATURDAY ARE FALLING THROUGH \ud83d\ude0a\n\nThat was around 6. Two hours later:\n\nKAREN: SERIOUSLY CARRIE, ARE WE ON FOR SATURDAY?\n\nSARA: WHATCHA DOIN? WE NEED A TRIP TO THE MALL ASAP! \n\nMOM: CARRIE, I MISS YOU, COULD YOU COME BY THIS WEEKEND FOR A VISIT?\n\nJULIE: I WOKE UP IN THE MIDDLE OF THE NIGHT. DID YOU DECIDE YET? SEE YOU IN THE AM I'M PROBABLY AS APPREHENSIVE ABOUT YOUR DECISION AS YOU ARE\n\nI opened the Farin folder out of morbid curiosity. It was bad. 247 messages. The very last one said \"I love you\".\n\nI responded to a few.\n\nTO JULIE: GIVE ME THREE REASONS WHY I SHOULD SUBMIT TO JILL AND THREE REASONS WHY I SHOULDN'T... PLEASE...\n\nTO MOM: I HAVE A JOB NOW. I WILL SEE WHEN I CAN MAKE IT AND LET YOU KNOW. LOVE YOU \n\nTO SARA: SO SORRY I MISSED THIS. I HAVE THIS PROJECT FOR SCHOOL AND IT COINCIDENTALLY NEEDS A TRIP TO THE MALL TONIGHT? SAY 8:00? SEE YOU IN A BIT\n\nTO COURTNEY: I HATE YOU\n\nI threw on a fresh night shirt and ran downstairs to catch my Dad before he left for work. \"Dad, can I have some friends sleep over Friday night and go to the movies Saturday night?\"\n\nHe was sipping his coffee and chatting with Kelly as she drank her own cup. He looked up. \"I ... who is sleeping over?\"\n\nI laughed. \"My friends, Julie and Courtney. Thanks Dad\" I gave him a kiss on the cheek. \"You are the best. Saturday night movie okay? I will come home right after. Sorry, to be so scarcely here, I just have a lot of people to make up time with. Also, was going to go to the mall tonight with my friends Cat, Sara, Jen and Gina if that's okay, I won't be late, and it is for a project at school. And some shopping, but pretty much just window shopping unless you want to lend me money on my first paycheck.\"\n\nHe chuckled. \"Anything else social butterfly?\" He handed me two twenty dollar bills and I kissed his cheek again and hugged him careful not to spill his coffee.\n\n\"Thursday... Mrs. Lane wants me to go to a group therapy session at 6. I will have to cut work early to go, but my boss said it is okay. I imagine it would be no more than an hour, so probably getting home the same time as usual. But, heads up in case I'm late.\"\n\n\"Is there a night you aren't booked?\" Kelly giggled. \"We still need to go shopping at Abercrombie.\" She smiled at me with a dance in her eyes. \n\n\"Sunday? I don't think I am working Sundays.\" I answered.\n\nDad looked surprised at this. \"You don't think you are? Carrie, you need to figure out your work schedule. Organization is important. You need to make time for family, friends, work, school and you. Not necessarily in that order. I know you are in a rough place with the break up, so I will allow it this week, but I need to see you a little more often. And I need to see you doing homework and studying a bit more often as well.\"\n\n\"I understand. I'm sorry. Things are a bit ... crazy.\" I kissed him one more time. \"Thanks Dad, you are the best.\"\n\nAnd I ran upstairs. \n\nTO KAREN: I WILL PICK YOU UP AT 9 I CAN COME EARLIER IF YOU WANT TO CATCH AN EARLIER MOVIE\n\nAnd I had replies already...\n\nCOURTNEY: DREAMT ABOUT ME DIDN'T YOU SLUT? YOU WANT MY INPUT ON JILL? WE CAN CHAT OVER LUNCH SLUTBALL\n\nJULIE: YOU LOVE IT\n\nJULIE: I LOVE IT\n\nJULIE: ART\n\nJULIE: BEATINGS, BUT THEY WILL BE LESS FREQUENT \n\nJULIE: TIME COMMITMENT\n\nJULIE: ORGASM DENIAL\n\nJULIE: IF YOU WANT MY OPINION I WILL GIVE IT TO YOU\n\nJULIE: IF YOU DON'T I WON'T\n\nJULIE: SEE YOU SOON\n\nJULIE: FRIDAY NIGHT?\n\nJULIE: DATE WITH KAREN?\n\nTO JULIE: I WANT YOUR OPINION I VALUE IT\n\nTO JULIE: YES WE ARE ON FOR FRIDAY NIGHT \n\nTO JULIE: UGH YES I AM GOING OUT WITH KAREN SATURDAY\n\nTO JULIE: YOU SURE YOU WANT ME DATING KAREN? IT FEELS WEIRD\n\nDING... NEW MESSAGE\n\nKAREN: WANT TO GO TO DINNER FIRST? \n\nTO KAREN: NO I WON'T HAVE ROOM FOR POPCORN :D\n\nDING... NEW MESSAGE\n\nJULIE: YES I WANT YOU TO DATE KAREN AND I WANT IT TO BE PUBLIC\n\nTO JULIE: WHY? I DON'T LIKE THE SCHOOL LESBIAN REPUTATION YOU KNOW THAT\n\nJULIE: I HAVE MY REASONS \n\nJULIE: ITS NOT LIKE I OWN YOU YOU ASKED HOW I FELT I TOLD YOU\n\nKAREN: HOW ABOUT WE JUST GET A PIZZA FIRST AT THE MALL?\n\nTO KAREN: SURE\n\nAnd I was out of time. I did a few quick bits of homework and jumped in the shower. I made it fast, but not cold like I probably should have. After yesterday and last night's dreams, I was a sexually frustrated mess. Some light make-up and I put on my white bra and white bikini panties. \n\nIt sucked that I still didn't have any good winter clothes and it was getting cold in the mornings and evenings. I pulled on the same ripped jeans as yesterday and a too tight t shirt with 'peanut butter jelly time' on it.\n\nDownstairs, I grabbed a banana and a glass of milk and sat with Kelly while I ate.\n\n\"Busy life huh? You seem very popular since you broke up.\" Kelly smiled at me.\n\n\"Well, I kind of let my relationship with Farin interfere with time with my friends, so we are making up for lost time.\" I grinned.\n\n\"I meant the smell of pussy on your breath last night Carrie.\" Kelly giggled. \"I'm surprised your dad didn't say anything about it, but I think it embarrassed him too much.\"\n\nI blushed and hid my face in my hands in embarrassment.\n\n\"He didn't say anything to me. But it was pretty strong, the smell.\" Kelly added. \"Want to talk about it?\"\n\n\"Please let me wake up. This must be a bad dream.\" I muttered as I hid my face.\n\nKelly laughed softly. \"Carrie, it's okay. Sorry I mentioned it. Keep these in your car from now on.\" She put a container of Breathsavers on the table.\n\n\"Thanks\" I mumbled into my hands, still unable to look her in the eye.\n\n\"I really didn't mean to embarrass you. And I get that it might be weird to talk to me about it. But, I'm here for you if you change your mind. I did a lot of crazy stuff in college, you probably couldn't surprise me at all.\" And she touched my arm gently and got up for another cup of coffee.\n\n\"Thanks Kelly. I'm fine really. I'm just not there yet, to be comfortable talking to you about sex.\" I lifted my head and she was just smiling at me.\n\n\"What?\" I asked when she wiped a tear from her eye.\n\n\"You said yet.\" She smiled.\n\nI laughed. \"You aren't a monster Kelly. I like you.\"\n\n\"I'm glad Carrie, truly I am. You best get going to school if you are picking up your friend Julie.\" \n\nAnd I hugged her hard before I left. \n\nQuick phone check.\n\nKAREN: GREAT, PICK ME UP AT 7:30, MOVIE STARTS AT 9:20 THAT WILL GIVE US SOME TIME TO TALK\n\nThe drive wasn't bad. I made good time to Julie's house. I went to get out to knock at her door when she came bounding down the steps and climbed in the car, throwing her bookbag in the back. She was wearing tights and a long shirt that covered half her butt. She has really nice legs. Well, let's face it, she has that tight gymnast body that I wished I had. Plus, she was gorgeous in the face. \n\n\"Good morning slutball? Or Carrie?\" Julie giggled as she buckled up.\n\n\"Very funny. I haven't decided.\" I backed out and we were headed to school.\n\n\"So? Are you leaning one way or the other?\" Julie pushed.\n\n\"Fine. Go ahead, what's your opinion. And why.\" I said with an exasperated voice. But the exasperation was a mask, I wanted to hear her opinion.\n\n\"Just do it Carrie.\" She said. And I wasn't surprised. \n\n\"You love it. Jill will be nice to you I think. Plus, I get to have sex every day after school without cheating on Chad.\" She giggled.\n\n\"Umm Julie, it's still cheating.\" I said.\n\n\"Not really. No other guys involved.\" She added.\n\n\"So, you'd be okay if Chad started fucking some guy from the football team after school?\" I asked.\n\n\"Carrie, that is different and it's not cheating. It's ... experimenting.\" Julie giggled.\n\n\"Sell your story somewhere else, I ain't buying it.\" I laughed.\n\n\"Okay, seriously though, Jill makes you so happy Carrie. And I get to see you every day. And ... well... we are both learning so much about ourselves don't you think?\" Julie expanded. \"And the art alone would be worth a few spankings don't you think?\"\n\nI sighed. \"I've just... been waiting so long Jules.\"\n\nShe touched my hand with hers. \"I know Care Bear. So, quit. You will never hear me complain, I promise you. I want you to be happy. If this really doesn't make you happy, I don't want you to do it.\"\n\n\"Happy? Do you really think it makes me happy?\" I asked.\n\nJulie laughed. \"Yes I do. I've never seen anyone get so... aroused. Do you think that's normal? Do you think I ever have that much juice dripping out of my pussy? I mean seriously girl. You have something wired in you that just makes you so... irresistibly desirable. I never, ever thought in a million years I would want to lick a pussy before you. You make me so horny, I want to rip your clothes off and just make you eat me all day. I masturbated all night last night thinking about how you couldn't, because you were told not to. I came so many times I passed out from it. I'm wet almost constantly since Sunday. I look forward to whatever Jill has in store for you today and tomorrow and every day until we go away to college.\"\n\n\"You want to cum so bad, it must hurt. And yet, I bet you didn't even consider cheating and doing it. You probably soaked your bed last night wanting to, but you didn't do it. You have no idea how sexy that is to me. To a lot of people, evidently. And watching you do the things she makes you do. Eating like a dog. Naked in front of everyone all the time. Positioning yourself for spankings and sex. I get so excited thinking about what she will have you do next.\"\n\n\"I even think of my own ... \" She stopped suddenly and looked at me. \"Wow. I'm sorry Carrie. I got ... I'm sorry.\"\n\nI was crying. It took her that long to see it.\n\n\"Oh baby. Please don't cry. I'm sorry Carrie. Quit. Forget what I just said please. Our friendship is much more important than this.\" Julie held my hand. I wiped my tears quickly with my steering hand.\n\n\"It's not your fault Jules.\" I said with a pathetic voice. \"I know how it must look. I'd probably feel the same way if it wasn't me that was such a freak. I'm so disgusting.\"\n\n\"Oh my GOD Carrie! You are not disgusting! You are beautiful. So absolutely beautiful! Pull the car over please.\" Julie practically screamed.\n\nI pulled over, getting a few honks from the car behind me to the shoulder and reached for some tissue from the glove compartment. She was right, this was dangerous, driving with tear filled eyes. But when I reached over she grabbed me firmly with her hands on the sides of my head and pulled me in and kissed me right on the lips. Not a friend kiss. Not a peck. She kissed me like... a girlfriend.\n\nHer tongue didn't drive into my mouth, it just kind of danced just inside my lips. Her lips didn't suck mine, they sort of held them with a soft pressure. And we made out. Right there on the side of the road for the whole world to see, Carrie Fitch and Julie Petrili kissed passionately. It was ... overwhelming.\n\nHow long we kissed, I'm not sure. What I am certain of, is that we were both panting for breath when we finally broke free from one another.\n\nShe was looking away from me then. \"I love you Carrie. I'm not ready to be a couple. But I really think I love you.\" She said it almost in a whisper.\n\n\"I love you too, Jules.\" I answered her. \n\nShe turned back to face me with tears in her eyes. \"Drive. We are late for school.\" She smiled, and reached in and handed me a kleenex from the glove compartment and took one for herself.\n\nI wiped my eyes. They were a mess. My mascara was everywhere. I looked over at Julie, who wasn't fairing much better. I giggled, and we started laughing as we took each other's hand and squeezed it tightly.\n\n\"We could ditch school.\" I suggested as I checked the oncoming traffic before pulling back onto the road.\n\n\"No, we really can't. You are falling behind on your work and I ... have something to take care of.\" Julie answered.\n\n\"Well that is cryptic.\" I laughed.\n\n\"It's meant to be.\" Julie laughed back.\n\nWe pulled into the school parking lot with a minute to spare. I may have exceeded the speed limit just a bit. Cat, Jen, Gina and Sara were all waiting for us. We got out and exchanged morning hugs. I apologized for being late. They said it was going down today. \n\n\"What's going down today?\" I asked.\n\nSara blushed. \"Well, I kind of took the initiative.\"\n\nCat laughed. \"Kind of?\"\n\nI looked puzzled, as did Julie. \"What did you do?\" I asked.\n\n\"I ...\" she looked at Julie apologetically. \"I'm sorry Julie, you know we still love you. I kind of ...\" she trailed off and stopped talking.\n\nJen finished for her. \"She put icy hot in the cheer uniforms. Not yours Julie, or Courtney's if we had the right locker, but everyone else.\"\n\nI frowned. \"This is going to escalate things.\"\n\nGina laughed. \"You think?\"\n\n\"I ...\" I shook my head. \"Julie, maybe you should warn the others.\"\n\nCat grumbled under her breath.\n\n\"What?!\" Jen broke in. \"Carrie, I thought you of all people would be proud of her!\"\n\nSara bit her lip.\n\n\"I... am. Sara, that was a great idea, really. It's just... today wasn't the ideal day for me. Sorry, being a little self-centered.\" I gave her a hug.\n\nJulie laughed. \"Well, thanks for looking out for me. But you know, they are going to know it was you when you didn't do mine. I'm not complaining, just watch your backs. I will let you know if I hear anything.\"\n\nAnd we all walked in together, congratulating Sara. And to be honest, I was glad I didn't do it. I still had my thought about sabotaging Rebecca's spanks, but it could wait. We didn't have a lot of time, and soon were separating to our various lockers. \n\nJulie and I walked into Miss Galler's class together to see Farin and Rebecca arguing in hushed voices in the back of the classroom. When they saw Julie and me walk in, they glared at me for a moment and leaned into argue in even more hushed voices than before.\n\n\"Be careful.\" Julie whispered and tugged me over to my desk.\n\n\"Just stay the hell out of it then.\" Farin growled at Rebecca and the next thing I knew, she was sitting next to me staring at me like she wanted to rip my face off.\n\n\"So, you gonna work your way through all the cheerleaders Carrie?\" Farin spat at me.\n\nI looked at her... and sighed... and I took her hand in mine. \"Come on Farin. You know me better than that.\"\n\nShe ripped her hand away. \"I don't think I knew you at all.\"\n\n\"Farin, please?\" I frowned, but she wasn't going to get under my skin with this anger act.\n\n\"Fuck you Carrie Fitch.\" She spat at me and moved to a seat in the back.\n\n\"See?\" Julie giggled. \"You make everyone around you crazy.\"\n\n\"Not funny.\" I whispered. I dared to look behind me to see Farin and Rebecca whispering to each other. Farin glaring at me with hate in her eyes. Rebecca looking exasperated with her friend and also looking at me with hate in her eyes.\n\n\"Just give Karen something to brag about Saturday night.\" Julie laughed softly.\n\n\"Julie, what is wrong with you?\" I asked her, stunned by her attitude.\n\nJulie stopped laughing and looked at me hard. \"Do you still have feelings for Farin?\" She asked with a frown on her pretty lips.\n\n\"No. But, I care about her enough to not want to see her acting like this.\" I whispered as the bell rang.\n\n\"You are too nice sometimes Care Bear.\" Julie whispered back. \"She's just trying to get your attention, maybe a sympathy fuck. I'm not saying she isn't hurting inside, but she's playing you.\"\n\nI looked at her, wrinkling my nose in distaste for what she said. Then lightened my visage and sighed. \"You are probably right. On both accounts.\" I smiled weakly and leaned my head against her shoulder. She patted my head softly and smiled.\n\nMiss Galler looked up from her desk and shook her head.\n\n\"Rough drafts by Monday morning, class. Now, let's discuss the intricacies of adverbs.\"\n\nI could feel the daggers in the back of my head all through class, but I didn't look back again. When English was over, Julie walked with me a short way down the hall until she had to veer off to her next class. I approached Mr. Thatch's classroom with a sense of dread.\n\nCourtney would be there. As unpleasant a prospect as that was, she would keep Farin away from me, I supposed.\n\nI beat Farin and Rebecca there thankfully and went straight to my desk. A few seconds later, Courtney bounced in with a smirk on her face. She sat right up next to me and leaned in to whisper in my ear. \"So, tell me about the dream, I really want to hear it.\"\n\n\"No.\" I whispered back.\n\nCourtney giggled. \"It must have been really good.\"\n\n\"Hey Courtney\" Rebecca greeted her as she walked in. She just kind of glared at me a moment before sitting behind me.\n\n\"I think she secretly is crushing on you and doesn't know how to handle it.\" Courtney giggled to me.\n\nFarin walked in a moment later, staring daggers at me. \"Fucking cunt.\" She mumbled and sat somewhere behind me.\n\n\"That was a bit harsh.\" Courtney chirped. \"That girl is such an emotional roller coaster. I love her, I hate her, I want to be her friend... She just can't stay on a path.\" She looked at the misery on my face. \"Carrie, as a friend for five seconds, Farin was not healthy for you. She's not healthy for anyone. She really needs some medication to even her out.\"\n\nI looked at Courtney with a raised eyebrow. That may have been the first time Courtney ever talked to me like a friend. She laughed at the look I gave her.\n\n\"Don't worry,\" she leaned in to whisper into my ear, \"you'll always be a little slutball to me.\"\n\nI rolled my eyes and Courtney giggled.\n\n\"She is such a slut.\" Farin said loud enough for the whole class to hear.\n\nI cringed.\n\nCourtney smiled. \"Did that make you wet?\" She leaned in and whispered in my ear.\n\n\"No.\" I whispered back.\n\nCourtney giggled, still leaning in, her breath hot on my earlobe. \"Can I check?\"\n\nI slammed my knees together. \"No!\" I whispered.\n\n\"Okay slutball, it can be your little secret.\" She whispered. \"Do you want my opinion on your big decision today?\"\n\nI blushed. The vision of being naked on that desk jolted me. \"If you want to tell me now, yes.\" I whispered.",
        "Courtney laughed. \"No Slutball, you know when, where, and how you will be.\"\n\nI leaned back away from her. \"Then no.\"\n\n\"We'll see.\" Courtney smiled and turned her knees to face me, spreading them to give me access to play with her pussy.\n\nAnother eye roll. Another giggle from Courtney. I reached out and brushed her inner thigh with my fingertips and then withdrew them with a giggle of my own. I can tease too.\n\nI turned my attention to the boring teacher. Math, is there anything less interesting in the world? Then I was interrupted by the sound and peripheral sight of movement from Courtney. I looked over without moving my head. What I saw made me gasp and look quickly around the classroom to see if anyone was watching her. \n\nCourtney Covington was removing her panties from under her skirt! I could barely believe her audacity. She lifted her ass, tugged them to her knees then slid them down her legs and off her feet. She winked at me and handed them to me. \"Hold these for me until lunch time.\" She whispered and placed her panties in my hand.\n\nI was going to drop them, but was too embarrassed by the prospect of a pair of panties appearing on the floor between us. So, I put them in my pocket as discreetly as possible and blushed all over.\n\nShe turned her torso again so her legs were facing me and lifted the hem of her skirt so I could see her beautiful pussy. I looked away, biting my lip. She was so... flagrant! Then she took my hand and I pulled it away. \n\n\"Please, just a little?\" She giggled a bit too loud.\n\nI ignored her and listened to Mr. Thatch droning on. \n\nShe reached out and took my hand again in both of hers. I sighed loudly. Courtney giggled and pulled my hand between her knees. Then she pressed my palm against her lower thigh and let go. I looked over to see her smiling at me.\n\n\"Fine.\" I muttered. I don't know why I did it. But I scooted over a little in my chair and slid my hand up and gently caressed her wet pussy for the remainder of the class. I played with her lips, circled her clit with the pad of my index finger, I even did a little insertion. Nothing to bring her off. I just teased her pussy for the next forty minutes, rewarded by her girl juice on my finger.\n\nWhen class was over, I automatically licked my fingers clean, without even being instructed to do so. I packed up my bags and dared to look at her. She was all smiles. She leaned in and whispered to keep her panties safe until after lunch when I could put them back on her.\n\nI just rolled my eyes and we parted ways. Farin was glaring at me, when I dared to dart my eyes back to where she was sitting with Rebecca. Rebecca just laughed at me, clearly having witnessed what I did with Courtney. She held up a piece of paper with SLUT in huge red block letters.\n\nI turned and walked quickly into the hall towards third period. Farin would be behind me, but Julie would be there. I walked in and saw Julie looking upset, quickly waving me towards her. I practically ran the short distance to her and asked her what was wrong.\n\nShe showed me her phone:\n\nREBECCA: YOUR FRIEND IS SERIOUSLY THE MOST DISGUSTING SLUT\n\nREBECCA: LOOK AT HER\n\nREBECCA: (VIDEO CLIP OF MY HAND BETWEEN COURTNEY'S LEGS)\n\nREBECCA: I THINK IT'S CLEAN ENOUGH FOR YOU TUBE\n\nREBECCA: TELL YOUR DUMB SLUT FRIEND SHE IS ABOUT TO BE FAMOUS\n\nI gasped. It was a very clear video. You couldn't really see anything, except that my hand was clearly up Courtney's skirt. \"Shit!\" I exclaimed, a bit too loud.\n\n\"Why can't you...\" Julie trailed off and put her phone away.\n\nI looked up at her with a pathetically sad face. \"Be normal?\" I finished her question for her.\n\n\"I wish I knew Jules.\" I sunk into my chair.\n\nJulie started texting feverishly, her fingers flying on her phone. I could see the anger in her face as she texted back and forth, I assume with Rebecca.\n\n\"Fucking bitch.\" Julie muttered under her breath. \"She wants you to meet her after gym class today.\"\n\n\"Whatever. I'm such an idiot. I will.\" I sighed.\n\nJulie exhaled loudly. \"You have got to get some control Care...\"\n\n\"I know Jules.\" I said angrily. Then, I looked at her sadly. \"I'm sorry, I really am.\"\n\nShe held my hand and squeezed it reassuringly. I gave her a weak smile.\n\nAnd sure, I felt Farin staring at me, but class was at least devoid of my use by anyone. Julie and I texted back and forth under the table about Rebecca and Farin and then, mostly about Jill. And I was still undecided. \n\nFourth period brought Biology and discussions about photosynthesis. Boring perhaps, but another opportunity to text Julie under the desk. \n\nJULIE: HOW COME YOU NEVER FINGER ME DURING CLASS? LOL\n\nTO JULIE: TURN YOUR CUTE ASS THIS WAY AND I WILL RIGHT NOW\n\nJULIE: AND YOU LEARNED NOTHING\n\nTO JULIE: REBECCA'S NOT HERE\n\nJULIE: FARIN IS\n\nTO JULIE: YOU GOING TO LET ME PLAY WITH YOUR PUSSY OR NOT?\n\nJULIE: IT IS EXHAUSTING BEING YOUR BEST FRIEND\n\nTO JULIE: I KNOW \n\nJULIE: DECIDE ANYTHING YET?\n\nTO JULIE: NO I'M WAITING FOR DIVINE INTERVENTION\n\nJULIE: LOL LET ME KNOW HOW THAT GOES FOR YOU\n\nTO JULIE: I WAS HOPING YOU WOULD BE MY DIVINE INTERVENTION\n\nJULIE: I CAN'T ... YOU NEED AN IMPARTIAL THIRD PARTY\n\nJULIE: THIS IS GOING TO SOUND WARPED BUT ASK FARIN\n\nTO JULIE: YOU BETTER BE JOKING\n\nBut her face said she was not.\n\nJULIE: IF SHE SAYS YES, YOU KNOW IT'S THE RIGHT THING TO DO THOUGH\n\nTO JULIE: SHE HATES ME TODAY, SHE'D SAY YES JUST TO PUNISH ME\n\nJULIE: YOU WANT SOMEONE TO TELL YOU YES CARRIE I WANT TO TELL YOU YES, BUT THEN IF YOU DECIDE LATER IT WAS A BAD IDEA YOU WILL BLAME ME SO I CANNOT TELL YOU WHAT TO DO\n\nJULIE: PUT ON YOUR BIG GIRL PANTIES AND DECIDE\n\nTO JULIE: I WOULD NEVER BLAME YOU BUT YOU ARE RIGHT I NEED TO DECIDE ON MY OWN\n\nJULIE: SO STOP ASKING\n\nI looked at her. She was smiling. I reached over and squeezed her hand.\n\nWe walked to lunch together and she didn't even hesitate. She walked over to the table where Cat, Jen, Sara and Gina were waiting for me. We sat down and started talking about school, a little bit about boys, though I noticed some looks aimed in my direction since my 'outing' as a lesbian. \n\nWe were having a nice lunch... for about five minutes. Then Julie looked at her phone and frowned.\n\nShe nodded towards my phone, which is silenced of course because I don't typically check it during school. \n\nREBECCA: JULIE NEEDS TO SIT AT MY TABLE OR THE VIDEO GOES VIRAL\n\nREBECCA: I JUST TEXTED HER THE SAME THING\n\nTO REBECCA: YOU AREN'T BLACKMAILING MY LIFE AGAIN OVER THAT VIDEO YOU CAN'T EVEN SEE ANYTHING REALLY\n\nREBECCA: (ATTACHMENT: PICTURE OF JULIE ONLY IN HER PANTIES PUTTING ON HER CHEER OUTFIT)\n\nREBECCA: I HAVE A LOT MORE \n\nI looked over at Julie. Same frown on her cute face. \"Just go for now Jules. But don't let her make you do anything you don't want to do.\"\n\nJulie slapped my face as a tear trickled down her cheek. Then she caressed the slight pink from the slap. \"If it goes to fists, you got my back right?\" \n\nI smiled at her and she smiled back. \"You know I do.\"\n\nThe other girls looked at us puzzled through this whole exchange. \"Sorry girls, I have to go appease the queen. Let's do something this weekend? The six of us? I miss you guys so much.\"\n\n\"Of course!\" Jen spoke up. \"We miss you too.\"\n\n\"I'll pour my juice on her head if it helps.\" Gina offered, being quite serious.\n\nJulie leaned in close. \"I think that this afternoon's uniform incident will be sufficient. Thanks for offering though.\"\n\nAnd Julie excused herself and went over to sit at the 'cheer table'.\n\n\"Rebecca is getting bad again.\" I muttered when they all looked to me for explanation. \"I'm going to have to come up with something permanent to get her out of my life.\"\n\n\"Well, you want ideas or help, you know we are in.\" Sara smiled.\n\nI smiled widely at all of them. \"You guys are the best. I'm so sorry I let all that cheerleader stuff interfere with us. So, who's got a date for homecoming?\"\n\n\"Glad you asked!\" Gina smiled. \"I'm going with Vince, he asked me last Friday.\"\n\nAnd we talked about homecoming for the next thirty minutes and it never dawned on me that I was supposed to be eating lunch ... with Courtney ... naked ... on a desk ... in an empty classroom.\n\nWhen they asked me, I told them I wasn't dating anyone at the moment. That broke into the search for details on my lesbianism and my dating Farin and the subsequent ugly break up. I lied very well. I did find out that when my homosexuality was becoming a fact of the school, that they had been apprehensive, then a little homo-phobic about the whole thing. So, they felt a little guilty about our parting of ways over the past couple weeks.\n\nI assured them it was fine, and I wasn't even sure I wasn't bisexual at least. Which seemed to relieve them all. We started talking about going in on a stretch limo and Gina agreed to price it out and see if it was affordable. We would definitely need one for senior prom!\n\nI looked over at the cheer table often. Julie was originally arguing with Rebecca in hushed voices. I could see that. Then she pointedly sat at the other side of the table. Then she was laughing and talking with the twins Allison and Addison, April and Britney. I felt a twinge of jealousy, but shook it off. She deserved happiness. I was the one who kept jeopardizing it.\n\nBut, that also made it easier for me to enjoy my lunch with Jen, Cat, Gina and Sara. We made plans for me to pick them up at Cat's house at 7:30 and go to the mall for an hour. I told them about my project in art class and they all agreed to help, so we could get to the dress shopping portion of the evening.\n\nThen lunch was over, and we all hugged and walked out the doors together and separated as we headed to our lockers. When I approached my locker, I realized my mistake at once. There was a Courtney Covington standing in front of my locker. She was smiling. \n\n\"Forget something?\" She asked, nodding her eyes towards the pocket that held her panties.\n\n\"I...\" I blushed and frowned. \"Where?\" I asked. Clearly, she wanted me to put them back on her.\n\n\"Right here, right now.\" She grinned.\n\n\"Oh, come on Courtney. You can't be serious.\" I exclaimed. \"Let's go to the bathroom.\"\n\n\"No time. Now Slutball, before I start raising my voice.\" She giggled.\n\nThe hall was full of students. I trembled hard and Courtney saw it and just smiled at me. \n\nI pulled the panties out of my pocket and held them balled up in my hand so nobody would see them. Then, I leaned in and whispered to Courtney, \"Please don't make this any more embarrassing than it already is.\" And I knelt down and took her ankle in my hand and gently applied pressure, so she would lift her left foot. \n\nCourtney smiled at me. \"You know your place.\" She giggled and lifted her foot. I quickly opened the panty and made sure it was inside in and facing the right direction and slipped her foot into the left foot. Then I switched to the right and duplicated the lift and pulled that leg of the pink panty into place.\n\nI was shaking so much, I was having trouble pulling them up. I knew I was being watched. I heard the laughter, the whispers, the words, 'slut' and 'lesbo' among them. Though, it might have just been in my mind. I slid them up her athletic legs and over her thighs, careful to let her skirt hang and not show her ass off to the live audience we now had. Reaching under her skirt, I pulled the panty up over her ass, and into place over her hips. I quickly stood up. \n\n\"Good girl.\" Courtney smiled at me and gave me a quick kiss on the lips and walked off as if half the hall wasn't standing still watching while I turned to my locker and shoved my head inside to hide.\n\nBut, there was no time to hide. I grabbed my books for the afternoon and turned. My face was red with humiliation as I walked through the whispers and the giggles and walked quickly to Spanish class.\n\nSpanish with Julie was stressed. Next class was gym and she told me not to do anything for that bitch. And I told her not to do anything for that bitch either. And we laughed at how we protected each other so much, realizing that was the weakness she was exploiting. Weakness? No, it was a strength. It made us stronger than her. \n\nGym was volleyball still, which put my tiny 5'1\" height at a super disadvantage for spiking, but I was decent with a bump or set, so I guess I was getting the hang of this game. At least Miss Nichols thought so.\n\nThen, it was over. And I headed to the locker room to see what that bitch Rebecca wanted for her stupid video. I guess I should explain the lay out of the locker room a little, so it makes sense. From the hall, you walked into the lockers. Rows and rows of lockers, three high, with benches mounted to the ground in between them. To the right was the big open communal shower room. Past the lockers to the left was a restroom, toilets in stalls and sinks and mirrors. And just past that was the door to the gymnasium.\n\nRebecca and I were meeting in the handicap stall at the far end of the restroom. So, I was only there a second when she showed up with Farin and Courtney. Farin was still angry with me, I guess because of my date with Karen. Courtney smiled, \"My panties are a bit askew. Could you fix them for me?\"\n\nRebecca smirked. \"So, here we are. Because you can't help yourself, slut.\"\n\n\"What do you want Rebecca?\" I asked.\n\n\"Nothing really.\" She grinned. \"Just a token of your understanding that you are, were and always will be beneath me.\"\n\n\"So, why did you bring Farin and Courtney? Afraid I'd kick your ass?\" I quipped.\n\nShe slapped my face so hard it turned. It was loud, and it stung, but I'd had much worse and I turned my face back to stare at her, not giving her the satisfaction of a sound from my lips. I just smiled. \"Weak.\"\n\n\"Farin needs her pussy licked.\" Rebecca said.\n\n\"She should get a new girlfriend then.\" I answered.\n\n\"She should.\" Rebecca agreed. \"But in the meantime, you will do.\"\n\n\"No.\" I answered, then turned to Farin. \"Sorry Farin, it's not that your pussy isn't delicious and pretty, it's your attitude. I'm not going to have you falling in love with me when you and I are not going to happen. You are beautiful and wonderful. Our circumstances would never allow a good relationship. I'm not blaming you, but we have way too much baggage to be a couple and you can't separate sex from love. I can now. It will do you more damage than good to have me eating your pussy. I do care about you, but I can't date you. I eat lots of pussy, you want it to be special, it would make things worse for you knowing that I am going down on anyone that Jill tells me to go down on.\"\n\nFarin sobbed and nodded her head. \"Fuck you Fitch.\" She turned and left.\n\n\"Okay,\" Rebecca laughed softly. \"I guess that is for the best.\"\n\n\"Courtney is here, because she invited herself when she found out about it. Whether to be included or to speak up for you or to press her own interests, I don't know. I don't much question Courtney's motives, because I don't think she'd ever tell me anyway.\" Rebecca continued.\n\nCourtney giggled. \"I'm always looking out for my best interests Rebecca, you know that. And if your bullshit interferes with my best interests... well, I'll win Becky, I always do.\"\n\nI fought so hard to hide my smile. I think I succeeded. \n\n\"So, what do you want Becky?\" I asked. She hated being called Becky. I couldn't resist. She slapped my face again and I just smiled at her though it stung a lot.\n\n\"I want you to be miserable of course.\" She glared at me. \n\nI rolled my eyes. \"You are so far ahead of me right now on whatever record sheet you are keeping. You did such vile things to me. Why can't you just enjoy winning and leave the loser alone? I'm not going to wallow in misery my entire life, but the things I did haunt me and probably will forever. So, I am miserable right now Rebecca, but I still put on a smile. I still have enjoyable time with my friends when I can, and I will get over the daily self-admonitions and truly enjoy life again, some day.\"\n\nRebecca laughed. \"Oh, Carrie. You are so cute. You haven't even touched misery yet. I want you to see death as a better option than life. I want you so embarrassed by what you are, that you thoroughly despise yourself. I want you friendless, carless, homeless if I can swing it.\"\n\n\"Okay Becky.\" Courtney interjected. \"That is beyond enough. Now you are just sounding insane. You need to see my shrink, seriously.\"\n\nRebecca turned angrily at Courtney. \"I'm not finished Court.\"\n\nThen she turned back to me. \"But that is just fantasy. Like your fantasy of living a normal life when you are a mega-slut. So, in reality, I want the entire school to know that I won. So, you think of a way to make that happen, and I will leave you alone, except when I am reiterating to the school that ...\" She grabbed my neck and squeezed and leaned in, so our eyes were inches apart... \"I WON\".\n\nAnd she turned, and walked away. \n\nCourtney looked at me. I wasn't crying. Rebecca was such a cunt, but she had no emotional hold on me.\n\n\"She's got issues.\" Courtney laughed.\n\nI smiled. \"What the fuck does she want me to do? I mean, I sucked his dick, get over it already.\"\n\nCourtney sighed with a quick frown on her pretty face. \"You don't get it, because you don't live in our world. In ways, I envy you and the other commoners.\" She giggled at her own choice of words. \"You don't have the pressure of trying to be in the public eye constantly and keeping a positive image. Me? I can barely do any wrong. I'm just that far above the vast majority of the school in the aristocracy.\"\n\n\"Rebecca, on the other hand, is beautiful and she worked her ass off to be head cheerleader. This is the pinnacle of her life. She will always, for the rest of her life, look back on high school as the time she was the queen. And you put a smudge on that memory when Brad left her for you. Do you understand?\"\n\n\"Pathetic.\" I mumbled.\n\n\"You are very close minded. And kind of stupid sometimes, if you want my honest opinion.\" Courtney returned.\n\n\"Say again?\" I looked at her, quite insulted.\n\n\"Human nature Care. Okay, picture a perfect day...\" she giggled... \"You and Julie having a picnic at the beach, everything goes perfectly, you are playing in the sun, lotioning each other's bodies, sneaking feels and kisses and the sun sets and it's beautiful and you make love on the beach for the first time and it is the best sex you have ever had. And then a sea gull shits on your head. That memory will forever have the seagull shit tampering with its perfection. You are Rebecca's seagull shit.\"\n\nI laughed at the analogy. Courtney did too.\n\n\"So, I don't think anything will ever appease her. She's so focused on the seagull shit, she can't enjoy the rest of the memory. Believe me, I've tried to get through to her that nobody even remembers the seagull shit anymore. But, in her mind, the entire school is whispering about how the queen lost her man to a commoner, now, long after it happened. Figure a way to make that stop and maybe she will leave you alone. I was serious, she needs counseling, much more than you do.\"\n\n\"Which brings us to you. Even though you didn't show up for lunch like I told you to, I'm going to divulge you with some Courtney advice and you will owe me.\"\n\nI started to interrupt, and Courtney put her finger to my lips to hush. \n\n\"Don't interrupt sweetie. I have my interests at heart, and right now, Jill is in my best interests whether you are there or not. I can find another slut to play with anytime I want. I like you. I prefer you. But, it isn't just about getting my pussy licked or I could line up a half-dozen straight girls to do it.\"\n\n\"So, here is why you should call Jill, Mistress today. She will teach you things about life, about yourself, about so many things that you can't possibly imagine. Do you know there are people who pay exorbitant amounts of money to get what you, Julie and I are getting for free? And so many that beg for the opportunity and are too ugly or old or pathetic to be given the time of day to be taught or even abused?\"",
        "\"And Jill? Amazing! She is so smart and so successful. Did you know she was homeless and broke as a teen? And really, if you are going to learn about it from someone, I can't imagine a better teacher being out there. At least not for you and your proclivities.\"\n\n\"This IS a once in a lifetime opportunity. It is VERY unlikely to arrive again. Not only that but the art thing that you love so much. I mean, damn Carrie, I can't believe you are still debating it!\"\n\n\"And... here is another thing to consider, and really consider what could have happened to you. You are wired different from a lot of people. I know you understand that. What if Rebecca, or someone like her, had discovered it and taken advantage of it? I mean, not like she did, but like she would have if she didn't have Darla and Jill involved? You wouldn't have had a mask. You would still be getting beaten raw every day with no care about your health or mental wellness.\"\n\n\"Jill will help you understand what you are and how to control it, so you don't let a person with bad intentions control and ruin your life and health. Hell, what if I had discovered you? You'd be my bitch forever, just sitting naked in my house, sucking the maid until I got home to play games with you.\" She giggled.\n\n\"Okay, that's my piece of advice. I kind of like you Carrie.\" She leaned in and kissed my lips softly. \"Text me when you make up your mind, so I know if I am coming to Jill's to celebrate after practice.\"\n\nAnd I was alone in the bathroom and going to be late for art if I didn't get a move on. I changed clothes, put my panties in my pocket so I wouldn't have to take them off at Jill's house... I mean... if I decided to go there after school. The seam of my jeans against my naked pussy was a little distracting, but ... \n\nMiss King noticed my distraction. Not the lack of panties, but the decision I now had a little over an hour to make. I was drawing random pics of a restaurant, just testing colors and styles really, not working on the project. \"Something on your mind?\" She pulled a chair up next to me and asked.\n\nI sighed. \"Well, I'm going tonight to ask my questions and get a feel for things.\" I whispered so as not to interrupt the others. \"Just... I have a big decision to make today, and it's troubling me. It seems like everyone wants me to lean one way, even I think that is the right way, but there is this warning in the back of my mind against it.\" I thought that was cryptic enough. \n\n\"All humans have a sixth sense Carrie. Kind of like a dog can detect a bad person from a good person. Some people have the ability to hone that skill, some ignore it as hocus pocus oogity boogity. But, it's real. I'm not saying it's accurate, but it's usually there for a reason. So, trust that little voice and make sure that you consider what the warning is telling you and maybe you can still make your decision that you want to make by controlling the circumstances and being wary.\"\n\nI smiled at her. \"You are the best teacher ever Miss King.\" \n\n\"Clearly, that is why I teach art instead of something useless like math or literature.\" She laughed. She said that part loud enough for the whole class to hear and we all chuckled with her. Then, she got up and walked around and spent a few moments with everyone in the class, like she did every class. \n\nI wondered if she made every other student in this class feel as special as she made me feel when we talked about my work. That thought made me feel a bit less special, but made Miss King seem a lot more special.\n\nI went down to see Mrs. Lane after the final bell. \n\n\"Good afternoon Carrie.\" She greeted.\n\n\"Good afternoon Mrs. Lane.\" I sank into the comfy chair after setting my backpack on the floor. \"I got the okay to go to the counseling session tomorrow. Can I take a friend?\"\n\n\"Of course. Is your friend dealing with sexual identification issues as well? Or is she just there for support? Either way it is not a problem at all. It is good that you have a friend to be there with you.\"\n\nI giggled. \"She is going for support, but I think there is some interest that she is in denial about for herself.\"\n\n\"Well, then it should be a good experience for both of you. I hope you will find it helpful and maybe keep going every week.\" She smiled.\n\n\"Yesterday, we talked about your dislike for being the center of attention. Let's expand on that. Tell me about your thoughts on people who like to be the center of attention.\"\n\nI coughed. Hmm. Rebecca, Courtney, Farin, most of the cheerleaders, where to begin?\n\n\"Well, they have their reasons. I know a few of them personally. I guess, they just see it as their fame? Like, school or life is their stage and they are an actress. Different reasons I suppose. Some out of duty, some out of insecurity, some just want to be loved.\"\n\n\"Interesting analysis. Duty. Let's discuss that today. What would be the reason someone would have a duty to be the center of attention?\" Mrs. Lane asked. \n\nOf course, I instantly thought of Courtney. \"Well, because of their family mostly. Their position in the American aristocracy. Having money and power from their born position in life means they have to exert an air of superiority.\"\n\n\"I think it comes natural to them. They are used to it since birth. Being put on a pedestal because of their parents' position in society. So, it's not even a struggle or an effort. It is just natural to them because that is the way it has always been. They have control over others. They are used to it and assume that it is conveyed without a second thought.\"\n\nMrs. Lane smiled. \"You have someone in mind. I won't ask who, but is she a friend of yours?\"\n\n\"Friend is a strong word. We like and respect each other and enjoy each other's company. I don't know that I could count on her as a friend or that she would call me if she needed something a friend would do.\" I answered.\n\n\"Do you put her on a pedestal?\" Mrs Lane followed.\n\n\"Not really. But, I don't put anyone on a pedestal. I do respect her though.\"\n\n\"Do you ever wish you were her? Or in a similar position of respect?\" She added.\n\n\"Not really. I mean, the money wouldn't hurt.\" I laughed. \"But, my Dad does okay, I am not jealous of her.\"\n\n\"If you were in her shoes, do you think you would be a different person than she is?\"\n\nI thought about it for a minute. \"I'm not sure, that's kind of impossible to answer without having grown up like she did. Based on my upbringing, yes, I would act differently than she does. But, given her upbringing, I can't be sure that I would be any different than she is.\"\n\n\"Good insight Carrie. Let's break on that thought and Friday we can discuss those who seek attention out of insecurity. If you promise to go to the group session tomorrow, I will give you tomorrow off.\"\n\n\"Oh, I'm going for sure then!\" I laughed. \"Just kidding. I am going though Mrs. Lane. See you Friday.\"\n\nAnd, I went out to my car.\n\nAnd, I turned on the ignition.\n\nAnd, I put the car and neutral.\n\nAnd, I leaned the seat back and stared at the convertible top.\n\nAnd, I wondered where I was going.\n\nI thought about them all. About the good. The bad. The very bad.\n\nAbout what Courtney said. About how excited Julie was at Jill's house. I even thought about Rebecca, though she didn't even know I was basically free from Jill.\n\n\"Carrie Fitch, you are an idiot.\" I said out loud as I sat up and started driving.\n\nOutside Jill's house, I hung my bra and panties on the mirror and went to the door. There were a few other cars in the drive, which surprised me. I stood there, at the door. I could turn away. I should probably turn away. \n\nI stood there for long minutes. What would my life be like if I voluntarily submitted? Would it be any different than when I was obligated? \n\nThen I thought back to my conversation with Miss King. I smiled and texted Julie and Courtney that I was at Jill's. I knocked on the door.\n\nIt opened instantly. Sue was there smiling widely. She wore a beautiful gown of powder blue, it hugged her curves perfectly. There was clearly no bra underneath as her nipples were poking out prominently. She was a little taller and I noted the heels on her feet. \n\n\"I wondered if you were going to knock or run.\" She giggled. She pulled me inside and hugged me tight for a long time. She had tears in her eyes. \"I'm so happy you knocked, slutball.\" She whispered.\n\nBehind her, I could hear other people in the back of the house. It gave me pause. \"Who's here Sue?\"\n\nShe wiped her eyes and smiled. \"Surprises for you beautiful. Good surprises, I promise! Now let's get you ready to meet Mistress!\"\n\nI started to undress. She didn't stop me. When I was naked, and my clothes were folded neatly on the chair, she led me to their bedroom and then into the bathroom.\n\n\"You are going to love it. I know it must be scary, but it will be so different now. You are doing this because you want to, and that makes it so much better for everyone. Now, I'm going to do your makeup and hair, just indulge me for a bit.\"\n\n\"But, wait, Sue, I need to talk to Jill before I ...\"\n\nShe interrupted me with a kiss on my lips that involved tongues and me going silent and breathless.\n\n\"You will. There will be a contract and you two will iron out all the details. Trust me, you will get to talk to her. Just go with it for a bit. Don't let your little head get panicked. You will not be subjected to anything bad today.\" Then she paused and looked in thought a moment. \"Well, nothing too bad anyway.\"\n\n\"But, who else is here Sue?\" I asked, frustrated by her rushing around. She was applying a lot of make up to my face and I usually didn't wear a lot.\n\n\"Friends. Carrie, don't worry. They are just here to see you take your collar. There will be a ceremony. It's going to be so beautiful.\" She started applying my eyes, green shadow with white outlines. Mascara that made my lashes look enormous. Eyeliner with two tones that made my eyes look bigger than they really are. I watched her through the mirror and was pleasantly surprised as the transformation of my face went on.\n\n\"Now, there will be a photographer. Nothing will be posted anywhere. It is strictly for Mistress to keep in a scrapbook we have been making about you. I'm just warning you, so you don't freak out.\" Sue told me as she continued to work efficiently, effectively, quickly.\n\n\"There are some friends of Mistress's here as well. They will not be allowed to photograph anything, so no need to worry about blackmail. There is no need. You are here on your own free will.\"\n\n\"Keep your answers simple. You do not call her Mistress until you pledge to her. Call her Jill at first. When she collars you, then that name will be forgotten to you until your contract is up. She will be only Mistress from then on. Don't forget it! It cost you so many punishments before remember?\" Sue giggled.\n\n\"I remember.\" I groaned. \"But Sue, when will I get to talk to her? Before the ... ceremony?\" \n\n\"Yes, before the ceremony. Stop worrying. Everything is going to be so wonderful from now on.\" Sue smiled at me. \"You know, after today, you are going to be my little sister. I've always wanted a little sister.\" She giggled. \"I probably wouldn't do the things with you and to you that we are going to do with a real little sister though.\"\n\nI laughed, but was feeling very nervous and Sue saw it in my eyes. \n\n\"Have I ever lied to you Carrie?\" She held my chin and looked into my eyes.\n\n\"No Sue, you haven't.\" I couldn't remember her ever lying to me.\n\n\"And I never will. I can't spoil the surprises Mistress has waiting for you. But, please, please, please trust me that nothing ... absolutely nothing truly bad will happen to you today. This is a party. A celebration. You are the guest of honor and if you cry it will be because you are happy. Do you believe me?\"\n\nI swallowed hard. \"Sue... yes I believe you. I ... pictured something more intimate.\"\n\nShe giggled. \"It will be! Just with an audience.\"\n\n\"Now, Darla IS here. I only tell you that because I don't want you freaking out when you see her. She's here with her friend Barb, I'm sure you remember her too. If you can't handle them being here, tell me now and I will send them away. They are only here to watch and congratulate you and Jill. They are not going to touch you or ask you to touch them. They might apologize to you, but that is all. But, this must be perfect for you, so be honest with me, will seeing them be a problem? I will call Jill right now and send them away if it is.\"\n\nI stuttered. \"I...\" I shuddered thinking about Barb and the henna and the enema. I flushed with embarrassment as the memory came flooding back to me.\n\n\"That chapter of your life is over Carrie. It will bother Darla a lot more than you. I promise. She will see what should have been her goal, what she truly wants, but fucked up. Consent. Willful submission. That is why Jill invited her, so she could see how badly she fucked up. But, again, this day is about you my gorgeous sister, so, can you handle them being in the audience? There is no wrong answer.\"\n\n\"I guess it's okay.\" I said at last.\n\nSue smiled at me. \"Very mature of you.\" She started brushing my hair and it hurt a bit as she tugged and pulled and started braiding my hair into a single frenchback, with a green rubber band to hold the tips together.\n\n\"Sue, how many people are here?\" I asked.\n\n\"Thirty-seven until Julie and Courtney get here. Then it will be thirty-nine, not including you.\"\n\nI gasped. I started hyperventilating and she saw it. \"Oh god Carrie, stop!\" Sue giggled. She handed me a paper bag to breathe into and I did. \n\n\"Okay listen. They are going to be seated in the basement. You won't interact with them at all until after the ceremony. Most of them are friends from Mistress's group. A few business partners that are familiar with her lifestyle. And some friends and acquaintances that are just friends and acquaintances. You will meet them all, but don't try to remember their names today. I would guess you will meet them all in smaller settings in the future.\"\n\n\"Oh baby, stop please. This is so exciting. This doesn't happen in our world every day, so people tend to make a big deal out of it. It's a party, they are only here to watch and congratulate you and Mistress. Mostly Mistress. Just be a good girl and do what you are told and answer yes Mistress and no Mistress unless asked to expand and everything will be so beautiful.\"\n\n\"Address the guests as Sir or Mistress or Ma'am. I will whisper to you as you meet them how to address them. Keep your eyes down and your chin up. Shoulders back, belly in, ass and tits out.\" Sue giggled.\n\n\"Baby, if you cry you are going to ruin my beautiful make up.\" She added as I kept looking more and more concerned. \"You are going to be wonderful! Don't worry. I will be right there the whole time to help you and you will absolutely not be punished for making mistakes today.\"\n\nI waved my hand in front of my face to fight off the tears of anxiety that threatened them.\n\n\"Okay, let's get you dressed.\" Sue took my hands and brought me to my feet and into the bedroom.\n\nShe stood me in front of a mirror as she dressed me. I had to admit my face looked elegantly beautiful. I had never had so much make up on my face before ever. And Sue was an artist.\n\nMy eyes looked huge. My nose looked smaller somehow. My cheeks had a blush that hid the real blush that I knew to be under all the cosmetics. My lips shined and glistened and looked even plumper than usual.\n\nThe first thing she did was put a white quarter cup corset around my torso. My tits were lifted up as if sitting on a shelf, the nipples exposed to the world. Then, came the tugging of the strings. Tight at first. Tighter, so it constricted me next. Tight enough so breathing became a labored effort, third. Then the bottom so tight, I swear I lost four inches of waist. \n\n\"Sue, I can't breathe!\" I gasped.\n\nSue laughed softly. \"I could make it much tighter than this Carrie. Just take more, smaller breaths, you will be fine.\" \n\nI breathed faster, but tried not to go to all out hyperventilating again. Sue tied off the strings and then helped me balance to pull white thigh high stockings up my legs. There were straps on the corset that she attached to the stockings to keep them up. Then she pulled some stiletto heels, also white, onto my feet and had me walk around the room a bit to get accustomed to the balance. \n\nI don't usually wear heels and was afraid I would fall and embarrass myself. I told Sue as much and she instructed me as I walked to take very short steps, and pull my feet in and shift my ass as I took each step. I imagine I looked like a total slut when I did so, but within a couple of minutes, she had me walking in the heels without fear of falling.\n\nFinally, she knelt down and started putting blush on my vagina, which made me blush if you could see it under my blush. And she painted my nipples after tugging them to hardness. \n\n\"I'm spraying a setting spray on you now. It will help keep your make up from being smudged.\" She squirted some clear stuff on my face, breasts and vagina. Then she watched her phone for the setting time while primping my hair.\n\n\"Okay, one last thing.\" Sue smiled.\n\n\"A dress?\" I asked hopefully.\n\nShe laughed and pulled out a white veil. \n\n\"No Sue! Absolutely not! I am not going out in front of a room full of strangers basically naked!\"\n\nSue rolled her eyes. \"Carrie, yes you will. Come on, this is nothing. You know why you are here. You are gorgeous baby. They are going to eat their hearts out with envy of Mistress.\" She pinched my butt.\n\n\"Fuck!\" I yelled, looking at the obscenity in the mirror. \"Sue, ... please?\"\n\nSue laughed. \"Please what baby? Look at that gorgeous girl in the mirror. What are you embarrassed of? That body is mouth-watering. That face was perfect before I added my touch to it. You are breath-taking Carrie. There is nothing about you to be ashamed of.\"\n\n\"I don't know about this Sue. I hadn't... it's so fast.\" I whispered. God, I looked like an advertisement for a porn site.\n\n\"Now, Mistress will lift the veil when it is time. She will then put on your collar and you will call her Mistress after that. If the occasion arises to address her before then, call her Jill. Ready princess?\" Sue affixed the veil to my hair and it hung down over my face.\n\n\"No, but I will never be.\" I answered.\n\nSue giggled. \"I love you.\"\n\n\"I'm going to go check on things. Just look at that gorgeous woman in the mirror and think of how you are going to turn on everyone when you make your entrance. Mistress might have a heart attack!\" She smiled and patted my ass softly then grabbed both cheeks and squeezed them. \"So gorgeous. I wish I could go down on you right now!\"\n\nAnd I was alone. Looking in the mirror through the veil. I lifted it with my hand. It was worse, so much worse than being naked. All attention was brought to my breasts and exposed vagina. I turned to the side. The heels forced my ass out. It was so vulgar. I had to look away. I practiced walking in the heels for a while before Sue came back in the room.\n\n\"Julie and Courtney are on their way Slutball. Call Mistress and she will ask you a lot of questions. Answer yes or no, ask for clarity if there are terms you don't understand. You will get to ask your own questions after she goes through her list. I'm here if you need to ask questions for clarity.\"\n\nI picked up my phone and sat on the bed. Sue sat next to me and I rang Mistress on my phone.\n\n\"I can't tell you how happy I am today Carrie.\" Jill answered. \"You made the right decision, never doubt that. I am here with my attorney drafting up our contract of service. You will have forty-eight hours after today to make changes or consult with your own attorney that I will pay for, if you feel the need. Now, we don't have a lot of time, but do not answer a question you don't understand. I have taken the liberty of checking many boxes that I know won't be a problem, but there are many things you haven't been exposed to, that I do need to know if they are deal breakers.\"",
        "\"Fisting?\" She asked, and I looked puzzled I guess.\n\n\"Put her on speaker slutball and I will help.\" Sue offered. I did as she instructed.\n\n\"Mistress, what was the questions, she looks confused.\" Sue asked.\n\n\"Fisting.\" Jill answered with a sigh.\n\nSue giggled. \"Putting her hand inside your vagina cupcake. That would mean losing your virginity by the way.\"\n\n\"No!\" I exclaimed a bit too loudly.\n\nThey both laughed.\n\n\"Shall I just say no to anything that would involve the removal of your hymen Carrie?\" Jill asked.\n\n\"Yes!\" I exclaimed again. \"I mean... yes please.\" I calmed my voice.\n\n\"Very good. I think we can make a lot faster progress if I lump lines together.\" Jill replied. \"How about anal fisting? It would be gradual and it is enjoyable if done properly, which you know I would.\"\n\n\"I... is that possible?\" I answered.\n\n\"Yes Slutball, and it would take weeks or months to get your ass open to accommodate it without pain. I'd like you to say yes and if it is too much, we can always change it later.\"\n\n\"Okay.\" I replied.\n\n\"I said I'd like you to say yes Carrie.\" Jill admonished.\n\n\"Yes.\" I gulped loudly.\n\n\"Piercing.\" Jill asked.\n\n\"Of what?\" I whispered.\n\n\"Anything I desire?\" Jill asked.\n\n\"Not on the face.\" I answered.\n\nJill giggled. \"Is the tongue okay?\"\n\n\"I... can we talk about later? I'm not sure that would be okay with my Dad.\"\n\n\"Fair enough, maybe for tongue, no for eyebrows, nose and lips, yes for nipples, belly button, clit and labia.\" Jill said, I assume to the lawyer.\n\nMy eyes went wide. I meant ears.\n\n\"Tattoos are out for now. That is a very permanent decision.\" Jill said as she went through her list.\n\n\"Heavy bondage? Like mummification?\" Jill asked.\n\n\"Not over my face.\" I answered.\n\n\"Okay, asphyxiation?\" She asked.\n\nI looked puzzled. \"Breath play.\" Sue explained, or tried to. I was still puzzled.\n\n\"Temporarily restricting your ability to breathe.\" Sue smiled, explaining it in terms I understood.\n\n\"I ... don't think so.\" I said.\n\n\"Sue, were you unclear?\" Jill asked.\n\n\"Perhaps Mistress.\" Sue replied. \"Carrie, yes or no answers remember?\"\n\n\"No?\" I answered.\n\n\"You are answering me, that 'no' was a question. Breath play can excite your sexual experience. You don't understand it, so I will put needs instruction for a decision.\" Jill said.\n\nI won't go through it all. It is a long list of things. Many I didn't understand. Some were definitely a no. Some were yes. More than half of the yes sounded unpleasant. The no answers sounded horrible or disgusting. I think we spent at least forty-five minutes going through it all because of my questions.\n\nWhen she finished with Wrestling, I asked if it was time for my questions.\n\n\"Yes Carrie, it is time for your questions, go, you have ten minutes to set your parameters and get your clarifications.\"\n\n\"Okay, thank you Jill. When it comes to including others, do I have the option to say no because of who it is?\" I had questions prepared. This one was important.\n\n\"It depends on your reasons, but yes, if you have a personal and valid reason for their exclusion.\" Jill answered. \"It won't be nearly as often as you are accustomed to Carrie. I don't like to share my toys as much as some people. You have until Monday to give me a list of anyone you do not want to use you or see you used. That is two lists.\"\n\n\"Will you protect my anonymity in public?\" I asked.\n\n\"Yes. Should I decide to do anything in public, we will go where it is unlikely people will know you.\"\n\n\"I want to date. Like normal dating. Will you not only permit it, but give me occasional flexibility in my schedule to do so with advance notification. A case by case basis is okay, but I want to know that you will be flexible in that regard. I will make up the time.\"\n\n\"Very well thought out Carrie. On a case by case basis yes, but understand if I have a plan that conflicts with your date, my answer will be no. Is that acceptable?\" Jill returned.\n\n\"Yes.\"\n\n\"Sundays are mine unless you request them in advance.\" I said, wondering if I pushed my luck by stating it instead of asking for it.\n\nJill laughed. \"Who's the dominant, bitch? Try again.\"\n\n\"I would like Sundays off to spend with friends and family with rare exceptions.\" I responded.\n\n\"Agreed. Family and friends are important.\" Jill replied with a pleasant laugh.\n\n\"I want a minimum of one orgasm a week please?\" I asked.\n\nJill and the attorney laughed, and it made me blush.\n\n\"No.\" Jill answered. \"I may want to go more than a week and I won't be held to that rule, but how about five a month minimum?\"\n\n\"Yes, that is acceptable.\" I responded.\n\n\"It will usually be much more Carrie, don't worry, your little cum box will have lots of enjoyment.\" Jill added.\n\n\"May I acquire more underwear?\" Three bras and four pairs of panties weren't going to cut it in the long run.\n\n\"Yes.\" Jill answered simply.\n\n\"I would like a standard schedule of time of service. More for my Dad, but also so I can plan other things.\" \n\n\"Monday through Friday from 4:15 to 7:15 and Saturday from 9 am to 5 pm. There will be exceptions of course and I want a minimum of two evenings a month. If you can sleep over that is best, if it causes issues with Daddy, I will understand, and you can be home by midnight, later if you can swing it.\"\n\n\"I want to eat at the table one day a week, dressed like everyone else. If everyone else is naked, I will be so as well, but if everyone else is dressed... I just want a normal day once a week please?\"\n\nJill paused. \"I love you kid. You really thought this through. I truly admire that. Fridays you can sit at the table. You will be dressed as Courtney and Julie. Sue and I are above you.\"\n\n\"Agreed.\" I answered. \n\nSue giggled. \"So, Courtney and Julie will be naked on Fridays\"\n\n\"I would like you to not make me date anyone I don't want to date. I don't mean service, I mean date, like romantically.\" I knew I was going to forget some things from my list, but I ran down what I could remember.\n\n\"Agreed.\" Jill answered.\n\n\"I doubt I even have to mention it, but I want a picture of everything I make.\"\n\n\"Of course, Carrie. We are running out of time and your parameters are getting less interesting.\" Jill answered.\n\n\"I want to plead my case before a punishment.\" I asked.\n\n\"No. There are times I don't want to hear it Carrie. But you will never be punished without it being something you could control or knowing why.\"\n\n\"You owe me an answer on a question I asked you last night.\" I said finally.\n\nJill laughed softly. \"Yes Carrie, at the end of summer I will eat your little snatch until you are a sobbing mass of sweat and beg me to stop because you are too sore to cum again. With the parameters that we discussed. Julie must be okay with it, and we discuss it beforehand. If you and I decide there is future submission to me after you go away to school, then no. I am not adding that to the contract. It is something I want to do, there is no reason to require me to do it. Agreed?\"\n\n\"Agreed.\" I smiled. \n\nSue smiled at me, a sad look on her face for a moment, then wiped it away.\n\n\"I can't think of anything else Jill. Thank you.\"\n\n\"Wonderful. Carrie, I really, truly look forward to our experiences together. I'm going to add a few things you didn't think of that I think will benefit you. Your safe word is Lamp, easy to remember. If something, even a deserved punishment is too much, use your word, we will stop and assess the situation.\"\n\n\"Since you brought it up, at dinner every Friday, you may talk to me as a person. You must still call me Mistress, but you may speak your mind without retribution. Be respectful, but honest.\"\n\n\"Finally, I will be paying you for our time together. I will also be investing resources into your training, not only as a submissive, but as a cook, a painter, an artist and other skills you will learn. I will track your pay, your training costs, costs for my time. If the sale of your artwork exceeds the cost to train you and pay you, I will give you ten percent of that profit before you go to college. That will be in the contract. On the flip side, if you cost me more than I make off your work, you will not be charged, the bill will be forgiven at the completion of the contract.\"\n\n\"Thank you, Jill.\" I smiled at the phone.\n\n\"You are welcome Carrie. You have five minutes. I can't wait to see you Slutball.\" Jill said before she hung up.\n\n\"You wish she would go down on you once?\" I asked Sue with a frown, seeing the sad expression still on her face.\n\n\"What?\" Sue looked at me like I just slapped her face. \"No! Oh no Carrie, that wasn't it at all baby.\" She laughed softly. \"I'm going to miss you in the fall baby. I already know I am going to get so used to you being here. I know I'm gonna love you to pieces. And I know you are going to leave us. Jill and I are both going to miss you a lot. You don't know yet how tight a bond the three of us will have. And it is going to be really sad when you have to go away to college.\" \n\nShe sighed. \"We really want to do this baby, but we also really don't. She's gonna love you too. We are going to be very emotionally involved, the three of us. And then, you are going to leave. But, it's okay. Better to have loved and lost than never to have loved at all right?\" She giggled.\n\nI hadn't really thought about that to be honest. I hugged Sue tight. \"Eat, drink and be merry for tomorrow we may die.\" I whispered.\n\nSue laughed and fanned her eyes. \"Good quote. Let's touch up our make-up.\"\n\nShe did hers first and then touched up mine. Meanwhile, she instructed me again on what to do when I entered the room. She would be there as well to give her blessing to Jill... Mistress Jill... Mistress.\n\nI practiced walking as she instructed until it was time to go.\n\nShe took me out to the house, apparently everyone was in the basement. There were a few caterers in the kitchen and dining room. They were fully dressed, and I caught one of them eyeing me up, but he quickly looked away and returned to his work with a blush on his face.\n\nI thought we would go down the steps, but she instead led me out to the front door. I hesitated, and she laughed. \"Don't be modest, it's not a busy neighborhood.\"\n\nShe didn't have a neighbor right next door, I knew that from my previous visits, but there were definitely houses in eyesight. I blushed as we walked out the front door. Sue took my arm and told me to put my weight on my toes as my heels would sink into the dirt. And she led me to that side door that I entered when Farin and I were caught in the limo.\n\nShe took me into that same room and stood back, taking my hands in hers and looking me up and down. \"My god, you are so delicious Carrie. You are going to make a lot of people very horny in a minute.\"\n\nI groaned, and she giggled.\n\n\"When your little impulses tell you to resist or to run, fight them back, choke on them. Get through this and take it one little sexy step at a time.\"\n\nI looked at her with uncertainty in my face and she smiled. \"It's time princess. Let's go.\"\n\nAnd we walked out to a sound of conversation coming down the hall.\n\n\"Attention, honored guests.\" A voice sounded over the din a microphone I was sure, because it was quite loud. \"Please take your seats.\"\n\nAnd I could hear the bodies moving and the conversation dying and my heart pounding as the silence became as heavy as humidity on an August afternoon.\n\n\"Okay Slutball, as soon as the music changes, you come out, follow the rose petals.\" Then, for the first time, I noticed Sue holding a small basket of pink rose petals. She giggled at my acknowledgement. \"You will be fine... remember, tiny sexy steps. Don't look at the audience, just look at the ground in front of you and follow the petals. Kneel on the stage where the low microphone is and then just pay attention to what is said, and answer with simple Yes or No answers. Ready?\"\n\n\"No Sue I'm terrified.\" I grabbed her hand hard.\n\n\"I know sweetie. Tiny, sexy, baby steps, one at a time. Ignore the audience, focus on Mistress.\"\n\n\"I need my hand now Slutball. See you in a minute.\" She pulled her hand away, and the music started, and she started dropping petals on the floor as she walked... or... oh God, this was a wedding!\n\nI stood trembling. I grabbed the wall to balance myself. Breathe Carrie. Breathe. I was about to get married to Jill? Well, temporarily, but oh God! This was ... insane!\n\nI watched as Sue disappeared around the corner at the end of the hall. I took a step forward. Not time yet Carrie, listen for the change in music. Oh ... this is too much. I'm dressed like a whore! \n\nTiny steps tiny steps. I practiced up and down the hall, pacing, waiting for my cue. And then it came. The music changed. Oh, fuck me, it is the wedding march song. This is so sick!\n\nOkay, Carrie, get hold of yourself, one step at a time. Tiny sexy steps. I started walking. I came to the end of the hall. I turned the corner. I looked up, and froze. They all stood up. Oh no, this is too much. I grabbed the wall, and caught my breath a second.\n\nFLASH! The photographer! I forgot the photographer. Oh, this is horrible.\n\nLook down Carrie, I pulled my eyes to the floor. Rose petals. Follow the rose petals. I slowly let go of the wall, and started walking, tiny sexy steps, tiny sexy steps.\n\nFLASH! FLASH!\n\nI heard giggles. I heard whispers. They were laughing at me. They were whispering about me. Tiny sexy steps, tiny sexy steps. \n\nAcross the floor I took tiny step after tiny step. I finally saw the stage with my downcast eyes. Almost there. Whispers. So many whispers. Oh God what these people must think of me. I'm a slut. Such a disgusting slut. I froze a second again. Can't breathe. Tiny sexy steps. \n\nFLASH! FLASH!\n\nAnd this is you now, Carrie. A slut. Naked. Worse than naked. Dressed to look like sex. Oh no! I could feel myself getting wet. No, No, No. Not now you horrible slut! Control your cunt. But, the more I thought about my pussy, the more it leaked. I swore, I could feel it dangling off my pussy and slapping my thighs.\n\nFLASH!\n\nThe whispers are louder. They see it. They see the slut I am. They see the stupid horny bitch, who agreed to dress like a whore and marry a woman she barely knows. I don't love Jill. Why am I marrying her? I am so weak. So... \n\nFLASH!\n\nI stopped again... about to fall... mustn't fall. Tiny sexy steps. A shudder of ... pleasure. Oh god, you are getting off on this aren't you? Such a disgusting slut. Slutball. Yes, aptly named. A ball of slut.\n\nThe stage is there, I need to lift my foot. Ugh. I'm gonna fall. I'm going to fall, and everyone is going to laugh. Fuck, Fuck, Fuck.\n\nTiny sexy step. Tiny sexy step... Yes, I made it onto the stage without falling. Just a few tiny steps. Boots? No. A pair of heels, but the toe looks like a boot. They are black. It ... Jill? I looked up slowly. Shiny, oh so shiny black heels. Her legs encased in black tights. They hug her muscles so beautifully.\n\nFLASH! FLASH!\n\nOn her pelvis, what is that? It's like a silver codpiece for a woman. It is actually shaped like vaginal lips between her legs. I look higher, her hips curve in so beautifully. She's wearing a corset too? Oh god her tits are shelved like mine but in a purple and black corset. I look up again. She is ...\n\nI gasp. Her face, she looks so happy and gorgeous. Her eyes are looking right at mine now. Those black eyes. The eyes I fell for that first fateful night. She is smiling, her eyes motioning me to kneel.\n\nFLASH! FLASH!\n\nOh Carrie, you idiot, you are ruining everything. I force a smile and take two more tiny sexy steps and kneel down in front of her, looking down at the ground. Her hand is on my chin and ... pulling up so I look into her eyes again?\n\nI look and my eyes meet hers and I am looking up at her and she is smiling so happily now. Whispers... words... Something is happening. Giggling again. What did I do?\n\nFLASH! FLASH!\n\nHands on my thighs pushing them apart. I move with them, as I gaze into those deep black eyes.\n\nThe giggling gets so loud. Forget it Carrie. Just look into her eyes and everything will be fine. \n\nSue is beside me now ... kneeling beside me. \n\n\"She is beautiful, isn't she slutball?\" Sue whispers. \"Now, arch your back and keep your position little slut. Your bowl is in place, so your naughty cunt can drool as much as it wishes.\" \n\nI gasp and look down. She didn't lie, she put the bowl between my legs. Oh fuck, everyone knows, they saw her do it. That's why they are giggling. I'm so vile.\n\nFLASH! FLASH!\n\nSue grabbed my ass and pulled up.\n\nFLASH! FLASH! FLASH!\n\nSue is giggling. \"Good Slutball, you go ahead and drip into your bowl sexy girl. Now pay attention, you missed your cue.\"\n\nI blushed and looked up at Jill, and smiled pathetically. Nothing but sweetness on her face though, as she looked at me. She blew me a kiss.\n\n\"Are we ready?\" I looked to the voice behind the podium. A bit older woman than Mistress, I'd guess early 40s, and was dressed, from what I could see, in a leather bodice. She smiled at me kindly when I looked up.\n\nI nodded, afraid to speak. The flashes never ceased.\n\n\"Carrie, we are here today before these witnesses to celebrate the joining of you to a life... I'm sorry, to ten months of servitude to Mistress Jill. Are you a willing party to this joining of your lives?\"\n\n\"Yes Mistre\" Sue nudged me. \"Ma'am\" she whispered.\n\n\"Yes Ma'am.\" I corrected.\n\nShe smiled, and looked over at Jill. \"Mistress Jill, are you willing to train and keep this slut Carrie healthy?\"\n\nDid she just call me a slut? I groaned.\n\nJill giggled. \"Yes Ma'am, I can barely wait.\" She was laughing softly. Some laughs rose up from the audience to join her.\n\n\"Let us proceed then.\" The woman started a speech about the bond between a Dominant and submissive, which seemed extremely one sided, but she did say I had to be kept alive and healthy. So, I had that going for me.\n\n\"Do you, Carrie Fitch, swear to obey your Mistress, to serve her, to please her whenever possible, to answer to her whim, to make Her will your own, to keep your body and your mind and your soul healthy, that it pleases her?\"\n\n\"I do.\" I said, and blushed when everyone laughed. \n\n\"Yes Ma'am\", Sue whispered.\n\n\"No Sue, it's fine.\" The lady replied with a soft laugh. \"So precious, God Jill where did you find her?\"\n\nJill smiled. \"Yes, she is.\"\n\n\"Do you Jill Constantine, take Carrie Fitch as your submissive, and promise to do her no permanent harm during her servitude to your whim?\"\n\nJill leaned down and lifted the veil, and looked into my eyes. \"I do.\" She smiled at me.\n\n\"You may collar your slut.\" The woman told her, and Jill leaned down and kissed me. Apparently, this was not protocol at all, for there were whispers, some unpleasant. There were giggles, and even a gasp or two. She kissed me softly on the lips, not too long, not a peck, a very sweet and pleasant kiss, with just a tiny bit of tongue. Then she stood up, and tugged my nipples while smiling at me.\n\nShe took a piece of green leather about an inch thick and wrapped it around my neck. It was a leather choker, very discreet when compared to some things you might have seen. No bling attached. No D rings or leash rings adorned it. Just a tiny silver circle in the front. She showed me a little silver plate that read SLUTBALL and then attached it to the collar with a grin.\n\nI groaned and smiled at her. \n\n\"Eyes down now Slutball, she is Jill no more, she is Mistress now.\" Sue whispered. \n\nAnd I lost a tear, as I forced my eyes to look away from her beautiful face.\n\n\"Acknowledge your Mistress, and be henceforth known as Slutball.\" The woman announced.\n\nI kissed her feet, one then the other as Sue had told me to do. \"I love you Mistress.\" I whispered.\n\nThe whisper wasn't part of the ceremony, and I doubted she heard it.",
        "\"Please make your way upstairs now, and enjoy the fine food awaiting us. Mistress Jill and Slutball will be up to greet you all shortly.\" The lady said.\n\n\"Okay now Slutball. Can you stand up yet?\" Sue whispered.\n\nI shook my head. \n\n\"Okay, just stay there and keep filling your bowl for everyone. You are such a tasty juicer.\" Sue giggled. \"Mistress and I played with your cunt juice ice cubes last night. I came so hard, when she rubbed my clit with an ice cube made from your cuntslop.\"\n\nI shuddered and heard a plop. Sue laughed. \"I love you Slutball. We are going to have so much fun.\"\n\nI heard Jill and the lady talking long enough to decipher her name was Nancy. \n\n\"My what a wonderful find Jill. It makes me want to take on a new toy, seeing this sexy little thing. I mean, it's like a river down there.\" She laughed.\n\n\"I know. But don't get too excited Nancy. You know how much I was against this. But, every once in a lifetime, maybe twice, that one comes along, that is just so special you can't resist.\"\n\nA man came in then, wearing a suit and walked up to Jill. They whispered for a moment, then walked away into her 'weapon room' in the back. I call it her weapon room. She calls it her toy room. Tomato Tomato.\n\n\"So, Slutball, I understand you are another hidden talent.\" Nancy addressed me.\n\n\"I ... don't understand Ma'am?\" I answered.\n\n\"Like Sue, you are an artist who doesn't know her worth. I can't wait to see your work, once Jill has helped you release your abilities.\"\n\n\"Oh, thank you Ma'am. I don't know how talented I am, but I do love art very much.\"\n\n\"Humility will get you nowhere. Brag about yourself girl, believe me, it helps.\" She said kindly.\n\nI just smiled.\n\n\"So, Sue, you really wanted this huh?\" She asked.\n\n\"More than anything... except what I have already, of course.\" Sue smiled.\n\n\"I hope it works out in the end. I really do. She is truly adorable.\" Nancy added.\n\n\"Oh, I think...\" Sue stopped and just smiled at me. \"I think Slutball is going to be perfect for us.\"\n\nMistress came back out with the man and he sat on the edge of the stage near me and put a stack of papers on the floor of the stage. \"Okay Miss, I need you to sign Carrie Fitch on line one and Slutball on line two of each page.\" He handed me a pen. \"I am just here to witness your signatures. Take your time, and read the contract. You do have forty-eight hours to make alterations to it, or cancel it. I would suggest having your own attorney review it, in case Miss Constantine put anything in there that you did not expect or do not accept. You do understand that this is a limited contract of servitude?\" He asked me.\n\n\"Yes Sir.\" I answered.\n\n\"And that breaking a contract always has ramifications?\" He asked.\n\n\"I... yes Sir I understand.\" Though I hadn't even expected a contact, and had given it not a thought.\n\n\"In this case, should you break the contract, you would be required to repay her investment in your training, which is estimated to exceed one hundred thousand dollars. Are you aware of that?\"\n\nI gulped. \"One hundred thousand dollars?\"\n\n\"Or more. That is a conservative estimate. It is more likely that the total can come to about a quarter of a million dollars. You should understand that, and the contract, before signing.\"\n\nI started shaking and looked at Sue for help.\n\n\"It's okay Slutball, don't worry. Just do what you are told, and finish through the summer, and you won't have to worry about a thing. Right John? She's 18 but she's a little scared at that, explain it to her please.\"\n\n\"Miss Fitch, I can't give you advice. I represent Miss Constantine. This is a forty page, legal document, and you should read it and understand it, before you sign. I am not trying to scare you, but it is a legally binding contract, and you should seek competent legal representation for yourself.\"\n\n\"I'm not going to lie to the kid Sue. She is eighteen, but she is still a kid.\" The attorney answered.\n\n\"Fine. Thank you, John.\" Sue said, a hint of exasperation in her voice.\n\n\"Carrie, just sign it, and I will arrange for an attorney to read it tomorrow and meet you Friday night to go over it.\" Sue told me. \"You can cancel it then if you like. Just, please let this day be perfect for Mistress.\"\n\n\"Okay Sue.\" I smiled at her, and signed as instructed as Carrie Fitch and Slutball on all forty pages.\n\nJohn just sighed, and took it to notarize and make copies. \"You will have a copy to take with you tonight. I suggest you read it yourself.\" And he huffed off.\n\n\"He...\" I began but Sue shushed me.\n\n\"He worries too much. He has a daughter, and he has a niece, that are your age. Don't worry Carrie, I promise you that you will not owe Jill any money when this contract ends.\"\n\nI smiled at her, and she helped me to stand. We looked down at the bowl of my goo, and Sue giggled, and I groaned in embarrassment.\n\nWe hugged, and held each other for a long while. Her hands cupped my ass and held me tight against her. And I truly felt her love.\n\nJill came over to us then, after a conversation with Nancy. She was smiling so widely. \"Well, it's done Slutball. You are mine. How do you feel?\"\n\nI smiled, and went to look into her eyes, but caught myself. \"It ... I wasn't expecting this Mistress. I'm a bit overwhelmed.\"\n\n\"You were absolutely perfect!\" Jill answered. \"Wasn't she. Sue?\"\n\n\"I've never seen a better performance, or a more beautiful submissive in my life.\" Sue grinned.\n\n\"Okay Slutball. A few quick rules. We have to go meet a lot of people, and we don't have time to go over much right now. No cumming. You can beg me, and try to change my mind, but without my permission, you may not cum.\"\n\n\"You will answer briefly yes sir, yes ma'am, no okays or uh huhs. Be wary of looking anyone in the eye that you don't know. Some Mistress's get very upset when needy little sluts look them in the eye. Mistress Jade would have you over her knee in a flash. And if it is warranted, I will permit the other Mistress's to punish you. I don't want that to happen today. This is our day.\"\n\n\"If you are given a gift, you will take it graciously, with a thank you sir or maam, kiss their feet on your way to your knees and crawl the gift to me. Tell me who gave it to you, and await instruction. I will most likely be seated at the head of the table, if not find me.\"\n\n\"Nobody is permitted to fuck your pretty ass or sexy mouth today, they know that. But if they do, don't stop them. Don't complain. Get their name, if they give it to you, and tell me later. If anyone tries to penetrate your cunt, you fight with everything you have and scream, and I will be there in seconds.\"\n\nI shivered. \"Mistress you are scaring me.\"\n\n\"Oh angel, I'm not ... nothing will happen, but you are so fucking sexy, someone might lose their mind. They all know better, and will pay dearly, if they try to take advantage of you.\"\n\n\"Other than that, you will likely be poked, and prodded, and checked out a lot. Let them touch you, as much as they want. Thank them for every compliment. If anyone instructs you to do something, for the most part just do it. Only a Dominant would dare to instruct you in my house. And, they all know my parameters.\"\n\n\"You will be spending a good bit of time with a few other submissives. Sue will be there with you when she isn't tending to me. She will look out for you.\"\n\nShe breathed deeply, and held me by my shoulders. \"I want you to know Slutball, I am very happy to have you. Sue is beside herself. She giggles and dances around the house. I haven't seen her so happy in a long time. You are loved here. You are very precious to us.\"\n\n\"Now, I know how you love making an entrance. So, you get to make another.\" Jill giggled at my blush.\n\n\"We will go up together. You may walk up the steps. Then you will crawl just behind me to my left. Lift your feet when you crawl. Every scuff on the toes of your shoes will be a spanking in front of everyone. Just my hand so it won't hurt a lot, but I imagine it will embarrass you to be over my knee at a party.\"\n\n\"Now pose with me as the photographer instructs and we can go up and meet our friends.\"\n\nThe poses were... some nice, some very embarrassing. Kneeling next to Mistress. Kissing Mistress's feet. Over Mistress's knee with her hand on my ass. Kissing her codpiece. Kissing her ass. Kissing her nipples. It took quite a few minutes to get everything done to his approval.\n\nThen we were heading upstairs. Sue opened the door and walked ahead of us, and I dropped to my knees, careful to lift my feet as I crawled into the living room. I followed to the sound of applause and well wishes. In the dining room, Mistress sat, and I knelt until she patted my head and told me to go into the kitchen taking Presentation Position 1 two feet in front of the back door until Sue, or she, instructed me otherwise.\n\nI crawled into the kitchen. It really hurt my knees, but I kept my feet up high, so they wouldn't scuff the floor. I took up the position, standing, feet shoulder width apart, hands behind my neck, shoulders back, breasts out.\n\nI was immediately approached by, what Sue later referred to as the sluts. \"Oh, you are so beautiful.\" One said and pinched my nipple. \"How old are you princess?\"\n\n\"Eighteen Ma'am.\" I answered, staring down, but I could tell she was a little older than me. Well, probably ten years older than me. \n\nShe giggled. \"I'm not a Ma'am. My name is Candy. Like Candy Cane.\" She laughed and tugged my nipple hard. I cringed.\n\n\"Oh, sensitive nips. Come meet Slutball, everyone.\"\n\nAnd I had to fight not to scream. Suddenly there were hands all over me. My breasts, nipples, pussy, clit, ass and asshole were touched and fondled by dozens of hands. \"Please, I'm not allowed to cum.\" I squealed, when someone started stroking my clit with their thumb and forefinger.\n\n\"Oh, we know.\" Candy giggled into my ear. \"You better not either, or we will inform your Mistress. Endure it slut.\" And she started sucking my earlobe.\n\nI was shaking side to side trying to escape it. A finger prodded my asshole. I squirmed and wriggled trying to get away while maintaining Presentation Position One. Surely, Mistress didn't know this was happening. This was too much.\n\n\"Please STOP!\" I screamed. I was going to cum.\n\n\"What is going on?\" A severe voice called from the entry to the kitchen. \n\nThe subs all stepped away. \"Sorry Mistress Clarice, we were just playing a little. She's very sensitive and not allowed to cum.\"\n\n\"Well, of course she isn't.\" The woman said and waved the subs away and walked up to me. I could feel her staring at me, but dared not make eye contact. Her breasts were in front of my face, not exposed, but large and right there.\n\n\"So, you are Jill's toy. So young and stupid. Keep your mouth shut and learn to control your needs girl. Now, open wide.\" She said, and I opened my mouth wide.\n\n\"Wider.\" She instructed, and I opened so wide my jaw hurt.\n\n\"Now, I'm going to put this apple in your mouth. Do not lose it no matter what happens.\" And she shoved it as far as it would go, stretching my jaw open a little farther. My teeth sank into it and I held it there. \n\n\"I despise little toys like you. New subs. Untrained. Undisciplined. So much work. Why Jill would want to take on the effort is beyond me. If you cum, your punishment will be horrible. If the need to cum is too much, pinch your left hand with your right and focus on something else. Let these nice, trained submissives play with your slutty little body, and do not cum.\" She grabbed my nipples and pulled them until I was groaning in pain into the apple. Then she released them.\n\n\"Candy, do not let her cum. Ice her down every time she looks like she is going to blow.\" Mistress Clarice told her. \"It's Jill's special day. I don't want her angry, and neither do you lot, if you know what is good for you.\"\n\nThen she turned back to me. \"You truly are a slutball, aptly named.\" And she walked away.\n\nAnd the hands came back immediately. My ass was penetrated by a finger, and fucked by it. My pussy lips were pinched and pulled. My clit flicked and nibbled and tugged and caressed and blown on. My nipples were pulled and twisted and tugged. My legs were shaking the need to cum was so bad. I pinched my hand so hard I thought it would bleed. I was crying a stream of tears I wanted to cum so bad, and fought it so hard. \n\nWhy were they so mean!? This was horrible! I was crying and squealing around the apple. They laughed and played my body closer and closer to the orgasm that was building. And then they stopped, and I screamed into the apple and they laughed as Candy pressed ice against my clit and froze it!\n\nI lost that edge, but she wouldn't stop until I was so numb from the cold ice, I couldn't feel anything there anymore.\n\n\"You are doing really good princess. Let's go again.\" She laughed and they all started in again. \n\nThis time one of them got a carrot out of the refrigerator and started fucking my ass with it. With me standing in my position, they couldn't do it very well, but they got it in and fucked and it was unpleasant and cold. It actually hurt, more than feeling good, which was good because it was turning me off almost enough to counter Candy playing with my clit again. \n\nAlmost.\n\nMy teeth were sinking deeper into the apple and I had to fight to keep my jaw open, so I wouldn't bite through it. Apple juice and saliva were dripping down my chin and plopping to the floor. \n\nWithin minutes, my legs were shaking again. I whimpered and groaned, as I pinched the back of my hand again, digging my nails in to increase the pain. \n\n\"MMMMMMMMMMMMMPPPPEAZZZZZ\" I screamed into the apple. I started thrusting forward to meet her grip on my clit. And I knew I was done. It worked for a few seconds, the pain in my hand, then it didn't, and I was on the very edge of a powerful orgasm when Candy ordered them all off except carrot girl who kept fucking my ass.\n\nShe applied ice to my clit again, and I grunted in pain as the coldness numbed the feeling down there.\n\n\"Okay girls, that's enough for now.\" I heard Sue say, and I looked up pathetically through my teary eyes to see Sue come in and shoo them all away. \n\n\"You are not in charge here Sue.\" Candy said as she held the ice on my clit. I was squirming to get away, it was painfully cold now.\n\n\"I live here Candy. Do you really want to go there?\" Sue said back to her, a slight edge in her voice.\n\n\"Yeah I do.\" Candy shot back and at least the ice left my tortured clit.\n\nCandy stood up and got in Sue's face. \"You really want to do this Candy?\" Sue said, not budging an inch.\n\n\"Oh yeah, I really want to do this.\" Candy said and shoved Sue with both hands.\n\nSue looked like she was going to fall backwards, then she grabbed Candy by the wrists and pulled down hard, using the momentum to get out of the way as Candy fell to her hands and knees on the floor. She kicked her ass quite literally with the side of her foot and then moved in front of me facing the subs.\n\n\"Leave her alone for a while. I mean it.\" She said to everyone else and they pretty much backed down.\n\nShe turned to me then and smiled apologetically. \"You okay in there Slutball? It won't be much longer. We are finishing dinner and the Dominants will start giving you their gifts soon. I wish I could take off your heels, but you look so sexy in them.\" \n\n\"Now, let me clean up your face okay? I wish I could take out the apple, but ... you understand how it works right?\"\n\nI nodded, though in truth I only guessed it was because a dominant had put it there, and Sue was a submissive, so she couldn't do anything about it.\n\nSue kissed me on the nose. And leaned in and whispered to me. \"You are so fucking sexy. The bowl is under your slutty little cumbox and it's near to overflowing with your secretions. If you weren't a virgin, the amount of lube your body produces would allow you to take the biggest monster cock dildos they make.\"\n\nI shuddered, and she kissed my earlobe. \"These cunts will probably be all over you again as soon as I leave. Just do what you are doing. Don't cum, and you will be rewarded so beautifully, that I swear it will all have been worth it. I love you my little sister. I know this is tough, but I promise it won't be much longer. And honestly, the subs are worse than the Doms. They don't get to do this very often, so they save it up for a long time, and they really do want you to fail.\"\n\n\"Don't let that bitch Candy win. She would be punished as well, but she likes being punished because she's a stupid pain slut. She would get off more on seeing you punished. She's always mean to new subs, thinks its her job to bring them in. She doesn't get it. Her Master is rough. I mean, think about the cane and imagine that is a tickle. He's sadistic. I don't like him, and Mistress won't let him play with me because of his proclivity for pain without purpose. Master Rod.\" Sue laughed.\n\n\"I know, sounds like a porn name. But if you hear his name, be on your best behavior, don't give him a reason to punish you at all. Even his hand hurts like a mother fucker. Now, it's been over two hours since you got here, and we may run over the three you usually have allotted. Do you need to make any phone calls?\"\n\nI nodded. I was supposed to pick up my friends and go to the mall. But, at least I didn't have to call my Dad.\n\n\"Okay, I will take you back in a little bit to make whatever calls you need to make. You think you could stay an extra three hours? Mistress can talk to your Dad and make a work excuse if you need her to.\"\n\nWell, there was no way to tell her about the mall with an apple in my mouth. I just gave an exasperated breath and nodded and mumbled.\n\nSue laughed sweetly. \"You really do look adorable. I can't wait until we are alone again. Don't cum baby, ten more minutes at the most. Candy is really pissed now because I threw her on the ground. She will probably try to make you cum with everything she has. Do what you need to do, scratch or pinch yourself, don't draw blood if you can help it. Fight that orgasm and I promise you kitten, it will be so worth it.\" Then she kissed my cheek and walked over to Candy. \n\nThey whispered for a while. Clearly not a civil conversation by the look on Candy's face.\n\nSue walked away, clearly not pleased with the conversation. Candy smiled at me maliciously as she left. She waved in the other subs and they came over to me in a group.\n\n\"Whore, get your tongue in her little asshole. Fuckmeat, put yours in her little virgin cunt. Cocktoy, use your mouth on that delicious little clit. Cuntmouth, left nipple. Cockhole, right nipple. And I will have a little face time with the princess.\"\n\nAnd it was an instant nightmare. First, the names were ... well worse than Slutball, I suppose. Just hearing their names made me shiver. Whore grabbed my ass cheeks and spread them wide, and I was swooning as soon as her long tongue pressed up my asshole. \n\nCocktoy and Fuckmeat took a while getting in position to attack my pussy with both their mouths and I must say, I did not help them at all. Even when they started slapping my inner thighs trying to get me to spread farther to accommodate them, I held my position and locked my knees to fight it. But, then they called in back up and Pussy and Dickface were pulling my thighs apart so Fuckmeat could get her head in between them to give Cocktoy room to flick my clit with her tongue.\n\nCuntmouth and Cockhole had no trouble grabbing my naked breasts and sucking my nipples and chewing them and flicking them with their tongues. They weren't synchronized, but they both did a lot of the same things, albeit at different times.\n\nI screamed into the apple, and my teeth sank a little deeper, and I despaired that I would cum and bite through it instantly. Tears of anguish flooded down my cheeks within seconds, once they got my legs apart. At least I delayed them several minutes with my stubbornness. I was digging my nails into the back of my left hand, if it wasn't bleeding, it was sure to at least leave visible marks, but that was the least of my concerns, at the moment.",
        "After edging ten times yesterday and all the dreams and the four edges I had in the kitchen, my body was ready to explode. I screamed and begged for mercy, but there were no coherent words from my mouth, nor sympathy from the subs who attacked me. Then, as if waiting until I could barely handle another attack on my body, Candy started in.\n\n\"You are so young and pretty.\" She whispered in my ear. \"Everyone is so taken with you. All of our Masters and Mistresses are jealous of Mistress Jill for finding you when she already had such a perfect sub in Sue. We will all most likely be punished tonight for just not being you.\"\n\n\"So, understand Slutball, you very young, very sexy, very tasty little sex thing, we despise you right now. We aren't trying to make you cum because we are attracted to you. We are trying to make you cum, so you will be severely punished. We are trying to make you cum, because we want to ruin this perfect day for Mistress Jill, so we might find some sympathy from our Dominants for not being you. Because you are flawed. You can't control your orgasms. You live for your own sexual desires, not for your Mistress.\"\n\n\"Just cum for us and it will all be over. Mistress Jill will beat your ass purple and we will all watch and enjoy that we made that happen even while our own Dominants punish us for doing it to you. Cum little slut. Cum for us, you sexy little bitch.\"\n\nI screamed and shook my head violently. I looked up at the ceiling begging for an end. I was on edge constantly... fighting and fighting against that orgasm that was ready to burst through my body. I screamed and cried and shook... And ... Blackness overtook my mind.\n\nThe next thing I knew, was the strong smell. It permeated my nostrils and was rather vile. I woke with a startled jolt.\n\n\"Easy Slutball.\" I opened my eyes and saw Sue leaning over me smiling. I still had that damned apple in my mouth.\n\nShe giggled as tears flowed down my cheeks. \"Easy baby, it's over. You beat them. They are all very upset, and will likely be punished for not making you cum.\" She laughed softly. \"Of course, they would have been punished if they had made you cum. Not really fair. I hate that part. It's not very nice. Setting the subs against each other from the start. The Dominants have their reasons for it I suppose. Mistress explained it once, but it seemed petty to me.\"\n\n\"You didn't cum. You blacked out fighting it. Mistress is so proud of you. All the other Masters and Mistresses are congratulating her for having such a wonderful slut.\"\n\nI just noticed that we were alone in her bedroom. I was laying on the floor, my head on Sue's lap and she was brushing my forehead with her thumb in a very soothing manner. \n\n\"The rest will be much easier I promise. You will get so many lovely gifts. There are eleven dominants here besides Mistress. That is their group, twelve Masters and Mistresses that get together once a month to rule the world.\" Sue giggled. \"I joke, but sometimes I think that is their true goal from the conversations they have.\"\n\n\"Each one will give you a gift, you remember what we told you. Keep your feet up and crawl. Most gifts you will carry to Mistress in your mouth. Do not use your teeth. If there are teeth marks in a gift it is very frowned upon. Mistress will tell you what to do when you present each gift.\"\n\n\"Now, you need to make a phone call or two and I need to get permission to remove this apple that you so cleverly held onto when you passed out. I don't even know how you managed that, but everyone was amazed that you did. You have made Mistress so happy. She is absolutely beaming about you.\"\n\n\"I'm going to lay your head on a pillow. You just lay here until I get back.\" Sue smiled and gently moved a pillow under my head as she extracted herself from under me.\n\nThen, I was alone again. I cried. I still felt like I could cum at the faintest whisper of a touch. I wanted to cum so bad it hurt me all over. \n\nI didn't have long to think about it before Sue returned with Mistress Clarice. Mistress Clarice was smiling at me, which I certainly didn't expect. She leaned down and told me to open wide and took the apple. \"I'm going to have it glazed for your Mistress.\" She told me. \"Well done, Slutball.\" And she patted my head and left.\n\nI worked my jaw up and down, left and right. It was quite sore. Sue helped me to sit up. Then she helped me to the couch. She handed me my phone.\n\n\"I can stay.\" I said weakly. \"But, I wish I couldn't. I already had plans to go to the mall, so my Dad isn't expecting me until about ten o'clock. I just have to call my friends to tell them we have to do it another time.\" I explained.\n\nShe helped me to stop crying and clean up my face a bit before I made the call to Cat to tell the others I had an unexpected problem at work and couldn't make it tonight. She was disappointed, but understood.\n\n\"Okay Slutball. Let's re-apply your makeup. You are a mess baby. I want you to be so sexy and pretty for the gifts.\" Sue said and helped me to sit up straight. And she cleaned off all the old make up and put on a brand new application of everything.\n\n\"I don't know if I can handle much more Sue. I need to cum so bad. If anyone touches my clit, I swear I don't think I can stop it.\" I told her as she did her magic.\n\n\"You must Slutball. Keep fighting it. There won't be anything like before, but you will still be played with. I can ice you down if you want.\" Sue offered as she made my eyes bigger again.\n\n\"You better. Whatever you can do. I'm too close.\" I whispered.\n\nSue smiled at me sympathetically. \"Okay, as soon as this is done kitten.\" And she made up my face again. When she left, I looked in the mirror on the wall and it was as if I hadn't just cried and drooled all over my face for the past half hour or more. \n\nShe came back smiling, with a glass of ice water and gave me the glass after extracting one cube to ice down my clit and pussy and nipples. She was a lot better at it than Candy. She numbed me down so quick, there was a lot less pain to get there. I was so dehydrated, I drank the glass of water in seconds, just gulped it straight down without taking a breath.\n\n\"You want another glass of water baby?\" Sue asked me as she took the cool glass from my hand.\n\nI nodded my head. I was afraid to talk. My voice seemed so lost inside my body.\n\n\"Wait here, I'll be right back.\" She leaned in and kissed my lips softly.\n\nI really did not expect this. I did not want this. I thought it would be ... just me and Mistress and Sue and Courtney and ... Julie. I groaned. Yes, Julie must have seen at least some of this. I wondered if it turned her on, or made her want to save me. If the roles were reversed, it would have taken all twelve of them to hold me back from saving her.\n\nBut, she enjoyed seeing me used. She said so. She wanted to use me too. And yet, we were still friends. We could talk about it, and when we weren't here, in this place, it was like that avenue was closed to her. It had to be, or we wouldn't be able to be friends. I'd just be her ... toy.\n\nSue came back, and I gulped half of that glass, took a breath and downed the rest. I needed it. That ice cold water helped to calm my body, as well as replace all the lost fluids.\n\n\"Ready?\" Sue asked when she took the empty glass from my hand.\n\n\"No.\" I replied. \"But, I never will be.\"\n\nWe exchanged a smile, and she helped me to my feet. I was permitted to walk back out to the kitchen. Tiny sexy steps.\n\nBy some mercy, a very long yoga mat was placed on the kitchen floor. I would be able to crawl without killing my knees. That was an unexpected kindness from someone. I'd have to find out who and thank them later.\n\nSue showed me where to take Service Position Two and I was on my knees, leaning back and holding my ankles, facing the ceiling and curving my back as much as I could while holding my position. My breasts and pussy thrust forward like an advertisement to touch them. \n\nGiggling. Whispers. Flashes of cameras. I heard it, I saw it, I blocked it from my mind, and focused on the ceiling.\n\nI didn't catch what was said, just words like slut and bitch and whore here and there, I was sure they were referring to me. Then, I couldn't see the ceiling anymore. A woman's face looked down at me. 'Mistress Clarice' was announced, though she was the only one I knew by face. She leaned down and spit in my open mouth, smiling at me as I swallowed. It was really gross, but I think I hid the distaste from showing. \n\n\"Slutball, congratulations on your collaring. I have known your Mistress for over ten years now. I am surprised, and pleased for her to have taken another slut under her wing. You are very lucky to have such a kind and intelligent Mistress. You are also very beautiful and young and compliant, if not well trained.\"\n\n\"Thank you, Mistress Clarice.\" I answered, remembering I was to thank each compliment, I assume no matter how back handed they might be.\n\n\"I have brought you this gift, as your Mistress told me she intends to pierce your cute little nipples and your needy little clitoris.\" And she showed me a box with clear plastic over the front. Inside were three rings, two the same size, one a bit smaller. They looked thicker, by far, than an ear ring. Dangling from each was a chain and attached to each chain was a bell that looked to be made of emerald green glass.\n\nOn the side of the three rings, were a small ring with three clasps, and three emerald green gems that looked very large and I gasped at how beautiful they looked. \n\n\"Oh my God, Mistress Clarice, they are so beautiful. Thank you for your generous gift.\" I said, my eyes transfixed on the large gems.\n\nMistress Clarice giggled, which seemed out of place. \"Oh Slutball, you are a treasure. I can't wait to see them dangling from your body. They are quite heavy. Now open wide.\"\n\nI opened my mouth as wide as I could, like when she said wider to put the apple in. It hurt, but it was more than wide enough for her to fit the box in my mouth. Now, came a bit of a problem. No teeth.\n\nAnd the box was quite heavy. Not like fifty pounds or something, but it was probably close to ten. There was no way to do this without using my teeth. I knelt there thinking about my situation for a moment. Was this all just an impossible task? Maybe there was no way to do it without being punished.\n\nThey giggled at me as I knelt there with the box upright in my upturned mouth. Fuck! I thought. This was going to be hard.\n\nI held Service Position Two and holding my ankles up to balance on my knees, I started crawling, just on my knees. It was very difficult and I had to stop on my toes every two knee steps to balance. There was whispered conversation, laughter, and groans of exasperation at how long I was taking to crawl to my Mistress. \n\nMistress Jill had moved into the living room, thankfully. She sat on a chair facing the kitchen. A mercy. I wouldn't have to crawl as far. It still took a very long time, and required a great strain of effort on my part to get there. I was completely exerted when I arrived in front of her. I only knew she was there because my breasts touched her knees. My eyes were focused on the ceiling because I had to keep my head back to balance the box.\n\nShe leaned over and smiled down at me, taking the box from my mouth.\n\n\"This generous gift is from the lovely Mistress Clarice.\" Okay, I know that sounds stupid. I know it sounds corny. And nobody told me to add adverbs and adjectives to my statements, I totally improvised and did that all on my own. But, apparently, it was well received, and Mistress Jill smiled and nodded at me with approval.\n\n\"They are quite beautiful. I can barely wait to see them on your sexy little body. Remove your shoes Slutball.\" She said with a grin.\n\nI leaned back and unstrapped my shoes with a bit of difficulty. I heard snickers from the audience that stood and knelt around us. I blushed, but eventually I got the shoes unstrapped and off my feet and was glad to not have to concern myself with the scuffing anymore. It would be so much easier to crawl now.\n\n\"Thank you Mistress.\" I smiled, and looked at her with the shoes in my hand, unsure what to do with them.\n\n\"Just set them under my chair, Slutball. Then, hurry back to your position. Mistress Gabrielle is waiting patiently for you.\"\n\nI placed the shoes as instructed, and crawled quickly now, as I could let my toes hit the floor, back to where I turned to face Mistress Jill, and took up Service Position Two once more.\n\n\"Slutball, what a leaky thing you are.\" Mistress Gabrielle said as she stared down at me. She spat in my mouth, as Mistress Clarice had done. I guess this was a thing. I swallowed. \"When I heard about you, I had my doubts. So young. So na\u00efve. And here you are, so stupid. Eighteen years old, your whole life ahead of you and you are giving that to someone else. Well, no doubt your little cunt rules your life. So, I bought you this, the perfect gift for a slut like you.\"\n\nI didn't understand what she was showing me. It was like metal shorts. I guess she saw the confusion in my face and she laughed. \"It's a chastity belt, Slutball. You need the key or a talented locksmith or a very talented person with bolt cutters to get it off. And I'm betting you will never have the key.\" She giggled and mercifully put the heavy package in a bag and put the string handles of the bag in my mouth.\n\n\"Fank u Mithtwith Gabwiell\" I said through the strings in my mouth and crawled much faster now to Mistress Jill who waited with a smile to take the bag from me.\n\n\"A very thoughtful gift from the beautiful Mistress Gabrielle.\" I said as she took the gift from the bag to look at it closely.\n\n\"Very nice Gabrielle.\" And I realized, they were all in normal talking distance from one another. The announcements of who gave what, were really just to mock the fact that anything I was given, belonged to Jill. Because I belonged to Jill.\n\n\"Well, maybe we can work something out when you go to college after all.\" Mistress Jill laughed at me.\n\nI smiled at her, but I hoped she wasn't serious. I had an idea what that was and ... just the hygiene factor seemed... well, prohibitive for long periods of time. \n\n\"Run along now Slutball, I see Mistress Jade is waiting for you.\" Jill winked at me.\n\nShe was doing me a great favor. I would hear each Mistress or Master's name thrice and say it twice. It would help me to remember them, beyond today.\n\nI crawled quickly figuring everyone had seen my cunt and ass so much today, there was no point being modest now. Better to get this all over with as quickly as I could manage. Returning to Service Position Two... rinse and repeat.\n\nWhile, I could go into a great deal of detail on each Master, each Mistress. What they looked like, what they wore, what they said, and my impressions upon them, let me summize.\n\nOn first impressions alone, I kind of liked Mistresses Clarice (after the apple), Petra, Catalina, Nancy and Beth as well as Master Damion. I did not form a strong opinion on Mistress Gabrielle or Mistress Jade. I blushed at seeing Master Brian, he was the hunky one who had joined Mistress in breaking me a few days ago. And Master Rod? Yeah, I didn't like, trust or respect him. But, I was a compliant little bitch when he smacked my ass far too hard with his gift. Mistress Rowena seemed sadistic, maybe worse than Master Rod because of the way she seemed to understand a woman's pain/pleasure spots better than a man. \n\nThe gifts? After the first two, which I mentioned already, from Mistress Jade, who was a beautiful Japanese woman, a silver butt plug with a real emerald gem in the handle. Butt bling? It was beautiful, but the plug was wider than any I had taken before.\n\nMistress Petra had gifted me a set of three clover clamps. A chain attached them, though the bottom chain could be removed with a clasp. I got to feel them right away and I swooned in pain. Mistress Jill was kind enough to not put the one on my clit. I think I might have vomited from the pain. And after two more trips, she took the ones off my aching nipples and I bit my lip to hold back the scream of unexpected pain as the blood ran back into my nips.\n\nMistress Catalina provided a speculum. She said so Mistress Jill and Sue could look at my hymen for hours on end before deciding how to take it away.\n\nMistress Nancy gave me my first magic wand. I had to beg to not be forced to cum after less than three minutes of it touching my clit.\n\nMistress Beth gave me yards and yards of very soft, emerald green rope and several sizes of like colored carabiners. I had to carry it all on my back to get it to Mistress. It was a quite large and heavy stack of ropes. I was told I would experience suspension soon. I didn't know what that meant, I assumed dangling from rope somehow. Pretty much, as it sounds.\n\nMaster Damion seemed so nice. His smile was so pleasant. He barely spat in my mouth. Almost like he did it out of obligation and despised the practice. His gift was a very lovely outfit of emerald green. Yeah, this was a thing too. The emerald green theme. I guess Mistress Jill decided that was my color, and told them all as much. A lovely choker that attached to a boned corset, thigh highs, matching heels, and panties. It even had zips that could cover my breasts, though the corset cupped them up on a shelf like the one I wore now. There was no time to try it on, but it was quite beautiful, though I'd never wear it in my normal life. The choker had a very sparkly emerald gem in it.\n\nMaster Brian said some kind words about our previous engagement and how good I looked on my knees. His gift was my very own flogger with a jeweled handle shaped like a phallus. The handle was silver, and the suede strands were ... you guessed it, green.\n\nMistress Rowena said hateful things. Not just taunting or degrading like the others. Downright hateful. How a good slave should never look better than their Mistress, and she would carve my face and body up to teach me humility, if I were hers. Her gift was appropriate to her apparent fixation. A pair of silver knives with jeweled handles.\n\nMaster Rod. He's an asshole. He gave me a pair of paddles. One had SLUT in some green metal that protruded from the paddle. The other had BALL in the same green block letters. He demonstrated them for my Mistress with a whack on each ass cheek that left the word SLUT BALL on my cheeks, me in excruciating pain, tears dripping down onto the floor, and yet I thanked the bastard.\n\nHe did not get a single adjective though when I presented them to Mistress. I simply sobbed. \"A gift from Master Rod.\" And she patted my head sympathetically and laughed softly, telling me how proud she was of my handling it.\n\nAnd, it was now officially past the time I should be leaving. But, I still had two and a half hours to go before I had to be home.\n\nI got to kneel, sitting on my calves, next to Mistress. My ass was too sore to sit in a chair anyway. And then the other guests were permitted to come congratulate us. \n\nBarb smirked at me and said she wished she had the chance at a sexy slut like me as her subby toy. She offered to tat me for real, if Jill ever desired it, and said she would do it for free.\n\nDarla knelt down in front of me and smiled at me, looking me in the eyes. \"You think you will forgive me some day?\" She was a very different person. I shrugged, and she laughed. \"I wouldn't. I envy you though. Mistress Jill is truly incredible. You don't know how many little sluts would love to be where you are right now.\"\n\nSome others I recognized. Some I did not. Between Sue and Jill, they introduced me to them all, though I would never remember half of them if I saw them again. A few brought gifts or promises to do this or that for Mistress Jill free of charge. A lot of bargaining went on in her group apparently, bartering this for that. It was amazing, the craftspeople that were at this function.",
        "Free waxing for life was offered by her beautician. For me of course. Jill would still pay for hers.\n\nCustom furniture. Clothes. Candles. Things you wouldn't even think of. And some gifts that were handed to me, to hand to Mistress.\n\nWhen it was through... the procession of well-wishers, Courtney showed up and patted my head. \"Jesus Christ Carrie, that was intense! Gave me some great ideas though.\"\n\nA few people frowned at her. She was the only person who had called me Carrie since the ceremony in the basement. She just shrugged. I have no idea how much money or power her dad has, but the girl has balls like he's a billionaire. \n\n\"Anywho,\" Courtney went on, \"I had no idea until hours ago, that this thing was gonna happen. So, I am embarrassed to say, I do not have a gift for you. I thought about it a bit, I mean, I'm not obligated of course, but ... these are the keys to my penthouse in South Beach.\"\n\nI looked at her and shook my head, and she laughed. \"No you silly bitch, I'm not giving it to you, just unlimited use of it. Anytime you want to get some sun and get away, just fly down and you have a place to stay. Of course, you better at least ask me if I want to come along, or I will find a way to punish your cute little ass.\"\n\nAnd then my world came to a halt, because I saw Julie for the first time in all this craziness. She smiled at me. \"God that was so fucking hot. You look so ... ugh.\" She didn't know or care about protocol, she just pulled me into a hug and I hugged her back and the rest of them faded out of existence for a few moments.\n\n\"I don't have anything to give you, but it seems to be expected.\" She giggled. She reached behind her neck and I pushed her away.\n\n\"Absolutely not Jules.\" I told her a bit too loud and the house got quiet.\n\n\"If we are ever not friends again, you can give it back.\" She smiled, and she placed her grandmother's necklace, the one she always wore, the one with a tiny little teardrop green pendant around my neck.\n\nI started crying. \"No, Jules, it's too much.\" I begged her to take it back, but she insisted, and Mistress thanked her with a hug. It was the only gift I was permitted to keep.\n\nFinally, I was allowed to eat. From a dog bowl on the floor with everyone watching, so I added cunt gloop to my other bowl. \n\nSue cleaned me up, and we had drinks. I didn't want to get tipsy in this crowd, so I sipped slowly and only consumed a single glass of delicious wine.\n\nAround nine o'clock, five hours after I arrived, the guests started making their way out. And at nine fifteen, it was down to who I hoped it would be the entire evening. Mistress, Sue, Courtney, Julie and me.\n\n\"You performed wonderfully, Slutball.\" Jill told me as I knelt there, wondering what would happen next.\n\n\"You want to cum?\" She asked. The smile on her face told me she knew the answer already.\n\n\"Yes Mistress.\" I begged.\n\n\"Okay, let's start your lessons. I am thirty-five years old. Sue is twenty-nine. And you, my little slut are just eighteen. In order for you to get an orgasm while serving me, you will need to provide me with seventeen orgasms and Sue with eleven.\" \n\nI groaned. \n\nJill laughed. \"Just kidding, Slutball. I love seeing desperation on your face. However, you do need to give us each one... assuming Julie and Courtney want one... before you get yours.\"\n\n\"You know I do Jill.\" Courtney laughed. \"Any particular order?\"\n\nJill smiled at her. \"South Beach, the weekend after Thanksgiving. Julie, you are invited, and I will provide for everything else. Be my guest Courtney.\"\n\nCourtney was wearing her cheer outfit, Julie was dressed the same. They were apparently in a hurry when they heard what was going on. So, she just dropped her panties and spanks and draped her skirt over my head. \"Service Position Two I believe is your right place Slutball.\" Courtney giggled and I assumed the position and shoved my tongue up into her twat.\n\nShe rode my face and made me work for the orgasm as she smeared her juices all over me. When she finished, I knew my face was a mess. She came really hard, and juiced a lot.\n\n\"Now lick me up so I can go home, Slutball. I have a lot of homework to do tonight.\" Courtney instructed, and I licked her clean, and she dressed and hugged Julie, Sue and Jill goodbye.\n\n\"Julie?\" Jill asked.\n\n\"I...\" Julie looked at my cum smeared face, and I could tell she was turned on. \"Oh fuck it. I'm sorry Care Bear, but when you look like that, I just can't hold back.\" And she stripped off her panties and spanks and did the same as Courtney. She mounted my face.\n\nShe didn't rub all over like Courtney. She just stood there and told me to take my time. I licked and sucked and played with her pussy with my mouth, lips and tongue until my tongue was sore. I brought her to the edge twice, before she begged me to 'finish it, you sexy bitch.' And I did. And she came really hard.\n\nAnd then she kissed me. She had to taste not only herself, but Courtney on my face and tongue and still, she kissed me. And I kissed her back, and it was passionate and raw. And we made out and held each other for hours... well minutes, before Jill cleared her throat loudly to signal it was time to stop. And blushing, we pulled apart.\n\nMistress stood and lowered her tights to her knees and bent over a chair with her ass in the air. \"Go ahead Slutball, you are close, only two more to go.\" And she patted her ass. \"Lick now, good girl.\" \n\nAnd I thought that odd, but I crawled behind her, face in her ass, like she intended, and dove into her sweet pussy with a violent attack of mouth and tongue. \n\n\"That's it Slutball, show your Mistress how much you need to cum. I'm not going to make it easy bitch. Get your slutty face in my ass.\" Jill said excitedly.\n\nI grabbed her ass with my hands and spread her cheeks, and licked at her asshole. She loved it, but it wasn't getting her off any faster, so I went down and sucked on her clit. This forced my face to part her labia and placed my nose right at her anus.\n\nI tongue fucked her pussy. I sucked and nibbled on her clit. I went back up and tongue fucked her ass again. I sucked and tongued and nibbled and licked all up and down her body, exhausting my frenzy until I had to slow down and work more methodically because my mouth was getting tired.\n\n\"Why are you slowing down Slutball? Tired already? Sue, help Slutball find her motivation.\" Jill said. Her breath was labored. I knew she was enjoying it. But, either she was holding out intentionally, or was just requiring more work to get over the edge.\n\nSue started playing with my pussy. \"Easy way?\" She found my clit and pulled it, and I started sucking feverishly on Mistress' cunt again. \"Good Slutball, you won't like the hard way.\" Sue giggled as she played with my clit. She tugged it. She flicked it. She rolled it with her finger tip. If I slowed down at all, she slapped my ass, but not too hard.\n\n\"Courtney was right about one thing for sure Slutball, you are a natural cuntsucker.\" Mistress said, and she came finally on my face.\n\nShe stayed until I licked her clean, and then stood and pulled up her tights. \"All yours Sue, Julie and I have some things to discuss. You can take Slutball to the bedroom if you like.\"\n\nSue giggled happily and took my hand. \"Come on, Slutball.\" And she led me back to the bedroom.\n\nShe shut the door. \"What are they talking about Sue?\" I asked when we were alone, feeling a little apprehensive about it. \n\n\"Nothing to worry your little head over sexy girl. Just ... let's do this, you lie down, and I'm going to straddle your face and play with your pussy. After I cum, you get to cum, okay baby?\" Sue smiled and pulled me onto the bed. \n\n\"But Sue, I can't make you cum. I already know that.\" I frowned. \"Is this a trick? A cruel game?\"\n\nSue giggled. \"Oh Slutball, don't you ever change baby. You are so sexy and cute. I am allowed to cum, sexy slut. You just do your magic. I am allowed to cum, as much as I want tonight.\"\n\nSoon I was on my back looking up at Sue's pussy as she lowered it to my mouth, spreading her knees until it rested on my face. True to her word, she started playing with mine, edging me and stopping while she held back for a huge orgasm on my face.\n\nWhen she came, she told me not to stop. And she went down on me. I came. Almost instantly. It was a hard cum and an embarrassingly wet cum. She loved it. And we stayed like that. We 69'd ourselves into exhaustion and I lost track of my orgasms after three. Sue later told me she thought I came twelve times, one for each Dominant, but I certainly wasn't thinking about them when it happened.\n\nFor her part, Sue swore she came fifteen times. And since she keeps track of everything in her head, I believed her. \n\nWe lay there head to foot, side by side, catching our breath for a long time after we had finished. \n\n\"I love you Slutball.\" Sue giggled and held my hand.\n\nI giggled in response. Sue sighed. \"Say I love you too Sue\"\n\n\"I love you too Sue.\" I repeated in a silly voice.\n\n\"No Slutball. Say it like you mean it.\" Sue said and squeezed my hand.\n\n\"Sue, I love you.\" I said, with a bit more sincerity. But, I didn't really love Sue. I didn't love Jill. I loved Julie, but I wasn't even sure if that was a romantic love or friendship with sex added.\n\n\"Good girl.\" Sue smiled. \"I know this is new to you. Mistress and I will be very forgiving for a while.\"\n\n\"We are a family now. Mistress, you and me. It isn't just going through the motions. You need to let yourself feel that love and devotion. It isn't about being a robotic slave who does what she is told. You need to desire to do what is expected of you because it pleases those you love.\"\n\n\"I know you have a special place for Julie in your heart. That is not going to interfere with us. She is very curious about all this, and we both like her. She adores you and is a great friend. Mistress and I might push her a little sometimes to use you, like you like to be used, like she is tempted to do.\"\n\n\"Just ... keep your heart from falling for her too far, for a while. I know it is hard. Separating this avalanche of sex from love, when your whole life you were probably taught to equate the two. Now, feel free to fall head over heels for me kitten. I know I am going crazy for you.\"\n\nShe giggled and turned around, so we could lay on our sides and face each other's eyes instead of feet.\n\n\"When you leave here, tonight and every day, I want you to know that Mistress and I care about you, we love you. We want you to know that our home is always open to you. If you ever feel like you have no place to turn, that front door is always an option. I so wished you could live with us. I'd be lapping your little kitty every night, and you'd be lapping mine.\"\n\n\"Sue, I ... today was surreal. Was all that... those gifts! They looked, some of them, really expensive.\" I interrupted her home fantasies because it was getting a little uncomfortable.\n\nSue smiled. \"You bet your ass they were expensive. You want a rough assessment of the value of your gifts from today?\" She giggled. \"It's a big number. Probably as much as you will owe Mistress for your training. That is why I said not to worry about it. First of all, you aren't going anywhere until Fall. We know you are good for your word. Second, you are going to make her a lot of money, I know it. She knows a lot of art dealers and if she pushes your work, they will sell it. If people like it, you might get your own showcase. I did once. It went really well.\"\n\n\"I don't mean to brag, but I have a painting in the White House. It's in a guest bedroom. I've never been there to see it, but Mistress assured me it is there. How exciting is that?\" \n\n\"Wow, that is impressive Sue.\" I smiled, truly impressed.\n\nWe gazed at each other for a while. \"Sue, why does Ji...Mistress downplay her wealth? I mean, this is a nice house, but from what you tell me, she could live in a mansion like Courtney.\"\n\nSue smiled. \"Because this is all we need to be happy kitten. We love it here. We have everything we could want, right here. I'd be bored if I didn't do the cleaning and cooking for her. I get to practice my art when my chores are complete. We read together by the fireplace. I know you miss a lot of our normal time because everything is so rushed to get you trained.\"\n\n\"If you could be with us on Christmas, you'd never know we were... alternative. And we aren't old enough to be your parents really, I guess technically She could be, but not me. And well, I can't have children and the idea of Mistress being pregnant is kind of absurd. So, you are like the perfect substitute.\" She sighed.\n\n\"I wish you were homeless, Slutball!\" She hugged me and laughed.\n\nI laughed with her. \"Well, that's a terrible thing to wish on a person.\"\n\n\"Okay, let's get you naked so we can get you dressed.\" Sue smiled. \"I know you have to go home. I so wish you didn't.\"\n\nAnd she helped me get the corset, and stockings off, which were the only two things I was wearing anyway. \"I'll have it cleaned and bagged for you. It's kind of your wedding gown after all.\" Sue giggled.\n\n\"Now, tomorrow, I know you have to leave early, so get here as soon as you can.\" Sue smiled as she carefully laid out the corset on the ottoman.\n\n\"Oh, yeah, Mrs. Lane is letting me skip counseling tomorrow since I am going to the session, so I can be here a half hour earlier.\" I answered.\n\n\"Great. Same rules as ... you know. Panties and bra on your rear view until Mistress tells you otherwise. I imagine the embarrassment of that will fall off soon if it hasn't already, and she will just let you undress inside. But, it's her call, not mine or yours.\"\n\n\"Sue...\" I had a question burning for hours. \"Why are you Sue? I mean, your name? And Candy is Candy, and everyone else was... well... a derogatory name?\"\n\nSue smiled. \"Because Mistress and I were a lot like Julie and Carrie, before we were Mistress and Sue.\"\n\n\"So, it's not ... I mean required that they have those names? Like ugh.. I mean that girl really has to answer to Dickface.\" I cringed.\n\nSue laughed. \"I know. Aren't you glad I named you Slutball?\"\n\n\"Comparatively speaking, yes\" I laughed with her.\n\n\"Wait here Slutball, I'll go get your clothes, and see if they are ready for you.\" Sue said and climbed out of bed, walking out the door stark naked, like it was the most ordinary thing in the world.\n\nI didn't think I would ever get used to it. Being naked in front of other people. There is a reason for clothing. Not only that, but the way your naked body betrays your state of sexual arousal, just seemed like it would always be an embarrassment for me.\n\nShe returned directly, interrupting me from a million thoughts, mostly wondering if this was the right decision for me. It had been a shock at a minimum. This day. Being exposed and paraded around in front of all those strangers.\n\nSue tossed me my clothes and I pulled them on, glad to finally cover my body. \n\n\"They are ready for us. Let's go Slutball.\" Sue smiled.\n\nAnd we walked out together. Julie was crying. I was puzzled. Jill was hugging her.\n\nShe looked up at me through tear filled eyes. \"This is impossible.\" She said to Jill and pushed away and ran out the front door.\n\nI went to reach for her, but Sue held me back.\n\n\"Slutball, Presentation Position One.\" Jill said to me. I stopped and assumed the position, fighting the urge to run after Julie.\n\n\"Calm down Slutball. You will get to talk to Julie in the car.\" Jill told me as she walked over to me.\n\n\"I need you to hear this from me first. Julie is still your friend. She will always be your friend, if I am any judge of people.\" She began, and I felt my lip tremble. What was she saying?\n\n\"Hold your tongue, and I will tell you when you can speak.\" She cut me off before I could open my mouth to ask what was going on. \n\n\"There are things that are going to happen with our family, that Julie cannot ... or perhaps should not be a party to at this time. Courtney and I have an understanding, and she will be present for most, if not all of your training. Julie, on the other hand, brings nothing to the table for me.\"\n\n\"She is a disruption. She has your best interests in mind, but she can not add to your training. She has desires, like any healthy teenage girl, to be with you. Unlike Courtney, she equates the sex to romance. It's a problem. It will only become a bigger problem, as time goes on.\"\n\n\"I have explained it to her, and she understands it. I told you once that timing is important for the two of you. I hope you will believe me, and trust me that this is for the best, if the two of you have any hope of a relationship together.\"\n\n\"What are you saying Mistress?\" I asked, my lip shivering as her words sunk in.\n\n\"She is no longer allowed to come here for your training.\" Jill said. \"For a while at least.\"\n\nI gasped. I hadn't wanted her here at first, but now I truly did.\n\n\"She is still your friend. You can do whatever you like at school. You can see each other socially as much as you like. But, she cannot be your lover. It would be a distraction to where I need your head to be. You will date Karen in school for most likely the rest of the year, if you can maintain the relationship. She will date Chad, or not, that is up to her. She doesn't answer to me.\"\n\n\"You lied to me.\" I started crying.\n\nShe slapped my face hard. \"Try again, Slutball.\"\n\n\"You lied to me, Mistress.\" I said through clinched teeth.\n\n\"You swore you would never lie to me again Mistress.\" I sobbed.\n\n\"I did not lie to you, Slutball. When did I ever promise Julie would be welcome forever?\" Jill asked.\n\nI cried quietly. Mistress pulled me into a hug, surprising me. \n\n\"Shh. I know you just were getting used to seeing her here. This may not make sense to you now, but you need to keep this world separate from your relationship with Julie. At least for the time being.\"\n\n\"Now, a lot happened today. I'm sure you weren't expecting it. You get three questions before you go. And none about Julie.\"\n\nUnfortunately, Julie was all I could think about right then.\n\n\"Nothing? Come now Slutball, you must have some questions about the other Dominants and submissives in my group. Don't waste these opportunities.\" Jill admonished me.\n\n\"I just want to go home Mistress.\" I sobbed.\n\nJill sighed. \"You are home, Slutball. This is your home, until Fall. That is what you agreed to.\"\n\nMistress sat down and pulled me onto her lap, and Sue handed her a tissue to wipe my tears.\n\n\"Julie is beautiful and wonderful and fun. This is not always going to be beautiful and wonderful and fun. Slutball, you have to understand. I love you, I care about you. I am not doing this to punish you, I am doing this to help you. You won't be able to focus properly with her here. Even now, you can't think about anything beyond Julie. And that just won't do.\"\n\n\"Okay Mistress ...\" I sobbed. \"Three questions.\"\n\n\"Please tell me you will never lend me to Master Rod or Mistress Rowena.\" I said.\n\n\"That is not a question Slutball.\" Mistress responded.\n\n\"Will you ever lend me to Master Rod or Mistress Rowena or any of the other Dominants Mistress?\" I asked.\n\n\"No. Why would I lend them my beautiful slut? They have their own and they can get another if they so desire.\" Jill answered.\n\nI sighed a breath of relief. Sue giggled..\n\n\"However, with the exceptions of Master Rod and Mistress Rowena, who I understand your distaste for, I may have some of the others watch you from time to time, when Sue and I have to leave town. That isn't what I would consider 'lending' you to them.\"\n\n\"Will you ever leave me alone with the submissives again Mistress?\" I asked.\n\nJill laughed softly and hugged me. \"They were cruel to you, weren't they my sweet Slutball?\" \n\nI nodded. \"Yes Mistress.\"\n\n\"Well, unfortunately, that happens from time to time. You will be expected at the monthly meetings of our group, and the submissives are left to their own interaction, while the Dominants discuss a great many things. You will never be put in a presentation or service position that you have to maintain like that again, unless it is a punishment though. There is a pecking order of sorts. I'm sure you have gathered that Candy doesn't care much for Sue. And, unfortunately, that probably means she won't care much for you either. And a lot of the other submissives defer to her leadership, when the dominants aren't around.\"",
        "\"I'm going to miss her being here Mistress, I'm sorry.\" I wept.\n\n\"I know Slutball.\" Jill hugged me tight and let me cry.\n\n\"The gifts Mistress...\" I said when I stopped shaking. \"Were they for you or for me?\" I forced a smile.\n\nJill laughed sweetly. \"Yes.\" She answered. And we both laughed a second, before I cried some more.\n\n\"Now, I understand you will be a half hour earlier tomorrow. We won't have time to waste. You can stop hanging your underwear on your mirror and undress inside the door from now on. Sue will take you downstairs, and you will do exercises. I have a few things for you to take home tomorrow, so you can start exercising in the morning and not take up our precious time doing it here.\"\n\n\"You can still take Julie with you tomorrow, in fact I encourage you to do so. She is having more difficulty with her sexual orientation than you are, and I think the meeting will do her some good. I can't wait to hear what they have to say at these meetings. It sounds so PC.\" Jill laughed.\n\n\"How are you going to handle the Rebecca blackmail?\" she asked, and I didn't remember telling her about it.\n\n\"I'm going to appease her.\" I smiled. \"I'm going to get rid of her forever Mistress.\"\n\nJill raised an eyebrow. \"I won't have to dispose of the body, will I?\"\n\nI laughed. \"No Mistress. I have a much more self-deprecating, but painless idea in mind.\"\n\n\"Tell me about it after it happens, Slutball. I'm sure it will be brilliant, as everything else you do. You amazed a lot of people today. I'm not an idle flatterer, Slutball. There were some seasoned submissives in that room that could not have endured what you did. And none of them hold a light to your beauty today. You were absolutely sex in persona.\"\n\nI blushed and smiled. \"Thank you, Mistress.\"\n\n\"Thank you Slutball, you made me look very good in front of my friends.\"\n\nThen she kissed my lips softly. \"Go on and see to Julie.\"\n\n\"Thank you, Mistress.\" I stood and hugged Sue on the way out. \"Goodnight Sue.\"\n\nI walked out the door. Julie was standing by the passenger side. I couldn't see her face because it was dark. \"Jules...\" I started.\n\n\"Get in the fucking car and drive me away from here Carrie.\" She said angrily.\n\n\"Okay. I'm coming Jules.\" I said softly and clicked the key fob to unlock the doors. I wish I had thought of that earlier instead of leaving her outside all this time.\n\nShe got in and slammed the door shut.\n\nI got in and turned to her and reached out and took her hand. \n\n\"No Carrie, just don't!\" She yelled at me.\n\nI held her hand anyway. She tried to wrench it free, but I held on. She slapped my face pretty hard, but I held on. She dug her nails into my hand and drew blood, but I held on. She looked at me, and started crying, and I held on. She leaned over and hugged me, and I held on.\n\n\"It's my own stupid fault.\" She cried into my hair. \"I should have never given you the necklace.\"\n\n\"It wasn't just the necklace Jules, you know that. Do you want it back? Really, I would love you to take it back.\" I whispered.\n\n\"No.\" She sobbed. \"You can never, ever, ever fucking leave me while you have my Gran's necklace, you know that right?\"\n\n\"Jules, I would never, ever, ever fucking leave you anyway. We are going to grow old together and be two little old ladies on the park bench.\" I whispered.\n\n\"I don't need your Gran's necklace to tell me that.\" I added.\n\n\"I love you Carrie Fitch. I'm so sorry I didn't know it.\" She sobbed.\n\n\"I love you Julie Petrili. I'm so sorry I didn't tell you when I knew it.\" I whispered.\n\nWe hugged for a long time. We hugged until the front porch light was turned off. We hugged until my phone rang from my Dad asking how much longer before I got home. We hugged until her mom called asking where she was.\n\n\"So.\" Julie sniffed, and we pulled away from each other and buckled up. It was eleven thirty. We had been hugging silently for over an hour.\n\n\"So, you are coming with me tomorrow to the group therapy meeting right?\" I asked, holding her hand.\n\nWe buckled our seatbelts, and I started the car. I had to borrow my hand to shift into reverse, but once I got to fourth gear, we were holding hands again.\n\n\"Wouldn't miss it for the world.\" She laughed.\n\n\"Want a ride to school in the morning?\" I asked.\n\n\"Yes.\" She answered.\n\n\"Still spending the night Friday?\" I asked.\n\n\"You bet your ass I am.\" She smiled.\n\n\"So, how's Chad?\" I asked, with a giggle.\n\n\"Fuck you, Fitch.\" She laughed."
    ],
    "authorname": "Panthergirl",
    "tags": [
        "18 year old",
        "bdsm",
        "edge play",
        "exhibitionism",
        "high school",
        "humiliation",
        "lesbian",
        "orgasm denial",
        "teen",
        "virginity"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/jills-world-ch-04"
}