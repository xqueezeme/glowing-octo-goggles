{
    "title": "A Farewell to Alms",
    "pages": [
        "Chapter 1: Genesis: A Dinner Date\n\nNatalie had just told me how much she loved Hemingway, as the waiter stepped up to our table. I was relieved by the interruption: I hate Hemingway. Not to mention the attempt to impress, the whole idea of someone enjoying, much less reading\u2014completely\u2014a Hemingway novel, kind of repulsed me.\n\nHemingway always struck me as the kind of guy who really disliked himself because he never seemed to like any of the characters in his novels. If you don\u2019t like the people you write about, including your main protagonist\u2014and supposed alter ego\u2014how could you possibly like yourself?\n\nHemingway\u2019s dialogue, that sucked too. After plodding through the first few chapters of some of his novels, you have to ask yourself, \u2018Who the hell talks like that?\u2019 No one I know...or would want to, that\u2019s for sure. Maybe in the 20\u2019s some people who were really attempting to be cool did. Maybe it was what someone like Hemingway thought was the way cool people talked. But it really made you feel like the writer was someone very \u2018un-cool,\u2019 who just imagined that this must be how cool people talked to each other:\n\n\u201cCome to bed again.\u201d\n\n\u201cAll right I\u2019ll come.\u201d\n\n\u201cOh darling, darling, darling,\u201d I said.\n\n\u201cYou see,\u201d she said. \u201cI\u2019ll do anything you want\u201d\n\n\u201cYou\u2019re so lovely\u201d\n\n\u201cI\u2019m afraid I\u2019m not very good at it yet.\u201d\n\n\u201cYou\u2019re lovely.\u201d\n\n\u201cI want what you want. There isn\u2019t any me any more. Just what you want.\u201d\n\n\u201cYou\u2019re sweet.\u201d\n\n\u201cI\u2019m good. Aren\u2019t I good? You don\u2019t want any other girls, do you?\u201d\n\n\u201cNo.\u201d\n\n\u201cYou see, I\u2019m good. I do what you want.\u201d\n\nI\u2019m sure some apologist-critic could give this kind of crap some context and explanation. But you can never explain something that\u2019s really bad well enough to make it good. \n\nGod, his stuff is awful.\n\nAfter ordering our dinner, my Hemingway-loving date thankfully segued into another subject and proceeded to share her day with me:\n\n\u201cToday something funny happened,\u201d she began, with a sheepish, almost childish, grin.\n\n\u201cAnd...\u201d I encouraged her.\n\n\u201cWell, I was conducting my class...many of the students are so adorable...and, well, right in the middle of my lesson, I had to...well, you know...\u2018defecate.\u2019\u201d\n\nAt this point, I could only stare back into her eyes, which searched mine for a reaction, a reaction I was un-willing to give her\u2014mainly because I was still trying to convince myself that this had to be the beginning of some sort of joke or put-on.\n\nPlease, I thought, make this just be a joke or put-on.\n\nI was going to be spending at least a hundred on dinner. I desperately hoped I wasn\u2019t wasting it on an incontinent, though attractive, woman. Not to mention, one with the conversational judgment of a five-year old.\n\nUnfortunately, Natalie proceeded to ramble on for the next ten minutes or so, with this story describing how her bowels moved suddenly and caused her to excuse herself from class, run down the hall, etc., etc.\n\nI struggled to keep a bemused smile plastered on my face throughout the story, a story that had no redeeming punch line or moral, desperately trying to figure out\u2014\u201cWhy?\u201d \n\nWhen she was finished, she smiled, looked across the table at me, and without missing a beat, asked in Donna Reed-like fashion, \u201cSo how was your day?\u201d\n\nI was still somewhat stunned and mystified by the inane story of her colonic meltdown, and the mystery for sharing it, so I thought for a long moment, then replied:\n\n\u201cWell, I had a really bad diarrhea-spasm today...and I\u2019d like to tell you all about it. But, if it\u2019s alright with you, I thought I\u2019d save it for dessert.\u201d\n\nThe rest of dinner was fairly quiet and awkward.\n\nWhen we were done with dinner and I was driving her home, Natalie went into a long riff about being a Christian and how she really believed strongly in virginity and family values. (Gee, just like Hemingway.) This was actually a pretty long monologue, but I am not going to rehash it here, mainly because I blocked out a hell of a lot of it.\n\nI consider myself a pretty conservative, run-of-the-mill kind of guy. But the whole evangelical thing has never been of any interest to me. I\u2019ve always been what I\u2019d describe as a \u2018hopeful agnostic.\u2019 Like Lincoln, I always figured that if an almighty God wanted to speak to me, He could probably handle it all on his own without the assistance of a relatively narrow-minded\u2014not to mention, loose-boweled\u2014Pharisee to interpret Him.\n\nBut, hey, I figured she was on a roll, and I\u2019d let her spill her holier-than-thou guts. And this she did, most of the way home.\n\nWhen we pulled up to her door, she turned her face to mine in the dim-light and said, \u201cSo after my sharing with you tonight, I hope you can understand why I don\u2019t invite you in?\u201d\n\nThis was a statement, not a question. \n\nI said, sure, I understand.\n\nThen she asked when she\u2019d hear from me again.\n\nI thought that she had been pretty upfront and straight with me about her beliefs. And I respected that...so I thought I\u2019d share a little too:\n\n\u201cHonestly, sweetheart, I don\u2019t really see us getting together again, soon. Unless, of course, you\u2019d be willing to do it strictly for sex.\u201d\n\nI looked her in the eye, totally straight-faced. I thought I\u2019d just let the words hang there. I really wasn\u2019t trying to be mean. I was just being honest. I mean, what was the likelihood that we would last more than, maybe, one more slow\u2014agonizingly slow\u2014evening together again, anyway? So, I thought I might as well go for the gusto and just flat-out piss her off. \n\n\u2018Closure\u2019...I think that\u2019s the term they call it. Well, I wanted closure\u2014with a capital \u2018C\u2019.\n\nNatalie stared back at me with a look on her face that must have been pretty identical to the one my face wore during her insipid, bowel-movement recital.\n\nThen slowly, the deer-in-the-headlights smile sank into a ...well...I\u2019d call it a, \u2018pretty much PO\u2019d\u2019 sneer:\n\n\u201cI don\u2019t think that\u2019s going to happen\u2014ever. Asshole!\u201d\n\nWith this remark, she spun and flung the car door open, leapt out, and slammed the door shut. Really hard.\n\nAs she stormed off into the front door of the huge house her family owned, I waited, like a gentleman, to make sure she was safely in.\n\nThen as she stepped into the open doorway, she turned to me, silhouetted in the door light, and offered a parting gesture. She raised her fist and gave me the middle finger, then slammed the door shut behind her.\n\nI sighed to myself... \u201cSo much like Christ.\u201d \n\n*****\n\nChapter 2: We Need to Talk\n\nTwo weeks had gone by and I\u2019d pretty much forgotten about the \u2018last supper\u2019 with Saint Natalie.\n\nThen one night I got home and played back the messages on my answering machine. Among them played back a very familiar voice. The message was short and sweet:\n\n\u201cBruce. Natalie. We need to talk. Call me.\u201d\n\nBased on my last comments to her, if we were going to get together again, \u2018talking\u2019 was the last thing we needed to do. At least in my mind.\n\nAs I\u2019d remembered it, the last talk yielded very little of value for me except to inform me about Natalie\u2019s higher spirituality, its inability to cure her irritable bowel syndrome, and, oh yes, that I was an asshole who should go fuck himself.\n\nI felt like we explored talking and, basically, she\u2019d said it all, already. What was left to add to our last discourse? Maybe that I was really, really an asshole who should really, really go fuck himself. \n\nThe possibilities were not inviting. I ignored the message feeling it would be better to just take a pass.\n\nTwo nights later I got home and among my messages was another from Natalie:\n\n\u201cBruce. Natalie. I hope you\u2019re not ignoring me. That would be very immature. Call me. We need to discuss your behavior last week.\u201d\n\nI almost started laughing. This was turning into a bad comedy routine from Saturday Night Live or something. You know, the domineering girl who can\u2019t let go of the Neanderthal Guy, who doesn\u2019t really care about her, except to screw her, etc.\n\nWas I intrigued? Somewhat. Enough to call her? No.\n\nI really just wanted to drop it at this point. She was a hell of a looker, but just a little too loony for me. Plus, I didn\u2019t feel like even role-playing through some corny lecture she might use as a ruse to get us back together. She was erratic and unstable in my opinion. Getting her in the sack seemed somewhat interesting right now, but this could turn out to be a Duane Bobbit-type nightmare.\n\nAgain, I took a pass. Never returned the call.\n\nCertainly none of this had to do with the girl\u2019s appearance. I first met Natalie when she worked for me as a salesperson. Immediately it was obvious that she was very bright, well educated and articulate. But she was definitely the type that was bright, but not deep. She knew all the authors and stuff, but had no real depth of feeling for them...or anyone for that matter. With Natalie, when you scratched beneath the veneer, you just found more veneer.\n\nWe started dating after she left the company to go into teaching at the grammar school level. Some friends of hers at work were concerned that she was playing a little too hard since she\u2019d left our company. Natalie had a little bit of a reputation as a party girl, which made her family values bit at dinner that night even stranger. Anyway, at the time, her friends thought it might be good if I looked her up and saw how she was doing. When I did, she suggested we get together for dinner.\n\nI was all for getting together with her. At 27, she was nearly 15 years my junior, and she was hot: about 5\u20197\u201d, a redhead, with a great bod. Who was I to turn that down, even for just dinner talk? And like most guys, there was always the hope\u2014who knows, right?\n\nWell, \u2018who knew\u2019 it would turn out the way it did: one and out. A very boring evening. And not one I cared to repeat.\n\nThen the phone rang one night and I picked up:\n\n\u201cWell, you\u2019re alive!\u201d It was Natalie\u2014Shit!\n\n\u201cThat\u2019s the rumor,\u201d I said, trying to play down my anxiety in now having to face up to the fact that I\u2019d ducked her for the last two weeks.\n\n\u201cLook,\u201d she said, \u201cI think we were both at fault the other night, and I just wanted to make it up to you. Why don\u2019t we get together for dinner\u2014and do it right, this time. My treat.\u201d\n\nShe had me cornered. I really wasn\u2019t sure I wanted to do this. Plus, I had laid down the \u2018strictly for sex\u2019 rule last time we spoke. I didn\u2019t want to seem like a pushover. And, after all, I really did only want to get together again with Miss Looney-Tunes if it was for sex. She had definitely turned me off with the nutty, Christian preaching on our last date. But it would be really hard to put her down that way, especially with her offering to pick up the tab.\n\nWhat could I say? I was on the spot.\n\n\u201cOk. But I\u2019d like to go to some place really nice.\u201d\n\nI was only kidding. But, as I half expected, she was clueless to it.\n\n\u201cWell, how about California Cafe? That\u2019s usually a really nice experience.\u201d\n\n\u201cHow about your bedroom,\u201d was what I was thinking, but managed to restrain myself.\n\n\u201cOk, sounds good. When?\u201d\n\n\u201cWell, I\u2019m busy through Thursday. I\u2019m seeing someone seriously, now.\u201d\n\nOh brother, I thought. This girl is truly from the planet Zircon. She\u2019s \u2018seeing someone seriously,\u2019 but wants to take a guy out to dinner that told her he\u2019d only want to see her again for sex. What a \u2018family values\u2019 kinda gal. \n\n\u201cOk, Thursday is fine with me,\u201d I said, ignoring the serious commitment bit she\u2019d just laid on me. I knew it was a load of crap.\n\n\u201cGreat. Why don\u2019t you pick me up around six, ok?\u201d\n\n\u201cSure, see ya then,\u201d I just wanted to get off the phone at this point and think things through. She was strange and getting stranger. As good looking as she was, the strangeness just wasn\u2019t attractive at all.\n\nOne of the major differences between men and women is over just that point. Women love strange, quirky guys. But you\u2019ll never hear a guy refer to the woman he\u2019s seeing as \u2018strange and quirky.\u2019 Guys definitely don\u2019t want anything \u2018strange and quirky\u2019 scooting around under their sheets at night. But for some reason\u2014one that must be hormonal, like enjoying cold pizza the morning after\u2014women do. Go figure.\n\nWell, there was no getting out of it now. And truth be known, I was kind of curious to see what was up her sleeve...as well as everything else she\u2019d be wearing.\n\n****\n\nChapter 3: A Moveable Feast\n\nI arrived at the restaurant and found Natalie sitting at the bar. I wasn\u2019t sure how the evening was going to go and so came up with a pretext for us just meeting there.\n\nShe sat with a drink in hand and her legs crossed, wearing a very short, very tight mini, which slid up to the tops of her thighs.\n\n\u201cSo what\u2019s for dinner,\u201d I said cheerily, looking her over.\n\n\u201cAre you going to start, right in?\u201d she asked, annoyed.\n\n\u201cThat sounds like as good a place to start as any,\u201d I smiled. But she was getting that slightly irritated look on her face.\n\n\u201cDoes everything have to be about sex?\u201d\n\n\u201cNo, not everything. But the more, the better.\u201d\n\nShe took a sip of wine. Looked at me for a moment. I knew something was coming and hoped it would be interesting.\n\n\u201cYou don\u2019t believe in God, do you?\u201d\n\nIt was a non sequitur if I ever heard one and I had to give it some thought. So, I took the glass from her hand and took a sip of her wine. Then I gave her the best I could come up with at the time:\n\n\u201cYeah, I believe in God...because I choose to. I have no idea if there\u2019s a God or not. And if there is one, I have no idea what He\u2014or It\u2014thinks about, or what He\u2014or It\u2014wants. But I choose to believe in some sort of kind and loving creator. Why not? It makes me feel better. And, as far as I see it, there\u2019s as good a shot that there is one as not.\u201d\n\n\u201cWell, you certainly don\u2019t seem like you\u2019ve ever read the Bible.\u201d\n\n\u201cNo? What makes you say that?\u201d\n\n\u201cWell, you sure don\u2019t act like the kind of people who worship. Everything is dirty with you...you wouldn\u2019t make much of a Biblical hero.\u201d\n\nBiblical hero? I was getting a little miffed that I\u2019d let her lead me down this path:\n\n\u201cHave you ever read the Bible?\u201d I said, betraying a slight edge in my voice. \u201cSure doesn\u2019t sound like it. Hey, I\u2019m sorry if I don\u2019t live up to all your \u2018Bible Heroes\u2019 like Lot, who screwed his daughters; or like Cain, who killed his brother; or Moses, who killed a cop; or David, the peeping Tom and adulterer; or Paul, who made a nice living of persecuting Christians. You know, you\u2019re right, I just don\u2019t measure up to your rogues gallery of Bible buddies, do I?\u201d\n\nI was just slightly pissed off and getting a little self-righteous. But I was on a roll. That is, until I could see that Natalie wasn\u2019t really listening to what I was saying. This smile came over her face, and I have to admit, although she looked good, it was irritating me:\n\n\u201cYou\u2019re really very intriguing. Has anyone ever told you that?\u201d\n\n\u201cYes,\u201d I said, trying to shake off my irritation as fast as possible. She really didn\u2019t care at all about the point I thought I was, so intelligently, making. She liked that she pissed me off. I think somewhere in her mind she read it as me finally taking her seriously or something.\n\n\u2018Round 1\u2019 to the redhead.\n\n\u201cWell, I find the mind the sexiest part of the body, don\u2019t you?\u201d\n\nAnother comment right out of left field. I had no idea where she got this pseudo-sophisticated garbage from, but I had to struggle not to laugh in her face.\n\n\u201cUmmm...no, I think I\u2019d place it about fifth,\u201d I answered.\n\n\u201cYes. I could see that. You really have no imagination, do you?\u201d\n\n\u201cYes, I definitely do. Why don\u2019t we go back to your place? I\u2019d really like to prove it to you.\u201d\n\nShe smirked at me, took a drag of her cigarette, and held it high in her hand. Very sophisticated. Very elegant. But I could tell she was actually weighing the proposition.\n\n\u201cWe haven\u2019t even eaten yet.\u201d \n\nThe comment made no sense. She was just trying to buy time.\n\n\u201cSweetheart, trust me, we\u2019ll perform much better on an empty stomach.\u201d\n\n\u201cYou really are a pig, aren\u2019t you,\u201d she said very slowly, as she sucked in another drag of the cigarette.\n\n\u201cYou\u2019d have been very disappointed if I wasn\u2019t.\u201d \n\nIt was the most truthful thing I\u2019d said all night.\n\nThere was a long pause between us...maybe two minutes or more.\n\n\u201cOk,\u201d she said, looking down at her glass, avoiding looking me in the eye.\n\nThen this beautiful redhead grabbed her purse off the back of the bar stool and slung it over her shoulder. She mumbled as she passed me:\n\n\u201cWhy don\u2019t you pick up a bottle of wine on the way over.\u201d\n\nWith that, I followed my convert out the door to our cars.\n\n****\n\nChapter 4: Tiny Dancer\n\nI pulled my car around to the side-house where Natalie lived. Her folks lived in the big, main house. It was white, with pillars in front. Bag of liquor in hand, I felt like I was off to ravage Scarlett O\u2019Hara.\n\nNatalie greeted me into the dark interior of her apartment. We opened the bag. I brought a quart of Seagram\u2019s for myself; I\u2019d brought a large bottle of cheap Cabernet for her. I felt like quantity would be more important than quality, if the evening went as I\u2019d hoped. \n\nI opened the wine and poured her some. Then I poured myself a shot of the Seagram\u2019s, in a coffee mug I found in the kitchen.\n\nAfter some long minutes of drinking in silence, she looked at me and asked:\n\n\u201cHas a girl ever stripped for you?\u201d\n\n\u201cYou mean the complete show...danced?\u201d\n\n\u201cYeah.\u201d\n\n\u201cWell, no Bible-thumping girl ever has...no.\u201d\n\n\u201cPlease don\u2019t talk like that,\u201d she said, breaking eye contact, looking demurely down at her wine. \n\nWhat she really meant was, please don\u2019t remind me of what a hypocrite I am. That was fair. After all, I had the feeling she was about to show me the strip-act she practiced after getting home from Mass each week. Who could pick on a girl whom was that Christian in her giving?\n\n\u201cSorry. No, no one I ever dated ever stripped for me before.\u201d\n\n\u201cWould you like that?\u201d she asked with a very waif-like, phony-naive look on her face.\n\nI looked down at my watch, \u201cWell, gee...I don\u2019t know...it is getting late.\u201d\n\nI looked at her straight-faced, and then we both cracked up at the obvious cons we were trying to pull on each other.\n\n\u201cGive me a moment,\u201d she said, then hastily scampered from the room. She came back with a cassette she put in a boom box that sat on the room\u2019s credenza. She hit the rewind button. As she waited for it to rewind, she looked over at me nervously. I could tell she was about to play out a fantasy that was a lot more important to her than my side was for me.\n\nI sat back patiently, like a john waiting for a lap-dance. It was all kind of surreal. This was the girl who had lectured me a few weeks ago about virginity and family values.\n\nThe tape snapped out loud as it rewound to the beginning. She hit the play button. Suddenly, Elton John was singing, \u201cTiny Dancer.\u201d \n\nNatalie began swaying and getting into the beat. As she danced, she moved seductively close to me, kneeled in front of me, and licked her lips. \n\nAll I could think was, \u201cDon\u2019t start laughing.\u201d \n\nBut it was really funny. She was trying so hard, and she was so damned serious about it. I just wished her fellow churchgoers could have seen her.\n\nBefore I knew it, Tiny Dancer ended. Now came the main course. Credence, rolling out, \u201cProud Mary.\u201d\n\nNatalie was warmed up now; she put her hands over her head, rocked her hips to the rolling rhythm, and put on a big talent-show smile for her audience. She was somewhere else right now...I was just an anonymous onlooker for her, sitting there in the dark, snorting down my Seagram\u2019s. And in the anonymity of darkness, the huge grin I was wearing didn\u2019t distract her from the performance.\n\nThen she began unbuttoning the back of the blouse she was wearing. It soon peeled off of her. Next she reached back and unzipped the skirt. As she shook her hips, it slid to the floor. She was very theatrical, stepping out of her skirt, and then throwing it across the room. She was now down to just her bra and pantyhose.",
        "I have to admit, at this point I was getting a hard-on in spite of how ridiculous the whole scene was. I thought for sure she\u2019d chicken out at this point. \u201cProud Mary\u201d faded out. Shit, I thought, this might bring her to her senses.\n\nThe familiar chord echo of Barry White\u2019s, \u201cCan\u2019t Get Enough of Your Love, Babe\u201d rang out in the room. Natalie smiled and began again. As she reached back and unsnapped the bra, I could feel my shoulders starting to shake. It was just hysterically funny.\n\nI was scared to death she\u2019d see me laughing, get pissed and stop. But the room was so dark, she couldn\u2019t see me much at all. Besides, I think she was lost in a reverie, imagining a bunch of old guys out there beating off or something. Come to think of it, I guess that image might not have been too far off.\n\nThe bra straps slid from her shoulders down the smooth skin of her arms. My laughing stopped momentarily by the sight I took in. Man, she had fantastic tits. They were large and firm, but soft enough to move, bouncing with every dance step she performed.\n\nMy dick was struggling angrily in its confines at this point. It wanted out. I figured, what the hell, she was getting naked for me, why should I be shy?\n\nI unzipped and pulled it out. She danced closer to see what I was doing. She liked it, and smiled to acknowledge it. She turned away from me and peeled the hose down over her naked ass. Again, the girl had a fine body. The ass was full, curved, but not at all fat.\n\nTiny Dancer stepped out of her hose and was completely naked for me now. She stepped back into her high-heels and danced seductively over to me. She straddled my hips, and ground the warm wetness\u2014yes, she was definitely wet\u2014down on the length of my aching dick.\n\nI was struggling now not to cum. I palmed a large mammary and sucked it into my mouth. She moaned and cradled my head into her bosom.\n\n\u201cI like that,\u201d she whispered.\n\nI gently bit the nipple. She groaned just slightly and murmured:\n\n\u201cWhy don\u2019t we go into the bedroom.\u201d \n\nNatalie climbed off me and helped me to my feet. She looked down at my throbbing dick and stroked it gently, stopping at the knob of it. Then she used her fingers to tickle it and dab its mouth, pulling off a sticky string of precum. She brought the fingers up to her lips and smeared them with the shiny gloss of my secretions. First one, then both the sticky digits slipped into her mouth.\n\n\u201cYou taste good,\u201d she said matter-of-factly.\n\nI brought her to me and kissed her. Her mouth was wide open and our tongues played together hungrily. I could taste myself on her lips.\n\nThen she broke the kiss, took me by the hand, and led me to the bedroom.\n\n****\n\nChapter 5: Zealots in the Bedroom\n\nLeaving a trail of clothes that led from the living room to the bedroom, we finally entered Natalie\u2019s chambers.\n\nI was naked now and my dick was full, stiff, and wagging before me, like the masthead of a ship heading to port. I climbed on the bed and Natalie lay back and spread herself, as if she\u2019d done this a hundred times before.\n\nAs I began to mount her, I could feel the head of my cock poking into her warm, swollen and sticky lips. In one lunge I was in her, nearly to the hilt. \n\nInstantly our hips began working away to further lodge my organ into her depths. I pulled up from her and got under her thighs, pulling them up, and pinning her knees back nearly to her shoulders. I wanted to penetrate her as deeply as possible.\n\nMy hips began pounding into her. The sound of her grunts, as well as the loud slapping of our loins, made me hotter and hornier with each thrust into her.\n\nAs I looked down onto her beautiful face, it bore the mixed expression of lust and pain as I banged myself deeply into her. She looked up at me and seemed helpless under my assault. It just made me pound all the harder. She grew very wet. I could feel her fluids making my balls sticky as they slapped into the crack of her ass.\n\nI kept thinking of her little speech a few weeks ago, about Christianity, her values and virginity. It just got me hotter. Then\u2014suddenly\u2014I felt like every bit of frustration, irritation, and lust burst from my loins into hers. I came, voluminously. I felt like it wouldn\u2019t stop. I spewed more and more into her...then finally, I was done.\n\nI dropped myself onto her. We both gasped for air, our lungs heaving heavily, struggling to regain the energy we had spent in our mating.\n\nWhen we settled, I felt like I was going to fall into a deep sleep. I could feel myself deflating within her, and I tried to pull myself out and off of her. \n\nShe held me close: \n\n\u201cNo, not yet,\u201d she whispered in my ear, \u201cI like you in me.\u201d\n\nNatalie wrapped her long legs around my hips, holding me firmly to her, in a leg-lock. I could feel her pussy lips sucking on my dick, trying to bring it back to life. \n\nShe wanted more.\n\nI wasn\u2019t sure that I did. I was tired, and I had vented all the pent up lust I had for her. I just felt peaceful now. But there was no doubt, she was still horny. It was as if I had fallen into the web of a very, very horny Spider Lady. It was now Natalie who wanted to make use of me.\n\nSlowly it was dawning on me, why all the Christian crap. This girl had within her the soul of a raging nymphomaniac. Her religion was the brake pedal for her desires. \n\nShe sucked on my neck. I pulled away. The last thing I needed was to go to work, a forty-plus-year-old guy, with a hickey.\n\n\u201cFuck me again,\u201d she whispered. \u201cPlease.\u201d\n\n\u201cSure. But let\u2019s take a rest for a few minutes. We got all night.\u201d\n\nI pulled away from her and rolled over on my back, looking up at the ceiling. I felt good. I was slaked in sweat and in Natalie\u2019s juices. \n\nIf the other parishioners at her church only knew, I thought, male membership would be going up in droves\u2014not to mention the male members themselves.\n\n\u201cYou were good,\u201d she offered in the dark.\n\n\u201cThanks Ma\u2019am,\u201d I kidded her. \u201cAll in a night\u2019s work.\u201d\n\n\u201cYou\u2019re quite the worker,\u201d she giggled.\n\n\u201cWell Ma\u2019am, I\u2019m just concerned I don\u2019t become a workaholic, if you know what I mean.\u201d\n\nShe was silent to the last remark for a good minute or two.\n\n\u201cI sometimes do worry,\u201d she whispered.\n\n\u201cAbout what?\u201d\n\n\u201cYou know, liking it too much.\u201d\n\nI wasn\u2019t sure what to say to that. I certainly wasn\u2019t worried about her liking it too much, that\u2019s for sure.\n\nIn the dark, I could see her knees silhouetted against the pale moonlight streaming in from the window beside the bed. They were spread. The bed was rocking gently. I realized she was playing with herself in the dark.\n\n\u201cYou are a horny little thing, aren\u2019t you?\u201d\n\n\u201cGod, yes...\u201d she hissed. \n\nI felt funny lying there while she was diddling herself. It was the kind of thing that was even too private for a lover to eavesdrop on. Also, I felt kind of like\u2014hey, that\u2019s my job.\n\nIn the dark, I heard her exhale heavily, then moan:\n\n\u201cMmmmm...\u201d\n\nBy this time, I was hard and horny again listening to her play with herself. But now she wanted to rest.\n\n****\n\nChapter 6: For Whom the Belt Tolls\n\n\u201cDo you play with yourself a lot?\u201d I asked.\n\n\u201cThat\u2019s none of your business.\u201d\n\nShe was morphing back into Miss Jeckyll again. After masturbating next to me in the dark, I had asked a question that was much too personal for her sensibilities.\n\n\u201cOh, I thought it became my business after that little performance you just put on.\u201d\n\nShe remained silent. I\u2019m sure she couldn\u2019t think of anything to say. Plus, she knew her bed partner wasn\u2019t taking her propriety too seriously.\n\nI went into the bathroom, took a leak, and splashed some cold water in my face. When I re-entered the bedroom, she was lying propped up on the bed, having a cigarette. The moonlight was strong enough for us to barely make each other out.\n\nI could tell the wheels were turning and thought she might be getting ready to tell me to leave until Miss Hyde was to appear again, sometime in the future.\n\n\u201cHave you ever tied a girl up?\u201d\n\nI sat there in silence. Just when I thought she couldn\u2019t shock me again with her wackiness...she did.\n\n.\n\n\u201cNo.\u201d\n\n\u201cWould you like to?\u201d She dragged from her cigarette, seductively.\n\n\u201cActually, no I wouldn\u2019t.\u201d\n\n\u201cWhy?\u201d\n\n\u201cIt\u2019s like role-playing, I\u2019d feel like a fucking idiot doing it. It\u2019s not sexy; it\u2019s juvenile. Sorry, you don\u2019t have a taker on that one.\u201d\n\n\u201cWell, aren\u2019t you the prissy one?\u201d She tried to say it as a put down, but I could tell that she was the one who felt rejected.\n\n\u201cNo. I just think it\u2019s dopey. Sorry.\u201d\n\nWe sat in silence for a few minutes while I poured some more whiskey into the coffee cup. I was feeling that maybe being a little drunk with this girl would help.\n\n\u201cHey look, I\u2019m sorry I won\u2019t tie you up or pretend to be a gorilla or something.... Why don\u2019t I just whip you with my belt? Has a guy ever done that to you?\u201d\n\n\u201cI\u2019m not into pain, ok? I\u2019m not weird. I just like fantasy, that\u2019s all.\u201d\n\n\u201cHave you ever tried pain? Hey, give it a chance. You might like it.\u201d\n\nI was totally bull-shitting her now. Not that I wouldn\u2019t whip her ass, but I really had no intention of doing it that night. And I didn\u2019t think there was a chance she\u2019d go for it after her last comments. I was just trying to get her going a little.\n\nWe left that subject and killed a few minutes with some small talk. Then out of the blue she slipped it into the conversation:\n\n\u201cWhy would someone want that done to them?\u201d\n\n\u201cWhat?\u201d\n\n\u201cYou know, having someone whip them?\u201d\n\nI could have picked up that signal a mile away.\n\n\u201cWell, you\u2019d be surprised,\u201d I said, with complete seriousness. \u201cMost of the girls I\u2019ve been with really got to loving it. Became like sexy, little alley cats after it.\u201d\n\nI could tell she was turning it over in the dark. Long drags from her cigarette were being exhaled in large puffs toward the ceiling. They almost appeared to be thought-bubbles that carried imponderable, conflicted urges that Miss Jeckyll was turning over and over again.\n\nThrowing out something like being whipped, to Natalie, was like pouring the elixir that might transform her back to Miss Hyde. And I was playing the whole thing straight, sipping my Seagram\u2019s in the dark, like I had forgotten the whole subject. It really brought out the worst in me.\n\n\u201cWould you stop if I didn\u2019t like it?\u201d the red-haired beauty asked softly.\n\n\u201cStop what?\u201d I bull-shitted.\n\n\u201cYou know...whipping me.\u201d\n\nMy dick was already getting hard by now\u2014which I\u2019m sure is what she was counting on. But, nonetheless, this was a game I was willing to play with her.\n\n\u201cOf course...\u201d I lied.\n\n\u201cOk, then...but let\u2019s take it slow. Understand?\u201d\n\n\u201cSorry. The belt I wore tonight is too thin. It really needs to be one of those thick leather ones to work right.\u201d\n\nNow, I was kind of backing off. I was amused to see that I could get her to do it, but, in reality, I had never done this before in my life. I was just playing with her.\n\n\u201cThat\u2019s ok,\u201d she said, as she entered her closet, \u201cJohn, left one of his here, I think...\u201d\n\n\u201cJohn...?\u201d\n\n\u201cMy fianc\u00e9. I told you I was seeing somebody seriously. Remember?\u201d\n\nFianc\u00e9? My mind reeled. However, I managed to sit there in the dark, completely stunned\u2014but not letting on to her\u2014while the \u2018bride-to-be\u2019 rummaged through her closet for a belt that I could whip her with.\n\nI thought any minute Allen Funt and the Candid Camera crew were going to run into the room with lights, action, and camera to catch my expression.\n\n\u201cHow long have you been engaged,\u201d I asked, with my best Bob Newhart deadpan.\n\n\u201cUmmm...oh, it\u2019s been about half a year now. We\u2019re getting married in June.\u201d\n\nAgain, all I could think was any minute she\u2019d break out in laughter, having put me on completely\u2014revenge accomplished!\n\nBut no further comment came. I saw a picture on her dressing table. I picked it up and held it to the moonlight. It was a guy, and it wasn\u2019t her brother.\n\nHow could I have missed that damn ring?\n\nI didn\u2019t know whether to laugh or run. She had been engaged to this sucker before the first time she and I ever went to dinner!\n\nI replaced the picture and sat back down. There are times in life that you realize you\u2019re participating in an incident that\u2019s stranger than fiction. This was one of those times. \n\nWhen Natalie re-entered the room with my weapon of choice, I struggled not to show my shocked expression, nor to break out laughing.\n\nI noticed immediately that she wasn\u2019t wearing any ring. Apparently, her family values prohibited her from screwing one guy while wearing the engagement ring of another. I thought to myself that somewhere in there ran an undeniable\u2014though twisted\u2014logic. \n\n\u2018Venus in Furs\u2019 handed me the belt and then climbed onto the bed on all fours. She positioned her exquisite ass in the air, gave it a little, inviting wiggle, and said:\n\n\u201cOk. Try it soft first.\u201d\n\nI figured, I better look like I know what the hell I\u2019m doing or I\u2019ll definitely lose her confidence. I thought to myself that, like surgery, when performing S&M it\u2019s likely the performee wants to feel the performer has done this before.\n\nI cracked the belt against my thigh\u2014I figured that was something people who are into this stuff might actually do\u2014then I did it. I whacked the broad leather across Natalie\u2019s impeccable ass.\n\n\u201cOwww...I said start soft,\u201d she hissed, almost turning her ass away from me.\n\n\u201cIf it doesn\u2019t sting it won\u2019t work right,\u201d I told her, with a very bullshit, Dr. Kildare-type professionalism in my voice.\n\n\u201cReally?\u201d\n\n\u201cCome on, would I make that up,\u201d I said, totally making it up as I went along. \n\n\u201cWell...ok then...but not too hard,\u201d she hissed in the darkness.\n\n\u201cDon\u2019t worry, I know what I\u2019m doing. It\u2019s got to be pretty hard. But the reward is the orgasm of your life.\u201d\n\nFrom there on in, it was an all out whacking, leather to ass. I could hear her drawing in her breath with each strapping. Her breasts were perfect, shaking beneath her as she took it all. \n\nFor me the turn on was obvious. No, I wasn\u2019t the Marquis de Sade or something. But after all the condescending bullshit about \u2018family values\u2019 and discussing my \u2018behavior\u2019 that I\u2019d put up with for the last few weeks, whipping her ass was very hot and very satisfying. I was getting extremely hard watching Miss Holier-than-Thou writhing under the lash.\n\nAfter just a couple of minutes, though, I realized her ass was getting really red. I stopped for a second and reached behind her, stroking her sore ass as gently as I could. \n\nHow in the hell is she going to explain these marks to John, I wondered...somewhat happily. \n\nThen my fingers stroked down between her thighs. I was amazed to find that she was soaking wet.\n\nGoddamn, I thought. This chick is the hottest slave girl in the harem.\n\n\u201cOk,\u201d I said, \u201cStay on all fours, but face your ass to me.\u201d\n\nShe readily complied, kind of moaning and whimpering, while repositioning her ass toward my side of the bed.\n\nWith Natalie having assumed the position, I placed the head of my cock to the lips of her waiting pussy and drove it home.\n\n\u201cUhhh...\u201d she bellowed.\n\nI just grabbed her hips and started driving it into her. The rhythmic slapping of my hips to her ass was loud. I wanted to fuck her as hard as I could. \n\nIn the mirror over her dresser, I could see her large breasts lurching forward with each buck my hips delivered to her ass. In short time, she was moaning and bucking back.\n\nAfter several minutes, Natalie threw back her head and stopped suddenly, kind of shivering there. She reached back with one hand, trying to hold my hips still. I delivered one last deep thrust, then ground my hips to her up thrust rear.\n\nI could feel her spasming, squeezing her hot, wet channel down on my dick. I came. As I did, I slapped her ass one more time for good measure and she yelped, loudly.\n\nWhen the ritual was over she fell face-forward onto the bed and then rolled onto her side. I myself climbed onto the bed and crashed onto my back.\n\nWe drifted off, exhausted with our labors.\n\n****\n\nChapter 7: The 12 Minutes of Sodom\n\nI awoke with a startle. I could feel something warm and wet around my dick. When I tried to peer down at it in the dark, I could see the back of Natalie\u2019s head bobbing towards me and then down again on my shaft.\n\nHer hair was stroking and tickling my abdomen, while she worked away at bringing \u2018Little Elvis\u2019 back to life.\n\nAs she pleasured me, my arms stretched out on the bed. My hand bumped into something cylindrical and metallic. I grabbed it and held it up to the moonlight. It was a vibrator.\n\nAmazing, I thought. This nympho woke up still horny, after the going-over I gave her, and needed even more.\n\nI couldn\u2019t believe her sex drive. At the rate we were going, we\u2019d cover the entire Kinsey Report in one night. The only way to finally satisfy her, I figured, might be to end the night with a tribute to Catherine the Great and have a horse airlifted in onto trestles.\n\nThe sucking and slurping sounds that Natalie was making echoed in the room. She was working my dick like a pro. I felt she was wasting her time on the church-going; she ought to just set up shop and start charging $200 a night.\n\nAs she continued servicing me, she held the base of my organ with her hand and twirled her tongue around the knob. She tickled the pee slit of my dick, and then ran her lips along the barrel of it to its base. \n\nFrom there she grew more creative. I could feel her lapping my balls and sucking each one into her mouth, alternately, a few times. Her lapping tongue began to stretch down below my balls tickling the perineum between my genitals and asshole.\n\nI grunted. It felt good and I wanted to offer her encouragement.\n\nMy red haired angel-whore responded, stretching her tongue ever lower. My dick ached it was so hard. She seemed to enjoy teasing me with the age-old question: Would she, or wouldn\u2019t she?\n\nThen her tongue trailed into my ass crack and, after an agonizingly long pause, she began rimming the sensitive ring of my anus. She never ceased to amaze me. It felt great, but, in short order, I was ready to burst. After just a minute or so, she sensed my urgency and brought her mouth back to the head of my dick. She sucked and shucked away just a few times and I let go into her mouth.\n\nShe moaned hungrily and swallowed what little discharge I had left to offer her. When done, I was so sensitive I had to gently grab her hair and pull her working tongue off of me.\n\nWe lay along side each other in the dark. She grabbed a tissue to wipe her lips of my remains.\n\n\u201cDid you like that?\u201d she asked.\n\n\u201cWho wouldn\u2019t like the Virgin Natalie\u2019s tongue up his ass,\u201d I answered her, matter-of-factly.\n\n\u201cThat was very crude,\u201d she responded, testily. \n\nAll I could do was start laughing at this point:\n\n\u201cWhat do you mean? You were the one who did it!\u201d\n\n\u201cWell, it won\u2019t happen again...it...it was an accident anyway.\u201d\n\nNow, I really lost it. It was by far the funniest thing she\u2019d said all evening:\n\n\u201cAn accident! What did you get lost down there, make a wrong turn, and wind up with your tongue in my ass?\u201d\n\nShe jumped out of bed, lit a cigarette, and stared out the window. I could see her outrage was building.\n\nSuddenly, she spun toward me:\n\n\u201cLook, if your going to continue to be so vulgar, I\u2019m going to have to ask you to leave.\u201d\n\nIt had to be a line she remembered from some romance novel. It certainly didn\u2019t sound like the girl who had asked me to tie her up earlier.\n\nObviously, she was pissed and embarrassed. And, she was right. I had just been given the blowjob of my life and I was humiliating her in return. But, just the same, her asking me to leave for talking vulgar, after what she\u2019d just done...well, it all sounded pretty ridiculous. \n\nShe had no idea how ridiculous it all seemed, though. So, I told her to calm down, and then apologized.\n\nI got up from the bed and thought I\u2019d get dressed and leave. The party was over; the carnival had left town. I had enjoyed every minute of it\u2014the whole sensual carnival that played out in Natalie\u2019s bedroom\u2014including every bizarre sideshow she\u2019d taken me to, but it was time to go.",
        "\u201cSo, you\u2019ve had your fun. Now you\u2019re leaving?\u201d\n\nThe girl who had just threatened to ask me to leave was now ticked-off that I was doing just that.\n\n\u201cWell, its 3:00AM. What else are we going to do? Play scrabble and try to spell out some act we haven\u2019t committed yet?\u201d\n\nThe cigarette hung from the side of her mouth. She was thinking. Very dangerous. Whenever her mind grew active the angels wept.\n\n\u201cYou need to read the Bible.\u201d\n\nHer mind was jumping from idea to idea now, like a smooth rock skipping along the surface of a pond in which it would never rest, sink, nor attain any kind of depth.\n\n\u201cI thought we covered this already at the bar. I have read the Bible. My problem is I find myself rooting for the underdogs like the Sodomites and the Philistines.\u201d\n\n\u201cSodomites?\u201d she repeated, questioningly. \u201cGet out! That\u2019s not in the Bible!\u201d\n\nI stared blankly into the mirror I was combing my hair in, as it dawned on me that she had never read a word of the Bible. She just thought it was terribly important that everyone else did.\n\n\u201cYes, the Sodomites. You don\u2019t know that story? Lot, the angels, Sodom and Gomorrah?\u201d\n\n\u201cI might...remind me of it, again.\u201d\n\nYeah sure, I thought. It was the lamest attempt to bullshit someone I\u2019d ever heard, other than Nixon\u2019s, \u2018I am not a crook\u2019 speech. (Then again, this was all pre-Clinton.)\n\nI sat down on the chair across from the bed Natalie was reclining on, with her cigarette in hand, staring across at me in the dark, like a little girl waiting for a bedtime story.\n\n\u201cWell, the angels came to Lot, a good shepherd type-of-guy, and told him that all the people in Sodom would have to be wiped out for their wickedness. I guess they were doing all kinds of things, but as the name implies, probably a lot of the wickedness was...you know...ass fucking. Anyway...\u201d\n\n\u201cGet out! That\u2019s not in the Bible!\u201d\n\n\u201cYes, it is. Trust me. Well, anyway, after all the warnings, they keep doing it and ultimately God wipes \u2018em out. Lot\u2019s wife looks back, turns into a pillar of salt\u2014story over!\u201d\n\n\u201cWhy did she turn into a pillar of salt?\u201d\n\n\u201cHell, if I know. These stories don\u2019t all have great plots. Some are sort of like, \u201cThe Big Sleep.\u201d Great characters and stuff, but plots that are all over the lot\u2014no pun intended.\u201d\n\n\u201cBut why didn\u2019t the people stop?\u201d\n\n\u201cWell, that part\u2019s easy\u2014felt great!\u201d\n\n\u201cGetting fucked in the ass felt great?\u201d\n\n\u201cHey, I guess so...they kept doing it, right?\u201d\n\n\u201cThat is an act I find incredibly vile,\u201d she said, with finality and resolution.\n\n\u201cHey, I agree with you...I guess there\u2019s just a lot a sicko\u2019s out there, ya know?\u201d\n\nI was in all-out, bullshit mode now. This was an act I had performed with some girl friends before, and loved it. I knew I\u2019d love having Natalie just this way...kind of a parting gesture, a \u2018so long it\u2019s been good to know ya\u2019 kind of thing.\n\nI continued:\n\n\u201cBelieve me it\u2019s not something anyone\u2019d ever catch me doing, I\u2019ll tell ya\u2019 that.\u201d\n\nLike a good football coach, I figured, if a play is working, keep running it till the other side stops it. This faux disinterest had worked before, so I figured, I\u2019ll try it again, at least until she parries it.\n\nI went into the bathroom and rinsed my mouth out with water. The after taste of the whiskey was burning a hole in my tongue.\n\nWhen I re-entered the bedroom, Natalie was casually lying prone now, leaning up on her elbows, cigarette still in hand, casually pretending to flip through the pages of a magazine lying before her on the bed, but obviously displaying her ass\u2014welts and all.\n\nI sat along side her on the bed and let my hand rub along her upper thigh. Soon I let it slide up the crest of her fleshy ass cheek. I squeezed it gently.\n\n\u201cOooohhh...I\u2019m sore there. You did it too hard, I think.\u201d\n\nI didn\u2019t answer her.\n\nI licked a finger and then replaced my hand on her ass. But this time I let my fingers sink into the valley of her ass. I found her sphincter and let my middle finger nuzzle it.\n\nShe froze. But didn\u2019t ask me to stop. I burrowed the tip of my finger in to her ass. She winced and turned her head away from me, laying it onto the bed.\n\nI knew she was signaling her tacit consent.\n\nI began to fuck my finger into her ass, while Natalie lifted her hips, ever so slightly, to afford my probing digit greater access. \n\nI took advantage of all she afforded me.\n\nI began to pump my finger into her and was soon up to the knuckle.\n\nNatalie was whispering and hissing her, \u201cOooohh\u2019s\u201d and \u201cOwww\u2019s,\u201d but at no time did she ask me to stop.\n\nFinally she lifted her head, \u201cIt hurts...\u201d\n\n\u201cYes, but what did we learn earlier tonight? You seem to like some pain mixed with your pleasure, don\u2019t you?\u201d \n\nIt was as condescending as I\u2019d ever been with a woman. It was said with complete sarcasm on my part. I expected her to pull away and slap my face, ending the evening on a note of finality.\n\nBut, lo and behold, she took my comment in stride, lowered her head back to the bed, and let me continue penetrating her.\n\nI was sorry I\u2019d begun to get dressed again. My pants bulged with a renewed hard-on that Natalie\u2019s acquiescence had engendered.\n\nI pulled my finger from her ass. \n\n\u201cOwww...!\u201d \n\nI thought she might stop me now. Without doubt she knew I was undressing again. And undoubtedly, she knew what for.\n\nI climbed naked back onto the bed. I grabbed the pillows and positioned them beneath her hips, which she lifted to allow me access. Once having positioned her waiting ass, I maneuvered between her thighs, nudging them wider apart with my knees.\n\nI positioned the head of my dick to her asshole and began to work it into her.\n\nAfter several seconds of working it in, she raised her head and whined:\n\n\u201cCan\u2019t we use some Vaseline?\u201d\n\n\u201cNo, unh-unh. The friction is what makes it work. Don\u2019t worry. You\u2019ll get used to it.\u201d\n\nAs I continued to work it into her again, I could see her features in the faint morning light pervading the room. Her brow was wrinkled with concentration, trying to relax her sphincter to allow entry to the invading organ below.\n\nSuddenly her body relented and I was in her. She cried out. It hurt. I held still to allow her to adjust to my size. Then, after a minute or so, I began to slowly pump my dick in and out of her, with each thrust delving a bit deeper into her ass than the one previous.\n\nNatalie grunted and occasionally lifted herself under me, as if struggling for release, but never asking me to stop. In a few minutes, I was driving it into her much harder. As earlier, the slapping of my hips to her ass began to ring out in the room.\n\nI was getting hotter and hornier as the pace of our lovemaking increased. I may have entered her bedroom that night as your average, 40-plus businessman, but this girl was definitely bringing out the Caligula in me.\n\nI grabbed her hair as I would a horse\u2019s reins and pulled her head back. I began to call her a slut, as I rammed myself into her\u2014repeatedly. She moaned under the onslaught, but never called for a halt to it. \n\nI knew from the first that this wealthy, self-absorbed, young beauty would love this treatment. Everything in her condescending manner and attitude seemed to be begging for a man to treat her just this way. Now she was getting the treatment her coded mannerisms had requested all along. She should have hated it, fought it. But she didn\u2019t; she was loving it.\n\nNatalie\u2019s hand slipped down between her legs. She began working at her clit feverishly to bring herself off. Within minutes she came, loudly, grunting under me and sweating profusely. \n\nThe excitement of her orgasm got me off. I came in her ass violently, feeling my prostate spasming over and over till I thought I would cramp. When it was over, I fell onto her back and lay there for a while catching my breath.\n\nMy organ was caught in a vise. We lay together for a long while, like dogs that needed water thrown on them to separate. Only after five minutes or so, did I begin to soften and ooze from her ass. It reminded me of toothpaste being squeezed from a tube.\n\nIt was a while before we spoke:\n\n\u201cGod, that hurt!\u201d she said, angrily.\n\nThen she lifted her head and looked over at me:\n\n\u201cI thought you said it would \u2018feel great\u2019!\u201d\n\n\u201cYeah, but I didn\u2019t say it would for all the participants, did I?\u201d\n\n****\n\nChapter 8: Philosophy in the Bedroom\n\nI got up to take a shower. My body felt sore all over. There were positions I had been in that night that I hadn\u2019t explored for a while. Even my eyes burned from lack of sleep.\n\nBut it was a good kind or soreness. I wasn\u2019t complaining. I turned on the shower and stepped inside. Within minutes, the shower\u2019s glass door slid open and Natalie joined me.\n\nWe soaped each other and enjoyed our bodies under the hot, cascading flow of water. Natalie\u2019s breasts were large and felt like water balloons filled near bursting. I loved the feel of her. My cock was slowly coming to life again.\n\nAs she knelt before me, lathering my thigh, Natalie took a long look at my semi-hard dick and admired it. I\u2019m not sure what possessed me, but I let go a stream of pee that splashed against her thigh and washed down the drain along with the shower water.\n\nShe fell back stunned and just stared up at me. She was trying to decide what emotion coursed most strongly through her psyche.\n\n\u201cYou\u2019re an animal,\u201d she finally laughed, loudly. \u201cAnd one that needs to be housebroken immediately.\u201d\n\n\u201cJust don\u2019t go crying to your girl friends that I don\u2019t treat you right,\u201d I complained, with mock concern.\n\nAfter we\u2019d dried ourselves, I held her and we kissed deeply, letting the towel between us fall to the floor. She reached down and tugged on my cock a few times. It grew under her encouragement.\n\nI followed her into the bedroom, but not back into bed. Instead, I decided to continue getting dressed and sat myself in the chair along side the bed, slipping my socks on.\n\n\u201cTime to go, huh?\u201d\n\n\u201cYeah, \u2018fraid so.\u201d\n\n\u201cSo, why do you like to whip girls?\u201d\n\n\u201cI don\u2019t, especially...\u201d\n\n\u201cYou did tonight, didn\u2019t you?\u201d\n\n\u201cYeah, I guess so...\u201d\n\n\u201cWhy? And, why do you like that other stuff, too?\u201d\n\n\u201cI don\u2019t know...I guess I prefer not to talk about it. If you talk about it you ruin it.\u201d\n\nIt occurred to me that I was starting to sound like Hemingway. That scared me. Pretty soon I might feel like putting a gun barrel in my mouth, too.\n\nNatalie lit up again. I could tell she was lost in thought:\n\n\u201cYou don\u2019t like women, do you?\u201d\n\nThe question didn\u2019t shock me. After all, joke or not, I had just urinated on her. She had certainly earned the right to an honest answer.\n\n\u201cNo. You\u2019re way wrong with that one. You just came along at the wrong time. Had you been a few years earlier you might\u2019ve found a different guy to dance with...you know, like the song says, you were \u2018Born to Late,\u2019 that\u2019s all.\u201d\n\nI thought about it some more. There had definitely been a different me a few years earlier. Time had wrought itself down on me. Some of it was good, some of it wasn\u2019t.\n\n\u201cYou know Nat, we get older and fatter on the outside. But some of us just get a lot thinner on the inside. Like Christ said...the \u2018poor in spirit.\u2019 But I don\u2019t see it as blessed, that\u2019s for sure. No, the way I see it, the \u2018poor in spirit\u2019 can take freely, but they have nothing to give. When it comes time to give, they find that it was all given away a long time ago.\u201d\n\n\u201cWell, they couldn\u2019t have had much to begin with if they\u2019re left that impoverished from a few bad endings.\u201d\n\n\u201cMaybe...\u201d \n\nI thought, she might be right. But I felt no need or desire to defend myself.\n\nI finished dressing. I told her I\u2019d be leaving. She was still sitting up against the backboard of the bed, arms crossed, and cigarette in hand. But she seemed emotionally drained and very somber.\n\n\u201cI don\u2019t suppose I\u2019ll hear from you again?\u201d she asked. Her voice was soft and wavered slightly.\n\nIt occurred to me that she\u2019d taken the evening much more seriously than I had. Crazy as she was, I felt badly for her. It pained me to hurt her feelings. She had given so freely of herself. All I had done was take.\n\nI would be leaving her a bit thinner, a bit poorer, too.\n\n\u201cNo, probably not. You\u2019re engaged. It wouldn\u2019t be such a great idea, don\u2019t you think?\u201d\n\nIt was a statement, not a question. And she knew it.\n\n\u201cYes. You\u2019re right. And he\u2019s a gentleman...and he loves me.\u201d \n\nShe started crying quietly, and I felt very depressed. I have never been good with a lot of emotion, so I thought I would just leave. Nothing I could say at this point would take back the evening or change the way I felt\u2014or didn\u2019t feel. And nothing I could say would change the way she felt\u2014or didn\u2019t. And I knew that.\n\n****\n\nChapter 9: Exodus\n\nWhen I went out to my car, it was raining. What a clich\u00e9, I thought. Is God condemning me or trying to wash away my sins?\n\nMaybe He was peeing on me, I surmised.\n\nAs I opened the car door, Natalie came out onto the landing outside her door. She had wrapped herself in the bed sheets, covering her nakedness.\n\n\u201cI have to feel sorry for you\u2014you\u2019re too weak for me,\u201d she shouted, bitterly.\n\nThen in an attempt to correct herself, she added, ironically:\n\n\u201cI\u2019ll pray for you.\u201d\n\n\u201cSave it,\u201d I said. \u201cTry praying for some common sense, instead.\u201d \n\nAs soon as it was out of my mouth, I regretted it. The remark cut a deeper wound in her, and turned her attempt at pity, back into anger.\n\n\u201cBy the way,\u201d she shouted, fighting to smile through her tears, \u201cI lied. You were awful!\u201d\n\n\u201cI\u2019m sorry,\u201d I said.\n\nWe both knew I wasn\u2019t referring to the sex.\n\nAs I drove off, I could see Natalie in my rear view, standing in the rain, crying. My eyes were still burning from the sleepless night. But the pain behind my eyes was worse.\n\nI had had many nights like the one with Natalie, where I\u2019d spent the evening taking all I could, but left the next morning all the emptier.\n\nAlthough I knew I could come back to Natalie, I knew I wouldn\u2019t. I was getting too old for this stuff.\n\nIt would be better left well enough alone. I never knew a poor man that grew rich on the alms of others.\n\nI stopped at a light and noticed some ashes from Natalie\u2019s cigarette on my pants. How appropriate, I thought. I fingered the ashes and dabbed my forehead, leaving a sooty, black mark.\n\nThe rain showered down upon the windshield, pooling itself across my view. I turned the wipers up a notch. They parted the waters, as I found my way home.\n\nThe End"
    ],
    "authorname": "bwilson",
    "tags": [
        "family values",
        "strictly sex",
        "cool people",
        "left company",
        "call wanted",
        "played back",
        "cigarette hand",
        "start laughing",
        "bed natalie",
        "statement question"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/a-farewell-to-alms"
}