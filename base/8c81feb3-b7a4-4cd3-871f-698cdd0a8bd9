{
    "title": "Curse of the Trickster God",
    "pages": [
        "Part One: God of Travelers\n\nFrom the tip to the bottom of the shaft, the cock was at least four feet tall. \"Evidence for the argument,\" I said to Theo, \"that size does matter.\"\n\nTheo laughed, shaking crumbs off the blanket where we'd had our picnic. \"Pop quiz, Cass. What's the Greek term for the big weiner there?\"\n\nOf course I knew the term for it, I'd just spent the last three weeks of Summer Break studying ancient stonework along the coast of Greece with a chosen few from my junior year Mythology and Architecture class. But I spent a little time pretending to think hard. I bit my lip, jutted my hip, and with one hand absentmindedly stroked the head of the stone penis. \"Hm... hm...\" I twirled a finger around the head, then moved my hand down the shaft. I was pleased to see Theo's eyes on my hand. I stepped behind the stone phallus and rocked my hips as if thinking harder. \"Oh gosh, let's see if I can remember...\"\n\nAll around us the green hills rolled off towards the coastline. We'd set our picnic in the shade of a broad-branched tree, and something about the warm sun and the cool coastal air had added spice to our simple lunch of bread, cheese and wine. Stone cocks ran in a line along the hills like fence-posts, some worn down to smooth stubs; others, like this one, still showing finely-carved details of curves and veins. I looked at Theo, and the blush spreading across his neck and cheeks. As the Teaching Assistant to Professor Dartien, he had always relied on me for quick answers to tricky problems. In truth I'd always found him ridiculously handsome, with his smooth nutty skin and glossy black hair.\n\nI flicked my dark mane of hair back, drawing Theo's attention to my bare shoulders above a blue strapless dress. I was barefoot, no jewelry, no gloves or socks or hat, and I knew the dress complimented my fair skin and black hair. I put a finger to my lip, keeping up the illusion of deep thought, and licked the tip. With the other hand, I kept rubbing the head of the large stone dick. \"Why should I even answer the question?\" I teased Theo. \"It's summer, I'm volunteering here, so I can't even earn a good grade.\"\n\nTheo smiled back. He'd finished packing up our picnic into his backpack, and he stood and placed his hands on his hips. The breeze pressed his simple long-sleeved shirt against his body, showing off the lithe muscles of someone who digs for artifacts all day, but spends the night reading ancient poetry. \"Well, maybe I can make it worth your while...\"\n\n\"What'll you give me?\" I asked. I leaned my head down to the stone dick and pursed my lips. \"A kiss if I'm right?\" I turned around and pressed my ass to the cock. \"And what if I'm wrong?\"\n\nTheo didn't reply. I looked back over my shoulder. He was still blushing, though smiling widely, struck mute by my obvious display. \"Cassy,\" he said, \"we already talked about this. I can't date a student.\"\n\nI rolled my eyes and straightened my dress. I walked around the stone phallus and stepped closer to Theo. I said, \"I'm not a student right now. I am a volunteer.\" I placed a hand on his arm.\n\nTheo reached up to brush off my hand, but instead placed his own large hand over it. \"Cass,\" he breathed. I moved closer, lifting my chin for kiss.\n\nBut Theo turned away.\n\n\"If we start dating now, and the school year starts, I could get in a lot of trouble with my graduate program. Vistra- er, Professor Dartien would be very disappointed. I'm relying on her for my research.\" Theo took a step away, and kept his eyes on the white-capped ocean. As he shifted, I heard a little clatter from below. Rolling over a few times in the grass was a long stone object, maybe ten inches long. I bent down to examine it.\n\n\"Look Theo,\" I said, picking up the object. \"It's a smaller version of the herma.\"\n\nTheo laughed and turned around. \"So you did know the name of it!\"\n\nI rolled my eyes. \"Of course! And for bonus points, Mr. Teaching Assistant, I'll tell you what it's for. The herma marked the border of different territories, like ranches or towns.\"\n\n\"And who was it named for?\" Theo asked. The academic topic had somewhat calmed him, and he took the stone object from my hands.\n\n\"Hermes, of course. Well actually, Hermes was probably named after the term herma, which means a pile of stones. He was, after all, a fertility god, as well as the god of borders, merchants, and travelers.\"\n\nTheo gave me an approving look. He pointed the stone object at me- a carved stone penis, much like the herma behind us. \"This seems to be a smaller version of it. I wonder how old it is.\"\n\nI replied, \"I wonder how we didn't notice we were sitting on it the whole time! It was right beneath the blanket!\"\n\n\"Must have been the wine.\"\n\n\"Must have been the company.\"\n\nI took the smaller stone cock from Theo's hand. It did look old, though marvelously well-preserved. I lowered it to my own crotch and pointed it at Theo. \"Is this what it's like having a boner?\"\n\nTheo raised an eyebrow. \"I guess so!\" he laughed.\n\nWhile holding the phallus with one hand, I started lightly stroking it with the fingertips of the other. \"Is yours this big, or bigger?\"\n\n\"Cassy!\"\n\n\"What? I'm a curious girl! It comes with being an amateur historian!\"\n\nTheo took a step back and crossed his arms. \"Cassidy, I'm serious. I can't date a student.\"\n\nI stepped closer. I pressed the stone phallus into Theo's chest, as if poking him with my finger. \"I know that, Theo. I wouldn't want to put your research at risk. As a matter of fact, I don't want to date you.\"\n\nTheo's eyes nearly popped from his head. \"What?\"\n\nI lowered the phallus down to Theo's jeans and gently pressed it between his legs. \"I just want to see your herma.\"\n\nGiving Theo time to consider this, I sat back down into the soft, tall grass. For miles around, I saw not another soul. Just lonely dirt roads winding over the coastal hills between lush green trees. Our own bikes leaned against the nearby tree trunk. Seabirds wheeled above us, letting out their harsh, lonesome calls.\n\nTheo took a deep breath. He looked down at me, then out at the sea, then back at me.\n\nI knew I had him.\n\nI ran the stone phallus over my bare leg, enjoying the feel of the cool rock, drawing it from my ankle along my supple calf, up to my thigh. When it reached the edge of my dress, I let out a soft coo.\n\n\"Look Theo, I'm not much of a relationship girl,\" I explained, \"it's just that all school year I've thought you were cute. And this summer I pretty much volunteered to help Professor Dartien just to spend a few beautiful weeks digging through the dirt and organizing artifacts on the coast of Greece to be close to you! I think you're totally hot, and I think you are attracted to me too!\"\n\nAll the while I'd been slowly drawing the stone phallus up my bare thigh, dragging the hem of my dress with it. I knew from where he was standing, Theo would be able to see glimpses of my light pink panties.\n\nBut I just continued to stare him in the eye. \"So we can stand around here on this fucking beautiful hill overlooking the fucking beautiful ocean and talk about Hermes, god of borders, or you can unzip your pants and I can give you an amazing blowjob. Then when we get back to the states, it's like nothing ever happened!\"\n\nBy now I'd drawn the stone dick all the way to my panties. I had it pressed against my crotch, and I could feel its coolness against the heat of my vagina. Theo's eyes kept darting back between my gaze and the show I was putting on for him below.\n\nTheo took one last glance towards the herma by the tree. Something seemed to pass over his face, and tension left his shoulders. A smile broke out across his face, and he leapt down at me. I shrieked in surprise, though my mouth was soon covered by his. We kissed longingly, deeply, his tongue against mine, his hand on the back of my neck.\n\nI immediately wrapped my legs around Theo's waist and pulled my hips against his. I could feel through his jeans that Theo was already hard. My little show had done its magic.\n\nTheo kissed down my neck and over my shoulders. With one hand he reached down and squeezed my ass, lifting my pelvis to grind against his raging erection. I reached up and slid his shirt from his chest, admiring the muscles beneath his dark skin.\n\nPanting, I pushed Theo away for a moment. \"Sit back against the tree,\" I said. Smiling mutely, he did so.\n\nAs Theo settled down, I stood and slid my panties from beneath my dress. Already the panties were wet. I could smell my sex emanating from them. I tossed the panties to Theo. \"Hold onto these for me.\"\n\nI kneeled down in front of Theo and unlooped his belt, unzipped his pants, and reached my hand in to free his cock. It was nearly as big as the stone phallus I'd found, at least eight inches and thick as well.\n\n\"Jesus, Theo, I didn't know you had a herma here the whole time!\"\n\nTheo laughed, but his laugh stopped short as I slid my lips over the head of his cock. \"Ah- Cassy!\" he sighed.\n\nI kept my lips wrapped just around the head of Theo's cock, and started licking circles around the tip of it. Theo's hips jutted uncontrollably. Jesus, the guy was really turned on! I was worried he was going to cum too soon, so I lifted my head and grabbed hold of his shaft.\n\nTheo really had a beautiful penis, big and thick and the same dusky color of the rest of his body. I loved the feel of it in my hand, that strength and girth of it. I wiggled it around, my eyes wide.\n\n\"What's it like, having a penis? Do you love it?\" I asked.\n\nTheo chuckled. \"What do you mean?\"\n\n\"Do you love your penis?\" I repeated. \"I'm serious, I really want to know. It's such an important part of you. I mean right now I've got you totally in my control just because my hands are wrapped around your cock.\"\n\nTheo started to sit up. \"You don't have me in total contr-\"\n\nI immediately sunk his cock into my mouth and started bobbing my head, sucking and licking hard.\n\n\"Oh god...\" Theo moaned.\n\nI grabbed his shaft in two hands and stroked as my head bobbed up and down. Finally I pulled off of the cock, thick saliva dribbling from my mouth all over the swollen head.\n\n\"I love your cock,\" I said, wiping my lips. \"I mean, I just love cocks in general. Their size, their shape, the way they feel in my mouth, in my vagina, in my... well, everywhere!\" I bit my lip and gave Theo a dirty look. \"Sometimes I wish I had one just so I could feel it whenever I wanted.\"\n\n\"Really?\" Theo asked. \"What would you do with it?\"\n\n\"This!\" I said. I stroked his dick up and down the entire length, rolling my wet fingers over the head each time. Theo gave out a satisfying moan. \"And this.\" With my other hand I grabbed Theo's balls and gave the lightest squeeze. \"Doesn't that hurt? Why's it feel so good?\"\n\nTheo panted, \"If I weren't so turned on it would hurt. But god you've got me ready to explode at any moment. Everything feels good right now.\"\n\n\"If I had a cock,\" I said, continuing to stroke, \"I think I'd find a guy and fuck him in the ass. Or have him blow me. I'd like to feel some lips around my cock, a tongue licking it like a popsicle.\"\n\nAnd to demonstrate, I ran my tongue from Theo's balls to the tip of his penis. I drew a circle with the tip of my tongue around his head, then licked back down his shaft. I did this a few more times, feeling the pleasure my tongue brought Theo, then again took the head and a few inches into my mouth. I tightened my lips and brought my head up, popping the head out of my mouth with an audible pop.\n\n\"Have you ever wondered what it would feel like to deep throat a guy?\" I asked Theo.\n\nHe shook his head. \"No, not really.\"\n\n\"Well just imagine doing this,\" I said. I took Theo's cock in my mouth and lowered my head until I could feel it pressing against the back of my throat. I relaxed, took a deep breath, and pressed deeper. I kept my eyes on Theo's, and I could see the lust reflected back. Slowly, slowly, I took more and more of Theo's cock into my throat. Each time I took another quarter of a inch, I stopped, breathed, relaxed, and pushed deeper. Thinking of Theo's cock filling my throat turned me on so much! I could feel my pussy pulsating, dripping with wetness. More and more, I let Theo's cock slide into my throat, until finally my nose was pressed against his taut belly.\n\nOkay, I'll admit, I was practiced at this. I hadn't lied to Theo when I said I wasn't a relationship girl. College is the perfect time to experiment, and I had in fact experimented. A lot. I couldn't really keep track of how many guys I'd fucked at this point, but I'd always been safe and it always felt good. During freshman year, my roommate Piri and I had a competition to see who could give the most blowjobs in three weeks. I think we were both trying out new college personalities, and it turns out we were both really competitive.\n\nTwo days before the end of the competition, I was behind five blowjobs. Piri had given a stunning fifteen blowjobs in less than twenty days. I'd given ten- a pretty good number, if I do say so myself. I was getting used to ending first dates by blowing the guy in his car. I was getting used to random hook-ups with cute guys in the library. And I'll admit, I was liking it. I liked the idea of being desired, of making guys hard, of being so fucking sexy that guys blew their loads down my throat. I was even starting to like the taste of cum.\n\nSo I decided to challenge myself the weekend before our competition ended. I'd been invited to a party at which about two dozen \"freshman ambassadors\" from other colleges had been invited. Knowing they wouldn't be around for long, I'd singled out each ambassador- this one from Stanford, this one from Texas A&M, and identified the six most attractive men. One by one I invited them to a back room of the house, and gave each a blowjob. On each cock, I tried to go deeper, just to see how far I could push myself. On the first cock, I gagged as soon as the head of the penis hit the back of my throat. By the third cock, I could swallow it down for a few seconds. By the sixth cock I was a deep-throating master.\n\nI won the competition.\n\nAnd now I had Theo's cock eight-inches deep down my throat and I wasn't letting go. I held Theo's gaze in my own and let him just marvel at the beauty of an amazing blowjob. I took deep breaths through my nose and felt his dick pulsing in my throat, swelling against me. Finally, finally, I lifted my head, gasping for air.\n\n\"So what do you think?\" I asked.\n\n\"I don't think I could ever do that,\" Theo admitted. \"But it felt fucking amazing.\"\n\n\"You're goddamn right it did,\" I said. \"I am so turned on, Theo. God, your cock felt so good down my throat.\"\n\nI started stroking Theo's cock, big long strokes, my hand sliding over the wetness I'd left behind. Every time I ran my hand over the swollen head of his dick, Theo let out a little moan.\n\n\"Tell me Theo, did you ever touch yourself while thinking about me?\"\n\n\"What?\"\n\n\"Oh come on, you must have. I know you had the hots for me in class. You kept calling on me, looking for my raised hand. I know that you jerked it thinking about me doing just this.\" I lowered my head and licked under the tip of Theo's dick, that sensitive spot right below the head. Meanwhile, I kept stroking his shaft. Theo gasped.\n\n\"If I had a dick,\" I continued, \"I think I'd just be stroking it all the time. I wouldn't be able to help myself.\"\n\nI kept licking that special spot on the underside of the head, then running my tongue and lips back over the head, repeating it while stroking with my hand. With my other hand I'd reached between my legs and started furiously rubbing my swollen clit. My fingers were instantly drenched with my own juices. Hell, I could smell how turned on I was.\n\n\"Theo, have you ever tasted your own cum?\"\n\nTheo answered between gulps of air. I could tell he was close. \"N-no!\"\n\n\"If I had a dick, a big hard dick like yours, I would cum all over myself and lick it up.\" I was bucking my hips against my own hand, sliding three fingers into my vagina, then rubbing my clit, all while stroking and sucking Theo's cock. I felt myself close to climax.\n\n\"Theo, grab my head and use me like you fantasized all year. Cum down my throat. Give it to me!\"\n\nTheo grabbed the back of my head, his dark fingers vanishing into my darker hair. I felt my wet panties still clutched in one of his fists. Theo held my head in place while bucking his hips, fucking my mouth. I felt his big swollen head run over my tongue and down the back of my throat. I kept flicking my fingers over my clit, harder and harder, until finally I felt myself shaking and releasing, climaxing as Theo fucked my mouth and throat. He let out a loud groan, and I could taste warm cum pouring into my mouth.\n\nI reached up and milked Theo's cock for every drop of cum. I sucked and licked and lapped his cock, drawing my hands over the shaft, squeezing and rubbing as Theo's hips shook and the last little droplets of cum squirted out.\n\nI swallowed, and licked my lips.\n\n\"I dedicate this sacrifice to Hermes!\" I cried.\n\nTheo laughed.\n\nWe lay for a while beneath that tree, enjoying the feeling of the ocean breeze on our exposed genitals. I traced a finger through the dark curly hairs on Theo's chest.\n\nTheo sighed into my hair. \"Listen, Cassy, maybe when we get back to the school we can see each other sometime?\"\n\nI looked up into Theo's brown eyes. \"Are you serious? After all that talk?\"\n\n\"Well...\"\n\n\"It's just the blowjob speaking, buddy. I loved sucking you off, but as I said before, that's all I'm after. I don't want a relationship, I don't want to cross that border.\"\n\n\"Oh, okay.\"\n\n\"Sorry, Theo. You're a really great guy, and you are smoking hot. But I'm just not ready to commit.\"\n\nThe conversation had cooled our passion, so we tucked ourselves in and got ready to bike back to town. As I buckled on my helmet, I saw Theo searching the grass.\n\n\"Have you seen that little stone phallus? I think Vistra- er, Professor Datrien would be interested in it.\"\n\n\"Would she now?\" I teased. \"You haven't shown her your phallus, have you?\"\n\nTheo blushed once again. \"Never!\" he said. \"To be honest, I don't think she's interested in men.\"\n\n\"No hermas for her then,\" I joked. \"Let me help you search.\"\n\nThough we looked through the tall grass for a good half an hour, the smaller stone phallus was nowhere to be found. We agreed that the ancient god Hermes had taken it back, and looking one last time with fondness on the stone herma by the tree on the hillside above the ocean, we rode back to town.\n\nPart Two: God of Fertility\n\nBefore I knew it, my senior year had begun. I started with a full course load, balancing classes in archaeology, geology, ancient history, and romantic languages. As my course load increased, my dating life dropped away. I would see Theo helping a few professors in class, but we kept our relationship strictly student-teacher. Though occasionally memories of the coastal hillside came back to me, and I felt a continued fondness in my heart for my handsome teaching assistant.\n\nThen I found the paper slipped into my notebook.\n\nAs I unpacked my backpack in my bedroom, the folded sheet of lined paper fell to the floor. Inside was a letter from Theo. It was the end of a long day of study, so I changed into a baby-doll t-shirt and pajama shorts before settling into bed and opening the note.\n\nDear Cassidy,\n\nI think we need to talk. I've been trying to keep the past in the past, but Hermes is the god of travelers and my mind keeps traveling back to Greece. I remember the sun on your shoulders, and your lips on mine. I remember how good- well, let's just say I remember a lot. I don't know how you feel, but I'm ready to commit. I'm ready to face Professor Dartien and let her know we are in a relationship. Are you ready to travel with me?\n\nYours,\n",
        "Theo\n\nMy heart sank. In truth, I still thought about that hillside passion often. God knows I'd brought myself to climax more than once thinking about Theo's cock down my throat. But the idea of a relationship just terrified me. I knew that Theo thought of me as this new thing, this new passion, this new toy. Oh he loved the blowjobs and deep throating, and I'd fuck his brains out too, but he'd eventually grow tired of it. Once I wasn't new, he'd move on to the next undergrad with wet lips and an attraction to well-educated cocks. Or I'd fall in love with the next teaching assistant with a phallus and break Theo's heart.\n\nIn short, there was no happy ending to this, or any, relationship.\n\nWhy couldn't Theo see the pointlessness of it? I was more than willing to give him another blowjob, or fuck him crazy a few times. Wasn't that enough?\n\nI crumpled up the note and threw it to the floor. It took me some time to go to sleep. In truth, I'm not sure when my memories of Greece shifted to dreaming. But I know that I dreamed.\n\nI dreamed of a green hillside, and a broad-branched tree, and blue waves slowly churning to shore.\n\nI dreamed I'd had a picnic, but alone this time, next to a four-foot herma. But the herma wasn't made of stone. It was flesh. A real four-foot penis sticking out from the ground.\n\nStaring at the herma, I felt myself more turned on than ever in my life. It was as if my vagina were a river, gushing fluid down my thighs. I climbed up on top of the four-foot penis, and started rubbing myself against it. Somehow my vagina stretched open and I took the head of the huge cock into myself. It felt like splitting open, and yet also like the greatest climax. Slowly the giant penis started sliding into me, filling me absolutely.\n\nI heard a polite cough.\n\nA slight but well-muscled man stood by the tree. Dressed in a simple white tunic and sandals, he stared at me with a look of unabashed entertainment.\n\n\"Are you enjoying that?\" he asked. Somehow I knew he was speaking in ancient Greek, the Greek of the Iliad and the Odyssey, and yet I understood every word.\n\n\"It feels so good!\" I cried back. About a foot of the penis had entered me, and I could feel it all throughout my vagina and even against my spinal cord. I wondered where it could be going. My body shook, and I realized I had the feeling of climaxing shooting through all my nerves. And yet whereas that feeling faded quickly in the waking world, in the dream it just kept going and going and going.\n\nThe man laughed. \"I enjoyed your little show a few weeks back. So I've decided to give you what you asked for.\"\n\nI could hardly pay attention to his words. Half the huge cock had pushed into me. It felt as if my whole body were as sensitive as my clit. I looked down and gasped.\n\nRather than entering me, the cock was hanging from me. It was still huge, a good two feet long and as wide as a fire hydrant, and yet its base was connected to my pelvis, two huge balls swung beneath like pale coconuts, and the bright pink head brushed through the tall grass of the hill. I still felt like I was cumming, only instead of cum my vagina had produced a penis.\n\n\"It looks good on you,\" the man said with a wink.\n\nI felt like I was fucking and getting fucked at the same time. The tremendous climax continued to wracked my body, and I woke up cumming and clutching my sheets.\n\nAlmost immediately the dream started to fade. By the time I'd cleaned myself in the bathroom, all I could remember was the hillside in Greece, and the note Theo had left me.\n\nIn the morning, my vagina itched like crazy. I tried to not visually scratch my crotch as I ate a bowl of cereal in the kitchen, my roommates marching in and out in various states of dress. But on the drive to school, I dialed the campus health clinic and made an appointment.\n\nI hadn't been on a date in weeks, and yet I figured somehow I'd caught an STI. I was always so careful! But college life is dirty, and I'd heard it's possible to catch something just by sitting on the wrong toilet seat. I promised myself I would not think more about it until I was in the doctor's office that afternoon.\n\nIn the meantime, I had to catch up on my reading before class. I parked and walked through twisting paths to my favorite secluded campus library. It was a building designed like a spider's web, all these interconnected hallways ending in dead-ends and isolated reading rooms, with a large beautiful atrium at the center. I walked about, taking random turns until I found an empty table at the end of a hall, surrounded by the multihued spines of medical texts. As soon as I put my backpack and laptop down, I glanced around and, seeing I was alone, relieved myself by itching my crotch.\n\nThe itchy feeling had spread! Though in the morning I had searched my vagina, thighs, and ass in the mirror, I hadn't seen a single rash, pimple, or, you know, weeping sore. It looked like normal, a prim vagina beneath a trimmed triangle of black hair. But the itching had gotten worse and worse all morning.\n\nI tried focusing on my reading. Today's lecture would be on artifacts that influenced oral traditions of storytelling, and it was honestly a fascinating subject. I was especially interested in the common motifs of snake-haired women that probably influenced stories of Medusa and other gorgons. And yet the whole time I read, it felt as if there were snakes wiggling around in my vagina!\n\nFinally I couldn't take it anymore. Scratching over the clothes wasn't enough. I reached my hand under my skirt and my panties and scratched- or planned to.\n\nI felt something there.\n\nWhere my vagina should be was an... extrusion. A large... bump? tube? of flesh bundled beneath my panties.\n\nMy first thought was that a leech had attached itself to my pussy.\n\nI looked down in the gap my hand had created and I saw it. There was a penis in my underpants.\n\nI pulled my hand out as if it had been bitten by a snake.\n\nThen I looked again.\n\nAnd again.\n\nI stood and, leaving my backpack and laptop, marched to the nearest bathroom. I had to walk down a number of hallways and through the central atrium itself, past about a dozen students. I could feel the weight of this... thing... in my panties, this coiled, warm, sensitive thing that no longer itched but instead was sitting there, making a visible bulge in my short pleated skirt.\n\nI walked into the bathroom. There was another girl there, checking her makeup in the mirror. I walked into a stall and pulled down my skirt and my panties.\n\nThere was a penis between my legs.\n\nThere was a penis where my vagina should have been.\n\nI lifted the flaccid thing and looked beneath.\n\nThere were balls hanging there, with a number of strands of black hair.\n\nI tugged on the penis.\n\nI felt pain.\n\nI tried to pull the penis off.\n\nI felt more pain. I gasped.\n\nFrom outside the stall, I heard the girl ask, \"Are you okay?\"\n\nI stammered, \"Uh, yeah, um, just girl stuff you know?\"\n\nThe girl laughed. \"Holler if you need anything. I've got some tampons and some pads if that's what you need.\" Her voice hushed. \"Or a vibrator, depending on your issue.\"\n\nI attempted a laugh, but I was shocked by what I was seeing. The moment the girl had mentioned a vibrator, I had a flash of imagining her pressing the vibrator against her clit, with her pants around her ankles and her knees spread. The head of the cock hanging between my legs swelled up, big and pink.\n\nSlowly, slowly, the penis grew in girth and length. It started to rise, its head lifting as if standing to attention.\n\nMy cock had turned into an erection.\n\nThe girl in the bathroom spoke again. \"You sure you're okay in there?\"\n\n\"Yep!\" I squealed. \"Just fine!\"\n\n\"Okay,\" she said. And I heard her washing her hands.\n\nI slipped my panties and pleated skirt over my boner and straightened my shirt. I opened the stall and walked straight to the door.\n\n\"Hey!\" the girl said, \"you've got to wash your hands!\"\n\nI turned. I saw the girl- tan skin, auburn hair, a slim beauty- glance down at my tented skirt and back to my face. She blushed. \"Oh,\" she said, \"I didn't know-\"\n\nI rushed out the door.\n\nI tried to walk casually back to my desk, but I felt the eyes of each student in the library. In truth, my erection was fucking obvious. My small skirt that I'd worn to feel sexy after last night's dream was lifted in front of me a good inch or two. Every step I took, my panties rubbed against the underside of my new penis. It felt good! And completely humiliating! I didn't know what the students in the library were thinking, and I didn't know what I was thinking. Last night I'd had a vagina. Hell, this morning I'd had a vagina. As far as I knew, the moment I stepped into the library I had a vagina. And now I had a penis. Which was erect. And balls. Which were tightening up with pleasure.\n\nI sat back down at my table and checked the rest of my body. I ran my hands over my chest. I still had breasts. My nipples, in fact, were hyper-sensitive, and running my fingers over them made my cock swell even more. I took out a little compact and looked at my face. I still looked like myself- fair skin, dark eyebrows, high cheekbones, blue eyes. I hadn't grown a mustache or anything.\n\nAnd yet, beneath the table, my penis pressed against my panties.\n\nI moved my compact down beneath the table and angled it beneath my skirt. There within my panties I could see the obvious bulge of my new penis. I saw my balls pressed against the pink fabric, and the outlines of my shaft and head. It was a sizable penis! The kind I'd loved to swallow and fuck last school year. I compared this new penis with all the ones I'd seen over the years. And in doing so, I felt my balls tighten and my head swell.\n\nGod, I was turned on. I'd have to go the rest of the day with this big erection beneath my skirt. How did men deal with this?\n\nWait, I knew how men dealt with this.\n\nI looked around the hallways. I was at one end of a t-junction, with a left and right turn about ten feet away. As long as no one walked around either corner, I was alone.\n\nI bit my lip and hiked up my skirt. Curious, I stroked the stretched fabric of my panties outside my cock. My fingers felt electric. I could feel the warmth of my cock pressing against my belly. In fact, the head of my cock was emerging from the elastic band of my panties!\n\nI took another look down the hall. No one. I listened. No footsteps, no conversation.\n\nI lowered the band of my panties until they stretched beneath my balls.\n\nMy cock stood like a flagpole, proud and thick and huge. The thing had to be ten inches long! I wrapped my fingers around the base and they barely touched tips on the other side. It was the biggest cock I'd ever seen, outside of porn.\n\nAnd it was my cock.\n\nI ran my fingertips all over my cock, from my balls to the tip. I could feel myself wanting more contact. Beneath the table, I wrapped my fingers around my cock and slowly stroked.\n\n\"Ow!\"\n\nMy hand was so dry, it had rubbed angrily against the skin of my penis.\n\nI raised my hand to my lips and spit into my palm. Lowering my hand back beneath the table, I rubbed the saliva over the head of my penis.\n\n\"Oh!\" I groaned, then quickly quieted. I didn't want anyone to hear me!\n\nAs with one hand I held up my pleated skirt, I started rubbing the head and upper shaft of my cock with my other hand. It felt so good! No wonder guys would do anything to get a hand or a mouth or a vagina on their dicks. It felt amazing, and it was so easy to feel this way!\n\nI started stroking my cock faster. Peeking beneath the table, I saw pre-cum beading at the tip of my dick. I rubbed a thumb over it and massaged the pre-cum onto the spot beneath the head of my cock.\n\n\"Ah!\" I cried.\n\nI heard some muffled voices nearby. If I wasn't careful, someone would come and see what I was doing. They'd see me tugging on my cock beneath the table.\n\nGod, even the thought of someone seeing me was turning me on!\n\nI stroked faster, trying to get my hand over my entire cock at once. It was impossible, of course, but it made me move my hand faster and faster.\n\nI thought about Theo, and the summer hillside in Greece. I thought about deep-throating his dick, and how that would feel on my new cock. I thought about Theo's cum coating my tongue and flowing down my throat.\n\nI felt my balls tightening.\n\n\"Uh oh!\"\n\nI reached wildly into my purse and brought out a handful of tissues. Just in time, I pressed the tissues to the tip of my cock as I exploded. Wild energy pulsed through my hips and balls and shaft, and I felt the head of my cock expanding as if it were about to burst. Gush after gush of cum shot into the tissue bundle. I felt some of it leaking out over my hand, hot cum dribbling over my fingers.\n\nFinally, with a final squeeze, the last of the cum shot out. I gasped, my heart racing. I felt my dick slowly subsiding, dropping down to my pulled-down panties.\n\nIn my hand was a mess of tissue, and a splattering of escaped cum. With my clean hand, I pulled out a few more tissues (thank God it was allergy season) and wrapped the cum-Kleenex ball up. But there was still cum on my fingers.\n\nI raised my fingers to my nose and sniffed. It smelled like cum.\n\nI gave the cum a lick.\n\nIt was a familiar taste, from Theo and other cocks, and yet there was a special little thrill knowing it was my own cum I was tasting. In fact, scooping a little cum with the tip of my tongue made me feel blood rushing back into my cock. I couldn't believe it, I was starting to be turned on again.\n\nWell, screw it. I licked my fingers clean, and by the time I was done my cock was hard again, standing at attention beneath the table.\n\nI pulled some clean tissues from my purse and set them on top of the table. Then I spit into my hand again and went at it.\n\nThe second time took longer. I stroked and rubbed, squeezed my balls with my other hand, and even reached up and pinched and massaged my nipples and breasts. I imagined myself being fucked, giving head, and then I started to imagine myself fucking others. I suddenly realized that if this cock were real- that is, if I weren't dreaming or having a psychotic meltdown- there was a whole new world to explore. Rather than getting fucked by Theo, how would it feel to fuck him? To have his lips wrapped around my cock? To feel myself inside of him?\n\nI came again; less cum, and more easily cleaned. But the rush was the same, an absolute headtrip that felt as if I'd left my body for a moment and an eternity.\n\nIs this how guys felt all the time?\n\nI pulled up my panties and tried to smooth out my pleated skirt. Things looked a lot more subtle now that I didn't have an erection. I would just have to be careful today until my appointment at the campus health clinic. I was sure that the school doctor could clear this little problem up... or at least tell me how to wake up from this strange dream!\n\nPart Three: God of Trade\n\nI left the campus clinic more confused than before. I carried a handful of pamphlets with explanations of gender identity, contacts for counselors, and a schedule of support groups. The doctor had thought I was transgendered. The doctor thought I had memory problems. The doctor did not believe that I had grown a penis after stepping into the library.\n\nI'll admit, I still didn't really believe it myself!\n\nAnd yet the doctor had poked and prodded my penis, and felt my balls, and I'd felt every touch, and the cold air in the doctor's office as well.\n\nThis was all too much for me. I had class in a few minutes, but I decided instead to head home and go back to bed. Hopefully I'd wake up in a few hours back to normal.\n\nThen I heard a voice behind me.\n\n\"Hey Cass!\"\n\nI knew exactly who it was.\n\nTheo stood at the end of a hall, waving to me.\n\n\"Wait up!\"\n\nHe rushed down the hall. \"Did you get my note?\"\n\nI nodded. \"Now's not a good time to talk about it.\"\n\n\"Oh,\" I could see disappointment flash across his eyes. \"I guess you were pretty clear in Greece about what you wanted.\"\n\n\"It's not that,\" I said.\n\n\"Then what?\" he asked. \"Are you... seeing someone else? After you told me you weren't into relationships? That's hardly fair, Cassidy.\"\n\n\"No, no!\" I cried. \"It's... complicated. Look, I can't explain here.\"\n\n\"Cass,\" Theo said, grabbing my shoulders. \"I can't let you walk away right now. I've been thinking about you every hour of every day since this summer. That bike ride along the coast, that day together on the hillside near the herma... You're so bright and beautiful and passionate about life. I can't get you out of my mind!\"\n\nI tried to stare understanding into Theo's soft brown eyes. I said, slowly and clearly, \"There's something else going on.\"\n\n\"I'm trying to tell you that too!\" said Theo. \"There's something going on between us, and I don't want it to just be a casual hook-up. I want more. I need more, or I'm going to go crazy. Please, just tell me what you need from me. What can I give you, what can I promise you? Help me understand!\"\n\n\"Fine!\" I shouted. I glanced around. The few students who were around had their backs turned or were walking the other way. I pulled up my skirt with one hand and pulled down my panties with the other. My cock flopped out, dangling down between my thighs.\n\nTheo stared, open-mouthed.\n\n\"What.\"\n\n\"Exactly,\" I replied. \"Something weird is happening and I can't talk about it here!\"\n\nTheo said, \"Okay, I've got an apartment on campus. Come back with me, I'll text my professor that I have an emergency.\"\n\nI tucked my dick back into my panties. Theo took my hand reassuringly. \"I don't know what's going on, Cass, I don't know if this is a prank or if you've been hiding something from me, but I know that I'm really, really into you. We'll figure this out together.\"\n\nI felt relief wash over my entire body. This whole morning I'd been considering the cock my problem and my problem alone. But now I had someone to share it with. Someone to help me figure out how my vagina turned into a penis. Someone to tell me I'm not crazy.\n\nTheo led me through the campus to a block of housing for graduate students. He swiped his card to unlock the door, and we walked, hand-in-hand, down a hallways to one of the many anonymous doors.\n\nThe \"apartment\" was only a little larger than my freshman dorm room. However, Theo had the entire place to himself. There was a tiny kitchenette, and a bunk bed over a couch. There was a bathroom and a closet, and that was about it.\n\nTheo sat me on the couch and grabbed two beers from the mini-fridge. I took a long, long drink from mine, followed by a deep breath.\n\n\"Okay,\" said Theo. \"Tell me what's going on. Start from the beginning.\"\n\nI explained what had happened, starting with reading his note the night before. Theo reddened as I repeated his words and as I told him I'd dreamed of the Greek hillside. When I reached the library, I explained discovering my new cock in the bathroom, but I left out the details about masturbating. I told Theo about how the doctor hadn't believed me, and he shook his head in bewilderment.\n\n\"Cass, you understand that this all sounds crazy. I mean, I saw the... you know, penis... but strap-ons and dildos and such look really realistic these days.\"\n\n\"Do you want to see it again?\"\n\nTheo looked at me for a bit. Then he nodded. \"Yeah, okay.\"\n\nI kicked off my shoes and slid my panties down over my feet. My cock hung out. Apparently reviewing the day had triggered something, as my cock was starting to get firm. Not a full erection, but the dick definitely wasn't limp.\n\n\"And it's real? You're sure it's real?\" Theo asked.\n\n\"Give it a try,\" I said.\n\nTheo knelt down and poked my cock. It shifted to his touch.\n\n\"Jesus!\" he cried.\n\n\"It's not electric,\" I joked. \"It's just... excited. I mean, it's not like my sexuality has shifted. I still, you know, find you handsome.\"",
        "\"Oh yeah?\" Theo said, blushing a little. \"Well I'll admit that I find you attractive, even with a penis.\"\n\n\"Really?\" I asked. My cock was really starting to fill in now. The head was swelling and the shaft kept lifting off my thighs, then relaxing back down.\n\nTheo laughed. \"Yeah, it might be crazy, but it's kind of hot what you're doing right now. I mean, sometimes it's hard to tell if a girl is really turned on just by looking. But right now I can tell that you're getting pretty horny.\"\n\nI looked down at my dick. It was really stiff now, standing at an angle out from my crotch. Again, I was surprised by its size and girth. So was Theo. \"Jesus, that is a big one. I feel a little jealous!\"\n\n\"I don't think yours is that much smaller,\" I said.\n\n\"That's not much of a consolations,\" Theo laughed. \"Anyways, I've always been more of a grower than a shower.\"\n\n\"So how's it right now?\" I asked.\n\n\"Well, I'm a little confused, so it's kind of limp.\"\n\n\"Let me see.\"\n\n\"Really?\"\n\n\"Yeah! What's the old game? I'll show you mine, you show me yours?\"\n\nTheo smiled widely. \"This is crazy Cass, you know that?\"\n\nI said, \"It's been a crazy day.\"\n\nTheo was sitting in the one chair in the room, a rolling desk chair that looked out of place without a desk. He stood and as he moved to the couch he unbuckled and slid off his pants. I turned to face him, my back to the arm of the sofa. He sat facing me and pulled his dick from his boxer-briefs. It was limp, but not entirely shrunken, and it looked about five inches long. Compared with my big ten-inch dick, it did look a little intimidated.\n\nTheo asked, \"So can you, like, feel it? Does it feel like having a penis?\"\n\nI noticed his own dick twitch at the question. It seemed like just thinking about dicks made dicks hard. Guys are weird.\n\n\"I mean, I assume so. I've never had a dick before.\"\n\nThere, Theo's cock twitched again. I could see it growing a little stiffer, the head swelling a little. I liked turning him on like that. For the first time in the day, I felt like I had control of the situation. \"I can tell you that I've had some pretty good feelings with it,\" I said.\n\nTheo raised an eyebrow. \"Oh yeah?\"\n\nI blushed a little, and decided to confess everything. \"Well,\" I said, \"in the library when I discovered this dick, I got really turned on. I mean, like, full boner.\"\n\nTheo laughed in shock, and I saw that his cock was filling out. I saw his hand move towards it unknowingly, but stop at his thigh.\n\nI started explaining to Theo what happened in my secluded little spot in the library. How I'd started masturbating, and how I'd cummed twice. By the end of my description, Theo had a full erection, the same dark-skinned staff I'd seen and caressed in Greece. His hand played subconsciously with the base of his cock, as if he couldn't resist touching it. My own cock was still full and erect.\n\nTheo was staring me in the eye, but kept glancing down at the huge growth between my legs. \"God, Cassy,\" he gasped, \"that's actually really hot. I never thought I'd be turned on by something like that.\"\n\n\"And yet,\" I said, wiggling my eyebrows at his erection.\n\nTheo licked his lips. \"Can you... can you show me?\"\n\n\"What?\" I asked.\n\n\"What it looks like when you touch yourself.\"\n\nI was really turned on by this point too. I loved that telling Theo about my library adventures had turned him on so much. I wasn't sure which cock I wanted to touch first. Feeling flushed, I unbuttoned the top of my white blouse, revealing a lacy red bra that matched my pleated red skirt, bunched up around my big, swollen cock. I saw Theo's eyes racing between my face, my exposed bra, and my dick. His hand was gently stroking his own cock, just his fingertips grazing the sides.\n\nI spat into my hand and started rubbing the head of my cock. \"This feels really good,\" I said. \"I didn't know it would make me feel so uncontrolled.\"\n\nTheo spat into his own hand and copied my motion. \"Doesn't it feel good? I loved when you had your lips around the head of my cock, just like that. Not moving any further, not backing away. Just licking and sucking on the tip. Drove me crazy.\"\n\nWith my other hand I started stroking up and down the shaft of my cock, slowly and lightly. \"When I go like this, it's almost like someone's got me in their mouth. I feel my head and shaft all warm and tingling.\"\n\nAgain, Theo copied my motions. He said, \"I do this when I imagine you're deep-throating me. Or when I think about fucking you deeply.\"\n\n\"Do you like to play with your balls when you touch yourself?\" I asked.\n\n\"Sometimes,\" said Theo. He reached down down with one hand and gently touched his balls. \"It depends how sensitive they are, and how turned on I am.\"\n\nI reached down and took my balls in hand while still stroking my cock. It felt good to squeeze them gently, to tug a little on the whole sack. Then I slipped a finger down and pressed just below my balls. \"Oh!\" I exclaimed.\n\n\"Yeah that's a good spot too,\" Theo said. \"Sometimes I press there right when I'm about to cum and it just makes me go crazy.\"\n\n\"I didn't know there were so many spots,\" I said. \"I thought guys were simple.\"\n\n\"We act simple!\" Theo laughed. He was still stroking his cock, and he started scooting closer to me on the couch. \"Cassy, watching you touch your cock is amazing. I love matching your movements. But will you take off your shirt and bra? I want to see more of you.\"\n\nI stopped touching myself for just long enough to strip away my shirt and undo my bra. I don't have the largest tits, but they're round and perky and they seem to hypnotize the boys. Theo was no different.\n\n\"You're definitely not all man,\" he joked. He leaned forward, still touching himself, and sucked on one of my nipples. I started stroking myself again. We were sitting so close now that our hands sometimes grazed each other while stroking up and down. I moaned with pleasure. My nipples had been so sensitive all day.\n\nTheo continued to suck on my nipples. With one hand he masturbated, and with the other squeezed my breasts. He started kissing up my collar and neck, and soon we were kissing deeply. I reached over with one hand and rubbed the head of his penis while he stroked the shaft. My other hand was busy on my cock, rubbing pre-cum from the tip all down along the shaft and stroking. Looking down, I saw that our cocks were crossed like two swords before a duel. I tilted my face back to Theo and kept kissing him.\n\nSuddenly I felt my balls starting to tighten. I knew what this meant now. \"Theo, I think... I think I'm going to cum.\"\n\n\"Me too!\" he gasped.\n\nWe both looked down at our cocks as we stroked them, Theo's beneath a well-muscled dark chest, mine beneath jiggling breasts with swollen pink nipples. My breathing shortened. I couldn't take my eyes off of our cocks, off of Theo stroking his, off of my big swollen head. I suddenly tensed, just as Theo did, and we came at the same time. Rockets of cum shot up across our bellies and chests. I came all over Theo's thighs, his taut abs, even on his cock. Theo's cum arced up onto my breasts, and dribbled down onto my belly. Again and again, cum shot out in two directions, and we didn't stop stroking until our very last gasps.\n\n\"Oh my god,\" Theo said. \"That was amazing.\" He leaned back against his side of the couch.\n\nI slid over him, our cum intermingling between our bodies. I kissed Theo deeply. I felt my cock, now limp, sliding over his thighs and even his dick. \"Can I take a shower?\" I asked.\n\n\"We'll take one together,\" he replied.\n\nI already felt blood returning to my dick at the thought.\n\nPart Four: God of Trickery\n\nLeaving Theo's apartment, my hair was wet and my cock was sore. I had it tucked into my panties, but having stroked it so much this morning was taking its toll. In the shower, Theo had helped clean the cum off my breasts and belly, and then his hands had wandered down. As we made out, he stroked my cock until it was fully hard again, using soap as a lube. I returned the favor, and we stood there in the spray of hot water panting until once again we came together.\n\nAs we dried, Theo put forward a theory. \"This may be crazy,\" he said, \"but maybe your new feature has to do something with what we did in Greece?\"\n\n\"What do you mean?\" I asked, taking my time drying between my legs. Theo still couldn't keep his eyes off me. He kept stealing glances at my bare tits, my tight ass, and the dick between my legs.\n\n\"Okay, I don't believe in any of this, keep in mind,\" Theo said, drying himself. \"But Hermes is a trickster god, right? He tricks Apollo out of his cattle, he tricks Zeus into eating the bones in a sacrifice instead of the meat. You gave me that incredible blowjob right in front of one of Hermes' stone phallus, remember?\"\n\n\"Yeah, the herma.\"\n\n\"Well, maybe this is a result. Hermes is playing a trick on you for, I don't know, desecrating his herma or something.\"\n\nI gave Theo a cold stare as I patted my breasts dry. \"Let me get this straight. You think some ancient god of trade and travel gave me a dick as a trick?\"\n\nTheo laughed. \"I told you it would sound crazy. But can you think of anything else?\"\n\nI shrugged. \"Maybe I was just tucking it in when I blew you in Greece?\"\n\n\"Honestly I kind of wondered that.\"\n\nI slapped Theo lightly in the chest. \"Theo! I am all 100% woman! Had you not been staring at my lips on your cock, you would have seen me drilling my own wet pussy.\"\n\n\"Hm, I think I'd like to see that.\"\n\nI took my now limp dick in hand and twirled it around a bit. \"What, this isn't enough for you?\"\n\nTheo chuckled. \"This is crazy!\" he said, running his hand through his wet hair. \"Maybe Vistra knows more.\"\n\n\"Professor Dartien?\"\n\n\"Yeah, she is an expert on Greek and Roman Mythology. If anyone would know about a curse from a trickster god, it would be her.\"\n\nI considered it. \"Do you think she'd believe me?\"\n\n\"I'll call her first. I think I've earned her trust.\"\n\n\"Alright,\" I said. \"We'll see what our dear professor has to say.\"\n\nI knocked on the door in the history department marked with Professor Dartien's name.\n\n\"The door's unlocked,\" came her voice.\n\nThrough the door, Professor Dartien's office was like a museum shoved into a single room. The walls were lined with shelves, every inch of which was covered in books, journals, photographs, paintings, and artifacts: masks and totems, necklaces and carved stones, dried leather fetishes and bits of ceremonial clothing. Behind a large desk (covered in paperwork, laptops, and even more artifacts), Professor Dartien sat in an ornate wooden chair carved with mythological figures.\n\nThe professor wore a black sleeveless top and a gray skirt decorated with large black buttons. She had her dark hair pinned back, revealing a supple neck and strong jawline. Professor Dartien had flawless tan skin, with a strong nose and delicate features. Her eyes were large and framed by dark lashes, and I saw her trace her gaze from my white flats to my pleated skirt to my white blouse and black hair approvingly.\n\n\"Thank you for making time, Professor,\" I said.\n\nShe smiled and motioned me to a small couch in the corner. There was a quilt printed with exotic patterns on the back, and the throw-pillows looked well-worn. I wondered if the professor sometimes slept here... and irrationally, I wondered who shared the couch with her at night.\n\nI shook my head of the thought. I didn't want my new cock to start tenting my skirt here. I needed the professor's advice!\n\n\"Cassidy, right?\" Professor Dartien asked. She had a strong tenor voice, with a European tinge to it. \"I remember you from class.\"\n\nI smiled. It's always nice to be remembered by a professor. \"I also volunteered with the program in Greece this summer,\" I said.\n\n\"That's right! What a wonderful expedition. I'll be publishing a paper on it this year, and your name will be listed with the volunteers. It's a good entry point to getting published yourself.\"\n\nI nodded. All this was academically exciting, but sitting with my legs crossed tightly on the couch, I could feel my dick pressed between my thighs.\n\n\"Did Theo call?\" I asked.\n\nProfessor Dartien nodded. She'd turned the chair to face me, and I saw she was barefoot, her black heels left on the floor. Her bare feet made the stuffed office suddenly feel more intimate, as if we were in her bedroom. The professor took off her clear-framed glasses and rolled her neck, rubbing muscles tense from reading and research. Her sleeveless black blouse had a deep neck, and revealed the tops of large round breasts. I caught myself staring at her cleavage, and I blushed. Since when did I stare at women like that? I felt like I had two brains commanding me, one in my head and one between my legs.\n\nProfessor Dartien, still rubbing her shoulders and neck, replied, \"He did call. He explained your problem. Honestly, I'm not sure what's more unbelievable... that Hermes cursed you with a, shall we say, herma of your own, or that Theo has such a beautiful girlfriend.\"\n\nMy blush spread. \"Oh, Theo and I aren't in a- we just-\" I didn't know what to say.\n\nProfessor Dartien smiled warmly. \"Say no more,\" she said. \"Tell me what you know of Hermes.\"\n\nI explained that Hermes has started as a fertility god, but the phallic nature of the herma used to worship him were also useful as border markings, and so he became the god of borders, and thus the roads that curved around those borders, and thus travelers, and thus traveling merchants. Also, since crossing boundaries was an act of trickery, Hermes was known as a trickster god.\n\nAs I talked, Professor Dartien stood and perused her extensive library. From behind, I admired her fine figure. Her skirt clung to her hips, and though she was nearing middle age, Professor Dartien's ass beneath the gray fabric was perky and fit. She was a tall woman too, nearly six foot, and as she raised an arm to a high shelf I admired the lithe muscles that shifted beneath her tan skin.\n\nProfessor Dartien turned with an old journal in her hand. She caught my eye, and saw something there. She gave a twisted half-smile and I felt heat bloom in my neck and face.\n\n\"You're obviously a good student,\" Professor Dartien said. \"You remind me of myself in college.\" She sat down on the couch opposite, tucking one leg beneath her, the other bare leg grazing the floor absentmindedly. Professor Dartien showed me the old journal with faded green covers. \"In college I was obsessed with Hermes. I grew up on ranches in the Italian countryside, and borders were everything. Some of us children stayed within the borders our whole lives, serving our families on the ranches. And some of us spent our lives crossing borders.\"\n\nProfessor Dartien flipped through the journal and pulled an old polaroid from between the pages. She passed it to me. \"God, I must have been seventeen when that picture was taken. I was such a hippie then!\"\n\nI saw a bonfire surrounded by teenagers, all with dark hair and very little clothing. \"That was one of our last bacchanalias, as we called them,\" Professor Dartien laughed. She pointed to one figure, a girl wearing a fringed vest and panties, and not much else. \"We tried to get as close to nature as possible. We tried connecting with the old gods, through what we thought of as old rituals. But as teenagers we knew as little of the gods as we did of sex, and to be honest that's all we thought about and pretty much all we did at these parties.\"\n\nLooking closely at the professor, I could see that wild-haired girl still buried beneath the prim figure on the couch across from me.\n\n\"Crossing a border signalled something at that age,\" Professor Dartien continued. Her gaze was on the photograph, but also through it. She took a deep breath, and I imagined she was smelling the smoke from the bonfire. \"Crossing the border meant you were crossing into a willingness to try new things, to be someone knew. It was so liberating! The next year, of course, I crossed a tremendous border when I came to the states for college. And I've spent the rest of my life crossing boundaries, going to new places, and trying new things.\" Professor Dartien raised her eyes from the photograph to my face.\n\n\"In college, I wrote my thesis on Hermes, and how his mythology should be adopted by the new feminist movement. I argued that Hermes was a very feminine god, despite his propensity for enormous stone penises,\" she laughed, and showed me some pages from the journal on which she had drawn dozens of hermas, some more detailed than others. \"I'll admit, I was a little obsessed with hermas, with the idea of penises marking the borders to new experiences. I argued at the time that Hermes was showing us that all the penises in our lives, all the penises running our families and our businesses and our government, were preventing women from crossing into new territories.\n\nKeep in mind I discovered my own sexuality in college. After a brief stint giving blowjobs behind the bleachers, I became a rather tenacious lesbian. I used all that herma talk to seduce women at parties.\" Professor Dartien opened her journal to another page, on which I saw a phone number written next to a faded lipstick kiss. She smiled wistfully. \"God, I remember this girl. She crossed a few borders on my body...\"\n\nProfessor Dartien bit her lip, and I saw her foot moving where it was tucked beneath her body. I imagined the foot was pressed up against her crotch or ass. Professor Dartien's story was turning me on a bit too. I adjusted my body, trying to keep the pleats of my skirt from revealing the bulge beneath.\n\nProfessor Dartien looked me in the eye. \"I guess Cass,\" she said, \"you have to decide what Hermes is trying to show you. Is this herma a border you're not willing to cross?\" Her gaze dropped to my skirt. \"Or are you willing to step across the boundary line into new territories?\"\n\nProfessor Dartien stood, reached up, and took the pins from her hair. Long, dark curls tumbled down over her neck and shoulders. \"Ah, that's better.\" She leaned against the desk, then pushed herself up to sit upon it. Her gray skirt rode up over her knees, revealing her long, strong calves.\n\nI asked, \"What do you mean, new territories?\"\n\nProfessor Dartien smiled. She said, \"When I was in college, kids weren't quite as liberated as your generation. Being a lesbian was such a shock. That was a border difficult to cross, but one I've never looked back from. You know, I even tried to dedicate my lesbianism to Hermes himself.\"\n\n\"Really?\"\n\nProfessor Dartien laughed at the memory. \"Let's see, what was her named? Brittany? Betty? Something midwestern. She wasn't my first female lover, but she was the first I'd really fallen in love- or maybe lust- with. On a warm night near the end of my freshman year, I led Betty out into the woods off campus and to a herma I'd made by piling stones. I'd brought some cheap wine, and we'd already had shots back at my dorm room, so we were both pretty toasted. I laid Betty down in front of the herma and went down on her. I guess I considered that to be crossing boundaries. When she came, I remember saying, 'I dedicate this offering to Hermes, and by taking of it I cross the border into my new life.' Then I lapped her clean.\"\n\nI stared, shocked, at Professor Dartien. Beneath my skirt, my cock was swelling, pressing against the pink fabric of my panties. I could feel my nipples, too, poking against my lacy red bra and white blouse.\n\nProfessor Dartien stared down at me from her perch on the desk. \"Did Hermes listen? Who knows? But I haven't had a dick since that night, and as you see I've had a lot of success crossing boundaries since then.\" She motioned to the collection of artifacts, books, and diplomas covering her walls. \"So Cassidy, as your professor, I guess my advice is to pray. Not to God, of course, that old stodgy bastard, but to the old gods, those who inspire us in ancient myths and dramas to try new things.\"",
        "\"Thank you, professor,\" I said. I stood to leave, and realized my cock was making an obvious bulge against my skirt. Professor Dartien gave it an interested look, raising a fine dark eyebrow.\n\n\"There's a bathroom just out in the hall if you need some time,\" she said.\n\nBlushing thoroughly, I thanked Professor Dartien once again, exited her office, and darted into the bathroom.\n\nLuckily I was alone. I splashed cold water on my face and breathed deeply. As my erection slowly subsided, I thought about the professor's advice. I had two ways of looking at today's events. Either this was a dream, in which case nothing I did had real consequences. Or it was a test by the ancient god Hermes, in which case I had no real control. Either way, I saw no immediate solution to my problem, no real way to remove to big cock between my legs.\n\nOn the other hand, I could take the professor's advice and use the dick as an entry point to a new territory. An opportunity to try new things.\n\nMy phone buzzed. I checked, and saw a message from my old friend Piri, she of the sixteen blowjobs. Over the summer I'd sent her pictures of my trip to Greece over the summer, and since the start of the new school year we'd been meaning to reconnect.\n\n'Party @ Denver's tonite. U coming?'\n\nDenver, a mutual friend and ski-enthusiast from, you guessed it, Denver, Colorado, had rented a huge house with his ski-buddies and often held big parties full of booze, music, and hot guys. The idea of attending a party with a cock in my pants sounded insane. I was ready to text back that I was sick, but I thought again of the professor's words. This was an opportunity to cross a border. To show I was willing to try something new. To be someone new.\n\n'Ya, see u there!' I texted back.\n\nTonight as the sun set I would ready myself to step past my herma over a boundary. I didn't know what waited for me on the other side. But I was excited to find out.\n\nPart Five: God of Transgressions\n\nI arrived at Denver's in tight blue jeans and a sleeveless black top that tied around my neck, showing off my shoulders and upper back. The top really complimented my breasts, and I'd worn it without a bra in the hopes of showing Hermes that I was truly liberated, past my normal boundaries. I'd carefully tucked my dick between my thighs, and I hoped the tight jeans kept it there.\n\nThe party was already in full swing. Music pulsed from multiple rooms, and the entryway was crowded with drunk college students. I made my way through a living room converted into a beer-pong colosseum, a kitchen in which every surface was covered in bottles, cans, or red plastic cups, and out the sliding glass door to the backyard.\n\nAs I crossed through the threshold, my phone buzzed. Without looking at who was calling, I answered. \"Piri?\"\n\n\"No, it's Theo. Where are you? I've been trying to call you all day.\"\n\n\"I'm... sorry. I talked with Professor Dartien and I've just been trying to figure things out.\"\n\n\"Well I want to see you. I want to do more than see you, I want to hold you and be here for you.\"\n\nI sighed. In truth, I wanted what Theo was offering. I wanted to snuggle in his strong, dark arms and feel the warmth of his embrace. I wanted his hands all over me like they'd been before, on my face and my breasts, and ass and even my cock. But apparently Hermes wanted me to cross new boundaries, try out new things. And I'd already had Theo today. I brushed off the old argument.\n\n\"Look Theo, I told you before. I'm just not looking for a relationship. I like you, I really do, and today was really special.\"\n\n\"Today was like nothing I've ever experienced,\" Theo said. \"You're making me feel new things, Cass. I need to talk with you about it in person.\"\n\nI'll admit, I almost left the party at that point. I mean, all last year I'd been aiming myself towards Theo's heart, and how he was offering it to me on a platter.\n\nBut I couldn't. I needed to figure out how to get rid of this dick before too long. It had been a distracting enough day, masturbating and cumming over and over, and I couldn't imagine continuing my studies with this horny python in my pants.\n\n\"Theo, I'll call you back later,\" I said coldly, and I hung up.\n\nIn the backyard, the party had surrounded the lit pool. It was a warm night, but nobody had jumped into the lit clear water yet. The light beneath the water cast shifting patterns of shadows and illumination on the dozens of college students drinking, talking and dancing. I looked around and saw my friend Piri. She stood talking with three tall guys by the edge of the pool. Piri loved tall guys.\n\nIt must have been the effect of opposites attracting, because Piri herself was short, barely five feet. She was a beautiful Thai girl with golden skin and chestnut hair cropped in a pixie-cut. She was stunning, with incredible round breasts and a bubble butt. Tonight she wore a small striped tank-top and cut-off jean shorts that barely crested her ass. A tattoo of a flowering vine crept from her outer thigh up her ribs and across her shoulder. She waved me over.\n\n\"Cass!\" she squealed. She gave me a tight squeeze, but I tried to end the hug before long so she wouldn't feel anything extra packed within my clothes. \"I'm so glad you're here! I want to hear everything about the hunky teaching assistant and your summer adventures. Did you ever get in his pants?\"\n\n\"I'll, uh, tell you all about it later,\" I said. Piri introduced me to the three guys, who were already drunk enough to be indistinguishable. One of the dudes went to get me a drink, and I made small talk with the other two. Piri had her eyes on me, looking me up and down. As I was handed a red cup of beer, she came close.\n\n\"You look really hot tonight, Cassy. There's something different about you,\" she said, stepping even closer. She brought her lips to my ear and in a soft voice said, \"I thought I had these guys cornered, but it's like I'm invisible. If you want, they're all yours.\"\n\nI laughed and took another look at the three dudes. Two of them were literally indistinguishable, just regular white bros in popped collars and backwards baseball hats. But one of the boys was dressed in a white button-down with the sleeves rolled up, nice tight chinos and brown cowboy books. I gave him an appraising look. \"Where are you from?\" I asked.\n\n\"Colorado,\" he said. \"I actually grew up with Dennis- er, Denver as you call him. I'm just visiting.\"\n\n\"Are those cowboy boots authentic?\"\n\n\"Yes ma'am,\" he replied, tipping an invisible Stetson. \"I grew up on a ranch and I still help out during the summers. I'm actually studying Agricultural Management. The name's Kenneth.\"\n\nThe cowboy and I wound up talking for the next hour or so, trading stories about growing up in small towns and we refilled our drinks. I was drinking quickly, trying to find a border to cross. I wondered if Kenneth would be the herma marking my transgression.\n\nI was about to invite Kenneth to a back room when he suddenly looked up and waved. \"Denver!\" he shouted, giving his friend a strong, manly hug.\n\n\"Hi Kenneth, hey Cass,\" Denver smiled. He was a broad-shouldered friendly ski-hunk, with lanky blond hair and a perpetual five-o'clock shadow. Tonight he wore flip-flops, board shorts, and an old woven poncho. \"I'm glad to see you two connecting. Have you seen Piri around?\"\n\nI said she had last been seen with two tall guys, and a wicked grin appeared on Denver's face. \"I hope she hasn't left yet,\" he said. \"I'd promised her tonight would be special.\"\n\nFrom inside his poncho he brought out a huge jar full of green liquid. The words \"Bubble Bath\" were displayed in fat white letters on the front.\n\nKenneth laughed. \"We haven't done this since high school,\" he said and turned to me. \"You pour in the bubble bath liquid, but it needs to be churned around to get activated. So if everyone jumps in at once and starts swimming and splashing, the whole pool turns into a big bubble bath.\"\n\n\"Sounds like fun,\" I said, \"though I didn't bring a swimsuit.\"\n\nKenneth shrugged. \"I don't think anyone did. Is that going to stop you?\"\n\n\"Will it stop you, cowboy boots?\"\n\nIn answer, Kenneth reached down and slid his feet from his boots. \"I'm going to find a dry place for these. Be right back.\"\n\nAs Denver walked to the side of the pool and started pouring in the gloppy green liquid, I spotted Piri emerging from the sliding glass door. I waved her over. She had in her hands a clear drink. \"Vodka?\"\n\n\"No, just water,\" she said. Piri took a sip, gargled it in her mouth, then spit it onto the lawn. \"I'm trying to get the taste of cum out of my mouth.\"\n\nI gasped. No matter how much time I spent with Piri, I never got used to her frankness with sex. \"One of those guys?\" I asked.\n\n\"Both of those guys,\" she said, giving me a bright look with her green eyes. \"A two-for-one tall guy special. Why, are we having a competition again? I still can't believe you won the last one.\"\n\nI was going to shake my head, but I stopped myself. \"I don't know, Piri,\" I said. \"I'm kind of looking for new experiences tonight.\"\n\nOn the other side of the pool, Denver was calling people over. Soon a good thirty party-goers surrounded the pool. Denver shouted out, \"In like thirty seconds, we're all going to jump in and turn this into a giant bubble bath. Get yourselves ready!\"\n\nPiri cried out in excitement. \"You going in?\" She immediately started stripping, pulling down her booty shorts and revealing tiny blue panties.\n\nI thought about what would happen if I pulled down my pants. My cock would be immediately visible to everyone at the party. I wondered how Piri would react to that, or Kenneth. \"No, I don't think so. I guess I'm feeling a little cold.\"\n\nThen I felt warm hands on my shoulders. \"You look tense,\" Kenneth said, running large thumbs against a knot in my back. I looked back and saw that he had stripped down to tighty-whities, revealing a lean, muscular body and a small patch of curly brown chest hair. I could see the bulge of his dick, but I tried not to stare. \"It's just for fun, you don't have to go in if you don't want.\"\n\n\"Fuck it,\" I said. I untied my top and threw it off. I felt the warm night air on my breasts and my nipples reacting to both the breeze and the surprised stares of Piri and Kenneth.\n\n\"Hell yeah!\" Piri said. She stripped off her own tank-top, uncovering her round, beautiful tits. Kenneth stared open-mouthed between us.\n\nDenver shouted, \"Three! Two! One!\"\n\nAll at once, everyone jumped into the pool. Everyone, that is, except for me. I hesitated for a moment, and as water and foam splashed up, I took the opportunity to strip off my pants. I didn't think anyone would see my panties bulging, but I quickly leapt in to make sure.\n\nAlready a thick layer of bubbles lay in cloud-like piles on the surface of the water. With all the churning bodies, more and more foam layered up. Soon we couldn't see below the surface at all.\n\nThis was perfect, because the movement of the water and the excitement of all the half-naked bodies around me had my cock swollen. I could feel it pressing against the fabric of my panties. I took some deep breaths, trying to calm myself.\n\nFrom between mountains of foam, Siri swam over to me. She had plastered her tits with foam, making a kind of impromptu bikini. \"This is amazing!\" she cried.\n\nI saw a dark form beneath her in the water, and suddenly she was lifted up on the shoulders of Kenneth. She shouted out with joy, her legs wrapped around his neck.\n\n\"Hey girls!\" he called out.\n\nI looked at these two figures, these beautiful people, illuminated by the underwater light softened by the foam and bubbles. Kenneth's light skin next to Piri's caramel. Kenneth's well-muscled chest and Piri's stunning curves, exposed to the night air. What would they think if they could see what I was hiding beneath the foam?\n\nFrom behind I heard the voice of one of the tall guys from before. \"Your turn, girl!\" he shouted, and I felt strong hands on my hips.\n\nI tried to call out no, but before I knew it I was being lifted up and placed on the broad shoulders of one of the bros. I looked down. My thighs sat squarely on the guy's strong shoulders, but in my position my cock was sandwiched between my belly and the back of his head. I expected at any moment for him to throw me off in disgust.\n\n\"Foam fight!\" Piri called out. She took a handful of bubbles and flung them my way.\n\n\"Get them!\" my bro mount shouted. He started charging through the water towards Kenneth and Piri. Either he didn't notice my cock or didn't care. Either way I seemed to be safe.\n\nWe crashed into Kenneth and Piri, and all four of us started shoveling handfuls of foam in all directions. Flailing around, laughing, I took a double-handful of bubbles and plopped them down over Piri. My bro tilted forward, and for a moment my hands landed right on Piri's breasts. Trying to recover my balance, I grabbed her, one hand squeezing a tit and the other circling around to her back.\n\n\"Cassy!\" Piri cried, surprised. I looked at her, embarrassed, but she was only smiling. Kenneth too was watching.\n\n\"Hey should I be jealous of what's going on up there?\"\n\n\"Huh?\" said my bro. He tried looking up, and the back of his head pressed by now erect cock back against my belly. There was a look of confusion on his face. \"What's that?\" he asked, wiggling his head back and forth to get a better feel.\n\nI'll admit it felt kind of good. My cock was slippery from the water and the bubbles, and with Piri's firm body in my hands it was difficult to focus. But before my ride could make any more discoveries, I shouted out, \"Kowabunga!\" and launched myself from his shoulders towards my friends. All three of us splashed down below the water.\n\nUnderneath was a chaos of swimming bodies, foamy water, and an interplay of light and shadows. Kenneth swam by me, heading towards the surface, but Piri used the opportunity to do some underwater somersaults. As I swam back up, I felt something funny below. The force of my leap had shifted my underwear, and my cock was sticking out from the side. I almost choked underwater- Piri might see it at any moment! I shoved my dick back into my panties and swam towards the edge of the pool.\n\nQuickly I found my jeans and top. However, I wasn't the only one getting out of the pool. All around, half-naked, foam-covered bodies were lifting themselves out of the water, and either finding their clothes or horseplaying on the lawn. Were I to get out now, my cock would be seen by everyone.\n\nI saw Denver sitting on the lawn, lighting a glass pipe. I shouted out to him. \"Hey Denver! Can you get me a towel?\"\n\nHe coughed out a cloud of smoke and nodded. A few minutes later, he came out from his house with a big yellow bath towel. \"Thanks,\" I said. He was watching me, and I realized he wanted to see my body, my tits and my wet panties, as I emerged from the pool. \"Hey, do you see Piri and Kenneth anywhere?\"\n\nDenver searched the pool, and as he looked away I slipped from the water and immediately wrapped the fluffy towel around my waist. Denver looked back, a little disappointed and abashed. \"I wouldn't worry about those two,\" he said. \"In fact, I think Kenneth might really be into you.\"\n\n\"Oh yeah?\" I noticed Denver eyeing my breasts, but at this point I really didn't mind. Goosebumps broke out around my nipples, which stood out like two pink thumbs. My hair was dripping wet, but I didn't want to lift the towel to dry myself while someone could see what was hidden beneath.\n\nDenver continued, \"Yeah, he's into smart, beautiful girls like you. I mean, who isn't? It's a shame he's leaving tomorrow back for Colorado. Oh look, there he is!\" He pointed me towards Kenneth, who was pulling himself out of the water. I allowed myself a long look at the muscles at play on his lanky frame, and the shape of his ass beneath his now transparent underwear. \"He's a nice guy, Cass. But he can be a little too polite. He probably won't make a move unless you do.\"\n\nI thanked Denver and put on my top. I slid my jeans on beneath the towel and then, cock firmly in place, I finally dried my hair. By the time I walked over to Kenneth, he had put on his white button-down shirt, but was still pantsless. sitting in a lounge chair. \"Can I get you a drink?\" I asked.\n\nHe smiled warmly at me and nodded.\n\nI made a quick trip to the kitchen and returned with some rum and Cokes. We sat drinking and watching the people still playing in the pool. Piri kept appearing at the surface, then diving down like a seal to pop up somewhere else. Anywhere she was in the pool, guys would start swimming over. At one point we laughed when we saw she was surrounded by five different guys. \"Is she okay?\" Kenneth asked.\n\n\"Oh yeah, Piri really likes the attention,\" I said. \"I mean, notice that her hands are not above the surface of the water?\"\n\n\"You don't mean...\" Kenneth trailed off.\n\n\"Oh, she's got at least one dick in a hand right now,\" I said. \"Piri was raised on a commune in northern California. She has a really liberated view of sex, sees it as equal to eating a good meal or taking a beautiful hike.\"\n\nKenneth squinted at the guys. \"Which one do you think is getting the handy?\"\n\nI pointed to one guy with a tattoo of a kraken on his shoulder blade. \"He's the only one not looking at Piri's tits,\" I said.\n\nKenneth guffawed.\n\n\"I'll admit, jumping in that pool half-naked was pretty wild. Does Denver always do that at his parties?\"\n\n\"Didn't he in Colorado?\"\n\n\"Oh hell no! Kenneth and I met in a Dungeons & Dragons group. In fact, each time he visits home we gather our friends for another game. I think he kind of chose to play a character when he came to college.\"\n\nI shook my head in disbelief. \"Don't tell me that almost skinny dipping is the wildest thing you've done, cowboy.\"\n\nKenneth slowly smiled. \"If you make me another rum and Coke, I'll tell you my wildest story.\"\n\n\"It's a deal.\"\n\nIn the next round of drinks I doubled the rum. Kenneth sipped his, then told me about his ex-girlfriend who had a serious fetish for sex in cars. \"Our first time was in the back of her pick-up,\" he said, \"parked on a hillside overlooking the town. I thought it was just romantic. But she always got turned on by being in a car with me. So once we were driving together to the city and she starts telling me all these fantasies she has about us in the car. How she wants to have me jerk off on the windshield while she touches herself in the driver's seat. How she wants to use the gear stick as a dildo. How she keeps a vibrator in the glove compartment for long, lonely drives. I can't believe what she's telling me, but it's really turning both of us on. I reach over to her lap, and she unbuttons her shorts. Now keep in mind we are driving on the freeway, like seventy miles per hour, in broad daylight. But I work my hand under her underpants and she is soaking wet. I start touching her. She's squirming around, sucking on her fingers, touching her tits. She actually pulls down the top of her tank-top and lets her breasts out, there in broad daylight. I've got a raging boner at this point, and she reaches over and unzips me. Starts stroking me right there on the highway.\n\nSo there's a tollbooth right at the end of the highway, only I don't want to stop and have someone see us so I swerve over to to auto-pay. Only I don't have one of those fancy devices that automatically pays the toll, you know I just don't drive to the city that often. We drive through and I hear this angry beep. But I don't care, I'm going crazy. I'm fingering her and rubbing her and she's stroking me and playing with her nipples. I pull over to an emergency pull-out, put on my hazards, and jump over to her seat. She puts her chair all the way back, I enter her and we both immediately cum at the same time.\"\n\nKenneth finished his drink. \"Oh boy, I can't believe I told you that,\" he said, looking embarrassed. \"I think I may have had too much to drink.\"",
        "I cleared my throat. In truth I had hung on every word. In my tight jeans, my cock was pressed hotly against my inner thigh. I didn't know if in the dark Kenneth could see my breasts clearly, but my nipples stood out against my sleeveless top. \"That's pretty wild,\" I said.\n\n\"Oh, but here's the funny part. Because I didn't pay the toll, I get this big envelope in the mail. It's a bill for the toll, and it's got a picture of my car to prove it. You can see the front license plate, and the windshield, and inside you can see my girlfriend and I. She's holding my dick and I've got fingers in her pussy and her tits are just hanging out. Boy, the guys at the DMV must have loved that one.\"\n\nI laughed. \"Are you still seeing her?\"\n\nKenneth shook his head. \"We had a good time, but then she moved. Still, we meet up sometimes when she visits. That girl is learning things in the world. I'll tell you, each time she comes back she wants to try something new.\"\n\n\"Oh?\"\n\nKenneth smiled. \"Oh gosh, I'm sorry, I don't normally talk like this. You probably think I'm some kind of weirdo.\"\n\nI looked Kenneth in the eye. \"I think it's kind of hot, actually. Will you get us another drink?\"\n\nKenneth blushed, and then stood up awkwardly. I could see his erection through his underpants, though he tried to pull down his white shirt to hide it. He looked around for his pants, zipped up, then went to the kitchen.\n\nCrossing borders, I thought to myself. Well, I'd never been to Colorado before. Maybe fucking Kenneth would constitute traveling to a new place? But as a small-town guy, I knew Kenneth would not be as open-minded as Theo had been. I'd have to lead him to opening up the possibility of having sex with a chick with a dick. I guess I'd have to help him cross over a boundary he didn't even know was there.\n\nWhen Kenneth returned, I asked, \"What kinds of things does your ex like to try?\"\n\nKenneth nearly choked on his drink. \"I, uh, thought you were going to change the topic.\"\n\n\"I like this topic, Kenneth. Don't you?\"\n\nKenneth grinned. \"Yeah, I guess I do. Were you raised on a commune or something, like Piri?\"\n\nI shook my head. \"Nah, I just like sex. I guess you could say that's the character I've been trying to play in college. I see this as an opportunity to meet a lot of attractive people and try a lot of interesting things.\" I brushed the hair from my face. \n\n\"So you like trying new things too, huh?\"\n\n\"Yeah, but you didn't answer my question.\"\n\n\"Oh well... the last time she came into town, we did some roleplaying. She was a my maid, and I was some rich dude.\"\n\nI nodded. \"Interesting. Did you like that?\"\n\nKenneth shrugged. \"Eh, I found it a little silly. I also didn't really like bossing her around.\"\n\nWow, I reflected, Denver's right. Kenneth's a nice guy. Still, it was fun pulling him from his comfort zone, getting him to open up. I was getting a good thrill from it. My cock was stiff in my pants, and I had to cross my legs to hide it.\n\n\"What else have you tried?\"\n\n\"Well that's not fair,\" said Kenneth. \"I've already shared all my sexual secrets. How about you? What have you tried?\"\n\nI laughed, and we started trading stories, checking off things we'd both done. I was surprised by how far Kenneth's ex-girlfriend had pushed his sexual norms.\n\n\"Footplay?\" I asked.\n\nKenneth nodded. \"Deep-throat?\"\n\nI rolled my eyes. \"Of course! Threesome?\"\n\nAnd so on, each of us trying to one-up the other. It turns out we'd both tried out a lot of things. There was only one area where I was new.\n\n\"Have you had anal sex?\" Kenneth asked.\n\nI shook my head. \"I haven't had the guts to try it. I fantasize about it sometimes, but I worry that I'm just dirty back there. It's kind of embarrassing to think about.\"\n\n\"No, I understand. I think that's part of the thrill of it, right, doing something in a place that gives a lot of pleasure but maybe isn't supposed to?\"\n\nI nodded, shifting in my seat. My cock was practically throbbing by now. Looking down, I could see a visible bulge, the shape of the shaft and head clear against my tight jeans. I bunched up the yellow towel and placed it in my lap.\n\nKenneth licked his lips and leaned in close. I could smell the rum on his breath. I realized he'd had a lot more to drink than I had. \"You know, if you're worried about not being clean... I guess you just took a bubble bath.\"\n\nI laughed. \"That's true! My asshole's probably sparkling with cleanliness right now.\"\n\n\"You could eat dinner off of it.\"\n\n\"Kenneth!\"\n\n\"I'm just saying!\"\n\n\"Are you asking me to try something new right now?\"\n\nKenneth blushed but kept his smile. \"Well, I kind of like you, and I think you like me. I'm leaving tomorrow and I won't be back for while, but if you want we can have some fun tonight.\"\n\n\"And you'll fuck me in the ass?\"\n\n\"Cassidy!\"\n\n\"What, I thought it was your idea!\"\n\n\"Yeah, but it sounds so crude!\"\n\n\"It's gotten you pretty hot, you have to admit,\" I put a hand on his thigh and edged it towards the visible bulge in his pants.\n\n\"If you don't want to, I don't want to pressure you,\" he said. But I shut him up with a deep kiss.\n\nTaking Kenneth's hand, I led him through the kitchen to a back hallway. All the while I kept the yellow towel in front of me, so no one could see the full erection tenting my pants. The feel of my tight jeans squeezing against my cock was driving me crazy.\n\nBehind me, Kenneth swayed a little. I realized he was really drunk. Well, sometimes you had to get a little crazy in order to cross a border. This would be my first anal experience, a new territory for me. Maybe enough to please Hermes.\n\nAfter a few false tries, we found an unoccupied room, what looked like a guest room. There was a simple bed with throw pillows in one corner, an undecorated dresser in another corner, and a full-length mirror.\n\nKenneth stripped off his shirt, but kept on his underwear. He kissed my neck and shoulders, then tilted my head and kissed my lips, sliding in his tongue. His hands were everywhere, squeezing my breasts and my ass. I kept the towel bunched between us, though his hips kept jutting against it.\n\n\"What's wrong?\" he asked, looking down at the towel.\n\n\"I guess... I guess I'm a little nervous,\" I said.\n\nKenneth said, \"Why don't I help you relax? Take off your clothes and lay down on the bed. I'll give you a massage.\" He held open his large hands with lengthy fingers. \"A rancher's hands are good for massage.\"\n\n\"Okay, but turn around while I undress.\"\n\nKenneth winked and turned to face the closed door. I untied my top and pulled down my jeans and underwear. My cock stood out proudly from my body, a ten-inch giant swollen and pink. Oh god, how was I going to show Kenneth this? In the full-length mirror I could see my whole body, my long black hair fallen wildly over my fair shoulders and small but perky tits, the curve of my hips, my fit ass, and that huge wild cock. Pre-cum gleamed at the tip.\n\n\"Are you ready?\" Kenneth asked.\n\nPanicking, I leapt onto the bed. I reached down and pulled my cock and balls as far up as I could, then lay on my belly. I'd just have to figure things out and hope that Kenneth was ready for a surprise.\n\nKenneth reached down into his crumpled jeans and took out a small bottle of something. \"Denver gave me this when he saw us talking,\" he said. \"It's oil, good for massage. And... other things.\"\n\nKenneth climbed onto the bed and straddled me, his knees on each side of my hips. I could feel my cock pressed between my belly and the bed, twitching in pleasurable agony.\n\nKenneth squirted some oil onto his hands, and started rubbing it into my shoulders. His hands felt great- broad palms, long fingers, strong thumbs. He searched out knots and tangled muscles and eased them into relaxation. He ran his hands up and down my back, over my shoulders and arms. Everywhere he touched responded with pleasure. Finally he started working his hands down to my ass. He rubbed my ass cheeks, focusing on the sides and beneath. I felt a tingle of panic and pleasure and his thumbs circled down under my asscheeks. He then gently spread my cheeks. I felt air on my asshole.\n\n\"Listen, Cass. I'm going to try something, and if you don't like it let me know. I think this'll kind of ease you into being ready for anal. Your whole body is so clean right now, every inch of you smells like a bubble bath.\"\n\nKenneth lowered his head and, keeping my ass cheeks spread, gently probed around the circumference of my asshole with the tip of his tongue. My whole body leapt with pleasure. \"Oh!\" I moaned.\n\n\"Is that okay?\"\n\n\"Hell yes!\"\n\nKenneth laughed, then again lowered his face to my ass. Very gently, he flicked the tip of his tongue over my asshole. I felt my hole pucker and open, responding to his touch. Kenneth lay the flat of his tongue on my asshole and slowly lapped it. He moved his thumbs to either side of my asshole and gently rubbed half-circles. Oh god, it felt amazing. I felt muscles and nerves responding in pleasure like they never had before.\n\nKenneth kept licking my asshole with the flat of his tongue. Then he placed the tip of it right in the center and gently pushed. I felt the tip of his tongue entering my asshole. His thumbs kept rubbing around my asshole while his palms squeezed and massaged my cheeks. Kenneth moved the tip of his tongue in and out, and the naughtiness of what he was doing, this great transgression, turned me on so much. I started bucking my hips against the bed, feeling my cock rub against the sheets.\n\n\"I want to feel how wet you are,\" Kenneth said. He reached down beneath my hips and felt for my vagina.\n\nInstead he put his hand right on my big swollen cock.\n\n\"What the hell?\" he asked.\n\nI gasped and sat up. My asshole still tingled from his tongue, and my penis was huge and erect. Looking down at Kenneth's underwear, I could see that my cock was way bigger than his.\n\n\"Uh, I can explain,\" I said.\n\nKenneth shook his head. \"It's okay, it was just unexpected,\" he said. I just need a moment.\"\n\nHe took a few deep breaths. His cheeks were flushed and he had a wild look in his eyes.\n\n\"Kenneth, are you okay?\"\n\n\"I think...\" he groaned, \"that I'm really drunk. I'm going to lay down for a moment.\"\n\nKenneth sprawled down on the bed. I saw his eyelids flickering. \"Oh shit, you're really drunk, aren't you?\"\n\nKenneth nodded. \"And you're... a man? Transgendered? What are you?\"\n\n\"I guess I'm cursed,\" I said. \"I'm going to get you some water.\"\n\nAs I slid my jeans up over my legs, Kenneth whispered, \"Cass! Cassidy!\" I could tell he was almost asleep.\n\n\"Yeah?\" I asked. In truth, I didn't even want to look at the guy. I was so embarrassed, but also extremely turned on. I'd never had my asshole licked before, and I was amazed by how good it had felt.\n\nKenneth lifted himself onto an elbow and took a deep breath. \"I want you to know... that you have a really amazing dick. I'm kind of jealous.\"\n\nI laughed. \"Yeah, I've been getting used to it.\"\n\n\"Huh?\"\n\n\"Don't you worry. I'm sorry tonight didn't work out.\"\n\n\"It's okay, Cass,\" Kenneth slurred. All the drinking we'd done tonight was catching up to him quickly. \"Maybe when I'm back in town we can try again.\"\n\n\"Hopefully I'll be different then, too.\"\n\nKenneth lay back down and closed his eyes. I zipped up my pants, put on my top, and left to find a clean glass and some water.\n\nOutside the guest room, the party was still raging. I weaved my way through drunk guests and couples making out in shadowed corners. In the kitchen, I filled a glass with tap water and made my way back to the room.\n\nKenneth was fully asleep, drooling and snoring. I put the water on the dresser, then caught my reflection in the mirror.\n\nI was shocked by just how feminine I still looked. When I'd first realized I'd grown a dick, I was worried the rest of my body would start changing. But I still had all the curves in the right places, and my skin was still fair and hairless where it counted. I had my deep blue eyes and my full red lips, my proud chin and dimpled collar bones than men loved to kiss.\n\nI had a sudden urge to see exactly what had shocked Kenneth so much. For the third time that night, I untied my top, stripped off my jeans and underwear, and stood fully naked in front of the mirror. I saw my large pink nipples, my tight abs, my little triangle of black hair above the big ten-inch dick hanging down between my legs.\n\nWell was that really anything to be shocked at? I mean, it was a handsome enough cock. No spots, a few thick veins at the base, a smooth pink head. It was the kind of cock I'd personally have loved to fuck. And it was mine. I suddenly felt outright proud of the cock. I mean, what other girls here at the party had a cock like this between their legs? I started posing with my dick in the mirror, looking at it from different sides, lifting it up to see beneath.\n\nIn the hall, I heard Piri's voice. \"Cassidy, are you here?\"\n\nBefore I could do anything, Piri had opened the door. \"Cass?\"\n\nHer eyes went to me posing naked before the mirror, then to Kenneth passed out on the bed, then back to me. I saw her gaze drop to between my legs.\n\nPiri closed the door. \"Holy shit, did you just peg Kenneth? That's the most realistic strap-on I've ever seen.\"\n\nI gulped.\n\nPiri was back in her short-shorts, but still topless, as I'd seen her at multiple parties. Her round breasts, tipped with large dark nipples, seemed to defy gravity before her little frame. She stepped closer to me, whispering conspiratorially. \"I've always wanted to peg a guy, but I could never bring it up. How was it? I didn't take Kenneth for the pegging type.\"\n\n\"It was... good,\" I said. \"Kenneth's definitely an ass man.\"\n\nPiri giggled. She took a closer look at my dick. \"Wow, look at the detail on it. What's it made of? Did you glue it on? Is there an insert in your vagina? Can I touch it?\"\n\nBefore I could say anything, Piri got on her knees and gently lay a few fingers on the head of my cock. Immediately it leapt to attention, swelling up. \"Oh my god!\" Piri cried, leaping to her feet. On the bed, Kenneth muttered in his sleep.\n\nI shushed Piri. \"I can explain!\" I said. \"I... somehow, I grew a cock this morning. I didn't have one yesterday, I now I have one today.\"\n\n\"Are you serious?\" Piri asked. She looked me square in the face. Her hand hadn't left my dick, and it was seriously swelling now, getting firm and thick.\n\nI nodded. \"It's crazy, I know, but it's the truth.\"\n\nPiri looked down at the dick growing in her hand. She wrapped her fingers further around its girth. \"God, Cass I'm... kind of jealous. I've always kind of fantasized about having a penis.\"\n\n\"I know! Me too! But now I have one and it's just insane. It wants to get touched all the time!\"\n\n\"Yeah, I can see that.\" By now my cock had grown to almost full size, and was standing out at half-mast. It looked simply ridiculous. Piri turned towards the full-length mirror. We made an odd couple within it, one naked pale girl with a big cock, and one short golden-skinned girl with her hand on that cock. Seeing her hand still there, Piri lifted it with a start. \"Sorry, I actually didn't realize I was still touching it.\"\n\n\"Um... it's okay. I really can't stop touching it either.\"\n\n\"What have you done with it?\"\n\nI listed my adventures, starting with masturbating in the library, continuing to Theo getting me off in the shower, all the way to having my ass eaten by Kenneth.\n\n\"So that's why you were acting so weird in the pool,\" Piri realized. \"Well it's nothing to be embarrassed by. I'm sure it'll pass. Dick today, gone tomorrow, you know?\"\n\n\"Well, that's the thing. I talked with Professor Dartien today, who's kind of an expert on weird magic stuff like this, and she says I need to figure out how to end this curse. She says I need to be willing to cross a border and try to be a new person in a new place. Try new things.\"\n\nPiri couldn't stop staring at my cock. Under her attention, it was standing at full length and girth, swollen and huge and twitching with my heartbeat. \"Isn't just having a cock a new experience?\"\n\nI shrugged. I was enjoying seeing Piri so close to my cock in the reflection of the mirror. She kept unconsciously licking her lips with the tip of her tongue, half-reaching for the cock and then recovering herself. She shifted her legs, rubbing her golden thighs together.\n\n\"I thought maybe having anal sex for the first time would be crossing a boundary. I guess getting my asshole licked wasn't enough, since my dick's still there.\"\n\nPiri continued to stare at my dick. A bead of pre-cum bubbled to the top. She poked the tip of her tongue from her lips and appeared to be thinking.\n\n\"Well I've got an idea,\" she said.\n\n\"Oh yeah?\"\n\nPiri stepped even closer to me. Her belly pushed against my cock, and the head and shaft was pressed between our bodies. \"What if,\" she whispered, her face inches from mine, \"you fuck a girl?\"\n\nI was panting. I looked into Piri's green eyes and saw my face reflected back. \"Are you sure?\"\n\n\"God yes. When will I ever have the opportunity to get fucked by my best girlfriend's cock? I mean, I'm not a lesbian, but you are really turning me on right now.\"\n\nI looked around the room. \"Where?\" I asked. \"Kenneth's kind of taking the bed right now.\"\n\n\"Just stay here,\" Piri said. \"Take a look in that mirror. Is that not the hottest thing you've ever seen?\"\n\nI looked. I saw Piri placing her fingers on my cock again, running them lightly from the head down to the shaft. \"Keep watching in the mirror,\" she said.\n\nPiri, facing me, kneeled down on the balls of her feet so that the shape of her ass showed clearly from inside the cut-off jean-shorts. I watched the muscles and golden skin of her back and shoulders, and the thick short cut of her hair. She wrapped her fingers around the base of my cock- her little hand actually couldn't enclose the whole thing. \"Jesus, it's big,\" she muttered. \"Do you think it'll fit?\"\n\nWith the tip of her tongue, she first tasted the pre-cum at the tip of my penis, then ran her tongue around and around my head. I groaned. Watching her in the mirror, I didn't know where to put my hands. It didn't feel right to put them on her head, and standing with my hands on my hips felt too much like a pirate getting a blowjob. But my eyes kept trailing over my body, so I started running my hands over my breasts. I pinched my nipples and squeezed my tits while Piri licked me below.\n\nWhile slowly pumping my shaft with both her hands, Piri ran her tongue from the head of my cock all down the bottom to my balls. She sucked my balls into her mouth while stroking my shaft faster. Then she licked back up to the top. \"Do you like that? Does it feel good?\" she asked. Looking down in her green eyes I could only nod mutely.\n\nIn the mirror, I saw Piri take one hand and start rubbing her ass through her shorts. She sucked the head of my cock into her lips, and with one hand started rubbing between her cheeks. I kept looking between the mirror, at my tits and Piri's ass, and then back down at Piri with her lips around the head of my cock.\n\nPiri popped the head of my cock from her lips and smiled at me. \"I'm no good at deep-throating,\" she confessed. \"And besides I wouldn't want to try with this monster. But I am so goddamned turned on. You stay standing right there.\"\n\nPiri stood and faced the mirror. I could see over her head, and her green eyes met mine in the reflection. She ran her hands down over her round breasts and dark nipples, and over her taut belly. She unbuttoned her shorts, and pulled them and her panties down together. Piri was completely clean-shaven, and her vagina was hot and swollen. Still keeping her eyes on me, Piri placed her fingers in her lips, then with her fingertips wet lowered her hand to her vagina. Her fingers ran over her clit and vanished between her pussy lips. Her eyelids flickered and she hooked her fingers into her pussy and started rocking her hand back and forth.",
        "Meanwhile, she reached back with one hand and felt for my cock. I stepped closer, the head of my cock pressing against the small of her back. Her fingers wrapped around my cock and started pumping again, all the while fingering her own pussy. I put my hands on Piri's hips, feeling pleasure fill my entire body.\n\nPiri lowered the head of my cock between her thighs. In the mirror, I saw the swollen pink head rub up against her pussy lips. They spread around the head, and Piri rocked back and forth over it, getting my cock wet with her juices. She reached back and pulled me close to her so that my body spooned hers. My cock thrust between her thighs, standing out a few inches from her body. \"Hey look,\" Piri joked. \"Now I've got a penis.\n\nPiri reached up and held onto the back of my neck. With her other hand, she grabbed onto the small of my back. She rocked her hips back and forth over my cock, her pussy lips spreading. I ran my hands all over her body. I grabbed and squeezed a round breast with one hand, pinching the nipple in my fingers. With the other I reached up and placed a finger in Piri's mouth. She started sucking my finger, her green eyes never leaving mine.\n\nPiri leaned forward and grabbed the frame of the mirror. I saw below her pussy lips hanging wet beneath the rose of her asshole. For a moment I had the urge to kneel and put my tongue there between her cheeks. But Piri had other ideas. She reached back, grabbed my cock, and placed the head between her pussy lips.\n\n\"Are you ready to cross a boundary?\" she asked.\n\n\"Fuck yes,\" I replied, and a thrust into the pussy of my friend.\n\n\"Oh! Slow, Cassy, go slow! You're going to split me wide open!\"\n\nI slowed my thrust. \"Sorry, Piri. I'm, uh, not used to this.\"\n\n\"It's okay,\" Piri replied. \"You just stand there with your hands on my hips. Let me handle this.\"\n\nPiri pulled her hips forward until just the head of my cock was in her vagina. I could feel her squeezing my head, and it took every ounce of self control not to shove the full ten inches into her. Piri started rocking back little by little, introducing a bit more of my shaft into her pussy. Each time she rocked forward, she pulled everything except the tip of my cock from her vagina, then moved back towards me. I loved feeling her pussy lips rubbing along the head and shaft of my cock. Slowly, slowly, more of my cock vanished into her. In the mirror, I could see that Piri had her eyes closed, a look of concentrating wrinkling her brows. I looked down. Over half my cock was inside her, and her pussy lips were stretched wide. \"Are you okay?\"\n\n\"Oh yeah, it feels really good. It's just... a lot of cock.\"\n\n\"Hey, stop for a moment.\"\n\nI reached around Piri's hip and down to her pussy. I could feel my cock there, stretching out her little vagina. Her pussy juices had coated the shaft. I momentarily wrapped my hands around the shaft, enjoying the feeling, then raised my fingers to Piri's clit. With her pussy lips so spread around the girth of my cock, Piri's clit stood out like the tip of a pinky finger. I started rubbing it. Piri gasped in pleasure.\n\nHer hips started rocking again, faster. I rubbed her clit faster, then ran my fingers over her pussy lips around my big dick. Piri started thrusting back, taking more and more of my cock into her. I kept rubbing, changing from small circles to up and down motions, then reaching down to feel myself entering her.\n\nIn the mirror, I saw Piri's eyes closed but this time with more pleasure. Little gasps escaped her mouth, and she had her tongue pressed firmly against the inside of her cheek. I felt something pressing against me. Piri's ass had reached my crotch as the last inch of my cock slid into her.\n\n\"Oh god!\" Piri cried. \"Just hold it there! Keep rubbing!\"\n\nAs I rubbed my fingers in tight little circles around her clit, Piri rocked her hips just a little on my cock. I could feel the entire length and girth buried within her pussy. Piri breathed faster and faster. \"I love it!\" she whispered. \"I feel myself just being stretched all the way. I couldn't take another little tiny bit of it, I'd split in half. I want to keep feeling it there. Oh god, kiss me, kiss me!\"\n\nI leaned forward and met Piri's turned face. I'd only kissed girls while drunk or on a bet, and this was different. I locked my lips with Piri, continuing to rub her clit fiercely. She shoved her tongue into my mouth and groaned. Hot air exploded from her lungs, her whole body shook, and I realized Piri was climaxing. \"Mmmmmmmmmm!\"\n\nI felt my cock swelling up even bigger. I grabbed Piri's hips and started pulling back and shoving in. I started slow, enjoying the feeling of my cock being squeezed by her pussy, pulling almost all of it out before slowly re-entering. But soon I picked up the pace. Piri's body flowed over mine, and I loved the feeling of her ass cheeks pressing back at me as the last inch of my cock slid into her. I increased the pace, and rather than pressing, her ass started slapping against me. Piri's whole body was shaking with each thrust, and she cried out at each slap of her ass. \"Yes! Cass! Yes! Fuck me, fuck me, fuck me, just like that!\"\n\nI was possessed. I dug my fingers into Piri's hips and thrust, harder and faster, my cock covered in fluid, my jaws clenched in pleasure and effort.\n\nPiri screamed out, \"I'm cumming again! JESUS!\"\n\nKenneth snorted on the bed.\n\nShe reached back and held onto my lower back as I thrust harder and harder into her, my full ten inches vanishing between her pussy lips. In the mirror her tits bounced with each thrust and her head was arced back to show her shallow, passionate breaths and full lips.\n\nI felt my own balls tightening. \"Oh god, Piri, I'm going to-\"\n\nPiri dropped to her knees and wrapped both hands around my cock. \"Yeah Cass, cum, I want to see it, I want to see you shoot all over, show me, show me!\"\n\nHer dirty talk turned me on even more. I couldn't stop looking at myself in the mirror, watching Piri pump my cock. I saw she had pointed the head of my cock right at our reflection. With a loud groan, I exploded. Strings of cum shot out onto the mirror. Once, twice, three times and more, each time Piri pumped my cock more cum exploded outwards.\n\nI collapsed to the floor, pulling Piri with me. She curled up within my arms. I kissed the back of her neck. \"I feel like that was a boundary crossed.\"\n\nPiri giggled. \"Do you think people heard us crossing? Were we caught?\"\n\nI smiled and squeezed Piri tightly. \"I don't even care anymore. That was amazing.\"\n\n\"You're my best friend, Cass.\"\n\n\"I know.\"\n\nI took a deep breath, pleasure flowing through me and into Piri, and then back into my body.\n\nI woke up in the morning, Piri still in my arms.\n\nKenneth, I assumed, had draped a quilt from the bed over our sleeping bodies. Who knows what the poor guy had thought, or even remembered, when he had woken up to see us curled up together, and the mirror covered in cum. But the bed was empty, and Kenneth's clothes were gone. I was glad to see that the glass of water I'd left for him was empty, too. He'd probably have a wicked hang-over today.\n\nThe morning air was cold, so I snuggled closer to my sleeping friend. She murmured something and pressed back against me. I felt something below, and realized I'd woken up with something I'd seen before but never experienced. Morning wood.\n\nMy cock was fully erect and pressed flat against Piri's round ass. It felt good, but a little uncomfortable. I reached down and adjusted so that my cock was between Piri's thighs. It felt better, less restricted.\n\nPiri murmured again and rocked her hips back against me. I looked at her face. She was still sleeping, but smiling. Having a good dream, I assumed. She continued to rock her hips against me, and then I realized she was rubbing her pussy against my cock. It made my dick swell up even larger. Piri groaned, \"Mmmmm.\"\n\nHer beautiful green eyes fluttered open. She smiled wider to see me curled around her. \"Good morning, lovely Cassidy,\" she said. Her eyebrows furrowed for a moment. \"What's going on down there?\"\n\n\"Morning wood,\" I explained.\n\n\"Holy shit, I'm so jealous again!\" Piri laughed. \"Though I'll say it feels pretty good on my part, too.\" She kept rocking back and forth, and soon enough her pussy lips had spread around the head of my cock.\n\n\"Oh god Piri,\" I moaned.\n\nPiri pressed backwards until once again my cock started to slide into her pussy. \"I guess this means the curse hasn't ended,\" she said, reaching down to rub her clit.\n\nI shook my head. \"As long as it lasts a few minutes longer I'll be happy.\"\n\nI grabbed Piri's hips, flipped her onto her belly. She squealed in pleasure. There in the guest bedroom, beneath the ratty old quilt in the cold morning air, we kept warm by fucking. I fucked her from behind, both of us on our knees. I fucked her from on top, her legs against my shoulders. She rode my cock, crouched with her feet flat on the ground and her knees in the air. We even moved back over to the mirror to see our beautiful bodies tangled together. By the time we'd both cum, we could hear others in the house rising and talking.\n\nI gave Piri a deep kiss and whispered in her ear. \"Thank you for being an amazing friend. I love you.\"\n\n\"I love you too Cass,\" she whispered back. \"If the curse hasn't ended by tonight, give me a call.\"\n\n\"That's a promise,\" I said, blushing with pleasure.\n\nPart Six: God of Borders\n\nBy the time I'd snuck out of the house back to my car, the pleasure of the morning was fading. Last night I'd crossed so many boundaries! I'd swum practically naked with my dick hanging out in the water. I'd had my ass eaten for the first time. I'd fucked a woman in nearly every position. And yet my dick still sat there, curled in my tight jeans. What did Hermes want from me?\n\nIn the car, I saw my cell phone was full of missed messages. Well, my pants had been off for most of the night, I wasn't surprised.\n\nI saw a few missed calls by Theo, and a series of text messages. 'Cass, I really want 2 talk. Can I see you tonite?' 'I think ur beautiful no matter what.' 'Please tell me what I can do.'\n\nAnd then one final text message, sent at three this morning: 'I think I love u.'\n\nMy heart felt faint. I thought of poor Theo, in bed alone, sending his text messages out into the silent night. I thought of our time together in Greece beneath the warm sun on the endless green hills. I thought of all the times he'd called on me in class, and the little burst of joy I'd felt each time I heard him say my name.\n\nBut how could Theo be in a relationship with a girl with a dick? It wasn't what he'd signed up for. And how could I be faithful to him when my cock kept getting me in trouble? It was like having a horny teenager attached to my crotch. Any way about it, a relationship with Theo would just break his heart.\n\nIt was a Saturday, so I had the day off from school. Rather than return home, I decided to drive around town. I got a breakfast bagel and some coffee, and just drove around the different neighborhoods. Then I took a road out of time and drove around the country. As the hours passed, I let the sun and the fresh air and the farmers' fields do my thinking for me. I listened to the local radio stations, and stopped at a farmer's stand for fresh fruit for lunch. I drove way out, to where the roads stopped having names and the signs just listed numbers.\n\nI stopped beneath one such sign and stretched my leg on the rocky hillside at the edge of the road. All around me the countryside was divided up into different invisible territories, marked only by old fence posts, or a change in foliage. One field for cattle, another for corn, a third for sunflowers. I marveled at the patchwork beauty of this country, like a quilt knitted from generations of farmers' work.\n\nSlowly, an idea came to me.\n\nI called Professor Dartien and explained it to her.\n\n\"I'm working in my office today. Want to meet me here to talk it over?\"\n\n\"I'm a few hours out, but I think I can get there around sundown.\"\n\n\"Oh perfect,\" she sighed in her lightly accented voice, \"that's the border between day and night.\"\n\nI sent one text message to Theo. It said, 'Call me @ midnite.'\n\nI got in the car and started driving back.\n\nI reached Professor Dartien's office just as the sun started to touch the horizon. I entered without knocking.\n\nShe sat on the couch this time, an academic magazine in her hands. She wore a red long-sleeve knit shirt with a swooping neckline and tight black pants. I was momentarily distracted by the cleavage staring back at me, but I recovered. I had stopped by my apartment and changed into a simple white t-shirt and a long green skirt. I dragged with me a heavy tote bag.\n\n\"So you want to summon Hermes?\" Professor Dartien asked.\n\nI closed the door behind me and dropped the tote bag to the ground. Large, flat stones, collected from the side of the highway, spilled onto the carpet. \"Let's build a herma!\" I said. \"I think Hermes doesn't want me crossing borders. He wants me at a border. That's where I found him last time, in Greece, and that's where he's going to find us now.\"\n\nProfessor Dartien shrugged. She pulled her dark curly hair up into a bun behind her long neck. \"It's just like back in college,\" she joked. \"Am I Betty this time?\"\n\nI didn't say anything. I started organizing the stones by size, stacking the larger ones first. Professor Dartien helped, never one to avoid getting her hands dirty. Before long, the last rays of yellow sunlight fed through the blinds, and we had built a four-foot herma on the floor of the professor's office.\n\n\"What now?\" she asked.\n\nI shook my head. \"I'm not sure. I guess we wait?\"\n\nI was crouched on the floor in front of the herma. Professor Dartien walked behind me and casually placed her hands on my shoulders. Very gently, she rubbed my skin, her thumbs sneaking down beneath the collar of my shirt.\n\n\"Now that we've tried your idea,\" she said, \"would you be up for hearing mine?\"\n\nI nodded. The massage was feeling nice after my long day of driving.\n\n\"Hermes didn't give you a bunch of stones, he gave you a flesh-and-blood penis. Right?\"\n\nI nodded again, not sure where Professor Dartien was taking her idea.\n\n\"From what you've told me, you've crossed a lot of boundaries with that penis.\"\n\nHer hands continued to casually stroke my neck and shoulders, and her fingers ran along my scalp beneath my long black hair. It felt intimate, and relaxing. I nodded.\n\n\"Let's see. Public masturbation, mutual masturbation, and now anal play and having sex with a woman. Is that all?\"\n\n\"Um, yeah. I can't believe I told you all that.\"\n\n\"Well, some of it Theo confessed to me. He's been calling often, searching for you. What's going on there? You're not breaking my best teaching assistant's heart, are you?\"\n\nI shrugged. \"It's complicated.\"\n\n\"Come to the couch with me,\" Professor Dartien said. I followed her, and when I sat down she guided my shoulders back against her. It may have been the massage, or the intimate details Professor Dartien knew about me, but I felt like I trusted her. She felt like an old friend. I practically melted into her body, my head resting between her breasts.\n\nProfessor Dartien's hands ran casually down my arms and over my hands while she talked. Occasionally she reached up again and ran her fingers through my hair or along my jawline and neck. It felt nice.\n\n\"Well you've crossed many borders with your flesh-and-blood herma. But as you said, Hermes isn't just a god of transgressions, he's also a god of borders. Where is the border with your penis? At which point are you most between two different states of being?\"\n\nI thought about it. When did I cross over a boundary line with my penis? Well of course there was the moment between not having a penis and having it, that was a boundary line. I remembered how itchy my crotch was, I thought I'd caught an STI. Turns out I'd caught something much stranger.\n\nThinking about that feeling with my crotch, I remembered clearly the dream I had two nights ago, just before my life changed. I remembered straddling the herma in my dream and taking it inside me. I remembered the sustained feeling of climax that seemed to continue for hours in the dream until I woke up cumming.\n\nI said, \"I guess that boundary point is right when I'm about to cum. I mean, right before that I'm just a machine, I can do anything. And then right after I'm a puddle of ooze, I can hardly keep my eyes open. It was different when I had a vagina, I could climax multiple times without having to stop. But with my dick it's like, one shot and I'm done.\"\n\nProfessor Dartien's hands were now drifting lower down my body, playing over my abs and my skirt, brushing my thighs. I felt my cock stir beneath the green fabric.\n\nProfessor Dartien lowered her head and I wasn't surprised, or disappointed, to feel her lips gently touch my neck. I practically purred and arched my back.\n\n\"Exactly,\" Professor Dartien said into my neck. \"That moment of climax is the border your herma marks. You've been crossing over it and over it and over it. I think if we want to talk to Hermes, we need to keep you there.\"\n\n\"How?\" I asked. Without even thinking, I reached down to Professor Dartien's hand and placed it on my breast. She gently kneaded my breast, and pinched my nipple beneath my white t-shirt. Just like last night, I wasn't wearing a bra. Maybe I'd foreseen this intimacy with the professor. Maybe I'd just become someone who doesn't wear bras.\n\n\"You leave that to me,\" she said, then lowered her face to mine. We kissed, a long, passionate kiss. With one hand, Professor Dartien reached down and lifted the hem of my skirt. Already my cock was bulging against my panties. She ran her hand along its length and girth.\n\n\"Do you know how long it's been since I touched a cock?\" she asked.\n\n\"You touch hermas all the time, professor,\" I said.\n\nProfessor Dartien laughed. \"Tonight I'm not Professor Dartien. Just call me Vistra.\"\n\n\"It's a beautiful name.\"\n\n\"A compliment coming from a beautiful woman.\"\n\n\"Am I still a woman?\"\n\n\"You'd better be,\" Vistra replied. \"After all, I'm a diehard lesbian.\"\n\nI raised my arms, and Vistra pulled the t-shirt over my head. She lowered her mouth and sucked long and hard on one of my nipples. It popped from her mouth, and she moved to the other. My tits were practically standing magnetically towards her. Vistra took an entire breast into her mouth, running her tongue all over it. I groaned. I could feel the head of my cock pressing against, and passing by, the band of my panties.\n\nVistra kissed up the side of my neck, across my jawline, and then kissed me deeply, mashing our lips together almost with violence. My fingers vanished into her long, thick hair. I pulled her body onto mine.\n\nI ran my hands over her large breasts and down to her shapely ass in her tight black pants. In her passion, the waistline had dropped, and I saw that the professor was wearing a black-and-green striped thong. \"Mm, Vistra, that feels good,\" I moaned.\n\nVistra kissed her way down my chest, stopping at each breast to worship, then running her tongue around my belly button. She pulled my skirt and underpants from my body in one fluid motion and tossed them to the floor next to the stone herma we'd constructed.\n\nMy cock was big and swollen and erect. Vistra eyed it like a vegetarian staring at a steak. Very cautiously, she let the tip of her tongue barely touch the head. My cock leapt with uncontrollable energy, and Vistra gave a little shriek.\n\n\"Don't worry, it won't bite,\" I joked.\n\n\"Well I might,\" Vistra said gravely. She bore her teeth and gently bit into my upper thigh. While she did so, she ran a hand over my cock, feeling its length and girth from the balls to the very tip. Vistra continue to bite, kiss, and lick my thighs, moving from thigh to thigh, each time coming a hair's breadth from my cock but never touch it with her lips. Finally she raised her head and spread her lips around the big swollen head of my dick. I could feel her warm breath against it.",
        "Then, as if changing her mind, she raised her lips to my belly, and traced more kisses up to my breasts. While kissing and sucking on, and gently nibbling, my nipples, she grabbed me by the balls and gave a light squeeze.\n\nI moaned.\n\n\"How do you know you're going to cum?\" she asked me.\n\n\"My balls tighten up- just like that,\" I said.\n\n\"Alright Cassidy, here's how this is going to work. I want you to let me know when you feel that, when you feel your balls tightening. Because if you cum, we won't get to meet our god of travels and trickery.\"\n\nI nodded, my cheeks flushed.\n\nVistra kneeled back down, her long curly hair dragging along my breasts and belly. Her hair blocked my view of what she was doing. I closed my eyes and focused.\n\nI felt something warm press against the base of my cock. Vistra's tongue. Her tongue traced the length of my cock, drawing little circles as it did so. I could feel the different levels of sensitivity all along the shaft. At the base I was hardly sensitive at all, although I liked feeling Vistra's hand there. But as her tongue slowly made its way up the ten inches, the sensitivity increased. Near the head of my cock, on the underside of the shaft, I was most sensitive. As soon as she start tracing circles there, I felt my balls tightening.\n\n\"Vistra!\" I cried. \"That's... that's too good!\"\n\nVistra sat up, flicking her hair over her shoulder. She raised an eyebrow at me. \"Very good, pupil,\" she chuckled. \"Let's cool down.\"\n\nVistra lowered her head, pursed her lips, and breathed cool air against my cock. It felt good, but not as good as before. My breathing calmed.\n\nVistra kept her lips pursed, and placed them back on that special spot below the head. Letting out some saliva, she brushed her lips back and forth along those few inches beneath the head along the shaft. I grabbed at the couch, driven crazy.\n\nI could now see Vistra's face, and she was looking right at me, her eyes bright with passion. Her eyebrow was still cocked, as if looking at the results of an experiment. Vistra slid her lips over the head of my cock and stroked a few inches at the base of my cock. I started rocking my hips. Vistra ran her tongue in circles around the head of my cock, all the while keeping her eyes locked with mine. Her stroking increased in speed. I felt my balls tightening.\n\n\"Vistra!\"\n\nShe pulled off of my cock with an audible pop. Half-smiling at me, she asked, \"Have you seen Hermes yet?\"\n\nI shook my head.\n\n\"Boy if I didn't know any better,\" she joked, \"I'd think you were just here for a free blowjob.\"\n\n\"It feels fucking amazing, Vistra.\"\n\n\"It better, I'm really good at reenacting ancient religious ceremonies.\"\n\nVistra stared at my cock and took a deep breath. \"Let's try this,\" she said. \"You'd be surprised at what a college student can learn behind the bleachers her freshman year.\"\n\nVistra wrapped her lips around the head of my cock and slowly lowered her mouth. I felt myself absolutely filling her mouth. Her lips stretched tight around my girth. Soon I felt the head of my cock pressing against the back of her mouth. Vistra took a breath through her nose and, positioning my shaft with one hand, lowered her mouth even more. I felt my cock start to slide into her throat. Each time she swallowed, I could feel the muscles move against my dick.\n\nI knew exactly what this felt like on the other side. I could imagine every inch of my dick sliding into that mouth, the effort it took not to gag, and the sick little thrill I got from fitting a big dick down my throat. I could see Vistra now feeling the same thrill. Here she was with a student in her office, a girl she said was beautiful, who suddenly has a dick she's practically choking on. Transgression building on transgression building on transgression.\n\nVistra took another deep breath and lowered her head further. She reached up with her hands and found mine. She placed my hands on the back of her head. She continued to stare at me from between my breasts, my cock slowly vanishing between her lips. I could feel her warm tongue all along the shaft of my cock. She nodded at me and I slowly pushed her head down. A quarter-inch at a time, my cock slid between her lips through her mouth and down her throat. It was like being squeezed all over my cock at the same time. It wasn't he most comfortable feeling, and I knew exactly how Vistra was feeling. But right there on the border of pain was pleasure. Vistra was breathing faster, as was I, and suddenly her lips were kissing my skin, and I realized she had taken all ten inches of my wide dick into her throat. I felt my balls tightening. I tried to shout Vistra's name, but no words came from my mouth. In fact, all sound had stopped. I couldn't heard the crickets from outside, or the ticking of the clock. Vistra looked frozen, and I couldn't hear her breath. It felt like I was about to cum, and the feeling wasn't going away. I squirmed beneath Vistra, silent myself.\n\nUntil I realized someone was in the room with us.\n\nJust where the stacked stone herma had stood was a slight man in a simple white tunic. He smiled at me approvingly. \"She's a beauty,\" he commented. \"I think I've seen her before.\"\n\nI managed to gasp. \"Hermes?\"\n\n\"The one and only!\" he cried. He jumped into the air, and I saw that at the edge of his sandals flapped small golden wings. \"You have come to the border, my girl. And here's where you find me. It's been a fun adventure, no? I especially like that Piri, now that's a girl without any borders or boundaries!\"\n\nThough the world was frozen around me, I still felt the cum boiling in my balls, that electric tingling shooting through every nerve in my body. I gasped, \"What do you want from me?\"\n\nHermes shrugged. \"I only wanted to help you. There in Greece near one of my favorite hermas, I saw that you needed help crossing a boundary. So I helped you.\"\n\n\"But I crossed a bunch of boundaries yesterday, and you did nothing.\"\n\nHermes looked confused. \"You mean all that fucking and masturbating? That wasn't crossing into a new territory, that was already your life! Isn't there something else you're having trouble entering?\"\n\nThough my heart was beating a million miles a minute, and my entire dick felt ready to explode, I suddenly knew just what Hermes meant. \"You're right,\" I said. \"I've been backing away from this border just when I'm ready to cross. And I've hurt others because of my cowardice.\"\n\nHermes smiled. \"So what do you say? Do you want to keep your herma?\"\n\nI looked down at my cock, buried entirely in Vistra's mouth and throat. I could still feel every point of contact within there, her tongue and lips and the tight throat passage. I thought back over the last day, and all the people I'd connected with in new ways. But that wasn't just because of my new cock, it was because of the person I'd chosen to be.\n\nI shook my head. \"I'm ready to move on.\"\n\nHermes giggled. \"Well, I am the god of travel. It's been nice knowing you, kid.\"\n\nAnd then suddenly I was cumming. Only I wasn't shooting ropes of cum down Vistra's throat. Instead, her face was buried in my pussy, and I climaxed over and over as she fiercely licked my clit and dug her tongue between my lips. I held tightly to her head until the last climax rocked my body.\n\nVistra looked up at me. Her mouth, chin, and cheeks were covered in my juices. She wiped her lips with the back of her hand. \"Well, that was surprising.\"\n\n\"I saw Hermes,\" I said.\n\n\"I want to know everything,\" Vistra said. \"I think I see a new paper coming up. Hermes as the Border Between Genders, or Hermas and Hermaphroditism, or...\"\n\nVistra looked down, confused. \"Where did this come from?\"\n\nShe lifted up a ten-inch stone phallus which had just appeared on her couch.\n\nAt midnight, my phone rang. I answered immediately.\n\n\"Theo.\"\n\n\"Where are you, Cassy?\"\n\n\"Open your door.\"\n\nI'd been camped out in the hallways outside Theo's apartment for the last twenty minutes, waiting for his call. I stood as he opened the door.\n\n\"I have two surprises for you,\" I explained. \"Here's the first.\"\n\nI handed Theo a book. He looked at the cover, still standing in the doorway, obviously confused. \"Oh, it's a first-edition copy of Professor Dartien's famous book.\" He opened the cover and read the note inside. It said: 'You have my blessing, you crazy lovebirds. - Vistra'\n\nI stepped up to Theo and gave him a deep and meaningful kiss. He still stood in the doorway, and hadn't moved an inch.\n\n\"You really hurt me yesterday, Cass.\"\n\n\"I know. But I've got another surprise to make it up to you.\"\n\n\"What is it?\"\n\n\"Trust me, you don't want this surprise in the hallway.\"\n\nTheo looked down towards my long green skirt. I sighed, glanced both ways in the hall, and lifted up the skirt. I wasn't wearing underwear. I'd shaved all the hair from my vagina and it lay there like a target for Theo's arrows. Theo gasped. \"What happened?\"\n\n\"I'll tell you soon, my love, my sweet, my boyfriend. But first can I come in?\"\n\nTheo backed into his apartment. Taking a deep breath, I followed him, stepping purposefully over the border."
    ],
    "authorname": "PastPresentFuture",
    "tags": [
        "college",
        "futanari",
        "dickgirl",
        "blowjob",
        "lesbian",
        "lesbian sex",
        "oral sex",
        "anal",
        "weird",
        "magic"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/curse-of-the-trickster-god"
}