{
    "title": "Home for Horny Monsters Ch. 54",
    "pages": [
        "Hi all! Annabelle here with the next chapter of HFHM!\n\nI've gotten some very lovely comments/emails recently, but wanted to clear something up. When I mentioned this story arc ending soon, I was referring to Cecilia's capture by the faerie queen (ie, book 4), not HFHM as a series. I already have the plot outlined for at least four more books, and I will be perfectly clear that it is coming to an absolute end when that happens :)\n\nAnyway, new reader? This tale is over half a million words in the making, and you're gonna be lost, so start at the beginning (unless confusion makes you horny, then traipse on, my confused friend!).\n\nReturning reader? Welcome back! Hopefully you saw that I started posting a side series here on Lit (Dead and Horny) starring Dana and Lily. Click on my bio to find it and a release date for chapters this summer.\n\nAlso, thanks to everyone who remembers to rate/comment on my stories, not only does it help others find my work, but it also keeps my head in the game. I so enjoy writing this weird, convoluted tale of sex, monsters and adventure, and I plan to keep doing so for as many years as possible!\n\nAnyway, I think the title of this chapter says it all, so I'm done yapping. Happy reading!\n\nShocking Developments\n\nMike stared at the piece of paper in front of him, then looked up. Jenny stood on the other side of the paper, holding a large pencil in both hands. She was tapping her foot impatiently.\n\nHe sighed. \"How about W?\"\n\nJenny drew the last leg on the hanging stick figure, then drew an X over each of his eyes. He heard a distant cackle come from all around the room, and she dropped her pencil.\n\nHe scrutinized the puzzle before him and then looked at her. Somehow, despite guessing all the vowels, the dashes on the paper were still largely empty.\n\n\"I'm starting to wonder if you actually know how to spell anything,\" he said.\n\nThe doll said nothing, but a book on a nearby shelf threw itself at him, and he dodged out of the way.\n\n\"Hey now, be nice.\" He picked up the book and set it on the table. \"Okay, break time is over. I need to go through some more of these books. Here, I found this and thought you might want to play with it.\" He pulled a top out of his pocket and handed it over. Jenny took it from him and sat down on the edge of the desk and gave the top a spin.\n\nGlad that the ghost seemed content for now, he dug into his books once more.\n\nThere was a puff of smoke, and Lily appeared in the seat across from him, her legs crossed and a sucker clutched seductively between her fingers.\n\n\"Hey there, Romeo.\" She gave the sucker a lick and then leaned forward. \"Studying hard?\" She was wearing a button-down blouse with dress pants, but her clothing fuzzed out and was replaced with a school girl's outfit. \"Or studying while hard?\"\n\n\"Trying to keep from getting fucked over by the faerie queen, actually. Where have you been?\"\n\n\"Hunting, trying to twist the head off your shadow buddy, the usual.\" She leaned back and put her feet up on the desk, slightly spread apart so that Mike could see up her skirt. She was naked beneath it. \"And you?\"\n\nHe looked away from her crotch and into her eyes, suppressing the urge to shake his head. She really did enjoy toying with him, and he was determined not to give her the satisfaction of knowing that she still got to him, if only to aggravate her a little. \"Getting ready to go into the Underworld any day now, actually. The back gate is a portal that goes there, so I'm hoping I can find another gate to the Faerie Realm once I'm inside.\"\n\nLily frowned and put her legs back down. \"Shit, really?\"\n\n\"Yep.\" He rubbed his eyes with the palms of his hands. \"Apparently there's something nasty on the other side of the gate that I might have to deal with. After that, it sounds like I just need to roam around Purgatory or whatever for just a little bit until I can find the portal I need to get to faerie land.\"\n\n\"Hmm.\" Lily furrowed her brow. \"Romeo, you're aware of the danger of walking into the Underworld...right?\"\n\nMike picked up the book he was looking at and turned it to face her. It showed a tree biting a man in half. \"I've got some ideas. Can't tell which ones are any good. And once I get to the queen's court, I'm half expecting some form of betrayal once I'm there, so I've been trying to bone up on faerie law. The queen created this bargain, and I fully expect her to try and weasel out of it. The only thing I can find is that the bargain can be reneged or altered if one party challenges the other to a contest or a duel, but the other party has to agree to it. But it can't be made under duress, and the challenger gets to pick the location. I don't know how she'd make me break our agreement that way, but I should brush up, just in case.\"\n\n\"Enough about faerie law, let's go back to the Underworld. You're alive. You can't just waltz on in there, you'll draw so much attention.\" She snatched the book from his hand and slammed it shut. \"From all sorts of spirits.\"\n\n\"You almost sound like you're worried about me.\"\n\n\"Eat a dick.\" Lily put the book in her lap. \"That shadow is just on the other side of the veil. In terms of geography, that puts him wherever the fuck he wants to be, and now I wonder if he isn't waiting for you on the other side of the gate.\"\n\n\"I'm not going alone. I'm planning on taking Yuki. You could come too, if you want.\"\n\nLily scowled at him and then looked down at her book. \"I shouldn't. That close to Hell, demons would sense me moving about and it would draw attention to you. Demons are curious like cats. They'd come just to see what I'm up to.\"\n\n\"What is it like? The Underworld, I mean, not Hell.\"\n\n\"Dreadfully boring. Everyone you meet there is a miserable bastard, but you probably won't even see that many people. A place like the Underworld isn't meant for the rules of reality as you know them. It's an infinite plane, generally devoid of distinguishing features. It can look different depending how you get there\u2014maybe it's a cave, a river, whatever. You can read about it in almost every religion known to man, and almost every description has some truth to it.\"\n\n\"Is it safe, though? Like, it won't hurt me, will it?\"\n\n\"The Underworld itself? Not really. You have to remember that souls migrate there naturally. I guess the best way to describe it is like a layer of primer beneath the paint of reality. However, the Underworld lies beneath all realities on account of the fact that everything dies eventually. Why are you asking me all this, hasn't Death told you all about it? I thought you two had a bromance for the ages?\"\n\nMike shook his head. \"Death just reaps souls, he doesn't follow them into the Underworld. I asked, and he doesn't know.\"\n\n\"Oh.\" Lily bit her lip and contemplated him for a moment. \"Well, being serious, the Underworld itself can't hurt you, but a lot of things go there when they die, so you may run across something that can. And don't even bother asking me if it's something Yuki can handle, because I honestly don't know. Maybe wear your running shoes, just in case.\"\n\n\"Noted. How about time? If I go in, it won't be like the faerie realm, right? I don't want to walk through the gate and come back forty years from now.\"\n\n\"Nah, the time in there is messed up, but only in terms of perception. Five minutes there is five minutes here. What did Einstein say about time and pretty girls?\"\n\n\"Something something relativity?\"\n\n\"Exactly. The Underworld is kind of like that, except you're not talking to a pretty girl, you're holding your breath underwater. It was never intended to be a pleasant place, and I try to avoid it if I can. When are you planning to go?\"\n\n\"Ratu has spent the last week mending the key that unlocks the gate, so as soon as she hands it over. The plan is to pop in for a quick reconnaissance and then come back.\"\n\n\"I see.\" She sighed and handed the book back over before standing. \"Well, guess I'm off.\"\n\n\"Where are you going?\" he asked.\n\n\"To check with Beth to see if she can change your will. Technically my heart is part of her inheritance, and I don't need three masters after you eat it in the Underworld.\" She sashayed toward the door dramatically, then stopped at the exit. \"I'll see if Dana wants to be my new mommy. She's not in a rush to die anytime soon, cause, well, you know.\"\n\n\"Appreciate the vote of confidence,\" he muttered once she was gone. \n\nThe will was technically finished, this much was true, but he wondered how inheriting magical items worked. Did they recognize human laws? Would Lily somehow be shared between Beth and Dana, or would she be Naia's alone? He looked out the window behind him, chin in hand. There was always the fear that he would fail, that something terrible was waiting to happen to him. But did he want to spend his entire life locked in this house, trying to get others to do his job for him?\n\n\"Do you think I'm making a mistake?\" he asked Jenny.\n\nThe doll shook her head.\n\n\"I'm glad I've got one person who believes in me.\" He patted her head and resumed his studies. In a couple of hours, he would go check on Tink, and then this afternoon was supposed to be his turn with Quetzalli. He rubbed his wrist, thinking of the nasty shock she had accidentally given him a couple days back. She had asked him to show her how to throw a ball, and in the process of teaching her, she had zapped him from five feet away. Apparently, the movement required for throwing was all it took for her to unleash a nasty discharge, and he was grateful that his sixth sense had him crouching on the ground to minimize the damage.\n\nHe was about ready to move on when he heard a knock on the door. When he looked up, he saw Yuki standing there.\n\n\"Hey,\" he said, then stopped.\n\nShe was holding a dark, ornate key in her left hand, and when she lifted it into the light, he could see thin, golden lines spread throughout the metal.\n\n\"Is that really it?\" he asked. \"The key? It's fixed?\"\n\nShe nodded. \"Finished it this morning and thought you'd be gung ho to go check things out, so she had me wait to give it to you until I was rested up. Wanna go see what's on the other side of that gate? I figure we can take a quick peek and be back by dinner.\"\n\n\"I'm in. Hold on.\"\n\nHe picked Jenny up and took her back to the front room, where her doll house was. After he set her inside, he ran to the front yard and gave the sundial a twist, then went back inside and opened the closet by the front door. Inside was a backpack full of emergency supplies that he had packed earlier in the week, in case something went wrong on the other side. He didn't want a repeat of the faerie realm incident.\n\nYuki waited for him by the back door, and they walked into the backyard together. A week spent waiting and researching was about to come to fruition, and It was hard to keep the spring out of his step. When Naia spotted him, she smiled.\n\n\"Is the key fixed?\" she asked.\n\n\"It is.\" He looked around. \"We're only planning on going in and looking around.\"\n\n\"Isn't that what happened with the wardrobe?\" she asked, then crossed her arms. Yuki coughed and turned away.\n\nMike frowned. Naia had a point. \"Should I wait for someone else to come with me, then?\"\n\nNaia shrugged. \"It's your call, lover. But you know something nasty is waiting for you on the other side of that door. You should at least have a way to call for help if you need it.\"\n\n\"That should be doable,\" said Yuki. She summoned a tiny white light in her hands and sent it out. \"That will find Daisy, and she will come. It's how I would summon her from the tower. I think taking the others might not be a good idea if we're trying to avoid drawing attention to ourselves. I can keep an eye on you, but not on everyone else. If we run into trouble, we can come running back.\"\n\nMike sighed. He could potentially take some of the others, but Yuki was right. If they were just popping in for a look, it wouldn't do to try and keep track of everyone else, especially if they had to run for it. If the Underworld gobbled him up, then at least the others would be around to protect the house until he returned.\n\nBesides, he was going to have to step into the unknown at some point. Was there any way to truly be prepared?\n\n\"Yeah, let's head in once Daisy is here.\" He looked at Yuki. \"Are you ready?\"\n\nShe smirked and held up a handful of tarot cards. \"Unless you want to give me a couple decades to prep the rest of these, I'm as ready as I'll ever be.\"\n\nThe sundial was freshly turned, giving him twenty-four hours. Up on the roof, he could see Abella watching them. He waved and she gave him a thumbs up. He wondered if he should bring her, too, but thought again about what Yuki said.\n\n\"Let's do this, then.\" He cracked his knuckles and walked to the gate. He grabbed the padlock, the metal cold to the touch. He heard Yuki come up from behind him, and he held out his hand. Today would be one more step toward getting Cecilia back, and he felt like there should be far more fanfare involved with stepping into the Underworld itself.\n\nSadly, this was real life, not a movie. \"Key?\" he asked.\n\n\"Still waiting on Daisy,\" Yuki reminded him.\n\n\"Right.\" He let go of the padlock and tried not to look too sheepish. It was another ten minutes before the little ball of yellow light came around the corner of the house, and Daisy landed on Yuki's palm.\n\nA quick sign language exchange between the two of them occurred, and then Daisy flew over to Mike and landed on his shoulder. The fairy gave him a playful kiss on the cheek, and he put his hand out for the key.\n\nWhen Yuki put it in his hand, he felt a chill go through his body. He took the key and slid it into the lock, marveling at how it was such a tight fit. If not for the little lines of gold in the key, he wasn't able to tell where the key ended and the padlock began.\n\nHe twisted the key, and the lock opened with a click. He pulled off the padlock and hung it off of a nearby bar, and that's when he heard a loud thump from behind him.\n\n\"Abella?\" He turned to see the gargoyle standing there. \"Everything okay?\"\n\n\"I will watch the gate,\" she explained. \"In case someone other than you tries to come out.\"\n\n\"Good idea.\" He handed her the key. \"If we're not back by tonight\u2014\"\n\n\"Then I will worry.\" She smiled and winked. \"Call if you have need of me.\"\n\n\"Hopefully, I won't need to.\" He opened the gate, and the creak it made pierced him to the core. Even Abella winced at the sound, and once it was open far enough, he grabbed Yuki by the hand, just in case stepping through it might separate them.\n\n\"Let's see what the other side looks like,\" she said, then followed him through.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nDana scrutinized the controls in her hand, then looked over at Quetzalli. They were in the greenhouse, standing on the cliffs just inside its doors. Down below, the jungle stretched out for miles, and except for the centaur settlement in the distance, there was no other sign of life.\n\nThe dragon sat on the cliff's edge, her feet dangling over the thirty-foot drop. Heights didn't seem to bother her, and she was busy pointing at clouds and chatting animatedly to Dana about cloud formations.\n\nDana had learned to tune her out, but sometimes, in the middle of the night, she could think back on Quetzalli's explanation about how stratus clouds were a sign that the thermals were perfect for some long, lazy flights in the sky. She often wondered if the long lectures on weather were more due to Quetzalli's instinctual interest in sky maintenance (as she called it) or if she missed the sky itself.\n\n\"Oh!\" Quetzalli looked over her shoulder, her hair sliding across her shoulders as she turned. \"Do it now.\"\n\nDana nodded and sent the drone up. She had been unable to figure out what was causing all the interference and confusion for her drones, but Quetzalli had told her it was related to shifting electromagnetic fields, which she could sense. Apparently there were times during the day where Dana could fly safely for a few minutes, and she was at the point where she wanted to deliver something to the centaurs rather than more excuses.\n\nSix drones lifted off of the ground and shot out across the jungle floor, each one on a pre-programmed path. Dana nervously watched Quetzalli, who was looking at the horizon with squinted eyes. The dragon would warn her if another shift in fields was coming, and all she could do was order the drones to land or return and hope they didn't get broken. There were at least five drones lost in the jungle below, and she figured at some point, Mike would notice the cost of them.\n\nOn her laptop, the data came in chunks, and she smiled in satisfaction as the first images of the valley floor appeared on her screen. Toward the bottom was the centaur tribe's settlement, and she smiled at the cluster of centaur children who had obviously heard the drone and stopped to wave at the sky.\n\n\"See? I told you.\" Quetzalli had come over, but was standing a respectable five feet away. Dana had instituted a five-foot rule for all electronics after her last laptop had been shorted by a curious finger. \"To catch many fish, you must cast a wide net.\" \n\n\"Yeah, well I want a much wider net.\" Most of what she was seeing had already been mapped by the centaurs, and she felt like she really needed a win here. She had made zero progress with the locked door on the third floor, and had just found out yesterday that Mike was planning to go through the back gate with some magic key that Ratu was fixing. She had mixed feelings on not contributing to any of these endeavors directly, and hoped that some success with the centaurs would help her feel better.\n\nThe data was coming in, but now that the drones were further away, the live data feed was degrading. Dana now wondered if she should just set the drones to record and then have the centaurs track them when they inevitably fell from the sky.\n\nA distant thunderclap washed over the cliffs, and Dana scrambled to send out a return message to all of the drones.\n\n\"They don't like to share their skies, you know?\" Quetzalli was staring at a crop of clouds that had just appeared on the horizon. \"They can be very territorial.\"\n\n\"C'mon, c'mon, c'mon,\" Dana mumbled under her breath as she monitored the feeds from the drones. Two of them were coming straight back, and a third was trying to turn around. She wired into it directly and helped fly it back a short distance before doing the same with a fourth drone.\n\nThe fifth drone would no longer connect with her computer, and the sixth one vanished from her screen, the connection lost. The drones on their way back circled about like drunken birds.\n\n\"Damn, damn, damn!\" She picked up the net that Tink had built for her. It was almost ten feet long, but had a wide mouth, and she stood on the edge of the cliff and used it to rescue the closest drone. Another one flipped upside down and crashed into the ground, and Quetzalli was able to grab one by the edges, hopefully sparing its internal components.\n\nDana rescued the fourth one with her net and watched helplessly as the fifth one out took a nosedive straight into the jungle below.\n\n\"Well, shit.\" She looked at where it fell and pulled a paper map out of her back pocket. She had printed it last week, and drew an X where she thought it had crashed. \"Are those storm clouds?\" she asked.\n\nQuetzalli pointed toward the horizon. \"Well, if you account for the rounded edges up top\u2014\"\n\n\"Please. Yes or no.\"\n\nQuetzalli pouted. \"Yes, but they have no rain in them. It isn't time yet.\"\n\nDana sighed and took the drones out of the greenhouse and placed them in a storage container by the front door. When she walked back inside, Quetzalli was crouched down on the ground, drawing figures in the dirt with a sharp stick she had found.\n\n\"I need to find that one that fell,\" Dana told her, then picked up her laptop and slid it into her messenger bag. \"See if we can pull any data off of it.\"",
        "\"Let's go!\" Quetzalli pointed her stick over the jungle in the general direction the drone had fallen. While the dragon was no good to her in tracking the drones over any distance, once they were close enough, she could pinpoint any internal circuitry that still carried a current. \"Are you interested in hearing how hail is formed?\"\n\nDana almost said no, but nodded instead. \"Sure am.\" If Quetzalli started on weather formations, it meant that Dana wouldn't have to hold up her part of the conversation.\n\nThey began the long trek down the trail that took them to the jungle floor. This area was burned into Dana's mind, she had traveled it so many times. She was also grateful that she didn't get tired, because the trip back up took time and energy, and she sometimes had to do it a few times a day if her luck with the drones was bad.\n\nThey wandered through the jungle for a bit. The trip was made easier today by a series of trails that the centaurs had established and maintained for themselves. From experience, Dana knew that the trails traveled the base of the cliffs and went to a set of waterfalls. She had no idea where the water actually came from, as the entrance to the greenhouse from inside of it was simply a wall of glass windows that went all the way up into the sky and extended out toward the horizon. For all she knew, if she walked along the glass, she might inevitably come back on the other side.\n\nQuetzalli was deep in discussion about how updrafts could trap water droplets when a small cluster of centaurs came around the corner. They were carrying assorted baskets stuffed full of plant matter, and Zel was leading them.\n\nZel broke away from the group and came close. \"I didn't expect to run into you today!\"\n\n\"Well, you did, so you can guess what that means.\" Her lip twitched.\n\n\"Lost another one?\" Zel smiled and put a hand on Dana's shoulder. \"I really do appreciate the help you've already given to us. Just because you haven't found success doesn't mean the effort hasn't been noticed.\"\n\nDana nodded. \"It doesn't make me feel better, though. I wish I could do more.\"\n\n\"There will be plenty of time for more. Hi, Quetzalli, how are you today?\" Zel bowed to the dragon.\n\n\"Right as rain.\" Quetzalli bowed back. \"Are you excited for your ceremony?\"\n\nZel nodded. \"I'm a bit nervous, I'll admit. My aunt will be taking over as head shaman once I am officially the leader of the Herd. It sounds like you've all been a bit busy at the house, I hardly see Mike anymore.\"\n\n\"He's apparently headed for the Underworld.\" Dana filled Zel in on what she knew, and Zel paused her long enough to instruct the other centaurs to continue about their tasks.\n\nOnce Dana was finished, Zel chuckled. \"That man is always getting into trouble. I wish I could do more for him, but I'm going to be busy enough down here.\"\n\n\"I figured as much. Running things must keep you busy.\"\n\n\"It does. But it's nice to feel like part of the herd again.\" Zel smiled and then leaned toward Dana. \"And you need to take better care of yourself. Your eyes are already grey.\"\n\nIn response, Dana's stomach growled.\n\n\"Well, guess I better get going then. See if I can find this drone before I need to snack. I'll see you around.\"\n\n\"You had better.\" Zel gave Dana a hug and then looked at Quetzalli. \"And you're coming to the ceremony, right?\"\n\n\"I wouldn't miss it.\" Quetzalli bowed, and Zel departed, stopping long enough to pick up her basket before galloping away.\n\nThey continued onward, and Dana checked the map a few times to make sure they were on the right course. It had been almost an hour since they departed the cliffs, and when they stepped into a small clearing, Quetzalli's arm shot forward, her finger pointing up into the tree.\n\n\"It's up there,\" she said.\n\n\"Thanks.\" Dana looked where Quetzalli pointed, but still couldn't see it. She pulled her computer out and attempted to connect. Once connected, she used the camera to try and pinpoint its exact position by walking around until she spotted herself.\n\nWhen she finally spotted it, she groaned. It was quite a ways up, which meant she would have to climb. She took off her bag and set it on the ground and then scrambled up the tree.\n\nIt took her a bit to get up. The branches didn't allow for a lot of space by the trunk, and she kept getting tangled in vines. It also didn't help that the trunk of the tree was covered in thick thorns that occasionally stuck her. Still, once she was high enough, the drone was within reach. A slender branch was stuck in one of the rotors, so she climbed out onto the tree branch and worked to free it.\n\nThe branch creaked beneath her, and when she finally freed the drone, she tried to crawl back toward the trunk with it.\n\nThe branch snapped, causing her to lose her footing. She fell out of the tree and landed on the ground with a thud.\n\n\"Are you okay?\" asked Quetzalli.\n\n\"Yeah, I'm good.\" Dana stood and held up the drone triumphantly. \"Got it!\"\n\nQuetzalli's eyes widened in horror, and Dana followed her gaze to see that her forearm now had an additional joint in it. Her ulna had snapped and was pressing up beneath her skin.\n\n\"Ah, shit.\" She dropped the drone and grabbed her wrist and gave it a yank. The bones crunched back into place and she could feel them mending beneath the skin. A powerful wave of hunger rolled through her, and she took a deep breath and sat down on a nearby log.\n\n\"Are you better now?\" Quetzalli asked.\n\n\"Traded one disaster for another. Hand me my bag?\" She held her hand out, and Quetzalli picked up the laptop bag and handed it over. When the dragon bent over, her breasts pushed together in a way that made Dana think of cake. Something with thick, creamy frosting and blueberry filling...\n\nShe pulled a small thermos out of the side mesh of her bag. It was where a water bottle could go, but this was just as important. She pulled off the cap and tilted it sideways, causing a vial to slide out into the palm of her hand. It was her emergency food source for times like this one, and she popped the top off and drank it down.\n\nHeat flooded through her body, and she smacked her lips.\n\n\"What's it taste like?\" asked Quetzalli.\n\n\"Um...\" Dana held up the vial. \"Honestly? It's like the best damn soup you've ever had, but I don't think it would taste like that for you. It's a dead girl thing.\" Already, heat was flowing through her belly and down into her thighs. \"So, this is kind of awkward, but this stuff makes me, um...horny.\"\n\n\"Horny?\" Quetzalli pointed to the horn on her head.\n\n\"No, not like that. Uh...I'm going to need some privacy for a bit to take the edge off.\" Where was Lily when she needed her? Those same breasts that had reminded her of cakes were now making her think completely different thoughts.\n\n\"Take the edge off of what?\" Quetzalli sat next to Dana and put a hand on hers. \"Are you taking something off the drone? Or perhaps you\u2014\"\n\nDana kissed Quetzalli's lips, and marveled at how soft and thick they felt against her own. She immediately pulled away and scooted away. \"Shit, I'm really sorry. When I eat that stuff, I get super overwhelmed. If you can just wait somewhere else, I'll\u2014\"\n\n\"No.\" Quetzalli touched her lips with a finger, a distant look in her eye. \"I...I would like to try that again. It felt...nice. That was a kiss, right?\"\n\n\"Oh, Quetzalli, if I do it again, it'll become a lot more than ki\u2014\" Dana froze in place when Quetzalli kissed her back. It was clumsy, and more than a little awkward, but when Quetzalli pulled back, Dana could see sparks in her eyes.\n\n\"I like that,\" declared the dragon. \"It felt like I was riding in a storm. My tummy feels all tingly, and my legs are all wobbly. Do you feel that way as well?\"\n\nDana was taking long, deep breaths now, trying to keep herself from pouncing. \"Look, it feels different for everybody, so I don't\u2014\"\n\n\"I think I was supposed to open my mouth. I've seen people use their tongues in those videos that Abella keeps watching, and I've wondered if it allows for a better connection?\"\n\n\"A better connection for what?\"\n\nThis time, when Quetzalli pressed against her, Dana was immediately aware of those large, pillowy breasts. When their lips touched, she opened her mouth to allow Quetzalli's tongue inside, and was surprised to feel a sudden jolt. It was similar to licking a 9-volt battery, except she felt it through her entire body.\n\nDana moaned, and pulled the dragon against her, shifting her body enough that the two of them fell off the log and onto the ground. Her hand closed on Quetzalli's breast, and the dragon moaned.\n\n\"Oh, I truly don't understand those things,\" she muttered after pulling her mouth off of Dana's. \"They hurt if I run too fast, throw off my balance so my back aches, and also feel really good when I play with the tips of them.\"\n\n\"They'll feel even better outside of that bra,\" Dana said, then lifted Quetzalli's shirt.\n\n\"Oh, I do hope so.\" Quetzalli lifted her arms, allowing Dana to reveal her breasts. With one hand, Dana undid the clasp in the back, revealing that Quetzalli's breasts had the largest nipples she had ever seen. \"The sensitive areas have even been marked, it's so\u2014oh!\"\n\nDana had sucked one of the nipples into her mouth and was circling the tip of it with her tongue. That same electrical surge of energy went through her mouth, and while she played with the other breast, she couldn't help but run her hand along Quetzalli's thigh. The dragon was wearing a skirt, and it was easy to find bare skin to stroke.\n\n\"Oh, that makes me feel funny,\" the dragon declared. \"Not silly funny, but like my head is spinning.\"\n\n\"Oh, there's plenty more where that came from.\" Dana's fingertips touched the edge of Quetzalli's panties and slid beneath them, then pushed them aside. The dragon let out a moan of surprise as Dana teased her soaking wet slit.\n\n\"I feel so strange down there,\" Qeutzalli said. She looked into Dana's eyes, and Dana could see the lightning storm trapped within them.\n\n\"Yeah, well I promise it gets\u2014\" Dana's muscles tensed up when she touched Quetzalli's clitoris and received a decent jolt of electricity through her arm. The power surge lasted only a second, and Quetzalli cried out, spreading her legs wide and pulling Dana's fingers inside of her.\n\n\"More,\" she begged, and thunder roared in the distance.\n\n\"I'm all for it, but I'm not gonna get struck by lightning, am I?\" It was a silly question to ask now that she was knuckles deep inside of Quetzalli's pussy, but it probably needed to be asked.\n\n\"Oh, you'll be fine, I'm all voltage and no current. And the thunder isn't mine.\" Quetzalli grabbed Dana's wrist and held it down so she could force herself further onto Dana's fingers. \"I love how full that makes me feel.\"\n\nDana smirked. She only had two fingers inside of Quetzalli right now, and could only imagine how she'd react to a third.\n\nThey kissed each other once more, and another surge of electricity went through Dana. Quetzalli was now pawing at Dana's breasts, and the two of them were rolling around playfully on the jungle floor.\n\nDana got on top of Quetzalli and curled her fingers up toward the front of her vaginal wall, then used her thumb to tease Quetzalli's clit. This broke the kiss, and Quetzalli grabbed onto the ground with both hands and arched her back.\n\nExpecting a scream, Dana was surprised when it escalated into a thunder clap, and the sky above them filled with lightning that scattered along the sky like a giant spider web.\n\n\"No, really, are we good down here?\" she asked, once the thunder had passed. Her ears were ringing now, and she wanted to get off, but not if she was going to become a lightning rod.\n\n\"You're totally fine,\" Quetzalli told her, her entire face flush. \"Now show me how to do that to you.\"\n\nDana practically ripped her own pants off, then mounted the dragon's face. \"It won't take me long, I just need you to use your tongue. I can do most of the work, so don't\u2014\"\n\nShe damn near fell off when Quetzalli's tongue touched her throbbing clit and sent a jolt through her body. It wasn't painful, and her entire body tingled with electrical potential, causing her hair to stand up. It was like being plugged into a sexual Vaan De Graaf generator, and she grabbed onto the back of Quetzalli's head, jamming her pussy into Quetzalli's mouth.\n\n\"Holy...fucking...\" She grit her teeth as she felt Quetzalli's tongue slide along the outside of her snatch. The dragon's tongue was rougher than she remembered from when they were kissing, and she was already having trouble thinking beyond the moment. Little streamers of electricity were forming on the ends of Dana's hair, now visible as a result of the darkened sky above.\n\nInside her chest, she could feel her heart beating wildly.\n\n\"Ike dis?\" Quetzalli asked, and she slid one of her fingers inside of Dana's pussy.\n\n\"Yesss,\" Dana hissed, then clamped her thighs down on Quetzalli's face. Every time she felt like she was getting close to her own orgasm, she would feel a surge of energy through her entire body, which would cause her to flinch and her orgasm to back down.\n\nThe clearing filled with the sound of hisses and pops as static crackled everywhere around them. When Dana's orgasm came, it felt like she was falling, and she gritted her teeth and groaned so hard through them that she sprayed spit on the ground. Looking down, she could see large streamers of electricity dancing up and down Quetzalli's horn, filling the air with an ominous hiss.\n\nShe tilted over backward, her legs going loose to release the dragon. Beneath her, she could hear Quetzalli panting, so she sat up long enough to move off of the dragon's face, then laid on the ground next to her.\n\nDana stared at the sky, her body unusually warm. The clouds that had rolled in were now piling on top of each other, and she knew if she asked about it, Quetzalli could tell her everything she never wanted to know about weather patterns.\n\n\"Does it always feel that way?\" asked Quetzalli.\n\n\"No.\" Dana rolled onto her side and contemplated the dragon's mostly nude form. Even now, despite the effects of the semen wearing off, the sight of Quetzalli's bare breasts proudly on display just above her fabric covered hips was having quite the effect on her. \"Using an analogy you will understand, sex is a lot like a thunderstorm. Same idea, but each time can be completely different.\"\n\n\"I see.\" Quetzalli contemplated this in silence. \"So...would it be different with a man?\"\n\nDana nodded. \"It would. In fact, it's different when you're with anybody new, but a change in gender easily creates a completely different dynamic. But that's only if you're interested in the first place. I assume you're talking about Mike?\"\n\n\"Hmm.\" Quetzalli sat up and leaned forward. \"I've seen the others engage in that behavior with him, and it has created a strange sensation in my belly. With you, it felt the same, but was more of a surprise. It wasn't something I desired in advance, but once the opportunity was there, I took it. And now I feel all warm and relaxed, and wonder why people don't do it more often.\"\n\n\"Some people do it plenty. I definitely wouldn't use anything that happens in this house as a baseline for standard human behavior, though.\" Dana slid her shirt on and stood. Her legs wobbled for a few moments, as if her leg muscles were weak, but the sensation vanished and she regained her strength. \"We should probably get back.\"\n\n\"I agree.\" Quetzalli got up and struggled into her bra until Dana helped her out. Back in her dress, she tried to smooth down her hair and quickly gave up. \"Thank you, Dana. I learned so much from this.\"\n\n\"You and Death should have your own tv show,\" Dana muttered, and then picked up her bag. Once the drone was secured, the two of them began the long trek back to the house.\n\nUp above them, the clouds rumbled, but delivered no rain.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\n\"I thought the Underworld would have a bit more color.\" Mike looked over his shoulder at the gate. It was only twenty feet behind them, but the density of the trees was already making it difficult to see.\n\n\"Parts of it, maybe. From everything we've read, this is going to be a lot more like Purgatory. So, bland, colorless, very boring.\" Yuki put her hands on a nearby tree. \"Weird. It's not technically alive, but it has leaves on it. It's like it's frozen in time.\"\n\n\"Probably a good way to think of it. If you're supposed to spend an eternity here waiting for your final judgement, it would suck if someone had to come water the plants.\" Mike walked in between the trees, and looked up. The sky was gray and overcast, and there was no sign of the sun's position. \"Also, there isn't a breeze or anything. It just feels...off.\"\n\nYuki nodded, then looked over her shoulder. She pulled a card out of her sleeve and gave it a spin in her hand. The card vanished, transforming into a short sword.\n\n\"Something up?\" Mike asked.\n\n\"Nope. Just leaving breadcrumbs is all.\" Yuki walked back toward the gate and left slash marks on some of the trees. \"Follow those to get home.\"\n\n\"Got it. Though next time, maybe we can bring some ribbon. Not sure slashing up the local fauna will endear us to anybody.\"\n\nThey walked further into the trees, and a chill overtook him. He rubbed his arms, then stopped long enough to pull a light jacket out of his backpack. \"Are you warm enough?\" he asked Yuki.\n\nShe smirked. \"The cold never bothers me.\"\n\n\"Of course.\" He put his backpack back on. \"How far should we go? So far, it seems like more of the same.\"\n\nEverywhere he looked, it was just trees and rocks, and they took their time, with Yuki leaving marks on the trees as they passed.\n\n\"Should we have Daisy scout ahead?\" Yuki asked.\n\nMike shook his head. \"I don't want us getting separated at all. We know something is out here, and I don't want Daisy getting snatched up and disappearing forever. It's bad enough getting a banshee back from the faerie queen, but traveling all of Purgatory to find such a tiny thing? Take us forever.\"\n\nDaisy buzzed her wings in his ear, causing him to grin. They walked for about ten more minutes, then stopped when they reached a rock big enough for Mike to sit on.\n\n\"Tired already?\" Yuki leaned against a tree.\n\n\"No. Just need to think. There aren't any landmarks so far. There's just...nothing.\" Looking across the silent forest, he shook his head. \"I'm surprised we haven't even seen a wayward spirit, or at least something.\"\n\n\"This is what happens when you go somewhere outside of time and space.\" Yuki's tails twitched behind her and she turned her head. \"If you wanted to see something different, now's your chance.\"\n\n\"What?\" He followed her gaze and stood.\n\nA thick fog was rolling through the trees now, and he made it to Yuki just as it buried them. Visibility dropped to only a few feet, and he clung tightly to the kitsune, afraid that either of them might suddenly get sucked away.\n\nDark shadows milled about in the fog, and he felt hundreds of hands touch him as they drifted past. Though they lacked corporeal form, each touch sapped some of the heat from his body, and he shivered, then pulled the hood of his jacket up.\n\nThe fog thinned a bit, making every tree look like a distant shadow. The figures in the fog were almost imperceptible, except for out of the corner of his eye.\n\n\"Okay, that was unnerving.\" He stepped away from Yuki, but kept his hand on hers.\n\n\"Agreed.\" Yuki stuck her sword in the ground and pulled another card from her sleeve, then tossed it in the air. It turned into a small ball of fire, and hovered before them. \"I'll keep this on me, and you can use Daisy as a light. I think I might need both hands, if you don't mind.\"\n\n\"Oh, right. Sorry.\" He let go of her, and she picked her sword back up. \"Any idea what direction we should go?\"\n\nShe looked around, a frown on her face. \"Honestly? I'm almost thinking we should head back now. When it was just trees, we could see a threat coming. But this? We can come up with a better plan for navigating it, don't you agree?\"",
        "It was good advice, and Mike nodded. Yuki navigated the fog, sending the ball of fire ahead of them to light up the trees in the area. A few minutes passed before she found one with a fresh cut in its bark, and Mike let out the breath he had been holding. He had half expected the marks to disappear, and was glad to see that they hadn't.\n\n\"So how are you feeling about things?\" he asked as they moved through the fog.\n\nYuki shrugged. \"I honestly don't know. I've been throwing myself into research and art lately, but I've also been trying to make time for me. I've spent a lot of time talking with Naia at night, when the house is finally quiet. Abella too, sometimes. There's just a lot to go through, and it sucks not having the relationship with them that I used to. I feel like I have to hold back, that we aren't in that place yet, but I so desperately want to feel that level of closeness again.\"\n\n\"You don't think there's a way to fix that, do you? Like, undo the destroyed memories?\"\n\n\"No idea. Ratu and I have discussed it, she finds it a fascinating puzzle. But she's been so tied up in helping Dana undo her curse and studying this weird necklace that she found that she hasn't made any progress on the issue.\"\n\n\"Necklace? What neckl\u2014\" He put his arm out sideways, and Yuki bumped into him. However, his eyes were on the shadow that moved toward them through the fog. Unlike the shadows from earlier, this one moved with a confidence he recognized almost immediately. \n\n\"Mike Radley.\" The shadow stopped about ten feet away and chuckled. \"I feel like it's been a lifetime since we last spoke.\"\n\n\"Been too busy dodging my succubus, have you?\" Mike instinctively grabbed at his waist, going for a magical dagger that was now lost forever.\n\n\"Yes. She can be quite troublesome. But now you are in my world, and the advantage is mine.\"\n\n\"I don't think so,\" Yuki replied, holding up some of her tarot cards. She had them fanned out, and Mike was curious what was on them.\n\n\"Call off your pet, Mike Radley, I'm only here to warn you.\" It was odd seeing the shadow in three dimensions as the fog moved through him.\n\n\"Are you here to warn me about my world burning again?\" Mike shook his head. \"I need a spiritual spam filter for dicks like you.\"\n\n\"I am here to warn you.\" The shadow kept its distance, but walked around them. \"You see, I've given you plenty of warnings about your own future, warnings you have failed to heed. And I now find myself on the crux of a very interesting dilemma. You see, I\u2014\"\n\nAn icicle thicker than Mike's arm blew through the shadow, leaving a void in the fog.\n\n\"As I was saying,\" the shadow continued, \"I've come to believe that I'm only wasting my time trying to bargain with you.\"\n\n\"You're wasting both of our time,\" Mike replied.\n\n\"I have my own agenda, which isn't too far off from your own. To protect my home. To do what I think is best for it, even if it may be...unsavory.\" The shadow's features were solidifying now, and Mike could almost make out a hawkish face beneath a hood. \"It's occurred to me recently that there may be another method to achieving what I want, but I'm afraid it will be at your detriment.\"\n\n\"Much like this shitty deal you want me to make.\"\n\n\"A deal which I offer one last time. Oh, Mike Radley, you have no idea what you've been pulled into. For whatever reason, the threads of fate have converged on you, and there will be many who are hungry to cut them, to see those lines split and unravel. When you\u2014\"\n\n\"Taikutsu,\" Yuki groaned. \"This bastard really does prattle on and on, doesn't he.\"\n\n\"He really does. But seeing how I can't just chase him off, we may as well hear his deal so we can turn him down. Please continue.\" He waved his hand at the shadow.\n\nAfter a few tense seconds, the shadow spoke again, his voice strained. \"I have found another who is willing to make a deal with me, someone willing to do whatever it takes to gain power. With their strength, I would take from you what you could have given me willingly, and will ignore your piteous cries for help and mercy. I have prolonged this game long enough, and will continue to do so until I can win it.\"\n\nMIke frowned. The shadow had mentioned a game before, but he had no way to ask without being harassed.\n\n\"However,\" the shadow continued, \"I would far prefer a deal that is beneficial to us both. Give me what I want, and not only will I give you the power and knowledge to rescue your precious banshee, but I will also give you the strength to keep them safe until the end of your days, to protect and guide those you love most.\"\n\n\"Is this the same deal you offered Emily? You took something from her so she could protect the others? It didn't end well for her.\"\n\n\"She strayed from the path!\" The fog billowed around the stranger. \"She balked when confronted by greatness, and that is exactly what I am offering you! This is no longer about some spirit, some noble quest, or even love. This has always been about power, Mike Radley, and if you do not accept me this last and final time, then I will see to it that your world burns, and that you burn with it!\"\n\n\"And there it is. World will burn.\" Mike looked over at Yuki and saw that her hands were clenched tight, her eyes aglow with magic. \"My friend here has more up her sleeves than just ice, you know.\"\n\n\"Well?\" asked the shadow.\n\n\"You know I'm going to say no.\" He took a step toward the shadow. \"So that's that. Any business we have is done. So you can take your shitty attitude back to your broken up castle and sulk for all eternity while I get on with my day. You can also stop lurking behind my magic gate and watching my house. Oh, and whatever you have in here that likes to growl at people and scare them away from your town of the Damned? You forgot to feed it, because it obviously wandered off.\"\n\nThe shadow laughed. \"That creature is not one of mine. It's the guardian of this place, a being of immense anger and wrath determined to keep anyone from crossing over without permission.\"\n\nMike frowned. \"Well, we obviously have permission, because we haven't seen it.\"\n\n\"That's where you're wrong.\" The shadow backed into the fog, vanishing from their sight. \"I led it away so that you could get this far. Goodbye, Mike Radley.\"\n\nThe shadow was gone now, leaving behind nothing but an ominous silence. Mike scanned the fog, then looked over at Yuki. If the shadow had lured them this far out, then they had just fallen into a trap.\n\n\"Maybe we should start\u2014\"\n\nHe was interrupted by a low, full throated growl that rumbled his entire body. It was like standing next to the big speaker at a concert, and his stomach clenched itself in response.\n\nYuki held up her sword. She scanned the fog, her eyes searching.\n\n\"Wha\u2014\" Mike asked, but she put her free hand over his mouth and then pointed to her ear.\n\nHe heard it now. It was the rustling of leaves, and the faint sound of something large moving around them in the fog. He tried to see what it was and failed, but Yuki's ears had turned forward and she was moving her head as if tracking it, so he followed her gaze.\n\nA pair of fiery orbs appeared in the fog at head level, then vanished.\n\n\"What the fuck was that?\" he whispered. The orbs returned, then vanished once more.\n\n\"I don't know, but...\" Yuki was pushing him backward now, and when the orbs appeared, they were even closer this time. The thing in the fog sniffed again, and then something else sniffed in response. Another pair of orbs appeared and hovered above and behind the first.\n\nWhen a third pair of orbs appeared, Yuki pulled a tarot card out of her robes and threw it like a frisbee into the fog. A few moments passed, and then it exploded, showering the area with fire and sparks. Through the thick fog, Mike was able to make out a large figure with black fur and three massive heads. The creature stepped forward through the flames, and all three heads settled on the two of them.\n\n\"Oh, fuck me!\" Yukie swept her arm in a wide arc and a giant wall of ice appeared just as the middle head opened up its mouth and roared. A large stream of fire danced across the ice, melting holes in it before the gout disappeared.\n\nYuki was already busy tossing out a couple more cards. She grabbed Mike by the collar and pulled him behind a tree as the cards unfolded into human form and took off running in opposite directions. She sent her fireball after one of the figures, and the three-headed dog chased that one, its feet thudding heavily on the forest floor.\n\n\"Was that Cerberus?\" Mike whispered.\n\n\"No, it was fucking Micky Mouse, and this is the magical kingdom of Disney!\" When she looked at him, he saw that her eyes were wider than he had ever seen. \"Yes, it was Cerberus! We have to get back, now!\"\n\n\"Don't have to tell me twice,\" he muttered, and they began picking their way through the fog. Without the fireball, it was even harder to navigate the trees, but luckily they had gone in a relatively straight line, which meant they rarely left the path. As they moved, he heard howling in the distance, and Yuki flinched.\n\n\"He got that first one,\" she whispered, then kept going at a faster pace.\n\nAs they moved through the fog, he saw a dark figure keeping pace with them and pointed it out.\n\n\"That's the other one,\" she said. \"I don't know how it's tracking us, but if it gets close, that one will lead it away.\"\n\n\"How many of those do you have?\" he asked.\n\n\"Just that one.\" She looked over her shoulder at him. \"Maybe we should have awaited those extra decades after all.\"\n\n\"Not funny,\" he told her.\n\n\"And I'm not laughing. Cerberus can use Hellfire, and that shit will burn your actual soul. It's one thing to die and move on. It's another to spend an eternity with third degree burns.\"\n\n\"Seriously?\"\n\n\"That's what the legends say, and I have no desire to find out how true they are.\"\n\nShe continued hurrying forward, and he followed as best as he could. Every now and then, he would hear that loud sniffing sound somewhere behind them.\n\n\"It has to be able to smell us, right?\"\n\n\"Maybe.\" She showed him a tarot card that was pinched between her fingers. \"I've been scattering our scent, just in case.\"\n\n\"Let's just hope that thing doesn't notice what you did to its trees,\" he muttered.\n\nIn the fog, Cerberus marched around them, growling and sniffing. It was clear that it was becoming agitated about being unable to find its prey. At some point, he noticed a pair of red orbs in the distance, and when he pointed them out to Yuki, she sent her tarot figure toward them. There was a loud growl and a jet of Hellfire in the distance, but when he heard the Cerberus turn away and run, he let out a sigh of relief.\n\n\"That fog is doing us more help than harm, currently,\" he noted.\n\n\"We'll see.\" She tightened her grip on the sword. \"If it comes for us, I want you to run. You get that, right? You're the one who needs to make it, not me.\"\n\n\"Yuki, I\u2014\"\n\nShe grabbed his hand and pulled him forward, her pace accelerating. It was difficult to keep his feet under him, but they were moving as if by instinct now. Behind them, he heard a series of growls, roars, and more fire, and chanced a look back to see a dark shadow trying to navigate the trees behind them. Cerberus was large enough that the woods were keeping the beast from catching up, but only barely.\n\nWalls of ice were forming along their sides while they ran, climbing higher in height until the forest to the sides of them had disappeared. Yuki was zig zagging now, and Mike could hear the ice crunching shut behind them. He was going to ask what she was doing, but he could hear the stream of fire boiling away the frozen walls.\n\nUnder her breath, she was muttering a stream of words, and snowflakes were now falling around them. Between the snow and the fog, it was becoming hard to see, and the sounds of pursuit were fading away behind them.\n\nThat also meant they had lost the path they were on. Yuki stopped and turned around, her green eyes searching.\n\n'We lost it, but now we're lost, too.\" The ice walls were behind them now, and Mike could hear the Cerberus stomping through them, searching for its prey. \"Which way should we go?\"\n\n\"Um...\" Mike looked back, then scanned the fog. He took a deep breath and closed his eyes. His magic was rumbling around inside of him, warning him that danger was on its way, and he wondered if he could use that.\n\nHe took a step forward, then shifted left. The feeling intensified, so he stepped right, and he felt it diminish. For better or worse, this was the way they should go. \"C'mon,\" he whispered, then ran that direction.\n\nBehind them, the roar of the Cerberus intensified, then was followed by the sound of a tree being ripped free of the ground. Mike pumped his legs, his heart beating loudly in his chest as he surged forward. Yuki was already falling behind, and she almost tripped over a downed log that Mike jumped over without even noticing it.\n\n\"I didn't know you could run this fast,\" she said, then her hand disappeared from his. A bright red fox with three tails appeared on the ground in front of him, and the two of them sprinted through the forest, avoiding large rocks, downed trees, and even squeezing through a shattered boulder. Behind them, the Cerberus growled, and Mike grabbed Yuki by the tails and jumped to the left.\n\nA geyser of fire swept through the ground where she had been, and he slipped between a pair of trees that had grown too close together. He heard the Cerberus crash into it, and then made a mad dash toward a dark shape that appeared through the fog.\n\nOminous turrets appeared first, followed by the body of the house. The stone wall surrounding the back gate looked washed out, and was covered in dark moss. The back gate was shut, and when he crashed into it, the doors slammed open and he crashed onto the back lawn.\n\nYuki transformed back into a human, and threw herself at the gate. A tarot card vanished from her hand and a series of staves embedded themselves through the iron bars of the creaking gate, barring it shut.\n\nCerberus appeared through the gloom and growled at them, padding closer. Easily fifteen feet tall, the three-headed dog could easily lean over the wall and snap one of them up.\n\n\"Oh, you are totally not invited in here,\" Mike announced, then rolled out of sight when all three heads started barking at him. Behind the wall, he heard the low throaty growl of the Cerberus followed by the sound of padded feet going back into the forest.\n\n\"Shit, that was close,\" he said, wiping the sweat from his brow.\n\n\"Mike?\" Yuki's back was against the wall, and she was staring toward the house.\n\n\"What's up?\" He turned to look, and his jaw dropped.\n\nThe house was dark, as if it had been stained in shadows. It was smaller than normal, and he realized they were standing in the front yard, not the back. The stone lions were no longer there, and neither were any of the gardens. Instead, it was as if the house had reverted to its original form, the one he had seen on his very first day there.\n\n\"What the fuck?\" He stood and Yuki joined him. He realized that the sky was still overcast, and a large wall of fog was pressed against the outer perimeter of the wall, creating an odd hollow that extended up into the sky. \"What happened here?\"\n\n\"I have no idea.\" She looked out the gate. \"Cerberus is gone. Should we go inside?\"\n\n\"Unless you want to play tag with a three headed dog again, then yes.\" He walked toward the house, his heart falling. The front porch creaked under his feet, and he noticed that half of the porch swing had been taken off its chain. He walked over and hooked it back together and gave it a push.\n\nIt creaked ominously at them as they walked into the house together. The home's furniture was covered in large drop cloths, and there was a layer of dust on everything.\n\n\"It's like it was the first day I moved in,\" he said, then looked at Yuki. \"Like, a copy of the place from before I met Naia.\"\n\n\"Maybe it is the same place. A copy that swaps with the house when the current Caretaker dies, so that its secrets remain hidden. That would make sense, I guess.\" She walked to the stairs and looked up at the second floor. \"Don't know why, but this place gives me a bad feeling.\"\n\nMike looked up. The landing where his room was looked darker somehow, as if the light had been sucked out of it. \"Agreed. Let's take a peek out back, see if the fog goes all the way around. Maybe we can just go out the back and try to find our way home from there?\"\n\nYuki nodded, and followed him out the back door. Once they stepped outside, he saw that the back yard had shrunk back to its original shape and size. The wall of fog extended here as well, and he groaned.\n\nSitting on the edge of Naia's fountain was a figure in a simple gown. It looked like a woman, and she was hunched forward, her attention seemingly on the ground.\n\n\"Um...\" Mike looked at Yuki. The kitsune's eyes were narrow, and she was already clutching a tarot card in one hand.\n\n\"Let's do this,\" she muttered, then moved ahead of him. He realized that her sword was gone, and wondered if she dropped it in the fog. When they got close to the fountain, he saw that the figure had dark skin that was etched with intricate patterns that seemed to shift, though the figure herself had yet to move.\n\n\"Don't move,\" Yuki said, and the figure sat up straight, her hair tumbling down her shoulders. \"Turn around slowly so we can see you or I'll turn you into a block of ice.\"\n\nThe figure obeyed, and held her arms out as she turned. Clutched in one hand was a tattered paperback novel, and when she looked at them, Mike realized that her skin looked like the bark of a tree. Her dark eyes watched them from beneath a tangle of hair that looked like wilted roots, and her eyes widened in recognition.\n\n\"Yuki? Is that you?\" The woman dropped her book and stared in awe.\n\n\"Am...Amymone?\" Yuki lowered her hands. \"Is that really you?\"\n\nThe dryad's eyes welled up in tears and she ran across the yard and threw herself into Yuki's arms, then tore herself free. \"Wait, does this mean...did you die?\"\n\nYuki was crying now as well, and she wiped tears from her eyes. \"No, I'm not dead. I'm here with Mike, he's the new Caretaker. Mike, this is my friend, Amymone.\"\n\nAmymone looked at Mike, then back at Yuki. \"He's the new Caretaker? Really?\"\n\n\"He is.\"\n\n\"Hell, yeah!\" She pumped her fist in the air and then spun around, her arms outstretched. \"I've been so fucking bored in here! There's nobody to talk to and I've only had one thing to read this whole time.\" She threw herself at Mike and wrapped her arms around him. \"I assume you came here for me, right? I am so over this place, when do we leave?\"\n\nMike and Yuki looked at each other.\n\n\"Uh...\" Mike grimaced. \"Amymone, right? Yeah, we didn't know you were here. We just kind of stumbled on this place.\"\n\n\"Oh.\" The light in her eyes faded, and was followed by a large scowl. \"You didn't even know I was here? That means...you probably don't have my heart wood, do you?\"\n\nHe shook his head. \"I'm so sorry, I really am.\"\n\nAmymone let out a groan. The silence between them was deafening, and after a minute passed, Mike opened his mouth to say something when he heard the sound of someone tapping on a window.\n\nHe turned and looked up. It was his own bedroom window, and a woman with long, blonde curls disappeared behind the curtains. A low, mournful wail filled the air, and Yuki started breathing fast, her features going pale.\n\n\"Shit. Looks like you've caught Emily's attention as well. Good thing she's stuck in there, rancid bitch.\" Amymone shook her head and walked over to the fountain, her eyes on the distant wall of fog. When she sat down, she placed her chin on her fist and sighed. \"Being dead fucking sucks.\"\n\n<center>\ud83d\udc3a\ud83d\udc3a\ud83d\udc3a</center>\n\nThe ending scene of this chapter has been in my head for nearly a year now, you have no idea how good it was to finally write it down and share it!",
        "Thanks to my beta readers for all their help, this one definitely needed some polish before it landed here.\n\nI hope everyone is finding a rare moment of peace during these uncertain times (this was posted in summer of 2020, future historians). As always, I leave you with some final words that I try to live by:\n\nBe kind to yourselves and each other. Try to make a new friend. Enjoy sunset with a loved one. Until I see you again, wishing all my readers the very best!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "cerberus",
        "cum eating",
        "dragongirl",
        "kitsune",
        "monstergirl harem",
        "shadow man",
        "shocking sex scene",
        "story with a whole lot of plot",
        "traveling the underworld",
        "zombie"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-54"
}