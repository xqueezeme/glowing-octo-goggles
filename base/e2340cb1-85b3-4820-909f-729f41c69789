{
    "title": "Escort Neighbour Pt. 02",
    "pages": [
        "I meant the original Escort Neighbour story to be a \"one of\". It didn't matter to me what happened next. I would rather the reader be free to imagine many happy endings; however, I've had many people ask me for more and so I thought, why not? What happens next? How would a married man deal with a rich escort neighbour? Where would their relationship go? Could they have a future that was sustainable and realistic? So here is Part Two. Please enjoy the continuing story or Bill and Jennifer. You need to read Part One, first. \n\nOh, one last thing: if you don't like ass-play then don't read this and rate me one star like some other reader did with another one of my stories. Move on. \n\n***** \n\nThat night, after having sex with Jennifer in my fort in the backyard, I had dinner with my wife Nancy. I had made my homemade ravioli, filled with crab, and covered with a lovely B\u00e9arnaise sauce. Sadly, we had a cheap twenty dollar Pinot Grigio to wash it down. But it was a lovely meal coupled with a fresh salad. \n\nIn the middle of dinner, I found myself shaking and excused myself and went to the bathroom. Guilt wracked me like no other time when I had cheated on my wife. It surprised me with the intensity and I spent time just staring at my face in the mirror looking for signs of the guilt that was consuming me. My normal face stared back, but I was certain my eyes were a little wider than normal. \n\nJennifer had gone home soon after we had fooled around. I had gone inside extremely satisfied and showered. I had a glass of scotch and went outside to have a smoke. I had looked up at Jennifer's window and found her smiling down at me, chest bared, and her gorgeous breasts pressed up against the window glass. I had smiled and waved and felt warmth course through me while staring at her beautiful, tooth-filled smile. She waved and disappeared inside and then the guilt hit me again. \n\nI shrugged it off and sat confused sipping my scotch. The only time I had ever felt guilt like this was after the first time I had cheated on my wife with a service provider in New Zealand. This time it was different. It was far more intense and weakened me physically. \n\nNow in my bathroom looking at myself I tried to find a way past it. I didn't understand why it was happening. Thoughts of Jennifer kept flooding my mind. I could see her again, lying back with her legs spread and holding her pussy lips open for me to see all of her. She was so hot and so beautiful. My cock surged in my pants. I remembered the first feel of her breasts in my hands. So soft, so warm, and with her nipples so responsive and hard against my palms. \n\nI remembered how wet she was. It had been so long since I had felt a woman so wet for me. To have that effect on a woman is empowering. And I remembered her taste. So sweet, so fragrant. My mouth watered and I needed to taste her again. I needed to plunge my cock back inside her and see her eyes light up in joy. I needed to see those green, green eyes boring into mine from a gorgeous face framed in luxurious red hair. \n\nMy cock hurt with strain. I pulled it out and stroked it furiously thinking of Jennifer. I jerked myself for only a minute before my cum surged out and splashed onto the bathroom counter. I sucked in gulps of air and squeezed the last drops of my cum free. I looked into the mirror and saw my cheeks flushed red. What the fuck is wrong with me? I questioned myself. I never cum that fast. \n\nI could only cum once a day these days. Age has a way of slowly a man down. Sexual desire was always there hovering, but my ability to pleasure myself had dwindled. And now today I've cum three times. She has such an effect on me. \n\nBut why the guilt? What the fuck is up with that? \n\nI calmed down and cleaned up using a wet wipe on my cock. I washed my hands and headed back to the dinner table. Nancy looked up briefly and then returned to reading an eBook on her iPad. I sat and we finished our meal in silence. When we were done, I said I would clean up and Nancy kissed my cheek and said she was heading to bed. \n\nShe always went to bed early. I would go to bed around midnight to find her snoring loudly. I would lay on my back and fatigue took me and I would roll over onto my stomach and think dirty thoughts about women until sleep would take me. Nancy always tossed and turned all night and she would rise early and be gone for work before I staggered out of bed. Usually exhausted. \n\nShe had gone to a sleep lab once. They diagnosed her with sleep apnoea. She now had a CPAP but rarely used it. Continued exhaustion had sent me to the same sleep lab. I still remember the specialist talking to me the next morning. \n\n\"The problem, sir, isn't you. Your problem is your wife.\" \n\nNancy didn't find it funny. I did, because the sentence had so many meanings to me. \n\nI should mention I travel sometimes for book interviews. When I am away from Nancy, my sleep is fantastic. I can get better rest with less sleep in a hotel room than I can lying next to my wife. That's my life and I'm used to it. Kind of. It sucks having no sleep and no sex. It's frustrating. \n\nThe truth is: my frustrations with my life pours out of me into my books. The erotic novels are raw and emotional and filled with depraved sex. It's what I need and want. I've imagined all sorts of sex and some of it surprises me. For example, for a while, I was certain I was bi-sexual. I had a long period of craving cock that surprised me greatly. Then I realised I didn't crave cock so much as the liberty of having crazy sex and there being a guy there. My lust is so great that it just factored in. Porn probably is much to blame. I watch cocks plunge into holes and spew cum all the time. The good news is when I'm not pleasuring myself, and when I force myself to think of sex with a man, I feel quite repulsed. But, when in the throes of wild imagined sex with women - usually more than one at a time - throwing a cock into the mix doesn't faze me at all. Strange, isn't it? \n\nI'm not sure what it means, but I've never had to worry about it. I will never have the opportunity to test myself and my limits. Life rumbles along and my porn, my writing, and the occasional tryst with a service provider (SP) or massage attendant (MA) keeps me happy and sane. \n\nNancy disappeared upstairs and I cleaned up supper and went outside for a smoke standing beside the fence. In a moment, I heard Jennifer's patio door open and saw her come out in a silk bathrobe and saunter over to the fence on her side. The robe hugged her figure and her nipples pressed against the material. My cock twitched and I felt a sexual hunger rise within me. She lit a smoke and smiled at me blowing her smoke past those sensuous lips of hers. My guilt fled and I felt at peace at once. I found myself smiling back and wanting to hug her hard. \n\n\"Hey, sexy,\" she said. I could hear a hunger in her voice. \"How's your night?\" \n\n\"Hey, you,\" I replied. \"Pretty good. Been thinking about you all night.\" \n\nJennifer smiled wider. \"God, me too. I just finished banging my pussy with my favourite vibrator thinking and wishing it was your cock.\" \n\nI blinked at her. Even in my erotic novels I never had the women speak like that. I didn't know how to respond. \n\n\"What? I masturbate all the time, Bill.\" \n\n\"You do?\" \n\nJennifer took a drag and eyed me. \"Yeah. You don't think women masturbate?\" \n\n\"No, not really. Not like men do.\" \n\nJennifer chuckled. \"That's probably true. Well, I do. I spend so much time pleasuring men and rarely do they pleasure me. It gets frustrating, you know? Imagine yourself fingering and eating gorgeous women all day and never having your cock touched or sucked or fucked. It would drive you to masturbate. I usually end my days stuffing a vibrator in my pussy for release. It helps.\" \n\n\"I never really thought about it.\" \n\n\"Worse is when the client demands to get you off. All men need that. They need to bring a woman to orgasm. I think it comes from a man's own desires and experiences. Men need to cum. To release. They think women need that as well. They're not wrong but a woman can cum multiple times. It's rare a man can get me to cum in the right way.\" \n\nThat sounded horrible to me and said so. \n\n\"It depends on the guy. The right guy can get me off in a heartbeat.\" She blew out smoke and gazed at me as if waiting for something. \n\nI thought over what she had said. It sounded so very sad to me. For a man sex can just be physical. It is about the release. To ejaculate. But the best sex is with a willing partner. Getting each other off. It's physical, but a large part is emotional. The best sex is with someone you love. It's a validation. Proof. I took a drag and Jennifer snorted. \n\n\"What?\" I asked her. \n\n\"I was waiting for you to say something. To ask me how it was for me.\" \n\nI raised an eyebrow. \"You mean with us? Today? You loved it.\" \n\nJennifer's eyes opened wide and she coughed out smoke. \"Wow. So sure of yourself!\" \n\nI frowned at her. \"You did. Just as much as I did.\" \n\nJennifer eyed me for a moment and then nodded, \"Yeah, I did. I truly did. That was the best sex I've had in a very, very long time, Bill. I'm not just saying that.\" \n\nI nodded. \"Me too. Thanks.\" \n\n\"I want you to fuck me right now, Bill.\" \n\nI laughed. \"Nope. Not gonna happen.\" \n\nJennifer looked hurt. \"Please?\" \n\n\"I'm sorry. I can't. Nancy is right up there,\" I pointed at the second story of my house for emphasis. \"And honestly. I just jerked off and I'm spent. I'm not young like you.\" \n\nJennifer looked surprised. \"You came twice with me.\" \n\n\"Yeah, and now a third time in my bathroom. That's a lot for me.\" \n\nJennifer nodded. \"I feel sorry for men, being limited that way. So, in the bathroom: were you thinking of me?\" \n\nI nodded and butted out my cigarette. \"Fuck yeah.\" \n\n\"Good. Now kiss me goodnight.\" \n\nI leaned over the fence and Jennifer kissed me long and deep. Her tongue darted into my mouth with hunger. She danced her tongue over mine and over my teeth. She sucked my tongue into her mouth and I moaned. She broke the kiss but kept her mouth close to mine and stared into my eyes. \"I bet I could make you cum a fourth time...\" \n\nI kissed her quickly. \"I think so, too, but I need to regenerate.\" \n\n\"Mmm,\" she murmured. \"More lip-gloss for me. Okay, I'll wait. You rocked my world, Bill. I'm so glad you're my neighbour.\" \n\n\"Me too,\" I licked her lips and she purred. \"So what happens next?\" \n\n\"Between us?\" \n\nI nodded with a tiny motion of my head. \n\n\"One day at a time. I have a full day tomorrow. Can I see you after?\" \n\nMy mind reeled. A large part of me had managed to ignore the fact that my neighboured fucked men for money. She wasn't mine, not really. She was a sexual being and I was only one of many. I didn't know how to process it. \n\nI hadn't answered her and she pulled her head back a little and looked into my eyes. \"You okay? You know what I do, Bill.\" \n\nI nodded and kissed her. \"I do. It's just a little much to process right now. Give me time.\" \n\nJennifer bit her lower lip. It was such a clich\u00e9 move, but it looked so natural and so cute. I felt my emotions rise within me. She was so beautiful. \"Okay. We'll talk tomorrow. Okay?\" \n\n\"You bet.\" \n\nJennifer smiled and kissed me and then pulled back from the fence and took a few steps backwards. She opened her kimono wide and revealed her gorgeous body to me. Her nipples were hard and rising up from her breasts. I could see the lips of her pussy and my mouth watered. \n\n\"My pussy is so fucking wet for you Bill. Think on that lying in bed tonight, mister.\" She winked, snapped her robe shut and sauntered into her house, closing her patio door behind her. \n\n* * * \n\nThe truth was I was so exhausted I passed out when my head hit my pillow. In the morning, I woke later than normal and staggered downstairs for a coffee before heading outside for a smoke. It was just before ten and the day was gorgeous. I heard a car drive past outside and in moments I heard Jennifer's front door open and close. I looked up at her bedroom window but the drapes were closed. \n\nI felt a twinge of jealousy and squashed it. \n\nAfter a time, I went inside and showered. I made a fresh cup of coffee with my Keurig, went outside and lounged in my fort. My laptop lay closed and I had no interest in writing today. I ended up smoking too much and drinking too much coffee waiting for something. I didn't know what I was waiting for. I imagined what Jennifer was doing and wished it was me with her. \n\nClose to noon I heard Jennifer's front door open and close and a moment later a black BMW sped off down the street past my house. I waited and thirty minutes later Jennifer came through my house and out onto my deck. She had walked through my house like it was hers and I felt good about it. I liked her coming and going from my house like it was hers. I could get used to it. \n\nShe was freshly showered, her hair wet, and she was wearing simple track clothes. She sat down next to me and stole a cigarette from my pack and lit up. She blew out and watched me. She looked sexy in anything she wore; I looked away and sipped my coffee. \n\n\"Out with it,\" she said. \n\n\"Out with what?\" \n\n\"You know. Just say it. Rip the band aid off.\" \n\nI glared at her. \n\n\"Want to know what he did?\" \n\nI said nothing. \n\nShe placed a hand on my thigh and rubbed it. \"He's one of my favourites, Bill. He tries to please me and usually does. Today he tongued my asshole like a starved man. I really like that. I mean his tongue was right inside my asshole. When he thumbed my clit, I came. Honestly, I wished it was you, but it wasn't, obviously. We know each other pretty well. I know what makes him tick. He gets me off right away and then it's all about him. \n\n\"We don't talk much. Just two hours of sex. His thing is being ass fucked with a large strap-on. It's pretty hot. I love fucking a man's ass. Especially when they hate it at first. He does. Hate it, I mean. It demeans him. Debases him. He needs that. Then he gets into it. I fuck him really hard, Bill. He likes being on his back when I do it. He strokes himself eventually. He has a large cock, but it's strangely red all over with a large swollen head. But a head so soft, like velvet. I love feeling it filling my throat. Jamming itself in, cutting off my air. But it's rare he lets me suck him off. \n\n\"I fuck his ass hard but he never comes from that. To make him cum, I berate him. Call him all sorts of names. Tell him he's useless. With a shitty small dick. It's not though. It's fucking huge. Thank God, he never fucks me with it. Then I squeeze his scrotum right about the balls. I squeeze hard and yank them down. He cums every time like that. A shitload. A massive load more than any other client I have. It's shocking. The first time he came I thought something was wrong.\" She took a drag of her cigarette and laughed a little. \n\nShe butted it out and made a tsk sound. \"Then he cries and I hold him tight and rock him and tell him how wonderful he really is. He suckles me like a child. I clean him up and he heads back to his office. He runs a multimillion-dollar corporation. He's always strong and always in control. With me, he gets to be something else. Not in control. With no power. Men don't want what they already have, you see.\" \n\nI was staring at the outdoor carpet on my deck tracing the patterns with my eyes. I didn't know what to say. I had never had a conversation like this before. I was angry at her and fascinated at the same time. I didn't want to hear the details, but I wanted to hear more. \n\n\"Look at me, Bill.\" \n\nI did. Her eyes were a little red. She looked upset and I knew I was the cause. \n\n\"I fuck men for a living. You need to get past that.\" \n\nI nodded. \n\n\"I have another client in a couple of hours. I need to get ready for her. She wears me out and I need to prep myself. She likes me clean as a whistle inside. She has this thing for fucking my ass with a dildo and then sucking it off. She makes me suck it, too. And fuck her ass. Fucking hot sex, actually. I adore women.\" \n\nI stared at her. My cock was hard, I realised. It had been the whole time she had been describing her sex with her first client. Hearing her having sex with a woman stirred something male within me. Jennifer noticed. \n\n\"Want me to suck you off, Bill?\" \n\nI shook my head and frowned. I didn't know what she was doing. But she was making me angry. She was pushing me. \n\n\"Okay. Talk to you later.\" \n\nJennifer rose and disappeared into my house. \n\nA little while later I realised that my anger had replaced my jealousy. \n\n* * * \n\nAround one in the afternoon I watched a small woman drive past in a Cadillac SUV. I saw her come up the walkway and marvelled at her tiny body and her lack of tits. She disappeared into Jennifer's house and a little while later I heard a shrill voice cry out in pleasure with the word 'Yes!'. To have heard it so clearly in my backyard it had to have been very loud inside. \n\nMy cock grew stiff and I imagined Jennifer getting pleasured by the small woman. I grabbed my cock through my pants and squeezed it. I looked up and noticed Jennifer's bedroom window was open a crack. I knew at once it was intentional. Jennifer was punishing me. \n\nFor being an asshole, I realised. \n\nI sat in my fort and listened to the little woman being pleasured. She was shrill and loud and I heard foul language that had my ears burning. I opened my laptop and copied a few choice phrases for future use. \n\nMy cock hurt. I was so completely horny and wanted nothing more than to run upstairs to Jennifer's bedroom, burst in, and fuck anything in there. I smoked and waited. After an hour, the woman left. Soon after my patio door opened, startling me. Standing there was Jennifer. She looked flushed. She came over and stood over me looking down. \n\n\"Take it out,\" she ordered. \n\nI undid my belt and pulled my jeans and then my underwear down and sat on the sectional. My cock was standing almost straight up. Jennifer shrugged off her sweatpants. Her pussy glistened with lube and I smelled cherries. \n\nShe wasted no time. She pulled off her t-shirt, straddled me and then moved up on my lap. She fumbled for my cock and found it and then dropped herself onto me. I plunged deep inside her and knew at once it was not her pussy. I gasped. \n\n\"Fuck my ass, Bill,\" she moaned and started driving me in and out of her ass. \n\nI lasted a minute. I ejaculated cum into her rectum with a hard grunt, relishing the sweet release. Jennifer came, too, crying out. Her anus squeezed me hard. She lay on me and I felt her sobbing. I held her and my cock spasmed inside her. The last time I had fucked a woman in the ass was easily over six years ago. It had never been like this. So raw, so amazing. \n\nI didn't know why she was crying and I held her rubbing her back and ass cheeks. Eventually she stirred and pushed her hands on my chest to lean back. She looked down at me with red-rimmed eyes. She sniffed and kissed me gently. I was still hard inside her and loved the feeling of being so deeply inside her. Especially in her ass. I felt like I had been granted a special pass. I could feel her pussy hot and wet on my pelvis bone. Being in her ass lined us up differently and I liked the change. \n\n\"Why were you crying?\" I asked her. \n\n\"It was just so wonderful,\" she smiled. \"Seriously. I need this, Bill. You're what's missing in my life.\" \n\n\"What's that?\" \n\nShe glowered at me and then squeezed her anus around my cock. \"This. Intimacy.\" \n\nHer response resonated within me. I needed this as well. Suddenly my guilt came flooding back. Jennifer noticed my expression. \n\n\"What is it?\" \n\n\"I'm feeling guilty,\" I murmured. \"I don't know why.\" \n\nShe smiled. \"Because you need this, too, Bill.\" ",
        "I knew that wasn't it, not entirely. Something else was bothering me. I shook my head. \"I do, but it's something else, Jennifer.\" \n\nShe kissed me and slowly rode my cock in her ass. \"Tell me when you figure it out...\" \n\nWe slowly fucked for a few minutes until my hunger wanted something harder. I stood up holding her ass cheeks in my hands. I wasn't sure I could lift her but my passion gave me strength. I pulled out my cock, turned, and threw her onto the sectional. She bounced with a laughing shriek. \n\nI flipped her over onto her hands and knees and stood behind her. She put her shoulders to the cushion, looked back at me, and reached back and spread her ass-cheeks for me. I took a moment to admire her swollen pussy and her gaping asshole before driving my cock back into her ass. She cried out and pushed back at me. My balls pressed up against her pussy and I felt her heat. I grasped her hips and started thrusting hard. I would pull out until I could see the head of my cock start to emerge from her ass and then drive it all the way back in until my balls slapped her pussy. I watched my cock disappear and reappear in her ass with long hard strokes with a steady rhythm. Her ass was wonderfully lubed and I felt no resistance. Just the tight ring of her asshole and the smooth insides of her rectum. It's what I needed, and I could see she did too. She let go of her ass cheek and slipped a hand between her legs and circled her clit furiously. \n\nHaving recently cum I lasted a long time. I leaned over her back and grabbed her tits and fumbled for her nipples. I found them and squeezed them hard and twisted them. She pushed back harder against my thrusts. She came a couple of times, legs shaking, but kept pushing back on me, never stopping her demand for deep penetration. \n\nWords flew from her mouth. Vile words that excited me. I could feel my orgasm approaching. My cock hardened in anticipation and I felt my cum rise. My world reduced to the feeling in my cock. I leaned back and watched my cock ploughing into her anus. My previous cum and lube was built up around the base of my cock and around her asshole. This was dirty. It looked dirty. And I loved it. She was giving me her most sacred of places. \n\n\"I want you to cum in my mouth, Bill...\" she gasped. \n\n\"Why?\" \n\n\"What do you mean why? Just do it.\" \n\nI struggled to form words around my pleasure. \"Seriously?\" \n\n\"Oh my god, yes. I love the taste of cum. I need to taste you.\" \n\nHer words hurried my orgasm. I couldn't find the words to warn her but she sensed it. She pulled herself off my cock and started to turn around as quickly as she could. I grabbed my bobbing cock and squeezed the base in a vain attempt to stop the flow, but it was too late. I was too far gone. My cum shot hard into the air. The first rope landed on her left shoulder. She continued to position herself, her mouth open wide, but my second rope landed on the top of her head in her hair. She grabbed my cock frantically, wrapping her hand around mine, and drove my cock into her mouth. My third rope was weak but loved the warmth of her mouth. I stared down at her, lost in the bliss of my orgasm. She looked so beautiful with her mouth around my cock. My dirty cock, I realised and groaned as she sucked hard on my cock, trying to draw out more cum. \n\nShe made a disappointed noise and popped my cock out of her mouth. She stared at it and then licked the head when a small drop of cum appeared. She sucked me gently as my orgasm faded. I let go of my cock and she stroked it as she sucked. It was a good feeling with my cum and her lube making the strokes slick. I could see she wanted it in her mouth. She loved my cock and I felt all the stronger for the realisation. \n\nShe kept sucking me for a long time. I asked her to stop, but she shook her head and continued to love my cock with her mouth. I watched her and my legs shook. Her eyes were closed and she slowly bobbed her head and mouth over my cock and stroked the base with her hand. I watched my cum slide slowly down her hair and the cum on her shoulder run down to land on her left breast. \n\n\"Jennifer. That feels wonderful, but you can stop now.\" \n\nShe made a negative noise and kept sucking. \n\n\"I need to sit down. My legs are shaking.\" \n\nShe never removed my cock from my mouth but moved me around and pushed me down onto the sectional. I lay back, sighing with relief now that I could sit, and watched her continue to suck my cock. I was still hard but knew coming again would be hours away. But it still felt wonderful and I now didn't want her to stop. \n\nShe kept my cock in her mouth and climbed up beside me on the sectional on all fours. I admired her strong back and her beautiful female form. Her breasts hung and swayed erotically. Her narrow waist spread out to her gorgeous hips and ass. I admired the split of her ass. I gently stroked her back and she made appreciative noises. I continued to caress her back as she sucked me. I didn't know what she was doing, but I wasn't going to complain. This lovely woman was worshipping my cock. I didn't ask for it but she was offering it and I knew it was because she wanted it. It wasn't deep sucking, but it was warm, wet and hungry. She gently stroked my balls and made happy noises. \n\nI ran my hand over her ass and found her pussy by leaning over a little. She was sopping wet. Literally. I had never felt a woman so wet before. She was actually dripping. I suddenly felt the approach of another orgasm and I gasped in surprise. At my age this was impossible. This whole experience was surreal. My mind absorbed everything that was happening. She had been sucking my dick for at least a half-hour since I had last cum. I was sitting in my backyard, after recently having fucked the ass of this wonderful woman and was now having my cock sucked because that was what she wanted and craved. \n\nMy guilt hit me again and this time I recognised it for what it was. This woman meant more to me than my wife. During all the years of cheating I had never doubted my love for my wife. The women I cheated with had meant little more to me than a release. I recognised that with Jennifer it was something more and I felt the guilt of it. I was emotionally attached to her. \n\nJennifer lifted her head from my cock and continued to stroke the base. \"I'm not going to stop, Bill. Cum if you can, but I need this.\" Without waiting for a reply she went back to sucking. I groaned. \n\nHer free hand was on my balls and gently stroking them with a light touch that sent shivers through me. She reached a little lower and stroked my taint and I groaned again. Encouraged she pulled on my left leg at the thigh and I spread my legs a little. She sucked a little harder and I felt the finger of her hand slide down my taint and touch my asshole ever so lightly. \n\nI came. \n\nIt actually kind of hurt. I felt my insides clench hard to force cum from my body and it hurt. But the orgasm was powerful. I cried out and pushed my cock up into Jennifer's mouth. She sucked hard and accepted all my cum. It wasn't a lot, but the orgasm was hard and long. I heard a ringing in my ears. She never let go of my cock with her mouth and I ejaculated whatever I had left into her eager mouth. \n\nMy head spun and I felt light-headed. I could feel Jennifer's jaw move as she swallowed. She kept sucking gently until my orgasm faded into a blissful memory. We stayed that way for another long time. She gently sucked my cock, but I had nothing left and my cock gave up the ghost and started shrinking despite her administrations. It shrank in her mouth and then she released it. \n\nShe climbed up into my lap, with her legs outside mine, and pressed her pussy against my cock and then lay on me and wrapped her arms around my neck. She buried her face in my shoulder and then lay still. I held her tight and then stroked her back with both hands, running them across her ass cheeks and up over her shoulders and neck. She murmured something that I didn't hear. I caressed her for a long time and then heard a strange noise come from her. \n\nIt took me a moment, but I realised she was asleep and snoring. She was limp in my arms and I held her and didn't want to let go. I stilled my hands. I felt so close to her in that moment. \n\nI let her sleep for a half hour and then grew worried about the time. My wife would be home soon. Thinking about her had me thinking about my feelings of guilt. I was surprised to find it gone. I would worry about it later. For now, I had to get Jennifer home and clean up. \n\nI kissed her neck and gave her a little shake. She was sound asleep and only nestled closer to me. I loved the feel of her in my arms. She fit perfectly. She was as limp as only a sleeping person could be and her full weight was on me. It felt right. I could stay like this forever. I could feel her breasts pressed up against me, her breathing pulsing them so gently. My shoulder felt a little wet where her mouth was and I suppressed a chuckle when I realised she had probably drooled on me. \n\nI could smell our sex. We reeked of it and it smelt wonderful. We made it and we owned it. I felt my cock rise a fraction. This woman had such a wonderful effect on me. I never wanted to stop having sex with her. She was my beautiful escort neighbour. \n\n* * * \n\nLater that evening I was outside in my fort having a glass of red wine and smoking a little pot. My mind kept going back to the sex Jennifer and I had. It was memorable, locked solid in my memories. Every little action I could replay in my mind. But mostly my mind went back to holding Jennifer in my arms as she slept against me. \n\nWhen she had woken, she had been embarrassed. I had kissed her passionately despite the drool and she returned the kiss with equal passion. She had me examine her asshole at her insistence. She wanted to make sure she wasn't injured. She called it a vector. I gave her the all clear, and my administrations soon turned into me eating her out until she came hard on my mouth. \n\nShe kissed me goodbye, dressed and went home. I went inside and washed up, loving the feeling of hot water cascading down my face and body. I dressed in loose clothing and lounged around the house until it was time to prepare supper. \n\nAfter supper my wife went to the TV room and got lost in her reality shows and I found myself outside with a glass of red wine. A motion caught my eye and I looked up at Jennifer's bedroom window. She was looking down at me and I could see her bright smile. She waved and disappeared inside. \n\nI heard her patio door open and she appeared and lit a smoke by the fence. She had a glass of wine and I joined her. I handed her my vape and she took a deep hit of my pot and handed it back. I smiled at her and she smiled back at me. \n\n\"Where's Nancy?\" she asked. \n\n\"Inside watching TV.\" \n\nShe nodded and sipped her wine. \"That was amazing today.\" \n\n\"It was.\" \n\nShe looked up at me and I saw a little hesitancy in her face. \"My favourite part was falling asleep on top of you. That was the best sleep I've had in years.\" \n\n\"I enjoyed it. We kind of fit together, you know?\" \n\nHer face lit up and she nodded. \"We do. It's nice.\" \n\nI looked around the yard for a moment before saying anything else. \"I could learn to love that.\" \n\nJennifer looked startled and then looked away. \n\n\"Sorry, but it's true.\" \n\n\"I know. I feel the same way.\" \n\nWe stood in silence smoking and drinking our wine. \n\nJennifer stirred and looked back at her house. \"I should go in. I have another client tomorrow. I need to get ready for him and get a good night's sleep.\" \n\n\"Who is it this time?\" \n\nJennifer shot me a look I couldn't fathom. \"You wouldn't know him. A long-time client. He's flying in tonight just for me. We'll fuck and then he'll take me out on the town. He likes to pretend I'm his wife.\" \n\n\"I see.\" \n\nJennifer stared at me for a long moment. \"I'm an escort, Bill. It's what I do. I fuck men for a living. A good living.\" \n\n\"I know.\" \n\n\"What we have between us is different. I need that, Bill.\" \n\nI looked at her. She seemed upset. \"I do, too, Jennifer. I'm okay with it. I am. It's just a lot to process. I'm married. You're an escort. But I need this too. Is that wrong?\" \n\nJennifer smiled and seemed to relax. \"No, it's not wrong.\" \n\nShe stepped closer to the fence. I glanced toward my house to make sure Nancy was out of sight and leaned over and kissed her. She reached up and cupped my face and pressed her lips firmly against mine. \n\n\"Night, Bill. Thanks for today. You made me feel like a woman today.\" \n\n\"I did?\" \n\n\"Yeah. It's hard to explain. With my clients its business. With you, it's something else. I dunno what yet, but I need it.\" \n\n\"Good. Don't stop.\" \n\nShe grinned. \"I won't.\" She turned and started walking toward her patio door, then she stopped and looked back. \"Hey, do you and Nancy want to come over to dinner two days from now? I owe you one.\" \n\nI nodded. \"Sure, that would be nice.\" \n\n\"I don't cook. It'll be catered.\" \n\nI raised an eyebrow. \"Really?\" \n\n\"Yeah. I'm a modern woman. Take out is the bomb, but with my money I get the best. Don't bring anything. I have a wine cellar that is pretty amazing and it needs to be drunk.\" \n\n\"I'll tell Nancy. Night, hon.\" \n\nJennifer's eyes went a little wide and I realised I had just called her honey. She grinned. \"Night sweetheart.\" She skipped into her house, gave me a little wave of her hand, shook her ass at me, and disappeared inside. \n\n* * * \n\nNancy and I showed up at Jennifer's shortly after seven. I had watched a catering truck show up and haul in a bunch of chaffing dishes and crates. In moments they left, and I called Nancy to let her know we should head over. Jennifer met us at the door wearing jeans and a lovely floral blouse. I couldn't help but admire her looks again. Every time I saw her she took my breath away. She winked at me when Nancy wasn't looking. \n\nWhen we entered her home, I realised this was the first time I had seen her house from the inside since she had moved in. It looked normal, which surprised me for some reason. I think a part of me was expecting a boudoir. Instead, it looked normal with a distinctive female touch. Her furniture was exquisite. The pictures on her walls were original oil paintings. Her wealth was there to see if you knew what you were looking at. \n\nShe gave us a quick tour but avoided her bedroom and the basement. Her taste changed from room to room. Each room looked like an interior designer had been in charge. Jennifer assured Nancy it was all her and Nancy was impressed. I chuckled and then realised that Nancy would soon be looking to get Jennifer to assess our house and make changes. My bank account cringed. \n\nWe could smell the food the caterers had brought in. I smelled rich meat and roasted vegetables. Jennifer declared she was starving and ushered us into her dining room. The large table was covered in chaffing dishes. Three places had been set out like a fine restaurant. We sat at one end of the table, with Jennifer at the head, and Nancy and I sitting across from each other. I looked to my right at Jennifer and she smiled at us. \n\n\"Okay, I admit this is the first time I have ever hosted a dinner at my place. So I have no idea what to do other than say, just dig in and enjoy the food!\" \n\nNancy laughed and stood to open a chaffing dish. The steam cleared to reveal a roast beef of some kind. Jennifer said it was chateaubriand au jus. My mouth started to water. Nancy opened the other dishes and revealed roasted potatoes, asparagus, mint peas, buttery rolls, and a roast vegetable medley. Nancy insisted she serve us, and she dished out food onto our plates. \n\nJennifer poured the wine from a decanter and then raised her glass. \"A toast. To great neighbours. And the start of a wonderful relationship.\" \n\nI caught the meaning and felt heat rush to my cheeks. We clinked glasses and sipped our wine. My eyebrows rose and Jennifer laughed at me. She had been waiting for my reaction. She reached behind her and produced a thin document and handed it to me. \"My wines. I had them appraised this morning. Take a look.\" \n\nI looked at the document. It was a professionally done by some firm I didn't recognise. I opened the cover and saw an itemised list of all of Jennifer's wines. They were detailed by country, type, and year and with an estimated value. I flipped to the last page and saw the total value and whistled. \n\n\"What is it, hon?\" asked my wife. \n\n\"A summary of Jennifer's wines. Its impressive. Total value is twenty-five thousand.\" \n\n\"Holy shit!\" exclaimed my wife and then covered her mouth in shock. \"I'm so sorry. Such language!\" \n\nJennifer laughed. \"After Bill told me how much my wines were I thought I should have them evaluated and added to my insurance. Tonight we are having a Domaine du P\u00e9gau, Cuv\u00e9e da Capo 1998 from Chateauneuf du Pape in the Rhone region. I like it. Tastes yummy. What do you think?\" \n\nMy wife sipped hers again. \"It's amazing. Truly amazing.\" \n\nJennifer smiled. \"Let's eat.\" \n\nAnd we did. There was enough food for eight people, but we did our best. It was an amazing meal. It was filled with laughter and Nancy was quaffing her wine like water. Jennifer kept up a dialogue like a pro and then I realised she was. As an escort she knew how to entertain people and get them talking. I admired her skills. She glanced at me often and once I felt her squeeze my knee under the table. \n\nThe night passed all too quickly. My cheeks hurt from laughing and the wines had my head buzzing wonderfully. We retired to her living room and when I offered to clean up she laughed and said the caterer would take care of it in the morning. \n\nWhen Nancy started nodding off, I told her we should head home. We stopped at the main door and chatted a bit. Nancy was pretty loaded and Jennifer made her promise to drink lots of water. As we were leaving Jennifer stopped us. \n\n\"Bill, did you want to see my cellar?\" \n\nI looked at Nancy and she made a dismissive motion. \"You know you do. Get me home and come back, dear,\" she said. \n\n\"Okay, yeah Jennifer, I would love to.\" \n\n\"Great, hurry back.\" \n\nI got Nancy home, helped her undress, forced her to drink a couple of large glasses of water with an aspirin and tucked her into bed. I was trying not to rush but I couldn't wait to get back to Jennifer's. \n\nIt seemed to take forever, but soon I was back at Jennifer's. She met me at the door, pulled me inside, slammed the door and then pressed me against the wall and kissed me hard. Our hunger was a living, breathing thing. She clawed at my clothes and I tore at hers. In moments we were naked with my fingers deep inside her pussy and her hand stroking my cock painfully. \n\nShe broke away from me and ran squealing up her stairs. I admired her ass and form as she fled up the stairs. I chased her into her bedroom, my hard cock swinging wildly. I barely had a moment to notice the d\u00e9cor. This was a boudoir. There was a chair harness hanging from the ceiling. Her bed was an old-fashioned canopy bed with rising bedposts. I noticed a few candles were lit and a bedside table was covered in odd looking devices but I didn't have time to determine what they were. Jennifer hit the bed and squirmed up to the headboard. She spread her legs and exposed her wet pussy to me. \n\nI leapt on the bed, scurried over to her, got between her legs and plunged my cock deep inside her. She was so wet I slid in easily. Her legs immediately wrapped around me and in moments we were thrusting away at one another like wild animals. She bit my neck and clawed my back. I thrust with abandon. Her pussy clenched me tight and seemed to draw me in. She was crying my name and thrusting her hips against me. Our pelvic bones mashed together painfully, but we didn't care. \n\nThe wonderful thing about age and experience is that I can last much longer than the average man. I wanted this to last. We weren't just fucking; we were pleasuring each other. She came quickly, but I didn't stop thrusting. The pleasuring wrapping itself around my cock, running up my spine and making my head reel was all that mattered to me. I felt her cum but didn't care. She came hard once and begged me to stop, but I couldn't. Something had taken hold of me and all I could do was allow it to happen. I thrust harder and harder. ",
        "Jennifer came again and I felt a flood of liquid around my cock. Had she just squirted? I wondered and wanted to taste it. I had never made a woman squirt before. \n\n\"Did you just squirt?\" I managed to grunt out. \n\n\"Fuck yes, I did, don't stop. Jesus fuck.\" \n\nI kept thrusting. I could feel her cervix touching the tip of my cock and each time it did she shuddered. She was so wet it was making a noise with my thrusts. She had her claws deep on my ass cheeks pulling me in harder. She tried to get me to stop my thrusts at the bottom by holding me against her, but my strength was too much and each time I pulled out of her, it was a fight. \n\nI growled and she came. I was lying hard against her with my entire weight, pinning her to the bed and claiming her. She was mine and I told her so. She came again, weeping. \n\nI was holding off my own orgasm. It was right there if I let it come. I edged myself, turning the fucking into something more animalistic. This was my woman. My possession. Words poured out of me. \n\n\"You are fucking mine! Mine! Do you hear me? Mine!\" \n\n\"Yes!\" she screamed. \"Fucking take me. I'm yours. Fuck me, Bill! Harder! Fuck me!\" \n\n\"I'm never gonna stop fucking you! Ever!\" \n\n\"Oh fuck, come in me, Bill! Come in me! I can't take it anymore! Fucking cum!\" \n\n\"You want me to fill your cunt with my come? Do you?\" \n\n\"Fuck yes! Fill my cunt! Fill it!\" \n\nI reached up when I came and grabbed her by the throat. I had never done that before or wanted to. Except this time she was mine and I was claiming her. She looked shocked at me and then felt my cock ejaculate hard within her. Her eyes went wide and then rolled back in her head. She came with me. I held my cock deep inside her and felt my cum explode inside her. Her pussy drenched my balls with a surprising force of liquid that felt like someone had shot water on me. She squirted twice and then she shook all over. Her legs spasmed and her breathing stopped for a long moment. I didn't care. I held my cock inside her and shot rope after rope against her cervix. She gasped for air and then I felt liquid rush out of her in a torrent. Her eyes snapped to mine, and she looked horrified. I released her throat and started to move to see what had happened, but she clamped onto me. \n\n\"Oh my god, Bill!\" \n\n\"What happened?\" \n\n\"I peed myself. Oh, my god!\" \n\n\"You what?\" \n\n\"I couldn't help it! Oh, my god!\" \n\nI started to laugh. I couldn't stop myself. \n\n\"It's not funny!\" she slapped my back for emphasis. \n\n\"Oh, baby, I don't care.\" \n\n\"Well, I do! This is humiliating!\" \n\n\"What happened?\" \n\n\"I don't know. I couldn't control myself. It just let go.\" \n\n\"Your bed is soaked.\" \n\n\"I know, my ass is swimming. I need to clean this up before the mattress is ruined.\" \n\nI looked into her eyes. They were such a beautiful green. I kissed her and she kissed me back before breaking it. \n\n\"Get off me, I need to clean this up!\" \n\n\"We will. Just a second. I want to enjoy this. Being inside you.\" \n\nHer eyes softened and she kissed me. \"It feels perfect. That was... amazing, Bill. Truly. Amazing.\" \n\n\"It was. Sorry I was so rough.\" \n\n\"Rough? That wasn't rough. That was perfect.\" \n\n\"Perfect?\" \n\n\"I liked you taking me like that. A woman needs that. The strength of a man claiming her. Taking what you want. I didn't know I needed that until you took me. Jesus, it was so hot. Something inside of me needed that. To be possessed. Taken. Used. Jesus, this puts women's lib back centuries. What the fuck was that?\" \n\n\"It was carnal. I felt like an animal.\" \n\n\"You were an animal.\" She growled at me and we kissed. \"I want you to do that again with me.\" \n\n\"Okay.\" \n\n\"You came in me.\" \n\nI smiled at her. \"Second time.\" \n\nShe laughed. \"I didn't tell you the other day, but I haven't had a man come inside me for years. You're the first since my first boyfriend. I love it. It completes something within me. I feel... good.\" \n\nI nuzzled her neck and felt her pussy twitch around my cock. \"I loved It, too.\" \n\nShe held me tightly. \"I came so many times, Bill. Fuck, you're good.\" \n\n\"I came once.\" \n\nShe laughed and slapped me. \"Dummy.\" \n\n\"Let's clean up.\" \n\nShe nodded and we separated. She complained when I pulled my cock out. We both looked down and saw the mess we had made. Her sheets were soaked. She looked embarrassed, but I told her to stop and that I actually loved it. I did. It was hot to me. I had made a woman squirt and then piss herself in her passion. I was proud of myself and told her. \n\nShe searched my face for a moment and then grinned. \"You should be. You're the man, baby. Jesus that was the best sex I've ever had. I'm gonna be doing myself for months thinking about tonight.\" \n\n\"Huh, me too. Well, my ego is about to burst. That's awesome. Let's clean up.\" \n\nJennifer stood before and searched my eyes for a moment. Then she gently held my face and kissed me softly. I raised an eyebrow at her but she just smiled a sad little smile. She turned to the bed and looked at the mess. \n\nIt didn't take us long to clean up. We stripped the bed and Jennifer produced a replacement mattress pad and sheets. She had a closet full of them. The cost of her business, she said. \n\nShe pulled me into her massive shower, and we took our time washing each other. When I touched her pussy she winced. She was sore. I noticed my pelvis bone was slightly bruised and so was hers. We found it funny and then just made out in the shower, enjoying the heat of the water and the feeling of our bodies pressed together. \n\nIt was Jennifer who insisted I better leave before Nancy woke or noticed. She didn't want to jeopardise what we had. Before I left, she showed me her wine cellar. It was modern and consisted of wine coolers, but massive and holding dozens of wines each. Now I could tell my wife what it looked like. \n\nWe picked up our clothes in the entranceway and dressed, kissed goodnight, and I staggered home and to bed, falling asleep with a wide smile on my face. \n\n* * * \n\nFor the next two days I didn't see Jennifer. I found myself looking for her. I missed her and needed her. Nancy didn't seem to notice anything amiss and my life at home was pretty routine. I did notice that no one came to visit her for the first two days after that night. \n\nOn the third day an expensive car drove past her house and a client showed up. I felt my jealousy rise and I pushed it away mentally. It was a useless emotion and not fair to Jennifer. I had something the clients would never have. \n\nThe client left after a couple of hours and I waited outside. A little while later, a freshly showered Jennifer, in a thick terry-cloth robe, came outside and joined me at the fence. We smiled at each other and lit up smokes. \n\n\"You cost me ten grand, mister,\" she said with a smile. \n\n\"Huh?\" \n\n\"I had to cancel my clients. I was too sore. Jesus, you fucked the shit out of me, Bill.\" \n\n\"No, just the pee.\" \n\nShe blushed. \"Yeah, true. I researched it. My peeing like that is normal. Meant I truly let go, I guess.\" \n\n\"Or you're incontinent.\" \n\n\"Shut up, you.\" \n\n\"Ha!\" \n\n\"That was amazing, Bill. Best sex of my life. Thank you.\" \n\n\"My pleasure, my dear.\" \n\n\"We'll have to try that again. Soon.\" \n\n\"I agree. How was your client?\" \n\nJennifer looked toward the street before looking back at me. \"You really want to know?\" \n\n\"I guess.\" \n\n\"I can give you all the details, if you want. Does that turn you on?\" \n\nI smiled at her. \"No, your red hair, large tits, and gorgeous ass turn me on. Go ahead, tell me. I think I would like to hear it.\" \n\nShe looked at me for a moment. \"I never have anyone to talk to about this. You sure about this?\" \n\nI nodded. \n\n\"Your wife home?\" \n\nI shook my head. \n\n\"Okay, I'll be right over.\" \n\nA few minutes later Jennifer strolled out onto my deck, wearing sweatpants and a Rush tee-shirt. \n\n\"Rush? Really?\" \n\n\"Yeah, they're awesome.\" \n\n\"Totally agree, just surprised.\" \n\n\"There's a lot about me that will surprise you.\" Jennifer sat next to me and our thighs touched. She leaned over and we kissed. Her lips were so soft, her tongue hot and wet. I loved this. I could kiss her all day. \n\n\"Ready?\" she asked me when we broke for air. \n\nI nodded. \n\nJennifer gave me all the details. \n\n* * * \n\nJennifer heard the soft knock at her door and checked herself in the mirror. She was wearing her kimono and underneath the most expensive lingerie money could buy. Her breasts were pushed up nicely with her cleavage in display. She checked her breath by cupping her hand and breathing into it. Minty fresh, she thought. Perfect. \n\nShe reached between her legs and checked her pussy. The soreness was gone, and she had applied a small amount of water-based lube. It made her clients think she was wet for them. They all fell for it. She had applied a little to her asshole and pushed some inside her rectum. All tricks of the trade. \n\nShe reviewed in her head what her client preferred. She had a large journal that detailed each of her clients. She wrote down every little detail about them, their lives, their associates, children, friends, every little thing. When they arrived, she made sure it seemed to them that nothing was more important to her than them. \n\nIt was so easy with men. Men wanted the perfect girl. Responsive to them. Interested in them. Hot and wet for them. They craved attention so deeply. They needed to feel wanted. It was their biggest weakness and society would never acknowledge it. Women need attention too, she thought. But not to the same degree as men. They are so fragile. I feel sorry for them. \n\nBut not Bill, she thought and then wondered where the thought came from. He's different, she admitted to herself. He's not fragile. He's so sure of himself. The looks he gives me-I get wet so quickly. The other night was... amazing. \n\nShe remembered the feeling of him on top of her, thrusting into her with such desire. The feral look in his eyes toward her. She was his in those moments. And wanted to be. While thrusting back at him her pussy wanted nothing more than him. He filled a void in her life she hadn't known was there and with the awareness of her need a primal instinct had woken in her. She wanted him to take her. Possess her. The awareness while lying trapped under him had given her such pleasure and wave after wave of orgasm had flooded through her. It had been too much at one point. She panicked and wanted him to stop. But he didn't. He didn't care. He kept fucking her, harder and harder. That made her cum again. Then she didn't want it to ever end. \n\nShe wanted him. Wanted him even now. But the knock came to her door and she had to perform and push thoughts of Bill aside. She took one more look at herself and moved to the door and opened it standing behind it. She looked first to the street and saw no one watching. She stepped clear and gave her client the brightest smile she could. It was well practiced. Perfect in every way. \n\nThe man, dressed immaculately in an expensive business suit, smiled at her and stepped inside her entranceway. She closed the door behind him and drew him into her arms for a warm, wet kiss. He felt his hands roam freely over her kimono and grab her ass and squeeze. His other hand rose up over her front and grabbed her left breast. There was nothing gentle about it. This client was not a gentle man, nor a gentleman. She moaned in fake appreciation and felt his lips smile against hers. \n\nHe broke the kiss and looked at her smiling face. \"Rachel. So good to see you again. It's been too long.\" \n\n\"So good to see you Adam. I've missed you,\" she lied. She thought of her journal entry on him. He ran an international import and export company. Mostly cheap goods made in third world countries he sold for a hundred times or more their worth. He had a wife, a teenage daughter called Anne, and a new-born son called Peter. Correction, the son would be almost one now, she realised. He loved single malt whiskey, with ice and water. He made over a hundred million dollars last year, officially. She knew it was probably ten times that. \n\nHe liked having his prostate massaged. He liked her teeth on his cock. He loved being rimmed, the dirtier the better. He fucked poorly and loved anal sex but was far too rough for her tastes. He never came with a blowjob but demanded it. Usually he finished with a hand job. \n\nJennifer was in for a long two hours. Already she ached thinking about it. But for a thousand dollars an hour she was willing to do whatever he wanted. \n\nJennifer sank to her knees and slowly undid Adam's belt and unzipped his pants. His cock wasn't hard, and she fished it out. Adam pulled off his jacket and watched her. She placed his flaccid cock in her mouth and gently sucked it to life. \n\nBill would have been so unbelievably hard by now, she thought and dismissed the thought with irritation. \n\nAdam was trying to face fuck her and so she slipped her mouth free and stood up and grabbed his cock and dragged him upstairs to her bedroom. Once in the bedroom she pushed him aside and told him to undress. He did and she watched him; faking an interest in his body. She licked her lips and he grinned. His cock was already deflating, and she made a mental note to add that fact to his file. \n\nOnce he was naked he tried to stroke his cock to life. Jennifer removed her kimono and stood with her legs spread. Her panties were crotchless and her bra had no cups, only wire lifts. He was staring at her with a strange-looking lust and she didn't enjoy the look. She was an object to him. Nothing more. \n\nBill never looks at me that way. He always looks at me with another look. Desire but with respect. I remember him toasting my exposed pussy with his wineglass and turning me down. That was the moment I truly wanted him. \n\nFor a moment she wished it was Bill lying back on the bed waiting for her. She sighed internally and sauntered over to the bedside. She picked up her strap-on and sucked the phallus on it while staring at Adam. His cock grew a little stiffer. She crawled up onto the bed and crawled on her hands and knees to his cock and took it into her mouth. She held the strap-on in a hand and ran the tip across his ass-crack. Adam thrust into her mouth and it hit her gag reflex and she choked. She was used to this treatment and managed to turn it into something sexual. She lifted her mouth off his cock and let the spit that had filled her mouth drool over his cock. She stroked it with the added spit and he groaned. \n\nAdam spread his legs and Jennifer wiped her spit down over his ass. She caught a faint whiff of ass and suppressed a grimace. No rimming today you bastard, she thought. \n\nShe kneeled and reached over to her bedside table. Adam took the opportunity to grab a breast and give it a hard squeeze. It hurt but she hid it. She opened a drawer and pulled out a bottle of Fuck Water. She knelt and made a show of putting the lube on the penis of the strap-on. Adam was grinning and his cock was finally hard and standing up. \n\nJennifer slipped on the strap-on and tightened the belt. She had another one that also had a piece that went into her vagina. She saved that one for her preferred clients. Adam wouldn't care if she enjoyed herself or not. It was all about him. She knew enough to know his wife couldn't stand him and she knew why. The man was a selfish pig. \n\nAdam lifted his legs and held them exposing his asshole to her. She moved up and rubbed the tip of the strap-on across his asshole and up over his balls. \n\n\"Ready to get fucked, Adam?\" she said using her best sultry voice. \n\nHe nodded his head and then sucked in a breath when she pressed the tip of the strap-on to his asshole. She squirted lube over her cock and let it run down the crack of his ass. She pushed her hips and the tip stretched his ass open and the tip popped inside. \n\nOver a period of time, much faster than she normally would do it, she pushed her cock into Adam's ass. Once it was halfway in she started small thrusts and added more lube. She squirted it over his cock and then took it in her hand and stroked him. Adam groaned and closed his eyes. \n\nJennifer fucked his ass slowly and stroked his cock. She watched his balls tighten up hard against him to the point where they could barely be seen. \n\nBill's balls always hang down; two gorgeous globes of man for me to play with, she thought and again wished Bill was here. Adam's scrotum was clenched tight and she hated the look. \n\nThe next two hours were a blur. Adam was becoming more demanding of her and a little red flag popped up in her mind. He was starting to cross lines. He wanted bareback and pouted when she refused. She was always played safe. Always. Except with Bill, she thought. Never with Bill. \n\nSoon she was pumping his cock hard and he grunted and made the most horrible cum face. His cum oozed out of his cock and flowed down over her hand. It was thick and its smell hit her nostrils and she almost gagged. \n\nWhat the fuck is wrong with me, she thought furiously. I'm thinking of Bill's cum and how wonderful it is. I'm comparing everything to him. This is fucked up. \n\nNot fast enough, she cleaned up Adam. She enjoyed a drink with him and sent him packing with one last kiss. She took a long hot shower and then wrote some entries into her journal under Adam. She wrote that perhaps she should stop seeing him and wrote a big question mark. Her phone pinged and she saw Adam had transferred money to her account. He had added a rather generous tip. Right, she remembered. He is always very generous. She scratched out the question mark and threw her journal down in disgust. \n\n* * * \n\nI looked over at Jennifer. She had just finished her story of her client. I had read much between the lines and figured out what she hadn't said. I could see her life was hard. I stroked her back. \n\n\"That's... terrible,\" I said. \n\nJennifer snorted. \"It can be. He's one of the worst. Probably the worst. But honestly, I have some clients that are amazing. Truly amazing men. But the women are the best. They want intimacy and so do I. Unfortunately, I only have three women clients. Oh, and one couple.\" \n\n\"A couple?\" \n\nJennifer grinned at me. \"Yeah. They're awesome. We spend most of the time playing board games, like Settlers of Catan. Naked Settlers of Catan. Adds a new dimension to the game.\" \n\n\"Settlers of Catan...\" I repeated. \n\nJennifer laughed and I realised I needed to keep hearing her laugh. It was joyous and made me feel good. \"Yes. We play for an hour and then get down and dirty. Threesomes are awesome with the right people. So much more to do.\" \n\n\"I'll take your word.\" \n\nJennifer looked at me in that way of hers. A judging introspective look. \"Hmm. Poor boy. Never had a threesome.\" \n\n\"Nope.\" \n\nJennifer grinned. \"Maybe one day we can fix that.\" \n\nThe look on my face must've been something because laughter peeled out of her. \n\n\"Hey!\" I said. \"It's not funny. Don't tease me like that!\" \n\nJennifer laughed and then winked at me. \"Who said I was teasing? Night, Bill.\" \n\nShe gave me a quick kiss and sauntered back through my house leaving me sitting with my mouth open. \n\n* * * \n\nThe next three weeks were a blur. Jennifer and I found every opportunity to get together. Our sex was amazing and never grew common. She would tell me what she did with her clients and for her I could see it was therapeutic opening up to me. \n\nAt the moment we were lying on her bed, naked and holding each other after another wild bout of sex. I was on my back and she was holding me on her side with one leg draped over me and her right hand was playing with the hairs on my chest. ",
        "\"Did I ever tell you I love your balls?\" she asked out of the blue. \n\n\"Um, no, but thank you.\" \n\nShe reached down and cupped them. My cock twitched on my stomach where it lay hard and still glistening with Jennifer's juices. Cum oozed out the tip. I sighed in contentment. She was so gentle. I kissed the top of her red head. \n\n\"They're so heavy and so loose in your nut sack. Which is also amazing. It's not all wrinkled like some prune. It's really beautiful.\" \n\n\"Thank you.\" \n\n\"Ooh, cum is leaking out your cock. I love your cum, too. I'm addicted to it. It tastes so yummy.\" \n\n\"Eww.\" \n\nShe slapped my chest and then cupped my balls again and played with them. \"Liar. You've tasted your cum from my mouth.\" \n\n\"True.\" \n\n\"I could get used to this, Bill.\" \n\nI had been thinking the same thing for the past few days. I didn't know where this was going or how it was going to end. Right now I was just so happy. Jennifer filled a void in my life. I spent all my waking hours thinking of her. \"Me too, Jennifer. What happens next with us?\" \n\nJennifer moved her hand to my cock and stroked it gently for a moment. She wiped a finger across the head, and I heard her suck her finger. She really did love my cum. \"I don't know, Bill. This is new territory for me. What are you exactly? My boyfriend? Not a client, that's for sure. But you're married. Eventually it will have to end. But I don't want it to.\" \n\n\"Me either.\" I stroked her back lightly with my fingertips. I felt her shudder. She loved it when I did that. I once had to do it for over an hour all over her back, bum and thighs. I left her snoring and naked face down on her bed. Now she wanted me to do it all the time. \n\nShe moved her head lower and slipped the head of my cock into her mouth. She did it so naturally that I almost expected it. She always had to have my cock in her mouth. She tried to explain it to me once. What I learned was the same craving I had to have her pussy on my mouth was the same craving she had for my cock. I didn't fight it. I just enjoyed it. \n\nI did eat her out for three hours one day. She wanted to be spoiled and I happily obliged. I knew every square inch of her pussy, taint, and ass. She tasted so delicious. I could bottle it. When I told her that she said maybe she should bottle my cock taste and cum. \n\nShe seriously loved the taste and smell of my cock. It thrilled me. \n\nI was feeling my cum start to rise again when her phone rang. She never ignored it. Her work meant she had to be responsive to her clients. She popped my cock out of her mouth and rolled away from me to scrabble for her phone on the bedside table. I groaned and she shushed me before answering it. \n\n\"Rachel,\" she said. \n\nI heard the faint sounds of a voice on the other end. \n\nJennifer sat up a little straighter and looked at me with awe on her face. \"Uh-huh...\" she said. \n\nShe listened some more. \n\n\"Yes, that would be wonderful... no, this weekend is fine... yup, just email me the details... right... no, I've never been... yes, my passport is up to date...will your husband... no? That's too bad. Say, can I bring someone?... Ha ha! No, a friend of mine... male. I'll pay for him... what? No, you don't have to do that... oh, alright, if you insist. Yes, wait I'll ask... yes, he's here with me now, one sec...\" \n\nJennifer put down her cell phone and looked at me. I could see the excitement in her face. \"Bill, do you want to come to St. Thomas with me this weekend? All expenses paid?\" \n\nI blinked at her. \"What?\" \n\n\"Remember the couple I mentioned? I'm talking to the wife. She's in St. Thomas and her husband had to leave. She's all alone and wants me to join her. She said I can bring you. She'll pay your ticket and we stay with her. It won't cost anything.\"  \n\n\"You want me to just head off to St. Thomas for the weekend?\" \n\n\"Yes! You'll love her. Remember the threesome I talked about? Think about it.\" \n\nMy mind reeled. This was crazy, but the thought of it excited me beyond reason. I often travelled for my novels and I could simply tell Nancy I was gone for the weekend. I thought a moment longer and then nodded. \n\nJennifer squealed and put the phone to her ear. \"Yup, he said yes... He's your age, Betty... uh-huh... honestly he fucks better than anyone I ever met... ha-ha! Yes, better than your husband...\" Jennifer looked at me with a soft look on her face. \"Yeah, he means a lot to me. He's my best friend, Betty.\" \n\nI looked at her in surprise. I was her best friend? Did she mean it? I searched my emotions and realised she was my only friend. I smiled at her and she beamed at me. \n\n\"Yes, Betty. I can't wait... love you, too!... okay, bye...\" \n\nJennifer hung up and then squealed and launched herself at me and kissed my face all over. \n\n\"Bill! This is gonna be so much fun!\" \n\nEnd of Part Two"
    ],
    "authorname": "Estcher",
    "tags": [
        "coupling",
        "escort",
        "strap-on",
        "prostitute"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/escort-neighbour-pt-02"
}