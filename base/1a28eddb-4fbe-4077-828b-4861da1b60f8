{
    "title": "Discovering Sarah Pt. 02",
    "pages": [
        "To the reader: This is part 2 of a three-part story. To appreciate this story, you should first read part 1. \n\nAll characters and events are fictional. All sexual activities involve consenting adults over the age of 18... blah- blah- blah\n\nDay 5: \"You've Been A Naughty Girl, You Let Your Knickers Down\" I am the Walrus, the Beatles\n\nWaking up in Jamaica is always a beautiful experience. The warm breeze, the birdsong, the sound of waves crashing on the beach all conspire to lift you gently from sleep. Waking up with a strange body next to you makes it a sensual delight. That night I went to sleep wrapped around a half-naked young woman. That morning, I woke up with a half-naked young woman draped on me. I felt the heat of her pussy resting against my thigh; our skin only separated by the flimsy panties. I felt soft breasts against my chest and warm breath on my neck. Like most mornings, I had an erection, but this time I'm not sure that it was just normal morning wood. This morning her hand was resting on my manhood. I could tell from her breathing that she was asleep. As best as I could without disturbing her, I slid out of bed. I showered and brushed my teeth.\n\nWhen I returned to the bedroom, I found her awake. I'm not sure, but I could've sworn that I saw her hand moving under the covers. With the mood I was in, I would've been more than happy to help her out if she needed some relief, but she did not ask, and I was afraid to offer.\n\nShe said, \"so last night was intense.\"\n\n\"I had a ball,\" I replied.\n\nShe grinned, \"Can you believe that we got naked with strangers.\"\n\nI shook my head, \"it's no big deal for me, but I'm surprised you did it.\"\n\n\"I'm surprising myself quite a bit lately. But it is exciting and scary.\"\n\nI asked, \"now that you're sober and its broad daylight, how do you feel about being next to naked right now?\"\n\nShe blushed, \"it's embarrassing to admit this, but I kind of like it. It feels nice to be a little naughty and sexy again even it's just with you. Is that Dumb?\"\n\nI shook my head and said, \"it's not dumb at all.\"\n\nShe then rolled on her side to face me and asked, \"how about you? Were you weirded out by us being naked around each other?\"\n\n\"Here's the thing,\" I said, \"I'm comfortable with being naked so long as I'm not offending anybody. And, I don't want to come off like some sort of pervert, but the truth is that it's kind of a treat seeing you naked.\"\n\nWith that, she got out of bed, and completely comfortable in her partial nudity walked into the bathroom. About halfway, she stopped, \"do you think that the party turned into an orgy?\"\n\nI said, \"I doubt it went much further than what you saw.\"\n\nShe sat on the edge of the bed, \"it kind of got a little intense, you know, with me on your lap and us kinda of... well you know.\" She paused, \"are we good?\"\n\n\"No worries,\" I said. But I was worried where this may be going, and what the consequences may be. I wasn't worried about Joanne, she had all but given me the green light to play around a little. I was worried that I might go too far with Sarah and fuck up a family relationship. This place wasn't real. Sooner or later we would have to go back to Indiana and our normal lives, then what?\n\nWe got dressed and ate breakfast. Over coffee, I put the question to her, \"since you have developed this new attitude and we have seen each other bare ass, what would you think about trying the nude beach today?\"\n\nSarah frowned, \"skinny dipping with a bunch of drunks at night is one thing, walking around naked in broad daylight is another. I am not sure about being completely naked in front of strangers, or you for that matter.\"\n\nI took a drink of coffee, \"I don't want to embarrass you, but we got quite an eyeful of each other last night.\"\n\nAfter a long pause, she said: \"That was different.\" She paused again, then added, \"what the hell, maybe it's worth a try.\"\n\nAfter breakfast, I packed our beach bag while Sarah went into the bathroom to get ready. She came out in her swimsuit. I asked if she was chickening out of the nude beach.\n\nShe gave a stern look, \"no, but I am not walking over there naked.\"\n\nAnd so, we made the hike over to the au naturel beach. It was obvious that Sarah was nervous. To ease her into it, I steered us over to the far side of the beach where it was fairly empty. Sarah behaved like most newbies; she put her towel on the chair, positioned the lounger back where she wanted it, arranged her stuff, and generally fidgeted for a few minutes. When she ran out of tasks to prolong the inevitable, she turned her back from me and started to disrobe.\n\nI was amused, last night she practically posed nude for me at the pool. Then in the room, she stripped as soon as she walked through the door. Now in the bright sun, she was so shy. Her bashfulness added to the anticipation of seeing her again. For me at least, the sexiest part of seeing a woman naked is knowing that she is letting you see her naked!\n\nOnce nude, she immediately climbed onto the chair and laid on her stomach. By contrast, I shucked my clothes first and then began \"nesting.\" If she wanted to look, I was there for the viewing. When I was done, I asked Sarah if she wanted something to drink.\n\nHer reply was, \"God yes and make it strong!\"\n\nWhen I returned, I caught Sarah trying to check me out on the sly.\n\nWhen she saw she was busted, she said, \"sorry, I am not sure where to look.\"\n\nI chuckled, \"it doesn't have to be weird. Just take a good long look and get it over with. It's just an everyday ordinary penis.\"\n\nShe looked up, \"actually it is a very nice penis. I haven't seen all that many up close, but yours is attractive.\"\n\nI chuckled again, \"Attractive? Really? I thought other than size they were all pretty much the same.\"\n\n\"Nope,\" she replied, \"they are certainly not all the same, and don't ask me what I like about yours. This is getting embarrassing.\"\n\nWith that, we both broke out laughing. I made a mental note about how JoJo had often said the same thing, and to quiz her about what she liked about little Timmy. I was genuinely curious as too what made a dick attractive versus unattractive.\n\nAfter about 30 minutes, Sarah finally got the nerve to roll over and sit up. Like many new to public nudity, when people walked by, I noticed she subconsciously covered herself or closed her legs. Eventually, however, she began to become increasingly comfortable.\n\nAfter about an hour she said \"this really is liberating, the feel of sun and wind on my skin is so sensual. I like being naked more than I thought I would.\"\n\nSoon it was time to refill drinks again, and I was going to offer to go get some, but instead, I suggested she come with me.\n\nShe looked at me pensively, \"I don't know if I'm ready to walk around in front of people.\"\n\nI grinned at her and lied, \"no one's going to pay attention to you.\" Then added truthfully, \"and if they did check you out, you would probably be the best looking woman on the beach.\"\n\nShe said, \"are you kidding, I can't compete with Tammy's boobs, and don't even get me started with Dianne.\" Then she added, \"That girl is Hot!\"\n\nI grinned. \"she is easy on the eyes.\"\n\nWith a smirk, Sarah said, \"don't try to be Mr. Cool, I saw the way you looked at her last night.\" Then in her best high school girl voice, she taunted, \"You soooo wanna do her!\" She laughed, \"I don't blame you, I'm straight, and I half want to do her myself!\"\n\n\"I can talk to Darren for you. I saw the way he checked you out at supper. He might be good with a three-way.\"\n\nWryly, she said, \"now there's a thought.\"\n\nI replied, \"You're more like your sister than I thought.\"\n\nA look of surprise crossed her face, \" Woe, what's that now.\"\n\nI regretted the faux pa and stoop up. \" Never mind.\"\n\nThen she took a big breath, stood up, and we bravely marched to the bar. Such was Sarah's indoctrination to naturism. By the end of the afternoon, she was as comfortable as an old pro. Like so many others, she later gushed about how relaxed the vibe is on a nude beach, and how even naked, the folks were so friendly. She observed that on regular beaches, people keep to themselves, and she assumed naked people would be even more reserved and distant. To her surprise, she found the \"nude crowd\" was outgoing, and an awful lot of fun. In fact, by mid-afternoon Sarah was a social butterfly, talking with anyone and everyone. She seemed to not be the least bit self-conscience. It was hard to believe that this was the same woman who less than a week ago, seemed unable to carry a conversation, or even look people in the eye.\n\n5 o'clock came around far too soon, and I suggested that we should pack it in and get ready for dinner. She kind of pouted and said that she was having so much fun she didn't want to leave. She then announced we would have to come back the next day.\n\nI reminded her that I had a tee time the next day and would not be back from the golf course until mid-afternoon. However, she was free to hit the beach by herself.\n\nShe shook her head vigorously and said, \"I don't think I'm ready to fly solo. But, be ready to come over in the afternoon.\"\n\nWith that, she got up, stuffed her swimsuit in her bag, and threw on her half sheer beach cover-up. She then strutted back to the room.\n\nAgain, I thought to myself, what a change a few days can make.\n\nBack in the room, she walked in and immediately took off the cover-up. She tossed it on the bed and walked over to the bar to make us a couple of rum and Cokes.\n\nI thought, what the hell and stripped down too. Looking at her standing there naked, I could not resist chiding her, \"damn girl, I can't keep clothes on you all of a sudden!\"\n\n\"Are you complaining?\" she asked with a devilish grin.\n\n\"Oh, hell no,\" was the reply.\n\nShe then flopped naked on the bed. Here's the funny thing, I had been around this naked girl all day and with only a few close calls, managed to keep my libido and little Timmy, under control. I even got to the point where I was sorta used to seeing her naked, so long as I didn't focus on her body to closely.\n\nBut the sight of her stretched out nude on a bed was a horse of a different color. She looked so inviting. It occurred to me that she had to know how she looked, and the likely effect on me. That thought and the sight of her on the bed inspired another erection.\n\nShe looked at me and said, \"don't sweat it, I know those things have a mind of their own. Actually, I'm surprised you're able to keep it down all day around all those naked women.\"\n\nI said, \"nude beaches really are about body freedom. Eventually, you get beyond thinking about sex, sometimes I slip though.\"\n\nShe looked at me for a few long seconds and said, \"I get it. Most of the day, I felt free and liberated. But I have to admit that every once in awhile, I would catch someone checking me out, and truthfully, it kind of made me hot.\"\n\nWith a sly smile, she added, \"I get that we're family and we're not into each other. But, I caught you looking at me once, and I kinda liked it too. I haven't felt sexy for a long time, and you're kind of an ego boost. Nick would have made an ass of himself staring at the other women all day while ridiculing me the whole time. You have been so cool to be with all day. It turns out you're one of the best dudes I know, so don't feel bad about getting hard.\"\n\nThen she sat up and faced me. \"Tim, it's not all one-way. I have been horny for two days. This place is so sexy, I've done things that I've never done before; or thought I ever would.\"\n\nThen the roof fell on my head. She added, \"For what it's worth if you were not married to my sister, this weekend might be very different.\" She gave me a thoughtful look. \"But if this is all getting too weird for you just say so, and we can tone it down.\"\n\nStunned, I stammered, \"thanks, and no, it's all good.\"\n\n\"What about Jo?\" she asked. \"Are you going to tell her we went to the nude beach?\"\n\n\"Sure. She'll be ok with it. Hell, she suggested it!\" With that, I went in and took a shower, immediately taking care of my erection. I had no sooner stepped out the shower then Sarah strolled into the bathroom, walked into the shower and turned it on.\n\nWhile washing her hair, she asked, \"so, Jo's really ok with us being naked around each other?\"\n\nI assured she was, and got a \"hmm\" in return.\n\nLater that night, after supper, as we lay in bed, it occurred to me how strange this vacation had become. We had become incredibly intimate; so very familiar and yet still platonic. It was evident that some sort of chemistry was brewing between Sarah and I. It was good, but it was going to be hard; both figuratively and literally to keep it hands-off. I also could not help but wonder what Jo would think of all this.\n\nDay 6: \" Come Together\" by The Beatles.\n\nI awoke early the next morning and slipped out of bed. I love golf, but I have to admit, it was kind of hard to leave Sarah. I dressed and caught the shuttle to the golf course. I returned just after noon. I went to the room expecting to find Sarah there and looking forward to grabbing some lunch. Instead, I found a note that said, went to the beach, see you later.\n\nI put on my suit, grabbed my beach gear, and made my way to the \"textile\" beach to look for her. I searched for several minutes but didn't find her. So, I grabbed some lunch at the beach grill and then made my way over to the au naturel beach.\n\nI found Sarah at the nude pool swim-up bar. She had hooked up with several couples, and as best as I could tell, they were well lubricated and in full party mode.\n\nUpon seeing me at the poolside Sarah drunkenly yelled, \"look, it's the guy who thought playing golf would be more fun than partying naked with us!\"\n\nI was then greeted with a round of drunken boos from the gang. In response, I took a bow, turned around, and mooned them. I received a cheer for my efforts. I then stripped off and jumped in the pool. I waded over to the swim-up bar next to Sarah and ordered a rum punch.\n\nSarah put her arm around me and informed me that I had some catching up to do. The pool was unusually loud and boisterous, and Sarah was right in the middle of it along with Tammy and Mike, Darren and Diane and a couple I didn't know who introduced themselves as Rick and Amy. The bar was busy, and with Sarah at my hip, I waited for my drink. I was standing next to Dianne and directly behind Amy. Within a minute, Dianne slipped under my arm opposite of Sarah and wrapped her arm around my waist.\n\nShe gave me a pat on the ass, \"That was a nice butt you flashed there, Tim.\"\n\nI figured turnabout was fair play, so I gave her cute little ass a squeeze. \"thanks, I like yours too!\"\n\nAmy then pushed her butt up against my crotch and wiggled. \"Sarah and Dianne said you were a cutie, they were right,\"\n\nI thought to myself, wow, they are worked up. Maybe I should have passed on the golf.\n\nMy experience at this particular resort was that the folks at the nude pool tended to be much more fun than their counterparts at the textile pools. However, because they were often a little older, they were usually well behaved. Today, something must've been in the water because the group was wound up.\n\nNot surprisingly, Tammy and Mike were the prime instigators, and Tammy had found a partner in crime in Amy. Both had big personalities. Rick and Amy appeared to be in their 40s, he was sporting a bandanna and bright lime green sunglasses. Amy was short, had dark hair, and a big floppy sun hat that mostly hid her face. But as best as I could tell she was a reasonably attractive woman. She had a Rubenesque build. Not heavy but curvy in the hips; with large heavy breasts that gravity was working hard upon. As it turned out, they ran a veterinary clinic in Vancouver. He was quick-witted, she was sassy, and a flirt. They seemed to bring everyone out of their shell.\n\nWe all talked, laughed, drank, and flirted. Darren and I hit it off immediately, mostly we talked about golf, although we half-jokingly congratulated each other for having the 2 hottest women on the beach. A little drunk, he admitted that Sarah was a hottie. I likewise confessed that Dianne was hard not to stare at.\n\nDarren laughed and said, \" it's a deal, you stare at mine, and I'll stare at yours!\"\n\nHe said this a little too loud, and a few of the gang looked at us and laughed.\n\nSarah piped in, \"just what are you 2 staring at?\"\n\nRick added, \"you 2 can stare at each other's dicks if you want, I'll look at your wives pussies!\"\n\nIt was my first hint that Rick just might be a Dusche.\n\nA few rounds into the party, Rick was passing a drink to Amy and accidentally spilled some on her chest. He no sooner had done this than he quickly licked it off of her. Not missing an opportunity to cause mischief, Tammy immediately pointed out the \"party foul\" and insisted that Rick should have to do a body shot off Amy as a penalty. Without missing a beat, Amy was laying on the bar. Rick ordered a tequila shooter, squirted the lemon all over her stomach, licked her neck and sprinkled salt on it, and then poured tequila in her belly button. To great applause and encouragement from the gang, he quickly slurped up the tequila, licked her neck and then the lemon from her tummy.\n\nAmy popped off the bar and grabbed Tammy telling her that she was next. With more than a few giggles, she crawled up on the bar. Following Rick's lead, Mike did his shot as well.\n\nTammy was about to crawl off the bar when Amy stopped her. She said, \"oh no girl, Mama needs a shot too.\" A cheer went up when Amy squirted lemon juice on Tammy's stomach, but instead of licking her neck, she licked and salted her breast. Amy then licked the tequila out of Tammy's belly button, slowly dragged her tongue across Tammy's nipple and then just as slowly licked the lemon juice off her stomach; her tongue traveled much further south than it needed to. Tammy protested that Amy was out of control, but her erect nipples suggested she liked it. It was apparent from Mikes' face that he was more than ok with another woman playing with his wife's tits.\n\nThe gang yelled for Diane to take the stage. With only a little coaxing, sexy Diane draped herself gracefully across the bar. Darren licked and salted her left breast, then squirted lemon juice on her right one. He then put the shot glass between her legs against her pussy. Using only his mouth, he pulled the tequila glass up, emptied it; and then thoroughly licked each boob.\n\nDiane started to sit up, but Darren stopped her. He turned to me and said, \"Hey Tim, let me buy you a drink.\"\n\nThe gang applauded and started chanting \"Tim, Tim, Tim!\"\n\nIn a fake southern drawl, I said, \"why that would be right neighborly of you. Set me up please.\"\n\nHe laughed and replied, \"hell no, I'm buying, you can serve yourself.\"\n\nWith that, I started squirting lemon juice on her stomach.\n\nRick stopped me saying, \"come on, don't be bashful you will hurt her feelings!\"\n\nI softly asked her, \"how do you want me to do this?\"\n\n\"Use your imagination,\" she said with an impish grin.\n\nI looked at Darren, and he gave me a thumbs-up gesture.\n\nTo this day, I'm not sure what possessed me to do it, but what came next was really out of character for me. Really, that's not true. The truth is I was horny, and Dianne was hot. I took her feet and spun Dianne a quarter turn so that her legs were hanging off the edge of the bar. I put her feet on my shoulders to a round of applause from the gang. I licked her left thigh and put salt on it. I squirted lemon juice on her right thigh, and I suppose you can guess where the tequila went.\n\nI licked the salt off her first, then plowed my tongue through her pussy. Of course, most of the tequila had run off and mostly what I tasted was pussy. But my God, what a pussy. Obviously, watching the other girls had gotten her aroused. She was already wet when my tongue met her, and it wasn't pool water. Her juices mingled with the tequila and salt were intoxicating. As I worked my tongue through the length of her pussy and crossed her clit, her hips rose with me trying to maintain contact. Simultaneously her legs closed around behind me, and her hand made its way to the back of my head. Not wanting to overstay my welcome, I then dutifully licked the lemon off her right thigh. As a reward for my performance, Diane graced me with a quick kiss.",
        "I heard Rick say, \"Holy shit, I'll have what he's having!\"\n\n\" Rick, buy somebody a shot - quick,\" laughed Amy.\n\nInevitably, Sarah was prodded to the bar next. A week ago, you could not have convinced me that she would do it. But then, a week ago you could not make me believe that she would be partying naked in a pool with a bunch of strangers.\n\nBut Sarah was full of surprises, she grabbed my hand and said, \"let's do this.\"\n\nShe popped on the bar grinning at me. I honestly was not sure how far I could go with Sarah. I could do a PG body shot off her tummy like Mike had done to Tammy or the X-rated version I just did with Diane. As of yet, we had never touched each other intimately or even kissed. Still, here was Sarah on the bar smiling at me. I decided to take my cue from her. If she laid sideways on the bar, I would exercise some self-control. If she sat on the bar the way Diane had been positioned, I would take it is an open invitation.\n\nThis was exciting! Diane was gorgeous, but Sarah was forbidden fruit. If I had any reservations about crossing a line with her my state of arousal and the alcohol had eliminated them. I wanted to taste Sarah badly, and I only needed the smallest encouragement from her to do it.\n\nThis is where the cruelty of fate intervened. Or should I say the cruelty of the bartender? She was okay with our gang's shenanigans up to a point, but apparently, Diane, and I had crossed a line.\n\nNo sooner had Sarah climbed on the bar than the bartender scolded, \"okay, you've all had your fun. No more body shots, this ain't no Hedonism after all.\"\n\nSarah hopped down from the bar and with a pouty look and said to me, \"you sure got the best end of that deal.\"\n\nDarren laughed, \"Nope, I think Diane got the best end of that deal.\"\n\nIn a husky voice, Diane said, \"oh yeah I did!\"\n\nDianne then looked at Sarah and said, \"for what it's worth, I had something special in mind for you to repay the use of Tim's tongue.\"\n\nOn hearing this, Sarah took my hand and squeezed it hard.\n\nThe Rest of the afternoon was a drunken blur, but somewhat tamer. Around sunset, Sarah and I decided it was time to head back to the room and clean up. We made plans with the gang to meet at the beach bar after supper. When we got back, Sarah walked in the door and pulled off her clothes. Like the day before, I had been naked with her all afternoon. Like the day before, seeing her naked in the room was substantially more seductive.\n\nShe made herself a drink and then stated, \"today was the most fun I've had in my entire life! The people here are so much fun.\" She added, \"I'm kinda sad that I can't tell my friends about it, they would think I was the biggest slut in the world.\"\n\nI plopped down on the couch and replied, \"I have to tell you, this was about the most fun I've had here ever. I really wish JoJo was here too.\"\n\nSarah looked at me slyly. \"I think you would've had to behave yourself a little more if sis were here.\"\n\nI responded, \"trust me, she would've been right in the middle of it!\"\n\nI could tell from the shocked look on Sarah's face that she was doubtful. \"Sarah, your sister is anything but a prude. She can party with the best of them.\"\n\nSarah laughed, \"are you telling me she would not have been pissed about what you did to Diane, and what you almost did to me?\"\n\nA thought flashed in my head; she expected me to do to her what I did to Dianne!\n\nI shrugged, \"she would have been fine with what I did. Hell, she might've done the same thing.\"\n\nSarah almost choked on her drink. \"Bullshit! Are you saying you two are swingers?\"\n\nI said, \"No, we don't consider ourselves swingers. We don't have sex with other couples, but sometimes on vacation, we might fool around with other couples; kind of like today.\"\n\nSarah looked a little surprised and curious at the same time. She said, \"I have to process this.\" Then a thought occurred to her. \"when you say she would have done the same thing, you don't mean with Dianne, right?\"\n\nI grinned, \"it wouldn't be the first time.\"\n\nA look went across Sarah's face that I could not read...Shock? Curiosity?\n\nAnd with that, she headed off to the bathroom to shower. I kind of felt uneasy about sharing such personal details about Joanne and me, but under the circumstances, it seemed best that Sarah understand. I hope Jo would agree when I told her that I let Sarah know about our extracurricular activities.\n\nWe got dressed. I was surprised that Sarah only through on a light sundress. She wore nothing underneath it.\n\nDuring supper, I noticed that Dianne was also braless. Daren, Mike and I were distracted all evening. It's funny, we were with these women naked all day, yet still turned on by their sexy dresses. Sexy is about attitude, I guess.\n\nAfter we ate, we all went for drinks. However, a long day in the sun and several cocktails kind of wiped everyone out. They all soon decided it was time to head back to the room. As we were walking back to the room, Sarah said, \"I am not ready to turn in yet. Do you want to go to the pool?\" I thought about it and replied, \"I could go for a skinny dip in the hot tub.\"\n\nWe stopped off at the beach bar and grabbed a bottle of wine and a couple of plastic glasses on the way back to the nude beach. When we got to the beach hot tub, I was disappointed to find another couple already there. The disappointment didn't last though. As we approached, I saw that the woman was sitting on her husband's lap facing him, and they were making out pretty hot and heavy.\n\nI made our presence known by saying hello. The woman came up for air and said, \"Welcome to Paradise.\"\n\nWithout hesitation, Sarah dropped her dress while saying hello. I too stripped off, and we slid into the tub. Within a few minutes, the amorous couple returned their attention to each other.\n\nI was enjoying the show but did not want to intrude. The alcohol and moonlight also had me feeling a bit frisky, so I asked half-jokingly, \"would you like us to give you some privacy, watch or join in?\"\n\nThe man replied, \"take your pick, it's all good by us.\"\n\nTheir passion escalated, and after a few minutes, he picked her up and set her on the edge of the hot tub. He then went down between her legs and started giving her head. Her response was immediate, her legs wrapped around his neck and she pulled him in. Soon she was moaning, grinding her hips against his face, and urging him on.\n\nThe sight of them there in the moonlight was both romantic and erotic. I remembered this same scenario a few nights ago; then it resulted in Sarah wanting to leave. However, the events of the last few days and especially this afternoon seem to have made Sarah much more adventurous.\n\nRather than asking to go, she scooted close to me, and I put my arm around her neck. With her head leaning against my chest, Sarah's hand slid under the water and to her pussy. She made no attempt to hide what she was doing, in fact, as she spread her legs for better access, she hooked one of them over my thigh. With my free arm and hand, I started stroking my erection.\n\nAs the scene in front of me became more erotic, I became bolder and slid my hand from my cock to the inside of her thigh. Her legs were open as if to invite me. My hand no sooner began to slide up her thigh then I felt a small hand grab my erection and start to gently stroke me. My hand found Sarah's already slick pussy. My fingers stroked and pinched her swollen lips. I then slid 2 fingers into her and used my thumb to gently massage her engorged clit. She let out a sweet moan as I rubbed her. Her hand continued to caress and stroke me as we watched the unknown woman across from us, surrender herself to ecstasy.\n\nThe woman's breathing became labored as her moaning intensified. She then pleaded with her man not to stop, she clearly wanted release. Her back arched as her hips rose to meet his tongue, she grabbed his hair and let out something like an animalistic growl followed by a long, loud string of expletives. It was a hell of a show.\n\nSarah and I soon shared her urgency. As our unknown friend reached her orgasm, Sarah silently bit into my arm as her body became rigid. Her legs clamped around my hand as she tightened her grip on my cock. She let out a soft groan as she orgasmed.\n\nThe feel of her stroking me, coupled with watching the strange woman have such an intense orgasm, had me hot. But knowing that I brought Sarah to orgasm pushed me to the very brink, and I could no longer hold back. I quickly sat on the side of the tub and grabbed myself to finish, but Sarah pushed my hand aside and took me into her mouth. I was already so close, and the sight of that angelic face looking up at me as her lips engulfed me was overwhelming.\n\nWithin seconds I grunted a warning, \"shit, I'm going to cum!\"\n\nBut, she didn't release me. I emptied my load into Sarah's mouth, she took it all. Then holding my gaze with the most seductive look I've ever seen, she rolled her tongue around the head of my cock lapping up every last drop.\n\nSarah slid beside me on the edge of the tub, and sweetly took my hand while leaning against me. I put my arm around her waist and pulled her close.\n\nShe whispered, \"thanks, it's been a while since a guy has gotten me off.\"\n\nWe were sharing a sweet but awkward moment, and wine seemed to be in order to both quench our thirst and break the tension. So we poured ourselves a glass.\n\nThe woman across the tub suggested, \"Hey, if you're willing to share your wine, we've got a joint we will share.\" And so, we met Dave and Cindy.\n\nThey appeared to be in their early 50's. He was a little pudgy but had one of those round, happy faces that you just could not help but like. Cindy looked like she was pure hell on wheels. She was short, with short red hair. She was rail thin with practically nonexistent breasts accentuated by long puffy nipples. Cindy had one of those mischievous smiles that seem to tell you that she was never bored and was up for almost anything.\n\nWe drank, we smoked, we talked and laughed. They were a great couple, but I had a hard time keeping up with the conversation, I was distracted as I tried to process what Sarah and I had just done. We obviously crossed a line that there was no coming back from. Frankly, I didn't care. This had been brewing for 3 days. I'd deal with the fallout later.\n\nAfter about 15 minutes, I excused myself to go take a leak. It had been a vacation of surprises, but none of them compared to the one I saw when I came back. Somehow, in just a few short minutes, a threesome had started.\n\nSarah and Amy were making out hot and heavy. Dave was sitting on the edge of the tub, and with a free hand, Sarah was stroking his cock. Cindy's hands were under the water, but Sarah's moaning gave me a pretty good idea where they were and what they were doing\n\nI sat down next to Dave, and within a minute, the girls broke up and devoted their attention to us. Without hesitation, Cindy buried her head between my legs and began giving me head. I watched as Sarah started licking Rick's shaft. I was in heaven. Cindy had talent, and she was enthusiastic. Having her tongue swirl around me while watching Sarah stroke, lick and caress Dave's cock was like an out of body experience. This didn't happen to guys like me, this only happened in porn movies and maybe to rock stars.\n\nBecause I had cum only 15 minutes earlier, I had much better self-control. Cindy was taking me deep into her throat with slow, deliberate strokes while simultaneously gently massaging my balls. I didn't think it could get any better until Sarah joined Cindy.\n\nApparently, Dave had shot his load, and Sarah still wanted to play. At first, they took turns taking me into their mouth, but soon they were both swirling their tongues around my shaft and head. Their tongues seem to be everywhere, while simultaneously pleasuring me, their tongues danced with each other in a French kiss around my aching cock.\n\nThe Sensation was intense; made more so by the erotic vision of two women lost in a building passion for each other as they shared my throbbing member. After what seemed like an eternity, I succumbed to one of the most intense orgasms I've ever had. I erupted all over the two girls faces. They both then lovingly cleaned every drop from my rapidly shrinking shaft. Cindy immediately started licking my cum off Sarah's face, who then quickly returned the favor. Again, their bodies came together as they locked in a kiss.\n\nI wondered how far Sarah would go with this little redhead. I suspected she was willing to try anything or everything.\n\nHowever, nothing good lasts forever. A few minutes later, a very loud, boisterous crowd of 4 couples showed up, and we had to end our private little party. Sarah and I stayed just long enough not to appear rude and then said our goodbye's.\n\nAs we walked back to the room, Sarah said, \"damn, this place is like an aphrodisiac.\"\n\nShe was quiet for a few minutes, then added \"my God, did you see her get off? I have never had an orgasm like that. I wish I could.\"\n\n\"Really?\"\n\nShe said, \"oh I've had orgasms, but I can't get really off on just regular sex. Nick was not real big on oral. He would go down on me just long enough to get me worked up, then he'd get excited, jump on, and finish himself off. Half the time he left me hanging.\" She added,\" I've heard about women cuming really hard, but I thought it was just a movie thing.\"\n\n\"It's too bad Nick was such a selfish lover.\"\n\nShe laughed, \"It's too bad Nick was a selfish bastard in general, but I think he was pretty typical in bed. I've never been with a guy who wanted to you know... head south, and stay there.\"\n\nI smiled, \"trust me, they're around.\"\n\nI'm not sure whether or not she was hinting that she wanted oral sex, but I decided right then and there that when we got back to the room, I was going to make Nick look very- very bad. I just wasn't sure how to start it.\n\nAs with the night before, as soon as we got in the room, Sarah dropped her dress and went to the bar. She took a rum and Coke to the bed, sat down and said, \"what a night! I can't believe we did that. I gave a blow job to a complete stranger, in front of his wife! I even made out with a woman. She touched me down there! She even slid a finger in me. I swear, she damn near got me off.\" She then giggled, \"I think I may be turning bisexual or something!\"\n\n\"Seeing the two of you together was hot,\" I said.\n\nShe then looked at me somewhat seriously. \"I never dreamed I'd ever give you a blow job. I don't know what came over me, I just wanted to do it, so I did. Then she pensively added, \"Are we still okay?\"\n\nThis was my opening. In reply, I moved to her at the bed. I took her face in my hands, and tentatively kissed her. To my relief and joy, she kissed me back. Our tongues lightly touched, and quickly, her kiss became much more urgent. Her tongue was exploring my mouth as her hands moved behind my head to pull me close.\n\nI pushed her back on the bed and gently kissed her neck. Her breathing quickened. My hand made its way to her breast and found her erect nipple. I gently rolled it between my fingers. My mouth went to her other nipple as my tongue danced on its tip. I was rewarded with a husky call of my name.\n\nMy other hand replaced my mouth, as I lightly kissed and licked my way down her belly pausing ever so slightly at her navel. She was starting to squirm with every touch. As a thin woman, she had those lovely hip bones that protrude when she lays back, and I nibbled and licked each one. Surprisingly this got quite a reaction, she groaned, and her fingers began to weave through my hair.\n\nMy tongue traced its way down her hip to where her pelvis and inner thigh meet. I had arrived at her most personal place. I could smell the intoxicating musky aroma of her arousal and inhaled deeply.\n\nI believe that pleasuring a woman orally is the most sensual and carnal of acts. Of course, the actual sex act is incredibly personal and intimate. However, as any man can tell you, you can have sex with a woman and still know little more about her than before the act. For a man, sex is more or less a self-gratifying act. We become overcome with the sensation; our focus is centered on the building urgency within our cocks. The pace and rhythm of the act are dictated by our desires and needs.\n\nHowever, when you go down on a woman, the experience is entirely about her. Your focus is on her and her alone. For her part, it is a complete act of trust. Her body is yours to discover. She exposes herself entirely to you; she does this both literally and figuratively. She gives you access to her most secret self. You experience her as few ever will. You become immersed in her scent; her taste becomes your only awareness. Your tongue and fingers explore her and tell you about the feel and consistency of her wetness, they probe inside her and inform more than your cock ever could. You discover her inner contours and how they change as she becomes aroused.\n\nBecause oral sex is a giving act, you seek to become in tune with her body. If you listen to it, her body will speak to you. And if you follow her lead, you are granted witness to her sexuality, her true self, and in at least that moment, she gives herself to you completely. The intensity of oral sex causes her to drop pretense. She becomes her primal self, free from embarrassment, and free from restraint. She grunts, screams, begs, clutches, and demands. Her world is lost in need. For that short, exquisite time, She is yours. This is why I love to go down on women, and why I relish every opportunity to experience them.\n\nAs I came to her sex, I was not thinking these things, but I was feeling them. I wanted to explore her. I wanted to lose myself in her. I kissed and licked the crease of her uppermost thigh; sliding around her swollen labia. Her hips moved, trying to make contact, but I wanted to tease her. I placed my mouth on her pubic bone; a dragged my tongue down her pubic hair, stopping just short of her clit. Again, her hips rose to meet my tongue, but I denied her. Rather, I blew gently on her clit; eliciting a tiny gasp. I then moved to her other thigh and as before I nibbled and licked next to her labia. I then ever so lightly brushed my lips against her sex. I let my warm breath tease her. Then lightly flicked my tongue on her outermost lips. I could see and feel her wetness. For the first time, I tasted her arousal. I smelled her want, and I felt her heat.\n\nI wanted to go slow, but she was not having it.\n\nShe groaned, \"God, you're teasing me. Please, give it to me.\" With that, she pulled me to her.\n\nI gently took one of her lips into my teeth; I sucked on it and, licked it. She squirmed; she sucked in her breath and held it. She then let out a long soft moan. I circled my tongue across the entrance of her pussy up towards her clit, stopping just short. Then danced my tongue back down and entered her innermost self. My tongue probed her as her breathing became heavier. Soon my tongue was making long, deliberate strokes the length of her pussy, that finished hard against her clit with each lick. Her hips rose and fell in rhythm to my attentions. At times, I let my tongue dance around her clit.\n\nShe grunted something I could not understand. With both hands, she grabbed my hair. Her legs wrapped around me as if to prevent my escape.\n\nIn a throaty broken voice, she gasped, \"please Timmy, I'm so close. Don't stop. I will let you fuck me, I will do anything you want, just please don't stop, just let me cum.\"\n\nI intensified my efforts as my tongue danced on her clit. Her body went rigid as she held her breath. After a long second, she let out a loud moan that was nearly a scream. Her nails dug into my scalp, her legs clamped on to me and pulled me to her. Time froze for a moment and then she went limp.",
        "Panting, she breathed out, \"fuck, that was incredible.\"\n\nI was not ready to vacate heaven. I abandoned Sarah's now sensitive clit and began gently licking the inside of her upper thighs, and then back to her labia. I next slid my tongue south to her Rosebud. My tongue danced around the rim. She raised her hips to give me better access.\n\nStill panting, she said, \"mmmm, I like that.\"\n\nI continued rimming her ass hole for several seconds before returning to her pussy. I again sank my tongue deep into her and then dragged it up towards her clit. She quickly began to respond.\n\n\"Yes baby, I want more.\"\n\nAgain, I plowed my tongue through her; each time lingering and encircling her clit. I learned that she was most sensitive on the right side of her hood. After several strokes, I once again renewed my assault on her hot button. Carefully, I took her clit between my teeth and rapidly flicked my tongue across her. She went stiff. I inserted two fingers into her. While continuing flicking my tongue on her swelling clit, I slowly fucked her with my fingers. Her breathing became faster and deeper. Her hips quickly found a rhythm with my finger thrusts as she urged me deeper. While still teasing her clit, I curled my index finger and found her G spot. I gently massaged it.\n\nShe gasped, \"what are you doing, you're going to make me pee.\"\n\n\"You won't pee, just relax and go with it,\" I whispered.\n\nAs I continued massaging her G spot and teasing her clit with my tongue, I could feel her pussy begin to contract and tighten. I knew she was close. I slipped my pinky into her ass. She was now so wet her juices had run down her butt crack; I was able to enter her without any resistance.\n\nFeeling me in her ass sent her over the edge. Her pussy spasmed, she grabbed my hair and her legs wrapped around me again. Her hips began to buck almost wildly. With difficulty, I kept my mouth on her.\n\nShe practically shouted, \"fuck, fuck, I'm cummmming! Mother fuck, suck me, suck my cunt!\"\n\nAnd cum she did. It was as if a dam had broken; she flooded my mouth with her honey. As she was cuming, I continued massaging her G spot and lapping at her clit. She momentarily relaxed and then started another orgasm. She was adrift in pleasure as she writhed on the bed; alternately groaning and calling my name. For almost 20 seconds she was lost in ecstasy. She was bathed in sweat, her face was flush, and her breathing was reduced to rapid gasping.\n\nFinally, she pushed my head away from her and gasped, \"no more, I am going to pass out.\"\n\nI laid my head on her stomach, and she stroked my hair. We laid together like that for several minutes. Finally, she propped herself on her elbows, still short of breath.\n\n\"I've never felt anything like that before and my life. What did you do to me?\" She then looked between her legs and studied the impressive wet spot on the bed.\n\nI knew better than to say it, but I couldn't help but think of how alike she and Joanne acted bed.\n\nStill looking at the wet spot, she said, \"I've never done that before.\"\n\n\"It's not unusual, a lot of women ejaculate; especially if their G spot is massaged.\"\n\nShe said, \"I have been with a couple guys, none of them have hit that spot. It's intense; I came three times. I didn't know I could get off back to back like that. This was worth the wait.\"\n\n\"Worth the wait?\"\n\nShe gave me a wry smile, \"I've wanted this for a couple of days now. Hell, to be truthful, I've had a few fantasies about you over the years.\"\n\n\"I wish you had given me a sign a few days ago!\"\n\nShe gently chastised me, \"man, you are a slow one. I've done everything but jump on you. For the record, when a woman stretches out naked on a bed in front of you, it's always a sign, dumb ass.\"\n\nShe then reached up and pulled me in for a kiss. It was a long, lingering kiss. When she released me, she licked her lips and said, \"hmm, so that's what pussy tastes like. I see why you like it so much.\"\n\nMy mind flashed back to what JoJo had said when she was talking dirty in bed. In the heat of passion, she had asked if I thought she and Sarah tasted the same. In my head, I said to Joanne, yes baby, she does taste just like you.\n\nSarah collapsed on the bed with a contented sigh, and I went into the bathroom to shower.\n\nAs I was walking away, I heard a soft voice say, \"Tim, my sister is a very lucky woman.\"\n\nWhen I returned, she was sound asleep. I looked down at her in all her beautiful naked glory and thought, how the hell did I not see how incredible she was before.\n\nI woke her up enough to get her under the covers and climbed in next to her. Without hesitation, she draped herself on top of me and quickly fell asleep. We held each other all night as lovers do.\n\nDay 7: \"Something In The Way She Moves\"\n\nAround 9 AM the next morning I awoke to Jamaican sunshine and the sound of ocean waves lapping on the shore. I had learned much about Sarah this week, including that she was a committed cuddler in bed. As with most mornings, her body was draped on top of me with her face buried in my armpit. Trying not to wake her, I slipped out of bed and stumbled to the bathroom.\n\nWhen I came out, she was awake and sitting up stretching. She immediately got up and came to me. She wrapped her arms around my waist; raised on her tiptoes and gave me a quick kiss.\n\n\"What was that for?\"\n\n\"That was for the most intense night of my life\" was her reply.\n\nShe then patted off to the bathroom, scratching her ass as she went. I couldn't help but smile at that sight. In a short week, we had become so familiar and comfortable with each other. I stretched out on the bed and contemplated how awesome this vacation had turned out. I also wondered how much of it I was going to share with Joanne when I got home.\n\nSarah came out of the bathroom and sat immodestly cross-legged on the bed in front of me.\n\nI asked, \"this is our last full day here, do you want to do anything special? We can take a catamaran ride, or maybe go off resort for an excursion.\"\n\n\"If this is our last full day, I think I would rather spend it on the beach.\" After a pause, she added, \"going back to the real world is going to suck!\"\n\n\"Yeah, Jo and I share a joke each year; we say, \"reentry is a bitch!\"\n\nWe dressed and headed off for breakfast. When we returned, I started packing our beach bag. I couldn't help but watch as Sarah stripped naked again and began applying sunscreen. Watching her rub the cream all over her body was seductive, and once again she inspired an erection.\n\nShe walked over, handed me the bottle, and said, \"do my back.\"\n\nBeing the gentleman I am, I gladly complied. I thoroughly rubbed the cream into her shoulders while not poking her butt with my boner. I then started working my way down her back, she raised her arms and told me not to miss her sides. I lathered up both hands and started at her hips, working my way up towards her armpits. I couldn't resist the temptation and slid my hands to her breasts.\n\nShe offered no resistance but said, \"I can do those myself, get back to work.\"\n\nAnd so, I returned to her back. When I reached her lower back, I re-lathered my hands and then started massaging her plump ass. I didn't limit myself to her cheeks and slid my thumbs down each side of her ass crack just barely brushing her pussy. She let out a slight moan.\n\nI then knelt down and starting at her ankles, applied the sunscreen to the back of both legs. When I reached her uppermost thighs, I spread more sunscreen to my hands and then gently worked it into Sarah's inner thighs. At the top of the thighs, I Again made contact with her now moistening pussy.\n\nShe turned around, \"someone's feeling pretty frisky this morning. I can see that we are not going to get out of this room until you've been cooled off a bit.\"\n\nWith that, she knelt down in front of me and slid my gym shorts down. My erection immediately popped into her face. She took me into her hand and gently stroked me before taking me into her mouth. Unlike the night before, I was able to muster a little self-control and so was able to enjoy the sensation for a while. She was good, if for no other reason than because she seemed to genuinely enjoy pleasuring me. Unlike many women who close their eyes during oral sex, she maintained almost constant eye contact with me. The sight of those smoky blue eyes looking lustily at me while my cock slid in and out of her mouth was unbelievably erotic.\n\nShe swirled her tongue around the end of my cock and said, \"cum for me, Tim. Cum on me.\"\n\nI exploded while she stroked me. My cum covered her face and chest. As I was cuming, she circled her tongue across my cock and then caressed it with her cheek; spreading the jizzum on her face. As she stood up, she sucked me of her fingers.\n\nWith a big grin, she said, \"Tim, you have turned me into such a naughty little hussy.\" She then turned and went into the bathroom to clean up.\n\nWhen she came back, she dug out the big frumpy T-shirt that was her sleepwear the first two nights we were together. She threw it over her naked body, put on her sunglasses, and announced, \"I'm ready, let's go!\"\n\nI couldn't help but think what a difference a week makes. This slightly prudish woman was now going to proudly strut out of our hotel room wearing nothing but a dangerously short T-shirt.\n\nIt was about 10:30 when we arrived at the beach. Like most mornings, it was reasonably quiet, and we were content to soak up the sun. As it was not crowded, Sarah decided to use her cell phone to snap some pictures. Like most first-time visitors, she wanted some snaps of the ocean and the palm trees. Watching her wander around the beach naked without inhibition was somehow gratifying, I couldn't help but think that she had become a natural-born nudist.\n\nWhen she got back to our beach chairs, she asked if she could take a picture of me.\n\n\"I promise I won't show it to anybody. It's just one to remember you and this place.\"\n\nBeing the smart ass I am, I said: \"as long as you promise not to do anything naughty while looking at it.\"\n\nShe leaned in close and whispered, \"no promises.\" She then took a picture of me in all my glory.\n\nShe sat down next to me and said, \"speaking of being naughty, maybe in the room tonight. I can get a selfie of me with your cock in my mouth?\"\n\n\"If you keep talking like that you might just get your chance right now. And, since we're taking pictures, I'd like one of you too.\"\n\nShe stretched out seductively on the beach chair and said, \"I'm not even going ask if you're going to be naughty with my picture. You sir, are a bad -- bad boy.\"\n\nI snapped three pics. Sarah must have liked the idea that I would use her picture as erotica because, on the third one, she opened her legs wide, completely exposing herself to the camera. As I was finishing the last shot, Tammy sauntered over and put her arm around me.\n\nImitating a curious child, she asked, \"whatcha doin?\"\n\nI answered, \"taking a few shots for the Christmas newsletter.\"\n\nShe chuckled, \"do you want me to get a picture of the two of you together?\"\n\nWith that, Sarah jumped up, and we posed in front of the ocean. Tammy took several pictures. In the first pose, we were strategically covering ourselves. By the last few shots, we were letting it all hang out.\n\nTammy then asked, \"would you take a few of Mike and me?\"\n\nSo, the four of us wandered off to a remote part of the beach and using their phone I took several pictures of them. A funny thing happened, I've been naked around Tammy for the better part of 4 days, and little Timmy behaved himself very well. However, shooting nude pictures of another couple inspired an erection, I guess it was ok though because Mike was also getting hard.\n\nTammy noticed and exclaimed, \"look Sarah, two gorgeous hunks of meat!\" She quickly added, \"I want a picture of this, go stand by each other\"\n\nIn unison, we both replied, \"Oh, hell no!\"\n\nAgain, imitating a child, she kicked the sand and said,\" oh shucks.\"\n\nSarah didn't miss the opportunity to be mischievous. She chirped in, \"how about if you pose with Tammy in between you?\"\n\nMike looked at me and said, \"you cool with that?\"\n\nI looked around and said,\" sure why not, but make it quick, we're going to get kicked off the beach.\"\n\nTammy assumed the position between us; put an arm around each one of us, and Sarah snapped the picture. Quickly, Tammy then grabbed each of our cocks and Sarah snapped another quick one.\n\n\"Hey,\" I said.\n\nLetting go, Tammy said, \"who are you kidding, you loved it!\"\n\nSarah suggested, \"Tammy kneel down.\"\n\nShe did, and Sarah zoomed in for a picture of Tammy with two hard dicks by her face.\n\nTammy grabbed us and gave each cock a quick kiss on the head before standing up. \"Thanks boys!\"\n\nThanks to our hard on's Mike and I had to hang out for a few minutes out of sight before we could go back to our the chairs.\n\nOnce the girls were out of earshot, Mike shrugged, \"dude, sorry about Tammy getting carried away.\"\n\n\"Hey, if it's good with you, it's good with me.\"\n\n\"Are you kidding,\" he said, \"getting to touch another guy's cock is going to get her all worked up. I am so going to get a wild fuck tonight. Last night all she could talk about was Amy licking her tit at the bar. She damn near raped me!\"\n\nWhen we got back to our chairs, I suggested that Sarah should snap chat one of our pictures to Joanne. She selected one of the full-frontal photos and added the caption \"wish you were here!\" Within a minute, we got the response, \"wish I was in the picture too!\"\n\nA few minutes later, a text came in on my phone. It was from Joanne -- \"it looks like you're taking good care of my little sister!\" Attached was a winking smiley face emoji. A Few seconds later, another text chimed. In it was a nude selfie of Joanne reflected in a mirror with the caption, \"thinking of you.\"\n\nSarah asked, \"was that from Joanne?\"\n\n\"Yup.\"\n\n\"She's not pissed, is she?\"\n\nI showed her both messages, \"you tell me.\"\n\nShe laughed, \"my sister rocks!\" She studied the picture closer and then exclaimed, \"holy shit! That's the store. She took a naked selfie in the store, in the middle of the day!\"\n\nBy afternoon, Sarah and I, Mike and Tammy, Rick and Amy and Darren and Diane were all in the pool partying. Although we were considerably tamer, I couldn't help but notice a lot of casual body contact. The sexual chemistry was building between us. At one point I noticed, that Rick had his arm around Sarah. He also put his hand on Dianne's ass, which she quickly pushed away. I also saw Amy wrap both arms around Darren's neck as she floated in the pool.\n\nFor me, the highlight of the afternoon was when Dianne accidentally backed up into me. She paused for a second, wiggled her ass against me then grabbed my cock and said, \"whoops, sorry.\"\n\nI also noticed Sarah and Dianne in deep conversation, and then Sarah reached out and cupped both of Diane's breasts. When I questioned Sarah what was going on, she said that they were talking about her breast implants, and she wondered what they felt like.\n\nI couldn't resist, \"what do they feel like?\"\n\n\"I don't know, they feel like boobs, I guess. Feel them for yourself and tell me if they feel different than mine.\"\n\nRemembering her reaction to Rick touching her ass, \"I don't think that would be a good idea.\"\n\n\"Trust me, she won't care.\" With that, Sarah called Diane over.\n\n\"Diane, Tim wants to know what your boobs feel like.\"\n\nDiane took both my hands and placed them on her breasts. \"What do you think?\"\n\n\"Lovely,\" was all I could come up with.\n\n\"I wish they felt more natural like Sarah's,\" with that she reached over and massaged one of Sarah's breast. Sarah's nipples immediately hardened.\n\nDarren called Diane over to him. She smiled and waded away.\n\nSarah leaned against me, and I put both arms around her waist.\n\nShe leaned back and said, \"that girl is into you.\"\n\n\"I think she wants you as much as she wants me.\"\n\n\"Well, if I were ever going to be with a woman, she would be a good first choice.\"\n\nI was a little surprised that Sarah didn't reject the idea out of hand. \"Would you be into that?\"\n\nShe hesitated a moment, \"I don't know. I suppose I've fantasized about being with a girl a few times, but never really seriously considered it. A threesome might be kinda hot though.\"\n\nI pulled her tighter to me and thought, Man, I wish this was not our last day here.\n\nBy midafternoon, clouds had rolled in, and it was becoming increasingly windy and cooler. Eventually, a light drizzle started. Some sought shelter, while some wrapped towels over their heads. Many, including our group, found their way to the hot tub. The light drizzle did not dampen our spirits as we all drank and talked.\n\nHowever, soon the drizzle became a hard rain. It was clear that the afternoon was a wash. As several couples started to leave Darren invited the gang to their room for a \"nude beach\" mixer party. As it turned out, they were in the same building as us, just up one floor. Everyone agreed to meet in 30 minutes.\n\nWhen we got back to the room, Sarah suggested that we grab a quick shower before going.\n\nI liked the idea and said, \"ladies first.\"\n\nShe gave me a sly grin. \"It's a big shower, we will both fit.\"\n\nWho could turn down an offer like that? And so, she and I slipped into the shower. As we left the warm water wash away the rain's chill, our bodies came together. She went up on her tiptoes, wrapped her arms around my neck, and gave me a quick peck. The feel of her wet body against me was electric.\n\n\"Be a sport and wash my back,\" she suggested.\n\nI lathered my hands up and began washing her shoulders and back; slowly making my way down towards her ass. My hands stroked and massaged her ass, which elicited a gentle sigh. I re-lathered my hands, knelt down, and began washing her lower legs. Slowly, I made my way up higher and higher towards her thighs. She opened her legs to give me better access. My hands finally made their way to her uppermost thigh and brushed against her crease. I slid my hand across her pussy and up the crack of her ass.\n\nAt this, she moaned sweetly, \"this is heaven.\"\n\nI repeated the process with her other leg paying particular attention between her thighs. After all, cleanliness is next to godliness.\n\nI then stood behind her, pulled her close to me, and wrap my arms around her. My hands made their way to her breasts as she leaned back into me. My swollen cock was pressing against her ass. She opened her legs, and it slipped between them. She reached down and took me into her hand. She then rubbed my cock between her lower lips and slightly swayed her hips to drag me through her.\n\nI was so close, so damn close to what I desperately wanted. With just a slight change of angle, I could enter her. I was pretty sure she would let me, I was almost sure she wanted me to, but this was a line that we should not cross. Up till now, Sarah and I had really done nothing, Joanne, and I had not done with other couples. Considering some of the cryptic comments made by her, I had convinced myself that Jo would be okay if Sarah and I have a little fun. In fact, she may have even intended it. But actually, fucking her sister was something different.\n\nAs if reading my mind, Sarah put some distance between us and turned around. Her soapy hand grabbed my erection and started stroking. It felt good, but I was feeling inspired. There is one significant advantage to having sex with a small woman. She makes you feel large and powerful.\n\nI pushed her to the back wall of the shower, went down on one knee, reached between her legs, and lifted her high enough that her legs could slide over my shoulders. Her ass was resting on my forearms as she was pinned between the wall and my shoulders. Her pussy was in my face. Then holding her suspended in the air, I gave her the best tongue lashing I could muster. I think the feeling of being overpowered and helpless excited her.",
        "\"God, you're a sexy man\" she breathed,\n\nShe came quickly, and she came hard.\n\nWhen we finished, we cleaned up in earnest and got out of the shower.\n\nWhile toweling off, she reached up and kissed me again. \"Timmy, you don't know how much this vacation has meant to me.\"\n\nI gave her a hug, \"me too, Sarah.\"\n\nShe said, \"we need to hurry up and get over to Darren and Diane's.\"\n\n\"Are you sure you are ready to go over there?\"\n\nShe looks surprised, \"what's the problem?\"\n\n\"The way things have been going, it may turn into a pretty wild party.\"\n\nShe shrugged, \"I don't think so. At least everyone will have clothes on for a change. And besides, maybe a little wild wouldn't be all bad.\"\n\nI nodded agreement, but internally I thought that at least two of these couples are likely in the lifestyle. The combination of booze and horny people in a hotel room could get interesting.\n\nEven though it only took 30 seconds to walk to Darren and Diane's room, we were late. We knocked on the door, and my suspicions were immediately confirmed. Diane answered the door completely naked. She hugged both of us and ushered us in. As we walked into the room, we found that Rick and Amy and Mike and Tammy were already there and already naked.\n\nA welcome cheer went up, and an apparently drunk Darren slurred, \"welcome to the nude beach part two.\"\n\nI was still pondering what I was seeing when I noticed that Sarah was already undressing. As she was pulling her dress over her head, Diane generously began to help her. The dress came off, leaving Sarah in nothing but her panties. Diane knelt before Sarah and slowly slid the panties off of her. The gesture did not seem to affect Sarah in the least. Diane then came over and started unbuttoning my pants.\n\n\"I can see you need some help,\" she said.\n\nAs I took off my shirt, she knelt down and slid my shorts off. My swelling dick greeted her.\n\n\"I can see your happy to be here.\"\n\nShe gave it a quick tug, stood up, and joined the party.\n\nAnd so, the afternoon had begun. Drinks were consumed, flirting was rampant, and conversations went from the usual patter about the resort to raunchy innuendo. In short, eight naked people were having a ball. The only downside was that Darren was getting almost embarrassingly sloshed.\n\nEventually, the inevitable began. Our host's room featured a bed, a bar, a large chair, and sofa. Tammy was snuggly sandwiched between Mike and Rick on the couch. And although young Tammy was the most reserved of the bunch, it was apparent she liked sitting between two naked men. Amy was sitting in the chair.\n\nSarah and I were stretched out on the bed with our backs against the headboard. Diane was sitting at the foot of the bed while Darren had found a spot on the floor. Eventually, Diane came up and laid next to me.\n\nTammy looked over at the three of us and said, \"you guys look so hot. I wish I had a body like either Diane or Sarah.\"\n\nI'm not sure if Tammy was fishing for a compliment, but she immediately received several. Mike immediately assured her that she was the sexiest woman alive. Amy assured her that she would love to have her tits. Rick chimed in that he would give anything to play with her nipples.\n\nAt this, Tammy lifted her breasts and said, \"They are pretty nice, aren't they?\"\n\nThat was all the encouragement Mike needed, as he placed his mouth on his wife's left nipple and began sucking it. The attention had an immediate effect on Tammy, who closed her eyes, let out a gentle sigh and pulled his head closer. Rick took her other breast into his mouth and started tonguing her erect nipple. The effect on Tammy was electric, she started squirming, and her hand went between her legs.\n\nShe purred, \"oh God, that feels so good.\"\n\nMike's hand replaced hers as he began massaging her pussy. Tammy was in heaven. She opened her legs wide to give her husband access. Soon, Rick's hand was at her pussy as well. Mike and Rick's eyes locked, Mike smiled and moved his hand away, leaving his wife's pussy at Rick's disposal. Mike kissed her.\n\n\"Do you like Rick playing with your pussy baby?\"\n\nShe gasped, \"yes!\"\n\n\"Yes, what?\"\n\nBetween heavy breaths, she said, \"yes, I like him playing with my pussy. It feels so good.\"\n\n\"Do you want Rick to eat your pussy? Would you like him to lick you?\"\n\nShe gasped, \"would that be okay?\"\n\n\"Ask me, baby, ask permission for Rick to lick your pussy,\" he said.\n\n\"Please baby, please let Ricky eat my pussy!\"\n\n\"Will you suck my cock while he eats your pussy?\"\n\n\"Yes, yes! I want your cock.\"\n\nRick slid to the floor and buried his face between Tammy's open legs. Mike stood up, grabbed his wife by the hair, and guided his erection to her waiting mouth. Amy went to the couch and immediately began caressing and licking Tammy's breasts.\n\nDuring these events, Sarah's hand found its way to my erection, and she began slowly stroking me. Quickly, her hand was joined by Diane's. Soon, Diane's head lowered itself to me. Sarah held my Dick while Diane took me in her mouth. After a few delicious strokes from Diane, I was in Sarah's mouth as well. They took turns at first, and then together, their tongues danced up and down my shaft and around the head. Finally, their lips met in a kiss around my member. The kiss intensified, and they turned their attention to each other.\n\nI was in heaven. These two beautiful women were pleasuring me, and now each other over the top of me. I placed a hand between each of their legs and began massaging their soaked pussy's as they kissed. This was Sarah's first real interaction with another woman, and it was evident that she was into it. I slid out between the two of them, and they came together as would-be lovers.\n\nThey lay down beside each other on the bed locked in an intense kiss, their legs wrapped around each other as their hands began exploring the other's body. It was a beautiful sight.\n\nThe sound of Tammy's moans drew my attention to the couch. I was stunned to see what had developed so quickly. Tammy was slumped on the couch. She had both Mike and Rick's cock's in her face alternately licking the two of them while Amy was eagerly lapping at her pussy. Darren was stroking himself while alternately watching the action on the couch and what his wife was doing with Sarah on the bed.\n\nQuickly, both Rick and Mike unloaded on tammy's face. She groaned in appreciation.\n\nDiane had begun sucking on Sarah's breasts and then licking her way down to her sex. Sarah was lost in rapture, and the touch of Diane's tongue on her caused her to writhe on the bed. Diane knew what she was doing. There was no timidity in her assault on Sarah's puss, and Sarah was in ecstasy. She reached out with one of her hands and grabbed my aching cock. I was astonished that she was even aware I was there.\n\nAfter several minutes, Sarah pushed Diane's head away from her. She rolled Diane over on her back; she kissed her passionately and then went to her pussy. Sarah was tentative at first, kissing Diane's lower lips and rubbing her with her thumb. Soon, however, she tasted Diane with her tongue. Lightly at first, but quickly she was administering long slow licks through her labia up to her clit. Diane moaned, and her hips rose to Sarah's tongue. It was then that Sarah discovered the intoxicating feeling of causing arousal in a beautiful woman. Encouraged by Diane's reactions, she began pleasuring her in earnest. She probed Diane deeply with her tongue before finally sucking and licking her clit. Diane succumbed to orgasm. She ground her hips into Sarah's face, her fist clenched the sheets, her body went rigid as she gasped.\n\nThrough this, Sarah continued sucking and licking Diane's sex. As her body relaxed, Diane pushed Sarah's head away and positioned Sarah on the bed. She then placed herself on top of Sarah in a 69 position. As the two women were lapping at each other's pussy's, I inserted three fingers into Sarah's soaking wet box and began finger fucking her. Her hips wriggled with each thrust.\n\nAfter a few seconds, she came out from under Diane. She kissed me and said, \"I need you to fuck me. Right now!\"\n\nShe then reassumed her position between Diane's legs. I placed myself between Sarah's legs, and Diane grabbed my cock and guided it toward Sarah's waiting hole.\n\nIt is at this moment that our story began. To date, this was the most erotic moment of my life. My cock was buried in my beautiful sister in law while the stunning Diane rode her face.\n\nThe feeling of a woman's hand guiding me into another woman was unbelievable. As I slowly entered Sarah, I marveled at how tight she was, and how incredibly wet. I slowly buried myself in her, and I heard a muffled moan from underneath Diane. After entering Sarah my full-length, I slowly retreated out of her again. Diane's tongue went to Sarah's clit, I took several short strokes in and out of Sarah, leaving room for Diane's tongue to work its magic.\n\nSarah must have been approaching orgasm because her pelvis was rocking with each stroke and lick. My cock slipped out of Sarah, and so I slid it into Diane's mouth. The feeling of moving from a warm pussy to warm mouth was incredible. And so, for a few minutes, I alternated between the two.\n\nSarah came quickly and hard. The feeling of her pussy clamping down on my cock was too much, and I needed to let go. Although I didn't want to, I pulled out of her and buried my cock in Diane's mouth and shot my load.\n\nSarah's orgasm, coupled with a load of come shot down her throat sent Diane over the edge again.\n\nExhausted, the three of us collapsed in a pile of arms and legs. We looked over at the couch. Tammy was now lying on the couch as Rick fucked her. To my surprise, somehow, Amy had managed to get Tammy between her legs. I guessed that Tammy had never been with a woman, and probably never even considered it. For that matter, I'm pretty sure that Tammy never dreamed of playing around with another man. Mike, on the other hand, was definitely living out a dream. But it was a dream that came true, here was Tammy getting fucked by a strange man in front of the group of onlookers, and she licking her first pussy.\n\nIt was an afternoon of surprises. I just fucked my sister-in-law who two weeks ago barely spoke to me. And, I had the extreme pleasure of having a threesome with one of the most beautiful women I've ever seen. But the surprises were not entirely done yet\n\nMike was stroking his cock, watching his wife with Rick and Amy. He came to the bed, looking for a place to put his hard-on. He took Sarah by the hand, and she willingly positioned herself on her hands and knee's to accommodate him. Rick entered her quickly and began to aggressively thrust into her. She urged him on to go faster and harder. His pace quickened, there was a distinctive slapping sound, as his body collided with her ass on every stroke. He roughly grabbed her breasts. Their sex was primal.\n\n\"You want it don't you. You want me to fill that tiny cunt!\"\n\nSarah growled, \"fuck me hard, dammit! Pound my pussy mother fucker!\"\n\nHe gave her a slap on the ass.\n\nSarah gasped, \"Is that all you got? Spank that ass!\"\n\nHe slapped her ass harder, and she groaned. To see such a cute, innocent-looking girl behave so animalisticly was too much for him. Within a couple of minutes, he grunted that he was ready to cum. He pulled out of her, and his load exploded all over her backside. Without a word, he walked over and sat next to Amy on the couch.\n\nI had mixed emotions watching Sarah and Mike. There was no denying that watching her get hard fucked was a turn on, especially her reaction to it. But something also felt wrong. Maybe I was feeling protective of her, and Rick's treatment of her seemed disrespectful. Could it be that I was jealous? Was I starting to feel possessive of Sarah? Whatever was going on inside me, I knew this much; I certainly saw Mike differently.\n\nRick let out a grunt as he finished inside Mike's wife. Tammy lay still for a second, and then pulled herself out from underneath Amy's pussy. Amy climbed onto Rick's lap. Breathing heavily, and completely satiated, the sexual tension in the room deflated and we all retreated into our own thoughts.\n\nTammy lay still for a few minutes, and as I watched her, I saw the weight of the realization of what she and Mike had just done manifest on her face. I remember feeling sympathy for her. Here she was, a young, and likely inexperienced farm girl, who let her passions run away with her. Now it was over, and she suddenly found herself naked in a room full of strangers, covered in cum, and sweat. She had been used for entertainment by two men and a woman in front of an audience. She told Mike that it was time for them to go. She got up and threw on her blouse and shorts and headed for the door. She didn't bother to grab her bra or underwear, nor did she wait for her husband to catch up.\n\nI couldn't help but wonder what she was feeling. Was it shock, remorse, confusion or excitement? I concluded it was likely all of the above. I also couldn't help but wonder what Sarah was feeling as she lay there, snuggling between Diane and me.\n\nAs the door closed behind Mike, Amy said, \"looks like our little farm girl scared herself.\"\n\n\"I hope she's okay,\" whispered Diane softly.\n\n\"She and Mike have been working up to this all week. She wanted some new meat, and she got it. She will be fine.\" Rick said offhandedly.\n\nThe callousness of Amy and Rick had a chilling effect on me, and apparently Diane as well.\n\n\"It's getting close to supper time, and we all need showers. I think it's time we call it a day.\"\n\nWith that, Rick and Amy and Sarah and I dressed and headed back to our rooms.\n\nWhen we got back to the room, I hugged Sarah and asked: \"that got pretty wild, are you okay?\"\n\n\"Wild is an understatement. That was the hottest sex I've had in my life. Diane was so sexy, being with a woman was so intense. She was so soft, touching her was such a thrill. I have no regrets at all. As it turns out, I like girls a lot.\"\n\n\"So you're okay that you and I, you know, did the deed.\"\n\nShe put her arms around me, \"at that moment, I needed to get fucked. Honestly, I would have fucked anybody. But I want you to know that I'm glad it was you. I don't know how to explain it, but you and I kind of have a bond.\"\n\n\"Are you okay with what Mike did to you?\"\n\n\"I'd be lying if I told you I didn't absolutely love it. It was raunchy and dirty, and I guess I kind of wanted that. But yeah, after the fact, I sort of have mixed feelings. The truth is it reminded me of fucking Nick an that's kind of creepy. But, I used Mike, and he used me, so it's all good I guess.\"\n\nWith that, she started taking off her clothes. \"I am in desperate need of another shower.\"\n\n\"I don't know about you, but I'm not up for having supper with the gang tonight. It would just feel awkward, how about we order room service?\"\n\nShe smiled, \"that sounds good, let's stay in the room tonight.\"\n\nAs she headed off to the shower, I went to the bar to make a drink. A few minutes later, there was a soft rapping at the door. I went to the door, and there stood Diane in a bathrobe.\n\n\"Can I come in?\"\n\nI opened the door, and she glided into the room. Surprised, and not sure what else to say, I remarked: \"long time no see, what brings you here?\"\n\n\"Darren passed out on me, and I need some company. Am I intruding?\"\n\n\"Of course you're not intruding, I am always happy to see you.\" Trying to be charming, I added, \"especially in a bathrobe.\"\n\nWith that, she dropped the robe to the floor and standing naked before me; she said, \"how happy?\"\n\nI took her supple body into my arms and kissed her, \"very happy.\"\n\n\"Will Sarah mind?\"\n\n\"Sarah has a thing for you, I think she'll be thrilled to see you here.\"\n\n\"Sarah's magical, but right now, I want you. I've had my eye on you for three days, and I didn't want to miss my chance.\"\n\nI steered Diane to the bed and pushed her down on it. I tore my clothes off as fast as I could and bent down and kissed her again. She met my kiss passionately, our tongues intertwined. Her arms went around me, and one of her legs hooked around behind me. I took one of her breasts in my mouth and gently teased her nipple.\n\nShe sighed, \"yes, Timmy, like that. Take it slow.\"\n\nI moved to her other breast, this time nibbling on her now erect nipples. I took her breasts in my hands, they were very firm and perfect. I stood up momentarily and gazed down at the sight of her. Stretched out before me, mine for the taking, was the most erotic image I think I had ever laid my eyes on. A perfect body, flawless skin, and the face of a movie star. Her long hair had fallen about her like a halo. My eyes wandered to her waiting sex. Waxed flawlessly, her smooth pussy beckoned. I wanted her badly, to touch her, to taste her, to have her. I could see her arousal glistening on her pussy. But I was a little nervous, a little hesitant, perhaps I felt a little intimidated. She was almost like an untouchable work of art.\n\nDianne made it clear that she was a woman, not a statue. She reached for me and whispered, \"take me.\"\n\nMy mouth went to her, and again, I tasted her. As my tongue found her inner self, she moaned. I could feel the heat radiating from her. As my tongue probed her and licked her, my fingers entered and explored her. She felt so different than Sarah, yet every bit is lovely.\n\nWithin a few minutes, I felt her inner walls tightening around my fingers. Her back arched, her breathing became erratic, and her hands grabbed my hair and pulled me to her. Suddenly she convulsed in orgasm.\n\nJust then, I felt Sarah lay down on the bed next to her. I looked up and saw her still wet and nude, stroking Diane's hair. Sarah sat up and placed Diane's head in her lap, and she watched as I opened Diane's legs and entered her. Diane's arms went up, she stroked Sarah's face gently, and then they held hands as I slid my cock ever deeper into Diane.\n\nI longed for this from the moment that I first laid eyes on Diane. But not in my wildest dreams did I think it would ever happen. Now, to have Dianne with Sarah looking on was an erotic dream come true. Diane's pussy was like velvet. It seemed to almost caress my cock. I made slow, deliberate strokes deep inside of her. Her legs wrapped around me and her hips rocked to take me in deeper. We moved in a perfect synchronized rhythm.\n\nIn a soft, seductive voice, she sighed, \"yes Tim, make me your own.\"\n\nI looked down at Diane, her chest was flush. Her eyes were closed, and she had a look of ecstasy on her face. My gaze was then drawn to Sarah. She was looking intently at me, smiling sweetly. She was gently caressing, Diane's face, breasts, and stomach.\n\nDiane's breathing and movement became more urgent as she approached orgasm again. I quickened my pace, and the sensation of her began to overwhelm me.\n\nIn between gasping breaths, she urgently pleaded, \"harder baby, don't hold back!\"\n\nIf I had any control before, it was gone now. I buried myself in her as deeply as possible. I frantically pumped her as fast as I could. She bucked wildly to keep up. She reached up and grabbed one of Sarah's breasts, and with the other hand Dianne clutched Sarah's hair and pulled her to her mouth. She moaned something unintelligible into Sarah's mouth and then surrendered to orgasm. I emptied myself deep inside Dianne.\n\nAs soon as Diane began to relax, I bent down and kissed her. She kissed me passionately but softly. She breathed, \"thank you Tim, that was incredible.\"\n\nSarah smiled at me with a devilish grin, \"yes Tim, that was incredible.\"\n\nWe laid together for a while, I then called room service and ordered supper for three. I must say that the room service waiter damn near dropped the tray when he walked into the room and saw the girls stretched out nude on the bed. I can't blame him, they were a vision to behold; one tall, one short, one dusky, one pale, one blond, one brunette, both lovely. He gave me a sly thumbs up as he left.",
        "We spent the rest of the evening cuddled on the bed with Dianne snuggled in between Sarah and me. We talked, kisses were exchanged, and there was almost constant gentle caressing. I couldn't help notice the girls, in particular, seemed to need to be in constant physical contact with each other. There was chemistry between them that went beyond sexual attraction.\n\nAt one point in our conversation, Sarah remarked, \"Diane, I'm glad you were my first.\"\n\nDiane reached up and kissed her and said, \"I feel the same way sweetie.\"\n\nSarah had a surprised look on her face. \"You mean I was your first?\"\n\nDianne cuddled closer to her, \"I kind of made out with a girl once before. I was sort of showing off in a bar. You know, kind of teasing Darren. But yes, you're the first woman that I've ever had sex with.\"\n\nShe then moved over and gave me a soft kiss. \"For that matter, Tim, you are the first guy I have been with since I got married. And you 2 are also my first threesome.\"\n\nI had assumed that Darren and Diane were swingers. And I told her that. She replied that she and Darren had never been with another couple. But, their marriage was losing some spark and they just recently decided to maybe try something new.\n\nShe then explained, \"when Darren met Sarah, he was immediately attracted to her. I thought Tim was kind of cute so we kind of decided to see if we could work something out with you two.\"\n\nShe added, \"to my surprise, I found myself pretty attracted to Sarah too!\"\n\nSarah bent down and kissed Diane again. \"If Darren was so hot for me, how come he ignored me at the party today?\"\n\n\"Because he's a jerk. Once we met Rick and Amy and found out that they were swingers, he was all about hooking up with them. He didn't really seem to care that I was not that into Rick. I kind of think that he thought you were too into Tim anyway. You two have some pretty intense chemistry.\" She then giggled, \"any way you know how it all worked out, here we are!\"\n\nI pulled Diane close to me, and for the first time, it was not out of lust, but out of genuine affection. Somehow on that rainy afternoon, the goddess had become a living, breathing, feeling woman. We stayed together cuddled on the bed listening to the rain for another hour or so. It was perhaps the most romantic afternoon of my life. Sadly, Diane eventually announced that she had to get back to her room before Darren woke up.\n\nAs she left, she gave me a kiss and then reached out to Sarah, and the two shared a prolonged intimate kiss and embrace. They whispered to each other for a few seconds then Diane left.\n\nSarah rejoined me on the bed, cuddled up next to me and said, \"Diane wants to know if we can get together in a few weeks.\"\n\n\"Joanne won't go for that, but there's no reason you can't get together with the two of them.\n\n\"I don't think Diane intended to bring Darren along.\"\n\n\"Ouch, that sucks for Darren\" and then asked, \"How would you feel about having an ongoing relationship with Diane?\"\n\n\"I'm pretty confused right now. I'm sure I'm not a lesbian, and I never thought of myself as into women, even for a fling. But I'm really attracted to Diane. Maybe it's the excitement of it, maybe it's this place, but it feels like more than just physical attraction. I don't know how I'll feel in a few weeks when the magic wears off, but right now I want to see her again.\"\n\nDay Eight. \"All Things Must Pass\" George Harrison\n\nI awoke to the sound of waves crashing on the beach and the feel of the warm mouth on my erection. I looked down and saw Sarah rubbing her face with my cock. She took me into her mouth again. After several slow deep strokes, she licked me like an ice cream cone.\n\n\"Good morning, Tim.\"\n\nShe then sat on my hips, took me in her hand, and guided me in her. Already aroused and ready for me, she eased herself down on me, then leaned forward and kissed me gently on the lips. I reached up and pulled her to me, and we kissed passionately.\n\n\"This is a pleasant surprise,\" I said.\n\nGently rocking on me, she said, \"I didn't want our first time to be our last time. I want us to make love instead of just fucking.\"\n\nAs I said at the beginning of this tale, Sarah has expressive eyes. I've seen them flash with anger, I've seen them filled with joy, and I've seen them burning with lust. The look on her face was different this time. Her eyes were soft, tender. There was a gentleness about her.\n\nUntil this morning, our sexual contact had been urgent and frantic. It was fueled by alcohol and erotic circumstances. This was different. This was seduction, an expression of deep emotion, and trust. There was no haste or clumsiness in our movements.\n\nI sat up, being sure to keep myself deep inside of her. I crossed my legs, and she wrapped her legs around me. We pulled each other close and tenderly kissed. We stayed that way for a while, slowly rocking back and forth, pushing me deep inside her. Occasionally she would lean back offering her breasts to me, then we would pull each other close as if inseparable.\n\nShe took my face into her hands, \"Tim, you are so sweet and kind. You make me feel good about myself.\" She kissed me again, \"I love you, Tim. I'm not in love with you, but I feel like we have a connection that I will always remember and treasure. I want you to hold this memory of us, just like this.\"\n\nI then rolled her over on her back. She held me tight in her arms and legs to keep me in her. I then made love to her in earnest. I think, for both of us, getting out of that bed and putting on clothes to go eat breakfast was a little sad. We knew that our time together was coming to an end. We also knew that things would never be the same between us.\n\nWe ate, we packed and then made our way to the resort lobby to check out. Our trip home was uneventful and somehow a little deflated. As we retraced our journey of a weak ago, the world felt different, gone was the anticipation of an exotic vacation. Gone was the titillation between two near-strangers who knew they would be intimately thrown together. Most sadly was the absence of sexual tension that had driven us for the last week. The real world awaited. For me, the only solace was that I would soon be back with JoJo. I thought about how sad it must be for Sarah to be returning to an empty apartment.\n\nWe landed in Indianapolis around 7 o'clock and pulled into the driveway of my home around 10:30 PM. Sarah and I were bone tired and hungry. But all of that fell away as we were welcomed by Joanne. No sooner did I walk in the door then she jumped into my arms and planted a passionate kiss on me. My God, she felt good.\n\nSarah grinned, \"really? You couldn't wait five seconds for the PDA.\"\n\nJoanne climbed off me and took Sarah in her arms, hugged her tightly and kissed her. I think Jo might've been a little surprised by the warm response she received in return. Sarah wrapped her arms around Jo, hugged her tightly, and returned the kiss. Gone was the sullen, aloof Sarah she had seen just last week.\n\nJo asked how we felt after the long trip. I told her we were tired and hungry. She told us to flop on the couch, and she would make us a quick sandwich, then she wanted to hear about our trip.\n\nSarah begged off, \"I better get going. I have a little bit of a drive back to my empty apartment.\n\n\"Nonsense,\" said Joanne, \"stay here tonight, you can go home tomorrow.\"\n\nSarah agreed without much persuasion. I think home did not have much appeal at the moment. She sat a respectful distance from me on the couch while Jo grabbed some snacks.\n\nWe ate and Sarah, and I told Jo about our adventures. We talked about the skinny dipping, Sarah's lingerie show in the hot tub, and of course JoJo wanted Sarah to tell her all about her first experience on the nude beach. We even told Jo about the body shots at the nude pool. We tactfully omitted my tequila shot out of Diane's pussy, or any other references to our sexual escapades with the gang, or with each other for that matter.\n\nSoon, it was midnight, and I suggested that we should all get some sleep. Frankly, I was determined to seduce my wife, and I wanted to get her into bed before I passed out.\n\nSarah suggested, \"if you don't have the guest room ready, just give me a pillow and blanket, I will crash on the couch.\"\n\nJoanne gave her a devilish smile and took her by the hand. \"You have been sleeping with my husband all week, one more night will not make a difference.\" Then with a tinge of sarcasm, she added, \"I hope you two don't mind if I get into bed too.\"\n\nI am not sure how the old Sarah would've reacted to that invitation. She probably would've said something caustic and fled the house. The new Sarah just smiled and walked hand-in-hand with Jo up the stairs.\n\nSarah and I were not sure what Joanne's expectations were, we both instinctively paused to see what she would do. I was pleasantly surprised when without ceremony, my wife stripped naked and climbed under the covers. She then looked at us expectantly. Sarah and I undressed and climbed into bed with Jo.\n\nI was in heaven, I was sandwiched between two beautiful, naked women. My only regret was that I would have to postpone ravishing my wife until the next day. Jo had other ideas. I soon felt her hand caressing my growing erection.\n\nI whispered, \"what about Sarah?\"\n\n\"I don't think she will mind.\"\n\nAs my wife's mouth went to my cock, I felt Sarah's familiar lips touch mine, and her soft hand join Jo's.\n\nPart 3 is a prelude to this story. In it, you will learn about the events which motivated Joanne to send Tim and Sarah on their journey,"
    ],
    "authorname": "Eros_Diem",
    "tags": [
        "sister-in-law",
        "group",
        "cunnilingus",
        "lezbian",
        "romance",
        "ffm",
        "exhibitionist",
        "nudist",
        "nude beach",
        "hot tub"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/discovering-sarah-pt-02"
}