{
    "title": "Love Knows No Color Pt. 21",
    "pages": [
        "After Grandma Duncan's funeral, I was in a daze for a long time. As Grandpap had told me, Shavonda was willing and able to be the rock I needed, the steadying influence in a life that seemed out of control. I was stressed out from work. As usual, summertime was extremely busy and my truck was often either maxed out on weight or floor space. Both were a pain to deal with, either the extreme weight causing me to have to take extra care driving, or the truck full of lighter items would be an incoherent mess as the loaders stacked the loose items on top of the palletized freight without regard to who it was to be delivered to. A few times, I overlooked items for a specific customer, only to find them later after it was too late to turn around.\n\nOf all the things I hauled, rebar was the most problematic. It was used to make forms for poured concrete, for reinforcement. Rebar was steel rods in various diameters, with \u00bd inch being the most common. We sold it in 10 foot and 20 foot lengths, in bundles of usually 150 pieces. Due to its weight, it had to be laid on the floor of the trailer. That meant that any palletized freight had to be stacked on top of it. Often that meant that the rebar had to be dug out from underneath other customers' orders, necessitating unloading and reloading of up to half the truck.\n\nThe ten footers were more of a pain in the ass than anything else, but the 20 foot lengths were another story altogether. To be honest, nothing I hauled really scared me except those 20 foot rebar. Lifting them with a forklift was like picking up wet spaghetti. The weight caused the ends to droop and bounce. There was a lethal amount of energy hidden in those bundles. This point was driven home one afternoon in Punxsutawney, when an inexperienced forklift driver started to back up before he had lifted the rebar fully clear of the trailer. The ends dragged along the floor, threatening to pull the whole bundle from his forks. Lucky for the both of us, the ends reached the side of the trailer before they could slide off the forks. But once clear of the trailer, they snapped back with bone crushing force, almost causing him to lose control. Nobody got hurt in this little demonstration of kinetic energy, but it was frightening to watch.\n\nHaving Shavonda to come home to was a godsend. Often, she'd run me a bath, and gently wash the road dirt off me. She had also started using her lotions and oils on my skin. Not that I needed them, but it sure felt good having her rub me down. \n\nOne evening, after my bath, I laid down on the couch. In my sleep, I heard Ethan and Brittany talking to Shavonda. They were worried about me.\n\n\"Why is Daddy so sad all the time?\" Ethan asked.\n\n\"That lady in the coffin was his Grandma,\" Shavonda explained gently. \"He misses her a lot. She never got to meet me or Miracle, and Daddy blames himself for that. Want to cheer him up? Play with him. Tell him how much you love him.\"\n\nShavonda was right. I did blame myself. If only I'd have taken her and the baby to meet Grandma maybe things would have been different. But they weren't. and she'd gone to her grave still avoiding me and my black wife. And while I was glad Grandpap had come around after meeting Shavonda, it also made me sad to think that Grandma might have done the same, if she'd only gotten to know Shavonda. Then again, she might never have accepted her. Aunt Nora certainly hadn't.\n\n\"You can't beat yourself up over what might have been,\" my ebony queen said gently one night as she held me close in bed. As usual, we were naked. We had slept that way since we met, and I found great comfort in her soft brown skin. \"What you think would have happened if we just showed up? She might have run you off and told you not to come back. Could you have handled that?\" In all honesty, it would have hurt like hell to be openly rejected solely because of who God had chosen as my life mate. And that was the reason I'd stayed away until it was too late. I was afraid of being rejected.\n\nAfter that, I noticed the kids spending more time around me instead of playing in the yard or their room. I truly enjoyed playing with them. Shavonda and I taught them several games, including Uno and checkers. We often played a game in the evenings after my bath.\n\nThat Thursday, I was surprised when I came off the road to find Shavonda waiting for me in her wine red Cruze, wearing a blue halter dress I'd never seen before with her usual summer sandals. As I climbed down out of my Kenworth, she greeted me with a tight hug. \"Baby,\" she said, \"Tonight we try to heal you. Mama has the baby for the night, and Barbara has the kids for the weekend.\"\n\nWe took the turnpike to New Stanton, where she'd reserved a room for us. After a quick shower, I was ready to face the world again. Dinner was at Cracker Barrel, where I ordered the biggest steak they had and Shavonda had liver and onions. I looked at her as she ordered, mouthing the words, \"Are You....?\" She shook her head no. It was just as well. I needed to get my head right before we brought another life into this world. \n\nAfter dinner, we went back to the room. Shavonda had brought a bottle of rum, and she poured me a stiff drink. Rum and Dr. Pepper. The drink that I'd never had until I met her. The one that was now my favorite, and the one that would always remind me of our first night of passion. But tonight, we just lay on the bed for a while, fully clothed, kissing. We let our hands wander, but made no move to strip each other. It just didn't seem the time. Our kiss was more gentle than passionate, the kind that says I care and I'm here for you.\n\n\"Jason,\" she whispered. \"You know I love you right? I'm here for you. Don't you try to do this alone. We are together now, that means we share the burdens. You gave me total support when I went through the rough spots. Let me do the same for you.\"\n\nI let her words sink in, not giving her an answer. She was right. I did need to let some of it go, so that she could help me. Why was it so hard to do? I'd tried to be a rock too long. As I looked back at what we'd gone through with the trials my stress levels had been through the roof. I'd put all my energy into making sure Shavonda was ok, that she weathered the storm. I hadn't been concerned about my own well-being. \n\nGrandma Duncan's death had changed that. It had been the final straw. Actually, the final straw had ironically been Grandpap's grudging acceptance of Shavonda and our marriage. Had he outright rejected her, it would have been easier to deal with because I would have known there had been nothing I could do to gain acceptance of our relationship from that side of the family. But he didn't reject her, and I would forever wonder if I'd only reached out to them would Grandma have accepted us as well? That uncertainty, and the guilt that went with it, were the final straw. \n\nI didn't want my life to unravel. We'd worked too hard to build what we now had, both separately as single people in search of true love, and later together as we combined our resources into something beautiful. I didn't want to lose any of that. I didn't want to lose the love and respect of the one person whose opinion mattered more to me than anything else in the world. Yet I felt powerless to stop myself from unravelling. I needed to come to terms with my life, which objectively wasn't bad. I needed to destress.\n\nWe lay there in each other's arms for a long time, me taking refuge in her softness. I was lucky to have her. I didn't have to go through it alone, if only I'd let her in.\n\nEventually, we got up and walked across the street to the tavern where our friends Darren and Minnie hosted Friday night karaoke. They greeted us warmly when we entered. Minnie had her long dark hair pulled back in a long braid similar to my own, looking just like a squaw. I stared at her as it dawned on me. \"Are you Indian?\" I asked.\n\n\"Seneca,\" she replied. \n\n\"Me too,\" I answered. \"Why didn't you tell me before?\"\n\n\"You never asked,\" she said. \n\nIn the meantime, Shavonda had been discussing songs with Darren. Eventually, she made her selections, filling out the slips and handing them to Darren. She sat down to wait her turn at the mike. We shared a pitcher of Yuengling as we talked to Minnie who'd come to sit with us while her husband ran the karaoke. I didn't normally drink beer, but tonight it just felt right. \n\nWhen Shavonda's turn came up, the song was \"The Closer I Get to You\" which was a duet. She pulled me out of my seat, saying, \"Tonight you are singing with me. You know this song. We've made love to it many times. Don't worry about the other people. Concentrate on me. Sing this to me. Nobody else exists. You can do this.\"\n\nI'd sung before, and had gotten comfortable with my voice, though I still preferred playing bass. But it had always been in front of friends and family. This was different. We were in a bar full of strangers. I gulped nervously, and with alcohol lowering my inhibitions, I sang with her. I sang the song to her, gazing deep into her eyes the whole time. As the song ended, Shavonda pulled me into a tight embrace, slow dancing with me. I had to admit, it felt good to be up there, professing my love for this exquisite creature in front of the crowd. \n\nWith the song finished, we handed the microphones back to Darren and returned to our seats, as an older man yelled, \"Get a room!\"\n\nShavonda, without missing a beat, said, \"Oh, it's you. And we do have a room.\" She'd recognized the man who'd heckled her a couple times before, and good naturedly responded. \n\n\"How's the baby?\" he responded. \n\n\"She's crawling now, and staying the night with my Mama,\" Shavonda replied. \n\nMinnie was still seated at the table, and when we sat down she said,\" Now that wasn't so bad was it, Jason. I knew you could sing. We heard you at the anniversary party.\"\n\n\"Yes,\" I replied. \"But it's a lot different without a guitar strapped to me, in front of a room full of strangers.\"\n\nLater, Shavonda did her version of \"Save Me,\" the Nikki Minaj song that seemed tailor made for her voice. I sat in awe of her performance. God I was in love with this woman.\n\nAfterward, we made our way back to our room, where we quickly disrobed before cuddling on the bed. It was funny. We'd been intimate, meaning sex, for more than two years now. And believe me, I was not in the least bit tired of her in bed. But our intimacy had long ago progressed beyond the merely sexual, to a deep spiritual connection. And tonight, just being held, knowing that she loved me enough to help me through my weak moments without ever questioning my manhood, was more intimate than any amount of sex could be. \n\nWe let our hands roam each other's bodies, caressing each other, in no hurry for penetration. Sometime during the night a bottle of coconut oil appeared, and we began a leisurely massage session, with me rubbing her down first, then her returning the favor. It ended up with her breast in my mouth, the sweet milk soothing me in way nothing else ever could. She smiled at me, watching me as I greedily drained her. \"That's it, baby,\" she cooed, \"Mama's here. It's all right.\"\n\nIt was almost dawn when we finally made it to penetration, having licked at and sucked on various body parts most of the night. I slipped inside her with ease. We were both ready, but neither of us was in a hurry. We'd orally pleased each other earlier, which took the edge off. As a matter of fact, we'd concentrated on the touching and oral so much I hadn't been sure I'd even wind up inside her. We were operating, as we often did now, on pure instinct. \n\nWhat Shavonda had in mind had worked. At least for a little while, I didn't feel so overwhelmed by the conflicting feelings I had over Grandma's passing. We quickly found a nice, natural rhythm as we moved against each other, in no hurry to finish. We made slow, passionate love as the dawn lightened the room around us. Our release, when it finally came, was almost anticlimactic. I was exhausted by that time. After all, I'd been up for over 24 hours straight. I fell asleep still buried within my queen.\n\nShavonda let me sleep until almost checkout time, then gently woke me. On the way back into town, while listening to Radiohead, we had a heart to heart talk. \"Jason,\" Shavonda said, \"Don't you freak out on me. You were created especially for me, and I can't lose you. Whatever it takes to get your head right again we will do. You're my world.\"\n\n\"I love you too. I don't mean to put you through this. I'm supposed to be strong for you. And right now I am not.\"\n\n\"We have to be strong for each other,\" Shavonda replied, shaking her head. \"Right now I am the stronger one, so I'll carry the burden until you can deal with it. You did the same for me many times.\"\n\n\"It still feels wrong to me. But I'll try to let go a little for you.\"\n\n\"Can I tell you something?\" Shavonda asked. I nodded my head so she continued. \"I know that you are turned on by our different colors, but did you know I feel the same? Especially that Indian part of you. I find it incredibly sexy knowing you are Seneca.\"\n\nI smiled. This woman was too good to be true. And come to think of it, tired as I was from lack of sleep, I felt a little better after last night. I still had a long way to go to get back to normal, but at least I was headed in the right direction, with Shavonda gently guiding me along.\n\nArriving back in the Pittsburgh suburbs, we stopped off at Althea's to pick up Miracle. Althea said to Shavonda, \"Guess you made him feel better.\"\n\nShavonda laughed, \"I wore his ass out.\" Althea gave me a funny look, eyebrows raised. \"Well, Von, you certainly seem none the worse for wear.\" She chuckled. \"But I can see Jason looks beat to hell.\"\n\n\"Yeah,\" Shavonda said. \"Boy didn't get much sleep. Probably has a sore tongue too.\" She laughed as I turned red. Althea smiled.\n\n\"You took good care of her, huh?\" Althea said. I smiled, embarrassed. \"I think I'm a little jealous.\" Turning serious, she said, \"Jason, you know this family loves you. We know you're going through some shit right now. But don't beat yourself up over what you should have done. You can't go back and change things. It isn't your fault she never met Von and the baby. She knew where to find you. She could have come to you, but she didn't. It's ok to feel some kinda way, but remember you have a wife and 3 kids who need you more than you'll ever know. We're here for you. Matter of fact, Von taking you out for the night was my idea. Looks like your queen ran with it.\" She chuckled.\n\n\"It wasn't so long ago that you'd have thrown me out of the house for attempting what we did last night,\" I answered.\n\n\"Well, back then I didn't know you. To me you were just some whiteboy trying to get into Von's pants. Never did I guess I'd get 3 beautiful grandbabies out the deal. And I truly thank you for being there for her through everything.\"\n\nWe chatted for a while. I had been hoping James would be there too, but he was at work. The railroad never sleeps. But since he was off the next day, I invited Althea and James over for a cookout. I'd have to call Kenny and invite him and Edie as well. I had a question about something I'd read in the timetable Scott had sent us. Kenny knew that railroad well, and James was a signalman, and I hoped between the three of us we'd be able to figure out an answer to my technical question.\n\nThat morning was the fourth of July. We were invited to a cookout at Brian and Tamika's house. I liked what Brian had done with the place since I'd moved out a year ago. He was a demolition carpenter by trade, who went into buildings being torn down and carefully salvages anything of value. Pittsburgh being full of hundred-year-old houses, there were plenty of ornate bannisters, mantelpieces, and other intricate woodwork that could never be duplicated at any cost. Brian had redone my old house with a lot of salvaged woodwork taken from houses in far more affluent neighborhoods. The result had turned my house into a gem. \n\nMiracle cooed happily, basking in the attention from Tamika's side of the family. Somebody asked Tamika if she wanted a baby. \"I do, but we waiting until after the wedding. I can't wait. But until then, I'll just have to borrow Von's baby.\" The wedding was only six weeks away, and there was an excitement in the air. Tamika's wedding would be far different than ours was. We'd only had 3 months to get everything together, because Shavonda had wanted to be married on the anniversary of our first date. Brian and Tamika had a lot longer to plan things, so their ceremony would be more elaborate.\n\nI tried to imagine Tamika pregnant. She was a big girl, full figured with large breasts and wide hips. I wondered how much weight she'd gain. Shavonda had gained 32 lbs, filling out in an adorable way. I kinda missed her full belly, missed blowing bubbles on her stomach to get a reaction from our unborn child. \n\nYes it was still legally my house. Brian and Tamika wouldn't have the money to purchase it until after their wedding in August. Until then, I still held title to it, and charged them rent equal to my mortgage payment. \n\nA pleasant surprise was the Zuccheros attending the cookout. They had befriended Tamika and Brian, the same as they'd done with me years earlier. Mrs Zucchero was something of a neighborhood busybody, so she was a good person to have on your side. Nothing got past her. We hadn't seen them since the wedding, so this was the first time they'd gotten to meet Miracle.\n\n\"It's so good to see you two,\" Mrs. Zucchero said. \"We missed having you around. Not that we don't like Brian and Tamika, but they're not you. Tamika told us you had a baby. She's gorgeous!\"\n\nWith Miracle happily cooing on my lap, I replied. \"We named her Miracle. Von wasn't able to have children, but somehow this miracle baby arrived. We've been doing pretty well so far.\"\n\n\"The baby is crawling now,\" Shavonda said, \"And she's teething. SO far it hasn't been too bad. She gets cranky every now and then, but she hasn't been in a lot of pain.\" She pulled up the baby's lip to show the two front teeth that had come in already. \"She's already eating solid food. My little ladybug loves her applesauce.\"\n\n\"Do you bottle feed her?\"\n\n\"Yes and no. We keep breast milk in bottles so anybody can feed her, but mostly it's me breastfeeding her. She's never had a drop of formula. We try to give her solid food at least once a day.\" Shavonda explained, then noticing the quizzical look on Mrs Zucchero's face, added. \"Yes, Jason takes an active part in feeding her. He's been really good about helping with all the baby chores, diapers, baths, playtime.\"\n\n\"Jason, you seem a little down,\" Tamika said. \"Is something wrong?\"\n\n\"I lost my Grandma two weeks ago,\" I replied. I hadn't realized my sadness was that obvious.\n\n\"No way!\" Tamika exclaimed, \"Not sweet old Grandma from the wedding?\"\n\n\"No,\" Shavonda said. \"Not her. She still around. This was Jason's other Grandma, the one who wouldn't come to the wedding. The one I never got to meet. We went to the funeral, and his Grandpa made peace with us. Now Jason has this idea that if we'd only gone to see them before she died, she would have accepted us too.\"\n\n\"Don't beat yourself up over it, Jason,\" Mrs. Zucchero said softly. \"One thing I've learned in life is you can't go back and change things once they're done. You'll never know what might have happened. Maybe she'd have accepted your wife and baby, Maybe not. She might have disowned you. You'll never know for sure. You can spend the rest of your life wishing things were different, or you can put it behind you and take care of the beautiful wife and kids you have. I'd enjoy what I have and not worry too much about what I lost, because the older you get the more people you're going to lose.\"\n\nI must admit, she had a point. But why was it so hard to just let go?",
        "Later, Brian and I made plans to get together Sunday to finish the treehouse that had languished in our backyard for the past month. He had a list of materials needed, and I already had most of it on hand. If we put our backs into it, we could get most of it done in one day. \n\nAt dusk, they set off the fireworks. Miracle's eyes grew wide with fear, and she started to cry as I gently rocked her to soothe her. I guess the loud noises and the bright light scared her. We had to take her in the house to calm her down. Eventually, we got her to sleep, and returned to the yard but the fireworks were over. After saying goodbye, we headed home where we made fireworks of our own. \n\nAfter a good night's sleep, the first I'd had in days, we greeted Shavonda's parents and Kenny and Edie as they showed up for our cookout. \n\nAs we all sat out in the backyard around the table, I brought out the timetable and track chart Scott had sent me. \"I wanted to ask you two your opinion. Kenny, you know this railroad pretty well. James, you maintain railroad signals for a living. If you look here in the timetable, it shows Norcross as an automatic interlocking.\" An interlocking is the railroad term for a network of track switches and signals that are controlled by a train dispatcher. The various components are interlocked in such a way that the dispatcher can't line a switch or set a signal that would cause a train to interfere with a route that has already been established through that area. This has prevented untold collisions over time by preventing two trains from occupying the same track at the same time.\n\n\"Yes,\" James replied. \"An automatic interlocking is used in a case like this where two railroads cross each other. Basically, the dispatcher doesn't control the signals. They are controlled by circuits several miles back on the approaching tracks. Whichever train trips the circuits first gets the right of way.\"\n\n\"That's what I thought,\" I replied. \"But both the timetable and the track charts show our railroad going from two tracks into three just after crossing Norfolk Southern. So, there are switches involved that the dispatcher would have to set. He has to have some sort of control over Norcross. Kenny, have you ever been there?\"\n\n\"No,\" he replied. \"You can't get to it without walking in. That's where the line crosses the New River do there should be a pretty substantial bridge there.\"\n\n\"So what's the center track used for?\" I asked. \"That seems to be the key to understanding this place.\"\n\nKenny replied,\" That's easy. Look at Dolomite, the next interlocking to the west. Notice the line goes back to two tracks there, but there is also an island track between the two mains. They add helpers to the eastbound trains at Dolomite. These trains pull into the center track between Dolomite and Norcross to get out of the way while the helper engines are added to the train. The island track is where the helpers sit when they aren't in use.\"\n\nThings were becoming clearer now. At Norcross, a lot of the trains would be coming off the center track to either of the two mains, after getting helpers on the rear. \n\nJames had to solution to the mystery. \"Looking through the footnotes, it says here 'eastbound trains using the controlled siding at Dolomite must notify the dispatcher upon leaving Dolomite.' If I read this correctly, the dispatcher has control of the switches but not the signals at Norcross. When a train calls him to let him know they are leaving Dolomite, he can line the switch to let them onto the main track. From there, the automatic circuits will set the signals. In all my years on the railroad I've never heard of anything like this. It's a really ingenious solution to the problem. The way we would have handled it would have been to have two sets of signals at Norcross. One would be tied into the switches and controlled by the Dispatcher, the other would control the crossing and be automatic. They did it with just one set of signals.\"\n\n\"This I gotta see,\" I said. \"When we go down for Grandma's birthday, Von and I were planning to walk a lot of the line so I could get pictures of the rocks and model them on the train layout downstairs. It sounds like we're going to have to go to Norcross. Anybody else up for a hike?\"\n\nKenny, I already knew, would be up for it. Edie would tag along wherever Kenny went. But James surprised me by expressing interest as well. \"I'd love to tag along. I'd like to see this place in action. Actually, I'd really love to talk to the maintainer down there. Looking at all the stuff your friend sent, they do things a lot differently there than we do.\"\n\nShavonda had been silently watching the whole time. I had thought she was bored with our conversation, but I was wrong. \"So what would happen if a westbound train needed to cut off his helper at Dolomite? Would the Dispatcher line him into the center track at Norcross, or would they just use one of the mains?\" I was impressed, once again, by my queen's ability to pick up and understand esoteric topics.\n\n\"Most likely, they'd pull the train west of Dolomite, and let the helper pull back into the island,\" Kenny said. \"It takes a lot longer to add a helper than to cut one off. You can actually cut off the helper without even stopping the train. When they add a helper, they have to pump up the airbrakes and do an air test before leaving. But if they did need to use the center track, the dispatcher would probably line the switch and let the train know when they got close that they'd be using the center track. They'd have to slow down to take the curved side of the switch.\"\n\n\"He wouldn't have to do that,\" James said. \"You buffs think of the signals in terms of where the train is going when it gets to the interlocking. But the rules pertaining to the signals do not mention route. They indicate the max speed at which the train can operate. For example, yellow means 30mph past the signal, prepared to stop at the next one. You will notice the interlocking signals have two or three heads each. The lower the green or yellow is on the signal, the slower the permitted speed. Green over Red is max permitted speed. Red over Green is a medium speed signal, 30 mph or so. Red-Red-Green would be a slow clear, good for 15mph. So, the signal at Norcross would probably be red over green, and the signal previous to that yellow over green to provide some advance warning to slow down.\"\n\n\"They'd need that extra warning,\" I said. \"The grade coming into Norcross is about 1.5%. But it's compensated so the actual grade varies with the curves.\"\n\n\"What's compensated mean?\" Shavonda asked.\n\n\"It's an engineering term. They figure the rolling resistance of the train on the grade, and calculate how much increased drag the curves will cause. The grade is lessened in the curves to compensate for that drag. If done properly, the rolling resistance the will remain the same whether on curves or straight track.\" As the thwarted civil engineer, I was in the best position to explain the term. \"But you don't get something for nothing, and the flatter spots coming down the mountain make it harder to maintain control. They can't apply and release the brakes like you can with a car. So, they apply the airbrakes a little bit and use the dynamic brakes to control the speed.\"\n\n\"Dynamics are similar to downshifting like I do in my truck. It uses the electric motors on the locomotives wheels to help slow the train. That generates electricity which is used up in resistor grids that act like a giant toaster. The whining sound you hear when they come down the mountain is the fans trying to cool those resistor grids.\"\n\nShavonda turned to me. \"I want to see this place too. This sounds like fun to me. A group hike with the family. How far of a walk do you think it is?\"\n\n\"From what I could see on the topo map, there's no easy way to get to the tracks west of Norcross for several miles. But we could park the car at the lower horseshoe and hike down to the river bridge. That's a little over a mile. We could see the signals from the bridge, but we can't walk on the bridge itself.\". \n\nI was looking forward to the adventure. Especially since James would be coming along. I had a lot of respect for Shavonda's father. While we may have had disagreements about certain things pertaining to Shavonda's past, we had grown close over the past two years. \n\n\"Jason,\" he said. \"Your wife's worried sick about you. I know you just lost your Grandma, and she'll help you anyway she can. We all will. But you have to let go of the grief. Nobody can do that for you. But you have the perfect resource to do just that.\"\n\nWhat's that?\" I asked.\n\n\"Have you ever heard Maggot Brain?\" he simply said. I nodded. It was a great song, with a soul wrenching guitar solo that lasted most of a song that ran well over 10 minutes.\n\n\"Yeah,\" I said. \"That song tears my heart out every time I hear it.\"\n\n\"You are one of those people who feels the music. There is a back story behind that song. George Clinton told his guitar player to play like his mother just died. You see the result. You should do the same. Just pick up your bass and play. Let what you're feeling come out in the music you make. Turn your pain into something beautiful.\"\n\nI looked at Shavonda, who nodded in agreement.\n\n\"You don't have to do it right now, but give it a try. Let your Nana live on through the music. Keep her close to your heart that way. Nobody's asking you to forget her. But you can't let it get in the way of your life either. You have a family who needs you. Never forget that.\"\n\nAfter we had all eaten, Shaunice showed up. As usual, she had her hair done up in an elaborate style. Edie eyed her warily. She still hadn't forgiven Shaunice for the comments she'd made about Kenny a couple months back, comments that had almost broken them up. Shavonda quickly stepped in to defuse the situation before it got out of hand. I wasn't in the mood for drama so I cut out.\n\nMaking my way down the stairs to the game room, I found myself picking up my bass guitar. James had me thinking. Play like your mother just died. Or, your grandmother. I started playing the bassline from Maggot Brain, a simple bluesy riff that in the song repeated over and over while the lead guitarist made his instrument weep. I could hear the guitar solo in my head, soaring above the notes I was playing. Funny thing, when I was playing I felt a little better. Maybe music was my therapy. Maybe, through music, I was beginning to let go.\n\nI was vaguely aware of James standing in the doorway, smiling. And the others, who came downstairs one by one to hear me play. \"I'm going to get my guitar,\" Kenny said, pushing into the room. Shavonda grabbed his arm.\n\n\"No,\" she said. \"This is for him alone. Let him play. He'll invite you when he's ready.\"\n\nI continued playing, eyes closed, moving to the rhythm I felt come from deep inside me. I let the bass cry for me, releasing the pent-up emotions I had tried to power through. I felt the pain and turmoil leaving my body through my fingertips as I caressed the strings. And still, they stood there, watching.\n\nFinally, I put the guitar down, smiling at our family gathered in the room. \"You were right, James,\" I said. \"It did help.\"\n\n\"You may have to do that every day,\" he said. \"It takes time to heal. But you have all the support you need right here. And you have Von to join you when you need her. Thank god we made her take piano lessons as a little girl.\" Shavonda looked embarrassed. \n\nThat night, after everybody had gone home, we read the children a bedtime story. I hadn't done that in a while. But it felt good to put them to bed just like I used to do when I dropped them off at Rose's house so long ago. Back before Shavonda had come into my life and everything changed.\n\nLying in bed naked with my ebony queen, our miracle baby fast asleep in her crib, we had a heart to heart talk. \"Von, baby,\" I said, \"I've been so preoccupied lately. I never asked you how Juneteenth went.\"\n\n\"We did well,\" she replied. \"But I am going to put off opening another store for a while. I think we could do well, but before we do that I want your head right. I don't want to be worrying about you all the time. Besides, I have to figure out where I want the new store to be. I've got a name for it, Shavonda's African Marketplace. Homewood would be an obvious choice, but after what happened to Edie's dad I can't be there for long. The place scares the hell out of me.\" I understood. Having your best friend's Dad murdered in cold blood in broad daylight would scare me too. Even if it was 20 years ago.\n\n\"Don't worry, boo,\" I said. \"We'll find a place when it's time. Here in Penn Hills, maybe? Or Homestead near the Waterfront?\"\n\n\"Both are good ideas. We need a place where a lot of people pass through, but somewhere I feel safe.\" Shavonda abruptly changed the subject. \"Jason, did you mean it about taking me to see the wild horses?\"\n\n\"Of course,\" I smiled, \"As long as you're up for a ten-mile hike. \"We'll probably have a pretty rough climb to get up there from the valley below. And we definitely have to get you a pair of hiking boots. But yeah, I'd love to take you there. I looked at online trail guides from the area, and it looks like a beautiful place.\" The look on Shavonda's face said it all. She gave me that ear to ear smile that both melted my heart and made me horny at the same time. \n\nShavonda got up and went to the bathroom, returning with a clean towel that she laid on the bed. \"Skootch over onto the towel, Jason,\" she said. I did as she asked, and she leaned in for a kiss. \"It's things like this that make me want you\" Our hands started to roam, but I kept mine above the waistline. After all, it was that time of the month. She'd started that morning. But Shavonda had other ideas.\n\n\"Don't you want me? Cause I sure as hell want you.\" Shavonda purred as she straddled me in the dimly lit room. \"Don't you want to watch that Indian dick disappear into my tight black pussy?\"\n\nI was even more turned on by her dirty talk, and the sensual look in her eyes. \"I thought we weren't going to make love on your cycle?\" I feebly protested. I didn't understand what was happening. For over two years, we'd avoided doing this during her period. It was hard for me to abstain during this time, but I did it for her, knowing she was embarrassed by her body's function during this time.\n\n\"Dammit, boy!\" Shavonda snapped. \"Do you want this pussy or not?\" I nodded my head in assent, watching in awe as she guided my swollen member to her entrance then slowly lowered herself onto my lap. I watched, transfixed as inch after inch disappeared inside her folds. I could feel her clenching around me, tight and wet, as she bottomed out then slowly rose. Her slow movements were torture, especially since we'd abstained for several days before this. I could take no more, and as she began her slow descent my hips rose to meet hers as I thrust deep inside her.\n\nShavonda gasped as I thrust into her, again and again. \"that's it. Make this pussy yours,\" she panted breathlessly. Her beautiful breasts bounced invitingly in my face, areolas like bullseyes, thumb sized nipples begging me to suck out the sweet nectar contained within their dark brown buds. Hands on her hips, I pounded into her. We both knew at the pace we were going neither of us would last, yet neither of us wanted to slow down. \n\nI realized my queen had just opened up to me a little more, that she trusted me enough to put aside her inhibitions. As comfortable as we were with each other, this was something she'd always withheld from me. Now, she was letting it go in raw animalistic passion. I knew when we were done we'd be a bloody mess, but that didn't matter. In fact, it had never mattered to me. It had only been out of respect for her feelings that I'd never pushed the issue. Truth be told, Shavonda was my goddess, and no matter what I would worship at her temple.\n\nHer moans had become insistent, rising in pitch as she neared her peak. We were both close to coming. Normally we'd have slowed our roll, prolonging the pleasure. But tonight, neither of us wanted to wait. Shavonda's inner walls tightened around me as she arched her back in orgasm with a primal scream I'd never heard from her before. Her walls clenched and released around me as I drove deeper into her. She collapsed on top of me, spent, eyes glassy. Still, I pounded into her>I was right there, but frustratingly, my own release was just out of reach. Shavonda whimpered weakly as I continued my assault on her most sacred spot. Finally, with a loud groan, I went over the edge, filling her with shot after shot of my potent seed. \n\nWe lay there, panting in post orgasmic rapture, gazing into each other's eyes. Her pussy contracted rhythmically around me, gently massaging my rapidly deflating penis, instinctively milking every last drop of sperm it could. As our heartbeats slowed, I whispered, \"Thank you.\"\n\nAs my now spent member slipped out of her soggy hole, Shavonda arose from the bed. \"Damn,\" she laughed breathlessly, \"Looks like somebody killed a cat up in here.\" Grabbing my hand, she gently led me on rubbery legs to the shower. We gently washed each other, enjoying the slick sensation of our soapy hands on each other's body. \n\n\"I don't suppose I ever told you how horny I get on my period,\" Shavonda smiled. \"It's been really hard keeping things under control these past two years when all I wanted to do was jump you bones.\"\n\nI stared at her in disbelief. I'd endured the torture of abstinence for two years because I didn't think she was in the mood during her cycle. The whole time she'd been holding back on me. \"Why?\" I asked. \"Why would you deny yourself when you had a willing partner right here?\"\n\n\"I was embarrassed. It wasn't clean. It embarrassed me It's messy. And it's ugly.\"\n\n\"Don't you understand you're the most beautiful woman in the world. Nothing about you is ugly. I'd gladly have done whatever you wanted if you'd only asked. Anything. I'd gladly have eaten you if you wanted. There is nothing ugly about you, and nothing I wouldn't do for you.\"\n\nShavonda looked at me, tears in her eyes. \"Is that how you see me? The most beautiful woman in the world?\"\n\n\"Yes,\" I replied. \"Ever since our first date, when you walked up to me in that diner, I've been in awe of you. You never had to worry about grossing me out. Your cycle is a natural part of you, and I have always accepted it as a part of you. I never pushed for sex because I thought you didn't want it during that time. You've never embarrassed me or grossed me out. Ever. I don't think you could even if you tried.\"\n\nWe'd stepped out of the shower, and dried each other off. Now I was seated on the toilet lid, lotioning my queen with cocoa butter. I'd come to love her smooth silky skin, and even though I didn't have to, I rubbed her down almost every time we bathed together. With my beauty oiled we went back to bed and were soon asleep, nestled like spoons.\n\nThe next morning, we went out for breakfast as a family. The kids had pancakes while Shavonda and I had steak and eggs. Even Miracle got into the act, as I fed her a pancake soaked with Maple syrup until it turned to mush. She loved the sweet taste. Afterward, we went to the store where I bought Shavonda a nice sturdy pair of boots. \"You might want to wear these for a few days to break them in,\" I told her. \n\nAt home, Brian and Kenny helped me finish the tree house for the kids, while Tamika and Edie played cards in the yard with Shavonda. By evening, we had done all the major work on the treehouse, with the roof on and the walls put in place. We'd even made a sturdy ladder to climb. Now all that was needed was a coat of paint. \n\nThe rest of the month went by in a haze. I was still hurting bad, and every evening after work I'd take about an hour or so to play music. Sometimes Shavonda joined me and we played whatever came to mind, taking turns choosing the songs. The kids had taken to greeting me at the door with hugs, and after I was done playing music I made time for them. We often ran trains on the layout, with the Thomas themed engines ruling the line. ",
        "That weekend was the train show in Monroeville, just a few short miles from home. We'd made arrangements for Barbara to take Brittany and Ethan for the weekend so we didn't have to keep an eye on them during the show. It was also compensation to her for the weekend they'd miss when we went on vacation to my parents' farm the end of July. Kenny and Edie helped us staff the table. Shavonda, Kenny and I had gone through our collective photos and picked out the best ones, which we had printed up in 8X10 glossies. Shavonda had also put her artistic talents to use, designing several railroad themes t shirts which were printed up. I'd shown Kenny how to screen print, and he'd made several dozen shirts.\n\nRegarding Kenny, he still hadn't found work in his field, But Shavonda said he had picked up various aspects of her business without difficulty. To be honest, we liked having him around. I'd said before, he was the closest thing to a brother I had. \n\nHis relationship with Edie was rocky, but they loved each other enough to stick it out. A lot of that had to do with Edie's insecurities. Shavonda said she'd been like that ever since her father's murder. While Edie put up a brave face in public, and had done well for herself in her career, deep down she was still that thirteen-year-old girl who'd just lost her Daddy. She clung to Kenny, afraid that if she let him out of her sight he'd never come back, like her father on that fateful summer afternoon so long ago. Kenny did his best to comfort her, and when they weren't at work, they were always together. \n\nAnd so, with our table set up at the train show, we took turns manning the booth, while the other couple roamed the show. When Shavonda and I were at the table, we kept Miracle in her carrier beside our chairs. When we roamed the show, we had her strapped in her sling. She was always with us, but a little irritated that she couldn't crawl around. I tried my best to keep her busy with her toys when she wasn't napping, while Shavonda took care of the sales. At the end of the weekend, we'd sold most of the merchandise we'd brought, which had also included a sampling of her handmade jewelry. It seemed that a lot of women came with their husbands, and outside of a couple of people selling dollhouses, we were the only people who had anything to interest them. All in all, the weekend was a success, and based on our sales Shavonda reserved us a table at the next two train shows, in November and February.\n\nThe Wednesday after the train show, I rented a trailer for our gear, and after work we loaded everything up. Thursday morning, we started our vacation, leaving early in the morning with the kids securely strapped into their car seats, trailer in tow. Shaunice rode in the very back of the Liberty. She had managed to talk her way into coming to my class reunion with us on Friday, in exchange for braiding Shavonda's hair. To be honest, I was no longer mad at Shaunice, and it was nice to have her along for the long trip. \n\nWe headed for my parent's farm, driving in shifts as usual. The others would follow tomorrow, for it was Grandma Waite's birthday celebration this weekend. This year, James and Althea were making the trip. They'd become as much a part of the Waite family as anybody else. It really made me proud that they'd been accepted the way they had. I remembered my childhood, and how both the Waites and Duncans had come together along with the MacFarlands, and made one big happy family. That was the kind of relationship I saw developing between the Jenkins family and my own.\n\nWe arrived in the late afternoon sun, pacing a westbound train up the valley out of Paint Bank. It was surprising how fast they moved on the relative flat of the valley, getting a run for the climb over the mountain that began just before Waiteville. When we pulled up in front of the house, Mom and Grandma were sitting on the front porch waiting for us as usual. Unloading our tings from the Liberty, we joined them on the porch, making small talk as we watched the gradually shifting light play over the mountains that flanked our valley on either side, disappearing into the distance. It was a beautiful sight. And it would always be home.\n\nIn the morning, after Shavonda and I helped Mom make the usual breakfast, Shaunice got to work on Shavonda's hair. The ladies sat in the Kitchen as Shaunice first straightened Shavonda's hair, then brushed it out and braided it, with a long braid on each side above her ears, trailing back along the sides of her head. It was the same style Shavonda had worn to the funeral, and I thought it gave her an elegant look. After Shaunice finished, she beckoned me. \"Come on now,\" she insisted, \"it's your turn.\"\n\nI sat in the chair as Shaunice brushed out my long dark brown hair, then quickly threaded it into an Indian braid down the center of my back. It was weird not having Shavonda do it, but familiar at the same time. \"I've wanted to play in that hair ever since I met you,\" Shaunice laughed. Shavonda shot her an evil look, before breaking into a smile.\n\nI wound up pitching the tent in the backyard. To make room for the other guests, Shavonda and I would sleep outside tonight. Not that either of us minded. It was fun camping out, with the noises of the crickets and the night trains lulling us to sleep. It was peaceful, and after the stress we'd been under a great way to relax. I also pitched the smaller tent we'd bought the day I got Shavonda her hiking boots. Brittany and Ethan would be able to sleep outside if they wanted. It probably wouldn't be tonight, as we'd be getting back late from the reunion. But at least one of these nights, wed build a bonfire, toast marshmallows and make mountain pies, then they could crawl into their sleeping bags when they got tired.\n\nIt occurred to me that, in our two years together we'd never actually gone camping. I'd promised Shavonda we would, but with the Ren fests taking up half of our summer weekends finding the time was an issue. Maybe during the coming week, we could slip away for a day or two with the kids and really camp out. We were in the middle of the national forest, so there were plenty of places we could go nearby. And my family could experience firsthand the lifestyle I'd lived before I'd moved to the city.\n\nIn the late afternoon, Kenny and Edie arrived with James and Althea. Although they'd driven separate cars, they'd driven down together. James had borrowed my two-way radios, and with Kenny's portable ham unit, they were able to communicate on the way down. I didn't think they'd get lost. After all, Kenny had grown up just down the hill in Waiteville where the MacFarlands still lived. And James had made the trip often enough that I was sure he knew the way.\n\nEdie went off to help Shavonda and Shaunice get ready for the reunion, while Kenny, James and I sat on the back porch making plans for our hike to Norcross tomorrow morning. We'd get up early, and leave the house between six and seven. We wanted to get an early start for two reasons. First, we'd be back in time for Grandma's birthday celebration. Second, by making our hike we'd avoid being on the tracks in the heat of the day. All of us being familiar with the railroad, we knew how much hotter it could get on the tracks with steels rails and dark crossties absorbing the heat while the gray stone ballast rock reflected it back up at us as we walked. Mom would have sandwiches made from dinner leftovers for us to take, along with several bottles of water she'd thrown in the freezer overnight. Mom and Althea would watch the kids while we were out, but I knew there was no way in hell Shavonda and Edie weren't coming along. Both of them enjoyed the adventure, and Shavonda was teaching Edie about birds as well. It promised to be a fun trip. \n\nI showed them the letter we'd gotten from our friend Scott, who ran trains over that particular line. In it, he'd responded to my telling him we'd probably be hiking various sections of the line, taking photos of the rock formations and other lineside details for the purpose of duplicating them in miniature on my model railroad layout. \n\n\"You should be good hiking there,\" he'd written. \"There are usually only two railroad cops on duty at any given time. One will be patrolling the yard at Wolf Creek, and the other will be somewhere out on the line patrolling. But since his territory covers all lines out of Wolf Creek, the chances you'll see him are slim. Stay off the tracks when the train come and you should be fine. Promise me you won't walk through the tunnels or over the bridges! It's way too dangerous!\"\n\n\"If you're going to be out in the mornings,\" the letter continued, \"there won't be many train, as most of them hit the mountain in the afternoon and at night. One you'll probably see every day you're out is WC3, which usually gets into Wolf Creek around 9 am or so. You'll recognize this train by the long string of tanker cars on the rear. There is usually a Zigzag train called for 6am out of Wolf Creek, which should be starting up the mountain around the same time. Intermodal train #16 is usually out just ahead of the zigzag, and other trains like empty coal trains can show up at any time. Other than that, unless something is running late there isn't much going on. Take care of yourselves, enjoy your hike, and I'll be looking for you trackside.\"\n\nIt was interesting that James was up for the trip. I'd never seen him as a closet railfan, but evidently my interest in trains had spurred him to take a greater interest in his line of work. He'd started paying closer attention to the trains themselves as they passed him, and had recently started asking me questions about them. Added to that, he had been showing up on train night occasionally to run with us. I was glad, and a little flattered at the influence I was having on those around me.\n\nWith Shavonda and Shaunice getting ready for the reunion, I wound up taking my shower and getting dressed in the outfit Shavonda had packed for me, black dress pants with a red collared shirt she'd bought for the occasion, and a black tie. When I came down the stairs, Mom and Althea stared. \"You look nice,\" Mom said. She could count on one hand the number of times she'd seen me in a tie.\n\nA little while later, Shavonda and Shaunice made their appearance. Shavonda wore a red sleeveless dress, cut to thigh length, that showed her cleavage off nicely. She also wore a set of matching heels that showed off her pretty feet nicely, along with an ankle bracelet. \"DO you remember this outfit, Jason?\" she asked.\n\n\"No,\" I said, \"But you like a goddess.\"\n\n\"Funny you should say that,\" she laughed. \"That's exactly what you said the first time you saw me in this dress. It's what I wore on our first date. It's a little tight in the chest, but I can still get into it.\"\n\nShaunice wore a similar outfit, but in blue. I'd never really seen her dressed up like this before, and she was almost as beautiful as Shavonda. You could tell they were sisters. \n\nWe had a quick bite to eat with the family before climbing in the Liberty for the trip over the mountains to the reunion. It was being held in the fire hall in the small town of Union, the county seat and the location of Monroe County High School. As we pulled into the parking lot, Shaunice got indignant.\n\n\"Awwww, HELL no!\" she sputtered. \"A fire hall? For real? What kinda bullshit is this? They couldn't find a nice restaurant or banquet hall?\"\n\nI turned around in my seat as Shavonda gave her the evil eye. \"Do you realize where we are?\" I asked. This is the largest town in the county and it has less than 600 people. There is no banquet hall close unless you count the Greenbrier in White Sulphur Springs.\" \n\n\"That would be much better,\" Shaunice said, obviously familiar with the famous hotel. \"A 5-star hotel with a ballroom? Now we're talking.\"\n\n\"For a class reunion where maybe 25 people will show up?\" I asked. \"Do you realize what that'd cost? No, they held this reunion in the only practical place nearby.\"\n\nWe got out of the Jeep and walked in the door, me with my long, braided tail and a beautiful black woman on each arm. The lady at the registration table looked up at me in surprise. \"Hi Misty,\" I said. \"I have tickets for two, but I need to pay for this lovely lady.\" I motioned to Shaunice as Shavonda retrieved our tickets from her purse. Paying for Shaunice's admission, I continued, \"I'd like you to meet my wife Shavonda, and her sister Shaunice. Ladies, this is Misty Holmes. She was class president.\"\n\nWe entered the hall, decorated with banners welcoming the class of 99, and quickly found an empty table. Since the cost of the tickets included an open bar and a buffet, we went for food and drinks. Surprisingly, they had both rum and Dr Pepper, so I was happy. Damn you, Shavonda, for getting me hooked on the stuff. At the buffet, they had a choice of chicken, pulled pork, or beef brisket. Though I sampled all three, the brisket was what I liked best, returning for seconds. They also had some sort of pasta dish, and various sides to round out the meal. \n\nEating at the table, we were soon joined by others whose curiosity was stirred by the sight of two sexy ebony goddesses in an otherwise all white get together. They would stop by, introduce themselves, and chat for a little bit before moving on. A few people never approached us, content to stare from across the room. It really didn't bother me, having gotten used to peoples' reaction to a mixed couple over the past two years. \n\nBut soon, some of my old friends drifted over, and they stayed at the table rehashing old times. First was Mike Callahan, who was a budding scientist like me. Where I was fascinated by geology and natural sciences, he had been fascinated by chemistry. I remembered his experiments with electrolysis of salt water, which resulted in the production of a test tube of chlorine gas. He'd brought the test tube to school one day, releasing it in Algebra class in 8th grade. The room was evacuated while the school officials tried to find the source of the gas leak. They never did, and Mike's secret was safe with me. \n\nJim Brody had also found us. Since he already knew Shavonda, he concentrated on getting to know Shaunice. She sat spellbound as he regaled her with tales of our adventures in the mountains, including our ill-fated attempt at hopping freight trains.\n\nA dark haired slightly chubby woman walked up to us, stopping directly in front of me. \"Jason Waite,\" she exclaimed, with a smile on her face. \"Who are these ladies?\" I introduced her to Shavonda and Shaunice.\n\n\"Marcia Bell,\" Shavonda turned to me, \"Is she the one who was your first?\" Shaunice looked at me with interest while Marcia blushed.\n\n\"Yes,\" I replied, \"She's the one who trained me.\" I laughed.\n\nTurning to Marcia, my wife said, \"Thank you so much for breaking him in for me. But you're not getting him back.\" She laughed, flashing that wide smile.\n\n\"Jason, I never would have thought you'd go that way,\" Marcia said. \"Your wife is beautiful, but I don't think I could do something like that. I couldn't date someone of a different race. Not that I am condemning you. You two are very brave to do, and obviously you love each other. But I don't think I could do it myself.\"\n\n\"You already have,\" I said. \"You've already had sex with a man of a different race.\" I watched her jaw drop as the others looked on with interest.\n\n\"No I haven't,\" Marcia protested. \"What makes you so sure I have?\"\n\n\"I am part Seneca,\" I replied. \"Why do you think I've worn my hair in a tail all these years?\"\n\nMarcia looked carefully at my face, studying it for a minute. \"Well, I'll be damned,\" she said. \"I never noticed it before, but now that you mention it.....\" She let her words trail off.\n\nAfter that, we all caught up on the things we'd done with our lives. Mike had gotten a job as a chemist for the city of Roanoke, where he monitored water quality. Marcia had recently gotten a divorce, and was trying to raise three children on her own while working for the Greenbrier resort. I was pleased to hear they were all doing reasonably well, and that they had been able to find decent jobs within a couple hours of their homes.\n\nWe were all seated around the table, carrying on a lively discussion. I had my back to the door, when I saw Shavonda stop in mid-sentence. She motioned with her eyes. I turned around and looked at the tall black woman making her way toward us. She wore a nice green blouse and skirt that accentuated her curves nicely. Her hair had been done up with bronze highlights that accentuated her dark skin tone, almost as dark as Shavonda's. She'd certainly filled out since I'd seen her last, so long ago. \"Tamika Pritchard,\" I smiled broadly. \"So good to see you. This is my wife Shavonda, and her sister Shaunice.\"\n\n\"I saw a couple of sistas, and I had to come over to see who they were.\" Tamika laughed. \"I knew somebody had to bring them here. I was the only one in our class, so they had to be somebody's guest. I should have known you'd be involved.\"\n\nTurning to Shavonda, she continued. \"I hope you're not offended, but I had such a crush on this boy growing up.\"\n\n\"I can understand why,\" Shavonda said. \"I have this incredible crush on him now.\"\n\n\"Jason, I was hoping you'd be here,\" Tamika said. \"I wanted to thank you for what you did for me in school.\"\n\n\"What did I do?\" I said. \"I mean we were lab partners in the science classes, but I was nothing special.\"\n\n\"Yes, you were,\" Tamika replied. \"There was a reason you were my lab partner. I picked you. Nobody understood the classes like you did. Plus, you always treated me with respect.\"\n\n\"That may be so, but if I understood the subject so well why wasn't I valedictorian?\"\n\n\"Because you wouldn't follow their rules,\" Tamika answered. \"I remember the day in history class when you had the argument with Mr. Hopkins. He yelled at you for not turning in homework. You asked him why. He told you it was to help you learn better. You told him you were already scoring in the mid-90s on every test he gave, so obviously you were learning the material in class, so why did you need to do homework. I'll never forget the look on his face, and that he couldn't answer you. Everybody was watching to see what he said. And he said nothing.\"\n\n\"I still failed his class,\" I said. \"That argument dragged down my GPA quite a bit.\"\n\n\"Yes, but you stood your ground and took the bad grade rather than give in. You caused him a lot of grief. And I loved you for it. You had a way of explaining things that most teachers never have. And I know because of your patience I aced a lot of classes I shouldn't have.\"\n\n\"Did you know he had a crush on you?\" Shavonda asked.\n\n\"Really?\" Tamika looked surprised. \"I knew he was smart. But I also noticed he was awkward, dropping things when he was around me. I wish I'd have known. No disrespect to you, Shavonda, but I would have done anything for him back in school. Enn-E-thing.\" Tamika drew out the word for emphasis. Shavonda smiled. She understood that Tamika posed no threat to her.\n\n\"If I'd known the feelings were mutual, I'd have asked you out,\" I said. \"But to be honest, I wouldn't have been ready for an interracial relationship back then. I still actually cared what people would say. Now obviously I don't, but I did back then. I didn't agree with what people said, but it would have hurt to know they said it.\"\n\n\"I didn't have that luxury,\" Tamika said sadly. \"In case you haven't noticed, there aren't a lot of us around these parts. And the few that are around are all my relatives. So, I'd either have had to date outside my race, or move away.\"\n\n\"So, what you end up doing?\" Shavonda asked. The rest of the table looked on in interest. \"Did you go white? Or did you move away?\"\n\n\"Both,\" Tamika said with a smile. \"I moved away to get my nursing degree, and in school I met the most wonderful man. He reminds me a lot of you, Jason, the way he is sweet and respects me for who I am not what I am. We've been married ten years now, and we live in Maryland just east of Baltimore.\" She motioned toward the slender white man with a buzz cut coming towards us. \"Allan went to get me a drink.\" She turned to her husband. \"Allan, this is Jason I told you about, guess who he married.\" She laughed, pointing to Shavonda. \"That's Shavonda, Jason's wife, and her sister Shaunice. I was telling them how we now live near Baltimore.\"",
        "\"Baltimore,\" Shavonda said dreamily. \"Remember when we took the train there for crab legs?\"\n\n\"Yeah,\" I said. \"That was a fun trip.\"\n\n\"We live in this small town with sailboats in the harbor. It's a beautiful place called Havre De Grace. You'd like it. You should come visit us sometime,\" Tamika smiled. \n\n\"I'd like that,\" Shavonda smiled back. It was easy to see that she and Tamika were hitting it off. Life was good.\n\nShavonda had noticed one guy in particular, who kept staring at us. \"Who's that?\" she asked, \"And why is he staring so hard?\"\n\n\"Girl, don't pay him no mind,\" Tamika laughed. \"He was captain of the football team. Always thought he was the big shit. I don't even remember his name but I remember what Jason called him and the others on the team.\"\n\n'The future used car salesmen of America,\" I laughed. Noticing Shavonda and Shaunice's puzzled looks, I explained. \"Around here we had the 4H club and the Future Farmers of America. So it was a dig at them. Sorta, yeah you think you're big now, but the only reason you're passing is that you can throw a ball. But once you graduate about all you'll be able to do is sell used cars.\"\n\n\"Don't laugh,\" Jim Brodie said. \"He actually has a used car lot.\" \n\nMy jaw dropped. \"Seriously?\" I said. \"Go figure. At least he did better than the Pattons.\"\n\n\"Von's already met Randy Patton,\" Brodie explained. \"He called her nigger and took a swing at Jason. Jason ducked and Randy broke his hand on a metal door frame. He's still in jail for that one.\"\n\n\"Wow,\" Tamika said. \"Some things never change.\" She shook her head. \"I love this place. It will always be home to me. But people like that are why I won't move back.\"\n\nWe spent the rest of the evening chatting about our school days, and what we'd all done since then. At the end of the night, we all exchanged phone numbers and promised to keep in touch.\n\nOn the trip back, Shavonda insisted on driving, even though I was not tipsy. \"You've been drinking,\" she said, \"and with your CDL, you can get a DUI with one drink. The standards are less for me, and I can legally drive now while you can't. No sense in putting your job at risk.\" She had a point. I directed her back over the mountains to the farm.\n\nUpon arrival, shortly after midnight, we headed for our tent while Shaunice headed upstairs to her room. Once in our tent, we quickly stripped out of our clothes. \"Thank you,\" I said. \"You made me proud.\" We made mad passionate love in the still night air, before falling into a restful sleep. \n\nTo be continued..."
    ],
    "authorname": "bwwm4me",
    "tags": [
        "bwwm",
        "interracial romance",
        "black woman",
        "white man",
        "reunion",
        "wmbw",
        "bf wm"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-knows-no-color-pt-21"
}