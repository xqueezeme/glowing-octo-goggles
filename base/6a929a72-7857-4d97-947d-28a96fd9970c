{
    "title": "Mom's Touch But Don't Look Policy",
    "pages": [
        "Something a little different this time. Also, very much the same. Everyone in this story is over the age of 18. Enjoy!\n\nAll in succession, my perfectly crafted life collapsed.\n\nFirst, the coronavirus hit and closed my college. Then they instituted shelter-at-home. I found myself trapped in the house, with no one else around except my mom.\n\nThe last straw came a few days after that. I was finally getting settled back into my boyhood bedroom when I got a call from Cassie, my college girlfriend. She wanted to FaceTime, and I assumed it was time for our inaugural session of hot and heavy virtual sex. I took off my pants, then turned on the screen.\n\nCassie was there, but she was fully dressed and looking glum.\n\n\"I just can't do it,\" she said, \"If we're apart like this, I don't know how we can stay together.\" The pretty brunette did look upset, at least. Even if her logic made little sense. Everyone was stuck inside. It's not like we were in a long-distance relationship where I could be out dating, and she would never know. I was home with my mom, for fuck's sake.\n\n\"I can't,\" Cassie repeated, \"I'm sorry. When it's over, when we're back in school, we can try again.\"\n\nShe clicked off the screen. I pulled my jeans back on, sheepish and sad. Cassie and I had been dating for nearly six months. I didn't think I was going to marry the girl, but I didn't see us breaking up anytime soon, either. Having her dump me out of nowhere like that left me feeling low.\n\nThat night at dinner, I barely had any appetite. I pushed my food around my plate like a lazy cat chasing after a mouse. Never quite getting to the kill.\n\n\"What's wrong?\" Mom asked. I turned her way, and, for a moment, I got caught in her huge, blue eyes.\n\nI could admit my mom was very pretty. She had honey blonde hair and a warm, sunny face. Her tomboy-esque outfits -- she always wore flannel shirts with white, ribbed tank tops and high-waisted Mom jeans -- only made her look cuter.\n\nMy high school friends had all foundered after her. I knew that at least two of the guys in our group had only hung out with me because it meant they got glances of my mom. Even some of the dates I'd brought home had faltered when they saw my mother.\n\n\"I'm fine,\" I said, the standard evasive answer.\n\n\"Come on, talk to me,\" Mom said, \"You used to confide in me all the time, you know.\"\n\nThat was true. Mom and I had been quite close when I was younger. We both loved reading books and seeing plays. She would take me to do errands and taught me to sew and cook. Mom had been my constant companion.\n\nEverything changed when I turned 13. Mom became distant and removed. When I tried to hug her or show her affection, she would flinch like I was about to fight her. We stopped spending time together. Gave up going out as Mom and son. I ended up hanging out with my dad through most of high school, which came with its own unique set of issues.\n\nNot that Mom was mean or cruel. Just detached. It's why I had wanted to leave for college so quickly after high school, and one of the reasons I had been dreading my corona-caused return home.\n\n\"Seriously, Jay, what's wrong?\" Mom asked me again.\n\nInstinctively, I looked over to where Dad would usually be sitting with us at our small, round kitchen table. I was used to him interceding on my behalf. Unfortunately, Dad had been travelling overseas when the virus hit and wasn't coming home anytime soon. I was on my own.\n\nMom put her hand on mine, pulling me back to the moment. The truth was, I wanted to tell someone. Needed to. And, with no one else around, I guess it was easier for Mom to pry things out of me.\n\n\"Cassie and I broke up,\" I said, barely even a mumble.\n\n\"What happened?\" Mom asked.\n\nAgain, the words caught in my throat before spilling over. \"She said she didn't think we could be together through quarantine,\" I said.\n\n\"Well, that's fucking stupid,\" Mom said.\n\nI startled. I wasn't used to Mom taking my side, and I really wasn't used to hearing her curse.\n\nMom saw the look on my face, realized what she'd said, and blushed. \"Sorry, your old mother still has a little fire left in her, I guess.\"\n\n\"You're not old, Mom,\" I said, reflexive. A smile snuck onto Mom's lips. She quickly turned away.\n\nI wasn't just being polite. Mom was only 38 and she could have easily passed for late twenties. She and Dad had me when they were both twenty. I was a college mishap (during the final performance of the university's spring play, Mom would say wistfully, like that was a detail I needed to know). While I'm sure it was hard for them at the time to have a child, it seemed like there were also a lot of benefits to being a decade younger than anyone else with a kid my age.\n\n\"Anyway,\" Mom continued, \"I'm sorry about what happened with you and Kelly.\"\n\n\"Cassie,\" I said.\n\n\"Right,\" Mom said, \"But if she's that superficial, she's doing you a favor. You deserve someone way better.\"\n\nNow it was my turn to blush. Like I said, I wasn't used to getting compliments from Mom.\n\nAfter dinner, I helped Mom clear the table and do the dishes. We stood in front of the sink, her arms elbow-deep in soapy water, while I held the tiny dish towel to dry. At one point, our hips bumped, and I glanced over at Mom's body.\n\nLike I said, I was her son. I didn't have a 'thing' for my mom. But that didn't mean I couldn't see her for what she was: a thoroughly gorgeous woman with a sweet face and a hot, tight body. I guess, in that way, it's like appreciating a painting at the MFA. I can admit that something is beautiful without needing to break in and take it home with me.\n\nMom saw me looking and, pointedly, stepped away. She gave my shoulder a playful shove.\n\n\"Eyes on your own paper, mister,\" Mom said with a grin.\n\n\"Moooom,\" I said, the stereotypical small boy whine, \"I wasn't.\"\n\n\"I'm just teasing,\" Mom said, \"Besides, I know you're a single man now, but that's no reason to start lowering your standards.\"\n\n\"Mom, I would be lucky to be with you. I mean, a woman who looked like you. I mean...\"\n\nMom put her hand on my shoulder to stop me. She was smiling so wide, it looked like the corners of her mouth could reach her earlobes. Her white, straight teeth were practically shining in the thin light of the kitchen.\n\n\"It's OK,\" she said, \"I understand and appreciate the compliment. It's sweet. Especially coming from such a ladykiller like yourself.\"\n\nFor a moment, I thought Mom was saying something about how I treated women and I got defensive. \"I'm not like that,\" I snapped.\n\n\"No, no,\" Mom said, \"I'm sorry. That wasn't what I meant at all. Girls like you. I see them checking you out. The way your high school girlfriends would fall all over you.\"\n\n\"Oh,\" I said.\n\nI tried to picture what Mom meant but I couldn't see it. I'd had a few girlfriends in high school, nothing serious. Had they been swooning? I didn't think so. And Cassie?\n\nSuddenly it all came crashing back to me and this stopped being fun. I finished putting away the dishes and turned away from the sink.\n\n\"I know you're down, Jay,\" Mom said, \"But, trust me, you'll find someone who's worth your time.\"\n\n\"Thanks,\" I said, still feeling dejected.\n\n\"How about we watch a movie tonight to cheer you up,\" she said, \"Something silly.\"\n\nGiven the choice between watching something dumb on TV with Mom or sitting in my room by myself and moping, it was an easy decision.\n\n*\n\nMom made a big bowl of popcorn and we sat on the living room couch. She clicked on the TV and scrolled through the options. With Dad, watching TV was easy: we just chose hockey. And if hockey wasn't on, we watched recordings of hockey. Easy peasy. Mom was way pickier.\n\nBut when she found Bridesmaids in the menu, she stopped. My mother was not a very 'outward' woman. She was not one of those people going to wild parties, even when she was younger. She'd been a drama geek in college and, as she explained it, was probably the last person you'd think would end up accidentally pregnant.\n\nMom didn't wear revealing clothes. She liked safe music that I would describe as 'Mom Rock.' She rarely ever cursed. Her one secret was that she loved, loved, raunchy comedies. It was like finding out your pastor was a huge metalhead or that grandma was a grand champion at League of Legends. It was completely out of character, but that didn't make it any less Mom.\n\n\"What do you say?\" Mom asked. Honestly, it seemed perfect for the mood I was in. I agreed, and Mom clicked play.\n\nI'd seen the movie a few times, but I still found myself getting into it. When we got to the classic bathroom scene, Mom and I laughed so hard that tears rolled down our cheeks. We watched the rest of the movie, both lying back like we were in physical pain from our hysterics.\n\n\"See, don't you feel better?\" Mom asked as she clicked off the TV. I had to concede that I did.\n\n*\n\nThe next morning, however, the blues slipped back into my brain. I spent most of my day in bed, unsure of what Mom was up to. To her credit, she left me be. I think she understood that I needed some mourning time.\n\nAt the end of the day, she knocked on my door. I'd been lying around in boxers all day, so I scrambled to pull my shirt on. Mom came in while I was still getting dressed. She started to speak, then stuttered.\n\n\"Hi, I was...\" Mom froze, staring at my chest.\n\nI'd been playing hockey since freshman year of high school. It was Dad's thing, so I practically had to join up. The fact that Mom hated me playing was just an added benefit at the time.\n\nI wasn't a world beater at hockey, but I was good enough to get a scholarship. I knew I wasn't going to be a star -- I was on the third line at a two-star program -- but whatever. It was D1 and a free education and I was going to make the most of that. Plus, I figured I'd end up with lots of cool stories about getting checked into the boards by some future NHL stars.\n\nIn any case, hockey is a full body sport. It's not like baseball where you can have a big gut and still hit 98 on the radar gun. Skating gets your legs in incredible shape, but you need upper body strength, too. And playing in college had taken me to a whole new level. I hadn't even had a full year of training, but I was already in the best shape of my life.\n\nI guess I was pretty cut, is what I'm saying. And Mom noticed. She stayed stuck in place, staring at me half-shirtless. I knew that Mom didn't want to see her son naked, but I didn't realize she'd be that upset.\n\n\"Sorry,\" I said, sheepish, and finished pulling down my shirt.\n\n\"It's fine,\" Mom said, \"Just warn me next time.\"\n\nAgain, I apologized. \"So, what's up?\"\n\n\"I wanted to see how you're doing,\" Mom said.\n\n\"Oh. I'm OK,\" I said. I flopped back down on the bed.\n\n\"Sure you are,\" Mom said, a smirk sneaking across her face. \"I was thinking I could make dinner and we could watch another movie.\"\n\nI looked back at my bed. All I wanted to do was crawl under the covers. But I heard my stomach growl, and I knew I needed to eat.\n\nI went downstairs and helped Mom make dinner. It had been a long time since we worked on a project together like that and it was fun. Like having an old friend back.\n\nAfter we ate, again, we stood over the sink and washed the dishes. At one point, I dropped a big serving dish in the soapy water, and it splashed up, soaking Mom's chest. I looked over and saw a bit of her tit through her wet, white tank top. Mom wasn't huge chested. She had nice-sized breasts. Honestly, I hadn't thought about them until that moment. Now, they were all I could see.\n\nMom looked over at me staring, then down at her chest. She frowned.\n\n\"Sorry,\" I said.\n\nMom's mouth twisted. \"I'll go change,\" she said, \"Next time be more careful, OK?\"\n\nMom came back in a long, lime green sleep shirt that went down to her knees. For a moment, the thought that she might not be wearing underwear under that outfit slipped into my mind, unbidden. What was wrong with me? Back home for less than a month and I was already going full pervert? Mom wasn't a sexual being, she was my mother. But something about that shapeless, long shirt was totally arousing. I can't explain exactly why.\n\nWhen we finished the dishes, we went back to the couch and Mom picked out another over-the- top comedy. This time, she went for an old one called Airplane.\n\n\"Your grandmother used to love this one,\" Mom said.\n\nAlmost immediately, I realized that Grandma was a very different woman than I'd realized. Airplane was filthy. Full of dirty, inappropriate humor. I'd thought the world was getting more liberal, but that movie had bits in it that no one would dare perform in 2020.\n\nThen there were the sex jokes. At one point, a topless woman showed up on screen for no reason, breasts flying around. I looked over at Mom and she shrugged like it was nothing. Another scene was an extended blowjob gag where Julie Hagerty had to give oral to the autopilot balloon to keep it inflated. Mom giggled like crazy through the whole scene.\n\nAgain, I had to recalibrate my thinking. I knew Mom had sex. Duh, she had me. But the idea that Mom could find oral sex funny implied that she performed oral sex and that kind of blew my brain. Rationally, of course, these revelations were stupid. But some part of me hadn't ever processed the idea, quite the opposite, and the reshuffle left me rustled.\n\nWhen the movie was over, again, Mom and I were lying back on the couch all laughed out. Once again, I went to bed feeling way better.\n\nThe next few days, we found ourselves falling into a routine. Most of the day, we kept to ourselves. I stayed in my room playing videogames and attending virtual classes. Mom did Mom stuff. Mostly gardening or cleaning the house. It's not like she could even go out shopping (we had the groceries delivered to our door). Around 4pm, we'd come out of our respective corners, make ourselves a nice meal, and finish off with a racy comedy.\n\nAfter Airplane, we stayed old school for a while and watched Mel Brooks movies: Young Frankenstein, Blazing Saddles, History of World Part I, and Spaceballs. Then we moved back into the Abrams Zucker Abrams oeuvre and watched all three Naked Guns.\n\nWith the classics out of the way, we shifted to more modern stuff, starting with 40-Year-Old Virgin. This time, when Steve Carrell was walking back and forth with an unflagging erection, it was Mom's turn to give me a funny look. But I didn't say anything. For a movie about having sex, the film wasn't super sexual overall.\n\nThe next film we chose, however, was the one that got us in trouble. Actually, it was the whole damn day.\n\nI was settling in for another session of hardcore gaming when Mom knocked on my door. I was in my underwear, and this time, I knew to warn Mom that I wasn't decent. I pulled on some clothes and opened the door. Despite the fact that I was fully dressed, Mom ran her eyes from my feet to my face. She seemed let down, almost like she'd been hoping to catch me half-clothed. Or maybe it was just my outfit. Yes, that made way more sense.\n\n\"What are you up to?\" Mom asked.\n\nI gestured at my PS4 like it was obvious.\n\n\"I'm thinking about painting my nails,\" Mom said.\n\n\"OK.\" I looked at her fingers and they seemed fine. Honestly, I wasn't sure why she was telling me this.\n\n\"I can do my hands OK, but then I can't touch anything for a while till they dry.\"\n\n\"You want me to make lunch?\" I asked.\n\n\"Sure,\" Mom said, \"But I was also hoping to paint my toenails and it's way easier to have someone else do that for me.\"\n\n\"You want me to paint your toenails,\" I repeated back to her.\n\n\"It's not that girlie,\" Mom said, \"Think of is as practice. Your girlfriends will love it if you can do that for them.\"\n\nI thought that was a bit of stretch, but whatever. It was early spring, but the day was remarkably warm, so we went out to the backyard. Mom set up on a lounge chair and proceeded to paint her fingernails a deep purple. I sat back and chatted with her while she worked.\n\nWe talked about school and hockey. For someone who hated sports, Mom sure knew a lot about the game.\n\n\"I took you to almost every practice and game, hon,\" Mom said. I guess she had.\n\nDad loved me playing hockey and was happy to watch games with me. In most other ways though, he was pretty damn distant. Some of it was work, he was always travelling for some thing or another. Really, we shouldn't have been so surprised that he was caught on another continent when corona hit.\n\nEven when he was home though, Dad wasn't the most supportive person in my life. His idea of a rousing pep talk was a slight grunt and then pointing to the TV to remind me that I was interrupting. He'd never been mean to Mom, exactly. But I'd never seen him be all that affectionate, either. Dad was just... Dad. A weird silent creature that, somehow, had been my safe harbor when my relationship with Mom went rocky for whatever reason.\n\nSo, now that I thought about it, of course it had been Mom who was taking me to practices and showing up at games. Because we'd been so cold with each other, I guess it never registered in the moment.\n\nWhen she was done with her nails, Mom held them up so I could see.\n\n\"Very nice,\" I said, not knowing what else to say.\n\n\"Thank you,\" Mom said, looking gratified. She wiggled her toes at me.\n\n\"Same color?\" I asked.\n\n\"Sure,\" Mom said.\n\nI took the bottle of purple nail polish, then held Mom's bare, petite foot in my lap. I'm not a foot guy, but Mom's tootsies were quite cute. Worse, she rested them right in my crotch. My dick didn't know it was my mother. Instead, it just felt the bare foot of a beautiful woman hovering above it and decided to activate in full.\n\nI did my best to ignore my aching dick, hoping it would go down. But as I began to paint my mother's cute, tiny toes, I felt myself grow even harder.\n\nMom took back her first foot. She gave me her second. And that's when her heel clearly, unequivocally, grazed my shaft.\n\n\"Oh,\" Mom said, and for a moment I feared she was about to pitch a fit. But then she settled in her seat, ignoring that the contact had ever happened. I set about doing her nails like it was nothing.\n\n\"Do you want me to do yours?\" Mom asked when I was finished. I couldn't tell if she was kidding or not.\n\n\"Uh, that's OK,\" I said, waving her off.\n\nI got up to go make lunch. We stayed outside in the fresh air and ate our sandwiches. By then, Mom's hands were dry, and she was able to get back to her day. But when I went upstairs to my bedroom, the idea of staying in there seemed boring.\n\n\"I think I'm going to take a walk,\" I told my mom, \"We can do that, right? The cops aren't going to hunt me down for leaving the house?\"\n\n\"I think you'll be fine, honey,\" Mom said, \"Do you want me to come with you?\"\n\n\"Up to you,\" I said.\n\nMom nodded and went back to folding laundry. As I went around the block, I could feel how out of shape I was. Coach would kill me if came back to school like this. I couldn't go to a gym, and we didn't have weights in the house, but I knew I needed to at least be running. It was early enough in the year that I thought there might be a hockey season when we got back. I know, I was a bit naive.\n\nWhen I came home, I showered and helped Mom make dinner. As we ate, I told her my plan to wake up early and start running.\n\n\"That sounds nice,\" she said, \"Would you mind if I joined you? Your old Mom needs to lose all this fat.\" She pinched her side for emphasis.\n\n\"Mom, you're not... You're perfect, OK?\" I said, \"Truly.\"\n\n\"Tell your father,\" Mom muttered.\n\nAfter we cleaned up, Mom went to set up the TV. She pushed the remote, but nothing happened.\n\n\"Hmph,\" she said, frustrated. I did the mansplaining thing and took the remote but, to my embarrassment, I wasn't able to get the damn thing working, either. We spent the next half hour messing around with the electronics, looking on the Internet for solutions, the whole thing. As far as we could tell, the relatively new television had just up and died.",
        "\"We can't even go to the store to get a new one,\" Mom said, pouting. It was the first time I'd seen her treat our quarantine as anything but a fun adventure.\n\n\"We can order a TV off Amazon,\" I said. \"And I think the Wal-Mart in Danbury is open. We could go tomorrow.\"\n\n\"No, I know,\" Mom said. \"Honesty this isn't so bad it's just frustrating. I want to be able to see my friends, go to a play, eat at a restaurant, any of it.\"\n\nI noticed she hadn't mentioned having Dad back on her list of things she was missing.\n\n\"Being stuck in the house is hard,\" Mom said.\n\n\"You mean with me,\" I said.\n\nMom reached over and tousled my light brown hair. It was slightly curly, and I hated it. \"Honey, you're the only good thing that's come out of this stupid virus.\"\n\nI smiled, despite myself.\n\n\"Darn, I was really looking forward to watching our movie tonight,\" Mom said.\n\n\"There's always Dad's 'man cave,'\" I said, giving those last words the disdain they deserved.\n\nMom sucked in her breath like I'd kicked her in the shins. \"Your father doesn't like me going in there,\" she said.\n\n\"So what?\" I said, \"He's not here and we want to watch our movie. What's he going to do about it, exactly?\"\n\nMom looked at me with new eyes, like I'd said something that surprised her.\n\n\"You're right,\" Mom said, \"Let's do this thing.\"\n\nShe made popcorn while I went down to the basement. Dad had set up his little sanctum really well. It was probably the nicest room in the house. Most of our furniture was old and tired, but Dad had filled his space with a fancy leather love seat, a massive 75\" television, and thumping surround sound. It was a small area, not much room, but he'd turned it into his cozy hideaway.\n\nI sat on the couch and set up the entertainment center. It was this whole complicated thing, which was probably one of the reasons that Mom treated it like a landmine. But I knew how to work it from my high school days of watching the Bruins with Dad.\n\nI got everything going, then leaned back on the couch. Mom came down with the popcorn and sat next to me. By the nature of the furniture here, we had to sit closer. Hip to hip.\n\nThis time, we'd chosen to watch Forgetting Sarah Marshall. It was one of Mom's favorites.\n\n\"I used to watch a lot of these movies when you were young,\" Mom said, \"It was my way of giving myself a break.\"\n\n\"Come on, I wasn't that bad,\" I said.\n\n\"You were an easy baby,\" Mom said, patting my leg, \"But that's like saying it was an easy hike across the Sahara. Even the effortless ones feel impossible. Especially for a young girl. I was still in college when I had you. My friends were back in school, doing wild stuff. I was at home being a mom. Sure, I was twenty, but it was still hard.\"\n\n\"I'm sorry,\" I said.\n\n\"Oh, don't apologize, sweetie,\" Mom said, \"You didn't do anything wrong. But sometimes, after I'd put you to bed and your father was already passed out, I'd rent a bunch of these movies and marathon them. I don't know, I guess it made me feel like I could be young. At least for a little bit.\"\n\n\"That makes sense,\" I said, \"But I still feel bad. Like I stole your life.\"\n\n\"Mom leaned over and kissed me on the cheek, \"Oh honey, you made my life.\"\n\nWe pushed play. Ten minutes later, Jason Segel was walking around with his dick flopping out. Again, Mom gave me a pointed look. Seeing those kinds of scenes with her still made me uncomfortable.\n\nBut as the movie moved on, I started to experience a different kind of discomfort. It was cold in that basement. I wrapped my arms around my chest.\n\n\"Your father always complains about the cold,\" Mom said, \"But I can't let him bring a space heater down here because of all the other electronics. I'm worried he'll blow something out and burn the house down.\"\n\n\"It's fine,\" I said, \"My fault for wearing short sleeves.\"\n\n\"You could get changed,\" Mom said.\n\n\"Nah,\" I said. Getting off the couch seemed like a lot of effort in that moment.\n\n\"I think there's a blanket here,\" Mom said. She reached over and pulled a heavy blanket from behind the couch. She put it over both our laps, then restarted the movie.\n\nThere were a few more dirty scenes. The tantric sex one, for example. Once again, my body responded. Especially under the blanket where it was comfy and warm. I felt myself stiffen at some point and it never went away.\n\nThen we got to the scene where Sarah decides she wants Peter back and they're in the bed together. It's supposed to be an uncomfortable scene, but something about it set me off.\n\n\"Do you want my mouth?\" Kristin Bell asked, and my cock tried to skyrocket through my shorts.\n\n\"I forgot about this scene,\" Mom mumbled to herself.\n\nThen, for some reason, she glanced down and clearly, obviously, saw that I was pitching a tent. She made a little squeak, then quickly turned away. There was a moment of protracted silence. The sounds of the movie weirdly muted by the pounding in my chest. My head.\n\n\"It must be hard,\" Mom said. I nearly fell out of my seat. \"That is, I mean, it must be difficult for you to be all alone with just your mom in the house. You know, no outlet for the feelings and desires that come with being a boy your age.\"\n\n\"Oh,\" I said, \"Yes. Sometimes.\"\n\n\"It's perfectly natural,\" Mom said, \"To have, um, urges.\"\n\nI stared over at her, my eyes widening so fast I feared they'd explode. I tried to answer, but the words wouldn't come.\n\n\"I have them too,\" Mom said, \"It's biological. And with your father not in the house. I mean, you can't see it, but sometimes I react, too.\"\n\nInstinctively, I looked down at Mom's chest. Her nipples really were poking out from her white, ribbed tank top. Mom saw me looking and pulled her flannel tighter, clearing her throat.\n\n\"In any case, it's nothing to be ashamed of,\" Mom said.\n\n\"Thanks,\" I said. At some point we'd paused the movie, so I reached for the remote to turn it back on. Anything to change the subject.\n\n\"Do you need to, you know, take a break?\" Mom asked.\n\n\"Mooooom!\"\n\n\"I understand if you do,\" Mom said. She rested her hand on my leg, over the blanket. \"You shouldn't feel bad about it at all.\"\n\n\"I'm fine,\" I said, my voice quavering. Mom nodded. But she kept her hand on my leg.\n\nI pushed play on the remote and we finished the movie. When it was over, I stayed on the couch. My erection was still obvious. I knew Mom was aware of it, but I didn't want to stand up and have her see me for sure.\n\n\"Want to watch something else?\" I asked.\n\n\"Sure,\" Mom said, \"Pick something.\"\n\n\"I think I'm kind of movied out,\" I said, switching over to cable. I flipped the channels to something banal and meaningless -- some show where they redid houses -- and willed my dick to go down.\n\nMom sat back and sighed. She took her hand off my leg and I thought that was the end of it. Then I felt a touch on my thigh.\n\nOn my bare thigh.\n\nMom had slipped her hand under the blanket. I was only wearing mesh shorts, and Mom's hand was touching my skin. Lightly stroking my leg hair. I looked over at her, but she was staring forward, as if entranced by the TV show.\n\nShe slid her hand upward. On top of my shorts. Slowly tracing. Until, finally, her palm rested on my cloth-covered cock.\n\nI froze. I didn't want to say anything, afraid it might break the spell. Mom was still watching television. If she had any idea what she was doing, touching, she didn't show it.\n\nMy breath was shallow. I couldn't focus on anything. Just Mom's warm hand on my dick. Finally, I knew I had to say something. If she'd grabbed me by accident -- it had to be an accident -- I needed to tell her.\n\n\"Mom, you're touching me,\" I said, \"You know. Down there.\"\n\n\"Am I?\" Mom said. For the first time she turned to look at me. She was smiling coyly. I thought she was playing around. \"Are you sure?\"\n\n\"Yes,\" I said, as if the word was synonymous with 'duh.'\n\n\"How do you know?\" Mom asked, still grinning, \"Can you see?\"\n\nInstinctively, I reached to lift up the blanket, but Mom forcefully held it down with her other hand.\n\n\"Nuh-uh-uh, no peeking,\" she said. I felt her hand move, and for a moment I was overcome with both relief and regret. All Mom did, though, was move up slightly, find the waistband of my mesh shorts, and pull them down till my dick popped free.\n\nMy mother -- the woman who'd given birth to me, raised me, cared for me my entire life -- grabbed my bare cock and squeezed.\n\nI groaned.\n\n\"Are you OK, dear?\" Mom asked, casual.\n\n\"Um, yes,\" I said, \"Yup.\"\n\nMom loosened her grip a little, then began to stroke my dick up and down.\n\n\"You're um...\"\n\n\"I'm what?\" Mom asked. She didn't slow her movement one bit. If anything, she picked up speed. Playing me to perfection.\n\n\"Well, I mean.\" The faster Mom stroked, the less I could speak. \"It feels really good.\"\n\n\"What does?\" Mom asked.\n\n\"What you're doing,\" I said.\n\n\"What am I doing, exactly?\" Mom asked.\n\nEven through the increasing pleasure, I gave my mother an incredulous look.\n\n\"Tell me what you think is going on,\" Mom said.\n\n\"You're um, well, you're stroking me off,\" I said.\n\n\"Perhaps,\" Mom said, \"But unless we look, we truly can't know for sure. Can we?\"\n\n\"Oh God,\" I said. Mom was milking my dick like a master. With Cassie, a hand job took a long time, and I'd have to stop her a few times and correct her motion. My Mom had me near completion in moments.\n\n\"Oh. Oh. Oh.\" I wasn't used to making noises during sex, but Mom was dragging them out of me. \"Mom, I'm getting...\"\n\nMy mother shushed me. She met my eyes. And in that moment, with my mother looking right at me, I came in her hand.\n\n\"Ohhhhhhh fuck,\" I said, my semen spilling out of me. The ecstasy sharper than I'd ever experienced. Finally, I softened, sticky in Mom's palm.\n\n\"Thanks,\" I said, stupidly, sinking back into the couch.\n\n\"For what?\" Mom asked, again looking at me like I was the odd one.\n\nA moment later, she got up to go to bed.\n\n*\n\nThe next morning, I woke up on Dad's couch. I didn't remember falling asleep there. But I definitely recalled what had happened the night before.\n\nI made my way upstairs, feeling like I was on a strange walk of shame. I told myself that what I remembered couldn't have happened. After I got changed, I went out for my first morning run of quarantine. Mom was already in the driveway, stretching.\n\nI froze, anticipating an awkward conversation. Instead, Mom said nothing. She just nodded her chin at me. Maybe I really did dream the day before.\n\nWe went for a short, one-mile loop around the neighborhood. I knew I needed to do more, but even after that little distance I was already breathing hard. Amazing how quickly the body can let go if you let it. Besides, I was still bamboozled by what had happened and Mom's seemingly unfazed attitude about it.\n\nWe got home and I showered in the hall bathroom, lost in myself. When I went downstairs, I found Mom humming to herself and making breakfast, like always. I sat down to a mug of steaming coffee and a small stack of pancakes. For half the meal, I waited for Mom to say something, but she acted like everything was normal. Finally, I had to speak up.\n\n\"Mom, about last night,\" I said.\n\n\"What happened last night?\" Mom asked. She looked down at her phone, distracted.\n\n\"When we were watching the movie,\" I said, \"When you were. When I...\"\n\n\"I told you honey, it's perfectly natural to react that way,\" Mom said. She got up and started to clear the table.\n\nI spent the rest of the day in a cloud of confusion. I considered every crazy option I could. Maybe Mom had been drunk. Though I knew she hadn't had any alcohol. Perhaps Mom had gone temporarily insane? Or maybe I had accidentally hypnotized her in some way. Could aliens have possessed her for one five-minute period? And made her give me a handjob? For some reason?\n\nIt was all ridiculous. But were any of my theories any stranger than the fact that my own mother had stroked me off while watching TV and then pretended that nothing had happened?\n\nOnce again, after we finished dinner, we went downstairs to watch a movie. I sat on the couch and discovered, to my dismay, that I was already hard. Apparently, my body was prepped. The handjob had only happened once, but already I was conditioned to expect it. Pavlov would have had me drooling in an afternoon.\n\nMy dick stuck up like it was a divining rod. And I knew exactly where it wanted me to head. I grabbed the blanket to cover myself as Mom made her way downstairs, hoping she wouldn't see.\n\nMom chose Knocked Up because, of course, then sat down next to me on the couch. My erection went from stiff to raging as Mom's hips pressed against mine. I noticed she had both her hands under the blanket.\n\n\"Ready to go, kiddo?\" Mom asked.\n\nI turned on the movie. Almost immediately, I felt Mom's warm palm touch my bare leg. There was no pretense this time. She went straight for my shorts and pulled them down. Then she grabbed my hard cock.\n\n\"Mom,\" I said.\n\n\"What dear?\" Mom asked.\n\n\"You're doing it,\" I said, \"Again.\"\n\n\"Are you sure?\" Mom asked, a mirror of the night before.\n\n\"Pretty sure,\" I said.\n\n\"Really,\" Mom said. She pulled her hands out so I could see them. Her wedding ring glinted in the basement lights. \"You're super sure about that? Because I want to make certain we understand each other. This thing you say is happening, does it feel good?\"\n\nI had to concede that it did. It felt amazing.\n\n\"Good,\" Mom said, \"But here's the thing. If I was doing what you say, that would be wrong. Moms aren't supposed to do those kinds of things with their sons. So, I would have to stop.\n\n\"But if you don't know what I'm doing. If neither of us is certain, then who's to say what's going on? It might be nothing at all. And that amazing thing you like so much can keep happening.\"\n\nMy mother smiled at me, a little twinkle in her bright blue eyes. Did I tell you my mom was beautiful? She was fricking gorgeous.\n\n\"If it's under the blanket,\" I said, \"Then it's OK.\"\n\nMom tilted her head slightly, like she hoped it would help me think harder.\n\n\"Because this thing that I'm feeling could be anything,\" I said, \"I'd have to look to be sure.\"\n\n\"You would,\" Mom said.\n\n\"And I just don't have the energy to do that right now,\" I said.\n\nMom grinned at me. \"Good call,\" she said. She slid her hands back under the blanket. As soon as I pushed play on the movie, Mom grabbed my cock once again.\n\n\"Oh, Mom,\" I groaned.\n\n\"Now, if nothing is happening, we shouldn't be making noises,\" Mom said. \"Right?\"\n\nI nodded, already completely under control of the hand that was tightly gripping my cock.\n\nMom worked me up and down, languid. Unlike the previous day's urgency, my mother took her time, gradually teasing and building as we watched TV together.\n\n\"You're not doing me like a dog,\" Kathryn Heigl said.\n\n\"Doggy actually feels really good,\" Mom muttered to herself, idly.\n\nA few moments later, she increased the speed of her strokes. I choked out a little groan, doing my best to keep it under control as Mom had told me. I reached my peak a moment later, gritting my teeth to keep my moans from slipping out. My seed seeped warm over Mom's fingers.\n\n\"Can you pause the movie for a moment?\" Mom asked. \"I seem to have gotten something on my hand.\"\n\n\"Probably moisturizer,\" I said. Mom smiled at me. She seemed so happy now that I was playing along.\n\n\"Probably,\" she said, then got up to go to the bathroom.\n\n*\n\nI woke up early the next morning, in my own bed this time, and got dressed for a run. Again, my mother was waiting for me. We went outside and started to jog through the neighborhood. Spring was in full force, plants budding, the ground wet with morning dew. The streets, though, were strangely empty. Everyone was inside. It was weird. Like we'd stepped into some post-apocalyptic place.\n\nMom caught up to me. She was wearing tight, black leggings and a blue tank top. Her golden hair was up in a ponytail.\n\n\"You're giving me quite the workout,\" Mom said between pants.\n\n\"Coach will kill me if I'm not in shape when we go back,\" I said.\n\n\"Well, do what you need. Your old Mom will just have to do her best.\"\n\n\"Mom, you need to stop saying you're old, OK? You're young, your body is in fantastic shape, you're super beautiful, and...\"\n\n\"Super beautiful, huh?\" Mom said. Both of us started to blush. Rather than respond, I picked up the pace.\n\nWhen we got home, I showered in the hall bathroom while Mom cleaned up in the master. Then we both met up for breakfast. Mom had poured out granola for both of us, and we crunched in silence.\n\n\"You know I didn't think it was possible, but I think I'm done with raunchy comedies,\" Mom said, \"At least for now.\"\n\n\"Oh,\" I said. I looked down at my bowl. Of course this was going to happen. Mom wasn't going to jerk me off every night till the end of the quarantine. It was silly of me to expect it. Especially after I'd slipped up and told her I found her attractive.\n\n\"We should start watching other stuff,\" Mom said.\n\n\"Oh!\" I said, \"That sounds good.\"\n\n\"Good,\" Mom said. And I swore she shot me a little wink as she went back to eating.\n\nAfter dinner that night, I came downstairs to find Mom was already waiting for me, sitting under the blanket on the couch.\n\n\"Boogie Nights?\" I asked, looking up at the screen.\n\n\"Trust me,\" Mom said.\n\nI pushed play. It wasn't long until both of us were clearly worked up by what was going on. Sure enough, Mom reached over and put her hand on my bare leg. A moment later, it was my bare cock that she was holding, instead.\n\n\"Jay?\" Mom asked, pausing the movie and looking over at me.\n\n\"What's up?\" I asked, trying to sound normal while the woman who gave me life was giving me the handjob of my life.\n\n\"Well, hmmm, I don't know exactly how to say this,\" Mom said, \"It just, well, it seems to me that if something could be happening to you under the blanket...\"\n\n\"Which it might,\" I said.\n\n\"Or might not,\" Mom said.\n\n\"Right,\" I said.\n\n\"But if it were,\" Mom said, \"Then it's also possible, though not for sure, that something might also be happening to me. Under the blanket. Not that I would know for sure, of course.\"\n\nMy eyes widened as I realized what Mom was getting at.\n\n\"Theoretically of course,\" Mom said, \"Well, anyway. Something for the philosophers I suppose.\"\n\nMom reached for the remote and clicked play. I waited a moment, mostly trying to overcome the shock that was currently overwhelming me. Mom was still holding my dick, but she wasn't moving.\n\nThen, when I saw she was intent on the movie, I slid my hand under the covers. I gasped as I touched her warm, bare thigh.\n\n\"You OK, honey?\" Mom asked.\n\n\"Just fine,\" I said. I'd expected Mom's usual jeans, but she clearly wasn't wearing them. I moved my hand up further, feeling her creamy skin under my fingertips. I expected to hit the hem of shorts, but those weren't there either. This time, I managed to repress my surprise.\n\nWas Mom completely naked below the waist?! I moved my hand up further and found that, no, she was wearing panties. But that was all. Only one thin layer of sheer cloth was between me and the very canal that had once birthed me.\n\nI touched the gusset of her underwear. They were dripping wet and warm. The movie was completely gone for me. In fact, I was so focused on feeling my mother's most private place, I nearly lost track of her hand on my cock.\n\nGently, I began to probe at Mom's center with my fingers.\n\n\"Hm,\" Mom said.\n\n\"Movie's good,\" I said.\n\n\"Oh yes,\" Mom said. I have to admit, I was enjoying turning the tables on her. Feeling Mom's pussy through her panties was nice, but I knew I had to risk going further. I'd never forgive myself if I let the chance go.\n\nI pulled Mom's panties aside and felt her bare vulva for the first time. Her nether lips were full and open. Her pussy practically had a welcome mat setup outside for how open and exposed she was. Mom wasn't kidding about being aroused.",
        "I had fingered lots of girls -- it was the hit game that all the cool kids were playing -- so I felt pretty good about my skills to get Mom off. I gently traced around her pussy till I found the little nub that was certain to bring her pleasure. Then I started stroking it back and forth.\n\nI was touching my mom's clit. I was playing with her pussy. I could feel how hot and wet she was. Oh God.\n\nAs I worked Mom over, she redoubled her efforts on my dick. We mirrored each other's movements. As if steering each other with our respective sexes. Whenever Mom slowed, I did the same. If she sped up, I matched that too.\n\nI managed to get Mom off first. Is it weird that it was one of the proudest moments of my life? I saw Mom stiffen, her face flushed, and then she let out a long, drawn out sigh.\n\nA moment later, she brought me my own pleasure. I came hard, coating her hand and the blanket with my spend.\n\nBoth of us sank into the cushions, looking at each other playfully.\n\n\"Stuff on your hand?\" I asked.\n\n\"Weirdly, yes,\" Mom said, \"You?\"\n\n\"Little bit,\" I said, \"I don't mind it though, really.\"\n\n\"Oh, me neither,\" Mom said, \"But we should still probably take care of it.\"\n\nWe both got up and went over to the basement bathroom. Mom went first and I followed. As I dried myself off, Mom called to me from the couch.\n\n\"You know, I think this blanket is stained?\" she said.\n\n\"Oh,\" I said, \"Well that's too bad.\"\n\n\"I guess we should throw it in the wash,\" Mom said, \"But don't worry. I'm sure I can have it ready for tomorrow night's movie.\"\n\n\"Yes, I wouldn't want to get cold,\" I said, taking the comforter from Mom and stuffing it into the washing machine.\n\n*\n\nWe established a whole new routine. In the mornings we'd wake up and go for a run. Then we'd clean up and have breakfast. We spent the middle of the day doing our own thing. I had class and Mom had Mom-stuff.\n\nAt night, we made dinner and cleaned up together. But we stopped watching movies. There didn't seem to be any point. Since we weren't really paying attention, we could have any old show on.\n\nEvery evening, we sat under the blanket on Dad's couch, and brought each other off with our hands. Each of us pretending as best we could that nothing was going on.\n\nNow that she knew she could trust me, Mom started changing up her habits. Sometimes, I would discover she'd put lubricant on her palm beforehand. Holy crap did I cum ropes the first time she did that. Other times, she'd use her other hand on my balls, lightly cupping them while she drained them dry. She'd also change up her movements, straight up and down, or kind of a corkscrew, or running her thumb up the underside of my dick. One time, she did all those things together, and I nearly died.\n\nI had to keep up with her inventiveness. I brought out all the tricks I knew. I played with her clit again, yes, but I'd also slip a finger inside her (the first time I did that, I actually came without Mom needing to touch me). I found that Mom usually liked a combination of two fingers in her twat while my thumb rubbed her clitoris. Her butthole, on the other hand, was a flat no-go. Still, I found lots of other ways to make things interesting. Like me, it seemed that Mom mostly liked variety.\n\nWe never discussed our evening activities with each other. Once we were both satisfied, we'd turn off the TV and go to bed. The next morning, we'd do it all again. Nothing changed. I honestly believed that nothing ever would.\n\n*\n\n\"Have you gone all the way?\" Mom asked, as if this was a totally normal mother-son conversation.\n\nWe were sitting outside in the backyard. Mom's feet were up on my lap, and I was slowly painting her toes. She'd already finished with her fingers -- going from dark purple to a cute, canary yellow.\n\nThe problem was, Mom's question actually felt perfectly normal. This weird existence we had where we were both fooling around regularly while also pretending that we weren't, meant that we could have these incongruous conversations that seemed like they should have been weird but were actually ordinary.\n\n\"No, I'm not a virgin,\" I said.\n\n\"Cassie?\" Mom asked.\n\nIt said a lot that enough time and handjobs had passed that I didn't even flinch when Mom mentioned my ex. Honestly, the only girl I ever thought about those days was the sexy, sultry woman whose toenails I was painting.\n\n\"I had sex with Cassie, yes,\" I said.\n\n\"Was she any good?\" Mom asked.\n\nI eyed her. I wasn't sure if this was a trap question. You don't tell the person you're fooling around with that you had amazing sex with your ex. But then, Mom and I weren't doing that. Supposedly.\n\nI decided to answer honestly. \"It was OK,\" I said, \"Cassie had a lot of hangups.\"\n\n\"Like what?\" Mom asked, leaning forward as best she could with her foot in my hands.\n\n\"She was, well. She was sort of afraid of my stuff. You know what I mean?\"\n\n\"Honestly, can you blame her?\" Mom asked.\n\n\"She was on the pill, and we always used condoms,\" I said. I was surprising myself with how candid I could be. \"Even with oral. I couldn't ever really enjoy my... Well, when I... You know.\"\n\nHow was it that I was sharing an orgasm with my mom every night, but couldn't say the word during the day?\n\n\"I understand,\" Mom said, \"You felt like you did everything to get her off, but when she did it for you it wasn't the same.\"\n\n\"Yes,\" I said, \"Exactly. One time, though, we got drunk and did it and it was like being with a different person. She totally abandoned all of her issues and it was amazing. The next morning, she was mad, though. Said it was all my fault.\"\n\n\"Honey, you of all people can understand,\" Mom said, \"Considering our family history. Honestly, we all probably would have been much happier if I had a little more of your girlfriend's healthy fear of ejaculate.\"\n\n\"And then you wouldn't have me,\" I said.\n\n\"Oh, honey, that's not what I mean.\"\n\n\"Do you regret having me?\" I asked, \"Did I ruin your life?\"\n\n\"No,\" Mom said, \"You're amazing. Having a child was the best thing that ever happened to me. I just wish it could have happened when I was 28 instead of 20.\"\n\nI understood. Of course I did. I nodded and went back to painting Mom's pinkie toe.\n\n\"The truth is,\" Mom said, \"If I ever got the chance to trade -- if I could go back and be a regular mom? I would still choose you. Every time.\"\n\n\"Why didn't you have more kids?\" I asked. I knew it was an impertinent question, but I couldn't help myself. \"You said you loved having me. You're still young. Why not more?\"\n\n\"Well, at the time taking care of one was enough,\" Mom said, \"And then your father got busy with work. One day, I looked up and you were going off to college. But...\"\n\nMom looked away, blushing.\n\n\"What?\" I asked.\n\n\"Well,\" she said, her voice thin, \"Your father and I... After you moved out, I missed having a baby around. So, we've been, you know. Trying.\" Mom eyed me anxiously.\n\n\"Cool,\" I said, \"I'd love a little brother or sister.\"\n\nMom let out a large sigh of relief. Like she'd really been anxious about how I would react. Admittedly, it would be weird if I was out of college with a sibling that was barely out of diapers. But Mom was so young, it made sense that she would want to start a second chapter of the family story.\n\n\"I guess when Dad gets back, you'll be able to try again,\" I said. For some reason, that thought bothered me.\n\n\"I guess so,\" Mom said, and she gave me an empty smile.\n\n*\n\nThe next morning, we woke up for our morning run. The days were getting hotter, and more people were out on the streets with us. The world was slowly reawakening.\n\nWe'd gotten up to five miles a day and I was starting to feel really good. It was warm enough, too, where I was able to run without a shirt. I tried to convince Mom to go with just a sports bra, but she told me she didn't feel appropriate being exposed like that.\n\nWe were at our usual pace as we turned the corner down a quiet, tree-lined street. We were doing so well, I was starting to think about pushing it, maybe up to 7 miles. Mom usually trailed me when we ran, but as we turned, she caught up to my side.\n\nShe looked down at my bare chest. For a moment, I saw her eyes go wide. Then she fell back.\n\n\"Mom?\" I turned around, thinking she'd just lost her pace. Instead, I found her sprawled in the middle of the street. \"Mom!\"\n\nI raced back and knelt next to her. Mom was lying on the ground. She had a light scratch on her cheek. She looked at me, her blue eyes small and scared.\n\n\"I tripped,\" Mom said, \"I'm OK.\" But her body belied her calm demeanor -- lying in the fetal position on the ground.\n\n\"Can you stand?\" I asked.\n\n\"Definitely,\" Mom said. She started to get up, but when she put weight on her left leg, she tumbled back over again.\n\nI rushed to be next to her.\n\n\"Knee?\" I asked, worried. If her knee was out, we were calling an ambulance.\n\n\"Ankle,\" Mom said. Ok, maybe that wasn't so bad.\n\nGingerly, I helped my Mom stand. She was OK on her right leg, but she held her left lamely.\n\n\"I can walk home,\" Mom said. She took a step, grimaced, then took another.\n\n\"I'm calling someone,\" I said.\n\n\"No,\" Mom said, \"I'm fine.\"\n\nI watched, grimly, as she limped down the street. We were three miles from home. There was no way she would make it.\n\nBefore she could argue, I raced up and scooped my mom into my arms. I held her up, like a baby, and started to walk us back home. Mom wasn't tiny, but she was light. I hadn't done all that upper body work planning to one day carry a woman three miles, but it seemed like a worthy reward in the moment.\n\nWe walked down the street; my mother clutched to my chest.\n\n\"Sorry,\" Mom said. She was clearly embarrassed by what had happened. \"I guess I tripped on something.\"\n\n\"It's OK,\" I said, \"I'm just glad I can be here for you.\"\n\n\"My little knight,\" Mom said, remembering her old nickname for me. \"Come to save me once again.\"\n\n\"I wouldn't have it any other way,\" I said.\n\nThree miles running is very different than three miles walking. Especially while carrying someone. We had to break a couple of times so I could rest. It had taken us less than an hour to get out but coming back to the house took more than three.\n\nWhen we finally got home, both of us collapsed on the front lawn. We lay on the grass, staring up at the blue sky. The day was warm. The air smelled like honeysuckle. The world was comfortingly quiet.\n\n\"This is nice,\" Mom said.\n\n\"No, it's not,\" I said.\n\nShe reached over and grabbed my hand, squeezing it tight. \"Yes, but it kinda is.\"\n\nI pulled her hand to my lips and kissed it. Chivalrous to the end. For a moment, I thought Mom would yell at me for doing something affectionate where she could see it. Where everyone could. But instead, she beamed at me.\n\nEventually, we were able to get up and I carried Mom inside the house, up to her bedroom. Even as an adult, it felt strange being in Mom's space. Like I'd crossed an invisible barrier into my parents' private world. The room was well appointed with dark woods and a crimson comforter. It felt very mature. Quite demure.\n\nI laid Mom down carefully on her Queen-sized bed. Then I went downstairs to the fridge and threw together a bag of ice. When I came back, Mom was lying back, head propped up by the pillows. She was still in her running outfit: tight black yoga pants and a green tank top. Her ponytail was askew, and her blonde hair stuck out in little, golden streaks.\n\nWith everything going on in the world, I really didn't want to take Mom to the hospital. Instead, I looked up what Dr. Google thought and put together a little plan. Rest and ice, mostly, while checking for swelling. I knew that if Mom couldn't put weight on the ankle, she'd be going to the doctor, but I was hoping it was just a sprain and she'd be fine.\n\nOnce I was sure my patient was OK, I went and took a shower. Then I made some breakfast and brought it up for Mom.\n\n\"Do you want to take a shower, too?\" I asked, hoping for the chance to help her.\n\n\"I'm OK for now,\" Mom said, and I knew that I'd gone too far. Again, that was the problem with hiding our relationship under a blanket, it was impossible to truly understand the shape of it. Instead, I had to guess and, occasionally, break the boundaries by accident.\n\nI knew I'd overstepped, so I got up off the bed.\n\n\"Let me know when you're done,\" I said, \"I'll change out your ice bag.\"\n\n\"It's good to have my little knight back,\" Mom said.\n\n\"He never left,\" I replied, standing over her. Mom gave me a dubious look.\n\n\"You're the one who pulled away, Mom,\" I said, the bitterness creeping into my voice.\n\n\"Me? You're the one who started spending all that time with your father,\" Mom said, \"I thought maybe you'd just, I don't know, grown out of me.\"\n\n\"I thought I'd done something to make you mad,\" I said. I sat back down on the edge of the bed.\n\n\"So, we both separated for no reason,\" Mom said, drawing the conclusion for both of us.\n\n\"I guess so,\" I said, \"I'm sorry. I feel like we lost so much time together.\"\n\n\"I love you so much,\" Mom said, \"I don't want to miss anything more.\"\n\nI climbed over and carefully hugged Mom. She kissed my cheek, then we broke apart.\n\nMom slept for a while. I heard the sound of water turning on and realized she'd gotten herself into the shower, somehow. Much as I was sad to miss out on shower time with Mom, I was glad she got in there. She was starting to smell a little ripe.\n\nAround dinner time, I put together a quick, easy meal. I brought it up to Mom in her bed. I took the other side and we sat and ate.\n\n\"This is really good,\" Mom said.\n\n\"It's just pasta,\" I said, \"I guess I learned from the best.\"\n\n\"Clearly,\" Mom said.\n\nWhen we were done, I cleared the plates then came back. Mom's ankle was a little swollen but there wasn't any bruising. Based on my hardcore, Internet-derived medical education, I felt pretty sure she hadn't broken or torn anything.\n\nOnce again, I decided to take a chance. \"Do you want me to help you into pajamas?\" I asked.\n\nMom shook her head at me. \"I'll be fine like this.\" Post shower, she'd changed into a surprisingly racy outfit (for her): a pair of long shorts and a yellow tank top.\n\n\"OK,\" I said, \"I'll see you in the morning.\"\n\n\"Hey Jay?\" Mom called to me as I got to the door.\n\n\"What's up?\"\n\n\"I'm, um, sorry that we aren't able to do our movie night,\" Mom said, \"I know you've come to enjoy it.\"\n\n\"I think you're getting pleasure from it as well,\" I said.\n\n\"Oh, for sure,\" Mom said, \"I love watching shows with my handsome son. But since there's no TV in here, I guess we'll have to wait until I can move around better.\"\n\n\"We can set up in here,\" I said, \"I'll grab my iPad and we can watch in your bed.\"\n\n\"That would be lovely,\" Mom said, the excitement leaking into her voice, \"I'd hate to break our tradition.\"\n\nI went to my bedroom and grabbed my tablet. Then I climbed into bed next to my mother. We propped the screen up between us and settled in. I found another nonsense reality show about people gardening and turned it on.\n\nMom got under the comforter, so the covers were up to about her waist, and I did the same on the other side. On my father's side. Suddenly I became very aware of what I was doing and where I was doing it. The guilt that should have overcome me never appeared.\n\nAs the show got started, Mom snuggled against my side. She rested her head on my shoulder. Flowing, gilded locks ran down my chest.\n\nAt this point, I was usually the one to make the first move, matching the stereotype of the overeager son. But that night I wanted Mom to initiate. I know it seems obvious in retrospect, but in the moment, I wanted to be sure that Mom, in her injured state, wasn't actually interested in just watching TV. Then I felt her small hand wrap around my dick and all my questions were answered.\n\n\"Oh M... I mean, oh man. This show is really good,\" I said, as her lithe fingers contracted on my cock.\n\n\"Mmhm,\" Mom said, absently.\n\n\"I really like how it, um, feels,\" I said, \"What it must feel like, I mean, to get all that work done.\"\n\nWith nothing to hold me back, I shot my hand between Mom's legs. She let out a little gasp as I brushed her panty-clad pussy.\n\n\"They should, ah, wait a bit,\" Mom said, \"That is, um, prep everything for the garden before they get started.\"\n\n\"Oh,\" I said, moving my hand back so it was lightly stroking the material of Mom's underwear. \"Yes, I can see what that would result in a better, um, project.\"\n\n\"Exactly,\" Mom said.\n\nUsually, I wasn't this hyped up. Something about being in my parents' bed, touching Mom in her private place, had me particularly excited.\n\n\"See, now I think they should start working,\" Mom said, after I'd spent some time teasing at her.\n\nI nodded. I found her clit with my fingers. She was particularly slippery that night and I wondered if some of the same thoughts that had me going were getting to her as well.\n\nI glanced over at Mom. Her pretty face was even more beautiful in her pleasure. If anything, the fact that she was trying to keep from showing anything at all only increased how alluring she appeared. The muscles of Mom's neck were taut. Her lips thin. Her breath came in short, sharp gasps.\n\n\"Oh!\" Mom exclaimed as I filled her pussy with my finger. \"Oh, that's a nice... flower arrangement. Very nice.\" Her embarrassment at her exclamation was almost as sexy as the sound itself.\n\nI think she wanted to get me the same way, so Mom redoubled her efforts on my dick. She used all her secret tricks, stroking and twisting to get me to react. I decided to mess with her a little more. What can I say? I'm still a boy.\n\nI got Mom right on the precipice. I'd reached this wonderful, intimate point where I knew Mom's orgasm so well, that I recognized all the signs. I could tell that she was about to peak at any moment.\n\n\"Well, I think I'm going to turn in,\" I said.\n\n\"What?!\"\n\n\"It's been a long day and I'm tired,\" I said.\n\nMom looked directly at where my hand was, under the covers. She'd never acknowledged what we were doing more than this.\n\n\"Are you sure?\" she asked, her voice weak and thready.\n\n\"Not much else going on, right?\" I said. I made a show of looking in the exact same place she was. I didn't think she was going to admit what was going on. In fact, I knew that if she ever did, it would probably be the end of things. But like any good son, I liked to see my mother squirm a little.\n\n\"Don't you want to see the finish?\" Mom asked. \"Of the show, I mean. I hear the climax is, um, really super good.\"\n\nI pretended to think about it. \"I guess you're right,\" I said, \"Let's get this one done before we call it a night.\"\n\nA moment later, Mom arched her bottom slightly, letting out a quick, sharp squeak.\n\n\"Ah!\" she said, then quickly raised her free arm in the air and stretched, \"I mean, ahhhhhh. So tired.\"\n\n\"That was a big yawn,\" I said.\n\nMom nodded. \"Biggest one I've had in a while,\" she said, \"I must be super tired.\"\n\nShe continued to stroke me under the sheet. A moment later, my eyes slammed shut as my orgasm overcame me. My body shook as I tried to hold it in. I was only partially successful.\n\n\"That was a pretty big yawn, too,\" Mom said, quickly covering for me.\n\n\"Must be contagious,\" I said. We shared a smile. Our foreheads rested against each other. For a moment, it seemed like Mom was about to lean forward and...\n\n\"Oh! Wouldn't you know it,\" Mom said, \"I got that damn moisturizer on my hand again.\"\n\n\"What is it with you?\" I asked, playful.\n\n\"You know, I honestly don't know,\" Mom said.\n\n\"I can get you a tissue,\" I said, starting to get up.\n\n\"Don't bother,\" Mom said, holding me back with her dry hand. \"You know, my chest has been feeling sort of itchy lately, I think I'll dispose of it there.\"\n\nI watched, gobsmacked, as Mom let go of my cock and slipped her hand up under her own shirt. She grabbed her breast and started rubbing it, slowly. Sensually.",
        "I didn't have a good sense of the size of Mom's breasts. I assumed, based on previous evidence, that they were about the size of an apple. I hadn't focused on them before because they were never the part that was under the covers. And Mom was always wearing layers that kept them well hidden.\n\nNow though, the whole universe could have exploded, and I would have stayed watching my mom rub my seed into her boobs, spreading it circular over her nipples. First one breast than the other. Moaning lightly as she did so.\n\n\"That feels much better,\" Mom said. She sat back and sighed. \"How about another episode?\"\n\n*\n\nI woke up in Mom and Dad's bed, Mom's head resting on my chest. There was no inappropriate contact -- we were just cuddling. In some ways, that was even worse. We'd slept together like lovers. Woken up as a married couple might.\n\nMom's hand lightly played on my shirt-covered chest.\n\n\"How'd you sleep, baby boy?\" she asked, using another one of my childhood nicknames that I hadn't heard in years.\n\n\"Really good,\" I said. It was true. Something about being in that big bed had felt like resting in a warm cloud. Cossetted and comfy.\n\nMom's hand moved down my chest. It slipped under the covers. My eyes went wide as I realized we were about to expand our nighttime tradition. But right before she reached the waistband of my boxers, something started to ring, loudly.\n\n\"That must be your father,\" Mom said, popping up. She grabbed her cell off the nightstand and picked it up, motioning for me to move over so that I wouldn't be seen on screen.\n\n\"Hi David!\" Mom said. I saw Dad's face appear on the phone. He looked tired. Worn down. The guilt of what I'd been doing with Mom flooded in.\n\nAll Dad had ever done was work his ass off for me and Mom. Sure, I had a scholarship, but that didn't mean he wasn't taking care of me in a million other ways. And because of that work, he was alone, in another country, completely separate from his family. And all the while I was rewarding him by fingering his wife in his own bed.\n\n\"I had a little accident,\" Mom said, \"I'm OK, but I wanted you to know.\"\n\n\"What happened?\" Dad said. I could see the worry in his eyes.\n\n\"Jay and I went out running and I tripped and twisted my ankle,\" Mom said, \"Your son was such a hero, carrying me home and taking care of me.\"\n\n\"Jesus Julie are you stupid?\" Dad replied. His rage was neutered by how tinny it sounded through the speaker phone. \"What were you doing out running with Jay in the first place?\"\n\n\"We've been working out,\" Mom said, \"I want to be in good shape for you.\"\n\n\"Julie, you're too old to be pulling crap like that,\" Dad said, shaking his head like she'd spent their life savings on magic apricots. \"You can't be chasing after Jay like some teenager.\"\n\n\"I'm not chasing after him,\" Mom said, her pride clearly wounded.\n\n\"Fucking hell,\" Dad said, \"I leave for one second and you completely fall apart. Are you going to climb Mount Everest this afternoon?\"\n\n\"It's not that big a deal,\" Mom said, \"It barely even hurts anymore.\"\n\n\"Well, you can't say you didn't have it coming, Julie,\" Dad said, \"You acted like an idiot and got injured. So, congrats on that.\"\n\n\"I'm sorry,\" Mom said. Her voice quiet.\n\n\"Yeah, I'll bet,\" Dad said, \"Maybe this time you'll actually learn your lesson.\"\n\n\"I'll be fine,\" Mom said, and it sounded more like a decision than a promise. \"Do you want to say hi to Jay? He's right, um, in the other room.\"\n\n\"No, I honestly, truly don't,\" Dad said, clearly still upset about what had happened to Mom.\n\n\"Well, is there anything you want me to tell him? When I see him? Later?\"\n\n\"Tell him to stop dragging you along on his dumb escapades,\" Dad said, \"He's a big boy. He doesn't need his Mommy to watch everything he does anymore.\"\n\n\"Yes,\" Mom said, her response automatic. \"OK, I will. We both really miss you, David.\"\n\n\"Look, I'd better get going,\" Dad said, \"I'll talk to you tomorrow. Try not to get a lacerated kidney in the meantime, OK?\"\n\nMom blew him a kiss and hung up. She put the phone down on the bed carefully, like she was afraid she might accidentally throw it across the room. I tried to meet Mom's eye, but she wouldn't look at me.\n\nSuddenly, I didn't feel so bad for sleeping in Dad's bed.\n\n*\n\nMom spent the whole day on her feet, like she'd never hurt herself. A few times, I tried to check on her, but she wouldn't let me. She seemed cold, distant, and it reminded me of the way Mom had acted when I was in high school. I doubted that was coincidental.\n\nThe good news was, she did seem to be moving OK on the ankle. I caught her wincing a few times, but she was able to put weight on it most of the time. Still, a part of me worried Mom was overdoing it just to prove a point to a person that wasn't even there. So, I kept an eye on her throughout the day.\n\nWatching Mom doing her chores shouldn't have been anything exciting, but it was. Doing laundry, washing dishes, vacuuming -- these mundane things became interesting because it was Mom doing it. The way her perfect body moved around the house. It was kind of entrancing, actually.\n\nEventually, Mom caught on to what I was up to. She stood over me on the couch, hands on her hips.\n\n\"I'm sure you can find better things to do with your day, Jay,\" Mom said.\n\n\"Nope,\" I said, \"I'd much rather spend time with you.\"\n\nMom started to snap back, but then she faltered. \"Thanks,\" she said, the word so quiet I almost missed it. Then she left the room. But I noticed she stopped acting so frantic and angry.\n\nThat night, I made dinner while Mom sat on the couch. She finally allowed me to ice her ankle, which didn't look swollen or bruised. I was now convinced that we'd dodged the danger and Mom was going to be alright.\n\nWe ate at the table together, in silence. We were doing OK, I could tell, but the remnants of the earlier tension were still there. It kept our conversation awkward and stilted. Both of us stared at our phones, mostly.\n\n\"Do you mind if I ask you to do the dishes?\" Mom said, \"It's been a long day and I'm really tired.\"\n\n\"No TV show tonight?\" I asked. My disappointment must have been obvious because Mom gave me a guilty look.\n\n\"I'm sorry,\" Mom said, \"I don't want to break our tradition.\"\n\n\"No, I understand,\" I said, \"We can try again tomorrow?\"\n\n\"Maybe,\" Mom said. She got up and went upstairs.\n\nI cleared the table and took the dirty dishes into the kitchen. Washing them by myself only increased the sadness I felt. I know I should have let it go. Bad enough that I was getting milked by my mom, regularly. I couldn't then throw a tantrum when she, rightfully, wanted to stop.\n\nStill, washing up all by myself was what hit it home. Weird that, with all the sexy stuff we were doing, the thing that really hurt my feelings was doing a chore without Mom's company.\n\nAfter I was done, I watched some crap on my tablet in my own bed and then turned out the light. I closed my eyes to sleep, but it wouldn't come. I kept thinking about the day and how I could have done it differently.\n\nThen, as I was finally about to fall into a troubled slumber, my bedroom door creaked open.\n\n\"Mom?\" I asked, instinctive. She didn't respond. But it was clear that my mother had come into my room. It was dark, but I could make out the shape of her. I was so confused by what she was doing, I didn't know what to say.\n\nThe room went quiet. The next thing I felt was someone climbing onto the end of the bed. The covers lifted. Again, I asked Mom what she was up to. Again, I got no response.\n\nI felt her now, crouched over my legs. The heat of her breath under the comforter. I realized: she was under the covers. Mom's touch but don't look policy was taking on a whole new dimension. I couldn't imagine what was about to happen, but I understood I was supposed to pretend like nothing was happening.\n\nMom lifted the waistband of my boxers and pulled them down. My dick popped free, quickly stiffening. Mom wrapped her hand around my shaft. The feeling was familiar and wonderful. I settled back, only wondering why Mom had chosen a position where I couldn't return the favor.\n\nI felt a new sensation. Warm and wet. Oh my God. Those were the only words I could say. The only thoughts I could conjure.\n\n\"Oh my God,\" I said as Mom's mouth wrapped around my cock. Her tongue pressed under my dick.\n\nI felt a hard pinch on my leg and realized that I'd spoken aloud. Mom's rules still applied. I was experiencing Schrodinger's blowjob in my bed. Or was it Heisenberg's Uncertainly Oral? Oh fuck, why did it matter? My Mom was sucking my cock!\n\nShe slurped up and down, sucking me off with the enthusiasm of an amateur and the skills of a pro. Like with the handjob before, I realized how bad all my previous girlfriends were at oral sex. The sounds of wet slurping filled the room.\n\nMy only thought, damn me, was how much I wanted to look under that blanket. To see Mom's mouth wide around my dick. Her sapphire eyes. Her golden hair. I wanted to experience it all. Yet I had to hold it in my head, only.\n\nMom worked me with abandon and soon I didn't care about anything except that place under the sheets where my cock connected with her mouth. I tried to stay silent, but with the way Mom was working me there was no way.\n\nI wanted it to last forever. I doubted it took more than five minutes. Then I had a new problem. I knew Mom was fine with me cumming -- clearly by the way she was sucking me off it was currently her only goal in life. But I knew from previous experience I was supposed to warn a girl before I got off so she could prepare, as appropriate. Except, that would be breaking Mom's rule about pretending nothing was going on. This truly was a ground shaking dilemma.\n\nFinally, I let my chivalry get in the way of my obedience.\n\n\"I'm getting close,\" I said, doing my best to keep my voice calm and even.\n\nMom didn't say or do anything, but I felt her redouble her efforts, now stroking my shaft at the same time she sucked at my head. A moment later, I was gone.\n\n\"oooOOOH FUCK!\"\n\nI couldn't help it; the pleasure was all too much. Through the white haze of ecstasy, I heard my mother gulping down my cum. I'd never exploded in a girl's mouth before. Even Cassie had always finished me with her fist.\n\nMom swallowed my spend like it was the world's tastiest treat. The sounds of her swallowing amplified my orgasm from brain blowing to mind shattering.\n\nWhen I regained a sense of myself, Mom was gone. I lay back, panting from what had happened. Then my door popped open again. This time, the hallway light was on, and I could see Mom, standing there in her green, shapeless sleep shirt.\n\n\"Are you OK, honey?\" Mom asked, coming into the room and standing over my bed. \"I heard noises. Were you having a nightmare?\"\n\n\"Oh, I'm sorry I woke you,\" I said, \"No I actually had the most incredible dream.\"\n\n\"Well, that's OK then,\" Mom said, \"You know I'll do anything to take care of you. The same way you take care of me. You did an amazing job the last few days of making me feel protected and safe. I just wanted to make sure I said, 'thank you' in a way that would mean something to you.\"\n\n\"I'm fine, Mom,\" I said. Actually, I was way better than fine. I was floating like a feather coming down from heaven.\n\n\"OK sweetie. Have a good night,\" Mom said. She bent over and kissed my forehead. Her breath smelled like my sperm.\n\n*\n\nI woke up early the next morning, before the sun was even up. I tiptoed out of my room, careful to avoid all the creaky spots in the hallway. When I got to my parents' bedroom door, I twisted the knob before pushing it forward. I hadn't even gotten to the naughty part of my plan, but already my stomach was twisting with the excitement of what I was about to do.\n\nMom was lying back in the bed, clearly out. I could see she still had the green sleep shirt on. Like she'd done the previous evening, I lifted up her comforter at the end of the bad and slipped under it. Mom stirred but stayed asleep.\n\nI crawled up the bed, feeling my way up Mom's legs. For all her complaining about being out of shape, her calves and thighs felt as firm as a college girl's. Goddamn. I'd never been a leg man, but maybe it was time to try.\n\nWhen I got to the bottom of Mom's shirt, I started to slowly push it up to her waist. I noticed the difference immediately: she wasn't wearing panties under there!\n\nFor a moment, I cursed the dark of the room. This was my chance, finally, to see Mom's bare pussy. Instead, I only got the vague sense of full labia and thick pubic hair. I could smell her slight musk, though, and that almost made up for everything else.\n\nThen, for another moment, I had a far more wicked thought. I was under the covers with Mom, she was asleep, and my cock was hard as hell. Was I breaking the rules if I broke into her most sacred spot with my bare battering ram? After all, it was still under the sheets.\n\nBut I stopped myself from thinking further. I was already taking liberties no son should ever try for; going for more was asking far too much. At least, this time.\n\nInstead, I leaned forward and tentatively licked at my mother's vagina. Her taste, still subtle, was even better than the smell of her. I'd gone down on previous girlfriends a couple of times, but it felt like the minor leagues compared to what I was doing now. I did what I thought would feel good, based on my mother's previous responses, and hoped for the best.\n\nOn my second lick of her clit, Mom groaned, low and stretched. Her head shot up from the pillow.\n\n\"Oh my!\" She froze in place. \"Well, that is just the oddest sensation,\" she said, regaining her composure as she sank back down into the bed.\n\nNow that I had Mom's attention, I began to gradually build her up. First with my tongue, then supporting with my fingers. I heard her heavy breathing in the distance. I felt her legs tighten around my back.\n\nI couldn't wait to make Mom cum. I didn't want it to ever end. But my selfless side won out. When I felt Mom's body begin to break, I gave her one last shove, sinking my tongue into her slot.\n\n\"HrrrrAH!\" Mom cried out. Her legs closed over my head like a bear trap snapping shut. To my shock, a burst of warm liquid spattered on my tongue. Mom shook like she was having a seizure. Then she dropped back. Stilled. She didn't loosen her legs, though. She kept me there. Both of us panting heavily.\n\nFinally, I had to tap out. I don't think Mom even realized she was holding me with her hips. But she opened them as soon as she felt me lightly slap her thigh. Careful to keep the illusion, I slipped silently out of the bottom of the bed, then crawled out of Mom's room.\n\nJust like she had the night before, I came back a moment later, standing in the doorway like I didn't know what was going on.\n\n\"You OK?\" I asked, \"I was about to go out for my run when I heard something.\"\n\n\"Fine,\" Mom said, absently. I was gratified to see her post-orgasm face. Hair everywhere. Jaw slack. Cheeks a rude shade of red. Even her azure eyes were distant and unfocused. \"I'm just, y'know, waking up.\"\n\n\"I'll make something when I get back,\" I said.\n\nMom nodded. I was about to step away when she said my name.\n\n\"Jay, honey?\n\n\"Yeah Mom?\"\n\n\"So you know, you have some, um, stuff on your chin. And your cheeks. And a bit on your nose, too.\"\n\n\"Oh, weird,\" I said. I slowly dragged my finger on my face, then popped it into my mouth. Licking hard.\n\nI swear Mom had another little cum as she watched me suck her juices off my finger.\n\n*\n\n\"You should get some sun,\" Mom said, \"Be tan for all the college hotties.\"\n\nWe were out in the backyard. Birds chirping happily over the low hush of leaves rustling in the wind. Someone's dog barked in the distance. Mom leaned back in her lounger while I carefully painted her toenails a playful shade of green.\n\nMom's eyes were half shut, to the point that I thought she might have fallen asleep before she spoke. Her hair, longer than usual from the lack of open salons, spilled out over the seat like a golden waterfall. Even though I knew Mom's ankle was fine, I still held it carefully, in case.\n\n\"There are no college hotties, Mom,\" I said.\n\nShe gave me a dubious look. \"I understand that right now -- under quarantine and all -- that it's easy to forget that there is a whole world out there. But once you go back to school, I'm sure you'll meet some other girl. Lots of them, I imagine.\"\n\nHer implication was clear. I nodded in agreement. \"Of course,\" I said.\n\n\"So, you should do a bit of bronzing,\" Mom said. She looked at me, the challenge clear in her eyes. I gave it right back to her. Finally, I spoke.\n\n\"I will if you will,\" I said.\n\nMom's face pinked. \"Honey, it's a little different for girls.\"\n\n\"So what?\" I said, \"There's no one in the backyard with us. The fence is plenty high to keep out random lookers.\"\n\n\"You're here,\" Mom said.\n\n\"So?\"\n\nMom withered under the weight of my indisputable dialectic.\n\n\"Just my shirt,\" Mom said.\n\n\"You'll have tan lines,\" I said.\n\n\"Better than getting sunburned boobs,\" Mom said. We both giggled. I don't think either of us was expecting her to use that word.\n\n\"You first,\" I said.\n\nMom tipped her head at me and tsked her tongue.\n\n\"Both at the same time,\" I said.\n\n\"Fine,\" Mom said. She unbuttoned her flannel shirt and tossed it to the side. Then she took off her white, ribbed tank top.\n\nI stared at the glory that was revealed. Mom was wearing a deep red lacy bra, nothing fancy, with a bit of a swooping cut that kept her breasts well covered. She had a cute little tummy with only the slightest hint of fat to it.\n\nI'd imagined Mom's breasts more than a few times by now. They were better -- bigger, fuller -- than I'd ever conceived. And that was with the bra still on! My dick tried to shoot right out of my pants as my eyes traced every inch of my mother's newly bared body.\n\n\"Ahem,\" Mom said.\n\nI'd been so entranced by her unveiling, I'd forgotten to do my own.\n\n\"Sorry,\" I said.\n\nI reached down for the hem of my shirt and pulled it over my head. Mom stared straight at my chest, like a hungry cat. Then, and I swear this happened, I saw her little pink tongue slip out and lick her lips.\n\n\"That's, um, very nice,\" Mom said.\n\n\"You look good too,\" I said. I waited for Mom's usual self-hating argument, but instead she nodded, like she'd been hypnotized by my pecs. A little smirk snuck across her face.\n\n\"Eyes on your own paper, miss,\" I said, playfully. Again, I waited for her to snap back, but she said nothing.\n\n\"Can I touch it?\" Mom asked. Her voice shaky like a teenager's.\n\n\"My chest?\" I asked.\n\n\"Yeah.\" She licked her lips again, like her mouth was covered in cotton.\n\n\"I will if you...\"\n\n\"No,\" Mom said. Her abrupt response made it clear that there was no way I could argue around it. \"I just want to, you know, appreciate all the hard work you've done. On your body.\"\n\nShe said this like it made any sense at all. Like her explanation, in any way, added up to why she could fondle my bare chest. The weirdest part about her argument though, was that it worked.\n\n\"OK,\" I said, and leaned closer so Mom could touch me.\n\nShe reached over and slowly traced my pecs. Then she dragged lower, feeling the ridges of my six pack. I had a little tuft of dark hair down the middle of my chest, and she let her fingers tangle in it, the lime green nails shining through. Her wedding ring golden in the dark of my chest hair.\n\nMom moved her hand lower now. Down to the waistband of my shorts. I think both of us, for a second, thought she was about to do something more. Then she ripped her hand away; like she couldn't trust it.\n\n\"That's, um, very nice,\" Mom said, \"You should be proud of all the exercise you're doing.\" She lay back and let her eyes drift shut.\n\n\"You sure you won't let me have a turn?\" I asked.",
        "\"Huh?\" Mom said, \"Sorry, hon. I must have fallen asleep. I was having the most wonderful dream, though...\"\n\n*\n\nI wanted more.\n\nI know how insane that sounds. I think it's intrinsic to the male psyche. Every pleasure merely a step on the path to the ultimate goal. And no, it's not a coincidence that the word 'ultimate' contains the word 'mate.'\n\nIt wasn't so long ago that the thought of a handjob from my mom (from any woman, what with the quarantine and all) felt like an impossible dream. Now, getting rubbed off wasn't nearly enough. We'd even moved on to oral, and it was incredible, but I couldn't settle there.\n\nI wanted to have sex with my mother. I needed to. I just didn't know how I could make it happen.\n\nMom's ground rules, especially since she'd expanded them, offered some possible openings. But I knew Mom would call a stop to it if I simply rolled over her the next time we were in bed. For a moment, I considered the morning before, when I'd had the opportunity because Mom was sleeping. But I knew that wasn't the right way to do things. We both had to be conscious. Willing. Otherwise, it wouldn't work (no matter what my libido said).\n\nBut that led to all kinds of other problems. In truth, I didn't think I was actually ever going to be able to sleep with Mom. Some part of me knew I was doomed to fail. But I couldn't stop thinking about it. Obsessing. And, so, eventually, I gave in to my urges and decided to make it happen, despite the slim chances of success and the massive likelihood that I'd lose whatever privileges I'd already earned.\n\nIt didn't matter. The cock wants what the cock wants. To get to my goal, I knew I would need to be bold. It was clear that I would have to be clever. And I was sure I would require some condoms.\n\nSex without protection was something I didn't do. Cassie was on the pill, but we still used rubbers. It was part of the process for me, like putting on your seatbelt when you get in the car. Automatic.\n\nFortunately, I had a few condoms lying around my bedroom, left behind from when I'd left for college. I dug through all my drawers and secret hide-y spots and was able to find a total of five condoms of various styles and provenance. And, I told myself, I could always go out and buy more if I needed. That was awfully optimistic of me, thinking I would be running out for extra protection when it was extremely unlikely that I'd ever get to use what I already had.\n\nSo, with everything in place, I began to enact my plan.\n\nI got my supplies and put them somewhere I could easily reach when I needed them. I staged the area, so that everything was properly organized. And then I watched, and waited, for my moment.\n\nAfter dinner that night, as Mom and I did the dishes, I took the first step.\n\n\"I've enjoyed our TV time,\" I said, \"There's a lot about this whole quarantine thing that's been awful, but the fact that it's made us so close? I can't tell you how much that means to me.\"\n\n\"Me too,\" Mom said, \"Thank you for saying that. I hope you know how much I value what we have right now.\"\n\n\"Same,\" I said, \"I want you to know that I would never do anything to risk the closeness we've rediscovered. Whatever happens, I hope you understand that I'm always thinking of you, of us, first.\"\n\nMom tilted her head at me, and for a moment I thought she'd figured it all out. I didn't know whether to be terrified or thrilled. Then she said, \"I know honey. Soon the shelter-at-home order will end, we'll get a vaccine, you'll go back to school and I'll... Well, I guess I'll go back to whatever the hell it is I'm doing with my life.\"\n\nI didn't hear it, but I swear I felt her choke back a sob.\n\n\"I know that you love me, and I don't blame you for leaving,\" Mom continued, \"You should go and have your own life. But this, our relationship right now, just know that it will always be very special to me.\"\n\n\"Me too,\" I said.\n\nWhen we were done with the dishes, I took Mom's hand and led her down to the basement. \"If you're ankle is better, I think we can go back to watching down here,\" I said.\n\n\"Oh. OK,\" Mom said. She eyed me warily, like she knew I was up to something but couldn't exactly figure out what.\n\nWe went down to Dad's room. Mom noticed my handiwork immediately.\n\n\"Jay, all your hockey stuff is piled on my side of the couch.\"\n\n\"Oh damn,\" I said, \"I was getting it all together for when I go back to school, and I guess I forgot it was there.\" I walked over and started to fiddle with the TV. I found a movie channel that was showing something quiet and forgettable. I sat down in the one open spot on the couch, pulling the strategically set blanket over my lap.\n\n\"Well, where am I supposed to sit?\" Mom asked, hands on her hips. Her patience was already running thin.\n\n\"I can move all my stuff but it's really super heavy and I don't feel like dealing with it right now,\" I said, \"I promise to move it all in the morning.\" I paused, savoring the moment. \"Why don't you come sit on my lap, instead?\"\n\nMom let my request hang in the air. I could see the gears turning behind her beautiful blue eyes. For a moment, I thought for sure she was about to shut it all down, and my game would be over before it started.\n\n\"Sure,\" Mom said. She shrugged, then walked around the couch. When she turned to sit, I moved the blanket out of the way. When she placed her butt on my leg, I covered us both.\n\n\"What are we watching?\" Mom asked.\n\n\"Don't care,\" I said. I put my hands on her waist and pulled her back.\n\n\"Oh!\" Mom said, surprised by my grip. Then my aching, hard cock made contact with her denim-covered backside. \"Ohh.\"\n\n\"You OK?\" I asked.\n\n\"Uh huh,\" Mom said.\n\n\"Cause I'm a little uncomfortable,\" I said.\n\n\"You're the one who left all his stuff on the couch,\" Mom said.\n\n\"No, I know,\" I said, \"It's actually your jeans that are the problem. They're itchy on my leg.\"\n\nMom turned back to look at me, knowingly. Again, I thought the jig was up. She reached under the covers, unsnapped her jeans, then rose up to slide them over her wide hips.\n\nMom sat back down. Her warm, naked thighs landed on mine. Her panty-covered backside slid up against my completely uncovered dick.\n\nMom realized it immediately. I could tell by how she reacted. The little gasp she made as our bodies made contact. How she, unconsciously I'm sure, shimmied her butt against my bare cock. But she didn't turn around. Didn't say a word.\n\nMom's pants lay in a pile in front of the couch. She couldn't see it, but my own shorts and underwear were lying next to hers. I'd slipped them off as soon as I was under the blanket.\n\nI was more than halfway to home. Already over the fence. Up the walkway. At the door. My erection pressed forward into Mom's thin panties, about to ring her doorbell. The only question was if she'd let me in.\n\nI put my hands on Mom's hips again. Slowly, we began to slide against each other. I could feel how slippery Mom was through her underwear. Her body moved in rhythm over mine.\n\n\"This is nice, right?\" I said, \"The show I mean.\"\n\n\"Very,\" Mom agreed. She shifted, settling her cunt over my cock.\n\nWe sat that way for a little while, just savoring each other. I let Mom get comfortable. Her perfect posterior planted on my shaft. Legs spread lewdly under the blanket. We started to move faster. Our movements becoming more urgent.\n\nThis was the moment. While we ground into each other, I reached down and carefully pulled Mom's panties to the side. A moment later, my bare cock slid through her lips.\n\nBoth of us groaned.\n\n\"Jay, I'm not sure we...\"\n\n\"You want me to change the channel?\" I asked.\n\n\"I don't mean the TV,\" Mom said, disapproving. But her backside was telling a different story. The warmth of her pussy pressed against my dick. GodDAMN I could already feel myself responding far more than I wanted.\n\n\"What's up?\" I asked, still maintaining my sense of calm. At least, in the part of me that wasn't under the covers. I have to admit, it was fun turning Mom's game against her.\n\n\"I don't think this is a good idea,\" Mom said.\n\n\"Watching TV?\" I asked. \"Cuddling?\"\n\n\"You're a bastard you know that?\" Mom said.\n\n\"I'm your bastard,\" I said.\n\n\"No,\" Mom said firmly, \"You're my little knight. My baby boy.\"\n\nI noticed she hadn't stopped sliding. In fact, her movements were becoming more defined. Driven.\n\n\"It's OK, Mom. We're under the covers.\"\n\n\"Honey, I don't think that's the kind of protection we need right now,\" Mom said.\n\n\"I've got that, too,\" I said.\n\nMom froze in place. She snapped her thighs shut. I thought she was ending the action, maybe that was her intention. But then her whole body stiffened. She arched her back. A strangled whine escaped her lips.\n\nMom's orgasm caused me to go over the top as well.\n\n\"UrrrrrrAH!\" the growl escaped me as I burst forth. I squeezed my mother's stomach, holding her tight as I erupted. The simple knowledge that I was pressed against her pussy made my orgasm feel richer, deeper, than before. I came all over the blanket, certainly, but I know I also got a good amount on Mom's legs. Her stomach.\n\nWe sat on the couch, holding tight, like squeezing out each other's ecstasy. Then finally the pleasure subsided, and we both fell back, weak.\n\nMom leapt to her feet. The blanket flew off. I was staring at my mother in just her panties and a tank top. The gusset was still pulled to the side, and I could see shoots of curly, blonde pubic hair sticking out over dark, full labia. One bubbly butt cheek was completely bare. A long glob of my cum ran down Mom's shapely leg.\n\n\"I have to go,\" Mom said, then scampered out of the room.\n\nI lay back, totally satisfied and completely unnerved. What had I done? And, worse, how could I get her to do it again?\n\n*\n\n\"I'm not like your ex,\" Mom said, \"That Kathy girl.\"\n\n\"Cassie,\" I said.\n\n\"Whatever. I'm different,\" Mom said.\n\nWe were sitting out in the backyard. Spring was slowly giving way to Summer. The heat was already becoming oppressive. I had my shirt off. Mom was in a tank top and shorts. Her foot rested in my crotch. I alternated between covertly rubbing against it and painting her toes a bright, fire engine red.\n\nIt was the day after our dry humping escapade. Mom didn't talk about the night before. She was weirdly silent for most of the day. But she'd also slapped my ass when we were stretching for our run and a couple times, I'd caught her doing something that looked a lot like preening when I glanced her way.\n\n\"I know you're not like Cassie, Mom,\" I said, kindly. I thought she meant that she wasn't a college girl; some young kid whose emotions I could play with. A girl to notch my bedpost with. She was a woman, my mom, and I had to treat her differently than I would some chick I was banging.\n\nWhich, of course. I'd never seen Mom that way, anyway. I knew she was different, which was probably why I couldn't control my attraction to her. But that's not what she was getting at, at all.\n\n\"What I mean is, I don't have some of her, what did you call them? Hang-ups,\" Mom said, \"Kind of the opposite, actually.\" She was trying to make this sound like idle chat, but there was a weightiness to her words. Also, she hadn't taken her eyes off my chest since I'd taken off my shirt. \"You know what I mean?\" Mom asked.\n\nShe could see the confusion in my eyes. She buried her face in her hands. Stared down at the ground.\n\n\"Sperm,\" Mom said, speaking the word like an incantation. As if the single syllable could crack the world in half. \"I like it. Like, a lot. More than I should. Obviously.\" She gestured at me. She looked up, took a deep, cleansing breath. But still, she stared past me.\n\n\"There's just something magical about it,\" Mom said, the words all spilling out of her like a crazed confession. \"I mean, it's literally liquid life. Alive. The way you have to work for it. Begging, supplicant at the source. And then it spurts forth. Bursts. An explosion of writhing, rolling creatures. Penetrating, probing, pursuing. Pulsing with the essence of existence itself.\" She gave a little shiver. \"I love it. The thought of it on me. In me. Like I can feel them wriggling around, throbbing through me. Infusing my body with this illicit energy inherited from every human who's ever lived. God, even the smell, the tang of it on the tip of my tongue. The little tickle at the back of my throat...\"\n\nMom took a deep breath. Her eyes flitted around, like awakening from a trance.\n\n\"Oh,\" I said. I wasn't sure how to respond. I'd never thought of it that way. But the way Mom talked, I was totally turned on.\n\n\"Your, um, your father doesn't know,\" Mom said, she chewed at her thumb. \"I've never told him. How I feel. I'd appreciate it if you didn't say anything.\"\n\nWas that really a concern? I couldn't imagine any conversation with my father that could ever come close to getting to that content. Hey, Dad, so you know Mom has this massive cum fetish, right? Well, I was thinking...\n\n\"So anyway, you can see why what we've been doing,\" Mom said, \"Sorry. What we may or may not be doing. You can see why that's so dangerous. For me. For us.\" Her voice got very quiet. \"I'm scared I'll lose control.\"\n\n\"We're not doing anything wrong,\" I said. Mom glared my way. OK, she had me on that one. \"I'm not going let it go too far. I mean, I have condoms.\"\n\nEven to me it sounded weak.\n\nMom got up from her chair. She grabbed her things.\n\n\"Should we stop?\" I asked, shading my eyes to look up at her.\n\n\"Stop what?\" Mom replied, then marched into the house.\n\n*\n\nI was certain that was the end of it, but Mom told me over dinner that she was looking forward to watching TV that night.\n\n\"I think we can go back to the bedroom, though,\" she said, \"Since the couch is covered in your stuff.\" My mind flashed back to my mother standing up, covered in my stuff and I blanked. That's how my mind worked now. Everything was dirty.\n\nI agreed with Mom of course. She could have suggested we go sleep on sharpened razor blades and I'd have said 'yes' in an instant. So, after we'd finished eating and done the dishes, our usually routine, I let Mom take my hand and lead me back through the threshold of her bedroom. To the place that still, to me, felt forbidden. Of husbands and wives, not mothers and sons. Maybe that's why she wanted us there. It changed the dynamic.\n\nI brought my iPad and set it up on the bed. Mom crawled under the covers on her side. I did the same on mine. Then I started the show. We'd started bingeing on some thing about glass blowing. We'd seen almost all the episodes which is funny because we hadn't actually watched any of them.\n\nAs soon as it started, Mom lifted her hips, and I knew she was slipping out of her jeans. There was a low rustle as she dropped them on the side of her bed. I decided to do the same. I reached for my shorts and, at the last second, decided to take off my boxers, too.\n\nA moment later, my decision was rewarded as Mom reached over and grabbed my bare cock.\n\n\"Hm! Well, someone's feeling aggressive today,\" Mom said.\n\n\"What?\"\n\n\"I mean that piece of sculpture, he's never going to finish it in time,\" Mom said.\n\n\"Oh. Right.\"\n\nI reached over to find Mom's pussy was equally uncovered. Her curly pubes tickled at my palm as I dipped my pointer into her hot slot.\n\n\"If he's going to be risky like that, Mom said, \"He should probably be using some kind of protection. So nothing goes wrong.\"\n\nShe looked at me, meaningfully. For a moment, I froze. The realization dawned on me.\n\n\"Right,\" I said. I took my hand out of her pussy. I'd planned for everything the night before, but for some reason it hadn't occurred to me that things were going to continue today. Quite the opposite, actually. So now I found myself undersupplied.\n\n\"I'll be right back,\" I said, and slipped out from under the comforter.\n\nIt didn't even occur to me that I was naked. That Mom was seeing my bare body from the waist down. My dick sticking straight outwards. Mom gasped. Her eyes focused right on my member.\n\nMom had touched me there innumerable times now. But she'd only seen my dick the night she sucked me off. And even then, it was under the covers and in the darkness. The way she stared now -- pupils huge, lips sucked small -- I could tell this wasn't just a casual glance.\n\n\"Ummm, sorry,\" I said. I reached down for my boxers and quickly pulled them on. This was becoming more disastrous by the minute.\n\nI quickly left Mom's bedroom and hauled toward mine. I had all five condoms, waiting for me in my nightstand drawer. I grabbed a random one, tore open the packaging, and slipped it over my still-hard dick.\n\nI practically leapt back into the bed with Mom, ripping the covers over me and stripping off my boxers. Mom giggled at my enthusiasm.\n\n\"I'm just really into this show,\" I said.\n\nI expected Mom to laugh at me, but instead she touched my arm meaningfully. \"Me too,\" she said.\n\nMom scooched next to me, resting her head on my shoulder. Hand on my chest. Her leg slipped up to rest on my thigh -- I could feel she was bare, below. Mom wrapped herself on to me like she was a koala, and I was a eucalyptus tree. Nuzzled her nose on my neck.\n\n\"This is OK, right?\" Mom asked, quietly.\n\n\"It's just cuddling,\" I said, \"Moms and sons cuddle.\"\n\n\"Right,\" Mom said.\n\nShe drifted her hand down my chest and under the covers. She clasped my cock. Moms and sons definitely didn't do that. Or, at least, they weren't supposed to. I stretched, settling myself for our usual stroke-fest.\n\nBut as soon as Mom felt that I was wearing the condom, she let go of my dick. She cuddled closer. I could feel the heat of her pussy on my thigh. Her shirt-covered breasts on my arm. For a moment, I wondered if there was a way I could convince her to take our tops off, too.\n\nMom shifted her body again, twisting till she was right on top of me. Her head now resting on my chest. Arms wrapped around me in a hug. Pussy -- oh fuck -- her pussy was in the exact right place. Directly on top of my dick.\n\nMom put her hands on my chest. Her eyes met mine. Our respective sexes dragged over each other.\n\n\"I like. Cuddling. This way,\" Mom said. Every breath short. Every word a little gasp. Already, I could feel her body trembling.\n\nMom ground down hard. I could tell that she'd gotten my cockhead right on her clit. She rolled her hips back and forth. Working towards her pleasure. The fact that it also felt good to me was incidental.\n\nSeeing Mom like this -- sweat tricking down her neck, eyes locked in concentration -- her face so close I could feel her breath on my cheek, it was incredible. The sexiest thing I'd seen so far. Each little freckle. The twitch of her lip. The driving force of her body on mine.\n\nEven better though, was the contrast of how she acted and how she looked. Mom humped up and down on me frantic, wild. But she did her best to keep her expression impassive. Her sounds swallowed.\n\nI had to do the same. I slid my hand down her bare back and squeezed her ass. Tried to pump my hips in time to hers. But I couldn't say a word. I kept my mouth flat. My eyes distant. All I wanted to do was shout.\n\nI could feel the heat of Mom's bare pussy on my condom-covered cock. I could feel her dripping over the latex. Her pubic hair scratched at the base of my dick. The physicality of everything we were doing was already over the top. The fact that it was getting both of us off was almost the least important part.\n\nMom started to tremble. Her body shook. Movements erratic.\n\n\"She gasped, then turned her head away, biting down on her lip.\n\nI grabbed Mom's ass with both hands and started to slide up and down. As Mom's orgasm overtook her, my own raced out of my shaft. I filled the condom. My mother experienced the same illicit energy. Both of us so close to connected.\n\n\"I, um, need to use the bathroom,\" I said as casually as I could once both of us came down. Mom was lying over me, panting. Slick with sweat. She looked my way and nodded.",
        "I extricated myself from under her and went to the master bathroom. Mom could see my bare backside as I went, but I no longer cared.\n\nI took the condom off and dumped it down the toilet. This was it. This was as far as we could go right now. It was already more than I'd ever dreamed of.\n\nI turned back and saw Mom staring at me. No. I wasn't done yet.\n\nI walked out of the bathroom, my flagging cock already refilling with blood. I went to my bedroom, grabbed another condom from my nightstand, and came back to Mom's bed.\n\nMom was still lying splayed on the bed. Like I'd murdered her there. She gave me a weak smile when she saw me come back in the room. I don't think she realized I was armed for a second attack.\n\nI flung open the covers. For a moment, I could see Mom's bare pussy. Covered in thick, blonde pubic hair. Her labia engorged and deep pink from the stimulation, hanging wide open lewdly.\n\nI climbed into the bed and pulled the covers over us like a vampire hiding behind his cape. I rolled Mom over. Climbed up her like she was now the tree.\n\n\"Jay?\" Mom asked.\n\n\"Just cuddling,\" I said.\n\nI reached down and centered my cock over Mom's snatch. Then I ground down. Both of us groaned. I was in the perfect place. Well, almost.\n\nAgain, I humped against my mother. This time, I was the aggressor. At some point both of us gave up on hiding it. We didn't say anything. Just looked into each other's eyes. A tacit acknowledgement of what we were doing.\n\nI slid my cock back and forth over Mom's hot box. The head of my cock popped into her channel for a moment, then slid out. Mom grunted. She searched my eyes.\n\nI waited for her to say it. If she told me to stop, I would. I told myself I would. But speaking would be crossing the line. I was counting on that, too. We were still under the covers, pretending like that made a difference.\n\nMy cockhead skimmed Mom's opening again. This time, I felt her shift her hips slightly, like trying to trap me there. But my dick slid out again, battering her little clit instead.\n\nMom raised her knees. She angled her ass. This time, when I slid my cock upwards, I dropped right inside her pussy.\n\nYES!\n\nI may have screamed it aloud. My dick slipped about halfway into Mom's cunt. I drew back, then finished filling her all the way. We were completely, truly, connected now. My cock in the place I'd come from. Buried in my own mom's pussy.\n\nI held in place. Too overcome by what I'd accomplished to keep going. I was in Mom. Oh fuck. Even with the condom it was the best thing I'd ever felt.\n\nI expected Mom to say something. To chide me for going this far. Instead, she lay back. Chest rising and falling fast. Her pussy walls squeezing around my latex-sheathed cock.\n\nI realized if I waited much longer, I might lose the opportunity. I started to pump her. This was it. I was having sex with my mom. She reached up and put her hand on my cheek. It was her most overt gesture yet.\n\nThe bed rocked. Our bodies made rude squishing sounds. I plunged into Mom's waiting pussy. She raised her knees and tilted her ass. I held her hips. We moved like we were made to be this way. Mother and son. Two lovers.\n\nMom's pussy was plenty tight. Even better, she moved and squeezed in a way that I'd never experienced before. I was with a woman for sure. I thought all sex was the same. It didn't occur to me that there might also be skill involved. Mom was a maestro. Even as I fucked her, she guided me forward to our finish.\n\n\"Mom,\" I said. I couldn't help it. I was getting close, and the word slipped out.\n\nMy mother nodded. The look in her face almost too serious. My stroke stuttered. I buried myself as deep as I could. Then I unleashed a torrent of cum. Again, it foundered in the reservoir of the condom. I groaned as I emptied myself. Hips still fruitlessly trying to push farther.\n\nMom stroked my head as I came. She made a little coo, but I could tell she hadn't orgasmed. I was disappointed in myself for not getting her off. I worried that I'd gone too soon. Blown my one opportunity.\n\nFinally, I finished cumming, and disengaged from my mother. I fell onto my back. Now I was the one gasping for air, lying back on the bed. Eyes focused on the surprisingly interesting ceiling.\n\n\"Well, that was nice,\" Mom said, \"I would definitely watch that episode again.\n\nI looked over at her, and we shared a coy smile.\n\n*\n\nI woke up in Mom and Dad's bed again. Mom was already up. I heard her humming to herself downstairs. I got out of bed, my legs so weak, I felt like I'd already done my morning exercise. I made myself get ready, anyway.\n\nI don't know why I expected the day to go differently. I guess I thought that sex was simply too big to ignore. But Mom and I went for our run, took turns showering in separate bathrooms, then went about the rest of our day as if nothing had happened.\n\nThat night, we had dinner together, then Mom went upstairs before we did the dishes. I'll be honest, I was nervous about that evening. I didn't know what was going to happen. What Mom was going to let me do. I had three more condoms and I damn sure wanted to use them. Plus, I knew I needed to make Mom cum this time. I was determined to.\n\nIf she'd let me.\n\nMom came down the stairs in that long, green sleep shirt and something came over me. Like a switch had been flipped. She went into the kitchen. I ran upstairs to my bedroom.\n\nI come back down the stairs on automatic. A pussy-seeking missile incapable of missing my target. I don't know what it was about that shirt. It wasn't sexy. But something about it, held me in thrall.\n\nI walked into the kitchen. Mom was bent over the sink.\n\n\"Took you long enough,\" Mom said.\n\nI didn't respond. I stood behind my mother. Reached for the hem of that lime green shirt. Slipped it up, over her hips. Bared that incredible backside.\n\nMom had nothing on underneath. I saw the pale skin of her rounded butt. The thick lips of her pussy. I pulled back on Mom's thighs.\n\n\"Whoa!\" she said.\n\nBefore she could say anything else, I slipped my condom-covered dick inside my mother's vagina. The second time I was in Mom's pussy was very different than the first. She wasn't lubricated and so I could barely get the head of my dick in. I drew back and pushed again. Aching to be back inside my mother.\n\n\"Honey, I don't think this is...\"\n\n\"Look forward,\" I said, \"You can't be sure what's happening if you don't look.\"\n\nHalfway in now. I could feel Mom's cunt lubricating, stretching, to invite my foreign invader. But then, how alien was I? After all, I'd come from that place. I was merely returning home. To where I belonged.\n\nFully buried in my mother again. Oh God. My balls rested against Mom's clit. My dick completely sheathed, up to her cervix. Mom stayed still. Head lolled. That damned green shirt hung over her butt again. Providing the barest bit of cover to us both.\n\nI knew I should go slow. Savor. I couldn't control myself. I threw myself into it with my mother bent before me. Wet sounds and heady smells. I pounded my mother from behind. Fucked her as hard as I could. Rhythmic slaps crashed over the still-running water.\n\n\"Just... doing... the dishes...\" Mom said, trying to preserve the fantasy that nothing was happening.\n\nI pushed the sleep shirt up slightly. I could see Mom's tight asshole winking at me as I thrust. I slapped my palm against her butt cheek.\n\n\"Oh!\" Mom said and I could tell it was more from the surprise than a pleasant feeling. She started to glance back, then stopped herself. I contented myself to grip her cheeks as I drove into her.\n\nHer pussy was dripping now. Soaking. I felt the liquid coating my balls as they bounced back and forth. Mom was doing her best to stay quiet, but I could hear her little uhn, uhn, uhns with every stroke.\n\nI felt a tickle at the base of my shaft. I looked down and saw that Mom had one of her hands between her legs. Rubbing herself while I rutted in her. Now we were both grunting. A shared, mother-son crescendo. The veil between what we did and what we admitted to doing was so thin now, I could break through it with a cotton swab.\n\nIncredibly, Mom went off first. She reached back with her hand and held me still. Kept me buried as deep as she could as she came. Her cunt squeezed down. Her legs trembled. Her head hung limp over the sink.\n\nHer grip on my leg loosened and I thought it was done. I drew back and thrust. Mom lets out a high-pitched whine as she tumbled from one orgasm to the next. I couldn't take anymore. I knew I was maybe three thrusts away. Two. One.\n\nI groaned as the ecstasy rushed over me. One massive squirt. Then another. Filling the condom. Emptying myself. Mom rolled under me. Both of us entwined under the spell we'd created together.\n\nI knew in that moment that Mom was truly mine.\n\nI stepped back. Mom stayed bent over the sink. Then, like nothing had happened, she went back to washing the dishes, humming to herself tunelessly. The long green shirt hung down to her mid-thigh. My dick still hung out of my shorts. The used condom, covered in Mom's juices and filled with my semen, felt cold and slimy on my cock.\n\nI took it off, carefully, and dumped it in the trash. Then I tucked myself away. Mom turned when she heard me closing my zip.\n\n\"You going to help here or what?\" she asked. A dopey grin played on her lips. I sidled up next to her and grabbed the towel. She handed me a plate and I rubbed it dry.\n\n\"Sorry, spaced out for a minute,\" I said, as if any of that made sense.\n\n\"You know, I can't think of the last time I enjoyed doing the dishes that much,\" Mom said, she turned her head to look right at me.\n\n\"It's been a while?\" I asked, unable to control the cocky grin overtaking my face.\n\n\"Decades,\" Mom said. She smiled right back at me.\n\n*\n\nFor the first time in over a month, we skipped our usual TV night. We both knew why. It wasn't an ending. It was the beginning. And both of us wanted to be ready for it.\n\nThe next morning, I woke up in my own bed and it felt weird. I was so used to passing out in other places. I got dressed and found Mom waiting for me in the kitchen. Already stretching. She had on a pair of short shorts and a black sports bra. Her little bellybutton flashed as she bent to the side.\n\n\"It's super-hot out,\" Mom said.\n\nI pulled my shirt off. Mom didn't bother to hide her gape. She reached out to touch my chest and I let her. Traced her fingers on my bare pecs and stomach.\n\n\"Have I told you how good you look?\" Mom asked, \"You're amazing.\"\n\n\"You too,\" I said, and I risked touching Mom's naked tummy. She flinched, but she didn't say anything.\n\n\"We need to get going,\" Mom said, \"Before things get too hot to run.\"\n\nWe got a good start. My body felt perfectly timed, like a machine. Despite my speed, Mom stayed right behind me. I noticed how trim she looked. She caught me staring back at her and smiled.\n\n\"Eyes on your own paper, mister,\" she called out to me.\n\n\"You're only hanging back there to stare at my ass,\" I said. I had been joking, but then Mom pinked, and I realized I was right on the mark. Mom sped up and ran by my side.\n\n\"View's pretty good here, too, she said, eyeing my bare chest. I pointedly did the same. Her breasts were strapped in tight, I couldn't see a thing, but still.\n\n\"Be careful not to trip this time,\" I told Mom, who was studying my torso like she had an exam on it coming up. This time, she blushed so deep, I thought she might pass out.\n\nWe did a full eight miles. The most either of us had ever done. It felt easy, like I could have gone another eight if I wanted. We came home giggly. Fell onto the front lawn and rolled on the grass. Laughing under the cloudless, blue sky.\n\nI leaned turned over and grabbed Mom's shoulders. Her eyes met mine. We were out in the middle of the neighborhood. The whole world could see us. I leaned forward. Mom's eyes met mine.\n\n\"We missed our TV night yesterday,\" I said.\n\n\"I was worn out from doing the dishes,\" Mom said. She gave me a playful grin.\n\n\"Well, I think you owe me some screen time,\" I said.\n\n\"Is that so?\"\n\nMom's arms were around my waist. My hands were on her shoulders. I closed my eyes. Leaned forward. Felt Mom's breath on my lips.\n\nHer cellphone rang.\n\nIt rang again.\n\nShe reached into her pocket and took it out. \"It's your father,\" she said, showing me the screen. Like I needed the evidence.\n\nI let Mom up and she leapt to her feet.\n\n\"Hey hon!\" I heard her say, as the front screen door swung closed behind her. I lay back on the grass with a loud sigh.\n\n*\n\nI got out of the shower and got dressed in shorts and a t-shirt. When I came downstairs, I found Mom already sitting at the table. She was back in her usual uniform of a flannel shirt over a white, ribbed tank top and high-waisted jeans. A plate of waffles sat in front of her. My heart sank.\n\nWhen I was a kid, whenever I had a bad day, Mom would make waffles for me. I don't know how the tradition started, but at some point, it was established that they were our comfort food. That plate was the death knell of what we'd been doing. It told me everything that Mom couldn't say.\n\nI sat down and Mom placed two steaming circles onto my plate. She couldn't meet my eye.\n\n\"Your father's coming home tonight,\" Mom said, \"He finally got all the paperwork through. We have to pick him up at Bradley after dinner.\"\n\n\"I see,\" I said, \"You must be happy he'll be home.\" It was a cheap shot, I know, but Mom batted it away like a pro.\n\n\"It'll be nice to have the family all together again,\" she said.\n\n\"I'm sure.\"\n\nI could barely taste my breakfast, but I forced myself to eat. Mom sat and watched me. She was smiling, but her eyes looked sad. I knew in that moment that Mom wasn't any happier about this than I was. Just more mature.\n\n\"It's been fun,\" Mom said, \"the last few weeks.\"\n\n\"For sure,\" I said.\n\n\"I don't want to lose that,\" Mom said, \"I mean, the closeness that we have.\"\n\n\"Me neither,\" I said. I reached across the table and took Mom's hand. \"I'm not letting you go.\"\n\nMom nodded. She got up from the table, and I swear I heard a sniffle.\n\nAfter breakfast, I helped Mom clear the table and do the dishes. I would never see that sink the same way again.\n\n\"After this, you want to watch something?\" Mom asked. I nearly dropped the plate I was drying. \"You know, one last time before your father gets home.\"\n\nI nodded, mute. Unable to express myself anymore.\n\n\"I think my bedroom will be fine,\" Mom said. Her message was clear.\n\nAfter we finished with the dishes, I went up to my bedroom. I grabbed both remaining condom packets and put them in my pocket. If this was the last hurrah, then I was making the most of it.\n\nMom was waiting in her bedroom, the blanket already up to her waist.\n\n\"Come rest your head,\" she told me, patting her shoulder.\n\nI climbed under the covers and slipped off my shorts. I scooched in next to Mom, putting my head right where she wanted . I pushed my legs against Mom's and felt that she, too, was naked below the waist.\n\n\"This is the last time,\" Mom said, \"Our last chance to do this together.\"\n\n\"Pretty sure we can still watch TV,\" I said, even though I knew exactly what she meant.\n\n\"Not like this,\" Mom said, and she sounded wistful. Sad.\n\nShe reached over and pushed play on my iPad. The show came on and we did something completely different. We actually cuddled. We stayed in the bed, enjoying each other's company. Mom absently stroked my head. I held her close. Strangely, it was the most intimate thing we'd done.\n\nBut biology inevitably came knocking and soon, I found myself reaching for the condoms. As soon as I opened the first one, I knew something was wrong. The latex felt dry and thin. It had clearly gone bad, so I tossed it away. I opened my last packet and, thankfully, it was fine. I guess it made sense. Last time together. Last condom.\n\nI climbed between Mom's waiting thighs and slid inside of her. We rolled together slowly, taking our time. We didn't say anything, but we stared at each other while we made love. We didn't do anything else. No extra motions or extraneous sounds. We enjoyed the connection of our bodies. It was lovely.\n\nFinally, I filled the condom. Then I emptied Mom. She rubbed her hand up my flank, like rewarding a racehorse after a good run. She was staring, intently, and I realized she was looking at the condom. I held it up like offering it to her. Mom shook her head and looked away.\n\nWhen I came back from flushing the condom in the toilet, Mom was lying on top of the covers. She was fully dressed. This time, she patted the side of the bed where she wanted me to sit.\n\nWe lay back and watched (actually watched this time) a bunch of banal reality shows. They weren't bad, really. But nothing was better than being with Mom. The whole world seemed muted in comparison.\n\nWe ate a staid, almost funereal dinner. As I chewed, I mentally reviewed everything that had happened the past month or so. How Cassie had broken up with me. How Mom and I started watching movies together. Starting to run with Mom. Starting to do, um, other things with Mom. Painting her nails in the backyard. Painting her pussy with my tongue in her bedroom. And then, finally, the two of us becoming one.\n\nIt was over.\n\nI knew it was going to be hard, but both of us would move on. This time would be a passing reverie. A fever dream of sounds and sentiments. Something that neither of us would ever admit to, but in our secret hearts would share forever.\n\nMom would go back to her life. I'd meet a girl and marry. In stolen moments, we'd share a sneaking smile, but that was all. And even then, we'd wonder if it was all imagined. A skip in time. A blip where the world paused and we slipped around the seconds like phantoms.\n\nMom's phone buzzed and she looked down at it.\n\n\"Your father's flight is delayed,\" she said. A moment later the phone rang. Mom pushed the button to answer it on speaker, sliding her cell into the middle of the table.\n\n\"Hi David!\" Mom said, remarkably cheerful. \"Jay and I are here -- we saw about your flight. That sucks!\"\n\n\"It's fine,\" Dad said. His voice was tired. \"I just can't wait to get home.\"\n\n\"I'm sure,\" Mom said, \"We'll have the bed all set up and ready for you.\" I thought that was a strange thing to promise, but in the context of what we'd been doing in there, I'm sure it was an important detail to Mom.\n\n\"Whatever,\" Dad said, \"You're still going to come get me.\"\n\n\"Yes, Jay's all set to come pick you up,\" Mom said. She smiled at me, warmly.\n\n\"Don't just send the kid, Julie, seriously,\" Dad said. Something about how he called me 'the kid' made me wonder if he realized I was on the phone, too. Mom had clearly said I was there, hadn't she?\n\n\"Oh, definitely,\" Mom said, \"I can't wait to see you, too. But I'm sure, if he had to, Jay would be fine on his own.\"\n\n\"Jesus Julie, look. I know that Jay's your sweet little boy or whatever, but even you have to admit, he's not exactly firing on all cylinders.\"\n\n\"He's right... He's listening to...\" Mom tried to interrupt him, but Dad plowed forward.\n\n\"I mean, the kid's almost 19 and I barely trust him to drive to the supermarket for milk without getting in two accidents on the way and bringing home eggs, instead. Let alone the hour's drive up to Bradley and back in the middle of the night.\"\n\nMom looked at me, ashamed. As if this was somehow her fault. Both of us flushed. I felt embarrassed. Angry. All of it. Still Dad kept going.\n\n\"He must've gotten the brains from your family, Julie,\" Dad said, \"Seriously, it's a good thing you were pretty when you were younger, or you wouldn't even have gotten this far.\"\n\n\"Have you been drinking, dear?\" Mom asked.\n\n\"Only a little while I'm waiting for my flight,\" Dad said, \"OK -- I'm going to go. 12:30, don't forget. I'll text you when I'm boarding.\"",
        "Click.\n\nThe room was so silent, I could hear the house settling. A dog barked in the distance. Mom wouldn't meet my eyes.\n\n\"I'm so sorry, Jay. Your father didn't realize.\"\n\n\"Don't be sorry,\" I said. I stood up from the table.\n\n\"He shouldn't have said those things about you,\" Mom said, \"Your father hasn't seen how much you've grown up all these years. We're still used to thinking of you as the little boy who nearly burned down the house making Pop Tarts. That's all.\"\n\n\"He shouldn't have said those things about you, either,\" I said.\n\nMom looked down at the table. \"It's OK. I'm used to it.\"\n\n\"That's not OK, Mom,\" I said.\n\n\"No, I know,\" Mom said, \"But what else do I have?\"\n\nYou have me. I thought the words, but I couldn't speak them. To say that, somehow, a son could fill in for a husband. That was ludicrous. The roles, the relationships, they were completely different. But then, wasn't that what we'd been doing this whole time?\n\n\"You deserve to be treated better,\" I said, \"Like the amazing, wonderful, gorgeous woman that you are.\"\n\n\"I know,\" Mom said, \"Your father's been gone for so long. He's having a terrible day. Probably a few too many drinks, too. He isn't usually like this.\"\n\nI'd known my dad my whole life (duh). I knew he was drunk and probably depressed, too. But I also knew that he'd meant every word he said on that call. But whatever anger and resentment I had was washed away by a melancholy for my mom.\n\nI had a scholarship. I was going to get back to college. I could leave that place forever if I wanted. But Mom had to live the rest of her life this way and it wasn't fair. She was worthy of so much more.\n\nI guess, being Mom's little knight again, I wanted to save her. Instead, I suggested something far more dangerous.\n\n\"We've got time to kill,\" I said, \"Want to watch a movie?\"\n\nMom looked at me and sighed. I could see her weighing it in her mind. Knowing that she should say no, but unable to not say yes.\n\n\"I have to get the bed ready for your father,\" she said.\n\n\"I can help with that,\" I said with a smirk.\n\n\"Actually ready,\" Mom said.\n\n\"That'll take, like, five minutes. We have four hours.\"\n\nMom paused. I could almost see the angel and the devil on her shoulders, arguing back and forth across her brain.\n\n\"Movie only,\" she said. \"No other stuff.\"\n\nI readily agreed.\n\n*\n\nWe put fresh sheets down on the bed. Mom put on a different comforter and changed the pillowcases. Finally, I gave the bedroom a thorough Febreze, just in case.\n\nWe went downstairs to Dad's room, and I turned on the TV. Mom sat on the couch next to me. Our hips touched, but that was all.\n\nMom set an alarm on her phone for when we had to leave the house to go pick up Dad. It was going to be a late night, and she was worried we might fall asleep in front of the TV.\n\n\"We have to be there right on time,\" Mom said, like the world would end, otherwise.\n\nI nodded and started flipping channels to find something to watch.\n\n\"Let's try something different this time,\" Mom said. I understood that she was really reminding me that this wasn't going to be like our usual screen time.\n\nI flipped around the channels and found, in a very edited format of course, Bridesmaids. This was the opposite of different, of course. It was the very movie we'd started with. I took it as a sign and stuck with it.\n\nA few minutes in, I grabbed the blanket and pulled it over myself.\n\n\"Cold?\" Mom asked.\n\n\"Sure,\" I said. I reached over to Mom's pants and started to unsnap the buttons. Mom shifted under my touch.\n\n\"Jay, I don't think we should do that,\" she said. But I could hear the variance in her voice. She truly, literally, wasn't sure.\n\n\"Do what?\" I asked, and zipped Mom's jeans open. Mom sighed, exasperated, but she didn't say anything more.\n\nI played around with her pussy, through her panties. Just lazily took my time. After a bit, I grabbed Mom's hand and brough it over to my lap, landing it right on my dick. Mom made a little moan. She squeezed my hardness through my shorts.\n\nBoth of us were stroking each other through our clothes. To my surprise, Mom was the first one to shuck off her pants.\n\n\"It's really warm in here,\" she explained as she slipped her jeans and panties right off.\n\n\"Definitely,\" I said and did the same.\n\nBridemaids ended and another movie started. I was no longer paying attention. Mom's hand slipped up and down my bare dick. I rubbed and played with Mom's slippery pussy. We were teasing each other. Taking our time. Two people so expert at bringing each other off that it had become second nature.\n\nBut I wanted more.\n\n\"Mom, I want to cuddle,\" I said.\n\n\"We are cuddling, dear,\" Mom said. She put her arm around my shoulders to make her point.\n\n\"Mooooom,\" I said, whining once again, \"This isn't cuddling.\"\n\nMom rolled her eyes at me, but she was teasing. \"I guess we could sit on the floor.\"\n\n\"Yes!\"\n\n\"But, you know, we should be careful on the floor,\" Mom said, \"There's no carpet. So, it's bare. Down there. And we should make sure to cover ourselves.\"\n\nI gave Mom a wistful frown. \"We, um, ran out,\" I said, \"Of coverings.\"\n\nMom was already sitting on the floor. Before she could reconsider, I slid down behind her, careful to keep the blanket over us.\n\n\"Oh, honey, today is really not a good time for that,\" Mom said.\n\n\"I'll be extra careful,\" I said, realizing what Mom was saying. She had felt extra slippery when I'd fingered her. I'd assumed it was her arousal from us doing this once again. But it was more than that, I realized.\n\n\"We'll need to be cautious,\" Mom said.\n\n\"Tell you what,\" I said, \"I'll be the only one on the floor. You can sit on my lap.\"\n\n\"That's kind of the opposite of what I was saying, sweetie,\" Mom said. But she dutifully let me slide under her. My dick squeezed down under Mom's dripping sex.\n\nMom slowly began sliding her backside on my shaft.\n\n\"This is... Very. Comfortable,\" Mom said.\n\n\"I wish I could sit closer,\" I said, \"Cuddle more.\"\n\n\"Honey, we can't,\" Mom said, \"Not like this. Not today.\"\n\n\"OK,\" I said.\n\n\"It does feel nice,\" Mom said. \"Snuggling. With my special guy.\"\n\nI reached around Mom's hips and found her clit. She sucked in her breath.\n\n\"Be careful, OK, honey?\" Mom said.\n\n\"I just want to make you feel good,\" I said, meaning it.\n\n\"I know, baby boy, but Mommy needs to stay in control.\"\n\n\"You're always in control, Mom,\" I said, \"I'll do whatever you want.\"\n\n\"I know,\" Mom said, \"But sometimes... Sometimes Mommy makes mistakes. I don't want to do something we both regret.\"\n\n\"I couldn't,\" I said, \"As long as it's what you want, then it's right for me.\"\n\nMom laughed to herself ruefully. She started rocking back and forth harder. God, it felt so good, the way Mom moved on me. Her urgency. The heat and wet of her pussy. We hadn't touched bare. Not like this. There was always the condom in between. Something about skin-on-skin between mother and son made it all the more amazing.\n\nFeeling Mom's body against mine, I couldn't help myself. I took my other hand, the one not on Mom's clit, and ran it up her chest. Reached up and grabbed her breast over her shirt. For the first time, I was feeling Mom's tit. It was glorious, well worth the risk. Full and fat, I could even feel the hint of a hardened nipple through her tank top and bra.\n\nMom froze. This was way over the covers. \"Um, honey? What are you doing?\"\n\nI didn't say a word, but I didn't let go. Dad was coming home in a few hours. This was all ending. It was my last chance. I wasn't going to leave anything behind, least of all regrets.\n\nI waited for Mom to say something. To remove my hand. Finally, she made a little shrug and started rolling her hips over me again. Realizing I had a green light, I ran my hand under Mom's shirt, pushed up her bra, and grabbed her bare boob.\n\nThis time, Mom spoke. \"Oh, honey, that's nice,\" she said. I hefted her breast in my hand. Diddled her clit with the other. I really wanted more arms at that moment. To touch every inch of my incredible, beautiful mother.\n\nMy head was filling with all sorts of plans for the next step, but my body was already at the end. Mom ground her cunt on my cock, and I felt my explosion impending.\n\n\"Mom,\" I said, \"Getting close.\"\n\n\"Almost there,\" Mom said. She was panting. All thought of propriety was gone. We weren't playing the game anymore. Pretend had been put aside.\n\nMom slid back, slipped forward, then paused. My cockhead had positioned itself right at her opening. A moment turned into hours. We hung at the precipice. Mom let my dick kiss at her pussy and then slipped over my shaft again.\n\nThe next slide, she did it again. Time stopped. Again, she let my dick bounce against her. She held it longer this time. Really considering.\n\nOh God. My dick was less than centimeters from sliding bare into Mom's snatch. I've never wanted anything more. I couldn't wait any longer. I tipped my backside. Aimed. Then slid forward. I told myself I'd pull out when the time came. It was just to feel it for a moment. To know what could have been.\n\nMy dick breached Mom's opening.\n\n\"Ohhhhhh!\" Mom groaned. Her pussy slowly gorged on my dick.\n\nI was bareback inside my mom. Nothing between us. The inches slipping away till I was totally buried. Mom was gasping. Her pussy grasping. I was ensconced in her perfect pussy. Like it had been shaped for my cock.\n\nNo. My cock had been formed for her. Because of course it had. I was her child. I'd come from this place and so I was made for it. I could have stayed there forever.\n\nBut things had gone too far. We'd kept it way too close. My cockhead kissed the back of Mom's pussy and her cunt cinched down. And just like that, I came inside my mother's unprotected pussy.\n\n\"Oh no,\" Mom said, as the first scorching burst of cum erupted from me.\n\n\"HrrrrrrrAHHHHHHH!\" I cried out. The pleasure arced out of my dick. Up my arms and down my legs. Mom's body responded immediately. Her pussy sucked up my cum like a hungry kitten. Her body stiffened over mine.\n\nI was barely conscious of it. My own orgasm grabbed hold of me, tight, and wouldn't let go. Squeezed every last drop of essence out of me.\n\nI burst inside my mother. I poured myself inside of her. My dick lodged right at the entrance of her unguarded womb.\n\nMom tipped forward. Somehow, I was still ejaculating. Another rush of semen fountained out of me and splashed, harmless on Mom's thigh.\n\nI leaned back against the couch. Blown. Mom lay back. She was staring right at me. I knew I was going to get it now.\n\n\"Mom, I...\"\n\nShe held up her finger. My heart, already racing, went into overdrive. My satiation quickly soured.\n\nWe'd screwed up (literally) big time. I'd seeded my mother on her most fertile day. Completely unprotected and fully fecund. I couldn't have picked a worse moment if I'd tried.\n\nMom used the finger she'd been warning me with and dipped it into the puddle of goo I'd left on her leg. She scooped it up and put it in her mouth. Then she smiled at me.\n\nAgain, I tried to apologize. Again, Mom silenced me.\n\nShe got up on all fours and crawled up my crotch. My penis, only about half flaccid, lay limp on my leg, dripping with the last of my semen.\n\nWithout a word, Mom lowered her head, and slurped my dick into her mouth. She bobbed up and down, wet. I didn't know what to say. How to react. My fear switched gears back to desire. This much jolting, I worried I was about to ruin my transmission.\n\nMom pulled her head off my cock, looking down proudly at my rejuvenated member. She pushed me to the side till I was flat on my back. She picked up the blanket, then threw it over the couch.\n\nMom grabbed her tank top and ripped it over her head. She unsnapped her bra. She was completely naked. For the first time through all of this, I saw my mom totally exposed. I'd underestimated her body.\n\nMom was flawless. I wondered at every inch of her. Her sculpted curves and perfect skin. Her full, perky breasts with pink, engorged nipples. Her hairy pussy still gaping from my cock, a bit of froth on her blonde pubes. Even the little stretch marks on her stomach from when she'd birthed me. Mom was a goddess. A vision.\n\nShe didn't notice my appreciation. Instead, she reached down and pulled my shirt off me. She smiled down at my bare chest.\n\n\"Now, my little knight,\" Mom said. She grabbed my cock and aimed it upward, \"If we're going to get Mommy pregnant, at least we're going to do it the right way.\"\n\nAnd just like that, I was back to buried to the hilt inside my mother.\n\nWe chorused a groan as we reconnected. Mom's pussy felt, unimaginably, even better this time. Her body so perfectly perched over mine. I reached up to grab Mom's tits. She ran her fingers over my chest. Her wedding ring, glinting in the light, was the only thing she was wearing.\n\nWe were naked, both of us, in my dad's private space. Uncaring. Completely surrounded only by each other. Enchanted and enthralled by what our bodies could create together.\n\n\"Oh Mom,\" I groaned as Mom rode me up and down like she was trying to slam me through the floor.\n\n\"Maybe you should call me Julie when we do this,\" Mom said.\n\n\"Ok, umm, Julie,\" I said, awkward as hell.\n\n\"Maybe you should still call me Mom,\" Mom said.\n\nI agreed wholeheartedly. Mom gave me a wicked grin. Apparently, she saw the attraction in the whole 'Mom' thing, after all.\n\n\"Do you like Mommy's cunt, baby?\" Mom asked, smirking playfully.\n\n\"Oh, fuck yes,\" I said.\n\n\"Does Mommy feel good for her baby boy?\"\n\n\"The best,\" I said.\n\n\"Your cock is amazing,\" Mom said, \"Your body's incredible.\"\n\n\"Your pussy is fantastic,\" I said, \"Your tits are awesome.\"\n\nMom laughed and I felt her pussy ripple up and down my cock. \"Why did we wait so long to do this?\"\n\n\"We're idiots,\" I said.\n\n\"Well, stupidity does come from my side of the family,\" Mom said with a smirk.\n\n\"Oh no,\" I said, \"Dad's clearly the dumb one. Fuck I love fucking you. I don't care. I'm not stopping.\"\n\n\"Never,\" Mom said.\n\n\"I'm gonna fuck you in your bed,\" I said, \"Make Dad sleep on the couch.\"\n\n\"I'll do you in your bedroom,\" Mom said, \"In your dorm room. In your locker room. Wherever you want me.\"\n\n\"I'm going to fill this pussy up, make it mine,\" I said.\n\n\"It's yours,\" Mom said, \"It was always yours.\"\n\n\"Am I bigger than Dad?\" I asked.\n\n\"Yes,\" Mom said, \"You're splitting Mommy open.\"\n\n\"Am I better than Dad?\" I asked. I grabbed Mom's hips. Practically throwing her up and down on my hard dick.\n\n\"Yes,\" Mom said. It came out as a whisper.\n\n\"Say it,\" I said, \"Scream it.\"\n\n\"My son's fucking me! I'm fucking my baby boy and it's the best I've ever had. He owns this pussy. It's his. I'm his. Oh FUCK!\"\n\nSuddenly, Mom's phone alarm went off. \"Time to get your father,\" Mom said, and she started to laugh.\n\n\"We can't be late,\" I said.\n\n\"No. Gotta be. Right. On time,\" Mom said. She drove herself down on my dick. Her tits jiggled lovely. I reached back for Mom's phone and switched off the alarm.\n\nThen I toppled Mom over. Drove myself into her. Face-to-face. Cock to cunt. Mom wrapped her arms around my back. Cinched her legs around my waist.\n\n\"This. Is. My. Pussy,\" I said, punctuating each push with a word.\n\n\"Yes,\" Mom said, \"Own me. Take me. I'm yours.\"\n\n\"Who fucks you best?\" I asked.\n\n\"You do,\" Mom said.\n\n\"Who?\"\n\n\"My son,\" Mom said.\n\n\"Will you ever let Dad fuck you again?\"\n\n\"No,\" Mom said, \"This is your pussy.\"\n\nI reached up and squeezed her breasts. \"Will you ever let him touch these again?\"\n\n\"Never,\" Mom said.\n\nWe were so close. I could see every little freckle on Mom's face. Finally, I couldn't help myself anymore. I pressed my lips to Mom's. Hungry and passionate. Tongues twirling. It was the first time we'd ever kissed like this. We made out like it was the last. Like we'd die if we ever broke apart.\n\n\"I love you, Mom,\" I said.\n\n\"I love you, too.\"\n\n\"I want to make you cum,\" I said, a wicked smirk on my lips.\n\n\"You did,\" Mom said, \"You are.\"\n\n\"I want to see it again.\"\n\n\"Oh, such a good boy. Mommy's little knight. You want to see me cum again, baby? You want to make Mommy cum so good on your cock?\"\n\n\"Please,\" I said, \"Please Mommy. Cum for me. I want to see it.\"\n\nMom's eyes rolled back in her head, as if on cue. Her hands squeezed down on my butt. Holding me still.\n\n\"Ohhhhh...FUCK! Oh, that's so fucking good.\"\n\nMom was amazing. But I'd already cum so much, I felt like I could fuck forever. Like I'd never let Mom go. I didn't want to. We kept talking to each other. Teasing and taunting. Playing every game we knew to get each other off. Like weeks' worth of repressed sounds and words were now all spilling forth at once.\n\n\"Oh! Uhn. So good. Fucking me. Oh, I love that big cock inside me,\" Mom said.\n\n\"I love your body,\" I said, \"Your pussy. Your tits.\"\n\nI dipped down to lick Mom's breasts. Sucked at her nipple.\n\n\"That's it,\" Mom said, \"Good boy. Feeding at your Mommy. Do you like them. My breasts? They're just for you.\"\n\n\"Amazing,\" I said.\n\n\"Will you nurse at me? Like a good boy?\"\n\n\"Yes, Mommy,\" I said.\n\nMom lay under me, limp. Like I'd fucked the life out of her. Blonde hair splayed everywhere. Makeup running down her face. I noticed red splotches all over her body where I'd kissed and bitten. I really did own her now. She'd have to wear a full astronaut suit if she didn't want Dad to know what she'd been doing. She'd have to hide from him for months.\n\nAnd I knew, as soon as the marks faded, I'd make more. I saw it now, like a clear route through a deep forest. What had seemed meandering in the moment was actually one long, straight path.\n\n\"Did you cum when I fingered you?\" I asked.\n\n\"Yes,\" Mom said.\n\n\"When I ate your sweet little pussy?\"\n\n\"So much,\" Mom said.\n\n\"You squirted,\" I said.\n\n\"I know,\" Mom said, \"I was so embarrassed.\"\n\n\"Because you knew, then, that I owned you. That your little boy controlled your body.\"\n\n\"You do,\" Mom said.\n\n\"When I fucked you for the first time? You came?\"\n\n\"Uh huh.\"\n\n\"Even though you're a married woman. You belong to another man. You let your son fuck you and you came.\"\n\n\"Like a slut,\" Mom said. \"Your slut.\"\n\n\"Your pussy begged for my cock,\" I said.\n\nMom nodded her head.\n\n\"When I did you from behind. At the sink.\"\n\n\"I came so hard,\" Mom said, \"I came so much. You gave me multiples. I didn't think those were real. You made me cum like five times in a row, baby. You did that. My perfect son.\"\n\n\"You wanted it,\" I said.\n\n\"More than anything. But...\"\n\n\"But what?\" I asked, my stroke faltering for one moment.\n\n\"I wanted more,\" Mom said, \"I wanted your cum. Your sperm. I wanted it inside me.\"\n\n\"You wanted me to make you pregnant?\"\n\n\"I wanted your seed in me. I need it. I don't care what it means but I have to. So bad. Uhn. Oh! Ohhhhhhhh.\"\n\nThe words alone made Mom go over the top again. She shook under me, like holding on for dear life. I didn't let up. I fucked her harder. Pumped her through her orgasm and sent her tumbling into another.\n\n\"Oh. So. Good,\" Mom said, \"Uhn. Oh. Fuck. God. I want it. I want your sperm. I want my son's seed. Inside me. Do it. Make Mommy cum, baby. Make another baby in me.\"\n\n\"I'm going to knock you up,\" I said.\n\n\"I'm ovulating,\" Mom said, \"You probably already did.\"\n\n\"We're going to make sure,\" I said, \"You're going to fuck me every minute till your stomach is swelling. Till my sibling is growing inside you. You're going to have a baby with your baby. A son from your son.\"\n\n\"Please,\" Mom said, \"It's your womb. You came from there. Claim it.\"\n\n\"What do you love more than anything in the world?\" I asked.\n\n\"My son,\" Mom said. She kissed me hard, but I pulled back.\n\n\"No,\" I said, \"More than that.\n\nMom smiled. \"Cum,\" she said, \"I love your cum.\"\n\n\"You're not safe, Mommy,\" I said, \"Your pussy isn't protected. I'm going to put my sperm in you and make an incest baby. Everyone will know.\"",
        "\"I don't care.\"\n\n\"Tell me,\" I said, \"Beg me.\"\n\n\"I want it. Want your seed. Put it inside me. Please.\"\n\n\"Oh, Mommy!\"\n\nI drove one last time, deep as I could into my mother. The pleasure raced up my shaft.\n\n\"Yes!\" we both cried out as I inseminated my own mom for a second time. I filled her so much, it came seeping out the sides. My ecstasy overwhelmed me, as well. Overloaded every nerve ending. Blasted through every cell. Until my body shut down and I collapsed, wordless, into my mother's warm embrace.\n\nMom held me tight. Kissed my forehead and cheeks.\n\n\"Oh, you did it,\" Mom said, \"You made me a Mommy again. Such a good boy you came for me so good.\"\n\nWe lay there, holding each other like lovers. Because that's what we were.\n\n*\n\nWe were two hours late to get Dad. We braced for it as soon as we saw him, but he was too tired to shout. He just glared at us. When he saw we were ignoring him, he started grumbling to himself. When we didn't pay any attention to that either, he stared off. Distant.\n\nWe made him sit in the backseat. I drove and Mom sat next to me. The highway was empty and dark. Everything was opening up again, but the roads still felt abandoned. I looked over at Mom and we shared a smile.\n\nThe world was ours for the taking.\n\n*\n\nWe sat out in the backyard, the sun beating down on our backs. Both of us shirtless, Mom in her sports bra while I was bare. The heat was almost too much for us, but we stayed outside.\n\nMom held my foot in her hand. Carefully, like one wrong move would ruin everything, she painted my toenails bright, girly pink.\n\n\"I'm marking you,\" she explained, \"So all those little sluts at school know you're mine.\"\n\n\"It's more likely to be seen by the hockey guys,\" I said.\n\n\"They need to know it, too,\" Mom said.\n\nI was leaving for school in a couple weeks. I didn't know how long school would stay open this time. The rumor was, if things needed to shut down again, they'd keep us in the dorms so we couldn't spread the virus.\n\n\"I've never dated a jock before,\" Mom said.\n\n\"Mom, I'm not...\"\n\nMom shushed me with her finger. \"I was always quiet in school. Athletes were all so confident and cocky. I thought they were assholes. Drama guys, though, they were safe. Friendly. Like me, they were the weirdos that didn't fit in anywhere else. Creative and oh so cool.\"\n\nMom let go of my foot, but she kept talking as she twisted the nail polish bottle closed.\n\n\"Your Dad and I had done plays in college before. We were in the same clique. I didn't have a boyfriend. He was seeing this other girl on and off. Cindy Cummings, if you can believe it. They were in an off phase. Your Dad and I started fooling around backstage in between rehearsals. Nothing serious.\"\n\n\"You've told me this part before,\" I said.\n\n\"It was the night of the big show. Your Dad and I were backstage. We were already done with our scenes. Nothing left but the curtain call. Your Dad started, um, playing around with me. You know, back there.\"\n\n\"I know,\" I said.\n\n\"He got my pants off. We were rubbing. He slipped in. Just like that, my first. A whole crowd of people -- my school friends, my professors -- were only a few feet away on the other side of the curtain. My mind blanked. All I could think about was how badly I wanted to feel him. Inside me. I grabbed your dad's hips. I wouldn't let him go.\"\n\n\"There's a part of it that's kind of sexy,\" I said.\n\n\"I didn't even cum,\" Mom said, \"Two months later we both knew. My parents, my dad especially, made it clear. I had to keep the baby, but I could let go of my dreams.\"\n\n\"I'm sorry, Mom, that's terrible.\"\n\n\"It is what it is. I married your father. We struggled through raising you. At some point, my whole world became my son. My little boy. I didn't have a life beyond you. I think your father resented it. When you started hanging out with him in high school, he was happy. Not because it meant more time with you. Just because he knew it would hurt me.\"\n\nI stood up to hug Mom. I couldn't help it. She looked so vulnerable in that moment. She let me wrap my arms around her. We crashed together onto the folding chair. Mom's cheeks were wet.\n\n\"Your Dad and I, over time, our feelings washed away. There's only resentment now. Then you left, and I really had nothing. I built my whole existence around being a mom. But what happens when you leave?\"\n\n\"You could be a mom again,\" I said.\n\n\"That's what I wanted,\" Mom said, \"That's why your dad and me were trying. But his heart wasn't in it. I think your father left a long time ago. His body stayed, but the rest has been gone.\"\n\n\"You're young,\" I said, \"You have so much more life in front of you. Your life. Not mine or Dad's or anyone else's.\"\n\nMom smiled weakly and kissed my cheek. \"You truly believe that, huh?\"\n\n\"You can have anything you want,\" I said. Mom chortled. Then she saw the look in my eyes, and she nodded. Serious.\n\n\"Anything?\" she asked.\n\n*\n\nMy first week back at school was brutal. I hadn't been homesick as a college freshman. But as a sophomore, I was a wreck. It got so bad, that when I sat down for lunch one day, I hallucinated seeing Mom at one of the other tables.\n\nThe cafeteria was busy, and I was in a rush. A couple of my teammates were already sitting at the table. I fell into my seat and tucked into my lunch. I felt a pair of eyes on me. I turned to look and there she was.\n\nBut, of course, that was impossible. I'd left Mom back at home weeks ago. We'd emailed a few times, but nothing more. She was busy, I was crazed. It was OK. I must have missed her more than I realized, to be hallucinating that she was in the cafeteria with me.\n\nI glanced again, knowing she'd be gone.\n\nBut the woman was still there. And the more I looked, the more I became convinced that it was my mother. I stood up, legs trembling. I had to hold on to my tray to hold myself up.\n\n\"Hey Pinktoe, you OK?\" one of my tablemates asked, using my newly bestowed nickname.\n\n\"Yes,\" I said, \"Fine. Just... Need something.\"\n\nI wandered over, my eyes narrowing down to the one path that led me to Mom. She'd cut her hair short, which sucked. She looked a little thinner than I remembered. But she'd done her makeup really good, which was awesome.\n\n\"Hi,\" I said, when I was close enough for her to hear me.\n\n\"Hi,\" she said, turning to look my way. \"I'm Julie, I'm new.\"\n\n\"Nice to meet you, um, Julie,\" I said.\n\nMom extended her hand and squeezed mine. \"You want to join me for lunch?\" she asked.\n\nI told her that I did. I forgot about my food back at my table and stumbled into my seat.\n\n\"You're a student here?\" I asked. I felt the tears start to fill my eyes and I forced them back. The hockey team was already picking on me enough for my painted toenails.\n\n\"I registered a few weeks ago, yes,\" Mom said, smiling at me slyly. \"Just one class to start.\"\n\n\"Where are you... What are you...\" All I could do was stumble.\n\n\"Your father and I are taking a break,\" Mom said, \"I have an apartment in the city. About a ten-minute drive from campus.\"\n\n\"Oh,\" I said.\n\n\"I'd love for you to visit,\" Mom said.\n\n\"Me too,\" I said.\n\n\"I was at home, missing you. Then I remembered some very wise person telling me I could do anything I wanted with my life.\"\n\n\"You can,\" I said.\n\n\"Turns out, I might be college material after all.\"\n\n\"You are.\"\n\n\"It was time to move on,\" Mom said, \"From a lot of things. Also, considering how things are shaping up.\" She patted her tummy meaningfully. \"I figured it would be better for me to be out of the house.\"\n\n\"You're...\" I stared at Mom in shock.\n\n\"Perhaps,\" Mom said, \"But why don't we keep that under the covers. For now.\""
    ],
    "authorname": "Spector_Dugan",
    "tags": [
        "mother",
        "son",
        "oral",
        "blowjob",
        "impregnation",
        "masturbation",
        "mom",
        "pregnancy risk",
        "creampie",
        "incest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/moms-touch-but-dont-look-policy"
}