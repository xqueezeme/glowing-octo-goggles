{
    "title": "A Boy's Last Summer Pt. 02",
    "pages": [
        "Since this was a contest story I didn\u2019t originally plan to write more, but response was so overwhelmingly positive I decided to add more content after all. I think this next chapter came out very well, and I hope everyone enjoys more of David and Roxy\u2019s story. Thank you for the all the great comments on my last installment!\n\n*\n\nIf there was one thing that Roxy Doyle would have wanted to see improved in her current residence; a bigger bathroom would have been right near the top of the list. The existing cramped space tended to fill with steam when she showered, and despite her best efforts to organize it, there still wasn\u2019t enough cabinet space for all her beauty supplies.\n\nShe stood in front of the mirror using one hand to wipe away the fog with a towel, revealing her face in the glass.\n\nIt was an attractive face, or so many men had told her throughout her life. Roxy herself was rather indifferent to it by this point having accrued quite a few years staring at her own visage. At least she had been, recent events had made her more aware of her looks. She squinted at her reflection, thinking that she could see more wrinkles around her eyes than had been there the previous week. The fact that she was about to celebrate her thirtieth birthday probably had something to do with her newfound insecurity, but an even more significant reason was her boyfriend.\n\nTen weeks earlier, Roxy had met David, a young man just out of high school who had come to work for her as a summer hire. The last thing she had ever imagined was that she would fall for him. The very idea had seemed ridiculous at first. He was eleven years her junior, inexperienced and a little bumbling right out of the gate. She had initially felt exasperation at his sarcasm and seeming lack of focus on his work, but over time she had discovered there was much more to this kid than she had first thought. He learned quickly, never made the same mistake twice, and proved to be a conscientious worker with excellent attention to detail. \n\nThe more time she spent around him, the more she found to like about him. He was kind and thoughtful, brave, and selfless. There was a maturity in him that mixed with his youthful innocence and dry wit attracted her in a way that no man had in a long time. She tried to resist her feelings. A task made much more difficult by the fact that David was also a very handsome young man with a body that was far more mature than its owners face. Given their age difference, and her relationship baggage that included a seven-year-old daughter, it seemed far more sensible to be his boss and keep a discreet distance.\n\nWhen she had failed at that, she had tried to settle on being his friend.\n\nIn the end, she had failed at that as well.\n\nDavid broke through the thick walls of indifference she had built up by doing no more than being himself, and that was both exciting and frightening to her. It forced Roxy to open herself to the kind of pain she had turned her back on, and to admit that she didn\u2019t have to be alone. For a woman that had forged her personality around fierce independence, this kind of vulnerability made her nervous. Add to this the fact that their May/December relationship was unconventional, to say the least, and you had a recipe for some sleepless nights.\n\nThen there were the wrinkles.\n\nA banging on her bathroom door jerked Roxy away from the minute inspection of her face.\n\n\u201cWhat?\u201d she snapped, opening the door enough to reveal the kindly old face of her neighbor, Mrs. Foster.\n\n\u201cI just wanted to let you know that David will be here soon. What\u2019s taking so long?\u201d\n\n\u201cI know what time it is, Mrs. Foster. I was just counting my wrinkles.\u201d\n\n\u201cWrinkles? You\u2019re about to turn thirty, Roxy, not seventy. You want to see wrinkles? Take a look at my face, Sweetie.\u201d\n\n\u201cIt\u2019s not your face that David has to look at all the time.\u201d\n\n\u201cFeeling a little insecure today, are we?\u201d\n\n\u201cNo...Yes...Shit! I don\u2019t know!\u201d said Roxy loudly as she struggled to put on her makeup, \u201cthis is what I get for dating a younger guy.\u201d\n\n\u201cYou wouldn\u2019t give him up for the world, though, would you? I\u2019ve never seen you so happy as you\u2019ve been since David came into your life.\u201d\n\nRoxy made a face in the mirror, she hated to give her nosey neighbor the satisfaction by admitting it, but she was right. David had swept into her orderly life and turned it all upside down but in a good way. He was proving to be a something she hadn\u2019t believed existed, a man she could count on. \n\nIf he had just been a little older...\n\n\u201cDavid is a great guy. There. I said it out loud. Happy?\u201d\n\n\u201cJust so long as you know it that\u2019s all that matters, Dear. He is a peach. Why, if I was forty years younger, I might be trying to steal him from you!\u201d\n\n\u201cMrs. Foster! You\u2019re going to make me blush, and I\u2019m trying to get the color right on my face.\u201d\n\n\u201cDon\u2019t think I don\u2019t know what goes on over here after lights out. These walls ain\u2019t that thick...\u201d said Mrs. Foster with a knowing grin.\n\nThis time Roxy did blush, for all his lack of practical experience, David seemed to have a natural ability in the bedroom. In their short time together, he had given her some truly epic orgasms that more than once had left her legs shaking.\n\n\u201cWhy don\u2019t you go back to watching soap operas and leave me in peace?\u201d\n\n\u201cFine, Dear,\u201d said Mrs. Foster with a laugh.\n\nRoxy finished getting herself ready and went to her bedroom to change into her clothes for their outing. \n\n\u201cI can\u2019t believe I agreed to this trip. Two days of camping with a bunch of teenagers,\u201d said Roxy returning to the living room where she stuffed her wallet into the backpack that sat on the floor.\n\n\u201cThey\u2019re his friends,\u201d pointed out Mrs. Foster.\n\n\u201cThey hate me. I\u2019ve heard them call me \u2018Grandma\u2019 behind my back when they think I\u2019m not listening.\u201d\n\n\u201cHeather was the only one that called you a grandma. The others like you just fine.\u201d\n\n\u201cYeah, that\u2019s another thing. You know she\u2019s coming this weekend? Me and his ex-girlfriend on a camping trip! What could go wrong?\u201d\n\n\u201cShe is still his friend. They\u2019ve known each other for years.\u201d\n\n\u201cLittle bitch wants him back too. She tries to pretend she\u2019s accepted things, but I\u2019ve seen the way she looks at him,\u201d said Roxy hotly, crossing her arms.\n\n\u201cAre you seriously threatened by the wiles of a teenage girl?\u201d\n\n\u201cWhat? No...Of course, not...I...I\u2019m just saying it\u2019s...it\u2019s...rude!\u201d replied Roxy flailing for the right word to describe her complicated feelings toward her boyfriends ex-flame.\n\n\u201cI wouldn\u2019t worry. I\u2019ve seen the way David looks at you. There is nothing Heather could ever do that would change that look in his eyes.\u201d\n\nRoxy nearly started blushing again, and she was glad when a knock at the door interrupted this conversation before it got worse.\n\nMrs. Foster was closer, and she opened the door to reveal David standing on the other side his usual care-free smile plastered prominently across his face. \n\n\u201cDavid! Come on in. We were just talking about you.\u201d\n\n\u201cAll good things I hope?\u201d \n\n\u201cOf course!\u201d\n\nDavid stepped through the door, and instantly Roxy felt like a school girl all over again basking in the attention of her biggest crush. It was a disconcerting feeling for a grown woman, and one she had never gotten used too. \n\n\u201cReady to go?\u201d he asked his dark eyes falling on her and making her wish they were alone. She wouldn\u2019t have minded leaving a bit late and dragging him to the bedroom first.\n\n\u201cI left Emily\u2019s pediatricians number on the fridge. Don\u2019t hesitate to call if there is any trouble, but I don\u2019t know if we\u2019ll have cell phone service.\u201d\n\nMrs. Foster smiled indulgently, \u201cI raised three kids of my own. I think I can handle yours for the weekend. You two go and have a good time.\u201d\n\nDavid picked up Roxy\u2019s pack for her slinging it over one shoulder. \n\n\u201cOff we go! The great wilderness awaits.\u201d\n\nRoxy sighed and with a look of resignation followed him out the door.\n\nAn hour later, they were well outside the city. The freeway in front of them climbed steadily upward into the vast pine forest of the Sequoia National Park. The temperature had dropped as they ascended, leaving the scorching heat of the low desert behind. \n\n\u201cYou\u2019re awfully quiet,\u201d observed David glancing over. \n\nRoxy had been trying to read a magazine but had tossed it aside a few miles back and now sat staring out the window at the trees as they whizzed by in blurry flashes of green and brown. \n\n\u201cSummers is coming to an end,\u201d she replied not directly addressing his statement.\n\n\u201cYep...that\u2019s why we are on this trip. My friends and I always do something to commemorate the end of another summer, and this year it was suggested that camping would be a cool idea. It\u2019s an even bigger deal since quite a few of them will be going away to school soon.\u201d\n\n\u201cWho suggested it?\u201d\n\n\u201cHeather, actually,\u201d admitted David unhappily. He knew that the two of them weren\u2019t exactly each other\u2019s biggest fans.\n\n\u201cHeather...\u201d mumbled Roxy.\n\n\u201cLook. I know the two of you don\u2019t particularly like being around each other.\u201d\n\n\u201cShe calls me \u2018Grandma\u2019.\u201d\n\n\u201cShe called you that once and it was just a joke,\u201d said David, trying not to laugh.\n\n\u201cJoke my ass! I\u2019ve heard her say it when she thinks I\u2019m not listening,\u201d said Roxy indignantly.\n\n\u201cIn two weeks, Heather will be going away to school, and you won\u2019t have to see her again. Why don\u2019t we try to get through this weekend and have a good time? Please?\u201d\n\nRoxy\u2019s expression softened at the sad look in David\u2019s eyes, \u201cGod! I hate that you can do that...\u201d\n\n\u201cDo what?\u201d\n\n\u201cYou get that damn sad puppy look in your eyes, and I freaking can\u2019t argue with you.\u201d\n\nThis time David did laugh, taking one hand off the wheel and resting it on her thigh.\n\n\u201cI promise I will make it up to you if you don\u2019t enjoy yourself.\u201d\n\n\u201cDon\u2019t worry about it. I can tolerate your Ex for one weekend,\u201d she said, smiling at last and taking his hand in hers.\n\nDavid switched on the radio and the sounds of the opening track to Bob Seger\u2019s album \u201cNight Moves\u201d flowed through the car.\n\n\u201cWhen did you get this?\u201d asked Roxy happily. She had admitted on their second date that she was a huge Seger fan, and David who had only minimal exposure to the Detroit legend had worked to remedy that by downloading as much of his music as he could cram onto his MP3 player.\n\n\u201cI burned a couple of CDs just for this trip. Isn\u2019t this one of your favorite albums?\u201d\n\n\u201cIt is. I\u2019m impressed you remembered.\u201d\n\n\u201cI remember everything you tell me.\u201d\n\nIn another man, it might have sounded like a boast, but she knew with David it was simply true.\n\n\u201cI never asked you where your interest in Bob Seger came from?\u201d\n\n\u201cMy dad. I\u2019m not from here originally. I was raised in a little town in central Michigan called Saline. It\u2019s just outside of Ann Arbor. My dad was from Detroit, and he grew up listening to Seger\u2019s music, so I guess it rubbed off on me.\u201d\n\n\u201cI didn\u2019t realize you were a northern girl.\u201d\n\n\u201cI don\u2019t remember living there very well. We moved west when I was Emily\u2019s age. I recall that it was cold in the winter.\u201d\n\n\u201cCold up north in the winter. Good to know.\u201d\n\n\u201cSmartass...\u201d\n\nThey began to sing along together, and though neither of them had a voice that could be called pleasant, they managed to harmonize in a way that wasn\u2019t bad at all. The first album finished, and they almost made it through the first half of \u201cStranger in this Town,\u201d appropriately enough singing \u201cTill it Shines,\u201d as the turn off for the park came into sight. \n\nDavid cut off the radio and rolled down his window as they approached a pay booth. He purchased a two-day pass and pulled through following the road around while looking at the numbers of the various campsites that were posted on signs. It turned out he didn\u2019t need to though because he recognized his friends camp in the distance and drove right up to them parking in the last available spot. \n\n\u201cHey! David and Foxy Roxy!\u201d laughed Chris as he came up to the pair slapping his old buddy on the back.\n\nDavid winced at the nickname Chris had bestowed on his girlfriend, but Roxy had learned to take Chris\u2019s sense of humor in stride by this point.\n\n\u201cDid everyone make it out o.k.?\u201d\n\n\u201cYeah, everyone\u2019s here, but wait until you see Heather.\u201d\n\nAs if Chris\u2019s words had powers of conjuration, Heather suddenly came bounding out of a tent right nearby running up to where the three of them stood.\n\n\u201cWow...Heather...What did you do to your hair?\u201d asked David almost not recognizing his old girlfriend. All the time he had known her, she had sported the same medium length, curly blond hair, but it was gone now. In its place, she had cut her hair short and dyed it a dark brunette. It worked quite well for her making her light blue eyes stand out even more and adding contrast to her fair skin. Heather had also changed her makeup going for a more dramatic look instead of the girl next door cuteness that had been her trademark. \n\n\u201cDo you like it? I was nervous about the change, but my stylist convinced me to give it a go!\u201d\n\n\u201cYou look gorgeous! I mean it\u2019s very flattering...\u201d replied David, curbing his enthusiasm when he saw the frown on Roxy\u2019s face.\n\n\u201cThanks! I have some even more exciting news.\u201d\n\n\u201cReally?\u201d\n\n\u201cYeah.I\u2019m not going away to school this fall after all. I decided to wait a year and get my prerequisites out of the way at city college first. It will be cheaper in the long run. So you and I will be in school together again! Isn\u2019t that awesome?\u201d\n\n\u201cUh...Yeah...That is awesome,\u201d said David, with far less enthusiasm.\n\n\u201cHey, Heather! Are you going to help me set up this tent or what?\u201d called Stacie from the next campsite over.\n\n\u201cOops! Have to go! I\u2019m glad you guys made it out! This is going to be such a fun weekend.\u201d\n\nDavid watched his ex-girlfriend walking away before turning back to Roxy whose expression had clouded over considerably in the last two minutes.\n\n\u201cWell...How about that, Huh?\u201d\n\n\u201cYeah, this weekend is going to be a real hoot,\u201d said Roxy before she pivoted on her heel and went to start unloading their gear.\n\nChris put his arm around his friend\u2019s shoulder, \u201cIf I were you, Pal. I think I would go ahead and drown myself in Sequoia River.\u201d\n\n\u201cIt\u2019s not the worst idea,\u201d admitted David as he shrugged off Chris\u2019s arm and went to help Roxy.\n\n FIRESIDE CHAT -\n\nThe group had bought out four spaces with Stacie and Heather camped in one, Pete and Chris in the next one over followed by George and Roger, and Roxy and David at the end. In the middle, there was a fire ring, and George had brought plenty of firewood to put together a campfire that would have done any Boy Scout troop in America proud. They gathered around the blaze after dinner to roast marshmallows.\n\n\u201cDoesn\u2019t this remind you guys of Camp McCloud?\u201d asked Pete as he stuffed a marshmallow in his mouth.\n\n\u201cIt sure does, but the marshmallows are better when you don\u2019t have to share with a bunch of other kids,\u201d remarked George as he downed one himself.\n\n\u201cI hardly remember that camp now,\u201d said Heather.\n\n\u201cI call bullshit! I know you remember it because you spent half the summer in the bushes with David!\u201d teased Roger, his voice trailing off when he remembered that Roxy was sitting next to him.\n\n\u201cSorry...\u201d he mumbled sheepishly.\n\n\u201cIt\u2019s o.k., Roger. It\u2019s nice to reminisce,\u201d said Roxy.\n\n\u201cDid you ever go to summer camp, Roxy?\u201d asked Stacie, trying to defuse the tension.\n\n\u201cSure, back in the day, I spent a couple of summers at Camp Warner.\u201d\n\n\u201cCamp Warner? I think I heard they shut that camp down about four years ago,\u201d said Heather.\n\n\u201cWell...I can barely recall it anyway. You know at my age the first thing that goes is your memory,\u201d joked Roxy, but there was a definite edge to her voice.\n\n\u201cHey, Heather, I thought Alex was coming this weekend?\u201d commented George.\n\n\u201cWe broke up. I guess he decided he wanted to spend his weekend somewhere else.\u201d\n\nHeather seemed to have her eyes on David when she said this, and he coughed uncomfortably.\n\n\u201cHey Stacie, are you going to give us a glimpse into our futures?\u201d \n\nThe question from Chris brought a smile to her face, and she nodded in the affirmative, \u201cI can do it over at the picnic table if anyone is interested.\u201d\n\nRoxy gave David a questioning look, and he leaned closer.\n\n\u201cStacie is kind of into Tarot reading. Occasionally, we let her get out her cards and tell our fortunes. It\u2019s all in good fun.\u201d\n\nRoxy rolled her eyes but did not comment.\n\nChris brought over a lantern, and while Roger and George continued shot-gunning marshmallows, the rest of the group gathered around Stacie as she laid out her Tarot cards on a silk cloth.\n\n\u201cCut the cards,\u201d she said to Chris.\n\nHe did as she asked and then she took them back dealing out several in front of her.\n\n\u201cChris gets \u2018The Fool\u2019 that\u2019s appropriate,\u201d laughed Pete.\n\n\u201cThe cards don\u2019t have a literal meaning, Pete. They are subject to interpretation,\u201d advised Stacie.\n\n\u201cSo what\u2019s in store for me, Stacie. Am I going on to riches and fame?\u201d\n\n\u201cHmmm...Well, I can see that possibility, lots of pentacle cards here that would indicate something to do with wealth in business, or creativity if you\u2019re an artist.\u201d\n\n\u201cI doubt it\u2019s art. Chris can\u2019t even draw a decent stick figure,\u201d said David getting a laugh from the assembled friends.\n\n\u201cBut!\u201d said Stacie, holding up a finger dramatically to get everyone\u2019s attention, \u201cThe Fool is reversed, so that may mean you will have to take a great risk or a reckless chance to achieve your goals.\u201d\n\n\u201cThat would be appropriate then, Chris always leaps in with both feet, and no regard for what he\u2019s about to land in.\u201d\n\n\u201cWhen have I ever behaved recklessly?\u201d said Chris trying to sound innocent.\n\n\u201cMindy Webster!\u201d said everyone at once while Roxy raised an eyebrow.\n\n\u201cHow was I supposed to know her parents would come home early?\u201d\n\n\u201cYou could have at least gotten your pants on before you jumped out her window,\u201d said Pete.\n\n\u201cThere was no time, and her Dad is huge. I had to move like the wind.\u201d\n\n\u201cYeah, and how far did you get before the cops picked you up running naked down Bird Street?\u201d \n\n\u201cTwo blocks, I think...It wasn\u2019t my finest hour,\u201d admitted Chris.\n\nAnother round of laughter followed while Stacie set her sights on Roxy.\n\n\u201cHow about it, Roxy? Want to know what the fates have in store for you?\u201d\n\n\u201cSure...Why not...\u201d said Roxy deciding to play along.\n\n\u201cCut the cards.\u201d\n\nRoxy split the deck following Stacie\u2019s fast shuffle watching the table as the cards that Stacie drew landed one after another.\n\n\u201cThe Empress...Hmmm...\u201d mumbled Stacie in thought.\n\n\u201cThe fates got that one right,\u201d said Chris elbowing David in the side.\n\n\u201cWell, one way to look at these wands in conjunction with the \u2018The Empress\u2019 would be nurturing the seeds of life, something to do with fertility maybe...\u201d\n\n\u201cI hope you\u2019re using protection,\u201d whispered Pete into David\u2019s ear.\n\n\u201cIt could also refer to nurturing a relationship and letting it grow by making sure to focus your primal energy.\u201d\n\n\u201cI like the sound of that,\u201d joked David rubbing Roxy\u2019s shoulders from behind. The move drew a look of disapproval from Heather.\n\n\u201cThis card here and reversed would indicate the danger of mistrust, that you have to believe in the relationship completely for it to work.\u201d\n\nRoxy stirred uncomfortably in her seat. Whether all this stuff was malarkey or not, Stacie was hitting too close to home.\n\n\u201cDoes it say anything about me winning the lottery?\u201d \n\n\u201cI\u2019m afraid not.\u201d\n\n\u201cIt doesn\u2019t matter. I already did anyway,\u201d replied Roxy reaching up to squeeze David\u2019s hand.\n\n\u201cAhhhhhh...\u201d said Pete and Chris in stereo wringing another laugh from the table.\n\n\u201cDo me, Stacie,\u201d said Heather, taking a seat while keeping one eye on Roxy.\n\nStacie shuffled, and once again the cards were cut and dealt out onto the table.\n\n\u201cIt looks like you\u2019re going to meet someone in the near future, someone who will have a great impact on your life.\u201d",
        "\u201cA tall, dark, handsome stranger!\u201d intoned Pete in a fake scary voice.\n\n\u201cNo...This card would lead me to believe it\u2019s someone you\u2019ve met before, a figure from your past.\u201d\n\n\u201cReally? Can you tell who?\u201d\n\n\u201cThis isn\u2019t an exact science, Heather, I can\u2019t tell you his or her name and address.\u201d\n\n\u201cI\u2019m pretty sure this isn\u2019t science at all,\u201d said Roxy under her breath, but fortunately Stacie didn\u2019t hear her.\n\n\u201cWhat sort of impact will this person have, positive or negative?\u201d\n\n\u201cHere. Draw one more card and drop it in the middle,\u201d instructed Stacie.\n\nHeather pulled the top card from the deck with a flourish and let it fall. Everyone leaned closer to see what she had chosen.\n\n\u201cThe Lovers...\u201d\n\n\u201cWhoa!...Somebodies going to get some!\u201d said Chris smiling.\n\nStacie went on to explain the nuances of the card, but Heather appeared to be hardly listening; instead, she was looking from the card to David and smiling a very wicked looking smile.\n\n\u201cHow about you, David?\u201d \n\nDavid shook his head, backing away from the table.\n\n\u201cI think I\u2019ll just take my chances with not knowing.\u201d\n\nRoxy rose to join him while Pete sat down to take a turn. David took her hand, and they went for a walk listening to Stacie\u2019s voice fade behind them.\n\n\u201cIf I didn\u2019t know better I would think Heather rigged those cards,\u201d said Roxy.\n\n\u201cHeather is a lot of things, but duplicitous isn\u2019t one of them. None of that crap means anything anyway, Stacie\u2019s been reading our cards since middle school, and her predictions have never amounted to squat.\u201d\n\n\u201cI\u2019m glad you think so I saw your look when Stacie mentioned fertility.\u201d\n\nDavid laughed, \u201cI\u2019m not against having children. They can turn out pretty cool. Look at Emily.\u201d\n\n\u201cShe\u2019s special, and she worships the ground you walk on, but I imagine you see having children of your own as a far off possibility.\u201d\n\n\u201cI\u2019m sure I\u2019ll get to that point one day. I\u2019m not in a rush.\u201d\n\n\u201cNo...but by the time you are ready I may be too old,\u201d thought Roxy.\n\nThey followed the road around circling back to their campsite just enjoying the relatively cool night air, so different from the baking heat of the desert. \n\n\u201cIf you don\u2019t believe in Stacie\u2019s cards then what do you believe in?\u201d\n\n\u201cAre you asking me if I believe in fate?\u201d\n\nRoxy shrugged.\n\n\u201cI think life is what you make it. I don\u2019t think there are some celestial beings out there throwing dice and deciding what\u2019s going to happen to us next. I will say that sometimes, events do conspire to make things come out in ways we never expected or planned. You can call that fate if you want, or just quantum fluctuations if science is more your thing. Take this summer, I certainly never planned to meet you, or for things to go the way they have between us, but I\u2019m glad they did.\u201d\n\nRoxy stopped just short of camp and David stayed with her.\n\n\u201cAre you?\u201d\n\n\u201cOf course. Have I ever made you believe otherwise?\u201d\n\n\u201cNo...and I\u2019m glad too. I don\u2019t think I tell you that enough, but I\u2019m glad I met you, David. I\u2019m happy that I\u2019m here with you.\u201d\n\nDavid reached up to cup her face, and they shared a soft kiss while the laughter of his friends broke the stillness. \n\n\u201cAre they going to be this loud all night?\u201d\n\n\u201cWait. Chris hasn\u2019t even worked himself up to mooning the other campers yet.\u201d\n\n\u201cOh. I can\u2019t wait,\u201d sighed Roxy.\n\nThings did eventually settle down, and thankfully they managed to convince Chris to keep his pants on. The moon had risen well up into the sky when people finally started to drift off to bed. David brushed his teeth with water from his canteen while watching George and Roger argue over which side of the tent they were going to sleep on like an old married couple. He finished what he was doing and unzipped his tent finding Roxy already inside lying on top of her sleeping bag in a flannel shirt and shorts.\n\nHe dropped down on his sleeping bag next to her, removing his t-shirt.\n\n\u201cI hope this air pad I bought stays inflated. I hate waking up in the middle of the night and finding myself sleeping on the ground.\u201d\n\n\u201cOh...You thought you were going to sleep?\u201d\n\nDavid smiled, \u201cI take it you have other plans?\u201d\n\nRoxy\u2019s answer was to move over to his sleeping bag straddling his legs and to begin unbuttoning her shirt slowly.\n\n\u201cOh...Man...\u201d breathed David, as he watched her work her way down. The two halves of cloth separated just enough to reveal the valley of her large breasts and a hint of the massive peaks that lay to either side.\n\n\u201cYou have to be quiet. We don\u2019t want to disturb the neighbors,\u201d whispered Roxy, though privately she wouldn\u2019t have minded if Heather got an earful of David moaning his enjoyment of their tryst. \n\n\u201cI can keep it down,\u201d said David in a lower voice.\n\n\u201cMrs. Foster says otherwise.\u201d\n\nDavid frowned at that comment, but he quickly forgot about it when Roxy took one of his hands and started to kiss his fingers, sucking one into her mouth before slipping the same hand into her shirt. He could feel the warm, round shape of her breast as she guided his wet fingers to the silky center. She bit her lip when David began to rub her saliva onto the hard nipple he found there teasing it until it was fully erect against his fingertips then pinching it between them.\n\n\u201cUm...Fuck...\u201d moaned Roxy softly.\n\nDavid rose up, pulling her shirt aside. Her perfect breast lay there like a firm melon the areola darkening into a rosy red field beckoning him to explore. He let his tongue slide across the bumpy skin, running up on her hard nip and catching it between his teeth while she squirmed atop his legs.\n\n\u201cDamn...David...You know what happens when you tease my nipples?\u201d\n\n\u201cYep...and I\u2019m counting on it.\u201d\n\nRoxy pulled him from her aroused tit and buried her tongue in his mouth, swirling it around, kissing him deep and hard with a low groan in her throat. Her sweet, full lips engulfed his in their moist embrace rubbing sensually all over, and sending a shower of gentle tingles down his spine. The hungry kiss spurred David on, and he returned it with equal excitement, Frenching his girlfriend roughly even as he pulled her down on top of him and pushed her shirt off. Roxy\u2019s fat tits were pressed to his hairy chest, her stiff nipples tracing lines in the curls. Their frantic kissing continued, slick, steamy touches that served to raise the urgency of their desire for one another to another level. \n\nDavid slipped his hands into her loose-fitting cotton shorts squeezing her tight ass cheeks, making her groan into his mouth. \n\n\u201cFuck, I\u2019m so wet...\u201d she whispered.\n\nHe rolled her onto her back, and she raised her legs high so he could slide off her shorts.\n\nRoxy hadn\u2019t been kidding. Her pussy was wetter than he had ever seen it before, her thighs shining with the nectar that was pouring from her vaginal slit. David scooted up right next to her, kissing her again with slow flicks of his tongue while he used his fingers to gently stroke her labia. She moaned as quietly as she could, but it was so hard to hold in her feelings. David seemed to have a sixth sense about just how to touch her body to make her want him, and he was hitting all her buttons. \n\nHe nibbled on her ear, teasing her in a soft voice.\n\n\u201cYou want me so bad right now, don\u2019t you?\u201d\n\n\u201cYes...Ah! God! Yes...David...I want you, Baby!\u201d\n\n\u201cI can tell. Your pussy is soaking.\u201d\n\n\u201cPlease, David...Don\u2019t tease me...I need you inside me...\u201d\n\n\u201cRight here?\u201d he asked, shoving two fingers into her dripping slit.\n\n\u201cOH! FUCK! Yes!\u201d cried Roxy arching her back and barely muffling her words.\n\nHe fingered her tight hole, taunting her clitoris with his thumb, making her quiver on the sleeping bag.\n\n\u201cDo you want me to fuck you, Roxy? Want my thick...hard...cock...in this wet pussy?\u201d\n\n\u201cGod! David! I\u2019m begging you...fuck me now...Please...I can\u2019t take it anymore...You\u2019re making me crazy! Please, David!\u201d\n\n\u201cPlay with your tits. I love to watch you play.\u201d\n\n\u201cIf...I do that...while you\u2019re touching my pussy like this...I might cum...,\u201d she whimpered.\n\n\u201cPlease, Roxy...\u201d\n\nShe did as he asked, lifting her massive breasts in her hands and squeezing them, pulling at her nipples and making them turn even darker. Her breath was coming in hard gasps with each movement.\n\n\u201cDo you like to touch them?\u201d\n\n\u201cYes...I love to play with my tits...but I like it better when you play with them...suck them...bite my nipples...\u201d\n\nRoxy\u2019s hands gripped her love mounds even more roughly in response to her own words the memories of nights spent with David\u2019s mouth teasing her chest driving her mad.\n\n\u201cDavid...Please...Please...I can\u2019t...I\u2019m going to cum...going to cum so fucking HARD!\u201d\n\nHe finally took pity on his desperate girlfriend, crawling on top of her, pushing his shorts down and placing the head of his cock right up against her trembling pussy lips.\n\n\u201cHurry!\u201d she begged.\n\nThey both struggled to keep from screaming when David let his weight fall forward, and his thick cock fairly lept into Roxy\u2019s pussy her sugar walls so slick they offered no resistance to his passage. Barely contained grunts and cries threatened to escape the canvas walls of their tent as the two lovers moved together. Roxy dug her nails into his back, pressing her heels to his muscular buttocks, meeting his thrusts with wild upward pushes of her hips, impaling herself even deeper onto his shaft. \n\n\u201cOh...God...So good! It feels so good! Ah! David! I\u2019m going to cream your fucking cock! Uhhhhh...Daviddddd!\u201d\n\nHis fingers had brought her too close to the edge, and she couldn\u2019t hang on. Violent ripples cascaded from her clitoris out through her body, and it took all her self-control to keep from yelling David\u2019s name loud enough to be heard by every camper in a ten-mile radius. He joined her just a few thrusts later filling her still shaking love hole with long ropes of his semen. Their bodies drew together, and they kissed softly both struggling to regain their equilibrium in the wake of their titanic orgasms.\n\n\u201cIt\u2019s always so amazing with you,\u201d she said, touching his cheek.\n\n\u201cI thought for a second there you were going to be the one to wake the neighbors.\u201d\n\n\u201cThat\u2019s what you get for teasing me that way. If I had screamed the tent down, it would have been your fault!\u201d\n\n\u201cI can\u2019t help myself. I live for driving you crazy.\u201d\n\nRoxy left shortly afterward to run to the nearby restroom and clean up before coming back to bed where she and David zipped their sleeping bags together and snuggled down for the night.\n\n THREES A CROWD BUT FOUR IS WORSE -\n\nThe following morning dawned bright and sunny. David cocked one eye open, slowly sitting up and yawning. He stretched his arms up toward the top of the tent listening to the quiet pops as the joints in his back loosened up. Roxy was nowhere to be seen, but he could hear voices outside, and the sounds of a crackling fire. \n\n\u201cHey, Sleepy Head. Finally decided to join the world?\u201d teased Roxy as he climbed out of the tent into the crisp mountain air.\n\n\u201cI guess I was more worn out last night than I thought,\u201d replied David with a knowing smile that made Roxy blush.\n\nStacie had coffee going on a camping stove, and she brought him a steaming cup along with a muffin from a box on the picnic table.\n\n\u201cThanks,\u201d he said, sipping at the hot liquid.\n\n\u201cSure. Everyone is getting ready to hike up to Sequoia River, so pull yourself together!\u201d\n\n\u201cYes, Mommy.\u201d\n\nStacie bounced away like a woodland sprite her feet barely touching the ground.\n\n\u201cShe\u2019s always been a mother hen to the rest of us,\u201d explained David.\n\n\u201cI can see that.\u201d\n\nRoxy watched as the petite girl moved around camp getting everyone organized and moving forward. They grumbled a bit, but no one dared to challenge Stacie, and in a short time the entire group was fed and walking single file down a marked trail not far from their encampment.\n\n\u201cTake a left at the next fork,\u201d called David from the middle of the pack to Chris who had taken point.\n\nChris responded with an affirmative wave.\n\n\u201cThis will put us on Harlow Trail. It runs right up to the river near \u2018Look Out Point.\u2019\u201d\n\n\u201cYou\u2019ve been up here before?\u201d asked Roxy.\n\n\u201cA few times with both my parents, and the guys.\u201d\n\nThe trail was narrow, forcing them to stay single file for the moment. Roxy noted that Heather had made sure to put herself right in front of David. The younger woman had dressed in a very tight pair of shorts that revealed a good bit of her ass. It seemed like she was also taking every opportunity to bend over.\n\n\u201cThe way she likes to shake her ass in men\u2019s faces she should work in a strip club,\u201d grumbled Roxy.\n\n\u201cWhat was that?\u201d asked David over his shoulder.\n\n\u201cNothing, Sweetie.\u201d\n\nOnce they passed the fork, the trail widened considerably, and the group was able to spread out. Roxy moved up next to David, taking his hand in hers, making sure to make eye contact with Heather.\n\n\u201cIt sure is beautiful,\u201d remarked Stacie glancing around.\n\n\u201cBe careful, Stacie! I thought I saw a hawk up above the trees a minute ago. He might think you\u2019re a mouse and scoop you up for lunch,\u201d teased Chris.\n\nStacie stuck out her tongue at him then ran ahead to walk with Heather.\n\nThe day was warming up quickly, and water bottles made an appearance as the group marched on.\n\nGeorge had brought along a blue tooth speaker and started playing some upbeat music.\n\nThe trail gradually sloped downward, and about a half-hour later they heard the sound of running water before the trees parted, and they found themselves on a rocky shelf that overlooked the fast-moving river below. They could see from where they stood that this shelf was one of many such points that stuck out over the river like platforms where someone could bask in the sun, or dive into the cold water if they were so inclined. \n\nEveryone spread out to lay down their packs, and slip off their shorts and t-shirts revealing the swimsuits they wore underneath. \n\nRoxy was wearing a bikini similar to the one David had first seen her in at the water park earlier in the summer except this one was an emerald green. The suit looked very nice with her fair skin and strawberry-blond hair. He took note that the other guys were trying very hard not to stare and failing miserably. All the attention didn\u2019t seem to bother Roxy who was used to it.\n\nThe real surprise came seconds later when Heather finished removing her outerwear. In all the years David had known her, Heather had always stuck mostly to conservative one-piece suits, but today she stripped off her clothing to reveal a tiny, jet black bikini that clung tight to her perky tits, and barely managed to conceal her backside from wandering eyes. \n\n\u201cJesus, Heather. Are you going diving in that?\u201d asked Chris, his eyes almost bugging out of his head.\n\n\u201cI don\u2019t think I\u2019ll be doing that today. It might just come off and then where would I be?\u201d she said with a flirty smile in David\u2019s direction.\n\nHe swallowed and pretended not to notice.\n\n\u201cCome on! Time to separate the professionals from the amateurs!\u201d yelled Pete.\n\nAs they started to move out together toward the edge of one of the rocky shelves, Roxy came over to David with a concerned look in her eyes.\n\n\u201cYou\u2019re going to dive off these rocks?\u201d\n\n\u201cIt\u2019s fine. We\u2019ve done it before. It\u2019s plenty deep here, and there are no rocks under the water.\u201d\n\nShe stepped a bit closer to one edge. It was probably a good twenty or thirty feet down to the water.\n\n\u201cYou\u2019re out of your mind.\u201d\n\nDavid laughed and pulled her into a quick hug.\n\n\u201cThanks for worrying, but I got this covered. You going to be o.k. up here?\u201d\n\n\u201cI\u2019m not the one about to leap off the side of a mountain, so I\u2019ll be fine. I\u2019m just going to layout and work on looking less like \u2018Casper the Friendly Ghost.\u2019\u201d\n\n\u201cI like your skin just as it is...\u201d he said, tipping her jaw up for a kiss.\n\nRoxy watched him go shaking her head. She noticed that Stacie was lounging in her swimsuit a short distance away while Heather had moved out onto a jutting rock from where she could watch the guys, or be watched herself which Roxy suspected was her real intention. \n\n\u201cYou aren\u2019t diving?\u201d asked Roxy as she took a seat next to the diminutive brunette. \n\n\u201cGod, no! I\u2019m not the brave one in this group.\u201d\n\nThe two women looked on as Pete worked himself up with a lot of deep breaths and then took off at a run launching himself into the air with a wild yell before vanishing with a splash into the water below. He popped up seconds later, shaking the water from his eyes and raising an arm in triumph before the current carried him down the river. \n\n\u201cThere\u2019s a sand bar around the bend. They get out there and walk back for another go,\u201d explained Stacie. \n\nChris was lining up to go next.\n\n\u201cGo, headfirst, it\u2019s your least vulnerable spot!\u201d yelled Stacie.\n\nChris laughed and took off vanishing over the edge.\n\n\u201cHe\u2019s such a nut.\u201d\n\n\u201cBut you like him anyway, don\u2019t you?\u201d asked Roxy.\n\nStacie looked bashfully at the ground, \u201cHe doesn\u2019t know...I\u2019m not his type anyway. He is into girls that...Well, honestly, girls that look like you. You know, pretty and voluptuous, which I am not.\u201d\n\nRoxy thought Stacie was selling herself short. Indeed she was a tiny girl with smallish breasts and rather skinny legs, but she was very pretty in the face and had a wonderfully outgoing personality.\n\n\u201cI think he would be lucky to have you. Maybe you should tell him how you feel?\u201d\n\n\u201cI\u2019ve thought about it, but we\u2019ve been friends for so long I don\u2019t think he could see me any other way. If I did that, and he didn\u2019t want to go in that direction I\u2019m afraid it would make things awkward between us.\u201d\n\n\u201cIt\u2019s a risk, but if you don\u2019t try, you\u2019ll never know.\u201d\n\n\u201cMaybe...I wish I were braver when it came to these things like you and Heather.\u201d\n\nAt the mention of Heather, Roxy glanced over to where the other woman lounged some distance away. David was getting ready to make his run, and Heather\u2019s eyes were on him with the stare of a predatory bird.\n\n\u201cShe doesn\u2019t hate you,\u201d opined Stacie.\n\n\u201cFrom the looks she gives me it\u2019s hard to tell.\u201d\n\n\u201cI think she is more angry with herself for losing David. They were the Ken and Barbie of Randolph High for years. The couple every couple wanted to be, and it eats at her that she screwed it up.\u201d\n\n\u201cShe needs to get over that, and stop throwing herself at him.\u201d\n\n\u201cYou should go talk to her. Maybe you two could come to a truce over the whole thing?\u201d\n\n\u201cYou can\u2019t be serious?\u201d\n\n\u201cI can tell you this much, David and Heather have known each other for a long time, and even if they never become lovers again, she is always going to be his friend. Wouldn\u2019t you rather find a way to co-exist with her that doesn\u2019t make you both crazy?\u201d\n\n\u201cI could just go toss her off the cliff.\u201d\n\n\u201cHa! You could, but it wouldn\u2019t help. Heather was lead on our girl\u2019s diving team, and she swims just as well as David.\u201d\n\nRoxy took a breath and stood up, \u201cI can\u2019t believe I\u2019m doing this. It\u2019s like I\u2019m back in high school having to kiss up to the head cheerleader.\u201d\n\n\u201cYou might want to try for a more positive attitude,\u201d advised Stacie.\n\n*\n\nThe rocky shelf where Heather was lying was just wide enough for the two of them, and Roxy took a seat next to her leaning back on her hands.\n\n\u201cNice day.\u201d\n\n\u201cDid Stacie send you over here? It would be just like her. She\u2019s always been the peacemaker in the group. Whenever someone disagreed with someone else, it\u2019s always Stacie that tries to make them see reason. She should be an ambassador when she grows up.\u201d\n\n\u201cI just thought we could talk,\u201d offered Roxy trying to keep the anger and sarcasm out of her tone.\n\n\u201cWhat would you like to talk about?\u201d\n\n\u201cI think you know.\u201d\n\n\u201cDo I?\u201d\n\n\u201cDon\u2019t be coy, Heather. The way you\u2019ve been flirting with David. It\u2019s disrespectful to me, and him.\u201d\n\n\u201cHe hasn\u2019t complained to me about any flirting.\u201d\n\n\u201cDavid wouldn\u2019t complain if he had a steel bar sticking out of his ribcage. He\u2019s far too nice for his own good. I, on the other hand...\u201d",
        "Heather looked over at Roxy for the first time since she had sat down, \u201cYeah, you have no problem saying what\u2019s on your mind.\u201d\n\n\u201cNo I don\u2019t, but I\u2019m trying hard to be friendly about this and not do something we\u2019re both going to regret. I know David well enough to say he would...\u201d\n\n\u201cYou know David!\u201d snapped Heather raising her voice for the first time and catching Roxy by surprise.\n\n\u201cExactly how well do you know, David, Roxy? You think you know David because you\u2019ve been dating him for a whole seven weeks! David was mine for three years, and you want to tell me what David would want!\u201d\n\nShe was on a roll now, and wouldn\u2019t let Roxy cut her off.\n\n\u201cDid you know his favorite color is green? Did you know that his favorite food is fried chicken, but only the dark meat because the white is too dry. Did you know that his favorite T.V. show of all time is \u2018The Twilight Zone,\u2019 and he still watches the marathon every New Years? That he likes to drink warm milk at night when he can\u2019t sleep and loves the Hallmark movies at Christmas but would never tell his friends because they would tease him. I know David, and I understand him better than you ever could. I was there when his Grandma died, and I held him while he sobbed his heart out. I was there when he won his first swim trophy and felt like he was on top of the world, and I was there when he lost his virginity because we lost ours together.\u201d\n\n\u201cSo...,\u201d said Heather, finally pausing to catch her breath, \u201cdo you still want to tell me how well you know David?\u201d\n\n\u201cThat was quite a speech, truly and Oscar-worthy performance. It doesn\u2019t change the fact David is with me now, and I need you to accept it.\u201d\n\nHeather smiled, but the expression held no warmth, \u201cDavid\u2019s with you? And just what do you bring to this relationship? I can see what you\u2019re getting from David. He\u2019s kind, loving, loyal to a fault and protects the people he cares about. So what does David get from you aside from the obvious? Does he get to enjoy the responsibilities of fatherhood long before he\u2019s ready too? Does he get to deal with the insecurities of a divorced woman with an alcoholic ex-husband who\u2019s spent years building up her resentment toward men? Maybe he gets the joy of dating a woman born a decade out of step with him? You tell me, Roxy, what are you bringing to the table exactly?\u201d\n\nRoxy had to give Heather credit. She had hit the head on every nail that had been bothering Roxy for weeks. Caught off guard by the sudden attack, Roxy found herself in a rare position for her, at a loss for words.\n\n\u201cI just came over here to see if we could find some way to get past the animosity and maybe be friends. I can see I made a mistake.\u201d\n\nShe pulled herself back to her feet and beat a hasty retreat fighting back the tears that threatened to come.\n\n\u201cThanks for the chat,\u201d called Heather as she turned her back to Roxy\u2019s retreating form.\n\n\u201cIs everything o.k.?\u201d asked Stacie as Roxy hastily pulled her clothes back on and reached for her pack.\n\n\u201cIt\u2019s fine...I just...Uh...felt a headache coming on, and I need to go back to my tent and lie down. Tell David when he comes back o.k.?\u201d\n\n\u201cYeah...Sure,\u201d said Stacie with concern as Roxy fled up the trail.\n\nStacie stomped over to where Heather was still resting in the sunshine pulling herself up to her full five-foot-one-inch height.\n\n\u201cHeather Elizabeth Andrews! Just what did you do?\u201d\n\nThankfully for Roxy, the trail was easy enough to follow, but she did stop half-way back to camp to lean against a tree and collect herself. \n\n\u201cThis is ridiculous! Why am I letting some eighteen-year-old kid get in my head! You\u2019re better than this, Roxy Doyle!\u201d she said harshly under her breath as she fought to calm down wiping tears from her eyes. \n\nThe fact remained though that Heather wasn\u2019t wrong. Everything she had said was right and underlined her doubts about this relationship. The nagging feeling that David deserved better, that he deserved to be with someone who wasn\u2019t weighed down by her past, someone who was at the same place in life he was ready to build something fresh and new. \n\nWhat did she bring to this relationship? She didn\u2019t know, and that unknown frightened her both because it meant she could lose him, and because it also said that maybe it would be better for him if she did.\n\nThe sounds of a far off bird calling snapped her out of her dark thoughts, and Roxy got started up the trail again slowly regaining her composure. As she drew closer to camp, she heard a distant rumbling noise that sounded familiar, but in her current mental state, she was having a hard time placing it. Emerging from the woods, Roxy was greeted by a massed group of rough-looking men riding by on all manner of different models of motorcycle. There must have been about thirty or so altogether, but it was the last one in the long pack that caught her attention.\n\n\u201cYou\u2019ve got to be fucking kidding...\u201d mumbled Roxy.\n\nThe last man in line pulled away from the rest stopping in front of her and pushing his sunglasses up.\n\n\u201cWell, I\u2019ll be damned! Roxy! Fancy seeing you up here,\u201d said Todd with a grin.\n\n\u201cWhat are you and your band of morons doing here, Todd?\u201d\n\n\u201cIt\u2019s our semi-annual club getaway. You know we do a couple of retreats every year.\u201d\n\n\u201cDon\u2019t you usually do those in Vegas?\u201d\n\n\u201cYeah...Well, the last one got a little bit out of hand, and we decided maybe we should give Vegas a wide berth for now. Someone suggested a nice, quiet trip to the mountains might be a better idea. What are you doing?\u201d\n\n\u201cI was having a quiet weekend before you wanna-be Hell\u2019s Angels showed up.\u201d\n\n\u201cAh! We aren\u2019t here to cause trouble. Heck! You won\u2019t even notice us.\u201d\n\n\u201cI\u2019m already noticing the smell.\u201d\n\n\u201cBe nice. I just bathed yesterday. Anyway, I\u2019m going to make camp. Maybe I\u2019ll see you around?\u201d\n\n\u201cDon\u2019t hold your breath.\u201d\n\nShe watched him roar off in a stinky cloud of exhaust. This was all she needed, first the attack of the emotionally jilted cheerleader, and now her ex-husband shows up. This weekend was sinking into an abyss very quickly. By now, Roxy did have a headache coming on, and she went to lie down in the tent. The sleeping bag still smelled of David\u2019s cologne, and she curled up on it drinking in the scent. It made her feel safe somehow, and she started to drift in and out.\n\nRoxy\u2019s thoughts became a disjointed mess. She never quite dozed off completely but instead floated on the edge of sleep. Time passed more quickly than she realized, and when voices came from outside the tent, she was drawn back to the land of the living to discover that several hours had gone by while she had been inside. The zipper in the front of the tent slid down, and David ducked inside, looking worriedly at her.\n\n\u201cHi, there! Stacie said you weren\u2019t feeling well?\u201d\n\n\u201cI\u2019m o.k. now. It was just a headache.\u201d\n\n\u201cI\u2019m glad you\u2019re feeling better. We were going to walk down to the camp pavilion for lunch. They serve a pretty good burger there if you want to come?\u201d\n\n\u201cSure...Just give me a second to pull my shoes back on.\u201d\n\nWhen she emerged from the tent, the first person she saw was Heather, but the younger woman refused to meet her eyes turning away and walking up the road following the broad backs of Roger and George. Roxy fell in next to David, who was still watching her with concern perhaps sensing her sudden unease.\n\n\u201cAre you sure everything is o.k?\u201d\n\n\u201cI said I was fine!\u201d snapped Roxy more harshly than she intended, and David flinched as if he had been slapped.\n\nInstantly feeling bad for her outburst, Roxy took her boyfriend\u2019s hand.\n\n\u201cI\u2019m sorry. I\u2019m not angry with you. Todd is here.\u201d\n\n\u201cWhat!? Where?\u201d said David looking around.\n\n\u201cHe\u2019s here with his motorcycle club. They\u2019ve camped up the road from here.\u201d\n\n\u201cIt\u2019s funny I never really pictured you as the bikers old lady,\u201d joked David.\n\n\u201cI wasn\u2019t. Todd started the whole motorcycle thing after we divorced. I guess he was trying to find a new identity or something.\u201d\n\n\u201cI guess he accomplished that. What was he like before?\u201d\n\n\u201cDon\u2019t laugh, but he was a delivery driver for U.P.S. He used to have short hair, and wore very yuppie clothes when he wasn\u2019t in a brown uniform.\u201d\n\nDavid tried to reconcile that image with the long-haired, tattoo sporting man he knew and couldn\u2019t.\n\nThey arrived at the pavilion which had been built back in the nineteen-sixties as an entertainment venue for the park. It had plenty of outdoor seating to serve the walk-up window to a kitchen that made your typical picnic food like burgers and hot dogs, but it also had a camp store next door and through a pair of large wooden doors a massive open room that was often used for dances and concerts. \n\n\u201cI\u2019ll have two of everything!\u201d said Chris running up to the window.\n\n\u201cYou will not Christopher! You\u2019ll make yourself sick!\u201d cautioned Stacie from behind him.\n\n\u201cCome on, Stacie! I\u2019m starving, and a growing boy needs his calories.\u201d\n\n\u201cThen at least get a vegetable to go with all that fat.\u201d\n\n\u201cFine, Mom!\u201d\n\nStacie frowned at being seen once again in the mom role, it didn\u2019t bother her so much with the others, but she didn\u2019t want Chris to see her that way.\n\nOne by one, everyone got their food, and they found a picnic table long enough for all of them to sit. David hadn\u2019t been kidding about the quality of the burgers, and Roxy found herself enjoying every bite.\n\n\u201cAnyone else see what I see?\u201d said George whipping mustard from his face.\n\nThey followed his gaze to the sand volleyball court that was not far from the pavilion where a group of young adults not much older than themselves were engaged in a spirited game.\n\n\u201cWe should show those guys how it\u2019s done,\u201d said Chris.\n\n\u201cWe used to play a lot of volleyball at Wave World,\u201d explained David to Roxy, \u201cthese guys kind of think of themselves as the local champs.\u201d\n\n\u201cDid we ever lose a game there?\u201d cut in Pete.\n\n\u201cNo...but the competition bar wasn\u2019t exactly set very high either.\u201d\n\n\u201cAs our team captain, you should have more confidence in us,\u201d threw in Roger.\n\n\u201cYou were team captain?\u201d\n\nDavid smirked back at Roxy between bites, \u201cThere wasn\u2019t a ton of people vying for the job.\u201d\n\n\u201cCome on, David, this may be our last chance to defend our title!\u201d\n\n\u201cThere was no title! We just pretended there was, but I see your point.\u201d\n\nAfter they finished their meal, David led them over to the court, and they politely challenged the group playing to a match. Roxy stripped off her top deciding that at the very least her assets might be a distraction to the other team. \n\n\u201cYou\u2019re not playing?\u201d she asked Stacie who stayed put as the others moved off.\n\n\u201cI was more like the designated mascot. It\u2019s o.k. I\u2019m too short to be effective, but I don\u2019t mind cheering.\u201d\n\nRoxy joined the rest of them on the court.\n\nDespite David\u2019s self-deprecating assessment of his abilities as well as those if his friends, they turned out to be a solid team. They took the match two games to one with David scoring the winning point on a wicked looking spike set up by Chris. High fives were exchanged all around, but it turned out their performance had an audience.\n\n\u201cWhat do you say we get the winner?\u201d said a familiar voice.\n\nTodd strolled out into the clearing followed by half-a-dozen of his brother bikers. They were an intimidating looking group, and David pulled his friends aside to discuss things.\n\n\u201cThis feels like the guards vs. the prisoners in that old Adam Sandler movie,\u201d remarked Chris.\n\n\u201c\u2018The Longest Yard,\u2019\u201d said Pete.\n\n\u201cIt was a Burt Reynolds movie,\u201d corrected David.\n\n\u201cNah, he was in it, but it was definitely an Adam Sandler movie.\u201d\n\n\u201cI\u2019m talking about the movie from 1974.\u201d\n\n\u201cAdam Sandler would have been like five he couldn\u2019t have been in that,\u201d said Chris confused.\n\n\u201cHe wasn\u2019t. I was talking about the original movie, not the piece of shit remake!\u201d\n\n\u201cThere was an original movie?\u201d asked George.\n\n\u201cYeah! In 1974. It was the one with Burt Reynolds.\u201d\n\n\u201cBurt Reynolds wasn\u2019t in the Adam Sandler one? Cause I could have sworn...\u201d started Chris.\n\n\u201cNo, he was in it, but he didn\u2019t play the same part. He was like a coach.\u201d\n\n\u201cI thought Adam Sandler was the coach?\u201d \n\n\u201cHe was, but like a player/coach. Just like Burt Reynolds.\u201d\n\n\u201cWait...Burt Reynolds was the coach? Was that in the first one or the other one?\u201d\n\n\u201cTechnically both, you see...\u201d\n\n\u201cOh! For fuck\u2019s sake! Are you movie historians going to debate this shit all day or play volleyball?\u201d said an exasperated Roxy.\n\n\u201cRight...I guess we should play,\u201d said David uncertainly.\n\nGeorge looked over to where the bikers were stripping off their shirts revealing lots of very detailed, and in some cases very intimidating ink.\n\n\u201cAre we sure about this? If we win, are they going to take it well, or like, want to rumble?\u201d\n\n\u201cRumble? What the fuck, George? Your mom still making you watch \u2018West Side Story,\u2019 with her when she\u2019s bored?\u201d questioned Chris.\n\n\u201cThose were street gangs, not bikers,\u201d put in Roger.\n\n\u201cWell, thank you, Mr. Hollywood. I had no idea...\u201d\n\n\u201cGive me the damn ball!\u201d snapped Roxy.\n\n\u201cWe\u2019ll play,\u201d she said, walking back toward the court.\n\n\u201cI guess we\u2019re playing guys,\u201d said David to his friends falling in behind Roxy sheepishly.\n\nThe two sides turned out to be surprisingly evenly matched, and the advantage see-sawed back and forth. When it came to the game point in the final match, David found himself lined up right across from Todd. The shorter man\u2019s muscular body ran with sweat making it appear like the skull tattooed on his chest was crying. Heather served, and the men on the other side returned it easily touching off a series of volleys that had both teams straining to make the return shot. Chris finally managed to get into position to set up an opportunity for David to spike the ball, but Todd leapt at the same time going for the block. The two almost met at the top of the net, but David\u2019s greater height and athleticism gave him the advantage, and he managed to slam the ball through Todd\u2019s out-stretched arms.\n\n\u201cGame!\u201d shouted Heather, touching off a small celebration on their side of the net.\n\nDavid ducked under and offered his hand to Todd who grudgingly took it letting the younger man pull him back to his feet.\n\n\u201cGood shot, Kid.\u201d\n\n\u201cThanks...You guys played well,\u201d offered David seeing the unhappy faces all around him.\n\n\u201cMaybe you\u2019ll give us a rematch sometime?\u201d\n\nBefore he could answer, Todd walked off with his friends in tow. Roxy joined David putting her arms around his sweaty waist.\n\n\u201cNice job, Babe, and I\u2019m not just saying that because you put my ex-husband on his ass!\u201d\n\nThe kiss he received for that effort wasn\u2019t something David was going to complain about, although the look Todd tossed his way was not a happy one.\n\nStacie joined the group as they walked back toward the pavilion.\n\n\u201cCheck this out, guys! I found out they\u2019re having a live band at the main hall tonight. We should come back, don\u2019t you think?\u201d\n\n\u201cFine, but I need a shower and a nap first,\u201d whined Chris, stripping off his shirt much to Stacie\u2019s discomfort as she tried not to stare.\n\n\u201cI think you should ask Chris to dance tonight if the opportunity presents itself,\u201d advised Roxy on their way back to camp.\n\n\u201cI don\u2019t know, Roxy. He\u2019s so intimidating sometimes, like a surfer boy sex God,\u201d she said, referring to Chris\u2019s longish blond hair and sun-tanned body.\n\n\u201cDid you just seriously call him a \u2018surfer boy sex God,\u2019\u201d said Roxy with a giggle.\n\nStacie looked embarrassed but joined in.\n\n\u201cWhat\u2019s so funny?\u201d inquired Chris, which just made the two girls laugh even more.\n\n\u201cChicks? Am I right?\u201d said Chris to David as he walked by rolling his eyes.\n\n A HOT TIME IN THE OLD FOREST -\n\nIt turned out everyone needed a nap after the rigorous game, and by the time the evening rolled around the campsite looked like a day care room after lunch with everybody snoring almost in unison. As usual, it was Stacie who woke up first and got the others on their feet and cleaned up to eat dinner before returning to the pavilion. The evening air had cooled the outside temperature sufficiently that several of the group opted to wear jackets. Stacie was in her tent, sorting through her clothes to pick a shirt when Roxy ducked her head through the tent flap.\n\n\u201cHey, General. The troops are mustered out here.\u201d\n\n\u201cThanks, I was just trying to decide what to put on under my jacket.\u201d\n\nRoxy took a look at the two shirts she was holding and then stepped further into the tent shutting the flap behind her.\n\n\u201cDon\u2019t you have anything a little more flashy?\u201d\n\n\u201cI\u2019m not sure what you mean by flashy?\u201d\n\n\u201cSomething a bit more revealing.\u201d\n\n\u201cRoxy, I don\u2019t exactly have a lot to reveal.\u201d\n\n\u201cYou have more than you think, besides it\u2019s not how big it\u2019s how obvious.\u201d\n\nThe two women quickly went through Stacie\u2019s bag with Roxy holding up a dark blue shirt with a plunging neckline.\n\n\u201cThis is the ticket. Try it on.\u201d\n\n\u201cAre you sure? That was a gift from Heather. She made me bring it, but it\u2019s not the kind of thing I would usually wear...\u201d said Stacie doubtfully.\n\n\u201cLet\u2019s just see what it looks like on you, O.K.?\u201d\n\nStacie donned the skimpier shirt, surprised at how well it fit. Though she was not big up top, she was quite perky, and what she did have was shown off nicely in the low cut top.\n\n\u201cI feel so...slutty...,\u201d she said with a giggle.\n\n\u201cYou look super cute, and I dare Chris not to notice. Come on.\u201d\n\nThey could hear the music before they ever saw the pavilion, and when they arrived, it appeared that the whole park had turned out for the event. The band was taking up one small corner of the vast hall that had a massive stone fireplace at the far end, and people were dancing and clapping along with the music. A series of tables had been set up just inside the main doors where they sold lemonade and punch by the cup. \n\nEveryone seemed to be having a good time. \n\n\u201cMay I have this dance?\u201d \n\nRoxy smiled and took David\u2019s hand as they joined the gyrating crowd on the dance floor. \n\nThe band played both rock and country music, so everyone had something to listen too. \n\nThe next hour passed in a blur of dancing and pauses to get refreshments when things got overheated. Roxy noticed that Stacie was staying well back from the dance floor just watching the others most of the time.\n\n\u201cGive me your jacket,\u201d she said, going over to the smaller woman.\n\nReluctantly, Stacie shed the outer covering.\n\nA slow song had started playing, and Chris was by the punch table laughing with Roger and George.\n\n\u201cThis is your time. Go ask him!\u201d\n\n\u201cI don\u2019t know, Roxy...\u201d\n\n\u201cThere will never be a better moment. What\u2019s the worst that could happen?\u201d\n\n\u201cI could throw up on is feet which given how nervous my stomach feels is a possibility.\u201d\n\n\u201cYou\u2019re going to be fine.\u201d\n\nNudged along, Stacie took a deep breath and walked over to where Chris stood.\n\n\u201cHey.\u201d\n\nHe looked down and grinned at his old friend.\n\n\u201cHey there, Short Stuff. What\u2019s up?\u201d\n\nStacie took another deep breath and let the words out like throwing a shot putt, all in one violent heave.\n\n\u201cI think you should dance with me, lets go,\u201d she blurted, grabbing his arm.\n\n\u201cWhat? I...Uh...O.K.,\u201d was all Chris managed to get out as she tugged him onto the floor.\n\nIt took him a second to realize it was a slow song playing, and he looked down at her not quite sure how to proceed, but finally, he put his arms around her slender upper body while she placed hers on his hips. They swayed slowly, awkwardly at first, but gaining confidence as they went.\n\n\u201cIs that a new shirt? I haven\u2019t seen you wear that before.\u201d\n\n\u201cThis? Yeah...Heather gave it to me.\u201d\n\n\u201cIt looks nice on you. Kind of sexy if you don\u2019t mind me saying so...\u201d\n\n\u201cSeriously? You like it?\u201d\n\n\u201cSure. I mean it\u2019s different for you, but I like it.\u201d\n\nStacie beamed up at the taller boy, and he returned her smile with his own.\n\n\u201cHow are you enjoying the campout?\u201d she asked.",
        "\u201cLoving every minute of it. It\u2019s going to be a shame in a couple of weeks when Roger, Pete, and George go off to school.\u201d\n\n\u201cI\u2019ll still be around, and so will David and Heather.\u201d\n\n\u201cI\u2019m glad not all my friends are abandoning me,\u201d he said, laughing.\n\n\u201cYeah...friends,\u201d echoed Stacie unhappily.\n\n\u201cHow about you? Is this trip everything you were hoping it would be?\u201d\n\n\u201cOh...It\u2019s been great...really...exciting...\u201d said Stacie distractedly.\n\n\u201cIs everything alright with you? You seem a little...I don\u2019t know...off?\u201d\n\n\u201cI\u2019m fine...It\u2019s just...\u201d\n\n\u201cJust what? Did I do something wrong? Too many short jokes?\u201d\n\n\u201cI don\u2019t mind the jokes, Chris. It\u2019s just...Do you ever...I mean have you ever...thought of me as anything more than just a friend?\u201d\n\nChris wrinkled his brow, \u201cI...Uh...Well...I never thought...\u201d\n\n\u201cNever thought what?\u201d she pressed as he struggled with his words.\n\n\u201cI guess I never thought you would be interested in me that way. I mean you\u2019re so smart and sweet, and I\u2019m just a big, dumb jock.\u201d\n\n\u201cI don\u2019t think you\u2019re dumb. I think you\u2019re brilliant and kind and funny.\u201d\n\n\u201cReally? I didn\u2019t know you held me in such high regard.\u201d\n\n\u201cWell, now you do you big dumb jock.\u201d\n\nHe laughed, making her smile even bigger.\n\n\u201cI just noticed something.\u201d \n\n\u201cWhat\u2019s that?\u201d asked Stacie, trying not to shake nervously in Chris\u2019s arms.\n\n\u201cI just noticed that you have gorgeous eyes.\u201d \n\n\u201cYou like my eyes?\u201d she said in a quiet voice, feeling a burst of warmth spread through her stomach.\n\n\u201cI don\u2019t suppose when we get back to the city you would like to go out sometime? Like get some dinner and hang out?\u201d\n\n\u201cAre you asking me on a date?\u201d\n\n\u201cYeah...Yeah. I\u2019m asking you out. What do you think?\u201d\n\n\u201cI think I would really like that, Chris.\u201d\n\nThey turned slowly with the rhythm of the music, and Chris drew Stacie in tighter to him, letting her rest her head on his muscular chest. She caught sight of Roxy and David on the edge of the dance floor and gave Roxy a thumbs up.\n\n\u201cI think I\u2019m going to cry,\u201d said Roxy.\n\n\u201cLook at you playing Cupid. It\u2019s about time, those two have been dodging each other since middle school,\u201d observed David.\n\n\u201cRomance is in the air,\u201d said Roxy.\n\nDavid looked into his girlfriend\u2019s beautiful eyes and began to lean in to taste her soft lips when a hand suddenly descended onto his shoulder.\n\n\u201cDavid, we got a problem!\u201d said George.\n\n\u201cWhat\u2019s wrong?\u201d\n\n\u201cIt\u2019s Pete. You better come on.\u201d\n\nRoxy and David followed George back through the crowd, and he led them along the far wall of the room to a door they hadn\u2019t noticed before. It opened into what turned out to be a game room with pool tables in the middle and pinball machines down one side. Pete was standing near one of the pool tables surrounded by a group of angry-looking bikers with Todd front and center.\n\n\u201cWhat\u2019s going on?\u201d asked David.\n\n\u201cWhat\u2019s going on is your buddy here just lost and owes me a hundred bucks but doesn\u2019t want to pay up!\u201d said Todd in a low, angry voice.\n\n\u201cIs that right, Pete?\u201d\n\n\u201cI think this is all a big misunderstanding. I thought we were playing a dollar a game.\u201d\n\n\u201cIt was a dollar a ball, Kid.\u201d\n\n\u201cYeah, that was the part I might have missed.\u201d\n\nDavid pulled Pete aside with Roxy joining them.\n\n\u201cI swear I don\u2019t know what happened. I was up two games, and that Todd guy couldn\u2019t play for shit, and then all of a sudden he turns into a can\u2019t miss machine.\u201d\n\n\u201cPete...Jesus. I wish I had known you were back here. I could have warned you. Todd hustles pool all the time. It\u2019s one of the few things he\u2019s still good at besides drinking. It\u2019s the way he makes beer money when he hasn\u2019t got a job,\u201d said Roxy.\n\n\u201cShit! Well, still, I promise they didn\u2019t say anything about it being a dollar a ball. At least I don\u2019t think they did, that Todd talks really fast.\u201d\n\n\u201cIs this a private conversation or can anyone jump in?\u201d said Todd joining the group.\n\n\u201cDammit, Todd! What are you doing hustling some kid? Isn\u2019t this low even for you?\u201d\n\n\u201cHey, now! No one held a gun to his head! He danced, and now he\u2019s got to pay the piper.\u201d\n\n\u201cSee the thing is I don\u2019t actually have a hundred bucks...\u201d\n\n\u201cWell...Now, that is a problem,\u201d said Todd with a hint of menace in his voice.\n\n\u201cOh! For God\u2019s sake, Todd. Let the kid off.\u201d\n\n\u201cHonestly, I would for you, Roxy, but the thing is I can\u2019t be seen to back down in front of my crew if you catch my drift.\u201d\n\nThe rather dangerous-looking men still standing by the pool table made for an intimidating sight.\n\n\u201cIf I had the money I would give it to you I swear!\u201d\n\nTodd was just about to say something, but Roxy cut him off.\n\n\u201cI\u2019ll pay for him.\u201d\n\n\u201cWhat?\u201d\n\n\u201cYou heard me. I\u2019ll get you the money.\u201d\n\n\u201cFine. But the kid stays here until you bring it back.\u201d\n\nRoxy headed for the door, but David caught her before she got there.\n\n\u201cWhere are you going?\u201d\n\n\u201cI left my wallet in the tent,\u201d she explained.\n\nDavid looked nervously back at the bikers and then at Roxy.\n\n\u201cI\u2019ll go get it. I think it would be better if you stay here with Pete. You have a better chance of keeping him safe from Todd until I get back.\u201d\n\nRoxy pursed her lips in thought but realized that David was probably right.\n\n\u201cIt\u2019s in my pack in the tent in a pocket on the right side. Hurry back...\u201d\n\n\u201cI will. George can stay with you too.\u201d\n\n\u201cGreat...I might get that rumble yet,\u201d said George with a distinct lack of enthusiasm.\n\n\u201cJust don\u2019t take too long, and we should be fine,\u201d said Roxy.\n\n*\n\nDavid moved as swiftly as he dared through the darkened woods holding his flashlight in front of him. The trail was easy to follow, but the ground could be uneven, and he didn\u2019t want to fall on his face. The campground was practically deserted with just about everyone up at the pavilion, and he was thrilled when he finally spotted the familiar tents. Just as Roxy had said, her wallet was in her pack, and he stuffed it into his jacket pocket zipping up the tent as he backed out.\n\n\u201cFancy meeting you here,\u201d said Heather from behind, startling him into dropping his flashlight.\n\nShe turned up the light on the lantern that Chris had left on the picnic table just enough to illuminate the clearing.\n\n\u201cCrap! Heather, you scared me! Where did you come from?\u201d\n\n\u201cI saw you were leaving the hall, and I followed you. I\u2019ve been hoping to get you alone all weekend so we could talk.\u201d\n\n\u201cLook, this isn\u2019t a good time, Pete sort of got himself into a mess.\u201d\n\n\u201cDo you remember when we went on that hayride at the Halloween Fair the fall after we hooked up for the first time?\u201d she asked, ignoring what he had been saying.\n\n\u201cHalloween Fair? Yeah...I remember. What about it?\u201d\n\n\u201cIt was a cool night outside, and you told me the best way to warm up on a cool night was with a kiss.\u201d\n\n\u201cDid I say that? Man, that was pretty lame. What can I say I was just a kid at the time. Anyway, I need too...\u201d\n\n\u201cI\u2019ve been thinking a lot about us lately, David. I figured if I gave you some time with Roxy, you would start to see.\u201d\n\n\u201cStart to see what?\u201d\n\n\u201cThat she wasn\u2019t right for you. I mean I get it, she\u2019s hot as heck. I can see why you would get sucked in by that, but at the end of the day, you will never have with her what you and I had. What we could still have...\u201d\n\n\u201cHeather, we\u2019ve had this conversation once already.\u201d\n\n\u201cI remember, and you said that we both had a lot to learn. Well...I\u2019ve learned, David. I can see what you want now, and I can be that for you. You never wanted the girl next door, did you? No...You wanted something more.\u201d\n\nHeather rose from the table and started walking toward David, closing the distance.\n\n\u201cHeather...What are you doing?\u201d \n\n\u201cIt\u2019s o.k. I\u2019m not angry. You just got tired. I can understand that having to look at the same boring girl day after day. I didn\u2019t keep things interesting enough for you, but I think we can both see that I\u2019ve fixed that problem.\u201d\n\nDavid froze not quite believing what he was seeing as Heather reached up and pulled the zipper down on her jacket. Apparently, she had taken the time to remove her shirt and bra, because when the zipper hit bottom, and the two halves fluttered open it was nothing but bare skin underneath.\n\nHe squinted in the low light.\n\n\u201cUm...When did you get your...Uh...you know?\u201d he said, waving at her naked chest.\n\n\u201cMy nipples pierced? Do you like them?\u201d\n\nShe reached up to lift her firm young tits in her hands the skin of her dark pink nipples bisected by shiny gold. \n\n\u201cIt\u2019s...um...Wow...different...\u201d said David struggling for words.\n\n\u201cIt excites you, doesn\u2019t it? I know you still want me, David. I\u2019ve seen the way you\u2019ve been reacting to my new look all weekend, and I\u2019m glad because I did it for you. I wanted to be the sexy woman you deserve.\u201d\n\n\u201cHeather...It wasn\u2019t...I mean you look great....but honestly...\u201d\n\n\u201cMy stylist picked this lipstick for me. She said it would make my lips look luscious with this hair color. What do you think?\u201d\n\n\u201cI think she did her job,\u201d admitted David.\n\nHeather moved right up to him seeming to melt out of the semi-darkness, her bright blue eyes flashing in the light of the lantern.\n\n\u201cIt\u2019s o.k for you to feel them. I know you want too...\u201d she said, suddenly grabbing his hand and pulling it to her chest. \n\n\u201cHoly shit,\u201d whispered David, so caught by surprise, he couldn\u2019t stop what was happening. Her breast did feel wonderful, all warm and silky soft, but with a hint of cold hardness where the metal of her piercing rubbed on his palm.\n\n\u201cI want you so bad right now, David. I swear I\u2019ve never been this wet in my whole life, and I did what you always wanted me to do. I shaved it bare just for you...\u201d she said, leaning close enough to whisper those last words in his ear.\n\n\u201cJesus...Heather...\u201d said David, his voice cracking badly.\n\nHer head moved down, and he felt her kiss his neck, her slick lips rubbing on his pulsing jugular. A hand was suddenly between his legs, and she squeezed his cock through his pants.\n\n\u201cDamn...You\u2019re so hard...I knew you wanted me. Take me right now...Fuck me, David...Fuck me hard and deep...Make me yours again,\u201d she begged.\n\nIt would be so easy. Three moves, less if he didn\u2019t care about ripping her panties, and he would be inside her again. His whole body was screaming at him to do it. Once again, to feel Heather\u2019s legs wrapped around him, that now slick, bare pussy squeezing his throbbing cock. She was so beautiful, so sexy, so ready for him. There was only one problem...she wasn\u2019t Roxy.\n\nHis hands dropped downward toward Heather\u2019s pants, and she tensed ready for him to unbutton them, rip them off her, carry her to the table. \n\nOnly his hands didn\u2019t stop at her pants. They continued down to grasp the two halves of her unzipped jacket, fitting them back to each other and carefully zipping it shut again.\n\n\u201cThis isn\u2019t going to happen, Heather. I\u2019m sorry. You will always be in my heart, always be my friend, but I don\u2019t want you...not like this...\u201d\n\nHe turned abruptly and brushed past her heading off up the trail.\n\n\u201cDavid! Wait!\u201d called Heather, who took off after him.\n\nThe tension in the room was almost palatable, and Roxy had taken to standing between Pete and the assembled bikers in case any of them got any ideas. She glanced down at her watch, wondering what was keeping David.\n\nHe should have been back by now. \n\nThe door to the room opened, and David appeared with Heather right by his side.\n\nRoxy grabbed the wallet out of David\u2019s hand and turned back to Todd, opening it and counting out the money.\n\n\u201cThere! Are we square?\u201d\n\nTodd looked at the cash in his hands and back up at his ex-wife.\n\n\u201cSure...You win, Roxy. Just like always.\u201d\n\nHe left the room with the rest of his crew following behind.\n\n\u201cCome on, Pete. I think you\u2019ve had enough billiards for tonight. How about a lemonade?\u201d offered George, pulling his friend by the arm.\n\nRoxy turned back to her boyfriend, \u201cWhat took so long? I was starting to worry.\u201d\n\n\u201cI ran into a little trouble...\u201d David started to say, but Roxy was wrinkling her forehead as she came closer to him. She reached up and wiped her fingers on his neck, looking at the shiny color that came off his skin.\n\nA color that matched the lipstick Heather was wearing.\n\n\u201cI think I can see the trouble you ran into...Son of a bitch!\u201d snapped Roxy pushing past David and heading out of the room.\n\n\u201cRoxy! Wait! Please...\u201d called David following in her wake.\n\nHis girlfriend was like a bull in a china shop, pushing past people in an effort to make the door with David trying desperately to close the distance.\n\nHe reached her just as she hit the wooden walkway out front of the pavilion managing to pull her to a halt.\n\n\u201cRoxy, if you would listen to me! I swear to you nothing happened. I mean clearly something happened, but I stopped it before it went anywhere.\u201d\n\n\u201cHow did you stop it exactly? Did you hold her face to your neck until she surrendered?\u201d\n\n\u201cIt wasn\u2019t like that...\u201d\n\n\u201cI thought I could trust you, David! After all you know about me and what I\u2019ve been through how could you...How could you do this to me!?\u201d\n\n\u201cI didn\u2019t do anything. I promise you, Roxy. Let\u2019s go back to camp and talk.\u201d\n\n\u201cYou know how much you sound like Todd right now? How many excuses I\u2019ve had to listen to in my life? I swore I\u2019d never put myself through that kind of shit again!\u201d\n\n\u201cI\u2019m not Todd. That\u2019s not fair of you to put me in the same category as him. I\u2019ve never given you one reason to doubt my feelings for you.\u201d\n\n\u201cUntil tonight!\u201d she shouted, trying to turn away, but David held tight to her arm.\n\n\u201cNo! Not even tonight! Yes, Heather came on to me back at camp, and she tried to get me to sleep with her, but I pushed her away. I didn\u2019t want her, Roxy. You\u2019re the only woman I want.\u201d\n\n\u201cWhy?\u201d\n\n\u201cWhat?\u201d\n\n\u201cWhy do you want to be with me? What about me makes you want to stay because I don\u2019t see it? I\u2019m quick to judge and filled with all this distrust and anger. Hell! Maybe you are telling the truth right now! I don\u2019t know, and a part of me doesn\u2019t care. This is the kind of crap I was staying away from...you open yourself up, and you leave your heart bare to getting broken all over again.\u201d\n\nTears were flowing freely down her face now, and David let her arm drop free.\n\n\u201cThis isn\u2019t about me, is it?\u201d\n\n\u201cI should go...I want to go home, David. You deserve to be with someone who has something more to offer you than a nice body. Someone you can start fresh with without all the crap that would weigh us down,\u201d she said in a quiet, defeated voice.\n\n\u201cYou think you have nothing to offer? Roxy, that\u2019s the biggest load of horse shit I\u2019ve ever heard!\u201d\n\nShe looked up shocked at the anger in his tone, an anger she had never heard from him before in the time they had been together.\n\n\u201cYou don\u2019t see yourself the way I do. Do you know what I see when I look at you? I see the woman who watched out for me at the plant and protected me from the other guys. I see the woman that was willing to face her fear to help me mend my broken heart and ended up being the cure for it. I see a woman that has never let her problems keep her down. Who put herself through school so she could give her daughter a good life, and worked her way up to managing her department when she was only twenty-nine. A woman that was willing to open her life up to me when she had no reason to believe I was more than a kid with a crush and gave me a chance to prove her wrong. You\u2019re brave, selfless, intelligent, and kind. I can\u2019t imagine a woman I would rather be with than you, but maybe you\u2019re right, maybe you can\u2019t see that and never will.\u201d\n\nDavid reached into his pocket, jerking his car keys out and tossing them at Roxy\u2019s feet.\n\n\u201cThere! Go! I can get a ride back with Chris, but you remember this much, I wasn\u2019t the one who quit on us!\u201d\n\nHe turned abruptly and headed up the walkway, making a sharp left and passing a sign that read \u201cHarlow Trail,\u201d his feet picking up speed as he went.\n\nRoxy watched him go with a blank expression, bending down to pick up the keys at her feet.\n\n\u201cDavid!\u201d she shouted, starting after him.\n\n\u201cI would let him go if I were you,\u201d said Heather.\n\nRoxy rounded on the smaller woman, \u201cHow long have you been standing there?\u201d\n\n\u201cLong enough. I would let him go. David doesn\u2019t lose his temper often, but it\u2019s better to let him cool off when he does. He\u2019ll be ready to talk when he gets back.\u201d\n\nHeather didn\u2019t wait for an answer, but turned and went inside the pavilion leaving Roxy alone in the dark.\n\n\u201cDammit...\u201d said Roxy.\n\n*\n\nThe trail wasn\u2019t hard to follow now that the moon was out, and David only had to use his flashlight intermittently. He practically knew this one by heart anyway, and his feet seemed to find their footing on their own without much conscious intervention. It wound around the edge of the river and eventually brought him back to the place where he and his friends had been diving that very morning. The trail continued past, and he walked on moving upward now toward a patch of high rocky ground that folks had nicknamed, \u201cLookout Point,\u201d it was as good a place as any to do some thinking and clear his head. He had fully expected to have the place to himself with most everyone down at the pavilion, so he was surprised when he rounded the bend to find a man standing at the edge smoking a cigarette.\n\n\u201cSorry...I didn\u2019t think anyone else would be up here,\u201d said David to the shadowy figure.\n\n\u201cHuh? Would you look at that! I guess great minds think alike,\u201d said Todd turning around.\n\n\u201cFuck me...\u201d thought David to himself, \u201cWhat did I do to deserve this day?\u201d\n\nThe two men regarded each other across the distance. \n\n\u201cI was looking for some privacy,\u201d said David simply, not wanting to have a drawn-out conversation with Todd. \n\nHe started to turn around.\n\n\u201cWhat\u2019s a matter? You get into it with Roxy?\u201d\n\nDavid\u2019s step faltered, and he looked back at Todd thrown by his accurate analysis of the situation.\n\nThe other man caught the look on David\u2019s face and smiled.\n\n\u201cI could have guessed. I used to try and put some distance between her and me when she was pissed, spent a fair bit of time looking for a quiet place myself.\u201d\n\n\u201cIt wasn\u2019t like that exactly. We had a disagreement, but I think I was the angry one,\u201d admitted David, not sure why he was bothering to explain things.\n\nTodd nodded, took another drag on his cigarette, and looked out at the view of the forest below.\n\n\u201cSo you came up here to clear your head? This would be a good place to do it. A man can stand here and get lost in this view. I wish the apartment Roxy and I used to live in had sported a view like this one.\u201d\n\nWhen David didn\u2019t respond, Todd reached inside his jacket and pulled out a flask offering it to him first. David shook his head, but Todd didn\u2019t seem offended by the gesture just pausing to take a drink himself shaking a little as the alcohol burned its way down his throat.\n\n\u201cShit! That\u2019s got some kick! You\u2019re probably smart to decline.\u201d\n\n\u201cI don\u2019t drink,\u201d said David.\n\n\u201cGood...It\u2019s best not to start. It can get you by the throat and never let go.\u201d\n\n\u201cIs this where I\u2019m supposed to start feeling sorry for you?\u201d\n\n\u201cOuch! You got a little Roxy in you, don\u2019t you? Ha! That\u2019s o.k. it almost makes me nostalgic to hear your sarcasm.\u201d\n\nDavid didn\u2019t know what to say to that and pushed his hands into his pockets, taking a few steps closer to the edge to get a better view of the valley.\n\n\u201cI\u2019m not looking for your pity, Kid. I\u2019ll offer you this much though, whatever her faults Roxy was the best thing that ever happened to me, and I fucked it up plain and simple.\u201d\n\n\u201cI honestly don\u2019t care about your sob story right now, Todd, no offense, but I\u2019ve got my own troubles.\u201d\n\nTodd took another drink from his flask eying the younger man.\n\n\u201cI\u2019ll just bet you do. What\u2019s wrong? Roxy forget to put milk in your cereal?\u201d\n\n\u201cIf that was supposed to be a crack about our age difference, you should try harder.\u201d\n\n\u201cCan\u2019t be easy though you just a kid and all, and her a grown woman with all her responsibilities.\u201d",
        "\u201cYou\u2019re one to talk about responsibilities, Todd. When was the last time you came by to see Emily?\u201d\n\nTodd\u2019s eyes narrowed into an angry stare, \u201cI don\u2019t need some snot-nosed kid trying to give me parenting advice!\u201d\n\n\u201cSomebody should because you\u2019re doing a shitty job!\u201d\n\n\u201cWhy you little cocksucker! What do you know about being a dad?\u201d\n\n\u201cYou don\u2019t have to be a father to tell a bad one when you lay eyes on them. If you loved Emily as much as what\u2019s in that flask you\u2019d toss it off this cliff and start acting like the father she deserves.\u201d\n\nTodd grabbed David by one arm. \n\n\u201cYou think I don\u2019t know that? If it were that easy, I would have done it a long time ago! I\u2019d still be with Roxy instead of watching her look at you the way she used to look at me.\u201d\n\nThe two of them faced each other, Todd panting and trying to control his temper.\n\n\u201cWhat now, Todd? Are you looking for a fight? The way things are going for me tonight I just might give you one!\u201d said David defiantly.\n\nTodd snorted and took a step back starting to laugh, \u201cAh Hell! I just bet you would! Roxy sure knows how to pick her men. You got some fire to go with those brains, Kid.\u201d\n\nDavid had raised his fists in expectation, but now he lowered them not sure what to make of Todd\u2019s mood swings.\n\n\u201cYou\u2019re a strange guy, Todd.\u201d\n\n\u201cFunny thing is there was a time when I wasn\u2019t much different than you.\u201d\n\n\u201cThat\u2019s hard to imagine,\u201d admitted David.\n\n\u201cI know. I can hardly remember those days myself. Why I recall...What?\u201d asked Todd seeing David make a strange face.\n\n\u201cDo you smell that?\u201d\n\n\u201cSmell what? I swear I just bathed this morning!\u201d\n\n\u201cNot you...It smells like...smoke.\u201d\n\nBoth men turned at the same time to see a cloud of white smoke rising from far down the trail behind them, and a dull glow that was brightening and spreading rapidly in their direction.\n\n\u201cUh...Oh...\u201d said Todd.\n\n\u201cWe could be in some serious trouble,\u201d agreed David.\n\n*\n\n In the pavilion the band played on, but where fun and joy had characterized events earlier things had taken a dark turn. Roxy stood leaning against one wall running her thumb across David\u2019s car keys while Stacy and Chris had come over to her trying their best to be consoling. Heather was standing off by herself near the refreshment tables looking back at Roxy with an expression that seemed a mix of disappointment and anger.\n\n\u201cHeather\u2019s right about one thing. David does tend to want space when he\u2019s upset. I\u2019m sure he\u2019ll be back and ready to talk in no time,\u201d suggested Stacie.\n\n\u201cI\u2019m not sure what to say to him,\u201d said Roxy forlornly, still looking down at the keys in her hand.\n\nMaybe it would be easier to do what she had threatened to and go? \n\n\u201cI\u2019m sure we can think of something brilliant if we put our heads together.\u201d\n\nRoxy gave her young friend a fleeting smile that was all too quickly replaced by a mask of sadness.\n\n\u201cYou\u2019re sweet to try and help, but I don\u2019t know if things even should be fixed whether they can be or not.\u201d\n\n\u201cDon\u2019t say that! You and David are so perfect for each other!\u201d\n\n\u201cYou have the heart of a poet, Stacie, but that this isn\u2019t a romance novel. Things between David and I are a lot more complicated than a Harlequin book plot.\u201d\n\nRoxy said these words looking over at Heather, and the object of her scrutiny was not lost on Stacie and Chris.\n\n\u201cHeather? Heck, Roxy, he probably got tired of hitting that long ago. I mean, he was tapping her for so long why would he want to go back to the well?\u201d\n\n\u201cChris, you\u2019re not helping,\u201d said Stacie with a grimace.\n\n\u201cRight...Uh...I think I\u2019ll go check up on Pete,\u201d said Chris making a hasty exit.\n\nStacie put a hand on Roxy\u2019s shoulder desperately searching for the words to make things better, but at a loss as to how to proceed. Her thoughts on the subject were interrupted when the band suddenly stopped playing, and the sounds of feedback from one of the microphones being adjusted caught everyone in the rooms attention.\n\n\u201cExcuse me, folks! I\u2019m sorry to interrupt the festivities, but I have some important information, and I need you all to listen to me carefully.\u201d\n\nThe hall went silent, and all eyes were now on the man behind the microphone who wore the uniform of a park ranger.\n\n\u201cWe\u2019ve had reports of fire between here and the head of Harlow Trail. It\u2019s relatively small at the moment, and we have contacted emergency fire services to try to get ahead of it, but in the interest of everyone\u2019s safety, we are ordering the park to be evacuated. The good news is that the prevailing winds are blowing away from the main section of the park including the pavilion, so there is no immediate danger, but we would ask that everyone return to your campsites and pack up. Rangers will be moving from section to section clearing them and making sure that all our guests are accounted for as you leave. Thank you for your cooperation.\u201d\n\n\u201cDid he say \u2018Harlow Trail,\u2019?\u201d questioned Roxy, \u201cThat\u2019s where I saw David going.\u201d\n\nA look of horror replaced the sadness that had covered her face, and she raced across the floor to corner the park official.\n\n\u201cSir! SIR! I need to talk with you!\u201d she shouted to make herself heard over the din of the crowd.\n\nThe ranger paused with a walkie-talkie in hand telling the man he had been speaking with to stand by.\n\n\u201cI\u2019m sorry, Miss, I\u2019m swamped...If you could just.\u201d\n\n\u201cMy boyfriend went up Harlow trail a little while ago!\u201d she blurted out.\n\n\u201cOh...I see. Well, we have search units out, and we will be calling in helicopters to lift out anyone that might be trapped on the other side of the fire.\u201d\n\n\u201cHow long?\u201d\n\n\u201cIt might be another hour before the choppers arrive,\u201d he admitted.\n\n\u201cI\u2019m going to look for him,\u201d declared Roxy, but the ranger shook his head.\n\n\u201cThe fire has already cut off the trail from the rest of the park. If he\u2019s on the other side, you\u2019d have no way to get to him. Our best course of action is to wait for the choppers to arrive.\u201d\n\n\u201cWe can\u2019t leave without our friend!\u201d said Stacie from behind Roxy\u2019s broad back.\n\n\u201cI sympathize, but at the moment you should be concerned with your safety and leave your friend to us. I advise that you return to your campsite.\u201d\n\n\u201cStacie\u2019s right...We\u2019re not leaving without David,\u201d said Roxy with a tone of finality in her voice.\n\n\u201cLook, I don\u2019t have time to argue with you. You can remain at the pavilion for the moment, but you\u2019re not to venture out on your own. If the wind changes direction, things could get dangerous quickly.\u201d\n\nThe ranger moved off as the rest of the group arrived crowding around Stacie and Roxy, only Heather kept her distance.\n\n\u201cWhat did he say?\u201d asked Chris.\n\n\u201cWe told him about David, but there\u2019s not much they can do until the search and rescue helicopters get here,\u201d explained Roxy.\n\n\u201cWe should go find him ourselves,\u201d said George, and Pete and Roger seconded him.\n\n\u201cNo one is going out there! The ranger is right. It\u2019s too dangerous to go stumbling around in the dark with a forest fire burning nearby. I\u2019m not leaving, but I think the rest of you should go strike camp and get ready to evacuate.\u201d\n\n\u201cIf we\u2019re not leaving David, we\u2019re sure as Hell not leaving you!\u201d said Stacie defiantly.\n\nThe others echoed the sentiment, and Roxy couldn\u2019t help but be touched by their loyalty to their friend, and to her, a woman they had known only a short time.\n\n\u201cO.K., We\u2019ll stay together for now, but if things turn for the worse, you guys are all going.\u201d\n\n\u201cWhat next?\u201d asked Roger.\n\n\u201cNext...we wait,\u201d said Roxy, knowing that it would be a lot harder than it sounded.\n\nDavid and Todd worked their way back down the trail together hoping to find a way around the fire, but it quickly became evident that the flames had already cut the main path back to the lower park. They tried a handful of side trails but were driven back at every turn by the smoke and heat. \n\n\u201cThis sucks,\u201d griped Todd summing up their situation very succinctly.\n\nHe stopped by the side of the trail to take another drink.\n\n\u201cThat isn\u2019t helping,\u201d said David.\n\n\u201cIt can\u2019t hurt.\u201d\n\n\u201cWe\u2019re cut off...\u201d admitted David.\n\n\u201cNo shit, Sherlock! Unless we both figure out how to sprout wings, we are seriously fucked.\u201d\n\n\u201cYou know, Todd, you\u2019re a fountain of optimism. Why don\u2019t you help me think of a way out instead of drinking yourself into a stupor!\u201d\n\n\u201cWe\u2019ve tried every trail! The best we can do is backtrack to the lookout and hope that a rescue party shows up before we roast.\u201d\n\nDavid stood upright and promptly started to cough. The smoke was blowing thicker now in their direction. All to their front flames were beginning to shoot up lighting the night with a macabre glow. David imagined it was going to take a Hell of a lot of water to put this fire out, and wondered if there was any chance of rain.\n\n\u201cI have an idea,\u201d blurted David.\n\n\u201cWhat?\u201d\n\n\u201cJust follow me and try to stay low.\u201d\n\nThey moved off again this time running parallel to the fire, sometimes bulling through the underbrush when the trail didn\u2019t go where David wanted it to or working their way around clumps of burning trees. They were both wheezing and had picked up more than a few scrapes and scratches by the time David called a halt to their march. The fire was bright enough to light their path now, and David put his flashlight away. The trees had parted in front of them, and the two men gazed on the rocky stretch where David had been diving just a short time ago.\n\n\u201cThis is a \u2018dead end\u2019! Why did you bring us here? We would have been better off on the high ground. Helicopters can\u2019t get down through these trees!\u201d groused Todd.\n\n\u201cWe aren\u2019t waiting for rescue,\u201d said David, who began removing his hiking boots and stripping off his jacket.\n\n\u201cWhat the Hell are you doing?\u201d\n\n\u201cI have a plan, Todd, but you\u2019re not going to like it.\u201d\n\n*\n\nThe sirens from emergency vehicles arriving began adding to the controlled chaos of the evacuation. Roxy had felt the need to get away from everyone else and had gone to stand out on the back porch of the pavilion. From her vantage point, she could see the river as it followed its course past the lodge and down toward the park entrance where it eventually turned to empty into Sequoia Lake a few miles away. A group of emergency personnel were setting up a command tent near the boat dock, and she watched them at their work, wondering if they were doing anything about her missing boyfriend. \n\n\u201cGeorge says you can see the smoke billowing up in the woods from the front of the pavilion now.\u201d\n\nRoxy didn\u2019t bother to turn at the sound of Heather\u2019s voice from behind her.\n\n\u201cWe\u2019ll be alright as long as the wind is blowing away from us,\u201d said Roxy.\n\n\u201cI wasn\u2019t thinking about us, and I\u2019m sure you\u2019re not either.\u201d\n\nRoxy looked down at the keys in her hand. She hadn\u2019t been able to bring herself to shove them in a pocket. Instead, she kept squeezing and rubbing them like worry beads thinking that in some way they brought her closer to David. It ate at her that their last words to each other had been angry ones.\n\n\u201cI wish we hadn\u2019t been fighting when he walked off. I hate to think our last words to each other would be those,\u201d admitted Roxy out loud.\n\n\u201cI\u2019ve never known David to hold a grudge. He was probably over it by the time he hit the head of the trail,\u201d said Heather as she stepped closer.\n\n\u201cAre you trying to make me feel better?\u201d\n\nHeather laughed, \u201cStrange coming from me, right?\u201d\n\n\u201cHow is everyone else doing?\u201d\n\n\u201cOh, Stacie has them organized and helping the rangers pass out water bottles to the firemen. That girl is going to make a great Red Cross worker one day.\u201d\n\n\u201cAt least it gives them something to do to take their minds off things.\u201d\n\n\u201cYou mean off, David.\u201d\n\nRoxy looked out at the woods at the mention of his name, and tears began to form at the corners of her eyes. Heather looked at her for several heartbeats, a slow look of sympathy coming into her eyes. \n\n\u201cYou love him.\u201d\n\nShe didn\u2019t answer, but given the stricken look on her face, she didn\u2019t need too.\n\n\u201cHave you told him?\u201d\n\n\u201cWe only just met, and our relationship has a lot of obstacles to it. I guess I just wasn\u2019t sure it was the right time. Hell, I\u2019m not sure how strongly David feels about me.\u201d\n\n\u201cBased on what he said to you in front of the pavilion, I think it\u2019s safe to say he feels pretty strongly.\u201d\n\n\u201cMaybe so...\u201d she said, her voice drifting off as she caught sight of the fires glow now becoming visible even from where she stood.\n\n\u201cYou should tell him, Roxy. When you see him again, you should tell him. Remember what Stacie said when she read your cards, \u2018You have to believe in the relationship for it to work.\u2019\u201d\n\n\u201cThat Tarot stuff is a lot of nonsense.\u201d\n\n\u201cAre you dismissing it because you think it\u2019s a load of crap, or because it might be true and that makes you even more uncomfortable?\u201d\n\nRoxy struggled to answer, but Heather continued anyway.\n\n\u201cDon\u2019t wait to tell him how you feel. You don\u2019t want that regret. I may be a kid to you, but I\u2019ve experienced plenty of that kind of pain lately, and I know how bad it sucks.\u201d\n\n\u201cSince when are you the big champion of my relationship with David?\u201d \n\nHeather looked away, guilt painting itself on her features.\n\n\u201cI haven\u2019t been before this, but you should know that David was telling you the truth earlier. What happened at the campsite was all me. I threw myself at him, practically stripped naked in front of him and begged him to take me back, but he pushed me away. David doesn\u2019t want me anymore. He wants you...The way he used to look at me...The way I miss so much...that\u2019s how he looks at you. I can get as jealous as I want, but that will never change. I see that now.\u201d\n\n\u201cThanks for being honest with me,\u201d said Roxy as tears now streaked Heather\u2019s face as well.\n\nThe sounds of more vehicles arriving momentarily drowned out further attempts at conversation, but the noise soon faded.\n\n\u201cDavid is going to be alright. He\u2019s going to make it back to us,\u201d said Heather, her voice suddenly steady and resolute.\n\n\u201cHow can you be so sure?\u201d\n\nTo Roxy\u2019s surprise, the younger woman reached over and took her hand, squeezing it tight in a comforting gesture.\n\n\u201cBecause I can\u2019t imagine living in a world without David Cross in it, and I wouldn\u2019t want too.\u201d\n\nThey turned back together facing the rising glow, both praying for the safe return of the man they loved.\n\n*\n\n\u201cYou want me to what?\u201d shouted Todd.\n\n\u201cJump! We\u2019re going to get a good running start and jump to the river. I\u2019ve done this plenty of times, and it\u2019s relatively safe. Once we\u2019re in the water, the current will carry us downstream right to the main camp area. The fire can\u2019t get to us on the water, so we should be fine.\u201d\n\nTodd stepped closer to the edge, but couldn\u2019t see much below.\n\n\u201cYou ever do this in the dark?\u201d\n\n\u201cNo,\u201d conceded David, \u201cbut it shouldn\u2019t make much difference.\u201d\n\n\u201cI don\u2019t know, Kid. I think we should take our chances waiting for that rescue.\u201d\n\n\u201cA rescue we don\u2019t even know for sure is coming? I\u2019d rather make my own fate, thank you very much. Come on. You\u2019re the macho biker. What\u2019s a little jump of twenty-five or so feet to a guy that rides a Harley?\u201d said David, throwing in the last part in an attempt at levity.\n\n\u201cRight...\u201d said Todd still not sounding convinced.\n\n\u201cI\u2019ll go first if it makes you feel better,\u201d offered David.\n\nTodd didn\u2019t answer but stopped to pull out his flask instead. David angrily knocked it from his hand, and the two squared off again just as they had at the lookout.\n\n\u201cWhat the Hell is wrong with you? If we stay here much longer we\u2019re going to die anyway!\u201d\n\nTodd mumbled something that David couldn\u2019t hear.\n\n\u201cWhat?\u201d\n\nAgain Todd mumbled, though slightly louder, but over the crackling of the fire, David missed his words.\n\n\u201cYou\u2019re going to have to speak up!\u201d\n\n\u201cI said I can\u2019t fucking swim! O.K. Hotshot! I can\u2019t fucking swim, and if I jump off that cliff I\u2019ll be just as screwed!\u201d\n\n\u201cYou and Roxy both? What\u2019s the deal with you guys? I know we live in a desert, but come on!\u201d\n\nTodd kicked the ground in disgust, \u201cI figured I\u2019d get around to it eventually...\u201d\n\n\u201cLook...We\u2019re not going to quit and sit here, and I\u2019m not going to leave you. You can do this, Todd. The current is going to carry you down around the next bend, and you\u2019ll hit a sand bar there. I\u2019ll go first and pull you out of the water. Once we\u2019re on the other side, I can help you stay afloat as we go downriver. I\u2019m a great swimmer, and lifeguard trained.\u201d\n\n\u201cAh...Shit! O.K., but if I drowned it\u2019s on you!\u201d\n\nDavid nodded, thinking Todd drowning might not be that much of a loss, but then felt bad for wishing such a fate on Emily\u2019s father.\n\n\u201cYou ready?\u201d\n\nTodd kicked off his boots, lamenting the loss, and picked up his flask from the ground shoving it into his back pocket.\n\n\u201cWell?\u201d\n\n\u201cYeah, yeah. I\u2019m ready God Dammit! Feel like fucking Butch and Sundance...\u201d\n\n\u201cI go first. You count to twenty and follow.\u201d\n\nTodd nodded, looking sick, but David quickly tuned him out, focusing on what he needed to do. \n\nHe took off, legs pumping, the dark edge of the cliffside intermittently lit by the flickering light from the flames behind him. Then he was airborne, arms pin-wheeling as he plunged downward toward the barely visible surface of the water below. The impact was jarring and cold, almost stealing his breath away. He broke the surface, the current sweeping him forward precisely as he had said it would. In the dark, it was challenging to tell distance, but the water shallowed up before the sand bar, so he knew he was getting close when he felt his toes dragging. Soon, the depth had dropped even more, and he was able to stand and walk up onto the sandy obstruction that blocked two-thirds of the river at this point. Here, away from the cliffs, the fire was raging on both sides of the river, and he could feel the heat all over his body. Smoke drifted across the water, and he stayed low fighting back the need to cough as his eyes searched the blackness from back the way he had come looking for Todd. \n\nIt didn\u2019t take long to locate him. The sounds of the fire were almost lost in the cacophony of loud curses that were coming out of Todd\u2019s mouth as the older man fought to pull himself upright. \n\n\u201cSon of a bitch! I am never fucking doing that again!\u201d wailed Todd.\n\n\u201cAre you o.k.?\u201d asked David.\n\n\u201cI think so, but I lost my flask!\u201d\n\n\u201cI honestly don\u2019t see that as a loss.\u201d\n\n\u201cIt\u2019s hotter than Hell down here!\u201d\n\n\u201cI know. We need to keep moving. It gets deep past this point, but I\u2019m going to help you stay afloat. Let me do the work, and stay limp in my hold.\u201d\n\n\u201cYou\u2019re the boss,\u201d conceded Todd eying the water unhappily.\n\nDavid stepped into the current first, holding himself long enough to pull Todd in with him, and then they were swept swiftly along. Almost immediately, Todd began to flail around making things difficult on David.\n\n\u201cI told you to hold still, dammit! I\u2019ve got you!\u201d yelled David into Todd\u2019s ear.\n\nThankfully, Todd\u2019s struggles ceased for the most part, and he was able to keep one arm around his girlfriend\u2019s Ex while using the other to pull them along a bit faster. The current was getting stronger, picking up speed and that helped because the further they went, the harder it was on David to keep them both up in the water. His muscles began to tire, and he longed to swim to the bank for a break, but this was hardly an option with the woods on both sides in flames. \n\n\u201cCome on...\u201d thought David, looking for the point where they would be past the fire, but so far it still stretched out before them, a liquid road lit by flaming trees.\n\n\u201cAre we there yet?\u201d moaned Todd who was facing backward in David\u2019s grip and couldn\u2019t see.\n\n\u201cWhy, you gotta pee? Feel free...\u201d\n\n\u201cVery funny, Smartass! I can see you why you and Roxy get along she loves that kind of humor.\u201d\n\nDavid started to retort when he saw that the flames were getting smaller and less pronounced among the trees, and in the distance, only darkness prevailed.",
        "\u201cI think we\u2019re coming to the end of it! We should be able to start angling toward the shore.\u201d\n\n\u201cThank God!\u201d shouted Todd.\n\nThe old pine tree had probably stood next to that river bank for the better part of two hundred years. It towered over its brethren like a saintly old grandfather watching over his kin. The flames that lit it from roots to boughs lent the trees final moments the aspect of a Viking funeral. The old trunk gave way, and the tree began to tip over, falling inexorably toward the river below. \n\n\u201cWe\u2019re almost home free, Todd,\u201d cried David before the snapping sound of wood breaking drew his gaze to the far bank, and the sight of a blazing tree falling right into the path where the current was pushing he and Todd. \n\nThere was no time to angle for shore, or even shout a warning to the man under his arm before it was upon them.\n\n*\n\n\u201cAnyone wish we had brought the marshmallows with us?\u201d \n\n\u201cJesus! Pete!\u201d \n\n\u201cSorry, when I get nervous I like to joke.\u201d\n\n\u201cI don\u2019t think this is a time to be joking, Pete,\u201d said Chris beside him.\n\n\u201cWhen Chris Michaels becomes the voice of reason we are fucked,\u201d said George from where he sat on the steps at the back of the pavilion.\n\n\u201cThanks,\u201d said Chris wryly.\n\n\u201cDon\u2019t mention it.\u201d\n\nThe whole group was lounging trying to stay out of the way of the emergency personnel while awaiting news of their friend. The helicopters had finally arrived and were sweeping the forest with searchlights, but so far there had been nothing to report.\n\n\u201cHere comes Roxy,\u201d said Heather standing up.\n\n\u201cAnything?\u201d asked Stacie as soon as she was in earshot.\n\nRoxy shook her head, and the group seemed to deflate.\n\n\u201cHe\u2019ll be fine. David is meant for greater things than to die in some stupid fire,\u201d said Roger.\n\nThere was general agreement all-around at this, but Roxy could only shake her head again. She had been around long enough to know that great destinies or goodness had nothing to do with death when it came calling, and even the finest among us could be struck down by the whims of fate. \n\n\u201cShouldn\u2019t someone call his parents?\u201d suggested Pete.\n\n\u201cYes...but not just yet. Let\u2019s give them a little more time,\u201d said Roxy, looking back the way she had come at the bustling command tent.\n\nHeather came over and put a hand on her shoulder. \n\n\u201cThey don\u2019t know about you and David do they?\u201d\n\n\u201cNo...We were keeping things quiet until the summer was over.\u201d\n\n\u201cI can call them for you if you want?\u201d\n\n\u201cThanks, Heather, but let\u2019s hope we won\u2019t need to call them at all. I\u2019m sure that...\u201d\n\nWhatever Roxy was about to say was cut off by the sounds of shouting from men gathered around the dock near the command tent.\n\n\u201cWe got a guy in the water over here!\u201d yelled a ranger.\n\nThe entire group broke into a run toward the cry but were brought up short by another ranger standing at the edge of the dock.\n\n\u201cHold on there folks! Let the emergency crew do its job!\u201d\n\nRoxy was barely able to hold herself in check standing just behind the rangers outstretched arms with the rest of David\u2019s friends gathered around her like a mother duck with her brood.\n\nFrom out of the darkness, two men came escorting a third man between them. The man with them was wet, his hair singed and clothing ripped and torn. He was walking with a pronounced limp leaning on the other men, but when he spotted Roxy, he moved toward her shaking them off. The lights from the command tent illuminated his face.\n\n\u201cTodd...\u201d breathed Roxy.\n\nThe face of her ex-husband was bruised, and blood was smeared across his forehead where a small cut had opened. He came closer, stopping just a few feet away.\n\n\u201cWhat happened to you?\u201d\n\n\u201cI was...out walking...taking in the view. The fire kind of spoiled it.\u201d\n\n\u201cAre you o.k.? How did you end up in the river?\u201d\n\n\u201cThat\u2019s the crazy thing. Your boyfriend showed up, and he and I were having a chat when the fire came...\u201d\n\n\u201cDavid! You saw David!\u201d shouted Roxy lurching forward and shoving the ranger aside, \u201cWhere is he, Todd?\u201d\n\nTodd was clearly uncomfortable, not able to meet Roxy\u2019s face as he spoke to the ground.\n\n\u201cThat\u2019s the thing...David came up with the idea to use the river to get past the fire. I can\u2019t swim as you know, but he kept me up in the water. We were almost out of it...and then...there was this tree. It toppled right down on us...it...it all happened so fast. I\u2019m sorry, Roxy.\u201d\n\nHe finally lifted his face the pain of his story written in his eyes.\n\n\u201cNo...NO! Don\u2019t lie to me, Todd. That\u2019s all you ever do...lie...LIE...LIE! WHERE IS DAVID?\u201d she screamed, starting to pound on his arms before the paramedics rushed forward to push her away.\n\n\u201cI\u2019m sorry, Roxy. I wish it had been me...It should have been me...He saved my life, but it should have been me...\u201d cried Todd.\n\nRoxy staggered back the enormity of it finally landing on her.\n\nDavid was gone. She had lost him.\n\nThe tears she had been holding back came like a flood with more than enough water to have quenched a dozen raging fires. She wanted to yell or hit something, but nothing presented itself. Before she could come up with an alternative, she was surrounded by David\u2019s friends all of them trying to hug her at the same time while they vented their own fury at the loss of their friend. Stacie was closest, sobbing into Roxy\u2019s chest, and Roxy clung to the small woman running a hand through her tangled hair.\n\n\u201cI\u2019m so sorry, Roxy,\u201d wailed Stacie.\n\n\u201cIt\u2019s going to be o.k.,\u201d said Roxy trying to make herself believe it and failing.\n\n\u201cGod Damn! Fucking Fire!\u201d sobbed Chris standing a little apart from the others and looking back at the flames licking the sky in the distance.\n\nHeather pulled away and went to comfort Chris, wrapping him in a hug. \n\n\u201cI don\u2019t want him to be gone...\u201d whispered Chris to her and she pulled him tighter, crying too hard to answer.\n\n\u201cI\u2019m sorry folks, but I have to ask you to clear this area, please...\u201d said one of the rangers softly, clearly feeling for them but required to do his job.\n\nSlowly, they turned away from the dock and began to trudge back the way they had come.\n\n\u201cSomeone get a light over here! I think we got another one in the water!\u201d came a loud voice from the dock.\n\nEveryone froze in place, and time seemed to come to a standstill as men rushed past the small group of friends and out onto the dock. A powerful light was switched on, and in the glare they could barely make out men moving at the end of the long wooden structure. It seemed like an eternity, and then a small knot of people was walking back toward them, leading someone in their midst. When the rescue workers reached the shoreline the glare fell away, and David\u2019s smiling face emerged.\n\n\u201cOh! My! GOD!\u201d shouted Chris, running full tilt back toward the dock, and scooping his friend up in a hug, \u201cI thought you were fucking dead, you asshole!\u201d\n\n\u201cI\u2019m not dead, Pal, but I would feel a lot better if you put me down,\u201d replied David.\n\nHis friends gathered around, reaching out to touch him one at a time as if refusing to believe he was real until all their senses had confirmed it. \n\n\u201cHey! You tried to drown me!\u201d shouted Todd from where he sat in a folding chair, being taken care of by a paramedic.\n\n\u201cIf I hadn\u2019t dived down you and I would both be dead. I tried to tell you to hold your breath, but there wasn\u2019t time,\u201d shouted David back.\n\nTodd shook his head but looked relieved that his savior had survived after all.\n\nStacie managed to worm her way to the front and squeezed David so tight he thought he would bust.\n\n\u201cEasy there, Mighty Mite! If you crack me open, you\u2019re not going to find candy inside!\u201d said David patting her on the head.\n\n\u201cYou scared the crap out of us!\u201d she admonished him, still refusing to let him go.\n\nDavid was finally able to peel Stacie off him just in time to have Heather take her place. If her hug was slightly less fierce, it was only because she took pity on him and didn\u2019t want to finish what Stacie had started. She reached up to touch his face and then chanced a quick kiss on his lips, pulling back with a smile.\n\n\u201cThank you for not dying. I don\u2019t think I would have handled that very well.\u201d\n\n\u201cI\u2019m kind of glad I didn\u2019t die myself.\u201d\n\nThere were more hugs and pats on the back, so much so that David felt like he was back at graduation until the group cleared off at last, and he was left with just his girlfriend who had waited patiently for the fervor to die down. \n\nRoxy came forward very slowly, taking measured steps the whole way until she was looking David in the face, close enough to feel his breath on her cheeks. The night wasn\u2019t particularly cold with the fire and all, but she began to shake almost like she was caught in an Arctic wind. \n\n\u201cI thought I lost you...\u201d she said quietly.\n\n\u201cNo chance of that, Roxy. I was always going to come back to you.\u201d\n\n\u201cAre you hurt?\u201d\n\n\u201cA scratch or two, some bruises, mostly from Todd smacking me when we were underwater.\u201d\n\nThey stood still, staring at each other, and Roxy began to cry anew with tears flowing down her cheeks.\n\n\u201cYou can hug me if you want,\u201d said David trying to break the tension.\n\n\u201cI\u2019m afraid to.\u201d\n\n\u201cWhy?\u201d \n\n\u201cI\u2019m afraid if I start I\u2019ll never let go,\u201d she whispered.\n\nHe slipped his arms around her waist and pulled her to him. The minute her head reached his shoulder, she began to sob so hard it almost scared him, and he squeezed her tighter trying to calm her shaking body.\n\n\u201cHey, everything is fine. I\u2019m right here...\u201d he soothed, stroking her hair.\n\n\u201cDon\u2019t you ever do that to me again! My heart couldn\u2019t take it.\u201d\n\n\u201cNever almost burn up in a forest fire? I think I can manage not to do that.\u201d\n\nShe leaned back and smacked him on the chest playfully, finally finding a small laugh amid her relief.\n\nThey looked at each other again, her face red and shining with the tracks of her tears.\n\nRoxy looped her arms around his neck and pulled his lips to hers. The kiss lingered as she drank in the warmth of him, the firmness and strength she had come to admire so much in the past months. When they parted, she held him close still, so that their mouths hovered near to each other, so close that when she spoke her words seemed to vibrate against his lips. \n\n\u201cI love you, David.\u201d\n\nHe brushed his lips back against hers. A brief, soul felt kiss.\n\n\u201cI love you, too, Roxy.\u201d\n\n MAKE A WISH -\n\nThe venue might not have been Roxy\u2019s first choice, but Emily had insisted that it was the only decent place to have a birthday party which is how Roxy found herself celebrating her thirtieth at \u201cMr. Smiley\u2019s Fun Time Pizzeria.\u201d\n\nThe guest of honor was sitting at the head of a long table watching her daughter standing next to Chris and Stacie. The former was holding a basketball in his hands facing a machine that gave out tickets for every shot you made.\n\n\u201cTen more and that giraffe is in the bag!\u201d shouted Emily raising her fists.\n\nChris laughed, bouncing the ball off the ground a couple of times while sighting his target.\n\n\u201cYou got this right, Babe?\u201d asked Stacie.\n\n\u201cDo you doubt my basketball prowess?\u201d questioned Chris with a raised eyebrow.\n\n\u201cI have all the faith in the world in you,\u201d she said, trying to sound serious but falling into a giggle.\n\n\u201cPerhaps I could use some inspiration,\u201d said Chris, and before she could ask him what form that might take, he had leaned over and planted a kiss on her sweet, red lips.\n\nStacie blushed but didn\u2019t turn away, throwing her arms around the neck of her much taller boyfriend and returning his affection.\n\n\u201cEwwww...Why would you want a boy kissing you?\u201d asked Emily making a face.\n\n\u201cThere may come a day when you don\u2019t think that is such a bad thing, Sweetie,\u201d replied Stacie.\n\n\u201cI\u2019d rather kiss a toad,\u201d said Emily.\n\nThis got all three of them laughing before Chris finally turned and buried ten shots in a row guaranteeing his young friend her choice of prizes.\n\n\u201cHow goes the quest for low quality imported stuffed animals?\u201d asked David as he returned from the restroom, and plopped down in the chair next to his girlfriend.\n\n\u201cSadly, they won. Which means I have to find room in my apartment for more junk.\u201d\n\n\u201cAt least Emily is happy.\u201d\n\n\u201cI suppose that is the important part,\u201d admitted Roxy.\n\nDavid reached over and placed a small, ornately wrapped box in front of her.\n\n\u201cWhat\u2019s this?\u201d\n\n\u201cWhat does it look like? It\u2019s a birthday present! The last time I checked, you were the birthday girl.\u201d\n\n\u201cI told you that you needed to be saving your money for college not pissing it away on me.\u201d\n\n\u201cI\u2019ve been putting most of my salary this summer away to help cover my school expenses, but I did manage to put aside some for this special occasion. Open it.\u201d\n\nRoxy tried to look stern but ended up tearing into the gift like a kid on Christmas morning tossing the paper negligently aside before pushing open the lid. Inside the box, nestled in its velvet-lined interior rested a beautiful gold bracelet, plain and simple, but very elegant.\n\n\u201cI figured you weren\u2019t the flashy type,\u201d said David.\n\nHe had worried after buying it that he should have gotten one encrusted with some jewels, or adorned with gold and silver flowers, but ultimately he had settled on this straightforward piece as more befitting his girlfriend. \n\nDavid could tell by her face he had guessed right.\n\n\u201cIt\u2019s gorgeous, David. Thank you.\u201d\n\nShe held out her wrist so that he could put in on her. When she raised her arm, the gold caught the light in the room perfectly, shining like a miniature sun.\n\n\u201cThis is the nicest thing anyone ever gave me. I love it.\u201d\n\nThey traded a quick kiss, so as not to embarrass all the family\u2019s sitting in the party area around them.\n\n\u201cDoes this mean we\u2019re going steady?\u201d laughed Roxy.\n\nDavid took her hand and laughed as well, but his words had an underlying seriousness.\n\n\u201cI don\u2019t think we\u2019re quite at the ring on the finger stage, but I hope you would see this as a step forward.\u201d\n\nHer face softened into an almost bashful look that wouldn\u2019t have been out of place on a girl at her first prom.\n\n\u201cAre you trying to get serious on me, David?\u201d\n\n\u201cI\u2019m just trying to say that I\u2019m not planning on seeing anyone else while we\u2019re together.\u201d\n\n\u201cSo we\u2019re exclusive now, Huh? Does that mean I get to beat up any cute college girls that try to flirt with my boyfriend?\u201d\n\n\u201cWhy don\u2019t you leave that to me? I can keep an eye on David for you,\u201d said Heather taking a seat across from the smiling couple.\n\nThis would have been more of a threat than a promise of help at one time, but the two women had reached an understanding since the fire. \n\nHeather was well aware of where she stood in David\u2019s life, and she had come to accept her role.\n\n\u201cSee. I have eyes everywhere!\u201d teased Roxy.\n\nDavid looked up as if pleading to the Heaven\u2019s for help, but quickly joined his friends in their laughter.\n\n\u201cHey! We got a giraffe! Who wants to try Skee-Ball for that stuffed donkey?\u201d asked Chris, loudly returning to the table with Stacie and Emily by his side.\n\n\u201cWhat a great idea!\u201d yelled Emily.\n\nIt was Roxy\u2019s turn to look to the Heavens.\n\n*\n\nAs silly as the venue might have been, Roxy had to admit it had been the most fun she had enjoyed at a birthday party since she was a kid. David and his friends had been very sweet to both her and Emily, making sure that her young daughter had a good time that more than matched her mothers. The girl in question was sleeping soundly now, worn down and crashed out among a small jungle of stuffed animals.\n\n\u201cIs the little princess sleeping?\u201d asked David when she returned to the room.\n\n\u201cShe is indeed, and now I have one last birthday present I want to open.\u201d\n\n\u201cOh? Did your family send you something?\u201d asked David puzzled.\n\n\u201cNo...It\u2019s kind of a present I got for myself. You stay here, and I\u2019ll bring it.\u201d\n\nRoxy vanished from the room, and David sat patiently on the couch, awaiting her return. He was leafing through a magazine when the living room light went out, leaving him in the semi-darkness with just the hallway light for illumination.\n\n\u201cHey! I was trying to read,\u201d he said, looking up.\n\n\u201cWouldn\u2019t you rather pay attention to my present?\u201d\n\nRoxy was standing at the edge of the light in the skimpiest babydoll nightie David had ever seen. The sheer fabric barely covered her breasts, and it seemed useless in that regard anyway since you could see right through it. The top split just above her belly leaving her flat stomach bare down to her lower half which was largely exposed behind a very thin, lacy, black thong.\n\n\u201cHonestly, Sweetie. That looks like more of a present for me than you,\u201d said David thickly, not able to tear his eyes from Roxy\u2019s sexy body.\n\n\u201cI think of it as a gift that both of us can enjoy.\u201d\n\nShe waggled a finger at him, and David swallowed and stood up from the couch, making his way over to his girlfriend, finding it harder and harder to walk as his cock rapidly swelled in his shorts.\n\nAs soon as he reached her, Roxy didn\u2019t hesitate to pull him to her and cover his mouth in a hot, hungry, French kiss swishing her tongue in quick circles around and around. They both began to groan and breath more sharply falling back against the wall. David reveled in the feel of Roxy\u2019s creamy, full lips sliding slickly with a fresh coat of lipstick all over his making him shiver with anticipation. He slid his hands down to cup her magnificent, tight ass giving it a good squeeze while she groaned into his mouth. \n\n\u201cI think we need to take this to the bedroom,\u201d she panted, grabbing David\u2019s hands and yanking him in that direction.\n\nThey crashed into the bedroom door that swung back loudly, and only a diving save by David kept it from making a noise that might have awoken Emily. \n\nRoxy backed toward the bed, a wicked smile on her face, and David followed shutting the door behind them.\n\n\u201cThe birthday girl wants another gift,\u201d she said in a sultry whisper.\n\n\u201cWhat would that be?\u201d asked David.\n\n\u201cYour tongue in my pussy.\u201d\n\n\u201cI think that could be arranged.\u201d\n\nRoxy lay back on the bed spreading her legs. David stripped off his t-shirt and quickly removed his shorts, leaving them on the floor. His boxers were stretched in front by the enormous erection he was sporting while he moved down between his girlfriend\u2019s legs, slipping her thong to the side. The pink lips of her labia were already swollen and pulling back from the entrance to her vagina where the glistening flesh inside her seemed to beckon David\u2019s tongue. He moved forward, gently kissing the top of her hairy Venus mound before letting his tongue trace a line across her wet slit. Roxy arched her back slightly moaning into the dark.\n\n\u201cOh! David! That\u2019s what I need...Give my pussy a nice, deep, French kiss...\u201d\n\nDavid gave a soft chuckle before he did as she asked and slipped his tongue inside her. \n\nRoxy gasped and grabbed at the bed covers.\n\n\u201cAh! God! Baby! You have no idea how bad I want you right now!\u201d \n\n\u201cI think I have a pretty good idea,\u201d thought David.\n\nHe had never seen his girlfriend so wet, her vagina soaking with juice that quickly covered his face and seemed to pour out even more as he licked her pussy all over. In no time, Roxy was squirming all over the bed, unable to hold still while he ran his tongue around her clit and sucked her pussy lips into his mouth to nibble on. \n\n\u201cAh, fuck...FUCK! FUCK! David! God Damn! You have such a magic tongue! FUCK! You eat my pussy so good! Ah! Shit! I need to suck your cock! Please let me suck your cock, David!\u201d\n\nDavid wasn\u2019t one to leave a woman wanting, and he quickly divested himself of his underwear joining Roxy on the bed in a \u201c69\u201d position. She swiftly guided his cock into her mouth, and he groaned himself, nearly matching her enthusiasm. Her hands were on his hips pulling at him, making him push his cock into her mouth while he kept performing his oral gymnastics on her cunt. The sensation of fucking her warm, wet mouth while sucking on her clit was a huge turn on, and it took all his willpower not to cum right down her throat.",
        "\u201cUmmmmm...David...I can\u2019t suck cock like this while you eat my pussy! It\u2019s going to make me cum!\u201d\n\nHe couldn\u2019t bring himself to stop despite her warning and he plunged back into her with his tongue licking even more frantically, while he shoved his cock deeper. Roxy lasted another few thrusts, and then her pussy erupted into one hard spasm after another covering David\u2019s face in her cream. Her cries were stifled by his thick, hairy man\u2019s cock shoved down her throat, but he could feel her screams vibrating through it. \n\nWhen she finally released him, she was fighting to catch her breath.\n\n\u201cSweet...Jesus...David...You always make me cum like a wildcat.\u201d\n\nHe had rolled off of her, and was laying on his back now, his fat prick standing up off his virile young body like an ivory tower. Roxy slipped her nightie off over her head and straddled her boyfriend, letting his cock rub on her thong while she leaned over to dangle her huge tits in his face. David took the hint, and took hold of her love mounds kissing the sweet, bumpy skin of her areolas, feeling them grow tight forcing her nipples outward for him to suck on. \n\n\u201cDamn...Roxy, I love to suck your tits,\u201d he moaned.\n\n\u201cYeah, Baby? Do you like my big tits in your face? Um...I love how hungry you are for them...How hungry you are for me.\u201d\n\nRoxy bit her lower lip as David nibbled on her sensitive nipples. \n\nDavid grasped at Roxy\u2019s shoulder tipping her over onto her back again, and coming up between her legs. Staring down at her, so perfect and beautiful in the veiled light coming in through the window, his heart felt as if it would burst with all the emotions that flooded into him. \n\n\u201cMy God, Roxy. You\u2019re so beautiful. The most beautiful thing I\u2019ve ever seen.\u201d\n\nHe reached out to push a loose strand of hair back away from her face, momentarily reminded of how he had done that very same thing outside Wave World not so long ago. \n\nRoxy covered his hand, holding it to her cheek. \n\n\u201cI\u2019ve never wanted a man the way I want you right now, David. I love you...I love you so very much. Please...I need to feel you inside me. Make love to me...\u201d\n\nCarefully, David slipped her thong off and moved between her legs never losing eye contact, so that when he pushed himself inside, he got to watch the ecstasy filling her gaze.\n\n\u201cOh! DAVID!\u201d she cried her eyes tearing brightly, tears of joy at feeling her young lover take her and own her body. Her hands roamed across his hairy chest, feeling the outlines of his tight muscles while he thrust forward making the bed shake.\n\n\u201cRoxy! It feels so good inside you! I love you too, Baby! Ah! God! ROXY!\u201d\n\nHe wanted to make it last as long as possible, but Roxy wasn\u2019t making that easy as she pressed up with her hips to meet him, increasing the friction between their bodies. The surging in his balls grew unbearable. The need to release like a distant itch he had to scratch. \n\nDavid\u2019s face took on a look of quiet desperation, sweat beading his brow, and running off his chest.\n\n\u201cRoxy!\u201d\n\n\u201cI know! Me too! I\u2019m ready, David!\u201d\n\nTheir movements became more frantic, bodies slapping together in a frenzied melding of flesh until they both cried out in unison.\n\n\u201cDavid! AHHHH! I\u2019m cumming! CUMMING FOR YOU!\u201d\n\n\u201cROXY! YES! YESSSSS! I feel you! I\u2019m cumming! God! I love you!\u201d\n\nThey drew back together, sliding into one another\u2019s arms with Roxy\u2019s head cradled on David\u2019s shoulder. She brushed her fingertips across the damp hairs on his chest, twirling the strands around.\n\n\u201cWhen I thought I had lost you in that fire, I felt something break inside me.\u201d\n\n\u201cWe don\u2019t have to talk about it,\u201d said David stroking her hair.\n\nThe subject of what had happened in the forest hadn\u2019t come up since their return, as if by silent, mutual consent they had decided to put it behind them. This had been fine with David, he hadn\u2019t wanted to make Roxy relive that painful moment. Besides, he was alive, so what more was there to talk about anyway?\n\n\u201cI want to talk about it. I need to say something to you.\u201d\n\nRoxy shifted up onto her elbow so that she could look David in the face. He looked so handsome laying there, his hair all askew, smiling up at her. With one hand, she reached out to touch his face.\n\n\u201cI\u2019m sorry I doubted us, that I doubted what we have together. I promise you, David, I will never do that again.\u201d\n\n\u201cI\u2019ll never give you a reason too.\u201d\n\n\u201cI know you won\u2019t. You\u2019re a good man, David. You\u2019ve made my life, and Emily\u2019s, a happier place. Whatever happens to us in the future, you will always be in my heart.\u201d\n\n\u201cThe cards said our relationship would only grow stronger as long as we focus our primal energy.\u201d\n\n\u201cDo you have some primal energy you need to focus?\u201d laughed Roxy.\n\n\u201cI think you already know the answer,\u201d said David with a grin.\n\nTheir bodies were quickly joined a second time, and in the faint light, Roxy caught a flash from the gold bracelet on her arm.\n\nThe gift that she knew would always remind her of the man that came into her life, and made her believe in love again. \n\n \n"
    ],
    "authorname": "darkoverlord6",
    "tags": [
        "mature",
        "mature romance",
        "older woman",
        "younger man",
        "sex outdoors",
        "student lover",
        "young lover",
        "public"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/a-boys-last-summer-pt-02"
}