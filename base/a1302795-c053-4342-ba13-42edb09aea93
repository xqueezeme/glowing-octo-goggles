{
    "title": "Kanto Ep. 02",
    "pages": [
        "Disclaimer: All humans having sex are over the age of consent. This is more Gen 1 Pokemon using the theme for Pokegirls. I own the rights to neither.\n\n******\n\nI idly ran my fingers through the hair on Sparky's head between her ears as I stared at the aptly named Mount Moon in the distance.\n\nEven just a few minutes walk east of Pewter, I could clearly see the dome-shaped small mountain in the distance, pitted with craters and holes from the Pokemon within having bored portions of its exterior away. It really did resemble the moon.\n\n\"C'mon, Sparky. We're burning daylight.\"\n\n\"Pi,\" she agreed excitedly, and we were off. There were no feral Pokemon on the route to the Mountain, but there were a lot of Tamers milling about, mostly ones who seemed like they hadn't defeated Brock yet.\n\nThere was more than one who had nothing but Bug-types, and a couple with nothing but Flying-types. All challenged me to battles, hoping to get their monsters strong enough to continue on. Sparky didn't help any of them out at all, soundly defeating them one after another.\n\nWhen she hit level eleven, Sparky developed a move called Quick Attack, and finally had something else to attack with besides her Thundershock.\n\nThe surprise was the Tamer who sent out an Ekans. A bald, purple snake-girl with unblinking yellow eyes split by a thin vertical iris, she also had a very large mouth filled with small fangs that she could unhinge to make a frankly terrifying hiss. She had a small pair of purple tits with shockingly yellow nipples and three fingered hands on thin arms, but below the hips were no legs at all. Instead, she had a long, muscular tail with a yellow rattle on the tip and a band of yellow around her thin waist.\n\nAs terrifying as the Ekans was, Sparky really was that much stronger than her, and defeated her easily, but suffered a poisoning in the process. Man, did I hate poison-types.\n\nEventually, after a couple of hours of battles and walking, we found ourselves on the approach to the entrance of the cave systems that permeated the mountain. Just outside of that entrance was a Pokecenter, and it pissed me off a little.\n\nThere were no wild Pokemon between here and Pewter, but there was a Center. Meanwhile, my hometown of Pallet still didn't have one. What was the sense in this?\n\nJust because I was angry about it didn't mean I wasn't going to take advantage, so after a quick stop inside to heal Sparky up to full strength, we started to explore the caves.\n\nLight filtered down through the many holes on the cavern ceiling, diffused and reflected off of every surface inside. Looking closer, there was some kind of crystal powder imbedded in the rocky walls and floor that spread around the light.\n\nWe hadn't taken five steps inside before a Zubat swooped down to attack. It was mostly a mouth and wings, blue and vicious. I couldn't tell the gender without getting a lot closer than I was comfortable with, but I had no interest in fielding a Zubat anyway.\n\n\"Sparky, Thundershock!\"\n\nSparky fell to her hands and channeled her electricity through her tail, taking down the flyer in one, super-effective strike.\n\nI quickly dropped my Black Ball onto its unconscious body, and we continued on.\n\nThe bat-like Zubats were everywhere. Four more fights and I ran across my first Geodude.\n\nI was actually looking for a Geodame to capture, and then Tame. My Pokedex rated the ground/rock Pokemon as high A-class, though I didn't see why just yet. Bubbles crushed them easily.\n\nSwitching my Pokegirls, I let Bubbles out, and she focused immediately on the wild Pokeboy.\n\n\"Bubbles, Water Gun!\"\n\nMy Squirtle's cheeks bulged alarmingly, before she spat a stream of water at high pressure directly into the face of her opponent. The Geodude rolled backward as his heath bar dropped all the way down, and I Black-Balled him. It was when my Pokedex chimed triumphantly and I turned around that I got a big surprise.\n\nSmall, flickering lights were radiating from deep within Bubbles's blue skin, like powerful, moving flashlights shining up from under water. She looked at her hands in wonder, and asked, \"Squirtle?\" in a worried tone.\n\nI stood frozen as she doubled over, and the flickering of light became more intense. Her form began to pulse bigger, growing in size with every heartbeat. Something like ears sprouted from her head, blue-white and shaped similar to a breaking ocean wave frozen in time. A tail grew from the very top of her bubbly ass cheeks and just below the lip of her shell, flared out and curled at the ends, looking very much like her new ears.\n\nThe lightshow tapered off, and Bubbles stood up straight, blinking heavily. In her upright position, I could see that her short black hair had grown down to her shoulders, keeping the wave in her bangs. She'd also obtained six dull yellow armored plates on her torso. She had a pair on the bottom just over her pussy, another pair over her slightly bulging abdomen, and a final, curved pair covering half of her much bigger tits and holding them up and together. Her cleavage was awe-inspiring.\n\nShe looked at me. \"Wartortle?\"\n\nI glanced at my Pokedex for confirmation of my guess. \"You evolved, Bubbles. Congratulations?\"\n\nShe stepped up close to me, having to look down at me from her now six-foot height. She'd grown two feet taller, and proportionally was even more voluptuous than before. I reached out, traced a finger down her deep cleavage, and sighed, \"I'm going to miss your boobs, Bubbles.\"\n\nShe looked down in consternation, then focused. The plates protecting and supporting her breasts simply melted away, absorbing into her skin. Once freed, her staggeringly impressive breasts dropped down and forward with a liquid bounce, large purple nipples at their peaks. \"War!\" she triumphed.\n\nI buried my head in-between them, and held the heavy, giant blue teardrops against my face. \"Oh thank God,\" I muttered into her cleavage. Bubbles's tits were one of the best things in my life at the moment. I really didn't want them to be locked away forever.\n\nAfter moment... or five, I figured we'd better get back to it. Stepping back out of her glorious mammaries I ordered, \"Okay, armor back up, Bubbles. We've got more exploring to do.\"\n\n\"Toooortle,\" she begged.\n\n\"Tonight,\" I promised. \"Believe it, there's no way I'm passing up the chance to play with the new you. But we've got a job to do right now, right?\"\n\nOnce she'd regenerated her breast armor, we explored the top level of the cavern, finding multiple holes down to sub-levels with makeshift ladders attached to the sides. Bubbles handled the Geodudes, and Sparky handled the Zubats.\n\nI had a pretty good mental map of the level, and the girls were getting tired, so I figured it was time to call it a day and head back to the entrance, and then the Center just outside. We were almost back out when the Pokegirl I'd been looking for rolled into my path.\n\nUpright, pointed ridges on her forehead similar to a Tiara marked her as a Geodame. \"Bubbles, Tackle!\"\n\nThe Wartortle slammed into the stone head with arms, and barely hurt her. I winced, no wonder they were considered high A-class. One water attack from Bubbles would definitely knock her out, but it might also kill her. Then she'd be useless for anything but the Black Ball. No, we were going to have to shave her health down a sliver at a time with tackles. I wasn't going to risk not capturing her, the female was too rare of a find.\n\nIn her evolved form, Bubbles could take a hit even better than before, and she was fully twice the Geodame's level. I kept commanding Bubbles to tackle, and the much weaker rock Pokegirl would tackle her back for even less damage.\n\nWhen the feral's health bar was far down into the red, I pulled an empty ball from my pack and triggered the multi-button, tossing it at the slow-moving monster-girl.\n\nThe Geodame was digitized into pure energy, sucking up into the open ball before it fell to the dirt floor and rocked. It wobbled madly, containing the storm of wild energy trying desperately to overpower the device, before settling down with a soft chime, the black band of the ball pulsing softly with a white light.\n\nBubbles grinned exhaustedly at me. \"Tortle.\"\n\n\"Yeah you did! Well done, Bubbles,\" I praised her. \"She's going to be a great addition to the team.\"\n\n******\n\nI stared at the restrained Geodame in exasperation, and more than a little frustration. Her arms were pinned out to the sides, and the restraints held her head firmly immobile, with a secondary set holding her mouth open.\n\nThe problem was that she was just a head with arms. She didn't have a pussy to Tame with!\n\nI grabbed my Pokedex and started looking through the available information. \"Oh you've got to be kidding me...\"\n\nI wasn't sticking my dick into a feral Pokegirl's mouth. No matter how trustworthy the taming beds were, or how specialized the restraint system would and could be for each and every breed of Pokemon. I wasn't doing it.\n\nStill, I wanted her on my team. She was no good against water or plant types, but against normal attacks she was so strong, and absolutely immune to electric. Who knew what other possible strengths she'd have that I just didn't know about?\n\nThere was a third option, but I was going to need some help. Grabbing both of my other Pokeballs, I released Bubbles and Sparky.\n\nSparky took one look at Bubbles's new form, and her ears dropped back while her eyes shined. \"Piiiika,\" she said in awe, staring at the gigantic breasts right at her face height.\n\nBubbles raised an eye ridge, and her breast armor melted away, releasing the massive flesh balloons to drop down. The purple nipples flicked up and down as her mighty boobs settled into rest.\n\nI got their attention before we all got distracted. \"Hey, I need your help, girls.\"\n\nThey both looked at me, and I gestured helplessly at the restrained Geodame. \"I need to cum in her mouth. Help me out?\" I pleaded.\n\nSparky and Bubbles looked at each other for a moment, before holding out their hands and doing the Pokegirl version of Roshambo. The gestures were obscene, and not only did I not understand the game, I was pretty sure that I didn't ever want to.\n\nThey went three rounds before Sparky's entire being dropped, slouching with her long and wide ears flopping down, tail sagging to the floor. Bubbles turned to me victoriously, and hefted one of her giant blue tits up, presenting the hard purple nipple at its peak to me.\n\nI needed absolutely no further invitation. Dipping my head slightly, I sucked that nipple into my mouth, grasping her vast breast with both of my hands.\n\nIt was sexy, and fun, and was just what I needed. My dick pulsed up to hardness. Bubbles ran her stubby fingers through my hair as I suckled at her teat, rumbling in pleasure. \"War,\" she beckoned Sparky.\n\nI felt Sparky's greedy little mouth inhale my member to the root, the soft fur on her face gently tickling my skin. I sank one hand deep into the liquid flesh of Bubbles's other breast and squeezed her hard. Bubbles clearly approved, and rumbled louder.\n\nI stood there, receiving an excellent, energetic blowjob while also licking and sucking on two big blue tits that were each as big as the Pokegirl restrained to the bed. Larger, even, than my own head. To think I was ever reluctant to be a Tamer!\n\nI could feel myself getting close, the pressure beginning to build. I backed away a step from both of my girls. \"Bend over, Bubbles. I need some lube.\" She had won their little game, hadn't she?\n\nMy Wartortle spun around with haste, dropping her torso forward so quickly in her excitement that all of her watery blue flesh wobbled in wild motion.\n\nI stepped behind her, and she raised her blue-white tail for me without prompting. Using my thumbs to spread the vast ass flesh, I slotted into her so-very-wet pussy.\n\nThrusting into her to build up some lubrication, I held out until the very last second before pulling out, enjoying it too much.\n\nI yanked my cock out of her gripping tunnel and scrambled up onto the taming bed, stroking furiously. I aimed my tip right into the Geodame's open mouth, and came like a Water Gun.\n\nI didn't quite get all of my cum into her mouth, somehow I managed to also cum all over her face in long streaks. I watched as she reflexively swallowed my cum, and the white streaks on her face vanished as she absorbed them.\n\nThe Geodame's eyes rolled back into her head and she groaned with a sound like gravel grinding against itself as she came herself.\n\nPanting, I waited for some sign that the Taming took root. She focused on me, and through her mouth restraints kind of said; \"Dame.\"\n\nI blew out a breath I didn't realize I was holding. \"Yeah, you're welcome. I think I'm going to call you... Pebbles. You okay with that?\"\n\n\"Geo,\" she agreed. \"Geodame?\"\n\n\"Oh, right. Sorry. One sec...\" I stumbled over to the headboard and hit the correct button, putting Pebbles back into her ball and causing the restraints to swivel back to their resting positions underneath the bed.\n\nRemoving my third Pokegirl's ball from the headboard, I turned to my other two and stopped. Poor Bubbles had both of her hands between her legs, furiously rubbing her leaking cunt in search of an orgasm that wouldn't come. Sparky wasn't in much better shape.\n\nWhat I had just done to my Wartortle and Pikachu was cruel, but I hadn't realized it at the time. I got both of them revved up, but without my cum, neither could get off. I had to fix that, Pebbles could wait.\n\nI looked at Sparky consideringly, her yellow furred form slumped to the floor in near tears, then at Bubbles, still bent over the bed with both hands in her crotch. I came up with an idea.\n\nI bodily lifted Sparky from the floor, her light frame easy for me to heft, and slung her over Bubbles's shell. The sight of my Pikachu's tight yellow ass directly above my Wartortle's plump blue one really helped me get hard again.\n\nA little stroking, and a little help from my nanite reinforcement, and I was ready to help them out. \"Move your hands, Bubbles,\" I directed her.\n\nHer hands immediately left her pussy to brace herself on the bed, and she lifted her tail in anticipation. \"War... Wartortle?\" she asked in a wondering tone.\n\n\"Yes, really. You didn't think I would leave you like this, did you?\" Without waiting for a reply, I slotted myself all the way to the hilt in her incredibly slick cavern, pressing against her ass deep enough that the water-balloon like cheeks deformed around my hips.\n\nPumping in and out of her, I gave her instructions. \"Okay Bubbles. When I pull out, I'm going to need you to lower your tail so Sparky can get some attention too. Got it?\"\n\n\"Wa-a-a-ar,\" she agreed, her word stuttering with every impact I gave her.\n\nAfter a handful of deep, long strokes into her clenching tunnel, I abruptly pulled all of the way out. Bubbles dutifully lowered her blue-white tail, and I raised up a bit to slot myself into the patiently waiting Sparky.\n\nHer tail stood up as straight as it could, and she mewled in pleasure. Grasping her tail at the base with one hand and her narrow hip with the other, I pounded her hard enough that it sent the Wartortle she laid upon into jiggling motion.\n\nBack and forth I went between them, trying to give them both equal amounts of my dick. I was getting really tired by the time the familiar pressure in my groin began to build. Walking around Mt. Moon all day and then doing the up and down squats between my girls was taking its toll.\n\nI buried myself against Sparky's tight little yellow ass cheeks and came. I counted three spurts before I yanked back out, tightly gripping my cock around the base, and shoved it into Bubbles to finish off. Sparky began to flicker with electricity from her pussy as she orgasmed and I was worried about it hurting Bubbles, so I rolled her off of my Wartortle's shell to the bed. The Pikachu didn't even notice, absorbed in the sensation of cumming.\n\nAs soon as I'd finished cumming myself, Bubbles pressed her big blue ass back into me and growled, \"Waaaar.\"\n\nHer cum shot everywhere. From every direction around my dick, she sprayed mightily. It splattered up my torso, her perfectly round ass cheeks focusing some of her cum into an upward spray, and it also shot down my legs and even to the sides a bit. I barely kept on my feet through it.\n\nI stepped backward, pulling out of her, and the Pokegirl-cum clung to both my torso and her ass in gooey ropes of somewhat watery ejaculate. \"Damn, Bubbles. We might have to do your taming in a bathtub from now on,\" I complained.\n\n\"To-o-ortle,\" she happily agreed. I rolled my eyes, chiding myself. Yeah, threaten a Water-Type with bathtub sex. Might as well try and light the sun on fire, Travis.\n\nI definitely needed a shower after that. And sleep, I was exhausted. \"I'm going to take a quick shower, girls. Then we can all get some rest.\"\n\nBubbles frantically scrambled to her feet, nearly falling down again as she raced to get into the water first.\n\nSo much for that shower being quick.\n\n******\n\nI was on the verge of laughing from nearly the second we reentered Mt. Moon.\n\nMy Geodame didn't have legs, so the way she moved herself around was kind of hilarious. She rolled.\n\nIt wasn't the rolling that was funny, it was the way she would drift off in a curve, directly into a wall more than once. Pebbles wasn't the smartest Pokegirl in the world.\n\nStill, it was easy to get some training done with her on that upper level. The Zubats had an absorb attack that Pebbles was naturally defensible against, so with every victory Pebbles got a little stronger.\n\nAt level eleven, three levels stronger than she was when I captured her, she developed a move called 'Rock Throw'. That hurled stone was super effective against flyers, and then she was taking the Zubats down in one hit.\n\nI figured it was time to start exploring some of the lower levels, so we fought our way over to the ladder I'd mentally marked as the first one to try.\n\nMilling about near the laddered hole was a mountain of a man, decked out in hiking gear. He had to be in his mid-thirties, with an enormously thick black beard.\n\nWhile being drafted as a Tamer when we turned eighteen came with a mandatory two-year term of service, nothing said that you had to quit at the end of it. Many people enjoyed the job, and it was a boon for the world that those people helped keep the feral population under control well past their mandatory term.\n\nPacing beside him was an Onix, identical in every way to Brock's, save for the level of strength. As soon as Mountain Man saw me, and my Geodame veering back and forth as she rolled beside me, his face lit up.\n\n\"I challenge!\" he exclaimed with a pointed finger. \"Onix, Tackle!\"\n\nPebbles had hardly stopped rolling when the massive Onix whipped her boulder-like body directly on top of her, causing a little damage.\n\nPebbles was strong against normal attacks, and was the same level as that Onix. For being a Tamer this long, the man didn't seem to know what he was doing.\n\nI recalled Pebbles, and sent out Bubbles. Mountain Man took one look at my Wartortle and his face fell.\n\n\"#*@%,\" he muttered. I didn't quite catch the exact word he used, but the tone was clear.\n\n\"Bubbles, Water gun,\" I directed calmly.\n\nMy Wartortle's cheeks bulged even bigger than they had when she was still a Squirtle, and the high-pressure stream of water she spat knocked most of the Onix's health bar down.\n\nThe man winced as he glanced at his own Pokedex. \"Tackle!\" he tried again.\n\nThe rock-snake Pokegirl raised up to her impressive height, pausing for just a moment, and then she slammed her body downward, clubbing Bubbles over the head with one of her giant granite breasts.\n\nMy Pokedex warned me that Bubbles had suffered a critical hit. Even so, Bubbles was a tank. She had plenty of strength left to fight with. \"Bubble attack!\"",
        "Bubbles spat a fast-moving globe of water, striking the Onix directly in the face and knocking her out. The Onix digitized into blue energy and zapped back to her ball in her Tamer's hand.\n\nI should have thought about her name better. Naming Bubbles after one of her combat moves wasn't the brightest idea in retrospect, I was always worried that she'd misinterpret my command for her name.\n\nThe Mountain Man switched Pokeballs, and sent out a Machop.\n\nFighting types and Flying types were the exception to the Blood Gift rule, along with Normal types, obviously. Trying to Tame a Fire-type without the requisite blood gift would result in severe burns to the Tamer. An Ice-type would freeze your bits off. But for those who had less versatility than myself, supplementing your team with fighters and/or flyers was an option many took. A Tamer needed no inherent durability to Tame them, only the nanite reinforcement that came with badges. Gary, for instance, had picked up a Pidgey in addition to his Bulbasaur.\n\nThe Machop was a dull blue color, with short legs and long arms. She had barely anything for breasts, a husky frame, and three textured fins on the top of her head that somewhat resembled tall braids.\n\n\"Low Kick!\"\n\nThe Machop darted forward, and planted her foot right up into Bubbles's pussy.\n\nI winced in sympathy as my Wartortle hunched over in pain. I was now pissed off, and so was my Pokegirl. \"Bubbles, Water Gun!\"\n\nAt nearly point-blank range, Bubbles spat a high-pressure stream of water directly into the Machop's face, with more power than she ever had before. The force of it sent the other Pokegirl flying away, before hitting the ground and tumbling backward in a loose-limbed, reverse somersault. She didn't get back up, returning to her Tamer's ball.\n\nThe man clipped his ball back to his belt and gave me a sheepish look. \"Uh, I'm sorry about that. Can I get an escort back out to the Pokecenter?\"\n\nI glanced at Bubbles as she was still hunched over in pain, hands in her crotch. She looked back up at me with a pain-filled wince, a dark bruise forming on her forehead from the impact with the Onix's stone breast.\n\nI was only slightly tempted to tell him to bugger off. Even without the League rules demanding that I protect him while he was defenseless though, I wasn't going to sentence him to death over a dirty combat move. No matter how mad I was.\n\nBesides, I was going to get Bubbles healed up anyway. She didn't need to be in that pain. I switched Bubbles back out for Pebbles. In her ball, in a state of stasis, my Wartortle wouldn't suffer any longer. \"Yeah. C'mon, let's go.\"\n\n******\n\nAfter fighting our way out of the cavern, getting my girls healed back up, and fighting our way back in, I finally was able to get down that ladder.\n\nThe light was dimmer in the tunnel at the bottom of the ladder, the light still refracted enough to see with, but not nearly as illuminated as above.\n\nThere were no Geodudes or Zubats in that tunnel. Instead, the most horrifying Pokemon milled about as though something had herded them all into one place.\n\nWith a Bulbasaur, there was a symbiosis between the reptilian Pokemon and the plant growing from its back. The Pokemon provided water and nutrients along with mobility, and the plant provided photosynthesis and combat effectiveness. There was harmony there.\n\nBut the multitude of Paras milling about in this tunnel were a different story. The bug-type Pokemon had sentient fungi growing from their backs, completely controlling every movement and thought, a parasite in every sense of the word. The mushrooms took everything, and gave nothing.\n\nI had a water-type, an electric-type, and a rock/ground-type. None of which stacked up against the bug/plant hybrids that clustered before me very well. This was going to hurt.\n\nGritting my teeth, I commanded Pebbles forward. If this turned out badly, I didn't know what I was going to do. Maybe backtrack all the way to Viridian Forest and get a bug-girl. I really, really didn't want to do that. Taming a Bug? Gross didn't begin to cover it.\n\nLuckily for us, these Paras didn't have any plant attacks developed yet, and Pebbles could just take the hits they gave out with barely a scratch. Slowly we made our way through the tunnel, one fight at a time, filling my Black Ball up with the throng of Paras we had to fight through.\n\nAt the other end of the tunnel was another ladder down, and at the bottom of that I found a sight that I wasn't prepared for.\n\nThe Tamer's body was covered in charred burn marks, and had bits missing as something had eaten pieces from him. Around his neck was a necklace with a stylized rocket, something that hadn't been in existence for nearly three hundred years. The only reason I even recognized it, or that it stuck out in mind was because of my archeology and ancient history interests.\n\nI struggled to remember what I was supposed to do when I came across a dead Tamer. It was glossed over in the two-week training course I had, likely so as not to scare us. Unable to remember, I grabbed my Pokedex.\n\n\"Keep your eyes open, Pebbles. I'm going to be distracted for a few minutes here.\"\n\nSatisfied that my Pokegirl would protect me while I searched, I began paging through the reams of information available to me in my handheld device. Oak was right, this little gadget really was my best and most powerful tool.\n\nI sighed as I found what I needed. It was unreasonable for the League to expect Tamers to transport the bodies of the fallen, so we were instructed to leave them where they lie. We were instead to retrieve their Pokedex and their Pokemon, and turn them into a Pokecenter. Any supplies they had were available to be taken in lieu of payment for informing the League of what had happened to them.\n\nThat last bit seemed ghoulish to me. Like grave-robbing. Still, what was a dead body going to do with a handful of empty Pokeballs? \n\nI removed the Pokedex and the two occupied balls from the corpse's belt, stuffing them into the main part of my backpack. He had two empty balls in his pack, and I claimed them for my own.\n\nWalking further into the main room down there, there were hardly any feral Pokemon about at all. Pebbles only had to fight two Zubats as we made our way to the raised section of flooring in the back of the room.\n\nSlumped against the wall, in a bad state of decay, was yet another fallen Tamer. The smell was horrendous, and I fought against the urge to vomit.\n\nHolding my breath, I removed his Pokedex from his hand, but when I went to his belt, the single Pokeball he had was unpowered and open.\n\nIt was a safety feature in every ball. If the ball ran out of power, it would release the Pokemon contained within rather than having it lose containment and shatter. This Tamer had been dead for a long, long time for the ball to run completely out of power.\n\nThe dim light of the cavern became just a little brighter, and took on a reddish hue. \"Geo!\" Pebbles warned me, and I turned around quickly to see a very angry, very feral Charmander, the dancing flame on the tip of her thick tail lighting up the cavern.\n\nLevel thirteen, my Pokedex rated it at. Suddenly a lot of this made sense. This Tamer had died after his Charmander was defeated down here. When she was released, the near-death Pokegirl must have somehow survived, preying on the others in this cavern and growing stronger.\n\nAll those Paras in the tunnel above had run from her, the Fire-type being everything dangerous to them. The dead man with the rocket necklace had burns all over him. But how did a Fire-type survive against all of the Geodudes and Geodames here?\n\n\"Pebbles, Rock Throw!\" I commanded, and my Geodame spat a perfectly spherical stone into her hand and hurled it at the Feral.\n\nIt hit her, dropping her health a decent amount. The Charmander jumped and somersaulted in the air, coming down upon Pebbles with her foot claws gleaming an odd grey-silver.\n\nMy jaw dropped as my Pokedex showed me just how much that 'Metal Claw' attack had hurt Pebbles. I had just found my answer as to how she had been dealing with the Geodudes all over this place.\n\nI retrieved Pebbles back into her ball, sending out Bubbles. I wanted this Pokegirl on my team. Not only was she one of the few S-class Pokemon, but she was also going to be my answer to Gary's Bulbasaur the next time he accosted me. I just had to be very careful in how I fought her.\n\n\"Bubbles, Tackle!\"\n\nBubbles slammed her shoulder into the tiny waist of the Charmander, spiking her into the rock floor and rolling over her to a safer distance away.\n\nThe Charmander popped back up to her feet, snarling, and flicked her tail. A spurt of flame left the fire constantly burning from its tip to strike my Wartortle. It didn't hurt Bubbles very much at all, the water-type having protection against fire attacks.\n\nBack and forth they went as we worked to get the feral's health bar down far enough to capture without chancing killing her.\n\nWhen the Charmander was down far enough that another tackle from Bubbles would likely kill her, I dug in the side pocket of my backpack, retrieving an empty Pokeball. Triggering the multi-button to activate it, I threw it at the hurt and angry lizard-girl.\n\nThe wild Charmander digitized into bright blue energy, lighting up the dark cavern for a moment as she was vacuumed into the device, then the ball dropped to the floor and began to rock violently.\n\nWithout the fire from her helping to illuminate the room it seemed incredibly dark, and the flashing multi-button on the ball incredibly bright.\n\nIt rocked once, twice, then broke in half as the Charmander escaped confinement. The red and white halves of the irreparably damaged ball went flying apart from each other, and the reconstituted Pokegirl snarled and sent another ember at Bubbles.\n\nIt hurt her as little as the previous embers did, but this time she managed to give Bubbles a 'Burn' status ailment.\n\nWhile the fire attack itself didn't hurt my Pokegirl all that much, the burn hurt her quite a bit. And then kept hurting her.\n\nI threw another ball, and the Charmander broke out of that one as well. Then another.\n\nI was starting to worry. I didn't have many empty balls left, and Bubbles's health was sinking pretty fast from the burn. Making a decision on the spot, I retrieved Bubbles and sent out Sparky.\n\n\"Sparky, Thunder Wave!\"\n\nMy Pikachu shook, her yellow fur nearly vibrating as she built up a static charge, the red circles on her cheeks leaking electricity into her coat. All at once she flung her arms out, and that electricity exploded from her in an eruption of crackling air, expanding in a short-ranged, arcing wave towards the other monster-girl.\n\nMy Pokedex registered the successful application of Paralysis on the Charmander, and when she tried to flick her tail at Sparky her muscles seized on her.\n\nI threw my second-to-last ball, and after the initial capture it began to rock just as the other failed attempts did. One rock. Two. Three.\n\nThe multi-button flared bright, and the ball settled down to rest with a chime, the black band softly pulsing white for a few moments.\n\nI wiped the sweat from my forehead and sagged in relief. That was really close, but somehow we managed to capture the stubborn feral.\n\nI didn't have any Burn H.E.A.L.s, so Sparky and Pebbles were going to have to get us out of here without Bubbles's help. I wasn't taking her back out of stasis until she was healed back up unless I had to.\n\nGlancing around the cavern one last time, I spotted a solid crystal near the rotting Tamer, which my Pokedex identified as a 'Star Shard'. Something that any Pokemart would buy from me for credits, as apparently they were rather rare and the League wanted them for something or other.\n\nI was going to have to go all the way back to the Pokemart in Pewter regardless. I had one empty Pokeball left, and I needed at least a couple of Burn H.E.A.L.s now. I wasn't going to chance a Burn taking any of my girls out of commission again.\n\n******\n\nThe attendant waited while I connected my four Pokeballs into the tray, the spherical depressions having a shallow hole on the bottom for the multi-buttons to plug into. Once I had the last in place, she energized the device, waves of light pulsing over the balls as my girls were inundated with the specific energy to restore their health.\n\nOnce the lightshow tapered off, I carefully replaced the balls back on my belt in the order I had taken them off. The balls were identical, and misplacing where they were stored could be disastrous in the field.\n\n\"Can I help you with anything else, Sir?\"\n\nI gave her an uncomfortable smile and unslung my backpack, taking out the two Pokedexs, and two occupied balls I'd recovered. \"Yeah. Um, I found two fallen Tamers in the Mountain.\"\n\nHer face fell, matching mine. \"I see. You are Travis of Pallet, correct?\" she confirmed, typing something below my line of sight.\n\nI'd been to the Mt. Moon Pokecenter more than once, it wasn't surprising that she remembered me. \"That's right.\"\n\n\"Okay. We'll recover the time of death from the Pokedexs, but don't be surprised if someone from the League wants to talk to you about it.\"\n\nI nodded, what else could I do?\n\nI still had nearly half of the day left, I could get my new girl Tamed and travel the short distance back to Pewter City before nightfall, maybe even make it back here if I didn't get challenged to battles by any Tamers on the path.\n\nSparky chewed through all of them on the way up, and she was even stronger now. Unless they were very stupid indeed, every one of them should let me by unaccosted.\n\n\"I need to use a room for an hour or so, if that's alright,\" I told the attendant.\n\nShe gave me a little smile, still a little shook up over the deaths, I thought. This early in the journey all of us had taken for hundreds of years, deaths were pretty rare. I doubted she had to deal with it all that often, if ever. \"Room 103, Travis.\"\n\n\"Thanks.\"\n\nI made my way up the staircase, finding my room. My Pokedex accessed the door lock, and once inside I relocked the door, making my way to the Taming bed.\n\nOnce the Charmander's ball was slotted into the headboard, the mechanical restraints swiveled from beneath, locking into the specific configuration for a Charmander and lighting up with a crackle of electro-static reinforcement. Then my new girl coalesced into being, the red lizard-girl restrained more than the other three ever had been.\n\nShe was muzzled around her mouth and collared around her long neck. Her arms, legs, and waist all had clamps holding them immobile with further extensions to cover up her clawed hands and feet, and there was even a cone-like restraint covering the tip of her tail, keeping the flame there completely under wraps.\n\nI took just a moment to admire the severe curves of her body. She had a narrow ribcage and an absolutely tiny waist. The narrowness of her chest made her moderate breasts seem much larger than they actually were, the dark red skin of the perfect spheres only interrupted by the stubby, wrinkled burgundy nipples at their fronts. Below her tiny waist her hips exploded outward, at least four times as wide as her little waistline.\n\nHer thighs were thick to match, forcefully spread apart with orange and red pubic hair in-between that danced as it imitated a candle flame, much like the hair on her head. Strategic patches of shiny, miniscule red scales were placed optimally to draw the eye, an inverted triangular patch above the inward curves of her breasts, another triangle just over her mound, and pleasant vertical stripes that accentuated her severe waist-hip ratio.\n\nThere was a slight distortion of the air around her, as her incredible body heat warped the light. Tentatively, I placed my palm onto her tight abs, and breathed a sigh of relief. She was very hot to the touch, but I could withstand it. It was much like grasping a hot coffee mug when your hands were cold.\n\nSatisfied that I wouldn't injure myself trying to Tame her, I ignored her furious growling and got myself undressed.\n\nTrying to calm her wouldn't do any good. When I tried that with Sparky, it just made her angrier. I straddled her thick tail and thumbed her clit, causing her to growl in a more wanton tone and her cunt to immediately lubricate.\n\nHer juices were nearly boiling, and light steam wafted up from her gash as the Charmander's pussy evaporated some of her own liquid with her intense heat.\n\nI crossed my fingers and tentatively touched her opening with the crown of my dick, pulling back right away just in case.\n\nI needn't have worried, my Blood Gift protecting me from her heat as well as it had from Sparky's electricity, Bubbles's water, and the absolutely rough and dry blowjob that Pebbles had woken me up with that morning. The inside of my Geodame's mouth was pretty much identical to sandpaper.\n\nMy Geodame had wanted to sleep between my legs the night prior. Life as a Pokegirl was hard enough, who was I to deny such a simple pleasure?\n\nFully impaling my newest girl, the immensely hot and wet inside of her was actually very pleasant. I stroked in and out, taking liberties in feeling her thick thighs and high, firm breasts.\n\nI tuned out the growling of the Fire Pokegirl, focusing on racing to the finish line. It took a long time, as I'd gotten off too many times in the last day or so, but eventually I felt the familiar pressure begin to build. I grasped her tightly around her tiny waistline and emptied my seed into her.\n\nThe Charmander's muscles bulged as she strained against her bondage, absorbing my semen. Then, as with every Pokegirl, contact with human cum triggered her own orgasm.\n\nShe roared into her muzzle, and spouts of flame erupted from her snatch. I could smell the acrid scent of burning hair.\n\nI stayed inside of her through it all, afraid that if I pulled out that she'd start the bedding on fire. Finally she stopped clenching and flaming, and then mumbled into her muzzle, the first sound I'd heard from her that wasn't a growl or roar.\n\nPulling out of her, the ashes of what used to be my pubic hair drifted down to the bed. I only paused for a moment, before continuing on to the headboard. If having a powerful Fire-Type required that I get my body hair burned off, that wasn't such a high price. It was more than worth it to finally have an answer to Gary's Bulbasaur. Besides, it's not like her fire actually hurt me.\n\nI triggered the release function on the Taming bed, and my Charmander was returned to her ball, which I removed from the half-sphere recess in the headboard. The restraints, having fulfilled their function, depowered and swiveled underneath the bed.\n\nI sat on the comfortable mattress, just turning the Pokeball over and over in my hands. This one needed a name, and as good of a name as Ember was, I'd learned my lesson with Bubbles. I wasn't naming another girl after one of her combat moves.\n\nCalling her 'Flame' would be... trite. She was shaped nothing like a 'Matchstick', so that was out. Even if I called her that ironically, it was still a terrible name. Torch? Even 'Char'? No, those were as bad as anything.\n\nFinally settling on a name, I triggered the multi-button, releasing her into the room. \"Hello, Blaze,\" I greeted my new girl with a smile.\n\nBlaze gave me a happy smile, and walked over to where I sat, wide hips oscillating wildly as she maneuvered her thick thighs and big pelvis around in her gait. She straddled me, resting her thin arms over my shoulders and nuzzled my neck with her snout. \"Char,\" she whispered.\n\nI stroked her back. \"You're welcome. I'm so happy to have you on the team, Blaze. You can meet the others tonight, alright?\"\n\n\"Charmander,\" she agreed, and settled down fully onto my lap, wanting more cuddling.\n\nI never once thought that the Fire-Type would turn out to be a snuggler. Learn something new every day, right?",
        "******\n\nThe Tamers milling about between Mt. Moon and Pewter City let me walk right by without any challenges, as I thought they would.\n\nIt was just as well, as I was seriously distracted by simply walking without any pubic hair. Everything seemed to rub together, and there was a heightened sense of touch down there now.\n\nI was more than tempted to get a room at the Pewter City Pokecenter and do some extra Taming with my girls, just to find out if it was going to feel that much better like it seemed it would.\n\nOblivious to my randy thoughts, Sparky paced happily beside me, the short Pikachu nearly skipping in her exuberance.\n\nBubbles was a little taciturn and sultry, Blaze was more than a little touch-starved it seemed, and Pebbles was dumb as a rock. Sparky, though, Sparky was just happy. All the time, she was happy.\n\nWhile Bubbles would always have a special place in my heart as my first, Sparky was currently my favorite walking companion. Just having her nearby made my mood lighten considerably, and made any journey so much more bearable.\n\nThe Pokemart in Pewter City gave me a ridiculous amount of credits for the Star Shard, and between that and all of the Feral Pokemon I'd captured with the Black Ball in that last excursion, I was fairly solvent in terms of spending cash.\n\nFor about ten minutes.\n\nTwenty empty Pokeballs. Five of every H.E.A.L. they had in stock. Twenty more Poison antidotes. The rest I spent on Potions. I walked out of that Pokemart pretty much broke again.\n\nI had time to walk back to Mt. Moon before nightfall, but the truth was, I just didn't want to. I looked over at my Pikachu, and then glanced around. Satisfied there was no one to see, I wrapped an arm around her back and pulled her close, digging the fingertips of my free hand into the short yellow fur on her tight ass cheek and just feeling.\n\n\"Chuuuu...\" she moaned quietly. While there were no laws forbidding lewd public displays between a Tamer and his/her Pokemon, it was still frowned upon. Best not to chance any more out in the open. I placed a lingering kiss to the top of her head, into the long blonde hair between her upright ears, and then pulled her along after me by the hand while making a bee-line to the red roofed Pokecenter.\n\nMy girls might not need to be Tamed at that moment, but they always wanted it. And doggone it, right then I wanted it too.\n\n******\n\nI smiled at Sparky, running a hand up her thigh to her waist. She smiled happily back at me, feeling on my bare chest with her slim-fingered hands.\n\nLining myself up to her entrance between her thin, furred thighs, I entered her slowly, savoring the sensations. Sparky's golden eyes rolled back into her head as she fully lost herself in the Taming.\n\nWhen I bottomed out, the feeling of her soft, fine fur on my barren skin was even more amazing than I had thought it would be. I pressed in as deeply as I could, and oscillated my hips, stirring her pot.\n\nI kissed the red circle on her cheek, getting a slight tingle as the source of her electricity discharged a little. Then something incredibly hot laid across my back.\n\nBlaze pressed the entirety of her four-foot frame to my backside, curling her slim arms under mine to hold on to my shoulders in a reverse grip and nuzzling the space between my shoulder blades. Her pubic hair, always in motion, tickled at my butt crack.\n\nGlancing over my shoulder, Bubbles was content to just watch, and Pebbles was upside down for some reason. Mentally, I shrugged. Blaze wasn't all that heavy despite having most of her body weight centered in her pelvis, tail, and thighs. I was able to move well enough, and if it made her happy to cuddle me as I Tamed Sparky, then more power to her.\n\nI pulled back, moving both myself and my Charmander, and when I thrust back in the added weight of my newest girl added a lot more power to the impact. Sparky clearly approved, placing both of her little hands on my cheeks and pleading, \"Pikachu!\"\n\nI grinned at her lustful face, and began to hammer her, like she had begged for.\n\nIt wasn't so much the physical sensations of Taming Sparky that was the best part, even though it was better than ever before without any pubic hair down there. It was more how much Sparky was enjoying it, using both her hands and thighs to caress me, and Blaze across my back nuzzling and licking the skin there, and using her thankfully extinguished tail to stroke my calves.\n\nI felt the pressure of my orgasm beginning to build, but it wasn't getting any closer than that. I pounded as fast as I could, but to no avail.\n\nThen Blaze snaked her prehensile tail between us, using the rounded tip to tickle my balls. Given that her motion matched mine as I thrusted, it wasn't that difficult of a task. While it felt kind of good, it also surprised me a little and that was what finally gave me the push I needed.\n\nI pressed as deeply into my Pikachu as I could while I came, pumping a little deeper still with every spurt. Sparky wrapped her arms and legs around not only me, but the Charmander laying on my back, and gripped us tightly.\n\nWhen Sparky began to orgasm, Blaze yelped and yanked her tail away from my balls where the Electric-Type was jolting in her pleasure.\n\nFor me, the electric arcs tracing over my skin was almost too much, given that I was very post-coital. Still, I stroked Sparky's face and hair, murmuring to her as she shook and mewled beneath me.\n\nAfterward, I laid between them for a long couple of moments. Were Sparky human, we'd have been crushing her, but the Pokegirl could easily withstand something as light as her Tamer and sister Pokegirl on top of her.\n\nI looked wryly over my shoulder at Blaze. \"Is this going to be a thing? On my back while I'm Taming one of the others?\"\n\nBlaze gave me the most pathetic look she was capable of, and shrugged, \"Mander.\"\n\nI rolled my eyes, shifting us off of Sparky. \"Not every time, okay? This is a sometimes-thing.\"\n\n\"Charmander,\" she pouted.\n\nI shook my head as I shifted to get comfortable on my back. I was willing to indulge her here and there, but I wasn't going to put up with it every time.\n\nOnce I was comfortable, Blaze tucked herself into my side, one clawed hand resting on my abs. Sparky scooted into the other side, a yellow-furred hand over my heart.\n\nBubbled wedged Pebbles between my splayed legs, still very upside-down and not really noticing it. Then she bodily lifted Sparky up and directly on top of me, taking the now vacant spot on my right.\n\nThey put out enough heat, especially Blaze, that I wasn't going to need the sheets. Warm, comfortable, satiated, and buried in my team of Pokegirls, I felt myself begin to nod off despite the early hour.\n\nPokegirls, the ones I had anyway, couldn't really kiss. I got a sweet nuzzle to my neck from Sparky, a lingering, hot lick to my chest from Blaze, and Bubbles simply lifted her massive breast to tuck my upper arm between them, too big after her evolution to cuddle under my arm comfortably. Her bulging thigh rested heavily yet comfortingly over mine.\n\nPebbles didn't do anything but rest there between my knees, staring at my balls from her still upside-down position.\n\n******\n\n\"I don't care about the stupid fossils, okay!? Take them both, for all I care!\"\n\nMy interest was in archeology, not paleontology, or whatever those fossils were. I liked ancient technology, not biology.\n\nThe stressed-out Tamer in the dirty lab coat gave me a wild-eyed look, before scooping up both of the fossils and hurrying away.\n\nI shook my head, and continued on at a more normal pace. We had to be almost to the other side of this thing by now.\n\nWith four Pokegirls sharing the load, we made really good, but slow progress through the caverns. Sparky and Pebbles had an advantage over the Zubats, Bubbles over the Geodudes, and Blaze took down the Paras easily. No one got exhausted or too hurt beyond the ability of the potions I'd purchased to overcome.\n\nThere were supposed to be Clefairies here somewhere, but I'd yet to see even one. It was just as well, I had no interest in fielding one. The last thing I wanted was a surprise that might take down my entire team, as unlikely as that was now. I just didn't know what Clefaries were capable of.\n\nI directed Bubbles to go up the ladder first, partially because it was best she be first to intercept any ferals up there, and partially because it meant I got to stare at her bubbly ass as she jiggled her way up the rungs.\n\nAt the top of the ladder, I found myself in a small boxy cave with a large exit to the outside. We made it!\n\nI stopped us just outside of the exit from the mountain cave system, enjoying the fresh air. Deep in the caverns the air was very stale, and suddenly the phrase 'a breath of fresh air' had real meaning to me.\n\nWe had to hop down a ledge or two on the path to Cerulean City. By hop down, what I meant was that Bubbles would hop down and then catch me when I followed. The ledges were like a fifteen foot drop, and I wasn't trusting my nanite reinforcement to keep me from snapping my legs.\n\nRegardless of how we got down, it was a one-way trip. There would be no backtracking from here.\n\nThe walk took us nearly two hours, and then we came upon Cerulean. The very place I had despaired that I would never make it to.\n\nTraveling through Mt. Moon was a slow process, made even longer by my stupid decision to stay in Pewter for the night. We lost quite a bit of daylight making the trek back to the mountain from there.\n\nNight was nearly upon us now, and while some Tamers might not mind stumbling around in the nearly pitch-black hours, I preferred to see any danger in the open light.\n\nIt only took maybe twenty minutes of exploring to find the Cerulean Pokecenter, where I booked us a room for the night. In the morning, we'd see about getting the second Gym Badge.\n\n******\n\nThe Cerulean Gym was basically a giant swimming pool. I had to hold Bubbles by the hand to keep her from jumping in, and when that didn't really work, I put her back in her ball and sent out Sparky.\n\nShe was probably going to pout at me later over that, but I promised myself that once we got the badge here, I'd let her play in the water for a couple of hours. As long as it was okay with the Gym Leader, that is.\n\nWalking the tiled path through the middle of the pool that was barely elevated above the water level, a swimmer swam up to the side of walkway, challenging me.\n\nTreading water, she raised a Pokeball above the surface and released a Horsea.\n\nBlue-skinned, the Pokeboy had a perfectly circular mouth tube, shaped similarly to the flaring end of a trumpet. Fins instead of arms, and a short, thick tail instead of legs that he somehow managed to balance upon. On either side of his head three widely spread blue spines stuck out, and down his chest into the underside of his tail he had leathery light-yellow skin with folds stretching horizontally across it at regular intervals.\n\nHe was tiny, barely three and half feet tall, if that, and that's if his tail was stretched out.\n\nSparky took him down in one Thundershock, before he had a chance to do much of anything.\n\nNext up was a Shellder. All I could really see was the clamshell halves, light purple with two protruding growths at forty-five degree angles on either side of both the top and bottom halves. There was a head in-between the slightly open shell, covered in shadow. All I could make out were two large, slightly glowing white eyes and a big tongue sticking out into the light.\n\nI grimaced, reminded of my mom reminiscing about her Lickitung. I wonder if she knew just how much she scarred me for life with that.\n\nWhen Sparky defeated that Pokeboy, she hit level seventeen, and I started to feel pretty confident about this Gym.\n\nFurther along the narrow path, another swimmer challenged me, releasing a level nineteen Goldeen.\n\nI was a little in awe of just how stupidly pretty the fish-like Pokegirl was. White and orange, she had big, plump lips and shaded eye-lids that made her big eyes look like she was wearing makeup. An incredibly sharp looking horn jutted from the center of her forehead. Her fins and tail were fluffy and delicate, with a body that seemed more like a curvy mermaid than anything else. Her fins and tail made her look like she was wearing an attractive, skin-tight white dress.\n\n\"Sparky, Thundershock!\" I encouraged, and the Goldeen shrieked in pain, before the swimmer commanded her to use her Horn Attack, stabbing my Pikachu with her horn.\n\nIt didn't gore her, thankfully, but it still hurt Sparky quite a bit. Another two Thundershocks, and the Goldeen fainted.\n\nI took a couple of minutes to get some potions into Sparky, wanting my Electric-Type at full strength for the rest of the water-based Gym. Once she was ready, we walked the last bit of walkway to where a young girl was standing on a diving block, calmly watching me. She couldn't have been any more than a year or two older than myself.\n\nWearing a swimsuit, her short orange-red hair was pulled into a stubby ponytail at the top of the back of her head. \"I'm Misty,\" she introduced herself, \"and I'm the Gym Leader here. Are you ready?\"\n\nI blew out a breath, glanced at my cheerful Pokegirl, and nodded, \"Ready.\"\n\nMisty pulled a Pokeball from behind her waist, releasing a Staryu.\n\nBrown skinned, his long triangular head, arms, and legs resembled a humanoid starfish. Wrapped around his torso was something like a golden breastplate with an absolutely enormous red gem in the exact center.\n\n\"Sparky, Thundershock!\"\n\nSparky fell to her hands, channeling her electric strike through her entire body, directed through her tail to zap into her opponent. The strike took down three quarters of his health, and I couldn't stop the grin from creeping up my face.\n\nMisty commanded her Pokemon to tackle, and the Staryu simply launched forward and flopped on top of Sparky, flattening her to the tile.\n\nOne more Thundershock, and the Staryu went down, redigitizing and returning to his ball. Misty calmly switched the ball out for another, releasing a Starmie.\n\nWhere the Staryu had brown, leathery skin, the Starmie had thick purple plating covering nearly every inch. From his back, he had another five triangular protrusions, making him look like he was two solid starfishes stuck together. Even the golden breastplate was more detailed and ornate than the preevolution, and the red gem in the center was larger, clearer, and cut into very defined angles.\n\n\"Water pulse!\" Misty ordered, and the level twenty-one Water-type spat a machine-gun barrage of water bubbles at Sparky. Sparky went down, tumbling backward... and didn't get back up.\n\nI stared in shock as she transformed into blue energy and returned to the ball in my hand.\n\nI'd never allowed one of my girls to be defeated before. I was surprised at how much it hurt to realize that Sparky could have died, and only the safety function of her Pokeball retrieving her saved her life.\n\nShaken, I reclipped Sparky's ball to my belt, releasing Bubbles. \"Bubbles, Tackle!\"\n\n\"Starmie, Swift Hit!\"\n\nThe Starmie, far quicker than my Wartortle, launched into the air, spinning like a buzzsaw and slicing across Bubbles's midsection for a lot of damage before zooming back to his starting position.\n\nBubbles slammed into him immediately after, but he was too tough, too armored. She couldn't hurt him as much as he hurt her.\n\nHer Bubble and Water gun attacks would be even less effective than her tackle. Four more rounds of Swift Hits, and Bubbles went down, returning to her ball.\n\nAll I had left was a rock/ground type, and a fire type. Neither stood a chance of surviving. The Starmie was too strong, too fast, and had that Water Pulse attack that would decimate my remaining girls.\n\nI wasn't going to send them out just to nearly die immediately. I cared about them too much.\n\nSighing, I slouched, defeated. I really thought for a while that I'd get further than this.\n\nLooking Misty in the eyes, I surrendered. \"I yield.\"\n\n******\n\nTravis's Pokegirls\n\nBubbles - Wartortle - Lv. 18.\n\nSparky - Pikachu - Lv. 17.\n\nPebbles - Geodame(Geodude) - Lv. 17.\n\nBlaze - Charmander - Lv. 15."
    ],
    "authorname": "icedragonmo3",
    "tags": [
        "alternate universe",
        "anthro",
        "harem",
        "maledom",
        "monster girl",
        "monstergirls",
        "nonhuman",
        "pokegirls",
        "pokemon"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/kanto-ep-02"
}