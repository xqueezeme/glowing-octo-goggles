{
    "title": "Rachel Foots the Bill",
    "pages": [
        "Special thanks go to Literotica member, Smoothed for his help with editing.\n\nNote: this is a story that involves a man with a foot fetish. If this subject does not appeal to you, please find one that does.\n\n*****\n\n\"I'm gay? You told your new boyfriend I'm gay?! Come on Rachel. Seriously?\"\n\nBill couldn't believe what he was hearing.\n\n\"I had to, Bill! There was no way he was going to even go on a second date, let alone start dating me seriously if he knew my roommate was a guy!\" \n\nRachel felt as though she had no choice. She and Bill had been roommates for a year, and they had never so much as touched each other. Although she thought he was very cute, and he was a great guy, she never expressed any romantic interest in him, and he apparently felt exactly the same. She loved talking to him, hanging out with him, and having him as a roommate. She felt safe, he respected her, and he kept to himself. Besides, he was very neat and kept the place clean. She had no desire to get rid of him, so she had to come up with some story as to why she had a male roommate. It wasn't the first time she told a boyfriend her roommate was gay, it was just the first time that Bill found out. \n\n\"What if he knows someone who knows me? I can't have that out there! I'll never meet another woman with that reputation.\" Bill was growing agitated.\n\n\"You're making too much of this, Bill. Marty and I are just dating, and he lives nowhere near here. You won't have anything to worry about.\" \n\nRachel assured her roommate as she rinsed the plates from their lunch and filed them into the dishwasher. \n\n\"Please don't do that again,\" Bill pleaded, handing Rachel a glass.\n\n\"Bill, a good, decent man isn't going to feel comfortable dating a woman who lives with another guy. You and I aren't dating so...\" Rachel breaks her train of thought. She laughs and shakes her head to herself. \n\n\"What the hell was that?!\" Bill caught what he perceived as an overt display of disdain at the mere thought of a relationship with him.\n\n\"I'm sorry. It's just that you and I are totally not together as couple, you know? Anyone can see that.\" Rachel took a more respectful tone. \n\n\"Yeah, I know. It's a shame they can't see that so that I DON'T HAVE TO BE GAY!\" \n\nThe two were laughing now. \n\n\"Maybe I should play it up and act the part next time Marty is over here.\" Bill continued to tease.\n\n\"Honestly, Bill, he would rather spend time at his place since he lives alone. Besides, his place is really nice, so we will most likely hang out there.\" Rachel shrugged her shoulders.\n\n\"Nice, huh? What does he do?\" Bill sat at the bar that was part of the kitchen counter.\n\n\"He's an account manager for Citation Bank.\" \n\n\"Sounds boring.\" Bill looked over his shoulder at the clock. Ten minutes 'till Star Trek.\n\n\"He seems to like it. It pays enough for him to be able to afford a large condo and new furniture. Which is why we mostly spend time there. \n\n\"You have to drive back here in the mornings before work?\" Bill shook his head in disapproval. Rachel was beginning to think Bill was a little jealous, which he was.\n\n\"We're not sleeping together so that's not an issue. I always drive back at night when we see each other.\" \n\nRachel was drying her hands looking at Bill as she spoke.\n\n\"Oh yeah, the five-month rule. You still doing that?\"\n\nBill was impressed by Rachel's \"five-month rule\". She never had any sexual contact with a man until after they had been officially dating for five months. Rachel explained it last Halloween night when they were both stuck at home with the flu. It has saved her a lot of heartbreak as some men have given up on her after the first few weeks, others, after hearing about it for the first time. Her rule gave her some serious insight into a man's character and how seriously he was about the relationship. Rachel had discipline and Bill respected that.\n\n\"Yes, I'm still doing that. It's not a popular fad, that's for sure. Are you still trying to get to third base on the first date?\" Rachel said crossing her arms in her \"I'm starting some shit\" pose.\n\n\"You got that right!\" Bill responded proudly, smiling.\n\n\"Still single?\" Rachel smiled and walked through the living room to her bedroom down the hall.\n\nBill shook his head and walked over to the couch. He pressed the remote control and waited for the Star Trek re-runs to begin. \n\nRachel quietly closed the door halfway and lay down to read.\n\nRachel and Bill had been together for over a year now; and three months into their second lease together, the two had worked out most of the minor issues that roommates have when getting used to one another. \n\nBill rarely dated. He was one of three IT's for a local school district so he had a decent paycheck and never brought much work home from his job. He was a classic geek, and loved his geek hobbies. Rachel teased him, but watched most his sci-fi shows with him, which made her at the very least, a geek by association. Every now and then, Bill would hook up with a woman he met online. It resulted in sex about a quarter of the time, so he felt pretty good about his sex life. Rachel always thought he was better looking than he gave himself credit for. Six feet tall, dark brown hair, brown eyes, and skinny, he could do better than he normally did. He apparently wasn't into dating.\n\nRachel was about as attractive as Bill was, that is, they were both around \"sevens or eights\" out of ten in the commonly referred to attraction scale. Rachel had curly, light brown hair, a slender body with a round butt and full \"C\" cup breasts. Her mother's family was Scottish and Danish and her father was a not-so-religious Jew who had family from the Netherlands. She had a western European look to her. Bill always admired her perfectly flawless skin. No freckles, no moles or other blemishes. Just smooth, ivory skin. She worked on a marketing team for a pharmaceutical company and loved that she also rarely had to work at home or on weekends. \n\nAn hour later and Star Trek had finished and an old episode of Star Trek Voyager was wrapping up. Bill was laying comfortably on the couch and Rachel was taking a nap with her romance novel open on her chest. Little did he realize that the scene on the episode he was watching on the Voyager series would have a lasting impact on Bill's sexual future. \n\nBill's favorite masturbation fantasy involved popular cartoon characters and pornographic versions of sci-fi characters from TV. Seven of Nine, a female cyborg character played by Jeri Ryan from Star Trek Voyager was at the top of his list for \"fap\" material. Her slender body and large breasts were the main reasons for his fascination with the character, but in this episode, Bill was focused, for the first time, on her legs and feet.\n\nHer feet were sleek and perfectly formed. High arches, pronounced heels, pointed toes. This set his mind in motion. He turned the TV off and walked down the hallway to his room, passing a sleeping Rachel, he closed his door, opened his laptop and began searching for fake pictures of Seven of Nine to masturbate to. As he was looking through the photo shop images of Seven sucking a big cock and others with her tit-fucking a big dick, he came upon a one-minute video clip of an actress dressed like Seven, only half naked, getting her feet licked by a guy in a Klingon costume. \n\nThis scene caused Bill to cum almost immediately. He found it so insanely sexy, that he downloaded it and saved it to his hard drive...something he never did. He later found a longer version of the clip and managed to cum two more times as he repeatedly watched the woman get her feet licked and toes sucked by the man wearing the Klingon costume.\n\n'What the hell?' He thought. He had never had an experience like that before. The appeal of the video was so intense, so powerful, that he contemplated calling in sick the next day so he could masturbate to it for a longer period of time. \n\nHe went to bed with the thought of him caressing Jeri Ryan's feet.\n\nAfter waking up with a hard-on, he managed to get to work, and he was glad he did. It was a busy day and one of the teachers in his building needed several programs re-installed, so he was needed. Still, all day, he thought about Seven's feet and how that repulsive Klingon was having his way with them. Bill must have gotten hard four times. He began fantasizing about getting home so he could masturbate. \n\nHe arrived home later in the day.\n\n\"How was school, Bill?\" Rachel usually got home around the same time as Bill. Today she had already made it home and was in her shorts and T-shirt peeling potatoes for dinner.\n\nRachel and Bill usually ate together, or at least cooked enough food for both of them to eat at the same time. Sometimes Bill took his in his room, it just depended on the mood. \n\n\"Good. Hey, what are you making?\"\n\n\"Roast chicken, mashed potatoes, and a salad. Oh! You have to be gay tonight. Marty is going to stop by.\"\n\n\"I'm not going to be here when he comes over.\" Bill shook his head and turned on the oven for the chicken.\n\n\"Where are you going?\" Rachel was rubbing oil all over the whole bird as she spoke.\n\n\"Nowhere, but I'm in my room, and I'm not coming out for any conversation with Marty so you can just say I'm not here.\" Bill wasn't mad, but he did speak to Rachel as though he was put out. \n\n\"Ok. Sorry, Bill.\" Rachel pouted.\n\nThe two sat at the dining room table and shared the highs and lows of their day. Rachel was in a good mood and looking forward to seeing Marty in an hour.\n\n\"Dinner was delicious, thanks.\" Bill was finishing a chicken breast as Rachel was clearing her plates. \n\nJust then, something caught Bill's eye. \n\nA flash of red drew his eye to the source of the motion. He noticed that Rachel had long toenails with beautiful burgundy-red polish on them. It was the first time that he could remember ever noticing Rachel's feet. This detail caught him off guard, and it alerted Rachel that something was up.\n\n\"What?\" She looked at his stare, then looked at her feet. \n\n\"What, Bill? Did I drop something?\"\n\n\"No, no, nothing like that.\" Bill averted his eyes and again thanked Rachel for getting the dinner together. \n\n\"What is it?\" She was looking all around her legs.\n\n\"It's just, nothing.\" Bill was turning red. \"It's your toenail polish. I like that color.\" \n\n\"Oh. I had my toenails done yesterday after work.\" Rachel looked down at her feet, flattered that Bill noticed. That kind of detail was not on most guys' radars.\n\nBill cleaned the dishes with a growing erection and a strange nervousness deep within. He was excited, as if he was about to go on a blind date. It was an unusual feeling. It was a sexual feeling.\n\nBack in his room, Bill had his laptop out and was jacking off to his new favorite video. He maximized the screen and then focused on the part that was turning him on so much, her feet. Bill discovered he was becoming incredibly aroused by the licking and sucking of her feet.\n\nHe went to a huge free porn video website and searched for \"foot sex,\" but didn't get very good results. Then he typed in \"foot licking.\" These results were better. Page after page of video stills of women's feet being massaged, licked, sucked, rubbed, and fondled. He nearly came in his pants. \n\nHis first orgasm was watching a woman suck the toes of another woman. The feet were perfect. Red toenail polish, white, but slightly tan feet. Both women were naked, but all they did was play with each other's feet. He had never seen videos like these. He wondered why he had never seen any videos of foot sex, then he realized that there was a separate category in the Tags section for \"Foot Fetish.\" They probably didn't get sorted with the mainstream videos.\n\n\"Is that what this is about?\" He whispered to himself. \"Do I have a foot fetish?\" \n\nBill saved several videos to his account favorites. He had heard Marty come in about an hour ago and didn't want to make any noise so he continued to silently search for foot porn.\n\nHe opened, previewed, then saved, a couple of others. There was a lot of variation in the action. It wasn't easy to find the \"good ones\", which he defined as those that were exclusively feet; where feet were the main focus of the video.\n\nAfter a couple of minutes, Bill heard the front door close and he realized that Marty had gone home. It was still early, so he ventured out into the living room. \n\n\"Is it safe?\" He peeked his head out in an effort at humor. He could just see Rachel in the living room. \n\nRachel was sitting on the couch. The condominium smelled like a strange brand of after shave. Another man had been in his house. For some reason, this didn't sit well with Bill.\n\n\"Yes, you big dork. He's gone.\" Rachel scooted over to give Bill room to sit. It was an invitation.\n\n\"Everything okay?\" Bill collapsed on the couch as he usually did. The couch was his pride and joy. It was a six- thousand dollar perfectly cushioned, dark brown, leather couch with two matching ottomans. He loved his couch. He saved up from several paychecks for it, and he and Rachel loved to watch sci-fi and old horror movies on it after work and sometimes on weekends. \n\n\"Everything's good.\" Rachel grabbed a pillow and held it to her chest. She was in shorts and had her bare feet crossed beneath her.\n\n\"Doesn't sound too good, Rachel.\" Bill picked up on her shifting eyes.\n\n\"He said he was okay about the five months, but every time we get together he makes serious passes at me that force me to repeat my boundaries. It's really getting to be a pain in the ass. He obviously doesn't take my five-month rule seriously.\"\n\n\"Yeah, I can imagine that would get old. I can also see where he's coming from, though. He probably thinks you will change your mind any time now, so he feels he should at least try.\" Bill grabbed the remote, but didn't turn the TV on yet.\n\n\"Bill, I'm not going to change my mind. There's a very, very good reason why I have my rule.\"\n\n\"I know. I get it. I think you need to tell him before you go out with him to respect your rule, or you guys don't go out.\" \n\n\"I should say that, and I will, but I shouldn't have to say it more than a couple of times, you know?\" \n\n\"You're right.\" Bill laid his legs out in front of him and turned on the TV. \n\nRachel stretched out and lay her head on the opposite arm of the couch. She bent her legs so they would fit. Her feet were now about four inches away from Bill's right arm.\n\nBill caught an old movie on the Sci-fi channel. As he and Rachel settled-in to watch it, he found himself tempted to touch her feet. This temptation became a major obsession in a matter of about ten minutes. \n\nHe played out scenarios where he could touch her feet, but nothing seemed natural and every scenario seemed awkward and suspicious. He would have to work on this. \n\nDuring a commercial, he began to work on a way for him to get to touch her feet.\n\n\"My feet are killing me. I was running around all day.\" He figured if he introduced the subject, they may eventually get to a point where they could massage each other's feet. It wasn't a terrible plan.\n\n\"Yeah, I know what you mean.\" Rachel reached to her feet and began rubbing them. Then she offered, \"Have you ever tried cracking your toes?\" \n\nShe pulled on her big toe to demonstrate.\n\n\"I've never done that.\" Bill didn't touch his own feet, but continued to look curiously at hers.\n\n\"Here, watch.\" Rachel moved her body so that she was sitting upright and her feet were in front of her- still next to Bill on the couch, now almost touching.\n\n\"Take the palm of your hand and smash all your toes down toward the bottom of your foot.\" Her demonstration resulted in the \"crack\" sounds of her toes cracking.\n\n\"It feels really good, you should try it.\" Rachel meant for Bill to try his own toes, but he used the literal suggestion to reach down and touch Rachel's feet. \n\n\"You mean just push down like this?\" Bill gently placed his left hand under Rachel's left foot and used his right hand to force her toes down in the same motion that she just used in her demonstration. Just touching her feet brought him sexual chills.\n\nBill was paying very close attention to how Rachel reacted to his touching her feet for the very first time.\n\nRachel jumped ever so slightly, but didn't pull away. A good sign.\n\n\"Oh! Well, okay. Yes. I meant do your own feet, but that's no big deal.\" \n\nBill made sure and squeezed her feet firmly to get as much out of the fleeting contact as he could.\n\nThe soles of her bare feet were as soft as anything he has ever felt. He briefly rubbed his fingers against her arch as his other hand covered her toes. He relished the entire three seconds of contact and became erect at the short encounter.\n\n\"Try your feet.\" She suggested.\n\nBill took his socks off and repeated the action, which resulted in the familiar \"pop\" of his own toe knuckles cracking. \n\n\"It works!\" Bill beamed. He had done this before, but played up the newness of the experience to keep the conversation on the subject of feet.\n\nIt felt very good, actually. Although, he was still trying to find a way to have contact with her feet. His plan would be to move slowly and work up to massages. If he were to bring up the subject now, she may shy away and never let her guard down. \n\n\"That's really helpful, Rachel. My feet are killing me after work most days. That helps a little.\"\n\n\"It does feel good, doesn't it? Have you ever tried soaking your feet in Epsom salt and hot water? You should do that.\"\n\nRachel was rubbing her feet with her hands as she spoke to him. Bill had to force himself to look at the TV and not stare too long at her perfect toes all painted burgundy-red and wiggling right in front of him.\n\n\"I think I'll start doing that tomorrow. Maybe look into getting my feet massaged professionally.\"\n\nBill was thinking long-term approach. He thought if he could just keep the plan going by making it a consistent topic, she may agree later on to massaging his feet, and then in an act of repayment, he would massage hers, which would be the ultimate goal. \n\nIt was a long shot, but it could work, and the risk of her becoming offended or turned off was low. He planned on soaking his feet tomorrow and asking her afterward. It would take a little planning because he didn't know where to get these Epsom salts. He was about to ask Rachel when she interrupted his thought.\n\n\"Professionally? Don't be silly. That's too expensive.\"\n\nRachel straightened her body so that she was sitting straight up in the couch. She moved her feet to the ground and put her legs together. She pat her legs three times in succession and motioned with her hand for him to place his feet in her lap.\n\n\"Come on, let me have 'em.\" She smiled innocently. \n\n\"My brother and I used to give each other foot rubs all the time. He played soccer in high school and his feet were always stiff and sore.\"\n\nBill was concerned about the full erection he was sporting in his own shorts. He could not let her know that his giving her a \"foot rub\" would be a sex act in his eyes, or at least that's how he perceived the proposition. It was too good to be true, but it also made perfect sense. Family members rub each other's feet all the time. The entire subject was a very innocent one to Rachel, that much was obvious. \n\n\"I haven't taken a shower yet, so...\" He warned.\n\n\"It's okay, I won't rub between your toes, how's that?\" Rachel was insisting he put his feet in her lap.\n\nBill got up to use the restroom and used a washcloth and soap to wash his feet as quickly as he could. He didn't want anything to upset this rhythm he had with Rachel right now. \n\nShe was still sitting on the couch waiting when he returned.\n\nBill lay on the couch at the far end from where she was sitting and gently lay his feet so that his heels were resting in the crease between her legs on her lap. ",
        "Rachel picked one foot up and began rubbing her thumbs into his heel and arch. She worked in a pulsing motion, digging into his flesh and the muscle and bone under it. She didn't look at him, but just watched TV as she worked on his feet. It was the most platonic and natural physical contact he had ever experienced from someone he found to be attractive. \n\nHe wasn't getting any sexual satisfaction from the experience, although having her touch him felt extremely good, and the massage was wonderful. He continued to think about what it would be like for him to touch her feet. He was taking mental notes on her style and what she did. He had no experience with this and really wanted to keep her interested. \n\nShe had been rubbing his feet for ten minutes without so much as a word or a glance his way. It would soon be time to test the situation. Would she want him to reciprocate? \n\nShe finally spoke as a commercial break came on, \"How was that? Awesome, right?\" \n\nBill nodded.\n\n\"That was amazing. I can't believe this is the first time I've had my feet massaged. It really helps, Rachel.\"\n\nBill was as encouraging as possible.\n\nBefore he could think of the next encouraging word, Rachel slid herself sideways and put her feet in his lap.\n\nThere they were, right in his lap: Rachel's cute, dainty feet. She wiggled her toes slightly. The red polish looked flawless over her toenails.\n\nBill was absolutely shocked, and extremely turned on.\n\n\"Now it's my turn.\" By her movements, Bill could tell she looked forward to the massage and moved quickly as if to discourage him from saying \"no.\"\n\nThis was unbelievable to Bill. He hesitated for a moment, not knowing what to do. This was all happening so fast. He just recently realized that he was sexually attracted to women's feet and now here he is massaging his roommate's insanely sexy feet. After a few moments, he calmed down realizing that to most people this wasn't a big deal. \n\nBill moved her feet so that they rested just below his crotch in the same general area hers had rested in. He vowed to give her the best massage of her life so that she would want them all the time. \n\n\"How hard do you like your feet rubbed?\" He asked while holding one foot in each hand as they lay in his lap.\n\n\"Don't make me scream, but I like it pretty firm. I'll let you know if you get too rough.\"\n\nRachel was looking sideways at the TV watching the movie so she wasn't staring at Bill like he was doing to her. It was a good thing too, because that would have made him extremely nervous.\n\nBill began his massage. It became immediately obvious that this was not sexual to her. She closed her eyes in pleasure a couple of times in the beginning, but it didn't develop into anything. She was watching TV and really didn't pay any attention to Bill at all. \n\nBill realized that his newly discovered foot fetish was not shared by Rachel. In fact, she saw this entire massage as more of a family sort of activity. This was very fortunate for Bill as it may just work out that he will be able to have access to her feet on a regular basis.\n\nHis mind was racing as he rubbed her feet. He was having an inner dialogue: \n\n'How can I touch her feet sexually without her knowing what I'm up to?'\n\n'What do I want from this?'\n\n'How can I get this to become a regular \"thing\"?'\n\nThe concept of getting his hands on her feet and the realization of that concept had happened so fast that he didn't have time to plan, therefore he really had no goal in mind. \n\nHe was very na\u00efve about his own, newly discovered sexual fetish. He needed time for it to evolve. What he did know was that he wanted to masturbate and touch them at the same time. He couldn't do that, so he had to be satisfied with just touching and rubbing for now.\n\nAfter massaging for a few minutes, he worked her feet into a new position and started to rub one foot at a time. Picking up her left foot, the foot closest to him, he began doing only what he felt like doing, and not what would necessarily feel good to Rachel. Softly squeezing and caressing her smooth arches and the tops of her feet. He was moving his fingers up and down, sliding them gently from side-to-side. He used his thumb to rub small circles into her heel. He pet her foot as though it were a sleeping puppy. He ran the back of his hand against the softest parts, enjoying every second. He continued this for several minutes.\n\nFeeling someone was watching him, Bill looked up from his sexual trance to see Rachel looking right at him.\n\n\"You call that a massage? What are you even doing?\" She had a critical expression on her face.\n\n\"Sorry. I was thinking about something else.\" \n\nFearing he may be discovered and he might creep Rachel out, he took to the task at hand.\n\nBill dug his thumbs into her smooth flesh and ran them along her muscles and tendons along her soles.\n\nRachel sat back and relaxed again.\n\n\"That's more like it.\" She affirmed. \n\nShe looked back at the TV as Bill massaged her feet.\n\nFearing another confrontation, he combined hard pressing and twisting with caressing. He would use his right hand to manipulate the digits of her toes, then caress her arches with his left hand. When he pressed his thumb into her instep, his remaining fingers gently fondled the outside of her foot. He was able to make combination moves like these and create an approach to the massage that Rachel must have found pleasing as she began do doze off.\n\nBill returned to his fondling of her feet and visualized stroking his cock as he touched her. He did this for another five minutes before he was so hard that he felt he might not be able to control himself. Reluctantly, he woke Rachel up so he could excuse himself to jack off.\n\nThey said goodnight to each other and went to their rooms.\n\nBill's first foot massage lasted twenty-five minutes. Twenty-five minutes of maintaining a fully turgid erection. Twenty-five agonizing minutes of constant touching her toes, soles, heels, and all the other parts he had yet to learn the names for. It was a very successful evening as far as his new-found fetish was concerned. Lots of hot moments that he soon recalled as he came twice in rapid succession that night in his room.\n\nHe was hooked. Feet were his new thing.\n\nBill was looking forward to a repeat the next day. During work, he planned how he would go about setting up another foot massage session. It wasn't until he was home did he get a text from Rachel:\n\n-GO AHEAD AND EAT WITHOUT ME. I'M HAVING DINNER WITH MARTY- CYA AROUND 9:00-\n\nBill thought about what he wanted, sexually, from Rachel. He wanted unfettered access to her feet and he wanted to be able to masturbate while he touched them. He was also becoming interested in the idea of sucking her toes, licking her arches, rubbing her feet against his penis, and fucking her feet together.\n\nHis sexual obsession for his fetish was escalating at lightning speed. A past history began to pop into his head. He began to have memories of him rubbing his mother's feet when he was a boy. His mind was being bombarded with recollections of how much he liked women in heels. All of these observations were flooding his mind as he lay in bed, naked and waiting for his laptop to boot up. \n\nOver the course of the year, he had masturbated to a fantasy involving Rachel more than one time. She was going on a date with a boyfriend when they had just moved in. She needed him to zip her up and he saw her breasts when her dress accidentally slid down too far. The image stuck with him after she had left and he jacked-off to the memory. He didn't think Rachel was a prospect since she always dated men that were a few years older, and she was a really decent person. She was a great roommate, more like a cousin than a potential lover. \n\nHis computer was now up and he was watching a video he had saved from the other night. He started masturbating to the thoughts of last night's twenty-five-minute massage session. He envisioned that he had his cock out and was rubbing it against her feet. He couldn't get this thought off his mind. As he fantasized more on the scenario, he could see a way where he could sneak it out and try something.\n\nThe question was whether or not he wanted to risk the relationship with his roommate over it.\n\nRachel came home around ten o'clock. Bill was already in bed and she went straight to her room. \n\nTo Bill's dismay, he wasn't able to give her another foot massage for two more days. Rachel was busy with Marty doing some shopping for clothes or something like that. \n\nIn the meantime, Bill was beginning to notice the footwear that the women at his work were wearing. Teachers, administrators, administrative assistants, he made it his job to notice them all. He loved watching bare feet in sandals the best. The flat-sole of sandals cause the foot to spread out a little. Heels were still his favorite, and there were plenty of teachers who wore heels at the various schools he worked in. \n\nHe became fixated with toenail polish color. He saw quite a bit. Black, purple, orange, and every shade of red. He loved red. He made a mental note of the women who had glitter on their toenails as well as the few who had toe rings. He thought these were the women who most likely would appreciate a foot fetishist. \n\nAfter his day of obsessing over nail polish, he had an idea. He would give Rachel a gift card to the manicurist that had a shop in the strip mall across the street from their apartment. Rachel would then get her nails done and be more likely to show her feet to him. He had lots of ideas like that. \n\nSince her birthday was last month, he couldn't give it to her for her birthday. Besides, he already gave her a gift then. He had a thought about what he would tell her to get her to accept the card. 'We had a drawing at work and this is what I won. There's so many women that work with me, she would believe it.' Bill was satisfied with that approach.\n\nOn his way home, Bill purchased a one-hundred-dollar gift card and had them specify that it was a pedicure card, although the cashier said she could use it for anything, he still wrote \"Pedicure\" in the blank space under the amount.\n\nWhen he was home and was placing his key in the lock, he wondered if there would be an opportunity to give Rachel a foot massage that night. He couldn't let her know that it was something he felt so strongly about; it had to come naturally. \n\nBill was thrilled to see that Rachel was already laying on the couch with her feet where he normally sat, watching an episode of the Twilight Zone, one of Rachel's favorite shows. She was dressed in a pair of white track shorts and a red tank top. Her legs looked tanned and soft.\n\n\"Hey! How's it going?\" Bill came in, bolted the door behind him, and walked into the living room area on his way to his bedroom.\n\n\"Tired. I came home, took a shower, and here I am. Marty is exhausting!\" \n\nRachel looked so sexy reclining on the couch. Bill had a difficult time not staring at her legs and feet.\n\n\"Exhausting? Why's that?\" \n\n\"Last night's shopping excursion. He's difficult to shop with. He likes to try everything on. It takes forever.\"\n\n\"Oh, I see. You wouldn't expect that, would you?\" Bill shook his head slightly.\n\n\"I didn't. he takes longer than I do to pick out clothes. He's out of town for a couple of days, so I get to relax! Want to watch Twilight Zone?\"\n\nHer tone was hopeful. Bill's dick got hard.\n\n\"Sure! I'm going to change first.\" \n\nBill casually continued on to his room, but once inside, he hurriedly slipped off his clothes, put on a pair of loose-fitting soccer shorts and a T-shirt, and washed his feet quickly in his bathroom. He purposely left his underwear off so he could have access to his dick in case she let him give her a foot massage. The only problem he faced would be trying to hide his erection, which was presently threatening to tent his shorts in the absence of underwear.\n\nBill's heart beat loudly in anticipation of his giving her a massage. He mentally calmed his stiffening member.\n\nIn the living room, Rachel was still lying sideways on the couch. Her feet toward the end. Her legs were long, smooth and very sexy. Her feet were pointed. One of the sexiest poses Bill had ever seen her in.\n\nBill approached the couch and stopped at \"his\" side. \n\nRachel looked up at him, smiled innocently, then bent her knees into her chest to make room. She kept her legs pulled close to her chest and rocked a little as though she was stretching. Bill sat just a little closer to the center than he normally would. He spread his legs slightly which revealed a semi-erect penis creating a wad on the left side of his leg.\n\nRachel was glad Bill had no plans. She needed a few hours of relaxing time with her \"TV buddy\" as she referred to him once after binge-watching almost all of Breaking Bad in one weekend. She enjoyed her time with Bill. He never made a pass at her, and she really appreciated that. She found him very handsome, even if he was a little young for her tastes.\n\nRachel looked over at Bill.\n\n\"Have you seen this one?\"\n\nBefore she could return her attention to the TV, she noticed an unmistakable bulge in his shorts. \n\n'Oh, my goodness! Wow!' She thought. She had a habit of purposely looking away from men's crotches, just to avoid being caught, but Bill's was only a few feet away and she couldn't help herself. She became instantly flustered. Then she thought about it, and decided she liked seeing this side of her roommate; she liked the idea of him sitting next to her with a semi-hard-on. It was hot. She could trust Bill, and she knew he wouldn't try to come onto to her like the other men in her life. She liked to tease and she was in a playful mood. Seeing his bulge gave her a much-needed boost of energy.\n\n\"Hey.\" She sat up.\n\n\"What?\" Bill looked at her curiously.\n\nWhile she was looking at the TV, Bill smashed his groin with his hand in hopes to move his growing erection in between his legs. Bad idea to go without underwear.\n\n\"Rub my feet.\"\n\nRachel had a strange, mischievous look in her eyes. He hadn't seen that look on her before. \n\nShe placed her feet in his lap as she sat attentively watching him. She seemed to take a sudden interest in his massaging her feet.\n\n\"Will do.\" Bill was ready. He wanted to go wild on her feet, bring them up to his mouth and kiss them, press them into his nearly full erection. He wanted to cum all over them.\n\nBill began by using his thumbs to rub her instep- both at the same time. He kept her feet together as he pushed and pressed her smooth skin. His eyes watched her sexy feet as they came precariously close to his throbbing cock. He managed to keep his dick from springing up from between his legs in his shorts. He had it wedged between his legs and he dared not separate them or it would rise up and make contact with the soles of her feet or her toes. \n\nRachel could see how close her feet were to Bill's crotch. She'd seen the thick tube, which now seemed to be tucked away. But she knew enough about anatomy to know that it was somewhere near her feet. She didn't want to do anything overt. She just wasn't the type of woman to make such blatant sexual overtures, and in this situation, she feared that doing so could cause Bill to expect sex from her in the future. She didn't want that. She needed Bill as a friend and as a roommate.\n\nAs Bill was massaging her feet, she could see more of his thick muscle as it filled the fabric next to his leg. It was almost long enough to extend out past the edge of the leg of his shorts, although she couldn't see where it actually ended. She had never noticed that her roommate was so endowed before. She found it difficult to maintain the boundaries of their relationship when she was becoming so turned on by everything that was happening. The only course of action she felt she could take, without making a sexual advance was to play dumb, so she did.\n\nRachel wanted the teasing to continue. She was excited by the fact that Bill was obviously getting off on her feet, or rubbing her feet, or just touching her, whatever the reason, she was turning him on. She decided she would pretend to go to sleep and see what he would do. \n\nBill continued to rub both feet together while keeping his cock clenched between his legs. He was relieved when Rachel's interest moved from his massage back to the TV. He took the opportunity to switch his focus to her toes.\n\nBill loved her toes. Long, but still very feminine. She had just enough space between each to allow his fingers and thumbs to ease between them without too much separation. Her burgundy toenails were glossy and slippery to the touch. He took his time with each individual toe, twisting it, pulling it, bending it down. He would work on one toe, then move to the next, giving it just as much attention as the last. It took him about ten minutes to work through both feet. \n\nHis erection had calmed down slightly. He felt he could control this. That is, until he noticed Rachel had apparently dozed off.\n\nBill stared at his roommate and noticed her eyes were closed and her breathing was deep and regular. She had fallen asleep much like she did the other night.\n\nDeep in his groin, he felt a surge of blood that caused his thick cock to pop up from its lair and form an obvious and prodigious bulge in his shorts. There was no mistaking his erection. It flared up out of his crotch, straining against his shorts. He could see it bob from his now rapid pulse. It was a beast that needed to be freed.\n\nAs Rachel slept, he continued rubbing her right foot as his left hand slowly pulled the left leg of his shorts up. He used his fingers to position his cock at the opening.\n\nAll he'd need to do was pull up another inch or so and he'd spring out. He was going to do it.\n\nRachel allowed her head to drop back, tilted slightly toward the TV, but still facing toward Bill enough to see clearly all that was going on. From this position, her eyelids appeared closed, though they were open ever so slightly. She could see just enough to see everything that Bill was doing, and was about to do. She had a very difficult time breathing slowly when her heartrate was about as fast as if she had just returned from a jog. \n\nIt looked as if Bill was trying to work his penis out, but she couldn't understand how he was planning to be sexual with her when she was positioned on the other side of the couch. She knew enough about him to know he wasn't usually the kind of guy that would just whip it out, yet here he was about to do just that.\n\nRachel watched Bill shift and scoot his shorts up his leg. The large head of his penis popped out and was suddenly followed by a good six inches of arched, veiny shaft. She could see a glistening bead shining at the tip, illuminated by the flashing TV images.\n\nBill quickly grabbed his engorged shaft and very slowly and purposefully began stroking it. He didn't want to disturb the rhythm that would keep Rachel asleep, but he needed to stroke his cock, he had to stroke his cock.\n\nRachel trembled, watching him and tried her best to remain still. It seemed like he had a lot of it out, yet there was still quite a bit under his shorts. The whole scene excited her deeply. She had never experienced anything even close to what was unfolding right before her. 'What was he going to do with his penis out like that?' She found it very difficult to maintain her fake deep-sleep breathing. She was becoming aroused.\n\nHis cock was now in his left hand and Bill attempted the ultimate: to rub his cock against the arches of her feet. He moved his grip closer to the base of his throbbing member and touched the sole of her left foot. An electric charge caused him to physically shiver for a moment. The rush was more intense than he was prepared for.\n\nRachel steeled herself and remained docile. She felt the warm head press into her sole and the wetness from the tip smear into her skin. ",
        "He looked up to make sure she was still asleep. Most likely, she would only feel what would appear to be his hand upon her arches and soles of her feet. He dragged the swollen head of his cock from the heel of her left foot all the way up to her toes, then reversed direction and pushed it down the same course. He could see the shiny trail of pre-cum that created a thin, clear line on the bottom of her feet. \n\nRachel's pussy was gushing, her skin had goosebumps; she was shaking slightly from pure arousal. This was so far outside anything she could or would have ever thought would happen to her that she felt as if she was having an out of body experience. Bill was rubbing his penis against her feet! 'Oh my God! Oh my God!' seemed to be all she could think.\n\nBill had most of his cock out now and was drawing it across the toes of her left foot. He dragged it like a stick across a picket fence. With all this stimulation, he knew he wouldn't last much longer. He used his hand to stroke his shaft while he rubbed his cock head against the bottoms of her toes, gently at first, and then using more pressure. He felt his cock head swell.\n\nHis penis began to shake. His body convulsed slightly, then shivered. He was beginning to cum. He clenched as best he could and spurted a clear jet of precum messily between her toes. The main event was impending.\n\nAs quickly as he could, he lifted Rachel's feet and leapt off the couch in an effort to redirect his surging ejaculation. He felt his cock buck as hot cum began shooting out. His left hand was involuntarily stroking in the throes of an intense orgasm. He stumbled and fell on the floor in front of the TV. Pumping his cock with his back turned to Rachel, he cupped his hot semen into his hand and quickly wiped it onto his T-shirt. Getting up and still feeling the orgasm he stumbled noisily into his room and shut the door. He collapsed on the floor, panting.\n\nHe prayed that Rachel didn't wake, but knew she must have with all the commotion he had just made. After a few minutes, he picked himself up, tossed his cum-soaked T-shirt in his hamper and washed his hands.\n\nBill had a wide smile on his face. 'That was unbelievable.' He thought. He realized he had unlocked a powerful, yet heretofore unrealized sexual side to himself that was triggered by his recent sexual interest in feet. He shook his head, then came back to the reality that Rachel was most likely awakened by his reckless fall and stagger into his room. \n\nFearing she was still in the living room wondering what happened, he opened his door and peered down the hallway. The lights were off, the TV was off. He looked to Rachel's room, her door was closed and it appeared her lights were out. His watch read after ten o'clock. It was time for bed anyway. He closed his door and went to bed for the night feeling totally and completely sexually gratified. \n\nDuring Bill's foot-massaging jack-off session, Rachel felt her pussy become so wet and so sensitive that she feared she would not be able to control herself. Peeping at Bill through her partially closed eyelids, she was able to see him nearly erupt all over her feet. \n\nShe found it difficult to hold her laughter after watching him fall to the ground and scurry off to his room. She thought at the time that he looked like one of the Three Stooges. Once Bill was in his room, she tentatively pretended to wake up. Bill's door was solidly shut. She had felt his warm precum jet between her toes and now slipped her fingers into his mess. It wasn't actual cum, but it had heralded an intense climax for her roommate. This turned her on immensely. She got up and immediately retired to her own room. She was dying to have an orgasm after seeing her roommate's beautiful, thick penis.\n\nRachel turned her lights out and lay on her queen-sized bed. She removed her shorts and panties and lunged at her dripping pussy with her hand. Her degree of wetness was embarrassing to her as she rarely ever became so aroused. \n\nUnlike Bill, masturbation was not a normal part of Rachel's day, in fact, it had been weeks since she masturbated last. The scene she witnessed just a few feet away in their living room was just too hot to ignore. \n\nAs she began to press her fingers against her hard clit, she was thinking of the incident that just took place but a few minutes ago. She began to wonder 'what caused Bill to all of a sudden take a sexual interest in me? We have watched countless movies and shows together, spent long nights talking about my boyfriends, shared meals, celebrated holidays together...why now?' Rachel couldn't figure it out until she made the connection: 'Bill and I have never touched until we started giving each other foot massages. That must be it!'\n\nShe thought back to his enthusiasm about her feet; to the gentle rubbing she observed, which, at the time, she thought was strange. These thoughts quickly led to her most recent images: his throbbing, arched penis. She'd first seen the big bulge in his shorts, and soon he was stroking it right in front of her as she pretended to be asleep.\n\nHer pussy throbbed and gushed as she used her first three fingers to smash into her labia and clit at the same time. Rubbing her mound, she thought about how perfect his penis looked. It was a darker color than his leg so it stood out, it was thick and very muscular in its appearance. She also thought it looked silky and soft and imagined it must be amazing to touch. She envisioned reaching over and stroking it for him. She wanted to switch places with her feet so she could get her face right up to it. \n\nRachel Stuck two fingers into her pussy and pumped several times as she thought about how smooth and slippery it would feel in her mouth. She wanted to kiss it, lick it, suck on it. The speed of her thrusts increased. Feelings about her kind, friendly, companion changed from innocent to naughty as she continued to think about him touching her feet. \n\nRachel and Bill were introduced to each other by one of Rachel's friends who worked with Bill in his district. The two hit it off as friends immediately. Bill helped Rachel set up her Wi-Fi in her apartment and discovered she needed a roommate. The two had been close friends, roommates, and confidents ever since. He had always been so respectful and appropriate, like a brother more than a roommate. The prospect of Bill's importance changing from that of a best friend to a lover, excited her. She was suddenly overwhelmed with feelings for him. His comfortable, familiar ways always made her feel warm and accepted. It was thrilling to feel sexual toward him too! \n\nThinking of Bill's handsome face and his kind and innocent disposition only intensified her arousal. These feelings- combined with the image of his thick, meaty penis- finally caused Rachel to approach her orgasm. As she thought of his tapping her feet with his cock, smearing and messing them with precum, she finally reached her climax. A rush of pleasure consumed her mind and body as she panted and softly moaned. She turned her head into her pillow and muffled her breathing so as not be heard. What began as rubbing and gentle penetration of her hot, wet pussy had turned to forceful thrusts, two fingers, then three. She used her fingers to fuck herself to one of the best orgasms she could remember. \n\nIn the afterglow of her climax, her thoughts returned to Bill. 'Why am I so happy?' She broke a broad smile as she stared at the ceiling of her dark room. She was thinking of Bill. She knew Bill genuinely liked her. She could feel it, she has experienced it. He had come through for her on so many occasions. Never once did he make a pass at her, or make her feel uncomfortable. Watching him behave sexually was a surprise, no, a shock, but she loved it! She loved seeing that side of him, and seeing that he was well-endowed was such a turn on for her!\n\nShe turned sideways on her bed, pulled up her covers over her shoulders, and visualized her plan. She would continue to play dumb. She will pretend like she never saw anything; like she didn't even realize he had left the room. She will definitely keep the foot massage routine going, as that was what triggered this wonderful turn of events.\n\nShe will be sure to initiate that again tomorrow.\n\nRachel fell asleep to the fantasy of how her life would change as her relationship with her roommate took on a different importance to her. It was the first time that she was actually excited about her life in years.\n\nBill leaves for work about thirty minutes before Rachel, so the two rarely crossed paths in the morning. Rachel was usually putting her make up on by the time Bill would leave, except today. Rachel made a special effort to get up a little early so she could see Bill. She awoke in about the same mood as she was in when she fell asleep: a magical, wonderful state. She was enjoying the first pangs of romantic love.\n\nShe heard Bill making coffee in the kitchen and donning her short silk robe with nothing underneath, she decided to have a talk with him early in hopes to encourage him to come home and relax that evening. She felt free and sexy in her robe, which is why she wore it, and why she wore it without anything underneath.\n\n\"Good morning!\" Rachel entered the kitchen and poured some coffee. Bill was sitting having a yogurt and looking at his phone.\n\n\"Hey, Rachel. Good morning!\" \n\n\"Sorry I fell asleep last night. I was so tired!\"\n\nBill was dying to know whether or not she saw anything. So far, at least as far as he could tell, she had no idea what he had been up to.\n\n\"You didn't see me trip and fall on my way to my room?\"\n\n\"I heard you, and that's what woke me up, but by the time I opened my eyes you must have gone to your room already.\"\n\nBill's relief was total. He had escaped an awkward, perhaps relationship-ending confrontation. His mood immediately improved.\n\n\"Sorry about that.\" He apologized.\n\nHe finished his yogurt and poured more coffee into his travel cup. \n\n\"Well, off I go. Have a great day, Rachel!\" \n\n\"Thanks, you too! Oh, Star Trek tonight, right?\" \n\nRachel wanted to say something that would let Bill know she would be staying home that night so they could repeat another foot massage. \n\n\"Yep. They're still in Season One, so it should be a good one.\"\n\n\"See ya!\" Bill was on top of the world. Not only did Rachel not see anything last night, it sounded like she was most likely going to be home tonight. He would spend the day thinking of different scenarios involving his cock and her feet. 'It will be difficult to stay focused today!' he thought. \n\nRachel was delighted that they would get another chance to touch tonight. She was thinking of asking for a back rub to get him closer to her body, but she would have to think that through. As she was silently plotting what was going to happen this evening with Bill, Marty called wanting to go out that night. \n\nShe explained that she wasn't feeling well and felt obligated to reschedule for the next night, Friday instead. Marty wasn't pleased about it, but arranged to go out then. Speaking with Marty reminded her that she wasn't happy in that relationship. The phone call interrupted her good mood which was more about her being excited about what was happening with Bill, than anything having to do with Marty.\n\nBill managed to finish his day without any major problems. There were a few new laptops he had to set up, and a projection screen issue with a classroom computer, but other than that, it was an uneventful day. He couldn't wait to get home and change clothes. He was planning on giving Rachel the pedicure gift card tonight, something he had forgotten to do earlier.\n\nRachel had two major meetings at work and was busy most the day. She found it difficult to focus on anything other than Bill's sexy penis and the time they will have together later. He made her feel wonderful and she even felt a strange new confidence in her feet. She found herself strutting around the office, somehow proud and relaxed about it at the same time.\n\nShe was surprised at how quickly her romantic feelings had developed for Bill. She attributed this to the fact that she had already known him so well, that this new, physical development changed how she viewed him dramatically. She was smiling uncontrollably toward the end of the day knowing she was going home to such a handsome and well-endowed roommate. \n\nBill was first to arrive home. He jumped in the shower to rinse off from his day and once he had changed into a pair of shorts and a T-shirt, he ordered Chinese food for both he and Rachel. As he waited for both his roommate and their food, he strategically placed the pedicure gift card on the kitchen counter. He would go with the story that he won a raffle that he never remembered entering at work. There's no reason he could think of that Rachel wouldn't believe it.\n\nRachel came home about fifteen minutes later than usual. She strolled through the tiled kitchen in her heels to get to the living room area. On her way, she noticed the envelope with her name on it. \n\n\"Hey, Bill. I'm home!\" She called out, looking across the space to the living room.\n\n\"Hi Rachel. How was your day?\"\n\n\"Good. Busy. Hey, what's this?\"\n\n\"It's a prize from a school raffle. I thought you might like it.\"\n\nRachel opened the envelope and read the gift certificate and the card attached to it.\n\n\"Wow! That's awesome! Thank you, Bill! I can't wait to use this. I think I'll make an appointment for Saturday morning.\" Rachel gave Bill a hug. As the two embraced, Bill felt Rachel hold him a little longer than he felt she normally would when they have hugged in the past. When they broke off their hug, He thought he saw her look at him with a strange expression.\n\n\"I'm going to take a quick shower and change.\" Rachel walked to her room and closed the door.\n\nThe Chinese food arrived just as Rachel appeared in her shorts and tank top looking as hot as ever. \n\nThe two had a nice dinner watching a home improvement show on TV while they ate. After cleaning up, Bill returned excitedly to the living room and switched channels. Sitting in his usual spot, he hoped Rachel would soon join him.\n\nRachel watched Bill sit at his place on the couch as she finished loading the dishwasher. She wondered when she should ask for her foot rub to get things started. \n\n\"What episode is this?\" Rachel had sat on the couch a little closer to Bill than she normally would sit. She was excited and found she longed to be touched. For the past two days, she has been thinking of Bill and how much their relationship meant to her. His exposing himself to her last night indicated that he was sexually interested in her, which she found intriguing and caused her to think of him differently. Now, she was wanting to experience a different side to her roommate and friend. \n\n\"Tonight's episode is 'Arena', the one where Kirk has to fight that reptilian captain of an alien ship. I don't remember that much of it because I haven't seen it in ages.\"\n\nBill had his legs extended outward, his feet and arms were crossed. \n\n\"I remember seeing that one before. The first season was weird,\" Rachel shared.\n\n\"Yeah. It was.\" Bill looked over at Rachel. She was sitting on her legs and facing more toward him than the TV. He wanted to grab her feet and suck every toe into his mouth while he stroked his cock. He also began wanting to kiss her and touch other parts of her body. His foot fetish had caused him to realize he had deep feelings for Rachel. He found himself wishing she didn't have a boyfriend.\n\nRachel was wearing the shortest pair of shorts she had. A pair of silky yellow running shorts she never wore anymore. She had a tight red T-shirt on without a bra. She loved to go bra-less, but never did as she never wanted to give Bill the wrong idea. She looked sexy, but not over-the-top. She felt as though she was just a spectator in tonight's activities. Her feet were cold so she had on a pair of pink ankle socks. She was eager to see where this was going to go. \n\nBill was disappointed about the socks, but he would simply take them off if there was going to be any foot massaging, so he wasn't too worried yet. He could feel blood flowing into his penis as he sat watching TV. He was silently praying that she would be receptive to a foot massage. His plans were exactly the same as last night's. He knew he was taking a huge risk by trying to masturbate right in front of her. He told himself he would only do something like that if she were asleep. Part of him felt badly about using Rachel for her feet, but at this point, his sexual urges were just too powerful to not attempt some sort of contact. \n\nPulling her feet up and out from under her so that they rested on the coffee table, Rachel leaned forward and rubbed her toes through her socks. Bill's eyes were drawn to her long and smooth legs and the way they disappeared under her shorts. She had a lot of leg showing. This was encouraging to Bill who was constantly wondering if Rachel would be receptive to another foot massage or any other touching, for that matter. \n\nThe two settled-in as Star Trek began. Bill was not into watching the series, so his body remained angled toward Rachel. His cock was once again halfway erect and resting against his leg. He desperately wanted to feel her feet resting in his lap again. \n\nRachel had positioned herself closer to the center of the couch and was also angled slightly toward Bill. She was trying very hard not to look at his crotch. Rachel was not a slut, nor had she ever been very forward in letting her interests known to a male suitor. These past two days had been exciting partly because she had allowed herself to do a little teasing and at least to her mind, had been slightly forward, something that Bill was beginning to take notice of.\n\n\"How is it that I am on my butt all day at work and my feet still ache.\" Rachel nervously threw out the bait. She knew Bill would take it, after last night, she knew he was most likely going to want another repeat performance. \n\nMimicking her gestures from the other night, he straightened his lap and patted his legs as an invitation for her to position her feet for a foot massage. His cock filled with blood instantaneously and filled the fabric next to his leg to the point where it was noticeable to Rachel.\n\n'Oh my God. There it is again. I love it!' She thought, unable to help herself from the faintest of smiles. Rachel was laid out sideways facing Bill. Before she put her feet on his lap, she could see what looked like a thick pipe under his white athletic shorts. She felt her pussy quiver as her heels made contact with his thigh. She decided she was going to be a little more aggressive tonight and move her feet a little more, which should lead to more contact.\n\n\"Let's get rid of these, okay?\" Bill lifted each foot up, removing the soft sock in the process. He then placed her feet back down on his lap.\n\nWatching how carefully Bill handled her feet provided Rachel with a sudden, albeit minor, epiphany. It all came together for her in that moment; the way he more or less caressed her feet, rather than massaged them, the compliments he had been making all-of-a-sudden about her feet and toenail polish, his removing her socks now, and especially the pedicure certificate that she was supposed to believe he won at work. It all led her to the conclusion that Bill had a thing for her feet. 'That explains why he was so turned on last night, too!' She concluded.\n\nWith this new theory in her mind, Rachel decided to have some fun with it and at the same time confirm her suspicions. She pointed her toes and raised her right leg. She ran her hands up her leg from her ankles to her thigh. \n\n\"You know, I should just let my toenails go bare for a while. Take the polish off and just keep them natural. I think I would rather use the pedicure gift card for manicures.\" ",
        "Bill fell right into her trap.\n\n\"Oh, I don't think you can do that. It says 'pedicure' right on the card,\" he blurted out.\n\nOf course, this protest immediately sounded ridiculous, but he couldn't control his initial reaction to the unappealing news. Bill knew he sounded weird weighing in on her decision one way or the other.\n\n\"I'm sure they would actually prefer me to get a manicure. Those are much easier than pedicures anyway. It shouldn't be a problem.\" Rachel thought his objection was solid evidence that she was onto something. She thought she would let it go and enjoy Bill's handiwork instead. \n\nShe found that knowing Bill felt sexual about her feet to be very interesting information. She had never thought of feet sexually. She wondered if it was just her feet, or if he was attracted the rest of her too. She sat with crossed arms over her chest looking on to his massage with a keen, new interest.\n\nBill was holding her left foot with both hands, once again caressing her skin, rather than rubbing her muscles. His desire to feel her feet rather than give her a massage was obvious. His hands smoothed over every inch of her arches and the balls of her foot. He used the back of his fingers to feel the top of her feet. This was \n\nreally not a massage. Rachel had to hold back her urge to encourage him to press harder into her feet, but she reminded herself that her feet weren't sore and she didn't need a massage. She wanted to see what Bill was going to do.\n\nBill found Rachel to be sexier by the day. She seemed very into having her feet rubbed. His plan to massage her feet while masturbating seemed to be progressing as nicely as it did the previous night. He noticed she was more into what he was doing tonight, and this made him a little nervous. He realized that he was touching her feet in a way that someone who was simply giving a massage would not do. She seemed to be picking up on this, but didn't say anything. Now, as she stared at him, he was nervous and wondered if he would even get to take his dick out at all. \n\nAs Bill rubbed and caressed her left foot, Rachel straightened her right leg to stretch it a bit. Her heel slid forward and pressed into the soft material of Bill's shorts. She felt the warmth of his trembling, surging erection against her foot, covered only by a thin veil of fabric. Bill had nowhere to move since he was already sitting right next the arm of the couch. If Rachel didn't want to feel his dick, she would have to move her leg. \n\nShe didn't move her leg.\n\nRachel's heart beat out of her chest when she felt the hardness of his penis upon her bare foot. She wasn't trying to touch him, it was an innocent stretch, but she thought, 'now what should I do?' She decided to pretend like nothing happened. She kept her foot in constant contact with his penis and just to lighten the air, that was becoming sexually charged, she turned her head toward the TV and made a funny remark about the uniforms of the Enterprise. \n\nWith her heel, and now part of her arch, making full contact with his rock-hard cock, Bill could barely stop himself from forcibly rubbing her foot against him and jacking his cock off using her foot. His mind was swimming with ideas and fantasies. He really wanted to oil-up her feet and slide his hard cock all over them. He refrained from doing any of the other nasty things he was thinking about and instead, began to rub and pull on her cute little toes. \n\nRachel pretended to watch TV. The direction of her eyes was more toward the TV, than toward Bill, but she maintained eye contact upon Bill and his rubbing through the corner of her eyes. She loved how his hands felt on her toes. He was taking his time touching each one and petting them all together before moving on to the next. After several minutes, she felt his hand gently grasp her right foot as it was wedged against his cock. Rachel had become so excited that she was shaking. Luckily, she was sitting down and not trying to do anything too taxing. When Bill lifted her foot away from his cock, she stretched her left leg, much like she did the right. There it was, his fantastically hard penis. Her left foot sat further in toward the base of his penis and made direct contact with her arch. \n\nAs Bill switched feet he nearly exploded cum down the leg of his shorts when she replaced her right foot that was against his cock, with her left. 'Jesus.' He thought. Not only that, but she moved the toes of her left foot which felt like she was rubbing his cock through his shorts with her bare foot. \n\n\"You make my feet feel so much better!\" Rachel was moving her left foot and felt his hard cylinder with her heel, arch, and the tips of her toes. She decided that was enough or she would be far too obvious about what she was doing. Right now, she was still playing dumb.\n\n\"Thanks, I don't mind doing it.\" Bill shrugged his shoulders like it was no big deal, but under the surface he was \n\nabout to boil over. \n\n\"Don't mind me, I'm just going to relax, if that's alright.\" Rachel moved her feet back toward her slightly, which took her left foot off of Bill's dick. She had a small, decorative pillow under her head as she lay to the side and closed her eyes. Her head was facing more toward the back of the couch, than toward the TV. Her closed eyes could be opened slightly to peek at what Bill was doing. She was hoping that this would encourage him to be bolder. \n\nBill was relieved that she had finally closed her eyes and was not focusing so intently on what he was doing.\n\nHe knew from experience that once she closed her eyes, she went to sleep rather quickly. It only took a few minutes with her eyes closed before he began to work on taking his cock out. Using one hand on her right foot, he weaseled his pulsing, aching, hard cock out from the leg of his shorts. He slid it out of his shorts leg and pulled the fabric up at the same time. He knew Rachel wasn't asleep just yet, but judging by her posture, it wouldn't be long before she was asleep. \n\nRachel began to breath in more deeply in her effort to feign sleep. She saw Bill begin to expose his penis, much the same way he had done before, only this time, much more recklessly. Her breathing was deep, her pussy was wet, and she could see his beautiful penis as it slowly revealed itself to the bright glow of the corner light in the living room. \n\n'Oh my God, that is so hot.' She thought. His cock looked like it was nearly all out. He started stroking it again. She kept breathing deeply. This time, he grabbed her feet with both hands and moved them against his cock. If she didn't know what was going on, she would just think her feet were touching part of his hand. He put her feet together and stroked his cock while petting and touching her toes. It still wasn't a foot massage. He had apparently given up making it feel like a foot massage. He was now just pleasuring himself with her feet.\n\nRachel desperately wanted to rub her swollen pussy while he was stroking his cock. She had never wanted to masturbate in front of anyone before, but she did now. However, she knew better and kept her eyes closed and her hands to her sides. Bill was jacking his penis pretty hard, in fact, she could even feel the rhythm of his strokes as she lay on the couch. \n\nRachel's feet were perfect; so smooth, flawless and soft. She had no callouses, no blisters, scars, or any other blemishes. He was feeling her toes and softly brushing against her instep when the unstoppable eruptions began.\n\nWithout much warning, Bill's cock began throbbing uncontrollably. He knew he was coming, but also knew that he couldn't do what he did the last time he came like this. With his left hand clenching Rachel's soft sole, he pumped his shaft quietly with his right. He angled his cock toward his chest as the first burst sprayed out. Bill swallowed silently and erupted over the front of his shirt. His cum abundantly striped and quickly soaked the cotton of his T-shirt. It was at the same time both ecstatic and miserable. His orgasm was amazing, but having to stifle the noise, and try to be as still as possible made for an awkward climax.\n\nRachel was so close to cumming that she probably only needed to touch herself once to cause an orgasm. She thought Bill looked so hot. His long, thick cock just spurted streams of ejaculate all over his shirt. She could barely make out the distinctive scent of semen. He was very quiet, so quite that she would never know he had just cum sitting right next to her if she hadn't seen it with her own eyes.\n\nShe stirred in her position on the couch. Raising her arms behind her and pushing her legs out straight. Her left foot rubbed right into the mass of cum that collected on his shirt. She felt a large glob of semen stick to the outside of her foot. It was slippery and warm.\n\n\"Oh, my goodness! I dozed off again! What time is it?\" Rachel had to help Bill escape the situation he was in and she was far too aroused to continue to pretend to be asleep. \n\n\"It's a quarter to ten. Bed time.\" Bill also pretended to yawn and made a gesture like he was about to get up.\n\nRachel turned to her side, got up, and made her way to her room. \n\n\"Good night, Bill!\"\n\n\"Good night, Rachel.\"\n\nBill dodged yet another bullet, but he knew he couldn't keep doing this. Both times he was close to being caught, and besides, suppressing two of his most intense orgasms in his life was not something he enjoyed. He began to think of ways he could somehow pursue Rachel as a true, romantic interest. He was drawn to far more than just her feet. Her face, legs, breasts, butt, she was absolutely beautiful. They got along better than any other couple he had ever spent any time with. He had noticed that she had been more engaging these past few days, and she didn't seem all that into Marty. He thought he may have a chance at dating her. He would have to play it very carefully as he didn't want to lose her as a friend or roommate. \n\nRachel closed the door to her room, buried her face in her pillow and stuck three fingers deep into her soaking wet pussy.\n\nIt only took a few seconds for her to cum. \n\n\"Ahhhhhhhh Ggggggooooddddd!!\" she screamed into her pillow and convulsed on her bed, rocking it from side-to-side in her orgasmic spasms. She was breathing hard. She rubbed her clit and a second orgasm followed the first...\n\n\"Ohhhhh Gggggooooddddd!!\" she shuddered as her climaxes completely took her over. She took her hand out, away from her groin and placed it under her pillow. She was high from her arousal.\n\n\"That's enough of that!\" She said between breaths.\n\nRachel lay recovering from her two mind-blowing, back-to-back orgasms as she thought about the situation she was in. Something inside her had changed dramatically the first time she saw Bill take out his penis. She had never really thought of him sexually until then. After tonight, she wondered if she had ever had good sex before. She had only been with four men in her entire life. Now, at twenty-seven years old, she felt that she was old enough to make better choices with men and not get taken by those that could be called \"serial monogamists,\" guys that have sex with you for a while, then break up and move on to the next girlfriend. Her five-month rule was very effective in weeding out those types, however, after dating four guys in a year, she hadn't had sex with a single one due to the fact that they didn't last five months. It was equally doubtful that her current beau, Marty, would last the five months either. She was wondering if she should change her policy. Going an entire year without sex isn't what she had in mind when she started her rule. She could be having sex every night of the week if she so desired. She could be having sex right now with Bill. Of course, she wasn't dating Bill, but what if she were? Would she start the five-month timer from the day they started dating? That would be silly, since she and Bill have spent time together every day for a year, and she knew all about him, she liked him, adored him even. \n\nBill cleaned up the living room a bit. Took his shirt off and put it in the washing machine in the closet just off the kitchen. He went into his room and lay in bed. He vowed never to do what he did these past two nights again. If Rachel caught him, there would be no defense. She would think he is a total pervert and move out. His sexual desires had got the best of him these past few days. He normally isn't this daring. Hell, until last night, the riskiest thing he ever did sexually was have sex in a car. This was too far in the direction of exhibitionism and sexual molestation. He began feeling very guilty about how he had been treating his best friend. Little did he know that Rachel loved everything he was doing to her.\n\nBill left early for work the next day because he didn't want to see Rachel on the way out. He didn't want to give her another massage, not tonight anyway. He needed a little space between last night and the next time he rubbed her feet. His new strategy would be to only rub her feet while wearing long pants, or at the least, shorts where he could not take his dick out very easily. Friday's were always good days at work for him. He would put the entire foot fetish matter out of mind.\n\nRachel tried to say good bye to Bill before he left, but he left almost an hour earlier than he normally did. She wanted to let him know she was going out with Marty that night, and wouldn't be home until late. She didn't want to go out with Marty. She had been re-thinking the entire relationship in light of her feelings for Bill.\n\nAfter a long, uneventful day at work, Bill drove home and decided to stop to get a hamburger and a beer at a local pub. He texted Rachel to see if she wanted anything and saw this text waiting on his phone:\n\nGOING OUT WITH MARTY :( WON'T BE HOME TILL LATE.\n\nBill was relieved he didn't have to try and avoid Rachel and her sexy body all night. He really just wanted to go back to how things were before he began giving her foot massages. His life was easier then. He had a beer then took his hamburger to-go. He enjoyed being on his own that night. He watched a little TV, surfed for some more foot fetish material online, and went to bed. He didn't hear Rachel come home.\n\nBill was up by seven the next morning. He sat leisurely drinking his coffee and reading on his weekend mornings. He had the blinds open in the dining room as he sat at the table when he heard Rachel's door open.\n\n\"Is there coffee?\" She asked as she shuffled in. \n\n\"Late night?\" Bill put his cup down and got up to pour a cup for Rachel. She liked milk and Sweet-N-Low in hers.\n\nRachel watched Bill get up and get her coffee the moment he saw her. He was wearing these black skinny soccer pants and a white T-shirt. He looked long and lean in that outfit. She smiled. \n\n\"Yes. Oh my God, Bill.\"\n\n\"What?\" Bill placed her cup in front of her as she sat across from him at the table.\n\n\"It's just...you don't want to hear it.\" She shook her head from side-to-side.\n\n\"Of course, I do. I don't have a social life, Rachel, remember? Now, what happened?\"\n\n\"I met Marty at his condo and from there we went to the Pelican. You know, that seafood restaurant. Anyway, we get in this conversation about intimacy and, you know, the difference between physical and emotional intimacy.\"\n\nBill sat listening intently. Hoping Marty did something wrong. He didn't like Marty.\n\n\"As we were talking, I got the feeling that he was manipulating the conversation. He got me to admit that physical intimacy is at least as important as emotional.\"\n\n\"I guess I agree.\" Bill weighed in.\n\n\"Yeah, you know, generally, it is, right? Anyway, we get back to his place and we sit on his couch for some coffee. I had some wine at the restaurant and I was getting a little sleepy. Since we don't sleep at each other's house, I needed to wake up so I would make it home. He starts saying that we need to be physically intimate, we need to have sex.\"\n\n\"Oh-oh...Okay.\" Bill was listening patiently.\n\n\"We start, you know, kissing, and he's getting all worked-up. All of a sudden, he whispers 'five months is too long, Rachel' as if I'm under his romantic spell or something. I get pissed and take a sip of coffee, then I excuse myself to go to the bathroom. I use his bathroom because it's closer than the guest bathroom down the hall. I'm sitting down and I throw away a tissue in the trash can by the toilet and there it was: a condom wrapper.\"\n\n\"Wow.\" Bill put his cup down.\n\n\"So, I walked out and said, 'We're done. You just don't get it'.\"\n\nBill tried to suppress a joyful grin, \"Looks like he's a player. I'm sorry, Rachel. Has he texted you yet?\"\n\nRachel looked at Bill and started to cry.\n\n\"No. And I don't care either. It's just that...guys suck!\"\n\nBill walked around to Rachel and hugged her as she sat at the dining table crying. She reached around to return his hug. \n\n\"What's next?\" Bill asked softly.\n\n\"No more Marty, that's for sure. That's the fifth guy in a year that couldn't wait five months. Is that too long to wait? Am I being unreasonable, Bill?\"\n\n\"No. They weren't interested in long term, Rachel. Your five-month rule is working. You're getting rid of the guys that just want sex from you and nothing else.\" \n\nRachel looked up at Bill. \"Would you wait five months?\" \n\nBill paused and thought about her question. \n\n\"Yes, Rachel. I would. Without a problem.\" Bill looked away, realizing the implications of his answer.\n\n\"Oh, Bill, you're so sweet.\" She looked affectionately at him with her wet, puffy, red eyes.\n\nRachel took a sip of coffee and continued, \"There's nothing wrong with sex! It's just that the men I'm going out with want to have sex before they even get to know me.\"\n\n\"Yeah, it looks that way.\" Bill realized then that he knew Rachel, better than any man in her life. \n\nHe tried to change the subject.\n\n\"What are your plans for today?\"\n\n\"I'm going to get my nails done with that gift card you gave me, then come home and eat ice cream.\"\n\nBill laughed. \n\n\"That's the spirit!\" He said.\n\nBill wanted to request she get a pedicure, but thought better of it. 'It's her gift card, she should do whatever she wants with it,' he thought.\n\nRachel got up, showered, and left. Bill straightened his bedroom and bathroom and did a load of laundry while she was out. It was a cool, rainy day, so all of his plans were indoors today. \n\nAfter a couple of hours, Rachel returned with a grocery bag and set it on the kitchen counter. \n\nBill came out from his room to greet her. \n\n\"Well, let me see.\" Bill walked toward Rachel looking at her hands to check out her manicure. Instead of holding her hands out, she put her left foot in front of her and pointed her toes.\n\nBill's penis began to become erect. She had her toenails done.\n\n\"Oh, cool! They look great!\" Bill examined her toes as best he could without bending over and taking her foot in his hand, which is what he wanted to do.\n\nRachel's nails were painted candy-apple red. They shined a deep, rich color that caused Bill's heart to beat faster. He loved that color. He was so happy she got her toenails done that he couldn't stop smiling. \n\n\"I love getting a pedicure! It's so relaxing!\" Rachel beamed.\n\nLooking into the bag he asked, \"What kind of ice cream did you get?\" \n\n\"Margarita.\" Rachel reached into the bag and produced a bottle of tequila, margarita mix, a container of salt, and several limes.\n\n\"Woah! No ice cream?\" Bill laughed.\n\n\"I thought I would get drunk instead of fat,\" laughed Rachel.\n\n\"Want to join me?\" She waved the bottle in the air. \n\n\"Absolutely!\" Bill tried to adjust his swollen dick so it wouldn't jut out obviously.\n\nBill and Rachel made a pitcher of margaritas and placed ice cubes in their well-salted glasses so they could have margaritas on the rocks. ",
        "They watched Along Comes Polly on cable and had a great time sipping margaritas and talking. Bill was hard the whole time, and Rachel was delighted that he was now wearing shorts that displayed his erection nicely. They spent the day together enjoying each other's company. Later, they made meatloaf with green beans and mashed potatoes for dinner. \n\nAt the end of evening, Rachel was tipsy and Bill was slightly drunk. Alcohol made Rachel sleepy and while going into her room to fetch her robe, she saw her comfortable bed and toppled onto it, laying on her stomach from side-to-side across the mattress.  \n\nAfter about ten minutes, Bill wondered what happened to Rachel so he quietly walked down the hallway to her room. Rachel's was the first room on the right coming from the living room. Bill saw that her door was open and her bathroom light was the only light on. He could hear her snoring softly.\n\nBill was about to close the door to her room and let her sleep when he noticed her bare feet hanging off the edge of the bed. \n\nBill froze. Rachel was lying face down on her bed with her head turned sideways. Her sexy legs lay across the bed and her amazing feet were about five inches apart hanging about a foot off the bed. He stared at the soles of her feet; clean, white, shiny, inviting.\n\nHe took a few cautious steps into her darkened bedroom. It was raining and he could hear the rain drops on the roof. He slowly walked up to her feet and touched her soles to test whether or not she was up. \n\n\"Rachel?\" He whispered. \n\nThere was no response, just loud breathing. Despite Bill's efforts to abstain from his surreptitious fondling, he found himself approaching Rachel.\n\nBill let his shorts and underwear drop to the floor, kicking them to the hallway just a few feet behind. \n\nHe stroked his cock looking at Rachel's feet. Could he do this? The alcohol made him feel emboldened. He knelt to get at her level. No signs from her. He placed his cock against her feet. Slowly and carefully, he slid his flared head between the curved gap her arches made when together. His cock popped through and he froze to ensure she was still asleep.\n\nHis cock was now jutting between her feet. He gently placed his hands on the outside of either foot and started slowly moving it through her arches. His strokes were careful and deliberate as he inserted and withdrew his fully erect cock through her feet. \n\nRachel was sound asleep. Her deep breaths confirmed she had no knowledge of Bill's acts. With each thrust, Bill wanted to press harder into her. He wanted to feel every inch of her foot against his throbbing dick. Although the actual contact was limited, and there wasn't much contact between her flesh and his foreskin, the thrill of fucking her feet caused a sensitivity that more than made up for the partial stimulation. \n\nHe used her arches like one would use a loosely clenched fist to jack off. He trapped his cock between them and he established a slow rhythm. He loved her feet and craved more time and freer access to do it right. Having her on her stomach was not the ideal position for her body, but he found it doable. All the porn videos that showed this position had the woman on her back. \n\nStill thrusting between her feet, Bill softly rubbed the back of her heels and her Achilles with his thumbs. He was getting close. The thrill of the experience was finally getting to him, and after about ten minutes of slow, deliberate fucking, he could feel the burn of an impending orgasm building.\n\nBill focused on the dimly-lit image of his full cock pushing into the insteps of her feet. He looked at her smooth legs and well-toned calves. It was about this time that he also stopped monitoring Rachel's breathing, confident that she was still asleep thanks to the margaritas. He felt his pleasure boil.\n\nHe dragged his cock back, then pushed slowly forward. In one last thrust, he had achieved his orgasm. It was not the sort of orgasm that he wanted to enjoy while, once again, having to stifle any vocal expression. But he had no choice. It was extremely difficult to cum in that manner, with such force, and not make a sound, but he managed to pull it off.\n\nBill blew a thick fountain of cum between her feet and onto the side of her bedspread. He pulled his cock out and pumped the rest onto the hardwood floor at his feet. No sound was made other than the heavy, wet SPLAT noise that accompanied his cum spraying the floor. He closed his eyes hard and wavered from side-to-side trying to keep any sound of his climax completely to himself. After the rush had subsided, he quietly backed away and quickly tip-toed to his room to get a tissue to wipe the semen from her bed and floor.\n\nRachel woke about the time of his final thrust between her clenched feet. She thought she was dreaming that Bill was having sex with her, then she awoke to Bill putting his large penis between her feet. At first, she was frightened as she didn't understand what exactly was going on, but this soon turned to excitement. She was thrilled that Bill found her irresistible. Ironically, if Marty had tried something similar, she most likely would have called the police. Bill had a special role in her life that she hadn't consciously accepted. \n\nBefore she could change her position on her bed, he returned and tried to clean up. She heard him enter her room and leave quickly, closing the door most of the way. She wanted to talk to him about his recent change of attitude toward her, but was too tired to have a conversation with him that night. \n\nBill returned to his room and immediately began masturbating again. He had fantasized about doing that to Rachel for the past several days. He relived the brief encounter adding to the experience a well-lit environment and being able to see her naked body as he stroked her feet with his cock. It wasn't long before he came again. He blasted his second load across his naked chest. The alcohol and the stimulation sent him to sleep just like that, naked with his cock in hand. \n\nSunday morning breakfast was something Rachel would do with Marty, and her other friends. It was something of a tradition with her. When Bill woke, he found her gone with a text on his phone:\n\nAT BREAKFAST WITH JULIE, THEN OUT TO SHOP. SEE YOU TONIGHT :)\n\nBill went out with his cousin that day, to a movie and for a beer afterward. It wasn't until eight o'clock that he and Rachel were back home together.\n\nRachel was home about an hour before Bill. She cut the tags from her new clothes and tried a few articles on before throwing them in the washing machine. She sat on her bed in her skirt and tank top. She decided to go bra-less for Bill. In fact, her entire day had been spent thinking about Bill. She thought about how he looked at her, with loving eyes, not lustful leers. Despite his latest sexual preoccupation with her feet, which started her thinking about him in a more romantic way, she had always thought of him as more than a roommate, more than a friend. She was dating other men, when she had the nicest, most caring, and fun man in her life as a roommate. \n\nShe had masturbated twice since she first saw his penis a few nights ago. She knew that what he was doing would cause some women to vacate the apartment and possibly even press charges, but it was different with Bill. She was actually thrilled to see his brave sexual moves, and encouraged that he was sexually interested in her. Although Rachel wasn't very experienced sexually, she always wanted to be more sexual with a man she knew she could trust. All signs were pointing to Bill as a man she could trust and one that she desperately wanted to be sexual with.\n\nRachel had been thinking of ways to increase her sexual appeal around Bill, but she was a modest woman, and shied away from clothes that were too revealing. She knew she was ready for more sex in her life, and that is a lot more than the no sex she was currently having. Tonight, she dressed in a blue-green plaid skirt that came up to her mid-thigh, she had a white tank top that was thin enough to show her large, puffy nipples underneath. She normally would not be caught dead in such a top, but she needed to make more of an effort around Bill, especially since he was taking such risks just to touch her.\n\nBill came home feeling pretty good about the day. He went to his room to shower before bed. It was Labor Day weekend, so he and Rachel both had Monday off, which meant he could stay up a little later and, if there was any left, have a couple of margaritas.\n\nRachel was in the living room when he came out dressed in shorts. He discovered he was too weak to abstain from masturbating around a sleeping Rachel. It was just too much of a turn on to pass up. There was a looming realization that it wasn't likely that he could continue his antics without getting caught. Little did he know that there hadn't been a time when Rachel didn't know exactly what he was up to!\n\n\"Hey Bill!\" Rachel's posture straightened when she greeted him. \n\n\"Hi Rachel. How was your day?\" Bill was in the kitchen looking in the fridge for the pitcher.\n\n\"Awesome! I went to breakfast, then shopping with Julie, then more shopping, then we went to her place and cooked dinner. I told her all about the situation with Marty. She hated Marty, so she was happy to hear I broke up with him.\"\n\n\"Wow! You had a big day!\" Bill found the pitcher and poured two drinks over ice cubes. He sat down next to Rachel handing her one.\n\nRachel and Bill watched a couple of episodes of the old Outer Limits series, which Bill always described as just like the Twilight Zone only with more Martians and aliens. Bill rubbed Rachel's feet for a bit, but when she began to fall asleep, he was in an awkward angle and couldn't get his cock out. It was frustrating. After several minutes, Rachel got up and said good night. \n\nBill took his cock out to jack off the moment she left the room. 'Damn. I wanted to cum,' he thought. Stroking his cock now just wasn't the same. He decided he might as well look at some videos on his computer and call it a night. He put his dick away and walked down the hallway to his room. \n\nBill had an adrenalin rush when he noticed that Rachel's door open and that she was laying the same way as she was the previous night. \n\nHe felt his cock get harder. 'I shouldn't do it. I'm going to get caught if I keep doing this shit.' He thought. He approached the door and saw her breathing. A bedside light partially lit the room so it was more illuminated than the night before. He looked at her sexy feet, her smooth legs. Her skirt had rode-up revealing a lot of leg. He grabbed his cock through the material of his shorts. \n\nFinally, he decided he couldn't resist. He slowly removed his shorts and stood naked before Rachel's sublime feet once again. He wanted to take his time, and really enjoy her; her skin, her body, her scent, but it just wasn't right. He was stroking his cock wanting a lot more of her than he was getting. He wanted her to be a part of this sexual experience. \n\nFor now, he was willing to use her body to get off, which was really all that was going on. It certainly wasn't sex but it was a lot better than masturbating to her memory, or to porn. \n\nHe gently gripped her feet as he did the night before and began the insertions into the space between her arches. He marveled at how high they were on her foot; something he found particularly attractive. His thrusts were more rigorous tonight. Being able see a good deal more of her feet and body really heightened his senses. He continued to slowly fuck her feet and kept her legs as still as possible. He could feel it was going to take him longer tonight.\n\n'Maybe I should just go to my room.' As he was contemplating whether to stay or go, his thrusts suddenly stopped. The space between her feet had shrank and seemed to be trapping his thick, engorged cock between them.\n\nBill looked down and noticed it wasn't his hands that were pressing her feet together, but the force that had trapped his cock in the soft cave of foot flesh was coming from Rachel. \n\nShe was awake.\n\nHorrified, Bill tried to pull away, but her feet were latched around his cock with just as much restraining power as if she had him by the hands. Before he could say anything, Rachel had spun her body around so that her upper body was now propped up on her elbows, she quickly moved her feet and was now situated so that she was facing Bill looking up at him from the bed. \n\nAs she maintained her grip on his cock, she spoke.\n\n\"What the hell is this?\" Her eyebrows were raised as if she had discovered some hidden piece of gossip about someone. Bill couldn't read this expression.\n\n\"Oh my God. Rachel.\" Bill tried to pull away, but he didn't want to make more of a scene than what he was already caught-up in. \n\n\"I was...\" He stuttered.\n\n\"Looks like you were rubbing your dick on my feet! I think you need to explain yourself.\" Rachel cocked her head slightly to the side.\n\nRachel was loving it. Bill's guilty, but innocent demeanor was irresistible. It was very difficult for her to stay serious.\n\n\"It's...okay, Rachel, look...I'll tell you everything.\" Bill was not only having a difficult time talking as a result of the shock from being caught, but Rachel was still restraining his cock with her feet. He was definitely in deep shit.\n\nBill spoke quickly. \"It started a long time ago. I remember liking to touch my mom's and my aunt's feet and legs. Over the years, I forgot about how I did that, and recently, while I was watching Voyager...\"\n\n\"Star Trek Voyager?\" Rachel interrupted.\n\n\"Yeah, Star Trek Voyager...I saw Seven of Nine's feet...\"\n\n\"Seven of Nine?!\" Rachel interrupted again. Bill thought he detected a smirk. \n\n\"Yes. Please stop interrupting, this is hard enough as it is.\" \n\nRachel resisted the urge to say, 'It sure is,' and let Bill finish.\n\n\"Anyway, I had this thing for Seven of Nine. Jeri Ryan is a turn on. So, when I saw her feet, I guess those childhood memories came back and I started obsessing over feet.\"\n\n\"How do I fit into all of this?\" Rachel wanted to get to the end of this.\n\n\"I have always been attracted to you, Rachel. You're so beautiful, so sexy, so easy to talk to and get along with, but from the very beginning I didn't want my attraction for you to ruin our being roommates, and besides that, you told me the first week that you won't even consider dating a man who was your age or younger. You pretty much promoted the fact that you dated older guys.\"\n\n\"Well, that's changed.\" Rachel responded. \n\n\"So, I saw your feet while we were sitting watching TV and I just lost control.\" Bill was feeling very uncomfortable standing there in his T-shirt and a hard on being held in place by two of the sexiest feet he'd ever seen.\n\n\"Tell me more about how attractive you think I am.\" Rachel had a devious look about her.\n\nBill was trying his best to avoid being kicked out of his home and possibly having charges brought against him, although, he doubted she would do the latter. He thought it best to just be completely honest.\n\n\"Well, ever since Jamie introduced us and suggested I move in with you, I've had a crush on you. The first thing I noticed about you, besides your good looks in general, was your perfect skin.\" Bill was looking at Rachel now. He no longer felt the need to look away in embarrassment. \n\n\"Go on.\" Rachel's tone had changed considerably. Her last words seemed sultry, purposely sexy. Bill's cock had lost about half of its erection as a direct result of the stress of getting caught. She still held him tightly between her feet, which is why his erection wasn't completely gone.\n\nBill was wondering why it was so difficult to put a sentence together when in that moment, he felt something.\n\nHis erection was returning. He was getting hard again, but not because of anything he was saying or had said.\n\nRachel was gently stroking his cock with her feet.\n\nIt wasn't obvious. In fact, Bill thought it was just his body moving in reaction to her pinning him in place, but then he saw her ankles move forward just slightly, and her feet readjusted so he wasn't quite as trapped. Still, he couldn't absolutely confirm that what she did was on purpose.\n\nHe thought it best to continue answering what she had asked.\n\n\"...then I noticed your perfect neck and breasts.\"\n\nRachel seemed to arch her back slightly when he mentioned her breasts.\n\n\"Keep going...\" was all she said.\n\n\"I love your legs and feet.\" Bill felt better confessing his attraction for her feet and legs. Yes, he liked all of her, but he felt particularly drawn to her feet. Much like some men are crazy about a woman's breasts, they like the other parts of her body as well, but the breasts just really get them going. They usually don't come out and say as much in so many words, but it's a big deal. \n\n\"What about my legs and feet, Bill?\" Rachel was obviously not mad. After her last question, she began to rub his cock with her feet and mimic the technique he was using to fuck her feet by moving her legs up and down his impressive member.\n\nThere was no mistaking it now, she was fucking his cock with her feet. Bill took the cue.\n\n\"I love how the arches are high and smooth.\"\n\nHe was fully erect again and pushed into her arches as she pushed against him.\n\n\"Go on.\" Rachel was looking at his cock and her feet.\n\n\"I love how the bottom of your feet are clean and white and soft.\" Bill still felt it was inappropriate to touch her feet as she was stroking him.\n\n\"I love your toes...\"\n\n\"What about my toes?\"\n\n\"They are long, but no too long, perfectly formed. The toenails are perfectly painted and just long enough to be very feminine.\"\n\nRachel was pressing hard now. There was no pretense of holding Bill in place for some disciplinary reason, or because he was just caught. She was wanting him to continue fucking her feet.\n\n\"What about your five-month rule?\" Bill wasn't thinking clearly. He mentally kicked himself for bringing this up when he was on the verge of having sex with Rachel.\n\n\"We have been in a relationship for well over a year. I would say that more than satisfies my rule, wouldn't you? Besides, you may be able to do five months easily, but I can't do another five days with you, Bill.\"\n\nBill let out a small moan. His head was spinning. He wrapped his hands around her feet and squeezed tightly, like he had wanted to do before, but couldn't for fear of waking her up. \n\n\"Bill, this is so sexy!\" She said as she slid her feet around his hot, throbbing cock and watched as he took greater physical control over her. She was so hot she thought she would melt into a puddle.\n\nRachel was losing herself. She couldn't keep up the current train of thought and was no longer interested in her fake scolding of Bill. She wanted this all along and she wanted him to not only touch her and make love to her, but she wanted him to pamper her feet, fawn over her feet, worship her feet. There was something sweet and innocent about Bill's adoration of her feet. It turned her on, but also revealed that Bill wasn't like the other men she had known. She loved the way he thought as much as how handsome he was.\n\nBill pushed her legs forward, causing her knees to bend and her skirt to fall back to her waist. Bill looked down. Her bare pussy was right there, below his dangling balls. Her light brown pubic hair trimmed neatly in the shape of a one-inch thick stripe beginning just above her clit and ending two inches up. The rest was shaved clean. Her pussy was beautiful. Like something you would see in a magazine. And it looked wet. He stared at it, then up to her eyes.\n\n\"I've been wanting you,\" Rachel said with a sensuality that surprised her. Her feelings for Bill and her pent-up lust for his body was coming un-corked.\n\n\"Me too, Rachel,\" he replied.",
        "He pushed into her a few more times before it occurred to him that he and Rachel had just crossed a line and could never go back to the way they were. He had access to her whole body now.\n\nBill released her feet and ran his hands down each leg to her waist, then to her pussy. He moved his body forward on the bed and rubbed her labia and clit with his thumb. She was hot, and wet and slippery. He could see her pelvis move upward toward his touch. He had to kiss her, to validate all that was going on between them.\n\nBill moved his body to the side to avoid penetration. He felt he needed to kiss her before he entered her. He was feeling such passion for Rachel, he had to kiss her lips before he did another thing. Rachel saw Bill's handsome face move toward hers. Her eyes locked onto his and seemed to see into him. He was an old soul, a deep and complex man, she saw that now.\n\nBill and Rachel kissed as lovers do after being separated for months. There was a frenzied longing in their kiss, a hot, urgent, unstoppable need. \n\nBill had the perfect lips, wet, full and soft. Rachel opened her mouth slightly and joined his mouth with her own. She felt something epic in their kiss, as if this was somehow foretold in some long ago forgotten romantic prophesy. Bill licked Rachel's lips as they smeared their hot saliva together. She softly sent her tongue to seek his and together they danced at the entrance to their joined mouths. \n\nRachel lunged her tongue as deep as she could, extending to its fullest. Bill met hers with his and their tongues embraced and slid together and apart, repeatedly. \n\n\"Please, Bill, I need you inside me.\" \n\nBill took a moment to remove his shirt, then moved his torso against Rachel. He wrapped his right arm around and under her neck and used his left to separate her legs further. He looked into her eyes and rubbed his lips against her without the force of a kiss, more like a grazing, sensual tease. He moved his hips into place and used his hard, thick cock to feel its way to her quivering pussy.\n\nHe could feel her open up for him, her heat engulfing the enlarged head of his cock, her wetness providing all the encouragement he would need to penetrate.\n\nTheir eyes locked and Bill entered her slowly. He wanted to relish every inch of her body, but was also aware that his size, especially as hard as he was now, could be a bit of a challenge for some women. He eased himself deeper to allow her to adjust, ever mindful that she had not had intercourse in over a year. His cock entered her, then retreated. He moved into her a little deeper on the next thrust, then back out. He was driving Rachel crazy. She wanted him to fill her up with the turgid cock she had been watching toy with her, the hard cock that she had fantasized about, dreamt about, wanted to rub her feet over, rather than sit, pretending to be asleep.\n\nRachel couldn't take the slow pace, but allowed Bill to lead. \n\nAfter several careful penetrating thrusts, Bill was finally ready to repeatedly fuck her. His cock was slick, hard, and hot. She was open and waiting. So, he picked up the pace and began thrusting into her with powerful strokes.\n\nRachel was squirming like crazy beneath him, clawing at his back.\n\n\"God! Bill! Oh my God!\" she was crying out, eyes and mouth open wide. \"Ah God!\" and with that, Rachel achieved her orgasm. Bill was so aroused he could feel the hair stand on end on his body.\n\nRather than easing up, Bill slammed into her filling her up as much as she would take. He held her head with his arm and kissed her as he pummeled her. All the months of wanting her, holding back any romantic inclination toward her was gone. He was now fucking her hard.\n\nAs they kissed, she began to mumble, which turned to moans, then yelling: \"Oh my God, Bill!\" \n\nBam! Another orgasm. She bucked and lifted her ass off the bed to meet his cock as it continued its rhythm into her.\n\nBill relentlessly drilled her with the same, steady pace. His balls smacked her ass with every thrust.\n\n\"BILL!!\" She screamed her roommate's name and wrapped her legs around his waist in an effort to keep herself full of his steel-hard rod. \n\nBill slowed to a stop. His cock was getting slightly numb from the stimulation. He removed himself from her womb and laid on top of her kissing her cheeks and neck. As the two kissed and pet each other, Bill sat her up and removed her shirt.\n\nRachel's beautiful breasts were full and hung down slightly with large, extended nipples. After regarding her glorious, bare tits, Bill put his mouth on one nipple, then the other. He sucked on each briefly before licking and nibbling her perfect skin moving down to her ribs, then her skinny waist, over to her stomach, then down to her hot, pulsing clit.\n\nHer scent was intoxicating. It reminded him of a cologne he had once smelled in a store. He closed his eyes and sucked her clit into his mouth.\n\nRachel immediately responded by grabbing the back of his head with both hands. She dug her fingers into his brown hair and guided his mouth to her mound. Her hips moved grinding up and down. Bill only had to hold out a stiffened tip of his tongue to satisfy her love of oral sex. \n\nBill felt his face go wet. A hot, wet, watery cum covered his mouth and chin. He could hear Rachel's panting as she gyrated her hips all over his clean-shaven face. She wasn't releasing her hold. Bill's entire face was being used as she rubbed another orgasm off this time coating his nose and lips.\n\nRachel and Bill made love like two lovers who had been intimate for years. They had perfect chemistry together.\n\nBill couldn't take anymore and shoved his cock back into her now-sloppy pussy. He pinned her legs back and fucked her aggressively. The bed thumped against the floor and wall. Rachel's face was squinting and contorted from the pleasure that was now overwhelming her.\n\n\"Rachel!! Fffffuuuccckkk!!\" Bill pulled out a second before shooting streams of hot semen across Rachel's body leaving a trail on her perfect left breast, then another that splatted straight up her torso, and a final oozing of cum that dripped into a hot puddle filling her belly button. \n\nBill collapsed next to Rachel on the bed and relished the euphoria of his release. His noisy, wild, natural, unhindered, orgasm. \n\n'Finally,' he thought.\n\nRachel left his semen where it lay, on her body, and scooted herself closer to Bill. They lay catching their breath. Eventually falling asleep together.\n\nThe next morning, they awoke together.\n\n\"Are you okay?\" Bill said turning on his side to face Rachel.\n\n\"Oh my God, Bill. I'm so much more than 'okay'! It's as if I have been searching and searching and what I was looking for was right in front of me the whole time! I am so comfortable with you. It's almost like we have always been together.\" \n\n\"I know exactly what you mean. I have always thought I needed to date someone just like you, but never thought of trying to date YOU! We're going to be so good together.\" Bill brushed the hair out of Rachel's face. \n\nRachel added, \"I've never been so physically compatible with anyone. I can't believe how many times I came! I'm so embarrassed. I've never cum more than once. I think I came like six times?\"\n\n\"If it wasn't so late, I could have cum more than once.\" Bill confessed.\n\nRachel was full of energy from feeling truly happy. Bill made coffee for them while she was in the shower. She came into the kitchen wearing shorts and a tight T-shirt. Bill was on the couch reading a graphic novel drinking his coffee, smiling. Rachel came in with coffee and a small bottle of what looked like baby oil, set her coffee down, and sat on the oak coffee table in front of Bill and placed a foot on either side of him, trapping him in between. \n\nAs he sat, now between her long, ivory legs, he noticed her ass coming out of the legs of her shorts. \n\n\"You like?\" She stuck her recently manicured feet over his book, forcing it down lower into his lap.\n\nBill looked up at her, then down to her candy-apple-red toenails. He noticed what she was trying to draw his attention to- a tiny gold ring around her second toe of her left foot.\n\nBill had seen such rings in some of the fetish movies he watched. He loved how they looked on women in those videos. Absolutely sexy.\n\n\"Oh my God, that's sexy.\" Bill reached out and cradled her left foot in his hand as Rachel sat on the coffee table with her arms straight back supporting her upper body.\n\nRachel explained, \"I bought that toe ring when I was getting my pedicure. It wasn't easy to put on just now. I had to use baby oil and force it on with needle-nose pliers. They usually put them on while you're getting your toenails done, but I wanted to save it for when we actually became a couple.\" \n\nBill thought to himself, 'we're a couple.' He loved the sound of that.\n\nRachel noticed Bill's erection peeking out of the leg of his shorts and became aware that her decision to buy it, and wear it, was a good one.\n\nBill examined the ring on what he considered her sexiest toe of her foot. He fondled the toe and the ring around it. It was a snug fit. He thought it must have been difficult to put on.\n\nHe kissed her toes and let one of his hands wander down to his cock to stroke it.\n\n\"Here.\" Rachel bent over and clasped the waistband of his shorts. \n\n\"Let's scoot these down.\" Bill straightened his legs while on the couch and removed his shorts revealing his naked and very hard cock.\n\nRachel reached back and opened the new bottle of oil, and handed it to Bill.\n\n\"Spread this on my new best friend,\" she gestured to his penis. \n\nBill applied a generous amount to his throbbing cock. \n\n\"Now, oil my feet.\" \n\nBill lathered on a thick layer of the slippery oil all over feet. He coated her toes, her soles, and paid a good deal of attention to her arches.\n\nHe pulled her feet toward his groin.\n\n\"No, let me do this. You just sit back and enjoy.\" Although she had eluded to it, Rachel hadn't revealed to Bill exactly how turned on she was about Bill's sexual interest in her feet. She wanted the ring to symbolize exactly how much she appreciated the attention, and that she wanted such adoration to continue. \n\nRachel kept her position and used both feet to stroke his cock.\n\n\"This will take practice to get good at.\" She noted.\n\nHer legs moved up and down the long, wide shaft as Bill moved his hips up to meet her strokes. She pinched his head between her first and second toe. She ran her sole against the underside, she moved her body and rubbed his cock with all of her feet, then settled into fucking him with her instep, much like she was doing last night when she was questioning him. It felt so exotic, so exciting. \n\nBill had a difficult time letting go of the impulse to grab her feet and use them to cum. He had to slow down and let Rachel take her time. \n\nThe slow, rubbing, pressing, and stroking using only her feet took some time. Bill had to watch her shiny, smooth, white feet manipulate his aching erection while he sat slightly forward with his hands caressing her calves and legs. Every time he tried to grab her ankles or feet she would tell him to move his hands. The most she would let him do was softly touch her legs. He felt his orgasm build slowly, not at all like he was accustomed to. He loved the determined look she had on her face. \n\nRachel was responding to Bill's hip movements and kept her feet together so that the arches formed that familiar opening for his cock. She slid slowly up and down over his penis.\n\nBill's breathing became hard, his penis felt hot against her feet. \n\n\"Oh Rachel! Yes...like that. Keep it steady...\"\n\nRachel adjusted her position so that she could free one arm and move her hand between her legs and began rubbing her engorged clit. It was awkward, but she needed to cum. She rubbed her pussy fervently as the first molten eruption began to spurt from Bill's large head.\n\n\"Godddd...Rachel!\" Bill's cum shot up about a foot into the air and landed on Rachel's oil-covered feet. The second volley squirted on her leg just above her ankle. The remaining semen pumped up and out of his cock and ran down its length. Rachel had stopped moving her feet and was in the middle of her own orgasm.\n\n\"Oh God. Bill!\" she shrieked, releasing Bill's cock and lifting her knees toward her chest. She shook, soaking her shorts and hand with her wetness. \n\nThe couple stared at each other and laughed.\n\n\"It's so damn good with you!\" Rachel curled up to Bill who was now on the couch after cleaning the cum off her feet.\n\nBill smiled and said, \"It is for me too, Rachel.\"\n\nRachel quickly looked at the clock on the wall.\n\n\"Time for Star Trek Voyager!\"\n\nEND"
    ],
    "authorname": "Cockhole",
    "tags": [
        "foot fetish",
        "fucking feet",
        "roommates",
        "toenail polish",
        "feet",
        "foot sex",
        "masturbation",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/rachel-foots-the-bill"
}