{
    "title": "The Bus Boy and the Roommates",
    "pages": [
        "Lynn's long legs tightened around Ted's body as she had her third orgasm of the night. She held her breath, trying not to cry out in pleasure. Normally, she would happily have given full voice to her satisfaction -- but the knowledge that her roommate was only a thin wall away from her lingered in the back of her mind. That thought was quickly fading as Ted pounded his mammoth prick into her relentlessly, forcing a series of moans to escape her lips as her climax arced through her taut body. \n\nIt was late August and they were in the midst of a series of \"farewell fucks\", as Lynn called them. They'd been doing it almost non-stop as the days trickled down until Ted would leave for college, moving a day's drive away -- a distance they both knew would end their brief affair.\n\nLynn was under no illusions. She liked Ted a lot, but she didn't love him. She'd be sad to see him go, but she wouldn't be heartbroken . . . as long as she had at least occasional access to his dick. Over the last couple of months, he had become the best fuck she could ever want. Her body was used to him now. She could take him easily and frequently and she was loving it. She could ride him as long as he could hold out and just enjoy that wonderful feeling of being completely filled. And he'd augmented his natural skill by learning her body. He could make her cum hard almost at will. True, she didn't cum as explosively as she had that first time -- but that was a good thing really -- she couldn't have taken that for long.\n\nShe sensed Ted's strokes getting frantic as his own climax approached. She tightened down on him and wriggled her hips, trying to get herself off again. His prick responded, swelling inside her.\n\n\"You're so tight,\" he grunted into her ear. \"You're making me cum.\"\n\n\"Oh yes,\" she whispered back as yet another climax began deep in her pussy. \"Cum in me. Fill me up. I love it when you cum!\" \n\nTed lost his last inhibition. His deep thrusts became frenzied as his load surged out of his balls and filled his penis. He took in the sight of Lynn one last time -- her pretty face screwed up climax, her red hair splayed out, her tight body coated with sweat, the nipples of her B-cup breasts jutting out in excitement -- and let go. He grunted loudly as his cum blasted into her, filling her vagina, surging upward into her womb and leaking out of her tightly stretched vulva. The feel of his throbbing member inside her set Lynn's fourth climax off. She cried out softly and tightened her arms around him.\n\n--- \n\nAnd in the adjacent room, Lynn's roommate Kristin climaxed. She was lying on her back, her jeans pulled open and her fingers frantically rubbing her clit through her white cotton panties. The climax was a little disappointing but vaguely satisfying -- like a wet firecracker. It felt very small compared to what Lynn sounded like through the thin wall.\n\nKristin lay back and enjoyed the tiny afterglow of her climax while listening to the sound of Ted making his final brutal thrusts into Lynn. For just a brief moment, she wished it was her spasming vagina being filled with hot cum.\n\nBut the fantasy faded as quickly as the orgasm had. She sighed, sat up and zipped up her jeans.\n\nTo be honest, she was going to be glad when Ted went off to college. She was getting a little tired of Ted and Lynn's non-stop fucking. Not the least reason was that she'd only gotten sex once in the last six months -- and it had been a poor performance at that -- desultory foreplay, two minutes of passion and not even a hint of climax. It was frustrating to hear Lynn cumming like crazy several times a day just a few inches away. Any time Kristin heard it, she had to masturbate and it was never very satisfying, which only deepened her frustration.\n\nShe stood and headed to the hallway bathroom to get ready for bed.\n\nShe stopped short at the doorway when she realized Lynn was already there, contemplating herself in the mirror. Then she stopped and openly stared.\n\nLynn looked like the most \"just-fucked\" girl that ever lived. She was barely dressed in a thin t-shirt, through which her hard nipples could be seen. She was bent slightly over the sink toward the mirror, causing the shirt to raise up and expose her tight pink thong panties. The crotch of the panties was visibly wet from either Lynn's juices or Ted's copious cum. Her hair was dishevelled, her eyes glazed, her skin positively glowing from her orgasms. Lynn looked at Kristin in the mirror and smiled.\n\n\"I'm sorry,\" said Kristin. \"I didn't know you were in here.\"\n\n\"It's all right. Just getting ready for bed.\"\n\nKristin stepped in and busied herself cleaning her face, brushing teeth, etc. The silence between the two girls was palpable. Finally, Lynn broke it.\n\n\"Sorry if we . . . um . . . disturbed you.\"\n\nKristin dropped her toothbrush in surprise.\n\n\"It's just that sometimes . . . well, you know . . . I forget you're there.\"\n\nKristin finally responded. \"It's not that you do it -- it's that you do it all the time. You guys sound like you're trying to break some kind of record. It's ever day, sometimes twice.\"\n\n\"Actually, it's more like two or three times a day. Once we did it five times. I could barely walk after that.\"\n\nKristin blushed furiously. She and Lynn had known each other for a long time and were fairly open about their sex lives. But it was still not a subject she was entirely comfortable with and Lynn's uninhibited matter-of-fact attitude was still a bit shocking to her sheltered upbringing.\n\nLynn stuck out her tongue at Kristin. \"Don't look so appalled! We both know it's not going to last after he goes away to college. So I'm just trying to get all I can out of him. Who knows when I'll find someone else that . . . talented.\"\n\nKristin was silent for a while before she muttered. \"He can't be that good.\"\n\n\"Well, let me put it this way -- in the two months with him, I've had more orgasms than all my other boyfriends combined.\"\n\nKristin's pussy moistened at the thought. She had always thought Lynn prone to exaggeration. And her talk about Ted would have unbelievable if she hadn't heard Lynn's moans and screams for herself.\n\n\"I thought he was a virgin when you met him?\"\n\nLynn nodded. \"Well, I already told you how big he is, right? Well, he really knows how to use it now -- he doesn't ever hurt me. And the other stuff is amazing.\"\n\nKristin sighed. \"I wish I could meet a guy like that. It seems like every guy I've tumbled has been on a stopwatch.\"\n\nLynn's eyes flicked down to her roommate's big breasts. She could see Kristin's large erect nipples pointing through the fabric of her shirt. She bit her lip and smiled.\n\n\"Well, who knows? Maybe you'll get lucky some night.\"\n\n\"I doubt it,\" replied Kristin disconsolately. \"I've barely had anything for the last six months. You know that.\" \n\nLynn though about this for a moment. She reviewed what she knew about her roommate's sex life. Kristin was shy, but her body attracted more than her share of men. To her knowledge, Kristin had bedded five men and not been satisfied with any of them -- at least not sexually. She remembered a conversation they'd had a year ago in which Kristin has drunkenly confessed that she rarely came with a man -- and when she did it was \"like a wet firecracker.\"\n\nLynn thought about Ted. He could certainly give Kristin what she needed. She was surprised to find this thought stirred no real jealousy in her -- only a dim excitement. Lynn knew that Ted had noticed Kristin -- few guys failed to. But few guys got anywhere with her. She was generally shy. That factor combined with her voluptuous figure to make her almost unapproachable -- and certainly unapproachable to an unassuming guy like Ted.\n\n\"You know ...\" Lynn began\n\n\"What?\"\n\nLynn blushed. \"There's plenty of Ted to go around.\"\n\nKristin goggled at her. Lynn grinned.\n\n\"Just a thought.\"\n\nWith that, she turned and walked out. Kristin finished and wandered back to her own room, a little dazed. Under normal circumstances, she would assume Lynn was joking. The redhead has a ribald sense of humor when it was just the two of them.\n\nBut something in that grin made it seem like Lynn almost meant it. That Kristin could get a piece of Lynn's action.\n\nThe thought repulsed and intrigued her at the same time. On the one hand, the idea of Lynn handing her some dick was a little weird. It made her feel cheap, like some girl who was just looking for a good lay. and would take it anywhere she could find it. Shit, she barely even knew Ted. He seemed nice enough, but having sex him? Just to get fucked? It just seemed so sleazy.\n\nYet she couldn't deny that her nipples hardened at the though. And her pussy got just a little wet. Why shouldn't she? Guys cheapened themselves all the time. Why should she pretend she was Little Miss Morality and cow-tow to some outdated model of feminine behavior? She was flesh and blood. Why shouldn't she satisfy her needs if the opportunity arose? Why shouldn't she get her brains fucked out just for the thrill of it?\n\nShe closed the door to her room and sighed. This was pointless. Just the fact that she had let some little remarks from Lynn affect her like this was a sign of how sexually frustrated she was. She flopped down on the bed and hugged a pillow to her chest, trying to make the confusion go away.\n\n----- \n\nIn the next room, Lynn was cuddled up to Ted. She had stripped down to just the panties and was idly stroking his cum-streaked dick while they talked. Ted was toying with her nipples -- teasing them, watching them grow, letting them fade, teasing them again. Lynn loved and hated it when he did that. It eventually made her so flustered that she'd attack him.\n\n\"Well, I guessed she could probably hear us,\" said Ted finally. Lynn had, of course, immediately told him what Kristin had said. For the moment, she'd left out the part where she'd hinted that Kristin could get some.\n\n\"In think people in the next city can hear us,\" replied Lynn with a little giggle.\n\n\"So is she pissed off?\"\n\nLynn grinned and rubbed his cock. Even soft, it was intimidating.\n\n\"I think it turns her on more than anything else. Do you know she's only gotten laid once in the last six months?\"\n\nTed snorted. \"I don't believe that. She's . . . well, I'd think she'd have no problems.\"\n\nLynn shook her head. \"She's shy. I mean, you've been cumming here -- oh, ha ha -- I meant 'coming' here for three months. How much have you talked to her?\"\n\n\"Well as I recall, I don't do much talking when I'm here. Yelling, yes. Talking, no.\"\n\n\"We don't do it all the time! Well, maybe most of the time. Anyway, I haven't seen you two having engrossing conversations.\"\n\n\"I don't think she likes me.\"\n\nLynn nodded. \"You see. She's shy. And most guys think she'd being haughty.\"\n\n\"OK, so maybe she's only gotten it once in the last six months.\"\n\nLynn smiled. \"And I don't think she's ever gotten it good. You know, she was telling me the other day that she's never had a really good orgasm?\"\n\nTed didn't reply but his cock twitched in her hand. Lynn grinned. She knew now she had his full attention. She now felt a definite excitement of the idea of getting her two friends together. Her pussy moistened a little bit as she spoke her next words.\n\n\"I sometime think the best thing that could ever happen to her would be to get a really amazing fuck. Just have one night of getting the shit banged out of her.\"\n\nTed was surprised to find himself getting aroused at the thought. He would have though himself complete sexually satisfied. That summer had been a fuckfest like something out of his wildest dreams. Work days were long teases as they ogled, flirted and fantasized about each other. Then the second they were alone, they would fuck like crazed animals.\n\nHe and Lynn had screwed in every imaginable position and in ever place they could think of at work, in his parents' house or in her shared apartment. They'd done it standing up in the shower, they'd done it the cramped back seat of a car, they'd done it in a public park.\n\nSeveral times, when they'd been closing together, they'd be cleaning separate rooms. She'd walk in, kneel down, fish his cock out, blow him until he exploded down her throat, zip up and walk out -- all without a word. Or he'd find her, bend her over the nearest convenient surface and fill her up or eat her until she came -- also without a word.\n\nHe'd even once filled her tight cunt in a closet during work. She'd dragged him inside, raised her skirt, pushed aside the strip of her panties and mounted him. That had been one of the best -- fucking her up against the wall in her sexy skirt while she came like crazy. And then catching the knowing looks from the other staff and even a high-five from one of the cooks.\n\nActually, the best moments were right before he entered her, when she'd give him that unmistakable look of pure surrender. No girl had ever looked at him that way before and it always made him screw her like a maniac.\n\nBut no matter how much Lynn was sating his lust, the thought of Kristin was not one easily dismissed. It was true that she was quiet and difficult to talk to. But now that he thought about it, she seemed nice. Shyness was certainly a better explanation for her behavior than arrogance. She was certainly smart. He'd enjoyed the few occasions he'd spent some time with her.\n\nAnd certainly his eyes would wander over her every chance they got. It was difficult to avoid. She had long straight blonde hair that caught the eye. Her face looked a little owlish with the glasses she favored -- but it was cute in a sexy librarian kind of way. What was most noticeable about her, however, was her body. She was about 5'7\", a bit leggy and had a nice round bottom that was just fat enough to be tantalizing. Her big hips curved to a narrow waist, which then gave way to a spectacular pair of tits \u2014 at least DD's that defied gravity proudly on her chest. He would have thought they were fake except that she was self-conscious of them to the point of being ashamed. She usually wore conservative clothes and ironclad bras that concealed her body -- with only limited success. Ted had to admit he'd fantasized about her once or twice -- getting his hands on those massive globes -- making the cute slightly nerdy girl cum like crazy. And the thought that he might be the first to make her cum really hard was extra tantalizing.\n\nHis prick twitched as these thoughts circulated. Lynn grinned from ear to ear. She had him.\n\n---- \n\nKristin was tossing and turning in the next room. The thought of fucking Ted would simply not leave her mind. On the one hand, the idea of sleeping with some guy she barely knew made her feel . . . well, like a slut. On the other hand, she couldn't get Lynn's description out of her mind. And she'd heard the animalistic noises from Lynn's room when Ted had been over. It had set her masturbating more than a few times, imaging herself in Lynn's place -- imaging what it must be like for a man to bring a woman to climax.\n\nAnd it wasn't like she didn't know him at all. They'd had a few conversations. He was nice and had a brain in his head. And she liked the way he treated Lynn. Kristin, whose dating experience, like Lynn's, had previously been confined to athletes and pretty-boys, had not been aware that a guy could be that genuine.\n\nThese thoughts had been chasing each other in her mind for half an hour when they were interrupted by the sound of Lynn's door opening. She recognized Ted's heavy footsteps as he headed down toward the kitchen. She paused for a moment, biting her lip in contemplation. Then she sat up. Quickly, she changed into her night clothes -- shedding her bulging DD-cup bra, jeans and t-shirt. Usually, when Ted was over, she'd wear her bulkiest most concealing pajamas. This time she picked up the long shirt she usually wore to bed -- with its permanent double bump in front. She then stole quietly out of the room and tiptoed down the hall until she found her way into the kitchen.\n\nTed was in front of the fridge, illuminated by the light coming out of the open door. He was wearing only a pair of boxers. Kristin took a good look at him. His body was about average for a guy. He wasn't a muscular hunk or anything but he was reasonable. Her eyes inevitably drifted downward toward the sizable bulge of his crotch. Her pussy tightened ever so slightly as she looked at it, wondering if Lynn's description was accurate.\n\nTed pulled out a can of soda and closed the door. He turned toward her and started, dropping the can loudly.\n\n\"Jeez, Kristin, sneak up on a guy! You startled me.\"\n\nShe found herself blushing slightly and fought it. \"I'm sorry. I just came down for some water.\"\n\nShe walked over to the fridge. She could feel Ted feeling her up with his eyes. Her clothes left little to the imagination. The t-shirt was a little tight over her generous bustline and stopped just a few inches below her panties, leaving most of her shapely legs exposed. She stepped in front of him and opened the fridge; leaned in to get some water.\n\nTed's eyes almost popped out of his head. Every time he'd seen Kristin before, she'd been fairly covered up. Perhaps on weekend, she might wear something a little tighter than hinted at the astonishing figure beneath. On the rare occasions he stayed over and saw her at night, she was usually wearing some loose pajamas.\n\nHe had imagined what her figure was like and his dick had certainly hardened a few times when he'd get a hint of what was there. But her t-shirt and panties left little to the imagination and he goggled at her. She bent over and the light from the fridge spilled down her back, illuminating her 39-29-42 figure in all its glory. He could see panty lines through her shirt defining the generous curve of her hips and ass. And he could see that she wasn't wearing a bra, which made her firm high bustline even more tantalizing.\n\nKristin found a bottle of water, closed the door, turned briefly to him and smiled before heading out. She turned again in the doorway to get a glance at him. She could see the bulge in the front of his boxers had grown measurably.\n\n\"Good night,\" she said.\n\nShe hurried up the stairs into her room and closed the door, then flopped onto the bed and buried her hot face in the pillow. She couldn't believe that she'd let him get such a good look at her. But it had turned her on immensely -- especially that last sight of his swelling boxers.\n\nShe heard the door to Lynn's room close. She heard the bed squeak slightly. Then she heard Lynn's voice.\n\n\"Mmmmm. What is it? I was having the best dream.\" Pause. \"Oh my, someone's turned on, aren't they?\"\n\nLynn's bed squeaked some more.\n\n\"No, I'm ready for you now. I was dreaming about this. And I was getting close to cumming. Just go for it. I need to cum.\"\n\nA loud squeak.\n\n\"Oh, that feels so good.\"\n\nKristin's hand stole downward her panties again while the squeaking of Lynn's bed began to get louder and more rhythmic. It turned Kristin on immensely to think that Ted might be thinking of her while he was fucking Lynn. She played with herself for the fifteen minutes and two Lynn orgasms it took for Ted to fill Lynn with another blast of semen. She had another little orgasm when she heard him firing away into Lynn. And she fell asleep with her hand still in her tight panties.\n\n--- \n\nKristin was having the best dream. She was in the kitchen again with Ted. Only this time things unfolded differently. When she bent over to get the water, he moved closer to her until she felt something firm press against her ass. She straightened up with a moan, backing into him and pressing her generous bottom against his growing erection. It felt massive to her, intimidating. She was wet at once.\n\nHis hands slipped around her body and found her heavy breasts. She moaned as he rubbed her sensitive nipples and squeezed the firm flesh. And she responded, grinding her ass into him.",
        "Before she knew it, she was bent over the kitchen counter, her panties at her ankles. She was moaning loudly as his hands found her clit. She felt his impossibly thick organ touch her entrance and she groaned. She was hotter for him than she could remember being for anyone. She gasped as he entered her and moaned as her pussy contracted around his \n\nsteaming piston. She felt an orgasm beginning -- only this one was bigger than she'd ever had before. It didn't feel like a wet firecracker building up in her womb -- it felt like a bomb ready to explode.\n\nKristin suddenly awoke. She was immediately flooded by disappointment. She'd wanted that orgasm so badly. She realized that her hand was in her panties and her fingers playing desperately with her pussy. But it was no good. The sensation of that approaching climax had faded and she could feel just that little tingle that meant disappointment.\n\nIt was then that she realized that part of her dream was still going. She was still hearing the sounds of Ted fucking. Only instead of plowing into her needy cunt, he was filling Lynn's -- again! They were quite loud this time, their incoherent cries perfectly audible through the plaster. Only this time she could feel it too. The wall was shaking on every thrust. It sounded like they were about to come through it.\n\n\"What is he?\" Kristin asked as her fingers sped up the pace on her clit. \"The energizer bunny?\"\n\n--- \n\nIn the next room, Lynn was on her knees, her hands gripping the headboard while Ted plowed his formidable organ into her from behind. His hefty thrusts were making the headboard bang into the wall and her cry out in pleasure. She was dimly aware that this must be bothering Kristin but she didn't care. This was, quite possibly, their best fuck yet.\n\nShe hadn't intended it to go this far. She'd woken up to find Ted lying next to her, his massive cock sticking straight up into the air. The sight had made her instantly horny. She'd knelt over his sleeping form and starting playing with his erection, licking it, sucking it, squeezing it.\n\nBut just playing with his big pole had sent her excitement level rocketing up. She'd started masturbating her soaked pussy after just a few minutes. And when his eyes had fluttered open, she'd mounted him, cumming hard as she slid her hot cunt down his penis.\n\nWaking up balls-deep in his beautiful friend was enough to get Ted wide awake. He'd rolled over her quivering form and started fucking her missionary style. After ten minutes and another orgasm, Lynn had recovered enough energy to push him off and move into doggy-style, offering her fantastic ass to him. She loved taking Ted like this. He would usually respond by pounding her without mercy. And this time was no different.\n\nAny inhibitions Lynn might have felt vanished with the first deep plunge of his thick 8.5\" monster. She was cumming continuously, her copious juices soaking his big rod, making it glide all the more smoothly into the deepest recesses of her cunt.\n\nTed was also dimly aware that they must have woken Kristin by now. But that voice was very quiet in his head. Most of his mind was unable to think at all. Since he'd slid into Lynn's tight pussy from behind, he'd been continuously on the precipice of climax. His balls were swelling with another load, his prick throbbing with pending climax. But he couldn't go over that cliff. It was an exquisite torture that he wanted to never end.\n\nAnd in truth, part of what was driving his fucking was the fact that Kristin probably *could* hear them. For some reason, the thought of Kristin hearing him pound the daylights out of Lynn turned him on even more.\n\nAfter twenty exhausting minutes of this, his balls suddenly emptied. Ted didn't even have a chance to cry out before he went off like a firehose into the deepest parts of Lynn's cunt.\n\n\"Oh God,\" Lynn cried as her pussy responded by clamping down hard on his spurting member. \"I love it when you cum in me.\"\n\nTed collapsed on top of her. His softening prick slid out of her pussy, spraying its last drops of cum onto her vulva.\n\n\"Fuck college,\" Ted said. \"I'm just going to stay here for the rest of my life and have my way with you.\"\n\n--- \n\nIn the next room, Kristin jammed her fingers deep into her pussy as she enjoyed one of the best orgasms of her life -- almost like the firecracker had dried out. Her pussy sent three little jolts of pleasure through her body before calming down.\n\n\"If only that dick were a few feet north,\" she sighed to herself. Then she realized what she was saying and blushed furiously.\n\nShe lay in bed for some time, idly touching her damp crotch or hard nipples, while she listened to the indistinct post-coital muttering of Ted and Lynn.\n\nShe smiled happily. She couldn't wait to talk to Lynn. Her mind was made up.\n\n----- \n\nIn the next room, Ted had rolled off of Lynn and onto his back. Lynn had climbed atop him, trapping his soft cum-streaked dick between them.\n\n\"Well, I'm guessing that Kristin definitely heard that,\" she said.\n\n\"I think people in the next state heard that,\" said Ted. \"I don't care. It was worth it.\"\n\nLynn idly stroked his chest. \"I'm going to miss this.\"\n\nTed laughed. \"*You're* going to miss this? I don't know what I'll do at college.\"\n\n\"Oh, I'm sure you'll tumble some other girl in no time. You'll forget all about me.\"\n\nTed kissed her. \"I won't forget you. And I'm not sure about college. I mean, I'd done nothing with women before you. I'm just not . . . you know . . . very good with women.\"\n\n\"Um, OK, Mr. Not-Good-With-Women. Where have you been this summer while I was cumming my brains out?\"\n\n\"I don't mean that. You know what I mean. You seduced me. It's not like I initiated anything.\"\n\n\"There are a lot of girls who will want you. And they'll be more aggressive in college than high school. I mean, Kristin wants you.\"\n\nTed's prick twitched against her and Lynn felt that little thrill of naughty delight.\n\n\"You said that last night, but...\"\n\n\"Do you want her?\"\n\nTed didn't answer.\n\n\"It's OK. I won't be jealous.\"\n\n\"Well . . . look, it's not that I'm not happy with you.\"\n\nLynn laughed. \"It's that you're a guy. You can never have too many women.\"\n\n\"Exactly. You never know when a dry spell will hit.\"\n\nLynn laughed again. \"Maybe you should put the moves on Lynn.\"\n\n\"I just told you -- I don't have any moves.\"\n\n\"And if she put her moves on you?\"\n\nTed paused a long time. But his penis answered for him, firming up a bit and throbbing against Lynn's soft belly.\n\n\"I don't know. I mean, I wouldn't want to hurt you.\"\n\nLynn smiled. \"Ted, I like you a lot. But if you get a chance to sleep with another woman -- as long as she's not a skank or a bitch -- and Kristin is neither -- I wouldn't pass it up. I won't be jealous. I'd actually be happy for you.\"\n\nTed kissed her softly. \"Whatever.\"\n\n\"I'm serious, Ted. You're going away to college. And it wouldn't be fair of me to be all possessive and jealous. I want you to think of me as more like a friend that you have sex with than your girlfriend. So if you get a chance to score, don't pass it up.\"\n\nTed closed his eyes and didn't speak. Lynn curled up against him.\n\n----- \n\nKristin lay on the bed, her head a whirl of thoughts. When she finally heard Ted's heavy footsteps descend the stairs and exit the front door, she finally sat up and headed out of her room. She needed to talk to Lynn.\n\nHer roommate was in the bathroom now, wrapped in a towel, getting ready to shower up in preparation for work. Just as she was about to turn the water on and get started, she heard a light rap on the open bathroom door. She turned and found Kristin standing there.\n\nIt didn't take more than a second for Lynn to know what Kristin was about to say. The girl was blushing like crazy, nervously wringing her hands. But her hard nipples were visible through her t-shirt. Lynn smiled to herself. This was coming together faster than she could have imagined. She felt a little thrill through her body and realized that she was not only willing for something to happen between Ted and Kristin, she now actually wanted it to happen.\n\n\"Hey,' she said. \"Sorry if we disturbed you again. We just . . . we can't help it sometimes.\"\n\n\"Oh, that's OK,\" said Kristin.\n\nThere was a long awkward silence. Finally, Lynn spoke.\n\n\"So . . . I'm supposing you're not here to talk about the weather.\"\n\nKristin blushed again.\n\n\"You were just joking around last night, right? I mean, you didn't actually mean...\"\n\nShe covered her face with her hands.\n\n\"Oh, I wasn't joking,\" said Lynn, pulling Kristin's hands down. \"I mean, I really like Ted. But I don't love him. And I don't think he loves me -- at least not in the usual sense. This summer we've been more like fuck-buddies than boyfriend-girlfriend. So I wouldn't be jealous. To tell you the truth, it actually turns on a little bit, thinking of you two together.\"\n\nKristin giggled nervously. \"It's just . . . I don't . . . you know . . .\"\n\nLynn knew Kristin well enough to know what she was trying to say.\n\n\"Are you trying to tell me that you'd be interested?\"\n\n\"Well, maybe, I mean . . . you know.\"\n\nLynn sat down on the edge of the tub.\n\n\"I'm serious, Kristin. I really think it would be good -- for both of you. I think it would be especially good for Ted, make it easier for him to leave me.\"\n\nKristin just stood there, shifting from side to side, torn again between a hundred different emotions. Finally, she murmured a quiet \"OK\".\n\nLynn smiled and her sex drive, completely sated by Ted only minutes before, began to resurface. She crossed her legs as her pussy moistened at the thought of her two friends fucking each other. \"You won't regret it. I promise.\"\n\nKristin nodded, more certainly this time.\n\n\"So when do you want to do it?\" asked Lynn. \"We only have a couple of days before he leaves for college.\"\n\nKristin blushed again. She couldn't believe they were talking about this. She especially couldn't believe they were talking about this as casually as making an appointment at the hair salon.\n\nLynn, too, was a little taken aback by the process. She would never have imagined in a million years that she would be trying to set up a random sexual encounter between her temporary boyfriend and her roommate. But here she was.\n\n\"Well, my period starts tomorrow or the day after. So I guess it has to be tonight.\"\n\nLynn nodded. \"OK. I could do with a night off, to be honest.\" She paused. \"Ok, how about this? Ted and I get home about an hour before you do. I'll get him a little wound up but then tell him I'm tired. Then you come home . . . he won't be able to resist!\"\n\nKristin shifted again and realized that she was getting wet thinking about this.\n\n\"Do you really think he'll go for me? I mean, he really likes you and...\" \n\nLynn smiled. \"Well, I'm pretty sure he wants you. And really, not many men can resist seduction, especially at his age. Besides -- as I've told him before -- we're not really in a relationship per se. Just having a good time, you know?\"\n\n\"OK.\"\n\nWith that, Kristin retreated to her room and buried her face in her pillow. She was ashamed, afraid and nervous. But there was no question that she was turned on.\n\n---- \n\nKristin lay in her bed for the hour or so it took Lynn to shower, dress and leave. She wasn't really thinking. She was just letting her head spin. Even when Lynn poked her head in and said, \"Trust me!\" she only acknowledged with a grunt.\n\nShe showered in a daze. She noticed that her nipples and cunt were sensitive and needy. But she didn't indulge herself as she sometimes did with a little shower masturbation. She wasn't sure if she was saving it for tonight or just too freaked out.\n\nShe spent a half hour finding the outfit she would wear to seduce Ted. By the time she'd picked it out, she was getting incredibly horny just looking at herself in the mirror. And of course, that made her all the more daring. The outfit she finally settled on was far too sexy and revealing to wear to work. She sadly placed in a shopping bag to bring with her and donned her usual conservative attire.\n\nThey day at the rental office dragged on and sped by like a train at the same time. She was alternatively nervous, ashamed and horny -- each intensely. She would get so nervous she would literally be shaking in her seat, then so ashamed she felt like she would run from the room if an actual tenant walked in. Then so horny she thought she might explode. She spent half the day wanting to text Lynn and call it off. And the other half imagining what it would be like. And all this got worse and worse as the day went on and the fatal hour drew nearer.\n\n---- \n\nTed's day, on the other hand, was crawling past. He and Lynn were working from lunch to just before dinner. There was plenty to do and they were incredibly busy. But Lynn seemed to be finding little bits of time to tease him. Anytime he was the only one looking, she raise her skirt until he could see her panties, or undo a button on her shirt and lean in close to let him view her cleavage or her belly. She rubbed against him any chance she got. It seemed like he was spending half the day adjusting his hard penis.\n\nLynn was having a similar experience. Part of her flirting was to get Ted wound up so he would pounce on Kristin the second she looked at him. But part was because she too was genuinely turned on. And the closer it got to the moment truth, the more she couldn't help think of what was waiting for Ted when they got and the more turned on she got.\n\nSomehow they got through the day. As they drove home together, Ted couldn't keep his hands off Lynn, constantly rubbing her thighs or her belly. And the minute they pulled into the parking lot of her apartment, they were in each other's arms.\n\nTed was ready to explode. It was bad enough that the day had been one long tease. Now the groping and kissing was bringing his balls to a steady boil. Just being around Lynn was an aphrodisiac. He was always at least semi-hard around her. Having her in his arms was enough to get him hard as a rock. Kissing and groping here was enough to get his balls throbbing and his dick tingling in anticipation of being inside her. It had been a while since he'd wanted her quite this badly.\n\nLynn responded to him, her pussy getting soaked with her excitement, her nipples so hard they ached. Usually when she was this turned on, it was only a matter of minutes before she would be riding his prick like a champ, cumming her brains out.\n\nBut a voice in her head reminded her that this was only supposed to go so far. She finally broke from his embrace, looked him in the face and gave him her best sad expression.\n\n\"I hate to do this to you. But do you mind if this doesn't go any further? At least for right now?\"\n\nTed's face fell like a brick. It wasn't often that Lynn turned him down. And even rarer that she didn't give him a blow or hand job to compensate. Especially after a day of tormenting him.\n\nLynn felt a flutter in her stomach. This was harder than she'd thought. She did so love being with Ted. It was rare that she would extricate herself from him without sampling his wonderful penis with her hands, mouth or pussy. And the look on his face made her want to desperately fuck him silly. But she was determined to fulfill her promise to Kristin. With a monumental effort, she pulled back from him.\n\n\"It's just that . . . I'm tired and I'm a little bit sore down there. You understand, right?\"\n\nHer appeal worked. Ted shrugged despite the desire burning through him.\n\nLynn smiled and rubbed his hose-like penis through his pants. \"I'll tell you what. Why don't I go take a nap. And when I'm done, I promise you the best blowjob I can give.\"\n\nThat brought the light back to Ted's eyes. \"I guess so. As long as I get to go down on you as well.\"\n\nThat set off a little tremor in Lynn that pushed her very close to breaking her promise to Kristin. But instead she smiled and rubbed his hard prick again.\n\n\"Ok. Tell you what. Give me two, maybe three hours. And then, come upstairs and wake me up . . . I mean, wake me up nicely.\" She paused and rubbed his shaft again. \"I won't be wearing any panties.\"\n\nTed nodded and they kissed some more. Lynn wanted to keep going but she knew that if she continued, she'd end up fucking him, promise or no promise. With another effort, she broke from him, opened the car door and began walking toward her apartment. She could feel Ted watching her ass she walked, even as he got out and followed her.\n\nWhen they got in the door, Ted made one last effort to break her resolve. He pushed her against the wall from behind and began kissing the back of her neck while he ground his huge hard penis against her ass. Lynn moaned deeply. For a moment, she was lost. She was going to turn around, pull down his zipper, push aside her panties and mount him right there -- let him fuck her madly against the wall like that time in the restaurant closet. She would dive into the sweet release of orgasm and forget anything she'd ever said to Kristin, cumming loudly and continuously until he filled her with semen.\n\nBut somehow she pulled herself back from the abyss, turned and pushed him away. \n\n\"Just a few hours nap. Then I'm all yours, assuming you still want me.\"\n\n\"Have I ever not?\" he asked.\n\nLynn glanced down at the tremendous bulge in his pants and her resolve wavered again. It wasn't just the great fuck ahead that tempted her. She was moved that Ted could pull back like that with nothing more than a hurt expression. She'd been with men before who would've called her a \"fucking cock-tease\" under those circumstances.\n\nBut before she could cave in to temptation, she retreated to the stairs. Then with a wave, a smile, and a blown kiss, she ascended. Ted moved into the living room, sat on the couch and clicked on the TV, desperate for something else to occupy his brain.\n\nAn hour passed while Ted sat on the couch wondering if his dick would ever soften. The TV blared meaninglessly at him. He tried hard to concentrate on the show and get his mind off the hot college girl just one floor up waiting to be pleasured by him. But Lynn had done her work well.\n\nJust when the fire in his pants was beginning to subside, he heard a key in the door. Kristin! He adjusted himself, making his semi-hard prick less noticeable. Just as he re-seated himself and tried to look casual, she came in.\n\nFor a moment, they just stared at each other. Kristin had spent the previous few minutes on the walk to the apartment, alternately walking toward the door and back toward her car. Her stomach had been turning backflips in anticipation of what she was about to do. She knew that once she walked in -- dressed the way she was -- there would be no turning back. Finally, she'd nerved herself up and let herself in. The solid reality of Ted seated on the couch, his crotch conspicuously bulged, hit her like a thunderbolt, driving home the reality. She was going to fuck this young man. \n\nFor his part, Ted was stunned by how amazing Kristin looked. She was wearing a tight short black dress that clung to every inch of her delectable figure. The dress exposed plenty of her soft womanly legs and traced tightly over her wide hips and full ass. It was cut low in front but her breasts were held up by thick straps, exposing the soft tops and deep cleavage. The tops of her breasts jiggled tantalizing as she walked. Ted was instantly fully hard again just from looking at her.\n\n\"Hi, there,\" she finally said, with just a little quaver in her voice.\n\n\"Hi.\"\n\nShe walked slowly over to the couch, putting down her purse and the bag with her work clothes in them. As she walked past him, the intoxicating mix of her natural feminine scent and light perfume made Ted's head reel. And he almost passed out when she sat down next to him -- closer to him than she really had to be.",
        "\"What are you watching?\" she asked, working in a little sigh to try sound more like someone coming off a long day's work than someone about to burst from nervousness.\n\n\"Nothing, really.\"\n\nThey were quiet for a while. Kristin stared at the TV blankly, her brain not functioning at all. Ted couldn't take his eyes off her. Finally, Ted spoke.\n\n\"Um, you look . . . amazing,\" he stammered.\n\nShe blushed and turned to look at him. \"Thank you. I was supposed to go on a date, but the guy cancelled on me.\"\n\n\"I don't see how any guy could cancel on you,\" Ted replied.\n\nThe compliment turned much of Kristin's nervousness into excitement. Her stomach calmed a bit and the trembling in her legs stopped. At the same time, she began to get a little wet. She smiled sweetly at him and Ted felt like his stomach had melted. He turned to the TV just so he could do something other than stare at her.\n\nThe show proceeded, but Ted had absolutely no idea what they were watching. He was only aware of Kristin next to him on the couch. And he noticed that each time she shifted, she moved a little closer. They talked during the commercials. Ted had no idea what was said. He had a vague idea that he was being charming -- at least she seemed to be laughing quite a bit. But he was too busy wondering if his prick was going to explode from looking at her. A long work day with Lynn with no subsequent release had been bad. This was torture. He desperately wanted to go upstairs and fuck Lynn awake. But there was no way he could stand up with this hardon.\n\nFor her part, Kristin was oscillating between excitement and fear. For a moment, she would be aware that she was seducing this man and turned on by her own brazenness. She would flick her eyes down to his crotch while he wasn't looking and the sight of his dockers almost bursting from his erection would get her wetter than she could remember being. Then she'd suddenly be afraid, wonder if she was making a fool of herself. Wonder if she was being a slut. And then he'd say something charming or funny and the nervousness would break, leading slowly back to excitement.\n\nShe kept moving closer. She kept her eyes locked onto his when they talked. She would lick her lips occasionally and bat her eyes. She would occasionally touch his arm or his knee while making a point. She even leaned in once or twice so that he could get a good look down her dress. Ted's eyes would pop out of his head when he could see her deep rich cleavage and he would shift on the couch, trying to get his huge boner comfortable in pants, trying to keep it from exploding right then and there.\n\nBy the time the show was over, neither of them were even pretending to pay attention. She was next to him, her legs folded beneath her, her head resting on his shoulder. Ted could barely breathe. A part of him wanted to grab her, throw her down on the floor and fuck her until she begged for mercy. It kept whispering to him that Lynn had basically given him the go-ahead to do exactly that. That Kristin was giving him all the signs. But the old self-doubt kept him rooted to the spot. Maybe she was just a flirt. Maybe she was just being friendly. Maybe- \n\nBut his brain didn't get beyond that \"maybe\". In mid-thought, Kristin kissed him.\n\nIt was like the breaking of a dam. In moments, the kiss had become passionate and their tongues were wrestling with each other. Ted's hand came up and touched her face gently, holding her to him. Kristin shifted and put her long legs over his lap so that she was comfortably in his arms.\n\nThat made out with near-ferocity for an endless time. Ted's hands slowly moved down her side until they were at her waist, then traced over the full fleshy curve of her hips until he was cupping her round ass. He squeezed hard and Kristin melted into him and moaned into his mouth. They finally stopped.\n\n\"Wow,\" Ted whispered.\n\n\"Yeah,\" she replied. \"I can't believe I'm doing this.\"\n\n\"I had no idea you ...\"\n\n\"Well, I *have* been listening to you and the Orgasm Queen all summer. I decided maybe I should find out what the fuss was all about.\"\n\nTed blushed. \"We didn't mean to bother you.\"\n\nKristin laughed. \"Yeah, right. I'm sure you weren't advertising when you tried to put Lynn through my wall.\"\n\nTed blushed again as he realized that that was precisely what he'd been doing.\n\n\"It's OK,\" Kristin said with a giggle. \"If your fucking is anything like your kissing, then you'll be even better than Lynn says you are.\"\n\nAs she started kissing him again, Ted's cock throbbed dangerously in his pants. Did she mean what she'd said? Was the night going to end with him balls-deep in the buxom woman in his arms? When that thought finally hit him, it propelled his hands into motion. He traced them over her belly, relishing the feminine feel of it. He continued moving upward, his heart skipping beats as he approached the astonishing swell of her breasts. Kristin sensed what he was doing and arched her back, putting the firm globes almost in his face. She felt so wanton and naughty and it was making her cream with excitement. She'd never imagined being a bad girl could feel so good.\n\nWhen Ted's hands finally closed on her bulging breasts, he almost came in his pants. His dick twitched and throbbed, straining desperately to get out. Her tits overwhelmed his hands, firm and soft at the same time, yielding to his touch but overpowering him. He traced up the curving underslopes and found her big nipples, pressing through the material, hard as rocks. Kristin stifled a little cry when he pinched them.\n\n\"Oh yes,\" Kristin gasped. \"I love the way you touch them. They need attention so bad.\"\n\nHe started caressing them softly. Kristin put her hands on his and squeezed hard. \n\n\"Don't be gentle. It's been so long since anyone touched them like that.\"\n\nTed responded, squeezing them hard while rubbing his thumbs over the sensitive nipples. He was amazed at how different feeling her up was from Lynn. Lynn liked him to be gentle and subtle. With Kristin, the harder he squeezed them, the more she moaned and thrashed on the couch.\n\nKristin was in paradise. Every touch and caress and squeeze from Ted seemed perfect -- just rough enough to drive her crazy, but not hard enough to cause pain. Her pussy was getting soaked, her nipples were so hard they were starting to hurt, her ovaries aching with need. The dress -- small as it was -- seemed to getting even smaller with every breath.\n\nKristin reached down and brushed her hand against his crotch. She could feel him. She moved her hand back and grasped him, eliciting a grunt from Ted. His dick swelled with excitement, cum boiled in his balls. As Kristin felt him, it was like something clicked into place in her body. She could feel her juices flowing copiously, feel her pussy heat up and squeeze with excitement. She realized there was no turning back. She was going to have sex with Ted.\n\n\"Lynn told me you were endowed,\" she whispered between kisses. \"It feels just perfect.\" \n\nTed's hands left her tits, much to Kristin's disappointment. But her energy level rocketed up again when she felt them touch her thigh. She parted her legs, making the dress ride up toward her hips, almost exposing the dampening crotch of her panties, allowing him full access. Her breath started coming in ragged gasps as his hand circled upward and upward until it finally brushed against her wet cunt. His finger found the edge of her panties and traced around the legholes, following the flow of lacy silk as it tapered to the narrow strip tightly covering her cunt.\n\n\"You're making me so wet,\" she moaned.\n\nKristin leaned into him, allowing him access, kissing him fiercely as her arousal level jumped another notch. She squeezed Ted's cock and started stroking the massive head through his pants. Ted groaned from the amazing feel of her hand on his prick and his hand on her smooth luxuriant thighs and damp panties.\n\nKristin was more excited than she'd ever been in her life. She couldn't remember a time when her vagina had felt so tight and wet and hot. She'd never needed to be filled so much in her life. It was like her cunt was a fire and Ted's prick the extinguisher. She needed him.\n\nShe had to get out of the dress. It felt like she was in an iron maiden -- that any clothing was too much now. She pushed him back and stood up, facing away from him.\n\n\"Unzip me,\" she whispered huskily.\n\nWith shaking fingers, Ted pulled the zipper down her dress. The sight of her thick bra strap and tight black panties through the opening slit got him panting with desire. Kristin moaned as the slit opened, relishing the release of the pressure against her flesh. She needed to be naked. When he finished, she shrugged it off her shoulders and down her arms. The dress fell and bunched at her wide hips, exposing her narrow waist and her slender back cut by the thick bra strap.\n\nTed started stroking his enormous hardon through his pants while he watched her do it. She tugged to get the dress over her full hips and revealed her tight black bikini panties. Her hips were fuller and her ass rounder than Lynn's. But that only made it all the more captivating. Ted thought her backside perfect -- fleshy, womanly, just a little fat. And then the dress was off, collapsing into a black pool on the floor.\n\nKristin turned to face him and felt a warm tingle run all the way from her clit to her nipples as Ted's eyes nearly popped out of his head. She was wearing a bra that was really too small for her. It was a lacy lowcut D-cup she'd bought for the night she lost her virginity at 17. Her tits had grown since then and now overflowed the cups, looking like perfectly ripe melons that might burst the bra from their considerable weight. Her big hard nipples strained against the taut fabric, threatening to rupture it.\n\nShe reached back to unhook it. Ted stroked himself harder and harder as he watched each hook release and the bra give a little bit under the pressure of her breasts. She grinned at him as she drew out the last moment. When the third and final hook gave way, it popped off and slipped down, exposing her hard nipples. She finished removing it and let it flutter to the ground.\n\nTed's cock rumbled and let out a big flow of precum. He was teetering on the brink of cumming. Kristin's breasts were perfect. They were huge hemispheres with just enough sag to let him know they were real. Her nipples were dead center, stuck out nearly half an inch and were visibly erect with excitement.\n\n\"God, Kristen, you're beautiful,\" he said. And he meant it. He'd never realized it before. Her voluptuous figure was never going to grace a fashion show, but was the perfect embodiment of a man's desire. And her face was transformed. Suffused with absolute lust, it was radiant.\n\nKristin herself was staring at Ted's obscenely tented pants. Surely, that couldn't all be him? She'd seen plenty of men with their pants distorted by erections. Ted's looked like he had another leg down there. The idea that she had done that -- that she had made him so big and hard -- turned her arousal up another notch.\n\nShe walked toward him and sat down in his lap, her legs spread around him. She scooted forward until the huge bulge in his pants slid into place over her cunt. They sighed together at the amazing erotic feel of his cockhead pressing through three layers of clothing against her vulva and clit. Kristin trembled as a little spasm coursed through her body. A day ago, it might have passed muster as an orgasm. Now it seemed like just the beginning.\n\nShe leaned over Ted, putting her breasts in his face. He reacted instantly, kissing and nuzzling her huge mounds, licking and lightly biting each nipple. He brought his hands up and resumed his manhandling of them. Kristin responded by rocking back and forth over his clothed prick, rubbing the huge knob up and down her pantied slit.\n\nThey kept at that for some time and Kristin's thrusts began to get harder and harder. She started shaking as she felt an orgasm building in her pelvis. It felt as good as the cum she'd had that morning listening to Ted and Lynn fuck -- maybe better. Her hips began to jerk as she got closer to it and her clit became more sensitive.\n\n\"I'm so close,\" she whimpered.\n\nTed put his hands on her fleshy hips and gripped hard. He ground her hard into his cock while he let one breast fill his mouth and bit the nipple.\n\nKristin cried out softly as her orgasm hit, blossoming out from her clit into her body. Ted's cock seeped more precum as it throbbed on the brink of orgasm. The feel and taste of her breast, the feminine scent of her skin and the dampness of her crotch against his rock hard prick pushed him right to the brink of flooding his pants with semen. He felt the beginnings of the orgasm he'd needed all day long. But just as he was about to get that release, she settled down and stopped.\n\nShe breathed deep and sighed. It had been nearly as good as her masturbation, but not quite the explosion she'd wanted. Still, it was one of the best climaxes she'd had. Her pussy juices began to flow again. If just grinding against him made her cum, what would fucking him do?\n\nHer thoughts were interrupted by a plaintive moan. \"Oh, I'm so close to cumming, Kristin.\"\n\nKristin looked down at him grinned. \"I guess I should let you, since you just made me cum.\" She rocked her hips a bit and he bit her lip. His powerful cock throbbed desperately. Between Lynn and Kristin, he was as turned on as he'd ever been in his life. It was physically painful how desperately he needed to cum.\n\n\"It hurts, Kristin. Please let me cum.\"\n\nShe grinned wickedly and rocked her hips back and forth again. Ted's moan was almost a whine. His dick felt bigger than it had ever been in his life, like it would burst his pants in a second.\n\n\"I'm sorry, Ted,\" said Kristin, rolling her hips again. \"I can't let you cum.\"\n\nAnother moan.\n\n\"Unless it's in me.\"\n\n\"Huh?\" said Ted. He was barely able to speak.\n\nWithout another word, Kristin slid down the couch until she was between Ted's knees, her breasts brushing against his thighs. She massaged his hard cock through his pants and licked her lips. His pants looked they were going to burst and there was a visible damp spot from his precum. She felt her pussy grow slick with excitement as she thought that the huge thing she was feeling would soon be inside her.\n\n\"It feels sooo thick. I thought Lynn was exaggerating.\"\n\nShe began kissing his penis through the slacks and lightly stroking her fingers over the shaft. Ted groaned and closed his eyes. He didn't know what was turning him on more, her hand on his cock or the spectacular view of her chest. All he knew for sure was that the orgasm was building again.\n\nKristin reached up and grasped the zipper. She pulled it down, tugging a bit to get it over his bulge.\n\n\"I guess these aren't designed for guys like you,\" she laughed.\n\nTed raised his hips and Kristin grasped his pants and underwear and yanked them down to his knees. He moaned as his prick finally popped out of its prison.\n\nNow it was Kristin's turn to have her eyes nearly pop out of her head.\n\n\"Oh my God!\" she gasped as Ted's organ exploded out of his pants. It was bigger than she'd even imagined -- longer and way thicker. The slit at the top leaked precum as it stared her down. She'd enjoyed the dicks she'd gotten access to in the past. But this was different. Ted's cock was designed for serious fucking, not fooling around. It scared her.\n\nHer head spun as a wave of emotions swam through her. Lust and excitement were there. But fear too. She trembled as she looked at it.\n\n\"There's no way . . . \"\n\nShe tentatively touched it with her fingers and it throbbed menacingly, seeming to grow even larger. More precum oozed from the slit. Involuntarily, she put one hand over her pussy, as if guarding it.\n\n\"What is it?\" said Ted.\n\n\"It's . . . a monster,\" she said.\n\n\"There's no way,\" she said, shaking her head.\n\n\"Huh?\"\n\n\"I can't take this. It would rip me apart.\"\n\nHer words finally penetrated Ted's haze of lust.\n\n\"What do you mean?\"\n\n\"I don't think we can do it -- sex that is. You're just too big. You're like twice the size of any guy I've been with.\"\n\nTed's face fell and for a moment, Kristin felt like mounting him then and there just to make him smile again. But her legs wouldn't move before she though better of it.\n\n\"Lynn likes it.\"\n\nKristin shook her head. \"Well, I don't know how. I mean, just look at it!\"\n\nTed's heart sank and his orgasm frustratingly faded back. A moment ago, he'd been delirious with happiness, thinking he was soon going to be inside this voluptuous woman. Now that door seemed to be slamming shut. He couldn't believe this could happen to a guy twice in one day. He was going to die if he didn't get some release.\n\n\"We could try,\" he said. \"Just a few inches. See how it goes. We can stop if it hurts.\"\n\nKristin reached out again and stroked his mammoth organ. It felt hard and heavy in her hand. Her lust was beginning to reassert itself a little. It was a nice sight. Her fear was giving way to fascination. But she shook her head. There was no way something like that could fit into her tiny cunt.\n\n\"Maybe one day. But I don't think I could try it tonight.\" She smiled. \"But I would like to play with it.\"\n\nShe began stroking it gently, her fingers unable to completely encircle its over 7\" girth. It was almost like an alien's dick, it was so different from what she was used to. Ted lay back. For the moment, the soft touch of her hand on his turgid member drove away his disappointment.\n\nKristin could feel her nervousness bleeding away as she stroked him. There was something deeply thrilling about being around such a massive piece of meat, even if it was too big to fit into her vagina. She began kissing and licking it tentatively, her excitement returning.\n\n---- \n\nUpstairs, Lynn was unable to think about anything but what might be going on downstairs. She knew that Kristin was home. But she had no idea what -- if anything -- was happening. And it was driving her crazy. Her mind was conjuring up all kinds of scenarios. She was picturing the scene in her mind. Perhaps Kristin was already impaled on Ted's massive totem, already feeling the first tentative tingle of a massive orgasm. Perhaps his talented tongue was working its magic between her thighs and she was pushing his head into her crotch as she came.\n\nShe realized that she had unconsciously started to masturbate, thinking about her two friends. She spent a few minutes working her cunt, rubbing her hard clit through her panties and fondling her breasts through her shirt. But it only served to inflame both her lust and her imagination. She started envisioning the two of them going at it. Ted would be taking her doggie style, letting Kristin's huge breasts swing free, making her generous ass jiggle with each plunge of his big member, making her cum hard for the first time in her life.\n\nFinally, she couldn't take it anymore. Lynn stood, straightened her clothes and crept out of the bedroom. She listened faintly at the top of the stairs. She could hear the TV going but little else. For a second, disappointment churned within her. Perhaps they weren't doing anything. Maybe Kristin had chickened out?\n\nJust then, she heard Ted's familiar moaning.\n\n\"You're so good at that. You're going to make me cum.\"\n\nLynn's libido rocketed back up again. She came slowly down the steps and peered around the corner.\n\nShe was transfixed by the sight that greeted her. The room was dark but she could see everything in the glow of the television. Ted was sitting on the couch, facing the stairs, his huge prick sticking up like an obscene jack-in-the-box. And Lynn, clad only in a very tight pair of lacy black panties, was kneeling between his legs sucking and licking on him with complete abandon. The enraptured look on Ted's face told her that Kristin must be doing a good job on him.",
        "Ted moaned again as his cock swelled in Kristin's capable hands. She wasn't just good ... she was unbelievable. He was amazed at how this normally quiet girl had completely abandoned herself to pleasuring him. She could only get maybe a third of his prick into her mouth, stretching her mouth wider than he would have thought possible. But she sucked and licked and tongued him ferociously while he was in there, driving him closer and closer to cumming. Most of the time, she was content to lick and kiss up and down the length of his cock, while massaging his bloated balls with one hand and slowly jerking him with the other.\n\nKristin was amazed at how much she was enjoying this. Normally, for her, blowing a guy was something she did out of a sense of duty. She liked it in a vague sort of way, but the main pleasure was knowing that her partners liked it. But blowing Ted was a new experience -- it was turning her on almost as much as him. Her pussy was wet, her clit tingling. She was rubbing her thighs together and squirming with arousal. But that only increased her frustration. She was surprised to find herself so in need so fast. Usually, her little orgasms sated her for quite some time. But something about Ted was turning her on again.\n\nFinally, when she felt him nearing climax, she couldn't stand it any more. She took her hand off his balls and put it down her damp panties. She found her clit and began stroking it. The easing of her tension made her moan over Ted's prick. She quickly settled into a rhythm, stroking his cock with her hand and mouth, then her own clit. The feel of orgasms building in both her and Ted raised her excitement to unbearable levels. Her pussy tightened up again, another little orgasm speeding toward her. She began rolling her hips, grinding her clit even harder against her hand.\n\nTed cried out as his balls finally, finally unleashed the load that had been building in them all day long. It hurt with amazing pleasure.\n\n\"I'm cumming,\" he yelled as his load surged down his urethra. He tried to pull his penis out of her mouth, but Kristin held on and pushed him as deep as she could. She'd never let a guy cum in her mouth before. But this was going to be a night of firsts.\n\nTed's dick jerked and swelled, pushing his head against the roof of Kristin's mouth. Precum pumped out as it prepared to erupt, like the first spurts of geyser about to go off and more copious than some men's full climax. The feel of it in her mouth set Kristin's orgasm off. She moaned around his spasming cock as the orgasm pulsed through her cunt. It didn't feel as powerful as what Lynn seemed to be having, but it was probably the best she'd ever had -- like a sizzling bolt of energy. The rolling of her hips turned into uncontrolled jerks.\n\nOn the stairs, Lynn rubbed her legs together tightly as she watched them cum. This was a better show than she'd imagined. She settled into the darkness of the stairwell, content that she could see them without them seeing her.\n\nThe steady dribble of precum turned into a torrent of semen as Ted flooded Kristin's mouth with a long blast. He cried out again it felt so good as spurt after spurt went into Kristin's mouth. Kristin swallowed instinctively, stifling her own moans. But he was coming too fast and too much for her to get it all. A good amount of it trickled down her chin and thick drops fell onto the couch. Ted's hips jerked as the most intense orgasm of his life went on and on, even after he'd emptied his balls into her mouth. It felt like everything in his body was squirting out the tip of his dick. But Kristin kept control, keeping his dick lodged firmly in her mouth while they peaked and slowly calmed down together.\n\n\"That was wonderful,\" Kristin murmured, her eyes closed.\n\n\"You're telling me,\" gasped Ted, his head spinning. \"Do you have an idea how much I needed that?\"\n\nShe put her head in his lap and they lay there for a moment, enjoying the afterglow. Finally, Ted put his hands around hers and pulled her up onto him. They kissed briefly before Ted rolled her over until she was sitting next to him on the couch. He crouched on top of her, his soft but still formidable prick brushing excitingly against her belly. The touch woke Kristin from her daze. Was there still more to cum? She didn't think she could take much more.\n\nHe began kissing her face, then her neck -- a sensation that got Kristin interested once more. He kept kissing her, working his way down her body. He spent a long time on her breasts, kissing every square inch of their considerable surface area, sucking and kissing and licking the sensitive nipples. Kristin began to get wet again.\n\nHe worked his way to her belly and she began to breathe deeply, realizing where this was heading. He moved around her belly and kissed her waist and hips while caressing her thighs. Kristin moaned softly, amazed at how much his was turning her on. Ted hadn't even reached her pussy yet but the sensations of him working down her body and the anticipation were getting to her.\n\nTed's hands found the straps of her panties and pulled on them. Something about the animalistic way he pulled them and the way the strap dug into her hips made Kristin moan with satisfaction.\n\n\"This is going to be so nice,\" she said. \"Keep going.\"\n\nShe raised her hips and Ted peeled the panties off her. The crotch was so sticky with her juices that it made a barely audible sucking as it pulled away from her lips. She sighed when the panties completed their journey down her legs and ended on the floor. She was finally free of the last shred of clothing. It felt good to be naked.\n\nTed's cock began to throb back to life. Kristin was possibly the most exciting sight he'd ever seen in his life. Her blossoming excitement was making her massive beautiful breasts heave with each breath. Her slight belly and broad hips stirred something primeval in him. And her pussy was beautiful -- the lips tight but engorged and wet; her clit visibly throbbing and sparkling with moisture.\n\n\"You're so beautiful, Kristin,\" Ted said earnestly. She looked down and blushed to find him looking at her pussy with nothing but pure lust. He was practically licking his lips as he closed in on them. Kristin had gotten her pussy eaten before but never very well. The men she'd been with, if they would do it at all, seemed to regard it as a boring obligation. And they always seemed to think her pussy was gross. She'd only cum a few times from it and very weakly. Once, a guy had brought her very close to that big orgasm she wanted to be out there. She wriggled her hips as she wondered if Ted would bring it to her. Just his enthusiasm got her vagina clamping down even before his tongue made it first brush across her wet lips.\n\nShe lay back on the couch, her hair tumbling onto the cushions as she settled in. She could immediately tell that Ted knew what he was doing. His tongue moved with confidence and firmness, not the timid desultory lashing of her previous lovers. Her excitement level continued to rise.\n\nOn the stairs, Lynn was growing more and more turned on. The sight of her two friends going at it was amazingly erotic. She was discovering a previously unknown voyeur streak. She became keenly aware of the thin fabric of the shirt against her nipples and the snug cotton of her panties against her wet lips. Almost subconsciously, her thighs started squeezing. Her hand crept up to her breast.\n\nTed was oblivious to almost everything as he went to work on Kristin's beautiful pussy. He started out with the routine he used on Lynn, putting his tongue into her vagina and wriggling it, then working his way around the clit -- the sides were always more sensitive than the center on Lynn. Kristin moaned softly in response.\n\nThen Ted remembered something Lynn had told him -- that every woman was different down there. So he began to explore, trying different speeds, different areas, different techniques. Kristin's responses slowly began to get more vocal as he began to figure out what she liked. He knew he was on the right track when her legs began to close against the side of his head, her pussy started to throb and get even wetter and hotter and her hips began to move slowly.\n\nLynn couldn't stand it anymore. Her fondling of her breasts got more serious. One hand began squeezing the firm mounds in earnest and pinching the nipples. Her other hand crept up her thigh and began stroking her clit through the warm damp crotch of her panties.\n\nTed felt that he had found the right rhythm with Kristin. He would start licking at the bottom of her vulva, work his way up, snaking his tongue around each lip. As he did this, Kristin would respond, squeezing her thighs and moaning. He would finally end the slow climb up her lips by pulling her clit gently into his mouth and running his tongue over it ferociously. Each time he did, Kristin would gasp and her hips would jerk as she neared climax. But she would back off and settle down and he'd begin again.\n\nFinally, after about five minutes of this, he kept his tongue on her clit and inserted his index finger between her tight wet lips. Kristin responded by rolling her hips, putting her hands on his head and pushing him against her crotch.\n\n\"Oh, I'm so close. I'm so close. You're going to make me cum!\"\n\nOn the stairs, Lynn could feel her own orgasm approaching. She was almost out of her mind. The sight of Ted driving Kristin to climax had her more aroused than she'd been since Ted had nailed her in the closet at work. She squatted down on the stairwell and began lewdly grinding her pantied cunt against the edge of one step.\n\nTed's tongue was getting tired. Kristin kept getting closer and closer to climax but not quite there. For a few minutes now, her hips had been jerking, her legs trembling, her cunt squeezing his finger as though she were about to cum. But she just couldn't. Each time, she'd back away just a little bit with a little frustrated moan.\n\nKristin herself was frustrated. Her cunt was on fire with anticipation, hot and tingling. She could feel herself approaching something huge -- like the little climaxes she'd masturbated herself to only bigger. But she couldn't quite let go and let it happen. She wanted to, desperately. Waves of pleasure kept building in her, each bigger than the one before. Each time, she would be sure this would be the one to make her cum. And each time, it rolled back without quite breaking. She was actually getting a little scared at the magnitude of what she felt building in her -- and simultaneously scared that she would never experience it.\n\nAnd then it happened. She felt a release, like a coiled spring expanding. She was finally over the hill and her orgasm was rushing on her like a train. She released Ted's head and put her hands on her breasts. She arched her back until Ted thought it might break. She squeezed his fingers with her cunt. Her trembling turned into violent shaking. Her eyes flew open. Her nipples popped up.\n\n\"Oh God!\" she managed to cry out. \"Here it goes!\"\n\nIf her previous orgasms had been firecrackers, this was like a huge firework going off into the night sky. This was what she'd wanted for so long, what her body had instinctively known was out there. It was as though she'd been grasping for something her entire life and had finally found it. She bent forward and her cunt contracted in its mighty climax, rhythmically squeezing Ted's fingers like she was trying to milk semen from a big cock.\n\n\"OhGodOhGodOhGod!\" she cried out and then flopped back onto the couch, still climaxing.\n\nLynn watched in amazement from the stair. Kristin was a woman transformed. Her long hair was splayed out over the couch. Her long legs were taut with raising her hips off the cushions. Her impressive tits jiggled with every jerk and twist of her body. The biggest change was to her face. She didn't look plain as her face contorted in climax -- she looked beautiful, a sublime embodiment of pleasure.\n\nThen the vision swam as Lynn's own explosive climax hit. She bit her lip to keep from screaming it felt so good. She ground her crotch into the stair hard as it coursed through her body. She closed her eyes as it kept going, higher and higher. Finally, it crested the wave and she sank onto the stairs, almost spent.\n\nKristin pushed Ted away from her cunt. She lay there for a good minute or so. Every now and then, her hips would jerk with an aftershock.\n\nTed watched her calm down. Part of him was proud and satisfied that he'd gotten her off so well. He'd known it would be a struggle to get Kristin to give into a climax. It had been even more of a struggle than he'd anticipated. But it had been worth it. It had been so amazing to watch her cum that his balls had churned and swelled, wanting to climax with her. Had he even brushed his cock, he might have covered her in a river of semen.\n\nKristin looked up at him, her eyes slightly glazed.\n\n\"That was . . . . oh my goodness . . . I'm still cumming.\"\n\nTed crawled over her and lay on her. They moaned together as his huge hard prick rubbed against her soaked vagina and her iron-hard nipples rubbed against his chest.\n\nShe put her arms and legs around him and pulled him closer for an intense endless kiss. Just the feel of her huge tits crushed against him sent Ted's head spinning. Kristin felt another little thrill through her pussy as she tasted her own juices on his lips. Her eyes glowed as she looked at him.\n\n\"God, I never knew I could cum like that. That was . . . . amazing.\"\n\nTed shifted and his massive head touched her swollen vulva. Kristin gasped as it sank in slightly. Her cunt tightened down and her legs trembled.\n\nShe needed to be filled. She was still afraid that he might hurt her but she didn't care anymore. She needed to have his cock inside her. And she wanted to give herself to him for what he'd given her -- a new world of sexual pleasure.\n\n\"I want to fuck,\" she said. \"I want you inside me.\"\n\n\"Are you sure? I thought you said I was too big.\"\n\n\"I don't care. I need you inside me. I need you to fuck me.\"\n\n\"I'll take it easy . . . I'll-\"\n\n\"Just shut up and fuck me!\" she said with a slight giggle.\n\nTed started to push forward. The feel of his huge head against her tight lips brought her out of her daze a little bit. She pushed him away. \n\n\"Wait,\" she said. \"I need to be on top. You're huge and I ... I need to be in control.\"\n\nTed nodded, pulled back and laid flat on the floor. Kristin gulped as his big hard prick popped straight up. But her pussy was in control now and it demanded even deeper satisfaction than it already had. She sat up on wobbly legs and crawled onto his body. She sat lightly on his belly and felt his big prick swell against her ass. She felt that thrill of fear run through her but at the same time her pussy began to get ready for more, lubricating and expanding in preparation for him. She rocked her hips and rubbed her wet pussy against his belly. Ted moaned at the feeling.\n\nLynn sat up and gazed at the two lovers. She had a perfect view. Kristin was facing away from her, her voluptuous ass perfectly framed. Ted's prick was sitting straight up, almost resting in the cleft of her ass. Lynn's hand crept back down to her tingling pussy. She lifted up her skirt and touched her swollen clit through her wet panties.\n\nKristin raised her hips up until she was squatting directly over his mighty meat. Her cunt was once again tingling with anticipation. She grasped Ted's prick and lined it up with her cunt. The heft of it in her hand scared her but she was determined. \n\n\"Here goes,\" she said to herself. She bit her lips to choke off a slight gasp as his head touched her vulva. They parted slowly but painlessly over the tip of his invading prick. She moaned loudly as her lips parted wider and wider to accept his girth. Just when she thought she was at the limit, the widest part of his head slipped past her vulva.\n\n\"Oh my God. It's in me.\"\n\nBefore she could even gather her thoughts, she began to impale herself inch by inch. Her vagina stretched wider and deeper than she thought possible to accommodate him. To her delighted surprise there was no pain. It was like her pussy was made for him. As he slid deeper and deeper, she felt more and more complete. His thickness meant he was touching all of her most sensitive areas ... and some she hadn't known she had. As the thick head drove upward, it was like it was zeroing in on the very core of her pleasure, getting closer and closer to it with each thick inch that slipped between her tight lips. *This* was what had been missing from her life. She could kick herself for almost passing it up.\n\n\"Oh my God!\" she cried again, almost screamed.\n\n\"Are you OK?\" Ted asked.\n\n\"I'm in heaven. I think your cock was made for me. You have no idea how good this feels.\"\n\nDown and down she sunk, letting him fill her beyond what she thought possible. She felt like a virgin again. There were sensations she just wasn't used to. The stretching of her vagina should have hurt -- instead it felt glorious. Every inch of her vagina was tingling from the relentless pressure of his turgid penis. Her clit was aching from being ground against his seemingly endless length. And the core of pleasure seemed to get hotter and hotter as his long dick got closer and closer to it. She knew it wasn't going to be long before she had another mind-blowing orgasm.\n\nLynn was entranced by the view of her cute roommate impaling herself on Ted's prick. She began rubbing her clit in earnest.\n\n\"There's no way she'll get it all in,\" thought Lynn, with a little pride.\n\nKristin paused about five inches in, waited for a moment, then raised herself up. A few inches of Ted's cock emerged, covered in her slick juices. She then sank back down again. Lynn's attention to her own pussy grew more frantic as she watched Kristin sink lower and lower, get about seven inches deep, hesitate and then slide the rest of the way until she'd invaginated Ted's entire member. She bottomed out with his massive head right against her cervix.\n\nKristin moaned and shook as the last inch of her downward motion put the head of his cock right onto the center of her pleasure, a place no man had ever reached before, a place she'd never really known existed until this moment. She couldn't believe how much pleasure one stroke of his penis had brought her. \n\n\"Bullseye,\" she said.\n\n\"What?\" moaned Ted.\n\n\"It's perfect. It's sooo perfect. I could come from just having you inside me. I'm so glad I didn't miss this. I think I've discovered my g-spot.\"\n\nLynn closed her eyes and imagined herself completely filled with Ted's penis. It was like that for her sometimes. The feeling of being impaled by him was so amazing, she'd cum once or twice on the first stroke. Her body began to move toward another climax. But her finger was not really enough. She needed Ted to fill her.\n\nLynn sat up and scootched forward. She put her legs between the bars of the bannister so that she was straddling one vertical bar, her long legs dangling off the edge of the stairway. She then dragged herself forward until the wooden poll rested against her cunt. She began making little hip thrusts that caused her to rub against it. She knew that this would make her easily visible to the copulating couple. But she didn't care anymore. The sensation was unbelievable.\n\nKristin sat still, letting her vagina get used to Ted. She was more surprised than anyone that she'd taken it all. And she was stunned that she was loving it. She could feel him throbbing inside her against that spot deep in her vagina. Just the feeling of him in her pussy was pushing her close to climax. Her hips rolled back and forth by instinct, forcing Ted's prick against her clit and rubbing his head against her G-spot. \n\nTed grabbed her hips and pushed upward into her. Kristin screamed as her vagina tightened around him, her juices flowed, her clit began that familiar tingling. She rocked her hips slowly and grabbed her big breasts, giving in to the orgasm. She cried out as the waves peaked and crashed. She raised her hips up and slammed them back down, trying to get as much out of it as she could.",
        "\"I'm cumming again!\" she cried.\n\nThe sight of this pneumatic woman cumming her brains out on his prick should have made Ted go off like a fountain inside her. But he was in a state of near-shock. Shock that he was fucking her in the first place, shock that she suddenly looked so beautiful, shock that she was cumming like crazy just from taking him. He tried to take everything in -- the slick squeezing sensation of her climaxing pussy, her nipples sticking straight out between her fingers, her open mouth crying out in pleasure, the rhythmic rolling of her hips.\n\nAs her climax faded, she lay down atop him, putting her big breasts in his face. Ted reacted without thinking, kissing and nuzzling the fleshy mounds while his hands dug into her hips and rocked her back and forth over his cock. In response, Kristin pulled him close to her chest until he was almost smothered. She crushed him into her chest as little aftershocks rolled through her pussy.\n\n\"No wonder Lynn can never get enough of you,\" she moaned. \"Each time I cum, it's better than he one before. I'm almost afraid to keep going. The next one might kill me.\"\n\nFinally, Kristin rolled off him, letting his rock-hard prick slide out of her spent cunt. Lynn took in the sight of Ted's prick, now coated with Kristin's cream. She gazed at Kristin's pussy -- lips engorged and red, still slightly parted by the Ted's girth, sloppy with her copious juices -- and Lynn came. She rubbed her slit frantically against the wooden bannister pole as lumps of pleasure raced out of her cunt and into her body. Her legs jerked violently with pleasure.\n\nThe buxom girl rolled slightly, grabbed Ted and pulled him on top of her. His prick slid down her belly and right into her cunt. Kristin moaned again as he sank deeply into her. She loved feeling so full. She wrapped her legs around his back and pulled him close until he was balls-deep inside her and his head once again lodged against her g-spot. She could already feel her next orgasm beginning.\n\n\"Fuck me, Ted. I'm yours.\"\n\nTed began stroking into her. His shock was rapidly giving way to pure passion as he plowed into Kristin's hot cunt. It wasn't long before Ted's furious strokes set off Kristin's sensitive pussy again. Her cunt squeezed him hard while her legs tightened around his waist. She came silently this time, her mouth open with pleasure. She clasped her arms tightly around him like she was drowning, squeezing her huge tits against him, digging her rock-hard nipples into his skin. She was desperate to hold onto anything that would ground her while she experienced the most intense pleasure of her young life -- multiple orgasms ripping through her body, each more intense than the last. It was though, after five frustrating years of unsatisfying sex, her body was trying to have all its orgasms at once.\n\nFinally, the wave broke and reality swam back into focus. She gasped for air and moaned, \"... so big ... so good ...\"\n\nShe felt like she was in the trough between two waves. She could already feel her vagina starting to tighten up again. She glanced up at Ted. His eyes were closed as he plunged into her. The look on his face was almost fearsome and his strokes were getting more intense as he approached his own climax. She touched his face.\n\n\"Keep going. Keep fucking me. Cum in me.\"\n\n\"I could go all night,\" he said. \"You're so beautiful. And when you cum, it's like a vice squeezing on me.\"\n\nKristin felt a little flutter in her. But it was quickly replaced by the growing tension in her pussy. She closed her eyes and put her arms around his back. She thought dimly that he was probably stretching her to the point where she'd never be any use to other men. She thought dimly that she would probably hurt tomorrow. But she didn't care. It was worth it. He was worth it. All she could really think about was the huge penis bludgeoning its way in and out of her, rubbing against every sensitive spot in her pussy and making her frantic.\n\nLynn was enjoying her bird's-eye view of the action. From her angle, she could see Ted's prick stretching Kristin's pussy as he plunged deep into her, then emerge coated with her juices. When Kristin tightened up on him with all four limbs, his cock emerged coated with white cream. The thought that Ted had made Kristin cum again -- and so hard -- got her stroking herself against the poll once again. She wished she was in Kristin's place, cumming all over Ted's big cock.\n\n\"I will be later tonight,\" she thought. The image got her grinding furiously against the pole. She closed her eyes and imagined herself in Kristin's place, getting stuffed with Ted's prick.\n\nTed knew he wouldn't last long. Everything was pushing him toward a quick blastoff. Kristin's pussy was squeezing his prick relentlessly, her breasts jiggling against his chest with every thrust. And just the thought that he'd already made her cum three times was enough to get the juices flowing. His balls began to burn with their pending load. When he felt Kristin's cunt squeeze him tightly as she approached her fourth climax, his balls emptied and his cock swelled as it filled with another mighty load.\n\n\"I'm cumming!\" he shouted.\n\n\"So am I,\" answered Kristin, frantically. \"Keep going. Cum in my pussy! Cum in me!\"\n\nLynn's eyes snapped open. Ted was pounding into Kristin mercilessly. His hefty thrusts sounded like gunshots and were sending ripples through Kristin's fleshy ass. And she was loving it. Her legs were straight up in the air. Her pussy lips were swollen and red and covered in her fluids Her hands were on her massive tits, trying to keep them still. Her face was contorted in another fantastic orgasm. Lynn saw Ted's balls tighten up with his own climax.\n\nTed was a machine. It could have been his first time cumming inside a woman. He was as turned on as he'd been the first time he'd fucked Lynn. He had been trying to hold back, to enjoy every moment, and to get Kristin to cum again. But his load finally came frothing out. Ted cried out as his cock erupted into the depths of Kristin's convulsing pussy in one long continuous gush. Kristin's climax peaked again when she felt the jet of hot cum against her g-spot. She closed her long legs around him as her body was wracked by her most intense orgasm yet. And Lynn came again as she saw Ted's load spurt from Kristin's overstuffed cunt, dripping onto the carpet.\n\nTed collapsed onto Kristin gasping for air. Kristin pulled his head into her shoulder and lay back. Little aftershocks were coursing through her cunt. Before this, each might have qualified as an orgasm by itself. And she could feel his prolific load trickling down her ass. Her head was spinning.\n\n\"OK -- I've decided I love being fucked,\" she said.\n\n\"I've decided I love fucking you,\" Ted replied between gasps.\n\nThey lay there for some time, just enjoying the feel of each other's body and the sound of each other's breathing. Kristin had never felt so contented and womanly. Finally, she spoke.\n\n\"I never knew it could be like that. I could do this all night. I could do this every night.\"\n\nThey lay there for a few minutes more minutes. After a while, Kristin realized something.\n\n\"Are you still hard?\"\n\nTed raised his head off of her chest and grinned. \"Yes.\"\n\n\"Didn't I satisfy you?\"\n\n\"Too much, I think. I can't get enough of it.\"\n\nKristin smiled. No man had ever made her feel so wanted.\n\n\"Do you want to keep going?\"\n\n\"Are you sore?\"\n\nShe thought about it for a moment. She could every inch of his prick inside her. She could even feel the rivulets of warm semen in her vagina. But she couldn't feel any pain. She looked back at him in surprise.\n\n\"Actually, I'm not. I mean, it hurts a little being so full. But it's a good kind of hurt.\"\n\n\"OK.\"\n\nShe giggled. \"I can't explain it very well. Just suffice it to say you feel great inside me. I think we were made for each other. Besides -- even if I were sore as hell -- I'd still want you to fuck my brains out again.\"\n\nIn reply, Ted began gliding his cock in and out of her soaked cunt. Kristin tightened her legs around his waist as her excitement level rocketed back up again. His hefty thrusts made even more of his load foam out of her Kristin's tight cunt, providing extra lubrication. Not that they needed it. Kristin's juices flowing over Ted's prick as another climax began. It was like they'd never stopped.\n\n\"Oh God, here I go again! I'm so glad I let you fuck me.\"\n\nLynn was awestruck by the hot scene in front of her. She was suffused with a combination of jealousy -- Ted had never fucked her twice in one setting -- and awe. Quite simply, her jealousy was overwhelmed by arousal. It was the most arousing sight she had ever seen -- Ted pounding her busty roommate's sloppy pussy with his big cum-streaked cock. She wanted to join them but she didn't want to break such a perfect fuck. She had to content herself with alternating her fingers and the pole to bring herself off. After another twenty minutes of fucking and two more orgasms, she realized that and Kristin were in synch -- cumming simultaneously as though Ted's big penis were plowing into both of them.\n\nTed pulled out of Kristin's soaked snatch and rolled her over. Kristin tried to get into doggy style position but her arms were wobbly and quickly gave out. She crawled over to the couch and bent over it, offering her ass to Ted. His cock swelled at the sight -- her hips were impossibly wide from this angle, her waist impossibly narrow. He could see her breasts, pushed around her chest and slightly visible from the back. He dug his hands into her hips, lined up his meat with her engorged slit and slid in all the way, once again placing his head right on her g-spot.\n\n\"Oh that's it,\" said Kristin. \"You're so deep in me. Keeping fucking me. Ring my fucking bell.\" She was losing control, submitting to Ted, becoming dominated by him. She had never felt that way before and it turned her on immensely. She didn't think she could ever get tired of this. \n\nTed started pulling her hips back and forth, pushing her down onto his cock. The response was a near-simultaneous moan from Kristin and Lynn.\n\nFor the first time, Ted was aware of Lynn. He was so surprised, he almost pulled out of Kristin. But his body was enjoying fucking her too much to stop for something as trivial being shocked nearly to death. He turned to gaze at her, without breaking the pace of his thrusts into Kristin.\n\nLynn was still almost fully dressed. She'd pulled down her shirt and bra just enough to expose her perky breasts and her skirt was up just high enough for her to continue to play with her pussy, which was so wet it was visibly dripping. He jerked his head, motioning her over while continuing to slide Kristin's hips up and down his cock.\n\nLynn stood and descended the stairs slowly then walked around until she was beside them, her eyes still fixed on Ted and Kristin's joined crotches, her fingers still toying with her clit. She leaned in and kissed him, enjoying the slick feeling of his tongue in her mouth while her fingers were in her vagina.\n\nLynn crawled on to the couch and lay down in the same position as her curvaceous roommate. She pulled her skirt up and slid the narrow wet strip of her panties away from her pussy.\n\n\"When you're ready to cum,\" she said. \"Cum in me. I won't be able to sleep tonight unless I have you inside me.\"\n\nKristin turned when she heard Lynn's voice. She smiled at her friend.\n\n\"God, this is so good. I never thought . . . oh my . . .\"\n\nKristin closed her eyes as her cunt tightened down once again on Ted's eager prick. She was getting used to the orgasms now and let this one roll slowly through her body. She wanted to enjoy every little sensation. The tingling in the soles of her feet, the shivering in her thighs. The growing hot tightness in her belly and vagina. The hardening of her nipples. The rush of lubrication over his colossal organ. As the climax came crashing down on her, she realized she was grabbing the couch cushions, trying to find something to hold onto, something to ground her in reality. Her world quickly narrowed down to her tightening cunt and the huge slab of meat plowing into it, each thrust pushing her closer and closer to the edge of the cliff.\n\nThen she lost control and it all dissolved into a blur of contracting vaginal muscles, involuntary bucking hips and moaning cries. He kept pounding her as she came, making it go on and on until she thought she'd die.\n\nTed's cock responded, swelling in preparation for another climax. Lynn knew him well enough to know he was about to cum inside Kristin again. She recognized the hurrying of his pace, the deepening of his strokes, the tightening up of his big balls. She reached over and touched his arm.\n\n\"Please, Ted. Cum in me. I need you inside me.\"\n\nTed stopped, his cock throbbing with frustration. He so wanted to send another big load into Kristin.\n\n\"Go ahead,\" moaned Kristin. \"I don't think I can take any more.\"\n\n\"Are you sure?\"\n\nKristin raised her hips and slid up onto the couch, letting Ted's long erection slowly slide out of her sloppy cunt. She rolled onto her side, facing Lynn and curled her legs up to her chest. She nodded without opening her eyes.\n\n\"I'm sated. For the first time in my life. Go ahead and finish off Lynn.\"\n\nTed's dick was starting to scream for release. Without another word, he hobbled on his knees behind Lynn, drinking in the sight of another sexy woman bent over the couch. She was almost trembling with anticipation, her vagina slick and throbbing with excitement, waiting to be plundered. He was struck by the similarities between the two women's bodies. They both had long legs, round bottoms, full curving hips, narrows waists and perfectly formed soft breasts. Kristin was just fuller and rounder. She basically had Lynn's body with a little weight added in the right places.\n\nHis cock bobbed as he anticipated sampling one other similarity. Both women had tight but wet and yielding pussies. Both squeezed him like a vice when they came. And both loved having their perfect little cunts stuffed with meat and then soaked with sperm.\n\nLynn looked over her shoulder as Ted lined his cock up with her cunt. Her red hair fell across her face seductively. She grinned wickedly at Ted when she felt his massive head at her entrance and wriggled her ass appreciatively. \n\n\"Fill 'er up, big boy.\"\n\nTed caressed her hips and moved back and forth. He let his cock angle upward and slide over the round soft curve of her ass. Lynn wriggled her hips again.\n\n\"Don't tease me like that. I've been needing that all day.\"\n\nTed lowered the head until it was at her vulva again. Lynn pushed back but he let it slip under her, sliding between her legs, the upward arc pushing it again her clit, her sparse pubic hair and against her soft belly.\n\n\"Ooooh, yeah,\" she cooed. She moved backward and forward, letting his cock slide deliciously slowly across her abdomen. She realized with a tingle how far up her belly it reached and how far it was going to reach inside her in just a moment. The teasing was making her crazy but she was loving it at the same time.\n\n\"You keep this up, I'll come the second you enter me.\"\n\nTed knew how she felt. The feel of his cock sliding against her belly like this was amazingly erotic and he could feel his balls swell in anticipation. Finally, he couldn't take it any more. His dick needed to be encased in flesh. He moved back until the head was once again at her entrance, then pushed in just a little bit, taunting her for the last time.\n\n\"It's so thick. I can feel you stretch me.\"\n\nTed's patience finally gave out and he slid his entire length into Lynn's drenched cunt as smooth as silk. They moaned loudly together as soon as he was buried in her -- Ted because being in her felt so right and familiar, Lynn because Ted's penis, just gliding into her, was giving her more pure pleasure than any finger, stair or wooden pole ever could. This was what she'd been waiting for all night. She was starting to cum already.\n\n\"Oh, God, now I'm complete,\" she moaned. \"Your cock is so right inside me. Fuck me 'til I pass out.\"\n\nKristin opened her eyes and watched dazedly as Ted pumped his big prick into Lynn. She had listened to them long enough. Now she wanted to see it. Her cunt tingled watching him slide into her. She couldn't believe she'd invaginated something that huge. She was astonished at how they moved together, their pelvic thrusts almost perfectly timed to put Ted's prodigious erection as deep and hard as possible.\n\n\"You're so hot,\" grunted Ted. \"You're going to make me cum so fast and so hard.\"\n\n\"Yes,\" replied Lynn. \"Don't wait for me. Just cum for me. Cum in me. I'll get there for you.\"\n\nTed's slow steady thrusting began to turn into a deep uncontrolled pounding. Lynn's ass began to wobble with each impact of his hips, each mighty plunge of his massive cock. Within seconds, she was clawing at the couch, her climax building like a volcano. Ted's balls tightened up as he watched and felt her start to cum on his dick. Her pussy squeezed his cock unbelievably hard and his balls emptied into his dick, starting his third blast of the night.\n\n\"Oh God,\" he gasped. \"Here it comes.\"\n\n\"Just shut up and cum in me!\" yelled Lynn. \"Fill me up!\"\n\nTed pounded her as his prick swelled with cum. With each thrust, Lynn chanted \"fill me up . . . fill me up ...\" under her breath. Then he gasped as his cum finally surged to his swollen cockhead and out his slit. He squeezed Lynn's ass and rammed himself as deep as he could go while his cock twitched and fired, twitched and fired, hosing down her cervix with another prodigious load. Lynn kept cumming, her vagina convulsing around his swelling penis, coaxing more and more semen out of his exhausted balls. He made his last rapid-fire thrusts into her, making his load squish out onto the floor. Finally they stopped and Ted slumped forward onto her. His deflating penis popped out of her, followed by a trickle of their fluids.\n\n\"Oh my God,\" said Lynn. \"How am I going to live without this? I think I'll go crazy if you're not fucking me every night.\"\n\nTed absently kissed the back and side of her head. He didn't feel like moving or speaking until the room stopped spinning.\n\nHe rolled off her and lay down flat on the floor. After a few moments, the girls followed him (Kristin pausing to put on her panties). They lay on either side, their bodies curled against his.\n\n\"Thank you so much for that, Ted,\" said Kristin. \"You have no idea . . .\" \n\nTed couldn't think of anything to say. Being thanked for sex was not something he was prepared for. All he could do was grunt.\n\nHe turned on his side and put his right arm around Lynn and she spooned against him, his prick resting just under her skirt, against her pantied ass. On the other side, Kristin spooned against his back, placing her arm around him, her soft breasts into his back. And the three of them slowly drifted into an utterly contended sleep."
    ],
    "authorname": "mellors14",
    "tags": [
        "big cock",
        "big tits",
        "threesome",
        "sex at work",
        "seduction",
        "creampie",
        "student"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-bus-boy-and-the-roommates"
}