{
    "title": "The Elf Dick and The Stormwind Ass",
    "pages": [
        "CHAPTER 1 - A PORTAL TOO FAR\n\nHello there.\n\nMy name is Gale Sunheart and my dick is knotted deep in one of the finest fat asses in all of Stormwind. It's soft and plush, squishing all over my lap as I press down on it. The woman who owns that ass moaned ecstatically as my balls pressed to her plump thighs and I began to pour out my enormous load. This veritable work of art I am pumping full of my semen belongs to one Madam Catherine, a Stormwind Lady with a very unfaithful husband, a son and a streak of lust in her that burns hotter than all of the Fel combined.\n\nNow you maybe asking yourself, how did this gorgeous, canine-cocked Blood Elf come to be ravaging the asshole of Human Nobility? Well, because she paid me to do it.\n\nOkay, maybe that doesn't clear it up real well. See, I own a brothel in Stormwind. One might think a Blood Elf living in the heart of Stormwind might be suspicious, but when you have the love of dozens of Noblewomen and a fortune in gold, it becomes very easy to avoid trouble. Lots of political weight in those asses... Women... Whatever.\n\nStill a bit confused? Alright. Take a seat there in my head and relax. I might as well go back to where it all started. You seem like the kind of person who would enjoy the lewd and erotic tale of a young Blood Elf sorceress and her adventure to become the fucktoy of some of the richest and most powerful women in the Human kingdom.\n\nHonestly, I didn't start like many of my race. I was expected to take up a trade or an art. None of that really appealed to me. Just to assuage my family, I began to study magic, but what I really wanted was to fuck. I wanted to fuck all the time. What do you expect of a girl born with an insanely overactive dick? Though at the time it wasn't as big nor so canine.\n\nAfter thirty years of chasing tail and idly toying with magic, I came across a dark tome in my master's study. It was a book of Fel magic. I discovered how to summon demons and began to dig into that. It had so much more potential than boring evocations or enchantments. I mean, have you seen some of the succubi? Their asses are pure gold!\n\nSo I taught myself to summon demons over the next decade until I managed to bind a succubi to my will. The first night I had her in my home, I plowed her brains out. It was unlike any elf I had ever fucked. So willing and excited to have sex, so eager to have me cum inside her. I reveled in my own success and fucked her well past my own point of exhaustion. I couldn't stop myself. I used every spell, every ounce of power I could, in order to extend my own stamina. Hours upon hours, I fucked the succubi and I made her cum dozens, or possibly hundreds, of times. I ended up passing out with my head on her plump breasts and my sore dick cradled deep in her spunk-packed womb.\n\nIn the night, my mistake was made clear. The imperfect bindings I had rushed to put on her unraveled and she broke free. Before I could awake or even do anything, she laid a curse upon me and vanished. My cock doubled in size and became that of a demon wolf, with a huge knot and absolutely massive balls. My libido became unending beyond imagination and I couldn't control myself. I ran out of my house and leapt on the first person I saw; a beautiful young woman living next to me. I fucked her raw, knotted myself inside her and filled her with a river of cum. When the guards came, I was sure I was going to be imprisoned but the woman vouched for me. Told them that she invited me over and she enticed me in front of her house, that I couldn't control myself because of her magic. She went to prison for two weeks for 'disturbing the peace', all for me. When I visited her, she was completely in love with me. She begged me to stick my dick through the bars and let her ride it right in front of the jailor.\n\nApparently my dick was just that good after the curse.\n\nSo for the next fifty years, I fucked everything. Every woman I could get my hands on. I discovered quickly that I was completely sterile. That suited me just fine as I loved knotting a girl's cunt and blowing a quart of seed inside them. I fucked my life away until one night that I brought home a new woman and made the second huge mistake of my life. I had fucked the head of the guard's virgin daughter, a girl betrothed to another. I was set upon by the entire city of Silvermoon mid-fuck. My only luck was that I hadn't cum yet so my knot hadn't inflated and stuck us together. I could make my esacpe.\n\nThe door to my house was broken in and my lovely partner quickly told me who it was. I couldn't fight the whole city, let alone even one guard. I was a half-assed mage and my only real talent was fucking. In my desperation, I used my magic wrench open a portal and leapt through it. That is where I was about a year ago.\n\n*******\n\nThe churning tunnel of magic beat upon me as I tumbled through it. The guards left me no time to prepare and so it was a rough trip. I fell out of the other end of my portal in a dank alleyway. Thank the Light I landed on my butt because my dog dick was still massively erect and dripping in that cute little elf's pussy juices. Behind me the ragged portal closed with a soft whoosh, erasing any chance of the guards following me. After a second of disorientation, I raised my eyes to look around the dark alley. The buildings weren't of Silvermoon, they were grey stone and very square. Clearly not the elegant spires of an elvish city.\n\nA breeze met my nose and I smelled salt. I was somewhere near the ocean. I shivered and looked around. They had caught me in the middle of dicking the cute girl. I was naked and my dick was hard, cum gathering to erupt forth from me. Forget where I had escaped to or the life that I had lost... I desperately needed to find more pussy to finish getting my nuts off.\n\nSo I reached my magic out and wrapped myself in shadows, concealing my body from view. It would keep me hidden until I knew where I was. I peeked out the alleyway and my eyes widened. All before me was a market bustling with humans. In the distance I could see the blue banners of Stormwind fluttering atop an enormous castle. I had brought myself to the heart of the human kingdom. That was a bit of an error.\n\nWhile my safety from the Silvermoon Guard was all but assured, I now had a whole other trouble. The Blood Elves weren't fans of the horde, but a lot of my kind despised humans. We didn't get along too well since the humans had abandoned us in our time of need centuries ago. Personally, I never had a big issue with the humans I had met in some forays south, but then again I was hardly normal.\n\nMy train of thought came to a screeching halt when a woman walked past me and my jaw dropped open. She had larger breasts than almost any elf I had ever seen and her ass looked big enough in that dress to strangle me if I begged her to sit on my face. My dick throbbed hard enough that I had to focus on the spell keeping me hidden.\n\nSee, while elves were attractive with their long slender legs and lithe, flexible bodies, I rarely saw the greatest of my desires among them. That was curves. I liked a woman with gorgeous curves, heavy in the bum and bouncing with big tits. No elf ever got a body like that succubi so long ago and I wanted it again so bad.\n\nI turned and danced skilfully into the passing crowd, slipping quickly after the plump, gorgeous woman. My hand snatched a cloak from a passing trade cart and it disappeared the moment I grabbed it, my magic enveloping it. I pulled the cloak around my shoulders and drew the hood up over my ears. Should my spell fail, I would have a better chance at going unnoticed like this than being a naked elf with a monster dog cock.\n\nThe busty woman led me up the street and towards richer areas. She was wearing a pale green dress with her dark brown hair done up around her ears. She had such a glorious ass on her that it stretched the dress's seams when she turned or swayed her hips just right.\n\nI followed the woman to a large manor in a clearly upper class part of Stormwind. She walked in the front door and shut it before I could follow. I circled around the house and found a side door that I opened slowly and quietly. It led me into an empty kitchen. I stole quietly through the house and stopped in the foyer.\n\n\"Where have you been?\" A man yelled at the woman my dick was aching for.\n\n\"I went to the market! We needed bread and milk.\" The woman said sharply, clearly a veteran of arguments with this man.\n\n\"Of course, spending all my money! If it wasn't for our son, I would have you out of here, woman!\" The man yelled at her.\n\n\"If it wasn't for our son, you would have your mistress in here. Of course, if that was the case then at least there would be some sex happening in this house!\" The woman screamed at him.\n\n\"Cathy, don't you even start. Just because I don't feel like dealing with your excessive desires doesn't mean I have another woman! Don't you dare besmirch my good name!\" He roared but the woman didn't back down. I found my dick getting harder watching the feisty fire that burned within her.\n\n\"Excessive desires?! It's not excessive to want love! It's not excessive to need to be loved! I'm forty-one! I'm still a woman! My needs aren't excessive! It's only the one! I just want to be loved once in a damn year!\" The plump Cathy yelled.\n\n\"Well maybe if you hadn't gotten so fat after having our son, I might feel more inclined to! Work on that and then maybe we'll come back to this.\" He said, waving to her wide hips and huge breasts.\n\n\"What?!\" Her face reddened, \"Michael, you son of a bitch! You've been throwing that in my face since he was born almost twenty years ago! He's getting married soon and he'll have his own family before winter! You haven't wanted me since I grew pregnant with your child! You only liked me when I was tiny and thin! But I raised your son and suddenly I'm not good enough! You are such an asshole!\" She screamed and tears ran from her eyes.\n\n\"I'm not going to go through this again with you. I'm going to the pub.\" He growled and stomped away.\n\n\"No you're not! Just admit it! Admit you are going to fuck that little red headed slut I've seen you with!\" Cathy yelled, tears dripping from her chin.\n\nThere was the sound of the front door slamming and Cathy slumped on the counter, sobbing heavily. I smiled to myself. This woman just found her dream in me. I was going to fulfill her every need and desire, I was going to fuck her until she was happy again.\n\nCathy wiped at her eyes and walked out of the kitchen, \"Damn jackass. Is it so much to ask? He married me...\" She sniffled, \"Was so damn dashing back in the day... Used to have great sex!\"\n\nShe shuffled down the hallway and I trailed silently behind her. She went into a large bedroom and stood before a full length mirror.\n\n\"Why couldn't I have just stayed thin? I could've been happy. Now it's so hard to lose any weight.\" Cathy pulled at her bodice and loosened her dress, letting it slide off her and to the floor. She stood before the mirror with only a little white slip clinging to her body.\n\nMy jaw opened so fast that I was sure she had heard it hit the floor.\n\nHer body was amazing. Pure and simple. Her hips were wide and plush, her ass jiggling with every motion. Her breasts were plump and only just barely starting to droop with age. I can't imagine where the man, Michael, was getting the idea to fuck some little waif instead of her. Her breasts jiggled above a soft middle with barely a hint of pudge. Her hips widened out into glorious motherhood and her butt looked so fluffy and soft that I could use it as a pillow. My dick jerked eagerly and I imagined what it would be like to have my head clenched between her thighs. I couldn't hold myself back a second longer.\n\nBefore she could turn around, I dropped my cloak and leapt upon her.\n\n\"Waaaahhh!\" The woman screamed shrilly as my hands grabbed her breasts and my huge, throbbing cock pressed up against that thin, lacy slip. I ground against her and wedged that thin material between her asscheeks. She was as soft as clouds on my dick and I groped her harder.\n\n\"You are a magnificent woman!\" I growled at her, letting my shadow spell fall.\n\n\"Ahhh! An elf? What're you doing here? What're you going to do to me?!\" The woman panicked in my arms.\n\nI squeezed her breasts harder and bit her on the neck teasingly, \"I am going to fuck you until my dick hurts.\"\n\n\"Wha...?\" The woman whimpered, her eyes going wide.\n\n\"Feel this? Feel my dick? Your amazing body has made me like this.\" I shoved my burning red member up and down, grinding her cheeks until my precum was starting to soak through her slip.\n\n\"Ohhh...\" The woman moaned as my fingers found her puffy nipples through her slip. She squirmed in my arms and I felt her body heating up as her heart beat faster. She looked up at me in the mirror, \"I'm... I'm not much into women... but I need it... Please, make me feel good! My husband has his mistress, I deserve love too! Put that penis... Mmm... That big fat cock inside me!\"\n\nI grinned widely at her and grabbed the hem of her slip. I pulled it up and she held her arms up to let me take it off. Her body was gorgeously naked before me and I grabbed at her huge breasts again. Her areolae were red and very sexy as I teased them. My dick ground up against her bare ass and she hummed happily. I smiled, \"You had no underwear on under that slip. Pretty kinky.\"\n\n\"Ahhh!\" She gasped when I thrust my cock between her thighs and it ground hard against her pussy. Her flesh was delightful and hot against me. She touched the head of it nervously, \"On the off chance my husband would touch me... I hoped to entice him.\"\n\n\"Well it worked on me.\" I pushed back and forth, lazily fucking her soft thighs.\n\nCathy moaned happily and stared at my cock, \"It's so huge. It's like that of a dog. So exotic, I didn't know you elves were like this. I can't wait to feel it inside me.\"\n\n\"Well then bend over, you sexy, magnificent goddess.\" I said, drawing myself back to her nethers. She smiled from ear to ear as she grabbed the edges of the mirror stand and bent forward. My cock nestled against her wet pussy and I pushed the narrow tip in easily. Her pussy stretched as the real girth pressed inside.\n\nA shrill cry escaped her mouth and her eyes crossed with pure pleasure. Her insides were unlike any elf I had been in. The elves I had fucked had been tight and clenching, milking my cock hard and fast like nothing else. This woman was deep and soft, blazing hot inside and caressing my length like a plush pillowy hole. Youth wasn't all it was cracked up to be if you could be as hot and loving as Cathy's pussy was on my cock. It was as if she had never experienced real sex before, Cathy felt that amazing wrapped around my cock.\n\n\"You feel so amazing inside! How can your husband not want to fuck you? Oh by the Light, I don't think I'd ever stop!\" I moaned, sinking down to my sheathe inside her.\n\n\"You're big! You're huge! You're stretching me out! Oh more! More elf! Put more dick in me! I love it!\" She panted, clinging to the mirror tightly.\n\nI forced my dick right to the root and she moaned deeply. It was the moan of a mature and passionate woman who knew exactly what was coming and exactly how fucking bad she wanted it. I pressed hard against her, feeling her pussy stretch wide around me. Her insides were soft and loose, easily accommodating me thanks to her motherhood. I felt my balls come to rest on her thighs and I slumped over her back happily. I couldn't wait for my knot to grow so I could pump her full to bursting.\n\n\"Cathy, I love your pussy. You are an amazing woman!\" I moaned, thrusting against her ass.\n\n\"Fuck me! Please! Fuck me hard! You're stretching me out inside! Its so amazing!\" Her tongue lolled out of her mouth and she drooled down the mirror.\n\n\"You're making me cum! I'm going to fill you up! Your womb is going to swim in my seed!\" I exclaimed and my knot started to grow. Her eyes widened as I thickened inside her and tied us tightly together. Her moans grew ever more whorish and needy. My urethra stretched wide and a massive eruption of spunk impacted her womb. Her eyes went wide and she gasped, body blazing with the sensation of her womb filling up.\n\nI grunted and shoved against her, pumping more cum from my huge sack. I thrust my knot back and forth, filling her more and more with cum until she was panting and heavy with it. She slumped forward against the mirror and I pressed up against her back, dick locked deep inside her.\n\n\"Amazing...\" She swooned with half-lidded eyes. She reached down and rubbed her leaking pussy, \"You came so much. I've not felt this great in years.\"\n\n\"Your husband is a fucking moron.\" I breathed hard and hugged her tightly, drawing her back up against me.\n\n\"Thank you so much for this. I feel alive again. This is like a dream.\" She sighed with a smile.\n\n\"This? We're not done yet. Lady, if you think I'm giving in after a single load in your pussy, you're fucking crazy. I told you I was going to dick you until I hurt. I mean it.\" I laughed at her and turned around. \n\n\"What?\" She cried out as I pulled her from her feet and laid her face-down on the big bed in the middle of the room. My knot was starting to shrink and I slowly eased it from her stretched pussy. Cum erupted across my legs and she exhaled sharply. My gooey cock slapped down on her plump bottom, not soft in the slightest.\n\n\"You're still hard!\" Cathy said, her eyes sparkling brightly.\n\n\"And you're not coated head to toe in my cum yet. Let's fix that.\" I grabbed her ass cheeks and began to grind myself between them. After I had rubbed all my cum around well enough, I pressed myself to her asshole and my pointed tip popped in.\n\n\"Ahhh! I love you! Oh Gods, I've not done it in that hole since I was a teenager! It feels amazing!\" Cathy squealed, arching her back under me as I sank deeper. Her asshole was just as hot and inviting as her cunt had been. I buried myself completely inside her, her asshole taut around my girth.\n\n\"Has your husband ever done this?\" I asked, lifting one of my legs up on the bed to let my huge, virile sack hang free. It slapped wetly against her ass as I drove down into her again and again.\n\n\"Never! He could never make love to me like this! You're so much better than him!\" Cathy cried out, fingers digging into the bedding as I drilled her asshole.\n\n\"That's what I like to hear! Now take my dick. You love this cock, don't you?\" I pressed down on her and dug my fingers into her big soft tits.\n\nShe moaned happily, \"Yes! I love it! I love you! I never want another cock again, only yours! I've never been knotted before and it was the best thing I've ever felt!\" She screamed and I came deep up her ass.\n\nI didn't just cum though, I nutted harder inside that plush human asshole than I had been able to cum since the night with the succubus. I came and spurted and spewed, her tight ass holding my knot completely immobile. I blew so much seed that I thought my testicles were going to collapse. By the time I felt myself slowing down, Cathy was gurgling in front of me and cum was running out of her mouth.\n\nI sighed heavily and laid down on her back. For the first time in decades, I didn't feel like immediately plowing her again. Instead I cuddled up on her and rubbed myself against her warm body.\n\nCathy coughed up another mouthful of cum across the bed and sighed. She was breathing just as hard as I was and a weak smile came across her face, \"Amazing...\"\n\n*******\n\nI awoke the next morning with a mixture of surprise and tingling pleasure. The surprise was because I had fallen asleep so quickly. Between the portal and the wild fuckings, I guess I wore myself out.\n\nThe pleasure was because I was sunk into a soft bed and there was a warm mouth working the top third of my cock while a pair of soft hands rubbed the rest.",
        "I opened my eyes to find a big, plump ass sticking up in the bed next to me. Cathy's curly brown hair was bobbing up and down on my cock, sucking all my morning precum down eagerly. Her fingers suddenly groped one of my melon sized spunk makers and I moaned pleasurably.\n\nShe popped off my cock and looked back at me, smiling through the spittle running down her chin. She stroked me idly as she spoke, \"I am so glad to find you still here this morning. You were amazing last night. After a romp that hard I expected to wake up sore, but I'm not. I feel fantastic. How can I ever repay you?\"\n\n\"You can keep sucking.\" I suggested with a grin.\n\n\"Yes, I know that.\" She said with an exasperated smile, \"Last night... Oh, Last night you made me feel more like a loved and beautiful woman than my husband has in two decades. Just the thought that my body could be so enticing to someone that they would willingly commit a crime to be with me is... It's just...\"\n\nShe bit her lip as she tried to find the words. Instead she abruptly turned and plunged her head down on my cock, taking the wide head all the way down her throat until her lips touched my growing knot. Her fingers felt around it and she backed up, teasing the sensitive bulb to full size. I moaned loudly, suddenly inundated with such wonderful pleasure. I reached out and grabbed a handful of her plump ass and humped against her face eagerly. My balls churned with cum and I began to shoot it into her belly. I shoved two fingers into her wet pussy and worked her as hard and fast as I could.\n\nI pumped her full of my seed until it was running out of her nose and she backed off me, gasping deeply. I continued plunging her cunt, working my thumb against her clit at the same time. She moaned and grabbed my leg, \"Don't stop! Yes! Yes! Yes! Yes! Ahhhh!\"\n\nHer pussy clenched down on my fingers and she shuddered wildly. After a few more seconds, she calmed down and slumped back on her ankles, \"I can't even remember the last time someone made me cum with their fingers. You're very good!\"\n\n\"Fifty years of practice will do that.\" I smirked at her.\n\n\"Fifty... How old are you? You look about twenty.\" She asked with wide eyes.\n\n\"One hundred and forty two.\" I said, patting her ass appreciatively, \"You're the beautiful young woman in this bed. It's a good thing your husband didn't come home last night.\"\n\nCathy blushed and smiled, cuddling down against me. I kept my arm around her, fondling her plump cheek and she giggled, \"He was off with his mistress. I expect he'll come in sometime around lunch apologizing that he fell asleep at the tavern.\"\n\nI nodded and squeezed her butt again. She just sighed and gave me a deep kiss. I squeezed her ass harder. I couldn't get enough of that booty. A thought struck me, \"Got any friends?\"\n\n\"What?\" She cocked her head.\n\n\"You asked how you could pay me back. Got any friends like you? You know...\" I slapped her ass and made it jiggle against my hand, \"Like you.\"\n\n\"Oh I think I could accommodate that. You have no idea how much any of us Noblewomen would pay for a night like you gave me.\" She smiled widely, slipping out of bed. She sauntered towards the dresser in the corner, bumping her hips teasingly with each step. \"There is a brothel around here that specializes in young cuties for the men of Stormwind to enjoy. There are a whole lot of us being left to gather dust.\" She bent forward over the dresser, wriggling her butt back and forth.\n\n\"You really have a fantastic ass.\" I said as I stared at it.\n\n\"It's little comments like that that would've kept my confidence up all these years. But instead my husband calls me fat. Stupid moron.\" She chuckled, walking back to the bed. She sat down next to me and kissed me again. She pushed me back into the pillows and kept kissing. My hand went for her ass again, but I found something else in the way.\n\nI drew back with a raised eyebrow and lifted a cloth purse in my hand, \"Huh?\"\n\n\"Just knowing I am beautiful and I can be loved is worth every gold in there. The sex was a heavenly bonus. I wasn't kidding when I said I'd pay well. I'll talk to a couple of my friends and I know that they'll pay even more.\" She smiled widely and then leaned her butt back into my hand. I squeezed it and her eyes widened, \"Oh my goodness! I've not asked your name!\"\n\n\"My name is Gale. Glad to meet you Cathy.\" I smiled and kissed her again, fingers still sinking into her plush bottom.\n\n*******\n\nCHAPTER 2 - KNOT A PROBLEM\n\nFifty gold. I stared into the bulging purse. Cathy had given me fifty gold for that night of fucking. I was so shocked because I, myself, would've happily paid a hundred gold for last night. Her ass was so soft and plush, her pussy so hot and inviting...\n\nMy dick throbbed hard and I pushed myself off the soft bed. Cathy had left to go tell one of her friends about me more than an hour ago so I could go fuck her this evening. The thought was very enticing, but I was too horny right now to wait any longer.\n\nSo I settled for her underwear drawer.\n\nI drew open the top dresser drawer and stared happily at the silken and lacy contents. I ran my hand through them and thought about all the times this cloth had come in contact with her supple skin and warm pussy. My other hand wrapped around the base of my cock and I began to jerk myself off.\n\nIt had actually been a lot of years since I had masturbated. My arm grew tired far quicker than I would've liked, so I grabbed a pair of lacy panties, wrapped them around my dick and switches hands. The soft material felt fantastic as it slid up and down my skin.\n\nI raised another pair to my nose and breathed deep the soft flowery scent. She smelled of lavender and roses. I switched hands again and continued rubbing with a new pair of panties, this time silken and very tight looking.\n\nIt took another two pairs of panties and four hand switches before I was ready to blow. I wrapped two pairs around my cock and jerked wildly with both hands, humping hard against the soft material. My knot inflated slowly around my base, increasing the pressure in my cock. My precum was spurting from my tip and I rose up on my toes.\n\nI was just tall enough to bury the head of my cock in that soft, fluffy drawer and I began to blow. Thick, hot seed erupted into her underthings and I moaned loudly. I splattered every pair in the drawer liberally before I wiped myself clean with the pairs in my hands and stuffed them back in the drawer. With a cheeky smile, I slid the drawer closed and sighed happily.\n\n\"Leaving me a present, are you?\" Cathy said with a chuckle. She was leaning against the doorframe, clearly having been watching me.\n\n\"Hey, you only made me cum once this morning. I NEED more than that.\" I emphasized, jerking the base of my cock for punctuation. She sidled over next to me and opened the underwear drawer. Her silence made me wonder if I had gone a little far.\n\nThat fear was immediately alleviated when she hiked up her dress and pulled down her panties. She was wearing a rather sexy pair, with a T back and lacy frills. She passed them to me with a smile. Still warm and just a little damp from her arousal, I brought them to my nose and inhaled softly.\n\n\"Fantastic.\" I smiled at her.\n\nShe reached in the underwear drawer and pulled out a particularly messy pair, the one that had been pressed right up against my cock. Without any word, she put her feet through them and drew them up tight to her pussy. She turned and pulled up her dress higher, letting me see them taut on her ass. My seed seeped from the seams as they stretched tight against her skin. I could only stare in awe. She turned and kissed me on the lips, \"Thanks for the present. I'm glad even my underwear is sexy enough to get you off.\"\n\nI grinned again and took another whiff of her panties, staring right into her eyes. She seemed to shiver with delight and then she shook her head, \"Geraldine, that's the friend I went to talk to, wants you over before sundown. She said she's going to get her husband out of the house for the night and you can plow her into the heavens.\"\n\nShe reached in the purse she was carrying and drew out a small piece of paper. It had instructions on where Geraldine lived and I put it in my bag with the money.\n\n\"You're fantastic.\" I wrapped my arms tightly around her and kissed her deeply while I felt that glorious rump once more.\n\nShe seemed to linger in the kiss a bit long before stepping back, \"Go on. Get out of the house before my husband gets home. But don't forget about me.\" She reached down and cupped my hot red dick, \"I will happily pay for many more nights with you.\"\n\nI smiled wryly and grabbed my cloak off the floor, \"Of course, my lady! I shall be back to plow your delectable ass whenever you want!\" I said with a flourish and a bow. She giggled at me and I tossed my cloak around my shoulders. A few words of magic and I disappeared from sight.\n\nAs I slipped out of the bedroom, I heard her sigh happily and flop down on her bed. That was a woman I could spend years in the arms of. If only she was an elf...\n\nI clenched her panties in my hand and smiled to myself, sliding silently out the kitchen door again. Forget elves and their slender, sexy bodies. I was going to stay here in the Human city and fuck all the gorgeous, curvy woman, feeling so lonely after being abandoned by their husbands.\n\n*******\n\nSince Cathy told me to be over at Geraldine's in the evening, I had most of a day to wait. So I decided to go exploring. As long as I was careful and stayed away from crowds, the chance of me getting spotted behind my magic was a minimal one.\n\nBut by mid afternoon, it was clear that my invisibility magic was a bigger drain than I had thought. I was getting tired and magically drained. If I was to remain a ghost to this town, I was going to need to find a more permanent invisibility.\n\nA glance to the south showed me the tall, grandiose spires of the mage's district. If I could get my hands on some spell thread, I could stitch my magic spell in runes around the cloak. It wouldn't completely take away the spell's drain, but it would massively ease the burden. It was the difference between trying to erect a castle with scaffolding and without. Using a magical tool like that always made spells much, much easier in the same way because it gave a more solid form for the magic. Why do you think sorceresses and wizards always carry staves and wands and wore such grandiose robes?\n\nI lessened the spell to a thick chameleon rather than total invisibility. That gave me some breathing room as I stole across town towards my goal. The shadows did the rest to keep me hidden.\n\nEverything went well, even as I passed into the more sparsely populated mage district. That is until I made the stunningly idiotic move of bumping into someone.\n\nThat someone was a young woman in flowing blue robes with curly red hair and big round glasses. She turned and looked in my direction. I instinctively redoubled my efforts on my spell, but it was useless. She put a finger to her glasses and looked around. Glittering blue mana swirled through the lenses and she turned right towards me. Whatever magic she used pierced right through my spell and her face registered my existence.\n\nI lunged forward and grabbed her around the middle. With barely a squeak from her, my lunge carried us into a dark alleyway behind an empty trade cart. I wrapped my hand over her mouth and held her down. She trembled in fear under my grip and I leaned down close to her to whisper, \"No sounds or I will make you stay quiet.\"\n\nShe nodded eagerly, showing absolute compliance. I sighed and looked over my shoulder. Nobody had noticed anything and nobody noticed the girl laying alone in the alleyway with barely a blur kneeling on her chest.\n\nI looked back at her and whispered again, \"You will take me to your home. Do it without a word and without signalling anyone. If I suspect you at all, I will be forced to take action. Listen to me and you will come out of this no worse for wear. Okay?\"\n\nShe nodded quickly and I slowly let go of her. She sighed and rubbed her neck, \"I live just down the street. Alone.\"\n\n\"Good. Go.\" I said, getting off her. She looked around as though she couldn't see me and I realized the magic had gone from her glasses. She got to her feet and walked out to the street. Keeping her head down and her mouth closed, she headed down the street. I followed close and she led me to a teeny-tiny two story house crammed between two much nicer houses. She opened the door with a key from her waist and stepped inside.\n\nI followed and closed the door. The inside was just as small but it was wonderfully cozy. A small fireplace with a plush chair in front of it. A warm little kitchen. A few book cases lined the walls. There was a staircase in the back, spiraling up the second floor.\n\n\"Please don't kill me! I don't want to die! I'm just an apprentice!\" The girl stammered fearfully, staring at the door as if I was still standing there.\n\nI stepped over to the one window on this floor and pulled the curtains shut. The spell around me faded and she jumped in shock when I came into view.\n\n\"How did a Horde spy even get into town? Are you here to kill someone? Why me? Why must I die?!\" She said frantically. I strode over to her, letting my cloak flutter open, and pulled her into a kiss.\n\nShe just kind of froze up in my arms and I pressed my tongue against hers. My hands felt up her robe and I felt my cock twitch eagerly. She wasn't as plump and curvy but she had a nice butt and some well-rounded hips. She felt quite sexy against me.\n\nAfter a moment more she seemed to wake up and pushed back from me. Her eyes were wide and she took a glance down at my hardening dog dick before looking back up at my face, \"What?!\"\n\n\"I'm no assassin or spy. I'm a horny elf exiled from Silvermoon with a penchant for plush women.\" My hands were still on her sides and my dick twitched against her leg.\n\nShe blushed and looked down at my dick, \"Why do you have one like a dog?\"\n\n\"Bad foray into Fel magic. Got cursed by a succubus after I summoned her and fucked her brains out for most of a day straight.\" I lifted it up and let it flop against her belly. She squeaked and jerked back out of my arms.\n\n\"It's... It's so big...\" She stammered.\n\n\"Yep and it's going inside you.\" I said simply, taking a step towards her.\n\n\"If... If I let you... Then... Then you won't kill me?\" She looked at me fearfully.\n\n\"Oh please, you're going to love this.\" I said, reaching down to stroke my cock enticingly. It's hot red girth pulsated and grew.\n\n\"I can't fall in love with the enemy!\" She cried fearfully, shaking her head.\n\n\"No love? Well, if you're so sure, fine. I won't fuck you. Just come here and touch it.\" I said with a false sigh of defeat.\n\n\"Just touch it?\" She asked, positively shaking with nervousness.\n\n\"Yea, put a hand on it.\" I said, leaning my dick towards her. It's thick canine shape slowly slid into her hand and she closed her fingers around it.\n\n\"It's so hot...\" The girl mumbled, sliding her hand down to the base of it. She pulled her hand back to the tip and felt around it a bit.\n\n\"Yes, that feels good.\" I moaned.\n\n\"Really? I'm making you feel good? I... I've never touched one before. I didn't know it would be so sensitive.\" She said, sliding a thumb over the tip. I shuddered with delight at the sensitive flesh. The girl was getting more interested as she rubbed it. Soon she had a second hand down touching my balls. She got down on her knees and looked closer at it while I moaned due to her eager attention.\n\n\"Hey, put it in your mouth.\" I suggested.\n\nShe looked up at me, \"But...\"\n\n\"Please.\" I said, my dick twitching in her hand.\n\nThe girl blushed and opened her mouth, slurping down on my salty pre that was beading on the tip. I cooed appreciatively and rubbed her fluffy red hair. She wrapped her fingers around my balls again and sucked my dick deeper. The girl was inexperienced but wonderfully eager. Her tongue was hot and wet as it rubbed the underside and she eagerly drank my spurts of precum.\n\n\"That's it! You're making me feel so good. Can you feel my knot? It's growing.\" I grunted, pulling her hand down to the base of my dick. Her fingers teased the inflating flesh and I gasped happily.\n\nShe backed off me with wide eyes, both hands eagerly exploring my growing knot. It grew to twice the girth of my cock and she pressed against the tight flesh. \"This... This could be... inside me... What does it feel like?\"\n\nI moaned loudly and bucked my hips in her hands. Cum burst across her face and blasted her glasses. Hot seed dripped down her cheeks and I continued shooting until she was wearing a sticky mask of my spooge. It soaked her hair and seeped into her robes, making a right mess of everything.\n\nShe just knelt there in shock, eyes wide behind her glasses and mouth full of my cum. She swallowed and breathed hard, \"It tastes... good. So good. I want more...\" She sucked on my dribbling dick, drinking down the dregs of my cum.\n\n\"Ahhh! You know, for only touching it, you made me feel great!\" I sighed as she sat back on her ankles and licked her glasses clean.\n\n\"But! But I didn't... I mean... I...\" She exclaimed in surprise as she looked up at me, glasses held in her shocked hands.\n\n\"Alright. Well, promise not to tell anyone about me and I'll go.\" I told her with a kind smile. I knew just how to play a naive girl like her after my time in Silvermoon.\n\nShe didn't seem to understand as she just stared at me. After a second, she shook her head and got up on her feet, \"Please don't go!\"\n\n\"Huh?\" I cocked my head innocently, loving how she was falling right into my teasings.\n\n\"Well... well your cum...\" She licked a bit off her lip, \"And I feel so... What I mean to say... Would you...\" I waited patiently as she stammered and squirmed. It took her a moment more to speak again, \"What you wanted to do originally!\"\n\n\"Yes?\" I raised an eyebrow.\n\n\"Please. I'd like you to!\" She exclaimed, quickly untying the belt of her robes.\n\n\"Do you have a bed?\" I asked.\n\n\"Yes! Upstairs!\" She turned and fled towards the stairs, leaving clothing in her wake. I followed her as she stripped hurriedly and mounted the stairs in just panties.\n\nThe second floor was even smaller and it just had a bed and a few cupboards. She stood before her bed, panties around one ankle and a bit of cum still dripping down her face and down her perky breasts. The robes didn't do her body justice, it did indeed have a delightful shape to it.\n\n\"That eager huh?\" I asked.\n\n\"I'm so hot! Please, don't make me wait.\" She begged.\n\n\"One price first.\" I said.\n\n\"Anything! I'll pay it! I don't have a lot of money... but I really want...\" Her eyes stared hard at my cock.\n\n\"Not money.\" I bent down.\n\nShe watched as I lifted her foot and took the panties off her ankle. Where Cathy had a lacy thong, this girl was wearing a plain pink cotton. I sniffed at them and my dick throbbed powerfully. She had a warm, youthful scent that spoke of virginity and inexperience. I was going to do the same to her that I did to Cathy.\n\n\"My underwear?\" She asked, blushing as I set them aside.\n\n\"I like collecting the scents of different women. Now back on the bed.\" I pushed her back on her butt and spread her legs.\n\nHer pussy was covered in fuzzy red hair and I dove into it with relish. Her flavor was rich and virginal, a pussy that hadn't known mind numbing pleasure. That was seconded by her gasp and long, lustful moan when I had only just dug in my tongue.\n\n\"Goodness! By the arcane, masturbating never felt this good!\" She arched her back and clenched her thighs against my face. I dug my tongue deeper and tasted her sweet virgin juices. My dick was aching for it, but I knew I had all afternoon to kill, so I might as well make a show of it for this young sorceress.",
        "I slid her further back on the bed and lifted her pelvis with her legs on my shoulders. This pushed her into the mattress and raised her ass up, giving me a position of utter control. She cried with ecstasy as I dragged my tongue through her wet folds and across her bulging clit.\n\n\"You're so forceful! My pussy feels so good!\" She writhed underneath me. The flavor of her pussy was making me drool precum nonstop at this point. I slid a finger up under my chin and rubbed it against her tight asshole, rubbing around all the lube that her pussy had been dripping on it. She jumped at the touch, \"There? You're going to touch me there?\"\n\nI responded by sliding my finger slowly but unwaveringly into her extremely tight asshole. She screamed and clenched down hard, but I worked my finger into her velvety innards.\n\n\"It feels wierd! Oh my butt feels wierd! I think I'm gonna cum!\" She shook and thrust her crotch against my face. I wriggled my tongue hard against her clit and twisted my finger in her ass. She came wildly and her pussy fountained in my mouth. I jerked back in surprise and her juices spurted all over my face. She was an unbelievably wet woman, I had never seen anything like it. As if by magic, she cried and her pussy spurted again, splattering me liberally. I smiled and pressed my lips to her pussy, drinking down the next squirt and the next, and all the rest of her delicious girl cum.\n\nShe slumped back, panting hard as her legs slipped off my shoulders.\n\n\"How's that?\" I asked her, looking down at her panting body and her shining eyes.\n\n\"Amazing... Are you going to use that now?\" She breathed hard, staring down at my positively aching penis.\n\n\"Oh yes. I wouldn't dare disappoint you.\" I grinned widely and lifted it to her still dripping cunt.\n\n\"Do it! Stick that big red doggy dick inside me!\" She begged eagerly, pulling her legs wide for me. I nestled the pointed tip between her sopping wet folds and slowly pushed into her. She cooed with delight as I slowly pushed her open.\n\n\"You are a flood of a woman! Look at all these juices! You're wetter than anyone I've ever fucked!\" I said, slowly sliding deeper into her. Her pussy disgorged delicious lubrication all over my shaft, easing the passage of my dick into her near-virgin slit.\n\n\"You're so huge! Your dick is stretching me out! Deeper! Push it deeper! Shape my womb to your cock!\" The girl howled wildly, pulling me deeper with her squirming hips.\n\n\"You're my kind of woman! Horny and wet, thinking of nothing but my cock as I pound you stupid!\" I roared, shoving my dick deeper into her with each thrust. Just like she wanted, her pussy began to conform to my shaft. It stretched and drew tight around me, taking in the last few inches of me until my crotch was pressed tightly to hers.\n\n\"That's it! That feels amazing! So deep!\" Her voice was heady and desperate for more pleasure. Her legs wrapped tight around my hips and I humped away at her, each thrust drawing joyous sounds from her.\n\nHer cunt was positively delightful with how tight it was gripping me. I felt a tingling in the base of my cock that heralded my knot. I gave a thought of worry to her about the size of my knot, but that was driven from my head moments later when her pussy squeezed down on me again. I thrust against her insides hard and let my knot do it's job.\n\n\"It's growing! Your thing is growing!\" She threw her head back with a squeal and let my knot inflate until it stuck us tight together. Her insides quivered with glorious ecstasy and her pelvis convulsed from the consecutive orgasms. I felt my ass convulse and my knot reached peak hardness, drawing up every ounce of semen my balls could generate.\n\nMy cum vein stretched and an enormous flood of white seed poured into her womb. I moaned and bucked against her, thrusting my knot back and forth as more splooge rushed forth. My knot kept us tied tightly together while her pussy continued to fill. She moaned whorishly and drooled down her cheek.\n\n\"That's it! That's it! Take it! Take all my seed!\" I moaned, climbing up on the bed to stradle her closer. My dick kept us from moving more than an inch apart and I wrapped my arms tightly around her. More cum spurted into the sorceress girl and she moaned deeply.\n\n\"You've got me so full! Your cum is stretching my womb out!\" She breathed hard.\n\n\"Get used to it.\" I sighed, rolling onto my back and holding her tight against my chest, \"We're going to be here for a little while. You're far too tight for me to pull out until I'm totally flaccid.\"\n\n\"I can't say I don't like it.\" She smiled weakly, snuggling on top of me, \"I've never felt so amazingly full before.\" We laid together quietly, eyes closed as we enjoyed the afterglow of cum packing her so tight. After a moment, she raised her head, \"Hey, what is your name, elf?\"\n\n\"I'm Gale Sunheart.\" I smiled and caressed her bottom, \"Who are you?\"\n\n\"Sherra Athis. I'm an apprentice sorceress.\" She said, squirming a bit to feel my knot move inside her.\n\n\"Well Sherra, who do you love?\" I said with a cheeky smile.\n\n\"I think it's plenty obvious.\" She ground her crotch against mine and all my cum squished around inside her, \"And I'll never tell anyone about you. Not as long as this dick makes its way back inside me again.\"\n\n\"I think I can make that happen. I've got plans tonight though.\" I told her, sliding my hand down her rump. I gently teased her asshole.\n\n\"Oooh! Where will you be going tonight?\" She moaned at the touch.\n\n\"Another woman who is going to fall in love with my dick. Hey, think you can help me with something? I need some spellthread.\" I asked her.\n\n\"Well, I can't exactly help you right now. Mmmm...\" She swooned a bit as she ground herself on my lap, \"But I'll do anything for you. You made my first time so amazing. You are amazing.\"\n\n\"What fantastic luck I had for you to fall on my dick.\" I smiled, patting her ass lovingly. She gave a lusty purr and rubbed her cum-packed pussy on me some more. This crash in Stormwind was turning out better than I could've hoped.\n\n*******\n\nCHAPTER 3 - CATYLA THE HORSE\n\nThe stitched cloak had not worked. I didn't know why but somehow a Draenei woman had noticed me and she was skillfully tailing me right now. It was getting late in the evening and I only had a few hours until my meeting with Cathy's lovely friend Geraldine.\n\nThe magic had been right. Every rune had been stitched correctly around the hem of the cloak. The spell itself was light and efficient, something that I could keep active for probably no end of time without the slightest drain. No guard had been able to notice me and not a single other person in the Mage's Quarter had seen me.\n\nYet about twenty feet behind me and keeping to the shadows was a tall, pale blue woman. She didn't look like a warrior or a mage of the alien race. She wore loose grey shorts and a fluffy white shirt. An eyepatch sat over her left eye and her sea green hair was pulled back in a long tail.\n\nI slipped deftly around a corner and headed down an alley. It was the until near the end that I realized my mistake. I had cornered myself and the tall buildings of the Market District didn't have many handholds for climbing. I turned and found the Draenei standing at the mouth of the alley. My only option left to me was to kill her and flee.\n\nMy magic flowed into my hands and I stood, invisible in the shadows, waiting for her to come close enough.\n\n\"I know you're here little elf.\" The Draenei whispered, walking towards me. She didn't seem to be able to see me with how she was turning her head. I would've been curious but her next line answered my question, \"I can smell you down here. I can smell your lust~.\"\n\nIf she could only smell me, then perhaps I had a chance. I felt stupid that I had never considered that but in the city of Stormwind with herb shops, beggars in the streets, and horses riding everywhere, I hadn't thought the aromatic cum from my fuckfests would be that noticeable. I really needed to take a bath apparently.\n\nI deftly slipped forward and aimed to use her height against her. The alley was wider than her arm span and I dove for the wider half.\n\n\"Got you!\" She lunged with shocking speed and drove one of her hooved feet into my belly. Pain seared through my middle and the next thing I knew, I was staring up from a pile of broken old crates. The draenei stood over me with a smile glittering on her face, \"Hello there elf. Come along quietly now.\"\n\nShe reached down and grabbed my neck. The last thing I felt was the strangest feeling of lethargy and peace flood my body. My vision blurred and my head slumped onto my chest.\n\n*******\n\nWhen I awoke, my body was warm and relaxed. There was soft blankets beneath me and a pillow under my head. I forced my eyes open and looked around. I was in a small room with a warm fireplace crackling away. The ceiling above me was worn old paneling and the walls were painted a soft white. The bed I was in had clearly been made for someone bigger.\n\nI tried to sit up but found my body nonresponsive. Nothing from my waist down would move at all. I wasn't in pain or injured. I could feel my legs so the kick hadn't broken my spine. Something was just keeping my legs limp as noodles. \n\nThere was the clack of hoof on wood and a door opened next to the fireplace. The Draenei who had caught me stepped through the door, utterly naked.\n\nThe room behind her was a bathroom, but that wasn't what caught my attention. What got me was the gigantic equine shaft hanging from her crotch. I could tell that it wasn't hard yet it hung halfway to her knees. When it did get erect, it would likely be longer than my own puppy pecker. I was nearly a foot long. She had to reach at least fourteen inches. Such immense size...\n\nHer balls, also bigger than my own, jiggled so enticingly against her thighs as she walked towards me. I could hardly keep myself from drooling.\n\n\"So what is an elf like you doing in Stormwind?\" The Draenei asked, stopping next to the bed. Her dick was so close to me that I could smell the heady musk coming from it. My tongue flicked over my lips.\n\n\"Ass. One thing led to another and I came here to fuck big plump asses.\" I said, my cock positively throbbing.\n\n\"Really? You came to rape women? Well let's see how you like a little rape.\" The Draenei said with a devious smile. Her cock pulsed with blood as it started to slip free of its girthy sheath.\n\n\"Do it!\" I moaned, eyes still locked on her cock. I licked my lips, \"Fuck me. Put that massive horse dick in my ass. Fill me up. Then let me fuck your sexy blue ass.\"\n\n\"Uhhh... What?\" The Draenei seemed honestly shocked. I watched her cock rise up and dangle so enticingly right before my nose. My estimate was right about her length, she was almost sixteen inches long and as thick as my arm. I opened my mouth and licked at her head. She jumped in surprise and stepped back.\n\n\"Oh come on! I never knew you Draenei had such amazing dicks! Please let me suck on it!\" I moaned needily. The taste of her still lingered on my tongue and I had to have more.\n\n\"Usually when I get hard, women get scared. At least elves and humans do. I imagine I'd probably match most Tauren.\" She scratched her head, \"I'm going to rape you. Don't you get that? I'm a complete stranger and I'm going to put my dick in your ass until I am satisfied. I don't care how much you scream or beg for me to stop. Nobody can hear you here and you're half paralyzed.\"\n\n\"It's not rape if I want it. I'm horny as hell here! Shut up and fuck me in the ass already!\" I yelled at her, gesturing at my huge throbbing red cock for emphasis.\n\nThe Draenei laughed heartily, \"I don't know what I expected when I came upon you, but the smell of you alone was enough to tell me I could get a nice free fuck out of your tiny ass before I threw you to the city guard. I guess I might get more. I'm going to unparalyze you, don't try to run.\"\n\nI watched her reach down and put a hand on my shoulder. With her other hand, she shoved hard against my throat. I gagged and coughed, but immediately my legs jerked. I flexed my toes and smiled. In the blink of an eye, I leapt on the Draenei. My hands dug into her plush hips and I rubbed my face against her huge member. \"I've never seen someone with a dick like a horse. Haven't fucked any Tauren before. This is amazing.\"\n\nI stretched my mouth wide to fit her head in and I slurped loudly on the delicious salty pre that was bubbling forth. She was easily the tastiest thing I had ever sucked on and I forced myself further down. Even though it looked hard, her cock had a slightly spongy texture to it that let it bend down my throat easily. I soon found my lips pressed to her sheath and she moaned loudly, \"What kind of a whore of legend are you? Even my own kind have a hard time sucking me off! How are you doing this?\"\n\nMy throat convulsed around her and I pulled on her ass. My jaw popped and her sheath slid into my mouth. Her dick was almost in my belly by now and I pushed until my nose was buried in her jade pubes. She tasted so good and the sound of her moans was so enticing. I groped her huge balls with both hands and she bucked against my face.\n\nMy lungs were starting to burn but I wouldn't give in before she did. My dick ached with desire and I shoved a hand between her thighs. Her ass was supple and warm to the touch. My finger slipped into her asshole easily and I found her prostate instantly. It was huge and pulsating with all her lust and desire. My finger touched it and she jerked forward like a coiled spring. I was driven back into the bed and she humped my face with uncontrolled abandon.\n\n\"How are you doing this? Why are you touching my ass?\" The Draenei screamed and her hot, thick semen began to fill my belly. I pushed a second finger in her ass and rubbed her bulging spot as hard as I could. It made her howl and buck wildly. My belly started to stretch and my head was swaying with lightness. I swallowed and worked her with a fevered need, hoping to finish before I passed out.\n\nMy vision started to dim when she finally pulled herself back. That massive dong pulled free of my lips with a sloppy pop and a huge spray of cum all down my body. I gasped sweet lungfuls of air as soon as she did. My belly was warm and stuffed with her delightful cum.\n\n\"How did you do that? Never have I felt anything like that.\" The Draenei slumped weakly on the bed next to her. The delicious smell of her cum dripping on the floor wafted over me.\n\n\"Never... Never played with... Your ass before?\" I panted, pulling myself up next to her.\n\n\"Never. It's humiliating. I am the one who gives it to other people. I don't take it.\" The Draenei shook her head. Her eyes glowed as brightly as my own and I couldn't help but be enchanted by them.\n\nI laid a hand on her huge cock and stroked it's gooey length, \"You have missed so much pleasure!\"\n\nShe laughed, \"Clearly! I never knew it could feel good! I always got a kick out of raping criminals in the ass. I never knew it could feel good.\"\n\n\"How about I show you just how good?\" I said, sliding my hand down to the inside of her thigh.\n\nShe looked uneasy but curious, \"I don't know about this.\"\n\n\"Look, if it isn't the best time you've ever had, take me off to the city guard.\" I said, sliding my hand under her huge sack to fondle it lovingly.\n\n\"Alright. Fine. But go slow.\" She said, spreading her legs.\n\nI got on my knees and lifted that glorious, heavy sack. Her little blue asshole looked so inviting and my cock was practically drooling precum. She watched me with uneasy eyes as I lined myself up and slowly pushed in. The upside to my dog dick was the tapered tip made anal very easy. I was gentle and slow with stretching her to my own thickness.\n\nShe moaned loudly, \"Oh wow! Oh by the light! That is amazing! I can feel it in the base of my dick! My dick feels hot and its so hard!\"\n\n\"Just wait until I start fucking you. You're in for a surprise.\" I smirked as more of her hot insides engulfed my dick. I pushed past my dormant knot and wrapped a hand around the base of her huge member. The feeling of her ass clenching and wriggling was more than enough pleasure for me at the moment. I wanted to break this Draenei's brain.\n\n\"It already feels this good! Why haven't I ever done this?\" The Draenei cried out, her legs wrapping around my waist.\n\nI grabbed her soft hips and shoved forward, pushing with my dick. She gasped sharply and a huge glob of pre spurted on her breasts. I drew myself back and worked into a nice rhythm that had her moaning.\n\n\"So... You have a cock like a horse...\" I said as I fucked her closer to my orgasm.\n\n\"Uh huh. Mmm. That's how all Draenei are. Goes with our hooves.\" She cooed as my dick slid deep into her.\n\n\"If you haven't noticed... Mine is that of a canine. Not all elves... I'm kinda special.\" I humped harder and made her cock spew more.\n\n\"I... Did.\" She gasped deeply.\n\nI shoved as deep as I could when the the tightness in my cock heralded my knot's inflation.\n\nI looked in her lusty eyes, \"And do you know what a dog dick does... Nngggh... When it cums?\"\n\n\"What does it... Does it...\" Her eyes widened as the realization hit her. She felt my knot growing in her ass and it pushed on her prostate.\n\nI gyrated my hips and pushed deep inside her. Her velvety insides were clenching and squeezing me in amazing ways. I grunted and felt my knot swelling more.\n\n\"Yea. Feel it. Get ready for heaven, cutie.\" I grunted, my cum starting to pump into her ass. I bucked against her and watched her dick start to cum as well. Her semen came out thick and goopy, splashing over her breasts and running all down her belly. \n\n\"Its too big! Oh light, I'm cumming too hard! Please, no! Don't do this!\" She screamed as I reached peak hardness and lodged us tightly together. I wrapped a hand around her spasming cock and began to jerk it eagerly. She threw her head back and punched holes in the mattress with her horns.\n\n\"Cum for me baby. More. I want to see just how much are in these huge baby makers.\" I urged her on, stroking her with one hand and fondling her balls with the other.\n\n\"Nooooo~!\" She screamed and more cum poured from her. I put my mouth to the seemingly bottomless spray and drank the thick goo until I couldn't swallow anymore.\n\nFor the better part of the next fifteen minutes, I stayed stuck fast in her once virgin ass. The entire time I tormented her with orgasms, rubbing her enormous horse dick with both hands and watching her cum and cum and cum some more all over herself.\n\n\"No. Please. Stop. I'm going to die.\" She whimpered and pleaded.\n\n\"Okay fine. But my dick is still gonna be stuck for while more. You're pretty fucking tight.\" I sighed and let her cock flop in the bath of cum that covered her and the bed.\n\nShe slowly caught her breath and croaked up at me with a scream-hoarse voice, \"You're a monster. I've had to cum a hundred times since you started. How did you do all this?\"\n\nI laid down in the gooey mess on her chest, gently squeezing her cock between us, and clasped my hands upon her sticky boobs, \"When you are born with a dick in elf society, you pick up hobbies. When I was considerably younger and more foolish, I tried my hand at demon summoning. I wanted to fuck a succubus. You know, most beautiful and sexual of all creatures. Well I succeeded and I spent at least twelve hours fucking her brains out. I mean we fucked just like animals, feral and wild. Plowing her with load after load of cum, fucking every hole she had and using her like the most slutty of fuck toys.\"\n\nI continued to describe how insanely wild I fucked that succubus until the Draenei's cock jerked wetly against my chest. She blushed a bit, \"I think I get it.\"\n\n\"Right. Anyway, morning comes around and she breaks free. Throws some freaky magic at me and disappears. My dick is suddenly this doggy thing and I am screaming for release. I run out in the street, over to my neighbors and I fuck her right there. Craziest thing? The fuck was so good that she argued in my favor when the guard came running.\" I laughed.",
        "\"Oh I can see why. I've never felt this amazing before. I can't help but feel a little in love with you myself. I certainly won't be turning you over to the city guard. Can't possibly have someone like you locked away from me forever.\" The Draenei giggled and then a look of surprise crossed her face, \"Wait... Who are you anyway?\"\n\nI looked at her and then laughed myself, \"I keep doing this. Fucking girls and not sharing me. I'm Gale Sunheart. Who're you?\"\n\n\"I'm Catyla.\" She smiled and kissed me on the lips. She looked away for a second and then back to, \"Hey, are you really going around and raping people? Because you know you can just fuck me if you want.\"\n\nI laughed long and hard at that. My dick jerked inside her and she gasped deeply. \"No, not even close... Let me tell you.\"\n\n*******\n\nCHAPTER 4 - TEAM UP ON GERALDINE\n\n\"This should be Geraldine's place.\" I said from where I stood invisible besides Catyla. The building was nothing out of the ordinary considering where they were. A grand looking three story job with a large fence and gorgeous topiary. None of that really mattered, I was more interested in the woman within. My dick was quite eager after having rode the wild thing that was Cathy's ass.\n\n\"Just go through the front door?\" Catyla raised an eyebrow. I could already see the bulge forming down the leg of her shorts from her cock. She was excited as me, even if she didn't know it.\n\n\"Well I'd probably knock first.\" I said as I followed her through the gate.\n\nCatyla rolled her eyes and knocked on the door. There was a few moments pause and then the door was wrenched open. A woman with wild eyes and an enormous mane of black hair stood there, her eyes wide with excitement. When she saw Catyla, her face fell and she frowned, \"What is it, commoner?\"\n\nGeraldine was every bit as gorgeous as I had hoped. While she might've been wearing a deep navy dress, I could see her body was every bit as sexy as Cathy's. Her ass looked just as plush and inviting while her tits seemed even more enormous. Her dress had been cut to show off a damn near scandalous amount of cleavage. It was probably some literal work of magic that the gigantic tits weren't exploding free of of their bindings. I felt my dick jerk hard enough to ring a bell.\n\n\"Uhhh...\" Catyla seemed lost for words so I lunged forward. Still invisible, I put my arms around Geraldine and mashed my lips against hers. I squeezed her in my arms, dick shoved against her dress and hands groping hungrily at her ass. Her panic quickly turned to lustful passion as she closed her eyes and wrapped her arms around me. I wrestled tongues with her for probably a minute in the doorway until I let her go and she stepped back, dazed and lost in her emotions.\n\n\"Come on.\" I pulled Catyla inside and shut the door.\n\n\"It... It is you...Gale... Cathy was right... Oh my goodness that was heavenly. Who is your Draenei friend though?\" Geraldine asked as I faded into view.\n\n\"Another dick as big as mine.\" I said flatly.\n\nGeraldine looked like a girl on Winter Veil morning. She looked down at my throbbing canine cock and then to Catyla's crotch. Her eyes easily picked out the large bulge that stretched the fabric. She was actually shaking with excitement, \"Come on! Bedroom, now! I was so worried you were going to be late!\"\n\nThe horny woman led us up the stairs and through a large doorway into a bedroom as splendorous as Cathy's. She reached up to her collar and touched a gemstone there. There was a blink of magic and the front of the dress erupted forth, releasing all of her breasts. The cloth just seemed to melt off her after that. I had been right, a magically formed dress.\n\nBeneath the dress was absolutely nothing besides gorgeous pale flesh and soft, warm curves. I let my cloak fall and watched as the woman got down on her knees before me, \"Please let me suck you two off first. I so love having warm seed all over my face and it's been years. My husband hasn't touched in a decade since our wedding night.\"\n\n\"You're younger than Cathy?\" I mused, noting the delightful sparkle in her eye.\n\n\"Only by a little... I don't have kids though. My husband and I were a marriage of convenience but even that isn't enough to get a pity fuck out of his high-brow ass.\" Geraldine huffed and she looked up at Catyla, \"Well come on! Let me see some dick!\"\n\nCatyla seemed to realize what was going on, \"Right! Sorry.\" She quickly pushed her shorts off the huge, throbbing pole of horse meat. Geraldine's eyes went wide as dinner plates.\n\n\"So I take it we'll be enough for you tonight?\" I laughed at her expression.\n\n\"I feel like I'm doing something naughty. I've never had two to play with before. Tonight is going to be fun.\" Geraldine smirked and wrapped a hand around the both of them.\n\n\"Well go on then, play away.\" I sniggered, rubbing against her warm hand.\n\nGeraldine did as I said and her hands began rubbing the both of us eagerly. Her tongue licked over my head and I smiled at Catyla. We watched as she wrapped her lips around Catyla's larger cock. She sucked her immense girth down half way and her eyes went cross.\n\n\"By the Sun, is she cumming from this already?\" I laughed at the goofy look on her face.\n\nShe drew back and breathed, \"No! It's just so good. Do all draenei taste this good? Are you all so hung?\"\n\n\"Pretty much, yea. This is pretty average for us.\" Catyla shrugged.\n\n\"Oh hell yes.\" Geraldine exclaimed and she pushed herself down on it again.\n\n\"Are you even going to try mine?\" I asked, crossing my arms.\n\nShe pulled back and looked over at me, hand still stroking my cock, \"Sorry! I just... I've never seen cocks this big before. I want as much cum on my face as I can get.\"\n\n\"Oh I guarantee you I'll do better than her.\" I snorted.\n\n\"You cum a lot, but so do I! Don't just count me out.\" Catyla griped.\n\n\"Then prove it.\" I said, reaching down and fondling my huge sack in both hands.\n\nGeraldine's eyes were drawn by that, \"Got to admit... her balls are bigger. You might be packing... but she's right about this.\"\n\n\"Size isn't everything! I bet you I can cum just as much as her!\" Catyla said indignantly, thrusting her cock at Geraldine.\n\n\"Try it!\" I yelled back, shoving my dick forward so the both of ours were jabbing her in the face.\n\n\"Girls! Girls! I'll happily take everything you both can give. Just focus on covering me in it. I am sexy enough, right?\" Geraldine sat back and jiggled her enormous boobs up and down.\n\nMy dick throbbed at the sight of her plush body and by the way Catyla's cock was jerking, it seemed she was equally affected. Geraldine smiled and put her hands on our dicks once more. Her lips met mine first and I just about melted. Her lips were plush and soft, her tongue working in just the right ways to caress every curve of my huge wolfish prick.\n\nShe might not have had a lot of sex over the last few years, but she definitely was not out of practice. I could just imagine her standing in the kitchen, deepthroating a banana while she played with herself. Her mouth traded back and forth regularly and her talented fingers brought the both of us to the edge.\n\n\"Give it to me! Give me all the semen you can. Bathe me in it!\" Geraldine cried happily, jerking us both faster.\n\n\"Ahhh~!\" Catyla moaned loudly and her hips bucked forward. The first shot of her cum was thick and gooey, arcing across her target's face and into her hair. Her second was larger and splattered powerfully up her cheek.\n\nWatching her cum was the last I could take. My knot pulsed with tension and my balls roiled with excitement. The first raced down my dick like a cannon and it hit lower, taking Geraldine across the mouth, chin, and neck. The woman cried happily and held her mouth open, pulling both of our dicks towards it. We filled her in a single moment and continued to baste her face.\n\nI looked at Catyla and found her staring at me. The both of us were riding out a wild orgasmic high but we both knew what was at stake. We couldn't lose. We would out-produce the other and paint more cum on Geraldine.\n\nWe kept it up for far longer than any normal mortals should have ever. Layer after layer of cum glazed Geraldine's face and ran in thick streams down her breasts and back. I knew my balls would start flagging soon but I was brimming with more lust than Catyla could ever comprehend. Fifty years of a succubi's curse does that to someone.\n\nAfter she finished cumming, I kept going. Shot after shot of pearly white cream added to the thick cum mask we had put on Geraldine. I finally gave in after I felt my balls start to clench up from being so empty. I slumped back with a sigh and sat on the edge of the posh bed.\n\n\"This is... so... glorious.\" Geraldine moaned, scooping up handfuls of cum and rubbing it all down her front. She eagerly started to masturbate, pushing handfuls of our semen into her pussy.\n\n\"Wow. I didn't think I'd lose.\" Catyla said, her eyes wide, \"Did you cum that much inside me?\"\n\n\"Nah...\" I panted, \"Too much effort... Whew. I don't like pushing that hard. Makes it take longer to get it back up.\"\n\nI looked down and poked at my half-flacced cock. My knot was still plenty inflated but the shaft was half soft.\n\n\"Just had to do it to beat me.\" Catyla sniggered and slung her arms under Geraldine, \"Come on you.\"\n\n\"Woo! Are you gorgeous ladies going to fuck me now?\" Geraldine giggled as she was set down on the bed.\n\n\"I am at least.\" Catyla smirked, stroking her still-erect horse dick.\n\nGeraldine wiped her eyes clean and slicked a bunch of the cum down on to her chest. She spread her luscious thighs wide and gave them both a perfect view of her pussy. Despite all the cum that she had rubbed into it, her wetness could still be seen seeping out. The woman was a fountain of lust in so many ways.\n\nI watched Catyla stroke her huge horse cock and bring it to bear against Geraldine. She ground it down along her clit and pressed the flared head against her. The older woman let out a long, pleasurable sigh as her pussy was pressed open and penetrated by the enormous tool.\n\n\"Ohhhh yea~!\" Geraldine moaned happily, her head lolling back on the bed.\n\n\"Damn! I didn't even know there was pussy like this!\" Catyla gasped, sinking more than half of her length into her, \"How are you taking this? Are you even human?\"\n\n\"Yes, and I adore huge dick!\" She swooned, \"Size is everything to me!\"\n\nI wrapped a hand around my freshly hardened cock and scoffed, \"Make me feel inadequate, why don't you?\"\n\nGeraldine barked out a loud laugh, \"Oh please Gale! You're big too! She's just bigger. Are you going to come over here with that thing already?\"\n\nA smile split my lips, \"I can never say no to you beautiful women. Hope you don't mind if I make use of your boobs. They look so tasty all covered in my cum.\"\n\n\"No, please. AH!\" She squeaked with sudden pleasure as Catyla thrust into her, \"Go... Go ahead.\"\n\nThe sight of her massive glazed breasts did excite me so. I clambered up and straddled her chest, hot canine member flopping down in the spunky mess. She squeezed them together for me and I just melted. The warmth and softness of them was every bit the competition for any titfucks I had ever known. I thrust forward and my dick barely poked out her cleavage.\n\nAs I fucked her breasts, I felt her shudder with pleasure and her belly jerked from Catyla's deep thrusting. It jabbed me in the ass and I smiled. The gorgeous woman was slowly losing herself in our forceful actions.\n\n\"Oh yes! Yes! Fuck me deeper!\" Geraldine panted, her chest heaving beneath me.\n\nThe three of us writhed together wildly. It was a flood of bliss and she was at the center of it.\n\nI felt the pressure of her hands waning and that made me grab fistfuls of her massive breasts. I squeezed them tighter together and continued humping hard. The heat and squishy pleasure of her boobs was awesome. My dick and balls were already aching from all my exertion earlier and I didn't bother resisting. The orgasm was fast and hot. It tore through me and I felt my balls surge. My cum erupted in one large spray, laying a fresh shower across Geraldine's face. It wasn't as much as I wanted, but I was going to fix that.\n\n\"Ahhh! Fresh cum.\" Geraldine moaned, licking her gooey lips.\n\n\"Oh don't you worry. There's going to be plenty of that.\" I smirked, getting off her chest. I sat back on the bed while Catyla continued thrusting long and deep. Geraldine gave a whorish moan and grabbed at the bed.\n\n\"Is that all you have? One more time and you're done?\" Catyla teased, gyrating her hips to grind her cock slowly.\n\n\"Oh hardly.\" I raised my hands and arcane power began to flow through my fingers. I drew a circle around my throbbing cock and mouthed a few spell words. Energy and life flourished in my nethers, and I felt a flood of semen fill my balls. They nearly doubled in size as the spell empowered me. As a part of the spell, my knot immediately began to shrink and precum started to dribble fresh from my tip.\n\n\"That's cheating!\" Catyla scoffed, sinking herself in deep. She groaned and I could see her hips jerk. Her dick spasmed and Geraldine's eyes went wide. I could only imagine how could it felt to have her womb flooding with sticky, delicious Draenei cum.\n\n\"Nothing is cheating when it comes to fucking a goddess like her.\" I said, pushing Catyla back. Her dick flopped free with a loud schlop. Cum spewed from her and all over my side as I shoved my way in front of her. \"Can't let any of your spunk leak out.\"\n\nI shoved myself into her, dick sliding into a delectable bath of hot cum. It erupted out around my dick and splattered all over my lap. Something about all that wet, gooey filling around me just made it all feel so much better.\n\n\"So does this mean I'm going to fuck your ass now?\" Catyla asked, jabbing me in the butt with her messy member.\n\nI considered it, but thought better of it. We weren't here for me so I grabbed Geraldine around the middle and turned as both over. She squealed in surprise, \"Ohhh! Gale, why?\"\n\nMy fingers dug into her big ass and I spread her cheeks. Over her shoulder, I saw Catyla grin from ear to ear. She laid her floppy cock between my fingers and I let go, letting her cheeks squeeze together.\n\n\"I see, yes! Please do.\" Geraldine swooned, swaying her hips back and forth.\n\nCatyla fondled her ass and continued slowly hotdogging her, \"I don't have spells like her. Give me a second.\"\n\nWhile I was thrusting into the sea of semen inside the woman, I reached up and wrapped a hand over Catyla. Magic rushed down my arm and I guided it into her cock. Arcane power flooded with my own lust coursed into her and I saw her cheeks flush a dark navy. Her dick jerked and blazing precum shot a thick line up Geraldine's bare back. \"Ahhh! So hot!\" She gasped with delight.\n\n\"Fuck, you're right. This is awesome.\" Catyla laughed. She held her dick and pushed the head of it against the hot, plump asshole. I watched it slip in with little resistance and I felt an immediate reaction. The tightness around my dick doubled and convulsions shook my dick.\n\nGeraldine cried out joyously and clung to me, a gooey mess sticking between our skin. Her ass took Catyla like a champ and it's enormous girth sank up to the sheathe. She moaned in my ear like a whore possessed.\n\n\"Archenon poros.\" Catyla spoke in Draenei, \"This is the best ass I've ever had!\"\n\n\"Deeper! Fuck me harder!\" Geraldine begged.\n\nAs she wanted, we provided. Our dicks moved into action, trading places inside her glorious body with a wild rhythm. I pulled my hips down and Catyla shoved herself up to her sheathe. She drew out and I humped upward. It was enough to drive Geraldine into screaming ecstasy.\n\nWe fucked and fucked and fucked until Geraldine was drooling and incoherent on my shoulder. My renewed endurance could've carried me further but I didn't really want to. I let the pleasure take me over and my knot filled Geraldine. Heat filled my nethers and I began to mix my semen into Catyla's.\n\nGeraldine gasped weakly in my ear, \"More? More cum... Lovely.\"\n\n\"That's not all of it yet!\" Catyla groaned, pulling herself free of her. She jerked her dick fervently and her face screwed up with determination. The moment of orgasm could be seen as her entire body tensed and then relaxed. A white shower exploded from her dick and splattered all over Geraldine. The huge horse member shuddered as her balls convulsed, spunk pouring out of her and all down Geraldine's ass. She was breathing hard by the time it stopped and she had to lean against the wall, \"What... The Hell... So powerful...\"\n\n\"Sorry. Side effect of the magic. I imbued you with some of my lust.\" I chuckled, wrapping my arms around Geraldine's gooey back.\n\n\"Fuck... is it always like that for you?\" Catyla asked with an incredulous stare.\n\nI nodded, \"Ever since the Succubus.\"\n\n\"No wonder you are obsessed wtih fucking.\" She grinned.\n\n*******\n\nWe were sent on our way early the next morning following a bath and another quick orgy in the hot water. Geraldine couldn't have been happier with everything and she sent both of us out with a hundred gold each. Must be nice to be able to just waste that kind of money on a single night of pleasure.\n\nCatyla suggested we go back to her inn, but I decided against it. I had been seen when she captured me and took me there. She might have an agreement with the innkeeper, but she couldn't speak for every patron.\n\nWe ended up back in the Mage's District and I knocked on Sherra's door. The fluffy red-haired young mage answered the door. She looked up at Catyla and raised an eyebrow, \"Yes?\"\n\n\"It's me.\" I said, slipping past her.\n\n\"Gale~!\" Sherra gasped with delight.\n\nI let my spell fade as Catyla came inside and shut the door. \"Heya. Mind if we stay the night?\"\n\n\"Of course not!\" Sherra giggled, a blush in her cheeks.\n\n*******\n\nCHAPTER 5 - DISCOVERED!\n\nSo, still following my story? I think you kind of get how things went in the early days by now. I went back and talked to Cathy. She gave me her list of other 'needy' noblewomen that I could go pleasure. Believe me, I did. Catyla too. We didn't double team them very often as there were more than enough to go around. Every time we finished fucking a lady, they had a friend or two that we could go to next. Not every one had Catherine's ass or Geraldine's tits, but they were all desperate for cock and hungry for our cum. Soon enough we were a well-known secret among the noblewomen and I had more money than I could've ever dreamed of.\n\nThis went on for more than a month until the worst finally happened. I got careless and didn't bother to look too closely at the noblewoman who ordered my company next. I had her down in the bed and was just about to start dicking away when a shiver crawled up my spine. There was something wrong and I heard a clank of metal from downstairs.\n\nThe woman, Yara, pretended like she didn't hear anything and tried to draw my attention back. That threw a huge red flag and I leapt for the door. A glance outside showed soldiers coming up the stairs and towards the bedroom.\n\n\"We have you! You can't escape now!\" Yara laughed as she wrapped a blanket around herself.\n\nI slammed the door and locked it. My arcane power flowed up through me and I held my hands out. This time I took a few seconds to focus. I thought of a nice secluded glade in the Eversong Woods and my power wove into the fabric of reality. Swirling light appeared and began to coalesce into a stable portal.\n\nMaybe two seconds from my escape, a bolt of blue magic struck the portal and it burst into threads of impotent magic. I snapped around and looked at Yara, at the magic floating around her hand. She smirked and the illusion she had been wearing faded, showing a much more stern and militaristic woman. That's what I get for being careless and only then trying to be careful.",
        "\"Why?\" I growled as a soldier slammed the door.\n\n\"We heard word of an elf infiltrating our noble class. It didn't take much to find out how to capture you.\" Yara laughed.\n\nThe door crashed open with a splintering of wood and soldiers flooded in. I considered fighting, but if I posed a threat, the swords those soldiers were carrying would probably find their way into my body. It was close quarters and I wasn't skilled in combat magic. I could throw some fire and ice, maybe kill a handful of them but there was entirely too many. Plus with the other mage in the brawl, I'd probably not come out of it. I'd rather they didn't kill me so I held my hands up and went willingly.\n\n\"Horde scum.\" She gowled as I was led away.\n\nI felt bile rising in my throat. I couldn't express my hatred of all this well enough. Horde. Alliance. Good. Evil. Fucking idiots all around. I get so tired of being forced into the politics of the world. Why can't I just fuck some nice asses and live in peace? Where was the harm in what I was doing?\n\n*******\n\nThe Stormwind stockade was not a glamorous place. The guards hadn't given me any clothes and so I was lying naked on a worn wooden bed. The worst part about it was that the stockade was beneath the canals of Stormwind so it was cold and damp. Water dripped in the corner of my cell and the stone floor had a constant slimy feel.\n\nNow you may be thinking the obvious. How did I start my story in a brothel I owned and with my dick in a woman who loved me, yet right now I was in prison? The answer is pretty simple: I got lucky. Well, to be fair, I got desperate. I guess desperate and lucky is a pretty alright answer.\n\nYou see, the stockade had enchantments to prevent using portals to enter or leave. They also put enchantments on the cells to nullify magical escape attempts. I knew because everytime a guard was out of sight, I quietly tried another spell to escape. Anything. Ice to brittle the bars. Fire to... well I didn't know what I was going to use it for but it had to be worth something. It didn't matter. Nothing worked and I began to worry that I wouldn't ever be able to escape without outside help.\n\nThat particular thought brought me to what I tried next. I was waiting until night when the guards were busy playing cards and whiling away the quiet hours. Once the sleepy, half-aware patrol passed my cell and headed back towards the guardpost, I slipped off my bunk and set into action.\n\nI wasn't sure if it was going to work, but it was a different class of magic entirely. It wasn't governed by the same rules and laws as the more basic arcane. It was just possible that it could bypass their wards or possibly they hadn't protected against it. I bit down on my knuckle and drew blood. With it, I began drawing a symbol on the slimy ground. It took me a few layers of blood to get it to the point where I was sure it would work.\n\nMy arcane power came up and I tapped into my own life to imbue it with a unique power. Fel magic came from my fingers and coursed into the blood rune I had drawn on the ground. It felt amazing, as it had all those years ago, to be using this kind of magic. I could see how some people could get addicted to it, but I never could because honestly it couldn't hold a candle to fucking fat asses. I forced my thoughts back on the task at hand. Almost immediately I felt it working. My power crossed the planes of reality and grabbed ahold of the being I was focused on. It was pulled back to me and I felt the fabric of space rippling above the rune. There was a momentary pause and then a gentle wash of fel power came from an opening rift. A figure of incomparable beauty and irresistable sexuality stepped through. I stood and looked her in the eyes, those bright blue eyes.\n\nShe was as tall as I, though taller with the horns from her forehead. Her skin was a light pinkish-purple and a long tail curled around behind her with batwings spread from her shoulders. Her face was very sexy with long pointed ears, flowing black hair, and cute little fangs hanging over deep purple lips. Normally creatures like her are seen wearing tight leather and showing a lot of skin, but she was just showing the skin. Last time she was around, we had entirely done away with anything covering skin.\n\n\"Mistress... It's been so very long. Why have I been left to rot after only one time?\" The succubus purred, sliding one of her long, slinder fingers around my cheek. I felt a flood of desire in my loins at her touch. Her breasts were just as huge and youthful as they had been. Her ass was exactly as curvy I remembered it to be. My eyes ate her up, every curve, ever bit of her luscious thighs, everything. It took my entire will and mental fortitude to resist shoving her against the bars and fucking her brains out all over again.\n\nThe thought of her attacking me again drew my resolve. I immediately cast my power out around her and bound her will and soul tightly with arcane chains. I only needed to control her for a few hours and I would be free.\n\nShe sighed and rolled her eyes, \"Please mistress, that is hardly necessary. I'll do anything you ask. So where is this dark... naughty dungeon you've summoned me to?\" Her tail snapped about impatiently and her eyes were fixed on my erection.\n\n\"Hey! What's all that noise?\" A guard yelled, and his heavy bootfalls approached quickly.\n\n\"My power can't leave the cell because of the enchantments. I think yours can. I want you to try and charm the guard to let us free.\" I hissed, impressing my will upon the bonds I had on her.\n\n\"Oh darling, I hardly need magic to charm a man.\" She smiled widely, bearing more of her fangs. She turned to the bars and watched the guard walk over to us. When he saw that there was now a demon in the cell, his eyes went wide. Her hand slipped through the bars quickly and she placed one sharp nail under his chin. With a practiced motion, she drew him close and whispered to him, \"Hey there handsome. Why are you keeping a cutie like me locked up when I could be out there having fun with you and your friends.\" He tried to turn away, but her hand slipped around his cheek, \"No, no. Don't call them over yet. I'm not done talking with you. You want what I can give you, don't you?\"\n\n\"A... Alright...\" He stammered, his eyes falling to her huge, bare breasts.\n\n\"We were imprisoned so unjustly. If you'd be so kind to unlock this cell, I'll come out there and give you your prize.\" The succubus cooed, caressing his cheek lovingly.\n\n\"Yea. Of course.\" He sounded like he was half-asleep as he drew his keys from his belt and slid one into the lock.\n\n\"Hey! Charlie, what is going on over there? Get back over here! I haven't taken enough of your money yet.\" Another guard hollered.\n\n\"Huh?\" Charlie looked up, the charm fading from his face. The succubus hissed in annoyance and shoved him back with a hard push, sending him to the ground. She grabbed the key and turned it, swinging the cell door open wide.\n\n\"Perfect! Handle the other guard!\" I said as I lunged through the cell door. I kicked the downed guard across the head hard.\n\n\"Sound the... the... the...\" The other guard started to yell but my succubus was quicker. She had her hands held towards him and a wry purple smoke was flowing up around his body.\n\nShe sauntered towards him and slid one of her hands around his neck, \"Don't go doing anything rash, my pretty. You need to help us get out of here.\"\n\n\"The other guards won't let you...\" He said, his voice hollow and mesmerized.\n\n\"Make yourself invisible.\" I instructed her as I drew my own illusion up around myself.\n\nThe succubus nodded and her own body faded into shadows, \"Just lead us out. Open the doors. Head towards freedom and make sure we can follow.\"\n\n\"Of course..\" He mumbled and walked towards the stairs.\n\nThe stockade had a full guard and it took a bit of skill for us to slip out with our guide. He opened the gates and leaned against each one in turn to hold it open for a few seconds. The other guards talked to him in passing and he talked off each one with another excuse. We walked through the barracks built above the stockade and stepped out past the guarded doors.\n\n\"Thanks dear. Go home now.\" The succubus said and we left the barracks behind us.\n\nBoth of us invisible, we fled the military district of Stormwind. Once we were a safe distance away, we slipped into a back alley and down to a run down looking inn. There was no point to revealing ourselves, so we just slipped through to an empty room and locked the door.\n\n\"Whew. That went better than I expected.\" I sighed, sitting back down on the worn old bed.\n\n\"Are you going to answer my question yet mistress?\" The succubus said, crossing her arms and leaning against the door.\n\nI looked up at her, \"What?\"\n\n\"Why has it been decades since you summoned me? After such a night as we last had, why did you leave me to rot in the Nether? I spent years longing for you. Such painful desire... it was torture...\" She frowned. The way her lip quivered and her eyes glowered; was she pouting?\n\n\"Because you broke free and cursed me! You are a demon. Why would I want to summon you if I had any other option?\" I scoffed, \"Why are you even still here? Go away.\"\n\n\"Cursed you...?\" She stared in shock, \"Mistress, you gave me the night of my unhallowed life! The kind that all Sayaad dream of, a night of pure unadultered bliss that slakes every thirst, fulfills every desire, and just... just...\"\n\nShe gave a feral roar and leapt at me. I raised my hand and stopped her in her tracks. \"Wait!\" I focused on the bindings I had around her and forced her to sit back, \"Hold on a second. I'm confused now. Can you explain?\"\n\nHer face was flushed and she was shaking with need. Despite her wild eyes, she took a deep breath and said, \"I never cursed you. I blessed you with all the desires and lust you could ever want. I gave you dick and balls fitting someone as amazing as you. You can mount and dominate anything with that knot. Mistress, has it really been a curse on your life?\"\n\nI opened my mouth but I couldn't say anything. I raised a hand and then it fell in my lap. A wild rush of emotions and memories filled my head. It took me a minute to finally find my voice, \"No... You're right... ever since that night, I've had any woman I wanted. I've fucked anything I set my eyes on. I guess I just thought it was a curse because it was always out of my control. It was put upon me by a demon.\"\n\n\"See? I blessed you. Now can we fuck? Please! Mistress, your dick looks so enticing.\" She said without looking away from my cock.\n\n\"Hold on. Why did you leave then?\" I asked, \"If you were so happy, then why leave?\"\n\n\"Your bindings and summoning were weak. My power on this plane was incomplete so I used the last of it to gift you as thanks.\" She said quickly and started to twitch towards me.\n\n\"So if I release the bindings on you, what will you do?\" I cocked my head.\n\nShe grinned, \"I will fuck you until we're both too exhausted to move.\"\n\nI reached out and put a finger to her lips. She immediately started to suck on it and I grinned, \"I'll get it right this time. What's your name?\"\n\nShe flicked her tongue around my finger teasingly, \"Khara.\"\n\nI released the bindings I had on her. It was exactly as dramatic as I thought it would be. Her bright eyes widened and her body stiffened. Like a wound spring, she lunged. Before I knew what was happening, I was buried under a flood of succubi desires. Her lips were all over my face and she was grinding her body against mine. Wetness was drooling from her pussy and all over my thighs. She locked her mouth with mine and wound our tongues together. Fire blazed in my loins and all the memories of that night so many years ago came rushing back.\n\nWith all the furor I could muster, I kissed back. I groped her body and pushed back, stirring her desires with my own. Lost in the arms of the only other creature that had ever shared my boundless desires and lustful need, I gave into everything.\n\n\"I want your cock.\" She gasped between kisses. My hands were firmly gripping her bountiful ass and I rolled over, forcing her beneath me. I held her down and turned around, poising my dick above her mouth. \"I-\" was all she got out before I thrust my hips down. My dick shoved down her throat and I smothered her face with my huge sack.\n\nDon't get all concerned for the succubus. The way her pussy double-timed the flood screamed that she clearly loved the treatment I was giving her. I spread her thighs and dove headlong into her soaking slit. Her juices were sweet and deep, filling my head with heady need. My hips bumped faster and I fucked her throat harder.\n\n\"Khara! Oh fucking hell.\" I growled, digging my fingers into her thighs.\n\nShe slurped and her throat convulsed around my dick. I slapped my sack on her face with each hump and I felt her hands crawling up my ass. She pulled down on my and forced me right down on her face. Her tongue lapped hungrily against my cock.\n\n\"You are such a cock-hungry whore!\" I said and her fingers rubbed up against my ass. With near supernatural talent, she slipped the digits inside and found my prostate. The pleasure of her touch sent a surge of heat through my dick. \"Fuck! Fuck, I forgot how much you love dick! Be sure to guzzle all my cum!\"\n\nMy enormous sack clenched up and my orgasm forth. My knot stretched her jaw and locked my dick in her mouth as it poured it's load down her throat. Her body was shaking beneath me and she she gulped hungrily.\n\nWhile I basked in the pleasure of feeding her the largest load I had unleashed since the last time I had fucked her, I dug my tongue back into her pussy. Her body was crafted in every possible sense to pleasure. Her pussy smelled and tasted absolutely heavenly. I drank in her wetness as if I were dying of thirst. Her pussy clenched and convulsed around my tongue.\n\nWhen my orgasm came to an end, I leaned up and waved a spell in the direction of my dick. It flourished with warmth and my knot deflated as my balls filled once more with semen. I slipped free of Khara's warm mouth and she took a deep breath.\n\n\"Still hungry for my cum?\" I asked as I got off her.\n\n\"Mistress, I'll still be hungry for your cum ten minutes after we finish.\" She snorted with a cheeky grin, \"Now give me that dick!\"\n\nShe grabbed my shoulders and shoved me flat on my back. She stradled me and had my dick sliding inside her before I knew what was going on. Her hot and tight pussy engulfed me completely. I gave a long moan and laid my head back, content to let her go crazy.\n\nFucking a succubus isn't like anything you can imagine. I haven't exaggerated once in everything I've told you. Any warlock who summons a succubus for anything besides sex is wasting so much potential that reality itself should give them a swift kick in the ass.\n\n\"Do it Mistress.\" She gasped as she bounced on top of me. The insides of her pussy were squeezing and milking every bit of me. She didn't waste any time. She knew we had hours to go so she wanted the first load as soon as possible. Her tail was curled around my balls and had them in a gentle squeeze. Her every breath came out in pants of need and desire, constantly begging for my seed.\n\nI grabbed ahold of her plump, round ass in both hands and thrust upward. Khara cried out in joy and her head lolled back. She grabbed my legs and ground her crotch against mine. Her tail continued working my sack and we rode a wild ride of ecstasy together.\n\nMy knot grew hot and I felt my orgasm rushing forth. My fingers dug into her ass and I forced my brain to focus on something for just a few moments. Arcane power rose within me and flowed into my cock. It was a spell I had developed a while after we had our first night... though I rarely got a chance to use it for fear of hurting my nightly fuck-toy. I felt as though Khara might appreciate it though.\n\n\"You're going to lose your mind.\" I warned her in panting breaths and I released the spell. A smile split my face and I let out a long groan of pleasure.\n\n\"Huh?\" She moaned as she felt my knot start to inflate.\n\nMy first shot hit her womb like a geyser. I could actually see her belly distend from it and she screamed. Her eyes went wide and her entire body turned into goo on top of me. That first shot alone probably filled the vacuum in her and the next just pooled in with the first.\n\nThe spell empowers orgasms. It multiplies my virility, volume, and force by at least ten and without any way of pulling out because of my knot, the immense amounts of cum get trapped within. Normal folks would probably be hurt by it...\n\nKhara? She was drooling on my shoulder and shaking with orgasms.\n\nI could feel her belly tightening against mine and more cum poured from me. I had turned her womb into a violent torrent of semen and her body shuddered each time I added more to it. I relished every moment I felt her cum anew.\n\nIt took at least five minutes for my orgasm to wind down. My constant liquid injections had her filled with more than a bucket of cum. Her belly was a round, gravid lump and she was entirely unmoving aside from the wheezing breaths she took. Even her tail was laying limp across my thigh. I wrapped an arm around her and patted her ass, \"Told you.\"\n\n\"Mi... Mistress...\" She whimpered. She tried to push herself up but her arms didn't have any strength in them.\n\nI actually did feel kind of bad. It must've hurt her ego just a little to know that a mortal was better at sex then her, a very demon crafted for lust and desire. Because of that, I carefully hugged her and rolled over so she could lay back. The movement made her moan hoarsely and I settled down between her warm thighs, cock locked tightly in her pussy.\n\nCan you guess what I saw when I looked at her?\n\nLove. Unadultered, unfaltering, and entirely without her own consent. Her eyes were positively glowing with love when she looked up at me. She licked her lips and said, \"I love you. I didn't know I was even capable of such pleasures. It feels so exquisite~! the ecstasy of all this cum and the forcefulness with which you delivered...\"\n\nI leaned down and kissed her deeply, taking the last of her breath away. She wrapped me in her arms and kissed me back. It was the perfect moment... except.\n\n\"Hey! Keep it the fuck down! We get it, you're having sex! Now cram a fucking pillow in the whore's mouth.\" A gruff and angry voice came from the door as they pounded on it.\n\nKhara snorted with laughter as our kiss broke off. I sat up a bit, adjusting my cock inside her and leaned my arms on her plump belly. She gasped with pleasure and I felt the pressure on my cock increase. I smiled, \"So, in love with me huh? I've heard that a few times before. Did you fall victim to your own blessing?\"\n\nA dark blush crossed her cheeks. For the first time, I actually got to see her embarassed. \"Hardly. It's all your doing. You used that cock, and you made it more than I could have ever hoped. Just promise that you won't throw me away again.\"\n\nI laughed myself that time, \"Oh please! In the last month I have fucked so much gorgeous, fat human ass and yet in all of that I've never had this. Someone my equal. Someone who can take me hump for hump.\" I stopped at that and looked down at her belly, \"You can, can't you? You aren't actually worn out after this, right?\"\n\n\"Why don't you yank that fat knot out of me, and find out?\" She gave me a fanged smile and I felt her pussy loosen. I and my cock were forced out by the sheer pressure of all the cum. A flood of white washed out of her and all over the bed.\n\nI looked up in shock. Had she been clenching and holding me in all that time despite the orgasms? While I was kneeling there shocked, she stood up despite the river of cum flowing down her thighs.\n\n\"So Mistress, the question is, can you match me and my decades of lustful desire?\" She said. I growled and yanked her down to the bed.",
        "What a fucking woman!\n\n*******\n\nCHAPTER 6 - BACK TOGETHER\n\nI had expected to need to go into hiding again after being thrown in Stormwind Stockade. But much to my surprise, that wasn't the case. As it turns out, there's a lot more than ass to the women I've been fucking. There's almost as much political clout in those noblewomen as there is lust and they were throwing all of it around in a fury when they found out I was imprisoned.\n\nAfter fucking Khara for at least twelve hours straight, we snuck out of the inn (leaving the room an absolute disaster of cum) and headed for Sherra's house. We found her, Catyla, and a half-dozen noblewomen all gathered there. When I walked in, it was like I had returned from the dead.\n\n\"Gale! That was so fast!\" Sherra exclaimed, \"We only got word they were going to let you out minutes ago!\"\n\n\"Let me out?\" I said, cocking my head.\n\n\"Yea... You've been missing for two days. You got locked up in the stockades.\" Cathy came to my side and took my hand, \"We were so scared we'd never get to see you again!\"\n\nGeraldine smirked and sauntered over, \"The moment word went around that you had been captured by the guard, we nearly started a riot. I don't know how the rest of them handled it, but I took my man by the ear and yanked until he promised to go down to Stormwind castle and demand to talk to the King.\"\n\n\"And they did? Your husbands fought to get the woman plowing their wives set free?\" I exclaimed with honest surprise.\n\n\"You don't really know what you've done for us, do you?\" Cathy said.\n\nI caressed her cheek and grinned, \"I've been giving the lot of you strings of powerful orgasms and making you black out from pleasure.\"\n\n\"You've been fixing our marriages.\" Cathy said.\n\n\"And making everyone's lives better.\" Geraldine nodded.\n\n\"Our husbands are happier because we're happy. They don't care about you fucking us. They have their own women on the side. We now have ours.\" Another noblewoman by the name of Jane giggled.\n\nI huffed, \"That's all it takes, huh? Everyone gets some nookie and you're all happy. Well, what's going to happen then? Do I get to keep plowing the lot of you?\"\n\n\"Of course, but some strings had to be pulled. They don't want the public knowing about a Blood Elf living in the city. So they said if you stay out of sight and don't raise any ruckus, the guard will leave you alone.\" Geraldine said.\n\n\"So how do we do that? Do I just live here and you all deliver yourselves to my dick?\" I chortled, waving to my bare erection.\n\n\"Actually yes, just not here.\" Sherra said with a blush in her cheeks.\n\n\"We've bought you a brothel!\" Cathy said excitely bouncing, \"I mean, Catyla bought it with all the money you two have been earning from us. But the point is, you're now in business and the women will come flocking to you and your lovely assistant.\" She reached over and ran a hand up Catyla's tight shorts, caressing the bulge down her leg.\n\n\"Speaking of assistants... Who is your stoic and oh so lovely companion.\" Catyla said, walking over and looking down at Khara.\n\n\"Beautiful, well-hung, and smooth talking. Oh Mistress, you simply must let me have that one.\" Khara grinned at me as her eyes flicked up and down Catyla.\n\n\"This is Khara, the Succubus I summoned decades ago.\" I said, slapping her hard on the ass.\n\nCathy gasped, \"The one that cursed you!? What is she doing here?\"\n\n\"Turns out it's been a misunderstanding all this time. This was her gift to me for giving her... how did you put it?\" I looked at Khara, hand still fondling her ass.\n\n\"The kind of night that all Sayaad dream of, a night of pure bliss that slakes every thirst and fulfills every desire...\" She purred teasingly, \"And yet you managed to top it last night.\"\n\n\"Really? So then she's on the menu now?\" Catyla walked around her, the tap of her hooves on wood the only sound in the room.\n\nKhara turned to her and slid her arms around the tall Draenei's neck, \"Don't start something you can't finish, cutie. Mistress is the only woman that can match me. You don't have a hope.\"\n\nCatyla growled and pulled Khara tight against her.\n\nCathy cleared her throat, \"Alright. I think it's about time we go see the brothel. We still need to collect some things for it.\"\n\n\"You all go. Sherra, I'm going to borrow your bed.\" Catyla said, slinging Khara over her shoulder.\n\n\"Whaaa... My... My bed? You two... But...\" Sherra stammered.\n\n\"If you don't want us to be here alone, you're free to stay. I don't mind a little inexperienced plaything.\" Khara grinned over Catyla's shoulder.\n\nSherra blushed and bit her lip. She looked between me and Catyla. She wrung a fold of her robe in her hands and fidgeted nervously.\n\n\"Oh go already. An afternoon fucking a Succubus isn't something to pass on.\" I encouraged her, gesturing to the stairs that Catyla was already climbing.\n\nSherra blushed deeper and then scurried after them like a scared mouse.\n\nGeraldine chuckled and grabbed a cloak off the back of a nearby chair, \"Here. You needn't make yourself invisible anymore. Just keep your head down and your ears covered. The guards won't hassle you and everyone else will take you for a High Elf.\"\n\nWhile I headed out the door with the ladies, little did I know what I was missing upstairs. Catyla would tell me in explicit detail later.\n\n*******\n\nCatyla slung Khara over her shoulder as she walked to the bed. She dropped the succubus unceremoniously on the plush blankets and grabbed the belt of her shorts. They fell about her hooves, letting her enormous horse cock rise free. It was pulsing with hardness in mere moments and she jumped on Khara.\n\n\"So eager. No savoring the moment, no dragging out what will be a...\" Khara stretched as Catyla stradled her chest, huge cock slapping between her boobs, \"Painfully short mating.\"\n\n\"Are you so certain of that?\" Catyla scoffed, grabbing Khara's breasts and thrusting between them. The head of her navy-hue Draenei horse cock jabbed her in the chin and smeared precum across her.\n\nKhara snaked out a long tongue and licked her, \"Mmm... A very attractive cock at least.\"\n\n\"Humans and elves, with their cute little feet. Sometimes it's nice to fuck something a little closer to oneself.\" Catyla sniggered, squishing Khara's breasts as she fucked them. Precum drooled from her cock and made a gooey mess of her cleavage.\n\n\"Here, since you're such a good friend of my Mistress, I'll help you.\" Khara raised her hands and light flared from her fingers. Catyla's balls glowed with magic and they started to inflate. Her already large sack grew, squishing against Khara's chest, and expanding to match the size of her breasts.\n\n\"Whoa! Whoa... fuck... Oh shit my balls feel heavy and hot.\" Catyla moaned, her humping growing faster and more eratic, \"Whatever you did, it's working!\"\n\nWhile she lustily fucked Khara's tits, Khara looked over at the mostly naked Sherra. She was staring nervously at them in only her blue panties and one hand was down the front of them. Khara gestured to her, \"Don't just stand over there. Come here. Have some fun.\"\n\n\"O... Okay...\" Sherra stammered, walking over closer to them, \"What should I...\"\n\nKhara reached around and grabbed her ass, dragging her in close. In one swift motion, she yanked down Sherra's panties, exposing her wet pussy and pressed a hand to her nethers. Sherra squeaked in surprise, and tried to jump, but Khara gripped her pussy, two fingers slipping inside for a better hold. Magic flowed from her into Sherra, making her squirm in her grip.\n\n\"What... What're you... doing to me?\" Sherra whimpered fearfully.\n\n\"Just giving you a little gift, my pet.\" Khara grinned.\n\n\"Fuck your boobs are great.\" Catyla moaned as she humped.\n\n\"And... here you go~!\" Khara cooed, pulling her hand back slowly. Flesh expanded and stretched, growing out from above Sherra's pussy. A thick, foreskinned cock grew from her. Not huge, nor exotic. A normal human cock of about normal size, throbbing right above a dripping wet pussy.\n\n\"What!\" Sherra squealed, reaching down and grabbing her new flesh in both hands, \"Ohh! It's so hot... feels good...\"\n\n\"It'll feel even better if you stick it somewhere warm... and wet.\" Khara smirked.\n\n\"Fuuuck! Gonna cum... Nnngghhh~!\" Catyla moaned through gritted teeth. She mashed Khara's tits tightly around her huge shaft and cum exploded from her. Her dick could be seen expanding to accomodate the immense load and it was spraying all over Khara's face and all around the bed. She pulled back, burying her head in all the titflesh. Pearly goo bubbled and spurted out of her cleavage all around. \"Fuck! It's still going. Oh by the Naaru, why is my dick still cumming?!\"\n\nShe jerked back and shakily got up on her hooves. Her dick continued to spurt semen all over Khara's body beneath her. She tried to take another step and her knees gave out. She fell between Khara's waiting thighs. Khara grabbed her dick and pulled it towards her pussy, cum splattering against her demonic lips. \"That seed is so very wasted out here.\"\n\nIt didn't exactly take effort to get Catyla to thrust her endlessly orgasming cock into Khara. She sank deep and spunk lubed her way. The succubus wrapped her legs around Catyla and pulled her tight against her messy body. The entire arm-sized horse dick was inside her, massive sack pressing to her ass, and she waved to Sherra, \"Here you go. Put that cock right here.\"\n\nHer hands wrapped around Catyla's gorgeous blue ass and spread her cheeks, exposing her hot looking asshole. Sherra gulped, \"Uhh... R... Really?\"\n\n\"Ohh fuck... No... No, don't! Don't fuck my ass! I'm already cumming too much!\" Catyla whined, shaking her head.\n\n\"How horny are you? How sexy does her ass look? Do it Sherra. She'll love it. Despite her protesting, she wants more orgasms.\" Khara encouraged her as she climbed up on the bed.\n\nSherra held her cock in one hand and felt up Catyla's ass with the other. Her eyes ate up the sight of Catyla's ass. It had been splattered in her own cum and it winked with every pulse of seed she shot into Khara. Sherra licked her lips, \"Catyla... it really does look sexy. I want to use this thing... You girls with your own big cocks, the way Gale fucked me... I want to try it too!\"\n\nShe put both hands on Catyla's soft, warm ass and shoved her dick against her asshole. Catyla squeaked and moaned loudly as her cum-glazed ass was penetrated deep by that thick little human cock. Sherra moaned ecstatically and slumped over Catyla's back, dick burying completely inside her.\n\n\"Oh fuck I'm cumming again! How am I cumming while I'm already cumming?! Ahhhh~!\" Catyla screamed, her balls visibly clenching and throbbing. Cum sprayed out of Khara's pussy in a fresh wave and she also let out a happy moan.\n\n\"Your ass is so tight on my dick! This feels so wierd and good. I'm gonna try thrusting now.\" Sherra panted, raising her hips slowly.\n\nKhara grinned, \"Mmmm... All this cum feels so wonderful inside me. Sherra, pound her prostate. Make her keep cumming.\"\n\nThey writhed together, Catyla cumming endlessly between them and semen pouring out all over the already messy bed. Sherra kept her hands planted on Catyla's ass, humping hard against her eagerly as her pleasure mounted.\n\n\"I think it's happening! I think I'm... I'm cumming.\" Sherra gasped in surprise and pressed herself tightly against Catyla, her virgin cock buried completely inside that tight Draenei asshole. She shuddered and semen bubbled into Catyla. In comparison to her, it was just a few dribbles. Her orgasm was finished quickly and she slowly drew back, cock popping free of her tight hole.\n\n\"Guhh... Fuck...\" Catyla whimpered, yet more spunk flowing from her and into Khara.\n\n\"Ahhh... Well I think I need some in my ass now, don't you?\" Khara cooed warmly, drawing her legs up against herself.\n\nCatyla pushed herself up and slowly dragged her long, throbbing shaft free of her. Cum hosed from her pussy and splashed all over her lap. Her cock was positively sopping with it and another shot came from her. She lowered her dick to Khara's ass and another blast of cum made Khara moan with pleasure. She thrust in and that taut succubus ass took her with relish. Catyla drove right to her balls and painted the whole way with white cream.\n\n\"Is... Is she going to be done soon?\" Sherra asked sheepishly, looking down at her erection, \"I kind of... want to try your pussy now.\" \n\n\"Oh the virgin is so adorable. Come over here and sit on my face. I'll make you feel good while we wait.\" Khara grinned.\n\nSherra climbed up and straddled her face. She lowered her damp slit to her mouth and moaned as a long tongue slithered up into her. Her little cock twitched and stiffened anew. Khara was working the both of them with unholy talent. She wrapped a hand around Sherra's dick and stroked her while her tongue writhed deeper and deeper. Her ass was readily clenching and convulsing around Catyla, drinking up all the cum she could pour forth.\n\n\"Oh yes... Fuck this is good... Feeling it from both sides~!\" Sherra writhed in pleasure atop her face.\n\n\"I... I think... I think it's stopping...\" Catyla panted, slowly moving back. Her horse cock slowly drew free of Khara's cum-packed hole and it gave a few final spurts all over her nethers. Catyla slumped back against the wall, panting heavily, \"Don't... do that... again...\"\n\n\"So can I...\" Sherra mumbled shakily. Khara answered by planting her hands on Sherra's ass and pushing her forward. She slumped forward and turned around, settling herself between Khara's luscious and sticky thighs. She looked positively giddy with excitement and she held her dick steady as she leaned in.\n\nKhara pushed her chest out and stretched her arms above her head, \"Go on. It's going to feel so good with all of her hot cum filling me up.\"\n\nSherra didn't exactly take convincing. She thrust forward and buried herself in the messy wet cunt. She let out a long, whorish moan as she was engulfed in hot, gooey wetness. Her hips jerked and she started humping away. Unlike Catyla's tight ass, Khara's pussy was slick and inviting, letting her fuck wildly.\n\n\"Eeep!\" Sherra squeaked in surprise as something sloppy and sticky jabbed against her pussy.\n\n\"Just get back in there. I have to repay you.\" Catyla teased, rubbing her flat cockhead up and down her nethers. She nestled it up against her ass and pushed.\n\nSherra whimpered, \"It's too big! Don't, please!\"\n\n\"Nothings too big with me around...\" Khara cooed, reaching around and fondling her ass. She wove a spell into her as she teased her plush flesh. Catyla's fat dick slid in easily as her asshole loosened. It pushed in with aching slowness, sliding right up to the edge of her sheath. Sherra arched her back and whined as she was stretched wider around it. It sunk right to the balls and Catyla groaned with pleasure.\n\n\"So damn tight~!\" Catyla gasped, gyrating herself back and forth.\n\n\"It feels like you're fucking my heart!\" Sherra exclaimed, hugging herself to Khara's body and smothering herself in cum.\n\nThey fucked for hours. Cum flowed like a spring sprung in that bedroom. All while I was away touring my new home and... having a bit of fun of my own... the three of them had an unbelievably wild fuck. Can't deny that I was just a little jealous. The good news was there were plenty of nights to come.\n\nLet me tell you about some of them...\n\n*******\n\nCHAPTER 7 - THE BROTHEL\n\nWhen the ladies told me they bought me a brothel, I was thinking a run-down old inn forgotten along a back street of Stormwind. Instead Geraldine and Catherine brought me to a big, cozy looking manor next to an out-of-the-way park of the upper class district. It was ten bedrooms with a nice dining room and a gorgeous lounge. Of course, I wouldn't know what the entire place looked like for a few days... Things got busy real quick.\n\nI looked down at the large brass key in my hand and smiled widely.\n\n\"You ladies are just the best!\" I whooped and opened the door for them.\n\nThe floors were a gorgeous hardwood and the walls were covered in fantastic drapery. It felt so wonderfully extravagant and rich. The opening hall had been lined with plush couches and chairs with an enormous fireplace at the end of it.\n\n\"Fuuuck...\" I groaned, looking around at all of it. This was going to be the most popular high-end brothel Stormwind had ever known.\n\n\"If any of our husbands ask, this was an investment in a local business.\" Cathy giggled.\n\nI looked over at her, \"Didn't you say Catyla bought this?\"\n\n\"It's in her name. It'll be in yours too as soon as you sign the papers. You two had the most of the cost but we had to throw in some so the place looked nice. We had it furnished.\" Geraldine shrugged.\n\n\"I like it.\" A smile came to my face, \"Where's my room?\"\n\nGeraldine grinned widely. I knew what kind of thoughts that lusty bitch was having and I was going to fulfill all of them. My hands slipped around both their hips and I grabbed their asses. The both of them pressed their bodies to mine and we walked up the stairs.\n\nThe bedroom was exquisite. It had an enormous bed against the far wall with a sheer curtain hanging from the ceiling around it. There was a gorgeous fireplace along one wall and a large bathtub in the floor near it.\n\n\"Alright ladies, off with the clothes. I can feel how much you both want it.\" I said, rubbing their asses teasingly.\n\n\"I think you know us too well, Gale.\" Cathy smiled, reaching up to untie the neckline of her dress.\n\nGeraldine stepped in front of me, \"If you don't mind...\"\n\nI grabbed the back of her corset and untied it slowly. Probably a bit slower than I needed to but I enjoyed every single knot. Her dress slipped down and fell about her knees, leaving her body bare. I motioned to my cock, \"Go on girls. You know what you want.\"\n\nThe both of them knelt before me and began to worship my dick. The heady scent of it aroused and enraptured them both. I watched them lick and suck and kiss every part of my dick and my bulging sack.\n\nThey moved back and forth, one sucking on the head while the other worked my shaft. Their hands worked together to pleasurably knead my balls. Cathy was the first to deepthroat me, pushing Geraldine out of the way to press her nose to my crotch.\n\n\"Well fine then, if you're going to hog her...\" Geraldine slid a hand down Cathy's callipygian body. She fondled her plump cheeks and slipped beneath. There was a squelch and Cathy arched her back, pressing herself against my legs. Geraldine attacked her without mercy, digging into her cunt with all the fervor she wanted to be using on my cock. I could feel Cathy's pleasure in the way she was moaning on my cock. Her assailant smiled, \"Gonna wear you out early Cathy, that way I can have that cock all to myself.\"\n\nCathy pushed against me and gasped, \"Try... It... You're not... that good!\"\n\n\"That's it ladies. Come on, let's break in this new bed.\" I said, bending down and grabbing Geraldine's hand. She pulled her way from Cathy and pushed her face-down on the bed, \"Head down and ass up. The perfect position for you. By the Sunwell, look at how soaking wet you are. I better do something about that right now.\"\n\n\"Oh please doooo~!\" Geraldine moaned as I penetrated her. I gripped her plush hips and sunk right to my balls in her heavenly pussy. \n\nHot, moist pleasure flooded me and I wrapped my arms around her to fondle her enormous breasts. My hips worked back and forth, grinding her depths hard.\n\n\"Oh gods, I'm going to live at this brothel... I love your cock so much!\" Geraldine sighed, pushing back against my thrusts.\n\nI felt Cathy's hands slide up my bare hips and she squeezed my ass. She slipped a wet finger down towards my ass and I felt it press into me. My dick throbbed hard and I shoved deep into Geraldine. Cathy giggled, \"Sometimes I wish I had a dick. You've made me such a lusty woman, Gale, and you're so beautiful. I'd love to be able to fuck you myself.\"",
        "\"Mmm~! Right there.\" I moaned as she fingered just the right spot to send shivers up my back. I worked my dick back and forth, still cradling Geraldine in my arms.\n\nCathy jiggled her hand vigorously, \"Knot her good. Fill her with your cum. Make her pass out so you can fuck me all night long...\"\n\nI jerked my hips forward eagerly and let fly. My ass clenched around Cathy's fingers and my knot swelled to fill the width of this lovely hole.\n\nHot spunk flooded Geraldine and she arched her back under the flood of pleasure. I worked myself up against her ass and my knot pushed on her insides. More cum poured out of me and I filled her slutty hole until it was dripping out despite my knot.\n\n\"Ohhh fuck this is good...\" Geraldine swooned as she basked in the pleasure of my cream filling.\n\nI eased my cock back and forth a little more before casting a refreshing spell that made my knot deflate. Geraldine sighed as I slipped out of her and Cathy clapped excitedly, \"My turn! Come on Gale, fuck me in the ass and make me cum on that huge knot!\"\n\n\"Well, aren't we just the most eager.\" I snickered as I sat back amongst the pillows, \"One might think you were some horny, unfaithful woman. Come on. Get over here and ride my cock.\"\n\nCathy blushed but didn't hesitate in the slightest as I held the base of my dick steady for her. In fact, she stood above me and faced away as she squated down in order to give me a helluva view. She held her cheeks apart and nestled my messy cock between them on feel alone. Her hot, plump asshole engulfed me. My entire length slid steadily into her and she let out a long moan on the way down.\n\n\"That's just what I needed.\" Cathy sighed and laid back in my arms, \"It's raunchy, I know, but your dick just feels so right in my bum.\"\n\n\"Hey Geraldine, I know you're not out yet. Come eat some pussy.\" I said, looking down at her immobile, cum splattered ass.\n\nShe picked her head up and looked back at me with an playful smile, \"Oh you. I'm not usually into licking girls, but for you two I think I could find a way.\"\n\nCathy spread her legs and I pulled her lips apart to show the sweet wetness within. There didn't appear to be any reservation with how she dug in: wrapping her arms around Cathy's thighs and digging her tongue in deep enough that Cathy clenched around my cock. She gasped a little and I enticed her further by groping her boobs.\n\n\"I'm never gonna stop being amazed you two are the ones paying me!\" I laughed, gyrating my hips slowly to move my dick around inside Cathy.\n\nBetween the heat of her insides and the constant squeezing from Geraldine's oral, I came to an orgasm quickly. Cathy happily ate up all my cum with her wonderful ass and we were left sitting there basking in the afterglow.\n\n\"Aren't... aren't you going to use that spell and keep going?\" Cathy asked quietly.\n\n\"I'm kinda tired after breaking out of prison. Think I'll just have a nap like this. Pretty comfy.\" I cooed in her ear, thrusting my knot a little bit. She smirked and laid her head back on my shoulder. Geraldine was already cuddled up on my right, breasts squished against me.\n\n*******\n\nWe were awoken late in the night by a laughing Khara stumbling into the room with Catyla and Sherra under her arms. I leaned up from between the two warm bodies that I had been snuggling with and rubbed at my eyes. They looked exhausted and their clothes looked like they had been put on in a rush out the door. The Succubus on the other hand looked wide-eyed and joyous, semen dripping from all over her body. It was even smeared all up her horns.\n\n\"Mistress! Your play things have been so much fun but they insisted we come find you!\" Khara laughed, smacking the both of them on the ass.\n\n\"Gale...\" Catyla groaned, \"Help.\"\n\n\"Save us. Please. I'm so sore.\" Sherra whined.\n\n\"Gale, what's going... ohh.\" Cathy mumbled sleepily, looking up at the three.\n\n\"I think that's our leave.\" Geraldine sighed, stretching and sitting up.\n\nI glanced at the two plump human asses crawling out of my bed and then to the naughty Succubus standing in the doorway, \"Alright girls. I'll take over. Go find somewhere to sleep it off.\"\n\n\"Thank the arcane...\" Sherra exhaled and slumped out the door. She was quickly followed by Catyla and the horny wives.\n\nKhara watched them go and then turned to me with a toothy grin. She sauntered over towards me with entirely too much sexuality. A single creature shouldn't be allowed to look that hot. My dick flooded with blood and I patted my lap, \"Alright. Come on. Have a seat on your favorite cock and tell me what you did to them.\"\n\n\"Mistress!\" Khara put a hand to her breast with a hurt expression. She walked towards me and crawled into the bed, \"You think innocent little me would do anything to your friends?\"\n\nI stared flatly at her as she climbed into my lap. As casually as one might sit in a chair, she sank down on my cock, messy cum-filled pussy engulfing me. I wrapped my arms around her and grabbed a handful of her soft ass.\n\n\"I wouldn't put it past you to have grown a dick on Sherra so you could get fucked in both holes at once.\" I said, giving her a light spank. That glitter in her eyes said it all. I laughed, \"Oh damn, you actually did! How did that adorable little virgin take it?\"\n\n\"Like a fish to water. She fucked Catyla in the ass and then begged to go at my pussy.\" Khara laughed with me.\n\n\"Fantastic! Oh I wonder if we can get her in here. A third dick would be great for the brothel. I can imagine all the business we're going to be getting just from how horny all those noble sluts are.\" I said, idly fondling her butt.\n\n\"Fourth.\" Khara said with a smirk.\n\n\"Really?\" I exclaimed. Really I shouldn't have been surprised, but she hadn't shown any interest in anything besides riding an endless train of hot fucking cock since I met her.\n\nShe leaned back and I laced my fingers behind her back. Without any word of magic, the flesh above her pussy bubbled and grew. All at once, a violet-hued horse cock as big as Catyla's sprang forth. With it came balls so massive they would look appropriate on a horny stallion. The weight of them quite surprised me and precum immediately started seeping from the big flat tip. Khara stroked a hand up it, \"Want to ride me instead, Mistress?\"\n\n\"Haven't had much anal lately do enchant my ass so it doesn't hurt and you can go to town with that gorgeous monster.\" I said, almost drooling over it, \"But first...\"\n\nI leaned down and wrapped my lips around the flared head. It was hot and tasted powerfully of salt and masculinity. I wrapped my hands around it's sheathe and began to stroke it while I sucked. Khara moaned happily and wiggled her hips to return the favor on my cock. I might like giving a good fucking and having my time with a big plush ass but there's just something about a nice hard cock that... just... Mmm.\n\nI spent the next couple of minutes letting Khara writhe about while blew her. I couldn't resist reaching down and jiggling those humongous balls around for a while either. I didn't even know they came that big on anything but Tauren.\n\n\"Mistress, I hope you're thirsty.\" Khara said, leaning back with her hands on my knees.\n\nI gave her the thumbs up and jerked her cock faster than ever. Hot, gooey semen fountained into my mouth and long sticky streams of it ran down my throat. I gulped and swallowed, reveling in the delicious flavor of Succubus cum. It was rich and heady with just a hint of sweet underlying all the saltiness. Both my hands worked her shaft and I felt each load of cum as it fired up into my mouth.\n\n\"Oh fuck, Mistress... I haven't had someone suck me like that in centuries.\" Khara laid back, my dick still jammed up her ass, and her cock flopped back on her belly. Cum spurted from it a few times and wet her luscious skin further.\n\n\"Still got enough to fill my ass?\" I teased her. Her dick responded for her by pulsing and growing fully erect again.\n\nI pushed her forward and regretfully pulled myself from her lovely asshole. It really had been a long time since I had a good ass fucking though, so I turned around and put my ass up for her.\n\n\"Mistress, you really are the best. Your little ass is so cute.\" Khara said, slowly feeling up my hips and squeezing my ass. I felt her lay her huge cock between my cheeks and it sent shivers up my back. It was massive and if Khara didn't have such a good mastery of sexual magic, I wouldn't be doing this.\n\nI felt the tingling start at her palms and radiate out through my ass. It coalesced around my sweet little hole and I felt a warmth growing in me. The spell finished with a relaxing sensation rolling over my entire middle. Khara drew back and nestled the big flat tip right against my pucker.\n\n\"Let me have it already.\" I whined impatiently, leaning my ass back against her. She responded by laying forward on my back and wrapping her arms around me. I felt her warm body press up against me and her cock eased forward.\n\nHer spell worked amazingly. My ass stretched slowly and so very pleasurably around her girth. As she sank into me, my dick surged with heat and ecstasy. I was already on the verge of cumming from being balls deep in her ass for so long. Every bit she pushed into me got me closer and closer. I was on the edge when I felt her balls eclipse my own. Her hand grabbed my dick rather abruptly and started avidly jerking me off. My knot inflated at record speeds, \"Ohhhfuuuck~!!\"\n\nMy head swam and my seed splashed all over the bed. It came and came and came. I jerked in her hand and just let all the sensations carry me away.\n\nI didn't know how long I laid there, hugging a pillow to my face and moaning like a slutty whore. Her gigantic cock just felt amazing in my ass. She fucked and came and fucked some more, every motion a new adventure of bliss. More than once, she dragged me closer to her and a river of cum would flood my insides. It was sheer heaven and I had utterly forgotten what it was like to be loved and fucked and doted upon. I think I might've spent too much time recently lusting so hard after ass...\n\n*******\n\nI don't rightly know when Khara stopped fucking me, but I know that I woke up cuddled in her arms with cum painted all over my body and my dick felt kinda sore. Now that I think about it, I must've returned the ass fucking a couple of times last night.\n\nNevertheless, I woke up because Catyla slammed the door open and rushed in. She was panicking, \"Gale! Gale, there's a mob outside! They're led by that one guard lady that captured you!\"\n\n\"What?!\" I barked, adrenaline spiking through me. I leapt to my feet, much to Khara's displeasure, and dashed off the bed towards the door.\n\nI flew down the steps with both ladies in tow. Magic rose up at my command as I ran and I hurled my hand towards the wall besides the front door. A rift appeared and solidified over a few moments, showing a clear morning in the Eversong woods outside Silvermoon. I held tightly to the spell so we'd have an escape route if we needed it. I didn't want to just run now, chances were this mob was riled up and not here on lawful terms which means we could defend ourselves and stay.\n\nAt the door, I glanced back. Khara and Catyla were both naked, and looking prepared to fight. I turned the knob and the door squeaked open.\n\nAnd I just about died.\n\nA cacophony of voices hit my ears and I about fell over with laughter. The 'mob' was Yara, four Stormwind guards, and about a dozen gorgeous Blood Elf women whom I knew VERY well. They all looked ecstatic to see me and the majority of them were standing there either in lingerie or very risque clothing.\n\n\"Gale.\" Yara growled. The only woman not dressed for sex appeal, she had on chainmail and leather with a sword at her hip and the sigil of Stormwind on her chest. She didn't look too happy to be here but she didn't have a hand on her sword so I had to respect her restraint.\n\nThe other four guards, all guys, seemed plenty happy to be helping all these sexy women around the city.\n\n\"Yara. Good to see you again. How's the guard business? Captured any evil infiltrators lately?\" I snickered, feeling quite playful and relaxed now that I had an idea what was going on.\n\nShe glowered at that and said to through chenched teeth, \"The... diplomatic delegation from Silvermoon has requested the freedom to visit your... establishment while they're here. Is that okay?\" She looked positively sickened by the words and I could tell she would happily run the lot of us out the gates if she could; but she was a woman of law and wouldn't break it herself to bust me.\n\nI glanced back at my two other cocks and smirked, \"Gonna need some help keeping this lot company. Can you handle four each?\"\n\n\"Oh I think we can.\" Catyla grinned and Khara was nodding in agreement, tongue running over her lips.\n\n\"Well then Yara, yes. For the good of your city, you may let these diplomats frequent my brothel.\" I dragged out brothel in a rather teasing manner, \"Come on in ladies, my friends and I will be happy to entertain you.\"\n\nThe girls all cheered and pushed past Yara, barreling into the main hall behind us. I leaned out the door once it was just Yara and the guards. With a cheeky smile from ear to ear I said, \"And Yara, you're free to come in too. No charge. We never got to finish our last session together. I'm sure I can do wonders to relax you.\"\n\nHer face reddened faster than I would've thought possible and she quickly turned on her heel and walked away. One of the soldiers asked, \"Captain, what about the delegates? Shouldn't we stay?\"\n\n\"You can stay here if you want, I doubt they'll be done for a day at least!\" Yara barked and stomped away, fuming and her face still red.\n\n\"Bye darling!\" I called after her and closed the door.\n\n*******\n\nSo now you know, from the beginning to the end of the exciting parts, how I came to open a brothel in Stormwind City and how my dick came to be knotted in the plump, beautiful, cum-filled ass of Madam Catherine.\n\nI hope you've enjoyed it as much as I have. I've got two more customers today and no time for anymore story telling. My knot is almost deflated and Cathy is going to want me to pour a big messy load all over her face and tits before we finish. If you want more... well maybe Catyla could have a story or two for you. Hell, even Sherra is starting to become plenty skilled around here. She's keeping up with her arcane studies, but she's rather popular among the more nervous gals because of how soft-spoken she is.\n\nAnyway, have a good one and don't forgot to stop back sound Sunheart Brothel again."
    ],
    "authorname": "RaistlinMajere",
    "tags": [
        "blood elf",
        "world of warcraft",
        "futanari",
        "milf",
        "ass",
        "anal",
        "oral",
        "monstergirl",
        "knotting"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/the-elf-dick-and-the-stormwind-ass"
}