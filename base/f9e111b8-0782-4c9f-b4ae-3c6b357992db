{
    "title": "There and Back Again Ch. 067-068",
    "pages": [
        "Chapter Sixty-Seven: Child Protection \n\nWithout a purpose, I wandered the castle aimlessly. I found Connor, excitedly talking with a Circle mage I vaguely recognised from the ritual that had saved the young mage. I left them alone, as it seemed the mage was teaching Connor, and I didn't want to interrupt. I then ran into Teagan, who pulled me aside. \n\n\"Dare I ask what my sort-of nephew did?\" \n\n\"Pardon?\" \n\n\"I'm not an idiot. I see the guilt in his eyes when he looks at you, and you avoiding eye contact. I know how you feel about him, and any idiot can tell he loves you, so I repeat: what did he do?\" \n\nI sighed. \"He didn't trust me.\" \n\n\"You can tell me, Sierra. I won't judge. You should be allowed to talk about what happened if you need to.\" \n\n\"I don't need to. I'd really rather not talk about it. I kept some information secret to save someone else's feelings, and he didn't trust that I might not have had some ulterior motive for it. And that's that. I disgust him, Teagan. I'll never forget that expression.\" \n\nHe sighed. \"I am sorry, my dear. I had hoped...well, it doesn't matter now. Just know, if you need somewhere to stay, you can always come here or Rainesfere. I can protect you, if need be.\" \n\n\"Why Teagan, are you flirting with me?\" \n\nHe grinned. \"Of course! You are a beautiful woman, Sierra.\" His expression grew serious. \"I mean it though. I wouldn't pressure you, or expect anything. I am not trying to seduce you or gain your affection. But I know you don't have a lot of options, and you shouldn't be stuck following him if it causes you pain.\" \n\nI patted his cheek. \"You're very sweet, Teagan. And I appreciate the offer. But my place is with Aedan and the Grey Wardens. Thank you, though.\" \n\nHe nodded, and with a bit more small talk, excused himself to meet with Eamon. \n\nI kept wandering, ending up out in the training yard. I watched some of the knights sparring for a while, and decided to put on my armour and join them. I slipped in through the kitchen entrance as a shortcut to my usual room, where I assumed my things had been taken. I made it only a few feet into the kitchen when I heard the disturbance. \n\nThere were loud voices, and a slap that sounded as though someone had been hit. I ran around the corner, only to stop in utter shock. \n\nCowering on the floor was a young boy, who couldn't have been more than seven years old. He was filthy, wearing clothes that were two sizes too small, and emaciated. His arms were up over his head, as though to protect himself from blows; the bruises, one on his face and several on his arms, showed just how necessary that protection was. \n\nAnd standing over him, screaming in Orlesian, was Isolde. She held a wooden spoon, obviously taken from the hand of the cook who was standing next to her, crying silently. I watched in absolute horror as Isolde raised her arm and brought the spoon down across the boy's forearms, leaving a bright red welt. He yelped and tried to curl tighter; she raised her arm again. \n\nI didn't even think; I jumped across the kitchen in two steps, grabbing Isolde's hand before she could smack the child again, ripping the spoon out of her grasp. \n\n\"What is going on here?\" I thundered, and Isolde spun to face me. \n\n\"You!\" Isolde screamed back. \"You will not interfere! This boy is guilty of theft, and-\" \n\nTo his credit, the youngster jumped up from the ground, his dirty cheeks tracked with tears, expression defiant despite the bruises and swelling on his face. \"I didn't steal nothin'!\" he cried, wiping his nose on his dirty sleeve, smearing the dirt further. \"I was just carrying water like Cook said, for all the guests. I didn't take nothin'!\" \n\n\"Then what happened to the wheel of Orlesian cheese I brought in?\" the noblewoman shouted. \"It didn't just eat itself, now did it?\" She pulled at her arm, still held tightly in my grip, as though to strike the child again. I didn't let go, and grabbed her other wrist in my other hand just in case. My new strength from the Joining helped, as did weeks of constant travel and sparring; the soft noblewoman had no chance. \n\nLooking at the gaunt figure before me, I knew there was no way the kid had eaten an entire wheel of cheese. His stomach would have been distended half-way across the room if he had. And regardless, there was no excuse for beating a starving boy for eating something, even if he had stolen it. The cook gestured to the kid, and he slid halfway behind her protective arm. \n\n\"Isolde! He is a child. Look at him! He no more stole your cheese than Andraste herself did.\" \n\n\"I am the Arlessa here, and I will have you arrested for assaulting me, you slattern!\" She struggled again. \"You have no right to interfere in how I discipline my servants!\" \n\n\"You will not strike this child again, Arlessa, or so help me, you'll be needing help to chew your food for the rest of your days. You will desist or you will suffer, do you hear me?\" \n\nI shook her once to make my point, and released her arms. I turned to the kid and gestured; he came forward into the protective circle of my arms. I knelt down to look him in the eye. \n\n\"What's your name, kid?\" \n\n\"Blake, my Lady.\" \n\n\"How old are you, Blake?\" \n\n\"Eleven, my Lady.\" \n\n\"Eleven!\" I was shocked; the kid barely came up to my shoulder, and I wasn't exactly tall. Looking at him, I realised that his stature was a result of chronic malnutrition. I'd have bet he hadn't felt truly full since he'd been weaned as a babe. \"Where are your parents?\" \n\nHe sniffled. \"Dead, my Lady. Da was a kennel master, he died a long time ago, and Ma was a scullery maid here until...until...\" He didn't have to finish the sentence; I knew. Until the undead, released by Isolde's stupidity and selfishness, killed half of the residents of Redcliffe. \n\n\"So where do you live now?\" \n\n\"The Arl said I could sleep in the stables, if I worked hard to pay my keep, my Lady.\" \n\nIsolde interrupted. \"You see? My husband grants this churl a place to live and a job, and he repays that kindness with thievery.\" \n\nI stood so abruptly that it startled poor Blake; he stumbled back with a small cry. I just about to leap upon Isolde, intent on returning the child's torment a hundred-fold on the harridan's hide, when strong arms circled me from behind, pinning my arms, holding me back. \n\n\"What exactly is going on here?\" The voice, which I placed immediately, sounded amused. Blake and the unfortunate cook sank down onto their knees, and Isolde folded herself into a curtsy, murmuring \"Your Majesty.\" \n\nI turned as he released me, rolling my eyes. So much for his identity remaining a secret! I knew Aedan and Tomas would be furious. \"Theron.\" It seemed there was little point to hiding his identity now, but I would try anyway. Isolde jumped back up at my casual use of his alias. \"I found this...woman, beating this defenseless child with a wooden spoon, accusing him of theft.\" \n\n\"And you became involved because...\" \n\n\"Are you joking? That harpy says the kid stole a wheel of cheese. You think a kid that poorly nourished could have somehow hidden an entire bloody wheel of cheese, or eaten it in a single sitting? A wheel of cheese probably weighs more than he does!\" \n\nTheron flushed. \"Um, a wheel of Orlesian sharp, by chance?\" \n\n\"Maker, don't even tell me. Love of cheese runs in the family, I see. You took the cheese, didn't you.\" It wasn't a question. \n\nHe reddened even further. \"It's possible, yes.\" \n\nI turned back to Isolde. \"Next time, perhaps you should do some investigation into your charges before you start beating the nearest innocent servant!\" \n\n\"You will address me with the respect I am owed as Arlessa! And you will not hamper my discipline of a servant in my castle, regardless of the circumstances, is that clear?\" \n\nTheron grabbed me again, as I moved to slap the harpy's face. \"You may be an Arlessa, but I am the daughter of a Teyrn, and I outrank you, you shrew. And if you didn't make a habit of forcing those you are responsible for to sleep in the stables, beating them without provocation, and unleashing undead horrors upon them, perhaps I wouldn't have needed to interfere!\" \n\nTheron tried to hush me, but I spun to face him again. \"That child sleeps in the stable, Theron. His parents died in service to the Arl. He's never had enough to eat in his entire life. He doesn't have appropriate clothes, and when do you think the last time he had a bath was? This is how your brother lived, until this harridan chased him off and sold him to the Chantry. This is not an isolated instance. You think that's the appropriate way to treat a servant, or any child? This is not Tevinter, and they are not slaves. Servants are not thieves, and those who are cannot help themselves.\" I felt very Drew Barrymore-esque, stealing lines from a movie. \n\n\"They can't?\" Theron's expression was wry, and he held up his hand to forestall Isolde, who was about to interrupt. \n\n\"There was a philosopher named Thomas More where I came from...let me see if I can remember the quote. 'If you suffer your people to be ill-educated, and their manners to be corrupted from infancy, and then punish them for the crimes to which their first education disposed them, what else is to be concluded, but that you first make thieves, and then punish them?'\" \n\nIsolde looked incensed, while Theron merely looked thoughtful. I continued, \"Perhaps if the servants were fed, clothed, and cared for properly, you wouldn't have to worry about them stealing food, yes?\" \n\nI held my hand out toward Blake, and he scrambled up from his knees to take my hand. I turned to Isolde. \"You do not need to worry about so kindly providing for this child anymore. I will take care of it. But so help me, if I hear of another child in this castle being treated in such a disgraceful way, I will convince my brother to bring the full might of Highever down on you after the Blight. And I expect your full support when I do, Your Majesty.\" I made a passable curtsy, which probably looked strange in my pants and shirt, and left the kitchen, Blake in tow. \n\nI was almost in tears, enraged to the point that my body didn't know how else to react, but I knew if I cried, poor Blake would probably lose it. I stifled my tears, determined to take it out on a practice dummy later. I looked down at the poor kid, wondering what I was going to do with him now. I realised I had the same priorities with him as with Anders: healing, food, and a bath. That gave me the nudge I needed to head in the right direction. \n\nI headed up the stairs into the guest wing, not releasing Blake's hand. His murmured objections told me what I needed to know - he didn't feel safe, and I wasn't going to let go until he did. I flagged down a passing servant and asked them to bring up a plate of food to my room, and to have water brought up for a bath. Then I continued down the hall, right past my room, and knocked on a door near the end. \n\nWynne opened the door, smiling when she saw me; her smile turned into a frown when she spied the unwashed, bruised child at my side. She stepped back so we could enter. \n\n\"Sierra?\" \n\n\"Wynne, this is Blake. He needs healing.\" The mage looked down at him, and then back at me in confusion. \"I know, Wynne, and I'll explain later, but please. He's been beaten, and I'm guessing it's not the first time.\" \n\nHers eyes softening with pity for a child so mistreated, she turned to the boy and knelt down beside him. \"This won't hurt, child. I'm here to help you.\" \n\nI felt her aura flare, and then the steady light of one of her diagnostic scans; after a moment, her frown deepened and I felt the start of the healing. I watched as the bruises on his arms and face aged and disappeared, then the swelling recede. He flinched and gripped his elbow with the other hand, then released it with a sigh and a smile. After a few seconds, she was done, and I helped her to her feet. \n\n\"He's going to need food, Sierra. A lot of it. He's extremely malnourished.\" \n\n\"I noticed.\" \n\n\"His bruises are healed, and I also fixed his arm - he had a pulled elbow as an infant that was never healed properly. He'll need to work the arm to build up strength in the muscles, though. And he has a bunch of other old, healed fractures, but it's too late to fix them, or the scars on his back.\" \n\n\"Thanks, Wynne.\" I kissed her cheek, and to my surprise, Blake flung his arms around her waist in thanks. The tears in my eyes threatened again; such a small kindness should not be worthy of that sort of gratitude. I took his hand and led him back down the hall. \n\nAlistair was walking up the stairs, and told me he'd been looking for me; I gestured for him to come with us into my room. The platter of food was sitting on a little table, and I put Blake on a chair and told him to eat until he felt sick. He looked at my face, assessing my sincerity; when I nodded and smiled, he grinned and dug in. \n\nI turned back to Alistair. \n\n\"I hear you had a bit of a row with Arlessa Isolde.\" \n\n\"That's putting it lightly. She was beating this kid, and he didn't even do what she was accusing him of. I put a stop to it.\" \n\n\"And threatened to knock out her teeth?\" \n\nI blushed. \"That was perhaps hasty of me, but...seriously! The kid's so malnourished he's half the height he should be. I swear, I should have just encouraged Aedan to use Jowan's blood magic ritual to save Connor, and then we'd be spared having to put up with her.\" \n\nHe looked away, and I couldn't quite interpret his expression. \"What are you going to do with him now?\" \n\nI faltered. \"I'm not sure, exactly. Feed and clothe him, first, and get him a bath. After that?\" I shrugged helplessly. \"Would you help me? I don't want to leave him alone, but I'm thinking it's not appropriate for me to be with him while he bathes.\" \n\nHe looked over at the kid, who was still stuffing his face as fast as he could. Alistair grinned, and I looked over to see juice from an apple running down his chin. \n\n\"Blake! Chew your food. Yikes!\" \n\nHe looked over at me, and made exaggerated chewing motions. \"Yes, my Lady.\" \n\nI rolled my eyes and turned back to Alistair. \"Please?\" \n\nHe sighed. \"Do I have to wash him?\" \n\n\"Maybe his back, but otherwise I'm sure he's quite capable. But maybe remind him to be thorough? If I recall being eleven properly, making sure I scrubbed every square inch wasn't high on my list of priorities.\" I grinned, and he laughed. \"I'll go see if I can round up some appropriate clothes. Give him one of my shirts to lounge in if I'm not back when he's done.\" \n\nI left the two there, just as the servants started bringing in buckets of hot water. I descended the stairs, and went down to the main entrance, happy not to run into Isolde. I left, and found Wayne out near the training yard. He smiled at me as I approached. \n\n\"Aren't you just a little firecracker, my Lady!\" \n\nI sighed. \"You heard, did you?\" \n\n\"I doubt anyone at the castle hasn't. But don't worry. We all know better than to go gossiping around the villagers. No one else will know.\" \n\n\"Oh good.\" I rolled my eyes. \"Okay so what I'm really here for - I need some clothes. For a kid. Any ideas? I was hoping maybe you had some from one of the younger knights, or...I don't know.\" \n\nHe frowned. \"I don't get kids as small as that, typically...your best bet is down in the village. How about I accompany you down there?\" \n\n\"You don't have to do that, Wayne.\" \n\n\"Well, the daughter of a Teyrn shouldn't be wandering around alone, my Lady.\" \n\nI wonder in how many ways that's going to come back to bite me in the ass? I sighed again. \"I'm no more a Lady than you are, Wayne, regardless of my parentage. But if you promise to go back to calling me Sierra, I'll let you accompany me if it makes you feel better.\" \n\n\"Done. Let's go.\" \n\nThe two of us walked down the slope to town, and Wayne recommended the general store, assuming I didn't want custom clothing made. I bought several pairs of pants, several shirts, a belt in case the pants didn't fit, a cloak, and a pair of boots that were likely quite a bit too large, as well as several pairs of socks. Wayne picked out some small clothes, which I also purchased, and we went back up to the castle. I went inside with a smile, knocking on the door to my room and handing the clothes to Alistair when he opened it a crack. I agreed to meet them in the library, and headed down there to wait. \n\nIt didn't take long; I barely recognised the clean, unbruised, smiling child wearing clean, if slightly too large clothes that entered the library holding hands with Alistair. Alistair looked a little bit freaked - I was guessing he had precisely zero experience with kids - but he relaxed when Blake skipped over to me. He sat on an ottoman at my feet and gazed up at me silently. \n\n\"How do you feel, Blake?\" \n\n\"Wonderful, my Lady! Are all those clothes you bought for me?\" I nodded. \"I've never had more than one pair of trousers. And a cloak! Thank you, my Lady!\" \n\nI smiled. \"Alright, first things first, I am not your Lady. You will call me Sierra, okay?\" \n\n\"Of course, my Lady Sierra!\" \n\nI sighed, and Alistair laughed. \"No, I really mean just Sierra. No titles, okay?\" \n\nHe gave me a skeptical look, and Alistair laughed harder. \n\n\"What will happen to me now, my L-...Sierra? The Arlessa isn't going to be happy with me when you leave.\" \n\nI ruffled his damp hair. \"I'll figure something out. For now, let's have lunch.\" \n\n\"My Lady?\" \n\n\"Lunch is the meal between breakfast and supper.\" He gave me a funny look, and I grinned and stuck my tongue out at him. \"Come on.\" \n\nChapter Sixty-Eight: Smack Down \n\nWe headed into the main hall, and found Teagan, Eamon, Theron, Tomas, and most of my companions already gathered, with the exception of the four who would be leaving the next day. To my relief, Isolde was nowhere to be seen. I gulped and then led Blake across the room, pulling him by the hand. I sat down, drawing the kid down beside me, and Alistair sat on his other side. I smiled gratefully at him and began piling a plate with food before handing it to Blake and filling another for myself. \n\nNo one said anything to me, and the conversation resumed around the table. I could feel the weight of Eamon's gaze on me, but ignored it as best I could. When Teagan caught my eye he winked, and I looked away and grinned. Tomas was frowning, and Theron just looked smug. Everyone else kept sneaking glances at Blake, who ate self-consciously, too hungry to pick at his food nervously. After a few more minutes, Theron cleared his throat. \n\n\"Sierra, I've been thinking about what you said. Could you explain that quote you told me to everyone else?\" \n\nEamon glared at him, and I almost laughed. Swallowing my bite, I wiped my lips with a napkin and then repeated the quote for everyone. Theron nodded and made a 'go on' motion. \n\n\"Well, it's sort of self-evident, isn't it? I mean, say you're born an elf and you live in the Alienage. Your parents are probably poor and uneducated. Now they have an extra mouth to feed. You grow up with no training or skills to get a job, and no way to get training because you're poor and uneducated. You still, presumably, want to eat. So you steal. How do you blame someone who has never had any opportunity to get out of that vicious cycle? Of course people steal. And I'm not saying everyone who steals is like that - I'm sure there are those who are just greedy, or like the thrill of it; look at Rendon Howe, for a large-scale example of that. But the little people who steal aren't doing it for power or even for fun. They're just trying to fill their empty bellies.\" I glanced around, seeing Leli and Alistair smiling at me, and Teagan and Theron looking highly amused. I felt defensive and irritated, and I'm sure it showed. \n\n\"So what would you suggest?\" ",
        "\"Well, for one, the little ones should go to school. If they can read and write, do numbers, that sort of thing? They might be able to get a job. Work for a shop owner, or even open a business for themselves. And those businesses are taxed, so they eventually pay back what it cost to educate them. \n\n\"I mean, why doesn't the Chantry do that? It seems to me the best way to keep people having faith is to educate them. They can teach religion while they teach reading, and suddenly maybe people are a little more devout, a little more dedicated to the Chantry, in addition to being able to do something with themselves other than steal.\" My mouth started to run away with me, and I didn't know how to stop it, so I just brashly carried on. \n\n\"And why doesn't the Chantry do better helping the poor people? Isn't that the point of a charity? They should be running soup kitchens and clinics, and using the Chantry buildings as places of refuge for the homeless. That's what many of them do where I'm from. I can't understand why it doesn't happen here. And what about the noblewomen? I understand some of them fight, but most of them don't. Is there any reason that they are not out, among their people, teaching or healing or running charities? I'm sorry, I'm sure this sounds offensive, but your culture is extremely ridiculous and barbaric.\" \n\nTheron laughed right out loud, and I grimaced at him. No matter what I said, laughing at me is just rude. Seeing my face, he tried to stifle his laugh. \n\n\"Oh, I'm not laughing at you, Sierra. I'm laughing at the response I'm imagining in the Landsmeet and with the Grand Cleric when I take you with me to tell them what you just told me. I want you to say it just exactly like you did now, too, no trying to cushion the blow for them.\" \n\nI must have still looked confused, because Teagan finally took pity on me. \"There have been those in the nobility who have been campaigning for exactly what you've been talking about for years. Maric started it, his son continued it, and several other nobles have been working towards the same goal. In Highever, and Waking Sea, and Rainesfere, for example. Some, though, have pushed back, saying it's not their job to elevate the ignorant peasants.\" \n\nHis willpower was impressive; he didn't look at his brother, whose face was pink with embarrassment (or anger, I wasn't sure), but it was obvious that Eamon was among those who didn't feel they needed to make any effort on behalf of the poor. I decided I'd pretend I didn't know, and rub it in a bit more. \n\nI put on my best innocent expression. \"Well, I suppose I can imagine that people like Bann Ceorlic, or Arl Howe would feel that way; they're clearly deranged anyway, and that sounds like something such unenlightened men would agree with wholeheartedly. I'm so grateful to be surrounded by much better people, ones who care about others and not just themselves.\" \n\nTomas, across from me, aimed a kick at my shins, and I gasped; unarmoured, it really hurt! I scowled at him, and he gave me an exasperated look in return. In contrast, Theron had a huge smile on his face, and Teagan seemed to be hiding a laugh behind his hand in the guise of a cough. Eamon tried his best to keep his expression neutral, pretending that I hadn't been including him in my sweeping generalisation. \n\n\"Yes, well, this has been a fascinating conversation, but I believe lunch is over. Perhaps later this afternoon, Lady Sierra, I could have the honour of a conversation in my study?\" Eamon's lemon-face wasn't quite amusing enough to distract from my concern. \n\nI nodded, knowing I was going to be called on what I said to Isolde. I need backup. \"When Aedan has a moment, we'd be pleased to see you at your convenience, your Grace.\" \n\nTheron jumped in. \"Might I be included in this conversation?\" He winked at me. \n\nEamon sighed. \"Of course.\" \n\n\"I'll just go find Aedan then.\" \n\nI stood to exit the main hall, unsurprised to have almost everyone except Eamon follow me, wanting to know what was going on. I sent Blake up to my room and told him to take a nap - he was appalled that I wanted him to nap on my bed, but I insisted - and dragged everyone else into the library. I told them what had happened, including everything Isolde said, with Theron adding in comments when I forgot something. \n\nTeagan was tickled pink by the whole thing, and wrapped me in a hug, making me laugh. Tomas, on the other hand, was completely exasperated. He didn't disagree with me, but seemed to despair my inability to manage it politely. I stuck my tongue out at him. \n\n\"And exactly how far do you think I would have gotten by asking her politely to stop beating a child to death?\" \n\nWhich was of course, exactly when Aedan came in, followed by the three mage recruits. Anders had on some clothes that actually fit, and was carrying a pack full of what looked like armoured robes, as well as a new staff; Solona and Jowan also had packs that were full to bursting. \"Beating who to death?\" \n\nI sighed and shuffled over to him for a hug. \"I've gotten myself in trouble.\" \n\n\"What did you do this time, sister dearest?\" \n\nI went through the explanation again, and was relieved to see nothing but fury when I told him what Isolde had done. He didn't even blink when I told him about telling Isolde about my parentage. He gave Theron a surprised look when I explained how he had stopped me from doing anything rash, and had backed me up. \n\nI told him we were expected to meet with Eamon, and he rolled his eyes. \"He can whine all he wants; if he can't control that hag of a wife, then we can't be expected not to step in. Don't worry.\" \n\nTheron spoke up. \"So, what are you going to do with the kid, now?\" \n\nI sighed. \"No idea. I hadn't exactly thought that far ahead. I can't leave him here, that's for sure - Isolde will probably have the kid locked in the dungeon, accusing him of stealing the clothes I gave him.\" \n\n\"I've got an idea,\" Theron offered. \"When we get back to Denerim, I will need a manservant to help me. Eamon, I'm sure, will offer me someone of his, since I'm sure Loghain will have sacked most of my staff by now. I'd prefer to have someone with no other political loyalties. I don't usually even let Anora hire my personal staff. I can train the lad, while we're here, and extend my protection to him; Isolde won't dare to touch my manservant, I don't think.\" \n\n\"He doesn't read, I don't think, and all he's ever done is grunt work. He won't be very much help at first.\" \n\n\"That's why having him start now is a good idea; I can have him ready for when we get to Denerim.\" \n\n\"You will teach him to read?\" \n\nTheron nodded, and I considered. It was actually an exceptionally generous offer, and I imagined the work required of a manservant would be much less soul-crushing than grunt work in Redcliffe's kitchen. \"I'll talk to him about it this afternoon, and bring him to you this evening if he agrees.\" \n\nHe looked surprised. \"And if he doesn't?\" \n\n\"Then I'll figure something else out. Where I come from, everyone gets a choice. I won't be like Isolde; child or not, he can choose.\" I turned back to Theron, scowling. \"And by the way, what the hell is with all the curtsying and Isolde calling you 'Your Majesty'? I thought we'd been clear that no one was to know your identity.\" \n\nHe flushed. \"Actually, it started about the same way as your discussion with Isolde - she got angry with a 'mercenary' who was allowed to wander the castle at will and was sleeping in a fancy guest room instead of the barracks; she started shouting at me, and tried to kick me out. I even told her who I was; she didn't believe me, and slapped me. Teagan had to step in and stop her. I wasn't very sympathetic to her, after that, and let it go a bit too far with humiliating her; the staff caught on. Don't worry, they've all been threatened within an inch of their lives if they tell absolutely anyone who I am. They're all terrified of Isolde already; I don't think they'll betray me.\" \n\n\"I suppose I can't blame you for that. I didn't exactly do better.\" \n\nEveryone broke up, going their separate ways for the afternoon; Theron asked if he could talk to me before I left, and Aedan insisted on staying as well. We waited while everyone filed out, laughing and chatting about what I'd done. Finally we were alone in the library. \n\nTheron ran his hand through his hair, still short but with blond roots and the brown colour fading; it was a familiar gesture, one that I saw from Alistair every time he was uncomfortable. I almost laughed. \n\n\"Look, I just wanted to apologise. For everything.\" He glanced at me, and seeing my eyes narrow, hurried on. \"I swear, Sierra, I wasn't actually trying to do anything to you, that day in the basement. I truly followed you out of curiosity, and then when I saw you there...I called out to you, shouted a couple of times, actually, but you couldn't hear me over the sound of the water. I should have just left, but I...actually, I don't know what I was thinking, but I swear I had no intention of wrongdoing. And then when you overcame me so easily, I was embarrassed, and then offended when you seemed so...friendly, with Aedan, and I just...\" He trailed off, looking sad and vulnerable. \n\nI waited, and finally relented. \"I'm guessing no one's ever said no to you before.\" \n\nHe nodded, avoiding my eyes. \"True. And I handled it poorly, obviously. I just wanted to say I was sorry. I am probably exactly the entitled brat you think I am, but I realise I need to change that if I want to turn this country around, and that includes how I treat others. For what it's worth, I am sorry.\" \n\nI studied his face, and couldn't see anything except sincerity behind his words. I nodded. \"Apology accepted. And I'm sorry I over-reacted, too. I wasn't exactly feeling safe, in Ferelden just in general, and I was probably a bit on edge. I shouldn't have accused you of...\" \n\n\"Being a pervert? Not that you actually said that, though I'm sure you thought it. And, wait, what did you call me? Pampered and spoiled?\" I blushed. \"You weren't wrong. And I'm sorry.\" \n\n\"How about we just pretend it never happened? You never saw me naked, and I never held a dagger to your throat?\" Aedan choked at the details, and I chuckled. \n\n\"Deal.\" He smiled, and offered me his hand, which I shook. \"So, um...you're a Cousland?\" \n\nI told him about meeting Bryce's spirit, and about discovering Aedan and I had the same birthday. \"So obviously I can't exactly prove anything, but...yes. I think I probably am.\" \n\nAedan put his arm around my shoulders. \"I don't need proof. Even my mabari knows it's true.\" \n\n\"Or maybe he just likes me better.\" \n\nAedan ruffled my hair. \"What's not to like?\" Prince barked, and we laughed. \n\nTheron just smiled at us both, somewhat wistfully. \"I'm happy for you both to have found some family. I always wished for a sibling, growing up...\" \n\n\"Well, you have one now, you know. You could always, I don't know, go say hi sometime...\" \n\nHe flushed. \"I just might. Would...would you mind being there, if I do? You seem to be good at diffusing awkward situations.\" \n\n\"Or making them worse,\" I laughed. \"Of course, I'd be happy to help, if Alistair is okay with that. We'll be in Redcliffe for a couple of days, anyway - you just let me know.\" I sighed. \"So shall we go get lectured in Eamon's office? I'm not exactly looking forward to that, but...\" \n\nAedan nodded, and we followed Theron out of the library and to the door of Eamon's study. I'd been in it before - to find Alistair's mother's amulet, of course - but otherwise we'd always just used the library for a meeting place. Eamon's study wasn't small, but it was quite formal. He had a few hard-backed chairs, some ugly family portraits, and a large desk; there was a hearth along one wall, but it wasn't lit, leaving the room chilly. He gestured for us all to sit. \n\nHe turned his gaze to me. \"I'd like to know what exactly you thought you were doing, in the kitchens today, with the Arlessa?\" \n\nHis emphasis on her title put me on the defensive, and I felt my shoulders tense. Before I could say anything, Theron cut in. \n\n\"She was preventing your wife from accidentally murdering a child, Eamon. I saw the whole thing. Honestly, Sierra stepping in prevented me from doing something infinitely worse. If I'd been the one to stop her, Isolde would be sitting in your dungeon right now, Uncle.\" \n\nEamon scowled at Theron. \"I'd like to hear it directly from the lady, if you don't mind.\" \n\nCalmer from knowing at least Theron supported me, I replied. \"I was cutting through the kitchen on the way to my room when I came upon the Arlessa hitting a child with a spoon. The child in question already had several welts on his arms and face, as well as some older bruises, so clearly that wasn't the first time. I grabbed her arm and took away the spoon, and asked her what she thought she was doing. She accused the child of stealing an entire wheel of Orlesian cheddar. When he denied it, she tried to hit him again, and I restrained her again.\" I was grateful I didn't have to admit to more than restraining her; physically all I'd done was hold her arms. \n\n\"Theron came in, admitted that he'd eaten the cheese, and then your wife started shouting at me for interfering. Theron held me back from slapping her, which I really, really wanted to do; I told her that technically I outrank her and that I was taking over as guardian for the kid. I also told her if I ever heard rumours of similar atrocities being perpetrated on helpless children or servants that there would be consequences.\" \n\nEamon's expression was neutral, but his face was quite purple. I took another deep breath and kept going before he could interrupt me. \"And then I took the kid, and had him healed - he had several broken bones, did you know that? In addition to having been whipped enough to leave scars. He is severely malnourished, and his growth may be permanently restricted because of it. Anyways, I gave him a bath, and bought him some clothes that actually fit, and got him fed. \n\n\"Frankly, you can do whatever you want with me; it was the right call. That child's parents worked for you, Arl Eamon. His mother was killed as a direct result of your wife's actions. And you had him starved, sleeping in the stables, wearing clothes that barely counted as decent, and being beaten regularly.\" \n\n\"That isn't any concern of yours.\" Eamon narrowed his eyes at me. \n\n\"Are you joking?\" I interrupted him, talking over his attempt to speak. \"Tell me you're joking. Abuse of a child is everyone's concern. Every decent person, anyway, though perhaps I shouldn't expect you to be one of those. I know this isn't the first time she's treated a child like that, and if someone doesn't stop her, it won't be the last, either. She's a horror, your Grace. I am unsure if it's true evil, or just sheer selfishness and stupidity. And that's not even bringing up the whole 'Connor being an abomination' situation, which she brought about, allowing your poisoning to happen and your village to be decimated. I don't recall her ever apologising for any of that, or for the way she treated Alistair, either. It may not have been you that did the things she's done, but you should have stopped her, and I hold you equally responsible.\" \n\nI was breathing hard by the end of my rant; Aedan looked dazed by my outburst, but Theron gave me a broad smile. Eamon actually looked vaguely ashamed, though not nearly as much as he should. He changed the subject without comment. \n\n\"Explain to me how you outrank my wife, the Arlessa?\" \n\n\"I'm the long-lost daughter of Bryce and Eleanor Cousland. I'm vague on the details, I admit, but I'm pretty sure a daughter of a Teyrn outranks the wife of an Arl.\" I looked at Aedan and Theron. \"Doesn't it?\" \n\nThey nodded, and Eamon looked thoughtful. \"Do you have any proof of this parentage?\" \n\n\"Not really. Though it doesn't matter; I've no plans to claim any rights to Highever or any of that. I'd prefer to be just a woman, not some snooty noble. But if claiming my heritage is what it takes to stop someone from beating a child, then I'll use what I have to.\" \n\n\"You realise that with no proof, I could have you arrested for assault on the Arlessa.\" \n\nTheron and Aedan were both on their feet before I could respond, both with hands on sword hilts. Eamon's eyes widened. \n\nTheron spoke first. \"Try it, uncle. I will not have this woman detained, or tortured in your dungeon like that idiot Jowan, for preventing your harpy of a wife from killing someone. Keep in mind that the only reason Isolde and Connor are both alive at all right now is because Sierra convinced everyone not to go forward with either killing your son as an abomination or using your wife's life force to allow him to be saved. She convinced everyone to go to the Circle instead. If that's not enough reason for you to drop this and rein in your wife, then perhaps this will do it: I fully support Sierra in this matter. If you persist, you will find yourself stripped of your Arling, and your wife deported back to Orlais where she belongs. The same goes for having servants, especially children, beaten, starved, or left to sleep in the stables in future. Have I made myself clear?\" \n\nEamon nodded, pale and looking a bit ill. I wanted to dance with joy. Of all the things I'd always wanted to say in game and never got the chance, taking Eamon down a peg was at the top of my list. Right after scolding Cailan, which I'd already done. I hoped it wouldn't cause problems later, but really, the stuff that was happening couldn't continue, and Theron didn't need Eamon as much as Alistair would have. And as much as Eamon was a gigantic pain in the ass, I think he legitimately was a traditionalist, and as such, a Theirin supporter. I hoped it would be enough for him to listen to Theron. \n\nAnd I was suddenly intensely glad that Theron and I had been able to mend fences. \n\nAedan took my hand and led me out of Eamon's study. I managed not to until we were out of sight, but I started shaking almost the moment we got out. Aedan put his arm around me, half-dragging me further away while also trying to offer comfort. He found an unused guest room a couple of hallways down, pulled me into it, and then hugged me. \n\n\"If I know you, you're shaking more in rage than anxiety.\" \n\nI chuckled softly. \"You got me. Not going across the desk to throttle him was one of the hardest things I think I've ever done.\" \n\n\"If it makes you feel better, I think it will be at least somewhat effective. Eamon is terrified of losing his influence at court; he can't afford to piss Theron off too badly. And I have to give credit where it's due; Theron was amazing in there.\" \n\n\"Gives me hope maybe the King won't be a complete idiot.\" \n\n\"I know, right?\" \n\nI sighed. \"I wish you weren't going off with the mages to collect darkspawn blood. I want you to stay here.\" \n\n\"Me too - sleeping cold on the ground does not appeal - but Zev and Shale are coming with me, so it won't be just the four of us. Zev already knows everything anyway, and Shale won't care that we're collecting blood. She just wants to squish something.\" \n\nI had to admit I felt better that they'd have the golem with them to 'tank', and I knew Zev would never let anything happen to Aedan. \n\n\"So what do you think the story is with Anders and Solona?\" Aedan asked. \n\n\"I dunno. I had no idea they knew each other. And with Anders' rather free-loving reputation, I'm confused.\" \n\n\"Well, this trip ought to be interesting, anyway.\" \n\nI hummed agreement. \"I suppose I should check in on Blake.\" \n\n\"And I'd better check on my recruits. Tomas is kind of scary when he's in recruiting mode, hey?\" \n\nI laughed. \"I'm just glad it's you, not me. Go. I'll see you at supper.\" ",
        "I headed up to my room, and found a sleeping child curled up on my bed with a completely self-satisfied grin on his face. I smiled softly and settled into the armchair to wait until he woke."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-67-68"
}