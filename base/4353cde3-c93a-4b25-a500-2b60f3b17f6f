{
    "title": "Efrain and Cory Ch. 17",
    "pages": [
        "Author's Note \u2013 Seems that every time I have a pain in the ass chapter, the next one just flows out with no problem whatsoever. Watch, chapter 18 will take fucking forever and I'll spend my entire winter break fretting over it. \n\nOkay, I may have had a bit more fun than I intended with Indie's non-admirer's offerings. A lot of Google searching and stuff. I wish some of these things actually existed. Speaking of actually existing \u2013 I think I'm living vicariously through Cory's shoe collection... \n\nSo, according to Word, I've written over 55k words about these guys. There's about 10 pages that I haven't published yet, and I still need exposition to even get to them. If you're still reading, holy fuck I love you! \n\n~ Dayne \n\n***** \n\nChapter 17 \u2013 Sticky Fingers be Damned \n\n\"Dr. Collins, I could have brought the book up to you.\" \n\nI came back from my coffee break to find my graduate advisor pulling a book from one of the shelves. Digital age and all, but some of the stuff needed for our research we had to get the old fashioned way. Mine and Mike's office was technically Professor Collins' professional library. \n\n\"Not a problem, Indie,\" he said, plopping down into the old leather chair near my desk. \"Gives an old man an excuse to stretch his legs.\" \n\n\"Dude, you're barely forty.\" \n\n\"And I still feel like shit,\" he joked. \"Actually, I came down to check on your ever-growing collection.\" \n\nMy non-admirer had really been pulling out all the stops these last few weeks. \n\nA miniature Tonka die cast snow plow. \n\nA little snow globe with \"FUCK OFF\" in big red letters swimming around in silver and gold confetti. \n\nA handful of Pok\u00e9mon cards, all ice-type. \n\nA six foot inflatable yeti that scared the shit out of Dr. Collins when he discovered it behind the door. \n\nA button of a much younger (and significantly thinner) Val Kilmer wearing douche-y aviator sunglasses and a flight suit. \n\nA shitload of glittery fake snow dumped (four inches deep in some places) all over my desk and chair. \n\nA snow-brick maker the following day. \n\nAn Ice Cube air freshener that now graced my rearview mirror even though I hated rap. \n\nA tiny ice hockey set, complete with two tiny blades you put on the end of your pencil, that Mike promptly stole. \n\nA Jon Snow action figure that I was sure as fuck keeping, Mike's sticky fingers be damned. \n\nIt looked like a white elephant party threw up on my desk. \n\nBy now, I had so much shit that I was forced to move it to a nearby shelf or else have no working space. The angry ice cubes, snow globe, and Jon Snow stayed. \n\n\"Still don't know who's doing it?\" \n\n\"I have some ideas,\" I said. \"But zero fucks to give on the issue overall.\" \n\nI wasn't the easiest person to get along with. Plenty of people, mostly students on the receiving end of some deservedly bad grades, have commented on my icy persona. I was totally fine with this, even with these angsty passive-aggressive gifts. Hell, I wasn't even that pissed off about the snow. Sure, I had to clean it all up, but watching confused undergrads shake fake snow out of their research papers was so worth it. I didn't offer an explanation, and tried not to laugh when they complained. And I saved a whole garbage bag of snow in case I needed to pull a prank of my own. \n\nLike, say if my goddamn Jon Snow action figure walked off again. \n\n\"Oh, hey! I remember this one.\" The most recent offering came in the form of a little penguin wearing a red and white hat and red mittens. Professor Collins had picked it up and was turning it over in his hand. \n\n\"Surprised your friend knows about this. They had a rebooted show when I was in my teens. You were probably still in pre-school.\" \n\n\"I thought it looked like Woody Woodpecker.\" \n\n\"They were created by the same man,\" he said, returning the toy to my collection. \"Funny that everyone knows Woody Woodpecker, but no one remembers Chilly Willy.\" \n\n\"Wait, what's his name again?\" \n\n\"Chilly Willy. Why?\" \n\nOf course. \n\nA lot of people called me frosty or frigid. However, there was only one person I knew of who also had plenty to say about my dick. \n\n\"Mystery solved,\" I muttered. \n\n\"Hm? You say something?\" \n\n\"No, nothing,\" I said, pulling my coat back on. \"I just need to run a little errand.\" \n\n~*~*~*~ \n\nCory toed off his shoes. His birthday was still a week away, but he already received the maroon hightops last week. His mom bought them and had a friend paint all over them with little drawings of Pusheen eating pizza. They were his new favorite Chucks, yet that didn't seem to make him any less glad to have them off. He wiggled his toes appreciatively then tucked his feet under him in the chair and started pulling study materials out of his bookbag. \n\nI watched him with an amused expression before I slipped off my tan leather Top Siders. I stretched my legs out in front of me and crossed them at the ankle. \n\n\"Kid's got the right idea,\" Whitlock chuckled. He started unlacing his sneakers. \n\n\"Fuck,\" Rice groaned. \"We're really doing this?\" \n\n\"Yup.\" Teague already had his feet, in his usual garishly patterned socks (mismatched, of course), propped up on the table. \n\nPretty soon, a dozen or so pairs of shoes lay discarded on the floor and everyone was that much more comfortable. \n\nCory and I finally figured out that if we were going to be in a room together, we needed a chaperone if we hoped to get any work done. I was tired of my gringo boyfriend being better than me at Spanish, so I swallowed my pride and asked for his help. He'd offered it before. It was fucking embarrassing, and I kinda-sorta-maybe-just-a-little used sex as an avoidance strategy. \n\nBut, only at first. \n\nHowever, after the first few times, I started associating my Spanish textbook with fucking him and now just opening the damn thing made my dick twitch. Conjugating verbs was difficult enough without the raging hard-on. Now that I really wanted his help, I had to fight my baser instincts and keep my hands off him long enough so he could give it to me. And thus the chaperones. I was pretty sure the guys wouldn't be amused to know that they were the only thing preventing me from throwing Cory down and breeding his ass. Although, not all of it was my fault. \n\nSome of his methods were unconventional. I thought he'd do shit like correct my compositions or something. Instead, he made me carry out entire conversations in Spanish and watch tawdry telenovelas. He taught me bachata and cumbia, all while discussing the Tejano music we were dancing to. I knew it wasn't possible, but at some point, he must have talked to my mother because I swear all that shit came straight from the official Analena Osita Santos-Garza manual for Spanish instruction and torture. \n\nThe times when he wasn't reminding me of my mother, he was making me crazy. \n\nIt started a week or so ago. We were lying in bed watching some movie on my laptop when he suddenly sat up. \n\n\"I think you need a different motivation,\" he said, moving my computer off to the side. \n\n\"Motivation?\" \n\nHe grinned mischievously and straddled my lap. His hard-on pushed against the thin cotton of his dark blue trunks, desperately trying to make a run for it. Pre-cum had already formed a wet patch over the head. It dug into my hip as he leaned forward to nibble my neck, hitting that sensitive spot below my ear that made my nipples hard. My fingers skimmed his back before slipping under his waistband. His tongue flicked my earlobe; his low voice hummed in my ear. \n\n\"Anhelo su boca, su voz, su pelo.\" I crave your mouth, your voice, your hair. \n\nI gripped him hard while he thrust himself against me. He continued his recitation. \n\n\"Silenicoso y muerto de hambre...\" Silent and starving... \n\nMy fingers found his center, still wet and open from our earlier fucking. He flexed his hips back as I slid in, and his breath caught on the next line. He pressed on while I fingered him. Gasps and moans and nibbles punctuated his Neruda, breaking the poem apart until it was almost unintelligible. \n\nI let him get as far as \"I want to eat your skin\" before I pulled our underwear far enough out of the way and thrust up into him. The rest of the line was lost in a strangled cry. I brought up my knees to fuck him from underneath. \n\n\"How does the rest go?\" I asked. \n\nHe pulled back to look at me. I stared back, managing to look unaffected despite his tight ring drawing me further into his body. \n\n\"Finish what you started, Cory,\" I prompted and thrust deeper. \n\nCory panted out the next two lines. I worked him harder, looking for his breaking point. Exactly how far could I push him? \n\nWhen he wasn't forthcoming with the next line, I slapped his ass. \n\n\"Oh my God,\" he moaned. \n\n\"I don't think that was in the poem, acho.\" \n\nHe fed me the next line through clenched teeth and a glare. I kept thrusting and he kept delivering. Words of lust and hunger and need filled the spaces between passionate cries. He kept going out of strength of will alone. His last line, something about pumas, was lost completely in his shuddering, screaming climax, and I came soon after. \n\nWe did this a few other times \u2013 memorizing erotic poetry to recite while the other did everything in his power to distract. \n\nLast night, he let me get through two stanzas of Alarc\u00f3n before I blasted the back of his throat so hard I was surprised he was able to talk this morning. He told me I fucked up most of the lines anyway, but who could blame me for losing to such a devastatingly gifted mouth? Cory had taken every bit of my original deepthroat lesson and vastly improved on the methods. I knew the battle was over when he declared that his weapon of choice. \n\nDespite our chaperones, my dick swelled at the memory of his small mouth working my cock. I adjusted my book in my lap and hoped nobody noticed. \n\n\"You okay, vato?\" \n\nHe called me vato once, and I answered with acho, and those kinda stuck as our pet names. Thank fucking God, because I was NOT going to call him babe or baby (or pap\u00ed for that matter). \n\n\"Muerto de hambre,\" I said. \n\n\"Oh, that's all?\" he said then tossed me the snack bar he'd pulled from one of the baskets stashed around the room when he came in. Fucker knew exactly what I meant and chose to ignore the double meaning. I still ate the damn thing (okay, so I was figuratively dying of hunger for multiple reasons), which drew a chuckle out of him. \n\n\"Yo, Card,\" Baker called from the other side of the couches. \"How come he's not tutoring you?\" \n\n\"Dude, that's racist,\" laughed Martinez, one of the freshmen recruits Cory introduced to the crew. Yeah, he didn't know Spanish either. \n\n\"My mom had me in dual language schools since I was four,\" he answered. \n\n\"Funny,\" I said. \"Four was about the time I started fighting my mom on learning anything but English.\" \n\n\"How long did it take you to learn to cuss?\" Lithgow asked him. \n\n\"A couple years, tops. Sadly, much longer than it took Mom,\" he laughed, then continued in a high-pitched mom-voice \"Cory Frederick Card, I know what pinche means.\" \n\n\"What does pinche mean?\" \n\n\"Fucking. But only if you use it with something else.\" He noticed that I was about to argue and shook his head. \"Mexican dialect.\" \n\n\"So, back to fucking,\" Baker interrupted. \"You've fucked Spanish chicks, right? Do they really say 'ay pap\u00ed?'\" \n\n\"I've rarely heard it,\" he answered. \n\n\"So, what do they say?\" asked one of the other guys in the lounge. \n\nSeemed he had everyone's attention now. Cory never bragged about conquests (which was good, since I was technically one of them), but the team had been convinced that he was a serious ladies' man since our performance with Marina, Berta, and Luz. He leveled the room with a flat stare, but that didn't dissuade them. \n\nCory sighed with annoyance and then launched into a litany of Spanish with all the detached enthusiasm of a henpecked husband reading a grocery list. He went on for a minute, paused for a breather or a drink of water, then continued for another minute before repeating, going on for at least five minutes. Most of it was utter nonsense, peppered with some pretty innocent statements, and salted with the occasional dirty phrase (including some that he had said to me at one point or another, and some that he definitely didn't hear from a chick). The whole time, he sat twirling his pencil between his fingers. \n\nThe team stared at him in awe. I, however, lost it at \"que hora es?\" It started as a chuckle, which quickly ramped up to a full laugh the further he went with the performance. Teague noticed my dilemma, and soon we were both laughing too hard to breathe. \n\nCory rounded out his performance with \"Chingow, eso es todo?\" and the guys looked at him in reverential silence. Well, mostly silent \u2013 Teague and I were still laughing. \n\n\"Dude, what did you even say?\" Baker asked. Teague had already fallen from his seat and my eyes were watering. \n\n\"Google Translate is your friend,\" Cory answered. I managed to control my laughing enough to look over at him. He was trying really hard not to laugh himself. \n\n\"No it's not,\" Teague wheezed from the floor and I was laughing in full again. \n\nOur teammates looked from Teague and me to Cory, unsure of what to make of our reactions. \n\n\"Orale\" was all Cory could manage before he finally cracked. \n\n~*~*~*~ \n\nPreston Finnegan stood by my desk looking at the tiny rabid Yorkshire terrier now hanging from his keyring. \n\n\"It fit,\" I said. \"Adorable, but makes annoying noises whenever that filthy mouth opens.\" \n\nI spotted the keychain at some gift shop a few blocks off campus a couple weeks ago and Preston was the first person to come to mind. I was glad it was still there when I stopped mentally slapping myself upside the head for not figuring out sooner that he'd been the one leaving things on my desk. \n\nOf course it was Preston. Who else would have the tenacity to keep something like this up for weeks? \n\nI left him the keychain with a quick note on my desk blotter, but should have known he would wait for me to show up. \n\nHe sat on the edge of my desk while I hung up my coat and unloaded my satchel. \n\n\"So I'm adorable,\" he said, blithely ignoring the rest. He wore a soft gray cardigan with red trim over an untucked white dress shirt and blue jeans. The dark gray tie knotted at his throat in a complicated pattern. The tan was fading from his pretty face, and his cheeks were a touch pink from the colder weather. Yes, Preston was cute. \n\n\"Since you're here, care to explain...\" I trailed off and waved over at the collection on the shelf. I avoided looking at my desk. He could have back everything else, but I was keeping Jon. \n\n\"I thought it all seemed pretty self-explanatory.\" \n\n\"For the most part,\" I said, pointing out the Val Kilmer button. \n\n\"Iceman? From Top Gun?\" he said. \"How do you not know that?\" \n\n\"And her.\" I pointed to Blue Rose. At least I knew where she came from, if not what she signified. \n\n\"Blue hair, bad fashion sense,\" he replied as his eyes swept over my navy blue Dickies work pants and faded Radiohead t-shirt. \"Also, her signature move is getting scared and running away.\" \n\nIt took a minute for his words to register. \n\n\"Might want to close your mouth, sugar,\" he said. \"Or else someone will find something to stuff it with, and Lord knows you wouldn't want to be sent running from your own office.\" \n\nLike I said, the very picture of cute. At least, until he opened his mouth. \n\n\"He told you about that?\" \n\n\"The guy he'd been crushing on for weeks embarrassed the ever living fuck out of him,\" he spat. \"Of course he told me about it.\" \n\nI rolled my eyes. I still felt a little guilty about that night, but Cory obviously seemed to get over it pretty quickly. I also doubted Preston's claims about the extent of Cory's attraction. \n\n\"The really shitty part isn't that he defended you for running out,\" he continued. \"But that you've been nothing but an asshole to him ever since.\" \n\n\"So you leave passive-aggressive mementos?\" \n\nPreston clicked his tongue. \n\n\"He told me to leave you alone,\" he answered, his annoyance at the order quite evident. \"And that I wasn't allowed to use you as a human punching bag.\" \n\nHad this been any other person, I would have laughed. However, Mike and I found a bunch of his tournament videos on YouTube. The difference between Preston the Cheerleader and Preston the Black Belt was frightening. He seemed disturbingly adept at making men much larger than me literally cry. There was one video where he'd taken a kick to the face, but still pulled the guy down despite a broken nose. He accepted his trophy with two black eyes, a bandaged nose, and his own blood drying on his gi. \n\nStill finding fake snow in my keyboard no matter how many times I cleaned it seemed a small price to pay compared to what he could have done to me. \n\n\"And, you're here now because...\" \n\n\"My best friend is happy, and I want him to stay happy.\" \n\n\"My roommate is happy, yet I know it's a matter of time before he gets hurt,\" I said, moving to stand in front of him. \"But, I'm keeping out of it. What's your excuse?\" \n\n\"I can't help it,\" he said. \"Something about you screams I'm a massive twat; please abuse me.\" \n\nI arched my eyebrow. \n\n\"I see.\" \n\n\"You still owe Cory an apology.\" \n\n\"No,\" I said evenly and crossed my arms over my chest. \"I don't.\" \n\n\"You do. In fact, you owe him several.\" \n\n\"And so you're here to fight his battles for him.\" \n\n\"Of course,\" he said. \"He's my best friend.\" \n\n\"How noble of you.\" \n\n\"Fuck. With how much time he spent checking out your ass, I'm amazed Cory missed the massive stick you have shoved up there,\" he muttered. \"God, you need to get laid.\" \n\n\"Wouldn't be the first time I've heard that.\" \n\n\"And yet you fail to take the hint,\" he said. \"Need to find you a charity fuck, if only to do the whole damn world a favor.\" \n\nI moved closer to him. \n\n\"Is that really why you're here, Preston?\" I asked. \n\n\"Seriously?\" he said. \"If ever had the desire to know what it felt like to be fucked by a cadaver, you'd be the first person I'd call.\" \n\n\"If you say so,\" I said and leaned down over him, planting my fists on the desk. He leaned back. \"But we both know you're hoping to sacrifice that sweet little ass of yours for your friend's happiness.\" \n\n\"Even if I were to offer up my 'sweet little ass,'\" he snapped. His eyes, which I noticed were more of a rich honey brown, flashed angrily behind his long lashes. \"I highly doubt La Virgen de Grad School would know what the fuck to do with it.\" \n\n\"Just keep telling yourself that, babe,\" I said, stepping between his knees (lest one decided to become intimately involved with my tender bits) and leaning further into him. He refused to give ground, even with our noses practically touching. \"But, trust me, there are things I could do to you that would leave you a babbling mess.\" \n\n\"A lobotomy?\" \n\n\"Sure, if that's what you kids call it these days.\" \n\nHis eyes (they were the exact color as this one ale I had over a year ago, but haven't been able to find since) locked onto mine, but his tongue flicked out nervously over his lips, betraying his wavering confidence. A predatory grin stretched across my face. \n\n\"You're afraid of me,\" I said. \n\n\"Bitch, please,\" he said. \"We both know you'd tuck tail and run before anything serious could happen.\" \n\n\"Want to test that?\" \n\nI knew I should have been more careful as there was no telling how far I could goad him before he started foaming at the mouth, but this guy had a knack for pushing my buttons. In fact, he'd been pushing them for weeks now. My annoyance and bruised ego got the better of me. ",
        "\"Got your running shoes on?\" \n\nI slipped a hand up his back and jerked his body to me. His eyes narrowed, but he didn't pull away. If he wouldn't back down, neither would I. I brushed my lips over his moistened pout. He shivered, and I found myself compelled to do it again. The tip of my tongue teased his pillowy bottom lip. \n\nPreston's hands came up to rest on my arms like he was going to push me away, but he leaned into me and that was all the invitation I needed. My mouth slanted across his, and I kissed him in full. His fingers dug into my arms and a small whimper escaped his throat. \n\nI told myself that my reaction probably had more to do with the fact that this was the second time I'd kissed anyone since Jameson, and not any actual desire for the man currently parting his lips for me. I would later wonder why I wasn't worried about him luring out my tongue so he could bite it off, but my dick was currently doing all the thinking, and its only thought was on assessing the touchability of his skin. \n\nI bunched up his cardigan and shirt until I could reach my hand underneath. I stroked over the soft skin I found. Touchable, hot. His breath caught when my fingers splayed out across the small of his back. I used his momentary surprise to deepen my exploration of his mouth. It was soft and warm and, despite all its filthiness, very inviting. I pressed him until his back rested on the desk and continued to massage his tongue with mine. \n\nHe moaned into my mouth and tangled his fingers in my hair. His legs wrapped around my hips, rubbing his hardening member against me. Hell, that could have been his zipper, but my blood-engorged dick didn't care. Thrusting against him was a far cry from the bluff-calling that I originally intended, yet I couldn't stop. My hips flexed into him, grinding my dick against his hips, and he arched up to meet me. His low moan spurred me on, and I was soon grinding into him over and over until I was on the cusp of spilling into my own boxers. \n\nI probably would have embarrassed myself if Mike hadn't called at that exact moment. \n\n\"Dr. Collins and I are almost to the office,\" he said. \"You there yet?\" \n\n\"Yeah,\" I said, pulling away from Preston. I was almost annoyed with my reluctance to do so. \n\n\"Good deal. See you in a few.\" \n\nPreston appeared to have heard the conversation on the other end because he sat up and tried to make himself presentable. I took in his flushed cheeks and heavy breathing as he discreetly adjusted his package. I looked down. Knowing that he had indeed been grinding his hard-on into me made it more necessary that I fix myself. His eyes widened when I rearranged my dick and I couldn't help grinning at why (I know what I have. What's the point of modesty?). Preston noticed my grin and glowered. \n\n\"This isn't over,\" he growled. \n\n\"No, it's not.\" \n\n\"But, you'll still run before finishing things.\" \n\nI simply smiled and flicked my finger over his poorly disguised erection. \n\nPreston left my office in a huff. \n\nMike and Professor Collins swept in a minute later. I had managed to get my breathing under control, but was pretty sure I still looked disheveled. I hoped my hard-on wasn't that noticeable, as I was still trying to get it to go down. I tried to school my features and pay attention to my graduate advisor, but I was still drunk off a pair of honey-brown eyes and kiss-swollen lips. \n\nDr. Collins chatted with us for a few minutes, grabbed a couple books, then remembered he had a meeting to attend. \n\nWhen he left, I sagged into my chair and laid my head on the desk blotter. I'd been rolling Preston around on stacks of student papers that I would now have to make excuses for wrinkling (throw the papers in the fake snow and hope that distracts them?). \n\nI'd been so caught up in everything that went down from the time I walked into the office that I failed to notice the box in the middle of the blotter. A string of USB-powered lights in the shape of icicles and snowflakes. I had a port on my monitor, so they'd be perfect there. Then I saw the attached note. \n\nYou're still an asshole. \n\nPreston's handwriting was prim and neat, but still very masculine. He signed the note with what had to be the most sarcastic cartoon heart ever penned in the whole history of human writing and his name in a well-flourished script. He was probably that guy that practiced signing his name for hours at a time until it was perfect. A small post-script sat underneath his name: Who the fuck else would it be? \n\n\"So, how screwed would you have been if I hadn't called?\" Mike asked. An evil grin spread across his face. \n\n\"What do you mean?\" \n\n\"What do you mean?\" he scoffed. \"Heard you and Preston in here, so I went for coffee.\" \n\nI groaned and put my head back on the desk. God, he's going to tell Laurel. \n\n\"Caught Dr. Collins on his way here when I was walking back,\" he said. \"You owe me, man.\" \n\nHow much could I owe him so he wouldn't tell Laurel? I eyed Jon Snow and almost cried. I fucking regretted letting them hook-up. \n\n\"Yeah, yeah,\" I said, waving my hand weakly without bothering to lift my head off the desk. \"I owe you.\" \n\nI listened to Mike typing and clicking away at this computer. I willed the blood to flow back out of my lower regions, but my dick was reluctant to calm the fuck down. I banged my forehead against my desktop once, twice, again, yet I couldn't shake it off. Is it possible to go rabid from kissing? Mike fucking snorted from his computer. I had a good idea why, but I didn't want to give him the satisfaction of looking over. I couldn't bring myself to even ask what he heard, but I knew I'd hear about it eventually. \n\n\"La Virgen de Grad School,\" he chortled over his coffee. \n\nSee? \n\nI tried to not groan out loud again. I was so screwed when Laurel found out."
    ],
    "authorname": "dayne",
    "tags": [
        "college",
        "athletes",
        "twink",
        "interacial couple",
        "comedy",
        "anal sex"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/wolfie-kitten-iceman-maddog-ch-17"
}