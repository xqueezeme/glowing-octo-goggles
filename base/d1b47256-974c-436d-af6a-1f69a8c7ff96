{
    "title": "Smooth Operator",
    "pages": [
        "Straight to voicemail.\n\nJason ended the call without leaving a message and sighed. Stupid. Stupid. Stupid, he silently chided himself.\n\nOf course, he couldn't have known that Sheila would react the way she did. He never would have guessed that revealing his shaving kink would freak her out. Obviously, it had. The look on her face had spoken louder than words. He'd told her to forget he brought it up, and she said it was fine, but then said she wasn't feeling well and went home not long after. She hadn't answered a text or phone call since.\n\nAlternately mad at her and himself, he'd tossed and turned all night, and then spent most of the morning pacing through the apartment.\n\nHis phone rang, and he looked to see it was Sheila. Nervously, he answered, \"Hello.\"\n\n\"Hi.\"\n\nAfter a few seconds of uncomfortable silence, he asked, \"Are you okay?\"\n\n\"I... I don't know.\"\n\n\"I'm sorry. Just forget I ever brought it up,\" he apologized.\n\n\"I can't. I just... I never thought you would... It's just so weird.\"\n\n\"It's not important. It's just a silly fantasy. It's not like it's something I need.\"\n\nShe sighed, and after a pause, said, \"I'm sorry I haven't been answering. I need some time.\"\n\n\"Are you breaking up with me?\" he asked.\n\n\"No. Of course not. I'll text you, okay?\"\n\n\"Sheila...\"\n\n\"I'm sorry. I just can't even right now.\"\n\n\"Okay. I...\" he trailed off before finishing with love you because the line went dead. He looked at the display in disbelief and muttered, \"Are you fucking kidding me?\"\n\nHe tossed his phone on the couch in irritation.\n\nIt only got worse a couple of hours later. He hadn't been out or spoken to anyone about the whole affair, but text messages and phone calls from his friends checking in on him confirmed that word had gotten out. Nobody had yet mentioned what had started the whole thing, but then again, he doubted any of them would be callous enough to do so if they had heard.\n\nAt least word that he didn't want to talk about it spread just as quickly, and people left him alone. By the time evening rolled around, he was too emotionally exhausted to be anxious or angry, and ended up sitting on the couch in the dark, half-listening to music.\n\nA knock on the door broke his reverie. He remained on the couch, afraid it was another friend coming over to check on him. Even worse, it could be Sheila. He was in no frame of mind to make up with her after she'd aired their dirty laundry to at least one person with a big mouth. He needed a little time. At least a chance to try to sleep on it.\n\nA second knock sounded, and he reluctantly got up. The music playing made it fairly obvious he was home. No matter who was at the door, not answering it was probably going to make it worse.\n\nWhen he opened the door, his brow furrowed, because it was nobody he expected. It was Sheila's younger sister, Jamie.\n\n\"So, my sister's being a real bitch, huh?\" Jamie said by way of greeting.\n\nHe stood staring, wondering why she was there. It was unlikely Sheila had sent her, because the siblings didn't get along very well.\n\nJamie grinned and chuckled before asking, \"Can I come in?\"\n\n\"Uhm... Yeah. I guess.\" He let her in &mdash; still perplexed.\n\nJamie barely waited for the door to close before she started in. \"I knew something was up when Sheila came home to do laundry this morning. She was acting all weird. So, I kind of eavesdropped on her when she was on the phone.\"\n\nHe watched her sit down on the arm of the couch, and at a loss for what to do, remained where he was. He asked, \"Do you know who she was talking to?\"\n\nShe shrugged. \"No clue. Anyways, she said you had a thing for watching a girl shave her pussy. Creeped her out, I guess.\"\n\nJason involuntarily groaned and reached up to rub his temples. Even though he assumed that had gotten out as well, hearing it confirmed was another thing.\n\nJamie continued without missing a beat. \"Like I said, she's being a real bitch. I don't think it's creepy. It's kind of hot, actually. I'll do it for you.\"\n\nHis hand fell to his side, his eyes widened, and his mouth dropped open. He gave a shake of his head and asked, \"What?\"\n\n\"I said, I'll do it for you. I think it's hot.\" With that, she reached into her purse, pulled out a lady's razor, and twirled it in the air. \"Nobody else ever has to know.\"\n\nDespite the shock, Jason shivered, and blood rushed between his legs. The shaving kink had always turned him on, but with the real possibility of fulfilling it for the first time right in front of him, the arousal hit him like a prize fighter.\n\n\"Here, look,\" she said, and unashamedly jerked down the front of her shorts and panties, revealing a patch of curls on her mound. \"I've been letting it grow. Perfect timing, huh?\"\n\nHoly fucking shit, he thought. Time seemed to grind to a halt as she ran her fingers through the dark curls. He only realized he was staring with laser intensity when she let go of her shorts and they covered her again.\n\n\"Why?\" he asked, forcing his eyes back up to hers.\n\nShe grinned, and went back to twirling her razor. \"I've always thought you were hot, and hearing you liked it turned me on.\"\n\n\"Sheila would find out,\" he said, shaking his head.\n\n\"I'm not going to tell her. Are you?\"\n\n\"She'll find out,\" he reiterated.\n\n\"I'll tell you what,\" she said, and then hiked a thumb over her shoulder. \"I'm going to go shave. Come watch if you want. It's up to you.\"\n\nShe stood up and headed for the hall, swaying her tight young ass, and letting her razor dangle sexily from between a finger and thumb at her side. She didn't look back even when she opened the bathroom door and turned on the light. She left the door open, and he could see her shadow playing on the wall.\n\nHis heart racing and his cock throbbing, he thought, Don't do it. Don't do it. The big head that was protesting was quickly losing control &mdash; and blood flow &mdash; to the smaller one below. He took a step, and then another. Before he knew it, he was standing outside the bathroom door.\n\nShe hadn't been wasting time. Even though he had hesitated for only a few seconds, she'd already removed her shoes, top, and bra by the time he stepped into the door. Like her sister, she had small breasts, with dark, skinny ovals surrounding visibly stiff nipples. They looked incredible. She grinned and moaned when she saw him in the doorway.\n\nThen she shoved down her shorts and panties, fully revealing the short curls on her mound. When she crooked her finger to beckon him, he was like a puppet on a string.\n\n\"Here, feel,\" she said, taking hold of his wrist and guiding it to her thigh. \"I didn't shave my legs today.\" She tugged his wrist higher, to her mound, \"And I haven't shaved my pussy in almost two months.\"\n\nHe couldn't resist running his fingers through the nest of dark hair as he imagined her shaving it off for him. Sheila never let her hair grow much at all, so her sister far better served his fantasy. Even though Jamie wasn't much younger than her sister, she was younger. Fresh out of high school and barely legal, Jamie was pushing another button as well.\n\nJason was so engrossed in his thoughts and running his fingers through her curls that he only noticed her other hand moving when she squeezed his cock through his shorts. He groaned from the touch.\n\n\"Mmm,\" she moaned as she explored his erection. \"Can I see?\" she asked, and then pulled down on his shorts without waiting for an answer.\n\nJamie soon had his naked cock in her soft hand. Between her other hand, flexible legs, and dexterous toes, she managed to drop his shorts to his ankles. Caught up in the whirlwind, Jason let his hand slide lower, and wriggled a finger into her cleft. She was soaking wet.\n\nA hand tugged upward on his shirt and she said, \"Take this off, too.\"\n\nHe was well beyond the point of no return, and complied without a second thought.\n\nJamie smiled and moaned at the sight of his revealed chest. \"You're lucky. I'd pretty much decided I didn't like this,\" she said, and ran her hand over her mound. \"One more day, and I'd have already shaved it off.\"\n\nHer fingers uncurled from around his cock, and she moved toward the tub. He unconsciously stepped out of his shorts &mdash; his eyes fixed on her. She bent over, showing off her incredible ass and a nice glimpse of her folds, hidden by a nest of hair he'd soon get to watch her shave. She turned on the water and adjusted the temperature while letting her ass sway slowly back and forth.\n\nOnce the water reached a comfortable temperature, she straightened, running her hands up her body. She glanced back over her shoulder and said, \"You can touch yourself if you want. Just don't come. At least not yet.\"\n\nAs if it had been waiting for permission, his cock began to urgently ache. He wrapped a hand around it to quell the throbbing.\n\nJamie moaned and stepped into the tub. She had barely bent her knees to sit down when another kink demanded he voice it.\n\n\"Can you turn on the shower?\" he asked.\n\nShe offered a crooked grin and said, \"That gets you off, too?\"\n\nHe nodded.\n\nHer dexterous toes once again came into play. She pulled the valve with them, and water began to cascade over her body. She arched her back, letting the spray bounce off her breasts, and then slowly turned. He stroked his cock, watching the water droplets meander down her body and bounce every which way.\n\nOnce she completed her pirouette, she offered another devilish grin and reached for her sister's body wash in the shower caddy. She turned away from the spray, built a heavy lather in her hands, and began to rub it into her breasts.\n\nIt was sweet torment watching her lather up her body, even as she watched him slowly stroke his hand over his erection.\n\n\"I'm guessing Sheila won't do this for you either?\" Jamie asked.\n\n\"Sort of. If we're in the shower together,\" he answered, his eyes roving over her.\n\n\"What else? Has she ever let you fuck her ass?\"\n\nHe shook his head. He hadn't dared bring that up, and after the way she had reacted to his shaving fetish, he knew he never would.\n\n\"Does she let you raw dog her?\" she asked while building up another mound of lather in her hands.\n\nHe answered with another shake of his head. Sheila wasn't on birth control, so he wouldn't have wanted to do that even if she let him.\n\nJamie turned, letting the water wash the suds off the front of her body while lathering up her ass. \"Come in her mouth?\"\n\n\"Sometimes,\" he answered.\n\n\"Does she swallow?\"\n\n\"Never.\"\n\n\"Come in her face?\"\n\nHe drew in a deep breath, because she'd hit another trigger. Sheila had let him come on her tits a couple of times, but the one time an errant spurt had hit her chin, she'd gone ballistic.\n\nHer questions made him realize he'd been willfully ignoring a lot of warning signs. Though Sheila enjoyed sex, she was far from adventurous &mdash; and more than a little selfish. In retrospect, it was no real surprise that hinting he wanted to watch her shave had caused such a reaction.\n\nHe shook his head, in answer to her question.\n\nJamie moaned, still posing and lathering her body. \"I'd have to think about anal, because that cock is big, but I'd at least try it for you. I'd let you raw dog me, come in my pussy, come in my mouth, and shoot it all over my face. I'd be your little cum dumpster, however and whenever you wanted it.\"\n\nJason groaned as his cock throbbed hard from her dirty talk. He oozed a drop of pre-cum, and she didn't miss it. She beckoned him nearer, and squatted as he approached. She leaned out of the tub, took his cock in hand, and gathered up the clear droplet on her tongue with a moan.\n\nShe looked up at him and asked, \"Ready to watch me shave?\"\n\nHe nodded emphatically and said, \"Yeah.\"\n\nShe pointed to her razor and shaving foam, which were sitting on the sink next to her purse. He turned to grab them, and found her adjusting the shower head to spray as straight down as it would go, when he looked back. She then moved to the end of the tub, out of the shower.\n\nJamie smeared shaving foam over her left leg, completely covering it from ankle to thigh in white cream. She then picked up her razor, gave it a little spin, and held it under the shower for a moment. Jason found himself holding his breath as she brought the razor to her leg.\n\nShe was absolutely putting on a show. He had caught glimpses of Sheila shaving through the gap in the shower curtain before, and knew she was quick and methodical about it. Jamie was drawing the razor slowly over her skin, glancing at him at the end of every stroke. Jason's cock throbbed hard in his hand as he watched his fantasy finally fulfilled in spectacular fashion.\n\nIt was absolutely fascinating to watch her bend, twist, and lift her leg into all sorts of crazy position, seeking out every little bit of stubble. The thick coating of foam vanished in careful stripes, leaving behind irregular bead trails on her gorgeous legs.\n\nShe stepped back into the shower when she was finished, washing away the remnants of foam. She continued to perform for him, sliding her hands over her skin, and arching her back. Once it was clean, she planted her foot on the edge of the tub.\n\n\"Feel,\" she said.\n\nHe let his hand glide over her skin, and a shiver ran through him. He could feel her trembling as well.\n\n\"So soft and smooth, isn't it?\"\n\n\"Yeah,\" he answered in a husky voice. His light touch went all the way up to her inner thigh &mdash; making her quiver again &mdash; and then back down to her ankle.\n\nJamie dropped her foot back into the tub and bent over, taking hold of the base of his cock. She gave the tip a kissing suckle, gathering up the pre-cum he'd leaked as he watched.\n\n\"One down,\" she said, and winked at him before standing up straight again.\n\nThe repeat performance was just as slow and sensual as the first. Once again, she asked him to feel the results, but tugged his hand upward when he completed the journey back to her ankle.\n\nShe settled his hand over her mound and asked, \"Ready for this?\"\n\n\"So fucking ready.\"\n\n\"Tell me to.\"\n\n\"Shave your pussy for me.\"\n\nJamie moaned, shuddered, and then bent over for another taste of pre-cum. She turned into the shower immediately afterward, wetting the curls on her mound. After letting him have a good look at the glimmering, dripping hair, she reached for her shaving foam.\n\nShe smeared the lather in a thick layer over her mound, leaving only little pepper-like specks where her hair poked through. Then she took up her razor, squatted down, and leaned against the wall of the shower. Jason stepped up right to the edge of the tub, and then knelt down for an even better view.\n\nThe razor settled just above the apex of her folds, and slowly glided upward, bisecting the foam between her legs. A second stroke through the same stripe left behind bare skin. She moved to the right, repeating the process, and then to the left of the bare stripe in the middle. When she cleared the last stripe, and the last bit of stubble on her mound, he felt a dribble of pre-cum running down his knuckle.\n\nShe tugged on her nether lips, holding them aside, and went to work on the crease of her thigh. Jason had never seen anything so sexy in his life. Despite barely tugging his foreskin over the hard core, he felt the first tickles of a hot itch in his cock that signaled an approaching orgasm. He slowed down, only giving in when the demanding ache forced him to.\n\nJamie shaved the crease of her other thigh, and then went into a sort of slow dance. She twisted, turned, splayed her legs, and manipulated her crinkled folds, stripping away the foam and the hair it covered. After a careful inspection with her fingers, she braced her hand behind her and stood.\n\nHe watched her wash her pussy clean, and she didn't have to ask him to feel the results when she turned back toward him.\n\n\"Was it everything you imagined,\" she asked as he stroked his fingers over her baby-smooth pussy.\n\n\"More,\" he half growled.\n\nShe pulled him into a brief, hungry kiss while his fingers were still exploring her. When their lips parted, only a few scant centimeters separated them. He could feel her warm breath on his lips when she said, \"Now I want you to come all over my face.\" \n\nHe let his fingers glide over her mound as she knelt, getting one last feel of her smooth skin. Her knees had barely settled when she took his cock in hand, and engulfed it in her mouth.\n\nJason growled, feeling the hot itch surge and spread almost immediately. She sucked him hard, curling her tongue around his shaft, and pumped her hand quickly at the base. She was far more enthusiastic than her sister, and Sheila had never gone on her knees for him. She would only suck him when he was prone in bed. It all combined with the fulfillment of his fantasy to push him to the edge in an embarrassingly short time.\n\n\"Fuck. Close,\" he warned her in clipped grunts.\n\nShe let him pop from her lips long enough to say, \"Do it. Come all over my face. I'm your little cum slut. Give it to me.\"\n\nJason growled loud, long, and low when she sucked him back into her mouth again. Her wet hair danced from the fast bobbing of her head, slapping against her skin. She moaned around him, adding yet another dimension to the pleasure. After only a few sucks, he was on the cusp.\n\n\"Gonna come,\" he growled.\n\nJamie let him slip from her lips and stroked his cock fast, aiming it right at her gorgeous face. \"Do it. I want that cum all over my face. Give it to me. Shoot it all over me. In my mouth. On my face. Come for me.\"\n\nHe let out an explosive grunt as his cum surged up. Jamie squealed when the first eruption spattered on her upper lip, dripping into her wide-open mouth. It also decorated her cheek and the tip of her nose. The next covered her closed left eye, and spattered into her hairline. Over and over again he pulsed, glazing her face with trails of semen, until he began to dribble into her mouth.\n\nJamie let him go, and he snapped out a hand to the towel rack to balance on his wobbly knees. She moaned and licked her cum-spattered lips, letting him see the cream pooled in her mouth afterward.\n\n\"Get my phone and take a picture so I can see,\" she said.\n\nLight-headed and weak, he stumbled over to the sink and found her phone in her purse.\n\n\"Hurry. Tell me when you're ready,\" she said.\n\nHe fumbled to start the camera with uncoordinated fingers, and then framed her face. \"O-okay,\" he said between hard breaths.\n\nJamie opened her mouth wide, showing off the cum there, and he snapped the picture. His sensitive cock protested mightily at the sexy image.\n\n\"Got it?\"\n\n\"Uh huh.\"\n\nShe wiggled her tongue to attract his attention, and then made a show of swallowing. She opened her mouth to show his cream had slid down her throat, and then stood up. Jamie squealed when she stepped into the water.\n\n\"Oh god! It's getting cold,\" she exclaimed while hurriedly washing the cum off her face. As soon as she felt she was clean, she slapped down the valve to turn off the shower, and then shut off the taps. \n\nShe was still slicking the cold water off her skin when she said, \"Show me.\"\n\nJason brought up the picture he'd just taken, and turned the phone so she could see it.\n\n\"Oh wow,\" she said, and laughed. \"That was one big load. It's all in my hair. Everywhere. Did you like that?\"\n\n\"So fucking hot,\" he said, and then sat down hard on the toilet, because his legs were still wobbly.\n\nJamie stepped out of the shower and toweled herself dry with the same slow sensuality as her shaving performance. She dropped the towel when she was done, letting it pool unceremoniously on the floor. Then she ran her hands over her freshly shaven mound.\n\n\"Want to give this a test drive?\"\n\nThough he shuddered from the sight, and the thought of moving, he nodded.",
        "She offered a hand, and he used it to steady himself as he lurched to his feet. She sought his lips, kissed him hard, and then said, \"Lick my bald little pussy.\"\n\nJamie moved to the edge of the counter, hopped up, and leaned back, spreading her legs wide. Though the angle was awkward, he bent into the V of her legs. The scent of her arousal mingled with faint hints of the shaving foam, summoning up vivid images of watching her shave. When he kissed the smooth creases of her thighs, he could taste a slight tang of the shaving cream as well.\n\n\"Please,\" she begged, settling her hands on the back of his head and pulling him to her pussy.\n\nHe wiggled his tongue between her crinkled folds, and moaned from the taste of her on his tongue. It was yet another wonderful change from her sister. Sheila had never wanted to do anything unless they were in the bed. Eating Jamie in the bathroom was an exciting change he hadn't experienced in the months he'd been dating her sister.\n\n\"Does my pussy taste good?\"\n\n\"Uh huh,\" he grunted, while still lapping up her nectar.\n\n\"Shaved all smooth for you. Just for you. Lick it. Make me come all over your face.\"\n\nHis weakness evaporated as he tongued her, but the lightheadedness remained. Though they looked much the same, Jamie's pussy tasted so much sweeter than her sister's. Her folds felt different beneath his tongue. Her whimpers and moans were higher pitched &mdash; louder. Intoxicated by it all, he devoured her.\n\n\"Yes. Oh my god,\" she whimpered. \"So good. Just like that. Lick it. Lick my pussy. Faster. Fuck!\"\n\nJason lapped, probed, sucked her labia, tickled her clit, and lifted her hood to assault the naked pleasure button. Her fingers knitted into her hair, and pressed down harder. Her sounds of pleasure grew even louder.\n\n\"Do it. Lick my pussy. All naked for you. Make me come. Do it. Fucking eat me. Make me come. Make me fucking come,\" she cried.\n\nHe went after her clit with increased vigor, and she squealed, the sound filling the small room.\n\n\"Oh my god. So good. Licking my pussy so good.\" She growled when he sucked her clit hard, tickling it with his tongue. \"Right there. Right there. Fuck! Yes!\"\n\nJason sucked harder, drawing her folds into his lips as well. He shook his head back and forth like a dog with a chew toy, and she screamed. Her exclamations grew incoherent, and nearly ear-piercing in both pitch and volume. She slipped precariously close to the edge as she writhed, so he grabbed her legs and draped them over his shoulders.\n\nHe heard the beginning of a pained-sounding wail before her thighs clamped around his ears and her nails dug into his scalp.\n\nJamie bucked and thrashed, wrenching his neck this way and that in the throes of her orgasm. Though he gamely chased her pussy, he was barely able to get in a quick lap or two before another buck of her hips bounced him away. Bottles tumbled off the counter to the floor, knocked down by a flailing hand that she was trying to balance with.\n\nShe pushed on his head with climax-fueled strength, and he relented. His back was beginning to ache, and the edge of the counter was biting into his palms. A weepy whimper escaped her when he pulled away. She slipped almost immediately, and he caught her weight on the legs still draped over his shoulders. With some difficulty, he managed to push her safely back up onto the counter.\n\nJamie latched onto the sink faucet in a white-knuckled grip, still gasping and yelping from her orgasm. Ever so slowly, she settled down from her peak, and leaned against the wall, panting for breath.\n\nJason stood in front of her, wearing a wide, almost smug grin as he watched her twitch and quiver through the aftershocks of her orgasm.\n\n\"Oh my... Fucking god,\" she groaned just before her eyelids fluttered open. She chuckled and her shoulders slumped.\n\nHe licked his lips and admired her afterglow. He was somewhat shocked to feel an uncomfortable tightening between his legs as fresh blood filled his sensitive member.\n\nThat process hastened when she beckoned him with a crooked finger. Their kiss was brief and broken by her gasps. Then she started lapping her pussy juice from his face. Sheila would barely kiss him after he'd gone down on her, let alone purposely taste her own pussy. Though it felt numb, he'd risen to half mast by the time she finished with a deeply satisfied moan.\n\nSpurred on by her, he asked, \"Does your pussy taste good?\"\n\n\"Mmm hmm. You like me licking all my pussy juice off your face?\"\n\n\"Oh yeah.\"\n\nShe kissed him again, and one of her hands slipped between his legs. She made a surprised little sound upon finding him half hard.\n\n\"I guess you did like it,\" she said while teasing him with her fingertips. She pushed him back with her other hand, and slipped off the counter. She dropped to her knees as soon as her feet hit the floor.\n\nJason looked down at her, again incredibly turned on by her kneeling to tongue his cock. She looked up into his eyes, letting her tongue glide over his hardening member.\n\n\"Make it hard for me,\" she said and gave him another long lick. \"I want you to fuck me and come inside me.\"\n\n\"You're on birth control, right?\" he asked, and then groaned when she gave the swelling head a suck.\n\n\"Uh huh. You want to slide that big cock in my tight little, freshly shaven pussy don't you?\"\n\n\"God, yeah.\"\n\n\"You want to fuck me hard, and make me come all over your cock, then explode inside me?\"\n\nAlmost fully hard, he answered, \"Yes.\"\n\n\"Fill me full of hot cum?\"\n\n\"Fuck yes.\"\n\nShe stopped tonguing and gave him one long, slow, deep suck. She croaked around him when he hit her throat, and then pulled back quickly, trailing strands of saliva and a dribble that ended up hanging off her chin.\n\nAfter a swallow, she looked up at him with wide eyes and said, \"Then do it.\"\n\nJamie stood up and quickly turned around. She put her hands on the counter and bent over. His cock nestled nicely in the crack of her ass as she pushed him backward until she was fully bent in front of him.\n\nThe mirror provided an incredible view of her face and tits. A glance down let him admire her ass as he stroked it with his hands.\n\nTheir eyes locked in the mirror and she said, \"Give it to me.\"\n\nHe wriggled the head of his cock between her folds, which were still slippery from his tongue and her wetness, and poised himself at the entrance of her canal.\n\n\"Give it to me. I need that cock inside me.\"\n\nThey both groaned as he penetrated her. He had the added pleasure of watching her eyes widen, and then pinch close as he sank into her.\n\nIt had been forever since he'd been naked inside a pussy, and Jamie's was incredible. She was wonderfully tight, and silky smooth inside. Having already reached orgasm on his tongue not long before, she was opened up enough for him to nearly bury his cock on the first thrust.\n\nShe moaned as he withdrew, and then yelped when he thrust back inside her again.\n\n\"Oh, that feels so fucking good,\" she said in a tight, high-pitched voice as he rocked his hips in a slow rhythm.\n\n\"You're so fucking tight, and wet.\"\n\n\"Mmm hmm. It feels so much better than my bitch sister's, doesn't it? No condom, so you can feel how wet I am.\"\n\nThough he did feel a brief flash of guilt for cheating on Sheila when her sister mentioned it, it couldn't compete with how good she felt, or the truth of her words.\n\n\"Yes. Fucking incredible,\" he answered.\n\n\"Do it. Fuck me.\"\n\nJason watched her in the mirror, loving the changes in her expression whenever he filled her full of cock. He glanced down for a moment, and the sight of his dick completely covered in her wetness was just as exciting. He put a hand on her shoulders and pushed down, prompting her to drop down on her elbows. She cried out when he hit her even deeper. He growled from being able to see his cock vanishing inside her, in the slightly altered position.\n\n\"Yes. Fuck me like your dirty little whore,\" she exclaimed.\n\nHe kicked up the pace, slamming into her depths for a few seconds. In the mirror, her eyes widened, and a flush began to spread through her face. He finished with a final, hard thrust, and held himself buried inside her. She sucked in a great gasp and looked at him in the mirror with wide eyes.\n\nHe relaxed, letting the tip slide out of her deepest depths, and decided to try something he'd always wanted to give a shot. He grabbed her leg behind the knee, and began to lift it. Jamie let out a surprised &mdash; but delighted &mdash; moan, and helped him along. She straightened when he slipped an arm around her chest, just below her breasts, and then she planted her foot on the counter.\n\nJason looked over her shoulder so he could see her in the mirror, and then filled his hand with her breast. The other hand he moved to her clit &mdash; finding the access easy and comfortable. Thrusting up into her was a little more awkward, but he managed.\n\nHer gaze fixed on his, and the corners of her wide-open mouth turned up into a smile convincingly suggested she was enjoying it.\n\n\"Pinch my nipple,\" she demanded. When he did, she immediately followed up with, \"Harder.\"\n\nShe yelped as he squeezed the erect bud hard, and the fingers between her legs thrummed over her clit. The flush in her face deepened. Her whimpers grew louder.\n\n\"Come for me,\" he growled into her ear.\n\n\"God yes,\" she cried in response.\n\nThe sight was exquisite. Her quivering breasts, tight, flushed features, and the sight of his cock thrusting up into her drove him to greater efforts. Her head began to dip forward, and then rapidly lash back up. As incredible as it was, he had to lift up onto the balls of his feet, and the position was taking its toll.\n\nWhen his thrusts slowed, she once again trapped his gaze in hers in the mirror. \"I'm getting so close. Take me. Fuck me hard,\" she demanded.\n\nThey moved in perfect, unspoken coordination. Jason released her leg, and she dropped it back to the floor. His cock slipped out of her in the process, but he would remedy that soon enough. She bent over, leaning on one elbow, and he stabbed his cock back into her saturated pussy, drawing a scream from her.\n\nThen they both reached for her clit at the same time.\n\n\"Just fuck me. Fuck me hard,\" she said as her fingers flashed over her bud.\n\nJason dug his fingers into her hips and did just that. He pulled back on her hips ever time he thrust, driving into her balls deep. Their bodies collided with loud smacks, sending ripples through her tight ass. Her breasts jiggled forward and back as he rocked her body.\n\n\"So close. Don't stop,\" she cried in explosive bursts. \"Do it. Fuck me. Fuck me. Fuck meee!\"\n\nHer words trailed off into a squeal, followed by yelps every time his cock dove into her deepest recesses. His grunts of exertion joined the symphony, slowly gaining a growling quality as he fought against his own rising pleasure.\n\nSuddenly, her cries jumped an octave in pitch, and he saw her face tight with beautiful agony. Her muscles contracted, and not a sound passed her lips for a few hard thrusts. Then she screeched in release.\n\nA loud, barking growl escaped him as her walls constricted around him. She wailed and screamed &mdash; the hand that had previously been between her legs holding on to the edge of the counter in a death grip. The other was curled around the edge of the sink.\n\n\"Coming for me?\" he grunted.\n\n\"Y-y-y-yesss!\" she screamed.\n\nHe kept the pressure on, driving her climax to new heights, and rushing toward his own. Then a sudden lurch of her hips caused him to slip free, and jam his cock into the crack of her ass. He released her hip with his right hand and grabbed his erection, planning to slide back inside her, but her hand, which had previously gripped the counter, found a new home protecting her climaxing pussy.\n\nShe breathed hard, her body regularly shaken by quakes. He gave up on getting back inside her, and instead squeezed her ass, which drew out an even stronger spasm and a pitiful whimper.\n\nHer trembles faded into shivers and her whimpers quieted, until at last she muttered, \"Oh my fucking god.\" The words were distorted by her cheek resting on the counter, and he chuckled.\n\nShe slid an arm under her head a few seconds later, and moaned while looking at him in the mirror. When she saw he was still hard and throbbing, she moaned again.\n\nHe settled in behind her, and let his bobbing erection tap her ass. \"Ready for more?\"\n\nShe groaned and said, \"Give me just another second,\" while a shiver rippled through her. \"Ohh, you made me come so hard. Were you close?\"\n\n\"Sort of,\" he answered, keeping his cock pressed against her.\n\nShe chuckled. \"Sorry.\"\n\n\"It's cool.\"\n\n\"But I want it. I want to feel you come deep inside me.\" She rested her forehead on the counter, freeing her to put her arms behind her back. She brought her wrists almost together and said, \"Give it to me. Give me what my bitch sister won't let you give her. Fuck me and fill my pussy up.\"\n\nThough he'd never done it before, he'd seen enough porn to know what she wanted. She grunted as his cock slid back inside her. Then he grabbed her wrists and pulled.\n\nShe lifted up from the counter, hovering over it in his grip, and said, \"Give it to me.\"\n\nHe started slowly, finding a rhythm, because he didn't want to slip out of her and have to let go of her wrists. It was too exciting being in control after so long abiding by Sheila's less than adventurous lovemaking.\n\n\"Do it. Take me. Use my slutty pussy. Fill me with cum,\" she encouraged him in a voice that was half pleading, half demanding.\n\nConfident that he wasn't going to slip out of her, he picked up the pace. The hot itch in his cock, which had faded while he watched her climax, quickly reasserted itself.\n\n\"Yes. Do it. Fuck me. Come in me. I want it. Give it to me,\" she continued, her voice cracking as he increased the power of his thrusts.\n\n\"You want it?\" he growled.\n\n\"Yes! Come! Come in my pussy!\"\n\nOnce again the slaps of colliding flesh echoed back from the nearby walls. Her breasts bounced erratically, forward and back, side to side, and even clapping together. Her hair danced and her ass jiggled from the shock of his thrusts. Though his climax was building, it wasn't doing so as quickly as he expected. Having blasted her face so recently, he was numb enough to have an extra measure of stamina.\n\n\"Oh! Oh! Fill me up! Come in me!\" Jamie cried.\n\nHe was past words. The torturously slow approach of his climax had him slamming into her like an animal, and making sounds to match.\n\nJamie screamed, her voice warbling from him ravaging her body, \"Oh! Ah! Oh! P-please. Come in... C-come... Ohmigod!\"\n\nJason growled and snarled, teetering on the cusp, until he at last felt that sweet second of complete numbness, followed by a crash of intense sensation. He roared like a lion as he blasted cum inside her.\n\nShe screamed a second later as she came with him.\n\nHolding tight onto her wrists, he bucked his hips, rocking her forward, and emptied every drop of cum he had into her clenched canal. Jamie wailed and whimpered from her own orgasm. It was so intense that he was barely cognizant of how he ended up bent over her, with his head resting on her back. His softening cock was pressed against her ass. Their heavy breathing was joined by irregular patters of mingled cum dripping from her to the tile below.\n\nJason summoned up the strength to stand on his wobbling knees, stumble back to the wall, and slide down it. He sat on the floor, trying to catch his breath, in the perfect place to watch his cum drip out of her pussy.\n\nJamie was the first to recover enough to speak. \"God, I hope there's hot water again,\" she muttered.\n\nThey both chuckled.\n\n****\n\nThree days later, Jason closed the door behind Sheila. She was leaving with the last of her things from his apartment.\n\nShe had texted him the next day, but from the moment they went out that afternoon, he knew it wasn't going to work. She was obviously out of sorts. He was still irritated about her airing their dirty laundry. After fucking her sister, the thought of boring sex with her was almost out of the question.\n\nShe broke it off the next day, saving him the trouble.\n\nStrangely relieved, despite the end of a months long relationship, he thought about hitting a bar and getting back in the game. Then someone knocked on his door.\n\nHe couldn't suppress the grin on his face when he saw Jamie standing outside.\n\nShe twitched her eyebrows and smiled back. He let her inside, and she crushed her lips to his before the door even closed.\n\nHer eyes were glimmering with mischief when their lips parted. \"I know my dumbass sister, so I had to get my foot in the door before some other girl jumped on that dick.\"\n\n\"She only left about two minutes ago.\"\n\n\"I know. I was watching from the Starbucks down the street,\" Jamie said, and then scrunched up her nose in the cutest way. \n\n\"Guess what?\"\n\n\"What?\"\n\n\"I haven't shaved my pussy since the other night.\"\n\nHe let out a growl and kissed her &mdash; hard.\n\n\"Mmm,\" she moaned when they broke from the kiss. \"And...\" she reached into her purse and pulled out a pair of handcuffs.\n\nThey were off to the bathroom a second later.\n\n****\n\nHope you enjoyed this kinky little tale. Do take a moment to drop a coin in my hat by casting a vote. Comments and favorites are most welcome, as always. They help increase the visibility of the story, which generates even more feedback, which is my writing fuel."
    ],
    "authorname": "RejectReality",
    "tags": [
        "shaving kink",
        "shower",
        "facial",
        "creampie",
        "girlfriends sister",
        "cheat",
        "voyeur",
        "exhibitionist",
        "dirty talk"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/smooth-operator-1"
}