{
    "title": "Play Testers Wanted Pt. 07",
    "pages": [
        "Play Testers Wanted: Part 7\n\nAll characters are 18 years old or older. 46,000 words long. It is a bit of an adventure to be sure. If the length is too much perhaps read it in segments. The time portal has sent our hero back in time but where and when. An ancient evil on a world coursing with darkness. What's an adventurer to do? Grab all the X.P. He can and level up like a champ, that's what!\n\n*\n\nTime is On My Side:\n\nI woke in the middle of the smoldering crater. I was naked and pissed off. Try as I might I couldn't remember much of my passage through the portal. I was tumbling ass over elbows and then nothing. I stood and looked around. My surroundings were quite otherworldly, and my gut told me that this was neither ancient Latveria nor mysterious Wakanda. So, where the hell was I? I waited patiently as the first of seven moons began rising.\n\n\"Definitely... not Earth.\" I muttered as the realization of my situation became abundantly clear. \"Need to fix this naked situation.\" I mumbled as I walked out of the crater. I pulled down my HUD and nearly screamed in shock. \"What the holy fucking hell is going on?!\" I shrieked.\n\nMost of my possessions were greyed out. I had access to only a scant few of my belongings. This had to be Doom's doings. He rigged the gate somehow. He and his crew had something that sent them to the right location and year. I didn't have it and I ended up here, wherever here was. I also guessed that the lack of that device left me in the dire situation I was in. At least I still had all my skills and abilities. The only clothing I had was the S.H.I.E.L.D. uniform, and a new garment marked dark robes. I activated the robes, pulled up the hood and decided my appearance might draw unwanted attention. I cloaked myself in shadows and felt the ease a bit alarming. It took no effort or energy to hide my passage. I didn't trust anything at this point especially something as basic as using my powers.\n\n\"That's damn strange.\" I growled still pissed at my unavailable equipment. \"First my lightsaber and now this shit!\" I cursed. \"Let's see if I am sitting on top or near a power source. Maybe that is why I am not burning points to maintain my shadows.\" I ranted trying not to lose my temper.\n\nI closed my eyes and reached out and felt the pulse of raw power. It was far away, so it didn't make sense that I'd be drawing on it from this distance. I stopped and decided to make sure I could access any and all my abilities. I went through them in alphabetical order. I was relieved to see that I could do them. The unnerving part was that I barely scratched either my stamina or magic pool to perform that many abilities. If I could do that, then others could it as well. I was going to have to choose my battles wisely. I checked my quests and I couldn't help but laugh when I saw the only one currently active.\n\n'Time on my hands.'\n\n\"No shit.\" I grumbled as I headed in the direction of the power source for lack of anything else to do for the moment. \n\nI began singing old songs to pass the time and comfort myself. As I walked, I looked at my environment. There was plant life in abundance and like Ossus they were utterly alien. Where I passed small animals would scurry and seek shelter. I had become the predator. My anger washed over the landscape heralding my approach and signaling my departure. The sky darkened and I felt a second rush of power as my vampiric blood pulsed and called out to be fed. I had no weapons I could use save my bare hands and of course my fangs. If I was to survive long enough to discover a way off this world and back to Earth. I needed to feed.\n\nI sensed it at the edge of my being. It was out hunting now that night had fallen. I paused and reached out to touch its mind. Unlike the Exomorph, this beast was starved and in a near rage to feed. Its empty belly made it dangerous and impatient. The wind suddenly shifted, and it caught my scent. I prepared to defend myself as it came quietly to find me waiting. In form it was heavily armored with a spiky exoskeleton, short stubby legs, and a wicked looking tail. It charged my position and I unleashed a single blast of Force lightning into it. The ebony lightning lifted it off the ground and upended it. I watched it's helpless form with its six legs that it wiggled in the air. I heard its twin hearts pounding in terror and racing in rage. I plunged my hand through the thin skin of its underbelly. I ripped out one of its hearts and drank straight from it.\n\n\"So much rage.\" I gasped surprised at my own actions. \"Rage comes easily here. Power and rage in great abundance.\"\n\nI left the remains of the beast for others to scavenge. With lips stained with fresh blood I raced through the forest towards the source of power I had detected. I stopped when I reached the edge of the cliff. The land beyond was dominated by scrub grass, queer looking fungi, and a graveyard of wrecked starships. That is where the power was coming from. I glanced for a way down and found a path half a mile from my current location. Intoxicated by the fresh kill still working its way through my system I laughed as I launched my body off the side of the cliff. The shield formed around me with barely a thought. The ground rushed up as I plummeted towards the ground. A dozen yards above the floor of the land beyond I shoved downward with the Force and slowed my body so that it floated like a leaf from a tree. My feet touched the dry earth and I resumed my journey for my destination.\n\nI crossed the enormous distance in just a few hours. I felt like a grain of sand compared to the dead hulks before me. The engines of these once great ships were ten stories tall and just as wide. I couldn't tell what brought these ships down, but they had all gathered here to die. My HUD chimed and when I checked a new quest was available, it was entitled Rakata Requiem. I took up shelter within the nearest derelict and removed the holocron from my inventory. The cube rose up on its own and activated. The image of strange hammer headed alien hovered over the cube. It spoke in its native language and when I didn't respond it switched to English.\n\n\"Pitiful slave, you don't even know the language of your betters.\" It scowled at me displaying his razor-sharp shark teeth.\n\n\"Forgive me,\" I replied deciding subservience was the only way of getting anything out of this gate keeper. \"Your race has been dead for centuries and passed into legend.\"\n\n\"Fear not slave, I am a patient Master and I will instruct you in my language so that you can raise yourself up from nothing.\" He replied grinning, I think.\n\n\"Master is kind.\" I stated and smiled back.\n\nIt would reveal nothing until I had a basic working knowledge of its alphabet and spoken language. I spent weeks under my Rakata Master's tutelage. When I wasn't practicing the Rakatan language I was searching the ship for supplies, tools, and a means of repairing the ship's power plant. Without power I was vulnerable. Enter Traci. She was about to double my learning burden. With her help I got a crash course in engineering. She dumbed it down and to my surprise I understood it. Each day was a lesson on language and how to read and interpret schematics. Eight weeks into my exile I powered up the first small power plant that wasn't beyond all hope. \n\nMy next self-appointed task was to create a helper. During my wanderings I found numerous disabled droids in various stages of destruction. While my Master taught me language, I erected a pile of metallic corpses. When I had enough parts I began taking them apart. I sorted them by function and tossed the obvious damaged bits away. All I needed was a single droid at the end of this mission. By the time I had stacks of individual parts I had also collected and put together a tool kit. I had a nice selection of tools that I needed to take apart and now assemble a companion. I laid out the skeleton first and worked from there. There were flashes of the Numenor robots in my head and I used that as a plan for my creation. I charged the droids power cell from the power plant I had repaired. As it charged, I began assembling the torso. It was a hybrid of a dozen different manufacturers and droid types. Traci walked me through the work and never failed to explain what to do but also why I was doing it. The arms and legs followed suit over the next few days. The head took nearly as long as the torso. I was particular about the sensors it would possess as well as its processing power. I managed to create a rather impressive neural relay that was scattered within the head and chest of the droid. So that even if the head were damaged it had a backup protected by the torso's armor. I was equally proud of the sensor array which reminded me of a cluster of spider's eyes that gleamed a bright red in the dim lighting.\n\n\"Well?\" I asked Traci as she scanned the inactive droid and declared it fully functional. I placed the power pack into the torso and closed it.\n\n\"Here goes nothing,\" Traci declared as she cloned herself into the main memory core of my creation.\n\nThe limbs of the droid twitched a few times as the eyes lit up. It sat up, looked around, and announced that it was fully functional in Traci's modulated voice. She held up a hand and wiggled her fingers. I helped her to her feet and she eagerly awaited orders. Now that she was up and running, I was ready for the next phase. We went about repairing some of the ships systems and computer network. I learned how to 'slice' the ship's security protocols. Thanks to the holocron I was able to read the ship's coding language and bypass it, eventually. While I tried different passwords, it hit me that the current races were using the Rakatan alphabet as their own. They weren't completely forgotten after all. \n\nTraci did the heavy lifting and I left her on autonomous mode. I figured she knew how to attack the repairs far better than I did. My third month was the most rewarding to date. I was able to finally slice the inventory of the ship and found where the cargo was being held and what it carried. I levitated the holocron with me and as I worked passed frozen bulkheads, and ruptured blast doors. It took three days to make my way from the power plant to the cargo hold. It was worse off than I feared, but not without hope. I scavenged to my heart's content and found the makings of a ground vehicle. There were three repulsor engines, two were small and one was rather large.\n\nI made my second base camp within the stadium sized cargo hold. I piled things in groups of weapons, repair and tools, and raw supplies. The most amazing find were the bolts of what the manufacturer called solar cloth. Imagine something as thin and smooth as silk and as tough as adamantium. It could collect and store solar energy and release that energy in a variety of ways. With it I had the means of making a solar sail. I imagined a floating catamaran soaring over the surface of this world to the nearest town or city. First, I had to discover whatever training the holocron held.\n\n\"You are ready to begin.\" The Rakatan declared later that week. \"Let us see what meager talents you possess.\"\n\nI began with levitation, Force push, and then moved onto Force lightning and my mastery of shadows and invisibility. I ended with manifesting other elements and waited for his reaction.\n\n\"Can you influence others?\" He asked and I nodded. \"Can you drain the life out of your victims?\"\n\n\"Not with the Force, no.\" I said and revealed my fangs.\n\n\"Good! Let me instruct you in the ancient art of life stealing.\" It informed me in a low chilling voice. \"Summon a beast and we will begin.\"\n\nI was hungry so it wasn't difficult for me to want to feed from some of the local wildlife. I reached out and felt the presence of what turned out to be a wild herd mammal. On Earth it would have been the equivalent of a cow or bull. Summoning it was simple. It lumbered into view and my Master guided me through my first attempt to extract the life stuff of the animal. My vampiric nature made it more natural than it would have been for others. I closed my eyes and felt the very life force of the animal. It was strong, healthy, and had it in abundance. I was told that there were several ways of initiating the contact so that the extraction could occur. I had to choose an emotion to inspire in my prey and the stronger the better. I could pick panic, rage, or even lust. Any strong emotion was a viable candidate. I didn't want the beast to suffer so I chose fear. \n\n\"Reach out and touch the life aura. Good! Now strike and make it swift!\" The hologram called out.\n\nI lashed out and inspired utter terror in the animal. It cried out once as its heart burst from the attack and I was only able to snatch a fraction of its life.\n\n\"Excellent! What did you learn?\" My Master asked.\n\n\"Quick kills give off little sustenance.\" I replied. I was already reaching out and summoning a second animal. \"Slow and steady is best for feeding.\"\n\n\"Show no remorse,\" He demanded. \"A time will come, and you face death, or you will feed to preserve yourself. Trust your instincts always.\"\n\n\"Yes... my Master.\" I whispered as the bull approached me. \"Sorry old fella.\"\n\nI tapped into my hunger and performed the slow kill. I chose fear again. It paralyzed him from the onset. He stood despite his desire to bolt and run. I worked the fear deeper and let it build naturally. The beast's aura became visible and the vapor like lines stretched to me as I fed. I could feel its heart pound faster and faster forcing the aura to glow brighter. It snorted as its eyes widened as panic transformed into unparalleled terror. All the while I drank in its life until I was sated. If I killed it early the Rakata would be angry. I let nature takes it course and it took three more minutes for the beast to give up and perish. The aura faded to nothing as the body crashed to the ground without a single mark on it. That was also a lesson. If I used it on a sentient it would appear as a death by natural causes.\n\n\"You will not feed on blood for a month straight as you experiment with other emotions.\" He ordered as the holocron went dark.\n\nTraci and I worked on designing the catamaran. The two smaller repulsor engines would help support and steer the craft. The larger engine would be for raw power and speed. There was a joy to ripping out metal struts and plates from already damaged parts of the ship. I levitated the pieces from where I had harvested them and transported them to the power plant room. By this time much of the machinery had been repaired and we had three power plants functioning. The key machinery available were automated laser welders. Robotic arms straightened out any dents while the lasers cut and joined the pieces together. I watched the skeleton take form as the six-cabin luxury yacht was born. I delved deeper to find nicer materials to decorate the captain's cabin. I moved from one wreck to another when I found recent footprints leading inside.\n\n\"Traci.\" I whispered over my commlink. \"We have company.\"\n\n\"Yes and no.\" She giggled. \"Yes, there is someone in the adjacent star ship. No, it isn't an enemy.\"\n\n\"Care to explain.\" I said as I walked into what had to have been a private star ship of a wealthy merchant or perhaps even nobility. \"Somebody has been busy in here.\"\n\n\"I have.\" Traci said as a rough skeletal figure lumbered into view. \"Hello. I have put together several workhorse drones to speed up scavenging and data collection. We aren't pretty but we are functional.\"\n\n\"Brilliant as always. Perhaps I should leave the ship building to you and focus on my training.\" I said and she agreed.\n\nI meditated and cleared the excess energy making me anxious. I sought out the peace of the light side to maintain my balance within the Force. I allowed myself the time to cry for the beast that I had killed so cruelly. It was clear to me that I was somewhere within the confines of the Star Wars galaxy, but where. My question was why. If the gate that Doom built was meant to send me back in time but not on Earth why was I here? Why wasn't I sent to the dark elf home world? That seemed like the logical destination unless another plot was being advanced. Was there a connection between the two? It didn't make any sense or did it. I reached out through the Force seeking just that answer.\n\n\"Ghost...\" the voice whispered.\n\nI tumbled backwards as the echo of the voice laughed at my fear. My thoughts had touched the heart of darkness. My knee jerk reaction was anger at being thrown off my game. It was time to create a strategy. Something was on this world and it was connected to the Earth somehow. I needed to find out how and stop it. I went to the holocron and addressed the gate keeper.\n\n\"Master.\" I called out but he didn't answer. \"Master!\" Nothing. I balled my hand into a fist and struck the exterior of the cube. \"Hey... asshole! Wake the fuck up!\"\n\nBerzap!\n\nI regained consciousness sometime later. A full-sized hologram of the Rakata glared down at me.\n\n\"Such disrespect!\" He snapped. \"What have I done to earn this?\"\n\n\"I am sorry. I needed to get your attention.\" I explained as I sat up.\n\n\"Well you have it. What was so dire you treated my receptacle in that brutish manner?\" He asked and I shared what I had experienced.\n\n\"You aren't ready.\" He declared.\n\n\"You know what this thing is.\" I stated as I stabbed an accusatory finger in his face. \"It went after your people didn't it. I thought so. I won't apologize for getting your attention, but I will for disrespecting you. For that, I am sorry.\"\n\n\"Good. You are learning our ways. Apology accepted.\" It said in a cool calm voice. \"We will speak again in one month's time.\"\n\nEach night I lured an animal to my location, picked a different emotion to inspire within it and drained every drop of its life force. I was a real vampire now. I took life directly from my prey. I wasn't idle during that month. I searched the graveyard and barely scratched the surface. I could spend years looking and find new treasures for my growing hoard. I attacked more and more sophisticated machines to take apart and cannibalize. I redesigned Traci's robotic limbs making them modular. She created a belt to carry those extra arms and attached them as necessary. I felt a great sense of accomplishment. To pass the time I had Traci display various sentient races in the Star Wars universe. I tried out a new form each day. The first races were the most humanoid. After a week or two I left that behind. I ventured into the near and non-human races. I was warned that some of them required atmospheric considerations. I had lost sense of time. After a month the holocron awoke and informed me it was time to push my skills to the next level. I carried it along the interior of the wrecks, and it pointed to an exposed portion of interior wall.\n\n\"Do you see that fibrous material clinging to the inside of that wall?\"\n\n\"Yes Master!\" I replied.\n\n\"Harvest it. Find something to collect the liquid in. Once you fill three suitably large containers, I will show you a wondrous thing.\" The Rakata declared and fell silent.\n\nI searched the ships for three large bowl-shaped receptacles. They looked big enough, so I began. I tried melting a large area to no avail. The spot wasn't even warm to the touch. What the hell was this stuff? I reduced the area I tried to warm until I found my limitation. I attacked the one-inch square with everything I had. It was going to take a long time to fill three of these damn bowls. I drew on my rage and it helped. The material was durable and extremely heat resistant. Traci came in that night to inform me it was time to feed.\n\n\"Ghost man?\" Traci queried. \"What are you doing?\"\n\n\"Harvesting that fibrous material as part of my training. Why?\" I replied.\n\n\"Do you know what that is?\" She asked as she scanned the exposed material.",
        "\"No. What is it?\" I followed up.\n\n\"Star ship armor,\" She stated with a calculated lilt in her voice. \"I have done some research and the material is called Cortosis. It is as difficult to mine as it is to work with. I wish you the best of luck.\"\n\n\"Thanks.\" I said as I returned my focus to the task.\n\nThe first day was awkward but educational. I learned how elemental energy worked against Cortosis. The stench the burning alloy gave off was noxious and I was thankful I no longer breathed. I had visions of a living student coming down with cancer from exposure to the fumes. The second day I tried different elements and temperatures to see if the Cortosis was vulnerable to electricity, or even extreme cold. Deep bitter temperatures worked far better than heat. I watched the slow trickle of Cortosis fill the bowl. It took only a week, but I didn't inform my Master of my success. I wanted to push my elemental abilities, namely flame. I felt if I didn't push it to the next level, I would be cheating myself. I spent two more weeks attacking not just sources of Cortosis but metal alloys as well. I also experimented with different colors of flame to see if they had any impact or if they were simply cosmetic.\n\n\"Ghost man, you keep forgetting to eat.\" Traci chastised me one evening. \"What are you attempting now?\"\n\n\"Watch.\" I said and extended my arm. I opened my hand palm up and produced a pure white flame. \"Behold.\" I continued as I slowly ran the shimmering gout of flame through its paces. The incandescence changed color from red, to yellow, to orange, to green, to blue, to violet, to indigo, and finally flawless black. \"What do you think?\"\n\n\"Impressive. Let me guess... you are going to make the Ebony Flame your trademark.\" She laughed.\n\n\"If you only knew how damn hard it was learning how to create that you wouldn't joke.\" I chuckled. \"I do like the name though Ebony Flame.\"\n\n\"I am proud of you. You have done an amazing job attacking the Cortosis challenge.\" She declared.\n\n\"I agree.\" My Master added as the holocron levitated into view unbidden. \"Now, I will show you how to weave the Cortosis into silk like material. My student will possess only the most impressive armor and yet it will appear as mere cloth. Attend me.\"\n\nEager to see this new technique I followed the holocron to where I had stored the bowls. The Rakata displayed devices I would require drawing the liquid Cortosis across and then load the thin strands into a machine to weave them into the cloth he described. Traci and I attacked the task and built and rebuilt the devices multiple times considering the extreme temperatures involved in melting the Cortosis and how it would impact the machine. After a few test runs, I was ready to perform this next task. I followed my master's instructions and over the next nine hours I had enough Cortosis cloth for one set of robes which included gloves, boots, and of course hooded robes. He showed me how to dye the cloth and where to find the raw natural materials for the dye.\n\n\"Patience slave,\" the Rakata purred. \"Next you will require a weapon. You cannot stride across the surface of this world without one.\"\n\n\"My hand feels empty.\" I admitted.\n\n\"Excellent.\" He replied. \"Gather the following alloys from the ship in these quantities.\" He declared and then listed them off. Traci showed me where each of a half dozen metals and alloys could be found. I ripped, tore, and shredded them from various locations within the ship. \"We need to design this together.\" I stated asking for her continued help. \"Function and beauty.\"\n\nThe leaf shaped blade took form and with Traci's help I breathed life into it. It took me three days to tweak the design to what passed for perfection to me. Once I had a clear image in my head, I began the lesson and added the elements in the proper portions and sequence. The Rakata directed my actions precisely. I performed them to his satisfaction and in the end, I had ingots of the new alloy to forge into my weapon. I rested after the exertion of creating those ingots. The next day I began the task of forging my weapon. I used a huge solid block of metal as my anvil as well as pyrokinesis to heat the ingots, and telekinesis to hammer, shape, and sharpen the sword. Just as I had before I lost myself in the creation of the sword. Time became meaningless as mind and metal blended as perfectly as the various elements did to form the alloy. In the end I used my own blood for the final quenching.\n\nArmed with the sword I was sent to a nearby cave to collect mineral deposits for the dye for my robes. Each was a separate test devised by my Master to push my skills and see if I had what it took to survive and evolve. Traci wasn't allowed to enter the cave, but she stood watch outside. The test was simple. If it was alive, kill it. I had no armor and only my blade to defend myself I ducked into the low-lying cave entrance. The squeaking sound was faint but the further I went the louder it got. The ceiling varied from up to fifteen feet high to so low I was forced to squat and slowly move through those areas. \n\nThe squeaking got steadily louder when I reached the main portion of the cave system. It was clearly marked with a stone effigy that looked like a blend of a gargoyle and a bat. I cried out in pain when something struck me from behind. I rolled away and winced feeling the burning sensation across my upper back. I glanced up to see three of them hovering at the top of the roof. I drew my blade and in my free hand crackled Force lightning. I lowered my hand letting the energy dissipate. I was to defeat these things with weapon alone. One of them dropped like a stone in an attack run. I timed my thrust and nearly had the blade ripped from my grasp when the corpse of the creature fell to the floor. I used my foot and braced it on the body of the thing and plucked my blade free.\n\nThe last two were more cautious. They might be mindless animals, but they knew another predator when they faced one. I took up a defensive stance and waited. They separated and attacked from two different directions simultaneously. I was quite proud of my footwork and skill with a blade. Those two dropped close to the corpse of their fellow creature. I examined them to see what I was facing. The creatures were blind and navigated using echolocation. The whistling sound I had heard was them bouncing sound off the surfaces to 'see'. There were more of them, I could hear faint whistles deeper in the caves. I cleaned my blade before continuing. I moved as quietly as I could. My goal was at the deepest portion of the cave. My Master had described what the mineral outcropping would look like. I drew on the Darkforce to see clearly and navigated quite easily from chamber to chamber. The creatures preferred the tallest of the chambers. \n\n\"What is that smell?\" I complained as a strong stench caught my attention. \"Smells like shit and death blended together.\"\n\nThey were coordinated fighters I had to give that to them. My blade cut through bone and sinew as easily as it did their pale colorless flesh. Proud of my handiwork I crept triumphantly to last cave. The stench was damn near overwhelming. Once I peered inside, I knew why. The mound was at the rear of the chamber near the middle portion of the wall. It was eight feet high and perched atop the egg laying apparatus was the Queen of this hive. Much like a queen ant or in the cinema sense a queen alien she produced eggs from which those flying nightmares hatched. She was four times the size of the other creatures I had encountered so far. They had been the size of a large dog while she was twice the size of an adult horse.\n\nShe wasn't alone. The Queen had six airborne protectors and they were bigger than the others by a good foot or more. The defenders were far more aggressive than the others as well. They didn't wait for me to get close enough to attack the Queen. The soldiers as I thought of them broke up into three groups of two. They were relentless but I had hard cover to hide behind. It was a matter of observing their repetitious attack patterns before I could do anything but defend myself. It was slow going but one by one I was able to take them out. The Queen wasn't idle as she removed herself from the egg laying portion of her body.\n\n\"Just you and me sweet thing.\" I growled.\n\nShe hissed and whistled as I closed the distance. When I was about fifteen feet away, she lashed out surprising me and damn near killed me. The blast of Force lightning struck me in the chest and sent me head over heels. My life bar was down to twenty percent. One more blast like that and I was done. I didn't have an energy blade to absorb the blast. I checked the details of the quest on my HUD. \n\n'Kill the Queen with your sword. You cannot use talents to harm her directly.'\n\nLet's see if I can use them indirectly. My health was slowly refilling but not before that bitch launched an area attack and killed me stone cold dead. I levitated the sword and flew it around the chamber to keep her attention. She could blast that all she wanted. I spun the sword around in glittering angles to keep her attention until I had a clear shot at her underbelly or a weak spot.\n\n\"Come on your bitch, show me your special spot.\" I growled.\n\nShe flapped her wings and slowly took to the air. How long since she had flown? I sent the sword at the vulnerable leathery membrane that made up those wings. She shrieked in pain and crashed to the ground. The sword deflected off her armored chitinous hide doing little or no damage. I brought it up as she crawled in my direction. I saw electricity collecting just behind her head. I spied a small pair of antennas that were getting brighter by the moment. I hoped I was right. If I was wrong, I was dead. The sword sped down and struck those projections sending the arc of purple lightning into her body via the sword's blade. Her body spasmed once before falling still.\n\nCha-ching!\n\nShe was dead and once I collected the mineral for the dye this quest was done. I levitated the blade free from her and watched the last great discharge arc from her corpse. I cleaned the blade and sheathed it. I dug the deposit from the back wall with my fingers. I grabbed one particularly large chunk of stone when something shifted, and the vein of mineral collapsed and fell to the floor. When the dust cleared a hidden lever was revealed.\n\n\"What the hell?\" I gasped as I grabbed the lever and pulled down. \n\nThe hidden door behind the wall opened sending a second block of stone crashing to the floor of the chamber. I waited for the dust cloud to clear when I peered into the room beyond. A soft buzzing sound filled the air as ancient lights came to life illuminating the chamber. The walls, floor, and ceiling were covered with murals. In the center of the room was a pedestal and atop it a holocron. I looked at the murals first and there was a definite ocean or water theme to the designs. The whirls and waves reminded me of stylized Japanese art I had seen growing up. The tsunami sized waves with their brilliant white crests crashed over stone towers, buildings, and people fleeing the cataclysm. There were things in the water. Most were easy to see like the whales, brightly colored fish, but woven into the whorls and whirls was a menacing force.\n\n\"Whatever is behind the tsunami is hiding in the water.\" I muttered. \"I can barely make out tentacles and creepy alien eyes.\"\n\nEnter the Lovecraft element. Was this dreaming Cthulhu waking from eons of sleep? I checked the pedestal and floor for traps or security measures. I didn't find anything. I did my best to memorize the elements and find all the hidden imagery. I couldn't be sure of course. I removed the holocron and a dull rumble reminded me of a classic movie. I hoofed it to the exit at breakneck speed. The entire cave system collapsed behind me. I had mental flashes of the murals matching what was happening behind me. I almost didn't make it. I was forced to follow the caves and passageways. The collapsed followed flaws in the earth and they were straight and covered a shorter distance. \n\n\"Shit!\" I cursed as I flung my body out of the mouth of the first cave. A cloud of dust boiled outward and enveloped me and Traci's primary robot avatar. \"Ack!\"\n\n\"Did something happen?\" Traci asked and I lay face down on the barren earth and replied.\n\n\"No, what makes you ask?\" I chuckled as I checked my inventory and found that everything was still there. \"Yeah. I didn't lose anything.\"\n\n\"You need a bath.\" Traci offered. \n\nI got to my feet and looked at my dust caked limbs and chest. I agreed with her assessment. We trudged back to camp. Before I bathed, I blended the dye and soaked the bolts of Cortosis material. Only then did I perambulate to the nearby waterfall and pool that it fed. I stripped out of my clothes, placed my sword nearby just in case, and stood beneath the pounding water. It drove the anger and stress away as easily as it did the filth that had caked my hair and skin.\n\n\"One last lesson.\" The holocron announced scaring the shit out of me when it appeared without warning. \"If you are to survive you must learn to truly mask your essence, your aura, and your intentions. Attend.\"\n\nThe lessons were simple to pass on but difficult to master. My presence had become that of a predator to the local wildlife. My aura was tainted by the life stealing technique I had learned. It was unlikely I could move around in polite company without learning the Force cloak technique. I dove into its intricacies with everything I had. At first glance it might seem a simple stealth skill, but it was far more than that. Once I mastered it, I could hide my presence and blend into crowds effectively reducing my notoriety score to zero. I could conceal my aura and appear as a mundane non-Force user. The most important aspect was hiding the darker nature of my aura so that I could walk unseen and unfelt among any crowd or environment. \n\nI spent my days mastering the rare and difficult talent. At night while my power was at its most potent, I sought out herbivores and tried to walk up to them openly. My failure rate was one hundred percent for a long ass time. I couldn't get within a thousand yards of any living thing. On the bright side the catamaran was finished and ready for a test drive. It took a week to tweak the repulsor engines to get them into sync with one another. During that time, I had the smallest of successes with my current training. While practicing a small lizard walked across my foot by accident. It looked up when it realized my foot wasn't a rock and tore off in search of shelter, but I still considered that a victory of sorts.\n\nEncouraged by the lizard event as I thought of it, I doubled my efforts. The triumphs were small and infrequent, but they occurred, and that is all I needed to continue. Out of all the Force skills I had attempted to master this one was by far the most difficult. My month of using life drain to feed came and went. I alternated between feeding traditionally and using that technique so that I could strengthen its attack power. \n\n\"You look down hearted Ghost man.\" Traci said one night while I prowled the perimeter of the star ship graveyard.\n\n\"In the past when I attempted to master a technique, I was either able to see past what I was doing wrong or a whole new solution presented itself to me. This is the first time where I honestly need to stick to the training and grind away until I master it. It is humbling.\"\n\n\"Humility itself can be useful.\" She offered with a chuckle. \"It is a good anchor times when things come too easy to us.\"\n\n\"I agree.\" I said and closed my eyes. Maybe I was getting too full of myself. I started this game as an unemployed schlep as Kat had described me. I had lost touch with my roots. In the end I was just another guy.\n\n\"Ghost... keep it up.\" Traci whispered.\n\n\"What?\" I was about to ask when something furry brushed against my cheek. I slowly opened my eyes and standing next to where I was seated was a strange armored feline. It was about twice the size of the average house cat with bright green eyes, tufts of fur around its face, and a scale like epidermis covering the rest of including its tail. \"Hey you.\" I whispered. \"What are you?\"\n\n\"It is the product of Sith sorcery. It is part feline and part lizard. They are favored by the nobles among the Sith and difficult to domesticate.\" Traci listed off the data file on the creature.\n\n\"Nice Lizard Cat...\" I continued to whisper.\n\n\"Kill it.\" The holocron demanded of me as it floated into view. \"Kill it now.\"\n\n\"I could do that,\" I agreed. \"Or...\"\n\n\"Or... or what?\" The Rakata snapped.\n\n\"I could try and keep and domesticate it. If there are a few Sith on this world it would impress them and make it easier for me to pass as one of them.\" I offered.\n\n\"Good. You know when to argue and when to acquiesce.\" The gate keeper laughed. \"A few Sith... you amuse me slave.\"\n\n\"Might I ask what is so damn funny?\" I asked and the Rakata did share the joke.\n\n\"It is amusing because you are on the Sith home world of Korriban. That is why I am amused.\" He explained before floating back to camp.\n\nKorriban! Oh shit! I glanced at the cat thing and it had fallen asleep on my leg. That is a good beginning. Traci was already displaying images of pure blood Sith, the race that the dark siders called themselves after a group of dark Jedi outcasts accidently found the planet. They conquered the Sith and intermingled with them. If I was indeed in the past, how far back was I? Was it before or after the arrival of the dark Jedi? I'd have to find out. I wouldn't have the chance quite yet.\n\n\"Congratulations Apprentice,\" The Rakata declared. \"Slave no longer, I grant you the rank of student. You have claimed my second holocron. Attend.\"\n\nThe relationship between us changed after that. If there was a skill I was struggling with, like Force cloak, then he would instruct and reveal hidden techniques to help me along. The price for those clues was entertaining him. The Rakata would summon foes for me to fight and he would lay down ground rules for each match. Most were death matches but there were the occasional first blood. When I asked about the mind I had touched, I was told to stay out of it. I accepted that answer for now. I focused on my training and found that there were aspects to existing skills I never tapped into. I was casting various types of illusions in short order. My mastery of shadows included some slick shit from doppelgangers of myself to mimicking walls and ceilings to hide behind. \n\n\"It is time.\" The Rakata declared after six weeks of honing my cloaking ability. \"I have two tests for you to accomplish. The first is a bloodless feat that you must master before you may attempt the second.\"\n\nI strode towards the waterfall. I spied the clump of herbivores clustered around the edge of the pool drinking. My task was to walk to the waterfall without disturbing the critters. I had to pass like a wraith. I dug deep for this one. I closed my eyes and as I had during combat, I found that tranquil place and settled deep. I opened my eyes and took a step forward. The herd didn't budge an inch. I fought my excitement because that would undo things as easily as losing control. I took a second step and a small flutter passed through a few but they remained in place. Each step was harder than the next. The closer I came the deeper I was forced to plunge. It was like wrapping the shadows around me and keeping them from moving. I couldn't allow a single ripple to occur. My reverie was broken when the water from the waterfall slammed into me from above.\n\nI spun around and the herd was still there. I had done it! I tried it a second time. I had to know it wasn't a fluke. I didn't delve so deep that I lost sense of my surroundings this time. I crossed the pond to the middle of the critters and they never flinched once. I'll be damned, it works. I returned to the holocron and instead of praise I was told where to go to take on my second and most life-threatening challenge yet.",
        "\"Have you finished it?\" My Master asked and it was Traci that answered.\n\n\"It has been done to absolute perfection.\" Traci declared proudly.\n\n\"Show it to me.\" He demanded. The prime droid that Traci occupied took out the sword I had so lovingly created and drew it from its sheath. \"I concur, it is perfect.\"\n\n\"What are those?\" I asked when I saw the arcane characters etched into the mirror bright surface of the blade, the cross guard, and even the handle. \"The whole thing is covered in them.\"\n\n\"They are runes. If you survive tonight's challenge not only will you have conquered a great foe but performed your first act of dark alchemy, with a little help of course. The heavy lifting is of course on your shoulders. Here is what you must do.\"\n\nIt seemed easy enough, but I knew that was a lie. I didn't know what kind of foe I was facing. The only thing I did know was that I had to slip by the bodyguard, perform the ritual, and only then could I possibly defeat the watch dog. Clear as mud. To bolster my confidence, I was given my Cortosis robes to wear for this occasion. I was wearing my robes of office compared to my naked flesh when I first arrived here. Traci fired up the catamaran's engines. Traci and I climbed aboard with the second holocron in my grasp. We had a short journey to reach the edge of my target's domain. I prowled the upper deck of the ship for the next two days. On the dawn of the third day Traci brought the ship to a halt and I was given my last instructions.\n\n\"Harness your aggression but only at the critical moment. Become the patient hunter and come back victorious. If you do, I will bestow upon you a new title, one that will echo through eternity.\" My Master promised.\n\n\"I won't fail.\" I declared.\n\nI was about to leave when Traci surprised me. She lifted a folded piece of the solar cloth and handed it to me. I accepted it and unfolded it. Swaddled in the shimmering material was an elegantly carved mask. It was the Rakata tradition for warriors reaching for the title of instructor to be given just such a mask for good luck. It fit perfectly and gave me a sense of focus. I finished the look by pulling up my hood and departing the ship. Shadows would be useless, so I used invisibility instead. I followed the Rakata's directions to the lair of my target. I reached out for any kind of electronic surveillance and barely detected it. The sensors must be covering the area directly in front of her lair. That wasn't my first concern though. She had grown wild plants in huge quantities all around the installation. The plants were overlapped so that even being invisible my movement would be detected. It was the fog and Latveria all over again. This time however I couldn't just crawl. I would still disturb the plant life.\n\n\"Well fuck!\" I cursed softly. \"How the hell do I get passed this?\"\n\nI wished I still had my glide wings. I could have levitated myself up high enough and then glided over the plants. It was time to be the patient hunter. I sat and meditated. I dove deep into the light side to restore my patience and cleanse the anger and frustration. I felt a gentle breeze and my eyes snapped open. The wind disturbed the plants and no alarms went off. But it died down before I could take advantage of it. Damn! I looked over my shoulder at the horizon. I never thought I'd be thrilled to see storm clouds. The weather front was heading this way. I smiled and then I spied the scarlet lightning lancing down from the storm clouds.\n\n\"No fucking way! I hope this Cortosis works on that.\" I muttered as I patiently waited for the storm to strike the area. \"If her defenses don't kill me the lightning just might.\"\n\nI had been on Korriban long enough to see the extremes of its weather. The worst were its thunderstorms. I had seen from the safety of a space hulk's interior what the scarlet lightning could do to living matter. Whether it was plant life or predator anything caught out in the open and struck was burnt to a crisp or worse. Two hours later the edge of the storm struck. The razor-sharp hail was the first to strike. While the Cortosis kept my skin from being sliced to ribbons the bruising I endured felt like a beating from a circle of angry Mafiosi. The rain was next and with it the first deafening blast of thunder. I shrouded myself and prepared to race into the field of plants and endure whatever was beyond that.\n\nCrack!\n\nMy world went blood red as the first bolt of lightning struck the area. I felt like a runner off the blocks. Tapping into the Force I boosted my sprinting speed. I crossed half the field in no time at all. I was about to boost my speed a second time when I sensed immediate danger. I threw my shield around me just as automated blasters fired on my position. I dropped below their level of fire and felt the next impending sense of doom. The lighting, attracted by the metallic guns, struck one of the clusters of blaster cannons and destroyed them. I took the chance and dropped my shield and boosted my speed instead. I reached the stony outcroppings inside her main sensor array. I restored my invisibility and waited. The worst of the storm hadn't struck yet. Multiple bolts hit the top of the citadel and the entire complex went dark. I wouldn't get a better chance. I raced to the main blast door and cursed for the lack of an energy sword of any kind. \n\n\"Open damn you!\" I roared as the storm raged above me. I attacked the door with telekinesis. \n\nI was able to open them just enough to dive through. They snapped shut behind me and I merged with the darkness the moment I was inside. Even the backup power was down for now. I halted and activated Force cloak and willed myself to less than a shadow or the whisper of a breath. I skulked down the halls looking for a way up. I heard the guards approaching carrying lighted staves and stood aside watching their approach. They never looked in my direction. They went straight to the blast doors and examined them. They were thorough and reported back while I listened.\n\n\"It must have been the storm. No, it is closed tight. No sign of intruders.\" The blue clad sentry reported. \"You four stay here and keep an eye out. I am going to report back and see if the storm has knocked out any other sensors.\" He ordered. \n\nI followed him and his single companion. Their blue uniforms were decorated in military fashion and carried a family crest on the breast pocket. They reached the only elevator in operation. The door opened and I slipped inside ahead of them. They didn't blink and I dug deeper when it was just the three of us in the confined quarters.\n\n\"It is about feeding time.\" The other guard stated in a humorous voice behind his elegant mask.\n\n\"You really enjoy watching slaves being fed to that thing.\" The first guard declared.\n\n\"We get so little real entertainment around here.\" The other replied. \"Unless it is when they bring in new slaves and the captain hands off his old ones to us.\"\n\n\"The last one wasn't too bad, a little scarred up for my taste but not bad.\" \n\nThe elevator came to a halt and I followed them out. They turned left and headed for the security office. I might get an inside view of the place if I was lucky. If there were maps or even a list of on duty guards, I'd learn something. I followed them into the hub of activity. A dozen armed guards moved around the few functional monitors until full power could be restored. There were maps along the walls and each of the guards carried a card that gave off a signal that could be carefully monitored. The slaves were injected with a chip that emitted a different signal. There was no way of moving around undetected in the conventional sense. \n\n\"Almost feeding time!\" The guard that had been in the elevator announced. \n\n\"I got money on last slave out.\" Another of the guards chuckled. \"I'm sure to win this time.\"\n\n\"You said that last time.\" Yet another guard replied. \"Eyes up, the Lady is on the move! Power is restored!\" He announced as dead monitors flickered to life. \"We are back to normal. Guard crew to level twenty!\"\n\nFive of the guards left and I was with them. They took one of elevators up and this time I was forced to cling to the roof to keep from being detected. My heart was tripping in my chest as one of the guards looked over his shoulder. We reached the twentieth floor and they piled out. I was nearly struck by the closing door. I paused as I knelt on the floor recuperating from the near miss. Once there was distance between me and the patrol I continued. I felt her halfway down the hall. I pulled my aura as tight around myself as I could. \n\nThe roar ripped through the air and cheers from spectators echoed after. I reached the upper tier of what was an indoor stadium. My target wore dark blue with a mask fashioned of sapphire. She was as wealthy as she was powerful. There were four figures, two on either side, flanking her high-backed seat. I stayed near the door until an opportunity presented itself. I could try and assassinate her in front of everyone and escape during the chaos or I could be patient and strike later. My gut screamed strike soon.\n\n\"Mother. I hope these slaves are more entertaining than the last.\" The female Sith to the right of the Lady said her voice flat and lethargic.\n\n\"They have been fed an off world treat that will improve their speed and stamina. Sadly, it will eventually impair their movements in time.\" The Lady explained. \"They will entertain the crowd.\"\n\n\"The Beast never fails to entertain.\" A young male on the Lady's left stated eagerly as he drummed his fingers against the rail of the balcony. \"Will you tell us where you found it mother?\"\n\n\"It seems I have no choice. I either keep it a secret or endure you chronic pestering.\" The Lady growled. \"I told you that my uncle is a collector of Rakata artifacts. One of them is a rare star map. To perfect my training my master sent me to that world to prove my worth. I did so and came back with a pair of them to entertain. Tonight, the male will perform for your entertainment as the female is pregnant. I will be selling off the spawn and increase the family's assets even more.\" A thunderous roar announced the arrival of the beast. The Lady stood and addressed the crowd. \"Welcome to the games!\" She shouted even though her voice was amplified via a holonet projector. \"Those present and enjoying the game at home welcome and let the carnage begin!\"\n\nShe sat back and the audience shouted, stomped, and clapped. I couldn't see what was going on, but I felt her arousal rate skyrocket. I followed my master's instruction. I tapped into her life stream through the Force. I activated the life drain talent and, in her case, reached out for her lust. I drew the sword and let the minuscule trickle of energy pass through the tip of the blade. I felt it ignite the slumbering runes. One by one by one they connected in an eternal circuit. The Lady moaned as the beast stalked its prey below. Her excitement grew as one of the slaves was caught and brought up to monster's jagged maw to be eaten. The last rune had been activated and as she cried out, I plunged the sword through the back of her chair and into her heart.\n\nAt first those around her didn't know anything was wrong. I knew that task was complete when I felt the flare of power radiate off the weapon. I took it back into my hands and yanked it free of her corpse. I quickly withdrew as her body crumpled forward and hit the ground. I was sheathing the weapon as I melded back into the shadows. My next kill had to be the beast. The magic required it or so my Master demanded. I made my mind up. I raced along the circular corridor to one of the other entrances into the stadium. People were trying to get out while I was one of the few trying to get in. I leapt over the panicking guests. I looked at the throne and halted. The siblings were fighting over her mask. While her corpse cooled, they only cared for who would succeed her.\n\n\"MINE!\" The girl drunkenly screamed.\n\n\"Fuck you bitch!\" The boy roared and stabbed his sister with a wicked looking dagger.\n\nSith only respected strength. I wonder who would survive the night. I had a beast to kill. On Earth there is a cautionary phrase, look before you leap. I was so caught up in the moment I didn't. I yanked the sword from its sheath as I launched myself over the balcony and downward to the monster below. The crowd fell silent when they spied the masked figure falling towards the beast.\n\n\"Die!\" I shouted as I finally looked at my target. \"Aw shit! A fucking Rancor!\"\n\nThe Rakata had long ago discovered and bred the dread beasts on several worlds within what was known at the time as the Infinite Empire. I took aim and used the Force to accelerate my falling speed. The beast's attention was on the screaming morsels at its feet. The blade struck the base of the thing's enormous skull. I held onto the hilt of the sword with both hands. The blade was buried to its hilt and to everyone's surprise the thing didn't cry out in pain. Instead it let out what could only be described as a whimper of pleasure. I wailed as the sword drank deep of the Rancor's life force. The Rakatan ritual had worked. The alchemy of blending the Force with inanimate objects had succeeded. In this case the energy stealing talent I had used when I struck the lady was imbued into the sword. Since I had used lust then any victim of this weapon felt only pleasure not pain.\n\nMy cock was at full mast as the healing energy repaired broken ribs, a shattered hip, and multiple breaks in my right leg. The power plant that was the Rancor healed it all and more. I pulled myself atop the skull and gave the blade a savage twist. The beast let out another aroused bellow and dropped to its knees. While I was in no danger from the beast the new Lord was screaming for my death. I wrapped a force field around myself as I tore the sword from the wound.\n\n\"Sorry bud, but you are already dead.\" I announced. \"I have two choices.\" I thought to myself. \"I can teleport to my ship or I can kill this little cocksucker and leave this place in utter chaos.\"\n\nI had a clear line of sight for my landing spot. One moment I was atop the tumbling corpse of the Rancor and a heartbeat later I was seated in the throne behind the screaming figure of the new lord of the manor.\n\n\"Where the hell is he?\" The young man shouted.\n\n\"Here.\" I whispered.\n\n\"Ah! How the hell did you...?\"\n\n\"Silence. Please.\" I said the sword still clutched in my left hand.\n\n\"Kill him!\" He ordered. \"IRK!!\" He moaned as I plunged the sword into his breast. \"Feels so good!\" He grunted as he died climaxing.\n\n\"Pick a better leader.\" I suggested as I looted the three corpses. \"Need a little travelling around cash.\"\n\nI teleported to the catamaran and ordered an immediate withdrawal. It was only because of the massive amount of power I had absorbed through the sword that I was able to cloak the ship until we were out of scanner range. I collapsed on the deck panting and gasping.\n\n\"What the hell have I done?\" I asked as Traci held the holocron.\n\n\"I am so proud of you.\" The Rakata declared and continued. \"You have survived a trial by fire. In one day, you have enchanted a powerful weapon, slain two powerful Sith, and destroyed a terrifying beast. I've never seen anyone imbue lust into a weapon before. Your sword is unique. Have you come up with a name for it?\"\n\n\"Yeah. What do you think about Death Kiss?\" I offered and it was the sword that responded.\n\n\"Ooh, I like. Call me Death Kiss.\" It purred in the sensuous voice of the former Sith noblewoman.\n\n\"Did you hear that?\" I asked fearing I was hearing things.\n\n\"We heard alright.\" Traci declared. \"Oh, Ghost man, what have you done?\"\n\n\"Not Ghost man,\" the Rakata snapped. \"He deserves a title that will inspire fear and awe in his foes. It is my pride to pass on the title my people gave to only those who earned respect. You have done that this day. I name you Darth...\" []\n\nVainglorious:\n\nIf I was going to interact with the general population, I needed to look like them. With Traci's help and a holographic mirror, I was able to use my shapeshifting skills to craft a new me. I had seen enough male Sith during the conflict to have an approximation to start with. Their skin was a deep red, their hair was black, straight, and worn long. It was their eyes that showed the corrupting influence of the dark side in nearly every sentient on the planet. Eyes like burnished copper or gold and so mine would be no different. I kept my current height and build to keep it simple. I tweaked my facial features to display the ridged eyebrows and show the two facial 'tentacles' that reminded me of a Fu Manchu moustache. \n\n\"What do you think?\" I asked her opinion.\n\n\"Perfect-ish.\" She joked. \"What are you going to do about her?\"\n\n\"I am responsible for her creation and she is loyal to a fault.\" I added as my sword moaned in her sheath. \"I need a name.\"\n\n\"Accessing records from the derelicts. How about Saijar Kressh? The Kressh family pass for what the Sith would call honorable.\" She offered.\n\n\"Saijar it is.\" I accepted the new moniker. \"Let me change. I don't need to show up wearing the same mask and robes as the assassin that struck the... what family did I send into utter chaos?\"\n\n\"Sadow if the transmissions I picked up were accurate.\" Traci responded. \"I have detected a city nearby.\"\n\nWe took a leisurely pace to the city so that I could learn as much as I could about the culture of the pure blooded Sith. The edge of the city loomed on the horizon near noon of our second day after my little one-man blood bath. The repercussions were far reaching as I was soon to find out. Scanners marked us from a mile off and we were ordered to follow the transponder beacon by an automated voice. I told Traci to comply. I used Force cloak and pulled my aura tight around me. I was a simple merchant in search of goods to purchase for sale off world. The death skull robots greeted us when we landed at the space port. It was only then that I learned that Korriban was in the hands of Xim the Despot. The ruthless warlord had claimed the planet for his own after the fall of the Infinite Empire and the disappearance of the Rakatan masters.\n\nUnfortunately, I was not on any record and if there is something a despot doesn't like is inaccuracies. My catamaran was seized, and I was taken before the local tribunal. I was scanned, quizzed, and seeing as my craft was unique offered service in the glorious despot's empire. I was handed over to one of Xim's few living servants, a pureblooded Sith by the name of Governor Tyllen Krenn. They found Traci equally impressive and thankfully allowed me to keep her for now, once a restraining bolt was attached to her chassis. They tried to seize Death Kiss but found her rather resistant. I tried to explain but they let her remain onboard my ship for now. I was okay with that. I would retrieve her before something unforeseen happened.\n\nThe estate owned by the Krenn family had been in their hands even during the time of the Infinite Empire. The garden alone was four hundred years old. Tyllen Krenn, the current patriarch of the clan was a tall powerfully built Sith with a strong aura and I suspected a keen intellect. He wore light blue robes indicating his families current alliance with the greater family, the Sadow. The same Sadow clan I had just plunged into chaos.\n\n\"You aren't on any records, are you a slave?\" He asked while two of Xim's death skull droids had their weapons trained on me. I took the chance of dropping Force cloak and revealing my true aura for just a few seconds. His reaction was interesting. \"I'll take that as a no.\" He replied.\n\n\"He did not reply.\" One of the droids stated. \"Reply to his question. Are you a slave?\"\n\n\"I am not. I am an engineer. I designed and built my own droid as well as that fine vessel you have seized. That is why I am here.\"",
        "Crack!\n\nI saw stars when he slammed the butt of his energy rifle against the back of my skull.\n\n\"He did not ask you if you were an engineer.\" The droid snapped. \"Keep answers short and to the point. Get up.\"\n\nI staggered to my feet and pondered short circuiting him and his lethal looking friend. It would only bring trouble to the Krenn family. I didn't want that. I needed an alliance. I kept my silence and my temper.\n\n\"I could use a gifted engineer.\" Tyllen stated to the droids. \"I will officially take this fine Sith and his droid into my employ. They will be my responsibility.\"\n\n\"Your terms are acceptable. We will move the vessel to your family's portion of the space port. Inform your new employee of the rules. I suspect he has been on his own far too long.\"\n\nThe droids turned and left. Once the double doors closed Tyllen's demeanor changed instantly. He was apologetic and told me a gifted master of the dark side should be better treated. He accepted my name without question and that is how I entered the employ of the Krenn clan. I was treated like family much to the disdain of Tyllen's eldest son who was himself a potent Force user. My first act was to retrieve Death Kiss from the catamaran. My only concern was that and securing my holocrons. \n\n\"How can I be of service to you and your family? I have spent long years in the wilderness and am eager for the company of my peers again.\"\n\n\"Your arrival is fortuitous,\" He replied stroking his facial tentacle the way a human might a moustache. \"Xim is always looking for new and deadlier designs for his star fighters. I have living and working quarters being prepared as we speak.\"\n\n\"Thank you, my lord. May I ask a humble favor?\"\n\n\"Ask and I will see what I can do.\" He replied smiling.\n\n\"I have heard of your family's garden.\" I began and he eagerly directed me up a flight of stairs.\n\nI followed him to the rear of the building where a balcony looked out over a meticulously maintained and manicured garden. He pointed out each bloom by its noble and vulgar name. I had struck at the core of his passion. It was a great swirling design that encompassed most of the walled in space created for it. The only thing that broke up the blooms was a single small stone pylon. When I remarked upon that again he became quite animated and informed me that the founder of his family had brought it back as a sign of conquest half a millennium ago. The garden and the pylon were inexorably linked he said. I wondered why. \n\nI dined with the family while Traci stood patiently recharging in my rooms holding onto Death Kiss for me. The conversation never reached what I would call stimulating. Well, that was until dessert was served and Tyrell, son of Tyllen, lost his patience.\n\n\"Damn it father!\" He cursed the Force spiking in him like a blazing inferno. \"Ask him! Why don't you ask him?\"\n\n\"My son is strong in the dark side,\" Tyllen said quite coolly. \"What he lacks is patience. I fear that temper of his will get him killed before he has a chance to inherit.\"\n\n\"What troubles your heart fierce Tyrell? Ask and I will answer if I can.\"\n\n\"Did you murder the Lady Sadow and her son?\" He asked his copper eyes flashing with power.\n\n\"I will answer but first answer this question for me.\" I calmly replied and he nodded. \"Does it not benefit your clan with the death of the Lady and her son?\" He sat back and pondered my question. A slow smile spread on his lips and he nodded. \"Need I answer your question now?\"\n\n\"I withdraw my question out of friendship sake.\" Tyrell purred.\n\n\"Thrice blessed be the House of Kressh!\" Tyllen declared joyfully. \"You have done what I have failed to do. I see the first inkling of wisdom in his eyes. You have my thanks. Now I ask a favor friend Kressh. Take my son under your care, for say six months, and see if you might pour more wisdom into his fiery spirit.\"\n\n\"How do you feel about this Tyrell?\" I asked.\n\n\"I will give you a week. If you can impress me in a week I will in good faith enter into your tutelage.\" He haughtily replied.\n\n\"That will not do.\" I fired back. \"I take it you consider yourself a skilled swordsman.\"\n\n\"I do indeed.\" He said his temper rising again.\n\n\"Good. Let us settle it now. Bring two training sabers. If you can land a single blow, I will call you master. If I can land three then you will do likewise. What say you volcanic Tyrell?\"\n\n\"Now we are speaking the language of the Sith! I accept noble lord.\"\n\n\"I warn you friend Kressh my son has had the best instructors within the confines of the city.\" Tyllen declared.\n\n\"Sadly, I have spent all of my education in the wilderness.\" I replied and that worried the father but not the son.\n\nA slave brought in a pair of training sabers and we each took one. I smiled when he settled into the ready stance for the more aggressive style of Makashi. I took up the stance for Soresu, a more defensive style. I wished to study the young Sith. The slave held up a blue cloth once we stated our readiness it was dropped. Tyrell's eyes were locked onto the cloth and its path. I watched him and waited for his aggressive assault. I wasn't disappointed. With a snarl he launched himself at me and instead of lightly sidestepping and sending him sprawling I locked blades with him. His blood was up, and his training was quite evident. \n\nIt was clear he wanted a quick clean victory. He wasn't going to get it. We circled and I pressed his footwork, balance, speed, and patience. Three out of four isn't bad. Once he was denied that victory he turned to brute force. Now was the time for speed and balance to rule the field. His sudden riposte took me by surprise, but a quick retreat threw him off balance. He over compensated and back peddled into one of the room's support columns. His rage flared and I switched to form two and met his aggressive form. Our weapons slammed against each other now and I when he took a double handed grip on his weapon, I switched back to the defensive form mid strike and he noticed. Once more he was startled. I didn't need to land a single blow to beat him.\n\n\"Wasteland master eh?\" Tyrell gasped. \"How many forms do you know?\"\n\n\"More than four.\" I admitted and he demanded proof. I gave it to him. I switched to the eighth and last form I had learned. He didn't recognize it. \"Come on then.\"\n\n\"I yield!\" Tyrell declared and there were gasps of surprise. \"Teach me Master!\"\n\n\"I have not been contracted as a weapons master. I am but a humble engineer.\" I replied.\n\n\"You have taught me humility this night.\" Tyrell said and declared me the winner.\n\nI handed off my weapon when the little shit struck out. I was forced to throw up a shield. When his blade struck it his bravado finally shattered. To teach him a lesson I touched his mind and awakened a minor fear. Just enough for him to learn humility as he cried out and dropped his weapon. I feared instead of gaining a student I had created an enemy. Damn! \n\nA slave offered to show me to my rooms. I left so the family could discuss Tyrell's behavior. The sensation came out of nowhere. It was like walking into cobwebs. Something intangible brushed against my thoughts. I brought up my defenses and the sensation withdrew. \n\n\"Who is the spider casting his web?\" I muttered but the slave remained silent. \"Your fear is a palpable thing.\"\n\n\"Such is the life of a slave.\" She replied with head down and eyes lowered.\n\n\"Well said. Thank you for your kindness.\" \n\n\"I do not deserve such high praise lord slayer.\" She stated and I looked at her again.\n\n\"Explain your words.\" I demanded.\n\n\"I have only recently come into Master Tyllen's service. Previously I served a lady. Upon her death I was sold. I was serving her the night she 'perished'. Many overlook the least and we often see more than is intended. I witnessed a darkness given birth. I wasn't always a slave. My father before his death was a gifted alchemist. I have seen such rituals before. I want to serve you. I will be loyal. These are your rooms, shall I run you a bath?\" She asked her voice no longer timid but hungry and sensuous.\n\n\"Get to it! I haven't had a hot bath in ages. I have been forced to bathe beneath icy cold waterfalls.\" \n\nShe opened the double doors revealing the princely accommodations. Traci powered up and across her arms was nestled Death Kiss. I closed the doors and my first action was to take my tools from my inventory. I removed Traci's restraining bolt and with her help deactivated it. I placed it back on her torso so that it only appeared that she could be controlled. I heard the soft sound of motors working. A large wooden tub rose from its hiding place in the floor. With a few hand passes water bubbled up from the bottom of the tub filling it.\n\n\"Would Master like me to scrub his back?\" She purred.\n\n\"About damn time you got some,\" Traci giggled. \"I am tired of being your bitch.\" She joked but the slave was so sure.\n\n\"That was a joke. A bad one. But a joke nonetheless.\" I said as I stripped down.\n\n\"Master is generous.\" She growled as she removed her pale blue rags. Did she mean my attention to her or the dimensions of my cock?\n\nI slipped into the hot water and the slave sat opposite of me. She produced herbal scents and dropped them into the water. The pleasant aroma had a relaxing effect. The slave began rubbing my feet and slowly working her way up. I was in no hurry.\n\n\"How did you father die?\"\n\n\"He was betrayed and murdered by something... I saw his corpse. I've never seen anything like it before. Something ripped his skull open and emptied it out. I never learned who destroyed him. One day perhaps, until then I survive and if fate is kind, I will hunt it down and slowly take its life.\" She said with such bitterness.\n\n\"During one of my trials I entered a cave with strange winged creatures. Could it be one of them?\" I asked and she shook her head.\n\n\"Shyracks don't leave wounds like that, Master is kind to offer up possibilities. Thank you.\" She said as her hands went from my inner thigh to my erection. \"Finally! So manly an organ you possess. May I?\"\n\n\"Be gentle.\" I chuckled as both hands worked my cock.\n\n\"I was sent to Sanctuary for training. I learned many pleasant things there. If there is something you want, I will gladly provide it. So stiff! Tell me how my breasts feel.\" She said as she sat in my lap. My cock slid just below her feminine slit. \n\nHer scarlet skin was free of blemish and that seemed to lead credence to her story. She might not have always been a slave. She was slim of build which made her breasts appear larger and her areolas were a soft pink that contrasted nicely against her dark flesh. She placed my hands on her tits and leaned down to kiss me. She rocked her hips slowly as our tongues dueled. I played with her breasts as she lifted her hips, took me in hand, and impaled her body.\n\n\"Master's cock is inside my unworthy body.\"\n\nI lowered my mouth to one of her nipples so I could suckle and lightly bite it. She gasped and rode me slowly. I sensed something was missing. I took a guess and pinched her nipple and gave it a save twist. The slave's back arched as she climaxed. Bingo! The girl was a masochist. I was okay playing the sadist. I grabbed her by the throat let my fangs drop and fed from her. One orgasm crashed into another. I felt the psychic bond form and licked the wound.\n\n\"You are mine.\" I whispered in her ear. \"You are my eyes and ears.\"\n\n\"I am yours body and soul.\" She whimpered. \"Break my ass please... I need it.\"\n\nWe stood so I could appreciate her beauty the better. She gripped the head of the tub for leverage, took as wide a stance as she was able, and thrust her round ass for my attention. \n\n\"I adore the dimples.\" I told her as I pulled her cheeks apart and eased two digits into her ass.\n\nShe thrust her hips against my hand to display her eagerness. I withdrew my fingers and placed my cock against her sphincter. The slave pushed back hard driving me halfway inside of her without prompting. That must have stung like a bitch. The head of my cock is rather robust, and she took it with little complaint. I slammed my hips against her, and she howled as she climaxed. She was a little orgasm factory. I wonder if all female Sith were like her. I pounded the living hell out of her, and she praised me for it. I cupped both her tits in my hands and loved the way they felt in my hands.\n\n\"Close.\" I growled as the doors swung open and one of Tyllen's female relatives walked in unannounced. I continued fucking the slave while she watched. I thrust one more time and buried my cock to the hilt as I came. \"Damn, I needed that! Come on in, the water is fine.\" I suggested as I pulled out and sent the slave scurrying with a slap on her ass.\n\n\"Nice.\" The newcomer commented seeing my erection.\n\n\"Thanks, I try to feed it regularly, but uh sometimes it goes hungry.\" I replied. \"Care for a lick?\"\n\n\"No. My husband would be obligated to murder you.\" She laughed. \"Though, if I were to be unfaithful that is a cock worth doing it over.\"\n\nI sat in the tub to soak. I gestured for her to sit. I told her I wasn't done with my bath. She sat and watched me wash up.\n\n\"So, what's on your mind... I don't believe we've been introduced. I am Saijar Kressh.\" \n\n\"I am Dyndell Krenn, Tyllen is my father. I want you to leave before you destroy my brother.\" She purred. \"He is immature but strong. If he is given time, he will make a fine heir for my father.\"\n\n\"How long have you been fucking him?\" I asked and she flinched. \"No, I didn't read your thoughts. I am a good judge of people. When you thought of him your nipples popped like flash grenades. I can also smell your arousal from here. I don't want a conflict with Tyrell. If I kill him, and trust me, if we cross blades again, I will cut him down. I just got back to civilization and I don't want this kind of petty shit.\"\n\n\"What makes you think you can kill my brother?\" She purred. This crazy bitch was getting off on the thought of me offing her sibling.\n\n\"This.\" I whispered and activated Force drain. \"Your pussy is soaked.\" I moaned and she whimpered as her aura shimmered into existence. \"Give it to me.\" I urged as the tendrils of her lifeforce slithered through the air. I tasted her essence and it was dark, twisted, and sweet. Her lust was so easy to tap into. I let it build just as I had with the large herd animal. \"You can touch yourself if you want.\"\n\n\"Yes.\" Dyndell groaned as her fingers slid between her legs. \"That's it.\"\n\n\"Master.\" Traci whispered breaking through the hunger.\n\n\"Shit! Thanks Traci.\" I said severing the connection but not before she climaxed. \"Well, that was nice.\"\n\n\"So weak, but good!\" She whimpered. \n\n\"Go fuck your brother so I can get a good night's rest.\" I suggested and she took that suggestion to heart.\n\nI watched Dyndell saunter out of my room clearly on the prowl. I could've tapped that but then I could stick my dick in a hornet's nest too. It was just as dangerous.\n\n\"That was fucking close.\" Traci laughed. \"You are getting better at that.\"\n\n\"I know. I want you on guard mode while I meditate. I don't dare sleep in this place. What do you make of the slave's story? Her father's death.\"\n\n\"No clue. I have nothing on record that matches that kind of attack. You?\"\n\n\"Nope. Scary as all hell though.\" I shivered. \"I am keeping DK close from now on.\"\n\n\"A wise tactic Master.\" Traci purred.\n\nI got out of the bath and dried off. I was still aroused but it would have to wait. I slipped into the pale blue robes set out for me. I sat in the middle of the ten-foot square mattress that rose from the floor just as the bathtub had. Traci drained the tub and it sunk away freeing up the space for other functions. The entire space was modular and functioned for whoever lived here. I closed my eyes and easily sunk into a meditative state. I felt Traci place Death Kiss in front of me and a sense of peace settled over me. I failed to touch the light side of the Force in this place. Here there was only hunger, anger, and a desire for power. I hadn't forgotten the attempt to probe my thoughts. Had it been Tyllen? It was far too subtle for Tyrell. Was there another player hiding in the shadows of the House of Krenn? Yes.\n\nEnergized and restored I opened my eyes and decided to seek out Tyllen and ask what he needed of me and get details. I went to the bank of tall thin windows and reached for the control that would open the blinds and let in the sun. A stray sliver of sunlight touched my hand and I snatched it back in pain. I hissed and felt my fangs drop down involuntarily. I was out of balance and my vampiric nature was taking over. I changed into my dark robes, pulled up the hood, and slid on a pair of gloves that went with the robes. Shit! I didn't like this unexpected turn of events. I needed to rebalance myself, but I needed to leave this place and find a quiet peaceful location to meditate but that didn't seem likely.\n\n\"Friend Kressh,\" Tyllen called out as he entered. \"I see you are awake. Good! Take your morning meal with me.\"\n\n\"I am glad you still look favorably upon me Friend Krenn.\" I replied.\n\n\"My son is headstrong and must learn to harness his anger. He has so much potential I don't want to see it wasted.\" He repeated the prior evenings concerns almost word for word. I found that strangely odd. \"You didn't find her attractive?\"\n\n\"Excuse me. I don't understand.\"\n\n\"My daughter. I sent her as a gift to mend fences as it were. Was she not appealing?\" He asked.\n\n\"She is lovely, and she didn't mention that you sent her. I didn't realize.\" I admitted. \"I have been in the wilderness too long for subtleties. Do not take offense.\"\n\n\"No offense Kressh. Tonight, will be without confusion I hope.\" He said smiling as we entered a new room. \"I dine here sometimes. It was decorated by my father. I find the art soothing.\"\n\nThe dark paneling was covered in the same wave designs I had seen in the hidden room where I had retrieved the second Rakatan holocron. This chamber was far less subtle with the obvious tentacles blended into the waves. Along with the rippling appendages were pale eyes with strange triangular pupils. He found this soothing, yikes. I asked him about the panels.\n\n\"My grandfather, an artist and gifted sorcerer, designed this room. We were close before his death.\" \n\n\"I hate to ask, but how did he die?\" I queried and he paused as he pondered whether to share or not.\n\n\"Ah, the cook promised me a special meal for your first day of work.\" He clumsily dodged the question. \n\nWe ate and I observed how he seemed to gaze upon the striking art with something akin to worship. It could have simply been that he missed his dead relative but somehow, I doubted it. The slaves moved unseen in and out of the room. There were as silent as ghosts and it took a measure of concentration to keep them in mind. \n\n'Ignore them.' The voice whispered. 'There are beneath your notice.'\n\nI touched the wrist of the next slave that took my current dish only to replace it with something new. I thanked her and the spell was broken. The voice growled as Tyllen blinked and smiled. \n\n\"Oh yes, thank you.\" He stated after the fact and then blurted out. \"He was killed.\"\n\n\"Not murder... simply killed.\" I stated seeking more information.\n\n\"Simply? No, the wound was quite unique.\" He said and I felt my body tense as he continued. \"Something ripped the top of his head off and well, emptied it out of its contents. The wound was carefully scanned, and no tools or weapons technology was discovered. The attack was solely biological in nature.\"\n\n\"So, tooth and claws then.\" I added sensing a teaser of information left unspoken.\n\n\"After a fashion I suppose,\" Tyllen mused. \"They found strange contusions all over the remaining skull, jaw line, and fractured cheek bones. Unusual don't you think?\"\n\n\"Absolutely. It is like something latched on and well did its thing.\" I stated with a shudder. \"Not a pleasant way to go.\"",
        "\"No. I agree. He went screaming when he became one with the Force.\" He replied in a soft gentle tone. \"Who wants dessert?\"\n\nI was given a data strip with the current statistics on one of Xim's transorbital fighters. It was my job to find a way of improving it and securing the ongoing benevolence of the death skull robots and their master Xim the Despot. I returned to my room and the sense of being watched which had once been minimal took a noticeable upswing. I was prying into things someone or something didn't want poked. Good! Stir the pot, let it simmer to a boil, and then start swinging at whatever crawls out of said pot.\n\n\"Honey, I'm home.\" I called out giving Traci a chuckle. \"We have a fighter to look over.\"\n\n\"Let's take a look.\" She replied. I gave her the data strip and she displayed the schematics.\n\nIt was a slender streamlined fixed winged assault craft with both laser turrets and one rack of missiles. Who was going to pilot the damned thing? Traci directed me to a crystal set on a gleaming silver pedestal. I passed my hand over it and waited. A slave appeared at the door and I told him I had a few serious questions about the fighter and its pilots. I expected Tyllen to appear but instead one of those cheerful death bots showed up.\n\n\"What is your question?\" It asked.\n\n\"Who or what is going to be piloting this craft?\" I requested.\n\n\"A battle droid of course.\" It replied and began to leave.\n\n\"Hold on, I need to know what sort of tolerances you blokes can withstand.\" \n\n\"That is priority data. Work without it.\" \n\n\"Then don't blame me if your Lord and Master gets an inferior product. If I set the tolerances too low, then they won't be agile enough and will fail. The opposite is true as well. Inform Xim and let him decide.\"\n\n\"Impudent meat bag!\" The robot growled and reached for its ever-present blaster rifle. Its arm jerked to a halt and without another word it turned and left.\n\n\"Let's keep going.\" I said and decided to focus on its in-atmosphere design. \"Can you create a virtual wind tunnel?\"\n\n\"I will ignore that rude question. Pulling up assorted atmospheric conditions across the Empire. Running first five simulations. Let's see shall we.\"\n\nWe were in our third batch of simulations when the doors were kicked open and no less than ten of the skull faced hell bots strode into my room. Amid his personal retinue was none other than Xim the Despot himself. I did the only thing I thought appropriate I dropped down and lowered my head.\n\n\"You show the proper amount of fear.\" Xim said in his modulated voice. \"One of my drones inform me that you are requesting secure data. It also states that you cannot produce a quality craft without it. Explain or die.\"\n\n\"Your Grace,\" I reached out for a title befitting a megalomaniac. \"As I tried to pass onto your drone. Without the strengths and weaknesses of the pilot how can I build a craft they are fully capable of utilizing. Flesh and blood pilots are subject to G forces which can and will cause a pilot to pass out or even die. Sure, we can compensate for that but if that should be damage during battle the craft and pilot are compromised. I just want to make something I can be proud of.\"\n\n\"It is about damn time somebody showed some balls and brains around here. What are those?\" Xim asked pointing at the simulations Traci was running.\n\n\"Atmospheric simulations, I call it a wind tunnel. It is a way of detecting flaws given the various planets in the Empire and beyond.\"\n\n\"Brilliant! Adaptive technology for any given atmosphere would be a huge leap forward. Pack your things, you are coming with me.\" Xim ordered and then turned to go. \"My shuttle leaves in ten minutes. Don't be late.\"\n\nThe parade of armored bodies left my rooms and I glanced at Traci.\n\n\"You heard the man, get your shit and get moving.\"\n\nI didn't have much to pack. I placed Death Kiss in my inventory where she'd be safe. Tyllen was all smiles and held up a fist full of glittering gems Xim had given him for purchasing my services. I had twice brought wealth and opportunity to the House of Krenn. Tyrell was going to lose his shit over this. I met the shuttle with time to spare. Xim had noticed the catamaran and requested one of his own but larger and far more impressive. Great. We boarded the transport and were soon on our way to the flagship of the fleet. I stared out the window as the ground fell away. I tried to keep my demeanor cool and unemotional, but I failed. This was just too exciting.\n\n\"Few are given the privilege to even see my flagship.\" Xim announced in his overbearing manner. \"Even fewer ever set foot upon her.\"\n\n\"I won't let you down.\" I declared as we left the atmosphere for outer space. The ship was shrouded on the dark side of the planet hiding in its shadow. \n\n\"Light her up.\" Xim ordered for a dramatic reveal of the city sized ship. \"Glorious, isn't she?! Unique.\" \n\nI recognized the ship. I had seen it before and Xim saw it in my eyes. \"You have seen her before. How?!\"\n\n\"I am a Force user.\"\n\n\"I know that.\"\n\n\"I saw her in a vision. But it wasn't here.\" I mixed lie and truth. Were they reusing assets or was the Pride of Korriban and Xim's flagship one and the same? \"Before you ask, she was parked in orbit around a radioactive hell known as the Viridian Pulsar.\"\n\n\"I see. I am not a Force user, but I believe you. Xim did possess a wireless connection between him and his war droids. I felt the communication pass between them.\n\n\"No anomaly or charted stellar mass with that designation.\"\n\n\"Where?\" Xim demanded.\n\n\"I believe it lies somewhere in the Uncharted Region.\" I said and Xim chuckled. Korriban itself was within the edge of that section of space. \n\n\"Perhaps I need to spend resources to chart the rest of the area and find this Viridian Pulsar.\" The tyrant pondered. \"It might prove beneficial.\"\n\nThe craft shuddered as we docked, and the engines shut down. I followed Xim onto his city ship. The docking bay was all too familiar. It wasn't just the exterior that I recognized. Xim watched me like a hawk. He judged every nuance I put out. When I recognized something, he knew it. It was useless to try and hide it.\n\n\"I haven't been this amused since... well in quite some time.\" Xim chuckled and I took that as a good sign.\n\n\"Your Grace, might I ask a question?\" \n\n\"You may ask, but I reserve the right to remain silent.\"\n\n\"Why are you here?\" I asked watching his body language intently.\n\n\"An excellent question worthy of your curious intellect.\" Xim replied and paused as we crossed the docking bay. \"I have an empire to manage and expand.\" Another long pause as the blast door opened revealing the corridor beyond. It was different from the one I had experienced. This possessed a three-way intersection with a corridor leading directly ahead while the Pride of Korriban didn't possess that feature. \"My father was killed.\" Xim said as we walked straight ahead. \"I bent quite a bit of resources finding out what did it.\" I noticed the use of the words killed and what when identifying the suspect.\n\n\"He wasn't murdered.\" I stated and Xim shook his head.\n\n\"A very similar killing happened here on Korriban. You might have pried it from Friend Tyllen. His family has had a similar loss.\"\n\n\"The damaged skull and emptied of its contents.\" I blurted out.\n\n\"Exactly the same.\" Xim chuckled at my loose tongue. \"Even the unusual enzymes in the wound. Your workshop Chief Engineer. Get settled in and dine with me later. I will send for you. If you want or need anything, requisition it. Don't disappoint me Kressh.\"\n\nThe large door split open revealing the ships foundry and works. It was like going from a small-town smith to an aerospace lab. Traci whistled and we introduced ourselves to the equal mix of sentients from across Xim's empire and assorted droids. I introduced myself and the sense of tension leaving them was nigh on physical. They were dreading a Sith taking over as imminent death hanging over them every moment. \n\n\"How many projects are we working on?\"\n\nI went from there. Most of the projects were focused on improving the war effort while a full third of them was solely biological in nature, specifically extending Xim's lifespan. Of course, a tyrant would want to outlive his subjects for as long as possible. I talked to the chief geneticist and he showed me the file that inspired Xim to even seek biological immortality. The catalyst was an enzyme found in the wound in his father's skull. It showed potent regenerative properties in the creature that had killed his father. It had become a passion of Xim's.\n\n\"Our latest work is the study of cells brought in that show remarkable metamorphic capabilities.\" He shared displaying the DNA chains side by side. \"Not the same creature.\"\n\nAs to not piss off the despot I focused the rest of my energies on studying wing performance in various atmospheres. Fuselages would come later once we made some progress. When I mentioned an adaptive wing, it excited the engineers. First, we needed to isolate the best shapes and then go from there. That first day went by quickly. I showered and dressed in fine clothing provided by Xim. I walked on eggshells around a man that had thousands of worlds under his thumb. Would I see beyond the intricate body armor tonight? No less than six death bots escorted me to the top of the ship. The droids left me before a massive blast door that bore the iconic skull sigil that was the sign of Xim the Despot. The doors split open revealing a huge living area. It was modular in the same way my own room had been.\n\nI stepped in and the blast door clanged shut behind me. I walked into the center of the chamber as the sounds of hydraulics hummed around me. The room changed to fit Xim's current needs. The lighting softened and I noticed a distinct lack of obvious security measures. I felt someone moving through the shadows around me. They tried to flank me and come up from behind. I looked over my shoulder to see a stunning human female with dark red hair. She wore dark silks and a distinctive diamond necklace where the stones had been cut into the shapes of skulls.\n\n\"Xim?\"\n\n\"Surprised?\" She purred. \"Good. You are one of a very few that know what I look like. I prefer to use the armor as a persona. Let us sate our appetites.\"\n\n\"You aren't angry with me.\" I stated as I followed her to a table.\n\nFeminine droids appeared and served our meal to us. Each portion was dutifully scanned for toxins and other poisons. \n\n\"To answer your earlier statement. If I didn't want you prying you never would have gotten this far.\" She laughed. \"I didn't succeed without a measure of gambling. I think your curiosity will outweigh your desire to free your people, if they are in fact your people.\" She gestured and a thermal scan revealed my vampiric nature. \"Room temperature is interesting, don't you think?\" \n\n\"Definitely. The meat is quite tender.\"\n\n\"We both have secrets. I have already dedicated myself to an exit strategy.\" Xim explained and gestured a second time. The soft hum of hydraulics filled the air as a glass cylinder rose from the floor. Inside it was a near human female with pale skin and notable deep-set eyes. \"The species is from this area; they call themselves the Shi'ido and they are shapeshifters. I learned of their long-life spans after a little persuasion. That specimen is an altered clone with all of their abilities and tissue compatible with my own flesh.\"\n\n\"You are tired.\" I said and Xim nodded. \"Not done but getting there.\"\n\n\"I like to think ahead. So, what is your story?\" Xim purred.\n\n\"I found myself here after a hyperspace accident. I was about to insinuated myself into Sith society when I arrived in the city. I didn't know you had seized the planet. I spent time in the wilderness preparing and got caught off guard.\"\n\n\"I understand the value of information and strategic intelligence.\" Xim chuckled. \"In that same vein I am a student of the past. Why make the same mistakes others have made when you can make all new ones. If you are patient enough you find threads that weave a pattern across the entire galaxy. A web that is as ancient as life itself.\" She said frowning. \"Inevitable as death.\"\n\nShe gestured again and a hologram filled the air above our heads. It was a map of the known galaxy. One by one first slowly and then much faster a star would flash and turn crimson. There were ten then a hundred, a thousand, and finally tens of thousands of stars were red. The galaxy dripped blood as Xim explained to me the legend of the Old Ones. They were a primordial race that long faded from those worlds, but the memory remained. Xim hinted that the Old Ones legacy survived in the form of a monster, a monster that ripped open the skulls of its victims and consumed the contents. \n\n\"The story of this thing is the story of every world where sentient life has arisen. I once chalked it up to common mythology like sky gods, but I was wrong. Across my empire I have relics.\" She said with a sweeping gesture. The hologram changed. Gone was the bloody galaxy and in its place was the swirling tsunamis and woven tentacles in the waves of destructive energy. The commonality among so many cultures separated across time and space was staggering. It was like the galaxy was having a nightmare and this was firmly entrenched there. \"Get your rest Kressh, you have a fighter to build for me.\"\n\nI was dismissed.\n\nThe walk back felt longer somehow. I was haunted by the scarlet galaxy. It dripped the blood of a race that went extinct thousands of years ago. They left behind a persistent species that fed on the very seat of intellect of all sentient races. Anywhere this monster is a horror. A thing that should be destroyed on sight. My six guides stopped short of the door to the workshop.\n\n\"Tyllen is dead.\" \n\n\"How did he die?\" I asked the sense of panic rising.\n\n\"As his father did before him. He left you fifty slaves to honor your friendship. Sleep well.\"\n\nThe workshop was still active. There was a continuous cycle of engineers taking turns working on various projects. I wasn't tired. I attacked the most common atmospheres within the populated worlds in the galaxy. Some were thicker, some were more active, and others were extremes of temperature. The image of Tyllen with an empty skull haunted me. Did he scream when this thing ripped the top of his head off?\n\n\"Shit!\" I cursed and stalked away with everyone watching me.\n\n\"Kressh,\" Traci whispered. \"Xim has given me access to all of his historical files. Why?\"\n\n\"Look for common myths, plant or animal life, minerals, hell... anything that ties them together. Remove any item that doesn't fit that criteria.\"\n\nA chair rose out of the floor as the room sensed my desire to sit. I took advantage of it and sat while a massive list of elements filled the air. As we watched, the other engineers drifted over to see, elements winked out of existence as they were eliminated. The list popped and crackled quickly at first as most of the processing power was spent running this request. The disappearing elements slowed as basic elements remained like oxygen, nitrogen, and the like. Once those were ignored, since they were necessary for life, what was left was horrifying.\n\n\"What the hell is an Old One?\" A Twi'lek engineer asked. \"Wait, are you talking about the Primal Ones?\"\n\nEcho.\n\nA single drop of terror in a small body of consciousness. \n\nThe ripples raced outward touching the others.\n\n\"The Keeper of Secrets?\" A Togrutan whimpered.\n\n\"The Dreamer in the Depths.\" An aging Echani muttered softly.\n\nA dozen other references to myth and Lovecraftian terrors. I thought of Great Cthulhu and others. He stood out because of his obvious tentacles. The same tentacles woven into the art of a thousand civilized worlds.\n\n\"Traci, do have a detailed scan of the wounds suffered by Tyllen Krenn?\"\n\n\"I do.\"\n\n\"Can you isolate the structural damage and display them?\"\n\n\"Displaying requested image.\" She replied.\n\n\"Highlight any and all crushing damage. Good.\" I stated as green markers half and crescent moon shapes appeared. \"Display separately an image of Cthulhu.\" There were murmurs from most of the engineers as the bloated octopus headed humanoid shape appeared. \"Lose the wings. Good. Not very stealthy looking, is he? That would never be able to sneak up on anyone. Give him a thin muscular build. Now we are getting somewhere, I think. Try and match the facial tentacles to the wounds. Adjust until you get a match please... if possible.\"\n\nThe images overlaid one another. Traci went to work adjusting, subtracting, and readjusting until a match was possible. I had hoped I was wrong. The circular shapes matched the suction cups on the interior of the facial tentacles. The height required and general shape also left another glaring fact.\n\n\"It is bipedal!\" One of the engineers cried out. \"That is no mindless monster.\"\n\n\"It has to be sentient.\" Another whimpered.\n\n\"Traci, scan the damn ship for errant life forms. Don't leave out a square millimeter!\" I ordered. \"I want to make sure one of those... things... isn't aboard.\"\n\n\"Yes Master!\" She replied and went to work.\n\nIt would take time to search a ship this size. I ordered the engineers back to work. They were happy to be back to thinking about anything besides the nightmare hovering over the center of the workshop. Traci saved the file and then resumed showing various aircraft wings and how well they functioned in different atmospheres. I closed my eyes and slipped into a meditative state. I reached out and looked for another Force user on the ship. I suspected that these things could mask their presence. If they had learned Force cloak, I might not be able to find them.\n\n\"Master,\" I whispered. \"I need your help.\"\n\n'Find my third holocron, your answers are there.' He sent back silently.\n\n\"Where?\" I asked.\n\n'I left a map on Korriban. It has been there since before my people departed the planet.'\n\n\"A map... it could be anywhere!\" I snapped.\n\n'You have already seen it.' The Rakata declared amused.\n\n\"Thank you Master.\" I acknowledged his wisdom. \"Let's start at the beginning.\"\n\nI replayed everything from my dramatic arrival to the present. I didn't remember seeing anything during my time with the derelicts. Was it something at the Sadow fortress? No, the only maps were ones of the structure itself. The space port... I never got inside, and the exterior had no maps. That left the Krenn mansion. I remembered the dining room, no... my rooms... no. I growled in frustration. It was driving me insane. I was missing something... wait! The garden! It was five hundred years old. It hadn't changed in all that time. I needed another look at it.\n\nI leapt to my feet and ran out. A war droid stood just outside. I requested an audience with Xim. After a brief pause I was asked why I needed to see the despot. I asked to pick the slaves owed to me by the Krenn family. I was given leave under full guard of course. I was in the employ of Xim now and where I went the war bots would follow. A full score of these deadly mechanizations were allotted to me for my trip and a ship capable of carrying my property. \n\nI didn't want the damn slaves. The first chance I got I'd free them. I wanted a chance to see the garden again. I brought Traci with me so she could scan it and together decipher how to read it. The midsized warship left the docking bay and headed for the surface. It was far larger than was required but it did make a statement. I was representing Xim and not to be questioned. Unlike my first trip inside one of Xim's ships, this time my attention was turned within. It was useless to try and sense a Force user within Krenn's mansion. Sith by their very nature are attuned to the dark side of the Force. If one of those things was lurking inside Tyllen's home, it would difficult to detect. ",
        "\"What if it is a Force user? Is that why it feeds on brains?\" I uttered those terrible words.\n\n\"What are you going to do Master?\" Traci asked while the battle droids ignored me.\n\n\"Kill it.\" I replied and that did get their attention.\n\n\"We are ordered to protect you.\" Intoned the droid with the gold skull emblazed upon his torso.\n\n\"Good. Visit first and then see if this fucker shows itself.\" I laughed.\n\nThe heavily armored ship made a show of circling the center of the city before landing at the space port. It took four speeders to carry us to the House of Krenn. Alerted by our flyby the full honor guard was prepared to greet us. Tyrell looked splendid in his blue robes. Did this mean a shift of power away from the Sadow Clan? Or was there a political marriage in the works? Whatever the reason for the change it was time to collect my slaves, see the garden, and if possible, kill the thing lurking within the mansion. My babysitters and I left the speeders and Tyrell's shock was too great to hide when he saw me leading the war bots instead of being led by them.\n\n\"Hello Friend Krenn.\" I greeted him. \"I am sorry about the death of your father.\"\n\n\"We share that, come... walk with me.\" He offered.\n\n\"Might I see your garden again?\" I asked and he especially liked when I said his garden.\n\nThe droids never left my side as we crossed to the rear of the house. We stood on the balcony looking out over the myriad blooms so that Traci could scan it for later deciphering. Once she signaled that she was finished we took the steps into the garden. Tyrell and I discussed the death of his father and revenge.\n\n\"There are catacombs under the house.\" He began his rage barely contained. \"I believe it has retreated there. It is where we bury our honored dead and keep some of the families greatest treasures.\"\n\n\"I think I can honestly say that your father would be proud of your control over his death.\" I stated watching his reaction closely. \"I offer what support I can to aid you eliminating this threat to your family. If you will have it. If not, I understand.\"\n\n\"My father was strong in the dark side and yet,\" he stated as he paused contemplating his own odds. \"I would be grateful. There are rituals to see to before the burial. I understand you wish to pick out the slaves my father gave to you. Please take whichever ones you desire. I would seal the breach between us.\"\n\n\"I am glad to hear that. If you require my assistance, I will be in the slave quarters.\"\n\nA part of me wanted to take the most beautiful females but I felt that would just piss him off. Instead I selected the ten I found the most attractive and the rest I determined by how strong in the Force they were. I planned on freeing them before I returned to my own time anyway. My first choice was the female who had shared a bath with me. Once chosen I sent them off to the shuttle as a desperate plan formed in my mind.\n\n\"What if there isn't just one of those damn things?\" I muttered and Traci replied.\n\n\"I know that expression, what are you planning?\"\n\n\"It is evil, but it would be a last-ditch action you understand.\" I laughed.\n\n\"Are you going to share or not?\"\n\n\"How familiar are you with Xim's ballistic arsenal?\" I asked and Traci giggled. \"I don't suppose they have anything like a bunker buster.\"\n\n\"Master?!\" Traci exclaimed seeing my thoughts quite clearly.\n\nI sent her back to the shuttle as Tyrell summoned me back to the main house. As I crossed the courtyard the war bot with the gold skull informed me that Xim has decided to 'loan' me one missile if needs must. I wonder if Xim shared the fire for revenge that Tyrell did? Or was it something else? It was difficult to tell with galactic despots.\n\nThe House of Krenn invited me to attend the rituals for sending their patriarch off to the next life. I was unfamiliar with the rites but went along for their sake. Strong male slaves, naked from the waist up, carried Tyllen's coffin down to the catacombs. Tyrell followed directly behind and in Sith custom I came right after even ahead of the females of the family. I was prepared for the assault. It was as subtle as it was insidious. The others drifted into a quiet almost hypnotic trance. I fought off the mental miasma and selected Death Kiss from my inventory. I didn't draw it, but I waited for it or them to reveal themselves.\n\nThe sluggish procession meandered to the slot prepared for Tyllen. The coffin was lowered, and the stone lid was lowered into place. All of them turned to return except one of the male slaves. He stood there transfixed to the spot. I realized too late that even the robots had left as well. I drew my sword and waited for the inevitable. The slave drunkenly stumbled forward deeper into the catacombs. Sith runes and art decorated the walls and sarcophagi. Generations of the Krenn family were entombed here. If I read the numbers correctly, we were heading for the older portions of the crypt. Death Kiss squirmed in my grasp eager to feed.\n\nThe last of the lighted crystals faded behind me. The darkness might have frightened others but to me it was an old friend. I saw as easily now as I did above in the well-lit mansion. I felt my lips curl into a smile.\n\n\"UNNNN!!\" The slave groaned but this was hardly an erotic sound. He was clearly in pain. I moved closer but not too close. \"AHHHH!!\"\n\nI caught up and the slave was kneeling, blood or fluids poured from his open mouth as a sick crunching sound came from him. Fearing a chest burster or worse I prepared Force lightning in my free hand. It didn't erupt out of his chest but his head. The slave's skull cracked open and it tumbled out. There was a wet slapping sound as it slithered out and tried to evade my blade. The host let out a final gasp of breath and died. Death Kiss speared the newborn thing and I felt a surprisingly amount of energy race up the blade. Its death didn't go unnoticed. The soft angry hisses were out of my line of sight. Instead of moving deeper I chose I defensive position. I had a wall to my back but whoever or whatever was out there was being reluctant. \n\n\"Let's see if this does the trick.\" I chuckled as I blasted the corpse with a small bolt of Force lightning. The hissing got louder and closer. \"That did the trick.\"\n\nThey were short squat things, low to the ground, appearing as a fleshy looking cross between a spider and an octopus. They were uniform in size, about the size of a small monkey and each giving off an enormous amount of dark side energy. There was a dozen or so at first, but more and more were appearing. I pulled the shadows around me but that seemed to alert them to my presence. Too late to change my tactics now I was soon surrounded. I went on the attack lashing out with blade and black fire. A second group of them cut off my escape back up the steps, but that wasn't where I wanted to go. I felt a pulse of power from below. If it was a treasure, I would claim it. Bursts of energy came to me via Death Kiss. She greedily drank their lifeforce and took the lion share for herself of course. I cleaved a path through them and reached the steps going down. I leapt down clearing my landing spot with a gout of hell fire and burned three of the fuckers to ash.\n\n\"How many of you are there?\" I growled. \n\nThey grouped at the top of the stairs and quite skillfully moved as a group down towards me. I threw up a protective sphere and looked for my prize. I reached out and felt it just below me. One more level to go. I smiled and strengthened my resolve. If it was this damn deep it was worth the effort, I hoped. The mental assault was damn near overwhelming. Six of them hovered out of the shadows. They were roughly humanoid and looked just like the hologram Traci had created. Bipedal octopus headed entities with dead white eyes.\n\n'Surrender!' They sent in one powerful psychic voice.\n\n\"No!\" I growled as I fired back seeking the weak link in their collective. \"Found you!\" I screamed as the third figure on the left grabbed its head and silently screamed. \"Cowards!\" I howled as they fled my blade. I killed the one I had stunned. \"Tastes the same.\" I commented as I pulled Death Kiss from the things chest. \"I didn't know that energy had a flavor.\"\n\n\"You do now.\" She purred.\n\nI maintained the shield fearing having my brain torn out of my skull. I think they feared Death Kiss more than me. She was an instrument they could not influence. I tightened my grip on her and she moaned louder. The creatures had withdrawn but I felt them close. They were planning something. Maybe once there were enough of them, they would attack again. I was wrong. A sudden burst of movement from below and I lost all sense of their presence. I had broken their morale, or so I thought. I took the steps two at a time. I was pulled towards the relic and even caught a scarlet gleam in the distance. Was it a ruby? Was it a jeweled mask? I was wrong on both accounts. \n\n\"Holy fucking shit...!!! It's a goddamn holocron... I've never seen one like it before.\" I gasped when a mind reached out for me. \"UNNNNNN!!! Get out of my fucking head!!\" I screamed as the crushing weight slammed me to the ground. This was no battle sword or spell could win. I clenched my eyes shut and brick by mental brick erected a wall. It toppled as the ancient mind struck out again. Instinct kicked in and instead of shadows I wrapped my mind in the Ebony Flames. Like a dark phoenix I threw out my arms and lashed out.\n\n\"BURN!!\" The ear-splitting roar was close. I shoved down my panic. I had seen the vids of the empty skull. \"Not me!! I will not end like that!\" The black fire erupted outward in an ever-expanding psychic assault of my own. We went back and forth, and I caught a glimpse of it. The wordless scream burned my throat as I launched Death Kiss into the thing. Even the briefest glimpse was enough to push my sanity to the edge. \"Xim!\" I screamed. \"Now! Fire the damn missile now!\"\n\nShe never hesitated. I felt the white-hot glee as she gave the order. I snatched the holocron with one hand and yanked Death Kiss back with the other. My last rational thought was teleporting back to my catamaran. Weeping I knelt on the deck as the missiles, two of them, slammed into the roof of House Krenn. The explosion blossomed upward shattering the night. The bellow of the thing below drowned out the explosion. It would haunt me and others to our dying days. I passed out as the last of my strength faded. I awoke in someone's bed and not on the deck of my vessel.\n\n\"Make love to me.\" Xim begged as she pressed her body against mine. \"I will give you the stars if you ask.\"\n\n\"Not the stars, just one.\" I told her as I rolled her on top of me. \"Just one.\" \n\nI let my lips brush hers and she kissed me. Her hunger drove away the nightmare. I slid my fingers into her long hair and held her. Xim's tongue invaded my mouth as it must. She was the aggressor and I her conquest. I pushed occasionally and that allowed her to retake lost territory. Our hands roamed over each other's bodies and we gave and took from the other greedily. She straddled my waist and examined my erection.\n\n\"Mine!\" She growled happily. \"Let us see how this feels.\" Xim announced as she trapped my erection between her breasts. \"Yield! None may stand before Xim the Despot!\"\n\n\"Xim's twin moons are mighty indeed.\" I moaned as she teased the hell out of me. \"I offer up my tongue to invade your depths when it suits you.\"\n\nWe switched into a sixty-nine position and she let out a squeal of delight as I used the serpent tongue technique. I teased her clit and that sent poor Xim into retreat as she climaxed. Round one to the invader. She took me to base in a single blow and deepthroated me like a champ. I withdrew my tongue and lashed her asshole causing her to come up for air.\n\n\"Trying to flank me?\" Xim growled as I drove my tongue into that fine ass of hers. \"Gods... sneaky tentacle you have there Kressh!\"\n\nI was close but she already knew that. The evil little shit double fisted me and sent me over the edge with a howl and a spurt down her throat. She thrust a fist triumphantly into the air and then it was time to break the tie. I went on the attack, rolled her onto her belly and slid into her. I snatched a fistful of her hair and pushed her head down as I began to thrust.\n\n\"UNNNNN... damn you are hard already!\"\n\n\"Ahhh!! Tight! I am going to break you.\" I said in challenge. \"Now... ass up and head down!\" I ordered as I swatted her on the right cheek. \n\n\"MMMMMM!!\" She grunted as I thrusted. \"Harder!! Fuck me harder!!\" Xim demanded.\n\n\"What a slut.\" I laughed as I gave her what she wanted.\n\n\"Arrrrgh! So damn close!\" She moaned. \"No... not inside.\"\n\n\"Shut up slut.\" I snapped as I pulled back and stopped cold. \"Well?\"\n\n\"Fuck me... please.\" Xim begged. I slammed it home and we came at the same time. \n\nI pulled out and she sprang into action. I felt the cold steel of her dagger at my throat as she straddled me. There was murder in her eye as I felt an edge of the weapon draw a drop of blood. \n\n\"You called me a slut!\" She snarled as my cock hardened. It rose and slid right between her ass cheeks. \"Seriously?! I thought I was the only insatiable one in this part of the galaxy.\"\n\n\"Fuck me... please.\" I purred as I locked eyes with her. \n\n\"No.\" She snapped as she rocked her hips and let my cock glide between her cheeks.\n\n\"I'll have to raise my wager then.\" I chuckled summoning the double dragon.\n\n\"By my father's beard... two!\" Xim gasped in surprise. \"You Sith are full of surprises. You owe me two missiles.\"\n\n\"Well your Grace... there they are. Two for your pleasure.\" I laughed and she chewed her lower lip. \"Let me set them and then you can have your way with me, if you like.\"\n\n\"NO! I will do this myself. I am quite sophisticated.\" She informed me as she rose, took aim at both, and bent her knees. \"By the dread star beast of Malachor V! I never...\"\n\nShe sunk down slowly impaling both holes at the same time. Was Xim an anal virgin? It was possible. What man in his right mind would even bring up sodomizing a galactic terror like Xim? She sat there adjusting to having two cocks in her. If I was a judge of expressions, I'd call her happy. Her hips rocked slowly, and I grunted as her vice like ass worked my one cock nicely.\n\n\"Damn tight!\" I whimpered. \"I adore your ass my conqueror. I surrender to your hunger.\"\n\n\"I knew you would. My poor ass feels so good. I never knew it would feel so amazing.\" She moaned and yet a sense of fear engulfed her and radiated outward. I wasn't sure I should bring it up or not. \"So deep in my ass! Take over! Pound me!\"\n\n\"Assume the position!\" I whispered. \n\nXim rose up, crawled towards the side of the bed, and thrust that perfect ass of hers skyward. \n\n\"Like this?\" She groaned.\n\n\"Perfect, now tell me what you want.\" I ordered and her body shook in need.\n\n\"Your... your cocks!\" She begged as she reached back and pulled her ass cheeks apart. \"See?!\"\n\nI knelt behind her, activated serpent tongue and slithered into both her holes first. I thought maybe it would help drive the fear from her, it didn't. I withdrew my tongues and set the heads against her slit and puckered hole. I pushed slowly.\n\n\"So good! UNNNN Fuck!\" Xim whimpered. \"Fuck me... hard!\"\n\nI did. Once I was seated properly, I thrust into her. I picked up speed and soon the slapping sound filled the air. I was relentless. She came twice before I was on the verge. I halted my movement, placed my hand on her head, and gripped her firmly.\n\n\"What do you want Xim?\" I asked fighting the urge to climax. \"I am right on the edge. Can you feel it?\"\n\n\"Yes! I want to feel it... you... come inside of me.\"\n\nI pulled her head up, kissed her, and then continued. I fought my orgasm as long as I could. I slammed one last time as I lost control. She broke the kiss and howled. Delighted and satisfied Xim rolled onto her back as two service droids began a bath for me.\n\n\"Wash up, I... gods... I... have something that needs doing. Wish me luck.\" She said her color draining and her lower lip quivering.\n\n\"I have every confidence in you.\" I declared as I stepped into the hot water in the tub and sat down.\n\nXim gestured and the tube carrying the clone body rose up, but this time a team of medical droids rolled in. Xim was given an injection and her body set onto a table that rose out of the floor. I was about to rise out of the tub when a prerecorded hologram began playing.\n\n\"I never thought I would find someone I trust.\" Xim intoned nervously. \"One of your people cast the runes and prophesized my death. I have analyzed every syllable and found an escape clause. There is only one way.\" She said and then paused as the process began. \n\nI watched as the body from the tube was removed and a second table rose up next to the one holding Xim. The droids split up into two teams. They worked in perfect harmony. The skulls of both were opened and I watched in horror as the brains were removed and swapped. They were connected to the nervous system of their new bodies and the top of the skulls restored and sealed. Two bacta tanks were raised and one body to each were carefully lowered. I could see they were both breathing shallowly. The bacta, a regenerative material, healed the wounds leaving no scars. It took hours but I was far too engrossed to do anything but watch and wait.\n\nXim opened her new eyes and blinked. She smiled from the tank and I found myself smiling back. She mouthed the words 'it worked'. Instinct kicked in and her form changed before my eyes. The Shi'ido powers were now Xim's and along with it, the extremely long lifespan. An elegant mirror was brought out and the strong willed and clever despot took on several different shapes in short order. I saw the will behind the being that had forged an empire.\n\n\"I have deciphered the garden.\" Traci sent while I waited for Xim to finish healing. \"The pillar is the destination. I have consulted several ancient star charts and have even found an abandoned hyperspace jump to get there. I await you at your leisure.\"\n\nI examined the planet and it seemed like the Force was guiding my steps. The world in question was none other than Tython, home of the Je'daii Order. It was in the Deep Core and outside the control of Xim. I closed my eyes and reached out to the light side of the Force to attempt to find balance. I pushed out the anger and fear. I welcomed peace and serenity. I heard the soft splash as the bacta tanks were emptied. I opened my eyes feeling better than I had since I got here. \n\n\"Kressh.\" Xim called out as she showered off the fragrant bacta fluid. \"I did it.\"\n\n\"Now I understand.\" I replied. \"I sensed your trepidation.\"\n\n\"Excellent choice of words, trepidation. I was frightened to my core.\" She admitted. \n\n\"It will pass now that you have achieved your goal. I need a ship.\" I asked. \"Come with me.\"\n\n\"What is the destination?\" Xim asked which gave me hope she wasn't going to kill me since I alone knew her secret.\n\n\"The Deep Core.\" I said leaving out my destination. \n\n\"Where are we going?\" She asked again and I didn't miss when she said we. \"I have a private cruiser and we have your slaves to help us properly man it.\"\n\nThe Deep Core:\n\nWe were going to be locked within the confines of Xim's starship, the Star of Alderaan, for two weeks. I learned the ship had been a gift from a prince of the realm as a token of affection. Xim and I decided to spend at least ten hours each day apart. She would practice her shapeshifting while I tapped into the wisdom of the strange holocron as it was listed in my inventory. The gate keeper of this device was a member of the reptilian race known as the Kwa. They were long extinct by the time the Old Republic was established.\n\n\"I have three things to pass onto you.\" The keeper stated. \"The first two are related while the last I will mention first. It is common practice for a master to create their own holocron. It will be my pleasure to teach you how to fashion and program your own holocron.\""
    ],
    "authorname": "Lost Boy",
    "tags": [
        "double penetration",
        "ffm",
        "oral",
        "threesome",
        "two women one man",
        "anal"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-07"
}