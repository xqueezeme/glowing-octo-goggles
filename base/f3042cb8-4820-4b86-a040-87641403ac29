{
    "title": "Dead and Horny Ch. 04",
    "pages": [
        "Hi all!\n\nSo this chapter of Dead and Horny actually overlaps with some events from Home for Horny Monsters Book 3, which you will see in the words ahead. If you haven't read it yet, you may be entering spoiler territory, so watch out!\n\nI've been very busy with real life stuff, but doing my best to keep my schedule. Don't forget that you can still click on my bio to see my release schedule for this story and others. Definitely don't forget to rate and comment, I love reading through them when I get the time.\n\nAnyway, I am super busy, so no long blog from me, so why don't you dive right in and learn a few new secrets, and see a familiar face!\n\nChange in Plans\n\n\"This is absolutely horrifying,\" Dana said, looking at her left shoulder. She was lying on her back on an operating table, and the skin of her shoulder was splayed open like an ominous dissection to reveal the musculature underneath. Hunched over her stomach was an unconscious man in his sixties, his glasses askew on his face. \"If I was still alive, I would never eat chicken again.\"\n\nLily stood over them both. She had one hand on the man's forehead, her thumb and pinky on his temples. In her other hand was a needle threaded with sutures, and she wore a labcoat and safety glasses.\n\n\"Shut up, I'm trying to concentrate here.\" Lily's tail had a sharp barb on the end, and she was using it to hold the tendon of Dana's bicep in place while she sutured it into some holes she had drilled. While Lily was stitching Dana up, she was in the Dreamscape with Dr. Feldman, one of the teaching vets at Colorado State, attending his classes.\n\n\"This probably would have been better at a hospital,\" Dana noted, watching with interest as the sutures moved in and out of her bone. There was no pain, but definitely an odd, buzzing pressure. \"I'm sure they have better equipment.\"\n\n\"Hospitals have way more cameras than a vet school does. Now shut the fuck up, he's going over some new technique on a horse and it might help here.\" Lily's eyes flashed, and she gazed into the distance for a couple minutes before continuing. \"Nope, doesn't apply. Well, unless your hoof is fucked up.\"\n\n\"Oh?\"\n\n\"Yeah, I'm supposed to just shoot you and make glue out of your bones.\" Lily let go of the doctor's head and used both hands now, her tail withdrawing. \"We just need to keep it in place long enough for your body to heal it.\"\n\n\"Yeah.\"\n\nAfter Lily had found Dana, the two of them had broken into the vet hospital to try and find an x-ray machine. Instead, they had run across Dr. Feldman, who was staying late to go over some of his notes. Lily had knocked him out and, once they had found a room to operate in, had enrolled in Dream University. While Lily swore that she was just getting the necessary info, Dr. Feldman had grinned more than once in his sleep.\n\nNow that the first tendon was in place, Lily began working on the second. This one went much quicker, and once she was done, Lily pulled the pins out of Dana's skin that held her wound open.\n\n\"By the way, I'm way outside your HMO,\" Lily told her while holding her skin flaps together. The healing took a little bit, but once Dana's skin sealed shut, all she had left was a ragged scar.\n\n\"It's okay. I gave a fake name in the lobby.\" Dana waited a moment before flexing her hand, then tried to lift her arm a couple of inches. There was an odd pulling sensation in her shoulder, but everything else felt fine. She had been right in her assessment that her injured cells needed to be pushed together again, and apparently her tendons took a bit longer than skin to heal. She wondered if it would be different if she had just eaten, but now was not the time to think about food. Her hunger had returned, and the professor was starting to smell like beef jerky.\n\n\"Let's get the good doctor back to his office. Unless you're going to eat him?\"\n\n\"Sadly, no.\" Lily tossed the safety glasses across the room and pulled off her surgical gloves, all of which puffed into pink smoke. \"Other than banging a few co-eds, he's a decent guy. Even offered to tutor me after school. Help me work on my technique.\" \n\n\"You totally did him, didn't you?\"\n\n\"Who, me? I never kiss and tell, darling. Besides, I wanted the full May-September college experience, you know? Be with a man who reminds me of my father.\"\n\n\"Gross.\" Dana sat up and slid out from under Feldman.\n\n\"Daddy Feldman didn't think so.\" Lily licked her lips and winked. \"Here, let me get him. I need your arm in good condition and don't want to try and fix you up again.\"\n\n\"Could you fix me, though? Without him?\"\n\n\"I did go through an entire course on animal surgery, so maybe.\" The succubus chuckled. \"If we come across a dog in distress, I have a few tricks that could help.\" She tossed Feldman over her shoulder and Dana made sure the operating table was cleaned up properly, then threw away the scalpel, drill, and needle. The last thing she needed was for a zombie outbreak to occur because they had been sloppy. She picked up her backpack with her good arm and headed for the exit.\n\nShe held the door for Lily, and the two of them returned Feldman to his office. Once inside, they propped him up in his chair. He had a stupid grin on his face and a small wet stain on the front of his pants.\n\n\"That's so gross,\" Dana said, twisting her face into a frown.\n\n\"Oh, we are way past judging people for cum-stained underwear. C'mon, let's get out of here.\"\n\nLily led the way through the dark halls of the vet teaching hospital. They snuck outside a side door and walked a few blocks in silence before Lily threw her arm around Dana's shoulders.\n\n\"How does it feel?\" she asked.\n\nDana flexed her arm. The weird sensation was passing, and her arm felt mostly normal. \"Fine, I think.\"\n\n\"Good. Because I need you to be functional for what's going to happen next.\"\n\n\"You mean the drive back? I really only need one arm for that.\"\n\nThey passed under a street light long enough for Dana to see the maniacal grin on Lily's face.\n\n\"Oh, we're not going home. Not yet. Remember that guy I fought with at the hotel?\"\n\n\"The one you knocked out?\"\n\n\"Same. When I was going through his head, I spotted something interesting. You see, we aren't too far away from one of their storehouses. Well...not far is a relative term. They have a place in Montana where they took the things they found in Unearthly Delights.\"\n\n\"But isn't that place heavily guarded?\"\n\nThe succubus laughed. \"Well, yes and no. Between the two of us, I think we can be in and out before they know we're there. Besides, I know for a fact that they have the marbles, and I even saw a rough sketch of that necklace thing inside Cyrus' mind.\"\n\n\"I don't understand.\" Dana stopped walking and put her hands on her hips. She had given up hope on finding the lost items from the thrift store. \"I thought these people were too dangerous to mess around with.\"\n\n\"Well, they are. So here is what you need to know. Right now, there's a really good chance they are trying to track us down. It's only a matter of time before they find our trail. If we head back to the house, we lead them there, and that's no good. I feel like having assholes on the front lawn of Mike's house is a bit cliche. So, we lead them somewhere else, and they definitely won't be expecting us to go to them.\"\n\n\"And?\" Dana expected there was more.\n\n\"After we raid this place, I know somewhere we can go to lay low for a bit, until they're off our trail. Well, your trail. You see, I can be quite impossible to trace. I can fly and change shape. You? Not so much. If we're lucky, they still have no idea who you even are, and I intend to keep it that way. But they have access to everything. Cameras, records, the whole nine yards. When you drove away from the hotel, I'm willing to bet that they got a rough idea of where you were headed just by monitoring security cameras. Crazy big brother stuff.\"\n\nFuck. Dana looked around the neighborhood they were in, and grabbed Lily by the hand and led her out into the street. Even though it was an older neighborhood, she was certain that several of the houses had video doorbells, and it would be easy to look through motion logs of such devices. \"They probably know where I parked the bike.\"\n\n\"Well, that's easy. Tick Tock can just bail on the bike and\u2014\"\n\n\"No.\" Dana stopped moving. \"The bike comes too.\"\n\n\"Be reasonable.\"\n\n\"I am being reasonable.\" The bike had been Alex's, and Dana had spent the last year fixing up her dead girlfriend's bike. It was the only link she had to her old life, and she simply couldn't leave it behind to rust in some college town. It was an act capable of breaking her cold, dead heart and she refused to even consider it. \"The bike comes with us.\"\n\nLily sighed and rolled her eyes dramatically. \"Fine. If that's the case, then I guess we had better scope out the neighborhood first.\"\n\nThe bike was still over a mile away from where they were, so they took a break at a local park and Dana sat on the slide and opened up her phone to check a map of the area. The neighborhood she had parked in was older homes, and even the online satellite map had tons of cars parked there. Most of these would be students who didn't feel like buying parking passes, so it should be busy enough for her plan to work.\n\nLily had transformed into a little girl and was busy swinging on the swings. When Dana came over, she got behind Lily and gave her a push to get her higher.\n\n\"So, I think we can get him during the day,\" Dana said. \"There will be a ton of people headed for their morning classes, and it will be easier to blend in.\"\n\n\"If they know where your bike is, I can't do it. They could have laid wards for me like last time. Wards don't give a shit about disguises.\" It was weird to hear Lily swear in a seven-year old's voice, and more than a little unnerving.\n\n\"Are you sure we should be doing this?\" Dana asked. \"After we get the bike, I mean. Going after the marbles?\"\n\n\"Can I tell you something?\" Lily shifted in her seat and launched out of her swing at the height of her jump. She transformed into her normal form in mid-air and landed gracefully on the damp mulch of the playground. \"I am sick and tired of being pushed around by men who think they are better than me.\"\n\n\"Aren't we all?\" Dana asked.\n\n\"It's more than that. I've been having these...\" Lily's face scrunched up, then she sighed. \"This is hard for me to say, but I've been having these weird dreams lately.\"\n\n\"Aren't all of your dreams weird?\"\n\nLily shook her head. \"Let's just say that I don't have dreams. I haven't had dreams of my own since...it's a long story. Succubi don't dream. But now I am. And these aren't happy dreams, either. I am being reminded of things I don't like to think about.\"\n\nDana didn't say anything. She felt it was better to let Lily say her piece, because this was the first time that she had ever seen the succubus truly bothered.\n\n\"I've seen this before in humans,\" Lily continued. \"They dream about their regrets, or their worst moments. They see them, as if on a theater screen, and are forced to relive them again and again. And the part that really cuts deep is that I shouldn't be this bothered. I really shouldn't. Do you know one of the reasons I was so eager to come with you? Because you're a lot like me. Dead inside. Don't take it the wrong way, it's a simple fact.\"\n\n\"No offense taken,\" Dana replied.\n\n\"I thought it might be nice to be around someone who doesn't care about the edges, the flaws, or even the fact that I'm a heartless cunt of a demon who would just as happily walk into your home and murder your whole family just for fun. I'm this evil, vile thing that swallows souls and strips them bare of their individuality. You've already seen me kill someone and didn't even blink. You accept me, and I like how that feels.\"\n\n\"On some level, everyone wants to be accepted,\" Dana said. Logically, she knew that seeing Lily kill someone had bothered her, but that was a part of her that had been cut out.\n\n\"But it's more than that. I wanted to rush across the continent and feel the wind in my hair. To see the world through your eyes and maybe crack some heads along the way. I wanted to blow off some steam, to figure things out before going home.\"\n\nDana waited.\n\nLily scowled hard enough at the closest group of houses that she imagined the occupants were all now having terrible nightmares as a result.\n\n\"These memories in my head are awful, but they shouldn't bother me. Being forced to relive them should, at most, just piss me off because my time is being wasted. But they cut deep, and keep reminding me of what I lost, once upon a time. Something is going on inside of my head, and I don't know why. I thought maybe someone cast a spell on me, but now I'm not so sure.\"\n\n\"How does this relate to our current situation?\"\n\n\"Because once upon a time, I was convinced to do something very stupid, and it broke me. And now that I'm reliving these painful memories, I just wanna tear someone's head off, to take back some of my power. I can't change the past, but if we have a shot at sticking it to the Order and getting some of that magic for you, then let's go for it. Let's get you one step closer to a future you can actually live for. I know that I could use the win.\" Lily sniffed, looked away and then wiped her cheek.\n\n\"Are you crying?\"\n\n\"I had some mulch on my face. By the way, never trust a crying demon,\" Lily told her with a slight hitch in her voice. \"They don't feel sadness or empathy, and will only do it to manipulate you.\"\n\nDana noticed that her question wasn't actually answered, but let it go.\n\n<center>\ud83d\udc7f\ud83c\udfcd\ufe0f\ud83e\udddf\u2640\ufe0f</center>\n\nThe early light of day cast dark shadows, which were flooded with students on foot who headed for the college with a sense of purpose. Cyrus watched them as they passed by, his eyes flicking to each one.\n\nIs it you? he wondered. Each student was a potential suspect. Though he knew he couldn't draw a large enough ward to catch the succubus if she came for the bike, the small ones on the sidewalk would be enough to halt her motion for a few seconds. \n\nAmida, Tasia, and a few others were scattered amongst the scene. Amida wore a sweater vest and sat on a nearby bus bench with a coffee and a journal. He looked like a figure straight out of a college brochure. Tasia was dressed as a student trying to get signatures for a petition, and the others were walking in circles around the block, appearing in appropriate intervals. However, one intrepid Knight was actually mowing someone's lawn. Cyrus had no idea how they had managed that, but made a note to speak with them later about their ingenuity.\n\nThe motorcycle in question had been easy to track. There were so many traffic cameras along the main roads that they had jumped on and watched their prey flee the scene. Cyrus had been concerned to see that the young woman's arm was somehow reattached, and more than a little bothered when they couldn't get a positive identification on her or the bike. The license plate on the bike belonged to a young woman who had died in an accident over a year ago, which made him think that the bike was stolen. He had even called the parents of Alex Cross and discovered that they had junked the bike, which confirmed his theory.\n\nSo what could he be dealing with? Vampire didn't make sense, because their target had no issues being out in the sun. Witch, perhaps? He had seen a witch use a spell to reattach a limb before. Or maybe the limb wasn't even hers to begin with? He had gotten into a rough fight once with a man who had animated a pair of wooden arms for himself. So maybe some kind of artificer or alchemist? That would explain how the arm was reattached.\n\nHowever, Tasia swore up and down that she had stabbed the woman through the heart, and that bothered him. Necromancers were extremely rare, and very difficult to deal with. However, if it had been a necromancer, Tasia and Amida would likely be dead and under her thrall already.\n\nHe sipped at his coffee and frowned. Even though he had ordered it black from the little cafe just down the road, somehow the roast tasted sweet as if the syrups they used had permeated the air and ruined his morning cup of joe.\n\nOh well. He couldn't really complain. Other than hunting a potentially dangerous woman and her pet succubus, it really was a lovely day. He kept watching from inside the back of his town car. His windows were enchanted so that the car looked empty. In fact, the whole car should look like a beaten-up old Honda\u2014or something to that effect. He hadn't been big on the particulars, but he did need to be somewhere to keep an eye on things.\n\nThere was always the chance that this stakeout was meaningless, and that the bike had been abandoned. If that was the case, he still had the necklace. However, it was not only good practice for the others, but wonderful to see how they functioned together in an operation of this magnitude.\n\n\"Can you tell Sister Dina to slow down a bit?\" he asked his driver. \"She's showing up too much. Have her hang back and change her clothes before the next rotation.\"\n\nThe driver passed along the instructions through his headset. Sister Dina didn't react, but Cyrus suspected that next time he saw her, she would be wearing something other than a lightweight brown jacket and leggings.\n\nIn fact, most of the women on his team were wearing leggings. Was this really a fad now? He had spent so much time in the classroom that he had lost touch with current trends. He wouldn't even pretend to understand the fuzzy boots he saw some of the college girls wearing. Then again, he was a product of a completely different time. How long until he became obsolete and was replaced by someone like Amida? When he retired, where would he go?\n\nTruthfully, he would probably just hole up with the Order. Maybe devote himself to research, or spend some time assisting on smaller missions. The Order took care of its own, of that he had no doubt. The last thing anybody wanted was a former member going rogue out of boredom or spite.\n\nA young woman with her hair pulled up beneath a baseball cap came around the corner at a light jog. Curious, he watched her as she ran along the sidewalk toward the bike. She seemed to be the right height and build based on Tasia's description, and his gut told him that this was who they were waiting for.\n\n\"Tell everyone to standby,\" he said, then opened his door. The wand in his hand vibrated with power, but he kept it mostly hidden in his sleeve. If they got into a fight here, it would take them forever to contain it. Luckily, the other mages were ready with spells of their own.\n\nIt was no hard feat to shut down technology in a block radius. Memory wipes took a bit longer, and, if push came to shove, America would wake up to news of another school shooting. If there was one thing that turned his stomach, it was pinning a monster's activity on some innocent victim of circumstance, but the Order's business was rarely pretty.\n\nThe woman tripped near the bike and fell to the ground right by it. Cyrus was already moving across the street, ready to summon lightning from the sky if he needed to. The Knight who was mowing the lawn stopped to watch, and Tasia was already moving toward them, one hand in her pocket.\n\nWhen Cyrus came around the bike, the woman was brushing gravel out of her hands and muttering to herself. She didn't seem armed, but he knew better. He also didn't sense any magic around her, so if she was a witch or necromancer, then she was poorly prepared for what was about to happen.\n\n\"Need help?\" he asked, his muscles tightening in anticipation.\n\n\"Nah,\" she said without looking up. \"Trying to run while hungover is all.\" He expected her to jump on the bike, or maybe even tackle him, but she adjusted her hat, let out a loud belch that stank of death, and then kept jogging around the corner.",
        "\"Shit,\" he muttered, then walked back to the car. Now that he had blown his cover, he could only hope that\u2014\n\n\"Master Cyrus!\" Tasia pointed the direction the jogger had gone. \"That was her!\"\n\n\"You sure?\"\n\n\"Definitely!\" Tasia turned to give chase, and he saw the others change directions to head after the jogger. Someone was giving orders now, and it wasn't him. Amida tucked his journal in a pocket and went after everyone.\n\nSomething was wrong, he could feel it, but he couldn't order the others back into position. As everyone moved away from the block, he made it to where the jogger had turned when he heard the roar of a motorcycle engine behind him.\n\n\"Hmm?\" He looked over his shoulder and saw that the bike had turned itself on and was making a U-turn on the road. Students walking nearby had pulled out cellphones to catch it on video, and he pushed his way past a young man talking about how it was probably a 'social experiment' to see the bike turn the corner and vanish, the engine singing in delight.\n\nJust one more mystery to add to the pile. If the others had stayed, they may have been able to grab the bike. They had been played, and played hard. However, unless their mystery woman was a world class marathon runner, Tasia would be able to take her down without any problem.\n\nHe got into the town car. \"Who ordered the pursuit?\"\n\n\"Amida,\" his driver replied.\n\n\"Interesting.\" He chuckled to himself. If the woman was caught, then no harm done. If she got away? Well, then he would have to have a chat with the ambitious mage about pulling rank.\n\nHe waited anxiously for nearly an hour when the driver turned in his seat. \"They lost her. She got away.\"\n\nCyrus shook his head in disappointment. \"And how exactly did that happen?\"\n\nThe driver repeated the question and then listened. \"Tasia couldn't catch her, and then the motorcycle came to pick her up. The succubus was on it.\"\n\n\"Oh, she was, was she?\"\n\n\"Yes sir. They got a picture before she got away. It's being sent to you right now.\"\n\nCyrus pulled out his tablet, and sure enough, a photo had been taken. The succubus was sitting backward on the back of the motorcycle, both hands in the air in a one fingered salute. She wore a black tank top with clearly visible words that made him laugh.\n\nThe Order Eats Dicks\n\n\"Oh, it will be fun to break you,\" he said, then pulled the necklace he found from his inner pocket. It didn't bother them that their target had gotten away, because now he knew that the succubus was with her. \"I'm going to need a map of the United States. Oh, and let's go pick up Amida. I'm going to make him cast the locator spell, because it always gives me a nasty headache.\"\n\nThe driver nodded and started the car.\n\n<center>\ud83d\udc7f\ud83c\udfcd\ufe0f\ud83e\udddf\u2640\ufe0f</center>\n\nWhen Dana had fallen on purpose, she had given the mimic instructions on where to go, and then continued on her way. The foot chase with the Order had been easy. Dana looked back once after rounding the corner and had broken into a sprint when she saw them give chase. The woman who had stabbed her came within twenty feet of her, but dead girls could sprint indefinitely.\n\nLive girls, not so much. Her pursuer had fallen back, unable to maintain such a pace.\n\nTick Tock and Lily had picked her up as she left the Order behind, and once they were on the highway, they went north. Even though they were probably being tracked, the Order was going to have a tough time following them with cameras, because Wyoming was a big, empty place with a whole lot of nothing in between towns. They broke the speed limit, averaging nearly a hundred miles per hour for most of it. Eventually, they did have to stop for gas, but the station looked old, and Dana hopped off and let Lily fill up the tank disguised as a biker bitch with blue hair just in case there were video cameras watching.\n\nThey pulled into Butte, Montana at half past ten in the evening, and found a cheap hotel on the edge of town. Lily rented the room with cash as a Latina woman in her forties, and the two of them hunkered down for the night as a storm blew in.\n\nBetween watching movies on a small flat screen mounted to the wall, Lily explained the plan to Dana. They would be going somewhere called the Berkeley Pit. Despite its prestigious sounding name, it was actually a former copper mine that was currently a superfund site that was being used by the Order as a means to store dangerous objects.\n\nIn the early hours of the morning, the succubus stepped out to hunt, leaving Dana behind to watch the parking lot, fearful that a squadron of cars might show up at any moment. In those dark, lonely hours, she looked through Ratu's notes, binge watched a show on Netflix, and even sat outside with Tick Tock to keep him company.\n\nWhen Lily returned, they traveled to the pit. After paying a few bucks apiece in the gift shop, Dana grabbed a pamphlet and they went outside to travel through a long, white tunnel with an opening decorated to look like the entrance to a mine. On the other side of the tunnel was an observation deck that looked over a chain link fence with barbed wire, and the Berkeley pit was below. It was full of dark red water, and occasionally they would hear a distant blast, a deterrent for birds to keep them from landing.\n\n\"It's pretty,\" Dana commented, gazing across the water.\n\n\"Mmhmm.\" Lily walked along the length of the observation deck, her hands wrapped around a pair of binoculars that she wore around her neck. Today she was dressed as a soccer mom with a floppy hat, and fit in perfectly with some of the other tourists who had stopped by to see the lethal lake.\n\nThey stayed for a while, and eventually hit a break in foot traffic. A family with two kids were the only other visitors, and they had taken up residence on the other side of the deck. Lily and Dana moved into a corner where they knew they wouldn't be overheard.\n\n\"So?\" Dana asked. \"Anything to share?\"\n\n\"Yes.\" The succubus handed the binoculars over. \"There are some magic wards along the outside of the pit. If we fly in from above, we can avoid detection. Even if someone gets to the water's edge, it would be nearly impossible for a human to survive going in the water to the entrance below, and there's no way you could sneak a submersible in without being spotted.\"\n\n\"So that's it? We just dive in the water?\" Dana looked through the binoculars and realized she couldn't actually see the magic wards, so handed them back.\n\n\"Yep.\" Lily pointed along the shore. \"There are several alarms and protective spells along the water's edge, too. Those blasts you keep hearing? Those are small animals being vaporized. Well, and they are actually trying to chase away birds. However, over there are a couple of blank spots with no wards because they aren't reachable, like the other side of that short cliff. Once there, we can get in and go for a swim.\"\n\n\"Hmm.\" Dana pulled the pamphlet out of her pocket. The acidity of the lake wouldn't hurt her, but what about the heavy metals? Is that something that would stay in her system, killing her later, or would it eventually leech out? It was one of those questions that she knew wouldn't be answered on WebMD. \"I'm afraid you're going to have to take lead on this once we are down there. I don't want to open my eyes and go blind or anything.\"\n\n\"Please, it would probably just...\" Lily tilted her head to one side. \"No, you're right. If that sword could leave a scar, the last thing I want is for you to have shit vision. I should be fine.\"\n\n\"What's down there? I mean, once we get into the storage facility.\"\n\n\"Not much, I imagine. Cyrus has only been once, and apparently there were only a couple members of the Order present. Their job is to categorize and research, and that's it. If someone breaches the perimeter, there are plenty of locals who are actually retired Knights and such who can be here soon.\"\n\n\"They make their members retire here?\"\n\nLily nodded. \"In a way. You see, they obviously don't want people breaking in and taking something, but it's more than that. They don't want what's in the pit getting out.\"\n\n\"Like what? Are they storing something in there that's dangerous?\"\n\n\"Oh, I'm sure, but it isn't that.\" Lily looked over Dana's shoulder and went quiet. One of the two children had come close and was taking a picture of the lake with a cellphone. A few minutes passed and they were alone again.\n\n\"What is it?\" Dana asked.\n\n\"They delved too greedily, and too deep,\" Lily said, her voice ominous and her eyes on the dark water. \"I learned about the storage facility through Cyrus, but what I'm about to tell you I knew from before. This place used to be a mine, that part is true. But the miners found something they shouldn't have, and when the Order found out, they took over and made a cover story about the place flooding. This was before the internet, so that stuff was easier to fix after the fact.\"\n\n\"What happened?\"\n\nLily scowled. \"That part is a little fuzzy, but there's a good reason. When they dug, they disturbed something that shouldn't exist in this world. Have you ever heard of the Old Ones?\"\n\n\"You mean like Cthu\u2014\"\n\n\"Shhh, don't say its name! It might wake up!\" Lily put a hand over Dana's mouth, a look of panic on her face.\n\nDana turned her head away from Lily to break the seal on her mouth. \"Seriously? It can hear me?\" She looked out at the lake in awe and a small bit of terror. Would saying its name really invoke the end of the world?\n\n\"Nah, I'm just fucking with you.\" Lily let out a hearty laugh that drew attention from the nearby family. \"But you should have seen your face.\"\n\n\"Okay, so not Cthulhu. And yeah, you got me, ha ha.\" She shook her head, her voice dripping with sarcasm.\n\n\"Actually, you're on the right track. Kind of. The Old Ones are supposed to exist outside of time and space, so where are they?\"\n\n\"I don't know, somewhere else?\"\n\n\"Not just somewhere. Somewhen. Everywhere and nowhere, all at the same time, but also never. At least, that's how it was explained to me. At the bottom of that pit is part of an Old One. Maybe an elbow, knee, or even a lung, if they have them. Granted, this is all metaphorical, because they don't have forms, but what is down there is some piece of some powerful entity that may be there for five more minutes, or five hundred years, nobody knows. But that shit is volatile. If you poke it, the creature it belongs to might notice, and the last thing you want is for an entity like that to notice you. Because if it did, its attention could be drawn here, and may even manifest in this very lake.\"\n\n\"That's...surprisingly creepy.\" Dana was relieved to see that they now had the platform to themselves, the family gone. \"So, what, this thing exists in some type of quantum state or something?\"\n\n\"Fucking nerd,\" Lily muttered, then scowled. \"Can I tell you something that you're going to absolutely hate? All those brilliant science guys, Einstein, Dirac and Bohr. They were onto something borderline mystical, but it wasn't just math that got them there. No, they were shown something they never should have seen, and it helped pave the way for science as you know it. I don't pretend to understand any of it, but Amir was also involved, so I got to hear him gloat. So yes, this thing is in a weird quantum state, smeared across all of time and space, but never allowed to participate. If all of the universe exists inside of a box, you can't simply toss something out, because nothing exists outside of the box. So the universe bends. For little things, it's no problem. Scatter a human being across the cosmos? You may run into an atom here or there. But entities of unknown size, intellect and power? Holes form in the fabric of reality, and things like this happen. Think of it like a blister in spacetime.\n\n\"After they discovered it, they flooded this place with water, knowing that it would likely become poisonous and deter anyone from disturbing what lies beneath. Some idiot wizard could go down there and carve a tiny piece off of this thing, and do devil knows what with it. So, the Order watches this place, protecting you from it, and it from you. Even Amir didn't fuck around with the Old Ones, and expressly forbade anyone in the Society from attempting to do anything with them.\"\n\n\"Wow,\" Dana said, and meant it. It was weird to think about just how much the world took for granted. Something as simple as a poisonous lake was actually an ominous harbinger of doom, and she didn't know how that made her feel. \"When all those books and games joke about how the Old Ones are sleeping...\"\n\n\"They are surprisingly on point. Don't think of them as sleeping, they aren't conscious. Think of it like the time between being awake and asleep. You simply don't exist, with no sense of time or consciousness. However, if someone pokes you,\" she jabbed Dana in the tit with one finger, \"you may just slip back into the waking world.\"\n\n\"Okay, so don't poke the evil monster at the bottom of the poisonous pond. Got it.\" She crossed her arms and looked out across the valley below. A chill went down her spine, and she shivered. \"When do we do this?\"\n\n\"Tonight. It should be cloudy enough. We ride the mimic out as close as we can, and I can carry you the last stretch of it, as long as you don't eat a big lunch or something.\"\n\n\"I should probably eat something after, though.\" She thought back on the heavy metal poisoning. If her cells really were able to repair themselves, then she hoped they would also expel any toxins she absorbed. She didn't want to end up as an undead Mad Hatter, wandering the countryside with Tick Tock and having tea parties in between killing people.\n\n\"Yeah, that's not a bad idea. However, I have bad news. I'm outta juice.\" Lily bit her lip. \"I can get more, but it'll take some time.\"\n\n\"How long?\"\n\n\"Well, the good news is that I can teleport directly to my master. That part of the trip will be fast. But then I have to come back.\"\n\n\"That's gonna take a few days.\"\n\n\"No, it isn't. Can I see your phone?\"\n\nDana handed it over. \"What are you looking up?\"\n\n\"Flights.\" Lily was already looking at scheduled departures. \"I can hop a ride on a plane headed out this way.\"\n\n\"What if there aren't any tickets left?\"\n\nThe succubus grinned. \"Don't worry about it. I know what I'm doing. However, I should get going so that I can be back here by tonight.\"\n\nDana agreed, and the two of them left. Once they were sufficiently away from any sort of observation, Lily vanished from the back of the bike. It was a weird feeling traveling without the succubus, and with the rest of the day ahead of her, Dana figured she could find a couple of hikes to go on.\n\nAfter all, she was in Big Sky country and had nothing better to do.\n\n<center>\ud83d\udc7f\ud83c\udfcd\ufe0f\ud83e\udddf\u2640\ufe0f</center>\n\nThe transition from Montana to Mike's house was only a few seconds long. The world around her vanished, replaced by burning hot clouds that roared as if spewing from a volcano. Her little shortcut to get home took her through a tiny corner of Hell itself, and she was grateful for the peace and quiet that waited for her on the other side.\n\nShe stepped into the living room of the Radley house and looked around. The place was a mess, and everything looked like it was either broken or hastily repaired.\n\nWhat happened here?\n\nThe house was unusually quiet, and she could sense Mike in his bedroom upstairs. She walked up the stairs and headed for his room and was surprised to find him still in bed. He looked rough, and she wondered what sort of adventure he was having now.\n\nContemplating the man on the bed, she didn't know how to feel. He was her current master, yet he exercised no authority over her, choosing instead to let her live as she saw fit.\n\nWell, almost. She did have the 'no killing' restriction, but that only applied to people she probably shouldn't be murdering. In truth, she was having weird feelings about that as well. Before Mike, she had zero problem with the souls she feasted on. Man or woman, rich or poor, it didn't matter to her as long as it sated her demonic thirst for souls. Her biggest issue then had been her imprisonment inside of a magical ruby, unable to stretch her wings when she wanted.\n\nYet now, when she examined a potential meal, she sometimes found herself relieved that she couldn't do it. Having that choice removed should bother her, but it now brought her a strange sense of calm, like a task she didn't feel like doing had just been taken away from her.\n\n\"You are much too far inside my head, Romeo,\" she muttered, then joined him on the bed. She didn't have time for introspection right now, she just needed to suck him off and leave. Crawling on top of him, she wondered if she should wake him up first. Her movements were delicate, and she looked down into his sleeping face. Lines of exhaustion were written along his features, and she paused, her hand hovering over his forehead.\n\nHe winced, and his lips moved slightly, as if speaking, but nothing came out.\n\nCurious, she touched his temples and closed her eyes, wondering what he could be dreaming about. The last time she had infiltrated his dreams, it had been to kill him. Once cornered, Mike had used his soul to create the bet that had broken her free of Amir's enslavement, and she had seen no need to go inside his head since then.\n\nBut now? Now she wanted to know what he dreamt of. In their dreams, a person was free to manifest the best and worst of themselves, to indulge deeply in the desires of the Id and Ego and release the monster they kept carefully caged in the waking world. She had manipulated Mike's dream last time, but now she wanted to see who he truly was.\n\nInside his mind, she was little more than a whisper of a thought, an invisible presence that filtered through his being and sought him out. His soul glowed brightly in the darkness of the Dreamscape, and when she found him, he sat on the shores of consciousness, the house behind him. Ever since he had swapped part of his soul with the nymph Naia, he was unable to leave the house behind, tethered to it spiritually and emotionally.\n\nTime and space were hers to command here in the Dreamscape, and she slowed it to a crawl. Hovering over Mike, she watched him for a while as he gazed out into the distance.\n\nBehind her, someone slammed a door in the house. Puzzled, she left him behind and flew to the front door of the home to investigate. It looked like a washed-out version of what existed in the real world, the colors not quite right. When she opened the door to walk inside, she found herself in another home entirely, and a young version of Mike ran past her.\n\n\"What the fuck?\" she wondered aloud, then followed. This version of Mike was a child, but she couldn't tell how old. He ran from room to room, gasping for air and trying to find somewhere to hide. In the kitchen, he opened up one of the cupboards and tried to squeeze himself in, then closed the door behind him.\n\nA presence moved into the room, dark and foreboding. It was a woman, or at least it used to be. Her hair flew about in mysterious tangles, and her features look like they had been scratched into paper with dark ink, constantly shifting about.\n\n\"Where are you, you little shit?\" the woman hollered, and Lily smirked. This was nothing more than a manifestation of Mike's mother, one she had used against him last time she was here. Looking around, she saw that the room was becoming blurry in spots, the sheer terror of his mother's presence causing him to wake up just enough that the dream was crumbling. It also explained why he was in two places at once. The abstract nature of this dream had isolated his adult mind elsewhere, trapping him in the form of a child to suffer the wrath of his long-dead abusive mother.\n\nMike's mother shrieked, causing the cabinets to burst open and puke their contents onto the floor. Child Mike bolted out of the kitchen, ducking under his mother's long, clawed hands.",
        "\"Yeah, okay, I'm never going to get you off like this,\" she muttered. This fever dream was the kind of thing that prevented her from doing what she did best, and it was time to get rid of it. When Mike's mother moved to give chase, Lily grabbed the dream figure by its throat and pinned it against the wall.\n\nThe dream being howled and slashed at her with its claws, and Lily yawned. Typical nightmare, all bark and no bite. She grabbed the woman's head with both hands and made a ripping motion.\n\nMike's mother collapsed into a two-dimensional figure that tore like paper. Lily folded the remnants in half and tore them again. It struggled to free itself, but had no more strength than a stiff cobweb. Once the nightmare had been properly torn and shredded, she opened the nearest window and let the breeze take it.\n\n\"It's okay, you can come out,\" she announced, then walked out of the kitchen in time to see Mike run out the front door. Letting out a grunt of discontent, she followed him outside the house and saw that he stood by the front gate, his dark eyes locked on her movement.\n\n\"Who are you?\" he asked her. She closed the gap between them, and was surprised when he didn't run. She knelt down in front of him and smirked.\n\n\"I'm kind of like Santa Claus, but only for grown-ups. If you could age up a few years, I'll show you something...\" her voice trailed off when she saw his eyes flashing. Curious, she watched them for a second and saw them briefly change color. \"What are you doing?\"\n\n\"You got rid of her, didn't you?\" The scared child from earlier was gone, and his eyes flickered and turned blue for a few moments.\n\nOf course. Part of Mike's soul was also Naia's. It was how he had beaten her last time she was here, by channeling the nymph's magic. Somewhere inside his head, Naia existed as a separate entity. Was that why he was no longer afraid? Was she talking to the part of Mike that was Naia now?\n\n\"It's temporary,\" she explained. \"Every dream is different. Now, if you could, could you be a big boy and...well, become a big boy again? I'm on a tight schedule, and you're making this weird for me.\"\n\nThe child smirked at her and then vanished in a cloud of smoke. The Dreamscape fogged over, and for a few seconds, she couldn't see anything. Mike was waking up now, and she preferred that he stay asleep for just a few more minutes. She debated stinging him, but it was likely he would know she had been there if he slept for another couple of hours.\n\n\"You're a pain in my ass, Romeo.\" She still had one trick left in her arsenal, but she hated to utilize it. However, Mike was about to wake up, and she really didn't feel like dealing with him in person.\n\nBack in the real world, her hand moved from over his crotch up to his chest. Her other hand stroked his hair, and she leaned in, her lips almost touching his ear.\n\nShe sang to him.\n\nIt was a lullaby from a long time ago, one that she remembered from her youth. The words were in a language he wouldn't understand, but the sentiment behind them flooded the Dreamscape and soothed his mind. The fog slowly lifted, revealing the house once more. Mike stood on the front steps of the house, and Lily approached him, her body shifting into a more suitable shape. He wasn't going to be asleep much longer, and she would have to rely on confusion to get what she wanted.\n\nShe searched through his conscience for the most ideal form and was surprised at some of his recent memories. Her features rippled like water and she became someone that he knew.\n\n\"Beth?\" he asked. \"What's going on?\" Beth was his attorney, who had moved in with him for her own protection. Based off of a recent memory of the two of them, Beth had seen his dick and he was struggling with how embarrassed he had been.\n\nOkay, she would have to ask someone about that when she got back.\n\n\"Nothing important,\" Lily told him in Beth's voice. \"It's just I saw something I liked, and I wanted to get a closer look.\" She knelt down in front of him and pulled his cock out of his pants. The Dreamscape fogged over again, and she slowed down a bit. Her real voice echoed across the Dreamscape as her lullaby helped lull him back to sleep once more and the fog dispersed.\n\n\"Beth, I...\" his eyes glazed over when Lily took his huge glans in her mouth. In dreams, men always seemed to add length and girth, but not Mike. If not for his stunted upbringing, he could have easily made a living in the porn industry with a dick like his. Now that his natural charm was amplified by the nymph magic running through his veins, he would be a shoe in for anybody watching.\n\nShe blew him hard, stroking his shaft with both hands while she struggled to inhale him. In the real world, she worked his cock through his pants, being careful not to wake him up. All she wanted was to swallow his load and go, but apparently this was going to take some finesse.\n\nWhen she pulled her mouth off his cock, it made a popping sound. Thick white lines of spit connected them, and her shirt shrank down two sizes, the buttons bursting apart to reveal ample cleavage underneath.\n\n\"I think about this all the time,\" she told him. \"Ever since I saw you...with her.\" Lily finally pulled the memory from his head and almost laughed. He had been fucking a ghost that disappeared when he came, which was how Beth had seen him with his dick out. It was always something with this guy.\n\n\"Yeah, I'm sorry I\u2014\"\n\n\"Shh.\" She pressed her finger to his lips. \"You apologize too much. I want you to treat me like the others right now. Forget that I'm human, pull my hair a bit. Be rough. I'm totally into it. I promise.\"\n\nHis eyes glazed over again, then focused on her. She could feel the Dreamscape shifting again, and she backed down on stroking him in the real world. His conscious mind was trying to emerge and dissect the dream, but it was also making him wake up. She needed him to just relax and go with it.\n\nIt's just an ordinary sex dream, she thought at him. \"C'mon, Mike, I've been dreaming about what you taste like.\"\n\nHis eyes snapped onto hers and he frowned. \"Lily, is that you?\"\n\nShe froze, unable to answer. Somehow he had identified her again, and the dream was lifting as he fought to surface. Her mouth opened and closed as she debated what her next move should be, and she got ready to answer when she felt the Dreamscape stabilize around them.\n\n\"I'm over here, Romeo.\" It was her own voice, and when she looked over her shoulder, she saw herself standing on the edge of the fog. \"Looks like your little sex fantasy could use an upgrade.\"\n\n\"Oh. I see. So what brings you here?\" he asked, his cock still hanging at Lily's eye level.\n\n\"Oh, I'm always here.\" She moved toward them from out of the fog. \"Always watching, always waiting. I'm that little piece of Lily you keep close to your heart. This isn't my doing, by the way.\"\n\n\"It isn't?' He looked down at Lily. \"It's just an ordinary dream?\"\n\n\"No dream is ordinary once I've arrived.\" Dream Lily knelt down next to Lily. \"Just because I'm stuck in here doesn't mean I don't want to join in.\"\n\nWhen their eyes met, Lily felt an instantaneous connection with her doppelg\u00e4nger. This wasn't some imposter or dream entity that had manifested, but an actual piece of herself residing inside of Mike. How was such a thing possible?\n\n\"I mean...as long as you aren't going to suck out my soul or anything...\" he muttered.\n\n\"Oh, Romeo, you're so rude. I promise you, this is just for fun.\" Lily placed one hand on the shaft of his cock. \"Now let's see what this version of Beth can do.\"\n\nTogether, they ran their mouths over his long shaft, teasing him as he stood there. The Dreamscape shifted a few times as they both took turns blowing him, and whenever Lily took a break, she watched herself in fascination. Whereas she took a carefully measured approach while playing her role as Beth, Dream Lily sucked cock as if her world depended on it. The few times they tongue wrestled over the length of his shaft, she could feel their minds touch.\n\nThis was really her. It was similar to when she had encountered Naia in this space, a tiny part of the nymph's soul lying in wait and emerging under special circumstances. She couldn't figure it out, couldn't determine what sort of magic it had taken to break a piece of herself off and store it in here. It wasn't a piece of her soul\u2014she had long ago lost her own. What was it, then?\n\nThe Dreamscape was fluctuating wildly now as Lily sucked on Mike's cock while Dream Lily swallowed his balls. Both of them slurped loudly now, the sound magnified by Lily's magic. Dream Lily used her own magic to summon the other members of the house, all of them wearing different cheerleader uniforms and standing at attention.\n\n\"C'mon, let's see you nut all over Beth's face,\" Dream Lily told him. The monster girls around them were now cheering wildly, calling his name and dancing seductively. \"Ooh, even better, nut all over these.\"\n\nShe pulled a pair of glasses out of thin air and put them on Lily's face. This seemed to have an effect on Mike and he let out a low groan. In the real world, his cock was buried in Lily's mouth and she could feel the first reflexive jerks of his impending orgasm, so she sealed her mouth tight around him and inhaled.\n\nWhen he came, she could hear the ocean through the fog roar as waves pounded the beach and the water level rose. Enormous ropes of cum covered her and Dream Lily, then sprayed fire hose style across all of the others who cheered and held each other. Mike fell backward onto the ground with a stupid grin plastered across his face.\n\nIn the real world, Lily swallowed every drop greedily and buried it within her body where it would stay fresh and viable. Inside the Dreamscape, she wiped the cum off her glasses to see that Dream Lily now stood over Mike.\n\n\"Time for you to wake up,\" Dream Lily told him, then pushed him into the sand with the heel of her boot. He didn't even struggle as his body turned to smoke and the Dreamscape shuddered. He was waking up soon, and his mind could no longer hold him here. She turned to look at Lily with a smirk. \"Looked like you could use a hand.\"\n\n\"Not that it was necessary, but yes. That was much easier with your help. But I want to know what you are, and I want to know now.\" The ground rumbled beneath them as the island fell apart, crumbling like sand over an abyss. She could feel the world imploding around them. \"And how are you in here without him knowing?\"\n\n\"Oh, don't worry. He never remembers me,\" Dream Lily told her. \"I do this all the time. I've gotten really good at hiding myself. It's probably my keen sense of self preservation. Besides, this was just a run of the mill dream for him, it will likely fade in seconds.\"\n\n\"But what are you?\" Lily asked as the ground vanished beneath the fog. She was stretching her own time to the limit to continue this conversation, but it wouldn't last.\n\n\"That's a great question,\" Dream Lily answered, then stepped close. She placed a hand on Lily's cheek. \"But the thing you should be wondering right now is this; if I'm a part of you that's in here, then what part of him is out there with you?\"\n\nLily started to answer, but didn't know what to say. Dream Lily winked as the fog wrapped around her and she vanished inside it. The dream had ended and it was time to go.\n\nWith seconds to spare, Lily hopped off the bed, opened the window and then jumped out backward. Her wings pumped frantically to lift her onto the roof, and she landed and scurried up the sloped surface, her eyes on the sky for Abella the gargoyle. Abella was on the other side of the roof, her full attention on a tablet in her hands. The house had a turret on the roof, so Lily moved to the other side of it, her hands on her chest.\n\nHer heart pounded in her chest, and she shifted the color of her skin to match the roof of the house, just like a chameleon. What the fuck had just happened? The implications were staggering, and she struggled to wrap her head around them. Why had she seen a version of herself inside of Mike's head? Such a thing should be impossible.\n\nBelow, she could sense him moving. If she closed her eyes, she could almost see his movements. He had woken up, and was apparently on a mission, because once he was dressed, he went straight out the front door. She crawled to the edge of the roof to watch him. Had he realized she had been there? Was he looking for her?\n\nDown below, Mike crossed the front yard and gave the magical sundial in the middle of it a twist. It was the home's defense mechanism, a device that targeted anyone who tried to attack the home or its occupants. Movement near the front entry caught her attention, and she froze in terror.\n\nIt was Amir, her former master. He opened his mouth and said something to Mike, but she was already moving away from the edge of the roof, afraid that Amir might see her. If her former master saw her, there was a good chance he would stake out the area and wait to track her once she left. He would be unable to enslave her again, but he was easily more powerful than Cyrus and her only recourse would be to flee back to Mike's side. She would be trapped, and Dana would be stuck in Montana without her.\n\nAbella was now watching the conversation with interest, but still hadn't noticed Lily. That meant that Amir was occupied, and Lily took a chance and moved to the back of the roof and jumped. Her wings caught the air and she moved across the yard and landed along the top of the stone wall surrounding the property. The boundary of the geas, a magical spell that protected the house, ended here, and she was now in a forested park with several other people. She shape-shifted into a young woman in leggings that carried a cup of coffee in one hand and a cellphone in the other and moved through the park at a slow pace. It was likely that Amir's followers might be watching the house, so she found a couple different spots to hide and change shape. When she exited the woods, she was surrounded by a group of women who were on an organized power walk.\n\nConvinced she hadn't been followed, she went to the nearest bus stop and handed the driver some money that would disappear once she was at the back of the bus. Her thoughts kept going back to seeing herself in the Dreamscape, but she was too preoccupied with thoughts of being followed to give it much attention.\n\nGetting across town was easy. She hopped a few more busses and was soon in the city proper. After pickpocketing someone's cell phone, all she needed was a tall building with roof access, and it was early afternoon before she found it. She was high enough now that she wasn't likely to be seen, so she circled upward, then flew northeast, in the direction of the airport.\n\nAfter all, she had a plane to catch.\n\nIt was a simple matter to descend over the top of the barbed wire fence that protected the area, and she watched as the planes landed and took off, her features shifting as she moved across the tarmac. She waited until she spotted the plane she thought was hers, and then launched herself at it as it waited its turn to take to the skies.\n\nIt was something she had only done a couple of times. Her flight speed was fast, but not fast enough to cross long distances quickly, and it was very hard to sneak onto a plane these days. However, riding on top of it was doable, and even kind of fun.\n\nShe wedged herself against the tail of the plane and covered herself in clothing that matched the plane itself, then grabbed onto a seam in the plane with long fingers. It was a few painfully long minutes before the plane accelerated, and as it rocketed down the runway, she summoned her wings around her body like a protective shield, making herself more aerodynamic. As the plane climbed into the sky, she wondered if her presence was felt somehow. Maybe an instrument noted a strange vibration, or perhaps the tail was slightly less responsive.\n\nOnce the plane was in the sky, she let go of the plane with one hand. Between the roar of the engines and the wind, there wasn't anything to hear, so she pulled the cellphone out of her pocket and unlocked it with its owner's fingerprint. When she was over Montana, she would toss herself off and fly around until she spotted their hotel.\n\nShe thought back to what her doppelganger had said. If some part of her was with Mike, then that meant that some part of him was with her now. But what did that mean? He seemed like a good guy, but she was always waiting for the other shoe to drop. In truth, he was only her second master, so maybe she was unfairly biased against the guy.\n\nHer mind was becoming a blur of activity, so she found a game about some angry birds on her stolen cellphone. As she loaded the tiny birds into their giant slingshot, her thoughts went to Amir, her former master. Seeing him in the flesh had greatly affected her mood, and now it was like his presence floated all around, threatening to suffocate her. She could almost feel his eyes on her, hear the condescending tone in his voice as he mocked her. Centuries of mistreatment and abuse played through her head in fast-forward, and all of their old conversations burned into her ears, his words sharp and poisonous. Much like she had explained to Dana, the words bit into her now, each one leaving a mark as she was chewed up by the past.\n\nThe roar of the plane vanished, and she now stood in a regal palace bedroom overlooking the countryside.\n\n\"Husband, please,\" the princess begged. \"I can tell that you're angry with me, but I don't know why.\"\n\nAladdin gazed out the window of his palace, his dark eyes on the city below. He hadn't spoken to her in days, not since the incident with the lamp. When he turned to face her, his features were harsh, as if carved into stone.\n\n\"You know why.\" He glared at her for a few seconds, but then looked away in disgust. \"Tsk. I can't even look at you.\"\n\n\"But I'm your wife,\" she told him, tears in her eyes. \"I would do anything for you, and have.\"\n\n\"That is true,\" he said, rubbing his chin. \"You have always been obedient. I still like that about you.\"\n\n\"Then what is it?\" she asked.\n\n\"It's the thief,\" he told her. \"That bastard who stole my lamp, then took away my palace. This has everything to do with him.\"\n\n\"Please, husband, I have already apologized.\" Aladdin had hidden the truth about the genie from her, and she had given away the magic lamp to a servant who thought it looked dirty. The servant had been a man who had tricked Aladdin into retrieving the lamp from its resting place, and then left him for dead when it failed. Once he had the lamp, the thief had used a wish to steal Aladdin's palace away, which prompted a journey across the mountains to retrieve it.\n\nAladdin's face darkened. \"Yes, I know. You are sorry. You've said it a hundred times. I am no longer angry about that.\"\n\n\"Then what is it?\"\n\nHe took several deep breaths and then turned to face her, his eyes wild. \"I'll tell you what it is. I saw you with the thief on the night I stole the lamp back.\"\n\nThe princess flinched. \"My husband, I...you told me to seduce him. So that you could steal the lamp back.\"\n\n\"It isn't about that!\" He took a step toward her and raised his fist. \"It's about you when you were with him! I saw the faces that you made, heard the sounds of pleasure! You may have been with him at my command, but you clearly enjoyed it like the whore that you are!\"\n\nShe held a hand to her mouth in shock, and tears streamed down her face. \"No, it isn't like that! I had to keep him distracted so that you could\u2014\"\n\n\"LIAR!\" He shouted loud enough that the guards and servants around the room looked at each other in unease. \"I saw! I heard! I watched as you sucked his cock, as you took him inside of you! He spilled his seed in your womb and\u2014\"\n\n\"I drank the special tea, and I am not with child,\" she protested.",
        "\"I don't care about that!\" He grabbed a nearby platter and threw it in the air, the fruits and cheeses cascading to the floor. \"In those moments, I finally saw the truth of what you are, and now you play the poor, innocent victim before me. You can't manipulate me. I am Aladdin, master of all djinn, and the most powerful man in the world!\"\n\nThe princess fell to her knees and buried her face in her hands. Aladdin approached with a sneer on his face. As she cried, his features briefly softened and he touched the top of her head.\n\n\"Please,\" she begged. \"Please tell me what to do. I love you, Aladdin.\"\n\n\"I know.\" His fingers trailed along her scalp until they touched the lily she had tucked in her hair that morning. It was part of a ritual they had begun after their wedding night when he would tuck a flower in her hair. Ever since the incident with the theft of his lamp, she had been the one to put the flower in her own hair.\n\n\"Please,\" Lily begged. \"Don't make me watch this part.\"\n\nAladdin pulled the lily from her hair and held it in his hands. \"When we first met, you were like this flower. A true beauty in every respect. That's how I saw you. But you know what? I should have looked deeper. Though a lily is beautiful at first, over time it will wilt, becoming an ugly thing that needs to be pruned away.\"\n\nThe princess sobbed uncontrollably now.\n\n\"It's all about power, isn't it? I thought I had it all, but now I doubt myself. Have I been manipulated this whole time? How long until you betray me again, I wonder.\" He dropped the flower on the ground. \"Whenever I look at you, all I can think about is how you wrapped your legs around him and called his name. You're just like every other woman, aren't you? Just a whore, ready to use her pussy to get what she wants.\"\n\n\"That's not true,\" Lily yelled at the same time as the princess.\n\n\"But that's okay. I can use that.\" He grabbed her by the chin and tilted her face toward him. \"But now I need to ensure that what you want and what I want are always the same thing.\"\n\n\"If you hate me so, then please...\"\n\n\"Let me go,\" Lily finished.\n\n\"No man shall have you as you are,\" Aladdin told her, then rubbed the small ring on his hand. A minor djinn appeared in a puff of smoke while bent on one knee.\n\n\"Master?\" the djinn inquired.\n\n\"Bring me my lamp,\" Aladdin told him. The djinn disappeared and returned a second later, holding the magic item in his hands. When he picked up the lamp, a sinister grin crossed his face as he rubbed it.\n\nThe djinn of the lamp emerged as a technicolor fog that billowed out of the lamp and formed into a fearsome being nearly fifteen feet tall with horns and fangs. Four thick arms covered in silver bands embossed with glowing runes crossed over its chest, and it gazed down at the scene without judgement, then looked to its master for instructions.\n\nThe servants and guards in the room fled. This didn't bother Aladdin in the slightest.\n\n\"I need your guidance,\" he told the djinn. \"I wish to make this woman my servant and bind her to me for eternity.\"\n\n\"Then wish it, that I may make it so.\"\n\nThe princess, hearing this, stood and ran, but the djinn moved in front of her to prevent her escape.\n\n\"But she is a whore,\" Aladdin told the djinn, raising his voice to be heard over the princess' cries. \"And I would give her a fate befitting of a whore.\"\n\n\"Hmm.\" The djinn thought about this. \"You wish for her to be your servant, but also wish to use her for your pleasure?\"\n\n\"Wait.\" Aladdin held up a hand, his dark eyes glittering. \"Not just my pleasure. Anybody's pleasure. Clearly she enjoys being with other men, so why not use this to my advantage?\"\n\n\"I see.\" The djinn picked the princess up and set her on the ground where she had started. She collapsed into a sobbing pile. \"You wish for me to give her a form that suits your needs?\"\n\n\"Yes, but not just my needs. Anyone's needs.\" Aladdin grinned. \"I wish to be able to use her to seduce anybody I wish, and then control them.\"\n\n\"Mmm.\" The djinn nodded. \"I know of such a being. It is much like me in that it has a vessel that you must keep safe, and it relies on sex for survival. It is also a shape shifter, and a master at manipulation.\"\n\n\"What is such a being called?\"\n\n\"A succubus,\" replied the djinn. \"An erotic creature that infiltrates your dreams and can suck out your soul. They are very rare, and very powerful. But like the djinn, totally obedient to their master. However, I must warn you. Such a creature has no soul, which means that hers will be destroyed in the process. A djinn may not manufacture a soul, so I warn you that this is a one-way wish.\"\n\n\"Will she still remember who she is? Will she still remember what was done?\"\n\n\"Only if you wish it so.\"\n\n\"Thank you for your guidance.\" Aladdin turned his cruel gaze back to the princess. \"Then I wish for this woman before me to become my personal succubus with only her memories of me left intact.\"\n\n\"Wish granted.\" The djinn turned toward the princess and snapped its fingers. The light in the room turned a violent shade of red, and the odor of sulfur and brimstone filled the air. A circle of flames formed around the princess, trapping her in place. Fiery lines appeared inside the circle that created a series of geometric shapes and waves of heat made the air itself shimmer.\n\nRed and black flames crackled from the floor by her feet, and then wrapped themselves around her into a twisting vortex. The princess' scream was buried beneath the roar of hellfire as it consumed her body, using her body and soul as fuel. The process wasn't instantaneous or painless, and even Aladdin turned away and covered his ears to drown out her shrieks of agony.\n\nWhen the flames vanished, the room was left untouched, and a naked being wearing long, black boots knelt on the floor. She had a set of bat-like wings and a long, scorpion's tail that swished behind her as she stood, and a pair of horns came out of her head. When she stood, she still looked like the princess, but was now clearly much more.\n\n\"Master?\" she asked, confusion on her face.\n\nStunned, Aladdin nodded his head. A remnant of hellfire formed in the air before him and transformed into a thick ruby that he caught before it hit the ground.\n\n\"That was her heart,\" the djinn explained. \"He who holds the heart of a succubus commands her. As I give this to you, I have fulfilled your daily wish and take my leave.\" The djinn vanished back into his lamp, which Aladdin clipped to his belt.\n\nHe moved close to inspect the succubus and let out a laugh.\n\n\"Yes. I am your master,\" he said, then stroked her cheek.\n\nThe succubus smiled. \"Not yet. You still have to name me. Then you are my true master.\"\n\n\"Oh.\" He scrunched up his face, lost in thought. In this process, his eyes fell onto the flower on the floor, untouched by the flames. With a laugh, he picked it up and tucked it in the succubus' long, red and black hair.\n\n\"I think I'll call you Lily.\" He pressed his hands against her cheeks. \"This face. Never show it to me again.\"\n\n\"As you wish, master.\" Her features shifted into something more pleasant and Aladdin undid his belt.\n\nThe memory burst like a bubble, and Lily gasped for air, her heart pounding in her chest. She almost slipped free of the plane, and she dug her nails into the aircraft grade aluminum to stay in place. On the screen of her cellphone, the birds became large, colorful blobs as her tears flowed freely, and she let out a shriek of rage and grief that was swallowed up by the sky.\n\n<center>\ud83d\udc7f\ud83c\udfcd\ufe0f\ud83e\udddf\u2640\ufe0f</center>\n\nSome of you were able to guess from last chapter, but Lily's origin story is official. The original tale of Aladdin originated in China, and was likely adapted as the years passed, and I based the events of Lily's transformation on the original tale itself.\n\nOh, and that threesome scene with Lily, Mike and Lily? That will confirm some theories many of you have been talking about in the main story, but I'll let you argue about what it means amongst yourselves.\n\nI want to once again thank my readers here on Lit, you have been a blessing to me. I really appreciate having you around, and please don't forget to rate before you go read something else.\n\nBe kind to each other, and wash your hands!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "a threesome with two versions of one person",
        "adventure erotica",
        "clone",
        "doppelganger",
        "dreamscape",
        "elder gods",
        "mff",
        "monstergirls",
        "succubus"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/dead-and-horny-ch-04"
}