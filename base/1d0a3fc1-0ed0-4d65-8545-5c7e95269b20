{
    "title": "The Demon Queen of Hell",
    "pages": [
        "Welcome to \"\" writing event. This is our annual St. Patrick's day collection. Thanks to the wonderful writers who contributed stories for our enjoyment and entertainment. They wrote to the theme, met the deadline, and as a reader, I am grateful. Thanks to you, the readers, who give us your attention. I hope you enjoy the stories.\n\nThanks to my team. Harddaysknight is my mentor and gives me critical review. SBrooks103x also gives me a pre-post read. My editors are Hale1, Hooked1957 and GeorgeAnderson. Thanks to Stev2244 for reading for me and to the hommies at Specific Indefinites for their input.\n\nI got the idea for this story from a cartoon I saw by Hannah Daigle. In that cartoon, a man was depicted wearing a t-shirt that said, \"I fucked the Demon Queen of Hell and all I got was this bastard child.\" Holding the man's hand was an adorable little demon girl wearing a little blue dress with the words, \"I love my dad,\" on it. It was cute and sad and made me cry. There is a pathos there that hit me different. So, here's how it happened...\n\nEvocation is something that should only be attempted by tenth level, or above. I guess only being an eighth level Santeros should have been my first clue, but I'd always been into pushing boundaries. It seemed pretty easy: The Greater Key of Solomon was open in front of me and I had all the right signs, reagents, and the glow from the mushrooms I had eaten pulsed through me like the flashing of a strobe. I spoke the binding and there was a pulse of red flame.\n\nThe flame was accompanied by smoke or fog of the same shade: deep ruby-red, and there she was. She was stunning, everything you would expect from a demoness. Her hair was the first thing I noticed. Curls, ringlets, in wild disarray, yet perfectly ordered, wet, flowing down around her to the tops of her thighs and over her butt. The second thing I noticed was that she seemed to have just stepped out of the shower.\n\nShe had a white fluffy towel wrapped around her and was in the midst of fluffing up that hair with another. Then there was that face. She was dusky. Not black, not white, sort of a creamy light-brown, like she had a really dark tan, but you could tell it was natural for her. Who knew that demonesses spent time tanning?\n\nThe face, it was what fashion models tried to achieve with surgeries, but this was real. Broad high forehead, her eyes seemed to be amber-colored. Who has amber-colored eyes? They were almost orange. The thing that was a little disconcerting was that her pupils weren't black; they were the same ruby-red as the flame and the smoke had been. They were elongated, tilted up at the outside corners and her lashes were the longest I had ever seen.\n\nHer cheekbones were high above faint hollows, her jawline strong and tapering to a pointed chin, giving her face a heart shape. Her lips were... perfection.\n\nI wanted to continue looking at her for years, just looking, but she spoke. \"What have you done, little human?\"\n\nI found myself unable to speak. Not from any compulsion, she had just taken my reasoning ability by the way she looked. Her natural pose was like those \"Instagram models\" who always arch their backs and puff out their lips like they're waiting to be kissed. She was naturally like that. My brain was numb.\n\n\"Are you mute?\" she asked.\n\nI stirred from the paralysis she had induced in me. I tried to speak, but all that came out was a croak. I cleared my throat. \"No, I speak. I was having trouble thinking there for a minute.\"\n\nShe cocked her head to one side and raised one immaculate eyebrow. \"Really? Why?\"\n\n\"Umm... well, I wasn't expecting you,\" I finally managed.\n\nShe laughed, and the sound was both enchanting and sinister. \"First time?\"\n\nI nodded. \"Yeah, I...\"\n\n\"What were you expecting?\" she asked.\n\n\"I wasn't sure you'd be female, or so... beautiful, or even vaguely human.\"\n\nShe laughed again. \"You must learn to be more specific, little human. That was quite a powerful summoning you worked.\"\n\nShe had these perfectly formed little feet, but suddenly they became hooves and she flashed through half a dozen body forms, from the absolutely terrifying to grotesquely bizarre. When she returned to the original form, she was minus the towel, and I once again became unable to speak.\n\nShe threw back her head, all that hair cascading, and laughed. I shivered a bit because I noticed that her teeth were perfect, except for small fangs. \"This is my basic form,\" she said. \"Would you prefer another? Up here, little human.\"\n\nMy eyes, which had been locked on her breasts, traveled up where she was pointing to her face. \"No... no, this one is good,\" I managed.\n\n\"Why have you summoned me?' she asked. \"You know I'm going to kill you for that.\"\n\nI wanted to run. \"Is that allowed?\" I was putting on a brave front.\n\nShe laughed again. \"Do you think you can stop me?\"\n\n\"Yes, I'm pretty sure I can. I think you're bound and have to do what I say.\"\n\nShe cocked her head again. It was a very cute gesture. Hell, everything about her was cute. Well, \"cute\" might not be exactly the right word, but she was that, too. Stunningly gorgeous and terrifying was a better term.\n\n\"You were explaining...\"\n\nI cleared my throat again. \"Umm... I hadn't really thought this through. I didn't know I could really do it. You were sort of an... experiment.\"\n\n\"I see. So, you are young, you are a fool and you have no clue. Do I have that right?\"\n\n\"Yeah, I guess that's about right,\" I grinned at her. \"Cheeky bastard, aren't I?\"\n\n\"Very. Do you intend to keep me standing here, or do you have something else in mind? I know I make a nice decoration, but are you going to be hospitable, or just have a nice demoness statue?\"\n\n\"Oh, sorry. Would you like to sit down? Something to drink?\"\n\n\"Umm, you have to invite me out, and what do you have?\" she said.\n\n\"Oh, right. You're not going to kill me if I do, right?\"\n\nShe looked at me speculatively. \"Not immediately, no.\"\n\n\"Please, make yourself at home,\" I said, gesturing toward the rest of my house.\n\n\"Thank you,\" she said. She held out her hand and I helped her down off the altar. Somehow, I suspected she didn't need my help. I doubted she had ever needed anyone's help.\n\nShe looked around. \"Nice place,\" she said. It was pretty nice, I thought. It was spacious, I had nice art and the furniture was comfortable.\n\n\"Do you really drink?\" I asked.\n\n\"I don't need to drink,\" she said. \"I do if I like the taste of something.\"\n\n\"What do you like, besides blood, I mean,\" I said.\n\nThat got a laugh out of her. \"You're delightful,\" she said. \"I like Kool-Aid, peach mango.\"\n\nWell, I hadn't expected that. \"Sorry, I don't have any Kool-Aid,\" I apologized.\n\n\"Let's go get some,\" she said.\n\n\"Now? Really? You're kidding, right?\"\n\n\"No, did you have something else to do?\"\n\n\"Umm, no, I don't guess I do.\"\n\n\"Sick,\" she said, starting for the door.\n\n\"Wait!\" I sort of squeaked. \"I... what's your name? You can't go out like that.\"\n\nShe glanced down at herself. \"Oh, right. I forgot. Humans! My name is Nina. What's your name?\"\n\nI knew that name. \"You're the serpent goddess?\"\n\n\"Do you like serpents?\" she asked.\n\n\"Well, I kind of like them over there,\" I pointed to the other side of the room.\n\nShe giggled. It was very disconcerting, especially with what it did to her breasts. They were disconcerting enough without jiggling like that.\n\n\"My name is Mercer,\" I told her. \"Mercer Roberts.\"\n\n\"Will you give me clothing, Mercer?\" she asked.\n\n\"I don't exactly have a large wardrobe of women's clothes,\" I said.\n\nShe frowned, her cute little brows drawing together. \"Now you do,\" she said. She held out her hand and I took it. When we got to my closet, it was full. Not with my clothes. Mine took less than half my closet space. The rest was now filled with women's clothes. Sexy ones.\n\n\"Wait,\" I said. \"If you can do this, can't you just... I don't know, conjure some Kool-Aid?\"\n\n\"These aren't real,\" she said. \"I want real Kool-Aid.\"\n\n\"Oh, okay.\" They looked real to me. She looked at my clothes, selected a Pink Floyd t-shirt and got a pair of tiny panties off a shelf I didn't know I had. She selected some denim shorts from \"her\" clothes. It was fascinating to watch her slide those panties up her impossibly long legs. She was ripped. Her legs were very muscular, but very feminine. She had a little tuft of curls, the same shade as her hair, dark with hints of auburn. She turned and that ass! My God, it was spectacular, small, but again, extremely muscular. It jutted out like a shelf.\n\nThe shorts came up and she smiled at me over her shoulder as she filled them out to perfection. She knew I was watching, and she seemed to enjoy it. She slipped the t-shirt over her head and those luscious breasts disappeared, much to my disappointment.\n\nShe looked in the full-length mirror I didn't know I had and got that cute little frown again. Her fingernails became talons and cut my shirt off. It now came to just below her breasts, and any serious movement would have the bottoms of those full globes exposed.\n\n\"You like?\" She was smiling at me, her fangs showing.\n\n\"Umm... yeah. That was kind of one of my favorite shirts,\" I complained.\n\n\"Thanks,\" she said. \"You don't like it now?\"\n\n\"I... I like it on you.\"\n\n\"Good,\" she said. \"Let's go. I'm hungry, too. Can we get some hot wings?\"\n\n***** \n\nIt turned out she was always hungry, and she drank gallons of Kool-Aid, until she got tired of it. She drank wine, after that, or anything else that took her fancy.\n\nShe loved living. There is no other way to describe her. Every minute I wasn't working, she wanted to do something, go somewhere, satisfy her whims, and she was quite whimsical. She didn't understand that I needed to sleep and complained until I told her she should try sleeping.\n\n\"Why?\" she asked. \"I want to go dancing. Don't you like dancing with me?\"\n\n\"I do,\" I said. \"I'm not a demon, though. I am exhausted, Nina. Please, just give it a try.\"\n\n\"Okay,\" she said reluctantly, the third day she was with me. \"Where will we sleep?\"\n\n\"I sleep in my bed, as you know,\" I told her. \"You can sleep wherever you like.\"\n\nShe looked at me speculatively. \"I shall sleep in your bed, as well,\" she said.\n\n\"You aren't going to eat me while I'm asleep?\" I asked.\n\nThat got her cute little giggle. \"I might, but not tonight.\"\n\nIt was a little embarrassing. The minute she entered my house, her clothes disappeared. The \"real\" ones, mine that she borrowed constantly, dropped wherever she happened to take them off, and the \"unreal\" ones just vanished. I didn't get used to seeing a naked Nina. I don't think anyone ever could. Sometimes she had a tail, sometimes she just looked like a normal human. Except for the eyes and the fangs, of course. I wore clothes, except to shower or sleep, and I was very shy about being naked in front of her.\n\nIf male demons were anything close to her perfection of form, I wasn't going to stack up well. I mean, I worked out and shit, but supernatural, I was not. I turned off the light as soon as she slipped that luscious body between the sheets. As soon as I was pulling down my shorts and underwear, the room began to glow like it was lit by her ruby fire, and there I was, exposed in all my glory.\n\nI felt fucking inadequate and hurried to get under the covers. \"What does one do while sleeping?\" she asked.\n\nI rolled over to face her. \"Umm... nothing. That's the point. You're resting. It's sort of like... have you ever been unconscious?\"\n\n\"No,\" she said. \"So, your mind is just a blank?\"\n\n\"Not exactly. I have dreams, and shit. You're still thinking, I think, just subconsciously. There is a sense of awareness, but like you're outside it. Everything sleeps, even animals. Are you going to be able to do this?\"\n\n\"Yes, I shall will my mind into being blank. Except for dreams. When will we begin?\"\n\n\"It takes a minute,\" I explained. \"I'll close my eyes, sort of go with my thoughts, then I'll just drift into sleep.\"\n\n\"I will watch you,\" she said. Her actions belied her words. Either that or she intended to watch from very close range. Before I could react, she was lying with her head on my shoulder, her left arm across my chest, those exotic amber eyes looking up at me, her left leg across my dick and I could feel that little tuft of soft curls against my thigh. This was awkward as fuck. She was always physical and touched me constantly, but this...\n\nMy left arm was hidden by all that hair, and I sort of wrapped it around her. Her skin was very warm, very soft and it felt like eiderdown. It felt almost as if she was covered with soft fuzz, a tactile sensation like I had never experienced, but a firmer touch revealed iron-hard muscle when she moved and flexed. I stroked her back and she made a purring sound.\n\n\"I think I shall like sleeping,\" she said.\n\nHer leg across my dick was making... things happen. She felt the things, and her thigh slid up, then back down, causing further happenings.\n\n\"Umm, Nina, we were going to sleep,\" I mentioned.\n\n\"You do not feel sleepy.\" She gave me a blinding smile, the tips of her fangs showing.\n\nI groaned as her thigh moved again and she wiggled against me, breasts, spectacular ones, squished against me and I could see one very erect brown nipple, feeling it as it scraped against me. Her left hand slid down my stomach and closed around my cock, causing me to groan again.\n\n\"Can we have sex?\" she asked.\n\n\"I have no idea,\" I said. \"Do demons have sex?\"\n\n\"Not normally, no,\" she said. That surprised me. I had somehow pictured her in thousands of hell-spanning orgies.\n\n\"Really?\" I had to ask.\n\n\"Really,\" she said. \"It's like eating or drinking. Maybe sleeping. Can we?\"\n\nI tilted her chin up with one finger so I could look into those exotic eyes. \"With me?\"\n\nShe nodded. \"I never have,\" she said softly.\n\nOh, my God! I managed not to say that. A virgin demon goddess! I didn't feel so intimidated by her. \"Are you sure?\"\n\nThere was no mistaking her reply. She slid on top of me, her hands and lips exploring. She was heavy! This was a solid woman... demoness. All that muscle, I guessed, or maybe demons had a higher density. This wasn't the time to ask dumb-ass questions.\n\nI rolled her over and I was on top. \"Let me,\" I said.\n\nShe pulled me in, and I tasted those puffy lips. She tasted like the wine she had been drinking, or maybe that was the way she naturally tasted. It was intoxicating, in any case. I pushed my tongue between them and felt her squirmy little tongue. We wiggled them together. I could feel her fangs, and it just felt like I was living in some fantasy world out of a graphic, very graphic, novel.\n\nI would never get tired of kissing her. It was very intense and exciting. The idea that I was in bed with the virgin Demon Queen of Hell, she wanted me and that she was the most gorgeous woman... demon... creature I had ever seen was making me nuts.\n\nShe broke our kiss for a moment. \"What should I do?\"\n\n\"Anything you want to do,\" I said. \"Mostly cooperate with me. I'll show you.\"\n\nShe nodded and pulled me back to her lips. I could have done that until I died of old age, but there were other treasures. I nibbled my way over to her ears. They were small, pointed at the top like some erotic elf. She was very sensitive, and she would tremble and draw in little gasps when I found some place she liked. I was remembering them for future reference. The little hollow behind her earlobes, the sides of her neck, that little hollow where her neck flowed into her shoulders all received extra attention, and she was looking at me with wonder in those amber eyes.\n\nWhen I reached her glorious breasts, she made a little moan. \"Mercer, you're making me... I've never...\" Her words trailed off as my fingers sunk into those perfect mounds. I kissed, nibbled, squeezed gently, avoiding her nipples for the moment as she began a slow writhing motion beneath me. They really were perfect.\n\nShe had large breasts. Not enormous, but full, heavy and incredibly firm and resilient. They stood up proudly, even with her lying on her back. The brown circles of her areola were a little puffy, thicker than the skin around, and her nipples were fat little nubs, more an extension of her areola. She groaned as I loved on those breasts, tangling her fingers in my hair and growling in frustration at my avoidance of her nipples. She twisted under me, moving my head and pushing her right nipple into my lips.\n\nI chuckled and sucked it in, drawing a long moan from her. I worked it with my tongue, lips and a nip or two, just letting her feel my teeth scrape over her. She was now trembling a bit, her writhing becoming more pronounced. I kissed my way over to that other mound and the trembling became more frequent.\n\nAgain, I could have loved that perfection forever, but this was only the beginning. Her ribcage dropped away to her flat belly, ridged with muscle, abs more defined than mine, kissing, licking every inch, dipping my tongue into the little elongated oval of her naval, causing her to giggle.\n\nShe giggled again as I pulled at the little tuft she had. It was fine, silky and sparse, ending just before her cleft. I skipped down to her feet. I had half expected hooves, but she had human feet, at the moment. They were small and perfect, her toenails were painted purple, matching the long nails she had at the moment. I massaged her cute little toes, giving each one a kiss before moving up over the high arch of her foot.\n\nThe spot just behind her ankle bone was sensitive, and I tickled it with my lips before moving up slender but muscular calves. She had another spot behind her knee, and the entire inside of her thighs were erogenous zones, making her moan constantly as my lips and tongue glided over that silken skin.\n\nI could smell her arousal, a faint musky odor as I approached the juncture of those strong thighs. I nipped at the tendons that were stretched as she spread herself for me, finally moving up to her center. There it was: feminine perfection. Well, Demon Goddess perfection.\n\nHer lips were the same dusky shade as her skin, that shade fading to pink inside. Her lips were sealed together, forming a perfectly symmetrical line up to the dusky little nub at the top. I had to taste her.\n\nHer hips jolted when my tongue brushed gently across her lips, and again when I tickled her clit. I moved back to the bottom, cupping her fantastic ass in my hands, testing the firmness with my fingers, finding, again, perfection. I burrowed my tongue between those lips, finding her entrance, and she cried out, her hands again resting on my head, fingers tangling in my hair.\n\nShe was slippery inside, tasting tangy and sweet, my tongue seeking, thrusting inside her as far as I could. I licked her lips, spreading her moisture and her trembling was rising, her thighs clasping my head in a contraction, then falling open. I used everything I remembered women liking, everything I had ever read or heard, determined to make the first time for my Demon Queen something she would never forget.\n\nShe was making thrusting motions, running her fingers through my hair, and when I attacked that little dusky clit, she exploded, a hoarse little cry escaping her, her body bridging up off the bed as the tension that had been building snapped and she was coming.\n\n\"Mercer... I'm... oh, oh, what you're... YES! Mercer, I can't...\"\n\nBut she could, and she did. When I added a finger inside her tight wetness, she went off again, and again when I added another, curling one up inside her and finding that little rough bundle of nerve endings on the upper wall of her little pussy.\n\nShe bucked until I couldn't keep contact with her clit, her thrusting becoming motions of escape and she was pulling painfully at my hair, pulling me up over her until she could reach my lips for a kiss.",
        "She broke the kiss and panted, her body still jolting in aftershocks, and I moved until I could feel her moisture against the head of my cock. I moved until I could feel her entrance and as I parted her lips, she squealed.\n\nHer hands pushed against me. \"Wait, wait, Mercer. I'm not ready!\"\n\nI paused and her lips moved. After a moment, she nodded, all those curls bouncing. I kissed her lips. \"Are you sure?\"\n\nShe nodded again. \"Yes, the way is made smooth.\"\n\nI had no idea what that meant. Probably some demon shit, but there was something to it. I sensed no pain in her, only tight, very warm wetness and pleasure.\n\nI made one long slow push into her, drawing back once to let her moisture cover us, and I felt my balls against her ass.\n\nI looked into her eyes, and they were glowing, almost pulsing with an amber fire. \"This is right, Mercer,\" she said. \"So good. Love me, Mercer.\"\n\nShe had the ability to squeeze with her inner muscles, and I was on the verge of erupting. I slowed, pausing while embedded to the hilt. \"What...\" She thrust against me. \"Don't stop, Mercer! Something is happening. Don't stop.\"\n\n\"I'm about to come,\" I told her. \"Let me calm down for a minute.\" I silenced her objections with a kiss, and although she continued to urge me on with her hands and body, I did manage to regain some control.\n\nIt didn't last, and fortunately, she was on a hair-trigger. We came together. Her hoarse little scream was joined by a groan from me and we coasted to a stop, my heart feeling as if it was going to beat its way free from my chest.\n\nI never went soft, and as soon as our breathing slowed, she was moving again. All that lush sensuousness couldn't be contained. She kept gripping and releasing me with her inner muscles, almost like a hand, and it was exquisite torture.\n\nI figured I could last a while, this time, but she came so easily, and so often, that I found myself losing control again. The look on her beautiful features, the sound, smell, taste and feel of her was just overwhelming.\n\nI pulled out, flipping her face down and put my chest on that broad muscular back. Her ass was something out of fever dreams, and as I parted her thighs and slid back in, she groaned.\n\n\"Like this? It feels so big, Mercer, so deep! I'm going to come some more!\"\n\nShe did, her capacity for orgasm astonishing. She cried out unintelligible words, some in languages I didn't recognize, some just sounds, and it went on and on until I could hold back no longer, filling her hot little pussy again.\n\nI rolled us to the side, remaining inside her, spooning her, wrapping her exquisite gorgeousness in my arms. She continued to pulse around me, slowly fading, just letting me hold her. I felt her shake gently, then again.\n\nWhen I peeked over her shoulder, she was crying. I brushed away a tear with my thumb. \"What's wrong, Beautiful?\" I asked.\n\nShe turned her head, all that amber fire in her eyes banked and in liquid pools. \"I had no idea... that was... you don't know what you did to me, Mercer.\"\n\n\"I made love to you,\" I said.\n\n\"Love? Is that... Demons don't love. You destroyed me, Mercer. I'll never...\" A sob escaped and I squeezed all that gorgeousness up to me, turning her head so I could kiss her.\n\nI never went fully soft inside her, and I drifted off, murmuring little nothings into her hair. She could sleep, it turned out, and in the morning, we made slow sweet love, lasting hours, it seemed, until she complained about being hungry.\n\nThat was only the beginning. She was insatiable after that, trying to fuck me to death, I thought. She loved sucking my dick, and over the next four months, I had more sex than I had in the rest of my life combined. I was hopelessly, desperately, in love with the Demon Queen of Hell.\n\n*****\n\nNina was looking pensive. I wondered what was going on. She had been with me for four months, and I was completely under her spell. She seemed to be as into me as I was into her. She had infected every part of my life and I was coming to know her moods very well.\n\n\"Something bothering my lover?\" I asked.\n\nShe looked at me, shifted her eyes away, and then locked on mine. \"Yes, I need to tell you something. Don't interrupt me, okay?\"\n\nI pulled her down in my lap and she looked like she was about to cry. She could, I had learned.\n\n\"Mercer, it's time for me to go,\" she said.\n\n\"Go where?\" I asked.\n\n\"Away,\" she said. \"It's getting harder every day, and I can't stay here... with you.\"\n\n\"Why not?\" I asked. \"You can't just leave. You're bound to me.\"\n\nShe shook her head and all those pounds of curls swayed. \"When we had sex, the first time, it released my bindings,\" she said.\n\n\"What? Why... how... you've stayed here for four months on your own, then?\"\n\n\"Yes. It's time for me to go, Merc. I have other... responsibilities. There's a reason I'm a demoness. There is no future for us now. Don't tell me you haven't always known that.\"\n\nI guess I had, but it had been something I'd been pushing away. I was devastated. I felt like my heart was being torn, still beating, from my chest. \"Nina, don't...\"\n\nShe put her finger over my lips, leaned in and kissed me and she rose to her feet. \"It's better this way,\" she said. \"Goodbye, Mercer.\" A tear fell, there was that ruby flash, and she was gone. I sat, stunned. What had just happened? I was alone. It was the end of the affair, and the breaking of my heart.\n\n*****\n\nI was sitting in that same place, four years later, though on a different sofa. It happened again. There was that ruby fire and there she was. She wasn't alone. There was a little girl with her. Well, not a little girl. She had hooves and a tail. She was cute as fuck, too. Her eyes were a glowing yellow and made quite a contrast with her dusky skin. She had on a little blue dress and it had writing on it: \"I Love My Dad.\" She was holding Nina's hand.\n\n\"Mercer, this is Mag'dra'ruth,\" she said. \"She likes to be called Maggie. She is your daughter. Take care of her.\" She was gone. Just like that, I was sitting in my living room staring at a little girl standing in front of me with huge yellow eyes and a tail.\n\nShe blinked, just looking at me. I had no idea what to do or say. I just sat there looking, and feeling, stupid. She spoke.\n\n\"Hi, Daddy.\" She had the cutest little voice imaginable. \"What are we going to do today?\"\n\n\"Do you know me?\" I asked.\n\n\"Yes, Mama and I have been watching you for a while so I would.\"\n\n\"Watching me? How? Why didn't I see you?\"\n\n\"I don't know how to tell you,\" she said. \"I can be where no one can see me. So can Mama. I can see things that are happening in other places.\"\n\n\"Oh.\" I was suddenly a moron. What do you say to a four-year-old demon child? Especially when she seems to be your daughter.\n\n\"Well, what do you like to do?\" I asked.\n\n\"I like hugging,\" she said, dropping her head and scuffing the rug with her hoof. She glanced at me then dropped her eyes again. She looked so forlorn and cute and little it was breaking my heart. I held out my hand.\n\nShe saw it and took my big hand in her little one. I noticed that she had three fingers and two thumbs. I pulled her to me and hugged that little form, unable to believe how right this felt or the feelings going on inside me.\n\nShe was trembling a little, and I felt a little sob escape. I wanted to reassure her that everything was going to be okay, but I was too awkward. I just held her until she stopped trembling.\n\n\"I got the hugging,\" I told her. \"We're going to be doing a lot of that. Anything else you like?\"\n\n\"Yes, I like cat memes, and being outside and explosions,\" she said.\n\nThat cracked me up. I laughed and she looked up at me. She was so adorable! \"You can't explode anything in the house, Maggie, okay?\"\n\n\"Okay. We can explode things outside?\"\n\n\"Sometimes,\" I said. \"Not around where there are people or houses, though. I'll tell you when it's okay to explode something.\"\n\n\"Yes. I'll always wait for you to tell me,\" she said. \"Daddy, do I have a room? I think I should have a room.\"\n\n\"Yes, there are two rooms you can pick from,\" I said. \"If you don't like things in them, we can change them. Can we just talk for a minute?\"\n\nShe took two steps on her little hooves and sat down beside me, very close. She snuggled against my side, slipped her hand into mine and her tail came up and wrapped around our hands. \"What will we talk about?\" she asked.\n\n\"Well, anything, everything, whatever you want to talk about. I need to get to know you. You know me from watching, or whatever. I want to find out all about you.\"\n\n\"What do you want to find out?\" she asked.\n\nShe was looking up at me with those luminescent eyes. \"Lots of things,\" I said. \"What you like, besides hugging, I mean, what you don't like, what it's like to be you, everything. For instance, can you change how you look?\"\n\n\"Yes, is something wrong? How do you want me to look?\"\n\n\"Just like you do when it's just you and me,\" I said. \"When we're around other people, can you look like them?\"\n\n\"I think so,\" she said. \"What would I do?\"\n\n\"Well, humans don't have tails,\" I explained. \"Can you not have a tail? Can you make your hands like mine? Can you have different colored eyes?\"\n\nHer little chin trembled, and I could tell she was about to cry. \"What's wrong, Maggie?\" I hurriedly asked.\n\n\"You think I'm ugly.\" A big tear fell off her unbelievably long lashes and trickled down one little rose-blushed dusky cheek.\n\nI was horrified, and snatched her up, wrapping that tiny little body in my arms. \"Noo, Baby. I don't think you're ugly. God, Maggie, you're gorgeous. I want you to be you when you're with me and it's just the two of us. I love your cute little tail, and your eyes are sooo beautiful, but when we're with other humans, they won't understand. They aren't used to little girls as different and beautiful as you.\"\n\nDamn Nina for not explaining this and leaving me in this position, I thought. My heart was breaking. \"Maggie, you look like your mother, and she is the most beautiful being I've ever seen or known. You look just perfect, and just like you should.\"\n\nHow do you explain this to a tiny little demon-girl? \"Look at me, Maggie. See the clothes I have on? See your dress?\"\n\nShe bobbed her little head, her curls bouncing.\n\n\"Well, I'm just fine naked, but I wear clothes because of other people. Do you understand that?\"\n\n\"Yes. I can change and I will if you want me to. So, if I change, it will be like putting on clothes? Do you like my dress, Daddy? It says, 'I love my dad.' I made it for you.\"\n\nNow I was going to cry. \"I love your dress, Baby,\" I told her. \"Thank you for loving me. I am going to love you, too, for the rest of my life.\"\n\nShe got a little golden glow about her. \"What do you think you might like to do tomorrow?\" I asked.\n\n\"Can we go to the zoo?\" she asked. \"I like animals. There weren't any animals... before.\"\n\n\"Yes, we can go all the time if you want to. Do you like my house?\"\n\n\"Yes, I do. Do you think I could have some ice cream? I like ice cream. And water.\"\n\nI laughed. \"Absolutely. I have vanilla or pecans, pralines and cream. Which do you want?\"\n\nShe decided on the vanilla, and it was so cute watching her eat it, her little fangs biting into each scoop. When she was done, I asked her, \"What do you want to do now?\"\n\n\"I'm tired,\" she said. \"Will you tell me a story?\"\n\n\"Yes, I have a book with stories in it around here somewhere. Can we read it?\"\n\n\"Bath and brush my teeth first,\" she said. \"I like baths.\"\n\nI ran her bathwater, and she came in and climbed into the bubbles, just a little brown chubby baby, but with the tail. I washed her and she leaned back so I could wash her hair. I dried her off, brushed and moisturized her hair, put on the little satin hair bonnet that magically appeared and she went and got a nightgown I didn't know I had. I showered and when I came out, she was sitting in my bed with the book, looking at the pictures. She was so cute and so lonely looking it made me cry.\n\n\"Daddy?\" she asked.\n\n\"I'm okay, Baby Girl,\" I told her. \"I just never dreamed I'd have you, and it makes me really, really happy.\"\n\n\"Me too.\" She patted the bed. \"Read to me.\"\n\nWe slipped under the covers and she curled up against me. We finished the story and she snuggled in. \"Maggie, are you going to sleep with me?\" I asked her. \"I didn't know if you slept or got tired.\"\n\n\"Yes, I do,\" she said. \"Mama showed me how, and I'm kind of human, like you, Daddy.\"\n\nShe burrowed closer. I had to smile. \"Comfy?\" I asked.\n\n\"Yes, hug me, Daddy,\" she said.\n\nI did and I knew I was never going to let her go. She asked me about her mother several times the first week. I told her she had to go away for a while, and Maggie seemed satisfied with that. She cried twice, and when I asked her why, she told me she needed Mama. It broke my heart. I tried to keep her busy, so she didn't have time to miss Nina. I took her to the zoo the next day. I got us those Friends of the Zoo lifetime passes.\n\n\"See, Maggie; we're going to come here a lot. We can come any time and we won't even have to stand in line,\" I told her. She was ecstatic and we spent the day. I discovered quickly that I had to keep a close eye on her. She changed her hooves into cute little feet, complete with shoes, the fangs shrank in size, her hands were normal and her tail vanished. She would occasionally slip and have little horns, or her eyes would glow when we were out, but that diminished as she got used to it.\n\nI also had to stop her from climbing the fences into some of the animal enclosures at the zoo. \"Maggie! Stop! What are you doing?\" I asked when I saw her inside a fence surrounding leopards, looking for a way across the moat.\n\n\"What? I was going to play with the kitty,\" she said.\n\n\"Maggie, that leopard would eat you,\" I told her as I lifted her back over the fence. Luckily, no one saw her.\n\nHer eyes glowed, as if she felt challenged. \"No,\" she said. \"It would be afraid of me, and knows I could eat it, if I wanted.\"\n\n\"Really? Do you know this, or you just think it?\" I asked. I had no idea about what a little adorable demon girl could do.\n\n\"I know,\" she said. \"I'm only kinda like you, Daddy. I'm not afraid of anything, except you being mad at me.\" She looked like she was going to cry, and little horns popped up.\n\n\"Noo, Baby, Daddy isn't mad at you,\" I told her. \"We can't go in there, though, or eat the leopards. We'll get kicked out and the people won't let us come back.\" I hugged her and the horns disappeared.\n\nI took two more days off work and we went shopping. We got her all kinds of things to wear and play with, and she wanted a dozen books. I got her an iPad so we could get e-books to read. We got her a bunch of new clothes and she seemed very happy being with me.\n\nWe talked about what we were going to do when I went back to work. There was a daycare in my office building, and I got her in.\n\n\"Maggie, there are going to be some... things you have to be careful about.\" I told her.\n\n\"What things, Daddy?\"\n\n\"Well, like you can't have your tail, or hands, and your eyes have to be like other people's eyes. You can't have your horns, or hooves, either. Do you think you can do that?\"\n\nShe nodded vigorously. \"Yes, that's just for us, right?\"\n\n\"Right,\" I said. \"Also, you can't eat things, understand?\"\n\n\"You mean like when I ate the goldfish?\" she asked.\n\n\"Yes, exactly. Only things humans eat,\" I said. \"Also, you can't make anything catch on fire. No curses or opening portals, okay? Just human things.\"\n\n\"Okay, Daddy,\" she said. \"Now will you read me my new book?\"\n\nThe first day, the girl who ran the place came to my office and got me. \"Maggie is crying, and she won't stop,\" she told me.\n\nI explained the circumstances to her of Maggie just coming to live with me while her mother was away, and she was very sympathetic. \"Come and see her and we'll bring her back here so she can see where you are,\" she said. \"I think if she knows you're close she'll be okay.\"\n\nI went with her and when I got there, Maggie was sitting in a little chair. Tears were running down her little brown cheeks and she was shaking. When she saw me, she ran and threw her arms around my leg. \"Daddy!\" she squealed, her eyes glowing a little too much.\n\nI knelt on the floor and hugged her up. \"Let's go see where I work,\" I told her.\n\nShe dried her eyes with a tissue and blew her nose. She held my hand, and we went back to my office. I got her a doughnut, and we went in. I sat her in a chair and went behind my desk.\n\n\"So, Miss Roberts, I understand you want a job with SI,\" I said. I was the HR manager, and I did all the hiring.\n\nShe giggled. \"No, silly; I just needed you.\"\n\n\"Well, here I am. If you need me you just go to the stairs, climb up three flights, walk down the hall and here I am,\" I told her. \"I'll always be here and if you need me, that's all you have to do. I'll come and get you for lunch and when my day is over, I'll come get you and we'll go home.\"\n\n\"Okay,\" she said.\n\nShe finished her doughnut, and I took her back. I went and got her for lunch, and we got a sandwich at the deli around the corner. She brought the daycare girl back in the middle of the afternoon and just came in and hugged me, then went back. Once she figured out where I was and knew she could come and see me any time, she came twice a day to see me and she was just fine. \n\nWhen she started school, that all changed a bit. I would drop her off at school and go to work. She got out at two-thirty, and I paid one of the mothers of a classmate to bring her to the office. She would come in, give me a hug and then go to the daycare. My boss was a very understanding woman. She was very kind, and she never gave me any trouble about Maggie being in my office or me taking off work to go and see her school events.\n\nMy house changed a lot, too. My refrigerator became an art gallery. There was different food in the pantry. Cereal with goofy names and exotic colors lined the shelves. There were toys in every room and little girl clothes turned up in odd places. Those were the \"real\" ones. She was very good about picking her stuff up when I reminded her, but she had a habit of just leaving things where she last used them. I remembered her mother doing that. She always remembered where they were if I didn't move them, so I just made Tuesdays and Thursdays pick up days. She would scurry around and put everything away and the house would be orderly for a day. She never complained.\n\nShe had her own bedroom, and she kept all her stuff in there, but she slept with me. We shared my bathroom for tooth brushing but she bathed in hers. She didn't much care for showers, unless we were in a hurry, and her tub had all kinds of bubble bath standing on the ledge. She had a basket of plastic tub toys and she used them all. Dinosaurs swam in bubbles and roared at each other, ducks and fish leaped and splashed, and a little demon girl giggled.\n\nI never realized how lonely my life was until she came to live with me. She was a very good little girl. We had a few clashes of wills. She would sulk for a few hours and then climb up on my lap for a hug. \"I'm sorry, Daddy,\" was the end of the matter.\n\nThere were... demon issues that weren't so easy to curb. She... ate things. There was almost nothing she didn't want to taste. She had ordinary tastes, like humans, and if she didn't like it, she wouldn't eat it again, but there were weird things, too. She would eat ice, constantly. She also liked raw meat, any kind. It was very disconcerting the first time I found her in the kitchen eating hamburger, straight from the package.\n\n\"Umm, Maggie, I don't think that's healthy,\" I said.\n\n\"What, Daddy?\" She looked up and chewed, innocently.\n\n\"Eating raw meat,\" I told her. \"Let me cook that for you. You might get a disease or a parasite.\"\n\n\"What is a parasite?\" she wanted to know.",
        "\"Well, never mind that.\" I didn't want to explain. \"Stuff that will make you sick.\"\n\n\"Oh, I don't get sick,\" she said.\n\n\"Really? Never?\" I asked.\n\n\"No, Daddy, I'm only kinda like you,\" she said.\n\n\"Well, you can't be eating raw meat where anyone can see you,\" I told her. I never had to tell her anything twice. Most children forget the shit you tell them in five minutes. Not Maggie. She never forgot anything, which landed me in hot water a time or two. Nothing I said escaped her attention, and if I mentioned doing something, she would remember and surprise me, a week later.\n\nOnce, I told her we should go to the lake on Saturday. I forgot all about it, and when I got up that Saturday morning, she was dressed and waiting for me. \"Sup, Baby?\" I said when I saw her.\n\n\"I was waiting for you to wake up. Today, we're going to the lake,\" she announced. Of course, then I remembered, and she looked so cute and so eager that I had to take her to the lake.\n\nAt some point, I was never sure when, she stopped having hooves, even when it was just the two of us, and she had normal feet from then on. I never knew if it was a conscious decision or just part of her growing up. When it was just us, she always had a tail, the eyes, those little fangs, and cute little horns, most of the time.\n\nI think she was five or six when I became aware that Nina was keeping an eye on us. Maggie had just finished putting together a very complicated Lego set. She loved them and spent hours assembling them. They were also the bane of my existence. I dared not walk around the house barefoot. I had a pair of slides by the bed, and I quickly learned to put them on before doing anything. Stepping on a Lego with your bare feet on the way to the bathroom at 2AM tends to make an impression on a guy, pun intended.\n\nAnyway, she had built a whole set and we were admiring her handiwork. \"Mama likes it,\" she told me.\n\n\"Really? How do you know?\" I asked.\n\n\"She told me,\" Maggie explained.\n\n\"When?\"\n\n\"Today,\" she said.\n\n\"She was here?\"\n\n\"Not exactly,\" she said.\n\n\"What does that mean?\" I asked.\n\n\"I don't know how to explain it,\" she confided. \"We were... someplace else.\"\n\n\"Oh. How often do you talk to her?\" I asked.\n\n\"All the time,\" she said.\n\n\"Oh. Okay.\" This was obviously some demon shit. It worried me.\n\n\"Maggie, can I ask you something?\"\n\n\"Yes, Daddy. I might not know, though,\" she said.\n\n\"Baby, are you staying with me, like forever? Is Mama going to want you to be with her at some point?\"\n\n\"Oh, no, Daddy. I'm going to be with you,\" she assured me. \"I love you, Daddy, and I never want to be anywhere else. Sometimes I'm with Mama in the other place, but I'm with you in the real place.\"\n\n\"Do you think you could ask Mama to talk to me?\"\n\n\"Yes, but she probably won't,\" she said. \"I asked her why she doesn't love you and want to live with us. She said she does love you, but it's plicated.\"\n\n\"Complicated?\" I asked.\n\n\"Yes. Daddy, do you think I could get the Millennium Falcon Lego set?\"\n\n\"Yes, is that what you want for your birthday?\" I asked.\n\nShe nodded, her mass of dark curls swirling as she did. \"Yes, thank you, Daddy.\" That was the end of the conversation, and Nina never talked to me, so if Maggie mentioned it, Nina turned her down.\n\nWhen she got to the third grade, she wanted to play basketball. She was tall for her age and she dominated the league. She had really good hands, even when she had three fingers and two thumbs when just the two of us played at home, and there was a little girl on her team who could handle the ball. She would bring it up, throw it up close to the basket and Maggie would catch it. It didn't matter what kind of traffic was around, she caught it, and no one could stop her. They even played boys teams and won. I went to every game and she gave me a thrill watching her. We had a little talk after her first game.\n\n\"Maggie, I know that you can... do stuff.\" God, this was awkward.\n\n\"You mean because I'm half-demon?\" she asked.\n\nWhew, well, that made it a lot easier. \"Yeah, that. Remember when you told me you could kill and eat a leopard?\"\n\nShe nodded, all her curls bouncing. \"So, you're stronger and faster than little girls who aren't... half-demon?\"\n\n\"I don't know,\" she said. \"I think so. Could you kill a leopard, Daddy?\"\n\n\"Noo, Baby Girl. No full humans can do that.\"\n\nShe thought for a minute. \"Well, I guess I am stronger and faster than full humans then.\"\n\n\"Do you use that to play?\" I asked.\n\n\"No, not really,\" she said. \"It's kind of like my tail.\" She tickled my ear with it and giggled. \"The other people wouldn't understand if I did the things I can.\"\n\n\"My baby is smart,\" I said. She beamed up at me. \"And cute!\" I snatched her up and squeezed her on my lap.\n\n\"Remember when you told me we could explode things?\" she said.\n\n\"Uh, yeah, I do. Why?\"\n\n\"When do you think we can?\" she asked. \"I like chasing things, too, but you don't like for me to chase Mrs. Peterson's dog.\"\n\nThat cracked me up. When I recovered, I asked her if she would like for me to buy some land in the mountains where she could blow things up and chase things. Her eyes glowed brightly, and she could hardly contain herself. She squealed and did a little dance in her excitement.\n\nI promised to get started looking right away and reminded her about Mrs. Peterson's dog.\n\nPoor Chopper was scared to death of her. We had been kicking a soccer ball around in the back yard when I noticed the mailman come one Saturday. Chopper hated the mailman, and he was barking furiously at the gate. I went out to get the mail at the end of the driveway, leaving Maggie in the back yard.\n\nWhen I got back, she had climbed the fence and was zooming around Mrs. Peterson's back yard with an obviously terrified Chopper doing his best to stay three steps ahead of her. She was completely contrite when I told her she couldn't be doing that. Chopper never recovered from his fright, and anytime he saw Maggie he headed for cover.\n\nShe was still a little chubby when she started playing basketball, but that melted away and she got lean and fast. She was still a baby, but she was graceful and very coordinated for her size and age. Her coach was also the science teacher at her school, and she loved Maggie. Of course, the fact that she dominated the conference didn't hurt anything. As I got better acquainted with Brianna Morgan, I realized that she was really an amazing person. She was a very good basketball coach, and I thought she was being wasted coaching elementary kids. I wasn't complaining, but she sure seemed like she should be coaching the high school.\n\nMaggie got the benefit of all that good coaching and she took advantage of it. By the time she was in the fifth grade, she was playing on traveling teams and getting quite a reputation. Nina was very tall, for a woman. Well, who knew; maybe all demonesses were tall. I was six-four, and Maggie was going to be tall, too.\n\nI was at a basketball game and Brianna came up while the girls were getting dressed. I was sitting in the bleachers and she climbed up and sat by me. \"Maggie had a good game, Mercer,\" she said.\n\n\"Yeah, she played well,\" I said. \"You've got quite a little point guard there in Jasmine, too.\"\n\n\"She knows how to feed the post,\" Brianna said. \"Do you and Maggie have plans?\"\n\n\"Nah, we were going to grab something to eat and head home,\" I said.\n\n\"Can I come?\" she asked.\n\nI was a little shocked. I looked over at her and she was blushing. \"Oh, yeah, I think so,\" I managed. \"Let's ask Maggie.\"\n\nShe was very happy with that plan, and we went to Fogo de Ch\u00e3o, a Brazilian steakhouse. Maggie was quite the little carnivore, and she loved the different kinds of meat there.\n\nWe had a really nice time, and I liked Brianna a lot. Once I glanced over at Maggie and her fangs were showing quite a bit as she chomped into a piece of top sirloin. I caught her attention and tried to subtly tap my teeth. She caught my drift, and the fangs shrank noticeably. We shared a secret grin and Brianna never noticed.\n\nWe dropped her at her car, and on the way home I asked Maggie if she liked Brianna. \"Yes. She's very nice, and pretty, too. Do you like her, Daddy?\"\n\n\"I do,\" I said.\n\n\"I can tell she likes you,\" Maggie said. \"Is she going to be your girlfriend?\"\n\nI laughed. \"I have no idea, Baby. What would you think about that?\"\n\n\"I don't know,\" she said. \"You've never had a girlfriend. Why don't you have a girlfriend?\"\n\n\"I've got you,\" I said.\n\nI felt her tail sneak over and wrap around my arm. \"Yes, and I've got you, Daddy,\" she said.\n\n*****\n\nWe bought some land out near Live Oak Springs, about 10 miles out of town, and we got one of those Airstream Flying Cloud travel-trailers that we parked out there. If there wasn't a game on the weekend, that's where we spent our time.\n\nShe really did like explosions. We bought Tannerite by the case and she danced with joy when her carefully arranged blasting scenarios went boom. She could explode things that weren't explosive and set things on fire, but she liked designing the things she was exploding. She also zoomed around after all the wildlife that was unwary enough for her to spot.\n\nSome she caught and ate, much to my dismay. Reconciling the little cuddly demon girl who snuggled up to me at night with the predator that was her second nature was disconcerting, to say the least.\n\nI was getting to the point where Brianna was approaching that \"girlfriend\" status, and things fell apart. I had begun to notice that Maggie had these quiet times. She would be in the middle of something, then she would be quiet for a while. That was unusual, because she chattered at me constantly. She wouldn't move a muscle, and I wondered what was going on. I found out.\n\nWe were on the way home from our \"ranch,\" as she called it. She was acting a little strange, like she wanted to ask me something but wasn't quite sure of herself.\n\n\"Mama is at home,\" she finally got it out.\n\n\"What home? You mean our home?\"\n\nShe nodded. \"Yes. She told me. She wants to talk to you.\"\n\n\"Well, what if I don't want to talk to her?\" I asked.\n\nShe gave me a side-eye look. \"Why would you not want to talk to her, Daddy?\"\n\n\"That would take me a long time to explain, and it really doesn't have anything to do with you, Baby,\" I said. \"I'm not sure I can tell you so you would understand.\"\n\n\"That's okay,\" she said. \"I don't think you can keep from talking to her. She's a demon.\"\n\n\"Yes, I know. I could do a warding or a binding. Do you know what those are?\"\n\nShe nodded. \"Yes, Mama told me. If you do one of those, though, it will do things to me, too.\"\n\n\"Well, I hadn't thought about that,\" I said. \"I promise I won't do anything like that. Do you think she's going to try to take you away from me? That would kill me, Maggie. I love you too much, Baby Girl.\" I could feel the emotions rising up, threatening to choke me.\n\n\"I don't know,\" she said. \"I won't go, Daddy. That would kill me, too. I love you, too.\" Her tail sneaked over and wrapped around my arm like it always did when she wanted to be in contact with me.\n\n\"I'm not going to let anyone or anything take you away from me, Maggie,\" I told her. \"Not even your mother.\"\n\nHer tail gave my wrist a squeeze. \"Thank you, Daddy.\"\n\n\"Well, I guess we'll just see what she wants,\" I said. \"She didn't tell you anything?\"\n\n\"No, just that she was at our house and wanted to talk to you,\" she said.\n\n*****\n\nShe was there, sitting on the sofa, looking just as gorgeous as the day she brought Maggie. It made my heart hurt to look at her, so I didn't. I busied myself unloading Maggie's backpack.\n\n\"Hello, Nina,\" I said. \"So nice of you to drop in.\"\n\nShe snorted. I could smell a faint whiff of sulfur, probably from when she opened the portal. \"We need to talk, Mercer,\" she said.\n\n\"Maybe you do,\" I told her. \"I'm not sure I have a single thing to say to you.\"\n\nShe looked at me as if I'd slapped her. \"What's wrong with you?\" she asked.\n\n\"Me? There's nothing wrong with me. It's something wrong with you, Nina. Let's see, you twist me all up falling in love with you, you vanish after giving me five minutes while you tell me you're leaving. Not a word, not a hint. Four years later, you drop Maggie on my doorstep and disappear again. You didn't bother for four years with anything like, \"Hey, Mercer, I forgot to tell you that you're a father.\" You haven't spoken to me since the day you left her here, and now you want to talk? Fuck you, Nina.\"\n\nMaggie gasped at my profanity. \"Sorry, Baby,\" I said. \"Do you mind doing something while your mother is here? I don't want you hearing this.\"\n\n\"Okay, Daddy,\" she said. She went in her room and closed the door.\n\n\"You know she can hear anything we say and watch us from other planes if she wishes,\" Nina said.\n\n\"Yes, and there are a whole shit-ton of other things she can do,\" I said. \"I trust her, and I know she won't. She loves me, Nina, something you know nothing about, and she knows I love her. She likes me trusting her. Again, something you know nothing about.\"\n\n\"You know nothing of me,\" she said. \"Don't be bitter, Merc. There are things happening and forces at play of which you know nothing, and it would freeze your soul if you did.\"\n\n\"Gee, well, that explains everything, doesn't it, Nina? I understand it all, now.\"\n\n\"Why must you be so sarcastic? I have never harmed you, Mercer, and I will never allow harm to come to you. I may harm you myself, though, if your attitude doesn't change.\"\n\n\"I'll take care of myself, thank you,\" I said. \"And I'll take care of Maggie. I summoned you, didn't I? I'm not afraid of you, Nina.\"\n\nShe laughed. \"Yes, I know. That's one of the things I love about you. You are in the presence of the Demon Queen of Hell, and you aren't afraid.\"\n\nOkay, I lied. If Maggie was a little bundle of dynamite who could kill and eat a leopard, Nina was a tactical nuke. I wasn't powerless; I'd kept up with my skills, but like she said, \"Demon Queen of Hell,\" and shit. I wasn't going to show it, though, and I wasn't going to back down.\n\n\"Why are you here, Nina?\"\n\n\"It's Maggie's birthday next week,\" she said. \"She wants a dog.\"\n\n\"I know,\" I said. \"Are you telling me to get her a dog?\"\n\n\"No, I'll get her one,\" she said.\n\n\"So why are you telling me?\" I asked. \"All concerned all of a sudden about my feelings?\"\n\n\"Of course,\" she said. \"You are the father of my child.\"\n\nThat hurt, and I knew it shouldn't. Somewhere in me was the idea that maybe she cared about me, just a little. \"Oh, yes, I am.\" Brilliant.\n\nNina actually hung around until bedtime. She bathed Maggie and then did her poof of smoke thing.\n\nWe didn't see or hear anything of her until Maggie's birthday party. Brianna was there when Nina appeared. She and Brianna bristled like cats and I could almost feel the electricity snapping in the air between them. I was clueless, as usual.\n\nAfter the guests left, Nina with them, I wondered if she had forgotten the dog thing. Maggie hadn't forgotten. She seemed to be waiting for something.\n\nOf course, there was that dramatic entrance and Nina and a... thing appeared. It was vaguely dog-like, I suppose.\n\n\"This is Riam,\" Nina said. \"He is a puppy, and he is for you, Mag'dra'ruth.\"\n\nShe squealed with delight. \"A Hellhound, Daddy!\" She was very excited. \"I have always wanted one.\"\n\nI, decidedly, did NOT want one. It looked like it weighed 100 pounds, it was as tall as Maggie and it was a puppy? It had... other undesirable attributes. Its tail was very long and vaguely reptilian, when it opened its mouth it was plainly on fire inside, and it had fierce red eyes that chilled my soul.\n\nMaggie leaped on it and wrestled it to the floor as it made what were, apparently, happy sounds and motions.\n\n\"Umm... Nina, could I speak to you outside for a minute?\" I asked.\n\nShe followed me into the back yard.\n\n\"Yes?\" She cocked her head to one side in that familiar interrogatory way.\n\n\"What the... hell, Nina? We can't keep that... that! Humans will be terrified of it and the whole \"demon jig\" is going to be up! I don't know if the police can kill Maggie, but they will damn sure try to kill me, her and... and... what did you say his name was?\"\n\n\"Riam,\" she said. \"Calm down, Mercer.\"\n\n\"Calm down? It's a fucking Hellhound, Nina!\"\n\n\"And I'm a demon,\" she said. \"So is Maggie. Do you take her out with her horns?\"\n\n\"No. Are you telling me that... Riam can change?\"\n\n\"Yes, of course. He'll look like any other puppy when it's necessary.\"\n\n\"Oh...\" Well, I still didn't like it. \"Is he going to eat people or burn down the house with fire-breath or some shit?\"\n\nShe laughed. That laugh still did things to me. \"He's very well behaved. He's as smart as some humans, Mercer. Take a breath.\"\n\nThat was good advice. I collapsed into a lawn chair.\n\n\"Who was the female human with her hooks in you?\" she asked.\n\n\"None of your business,\" I said.\n\nShe looked hurt, for some reason. \"You have no idea, do you?\" she asked.\n\n\"I guess I don't,\" I said. \"No idea about what?\"\n\n\"Never mind,\" she said. \"So, we're all good on the dog?\"\n\nAt that minute, a gorgeous little demon girl and a horrific beast charged out the back door. There, before my eyes, the beast sort of shimmered and became what looked like some sort of mastiff puppy. It was still huge, black and it had trouble with the eyes, but the red glow dimmed and became brownish. Maggie leaped on him and they wrestled around in the grass.\n\nHow could I say no? She obviously had fallen in love.\n\n\"What does he eat?\" I asked Nina.\n\n\"Well, 'eat' isn't exactly what he does,\" she said.\n\n\"What 'exactly' does he do, then?\"\n\n\"He feeds off the life-force of creatures he kills,\" she said.\n\n\"Good God, Nina!\"\n\nShe winced. \"He doesn't have to kill things often,\" she said.\n\n\"How often?\"\n\n\"I really don't know,\" she said. \"He'll let Maggie know. Take him out to your ranch, turn him loose and he'll do his thing.\"\n\n\"So now I'm letting a murderous beast out to slaughter the neighbors?\"\n\nShe laughed. \"He won't do that. He'll find something like pests and get rid of them for you.\"\n\n\"Just what I need,\" I said. \"A demonic mousetrap.\"\n\nShe laughed again. \"I had almost forgotten how funny you are, Mercer.\"\n\n\"Yeah, I'm a riot, all right. Say, isn't it time you got back to devouring souls, or something?\"\n\n\"Why, you got a date with the human bitch?\" she asked.\n\n\"Again, none of your business,\" I said.\n\nShe nodded. \"Okay then. See you around, Mercer.\"\n\nShe went inside and when I followed her in, the red fog was beginning to thin. Maggie and Fido played outside for the next hour or so, and I watched football, checking on them, occasionally.\n\nThey finally came inside, and the beast was back. Maggie didn't seem to mind and came and snuggled me. Fido curled at her feet and she rested them on him. \"I love my puppy, Daddy,\" she said.\n\nI squeezed her. \"I'm glad, Baby Girl. Did you have a happy birthday?\"\n\nThose adorable yellow eyes looked up at me and her curls bounced as she nodded. \"I did. Thank you, Daddy.\"\n\nThat was the beginning of something different, and the end of something else. Brianna began to pull away from us, and the reason was that she was \"unhappy with Maggie's mother being around so much.\" It was plain that I still had \"feelings\" for her, she claimed, and she stopped accepting dates with me.\n\nNina was around, too. She started dropping in on us on a regular basis. I asked her why, and she was evasive. \"I love my daughter and want to spend time with her on a real plane,\" she said.\n\n\"See, I never really got that,\" I said. \"Why is she with me, Nina? Why did you give her to me? Why did you wait four years, and why are you being all \"Mom\" now? I would never have known about her.\"\n\n\"She belongs with you,\" she said. \"You're her father.\"\n\n\"You're her mother, why doesn't she belong with you? Don't get me wrong, I'd die for her, and you'd have to kill me to take her, but why?\"",
        "\"It's... impossible for me to explain to you.\"\n\n\"I'm too dumb?\"\n\n\"No... it's impossible, Mercer. Trust me.\"\n\n\"No, you're the Demon Queen of Hell. Trust you, is exactly what I don't do.\"\n\n\"How about this? I shall explain everything to you, Mercer, but I'm not ready yet.\"\n\n\"Fuck no,\" I told her. \"Maggie is growing up, Nina. She needs a mom. You fucked up my chances with... Brianna, and I liked her a lot. So did Maggie.\"\n\n\"She has a mom.\"\n\n\"You? Get real, Nina. You're the Demon Queen of Hell. You don't have time to be her mom. She needs a mom who lives with us, who loves us and cares more about us than you're capable of caring about anyone.\"\n\nShe looked at me as if I'd slapped her. Tears filled those gorgeous eyes and ran down her cheeks. \"What?\" I asked. \"I get that you're like eternal, and shit. I'm not. I don't know about Maggie. You don't tell me shit, and she doesn't know. I love her with every cell of my body, and she loves me. Don't tell me you're going to explain everything. You've had years to 'explain,' and you've never made the slightest effort.\"\n\n\"Mercer... you don't know what... I never wanted... I don't think you're capable... Shit! You fucked up everything when you summoned me! You had no idea what you were doing; you were your usual bumbling adorable self, and I...\"\n\nThis was weird as fuck. I'd never seen her at a loss for words. I didn't think demon queens ever were. She gained her cool aplomb back, quickly.\n\n\"I'm not doing this now. I told you I'll explain everything. I will. Give me six of your months, Mercer. You won't regret it, I promise. Have I ever lied to you?\"\n\n\"I have no idea,\" I told her. \"You're a demon, Nina. Isn't that what you do?\"\n\n\"I've never lied to you,\" she said.\n\n\"Okay, whatever, but what happens in six months? Fuck that shit, Nina. I'm not holding my breath. It's been years. You've never bothered to tell me anything. I'm not your slave and I'm not holding my breath. You don't know what time means, do you?\"\n\n\"I understand the behavior of clocks,\" she said.\n\n\"Well, people aren't clocks. Are you staying for dinner?\"\n\n\"Yes, I'll help you cook,\" she said. \"What are we having?\"\n\n\"Chicken,\" I said.\n\n*****\n\nA week later, she asked me to take her dancing. \"What will Maggie do?\" I asked.\n\n\"She'll stay here with Riam,\" she said. \"He'll look after her.\"\n\nI had to admit that he would. She had told me he was as smart as some humans, and so he proved to be. He learned English like he was super-human. Not that he could speak, but he understood what we said. I was very nervous around him for a while, but he was very affectionate, and almost obsequious to me.\n\nMaggie was his goddess, and he worshipped at her altar. They played rough as fuck, but he was very careful never to hurt her, if she could be hurt. I never saw her hurt. She took tumbles that would have killed me, but she never even skinned a knee. He would be as good, or better, a babysitter as any human I knew.\n\n\"Baby, do you think you and Riam could stay here and entertain yourselves while your mother and I go out?\" I asked.\n\n\"Like on a date?\" she asked. \"You're going on a date?\"\n\n\"Umm... I guess you could call it that,\" I said.\n\n\"Oh, yes.\" She came and hugged me. \"I would like that, Daddy. We'll watch TV and look at memes. Riam likes cat memes.\" She leaned in to whisper in my ear. \"She loves you, Daddy.\"\n\nI had no idea what to say to that, so I just kissed her on both cheeks and her nose.\n\nI changed into some black slacks and a jacket, and when I came out, Nina was dressed. She took my breath away. She hadn't changed a bit since the first time I saw her. She was still a magical sexy demon.\n\nI took her to a new club that had just opened, and every eye in the house was on her. People asked her to dance, constantly, and she turned them down politely, rudely if they were persistent. It was a great night, and when she poofed away, it was with the taste of her lips lingering on mine.\n\nThat set a pattern, and over the next six months, I had no idea when she had time to do demon shit, because she was either with me, Maggie and me or had Maggie out with her somewhere. I wondered what was going on, and I asked her several times. She was evasive, and when I asked Maggie, she wouldn't tell me anything.\n\n\"I can't say, Daddy,\" she told me.\n\n\"Why not?\" I asked.\n\n\"Because I promised. Daddy. If I promised you I wouldn't tell something, would you want me to tell anyway?\"\n\nI hugged her and her tail wrapped around my arm. \"No, Baby. I won't ask you anymore.\"\n\nShe didn't have anything going on that weekend, so we went to the \"ranch.\" On Saturday, in the afternoon, we were out at this ravine on our property. The previous owners had dumped old major appliances there, there were two derelict cars and a bunch of other metal junk.\n\nMaggie had an old washing-machine she was going to explode. Riam was off doing hellhound shit, and I felt weird. It felt like my hair was standing on end, and I looked at Maggie. Her pounds of curls WERE standing up. I'd heard that happened when you were about to be struck by lightning, and I panicked until I realized there wasn't a cloud in the sky. Maggie stood up and looked around.\n\n\"Daddy...\"\n\nShe didn't have time to finish whatever she was going to say. That familiar ruby flash shocked our eyes and Nina was about 10 feet away. \"Maggie, Mercer, you must come with me,\" she said.\n\n\"Where...\" I didn't get to finish.\n\n\"You must trust me,\" Nina said. \"No time to explain. We are in danger.\"\n\nShe extended her hands; I took one and Maggie the other. I was blinded by the flash and when I could see again, we were... somewhere else. The landscape seemed unstable. I swear, there were giant boulders floating around about two inches off the ground. I had to grab Maggie and move before one crushed us.\n\nI heard a shout, and there were two 10-foot towers of spikes and angles approaching. They appeared to be metallic, and those spikes looked sharp.\n\n\"Shit,\" Nina said. \"They were too close.\"\n\nShe made a gesture, and a jagged piece of the rose-colored sky fell on the spikey guys. It didn't do them any good, and they were crushed to the ground. I breathed and watched as they began to rise. I started a warding.\n\n\"Don't,\" Nina said. \"Leave it to us.\"\n\nShe turned to Maggie. \"I have taught you well, Mag'dra'ruth,\" she said. \"They will destroy your father, then attempt to destroy us. We will not allow this to happen.\"\n\nMaggie's eyes flashed a feral yellow and she... changed. My cute little cuddly demon girl became something glittery, hard and impossible to focus on directly. Nina became something... else. They flashed toward the spikey guys and suddenly, Riam was there. The attack of a hellhound is something you never want to see, if you're the object of the attack.\n\nThere was a bewildering dance of motion and a tremendous explosion of sound. Spikes flew, and the metallic guys seemed to be trying to avoid the three hell-spawned attackers and get to me! I prepared to run. This was a little out of my league, especially since Nina didn't want me working any protection.\n\nOne of the floating boulders was about five feet to my right, and I climbed aboard the rocky steed. There was still a cacophony of sound and blinding flashes coming from the group, three struggling to contain the two trying to get to me.\n\nI reached out to the rock and discovered a... will, of sorts. The damn thing was like the feel of an animal in my mind. I exerted myself, directing it toward the combatants.\n\nMaggie and Riam had one of the spikey guys down, and when we reached them, I yelled. They sprang away, and I rode my stony steed over the top of Mr. Spikey. I looked back and he was scrap.\n\nMaggie and Riam joined Nina, and the other one was torn to bits before my eyes. I realized I was being taken away from them, so with a thought of thanks, I jumped off my rock.\n\nIt was over. Nina did some demon shit, a beam of ruby fire blasted into the remains, and they were a puddle. I snatched up Maggie, and Riam was at our feet.\n\nNina turned to us. \"We must leave.\" She did her portal thing, and we were back beside our RV.\n\n\"What the actual fuck, Nina?\" I shouted. \"Sorry, Baby.\" I squeezed Maggie.\n\n\"It's over,\" Nina said.\n\n\"What's over, Mama?\" Maggie asked.\n\n\"What I told you about,\" she said.\n\n\"Well, you didn't tell me shit,\" I said. \"What is going on here?\"\n\nMaggie kissed me. \"It's okay, Daddy. We're going to be a real family now.\"\n\n\"What... how... Nina!\"\n\n\"I have abdicated,\" she said. \"I have been working at this from the moment I knew I loved you, Mercer. I'll tell you everything. Can we go inside? I would like some Kool-Aid.\"\n\n\"Yes, me too,\" Maggie said. \"Riam is hungry.\"\n\nI stood there with my mouth open. The absurdity of the situation overwhelmed me, and I started laughing. I laughed until I couldn't stand up and collapsed on the steps.\n\nThey stared at me as if I'd lost my mind, then they both began to laugh, too. They flung themselves on me and I was buried in an avalanche of gorgeous little demon girls. We laughed, cried and my emotions were raw as fuck.\n\nWhen I recovered the ability to stand, we went inside. Riam went away on pest patrol, and I made them Kool-Aid. They snuggled me on the sofa and Nina began to explain.\n\n\"Mercer, I have loved you since the time we tried sleeping for the first time,\" she said. \"You changed me, made it impossible for me to ever return to what I'd always known. Demons aren't supposed to love, you know.\"\n\n\"I love you, Mama,\" Maggie said. \"I don't care about 'supposed.' I love Daddy, too, and Riam, and my friends.\"\n\n\"I know you do, Mag'dra'ruth,\" Nina said. I squeezed them both. \"That's why I brought you to your father. I knew you would love him, and he, you.\n\n\"When I left you, Mercer, it wasn't supposed to be this way. I would return, abdicate and come back to you. I knew I was pregnant with Maggie, and I needed to be with you. There were... forces at play. Hell is a... chaotic place. I had to settle the succession. It took far, far, more work and time than I had hoped.\n\n\"There was a faction. You wouldn't understand all the interweavings. Those two were the last of the faction that opposed my abdication.\"\n\nI was trying to take it all in. I had spent years hating what she'd done, ripping my heart out, abandoning Maggie, just thinking she was off doing her own selfish demon shit. All the time, she had been working her little ass off, in tremendous danger, so we could be together.\n\n\"I couldn't tell you,\" Nina said. \"I couldn't keep Maggie with me. She would have become a pawn to be used against me, but I knew she would be safe with you. I couldn't let anyone know I had an interest in you, either. I had to stay away from you. It tore my heart out, but I have to keep the two of you safe. It was only as I destroyed the forces arrayed against me that I could start coming around. I thought I had lost you, Mercer.\" Big tears rolled down her beautiful face. \"I never intended it to be like this or take this long, and you were becoming so hostile toward me. Tell me you understand and you forgive me, or I will never be whole again.\" Those huge amber eyes tugged at my soul, and I could feel my anger at her, the hurt I'd felt, beginning to crumble.\n\nOur affair had ended, so I thought. Was a new one beginning?\n\n\"Daddy?\" Maggie's tail was tugging on my shirt.\n\nWhat, Baby?\" I shook my head, trying to clear the cobwebs.\n\n\"Do you think we could go explode the washing-machine now? Mama can help.\"\n\nI laughed. \"Yeah, let's do that.\" I took my little demon girls by the hands, and we went to blow some shit up."
    ],
    "authorname": "blackrandl1958",
    "tags": [
        "the end of the affair story",
        "fantasy",
        "virgin queen",
        "paranormal",
        "big tiddie demon economics",
        "cute little demon girl"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-demon-queen-of-hell"
}