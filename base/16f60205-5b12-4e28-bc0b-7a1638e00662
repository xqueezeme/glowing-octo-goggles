{
    "title": "Neglected Black Housewife Ch. 03",
    "pages": [
        "\"Wow, Uncle Reggie was all over you with his 'What are your intentions with my niece?'\" Jasmine laughs while mimicking her uncle's deep voice. \n\nWe're in my apartment and she has just slid her tight little pussy down onto my very erect cock. Squeezing her smooth thighs against my hips, she sits up straight making her tantalizing breasts jut out invitingly from her chest. \n\n\"Your Aunt Cyn wasn't any better,\" I answer, hefting her firm tits as she starts rocking my cock in and out of her teenage pussy. \"She was a lot angrier than I thought she'd be.\" I add as Jasmine's thick nipples respond to my touch and I lightly pinch them while caressing her dark breasts.\n\n\"What did you expect, Mike?\" Jasmine asks, rocking faster as I move my hands to her hips. \"Don't worry, she'll get over it,\" she says, picking up the pace and making further conversation difficult. \n\nCyn was really mad at me. She glared at me all through dinner and pulled me aside in the kitchen the first chance she got.\n\n\"What the fuck are you doing, Mike,\" she asked as soon as we were alone.\n\n\"I'm sorry, Cyn. I never expected anything like this to happen, but it did,\" I answered honestly.\n\n\"Well, you're just going to have to make it unhappen!\" she hissed, her hushed voice contrasting sharply with her angry words. \n\n\"I can't do that, Cyn,\" I said quietly.\n\n\"You can and you will! I will not have my niece's life ruined because you want to explore some younger black pussy!\" \n\nI couldn't believe she said that but before I could answer, Jasmine's mom came into the kitchen asking if everything was all right. Cyn recovered quickly and told her sister that she knew me from the bookstore and we were just discussing some books I'd helped her pick out. \n\n\"Ohmygod, Mike!\" Jasmine cries, pulling me back into the current moment and I move my right hand from her hip, finding her clit with my thumb. My fingers are entwined through her pubic hair as she bounces fervently on my throbbing cock. \n\n\"Damn, I love you,\" I blurt out impulsively as the intensity builds.\n\n\"Oh Mike,\" she sighs, slowing down her rhythm and leaning forward to look in my eyes. \"Why did you have to say that now?\"\n\n\"What do you mean, now?\" I ask, pulling my hand from between us and gripping her hips again. \"When should I say it?\"\n\n\"When it isn't your penis doing the talking,\" she says resignedly. \"The first time you say that to a girl should be more... I don't know.\" She starts rocking again, faster this time. \n\nI can feel my orgasm building but I hold off waiting for Jasmine to get close as well.\n\n\"Say it again, Mike,\" she says, in a breathless pant.\n\n\"I thought you didn't want me talking with my penis,\" I tease as I buck my hips under her undulating pussy.\n\n\"Maybe I like the sound of his voice,\" she says before switching to a high-pitched mock penis voice. \"Hey, where are you putting me? It's dark in this tunnel,\" she says, trying not to laugh. \"Ohhh no, the walls are closing in around me.\" She squeezes her pussy muscles around my cock for emphasis. \"Ooooo, that feels good. Squeeze me like that; it makes me stand up taller.\" \n\nWe're both laughing now which has an extinguishing affect on our sexual tension.\n\n\"Don't make me laugh or he won't stand very tall for long,\" I cry but our lovemaking is degenerating into a laugh fest.\n\n\"Rub my sides like that,\" Jasmine continues with the high-pitched penis voice. \"Hey is she trying to drown me?\" she laughs at the reference to her juice-filled pussy. \n\nI grab her hips and try to restart the rhythm but we're both laughing and my cock is losing some of its firmness.\n\n\"Jasmine!\" I moan. \"This isn't funny!\" But it is and she falls forward onto my chest, kissing my mouth while neither of us is close to climaxing. \n\n\"Sorry,\" she says, trying to sound sincere but almost bursting out laughing again.\n\n\"You will be,\" I tease. \"We're not leaving it like this.\" I roll us over so I'm on top without disengaging my cock from her warm pussy. \n\n\"We're not?\" she asks seductively.\n\n\"You know what happens now, don't you?\" I ask, kissing her chin. \n\n\"What?\"\n\n\"We have to start over,\" I tell her while sliding my body down hers, uncoupling us as I lick her breasts and start sucking on her taut nipples.\n\n\"From the beginning,\" she asks excitedly.\n\n\"The very beginning,\" I answer while nibbling on her thick black nubs. I had already eaten Jasmine to an orgasm right after we'd gotten to my apartment but I can never get enough of her succulent pussy.\n\n\"How torturous,\" she smiles as she runs her fingers through my hair. I can feel her hot, wetness against my stomach while I give her breasts a thorough tongue-lashing. As I move further south, rubbing my cheek against her spongy pubic hair, I can't help but be a little distracted by Cyn's reaction. I knew she'd be upset but she went absolutely ballistic over Jasmine and I as a couple, especially when we excused ourselves right after dinner. Jasmine told her mom we were going to a movie but we drove straight to my apartment instead.\n\n\"Mmmmm,\" Jasmine softly moans as my tongue explores her outer folds and dips briefly into her juicy opening. It must be the black-white thing with Cyn rather than an age thing because Jasmine is eighteen, only a couple of years younger than I am. \n\nMy cock is responding to the intoxicating aroma and flavor of Jasmine's tasty pussy and we could resume our fucking anytime but I love the way she is responding to my tongue. \n\n\"Oh Mike!\" Jasmine cries as I suck her swollen clit into my mouth and flick my tongue across it. \"You're going to make me cum again!\"\n\n\"That's the idea,\" I answer while taking a quick breath. Sliding two fingers into her steamy cunt, I continue sucking on her clit and finger-fucking her to a juicy climax. She's rocking her pussy against my mouth while writhing on the bed and gasping for air.\n\n\"OH FUCK!!\" Jasmine grabs my hair, holding my face tightly against her spasming pussy while squeezing her thighs around my ears. When she flops back on the bed, I pry her legs apart and start lapping up her creamy sauce. \n\n\"Fuck me, Mike,\" Jasmine pleads as I keep my tongue engaged with her oozing pussy. \n\n\"Okay, but no penis-voice humor,\" I tease as I slide up her body and my hard cock slips right into her anxious opening.\n\n\"I promise,\" she smiles, wrapping her legs around me and rocking along to my hard driving rhythm. \n\n\"God you feel so wonderful,\" I exclaim as my lips claims hers and our tongues dance fervently between our mouths. \n\nI feel the tension building in my cock even stronger than before and I start ardently pounding my hardened rod into her tender young pussy. Still riding the high of her recent orgasm, Jasmine is grinding her clit against my pelvic bone and hugging me tightly against her. \n\nI raise myself up on my elbows and watch her tits moving in a graceful pliant motion with each of my thrusts. Her beautiful black, nipple-tipped globes rippling up and down her chest is one of the sexiest sights I think I'll ever see. Her eyes are closed and her mouth is gaping open as her rapidly approaching orgasm nears its peak. \n\nI slam into her a few more times before she clamps her pussy muscles around my cock and triggers my release. We convulse against each other as my steady bursts of cum collide with her fresh flood of juices, turning her cunt into a veritable swamp. I collapse onto her soft dark breasts as we both gasp for air. \n\n\"I do love you,\" I say when our breathing has slowed enough for me to speak.\n\n\"I love you, too,\" Jasmine whispers, squeezing her soggy pussy around my spent cock.\n\n\"Are you sure that's not just your pussy talking?\" I tease. \n\n\"Would you mind if it was?\" she retorts.\n\n\"Mmmmm. Maybe not,\" I smile. \"What did I ever do to deserve you?\" I ask rhetorically.\n\n\"You don't deserve me,\" she smiles. \"I'm only putting up with you because of your tongue-manship.\" The sound of her laughter is as sweet as a symphony but I cut it off with a passionate kiss.\n\nOur kiss is interrupted by my cellphone's ringtone. \n\n\"Don't answer it,\" Jasmine says. I raise my eyebrows at her as I look at the screen.\n\n\"It's your aunt Cyn,\" I tell her.\n\n\"Please silence your cell phones,\" Jasmine says, mimicking the robotic voice from the movie theater. \"We're at the movies, remember. You can't answer your phone.\" I drop my phone back onto the nightstand and we resume our kissing. \n\nI don't listen to Cyn's message until I'm driving Jasmine home. I put my phone on speaker and we listen to it together. \n\n\"Mike, we need to finish our conversation,\" Cyn says very calmly. \"As you know, I feel very strongly about this and I hope I can make you do what's right. Please call me.\" I look at Jasmine and she just shrugs. \n\n\"I'll call her tomorrow,\" I say as we pull up to Jasmine's house. \n\n\"Mike,\" Jasmine says, unbuckling her seatbelt and turning towards me. \"We're a couple, right?\"\n\n\"That's what I want, Jasmine,\" I answer, trying to hold in my excitement.\n\n\"So, um... you're not going to be going with Aunt Cyn or her friends anymore?\" she asks hesitantly.\n\n\"Absolutely not!\" I lean over and take her hands in mine. \"If you're willing to be the girlfriend of a poor, white college student, I will be the happiest guy on the planet.\" Her smile covers her whole face as she wraps her arms around my neck. \n\n\"I am so willing,\" she purrs and I don't say anything about the double entendre.\n\nMy phone rings the next morning as I'm driving to my first class. \n\n\"Hey Cyn,\" I answer.\n\n\"We really need to talk, Mike,\" she says abruptly, without so much as a hello.\n\n\"I'm on my way to class right now but I'm free for lunch would you like to meet somewhere?\" I ask. \n\n\"I can't meet you but will you call me when you're out of class so we can talk?\" she asks.\n\n\"Absolutely. It'll be about two hours.\"\n\n\"That'll be fine.\" She disconnects and I can still feel the coldness of her voice as I head to class.\n\nWhen I call her back we talk for about twenty minutes with neither of us making any headway toward convincing the other of our point of view. Cyn cajoles, begs, offers to include me in her Thursdays with Shelly and finally resorts to threats. \n\n\"Mike, I am deadly serious that I can make this stop if that's the way you want to play it.\"\n\n\"I don't want to play it at all, Cyn,\" I answer exasperatedly. \"All I want is for you to give Jasmine and I a chance.\"\n\n\"No! I am willing to confess everything to my husband and my sister if that's the way you want it,\" she says defiantly. \"Believe me, when Cora finds out what kind of person you are she will make sure you never see Jasmine again!\" \n\n\"What kind of person I am?\" I almost scream into the phone. \"What about you and your bi-sexual friend Shelly? What will she think about that?\" I ask trying to sound as confident she does. \n\n\"I would rather you man-up and do the right thing, Mike, but if you don't, you need to know that I am willing to go that far to make this thing stop. Is that clear?\"\n\n\"Perfectly!\" I answer, disconnecting the call. Fuck! Whatever she does is going to hurt Jasmine but I'm confident we can weather the storm. I don't find out until three days later that I was wrong. \n\nJasmine calls about an hour before I'm supposed to pick her up from cheering practice. \n\n\"Mike...\" her voice is soft and hesitant.\n\n\"What's wrong?\" I ask, hearing the tension in her tone.\n\n\"Don't pick me up today, okay?\" she says and I can hear the heartache right through the phone.\n\n\"Why? What happened, Jasmine?\" I ask.\n\n\"I... um... can't see you anymore,\" she bursts into tears, sobbing into the phone. What the fuck did Cyn do?\n\n\"There's got to be a way around this,\" I tell her. \"Tell me what happened and we'll work through it.\"\n\n\"Aunt Cyn,\" she chokes. \n\n\"Don't let her control our lives, Jasmine!\" I almost scream. Taking a deep breath I continue more calmly. \"Come on, let's at least discuss it. I'll pick you up and you can tell me everything.\"\n\n\"NO!\" Jasmine cries. \"I love you, Mike, but it's been just my mom and I for so long... I can't hurt her.\"\n\n\"Jasmine...\" she cuts me off.\n\n\"I love you, Mike. Goodbye.\" She disconnects and I just stare at my iPhone. Fuck! A minute later the familiar tone signals that I have a text message.\n\nIf you love me, don't make me choose between you and my mom. Don't call me or try to see me. Please don't hate me. Ily\n\nFuck! Fuck! Fuck! What does she mean don't make me choose. She's already chosen and it's not me who forced the choice. Goddamn Cyn! Fuck! Shit! Fuck! I catch myself just before throwing my iPhone across the room. I'm tempted to text her and tell her how chicken shit it is to do this via text but I don't really want to add to her misery. \n\nTo say I was in a funk would be an understatement. For the next several weeks, I'm just going through the motions; work, school, home, repeat. Even Amber can't cheer me up, not that she offered anything other than a ready ear to listen. Her and Jim are still together and she's made it clear that their relationship is exclusive. In my current state I doubt I'd be able to get it up anyway.\n\nOne evening, while pointlessly walking through my bookstore shift in a depressed mental fog, I'm shocked when I look up and see Barbara, the third neglected black housewife enter the store. I'm thinking it's just a coincidence, she's probably shopping but then she spots me and heads purposefully in my direction. \n\n\"Hi Mike,\" she says. \"Can we talk?\" She looks as gorgeous as ever in a cream-colored, button up blouse and black legging stretch pants. The top three buttons are undone and her blouse curves sexily around her light brown cleavage. Apparently my cock doesn't know about my depression.\n\n\"Um... sure,\" I stammer, moving my eyes up to her unsmiling face. \"I'm almost due for a lunch break, do you want to talk here or we can meet at the Starbucks down the street.\" I can't imagine what she wants but if there is a message from Jasmine or Cyn, I need to hear it.\n\n\"Starbucks is good,\" she says. \"I'll wait for you there.\" As she turns and walks away my eyes lock onto the suggestive sway of her sexy ass cheeks visible under her stretch pants. \n\nI check with my manager, get the okay to start my lunch break early and head over to Starbucks. There is a sense of d\u00e9j\u00e0 vu when I see Barbara sitting at the same table Cyn and I sat at on our last visit. She's sipping a drink and there's one on the table for me.\n\n\"I didn't know what you drink so I got you a caramel latte. I hope it's alright,\" she smiles.\n\n\"It's fine, thanks,\" I say, ignoring the drink as I lean across the table. \"What's up? Did Cyn have a change of heart?\"\n\n\"No, I'm sorry, Mike,\" she says sincerely. \"If it's any consolation, Shelly and I have both told Cyn that we think she's wrong about this.\"\n\n\"Then, do you have a message from Jasmine,\" I asked hopefully.\n\n\"Oh Mike,\" she says, reaching across the table and putting her hand on top of mine. \"This isn't about Cyn or Jasmine. They don't even know I'm here.\" That takes the wind out of my sails and I sit back in my chair to regroup. \n\nI appraise Barbara as I take a sip of my latte and the Halle Berry comparison comes to mind. She really does look like her. The cleavage I was starring at in the bookstore is even more apparent from the way she is leaning towards me. I barely taste the hot liquid going down my throat as I take in the erotic sight of the exposed portion of her caramel-colored breasts.\n\n\"I've changed my mind, Mike,\" she says quietly. I don't know what she reads into my startled reaction but she quickly adds more. \"I know I wasn't very nice to you at first but I thought we had gotten past all that. Of course, I'll understand if you don't want to...\" Don't want to? Who in their right mind would say no to Halle Berry or even her quasi-clone? Okay, I know I've been depressed but I'm still a man and Jasmine has made it clear that it's over between us and...\n\n\"I guess that's my answer,\" Barbara says as she starts to stand.\n\n\"No! Wait,\" I cry, reaching for her arm and guiding her back to her chair. \"I'm just surprised that's all,\" I tell her. \"I mean... what changed your mind?\"\n\n\"Does it matter?\" she smiles flirtatiously.\n\n\"Maybe... I don't know... it's just... you know... pretty sudden and I haven't been with anyone since Jasmine.\" I'm fumbling for words and not making much sense but Barbara's smile defuses my discomfort and I continue more calmly. \"The last time we talked your plan was to confront your husband, right?\" She nods. \"I'm guessing that didn't work out so well.\"\n\n\"He denied everything!\" she says louder than she means to and quickly lowers her voice. \"He accused me of paranoia and said my girlfriends were putting foolish notions in my head.\" When I raise my eyebrows she continues, \"I'm not stupid, Mike. I could tell he was lying but where was my proof? I felt like an idiot.\"\n\n\"Did you tell him you knew who they were seeing?\" I ask.\n\n\"No, I wasn't expecting such a vehement denial and it caught me off guard. I didn't know what to say and by that time he was stomping out the door yelling at me to stop wasting his time.\" She stops, brushing tears from her eyes and looking around at the other patrons. \"Can we go somewhere else, please?\" she asks, standing up and leading the way out of Starbucks. \n\nOut on the sidewalk, she's dabbing her eyes with a handkerchief and looking around like she's trying to figure out which way to go.\n\n\"Maybe this wasn't such a good idea,\" she says, looking up at me with tears streaming down her cheeks. I wrap my arms around her and pull her close. Fuck! She even smells sexy, must be some type of exotic perfume or shampoo.\n\n\"Oh Mike,\" she sobs. \"I'm sorry about this. I didn't know where to turn. My best friends are caught up their kinky little Thursday night tete-a-tete, which I'm sure they would willingly let me join. You were the only other person who knew what was going on and... I thought... you know... you could maybe make me feel better.\" As she squeezes my waist, her breasts push against my chest and my cock responds accordingly. So much for depression, maybe they should market this as an anti-depressant. \n\n\"Barbara...\" I start but she cuts me off.\n\n\"I know, I know,\" she says, waving my words away. \"A desperate act by a desperate woman. I'm sorry I bothered you.\" As she starts to back away I pull her tightly against me, making sure she feels my hard-on pressing into her abdomen. \n\n\"You bothered me a lot,\" I whisper. \"But not the way you're thinking.\" She tilts her head up to look at my face just as I lower my lips to hers. The saltiness of her tears mixes with the light berry flavor of her lip-gloss as my tongue glides into her welcoming mouth. Her kiss is full of hungry desire and I'm surprised when she starts grinding her pussy mound against my hard cock. \n\nI'm trying to recall if my roommate is home when I remember that I'm only on my lunch break. Fuck! \n\n\"I have to go back to work,\" I say, brushing her hair from her moist eyes. \"We could meet later tonight or I'm off tomorrow,\" I offer expectantly. \n\n\"I should get home soon,\" she pants, stepping back and adjusting her shirt, which bunched up during our embrace. \"I'm supposed to work tomorrow but... what time can we meet?\" she asks, stepping back into my arms and kissing me again. My cock is raging and her mouth tastes so good I wish we weren't standing on a public sidewalk. Ignoring our location, my hands glide down her back to her ass cheeks, squeezing and kneading her firm, round flesh. \n\n\"As early as you like,\" I pant from the breathtaking kiss. \"I'll make sure my roommate is gone and we can spend the day at my place if you'd like.\"\n\n\"Sounds nice,\" she says. \"Is ten o'clock too early?\" \n\n\"Not early enough,\" I answer, squeezing her ass cheeks for emphasis.\n\n\"Mmmm,\" she purrs and I feel like I could cum right there in my pants. \"Thank you, Mike,\" she says, her radiant smile nearly putting me in a trance as she steps back and my hands drop away from her body. I feel a little foolish, standing there with a raging hard-on as this sexy Halle Berry lookalike smiles at me expectantly. ",
        "\"I need your address,\" she says matter-of-factly, breaking the spell.\n\n\"Oh, right,\" I say, fumbling for some paper before she produces a small notebook and a pen from her purse. I quickly scribble down my address.\n\n\"I'll see you in the morning,\" I say, feeling completely overwhelmed by this golden-skinned goddess who has just dropped into my life. \n\n\"Maybe we can help each other,\" she says cryptically as she walks away. \n\nI finish my shift in a flurry of activity that has my manager welcoming me back from wherever I've been for the past few weeks. He seems genuinely relieved that I've pulled my head out of my ass and stopped moping around. \n\nI have a restless night dreaming about Barbara and Halle Berry. While Barbara is sitting in Starbucks telling me she hopes I can make her feel better, she gradually transforms into Halle Berry from Monster's Ball crying I want you to make me feel good. Can you make me feel good? Can you make me feel good? I awaken with a formidable hard-on and an anxious anticipation for the day to get started.\n\nWhile cleaning up my apartment, I start to have second thoughts. Is this really what I want to do? Well no, what I really want is to have Jasmine back but that doesn't seem likely. \n\nBarbara is certainly sexy as hell and my cock twitches whenever I think about her. Where Cyn and Shelly were almost as old as my parents, Barbara is 29 or 30. That's only nine years older than I am. One thing for sure, she's gotten me off my ass and moving, the apartment looks better than it has in weeks. I recall one of my psychology professors mentioning activity as a prescription to battle depression. It's hard to be active and depressed at the same time. I wonder if it's also hard to be horny and depressed at the same time.\n\nBarbara is early and seems almost as tense as I am. She's wearing another collared cotton blouse that buttons up the front with a short skirt and designer boots. She looks hot!\n\n\"Would you like something to drink?\" I offer as I invite her in and attempt to ease her nervousness. She shakes her head as she looks around.\n\n\"If it's all the same to you, Mike, I'm kind of anxious to get down to business.\" She smiles as she steps towards me. Our arms tentatively encircle each other as our lips meet in an exploratory kiss. \n\nBam! Within seconds she's humping against me and my hands are gripping her ass. Our tongues are fervently fighting for space in our mouths as we try to shed our clothing without disengaging from each other's arms. I guess I don't have to worry about trying to ease into this.\n\nI steadily move us towards my bedroom, leaving a trail of discarded clothing behind. By the time we're standing next to my bed, Barbara is down to her bra and panties and I'm in my boxers. I manage to break the kiss and hold Barbara at arms length while we both gasp for air.\n\n\"May I?\" I ask, reaching for the front clasp of her bra. The thin material of her beige bra can't hide her dark areolas or the outline of her protruding nipples pushing against it.\n\n\"Be my guest,\" she smiles. I make a production out of removing her bra. Using two hands to unfasten the clasp, I slowly pull the material away, revealing her magnificent breasts little by little. I gasp when I see her nipples and her silver dollar size areolas. \n\n\"What's the matter?\" Barbara asks.\n\n\"My God, they are so black!\" I am astounded at how dark her nipples and areolas are. Whatever the darkest black color is, maybe midnight black, that's the color.\n\n\"You were expecting white?\" she teases. \"I meant to tell you, Mike, I'm black.\"\n\n\"Of course,\" I laugh. \"It's just... I'm surprised, that's all. You're lighter skinned than both Shelly or Cyn but your nipples are considerably darker.\"\n\n\"I wouldn't know,\" she says dryly. \"Don't you like them?\" she asks, giving her breasts a little shake from side to side.\n\n\"I love them! They are magnificent!\" I cry as I slide her bra down her arms and toss it aside. \"I've never seen anything like them.\" It's true. The contrast between her caramel colored breasts and her midnight black nipples is absolutely striking. I heft them in my hands, running my thumbs across her erect tips as I admire the distinctive coloration. Fuck!\n\n\"If you like these, I have another surprise for you,\" Barbara says, stepping back out of reach and turning around. She smiles at me over her shoulder as she hooks her thumbs in the side of her matching beige thong and starts peeling it down. The thin strip of material being dislodged from between her lovely ass cheeks enriches my first look at her naked ass. My cock is tenting the front of my boxers as she drops her thong to the floor and steps out of it. \n\n\"You have a perfect ass,\" I say, stepping towards her. Her ass is so firm and flawlessly contoured that I can't wait to get my hands on it.\n\n\"Wait a second,\" she says. \"I've something better to show you.\" She obviously means her pussy but I don't know how it's going to compete with her breasts and her ass. I imagine she has it shaved smooth or something. The 'or something' turns out to be right. \n\n\"What do you think?\" Barbara asks, turning towards me. My mouth gapes open. Holy shit! Her pubic hair is a perfect triangle, coiffured with crisp edges all around and a flat surface that reminds me of a well-manicured lawn, or Grace Jones' haircut. It is the most erotic sight I have ever seen. Her tightly curled hair creates a smooth, thick covering nearly half an inch thick. \n\n\"I just did it a week ago,\" she adds apprehensively when I don't answer. \"Do you think it's too much?\" \n\n\"NO!\" I almost scream. \"That is the sexiest, most exotic...\" I stammer trying to think of the right adjective but Barbara saves me from my inarticulateness by stepping closer and kneeling down in front of me.\n\n\"My turn,\" she smiles up at me as she rests her palm against the bulge in my boxers. \"Hmmm,\" she murmurs , cradling my hard cock in her hand. \"Time for me to open my present now,\" she says, pulling the elastic band away from my waist and out over the tip of my erection.\n\n\"Very nice,\" she says as my cock springs free and she drops my undershorts to the floor. With her palms against my thighs, she snuggles her face against my cock, rubbing it along her cheek and flicking it with her tongue as it wobbles around her face. \n\n\"I like this,\" she pronounces as she catches the tip between her lips and slides her mouth over the head.\n\n\"Oh yeah!\" I cry as Barbara's tongue deftly licks the sensitive underside of my cockhead. Seeing her breasts from this angle I'm amazed at the length of her thick nipples. They've got to be extended at least half an inch from her dark areolas. Her breasts aren't as big as Shelly's or Cyn's but they are just so fucking perfect. \n\nAs much as I'm enjoying her mouth on my cock, I don't want to wait any longer to explore her exquisite body. Grabbing her shoulders, I pull her to her feet and our bodies press together as we enjoy another lengthy kiss. Our hands are in constant motion over each other's backside and my cock nestles into her cushiony pubic hair. \n\nGently laying her on the bed, I crawl up next to her with my head propped up on one hand as I caress her flat stomach with the other. \n\n\"Every part of you is breathtaking,\" I whisper as my hand glides lightly over her warm breast. \n\n\"Can you make me feel better, Mike?\" she asks with a desperate pleading in her voice.\n\n\"I don't know how permanent it will be but I can certainly make you forget about everything else for a while,\" I answer honestly. I'm rubbing her closest nipple between my thumb and index finger, twirling it around and stretching it out from her breast.\n\n\"I'll take that,\" she says, closing her eyes as I move my mouth to her taut nipple. Her long, thick nub is surprisingly rigid but based on her growling moan also quite sensitive. My left hand massages one breast as I suckle on the other. Not in an easy position to shift between her nipples, I swing my leg over her body, straddling her as my stiff cock nestles against her thick carpet of curls. \n\nWhat an unexpected turn of events. Yesterday morning I was sulking around like a more depressed version of Eeyore and today I have this exotic creature with her midnight black nipples and perfectly coifed pubic hair lying in wait for me to distract her from her cheating husband. Maybe she was right; maybe we can help each other. Who knows? Tomorrow I may be back to moping around but right now; I'm going to take advantage of this erotic distraction. \n\nGrasping one of her brown tits in each hand, I lean my head down and begin my sensual onslaught of her aroused nipples.\n\n\"Mmmmm, yeah,\" she moans as I suck, bite and tease her hard nipples, alternating from one breast to the other. Squeezing her tits together, I manage to get both nipples into my mouth at once, kneading the sides of her breasts as I suck hard on her sensitive nubs. \n\n\"Oh God, what are you doing?\" she cries while holding my head tightly against her breasts and humping her pubic mound against my rigid cock. Her long black nipples are so hard they feel like leather against my moist tongue. I continue my assault on her breasts enjoying the way her body is writhing beneath me until I can hold back no longer. I have to taste her cunt juice. \n\nGiving her nipples one last bite, I release her breasts and glide down her body where I'm greeted with the most sensually aromatic smell known to man. She lasciviously spreads her legs and pulls her knees up, presenting me with her hot wet pussy. Her pink folds look like a rain-drenched flower whose petals have been heavily weighted by a sudden downpour. I teasingly stroke her outer labia with my finger, lightly spreading the seeping moisture up and down her gaping slit.\n\n\"Ohhhhhh,\" she pants, grabbing the backs of her knees and pulling her legs wider apart as I extend my tongue and lick from her asshole to her clit.\n\n\"Yeeessss!\" Barbara cries as I take another long swipe of her labia, this time pushing my tongue just inside her moist pussy and lapping up some of her tasty juices. The erotic tanginess of her love sauce assaults my taste buds and sends licentious signals to my cock. She's rocking against my face and pulling her legs as wide as they'll go, trying to suck my tongue deeper inside her eager opening. Her engorged clit is peeking out invitingly from its fleshy black hood and I slide my tongue up to gently lick around it several times before sucking it into my mouth.\n\n\"Oh yeah! Fuck yeah!\" she breathes as I slip two fingers deep inside her steamy hole and continue sucking on her exposed pink clit. She lets go of her legs to dig her fingers into my hair and pull my mouth hard against her pussy while grinding her clit against my tongue. I suck her clit completely inside my mouth, flicking my tongue across the tip of it while maintaining a constant rhythm in and out of her pussy with my fingers.\n\n\"I'm cumming!\" Barbara yells, \"Don't fucking stop! Oh yeah! Keep doing it just like that!\" She clamps her pussy muscles around my fingers, jerking wildly as she tightens her grip on my hair. Her head and shoulders are off the bed as her orgasm shakes her whole body and she gushes her hot cream all over my fingers. I shift my mouth from her sensitive clit to her juicy hole and hungrily lap up her deliciously flowing syrup. Her chest heaves, swelling her beautiful tits as she gulps air into her lungs. I keep swallowing more and more of her thick, tasty nectar but it just keeps flowing while she catches her breath.\n\n\"Cyn was right about your tongue, Mike,\" she pants. \"Goddamn! That was so good. I can't wait to see how you fuck,\" she says while pulling my head to get me to move up her body.\n\n\"Not yet,\" I say, looking up at her while pushing my tongue between her juicy black pussy lips. \"Once is never enough for me,\" I tell her. \"You taste so good that I need seconds.\"\n\n\"I know you think this is what you're supposed to do,\" she says. \"But seriously, I'm ready to be fucked right now!\"\n\nIgnoring her, I return my face to her crotch and suck her pussy lips completely into my mouth. Lightly chewing on them, I graze my tongue all over her delicate folds, periodically flicking it against her swollen clit.\n\n\"Mike! Mike! You don't have to do this! Holy shit!\" she moans, squirming her ass around on the bed as I push my tongue deep inside her pussy and insert my middle finger beside it. Twisting my finger all around to lubricate it, I slowly pull it out and begin smearing a path from her pussy to her asshole. She moans and writhes as my wet finger traces a circular motion around her rear opening before going back for more of her thick lubricating cream.\n\n\"Oh God yes! Play with my asshole,\" she cries as I move my mouth to her clit and slip the tip of my finger into her crinkly opening. Using my other hand to stimulate her labia, pinching and teasing her swollen lips, I keep sucking her clit while pushing my finger a little farther into her ass. The simultaneous sensations have their desired effect and she starts bucking feverishly against my mouth and hands.\n\n\"Oh Fuck, Mike! That is... I don't fucking know what that is! Oh God! I'm going to cum!\" she cries.\n\nI lean my weight on her to keep her from bucking my mouth off her clit as the first wave of her orgasm jolts her body. I keep sucking her clit, pinching her pussy lips and finger fucking her asshole as she thrashes around on the bed. When she arches her back and spreads her legs even wider, I bury my index finger all the way inside her ass and gently bite her clit. \n\n\"OHMYFUCKINGGOD!\" she screams as her body explodes and she gushes hot frothy cream over my hands. While her body convulses, I move my tongue back to her pussy, hungrily slurping up the gooey sauce flowing freely from her lips. \n\n\"Now it's time to fuck,\" I whisper, moving my body over hers before her breathing can return to normal. \n\n\"Let me catch my breath,\" she pleads.\n\n\"Not a chance,\" I say as I thrust my pussy-soaked tongue into her mouth and glide my aching cock into her still quivering pussy. \n\nOh fuck! She feels so damn good. Her pussy is snug but so well lubricated that I sink to my balls without any effort. Barbara squeezes her inner muscles around the sides of my cock, massaging it as I glide in and out with long slow strokes. The heat from her pussy envelopes my hard-on and I have to concentrate to keep from cumming prematurely.\n\nWe're still kissing with our tongues fervently entwined as I pick up the rhythm, moving both of us up a notch in readiness. I try desperately to hold off my own climax as I await a signal from her that she's ready to join me. Sliding my hand between us, I pinch one of her thick nipples, stretching it out from her chest as I pound faster and harder. She's bucking her ass off the bed, slamming her love button hard against my pelvic bone.\n\n\"Oh God! Mike! I'm... going... to... cum... again!\" She's speaking in gasps, sucking air into her lungs between her breathless words. \"Oh yeah! Oh God! Fuck... Me... Hard... Mike! Oh yes! Harder!\" She's panting and twisting her head from side to side as she thrashes around on the bed ramming her burning cunt up around my hard cock. I'm so fucking close but still holding back, waiting for that euphoric moment when the peak of our physical exertion transforms into blissful ecstasy flowing uncontrollably from our sweat-soaked bodies. Fuck! I'm so close. It's got to be soon.\n\n\"I'm cumming!\" Barbara finally cries. \"Oh! God! Oh! Fuck!\" She clamps her pussy muscles around my cock, digs her long nails into my back and convulses beneath me. That sparks my long awaited release and my body jerks violently, shooting rapid-fire bursts of cum deep inside her fiery pussy. Our bodies tense, locking in a vice-like grip as we shudder together toward our mutual crescendo.\n\nCollapsing on my bed with her trembling body shivering beneath me, I feel the swell of her breasts pushing her hard nipples into my chest as she gasps for air. We just lay there panting for several minutes holding each other tight before we finally start kissing again. This is a more leisurely kiss without the urgency or the sexual tension of our previous kisses. She knows what she's doing with her tongue and my cock starts responding to her machinations.\n\n\"Cyn was right about you,\" Barbara whispers, breaking the kiss as I start rocking my semi-recovered cock inside her slick love canal. \"Damn, you know how to show a girl a good time,\" she teases while rolling her hips in rhythm with my slow, even strokes. I'm not close to being ready to fuck again, but her pussy feels too good for my cock not to want to move.\n\n\"You know, Mike,\" she says quietly. \"I said we might be able to help each other.\"\n\n\"You have helped me, Barbara,\" I answer. \"More than you know.\"\n\n\"But I might know a way for you to make Cyn change her mind about Jasmine,\" she says, quickly getting my attention. I'm almost ashamed to admit that I haven't thought about Jasmine for the past couple of hours and it seems weird to be talking about her with my cock buried in Barbara's pussy but she obviously has peaked my curiosity.\n\n\"Please tell me,\" I say, trying not to sound as desperately hopeful as I feel. \n\n\"Well, I know that she's gotten Jasmine to do what she wants by threatening to expose your antics to her mom, right?\"\n\n\"As far as I know, that's it,\" I answer. \"Jasmine won't even talk to me to explain the details.\"\n\n\"I know Cyn well enough to know that she would carry out her threat. She wouldn't think twice about admitting her own duplicity if it meant she accomplished her objective. But I can almost guarantee that she would not be willing to sacrifice her husband's career in the process.\"\n\n\"You've got my attention,\" I tell her. We're still coupled together but I am no longer moving my cock in any sexual way. \n\n\"Our husbands are still spending their Thursday nights with that white slut over on Fourth Street. If you could get some pictures of our sanctified reverend in, shall we say, a compromising position...\" Her voice trails off but I'm quick enough to get the idea.\n\n\"Do you have any ideas about how I would get these pictures?\" I ask.\n\n\"Not a clue,\" she laughs. \"But you seem pretty resourceful and I can give you her name and address.\" \n\n\"I'll take it.\" I say, wondering where I could get the type of equipment I would need. The mood is broken but I'm definitely not ready to call it a day. \"Would you like some lunch and then maybe we could pick up where we left off?\"\n\n\"Mmmm. That sounds perfect,\" Barbara says as I disengage my spent cock from her drenched pussy. \n\n\"You stay here and rest up for round two while I cook us up a couple of quesadillas.\" I roll off the bed and walk into the kitchen without bothering to dress.\n\nI return to the bedroom with quesadillas, a couple of beers and chips with salsa. Barbara sits up cross-legged on the bed, her glistening pussy immodestly splayed open as she takes her plate. My cock reflexively responds to her sexy body as I sit on the edge of the bed. \n\n\"Wow,\" Barbara says, between mouthfuls of her quesadilla. \"Multiple orgasms and you can cook! Jasmine is a lucky girl,\" she smiles.\n\n\"I've been thinking about Jasmine as I made lunch,\" I answer. \n\n\"So I'm not responsible for that,\" she teasingly points to my erection.\n\n\"No, you're fully responsible for this,\" I laugh. She laughs with me and her tits jiggle temptingly with her laughter. My cock hardens more which sparks more laughter.\n\n\"Then what were you thinking?\" Barbara asks hesitantly. \"Feeling a little guilty?\" she asks.\n\n\"No... well, maybe a little but that wasn't what I was thinking,\" I answer as my eyes continue to devour her naked flesh. \"I was just thinking that maybe Jasmine should have a say in what we were discussing.\" Barbara tilts her head to one side as if she's studying me. \n\n\"Sex, cooking and empathy,\" she shakes her head. \"Jesus, Mike, you are quite the find.\" She smiles as she takes a sip of beer. I watch her tits raise slightly as she lifts her arm and then my eyes follow the contours of her neck as she swallows. \"Why don't you ask her?\" She smiles as she slides the cold beer bottle down between her luscious breasts, leaving a moist trail of condensation across their inside curves. ",
        "\"I would except she won't answer my calls or texts,\" I stammer, wanting to lick the drops of water from her breasts. Barbara watches me for what seems like forever then just gives her head a little shake.\n\n\"Would you like me to act like an intermediary?\" she asks, setting her plate on the nightstand with half of her quesadilla still on it. \n\n\"That would be great,\" I enthuse. \"I just don't want to go to all this effort for nothing if she's not interested,\" I add. \n\n\"Don't worry about her being interested, Mike. That girl has been lovesick for you since Cyn imposed her conditions. And her poor mama can't even get her to talk about it. Trust me, she'll jump at the chance to get back with you.\"\n\n\"That's not what I'm worried about. I just wonder whether she'll be up for blackmailing her uncle,\" I answer.\n\n\"Leave that to me,\" she offers. \"And speaking of being up, will you finish your lunch? That boner of yours is rather distracting and I'm anxious to see how it tastes.\" I shove the remainder of my quesadilla in my mouth and drop my plate next to hers. We clink beer bottles and then each of us takes a long swig before placing them next to our plates.\n\nBarbara pushes me onto my back and kneels between my legs. Holding my throbbing cock between her thumb and her index finger, she begins a torturously slow clean up of my pussy-soaked cock with her tongue. \n\n\"Oh fuck!\" I moan as she licks up one side and down the other, periodically swirling her tongue across my cockhead. Her eyes are locked on mine as she wraps her dark lips around the tip of my cock and gently sucks just the head into her mouth. \n\nDamn! With her beautiful brown eyes staring up at me, it's not just a blowjob it's a full-service tune-up of my dick. Gently stroking me with her hand, her tongue and her lips are teasing the shit out of the domed head with her sucking, licking and nibbling all around it. There's no rhythm to drive me towards a release, just the tantalizing touch of her tongue keeping my dick rock hard. \n\n\"I liked what you were doing with my ass earlier,\" Barbara says just before she slides her mouth halfway down my solid shaft. \n\n\"Mmmm,\" is all I can manage as I try in vain to thrust my cock farther into her warm mouth.\n\n\"Would you like to try my back door?\" she adds provocatively. \"I think you're hard enough to slip right in,\" she teases. Holy shit! I've only ever ass fucked Shelly.\n\n\"Sure,\" I answer enthusiastically. \n\n\"Do you have any lubricant? KY or Vaseline?\" she asks.\n\n\"I think so,\" I answer, trying to remember what's under our sink in the bathroom. My roommate has all sorts of stuff. Barbara releases my swollen cock and moves aside so I can get off the bed. I practically run to the bathroom and throw open the cabinet. Yes! We've got both!\n\n\"I've got both,\" I tell her. \"Do you have a preference?\"\n\n\"KY is a better lubricant,\" she says matter-of-factly, like she does this every day. Hell, for all I know, maybe she does. She holds out her hand and I give her the tube of KY. She squirts a bunch on the palm of her hands and rapidly rubs her palms together. \n\n\"Lie back down so I can grease you up,\" she smiles. I lay down on my back with my human flagpole sticking straight up in the air and Barbara starts massaging my cock with her lubricated palms. \n\n\"Mmmm,\" I moan as she corkscrews her hands up and down my sensitive shaft. When I'm sufficiently lubed up, she squirts some more KY on her finger and reams it in and around her asshole. \n\n\"I'm going to lower myself down on you so you can play with my pussy while you fuck my ass,\" she announces, tossing the tube on the floor and swinging her leg over me. I watch with wide-eyed wonder as Barbara positions her puckered opening over my slick cock. Using her hand to guide my steel rod towards its target she takes a deep breath and pushes my cock against her tight opening. \n\nBarbara obviously knows what she's doing and the lubricant facilities the penetration because my cockhead pops right into her ass with barely any resistance. Fuck, she's tight and my cock is throbbing inside her compact tunnel. She settles down onto my cock, wiggling around to get comfortable. \n\n\"Okay,\" she breathes. \"Here we go. Just keep my juices flowing in the front while I ride this monster.\" She nods as I move my hand towards her wet pussy. \n\nResting my palm against her widespread thigh, I slide my thumb along her moist labia to her engorged clit. \n\n\"That's the spot, lover,\" Barbara says as she starts rocking against my hand, driving me in and out of her snug ass. My cock responds immediately to the long awaited rhythm and I'm bucking my hips off the bed to sink it farther into her cock-hugging ass. \n\n\"Oh yeah!\" Barbara cries. \"Do you like this? Do you like my ass?\" \n\n\"Fuck yeah!\" I pant as my orgasm builds and I feel myself getting ready to explode. I spin my thumb against her clit, hoping to get her off before I shoot my load. She's bouncing up and down on my cock while her hands are squeezing her tits and tugging at her long, black nipples. Fuck, I can't hold it much longer.\n\n\"I'm going to cum!\" I shout, as she jounces on my rigid tool. \n\n\"Let it go! Cum in my ass!\" she huffs, gasping for air as her own orgasm pushes her to a more rapid rhythm and she clenches her ass muscles around my cock. Oh fuck, that did it.\n\n\"I'm cumming!\" I cry as my cock explodes inside her compact tunnel and I jerk spasmodically under her frenetic gyrations. \n\n\"Ohhhh! Mike! Ohhhhhhh. Don't stop moving your thumb!\" she cries as the tremors increase and her orgasm builds to a tumultuous finish. \"Goddamn!! Oh Fuck!\" Barbara thrashes around on my cock, shoving my hand away from her crotch as she shakes and shudders through her finale. \n\nRaising up, she eases my cock from her asshole before flopping down on my chest and smothering me with kisses. \n\n\"You are amazing,\" she whispers as she rubs her tits around on my chest and flicks her tongue across my lips. \n\n\"It's you who is amazing,\" I answer honestly. \"I've never felt anything like that before.\" She smiles and then lays her head on my shoulder as we both gasp for air. We lay there for a long time before either of us speaks. I'm the first one to break the silence.\n\n\"So tell me about the other woman,\" I say while stroking her hair. \"How did they meet her?\"\n\n\"Well,\" she sighs. \"Reggie is her pastor, Shelly's husband is her boss and mine is her dentist, who obviously wasn't satisfied with just drilling her teeth. From what I hear, she had made herself available to each of them individually but somehow they found out about each other. It could have been a big scene if she hadn't suggested they all come over together.\" Shelly shrugs like it's not big deal but it doesn't take a shrink to see the pain.\n\n\"This isn't just helping me get Jasmine back, is it?\" I ask, the proverbial light bulb popping up over my head. \"You want the pictures for yourself, don't you? To confront your husband again.\"\n\n\"Like I said, Mike,\" Barbara sighs. \"Maybe we can help each other.\" I squeeze her tightly against me and we just lie there, just holding each other with our breathing nearly synchronized. My body is relaxed but my brain is working overtime trying to figure out how to blackmail the blackmailer. For the first time in weeks I'm energized. \n\nAfter resting a while, we decide to take a shower, which gives me a chance to leisurely explore her exquisite body. I soap her breasts, teasing her black nipples to tautness while she expertly washes my cock and balls. When I lather soap over her sharply trimmed triangle, she arches her back and I glide my finger across her swollen pussy lips. \n\n\"Mmmm,\" she moans. \"You could wear a girl out.\" She smiles as my finger penetrates her slick opening and she grinds against my hand. Pushing my tongue in her mouth, I kiss her fervently while squeezing her fleshy ass cheek with my other hand. Digging my fingers hard into her ass cheek to hold her still, I jackhammer my finger into her pussy while she whimpers into my mouth. \n\n\"We could wear each other out,\" I answer, breaking the kiss and turning her around to face the wall. Without any prompting, she bends forward and I align my solid cock with her welcoming pussy, jamming it into her in one powerful thrust. \n\n\"Oh yeah! Fuck me hard!\" she cries out as I grip her hips and forcefully pound into her burning pussy. She braces her hands against the tile wall as I batter her fiery cunt, slamming my pubic bone against her ass cheeks on each forward plunge. Her tits are swinging violently against her chest from our savage rhythm and at this pace, neither of us is going to last very long.\n\n\"Oh God!\" she cries. \"I'm cumming again!\" Her clenched pussy spasming around my cock incites my release and I shove it deep inside of her as I jerkily deposit my built up load.\n\nWe finally make it out of the shower and towel each other off. As I'm kneeling down to dry her legs, my face is just inches from her severely trimmed pubic hair. \n\n\"So, is there a story behind this?\" I ask, nodding towards her designer bush. \n\n\"Do you like it? It's the latest thing, pubic hair art. The woman at my salon wanted to cut a heart in the center of it but I thought that would be too much.\"\n\n\"How long have you had it like this?\" I ask, lightly combing my fingers through her tight curls.\n\n\"About a week. I did it as kind of a last ditch effort to reignite my marriage,\" she sighs.\n\n\"Did your husband like it?\" I ask, returning to toweling off her legs. \n\n\"He hasn't seen it,\" she says matter-of-factly. \"He comes to bed late and gets up early,\" she adds after seeing my shocked expression.\n\n\"Barbara,\" I say, standing in front of her. \"I don't know what this Stephanie person is like but your husband is a fucking idiot if he thinks there is someone out there better than you.\" \n\n\"Thanks, Mike. You're sweet,\" she says, pulling me into a tight hug. Her body is so damn perfect and I can't resist caressing her firm ass cheeks as I relish the crush of her breasts against my chest. \n\n\"I had a wonderful day,\" she says, pecking me on the lips before pulling away and starting to pick up her discarded clothing. \"We really made a mess, didn't we?\" she laughs as she follows the trail of garments into my bedroom. \"I don't suppose we're going to do this again are we?\" she asks quietly as she pulls on her thong and I watch her wiggle her ass to get it set just right between her cheeks. \n\n\"Probably not,\" I admit. \"Not that I wouldn't want to,\" I add quickly. \"But if I somehow manage to get Jasmine back then I won't be available.\" I'm putting on my boxers and my jeans as we talk. \n\n\"I'm glad you feel that way,\" she sighs. \"I'll tell Jasmine to call you.\"\n\n\"Thanks, Barbara,\" I brush a lose hair from her forehead. \"I'll figure this out for both of us.\"\n\n\"I know you will, Mike,\" she smiles. \"But if it doesn't work out, I wouldn't mind doing this again sometime.\" She gives my cock a quick squeeze through my jeans for emphasis.\n\n\"Me either,\" I answer honestly. Fuck! Between the kissing and the sighing, this is one very passionate woman. Neither Shelly nor Cyn kissed with the fervent abandon of Barbara's onslaught. I pull her into another embrace, pushing my tongue back into her mouth as I squeeze her firm ass cheeks and get lost in the dance between our tongues. We're both panting by the time we break the kiss and stare into each other's eyes for several seconds before she turns away and straightens her skirt.\n\n\"Good luck, Mike,\" she says as she makes a hurried exit.\n\nI quickly pull on my shirt and grab my car keys. I've got some reconnoitering to do. I drive to the address Barbara gave me and check out the house I'll be breaking into. It's a small two-story in a well-maintained neighborhood with two cars per house and a bunch of kids riding bikes in the street. I thought peeking through the window was a long shot anyway but with a two-story house it's impossible. I've got a Plan B but it'll have to wait until tomorrow because I have to work tonight.\n\nAs soon as I get to work I check my schedule and then ask Amber to cover my next two Thursday night shifts. She agrees as long as I'll take her Saturday shifts. No problem.\n\nMost of the next day is spent on Internet searches and phone calls to computer geeks at school. By mid-afternoon I have a list of what I'll need as well as a possible source. I'm heading to check out the source when my cell phone rings with Jasmine's ringtone.\n\nI sit down on my sofa and take a deep breath before I answer. \n\n\"Hello.\"\n\n\"Hi Mike.\" Jasmine's voice is soft and tentative. \n\n\"Hi sweetie,\" I answer, fighting back the threat of tears.\n\n\"Barbara insisted I call you but I'm not sure this is a good idea,\" Jasmine says quickly, trying desperately to keep any emotion out of her voice.\n\n\"You're not seeing me because your aunt is blackmailing you, right?\" I barge ahead without waiting for an answer. \"Well, I may have found a way to neutralize her blackmail.\"\n\n\"You can make Aunt Cyn take back her threat?\" she asks excitedly. \n\n\"Yes but it involves blackmailing the blackmailer and I wasn't sure how you'd feel about that,\" I tell her.\n\n\"What could you blackmail Aunt Cyn with?\" \n\n\"It's complicated and I need to discuss it with you before I do it,\" I answer. \"I think we should talk about it in person,\" I say, keeping my fingers crossed.\n\n\"I don't know, Mike,\" she says. \"What if Aunt Cyn finds out and spills everything before you can stop her?\" \n\n\"She never comes into the bookstore anymore,\" I answer, having thought ahead about where we could talk. \"I work from five to nine tonight. Can you get away?\"\n\n\"Okay,\" she says quietly. \"What time?\"\n\n\"Whenever you can get away, I'll make time,\" I answer confidently, hoping it's not a busy night. \n\n\"Okay, probably around 7:30,\" she says. \n\n\"Perfect!\" I want to tell her that I can't wait to see her, that I've missed her and I love her but I'm afraid I'll scare her. Neither one of us disconnects the call and the ensuing silence speaks volumes. \n\n\"Mike?\" Jasmine finally says.\n\n\"I'm here.\"\n\n\"I'll see you tonight,\" she says and disconnects. \n\nTomorrow is Thursday. I still have to arrange for the equipment and figure out what time to start my stakeout. I'm pretty sure I won't need the stuff tomorrow but I'd like to have it just in case. One of my friends said he could check out everything I need from the computer lab. I text him to meet me there in half an hour.\n\nI get the equipment along with a brief tutorial and just barely make it to work on time. It's a slow night and the two and a half hours from 5:00 to 7:30 drag by with my anticipation building. I can't wait to see Jasmine. She's right on time and is as beautiful as ever. I have a quick pang of guilt about Barbara but push it out of my mind as I rush up to greet her.\n\n\"Thanks for coming. We can talk over here,\" I say, leading her to a group of comfy chairs in the corner. It's a slow night and there is no one else around. \n\n\"It's good to see you, Mike,\" Jasmine says, with a slightly embarrassed smile. \"I'm so sorry about everything,\" she blurts out as tears well up in her eyes. \n\n\"It's okay,\" I assure her as I take her hand. \"I think we can make it right.\"\n\n\"How?\" she asks as she tries to sniff back the tears. I explain to her about Barbara's idea for blackmailing her Aunt and Uncle with pictures of his indiscretions. \n\n\"You're going to take incriminating photographs?\" she asks. \"Like a paparazzi?\"\n\n\"Well, it'll actually be incriminating video, but yes, that's the idea.\" \n\n\"Wow,\" is all she says. \n\n\"I just want to make sure that you want me to do it,\" I tell her, still holding her hand, enjoying the hint of intimacy it offers. \n\n\"Not only do I want you to do it but I want to go with you!\" Jasmine says.\n\n\"Wait a minute. I'm not sure that's a good idea,\" I answer, although I don't know why it isn't.\n\n\"Why not? It's me that she's blackmailing and if we're going to turn the tables on her I want to be part of it. Oh Mike, do you really think it'll work?\" Jasmine throws her arms around me and presses her lips to mine. \"I've missed you so much!\"\n\n\"We have to get the video first but if we do, then yeah, I think it'll work,\" I answer before pushing my tongue into her welcoming mouth. I break the kiss when I hear a page for a bookseller to customer service.\n\n\"I have to go, but I'll text you later and we'll decide where to meet tomorrow night,\" I say, kissing her again quickly before running over to the customer service desk. Fuck! This better work. \n\nJasmine and I text back and forth late into the night and then most of the next morning. I quiz her about her uncle's typical Thursday night schedule and we agree to meet right after Jasmine gets out of school. \n\nThe plan for tonight is just reconnaissance. We need to know what time they arrive, whether they drive separately and which room they use for their little fuckfest. Jasmine and I meet at the bookstore and leave her car there, assuming her uncle could recognize it. We go out to dinner, catching up like old friends as we wait for it to get dark. It's barely past dusk when we park down the street from Stephanie's house and she snuggles against me as we wait.\n\n\"What if Aunt Cyn calls our bluff?\" Jasmine asks as I wrap my arm around her and she rests her hand on my thigh.\n\n\"She won't,\" I answer, squeezing her against me as I breathe in her perfume. \"You smell nice,\" I say, wishing I could say so much more. \n\n\"I've really missed you,\" she answers. \"How did you and Barbara start planning something like this?\" she asks out of the blue. I must have tensed or blushed because she picks up on it right away. \"You fucked her, didn't you?\" she asks, sitting up and looking me in the eye.\n\n\"I can explain,\" I answer lamely. God, that sounds so fucking guilty. \n\n\"It's okay, Mike,\" she says, settling back down against me. \"I didn't really give you much choice but to see other women.\"\n\n\"That's not what happened,\" I reply. \"Believe me, I was not looking for anyone else. I was totally lost without you.\" I tell her the whole thing from start to finish beginning with how Barbara showed up in the bookstore after confronting her husband and ending with her plan to confront her husband again with the video.\n\n\"She was good, wasn't she?\" Jasmine asks, which is the last thing I expected her to say. \n\n\"She wasn't you,\" I answer, hoping to deflect her question but she's not easily deterred.\n\n\"But the sex was good, right?\" she asks. How the fuck am I supposed to answer that? \n\n\"Jasmine,\" I start but she cuts me off.\n\n\"I mean she's beautiful and she's a lot younger than Aunt Cyn and Shelly. I just think she was probably really good in bed.\"\n\n\"I'm not going to see her again,\" I answer. \n\n\"Because she wasn't any good?\" she laughs. I feel better now that we're bantering. \n\n\"What is with you and how good Barbara was in bed?\" I ask. \"Have I ever asked you how Jimmy was in bed?\" \n\n\"Do you want to know?\" she teases. \n\n\"No! I don't want to be with anyone but you,\" I answer, when some movement catches my eye. \"What have we here?\" I ask, as I watch Stephanie's garage door go up. \n\n\"What?\" Jasmine asks, sitting up and following my line of sight. A big SUV with tinted windows backs out of the garage and drives off before the garage door is completely closed. \n\n\"She's leaving?\" Jasmine asks as we both stare at the fading taillights. \n\n\"Okay, let's think about this,\" I say, visualizing a likely scenario. \"What would the neighbors think if three black men visited a single white woman at her house after dark?\"\n\n\"You think she's going to meet them somewhere?\" she asks.\n\n\"Barbara was pretty sure they met here,\" I answer. \"Wait a minute,\" I say, snapping my fingers for emphasis. \"She's going to meet them somewhere and drive them back here. It's the only thing that makes sense.\"\n\n\"She drives into the garage with her tinted windows and when the door closes behind her they all go into the house,\" Jasmine completes the thought process. ",
        "\"I doubt if their rendezvous point is very far away so we should know shortly if we're right.\"\n\n\"How will we know if we can't see them?\" Jasmine asks but I'm already a few steps ahead of her. \n\n\"She'll have to take them back,\" I say. \"Check the time. How long has she been gone?\" \n\n\"A couple of minutes, why?\" \n\n\"Because I need to know how long I can be inside the house when she takes them back,\" I say confidently. \n\n\"What? You're going into her house?\" she asks.\n\n\"While she's gone,\" I confirm. \"When she drives away, I'll duck under the garage door before it closes and scope out the love nest.\" I decided not to say fuckfest to Jasmine.\n\n\"How will you get back out?\" she asks. \n\n\"Either through the garage or the back door depending on whether she has a deadbolt,\" I answer. We wait for eight more minutes, a total of ten, before the SUV reappears and the garage door goes up. \n\n\"Ten minutes,\" Jasmine says. \"That's all the time you'll have.\" Her voice betrays her nervousness. \n\n\"That's plenty of time,\" I answer.\n\n\"What do we do now, just wait?\" Jasmine asks. \n\n\"Well, we could just sit here and wait,\" I answer, pulling her tightly against me and brushing my fingers through her hair.\n\n\"Or...?\" she asks.\n\n\"Didn't you once tell me you've had some experience in parked cars?\" I ask.\n\n\"Only in backseats,\" she answers, looking over her shoulder at the back seat. \"How long do you think they'll be inside?\" \n\n\"Not sure so we better get to it,\" I smile. After turning off the dome light, I open my door and we scramble out on my side and into the backseat. Jasmine pushes me onto my back as soon as the door closes and starts unfastening my belt. I lift my ass off the seat so she can pull my jeans down and she quickly frees my hard cock from my boxers. \n\nIt doesn't take me long to remember how talented Jasmine is with her mouth as she caresses my balls and bobs her head up and down on my cock. Fuck!\n\n\"God! I've missed you so much,\" she says as he pauses for a breath and then nibbles along the side of my erect shaft. \n\n\"I missed you more,\" I tease and she bites the side of my dick in response. \"OW!\" I cry while she laughs and then slides her lips all the way down to the base of my cock. Nestled in her throat I don't give another thought to the bite. I just curl my fingers in her hair and hump my ass off the seat in sync with her rapid rhythm. \n\nIt occurs to me that Jasmine is still fully dressed as my urgency rises to a throbbing peak and I fuck her mouth with impatiently hard strokes. Her fingers continue to tease my balls as she drives me to my release.\n\n\"Oh God! I'm going to cum,\" I warn her as she pumps my cock with her hand and swirls her tongue around my cockhead. \"Oh fuck!\" My cock erupts inside her mouth and I jerk violently through a series of pleasure-inducing spurts that Jasmine successfully swallows without breaking her rhythm. She milks my cock completely dry before releasing it from her mouth and sitting back on her heels. \n\n\"Mmmm,\" she smiles while wiping a stray string of cum from her bottom lip. \"I think I missed you more,\" she says as she tugs her jeans and thong down together and tosses them on the floor mat. \n\n\"Come on, Tongue-man, do your stuff,\" she says, lying back and spreading her legs. I'm still catching my breath from my orgasm as I lower my mouth to Jasmine's succulent pussy. She's already wet when my fingers slide her unruly hair out of the way and expose her pink pussy lips. I love Jasmine's thick bush but crisply trimmed pubic hair like Barbara's has its advantages. \n\nLowering my mouth, I take one long lick from the bottom of her pussy lips to the top, spreading them apart with my tongue. Her sweet flavor and familiar aroma send erotic signals to my spent cock and I take a deep breath before plunging my tongue deep inside her opening.\n\n\"Oh fuck, yes!\" Jasmine cries as my tongue starts to explore her delectable pussy. I tongue-fuck her pussy, nibble her labia and flick my tongue over her clit until she's writhing around on the seat and moaning loudly. With one hand on her curly mound, I try to hold her still as I suck her engorged clit into my mouth. \n\n\"Ohhhh! Mike!\" she pants, grabbing my head with her hands and bucking wildly against my mouth. I pump a finger into her blazing hole while sucking steadily on her sensitive love button. \n\n\"Ohhh! Yeah! Fuck yeah!\" Jasmine clenches her pussy around my finger and digs her fingers into my scalp as her orgasm hits with a vengeance. \n\n\"Oh God! So good! So good, Mike! Oh FUCK!\" she convulses against my face, squeezing her thighs tightly around my head until I can barely breath. Shaking and trembling, she pushes my mouth away from her pussy and collapses back on the seat. \n\n\"I definitely missed you more,\" she gasps while sucking air into her lungs. I drink hungrily from her thick flow of juices, swiping my tongue around her soggy opening as I breathe in her erotic scent. \n\nWe're only naked from the waist down but that's all that matters right now. I kneel on the seat between her legs and position my fully recovered cock at the threshold to her love canal. She opens her thighs a little wider and my cock glides smoothly into her slick hole. Jasmine locks her heals around my ass and pulls me deeper inside as I piston my cock in and out of her soggy pussy. \n\nOur urgent need recovers quickly and she's bucking her hips off the seat as I repeatedly slam into her with my hard cock. There isn't room for us to stretch out so I can't kiss her while we fuck. I just grab her thighs and pound my cock into her until I feel her pussy muscles tighten around me. With one final thrust, I jam my cock deep inside her quivering pussy, sending us both over the top.\n\n\"Oh God! Oh Fuck! Oh! Oh! Ohhhhh!\" Jasmine cries as the shockwaves crash through her body and I shakily spew a large load of cum deep inside her pussy. \n\nPulling out my spent cock, I scoot back so I can lean down and kiss her lips. She sucks my pussy soaked tongue into her mouth while pushing her fingers into my hair and pulling my face tightly against hers. \n\n\"This idea of yours better work,\" she says when we break the kiss. \n\n\"It will,\" I answer confidently. Looking up, I notice a light in one of the upstairs windows. \"I bet that's where they are. We better get dressed,\" I add, kissing her quickly before sitting beside her. \n\nWe dress and move back into the front seat. The car smells like raw sex and I lower my window a few inches, although the smell is not unpleasant. \n\n\"When she takes them back, I'm going to go in and check it out,\" I remind her. \n\n\"I'm going with you,\" she insists.\n\n\"You can't,\" I answer. \"Someone has to keep watch.\" Then an idea hits me. \"Wait here, I have an idea,\" I tell her, popping the trunk and getting out of the car. I get the laptop and Bluetooth camera from the trunk. \n\n\"We can do a dry run,\" I offer, getting back in the car and booting up the laptop. \n\n\"What do you mean?\" Jasmine asks, scooting away to give me room to work on the computer. \n\n\"This is a Bluetooth camera,\" I say, handing it to her. \"Next week I'm going to sneak it into Stephanie's bedroom,\" I explain. \"This signal booster should let us capture the video from up to 100 feet away.\" I hold up the tiny USB device to show her before plugging it into the laptop. \n\n\"Wow! Is this legal?\" Jasmine asks, inspecting the tiny camera. \n\n\"Probably not, but neither is going into her house without permission but I can't imagine this will ever end up in a courtroom.\" The camera is already linked to the laptop so once it boots up, I just click on the video capture software and the screen fills with a shot of Jasmine's face looking into the camera. \n\n\"When they leave, I'll take the camera with me and you can watch on the laptop to make sure we have a good signal.\" I turn the laptop so she can see the image. \"This screen lets off a lot of light, so wait until she drives away to open it,\" I advise, lowering the lid until it is almost closed. \n\nWe snuggle close and sit quietly, enjoying the silence of our post-coital intimacy. God, I've missed her!\n\n\"The garage door is opening,\" Jasmine cries, jolting me alert as she points at the white door starting to rise.\n\n\"Okay,\" I grab the camera from her and open my door. \"Keep an eye on the time. We'll communicate with our phones,\" I say, kissing her quickly and ducking around the back of the car. I sprint across the grass and stand with my back to the side of the garage, hopefully out of sight of her headlights. \n\nI hear the garage door start to close, but I wait until she's in the street and putting the car in drive before I whip around the corner and duck under the garage door just before it closes. The garage is lit from the light of the door opener and I quickly make my way to the inside door while calling Jasmine on my cell.\n\n\"Hey,\" she answers, whispering like she can be overheard.\n\n\"I'm in,\" I say as I walk in the house. \"It didn't look like they noticed anything.\"\n\n\"No, they kept going but I saw you as clear as day. I hope there aren't any noisy neighbors.\"\n\n\"Well, just keep an eye out, this won't take long.\" I hold the camera up so Jasmine can see what I'm seeing. \"How's the signal?\" I ask.\n\n\"Perfect. I can see the kitchen,\" she says. \"This is weird. Hurry up, okay?\"\n\n\"I'm going to go upstairs now.\" Walking through the kitchen, I notice some half-empty glasses and a bottle of whiskey on the counter. Keeping the camera in front of me, I show Jasmine the direction I'm headed. The stairs are around the corner near the front door. I take them two at a time. \n\n\"The light came from the end of the hall,\" Jasmine says, her voice startling me in the quiet house. \n\n\"Yeah,\" I answer, moving quickly. The lights are all off and I'm pondering whether to turn them on when I hear Jasmine's voice again.\n\n\"Three minutes, Mike,\" she says, helping me make the decision. \n\n\"We won't know if the camera works unless I turn the light on,\" I tell her, reaching for the switch. The bedroom has the same heavy sexual aroma as my car and the sheets are messy with several wet spots. \n\n\"This is obviously where we want the camera,\" I tell her, looking around for a good spot. \"Tell me how much of the room you can see?\" I ask placing the camera on the dresser beside the bed, tucking it between a ceramic crock and a small jewelry box.\n\n\"I can see part of the door and all of the bed over to the nightstand,\" she answers. \"Six minutes,\" she adds as I crawl onto the bed and look over at the camera. It's pretty visible. I move it back a little and try again. Perfect! I'm counting on them being too distracted to notice something on the dresser. \n\n\"How's that?\" I ask Jasmine.\n\n\"Eww, you're on her bed!\" she blurts. \n\n\"How's the viewing angle?\" I ask.\n\n\"Same as before. You need to get out of there, Mike.\"\n\n\"Right now,\" I answer, grabbing the camera while I take another look around the bedroom. Peeking my head in the bathroom, I see a bunch of towels on the floor. Of course, the men would want to wash off the sex before they go home. \n\n\"There's a car coming,\" Jasmine yells. \"That was fast!\"\n\n\"Coming out now!\" I take the stairs two at a time. The front door is chained. So is the kitchen door. Damn! She'll remember chaining them. I head for the garage and plaster myself against the wall just to the left of the overhead door. A few seconds later, the garage door opener jerks to life craning up the large wooden door.\n\n\"Mike!\" Jasmine yells. I quickly disconnect the call and shove the phone in my pocket. As the SUV pulls in, I crouch below the windows on the passenger side, out of sight of the driver. I hear the driver door open and her heels clicking on the cement floor. A moment later the garage door springs to life again and I wait for the sound of the entry door closing before making my exit. \n\nDucking under the garage door, I slip into the shadows beside the house to catch my breath before running back to the car.\n\n\"Jesus, Mike,\" Jasmine greets me. \"You cut that awfully close!\" She still has the laptop on her lap but the lid is nearly closed. We both look up at the house as the light comes on in the corner bedroom. \"Do you think she'll at least change the sheets?\" Jasmine asks disgustedly. I just shrug as I start the car.\n\n\"Next Thursday I'll plant the camera when she goes to get the men and then retrieve it when she takes them back,\" I explain to Jasmine who has been silent since we left Stephanie's house. \"You're still okay with this, right?\" I ask, placing my hand on her thigh for reassurance.\n\n\"Oh yeah!\" she answers. \"I'm just thinking about how Aunt Cyn is going to feel when she sees this.\"\n\n\"We don't have to go through with it.\"\n\n\"Yes we do!\" she insists. \"The alternative is that we can't be together,\" she sighs. \"I just wish she hadn't pushed us to this.\"\n\n\"Me too!\" I respond, feeling as melancholy as Jasmine. I drive to the bookstore where Jasmine and I kiss like long lost lovers before she has to leave.\n\n\"Mike,\" Jasmine says as she opens her door. \"Next week, are we going to watch them as they're doing it?\" she asks. I hadn't really thought about that.\n\n\"Unless we can find something else to do,\" I answer and her responding smile is absolutely radiant.\n\n\"I'm kind of morbidly curious,\" she says. \"But kind of appalled, too.\"\n\n\"I feel the same,\" I assure her, although I do kind of wonder what this Stephanie woman looks like to entice these three men away from their sexy wives.\n\nThe next week is like a blur. Barbara calls for a progress update and I thank her for talking to Jasmine. She lingers on the phone after I explain what's happening next Thursday. I think she's waiting for an invitation but I just tell her I'll call her next Friday and let her know how it went. Jasmine and I text all week and except for not being able to see her, it's almost like old times. \n\nWhen Thursday finally arrives, Jasmine and I follow the same routine as before except this time, I'm walking down the street, or at least pretending to, when the garage door opens. As soon as the SUV drives away, I run to the garage and slip under the door.\n\nThe kitchen is clean and she's put some snacks on the coffee table in the living room. They must start here before heading to the bedroom. I quickly climb the stairs, go into the front bedroom and plant the camera on the dresser exactly where I had it last week. There is enough clutter on the dresser that I'm hoping it will obscure the view of the camera. \n\n\"How's it look,\" I ask when Jasmine answers her phone.\n\n\"Just like before. I can see everything,\" she says. \"Now get out of there.\"\n\n\"On my way!\" I respond, racing down the stairs and through the living room. I can't believe my good fortune when the chain on the back door isn't hooked. Slipping out onto the patio, I find my way around the house and open the side gate. \n\n\"Is it clear?\" I ask.\n\n\"No cars in either direction,\" Jasmine responds. I jog over to the car and jump in the driver's seat. \n\n\"Keep the laptop closed until they pull into the garage,\" I say but she's one step ahead of me. \n\n\"God, I'm so nervous,\" Jasmine says. I'm about to reassure her when headlights appear at the end of the street. We scrunch down in our seats while watching the garage door open and the SUV disappearing inside. \n\n\"Okay, here we go,\" I say, opening the laptop and staring at the empty bedroom. \n\n\"I'm not sure I'm ready for this,\" Jasmine whispers. \"Do we have to watch it?\" I think about her question for a minute before answering. We're recording so I can always watch it later but...\n\n\"We have to monitor it in case they spot the camera,\" I answer tentatively, assessing her response. I set the laptop on the passenger side floor and tilt the screen so I can still see it but it doesn't light up the inside of the car.\n\n\"Oh, right,\" Jasmine says, seemingly lost in thought. \"Well, I don't have to watch it,\" she says, smiling as she traces her fingers up my jean covered thigh. \"If I remember correctly, watching interracial sex makes you very hard,\" she teases. I laugh at the memory of Jasmine and I watching her boyfriend and my date having sex in the backyard at a party. I did get pretty turned on.\n\n\"I don't need any outside stimulation to make me hard when I'm with you,\" I respond, kissing her on the mouth. Jasmine is squeezing my hard cock through my jeans when we're startled by a voice coming from the laptop's tiny speaker.\n\n\"How come you're always first, Reggie?\" A female voice asks. Both of our heads pivot towards the sound.\n\n\"Because I refuse to eat your pussy after those other lunkheads have filled it full of cum,\" Uncle Reggie answers. \"And you know how much I love the sweet taste of your pussy,\" he purrs. They are stripping off their clothes as they speak and I watch Stephanie hang up her blouse and start to unfasten the clasp on her bra. \n\n\"Eww,\" Jasmine says. \"I don't want to see my Uncle Reggie's junk.\" She turns her head away. \"You watch it and I'll just play with this,\" she says, tugging at my belt and unfastening my jeans. I raise my ass so Jasmine can pull my jeans down, springing my hard cock free.\n\n\"Hmmm,\" Jasmine teases. \"You seem to like watching naked white women,\" she adds as she lowers her head and licks around the dome of my cockhead.\n\n\"I like what you're doing,\" I answer but I'm still watching the camera feed on the laptop. Stephanie has shrugged out of her bra and released her sizable breasts with a flirtatious shake. It's hard to tell but she appears to be in her late twenties or early thirties, with long blonde hair and an hourglass figure -- large breasts, flat stomach and curvy hips. \n\n\"Do all white women shave?\" Jasmine asks, glancing at the screen as Stephanie finishes peeling off her lacy thong, revealing a smooth pussy mound. She didn't say anything about the substantial boner her uncle is sporting. \n\n\"It's not just white women,\" I answer too quickly.\n\n\"Barbara?\" Jasmine asks, raising her head to look at me but keeping her hand slowly moving on my cock.\n\n\"She had a unique style to hers,\" I smile as I watch Stephanie get settled on the bed and Reggie crawl up between her legs. \n\n\"Would you like it if mine was shaved like that?\" Jasmine asks but before I can answer Stephanie's voice comes booming from the laptop.\n\n\"Oh yeah, Reggie! Eat my pussy!\" she cries.\n\n\"Do we have to have the sound up?\" Jasmine asks, raising an eyebrow to me as she peeks at the screen.\n\n\"No, you can turn it down,\" I answer. She reaches over and taps the volume button, eliminating the sound, and then resumes her playful licking of my cock. \n\nI lean back and enjoy Jasmine's extra slow teasing of my cock while I watch Reggie eat Stephanie to a bed-thrashing orgasm. He flips her over and she pushes up on her hands and knees while he kneels behind her. Jasmine is lightly stroking the sides of my cock while she gently sucks on my engorged cockhead. Reggie positions his thick black cock behind Stephanie. The camera view is from the side and I can't tell if he's fucking her pussy or her ass but it might be her ass because it's taking him a while to get it all the way in. \n\nGod! This is surreal. Sitting in a car, with Jasmine playfully teasing my cock while I watch her uncle ass fuck his... what? His mistress? My cock is rock hard and I can feel the tension build.\n\n\"Keep that up and you'll have a mouthful,\" I warn her. \n\n\"Isn't that the idea?\" she says, giving a quick glance at the laptop. \"Are you enjoying the show?\" she teases while corkscrewing her hand up and down my rigid shaft. \n\n\"I'm just monitoring this in case they spot the camera,\" I say jokingly. \"I'm enjoying what you're doing.\"\n\n\"Good answer,\" she laughs before sliding my cock back into her warm mouth. Between Jasmine's prolonged teasing and the erotic images on the laptop, a slow burning tension amasses in my dick and I feel like I could shoot a hole in the roof. Jasmine's tongue continues to torment my hard, throbbing cock while Reggie and Stephanie pound their way through to a violent climax. ",
        "Reggie doesn't hang around for hugs and kisses and Stephanie flips over onto her back as soon as he leaves the room. With her legs spread, she's rubbing her pussy when the next guy walks in already naked. \n\n\"Who's that?\" I ask Jasmine who releases my cock and checks out the video image. \n\n\"Shelly's husband,\" she answers. \"I forget his name, Ron or Rob or something. Damn! He's big!\" She gasps but I don't know if she means him or just his erection. By the looks of him it could be both. His giant cock sways in front of him as he crawls up on the bed. Stephanie seems to be giving him instructions just before he buries his face in her ample breasts. \n\n\"That's her boss,\" I say, not knowing why I thought I should supply that detail. \n\n\"She seems to be bossing him,\" Jasmine says, dismissing my comment. She watches for a while as Rob/Ron alternates between Stephanie's stiff nipples. \"I want to see if that thing fits inside of her,\" Jasmine says. \n\n\"If Barbara's right, it's been going in there for a while,\" I answer; selfishly wishing she wasn't so distracted and would get back to my cock. \n\n\"I know this is wrong, but I just want to see it go in,\" she says sheepishly. We both watch as Shelly's husband continues chomping on Stephanie's tits. With the sound down, we can't hear what she's saying but she appears to be giving him more direction and he releases her breasts and positions his black monster against her widespread pussy. \n\n\"Looks like you're going to get your wish,\" I tell her as Rob/Ron leans on Stephanie's thighs, spreading them farther apart and guides his over-sized cock into her splayed open pussy. \n\n\"Jesus!\" Jasmine gasps as his solid rod slides right in with apparently no resistance. That must be one well-fucked pussy to take that large cock so easily. Stephanie smiles broadly as she pulls him down on top of her and he starts pounding into her.\n\n\"Jealous?\" I tease as I watch Stephanie's tits flop back and forth with his fervent rhythm. \n\n\"No way!\" she cries, turning her face back to my cock. \"You're the perfect size for me.\" The brief pause has taken some of the urgency out of my erection but with a few quick strokes Jasmine brings it back to its former rigidity and slips my cockhead into her warm mouth. Between the video feed and Jasmine's long-drawn-out blowjob, my cock is achingly hard but fastidiously just under the threshold for release.\n\nShe continues sucking and licking my cock as I watch Stephanie change partners again. For some reason Barbara's husband is treated to a blowjob. Stephanie seems to be the one calling the shots about what each guy gets to do. She has this one lie on the bed while she kneels between his legs. As I watch her pale lips wrap around his thick, black shaft, I am getting so ready for Jasmine to finish me off but she seems in no hurry to set a rhythm that would do it.\n\n\"Mmmm,\" I moan encouragingly, hoping she'll get the message but she just keeps licking, stroking and nibbling up and down my throbbing shaft. Even though it's torturous, it is also one of the most erotic blowjob I've ever had. The leisurely pace, without any urgency to make me cum, is driving me crazy. I wish we were in my bed and Jasmine was naked but then she probably wouldn't be taking such an unhurried approach.\n\nI check the time on my phone and I'm surprised that we've all been at this for almost two hours already. Fuck! No wonder my cock is so sensitive. I curl my fingers in Jasmine's hair and hold her head while I try to push my cock farther into her mouth but she's having none of it. She pushes my hand away and lets my cock spring free.\n\n\"Getting anxious?\" she says breathlessly.\n\n\"Yes,\" I answer honestly.\n\n\"Patience, white boy,\" she laughs while glancing at the laptop screen. \"If what you've heard is true, there is going to be quite a finale to watch and that's when I'll make you cum.\" \n\n\"You're amazing, do you know that?\" I tell her, brushing her hair from her eyes. \"That's a brilliant idea.\"\n\n\"I know, \" she says, watching Stephanie blowing Barbara's husband while she gently strokes my cock. \"I'm amazing and brilliant and don't you forget it,\" she playfully adds.\n\n\"Never,\" I answer as I rock in rhythm to her strokes. \n\nNow Stephanie is really going at it with the dentist and we both watch her head bobbing like crazy while she pumps his hard cock in and out of her mouth. He grabs the sides of her head and bucks his hips up, fucking her mouth to a thunderous climax. Jasmine's hand has stopped moving on my cock as she stares at the cum-swallowing scene playing out on the laptop. \n\n\"Wow,\" she whispers. \"I've seen a few porn videos but they are really fake looking compared to the real thing.\"\n\n\"We seem to have a knack for being in the right place at the right time,\" I answer glibly and she smacks me on the arm.\n\n\"Don't get used to it,\" she says. \"I don't plan on making this a habit.\"\n\n\"I hope you only mean the watching part and not what you've been doing to my dick because that is incredible.\"\n\n\"Glad you like it,\" she smiles as she again sucks my cockhead into her mouth and swirls her tongue across the dome. \n\n\"God! That feels so fucking good,\" I cry as I watch Stephanie suck the dentist's cock back to a rigid hardness. He has turned crosswise on the double bed, so we are now looking at Stephanie's ass as she kneels between his legs. She must have called the others because they walk into the room just as Stephanie mounts the fully recovered cock. Once again giving directions, she positions each guy where she wants him.\n\n\"I'm not going to watch this,\" Jasmine says as her uncle stands next to the bed near Stephanie's face. That's fine with me especially when she attacks my cock with a renewed vigor. Jasmine fondles my balls with one hand while she sets a steady rhythm up and down my cock with the other. Her tongue is making up for lost time all around my sensitive shaft and I'm getting close to shooting my built up cum into her talented mouth. \n\nIt looks like Shelly's husband will be fucking her ass and once he gets into position he's pretty much blocking our view of everyone else. Not wanting to stare at this guy's dark ass, I close my eyes and just enjoy Jasmine's vivacity.\n\n\"Ohhh fuck!\" I groan as the combination of her hands and her mouth push me over the edge and I start spewing a shitload of cum into her eager little mouth. \"Ohhhh! Fuck yes!!\" I scream as I jerkily deposit what feels like a gallon of cum from my convulsing cock. \n\nJasmine keeps pumping me, sucking and swallowing every bit of my cum until I'm completely drained and I fall back onto my seat, gasping for air.\n\n\"Wow!\" she exclaims as she sits up, licking her lips. \"I think that's the most you've ever cum.\"\n\n\"What did you expect when you've been playing with it for hours?\" I say, still panting. \n\n\"Not to mention the extra stimulation of an interracial foursome,\" she teases. \n\n\"That was incredible!\" I tell her, still catching my breath. On the laptop screen the foursome are still going at it but all we can see are the muscles on Rod/Ron's ass clenching as he thrusts into Stephanie's asshole. Trust me, it's not a very erotic sight. \n\n\"What happens next?\" Jasmine asks as I pull my jeans back up.\n\n\"I edit the footage and create a blackmail DVD for Aunt Cyn,\" I answer. \"Then I meet with her to renegotiate.\"\n\n\"You mean we meet with Aunt Cyn,\" Jasmine corrects me and I smile as I nod in agreement.\n\n\"That's what I meant,\" I say as I finish fastening my jeans. \"It looks like the party inside is winding down. I probably have time to reciprocate.\" I raise my eyebrows as I pull her towards me.\n\n\"I'm fine,\" Jasmine says. \"And you need to be ready to get that camera.\" Ron/Rod seems to have finished first, followed quickly by Reggie. With her mouth and ass empty, Stephanie is riding the cock in her pussy like a wild woman. \n\n\"You would think she'd be exhausted by now,\" Jasmine comments about the on screen action. \"She's such a slut! I can't imagine doing anything like that.\"\n\n\"Good, because I don't plan on sharing you,\" I answer, kissing the top of her head. \n\n\"I mean, first of all it looked uncomfortable as hell and secondly, I'd rather have one guy several times than several guys all at once.\"\n\n\"As long as I'm that guy!\" I answer, squeezing her against me.\n\n\"Of course,\" she agrees, settling into my arms as she turns her face away from the video where Stephanie is finally climaxing. It appears that she's employing some theatrics in her finale and I watch her shake violently around before throwing herself down on the dentist's chest.\n\nJasmine and I sit quietly in the car, cuddled in each other's arms as we wait for the garage door to open. About twenty minutes after they've finished in the bedroom, I see light under the door and it slowly starts to rise. \n\n\"Gotta go,\" I say, giving Jasmine a quick peck on the cheek. I slip out of the car, scurry across the neighbor's yard and flatten myself against the side of Stephanie's garage. I repeat my maneuver from the other night and retrieve the camera without incident. Fortunately the back door isn't chained and I slip out and we're on our way before Stephanie returns.\n\n\"Do you want to come over for a while,\" I ask Jasmine. \n\n\"Not tonight, Mike,\" she says. \"This whole thing is kind of disgusting. I want to take a shower and go to bed.\"\n\n\"I didn't think the whole night was disgusting,\" I tease.\n\n\"Not the whole night,\" she agrees, patting my thigh. \"Just the part inside the house. I don't understand it from either viewpoint; hers or theirs. Why would she degrade herself like that and why would those men want to all fuck her at the same time?\" \n\nThinking her question is rhetorical, I don't answer. \n\n\"You had a threesome with Aunt Cyn and Shelly, right?\" Jasmine asks. I just nod. \"Would you want to be with two other guys fucking one of them?\"\n\n\"No,\" I answer, wondering how much I should disclose about Shelly's motives. \"How much do you know about that threesome?\" I ask.\n\n\"Not very much, but I can imagine how you might enjoy being serviced by two women at once,\" she says.\n\n\"Okay, I did enjoy it, but Shelly enjoyed it the most,\" I answer cryptically, waiting to see if Jasmine takes the hint. She doesn't.\n\n\"What do you mean?\" she asks as we turn down her street.\n\n\"Shelly orchestrated the entire thing because she wanted a sexual relationship with Cyn, not because she wanted a threesome with me.\" There it is, right out there in the open. Jasmine's jaw has dropped and she's just looking at me. \n\n\"Well that's a different thing all together,\" she says, clearly flabbergasted. \"So, Shelly and Cyn weren't just sharing you, they were... um...\" I nod my head. \"With each other?\" she asks. I nod again. \n\n\"Whoa, I wasn't expecting that,\" she says. \"Couldn't we have used that to blackmail Aunt Cyn?\" I told you this girl was smart.\n\n\"I tried that and she said she would still go through with her threat even if it meant full disclosure of her relationship with Shelly. They're still spending Thursday nights together, just the two of them as far as I know.\"\n\n\"I hope this video works,\" Jasmine says as we sit in the car in front of her house. \n\n\"It will,\" I assure her. \"I'll call you when I have a DVD made that we can show Cyn.\" Jasmine kisses me hard on the mouth and gets out of the car. \n\n\"Love you,\" she says just before closing the door, preventing me from responding in kind. \n\nIt only takes a couple of hours to edit the juicy footage that should give Cyn second thoughts. I also make a DVD for Barbara to use with her husband and one for Shelly, although I'm not sure she'll want it. I only included footage from the individual trysts, not the group fuck. The visual was better and the audio was much more incriminating.\n\nI call Jasmine the next day and we decide to meet with Cyn the following Monday.\n\nJasmine arranges for her Aunt Cyn to meet her after school on Monday before her mom gets home. I pick her up from school and we're waiting in her living room when Cyn walks in.\n\n\"What is he doing here?\" she demands without any preamble.\n\n\"We need to talk to you, Aunt Cyn,\" Jasmine answers. \n\n\"I thought I made myself clear,\" Cyn says with her hands on her hips.\n\n\"We would like you to reconsider,\" I offer quietly. I have the laptop on the coffee table with the most explicit scene cued up. It was Jasmine's idea to try to reason with her first.\n\n\"You could have saved us both some time,\" Cyn says. \"I am not about to reconsider!\"\n\n\"We love each other,\" Jasmine says quietly.\n\n\"It's infatuation, girl!\" Cyn yells.\n\n\"Then why not let it play out?\" I ask. \"If it's only infatuation, it will run it's course.\"\n\n\"Jasmine,\" Cyn says, ignoring me. \"Listen honey, I know you think what you're feeling is love. I've experienced Mike's charms first hand, remember? I know that when he gets going on you he can make you believe that down is up. He's a very talented lover, but that doesn't mean he loves you.\" \n\n\"What if you're wrong?\" I ask. \"What if this is the real thing?\"\n\n\"You are what's wrong!\" Cyn points at me for emphasis. \"You just need to march your white ass out of here before I tell her mama all about you!\"\n\n\"Aunt Cyn...\" Jasmine pleads.\n\n\"I will do what I have to do!\" Cyn interrupts her niece. \"Now, are you leaving?\" she asks, turning back in my direction.\n\n\"No,\" I answer, shaking my head. \"I've something to show you first.\"\n\n\"You don't have anything I want to see. If you won't leave, then you two will pay the consequences!\" She turns to go and I tap the play button on the laptop.\n\n\"Oh Reggie, fuck my ass!\" Stephanie's voice fills the room a little louder than I intended but it has the desired effect. \"You love my tight white ass, don't you Reggie?\" Cyn has stopped in her tracks and turned back toward us.\n\n\"You know I do, Baby,\" Cyn's husband's voice jumps from the tiny speaker. \n\n\"What the hell?\" Cyn steps back and I turn the laptop screen towards her. \"Oh my god! What have you two done?\" she asks. Jasmine stands up and helps her aunt to a chair. Cyn sits down, takes a quick look at the video and turns away. \n\n\"Shut that off, you've made your point,\" she says angrily. \"What do you expect to gain with that? I already knew he was fucking her,\" she says indignantly. I expected this response and I'm ready for her.\n\n\"But everyone else doesn't,\" I answer. \"What if this went viral on the internet?\" \n\n\"There is nowhere you could post this video that anyone in our congregation would see it,\" she counters. Having anticipated this response too, I hand her a stack of papers I had ready next to the laptop.\n\n\"What is this?\" she asks, looking at the list of names.\n\n\"The email address of everyone in your husband's congregation.\" I answer. \"You'll notice it starts with the church council and then the deacons.\" I sit back, maybe a little too smugly. Cyn looks over the list and I see her shoulders slump in acquiescence. \n\n\"You wouldn't,\" she says but her voice lacks conviction. \n\n\"We don't want to but you haven't given us much choice,\" I answer. \"You threatened us. We're just threatening back and we're as serious about this as you are.\"\n\n\"I just want what is best for you,\" Cyn addresses Jasmine. \"I just want you to have a happy life with someone of your own race.\"\n\n\"Yeah, that seems to be working out well for you,\" I say sarcastically, nodding towards the laptop. Before Cyn can respond, Jasmine gives me a scowl and waves her hand at me to be quiet. She's right. I shouldn't be rubbing salt in the wound. I sit back and let Jasmine take over. \n\n\"We don't want anyone to ever see this video, Aunt Cyn,\" Jasmine says quietly.\n\n\"What do you want?\" Cyn asks resignedly. \n\n\"We just want you to let us be together. We want a chance to see if there is more here than infatuation.\" Cyn studies her niece and then looks at me.\n\n\"You're bluffing,\" she finally says. \n\n\"There is two hours of video, taken inside Stephanie's bedroom,\" I say, handing her a DVD as I return her glare. \"We went to too much trouble to be bluffing. It wouldn't take me very long to start emailing selected clips from this video.\"\n\nCyn abruptly stands up. \"Fine! I'll leave you two to your infatuated frolicking. Fuck each other's brains out for all I care. Just mark my words, nothing good will come of this!\" She grabs the DVD and stomps out the door. \n\n\"Well, that went well,\" I deadpan and immediately wish I hadn't said it. Jasmine looks forlorn and I move next to her on the couch, wrapping my arms around her. \n\n\"My mom will be home soon,\" Jasmine says. \"Can we go to your place?\" \n\n\"Let's go,\" I answer, pulling her to her feet. \n\n\"I wish we didn't have to do that to Aunt Cyn,\" Jasmine says on the drive to my apartment.\n\n\"She didn't give us much choice,\" I answer.\n\n\"Mike,\" Jasmine says hesitantly. \"What if she's right? What if this is just infatuation?\"\n\n\"Do you really believe that?\"\n\n\"No, but I thought I loved Jimmy, too,\" Jasmine says, displaying quite a bit of introspection for an eighteen year old.\n\n\"We won't know unless we're allowed to spend time together,\" I say. \"The only thing that will make the blackmail right is if we prove Cyn wrong.\"\n\n\"I know, but...\" \n\n\"There aren't any guarantees, Jasmine.\" I glance towards her. \"I love you and I'm going to do my best to make this work for us for a long time.\"\n\n\"I love you, too,\" she says, visibly relieved. \"And in a few minutes, I'm going to show you how much I've missed you,\" she adds as we pull into the parking lot.\n\nYou'd expect that we'd be stripping each other naked as soon as we're inside my apartment but by some unspoken agreement we are taking it slowly. Jasmine takes the lead walking into my bedroom and closing the door behind us. \n\nTurning to me, she kisses me lightly on the lips as she starts unbuttoning my shirt. As it falls off my shoulders onto the floor, she unbuckles my belt. I slip off my shoes as she's unfastening my jeans. My cock springs out when she tugs my jeans and boxers down together. Kneeling on the floor, she kisses the end of my prick as I step out of my jeans and she tosses them aside. \n\nNeither of us has spoken since we entered my apartment and it seems Jasmine intends to keep it that way. She motions for me to lie down on the bed before stepping back and slowly stripping off her clothes. It's not a striptease but just a very comfortable, unhurried unveiling of her beautiful body. \n\nI lie transfixed with my cock pointing at the ceiling as she unclasps her bra and shakes her tits free of their restrains. Damn! I will never get tired of looking at her perfectly shaped breasts. My eyes follow her taut nipples as she shimmies back and forth, pushing her jeans down. Wearing only her thong, she sits on the edge of my bed and gently caresses my rigid shaft.\n\n\"This isn't just infatuation,\" she says quietly.\n\nSlipping off her thong, she lies down beside me and I wrap my arms around her. We're on our sides and I kiss her lips as we press our bodies together. She reaches down and pushes my cock up so it isn't poking right into her abdomen while I move my hand over her breast, teasing her nipple. \n\n\"You are so beautiful,\" I tell her, breaking the kiss and moving my head down to her taut nipple. I suck and lick her thick, black nubs as she softly moans her appreciation. I feel her shiver when I squeeze the sides of her soft breasts while blowing my hot breath over her moist nipples.\n\n\"I love you, Mike,\" she barely whispers as another shiver rolls through her body. I kiss her lips again, pushing my tongue into her warm mouth. She hungrily sucks on my tongue as my hands roam from her breasts down her sides and massage her hips.\n\n\"I love you, too, Jasmine,\" I whisper, trailing kisses down her magnificent body. Kneeling between her legs, I lick her inner thighs while sliding my arms behind her knees. She lets out an extended moan when I lift her legs into the air and flick my tongue across her pussy lips. Damn, she tastes good. ",
        "\"Ohhhh! Yeah!\" Jasmine cries, spreading her legs and pulling them up higher. I take my time, savoring each drop of her tasty juice before flicking my tongue across her moist lips again. She's writhing on my bed, squirming her ass around and trying in vain to make contact with my tongue. I take my time, teasing her while I lick all around her inner and outer folds.\n\n\"Eat me... Tongueman,\" she pleads softly and I comply, pushing my tongue into her wet hole, licking up and down the length of her slit.\n\n\"Ohhhhhhhhh!\" she moans as I clamp my mouth over her wet pussy lips and lap hungrily at her dripping juices. Slowly tongue fucking her, I rock my head from side to side, letting the bridge of my nose lightly connect with her clit. She's bucking her ass off the bed, holding my head in both hands as she frantically grinds against my face. Licking to the top of her wet opening, I wrap my lips around her clit, and gently but rapidly suck on it while flicking my tongue lightly across its tip.\n\n\"Fuuuuuck!\" Jasmine screams as my tongue unexpectedly detonates her clit, blasting her orgasm through her loins like a hand grenade. Gushing love juice all over my chin, she shoves my mouth away from her sensitive clit as her body shakes and trembles. I lick at her steadily flowing juices before moving my body over hers and gliding my hard cock into her quivering tunnel.\n\n\"Oh yes!\" Jasmine murmurs, wrapping her arms and legs around me and squeezing me tightly against her. I leave my cock buried to its depth, not moving in or out, as our tongues entwine inside her mouth and I crush my lips against hers. Slowly, I start grinding my hips in a circular motion, squishing her pussy lips against the base of my cock and rubbing my pelvic bone against her clit. Jasmine's response is immediate and we lose ourselves in a slow sensuous dance as we try to merge our bodies into one.\n\nOh fuck! This isn't infatuation! This isn't just fucking! This is honest-to-God love making. My cock is moving of its own accord, pumping and churning inside her steamy cavern. Fueled by increasingly intense eruptions, her fiery pussy melts around my cock, engulfing and scorching me as our bodies undulate together. We never break the kiss, our tongues being a critical part of our libidinous dance. Our passions build higher and higher, reaching a torturous peak as our sweat-soaked bodies press together, writhing in harmony until we reach the summit.\n\n\"Oh God!\" Jasmine screams, breaking the kiss as her orgasm thunders through her body.\n\n\"I love you! I love you! I love yoooooooouuuuuuuuuuu!\" Jasmine howls, clawing my back as her body lurches uncontrollably, quenching her fervent longing by flooding her with pure unadulterated pleasure.\n\n\"And I love you!\" I say, through clenched teeth as my eruption joins hers and I empty my potent load into her flood of hot juices. Our bodies jerk against each other while we ride out wave after wave of breathless titillation. As our breathing slows, our mouths again find each other and our tongues entwine in an impassioned kiss.\n\nWhen the shockwaves finally subside, our exhausted bodies drift into a blissful sleep, wrapped in a cozy cocoon of warmth and love.\n\nAnd that would be the end of our story, with Jasmine and I living happily ever after except for the interesting epilogue that occurs a few months later. \n\nI'm working a day shift at the bookstore when Cynthia walks in just before I'm due to clock out. She stops directly in front of me and raises her eyebrows.\n\n\"Starbucks?\" she says, her tone indicating that it's not really a question. \"The latte's are on me.\" She turns and walks away. Regardless of how much grief she has caused us, my eyes are instinctively drawn to the undulation of her sexy ass cheeks as she struts towards the door. My cock twinges at the memory of my hands cupping those firm, round cheeks as I dug my nails into her flesh. \n\nFuck! What does she want now? Everything has been going so well with Jasmine. I'm even saving for a ring, although she doesn't know it yet. I can't imagine how Cyn could fuck up our lives now. I've spent so much time at Jasmine's house, getting to know her mom that I don't think Cyn can tell her anything that will make a difference now. \n\nI finish my shift and hurry over to Starbucks. It's my twenty-first birthday and Jasmine has promised me a surprise. I don't want to be late.\n\nIt feels like a time warp when I walk in and Cyn is sitting at the same table, looking as delectable as she did when we first met. I sit down, noticing her blouse is gaping the same way and her coffee colored cleavage is just as enticing. I adopt a defiant look, willing myself to stare at her face instead of her sexy tits.\n\n\"I owe you an apology, Mike,\" Cyn says, smiling broadly as she takes in my bravado. \"You were right and I was wrong,\" she adds, taking a sip of her drink.\n\nOkay, I wasn't expecting that. I pick up my drink to buy time to process what she's saying. A Caramel Machiato, she remembered and that more than anything causes me to return her smile.\n\n\"I over reacted and I should have let you and Jasmine find out if you were right for each other. It seemed like I was doing the right thing at the time. I just thought Jasmine was so young and I already knew first hand what you could do to a woman.\" Cyn leans forward and puts her hand over mine. \"You took me places, Mike...\" she stops abruptly and just leans back. \"Well anyway, you two seem to be doing very well together. I guess it wasn't just your bedroom manner,\" she laughs nervously.\n\n\"Have you told Jasmine?\" I ask. \n\n\"Yes,\" Cyn smiles. \"See, that being your first question is one of the things we all love about you, Mike. Jasmine told me the whole story about her refusal to date you because you are white and your willingness to continue the friendship even without sex. I was wrong, Mike. I'm sorry.\" \n\n\"Thank you,\" I answer.\n\n\"No, I should be thanking you,\" she sits forward and this time I let my eyes take in her considerable cleavage. \"I have my husband back,\" she whispers. \"We all do. Those videos allowed us to do what we should have done in the first place and that was confront them with the truth.\" She pauses to take another sip of her drink.\n\n\"That didn't work out so well for Barbara without the video,\" I respond.\n\n\"No, but with the video... well, you've never seen such accommodating husbands as we have now.\" Her hearty laughter is music to my ears and she doesn't seem to mind as I watch her tits bounce up and down. She leans forward and puts her hand over mine.\n\n\"I'm truly sorry, Mike, for all the trouble I caused you and Jasmine.\"\n\n\"Thanks, Cyn. This means a lot to me and I know it means a lot to Jasmine.\" I check the time on my phone. Jasmine will be waiting. \n\n\"I have to go, Cyn,\" I say, taking her hand. \"I'm meeting Jasmine.\"\n\n\"Your birthday, right?\" she asks. \n\n\"Yup, twenty-one!\" I announce. \n\n\"She won't mind if I buy you a real drink, just a quick one,\" she says, standing up and taking my hand. \n\n\"Well...\" I'm not sure I like where this might be going but I don't want to be rude to Jasmine's aunt now that she is back in our life. \n\n\"Come on,\" Cyn says, pulling me towards the door. \"A couple of minutes for your Aunt Cyn.\" She smiles mischievously. A couple of doors down is a sports bar and Cyn leads the way to a back table. Holy shit! Sitting there with drinks half finished are Shelly and Barbara.\n\n\"Surprise!\" they all yell as Cyn slips into the booth next to the other two. I stand there dumbfounded as the three laugh uproariously at my discomfort. The neglected black housewives in all their luscious glory are wishing me happy birthday.\n\n\"The neglected black housewives,\" I say, grinning from ear to ear.\n\n\"Except we are no longer neglected,\" Shelly says. \"Thanks to you,\" she adds, raising her glass.\n\nI could never cheat on Jasmine but as I take a chair across from them, my mind momentarily flashes on the foursome scene that Barbara had described to me months ago. I can vividly see Cyn and Shelly with their faces buried in each other's pussies while Barbara rides my cock and I play with her perfect tits. Shelly's massive breasts and unruly pubic hair contrast with Cyn's neatly trimmed bush and firm, high breasts. My cock stiffens when I focus on Barbara's designer pubic hair and long, dark nipples. \n\nBefore I conjure up any more images, a pair of hands clamps over my eyes. I catch a whiff of Jasmine's perfume just before she speaks.\n\n\"Guess who?\" she asks as she leans her head down. \"Don't even think about it,\" she whispers in my ear just before kissing my cheek and uncovering my eyes. \n\n\"I wasn't,\" I lie. She slides into the chair next to me and runs her hand up my thigh.\n\n\"You were,\" she laughs as she squeezes my hard cock.\n\n\"Okay, but I wouldn't have,\" I answer. \n\n\"I know,\" she says, kissing me on the lips. \n\n\"Hey, you two,\" Shelly cries. \"You know we can't have any of that, so quit teasing us.\" \n\nEveryone laughs and I order a round of drinks, adding a Sprite for Jasmine. We laugh and toast through several more rounds with increasing amounts of explicit sexual banter that is embarrassingly focused on my prowess with my tongue. \n\nI can't believe they're sitting here comparing the intensity of their orgasms induced by my tongue. My face is bright red and I want to just slip under the table, especially when Jasmine joins in with her affirmation of my skills and even discloses her Tongueman nickname for me amidst much nodding and laughter.\n\n\"I thought Aunt Cyn was exaggerating,\" she says with a sly smile. \"But um-huh, she was so right.\" Jasmine shakes her head as she grabs my arm possessively. \"And he's all mine,\" she announces adamantly.\n\nA casual observer might wonder what a young white guy was doing with these four gorgeous black women but I'm sure would never believe the incredible sex I've had with each of them.\n\n\"Here's to us housewives not being neglected anymore,\" Shelly adds to the end of one of my lengthy toasts about Jasmine and I. \"But, Mike, if this thing doesn't work out,\" she waves her hand between Jasmine and I. \"You know where to find us,\" she winks. \n\nMore laughter from everyone except Barbara who lifts her glass but smiles a little dejectedly. We clink glasses and Jasmine nudges me that it's time to go. \n\n\"We have some celebrating of our own to do,\" I say, pushing my chair back. \"Thank you all for a wonderful birthday!\" \n\nEveryone stands and give us hugs. Shelly squashes her heavy breasts into my chest and squeezes my ass cheek as she wishes me a happy birthday. Cyn kisses me on the cheek and whispers another apology that I dismiss with a wave of my hand. \n\n\"I have no regrets,\" I whisper in her ear.\n\n\"Me either except how I treated you and Jasmine,\" she smiles.\n\nFinally Barbara wraps her arms around my neck and stares longingly into my eyes, apparently looking for reciprocal feelings. I smile and she crushes her lips against mine in a hard, passionate kiss while she presses her body against me with an almost imperceptible grind against my hard cock. \n\n\"Happy birthday, Mike,\" she whispers, her hand lingering on my cheek. Before I can respond, Jasmine loops her arm through mine and we say our goodbyes.\n\n\"That was fun,\" I tell Jasmine as we walk back to the bookstore to get my car.\n\n\"I don't trust Barbara,\" she scowls.\n\n\"You don't have to,\" I answer. \"You just have to trust me.\"\n\n\"I do, Mike,\" she says, turning to walk backward in front of me. \"Take me home and unwrap your present,\" she says, indicating the buttons on her blouse.\n\n\"What are we waiting for?\" I ask, grabbing her hand and drag her laughing towards my car.\n\nAs you can imagine, it's the best birthday ever! "
    ],
    "authorname": "samslam",
    "tags": [
        "oral",
        "anal",
        "black teen female",
        "voyeurism",
        "three bm one wf",
        "black male",
        "white female",
        "black female",
        "white male"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/neglected-black-housewife-ch-03"
}