{
    "title": "Promises Pt. 12",
    "pages": [
        "This is a work of fiction. Names, characters, places and incidents are either products of the author's imagination or are used fictitiously. Any resemblance to actual events, locales or persons is entirely coincidental. All characters depicted in sexual situations are at least eighteen years old.\n\nAs always, any political, social or religious views in this story are those of the characters and their circumstances, and don't necessarily reflect those of the author.\n\n*****\n\nPART TWELVE -- Resolutions\n\n\"Are you okay, Peter?\" Kira asks. That's an incongruous question coming from her. She's the one chained to the bed.\n\n\"Yeah, I'm fine,\" I say, wiping my foul-tasting mouth with the back of my hand. So much for the wonderful breakfast Marsha cooked for us this morning.\n\nI turn to her. \"Let me go find the key to your restraints,\" I say.\n\n\"No, they probably have fingerprint evidence on them. I'm fine for now, and we've only got a few minutes before the cops arrive. You need to double check that there aren't any recordings, and then we've got to work on getting our stories synced.\"\n\nWow, she's right about all of that. We've got a lot to do, and a short time to do it. First, though, I recover my jacket and go to spread it over her.\n\n\"That might taint forensic evidence,\" she warns.\n\n\"True, but any man that didn't do at least that for a woman would seem so cold as to be suspicious himself.\"\n\n\"That's true,\" she admits. I cover her nudity.\n\nI do a quick but thorough search and find that a GoPro mounted on the ceiling really is the only recording device in the room. I examine it closely, but I'm careful not to touch it. It's the same model as a couple that I own myself, so I know how it works. Indeed, Spencer had forgotten to turn it on.\n\nThere have got to be at least a dozen police units visible in the four cameras by now. Kira and I can hear footsteps upstairs as we go over our story of how Spencer, despite being in my clutches, had managed to grab the knife off the bed. His foolish actions had, of course, necessitated the extreme action I had taken to protect a helpless Kitty Theresa Zwilling. I even act it out for Kira so that we'll have the same mental image of it. When we're sure we've got it, I stick my head out the door and yell for the police.\n\nWhen they arrive, guns drawn, they immediately have me assume the position against the outside of the room's wall. Then they frisk me and cuff my hands behind my back. I understand that it's procedure, but it irritates me to no end, especially since this position pulls at my bullet wound. With the adrenaline all used up, it's really starting to hurt now. I'm hustled out of the basement without being given the chance to talk to Kira again.\n\nAfter a quick ambulance ride to the hospital for an x-ray, some sterilization and a couple of stitches, I'm pronounced good to go. Yup, just a flesh wound. I refuse any painkillers beyond a couple of ibuprofen, knowing what's coming next and wanting to have an absolutely clear head. Indeed, the two cops, who haven't left my side the whole time, drive me downtown for questioning.\n\nI had warned Kira not to say a word about the kidnapping without a lawyer at her side, and I follow my own advice, much to the annoyance of the police and FBI, who are evidently involved because of the kidnapping aspect of the case. I use my proverbial one phone call to speak to Bob the Tame Patent Attorney, who says he knows a couple of lawyers that specialize in this kind of thing. I proceed to 'sit tight' and keep my mouth shut.\n\nWhen Raymond Shimizu, Attorney at Law, arrives, I begin to answer a million questions. Ray makes sure the interview is fair and to the point, and he insists on making his own recording of it. I answer their queries with complete candor, right up to the place in the story where Kira suggests that Spencer has a knife. From there, I follow our agreed upon script exactly.\n\nThe questions become more pointed after someone pulls up some sort of international database and finds that I crippled a Mexican national a year before under similar circumstances. They want to know about my training and just how I managed to get into the same situation twice.\n\nMy answer is an honest one. Teri Zwilling is of a size and look that tends to attract perverts interested in children. I've had to defend her twice. And no, I answer with the appropriate amount of indignation, that's not why I'm involved with her. My wife is six-foot-three, thank you very much.\n\nThen I have to explain how Teri lives with Anna and me, and about how our unconventional relationship works. Naturally, I'd rather not, but Kira and I have agreed that, other than that one little thing, we're telling the truth, though as little of it as we can get away with.\n\nI spend seven hours answering questions, but at last the investigators are satisfied. My story has evidently agreed exactly with the preliminary forensic analysis and what Kira has told them, so I'm free to leave. They warn me that I might be called back for further questioning, but they don't explicitly tell me not to leave town.\n\nMy phone is returned to me when I'm released, and I immediately call Kira. She's been home for a couple of hours and she tells me her own story.\n\nBy her account, the first thing the police did when they entered the room, guns drawn, was to pull my jacket off her to check for weapons. She felt it took an inordinate amount of time for them to decide it was safe to put the jacket back on her.\n\nAfter finally being released from her restraints with bolt cutters (the cops indeed hadn't wanted to use the keys, which would presumably have fingerprint evidence on them), Kira was taken by ambulance to a local hospital despite swearing up and down that she was perfectly fine.\n\nMy lawyer's associate did the same thing for Kira that he did for me, which ended up being a good thing, as her memories of her previous hours of being Teri were a bit fuzzy and coming back to her in a patchwork fashion. Her lawyer kept the investigators at bay until she was fully up to speed, though, and her story backed mine up perfectly.\n\nKira warns me that not long after she got home, the media descended on the house. The locals with their police scanners had caught on first, but the national media hadn't been far behind. She says it's a zoo outside the house now.\n\n\"I've called Anna and given her the rundown on what happened,\" she says. \"At least as much as I know about. We've all got questions about the rest of it.\"\n\n\"Well, I'll join you soon and we can talk about it.\"\n\nRay gives me a lift, discussing the kidnapping and rescue along the way. \"You can speak freely with me,\" he says, \"since I'm your attorney. I've gotta know; did he really grab the knife, or did you just end him? I'll tell you this for free; I would have put the miserable bastard down if I could have.\"\n\nThat's probably the only thing he's said to me that's not going to cost me a ridiculous amount of money.\n\nI give him a look that's suitably horrified. \"Ray, if he hadn't been holding the knife, it would have been murder.\"\n\nHe looks at me closely, trying to see if I'm on the up and up. I'm not, but my goal is to make him think I am. From his look, I can tell that I've succeeded. It's important to me, because any question about the circumstances of Spencer's demise could do very bad things to me and my family.\n\nWhen we turn the corner onto the Zwilling's street, we find that it's completely clogged. There are news vans scattered, klieg lights blazing, and correspondents, neighbors and sensation-seekers wandering all over the street. \"I'm not sure you'd make it through that alive,\" he says, pulling to a stop and shaking his head in wonder. \"I heard from my office that this case was getting a lot of media attention, but this...\"\n\n\"Maybe I could just mingle among them, then make a dash for the door.\"\n\n\"At seven feet tall? That little factoid is leading the accounts. They'd make you instantly, then eat you for breakfast. I've had clients get mobbed before, and it's not pretty.\"\n\n\"Then drive me around the block. I think I may have an idea.\"\n\nHe shrugs and whips a U-turn, then hangs a right to take us one street over. Meanwhile, I contort myself to pull out my phone and start looking at some very familiar video footage.\n\nDigital storage has gotten so plentiful on mobile devices that I didn't edit down the three-minute segment of the drone footage of Teri's greenhouse before I downloaded it to my phone. It comes in handy now as I get a good look at the surrounding area. Yeah, that looks promising.\n\nWe've now taken a couple of right turns. \"You can drop me off here,\" I say.\n\n\"You're not going to get yourself in trouble by trespassing, are you?\"\n\n\"Of course not, Ray. I'm just going to take a stroll around the block. Sitting on that hard chair at the station for so long made me a little stir-crazy, so I'm gonna walk it off. You, uh, might want to take off as soon as I get out, though.\"\n\n\"Plausible deniability, eh?\"\n\n\"Something like that.\" I shake his hand. \"Thanks for your help, Ray. You were great.\"\n\n\"Damn straight I was. Keep that in mind when you get my bill.\"\n\nI laugh and hop out while he hustles to get out of eyewitness range. I walk down the sidewalk, passing three houses, then turn and walk up a driveway that goes to a detached garage in the backyard of a small Colonial. I'm moving confidently, as if I own the place.\n\nAccording to the drone footage, this is the only house on this side of the block with no fence between the front and back yards, and there's about a three-foot gap between the garage and the tall fence at the back. And right in that corner, this fence overlaps with the Zwilling's back fence for about five feet.\n\nI never got my jacket back from the police (it will probably be in the evidence locker until they sell it in a police auction twenty years from now) and I can feel the chill from the sub-freezing cold begin to sink in. Not a big deal, though, as I plan to be back indoors quickly.\n\nMy luck seems to hold, and it doesn't appear that I've caught anyone's attention as I round the corner of the garage and slip into the gap behind. Then I suddenly find that I'm not the only one to think of this method of approaching the house.\n\n\"I wouldn't advise that,\" I say to the guy with the big camera, about to climb the fence.\n\n\"Beat it,\" he says. \"I figured this angle first.\"\n\n\"Kudos, but you don't want to go over that fence.\"\n\n\"Really? Don't even try to tell me you weren't about to do the same.\"\n\n\"Wouldn't even try, but trust me, you don't want to go over that fence.\"\n\n\"I'll take my chances.\"\n\nI shrug. \"It's your funeral.\"\n\nThe horizontal framing for the eight-foot-tall fence is on this side, so he manages to clamber up to the top without too much difficulty. He throws a leg over the top, then lowers himself down and drops the last few inches to the ground.\n\nI hear the expected snarl.\n\n\"Shit!\" he yells, and I see fingertips grabbing the top of the fence. There's a mad scramble as his feet try to push him up over the top, but there are no horizontal components on that side of the fence. He evidently doesn't have the upper body strength to get himself out of harm's way. Then the dog arrives, and his fingers disappear. I hear the thud as he falls flat to the ground. I'd probably best intervene now.\n\nI ignore the pain in my side and vault the fence in one motion, jumping, pulling, lifting, then dropping. I land right next to them.\n\n\"Sitz!\" I say firmly. Freida reluctantly lets go of the guy's leg and sits, as commanded. The Zwilling's have used the German Training System to train their German Shepard, which makes sense, I guess. In any case, Freida and I have gotten over our old animosity and become good friends over the course of the last five days. I've never had a dog, but I've been thinking that I may get a couple to keep an eye on the compound, once we get back to Florida.\n\n\"Gut,\" I tell her, using the German accent that makes it sound like \"goot,\" and she practically smiles at the praise.\n\nThe reporter is holding onto his leg, but he looks up at me. Way up. \"Hey, wait,\" he exclaims. \"You're Malakhov!\"\n\n\"Shh,\" I say, holding a finger to my lips. \"Don't tell those guys out front.\"\n\n\"Why are you goin' over the fence if you belong here.\"\n\n\"Because of the guys out front,\" I say patiently. That should be completely obvious.\n\n\"Oh. Yeah. But hey, can I ask you some questions about what happened today?\"\n\n\"No. You're trespassing. You need to leave right now.\" I do kind of admire his dedication to the job, though.\n\n\"Oh, come on, just a couple?\"\n\n\"I do know the German word for 'attack'.\"\n\nHe looks over at the dog, like he's thinking about risking it by asking a third time. \"Also,\" I add, \"the Zwilling's have good lawyers and they're not afraid to use them.\"\n\n\"Well, in that case...\" He gets to his feet, favoring his left ankle. I can sympathize. Freida's bite is worse than her bark.\n\n\"If I were you, I wouldn't mention where you got those puncture wounds,\" I say. \"You were warned.\"\n\n\"Say no more.\" He jumps up high enough to grip the top of the fence, then resumes his scrambling. It's not going any better this time and it's agitating the dog, so I step up and give him a boost. He clears the top in good order, but evidently loses his grip as he climbs down the other side. I hear a thud as he falls against the side of the garage. It must not have been too bad, though, because I can hear him limping away.\n\nI turn to the faithful canine and praise her, scratching the inevitable itchy spots behind her ears, but then I catch motion out of the corner of my eye. I straighten just in time to catch Kira full across the chest. She plants a big, wet kiss on my cheek. \"My big, brave, lovable hero!\" she exclaims without the slightest hint of irony.\n\n\"Hey, you're my hero,\" I say, laying my own wet one on her smooth little cheek. \"I would have died if you hadn't been so incredibly brave and resourceful.\"\n\nAfter that, I just hold her for a while, so incredibly relieved that she's somehow survived this. Oh God, I've missed holding her. What wouldn't I give if she could be like this all the time?\n\nThen I see Marsha, silhouetted in the open back door. I gently transfer Kira to her familiar (to me anyway) position in the crook of my arm. She stiffens for just a moment, then seems to recover the body-memory of it and relaxes.\n\n\"Hmm, I see why I seem to like this,\" she murmurs.\n\n\"I never get tired of it,\" I say.\n\nMarsha gives me an actual hug as we arrive at the door. \"Thank you, Peter,\" she says. \"Teri, uh, Kira, told us what happened when you found her.\" She suddenly turns her head away, overcome with emotion. I'm about to say something, but Kira gives me a look that says to be patient.\n\nMarsha eventually recovers and turns back to us. \"I have to apologize to you for how I felt about you before. I mean, first you take my daughter far away from home and introduce her to... well...\" She straightens. \"And when you kept trying to talk to her later, I could only assume it was for selfish reasons. Later, after she left, and despite everything Teri told us about how well you were treating her in Florida, I worried so much that you thought of her as some sort of play toy.\n\n\"But now, hearing what you were willing to do to save her life, well, I know that you really do care for her and will treat her the way she should be treated.\"\n\nThere are tears streaming down her face. \"I hope you guys, all three, I mean five of you, come to visit us sometime.\"\n\nAs always, I have to calculate what the proper response to that is, but my sentiments are heart-felt. \"Your daughter means the world to Anna and me, and we would do anything for her. And you're just as welcome to come visit us.\"\n\nI put Kira down and Marsha leads the way to the living room. To my surprise, Carl is dressed and sitting in one of the more upright chairs in the room. With the nurse and Marsha spotting him, he gets to his feet.\n\nI walk over and he extends his hand. I take it, and he gives mine a healthy squeeze. \"That was a fine piece of work today, Peter,\" he says. \"You did well.\"\n\nI read him as perfectly sincere, yet there's an undercurrent of resentment in his tone and body language. Objectively, I can understand it. He feels that it's his job to keep his daughter safe, yet on three separate occasions she was kidnapped and abused for extended periods of time, and he hadn't been able to stop it.\n\nNow, with this interloper in her life, she is rescued, and her abductor eliminated forever, all within minutes of her kidnapping. It's got to be tough on his pride. Yet here he is, making the effort to meet me on his feet and thank me man-to-man. I respect that immensely.\n\n\"Sir,\" I say, looking him in the eye, \"it was only due to some truly providential circumstances that I happened to have the pieces of the puzzle of how to find her. As for the rest, I have no doubt you'd have done at least as much as I did.\"\n\n\"I would do anything for my daughter.\"\n\n\"I know.\" I mean that.\n\nHe carefully sits back down in his chair, and Marsha takes the one next to his. Kira and I take to the couch. At first she sits down at a polite distance from me but then appears to reconsider, scooting over until she's right up against my side. I put my arm around her and she snuggles up even closer. I remind myself that she has no actual memory of snuggling with me before. She's working hard at this.\n\nMarsha is watching with interest. Seeing her twenty-four-year-old daughter interacting with a man is a totally new thing for her. She looks up at me. \"So how exactly did you find her?\"\n\n\"Well, it was because of what you said.\"\n\n\"Huh?\"\n\nSo I explain the chain of logic that had started with my seeing Bethany's old house.\n\n\"I don't know that I would have made that connection,\" Carl says.\n\n\"It wasn't any great feat of deduction on my part,\" I say. \"I was just lucky enough to have both pieces of the puzzle.\"\n\nThen, at their urging, I tell them the story of how I found the dungeon, downplaying the role of my mental map and implying that the door into Spencer's little house of horrors had been a bit more obvious than it actually was. They knew the story from there, having debriefed their daughter.\n\n\"Well, it all worked out in the end,\" Marsha says.\n\n\"It sure did, but I think it's time they should be going,\" Carl says.\n\n\"What?\" Marsha's obviously not too happy with that idea.\n\n\"Our daughter is having one of her episodes,\" he explains to her. \"The time she spends as 'Kira' is extraordinarily important to Peter and Anna, if you know what I mean.\"\n\nMarsha blushes. Yeah, she knows what he means.\n\n\"I think we need to send these two home to Florida as soon as possible. They can come visit us some other time. Besides, if we don't get rid of those damn reporters, I won't have a lawn this summer.\"\n\nI smile and Kira snorts, but he's right. We need to get moving.\n\nKira and I go to her room to discuss our next move. We talk about the idea of flying home to save time, but it would be almost impossible for a couple as distinctive as we are to travel unrecognized, what with our pictures being on every national media outlet. It's going to be the motorhome then. The fun part is going to be getting there without leading the wolves to it.\n\nI load our luggage and Kira's boxes into Marsha's minivan in the garage and Kira kisses her parents goodbye. Then I take a deep breath, hit the garage door opener button, and back us down the steep driveway through the throng. I go slow enough that any correspondents who get injured will have only themselves to blame. By design, the newshounds get a good look at our faces, their cameras' flashes nearly blinding. Then we lead them on a merry chase through Minneapolis.",
        "* * * * *\n\n\"They're still tailing us,\" Kira calls out from the passenger seat.\n\n\"Damn, these guys stick like glue,\" I grumble.\n\nMy training as a field operative is limited to what I've read in Tom Clancy novels. Breaking a tail is a lot more difficult than you might think, especially when you're dealing with a national media that chase down stories on a regular basis. The press has been dogging us for the last twenty minutes.\n\nThen, up ahead, I spot what looks to be our perfect opportunity. We're leading the pack down the right lane of a four-lane city street, and the light is turning red ahead of us. The timing is good, and the traffic light is just the kind we need.\n\nThe sedan in the left lane, about a car length ahead of us, is slowing down at the normal rate, so at the last second, I gun it and whip in front of him, ending up at the head of the line waiting in the left lane. The aggrieved driver beeps his horn in protest of my rudeness, but that's the least of our issues. I give him a friendly wave, and he lays off the horn.\n\n\"Why did you do that?\" Kira asks.\n\n\"Just watch.\"\n\nI put my left foot on the brake, and ease into the gas pedal a little with my right, keeping us stationary but ready. I watch for cross traffic to make sure we can do this safely, and when the light turns green, I floor it.\n\nMarsha's minivan has a V6 with a reasonable amount of jump off the line, and I use all of it to hang a left in front of the oncoming traffic, which is just now setting off on their green light. More horns blare, but my quick start gets us through the intersection without getting hit. I hold the pedal to the floor as we race away, our pursuers unable to make their own left turn due to the oncoming traffic, which is heavy and up to speed now.\n\nAfter a couple of blocks, I turn off the main drag and drive through some side streets to finish losing our tail. Amazingly, it seems to work, so I head for the RV storage facility. A late-model silver minivan is about as anonymous as you're going to get, and nobody else tails us for the rest of the drive. Twenty minutes later I punch in our code at the gate.\n\nI park us next to the motorhome and transfer the boxes and luggage. I lock the minivan and put its key in the little magnetic box inside the fender, then we're off and running. The prearranged plan is for Marsha to send some friends to recover her vehicle tomorrow.\n\nAfter thirty nerve wracking minutes, during which I imagine half a dozen different scenarios by which the media might figure out what we're driving, we make it out of town and onto the rural interstate. We motor south, into the night.\n\n* * * * *\n\nKira and I stop in southern Wisconsin at about one in the morning so we can get some sleep. She settles down next to me in the bed, wearing her long pajamas and chastely spooning herself to my chest. I'm painfully aware that for all practical purposes, she's a virgin again. Still, she takes my hand and guides it inside her pajama top to cup her little breast. Neither of us moves to do anything more intimate than that, but it's good, and we're fast asleep quickly. We're back on the road before dawn, though, planning on driving straight through to Homestead.\n\n* * * * *\n\n\"I wish I knew how to drive,\" Kira says as we roll down I-57 through central Illinois.\n\n\"Have you ever driven at all?\"\n\n\"Well, I was working on getting my license the first time I got kidnapped, but I was way too scared to drive after that. Maybe once Teri hears that she's safe, she'll be willing to learn.\"\n\n\"I have high hopes that she'll be willing to try a lot of new things,\" I say. \"Dr. Jenson told me that if the threat was removed permanently, she might be able to overcome more of her fear.\"\n\n\"The more I think about it, the more I wish she'd been there to see you kill Spencer,\" Kira says. \"It would be a lot more real to her than just hearing about it.\" She pulls out her phone and puts it into selfie position. \"I'm going to start making recordings for her, starting with a very graphic description of how it went down in the dungeon.\" She proceeds to do that, diverging from the truth only in saying that Spencer had reacquired the knife.\n\n* * * * *\n\nWe're in central Florida when it happens. \"I think I'd better go to the bedroom,\" Kira says, shaking her head as if to clear it.\n\n\"Hey, what's wrong?\"\n\n\"I'm not sure. I'm really confused suddenly, and I need to be alone.\"\n\nShe unbuckles and heads for the back while I get us pulled over on a wide spot on the shoulder. I go to the bedroom door. \"Teri, are you all right?\" I have to assume she's Teri now.\n\nThere's a long pause, then the timid voice that tells me my assumption is correct. Happily, there's no wailing and tears this time. \"The last thing I remember was being stuffed in a box and smelling sevoflurane,\" she says hesitantly. \"Now I find myself in the motorhome, none the worse for wear. What happened?\"\n\n\"You were kidnapped, by the same guy of course. This time, though, you were rescued almost immediately. You transitioned while you were unconscious in the wooden box, then you were Kira for a day.\"\n\n\"Only a day?\"\n\n\"Yeah.\"\n\nThere's a long pause. \"Oh, poor Kira,\" Teri moans, \"she had so little time.\"\n\n\"She made the most of it, Teri. Her bravery and self-control saved my life, and probably yours too.\"\n\n\"Really? Tell me what happened.\"\n\nI patiently step her through the events of yesterday, from my realization that she was missing, to getting the information from the witnesses, to seeing the Kozlowski house and finally putting two and two together.\n\n\"Oh my God,\" she gasps, \"it was Spencer? He was, like, five years older than Bethany and I only met him a few times.\" She's quiet for a few seconds. \"So how did Kira save your life?\"\n\nI explain the negotiations between Spencer and myself. I've had enough practice by now to get good at it.\n\n\"You wouldn't actually have pulled the trigger, though, would you?\"\n\n\"Of course I would have. It was the only way. That is, until you... I mean, Kira, bit him.\"\n\n\"She did what?\"\n\nI do some more explaining. \"I still don't know how she was able to fake being unconscious the whole time,\" I finish. \"She did an amazing job.\"\n\n\"What happened after she bit him?\"\n\nI explain it to her exactly the way I did to the police, leaving out only our decision to kill Spencer in cold blood. I'm now the only one on earth who knows about that. I'm still torn on whether to tell Anna. I want to be honest with my beloved wife, but I don't see how burdening her with my actions has any benefit for us. And there was the promise I made to Kira never to tell...\n\n\"Spencer's dead?\" Teri's voice is one measure sad and one measure hopeful.\n\n\"Yeah, he is. I wish I hadn't had to kill him,\" I say, which is true only in the sense that I wish he had never hurt Teri/Kira, necessitating my actions. I have zero guilt over the act itself.\n\n\"I'm sad for Bethany,\" Teri says. \"Spencer was the only immediate family she had left.\"\n\nI make no comment on Bethany. I guess I'm sad for her too, but I'm not happy that it took me to figure the puzzle out. For three years she'd known that Teri was missing at the exact same times that her brother was home alone. I'm not sure what to make of that, but I don't have any intention of digging into it. Best to leave sleeping dogs lie.\n\n\"By the way,\" I say instead, \"Kira made a video for you a little while ago. It's on your phone.\"\n\n\"I'll watch it. Thank you for saving me, Peter,\" she says softly.\n\n\"It was what I promised, Teri.\"\n\nI go back to the driver's seat and resume our southward trek.\n\nAs I drive, I think about Kira's latest visit. Indeed, the poor girl had had so little time. Sure, her body has gone on, and it's only a day's worth of memories that have been lost, but to her, it was everything.\n\nFor the thousandth time, I try to imagine how I would feel, knowing that the person I was today was going to be wiped away, only to be replaced by the person I was yesterday. How is losing our current memories any different than death? And to know it's coming? I don't know that I could be as brave as Kira. Any Kira.\n\nEventually, I call Anna and give her the latest update. We've talked half a dozen times since last night.\n\n\"Do you think she's going to be okay?\" she asks, her deep concern obvious.\n\n\"So far so good. This was the smoothest transition I've seen her make from Kira to Teri. I think Dr. Jenson was onto something when he told me that her abductor's death could change things for her.\"\n\n\"I hope that's what's going on,\" she says.\n\n\"So Anna, how are you doing?\"\n\n\"Oh, our kids have been kicking me all day. We've definitely got a couple of punters on our hands.\"\n\nI long to be with her. \"Anna, I can't wait to get home to you,\" I tell her simply.\n\n\"And I want you here with me. Give me a call when you get close. I love you, Peter.\"\n\n\"I love you too, Anna.\"\n\n* * * * *\n\nA couple of hours after her transition, Teri timidly opens the bedroom door and peeks out. Then she makes her way to the passenger seat. It's got to help that the motorhome is familiar territory for her.\n\n\"How are you feeling?\" I'm tentatively encouraged by her quick progress. She's done in two hours what took her two weeks the last time.\n\n\"Well, I wasn't expecting to leave the bedroom for a long time, but I watched the video. That really helped.\"\n\n\"Just what I was thinking,\" I say. \"In four or five hours we'll be home and be with Anna again.\"\n\n\"Home,\" she says, then smiles. \"I guess it really does feel like home now.\"\n\n* * * * *\n\nI call Anna when we enter the greater Miami area. The sound of my voice wakes Teri, who's been curled up in the passenger seat, snoring lightly. As soon as I get off the phone, she starts texting back and forth with Anna.\n\nThe last few miles seem to take forever, but I hit the remote to open the gate just before ten o'clock. Teri is good with us parking in the circle drive in front of the house for now, rather than my opening gates and parking in the comforting safety of the backyard. We don't bother with luggage or anything, just getting out and walking toward the front door.\n\nTeri surprises me by giving me the signal that she'd like me to pick her up. Teri has always shied away from even incidental physical contact with me, but I don't hesitate, gingerly scooping her up and sitting her into the crook of my arm. The feel of her lissome body against mine is wonderful. I like these changes in Teri.\n\nAnna is waiting for us at the door, wearing a flowing robe that does little to disguise that she's really, really pregnant. I nearly melt. She's never looked more beautiful to me. Her eyes widen a little at seeing that I'm carrying Teri. She hugs the both of us as best she can with the kids in the way. I get a very nice kiss on the lips, then Teri gets a quick peck on the cheek, which she returns to Anna.\n\n\"You guys must be exhausted,\" Anna says.\n\n\"It was a long drive,\" I admit.\n\n\"Didn't seem that long to me,\" Teri says with an impish grin.\n\n\"Yeah,\" I chuckle, \"because you were only there for the last few hours of it.\"\n\nAnna smiles and rolls her eyes. \"My mom just headed over to the guesthouse for the night,\" she says. \"She wanted us to have some privacy, but she stuck something in the oven before she left. Anyone interested in a late-night snack?\"\n\n\"I'm always up for that,\" I say.\n\n\"Me too,\" Teri adds.\n\nWe head for the kitchen just as a timer dings, and Anna pulls some hot, gooey brownies from the oven. They smell heavenly. I snag a carton of Death by Chocolate and the three of us dive in. Ah, the simple pleasures in life.\n\nAs we indulge, we all get caught up on the events of the week. Anna's got questions about the kidnapping and rescue. Teri and I get to hear about Anna's adventures with her prenatal checkups. (Everything is still going well.) I like her stories a lot better.\n\nAt last our spoons have scraped the last little bit of brownie and ice cream from our bowls. Teri yawns, and the contagion spreads to Anna and me.\n\n\"Look,\" I say sheepishly, \"why don't you two head off to your beds. I'm going to put the motorhome back in its spot and check the security systems.\" I look at my lovely wife. \"I'll join you in about twenty minutes.\"\n\nThen Teri pipes up. \"Peter, would you mind if I tried sleeping with you guys tonight?\"\n\nEven with how much better Teri's been doing, that catches me by surprise, but from the look on Anna's face, this was probably something she and Teri talked about when they were texting earlier. Her expression mirrors Teri's question. Mine must be displaying my surprise and delight.\n\n\"Teri,\" I say, \"our home is your home, and you're always welcome in our bed.\" Both girls smile at my response. Like I ever would have said anything else.\n\nIt only takes a few minutes to get the motorhome parked where it belongs and to carry in our suitcases. The boxes of Teri's stuff can wait until morning.\n\nAfter that, I go to the Security room and scroll through the surveillance logs, making sure that nothing untoward has happened in my absence. It all looks good, but first thing tomorrow I'm going to call in the big guns and have them figure out just how Spencer was able to hack us. I turn out the lights and head for the bedroom.\n\nAnna and Teri are already under a sheet in bed when I arrive, chatting animatedly. I slip into the bathroom. While I'm showering, I debate what to wear to bed. My usual sleeping attire is obviously out of the question, but I really don't feel like digging out the long pajamas I wore the first night in Mexico. Do I even still have those? Looks like it's going to be boxers and a T-shirt.\n\nTen minutes later, when I come out of the bathroom, the room is lit only with our small red nightlight. Teri has her long brunette hair spilling out across her pillow, looking so much like Kira that it hurts. She's in the middle of the bed, with Anna next to her. My wife's eyes are closed and I can't tell if she's already asleep. I slide under the covers on my side as smoothly as I can, not wanting to wake her.\n\n\"Goodnight, girls,\" I whisper.\n\n\"Goodnight,\" they both whisper back.\n\n\"Peter,\" Teri murmurs, \"would you hold me?\"\n\n\"Of course,\" I say smoothly, as if anything that's happened since Teri woke has been par for the course. I scoot toward the middle, but when my fingertips brush across her hip, I get a surprise. I reflexively withdraw my hand. Teri's nude.\n\nI stop scooting. She's close enough that I can feel the heat from her little body, but we aren't touching. \"Wow,\" I murmur.\n\n\"I always told you guys I would try to be brave,\" she says. \"It's still not easy, but knowing for sure that I'm safe really helps. Now I can talk myself into doing things I would never have done before.\"\n\nAnna scoots closer to Teri and me. \"That's wonderful,\" she says, \"but we don't want you to push yourself beyond your comfort limits.\"\n\n\"But if I don't push,\" she says, \"I won't make progress. Trust me, I'm only going to do things I think I can handle, and that I really want to do.\"\n\n\"Okay,\" I murmur, placing my hand on the warm, smooth skin of her hip. I start to scoot closer, but then she speaks again.\n\n\"Peter, I know you don't usually sleep with your clothes on. It's okay with me if you want to take them off.\"\n\n\"Thanks,\" I say simply, now beyond surprise at Teri's novel actions. As smoothly as I can under the circumstances, I remove my shirt and boxers, leaving them on the bed behind me. Before I can move closer, Teri wiggles and snuggles up against me. I wrap my arm around her just as if she's Kira, then take a calculated risk by cupping her little breast. She stiffens for a long moment, but then relaxes.\n\n\"Is this okay?\" I ask belatedly. Forgiveness is always easier than permission.\n\n\"Yeah, it actually feels really good.\"\n\nI realize now that my manhood has hardened and it's pressing firmly into her ass crack. That's got to be a little more than she wants.\n\nSure enough, and before I can scoot away, I feel her reach down behind herself. Part of me thinks she's going to push my hips away from her, but instead, she takes me in her hand. I feel her lift her upper leg, then guide me into the triangle between her crotch and thighs. She closes her legs, encasing all but the tip of me in her warm flesh.\n\n\"Peter, Anna,\" Teri says, \"I love you guys more than I can say. Will you make love to me?\"\n\n\"Do you think you're ready for that?\" Anna asks.\n\n\"I want to see what's possible, that is, if you want to.\"\n\n\"Of course we do,\" I say, \"but we don't want to rush you. You're still a virgin.\"\n\n\"And I'm ready to stop being a virgin. Being here with you and Anna is the perfect time for that to happen.\"\n\n\"Okay then,\" I say softly. \"Did you have anything specific in mind, or do you want to just play this by ear?\"\n\n\"I don't want us to shift at all. I love being held safe in your arms. This is how I want it to be, if we can do it this way.\"\n\n\"Sure, this will work just fine.\"\n\nI begin to lightly stroke Teri's breast, thinking through what she might like as foreplay.\n\n\"Peter, I know you're really good at that kind of stuff,\" Teri says, \"but this time I just really need to feel you moving down there.\"\n\n\"Are you ready for that?\"\n\n\"Ever since I felt you press it up against me. Please, it's just what I need right now.\"\n\n\"Okay.\" I'm willing to play this however she wants. \"We can do that.\"\n\nNaturally, Anna knows exactly what to do. She reaches into the drawer of her nightstand and retrieves the tube of slippery stuff. Then she pulls the top sheet down below our hips. Guiding Teri to raise her leg momentarily, she gently coats my manhood, stroking me to make sure there's enough and that it's evenly spread, and then does the same to Teri's inner thighs and taint.\n\nTeri lowers her leg, squeezing me tight, and I slowly begin to slide back and forth between her thighs. She shivers, then I shiver. This feels really good.\n\nAnna turns onto her side to face us. Her obstetrician told her a couple of months ago to refrain from sexual activity. Anna was circumspect enough not to mention that she hadn't been sexually active since the week she conceived. Still, while Anna won't be getting wild and wooly, I have faith that she'll be a big part of our lovemaking.\n\nSure enough, Teri scrunches a little to put her ear to Anna's belly. Seeing this, I hold onto Teri and slide us down the bed so that her head is centered there. Teri wraps her arms around Anna's waist. She clings tight, drawing Anna to us.\n\nI don't say another word, just gently thrusting.\n\n\"Oh my God,\" Teri murmurs. \"This is so amazing.\"\n\n\"It is amazing, Teri. I love being with you, and you're not a virgin anymore,\" I whisper.\n\n\"Does it feel as good as the time you came in the shower, sliding between my thighs?\"\n\nI'm about to demur on that question, not knowing if it might be possible that Teri and Kira could be jealous of each other, but then it hits me. I come to a stop.\n\n\"How did you know about that, Teri? I've never mentioned it to anyone, and there's no recording of it.\" It also hasn't escaped me that Teri said, \"my thighs,\" not \"Kira's thighs.\"\n\nShe's silent for a long moment. \"Peter, I've been having little, uh, I don't know if I would call them flashbacks, or memories of dreams or what, but since this afternoon I think I've been sensing things that happened to Kira.\n\n\"Just now, when you started thrusting, it was like a kaleidoscope of images came flooding into my mind. It's swirling around in there, totally out of my control. I'm seeing scenes that I recognize from the recordings, but from a whole new perspective. There's also a lot of other stuff. Things that weren't in the recordings.\"",
        "\"Like what kind of things, Teri?\" Anna asks, mirroring my concern.\n\n\"Well, I remember being upside down, then a naked woman with black hair was throwing a coconut. It was, like, in a jungle or something.\"\n\nAgain, this is something that I haven't ever talked about, mostly because it was so strange and unlikely. \"That really happened, Teri,\" I say. \"Gabriela was the woman. She was throwing a coconut at Raul.\"\n\n\"And I was naked too,\" she continues. \"And you were there. And you had been holding me upside down while we... Oh, Jesus, we were having sex in the jungle behind the bungalow...\" She stops talking.\n\n\"Are you okay, Teri?\" She sounds almost lost.\n\n\"I don't know. Just make love to me, Peter. Please, just make love to me.\"\n\nNot knowing what else to do, I begin to slide back and forth between her thighs. She's moving oddly, flinching and twisting.\n\n\"Teri, are you all right?\" I ask yet again, now quite concerned.\n\n\"Please don't stop, Peter,\" she gasps, her voice distant, like from a thousand miles away. \"Whatever you do, don't stop.\" She buries her face in Anna's belly while Anna strokes her head.\n\nAnna's breast brushes against my face and I instinctively take her nipple into my mouth, suckling strongly. Anna lets out a low moan and begins to run the fingers of her other hand through my hair. All the while, Teri is moving strangely and making odd noises.\n\nThere's obviously a lot more going on here than sex. What that something is, I don't know, but what I do know is that I need to do as Teri has asked. I can't stop, but I don't know how long she will need me to keep going, so I concentrate on not letting myself get overly aroused. I just keep up a smooth steady pace as Teri apparently deals with whatever it is she's going through.\n\nTeri sometimes calls out in a strained voice, sometimes she shudders and almost grunts, at other times she reaches out like she's trying to grasp something, though her eyes are closed. Once, she screams, almost as if in horror, but I honor her request and keep moving, smoothly and steadily.\n\nI don't know exactly how this is going to turn out, but there's a good chance that it could get messy. I surreptitiously recover my T-shirt from behind me and spread it in front of Teri's hip.\n\nI can't see a clock from where we are, but eventually I can sense that this may be the longest that I've ever continuously made love with a woman. Teri's odd movements and sounds are starting to fade though. Suddenly she sighs, and then she's moving with me, meeting my thrusts. I take that as my cue to reach down between her legs and begin to rub her clit in the way that Kira loved.\n\n\"Oh God, yes, Peter,\" she moans. \"That's what I need. I need to come with you.\"\n\nI take that as my cue, and I stop controlling my state, letting the intense physical sensations take my body where they will. After such a long time of holding myself back, it doesn't take long.\n\n\"I'm about to come, Teri,\" I murmur. \"Come with me?\"\n\nHer response is a low, guttural moan. I feel her start to shake and spasm in a much more familiar way than she was doing before, but it's more intense than I've ever felt with Kira. Teri explodes with her orgasm.\n\nI hold her to me as she shakes. My semen shoots, almost seeming to burn my cock inside with its incredible heat. I'm shaking with intense release. Whatever it is that Teri's been going through, it seems to have bled over to me.\n\nEventually, we both regain some semblance of normality. \"Teri, are you okay?\" Anna asks.\n\nTeri releases her grip on Anna's waist and turns her head so that the side of her face is lightly resting against Anna's belly.\n\n\"Yeah, I think so,\" she pants.\n\n\"What happened?\"\n\n\"The memories were flooding back into me so fast that it was like drinking from a firehose. I was afraid I was going to be lost forever, somewhere inside of myself, as these intense visions swirled around and around. I was scared that I wouldn't know who I was when it was through, but with both of you here with me, I had an anchor.\"\n\n\"How do you mean?\" I ask. This is Twilight Zone stuff.\n\n\"Well, with having you stroking my most intimate and sensitive places, providing an intense sensation that I could bear down on, I was able to keep my bearings. And clinging tight to Anna while feeling the twins kick against my face, well, it kept reminding me that my place is here, with you guys. That I should return to you. Thank you, both of you, for being so amazing to me. You got me through this.\"\n\nWow, that's a lot to take in. \"What do you remember now, Teri?\"\n\nI nearly gasp as she slides her hips away from mine. The air cools my wet cock as it's exposed. Then she turns and motions for me to roll onto my back. I do, and she sprawls across me, not moving. Her ankles are hooked across my thighs and her head is on my chest. This is exactly the position that Kira likes to sleep in.\n\nAnna quickly wads up my T-shirt, which has miraculously caught all of my semen, and sets it on her nightstand. She snags my boxers and makes quick work of cleaning us up, then scoots into our favorite position, wrapping her arm around us. Now we're complete.\n\n\"What I know,\" Teri says to both of us, \"is that the barrier between 'Teri' and 'Kira' has broken down. I'll be a while sorting it out and putting it all in place, but I think it's all there. Kira and Maya died many times, but now they're resurrected in me. I have their thoughts, dreams and memories, and now they can all go on.\"\n\nThis is almost sounding religious, like something from when my mom took me to Russian Orthodox services back when I was a kid.\n\nI say so.\n\n\"No, it's not like that,\" she says, \"and it's not like I have multiple people living within me. It's just that now I remember everything that happened to me, as Teri, Maya and Kira. And the fear is gone too. Now I think I can live my life however I see fit without the dread that I'm suddenly going to change and become someone else.\"\n\nShe looks up at me with a happy smile, but then sees the concern on my face.\n\n\"Wait, Peter, don't worry. I'm not going anywhere. I love you guys and I'll always be here with you if you'll have me.\"\n\n\"Of course we will,\" Anna and I reply in unison, as we so often do. \"You're the glue that holds us all together,\" Anna elaborates.\n\n\"So true,\" I agree.\n\nBut then a thought hits me, and I just go ahead and blurt it out. \"Teri, what do you remember about Spencer's death?\"\n\nShe looks at me, then her eyes flicker at Anna for the barest moment. I nod.\n\n\"You killed him,\" she murmurs, barely loud enough to be audible a foot away. No microphone will pick this up. \"You had him wrapped up tight to where he couldn't even move, but didn't finish him because you didn't think I could handle seeing that. But then I said I wanted you to do it. You did it for me, Peter.\"\n\nAnna's eyes are huge as she looks back and forth between us. I'm starting to think that my question may not have been a good idea.\n\n\"If he hadn't done it,\" Teri says to her, \"I would be huddling in my bedroom right now, scared of my own shadow, just knowing that he'd escape and come find me again.\"\n\nAnna seems lost in thought for a minute, maybe two. Teri and I wait with bated breath.\n\n\"Look,\" she whispers at last, \"I don't like the idea of murder, especially of someone who never actually killed anyone, but all legal bullshit aside, he had it coming. Peter, knowing me, I would have tried to stop you if I'd been there, so I think it's a good thing I wasn't. You did the right thing, both of you.\"\n\nI'm flooded with relief, and I can see that Teri is as well. \"I'll always do whatever it takes to protect either of my favorite ladies,\" I say.\n\n\"And I'll always do whatever it takes to keep my favorite people happy,\" Teri replies.\n\n\"Same here,\" Anna says, grinning expansively. \"Oh, and whatever it takes to build a big, happy family too.\"\n\n\"I'm too excited to sleep,\" Teri announces, bounding to her feet. \"I wanna go for a late-night swim. Who's with me?\"\n\nI look at my beautiful, radiant wife. Like me, she's obviously too excited to sleep as well. \"We're in,\" I say.\n\nI hop out of bed, then move around to the other side so I can help Anna get to her feet. I've been doing that for the last several weeks. She's still plenty capable of getting up by herself, but in her condition, it's a lot easier with help.\n\nTeri bounces off the bed and heads for the door. \"Uh, Teri,\" Anna says, \"you do realize that the guest house's master bedroom has a window that overlooks the pool, and that my mom tends to stay up late, right?\"\n\nShe laughs and spins around, arms outstretched. \"Yeah, isn't it great?\" She disappears around the corner and out into the hall.\n\nAnna grins broadly at me. \"I don't think my mom will mind, especially if you're naked too.\" I feel myself start to blush as I pull her to her feet.\n\nWe head for the door just as Teri sticks her head back around the doorway. \"Oh, and one more thing,\" she says, grinning like a kid at Christmas. \"Call me Kira.\"\n\nThe End\n\nIf you've enjoyed this story, please do me a quick favor by giving it a rating. Or better yet, leave a comment. I love reading them, for better or worse.\n\nThanks!\n\nMichael"
    ],
    "authorname": "Michael_Butterfield",
    "tags": [
        "group sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/promises-pt-12"
}