{
    "title": "Hero Worship Pt. 01",
    "pages": [
        "It's good to be back. I hope everyone enjoys. All characters involved in explicit scenes are over eighteen. Please rate and give comments and constructive criticism and send feedback. They keep me going. \n\nHero Worship\n\nTaylor\n\n\"Base, this is tower eight, I have an ADV, send backup and EMTs. Heading into the water.\"\n\nI slammed my walkie-talkie down on the tower railing and quickly shimmied off my black athletic shorts, leaving me in just my red one-piece. As I reached for the shoulder strap to my can the walkie crackled to life. \"Roger that, tower eight, active drowning victim at your location, sending backup and EMTs.\"\n\nKathy's voice was surreally calm as adrenaline continued to flood my system. Can in hand I took the first step then jumped down into the sand, eyes glued on the face just barely staying above the surface. Hold on, sweetie.\n\n\"Make Way!  Make Way!\" I sprinted toward the water, startled beach goers giving ground as I went. It was a Saturday in August, and the place was packed, but I'd studiously kept a path between my tower and the water's edge clear for just this reason, getting there in less than five seconds. As I did my peripheral vision saw Jared, from the next tower, hit the sand and sprint in my direction.\n\nI high-stepped over the shallows for as long as I could before diving in, pushing through the water with a breaststroke that kept my head above the water so I could watch my victim. She was still up, but wouldn't be much longer. She looked almost peaceful, except for the panic in her eyes. Most people think of a drowning person as someone waving their arms and splashing around, calling for help, but it isn't true. A person struggling might do that, but someone in imminent danger of going under doesn't move much, and the brain, totally consumed with breathing at that point, won't allow for any noise at all.\n\nI kept closing the distance, stroke after stroke. Stay up, please, just a little longer, I'm coming.  I'd moved another twenty yards, and she was gone.\n\nI swore in my head. I quickly judged her disappearance at maybe thirty yards from where I was. I switched to a faster crawl. I knew how long it would take me to cover that distance, and I counted it off in my head as I went.\n\nWhen my internal countdown hit zero I stopped, kicking into an eggbeater and rising as high as I could in the water, turning a quick circle for any sign of my victim. Nothing. I slipped out of the shoulder strap, since I couldn't dive effectively with my can, and lifted my hips over my shoulders to dive down. Five feet below I turned another circle, ignoring the sting of salt in my eyes. I didn't see her. I felt the current for a second, pushing me west, towards open water. I swam that direction for a moment. There! A flash of orange to my right, and just maybe the shape of a body.\n\nI kicked hard. Water distorts distance, so she was farther away than I initially thought, but I refused to surface. My lungs were screaming as I was finally able to reach out and grab her wrist. A moment later I had my arm around her waist and was pushing toward the sky above. Breaking through, I gasped in a lungful of air. My can was floating about five yards to my right, so I kicked towards it, pulling the girl along on her back.\n\nWhen I reached it, I grabbed the floatation device and slipped it under the girl's backside. \"Sweet Jesus,\" I got my first good look at her. Just a kid, barely eighteen. I can't let her die.\n\nMy fingers found the pulse point on her neck. I exhaled heavily; she wasn't breathing, but her heart was still beating. It was weak and rapid, but it was there. Shore was over a hundred yards away, it would take me at least two minutes to get her back, maybe more. She'd be gone by then. I kicked back into an eggbeater, balancing her hips on the can and one of my arms under her shoulders. Her head lolled back as I opened her mouth, sealing mine around hers and blowing hard. I could feel the resistance from the seawater inside her lungs. I waited a second and tried again.\n\nAs I began to inhale for a third Jared arrived. He slipped his own can under her shoulders and stabilized her in the water, letting me use both hands to close her nose and open her jaw. A third breath, than a fourth.\n\n\"Come on, Come on.\" A fifth. She stirred in our arms. I quickly rolled her towards me, lifting her high as I could out of the water. I felt warm liquid, and probably a little vomit, wash over my shoulder as she began to cough.\n\nThe girl began to struggle. One of the first things you learn in lifesaving is that a panicking person will climb onto anything in the water still floating. That includes you. You also learn that if the floating object sinks, they will let go.\n\nI let her push me under the water, and resurfaced on the other side of my can after she released me. When she reached for me again I shoved the can under her arms and held it there.\n\n\"Hey, hey, we've got you. You're going to be okay, alright? I promise.\" She didn't have much strength to start with, so she calmed relatively quickly, especially once she realized the red flotation device would support her just fine.\n\nJared gave her his as well. \"I'll haul us back, you keep her up.\"\n\nI nodded, and he shouldered both straps while I wrapped my arm around the girl's waist. I heard her cough again, her eyes closed. \"Hey, stay with me. We're going to take you back to the beach. Hold on to these, kick if you can.\" I shook the floaters. She didn't even have the strength to respond as Jared began to pull. I kicked, and she held on.\n\nAs we approached the beach I could see an ambulance on the sand, along with one of our yellow beach trucks. There was also a young woman in a blue bikini standing at the water's edge with a panicked look on her face. She was yelling something, but I couldn't make it out.\n\nThe girl tried to slip off several times, but I held her steady. As soon as I could feel the bottom under my feet I stood, lifting her clear and began walking her to the EMTs. I placed her on the gurney. Her breathing was rough, but independent.\n\n\"How'd you find her?\" The nearest EMT shined a light in her eyes while the other slipped an O2 hose under her nose.\n\n\"Not breathing, weak pulse. Rescue breathing done on the water. She sucked in a lot of ocean.\"\n\n\"Oh my God, Kelsey!? Kelsey, please answer me! Is she okay? Please!\" I got a good look at the woman in the blue bikini, way too young to be her mother. Sister, maybe? Anyway, I recognized her as the one I'd seen flirting with that guy before I'd noticed my victim. One of the EMTs started talking to her, so I just tuned it out.\n\n\"All right, let's get her out of here.\" They carried the bed over the sand and loaded it into the back of the ambulance. It was the one the city had bought special just for this, with the wide tires and all wheel drive, built for driving on sand.\n\nAs I watched the EMTs drive away, a towel was draped around my shoulders, along with an arm gently steering me toward the yellow beach truck. I sat down on the tailgate while someone else settled next to me. It was my boss, Jennifer, who slipped a sports drink into my hand. \"Now, you finish that while we take you back to base, alright?\" I nodded, staring at the blue bottle in my hand. I was starting to feel shaky as the adrenaline began to leave my system. \"And Taylor?\"\n\n\"Yes, Ma'am?\"\n\n\"Good job.\"\n\nAlyssa\n\nWhen I arrived at the beach with my sister I was on a cloud. The last day of my summer internship had been the day before. I'd gone into my supervisor's office at three o'clock as scheduled for my exit interview. I thought things had gone well, and we'd just won the big contract I'd been assisting with a few days beforehand. I'd even made a couple of suggestions that had gotten integrated into the final designs.\n\n\"Hi, Aly, come in, sit down.\"\n\nThe next hour was wonderful. Michelle was very positive, complimented everything I'd done. She had a few suggestions, of course, things to focus on during my senior year, but overall, I was glowing.\n\nThen there was a knock on the door.\n\nMIchelle looked up. \"Come in!\" The door opened, and Simon Urbanczyk walked through the door.\n\n\"I hope I'm not interrupting?\"\n\n\"No, we were just finishing. It's Alyssa's last day.\"\n\nThe founder, sole owner, and CEO of the company turned and regarded me. \"So I understand. You've made quite an impression here, young lady. This is for you.\" He handed me a white envelope, and when I opened it I saw a check in my name for a thousand dollars. Given the unpaid nature of my internship, I almost choked.\n\n\"Sir?\"\n\nHe held up his hand. \"Everyone who worked on the Marina Heights project is getting a nice bonus, and Michelle assures me that you earned your part.\"\"\n\n\"Um, thank you, sir.\"\n\nI stood and he shook my hand. \"I understand you're a senior at USC this year?\" I nodded. \"Well, when you finish your degree I hope you'll consider coming to work for us. I'm sure we can find a place for someone of your talent and abilities.\"\n\nHe smiled again and was gone, leaving me with my mouth still hanging open. Michelle grinned at me before telling me to get my stuff and go home. \"You're fired, for now.\" I gave her a hug and, after a few more goodbyes, I almost sprinted from the building.\n\nMom, Dad, Kelsey and I had gone out for a celebratory dinner at the Wharf, my favorite seafood restaurant. I'd been promising Kelsey that we'd go to the beach the next day, and we'd arrived a little after nine o'clock with the idea to do a little shopping first. Kelsey was still wearing the parentally approved conservative one piece mom had bought her at the beginning of the summer, so I'd decided to treat her, as long as the parents didn't find out. She was eighteen and about to be a senior in high school, after all. I remember how badly I'd wanted something a little more daring to show off the new body I'd been developing at that age.\n\nShe'd picked out an orange string top with a more conservative bottom. I'd made the rule that the whole of her butt had to be covered, at least. She'd worn her new suit out of the shop, covered only by her cut offs, her one piece tucked away in our beach bag.\n\nWe made our way to the north end of Tagalong Beach. There were several beaches nearby that had better surfing, so this one was ideal for lying out and swimming.\n\nI found a great spot near one of the lifeguard towers. The young woman on duty in the tower was striking, with short, tousled blonde hair and incredibly toned shoulders and arms. I wish I had those.\n\nI spread out our huge beach towel. \"Okay, sunscreen.\" Kelsey sighed but sat down and let me lather her up well.\n\n\"Stay in sight okay?\"\n\nShe nodded and ran off towards several guys throwing a football around near the water, leaving me holding the squeeze bottle.\n\nAfter kicking off my own shorts and sleeveless T-shirt I spread lotion over my legs and front, telling my phone to wake me in an hour before lying back and enjoying the southern California sun.\n\nI was up well before the alarm, pulling out my Kindle and starting to read. Kelsey was down by the water's edge, splashing around with a group around her age. I felt a pair of eyes on me, so I looked up over my shoulder. The lifeguard was still sitting there, but I couldn't tell what she was watching behind her sunglasses.\n\nSuddenly she stood, folding up her eyewear and grabbing her binoculars, stepping forward to the edge of her structure. That time I'd definitely gotten a glance, giving me a look at her clear blue eyes. Some girls had all the luck.\n\nI knew I was pretty, but I wasn't athletic by any stretch, not like Kelsey, who was already two inches taller than my modest five three frame. I'd always admired girls with an athletic build, wondering what it would have been like to be able to be a serious swimmer or runner. I'd loved soccer and softball when I was a kid, but by the time I'd gotten to high school, I just wasn't competitive. Instead I'd gotten my Dad's Mom's curves. They'd served me well enough, I guess.\n\nSpeaking of which, a Frisbee landed next to my blanket, and I looked at the broad chest and six-pack of abs headed my way.\n\n\"Sorry about that.\"\n\nFunny, he didn't look sorry at all. If he hadn't thrown it my way on purpose I'd eat my Kindle. But I was in a good mood, and he was cute enough. I cocked my head to the side and smiled at him. \"No problem.\"\n\n\"Are you here by yourself? 'Cause that would just be wrong.\"\n\nI giggled at him. \"You're sweet, but I'm here with my little sister.\"\n\n\"And where's she?\"\n\n\"Down there in the water.\" She was up on some guy's shoulders, trying to push another girl off another guy. She seemed to be having a good time, and her new friends didn't look too much older. \"She's a senior in High School, so she ditched me as soon as humanly possible.\"\n\nHe laughed at my joke, probably a little too loudly. \"I get that. Well, if you want some company, can I get you a drink?\"\n\n\"Sure. That little stand over there has great strawberry lemonade.\"\n\n\"Coming up. I'm Luke, by the way.\"\n\n\"Aly, hi.\"\n\nHe held my hand for a second when I offered it to him, before grabbing his disc and heading back towards his friends. The lifeguard was looking at me again, and I felt ashamed for some reason. She smirked at me and turned back to face the water.\n\nI felt a twinge of disappointment that she'd turned away. Weird. Oh, well. I only had to wait a few minutes before Luke was back with two strawberry lemonades. I let him sit down next to me. He was actually pretty sweet, and I'm sure most girls would've melted into a puddle at the attention. He said he was a fireman, apparently loved to read and play basketball and was a huge Lakers fan. And amazingly enough, he'd actually asked me about what I enjoyed as well.\n\nIt had been a nice half an hour, and I was just thinking that if he asked for my number, I'd probably give it to him, when I heard movement from the tower next to me. The lifeguard was talking rapidly into her handheld radio. A moment later she jumped down into the sand and sprinted toward the water holding her red flotation device, screaming for people to get out of her way.\n\nI glanced down towards the water where I'd last seen Kelsey. She wasn't there. I looked around the beach, finding the group of kids she'd been with. I didn't see her. I stood, my eyes casting around.\n\n\"Everything okay?\" Luke looked concerned.\n\n\"I don't see my sister. Kelsey!\" A second lifeguard came tearing down the beach, following the first into the water. \"Kelsey!\" I turned slowly on the spot. I saw the group she'd been with but she wasn't there. My heart was starting to beat faster, and I had a sick feeling in my stomach. \"Kelsey!!\" That one was as long and loud as I could make it. I scanned the boardwalk. Maybe she'd gone up for a drink or a snack. Which she wouldn't have done without asking me for some money.\n\nWhere the hell was she? I shouted for her again before, almost painfully, I looked again at the water, just in time to see the female lifeguard from the tower next to us surface with a girl in tow. I knew who it was immediately. My mind tried to rationalize, gibbering to me that it couldn't possibly be her, that she hadn't been out in the water that far, she was too good a swimmer for this to happen, but I knew.\n\nI recognized the orange bikini I'd just bought her, her light brown hair darkened by the water. I couldn't breath as my heart fell through my stomach. I almost vomited, stumbling down the beach toward the water. A crowd was starting to gather at the shore, but I broke through until I was ankle deep. I'd stopped yelling her name in favor of wracking sobs. They were doing rescue breathing out in the water. I didn't even know that was possible. I'd never in my life felt more helpless than I did at that moment.\n\nI'm not a religious person, but I'll admit I prayed. I prayed for strength for the lifeguards, for the sea to be calm. But mostly I prayed for the opportunity to hug my sister again, to watch her bopping around to her silly music, to hear her jabber on about boys from school while we watched a late night movie.\n\nMy legs were jelly and I had no idea how they were still holding me up. A siren, and the crowds parted to allow an ambulance through, followed shortly by a yellow pickup truck, both with flashing lights. Somehow their presence made it more real, and I covered my mouth as hot tears streamed down over my cheeks. I looked back out to sea.\n\nThe lifeguards were coming back now. They had Kelsey with them. Was she moving? Maybe? It seemed like it took them forever to get to shore. Kelsey was holding on to the floaty things the male lifeguard was hauling behind him. She looked ashen, but holding her tight was the other one, the woman who'd been watching me from before. Her face was a carven portrait of professional concentration. For a moment Kelsey slipped off the red floats, but the woman lifted her back on, placing her fingers back on the handles.\n\nKelsey's eyes were open for a moment. She was alive. I almost fainted in relief. As they approached the shore I began calling out again, just before the female lifeguard scooped her up in her arms and began carrying her onto the beach.\n\n\"Oh my God, Kelsey!? Kelsey, please answer me! Is she okay? Please!\" An EMT gently pushed me away.\n\n\"Give us some space ma'am, please?\" The woman laid Kelsey on the gurney while I tried to get closer. \"Ma'am, we're going to take care of her, but you need to stay back. You know her?\"\n\n\"She's my sister.\"\n\n\"Okay, what's her name?\"\n\n\"Uh, Kelsey, Kelsey Winterberg.\"\n\n\"How old is she?\"\n\n\"Eighteen.\"\n\n\"Is she allergic to anything? Any health issues?\"\n\n\"No, I don't think so. Is she going to be okay?\"\n\n\"She's breathing on her own, that's a good sign. We're going to take her to the hospital to be sure. St. Michael's Northside. Are your parents here?\" I shook my head. \"Call them, tell them what happened, get your stuff and meet us at the hospital. Alright?\"\n\n\"Okay, let's get her out of here.\" The other EMT barked the order, and the one talking to me repeated what hospital they were going to, before running to help.\n\nI watched in shock as they loaded her into the ambulance and were gone. I looked around in a daze. People were staring, and filming of course. My eyes found the lifeguard. She was sitting on the tailgate of the yellow truck, next to a tall woman in a white T-shirt and blue shorts. As the woman helped her to her feet our eyes met. I tried to say something, but nothing would come out. I needed to say thank you. What was the look on her face? Disdain, maybe? Or maybe I was just projecting. She turned away and climbed into the front seat, and moments later they were gone as well.\n\nBy the time I got back to my beach towel I was shaking. Luke was nowhere to be seen. Just as well. I'm not sure how I got through the call to my father. I was expecting him to yell, to curse at me for not protecting Kelsey, even though he'd never do something like that. All he'd said was that he'd get mom and meet me at the hospital. Then he told me he loved me, which almost made me dissolve into tears. As I put on my shorts and top and packed up I let myself cry. I was going to need to get it out of my system before driving into North LA.\n\nI pulled into the parking lot for the huge hospital and followed the signs to the emergency room entrance. I walked up and the woman behind the desk smiled at me. \"Can I help you?\"\n\n\"Um, they, uh, brought my sister in. She almost drowned?\" I choked a bit on the word.\n\n\"What's her name, hon?\"\n\nA minute later I was being directed to a small room filled with monitors, one of which was beeping steadily away. Kelsey's eyes were closed, and an oxygen hose was situated under her nose. She was so pale, and I felt my breath hitch as I stepped forward and took her hand. Her eyes fluttered open.",
        "\"Hey, Aly.\"\n\n\"Hey, sis, how'ya doing?\"\n\n\"Tired. Mom and Dad?\"\n\n\"They're coming. Just rest.\" She closed her eyes and breathed deep, but it had a scary, rattling quality.\n\n\"That's normal.\" I turned around where a man in a white coat and velvet black skin was standing behind me. \"Hi, I'm Dr. Okunwe, are you Aly?\" I nodded. \"Good, she's been asking for you.\"\n\n\"How is she?\"\n\n\"Well, what we are most worried about here is brain injury from lack of oxygen. But she knows her name, she could tell us her address, she knew you, so I think we're going to be okay there. Can't tell for sure yet, but it looks good. Next is infection. She has had an injury to her lungs, so she could have an infection, develop pneumonia.\" He shrugged. \"We'll put her on preventative antibiotics and keep her at least overnight to watch. Her parents?\"\n\n\"They're on their way.\"\n\n\"Good. Have the nurse find me when they get here.\"\n\n\"Thank you, doctor.\"\n\nHe nodded to me and withdrew. I sat down in a chair by Kelsey's bed, took her hand firmly in mine, and waited.\n\nTaylor\n\nIt was almost five thirty when I finally got to go home. I shouldn't complain, that's half an hour before I usually leave, but the last few hours had been interminable. Back at base I had to pee in a cup for a drug test. I knew it was for liability issues and I wasn't worried, but it still pissed me off, if you'll pardon the expression. Jennifer helped me prepare a written incident report, no big deal. Next came the lawyers. Shit. I was deposed for nearly an hour, and they went into painstaking detail of every decision I'd made, especially about trying to resuscitate while still in the water. Jennifer sat next to me throughout the ordeal. After that they left me in the conference room for a solid hour to just stew in my thoughts.\n\nI don't care who you are, that level of scrutiny can make anyone question their decisions, and question I did, but I was able to go back to the fact that the girl was alive and breathing when we'd gotten her to shore. In my book that was a big win. I'd been lifeguarding for almost four years full time, and I'd never lost anyone. This was the closest I'd ever come by a long ways.\n\nFinally Jennifer poked her head into the conference room. \"Taylor?\"\n\nI followed her into her office.\n\n\"I just wanted to say again, very, very well done. I fully endorsed your decision on the water rescue breathing, as did Jared. You saved a life today, we're all really proud of you. Do you want to take tomorrow off?\"\n\n\"No, ma'am.\"\n\n\"Do you want to come over for dinner tonight? Sometimes it's best not to be alone.\"\n\n\"No, thanks. I think I'll go to the warehouse, burn off some energy. And I want to be back out there tomorrow.\"\n\n\"Ok, but you know Vicky will be worried about you until you stop by.\"\n\nI smiled. \"Yeah. I will. Promise.\" Jennifer's wife was a bit of a mother hen when it came to me, which was sweet, especially since I didn't have much in the way of family anymore. I actually lived in a mother-in-law apartment over their garage, which I had since leaving school. It gave Vicky ample opportunity to spoil me.\n\n\"Alright, go on home. See you in the morning.\"\n\nI stripped off my one piece in the locker room, throwing it into the laundry bin before dressing, pulling on my jeans and leather jacket. My helmet was sitting on top of my locker, and I walked out into the lot and sat astride my bike before pulling it on over my short blond hair. I kicked the starter and my cruiser roared to life underneath me. I motored out of the parking lot and let the road wash the day away, just running up and down the coast for a couple of hours before heading back into town.\n\nI knew the fatigue was coming, but I hadn't really felt it yet as I drove up to the warehouse. The roar of my Indian's motor quieted, replaced by the slow tink-tinking of Bishop's chisel, who was working on his masterpiece again. He looked over his shoulder at me as I walked in and pulled off my helmet.\n\n\"One of these days I'm gonna pour glue into the tank of that thing, Taylor.\"\n\n\"Love you, too, Bish.\"\n\n\"Uh-huh.\" He went back to his piece of marble. He'd been working on that thing for years, and only made minimal progress in the time I'd known him. But given the quality of smaller works he put out, I didn't doubt it would be beautiful someday.\n\nMy own work was in metal sculpting. Currently I had several tabletop pieces I was working on, and I sat in front of them for maybe fifteen minutes before pushing them away and grabbing my sketchbook. As I stared at a blank page I found my mind wasn't going to where I guessed it would, the rescue itself. What I remembered was that girl. Not the one I'd saved, the one waiting on the shore when I'd come up out of the water. I'd been watching her, seeing all the ways her face had changed. I'd seen her flirty with that guy, then terrified as I'd carried her sister onto the beach. It was a face that captivated me for some reason, and maybe getting it down on paper would get it out of my head.\n\nThere was no reason to dwell on it, after all. Sure, she was beautiful, but for one she was very clearly straight. I keep telling myself that I am not doing that anymore. And two, I would never see her again. But I couldn't think about anything else. So I sketched.\n\nIt was ten o'clock and my stomach was growling at me. I'd gone through maybe half a dozen pages, not having eaten or done anything but think about that face. I put down my last attempt, my favorite, showing her in profile, looking desperately out to what I knew to be the sea. I closed the book and left, riding home in the dark.\n\nWhen I arrived and climbed the steps to my little apartment I saw my oven was on, set to one-eighty, and there was a note on my counter.\n\n-A little treat for the hero of the day.  Love, Jen &amp; Vicky.\n\nI pulled a pan out of the oven and removed the foil, luxuriating in the smell of the Pao de queijo, small Brazilian cheese breads. I moaned to myself as I popped one in my mouth. Yeah, overall, today was a good day.\n\nAlyssa\n\nI'd nodded off in the chair. When I sat down, I didn't think that I'd ever sleep again, but between the steady beeping of Kelsey's heart monitor and the rhythmic rise and fall of her chest, I was gone.\n\nI felt a hand gently shake my shoulder. \"Aly, Sweetie, wake up.\"\n\nI opened my eyes. \"Mom?\" Sitting up I realized I was still holding Kelsey's hand.\n\nMy dad was on Kelsey's other side, his hand laid gently on her shoulder. \"Kelsey? Honey?\"\n\nKelsey's eyes fluttered open. \"Hi, daddy.\"\n\n\"How're you feeling, pudding?\"\n\n\"I'm okay. Tired.\"\n\nI stood and stepped out of the way so mom could get closer. I was reluctant to let Kelsey's hand go, but mom needed it more than I did. I felt squeezed out, but also like I deserved it. The doctor had asked me to find him when my parents arrived, so I decided to do that. Might as well be useful. It only took a moment before I found him talking to one of the nurses behind the reception counter. After getting his attention I followed him back to the room, where I saw the orange bikini folded up in the corner. I slipped over and grabbed it while Dr. Okunwe spoke with my parents. No need to get anyone in more trouble.\n\nOnce I had it I ducked outside, making my way to the busy waiting room. I found a seat in the corner, tucked my knees up under my chin, and let the tears come. I hated that I was crying. This shouldn't be about me; it should be only about my sister. She's the one who almost died. And if she had, I can't imagine what it would've done to our family.\n\nI loved my parents, and they loved me, I knew that, but Kelsey was the apple of their eye. Mine too really, she just was impossible to dislike. She'd never turned sullen or moody like most teenagers. Boy crazy a little, but she was still happy and bubbly and relentlessly adorable.\n\nWhat would have happened if she'd drowned? Could I have ever gone home? Ever hugged my mother again without thinking of her? Could my parent's marriage have survived? I remember my roommate Sadie telling me the death of a child would break up a marriage more often than infidelity.\n\nAnd it would have all been my fault. But it hadn't happened, all because some young woman I'd never met before was doing what I was supposed to be doing, watching my sister. I remember seeing her coming out of the water, holding Kelsey. She'd been like a goddess. In one swoop she'd saved my whole family. I remember some of my heroes, Brandi Chastain, Abby Wambach, Alex Morgan, all players from the US women's soccer team. I had posters of them on my walls at various times. But that lifeguard deserved to be there more than any of the others.\n\nSomehow I'd managed to fall asleep again in that horrible, uncomfortable chair when my father found me. \"Alyssa, sweetheart? Are you okay?\"\n\nI looked up into his kind face, and the tears started again. \"I'm so sorry, daddy.\"\n\n\"Oh sweetie.\" He pulled me into a hug. \"Everything's okay, we all got lucky. She's awake, and asking for you. No one's mad at you, I promise.\"\n\nI let him hold me for a moment longer before following him back to the room. Kelsey looked up as I entered. \"Hey, sissy. I'm sorry I went out too far. I'm sorry I scared everyone.\"\n\nMy mom was sitting by the bed. \"They're going to keep her overnight, we're just waiting for a bed on the pediatric floor.\"\n\nHospital waiting is one of the worst kinds of waiting, but eventually they got us all transferred out of the ER. Dad volunteered to stay, and I drove mom home.\n\nSleep was slow in coming that night. I'd expected that, but I wouldn't have been able to predict the reason. Instead of seeing my sister drowned, sinking into the depths, or washed up lifeless on the beach, my thoughts were filled with a short-haired blonde rising majestically from the water, her powerful shoulders glistening in the Southern California sunlight.\n\nI finally nodded off, feeling somehow safe with her face in my mind. The next thing I knew it was morning and my mom was knocking lightly on my door. \"Aly, sweetheart, I'm going to head in to the hospital, you coming?\"\n\n\"No, I'm just waking up. You go on, I'll be there as soon as I can.\" Eventually I found my way into the shower and some clothes. I sat in my Mini Cooper for a moment before making a decision. I turned the key, pulled through our front gate, and headed to the beach.\n\nTaylor\n\nI'd made the right call, coming back to work today. It felt good to be in the sunshine. I watched the people play, innocent and carefree. A boy, maybe six years old, was building a sandcastle with his father. A couple of young girls were splashing each other, while a grandma was trying to get her floatie-clad grandson to kick as she pulled him through the water. Beyond them all was the impossible vastness of the ocean, in all its incredible power, sleeping peacefully. None of them were aware a young life had almost ended here yesterday. I breathed deeply. But it hadn't, the universe had been kind for once.\n\nSo I watched them. Was I more alert than usual? Probably, and I think my heart was beating a little faster than normal. But I was going to keep them safe. I was focused, intense, absolutely locked in to...what the hell?\n\n\"Hi, um, ma'am?\"\n\nI looked down. Holy shit! It was her! That girl, the one who'd been with the rescue yesterday. The one I'd spent three and a half hours sketching, and who'd spent all night running through my dreams. Luckily my sunglasses hid how wide my eyes got when I saw her.\n\nOk, play it cool. \"Can I help you?\"\n\n\"I, um, yesterday, uh, you saved my sister?\" God she was blushing, I could see it from here. The corners of my mouth turned up into a smile. I couldn't help it, she was adorable. And very straight. That last thought got my mind back under control.\n\n\"I remember.\" I turned back to the water. Her face dropped, and she seemed nervous, actually tugging on the blue jumper she was wearing. I sighed. \"How's she doing?\"\n\n\"She's good, so far. She should get out of the hospital today.\" She fidgeted some more. \"The doctor said there shouldn't be any permanent damage.\"\n\n\"Glad to hear it.\"\n\nShe was still staring at me. \"I, um, I just.\" She took a deep breath, and her lip was quivering. I wanted to jump down and hug her, but I probably shouldn't. Make that definitely. I did pull off my sunglasses to take a good look. She had luxurious, soft brown hair that was clipped back over her ears, and her irises were a lovely, milk chocolate brown. I hadn't noticed that before. A girl could get lost in those. They never left mine, and finally she got some words out. \"I wanted to say thank you, for everything. What you did, it was incredible. You saved, I mean, everything, you just don't know.\" I saw a tear run down her cheek. \"So thank you.\"\n\n\"You're very welcome, really.\" I smiled at her. \"It's my job.\"\n\n\"I just feel, can I, I mean, do you eat lunch?\" I saw her wince at her own comment. God, that's cute. \"Do you?\"\n\nI should say no. It's not right, and she's straight. She'd had guys crawling all over her yesterday. \"You don't need to do that.\"\n\n\"I want to, really. I feel like I have to.\"\n\nI shook my head and sighed in resignation. \"I go to lunch around one, it depends on when my relief gets here.\" I saw her pull her phone out of her purse and check the time. It was a little after eleven.\n\n\"Ok, meet you here?\"\n\nI nodded and leaned back into my chair, scanning the water again. When I glanced back she was gone, and I shook my head. God, I must be a masochist. Why was it always straight girls? If I had a nickel, well, I'd still be broke, but it'd happened enough that I oughta know better.\n\nJust an example, Sherri, met her at one of Jared's parties. She'd just broken up with her boyfriend, at least that's what she'd said. We'd had an amazing night. I didn't even have to pursue her; she was all over me. A week later she was back with the boyfriend, and wouldn't even acknowledge my existence.\n\nI remember a friend in college joking that one particular asshole we both knew was the, um, 'the leading cause of lesbianism in California'. I think that's how she'd put it. Sometimes I wondered if I weren't exactly the opposite.\n\nAnd now here we go again. The upside, of course, is that she probably wasn't even bi-curious. Maybe. It would have been better if I'd've said no. Maybe she wouldn't show. The really sad part of the whole thing is if she didn't, I knew I'd be disappointed.\n\nAlyssa\n\nMy breath was shaky as I walked away, going underneath her tower to get out of sight. I actually stopped there to collect my thoughts. It was the same feeling I'd gotten when I was around the girls on my high school soccer or softball teams, but a lot stronger. But that was just camaraderie, enjoying being with other women in friendship and a common goal. Wasn't it?\n\nOne thing I knew for sure, I'd be there when she was ready. I had almost two hours to kill, so I made my way up to one of the sandwich shops on the boardwalk and ordered a lemonade, pulling out my phone and calling Kelsey.\n\n\"Hey, kid, how'ya feeling?\"\n\n\"Good, tired. Breathing's easier this morning. Doctors are gonna let me go home this afternoon.\"\n\n\"That's disappointing. If you'd have died I'd have gotten your trust fund.\"\n\n\"Ha-ha. You say that, but you'd miss me.\"\n\nI smiled, tears stinging my eyes. \"So much. But seriously, I owe you a better day than yesterday.\"\n\n\"It was my fault, Aly. I did something stupid. I'll tell you about it later. Mom's pretty mad about the bikini, too.\" I winced at that. How'd she find out? Oh, well. \"Hey, where are you?\"\n\n\"I'll tell you about it later.\" I heard her laugh, which was a great sound. \"I'll be there this afternoon, promise.\"\n\n\"Okay, I love you, Aly.\"\n\n\"Love you too, sis. I'll see you.\"\n\nI disconnected and stared out over the sand and water. It was weird. Yesterday had been the scariest day of my life, no question, but today felt, I don't know, momentous, I guess. I watched the children play. The surf was higher today, so there were some boogie boarders a little further out.\n\nA cold wash of panic flashed through me when I saw a girl scream and splash, but then a young man surfaced next to her and she pushed water into his face laughing. I shook my head.\n\nEventually the time passed, and it was closing in on one o'clock, so I walked back toward the lifeguard tower. As I approached I saw a yellow truck nearby. It started to pull away and I looked up at the tower. It wasn't the same lifeguard, the one there now was clearly of East Asian descent with long black hair. I had to keep myself from running towards the tower. What if she'd left?\n\nNo, there she was, leaning against the front pillar looking around. She'd put a white sleeveless T-shirt on over her suit, along with the black athletic shorts she'd been wearing before. Her shoulders were bare, muscled and lean, along with incredibly toned arms and legs. I felt my mouth going dry as I approached, so I called out while I still could. \"Hey!\"\n\nShe turned towards me. \"Hey, back.\" She gave me a small one-sided smile and my heart did a little flip. \"So, it's your dime. Where're we headed?\"\n\n\"Um.\" Oh crap, I hadn't even thought about that. I'm so stupid! I was staring around open mouthed for several seconds before she rescued me.\n\n\"If you want a suggestion, Mas Taco is parked over there.\" She pointed up over the beach wall. \"It's one of the best food trucks around.\"\n\n\"Sure, sounds great. Lead the way.\" I almost tripped over the sand when she smirked at me again.\n\n\"So what do I call you?\"\n\n\"Oh, sorry, I'm Alyssa, my friends call me Aly. Spelled A-L-Y. How 'bout you?\"\n\n\"Taylor.\"\n\n\"Nice to meet you.\" That smirk again. We walked toward the food truck in silence, but I could feel her next to me, like a heat source. The comfy kind. It was disconcerting, but really I just wanted to get closer. We ordered, and as soon as we had our food we sat at a little table under the shade of an umbrella.\n\nShe looked at me, and I tried to start a conversation, but literally no sounds would come out of my mouth.\n\nTaylor leaned forward across the table. \"So, now that you got me here, what are you going to do with me?\"\n\nI pointed at her. \"Pretty Woman.\"\n\nShe laughed. \"That's right, very good.\"\n\nI grinned at the compliment. \"It's one of my mom's favorites. So you like old movies?\"\n\n\"I like all kinds of art.\"\n\nI cocked my head at her. \"'Pretty Woman' is art?\"\n\nShe looked right at me with those incredible steel blue eyes. \"When you watch it, does it make you feel? Does it make you think?\"\n\nI nodded, not looking away. \"Sure.\"\n\nShe shrugged. \"Then it's art.\"\n\n\"I never thought about it like that.\"\n\n\"Most people don't.\"\n\n\"So can a building be art?\"\n\nShe looked at me strangely. \"Sure, why?\"\n\n\"It's what I'm studying, architecture. I'm starting my senior year at USC.\"\n\n\"That's cool. So you're from LA then?\"\n\n\"About ten minutes from here. I'd just finished an internship this summer, that's why Kelsey and I were here yesterday. Celebrating my last year in college, and Kelsey's first year of high school.\" I took a bite of my baja fish taco. Wow, that was really tasty.\n\n\"Good?\"\n\n\"Mmm, so good.\"\n\n\"Work here long enough, you figure out who's up to snuff.\"\n\n\"So how long have you, y'know.\" I nodded toward the beach.\n\n\"LIfeguarding? Since high school. It was just a weekend gig at the local Y for awhile, then a summer at a community pool back home after my senior year.\"\n\n\"Where's home? Are you from L.A.?\"\n\nShe laughed bitterly. \"No, Idaho. Boise.\"\n\n\"Really? How does a mountain girl end up on the beach for a living?\"\n\n\"The water, I love it.\" Her blue grey eyes got distant, and she looked out over the sea. \"My family took a vacation to the coast when I was eight, just to Seattle and Puget Sound, but I was fascinated. I spent every minute I could after that in the water. Actually got a swimming scholarship to Pepperdine, which is how I ended up here.\"",
        "Taylor\n\nGod, what the hell was I doing? Telling this complete stranger my life story? Damn, but she was easy to look at. And I really wanted to run my fingers through that hair. Combine that with those soft brown eyes and, damn. And that voice, geez, almost a childlike soprano. I was already daydreaming about what it would sound like moaning in ecstasy. I needed to switch it up.\n\n\"So how about you? Why architecture?\"\n\nShe grinned and blushed, making my heart melt just a little. \"Probably because of my parents, they're both in real estate, in ways. Dad's a developer; mom's an agent. I always loved looking at the buildings. It's how they met, mom was selling space in one of the properties dad's company built up.\" Aly shrugged. \"I guess it worked out, it's been twenty-five years.\"\n\n\"A happy twenty-five?\"\n\n\"Yeah, I think so, most of it.\" She looked down, suddenly vulnerable. \"I've always been terrified of my parents getting divorced. I saw it happen to so many of my friends, the fighting, nights and holidays here and there. I shouldn't worry, I mean, they're still crazy about each other.\"\n\n\"It's just you and your sister?\"\n\n\"Yeah.\" She looked me in the eyes \"That's why I had to come, to thank you. Kelsey, she's real special. If she'd, uh.\" Aly swallowed heavily before continuing, her voice shaking. \"If she'd died, I don't know, but, something... they adore her. We all do. I don't know if we could've made it, if they would've made it.\"\n\nShe reached across the table and put her hand on mine, and it made my entire arm feel warm. \"That's why I had to come. You didn't just save my sister. You saved my whole family. Thank you. I owe you so much.\"\n\nThe intensity in her eyes took my breath away. I tried not to stammer. \"Hey, you don't owe me anything; I was just doing my job. I'm really glad she's okay, all right?\"\n\n\"I just want to do something for you.\" She blushed adorably.\n\n\"A trip to Fiji? Maybe a new car?\" I smirked at her to let her know I wasn't serious.\n\nShe smiled. \"I was thinking more like dinner with my family, maybe a friend. I just don't want you to disappear into the sunset like Shane.\"\n\nI sighed. \"That's sweet, but you don't really want that.\"\n\nHer eyes fell. \"Sure I would, why not?\" The hurt in her voice was evident, and that wrenched my heart. What the hell was I doing? I stood up.\n\n\"Thank you for lunch, but I have to get back to my tower.\"\n\nAly stood as well. \"I'm sorry if I did something wrong. Please don't go.\"\n\nI looked into her big, brown, doe eyes. Damn it, I was sick of the universe doing this to me. Maybe God did hate me, like my father had said. \"Look, you're a nice kid, especially for a rich girl from L.A., but you don't want to take me home to your parents, and you don't want your sorority friends seeing you hang out with me.\"\n\nHer hand went up to the Epsilon Kappa Tau necklace she was wearing. \"I don't understand.\"\n\nI stepped towards her, and she didn't move away. I was going to finish this off before I got hurt. And maybe wake her up a little. \"Okay. You want to understand?\" She started to say something but I didn't let her get it out, sliding my hand behind her head and covering her lips with mine. She gave a small squeal, and stiffened under my touch. I didn't push the matter, pulling away after just a second. What I hadn't been ready for was the feeling of loss when our mouths parted. I needed to go, now. \"Now you understand.\"\n\nI walked swiftly back toward the ocean, only glancing back once. She was still standing there, her hand touching her lower lip. I turned away. At least that was the last I'd see of her. The thought made my eyes burn with an unshed tear.\n\nAlyssa\n\nMy world was reeling. I couldn't help my hand from rising slowly to my mouth, which was still humming from that kiss. My fingers touched my lower lip, causing a jolt pleasure to run through my body. Her closeness had had a palpable energy, almost pulling me towards her. I hadn't kissed her back. I wasn't a lesbian.\n\nOh, God, why hadn't I kissed her back? The deepest part of me didn't like the simple explanation, and it wanted to know. Why had my heart raced when she stepped close, and why did it hurt watching her walk away? And oh my God, why hadn't I kissed her back?\n\nI sort of floated in a daze back to my Mini Cooper, climbing inside and turning on the AC while I sat there staring at myself in the mirror, wondering if my lips were ever going to stop tingling. I took a few deep breaths. Now what? I should head over to the hospital. That had been the plan at least. But still, I was just sitting here. Alright, Aly, work the problem. What do we have? I mean, she's a lesbian. She'd kissed me, and used that as a reason why I wouldn't want to spend any more time with her. Which kind of made me mad. I guess she just assumed I was a homophobe, probably because my parents had money?\n\nAnd she was assuming I was straight. Well, to be fair that probably wasn't a big leap. I know she'd been watching me flirt with Luke on Saturday.\n\nThis is the part where I protest that some of my best friends are lesbians, but that'd be a lie. As far as I know I didn't know any lesbians. There'd been a few possibles on my sports teams in high school, some speculation, but no one was out. That hadn't been true school wide, but the ones who were, well, it was interesting. You had to be accepting enough not to appear to be a bigot, especially to teachers and such, but hateful enough that your friends wouldn't suspect you were one.\n\nAnd I wasn't. I'd had boyfriends. I hadn't been in love yet, but they were nice and sex was okay. Of course, 'okay' is what you call sex when it's disappointing and unfulfilling. But it was once in high school and somewhat more regularly in college. What do college boys know about sex, anyway? It was bound to get better, right?\n\nWhat would it be like to date a woman? Who knows? She was, well, beautiful, tall, athletic. She reminded me of the girls I'd always wanted to befriend in high school on my soccer team, but I'd always gotten tongue-tied around. I'd never had that problem with boys. My friends would talk about getting all discombobulated around cute guys. Sometimes they even said they envied the easy way I could talk to boys. If only they knew.\n\nTo be honest, the possibility had always niggled at the back of my mind, but I'd told myself I just admired the girls in the posters in my room. I wanted to be them, not be with them. Had I been lying to myself? I took a deep breath, closed my eyes, and imagined walking next to Taylor, letting my hand slip into hers, and as soon as I did something deep inside me purred in contentment. Her face swam before my inner eye for a moment before bending to kiss me. And this time I didn't just stand there like a stump, instead imagining myself kissing her back, my hands running up over her shoulders. A shudder ran down my spine at the thought, followed by a definite tickle between my legs.\n\nMy eyes snapped open, my breathing becoming quicker. Ok, what the hell was that? That annoying, rational part of my brain answered immediately. That is what didn't happen when you thought about kissing your last boyfriend.  Or any of the boys you meet for that matter.  I'm in college right? This is the perfect chance to experiment, isn't it? And she's not someone at school, no one would know. Besides she'd probably love the chance to convert a rich, straight girl.\n\nBefore I could talk myself out of it I opened my car door and climbed out. I could see her tower a few hundred yards away. Putting one foot forward, then another, I walked quickly in her direction. By the time I got there my pulse was racing.\n\nShe was there, sitting in her chair, sunglasses on, obviously focused on the water.\n\n\"Hey, Taylor!\" She visibly started when she looked down, shaking her head slightly. She pulled off her sunglasses, fixing me with those incredible blue-grey eyes, making my mouth go instantly dry.\n\n\"I didn't think you'd be back.\" She put her sunglasses back on and looked out over the bay.\n\nI looked around at the people, a couple of which were looking at us. \"Can we talk for a second?\"\n\nShe sighed and motioned me to come up, running her fingers through her short blonde hair as I did, sitting up a little straighter. I sat down next to her on the deck. She wasn't making eye contact, but I understood that, she had to keep her eyes on her swimmers.\n\n\"So, stupid statements first. You're a lesbian?\" That earned me a smirk. God, that was cute. I swallowed heavily. \"Um, I'll take that as a yes. And you think I'm attractive?\"\n\n\"I don't think it's a matter of opinion.\"\n\nMy cheeks burned with color, but I didn't look away. \"So why don't you just ask me out?\"\n\nI don't think that's what she was expecting, as even behind the sunglasses I saw her surprise.\n\n\"Aly, have you ever dated a woman?\" I stuttered for a second before she tried again. \"Have you ever been on a date with a woman?\" I bowed and shook my head no. \"Have you even thought about it?\"\n\n\"Sure.\" That wasn't a total lie. I'd thought about it just now in my car.\n\n\"Uh-huh.\" The sarcasm was thick as she sat back in her chair.\n\nSuddenly I felt a lot less sure of myself. My voice got smaller. \"So, do you want to take me out?\"\n\nShe gave me that cute smirk, which made my heart do a little flip in my chest. I realized for a moment how badly I wanted the answer to be yes. She leaned forward and pulled off her sunglasses, her lovely alto husking over as she spoke. \"If I take you out, I'm going to want to hold your hand, pull you close while we dance, even kiss you again.\"\n\nI found that I couldn't breath. \"Okay.\" I squeaked the word out, nodding my head.\n\nTaylor crooked her finger. \"Come here.\" Almost in a trance I leaned forward, my eyes fluttering closed as she pressed her lips to mine. Every nerve in my body sprang to life, my skin just humming with joy. Her mouth was so soft as I moved against it, and I felt a sigh escape my lips. God, this was heaven.\n\nHeaven only lasted a moment before she pulled away, leaving me stunned and shaking. But I'd kissed her back that time, and it had been wonderful.\n\nThat little smirk again. \"Are you free Tuesday night?\"\n\nA stupid, schoolgirl grin spread across my face. \"Yeah.\"\n\n\"Give me your phone.\" I fumbled in my small purse for a moment before managing to pull out my cell phone and unlocking it. She quickly added a contact and sent herself a text before handing it back. \"Send me your address and I'll pick you up at seven.\" She sat back, turning her attention again towards the water.\n\n\"Yeah, I will.\" I stood up on shaky legs and found my way down to the sand. As I walked away I glanced back. She was looking at me again, a real smile on her face this time. I felt like I could fly.\n\nI made it back to my Mini. As soon as the engine was on and the AC humming I gave an excited little scream. I remembered when I was fifteen, and after a football game my best friend Erin had come back to my house to spend the night. She'd flopped down on my bed with this incredible, dreamy look on her face. Martin Jones had kissed her under the bleachers, and she was over the moon.\n\nI'd been happy for her, but I couldn't wait for my turn. When it had finally come I'd been so nervous. He was very nice, taking me out to dinner and then mini golfing. He'd opened my door when he brought me home, and then he kissed me. And nothing. No fireworks, no tingles, nothing like what my friends were describing. I pretended there were, of course, at least when I talked to them. Maybe he just wasn't the right guy. I hadn't dated a lot, but enough, I thought. By now I'd kissed about half a dozen boys and precisely none had made me feel like I did right now.\n\nI was too logical a person not to think about what that might mean. Was I gay? Maybe. But if being a lesbian meant I got to feel like this, and have kisses like those, I was okay with it. For the moment, at least.\n\nTaylor\n\nJesus, that girl was like a bad penny. A curvy, beautiful, delicious bad penny. God, that'd been a good kiss. It had been chaste, no tongue, but she'd felt so nice. I wanted to run my fingers through that hair like you wouldn't believe. And the way she'd been looking at me, damn, that could make a gal excited. I shifted in my chair, feeling the evidence of my lingering arousal. If she'd stayed much longer it would've made the rest of the afternoon a lot less comfortable.\n\nWhen was the last time I'd gone on a date? Like, a real date? At least six months. After Gillian had left me, God, that was four years ago, I didn't want to date. An occasional hook-up at a club when I needed it, sometimes a girl from a party, nothing even remotely serious. Vicky &amp; Jen had tried to fix me up a few times but I'd managed to get out of most of them.\n\nDown on the sand some teenage boys had let their roughhousing get a bit out of hand, so I blew my whistle and shouted at them to stop. They did, but the distraction broke through my reverie and I was able to get my mind back on my work. I'd think about the date afterwards.\n\nWhen that time came I found myself heading back out to the warehouse. The air whistled past my helmet as I rode up the PCH, her face dominating my thoughts on the way. I tried to remember when I'd met Gillian. Had I been like this? I don't know, and I really didn't want to think about that.\n\nI pulled into my spot. It being a Sunday evening there were plenty of other cars there. It was an interesting and eclectic mix of broken down old jalopies. I smiled inside. An observant person could probably match up each ride with the artist inside based just on personality.\n\nI got a few nods and welcome calls, but most were too absorbed in what they were doing to notice my arrival. I sat down at my bench and pulled out the piece I'd been working on. I stared at it for a minute. I knew what needed to be done, but I just wasn't into it. I glanced to where my sketchbook was sticking out from a shelf. I picked it up and flipped to the last used page, where Aly's face looked out over an unseen ocean. I picked up my pencil and added some shading. She was so beautiful. The picture seemed to come to life on the page, blushing shyly and turning to look at me with those big brown eyes through her long lashes.\n\nI stood, going over to my crate of rebar, pulling out a base plate and several long pieces. Two hours and a few misfires later I'd tacked together a frame. It'd used most of what I'd had, but I could see it, see her, now. The frame was over four feet tall. I looked through some of the scrap metal I had lying around, but none of it would be acceptable. I'd need some good steel sheets, probably forty, fifty square feet worth, high quality. I'd have to call my supplier tomorrow. I really couldn't do anything more until I had them, so I went back to my bench.\n\nI made myself work a bit on some of the smaller pieces. I wanted a dozen or so for the art fair in October; I usually made a few good sales there, but my attention kept pulling back towards the frame. What I was doing? Large pieces were hard to transport and even harder to sell. But I needed to do it, just like I needed to take her out Tuesday.\n\nWhat would I do with her? I really wanted to take her dancing; the thought of holding her close caused a delicious shiver to roll over me. A few good moves, a little bump and grind and I'd get her worked up enough for her to let me take her back to my place. A good fucking with my strap on and that bi-curiosity would be satisfied, and then I'd never see her again. She'd go back to USC and her frat boys and I could get on with my life, such as it was.\n\nBut... I wanted to get to know her, too. I don't know why, it was so much easier when I didn't. But that kiss though, the second one especially, damn. I hadn't been able to help it, Aly just pressed my buttons. She was sweet, and it didn't feel like she was out to get something. And that look in her eyes when I'd leaned in close, it was more than desire, it was, I don't know... wonder. I wanted to see that again. I knew I wanted to see what she looked like when she came, but also when she laughed, or smiled. I wanted to kiss her tears away when she cried.\n\nI grabbed my phone and opened my contacts.\n\n\"Caratini's, Georgio speaking.\"\n\n\"Hi Mr. Caratini, it's Taylor Knox, I'm Jennifer and Vicky Wilson's friend? Do you remember me?\"\n\n\"Si, Senorita Taylor, of course I do, how can I help you?\" I often wondered how much of his Italian accent was affected, but his customers seemed to love it. So did I. I could almost hear his big bushy gray mustache lifting into that wide smile.\n\n\"I'm taking someone out on Tuesday, and I was wondering...\"\n\n\"Of course, senorita, any friend of Senoras Vicky and Jennifer has always a table here. When will we see you and your lady friend?\"\n\nI told him seven-thirty and wished him a buona sera.  Just as I disconnected a text came through from Aly's number.\n\n\"Hi, it's Aly.  My address is 5719 Terrance Ct, North Vista.  What time should I be ready?\"\n\nMe - Seven OK?\n\nAly -- Sure.  I'm really excited, BTW.\n\nMe -- So am I.  See you then.  Sleep tight. \n\nAly -- You too, hopefully I dream about you.\n\nMe -- I'd like that.\n\nAlyssa\n\nTaylor -- I'd like that.\n\nI lay on my bed and squealed into my pillow. I couldn't believe how excited I truly was. Taffey meowed at me from the floor, and I reached down and picked up the old calico and cuddled her, reveling in the softness of her fur, letting her rumbling purr soothe me.\n\n\"Taffey, I have a date on Tuesday. I can't wait.\"\n\n\"Meow. Rrrrrrr.\"\n\n\"And Taffey, it's with a woman. She's handsome and beautiful all wrapped into one. I really like her.\" I kissed my cat on her head. \"I think I might be gay.\"\n\n\"Meow.\" Snuggle, snuggle.  \n\n\"I knew you wouldn't care, sweet girl.\" I scratched her behind her ears, stretching out on my bed and looking up at the posters of all the soccer players on my wall. Was I gay? The kiss I'd had earlier today... best kiss of my life, hands down. The thought of just holding her hand made me all warm and fuzzy inside. Being held by her, the idea of that made me tingle in lovely, private places.\n\nI really concentrated on one of the posters. I imagined dancing with the woman in it, her arms around my waist. Ooh, those warm feelings were back. Not as strong as when I pictured Taylor, but they were there. I replaced the person holding me in my mind with a guy from the men's team. The tingle went away, and my fantasy self recoiled from his touch a little.\n\nOh, shit. I was going on my first real date in two days. I didn't sleep much that night.\n\nThe next day was Freshman Orientation and Kelsey had volunteered to help. Mom said she could skip it if she wanted, but she insisted on going.\n\nSo I sat home alone, pulling every item of clothing I owned out of my closet and trying them on, modeling for Taffey and my sister's cat Sparkle. I finally settled on an LBD with a pleated skirt that twirled up when I spun around. I knew that would tease her, hopefully driving her a little crazy. I had some black dance briefs to wear with it, not wanting to give too much of a show, and I loved the tight top with the racer back straps. It showed enough cleavage to get Taylor's attention, but not so much as to give my dad a heart attack when I came down the stairs.\n\nThat decision being made I didn't have anything to do but twiddle my virtual thumbs, flipping around social media. I had a few texts from my sisters at EKT, mostly 'can't wait to see you's, but there was one from my best friend Sadie. We'd spent an hour Skyping after my last day at my internship and planning for our return to campus, but I hadn't talked to her since. She was a psychology major, and could read me like a book. If I talked to her while I was this excited she'd know immediately something was up and make me tell her everything. I wasn't ready for that, not yet.",
        "Eventually mom and Kelsey came home, with dad an hour later, and the evening passed.\n\nTuesday morning dawned, and I stayed in bed as long as I could. My dreams had been all over the place. I'd been hiding, and being chased, and trying to find Taylor, who I knew was looking for me. In the end she'd found me, and held me close, my white dress flowing around me in the wind. I'd awoken clutching my pillow like a lover.\n\nI made myself go for a bike ride, and then I went out to a climbing facility nearby. I'd choked down a bowl of cheerios when I got up, but my stomach was in knots by lunchtime, so I didn't eat. Probably not the wisest move, but hey.\n\nI got home around two, with the house completely empty. I went up to my bathroom where my dress was hanging and laid it out on my bed, along with a lacy black bra and a pair of three inch pumps with straps across the ankle. I was just getting ready to shower when Kelsey burst into my room without knocking.\n\n\"Hey, sis.\"\n\nI felt a spike of fear, but gathered myself and tried to sound normal. \"Hey, how was your first day?\"\n\n\"Pretty good, no teachers I know I don't like.\"\n\n\"That's good..\" I saw her eyes go wide as they tracked to my dress.\n\n\"You have a date! Who with? Where'd you meet?\"\n\n\"At the beach.\" I decided not to answer the first, hoping she'd draw her own conclusions.\n\n\"It's that guy, isn't it? The one who bought you lemonade!\"\n\n\"Maybe.\" Or maybe not, but that was as good a fake guy as any.\n\n\"So I almost drown, and you get a date. That is not fair.\"\n\n\"Yup, I gotta shower. You wanna help me with my hair when I'm out?\"\n\nKelsey nodded vigorously and I made my way into the bathroom. I took extra time to clean up my bikini area. Maybe it was presumptuous, but if things went that way I didn't want to gross her out. A vision of Taylor slowly going down on me swam before my eyes, and my legs almost gave out. Was I really ready for that? Could I do it? Maybe, and if so I might as well be prepared. Redoubling my efforts, I left only a small, trimmed triangle above my cunny.\n\nI wrapped my robe around me and set to hair and make up, with Kelsey's help. I opted to clip my hair back, exposing the length of my neck, and letting it fall in my natural waves, assisted a little from a two-inch roller.\n\nIt was after six, and my heart was starting to beat a little faster. I had to shoo Kelsey away so I could get dressed, and I heard her race downstairs to tell mom and dad, who were home now, about my date. Twenty minutes later and my dress was on, and a simple diamond necklace with stud earrings completed the outfit. My reflection looked good, if a little scared. I realized I'd never been this nervous before a date, ever.\n\nI loaded my little clutch with essentials and headed downstairs. It was ten till seven.\n\nMy dad looked up from his laptop. \"Sweetheart, you look lovely.\"\n\n\"Thanks, daddy.\"\n\nMom stepped out from the kitchen. \"So Kelsey says you met this one at the beach?\"\n\nI grinned at her. She really did try to not interfere, but she was my mom. \"Yeah. As far as I know, one, gainfully employed, two, under thirty, and three, very nice. We've already had lunch once. I've got my pepper spray, and I promise I'll be careful. Bye.\" I walked out the front door and checked my phone. There was a text from Taylor saying she'd be there in ten minutes. It'd been sent five minutes ago. I went to the end of the driveway, hopefully far away from prying eyes, and focused on my breathing.\n\nA dull rumble rolled down the street, and around the corner came a motorcycle. Not one of those hot rod styles, but an old fashioned cruiser. Its rider was wearing tight black jeans and a jacket, along with a deep red helmet and visor. My mouth dropped open as the rider approached, slowed and stopped. She reached up, by the curve of her hip I could tell it was a she, and pulled off her helmet.\n\n\"Taylor?\"\n\n\"Hi, you ready?\" She was wearing that little smirk.\n\nI shook my head. \"You ride a motorcycle?\"\n\n\"Yup. I promise I'm a good rider. You'll be fine.\"\n\nThat wasn't the issue. The idea of riding was cool, and the idea of holding on to Taylor as I did was just yummy. There was a problem though. \"Taylor, I'm wearing a skirt.\"\n\n\"So you are. You look beautiful, by the way.\" I blushed as she put down the kickstand and stepped off the bike.\n\n\"Thanks, but I can't ride that in this.\"\n\n\"I know.\" She opened the side compartment and pulled out a large piece of fabric. When she held it up it looked like a large apron. \"Here, tie this around in back.\" As I complied Taylor walked behind me and pulled a section of the material through my legs. I felt her shake it out, and then press herself against me, her arms encircling my waist as my heart rate jumped. Her breath was hot on my ear as she tied the second half around my middle, her hands lingering on my belly when she was finished. \"How's that?\" I shuddered, feeling her closeness throughout my body.\n\n\"It's fine.\" I managed to choke out the words, but I couldn't stop myself from leaning back against her. She tightened her arms around me, making me gasp and put mine over hers. Oh, that felt so nice, resting against her. I felt safe, warm, and happy.\n\nIt only lasted a moment before she let me go and handed me a helmet. \"Ready to go?\" I nodded and she helped me get it on. Below my waist I was now basically wearing very baggy pants, which took care of the skirt problem.\n\nTaylor climbed on and kicked the starter. I took a seat, wrapping myself tight around my date. That felt nice. We started to move, and I gave an excited squeal, which made Taylor chuckle. I wanted to play it cool, but I'd never been on a motorcycle before, and I loved it.\n\nAbout twenty minutes later we were in a neighboring town, pulling into a restaurant whose elegant white sign read 'Caratini's Fine Italian Dining'. We stored the helmets and I took off my riding pants, which also stored in the side compartment.\n\nHer messy blonde hair looked adorable in the fading light. I patted my own, wondering how badly the helmet had mussed it.\n\n\"Don't worry. You still look great, Aly.\"\n\nI smiled and fell in beside her as she turned toward the entrance. After two steps our hands brushed against each other, and I hooked hers with my little finger. She glanced down. \"Really? You sure?\" Her voice was almost shy.\n\n\"Yeah, I mean, if you want, yeah.\" Her only response was that little smirk and her palm sliding firmly against mine. I could feel the warmth of her radiating up my arm.\n\nEven on a Tuesday there were a number of people waiting, both inside and out. That boded well for the quality of food, but not great for us getting a table. Nevertheless, Taylor made her way confidently to the greeter, who smiled up at her. \"Hi, welcome to Caratini's.\"\n\n\"Thanks, um, Taylor Knox, reservations for two?\"\n\nI stood on my tiptoes to look over the counter, where I saw Taylor's name next to a bright red star.\n\n\"One moment, Miss Knox.\" She turned, just as a short, burly man with a big, bushy mustache walked towards the front, a huge smile on his face.\n\n\"Signorina Taylor! Buona sera!\"\n\nHe leaned in and kissed her on the cheek, which she returned.\n\n\"Ah, this is your lady friend, lei e molto bella.\"\n\n\"Mr. Caratini, this is Alyssa. Aly, Georgio Caratini.\"\n\nHis large hands enveloped mine. \"Welcome to my ristorante. You are my personal guests. Come.\" He led us through the restaurant and out the back door onto a patio with about a dozen tables, all full except for one near a fountain where a marble cherub poured an endless stream of water from his jug. On the table a taper burned romantically over a white tablecloth with water goblets, the whole thing very elegant. Overhead were purple and white flowers hanging from an enormous pergola, which covered the patio. It was beautiful. \"Here, here, sit, one of my best tables on a lovely night.\" He handed us menus as a server stepped next to him. \"Jerome here will take care of you.\" He turned towards his employee. \"See they are treated well.\" Jerome nodded, as Mr. Caratini winked at me before bustling off.\n\nI ordered a glass of the house white while Taylor opted just for a Dr. Pepper, as she was driving. As soon as Jerome left I laughed. \"That was something.\"\n\nTaylor laughed, taking a sip from her water. \"It's my boss's fault. She and her wife are regulars here. This is where Jen proposed. I've been here a bunch of times with them.\"\n\n\"You go to dinner with your boss?\"\n\n\"Yeah. She's also my landlord, and my friend, kinda like a second mom. I live in a mother-in-law over their garage.\"\n\n\"Must be hard, having your family live so far away.\"\n\nA dark shadow passed across Taylor's face. \"Yeah, doesn't really matter.\"\n\nI leaned across the table and took her hand. \"I'm sorry. I didn't mean to....\"\n\n\"It's okay. I don't see my family anymore. Their choice, not mine.\"\n\nI sat up and smiled my best smile. \"Alright, change the subject. What'd you study at Pepperdine?\"\n\n\"Art.\"\n\n\"Really? Do you paint?\"\n\n\"I draw some, but mostly I do metal sculpture.\"\n\n\"Really?\"\n\nShe smirked at me. \"Yeah, I know, clich\u00e9d, right?\"\n\n\"No, it's, um, okay maybe a little.\" I laughed, and so did she. It was high and pure, very not what I expected. It was lovely. Jerome dropped off our drinks, and I took a sip from my wine. \"Wow, that's really good.\"\n\n\"Everything here's good.\"\n\n\"What're you gonna get?\"\n\n\"The lasagna. It's transcendent.\" Her face was absolutely serious, which made me laugh. I was afraid I'd offended her for a moment before her mouth spread into a wide grin. She shook her head, chuckling. \"You're something else.\"\n\n\"Why?\"\n\n\"No reason. How 'bout you?\" She pointed at my menu.\n\n\"Oh!\" I realized I hadn't even opened it. I forced myself to look away from her and down at the selections. \"So, should I just get the lasagna like you?\"\n\n\"Nah, you can try some of mine.\"\n\n\"Well I love seafood, so this looks good.\" I pointed to the picture of the fettuccine and shrimp Alfredo.\n\nTaylor grimaced.\n\n\"You don't like shrimp?\"\n\n\"Seafood. Never been my thing.\"\n\nI gave her a stern look. \"How can you live in L.A. and not like seafood?\"\n\n\"Didn't grow up with it. Mom had an allergy to, well, anything new, really. It wasn't dad's favorite either. He thinks real meat comes from a cow or a pig. Maybe a bird on Thanksgiving.\"\n\n\"You have tried seafood, haven't you?\"\n\nShe blushed a little. \"Sure, I mean, we had fish sticks at school, and I went to Long John Silver's once.\"\n\n\"I'm gonna pretend you didn't say that.\"\n\n\"What?\"\n\nJerome came back and dropped off a basket of sliced Italian bread, along with herb infused olive oil for dipping. \"Are you ladies ready?\"\n\n\"Yeah. She wants the lasagna, and I want the shrimp Alfredo.\"\n\n\"Excellent.\" He moved away.\n\n\"You're going to make me try the shrimp, aren't you?\"\n\n\"Absolutely. That way I'm not the only one trying new things tonight.\" I shot her my most coquettish, innocent look. I expected that little smirk of hers, but she just gazed at me, and I couldn't read her expression.\n\nTaylor\n\nGod, she was adorable. I wasn't looking forward to the shrimp, really, but I also knew I wasn't going to say no to her. To me, shrimp looked to be seagoing grubs, like the kind we'd turn up tilling mom's garden every spring. At least it wasn't lobster, which was clearly alien in origin.\n\nBut for her I'd try it. The whole way here, with her arms around me as I rode, my body had felt electric. Looking at her was mesmerizing. I kept up my end of the conversation, but I fought to do it, forever losing myself in those incredible brown eyes. And that shy smile, I couldn't remember a pair of lips I'd wanted to kiss so badly. She was telling me about the internship she'd just completed, how they'd actually let her give some input on the design.\n\nI took a moment to remind myself that she was just a bi-curious college kid, and I was just an experiment she'd tell her forty-something friends about over brunch someday so she could sound like she'd been adventurous and wild in her youth. That's fine, it's the only thing I was good for anyway. I was going to show her a good time tonight, though, satisfy that curiosity for her. Then she'd be gone, whether I wanted it so or not. I laughed at a small joke she made, and her eyes twinkled when I did.\n\nI swallowed a bite of bread. \"We need to hire you to design a new HQ for us.\"\n\n\"That bad?\"\n\nI shrugged. \"I've always thought it could be more like a community and nature center, teaching about the ocean. I remember all the state parks back home had nature centers, where you could learn about local wildlife. It'd be nice to do something like that with the beach.\"\n\n\"That's a great idea, with one of your sculptures standing out in front.\"\n\nI grinned. \"You've never seen one of my sculptures.\"\n\n\"If they're like you they're amazing.\"\n\nI laughed and leaned forward. \"You have a high opinion of me.\"\n\n\"I do.\" She was so close; I wanted to kiss her. I felt like a moth pulled toward a light. Problem is, I reminded myself, that rarely works out well for the moth. Under the table her leg touched mine, sliding slowly up and down. Her eyes held me, and for a moment I was completely lost.\n\nMercifully our food chose that time to arrive, and there was a blessed distraction from the intensity of the moment.\n\n\"Okay, now try this.\" She forked a piece of shrimp and held it out to me. I leaned forward and let her put it in my mouth. Immediately I could taste the garlic and cheese sauce, and I bit down on it. I'd expected it to be chewy and earthy, but it wasn't. Instead it was crisp and sweet. I actually liked it.\n\nAly could read my face. \"I told you. Sometimes things are surprising.\"\n\n\"I guess they are.\" I held out a piece of my lasagna for her, and the way her face relaxed in pleasure when she took it in sent a shiver down my spine. Her leg rested against mine, a constant, glorious reminder of her physical presence.\n\n\"That's amazing.\" I couldn't help smiling at the breathy nature of her voice. Heaven above, I wanted to hear her come. She gave me another shrimp, and I gave her another bite of my lasagna. We shared several more, laughing and giggling as we did. I'm sure we were getting stares, but I didn't care. The tough chick persona I always carried with me slipped away for a beautiful half an hour. I couldn't remember the last time I'd laughed this much.\n\nI even told her some stories about my childhood, like my brother getting shocked leaning against an electric fence on my grandparent's ranch in Montana. I almost never shared like that. After I did the pain came back at the end, and she noticed.\n\nOur plates were clean, and I was sipping a glass of water. She was looking down, as if deciding whether to say something.\n\n\"Taylor, why don't you like to talk about your family?\" I could feel my body stiffen up at the question. She leaned forward quickly, putting her hand on mine. \"You don't have to answer, but I'd like to know.\"\n\nI shrugged, looking down. \"Not a lot to say really.\"\n\nAly squeezed my hand. \"That's not true. You don't have to lie to me.\"\n\nI tried to pull my hand away. \"No, I can just unload on a rich girl from the coast, with a perfect life and perfect family. You have no idea what my life is like.\" I winced as soon as I said it. That wasn't fair, but she was getting a bit close. But she didn't pull away. She didn't even let go of my hand.\n\n\"No, I don't. And I can't, unless you tell me.\"\n\nI took a breath. \"We were happy, mostly. I was the fourth of five, two brothers and two sisters. My parents were at least good to each other, I guess, and they loved us, when we were going, at least. Took us to church every Sunday, holidays with grandparents. They were, are, really prejudiced though, talking about gays like they were evil. I didn't question it. And then I turned thirteen.\"\n\n\"And you realized you were different?\" She squeezed my hand.\n\nI nodded, my eyes starting to burn with tears. \"I'd been swimming for years. In the showers afterwards, girls were getting breasts and hips, and I couldn't help looking. I got called out on it once, but I was able to laugh it off as envy. From then on I was terrified. Everything my friends were talking about with guys, I was feeling about girls. My parents couldn't find out, so I hid from everyone. You wouldn't recognize pictures of me from high school. I kept my hair long; let my mom buy me girly clothes. I even wore makeup, just a little. My parents weren't keen on any of their daughters dating, so luckily they didn't push me on that.\n\n\"Anyway, I got a scholarship to come here, which my mother did not want to allow, I'm sure she feels justified in that now. I met a girl, we decided to live together during my junior year, she was a year ahead. It felt real to me, so I came out to my parents. I haven't seen them since.\"\n\n\"I'm so sorry. And the girl?\"\n\nI shook my head. That still hurt.\n\n\"Ok, no more sad stuff.\" Her leg slid up mine, shaking me out of my doldrums. \"I believe you said something about dancing?\" She smiled coquettishly, and I couldn't help but return the grin. I waved Jerome over and settled the bill. As we began to walk away her hand slipped back into mine. Was she oblivious to the looks we were getting? Gillian had never acted like this. She'd always been put off by PDA's. But Aly... a first date and she was fine holding my hand in public. Mr. Caratini waved to me as we left, shooting me a wide grin, his eyes twinkling.\n\nOnce we were back on my bike I tried to organize my thoughts, which wasn't easy with Aly's arms wrapped around my waist and her breasts pressing into my back. That was a hell of a dress she was wearing. I wondered how many times she'd caught me staring at her cleavage, especially when she'd leaned forward over the table. I know she had, because she'd started doing it more as the meal went on.\n\nNo, damn it. I shook my head. That wasn't helping. Why had I been telling her my life story? I barely knew her, and she'd be gone after tonight anyway, no matter what I wanted. Wake up, Taylor. Take her dancing; show her a good time.\n\nI was heading down into the valley, where there were several lesbian clubs I knew of. One in particular had good music, but wasn't a total meat market. There was no line on a Tuesday night so as soon as we parked the bike we headed inside.\n\nHer hand slid easily inside mine again as we entered. Why did that feel so good? The three hundred pound bouncer checked both our IDs, but Aly barely noticed him. Instead, she was looking around like a kid in a candy store. No, that wasn't right, there was definitely a note of apprehension in her eyes. And she was gripping my hand a bit. I led her to an open table.\n\n\"How're you doing?\"\n\n\"Terrified. Excited.\" She was staring out onto the floor, where women were gyrating to an intense beat. One couple was deep into a passionate kiss, their legs interlocked and weaving a sensuous rhythm. Aly was moving gently in her chair.\n\nA waitress sporting black hair interwoven with vibrant stands of blue and purple locks arrived at the table. \"Hi, ladies. What can I get'cha?\"\n\n\"Can I get a rum and coke? What do you want, Aly?\"\n\n\"Martini, double.\" The girl nodded and walked away.\n\n\"A double, huh?\"\n\nAly nodded toward the dance floor. \"If I'm going to do that, yeah.\"\n\nI put my hand on her shoulder, electric shocks running up my arm as I touched her skin. She looked at me with those big eyes, and my heart swelled inside me. \"You don't have to.\"\n\n\"Yes I do.\"\n\n\"Aly, you really don't. I can take you home.\"\n\n\"No! No, I don't, um, I don't want to go home.\" Our drinks arrived, and Aly immediately took a long pull from hers. \"I wanted you to take me out, and um, and I want to dance. With you, I mean.\"\n\nI smirked at her, and she seemed to shudder for a second before grabbing my hand. \"Come on.\" Her eyes were a heart melting mix of fear and determination. I couldn't help but laugh inside. She was magnificent, tiny and fragile looking, but full of strength and fire. The DJ was getting their techno on, a driving, pulsing beat greeting us as we reached the floor. Aly's arms snaked up over her head, her hips swaying back and forth. My mouth went dry.",
        "My hands went to her waist, pulling her gently towards me. Her big brown eyes looked up through their long lashes as her body melded to mine. I picked up her rhythm quickly, one of my legs sliding between hers. Her arms twined in the air for a moment longer before descending behind my head, her right hand holding on to the back of my neck while the left raked through my hair and then down my cheek. I felt a growl escape my chest as I pulled her in tighter, her breasts pressing in just under mine.\n\nMy right hand moved up between her shoulder blades, and she leaned against it, bending back at the waist, turning in a slow semi-circle. The move exposed the length of her neck and amplified the cleavage showing from her dress. My libido purred at the sight. She straightened up, lifting a leg and pressing her thigh against my hip.\n\nHer hand held my shoulder and she dipped again. This time I brought my free hand to her throat, trailing it down over her chest and between her breasts. Her eyes opened and looked into mine.\n\nI don't know how many times I'd done this, dance with a girl, hold her close, drive her crazy, then back to my place where I'd, well, satisfy her curiosity. And then in the morning they'd be gone. Since Gillian, that was what I did. It was safe, and no one got hurt, especially me.\n\nAnd for the first time since Gillian, I didn't want that.\n\nAlyssa\n\nOh my God, this felt amazing, her arms around me. Before, dancing had always been, well, just awkward. This wasn't awkward; this was wonderful. I knew there were other women dancing around me, but my whole world had shrunk to just Taylor. The way we moved together, how my leg slid against her hip, the way she smelled, she was perfect. The music stopped, which was jarring in and of itself, but I just kept holding her. I didn't want to pull away.\n\nThe music started again, this time soft and slow. She looked down at me. \"Do you want to go back to the table?\"\n\n\"No.\" I laid my head on her shoulder. \"No, I don't. Dance with me.\" I pressed myself against her, feeling her arms tighten across my back. She began to sway in time to the music, and I let myself ride against her. It was heaven. I felt, I don't know... like a woman instead of a kid, if that made any sense. I could smell her cologne, mixed with the sweat from her skin, and it was heady beyond words.\n\nWhen the music finally stopped we walked back to our table, and I sipped my drink. I didn't let go of her hand, not for a moment.\n\n\"Having fun?\" Taylor was smirking at me, and I couldn't help but smile and blush.\n\n\"Yeah.\" I swung her hand back and forth. \"Best date ever. You?\"\n\nShe laughed once, and maybe a little color in cheeks also. \"Yeah.\"\n\n\"So is this how you seduce all your dates?\"\n\nThat flustered her a bit. It was cute when that happened. \"Aly, I\u2014\"\n\nI leaned forward and cut her off. \"I'm sorry, Taylor. I really am having a wonderful time.\" Her face was inscrutable, but one thing was for sure, her eyes never left mine. I met her gaze, running my thumb over the back of her hand. Steel blue, her eyes held me, and I wanted nothing more than to lose myself in them forever. And those arms, I wanted them around me. I wanted to fall asleep in them, and wake up in their strength.\n\n\"Taylor, dance with me some more?\"\n\nShe didn't say anything, just rising and lifting me to my feet. We moved back to the dance floor. She turned me, arms wrapping around my waist from behind. My hand slid up behind her neck, and she leaned down, planting fairy kisses along my shoulder. And we danced, her closeness filling every part of me. I wanted to be hers tonight. I let myself dream of what was coming. She was going to take me to her bed, and I was going to let her. The thought scared the hell out of me, but I wasn't going to say no. I wasn't sure I'd ever be able to tell her no.\n\nThe thought of her stripping me, laying me down, kissing my body, it made me grind against her. I could feel my excitement leaking into my panties, something that had never happened to me before on a dance floor, and I was very glad I'd chosen to wear something more substantial than a thong. And it wasn't just that, my whole body seemed to tingle while Taylor was holding me.\n\nAs the music thrummed through me I lost track of time. Eventually, during a slow song Taylor whispered in my ear. \"Aly, it's getting late.\"\n\n\"Mm-hm.\" I didn't take my head off her shoulder, but my heart started beating a little harder.\n\nI gathered up my bag while Taylor settled the tab, and a few minutes later I was holding on to her as we pulled out of the parking lot. She'd been quiet as she'd helped me get ready for the ride, and I realized that we hadn't kissed on the dance floor, at least not on the mouth. There had been plenty of kissing going on around us, but not us. Did she not want to kiss me? Maybe I was imagining this whole thing, maybe she wasn't attracted to me at all, maybe she truly was just humoring me.\n\nOnce we got on the road my heart started to sink. I wasn't sure where she lived, but as each moment passed I was more and more sure where we were headed. She was taking me back to my parents. She didn't want me.\n\nBy the time we entered my neighborhood I was in tears. Nearing my house, I fought to control my emotions, since the last thing I wanted was her to see how upset I was when my helmet came off. But I hadn't been able to even wipe my eyes, so I knew my makeup had to be a mess.\n\nShe puttered up to my family's gate. As she shut off the engine and kicked down the stand I hurriedly pulled off my helmet and wiped my eyes. Our motion activated flood lights kicked traitorously on, and I kept my face away from her as I untied my riding pants.\n\n\"Aly, you OK?\" I tried to nod as Taylor undid the back tie. I pulled them through my legs and folded them over my arm. Her hand rested on my shoulder and turned me around. Given the look of concern that spread over her features when she saw me, it was worse than I'd imagined. \"Were you crying?\" She brushed my hair back, while I stared determinedly at the pavement.\n\nI felt her fingers slide under my chin and lift my face, my brown eyes meeting hers, which looked grey in the darkness. I tried to find my voice but I couldn't.\n\n\"I don't want to leave you here crying. Did I do something?\"\n\nHer blaming herself was too much. \"No! No, I just...\" I swallowed hard. \"I don't want it to be over.\"\n\n\"It's not quite over yet.\" Her mouth lowered, and I lifted up on my tiptoes to meet her. Her lips closed over mine, and I whimpered into her as my whole body exploded with electricity. I opened to her, and our tongues danced together as her arms pulled me tight into embrace. I'm pretty sure my leg actually kicked up like in old movies. She tasted like the rum and coke she'd nursed throughout the evening, and also something else, that unique flavor that was just, well, her. I think I loved that flavor.\n\nWe kissed for an all too short eternity, and I couldn't even begin to explain what I was feeling, I just knew I needed more of this. I could feel her hand in my hair, holding me gently to her, and more than anything I wanted to be hers in every way.\n\nEventually Taylor released my lips and we stared at each other, her hand still caressing my scalp. I leaned into that, resting my head on her palm.\n\n\"You're a great kisser, Taylor.\"\n\nShe smirked at me. \"I'm glad you approve. Does that mean I get to see more of you sometime?\"\n\nMy heart was soaring, and I felt my playfulness starting to return. \"Yes, please.\" I fiddled with the collar of her jacket. \"Y'know, you could have seen more of me tonight, if we'd gone to your place.\"\n\n\"Got to leave you a reason to come back for more.\"\n\nI stared as intently into her eyes as could. \"I think I want that more.\" I ran my fingers over her cheek as I said it, and I could see a shudder run through her as my words registered. She was looking at me like she wanted to devour me, which made me shiver in all the right ways.\n\nTaylor stroked my cheek. \"What are you doing tomorrow night?\"\n\n\"More? With you?\"\n\n\"Six o'clock, my place. I'll cook.\"\n\n\"It's a date.\" I lifted my face for another kiss, and Taylor provided an amazing one. She was so strong, but her mouth was perfectly soft.\n\nAfter a minute her lips moved up my jaw line until she nibbled for a second just under my ear, which made me go weak at the knees. \"I'll be counting the minutes.\" With that she stepped away and replaced her helmet, and moments later she was puttering down the street. I waited until she was out of sight before going inside, dancing as I went.\n\nTaylor\n\nI always knew when the time was right, the perfect moment to ask whatever little femme I was dancing with to come back to my place. That moment had come tonight, and I'd let it go. Instead I'd taken her back home, where I knew there was no chance of her inviting me in.\n\nAs I was driving my libido was warring with my decision. I'd never felt like that on the dance floor, so completely connected to someone, and she'd been totally into it. But I didn't want her first time to be an exhausted tumble at two in the morning. I knew I could make it good. With her, though, I wanted it to be great. So great she'd want it again, and again.\n\nThat was it. For the first time since Gillian I'd met someone I wanted to see again. What was so special about her? God, well, those eyes, I could look at them forever. Yeah, I mean, sure, she was beautiful. A lot of girls are beautiful, more beautiful even, by the world's standards, anyway. So why was Aly different? Her face floated in front of my mind's eye. I saw her smiling at me across the dinner table. I saw her terrified as I carried her sister to shore. I saw her soft with longing as we danced close.\n\nMostly, I saw her. To hell with the world, she was beyond beautiful. Every emotion shone with genuine earnestness, and she exuded a na\u00efve strength that I just didn't understand, but was so attractive that it made me crazy. She was a rich girl, college, sorority, maybe life just hadn't bitch-slapped her enough yet. By all rights that should just piss me off, so I could revel in the schadenfreude when it finally did. Yeah, rich or not, life would come for her eventually. And I didn't want to let it.\n\nI made it into bed, staring at the ceiling. No matter how I felt, she was probably still just curious. Letting my imagination run away with things that weren't going to happen, there lay the path to madness. But I'm just human. I rolled over and pulled the sheet around me, and for a moment Aly was there next to me. The look on her face was one of love and happiness. My eyes burned with tears, it was how I'd always imagined my partner would look at me. I wanted that look. I wanted it so badly I'd seen it with Gillian when it wasn't really there.\n\nI closed my eyes and banished the image, not without effort, and forced my mind to think about something else. What was I going to make? What would she like? As I pondered ideas, sleep finally found me, and before I knew it, morning was pouring its light in through the window.\n\nOnce out of bed I pulled off my T-shirt and put on a sports bra before loading my favorite Tai Chi video. I let the movements flow through me and calm my mind. It took longer than usual, but eventually the tranquility of the forms penetrated and I felt better.\n\nAfter a quick shower I grabbed my phone and found Vicky's icon in my favorites.\n\n\"Hey, queijadinha, how are you?\"\n\n\"Really good. You home?\"\n\n\"Actually yes, my shoot isn't till Thursday. What's up?\"\n\n\"Can I come down and raid your cookbooks?\"\n\nI heard her tone brighten suspiciously. \"Sure. Why?\" I hemmed and hawed for a moment. \"Who are you cooking for, Taylor?\" Silence for a few more seconds. \"It's a girl, yes? It is, ah Dios Mio, that's wonderful. Tell me about her.\"\n\n\"Fine. I'm making dinner for someone, and I want it to be special.\"\n\n\"Okay, okay, eeee.\" I could actually hear her flapping her arms in excitement. \"Come down, come down, I'll make the coffee.\"\n\nAlyssa\n\nBy the time I opened my eyes the next morning it was after ten. My phone's screen went dark as I glanced at my bed stand. I grabbed it to see what had lit it up in the first place. It was a text from Taylor. Yippee!\n\nTaylor -- Morning, beautiful, sleep well?\n\nI kicked my feet under the covers, making Taffey jump down with a mewl of protest. \"I'm sorry, sweetie. Look, Taylor thinks I'm beautiful.\" My calico hopped back up and settled on the pillow next to me while I scratched her head.\n\nAly -- Yeah, thinking about you.  What'cha doin?\n\nTaylor -- Planning for tonight.  Do you like curry?\n\nAly -- Sure, sounds great\n\nTaylor -- Perfect, see you soon  \n\nShe followed that with a text including her address. I held my phone close to my chest and listened to my heart beat fast as I thought about what was going to happen this evening. I remembered kissing Taylor last night, and I ran my fingers over my lower lip, which tingled at the touch. I let my hand run down over my neck, gasping at the sensation. Tonight it would be Taylor's hands and Taylor's lips, and I had to stop now. My hands were starting to play over my body, and if I didn't reign myself in I was going to masturbate right on my bed, and I didn't want that. I wanted to be fully primed tonight.\n\nI'd lost my virginity on prom night. I'd planned for weeks leading up to it. I'd been nervous and excited, dropping hints to my boyfriend that I was ready. Of course, it had ended up being a huge disappointment. Ryan hadn't known what he was doing anymore that I did, and those things that my friends had talked about, the tingles that came with his kisses, the wetness getting me ready for his penetration, none of them happened. It had been hurried, uncomfortable, and mercifully brief. Apparently Ryan had loved it, just gushing about it afterwards, but it'd left me hollow.\n\nI was feeling like that again, nervous and excited, but somehow I knew this wasn't going to be a disappointment. I responded to her in a way I never had before. I decided I wanted a bath, so I went over to my mom's big soaker tub and did the whole nine yards, bath salts, bubbles, scented candles. I even washed in the shower before I got in. It took a force of will not to get myself off while I did it, but somehow I managed. I soaked for almost an hour, scenarios for tonight running through my mind. How would she take me? Would she use toys? A strap-on? I was sure she'd go down on me, something that made me crazy thinking about it. I'd never experienced that before, none of my boyfriends had ever been willing.\n\nOne of Sadie's guys had done it to her, and she almost shook when she told me about how amazing it was. I was going to do it to Taylor too, if she let me. I'd never been brave enough to taste myself after jilling off. What would it be like? Oh, God, I wanted to know.\n\nI finally climbed out of the tub and cleaned up, and it was after one o'clock by the time I was back in my room, staring out my window, wrapped in my soft cotton robe. My phone rang, and I picked it up and looked. I felt a spike of fear that it was Taylor calling to cancel, but wasn't, it was Sadie. I probably shouldn't have answered, but I'd been dodging her calls since Kelsey's accident.\n\n\"Hello.\"\n\n\"Ms. Vice President, greetings.\" Her voice was deep and serious, a total put on.\n\n\"Oh, stop it.\"\n\n\"Don't blame me, you're the one who ran for office.\"\n\n\"I told you, it looks good on a resume.\"\n\n\"Maybe, but instead of just enjoying our senior year, you have to be all responsible and stuff.\"\n\nI huffed at her. \"It's not too bad. Besides, you're the recruitment officer.\"\n\n\"Yeah, so while you have to make sure we have enough pretzels and that the alcohol stays hidden, I get to plan out how to torture the pledges. Advantage me.\"\n\nI giggled. Sadie and I had been randomly assigned as roommates our freshman year, and we'd been instant best friends. We'd rushed EKT together, roomed together throughout college. We talked about everything, guys, families, sex, hopes and dreams. I'd never met anyone who could read people like Sadie. She was going to make an amazing psychologist someday. I'd never been afraid of that ability in her. At least, until right now.\n\n\"So why've you been ghosting me, roomie?\"\n\n\"I'm sorry, a bit of family drama. Kelsey almost died.\"\n\n\"What!?\" I gave her a brief recap of what had happened. \"Holy crap, Aly, why didn't you let me know?\"\n\n\"I thought about it a bunch, but then I'd get distracted or something. I'm sorry.\"\n\n\"I'll forgive you this time. You said she's alright.\"\n\n\"Yeah, she's fine, didn't even miss a day of school.\"\n\n\"Ok, so what else. Meet anybody interesting since you've been home?\"\n\n\"Interesting? Who could I meet here?\"\n\n\"In L.A.? Gee, let me think. And that is not a denial.\"\n\n\"Sadie....\"\n\n\"Alyssa, have you met someone?\"\n\n\"Actually I have a date tonight.\" I heard her squeal on the other end of the connection.\n\n\"Ok, details Name?\"\n\n\"Taylor. Actually, it's one of the lifeguards that rescued Kelsey. I went back to say thank you, and well...\"\n\n\"Oh my god, a little gratitude tumble for the hero, huh?\"\n\n\"I'm kinda hoping for more than that. And you know that problem I have with guys?\"\n\n\"Yeah?\" She knew all about the troubles I had getting aroused during sex. Like I said, we were close.\n\n\"I don't think it's a problem this time.\"\n\n\"That's awesome!\"\n\n\"I mean, we haven't done much yet but kiss.\"\n\n\"You've kissed him already? And?\"\n\nI pulled my legs up to my chest and giggled. \"It was amazing. Just...wow.\"\n\n\"You got tingly all over, especially in happy, fun places?\"\n\n\"Oh, yeah.\"\n\n\"So is he totally ripped?\"\n\n\"Lifeguard, duh. So when are you coming into town?\" Subject change. Sadie was from Dallas, which was a solid twenty-hour drive.\n\n\"Sunday. Can I crash at your pad?\"\n\n\"Of course.\" The sorority house wouldn't be open until Monday, so we could help each other move in.\n\n\"Good, maybe you and Taylor can take me and Noah for dinner.\"\n\nI tried to keep the nervousness out of my laughter. \"We'll see. I've really gotta get ready. I'll see you then, okay?\"\n\n\"Are you trying to hustle me off the phone?\"\n\n\"Yup. Bye. Love you.\"\n\n\"Fine, love you, too, girl.\"\n\nI disconnected with a sigh of relief. I wasn't sure how long I could keep it up with her; she was seriously like a bloodhound if she got even a whiff something was up. Unlike yesterday, I had an easy time picking out an outfit this time. A grey, long sleeve, off the shoulder crop top with a pleated, button-down denim skirt made up the outfit, with a lacy white thong and strapless bra underneath. The skirt was several inches above my knee, so I went with white knee socks and black canvas tennies.\n\nI twirled in my mirror. The tight top really accentuated my breasts, and left plenty of kissable skin visible, and the skirt with socks flashed just the right amount of leg. A vision of Taylor's hand sliding up under my skirt sent a wickedly pleasurable shiver down my spine and directly into my pussy. Oh, I couldn't wait for this. Google maps told me it was going to take about twenty minutes to get to Taylor's house. Wait a second, if I was going to stay the night, what would I wear in the morning? No walk of shame for this girl, so I threw together an overnight bag, underwear, jeans and a T-shirt, another nicer blouse, in case things went really well.\n\nI came downstairs and my mom was sitting at the kitchen table, talking to a client while my dad sat next to her working on his laptop.\n\n\"Hey guys.\" I set my bag down by the base of the stairs.\n\nMy dad looked up and waved while my mom finished her call. I sat down at the table.\n\n\"All dolled up again, huh, sweetie?\"\n\nI blushed. \"Yeah, dad.\"\n\n\"You gonna come home tonight?\"",
        "\"I don't think so.\" When I went to college my parents admitted to me and themselves that they couldn't control where I spent the night. The only rule was if I wasn't coming home when they were expecting me that I let them know.\n\n\"You're going to be safe, right?\"\n\n\"Yeah dad, I'm very safe. Here's the address.\" I didn't have to give it to them, but it made them feel better. They also could track the location of my phone and my car was lo-jacked, so hopefully that helped with their anxiety. As weird as it was to have your parents know you were planning to get laid on a given night, they really did try to stay out of my business. And if something ever did happen, I'd want them to be able to find me.\n\nFinally it was time. I climbed into my Mini Cooper, dropping my bag into the front seat and punching Taylor's address into the GPS. Concentrating on the directions helped distract me from where I was going to end up.\n\nEventually I found myself turning into a nice neighborhood with mature trees and interesting, non-cookie cutter houses. The lady that lives in my GPS announced that I had reached my destination, and I turned into a short driveway before a three-car garage. I parked on the far left, just like Taylor had instructed, and found the exterior stairs on that side.\n\nAs I climbed the steps, it felt like the air was getting thicker, and I held my breath as I reached the top landing. I pressed the button, hearing the chime inside. Footsteps, and the door opened, and I couldn't help the silly grin that spread across my face as Taylor's handsome visage appeared in the doorway. Her normally messy hair was styled and parted on the left. The look made her blue grey eyes just pop, and I felt my breath catch as they traveled over my body.\n\n\"God, Aly, you look incredible.\"\n\nHearing her voice snapped me out of my trance and I posed for a moment. \"All for you.\"\n\nShe smiled, a real, happy smile instead of that mischievous smirk. I really loved them both. Finally she stood aside. \"Please come in, dinner's almost ready.\" I picked up my bag and stepped inside, setting it down just inside the door. Taylor's eyes traveled over it but she didn't say anything as she closed the door behind me.\n\nShe was wearing an \"Artists do it with Flair\" apron over a silky patterned button down shirt and what looked to be a nice, tight pair of black jeans. She put her palm against my cheek for a moment before sliding her hand behind my neck and covering my mouth with hers. If I'd thought any of the magic of last night's kisses had been due to alcohol, or the lateness of the hour, that idea was wiped away as the energy of her flowed through me as her lips moved over mine.\n\nI stepped away. \"It's good to see you.\" I could see the lust in her eyes, and the way she was looking at me made me almost shudder with pleasure. But I was hungry, and as I inhaled, the smell of turmeric and other spices filled my nose. \"That smells incredible Taylor. You are going to feed me, right?\"\n\nShe shook herself out a trance. \"Oh, crap!\" She dashed back into the kitchen, and I followed her, smiling. Her apartment was painted in a light, sea blue with white accents. There were a couple of small metal sculptures around, a few pieces of art on the walls, mostly showing seascapes. There were no pictures of other people that I could see.\n\nI followed Taylor into the little galley kitchen, where she started frantically stirring a skillet. I giggled at her and sat up onto a barstool by the counter. \"Can I help at all?\"\n\n\"No, I got it.\" She scooped a golden yellow concoction into a blue ceramic bowl, and took another pot off the back burner and lifted the lid, allowing steam to escape into the room. That turned out to be rice, and she put lids on both as I followed her over to a small dining table that had a salad bowl already sitting on it.\n\nShe pulled out my chair for me, so chivalrous, and scooped me up some salad as I placed my napkin in my lap. \"Cool apron.\" I smiled up at her, and she looked down, embarrassed.\n\n\"Sorry.\" She stripped it off and hung it up before taking her own seat.\n\n\"It's okay, I kind of like you all domestic. The big, bad, butch in an apron. It's sexy.\"\n\nShe smirked at me and served herself some salad. \"So when do you go back to school?\"\n\n\"Move in day for officers is Monday. My best friend will be here Sunday, she'll stay the first night with me at my house, then we'll go over in the morning.\"\n\n\"Officer?\"\n\n\"Yeah, I'm the vice president this year. Sadie's the recruitment leader.\"\n\n\"So you live in the sorority house, bra and panty pillow fights and all?\"\n\nNow it was my turn to smirk. \"I've been in the sorority for three years, and would you believe I've never been in a pillow fight, underwear clad or otherwise?\"\n\n\"You're ruining the fantasy of millions of frat boys, you know.\"\n\n\"My apologies. Reality is, our sorority isn't one of the crazier ones.\"\n\n\"Tell me about it.\"\n\n\"Well, academics are really important, everyone has to maintain a two point eight to be active, and most of the girls have well above a three. No guys overnight. It's pretty diverse too, not lily white like some of them.\"\n\n\"Any lesbians?\"\n\n\"You mean other than me?\" That got a look from Taylor while I thought about it for a moment. There weren't any that I was aware of. I'd be hopelessly na\u00efve to think we'd never had one, or at least someone who came out later, but would we accept a pledge from an out and proud lesbian? I think the answer might be no. I poked at my salad. \"No, I don't think so. Were you in a sorority at school?\"\n\n\"Me? No. The team was like a sorority, I guess, we kinda all lived together in the dorms.\"\n\n\"Is that how you met your girlfriend?\"\n\nShe shook her head. \"There was an LGBT group on campus. I'm not even sure they were official, Pepperdine is a Catholic school. Anyway, when I was a sophomore I finally plucked up the courage to go. She was there, kinda took me under her wing.\" She heaved a sigh. \"Why do I always end up telling you my life story?\"\n\n\"Because I'm adorable and disarming. And I'm really interested in you.\" Her face was inscrutable for a moment, before breaking into a wide smile that melted my annoyance.\n\n\"You're something, you know that?\"\n\nTaylor\n\nShe'd called herself a lesbian. Sort of, at least, I guess. Some part of me was doing a little happy dance, but I didn't want to read too much into one sentence. \"So what would your sorority sisters say about where you were last night? Dancing with a butch at a lesbian club. Letting her put her hands on you.\"\n\n\"I'd have them gathered around, that'd be sure.\" Aly blushed and looked down. \"Some of them would be titillated, I think, but I don't know. It's one thing to have a crazy experiment or a wild night. It's another thing to, well....\"\n\n\"To what?\"\n\n\"You understand that you're not just an experiment to me, right?\"\n\n\"Sure I am.\" It's all I ever am.  \"But sometimes experiments go right.\" I smelled the air, where the curry hung heavy. I reached over and grabbed the serving spoon. \"Speaking of experiments.\"\n\nThe curry was amazing (thank you, Vicky) and the conversation got less intense as we ate. God, it was so easy to talk to her. Her gentle smile, her easy blushes, they put me so at ease. I'd never met anyone who felt so genuine. She told me about family vacations to Glacier or Yosemite, and I told her about hiking through the mountains, kayaking on the whitewater. She was getting more perfect by the minute. A rich girl who loves the outdoors? Most of the girls like her I'd met thought the outdoors were the places you had to go to get to the next boutique in an open air mall.\n\nAly scooped up the last bits of rice and sauce from her plate and licked it off her fork, her eyes closed, which was insanely hot. \"That was amazing Taylor. A girl who can cook? Be still my heart.\"\n\nI smiled at her, which made her blush, but not look away. She stood up and picked up her plate. \"Can I help you clean up?\"\n\nI rose and stepped toward her. \"In a minute.\" I took away the plate she was holding and set it back on the table. My hand went around her waist and I pulled her to me, capturing her lips with my own. She gasped as I did, but she kissed me back almost immediately. I let the kiss deepen, our tongues dancing together. Her hand was soft on the back of my neck as she gave herself over to our embrace.\n\nI released her a moment later, and the look of disappointment and longing in her eyes almost melted my heart. This girl wanted me, and God help me, the feeling was mutual. \"Come on, dishes.\" I nodded toward the kitchen. We spent some time cleaning up. It was odd, a simple domestic chore, and we did it together, handing things to each other, her hand on the small of my back as she passed by. I loved it. Once the dishwasher was humming merrily away I felt two lovely arms wrap themselves around my waist from behind.\n\n\"All clean, what now?\" A soft head rested on my shoulder blade, and I covered her hands with mine.\n\n\"Find something on Netflix? Cuddle on the couch?\"\n\n\"Mmmm, that sounds nice.\" She squeezed me once and let go.\n\nI walked over to the living area and sat down in the corner of the couch with the remote.\n\nWe settled on an action flick, the latest Tom Cruise Mission: Impossible movie. I pulled out a bag of microwave popcorn, and soon we had a brimming bowl of cheap, buttery goodness. I set it on the side table by the couch and settled in, Aly insinuating herself between my legs and leaning back against me. My arms slipped around her middle and she snuggled in, her eyes were bright and happy. And I was staring at her.\n\nShe looked back over her shoulder at me, blushing a little. \"What?\"\n\nI shook my head. \"Nothing.\" I pulled her a little tighter and kissed her temple, which brought a little coo of pleasure. God, she made the cutest sounds. I couldn't wait to hear more of them.\n\nI pulled a blanket around us as the movie started, our bodies moving together in small ways, shifting on the couch, reaching for popcorn, readjusting our cover. It was incredible, so natural, like we'd been doing this for years. I fit perfectly around her, and I couldn't stop watching her, her little laughs at the funny moments, the ways her eyes got wide during scary parts.\n\nSoon enough the movie was over, and our popcorn bowl was empty. Her arms covered mine and I pulled her tight. She leaned back against me, sighing as I nuzzled her soft brown hair. She smelled so good.\n\nI whispered in her ear. \"Aly, what do you want tonight? What do you want this to be?\"\n\n\"What do I want?\" She pushed the blanket off, turning and straddling my lap. Leaning in close, she ran her fingers through my hair. I could feel my heart pounding in my chest. \"I want you to make me yours. I want to be yours tonight.\"\n\nHer mouth found mine, it was electric. I could feel it in my toes and tingling through my hair. Our tongues danced together. The smell of her, the sound of her gentle sighs, the feel of her skin, they all filled me. My hand ran up over her knee socks to the soft skin of her thighs, slipping under her denim skirt. I gripped her bare cheek and she moaned directly into my mouth, which was sexy as hell.\n\nI rolled her down onto the couch so I was on top, her legs wrapping around my waist as we continued our kiss. Her hands ran down my back and over my butt, before coming back up over my jeans and pulling my shirt free. I sat up, running my fingers slowly from her neck down to the hem of her skirt, Aly pushing her chest up to intensify the contact.\n\nHer hands went to the first button of my shirt, undoing it before slowly working her way down. As soon as she'd finished she pushed it back, and as I peeled the top off my arms. She leaned forward and began to plant little kisses on my sternum as she ran her fingertips over the skin of my back.\n\nShe slipped one under the strap of my bra and ran it up over my shoulder. \"I thought all self respecting butches only wore sports bras.\"\n\nI looked down to hide a blush. \"Actually, I usually do, but I wore this special for tonight.\"\n\nShe smiled, her fingers trembling as she reached around and unclasped my bra.\n\nI shrugged it off. \"I'm not usually the one topless first.\"\n\n\"Is that okay?\"\n\n\"Oh yeah.\" And with that I pulled her forward and she took one of my nipples into her mouth, beginning to give it gentle licks and nips. It felt incredible. One she started here was no hesitancy, no insecurity in this one. Why not? I pushed her away, and she looked up at me with pure, innocent longing and the most adorable smile I'd ever seen.\n\n\"Bed?\"\n\nI nodded and stood, pulling her to her feet. \"But first....\" I lifted her arms over her head and pulled her top off. Her bra followed. \"OK, now we're even.\"\n\nI took her hand in mine and led her to my bed. She crawled onto the mattress, letting her breasts sway beneath her before rolling onto her side. \"What are you going to do with me now?\"\n\nHer voice was innocent and beguiling and I wanted her. I moved forward, climbing up next to her on the bed. \"What am I going to do?\" She bit her lower lip and nodded, eyes wide. \"I'm going to make you feel so good. You're going to come so hard you're going to feel it for days.\"\n\n\"Really?\"\n\n\"Yeah.\"\n\nAly's eyes were wide as she stretched on the bed, making my breath catch. \"Okay.\"\n\nAlyssa\n\nMy heart was pounding inside my chest. I was trying to play it cool, like I'd done this a million times, well okay, maybe not a million, but you understand. She was so beautiful. Her breasts weren't small or large, just perfect for her body. The feel of her nipple in my mouth had been so heady I was still spinning from it.\n\nAnd now she was looking at me like she wanted to consume me. I'd sort of seen this look before, but this was different. She wanted me, but it didn't scare me, like with my boyfriends. I knew, deep down, that she was going to take care of me, and I was almost desperate to give myself to her, to show her I'd do anything for her.\n\nTaylor crawled across the bed toward me, and I rolled onto my back as she covered me with her body. A sigh escaped me as her mouth captured mine. I gently scratched my nails down the smooth skin of her back, making her moan and deepen our kiss. Her lips were turning my insides into goo, and I just wanted more and more. She sucked my lower lip into her mouth, running her tongue along it, making me moan as I sank back into the pillow.\n\nTaylor released my lip and kissed down over my chin, starting to suckle my neck. My hand found my way into her surprisingly soft hair, holding her to me. God, I didn't know it could be like this. I could feel the wetness forming under my panties. My legs parted and her thigh slipped in between, pressing against my sex. My hips lifted, rubbing myself against her as her mouth closed over the pulse point on my neck\n\n\"Oh, God, Taylor, that feels incredible.\" My voice was low and heated. She hummed against my skin, sliding a hand underneath and lifting my neck, allowing my head to fall back further, exposing more of me to her amazing lips. My mind swam with pleasure, and my body was responding wantonly to her touch. My pussy was a leaking sieve and my nipples were diamond hard points, brushing over Taylor's skin.\n\nTaylor's lips moved down, nibbling onto my shoulder, over my clavicle and down the skin of my chest. My breath was coming in ragged gasps, all pretences of being chill having flown the coop.\n\nTaylor's tongue traced patterns above my breast. \"You like this?\"\n\n\"Uh-huh, yeah.\" I could barely gasp out the words. \"Can I have more, please?\"\n\nShe brought a hand up to cup one of my soft globes, while her mouth descended on the other. I couldn't help but cry out as it closed over my aching nipple. She let it go for a second so she could wet her thumb, which traced delicious circles around one areola while her mouth went back to envelop the other.\n\nI was floating on a cloud. I'd never considered my breasts to be especially sensitive. I mean, I like touching with them when I masturbate, sure, but it had never been great during sex before. This, however, this was exquisite. Was it just because she was better at it, or was it something else? Her mouth switched to the other side. \"Oh, God!\" I didn't care, I just wanted more.\n\nLittle zings of pleasure echoed inside of me. My fingers ran through her hair, and she glanced up at me while I gazed at her, locking me with those impossibly blue eyes. I don't know how long she worshipped me, back and forth, but eventually my nipple popped free for a final time and her lips trailed down the valley between my breasts and over my belly.\n\nA full body shudder passed through me as I realized where she was heading. Her mouth reached the waist of my skirt, and she started undoing the buttons, one by one, starting at the bottom. She scooted lower, each button revealing a little more of my leg. Her lips kissed each revealed patch of skin, and I began to hyperventilate as she neared my white lace panties.\n\nThe last button gave way and my skirt opened to one side and then the other. I was soaking wet, and the aroma of my arousal was evident. Taylor had to have gotten the full blast of it and I immediately became self-conscious. To a man my boyfriends had hated it. What would she think?\n\nAnother gentle kiss to my inner thigh stopped me from pulling away. Taylor's face hovered over my sex for moment. \"Aly, you smell amazing.\"\n\n\"Really?\"\n\nShe ran a finger over the silky material covering my cunny, making me gasp. \"Oh, yeah. I can't wait to taste you.\" Her fingers hooked the waistband, and I held my breath while lifting my hips so she could slide them off.\n\nI let go a ragged breath as my butt settled back onto the mattress, totally naked except for my socks, absolutely exposed to this goddess, who was gently pushing my knees apart. This was it. It was really happening, and I wanted it. I wanted it so badly. I felt like a virgin, desperate to know, to experience. I remember that night after prom. But then I'd done it just to do it, if that makes sense. It hadn't felt right then, and I'd known it, but I'd done it anyway.\n\nThis was different. This was right. Being in Taylor's arms, whether we were dancing, or cuddling on the couch, or here in bed, it felt right, safe, wonderful.\n\nI let her gentle pressure spread my legs, and the look of wonder in her eyes as they drank in my most intimate place caused all worry to flow out of my mind. She stripped off my socks as I settled back. She came forward, kissing my outer lips, one then the other, her hot breath driving me crazy. Then her mouth pressed against my opening, her tongue flicking out and circling a few times before pushing deep inside, making me sigh in ecstasy. It withdrew before plunging in again, swirling around the so sensitive skin there.\n\nMy whole body was tingling. I'd been pretty sure this was going to feel good. I didn't know it could feel this good. Her tongue was just magic. Slowly she started to work up the length of my slit; her tongue sliding along each hidden crevice, suckling on my lips. Her tongue dipped back inside me. \"Mmm, you're so delicious, Aly.\"\n\n\"Oh, God, Taylor, please don't stop.\"\n\nIn response, Taylor pushed her tongue into me again before running it up the length of my slit and flicking it over my small clit, which was still hiding inside its hood. I cried out, my head slamming back in to the pillows\n\n\"You're liking this then?\" Flick, swirl, lick.\n\nMy eyes rolled back into my head, but I managed to squeak something out. \"Uh-huh.\"\n\n\"Good.\" She went back to work, her tongue caressing up and down the sides of my hood, stimulating the clit underneath. \"Will the little lady ever come out and play?\" This time I couldn't answer, it was everything I could do to keep breathing through the pleasure. Her arms wrapped around my legs, her fingers walking down through the trimmed triangle of hair I'd kept above my sex before gently pulling the skin above my hood back.",
        "Her tongue probed deeper and deeper, touching places I'd literally never been touched in before. The pleasure flowing through me just kept building, and I could feel the blood coursing through my body, my clit swelling and straining to escape from the flesh surrounding it.\n\nThen, a little more pressure from Taylor's fingers and I could feel the cool air on my nub. \"There she is, so cute.\"\n\nI felt both completely exposed and absolutely safe. For a glorious moment I understood how amazing that was, before Taylor's lips closed around my clit and her tongue bathed it in joy.\n\nAfter that nothing existed but Taylor's mouth and my pleasure. I was being carried forward, racing towards a destination that was as terrifying as it was exhilarating. My body started to shake, my breath coming in ragged gasps as Taylor's tongue continued its glorious work. My thighs and lower abdomen felt like they were springs coiling tighter and tighter as my fingers gripped the sheets.\n\n\"Taylor, don't stop, don't, I... gonna come, gonna, Oh, GOD!\"\n\nI felt my orgasm explode inside me and I cried out, one long 'AHH', my volume cresting with every blissful pulse. Taylor pulled my clit fully into her mouth, using the flat of her tongue to caress it through each wave of pleasure. I was pushing myself against her, wantonly grinding my pussy against her face.\n\nThe orgasm went on and on, more intense than anything I'd ever experienced by myself, and no one else had ever even come close to getting me there. By the time it subsided, I was breathless. My eyes opened, trying to make the room stop spinning. Taylor's tongue was still caressing me, so gentle it felt like a fairy kiss.\n\nI looked down at her, my eyes locking onto her steel blue gaze. She gently increased the intensity of her touches, her tongue flicking across my clit. \"Ready for another?\" I couldn't have said no, even if I'd wanted too, which I so didn't.\n\nI nodded and laid back, my eyes fluttering closed as she picked up the intensity. While she licked and sucked at my clit I felt something new, a finger pressing against my entrance. I looked down, and Taylor's eyes were on mine, asking permission. As if I could deny her anything, I nodded, my mouth opening in a moan of pleasure as her finger slipped deep inside me.\n\n\"Oh, God, Taylor, that's amazing, Unh...\" I grunted as a second finger joined the first, and I made no more coherent sounds as she continued. The combination of sensations made it impossible to do anything but lie back and enjoy as her fingertips found my g-spot and her mouth continued to suckle my clit. They found a rhythm that wiped any other thought from my mind. I knew another big orgasm was coming, and my body just relaxed into it as it rolled over me.\n\nI didn't have to tell Taylor, she seemed to know as I began to shake in release, a long coo of pleasure releasing from the deepest part of me. I felt my Kegel's gripping and releasing her fingers, and as I finally came down they slipped out of me, leaving an odd, empty feeling. Her mouth moved over my stomach, trailing her tongue between my breasts, and up my neck before her mouth found mine.\n\nHer kiss was tender and soft, and I could taste my arousal on her lips, which I'd never done before. It was nice, musky but sweet, I didn't mind it at all. I let myself sink into her kiss, her body covering mine, my bare legs wrapping around her still denim clad lower half. The skin on her back was soft under my fingers, as her own caressed the side of my head as our tongues danced together before she pulled away.\n\n\"So you liked that?\" Her blue eyes bored into mine, almost pinning me to the bed, and all I could do was nod. \"Good, I'm glad.\" Her voice was soft, and the gentleness of it let me find my own words.\n\n\"I loved it, Taylor. You're amazing, and so beautiful.\" She smiled and blushed, but didn't look away. I looked up at her through my eyelashes. \"It's not over though, is it?\"\n\nShe smiled at me and shook her head. \"Not if you don't want it to be.\"\n\n\"I don't. I want a turn.\"\n\nShe cocked her head \"Hmm?\"\n\n\"I wanna taste you.\"\n\n\"Are you sure?\"\n\nI gave a little pout. \"Of course, why wouldn't I?\"\n\n\"Because not all girls do.\"\n\n\"Well I'm not like other girls.\" I grinned up at her before reaching down and unbuttoning her jeans. \"And I want a taste. I... I want to make you happy.\"\n\nTaylor slid off the bed and unzipped her pants, sliding them off before climbing back on the bed. \"So you want to taste me?\" She was fixing me with that intense stare again, and my insides started melting. I needed to give her pleasure, just to know that I could\n\nShe shimmied off her brief style panties. They were red, and patterned like men's underwear, but obviously designed for a woman. They were so her. My amusement at her choice of undies was immediately wiped away by the sight of her perfectly smooth pussy, puffy outer lips not quite concealing those inside. I couldn't believe how badly I wanted her.\n\nI sat up and reached out to her, putting my hand on her shoulder and running it down over her breast. Taylor held me to her for a moment before pushing me back onto the bed and rising up onto her knees. Her scent hit me, and my mouth started to water.\n\n\"So you want a taste?\" she asked me again.\n\nMy mouth was hanging open. All I could do was nod. Oh my God, this was really happening. Could I do this? I had to try.\n\n\"Ok. Lie back.\" She placed one of her legs at my side, swinging her knee up and over so she was sitting on my breasts, her strong legs holding my arms to my body. She gazed down at me, stroking my cheek and running her fingers through my hair. \"God, you're beautiful, Aly.\"\n\nBefore I could respond she scooted forward, and her perfect pussy filled my vision. Her clit, much larger than mine, was already visible, and her labia were shining with her moisture. And if I thought her smell was strong before, now it just overwhelmed me.\n\nHer fingers ran through my hair before cupping the back of my head and pulling me to her. I kissed her lips, earning a sigh, before sticking my tongue out into her honey. Musky, with a little tang, but also salty like the sea. It tasted of her, and I loved it. It made me shiver from head to toe, and I moaned into her pussy, which brought a gasp from above me. I began to run my tongue through every fold I could find, pushing it deep into her tight passage, and then up along her lips.\n\nShe leaned forward and I flicked her clit with my tongue, before pulling into my mouth and sucking hard.\n\n\"Gently, baby, gently.\"\n\n\"I'm sorry.\" I mumbled the words out, suddenly very self-conscious, but also a part of me flying at her calling me baby.\n\n\"Oh, Aly, don't be sorry, you're doing great.\" Her eyes were kind. \"You want to try again?\" I nodded, making her smile. \"Just, softly. Use your tongue.\"\n\nI nodded and went back to work, more gently. \"Oh, yeah, that's right, just like that. Good girl. Mmm...\" Taylor's eyes fluttered closed as my heart swelled with the compliment. Despite her larger clit, she obviously preferred it be stimulated through the protective skin around it, so I set myself to that. She began to grind herself against my face, and I dared a little more direct contact with her nub. \"Oh, yeah, more, good. So good.\"\n\nMore moans and sighs followed and I increased the intensity before sucking her clit into my mouth and bathing it softly with my tongue. Taylor shuddered and cried out, and I felt a fresh flood of wetness on my chin. As much as I wanted to let go so I could taste, it felt more important to continue the stimulation on Taylor's nub while she came, so I did, riding every jerk and spasm of her orgasm.\n\nAs soon as her body began to still my desire got the better of me, and my tongue swirled around, reveling in her nectar. God, she was delicious, and I knew I was already addicted.\n\nToo soon she pulled her pussy away from my mouth, sliding down my body until out our lips locked in a passionate embrace.\n\nAfter a delicious minute or so she pulled away and looked into my eyes. \"That was wonderful. Are you ready for the main course?\"\n\n\"There's more?\"\n\nHer hand glided over my stomach down between my legs, her fingers dipping into my still wet sex, making my whole body jerk. \"Oh, yeah, there's more.\" A digit slipped inside me and stroked in and out. \"I want to fuck this pussy. I think it needs it, don't you?\"\n\nThe way she was looking at me had me breathless. I nodded my head. \"Yeah, uh-huh.\"\n\n\"Good. Roll over onto your stomach, and no peeking.\"\n\nI complied, and she ran a hand down my back and over my ass before climbing off of the bed. The absence of her touch was like a physical ache, and I whimpered a little at the loss of contact, wiggling my butt in what I hoped was a seductive manner.\n\n\"You be patient, I'll be with you in a moment.\" I smiled at the gentle scolding. The door to her nightstand opened and I heard her fiddling with something. Material slid over skin and heard the soft tink of metal. I didn't peek, even though my insides were quivering.\n\nThe bed shifted as Taylor climbed back over to me and I cooed in pleasure as her hands traveled up my leg, a finger stroking the skin between my holes. \"Lift your butt up, get up on your knees.\"\n\nShivering in anticipation, I complied. Once again I felt exposed, but still absolutely safe at the same time, a strange dichotomy that felt so good. What also felt good was the finger tracing it's way through my folds, which were puckered out behind between my legs. Taylor kissed my raised cheeks, and then slipped her tongue between to rim me, which made me cry out as I savored the completely new experience.\n\nTwo fingers slipped inside me with a squelch, and I could feel my excitement running down my thigh. \"You're ready, aren't you?\"\n\n\"Please, Taylor, please.\"\n\nWithout a word she situated herself between my legs. A length of soft plastic rubbed against my skin, and then passed between my lips, coating itself with my juices. My hands reached out and grasped the metalwork headboard, tightening as I prepared for the blessed invasion.\n\nI didn't have to wait long, as moments later something pressed against my opening and slowly slid inside me. My moan was long and lustful. She paused a few inches, her hands firmly gripping my hips and waist. \"Aly?\"\n\n\"More.\"\n\nShe pulled out a few inches, then stroked in deeper, far enough that I could feel the ribbing on the phallus tripping over the sensitive skin at my entrance. Two more strokes and she was buried fully inside me, the skin of her thighs brushing against mine. In and out and in again it went. The head pressed against the deepest parts of me with every thrust, the ribbing tickling while a rough underside rubbed over my g-spot. I met every stroke, pushing back against her with wanton abandon.\n\nTaylor\n\nGod, I loved the sounds she made. She pushed back against me as I fucked her, completely lost in her pleasure. Often that annoyed me, but usually there was a bit of reluctance or shame in the girls I was with. But Aly, she was completely given over to the experience, and I realized I wanted it to be wonderful for her.\n\nThe strap-on I was using was made for this, taking a woman from behind, and it drove girls crazy. Unfortunately it wasn't really designed to pleasure the wearer, but that's okay. It was also long, almost nine inches, and I hadn't been sure that a shorter girl like Aly could take it all, but she had, right down to the base.\n\nI kept the penetrations deep and methodical, trying to take her to the peak slowly, my hands controlling the pace by gripping her waist, my thumbs resting in the dimples of Venus on her back. God, was there anything about this girl that wasn't adorable? She let out a long, low moan and I could feel her start to tremble as my phallus continued plumbing her most intimate depths. Her head lay back down onto the pillow, her face turned in profile, mouth open in an unheard sigh.\n\nMy heart broke at her beauty, and an all-consuming desire to make her happy rushed through my soul. I increased the pace, and she responded instantly, her breath becoming ragged and desperate sounding. She rose back up on her elbows, and a twinge of disappointment came as I could no longer see her face. But her voice was sweet and soothing, even in its lustful cadence.\n\n\"Please Taylor, just a little more, just a little harder, please don't stop.\" The words were rushing out of her, and I didn't stop. I loved her long and deep, increasing the pace with each push forward until I heard her scream out, her insides gripping and releasing the phallus in her orgasmic rhythm.\n\nWhen I heard her begin to breath again I slowed my assault, but I did not pull out. Instead I pushed forward gently, and to my surprise Aly just sighed and resumed her rhythm with me.\n\n\"You want another, huh?\"\n\n\"Mm-hmm.\"\n\n\"I can make it better.\"\n\n\"Please. Oh Taylor, please may I have more?\"\n\nThe purity of her voice slayed me. She'd completely given her body into my keeping, and she was trusting me to care for it. I continued to push until we'd gotten back into our full depth and rhythm. Then I let my hand travel round her waist and down between her legs and began to massage the little clit hidden in its hood. It was a little harder to thrust bent forward in this position, but the extra stimulation I was giving her was more than worth it.\n\nAly's voice rose into a long, lovely coo as I continued to stroke her with both my fingers and the strap-on. I could almost feel her pleasure radiating out of her, but I still couldn't see her face, and as much as I loved holding her, I hated that. I knew she wouldn't last long with the double stimulation, and I was right, as only minutes later she was dissolving into a wailing orgasm that thrilled me to my core.\n\nI was shaky myself, I'd never gotten that close wearing the strap-on. My whole body was tingling with arousal. As her orgasm subsided Aly's knees gave out and she slumped forward onto the mattress. She rolled onto her back and held her arms out for a cuddle. I wanted that more than anything, but not while wearing this thing, so I quickly unbuckled it slid it off before climbing into her arms.\n\nAs our lips came together she whimpered in pleasure. I stroked her hair as I looked into her eyes. \"Did you like that?\"\n\n\"Mmm, loved it. Only...\" She looked down, her fingers tracing patterns on my arm.\n\n\"What is it, baby?\" Her eyes snapped up to mine at the endearment, and I winced inside. Was it too early for that? But there was no anger there, just concern about what she wanted to say.\n\n\"Nothing, it, umm.\" She reached up and ran her fingers through my hair. \"It was amazing, you're amazing, I just, um, wish I could've looked in your eyes, you know, while you were loving me. I missed seeing your eyes. They're so beautiful.\"\n\nShe teared up as she gazed at me, and I blinked away one which formed in my own eye in response. I couldn't believe it; she'd been thinking the same thing I had. I had to stop myself from shaking.\n\n\"Just wait here, Aly, give me a sec, okay?\" She nodded and I climbed off the bed, reaching deep into my nightstand. Gillian and I had had a strap-on, our only one, and it was designed for missionary. Not too big, curved upwards to hit the g-spot, and with an attached pair of rabbit ears for clitoral stimulation, we'd loved it. It had been very intimate. The one time I'd tried it with some else since had been really awkward, at least for me. It had reminded me too much of Gillian, so since then it had just been collecting dust.\n\nI pulled it out and slipped it on, buckling it into place. I crawled back toward Aly, who'd been watching me wide-eyed.\n\n\"Can you take a little more?\"\n\nAly nodded and kissed me deeply before lying back on the bed and spreading her legs. \"Oh, God, yes.\"\n\nI ran a finger over her sex, and sure enough she was wet again. Or still. Whatever. Two fingers slid inside her easily. I coated up the strap-on and climbed into position before guiding it inside her. And this time I could see her eyes widen in shock and her mouth open in pleasure as the rabbit ears caressed her clit.\n\nI began to move, slowly, gently, watching her little gasps and sighs with every rock and thrust. Our eyes were only inches from each other, and I could see the emotion radiating from them. And the way she was looking at me, oh, God. It was a mix of adoration, innocent wonder, and absolute surrender, and it was intoxicating. It also terrified me. The unquestioning trust there, normally it would have sent me running, screaming for the hills, but not today. I wasn't sure I was worthy of that look, but I wanted to be, so much.\n\nI continued to move inside her and I could see the pleasure building in the way her breath was coming. Her fingers caressed my hair, her gaze locked on mine. She was the most beautiful thing I'd ever seen. I wanted her to keep looking at me that way. And I didn't want her to go. She was going to leave me, just like everyone else.\n\nJust as that poisonous thought was echoing in my mind Aly pulled me down and kissed me. I savored the taste of her, the softness of her lips. It was pure sweetness and innocence, an extension of her. She hadn't hurt me, and she didn't want to hurt me. I felt that deep in my soul. I didn't know she wouldn't, no one could know that, but realizing she didn't want to meant so much.\n\nOur kiss ended and I looked into her eyes again. It was that same look. I loved that look. I put my forehead against hers and began to work more deeply inside her, and we just moved together. Her legs wrapped around my waist. There were gentle kisses, soft moans, her skin against mine. I don't know how long it lasted, and I didn't care. Forever would have been too short. But eventually I felt her begin to shudder, what I knew by then a precursor to her orgasm.\n\nI wanted to draw it out, so I slowed, but even then eventually I felt her tense under me as her body prepared for release.\n\n\"Don't close your eyes, baby. I want to see you come.\"\n\nAly jerked a nod, her whole body beginning to shake as her orgasm washed over her. Her eyes never left mine, though, and it was the most erotic thing I'd ever experienced. She seemed to take forever to come down, but eventually her breathing slowed to something approaching normal, and we came together in a kiss. Somehow during it I slipped out of her, and when we broke apart I quickly took it off before climbing back into her arms.\n\n\"Oh, Taylor, that was incredible.\" She started to kiss my neck, and I pulled her in as tight as I could. Her head rested on my shoulder while her fingers traced patterns on my arm, which I was starting to suspect meant something was on her mind.\n\n\"Taylor? When you were wearing the, um, the ....\"\n\n\"The strap-on?\"\n\nHer already flushed cheeks darkened several shades. \"Yeah, did you, um, you know, did I make you happy?\"\n\n\"Of course you made me happy.\" I cocked my head and looked at her. There was still real concern in her eyes. \"Are you asking if I came?\"\n\nShe nodded, not looking away.\n\n\"It doesn't matter, Aly. That was about you.\"\n\nShe looked horrified. \"Of course it matters, Taylor. You matter. Um, were you even close?\"\n\n\"Yeah, closer with you than anyone I've ever been with. I really did enjoy it, I promise.\"\n\nShe kissed me. \"That's not good enough.\" Aly pushed me onto my back, her leg snaking over mine and opening me up. Her hand caressed down over my stomach as her lips found my neck. A little confession, I'm a total neck slut. If a girl kisses me on the neck a little I'm hers. And it wasn't going to take much to make me Aly's, especially tonight.\n\nI sighed, tilting my head to the side to give Aly better access. Moments later I felt her hand dip between my legs, two fingers scissoring around my hood. \"Oh, damn!\"\n\nAly buzzed a laugh into my neck at my exclamation, which almost made me go off right then. I didn't hold out much longer really, as the combination of Aly's gentle lips and delicate fingers had me over the moon. I came and came as over an hour of constant arousal burst forth into a massive orgasm. That left me dizzy, but reality snapped back as Aly cleaned her fingers with her mouth. Damn, that was sexy.",
        "\"You really do taste amazing.\"\n\nI laughed and pulled her to me, her squealing as I hugged her tight. She struggled for a second before relaxing into my embrace, her own arms going around me while our legs intertwined.\n\nI kissed the top of her head. \"You want to get under the covers?\" It was kind of my way of asking if she was going to stay. My heart was beating fast.\n\nShe smiled up at me, nodding. \"Yeah.\"\n\nMoments later I'd pulled the sheet and comforter over us, and she pressed herself right back into the same position we'd been in before. I embraced her gladly. Maybe this time would be different, and she'd still be here in the morning.\n\nPlease, God, let her still be here in the morning.\n\n**********\n\nThank you all for reading, rating, and commenting on my story. This will be an eight parter. I know it's a bit long, but I hope you enjoy the journey with me. It's all written, and I'll get at least one up a week, faster if I can.\n\n \n"
    ],
    "authorname": "JCMcNeilly",
    "tags": [
        "lesbian",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hero-worship-pt-01"
}