{
    "title": "When It Rains Pt. 03",
    "pages": [
        "Author's Note:\n\nWhen It Rains is the story of Jocelyn Miller and her fucked-up family. After her sister's disastrous wedding, Jocelyn finds solace in the arms of the one person she shouldn't.\n\nThis is the third and final part of the story. It contains an older man/younger woman relationship, family drama, twists, turns, secrets, and surprises. Driven mainly by plot, there are erotic scenes throughout, however they do take some time to get to. I hope you enjoy the story!\n\n<center>**\n\nTHEN\n\n**</center>\n\n\"You've got to be kidding me. You don't actually believe that, do you?\"\n\nLawrence grinned and shrugged. \"Look, I'm just saying, there are plenty of eyewitness accounts...\"\n\nIsaac rolled his eyes. \"Yeah, and they can all be explained. Even in the sixties, they said it was probably just a sandhill crane.\"\n\n\"You say that, man, but I fuckin' can't\u2014uh, I mean, freakin' can't, sorry Mr. Miller\u2014believe that someone would mistake a bird for a man with wings. And sandhill cranes aren't even native to Virginia.\"\n\n\"I mean, if it wandered out of its migration route, it could easily...\" Isaac trailed off and shook his head. \"Why am I debating this with you? How in the... how do you even know all this, man?\"\n\n\"I'm telling you, Isaac. Sometimes, you just have to believe.\"\n\n\"In the Mothman.\"\n\n\"He's real, dude.\"\n\n\"Anyway,\" Mom said, seemingly confused. \"I take it you two have seen The Mothman Prophecies, so let's take that off the list and pick a different movie.\"\n\n\"Clearly,\" Dad said, unimpressed.\n\n\"I'm not into horror anyway,\" Chelsea said, settling into the middle seat on the couch beside Isaac. He put an arm around her shoulder instinctively as she nestled into him, a bowl of popcorn on her lap.\n\n\"Me neither,\" I said. \"What about something funny?\"\n\n\"Oh, what about Airplane!?\" Lawrence said.\n\n\"What's Airplane!?\" Chelsea asked.\n\nIsaac and Lawrence groaned in unison. Even Dad raised his eyebrows.\n\n\"It's got Leslie Nielsen in it,\" I said. \"It's like a parody movie. You used to like Monty Python, right? You'll probably like this.\"\n\n\"Hmm,\" Chelsea said. \n\n\"She's right,\" Isaac said, nudging her. \"You'd like it. Let's watch that.\"\n\n\"Shove over a bit,\" Lawrence said to me. \"I'll sit in the middle, you can have the armrest.\"\n\nAirplane! was the only saving grace in an otherwise-disastrous evening featuring Lawrence's fourth attempt at trying to fake-seduce Chelsea. I had no idea what he thought would happen by sitting next to her on the couch during the movie; Isaac was on the other side of her, and my parents were in the room. What he thought he would accomplish, I couldn't even begin to guess.\n\nMovie night was Mom's brainchild. \n\n\"Well, the bridal shower is Sunday so we can't really do family dinner,\" she explained the previous weekend. \"So what about if everyone comes over for dinner on Saturday instead, and we can have a family movie night!\"\n\n\"That's a great idea, Mrs. Miller,\" Lawrence said.\n\n\"Yeah,\" Isaac agreed. \"I'm down for that.\"\n\n\"It's a plan, then,\" Mom said, beaming first at Chelsea and then at me.\n\nI tried to smile back, but spending my Saturday night watching a movie with my family and Lawrence wasn't even a runner up on my list of top 100 things that would be considered an okay time.\n\nDespite that, I did enjoy the movie. I always did, every time I watched it. I didn't enjoy watching Lawrence lean over and whisper things to Chelsea, even though it wasn't like he was my actual boyfriend. It just picked at those old wounds: Chelsea, the hotter sister, giggling at the boys trying to compete for her attention while I sat squashed against the armrest. \n\nI had to hand it to Lawrence: he did seem to be making some headway with Chelsea. At one point in the movie, he muttered something in her ear, and she snorted and slapped his thigh.\n\n\"You're terrible,\" she whispered.\n\n\"What'd he say?\" Isaac asked, grinning.\n\nChelsea shook her head and Lawrence laughed.\n\n\"C'mon, tell me?\" Isaac pleaded.\n\n\"It's nothing,\" Chelsea said. \"Don't worry about it.\" \n\n\"Hmm,\" Isaac said, his grin fading a bit.\n\n\"Ah, don't worry.\" Lawrence sat back a bit and threw his arm over my shoulder. \"I'll tell you later, Joss.\"\n\n\"Looking forward to it,\" I said, trying to sound less annoyed than I felt and failing miserably. \n\nChelsea glanced at me from where she sat, an eyebrow just barely arched. I smiled, or at least tried to smile, at her. It did no good: she knew I was annoyed. Unless I was imagining things, there was a small glint in her eye when she figured that out.\n\nI reminded myself Lawrence wasn't really my boyfriend, that we were there for a reason, before taking a breath and elbowing him lightly in the ribs. He turned his head, brows furrowed.\n\n\"Wha\u2014\"\n\nI kissed him, forcing myself to linger for just a second longer than I wanted to, even though I wanted to linger for exactly zero seconds. When I pulled back, Lawrence had a mischievous smirk on his face.\n\n\"What was that for?\"\n\n\"You know exactly what it was for,\" I grumbled, then turned back to the TV. \n\nHe kept his arm around my shoulder for the rest of the movie, even when Chelsea leaned towards him to make another joke. He chuckled softly and muttered something back, but didn't move away from me. It was the right decision. She looked mildly annoyed, and I knew we had finally struck a nerve.\n\nThe problem was Isaac. He finally seemed to realize that Lawrence wasn't just being his usual charming self, and a troubled look clouded his face for the rest of the movie. My stomach rolled and curled, and by the time the movie ended, I felt truly sick.\n\n\"That was great!\" Chelsea exclaimed when the credits started to roll. \n\n\"Yeah,\" Isaac said lightly. \"Hey, Lawrence, I was just thinking, Chelsea and I were wondering the other day if you were coming to our wedding?\"\n\nI pressed my lips together and Lawrence chuckled casually.\n\n\"Well, uh, not sure I'd been invited, dude.\"\n\n\"Oh,\" Isaac said, sounding surprised. \"Sorry, I just assumed since you and Joss have been dating for a while now...\"\n\n\"I, um, forgot,\" I said quietly. \"I didn't think of asking.\"\n\n\"Sorry, I didn't mean to put any pressure on... we just need to, you know, finalize numbers. For the caterer,\" he explained lamely.\n\n\"Well, hey, no pressure.\" Lawrence smiled and jostled me a bit. \"You want me to come, I'll come, and if not, no hard feelings.\" \n\n\"Yeah,\" I said. \"No, yeah, you should... you should come. If you want to.\" \n\nChelsea grinned and clapped her hands together.\n\n\"That's perfect,\" she said. \"The pictures will look a lot better if Jocelyn has a date.\"\n\nAll I could do was hope there wouldn't be a wedding for him to attend. When we were driving home, Lawrence called me out on it.\n\n\"You probably should've invited me earlier. That was super uncomfortable.\"\n\n\"You were uncomfortable?\" I shot back. \"Jesus, I was half-sure you were just gonna mount Chelsea right there in front of everyone. Could have tried to be a little more subtle.\" \n\n\"Subtle? There's a month until the wedding and until tonight, there was no progress. None. 'Subtle' is out the window, Joss.\"\n\n\"All you're going to do is hurt Isaac,\" I said. \"Did you not see the look he was giving you?\"\n\n\"Did you not see the look Chelsea was giving you?\" he replied. \"She's finally starting to fall for it. I did a damn good job tonight.\"\n\n\"This is crazy,\" I muttered. \"This is absolutely insane.\"\n\n\"It's your family, not mine.\"\n\n\"No, I mean... whatever,\" I grumbled.\n\nWe didn't speak until we were nearly at my apartment.\n\n\"Why does she hate you so much?\" Lawrence said suddenly.\n\n\"Excuse me?\"\n\n\"Chelsea. Like, she's got zero interest in me as a person. I'm not an idiot, I can tell. But now that she knows it pisses you off, she's all over me. What in the hell kind of thing happened for you two to be\u2014\"\n\n\"That is none of your business,\" I said sharply. \n\n\"I mean, it kind of is,\" Lawrence said. \"Seeing as I'm the one trying to seduce her and all.\"\n\n\"You're not supposed to be seducing her,\" I sighed. \"You're supposed to be getting her to flirt back and be obvious enough about it that Isaac breaks up with her.\"\n\nLawrence turned into the parking lot of my apartment, parked, and looked over at me with his eyebrows raised.\n\n\"Are you that naive?\" he asked.\n\n\"Fuck you.\"\n\n\"No, seriously, Jocelyn. You think that's where this ends? With Isaac breaking up with her because she's flirting?\" \n\nMy mouth dropped open, but nothing came out.\n\n\"If I was really your boyfriend, and you were gonna marry me or something, would you leave me just for flirting with another girl?\"\n\n\"That's not the same,\" I said weakly. \"Are you serious, you're going to try to...\"\n\n\"No, not... no,\" he said. \"I just mean, it's going to take a little more than a few inside jokes and gentle nudges. I don't want to fuck her or anything. Maybe work out a situation where Isaac catches us making out or something.\"\n\nShakily, I walked up to my apartment. I didn't know why I hadn't considered what, specifically, Lawrence would have to do, but he was right. Isaac wasn't going to break up with Chelsea just because she was flirting. She had to do something to hurt him, to really hurt him enough to leave her.\n\nI could only hope it would hurt him less in the long run than a lifetime with her would. The guilt rolled through me again and I found myself wishing I hadn't rolled my eyes in disgust at Lawrence when he tried to sell me a bag of weed before I got out of the car. Instead, I cracked a beer and sat on the couch, trying to convince myself I was a good person.\n\nThe rest of the month passed far faster than I would have liked. The bridal shower was followed by the bachelorette, the final fittings, and the last-minute decoration deliveries, florist appointments, and catering issues. My involvement in the wedding party was a blessing: I didn't have to spend as much time around Lawrence, watching him try everything he could to get Chelsea into a compromising position.\n\nAnd he tried. Oh, did he try. He tried hard enough that Isaac called him out on it after dinner two weeks before the wedding, pointing out he was paying more attention to Chelsea than he was to me.\n\n\"Ah, Joss doesn't mind,\" Lawrence said lightly. \"She knows I'm trying to make a good impression.\"\n\n\"Is that what you're trying to do?\" Dad said coldly. \n\nEven Lawrence couldn't manage to find a witty comeback, instead laughing awkwardly before raising his hands in surrender.\n\n\"Didn't realize I was being out of line,\" he said to Isaac. \"Sorry. We cool?\"\n\nIsaac nodded graciously. \"Yeah, man. Of course.\" \n\n\"This isn't going to work,\" I told Lawrence as he drove me home that night. \"We're out of time.\"\n\n\"We're not out of time,\" he said. \"I just have to rethink my strategy a bit here.\"\n\nUnfortunately for me, the rethinking of said strategy involved a lot more PDA between me and Lawrence. Instead of Isaac catching Lawrence and Chelsea making out, his strategy was to have Chelsea catch me and him making out. It worked, a little: when we were at my parents' a few days later to finish putting together the slideshow of Isaac and Chelsea's relationship, Chelsea rounded the corner into the kitchen to see Lawrence pinning me against the wall, his hand under my shirt but a respectable distance away from my breasts.\n\n\"Oh!\" she said, and Lawrence pulled back.\n\n\"Shit,\" he said, grinning. \n\nThe redness on my face wasn't fake. I was definitely embarrassed as I adjusted my shirt, unable to meet Chelsea's eyes.\n\n\"Well, if you're done, Mom wanted your opinion on a couple of pictures,\" she said uncomfortably.\n\n\"Yeah. Sorry.\"\n\n\"I think she might like me,\" Lawrence stage-whispered to Chelsea, who snorted.\n\n\"You're terrible,\" she told him.\n\nHe winked. \"That's not what your sister said.\"\n\nI almost gagged, but managed to keep a straight face and walk back to the dining room with swollen lips and an unpleasant taste in my mouth. Whether it was from kissing Lawrence or from the guilt I was feeling, I didn't know.\n\nStill, nothing happened. Chelsea never so much as teased Lawrence, even when no one was looking. Two days before the wedding, I called Mateo.\n\n\"I think we can safely say we failed,\" I said.\n\n\"Yeah,\" he said sullenly. \"Well. Thanks for trying.\"\n\n\"He's going to be okay,\" I said unconvincingly. \"Like, maybe... maybe it'll be okay.\"\n\n\"Yeah. Maybe.\"\n\nI sighed. \"I need your opinion. Do I break up with Lawrence now or after the wedding?\"\n\n\"What?\"\n\n\"Like, he doesn't really have to come to the wedding. We could 'have a fight' and break up\u2014\"\n\n\"No,\" Mateo said, then paused. \"No, he should still go to the wedding.\"\n\nI frowned. \"Why?\"\n\n\"Just keeps the attention off us,\" he said.\n\n\"Really?\"\n\n\"Mm-hmm. Besides, it can be kind of a thank-you. Free meal, open bar, Lawrence'll have a great time. Break up with him next week or something.\"\n\nI shrugged. \"Okay. Makes sense to me.\"\n\n\"Cool.\"\n\n\"I'm really sorry, Mateo. I wish... well. I'm sorry it didn't work.\"\n\n\"Thanks, Joss. I'm sorry, too.\"\n\nWhen I hung up, I lay in bed, staring at the ceiling miserably for a long time.\n\n<center>**\n\nNOW\n\n**</center>\n\n\"You're fucking my dad.\"\n\n\"It's not like that. Just let me explain\u2014\"\n\n\"Explain?\" He laughed, shaking his head. \"You and your friggin' sister are the same. 'Let me explain, Isaac, let me justify to you why I'm doing this horrible thing because for some reason, I think that'll excuse it'.\"\n\n\"It's not like that!\" My voice was high-pitched, panicked, hardly sounding like my own. \"It's not, I swear.\"\n\n\"How the hell can you possibly explain this? You are fucking my dad. You knew how weird shit was between me and him and, what, you thought 'hey, Isaac's my ex-boyfriend, I should fuck his dad'?\"\n\n\"No, that's not\u2014\"\n\n\"Not what? Not exactly what you did?\"\n\nThe panic in my chest was starting to be replaced by anger. \"If you're going to ask me questions, could you maybe give me the chance to fucking answer them instead of cutting me off?\"\n\n\"Oh, excuse me,\" Isaac said sarcastically. \"Go ahead, tell me why you think it's okay to hook up with your ex-boyfriend's father. I'm super interested in hearing that.\"\n\n\"You're being kind of a prick for someone who fucked my sister when he said he wouldn't.\"\n\n\"That's not the same. I wanted to marry your sister.\"\n\n\"Yeah, well, maybe I want to marry your dad. How the fuck would you know?\"\n\nIsaac laughed again, the sound dry and biting. \"You know why I don't believe that shit? 'Cause I know what you did, Jocelyn. I know what you and Lawrence did.\"\n\nIt was like entering a building after getting caught in the rain. Not that warm moment of relief, but the moment that you realize just how cold you really were. Goosebumps rose on my arms and a chill spread through me, shivering across my skin, almost as painful as having plunged into cold water in the first place. I gaped at Isaac, unable to deny anything, knowing that any explanation I had wouldn't be enough.\n\n\"Yeah, imagine that,\" Isaac continued. \"I come over here to talk to my dad after finding out my ex set up this whole elaborate charade to make me leave my fianc\u00e9e, only to find out she's also hooking up with him. Crazy, right? How'd you manage the timing on that so well? Was he in on it?\"\n\nDerek picked that moment to barrel in through the back door, freezing as he caught sight of me standing across from his son.\n\n\"Oh no,\" he muttered.\n\n\"And you,\" Isaac said, turning to him. \"What the fuck, Dad?\"\n\n\"Now, just wait a sec\u2014\"\n\n\"No, you don't get to... no. You... that's my ex-girlfriend.\"\n\n\"You don't get to claim her,\" Derek said. \"She has a name.\"\n\n\"I'm not claiming anyone, I'm just saying it's weird as shit for my dad to\u2014\"\n\n\"Weird? You hooked up with her and her sister!\"\n\n\"That's different!\" Isaac shouted. \n\n\"How?\" Derek said. \"How's that different?\" \n\n\"I loved her!\"\n\n\"And I love her. It's not like this is a one-time thing, it's\u2014\"\n\n\"Oh, so it's been going on for a while,\" Isaac said. \"How long?\"\n\n\"That's not\u2014\"\n\n\"How fucking long, Dad?\"\n\n\"It's not important right now.\"\n\n\"How long?\" \n\n\"Since the wedding,\" I said.\n\nBoth of them looked at me, shaking and helpless in the entrance to the kitchen. Isaac was the first to break the silence.\n\n\"Was he in on it, then?\" he asked.\n\nDerek frowned. \"In on what?\"\n\n\"No,\" I whispered. \"And neither was I.\"\n\n\"Bullshit. You're so full of shit,\" he spat back. \"He told me what happened, Jocelyn.\"\n\n\"What happened?\" Derek asked.\n\n\"What was this, phase two of it?\" Isaac continued. \"It wasn't enough to end things with me and Chelsea, no, you had to go and just really make sure I understood how pissed you were. You couldn't just tell me? You couldn't say it?\"\n\n\"It's not what you think,\" I said.\n\n\"Are you actually accusing her of being cheated on just to fuck with you?\" Derek asked.\n\n\"I wouldn't put it past her,\" Isaac spat. \"And I shouldn't have put it past you, either. After all this, I thought you had changed, and then you go and start fucking my ex-girlfriend\u2014\"\n\n\"Stop calling her that!\" Derek snapped. \"She is a person. She's not defined by who she is to you. Get that through your thick fucking skull. Her name is Jocelyn and she is not yours.\"\n\nIsaac didn't even acknowledge that he had spoken.\n\n\"I can't believe I started thinking you were different, Dad. What kind of creep fucks a girl twenty years younger than him and\u2014\"\n\n\"Watch what you're saying,\" Derek growled.\n\n\"\u2014thinks it's okay in the first place? What is this, some kind of sick-ass mid-life crisis? You couldn't just buy a\u2014\"\n\nDerek's face was turning red, the tension in the room caught behind a brittle dam that was seconds away from bursting. \n\n\"Isaac, back off.\"\n\n\"\u2014Ferrari or something. I'm older than her! I'm fucking older than your goddamn girlfriend! It's not enough that you left Mom and ruined our family\u2014\"\n\n\"I didn't leave your mother!\" Derek roared.\n\nIsaac stopped, his mouth still open as Derek took a step forward. I shrank back, hardly able to recognize the people standing in the room with me. Isaac was almost grotesquely emotional; Derek's eyes were pools of hurt and frustration, his cheeks red and his eyebrows furrowed.\n\nHe caught sight of me huddling in the hallway and his face softened, just a bit. Clearing his throat, he lowered his voice, but the anger was still soaked into every word.\n\n\"She left me, okay? Do you feel better now, huh? Do you want all the fucking details of it, too? All the shit that she and I agreed not to tell you or your sister because neither of us wanted you to think badly of the other one?\"\n\nIsaac sputtered for a moment. \"No, I\u2014\"\n\n\"Too fucking bad.\" Derek's voice was tight, barely restrained. \"There wasn't some secret affair or some goddamn conspiracy. It was the stupidest reason, okay? She had no sex drive. None. After Samantha was born, something happened. We went to doctors, tried to figure it out for years, they said that's just the way she was. And I stayed because I loved her anyway, very much, and I would've stayed with her no matter what but she got it into her head that I wasn't happy. She felt like she was holding me back. \n\n\"She asked for a divorce for years, Isaac. Years. So long, you wouldn't have even been old enough to remember it if I'd said yes the first time. And I didn't, obviously. I said no, every single goddamn time, unless she could give me a reason that wasn't... that. When she finally said she was miserable because she felt so guilty about it all, we went to counselling, and when we got through that and they said the best thing we could do for each other was get divorced, we did.\"\n\nIsaac was silent, staring daggers across the kitchen at his dad.\n\n\"That was it,\" he continued. \"We wanted you and your sister to have parents who loved you, no matter what, and we agreed it was best to keep that shit between us. Ange wanted to go back on that when you started acting like a stuck-up brat but I'd rather have you think I was a dick than be mad at her. So get over it, okay? Grow up and get the fuck over it. Not everything is a big goddamn conspiracy to hurt you.\"",
        "\"I never said\u2014\"\n\n\"You're accusing Jocelyn of what, making her boyfriend seduce your fianc\u00e9e? Do you know how crazy that sounds? You might not like that I love her, but I do, and if that's going to cause another rift between us, well, that's on you.\"\n\nIsaac stared at him for a moment before turning to me. \"So he wasn't in on it, then. This was all you?\"\n\nI bit my lip, looking at Derek, knowing it was probably the last time he was going to be the person on my side. My lip trembled as he looked back, so confident in what he was saying. I didn't know if my heart could handle breaking again, but I knew it was about to.\n\n\"This wasn't part of it,\" I whispered.\n\nI'll never forget the way Derek's face changed at that moment. His face was red, eyes fierce, jaw set. He was every bit my defender, protective and stubborn as he argued with his son on my behalf. When I spoke, the first thing to change was his eyes. His mouth parted, he drew in a short, sharp breath, and the rest of him seemed to deflate.\n\n\"Part of what, Joss?\" he asked.\n\n\"Oh, just that crazy plan she had of getting her boyfriend to break Chelsea and me up,\" Isaac said.\n\n\"It wasn't my plan,\" I tried to protest.\n\n\"You what?\" Derek asked.\n\n\"It wasn't enough to just break us up though, was it?\" Isaac said, turning back to me. \"You had to humiliate me, too. You had to\u2014\"\n\n\"That's not what happened!\" My voice shook, wavering so much that even I wouldn't have believed myself. \"I swear to God, I didn't have anything to do with\u2014\"\n\n\"So you're saying you really were dating Lawrence because you liked him?\" Isaac said sarcastically. \"I should've known something was up right away, Joss. You don't seem the type to date a drug dealer, though then again, I didn't think you were the type to fuck my dad either, so shows what I really know.\"\n\n\"A drug dealer?\" Derek repeated.\n\n\"I didn't know,\" I whimpered.\n\n\"You think I'm gonna buy you're that stupid?\" Isaac snapped.\n\nMy cheeks flared red and I looked down. He wasn't going to buy it, even if it was the truth. I really was that stupid.\n\n\"You know, maybe I was wrong,\" he said. \"You and Dad are perfect for each other. You're a lying little bitch, and he's a backstabbing creep. I'm done with both of you. Stay the hell away from me, okay? Stay the fuck out of my life.\"\n\nThe house shook when Isaac slammed the door behind him, leaving me standing in the kitchen. Derek looked at me for a long time.\n\n\"You set the whole thing up?\"\n\n\"It wasn't like that, I\u2014\"\n\n\"Joss. Did you date Lawrence in the hopes that Chelsea would cheat on Isaac?\"\n\nNeither of them would let me explain. To get any answer in, I had to keep it short, and that meant there was only one thing I could say. Clinging to the smallest scrap of hope I had left, I nodded.\n\n\"Yes.\"\n\nDerek snorted, shaking his head. \"And this?\"\n\n\"This wasn't part of it.\"\n\n\"I'm supposed to believe that?\"\n\nMy voice cracked. \"Yes.\"\n\nHe shook his head and my heart cracked, too. \"You should leave.\"\n\n\"Derek, wait, please\u2014\"\n\n\"For what? You... how could you do that?\"\n\n\"We just wanted him to see he was making a mistake,\" I said hoarsely.\n\nDerek shook his head again.\n\n\"I ruined my relationship with my son because of you,\" he said. \"Probably with Ange, too, once I tell her I said... I'm fucked. You're as bad as your sister. The two of you are toxic.\"\n\nHe couldn't have said anything more hurtful. I didn't let it get to me until after I dressed, left, and drove myself home. When I got back to my apartment, I pulled the blinds shut, cutting off the sunlight before carefully, delicately sitting on the edge of my bed. It wasn't until I was there that I started to cry, my heart too shattered to simply be called broken, and I didn't stop for a long, long time. \n\n<center>**\n\nTHEN\n\n**</center>\n\n\"You fucking asshole!\"\n\n\"Whoa, wait a sec, Joss, just\u2014\"\n\nI pushed Mateo back after the door swung open, limping slightly as I shoved my way into his house. Lawrence was sitting on the couch, looking alarmed.\n\n\"What the hell were you thinking?\" I shouted. \"You weren't supposed to fuck her! And at their wedding?\"\n\n\"It got the job done.\" Lawrence was holding an ice pack to his eye, but moved it so I could see the blossoming bruise forming there. \"Although yeah, I would have preferred that Isaac not kick the shit out of me.\"\n\n\"Why would you do that? At what point did it stop being about getting them to break up and more about getting into her pants?\"\n\n\"It never did!\" he protested. \"Mateo said\u2014\"\n\n\"Dude,\" Mateo interrupted.\n\nI whirled toward him. \"You're joking. Are you serious?\"\n\n\"It's not\u2014\"\n\n\"You planned this. The two of you planned this?\"\n\nMateo sighed. \"I mean, we had an opportunity and we took it.\"\n\n\"An opportunity?\" I repeated. \"Are you kidding me?\"\n\n\"Your sister was flirting with me, Joss,\" Lawrence said. \"Like, she was laying it on thick. Kind of a freak, really. Who gets off on that kind of thing on their wedding day?\"\n\nI gaped at both of them.\n\n\"So it wasn't you just wanting to get laid,\" I said, then turned back to Mateo. \"This was all part of the plan.\"\n\n\"Well, not the plan, really,\" he said. \"I mean, he was so close to getting with her before the wedding. We were just running out of time. I figured if he was there and something happened...\"\n\n\"Though you didn't bother telling me Isaac was a violent little prick,\" Lawrence muttered.\n\n\"Get over it,\" Mateo said. \"You've been hurt worse.\"\n\n\"Are you serious?\" I asked. \"You humiliated Isaac, you humiliated me, you turned a horrible situation into an even worse one.\"\n\n\"It needed to be done,\" Mateo said.\n\n\"You don't think that was more hurtful to Isaac than just letting him have a normal wedding?\"\n\n\"You know what, I don't like it any more than you do\u2014\"\n\n\"That's a fucking lie and you know it.\"\n\n\"Fine.\" Mateo glared at me. \"Yeah, it was cold. Yeah, it was hurtful. But it needed to be done. He needed to see who she was. We had an opportunity, and we took it.\"\n\n\"It wasn't all that enjoyable, if that's any help,\" Lawrence said. \"She's kind of... pushy. And a sloppy kisser. Like, did you see her lipstick after we\u2014\"\n\n\"Ew,\" I said. \"Don't need to hear that. And no, that doesn't help at all!\"\n\n\"What's done is done,\" Mateo said. \"Sorry you were caught up in it, but it's not like you came out looking like the bad guy, okay? You'll get over it.\"\n\n\"That's not the point!\"\n\n\"She came onto me,\" Lawrence said again. \"Like, plain and simple, Joss. She came up to me after the ceremony and was like 'hey, can I talk to you' and of course I was like 'oh yeah, for sure' and then next thing I know she's pulling me to the side and goes 'I want to do something crazy, you in?' and\u2014oh, this was really fuckin' funny\u2014I say 'depends, if it's you I get to be in, then yeah' and she says\u2014\"\n\n\"You have a very strange definition of what's funny,\" I interrupted. \n\n\"I thought it was clever,\" Lawrence said. \"Anyway, I barely did anything, and all Mateo did was make sure Isaac caught us. It's like he said, you didn't really do anything. Just made sure I was there at the right place, right time, and bam. Though, your timing was a bit off, dude, if you could've given me like two more minutes to finish\u2014\n\n\"You're disgusting,\" I said. \"And you, Mateo? You call yourself his best friend? You're sick.\"\n\n\"Oh, don't pretend you're all high and mighty now,\" he shot back. \"You didn't enjoy slapping your sister just a little bit?\"\n\n\"Not the point,\" I said through gritted teeth.\n\n\"It is, a little, isn't it? You got all that sympathy, you don't have to worry about coming up with a fake reason to break up with Lawrence, and you have the satisfaction of knowing you got back at your sister for what she did.\"\n\n\"This isn't what I wanted,\" I said. \n\n\"What did you want, huh?\" Mateo asked. \"What did you think was gonna happen, Joss?\"\n\n\"You could have at least given me a head's up,\" I said. \"I discovered it at the same time as everyone else. You don't think that was awful?\"\n\n\"Not really,\" he replied. \"You would've stopped us. How many fucking times did you try to back out?\"\n\n\"I'm telling Isaac,\" I said.\n\n\"No.\"\n\n\"Stop me. I fucking dare you.\"\n\n\"I don't have to,\" Mateo said, laughing. \"You're seriously going to fess up to Isaac about the whole thing? Including your involvement in it?\"\n\n\"I mean...\"\n\n\"You come off just as bad as we do,\" Mateo said. \"Whether you like it or not.\"\n\n\"I don't like it,\" I said. \"And I never... I agreed to help break them up before the wedding. Not at it. Not after it. Before.\"\n\n\"He'll understand one day,\" Mateo said.\n\n\"I'm telling him,\" I repeated. \"It's the right thing to do, Mateo. He deserves to know.\"\n\n\"What happened to your leg?\" Lawrence asked suddenly.\n\nI glanced down. I was wearing shorts, since the bandages Derek had put on my calf were somewhat bulky under jeans. I'd driven straight to Mateo's after checking out of the hotel, telling myself the whole way that I was going to have a calm, rational discussion with him until he'd opened the door and I saw his stupid, smug face.\n\n\"I cut it,\" I said. \n\n\"On what?\"\n\n\"None of your business, that's what.\"\n\n\"I heard Isaac's dad drove you back last night,\" Mateo said.\n\nI raised my eyebrows. \"Who'd you hear that from?\"\n\n\"Angela. She was looking for you at the hotel this morning because I guess the church called to say there were a couple of bins left to be picked up. She thought you or Derek had taken them.\"\n\n\"We must have forgotten them,\" I said.\n\n\"She was also kind of wondering where you were,\" he continued casually. \"Since your car was still in the parking lot but you weren't answering the hotel phone. She even tried knocking, apparently.\"\n\nMy heart thudded dully. \"What are you trying to say here, Mateo?\"\n\n\"Nothing, really,\" he said. \"I guess it's just a series of unrelated circumstances that look, you know. A little... strange.\"\n\nHe knew.\n\nHe didn't know for sure, probably, but he knew enough.\n\n\"You're an asshole,\" I said. \"Fuck you, Mateo.\" \n\nHe shrugged. \"Sorry. You knew going into this whose side I was on. It's Isaac's, and it's always been Isaac's. I'm gonna tell him what we did, one day. When he's less upset, when he's had some time. I'm not a complete psychopath, you know.\"\n\n\"Close enough,\" I muttered. \n\n\"Look, Joss,\" Lawrence piped up again. \"It's not as bad as you think it is. You think you have it bad? I lost a customer out of this. No way Isaac's going to keep buying from me.\"\n\n\"You're a moron,\" I told him. \n\n\"What? I'm gonna have to get a real job soon. That sucks!\"\n\nRolling my eyes, I turned on my heel and limped back to my car. Mateo rushed out after me.\n\n\"Don't tell him,\" he said. \"Seriously, Joss.\"\n\n\"I won't,\" I said. \"You're not giving me much of a choice, you blackmailing prick.\"\n\n\"It's for the best,\" he said. \"Though... am I right? About, uh, you and...?\"\n\n\"If you were, do you really think I'd tell you, considering what you're doing to me?\" \n\nHe had the decency to look ashamed. I got into my car, pulled out of his driveway, and finally made my way back home. My intent was to shut my apartment door, close all the blinds, and bury myself beneath a blanket on the couch for the rest of the night, stewing in my own misery as I tried to forget what had happened.\n\nThen, of course, my mom called, begging me to have dinner with a father who hated me, a sister who despised me, and her: a woman who would guilt me into doing anything she wanted.\n\n<center>**\n\nNOW\n\n**</center>\n\n\"Are you sure you're all right, sweetie?\"\n\nI glanced up at Mom, unaware that I'd been staring down at my plate with my fork in hand, not moving for long enough that it became suspicious. It seemed strange to me that she would notice that, of all things, considering how awkward that meal had been. Dad was silent as usual, but even Chelsea had seemed tense.\n\n\"Yeah,\" I said. \"Fine.\" \n\n\"You're hardly eating,\" she said.\n\n\"Not feeling well,\" I replied. \"Sorry.\"\n\n\"I hope you're not sick,\" Dad said. \"Don't want to spread it around.\"\n\n\"No, I don't think so. Just a... stomachache,\" I said.\n\n\"Hmm,\" he said, and went back to his plate.\n\nIt wasn't a lie, either. My stomach was knotted, tumultuous one moment and frozen with anxiety the next. It had been since the previous morning when I had left Derek's. I spent the rest of the day in my apartment, crying on and off, watching TV and trying to distract myself. He needed space, obviously, and time. It would do no good for me to try explaining everything when he was still upset. Never mind that he was probably trying to deal with Isaac and Angela, trying to explain the situation and what happened, to salvage those relationships I had wrecked simply by being present. I had to give him time, I reasoned with myself. I had to let the whole thing settle a bit before I could even think of trying to explain myself.\n\nI made it to about seven o'clock before I broke down and went to text him. The last message in our conversation was from him, and I burst into tears upon seeing it.\n\nThis isn't you. Whatever I did, I'm sorry.\n\nHad that really only been the previous night? It was from barely 24 hours earlier. In that time, I'd gone from trying to break things off with Derek, only to end up telling him I loved him and spending the whole night in bed with him. We planned what we were going to do, we came up with a way to have a future, and before we could even try to live it, it was ripped away.\n\nWell, not ripped away. The secrets I'd been keeping had come to light. I had no one but myself to blame for this.\n\nWhen I finally managed to stop crying and could actually see what I was typing, I sent him a message.\n\nI'm sorry. If you're willing to listen, I'd like to explain. I understand if you're not, but I swear I never lied to you about my feelings. Please give me a chance.\n\nI waited for a few minutes to see if he would respond but didn't really expect that he would. A few hours later, I checked my phone again. Still no response. I plugged my phone in and went to bed, and barely slept. When there was still no response when I woke up Sunday morning, I knew what his answer was.\n\nInstead of contacting Derek again, I texted Mateo to ask him what happened, why he couldn't have at least given me a head's up that Isaac knew. The response I got back from him was unsettling.\n\nIsaac knows?!?!?!?!??!?!?!\n\nI assumed that meant Mateo was being completely cut out of Isaac's life or that Isaac didn't know about Mateo's involvement. Either way, his response was useless to me. I sighed and responded, realizing very quickly that meant Lawrence was the one who screwed us over.\n\nYes.\n\nMy phone went off less than two minutes later.\n\n\"He's not at home,\" Mateo said urgently. \"How'd you find out? Do you know where he is?\"\n\n\"Um, from him, and no\u2014\"\n\n\"Maybe he's at his dad's,\" he mused. \"He's been chatting with him a lot lately. If he\u2014\"\n\n\"He's definitely not at Derek's,\" I said softly.\n\n\"How the hell would... oh.\" Mateo went silent. \"You're joking.\"\n\nI didn't say anything.\n\n\"You're not joking. Holy shit, Joss. You actually... after the wedding, you actually\u2014\"\n\n\"I don't need to hear this from you.\" My voice came out gravelly, the words scratching at my throat.\n\n\"No, no, of course not... wow.\" He fell silent again. \"Uh, what the hell were you thinking?\"\n\n\"Okay, I'm hanging up now.\"\n\n\"No!\" he said. \"I just meant... I mean, it wasn't like a... the wedding was months ago and you're still...\"\n\n\"Bye, Mateo.\"\n\n\"No, no, wait!\" \n\nI sighed. \"Make it quick.\"\n\n\"What did Isaac say? Like, what did he know?\"\n\nI explained what I could to him: Isaac had somehow found out, he'd clearly found out from Lawrence since Mateo had no idea and I hadn't talked to him, and he was pissed. \n\n\"I don't think he knows you were involved,\" I said sullenly. \"If he had, he would've said something, I'm sure. So, lucky you. You get to come out of it all unscathed.\"\n\n\"Well, that's not\u2014\"\n\n\"It's fine. I've already fucked up everything. Talk to you later, Mateo.\"\n\nHe protested, but I hung up and turned my phone off before burying myself under the sheets again. It was a testament to how horrible the weekend was that when the evening rolled around, I was actually looking forward to getting out of the apartment to have dinner at my parents'. \n\n\"Jocelyn!\" \n\nI glanced up, unaware I'd zoned out again. Mom looked worried beyond belief and Dad's eyebrows were furrowed.\n\n\"Are you on drugs or something?\" he asked bluntly.\n\n\"No,\" I said.\n\n\"She's just upset because Isaac found out she set the whole thing up with Lawrence to get us to break up,\" Chelsea said casually.\n\nIt took a moment for me to process the words. When I did, I dropped my fork and looked at her. Chelsea stared back evenly, her mouth set in an unhappy line and her eyes cold.\n\n\"What?\" Mom said.\n\n\"Do you want to tell them the story?\" Chelsea asked.\n\n\"How did you...\"\n\n\"Isaac told me.\" She laughed and shook her head. \"That's right, you fucked things up so badly that Isaac called me out of nowhere months later to tell me what you'd done.\"\n\n\"It wasn't like that,\" I said.\n\n\"No?\" she asked. \"You really were dating a drug dealer because you liked him?\"\n\n\"What?!\" Mom gasped.\n\n\"I didn't know he was a drug dealer,\" I said tiredly.\n\n\"Hmm. Just like you didn't know he was trying to sleep with me so Isaac and I would break up.\"\n\nI didn't have a response to that. I stared down at my plate, wishing I was back in my bed, wishing I could go back in time and fix everything.\n\n\"Let me get this straight,\" Dad finally said. \"You dated a drug dealer in the hopes that he would, what, seduce your sister so she wouldn't marry Isaac?\"\n\nWhen I didn't respond, he put his cutlery down loudly.\n\n\"I'm speaking to you, Jocelyn.\"\n\n\"It wasn't like that,\" I said again.\n\n\"What was it like, then?\" Dad asked coldly. \"If it wasn't like that, it must have been like something else.\"\n\n\"He flirted with me all the time,\" Chelsea said. \"Remember the movie night? Every time I saw him? You knew the whole time, didn't you?\"\n\n\"This is disgusting,\" Dad said. \"I can't believe you, Jocelyn. I am so ashamed of you.\"\n\nAshamed. \n\nI startled us all by laughing.\n\n\"That's nothing new,\" I said. \"You've always been ashamed of me.\"\n\n\"Excuse me?\" \n\n\"Don't act like you don't know.\" I looked up at him, glaring across the table. \"Yeah, okay? I brought Lawrence around because we thought Chelsea might try something again. You know, just like she did with Isaac. Just like she did with\u2014\"\n\n\"Don't,\" Chelsea growled. \"Don't you dare blame Cody on me. That was all you, you fucking\u2014\" \n\n\"Fuck off,\" I said. Mom gasped. \"He was your fault, too. I've never dated anyone that you didn't try to fuck, Chelsea. You might be a goddamn princess but at least have enough decency to own up to your bullshit.\"\n\n\"Watch your mouth,\" Dad growled. \n\nI snorted. \"Yeah, that's the problem here. I'm the problem here, always have been, right Dad?\"\n\n\"You ungrateful\u2014\"\n\n\"Gerald!\" Mom said warningly.\n\n\"Oh, that's not true,\" Chelsea said, clearly not listening to our parents. \"What about Mr. Thompson? I didn't try to sleep with him.\"\n\nMy face went red.\n\n\"Mr. Thompson?\" Mom repeated. \"Derek Thompson? Like, Isaac's\u2014\"\n\n\"Isaac's dad, yeah,\" Chelsea said. \"He was so grossed out, Joss. I mean, after he stopped being disgusted that you would do something like that just to get back at him.\"\n\n\"That's not why I was... that isn't what happened,\" I said.\n\n\"You didn't sleep with Isaac's dad?\" she asked.\n\n\"I... well...\"\n\n\"Oh, so you did sleep with Isaac's dad.\"\n\n\"Derek was not someone I was just sleeping with,\" I said through clenched teeth.\n\n\"Jesus Christ,\" Dad said. \"So you were... with his father. You were with his father?\"",
        "\"And it didn't have anything to do with Isaac,\" I continued. \"I never held any of this against him. The breakup thing? Yeah, okay, I had something to do with that, but that was about you, Chelsea. We didn't want you to marry Isaac.\"\n\n\"Who's 'we'?\" she asked, but I ignored her.\n\n\"Derek had nothing to do with any of that. I lov... liked him. It wasn't to get back at anyone, it wasn't some big conspiracy. I had feelings for him. I... it doesn't even matter anymore. Everything's over.\"\n\n\"Jocelyn,\" Mom gasped. \"He's got to be old enough to... well.\"\n\n\"Old enough to be my father?\" I said sarcastically. \"Great observation, Mom.\"\n\n\"Show some respect,\" Dad hissed. \n\n\"Or what?\" I looked up at him defiantly. \"What else can fucking happen to me at this point? When it rains, it just fucking pours, doesn't it? I can't date anyone because my sister will fuck anything that so much as glances at me with interest, I ruined whatever I had with Derek because of some stupid plan Mateo had because he could see right through Chelsea when Isaac couldn't, and you will never, ever be anything but ashamed of me. No matter what I do, Dad, you won't ever take my side.\"\n\n\"That's not\u2014\"\n\n\"I'm not stupid, okay?\" I pushed my chair away from the table. \"I get it. You love Chelsea far more than you'll ever love me because, what, because I wasn't a boy? Because she's perfect and I'm not? Whether or not Lawrence and I were really together shouldn't matter. She fucked my boyfriend and you still said I was the one who should be ashamed!\" \n\nDad's eyes flashed at me, redness creeping up his neck as a vein started to show through his skin. \"You have no idea what I had to\u2014\"\n\n\"Gerald!\" Mom hissed again. \"Jocelyn, calm down\u2014\"\n\n\"Why do I have to be the one to calm down?\" Tears were starting to collect in my eyes and at some point, I had stood. I didn't really remember doing it. \"Why did I have to be the one to be the bigger person, Mom? Why was I the one who had to give things up and put up with the way they treated me to 'keep the family together,' huh? You saw what they did to me, you saw how they... I mean, the wedding! Dad said he was leaving me there and you just went with him!\"\n\n\"Joss, that's not\u2014\"\n\n\"You did! I was there, remember? Chelsea cheated on her husband on her wedding day and I was the one getting yelled at. I was the one expected to come to dinner the next day and let bygones be bygones. Neither of you ever even asked if I was okay. I was just expected to forgive and forget and move on.\"\n\n\"Don't speak to your mother like that,\" Dad growled.\n\n\"Don't tell me what to do,\" I shot back. \"You... what did I ever even do to you, Dad?\"\n\n\"I treated you both the same,\" Dad said.\n\n\"Bullshit! How can you even say that with a straight face? You have beautiful, smart, perfect fucking Chelsea over there that you were so proud of, that did everything right even when she was wrong, and then you have me. And no matter what I did, no matter\u2014\"\n\n\"You need to back off,\" he said.\n\nI didn't listen. Tears were streaming down my face as I yelled, and just like the words I was yelling, I couldn't stop them if I tried.\n\n\"\u2014what I tried, who I tried to be, you never treated me the same. I'm your daughter, too! I'm not the princess and I'm not a dental hygienist and I'm not, whatever, perfect like she is, but I'm not that bad, Dad. Why don't you love me like you love her? Why do you treat me like a fucking disgrace when you're supposed to be proud of me? When you're supposed to be my father?\"\n\n\"Because I'm not your father!\" \n\nThe words didn't hang in the air like a cloud, filling the room with shock and tension. They crashed onto the table, they splattered each of us, they burst into existence like ooze erupting from a cyst. I stared at the man across the table from me, his face red and his mouth twisted into a sick snarl, and realized I was staring at a stranger.\n\n\"What?\" I whispered.\n\n\"Gerald,\" Mom choked, and she buried her head into her hands.\n\n\"I'm not your father,\" he repeated. \"You're the product of Bianca being unable to keep her legs closed while I\u2014\"\n\nHe stopped suddenly, inhaling deeply through his nose in an attempt to calm himself.\n\n\"You are not my daughter,\" he continued. \"She told me it was a one-time thing, but you came along anyway. I wasn't about to raise my daughter in a broken family, so I stayed. I tolerated you. But you are not my daughter.\"\n\nThe silence was broken only by my mom's sniffling sobs, her head still buried in her hands. After a moment, Chelsea started laughing. To her credit, I don't think she meant to. The situation was absurd at best and horrific at worst, and I knew all too well how hard it was to suppress laughter in those situations. I'd laughed at her wedding when she'd slept with my pretend-boyfriend. It seemed only right that she laughed as I found out my entire life was a lie. Still, the sound of it echoed in my ears as I walked to the front door and picked up my keys and wallet.\n\n\"Joss,\" Mom cried, rushing after me. She caught up to me halfway down the driveway, grabbing at my arm.\n\n\"Don't,\" I said. \"I'm done.\"\n\n\"No, you can't, you... family is\u2014\"\n\n\"That's not my family, is it?\" I said. \"I don't have a family.\" \n\n\"You do,\" she whimpered. \"You have me, and Chelsea is still your sister, and Gerald... he'll c-come around and\u2014\"\n\n\"Mom.\" Any tears I had left had withered away, replaced only by numbness. \"I'm never coming back here. I don't want to see any of you ever again.\"\n\nShe bawled as I walked away, and I didn't feel guilty at all.\n\n<center>**\n\nTHEN\n\n**</center>\n\n\"...happy birthday dear Jocelyn, happy birthday to you!\"\n\nI grin at the camera, my tongue poking through one of the gaps in my smile where a tooth hasn't quite come in yet, and wait as Mom takes the picture. \n\n\"Okay, go ahead,\" she finally says, and I blow out the candles.\n\n\"You missed one!\" shrieks Chelsea. \"That means you have a boyfriend!\"\n\n\"Ew!\" I squeal, blowing hard at the offending candle. \"There, now he's gone!\"\n\nWe giggle and Mom takes the cake to the side.\n\n\"Which piece do you want, Joss?\" she asks.\n\n\"I want the pink flower!\" Chelsea demands.\n\n\"I wanted the pink flower,\" I pout.\n\n\"It's Jocelyn's birthday, Chels, so she gets the pink flower,\" Mom says.\n\nChelsea sighs miserably, her forehead wrinkling as she squints her eyes and tenses her jaw. I'm only a year younger, but even I know what her fake-crying face looks like.\n\n\"She doesn't even like pink!\" she wails.\n\n\"Jocelyn doesn't mind giving Chelsea the pink flower,\" Dad says. \"We all need to learn to share.\"\n\n\"But it's my birthday,\" I protest.\n\n\"And it's very nice of you to give the pink flower to Chelsea, even though it's your birthday,\" Dad says.\n\nI nod, slightly confused, then grin again. \"That's okay. I like the blue flower better anyway.\"\n\nChelsea grins and throws her arms around me.\n\n\"You're my favourite sister,\" she giggles. I kiss her on the cheek and Mom snaps another picture, one that she's sure will someday be perfect for a wedding slideshow.\n\n**\n\n\"Did you see, did you see?\" I shriek.\n\n\"Yeah, Jossy, we saw,\" Mom says.\n\n\"You looked so cool!\" Chelsea exclaims. \"I couldn't even tell the ball was in your stick and then BOOM! You scored!\"\n\n\"It's called a crosse,\" I say proudly, holding the lacrosse stick forward. \n\nChelsea takes it from my hands and examines it, posing with it over her shoulder. I giggle and correct her stance as she puts on a serious, dramatic face.\n\n\"Do I look the part?\" she asks gravely.\n\n\"You'll be on the team in no time!\" I say.\n\n\"Good game, Joss!\" shouts the coach. I wave at him and turn to Mom.\n\n\"Where's Daddy?\"\n\nMom smiles and pats my shoulder. \"He had to leave right at the very end of the game, but he said you did a great job.\"\n\nChelsea frowns. \n\n\"But he wasn't here,\" she says bluntly. \"Mommy, you shouldn't lie.\"\n\n\"He was,\" she says again. \"He was over at the other side of the bleachers because he had to leave so fast.\"\n\n\"But he saw, right?\" I ask. \"He saw me score the last goal?\"\n\n\"Of course, sweetie. He saw.\"\n\nChelsea holds my hand as we walk to the car. I think she knows I don't believe Mom.\n\n**\n\n\"Ohmigod!\" squeals Chelsea. \"A brand new makeup kit! Thanks, Santa!\"\n\n\"I'm sure Santa says you're welcome,\" Dad chuckles.\n\nI tear my package open next, silvery paper falling to the floor.\n\n\"Pyjamas!\" I say, trying to match Chelsea's excitement. \"Just what I wanted. Thank you, Santa.\"\n\n\"They're the right size, right sweetie?\" Mom asks. \"Santa knows you went through a growth spurt.\"\n\n\"Yeah,\" I say, even though I can already tell they're far too big. \n\n\"And they're the right colour?\" she asks.\n\n\"Yep. I love purple,\" I say. \"Santa knows I hate pink, so he must have picked these ones just for me!\" \n\n\"Joss, you gotta let me do your makeup,\" Chelsea says. \"C'mere, I want to try this colour on you!\"\n\nI abandon the pyjamas next to the pile of wrapping paper and scoot across the floor to sit with my sister.\n\n\"Okay, but NO pink!\"\n\n**\n\n\"I don't want to wear her dress!\" I protest.\n\n\"It's your junior high graduation,\" Mom sighs. \"You need to wear a dress.\"\n\n\"But I don't want to wear Chelsea's old one,\" I say. \"It won't even fit me right, Mom.\"\n\n\"Just try it,\" she urges, and urges, and urges again until I put it on.\n\n\"See? That's not so bad,\" she says.\n\nI look in the mirror at the hot pink monstrosity. It's too tight under my arms and skin pinches over the edges. The fabric pulls across my chest, and the skirt that hit just above Chelsea's knee the year before is halfway down my calves.\n\n\"It's horrible,\" I say. \"This is so ugly.\"\n\n\"Uh, excuse me, I picked that dress,\" Chelsea says, her tone miffed.\n\n\"I mean it's ugly on me,\" I say. \"Mom, please, can't I just wear something else?\"\n\n\"Your dad said we don't really have the budget to get you a brand-new dress,\" she says.\n\n\"Can I wear pants?\"\n\n\"Well, it's a special occasion. I don't know if pants are\u2014\"\n\n\"What about like, a lady suit?\" I ask. \"Like the boys would wear but for girls?\"\n\nShe sighs and nods. \"I'll see what I can do, sweetie.\"\n\n**\n\n\"Can I ask you something?\"\n\nChelsea snuggles closer to me. We're far too old to be sneaking into each other's rooms to have sleepovers, but she's not just my sister, she's my best friend. \n\n\"Yes, of course.\"\n\n\"Promise you won't tell Mom and Dad?\" I whisper.\n\n\"Pinky promise.\"\n\nI glance at the doorway of her bedroom, just in case.\n\n\"Do you think Dad hates me?\" I ask softly. \n\n\"Seriously?\" Chelsea looks at me, shocked. \"Why would you think that?\"\n\nI chew on the inside of my cheek, a nervous habit I picked up from chewing on my mouthguard during lacrosse.\n\n\"I don't know,\" I admit. \"He just seems to act differently to me than to you.\"\n\nChelsea purses her lips. \"I don't know, Joss. I guess I never really thought about it.\"\n\n\"Maybe I'm just crazy.\"\n\nShe giggles. \"Well, yeah, obvs, but if it's bothering you, that means it's important.\"\n\nWe both laugh and though we don't really figure anything out, I smile as we fall asleep that night.\n\n**\n\n\"I have to tell you something,\" Chelsea says. We're sitting on the porch swing, lazily swaying back and forth.\n\n\"What?\" I ask.\n\n\"I have a boyfriend,\" she whispers.\n\nI try not to shriek and turn to her. \"Chelsea! Dad said no dating!\"\n\n\"I know,\" she hisses. \"You can't tell anyone.\"\n\n\"Pinky promise.\" \n\nShe curls her finger around mine and smiles.\n\n\"Tell me everything,\" I hiss excitedly after she lets go. \"What's his name?\"\n\nHer face lights up.\n\n\"His name's Cody.\"\n\n<center>**\n\nNOW\n\n**</center>\n\n\"You look like hell.\"\n\n\"You sure know how to make a woman feel good.\"\n\nBretta pointed a finger at me. \"I do, actually. Ask my girlfriend.\"\n\nI tried to laugh, but nothing came out.\n\n\"Come into my office. Now.\"\n\n\"I'm fine, Bretta.\"\n\n\"You're a damn liar.\"\n\nShe shut the door behind me as I walked in, slumping in the chair across the desk without being told.\n\n\"What happened this weekend?\" she asked.\n\nI chuckled, shaking my head. \"What didn't happen this weekend?\"\n\n\"Uh... well, I sent you home early on Friday because you were so hung up on Derek that you couldn't focus.\"\n\n\"Right. God, was that really only on Friday? Jesus.\" \n\n\"You're scaring me,\" Bretta said.\n\n\"Sorry.\" I shook my head. \"Okay. Well, I tried to ignore him and that didn't go so well. I still ended up at his place.\"\n\n\"What happened there?\"\n\n\"I told him I was in love with him.\"\n\nBretta winced. \"And...?\"\n\n\"He said he loved me.\"\n\nHer face brightened. \"Well, that's good, right?\"\n\n\"Well, yeah. It was. Until we broke up.\"\n\nBretta's jaw dropped. \"What?\"\n\n\"Yeah, the next morning.\"\n\n\"Girl. You need to get the story out before I lose my mind.\"\n\nI explained the rest of the story haltingly: Isaac's unexpected visit, his revelation about what Lawrence and I had done, the heartbreaking look on Derek's face as he found out what I did to his son. Then I had to backtrack and explain that part to Bretta, since I'd never told her about Mateo's plot or my involvement with it. I should have been in tears, really, but everything came out with a grim sense of numbness.\n\n\"You must think I'm a horrible person,\" I said.\n\n\"Not really,\" she said bluntly. \"I mean, the fact that this plan actually worked says a hell of a lot more about Chelsea than it does about you. And I believe you when you say you didn't know he was going to... well, you know. At their wedding.\"\n\n\"I really didn't,\" I mumbled. \"Pinky promise.\"\n\n\"Okay. So... he was mad. He didn't believe you?\"\n\nI shook my head. \"Neither of them did. Can't really blame them, I mean... it looks bad.\"\n\n\"I'm sorry, Joss. That just sucks so much, but... well, maybe given some time...\"\n\nI shrugged. \"Maybe.\"\n\nShe sat back in her chair. \"That's not everything, though, is it?\"\n\nI shook my head.\n\n\"Let me guess... Chelsea knows too, and your dad was a dick about it.\"\n\n\"Well, yes and no.\"\n\nShe frowned. \"Your dad wasn't a dick about it?\"\n\nI shook my head. \"Chelsea knows. Her dad was a dick about it. But her dad isn't my dad.\"\n\nBretta stared at me, mouth dropped. I studied the edge of her desk.\n\n\"Do you know anything about legally changing your last name?\" I asked. \"'Cause... I think I might want to change mine.\"\n\n\"You're... he's...\"\n\n\"He's not my dad and never has been,\" I said, and that was when the tears started.\n\nBretta was around her desk in an instant, wrapping her arms around me as I cried. I thought I'd run out of tears the night before while I played memory after memory over and over in my head, knowing they were all lies, every one of them. Apparently, like everything else, I had been wrong.\n\nThe worst part was, after the disastrous dinner, all I wanted to do was call Derek. He was the only person I wanted to talk to, the only one I thought might understand. I needed him more than I had ever needed anyone, and I'd lost him.\n\nI'd lost everything.\n\nBretta was far more than a boss to me in the following weeks. She refused to let me go back to my apartment, instead insisting on driving me to her house. Leigh went to my apartment that evening after work and collected some clothes and toiletries, and both of them refused to let me so much as consider living anywhere but their guest room for the foreseeable future. I resisted, of course, like I always did, and it wasn't until Bretta threatened to put me on unpaid leave that I caved.\n\n\"Good,\" she said. \"Now, you're on paid leave for the rest of the week.\"\n\nI tried to insist that I'd rather be working, but she refused to hear it. As much as I hated to admit it, she was right to make me take the time off. I barely slept the first few days, memories swirling behind my eyelids every time I shut them, little moments long since buried that had resurfaced. With those memories came emotions I couldn't handle: the feeling of not being enough, the confusion of why, the desperate attempts at being better, stronger, faster, prettier. All the things I tried to do to impress the man I thought was my dad, not understanding why he never cared.\n\nMom tried to reach me. She called every day, usually multiple times a day. When I blocked her, she called from other numbers. At the end of the week, Bretta took me to the nearest mobile shop. \n\n\"She's got a problem with a stalker,\" she said to the employee.\n\n\"Let me see what we can do,\" he said, and I walked out half an hour later with a new phone number, free of charge.\n\nIf she really wanted to, Mom could have found me. I overheard Bretta tell Leigh that she had shown up at the shop that first week. Bretta told her in no uncertain terms to back off, and that if she was ever lucky enough to hear from me again, it would be on my terms and not hers. \n\nI felt a little bit guilty when I heard that, but it might have just been that instinctive familial guilt I had from growing up with a mom like that. \n\nThe following week, I went back to work, but Bretta still insisted I stay with her and Leigh. The week after that, Leigh mentioned it was kind of nice having a roommate, and what did I think about maybe moving in permanently? I really had no emotional attachment to my apartment, so I thought it was a pretty good idea. It seemed like an even better idea when we went there to pack up and I found the various notes and packages my mom had left.\n\nSlowly but surely, I cut all ties. I stopped mourning the loss of my family and started accepting it for what it was: freedom. By the time a month had passed, I was almost embracing it, really. Bretta and Leigh helped me apply to change my last name, and though it would take a few months to be approved, the hardest part was deciding on a new name.\n\nI eventually decided on Jones, partially because I didn't really care what it was as long as it wasn't Miller, and because Bretta said it would be fun to call me JoJo. I thought Jocelyn Jones sounded like a comic book character or maybe one of The Doctor's companions, and since I didn't hate the nickname, Jocelyn Jones it was.\n\nThings weren't perfect. I missed Derek horribly. I had only given my new phone number to a few people and considered texting him to tell him I'd changed it, but decided it was a bad idea. Once upon a time, I had told myself that to end things with Derek, I needed to do it swiftly, suddenly, and completely. As much as I missed him, I was fairly certain there was no way to repair things between the two of us.\n\nThat was okay. It hurt like a bitch and it was completely unfair, but it was my own doing. Derek deserved far better than what I could offer.\n\nMy new life wasn't perfect, but it was good. Bretta and Leigh became my family, and I had friends. For once, I wasn't worried about impressing anyone. No one told me I had to do things I didn't want to for their sake. It was good. Slowly, I was healing, and slowly, I was finding happiness.\n\nSo, of course, a little over a month after that horrible weekend, someone had to come along to pick the scabs off those wounds.\n\n\"Are you serious?\" I was saying to one of the other mechanics. \"You absolutely can't crawl into a car when it's on the lift just because you forgot the wheel lock key in the glovebox. Are you fucking stupid? Take it off the lift so you don't kill yourself!\"",
        "\"Jesus, Joss, it was just a question,\" he said.\n\n\"Nah, she's right,\" Bretta said, coming up behind me. \"Don't be a moron, Travis.\" \n\nHe grumbled and walked away.\n\n\"I don't know about that one,\" I muttered to her.\n\n\"Me neither. Give it another week and we'll see.\" She tilted her head to the side. \"There's some people here to see you. Don't be mad. I've thoroughly vetted them.\"\n\n\"Who is it?\" I asked flatly.\n\n\"Joss, you should really consider talking to them,\" she said.\n\n\"Who is it, Bretta?\" \n\nShe sighed. \"Isaac and Mateo.\"\n\nI shook my head and put my earbuds in as I turned away. Bretta grabbed my arm and plucked one of the buds out of my ear.\n\n\"Hey!\"\n\n\"I wouldn't even tell you they were here unless I was fairly sure it was a good idea to talk to them,\" she said. \"Give them a chance.\"\n\n\"I'm done with that life,\" I said.\n\n\"That's why you still cry at night sometimes?\"\n\nMy face turned red and she grimaced.\n\n\"Sorry. That was harsh. But, I mean, the walls aren't exactly thick, you know.\"\n\nSighing, I followed her to the reception area.\n\nMateo and Isaac both looked up as I walked through the door hesitantly. There were no other customers and I told the receptionist she could take a break, which she gladly accepted.\n\n\"Joss,\" Mateo said. \"Can we talk?\"\n\n\"What do you want?\" I asked flatly.\n\n\"Maybe we could grab a coffee,\" he said.\n\nI shook my head. \"Say it here or leave.\"\n\nHe looked at Isaac, who nodded.\n\n\"Okay,\" Mateo said. \n\n\"So what do you want?\" I asked. \n\n\"I thought we could both use some closure,\" Isaac said.\n\n\"I'm so glad you know what I could use,\" I replied.\n\nHe chose not to respond to that, probably wisely. \"Mateo told me... about everything. The whole... what he asked you to do and everything.\"\n\nI raised my eyebrows, glancing at Mateo. \"Did he, now? And you're still good enough friends to come here in the middle of my work day to confront me together?\"\n\n\"I was pissed at first,\" Isaac said. \"But he had a point.\"\n\n\"I'm so glad he got the benefit of the doubt from you,\" I said. \"Really, that's so considerate.\"\n\n\"Come on, Joss,\" he said. \"I'm trying to apologize.\"\n\n\"Hmm. Weirdest apology I've ever heard, but sure.\"\n\nHe sighed. \"I'm sorry for how I reacted about that, but only that. I should've let you explain more, and I should've been able to see that it wasn't... Look, when Lawrence came clean about what he'd done, I was pissed. I thought you... he didn't tell me you didn't even know about that part of it, okay? I wasn't exactly thinking straight when we... saw each other.\"\n\n\"Well, sorry for my part in ruining your marriage,\" I said. \"Are we done?\"\n\n\"No,\" he said. \"I'm still pissed at you.\"\n\n\"Oh, good. Well, thank you for coming to my place of work to inform me of that fact.\"\n\n\"I tried calling you, but you've blocked my number,\" he said.\n\n\"No, I haven't,\" I said. \"I've changed my number. There's a difference.\"\n\nHe frowned. \"Why'd you change your number?\"\n\nI stared at him for a moment. \"Oh. I guess you only talked to Chelsea long enough to tell her your side of the story?\"\n\n\"I haven't talked to Chelsea since... I just talked to her the one time,\" he said. \"I thought she should know.\"\n\n\"No, that's fair. Well, I don't talk to her at all anymore. Any of them, actually.\"\n\nHis face fell. \"Oh my God. Did they cut you out because\u2014\"\n\n\"No,\" I said quickly. \"I cut them out.\"\n\n\"Oh. I see.\"\n\n\"No, you don't,\" I said.\n\n\"Well, no,\" he admitted. \"What did your parents, uh, say? About everything?\"\n\n\"My mom didn't say much,\" I said.\n\n\"What about, uh, your dad?\"\n\n\"I don't know what he said. He wasn't there.\"\n\nIsaac frowned. \"What happened to him?\"\n\nI shrugged. \"No idea. But if you mean Chelsea's dad, he was reasonably disgusted, but that was more because I dared do something that hurt Chelsea.\"\n\n\"Wait, what?\" Mateo cut in. \"Your dad\u2014\"\n\n\"Chelsea's dad. Not my dad.\"\n\nIsaac's mouth dropped open.\n\n\"You mean... wow, Joss. I'm so sorry. Who's your dad, then?\" he asked, bewildered.\n\nI shrugged. \"Don't know. Don't care. That's not my family anymore. Anyway, you forgive me for being involved in Mateo's whole seduction setup, but not for all the other stuff, and you came here to tell me that because you don't have my phone number. Is that it? Are we done?\"\n\n\"No!\" Isaac said. \"I still want to know why you did what you did.\"\n\n\"Why don't you ask your dad?\"\n\n\"I did,\" he said bluntly. \"He's pissed at you, too.\"\n\n\"Good,\" I said. \"Thanks.\"\n\n\"Was it because of me?\" he asked. \"That's what I need to know. Were you with him because you knew it would hurt me?\"\n\nI laughed. Cackled, really. I laughed almost harder than I had in the entire month since everything had happened. Shaking my head, I tried to cover the fact that tears were starting to collect in the corners of my eyes.\n\n\"No,\" I said. \"My world doesn't revolve around you, Isaac, okay? I don't give a shit what you do or what happens to you. Derek was never part of any of it. I didn't mean to... I never... he was there for me when the entire clusterfuck happened. He was there more than that, actually, a lot more. He was the one person in the world who was on my side.\"\n\nMy voice cracked and I coughed, trying to cover it. \n\n\"I never meant to sleep with him, and I didn't mean to keep doing it, and I definitely didn't mean to fall in love with him but I did, anyway. I would've stayed with him, if he'd have let me. The worst part about this whole fucking thing is that I know I hurt him and I can't fix it.\"\n\nI looked at Isaac, still struggling not to cry, not really caring if he saw it.\n\n\"It was never about you. And for the record, he was terrified of telling you because he thought you'd react exactly how you did. If you have to blame someone, blame me, but fix your fucking relationship with him, would you? He deserves it, even if you don't think so.\"\n\nIsaac didn't seem to know what to say. \"I didn't know\u2014\"\n\n\"Whatever,\" I said. \"I have to get back to work.\"\n\n\"Wait, Joss\u2014\"\n\n\"It's been a month. I'm over it. Leave me alone, okay?\"\n\n\"Let me just\u2014\"\n\nI didn't hear whatever the rest of it was. I put my earbuds back in, turned, and let the door to the shop slam closed behind me.\n\n<center>**\n\nTHEN\n\n**</center>\n\nChelsea flies into my bedroom, looking panicked.\n\n\"I need your help,\" she whispers. \"Please.\"\n\n\"What's wrong?\"\n\nShe glances at the closed door. \"Mr. Porter went golfing with Dad this morning and said he heard I was dating Cody Borowski, and Dad's livid. He's on his way home and he called Mom and she just told me.\"\n\n\"Oh no,\" I whisper. \n\n\"He's going to kill me,\" she whimpers. \"He said no dating and I\u2014\"\n\n\"How does Mr. Porter know?\" \n\n\"He said he saw us last weekend at the mall holding hands.\"\n\nI think back. \"Last weekend. When I was with you, right?\"\n\nShe nods. \"I think he must have seen us in the food court. I can't think of when else I was holding hands with Cody.\"\n\n\"Well, we just say we were hanging out,\" I say. \"We were. Mr. Porter must have been mistaken.\"\n\nShe sniffles and nods, and when she starts crying for real, I hug my sister and tell her it's going to be okay.\n\n**\n\n\"...it's not that you're dating him, Chelsea, it's that you lied about it,\" Dad says. \"I'm very disappointed in you.\"\n\nChelsea looks at me helplessly across the dining room table. Mom's hands are folded on her lap as she listens to Dad give Chelsea shit for what feels like the first time in our lives.\n\n\"I'm sorry,\" she whimpers.\n\n\"I know you're getting older and boys are becoming interesting,\" he continues awkwardly, \"but I don't think you should be dating right now. In fact, I think you need to be grounded for a while, and\u2014\"\n\nChelsea looks broken. Dad's never spoken to her like this, he's never told her she's a disappointment, he's never ever punished her before. It's too much: I can't handle it.\n\n\"It's my fault,\" I interrupt.\n\n\"Joss, no!\" Chelsea says.\n\n\"Excuse me?\" Dad asks.\n\n\"She's taking the fall for me,\" I say. \"Cody is my boyfriend. Mr. Porter must have seen us holding hands and mixed me and Chelsea up or something. I'm sorry, Dad.\"\n\nHe grounds me for a week, probably because he had to since he threatened to ground Chelsea, but it's clear he's relieved. Chelsea is annoyed because he's not as \"disappointed\" in me as he was in her, and I don't know how to tell her it's because \"disappointed\" is how Dad feels about me in general.\n\n**\n\nMom says Cody and I can keep dating as long as we have a chaperone. Chelsea eagerly volunteers.\n\nThe three of us go to the waterpark one weekend. Chelsea packs two bathing suits: the one-piece she tells Dad she's going to wear, and the very small bikini she actually wears. I pack one bathing suit that has no strings and a lot of coverage. \n\n\"Let's go on a waterslide,\" Cody says, tugging on Chelsea's arm. \n\n\"In this?\" she scoffs. \"I'll lose my top.\"\n\n\"Well, why'd you wear that, then? It's a waterpark, there's waterslides.\"\n\nShe scowls at him. \"I want to work on my tan. Why don't you and Jocelyn go?\"\n\n\"I'm in,\" I say, grinning. \"C'mon, let's go do the big one.\" \n\n**\n\n\"...so there are more Daleks?\" I ask.\n\n\"Oh yeah!\" Cody exclaims. \"They're like, the main enemy, I guess. But this one is different, because Rose touches it, see? So it absorbs her DNA and gains compassion, but since they\u2014\"\n\n\"\u2014can only feel hatred and anger, it's miserable!\" I finish.\n\n\"Exactly!\" He grins. \n\n\"Wow,\" Chelsea says, unimpressed. \"This is a really nerdy show.\"\n\n\"No, it's awesome!\" I exclaim. \"I love it.\"\n\n\"Hmmph,\" Chelsea grunts. \"Well, you two lovebirds enjoy it, then.\"\n\n\"Aw, come on,\" Cody says, putting his arm around her. \"She's only my girlfriend around your parents.\"\n\n\"Yeah,\" I agree. \n\nNeither of them need to know how much I've started to like Cody. He's my sister's boyfriend, I tell myself. It's just a little crush. I'll get over it. Those feelings aren't appropriate. \n\n**\n\n\"You're supposed to want to spend time with me!\" Chelsea hisses.\n\n\"I do want to spend time with you!\" Cody protests. \"Come to the game with me.\"\n\n\"I don't want to sit and watch a stupid football game,\" she pouts. \"I wanted to go to the movies.\"\n\nCody tries to reason with her. \"We went to the movies last weekend, and the weekend before, and you got to pick the movie both times. Can we do something I want to do this weekend?\"\n\n\"Oh, so you didn't want to go to the movies and make out in the back row?\" she says sarcastically. \"Could've fooled me.\"\n\n\"That's not what I meant,\" he replies.\n\n\"Sure it's not.\" She rolls her eyes. \"You need to put some thought into this relationship, Cody, because if you don't start treating me right, you're going to lose me.\"\n\nShe storms off and I'm left standing with Cody on the porch. He sighs and flops onto the porch swing.\n\n\"That didn't seem fair,\" I say.\n\n\"Nope,\" he says. \"Wanna come to the football game with me?\"\n\nI glance at the house, biting the inside of my cheek. \"Let me ask if Chelsea will mind, okay? She's my sister.\"\n\n**\n\nWe're on our feet, screaming.\n\n\"Go, go, go!\" Cody hollers. \n\nI don't know what position the player on the field is, but he's fast, far faster than someone on the defensive line usually is. I cheer along with everyone else as he avoids being tackled, spinning and breaking away from the rest of the pack.\n\n\"He's gonna do it!\" I screech.\n\nThe clock is ticking down, he's seconds away from the endzone, and just a breath before the buzzer goes, the ref throws his hands up. Touchdown.\n\n\"Fuck yes!\" Cody screams.\n\nWe're jumping, arms in the air, screaming and hollering. I stumble, he throws an arm around me, I clutch at him and he kisses me.\n\nI kiss him back.\n\nWe're not jumping anymore. We're not screaming. He's holding me, and I'm holding him, and my first kiss is with my sister's boyfriend and it's only when that thought floats through my mind that I pull back and gasp.\n\n**\n\n\"Chels?\"\n\nShe's sitting in her room when I enter, terrified to speak to her. She looks up from her laptop, eyes cold.\n\n\"What?\" she asks.\n\n\"I have to tell you something.\"\n\nShe laughs a bit. \"Is it that you kissed my boyfriend?\"\n\nI feel the blood drain from my face. \"How did...\"\n\nShe turns the computer towards me. Someone has sent her a link to a video playing back highlights from the game. At the end of it, the camera pans over the celebrating fans, zooming in when it sees me and Cody with our lips pressed together.\n\n\"I'm sorry,\" I whisper. \"Chels, I swear, it was a mistake and I... I came right here to tell you. I screwed up.\"\n\n\"You sure did,\" she says. \"How could you, Jocelyn? That's my boyfriend.\"\n\n\"Don't hate me,\" I beg. \"I'm sorry. I swear, it wasn't... I didn't mean to.\"\n\nChelsea isn't crying like I expected her to. She sits on the edge of her bed, clearly hurt, but not crying.\n\n\"I don't hate you,\" she says softly. \"Honestly, I've been thinking for a while now that... well. You and Cody get along so well. Maybe you should be the one dating him.\"\n\n\"Not if it hurts you,\" I say. \"Not if it's going to make you hate me.\"\n\nShe smiles at me. \"I could never hate you.\"\n\nI'm not sure what the look on her face means, but I trust her.\n\n\"So you... you think I should date him? For real?\"\n\nShe nods. \"I already texted him and said we were breaking up. Go for it.\"\n\n\"Thank you,\" I whisper, and I throw my arms around her. She hesitates before hugging me back, but I think nothing of it.\n\n**\n\n\"What do you mean?\" I ask, shocked.\n\nCody sighs. \"It's just, I'm going away for university, Joss.\"\n\n\"But it's only a year, and then I'll be graduating too.\" \n\n\"I know, but... look, it's just better this way, okay?\" he says. \"I'm sorry. \n\nI cry after he leaves, sitting on the porch swing with my head in my hands. Cody is my first love, my high school sweetheart, and now my first heartbreak. School in the fall was going to be hard enough with both him and Chelsea having graduated. Now he's not only not at school with me, he's not even my boyfriend anymore.\n\nWhen Chelsea comes home, she finds me sitting on the porch swing. \n\n\"What happened?\" she asks.\n\n\"Cody broke up with me.\"\n\n\"Hmmph,\" she says. \n\nI expect her to sit with me, maybe hug me, but she pats my shoulder and goes inside.\n\n**\n\n\"How are you doing, Jocelyn?\" asks Kelsey, one of my friends from lacrosse.\n\nI smile at her thinly. \"Okay. It's been a week. I'm over him.\"\n\n\"Wow,\" she says. \"That's really fast. What about Chelsea?\"\n\n\"What about her?\"\n\nKelsey frowns. \"Well, I mean, did you forgive her, too?\"\n\n\"Forgive her for what?\"\n\nKelsey stares at me. \"For... what happened at the graduation party.\"\n\nI'm confused. I wasn't allowed to go to the graduation party with Chelsea and Cody. It was just for grads, and just for grads who were over 18. Kelsey's eyes widen as I remain silent.\n\n\"Oh no,\" she says. \"He didn't tell you?\"\n\n\"He just said we should break up because he was going away to university,\" I say. My voice wavers.\n\n\"Joss, I'm so sorry. I mean, everyone knows but... well... Cody and Chelsea got caught sleeping together at the grad party. Lisa's parents kicked them out and everything.\"\n\n**\n\n\"Why?\" I ask her.\n\nShe looks up from the magazine she's reading. \"Why what?\"\n\n\"Why did you have sex with him?\"\n\nChelsea smirks. \"Oh, get over it, Joss. You stole my boyfriend. I just got a bit of revenge.\"\n\nMy mouth drops open. \"But I... I asked.\"\n\n\"You shouldn't have even asked in the first place,\" she says. \"Who does that? He was MY boyfriend, and you are MY sister. Well, you were. That's not how sisters treat each other.\"\n\nThere are tears in my eyes as my heart breaks all over again, not by Cody this time, but because of him.\n\n\"I'm so sorry,\" I gasp. \"Chels, please forgive me. I didn't know. I'm so sorry.\"\n\n\"No,\" she says. \"I don't forgive you. You don't deserve it.\"\n\n\"Why didn't you just tell me?\" I whisper. \"I would never have... I wouldn't, if you had told me.\"\n\n\"Why?\" Chelsea closes the magazine and sits on the edge of her bed. \"You betrayed me, Jocelyn. You better watch out, because honestly? Now that I know I can't trust my own sister, if I like someone you like, I'm going for him. And since we both know you're a short little troll who looks like a fucking armchair, who do you think they'll prefer?\"\n\nShe points at her door and I leave her room, wishing I could go back in time and just fix everything.\n\n<center>**\n\nNOW\n\n**</center>\n\n\"Ma'am... ma'am! You... no, you absolutely cannot go back there!\" \n\nBretta was talking so loudly that I could hear her over my music. Alarmed, I pulled my earbuds out and turned just in time to see the shop door flying open. Angela Thompson stormed through the door towards me with Bretta close behind, her face torn between being offended at Angela's impertinence and concerned at what, exactly, she was doing.\n\n\"Oh no,\" I whimpered.\n\nThere was nowhere I could run, and even if there was, there was no time. I was going to have to weather whatever Angela decided to throw at me. Given the look on her face, it could be anything from words to punches, and I braced myself as she flew across the shop.\n\n\"Angela, please,\" I pleaded.\n\n\"Come here,\" she demanded.\n\nI tensed, tightening my muscles in anticipation for a complete smackdown from my ex-boyfriend's mom... or was she better described as my ex-boyfriend's ex-wife? \n\nWhen she wrapped her arms around me and pulled me in for the warmest hug I'd ever received, I was more disoriented than I would have been if she had just slapped me.\n\n\"I am so, so sorry,\" she said.\n\nOver her shoulder, Bretta paused, seemingly as confused as I was.\n\n\"Um... what?\" I asked.\n\n\"I'm so sorry, dear.\" She pulled back, her hands still on my shoulders as she looked at me. \"Isaac told us about your family and about what you said to him yesterday and I just... my heart just broke for you, dear. I'm so sorry.\"\n\nA nervous laugh bubbled past my lips. \"Oh.\"\n\nHer face softened. \"You look terrified.\"\n\n\"I thought you were going to kill me,\" I admitted.\n\nAngela dropped her hands from my shoulders, horrified.\n\n\"Oh my God,\" she gasped. \"Jocelyn, I'm so sorry. I didn't even... of course, that's just... I didn't mean to frighten you.\"\n\n\"It's okay,\" I said. \"But, um, maybe we could move to the front of the shop before my boss loses her mind?\"\n\n\"Oh, it's been lost for a while,\" Bretta said pleasantly. \"But yeah, you should really have PPE to be back here, so if you could maybe come to the front with us, Ms...?\"\n\n\"Angela's fine,\" she said cheerfully. \"I apologize. I just needed to let Jocelyn know how sorry I was to hear about everything.\"\n\n\"Angela,\" Bretta repeated, realization dawning on her face. \"I see.\"\n\n\"Let's head up front,\" I said. \"Or, actually, maybe I could take my lunch now, Bretta? Angela and I can go grab a coffee.\"\n\n\"That would be wonderful,\" Angela said earnestly. \n\nBretta led Angela back to the front of the shop while I ran to grab my wallet. When I returned, their heads were close together, both with serious expressions on their faces as they whispered to each other. As soon as I entered the reception area, they stopped and looked at me.",
        "\"That wasn't obvious at all,\" I said sarcastically.\n\nAngela blushed and Bretta just laughed. \n\n\"See you in an hour,\" she said. \n\n\"So, um... how's Samantha doing?\" I asked.\n\nAngela smiled and began talking about her daughter as we walked to the coffee shop. The small talk was almost surreal, really: after all the things I'd been through with her family, having a pleasant chat as we went to grab lunch together felt strange in its normalcy. \n\nStill, it was an enjoyable strangeness. When we finally settled at a table in the corner of the shop with our drinks and sandwiches, I was almost sad that it had to end. \n\n\"So,\" Angela said firmly as soon as we were seated. \"Let's talk.\"\n\n\"What would you like to talk about?\" I asked, almost shy.\n\nAngela smiled. \"Relax, dear. Whatever happened with Isaac and Derek happened. Both of them are stubborn as hell and have a dramatic streak, but I think I have a fairly clear idea of what actually went on. I want to listen, okay?\"\n\nSwallowing hard, I nodded.\n\n\"Right. I guess that just seems weird. I mean, Derek is your... you know.\"\n\n\"I know,\" she said. \"And Isaac is my son. And none of this is exactly straightforward, is it?\"\n\n\"Yeah, I guess.\"\n\n\"Do you remember when Isaac introduced you? That day on the driveway?\"\n\nI smiled. \"Yeah. Things were a little simpler back then.\"\n\nAngela smiled back. \"Yes, they were. But honestly, Jocelyn, the moment I met you, I just... knew. I cared about you instantly. Is the whole situation strange? Yes. But it's not... bad. Does that make sense?\"\n\nIt didn't quite, but I still understood. \"Yes.\"\n\nWe talked over everything while we ate. I told her about Mateo's idea and why I became involved; I told her how mad I was when I discovered what Lawrence had done at the wedding. As difficult as it was, I told her how Derek and I ended up together. It only grew more difficult when she started asking questions.\n\n\"So, the night before Isaac... let's say, discovered you and Derek... what happened?\" Angela asked.\n\nI bit the inside of my cheek. \"He's told you, hasn't he?\"\n\nShe nodded. \"I still want to hear your side.\"\n\nI sighed, staring down at the empty plate in front of me. \"I told him I was in love with him.\"\n\n\"And were you?\"\n\nI laughed softly. \"Yeah.\"\n\nShe paused for a moment, then leaned forward.\n\n\"And are you still?\"\n\nMy heart clenched painfully. I swallowed hard, staring at the plate in front of me.\n\n\"Jocelyn?\"\n\nSlowly, I nodded. \"Very much so.\"\n\nMy voice broke just a bit. Angela kindly pretended not to notice.\n\n\"What about your family?\" she asked, changing the subject. \"What happened?\"\n\nEven Bretta didn't know all the details of what happened at that dinner. I had told her the gist of it, the main points, but not everything. I meant to give Angela the same kind of breakdown, but before I knew it, I was retelling every horrid moment in painful detail. She listened, a hand over her mouth, and when I finished by telling her about changing my name, she got up to come around the table and hug me again.\n\n\"I just don't understand one thing,\" she said after sitting back down. \n\n\"What's that?\"\n\nShe studied me for a moment. \"You said you and Chelsea used to be close, but you'd done something to upset her.\"\n\n\"I've never told anyone,\" I said.\n\n\"Tell me,\" she urged patiently. \"I think it's probably an important piece in understanding all this.\"\n\nReluctantly, I told her about Cody. I smiled when I thought of him, despite the way he'd broken my heart and how his presence in my life had revealed my sister's true personality. The smile faded when I told Angela how I'd met him.\n\n\"He was Chelsea's boyfriend,\" I explained. \"He kissed me... well... we kissed, I guess, at a football game. While they were still dating. I had a really big crush on him and it just...\" \n\nI stopped, sighing. \n\n\"It was a bad moment. I went home and told Chelsea immediately.\" \n\n\"I see,\" Angela said.\n\n\"They broke up, obviously,\" I continued. \"I asked Chelsea if she... well, if it would be weird for me to actually date him, since we were pretending to date anyway and since I really liked him. She told me to go for it.\"\n\n\"That was very, um, rational of her,\" Angela said. \"Not what I expected.\"\n\n\"Well, rational in that it gave her an opportunity to get back at me. She slept with him after they graduated, he broke up with me, and that was that.\"\n\nShe winced, inhaling sharply through her teeth.\n\n\"It was my own fault,\" I said. \"I betrayed her.\"\n\n\"Uh, not really,\" Angela said. \"You asked her first and she told you to go for it?\"\n\n\"Yes.\"\n\n\"Then that's not a betrayal, Jocelyn. That's a cold, calculated little move on her part.\"\n\nHer support meant more to me than I could explain. More than I could handle, really. Shaking my head, I tried to push down the lump that was swelling in my throat.\n\n\"None of it matters now, anyway,\" I said. \"I'm done with them. In a couple of months, I won't even have the same name as any of them.\"\n\n\"What's the new name?\" Angela asked. \"If you don't mind telling me, that is.\"\n\nI smiled. \"Nothing too exciting. Jocelyn Jones.\"\n\n\"Makes you sound like a superhero.\" She grinned, then took a breath. \"Joss, have you thought about talking to Derek?\"\n\n\"He doesn't want to hear from me,\" I said immediately.\n\n\"That's not true at all.\"\n\n\"Angela, he made it pretty clear\u2014\"\n\n\"No, he made some stupid statements while he was upset and now he regrets them, but doesn't know how to reach you, and wouldn't know how to fix things if he did,\" she said. \"I'm not going to pressure you or tell you what to do, but Jocelyn, believe me. If you're willing to forgive Derek for being an absolute idiot and let him have a second chance, he'd beg you to take him back.\"\n\n\"I don't know about\u2014\"\n\n\"He misses you,\" she said. \"Dear, I know my ex-husband better than anyone knows him. He's miserable. He was miserable before Mateo came clean with Isaac and he's more miserable now that he knows he was wrong. He asked Isaac if he had any way of contacting you. Other than coming to the shop, Isaac said he didn't, and it was almost impossible to get Bretta to even tell you Isaac was there.\"\n\nI frowned. \"Did Derek ask you to come here today?\"\n\n\"Absolutely not,\" she said. \"He'd be furious if he knew I had. I needed to see you myself and know that you were okay. Whatever happened between you and him, or him and Isaac, I still care about you, you know.\"\n\nI almost started crying when she said that, and almost started crying every time I remembered her saying it for the rest of the afternoon. It didn't make sense to me that this woman who was so convolutedly connected to my life could offer me that kind of unconditional support. My own mother couldn't do that. Why the hell could Angela Thompson?\n\n\"Joss?\"\n\nI jumped out of my thoughts, looking up at Bretta guiltily.\n\n\"Yeah?\"\n\n\"Leigh just called and said she's done work early.\" Bretta glanced around the shop, then came a bit closer. \"If I give you twenty bucks for a cab, is it cool if I take off early?\"\n\n\"You're my boss, Bretta. You don't need to ask my permission.\"\n\n\"I'm also your ride, smartass,\" she said. \"And your roommate, and it's been a while since Leigh and I have had the house to ourselves...\"\n\nI rolled my eyes. \"That has literally not stopped either of you a single time.\"\n\nShe smirked. \"I know. But this way we can do it in the living room.\"\n\nI laughed and told her it wasn't a problem, shaking my head and shoving the cash she tried to give me for a cab back at her.\n\n\"It's like a $10 Uber,\" I said. \"It's fine.\"\n\nShe tried to put the bill in my coverall pocket.\n\n\"Bretta! If it means that much to you, I'll take $20 off my rent next month.\"\n\nI could never quite remember if it was bad or good things that were supposed to come in threes, and I guess it didn't really matter. I wasn't sure if Angela's visit was a good or a bad thing. It was just a thing. For me, it wasn't about anything happening in threes: it was that when it rained, it poured.\n\nI sent the other workers home right at the end of the day, but took my time closing up the books and cash register since I figured Bretta and Leigh could use a little extra alone time. Just before ordering an Uber, I texted them both to say I was on my way home and would gladly put on headphones if they weren't done.\n\nIt was drizzling rain, so I waited in the shop. When the driver texted me to say he was there, I closed up, set the alarm, and locked the door. Just as I turned, I saw her.\n\n\"Please,\" she said, holding both hands up as if it would stop me.\n\nHer handbag swung from her elbow and I stared, too dumbfounded to be angry.\n\n\"I have an Uber waiting,\" I said.\n\n\"I just want to apologize, Jocelyn.\" Her voice cracked and I looked at her, really looked at her.\n\nI guess there was a reason I looked more like my mom than my dad... well, the man she'd said was my dad. As I looked at her that day, though, I couldn't even see myself in her. She was slightly taller, wore her hair longer than mine, and was always perfectly put together like Chelsea was. That day, she wasn't. Her eyes were red, her skin drawn, her hair was even showing grey which was practically blasphemy in her mind.\n\n\"I miss you,\" she said tearfully. \"You're still my daughter and... I'm just so sorry. What can I do to... I just want to be part of your life.\"\n\n\"I don't think that's a good idea,\" I said.\n\n\"Joss, I'm sorry, I am so, so sorry. Isn't there anything I can\u2014\"\n\n\"I accept your apology,\" I said. \"I forgive you, Mom.\"\n\nHer eyes lit up with hope, and I almost\u2014not quite, but almost\u2014felt guilty.\n\n\"But no,\" I continued. \"You made your choice a long time ago, and you need to live with it now. Your family doesn't include me, okay? I'm done. Go back to them, and I'll go back to my life.\"\n\n\"Jocelyn, wait,\" she begged. \"Joss, please, let me just\u2014\"\n\n\"Mom, if you love me at all, leave me alone.\"\n\nShe fell silent and I went to the Uber, apologized for the wait, and didn't look back as he drove away. I looked forward, only forward, and honestly... it felt good.\n\nIt felt right.\n\nWhen I got home, Bretta and Leigh were back in their bedroom, if they'd ever actually left it in the first place. I jumped in the shower, mostly to clean off but partly so I didn't have to listen to them, though I likely wouldn't have been able to hear them anyway. \n\nMy mind was occupied with echoes of Angela's words mixed with my mom's visit. At first, it seemed simple. Mom wanted a second chance, and I said no. Angela said Derek wanted a second chance, and if I wasn't going to give one to my mom, why would I give one to him?\n\nIt wasn't that simple, though. \n\nMom had a lifetime of second chances, even if neither of us had ever realized it. My existence in itself was a second chance for her. She'd had every opportunity to protect me, to take me away from an environment that was clearly painful to exist in, and she'd turned a blind eye to it until I'd finally left. \n\nDerek wanted a second chance, but how could I give him one? I barely thought I deserved a second chance, and I was the one who wanted it.\n\nI wanted him. We had hurt each other, but if I could forgive my mom for a lifetime of hurt, how could I not forgive him? What differed in the situations was me. With Mom, the only thing I was guilty of was being born. With Derek, I was guilty of much more. With Derek, I was not the only one who had to forgive.\n\nI stayed under the running water for far longer than I needed, staring blankly at the shower wall as I thought. Forgiving Derek and asking to be forgiven opened me up to even more heartache. Not doing so, though...\n\nBefore the water could run cold, I turned it off, got out, and dried off. I towel-dried my hair, knowing it would be completely dry soon enough, and put on jeans and a Wonder Woman T-shirt. Bretta and Leigh were still otherwise engaged, so I left a note on the fridge and grabbed my keys.\n\nI almost chickened out twice on the drive over. At one point, I pulled into a parking lot, fully intending to turn around and go home. I was so certain I was going to give up that I almost surprised myself when I turned out of the parking lot and kept heading in the other direction.\n\nWhen I turned down his street, I slowed my car down, almost afraid to drive up to his house. What if he wasn't home, or worse, what if he had someone over? I almost chickened out a third time, intending to just keep driving past his house without stopping, but even from down the road I could see his car in the driveway and the overhead garage door open.\n\nI parked on the street in front of his house, wiped my sweaty palms on my jeans, and got out of the car. Drops of rain fell on my face and shoulders as I paused a final time, looking up at Derek's house. \n\nI couldn't give Mom a second chance. I was walking away from that life, leaving it behind me. It was time to find out what lay ahead, no matter where that path may go. It was time to move forward, no matter the direction, no matter the consequences. All I could do was hope Derek would be on the path with me, and if he wasn't, well, there were more paths to take.\n\nThe rain fell faster as I took a breath and started towards the garage. Halfway up the driveway, he looked up from the motorcycle he was working on and saw me striding confidently towards him, though the confidence was definitely just an act.\n\nA few things flashed across Derek's face: surprise, amusement, a mild sense of unease mixed with a strong hint of embarrassment. He stood, wiping his hands on a towel he had resting nearby, and stepped around the bike. I couldn't help the pang of longing that went through me. He looked so good, like always, his hair just the slightest bit messy and the tattoo on his neck teasing me from beneath his collar.\n\n\"Jocelyn,\" he said. \"What are you doing here?\"\n\n\"I can go,\" I said, pausing.\n\n\"No,\" he answered quickly. \"Don't.\"\n\n\"Okay.\" I stopped just inside the garage, a good distance away from him but out of the rain.\n\n\"It's good to see you,\" he said.\n\n\"You too.\"\n\nI didn't miss the fact that his eyes flicked up and down my body before reaching my face. After a moment, he sighed.\n\n\"What, uh... what brings you by today?\"\n\n\"You know Isaac came to see me.\"\n\nDerek nodded. \"He called last night.\"\n\n\"When did you find out about what really happened?\"\n\n\"Mateo came clean a couple of weeks ago,\" he said. \"I tried calling but... well, I thought you'd blocked me, but Isaac said\u2014\"\n\n\"I changed my number,\" I said.\n\n\"I'm sorry,\" he said. \"Joss, I am so fucking sorry. About... I mean, obviously about not listening and thinking... I fucked up, okay? I'm sorry for that and I will beg and grovel if that's what you want. But what happened with your family, I'm so sorry you went through that.\"\n\nI nodded sharply, not able to meet his eyes. \"Thanks.\"\n\n\"When he called last night, Isaac said, uh, you told him to call me. To fix things.\"\n\nI nodded again.\n\n\"Thank you,\" he said. \"We've been trying to get past everything that happened, but that really... that helped a lot.\"\n\n\"No problem,\" I said.\n\nThere was a tense moment before he spoke again.\n\n\"Can I apologize? For the rest of it?\"\n\n\"Only if you'll let me apologize for my part,\" I replied.\n\n\"You don't need to.\"\n\n\"Yes, I still had\u2014\"\n\n\"No,\" he said firmly. \"You've apologized. You've more than apologized. Okay? And it's accepted. Whatever part you had in anything, it's forgiven, okay?\"\n\nMy chin trembled and I fought to keep myself from crying. \"Okay. Thank you.\"\n\n\"Look, I don't expect that you'll even, you know, forgive me, let alone...\" He trailed off, shaking his head. \"I just need you to know I'm sorry. I didn't give you a chance to explain. I should've at least listened. Ange was so pissed when... well. I thought she'd, you know, be more uh... concerned about the fact that we... well. She wasn't, she was pissed that I let things go down the way they did. Knowing she would've approved of whatever it was we had... I was just so mad and I treated you horribly. You didn't deserve that.\"\n\n\"I deserved it a bit,\" I said quietly.\n\n\"No,\" he said again, and he almost stepped towards me before catching himself. \"You didn't, and you don't. Whatever happens... you don't deserve to be treated like that.\"\n\nI couldn't respond, so I just nodded.\n\n\"I'm sorry,\" he said. \"Is there any chance you'll forgive me?\"\n\n\"I don't know,\" I replied.\n\n\"That's fair, I don't\u2014\"\n\n\"I'm interested in that whole grovelling thing you were talking about, actually.\"\n\nHe laughed, startled, then eyed me cautiously. \"Are you...?\"\n\n\"Yes, Derek, I forgive you,\" I said. \n\nThe way his face lit up almost ended me. Still, it only lasted a moment before he looked worried again.\n\n\"Isaac said one other thing when he called last night.\"\n\n\"I find that hard to believe. I'm sure he said lots of things.\"\n\n\"Smartass,\" he muttered, and I bit back a smile. \"Yeah, but one other important thing.\"\n\n\"What was that?\"\n\n\"He said you told him you loved me, and that he truly believed what you said.\"\n\nI looked down at my shoes. \"You already knew that.\"\n\n\"Is it still true?\" he asked.\n\n\"Yes,\" I whispered, still staring at my shoes. \"Yeah, that's... yeah.\"\n\n\"Joss?\"\n\nI closed my eyes, waiting for him to laugh or send me away or tell me he was sorry, he couldn't forgive me that much.\n\n\"Yeah?\" \n\n\"It's still true for me, too.\"\n\nHesitantly, I looked up at him. \n\n\"I love you, Joss.\"\n\n\"You're gonna make me cry,\" I whispered.\n\nHe looked halfway to crying himself. \"Will you take me back?\"\n\nIt was the moment I knew that \"forward\" wasn't just an option, it was the option. There were no secrets, no time limit, no pushing away feelings because of what other people might think. After everything, the rain had stopped, the clouds had cleared, and he was there; he was mine.\n\nTears spilled as I nodded and started towards him. He met me halfway, throwing his arms around me and immediately lifting me in the air as he kissed me. It wouldn't have mattered if he'd left me on the ground; I felt like I was flying anyway. \n\nHis lips pressed against mine, warm and inviting, tasting so familiar and so good.\n\n\"I missed you,\" he whispered.\n\n\"Take me inside,\" I murmured. \"Please?\"\n\nHe didn't need to be asked twice. We were in his bedroom moments later, exploring each other like it was the first time all over again. His hands slid beneath my T-shirt, fingers skimming along my ribs and stomach. \n\n\"Off,\" he mumbled, slipping his hands out so he could tug the shirt up.\n\nI laughed, feeling him grin against my mouth before parting from me just long enough to pull it up over my head. He wrapped his arms around me again, holding me against his body as though he was afraid I'd disappear if he let go. I clutched at him, winding my fingers through his hair and stretching up to kiss him until my desperate need to feel more of him won out. \n\nI pulled away so I could lift his shirt up. He helped me remove it and went to embrace me again, only pausing when he looked down and saw my bra.\n\n\"I thought you hated pink,\" he said, fingers tracing the lacy fabric along my cleavage. \n\n\"Turns out I just hated it because my sister liked it,\" I admitted.\n\nHe laughed and reached for the button on my jeans. \"Matching?\"\n\n\"Of course. I have a little bit of style, you know.\"\n\nGrinning, he undid my jeans and slipped them down my hips, inhaling sharply when he saw what was beneath them. \n\n\"Perfect,\" he declared, and I'm sure my cheeks went the same colour as my panties.\n\nIf he noticed, he didn't say anything, just touched my cheek as he kissed me again. I trailed my hands down his chest, smirking as he shivered when I touched a sensitive spot on his ribs. Lazily, my fingers walked down his stomach to his belt, unhooking it slowly and then unbuttoning his jeans. He groaned when I slipped my hand inside and wrapped my fingers around his cock, his knees almost buckling as I began to stroke him.",
        "\"I love you,\" he whispered.\n\n\"I love you, too,\" I replied.\n\nHe nipped at my lip, letting me go so he could push his pants off completely. As soon as they were down, he gently circled his fingers around my wrist, pulling my hand off his cock. \n\n\"Come here,\" he said, tugging me towards the bed. He stopped just long enough to take my bra off, then directed me onto my back and proceeded to completely worship my body.\n\nI have no idea how long he was at it. His lips touched me everywhere, his hands gliding along my skin, tracing every inch of me until I was practically liquid beneath his palms. He kissed my breasts and lavished attention on my nipples, sending shocks of pleasure through my entire body each time his tongue circled one of the hard nubs. His fingers mapped the tattoo on my hip, followed by his tongue, making me squirm and shiver beneath him. By the time he finally pushed his face against my pussy, I was aching for release.\n\n\"Please, Derek,\" I begged. \"I need to come.\"\n\n\"Yes, ma'am,\" he said seriously, and when he moved my panties to the side and dipped his tongue between my folds, my giggle turned into a low groan.\n\nHe didn't tease me. He didn't need to. I was a complete mess, burning with agonizing desire. Derek licked every inch of my pussy before focusing on my clit, bringing his tongue against it again and again until I was panting and trembling.\n\n\"Please,\" I gasped, squirming beneath him.\n\nA finger slid inside me, followed quickly by another. I shook, almost at the edge, almost ready to explode. When I glanced down, I saw Derek looking up at me, his eyes sparkling as he sucked on my clit, adoring and reverent, and that was all I could take. My eyes slammed shut of their own accord, the entirety of my being completely at his mercy. I cried out, nonsensical gibberish in place of words, white light in place of vision, pleasure in place of any other sensation I could have possibly felt.\n\nSlowly, I regained a sense of myself. Derek was kissing my pussy, gently nuzzling against the tender, sensitive areas while I caught my breath. When my fingers loosened in his hair, he carefully withdrew his fingers from inside me, kissed my mound a final time, and sat up.\n\n\"You're so fucking good at that,\" I gasped. \n\nHe laughed, the corners of his eyes crinkling as he leaned down to kiss me. I kissed him back eagerly, the taste of my pussy on his lips unreasonably erotic. Without speaking, I sat up, tucking my knees under me as I rose to meet him. I pushed lightly on his chest, nudging him until he sat back so I could crawl onto his lap.\n\nChest to chest, his mouth didn't leave mine as I reached between us to guide his cock inside me. I felt him inhale when the tip of his cock breached my entrance, and felt him groan when I sank down on him. \n\n\"You're amazing,\" he breathed, his voice hoarse. \"Joss, you feel so good.\"\n\nI responded by rolling my hips, air pushing out of my lungs as I sank down on him again, and again, and again. He held me tight, his hand rubbing my back gently while I rode him, pressed as tightly together as we could get.\n\nEven as I rode him, he focused on me and me alone. He touched and kissed and caressed anything he could reach: his lips were on my neck one moment and my shoulder the next, his hands cupping my breasts before embracing me, then sliding down to my ass and squeezing. \n\nWhen we came, we came together. Derek's face was buried against my breasts and he cried out. I felt it vibrate through me, filling me as he filled me, surrounding my heart and claiming it as his own.\n\n\"I love you,\" he said against my chest.\n\n\"Me or my tits?\" I asked, panting.\n\nHe laughed and pulled back. \"You first. Tits after.\"\n\nI giggled and he pulled me down on top of him, refusing to let go of me for even a moment.\n\n\"I need you,\" he said. \"I'm never letting you go.\"\n\n\"I'll have to go to the bathroom or something eventually,\" I laughed.\n\nHe captured my lips with his. \"I know. But you're mine, and I'm not letting go of you ever again.\"\n\nI smiled, pressed my face against his chest, and fell asleep knowing he never would. \n\n<center>**\n\nEPILOGUE\n\n**</center>\n\nRain on a wedding day is the best possible thing that can happen.\n\nIt takes the pressure off, first and foremost. So much time and money is spent trying to make sure every last detail is absolutely perfect, but at the whim of Mother Nature, it's gone in an instant. On Chelsea's wedding day, it rained heavily in the morning and faded to a drizzle, and it was gone by the evening when the real storm started.\n\nOn my wedding day, the sun shone in the morning. During the ceremony, a storm rolled in. The photos showed the progression: gathering clouds as I walked down the aisle, a darkening sky as we exchanged our vows, and the rain beginning to fall the moment the officiant instructed Derek to kiss me.\n\nA few people expected us to rush, to kiss quickly and then scurry down the aisle. I wasn't going to let any amount of rain ruin that first kiss with him, that first moment of him as my husband and me as his wife. Bretta's cutting laugh filled the air as she leapt forward, snatching an umbrella from someone sitting nearby, and opening it over me and Derek as the clouds truly began to let loose. She was soaked moments later, but let us have our moment as Isaac did the same for the poor officiant trying to cover her head with her folder of papers.\n\nIt was hopeless, honestly. Even with the umbrella, Derek and I were soaked. It didn't matter: a little rain couldn't dampen our spirits. We let our guests hurry away from the garden while we stayed outside, laughing and splashing through the puddles, Derek lifting me in the air and kissing me until the photographer insisted we had to have a couple pictures where he could actually see our faces. \n\nWe obliged for one or two, then it was back to Derek holding me and kissing me and laughing with me.\n\nHe had proposed far too early: mid-October, at Thanksgiving, only a few short months after I'd left my family and only a couple of weeks after I finally became Jocelyn Jones. I had been so nervous, so incredibly terrified to attend. It was my first family holiday with no family, my first time truly meeting Derek's parents and his sister, and my first time seeing everyone in the same place at the same time.\n\nMy palms were sweating as he helped me off his motorcycle that unseasonably-warm day.\n\n\"You're not nervous?\" I asked.\n\n\"Nope,\" Derek said. \"It's going to be fine, Joss.\"\n\nI held my helmet under one arm and Derek took my other hand, leading me up the driveway to Angela's house.\n\nAngela had insisted I invite Bretta and Leigh when she found out neither of them had family in the city, so at least I would have them there. I knew Isaac was bringing Mateo and Samantha was bringing her boyfriend, though I couldn't remember his name. \n\nThe scariest part, though, was the other attendees: Derek's parents, his sister and her husband, and Angela's parents. All of whom had been at Isaac's wedding, all of whom knew me as the poor girl whose boyfriend had slept with the bride, and all of whom were going to meet me for the first time as Derek's girlfriend.\n\nI was beyond nervous. Nervous was barely a memory: I was terrified.\n\nDerek didn't knock, simply opened the door and called out a greeting.\n\n\"Hey, Dad!\" Samantha said from the couch.\n\n\"Is that Derek?\" Angela shouted from the kitchen.\n\n\"Sure is!\" he replied.\n\n\"Thank God,\" she said, turning the corner from the kitchen. \"That means Jocelyn's here.\"\n\n\"Ouch,\" Derek laughed. \"I'm replaced so easily.\"\n\n\"Oh, don't be dumb,\" Angela said. \"Joss, can you give me a hand? The microwave is doing that thing again and you got it working last time.\"\n\nDerek took my helmet from me, kissing me on the top of my head. \"Help Ange out, I'll introduce you to everyone in a minute.\"\n\nAngela ushered me to the kitchen before I could even glance in the living room. Isaac and Mateo were standing near the refrigerator and I said hi to them awkwardly before turning to the microwave. Surprisingly, it was on, a dish of vegetables clearly spinning inside.\n\n\"Um, I thought\u2014\"\n\n\"I know, it was a ruse,\" Angela said excitedly. \n\n\"What?\"\n\n\"Mom,\" Isaac said, rolling his eyes.\n\n\"Oops,\" she said, giggling.\n\n\"What's going on?\" I asked, confused.\n\nI found out soon enough: Mateo and Isaac blocked me from going back to the living room, directing me to the balcony just off the dining room. Heart racing, I looked at Angela helplessly. She smiled, her eyes sparkling.\n\n\"Go see,\" she said simply.\n\nAs soon as I stepped onto the balcony, tears sprung into my eyes. It was October, too cold for any sort of garden to be flourishing, but flowers were everywhere. They were spread along the railing, piled on the table, and filling the wooden planters Derek had delivered that day so long ago. He stood among them, eyes sparkling with excitement, half a nervous smile spread across his lips.\n\nWell, he stood only for a moment. As the door closed behind me, his smile grew wider, he went down on one knee, and pulled the ring box out.\n\n\"I don't want to introduce you as my girlfriend and I said I wasn't going to let you go,\" he said. \"Marry me, Joss.\"\n\nA giggle and a sob seemed to mix together and bubble out of my chest. It had only been a matter of months, but they were the happiest months of my entire life.\n\n\"I'm not changing my name again,\" I said. \"I paid good money for the new one.\"\n\nHe laughed and nodded. \"You don't have to. Will you marry me, anyway?\"\n\n\"Yeah,\" I said. \"I mean, yes. Of course.\"\n\nWhen we went back inside, Derek took me straight back to the living room.\n\n\"All right, everyone, sorry. Just had to take care of some business. I'd like you to meet Jocelyn Jones, my fianc\u00e9e.\"\n\nWe spent the winter planning our wedding for the following spring. April rolled around with snow still on the ground, and the usual April showers became May showers. When our wedding day rolled around at the beginning of June, flowers were in bloom, trees were just budding, and it was beautiful.\n\n\"Your pictures are going to be perfect,\" Angela had declared that morning, only to grimace when she saw the clouds starting during the ceremony.\n\nShe was right though; they were perfect. Sure, our hair was matted to our heads, water dripped down our faces, and my skin was pale and covered in goosebumps, but none of that mattered. We were in them together, happy and in love, never letting go, and never letting that knot unravel.\n\n<center>**\n\nThe End\n\n**</center>\n\nAuthor's Note:\n\nThank you to Bebop3, norafares, and OneAuthor for editing and feedback, as well as all the donut-loving llama deniers who read and offered their insights. A special thanks to Paul M and K for their support, and thanks to all of you for reading! I hope you enjoyed the story."
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "erotica",
        "family drama",
        "making love",
        "may december",
        "plot driven",
        "romantic",
        "twist",
        "wedding",
        "young woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/when-it-rains-pt-03-1"
}