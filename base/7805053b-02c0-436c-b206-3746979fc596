{
    "title": "Vision Ch. 06",
    "pages": [
        "I do apologize for the random Chapter inserts in the posts. I have this typed in its entirety and am editing as I write re-write and post - it gets a bit crazy, but hopefully the meaning is not lost. Again, thank you so so much for the kind words and encouragement, feel free to question and critique - please post comments I am still learning as I go and having a great time with this!!\n\n*****\n\nUp at 5 am for a long grueling trip, 15 hours straight to Mauritius and then 3 more to the Seychelles, an entire day of travel. I loathe flying.\n\nThankfully, I end up sleeping most of the way. I am almost rested by the time I touch down in Praslin. My poor-boy French comes in handy. Easily getting a cab to the hotel I drop my bag off with the clerk before going down to the beach. It's almost six pm. The sun will be setting soon. \n\nShe ran away to paradise. I force myself to slow down and take it all in. I sit down and take off my shoes. Rolling up my jeans, I knot my shoe laces and throw them over my shoulder. Pink, sugar soft sand, very fine, blue water golden sunset, postcard beautiful. I walk around a clump of trees. \n\nThere's a girl reclining on a folding chair staring intently at the setting sun. Not only has my little Toffee girl has turned milk chocolate dark, she's cut her hair. I hate it when women cut their hair but as rakish as it is she's prettier than ever, all cheekbones, eyes and lips. \n\nMy walking catches her eye and she glances distractedly in my direction and then cocks her head to the side and looks my way again. She blinks and gives her head a slow shake.\n\nI reach her chair. \"That bikini is outrageous.\"\n\nShe looks up at me, eyes big as saucers.\n\n\"You're missing the sunset.\"\n\n\"What? . . . How?\"\n\nI smile at her. \"Finish your sunset. There's plenty of time for talk.\"\n\nHer eyes follow me as I sit in the sand beside her. She's still curvy, but altogether leaner and smaller. That dark red bikini is no joke, there's not enough of it. I can't help but stare.\n\n\"You got pretty dark.\"\n\n\"Well I am black Dax.\"\n\nShe snaps irritably.\n\nI chuckle to myself.\n\n\"I missed that.\"\n\nAnd just like that I've earned my first tiny smile.\n\nThere's a dark golden glow to her skin like the sun has in my absence been loving her all over, touching her when I couldn't, kissing her shoulders, legs, hair and cheeks, lovelier than I remembered. She really cut her hair though. \n\nI decide to start with the obvious. \"You look beautiful Lulu.\"\n\nShe thanks me with a timid smile.\n\n\"I came a long way to apologize.\"\n\nShe frowns slightly, looking vaguely confused. \"Apologize?\"\n\n\"Yes, apologize for the many things I'm sorry about. Eddie explained.\"\n\nHer look instantly sharpens.\n\n\"She didn't betray you. You covered your tracks well but I found you on my own. She told me a little about your history and what happened with the pregnancy.\"\n\nClearing her throat she says, \"I should have tried harder . . . to tell you. I just didn't know how. I didn't think you'd ever forgive me. You were so very angry.\"\n\nShe looks down. \n\nThe sun has finally set and the sky is blue and gold and purple and red, it's glorious. Calming by degrees, she starts to fidget. Standing swiftly, she folds the chair. \n\n\"It's almost dinner time, you must be exhausted. Did you check in?\"\n\nThis could get awkward. \n\n\"I dropped my bag off, but am hoping I can crash with you tonight. There are only 9 rooms and they all appear to be booked.\"\n\n\"Of course.\" Under her breath I think I hear, \"What is it with you and hotels?\" \n\nShe gives her head another shake as if to clear it.\n\n\"I can carry that for you.\" I reach out to take her chair.\n\n\"No, it's ok, I've got it.\" She clutches the chair, using it as a shield, skittish. From the vein pulsing in the side of her neck I can see her heart beating a mile a minute. \n\nWe walk quietly to her room, which from the outside looks like a small beach shack, but is in fact quite modern. Extracting a robe from the closet she puts it on. Modesty. Ok different.\n\nI take a look around. Exposed stonewalls and wooden beams make it very cozy, a rather small sofa, television, an iMac, a shower, tub, huge bed; all the basics of home. Picturesque ocean and park views from the two small balconies.\n\n\"You certainly run away in style.\"\n\n\"It is what it is - standards you know.\" She shrugs. I missed her sass.\n\n\"Did you want a shower? Those are some pretty long flights.\"\n\n\"Yeah, it'd be good to rinse the road off me.\"\n\nWe stand looking at each other.\n\n\"There are plenty of towels and I have soap from home, so feel free.\"\n\nShe gives a forced smile and leaves the room. Any other time we'd be showering together. Already I'm wondering if she has tan lines. \n\nDespite the humidity I quickly take a hot shower. I start to shave, but stop remembering how she likes me slightly stubbled. I give a quick trim, carefully cleaning the sink afterwards. I have not flown almost nine thousand of miles to piss her off the first night. \n\nA shirt, jacket and slacks and I look ok. On the bed, she's laid out a pair of slacks, a simple top and some little panties. I've missed the sight of those. Hearing a voice followed by her exasperated sigh, I stop to listen. She's video chatting, whispering frantically. \n\n\"Fine, fine, fine. I believe you. I think I know how he came to be here. June's the only one I email because I have to. But I was beyond careful - the messages bounced off I don't know how many places before reaching me. I don't understand how he found me.\"\n\n\"C'mon think Lou. The man is your chief information officer. Hell, I'm surprised he didn't find you sooner. Hacked my email accounts several times when I didn't to tell him where you were. He's actually as stubborn as you, maybe even more so. I can't believe he waited as long as he did, but it's pretty impressive that he came after you. That's a long way to fly, even for the likes of you,\" says Eddie.\n\n\"You may not have told him where I was but you fucking told him everything else. I know it was you Freddo!\"\n\n\"Look heifer, don't go calling me Freddo. To quote your other beloved Wilde - Oscar that is, 'Friends stab you in the front' it was for your own good. You two deserve each other being as he's just like you, a bit of a tyrant, but on the DL. I'm beginning to see how that might be difficult, two hard-asses trying to hook up. But he's good for you. I say give it a chance, because I've not seen you smile so much in years and I love seeing you so happy my friend.\"\n\n\"He drives me round the bend but he's so good to me I just about can't stand it. It won't work though, it can't. He really wants kids. This experience has definitely taught me that. And he's so good Ed, so genuinely good that he should have everything he wants.\" \n\nHer voice is thick and choked with emotion. I want to go to her. \n\n\"I've never known a man I could say that about. I try but I don't think I'm nearly as kind to him as he is to me and if I can't give him children then what's the point. I'm nowhere near ready to adopt. Not to mention if I want to make partner before I'm 35, I won't have the time a kid requires. He's 41 Ed and he really wants children . . .\"\n\n\"I think he just wants you Lou.\" Ed says softly.\n\n\"You've seen those eyes of his, hell you should meet his father, eyes like two drops of honey. It'd be a shame to let genes like that go to waste. It'll be something that eats at us over the years.\"\n\n\"Harry's looking for you too. I've sworn Lenny to secrecy and you'd have to pry it from Lili's cold dead hands before she'd tell a soul. It's a raw deal you're dealing him Lou, you guys are friends, you go from talking all the time to hardly speaking at all.\"\n\nLou groans. \"There's more to that story than I care to relate right now. What the hell did you do to get Lenny to keep a secret, from Harry of all people?\"\n\n\"Never you mind. What's up with Harry?\"\n\n\"I love Harry; always will but I consider him family. We've tried repeatedly and it worked in high school its just not working for us as adults, we're just better as friends, the minute we try to hook up he gets clingy and possessive and impossible.\"\n\n\"I don't know him in any other context but to my eyes, Dax seems possessive and impossible too when it comes to you.\" Says Ed. \n\n\"Dax is possessive and impossible. Maybe that's just how men are, but he's not whiney about it. And there's that other thing. Harry and I are just not compatible like that.\"\n\n\"So you keep saying. But bodies are bodies, what you do with one you can most certainly do with another. I know you know how to take control by now.\"\n\n\"I'm always in control, at work, dealing with the family . . . the last thing I want is another thing to have to control. I'm looking to give up control.\n\nBodies are not interchangeable, you can do the same things but you won't necessarily get the same results. Comparatively speaking being with Harry was like being with most men, somewhat enjoyable but I had to work at it.\"\n\n\"What the hell's that supposed to mean? Don't be vague, spit it out.\"\n\n\"If you must know. Dax makes me come every time. Every time. It's unprecedented, and addictive. We have frightening physical chemistry! I mean he goes there. He's like diabolically methodical about it and has been from the start, just slowly breaks me down. He knows where all the buttons are and how to press them just so. Rapture Eddie, from the first time, to the last time, every time.\"\n\n\"Every time? How is that possible? Jeez, how do you come up for air? I see how you ended up pregnant.\"\n\n\"Exactly. Harry and I . . . well the kissing was good and I could get there but it'd take me a while. He's . . . impatient, and gets upset when I try to point him in the right direction. Not to mention that first time was not exactly ideal.\"\n\n\"That was years ago Lou. I'm guessing he's learned a few things by now.\"\n\n\"Maybe . . . I dunno Ed I just can't do it. I love him but I'm not in love with him. At this point it'd be like sleeping with Lenny, deeply wrong. If we've not happened by now we're never gonna. He needs to get on with his life.\"\n\n\"Well then you need to tell him Lou and soon.\"\n\n\"I have done, I don't know how to be more brutally honest about it.\"\n\n\"So is it just sex or do you love Dax?\"\n\n\"I love him desperately.\" Her voice cracks. \n\nShe loves me. Really loves me.\n\nShe swallows and gets herself together.\n\n\"He's come all that way, I think you need to be honest with him too.\" Says Ed softly.\n\n\"Yes, Dr. Phil.\"\n\n\"Good girl. Now if you don't mind, I'm rather late for lunch, which I am desperate for after all that talk of garlic-coconut infused lobster, so I'm going to ring off.\"\n\nLulu sighs and presses her lips together, grumbling. \"Not bothering a soul and here he comes with all those teeth and that fucking dimple, hair cut just so, saying my name with that languid southern drawl, smiling his little smile. His timing as usual is just perfect. My boobs hurt; I'm moody and horny as hell. The man wasn't here 30 minutes before I snapped at him.\"\n\n\"Falling back into familiar patterns already I see.\" She chuckles darkly. \"Well . . . be careful Lou. Ok?\"\n\n\"Careful? I've been monitoring myself. I feel perfectly fine.\" She sighs heavily. \n\n\"He looks good - skinny, but really really good.\"\n\n\"I just checked your chart and it sounds like you're right on schedule. I'd rather you waited, you really should be checked out first - but if you must land on top of something large and pointy repeatedly, use protection!\"\n\n\"I'm not ovulating It'd be perfectly fine. But give me a little credit. I do have some self-control.\"\n\n\"On the contrary, considering what you just said, I don't think you have a bit of self-control when it comes to Dax; he's like your kryptonite/heroin.\"\n\n\"Don't make this a click & tone conversation!\"\n\n\"Ms. 'He looks really really good.' Eyes all glazed over. I saw you bite that lip!\"\n\n\"Humph! Bye Ed!\n\nEddie cackles evilly. Lou narrows her eyes and stops the chat mid-cackle. She shakes her head and puts her face in her hands. I back up and walk around the corner making more noise than necessary.\n\nI step out and she looks me up and down slowly and nods. It still kills me how attracted she is to me.\n\n\"You look nice. Give me 30 minutes.\"\n\n\"Take your time.\"\n\n\"Here's the computer if you need to check on things, there's not really much in the way of television here. I've been watching movies online.\"\n\n\"I'm fine b\u00e9b\u00e9, go have your bath.\"\n\nAs promised, 30 minutes later she comes out, simple chic leather sandals and an audaciously short black strappy dress, the tight glister of her skin and that smile, the short curls framing her face just so. Diamond studs, and glossed lips.\n\n\"Lulu, you look . . .\" Words fail me. It's like I've been sucker punched.\n\n\"As pretty as you, let's eat.\"\n\nDinner goes well, plenty of food, lots to drink. Coconut cr\u00e8me cake for dessert followed by espresso. She seems to be a favorite amongst the wait staff. They seem glad to see her eating so well and dessert no less; they take turns trying to ply her with bites from the dessert cart.\n\nInteresting. She's in the bathroom when a large and hairy man approaches the table and holds out his hand to shake.\n\n\"I am Antreas. I do all the fishing and a little cooking sometimes.\" He says proudly. \n\n\"So you are husband? No? Well you should be, and soon. Don't let her travel alone, especially here. She's very pretty, it's not so good. \n\nI give him a look.\n\n\"No, no, no. I mean no harm, but these are big rough guys over from Madagascar looking for goodtime girls and up to no good. I have been trying to watch out for her, we have some types around here. Big African fellows always sniffing around her. I won't have it. \n\nShe comes to eat, but every night no cake, we gave her almond cake the one night and she smiled and burst into tears, but now you are here, she smiles when she eats cake. That's how I know you are for her. She fishes you know, comes on boat with me to fish for crabs and then comes home to meet wife and kids. Speaks beautiful Greek, very smart\", he taps side of his head. \"Fixed tax debt for me - no problem. She's a good girl. Ok enough, tomorrow I want you to come to the house. I have a new batch of ouzo just ready.\"\n\nShe returns just as we finish talking. She looks as fondly at the big guy. \n\n\"So you've met Antreas, he's been teaching me how to trap lobsters and make ouzo, his wife does the most amazing things with fish, potatoes and lemon and Rosemary.\"\n\n\"Next, we teach you to play bourr\u00e9e, then you will be perfect woman.\" Antreas says.\n\n\"Bourr\u00e9e? I play a little bourr\u00e9e myself.\"\n\n\"Really?\" He rubs his hands together craftily. \"Lou agapi mou, be sure to bring him by. I need to shore up my retirement savings. I have 6 kids you know.\"\n\nHugging him goodbye she chuckles and promises to come by soon.\n\n\"Let me pick up the tab?\"\n\n\"There's no need.\"\n\n\"Really, I want to.\"\n\n\"No really. It's all included with the room.\" She leans forward whispering conspiratorially. \"But if you want to leave them a huge tip, I somehow don't think they'd mind.\"\n\nWe step out into warm sultry fragrant breeze. There's no moon but it's pitch black here at the end of the world and the stars are super bright.\n\n\"Walk with me?\"\n\nShe looks wary for a moment. \n\n\"That was a lot of food, maybe a walk is in order.\" \n\nTaking off our shoes, we sink into the sugary soft sand. She inhales and sighs. \n\n\"Every night the whole island smells like flowers. Almost every night is like this unless it rains.\"\n\n\"Reminds me of the night blooming jasmine in Louisiana, but I think its plumeria. It's pretty strong; I bet I can find it.\" \n\nI look around and sure enough glowing in the moonlight I spot a gorgeously large bush. I break off a spray of three blooms and give them a gentle shake to drive out any would be dwellers and place it in her hair.\n\nShe smiles and looks away\n\n\"Why'd you come here?\" I ask.\n\n\"I was tired, overdue for a proper vacation. Besides we have business dealings in Mauritius and since I'd always wanted to come here it just all worked out. This place is on my bucket-list.\"\n\n\"You were that tired? Bucket list tired?\"\n\n\"I don't know, I guess.\"\n\n\"Were you tired of me?\"\n\nShe takes a deep breath and thinks carefully before responding. \"I was tired of fighting, with you, with myself. I didn't know if you'd forgive me. It's not fair for me to keep you if I can't give you what you want.\"\n\n\"So it was a preemptive strike? Did I say I was leaving you? Did I walk out?\"\n\n\"No, but you were so angry. You know, while I was taking the pregnancy test, once the initial fear passed and I worked things out in my head, in a flash I saw it all and how it could be and I actually wanted it. I wanted it so much Dax. I thought we could work it out. I'm still trying to work out how I got pregnant to begin with. It shouldn't have happened. I have rh negative blood it's damned near impossible for me to even get pregnant unless antibiotics are involved, and even then . . .\" She trails off she catches my perplexed expression and begins again. \n\n\"I don't know what the hell you want with me. I'm not girlish and have only just gotten around to being ladylike on occasion. I'm spoiled, bad-tempered, impatient, stubborn . . . if I had a life motto it would be 'fuck it, I've got collision', I'm selfish, don't like to share - especially food, swear like a sailor on leave, I get pissed and take off, have been known to drink heavily, practically lie through my teeth for a living, and am almost constitutionally cruel. I'm vicious and I know it. \n\nYour biggest crimes seem to be cyber stalking, drinking weirdly bad coffee and staying up coding to 3 am - comparatively speaking, you're almost saint-like, which is more than mildly annoying.\"\n\nShe doesn't lack self-awareness, but her view of self is rather skewed. She's much more than that. \n\n\"Lou, you're full of shit no doubt. But I happen to love your particular bullshit.\" \n\nI smile down at her, but her eyes are welling up. \n\n\"This is what I don't want, all this emotion. I'm not built for this shit.\" She's beside herself right now. \n\n\"You wanted the baby?\"\n\nAfter a beat she nods. \"Yeah, yes.\"\n\nI wait for her to tell me the rest of it, but she's giving nothing away. I sigh. \"Do you want to try again, someday?\"\n\nShe gently shakes her head and shrugs at the end. \"I don't know. Eddie says I'm fine and with careful monitoring it's a go, but I gotta admit I'm not so sure. Maybe, one day. I'm not ruling it out. There's always adoption. \n\nBut I've got plans for my life Dax. I also want good things for you. You want children.\" \n\nI open my mouth to say something and she puts up a hand. \n\n\"And I'm not going to hold you up until I feel ready, it's not fair.\"\n\nBut she loves me. I heard her say it. She can't be thinking of ending it? My heart goes into free fall but I press on. \n\n\"You could have saved us a lot of heartache if you'd told me a little more about yourself.\"\n\n\"Right. How do you propose one broaches a conversation like that? Oh and you can forget kids. I'm damaged goods. I still remember the look on your face when I said I wasn't having any. I knew then that it wouldn't work and I tried to get you safely away from me. \n\nWe met in March, it's almost July. It was too early when we talked about this in April and it's still too fucking early for this conversation and if you tell me the story one more time about how your parents met and married in six weeks' time I will drown you and make it look like an accident.\"\n\nI laugh a little at that.\n\n\"I want you, just you, cranky little you. And you are not to refer to yourself as damaged goods.\"\n\n\"Maybe, but you want kids and marriage too. I can't give you those things.\"\n\n\"Look, I don't care if you can't give me children. I don't care if you don't want to adopt. I don't care if you don't want to get married. If we have to shack up until the day we die that's fine, just stay with me. I cannot have you gone Lou, I just can't.\" ",
        "I sound as desperate as I've been feeling all these weeks and I don't care.\n\n\"Now you sound a little crazy Dax.\" She looks at me warily and leans away.\n\n\"This, from the woman that made me crazy.\"\n\nSitting down she pulls me with her and takes my hand and rests her face in my palm and sighs, closing her eyes. \n\nThe moon has serious competition from the stars, there's a small shower of shooting stars and simultaneously we exhale, sigh and breathe, watching the heavens for a long while until she shivers.\n\n\"You're cold?\"\n\n\"A little chilled, yeah.\"\n\n\"I guess so in that little bandage you're trying to pass off as a dress.\"\n\n\"You noticed.\" She smiles a little mischievously.\n\n\"Stevie Wonder would notice that dress. Not wearing a bra either. I got here just in time.\"\n\n\"I thought you liked me in dresses?\"\n\n\"Oh, I quite like it. I just don't want anyone else liking it. Have you been walking around like this?\" I'm thinking of Antreas and his talk of guys sniffing around and starting to feel a little uneasy. \n\n\"No.\" She pauses for effect, \"Most days I wear a bikini, weather permitting of course.\"\n\nStill mischievous. I give her a good pinch and she squeals. There's just no help for it I suppose, at least there was someone here watching out for her. Guardian angels everywhere.\n\n\"There's even less of you to pinch b\u00e9b\u00e9, we need to fatten you up.\"\n\n\"Well I've been eating regularly, maybe its all the running and walking. I've not been this size since New York. I rather like it.\"\n\n\"Antreas said that until tonight you'd been having issues with cake. You wanna talk about that?\"\n\nShe looks away. \"Not really.\"\n\n\"Mmmhmm I see . . .\"\n\n\"You're looking extra skinny yourself Mr.\" She leans back to look at me. \"What have you been eating?\"\n\nI look down at that face. \"Everything but what I want.\"\n\nShe blinks slowly and holds my gaze as I gently bend to kiss her. She tastes of vanilla sugar. It starts innocently enough but soon she's returning my kiss like a woman possessed, pushing against my chest trying to lay us down. I gently push her away and stand us up, put my jacket around her shoulders and take her hand and slowly walk us back; it gives me time to calm down.\n\n\"If you don't mind I'll crash on your sofa tonight. Tomorrow I'll look into a hotel of my own. I think there's a hotel or something on the other side of the island.\"\n\nI hear her sharp intake of breath.\n\n\"Why?\"\n\n\"Because I think we need to take this slow this time, give us both a little space while we work it out.\"\n\n\"It's a little late for that don't you think?\"\n\n\"We have to try.\"\n\nShe sighs and in a small voice asks, \"Stay with me?\"\n\nI know it's costing her dearly to ask. \"Alright, if you're sure it's what you want.\" I look at her carefully.\n\nShe nods and exhales slowly. \"How long are you here for anyway?\"\n\n\"As long as it takes.\"\n\n\"What about work?\"\n\n\"What about it? What are they going to do? Fire me? I can get another job. I can't get another you.\"\n\n\"Don't fuck up your career, Dax. You have to earn a living.\"\n\n\"If it comes to that, and I sincerely doubt it will, I'm fine. I've got a bit saved. I've got side projects. I'm good.\"\n\nShe looks at me and sighs and shrugs.\n\nWe stop outside the door and try to get as much sand off as possible.\n\n\"You may want to leave those flowers outside, they attract bugs. Big ones.\"\n\nShe bites her lip apprehensively and then smiles and slaps me on the shoulder. \"That's what big strapping men are for, killing bugs.\"\n\nI laugh heartily. \"Rather sexist of you.\"\n\nWith an insouciant shrug of shoulder she shakes her head and says, \"Whatever.\" She gently removes the flowers from her hair and smells them again and puts them in a glass of water.\n\n\"We should get ready for bed I guess. You go first this time.\"\n\nRemoving an item from a drawer she goes into the bathroom and quietly shuts the door. I hang up my jacket and shirt and slacks, I grab a T-shirt. I wonder if she's going to shut the balcony doors, it's sultry and humid in here. There are air conditioning units, but she was chilled out on the beach. I'll just have to tough it out. I am not looking forward to the couch. \n\nI grab a pillow and make myself as comfortable as possible. What the hell is she doing in there? I'm damned tired and I'd like to brush my teeth before I go to sleep and this couch is starting to actually feel not half bad. There's a good steady breeze. \n\nI've just drifted off when there's a sharp poke on my shoulder and I open my eyes to Lulu standing there with her hands on her hips in a pink wrap tied like a halter. Since when does she wear pink? I've never seen her in pink. I like it.\n\n\"Are you high? What the hell are you doing? You look positively crazy trying to sleep your 6'3 self on a love seat. Brush your teeth and come to bed.\" \n\nShe turns on her heel and leaves the room, little feet slapping insistently against the wood floor. Not even 6 hours and she's barking orders. I get up and do as I'm told. \n\nHow am I supposed to sleep next to her? I mean what I say about taking things slowly. \n\nI give a final rinse with water and pass a hot rag over my face and take a deep breath as I go into the bedroom. \n\nWearing her glasses she's at the laptop typing furiously. When she sees me, she quickly finishes and shuts off the computer. She looks at me curiously.\n\n\"It's kind of hot for a T-shirt don't you think?\"\n\nAlready she's trying to get me to take my clothes off. \n\n\"I'll manage. We could always turn on the ac you know.\"\n\n\"Well, if you're hot . . .?\"\n\n\"I am a little warm.\"\n\nShe purses her lips \"Alright.\"\n\nClosing the doors she turns on the units and pulls out a light sweater. \"The ac can be aggressive.\"\n\nOnce the lights are off she tries to settle down. She'll toss and turn all night if I don't hold her.\n\n\"Come here.\" I open my arms and she quickly scoots over and snuggles against me and slides her hand under my t-shirt and sighs. I grab her wandering hand.\n\n\"We should try to get some sleep.\"\n\n\"Sleep?\"\n\n\"I think the travel is catching up with me.\" It's a true enough statement.\n\nShe sighs resignedly and yawns. \"Fine.\"\n\n\"I hear you pouting Lulu-butt.\" I kiss her forehead. \"Go to sleep. We'll get there, trust me.\"\n\n-----\n\nWe sleep late, it's almost 10 am when we wake. She says it's still a work-day even if it is Friday. She showers and puts on a shirt and slacks and calls for room-service and sits down at the computer. \n\n\"Give me two hours or so and then we can do anything you want. You probably need to check out things at the office yourself I'd imagine.\"\n\n\"Nope. I'm on emergency leave. There's nothing that can't wait.\"\n\nShe arches that brow and looks at me dubiously.\n\n\"Alright now Dax, but we've still got deals in the works that you're involved with.\"\n\n\"I'm aware of that and on top of everything - going for a run, be back soon.\" I give her a quick kiss, use the bathroom put on some shorts and a t-shirt and head out. It'll be good to clear my head. \n\nI come back just as she's closing the laptop and sitting back to sip on some coffee.\n\n\"How was your run?\"\n\n\"Long, scenic. Have you eaten?\"\n\n\"I was starved - couldn't wait, sorry.\" She says sheepishly.\n\n\"No need to be sorry, it's ok B\u00e9b\u00e9.\"\n\n\"There are croissants and fruit. The coffee's really good. Pace yourself though, we're going to see Antreas today.\" She smiles. \n\n\"He mentioned me contributing to his retirement fund.\"\n\n\"Don't worry, I've seen him play against his wife and he starts out having her on the run but she gets him in the end every time. He gives it all away up front, every move he's going to make is written all-over his face. She says this is both good and bad, but mainly good. They've been married 22 years and there are no surprises left and she's more than ok with that. She's got friends who aren't quite so lucky in that some of them get surprises all the time.\"\n\n\"You just make yourself at home wherever you go, don't you?\"\n\nShe looks at me quizzically. \"I'm sure I don't know what you mean. But hurry up and shower. I like to be there when Antreas pulls the traps.\"\n\nWe have an excellent day with Antreas his wife Ariadne and 4 of their 6 children the two oldest are away working for the summer. Sure enough Antreas starts out strong but in the end with his wife having given me pointers it swings my way. I toast Ariadne, which causes Antreas to grumble good-naturedly.\n\n\"Ariadne - supposed to mean 'pure', more like your name should be Arachne for spider. Six kids! Six kids to clothe, educate and feed and she gives tips to take money from my pockets.\" He shakes his head.\n\nWe go home, tired full - one of us tipsy and slightly hoarse from singing in Greek and drinking too much ouzo. I drive us carefully back and soon as we're done showering she passes out and is fast asleep. Today was easy. If I can just keep her occupied until we get home. \n\nI somehow manage to fend her off the following day as well. It proves damned difficult though when she decides to sunbathe topless. \"Lou you can not walk around like that. Put some clothes on!\"\n\n\"It's a sunny day and I'm on vacation. I can do exactly as I bloody well please.\" \n\nShe puts on her shades and picks up a book and lies back. I decide to read as well. She adjusts the umbrella shade to shield her and lies down on her stomach. I make peace with my hard on and pray for patience and guidance as I watch her eventually fall asleep. I can't stop looking at her. All that gleaming sun kissed flesh on display. Like I've landed in the middle of a sports illustrated swimsuit edition. \n\nI'm saved sometime just after noon when the sky goes dark and the clouds open up. She ties her wrap around her and goes in to order room service. \n\nWe eat and chill for the rest of the day watching movies and catching up on talk. We fall asleep mid-conversation and sleep soundly all night. It's about 9:00 am when we wake up. \n\nShe rubs the sleep from her eyes and smiles as she slowly stretches out on top of me and rubs her cheek against my beard and sighs rubbing my nose with hers and kissing me gently on the lips. With her love of morning sex I know where this is going if I don't stop it fast. I flip her over and kiss her again. With an arm around my neck she's lazily rubbing the back of my thigh with her other hand before biting my lip.\n\n\"Let's have breakfast in bed?\"\n\n\"Sounds good, but I was hoping to see a little of this place. I thought we'd rent bikes and look around a bit.\"\n\nI roll quickly away and go to the bathroom; she doesn't look so much disappointed as mildly exasperated. But when I come back she seems fine.\n\n\"We still have the rental car came with the room, we could tour the island. Or we could get the ferry over to La Digue, there's another vanilla plantation I'd like to see.\"\n\n\"Sounds like a plan. Tell you what, ring for breakfast, and while you shower, I'll check emails and then I'll shower real quick and we'll eat and get out of here.\"\n\n\"Cool.\" She ordered breakfast and then went into the bathroom. That was easier than I thought.\n\nI quickly look up more local attraction to keep us busy. I dash off some instructions by email and contact Max with a status report. I'm done by the time she comes out in black linen slacks, a thin white wife-beater, adorable.\n\nThere's a knock at the door, breakfast has arrived.\n\n\"Dax, you can at least eat with me.\"\n\n\"Still bossy I see.\"\n\n\"If you'd showered with me we'd both be clean now.\" She's pouting big time.\n\n\"Lou, behave yourself.\"\n\n\"Why should I? You've given me no incentive to do so.\"\n\n\"Incentive?\"\n\n\"Yes.\"\n\n\"Come here.\"\n\nShe comes over.\n\n\"What's wrong?\"\n\n\"I want you.\" She looks at me pointedly.\n\n\"I want you too.\"\n\n\"You don't act like it,\" she grumbles.\n\n\"I didn't bring condoms with me.\"\n\n\"Oh.\" She looks confused and more than a little disappointed.\n\n\"I didn't know what I was walking into, didn't want to be presumptuous.\"\n\n\"But I'm not ovulating and my period's almost due. I'm safe. It's safe. I swear to God.\" She whines.\n\n\"Good to know, but we've got a lot to work out so we're going to take it slowly this time.\"\n\n\"Don't you think it's a little late for that?\"\n\n\"Perhaps, but I mean to try.\"\n\n\"How do you get to make that decision alone?\"\n\nShe looks mildly dejected. I sit down and put her on my lap and kiss her lips and cheeks.\n\n\"Come on here now, don't be like that. We've been through a lot. Of course I want you. I'm dying to have you. There's time.\"\n\nShe puts her arms around my neck and looks at me imploringly. \"We could do other things.\"\n\n\"And so we shall, later.\" I give her lips a quick kiss. \"Eat now.\" \n\nWe are more than sex and I'm going to make her understand that somehow. I don't know if I'll be successful but I mean to hold out as long as I can. I know she's confused. Hell, I'm confused myself, but I know that we're on the verge of figuring this out.\n\nWe take our breakfast out on the balcony. Picking at her food and actually passing on her beloved bacon, she nibbles half a croissant, takes a few bites of fruit and drinks some coffee and that's it.\n\n\"You should eat a little more.\"\n\n\"I'm good, and if we're taking the ferry, the less in my stomach the better.\"\n\n\"I checked and the ferry comes at 10:30 so we'll leave as soon as I come out.\" \n\nI watch as she goes to make the bed, snatching the flat sheet off with impatience and beating it against the mattress to clear it of possible grit before remaking the bed. Her chest is heaving as she puts things away. \n\nI finish my coffee and head to the shower. This is going to be harder than I thought. I know she's frustrated, but Lulu would rather fuck than feel and if we're going to be in it for the long haul, I'm not sure that's going to cut it. \n\nShe's so hot blooded though and I've missed her body desperately and want nothing more than to just sit her on top of me for a few hours. But the thought of getting her pregnant and harming her has chastened me. We'll have to sort out some birth control, if I have to personally feed her the pill every day and keeps condoms stashed everywhere I will. \n\nIn the meantime I take the soap and with visions of that scrap of dress with the flimsy straps and her making the bed firmly in mind I quickly rub one out. I finish with a blast of icy cold water. Dried, dressed, reasonably groomed and somewhat calmer, I come out just as she signs off the computer.\n\nShe gives me a brief look. \"Let's go.\"\n\nRolling the breakfast cart outside the door she leaves a tip and a note requesting extra towels. Remembering what Uncle Jack advised I pocket some candy and two granola bars, cargo pants are handy. \n\nWe head down to the ferry and park and manage to run down the dock to catch it just in time. The trip over is a little choppy. She looks a little green, but manages to hold her own. Arriving, we find a car rental place, get a map and set out with her navigating we find the plantation without too much trouble. \n\nThe scenic tour proves mildly interesting, especially the part about vanilla and vagina being of the same etymology, vanilla meaning sheath.\n\nLulu looks skeptical. \"Are you sure? Because the pods in fact look like elongated penises, hundreds of them.\" She quietly muses aloud. I hear titters of laughter from the group.\n\nI lean down and whisper. \"What's on your mind?\" I smile at her.\n\nGiving me a withering look she walks off with the group. She's moving past annoyed and heading towards angry. We've been walking for about two hours when I slip her a granola bar which she gratefully accepts. Sitting down on a stump, she immediately starts to eat it. \n\nAn ancient tortoise ambles over and I get a shot of them having what looks to be an existential discussion. At the end of the tour we buy plenty of vanilla and coconut oil and arrange to have it shipped home. \n\nWe head back. It's too late for lunch and too early for dinner. Tired and hot we go back to the room for a lie down.\n\nTurned on her side away from me she lies stiffly for a few minutes before jerkily getting up and going into the bathroom. She's angry. I lie there and hear the water start. This is ridiculous. I get up quickly strip down and go in. She's just gotten under the water when I take the soap and rag and start to gently wash her. \n\nMore shivering but not from cold this time as I trail the cloth over her neck, breasts and belly down to her soft smooth little mound. I drop the cloth and stroke her until she comes. I have been dreaming of that face.\n\nShe sleepily opens her eyes and smiles. \"I think it's your turn.\" Taking the soap and working up a lather she squeezes me with both hands staring at me all the while. She kisses me again and turns me around and there we are reflected in the mirror her cheek pressed against my back; one hand gripping my shoulder while the other is snaked around my waist slowly jerking me off. \n\nA flickie starring us and it's quickly over in an impressively high-arcing flash. That wasn't even 5 minutes, and I jerked off this morning! I hear laughter.\n\n\"It's comforting to know that I'm not the only one with issues.\" I follow her gaze. I'm still rock hard.\n\n\"Jesus Christ.\"\n\n\"Is that what you're calling it these days?\"\n\n\"I blame you and that little porno production you just put on.\"\n\nMore wicked laughter. Weighing and rubbing her breasts - she looks at me. \"My period is due next week, you know it's perfectly safe.\"\n\n\"Absolutely not Lou!\"\n\nShe arches that eyebrow and looks down. \"Jesus Christ seems to have other ideas. Let's ask his opinion?\" \n\nShe leans down, addressing my dick directly. \"What say you JC?\"\n\nIt jerks spasmodically towards her.\n\nShe laughs and shakes her head. \"Hmmm, I think he wants in. You've been out voted.\" With that she roughly pushes me against the marble shower wall before grabbing my shoulders, simultaneously jumping and wrapping her legs around my waist and slowly sliding down onto me. Deliciously wet and tight. Damn it all! She kisses me and smiles delightedly.\n\n\"I can't believe I was able to do that. Did you know I was a dance major in undergrad?\"\n\nDance major? She's gone insane. \"Lou, stop. Get down!\" I smack her bottom and she arches her eyebrow. She shakes her head and tightens her legs around me.\n\n\"Spanking me is definitely on the menu. But unless you want me to fall, you should probably be grabbing my ass now.\"\n\nShe's kissing me pulling at my earlobe with her teeth, sucking my neck, biting my stubbled chin and grinding against me, so slickly wet within and without, her breasts sliding against my chest, she's everywhere and it's irresistible and overwhelming.\n\n\"Fuck me Dax.\"\n\nI groan and give up. \"So you want to be fucked?\"\n\n\"Yes. Right here, right now. I mean to come on your dick.\" Sweet filthy girl.\n\nStill watching the both of us in the mirror, I grab her ass and start sliding her up and down. She's increasing the pressure or the pace I'm not sure which but all of a sudden she hooks her legs over my arms - bracing her feet against the tiled wall. I feel her getting tighter, she's on the verge.\n\nI'm watching the back of her as she moves faster and faster - she comes with shiver that shakes the both of us - my last thought before pulling out of her coming violently and loudly on her stomach, is about her triangle shaped tan line.\n\nShe finally slides off and down staggering a little before leaning back against the wall. Slowly catching her breath she calmly finishes washing herself and leaves me in the shower without another glance. \n\nI wash up again and grab a towel and come out and sit down on the bed, I run my hands through my hair. Damn!\n\nOpening a bottle of manoi oil she slowly rubs her arms, breasts and stomach. She turns around.\n\n\"Do my back?\"\n\nI frown at her but take the bottle and rub her back and shoulders as instructed. It smells like the island at night. She looks at me over her shoulder and down at her bottom indicating that I am to oil that as well.",
        "\"Awww, Come on Lou?!\"\n\n\"I don't know what to tell you, it's the rest of the back of me, legs too please.\"\n\nI groan and do as asked and sure enough before too long I'm hard again. She turns and arches that eyebrow and with a mischievous gleam in her eye pulls back the spread and the sheet and lies down and places my hand on her breast.\n\n\"This is reckless.\"\n\n\"This is life Dax, now let's get on with it. Love me.\"\n\n\"So this time you want lovin'? What happened to fucking?\"\n\n\"You could do that again too, either or is fine really.\" She shrugs. Impossible.\n\n\"Life at the equator has made you even more aggressive.\"\n\nShe sits up and puts her arms around my neck and pulls me down on her softly scented body. Two hours later we're sitting in the well-rumpled mess of a bed wrapped in sheets suffused with golden light that seem to glow around us as we silently watch the sunset, huge cumulus clouds tinged with rainbow fire.\n\n\"I'm starved, let's order in tonight.\"\n\n\"Do it woman!\"\n\n\"Bonsoir, c'est Mme James et j'aimerais commander le service d'\u00c4tage pour le d\u00f6ner ce soir si possible. Bon! Nous aimerions que votre Gambas tempuras et deux poivrons thon carpaccio de . . . . . . Chateaubriand sauce bearnaise et des frites. Deux mango salades et une bouteille de Pouilly Fuisse avec son vin blanc Champagne, pour terminer la noix de coco mille-feuille avec sorbet \u00ea la mangue et le Ch\u00ebteau, mousse au chocolat. Oh, et Absolument aucun persil veuillez, No. Merci!\"\n\n\"Your French is beautiful. But that sounds like a lot of food.\"\n\n\"Thank you. It is a lot. I've had a lot of sex and am very hungry. It's going to take them a while and I still need to wash my hair, I was about to when I was distracted.\" She smiles mischievously.\n\n\"When we get home we are going to sort out birth control Lou. We at least agree that we both hate the condoms but I will not risk your health by getting you pregnant. The rhythm method is a dicey business.\"\n\n\"I have ovulation tests with me. I tested as soon as you got here and I'm not ovulating. You cannot seriously tell me what I can and can't do with my body.\"\n\n\"Yes I can, because I care about it and want it with me for a long time.\"\n\n\"Birth control pills. If I don't die of a blood clot, I'll gain a ton of weight. Why isn't there a pill for men?\" She grumbles.\n\n\"I wish there were I'd take it in a heartbeat.\"\n\nShe looks at me thoughtfully. \"You would too, wouldn't you?\"\n\n\"That streak is almost blond.\"\n\n\"Inherited from my Mormor, if she's any indication, one day it'll be a solid bride-of-Frankenstein white stripe.\" She grimaces.\n\n\"A white-haired Lulu. Something beautiful to look forward to.\"\n\nRolling her eyes to the ceiling she shakes her head.\n\n\"But I'm curious, how is it you have so much hair here and none here? I touch her little bare mound and slit and she gasps, opening her eyes very wide.\"\n\n\"Dax! I promised to be good, not saint-like, stop that!\" She slaps my hand, pushing me away, laughing. I chuckle with her. We both go into the bathroom and get in the shower.\n\n\"If you must know, twice a month I wax my legs, underarms and lady bits. It's easy to maintain and I find it makes me feel cool and clean. Trust me you don't want to see all this covered in hair. You've seen how hairy Lenny is, would you want to make love to that?\" \n\nShe's lathering and washing quickly. I take the shampoo and she tilts her head back.\n\nI laugh with her. \"I'm sure it's not that bad.\"\n\n\"Humph! Close enough, I still have to shave my legs between visits. Luckily they have spa services here. In fact, I have to fly out tomorrow on business you should go down and have a massage and relax a bit. I'll see if I can perhaps persuade Antreas to take you out fishing maybe, keep you out of trouble while I'm gone. \n\nI think he's looking to win back all the money you took off him. By the way he called you cut-throat in Greek amongst other things.\" She laughs.\n\n\"Leaving me again.\" I sigh. \n\nWorking conditioner into her hair she turns to look at me. \n\n\"I'll be back tomorrow night. I promise I won't take off. It almost killed me I think and I mean that literally. My blood pressure was 150/90, between that and the heavy bleeding, it was all I could do to get Eddie to let me fly out after a day or so and not have me locked away. She was rather insistent that I talk to you, quite the Dax advocate she is.\" \n\nShe purses her lips in annoyance.\n\nWell color me surprised. Really? \"I thought she was going to slap me last time I saw her.\"\n\n\"I heard about your talk and believe me she wanted to. Had you not been in public I don't know how it would have gone down. You think I'm violent? Eddie will cut first and ask questions later.\"\n\nI'm not surprised. Eddie and Lou are highly protective of each other.\n\n\"Which reminds me, we have one last bit of unfinished business.\"\n\n\"Oh?\"\n\nShe turns off the shower and gets out and dries off, wrapping a towel around her and one around her hair.\n\nI come out and wrap a towel around my waist. She looks pretty mean all of a sudden. What now?\n\nHer eyes flash and she slaps me twice hard and shoves me.\n\n\"WHAT THE FUCK LOU?!\"\n\n\"That was for grabbing me and shaking me. Unless it's to save my life, don't you ever, ever, touch me like that again.\" She stabs her finger at me.\n\n\"Well couldn't you just say that, did you have to slap me? I'd never abuse or hit you.\"\n\n\"You hurt me Dax! Look.\" \n\nShe holds up her arm and there are three marks faint but still clearly visible on her inner arm. Finger prints. It's been weeks, that must have been quite a bruise. I had no idea I'd grabbed her so violently.\n\n\"More than that, you scared me.\"\n\nI finger them lightly and feel a deep shame spread through me. \n\n\"I'm sorry. The last thing I ever want to do or would do is hurt you. And I certainly don't want you scared of me. Come here.\" \n\nI take her hand which is throbbing and red and wrap her fingers around a block of ice. For all her rough and tumble toughness she's a tender little thing.\n\n\"I believe that. You've always been gentle with me. But I misspoke. I wasn't scared of you. I was scared for you. I wanted to kill you.\" She's quietly staring at me.\n\n\"You're serious?\"\n\n\"I was going for the Glock. I decided to take a long drive instead. By the time I calmed down I was at Eddie's and remembering the look on your face. I was convinced you'd never forgive me, so I got on a plane.\"\n\n\"What am I supposed to say to that?\"\n\n\"I've got issues, issues on top of issues. I don't easily make friends and sport sex aside can count my serious lovers on one hand. But I more than love you, I like you. You're strong and draw me out and aren't intimidated by me and for the most part you seem to see my bullshit for what it is and either call me on it or ignore it and love me in spite of myself. \n\nAt least that's what Eddie says, she's very sensible about these things. I trust her. And for all those reasons I want you. I'm still not down with the whole marriage bit, but I want to be with you as long as you'll have me.\"\n\n\"So what are you asking me?\"\n\nSquaring her shoulders she looks me in the eye. \n\n\"Stay with me. Love me, be my friend? We're going to disagree. We are going to fight. Hopefully not all the time but it is going to happen. My othermama used to say 'even teeth and tongue fall out sometimes and they live in the same mouth', people are no different.\"\n\n\"Sounds very wise.\"\n\n\"Eh - she had her moments. She was also famous in our neighborhood for having chased her husband through an alley with a frying pan.\" \n\nLou shrugs. \"So much for wisdom.\"\n\nI laugh. \"So you want me Lou?\"\n\n\"I do.\"\n\n\"Aha! I knew I'd get you to say it.\"\n\nShe rolls her eyes. \"For fucks sake man, what's it gonna be?\" She gives me a little shove.\n\n\"I'm in it till the wheels fall off 'lil bit.\"\n\nShe smiles at me and there's nothing to do but smile back.\n\nThere's a knock at the door and she jumps up flustered yelling 'just a minute' before putting on a robe. She shoos me away to the bathroom where I quickly pull on boxers and a shirt. \n\nThe wait staff set us up on the deck outside, tablecloth and napkins and glasses and silverware and flowers. I sit my iPhone in the docking station. I loaded music from her computer. \n\nShe ducks into a closet and comes out in a simple tank top and a pair of my boxers.\n\n\"I like these curls.\"\n\n\"Too much conditioner.\" She looks embarrassed or shy not sure which.\n\nI break off a flower and tuck it behind her ear. \"I think I'll start doing that every night.\"\n\n\"Perhaps I'll let you.\" She gives me this perfect soft look.\n\nThe food is too good. We eat from one another's plates so much that we finally switch and I end up with the lobster and she with the Chateaubriand, the way she's been complaining of cold I suspect she needs the iron. \n\nThirty-five minutes later and we've pretty much polished off everything and are leaning back in our chairs replete. Lulu is groaning.\n\n\"Oh my god! I hurt now! I ate too much, but it just couldn't be helped, it was so good. I think we pushed the envelope having dessert right after though, we should have waited.\" \n\nShe grunts and groans. We both laugh a little.\n\n\"Maybe we should go for a walk.\"\n\n\"Only if you carry or better yet roll me. I cannot possibly move right now. In fact I feel a strong case of the 'itis coming on. I hope you remember what you said about fattening me up, because when I can't fit through the door I mean to remind you.\"\n\n\"I like my women with meat on their bones, makes it easier to find them under the covers. Besides, you seem to be holding on to that ass and that's the most important thing. More cushion for the pushin.\"\n\n\"Eeew! That was base and disgusting.\" She laughs though, snorting indelicately.\n\n\"This from the pygmy-sized Amazon that jumped me in the shower? Please.\"\n\nShe arches that eyebrow. \"Didn't anyone ever tell you not to stand too close to the cages at the zoo? That'll teach you to dangle bait in front of people.\"\n\n\"I'm bait?\"\n\n\"Catnip for sex fiends.\"\n\nWe are laughing and just having a good time of it.\n\n\"How'd you find me Dax?\"\n\n\"I looked and I found.\"\n\n\"Mmmm, hmmm. You either hacked NASA or searched June's emails. I told June to delete those.\"\n\n\"I finally broke down and searched the emails. She actually uses the rules on her mailbox and has it setup to auto save all emails with attachments which is a good user habit and that particular email had one. It was difficult what with you two corresponding in Spanish, if it weren't for that pet name of yours for her 'Cujita' I'd have gone right past it. What does cujita mean anyway, I can't find a translation for it anywhere.\"\n\nShe shakes her head at me. \"Cujita is a non-word or rather it's the Spanish feminine for Cujo. It's my personal term of endearment for how simultaneously sweet she and vicious she can be. But Dax how did you find me here. I never mentioned where I was.\"\n\nTelling her I had my brother at the NSA run a search for her could very possiblyget me killed. I shrug, watching her carefully. She finally shakes her head and lays back again in her chair.\n\n\"There's no escaping you is there?\"\n\nI decide to tell some of the truth. But even then . . . I just know.\n\n\"I couldn't find you. I checked everything, bank accounts, credit cards, everything. Found some parcels of property scattered here and there. I suspect you have accounts under another name.\"\n\nHer face is completely smooth as she leans back in her chair watching me. Her poker face; I can't get a read.\n\n\"I finally just hacked your facebook account looking for clues.\"\n\nShe sits up, looking at me disapprovingly. \"You have got to be kidding me. That's a touch much.\"\n\nNot upset about me poking into her finances, but draws the line at social media.\n\n\"We weren't friends even though I'd sent you several requests.\"\n\n\"Are you for real? We're adults. Who pays attention to that crap? If you bothered to pay attention to the news feed you'd notice that the only people I'm in touch with are the few girls I mentor. I'm hardly even on that thing.\"\n\n\"Only this last month or so have you not been online. I'm friends with Lenny and Uncle Jack and see you pick on them at least twice a week. I suppose I should be grateful that you actually deigned to at least like some of my comments. I notice you like all of Harry's.\"\n\n\"Harry's funny as hell, especially in print.\"\n\n\"You're actually in touch with any number of people, most of them men. Besides the girls from the school, Eddie, June and Lili are the only women friends you have. I also noticed that your relationship status read as single.\"\n\nShrugging, she leans back, closing her eyes again before frowning. \"That's a lot of past tense language. You just used the word 'read' as a past tense verb. Does my status no longer read single?\" She opens her eyes and looks at me.\n\nI say nothing. She goes to the computer and logs in.\n\n\"You've added pictures, recent pictures. Me, in a bikini, online. Mother-effer! Now I have all these comments and questions to deal with, un-fucking-believable.\" \n\nShe turns and looks at me. \n\n\"You are a special kind of bastard! Do you really feel that much better having marked your turf in cyberspace?\"\n\n\"Frankly, yes. 135 friends and only 3 women and 25 girls. C'mon Lou. Hell yeah - I feel better!\" \n\nI'm feeling stubborn and defiant myself. The silence stretches. She stands and rubs her jaw, working to curb her anger. Turning to me and emphatically holding up a rigid index finger she says, \"Alright, that's your one. I will tolerate this once. Once. Because there were extenuating circumstances and we're trying to work things out. Once. I don't fucking care who you are, you hack into my life again I will sue the living fuck out of you.\"\n\nShe's snarling mad.\n\n\"Not wanting to be presumptuous you didn't bring condoms, but you don't bat an eyelash at invading my privacy and putting my shit on blast. I do not share what appears to be this mass compulsion these days to make my private life public. Most of those guys are fantasy football people. We do nothing but talk smack. Now every one of those guys knows what I look like practically naked. Brilliant! I am supposed to be out here on business and you are fucking up my groove\"\n\nShe's pacing and mumbling to herself in Spanish. Why is Spanish her language of choice when she's pissed?\n\nShit, I hadn't thought of that only how happy and pretty she looked.\n\n\"You are really testing the fucking friendship.\" Taking a breath she looks at me again, looking more than a little harassed.\n\n\"I confess to being more than a little drunk at the time.\" \n\nI look at her sheepishly and shrug. I decide to change the subject. \"So, you were a dance major in undergrad?\"\n\n\"I can't imagine at this point that there are many details about me you don't have, but yes if you must know, I majored in linguistics and minored in dance and actually aspired to be a diplomat at one point. Susan Rice was and is a role model of mine.\"\n\n\"How'd you end up a lawyer?\"\n\n\"An unhealthy mix of brain power, curiosity, and disappointment. Back home I was pretty good, but it's easy to be average in New York City, especially at dance. I should have stuck with ball. I'd probably have had more luck trying out for the WNBA.\"\n\n\"Uncle Jack came by and pulled out one of your photo albums. The pictures of you in motion look anything but average, there's one of you dancing in a flowing dress, I had to look at it twice there's so much movement it looks like you merged with an iris.\" \n\n\"Harry took that picture. I was in New York for what seemed mere minutes and took one look and decided I'd missed my window for serious dancing, you have to get started really early in that world if that's your end goal and my ego honestly couldn't take it. \n\nAs a favor for a friend I had a brief summer stint at the UN as an interim translator for an ambassador. I kept picking up on laws being broken, circumvented and or entirely disregarded as I was translating. I can't go into detail obviously, but afterwards he asked if I were a lawyer and when I said no, he said well maybe you should be. I'd audited an international law course because I was dating a guy going to law school and in the process of helping him study I guess I picked up a lot. At the time a bunch of people were going to law school as a backup plan, so I figured why not. \n\nOnce I got into it, I actually came to like and respect it. Irrefutable fact-based logic is very comforting. It's all rote memorization and application which I've always been good at, so it was an eerily good fit.\"\n\n\"I saw baby pictures of you guys. You were a mighty pretty baby Lulu-butt.\"\n\nHanging her head she groans and frowns. \n\n\"You have been talking with Uncle Jack. He's the only one that calls me that. When you said it the other day I thought it was some sort of freakish coincidence and ignored it. But I honestly don't think we're going to have a problem with nicknames. Are we, Junie?\"\n\nI immediately reach out to pinch her but she's far enough away to successfully evade me, poking her tongue out impishly.\n\n\"You have to go to sleep and when you do . . .\"\n\n\"Surely you have better things to do when we lay down than pinch me.\" She winks at me. I can only shake my head at her one-track mind.\n\n\"So, You and Harry? I saw pictures of you two as well.\"\n\n\"I was hoping to skip this conversation.\"\n\n\"I don't think so.\"\n\nShe sighs. \"We were pretty intense once upon a time and he's worrisome as hell but I just love him to death. Don't look like that! I love him the same as Lenny & Lili. We tried briefly junior, senior year of high-school and lasted a few months into freshmen-year college. He wanted to try again a few months ago if you remember but I just couldn't do it. Feels incestuous and god forbid it goes wrong. Arlene and Uncle Jack are family. I couldn't do that to them. Better to piss him off a little now than to hurt all of us down the road.\"\n\n\"So you two have slept together?\"\n\n\"Oh for fucks sake, seriously? Don't ask questions you don't want answers to.\"\n\n\"I want to know.\"\n\n\"You don't.\"\n\n\"I see.\"\n\n\"Don't be a clich\u00e9 Dax. Of course we fooled around. Who didn't fool around in high-school?\" She laughs fondly.\n\n\"You fooled around?\"\n\n\"Have you noticed how I don't grill you about your past? You don't want to hear this.\" \n\nShe's looking at me in exasperation.\n\n\"MY past is not in our face in the here and now, is it?\"\n\nShe shakes her head and looks at me.\n\n\"We fooled around. Yes, he's seen me naked and vice versa.\"\n\n\"I see.\"\n\n\"Dax, if my answers bother you then perhaps you should cease asking questions.\"\n\n\"Not another word.\"\n\n\"You asked.\"\n\nNot sure how I feel about this new information, though I've no choice but to accept it. I did ask.\n\n\"He's looking for exactly what his parents have, which is not bad, but it's not for me. I love Uncle Jack & Aunt Arlene dearly but they are seriously old school. Theirs is a typical marriage of the wife putting dinner on the table all while bearing and rearing children and keeping house in addition to working outside the home herself, the whole clich\u00e9d, twisted bit. \n\nUncle Jack worked very hard and they have a lovely home and seem to have a great marriage don't get me wrong, but I like living in this world too much to just consign myself cooking, cleaning and child rearing. It's a perfect imprisonment especially for women really because they end up doing most of it alone. The tether of a child, chains tougher than titanium forged steel. \n\nI love my dad and Uncle Jack but they were pretty old school and left the women to deal with the children and the house while they played and it wasn't fair. My poor mom had 3 of us and there were almost four! I can't imagine it. There were plenty of days when her many frustrations just boiled over and scalded us. But there were an equal number of very happy days, whereas she'd play with us to such an extent that we'd forget she was mom. ",
        "One mother's day it occurred to me the sacrifices she made and I was absolutely overwhelmed with the realization of the love, strength and devotion it takes to raise children well. I was so filled with gratitude I wrote her a letter. \n\nWe weren't as close as she and Lili, those two were more like sisters than mother and daughter, but she said I may have been the only person to ever really understand her, she was really touched to receive a letter like that especially from a daughter. \n\nThe serious one was Neal. We broke up because of religion. I've not done the god-thing since 9th grade really, but we'd have these great conversations - he was always knocked out by how much I knew about the bible. One should be reasonably well versed on something before deciding to reject and renounce it. I respected his beliefs, he just couldn't respect mine. I was upset to put it mildly because I was upfront about who I was from the start and asked if It'd be an issue and he initially said no but in the end it turned out to be a deal breaker. \n\nWe had a lot in common, same twisted sense of humor, music, literature, even politics to a point. But he was jealous as hell of everyone close to me, especially Eddie. She's always called him on his shit. They hate each other with a passion. \n\nI got pregnant while he was a struggling law clerk, we had a huge argument and I miscarried and for that Eddie has never forgiven him. To this day she completely blames him for the miscarriage, though doctor that she is, she should know better. The cancer caused me to miscarry, were it not for the miscarriage prompting them to look it might very well have been too late. She just hates him is all. \n\nHe was there for me, even when it was initially determined I'd never have children, he was all for adoption at some point. We went round for years. I thought we were headed someplace. But he couldn't wrap his mind around me not coming to the Lord so to speak after the health scare. It would have been the height of hypocrisy to suddenly turn to Jesus. \n\nTold me I had a too much of a god complex to believe in a power higher than myself. Ironically, I think back on some of the conversations we used to have and I thank the sweet lord it didn't work out. But he always pushed me to reach for more and for that I will be forever grateful. \n\nBut he could really be a bit much; so disdainfully superior and conversely so needing of constant praise and attention, a classic narcissist. When I met him I thought he was a kindred spirit but in the end he turned out to be so bourgeoisie, so disappointingly typical of black people with a little money. It's so weird, one moment you can't live without each other and now I rarely if ever hear from him.\"\n\nIt was for the best in the end. I traveled. I flourished. I lived. He got that law degree and got married and is now living with a good, church-going, god-fearing woman. \n\nShe trails off.\n\n\"But him you were willing to marry?\"\n\nMocking a public service announcement she says. \n\n\"Sorry, but you've missed the romantic idealistic portion of our program.\" I get it but can't help but feel cheated somehow. But that's an argument for another time.\n\n\"So to summarize, between your inherent distrust of anything remotely resembling authority and less than stellar performances on the part of so-called godly people, the situation with your aunt, your best friend and that last bit with the ex - you don't do the 'god thing'.\n\n\"No, I don't practice organized religion.\"\n\n\"And children? Are you feeling too compromised health-wise to get your hopes up? Because I know you love children, anyone who's ever seen you with your nephew knows that.\"\n\nShe says nothing as I look at her.\n\n\"Uncle Jack and Lenny gave me some pointers.\"\n\nShe grunts. \"You trust those jokers?\"\n\n\"I do.\"\n\n\"Sucker.\"\n\n\"We should have talked like this from the start but we couldn't keep our hands off each other. Now we have something to build on.\"\n\n\"It's always like that in the beginning I think, especially if you sexually click with someone. It's all about where, when, how and how much sex are we going to have.\"\n\n\"Women don't think like that Lou.\"\n\n\"Sure we do, we just don't broadcast it.\"\n\n\"You are hardcore.\"\n\n\"It's the only way to fly.\"\n\nI chuckle. Eddie's right, Lou is extreme. If this thing ever ends, then that's the absolute end of it. I'm not sure how close we were to the edge this time but it shakes me.\n\n\"Don't look so serious.\" She comes and sits on my lap. \"Mmmm . . . I notice you downloaded my music.\"\n\n\"I did.\"\n\n\"And that wasn't presumptuous at all?\"\n\n\"I was feeling hopeful.\"\n\n\"Mmmm . . I see.\"\n\n\"Lou, what is this song?\"\n\nShe listens. \"Oh Lately it's so Quiet by Ok go.\"\n\n\"I like my jazz, but listening to this song alone in your house almost drove me crazy. I had it on repeat at one point. I think your crazy computer took that as a cue to start playing similar music, because Al Greens How Can You Mend a Broken Heart, and Sinead O'Connor's version of Nothing Compares to You played right after. A fair deal of your scotch may have been consumed. Which led to the facebook break-in.\"\n\n\"I see.\"\n\n\"Yeah.\"\n\n\"So you got at the Scotch. I'm impressed. What were you drinking?\"\n\n\"Mortlach, 70 year old. It was good, very good in fact. I totally get the scotch thing now. I didn't know it could taste like that. Smooth, kind of like Toffee, like liquid Lulu it tasted - oh so very nice. I pretty much drank it all and I'm sorry about that but I'll be sure to replace it. I tried looking for it but so far haven't been able to find it and one shop owner just laughed at me.\"\n\nShe starts to giggle, and then laugh really hard until the tears roll down her face. I can't help but smile.\n\n\"What's so funny?\"\n\nCalming, she takes my hand and kisses the palm. \"I'll tell you when we get home.\" Rubbing the back of my neck and putting her forehead to mine she shakes her head and leans back to look at me.\n\n\"We should be more careful. It's important that we not break each other.\"\n\nI squeeze her in agreement. \"It's late we should get to bed. Your flight's at 9:00 am?\"\n\n\"Yeah.\" She sounds a little down.\n\n\"What's wrong Lulu-butt?\"\n\nShe sighs. \"I just got you back. I wish you were coming with me.\"\n\n\"Well then I'll come with you.\"\n\nShe starts to smile but shakes her head, rolling her eyes at herself. \n\n\"I'm being pathetic and ridiculous, the last thing you should do is indulge me in this non-sense. I'm a big girl.\"\n\n\"You want me with you. That's neither pathetic or ridiculous. I'm on vacation too - I can do whatever I want. Besides, I'm not ready to have you out of sight just yet either.\"\n\n\"You can't spend all your money trailing me around the world.\"\n\n\"Money's a topic for another time. Let's just say I'm good for it. And anyway I got a free ride here and have a free ride home if need be. I know people.\"\n\n\"At least let me pay for your ticket over?\" She looks at me appealingly.\n\nI sigh. \"No, but I love you for offering.\"\n\nShe smiles. \"So we're flying over to tomorrow?\"\n\n\"Yes, now let's go to sleep.\"\n\n\"Sleep?\" She's pouting prettily.\n\nI sigh. \"It's 10:45. Alright 30 minutes and not a second more.\"\n\nShe blinks at me slowly, smiling and nodding. \"I can work with that.\"\n\n----------\n\nWe're up at 6:30 and showering together, barely managing not to molest each other. She puts on a white linen suit and black shirt.\n\n\"Very John Travolta.\"\n\n\"Damn, I was going for Al Pacino in Scarface.\"\n\nMy little comedienne.\n\n\"You look good yourself.\" Her eyes take me in appreciatively.\n\n\"Thanks, can't go wrong with English cut seersucker suiting.\"\n\nI smile at her but she actually rolls her eyes at me looking mildly perturbed.\n\n\"What?\"\n\n\"You're just so fucking handsome I can't stand it sometimes is all. It's fairly disgusting how attracted I am to you. And I honestly don't understand it. You came out of the shower that day in London pulling on your t-shirt on your way to bed and I have been hooked more or less ever since.\"\n\n\"So you like me for my body?\"\n\n\"You're funny and smart too. And deeply good. You could stand to gain a few pounds but . . . yeah, I love it.\"\n\nWay to make a man blush. \n\nAfter a varied breakfast of toast, fruit, sausage and coffee we drive to the small airport, buy our tickets and sit down to wait. She gives me a wink as she turns a page of the newspaper, other than that she looks pretty serious.\n\n\"Lou?\"\n\n\"Yeah?\" Distracted response.\n\n\"I hate flying. I don't like heights.\"\n\n\"Hmmm . . . As tall as you are? Well, that is truly unfortunate.\"\n\n\"Unfortunate?\"\n\n\"Yes, because I like flying and we have stops to make before we go home.\"\n\nShe's back. Ms. Motherfucker. Leaned back reading a newspaper, little shiny brogue footed ankle propped on her knee like she's got balls or something, ignoring me. \n\nI put my hand at the top of her back on her neck and just idly graze my thumb back and forth behind her ear. Her breath hitches and her foot falls to the floor and her head tilts down to the side. The paper drifts to the floor as she leans forward gripping the sides of the plastic chair. I lean over and kiss her ear. \n\nA few simple sentences and her face and neck are flushed. Still stroking her neck and cheek I whisper in her ear.\n\n\"Did you come?\"\n\nShe unsuccessfully tries to stifle a moan as she nods and looks down, cheeks and ears blazing. She shivers as I kiss her cheek and ear again.\n\n\"Mine, anytime, anyplace, mine. Don't you ever forget it.\" \n\nI reach over and pick up the paper refold it and put it in her lap. She looks at me with her mouth open.\n\n\"You look warm. Would you like some water?\"\n\nShe shakes her head. \"I can't believe you just did that.\"\n\n\"What did I do? I didn't do anything. You're the one who came in public.\"\n\nShe narrows her eyes and gets up and goes to the ladies room. When she returns she moves to a seat across the aisle. Flared nostrils, heaving breasts, hot and bothered just like I like her. Smoothing her hair and checking her gloss she slides on shades.  \n\nThey finally call our flight and she stands and straps her messenger bag across her body positioning it on her hip. I go to take her hand and she crosses her arms across her chest. I place an arm around her shoulders and she stiffens. \n\n\"Stop it Lou, don't make a scene. You can pay me back later. I'll let you jack me up again.\"\n\nShe relaxes raising that eyebrow above her shades undoubtedly contemplating something wicked. We board the plane and sit down and quickly take off. After 15 minutes the seatbelt sign goes off and she takes out her laptop and checking the email she starts to look grim.\n\n\"Dax, we've got a rather serious problem. I keep looking at the projections and something's not right. It's ridiculously fortunate to have the CIO with me on this trip. They've cc'd you on this latest email.\"\n\n\"What's up?\"\n\n\"For starters the scope creep is off the chain - this is grossly over budget. When was the last time you looked at this project?\" She looks at me piercingly.\n\nI take the laptop and scan the email.\n\n\"I'm all over this. I re-drafted a statement of work and re-set expectations. Everything will have to be re-negotiated. David was supposed to relay that and then review and refine this and get back to me. Admittedly, I got side-tracked, but I've not neglected this.\"\n\nShe gives me a hard look. \"We'll address that later.\"\n\nMaybe she'll fire me. It'd solve a lot of problems at this point. \n\n\"Here's the email I sent to him explaining everything. If I'd known you were working on this too I'd have cc'd you. I'm guessing this is key to the re-branding effort you've been undertaking. Why wouldn't he keep you in the loop?\"\n\n\"Because he's the type in college that took a razor blade to the library law books and extracted key pages, just to be a fuck-wit. He's been mis-feeding me information.\" \n\nShe quickly scans the screen and looks at her watch. \"We've got two and a half hours to sort this bull-shit out. Fuck!\" \n\nSeveral passengers look our way.\n\n\"Give me a few minutes.\" \n\nI download project management software and start plugging in information. We refine and remap the process, modifying the plan to take the new variables into account. By the time we touchdown, we've re-structured the entire project. Lou reviews my plans makes the needed changes. We finish with a pre-emptive review of our litigation-readiness plan. They'd be perfectly within their rights to sue us for breach of contract. \n\nWe cab it over to the offices in Port Louis and she goes in to do her thing while I wait and watch outside the conference room. Catching my eye and gesturing for me to come in, she introduces me in her flawless French and gives me the floor. \n\nI'm not sure how flawless my French is but I manage to explain the new plan and respond to the questions. By 3 pm everyone looks relieved and Guy thanks us both profusely for responding so quickly to the problem.\n\n\"I love you Americans, so quick! All the way here for us, the CIO himself no less! I am now absolutely convinced we are doing the right thing. You have saved not only myself but my people and their families, you patiently train us you don't move in and take over and shut us down.\" He stops and turns away, clearly moved and at a loss. \n\nI look at Lou, who gives me a little scowl and rolls her eyes a bit. She reamed me in public and ended up doing the right thing anyway.\n\n\"Please, you can't go back just yet, no, stay for dinner. My assistant will arrange accommodation for you. We will meet at 6 for cocktails so that we may enjoy the sunset.\"\n\nWe smilingly accept.\n\nGuy's assistant books us into the La Pirogue, which tickles the shit out of this New Orleans boy. We pick up some clothes and toiletries along the way and check in to our respective rooms. We almost feel guilty having them pay for two rooms, but appearances need to be maintained. I go over to Lulu's door and knock and she opens the door but gestures for quiet, she's on the phone. She looks at me and mouths the word June.\n\n\"I see. No, don't worry about it, totally not your fault. Yeah, I'll be cutting this trip short. I've got a few stops to make but I should be back week after next. Nope, don't say a word just keep me informed. \n\nI'm glad you like the vanilla, it's very potent isn't it? You'll have to make me that cake when I come home. The image of Riley and the coconut oil though, that's just disturbing, keep him away from that,\" she laughs. \n\n\"It's fine. I'm a big girl I can handle myself. Yeah it's totally fine, take what you need. I had more shipped to my place, feel free to stop by and help yourself you've got keys. Thanks and remember not a word about either of us being here. Ok Ok - Alright, see you soon!\"\n\n\"Our honeymoon is over, huh?\"\n\n\"Afraid so.\" Still sitting at the desk that houses the phone she crosses her arm and taps her lip with her finger.\n\n\"You realize David tried to fuck both of us over on this one?\"\n\n\"Yep, I saw that. What are you thinking?\" I wouldn't want to be on the other side of that look.\n\n\"Something mean. Something Cruel. Mmmm something this deliciously wicked should be smooth, creamy and melt on your tongue at just the right moment. Something so devious I can almost taste it.\" She looks like evil personified.\n\n\"Remind me not to cross you.\"\n\nShe laughs lightly. \"In fact, if you're willing, I need a favor from you.\n\nUh oh. I brace myself.\n\n\"Yeah, what do you need?\"\n\n\"I have my suspicions but I need information, solid evidence. I want you to walk me through an email hack.\"\n\n\"Ah shit Lou.\"\n\nI wipe my hand down my face and sigh.\n\n\"Fuck it. We can use my laptop. It's just easier if I do it from there. What do you want - work or private?\"\n\n\"Both if possible.\"\n\n\"This'll never hold up in court you know.\"\n\n\"Maybe not, but for my needs it might work. Almost doesn't matter how one obtains information, as long as one does not get caught, so hack smart.\"\n\nI get to work.\n\n\"Where to after this?\"\n\n\"Paris.\"\n\n\"Paris?\"\n\n\"I need clothes. Denmark only gets into the mid to high 60's during the summer. I don't think our idea of summer wear will work there.\"\n\n\"My family has a flat in Paris?\"\n\n\"You do not own property in Paris? What the hell Dax?!\" She's looking at me incredulously.\n\n\"My family owns it and we all pay the taxes and maintenance fees. But Max, my brother, uses it most, he's put a lot of work and personal money into it. He's the one that had it refurbished, but it's got the original herringbone floors and plasterwork. My great grandfather won it in a poker game during WWII.\"\n\nShe gawks at me.\n\n\"Hey, what can I say? The French don't welsh on bets. At any rate since the French owned Black Louisianans it's only fitting that we now own a piece of France. We've managed to hang onto it. It's small, but kinda nice.\n\n\"That must go over well with the ladies, a flat in Paris. You must have been quite popular in college I'd imagine.\"\n\n\"I wish I'd thought of that, I'd have probably gotten laid more. I never had a chance to sneak off. Mom had and has spies everywhere. She was determined we not make her a young grandmother. My brother gave it a good try though.\"\n\nShe laughs. \"In all these years you've never run off to Paris with anyone? How is that? How are you 41 and so innocent almost Dax? You've never lived with anyone, have only had the one serious relationship from what I understand. It's . . . weird.\"\n\n\"Sorry I'm not worldly enough for you.\"\n\n\"Don't be like that. I didn't mean to offend. I'm just wondering if one day you'll wake up and want more or something different.\"\n\n\"Well then say that. Don't call me weird.\"\n\n\"I'm sorry ok. I happen to like weird though. Being weird myself. I like you is all and am wondering how is it no one's claimed you in all this time. Women fiend for men like you, you know.\"\n\n\"Humph.\"\n\n\"This conversation is a fail, so let's change the subject. A place in Paris, I like that action, means more money for shopping.\"\n\n\"When you see those stairs you'll think twice.\"\n\nShe puts her arms around my neck and smiles. \"But I have you to carry it all.\"\n\n\"You are setting the feminist movement back about 1000 years with that statement. Wait til they hear. I think I'm gonna need some hush money.\"\n\n\"I'm hardly a feminist, most of those bitches are greedy and whiny as hell, not to mention shrill. My agenda is nobody's but my own. There's no need to be rabid about gender bias, it happens. If I'm in a situation whereas I feel it's getting out of hand I deal with it. Otherwise, I don't let it bother me. \n\nI love Eddie to death but she's one of those women who if she marries refuses to take her husband's name. Says she worked too hard to become a doctor. I understand that but at the same time it's a little ridiculous; I mean come on, you exchange vows, fluids, account numbers and addresses but can't take the man's name for fear of losing your identity. If you don't halfway know yourself by the time you get married, then you shouldn't be doing it. And don't get me started on those women that insist on hyphenating. I hate hyphens! Pick a name.\"\n\nI laugh as I regard her carefully.\n\n\"So, you'd take my name?\"\n\nShe blinks and frowns at me. \"If, miracle of miracles, we were to marry, yes.\"\n\n\"Lulu Wilde would suit you, you know?\"\n\nShe purses her lips and shrugs. \"It does have a certain ring to it.\"\n\n----------\n\nWe quickly wrap up in Mauritius, return to Praslin - pack and leave.\n\nWe land in Paris and the taxi quickly takes us to the majestic, eighteenth-century squares of the city, the streets are damp but lovely, beneath skies the color of cement. She loves the flat especially the old plasterwork and what I regard as my brothers warped use of color. \n\nUsing the bathroom she finds that her period's arrived. She's not particularly pleased to see it but nonetheless she's prepared in that amazing way women always are.",
        "\"Maybe you should take a few days to rest b\u00e9b\u00e9?\" \n\nNodding in agreement, she immediately steps off to the side and calls Eddie who seems to question her at length. I can hear the irritation seeping into her voice.\n\n\"It's normal, not heavy, there's no clotting so far. Yes, yes, No! Hell No! He doesn't need to know all that. Fine. Dax phone for you.\"\n\n\"Eddie wants to talk to me?\"\n\n\"Yes.\" She looks exasperated and pissed off as she hands me the phone.\n\n\"Yeah, hey?\"\n\n\"She's your responsibility, yeah?\"\n\n\"Yes, she is.\"\n\n\"OK good. This is her first period since the incident and I want you to watch her carefully for the next 24 to 48 hours. Let me know if the bleeding becomes heavy, ask her if she's clotting hard. You're to question her carefully and watch her to make sure she's not making light of a more serious situation. \n\nPain freaks her out, so more than likely she'll tell you if there's anything beyond cramping. Enough time's passed, but really you two should really have waited until examined her and I told her as much last time we talked. I'm guessing she got itchy and jumped you without telling you. Did you two use protection?\"\n\n\"That's pretty much what happened and no ma'am we did not.\"\n\n\"Typical. I wouldn't be so concerned if it weren't for her medical history. A miscarriage, which is what that was by the way, is still a pregnancy of sorts and afterwards fertility can shoot up. It's been a month and it sounds like her hormones have regulated. But you could have easily gotten her pregnant again.\"\n\n\"Shit!\"\n\n\"Exactly. So you understand enough to take her health seriously even if she won't. Lecture over. For what it's worth I know how it is with Lou, she's hard-headed. She goes right ahead with no regard and does whatever she feels like doing. You've hung in longer than most, so good luck with that. \n\nNow Paris has free healthcare but free is not necessarily best. Take down this name and number and call it immediately if there's a problem. Thanks for loving my friend. Be careful with her.\"\n\n\"Yes ma'am.\"\n\nI hand the phone back to Lulu who's rolling her eyes in exasperation.\n\n\"Are you happy now?\"\n\nI can hear Eddie's screeching across the room as Lou pulls the phone away from her ear.\n\n\"Thanks for your concern and yes we will and no we won't. Thank you and good night.\"\n\nShe takes a deep breath. \n\n\"I honestly cannot wait for this portion of my life to be OVER. It's been nothing but blood, and yeasts and sweats and cramps and hormones since I was 11 years old and that's if everything's working properly god forbid anything should be wrong.\"\n\n\"Eddie was pretty specific about what we can and can't do right now. I'm not even sure we should have been doing anything other than holding hands to hear her tell it. There was every chance I could have gotten you pregnant again. Why didn't you tell me? I don't like taking chances with your health like that. If I'd known I'd have stuck to my guns and said no until you were checked out properly. You need to start sharing these things Lou.\"\n\n\"Not you too! Look, I've been with my body going on 30 years, I think I have a pretty good handle on how I'm feeling and what I can or cannot withstand. I am not going to be told what to do and when to do it. Eddie tends to overreact. I've monitored myself and reported to her every time my body so much as squeaked for the last 6 weeks. So for fucks sake, enough already!\"\n\n\"She's concerned Lou! And rightfully so! You don't have to be such a raving bitch about it!\"\n\nI've never cursed at her it shocks us both.\n\nShe gives me a long look. \"There's a bar on the corner, I'm going down. I need a minute. Alone.\"\n\n\"Fine, try not to leave the country this time.\"\n\nWithout breaking stride she digs in her bag and flings her passport at me on her way out the door.\n\nI hate fighting with her. But as skirmishes go that wasn't too bad. At least she left her passport. I unpack us and do some work and when I look up again 4 hours have passed and it's getting dark. Most likely she's at Match Bar. I know the manager and I call down and sure enough.\n\n\"Caf\u00e9-au-lait American lady?\" \n\n\"Yes.\"\n\n\"She's watching basketball and chatting up a Canadian fellow. She yours?\"\n\n\"She is.\"\n\n\"She's very . . . persuasive. We've been watching this basketball for a while now; she's even got the remote. Not bad looking, her French is good.\"\n\nAntoine's understated and very carefully conveyed assessment means he himself is interested. Married 8 years but it's not stopped him from being a major poon-hound. Lulu is going to be the death of me. \n\nI hot foot it down and sure enough there she is, at the bar. I hang back to just watch her for a few moments. About to tuck into what looks to be steak & fries or frites as it were.\n\nJacket off, napkin tucked into her tank, bare shoulders flexing beautifully as she balances on the stool and cuts into the steak, takes a bite and closes her eyes in appreciation.\n\n\"I like a woman who appreciates a good cut of meat.\" Says Antoine. Not subtle.\n\nShe gives him a hard look. \n\n\"What I'd like is more wine. Now chop chop.\" \n\nBaby is not having any of it. \n\nFork in air she leans to her left to talk to what I presume is the Canadian. He says something that makes her really laugh. They're having a rather heated discussion. She's making little stabbing gestures at the television with her fork, looking annoyed but when he says something else that makes her laugh, she puts down the knife and fork, pointing at him with her finger. \n\nThat's enough. I walk over.\n\n\"Hey.\"\n\n\"Dax, there you are! Help me out, this Canadian here is talking smack about American basketball and football, American's in general and my steak is in danger of going cold, set him straight already. \n\nI'll make concessions for our politicians, though I think we're even if you count that Toronto mess. But don't mess with the sports.\"\n\nWe shake hands and his face falls as she turns her face up to mine for a kiss. Public PDA is unlike her. She's clearly sending a message, and I am more than happy to help her send it.\n\n\"That steak tastes pretty good on you babe.\"\n\n\"I'll have Antoine make you one.\" She calls Antoine over and issues orders like a drill sergeant.\n\nThe Canadian and I talk sports, he's a good sort after all and soon I'm laughing as hard as Lulu. He and she talk about the American fascination with living beyond its means and how debt should be anathema but is not only recommended but celebrated. \n\nWe eventually move away from the bar to a quiet corner table. Speaking quickly and softly in French even Portuguese at some point before lapsing into English and French again she's leaning forward really absorbed in the exchange, it makes me a little uneasy and possibly jealous. But I like seeing her like this, she's quiet at work but especially good conversation is a big thing with her. \n\nUsually though it's my every word she's hanging on. Over the course of their talk she takes my hand and holds it to her cheek while she laughs and drinks, very natural gestures. She manages to pull me into their talk and finally sits back to watch and listen to us. It turns out he and I have much in common he's a software developer. \n\nWe exchange info and invite him round for drinks tomorrow night.\n\nShe's quiet as we walk back to the flat.\n\n\"Did you know that the words flirting and trifling use exactly the same letters, same letter count and everything.\"\n\nShe stops and scoffs. \"Your point being?\"\n\n\"You were shamelessly flirting with that poor man. Trifling.\"\n\n\"I was conversing, there's a difference.\"\n\n\"Mmmhmmm, I see.\"\n\n\"About earlier. Us. I'm not used to . . .\"\n\n\"You need to learn to be part of a couple.\"\n\n\"I guess.\" She mumbles.\n\n\"Consider the relationship a team and we're both co-captains.\"\n\n\"You've seen my jerseys. I've always been captain.\"\n\n\"So was I.\"\n\n\"That explains a lot.\"\n\n\"I like how alpha you are Lou. I love it in fact, but you can't be calling all the shots, and you not telling me key information and just going ahead anyway, is just that.\"\n\n\"It's my body damn it!\"\n\n\"I love your body and I say it's mine too.\"\n\n\"Yeah? Well why am I the only one with cramps right now?\"\n\n\"Is it bad? I turn her into the light and look at her carefully.\"\n\n\"No, this is typical, nothing serious. I'm not gushing blood and I'm not in any serious pain. I've been down this road. As long as there's no golf-ball sized clotting, it's manageable.\"\n\n\"You sure, because you look damned uncomfortable.\"\n\n\"I'm fine honestly. I just don't like talking about this.\"\n\n\"You talk to Eddie.\"\n\n\"She's a woman, my best friend and my doctor.\"\n\n\"And I'm your man and I say you can talk to me about this.\"\n\nShe sniffs. \"You are such a liar. I wish I had a picture of your face when I said gushing and clotting.\"\n\nOk so she has a point. \"I mean to be with you so we're both going to have to get over it. If it helps my body's yours too.\"\n\nShe arches that eyebrow and tilts her head. \"Now you're talking.\"\n\n\"Don't look at me like that because the answer is No. No more until you see Eddie and we sort out some definite birth control. No pouting. We've only covered a fraction of all the ways there are to satisfy each other.\"\n\nLaying her hand on my chest she says, \"Dax, look around? We're in Paris.\" \n\nShe kisses me and gives me that slow sleepy-eyed blink and rubs herself against me. Temptingly cute, damned tempting. But no, not this time. She's nuzzling and sucking at my neck, anything to win every argument I swear.\n\n\"Stop trying to blackmail me. The answer is a firm no, until we get home. We are going to do some normal things, talking, holding hands, making out, just being together. You know we've never been to an actual movie theater? We need some real dates under our belt.\"\n\nIn a huff she pushes away. \"Dates?! This isn't high school. I don't want a bunch of teasing and titillating. I'm a grown woman and I need tendin'.\"\n\n\"You are overly fond of your own way. That's me calling you a brat. You had no problem with teasing and titillation in London, we were both reasonably satisfied.\" \n\nGathering her to me, I lightly stroke her neck. \"You came and came little girl. Tell me you didn't like it?\"\n\nShe groans. \"Man you are really kicking my ass here.\"\n\n\"Yeah, well it needs kicking.\"\n\nShe's pouting beautifully, her little lip is poked out and I suck at it until she relaxes and kisses me back.\n\n\"We're going upstairs to bathe and once we've determined that you are reasonably okay, I'll see if I can't tend some of your needs.\"\n\n\"Seriously Dax I appreciate the effort but I can do for myself. I'm not an invalid.\"\n\n\"I mean to take care of you. Besides, I promised Eddie and I don't mean no harm, but she seems meaner than you. I don't want trouble with her. She's a doctor and prone to being evil, there's no end of things she could do to me.\"\n\nShe snorts. \"She's not meaner, just taller.\" Taking my hand as we go in for the night she says, \"Alright have it your way, just don't faint on me.\"\n\n------------\n\nShe immediately reneges on our agreement, locking me out of the bathroom and forcing me to pick the lock. I take off my shirt and shoes and walk over to her standing by the tub. \n\n\"Come on now 'lil bit, it's nothing I've not seen before. Let me help you.\" \n\nLooking terrified and ready to bolt, I think if I weren't standing between her and the door she'd make a run for it. I turn on the shower and help her strip down. I go to slide down her panties as I have about a thousand times now but she clutches at my hands her eyes welling up.\n\n\"It's ok Lulu.\" I slide them off and there's a small red flower, still bright red and recently bloomed.\n\n\"Alright, I've got it from here.\"\n\n\"We need to remove the plug and see what's what Lou.\"\n\nShe swallows and shakes her head. \"That's too much Dax.\"\n\nI take off the rest of my clothes and we stand naked together. \n\n\"I love you and it's never enough and never too much. I plan on being with you for many years to come. Who knows what we'll have to do for each other? My balls could very well swallow my penis one day when I'm old, when that happens I'll be depending on you to break out the pump and do what needs to be done, so I can get at you.\"\n\nShe laughs and relaxes a little. \"Ok then,\" she says soberly. \"I need toilet paper and the trash can.\" \n\nI show her where the rolls are and she stops looking at the toilet paper like she's come across a miracle. \n\n\"Charmin? In Paris? That's what I call luxury. Wow!\"\n\nI laugh, \"Max, my brother brings it in by the suitcase load. He even had the plumbing re-done to accommodate it.\"\n\n\"My kind of man.\" \n\nShe looks at me. \"Last chance to bail Dax.\" \n\nI stand firm. She rolls off some toilet paper before breathing out and reaching down to remove the tampon. \n\nDepositing it on the small bed of toilet paper in her hand, where we examine it carefully. Sighing with relief she says, \"I don't see any clots. Do you?\"\n\n\"No. I don't and being as we're not standing in a pool of blood, I'm guessing you're doing ok?\"\n\nNodding shyly and wrapping the toilet paper around the tampon she tosses it in the trash. \n\n\"Revamped or not, plumbing and tampons are a big no-no.\" \n\nShe quickly steps into the small tub and gets under the shower and then stops short. \n\n\"Crap, could you bring me my purse, please.\"\n\n\"Don't lock the door Lou.\"\n\n\"I just need a tampon for after that's all.\"\n\nI do as requested. I also get her fancy soap and fresh underwear for us both.\n\nI come back to find her rinsing out her panties in the shower, wringing them out she lays them on the lip of the tub to dry. She's so self-conscious she won't even look at me. I notice when we're at home she uses the guest bathroom during her time of month. I lather up with the soap and start to wash her tense body.\n\n\"You're a woman and I'm very glad about it. This is part and parcel that's all.\"\n\nLooking at me in astonishment she asks, \"How are you not revolted by all this?\"\n\n\"How could I be? I love knowing you like this.\"\n\nShe's grumbling under her breath. \n\n\"As if the bathing and going to the bathroom in front of each other weren't enough. It's like having a goddamned de facto husband. Shit, we might as well be married.\"\n\nI stop washing her and grin. \"I was speaking figuratively.\" Taking the wash cloth she begins washing me thoroughly, almost roughly.\n\nI lean down and kiss her hot little cheek. \n\n\"You know you want me Lulu.\" She pushes me away and turns me around to wash my back and backside, rough and unsparing with her application of the washcloth.\n\n\"Don't be cocky. It's not attractive. Besides, I have you already. That's what you said, so there.\"\n\nTurning quickly, I reach out to pinch her, she pokes out her tongue and quickly hops out the tub, immediately slipping and landing squarely on her butt. I'm dying to laugh and would do so were it not for her murderous expression. I smile anyway because I just can't help it. \n\nHelping her up I say, \"That'll teach you to run from me. It'll only serve to land you flat on your ass every time.\"\n\nFuming, she snatches the proffered towel. \n\n\"We've met and exceeded our bonding quota. Now get out so I can use my last shred of dignity to take care of myself in private.\" She pushes me out the door.\n\n________________________________________\n\nGoing for the essentials of fruit, yogurt, fresh juice, pain au chocolate, coffee and a newspaper I find early morning Paris rainy, humid and warm enough to be verging on hot. Luckily, there are several portable cooling units throughout the flat. I turn on two of them. \n\nUp several times during the night to tend her needs, she was making her sleepy way to the bathroom when I left, but is now dozing again, her hair curling against her forehead in the heavy damp heat. \n\nI'm sitting at the open window with my coffee and paper randomly looking out at the early morning activity on the street when she turns over and opens her eyes and gives me the most beautiful smile. Last night's pique seems forgotten. She sits up and stretches.\n\n\"Morning beautiful.\"\n\n\"Hello, what you got there Mr.?\" Immediately honing in on the croissants and fruit.\n\nI frown at her.\n\n\"Lulu, why is it that I get the best smiles from you when there's food and or sex involved?\"\n\n\"Because you feed and fuck me oh so very well, mmmhmmm.\"\n\n\"Behave yourself little girl.\"\n\n\"Well you won't fuck me, so come on and feed me already.\"\n\n\"I should wash that potty mouth of yours out with soap and turn you down on my knee.\"\n\n\"No to the soap, but maybe on that other.\" She gives me a sinful look.\n\nI groan and shake my head at her. \"You are killing me.\" I sit down on the bed and feed her a tiny strawberry.\n\nShe closes her eyes and her toes wriggle in delight. \"Mmmm, that's really good, it's so sweet. What is that?\"\n\n\"A strawberry.\"\n\n\"A strawberry?\"\n\n\"I think so, at the stand they were labeled Mignonette Gariguettes,\" Not certain of the pronunciation, I spell it out for her - small, brightest red and jewel-like, florally fragrant and very sweet.\n\n\"The vendor let me taste one and I was hooked.\"\n\nTaking another she drags it through the creamy thick yogurt and sighs delightedly as she eats it, sucking the juice from her fingers. She picks up a piece of pain au chocolat and bites, chewing slowly. I love watching her eat, the way she enjoys food. I don't think I've ever seen her so utterly relaxed. She feeds me a strawberry.\n\n\"Strawberries are easy you know, we should try growing these, we'll get some seeds for back home.\"\n\n\"I'm sure there are international laws against that.\"\n\n\"Maybe, but there are ways and there are ways.\" She winks at me slowly.\n\n\"Brat.\"\n\n\"Yes, your brat.\"\n\n-----------\n\nFour days later, Lou comes skipping out of the bathroom. \"Period over!\" She twirls around and shakes her little hips.\n\n\"I've never seen an after period dance.\"\n\n\"Let's shop. First on the list - condoms.\" She looks at me pointedly.\n\nI groan. \"Come on Lou, you heard what Eddie said, you need to be checked out and measured and all that.\"\n\n\"I'm calling bullshit. We've already had sex. My period was pretty much perfect. Her main concern is that we use protection. I've been good. I expect to be rewarded.\"\n\nHaving spent four days more or less lounging about the flat we decide to venture farther than the antique movie theatre and local street vendors. The heats finally broken and it's a gorgeous day.\n\nIt's postcard beautiful in Paris. Everything bright and clear. After spending a jaw dropping amount on two business suits each, we obtain some warm basics - sweaters and jeans.\n\nWe stroll by shops and I watch in fascination as a ring catches her eye. An unusually large clear yet grayish oval stone surrounded by tiny diamonds. The store clerk looks at us curiously and smiles. Without too much convincing I get her to go in for a closer look.\n\nHaving spotted our bags and clearly assuming we're in the mood to spend he pulls the ring she was eyeing. Bending down with arms crossed against temptation she gives it a long and careful look. Lou doesn't wear much jewelry beyond earrings so this is interesting.\n\n\"Madame has great taste. Would you like to see it on?\"\n\n\"Mademoiselle.\" She corrects him quickly. \"And no thank you.\"\n\n\"M'mselle has great taste, this is a very unique ring - the focal diamond is gray, 4 carats and flawless, TDW is 5 carats.\"\n\nLooking into my eyes she looks at the ring again and leans a bit closer to it completely entranced. \"Is it blue, gray or green. I really cannot tell what's going on with the color.\" She squints and tilts her head this way and that.\n\nI slowly manage to take her hand and slide it on watching as she smiles delightedly. The clerk is starting to grin himself at her reaction. It's a bold yet delicate ring and the horizontal direction of the stone complements her hand quite nicely. I hold her hand to my heart. ",
        "She looks from the ring into my eyes back and forth for about a minute and some unknown something passes through her expression as she gives a small shake of her head before standing on her toes and kissing me soundly.\n\n\"Absolutely not. Now, give the nice man back the ring.\" I reluctantly slide it off her finger. She drifts off to another counter.\n\nNot a chance in hell I'm leaving the country without that ring. I give him a look and slip him my business card with my credit card# on the back, a risky move but he understands. I'm sure he's seen this before. I watch him place the ring with the card behind the counter and discreetly nod. \n\nI catch her eyeing necklaces.\n\n\"We should get out of here before temptation gets the better of me and I end up mortgaging my home.\" She says. \n\nIt's rare that she indulges this side of her nature around me and I'm admittedly liking it and wondering if we can keep it going.\n\nFurther down, we pass a lingerie shop.\n\n\"I like your little undershirts but . . .\"\n\n\"You want me in something girly?\" She rolls her eyes.\n\n\"We're in Paris Lou, like you said.\"\n\n\"Fine.\"\n\n\"It'll be my treat.\"\n\nShe frowns at me. \"You can't . . . you don't have to spend money on me like that. La Perla is really expensive.\"\n\nWe need to have the money talk one day soon. She knows what I make and I know what she makes and because she makes more than me she's making assumptions.\n\nShe sighs and looks at me dubiously. \"Fine, if you buy it, I'll wear it,\" she shrugs.\n\nExactly what I wanted to hear. I pick out several exceptionally feminine slips and some things that look outrageously sexy and hurry her off to the fitting room. The sales staff gaze on with blandly polite, seen it all looks. \n\nParking the bags on the ludicrously small settee on which I refuse to sit, I wait outside the dressing room.\n\n\"Hey, Dax?\"\n\n\"Yeah, I'm here.\"\n\n\"You can't seriously expect me to wear this?\"\n\n\"Let me see?\"\n\nShe snickers. \"You'll have to come in. I definitely can't come out.\"\n\nI open the door and step into the small room. Tight black corset, tits pushed up to there, elbow length gloves, wisp of thong, stockings and heels. I clearly didn't think this out. Trapped in a 6x8 space with no condom and her looking like sex on toast. Snapping the last garter she looks in the mirror and bursts out laughing.\n\n\"I look like a goddamned dominatrix! The only thing missing is a whip. Shit, I feel like Aeon Flux in this get up!\"\n\nShe's still looking and adjusting. The short wild curls make her look uncivilized. That little wisp of thong, her bare bottom, muscular little hamstrings. Catching the look on my face, she turns to me with a knowing look and I just know she's about to become unbearable.\n\n\"You like this, don't you?\" She walks towards me and I immediately back up and hit the wall, as there's little to no space.\n\n\"Don't touch me Lou. I can't be responsible.\" I feel light headed as all the blood quickly leaves my brain and lodges elsewhere.\n\n\"Why? What are you gonna do Dax? Are you gonna fuck me in this dressing room?\" \n\nHer breasts are just grazing my chest. Sinister laughter as she slips her hand inside my pants and grasps me firmly. Dropping to her knees she licks her lips and takes me into her mouth. Jesus. The sight of her luscious lips wrapped around me is hot as hell - as is what's she's doing with her tongue and hands, squeezing and kneading my balls. Slipping my hand into the bustier I roll her nipple between my thumb and forefinger and she moans against me. \n\nShit, I'm gonna come, and it's gonna be a lot I think.\n\n\"Whoa Lulu, stop I'm gonna come.\" I try inching away from her evil mouth.\n\nShe moans again taking me further in and sucking harder and faster. I'm holding her head in my hands using her face as I explode in her mouth, watching with satisfaction as she barely manages to swallow it all, her little throat contracts rhythmically on my tip. Mmmm . . . Paris.\n\n----------\n\nLaden with purchases we leave the shop, leaning against each other as we stroll along. I feel her body stiffen and she straightens up gripping my arm tightly all of a sudden. Her face is neutral though I can see her heart beating a mile a minute.\n\n\"What's wrong?\"\n\n\"We're being followed. Don't look around.\"\n\nI manage to turn and lay out the man who grabbed my baby - that's the last thing I remember before a glancing blow and blackness.\n\nI must be hallucinating. Is that Lulu? What the hell is going on?\n\nI'm watching as the second punk charges and she sidesteps at the last moment, before turning and kicking him where it counts dropping him in his tracks. The third would be assailant is sizing her up circling cautiously. Assuming a fighting stance she waits. \n\nHe charges forward and she launches a furious attack, fists and feet simultaneously striking and deflecting blows from every angle with effortless speed. With a hitch kick to the chest she flattens him and walks forward to stand over his prone body.\n\n\"That'll teach you to pick on tourists.\"\n\n\"Are you ok?\" She asks as I stand.\n\n\"I'm good. You?\"\n\n\"Yeah I'm fine.\"\n\nShe collects the bags and guides me around the corner to a caf\u00e9. Examining me touching me lightly all over, she pulls my head forward and finds a small bleeding cut on the back on my head. I've had worse. \n\nFussing, she tends me wincing sympathetically as she cleans the cut. Her cleavage smells amazing, soap, sweat and something uniquely her.\n\n\"There's no swelling. How does your head feel? No blurred vision, dizziness or anything?\" She's looking in my eyes and making sure I can focus.\n\n\"I'm fine, it's just a scratch. Something you want to tell me?\"\n\n\"What?\"\n\n\"What was all that?\"\n\nShe snorts a little chuckle. \"That was the ugly side of Paris.\"\n\n\"What's with the moves like Bruce Lee?\"\n\n\"I think we should get you looked at.\"\n\n\"I'm fine. I'll let you do your little dodge right now but we absolutely are going to talk about this.\"\n\nShe sighs. \"Sit tight while I get us a taxi.\"\n\nThe ride back is quiet. Holding my hand tightly, she looks out the window. We arrive and pay the taxi and go in. Head bent, she closes the door and takes deep shuddery breath before turning to face me.\n\nAs strong as I am and could probably have kicked my ass a few times already but hasn't. She's my Lulu. \n\n\"I'm not upset. I'm just wondering why you felt a need to keep it a secret.\"\n\nThinking about it for long moments she finally answers. \n\n\"Because I like the way you take care of me and I didn't want that to change. Once men see how strong you are they start taking things for granted.\" She pauses and then looks at me. \"You really don't mind, do you?\"\n\n\"I've said as much, I don't know how many times now. Look at you? Dax one and Lou two and not a scratch on you, I should hire you as my body guard.\"\n\n\"You may want to rethink that as I'm sure I will have some foot bruises tomorrow. I didn't thing they grew 'em that big here. You held your own though and I am surely glad as that first guy was the biggest of the bunch.\"\n\n\"I thought it was just the one, the second one took me by surprise, before I could do anything you were handling business. Obviously you've trained somewhere. Why didn't you say?\"\n\n\"If you'll recall, I said when we met 'maybe I know kung fu.\" She shrugs and gives a small smile.\n\n\"I'm not a master, but I know how to handle myself well enough until I can reach a gun or blunt instrument. My parents, especially dad, insisted we know how to protect ourselves. Now Eddie is a master, she's been training since she was very small and is an 8th dan, deadly.\n\nMy instincts about Eddie were right.\n\n\"You saved me. Again.\"\n\nShe frowns. \"I helped, just like you helped me. That man grabbed my bag and almost took my shoulder off and you didn't hesitate just grabbed him and decked him. Let's see that hand of yours.\" She takes my left hand and examines the knuckles kissing them softly.\n\n\"As physical as I've been with you, I'm surprised you let me get away with it. And as mad as you were that day when Lenny grabbed you, I'm surprised you didn't kick his ass.\"\n\n\"I used to get in serious trouble with my parents bouncing him and Lili around too hard. Especially little Lenny he got an unfortunately accurate kick that had me punished for an entire month of summer vacation. To this day I know not to hurt those two.\"\n\n\"I bet you were a terror. But that time in your kitchen when I held you that first time because you wouldn't listen, you could have taken my head off and when I grabbed you arm, why'd you even bother to go for a gun?\"\n\n\"I've kicked ass for less. I guess I was too tired that day.\" She chuckles and then a soft thoughtful look comes over her face.\n\n\"Honestly it's never even occurred to me to seriously strike you.\" She looks at me in wonder like she's seeing something for the first time.\n\n\"Besides you are mine and those who dare to fuck with me and mine will promptly have the shit kicked out of them.\"\n\n\"I'm yours Lou?\"\n\n\"You belong to me, yes.\" She kisses me looking quite serious. Possessive Lou. I like this new development. \n\n\"I still can't believe you did that. You were like Wonder Woman!\"\n\n\"Don't be insultin folk man. Wonder Woman? C'mon she's perfectly ridiculous, she flies an invisible plane. It's stupid. Why not just fly. If anything I'm Batman.\"\n\n\"Does that make me Robin?\"\n\n\"Nah, Robin is a bitch role, strictly reserved for younger siblings. You can be Superman!\" She giggles and kisses my dimple.\n\n\"Eddie's going to be pissed.\"\n\n\"Why's that?\"\n\n\"Because there's nothing sexier than a girl that can kick your ass.\"\n\nShe looks at me and laughs.\n\n\"I'm real serious 'lil bit. I want you in the worst way, right now.\"\n\n\"You are insane.\"\n\nI look down at my hard dick. \"I've got a situation here.\"\n\n\"I've got just the thing for that.\" She pulls out 3 condoms from her jeans pocket.\n\n\"How in the hell? I don't even want to know how you got those.\" She's not been out of my sight all day. For all I know she picked their pockets when she kicked their asses.\n\n\"Bathroom vending machine, Ladies room, right next to the feminine products.\" She grins and wiggles her eyebrows at me and winks.\n\n----------- \n\nWe tramp around two more days taking in the sights and eating, Fettuccine in Montmartre, Moroccan in Pigalle. \n\n\"I want you to meet my Mormor. My grandmother.\"\n\nIn all the excitement I almost forgot. I need to tell her and knowing her it wont be pretty\n\n\"You never talk about your grandparents. Why didn't one of them raise you guys?\"\n\n\"Well my father's father died when I was three so I never really knew him just vague impressions are all I have. His mother though, othermama we called her. She didn't like the term grandma and she was no Nana. I still have memories of her braiding my hair as a little girl, bearing down like she was taking out 400 years of oppression on my poor scalp. This is the one with the frying pan. She was a pistol to say the least. \n\nShe wanted to move us to North Carolina. I said no, which led to a huge fight. I won. We stayed.\"\n\n\"Why am I not surprised?\"\n\n\"She passed away a few years ago.\"\n\n\"What about your mother's mother?\"\n\n\"My Mormor. I call her MM. I can't wait for you to meet her. She found the racial situation in the 60's unbearable and basically fled to Demark of all places. She's never been back. Hell, she won't even speak English if she can help it. \n\nShe married a man who was of African and Danish descent and they had my mom. \n\nMom moved stateside when she was 15 came for summer vacation with Uncle Leonard and never went back. She'd met my smooth talking father and they eventually married. We'd visit biennially when I was young, which was interesting to say the least, black people in Denmark wasn't as common a sight then as it is now, especially with the influx of Muslims. \n\nThey're starting to have issues there like we have here - racial and political. Still, it doesn't hold a candle to Jim Crow South in the sixties. She's at peace now and completely intractable about returning. Not for a visit. Not to be buried. \n\nWe've tried to get her home on many an occasion but she's never forgiven the United States. Wouldn't even come to see her daughter buried. Everyone was thoroughly put out with her, but I can't say I blame her. She won't talk about it and all I've ever been able to find out is that she was in love with a man whom she lost to racial violence while they were out crusading. \n\nThey were Freedom Riders I think. Heartbroken, she boarded a ship and worked her way across as a cook and maid. Talking to a kindly young Danish girl who was also working her way home, she quickly picked up the language and so when she finally landed in Demark in late 1963 she applied for and received asylum. \n\nShe's 73, but very spry - sharp as a tack. She bikes and when in Copenhagen takes the metro around. Her husband had a bad car accident and so at 60 she took up weight lifting, to be able to physically help him until he was able to walk again, which took a while. She liked it so much that she's pretty much kept doing it, she's pretty buff. \n\nI try to visit every other time I'm in Europe being as she's recently widowed. It's not easy though, it's pretty far. \n\nAt the top of the world she lives - in Skagen (pronounced Skain) - in a large yellow cottage and makes the softest handmade cotton pajamas and sells them to upscale shops in Copenhagen and France. \n\nShe gardens at a feverish pace in her little geothermal greenhouse out back. We're always sending each other pictures of what we're growing. We have a little competition going but truthfully she's trouncing me. I don't help my cause by smuggling heirloom tomato seeds to her from the states so that she can have ripe tomatoes year round. \n\nI don't have time. I'm never home. Most of the hard work is done by Lenny and the girls and the gardener. I select the plants I like and am able to do a little weeding every now and then, but she far surpasses me. She too has a greenhouse where she grows all sorts of things that one can't normally grow in Denmark's often-dingy grey climate. She spends a lot of time in the greenhouse these days. \n\nWe're fortunate that she marvels at and completely embraces the information age. We've really gotten to know her with the advent of the internet, it's like we have her with us again. She's always online, she tweets and instagrams, she's very funny.\"\n\n\"Is that who you've been chatting with?\"\n\n\"Yeah. I've been telling her about you. She likes you already.\"\n\nI'm so pleased I can't help but grin which makes her roll her eyes.\n\n\"So you speak Danish?\"\n\n\"A little German too. It's all in there somewhere I guess,\" she says shrugging.\n\n\"A life spent diligently avoiding flighty Creole women only to end up with one anyway. You make me question everything woman.\"\n\n\"I should probably call her first and let her know, especially if I want her to have time to make Kringle, and some frikadeller.\" She closes her eyes and rocks back and forth excitedly.\n\n\"I take it that's food?\"\n\n\"Like Swedish meatballs but better, Frikadeller are rich but delicately seasoned meatballs. MM makes hers with foie gras. I know it's wrong and I don't care. Besides they don't force feed their geese like the sadistic French. Foie gras, pat\u00e9, ground milk-fed veal, ground pork and ground venison. \n\nServed with her homemade ligonberry jam. Not that ghastly sweet stuff from Ikea but something with bite and tartness to it, and dilled potatoes with cream sauce on the side. And the pickles!! Oh my god, so good! And then there's the Kringle which is a pastry, kind of like a pretzel and a cinnamon bun made sweet sweet love and Kringle is the result, it just melts on the tongue. \n\nShe does hers with pecans, I send her Georgia and Texas pecans by the pound, maple syrup and apples. I'll call ahead, it takes a while to prepare. I've been known to eat a pan by myself.\"\n\nI laugh at her and I have to ask, even though I know the answer. \"Are you planning on sharing?\"\n\nShe gives me the side eye. \"I think you should butter her up to make you your own pan.\"\n\nI shake my head at her, such appetite. \"Greediness is nothing to be proud of Lulu.\" She smiles naughtily and shrugs.\n\nI'm looking forward to meeting MM it's a big move. But first . . .\n\n\"I have a strange tale to relate. Is your grandmother's name Annelle Edwards?\"\n\n\"Annelle Edwards Hildr. \" She's giving me the look. \"How do you even know that?\" \n\nI pull out my phone and show her the picture of my uncle and her grandmother and launch into the story that my parents told me. When I'm done she's so stunned that she sits for a few moments shaking her head.\n\nShe goes to the mini bar and makes a martini and comes back and sits, still shaking her head.\n\n\"Practically family, exactly what I said. My parents say you look just like her. Pop kept saying from the moment he saw you how familiar you looked; it was Mom that put it together. I said something smart-ass about how you hypnotize people, evidently uncle Junius had the same complaint about your MM, she was or is famous for her powers of persuasion as well.\"\n\n\"Your Uncle Junius, he's alive?\" Her distress is slowly escalating. \n\n\"He's a chain smoking, chicory drinking, anti-government, anti-technology, crotchety old gentleman bachelor, very much alive. He practically raised my father and his brother while my grand-daddy was off in the service. Pops is at a loss as to how to tell him Annelle's alive and living in Denmark no less. They all thought she was dead.\"\n\n\"We run the risk of possibly giving these people heart attacks or strokes or both if we spring all this on them.\" She's looking distressed.\n\n\"Don't freak out, it's just meant to be is all.\"\n\n\"You know I don't believe in that fate, pre-destiny bullshit, it smacks of self-fulfilling prophecy. Shit just happens man.\"\n\nThe eternal cynic. She takes my phone and stares at the picture. \"A few pounds heavier with glasses and you'd look exactly like him.\"\n\n\"And you look just like your MM.\"\n\n\"Lou, I have to ask. Was your MM pregnant when she left the states?\"\n\n\"I'm not sure, though the time line would fit. In fact now that I think about it I'm pretty sure she was. That would make your great Uncle Junius my grandfather. So now we are family? Jesus, Dax!\"\n\n\"I was freaked too. Mom gave me a good talking to though and this clinical genetics handbook to read. I think we'd be something like 2nd cousins - which is no cause for alarm.\"\n\n\"I'm Virginian, not West Virginian! Shit Dax!\"\n\nCupping her hand to her forehead she says, \"Feels like the top of my head is going to come off.\" \n\nI rub her shoulders which are suddenly knotted with anxiety. \"Breathe baby.\"\n\n\"Don't touch or speak to me for a few minutes here man. I need a moment to process.\"\n\nShe finally calls MM and carefully explains everything.\n\n\"I'm going to give you half an hour or so to process this information and I will call you back. Have a sit down and drink some tea, eat some pecans.\" Lou frowns and cracks a smile and chuckles before ringing off. \n\n\"So how is she?\"\n\n\"I get it honest I guess. My MM actually said - in English - and I quote \"Fuck the pecans and tea I'm having Aquavit - a bottle of it.\" \n\nEven I have to laugh at that. \n\n\"At least we aren't related. I don't think I could deal with that on top of everything.\" \n\n\"Should we maybe postpone this for another time?\"\n\n\"No way, she knows we are coming and I am more than a little scared and concerned for her right now. We are absolutely going.\"\n\nLou books the various trains we will need to take to get us there and mails off various parcels and packages bound for home and with many emails and faxes - ties up final loose ends at the office. We find a sweater shop and purchase a few for each of us and leave Paris. \n\n----------------------------",
        "Denmark & MM\n\nI am wondering if we will ever arrive, two trains, another night spent somewhere in between and now a days drive up the coast. It's nothing like I anticipated. Dunes, there are sand dunes everywhere. There are houses submerged/built into some of the dunes. It's a surreal landscape.\n\n\"Looks like luck is with us today, \" says Lulu, \"there's plenty of sunshine after all. Weather pretty much kinda sucks here so there's never a guarantee for sun even during the high-season, which is what this is. \"\n\nFinally, there are the picturesque houses she mentioned, they're mostly yellow, some white with terracotta roofs. Despite it being high-season as she calls it, its very relaxed and quiet here. There are people strolling and out to lunch. There's water in the distance and even though its 69, there are people in bathing suits. Lots of German license plates says Lulu. It all looks Greek to me, don't know how she even knows the difference.\n\n\"Instead of Danish mostly German is spoken around here anyway, which is how I picked it up from Ma who picked it up from MM. \"\n\n\"Lulu, I'm starting to think your head size has nothing at all to do with your hair, you just have a really large brain.\"\n\n\"Ha, Ha very funny, I know there's a compliment in that remark somewhere - at least there had better be - but I really would not go around casting aspersions at head size if I were you Dax.\" She looks over at me and gives a small shake of her head.\n\nShe finally pulls into the pebbled driveway of a large yellow cottage somewhat removed from the others. \n\n\"And here we are, at long last.\" She says.\n\nWe get out and stretch. Lulu looks at me.\n\n\"OK, man here we go.\"\n\nThe door opens before we knock. I just hope I am lucky enough to be with a woman this beautiful even in old age. Reddish brown, mostly white hair in plaits woven into and intricate updo. Same delicately strong bone structure and height as my Lulu, dressed in serviceable dark gray pants and a t-shirt. \n\nShe hugs Lulu tightly, all the while looking at me.\n\nFinally stepping back, she takes a deep breath and approaches me. I hold out my hand to shake but she just looks at me with her hand to her mouth. Even the same mannerisms as my Lulu.\n\n\"MM?\" says Lulu softly. \"This is Dax. Remember I told you about him?\"\n\nHer eyes flash as she turns and snarls something in German at Lulu, who amazingly doesn't snap back or pull a face.\n\n\"In English maybe MM.\"\n\n\"I do apologize, Dax. I said I remember who he is. Or rather who you are. Its still quite a shock is all.\"\n\nShe finally takes my hand and shakes it; same firm handshake as Lou. Two of them. One for me, and one for Uncle Junius.\n\n\"You two must be hungry. At least she is, I know she is always hungry. Greediest baby I ever saw.\"\n\nLulu looks chagrined. \"MM, please?\"\n\nMM has no filter.\n\n\"What? I don't lie. Its completely true. Look he's even laughing at it.\"\n\nLulu shoots me a look and MM waves her away and tucks her arm in mine.\n\n\"Go away now, there are trays of goodies for you in the kitchen on the left counter top, bring out the tea and the goodies from the right counter top into the salon. I am going to get to know your young man here. Come, Dax.\"\n\nMM escorts me up a small flight of stairs to a sunroom at the back of the house. It overlooks half of a small greenhouse surrounded by more dunes and off in the distance one can see the ocean.\n\nWe sit and she gets right down to business.\n\n\"So, even though she is Fresser - you are in love with my Lulu-chen, yes?\"\n\n\"Yes ma'am, I am very much in love with her. But Fresser?\"\n\n\"Means - greedy-gut. Forgive me but meine liebchen speaks languages like me and indulges me, I don't speak much English these days.\" \n\nShe pauses staring at me again, before shaking her head and going on.\n\n\"So, you love her? You mean to marry her, yes?\"\n\nUh oh, here we go. \"I want to, but she is very stubborn. I have asked her, but . . . \" I trail off wondering where the hell Lou is. I'm looking in the directions of the stairs when MM reads my mind. \n\n\"Don't give her another thought right now, she's in the kitchen probably eating a tray of sweets.\" She mimes a rapid eating motion with both hands and waves kitchen Lulu away.\n\n\"I know my Lulu, one day she will marry you. Period. She loves you deeply - bought you to the top of the world to meet me, this is a serious step. Ignore her hard head. You now have major ally, she gives you trouble - you call me.\"\n\nI laugh outright at this and she looks at me eyes widening in amazement.\n\n\"I haven't heard that laugh in over 50 years. You not only look like my Junius, but you laugh like him too.\"\n\nShe peers at me, without turning her head she reaches for the side table at her left for a pair of glasses. With them on she regards me closely for several long moments.\n\n\"Almost just like him, except for the nose. You broke it, yes? More than once.\" \n\nAnother razor sharp woman. I can imagine Uncle Junius had his hands full too back in the day. What's scary is she's still a handful, at her age. This may very well be my future.\n\n\"So, he is alive, and well?\"\n\n\"Yes, ma'am he is.\"\n\n\"He is unmarried still, yes?\" \n\n\"He never married.\"\n\nShe nods and takes a breath and is quiet for a few minutes before calling out in German. I can make out her pet name for Lulu, who appears moments later, with a tray of tea and pastries and small things to eat. \n\nMM takes an embarrassed Lulu in hand, wiping her mouth and brushing off a few crumbs. It's my turn to laugh.\n\nWe eat and have a wonderful chat with MM who regales us with tales of her travels as well as local tourist antics. She and Lulu have the same unconventional vagabond quality, tough but gracious, often picking up oddly devoted friends all over the place.  \n\nAfter a while, MM says she is ready to call the states and speak with Uncle Junius. Though its 8:35 pm here its only 2:35 pm in the states.\n\nI speak to Pops first, who has already broken the news to Uncle Junius and braced him. Uncle Junius comes to the phone and we speak momentarily and I finally hand the phone to MM who takes it with tears in her eyes.\n\nThey speak quietly for many moments - Lulu and I look at each other and respectfully leave the room. \n\nWe are standing at the bottom of the stairs about 33 minutes later when we hear sharp words from MM.\n\n\"I wanted to marry you Junius. I asked you and asked you. You expected me to do what? Of course I married the man, he loved me, he begged me to even though he knew I was still in love with you. And I don't regret a single day of being married to such a devoted man.\" \n\nTheres a pause as he responds.\n\n\"Junie please, your race, my race - creole, black, white . . . hell that was the least of it as far as I'm concerned. There's the fact that you were in fact already married - to the cause. Your goddamned cause that is still going strong after all these years.\"\n\nAnother pause. Lou and I look at each other and go up the stairs.\n\n\"Still stubborn, yes, yes I am and you are still a dogmatic, egotistical ass! Look you know where to find me when you calm down enough to talk. I love you too.\"\n\nShe hangs up and sighs with frustration and frowns to see us two standing there looking at her in shock.\n\n\"What? You've never heard older people argue before? Its just like when you two do it but with fewer words.\" \n\nWe eat and eat and drink and drink as we visit with MM for 4 days. Dilled butter and radish sandwiches, with several types of smoked fish, Hackbraaten (German meatloaf), pickles, pastries, chocolates, spiced Aquavit - the cardamom is a shared favorite between me and Lulu. Finally, MM kicks us out saying she has a life and we need to get back to ours.\n\nShe takes Lou by the shoulders. \"Lulu-chen, I want you to keep this man. It will not be easy - he looks and seems much like Junie, very impossible possessive, but know that you have his complete and undivided devotion - it will be worth it in the end. Just last night I had a dream last night of the two of you driving two spring bulls across an open field of indigo.\" \n\nMM efficiently bustles us out to the car, easily toting the heavy, goodies laden box she's prepared for us and giving strict instructions on the distribution of goods.\n\n\"Thank god Dax is here, I can now be sure everything makes it home without little mouse bites all over everything.\"\n\nLulu looks shocked.\n\n\"That's right greedy-smurfy - Len-chen told me how you ate most of the cheese and fish last time.\"\n\nLou starts to pout and fume and MM shuts her down.\n\n\"No retaliation liebchen, share with your brother and sister, yes? If I hear otherwise, I will put you on Kringle restriction for one year and you don't want that. My days are numbered you know.\"\n\n\"Yes Mormor.\" Says Lulu meekly. MM pats her hand. \n\nTurning to me she says, \"Remember what I said Dax-chen.\" She kisses me on both cheeks and busses my nose with hers. Lou gives us a suspicious look.\n\n\"Yes, ma'am I most certainly will.\"\n\n\"Stop with the ma'am business, call me MM.\"\n\n\"Thank You - MM.\"\n\nShe shoos us off - waving us away home."
    ],
    "authorname": "MsLuLuX",
    "tags": [
        "black woman",
        "whiteman",
        "oral sex",
        "romance",
        "travel"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/vision-ch-06"
}