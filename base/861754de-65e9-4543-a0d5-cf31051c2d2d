{
    "title": "My Photo Friend",
    "pages": [
        "I arrived home from a shopping trip to find Stephie sitting against the door to my flat looking very down in the dumps. \"Well! You look happy. You lost your pay packet or something?\"\n\n\"Dumped the bastard. It's not enough that he nicks off me. He's been shagging some tart at the fucking pub too. I'm so glad I made him use condoms; I bet that dirty slapper didn't!\"\n\n\"Come on, let's get you inside.\" We went into my apartment and I went to put the kettle on. Stephie's one of my oldest, and probably best, friends. She's a lovely person and absolutely gorgeous, too. But she just picks all the wrong blokes and ends up getting hurt. Returning to the lounge I could see that she was close to tears. So, sitting next to her on the sofa I hugged her gently and the deluge began. \"Go on babe, wash the selfish sod away.\"\n\nShe cried hard for about ten minutes and when I felt she'd about finished, I went and made coffee. Bringing in the mugs she looked up at me, still a little tearful, but now with a smile on her face too. \"Thanks Lauren. You're always there for me.\n\n\"What's wrong with me Lauren? Am I a horrible person, or ugly? Do I deserve all this crap I get from men? What am I doing wrong?\"\n\n\"I don't think there's anything much wrong with you Steph. But honestly love; your taste in men is pretty dire at the best of times and you do have a knack for picking some pretty dubious fellas. And let's be honest. You really can be very gullible, can't you?\"\n\n\"Do you really think so? The trouble is, I always put too much faith in them. I always believe in them and think that they're going to be as honest with me as I am with them. Maybe I ought to try being gay. At least that way I might get someone with values more like mine.\"\n\n\"Well, you know that won't work. When we accidentally walked into that lesbian bar in London last year, you were all embarrassed and couldn't wait to get out of there. If you couldn't look at it, how are you going to do it?\"\n\nWith a resigned look on her face, Lauren looked up at me and said, \"Yeah. You're right. I'm just gonna have to stay on my own for the rest of my life and end up a lonely old spinster. Fuck it! I think I'll go home and get pissed.\"\n\nI laughed and said, \"Tell you what. There's a booze shop on the corner. Let's go and get a couple of bottles and get pissed together, here. You can sleep in the spare room. It's Saturday tomorrow and we don't have to be up early, so we can sleep it off.\"\n\nSo. That's what we did. We started off on a bottle of wine, followed by some really nice cherry brandy that I had. We got to talking about men and as the alcohol level went up, more and more of our insecurities came tumbling out. I'd broken up with my last boyfriend, Dennis, nearly a year ago and my sense of self-worth had since taken a dive. Getting drunk reminded me of just how low I'd felt. And Steph! Well! She was just stuck in a great pit and by the time we got on to rum and blacks she was sobbing about how ugly she must be and how stupid she is. And then we got so pissed we started giggling out of control.\n\nI think it was about then that I must have mentioned how I thought she was dead pretty and that my friend Jerry, who's a photographer, would probably fall over himself to get her to pose for him. At that idea, Steph burst out laughing even more and started pulling silly faces and getting into daft posing positions. We were laughing hysterically...\n\nUntil we started puking. Oh God, I felt ill. We both puked back most of what we'd been eating and drinking. I think some of what came back was from meals I had two weeks ago. Neither of us made it to bed that night. We just curled up, fully clothed, on the rug with a couple of cushions at, I think, about three in the morning.\n\nI awoke at 7:00ish and woke Steph. Then we staggered off together and got into my bed, still fully clothed, where we slept through to 1:00pm. God I felt rough. At one time, Steph used to stay with me a lot and as I have a large shower cubicle it wasn't unusual for us to shower together. Waking her again, we walked very carefully and gently, supporting each other as we went, into the bathroom, got undressed and into the cubicle, almost with our eyes closed. Without thinking, I turned the shower on and we were both drenched in an absolute deluge of bloody cold water, until the warm water began to come through.\n\nThat woke us up, I can tell you. Steph screamed and swore, as did I, but it seemed to do us some good. We dried off and I lent her a dressing gown, then we went off to make some breakfast. We decided we needed a proper breakfast of eggs, bacon, tomatoes and mushrooms. As we sat together eating, Steph looked up at me and asked, \"Lauren, it's not that long since we last showered together is it? I've never noticed before that you shave your pubes, how long have you been doing that?\"\n\nI thought about it and replied, \"Actually, it's a couple of years since you last stayed here. Dennis persuaded me to try shaving; he seemed to have a thing about it and in the end I decided to give it a try. It's the one thing I've got to thank him for and I've been doing it ever since.\"\n\n\"But you haven't had a boyfriend since so why do you still do it?\"\n\nI think I blushed a bit. Then I replied, \"It feels so nice. Even if I don't have a boyfriend I still need to, you know... have the occasional orgasm... even if it's, you know... just me.\"\n\nWhen I'd said that, Steph blushed profusely. \"Oh, right. I see. Er, sorry. Didn't mean to embarrass you.\"\n\nSilence reigned for a few minutes and then Steph, who'd been closely examining her breakfast, asked, \"Er, Lauren? Do you mind if I ask you about it? You know, the shaving.\"\n\nWith a deep sigh I said, \"Ok, what do you want to know then?\"\n\n\"Well, first of all, what did you mean, 'It's the one thing you've got to thank him for'?\"\n\n\"Have you never shaved yourself down there then?\"\n\n\"No. It never occurred to me to shave.\"\n\n\"Oh! I thought everyone did it these days, at least sometimes.\" I considered my answer for a moment and then went on, \"The first time I shaved, I made a bit of a mess of it and ended up with lots of little cuts everywhere. But as I rinsed the shaving foam off I realised how nice it felt down there. So smooth and sooo, so sensitive.\" As I went on I began to blush madly again. \"I began to, you know, stroke myself there and it felt lovely. I carried on, stroking myself right down between my legs to my lips and then back up to my clit. It just got better and better. I ended up having a tremendous orgasm. And then another one. I had about five or six all told that time and it was lovely. Decided there and then that I was going to carry on shaving and here I am.\"\n\n\"How often do you shave?\"\n\n\"Usually every morning. I didn't do it this morning because, well, for a start, you were there and it didn't seem appropriate, and secondly, I still felt pissed and wouldn't have trusted myself with a lollipop stick, let alone a razor.\"\n\nWe finished breakfast in silence and then went back into my bedroom to get dressed. As we did so, Steph suddenly seemed to notice the framed photographs on the walls, which are of me in various sensual poses. Gazing from the pictures and back to me, she asked, \"Blimey Lauren. When did you get these done? I didn't spot 'em last night I was so drunk, but flippin' 'eck, they're quite saucy, aren't they?\"\n\n\"I told you about my photographer friend last night. Don't you remember? I said he'd probably like to have you pose for him and you started doing all those daft poses and mucking about.\"\n\n\"Oh yes! It's beginning to come back to me now. But I don't remember you saying anything about posing yourself.\"\n\n\"No, you're right. I probably didn't. We were laughing and giggling so much I must have forgotten to mention it,\" I said. \"Anyway, if you ever fancy it, you know, I could ask him for you. We could even do a set together, for fun, if you like.\"\n\nWe had a little lunch and Steph went home later feeling just a little better about herself. I was surprised when, the following morning, she turned up on my doorstep again.\n\n\"Lauren,\" she began, \"I've not been able to stop thinking about your suggestion all night and had to come back and talk about it.\"\n\nI was wracking my brain trying to remember what she was talking about, \"What suggestion?\"\n\n\"You know, the photo session.\"\n\n\"Oh that. I take it from your level of excitement that you'd like me to arrange it for you then?\"\n\n\"God, yes! I've never had my picture taken properly before and the thought of posing like you did just seemed to excite me. So, yes. If you can set it up, I'd like to try it. If that's ok with you.\"\n\nSo I agreed to see what I could do. Jerry is quite a nice bloke. When he'd photographed me, he'd been living with a friend of mine and had asked me when we were all out together one night. I agreed to pose as long as Clare, my friend and his girlfriend, was ok with it. They'd both come to my flat and Clare had helped me with my hair and makeup. It'd only taken an hour. Jerry had been very professional and nothing had happened. At least, nothing had happened whilst they were there, that is. I found the session to be an incredible turn-on and when they'd left, I went straight back into the bedroom, got all my favourite sex toys out and played with myself until I was sore as hell and had come about a dozen times. I still masturbate regularly thinking about that photo session and what might have happened.\n\nSo I rang the flat where they lived. Jerry answered and I told him who I was and then asked to speak to Clare. He was silent for a moment and then said, \"Look, I'm very sorry Lauren, but we broke up about two or three months ago. Clare's living with someone else now; a barman I think. It just didn't work out between us. She moved out of here and straight in with him. I think it had been going on for a while. We hadn't been, you know, living as a 'couple' for some time. And to be honest, it was a bit of a relief. The spark had definitely gone, so it was for the best really.\"\n\nI expressed my sympathy, etc and said it had been nice talking and I'd see him around and then hung up. I cursed when I'd put the phone down, but then decided to ring him straight back. As he picked up at his end I said, \"Hi, it's me again, sorry. It wasn't actually Clare I wanted to talk to, it was you.\"\n\n\"Oh, ok. How can I help you then?\"\n\n\"Remember those pictures you took of me last year?\" \"Yes.\" \"Well, another of my friend's would like to have her pictures taken too. Similar to the ones you did of me. And I might have some more done too. If you'd like to do some more, of course.\"\n\nSilence! And then, \"Er, yeah, ok. That could be arranged. But I think I'd prefer to meet your friend first and discuss things. Would that be ok?\"\n\nWe had a chat about a few details and agreed to meet that evening in a pub near my flat. He didn't have a girlfriend at present, so didn't have to have her agreement, or worry about upsetting her if she didn't like the idea. The meeting went well; Steph and Jerry got on like a house on fire and we set it up for the following Friday evening, with the idea that he'd do a photo session and then go home to print out the best ones. He'd leave his lighting set up so that he could come back the next evening, with the pictures, to make any alterations and finish off the session.\n\nI could not believe how Steph was when she arrived two hours early the following Friday. She was an absolute bag of nerves, full of nervous chatter about absolutely nothing. I took her in, sat her down and gave her a large G & T. After twenty minutes or so she began to chill a bit and gradually came back down to Earth. We'd already decided on her outfits for the session earlier in the week so all she had left to do was get ready. As I'd showered earlier I told her to go and have one too and then put on my silk wrap; we'd decide on clothes when Jerry was ready to shoot.\n\nJerry arrived exactly on time and got set up really quickly. We'd agreed to use my lounge because it was the largest room and there was plenty of space for the lighting and tripods. Having posed for him myself on a couple of occasions, I had total confidence in him and his professional attitude and as soon as Steph was ready he took control, getting her to show him her outfits, talking about which order to use them in and then leaving us alone to get her dressed.\n\nFor her first outfit Steph was wearing a royal blue skirt suit, which matched her blue eyes and raven hair and that finished just above her knees, with a white, fitted blouse. For her underwear we'd chosen a white, three quarter, under wired, platform bra with widely spaced straps that left her ample cleavage fairly open, and matching white briefs and suspender belt, with black seamed stockings attached. The effect was breathtaking and we'd finished it off with her black, horn-rimmed glasses (which she tried to kid people she didn't need) and a pair of black, patent court shoes with four inch stiletto heals\n\nPresented with this vision, Jerry gave a firm nod of approval and immediately got the session going. He had Steph sitting in very prim poses, knees together and looking very shy. Then she posed standing in various positions, but always looking wonderfully demure. After about ten minutes of these poses, Jerry said, \"Right Steph, I need to know how you want to go on from here. We could keep the mood very demure and only shoot you fully clothed, or we could go on from here to more risqu\u00e9 poses. It's up to you. The second option would involve removing some of your clothes, of course.\"\n\n\"Well, I'm not here to just look like a virgin. What do you want me to take off first?\"\n\n\"Good. That's what I expected. Start by slipping out of your jacket. I want to get some shots of that very pretty blouse. Then we'll go for the \"getting undressed for bed\" look. I'll leave it up to you how far you go.\"\n\nIt wasn't long before she was down to her undies and to be honest, she looked really good. Steph was a natural and went from pose to pose without fuss. In certain views from the front you could just make out her quite prominent pubic bush and the first time it showed I saw Jerry do a double take as the dark triangle came into view. Then he said, \"Are you happy to go on?\" to which Steph nodded her consent. \"I have to tell you though Steph; this is the first time in several years that I've photographed anyone with a full set of pubes. In my experience, most girls remove most, or usually all, of their bush, especially when they're being photographed.\"\n\n\"Oh. Lauren said something similar last week. What do you suggest we do?\"\n\n\"It's up to you really. Would you like to have them removed, or carry on as you are?\"\n\n\"Well, if I go for the removal option, what are you suggesting?\"\n\n\"I don't know. Lauren, have you got any ideas?\"\n\nI thought about it for a while and a plan sort of developed in my head that got me quite turned on. I said, \"What about if we make a slight alteration to our plans and make it a two person, sort of semi-lezzy type shoot? We could make it look like Steph's flat mate has come home, found her getting ready for bed and then take it from there. The flat mate could shave Steph's pubes for her and then they could pose together to finish off the session. How does that grab you?\"\n\nStunned silence!\n\nJerry looked across to Steph who slowly looked from him to me. Then she said, \"Ok. Sounds good to me.\" But as she said it, trying to sound cool and to pass it off as nothing unusual, I heard a little tremor in her voice and I just knew that she was as turned on by the idea as I was. Neither of us is gay or bi or anything, but it was just a thing in the moment, sort of.\n\nSo we carried on and I went and put on some nice clothes myself. For the camera, we made it appear that I was just getting in from shopping. Jerry continued his direction and I took my jacket off, beneath which I was wearing a short, pleated skirt and a cropped, very brief halter-top, tied loosely at the neck and back. Then he instructed us to look like we were having a little welcome home kiss. I'd certainly never kissed another girl before and I was pretty sure that Steph hadn't either. As I went into her arms I'd intended to just give a little peck on the lips, but it immediately went a lot further than that and turned into a full on kiss, tongues and all. After a few seconds, I broke off and looked into her eyes. \"Are you ok with this? Do you want to go on?\" I whispered.\n\nSteph whispered back, \"I don't think I've ever been so turned on in my life. You bet your fucking arse I want to go on!\" I leaned back in and carried on where we'd left off, the kiss becoming more and more passionate. Jerry told us to pretend to stroke each other. Steph's hands were all over me, stroking my back and coming round inside my top and stroking my breasts, then down to my backside, under my skirt, whilst both of my hands attended to her ample breasts and nipples. I could hear the camera clicking away and for some reason that turned me on even more. On Jerry's directions, I gently lowered Steph to the settee, kissing her all over and then knelt in front of her. Putting my hands behind her, I released the catch on her bra and brought my hands round to cup her breasts beneath the loosened garment, stroking her now erect nipples with my thumbs. Removing the bra completely, I leant in and softly kissed her nipples and then trailed more kisses down over her firm stomach.\n\nThen Jerry said, \" Ok. Now Lauren, I want you to take Steph's knickers off and then pretend to start using your tongue on her.\" As my hands reached her panties I hooked my fingers into the waste band and dragged them down, waiting as she lifted her beautiful bottom off the settee so I could get them all the way down. My kisses continued down to her vulva and my tongue darted out, very lightly brushing against her clitoral hood and then very slowly, I traced a line down along her very damp lips. I heard Steph gasp and say, \"Oh shit. Oh fuck, fuck, FUCK!\"\n\nUnfortunately, within seconds, I found myself with a pubic hair in my mouth and had to pull my head away to get rid of it. Steph moaned aloud in frustration and Jerry said, with a grin in his voice, \"Ok girls. We'll stop there for now. You see what us men have to put up with Lauren? Pretty off-putting, isn't it?\"\n\n\"Yeah, it is. Shall we take this opportunity to start shaving Steph's muff?\"\n\nI'd already taken my shaving kit, plus a fresh blade, from the bathroom. I fetched a bowl of very warm water from the kitchen and set to work. First I trimmed Steph's pubes as close as I could with a pair of scissors and put the trimmings in the bin before soaking what was left of her pubes with a flannel. Next I squeezed some shaving gel on her and spread it all over her pubes. It didn't take long and I'd soon shaved her as smooth as silk all over, including around her arsehole. Jerry was clicking away all the time and must have got some really good shots of a woman being shaved.\n\nAfter washing the residue of the foam away, I told Steph to touch herself to feel what it was like. Bringing her hand down to her now bare muff, the look on her face was a picture. \"Oh my fucking god. This feels fantastic. It's like being touched for the very first time. Ever. I feel sooo sensitive.\" With her legs spread fully apart, Jerry told me to put my face back onto her quim and pretend to start kissing her small, crinkly inner lips again. He told Steph to hold her lips apart so I could gently licked along them, before licking up and along to her clit, which was now very erect. She was moaning loudly and saying, \"Oh, oh oooh. Shit. Oh fuck.\" All the while Jerry was clicking away.\n\nThen suddenly, Steph put her hands to the back of my head and pulled herself onto me, groaning all the time and in no time at all, she was spasming furiously against my face in an explosive orgasm. \"Fuck. Fuck. Fuck me. Oh fuck me hard. Lick my fucking clit. Aah. Ooh. Nnng. Huh. Huh. Huh. Huh. Aaaagh.\" The floodgates opened and she came like an express train, grinding her cunt against my face, nose and lips. It was just so erotic it nearly made me come in sympathy.",
        "\"Oh Jesus, Lauren. I really needed that. My god that was big.\" Taking my head in her hands, she gently pulled me toward her. Moving back up her body our lips met again and we kissed deeply, long and hard, all the while to the soft sound of Jerry clicking away with his camera.\n\nJerry then instructed Steph to start undressing me. I felt her reach behind me and pull the strings tying my top across my back and felt my tits become unburdened by the fabric, hanging free yet still a little constrained. She then untied the knot at the back of my neck and the top fell away from me. She brought her hands round to my now fully exposed boobs, gently caressing them and stroking my nipples with the tips of her fingers and thumbs. Click. Click. Click. She stood me up, kneeling before me, and reached up, removing my tiny skirt, leaving me standing in just a tiny micro thong.\n\nI looked across at Jerry for the first time in ages and couldn't help noticing that he had a raging hard on forming a tent in his trousers. Then another wicked thought entered my head. I decided to hold onto it for a while.\n\nSteph began stroking me through the thong, her middle finger tracing a line from my arse to my clit and back again. It was wonderful. With my legs wide apart and Steph still kneeling, she brought her face right up to my thong and then poked her tongue out so that it made firm contact with my throbbing clit, through the fabric of the thong. Leaving a damp patch there from her saliva, she moved her face down slightly, bringing her nose into play and then started to gently massage my ultra sensitive clit with it. After a few rapturous moments of this, Jerry told her to turn me around so he could photograph my bum and as he clicked away, Steph took a hold of the sides of my thong and slowly pulled it down, over my hips. Pulling it even lower, past my knees, the crotch of the thong was caught in my groin and round my fanny, which felt wonderful. I bent down, placing my hands on the sofa and as I did so, the gusset of the thong suddenly released, shooting down my legs. It felt so nice, I nearly climaxed.\n\nNext, Jerry said to start kissing my backside whilst I was bent over. However, Steph did much more than that. First she gave little pecks all over my bum cheeks. Then, using her hands, she gently forced my legs apart and as she did so, continued kissing along the crack of my arse. When my legs were far enough apart for her plans, she licked slowly down from my anus right along to my clit. The pleasure was so intense. Then she licked back again, all the way up to my little puckered bum hole. She licked around and around, almost driving me wild with the sensations.\n\nJerry said, \"Right then. Now I want you to change positions for me and get into the scissors position.\" We both looked at him in astonishment, neither of us having the slightest inkling what he meant. It didn't take long for understanding to set in though and we both got onto the settee, on our backs, with our legs 'scissoring' and our fannies touching. I didn't think much to this position, until we started moving a little and our lady bits began to rub together. And then; \"OOOH FUCK!\" we both said, in unison. \"That's it.\" Jerry said, from a position directly over us. \"Now start grinding yourselves together.\"\n\nAs we did so, I knew that I was about to come. The orgasm started in a spot right between my clit and my arsehole, but sort of deep inside, and then moved forward to where Steph was rubbing her clit against mine, before spreading out in wave after wave of the most intense pleasure it's possible to imagine. I let out scream after scream, swearing profusely, as one of the most profound and intense orgasms I'd ever experienced, ripped through my body in a tremulous explosion that reached right up into the centre of my brain, which had ceased to be aware of anything but the rapture emanating from deep within my throbbing, twitching cunt.\n\nI laid there for a while, not moving, deep in my own reverie. Sitting up, I looked across at Steph who was laying with her eyes closed, and then across at Jerry, still sporting his substantial erection in his pants, and remembered my earlier idea. \"Hey Steph,\" I said. \"This isn't really fair is it? Us doing all the work. Don't you think it's about time Jerry got involved, too?\"\n\nSteph opened her eyes and with a sly look, said, \"Why Lauren. Whatever do you mean?\"\n\n\"I reckon Jerry ought to be joining in. Here we both are, all our kit off, and he's not even undone a shoelace! What do you say to getting some of his kit off and including him in the photos?\"\n\nJerry had a worried look on his face as he said, \"Er, look. I'm only here to take photos. I'm no good in front of the camera.\"\n\nWith a devilish look in her eyes, Steph said, \"Now don't you worry about that. We'll take care of things. You just look pretty for us and come over here.\" Jerry appeared rooted to the spot so I went over to him. I got him to show me what to do and we set up the camera on a tripod. It turned out that the camera could be operated by wireless remote control. Pointing the tripod-mounted camera at the settee, I took the remote and holding him by the arm, moved him towards Steph.\n\n\"Gordon Bennett, Jerry. That thing looks really uncomfortable, squashed up in those trousers. Here, let me help you.\" And with that, Steph reached up and loosened first his belt, and then the buttons and zip. She gently pulled his trousers down to reveal the tip of his very hard and nicely proportioned cock poking out of the side of his boxers. She dipped her head and lightly licked the dewdrop from the tip of it.\n\nI decided to take over the role of director and with Jerry standing between us, said, \"Ok Steph, now pull down the front of his boxers while I take care of the back.\" As his underpants came down, I heard Jerry do a little gasp, presumably as Steph took his cock into her mouth. I just kept firing off the remote, taking a photo every second or so, all the while kissing his delicious looking bum. In no time he was completely naked, his rampant pole standing proud in front of him. With my free hand, I reached round and cupped his balls and felt Steph's hand on the base of his cock as her head moved slowly up down, giving him a blow job.\n\n\"Ok. Let's change positions now,\" I said. \"Steph, I want you to kneel on the sofa, legs slightly apart, with your bum hanging over the edge.\" When she was in place, I said, \"Jerry, I want you to pretend to be about to fuck her from the back and I'll pretend to be guiding your prick into her quim.\" I'd decided to carry on with the 'pretend' theme, even though I knew full well that we were far beyond just posing for fake shots. As Jerry moved into position I took hold of his cock for the first time. It really was a nice 'Goldilocks' one -- not too big and not too small. I've had both and don't really like either. Too small and you can't really feel them and too big and they make you sore for days afterwards. I'd sooner have one that you can feel properly and can have day after day.\n\nGuiding him towards Steph's fully exposed fanny by his prick, I moved him to where it was just touching Steph's lips, clicking away constantly. Pulling him in just a little closer, I stroked it up and down her crack. \"Ok,\" I said. \"Now just move in a tiny bit more so you can pretend to be fucking her.\" I guided most of Jerry's knob end into Steph, took a couple of pics and then moved him back out again. \"Now I want you to pretend to be about to fuck her up the arse.\"\n\nTaking hold of his cock again, I moved it upwards to Steph's tight little anus. Placing it in position, I said, \"Just put a tiny bit of pressure on it, Jerry.\" For all the world, it looked like Jerry was actually fucking Steph's arse, even though he wasn't really penetrating her. Next, repositioning him again at Steph's lips, I said, \"I suppose really, we ought to have a couple of pictures of Jerry's cock buried all the way into you in this position Steph, don't you?\" Looking over her shoulder with a wicked grin on her face, she just nodded, so gripping Jerry's prick I held it in place and told him to slowly push it all the way in.\n\nJerry looked a little flustered and unsure of himself. \"Are you sure you want me to do this Steph?\" He asked.\n\n\"Are you kidding? Get that prick into me now, I'm having a fantastic time!\"\n\nAs it slid in, I clicked away and I could hear both of them moaning and grunting. I have to say, I was quite impressed with Jerry's staying power. I'd half expected him to pop his rocks ages ago and thought he must be close to it. After just a couple of strokes, I said, \"Ok Jerry. Let's change again.\"\n\nGetting him to lie on the floor on his back, I then got Steph to sit over his face, looking towards his feet. \"Now Steph. Just lower yourself down a bit so it looks like your getting oral.\" Doing as she was told I saw her lips drop onto and touch Jerry's mouth, which drew another gasp from her and then Jerry's tongue snaked out and began stroking along her cleft. Almost immediately Steph convulsed into yet another mighty orgasm. She sat hard on his face, grinding her cunt into his mouth, nose and chin. She moaned wildly, grunting in an animalistic way, desperately trying to catch her breath whilst abandoning herself to the madly erotic, intimate sensations and all the while I just kept clicking away on my remote.\n\n\"Fucking hell Steph. That looked beautiful.\" I said, after giving her a couple of minutes to recover. \"I think now we can do a few shots of you pretending to blow Jerry's cock. Stay in that position and just grip the base of it with one hand.\" Supporting herself on her left hand she gripped his still rock hard cock in her right and lowered her head to just above the tip. Clicking the remote a couple of times, I then instructed her to put just the tip in her mouth. As she brought her head down to his cock I saw her tongue poking out of her mouth, licking on the end of his knob. Then it was in her mouth and she began a slow and gentle up and down rhythm, slurping on it with her lips and stroking it, oh so softly with her hand, taking it deeper and deeper with every stroke. After just a couple of minutes of this erotic action and to my utter amazement, she was taking the whole of his cock all the way down her throat, right to the hilt. Jerry's arse was lifting off the floor with each stroke, rising to meet her slurping mouth. He looked about to come so I said, \"Steph, when he comes I want to see it squirt.\"\n\nAnother three strokes and he was nearly there. Steph brought her head away slightly and increased the pressure with her hand, stroking his prick up and down, faster and faster, all the while keeping her mouth close to the tip. Suddenly, Jerry's hips heaved off the floor and he grunted as a huge gob of semen was ejected from his cock, straight into Steph's waiting mouth. \"Oh Jesus! FUCK.\" As she swallowed hard, the next jet hit her on the lips and she opened her mouth to lick them dry, just as the next wad was ejaculated. \"Uuh. Unnh! AAAGH!\" he groaned. This time she managed to take most of it into her mouth again and then she lowered her mouth back down onto his knob, slurping and gobbling all he had left until she'd sucked him dry. I was really pleased I'd got the shots, and oh so turned on.\n\nFive minutes later, when they'd recovered a little, I said, \"That was a really big load Jerry, you must have been saving it up.\"\n\n\"I've been on my own for quite a while and I've been too busy to do anything about it. My balls were about bursting already but god, I was turned on then.\"\n\nI was hoping he had something left, but realised we all needed a short break. \"Shall we have a drink and discuss what shots to do next, now?\" I said and went to fetch more wine. When I got back Steph had cleaned her face off and was re-applying her makeup. Both were thankfully still nude. Making plans for the next shots, we decided that Steph and I would do some more lezzy poses and get some toys out in the process. I asked Jerry how many shots his camera could take and he said that with the 32GB card he was using, it was about two thousand in total, that we'd taken about six or seven hundred so far and that the batteries had loads of life left in them. The flash lighting was all mains powered.\n\nAfter we'd all rested a while and had a drink, I got back on the sofa with Steph. I sat and she laid on her back with her head in my lap. I played my fingertips very softly around her nipples, then down to her mound, gently stroking along her clitoris again and back up to her nipples. Leaning over I brushed my lips over hers. Her lips parted slightly and I licked in the tiny gap between them until her tongue rose to meet mine. We went into a soft and slow French kiss lasting for a couple of minutes and then I extricated myself from beneath her and laid over her in a sixty-nine. As Steph started to stroke my soft, crinkly labia with her tongue, I was just aware of Jerry, first positioning himself so he could shoot Steph licking me and then moving down to the other end to see my mouth and tongue in action. I was already incredibly turned on, but knowing that he was there recording what we were doing brought me up to almost fever pitch. Steph's tongue was stroking along the full length of my fanny and then her tongue reached my bum hole. She licked back and forth along and around my anus, rimming me for ages before returning to my quim. She repeated this several times and I was very close to coming again. Then, from out of nowhere (I think Jerry must have passed it to her), she had a vibrator in her hand and was stroking my cunt with it. She put it in place and started to push it very slowly up my quim, whilst at the same time using her tongue on my clit. I was in heaven. As the dildo went in to my full depth, she turned it up to its maximum setting and increased the pressure on my clit. I could hold back no longer and came like a hand grenade, exploding onto her mouth. \"Ooooh, fucking HELL. Oh fuck! Fuck! FUCK! Aaaghh! OH MY FUCKING GOD! FUCK ME! LICK ME! FUUUCK MEEE!\" With my body in complete spasm, I shuddered to a fantastic climax, waves of pleasure flowing out from the depths of my quivering vagina, washing over me like a mighty tsunami obliterating a desert island and then slowly receding as the force of it passes over. Gently now, I came down from the peak of my pleasure, relaxing, my brain regaining control of my exhausted body.\n\nFeeling utterly spent, I collapsed down onto Steph's face, my fingers still inside her love tube where they'd been playing. After a couple more minutes I began to resurface again and said, \"My god, that was nice. I'd forgotten about the toys. I think we'll use some for the next shots too.\" Rising into a sitting position, I saw my box full of toys lying on the floor behind the camera gear. Getting up and going over to it, I rifled through the box, taking out some of my favourites, including a double-ended dildo and a strap-on rabbit.\n\nLooking at the toys, Steph said, \"Oh wow, Lauren. They look wicked. Who's gonna get what?\"\n\n\"I think we can both 'get' all of them. There's no rush and there's plenty of time.\"\n\nWe lay in the scissor position again, this time on the sofa, with the double-ended dong. Jerry started shooting again as we began to insert it, first into Steph and then into me. It's about ten or eleven inches long and we managed to push it all the way in until our muffs met and our clits began to rub together again. It was so nice. Then Jerry passed me a little silver bullet, which I pressed down between our clits, vibrating us both to a near frenzy. Jerry was standing quite close to me and I could see that he again had a raging hard-on; he was getting really turned on again, which pleased me a lot.\n\nBringing us back to the present, Jerry said, \"Ok, girls. Can we switch to the strap-on rabbit now please?\"\n\nIn unison, we both said, \"O-o-oh!\" and then realised that maybe the rabbit would be even better. I said, \"I'll do you first and then you do me.\"\n\nIn reply, Steph said, \"Actually, it looks as though Jerry's ready again now. Why don't we do some more of those 'pretend' shagging shots, this time on you too?\"\n\nRising from the settee, I thought it was a great idea and took the opportunity to drag him onto me, pulling him gently by his cock. \"Come here, big boy. Let me feel how hard it is.\" As I stroked it lightly, pulling his foreskin back and forth over his purple knob, it felt wonderfully firm and I decided that he was going to use it on me next as Steph had already had some. \"Ok Steph. You can take charge of the camera remote for a while and do the directing. I'll do some posing.\"\n\nJerry showed Steph how to use the camera and even how to take it off its tripod and shoot manually. Then we got down to some posing. Steph's first orders were for Jerry to lie flat on his back and for me to straddle him, laying his erection along his belly and sliding my fanny along it. Even though I felt sufficiently wet from my previous activity, we also applied some lube to prevent any soreness. Steph came round to both ends to take shots as I slid back and forth. I'd never done this before and the sensations I was getting were lovely, with Jerry's cock grinding away at my clit. Steph then put the camera back on its tripod and said, \"I want to make it look like you're fucking in that position now. I'm going to hold the tip of his cock up to your clit so it looks like it's about to enter you.\"\n\nHolding his cock and slightly stroking it, as I lifted myself into place, she positioned it against my clitoris and I heard the camera's shutter click. I started to slide myself against it, bringing the tip against the entrance to my quim. I slid further down, feeling Steph lightly pushing Jerry's hardness into me. Click. Then right down his shaft until it was buried to the hilt. Click, click, click. \"This'll look good,\" she commented, as she bent her head down and licked along the crack of my bum and then spread my cheeks before rimming me again. Click, click.\n\n\"Lauren. Lie on the sofa with your bum hanging over the edge. Jerry. Get on your knees between her legs and put your bell end into her.\" We did as we were told and as Jerry's cock got into place I put my hand down and gripped it, making it appear that I was pulling it into me. Click, click. And then I did pull it into me, riding it for just a couple of seconds.\n\nWe went through a whole range of positions, with Jerry fucking both of us, but only for a very few strokes at a time and then we got back to the strap-on. I could see that Steph was extremely close to another climax, so I took control again and used it on her first. Putting her on her back, on the settee, I knelt on the floor between her shaking legs and put the cock part of the rabbit against her cunt, sliding it up and down her gash. Moving it slowly down her cleft, I pushed its end slowly into her, a little bit at a time, before pulling it back again until it was almost out. She was so wet. I pushed it back in again, just a touch further than before and then out again. I carried on like this until the whole of the shaft was buried in her and the ears of the rabbit were buzzing away at her clit. I began a slow rhythm, in and out, only moving about an inch at a time, keeping the ears in contact with her clitty. Her legs rose and wrapped around my back, locking at the ankles and pulling me tightly onto her. I could feel the strap-on vibrating, through the harness against my own clit. And then Steph's body sort of jerked hard against me, one, two, three, four times, in quick succession as she grunted, \"Uuh, unh, aagh, FUCK\", as she orgasmed yet again, for what was to be her last climax of the evening.\n\nWe lay there for a time, not speaking, until Steph said, \"Bloody hell Lauren. I don't think I've ever come so much in one night. That strap-on's brilliant. Now. Let's use it on you, shall we?\" As I started to remove it, Steph got down on her knees in front of Jerry and gave him another blowjob. Looking up at him and taking his member out of her mouth for a moment, she said, \"We'd better not forget you had we? You've made my weekend for me and I never thought I'd have so much fun ever again. Thanks.\" She sucked gently on his knob for a while, until I passed her the strap-on harness.",
        "Taking over where she'd left off, I took Jerry's cock into my mouth and sucked, licked and lapped at it, whilst Steph fitted the harness to herself. And then we got back down to the shoot.\n\nSteph put me on the settee again; replicating the position I'd adopted to fuck her. As she began the slow shagging rhythm against my throbbing fanny, the pleasure was glorious. I asked her to move onto her back on the floor and straddled her, reaching back and taking the dildo in my hand so I could pull it into me and fuck it again. My cunt was awash with juices as I rode up and down, harder and harder. And then Steph told Jerry to put the camera back on its tripod and to come over behind me. I was so aroused by now that I hardly heard her. Then Jerry was behind me. \"Slide your prick along the crack of her bum\", she said.\n\nAs he did so, the pleasure I felt increased immensely. The sensitivity around my anus was awesome. I was a virgin to anal sex but I was loving this. And then she told Jerry to push his cock against my bum-hole so it looked like I was being double penetrated. Oh my god, it was fantastic. Jerry leaned down to me and asked if I was ok with it. \"Fucking hell, yes. It's incredible.\"\n\n\"Do you want me to carry on then?\" \"God yes. Oh Christ, that's so lovely. Just don't you dare fucking stop.\"\n\nHe carried on, alternating between running his inflamed manhood against my bum groove and gently poking it almost into my anus. I pushed back harder and harder, against his invading organ, giving way to the temptation it offered. Finally, as my climax became inevitable, I shouted, almost screamed, \"Oh GOD. Fuck me. Both of you. Just FUCK ME. FUCK ME HARD.\" And with that, as I felt Jerry's tumescent manhood once again pressing against my back door, I simultaneously sank down onto the strap-on and pushed back, hard, against his hard, hard prick, forcing it into my tight, virgin arsehole. For a few moments, everything was wild and I pushed back again and again, until he was buried as far as he could go, deep into my back passage. The scintillating pleasure was pulsating and vibrating all at the same time, forcing me to come, squeezing a massive, wonderful climax out of me like I'd never experienced before. I couldn't tell where I was getting the most pleasure; in my anus, my clitoris or my vagina. I was screaming and shouting, gasping, grunting, even laughing, it was so good. I was feeling sensations completely new to me and for the first time in my life I felt completely full. And then I felt Jerry begin to speed up, pushing his cock in and out of my arse, faster, faster. As his pace increased, I wondered if there'd be room inside me for his load. And then he was there, his cock throbbing in spasm after spasm as he splashed the inside of my rectum with his jism, spunking into me in jet after jet.\n\nWhat a way to end the photo session. I felt like I'd never been truly fucked before and that he'd awoken something in me that I never knew existed. After we'd cleaned up a bit, we all slept happily together in my bed. We had another session in the morning and a photo session that night.\n\nSteph and Jerry got together that weekend and have been a couple ever since. It's been over three years now and we still, all three of us, have the occasional photo session together, which always includes some wonderful sex. I don't know if they do the same with others, but to be honest, I'm not bothered. They're really good friends to me and when we can, we have a lot of fun together. I'm happy with that. I don't know if we'll all live happily ever after but it's been wonderful so far. Let's hope, hey?\n\nThe end"
    ],
    "authorname": "Kaisergirl",
    "tags": [],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/my-photo-friend"
}