{
    "title": "Butt Lovely Pt. 01 - Around the world.",
    "pages": [
        "I've been banished to the garage. It actually suits me. There's no way I'd want to be around that mob of half pissed floozies. Jules' friends are throwing a lingerie party for her hen's night. We tie the knot next weekend. So, they're in there giggling at garter belts and butt plugs and I'm out here fiddling with fan belts and spark plugs.\n\nDespite the fact that they're about three rooms away in the living room, I can still hear snippets of conversation and a collective collaboration to raise the total spending so they get the promised stripper. Apparently if they collectively spend more than a thousand, they are rewarded with a bloke who struts about and takes his clothes off. That, I can truly miss.\n\nLast weekend the boys threw a porn and prawn night for me down at the bowls club. \"For my benefit\", they included a couple of skanky strippers who served drinks topless for the night and then provided a 'lap dance' for me. I was tied to a chair while these two things who looked like they lived on meth and welfare writhed on me and then assaulted each other with a collection of implements that made my chest of power tools look safe. Total class.\n\nSo yeah... I'm happy out here with my stereo, some cold beers and the ute. It's an old '58 Ford Mainline that I'm restoring slowly. The 272 Y-block is giving me a few dramas. The valve-stem seals are fucked, and the springs look like they'll break the first time I sink the foot into it, so at present I'm removing the heads for an engineer mate to go over. Might as well go a full deck and grind while I've got them off.\n\nWiping my hands on my shirt like every bloke shouldn't, my bladder reminds me that I've had more than a few cold beers and I text Jules to let her know I'm going inside to use the loo.\n\n[need a piss]\n\n[Ok. Hall door closed anyway.]\n\nRomantic kinda stuff.\n\nI'm met in the hall by Milly, who's just leaving the loo herself. She's one of Jules' oldest friends and Matron of Honour next weekend. She's a little dynamo of energy and dimply smiles.\n\n\"Davo!\" She hugs me and gives me a quick peck on the lips. \"You gorgeous man. You should join us.\"\n\n\"Ah... No.\" I look at the closed door at the end of the hall and frown at the noise from behind it, \"Nah. Not for me, Milly. How's it going in there anyway?\"\n\n\"Scaredy cat.\" She laughs at me, \"Afraid of some little girls and their toy collections?\"\n\n\"Something like that, love. Reckon you'll get the stripper?\"\n\n\"Don't know.\" She sounds a little serious and smells a little like she's had quite a few fizzy drinks. Her little bow-tie lips screw up and off to the side in her signature 'Milly is grumpy' gesture. \"I can't afford anymore. I think everyone's already spent more than they wanted.\"\n\n\"How far off are you, love?\"\n\n\"Two hundred and thirty-seven dollars and fifty-three cents.\" She says dejectedly.\n\n\"Roughly...\" I laugh. \"Here. Hang on. \"I'm supposed to buy the bridesmaids a gift of some sort anyway. Hundred dollars each.\" I hand her my master card.\n\n\"What? Oh Davo, you're the best, mate.\" I'm rewarded with another hug and a kiss on both cheeks.\n\n\"Oh, and can you make sure Jules spends at least a couple of hundred more on her lingerie than she wants to. Put that on the card too. You know what she's like.\"\n\n\"Yeah... Tightarse much?\" She puts on a Jules imitation, \"What the devil is the point even. He's just going to throw it all in the corner.\"\n\nIt cracks me up. She mocks Jules' pommy accent brilliantly and it sounds exactly like something she'd say.\n\n\"Well I'm leaving it up to you to make damn sure it looks sensational crumpled up in the corner.\"\n\n\"See ya Davo. Got money to spend. Love ya dickhead.\"\n\n\"You too, Milly.\" Then she actually skips down the hall and I attend to business.\n\nI'm shaking little Davo when my phone dings.\n\n[Oh, you wait. XXX Thanks Davy.]\n\n[You can thank little Dave when the girls leave, love.]\n\n[I fully intend to. \ud83d\ude09]\n\nBack out at the ute, I use a torch to heat the head nuts. They're frozen beyond the torque I'd need to put through them to crack them from the bolts they hold and I don't want to break the studs. I remember when I met Milly. Jules and I had been together at least a few months when Milly brought her home a spastic pisswrecked mess one evening.\n\n\"Dave. Sorry. Help. She's heavy as fuck.\" She smiled up at me. \"Soz. I'm Amelia. Amelia Bonnaczelvic.\"\n\nShe dumped an almost comatose Jules at my feet and shook my hand at the doorstep.\n\n\"Had a few tequila's, has old mate.\" She smiled. \"Oh, hang on, I'll get her top.\"\n\nShe returned a few seconds later from the cab, brandishing Jules' blouse and handed it to me. \"Fucking awesome night, Dave. God, she's so into you. I wish I liked someone that much.\"\n\nI learned how to hold a chick's hair while she vomited that night.\n\nOne by one, the nuts loosen and as I turn the last one free on the first bank, I hear a raucous cheer from the living room. I guess they have the stripper secured.\n\nI hear the door open and look back to find Lara leaning against the doorframe with an evil smirk on her face. Lara is trouble.\n\n\"So spunky, we want your opinion.\"\n\n\"Oh. Ok. The Broncos centres are letting the whole team down, holdens are for men with vaginas and your hair looks pretty like that.\"\n\n\"Idiot. Not those opinions.\" She pats at her hair and blushes a little. \"Look.\" She holds her hands out in fists.\n\nAs she opens one, she says, \"gold\" with a raised eyebrow. I see a small silver butt plug with a yellow crystal end on it. \"Or silver.\" She opens the other hand and displays a similar butt plug with a clear crystal end.\n\n\"Oh my god, your face. Priceless.\"\n\n\"What's it got to do with me?\"\n\n\"Well it's your Bridesmaids presents.\"\n\nI squint at her. She's a dreadful tease and flirt and has taken things just that bit too far with me on a few too many occasions.\n\n\"Fine then. Look it was my idea anyway. When you gave Milly your card and said about Bridesmaids presents, I thought it would be super cool if we all got matching plugs. We could wear them under our gowns on the big day. A bit of naughty fun. Julia's getting one too.\" She winks, \"So, come on then. Pink or Clear, Davo?\"\n\n\"What colour are your dresses again?\" I guess they should colour co-ordinate or something.\n\n\"Pff... You need to pay more attention. Lemon.\"\n\n\"Gold it is then Lar's.\"\n\nShe crosses the small distance from the door to where I lean on the car and wraps me in one of the special hugs she teases me with that involve pressing her breasts against my chest and her hot mound against my leg quite lewdly. They're the hugs that make Jules roll her eyes and shake her head smiling and make me a little nervous.\n\n\"Thanks big guy.\" She drops a hand to squeeze my butt before disentangling herself. \"Oh, the best bit. Julia says we'll get the photographer to take a few special group pics for you next weekend. Just something for you to think about while you're out here tinkering, Davo.\"\n\nTypical Lara stuff. I'm shaking my head at her retreating arse that I just know she deliberately sways exaggeratedly. The little blonde has more than once made it clear that if I ever wanted a piece of it, I just had to take it. When I told Jules the first time, she suggested I was misreading her. By the umpteenth time I expressed concern to Jules she said, \"Maybe you should just ravage the trollop and get it over with.\"\n\nDespite the suggestive behaviour, Lara is really good friend to Jules. Perhaps she just teases me because she trusts me not to act on it.\n\n[Gold it is then Davy. Did Lars tell you we're going to flash our naughty jewelled bottoms at the photographer for you?]\n\n[Yup. Got your stripper?]\n\n[Should arrive presently. Don't worry. I'll behave. This lot though... Who can tell?]\n\n[Have fun.]\n\nSetting the phone down, I fetch another beer from the bar fridge and wonder how much longer I have to stay out here. It's only ten o'clock but I'm running out of ways to amuse myself. I'm sitting on a milk crate next to the ute when my phone dings again.\n\n[OMG. So sad.]\n\n[What are you on about woman?]\n\n[Her partner won't do rudey bottom stuff.]\n\nGood lord this mob have some strange conversations.\n\n[Spose it's not for everyone.]\n\n[He says its positively filthy and just refuses. I thought all men like bottom stuff.]\n\nScratching my head and staring at the phone I wonder what she actually wants me to say when she messages again.\n\n[Stripper's super hot.]\n\n[I remember someone saying look but don't touch.] That was her only warning last weekend for me.\n\nShe doesn't text again, so I attack the other bank of cylinders. One by one the nuts come loose and then I set about cracking the heads from the gaskets they've been pressed against for more than fifty years. I can hear music and laughter and the sort of cheering that usually accompanies that manner of thing, but I'm not prepared for the video message I receive.\n\nA tall well-built man with muscles on top of muscles tears his policeman pants from his legs directly in front of Jules, whose face is registering equal parts joy and shock. I see the other girls laughing and generally enjoying the show. The message is from Jessie. She works with Jules.\n\n[Thanks David. We're having a ball. Or two.] Accompanies the short clip.\n\n'Good on them,' I think putting my phone back down and carrying the first of the heads to the workbench. I hear the bloody phone ding again and it coincides with a fairly muted moment in the hubbub.\n\n'What are they fucking up to n-' I stop mid thought as my phone shows me another message from Jess.\n\n[OMFG priceless Lara.]\n\nI watch as a naked set of buttocks gyrates in front of the ladies turning this way and that then back toward the camera. His dick is suddenly thrust in a way that's more comical than erotic and his balls flap against his thighs as he dances. I can see Jules' mum with her hand over her mouth and her eyes wide like saucers and then, holy fuck.\n\nAll the watching, laughing women turn as Lara stands, walks through them and kneels in front of the man and sucks his dick straight into her mouth. I watch as she grabs his butt cheeks and pulls him in and out of her mouth before finally holding her hand up for attention then dropping forward to deepthroat his entire length. The video ends with a look at Jules who is shaking her head and holding a hand to her forehead in a classic face palm gesture.\n\nMy fianc\u00e9e has surrounded herself with all these beautiful people somehow. Maybe her own nature draws them to her magnetically or something. But Jessica is the one I like most.\n\nShe's a demure looking girl. Pretty but plain with short sandy hair. Brad, her husband stands a good foot taller than her five-six and he's one of my mates. Jess helped me through that whole patch when Jules went home to renew her visa and hooked back up with her ex. I wasn't much fun to be around but she included me in family things and with Brad's help kept me busy.\n\n\"Once an ex, always an ex. You'll see.\" Jess had told me once when I was particularly low.\n\nThree months later, Jules was back for another twelve months. It took a little work but we were okay. She said she owed it to her ex to give things one last try. Jules and I had only been together a short while before she went home and while I thought we were very in love, we were still in our early days.\n\n\"I need more than what she was ever going to be able to give me.\" Jules explained. \"With her it was all about her. With you it's all about us.\" Mates have suggested to me that it doesn't count really if she cheated with a girl. Some said it was kinda hot. It still hurt. It was more about where her heart went. Long time ago now though, but that's why Jess will always be my favourite.\n\nIt sounds like the party is finishing. Doors bang and cars arrive to pick up half sozzled women. There is still some conversation, so I guess the bridesmaids party on.\n\nThe door to my refuge bangs against its jam and I turn to see Jules laughing and wiping her eyes.\n\n\"Good lord, Davy. You think you know people and then add a stripper to the mix... Bloody Lara swallowed his whole cock and even mother had a stroke at it. Just need a jolly good breather and one of your beers. That wine is...\" She makes a face. \"Getting really sticky.\"\n\nShe's a little wobbly on her feet and sways as she tries to open the bar fridge.\n\n\"Here, sit down a second love.\" I kick a milk crate to her and fetch a beer from the fridge and put it in a cooler. \"Here ya go.\"\n\n\"I don't know what they're all going on about. Like they haven't seen a naked man before. He's got lots of delicious muscles but his face is rather awkward looking. And his, erm... equipment, a little under par...\"\n\n\"Just supposed to be a bit of fun, love.\"\n\n\"Oh and I'm still so sad for m-, erm, the one who's erm... partner, won't do rudey bottom things. I mean it's such... I'd be... If you wouldn't... I just cum so hard when you... you know dear.\"\n\n\"Ha...\" She really is a bit pissy, \"Yeah, I do know love. You may have mentioned it once or twice. But hey, probably not for everybody.\"\n\n\"Never ever has she never... what is it..? Erm been around the world. You understand, Davy?\"\n\n\"Like-\" I do but she interrupts to explain anyway.\n\n\"One's mouth, vadge and arse in one session, dear. Never her arse at all actually, she insists.\"\n\n\"Oh goody, beer. Have to wash the taste of that out of my mouth somehow.\" Lara has found us. \"Damn fine dick that one though.\" She adds taking a beer from the fridge.\n\n\"You simply cannot be serious, Lars. That specimen?\"\n\n\"Yeah. Too bad he's gone now. You should have seen it Davo. Like this...\" She holds her fingers apart and squints. Clearly she's well on her way to falling over. \"big.\"\n\nJules just shakes her head.\n\n\"What bitch? You saw it. Don't tell me you weren't imp- Woah! Are you saying?\" Now she's staring at me like she's ravenous. \"Get em off Davo.\" She growls.\n\n\"Lars no, love. Not gonna happen.\" I tell her and actually have to hold her shoulders as she comes closer and tries grabbing at my shorts.\n\n\"Go on Davy, be a sport.\" Laughs Jules. \"Show the little trollop some quality cock.\"\n\n\"The stripper's gone ladies. You're all a bit drunk and this isn't happening.\"\n\n\"What's not happening?\" Milly asks.\n\n\"Is something happening?\" Jules' mother asks.\n\n\"Davy's going to show you all what a proper cock looks like, aren't you dear.\" Jules stands and pulls me into a toe-curling kiss. As her tongue explores my mouth, her hand smooths down along my chest to grab my rapidly hardening dick. I feel someone behind me and then cold air on my butt and legs. My pants are gone and Jules rubs me harder by the moment.\n\nShe's pressed against me, thankfully, so no-one sees the pre-cum I already leak onto her fingers. She tastes like wine coolers and some kind of savoury snack and then there's silence as she steps back and leaves me bobbing in the breeze for inspection.\n\nI'm five foot ten and weigh eighty-five kilos. I guess you'd call me stocky. So everything is in the right proportions. I've had some past lovers tell me I was big, but really it's not. It's just kind of... stocky, like me. They were small girls anyway, so it probably just felt big.\n\nRight now though I'm flushed red with embarrassment as my fianc\u00e9e, her mother and her three best friends (great, Jessie has arrived too) stare slack jawed at my throbbing dick.\n\n\"See ladies, that is what a jolly good cock looks like.\" Jules smiles proudly regardless of my horror, \"And it's aaallll mine.\"\n\n\"Jesus David.\" Jess is first to speak, \"You make the stripper we just had look like a... a...\"\n\n\"Fuck sake Lars...\" I squeak as hands grab my shaft and something cold is pressed against it. I look down to see she has my metal ruler. My eyes plead with Julia's for assistance and she just smugly watches on.\n\n\"Nineteen and maybe, seven and a half...\" Lara's breath warms my dick and I bounce in her hands. \"Ooh.\"\n\n\"You're doing it wrong.\" Milly adds. \"Here.\"\n\nAnother pair of hands grabs at my junk and measures, this time along the top of my shaft.\n\n\"Ooh, look at his balls.\" Lara grabs them and rolls them in her palms. \"Like big old avocados.\"\n\n\"Really guys?\" I ask. \"This is happening? You've had your fun now.\" I try to push at their hands as they fondle and grope and look to Jules who just stands there obviously enjoying my discomfort. I'm starting to get a bit angry. This really isn't cool.\n\n\"Eight.\" Milly pronounces. \"Eight inches from here to here.\"\n\n\"It's just so fat though.\" Jess states. I feel like some kind of animal they're examining. \"Davo, do you mind if I try to get my fingers...\"\n\nIt's a redundant question because she's already pushed the kneeling girls' hands aside and tries to make rings around my shaft with the thumb and forefingers of each hand.\n\n\"Jesus. That would split me in two.\"\n\nI raise my hands in a 'what the fuck?' gesture at Julia who simply grins and passes me a fresh beer. So, beer in hand, penis in hands, I open the beer and drink.\n\nWhich I promptly cough out as Julia's mother speaks, \"I bet you can't get the whole of that in your little potty mouth Lara.\"\n\n\"No. Come on, guys. Enough is-\" I freeze staring in disbelief at my Julia who simply shrugs as Lara's lips engulf the head of my dick in warm wet glory.\n\n\"Relax Davy. She's wanted it forever. Be a sport dear.\" Jules smiles and watches her friend bob on my dick. I'm human. That's what I tell myself as I groan and put a hand on Lar's head.\n\n\"Fuck...\" I grumble pointlessly and look from face to face. They all watch eagerly like hyena's gathering around carrion. Which I realise is pretty much what I am right now; roadkill. \"Jules... this is- fuck!\"\n\nLara chooses that moment to reach around and pull me into her using my butt cheeks as handles. I slide deeper in gagged increments until I feel her nose against my groin. I'm pulsing dangerously close to coming and something in me snaps. This is wrong and out of control.\n\n\"Fuck sake! That's fucking enough. Are you all fucking happy now? Had your fun?\" My hands pull Lara's face off me. I'm trying to be gentle but firm and her teary eyes worry me as she shlurps off me. Did I hurt her?\n\nSomeone; maybe Jessie, I think she was behind me, reaches and takes my wrists and gently draws them away from Lara's smiling raccoon face and pulls them behind me. I'm still reeling with this whole anomaly when I feel something furry but hard snap with an ominous click about one wrist and then the other.\n\n\"What the fuck, Jules? What're you all up to?\"\n\nJulia just smiles at me and comes close enough to hold my face in her hands gently.\n\n\"Relax Davy. You know I adore you.\" Her voice is low and even and her pretty blue eyes dance mischievously on mine. \"Now, dear Davy, I absolutely, desperately, positively NEED you to help one of my lovely friends with a little travel.\"\n\n\"What are you on about love?\" I probably sound whiney, but I know that tone in her voice. It's reserved for moments when I'm being coerced into something and I know that it's useless objecting.\n\nThen something soft is slipped over my head and everything goes black. \"Jules? What the fuck?\"\n\nHer tinkling laughter that usually makes me smile despite myself, now alarms me.\n\n\"One of these beautiful souls that are my closest friends...\" She punctuates the moment by running a finger along my jaw as whoever is behind me pulls a string to secure the bag like thing around my neck. In a moment of clarity, I realise they've hooded me with my own motorcycle helmet bag from the bench nearby.\n\n\"Desperately wants to experience something that they absolutely cannot otherwise and you are going to help them because you love me so much.\" Her logic may be a little twisted but she knows I'd do anything for her within reason. And therein lies my quandary. I'm cuffed, hooded and naked from the waist down in my own garage with her mother and three of her friends. How is this even remotely reasonable?",
        "Her hand leaves my face and in the instant, I realise how much I had been using it for reference; stability in this darkened moment. Without it, I reel vertiginously. Little hands steady me by holding my hips. There are giggles and whispers.\n\n\"Thanks guys. I'll call tomorrow. Love you.\" There are kisses, goodbyes whispered. Some of them must be leaving. I feel like I'm standing in a pavilion or something. I have no reference for up and down and only the faint noises of doors closing to place myself in space. A car starts outside and I hear other car doors closing. Taxi's and partners that I imagine have been waiting outside. A rising panic builds in my chest and I wish my hands were free so I could find a wall or something to-\n\n\"Shh.\" Jules' hand finds my chest and it's warm and the weight of it steadies my breathing. \"Shh lovely Davy.\"\n\nI can hear someone else moving around and things being shifted. Something slaps to the garage floor and I hear rustling.\n\n\"Yes love, just there. The strap. Yes, like that.\" Julia says to whoever remains. \"Davy don't be scared love. You'll like this, I promise. I'm sorry it has to be this way but we were all very worried that this would make things awkward if you knew who you were helping.\"\n\n\"Jules what the living fuck are you talking about, love. This is ridiculous.\"\n\n\"Remember I told you about my friend who has never had any rude bottom fun? Well, I know you like it and I want you to help her with a little trip around the world dear.\"\n\n\"You're kidding Jules. I'm not going to fuck... I love all your friends, they're like sisters to me... I can't...\"\n\n\"You can dear Davy and you will, because you love me and you love them too. Ha, it's not like it's going to be a chore, lovely. Look, you're still hard even. I think you secretly want to and are just making all the noises you want me to hear, naughty man.\"\n\nWith that a pair of hands, not Jules' whose are still on my jaw and shoulder steadying me, touch me lightly on either thigh.\n\nI hear a whispered, \"Are you sure?\" Try as I may, there is no tone or timbre left in the voice to help me identify its speaker. Where her hands hold my thighs gently and warmly, there is the subtle sharp press of fingernails. Which of her friends had long nails, I wonder.\n\n\"Ask Davy. He'll do anything to please me but it's important he consents to you. Ask him.\"\n\n\"Please Davo.\" She whispers. There are hints of a voice to the whisper and I struggle to identify her as I speak.\n\n\"I can't believe I'm saying this, but if it's okay with Jules-\" I'm interrupted by the second warm wet mouth that isn't my fianc\u00e9e's on my dick this evening.\n\n\"Thank you, Davy. You're a beautiful man. I owe you. Anything you like. Thankyou.\" Jules says and kisses my cheek through the hood.\n\nNow Lara had just been showing off. Don't get me wrong, any headjob feels pretty good but while Lara was all about her, whoever has my dick in her mouth now is making it very much all about me. She's worshiping my dick. Her hand gently holds my shaft in a ring like grip at its base and her tongue traces veins and ridges like she's trying to memorise them. At the top of every sucking bob her tongue finds the bottom of my glans and swirls on it edging me closer and closer to orgasm.\n\n\"I don't think we need these, Davy darling.\" Jules moves behind me and releases my wrists. My sense of balance returns and I drop one hand to the head that bobs on my dick. I feel straight hair, held back in a ponytail. None of the girls had their hair up, but I can tell this isn't Jessie. Her hair is short. At least I know I'm not-\n\n\"Woah... Woah, I'm gonna-\" And it's too late. Her mouth holds just my knob and her tongue baths it mercilessly as I pulse and heave my cum up through my dick to fill her mouth. My knees tremble and I feel Jules behind me. She puts her arms around my waist and hugs me closely.\n\n\"That was hot, Davy. I thought I'd be a bit jealous, but it was hot. Thankyou. Now come with me darling.\" She reaches for one of my hands and leads me across the floor until my feet kick something soft. \"Your swag, Davy. Lie down on it for us.\"\n\nArranging myself, I laugh nervously at the awkward choreography of this encounter. I wonder how much of this was plotted between the girls beforehand and how much is just unfolding. From the floor on my back, I realise I can see shapes silhouetted between the light and I. Jules is recognisable as the taller of the two women. Mostly because of her breasts. She is the envy of her social circle with her double-D delights.\n\nThe other woman is removing clothes and I can hear them whispering but don't know what they say. As she moves, I try to establish anything distinguishing in her silhouette that would help me identify her.\n\nWhile not as large as Julia's her breasts are generous and rule out Lara who is always bitching about her b cups. God, could this be Milly? I know her present boyfriend Tony. I've met him a few times and he doesn't seem the squeamish anti-anal sort. How the fuck would I know though? It's not a barbeque topic of conversation.\n\n\"Gidday mate, I hear you don't like punching Milly in the blurter. What's the gee-oh with that?\"\n\nThen everything goes pitch black.\n\nI hear giggles as the two women stumble about a bit and I realise they've turned off the light.\n\n\"Davy darling, I'm going to take this off now.\" Jules fumbles at my neck and removes the hood. In that moment I kick myself for not having taken it off when the lights were on. Why didn't I even try? I know the answer to that but I don't want to admit that I was afraid if I didn't play by the rules the game would stop.\n\nI can feel the other woman moving on the swag around my feet somewhere. Something brushes my thigh and mentally I place her as walking up my body. In that instant, Jules lips find mine and her familiar kiss is deep and loving.\n\n\"I love you so much, Davy. You know that, don't you lovely?\"\n\n\"I love you too, Jules.\"\n\n\"I know, Davy. Now, I want you to love my friend for me, okay?\"\n\n\"I... Just... I-\"\n\n\"Relax Davy. It's okay. Just enjoy. Make it good. This is once in a lifetime for her.\"\n\n\"No pressure then hey?\"\n\nTwo sets of giggles reward me and in the moment, I can almost recognise... Nope. I thought for a moment it sounded like Lara's mischievous cackle. Maybe I was wrong about the breasts.\n\nThighs brush my waist and the woman drops her weight on my hips. Her skin is warm in the coolish air.\n\n\"Can I?\" she whispers tugging at my shirt.\n\n\"Oh sure.\" I move to help but it's not necessary. Jules hands and her hands make short work of my buttons and I pull my arms out of the sleeve.\n\n\"Hmmmm,\" she moans and lies upon me. Her breasts press on my chest and I can feel the heat of her on my tummy. Her lips press tentatively on mine in a peck that gently warms in passion. Her hands hold my face and another pair of hands rub up my legs slowly. As the hands rise up my legs our kiss rises in need and Jules hands find my dick gradually rising as well.\n\nMy hands smooth on the woman's flanks trying to extract some small detail that could help me identify her. I trace her bum and find nothing but soft warm skin and tight muscles, dimples in the small of her back, a slight tum, ribs and those breasts. I try to learn their shape. Perhaps if I memorise her body, I can identify her later.\n\nHer nipples peak in my palms and I roll their rubbery nubs between my thumb and fingers. Our kiss breaks and she gasps in pleasure. I know that- Damn it. I can't quite tell. A mouth, Jules' obviously engulfs my dick and my mystery lover knee walks up my chest. Oh god, I can smell her arousal.\n\nThe musky promise inches closer and I move my arms to let her bring her knees up past my shoulders and oh god, I'm eating my fianc\u00e9e's friends pussy. I'm overwhelmed by heat and wet, the need for breath and a desire to please.\n\n\"Fffffuck...\" She whisper-groans above me.\n\n\"I told you.\" Jules speaks, dropping my dick from her mouth. I'm almost hard enough to be useful again. It takes a little while. I am thirty-five.\n\n\"Ffffuck... Oh shit...\" I'm focusing on her opening. Tongue fucking her and letting her grind on my nose. Her squelchy core is sopping and my jaw begins to ache. Jules moves again and trails one hand along me like a life link.\n\n\"He's hard honey.\" She says from somewhere near my head now.\n\n\"Jist... jist... almost- nnngggh.\" Her thighs grip my face. I can't breathe. All I know is dark and heat and wet and jerking spasming pussy. \"Pubes!\" Is the ridiculous thought that stays with me while I see stars and wonder if she's actually going to suffocate me. What a way to go though. But pubes indeed. Maybe I can just interview all of Jules' friends about their grooming habits and narrow down who has pubes.\n\n\"Fuck me.\" She whispers and her thighs relent. She lies back down on my chest and I feel her heart beating. I feel her chest rise and fall with her breath. I feel her fingers trace lazy circles on my chest beside her head. I feel hands in my hair and I hear Jules.\n\n\"I'd kiss you, Davy but your face is a mess. I love you darling.\"\n\n\"You too.\" I huff, still catching my breath. Jesus, I haven't had this much fun in the garage ever. I don't think Jules and I ever got around to- \"Oh god.\" I groan feeling the woman slide wetly down over my hardened dick.\n\nShe raises from my chest and braces her hands on my ribs, centring herself on me. I can feel her wet labia kiss the shaft of me, pushing them apart and her hard little clit pressing on me. Slowly she rocks. Inching forward and back. Coating me in her generous juice. Sliding eventually from balls to my tip and teasing her entrance with it.\n\nIs she daring herself to take me? Is she waiting for permission? Is she waiting for me to take her because I'm going to if she doesn't soon- \"Oh god.\" I groan again as she tilts her hips at my tip this time and lets just the knob of me pop through her opening.\n\nFrozen still she lowers her forehead to my chest. I can hear her breathing harshly and wonder if she's as aroused right now as I am. My hand finds the back of her head and I caress it as she waits for whatever.\n\n\"Thank you.\" She whispers and her hand finds mine and hugs it too her head. \"Thanks Davo.\"\n\nI've never been thanked for bonking someone before. Or maybe she means the gesture of caressing her head. In any case her tight channel is relaxing around the knob of me and she is edging backwards, pushing me slowly deeper.\n\n\"So big, Julia.\" She whispers breathily.\n\nJulia doesn't respond. She's taken my free hand and put it to her own sopping pussy. It's hard to focus on fingering her while her friend impales herself in increments. She doesn't seem to care though and holds my wrist to hump against my fingers.\n\n\"Gnoarrr....\" She groans deeply and infuriatingly unrecognisably. She sits fully on me. I can feel my knob pressed hard against the back of her and she pulses on me as she adjusts. Julia flaps her hand at my face a little, then pulls my hand from her sodden crotch. Moments later I feel her knees beside my head and she lowers her familiar smell to my face.\n\n\"She's not getting all the fun, Davy. This is yours. That's just on lone for wee moment.\"\n\nI hardly notice the woman start moving as Jules directs my flicking tongue. She likes little butterfly licks directly on her clit, so she holds it maddeningly just out of reach and shifts to put them where she needs them. I'm so engrossed in chasing her little bean that it's only when I 'plop' completely out of the warm embrace of my mystery vagina that I consciously focus on the sensations at that juncture.\n\nI feel slender fingers slide down my slippery shaft and I'm positioned for penetration and shlock! I'm seated firmly and deeply from whence I slipped. She adjusts position and rides me on her front wall, leaning back with her hands gone from my chest. The sensation is aggravatingly stimulating on the top of my knob and burns with pins and needles but takes me no closer to orgasm.\n\nJules is making little angry groans and trying to get me just right. I can feel little tremors in her wet flesh as she rises and I know what she needs at least. While my dick is worked like a dildo for hire inside that steamy tight grip, I lift a hand behind Jules and seek her little bumhole.\n\nDragging moisture from the mess that floods my face I press my middle finger against her pucker and smile as she says, \"Oh yes Davy, be a dear. Put it in my wrong'un. Now.\"\n\nPerhaps her words cause the distraction that momentarily prevents me complying.\n\n\"Fuck. Fuck. Fuck yeah....\" Gasped whispers announce what the rhythmic clapping of her vagina tells me personally. She flops forward to lie again on my chest as she rides out the paroxysms of her aftershocks. Distracted, I obviously am not being as attentive as Jules desires and I feel her finger her own dark ring as she grinds on my face.\n\n\"Almost Davy, almost... hnggod...\" As Jules juices flood my face in orgasm, my mystery woman stirs and lifts to turn around and face my feet. I slip briefly from her as Jules kisses me.\n\n\"God Davy, so hot. I wish I could see you fucking her. Would you be a dear and wear the hood again so I can watch?\"\n\n\"I guess so. Are you sure it's not just so she doesn't have to look at my ugly mug?\" She is moving me slowly in and out as she rocks and holds my ankles for support. The angle is different and I feel like I'm deeper in her still.\n\nJules giggles and there is a brief flash of light as she uses her phone to find the helmet bag. For an instant I can see the woman's bum and legs in the glow. Her skin is bright white and I think of Milly and her peaches and cream complexion. Is this Milly? Is her skin just so white because it's so dark in here?\n\n\"Sit up a little, lovely.\" Jules prompts and I interrupt the riding woman, holding her hips still buried deep within her, I sit then manoeuvre her into doggy style. Jules hands hold my shoulders in the dark until I'm finished moving then she pulls that bloody bag back on my head.\n\nWhen she turns the lights back on, I can hear her taking pictures with her phone. Maybe later I can go through it and identify my lover.\n\nRight now though, a small hand pulls at my thigh, \"Harder. Do it. Fuck me.\" Her voice is a harsh need filled whisper.\n\n\"Oh Davy, that's so fucking hot.\" I'm surprised by the proximity of Jules voice, then further by her hand sliding down my arm and moving my hand on to the womans butt cheek. She spreads my fingers and touches my index finger to the woman's puckering hole. Taking the hint, I gather her juices and smear the little star that I feel winking as I thrust in and out.\n\n\"Fuck yeah...\" She breathily insists, \"Do it. Finger my filthy bum.\"\n\nI roll the tip of my thumb in the mess of juice that collects between us and then test her back door. With little pressure my thumb slips inside the little ring straight up past my knuckle. I can feel my dick moving against it as I plough in and out. When her ring stops clenching at my thumb and relaxes I start sawing it in and out of her in time with thrusting dick.\n\n\"Do you like that love? Does it feel like you thought it might?\" Jules asks her.\n\n\"Good.\" She whispers. \"Dirty, fucking good. Don't stop. Fuck. Fuck. Oh...\" Her voice is lost to a muffled wail and I feel her cum again. Her bum grips at my thumb and her pussy grips at my dick and my balls are bathed with a spray of warm wet fluid. \"Don't stop.\"\n\nI'm on the edge myself so slow my thrusting and simply push deep inside her in tiny thrusts. I remove my thumb from her tight little hole.\n\n\"No. Please. Don't- Owahhh yess.\" She hisses as I press my index and middle fingers into her now looser rear end. Holding her still against me, hoping I don't shoot off just yet, I saw my knuckles in and out, fucking her with my fingers.\n\n\"Yes. Yes. Yes.\" She says in time with my thrusting digits.\n\nI try to add a third finger and hear Jules beside me say, \"Now Davy. It's time. Take her all the way round the world. Here lovely, some lube.\"\n\n\"Oooh!\" It's probably the cold liquid that makes her forget to whisper for a moment and I can almost make out... Maybe it is Jess. It sounds so much like her. God, Brad would fucking kill me if he found out I fucked his wife. My third finger slips in beside the other two.\n\n\"Oh fuck. Stop. Wait. Pff... Pfff... Ok. Wait...\" She hisses. \"So stretched... Oh yes. Now. Go.\"\n\nGently I begin moving my fingers again. My dick is throbbing inside her, my orgasm right on the edge. If I'm going to do this, it needs to be now. Pulling out of her dripping pussy I push up against my fingers and in a single movement remove my fingers and slip my knob into her gaping hole before it closes.\n\n\"Oooh. Ooh ooh ooh.\" I'm again sprayed with hot fluid as her sphincter clamps rhythmically on my dick. That sounded more like Lara. Surely Lar's had a bloke back here.\n\n\"Shh honey. Shh... It's okay. Davy will stop if you like. Shh.\" Why is Jules consoling her? God is she crying?\n\n\"Are you okay love? I can pull out if you want. We don't have to do this.\" God I hope I haven't hurt whoever she is. I really do love all Jules' friends and would not forgive myself if I hurt her.\n\n\"No. Don't move. Sniff... I'm good. Emotional... Ok. I'm ok. Stay there. It's nice. Hurts but good.\"\n\nI can just make out through the weave of the bag, shapes that suggest this woman lies her face on a sitting Jules' lap. It looks like she run her hands through her hair as she quietens her friend.\n\n\"Ok...\" She hisses and I feel her rise up on her hands and knees again and press back on me a little.\n\n\"Let. Me. Take. This...\" she says in time with her inching thrusts until I'm seated all the way inside her and she stills again. \"Oh my fucking god. Just... a moment. Wow... So...\"\n\nI wish I could see this. I love when Jules and I do this and I can look down and watch myself spear in and out. I love the way her ring clings to me and pulls in and out with my dick. The sight itself of the rude act is almost as stimulating as the sensation of that tight hot milking ring. I can feel my heart beat as I throb against that ring and in it I feel her pulse. Her bowels are ridged and slickly tease my knob with the rise and fall of her breath.\n\nThis moment as I throb inside her hot depths stretches in time and silence. My knees begin to hurt with just the swag mattress between them and the cold concrete floor. It almost seems comical not simply surreal as it did at first. The irony of such a personal act taking place in such a utilitarian space occurs to me. Why didn't they use the guest room or something?\n\n\"Now. Fuck me now, Davo.\" She says in a hoarse growl that reminds me of Milly when we play tennis.\n\nWith my hands gently holding these lovely toned cheeks, I withdraw slowly until I feel her tightness on my tip.\n\n\"Fuck... Ohh.\"\n\nA hand and more cold liquid surprise me.\n\n\"Just a little more lube, Davy.\"\n\nAnd I push slowly back in. Little ridges ripple through her clinging red hot ring. I don't know how much longer I can hold out. I've got to the very edge and gone way past it almost into overstimulation.\n\n\"Davo... Fuck me... Hard. Don't hold back. I'm not going to break. I love it. So grotty. So full.\" It's got to be Milly. She's constantly telling me to not hold back on the court. My god, I'm really fucking Milly. And Jules is watching. Helping even.\n\nSlowly I build up pace. On each downstroke my balls now slap against her still wet pussy and her weight shifts. I feel her fingers brush my balls and know she rubs herself as I bore into her. Over and over I drive hard into her depths. Over and over I pull almost out until her ring closes tight around the base of my knob and I spear back in. Over and over I slap loudly against her thighs. Over and over my balls slap her wet pussy.\n\nOver and over she gasps, \"Yes. Yes.\"\n",
        "Her face is down on the mattress now and she starts a long guttural moaning sound that slowly rises in pitch and volume. I try to match its crescendo by increasing my pace but I'm racing against myself. My orgasm Is coming. I'm past that point where I have any control over it. My balls are drawn up tight and it's only that there is just not quite enough stimulation on my knob that holds me teetering.\n\nSelfishly, I pull almost out and just fuck her shallowly. Spearing my knob in and out of that tight ring so that it caresses my glans and...\n\n\"Fucking God!\" I slam deep within her and buck hard against her hips. My hands pull her back on to me harder still and the floodgates burst. My stomach hunches me almost double with the first volley. Cum surges up my dick and splashes deep inside her. Inside the hood, I squeeze my eyes shut hard and focus on the exquisite agony of this release.\n\nMy second spurt is just as powerful, hunching me double again until I'm lying on her back launching another ballfull of semen into her.\n\n\"Aw Fuck.\" I groan into her warm skin. \"Fuck.\"\n\nHer rising wail stops in a single word. \"Davo!\" My balls are again sprayed with liquid heat and her sphincter crushes down on my dick spastically. Two or three more times I thrust and spurt hard up into her as I lay heaving on her back.\n\nSpent, I hold her to me and roll to the floor. Still within her, she continues to grab at my slowly softening dick with her no longer virgin bum hole. I fold her in my arms and hold her through the moment.\n\n\"So fucking good. This can't just be a one time thing. I couldn't just... Not ever... Oh god thank you Davo. Thank you, Jules.\" She whispers between breaths.\n\n\"We'll talk about that through the week, lovely. When you're ready we need to get you cleaned up and home. Take your time. Sometimes this is my favourite part. I love my Davy's cuddles.\"\n\n\"Oh. I never knew. It hurt but not how I thought and then it didn't and I god, all over you Davo. I've never made a mess like that before and three times in one night. Oh god. Oh god. Help me up Jules. I'm gonna get all emotional.\"\n\nWith an awkward squelchy burpy noise her last contractions squeeze my limp dick out and a messy issue follows. She giggles and I'm almost ninety-nine percent certain it's Milly who opens the hood just enough to expose my lips and kiss me.\n\n\"Thank you, Davo. I'll treasure this.\" Then they're gone. Just like that. I feel a little used. Like a stunt cock or something. I should probably clean myself up, maybe take this damn thing off at least.\n\nTaking the hood off, I see a pile of clothes near the ute where Jules got undressed. I recognise her clothes. The other woman's clothes are gone. Only the well rumpled swag remains with its wet spot of evidence to remind me that something quite extraordinary had happened in my garage this evening. I dress myself and leave the swag out. It will require quite a bit of airing.\n\nOutside I hear the squeal of a loose fan belt. A dreadful shrieking that slowly quietens as the car carries my mystery lover away.\n\nI put the swag up on the tray of the old ute and shake my head at it. Jules just does not stop surprising me. I wonder how we'll weather this one out. Will she want to talk it through? Will we ignore it; act like it didn't happen?\n\n\"You...\" She grabs me from behind and rests her head between my shoulder blades. \"Shower. Now.\"\n\nI turn to face her and her smile tells me we'll be okay.\n\n\"And afterwards my lovely Davy, I'd like to reclaim you really quite vigorously, old boy.\"\n\nHer kiss confirms it.\n\n\"Go on now. Scrub that filly off you and find me in the bedroom. I know you've got more in you.\"\n\n..................................\n\n\"Mr and Mrs David Stimpson!\" the MC announced. My face hurts from smiling. My bride, my prize, clings to my arm as we enter the reception venue and greet our collective family and friends. Ultimately it was all a very lovely, very expensive anti-climax if I'm to be thoroughly honest.\n\nIt was everything Jules and I had planned and executed to perfection like a well-managed stage show but it felt a little empty.\n\n\"What a load pomp and arse-hattery.\" Jules says as we take our place at the bridal table. \"We should have done that at a bloody registry and spent more on the honeymoon, Davy.\"\n\n\"It's been worth every cent, love.\" I smile and bullshit her.\n\n\"Hardly dear, but thank you.\"\n\nI've studied the bridesmaids all day and decided that one, they are all simply gorgeous today; two, I have not one single fucking clue as to which one I rogered thoroughly and three, the picture on my phone of them all lifting their dresses and flashing their matching gold butt plugs will provide masturbatory encouragement for years to come.\n\nWe did talk about it through the week, Jules and I. She was most apologetic for the way in which it occurred, but offered an excuse of too many fizzy drinks and not enough thinking it through. Ideally, she said, I would have been given some warning and more say in matters.\n\n\"Maybe next time, I'll be a little more thoughtful, lovely. Please forgive me.\"\n\nSo... Maybe there'll be a next time? This thought teases me all through dinner. She did mention she had something special planned for our traditional consummatory shenanigans later this evening. It's all part of why I love her. Never a dull moment with our Julia.\n\nThe only real interruption to the evening was when a tow truck driver arrived and had a short conversation with Julia's father. Much later I found him at the bar and we chatted while we watched our wives and family dance and talk and celebrate the day.\n\n\"Good show, old son.\" He shook my hand, \"Good show indeed. She's never looked happier.\"\n\n\"Yeah, she scrubs up alright.\"\n\n\"Oh not Julia. She's been happy since the day she met you. I meant the old boiler. It's like she has a fresh lease on life this whole week. I don't know what's gotten into her maybe she just needed to see a little romance and celebration.\"\n\n\"Maybe. What was the towey for Don?\"\n\n\"Oh frightful business. Bloody rentals. No maintenance you see. They just wash them and lease them again. It started a terrible screeching some days ago and wouldn't let up. Can I get you another drink son? You look a little... pale and you have erm... duties to perform later. Wink wink, nudge nudge, know what I mean then?\"\n\n\"Better make it a double please Dad.\" I say with my face in my palms.\n\n \n"
    ],
    "authorname": "Rollinbones",
    "tags": [
        "anal",
        "cfnm",
        "hens night"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/butt-lovely-pt-01-around-the-world"
}