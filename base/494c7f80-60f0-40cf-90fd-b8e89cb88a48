{
    "title": "You're Not a Serial Rapist Ch. 06-2",
    "pages": [
        "The door was unlocked. The drapes open wide, letting in all of the sunlight. Kathy's bed was situated where as soon as you entered the room you could see her bed. What was on the bed took my breath away... again. Kathy was naked. Spread eagled. She had a look of desire. Of love.\n\n\"Well don't just stand there, with the door open. Your love is here... waiting for you... wanting you,\" as she moved her legs apart a few more inches opening her flower completely. Her petals glistening. The smile seductive.\n\nKathy watched as I quickly undressed, toying with her right nipple. My excitement evident as my briefs hit the floor, as I stood five feet from the bed. I watched as once again, her eyes feasted on my nakedness. I throbbed, as I feasted on her nakedness.\n\n\"I'll never get tired watching. Seeing it grow. Seeing it throb as you look at me... all of me,\" her legs opening more, if that was at all possible.\n\nHer nipples, hard with her arousal, called to me. I sucked in as much of her soft flesh and I could. My tongue flicking the nipple. She arched her back and her moan started with a low 'mmmm' in contentment. It was enough so that I growled a low sound of my own and sucked harder, lapping my tongue over her nipple, stroking my hand across to the other breast and caressing that one as well. Her cry rose a little more. My tongue became more aggressive as I caressed her other breast and pinched the sensitive nub. A louder cry.\n\nMy mouth traveled over to her other breast, as my hand moved down her smooth torso, through the wispy strands of soft pubic hair, to settle between her opened folds. A loud gasp filled the room as two fingers easily slipped through her wetness. The palm of my hand gently caressing her clit, as I 'finger fucked' her.\n\nKathy's sounds of pleasure filled the room. Her body thrashing. Her hips rising to exert the right amount of pressure between my hand and her clit, as her body approached its release point.\n\nShe came with a vengeance. If the hallways hadn't been empty, it would have been obvious what was transpiring in her room, as the low primal growl filled her room.\n\n\"In me. Now. Don't go slow. I need to have you fuck me.\"\n\nKathy let out a loud \"OOOHHH!\" as I quickly filled her. Each downward stroke, she let out a gasp, as if I was driving the air out of her lungs. Her nails raking across my back, if I didn't have scratches, I would have been surprised. I couldn't get enough of her, and she wanted... desired... everything I could give her.\n\n\"I'm going to cum, Kath.\"\n\n\"Yes... cum for me... I love it when you cum... I love feeling you cum in me.\"\n\nMy own howl of release echoed through the empty hallway, as I buried myself into her warm depths and pumped her full of warm thick sperm.\n\nSavoring in the afterglow of our passions.\n\n\"You know, as a freshman, Alex will have those 'Convocations' in the Arena every Thursday from 1:00 to 2:00. I'm not sure what our schedules are like for that time; but... what if?\" Kathy casually threw out.\n\nThe wheels were turning again. I grinned and kissed her cheek at the possibility.\n\nThe 'Convocations' were cultural things that freshmen were required to attend. There were no credits for it. You just had to show up and fill out an attendance card. Over the twelve week quarter, each freshman was required to attend eight.\n\nWe were brought back to reality as we heard commotion in the hallway. The freshmen were returning. We took a quick shower... together. Dressed and went outside. It was around 3:00 and hot.\n\n..................................\n\nAlex entered her room and closed the door. She stopped. Something was there. In the air. A musky sweet scent. She looked over at Kathy's bed. The bedspread was made but a bit rumpled. Then the light went on. She shook her head, 'Those two. I bet he was waiting in the lobby waiting for me to leave. I wonder how long ago they left. Couldn't have been that long,' as she sniffed the air again. 'They're so into each other. I can see why. They are made for each other. He's quite a guy. I'm sure this won't be the last time', she grinned.\n\n....................................\n\nThe three of us had planned on going downtown that night. To introduce Alex to the bar scene.\n\nThe girls were dressed to kill. Kathy wore a simple version of the sundress she knew I loved. Her smooth tanned shoulders and long trim legs on total display.\n\nAlex had gone for a tube top, which I recognized as being one of Kathy's. The girls were sharing clothes, which made sense, as they were close to the same size... both nice small mounds. Alex a bit bigger. The top, and her makeup, gave a look of innocence, which unknowingly would create a problem... an almost serious problem.\n\nWe picked one with a live band. After getting in, and finding a table for the three of us, I got us a round of drinks... two wine coolers and a beer. We toasted.\n\n\"To the start of a great year with new-found friends.\"\n\nThe three of us danced a number of fast songs. Then a slow one came up. We looked at each other.\n\n\"You guys go ahead. I'll be fine here.\"\n\nBy the time we got to the dance floor, I looked over and saw a guy had pulled a fourth chair over. A second full wine cooler sat next to Alex's half emptied glass. I nudged Kathy and pointed. She nodded. We both knew we would need to keep an eye on this. We settled in for a nice slow and close dance. My lips finding the side of her long and exposed neck. Kathy would momentarily close her eyes to savor the sensations; but, would return to check on her roommate.\n\nBy the time the dance ended, and we had returned to the table, Alex's first drink was gone and about a quarter of the second one was gone. OK. A little over one wine cooler in thirty minutes. Nothing to worry about. Something about the guy... couldn't put my finger on it, but an uneasy feeling crept over me.\n\nAlex made the introductions. I didn't commit his name to my memory. I didn't care. I just looked at him... trying to determine if he was of those guys out and 'on the hunt'. Kathy was doing the same thing. He was obviously at least 21. He looked like a frat guy. Every time he went to the bar, he would joke with some of his buddies. A bit bigger than me. Still...\n\nThe next fast song started and Kathy and I got up.\n\n\"Alex, want to join in,\" Kathy asked.\n\nAlex looked at 'what's his name' and shook her head. He gave us a slight smirk. Kathy's steely glare back burned a hole right between his eyes.\n\nIt had been a bit over a couple of hours. Alex and 'what's his name' never left the table. We both knew how much Alex loved to dance. Alex never had an empty glass. 'What's his names' glass never seemed to go down. Remember, this was a time before 'date rape' drugs. Alcohol was the trick, especially on an 'innocent' girl.\n\n\"We need to get her out of here. Discretely away from that creep,\" I said into Kathy's ear. She nodded.\n\n\"I'll take her to the ladies room for a bit. Try to keep him distracted. I'll see if there's a back way out of here. We'll meet you by your car. It's unlocked. Right?\" I nodded.\n\nI first watched Kathy get up and go over to talk to the bartender. I saw the bartender point her head toward the back. Kathy came back, gave me a subtle nod to the back. I nodded.\n\n\"Come on Alex. Let's make a trip to the ladies room.\"\n\nAlex looked up at Kathy with a dreamy partially 'out of it' look. I looked over at 'what's his name'... what an asshole.\n\nThey got up. Alex a bit wobbly, as Kathy guided Alex to the ladies room. 'what's his name' settled back into his chair. He probably figured that as long I was there, his prize would return.\n\n\"So, what's your role here?\"\n\n\"Excuse me?\"\n\n\"I mean... you've got two hot women.\"\n\n\"One's my girlfriend. And the other's my girlfriends' new roommate.\"\n\nOut of the corner of my eye I saw the head of blonde hair head for the back of the bar and disappear. I went up to get another beer. He watched to make sure I wasn't slipping out. I would give them five minutes. The car wasn't parked that far away; but, Kathy was toting a drunk body, and I wanted to make sure they were safe in the car before I made my move to leave.\n\nAs fortune would have it, 'what's his name' headed over to the bar. A place he could keep an eye on the ladies restroom. Fortunately he was too late. The band was taking a break and everybody was heading outside for some fresh air. I blended in, and left undetected.\n\nI found the girls in the backseat. Alex passed out.\n\n\"Sorry it took so long. I wanted to make sure you two were safe and that I could get out of the undetected. I didn't want anyone to follow me. Let's get her back.\"\n\nGetting Alex back was the easy part. Getting Alex from my car to thier room, undetected, was the difficult part. The good part was that she kept her lunch down. She was going to have one hell of a headache in the morning. Welcome to college.\n\nLaying her on her bed, \"I've got it from here. I'll get her undressed in a bit and cover her.\"\n\n\"Probably should put the trash can next to her bed... just not the trash can we use for our champagne,\" Kathy grinned back.\n\nShe kissed me at the door.\n\n\"Take care of her. She's going to feel like shit in the morning. Her first hangover. Call me in the morning,\" I said. \"Probably better than me calling and waking her.\"\n\n\"Good night... my love.\"\n\n...............................\n\n6:00. Alex stirred. Then groaned. Then made a beeline to the bathroom, knelt, and paid homage to the porcelain god like many of us have in those college days.\n\nAlex stumbled out of the bathroom. Her hair disheveled. Eyes squinting, even though the curtains were pulled as tight as possible. She flopped onto her bed and groaned. Kathy had undressed her down to her panties and slipped on a tee shirt, as she didn't wear a bra with the tube top.\n\n\"There's some water and aspirin next to your bed. Silly question; but, how do you feel?\"\n\n\"Like death would be welcomed. Never again.\"\n\n\"Your first hangover... Welcome to the club,\" she softly giggled. \"Drink some water. A lot of water. And take a couple of aspirin. See if you can go back to sleep. It'll take some time. By noon you should start to feel human, again. Then we'll have some lunch. I know that doesn't sound too good right now, but, it's what you'll need. Trust me.\"\n\n\"Thank you Kathy. I don't what I would do without you.\"\n\n'That much is certain,' thought Kathy.\n\n\"What happened? And then... who undressed me?\"\n\n\"Me. And only me. We'll talk about 'what happened' later. Get some sleep.\"\n\n\"Thanks\"\n\n.......................................\n\nKathy called around 11:00. She filled me in on how Alex was doing. That they were going to do lunch and find out what she remembered and fill in the blanks. Classes were going to start the next day, so we decided to get together later in the afternoon for a bit.\n\nBefore she hung up, the mischievous voice whispered, \"You know... last night... with Alex passed out, you could have had your way with me.\"\n\n\"Now you tell me.\"\n\n............................................\n\nKathy talked with her parents every week, just to see how things were going. They were curious what her roommate was like, and if it looked like they would get along. They were relieved when Kathy told them of their meeting and times together. She did leave out the whole bar thing. Then, they suggested about the three of us coming over for a Bar-B-Q the coming Saturday. Nothing fancy, just burgers, hot dogs and stuff. Kathy thought that was a great idea.\n\nOur classes started in full gear right away. We each had homework assignments right out of the gate. We decided our weekly routine would be heading over to the library around 6:30. Study until 10:30, or so, then head back to her room and hang out.\n\nSecond day of classes, Kathy and I were at the library studying and then back in her room. It was the first time I had seen Alex since the bar thing. I was met with a full body hug as soon as Kathy opened the door. Her soft braless mounds pressing against me as she buried her face into my shoulder. Kathy watched with a knowing smile.\n\n\"I'm kind of embarrassed; but, I want to thank you for everything. For watching out for me. For getting me back here safe.\"\n\n\"Alex, there's nothing to be embarrassed about. It happens, more often than you think. I hope your first real experience with the nectar from the gods didn't dampen any future partying.\"\n\n\"I don't think so. I do remember saying that morning, 'never again',\" she giggled.\n\n\"If all of us carried out that promise to ourselves on a 'morning after', the bars would be empty and the world would be a boring place.\"\n\n...............................\n\nSo, it would become our weekly routine. Classes during the day. Library time at night with some time in Kathy's room... sometimes just us... sometimes with Alex. Thursday afternoons: naked, in bed, deep inside of Kathy, leaving her scent in the room as we left. Alex never said anything; but, I'm sure she realized what was going on when she was at the Convocation. A thought occurred to me. She only needed eight attendances out of twelve weeks. What if one Thursday, she left, and returned ten minutes, or so, later?\n\nI relayed that thought to Kathy. Kathy thought about it. We were only a couple of weeks into the quarter. I hadn't spent the night there yet, just like Kathy hadn't spent the night at the trailer.\n\n\"So walking in. Catching us both naked. Your dick sticking straight out,\" Kathy had a grin as she ran through those possibilities, \"Option 1: We could run for cover. Option 2: We could just smile. Option 3: We could just continue as if she wasn't there. Or,\" the grin broadening, \"Option 4: Ask if she wanted to join in, or just watch.\"\n\nI just shook my head. She grinned at me.\n\n...................................\n\nThe picnic at her parents was fun. Good food. Some beer. Boons Farm for the girls. Alex had put the whole bar thing behind her and was loosening up after a couple. Just made sure she had food in her stomach and paced herself.\n\nWe got back to the dorm around 8:00, after hitting the liquor store for some additional refreshments. Getting the refreshments up to her room was getting to be a well-organized routine.\n\nKathy ducked into the bathroom and moments later returned with her bra in her hand.\n\n\"That feels better.\"\n\n\"I'll bet it does,\" Alex said as she headed for the bathroom, only to return moments later, with her bra in hand.\n\nIt was comforting that Alex had become comfortable with me around. I'm sure Kathy had told her to be as relaxed as she felt comfortable with.\n\nWe sat and chatted. The girls taking sips of their wines.\n\n\"It was fun today,\" Alex piped up, \"I mean I grew up in a large city. All of my family was nearby, so I never really got to spend time in a small town. You both came from small towns. I mean... what's it like? What did you do to entertain yourselves? I'm sure it was easier to find alone places for make-out, and whatever, sessions, than I had in the city.\"\n\nKathy and I both looked at each other, and grinned and nodded. Alex grinned back.\n\n\"Well, before my dad bought a 40 acre farm the start of my senior year in high school. Before that, we lived just outside the city limits on a 3 acre lot. In junior high I had a bunch of guy friends and we would hang out. Ride our bikes all over the town. Our town had just built a swimming pool, so we hung out there. I was in boy scouts, so there were occasional overnight camping trips to a local woods with a steam through it. It wasn't deep, or wide enough to swim in, but it was fun. There were neighbor kids that we would play baseball and stuff. Winter time, there were ice skating rinks that the city flooded. We played hockey. There was a steep street in town that the city didn't sand so it became a sledding hill. My dad told me it's been like that since he was a kid. So I don't remember being bored.\"\n\n\"I can say the same thing. I had a number of girlfriends and we would hang out. Do girl stuff. I had neighborhood friends and we would play together.\n\n\"There are a lot of abandoned strip mines around. They're all sizes. The smaller ones were usually filled with fresh water from underground springs. Having been filtered from the coal, the water was really fresh. I liked it a whole lot better than the chorine water in a pool. In junior high we would ride our bikes to one that was close by. It became a popular place for guys and gals to hang out. The one we went to had one side that was like a sandy beach, and kind of a gentle slope. Then all of a sudden it would drop off. It was pretty deep. A lot of them had high walls, and kids would climb and jump off.\"\n\n\"Really? How high up?\" Alex asked.\n\n\"It varied. Some around 10 feet. Some up to 50 feet. You just had to make sure you pushed out when you jumped to make sure you cleared everything. I don't remember anyone ever getting seriously injured, or hurt. It was just fun. Later, in school when kids had access to cars, they would go to some further away... away from the younger crowd. Those got interesting.\"\n\nAlex sat there with a puzzled look.\n\nTaking another sip, Kathy looked at me, grinned, and said, \"Skinny Dipping.\"\n\nAlex still had a puzzled look.\n\n\"Swimming naked.\"\n\n\"Really? Guys and girls? Everybody naked?\"\n\n\"Yep.\"\n\n\"I mean was there other stuff going on?\"\n\n\"I don't know. I'd heard stories and rumors. It wasn't a scene I was into. There were rumors of beer parties and 'other' stuff. My uncle has an abandoned mine on his property,\" turning to me, \"You met him when you were down here over the summer.\"\n\n\"OK. I remember him. Nice guy.\"\n\n\"Anyway, it's been there for a long time. It's a nice size. Kind of what I described. From junior high and up, three of my girlfriends would hang out there most of the summer. It was close enough that we could ride our bikes... probably a twenty minute ride. We'd hang out... sunbathe... swim,\" grinning, \"Skinny dip.\"\n\n\"Really... just your girlfriends?\"\n\n\"Yeah. That was one of the rules my uncle laid out for us to use it... no guys... no alcohol... no guys. And, no. There wasn't any girl-on-girl stuff going on besides rubbing sun lotion on a bare back,\" turning to me, grinning, \"Hence my lack of any tan lines.\n\n\"It was the same group of my friends. We kept the group small to prevent any rumors. You can imagine the high school rumors floating around about four girls, and only girls, being alone together, and naked. Laying around in the sun and rubbing sun tan lotion on each other.\"\n\nI was in awe as I listened, and pictured four naked glistening tan bodies.\n\nAlex was sitting there in awe too, \"What does it feel like to lay in the sun and swim naked?\"\n\nKathy got a bit of a dreamy look as she thought about the best was to describe it. The wine was loosening Kathy up, as she went on.\n\n\"Laying out in the sun is exquisite. The feeling of the warm sun on your boobs and nipples. My nipples are really sensitive,\" she looks over at me and grins. I do a quick grin. Alex catches the 'non-verbal' exchange.\n\n\"So, that feels really nice. Swimming... It's a feeling of complete freedom. Taking slow swim strokes unencumbered by a swim suit. I've got a small bikini... and I mean small,\" she grinned at me, \"and even with that, the feeling of freedom isn't the same. There's the water flowing over all of your body. Like I said, I've got really sensitive nipples,\" again a look over to me with a grin that Alex caught again, \"and the water flowing over them is exquisite... stimulating... tantalizing... erotic. You should try it sometime.\"\n\nI could see Alex fidgeting. Her nipples were now visible. She was aroused. I looked over at Kathy. She was aroused too. I was aroused. I wanted to grab her right then, and there, and ravage each of those engorged points and surrounding soft flesh.",
        "\"I'd love to. Sounds like fun,\" sighing, \"Just don't know how I would ever get to though,\" she said kind of dejectedly.\n\nSuddenly, I saw a twinkle of mischief in Kathy's eyes. The wheels were turning. I wasn't even going to try to think what was stirring in that brain of hers.\n\n\"Let me see what I can do.\"\n\n........................................\n\nKathy walked me out and over to my car. Standing against it with Kathy in my arms, our lips met tenderly.\n\n\"What did you mean when you said you'd see what you could do?\" I asked.\n\n\"Just a momentary thought. I'd been thinking of ways to get Alex comfortable with you staying over some nights. I don't mean us doing it, with her in her bed. Just comfortable; maybe seeing you in your underwear. You seeing her in her night shirt. Stuff like that. I'd been thinking of the three of us hanging out at the campus lake. Then the thought of hanging out at my uncle's popped into my brain. We could grill some hot dogs and stuff. I might even show you my little tiny bikini,\" she grinned as our lips met again, \"I need to talk to my mom to make sure my uncle is OK with you being there. Remember the rules?\"\n\n\"And rule number two... alcohol?\"\n\n\"Yeah. I'll see about that one too. I'm sure it'll be fine. My mom really likes you, and really knows how much we are into each other,\" she grinned as our lips made love for a bit.\n\n.......................................\n\nKathy and I decided to take Alex to her first college football game Saturday afternoon. It was fun. The school was not known for their football program. Basketball was king. Even though you weren't supposed to have alcohol on state run university campuses, a lot of the girls were carrying large purses that appeared to have some weight to them. At that time, nobody did inspections of purses. They were perfect for pints of whatever: rum, brandy... well you get the picture. The students sat on bleachers that were open at the bottom, just like high school football bleachers, only larger, that held probably 1,500, and stretched from 20 yard line to 20 yard line. Starting around the fourth quarter, you could hear empty liquor pint bottles cascading down the bleacher supports. I hadn't thought to bring anything. We still had fun. We lost.\n\nMy roommates and I were planning on having a 'small' party that evening. Boomer had a lot of 'couple' friends along with guys and gals. There would be a good mixture of about fifteen or so.\n\nKathy still hadn't spent the night at the trailer. I was hoping to break in my bed with her that night.\n\nKathy and I had convinced Alex to come. We promised we would keep an eye on her and when she wanted to leave we would bring her back... no problem.\n\nI filled in Boomer and Ken that Alex was also coming, and that most likely, Kathy would be spending the night. They just grinned at me. Ken let us know that Jess wanted to come too, just needed a ride to pick her up. I told him, if he wanted to, he could take my car and go pick up Jess. He said he couldn't do that, something about his license and insurance. Oh well, this could be interesting. I was pretty sure the real reason that Jess wanted to be there was her insecurity over Kathy being there.\n\nThe girls looked spectacular, as always. This time, each wore a strapless tube top that ended about six inches above the top of their shorts. Kathy's was a cream color and Alex a light blue. Two cute navels on display. Along with two sets of firm little mounds. Kathy's shoulders and midsection glowed with a golden tan. Each wore loose mid-thigh shorts that showed off their long slender legs. I gave them each an appreciative hug.\n\nI could see Boomer conflicted. On the one hand he wanted to socialize with his guy and single girl friends. On the other hand, he wanted to get to know Alex. By the end of the night, they were comfortable with each other. I could see the four of us hanging out together.\n\nThe guys from our earlier dorm years were surprised that Ken was with a girl, as he never socialized before. They were happy for him, but puzzled by Jess. Besides Alex, she was the only other freshman. She was also out-shined by both Kathy, Alex, and a few of Boomer's girl friends. Her insecurities were coming to the surface.\n\nKathy was a hit with my ex-dorm friends. They had seen her that day at the beach, and a brief glimpse before we would duck into my room on a couple of nights that last week of the school year. Her personality, and the sexy looks had them in awe... The 'Kath affect'. I was in heaven, as my left hand rarely left the bare section at the small of her back.\n\nWe were standing in a group: Ken, Jess, Alex, Kathy, and myself just talking and sipping our drinks Kathy on one side and Jess on the other. For some reason, Jess was standing a bit close to me... to close in Kathy's mind.\n\nAt one point Jess turned to look at something and her right breast grazed my arm. Then when she turned back to the group, grazed it again, only slower, lingering a bit. Alex noticed. Kathy noticed as she pulled me in closer, and shot Jess daggers. The second time it happened, the claws were coming out, as Kathy gave Jess one of those stabbing glares, 'This is your last warning... bitch'.\n\nI knew at some point, I was going to be taking Alex back, so I was careful to go easy on the beer. Plus, Kathy and I were going to initiate my bed.\n\nAround 11:00 Alex asked if I would take her back. I wasn't sure what the plans of Ken and Jess were. Was she going to spend the night? I made it a point of making it known that I was taking Alex back to the dorm, just in case Jess wanted to go back too. No response.\n\nAround 11:30, it was like a switch was pulled. Everybody left. I think the couples had their plans of a night of hot sex. The five of us, well mostly just the four of us, quickly did a rough clean up. Nothing too intense, just bag up the empty beer cans and set outside. At least we wouldn't be waking up to the smell of stale beer.\n\nThen, I took Kathy's hand and led her into my bedroom, as Boomer, Ken, and Jess watched. A few minutes later, I heard Ken's door slide shut, and muffled voices.\n\nBehind the thin closed door the desk lamp was lowered, casting a soft glow across the room. The radio in the other room somewhat drowning out the sounds emanating from my room. Our lips met. I was going to make love to her. In my bed, for the first time. Kathy was of a different mine set. She had a score to settle.\n\nI cupped her face as we each stood and looked in the other's eyes. Kathy had a soft gentle smile knowing what was coming. I pulled off the tube top, exposing her soft mounds and exquisitely hard nipples. She pulled my tee shirt off and tossed onto my desk. Kathy looked into my eyes, grinned, and locked her hands behind her head. My lips encased her hardened nubs before engulfing as much of the soft flesh into my mouth as I could get. My hand gently massaging the remaining soft flesh. She cooed and purred. With a mischievous look, Kathy fumbled with my shorts before they too were at the floor. I guided her to the bed. She raised her hips as I slowly removed her shorts and light blue bikini panties together. I brought them to my nose and smiled. She grinned.\n\n\"Can I trade this fresh one for the other two? Two for one. Such a good deal.\"\n\n\"Yes. Now come down here and get familiar with the source,\" as she lay there and opened her legs with a sultry gaze.\n\nI headed directly between those splayed legs. It was like, 'Do not stop at her soft lips. Do not stop at her enticing breasts. Do not stop at her engorged nipples. Go directly to that inviting, and open pussy'.\n\nMy tongue probed the oozing opening, then parted her velvety folds as it traveled to the peak of her pleasure. A loud gasp filled the room as I bathed her pearl. Grasping handfuls of my hair, she held me tight against the center of her universe and let out a loud gasp followed by a not so subtle, \"Yes... OH Yes... Right there... mmmmm.\"\n\nSoon, I heard from Ken's room. Jess, \"Will you guys knock it off?\"\n\nI stopped. Kathy giggled. I swear I heard from the next room, 'Do they do that all the time?'\n\nI looked up at Kathy. She looked back at me and grinned, \"You're not done... yet.\"\n\nI grinned back and my tongue continued. The sounds of her passion were louder than I've ever heard. It finally dawned on me... she was rubbing it in... payback for those earlier 'innocent' brushes of Jess's breasts against me, and was having fun in the process. 'Love Making' in my bed would be on a different night. Tonight was 'Fun Making' and payback.\n\nHer orgasm racked her body as she let the world know the depth of her climax.\n\n\"Come up and kiss me. Let me taste myself on you. On those lips,\" she grinned. The words penetrating the thin walls, making sure Jess knew where her lover's lips and tongue had been moments before.\n\n\"Come on... get inside of me,\" again, the words penetrating the wall.\n\n\"Come on you guys,\" we heard again heard Jess's exasperation from the other room.\n\nKathy giggled and whispered, \"Maybe later, OK?\"\n\nShe had proven her point. I turned off the light and we settled in next to each other savoring the bareness and closeness; but not before Kathy's coup de grace, \"I love you Bill. My love.\"\n\nI couldn't resist, \"I love you Kathy. My love.\"\n\nA few minutes later, I heard Ken calling my name from the living room. Kathy heard it too.\n\n\"Be right back,\" as I got up and put on my shorts and a tee shirt. I took a look back to see a grinning girlfriend.\n\n\"What's up?\"\n\n\"Would you mind taking Jess back?\"\n\n\"Now?\"\n\n\"Yeah. Don't worry, I'll go with,\" he had a dejected and frustrated look. I knew he couldn't use my car. She could have slept on the couch. Oh Well. I figured it was the easiest way to get her out of there so Kathy wouldn't have to deal with her drama in the morning.\n\n\"OK. Give me a couple of minutes. I'll meet you by the car.\"\n\n\"Thanks,\" as an appreciative smile crossed his face.\n\n\"What's up,\" asked Kathy as I changed my shirt.\n\n\"Ken wants me to take Jess back. He's going with. Stay here. It'll be fine,\" as I leaned over to plant a kiss on those soft lips.\n\n\"If I happen to fall asleep, you know how to wake me.\"\n\n\"I'll do more than just wake you.\"\n\n\"Promise?\"\n\n\"Promise,\" kiss.\n\nKen must have said something to Jess, as she was quiet the whole ride back. Once at her dorm, Ken got out to walk her to the door. She just turned and walked away.\n\nGetting into the car, Ken says, \"Well, I guess that takes care of that. Sorry for all the drama and that she put a damper on you guy's activities. Now I know why I never wanted to get involved with a girl while I'm here. I was hoping she would at least stay the night. We'd never done that before. Oh well.\"\n\n\"I should be the one apologizing. I mean, Kathy was pretty loud and obvious. I've never seen her like that.\"\n\n\"I think she was proving a point to Jess. Like laying a claim, that you're hers. I mean, I saw Jess rub up against you earlier. Openly flirting. She didn't care who was there. Right there in front of me and your girlfriend, that everybody can see is so in love with you. That was pretty bad. I think Jess was jealous of you two. The depth of your feelings for each other. Plus, I know that Jess has been insecure around Kathy since the moment they were introduced. I really thought Kathy was going to knock her block off... and if looks could kill... The looks that Kathy gave Jess. Although, I really liked the way that she put it back at her,\" I was driving, so I couldn't see the smile.\n\nI laughed, \"Yeah. I just made a mental note not to piss Kathy off. Really though, we'll be more discrete in the future.\"\n\n\"I know. And, thanks again.\"\n\nI found Kathy on her back with the sheet just below her navel. The desk lamp was on casting her in a soft subdued light. I couldn't tell if she was asleep or not. Her nipples were inviting. If she was asleep, I knew how I was going to wake her. If she wasn't asleep, it was still going to be fun. It was only 1:00. Tomorrow/today is Sunday. Plenty of time.\n\nNaked. I leaned down. The tip of my tongue lightly brushing against the erect pink nipple. Kathy groaned. She was not sleeping. My mouth engulfed her tender soft flesh as the base of my tongue bathed that beautiful gumdrop. Her hands found the back of my neck. She purred quietly.\n\n\"mmmm. I like that.\"\n\n\"You weren't sleeping.\"\n\n\"No. I thought I would pretend and see what you would do.\"\n\n\"And?\"\n\n\"Here. The other one... please,\" I could see the sweet smile, as I kissed her lips.\n\nI turned my attention to the other untouched breast, and gave it the same treatment. I was rewarded with satisfying purrs of contentment.\n\n\"I think you've got me wet enough for you. Come on, let's initiate your bed... our bed.\"\n\nWe made love quietly and contently as I emptied my balls into her loving cavern with her legs wrapped around me. Her heels locked.\n\n\"I love you, Kathy. My love.\"\n\n\"I love you, Bill. My love.\"\n\nWe fell asleep with Kathy's head resting comfortably on my chest. Knowing that this was just the start.\n\n...........................................\n\nKathy had reconnected with Valerie the following Tuesday. Actually, Valerie had gotten Kathy's number and called her. They made plans to meet at the student center for coffee and share all the details of their summer and our life... well maybe not all of the details. Valerie was ecstatic that we had survived the summer, and were still together -- happy. Valerie could tell it was way more than just 'happy'. She inwardly smiled at what she had inadvertently brought together.\n\nThey had made plans for the three of us to get together the coming Saturday night at Valerie's' apartment to just hang out. Maybe play some board games or cards.\n\nValerie lived with two other girls. I knew them both: Marsha and Terri. Marsha still wore too much makeup and smoked. Terri looked good. It was good to see both of them again. Neither had real boyfriends, but would just hang out with guy friends. Marsha still saw Randy occasionally.\n\n\"So, can I give him a big kiss when I see him? I mean a big, hot, 'miss you -- glad to see you' kiss?\"\n\n\"Val, you get a pass on whatever you want to do to him... Well, maybe not everything,\" that brought a round of laughter.\n\nKathy told Valerie we would bring her some red wine for wine coolers. It sounded like fun. They hugged as they parted.\n\n.......................................\n\nKathy looked as stunning as I had ever seen her, as I met her in the dorm lobby. The shorts were shorter than I had seen. Ending about a third of the way down her thighs. Those luscious tanned legs on full display. The loose tank top and spaghetti straps showing off her smooth tanned upper chest. The top was tight enough that each of her half apple orbs were beautifully showcased. She smiled as she watched me check her out as she did a three sixty. I then noticed how the back of her shorts hugged her tight little cheeks.\n\nValerie opened the door, stood for a moment, we both smiled, as my eyes quickly took in the vision of my second best friend. Valerie looked as beautiful as the last time I saw her. Tonight she wore mid-thigh loose shorts, with a tight pullover top. The bottom loose against the top of her shorts. The shoulder to shoulder scooped neckline grazing the top of each of the underlying cups. Her shoulders a nice golden tan, with soft tan lines.\n\nShe squealed as she leaped into my arms planting a kiss that curled my toes. It was a good thing that Kathy was carrying the bag of refreshments. I mean her tongue was in my mouth, probing. Arms locked behind my neck pulling us together. The top being pulled up, exposing her flat tummy and the small of her back. Her little firm mounds plastered against my chest. Her other mound pressing against mine. My hands finding that familiar patch of bare skin at the base of her back.\n\nKathy watched and smiled, her two best friends: the 'match maker' and her love, reconnecting. Valerie pulled back, smiling, as she gave me one more parting peck on the cheek.\n\n\"Gosh, it's sooo good to see you,\" her face beaming. Stepping back, I watched as she checked me out. \"You look like you've lost weight, and put on a bit of muscle.\"\n\nI don't know if she was just messing with me, or not. It wouldn't have surprised me.\n\n\"Must have been the work at the dairy this summer. Unloading milk crates from semis and stuff. But, thanks. You look really good too,\" she beamed as she knew that I meant it.\n\nGetting our first round of drinks set up I toasted, \"To friends.\" Turning to Kathy, \"To my best friend, and the love of my life.\" Turning to Valerie, \"To my 'always' friend...Thank you.\" The eyes of both girls welling up.\n\nThe living area of the apartment was a bit bigger than what we had at the trailer. There were two couches and a two stuffed chairs with a small coffee table and two end-tables. Valerie's bedroom was about twice as large as mine, which wouldn't have taken much.\n\nKathy and I sat on the couch as Valerie brought the chair over and sat in front of us so we could all see each other. Valerie and I talked about our summer. I'm sure Kathy had heard it all at their meeting, but was content to watch Valerie and me talk back and forth.\n\nValerie still didn't have a boyfriend, and still didn't want one. She spent the summer with her hometown girlfriends. Yeah, she did have a few dates; but they were just for fun. I was 100% sure that she was still a virgin, saving it for some special guy. Some lucky special guy.\n\nI asked about her fall classes. She was going to have to take the required chemistry class this quarter and the required physics class next quarter. The same two classes I helped Terri with last year. I knew she would need help, and told her that Kathy and I always met, and studied, in the library in the evening. We also exchanged schedules, as perhaps open time between classes during the day would also be a possibility. We exchanged phone numbers.\n\nShe also looked at me and gave a slight grin, \"Next quarter, I'm taking a follow up class to that art class sketching class I took last year.\"\n\nI didn't know what she was implying. I also didn't know if she had told Kathy about how I had 'helped' her out on her art project last year. Little did I realize.\n\nI thought I would have some fun, as I got round three of our drinks set up.\n\n\"It looks like you spent some time at a pool, or lake. The light tan lines of your bikini,\" I said to Valerie with a straight face. I was headed for the fact that Kathy had no tan lines. Kathy didn't pick up on my innocent comment... yet.\n\n\"A little bit of both, and the back yard of one of my girlfriends. I kind of kept my straps up at the pool and lake. When I was at my girlfriend's house we kind of let them down and undid the back of our tops when we laid on our fronts.\"\n\n\"How many of you were there, in the back yard?\"\n\nKathy was now chewing her bottom lip. She was now starting to put two and two together of where I was going. I had to be careful, the last thing I wanted to do was embarrass her in front of our friend.\n\n\"Only three of us,\" Valerie could see where my brain was going. She grinned, \"No. We didn't get topless. Actually, nobody thought of it. Still, I don't think I could have done that. Laying out in the back yard with my boobs exposed.\"\n\n\"Was there a fence around the yard so you couldn't be seen?\"\n\n\"Yeah. Still, I don't think I could do that. What if somebody came home, even though we knew we were alone?\"\n\nA few moments later, Valerie looked at Kathy, \"Kathy. Stand up. Turn around.\"\n\nStanding and turning.\n\n\"You don't have any tan lines on your back or your shoulders.\"",
        "As nonchalantly as possible Kathy says, \"Yeah. I tan so that I don't have tan lines there. That way I can wear these kinds of tops, which Bill really likes,\" as she gave me a coy satisfying smile.\n\nI wasn't done, \"So, if you had someplace to tan topless, you might be inclined?\"\n\nValerie was becoming aware I was messing with her, so she played along.\n\nTaking a sip of her drink, she gave a mischievous grin, \"Maybe. What about you Kath? If you had someplace to tan topless where nobody could see you, would you?\"\n\nAs if deep in thought, like she had never thought of the possibility, she finally said, \"Yeah. Probably,\" and then to have her own fun, with me. She turned and grinned at me before continuing, \"Just think of it. The warm sun on your boobs. Warming your sensitive nipples. The gentle wind across your bare skin. It sounds like fun.\"\n\n\"I guess it does. I've just never had a chance to experience it like that. I mean, I'm kind of a city girl. I don't even know where, at home, I could do that. I mean some of the girls at the dorm last year, would go up to the roof and lay out topless. I knew that there was a rule against it, in case one of the maintenance guys had to go up there. I was just never brave enough to do that.\"\n\nI could sense the wheels turning in Kathy's brain. I waited.\n\nTaking another sip of her drink, Kathy looked at Valerie, \"I know of a place.\"\n\nValerie's eyes went wide, \"Really? Where?\"\n\nKathy explained the abandoned strip mine pond that her uncle has. How she and some of her high school girlfriends and gone out there to have some privacy and tan. She left out the complete nude tanning and skinny dipping. I think that would have overloaded Valerie's brain.\n\nWas Kathy going to suggest that the three of us go to her uncles? And that they would layout out topless?\n\nMy dick stirred as images of these two tanning topless ran through my fertile brain. I shifted a bit. Kathy knew what I was thinking and grinned at my discomfort, and, that I had brought the whole thing upon myself.\n\n\"I was just thinking. WE could all go out there one Saturday afternoon. Take some hot dogs, wine, beer (looking at me), and just relax. If you want to go topless... fine. If not, then that's OK too. Just thought it might be fun. Something new for you to experience.\"\n\nValerie looked first at me and then back at Kathy before Kathy added with a grin, \"I mean, from what you've told me, it's not like he's never seen your boobs before.\"\n\nValerie blushed, looked down, and softly said, \"Yeah. That's true.\"\n\nKathy knew she went too far with her best friend. She got up, went to Valerie, and pulled her to her feet.\n\n\"I'm so sorry, Val. So very sorry. I didn't mean to embarrass you. Look, we're all friends here. Good friends. Nothing can take that away. You knew him before I did. You guys had fun. You were careful not to get too involved and stay just friends... good friends, and still have fun. I don't think I could have done that with any guy. I mean, the fact that Bill and I are where we are today... right now... is first because of you. Something I can never ever repay you for. Second, because we discovered, as you have said many times, that 'we were made for each other'. I love you Valerie.\"\n\nTears were now down each of their cheeks as they hugged. I felt myself choking back a bit at the display of their friendship, and Kathy's words.\n\n\"I love you, Kathy. My friend.\"\n\nTurning to me, and wiping her eyes, Kathy grins, \"Sorry, Bill; but you've got to put up with two emotional girls here.\"\n\n\"I wouldn't have it any other way. My two friends and lover.\"\n\nRearranging themselves back to one on either side of me, Valerie says, \"OK. I'm ready. Let's do it.\"\n\nI looked at her with a big grin, \"Do IT? Really? Right Now?\"\n\nThat broke any remaining tension as they both laughed and Valerie gave me a firm sock to my arm with her hand, as she laughed.\n\n\"You wish. Guys. You're really all just a bunch of little kids at heart, aren't you? That's all you think of. No silly. Sunbath topless.\"\n\nKathy was laughing at the exchange as we settled in for some cards, and more refreshments.\n\n......................................\n\nThey got together during the week and planned on what to bring. Valerie made it plain that she wanted to share in the costs of the refreshments and food. Kathy talked to her mom about us using her uncle's pond. Mainly to get it out there that I would be there with the two of them and there would be alcohol. Kathy's mom said 'not to worry about it. If something ever came up, she would deal with it'. In Kathy's mind, this was going to be a practice run for when she, Alex, and I would be at the pond. Perhaps not the whole topless thing, but a chance for Alex to get comfortable with me in a less state of dress. Kathy wanted Alex to be comfortable when I would stay over in her room. Just sleeping over, in my shorts. Nothing else. At least not for a while.\n\n.........................................\n\nIt was a beautiful day for the end of September: clear blue sky, mid 80's, with medium humidity. The three of us entered the lane to the pond just after noon. We had a filled cooler: Ice, hot dogs, buns, a can of beans, chips, 3 bottles of Boones Farms, and of course a six pack. I borrowed plates and utensils from the trailer.\n\nIt was a bit bigger than I expected. Looking across the water the far shore was perhaps seventy five yards the width around fifty yards surrounded by tall trees. The right side had a bit of a cliff that was about fifteen feet high. The wall, a mixture of coal and sandstone. We stood on a sandy section that was about ten feet deep and twenty feet wide. The sand had a very fine texture. The water was a deep blue -- clear and fresh, fed by an underground spring that was filtered by the coal. The far trees reflecting off the still water. The leaves hadn't started to turn yet. I was imagining the view in a few weeks. Off to the right was a fire pit with a nice pile of firewood was nearby. The nearby picnic table caught, and held my eye.\n\nA vision of a naked Kathy, spread-eagled on the picnic table with my tongue making love to her opened flower entered my mind. I smiled to myself. Kathy caught the smile and then what I was looking at. Once again, reading my mind, she leaned in and kissed my cheek with a mischievous grin. Perhaps in her vision, I was naked, spread-eagled, and she was making love to her favorite part of me. We both knew we would return, where each of our visions would come to fruition, and more.\n\n\"It's so beautiful,\" Valerie breaking us out of our shared visions, \"So quiet. So private.\"\n\nThe thought of going topless was becoming more comfortable.\n\nWe got set up. My shirt was off, and settled back to watch as the girls casually undressed. Each unaware of the erotic scene they were providing as each bit of outer clothing was casually opened and then discarded.\n\nI think Kathy became aware of my intense gaze about halfway into her unveiling. Having just removed her tee shirt, she gave me a coy grin, slowly opened her shorts, turned away, and then slowly lowered her shorts. Her firm bottom coming into view followed by those smooth thighs, and then the toned calves. She bent at the waist to remove the lowered shorts and wiggled her bottom. Peeking back at me she gave me that \"Kathy\" smile. I just grinned back, as she stood, and faced me as I took in what was adorning her lithe and tanned body.\n\nThis was a new one. Smaller. Much smaller.\n\nA red string bikini with ties at her tanned hips, around her neck, and back. The top strings connected two little red triangles stretched tight over her high, petite breasts, leaving a lot of smooth chest exposed. From the side, she looked naked except for the string that kept her bottom on and the string that crossed her ribs. Her nipples were visible as twin peaks under the thin fiber. Smooth butt cheeks peeking out from the smooth fabric. Her legs going on and on. The front small triangle, a fraction of an inch away from that luscious honey blonde forest.\n\nShe looked good displaying acres of skin. It was the closest thing to being naked as she could have been.\n\nToday was going to be fun. I had no expectations of what the activities for the day would be, just that we all would have fun, as friends.\n\nI looked over as Valerie stood in her modest bikini showing a lot of her luscious smooth skin. While I had seen Valerie in just panties in both my room and hers, being outside, her smooth chest and flat midsection glowed with a light golden tan. The top swells of her little breasts peaking over the top. I watched as she turned, bent over, and unknowingly presented her firm little butt cheeks to my eyes. Kathy watched and grinned.\n\nRefreshments were brought out. Comments were made that this was the earliest we had started. We needed to pace ourselves. We had all afternoon, and part of the evening until the mosquitos decided to invade.\n\nThey started out with each of them rubbing tanning lotion on their fronts. Kathy couldn't resist putting on a private, and discrete, show. Her shoulder straps down, I watched as she would apply the lotion to her shoulders, arms, and chest. Then watched as her hand slipped into each cup as she squeezed her own little mounds... looking straight into my eyes, grinning. Then watched as she applied to lotion to her stomach and across the loose top of the bottom. Then in one quick motion, her hand disappeared as I saw the movement of her fingers, through the taught material, flow through the underlying fur. The teasing grin never leaving her face. Valerie was busy applying her own lotion and did not catch Kathy's teasing. I grinned and shook my head, and thought, 'the day could get interesting', as the alcohol took effect.\n\nHalf an hour later, \"Hey, I need to cool off. Let's go for a swim,\" Kathy said.\n\nHalf way to the water, I leaned over to Kathy and whispered, \"I'll bet this is the first time you've gone swimming here wearing something. Although what you've got on is almost like wearing nothing.\n\nHer smile back, she whispered, \"You're right. And maybe, this will be the one, and only time. And I'm glad you like it. I bought it just for you,\" again, the mischievous grin as she kissed my cheek.\n\n\"Have I told you recently that you have a sexy body?\"\n\n\"Not in the last thirty seconds,\" as I got a playful grin followed by a kiss to my cheek.\n\n\"Kath... you have an incredibly sexy body.\"\n\nAnother grin and light kiss.\n\nAs we entered the water, Kathy explained that there was a steady downgrade for the first ten feet, or so, to where it was waist deep. Then it got steeper. Another five feet and you were shoulder deep, and after that it dropped off. The middle of the pond was around fifty feet deep. The water was cool and refreshing. You could feel the top 6 inches, or so, was warmer than below, being warmed by the sum. We played about.\n\nGetting another round of refreshments, I found the girls on their fronts with the tops undone. Two smooth bare backs were presented to me. Kathy's completely tanned. Valerie's light tan lines. I was in awe. I knew what my next duty would be.\n\nI decided to start with Valerie. Warming the lotion in my hands, I started on her shoulders. My hands gently gliding over her smooth skin. It had been a while since my hands had really touched her bare skin, not counting the brief moment at her apartment. We both relished the contact, as memories of the previous year flooded each of our brains. My hands moving up her sides. My fingertips caressing some exposed side boobage. Her head was turned, but I could see the upturned smile as my hands continued to glide over her back. I looked over at Kathy, she had a satisfying grin, as she watched me sensually caress the back of our friend. I would have done the backs of Valerie's thighs and calves, but she had taken care of that after returning from the water. Darn it.\n\nTurning to Kathy. I again relished the vision of her supple smooth back. The little vertebra down her spine. She had pulled the bottoms down a bit exposing more skin, with just a hint of the top of her little 'butt-crack' showing.. Even after all the times of taking in her complete bareness, I had to, again, savor the smooth landscape that lay before me.\n\nI started on her shoulders, down her back. My hand furthest away from Valerie's view slipped into the bottom to clutch a smooth butt cheek. Kathy let out a soft gasp. My hands went up her sides. Again the hand that was out of Valerie's sight slipped into the loose cup and caressed the soft mound of pliable flesh. Kathy turned a bit to give me complete access as I rolled the hardened pebble between my fingers. This time Kathy let out a noticeable \"hmmmm\".\n\nThat got Valerie's attention, \"You guys at it again?\"\n\nKathy blushed as I sat up, \"It's his fault.\"\n\n\"Yeah. But I didn't see you resist. Even when he reached in and squeezed your butt cheek. And now your boob?\"\n\n\"You want him to come over and squeeze your boob?\" the mischievous and taunting grin was there.\n\nI could see the wheels turning in Valerie's head. What if she said 'yes'? Then what? Yeah, I had massaged her breasts. Kissed and suckled her nipples to orgasm; but, and it was a big 'but', all of that had happened before the love of my life came into my life.\n\n\"I don't think that's a good idea,\" Valerie said softly, but the thought 'it did sound like fun' crossed her mind as she remembered my mouth and tongue on her nipples the previous year. I did notice a small smile as her eyes met mine, as we shared the same thoughts.\n\nThey were laying side-by-side. Kathy raised up a bit, leaned over, and kissed Valerie's cheek, \"I'm sorry if I embarrassed you.\"\n\n\"It's fine. But if you guys want to do a quickie, I can go for a walk.\"\n\nThat broke the tension, as they both laughed, and settled back into their tanning positions.\n\nThen Kathy got another playful grin, \"Bill lay down. Let me put some lotion on your back.\"\n\nShe was going to do this topless. I lay down facing Valerie. Our eyes locked, as friends. She let out a genuine smile, and blew me a kiss. Kathy sat on my right side, watching the exchange.\n\n\"Val, come up here and help.\"\n\nValerie looked at me, grinned, and got up so quickly that I only got a glimpse of her little white mounds and pink nipples before they disappeared.\n\nI was now wishing I had eyes in the back of my head. My two girlfriends. Topless. Sitting on each side of me. Four firm bare breasts exposed to the open world. Rubbing sun tanning lotion all over my back.\n\n\"See. It's not so bad. Your boobs out. Exposed to the sun. Feels nice. Doesn't it?\"\n\nIt Valerie took a second to realize that Kathy had no upper body tan lines. Her small golden tanned half apple sized mounds sitting right there. While they were good friends. This was the first time they had seen each other topless.\n\n\"You don't have any tan lines.\"\n\nNodding her head and smiling, \"Anywhere.\"\n\nValerie's jaw dropped open.\n\n\"Anywhere?\"\n\n\"Anywhere.\"\n\n\"Bill. Is that true? No tan lines. Anywhere?\"\n\nI couldn't see it, but I could hear the smile.\n\n\"Yep. Not a one.\"\n\n\"So, how long have you been tanning naked... or rather nude?\"\n\nAs they applied the lotion to my back, Kathy told the same story she had related to Alex on how she and three of her girlfriends had been tanning nude here since the summer before high school; but, added some additional details.\n\n\"Wasn't it odd in the girl's shower? I mean you guys completely tanned?\"\n\n\"Not really. With a lot of these types of abandoned strip mines about, a lot of girls would go and tan nude. Fortunately, nobody ever connected the dots that the four of us friends were completely tanned. Then, later in high school, once kids got their licenses they would go farther out and away from the locals. Those got crazy. We never went to those. I only heard stories.\"\n\n\"Wow. I don't know if I could ever do that. I mean, yeah high school showers and all; were pretty quick. But, laying out with my girlfriends... nude... for hours.\"\n\n\"What do you find so strange, or uncomfortable?\"\n\nThey were both still sitting up at my sides, casually rubbing lotion along my back. I was enjoying the conversation and the touches. I resisted the urge to turn over and savor each of their smooth mounds. I was sure that time would come. The afternoon was still young, and there was still plenty of wine left.\n\n\"I don't know. Exposure. I mean... the first time you guys laid out, did you like check each other out? I know that sounds weird. I mean, even last year in the dorm, my roommate and I never saw each other nude, or even topless. Bras and panties were about it.\"\n\nKathy started the story as they both sat face-to-face along my side. I wanted to turn over, but thought it too soon.\n\n\"In middle school, me and three of my girlfriends would ride our bikes out here for the afternoon. You haven't been down here in the summer. It's HOT and humid. The four of us would swim, lay out, and swim some more. Back then none of us thought of laying out topless. We were too young. Even in junior high.\n\n\"Junior high we had PE. It was the first time I had been naked in front of other girls. It was kind of embarrassing. I mean, I had no boobs. Actually, I still don't have much,\" looking down at me smiling, \"but Bill likes my little ones. Don't you... love?\" as she stroked my back.\n\nI turned my head a bit and grinned back at Kathy.\n\n\"Yeah, I hated PE,\" Valerie said, \"Those showers. Then our school had a pool. In the winter we had to go swimming. We couldn't bring our own suits, we had to use the school's. They were pretty pathetic. They pretty much just kept your boobs in place. Then at the end we all took showers. There were no curtained off areas like in the girl's showers. These showers were basically the boy's showers. We were all out there in the open. I felt sorry for the girls that were on their period. They couldn't swim and were the only girls that left the class with dry hair. Everybody knew why. I heard the guys swam naked, with just swimming caps.\"\n\nI piped in, \"Yep. Our school had a pool too. The only one in the area, and yes, we swam naked. Thirty naked guys standing around in just swimming caps with everything out there. But it wasn't that big of a deal. Our showers were all open, so it wasn't like we hadn't seen each other naked. Nobody cared.\"\n\nKathy, \"Trying to picture that. A whole class of naked guys wearing just swimming caps,\" they both giggled at the pictured sight.\n\nKathy continued, \"The four of us had never been naked in front of each other, even though we were best friends. I think it was the summer we were starting our Freshman year. We still rode our bikes. It started slowly, innocently that summer. Laying out here. First with our tops undone on our stomachs. Then on our backs. We'd swim topless. Then one us got the idea of swimming naked. At first, we took our bottoms off in the water. The feeling of swimming naked was wonderful. For a while we would put our bottoms back on before coming out of the water. Then one day, one of us just walked out of the water with nothing on. The rest of us just looked at each other and said, 'what the heck'. From that day on we were always nude. We were comfortable with each other, having grown up together. It was never a sexual thing. Nothing like that ever happened. The only touching was putting lotion on each other's backs. We kept the group small. We didn't want, or need, rumors going around about four girls swimming together naked.\"\n\n\"You obviously still got together over the last summer,\" Valeri said as she lightly stroked my back. My dick throbbed beneath me at her touch.\n\n\"Yeah. But now the circle was down to just three of us. One of our friends moved a year ago. Speaking of lotion. You should get some on your boobs. They'll burn real easy, having never seen the sun. Trust me, you don't want that.\"",
        "The vision of watching Valerie apply lotion to those lovely white mounds and pink nipples, glistening with oil, flashed into my fertile brain.\n\nKathy, again reading my mind, added, \"I think that's something you can handle by yourself,\" they both grinned at each other.\n\n\"Yeah. I'll do that when I turn over. Right now, I want to work on my back tan lines.\"\n\nValerie moved to the side to lay down. She lingered a bit on her hands and knees. Looked over at me and caught me looking at her creamy white hanging mounds. The erect pink nipples pointing down. She mischievously grinned as she turned slightly, giving me a better look. My dick throbbed.\n\nKathy still sensually rubbing my back watching the tease with a grin.\n\nWhen Valerie's show was over, Kathy stood up. I watched as she walked to the water, bend over, and washed her hands. The fabric over each of her cheeks pulled tight, with half of each cheek showing. She turned and walked back. She watched me, grinning, as I watched in fascination as she slowly, and sensually, returned. The fabric of the bottom portion of her suit, still, a fraction of an inch above that luscious forest. Her lean tanned legs glistening with lotion. A slight jiggle in each little tan mound with every step. She leaned in and our lips met in a tender and loving kiss before laying on her stomach between me and Valerie.\n\n\"Refreshments anyone?\" I asked a bit later.\n\nI returned with two iced wine coolers. Standing in front of Kathy I handed it to her, but kept it just out of her reach... as I teased her. She knew what I was up to. Grinning. She raised up to her knees, as I once again took in her topless form. Valerie watching the whole display. Kathy gave me a grin and a slight nod in Valerie's direction as she took the cup and a sip. I got the hint.\n\nMoving to the front of Valerie, I did the same. She looked up first at me and then Kathy, who was still on her knees. Valerie took a deep breath and raised up to her knees and looked up at me with a knowing smile as she watched me check her out.\n\nI almost dropped the cup.\n\nI had seen Valerie's breasts before; but, not like this. Even the teasing glimpse she offered a few minutes ago didn't do justice.\n\nHere... the full sunlight bringing out all of the gentle hues, colors, and textures of her erect pink nipples and areola. Valerie watched, and grinned, as my eyes shamelessly traveled from her eyes downward: across the smooth golden space of her upper chest, past the slight line separating the 'tanned' from the 'untanned', over the creamy whiteness of her sculpture-perfect, succulent B-cups sitting high and firm as only a late teen's breasts can. The nickel sized caramel colored areola surrounding the erect eraser sized dark pink nipples. My dick throbbed.\n\n\"You can breathe now,\" I heard from my left.\n\nShe took the cup, and took a large gulp, and grinned at me. I leaned in and lightly kissed those soft lips. I wanted to caress her mounds. To kiss each luscious nipple like I had in the past. But, that past was before Kathy, and I figured that was a line not to be crossed. At least not yet.\n\nI watched as both girls applied the lotion to their own soft mounds. Kathy, spending more time than Valerie, moving her palms over her erect nipples, looking at me with a sultry smile. She knew what I was thinking... that I wanted to take her right then and there. To ravish her. Again. And again. And again. Like the animal I was. I was thinking and envisioning just that.\n\nThey settled back down, letting the sun kiss their newly exposed soft flesh. Valerie closed her eyes to savor the warmth of the sun on her sensitive nipples for the first time.\n\nA few minutes into it, Valerie softly said, \"I can't believe I've missed out on this, up until now. It feels so good. So free. The warmth of the sun on my boobs. On my sensitive nipples.\"\n\n\"Wait until you lay out completely nude. To swim nude.\"\n\n\"That may be a while. It took a lot of courage just to get this far.\"\n\n\"You'll get there.\"\n\nI couldn't help it, \"Are you sure you have enough lotion on there? Wouldn't want you to get sunburnt.\"\n\n\"She has enough,\" I heard the giggled answer from my right.\n\nThe afternoon moved on. We did swim. Valerie commented on how wonderful it felt to feel the cool water glide across her warm nipples. Kathy, again said, \"Wait until you swim nude.\"\n\n\"Val, climb up my back and stand on my shoulders.\"\n\nI focused on the feel of her firm little breasts as she shimmied up my spine before planting her sweet feet on my shoulders and pushing upright. She seemed to weigh nothing\n\nThen I said, \"Okay, now dive off me.\"\n\nShe surfaced with a big smile, as she shook her head to get her hair out of her eyes.\n\nThen it was Kathy's turn. Only Kathy took her time moving up my back. Moving her erect nipples across my back, as she slowly ascended. Standing on my shoulders. I envisioned our next trip out here and Kathy standing there completely nude.\n\nThe three of us played together like kids. Laughing the whole time as I kept coming out of the water, over and over again with each of my topless girlfriends sitting on my shoulders and then diving off.\n\nPlayed Frisbee. I was mesmerized by both Valerie and Kathy. Their breasts. The way they moved so gently, with such fluidity. I couldn't take my eyes off them. The areolae were dark; the nipples erect and calling to me, as they moved around the water, throwing handfuls of water at each other and me. Jumping for the Frisbee, their breasts moved, jumped and jiggled with grace.\n\nThey knew what they were doing, where my attention was, and the affect it was having. It was a good thing the water was cool. I decided right then, Kathy was going to spend the night in my bed. Probably wouldn't get much sleep and would probably walk funny in the morning.\n\nLater in the afternoon, Valerie casually said she was going for a swim. The first two bottles of wine were empty. The third just opened. They were both feeling relaxed.\n\n\"Val, if you want to skinny dip, go ahead. I'll keep Bill distracted. Just take off your bottoms once you get deep enough. Or however you want to do it. You'll love it.\"\n\nI watched Valerie rise and walk away, her little butt swaying.\n\n\"Come here lover,\" I was going to like the distraction, as our slickened chests first met followed by our lips. We rolled so Kathy was on top.\n\n\"So, I know you've been thinking of what you're going to do to me tonight. I could tell,\" her eyes gleaming mischievously as our lips met. Her mound grinding against my growing member.\n\n\"Are you going to ravish me? Take me, like the animal you are?\" her eyes twinkling in mischief.\n\n\"You won't be able to walk in the morning. I am going to fuck you silly. Your pussy will be so full of my cum.\"\n\n\"I love it when you talk dirty to me,\" our lips meeting as we kissed through our smile. My dick hardening between us as I gripped her butt cheeks beneath the thin material. Another first, and side of her I hadn't seen before. I liked it.\n\nMeanwhile, Valerie had walked to water's edge. She stood there looking out over the smooth surface, closed her eyes, and raised her arms to behind her head. Presenting her firm white mounds to the world as she again savored the sun warming her erect pebbles.\n\n\"Gosh, this feels so good,\" then, becoming daring, she glanced back at our intertwined bodies, thought and smiled a satisfying smile, \"I did that.\"\n\nJust then, she tucked her thumbs in the sides of the waistband and pulled the bottoms down and stepped out of them. Her hands raised high above her head as she stood completely nude to the world for the first time. Valerie looked back at us once more. At that moment, Kathy had looked up from our lip lock and gave Valerie a 'congratulatory' smile before returning to massage my lips with her own.\n\nSlipping into the coolness of the water, Valerie let out a gasp as the coolness met her hot folds, followed by an, \"Oh my.\" She started to swim into the deeper water. It was like having her body licked all over by little tongues. Kathy keeping vigilant eye on her friend, as I nibbled on soft flesh of her neck.\n\nValerie turned onto her back and slowly backstroked. Her white mounds flattened and quivering at each stroke. Her nipples turning a deep pink pointing to the heavens. Her dark triangle of brown pubic hair, breaking the surface making a sharp contrast against her white untanned flesh, glistened in the sunlight. Her eyes closed. She savored the new sensations of the water flowing between her legs, and through her opened folds, as she slowly 'frog kicked'. She was becoming lost in these sensations that this newly found freedom was having on her body. I was unaware of what was going on, as Kathy kept me pleasantly distracted.\n\nKathy broke our kiss, and looked up, just as Valerie emerged from the water looking like a water nymph. She watched as the water cascaded down the front of her friend gleaming like jewels on her smooth skin. Her nipples hard and a very dark pink. The dark pubic triangle sparkling in the sunlight as water droplets clung to each dark brown strand. Valerie looked over at Kathy, smiled and waved. Kathy gave her a 'thumbs up'.\n\n\"What's going on?\" I asked.\n\n\"Never you mind,\" as her lips again found mine.\n\nValerie laid down on the soft sand at the water's edge, closed her eyes, and opened her legs to the world for the first time. She inhaled a lungful of air as the warm kiss of the sun on her open flower traveled through her body. She opened herself to the maximum. Legs splayed wide, just as a gentle breeze brushed through her wispy dark forest and exposed wet folds.\n\n\"Oh my,\" was all she could say as her fingers teased her warm extended sensitive nipples causing her sex to quiver as her body responded to all the new sensations. Closing her eyes she lay spread eagled on the warm sand with a satisfying smile. The sun drying her smooth soft flesh. The wispy strands of her dark pubic hair fluttering in the soft gentle breeze.\n\nMinutes later, a topless Valerie appeared with a broad smile. Her nipples were as stiff as pink rubber bullets. I inwardly groaned.\n\n\"That was the most sensational, and erotic feeling I've ever experienced. I don't think I can ever swim again with a suit on. Or lay out in the sun with one on, either.\" she beamed' \"I'm glad you kept him completely occupied.\"\n\nMy eyes went wide, as I then realized what had been happening behind me.\n\n\"It was a tough job, but somebody had to do it.\"\n\nKathy stood and hugged her friend in a full 'friends' hug.\n\n\"Good for you, Val.\"\n\nValerie giggled, \"If it hadn't been for the wine courage, it don't think I could have done that... any of that. That was the most daring and spontaneous thing I think I've ever done.\"\n\nLooking over at me, grinning, \"And you missed it all. But, I could tell, and see, that you were pleasantly preoccupied,\" as Valerie took in the major bulge in my shorts.\n\n\"Maybe I can get a 're-play'.\"\n\nValerie, still grinning mischievously, \"Maybe.\"\n\nThe day was winding down. Kathy had thought about just the two of us taking an intimate 'skinny dip' but decided to save that for a time when just the two of us were here. We made a small fire to cook our hot dogs and warm the beans. The girls remained topless to my delight, until the mosquitos chased us out.\n\nI got a hot 'toe curling' good night kiss from Valerie when we dropped her off. She gave Kathy another full 'friends' hug, said thanks for the experience.\n\nKathy said, \"I'm glad you enjoyed it. We'll have to do that again, before the weather gets too cool.\"\n\nValerie looked at me grinning, \"I'd like that... Who knows...? Maybe a replay?\"\n\nMy dick throbbed at the thought.\n\nThat night I did ravage my girlfriend to her delight, as I took her... and took her. We both had smiles on our faces in the morning as we emerged from my bedroom. My roommates just shook their heads."
    ],
    "authorname": "32aa",
    "tags": [
        "romance novel",
        "small breasts",
        "coed",
        "friends",
        "best friends",
        "exhibitionist"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/youre-not-a-serial-rapist-ch-06"
}