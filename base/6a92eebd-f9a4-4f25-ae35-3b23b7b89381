{
    "title": "Breathless Ch. 05",
    "pages": [
        "This story is a bit wordy and fairly long, so if you are looking for immediate gratification, you might want to look elsewhere.\n\nThe following story is a work of fiction. Any resemblance between these character and events and any real person or events is strictly coincidental . . . and pretty darn impressive seeing as it is a science fiction story. Do not reproduce or copy this story without the consent of the author.\n\nThis story is based in an alternative universe, where history took a different course than the one we are used to. In this world, the creatures which we now believe to be legends have walked alongside man for the duration of our existence. Vampires, werewolves, wizards, witches, sorcerers, and a host of other beings share our world.\n\nThe following story contains, in one chapter or another, lesbian and heterosexual activity in different proportions.\n\n-------------- ----------------\n\n\"And there you have it,\" Sadie Hewitt said to the assembled officers. \"Someone was using blood magic to burn the warehouse district down and who knows what else along with it.\" She wanted to point out that none of the \"higher\" races or classes were in any danger, but she was biting her tongue. Cops could be funny if they thought something wrong was happening. Innocent people could get harassed or worse. \n\nVladimir stood up, looking as strong as ever. Sadie almost couldn't stand to look at him, considering the spectacle she'd made of herself during the previous day's escapade. She wanted his respect for reasons she couldn't even fathom, and she had sucked his blood while trying to jump his bones when all he was doing was trying to look after her. If she'd lost much more blood, she would've frenzied and then someone might very well have died. And to make matters worse, she could still taste the faintest traces of his blood in her mouth, and she wanted more. \n\n\"Let's keep an eye out,\" he said. \"Less than two weeks to Halloween and things are dicey out there, so take the time to get out of your cars or just get out in the streets and talk to people. Arbiter Hewitt has been doing just that, and the street folk have been responding.\"\n\n\"But I don't look that good in a thong,\" Fitzpatrick said solemnly.\n\n\"I wouldn't say that,\" Sadie replied demurely, looking at him through half-open eyes. \"You could borrow one of mine.\"\n\nCaptain Grom shuddered. \"Okay, I just got all sorts of mental images that I did NOT need.\" The room laughed, and a few people made noises of disgust as their imaginations caught up to the conversation. \"But Vladimir is right. Gravestones is a hotspot for discontent right now.\"\n\nThe group broke up and Sadie headed to her desk. She hadn't seen Devlin, and she wanted to apologize for shoving him around in her delusional state. Not seeing him, she went up to the front desk to talk to Mel.\n\n\"It's his night off,\" she said. \"If you want, I can give you his home number --\"\n\n\"Nah, I'd rather just talk to him in person.\"\n\n\"Something's up by the way,\" Mel continued, noticing that Vladimir had joined them. \"Mayor's office just called to speak to the Captain about a 'staffing issue.'\"\n\n\"Hunh. Well, I'm sure the Captain will tell us what he wants us to here. Too bad we can't listen in to the call,\" Sadie said innocently. \n\n\"That would be a violation of policy,\" Melissa said.\n\n\"Can't have that,\" Vladimir added with a grin. He wasn't above bending a few rules.\n\nMelissa glanced down at her terminal, and the two officers saw what looked like DVR controls floated on the desktop.\n\n'She's rerouting the call through her PC,' Vlad realized, 'and she's recording it.'\n\n\"I'll talk to you later,\" Mel said calmly, going back to her work, trying not to smirk.\n\n\"We're patrolling together,\" Vladimir said to Sadie. \"Meet you out in the lot.\" He then turned and walked out the door. \n\n\"Crap!\" Sadie muttered.\n\n\"It's okay,\" Mel said. \"He's your friend and he's a cop, so you're going to have to deal with him. He's probably freaked out by everything too. So just go out, patrol, and sit in the car with him in awkward silence. It'll be fun.\"\n\n\"I hate you,\" the vamp growled, then kissed Mel on the cheek. The girl blushed. \n\n\"No PDAs!\" she hissed as Sadie started to walk away. \"I'm spoken for now!\"\n\n\"I don't think Mary would begrudge me a friendly kiss now and again.\" She hit the outside just in time for a light drizzle to start. \"Great.\" She saw Vlad out front in a regular patrol car. \"But --\"\n\n\"No SUV. You seem to think you're invincible when you're in something that big.\" He saw that she was going to object. \"I was given specific instructions by Melissa on behalf of --\"\n\n\"That damn wraith!\" Sadie was tempted to take of the sling just for spite, but her shoulder really did hurt. \"That's the last time I ever make nice with an outcast.\"\n\nThe look Vladimir gave her was slightly amused and thoughtful. \"I doubt that. You can't help it, can you?\"\n\n\"Help what?\" She reluctantly got into the passenger side of the car. \n\n\"Wanting to save everyone . . . even from themselves.\" He pulled out onto the road and headed into the Gravestones.\n\nA few minutes later, Sadie was already ancy. \"You drive like Devlin,\" she growled. \"Gun it! Oh, we could've made that light!\"\n\n\"I will let you out so you can walk,\" he said, holding the steering wheel casually. Then she saw those strong arms tense. \"I'm sorry for what happened,\" he muttered. \"Yesterday.\"\n\nSadie nodded. \"It wasn't your fault. If I'd just let someone help me or hadn't gone off on my own --\"\n\n\"No one else would've survived,\" he interrupted. \"Except for me. And I was too busy avoiding dealing with you to be there for a partner . . . and a friend . . . when she needed me.\"\n\nSadie looked at the droplets of water cascading horizontally on the window. \"I never know when to stop pushing. I never know when just to mind my own business.\"\n\n\"And I hope you never do.\" Vladimir was smiling again, particularly when he saw the look of surprise on her face. \"Sadie, things have been more interesting in the month that you've been here than in the last several years combined. The squad believes in you. The people on the streets love you. Melissa's a whole new woman because of you, and it's a good change for her. You almost got yourself killed for someone that most people wouldn't have even noticed had died. You've put have young males of the Gravestones through puberty for crying out loud. My nephew hasn't stopped talking about you for weeks apparently. Speaking of which, I thought we'd meet him for lunch.\"\n\n\"Roll the Bones?\" she asked hungrily.\n\n\"I thought you people just lived on blood.\"\n\n\"Nah. We need blood, but food helps. And I love eating.\" She paused. \"I can't promise I won't push you again . . . about Teresa I mean. But I'll try. I respect you, and . . . and I just wish she did too.\"\n\nHe nodded. It was as much of a truce as they were going to reach, so he let it lie. \n\nJust then, Sadie's phone rang. She pulled it out, but didn't recognize the number. \"Hello?\"\n\n*Sadie?*\n\n\"Yeah. Terrence? That you? You get a new phone number?\"\n\n*Sort of. Throw away phone.*\n\nArbiter Hewitt got a strange feeling in her bones. \"What's up?\"\n\n*You alone?*\n\n\"No, I'm in the car with Vladimir Koloff.\"\n\n*That works. Can you meet me in . . . oh say, the next fifteen minutes? Over at Rider Park . . . take the walking trail around to the creek.*\n\nSadie knew the sound of disguised urgency, and Terrence's voice was practically dripping with it. \"Sure. We'll see you in a few.\" Then she hung up.\n\n\"What's up?\"\n\n\"Terrence McDermott. He's Lord Frost's bodyguard. He REALLY wants to talk about something.\"\n\n\"Any idea what?\"\n\n\"No, but I've got the feeling it's something I need to hear. Rider Park, and drive inconspicuously.\"\n\nThey were only ten minutes away, so they found themselves pulling into the mostly empty parking lot. With the weather the way it was and Rider Park's reputation for being a haven for junkies, not even the darkworlders went there on a night like this. Vladimir and Sadie weren't exactly worried about getting mugged, unless the person was really, really out of their mind. \n\nFinding Terrence wasn't hard, as he was standing on a bridge tossing some breadcrumbs to a family of ducks that had found there way to the area. \n\n\"You shouldn't encourage them,\" Sadie said. \"There are people in this park that would eat them if they got the chance.\"\n\n\"Everyone's gotta eat,\" Terrence grinned. \"And have you ever actually tried to catch a duck? They're sneaky little bastards.\" \n\nSadie noticed that Vladimir was actually eying the ducks more than he should, and his presence made the ducks nervous. He was a predator, and their instincts knew it. \"Heel boy. If you eat duck, then it'll spoil your appetite for Roll the Bones.\"\n\n\"I wouldn't know about that,\" he replied with a grin. \"I've got a big appetite.\"\n\nSadie slowly turned away. 'No sexual innuendos . . . bad Sadie! You're just getting things straightened out . . . you'd like to get HIM straightened out.' She rolled her eyes. 'You are a vampire with a one-track mind.' \"So what's so important that you drug us all the way out here?\"\n\nTerrence looked around. He was careful, and he knew how to do recon. \"Dazza was involved in the arson attempt,\" he said carefully. \n\n\"I know,\" Sadie replied.\n\n\"What? You did?!\" Vladimir was as angry as he was surprised.\n\n\"Calm down,\" Sadie told him. \"I was going to tell you tonight. I recognized his voice, but that wouldn't be enough for a conviction, not even coming from me.\"\n\n\"Frost knew . . . I think he was behind it.\"\n\n\"I knew it!\" she said, stomping her foot and scaring the ducks off completely.\n\n\"Why would Frost do this? I knew he was a psychopath, but this?\" Vlad rubbed his eyes, trying to sort this out.\n\n\"I heard them talking. They didn't like the fact that this company might have helped bring the community together. It's not even like it was for profit or because he wanted the neighborhood. It was just . . . petty.\" Terrence had seen a lot of reasons for killing, burning, raping, and pillaging, and none of them were good. But at least some of them made sense. \"So I started snooping around. Frost was in his sensory deprivation tank, so I snooped around his office.\" He pulled a folded stack of papers out of the back of his pants. \"Frost hates computers, so he puts everything down with on paper. I found a back up planner in one of his desk drawers. I made copies of all the pages and then put it back. I can't make heads or tails of it, but I figured it had to be important.\"\n\n\"Why?\" Vladimir asked.\n\nSadie was staring at the pages. Even in black and white, the writing looked odd . . . smeared in some places.\n\nTerrence saw in her eyes that she had realized what he knew to be true. \"It was written in blood.\"\n\nArbiter Hewitt looked over the pages. It looked in many ways like an ordinary planner in that items were laid out in order on specific dates. But the entries made little sense. Two letters followed by an arrow pointing to another set of two or three letters. It all started on Halloween at midnight, and there were more and more entries leading up to New Year's Eve. \n\n\"Lord Frost and the mayor are putting one hell of a schindig on Halloween this year. He's bought a big tract of land on the outskirts of West End and he's already got a big pavilion put on it. I figured it was just more investment property, but now I'm not so sure.\"\n\n\"Got an address for me?\"\n\n\"You've probably already gotten it,\" Terrence said. \"I mailed YOUR invitation to the event personally. You know, if you would just be boring, he probably wouldn't be so interested in you.\"\n\n\"I doubt that could happen,\" Vlad muttered, looking over the documents some more. \"On either case.\"\n\nSadie stuck her tongue out at him. \"Why are you doing this? You could be in deep shit if you get caught.\"\n\n\"I figure I'll probably quit after the ceremony,\" Terrence said. \"As good as the money is, I didn't put my ass on the line for my country to come back and sell out its principles to him. He used to just be cocky, but I draw the line when innocent people start getting hurt.\"\n\n\"You could testify,\" Vlad said.\n\n\"It would be my word against Frost and Dazza. Between Sadie and I, we've got a whole lotta here-say, and that means squat with someone who can buy and sell judges on a whim.\"\n\n\"If you hear anything else, let us know. Okay?\" \n\nTerrence grabbed Sadie's hand and kissed it gently on the top. \"Your wish,\" he said with outrageous flamboyancy, \"is ever my command.\"\n\nShe made a show of wiping her hand on Vlad's shirt while he looked at her with amused disgust. \"Thanks,\" she said. \"We need all the friends we can get.\"\n\n\"And that's why I like you more than other vamps,\" Terrence replied.\n\n\"Why?\"\n\n\"Most vamps would've used 'allies' instead of 'friends.'\" He turned and headed out the opposite way that they had come in. \n\n\"You haven't heard anything about this ceremony?\" Vladimir asked as they headed back to the car.\n\n\"I've been a little busy,\" she replied. \"So no.\" She stuck the folded up papers into Vlad's jacket pocket. \"We'll get those back and see if Mel might be able to decipher them.\"\n\n\"You do realize that Melissa isn't actually a cop?\"\n\n\"Can't ask anyone else to do it, and she's wicked smart. Hopefully she'll uncover something. We can look at it in the car too.\"\n\nThey hit the streets and cruised for hours. Sadie hit the overhead light and tried to make heads or tails out of the bizarre code on the photocopied paper. 'It seems so simple,' she thought, 'like something's on the tip of my tongue, but I just can't get it.'\n\nVladimir chuckled. He should be taking this more seriously, but it was fun to watch Sadie try and solve the puzzle. She had the perplexed look of a child trying to do quantum physics. It was so cute the way her eyes scrunched up and her lips pouted slightly . . . and the way that sling arced down drawing attention to her glorious cleavage and -- 'Stop that!' he thought. 'We just got things settled down between us!'\n\nLuckily, he was distracted by a friendly sight when they pulled into the parking lot of Roll the Bones. Sadie followed his eyes to the group of youths playing basketball across the street and easily noticed that Vladimir's nephew Todd was amongst them. She was happy to see that there were a number of humans playing there as well. It seemed that young men were able to bond over seeing a hot mostly-naked woman playing sports.\n\nThe two officers headed across the street and were quickly noticed by the players. Unlike last time, there was no suspicion at their approach. Vladimir shook Todd's hand, followed by a manly hug complete with back-pounding. More than one pair of eyes drifted over to Sadie herself, and several of the young men were grinning. They remembered the last time Sadie had been on their court.\n\n\"Hey Uncle Vladimir,\" Todd was saying. \"Wa'as up? Never see you down here no more.\"\n\n\"I'm doing desk-jockey crap most of the time. But since our illustrious Arbiter here just had to go and get herself shot up in the line of duty, I figured I'd be her chaperon for the day. You know, to keep her from taking her clothes off and injuring that shoulder of hers.\"\n\n\"So she's NOT going to get down to her unmentionables?\" one of the human boys said, obviously glum about the notion.\n\n\"Not today,\" Sadie said, feigning a pout of her own. Then she grinned. \"I'll just have to make it up to you boys somehow once I get better and old Mr. Fuddy Duddy here stops keeping me down.\"\n\nVladimir was getting some unkind stares from the young male crowd, but he seemed unphased. \"Hey, Mary's the one keeping you in line right now, not me.\"\n\n\"Who's Mary?\" one of the guys asked.\n\n\"You really don't want to know,\" Sadie said. She was going to have a serious talk with the wraith about this. Melissa might want someone to take control, but Sadie just wanted to get wild.\n\n\"Got time for a quick game old man?\" Todd asked with a toothy smile. \"I'll give a few points head start.\" He looked over to Sadie and then back to his uncle. \"And you can even keep your clothes on.\"\n\n\"Oh, you didn't just say that,\" Vladimir replied, rolling up his sleeves. \"Remember the LAST time you called this old man out?\" He handed his gunbelt to Sadie, who was pouting a bit.\n\n\"I wanna play!\"\n\n\"Remember Mary.\"\n\nSadie grumbled by way of response, though she got over her sulking quickly. Vladimir played basketball just like he fought . . . balls to the wall and physical as all hell. Todd tried to give as good as he got, but he was still a young wolf and simply wasn't able to match strength or speed with his uncle. And Sadie liked seeing Vladimir in action. Masculine . . . sweaty --\n\n\"Damn!\" Todd gasped when Vladimir pushed through him to score the final basket. \"You are so alpha!\"\n\n\"Don't start with that,\" Vladimir replied.\n\n\"C'mon, you know you are. Besides, you're coming to the dinner on Saturday right? You KNOW that Mom and Ivan are gonna bring it up then anyway.\"\n\nVladimir's smile had slightly withdrawn. \"Try and run damage control for me ahead of time, okay kid?\"\n\nTodd rolled his eyes. \"Will do. I take it that Teresa,\" he continued, almost sneering, \"won't be joining us?\" He blanched a little under his Uncle's glare, so he found something more pleasant to look at. \"Arbiter! Why don't you show up? It'd be a great time to meet the whole pack leadership for the Northwest Territory.\"\n\n\"I'm sure that Sadie has something better to do than hang out with a bunch of mongrels all morning,\" Vlad growled.\n\n\"No I don't. We should have the deck finished early enough, depending on when it starts.\" To Sadie, it actually made a lot of sense, since she'd been meaning to make more headway into meeting the other primary powers in the area. \n\n\"Cool. Mom's the organizer for the meeting, so I'll let her know we'll have a guest.\"\n\nVladimir threw up his hands and headed back to the car, grumbling about how no one listened to him anymore.\n\n\"He's cranky,\" Sadie said with a grin. She was looking forward to finding out everything there was to know about her fellow officer, particularly the embarrassing stuff. A pack meeting was just the place to do it. \n\n\"He gets like that around meetings. The bigger the meeting, the more annoyed he gets, since he knows that Ivan will push him to take control again.\"\n\n\"Ivan Petrov?\" She knew the pack-leaders name, but didn't realize that he and Vladimir were acquainted. \"I didn't know that pack leaders ever wanted to give up their place.\"\n\n\"He never wanted it,\" Todd was saying as the rest of the guys went back to play. \"Vladimir was in the Gulf when old Boris died, otherwise the job was his. No one in the Territory was going to challenge him for it. Hell, Boris had already blessed the transfer of power.\"\n\n\"I met Boris back in his hayday. I liked him . . . good man.\"\n\n\"Keep forgetting you're older than you look. You act like a teenager,\" Todd grinned. \"But we needed a leader and Ivan was a good choice. He figured that Vladimir would come back, challenge him, he'd back down and that would be that. But when Vladimir came back, he married that . . . elf, and he kind of backed out of pack politics. It's made a lot of people uneasy. Ivan's a good man and would be a good pack leader if there wasn't someone more alpha around, but --\" Todd stopped and shrugged.\n\nSadie understood. The head of the pack was supposed to be the biggest bad-ass that the pack had to offer. Having a beta in charge, however talented, flew in the face of nature.\n\n\"Vlad's THAT alpha?\"\n\n\"He could have all the clout and all the bitches he wants,\" Todd replied. \"He just --\"\n\n\"I know, I know. The elf.\" She loved the fact that werewolves could say \"bitches\" and have it not mean anything derogatory. Of course if SHE said it about Teresa, it might not be so innocent. \"Hey, shoot me an email with directions and times and I'll be there.\" She ran over to the car, then she and Vladimir went inside Roll the Bones for a well-deserved meal.",
        "---------------- ----------------------\n\nAn hour before sunrise . . .\n\n---------------- ----------------------\n\n\"Hey Mel,\" Sadie said as she bounced over to the desk while Vlad parked the car. She'd had a good evening overall, and was somewhat back to her perky self. \"Got a sec?\" \n\nMel looked up at her from the stack of expense vouchers and tried to look passive. At work, the goth chick was trying desperately to cling to the aloof and deadpan image that she had cultivated for years before Sadie had shown up, but it wasn't easy for her. \"For what?\"\n\n\"Got a puzzle I need your help with,\" Sadie said, much more quietly this time.\n\nMelissa was intrigued. \"Private?\"\n\n\"Private.\"\n\nThe two of them sauntered over to the computer lab and shut the door behind them. Sadie pulled the folded papers out and handed them to her. \"Got a tip from Terrence,\" she said, her voice calm and serious. \"Listen, I heard a voice at the warehouse the other night and I was pretty sure it was Dazza. Terrence heard Dazza and Frost talking and it pretty much confirmed that they were both involved.\"\n\n\"Why?\" Mel asked worriedly, looking over the papers. \"What would Frost have to gain?\"\n\n\"I don't know. From the sound of it, they did it just because they wanted to. Right now, we'd have Terrence's word and mine against Frost's and Dazza's. That would be enough for me to arrest him, but I want a conviction.\" She looked puzzled. \"This stuff was hidden in Frost's desk. There's a bunch of stuff planned from Halloween to New Years, and we need to figure out what it is. And I need to find out what he's doing with that land in West End.\"\n\n\"Graveyard,\" Melissa muttered, shuffling through the notes she'd been handed.\n\n\"What?\"\n\n\"I read in the paper that he's going to make it into a graveyard.\"\n\n\"Then why is he having a big celebration there on Halloween? Never mind. Vampires are weird.\"\n\n\"You ARE a vampire,\" Mel grinned.\n\n\"See? My point exactly.\"\n\nMel's eyes shot up. \"Shit, I forgot to tell you. Devlin's been assigned to some special detail for the mayor. That's what that call was about.\"\n\n\"Detail for the mayor? What is it?\"\n\n\"Don't know, but he's going to be there for the next two weeks.\"\n\n\"You mean --\"\n\nThe two girls' eyes met. \"Until Halloween?\"\n\nSadie's good mood was quickly evaporating. \"I think I may need to have a talk with the mayor and Lord Frost. We can't have them pulling street cops for personal crap without a damn good reason. Meantime, think you can try and figure out what all this crap is for?\" \n\n\"Do my best. I'll work on it from home. Most of my good hacking software is there. It'll take some time to enter it into a spreadsheet then find the right algorithm, but I think I can come up with some guesses for you. It's not complicated looking.\"\n\n\"You going to Mary's today?\" Sadie asked, trying to get happy again.\n\n\"Not tonight. She wanted me to take a couple of days and think about her offer, so --\"\n\n\"What offer?\"\n\nMel blushed. \"She said that she prefers 'live in' help.\"\n\nSadie's eyes blasted open. \"She wants you to move in?! After one day?!\"\n\n\"It was a very, very, very good day.\" Melissa was practically beaming with glee, though she tried not to show it.\n\nSadie smiled and hugged her friend. \"I'm so happy for you. Just be careful. You're moving pretty fast.\"\n\n\"Says the girl who jumped my bones the first chance she got,\" Mel replied. \"I know, I know. It's a little rushed. But I'm not immortal, so I gotta take my chances while I can. I feel good about this though. I really do.\"\n\n\"Then for what it's worth, I support you. Now get that cute ass of yours in gear, and I'll talk to you this evening.\"\n\nThe two of them left, giggling and enjoying each other's friendship. Neither of them saw the demon standing in the shadows down the hall from the computer lab. Neither of them heard Bart when he muttered, \"Interesting.\" He had heard almost the entire conversation. The question was, what to do with that information.\n\n------------- ------------------\n\nSeveral nights later . . .\n\n------------- ------------------\n\nTerrence was sitting on Sadie's partially completed porch when she got home from work. She'd convinced Mary that she was quite capable of driving her truck, so she didn't have to worry about Mel chauffeuring her around. \n\n\"Wa'as up handsome?\" she said.\n\n\"Not much. Just wanted to see if you'd made any headway in figuring out what those papers meant.\"\n\n\"Not yet. I've got a friend working on them. Heard anything else?\"\n\n\"Not especially. Frost has been spending a lot of time with officer Devlin, but I'm still not sure why he's even there. All I know is that Saturday is a week from Halloween and Frost is going to be making an announcement at a party over at the mayor's house. He's going to try and get you there.\"\n\n\"Tough shit. I'm meeting with the pack of the Northwestern Territory on Saturday. I've already met all the vampires around here, so guess which invitation I'm going to accept?\"\n\nTerrence shook his head. \"You just live to annoy him don't you?\"\n\n\"Actually, it's more of a hobby. Believe it or not, I'd rather just do my job. Frost just seems to want to keep distracting me from it.\" She sat down next to him. \"Need to get this deck finished. You wanna help?\"\n\n\"Sorry. I know you say Mary's cool and all, but wraiths just make me freak.\"\n\n\"She's a good person and she deserves a chance,\" Sadie said, irritation seeping up into her words. \n\n\"Woah,\" Terrence said, throwing his hands up. \"Not disparaging her character in any way.\"\n\nSadie stood up angrily. She knew she shouldn't get mad at Terrence, since darkworlder distrust of wraiths was almost instinctual, but she couldn't think about how lonely Mary had been all those years.\n\nTerrence got to his feet and put a hand on her good shoulder. \"Listen, once we get Halloween behind us and I'm able to find a new job, I'll make an effort to meet her. Okay? I've just got a lot of stuff to think about as it is.\"\n\nThe Arbiter walked over to the part of her railing that was complete and leaned against it. The wind had a good, distinct chill in it that snapped across her skin and into her nostrils. She loved cold air . . . it made her feel so awake and aware of everything. \"Sorry,\" she said at last. She turned around. \"Promise me you won't end up like them.\"\n\n\"Like who?\"\n\n\"Like the rest of the vampires and the elves and the high-level witches and wizards and sorcerers. Don't turn into a self-righteous jerk with delusions of grandeur.\"\n\n\"Hey hey hey!\" Terrence said. \"I know a lot of really cool people from all those groups, you included. Whatever Frost and his crew are up to, I don't think you should condemn the entire race.\"\n\n'I already did,' she thought morosely. 'Damn, I need to get my mind off of Frost and all this political crap.' She glanced over Terrence from top to toes, and she though she knew just the way to do it.\n\n\"Uhm, why are you looking at me like a prime rib?\" Terrence said. He could see a growing hunger in her eyes . . . hell, he could practically feel it. It was like someone just flipped a switch inside of her.\n\n\"Let's see,\" she said demurely, walking towards him with an almost ominous sway to her hips, \"I've been shot, burnt, been spoken down to, and had all of my Guiness and cupcakes stolen. I think it's time that I got something I actually wanted, and you happen to be in the right place at the right time.\"\n\n\"How romantic.\" Terrence actually felt a little slighted. He used to think that might wind up being more than just a convenient booty call, but that didn't seem to be the case. Not that he really minded being a booty call, seeing as Sadie was still the hottest thing this side of hell. \"Aren't you a little injured to play that kind of game?\"\n\nShe reached up and ripped his shirt off with her good arm. \"THAT . . . was a stupid question,\" she growled. \"Got any more?\"\n\n\"Nothing comes to mind.\"\n\n\"Good.\" She got the door open and then drug Terrence inside by the front of his pants, having every intention of getting into them as quickly as possible. But she struggled a bit getting her own vest off due to the discomfort of her shoulder. \n\nTerrence moved to her assistance, taking no small delight in loosening Sadie's vest enough that she was able to slide it off one shoulder. She had to remove her sling in order to get completely undressed, though she put it back on afterward. Terrence stood behind her, kissing her on the side of her face and down to her neck, but made no move to extend his fangs. He would never do that without an invitation, which Sadie didn't seem ready to give.\n\n\"No biting,\" she confirmed with a moan, \"but the kissing . . . that can stay.\" \n\nHe pressed his hardness against her, feeling her butt cheeks clench in through his slacks. He'd been with a number of vampires, but Sadie was the first who had showed no interest in getting bitten to heighten the experiences to come. 'She really is different,' he thought, letting his mouth caress her uninjured shoulder. She was fumbling with his zipper as her reached a hand around to cup one of those wonderful breasts, feeling the weight of it in his hand. Finally, Sadie got the zipper down and reached her hand through the opening of his boxers to find his manhood inside.\n\n\"That is just what I want right now,\" she purred. It wasn't really EXACTLY what she wanted, she realized. She thought back to a moment of shame and yet also a moment of intense desire. She thought back to when her teeth had been buried in Vladimir's neck and she could feel him flowing through her and pressed against her. Just thinking about it made her even more amorous, and Terrence was going to be the beneficiary of her lust. She stroked his significant length in his pants, letting the head rub against the fabric. Terrence had good blood flow going on through that organ. She let her fingertips run over the veins on the shaft up to the hooded head, pulling it out through his fly until the whole shaft became nestled her the crack of her ass.\n\nShe pulled away and let him to the bed, gripping his cock all the way. She turned around, spreading her legs slightly and pushing his member between them but not inside. The top of his dick made contact with her heavenly gates, picking up residual moisture as it slid beneath those lips and poked out the other side. \n\nTerrence was trembling in anticipation. Last time, he hadn't gotten to spend nearly as much time as he would've liked with this glorious creature, so he was going to make the most of it. He continued sliding his cock under his pussy, one hand grabbing her ass while the other fondled a breast. He pulled back until the head of the shaft was directly underneath the entrance to paradise, then he bent at the knees and followed it with an upward thrust. Buried inside of her, he grabbed her ass with both hands to help keep her off of the ground.\n\nSadie wrapped her legs around his waist and grabbed his shoulder with her healthy arm, feeling him thrust deep inside her . . . filling her up. Convinced that he could hold her up on his own, she released his shoulder so she could unbutton his trousers. She was impressed that he was able to let them slide down and step out of them without losing his rhythm, but somehow he managed. She spurred his ass with her heels and was rewarded with an increased tempo. If she were wearing a cowboy hat, she probably would've raised it over her head and treated him like a mechanical bull, except she had every intention of riding him for more than eight seconds. The sound of flesh slapping flesh echoed through the trailer, making her smile. She'd had the place designed and rigged for surround sound, but this hadn't been the kind of sound she had in mind. Not that it bothered her . . . quite the contrary, it turned her on. She raked her fingers across his smooth chest and down to his abdomen. The guy was ripped, so much so that she wanted to eat dinner off his six-pack. \n\n\"On bed . . . now,\" she grunted. \n\nTerrence turned and lay her on the bed. Her legs still ensnared him as she arched her back, pushing up with her shoulders while he grabbed her hips and drove her into the bed. Each thrust kept her feeling filled and alive, and she just wished he would go faster. Her shoulder didn't hurt so much that she couldn't take it. She placed her feet on the edge of the bed, giving her lover of the moment even better access. \n\n\"You can do better than that,\" she purred, giving him a grin. \n\nIndeed he could. Terrence pulled all the way out until nothing but the little slit in the end of his dick was still encompassed by her warmth, then he drove back in. The half-open mouth forming a gasping grin was all the indication he needed as to what she was really looking for, so he started to drill her so had he though his hips might give out. He was nervous at first when he saw her slung arm bouncing around, but she wasn't complaining and so he didn't stop. She was so warm and so tight that he never wanted to stop. \n\n'He's a good lover,' Sadie thought happily, but then her thoughts became somewhat absent. She was having fun, but there was something missing. Not that she was going to turn away as handsome of a fellow as Terrence, but she wished she could just let loose with him. At least she was still having enough fun to get off, which she did with a gentle stretch of her back and gripping him with her vaginal muscles.\n\n\"Stay in!\" she said. She liked cumming on a nice hard cock, and his was just the thing. Slight trembles, a sigh of blissful contentment, and then she fell back to the bed, the captive member sliding out of her body. \"Now let me clean that off for you.\" \n\nTerrence got on the bed, kneeling next to her while she used one hand to guide his fleshy staff between her lips and into her covetous mouth. She took half of it on her first swing, letting it rest in the entrance to her throat while her lips pressed down on the shaft. It was so hot in her mouth, and she loved tickling that spongy area on the underside with her tongue. Slowly, she pulled her head away, dragging lips and tongue as she went. Then she bobbed her head forward and took back all the ground that she'd lost. \n\n\"Sweet mother of everything holy,\" Terrence said as Sadie's mouth did it's best impression of a Hoover. She was cupping his testacles now, rolling them across her palm as she took more and more of his manhood into her. 'Please don't have a gag reflex,' he prayed, 'Please don't have a gag reflex!' Another inch of cock disappeared down her throat, making about two-thirds of it absent from view. \n\nSadie released his testacles so she could stroke his cock as she sucked him. It was the one-two combo that quickly proved fatal, and he released his seed in the back of her mouth. Like a pro, she didn't spill a drop and continued to nurse his member until she felt that it had nothing else to provide for the moment. Sadie pulled her lips along that now highly sensitive skin until releasing the head, then swallowed his load with warm satisfaction.\n\nTerrence lay next to her, stroking her body, cupping her breasts, and tracing those smiling lips. He made a slight move forward to kiss her, but noticed her head turning away slightly, indicating to leave it alone. He'd kissed her before and she didn't seem to mind sex with him, so he was pretty sure she wasn't repulsed. 'Maybe it's just a kind of intimacy she isn't ready for right now,' he thought. 'It wouldn't surprise me, considering how she lost it when she got hurt and had to feed off of -- 'Vladimir.' For a moment, he was angry . . . jealous . . . sullen. Then he sighed. It wasn't like he'd entered into friendship with Sadie expecting to be her one true love, but being officially relegated to second on her hitlist . . . or third, if you included Melissa.\n\n'He looks a mile away all of a sudden,' Sadie thought. \"What's up?\"\n\n\"Just wondering if I'm the one you really want to be here with.\" He knew better than to try and lie to her.\n\n\"Of course you are,\" she replied, looking confused.\n\n\"You may like being here with me, but am I really who you want?\"\n\nSadie lay on her back, pulling Terrence's arm over her body. \"I do want to be with you,\" she said honestly.\n\n\"Just not as much as --\"\n\n\"Don't say it,\" she growled. \"Whoever it is you're thinking, just don't.\" She knew who he was thinking of, and he would've been right. \"Right now, I want to be with you. Just . . . just let that be enough.\"\n\nTerrence accepted the resolution. \"Being with you, even for a moment, is more than most could dream for.\"\n\nSadie just stared at him, then started to laugh. \"Do lines like that actually work for you?\"\n\n\"Are you still wanting sex with me this evening?\"\n\n\"Yeah.\"\n\n\"Then they work.\"\n\nSadie grinned, touching his half-sized member, coaxing it back to life. Vampire males had incredibly short refractory periods, so he was ready to roll in no time. Sadie rolled him onto his back and mounted him, letting him slide deep into her body as she leaned forward and nibbled on his nipples. She wanted to bite into him and drink his heart's blood, but she knew it would be impolite to ask for something that she herself was unable to give.\n\nShe righted herself again, riding his manhood and his hips with slow, leisurely bounces. She sometimes let him slide all the way in, then just rotated her hips a bit while she stimulated her own clit. As seemed often the cast, his hands sought out her breasts, squeezing them and pinching the nipples. Sometimes he'd grasp her ass, but he certainly seemed to lean towards being a breast man. She would lower her breasts to his eager lips and he showed just how he could treat his favorite protrusions and make Sadie enjoy it.\n\nThere was no real burning need to accomplish anything, so Sadie took her time, letting herself feel filled and happy all the while. It wasn't long before he came inside her, making her feel a content warmth. She dismounted him, not needing anything else for herself. She let him hold her for a while, not feeling any burning need for conversation. He kissed her forehead, then slid out of bed and started to get dressed. \n\nSadie thought she should ask him to stay, but realized that she wanted some time alone now. And he would know that the offer was only for the sake of pleasantries. Before he left, she sat up and he came over, allowing them to share a brief embrace. Then he left. \n\n----------------- ------------------\n\nSaturday afternoon . . .\n\n----------------- ------------------\n\nSadie turned the keys in her truck, listening to that beautiful hum before trundling down her gravel drive. She had a long evening and night ahead of her, but she had felt restless and unable to sleep. So she got up and decided to go for a drive. Thanks to her accelerated healing, she was able to operate almost completely normally, her shoulder only providing her mild discomfort. \n\nShe wasn't thinking about where she was going at first, then she found herself in West End, the \"nice\" area of Midian. 'Man, they must hate being this close to Gravestones and all those not-disgustingly-wealthy people.' She drove to the location of Frost's ceremony. True to Terrence's word, she had gotten her invitation to the West End Parade of the Dark, giving her the exact address. There was a high covered fence and a couple of security guards strolling around. She drove the perimeter, realizing just how big of an area this was. She parked nearby, but somewhere that couldn't be picked up by the area surveillance cameras. The guards probably wouldn't recognize her truck, but she didn't want to take chances. \n\nEvading the rent-a-cops was easy, making her glad she was able to move about during the day. West End's police force had a lot of vamps and elves, and they were harder to avoid. She timed the cameras and then jumped the ten foot fence like it was a speed bump. The moment she landed, a chill shot up her legs, through her spine before finally reaching her brain. Her mind was playing catch-up, because the view ahead was just plain chill-inducing.",
        "Graves. Lots and lots of graves, each equipped with the proper equipment for raising and lowering coffins already in place. \"That shouldn't be happening,\" she muttered. \"Even if this is supposed to be a legitimate business, you don't gear this stuff up in advance. It's like they're planning for a massacre or --\" \n\nSadie stepped up to the edge of nearest grave. It was far more shallow than it should have been. \"This isn't a final resting place,\" she said to the dark hole in the ground. \"This is a Turning grave.\" Her head shot up. The graves were laid out on a grid, so it was easy to calculate how many there were, one hundred in all. Then she saw a mound close to a covered dais. \"A hundred and one?\" She walked over and took a look. That grave, while shallow, seemed to be slightly better constructed. \"What's different about you?\" she asked. Looking around, she pulled her cell phone and punched Mel's number. 'Must still be asleep' Sadie thought when the voicemail picked up. 'Or maybe she's tied up.' Sadie grinned. She was happy for her friends: finding someone you connected with at that level was rare.\n\n\"Mel, I think I've got an idea about that list. I think it could be a list of potential Turnings. I know, it's weird.\" It seemed especially weird since there were more than a hundred and one names on that list. \"Those letters may be initials. Check 'em against known vamps and against anyone in the Turning registry. Get back to me if you find anything.\" She hung up and jumped back over the wall, heading toward her truck. 'This is bad,' she thought. 'What can he be thinking? There can't be that many openings for Turning, can there? And all at once? Maybe I'd better attend that event after all.'\n\nOn her way out, she saw a sign reading \"Vallant Fencing.\" \"So Frost isn't the only one involved in this.\" Councilman Vallant was one of Frost's flunkies, albeit an old and powerful flunky, and one that might warrant a little investigation. \n\n---------------- --------------\n\nAcross town . . .\n\n---------------- --------------\n\nLord Frost hated being awoken, but when he saw the look on Dazza's face, he figured that it was probably for a good reason.\n\n\"Explain, and quickly,\" Frost growled. \"We have an important night coming up and --\"\n\nDazza just handed him a piece of paper that he had already read. \"This was in the mailbox, with no envelope or postage. It seems to be from someone in the Gravestones Police Department, but not one of your men.\"\n\n\"A strange policemen leaving me notes? How droll.\" But Frost's amusement declined noticeably when he glanced over the letter. Arbiter Hewitt had gotten a hold of the schedule somehow, and her dinner companion from a few weeks earlier was trying to decode it. Apparently, they had gotten it from Terrence McDermott. Frost looked up at Dazza.\n\n\"It appears that we need to clean house,\" he said, as cold as his name implied. \"I assume that Arbiter Hewitt has not yet figured out what it means, otherwise I suspect that she would have paid me a visit. No matter. Come Halloween, she will not be able to resist us any longer. But this human woman must be dealt with. Make it look like an accident.\"\n\n\"And McDermott?\"\n\n\"I have been betrayed by one of my children,\" Frost said evenly. \"I shall mete out the punishment myself.\" \n\nDazza left while Frost rose. He could not walk in the sun as easily as the Arbiter could, but being active in daylight was well within his capability. Being thousands of years old had its advantages. He dressed for business, for with Frost, everything was about business. He went to his office, sat behind his desk and waited. For an hour, he sat in place, waiting for Terrence to arrive. \n\nTerrence walked in right on schedule. Frost had perfected masking his emotions over the millennium, but he felt a dark rage. He remembered the first time he'd seen this young man, perfect in so many respects. Terrence was a warrior and a patriot, so Frost had made the mistake of thinking he would be loyal to his new lord and his new race. Frost had been proven wrong, and the vampire lord loathed being wrong. \n\n\"You wanted to see me sir?\"\n\nFrost stood up and walked around his desk. \"We have a problem with the ceremony, and I thought you might be able to help.\"\n\nTerrence said. \"What do you need me to do?\"\n\nFrost placed a hand on McDermott's back and led him toward the door. Then, faster that anyone could blink, he grabbed the younger vampire's chin and broke his neck. Terrence dropped to the floor with a thud. Frost looked down at his former bodyguard.\n\n\"You just did it.\" Frost walked back to his desk and called a clean-up crew.\n\n-------------- ------------------\n\nMeanwhile . . . \n\n-------------- ------------------\n\nSadie was sitting in her truck under the shade, staring at the gate of Councilman Vallant's palatial estate, wondering what his part in this all was. She wasn't expecting to actually see anything, but was just trying to get a feel for those who were most assuredly her enemies.\n\nBut see something she did. The front door opened and, with her keen eyesight, she saw two people standing in the door. She couldn't make out the details due to the shadows except that they were definitely close in an intimate way. \n\n\"Get a room,\" she murmured as she got ready to start up the truck again. The sun was almost down, so it was time to go to the pack meeting. But something held her eyes for just a little while longer . . . something about the shape of one. It was something familiar. She backed the truck up a bit, getting a good view of the gate. A woman got into a car that a human valet had pulled up to the curve and was pulling away as the door closed. When that car pulled around, Sadie's jaw almost hit the seat.\n\n\"Teresa?!\" What the hell was Vlad's wife doing . . . 'You know perfectly damn well what she was doing!' She gunned the truck, fighting the urge to run the woman down and wrap her vampiric hands around the bitch's neck, restrained only by the knowledge that Vlad might take it personally. 'How do I tell him? DO I tell him?' she questioned as she drove over to Vlad's sister's house. It was the longest drive of her life, with her inner turmoil bubbling in her stomach and making her want to vomit. She didn't understand how anyone could fail so utterly to appreciate what they had. \n\nFinding the local pack's stomping grounds was pretty damn easy. Every pack tended to have one member with a large amount of land for such gatherings, and everyone else chipped in to help maintain it and pay taxes on it. This particular den was way out on the undeveloped edges of Gravestones and stretched out as far as the eye could see, with no neighbors nearby to complain. Cars filled the driveway and were parked on the sides of the road leading through the area. Sadie grinned in spite of herself as she found a spot, seeing a rusted old ford parked right next to a sporty little BMW. For werewolves, the pack surpassed all other boundaries. \n\nShe jumped out of her truck and strode down the driveway, black tanker boot leaving slight imprints in the dirt beneath them. She had apparently been spotted, as Todd bounded down the steps to meet her. He wasn't fooling her in the least. She knew that his friends were watching and he'd gain some prestige by being \"tight\" with the hottie. She didn't care, and gave him a big hug anyway.\n\n\"Glad you could make it,\" he said. \"Mom's been itching to meet you.\"\n\n\"She's got fleas?\"\n\nA couple of people chuckled. \"Oh, this is gonna be fun,\" Todd grinned back at her. \n\n\"Where's your uncle?\" she asked as she wiped her feet on the \"Beware of Inhabitants\" floor mat.\n\n\"Ivan and some of the other big dogs cornered him the second he showed up and are talking politics. Seems some of the western packs are grumbling about how the vampires have gotten to full of themselves around here and they're putting pressure on Ivan to stand up to them. But Ivan is so wrapped up trying to get Vladimir to take over that he hasn't even noticed. Can you talk to him?\" Todd asked, looking concerned. \"Uncle Vladimir seems to put a lot of stock in you.\"\n\nSadie stretched her neck in both directions like she was getting ready to exercise. \"I don't know Todd. I spend enough time trying to stay out of vamp politics that I'm not sure I'm qualified to participate in were's.\" She saw his face fall. \"Listen, if he asks my opinion, I'll give it to him. But I make no promises that --\"\n\n\"There you are boy,\" a voice came, interrupting Sadie. The woman behind it was tall and lean, reminding Sadie a great deal of a coursing hound. She flicked Todd's ear before continuing, \"I thought I told you to put another couple bags of ice in each of the coolers.\"\n\n\"Mom, I'm twenty-five years old. The ear flicking thing has got to . . . Owh!\" He covered his ears after his mother tweaked them a second time.\n\n\"You're never to old for me to take you out to the wood shed and teach you to mind your elders,\" the mother growled, but she really couldn't hide her affection. \"You can talk to your girlfriend later and . . . what's so funny?\"\n\nSadie was chuckling. \"Girlfriend? For this young pup?\"\n\n\"I'm not that young!\" Todd practically shouted. He regained his composure. \"Mom, this is Arbiter Sadie Hewitt. Sadie, this is my mom Anya.\"\n\nAnya raised one eyebrow. \"This is the Arbiter? No wonder half the pack in the Gravestones walks around with milk-boners half the time.\"\n\n\"Mom!\" Todd was blushed furiously. \"I . . . I'm going to go get the ice.\" He glanced at Sadie. \"We actually DO have a wood shed, so I'd better hurry.\"\n\n\"You raised him well,\" Sadie beamed.\n\n\"How so?\"\n\n\"He's terrified of you.\"\n\nAnya gave a toothy grin of her own. \"It's one of the simple joys of motherhood.\" She offered her hand. \"My brother's told us a lot about you. Have you met his wife?\"\n\nSadie wasn't surprised that Vlad hadn't brought up their argument with his family. \"Yep.\"\n\n\"What do you think.\"\n\nSadie made sure Vlad wasn't in listening range. \"Bitch. Bitch bitch bitch bitch bitch beeeeeeee-atch.\"\n\nAnya wrapped a strong arm around Sadie's shoulders and drug her through the house to the backyard. \"I think I like you.\" They emerged onto a massive deck overlooking a sizable chunk of forestland, winding up next to some massive barbecue pits. \"How do you like your steak?\" \n\n\"Show it what the fire looks like, then offer it up as an Azetc sacrifice.\"\n\nAnya just stared at her for a moment, grinning from ear to ear. \"Joseph!\" she shouted towards one of the cooks, \"One medium-rare with an emphasis on the 'rare' for our guest the Arbiter.\"\n\nNo sooner than the word 'Arbiter' had escaped her Anya's lips, Sadie found herself surrounded by throngs of werewolves asking questions. They weren't rude, but were rather just enthusiastic. \n\n\"Is it true you like to play basketball naked?\"\n\n\"How long have you been an Arbiter?\n\n\"What brought you to Gravestones?\"\n\n\"Do you prefer Star Wars or Star Trek?\"\n\nIt was like an overly enthusiastic and musky press conference. She was fielding questions left and right until someone thrust a Guinness into her hand. It was Todd.\n\n\"Uncle Vladimir says that it's your favorite.\"\n\n\"You and your uncle are gods among men,\" she muttered, biting the bottlecap off to get to her sweet nectar of life.\n\n\"Isn't that bad for your fangs?\"\n\n\"I've practiced.\"\n\nSoon, she was reminded why she loved hanging out with werewolves so much. When they had \"meetings,\" it was more like a party. They didn't stand on ceremony or stuffiness like vampires did. The only thing that they were missing was a couple of monster trucks . . . otherwise, it was the biggest redneck convention she'd ever seen. Even the werewolves in the three-piece suits would just kick back on a lawn chair, scratch themselves publicly and suck down cold beer and hot dogs. They lived out in the open rather than the closed spaces of her own darkworlder brethren. She had often wished that she'd been born a were. \n\nThey were just picking teams for an impromptu game of full-contact football when she heard her name echoing over the din. She saw Vladimir next to a distinguished looking though slightly vexed gentlemen. 'That's gotta be Ivan,' she thought. 'I'm guessing he didn't get his way.'\n\nShe made her way over, grabbing another beer and a bag of Fritos on the way. \"Hey Vlad!\"\n\nIvan smirked. \"Vlad?\"\n\n\"Don't encourage her,\" Vladimir growled. \"Sadie, this is Ivan Petrov, pack leader for the Northwestern United States.\n\nShe saw Ivan roll his eyes. He definitely felt formidable to Sadie, but didn't have the same presence that Vladimir did. Being around all these weres made it easier to discern how alpha each was in comparison to each other, and Vlad was radiating it. She began thinking about how she'd really like to see his wild side, then shook her head to clear the thought. That was when she remembered that she should tell him about seeing Teresa.\n\n\"Nice to meet you Arbiter,\" Ivan said, trying to offer a hand but getting caught in a big hug, letting Sadie wrap and arm around him so she could drink some beer over his shoulder before letting him go. \n\n\"Told you,\" Vlad said.\n\n\"Okay, she's as friendly as you said she was. I'm just not used to vamps being anything but --\" He stopped, not wanted to offend. That secured his place as a beta . . . an alpha wouldn't much care about hurting an outsider's feelings. Ivan was probably a good political liaison, but not as natural of a leader.\n\n\"Rude? Uptight? Full of shit?\" Sadie just kept filling in the blanks until both weres were laughing. \"Todd told be that the other packs have been making noise about the local vamps?\"\n\nIvan nodded, wiping tears from his eyes while trying to compose himself. \"Yeah. They've gotten a little cockier everywhere this Halloween season, but it's been really bad up here. They've been pushy in both the human and darkworlder political arenas. They're really upset about Turning restrictions, even though they're close to quota right now.\"\n\nSadie wondered how they would legally pull off all the Turns she thought that they were planning if they were really that close to their maximum limits. \"Vamps have been bitching about that for a long time.\"\n\n\"Not like this,\" Ivan replied. \"The elves are securely in their camp too, and they've convinced some of the larger covens that this is all just human prejudice against the 'higher' darkworlders.\"\n\n\"You going to their little pre-ritual ritual?\" Vlad asked, rolling his eyes.\n\n\"I wasn't planning on it. If I let the Captain or anyone else bully me into giving up my free time every time the bloodsuckers have a ceremony, I'd never have time to myself.\"\n\n\"I've never heard a vamp so blunt with their own kind,\" Ivan said.\n\n\"Good reasons, I assure you. Hey, I've been trying to figure out what all this attitude is about, so I'll let you know if I hear anything, okay? Or Vlad will --\"\n\n\"It's Vladimir!\"\n\n\"Sure thing Vladilicious.\"\n\n\"Sadie, I'm going to --\"\n\n\"Vladaroonie.\"\n\nIvan was laughing again and Vlad was barely containing it. But playtime was over.\n\n\"Hey Ivan, could I talk to Vladimir alone for a sec?\"\n\n\"Sure thing. I want to get in on the game before they start.\" He rushed over like a kid, waiting his turn to get picked.\n\n\"I've never seen football games with thirty or forty people per side,\" she said, looking at the throng.\n\n\"Sometimes we have two quarterbacks per team, or we've played with three teams in a triangle. We keep thinking that we need to propose werewolf football as a sport to the television companies, but no one ever bothers to write down the rules.\" He looked at her more seriously. She'd called him \"Vladimir,\" which probably meant something was up. \"Have you heard from Mel?\"\n\n\"No, but it sounds like she's got a lot on her plate. She moved in with Mary today.\"\n\n\"Wasn't that a bit . . . sudden?\"\n\nSadie shrugged. \"Far be it for me to discourage impetuous carnal actions, but it might have been. But since neither you or I are living HER life, let's just be happy for her. But I gave her something to go on . . . I think those may be Turnings that are scheduled.\"\n\n\"Turnings?! No possible way!\" Vladimir had to struggle to get his voice under control. With that many weres around, he was already pumped up and ready to growl. \"That many turns would put the vamps way over their quota.\"\n\n\"I know, but I went to the site of tonight's ceremony, and there are hundreds of shallow graves Vlad . . . Turning graves. It's a stretch --\"\n\n\"Have you asked Terrence?\"\n\n\"I tried calling on the way over but he wasn't picking up.\" She paused. She needed to say what she was going to say. \"Vladimir, does your wife work for Councilman Vallant?\"\n\nVlad stopped and stared. \"Vallant? No, she's a sales rep. Why?\"\n\n\"I saw that he was providing the fencing and security for the ceremonial site and . . . I went to his house and saw Teresa in the front door with . . . someone.\" How do you tell a man that you're on thin ice with already that his wife is --\n\nVladimir tensed up like he was going to go ballistic and then . . . nothing. Sadie watched his shoulders and face fall, and a look of sad familiarity flickered in his eyes. That was when she knew that he knew. To make matters worse, she doubted this was the first time.\n\n\"You just can't stay out of other people's business can you?\" he whispered.\n\n\"How many times?\" Sadie asked. \"You don't cheat on werewolves, because they can smell it. Good grief, do you have any balls at all?\" That was when Sadie realized that she was mad at him.\n\nVlad was growling . \"Watch yourself --\"\n\n\"Or you'll what? Snivel at me? For the love of darkness, you're just going to stand there and take it! She's cheating on you Vladimir, and you're going to let her treat you like YOU'RE the bitch?!\"\n\nVladimir shoved her, sending her tumbling backwards, but she had more than enough agility to roll with it and pop back up to her feet. Luckily they were far enough away from the others and their activities that no one had noticed.\n\n\"Damn it, you'll strike out at someone who actually gives a shit about you but you let her treat you like a hairy door mat?\" Sadie grabbed him and rammed him into a tree. 'Maybe I can knock some sense into him!' She growled, \"You really think this is what your friend wanted for you? What her brother --\" She actually flinched a bit when her reared an arm back as if he were going to separate her head from her shoulders, but the blow was held in uneasy tension. She let her voice soften. \"He wanted you to look after her, and you've done everything you could. But she's chosen her life and her side . . . maybe you should rethink yours. Some people can't be saved. Some people don't want to be.\" She stepped in front of him, watching the wolf struggle with the man just underneath the skin. \"You should be alpha. You should be happy and wild and free. Do you really want the rest of your life to be like this?\" Her phone started to ring, but before she answered it, she had one more thing to say. \"When you finally figure it out, I'll be waiting.\" She wondered if he understood what that meant. In her mind, Vladimir Koloff had become more than a friend.\n\n\"Hello? Mary? Calm down! What . . . what happened?\"\n\nDespite the tension, Vladimir wasn't thinking about the argument anymore. There was something about Sadie's voice and tone that chilled his blood.\n\n\"When?\" Sadie had gone deathly pale. \"Did you call the ambu-- . . . Okay, I'll be there.\" She hung up and looked at Vlad, her face lit up with fear.\n\nVlad had never seen her afraid. \"What happened?\"\n\n\"Mel's been in a car wreck,\" she said, hurrying towards the house, Vlad close at her heels. \"Someone rammed her car when she was heading to Mary's, then fled the scene. And the ambulances won't fucking go to New Plymouth because they're afraid wraiths or they think it's a fucking prank.\" She cursed under her breath at the sheer stupidity of some people. ",
        "\"You don't think it was an accident do you?'\n\nShe shook her head wildly. \n\nVlad glanced over at his sister who was fast approaching, easily able to discern that something was wrong. \"Where are you going?\"\n\n\"A friend's hurt,\" he explained. \"We don't know how bad.\"\n\n\"Fleet of foot,\" Anya said, reciting an ancient werewolf blessing of safe travel. \"Call us if you need anything.\"\n\nSadie wondered what would happen if Vlad really called on his people. If this wasn't an accident and he got mad enough, she was convince that there would be a war in the Gravestones before sunrise.\n\nThey both jumped in Sadie's truck, their quarrel forgotten as she peeled out, throwing her siren on the roof and pumping it up. She broke speeding laws, as well as the laws of physics it seemed in her efforts to get to her friend. \n\nWhen they pulled into New Plymouth, Sadie's throat swelled when she saw that cute little Mini crumpled in the ditch next to the road. She could see Mary hovering over Mel's body next to the road, and the wraith was glowing with rage. She wanted someone to strike out at . . . wanted Melissa to call out for vengeance so she could do what wraiths were created to do, but Mel was unconscious. \n\nSadie knelt by her friend as the wraith screamed in anguish. Mary had been alone so long, and now a friend and lover was slipping out of her hands.\n\n\"Mel,\" the Arbiter whispered, \"Can you hear me?\" The goth chick's vital signs were so weak, and there was blood all over the seat. It looked like Mary had ripped the door off to get her lover out. \"Mary, what happened?\"\n\n\"I don't know!\" the wraith shrieked. \"I heard a crash, but I can't teleport unless vengeance calls. By the time I got here, the other car was gone.\"\n\n\"Melissa, who hit you?\" Vlad asked, compassion overflowing in his voice.\n\nMel's eyes crept open, but only barely, and she gasped in pain. \"Duh . . . Dazza,\" she whispered.\n\n\"I'm going to kill him,\" Vlad said. \"I'll get 911 here.\"\n\n\"It's too late,\" Mary whispered, now hovering closer to Mel. \"I see her life force fading . . . she's dying.\" Then a look of pure desperation crept over that pale visage. \"Sadie, you can save her!\"\n\n\"I'm not a medic!\" Sadie replied, looking confused. \"I can't --\" She stopped. She knew what Mary wanted. \"Mary, I can't --\"\n\n\"Yes you can!\" The wraith grabbed the vampire by the neck and shoved her against the ground. \"You can save her! You can keep her with me! Damn you, you can't let her leave! She doesn't deserved to die for YOUR war!\"\n\nSadie was tired of being smashed around, but she was too terrified to do much about it. She wasn't terrified of Mary, but rather was scared to death of what the wraith was asking. Mary didn't understand . . . couldn't understand. She didn't know what Sadie really was.\n\n\"Please?!\" Mary's whisper was so heated and hungry that Sadie couldn't face her. The Arbiter felt a chill in her own heart as she watched her friend bleeding on the ground. \"I don't care about the law or the rules,\" the wraith continued. \"I just can't be alone again. I can't lose her. She's so beautiful --\"\n\n\"What's going on?\" Vlad asked, his phone still in his hand.\n\nSadie looked at Mary first. The wraith, in the matter of a week, had fallen in love with a twenty-something computer geek. It was a star-crossed romance . . . one in a million shot that they would ever meet. Sadie had given them to each other, and now she was being asked to seal the deal in blood. \n\n'But I've only ever done it once,' she thought. 'And my blood . . . it's tainted.' She was different than any other vampire walking the earth.\n\n\"Please?\" Mary asked again, her voice almost a whisper. She was fading, and Sadie was left wondering if the wraith had bonded with Mel in someway. She wondered if Mary would survive without the first love she had felt in centuries.\n\nSadie knelt beside Mel and lifted her head. Time was running short, so she would have to move quickly. \"Melissa Neron, meet my eyes.\" She did something she almost never did, certainly not in the presence of other people. She let her guard down a bit and let loose some of her presence, letting it wash over the dying girl's body.\n\nVladimir shuddered as a deep, chilling power seeped into the area. 'What the hell is . . . she's not going to--' \n\n\"Melissa, I need you to look at me.\" Sadie waited until somehow Melissa was able to comply. \"Look upon me, for I am Death. Do you fear me?\" \n\nMelissa shook her head. She knew of these words, for they had been spoken by the vampires at moments like these for thousands upon thousands of years. \n\n\"Look upon me, for I am Death. Do you accept me?\" Sadie waited a moment, and this time Mel nodded. \"Then let life end with death, and death begin with new life.\" The vampire was crying. She was scared out of her mind, and she couldn't even tell anyone why. She would tell Melissa . . . when she got the chance, she would tell her friend the whole truth. But that was for later. \n\nSadie leaned in, gently lifting Mel's bloody and broken body closer. She pushed Mel's head slightly to the side, exposing that slender, perfect neck. She saw where Mary had marked the girl, and set her fangs down just beside it. It had to be a clean puncture. Without further adieu, her fangs penetrated the surface of the skin and drank of the blood below. \n\nEven on the verge of death, Melissa's body reacted as if she were experienced great pleasure. The draw of the vampire was powerful, and Sadie . . . Sadie was special. She took more and more of her friend's blood into herself, letting it mingle with Sadie's own. She released her hold on Melissa's neck for just a moment. \"Now let the circle begin anew . . . take from me life, sleep, and be prepared to be born again.\" Then she bit down again, injected the mixed blood into Mel's bloodstream and let that mystical concoction take effect. Soon, Melissa would die, but it didn't mean that her story was over. Sadie held her friend who was also now, in the realm of the vampires, Sadie's daughter, waiting for the last of the girl's life to leave her. She had done it just in time. If the sharing of blood didn't occur before death, then the Turning wouldn't take. And at last, Melissa Neron rested in a temporary peace.\n\nSadie looked at Vlad. \"I need a grave,\" she whispered. \"Help Mary find a place. Put it in her yard. We'll need a sheet big enough for both of us to lie in --\"\n\n\"Both of you?\" Mary asked. She'd never heard of a fledgling vampire's master lying with them during First Day.\n\n\"Don't argue with me or question me,\" Sadie replied, fear still in her voice. \"Not this time.\" She knew she would have to answer to the law for this, but she would risk it. Mary had been right when she said that Melissa shouldn't die because of Sadie's personal feud. She looked at Vlad again. \"Make sure the grave is in the shade, but we'll need more shade still. Then, I want Dazza arrested and put in jail. I don't care where he is or who he's with. And I will take full responsibility for what has happened here,\" she added.\n\nVlad was mentally playing catch up, but that last statement hit like a brick. This was a rogue Turning, which meant that Sadie had put herself under the thumb of local authorities and the vampire council. And who knew what it would mean for her status as an Arbiter. She had risked everything to save Mel. 'She doesn't do anything with half a heart does she?' he thought as he followed Mary back to her home. He would dig a grave and then he had work of his own to do.\n\nEver so gently, Sadie picked up Melissa's body and carried it to Mary's house, where the wraith and werewolf were frantically tearing up earth in a backyard flower garden, trying to create a daytime resting place for the newly dead. When a vampire was Turned, he or she had to spend the first day of undeath under the earth, and Sadie intended to stay that day with her. She didn't understand why vampire masters and mistresses never did that anymore. To her, it was no different than leaving a day's lover before evening fell . . . it took away the magic of the thing. The thought of being buried, even partially, filled her with dread that most vampires couldn't even imagine. The very notion brought back memories she had fought to suppress: blood and decaying fleshing filling her nostrils and throat. She was possibly the only vampire walking the earth who suffered from severe claustrophobia, and for good reason.\n\nMary and Vlad had dug a grave in record time, six feet long and only about three feet deep. Vlad had actually taken his shirt off while digging, and Sadie's eyes caressed the lightly furred muscles of his chest and abdomen. She was appreciative, but past the point of lustful thoughts. \n\n\"A thin layer of dirt on top of the sheet,\" Sadie said, her voice quivering, \"That's all we need. Then throw a tarp over to keep out any direct sun . . . I don't know how resistant to sun she'll be.\"\n\n\"Could she inherit your immunity?\" Mary asked.\n\n\"It doesn't work like that and you know it,\" Sadie practically snapped. By the dark that hid behind all things, she was afraid. \"Sorry.\" She saw Vlad laying a blanket down in the grave, apparently hoping to make the experience a little more comfortable. She appreciated his efforts, though she knew they would be mostly in vain. Humans had romanticized this process to make themselves feel better. Sadie had seen it done many times, but it was only the second time she had ever Turned anyone. And this time was much different than the last.\n\nShe looked at Mary. \"Each vampire is unique.\" Sadie jumped down into the grave, then met her friends' faces with tears in her eyes. \"She'll be different,\" she said. \"She'll be different than other new vamps.\" Sadie locked eyes with Mary. \"She'll be stronger. Will you still want her then?\"\n\n\"Of course! She is a servant in name only. I would dedicate my existence to her happiness,\" Mary replied. A small, sick part of her was happy about this. Now, Melissa would not grow old and die. Mary would never have to be alone again. She hated thinking such things, but could not deny the power of the idea.\n\n\"Why will she be different?\" Vlad asked. He had seen a few Turnings, but there was something different here . . . some kind of underlying force that he had never experienced before.\n\n\"Because of me.\" Sadie left it at that, motioning for Melissa's still form. Mary lifted her lover, staring at that face that would now be young forever. She kissed Melissa's cool lips then handed her to Sadie, and the vampire and vampire-to-be lay low in the grave. \n\n\"I want Dazza,\" Sadie directed to Vlad. \"I want his head on a pike for what he did, and I want Frost. You know that Dazza wouldn't have done this alone. Somehow he found out that we had the papers.\" A look of panic crossed her face, but before she could speak --\n\n\"I'll find Terrance and warn him,\" Vlad said. \"If this is the way they want to play now, then that's the way we'll play it.\"\n\nLooking at him, Sadie didn't see the weak and spineless wolf she'd accused him of being earlier. He was alpha. He was a warrior, and the moon blessed him with its light. She smiled at him, the lay to rest next to Melissa, her mouth near the girl's neck. By providing blood over the course of the day, she could give the girl a jump-start on her new life.\n\nMary lay a blanket over their bodies before Vlad covered them up with about six inches of soil. Neither of them saw Sadie skin jumping under the blanket as shovelfuls of dirt landed on the two women. After a few minutes, the women were secured in their resting place.\n\n\"I will stay with them,\" Mary whispered. \"The sun has no effect on me. When they wake, Melissa may call for vengeance,\" the wraith replied, her whisper escalated into a growl, \"and for once, I will be happy to answer it.\"\n\nVlad pulled his cell phone out of his pocket. \"There's going to be trouble,\" he said. \"Turning a vamp without authorization could mean death for both the old and new vamp if the authorities find out. If we can't trace this back to Frost, he'll be the one to make the decision. But I'll buy us some time,\" he said, flipping the phone open and turning it on. \"Anya? Yeah, things are bad. Find Ivan and put him on. I need the pack's help with something.\"\n\n--------------- --------------\n\nClose to sundown . . . \n\n--------------- --------------\n\nSadie had gotten very little actual rest. When she was afraid, her heart began beating as an involuntary reflex, and the sound of it had kept her awake. She wanted out of the ground and to feel clean air against her skin. She could feel the draw of darkness approaching, and that comforted her somewhat.\n\nOver the last ten hours, she had periodically given Melissa injections of blood while drawing out some of the woman's decaying mortal blood. Melissa would not have the time to come into her powers the way most vampires did. She would already have enemies. \n\nMelissa's body shifted and the girl groaned lightly. The sun was setting, and she was being born anew from the earth. \n\n\"It's okay,\" she whispered, her voice filling the tiny amount of air they had available to them. \"It's all right. Don't panic. You're one of us now,\" she continued to croon, willing her voice to be calm and exerting her presence, feeling the girl's body relax next to her. \"You're my child and my friend, and you are safe we me for now.\"\n\n\"I . . . remember,\" Melissa gasped, the last of the oxygen in her lungs escaping. She would never need it there again. \"I remember what happened.\" She could feel Sadie's body against hers. \"You Turned me. I didn't think . . . why?\"\n\n\"I couldn't let you go,\" Sadie replied. \"Mary wouldn't survive. I could never forgive myself for letting them --\"\n\n\"Dazza!\" Melissa shouted. \"He hit me!\" The previous night's events came rushing back to her. \"I was on my way to the were meeting. You were right,\" she whispered heatedly. \"It was a Turning schedule and . . . and the list of people they're planning on Turning --\" She stopped when she heard Sadie chuckle. \"What?\"\n\n\"You're a tenacious bitch, you know that?\" Sadie replied. \"You just died, and you're still doing math in your head.\" Then she remembered that she needed to tell Melissa the truth. She felt the earth shift above them. Someone was coming. \"Melissa, I need you to listen and I'm begging you, do as I ask.\" The desperation in her voice almost choked her.\n\n\"What?\" Mel was actually surprised that she was clear headed. New vampires were supposed to be disoriented, and she wondered if it was Sadie's presence that had made the difference.\n\n\"You know how you've been wanting to hear my whole story? Well I'm going to tell you, but not right now. There's not enough time.\"\n\nMel was more than a little scared now. \"What does that have to do --\"\n\n\"You're not going to be like other new vamps. You'll be stronger than some vampires much older than you. Don't let anyone but me drink your blood. Don't even let Mary bite you until I've explained everything. I'm serious Melissa. You don't know what's running through your veins.\"\n\n\"Are you . . . some kind of experiment? Some vampire grown in a lab or --\"\n\n\"Just trust me,\" Sadie replied. The cover was being lifted above them. \"For now . . . welcome to the darkworld.\"\n\nThe two women looked up, the night-sky draped overhead where just moments earlier, dirt had been.\n\n\"It's beautiful,\" Melissa murmured, her irises expanding to take in more light than she ever could have before.\n\nSadie had been told that a new vamps first look at the stars was like glimpsing heaven. For her, it had been something else entirely. For her, it had been hell. But let Melissa have her moment where her blood sang in a non-beating heart and where the sky itself held unparalleled promise. Melissa was now immortal.\n\nThen Sadie noticed that, along with Mary and Vlad, there were several unfamiliar faces looking down. She thought she recognized a few of them from the were gathering. She stood up, and saw a dozen or so werewolves nearby. They all looked unnerved at being so close to a wraith, but yet here they were. They were briefly distracted as Mary descended on Melissa, embracing her dark lover like a dream that she thought had been lost. Sadie's gaze drifted back to Vlad.\n\nHe was standing there in tactical riot gear, and even Sadie would've been afraid to tangle with him. He was so alpha that it filled her senses, and she could only imagine what it must feel like to the other weres.\n\n\"You took control of the pack, didn't you?\" she whispered.\n\nVlad nodded. \"I fought Ivan, but it was mostly ceremonial. He bowed out and now he's my second.\" His face was unreadable to Sadie.\n\n\"Why --\"\n\n\"Because I'm tired of the vamps around here thinking they can get away with anything,\" Vlad growled. \n\n\"Are you here as a pack leader or a cop?\" she asked.\n\n\"Both. We crashed the vamp party and arrested Dazza. There was some big brass there, Sadie,\" he said, looking angry. \"I saw both our senators, at least one congressman. Judges --\"\n\n\"That's what I was going to tell you!\" Mel said. \"Almost everyone that's going to be Turned on Halloween is big time, including Senator Trefauld!\"\n\nSadie's eyes shot open. Senator Trefauld was the chair of the Senate's Darkworlder Oversight Committee. He was instrumental in controlling the allowable Turn rates in the United States. Normally this position wasn't allowed to be held by a non-human.\n\n\"He just got re-elected didn't he? He's got five and a half years.\"\n\nVlad growled. \"There's a bunch of ways to get rid of him, but not until he'd done a lot of damage.\"\n\nMelissa finally released her embrace on Mary, but the two women kept their hands clasped. \"Like increasing the number of vampires that you're allowed to create or . . . Sadie, you . . . Are you going to be in trouble? For Turning me?\"\n\nSadie felt cold. \"I don't know. Technically, I should've been allowed a bunch of Turns by now by vampire law, but you're always supposed to petition the council. If the council felt that I made an unwise decision, you could be killed and I could be killed or imprisoned. And if Frost was behind Dazza's attack, you can guess how that vote is going to go.\" She looked from Mary to Melissa. \"I'd advise planning to get out of the country. The rules down in Mexico aren't nearly as strict.\" She looked at Vlad. \"Unless the law stops you.\"\n\nVlad shook his head. \"Justice should be hard and swift, but not blind. I just called in my boys to keep everyone away until you were back up and on your feet. But what about you? As an Arbiter --\"\n\n\"As an Arbiter, I'll stand by my actions.\"\n\n\"But that means that even if Frost shows 'mercy,' that the Bureau could still put you in jail for a long damn time.\" \n\n\"It's not fair!\" Melissa said. \n\n\"No, it isn't. But I'll do whatever I need to in order to keep you safe.\"\n\nVlad looked grim. He hated this. He'd exert whatever influence he could with the pack and the police department, but the Arbiter Bureau was way over his paygrade. \"Sadie, New Plymouth is surrounded by cops from other districts and there's a rep from the mayor's office. In other words, from Frost. We got nothing to pin him on, and Dazza isn't talking. He's all lawyered up. They know about Melissa. I have no frickin' idea how, but they know. And Frost is furious about us screwing up his announcement ceremony.\"\n\n\"Breaks my heart,\" Sadie said. Her life was fucked up beyond all recognition right now, so she wasn't too concerned about Frost's feelings. \n\n\"Arbiter,\" came a quite voice from behind her. She spun and looked. \"Devlin?\"\n\nShe hadn't seen Devlin since his special assignment to the mayor. \"What are you doing here? Aren't you the mayor's rep?\"\n\nThe young officer nodded. His gazed became transfixed on Melissa, who seemed to glow with her newfound power. She glared at him, using her normal stoic gaze as a weapon until he looked away. \"They thought I would be the only one you might actually talk to. Lord Frost is mad, just like Officer Koloff said.\" He looked down. \"You really think that Frost was behind this?\"",
        "\"Dazza doesn't take a dump without permission from Frost, so yeah.\" Sadie was angry. She glanced at Vlad when his radio screeched and he had to step away to take a call. \"Think about that,\" she said coolly. \"Melissa is your friend, or at least she was. And Frost would have her killed just because he didn't want us to find out who all he was Turning.\"\n\nDevlin looked angry. \"I never would've had anything to do with this if I thought he'd hurt anyone. All I want . . . all I want is what she has,\" he said, pointing at Mel. \"What you wouldn't give me.\"\n\nVlad walked over, his face even darker than before. \"Sadie, they just found Terrence McDermott. He's dead. His body washed up down river about three miles.\"\n\nSadie screamed in deep, rich anger. She jumped to Devlin and lifted him up by his shirt with just one hand. \"Imagine that! The guy who clued us into Frost's plans is suddenly dead. A fucking coincidence?\" She dumped Devlin into the open grave.\n\nDevlin looked shocked. \"No, that's not possible,\" he muttered. \"He was my friend. He was so cool to me.\"\n\nSadie was fighting back tears. A friend had been murdered, and another friend had almost met the same fate. The law she had represented would soon close in around her neck, and she would be unable to stop whatever scheme Frost had cooked up. \"Why is he doing this?\" she asked to the cool night wind.\n\nDevlin stood up and looked around him. Being in the grave humbled him beyond anything he could comprehend. \"I'm sorry Sadie. I'm so sorry.\"\n\n\"Sadie, there's one other thing,\" Melissa said, looking at Devlin. \"The second row of initials were the people being Turned, but the first row were the vamps doing the Turning. My computer kept spitting back the same name for the person chosen to Turn Devlin.\" The girl's eyes were wide open.\n\nSadie felt an unnatural chill in her skin and bones. \"Who?\"\n\n\"Solomon, the Blood Saint.\"\n\nSadie stepped back, every nerve ending in her body going dead. She fell to her knees. Solomon was the most revered vampire in the world, and had walked the Earth for seven thousand years. And to Sadie, everything began to make sense. She knew what was happening. \n\n\"No,\" she whispered, fear and hatred seeping into every part of her body. \"Not again.\" Then she lifted her voice to an uncaring heaven and screamed . . . and screamed . . . and screamed.\n\n------------- -----------------------\n\nTo be continued . . . "
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "lesbian sci-fi",
        "vampire",
        "werewolves",
        "sci-fi",
        "fantasy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/breathless-ch-05"
}