{
    "title": "The Gathering Ch. 04",
    "pages": [
        "Please read the first three chapters if you haven't, this finale will make more sense if you do. \n\nFor those who have stayed with my story, thank you. I hope you will enjoy reading this last story in the Trilogy as much as I've enjoyed writing it.\n\nAs usual, constructive comments and emails are more than welcome and appreciated.\n\n***********************\n\nWe've done a lot of work in under a year, Dillon thought looking back at the new ranch house as he walked around the clearing with his morning coffee. Especially since we got started so late in the year after buying the place. \n\nIt had been late September by the time they'd bought out the Andersons. After getting their wagons and possessions from Colorado Springs, Dillon sold the mules to the freight company in Fountain. One of the Prairie Schooners was sold to a family headed to California and they kept the other one for a heavy haul wagon for the ranch.\n\nAbout three weeks after they took over the ranch, Red and Josh came over to help lay out the boundaries and foundations for the new house, barn and corrals. Sarah, Danni and the children were talking and giving advice to Elizabeth about what to expect that winter.\n\nOso was looking over the trees nearby to see which ones they could use for the buildings; he had Ethan with him. They came back to the house place at a high lope. \"Lots of riders comin,\" Oso said. \"Looks like horse soldiers.\"\n\n\"Sheriff Kennedy is with them,\" Ethan added.\n\nA cavalry troop of twenty men, led by a young Lieutenant and a grizzled older Sergeant rode over to where Dillon and his friends were working. The Sheriff rode beside the young commander. Josh and Red heard Dillon mutter to himself, \"Damn blue bellies,\" as he stood to face the soldiers. \n\n\"Dillon, this is Lieutenant Smalley,\" Kennedy said. \"He and his men are tracking Running Wolf. Lieutenant this is Dillon Gallagher, the owner of this ranch.\"\n\n\"And who are these two?\" Smalley asked with an officious tone.\n\nJosh saw Red bristle at the young man's tone. \"I'd be Red McCall and this is Josh Kelley, if it's any concern of yours,\" Red answered.\n\nIgnoring Red, Smalley looked at Josh. \"You're the one that's friendly with that savage, Running Wolf.\n\n\"Yes Lieutenant, I consider Running Wolf a friend,\" Josh replied. \"Why do you ask?\"\n\n\"My men and I are charged with bringing that renegade and his people to the reservation. It's your duty to help us accomplish that. You will guide us through the north country to where the Indian is hiding,\" Smalley ordered. \n\nThe Sergeant said in a low voice, \"Easy Lieutenant. You can catch more flies using honey than using vinegar.\"\n\n\"Quiet Sergeant, I'm in command here.\" Turning back to Josh he continued, \"Get your horse and supplies; we'll leave as soon as you're ready.\"\n\nJosh waited for a few seconds before he answered. Got to watch myself, he thought. I don't want to get Red and Dillon any more worked up than they already are. He didn't like Smalley's manner either.\n\n\"I'm not going with you Smalley.\"\n\n\"Sheriff Kennedy tells me you didn't serve your country during the War Between the States; he warned me that you don't care for the U. S. Army very much. Are you a coward sir? Is that why you won't guide us to Running Wolf?\"\n\nFirst Red and then Dillon tensed and Red took a step toward the cavalry man. Josh put his arm out and stopped him. He turned back to the Lieutenant. \n\n\"It's none of your concern as to why I didn't fight in that idiotic war,\" Josh said, his voice tight with anger. \"But I will give you my reasons for why I won't do what you want Smalley.\" \n\nRed was trying to walk around Josh to get at the Lieutenant. \"Take it easy Red,\" Josh said putting his hand on his friends shoulder.\n\nDillon stepped forward to Josh's side. \"Both McCall and I served in the war Lieutenant.\" Smalley looked Dillon's way. \"McCall served with the 29th. Texas Cavalry at First Manassas in '61 and I served with First Virginia Cavalry. Care to make something of that Blue Belly?\"\n\nJosh put his hand on Dillon's arm and pulled him back. Dillon resisted for a few seconds and then stepped back; still glaring at Smalley.\n\n\"As I said, Running Wolf is my friend; what's more he's my blood brother,\" Josh replied as he tried to calm Dillon. \"I won't help you track him down like an animal.\" Josh stopped and looked hard at the young Lieutenant. \"Unless you're very careful, you'll get yourself and your men killed. Of course Running Wolf may just lead you around until winter sets in and then leave you out there to die. If you do corner him and force him to fight, he will kill you.\"\n\nJosh paused for a bit and said, \"Let him be Smalley. He hasn't raided any white men or their ranches. All he wants is to be left alone.\"\n\n\"I'll remember this incident sir,\" Smalley said. We'll see about your cowardly refusal to help when I return.\"\n\nJosh couldn't stop Red this time. \"If you care to step down we can see about that coward stuff right now, Sonny,\" Red challenged. \"I really wish you would because you may not come back and I'll miss my chance at teachin you some manners. Running Wolf will leave you to rot in the snow.\"\n\nKennedy guided his horse in between Smalley and Red. \"Lieutenant, I think you'd better leave while you still can,\" he suggested.\n\nThe young Lieutenant hesitated and then asked, \"Are you coming Sheriff?\"\n\n\"Nope, don't reckon I will. I agreed to introduce you to Kelly and now I'm done with ya.\"\n\nSmalley looked at Josh, Red, and Dillon with a scornful look before leading his troop away. The Sergeant was the last to leave as he stayed behind to make sure the troopers followed orders. He turned to Josh and shrugged his shoulders. \"Sorry gents,\" he said.\n\n\"You're gonna die out there Sergeant,\" Josh warned him.\n\n\"Maybe so Mr. Kelly, but I'm a soldier and I have my orders.\" The Sergeant turned and followed the troop north.\n\nRed looked at Kennedy after the cavalry had gone. \"Why are they makin such a fuss over Running Wolf? He's never made any raids around here.\"\n\n\"Colorado is gonna become a state in the next two years or so,\" Kennedy replied. \"The Territorial Governor wants to be the first Governor of the new state. So he's using the Indians to gain support from the voters.\" Kennedy paused as said, \"All he's gonna do is get some soldier boys killed. Oh well, not my concern. See y'all; I'm headed back to town.\"\n\nIt was about two months later that Dillon heard Lieutenant Smalley and his men returned to Fountain and then on to Denver. Smalley lost a couple of toes and a finger to frost bite and six of his men died in the high country. Word was that the troopers never actually saw Running Wolf. They just followed his trail around the mountains until winter set in and trapped them.\n\nMeanwhile Dillon, Elizabeth, Eleanor, and Oso had each filed a homestead application for land on the far side of the mountain pass. Dillon was thankful for the bequeathal from his family which made this expense possible. \n\nThey laid out the corner markers on four sections of land and filed their homestead claims. Four small cabins were quickly built to meet the law's provision for improvement on the land. Ethan would also file an application when he turned 18.\n\nThe new house faced south and nestled at the base of two mountains that formed a sort of elbow. They acted as a natural wind break to protect the house from the cold north winds. The house was built using logs and timber from the ranch. They had cut down some oak trees, took them to the saw mill in Fountain, and had them cut into planks for flooring and shingles.\n\nJosh and Red had offered to help with the building. Dillon thanked them but told them they had a full time job taking care of their own ranch. \"Besides, I think you've got your hands full with that new baby boy at your place Josh. I think Danni needs your help more than we do.\"\n\nRed laughed. \"Danni says he's more hindrance than help. Says he's useless while Clint is this young.\"\n\n\"Not my fault that I never got the hang of puttin on diapers,\" Josh protested with a laugh. \n\nHowever, Dillon used Josh and Red's knowledge and experience in the area to hire two handy men to help with building the house, the new barn, and the two corrals. It was an added expense but they had the house under roof before the first snow fall. The winter weather didn't affect the work on the interior of the house. \n\nThey covered the window openings with canvas or oil paper until the windows and doors they ordered from Colorado Springs arrived. Dillon hired a wood carver from Colorado Springs to hand carve a set of double doors for the main entrance to the house. Everyone, including the hired hands, lived in the Anderson's old ranch house until the work on the house was done; it was a little crowded for six weeks or so.\n\nThe new house was two stories with four large bedrooms on the top floor. The main floor just had two rooms. The kitchen was large and open to the eating area; the other room was L shape and ran the length across the front of the house. The leg of the L was used as an office and for storage.\n\nEleanor was the one that settled the debate about a name for the ranch. Someone suggested \"Twin Peaks\" because of the two mountains just north of the house site. Another suggestion was \"South Fork\" because the south fork of Black Squirrel Creek flowed through the property. And one last proposal was \"G & E\" for Gallagher and Edwards.\n\n\"What do you think we should name the ranch Momma?\" Elizabeth asked Eleanor. \n\nShe hesitated for a few seconds and softly quoted:\n\n \"And in the fury of this darkest hour\n I will be your light\n You've asked me for my sacrifice\n And I am Winterborn\n\n Within this moment now\n I am for you, though better men have failed\n I will give my life for love\nFor I am Winterborn.\"\n\n\"I think we should call the place Winterborn,\" Eleanor replied. Turning toward Dillon with a warm smile she continued, \"You were willing to sacrifice your life for your family. First you faced that hired killer Wilson, you were wounded but still you went on and faced Cassidy and his men.\" She smiled and touched Dillon's arm. \"Without you we wouldn't have this wonderful new home. We should call the ranch Winterborn.\" \n\nDillon smiled and had to gather himself before he said anything. \"I think it's a fine name, Eleanor.\" \n\nElizabeth, Ethan, and Oso agreed and the ranch became Winterborn. Elizabeth sketched a brand for their cattle. It was a large capital W and a small open triangle on each side to depict the two mountains that guard the house.\n\n**********************\n\nElizabeth walked across the clearing and joined her husband; she was bundled up against the morning chill. She was wearing pants and carried a coffee pot. It was late April and spring was on the way but the mornings were still cold until the sun got higher in the sky. \n\n\"Nice pants,\" Dillon teased her.\n\nElizabeth had started to follow the example set by Sarah and Danni and wore men's pants when she was working around the ranch. In the evening she would change into a dress or a split riding skirt. She said she didn't want Dillon to forget that he was married to a woman and not a ranch hand.\n\n\"Thought you might like a refill but if you're going to be mean to me I might not give you any,\" she replied with a smile. Turning back to look at the house she said, \"We did a good job. It's a fine house.\" \n\nDillon took a sip of the fresh coffee and nodded. \"Never seen one I'd rather live in.\" He grinned and added, \"Okay, no more teasing.\" \n\nElizabeth smiled and gave Dillon a side long glance. \"It a good place to start a family, don't you think?\"\n\nReturning her smile Dillon said, \"Now that's a fine idea Mrs. Gallagher.\" He grabbed her in a bear hug; she laughed and put an arm around his neck. They stood holding on to each other for a minute.\n\n\"Y'all save that for later,\" Oso laughed yelling at them from the porch. \"We got work to do. That new corral won't build itself.\"\n\nDillon and Elizabeth walked back to the house. \"The corral will have to wait until tomorrow Oso. We're going into town to see Eleanor and pick up some supplies,\" Dillon said.\n\n\"Tell the Senora that I miss her and will see her next week,\" Oso replied. \"I'm gonna stay and work on a couple of things while you take it easy.\"\n\n\"You sure amigo? We'll probably have supper with Eleanor and spend the night.\" Dillon looked at his friend and added, \"You don't have to do all the work. Take a day off and come with us.\"\n\n\"Next week I'll make the supply run and spend some time with the Senora,\" Oso replied.\n\nDillon nodded and called for Ethan. The youngster came from the barn riding his horse, Shelley. He was leading a pack horse; he was ready to go see his mother. Ethan split his time between the ranch and with his mother in Fountain. He was going on fifteen and was considered a young man but he still wanted to spend time with his mother. He had already saddled Balin and Sandy for Dillon and Elizabeth and hitched them to a corral post.\n\n\"Been waitin on y'all most of the morning,\" Ethan said with a grin.\n\nThe three waved good bye to Oso and started their ride to Fountain. They arrived in town in time to meet Eleanor for lunch. \"I have to get back to the school in 30 minutes,\" she told them. \"If I give my students too much time for lunch, I'll have to retrain them,\" she added with a smile.\n\n******************\n\nOn their first supply run back in September after taking over the ranch, Eleanor mentioned to Steve Mitchell, the owner of the general store, that she had been a school teacher and hoped to go back to teaching one day.\n\n\"You should talk to Nancy Larson, Mrs. Edwards,\" Mitchell told her. \"She's our school teacher but she wants to retire; the only reason she's still teaching is that the town hasn't been able to replace her yet.\"\n\nEleanor, with Elizabeth tagging along, had gone to the school house to talk to Mrs. Larson; the two women had talked for over an hour. Nancy asked a several questions about Eleanor's qualifications and experience. She sent the children home early and went with Eleanor to talk to the Mayor. Before the afternoon was over, Eleanor was the new school teacher and secured a room in a very nice local boarding house. \n\nEvery weekend, weather permitting, Eleanor would come out to the ranch to help and to spend some time with her family. Ethan sometimes spent the week in town with his mother when the weather was bad. Once for a period of almost three weeks the snow and the cold winds kept Eleanor and Ethan in town.\n\n*******************\n\nDillon, Elizabeth and Ethan met Eleanor in the hotel dining room for supper. As they were having supper, Sheriff Kennedy came over to their table. \"Mrs. Edwards, I just got a telegram from the town Marshal in Colorado Springs. I got some bad news for you.\"\n\n\"What is it Sheriff?\" Eleanor asked, alarmed by the Sheriff's tone and the look on his face.\n\n\"There was an attempted bank robbery and two people were shot and killed. One of them was your brother in law Ted Clark.\" Kennedy hesitated and added, \"Sorry ma'am.\"\n\nEleanor was shocked at the news. Dillon took her hand and Ethan got up and stood behind his mother with his hands on her shoulders. \n\n\"What happened Sheriff? You said it was an attempted robbery,\" Dillon requested more information.\n\n\"Well, Bill Simpson and his gang tried to rob the First Colorado Bank on the south side of town. One of the gang, James Butler, had a wanted poster out on him and he was recognized as he rode into town. When the gang rode up to the bank they were greeted by the Marshall, his two deputies and about a half dozen town folk. The gang wouldn't surrender and a gun fight broke out.\" Sheriff Kennedy stopped for a few seconds; he dreaded telling Eleanor what happened next.\n\nDillon saw his hesitation, patted Eleanor's hand and said, \"Go on Sheriff. How did Ted get shot?\"\n\n\"I guess Mr. Clark heard the gun fire and came out of the bank to see what was going on. The gang must have thought he was another lawman and shot him down; one of the town's people was killed too. The Marshall and a posse followed the gang but lost them south of town.\" Sheriff Kennedy tipped his hat and said, \"Real sorry about your loss Mrs. Edwards. If there's anything I can do for you, please let me know.\"\n\nEleanor stood quickly and said, \"I have to go to Tillie. She must feel so alone right now.\" She started to leave but Dillon stopped her.\n\n\"You can't ride at night. We'll leave at first light and can be there before midmorning,\" Dillon suggested. \"Elizabeth and I will ride with you; Ethan can head on back to the ranch.\"\n\n\"I'll go with Momma,\" Elizabeth said. \"You and Ethan go back to the ranch.\"\n\nOver hearing their discussion, Kennedy said, \"I suggest you ladies take the stage. It'll get you there almost as fast as you riding and you won't be alone on the trail. Simpson and his boys are still out there somewheres. Stage leaves at 7 tomorrow morning; that's just after first light.\"\n\n\"Thanks Sheriff, that's a good idea,\" Dillon replied. \"Elizabeth why don't you spend the night with Eleanor; Ethan and I will bed down here at the hotel and come get you in the morning.\" Elizabeth nodded, kissed Dillon, hugged Ethan and walked Eleanor back to her boarding house.\n\nAt 6 the next morning as Dillon and Ethan left the hotel to go to the boarding house. Eleanor and Elizabeth were already at the front door of the hotel. They didn't even have time to greet each other when the stage pulled up in front of the hotel; it almost an hour early. \n\nThe driver tipped his hat to Eleanor and said, \"Reckon we can get an early start if you're ready ma'am. The Sheriff told me what happened. Climb aboard and I'll get you to Colorado Springs pretty damn quick.\"\n\nEleanor nodded her thanks, hugged Ethan and Dillon and he helped her into the stage. \"If she wants to, Tillie is welcome to come stay with us. The house is plenty big enough and she might want to be with family,\" Dillon suggested. Eleanor smiled her thanks. Elizabeth kissed Dillon, ruffled Ethan's hair, and joined her mother. \n\n\"I'll send Tillie a telegram as soon as the agent opens and let her know you're on your way,\" Dillon told them. We'll get Josh and Red to keep an eye on our place and join you by the end of the week.\"\n\nThe stage driver whipped up the horses and started toward Colorado Springs. Dillon and Ethan watched until the stage was out of sight. \"C'mon, we'll get some breakfast, send the telegram, and buy the supplies before we head back,\" Dillon told the youngster. \"Might as well make the trip worthwhile.\"\n\nThey were waiting at the door when Mitchell opened his store; Dillon explained the reason for the early visit. He and Ethan with Mitchell's help quickly gathered and loaded the supplies they needed. They stopped at the telegraph office and then headed back to the ranch.\n\nDillon kept the horses at an easy cantor for close to thirty minutes and then slowed to a walk for ten minutes to give the horses a breather. Balin wasn't happy with the slow pace; he nodded his head up and down and shook it from side to side to show his disapproval. Ethan's horse Shelley wasn't happy either; you could see that she wanted to run by the way she pranced as she walked.\n\nEthan laughed at his horse. \"Shelley don't understand why we're going so slow,\" he said to Dillon.\n\n\"Balin wants to run too. Maybe we'll let them run a little after we get back and rid of the pack animals,\" Dillon suggested.\n\n\"What will Aunt Tillie do, now that Uncle Ted is gone?\" Ethan asked; he liked his Aunt and was worried about her.\n\n\"I don't know,\" Dillon replied. \"She's welcome to move down here with us if she likes.\" He paused for a bit and said, \"Let's get a move on. The sooner we get back to Winterborn, the sooner we can head up to Colorado Springs.\"\n\n**********************",
        "The seven men, all that remained of the Simpson gang, were riding hard and their horses were tiring quickly. They'd been riding cross country all morning trying to put some distance between them and the posse that had followed them yesterday from Colorado Springs. If we don't find some fresh horses soon we'll be walkin, Bill Simpson thought. How the hell did that Marshall know we were gonna rob the bank? Hell, we might have talked our way out of it if Butler hadn't started shootin. \n\nOur plan sure didn't go the way we thought, Simpson said to himself. We started with eleven men and we're down to seven and one of them is wounded; don't know if he can keep up. Might have to take his horse and leave him behind.\n\nSimpson and his men pulled up at a small creek to give the horses a short rest. They hadn't been the best mounts to begin with and they were about done in. The only reason they'd lasted this long was the fact that they got a chance to rest last night. The gang had lost the posse last evening in the arroyos and washes south of Colorado Springs.\n\n\"We need to change horses,\" Charley Birch said. \"These won't last the day.\"\n\n\"I know that Charley,\" Simpson replied with sarcasm. \"We'll head for a ranch I know of, about three miles from here. Owned by an old man named Anderson; I worked for him a spell a couple of years ago. It's just him and his wife so we'll get horses from them and then head southwest toward Arizona.\"\n\n\"What if they won't sell us any horses?\" Charley asked.\n\nSimpson \"I don't plan on buying. We'll take what we need. Let's get going. Don't want that posse pickin up our trail.\"\n\n********************** \n\nOso heard riders coming fast and stepped out onto the porch with his big mug of morning coffee. Visitors weren't common, especially this early in the morning. Seven men pulled up in front of the ranch house; they rode in close to the front porch. One of them is hurt, Oso thought as he saw a man slumped over in the saddle.\n\n\"Morning,\" Oso said. \"Something I can do for you? You got a man hurt there?\"\n\nAll the men looked at the one in the middle; it was obvious that he was the leader. The man asked, \"Where's Tom Anderson?\" \n\n\"He and his missus moved to California about seven months ago. This is our place now. Can I help you gents?\"\n\n\"We need some fresh horses,\" the man answered.\n\n\"Sorry, can't help ya. Don't have any animals for sale,\" Oso replied. \"I can let you have some feed and water for your horses though.\"\n\nSimpson rode his horse closer to the porch and Oso; he stopped at a little over ten feet away. \"You don't understand,\" he said. \"Wasn't talkin about buying, we're takin what we need.\" Simpson's hand went to the pistol at his hip.\n\nBefore he could get the gun clear, Oso threw his cup at the man and moved back toward the doorway. The cup was the one that Eleanor had used to feed Oso hot chocolate the first night that John Edwards had brought him home. It was a very heavy clay cup and it hit Simpson on the head spraying hot coffee all over him. Charley Birch had drawn his gun at the same time and fired at Oso, knocking the big man through the door back into the house.\n\n\"Charley make sure he's done for,\" Simpson ordered. \"We'll check the corral and barn for horses.\" Simpson and the rest of the men turned toward the corral.\n\nAs they turned Birch said, \"Okay Simpson. I'll see if there's money or anything we can use too.\"\n\nBirch dismounted and with his pistol drawn slowly stepped onto the porch heading for the house. A shotgun blast rang out and Birch was hit in the chest, knocking him off the porch. He was dead before he hit the ground. The second shot from the scatter gun knocked another man off his horse; then a rifle shot finished him off. \n\nSimpson and his men had gathered up the three stock horses in the corral but turned back toward the house and began firing at the doorway and the windows. The wounded man was knocked out of the saddle as rifle shots came quick and fast at the gang, kicking up dirt all around them. \"Let's get the hell out of here,\" Simpson yelled. He and his three remaining men drove the stolen horses away. Several rifle shots followed them.\n\n*******************\n\nDillon and Ethan had just come into the big clearing in front of the ranch house at midday. They were just inside the trees about three hundred yards away from the house. Dillon pulled up and motioned for Ethan to stop.\n\n\"Something's not right here,\" Dillon said almost to himself. He sensed that something wasn't the way it should be. \"Ethan hang back here with the pack horses while I check this out,\" Dillon ordered. \"If you hear shooting leave the pack animals and ride fast to Red and Josh for help.\"\n\n\"But Dillon I can.......\" \n\n\"No time to argue son. Please do as you're told.\" He looked with sympathy at the youngster. \"I know you want to grow up but your Momma would have my hide if something happened to you.\"\n\n\"Yes sir,\" Ethan replied. He tied the pack horses to a nearby tree and waited. Dillon pulled his pistol and rode slowly toward the corral.\n\nAs Dillon got closer he saw two men on the ground near the corral. He stopped, dismounted, and checked the men; both were dead. Dillon walked slowly toward the house. He saw another dead man lying on the ground just off the porch. The man was sprawled on his back with blood covering his chest. Looks like a scattergun did that, Dillon thought. \n\n\"Oso,\" Dillon called. He stepped onto the porch and approached the door from the side. \"Oso, amigo, it's Dillon.\n\nHe heard a moan and went into the house. Lying on the floor about ten feet inside the doorway was Oso. Dillon knelt at his friend's side. He saw blood on Oso's shoulder and on his right leg, just below the knee. Dillon grabbed a cushion off the sofa and put it under Oso's head. The big man opened his eyes and smiled.\n\n\"I didn't duck fast enough amigo,\" Oso said with a weak smile. \"Can I have some water?\"\n\n\"I'll get you some,\" Dillon replied. As he stood he went to the door and yelled, \"Ethan come up.\" He went to the pump in the kitchen and got a cup of water for Oso. Dillon helped Oso to drink the water and then cut his shirt away and examined the wound. Looks like the bullet's still in there, he thought. He slit Oso's pant leg and saw another wound; this one looked like the bullet had just grazed the leg.\n\nEthan came into the house and saw Oso on the floor. His face went pale but he quickly came to his adopted brother's side. Oso smiled up at him and Ethan smiled back.\n\n\"Get some hot water off the stove and bring one of my extra shirts please.\" As Ethan stood to get the items Dillon added, \"And bring the coal oil too.\" Then to Oso he said, \"Don't worry amigo, we'll take care of you.\"\n\nOso smiled. \"I broke the cup the Senora gave me. Hated to lose that cup.\"\n\n\"Who did this, what did they want?\" \n\n\"They said they were gonna take our horses. I couldn't let them do that,\" Oso replied. \"But they made off with three of the stock animals before I could run them off. I heard the one I knocked off the porch call the leader Simpson.\"\n\nDillon froze for a few seconds hearing that name. So they got away from the posse, he said to himself. They'll wish they'd let the posse catch them, he promised. Ethan returned with a wash pan of warm water, one of Dillon's shirts, and a small coal oil can. Dillon cut a piece from the shirt and washed the two wounds with warm water and then with coal oil.\n\n\"The coal oil will help fight infection until we can get him to a doctor,\" Dillon explained to Ethan as he tore strips from the shirt to make bandages. \"Change your saddle to Byron and ride to Red's. Tell them what happened. Tell Red and Josh I need their help and ask Danni or Sarah to come tend to Oso.\"\n\n\"Yes sir.\"\n\n\"After you get done at Red's ride hard to town and get the doctor to come out here.\" Ethan nodded and stood to leave. \"Ethan, rest Byron before you start back from town. No need to kill a good horse.\"\n\n\"Yes sir.\" Ethan hesitated and asked, \"Will Oso be okay?\"\n\n\"I think so. We've got the bleeding stopped but that bullet in his shoulder has to come out. That's why we need the doctor.\"\n\nEthan quickly changed his saddle to Byron and rode toward the Lazy L. He came up to the ranch house at a high gallop and jumped off his horse. Danni had heard him ride up and came out to see who was riding so hard.\n\n\"Ethan, what's wrong?\"\n\n\"Oso's been shot. Dillon wants Josh and Red to help him go after the men that did it,\" Ethan explained. \"He also wants you or Mrs. McCall to come and tend to Oso while I ride to get the doctor.\"\n\nMaggie, Danni and Sarah's mother, was visiting her grandchildren; she lived on the other part of the ranch at the Maggie M. She and Sarah came out onto the porch in time to hear Ethan's story.\n\n\"Momma will you watch the children please?\" Sarah asked. Maggie nodded and Sarah continued, \"Josh is over to the S Bar S training some of Mr. Sander's horses; Red went with him. We'll send a hand to fetch them but we'll head over to your place now.\"\n\n\"Thank you Mrs. McCall,\" Ethan said as he mounted his horse. \"I'm going to town to fetch the doctor. Hurry please, Oso's hurt bad.\" He turned Byron and put him at a high gallop headed for Fountain.\n\nIt took Danni and Sarah less than an hour to get to Winterborn. They called out and when Dillon answered they stepped into the house. Dillon had Oso covered with a quilt with his head propped up. He smiled grimly at the ladies. \"I got most of the bleeding stopped and I've cleaned the wounds with soapy water and coal oil.\"\n\n\"Ethan said Oso has a bullet in his shoulder,\" Sarah said. \"Let me have a look at it. If it's not too deep maybe we can get it out.\"\n\nDillon nodded and said to Oso, \"You lucky cuss, you've got two pretty nurses here to look after you.\" Turning back to Sarah he asked, \"Where's Josh and Red?\"\n\nSarah explained where the men were and that she'd sent a rider to get them. Dillon nodded and stood up. He left the room and returned in a few minutes carrying a 12 gauge, double barrel, coach gun. Dillon went into the kitchen, filled two canteens from the hand pump, and started out the door. Danni and Sarah were tending to Oso and didn't notice him leave the house.\n\nShortly Dillon returned leading Buck. The scattergun was in a scabbard on one side of his saddle and his Winchester was on the other side. He also had a second pistol stuck in his belt. He stepped back into the house.\n\n\"Sarah, Danni, I'm going after Simpson and his gang. Take care of Oso for me please.\"\n\n\"Wait for Josh and Red to get here,\" Sarah suggested. \"According to what Oso said, there's still four of them.\" She saw that Dillon's eyes had turned cold and wild looking; she'd seen that same look in Red's eyes when he faced trouble.\n\nHe shook his head no. \"If I wait the trail will get cold and we could lose it. They're headed southwest, tell Josh and Red. I'll be following them.\" He turned and went out the door and mounted Buck. \"C'mon Buck, we've got another battle to fight.\"\n\nDillon had decided to ride Buck for several reasons. Balin was younger and faster but Dillon didn't think this was going to be a race, more like a slow long track. Buck was battle trained; he would stand still while guns were being fired around him. He could step very quietly when need be and could sneak up on the enemy. But mostly Dillon had confidence that Buck could get the job done. They had a lot of experiences together.\n\nHe picked up Simpson's trail on as it crossed the south fork of Black Squirrel Creek. They're headed southwest to Arizona, he thought. Need to catch them before they hit that high chaparral; they can see for miles once they get to that. It'll be hard to sneak up on them. Dillon put Buck into a lope and followed the trail.\n\n*******************\n\nDamn, another plan gone to hell, Simpson said to himself. Who would have thought that one man could stop us cold? Now we're down to four men but we only got three fresh horses. Looks like someone's gonna get left behind. Once out of range of Oso and his rifle, they'd stopped and changed their saddles to the new horses. One man was left to ride one of the tired horses and he wasn't happy about it. They led two of the original horses with them, hoping that the animals could recover somewhat by not carrying the weight of a rider.\n\nThey rode until just before dusk and stopped, making a cold camp next to a small spring. Simpson told his men not to light a fire just in case someone was following them. The next morning they started southwest again. They stopped at midday to rest the horses and to eat. \n\nFor the next three days they followed the same routine. Ride hard during the day, make a cold camp at night, and stop to eat and rest the horses at midday. The evening of the third day, they made camp in a clearing among some scrub oaks. There was a full moon that evening. After resting for a couple of hours, Simpson told his men to saddle up. \"This Comanche Moon gives enough light to see the trail, so we'll keep riding. We can be up on the mesa and into the high chaparral by tomorrow morning. We can see for a long way up there and see if anyone is following us.\"\n\n\"You'll never make the chaparral,\" a voice said out of the darkness. \n\n\"Who's that?\" Simpson said with a little fear in his voice. All four men stood and stared into the darkness. Before they could reach for their guns, Dillon stepped into sight.\n\nBuck had crept close to the camp without being heard. Dillon had dismounted leaving him ground tied and quietly made his way closer to the men. He stepped out from behind a stand of scrub oak and faced the four outlaws. Dillon held his scattergun in his right hand with his finger on the triggers and the butt braced against his hip. His left hand was on the handle of the pistol stuck into his belt.\n\nFor three days Dillon had trailed the men with murder in his heart. There was no compassion in him, no thought but to get revenge on those that had shot Oso and killed Ted Clark. As he started his quiet stalk of the men in camp he thought of Elizabeth; she had come into his life and caused him to look at things a little differently. Because of her, he wasn't the same totally cold hard man he'd been before. I'll give them a chance to surrender, he thought. \n\n\"Who are you?\" Simpson questioned.\n\n\"Name's Gallagher and that was my ranch you raided.\" \n\n\"Well hell Mister. I'll pay you for the horses,\" Simpson said as he reached into his coat.\n\n\"Keep your hands where I can see them,\" Dillon ordered. \"You raid my home, steal my horses, and shoot my brother and offer me money? Do you really think you can buy me off? Dillon stopped, trying to push down the rage he felt. \"I've come for my horses and to take you back to the law.\"\n\n\"There's four of us Gallagher, you're outnumbered.\" Simpson pointed out. \"I don't think we'll let you have those horses or take us back either. I don't hanker to do jail time in the territorial prison.\"\n\n\"I was hoping you'd say that,\" Dillon said. In spite of his years fighting in the War Between the States, he'd only felt the urge to kill someone once before. When he faced Wilson, Cassidy's hired gun and then went after Cassidy was the first time. This was the second.\n\n\"Either drop your gun belts or fill your hands you sons a bitches,\" Dillon ordered.\n\nSimpson and his men hesitated for a few seconds and then went for their guns. Dillon watched in an almost detached manner as the men made their move. He was in the battle mode he'd learned during the war and things seemed to slow down. Leveling the shotgun, he fired both barrels and two of the men went down. Dillon dropped the scattergun drawing the pistol in his belt and the weapon in his holster. He moved to his left as he fired both weapons.\n\nDillon heard bullets hitting around him and felt something slam into his leg. He continued to trade gun fire with the two remaining men and suddenly there was silence in the clearing. Simpson and his three men were on the ground. Dillon started toward the men and felt a sharp burning pain in his leg. He saw blood seeping through his pants leg and realized he'd been hit. Dillon put both pistols away and tied his bandana tightly over the wound. Then he went to examine the men.\n\nTwo of the men had been killed by the shotgun blast; they were pretty well torn up. The third man had taken a bullet in his chest; he was dead too. Simpson was lying on his back with a wound in his belly. He stared up at Dillon and said with a frightened voice, \"Help me.\"\n\nDillon tossed Simpson's gun away from him and squatted down. \"You're gut shot Simpson. Nothing I can do for you.\" Before he could say anymore, Simpson shuddered and died. \"It's better than you deserved,\" Dillon said.\n\nGuess I better tend to my leg, Dillon said to himself as it began to throb with pain. He limped to Buck and led him into the clearing. Unpacking his saddle bags, Dillon gathered some wood and started a fire. He heated some water using a small coffee pot from his saddle bag. As the water heated, Dillon pulled the bodies to one side of the clearing.\n\nHe turned to Buck and said, \"No need to have to stare at that scum while we're camped.\n\nDillon looked around and found an aloe plant in the clearing. When the water was hot he dropped his pants and examined his wound, I was lucky he thought. The bullet had hit him in the outside of his thigh and passed completely through his leg. First Dillon cleaned the wound with the hot water, pouring it over the holes in his leg.\n\n\"Damn that hurts,\" he groaned. He squeezed the spines of the aloe plant and used the thick molasses like sap as a salve and put it into both sides of the wound. He wrapped a spare bandana around the wound and pulled up his pants. \n\n\"Not much more I can do right now,\" he said to Buck. Dillon unsaddled Buck and finished making camp. He soon had coffee made and ate some beef jerky. He'd just poured a second cup of coffee when Buck raised his head and nickered at the darkness.\n\nDillon had settled back against his saddle and begun to calm down after the gun fight but was instantly alert again and pulled the pistol from his holster while struggling to his feet. He heard, \"Hello the camp.\" \n\n\"C'mon in Red,\" he replied as he put his weapon away. \"Been wondering when you'd get here.\"\n\nRed and Josh walked into the circle of light thrown out by the fire leading Jasper and Diablo. They saw the four dead men at one side of the clearing and Dillon standing mostly on one leg. \n\n\"You hit bad?\" Josh asked concerned for his friend. \n\n\"Bullet went through the leg. It'll be alright in a few days,\" Dillon replied.\n\nRed grinned and asked, \"Can you spare a cup of coffee?\"\n\nDillon chuckled and pointed to the pot sitting on a rock close to the fire. \"Help yourself Red. You'll excuse me if I don't get up to serve you.\"\n\nJosh spoke in a more serious voice, \"You want me to take a look at your leg?\"\n\n\"Not much more can be done until I get home. I cleaned it out, stopped the bleeding, and put some aloe on it. It should be okay until I can get back to the ranch.\"\n\nRed and Josh unsaddled their horses, joined Dillon at the fire, and got some coffee. Then Red pointed at the bodies. \"What happened Dillon?\"\n\nDillon explained how he trailed the men and came into their camp. \"Told them I was going to take them back to the law; they decided they weren't going back and pulled down on me.\" He pointed at the bodies and added, \"They made a fatal mistake.\"\n\nJosh looked at his friend and didn't see any signs of remorse or sadness. Dillon had a job to do, he thought. That's all there was to it. \"If you're up to it, we'll start back in the morning. Should be able to make it back late the second day,\" Josh said.\n\nAs they bedded down for the night, Red knelt down by Dillon and said, \"You should have waited and let us share in the fun.\" He patted Dillon's shoulder and added, \"But I'm glad you weren't killed my friend.\"",
        "At first light the next morning Josh and Red wrapped the bodies, using the men's slickers and saddle blankets and buried them in a shallow grave at the edge of the clearing. They took the saddles and bridles off the three worn out horses and let them go. Dillon's horses were unsaddled and he made rope hackamores to lead them back to Winterborn. Then they broke camp and headed home.\n\nBy the end of the first day, after ten hours on the trail, Dillon was running a fever and looked a little grey. Josh asked if he wanted to rest a day but Dillon said no. \"I want to get back to the ranch; I can rest when I get there.\"\n\nRed looked at Dillon's wound and cleaned it again. He put some more of the aloe salve on it and wrapped it with a fresh bandage made from his bandana.\n\nThey crossed Black Squirrel Creek late in the afternoon of their second day. Dillon was almost reeling in the saddle but refused to stop and rest. They had made better time on the return trip because they didn't have to follow the trail of the outlaws.\n\nEthan was the first to see them. He'd taken to riding around the ranch house with a rifle across the saddle in front of him. \"They're back,\" he yelled at the house and spurred Shelley out to meet them. When he got close he saw that Dillon was injured. He quickly took the lead ropes of the three stock horses and turned them into the corral.\n\nDillon dismounted and almost fell but Red caught him and helped him into the house. \"I'll take care of the horses,\" Ethan offered.\n\nRed smiled at the youngster, \"Don't you want to hear what happened?\"\n\n\"Yeah, but the horses need tending to first,\" Ethan answered. \"I'll hear about it later.\" He led Buck, Diablo, and Jasper over to the corral. He loosened their saddle cinches on Diablo and Jasper and fed and watered them. Ethan unsaddled Buck, brushed him down, and led him into his stall; making sure that he had fresh water and feed.\n\nDillon sat on a chair in the big kitchen and Sarah tended to him. She embarrassed Dillon by making him drop his pants so she could get at the wound. Dillon's leg was a little swollen and the area around the hole was red and angry looking. \"Might have some infection in it,\" Sarah said. \"Good thing you used aloe or it'd be a lot worse.\"\n\nDanni made a poultice using wet tea leaves and dried mustard seed. As she put it on the wound she said, \"This will draw the poison out. We'll leave it on overnight and clean the wound with coal oil tomorrow morning.\"\n\nLooking up at Dillon she said, \"Now tell us what happened. It's obvious you caught up with them and got your horses back.\"\n\n\"First, how's Oso?\" Dillon asked.\n\nSarah handed Dillon a small glass of whiskey. \"Drink this,\" she ordered with a grin. \"It can't hurt and might even help some. Oso's just fine. The Doc was able to get the bullet out of his shoulder. He said that you're quick treatment of the wound kept it from becoming infected. Oso's sleeping on the sofa in the office right now. He'll be up and around a little later.\"\n\n\"Here, have some of this soup,\" Danni said. \"And then we going to give you a bath and put you to bed. You smell like horses and sweat.\"\n\nJosh chuckled and Red laughed out loud. \"It's hard to take a bath when you're trailing outlaws,\" Red offered.\n\n\"You two don't smell any better,\" Sarah told them. \"Red, soon as you get home you take a bath. You hear me?\"\n\n\"I know; me too,\" Josh said to Danni before she could say anything.\n\nAn hour later Dillon had eaten and taken a bath; he'd refused to let Sarah or Danni help him. But he was careful not to get his injured leg wet. Dressed in clean clothes, he sat in his big chair in the living room with his leg propped on a foot stool. Oso was healing but was still weak; he sat on the sofa across from Dillon. \n\n\"So, tell me what happened out there,\" Oso requested. Everyone gathered in the room to hear Dillon's story. \n\nDillon explained in detail about tracking Simpson and bracing them at their camp. \"I tried to bring them back but they decided to make a fight of it.\" Dillon paused for a few seconds. \"Red, Josh, and I buried them in that clearing.\" Looking at his friends he asked, \"What happened back here after I left?\"\n\nNo one spoke for a few seconds and then Danni said, \"Ethan?\"\n\nThe youngster cleared his throat. \"I did like you told me Dillon. Told Miss Sarah and Miss Danni to come help Oso and rode as fast as I could into Fountain for the doctor. I told Sheriff Kennedy about the raid and he came out with the doctor.\"\n\nEthan stopped for a minute. \"While I was in town, I sent a telegram to Ma and Elizabeth and let them know we wouldn't be comin to Colorado Springs and why. I didn't want them worrying when we didn't show up. Then I rested Byron for an hour before I came back to the ranch.\"\n\n\"You did a good job Ethan. I'm proud of you,\" Dillon told the boy. \"I hope you didn't hurt Byron, running him that hard.\"\n\nEthan smiled. \"No sir, he's fine. He was kinda mad when he saw the doctor and the Sheriff ride out; he wanted to go too. I don't think he liked me makin him rest.\"\n\nThe boy cocked his head and started toward the front door. \"Riders comin,\" he said as he picked up a shotgun propped against the door frame and stepped outside. He came back inside, \"It's Sheriff Kennedy and Doc Riley.\"\n\nEthan motioned the two men into the house. \"Dillon's back,\" he said to the Sheriff. \"He's been shot Doc.\"\n\nDoctor Riley was a whip cord thin man with a fringe of grey hair around his bald head. He was jovial and outgoing but brooked no nonsense from his patients. They would do exactly what he ordered or he'd know the reason why. Not many dared to cross him. \n\nNodding at the others in the room, Doc Riley quickly went to Dillon. Riley ordered him to drop his pants. Dillon asked Sarah and Danni to leave the room. They laughed and refused to go and Dillon got embarrassed all over again. Riley pulled off the bandage and the poultice and examined the wound. Dillon squirmed and grunted as the doctor pushed and prodded around the holes in his leg. Riley dampened the poultice with a little water and put it back on. \n\n\"You ladies did fine. No need for me to do anything more,\" he said. \"Leave the poultice on overnight and then clean the wound with coal oil tomorrow morning.\" He washed his hands and said to Dillon, \"I suggest you stay off that leg for four or five days. Give it a chance to heal up some. After that you can walk around a bit, but no riding for at least two weeks. If it gets real red and sore send for me.\"\n\nDillon frowned. \"I'll rest tomorrow and maybe the next day Doc but I've got a ranch to run. Can't afford to let things go; especially with Oso down for awhile.\"\n\nThe doctor stared at Dillon with disapproval on his face. \"Mr. Gallagher, you served in the Calvary with the rank of Captain didn't you? Dillon was surprised at the question but nodded. \"Sheriff Kennedy told me as much. As I understand things, Captains were required to follow orders. Is that right?\"\n\n\"But Doc, I need to.......\"\n\n\"Is that right Captain Gallagher?\" The doctor asked again, interrupting his patient.\n\nDillon sighed and answered, \"Yes sir, it is.\"\n\n\"Then consider my suggestion an order,\" Doc Riley said in a tone that left no room for argument.\n\nThe doctor and Dillon stared at each other in sort of a battle of wills. This is a hard man when need be, Doc Riley thought. He smiled to himself, I bet he didn't take well to orders he didn't agree with back then either. Dillon started to speak; he was going to tell the doctor what he thought about his orders. Another voice spoke up before Dillon could say anything.\n\n\"I'll see that he follows your orders Doctor,\" Elizabeth said as she and Eleanor strode into the room. There had been so much going on that no one heard them ride up.\n\nElizabeth walked over to Dillon and knelt by his side. \"You'll do that for me, won't you Honey?\"\n\nDillon looked at his wife as she wiped a tear from the corner of her eye. He was a hard man and had done a lot of hard things but making Elizabeth unhappy wasn't one of them. Dillon smiled, reached out and touched her cheek. He nodded and she put her arms around him. For a couple of minutes there was no one else in the room for them.\n\nDoctor Riley nodded seeing that Dillon would listen to his wife. Don't make any difference whose orders he follows, Riley thought. Just as long as he takes it easy on the leg for a while. The doctor crossed to the sofa to examine his other patient.\n\n\"Your shoulder's healing well considering it's only been a few days,\" Riley told the big man. \"I'll give you the same orders I gave Dillon. Take it easy and don't overuse your shoulder for at least two weeks. Then you can start getting your strength back in it. But don't overdo it. You leg's healing too, so just take it easy.\"\n\n\"I'll see that he follows orders Doctor,\" Eleanor said. Turning to Oso she added, \"You're not too big to turn over my knee if you don't behave young man.\"\n\n\"Si Senora. I will do as you say,\" Oso replied with a smile.\n\nElizabeth stood and went to Ethan. She and Eleanor both hugged him. \"Thanks for sending the telegram little brother,\" Elizabeth said.\n\nSheriff Kennedy had smiled and taken his hat off to greet her when Eleanor entered the room. He put his hat back on and walked over to Dillon. \"Care to tell me about Simpson and his gang?\" He asked with a grim look on his face.\n\nElizabeth and Eleanor drifted over to listen as Dillon retold the story to the sheriff. \"I tried to bring them back. They didn't want to come and made a fight of it.\" Dillon paused and added, \"I'll draw you a map to where we buried em.\" \n\nSheriff Kennedy waited for a bit after Dillon finished. \"I'm glad you weren't hurt anymore than you were Dillon,\" he said. \"You were lucky. I'll telegraph Marshall Baker in Colorado Springs and tell him about Simpson and his men. If he wants the bodies he can come and get them. Far as I'm concerned, let em rot in the ground. I'll head back to town with Doc.\"\n\n\"How's that new boy doing, Danni?\" Doc Riley asked as he packed up his bag. \"He get over that croup?\"\n\n\"He's fine Doc. Come out for supper sometime and see for yourself.\"\n\nLater that evening Dillon asked Elizabeth how Tillie was doing. \"Is she going to stay in Colorado Springs? You know she's welcome to come live with us.\"\n\n\"That one of the reasons I love you; you're always concerned with family,\" Elizabeth replied and kissed him. \"She said she going to stay put; all her friends are there .\"\n\n*****************\n\nDillon and Oso took it easy for the two weeks that Doc Riley requested. Mostly it was because Elizabeth rode herd on them. Every time one of them tried to do too much, she would get a look on her face that made them slow down again. Eleanor had returned to town as soon as was sure that her two \"boys\" were going to be okay.\n\nIt was close to six weeks before Dillon could ride for more than an hour without his leg throbbing. It took about as long for Oso's shoulder to gain back its strength. Slowly and with a lot of scolding from Elizabeth to take it easy, both men regained full use of their limbs. Josh and Red had sent a couple of their hands over to help with the ranch work while they were recuperating.\n\nRed was at Winterborn helping with the spring calf season. It's a start and we'll add more cattle as we go along, Dillon said to himself. Red and Dillon were resting their horses, watching as Ethan chased down a couple of strays. \n\n\"You're good friends Red,\" Dillon said. \"Not many would help someone as much as you and Josh have.\"\n\n\"Mostly it's payback. I seem to remember a man and his wife stepping in to help us. Besides, we Irish have to stick together, don't you know.\" Red spoke in a put on Irish brogue. \"The Irish clans control most of Chico Basin; it's almost like County Cork back in the old country.\"\n\n\"What do you know about the old country? I thought you were from Texas,\" Dillon said.\n\n\"My great grandfather came over from Ireland back in 1810 and settled around Amarillo,\" Red replied. \"I spent a lot of time with the old man when I was a boy. He told me stories about Ireland and his life there.\" Red paused for a bit remembering happy times and then with a smile added, \"The old man spoke with an Irish brogue so thick I could hardly understand him.\"\n\nDillon smiled at Red's story. \"Sure and I think we'd better get back to work,\" he said in a brogue of his own.\n\nAfter lunch Red asked Dillon if Josh had talked to him about a trip to Cripple Creek to round up wild cattle. \"It's the quickest way to build up your herd.\"\n\n\"He mentioned it. Said it was rough country and a tough, dangerous job. I think we'll just buy cattle when the ranchers cull their herds and see what can be done that way,\" Dillon replied. \"What with the profit from selling the Triple E and some other money, we can take our time and build slowly.\"\n\n\"Glad to hear that. I didn't look forward to combing that maze of arroyos and scrub brush again. Too damn much work for Mrs. McCall's little boy. I'm a gentleman rancher now.\"\n\n\"Well we wouldn't want you to work too hard now,\" Dillon said laughing.\n\nOnce Dillon and Oso had completely recovered they started visiting the ranches in the area around Fountain and even Colorado Springs. Good grazing land was at a premium around Fountain and the Chico Basin. Ranchers would sometimes cull their herds to decrease the number of cattle and avoid over grazing the land. Several ranchers had stock for sale, mostly due to a better calving season than expected. Winterborn was able to increase the size of their herd, taking advantage of the bargain prices.\n\nDillon had an idea about breeding cattle and discussed it with Josh and Red. He wanted to buy two or three pedigreed Hereford bulls. Most of the cattle being raised in the west were off shoot breeds from the Texas Longhorns and wild cattle. These animals were hardy and could stand up to the winters in Colorado and the trail drives to the railheads.\n\n\"We've got a railhead close by at Colorado Springs,\" Dillon explained. \"So there's no need for long trail drives which burns weight off the cattle. By breeding the white face bulls to our range cattle we can get heavier animals and with the short distance to the railhead they wouldn't lose much weight. These heavier cattle would bring better prices.\"\n\n\"It's worth a try,\" Red agreed. \"We might not get more than one season out of the bulls though. I don't think they can live through one of our winters. From what I hear, they're not as tough as our range cattle.\"\n\nJosh thought for a moment and said, \"Won't make a difference, we'll let em breed during the spring and summer. When the weather gets bad we'll round the bulls up and drive them down to the ranch and put em into a sheltered corral. We can hand feed them until spring and send em out again. The calves will get some toughness from their mamas and will handle the weather just fine.\"\n\nThey contacted a cattle buyer in Denver who directed them to a breeder of prize winning Hereford's in Nebraska. It was decided that Red and Charley White would make the trip east. Charley was the ranch boss at the Lazy L part of the Chico Basin Cattle Company and knew more about cattle than anyone in the county. Both the herd from Winterborn and the CBC's herd would benefit from the improved breeding so they decided the two ranches would be partners in any bulls they purchased.\n\nThey would take a train from Colorado Springs to Cheyenne. That spur line joined up with the Transcontinental Railroad and they would travel east to Ogallala to meet the breeder.\n\n\"Why travel by train?\" Oso asked just before they left. \n\nRed smiled and replied, \"Using the train we can get there, buy the bulls, and be back before we could even get to Ogallala on horses. \"It'd be a hard ride on us too,\" Red added. \"I've never been one to put in more work than necessary. Don't see the sense in it.\"\n\nJosh chuckled at Red's statement; Dillon laughed too. \"You're one of the hardest working men I've even seen Red,\" Dillon said. \"I don't think you're happy unless you're putting your hand to something.\"\n\n\"Don't you believe it Dillon,\" Red replied. \"If I had my way I'd just watch everyone else work. I'd sit on the porch with a cup of coffee and my feet propped up.\" Red grinned. \"But Sarah won't have it. That woman keeps me jumping all day long.\"\n\nOso, Dillon, and Josh laughed at Red's complaining. They all knew that Red was the first to pitch in with the work and the last to quit. \n\n\"We'll drive the bulls slow from Colorado Springs back here to Chico Basin,\" Charley added. \"After a couple of day's rest we'll turn em out and let them do what bulls do best.\"\n\n\"I figure we'll have about two or three months for them to breed before we bring em back to the corrals,\" Josh said. \"We should start seeing the calves next spring but it'll be a couple of years before we can ship any of them.\"\n\nRed and Charley were met by the breeder when they arrived in Ogallala. He drove them out to his ranch in his wagon and showed them the six animals that were available. They picked a five year old named Lucifer and three year old called Monty. \"We can use a bull at each place for a season and switch them around,\" Charley said. \"We'll stay away from interbreeding that way.\"\n\nAn agreement was reached for the two bulls after about 30 minutes of negotiating. Red always thought he was a pretty good hand at dickering, but he had to admit that Charley was a master at the art. The breeder had one of his hands take Red and Charley back to town and they arranged for transportation of the bulls. Lucifer and Monty would begin the train trip to their new home and new duties the next day.\n\n*********************\n\nIt was late September and Dillon and Elizabeth were hosting a party to celebrate the finish of this year's cattle drive. Winterborn hadn't made a drive this year; Dillon wanted to build the herd for another season. The Chico Basin Cattle Company had another very profitable drive. Dillon and Oso had helped with the drive to the railhead in Colorado Springs. Now it was time to relax and enjoy themselves.\n\n\"It's nice to celebrate after a good season,\" Dillon told Elizabeth. He laughed and said, \"I just hope we don't run out of food for all these people.\" \n\n\"I think that whole steer cooked on the spit will take care of them,\" Elizabeth replied.\n\nEverybody that we know is here, Dillon thought. Must be near 30 people. Charley White and the four hands from the CBC are here. Bill Sanders and his sister Nancy Larson from the S Bar S came by. Jerry brought his young lady friend and her mother; they lived in Fountain. Eleanor invited her gentlemen friend; Sheriff James Kennedy. Elizabeth told Dillon that her mother and Kennedy became friendly and were spending time together in town.\n\nThen we have the Irish, Dillon continuing his thought. There's Daniel and Maggie Maguire, Danni and Sarah's parents. Their son Jacob made a surprise visit; he'd been in Denver going to school. Dillon smiled, and of course there's the Kelly's and the McCall's and the Gallagher's.\n\n\"The Irish really do control Chico Basin,\" Dillon told Elizabeth. He was sitting on the top step of the porch and she was leaning back against him. They were watching Josh and Red's children playing in the yard.\n\n\"We'll be adding another Irishman to the group in a couple of months,\" Elizabeth said proudly. She looked over her shoulder at Dillon and he bent down, patted her growing stomach, and kissed her.\n\n\"And that's just a start,\" he replied smiling at Elizabeth. They looked at each other for a few seconds and turned back to watch their guests.\n\n\"Red was right,\" Dillon said softly. \"It is a gathering. \n\nThe Gathering of the Clans.\"\n\nThe End"
    ],
    "authorname": "woodmanone",
    "tags": [
        "western",
        "action adventure"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-gathering-ch-04"
}