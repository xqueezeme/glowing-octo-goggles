{
    "title": "A Road Trip Fantasy Pt. 02",
    "pages": [
        "First of all, thank you to everyone who read my first story, \"A Road Trip Fantasy\" and especially to everyone who rated it, favorited it, followed me, and left comments. All of your input inspired me to keep up my writing here and in other venues. Originally, I thought Jennifer and Aaron's story was over. In my mind, I added \"And they lived happily ever after.\" I wanted to give something back to my followers though and started to think a little bit about what might happen next. This was meant to be a brief vignette, but blossomed into more. I won't promise anything, but I think I can see the thread of a story going forward. I hope so. Please be patient. I hope you enjoy this next interlude with Jennifer and Aaron.\n\n *****\n\nDespite running the bathroom fan the entire time, when Jennifer stepped out of the shower, the room was so steamy she could only see a vague outline of her body in the mirror. She grabbed her towel and wiped off her phone's screen. No messages from Aaron yet. Not surprising since she should have heard his alert even above the water. Today though, she was glad he had not reached out to her yet. It meant she still had time to ready her surprise. Did he realize what today was? She hoped so.\n\nHer phone told her it was 8:21. Jennifer knew it was the busy season, and Aaron had been working late most nights. By now though, he should have finished up his calls and paperwork and be getting ready to head home.\n\nJennifer dried herself thoroughly and pulled on a T-shirt before going out to the front room. Her furnace was running full blast as she had set the thermostat for 75 degrees. She didn't want to be cold tonight. Before turning on the lights, she double checked that her curtains were drawn tight and that the front door was dead bolted with the chain across.\n\nHer toys were where she had left them on the coffee table with a clean towel on the futon where she sat down. She opened up her phone again and tapped on an app she did not use very often. Aaron's car was one of those new fully connected models, and in his na\u00efvet\u00e9, he had given her the password. The app opened, and the connection spun for almost a minute before displaying a map with an arrow driving down a road in the center. Perfect. He was just a few minutes from home. A part of her was slightly miffed that he had not texted that he was leaving work, but the larger part of her was glad because she could still pull off her surprise just the way she wanted.\n\nJennifer propped her phone up against some books on the coffee table and braced the front of it with a small glass paperweight so it would not slide. She turned on the camera and rested her feet on the table on either side. It took a few moments to fuss with the angle of the phone and reposition the lamp to light everything effectively. Her phone screen now displayed a perfect angle of her wide open crotch.\n\nJennifer did not shave her pubic hair, she liked to her lovers to know that the blond-brown hairs one her head matched those down below, but she had trimmed herself just before her shower to give her mound a nice, well kempt look. Her labia were closed and the nub of her clitoris hid beneath its hood. As she leaned forward to tap her phone again, those labia did start to pink in anticipation.\n\nJennifer swiped back over to the car app once more, confirmed that his car was now listed as parked with the arrow inside the satellite image of his townhouse's garage. Then she switched over to FaceTime and tapped Aaron's name.\n\nShe leaned back and waited. The phone rang twice and the screen displayed a dizzying view of the inside of Aaron's townhouse before settling on his face that was half turned away as he was in the process of doing something else. \"Hey, honey,\" he said in greeting and then did a double take at his screen, his mouth falling open. \" I really hope that's you, Jen.\"\n\nJennifer laughed and ran her hands up and down her inner thighs which just started to pull open her labia. \"Don't you recognize your own girlfriend,\" she chided.\n\n\"I'd recognize those lips anywhere,\" Aaron replied. Jennifer heard a thump in the background where he apparently dropped his bag on the floor. She must have caught him just as he walked in the front door. \"Looks like you got a haircut since I last saw you.\"\n\nShe giggled, pleased that he had noticed. \"I know you have high standards. I need to keep myself ship-shape.\"\n\n\"Mmm, you are that,\" he said. In the background, the view of his house kept shifting as he moved through the rooms.\n\n\"Where are your going?\"\n\n\"Some place a little more comfortable.\"\n\n\"Don't take too long.\"\n\n\"Oh, I won't.\"\n\nBy the background, she could see he had sat down on his own couch. \"Do you know what day it is today?\" she purred.\n\nOn the screen, Aaron had apparently found a place to prop up his phone and was now removing his tie. \"My lucky day? No, that's everyday I've been with you.\" He rubbed his chin musing.\n\nJennifer started to close her legs blocking his view of her pussy. \"Nice answer, but not quite.\"\n\n\"Okay. Okay,\" he laughed. \"Don't stop the show. I'm just getting settled.\" Now he put on his smiling but serious face. \"It's our one month anniversary. By the way, don't go too far away from home tomorrow because I've got flowers arriving for you. I didn't want them delivered while you were in class today and have them disappear from your doorstep before you got home.\"\n\n\"Thank you.\" Jennifer allowed her legs to relax back open. \"My neighborhood here is pretty safe though. They probably still would have been here.\"\n\n\"Probably, but better safe than sorry. So to be clear, we're counting from our night in Utah, not our first lunch date or the one on the beach?\"\n\n\"Those were dates, but we weren't really a couple until the road trip in Utah.\"\n\nHe smiled at her. \"That's what I've been counting from too. It was quite a night. So do you have a present for me?\"\n\nJennifer flashed a devilish smile, her face just visible that the top of the screen. \"I've been thinking about you all day.\" She began running her hands over her inner thighs again. That slight opening appeared between her labia again as they began to swell. \"And I've been thinking about our first night together.\" Now she ran a finger from the bottom on her labia to the top, spreading them all the way and pulling back the hood on her clitoris. It too was beginning to swell.\n\nOn screen, Aaron had loosened his belt and was scooting out of his pants to reveal a pair of black boxer shorts with a distinct bulge in the center. His buttoned down shirt still covered his chest.\n\nJennifer continued to run a finger up and down the length of her pussy with one hand and with the other hiked up her T-shirt to reveal her C-cup breasts. She gave her nipples a gentle squeeze, and they perked to attention. \"You were fingering me just like this,\" Jennifer said. She slipped her forefinger between her labia and into her vagina. She closed her eyes and sighed. \"It felt so good.\"\n\n\"It did feel good,\" Aaron agreed. On screen now, he had pulled down his boxers and was rubbing his erection.\n\n\"I wish I could have that in me right now,\" Jennifer told him. She was making circles around her clitoris with her thumb and wiggling her finger deeper into her vagina. Her other hand rubbed and pinched her nipples.\n\nAaron was slowly stroking himself up and down for her to see. \"I wish I could put it in you right now.\"\n\n\"If we can't be together in person, at least we can masturbate together and pretend like we are.\"\n\n\"That we can definitely do,\" he agreed.\n\nNow Jennifer reached to the side and picked up a knobbed clear purple dildo. \"One of my other toys,\" she said. \"You remember the little white one, don't you?\"\n\nAaron nodded. \"I will never forget that one, or what I did to you when you were using it.\"\n\nJennifer started to rub the dildo up and down between her labia. The knobs bounced over her clit stimulating it while the faux glans at the end began poking her vaginal opening. She imagined the head of Aaron's cock bumping against her there and then a little lower down. She laughed. \"You fucked me in the ass, you dirty boy.\"\n\nAaron was stroking his penis faster. \"If I remember, that was because you wanted me to.\"\n\n\"I did want you to, but you were still the dirty one who did it.\"\n\n\"And I liked it.\"\n\n\"So did I.\" Jennifer breathed in deep and slipped the head of the purple dildo inside her. She reached under her thigh with her left hand to take it, and begin working it in and out of her moistening vagina in gentle strokes, while her right hand began to rub and pinch her clit. She moaned. \"I can feel you fucking me. Your dick feels so good. Do me harder. Harder.\" She leaned her head back and pumped faster.\n\nAaron sat on his couch, eyes glued to the writhing girl on the screen with his own hands pumping up and down on the shaft of his penis. Precum oozed from the slit and the top and started to make moist sounds as he masturbated. \"Oh, you feel so tight, Jen. Your pussy is so hot.\"\n\nJennifer's dildo was covered in her own juices as it slipped and slid in and out of her. The wet smacking sounds were clearly audible in her room, and she hoped Aaron could hear them over the phone. She looked back at him on the screen. She ought to have felt self conscious, spreading herself and fucking herself with a piece of plastic so brazenly for him, but she didn't. His eyes were locked onto the screen completely mesmerized by her. She watched him become more and more excited watching her. She felt sexy and in control. \"I just want to feel your body on top of me, holding me down, fucking me.\" Her breathing became more and more ragged, and then she cried out, her orgasm sweeping over her, her body gyrating out of control. Dimly she worried about knocking over her phone and blocking his view, but the larger part of her mind was alight in fireworks.\n\nThe sight of her climaxing, sent Aaron over the edge too and white semen spattered over his hands and shirt. He watched her, seeing her thigh muscles twitching and even the edges of her exposed pussy contracting around the dildo.\n\nFinally, Jennifer was able to make eye contact again, her face just visible at the top of his screen. \"That was good, not as good as the real thing, but good.\"\n\n\"Thank you. It was good for me too.\" He held up his fingers to show her the semen dripping off of them.\n\nJennifer laughed and slowly withdrew her toy. Each knob slipping out sent little shivers through her pussy. The dildo was covered in foamy white juices. \"If this were you, I'd lick my juices off you.\" She brought the toy to her mouth and gave it a sultry lick, then ran it back and forth between her lips. \"Mmm, don't you love the taste of pussy juice?\" Thinking about sucking his penis just after he had come in her sent more pulses through her vagina. She wondered if she could keep him hard in her mouth if she started sucking him right away, maybe make him cum again in her mouth too or get him fired back up enough to fuck her again back to back. She made a mental note to try it out the next time they were together.\n\n\"I love the taste of your pussy. If I were there right now, I'd be down between your legs sucking your clit and licking you out.\"\n\nThat sounded like an even better idea to Jennifer. Maybe she would spin him into sixty-nine and sit on his face while she sucked him off.\n\nThey watched each other as their breathing calmed. \"In fact, I'll be there to do it in person in seven days,\" he reminded her.\n\n\"A week is too long,\" Jennifer sighed. Then she pulled a face. \"I've got an exam the week after. I'm going to have to study, and the weather sucks. It's supposed to snow again next week.\"\n\nAaron shrugged. \"I don't care about the weather, I just want to see you.\" He paused. \"I can help you study if you want, or do you need me to stay away?\"\n\n\"No.\" The idea of him canceling his trip horrified her. \"I mean, I have to study, but I really need to have you here with me. Don't cancel on me.\"\n\n\"Only if you force me too, and even then I might still show up.\"\n\n\"Good, I'm counting on you. When do you get in?\"\n\nHe shrugged again. \"I'll send you the info. I took the whole day off. I think I get in around four or so. If you're in class, I can just get an Uber or taxi or something.\"\n\n\"Hard to know. Sometimes we get out early on Friday, sometimes not. I can leave a key for you with my neighbor, Tanya. She's usually home with her kids in the afternoon.\"\n\n\"We'll talk about it later.\"\n\nThey stared at each other some more. Jennifer giggled. \"I can't believe we just had video sex.\"\n\n\"My own private cam girl. I like it.\"\n\n\"Private? I was streaming it live.\"\n\nNow Aaron laughed. \"So that's how you're paying your way through school. I hear you can make good money that way.\"\n\n\"No, not me, I was streaming you.\"\n\nThey both laughed. \"Jennifer, I will not make as much money that way as you would.\"\n\n\"I don't know. I'd pay to see you stripping and jerking off.\"\n\n\"Well, that's too bad for me I guess because you're the only one I'll do it for for free.\"\n\n\"I love you, Aaron. Happy one month anniversary.\"\n\n\"I love you too, Jen. Happy anniversary.\"\n\nJennifer pulled her blanket over her shoulders. \"Tell you what, I'm getting cold. Why don't you get cleaned up and I'll get dressed. Call me back when you're eating.\"\n\n*****\n\nThose next seven days passed both the quickest Jennifer had ever experienced with all the workload her professors heaped on them that week and the slowest with her anticipation for Aaron's visit.\n\nThey kept to their routine. She would send him a text in the morning when she was getting ready for school. Usually, he was up by then anyway because he tended to be an earlier riser what with his meetings or rounding so often, and so that was how they said good morning. Their lunch hours did not overlap, but sometimes she would have a break between classes in the afternoon when he was at lunch and they could talk, but most of their communicating during the day would be brief texts that would have to wait to be answered. In the evening, he would call her when he got off work, and they would talk for an hour or more until she got tired or needed to get back to studying. Sometimes she would send him photos of her books or notes, and he would quiz her on the material. Helpful and devoted boyfriends were good, but a hot study buddy was the best.\n\nNot long after four in the afternoon that Friday, Aaron texted: Wheels on the ground. Where are you?\n\nJennifer tried to be inconspicuous with her phone in her lap. Still in class. Another 45.\n\nI'll find a ride. See you at your place.\n\nTanya has the key. 1402.\n\nMarisa, one of her classmates, leaned over. \"Is he here?\"\n\nJennifer nodded even though she knew her smile had already given it away.\n\n\"We're going to Bushwhacker's tonight. You better be there with him.\"\n\nJennifer frowned. She and Aaron had started dating in the process of her move away for thirteen months of nursing school. Before that, they had known each other for about a year as work colleagues, but times like this made her realize how little they knew each other's tastes. \"I don't know if he likes country music.\"\n\n\"Doesn't matter,\" Marisa said. \"Bring him.\"\n\nJennifer nodded. \"Okay.\"\n\nThe lecture lasted fifty-five minutes more despite the twenty odd students rustling papers and packing their bags forty more minutes in. Like the rest of the students, Jennifer had her bags packed and hurried to the door as soon as the professor asked, \"Are there any questions?\" Ten minutes before she had typed in Leaving now and was finally able to hit send.\n\nIn good weather, the drive home would take maybe five minutes, ten minutes door to door depending on where she parked. The weather was not bad, and Jennifer's cold weather driving had improved in the last month or so, but her trepidation caused her to slow just a little.\n\nWhy was she doing this? She needed to concentrate on her studies. The workload was more than she had dealt with before and tests were coming up plus a paper due soon. Part of the reason for picking a school far away was to eliminate distractions, and now here she was inviting a huge distraction into her life.\n\nAll that, and how did she really feel about Aaron? He was kind and gentle and made her laugh, and he was handsome and cute by turns in his own goofy sort of way, but they had worked together for a year and he never made a move on her until he heard she was moving. She had a vague interest in him, but he had seemed out of reach, and she had never considered him seriously. Then he had asked her out at the last possible moment and persuaded her to let him help her move halfway across the country. That was where the passion had ignited with some very satisfying wild sex, but in some sense it was very artificial. They were two people shoved up against one another and maybe it had just been biology that had taken over. How well did they really know each other? Yes, they talked daily now, but they still had so much to figure out about their relationship and how they really blended together. Would they get along as well when they saw each other all the time? Would he get along with her family? What about his ex-wife? Would he get bored of her once he wasn't pursing her anymore?\n\nJennifer's stomach was somewhere above her heart when she turned the key to her apartment door. She took a deep breath and stepped inside.\n\nAnd there was Aaron standing up from the futon where he had been sitting. His tablet and keyboard sat open and forgotten on the coffee table. A huge smile spread across his lips, and his eyes shown at her.\n\nJennifer dropped her backpack just inside the door as it swung shut behind her, and he was coming toward her, and then they were lost in each other's arms.\n\nHe had on a light cologne but underneath was the slight musky smell of sweat after a day of connecting plane flights. The several days growth of hair on his face was short enough to prickle but just now long enough to have a softness mixed with it against her lips. The tip of his tongue caressed against hers with a hint of chocolate. His arms crushed her against his chest, and she could feel his firm pectoral muscles through her layers of jacket and shirts. All of her doubts melted away in that embrace.\n\nThey broke the kiss, but his arms did not release her. She reached up to stroke the roughness of his cheek. \"Haven't shaved for a while, I see.\"\n\nHe smiled and shrugged. \"New girlfriend, new look maybe. It's been a little over a week. I'll shave if you don't like it.\"\n\nShe pursed her lips and thought. \"No, I think I like it. It makes you look a little bit rugged but also a little more intellectual. Let me try it out for a while. Probably not too much longer than this though, I'm not looking for a caveman or a castaway.\"\n\nThey both laughed at that.\n\n\"It's good to see you,\" he said. He let go of her with one arm and unzipped her heavy jacket. \"I've really missed you.\"\n\n\"I've missed you too. Were you waiting for me long?\"\n\nHe slipped the jacket off her shoulders and began unwrapping the scarf from around her neck. \"Not really, maybe fifteen minutes or so tops. Just long enough to get settled.\" Now his hands were gently tugging the bottom of her blouse out of her pants and fiddling with the buttons.\n\nShe slapped at his hands and arched her eyebrows. \"Excuse me. Did I give you permission?\"\n\nHe shrugged. \"You haven't said 'no' yet.\" He did stop undoing her buttons though, but instead slid his hands underneath both shirts and ran them over her sides and to the small of her back and pulled her to him again.\n\nShe arched her back, letting their pelvises rub against each other. With her heavy jacket off, she could feel the growing firmness of him there. Her lips reached out to his, and she accepted his tongue into her mouth, flicking it with her own, dancing with it. He left one hand in the small of her back to hold her tight, but the other one slipped to the front up under her layers to cup one of her breasts through her bra. They moaned into each other's mouths.",
        "Jennifer found the strength to break the kiss and push some separation between them. Started to push that was, but then she could not help but squeeze his muscles through his shirt. \"Have you been working out more?\"\n\nAaron laughed. \"Not nearly as much as I should, but maybe we could do some working out together?\"\n\nThey kissed again, and after another thirty seconds of kissing and caressing, Jennifer forced herself to pull away. \"Some of the girls from class want us to meet them tonight.\"\n\nAaron still had that passionate look in his eyes and his hand was still massaging and pinching her nipple beneath her bra. \"When?\"\n\nShe squirmed in his arms and sighed. \"Sevenish.\"\n\n\"Then we've got plenty of time.\" He pulled her into another kiss, but this time the hand on her breast dropped down and undid the snap of her jeans. \"Bedroom or right here in the hall?\"\n\nShe let the last of her defenses fall. \"Bedroom.\"\n\nHe waited long enough for her to kick off her shoes before leading her, a right and then a left, into her small bedroom and over to her twin bed. There he spun her about, her calves now just brushing the side of her bed, and they were kissing again as he finished unbuttoning her blouse.\n\nJennifer's hands were now busy with the buttons of Aaron's flannel shirt, but by the time she had undone them all, she had to stop for him to pull the blouse off her and then he was unzipping her jeans and tugging them off her hips.\n\nAaron knelt in front of her and pulled them the rest of the way down. She lifted one foot and then the other so he could get them off all the way. Instead of standing though, he lifted her T-shirt, pulled her to him, and kissed her belly. His tongue tickled her belly button while the hairs on his face gently scraped her skin and sent shivers up her spine.\n\nWhen he stood back up, he lifted her shirt up with him, and soon he had her standing there just in bra and panties. His warm arms encircled her, crushed her breasts against his chest and his lips to hers.\n\nJennifer pulled away when she felt his hands pop open the back of her bra. \"Hey, we still haven't undressed you yet.\" Despite that, her bra was already falling forward off of her chest.\n\n\"What are you waiting for?\" He smiled and winked as he slipped her bra the rest of the way off. The cool air tickled her nipples for a second, but then his warm hands found her breasts, and he began thumbing her nipples which made her give a slight moan.\n\nJennifer could feel herself moistening down below. She did not need another invitation. She undid his pants and yanked both shirt layers out. The outer shirt was still partway buttoned, but she was able to pull them both up and over his head. That maneuver had the unfortunate side effect of removing his hands from her breasts, but sacrifices had to be made.\n\nShe ran one hand up and down his chest, massaging his muscles and giving one nipple a small pinch while she put her mouth to the other and licked and sucked. To her delight, they responded with a slight swelling of their own, not as much as her own nipples hardened, but she should feel it under her tongue. She moved her mouth to the other side and began tugging down his jeans.\n\nOne of his hands ran through her hair and the other tried to play with her breasts, but Jennifer was kneeling herself now, and they slipped out of his reach. As his jeans came down, she found herself face to face with the swelling under his boxer shorts. She helped him step out of his jeans. Gazing up, she made eye contact with him and then leaned forward to plant a kiss on his penis through the fabric. Now it was Aaron's turn to moan.\n\nNot wasting a moment, Jennifer gripped the elastic of his boxers in both hands and tugged them down. His penis caught in them for a moment but then bounced back up erect in her face, and she took him into her mouth. She wrapped one hand around his shaft and gently jerked back and forth while running her lips and tongue around his glans. Already, she could taste the saltiness of his precum.\n\nAaron continued to moan now and gave gentle thrusts in time with her ministrations. After perhaps a minute though, Jennifer felt his hands on her shoulders lifting her up. \"My turn,\" he said and pushed her backwards.\n\nEven with the bed behind Jennifer's knees, the push was not hard enough to make her fall if she had not let it. She collapsed back to the side to avoid the wall on the narrow bed. Barely had she bounced once than Aaron had grabbed the sides of her panties and pulled them off her hips and up so that her legs came with them. Once the panties were off, she tried to bring her legs back down on the bed, but Aaron caught them behind the knees. \"Oh no,\" he said and folded them back wide to either side of her chest. Her lower back lifted slightly from the bed exposing her naked vulva to him.\n\nAaron leaned down. He inhaled her scent and then kissed her on those nether lips.\n\nThoughts of her last shower and how clean she was for him danced through her head, but the kiss drove them from her mind. \"Mmm,\" Jennifer moaned. His tongue ran up and down between her labia, circled her clitoris at the top and then wove back down to the entrance of her vagina to probe gently and then moved back to her clitoris where he sucked lightly around the hood and then licked her labia. She could feel her clitoris and labia swelling and her own juices mixing with Aaron's saliva. She groped the top of his head to direct his attentions.\n\nHe released her legs and Jennifer let them settle to her sides. Aaron began climbing up her body, running a trail of licks and kisses across her belly to her breasts. There he paused to take first one nipple, then the other in his mouth.\n\nBelow, Jennifer grabbed his erection, which had already been bumping against her vulva, and redirected its head to stroke up and down on her clitoris. He began slow thrusts in her hand. She pushed the glans lower to her entrance. His lips released her nipple, and he moved up on top of her so they were nose to nose, and as he did so he slid deeper inside.\n\nWhy had she ever been nervous about this? What had scared her about his visit so much? Jennifer could not understand those thoughts from a mere fifteen or twenty minutes before. His penis slowly spreading her and penetrating her, the feel of his weight on top of her, his chest pressing against her breasts, rubbing her nipples, the stubble around his mouth brushing against her lips, the maleness of his smell, all of it intoxicated her, washed away all other thoughts and doubts, only made her want him more and more and again and again.\n\nThey found a rhythm together. She arched her pelvis to thrust up against him. Then she bent her legs back, spread herself wider to accept him deeper. She could feel his penis stretching her and bouncing against her cervix deep inside. He changed his angle. Now his pelvic bone rubbed back and forth against her clitoris with each thrust. Her hands reached to the small of his back urging him on, adjusting his rhythm to what she wanted, what she needed.\n\nJennifer could feel the wave building within her, raising her up, and then there she was at the peak, white lights blinding her eyes even as she closed them tight, wave after wave of muscles contracting up and down her body but especially there in her vagina gripping Aaron's penis again and again. Her legs locked around him and pulled him down hard onto her, pulled him in as deep as she could make him go. Unable to help herself, she cried out as the orgasm rolled through her body.\n\nHer orgasm kept going. Just as she thought it was calming, he would give another thrust and the wave continued. She rode it for a minute or more before it finally fell away, and she was able to open her eyes and stare into his pale blue ones. \"Thank you,\" she whispered.\n\nHe smiled at her. \"We're not done yet.\" He kissed her hard. He grabbed her hands and held them pinned back on either side of her head and began thrusting in and out of her in earnest now. Jennifer cried out again as new waves of muscle contractions ran through her body as his penis pounded away into her vagina and then he too was climaxing. She could feel the extra warmth as he ejaculated inside her. He collapsed on top of her and continued with rapid short thrusts until it was over.\n\nThey lay there together covered in a thin sheen of sweat. Their breathing and heart rates gradually slowed. They kissed. Aaron slipped off of her to lay on his side but the wall. With one arm beneath her and the other over her belly, her drew her close and hooked her legs together with one of his. Jennifer gave him little Eskimo kisses and they lay gazing into each other's eyes.\n\n\"I really needed that,\" she said.\n\n\"Me too.\" He kissed her. \"I love you.\"\n\n\"I love you, too,\" she said and before she could stop herself, \"I don't want you to ever go away.\" She meant it with all her heart, but regretted the neediness of it at once. She had cried too many tears with him last time and did not want to start again as soon as he walked in the door. If she clung too tight, seemed to desperate, she might drive him away or make him take her for granted. That's what had happened with her ex and had given him the green light to cheat on her. She had promised herself not to make the same mistakes again. Sixteen hundred miles was already an invitation to infidelity, and desperation would be another.\n\n\"I don't want to either.\" He closed his eyes and brushed his lips to hers. \"I'm hoping for a blizzard that shuts down this place for a week or more.\"\n\n*****\n\nBushwhackers turned out to be a very large country western bar and restaurant with a large dance floor and stage for live music, a pool room, and game room complete with a mechanical bull. On Friday night despite the impending storm or perhaps because of it, the place was packed with people at tables and bellied up to the bar. A live band was already playing on stage with a few people on the dance floor, and on the far side of the building, whoops and hollers came from the mechanical bull.\n\nJennifer and Aaron found her classmates perched on stools at their own belly table already with drinks in hand and appetizers before them. The whoops from the three ladies when they spied the couple were almost as loud as those from the crowd at the mechanical bull.\n\nAaron consented to take his arm from Jennifer's waist long enough to shake hands during the introductions. Marisa had auburn hair and light brown eyes and generous double D-cup breasts trying to escape her low cut top. Jennifer watched Aaron's eyes when she introduced them and was glad to see although they gave a brief downward bounce, they did not linger on Marisa's cleavage. Stacy was next around the table and the classmate Jennifer found the funniest. She had dark skin and darker eyes with short curly black hair and an infectious laugh. Samantha was the last of Jennifer's core group of friends in school. Samantha had dirty blond hair a few shades darker than Jennifer's and startling blue eyes. Jennifer always thought they must be colored contacts but had never asked.\n\nAll three women had seen pictures of Aaron, but Jennifer could tell they were sizing him up, and she thought that at least for first impressions he was passing.\n\n\"So it's nice to finally meet the chef.\" Stacy rested her chin on her hand and one elbow on the table.\n\nJennifer felt Aaron's arm wrap about her waist again, and he gave her a quizzical look.\n\n\"That first week or two of school, Jen always came with these really good smelling lunches with chicken and beef and rice,\" Stacy explained. \"Now she either buys something in the cafeteria, which is not pretty, or brings these little Cup of Noodles.\" Marisa and Samantha were laughing now.\n\nUnderstanding bloomed on Aaron's face. When he had helped move her out to school, he had cooked several large meals to freeze for her before he left.\n\nJennifer felt her face pink. \"I told you I'm not a cook.\"\n\nHe smiled at Jennifer. \"Looks like I'll go grocery shopping tomorrow and do some more cooking.\" He kissed her on the cheek.\n\nJennifer glared back at her friends. \"You know it's not fair. You all have family around here. I'm all by myself.\"\n\n\"Then maybe you need to fly your chef in more than once a month,\" Stacy said.\n\nAaron pursed his lips and rubbed his chin with his free hand. \"We might be able to arrange that.\"\n\n\"Don't tempt me.\" Jennifer waggled a finger at him in mock anger. She received a kiss on the lips in response.\n\n\"Always,\" he whispered. \"Want a drink?\"\n\nA quick glance that the table confirmed that everyone else had a bottle of beer, the drink de rigueur in a country western bar. \"Sure, I'll have a beer.\"\n\nReluctantly, Aaron let go of her waist and gave a slight bow to her friends before heading over to the bar. \"You'll have to excuse me, ladies, but duty calls.\" That brought some more laughs from her friends.\n\nAll four women watched him until he was out of direct earshot.\n\n\"He is cute,\" Samantha said.\n\n\"And very gentlemanly,\" Marisa agreed.\n\nStacy was to the point as usual. \"How was the sex?\"\n\nJennifer snapped her head around. \"What?\"\n\nSamantha's eyes were wide staring at Jennifer. \"You already had sex? But he just got here, right?\" Then she looked at Stacy. \"How do you know they had sex?\"\n\nJennifer crossed her arms and just stared at Stacy.\n\nAt the center of attention now, Stacy was in her element. \"We all know how anxious Jen's been all week, stressed out about class and tests and having her man come to visit. Even this afternoon, she was all wound up. Now suddenly a few hours later, she's all calm and relaxed.\" Stacy held out her hands. \"Ergo: sex.\"\n\n\"I have not been stressed all week.\"\n\n\"Oh yes, you have,\" Marisa interrupted.\n\nJennifer shot her a glare but continued. \"And now I'm out on a Friday night at a bar with my friends and my boyfriend, so of course I'm relaxed. I'll have time to be stressed later.\"\n\n\"Not if he keeps banging you,\" Marisa muttered despite Jennifer's second glare.\n\nNow Samantha looked back to Stacy for a response.\n\n\"Well then, we all know Jennifer is always on time or is texting to check in and tell us where she is. Tonight, she was more than thirty minutes late and her one text was five minutes before they walked in the door.\"\n\n\"I lost track of time catching up with Aaron.\" That excuse sounded weak and almost admitting Stacy's premise even to Jennifer's own ears. Her friends only snickered.\n\n\"Okay. Catching up. Fine.\" Stacy waved her hands in dismissal. \"So let's look at him. He can't keep his hands off of you for more than two seconds, and he's already kissed you twice since you walked in. Three times if you count when I saw him through the front doors kissing you before you came inside. We can tell how into you he is, and if he hadn't already been in you at least once tonight, he'd probably be humping your leg at the table right now.\"\n\nThey all laughed, including Jennifer. She brushed her hair back behind her ear. \"Fine. We had sex. It was great, and I'd like to get some more this weekend. So please be quiet because he's on his way back.\"\n\nAaron paused at the table. All four of the women looked at him and burst out laughing again. \"Sorry, honey,\" Jennifer said and gave him a quick kiss. \"Girl talk.\"\n\n\"No problem. Knowing guy talk, I'm sure I don't want to know.\" Aaron held up five bottles of beer for the table. \"Ladies, this round is on me.\"\n\n\"I like him,\" Marisa pronounced and took one of the bottles.\n\nAaron handed out the rest and snuggled up to Jennifer's side again with that arm around her waist. \"So tell me. Who do I have to worry about with her?\" He pointed to Jennifer. \"Any guys in your class? Anyone hanging around in the cafeteria or around town I need to know about?\"\n\n\"Hey,\" Jennifer objected.\n\nSamantha shook her head. \"Oh, no, all she ever talks about is y...\"\n\nStacy slapped Samantha on the wrist. \"She is our classmate and friend. We're not going to rat on her over one bottle of beer.\"\n\nAaron gave her a knowing smile and winked. \"Fair enough. Whiskey shots next, and I'll ask again.\"\n\nThey all laughed, even Jennifer, who gave Aaron a playful shove. He rebounded and pulled her close into a kiss. She closed her eyes and let the thrill of him run through and surrendered herself to the need for his lips on hers.\n\n\"Okay,\" Stacy's voice cut through. \"Getting awkward over here, you two.\"\n\nJennifer pulled herself away. A blush had started on Aaron's face. He shrugged at her but released her. She felt the hand on her waist slip a little lower though and give her a squeeze. \"Sorry, ladies,\" he said while shooting Jennifer a sidelong glance.\n\nShe squeezed him back.\n\nThe talk drifted after that to school, their professors, the coming test, and the paper due right after. The waitress came by, and they ordered more food. Jennifer and Aaron split a salad and burger between them. Marisa and Stacy peppered Aaron with questions about his life, where he had traveled, and what he thought of their little city. In Jennifer's mind, he fielded them all very well, even some of the more probing digs from Stacy.\n\nOver on the stage, the first band of the night finished up to applause from the crowd to which the little table of friends briefly joined in. \"Thank you Kissin' Cousins,\" the announcer said over the sound system. \"Up next we'll have Rocky Heights to entertain, but while they get set up, we're gonna have a few dance lessons for anyone here who is interested. So come on down to the dance floor.\"\n\nAaron raised his eyebrows at Jennifer. \"Would you care to dance?\"\n\nShe had wondered if he was every going to ask her, but now she felt the briefest bit unsure since her friends were partnerless. Still, this would be their first dance together. Teasing, she decided. \"Oh, do you need the lessons?\"\n\n\"I'm a quick study. Anyway, I didn't think you hung out a country western bars very often. Do you know the two-step?\"\n\n\"Do you?\"\n\nHe shrugged. \"I will soon enough.\"\n\nSamantha sighed. \"Come on. Let's just go.\" She grabbed both of them by the arms and shoved them toward the dance floor.\n\n\"What about you three?\" Jennifer asked.\n\nStacy laughed. \"Oh, honey, there's plenty of men here.\"\n\nStacy was of course correct. Other couples had already reached the dance floor by the time Jennifer and Aaron joined them. Near the entrance to the dance floor, Marisa, Samantha, and Stacey, found a little knot of men who were more than happy to be their partners.\n\nThe call leader and DJ ran the crowd through a couple of line dances one of which involved swapping off partners in a circle. Jennifer was having fun and laughing with her friends close by as they circulated together. Whenever she looked past her current partner to see where Aaron was, she always caught him looking back at her. Love or jealousy or lack of trust? Either of the first two sounded about right to her.\n\nThe song ended and Jennifer was smiling at her last partner and saying thank you when Aaron's arm encircled her waist and spun her away. \"Missed you,\" his lips whispered into her ear.\n\n\"Really?\" Jennifer laughed. \"That red head was kind of cute.\"\n\n\"What red head? All I see is a gorgeous blond.\"\n\nShe kissed him for that, and then it was lessons on Bushwhackers' version of the two-step.\n\nThey spun around the dance floor in each other's arms. Country western was not what she usually did, but dancing was dancing, and Aaron was not bad, a little rusty maybe, but a good partner.\n\n\"Let me guess,\" he said. \"You must have been a cheerleader or color guard or something like that in high school since you're so good.\" He had stumbled over a step again but that did not matter to her.\n\n\"Field hockey actually, but I did go to all the dances.\"\n\n\"Ah, so you were the belle of the ball.\" He pouted a bit. \"I'm jealous of all those guys you danced with.\"",
        "She reached up to rub the stubble on this chin. \"None of them were as perfect a partner as you.\" The music ended, the dancers clapped, and she kissed him. It felt like the audience was clapping for them.\n\nThe announcer picked up his microphone again. \"All right everyone, let's hear it for Rocky Heights.\"\n\nThey found Jennifer's friends in the crowd and stayed on the dance floor for their first two songs before stepping off to take a breather. Sam exchanged numbers with her partner, a young man in a cowboy boots and hat, while Stacy and Marisa held off to see how the rest of the night would go.\n\nAfter all the dancing, Jennifer was hot and gladly accepted the glass of ice water Aaron offered her in one hand and fanned herself with the other. They had excited the dance floor into the game room area with pool tables, foosball, air hockey, and video games. In the center of it all, surrounded by a fence and padding sat the mechanical bull with a crowd of admirers and a line to get on.\n\n\"Hey look, it's Calvin.\" Stacy nudged Jennifer and pointed to the tall muscular cowboy climbing onto the bull.\n\nCalvin was one of their classmates and well liked by everyone. He always had a good word to say, helped out whenever asked, and spent the rest of his time at the gym it seemed.\n\nThe four ladies pushed themselves through the crowd to get a good view, and Aaron tagged along with them.\n\nThe big man mounted the beast, gripped the rope in his right hand, and held onto his cowboy hat in the other. Then the bull started to rock and turn, slow at first, but picking up speed. The crowd whooped and cheered. Calvin was a crowd favorite it seemed. Soon the bull was bucking and rocking like the real thing, and still the big man held on shifting his weight backward and forward to counter the bull driver's moves. His thick blond hair whipped about him. In the end though, like all good rides, it came to and end with Calvin pitched forward off the front side of the bull, but he tucked himself and turned it into a somersault and popped back up to his feet at the railing.\n\nJennifer found herself jumping and up and down a cheering along with her friends. \"Calvin, over here!\" She waved both her arms to grab his attention and when he saw them, he gave them a lopsided grin and waved. She turned back to her friends. \"That was amazing.\" She caught the frown hiding under Aaron's forced smile. He was jealous and despite herself that thrilled Jennifer just a little. She did not want him too upset, but keeping him on his toes felt good in a twisted way.\n\nCalvin and another guy, named Jerry, came around to meet the group. \"Oh, so you're Aaron. Jen talks about you all the time.\" Calvin reached out and gave Aaron's hand a vigorous double handed shake.\n\nAaron looked a bit mollified that Calvin knew who he was and that Jennifer talked about him to her classmates, but she could tell he was still trying to size up the big handsome cowboy. \"You were so impressive up there, Calvin. That's really hard, but you make it look easy.\" She could not resist running a hand up and down his biceps while she said it.\n\n\"Yeah, Calvin, you're the best one on that thing. How long have you been bull riding?\" Marisa was on Calvin's other arm.\n\nStacy caught Jennifer's eye and winked at her. She nudged Aaron in the side. \"Wasn't he incredible?\"\n\nCalvin waved his hands about. \"Ladies, ladies, please, you're embarrassing me.\" But Calvin did not look embarrassed anymore than a peacock would with all its tail feathers spread wide. Over Calvin's shoulder, Jerry was rolling his eyes.\n\nWhen Jennifer looked back from admiring Calvin, Aaron had a flash of envy run across his face, followed by resignation. He nodded at the mechanical bull. \"So I'm getting on that thing, aren't I?\"\n\nJennifer's eyes widened in excitement. \"You would?\" Then she paused and tried to look demure. \"I mean, you don't have to do that.\"\n\nHe gave her a game smile. \"Looks like fun. Let's get in line.\"\n\nJennifer gave a little squeal and hugged him. Behind his back, Stacy gave her a thumbs up.\n\nAll things considered, the line moved along at a good pace. No one stayed on as long as Calvin. The operator seemed to go easy on the ladies who tried a hand at the bull but toyed with the men. During their wait, Calvin, Jerry, Samantha, and Marisa disappeared for a time, but reappeared with drinks for everyone before Aaron's turn.\n\nJennifer could almost see Aaron swallow his pride when Calvin came back. \"So any tips for a first timer?\"\n\nCalvin laughed. \"Don't fall off.\"\n\n\"Thanks.\" Aaron gave a little eye roll.\n\nThe big cowboy laughed some more and clapped him on the back spilling some of his drink. \"Just teasing you. Hold on tight with your right hand, balance with your left and grip with your knees. When the bull goes forward, you lean back, when it goes back, you lean forward. Easy peasy.\"\n\nWhile Aaron went into the ring, Jennifer leaned on the rail with her five friends and whistled and cheered. Stacy had her phone out taking a video and gave a running commentary while switching back and forth from asking for predictions from the group and shots of Aaron as he mounted up. They all hooted when he got himself settled and signaled the operator he was set.\n\nThe ride showed a certain amount of promise for the first few seconds as the bull warmed up. Aaron held on for the first two forward dips and a spin, but a quick combo of a backward tilt followed by a counterclockwise spin and a forward dip sent him sprawling onto the cushioned mats. He sat up and shook himself to polite claps and cheers from the crowd, but the loudest came from Jennifer.\n\nShe met him at the exit gate and jumped into his arms to deliver a big hug. \"That was great!\" She pressed her lips to his and ran her tongue across his teeth.\n\n\"Ow,\" he said and stretched his neck to the side, but his arms were around her, and he was beaming into her eyes.\n\n\"Are you okay?\"\n\nHe laughed. \"I'm fine. I might be a little sore tomorrow, but it was worth it.\" He nodded back over his shoulder. \"That is fun.\"\n\nThey just stared into each other's eyes, smiling and drinking in the other.\n\n\"So did I pass?\"\n\n\"Of course you did.\" She giggled and gave a guilty look. She put her lips near his ear and whispered. \"By the way, Calvin's gay. Jerry is his boyfriend.\" She saw the look in his eye but did not give him time to respond and kissed him again.\n\nThen Stacy and the rest were on them laughing. \"You have to see the video.\" Stacy shoved the phone into his face where his little image spun about on the bull before tumbling through the air to the ground.\n\n\"Send me the video,\" he told her.\n\nJennifer held up her phone. \"She already sent me a copy. I'll send one to you too.\" She liked Stacy and all, but that woman did not need to have Aaron's number at this point in time.\n\nThey spent a few more hours together laughing a joking. They found a pool table and played in teams. Aaron was pretty good, but Jennifer surprised him by being a bit of a pool shark. \"We used to have a table when I was growing up, and my dad taught my sister and me,\" she explained. She and Aaron danced a few more rounds together. Marisa and Jennifer even took turns trying out the mechanical bull. The operator seemed to go especially easy on Marisa and gave ample time for those double D breasts to bounce about on display. Fortunately for her but maybe less so for the crowd, she avoided any wardrobe malfunctions.\n\nAaron met Jennifer at the exit and pressed his nose to hers in an embrace. \"That was very sexy,\" he whispered and from what she could feel lower down, he wasn't just talking.\n\n\"I was planning on riding another bull later tonight.\"\n\n\"Hmm, that will be one lucky bull.\"\n\n\"Almost as lucky as I am to ride him.\"\n\n\"Maybe we should think about heading home soon then.\"\n\nThey lingered for another twenty minutes or so. Jennifer made sure her friends were set and not planning on heading home with any strangers from the bar. It took Jennifer two attempts to pry Sam away from her phone and agree not to go alone to meet the guy from earlier in the evening whom she was now texting. Then they said their good byes and headed out into the cold wind of the night.\n\n*****\n\nThe temperature was just above freezing, but with the wind, it was decidedly below. The storm was not supposed to arrive until the next afternoon. Was that tomorrow or today already? Jennifer glanced at her car's clock. Today. Despite its age, Jennifer's car was reliable and started with ease. The streets of Omaha were dark and quiet, and they encountered few cars and nary a light on the way back to her apartment.\n\nBefore they left for the evening, Jennifer had turned down the furnace, but now she turned it up to high when they came in the door. Compared to the warmth of the bar, she could feel the chill in the air when she stripped off her jacket.\n\nAaron grabbed her coat and hung his and hers up in her entryway closet and left their muddy shoes near the door. \"Where are your extra sheets? I'll get the futon set up.\"\n\n\"Top shelf in the bedroom closet. Let me help you move the table first.\"\n\nIt took just a minute to shift her coffee table and lay the futon out flat.\n\nWhen he went to the bedroom to get the sheets, she grabbed his arm. \"After I brush my teeth, I'll warm up the shower. Don't take too long.\"\n\nJennifer was just finishing brushing her teeth when Aaron joined her in the bathroom wearing only his boxer shorts. \"Not wasting any time are you,\" she said and gave him a lingering look up and down.\n\n\"You said to hurry.\"\n\nShe left him there to brush is teeth while she went back to the bedroom to undress. He ogled her naked body in the mirror when she came back to slip into the shower, and she gave him a playful spank as she went past. She pulled the curtain shut and turned on the water. There was the brief initial blast of cold, but behind it the water warmed quickly. \"I'm getting lonely in here,\" she called before leaning her head back into the water to soak her long blond locks in the shower stream.\n\nHer eyes were closed, and the sound of the water in her ears almost drowned out the sound of the shower curtain opening, but she felt the slight cool breeze of air on her body and the vibrations of the tub under her feet when he stepped in to join her. She opened her eyes in time to see him step into the water with her and pull her into a wet embrace. His semi hard penis bumped against her lower belly just at the top of her pubic hair. His pectoral muscles pushed against her breasts and his lips pressed to hers. She wrapped her arms around him and lost her self in his minty kisses.\n\nJennifer let go of him with one hand so she could reach down to squeeze his penis. She pulled away from the kiss to stare into his pale blue eyes while she rubbed it up and down. Then she tucked it down between her legs. As it tried to pop up back up, it rubbed against her clitoris and labia. She raised her eyebrows at him with a wicked grin and then began moving up and down on her toes so that her body slid along his shaft. The shower was already making them wet enough, but she could already feel her own juices adding to the lubrication.\n\nAaron still had one hand on her back to hold her while she had put both her arms back around his neck. His other hand though had found her left breast and was kneading it and playing with her nipple in time to her pelvic thrusts.\n\nHe broke the embrace first and reached for the pouf hanging from the shower caddy in the corner behind her. \"Time to get you cleaned up.\"\n\n\"Just so you can get me all dirty again?\"\n\n\"I thought you liked getting dirty with me.\"\n\nShe shook her head. \"I love getting all hot and sweaty and dirty with you.\"\n\nHe kissed her. \"Always with you. Only with you.\"\n\nThey took turns after that. He covered her pouf in suds and then ran it all over her body. The slight roughness of it normally just made her feel like she was succeeding in scrubbing off the grim of the day, but in Aaron's hands it sent little trills through her body, especially when he circled around her breasts with it all the way into her swollen nipples in the center.\n\nThen he was running his fingers through her hair and massaging her scalp as he worked shampoo and then conditioner into a thick lather. She watched the little white blobs of soap run down her chest and onto her breasts, and that triggered an image of him ejaculating onto her chest leaving little white splashes like a string of pearls. She shook herself a little bit at the thought.\n\n\"What?\" Aaron asked. Her smile reflected in his eyes.\n\n\"Nothing. So many sexual fantasies, so little time.\"\n\n\"Ooh, do tell.\"\n\nShe shook her head. \"No, now it's my turn to clean you up.\"\n\nAs much as Jennifer had enjoyed feeling Aaron's hands running over her body, she enjoyed cleaning him even more. She lingered over his biceps and chest, playing with his chest hairs. He twitched some when she ran the pouf over his belly. \"Ticklish?\"\n\n\"Just a little.\"\n\nShe turned him around to soap first his buttocks and then his legs. That left the best part for last. She turned him and again took his penis, now swollen and fully erect, in her bare soapy hand. \"Better make sure we get this really clean,\" she purred to him as she rubbed him in her hands up and down in slow strokes. At the top of each stroke, little beads of precum leaked from the head.\n\n\"Looks like I've got the bull by the horn.\"\n\n\"The bull likes it.\"\n\nJennifer leaned in to kiss him, and Aaron met her halfway. She kept her face close to his but broke the kiss enough to speak. \"I wonder what the bull will think when I'm riding him.\"\n\n\"I doubt he'll want to buck you off.\"\n\nJennifer pulled back a little more so she could focus on those blue eyes. \"He better be ready to do some bucking though.\" They finally broke out into laughs at that.\n\nShe felt his hand stroking her cheek. \"For you, I'll buck all night if that's what you want. So let's get going.\"\n\nThey both took one last quick rinse in the hot water. Aaron slipped out of the shower first and was almost done drying when Jennifer popped out behind him. \"I'll be waiting for you.\" He leaned over and licked a big drop of water off one of her nipples. \"Don't take too long.\"\n\nIt took Jennifer a bit longer to finish drying, mostly because she had to wring out her hair long hair to prevent leaving puddles everywhere.\n\nWhen she came padding out into the front room, Aaron had turned down the lights to give just a sultry illumination to the room. He was lying on his side on the futon with his head propped up on his elbow. \"Took you long enough. It's lonely out here.\" He lifted up the blanket for her to slip in beside him. He started to lean over her and kiss her.\n\nShe accepted the kiss, but put a hand on his chest to push him back. \"You got to be on top last time.\" She swung a leg over his prone form and straddled his stomach. When she leaned down, her damp tresses fell in a curtain closing them off from the rest of the world. \"Now it's my term to ride the bull.\"\n\nThey both giggled, and then she was kissing him. Her tongue darted out to intertwine with his and then she accepted his tongue into her mouth and sucked on it. His hands came up to cup her breasts and massage them. Jennifer lowered her pelvis so her pubic hair and labia just touched his belly and then rocked back and forth lower and lower onto him. On the back stroke, she could just feel the tip of his penis straining toward her vaginal opening. She wanted that penetration. She wanted to feel herself spreading and stretching over his penis, but first, she wanted something else.\n\nInstead of making her way down, Jennifer sat up and started walking up his chest on her knees. She paused to enjoy his hands on her breasts for a few moments more and ground her labia down on his chest where she left a small wet spot.\n\nAaron tried to move up also, but Jennifer grabbed his arms and shook her head. \"I'm in charge now.\" She laid his arms at his sides and slid the rest of the way up to position those nether lips over his mouth. She leaned against the wall with both hands and lowered herself down over him.\n\nAaron did not need any prompting. The lips of his mouth met the lips of very vulva on the way down. His tongue came out and ran up and down between her labia before settling around her clitoris. It swelled against his mouth as he sucked on its hood and lapped at it with his tongue.\n\nJennifer sighed and moaned. By rising and lowering against the wall, she controlled the pressure and could readjust to put his lips and tongue on just the right spot. His hands reached around her to squeeze both sides of her ass. He pushed her forward just enough so that his tongue could reach farther back and probe the entrance to her vagina while his upper lip kept up the pressure on her clitoris. Jennifer sighed some more but then inched back again to redirect his attentions to her clitoris.\n\nShe could feel the pleasure building and knew she was getting close to orgasm, but she wanted something more before she went all the way. She lifted off of his face and slid back down Aaron's body. As she slid down, she allowed her clitoris to stroke against him which sent little thrills up from her pelvis. Her vulva, soaked from his saliva and her own lubrication left a trail of moisture along his chest and belly. \"That was wonderful, but I think I really need that horn now.\"\n\nWhen her breasts reached his chest and their nipples just started to touch, she felt the head of his penis bump into her vulva. She shifted to readjust until she could feel it at the entrance to her vagina. Her lower lips were already swollen from Aaron's attentions, but at the touch of his penis, she could feel them spreading like flower petals. The tip of his penis pushed past them and entered her. Jennifer rocked back and forth there, and with each sway of her body, she accommodated him deeper and deeper inside of her, the walls of her vagina stretching out along his shaft and then tightening back around him until she impaled herself on the entire length of his penis.\n\nOnce Jennifer had buried him deep inside of her, Aaron began tucking his pelvis to give shallow thrusts in and out of her. They both moaned. Jennifer ground her pelvis against him and those thrusts. She could feel his tip deep within her bumping against her cervix, the thickness of his shaft still straining and stretching the opening of her vagina, and her clitoris rubbing against her pelvic bone.\n\nShe was supporting herself on outstretched arms above him. He brushed her long blond locks to the side out of their faces. One of his hands played with one breast and he raised his head up to take the other in his mouth. Below, he was thrusting in and out of her with increased vigor in longer strokes and that bucking she had asked for. The end of each stroke brought their bodies together and sent waves of pleasure through Jennifer's body. She began bouncing on him herself now, no longer content to let him choose their rhythm.\n\nJennifer dropped down to her elbows. The pleasure was becoming too much to hold her body above him. Her breast slipped from his mouth, and she crushed them to his chest, their softness a cushion between them, but her nipples still rubbed against the roughness of his chest hairs.\n\nShe kissed him then, thrust her tongue into his mouth just like he was thrusting his penis inside of her. She could taste him but also the tang of her own juices still smeared across his lips and face. Her hair fell back over them, covering them again in a damp cave, and then the orgasm broke free and washed over her. She cried out. She collapsed all of her weight on him. She gyrated against him. Her vaginal walls spasmed around his shaft again and again. She could feel her juices pouring out of her wetting them both in sticky sweetness.",
        "Aaron had left himself buried to the hilt within her while her orgasm consumed her. As its flames began to recede though, he began thrusting in and out of her again. His hands gripped her ass to tug her a little farther up his body and create space between their bodies. That gave him the extra room to beginning pounding into her in longer strokes.\n\nThe new angle and his reinvigorated energy sent new waves of pleasure through her. Jennifer cried out again and soon a second smaller orgasm echoed up and down her body but centered somewhere deep inside her vagina. Some part of her mind thought about rolling over to let him climb atop her, but each thrust kept jarring such ideas from her mind. Riding her own imported flesh and blood bull just felt too good to think about accommodating him anymore.\n\nShe need not have worried. Aaron's breath came fast and ragged beneath her and then he gasped. He thrust his hips up to drive his penis into her as deep as possible and crushed her body to his with his arms wrapped around her back. Deep within, Jennifer could feel the pulsations of his penis as he ejaculated inside of her for the second time since his arrival. She could just make out the extra warmth of his deposit. In response she tightened her vaginal muscles to milk as much pleasure from him as she could in those final moments.\n\nThey lay there like that, bodies intertwined, as their heart rates and breathing slowed. Lying on top of him Jennifer could feel the beating of his heart beneath her right breast, and its steady pulse on either side of his groin. Slowly, reluctantly, she could feel his penis shrinking inside of her. She had let her face collapse into the futon next to his head. She felt him turn is head toward her and felt his breath on her ear and neck when he whispered to her. \"You are incredible. You're not usually so... forward.\"\n\nShe laughed at that. \"Sometimes a girl knows what she wants and just has to go get it.\" His nose nuzzled her neck and his lips caressed her below the ear which made her giggle. \"Guess I'm ticklish too.\"\n\nShe pulled her neck away, but his lips chased her, and they rolled to their side still locked together in their arms and their legs a bit of a tangle, but their lower halves no longer joined so intimately. She already missed the feeling of him inside her, and as soon as he withdrew she could feel a warm wetness spreading between her legs. \"I think there's going to be a big wet spot.\"\n\n\"I think there already is one over here. You were very excited.\"\n\nThey lay there kissing and stroking each other. Jennifer's eyes were feeling heavy. It had been a long day of class, anxiety about Aaron's visit, sex, a night out of lots of fun but thankfully not too much drinking, and now more sex. It was the wee hours of the morning. Aaron's clock might still be two hours behind hers, but it was time to sleep. She pulled away from his kisses. \"I better get cleaned up, and then I need some sleep. I have to hit the books hard tomorrow.\"\n\n\"Okay.\" Aaron's lips stroked hers one more time. \"Thank you for tonight though. You're even more beautiful and sexy than I remembered.\" His blue eyes stared into her brown ones. \"I love you, Jen.\"\n\n\"I love you too, Aaron.\"\n\nAfter that they both took turns in the bathroom. While she was gone, Aaron did his best to clean up the bed and readjust the sheets. When he came back to the futon, Jennifer had already nestled under the covers. She was back in panties and a T-shirt for the night, but when he lay down next to her she snuggled into him, her personal blanket and space heater against the cold of the night.\n\n*****\n\nDespite sleeping in a novel place, on a less than forgiving futon, and next to an unaccustomed bedmate, Jennifer woke feeling refreshed. Her feet were poking out of the covers, and the air had chilled them, but the rest of her felt warm and snug. Her head and neck lay cradled in one of Aaron's arms and one of hers lay across his belly.\n\nShe studied him in profile admiring his wavy brown hair, his straight nose, his pink lips, the stubble over his face and chin just a shade darker than the hair on his head. His chest rose and fell in slow even breaths. He seemed so content and at peace, so sure about their relationship. When he was with her, Jennifer felt sure too. His confidence expanded out to her and she felt a giddiness to be with him. When he left though, those doubts grew back up like little dandelions. First there was only one, kind of cute in its own right, but then its cousins popped up by the dozens and the cuteness departed.\n\nFrom her point of view, their romance had blossomed so unexpected and so intense. Aaron swore to her, he had been harboring secret feelings for her for months before she announced her plans to move. The thought of losing her spurred him into action. When she thought back over their previous casual friendship or work relationship really, Jennifer supposed she had seen the signs from him, but they had been oblique and quashed down so quickly at the time she doubted their veracity. If he could hide that, what else could he hide? Why hadn't he said something sooner when they could have been a real couple? Maybe she would have stayed closer for school so they could be together. Of course, she left because this nursing program was a great opportunity for her and staying home for school or just continuing to work as a medical assistant had seemed like stagnation. If Aaron had confessed his feeling earlier, would it have made a difference? Would she have let it derail all her plans?\n\nThis nursing program was only a year though. They could tough out long distance for a year, and then see what worked out. For now, she needed to push those doubts and second guesses back down and just enjoy the ride. That and get studying for exams.\n\nJennifer closed her eyes and sighed. When she opened them again, Aaron was watching her.\n\n\"Morning,\" he said. \"Heavy thoughts this morning?\"\n\nShe shook her head. \"Just starting to get stressed about exams.\" No sense spoiling his visit with her own fears. Just enjoy the ride, and last night had been a very good ride. Her muscles down below squeezed a little at the memory, but she told them to quiet down.\n\nAaron leaned over and kissed her. \"I understand. You get dressed, and I'll clean up the room.\"\n\nBy the time Jennifer got out of the bathroom and pulled on fresh clothes in her bedroom, Aaron had the futon back in sofa mode and the sheets and pillows stacked neatly to the side. He was going through her rather meager pantry and setting up breakfast on the kitchen island: a box of cereal, a carton of milk flirting with its expiration date, a browning banana, and a wrinkled orange. \"Okay, while you are studying, I'm making a run to the grocery store for supplies.\" His smile was broad and indulgent. \"How do you survive here all by yourself?\"\n\nShe sat down on one of the chairs and grabbed the box of cereal. \"Hey, I have food here.\"\n\n\"Yes, like Marissa said, plenty of Cup of Noodles and frozen dinners.\"\n\n\"I don't have time to cook.\" She sniffed the milk before pouring it over her cereal. It still smelled fine. \"Anyway, that was Stacy who said that, not Marisa.\"\n\nAaron shrugged. \"I stand corrected, but I'm still going shopping. You need something healthier in you so you can study better. I don't want you flunking anything and have to stay here longer.\"\n\n\"I am nowhere near flunking anything, thank you very much, and I do eat pretty healthy.\"\n\nAaron pointed to the two pieces of fruit and raised his eyebrows.\n\n\"Fresh fruits and veggies are more expensive here in the winter. They say it will be a lot better in the summer.\"\n\n\"Fine, but I'm still shopping and am going to cook you up some nice dishes to hold you for a while. Anyway, we may get snowed in later today you said. We may need supplies to last days, I hope.\" He poured himself a bowl of cereal and came to join her on the other side of the island.\n\nJennifer put her hand over her mouth while she swallowed. \"That's right, I almost forgot. Tanya said if the weather gets too bad, we can come downstairs to her place tonight for dinner.\" She blushed just a little. \"She was worried I wouldn't have any food here either.\"\n\nIn the end, they both headed out to the grocery store together. Jennifer needed to study, but now that Aaron was here, she did not want to let him out of her sight.\n\nThey were bundled up and coming down the stairs from her apartment together. Aaron's arm was around her waist, and he was telling her about mutual friends from work.\n\nAcross the way, one of her neighbors, a muscular guy a year or so younger than Jennifer, was just getting out of his car and coming up the opposite walkway. Jennifer suppressed the urge to call out to him, but he saw them on his own and did a quick double take. Then he raised his hand and waved. \"Hey, Jen.\"\n\nJennifer swore to herself. \"Morning.\" She gave a quick wave and kept heading toward her car, but she felt Aaron hold back slightly as he and her neighbor regarded each other.\n\n\"Who's that?\" His voice sounded causal, politely curious, but she thought there was a note of jealousy underneath. Strange how last night making Aaron feel jealous over Calvin, someone she would never have a relationship with, had given her a little thrill, but now this morning she wished they had left her apartment a few minutes earlier or a few minutes later.\n\n\"That's Daniel,\" Jennifer supplied. \"We sometimes see each other in the gym downstairs.\" Daniel was cute and well-built and funny. He also was a bit of a player because Jennifer had seen multiple women coming and going from his apartment in the past month or so that she had lived here. He definitely flirted with her at the gym but less so after she had mentioned Aaron, but if truth be told, sometimes she flirted back just a little. It wasn't like she was interested in him, and she suspected that flirty was Daniel's default setting around women, but the attention was flattering.\n\n\"Okay,\" Aaron said.\n\nJennifer was relieved he did not press the matter any further.\n\nThe Baker's grocery store closest to Jennifer's apartment was crowded for a Saturday morning. With the big storm predicted in a few hours, everyone was getting their weekend shopping done early and stocking up, and stocking up was what Aaron had in mind. Jennifer knew how stubborn he could be and remembered the meals from his last visit, and so she offered only a token protest before adding her own suggestions.\n\nBy the time they arrived back at the apartment, the wind was whipping up and shaking errant twigs from the bare tree branches, and the first few snowflakes caught in Jennifer's hair. Loaded down with bags of groceries, they managed to make it up the stairs without slipping which was a relief. A week before, Jennifer had the opportunity to test some of her developing nursing skills on Mrs. Zarreta from two doors down when she slipped on the last two stairs. Thankfully the injuries had mainly been scrapes and bruises to the woman's pride.\n\nIn the kitchen, Aaron took charge unloading groceries and storing them away. He waved away her help and sent her off to her books. Jennifer did not object too strongly. Relaxing as Aaron's visit was on one hand, her anxiety about the coming exams and the paper was beginning to take precedent. She retreated to her room and closed the door to keep out the noise but also the delectable smells that were soon emanating form the kitchen.\n\nAaron left her alone for an hour, and Jennifer made it through two of the five chapters that were going to be on Monday's first test. She still had her notes to go through, and despite her earlier claims about her grades, pharmacokinetics worried her.\n\nWhen she emerged for a bathroom break, Aaron was sitting at the kitchen table typing away on his tablet. The smell of roasting chicken was just starting to fill the room. The fan in the kitchen hood hummed merrily away while a pot simmered on the stove. Next to Aaron was a fresh bowl of fruit salad and two plates with half a sandwich each.\n\n\"Oh my, you have been busy,\" she said.\n\nHe smiled at her. \"Lunch is ready when you are.\"\n\nShe came to join him and nodded at the stove. \"What's cooking over there?\"\n\n\"Chicken's in the oven. We can have that tonight, but there'll be plenty of leftovers to freeze for you. I'll cook some yams later, and mix up a spinach salad. On the stove is a Spanish chickpea spinach stew that I hope you love. Again, it keeps pretty well and is good for the winter.\"\n\nShe sat down in the chair next to him and sighed. \"You are so sweet. Thank you.\" She leaned in and gave him a quick kiss. \"You are too good to me,\" she added and gave him a tight hug.\n\n\"Impossible,\" he said. \"Take a break and have a sandwich with me. How's the studying going?\"\n\n\"Not bad.\" She lifted the top of the bread to peek: turkey and avocado on toasted bread with some sort of fancy looking spread. \"I may need your help with some of the pharm stuff. There's so much to remember there. This looks delicious by the way.\" She took a bite. \"Hmm, and tastes delicious.\"\n\nAaron grabbed his own sandwich. \"Glad you like it. I'll do my best. Seems like there's always new pathways to remember.\"\n\nJennifer scooped out some the fruit salad onto her plate. \"What are you working on?\"\n\n\"Presentation for work.\" He waved his hand at the screen. \"If we get your stuff done, and I get this done, I'll try it out on you.\"\n\n\"Great, I'd love to hear your talk.\"\n\n\"She says not knowing what she's getting herself into.\"\n\nThey laughed and enjoyed the rest of their lunch together. Outside, the wind beat against the walls, and snow flurries spun against the windows. Afterward, Jennifer helped clean off the table and then moved her books and notes back out to the desk in the living room while Aaron checked on his culinary creations.\n\nShe hated to ignore him, but the studying needed to get done, and so she tried to buckle down and power through the next chapters.\n\nFor a time, she could hear him typing away at the kitchen table and humming to himself. She turned around and saw he had ear buds in to listen to music while he worked. She snorted in amusement at the sight. The tune sounded familiar, but she could not quite place it. He must have felt her eyes on him, because he looked over to her. He gave her a smile and a wave and went back to his work. She shook her head and turned back to her own books.\n\nSome time later, he stopped typing and went back to the kitchen. She heard him rustling about and the microwave running. In front of her, pathways and complicated diagrams danced in front of her eyes. The next thing she knew, she could feel his presence over her shoulder, leaning close to her, his breath on her neck. She put her hands on the side of her head. \"Trying to study here.\"\n\nHe chuckled and set a steaming mug of hot cocoa on the desk next to her book. \"A little pick me up.\" She put down her hands and smiled. He kissed her cheek. \"Keep studying.\"\n\nHe walked over to the glass doors leading to her small patio. He leaned against the wall and gazed out at the falling snow beginning to pile up in the central courtyard. Lost in his own thought, he sipped his own mug of cocoa while he watched.\n\nJennifer watched him for a while and contemplated how lucky she felt to have found him, how reassuring and calming having him near felt despite being distracted at the same time. She turned back to her books and her own cup. She took a quick sip and almost burned her lips, but it did taste good. She went back to work.\n\n*****\n\nAnother hour of endless drudgery and studying crept by. Conversely, when she looked at how much more she needed to study, time seemed to be slipping through her grasp, but her head felt full and her body antsy like she needed to get out and move. A quick run might do it to refresh her, but with the storm still raging outside, that was not an option. She could go to the gym downstairs, but that still involved venturing into the cold and snow. In any case, this weekend Jennifer had other options.\n\nAaron was busy back on his tablet and whatever work or games were occupying his attention.\n\nJennifer stretched when she stood up and then went to the bathroom. She splashed some water on her face to refresh herself and then examined her reflection in the mirror. Even to her, her deep brown eyes seemed alive and mischievous. A quick coat of lip gloss added an extra shine and depth of red to her full lips. She fluffed her hair a bit and then undid another of the buttons on her shirt to reveal a little more cleavage and added a dab of perfume to her wrists and between her breasts. That was probably unnecessary to get Aaron's attention, with what she had in mind she doubted catching his attention would be hard, but this would be round three within twenty-four hours, and she wanted to give him every opportunity to rise to the occasion so to speak. Afterwards, she might be a bit chaffed and regret it, but now she was too pent up and horny to think much beyond the immediate future.\n\nSprucing up accomplished, Jennifer headed back out to the front room where Aaron was still at the island working. She slipped up next to him and swung a leg over his so she could slip between him and the screen and climb into his lap. She settled down with her arms around his neck and leaned forward so her chin was near his forehead and her chest level with his eyes.\n\nHe took in the view for a few seconds before looking up into her eyes. \"I thought you were studying.\"\n\nJennifer shifted back and forth so her breasts bobbed in front of his face to catch his attention again. She could smell the little whiffs perfume coming off of them as she moved. \"I am. I was looking for a little help with my anatomy lessons. Do you think you could lend a hand?\"\n\nAaron was running his hands up and down her sides. \"I think I could lend a hand or two... or maybe a few other body parts if you like.\"\n\n\"Mmm, I like.\" She lowered her mouth to his, and they kissed.\n\nAt the bottom of the stroke, she ground her body against his. She felt his hands come around and grab each side of her ass. They squeezed her and redirected her strokes a little further in where she could feel a growing firmness that assured her round three was going to happen.\n\nAaron's lips left hers and trailed down her chin and neck and settled into the center of her cleavage giving little licks and sucks to the top of the mounds of her breasts.\n\nJennifer sighed and pushed Aaron's face deeper between her breasts. His hands rested in the small of her back and leaned her backward until her back leaned against the counter, her pelvis pushed forward into his. He moved one hand to the front to begin undoing her blouse buttons until the combination of hand and teeth popped her right breast free of shirt and bra. Its plump nipple stood proudly erect. He looked her in eye and ran his tongue up it like licking a lollipop. Jennifer shuddered at the feeling and leaned her head back in enjoyment. A little sigh escaped her lips when her left breast, with Aaron's help, also escaped her bra. Aaron held one nipple in his mouth flicking at it with his tongue and the other nipple between his fingers where he gave it little massages and pinches.\n\nShe lay back like that for several seconds enjoying the sensations, but in the end she needed more. She sat back up and broke his suction on her breast. \"Your turn.\" It took some strength and rocking, but she was able to yank his shirt out of his pants and up and over his head. Once it was it out of the way, her hands descended onto his chest and began squeezing and massaging his muscles. Her lips found his again and his hands found her breasts, but she broke away to return his earlier favors by suckling his nipples while he ran his hands through her hair.\n\nAaron reached a hand down to her chin and lifted her face back up to his. \"That feels great, but I think we have some other body parts to study up on.\"",
        "She laughed. \"I like that idea, and these do seem a little confining.\" She reached down and popped the snap at the top of his jeans and unzipped his fly. \"Feel better now with more room?\"\n\n\"I could think of some tight places I wouldn't mind.\"\n\n\"Well, let's see if we can find any of those places.\" She wiggled in his lap which made her breasts sway merrily in front of his face. His hands were busy finishing undoing the buttons on her top and unhooking her bra, but he leaned forward and caught one of her nipples lightly with his teeth before sucking it into his mouth.\n\nHer top finally came free and fell to the ground, and Aaron began undoing her pants. He slipped a hand inside her panties and ran his fingers through her pubic hair down toward her clitoris and wide spread labia.\n\nNow of course was the awkward part. As she sat there in his lap, Jennifer wished she had thought ahead to switch into a skirt that she could have just hiked up. Then she could have just pulled her panties to the side and they would have been in business, or better yet she could have come out Cherokee or even plain naked. Oh well, hindsight was always twenty-twenty as they said, and although naked was nice, Aaron getting her naked was half the fun.\n\nWith regret in her eyes, Jennifer slipped back off his lap. \"Let's get you out of these.\" He raised up his hips, and she pulled down his jeans and boxers all in one go. He helped her kick them off his feet and to the side. Then he reached for her, but she turned away from him. She tossed her hair forward and peered back at him over her left shoulder before shimming out of her jeans and panties. She bent low to pull them off exposing Aaron to the delectable view of her ass and pussy pointed to the sky. She felt his hands grip her cheeks and squeeze and as she stepped out of the jeans, his lips kissed first one buttock, then the other.\n\nThe roughness of his facial scruff and the softness of his lips tickled and she giggled. When she straightened back up she leaned over the counter and spread her legs wide behind her. Still peering back at him over her shoulder, she asked, \"Any luck finding any of those tight places?\"\n\nAaron stood up now and squeezed both her rear cheeks. His erect penis bounced against her when her leaned over her to run kisses down her back. He stood back up and stared at her posterior. \"Hmm, so many options to choose from. I'm not sure I can make up my mind.\"\n\nJennifer laughed. \"Let's go with option one for now.\"\n\nHe gave her a devilish smile. \"Always an excellent option. Maybe we'll save option two for later.\"\n\n\"Maybe.\" Then she grunted as he took the head of his penis and ran in back and forth in her slit. Her labia turned red as they swelling and he parted them from front to back with his member. He placed his glans at the entrance to her vagina and pushed forward. \"Ooh,\" she said and winced slightly. \"Maybe I'm the one who needs more warming up.\" She could feel her juices starting to flow, but perhaps all their bedroom gymnastics had tired her body out more than she realized.\n\n\"Don't worry. We'll go slow.\" Arron leaned back over her to run kisses along her back. Her pointed his penis downward so that it slid forward between her labia to rub against her clitoris and then back not quite to her vaginal opening. When he slipped his hands around in front of her chest, Jennifer got up on her elbows to give him free access to her breasts. He took one of those pliable orbs in each hand and buried his face in the back of her hair and neck to shower her with kisses. He let her slide up and down against his penis at her own speed. Within seconds, Jennifer could feel her juices flowing in earnest. Mixing with his own secretions, his penis soon felt satisfyingly moist. Jennifer reached down between her legs and redirected him away from her clitoris and into her vagina.\n\nAs always, he moved slow at first. Slow shallow thrusts stretched her opening around his glans. Three thrusts later though, and the thickness of his shaft spread her further and within three or four more thrusts, he had slipped his entire length into her.\n\nJennifer moaned and squeezed him as tight as she could, trying to hold him in her. Aaron kept himself buried deep inside of her, letting the last of her muscles dilate to accommodate him, but then he pulled back and began thrusting in and out in a crescendoing tempo.\n\nEach stroke sent those little thrills through her body. From the rear, her clitoris missed its regular stimulation, but the thrusts of his penis against her anterior vaginal wall brushed her G-spot. His strong hands gripped her hips while he thrust into her, but by raising and lowering her upper body on the counter, she found the perfect angle. She closed her eyes and felt her eyes rolling upward as the ecstasy built inside.\n\nHis right hand left her hip and slipped around in front of her to find her clitoris. She felt his fingers run between her labia to moisten themselves before settling back to rub and squeeze her little pleasure button. Jennifer moaned. Good, but the movement of his hand had changed his entry angle, and so she had to take a moment to readjust herself. It did not take her long though. Much better. Now her head was a buzz, all her thoughts flying away, all her concentration and sensation focused on her pelvis with the steady pressure of his fingers on her clitoris, his shaft stretching her vaginal opening, the rest of his shaft and glans bounding against that special spot deep inside, and the contacting of her own muscles all around his throbbing penis.\n\nThe orgasm swept over her. She cried out and thumped her head against the counter. She rocked backwards against him trying to squeeze every ounce of pleasure from him that she could. Her legs began to quiver and moisture began to creep down her inner thigh.\n\nAaron had slowed his own movements as she orgasmed and allowed her to take control of the rhythm. As her quivering and ragged breathing began to slow, he began thrusting again. \"You liked that?\"\n\n\"That was incredible. It was just the right spot.\" Jennifer spread her arms wide on the counter to soak up the welcome coolness. Her body was sticky with sweat.\n\n\"I think we found just the right tight spot then.\"\n\nJennifer laughed and turned her head back to look at him. He had a light sheen of sweat on his forehead and his face was flushed. She smiled and wiggled her derri\u00e8re at him while he thrust. \"I knew you'd like it.\"\n\n\"Oh, I definitely do.\" He leaned forward and pulled her back to her elbows so that he could reach around to grip her breasts. They were just large enough that his hands could not quite cup their entirety. \"Since your done, I think it's my turn.\"\n\nJennifer had thought his previous thrusts were firm, but now he started thrusting harder. Each time his pelvis met he buttocks they made a slapping sound and each time that happened she felt that he was probing deeper and deeper and now each thrust followed the last quicker and quicker. She leaned her head back and moaned at the feeling. Kept up for long enough, she thought she might even orgasm again. He was using her, using her breasts like handles, using her vagina for his pleasure, and she loved it, loved the way he enjoyed her body, loved the way her body responded to his touch to the mere thought of him. She could feel his raw desire for her like she had felt from no other man in her life.\n\nAaron cried out, thrust himself deep within her, spread her labia around his penis as wide as they would go, and then shook. Jennifer could feel the heat deep inside her, and then he collapsed forward against her and they both fell against the counter. His arms tightened around her chest. She could feel his heart pounding against her back. She turned her head to his and he kissed at her neck and cheek and the side of her lips while continuing to give shallow little thrusts. Inside, she could feel him shrinking, slowly withdrawing as he spent himself. Her vagina tried to hold onto him, but he slipped away, and when he did, she could feel a bigger trail of wetness running down her thigh.\n\nWith effort, Aaron stood back up and drew Jennifer with him. She turned to him and wrapped her arms around his neck. \"Thank you. That was everything I needed.\"\n\n\"You're everything I need.\"\n\n\"Come on, I think I need to lay down for a few minutes.\"\n\nShe lead him back to the bedroom, and they cuddled up on the bed under her quilt. It was amazing how quickly she went from overheated to cool as the sweat dried on their bodies, but under the covers and safely wrapped in Aaron's arms, the warmth returned. She closed her eyes, and they dozed.\n\n*****\n\nThankfully for Jennifer's studying, her phone started buzzing about twenty minutes later. It was her sister, Rebecca, calling to check in during the snowstorm. \"It actually doesn't look as bad as the last one.\" She laughed. \"No, we're fine, all snug and cozy indoors.\" Aaron reached over to squeeze her breast, and Jennifer swatted his hand away. \"He's had a lot of work to get done too, some talk he has to give or something.\" She sat up in bed and tried to get up, but Aaron wrapped an arm around her waist and held her tight. \"We went shopping earlier, and he's been cooking too.\" She swatted him a few more times until he relented and let her go. \"Some sort of chicken, and he said a spinach salad.\" She padded out to the front room to find her clothes. \"Well, you'll have to ask him about that.\" It was amazing how strewn about everything could be in such a small apartment. \"Okay, hold on a minute.\" She walked back to the bedroom. \"Rebecca wants to talk to you.\" She put the phone back to her ear for a moment. \"By the way, I'm glad you didn't try to FaceTime me this time. That could have been really awkward.\" She winked at Aaron and tossed him the phone. His face was already turning pink before he even put the phone to his ear. She could hear Rebecca making some a comment on her scandalous remark but was too far away to make it out. Let Aaron deal with that. She went into the bathroom to clean up and get dressed.\n\nWhen she came back out, Aaron had vacated her bed and was pulling on his own clothes in the living room. \"So Rebecca wants us to fix dinner for her and Tom when you come back to visit.\"\n\n\"Don't you mean for you to cook dinner?\"\n\n\"No. Us. I told her I've been teaching you to cook. That's why you didn't want her FaceTiming you because you were a mess.\"\n\nJennifer scoffed. \"She so did not believe that at all.\"\n\nAaron laughed. \"No, she didn't. So I told her how I had you bent over the counter banging you, so maybe she should call back later.\"\n\n\"And you so did not say that to her.\"\n\n\"Fine, you're right, but I should have. Anyway, yes, she did basically invite herself over for dinner when you come back.\"\n\n\"Sorry, she can be like that, but she's really been bugging me to meet you. I figured she would call sometime this weekend.\"\n\nAaron had finished pulling on his shirt and walked over to her. He put his hands around her waist and looked into her eyes. \"No problem. I'm looking forward to meeting your family and getting to know even more about you.\" He gave her a quick peck on the lips.\n\nJennifer rolled her eyes. \"Don't wish for more than you can handle. Rebecca will be nothing compared to my brother, Chris, or my dad.\"\n\nAaron nodded in acquiescence. \"I will come humble and prepared then.\"\n\n\"Oh, don't worry, their bark is worse than their bite. I'm the middle one. Rebecca's always had all the pressure to be a good example, and as the heir to the family name, Chris gets all the pressure to make something of himself. I was always daddy's little girl and get away with whatever I want.\"\n\n\"Not such a little girl anymore.\"\n\nJennifer shrugged. \"You're not the first man I've brought home. They'll give you a little bit of a hard time, but they've all heard how good you've taken care of me. You'll be fine.\"\n\n\"I like taking care of you. Speaking of which, do you need any help with real studying, not just anatomy?\"\n\n\"That'd be great. I need some water first though.\"\n\nThey settled in for the last of the afternoon. The room was already getting dark between the early sunset and persistent waves of storm still rocking the walls outside. Jennifer sat balled up in her fluffy armchair near the window while Aaron leaned back on the futon with his feet on the coffee table, and her pharmacology book open in his lap. He quizzed her over the next hour or so, and Jennifer was pleased to realize how much she remembered. Even when Aaron tried to throw her a curve ball or two, she managed to piece together what he was going for.\n\nTanya from downstairs called to check on them, and when Jennifer assured her that they were fine and not about to starve, she thought her friend sounded relieved. She was very kind but had two small children and a husband to feed on a tight budget. The original offer had been made out of politeness and a little bit of worry, but Jennifer suspected the prospect of adult conversation had seemed appealing at the time. After a long Saturday stuck indoors though, company must have seemed a bit more of a chore than a blessing. Jennifer did promise to bring Aaron by to say hi and visit when the weather cleared up tomorrow.\n\nBy then, it was time for dinner. They debated a bit, but Jennifer opted for the warm chickpea stew for dinner on a cold, snow-filled but not-quite-blizzard winter's day to go with the steamed herbed yams and the crisp spinach salad. Aaron had even cooked up a vinaigrette dressing from scratch to go with the salad. The dinner was both fresh with the salad, but warm and filling with the earthy tones of the yams and the spicy flavor to the chickpea stew.\n\nThey squabbled in a good natured way over the dishes, but again, Jennifer won the right to help Aaron clean up. Before dinner, he had left the chicken out to cool and now portioned it out into containers to freeze for future meals, and then he did the same with the stew. By the time he finished, Jennifer had scrubbed out the last of the plates and pots and pans. He took over drying duties and put them away.\n\nThe day was drawing to a close. She had made it through all five pharmacology chapters. That still left a paper to finish writing, but that was due later in the week, and later an actual anatomy test that their earlier activities had surprisingly not prepared her for. Her head was full enough for one day.\n\nHer fluffy armchair being more comfortable than the futon and just large enough for two, they snuggled up together in front of the television with him more of less sitting and her draped across his legs and the armrest. They used his Netflix account and flipped through a few episodes of various old and new shows.\n\nWith the wind still beating about outside, and the snow piling higher, they took a quick shower together. Though sated from earlier, they lingered over each other's bodies a bit. They teased and talked big, but in the end, they mutually agreed it was all talk. While Jennifer dried her hair, Aaron prepared their bed again. Under the covers, he nuzzled up to her neck and trailed little kisses there. They murmured sweet endearments to each other, and eventually fell asleep with arms around each other, legs intertwined, and his hand under her shirt to cup one of her breasts.\n\n*****\n\nBy morning, the snowstorm had blown itself southeast and out of town, but the morning sun was still dim through heavy clouds and frosted windows. During the night, Aaron had ended up on his back, but he was still pressed up against Jennifer's side feeding her pleasant warmth. Her left leg was draped over both of his holding him to her, and his hand was on her inner thigh, even in sleep close enough to suggest places it might wander. She enjoyed lying there in the drowsy early morning warmth of the bed listening to the gentle rise and fall of his breath and smelling his manly scent mixed into her sheets. Somewhere out there her paper was calling to her, but that could wait. What finally made her stir was the demands of her bladder.\n\nAaron rolled to run a hand under her shirt and over her belly as she snuck out. \"Don't be long.\" Then his head collapsed back to the pillow and his eyes closed. By the time she finished in the bathroom though and went to the kitchen for a drink of water, he dragged himself out of bed and joined her in the kitchen. He took a drink from her glass and kissed her good morning. Before he headed to the bathroom himself, he reached around to squeeze her ass. \"Head back to bed, and I'll join you in a few minutes.\"\n\n\"Sounds delicious to me.\" She squeezed his ass back and when he turned to leave and gave him a little spank. \"Like you said, don't take long.\" As he headed away from her, she decided he needed a little more motivation. She stripped off her T-shirt, balled it up, and hit him in the back as he made it to the hallway. When he turned to give her a mock glare, she waggled her breasts at him and then gave them a stroke and squeeze herself. \"I'm getting a little cold over here.\"\n\nHe laughed and bent to retrieve her shirt. He held it to his face and inhaled deeply. \"I'll be right back.\"\n\nBack in bed together, she lay on her back and let him shower her in kisses over her lips and neck and chin, out to her ears which tickled, and then down across her chest to her breasts. His right hand cradled the back of her neck while his left hand roamed up and down her sides and belly then across her outer thighs and then back up along her inner thighs. She parted her legs so that his fingers could glide over the crotch of her panties. They lingered there running up and down to tease her through the slowly dampening fabric.\n\nHis mouth left her breast and returned to her mouth where they kissed deeply. While he kissed her, he slid his hand up her belly and then back down underneath her underwear this time to run up and down between her labia. Under his ministrations, they swelled and parted giving him access to the wetness of her vagina and the swell of her clitoris.\n\n\"Umm, gentle,\" she said.\n\n\"Little tender?\"\n\n\"Sorry, I'm not used to all the attention.\"\n\nHe gave a soft chuckle. \"Me neither, actually. We don't have to do anything this morning if you're too sore.\"\n\nShe pursed her lips, looked up and rocked her head as if in contemplation. \"This will be out last chance for more than a month maybe. It's worth a little chaffing.\"\n\nShe reached up to pull him back into a kiss with one hand and dropped the other down to the swelling in his boxers while his fingers resumed their soft probing. Soon one of his fingers slipped inside of her and began making little swirling and rubbing motions, and his thumb continued circles around her swelling clitoris. In her hand, his lubricating juices were starting to coat the tips of her fingers. She withdrew them and lifted them to her lips. She stared deep into his pale blue eyes while she licked and sucked the juices off of them. His pupils were dilated and in them, she could just see a ghost of herself reflected back at her.\n\n\"Let's suck each other for a while,\" she whispered.\n\n\"Okay. I'd like that.\"\n\nThey each striped off their underwear, and he turned around on the futon. They lay on their sides facing each other. He spread her legs and lowered his face over her vulva. Jennifer sighed at the feeling of his tongue down below and the soft rub of his facial hair. Then she took his penis and slipped it into her mouth. The saltiness of his precum ran over her tongue. She ran her tongue over the slit of his penis and then around the glans in circles before wrapping her lips around him and sucking. With one hand rubbing his shaft, she began to bob her head back and forth over the top of his penis. She found with a little readjustment, she could comfortably take the first inch and a half to two inches of his penis in her mouth and stimulate the rest of him with her hands. He seemed to enjoy what she was doing and began moving his pelvis in gentle strokes in time with her head and hand movements.",
        "Down below, Jennifer could feel the softness of his tongue circling and pressing against her clitoris alternating with the pressure of his lips when he sucked on her. He slipped the first two knuckles of two fingers into her vagina to stretch her while one of the fingers of his other hand made little circles with her vaginal secretions around her anus.\n\nAll of her nerve endings from the mouth to her vagina and anus were firing off. Only her nipples and breasts felt a bit lonely but neither of them had hands or mouths free to do much about that. One of those dark fantasies about having more than one lover at a time danced through her mind. Having another penis to alternate sucking or perhaps one deep inside her vagina while she sucked the other was one of those reveries she did not often let surface. She imagined Aaron would be less thrilled about that vision and would prefer one of him with two women. Having sex with another woman was not one of Jennifer's deep desires, but at the moment, if the other woman made herself busy by playing with or suckling Jennifer's breasts, maybe that would be okay. In the midst of all the passion, she might have blurted out that suggestion, except that Aaron's penis was filling her mouth which was just as well. Once she orgasmed, she would be able to file those thoughts back away where they belonged, out of sight and unspoken.\n\nBy some joint signal, they both broke away at the same time. Aaron turned back around, and lay next to her. They kissed and the taste of both their secretions mixed on her lips. She started to pull him on top of her, but he shook his head and rolled to his back and swung her hips over his. Her breasts dangled down and he took one in each hand to give them the attention they had been yearning for.\n\nJennifer had to reach back to readjust the angle of his penis and lowered herself on him. She rocked astride him savoring the sensations of his penis stretching her and the feeling of his hands and mouth on her breasts and nipples. She sat back until he was buried deep within her.\n\nHe sat up with her, and she wrapped her legs around him. His hands grabbed her buttocks and began to lift her up and down on his penis. Jennifer pushed her hips forward so that her clitoris rubbed against his pubic bone with each stroke. Her nipples rubbed against his chest as she rose and fell. It all felt so good.\n\nShe unfolded her legs and then leaned back along Aaron's legs. His penis stretched back with her and rubbed against the front of her vagina as she slid back and forth along his shaft. His thumb found her clitoris and rubbed it in circles.\n\nTheir movements were lazy and unhurried. They reveled in the moment and the feel of their bodies joined. They moved through multiple positions after that enjoying the sensation of each angle. She rolled over and Aaron entered her from behind laying flat. Then she shifted her legs to kneeling but kept her chest stretched out on the bed before moving to all fours and then finally getting all the way up to kneeling with Aaron's steady thrusts in and out of her. She arched her back and laid her head on his shoulder. His hands cupped her breasts and her own fingers played with her clitoris. When there were sufficiently wet, she offered them to him, and he sucked her juices off of each one.\n\nThey ended facing each other with him on top. With each thrust, he rocked his pelvic bone against hers trapping and stimulating her clitoris. Her hands rested on his hips and guided his angle and rhythm to just the perfect spot. She could feel the orgasm building and the warmth radiating out from her pelvis and then the waves of contractions and pleasure overwhelmed her. She cried out and shook and pulled his body tight down on top of her. Her legs spread wide and then wrapped around his legs to bind him to her. It seemed to go on forever. The contractions would begin to abate and then he would thrust again and a new wave would start.\n\nEventually, all that remained was warm contentment. Jennifer opened her eyes to see him staring down at her. \"Thank you. That was great.\"\n\nHe bent down to kiss her. \"I'm glad you enjoyed it. I love making you cum.\"\n\n\"And you are so good at it.\" When they kissed again, he began thrusting. The movements sent out new little waves of pleasure. Soon he was going faster and harder into her. He lay atop her and crushed her body to his and then his own orgasm washed over him. He stayed there on top of her giving little clusters of thrusts as his breathing calmed. He finally rolled off of her.\n\n\"Doesn't seem fair.\" Jennifer rolled on her side and played with his chest hairs. \"Mine can keep going and going, and yours seem so short.\"\n\nThat made him laugh. \"You do want it to keep going at the time, but they're long enough I think. When I'm making love to you though, it could never be long enough.\"\n\n\"Now you're just saying things to get back in my pants again.\"\n\nAaron glanced down her body and frowned. \"I don't think you're wearing any pants.\"\n\n\"And who's fault is that?\"\n\nAaron scrunched up his face and mused for a moment. \"I think you're the one who striped off your own shirt and panties this morning.\"\n\nShe poked him in the chest. \"Yes, because you wanted to get into them.\"\n\n\"You got me there.\" They both laughed and then kissed.\n\n\"Unfortunately, I think it's time to get back to the books.\" Jennifer sat up. \"Now what happened to my panties?\"\n\nIt took them both a while to dig through the sheets to find their underwear. Jennifer's T-shirt was in the bathroom where Aaron had left it.\n\nOutside the distant rumble of snow plows filtered in while the closer by sounds of children playing in the snow echoed from the apartment courtyard.\n\nAt the kitchen island, Jennifer paged through her notebook while Aaron cooked omelettes with bell peppers and spinach and served them up with some of the cut fruit salad from yesterday's lunch. After her morning work out, the breakfast hit the spot.\n\nThey both got dressed after that, and since they had been cooped up indoors for almost an entire day at that point, they bundled up and risked the cold and snow for some fresh air and a change of scenery. Aaron had neglected to pack a pair of gloves. Jennifer got her nice faux-fur lined brown leather gloves and leant him her hot pink pair embroidered with Js. If nothing else marked him as taken, those would. Not that she planned on letting him out of her sight anytime soon anyway.\n\nThey walked around the courtyard together and tried to pack snow into the semblance of a snowman. Being Californians at heart though, their efforts were less skilled than the local children. Building the snowman though, devolved into a snow fight that soon left them a mix of cold and wet and flushed and sweaty but strangely very happy to be that way together. When the fight seemed to have wound down, Aaron went to give Jennifer a hug, but when she pulled him into the embrace, she shoved a last handful of snow down the back of his shirt. She ran away shrieking in laughter until he chased her down, and they ended up collapsing in the pile of snow that had been their attempt at a snowman. Caught in each other's arms, the laughter turned to kisses and a few fleeting gropes through multiple layers of clothes that they had to curtail given their audience.\n\nAs she had promised, they stopped by Tanya's apartment to say hello and introduce Aaron to her husband, Jonathan, and the kids, Henry and Melissa.\n\nAfterward back in Jennifer's apartment they warmed up with Aaron's favorite, mugs of dark hot chocolate. Left up to her, Jennifer might have gone for coffee, but that would have involved getting in the car, and the roads still were not great, and Jennifer needed to get back to studying. Anyway, Aaron added a little dash of cinnamon and vanilla to the dark chocolate he used which added a nice little kick.\n\n\"Bad news,\" Aaron said after he had been online for a few minutes. \"My flight's still on.\"\n\n\"The afternoon is still young. Maybe another storm will blow in.\"\n\nBut of course it did not.\n\nThey spent their last hours together studying. Aaron helped quiz Jennifer some more and proofread the first draft of her paper. Jennifer listened to him practice his presentation and gave him some pointers and even fixed some of his broken slide animations.\n\nWhat they avoided until the end was more discussion of his impending departure.\n\n\"So when exactly is your spring break?\" Aaron was trying to gather his things together and pack his small suitcase without actually looking like he was packing.\n\n\"First week of May, so just under a month. I'll be home for ten days or so.\" The thought of home made her smile. She talked to her parents and sister almost daily, but she missed being in the same room with them. She missed her mom's cooking. Late season snow storms especially made her miss the California sun. Her absence from it all for three months would make it all the sweeter.\n\nSo lost in her own thoughts, Jennifer did not pick up on Aaron's demeanor at first, like he was trying to navigate through a sensitive subject. \"So how are things going to go when you're back?\"\n\n\"Huh?\"\n\n\"Are you staying at my place or with your parents? Do you want me to pick you up at the airport? When am I meeting everyone?\"\n\nJennifer's mouth dropped open and then she covered her mouth and laughed. \"OMG, it's a month away and you are already nervous.\"\n\nDespite himself, Aaron blushed. \"I just like to plan ahead, to know what to expect. We haven't done this whole relationship in the same place yet.\"\n\n\"Well, my mom and Rebecca are flying out a couple of days before I come back. They want to check out my place and the town. So you won't be picking me up. When I am back though, you will have to take me on a proper date. You can't just keep flying in and expect sex all the time. I have my standards.\"\n\n\"Noted, but I did take you to lunch twice before you moved.\"\n\n\"Fine. You've taken me on lunch dates. A proper date includes picking me up at my parents' house like a gentlemen and dinner.\"\n\nHe smiled and gave a little bow of acknowledgment.\n\n\"And if said date happens on the night before your day off, I may bring an overnight bag with me. I assume you have a spare bed at your place.\" She did her best to suppress her laughter.\n\n\"Certainly, my dear, you may have your own bed, but if you get lonely, I'll leave my door unlocked.\" Neither could suppress the laughter anymore.\n\nWhen she calmed down, Jennifer pulled her legs up to her chest and regarded him. \"Seriously though, I'll need to spend a chunk of the time with my family, we're pretty close, but my parents really want to meet you. I think my mom will probably want you over the second night for dinner. I bet she'll be too frazzled the first night since we'll have just flown back. I do want to see your place though and spend some alone time with you, so I was planning on a couple of nights at your place. We can decide if we'll let Rebecca and Tom join us for dinner. You'll meet them when we have dinner with my parents for sure.\" She paused and thought. \"Plus we'll need to find time for you to meet my friends, and I need to meet yours.\" She got a serious look on her face. \"That is of course if you still want this to be a real relationship here.\"\n\nAaron walked over to where she sat on the futon and knelt down so he was level with her. \"Yes, I want this to be a real relationship for a very long time.\" He leaned in and kissed her. \"I love you.\"\n\n\"Good. I love you too.\"\n\nThen it was time to leave. Jennifer drove him to the airport. A few tears were shed, but the kisses, smiles and laughs far outnumbered them.\n\nHer apartment felt very cold and empty when she came home. She turned on the television in the living room and music in her bedroom. The weekend's activities had tired her which gave her an excuse to head to bed earlier than usual. She took a shower and snuggled under her covers with her phone by her bedside. Not long after midnight it woke her with a chime. He was home. I love you, his text said. She hit the call button, and they talked for another hour before she fell back asleep."
    ],
    "authorname": "QuietDog",
    "tags": [
        "blond nurse",
        "brown haired doctor",
        "studying anatomy",
        "long distance romance",
        "video chat sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-road-trip-fantasy-pt-02"
}