{
    "title": "Wanting Ch. 02",
    "pages": [
        "Author's Note: Many thanks to everyone who requested this follow-up chapter.\n\nNew to this story? Be aware that Chapter 1 has strong reluctance themes. Chapter 2 is consensual, but includes flashbacks to Chapter 1, plus a close call near the end.\n\nLots of drama in this one, so hang on tight \u2014 and enjoy.\n\nSummary: After a summer with her wealthy relatives, Andie must contend with living on her own and her conflicted feelings for her cousin.\n\n*******\n\nLights gleamed off the mirrored wall, lined with bottles. Crisp September air blew through the open door, but the bar was hot and steamy, packed with people.\n\nMy roommates Meg and Emily had insisted we go someplace upscale to celebrate our first post-summer paychecks. Now they were eyeing the ice in the bottom of their glasses, then the guys in the crowded room, wondering who they could charm into buying for them. I'd held off as long as I could before finally breaking down, on my way now to the bar to get an overpriced whisky sour.\n\n\"Hello, gorgeous,\" said a male voice close to my ear. I tensed at the sudden hand on my back, in the middle of the bustling space. \"You look thirsty. Let me get you a drink.\"\n\nTurning, I squinted at the handsome face smiling down at me expectantly. \"I really don't-- Pax?\"\n\nHe squinted back. \"Hey, I know you.\" He waved over another bulky-shouldered boy. \"I know her,\" he called. \"Look, Spence, it's Will's cute little redheaded cousin.\" He snapped his fingers. \"Amelia...Alexandra...\"\n\n\"Andrea.\"\n\n\"Well, hi there.\" Spence's lips brushed my cheek like we were old friends. Practically family. And bolder than when Will had stared down the three of us at that garden party, back in June, scaring off Spence and Pax with his intent green eyes. \"Love the dress.\"\n\nHe tweaked one of the slim white straps. If any other guy in the bar had done that, I would have swatted his hand away. But Spence and Pax were closing me in, making me dizzy with their cologne and bright smiles and expensive clothes, like they were from another world. Will's world. My aunt and uncle's world. Seeing them here, feeling them close to me, confused my senses.\n\n\"Thanks. Okay, yeah. I'll have a whisky sour.\" I fanned my face, sweating now in the humid room. Spence disappeared toward the bar.\n\n\"Have you talked to Will?\" I asked Pax. His arm looped around my waist. Across the room, Meg and Emily were busy flirting.\n\nPax smiled down at me, his eyes traveling from my face to the freckles sprinkled on my bare shoulders and chest. \"Why, haven't you?\"\n\nMy stomach jumped. A chill swept my body in the hot steamy bar, tightening my nipples inside my dress.\n\nDid he know? He couldn't know. Will had promised he wouldn't tell anyone. I'd promised him too. But my Aunt Rose and Uncle Richard knew, I didn't have any doubt. The security guards who patrolled my relatives' huge house and grounds had to have seen Will and me stumbling out of the woods most nights, lips swollen from kissing and leaves in our hair. I didn't want to know how many maids had passed closed doors in the morning and heard giggles, gasps, moans \u2014 mostly mine, then Will's soft grunts as he came.\n\n\"No. I haven't talked to him since I left. I was just there for the summer. Our lives are pretty different.\" A cool glass met my palm. I murmured a thank-you to Spence, back from the bar, vaguely aware of his hand slipping under my long copper waves to cup my sweaty neck.\n\n\"Well, he was definitely protective. One time we were out and some of us started talking about you\u2014\" Pax gave me a significant smile \"\u2014and he just shut it down like that.\" He snapped his fingers again. \"He didn't say as much, but it was clear if anyone hit on you, they'd be sorry. Kind of funny, uh... what was your name again?\"\n\nI took a big swallow of my whisky sour and let it burn my throat going down. \"Andrea.\"\n\n\"Yeah, Andrea. We definitely got a very \"mine\" vibe from him. Like, don't you think about touching my cousin.\"\n\nFunny,\" I repeated, the burn spreading to my cheeks.\n\n\"It was funny, wasn't it, Spence?\" Pax said over my head. I was flushed, my stomach turning somersaults at their touches. Pax was squeezing my hip, his large hand swallowing the slight curve. Spence was caressing the back of my neck now, rubbing the skin with his thumb. \"Almost like he wanted her for himself.\"\n\n\"Nah.\" I shook my head quickly, trying to laugh it off. \"I'm not his type. And we're cousins.\"\n\n\"Yeah, too bad about the whole cousin thing.\" Spence gave me a wide, white smile. \"But you should make the most of Will liking you, beautiful. Most girls would do anything for that.\"\n\nI flushed hotter. Will had said the same thing to me, back at the beginning of the summer, when he found me soaking in his parents' huge marble bathtub. Before the night in the woods, when things changed. You should make the most of it, Andie, he'd smiled, as he pulled his shirt off. Most girls would take advantage.\n\n\"Really, no. It's okay.\"\n\n\"All right, then, now that he's not here, giving us the evil eye,\" Pax murmured, his lips brushing my ear, \"why don't we find someplace quieter where we can all talk some more?\"\n\nI looked at the empty glass in my hand, sparkling with ice. My body throbbed, and sweat trickled between my breasts. \"I should\u2014\" go find my friends, I meant to say. \"Call Will. All this is reminding me that we need to catch up. I'm sure he'd love to say hi to you guys.\" I pulled my phone out of my purse.\n\nFingers left my neck. A palm released my hip. \"It's okay, Andrea.\" Spence held up his hands and gave me an ingratiating smile. \"We just saw him last weekend.\"\n\n\"It's been fun.\" Pax bent to kiss my cheek again, then straightened at a warning look from Spence. \"Have a nice chat with your cousin. Be good, now.\"\n\nWhen they strolled toward the bar, clearing the space around me, I saw Meg and Emily eyeing me from their barstools, radiating curiosity and probably wondering if they could get a free drink out of Spence and Pax too. Signaling that I was leaving, I set down the glass and stepped outside.\n\nThe cool early fall air was a welcome relief. It felt good to walk the busy sidewalks alone. But as I paced down block after block, my feet took me past the plaza where I'd played silent games of chess over the summer \u2014 first with whoever came by, then with Will when I started teaching him.\n\nUntil the end of the summer, I'd always won. Even when his knee against mine made me dizzy. I'd been playing a lot longer. The day before I left my aunt and uncle's house and moved in with Meg and Emily, Will had won his first game.\n\nThree blocks away, I passed the alley he'd coaxed me into with soft, dirty whispers after he'd won. He'd teased me until I trembled under his hands and begged for privacy. Then he'd hailed us a cab to a hotel, where he paid for a room with a casualness I couldn't fathom.\n\n\"Remember when you told me you'd never felt champagne on your naked body, baby?\" he'd whispered in the elevator. \"Want to find out how that feels?\"\n\nThat had been two weeks ago. It felt like two years. My phone was still in my hand, my fingers tapping until Will's number appeared on the screen.\n\nI hadn't meant to call. I shouldn't call. The threat had gotten rid of Spence and Pax and an uncomfortable situation that had left my crotch throbbing and shamefully wet. I ran a hand through my sticky hair, twisting the russet waves over one bare freckled shoulder.\n\nWill was living it up in his senior year at college. My own graduation last May felt like a lifetime ago. The summer had been unreal, my aunt and uncle's house a beautiful place where I never fit in.\n\nBut these past two weeks, after long days at work, in the 4<sup>th</sup> floor walkup I shared with Meg and Emily, I'd tossed and turned in bed, hearing whispers in the dark. My hand had slipped between my legs, remembering Will there so many times.\n\nI'd gotten used to sharing a bed with Will every night, even craved it. He'd gotten used to how much I fidgeted. The first few times, there were still signs of the spoiled boy who always got his way. He'd tried to order me to stop moving, lie still, just go to sleep already. But sometimes I woke in the middle of the night, sweating in his arms, confessing that I felt at home nowhere and saw the future as one big question mark. I could see him working to understand, curious and touching my bare waist with awkward sympathy. As the summer went on, Will got better at saying the right things. It's okay, Andie. Everything will be fine. You'll do great. You don't need to worry. He'd stroke my hair and rub my naked back until my eyes drifted closed.\n\nMy bed felt very empty in my new apartment.\n\nCall me, he'd whispered, that last night outside when we'd said our goodbyes. Not an order, but a plea. And a message that he'd leave it up to me.\n\nMy finger tapped the screen.\n\nOne ring, two...\n\nThe phone picked up.\n\n\"Andie.\" Will's voice tightened my body. \"I was wondering about you.\" Shouts and loud music crowded the background on his end. He must be at a party, back at college.\n\n\"You thought I wouldn't call?\"\n\n\"I wasn't sure.\" With all the sound bouncing around, Will's voice managed to be low and intimate. The noise in the background faded.\n\n\"Just wanted to hear your voice,\" I murmured. People passed me on the sidewalk, their energy crackling in the evening air, but I barely noticed.\n\n\"Hmm. I like hearing your voice too, sweet cousin.\" I clenched my thighs against a sudden trickle of juices. \"Especially when you're saying my name.\"\n\n\"Will\u2014\" I breathed. Raking a hand through my damp red waves, I leaned against a building, the bricks rough on my back. My nipples throbbed, aching with need. My bare arms tingled, sensitive to every waft of city air.\n\n\"Just like that, Andie.\" Closing my eyes, I let Will's teasing voice wash over me. Sweat dripped between my breasts. My panties were already soaked. \"I've thought about you whispering my name like that since I went back to school.\"\n\n\"Bad idea.\" I gripped my hair, trying to come back to sanity. \"You should focus on studying. Though it's not like you need to.\"\n\nA pause. Then Will chuckled softly. \"What about you, sweet girl? Working hard in the city?\"\n\nMy eyes opened. Staring at the storefront across the street, I blew out air. \"Yeah. Yeah, I am. I've gotten more responsibilities since the summer. It's good. I'm just trying to forget I'm there because of your dad.\"\n\n\"Who cares about that?\" Will's voice was sharper, more serious now. \"You're the one doing the work. No one's going to look at you and think you're only there because of Richard.\"\n\nI blinked. \"You mean, not like you.\"\n\nSilence. Then Will's voice dropped to a low murmur again, caressing my ear. \"What are you wearing, Andie?\"\n\nI couldn't fight the tide of desire that rippled my skin. The solid wall behind me was the only thing keeping me from puddling on the sidewalk. \"I'm wearing a white dress.\"\n\n\"The one you had on at that party, at the beginning of the summer.\" It wasn't a question. I only owned so many dresses.\n\n\"Yes.\" My heartbeat sped up. I looked down at the white eyelet, the snug bodice hugging my braless breasts, and felt Will's hands there. \"I should have known you'd remember. You pay more attention to clothes than anyone I know.\"\n\nSoft laugh. \"I pay more attention to you.\"\n\nA shudder ran through my body. I looked up to see a couple of guys staring at me from across the street. Quickly, I started walking again, picking up the pace.\n\n\"Then why don't you?\" I asked huskily. \"Right now?\"\n\n\"You want me to, sweet baby? You want me to see you in your pretty little white dress? You want me to take it off?\"\n\n\"Yes,\" I whispered.\n\n\"Then ask me.\"\n\nA flush ran down my body. A subway station loomed ahead. Once Will had stopped pushing over the summer, I'd learned a lot about asking. So had he.\n\n\"I'm walking,\" I hissed. The streetlights blurred in front of me. \"I'm out in the city.\"\n\n\"Okay.\" I could see his bright smile. \"Never mind. Glad work's going well.\"\n\nI sucked in a breath. \"Take my dress off, Will,\" I whispered.\n\n\"That's my girl,\" he whispered back. As sure as his low voice was, there was a definite undertone of relief. \"Right on the sidewalk, where everyone can see you.\"\n\n\"Will!\" I gasped. I could feel it, his fingers slipping straps off my freckled shoulders, unzipping the back, letting white cotton slide down my skin. Prickles shot through my body as people pulsed around me on the sidewalk.\n\n\"Don't worry, Andie,\" he murmured. His voice, already intimate, was dropping to the lulling murmur that had swept me into a daze over the summer. \"No one else can touch you. Just me. And I'm going to touch you in front of everybody. Do you like it when I play with your nipples?\"\n\n\"Yes,\" I breathed. Traffic streamed down the street, headlights and taillights lengthening to streaks in front of me. Heat gathered between my legs, soaking my panties with cream.\n\n\"Do you like everyone seeing my hands on your naked body?\"\n\nOh God. Embarrassment fought with arousal. \"Yes,\" I panted.\n\n\"Do you like everyone knowing about us?\"\n\nMy body tightened. Desire shot straight between my legs. \"Will, they can't\u2014 No one can know about us,\" I breathed into the phone.\n\n\"But everybody's going to know.\" Will's voice caressed me, flowing over my breasts and stomach, slipping between my legs to tease my throbbing pussy through saturated panties. \"Everybody's going to know about us, Andie, when I fuck you on the sidewalk. I'm behind you, feeling you all over your sweet little curves. Everyone's watching as I bend you over. Everyone's watching you take your cousin's cock into your tight, wet pussy.\"\n\n\"Will,\" I gasped.\n\n\"It feels big, doesn't it?\" he whispered. \"Little slut. Everyone knows it when you come all over me. You just can't help yourself. They can't wait for me to shoot inside you. Do you like that, baby girl?\"\n\n\"Yes.\" The word dropped from my lips. I was shaking with excitement, past caring what anyone around me thought or whether I should even be talking to my cousin. \"Do you like hearing me say yes?\"\n\nFor a second, I just heard heavy breathing.\n\n\"Fuck, Andie.\" Will groaned softly.\n\n\"I need to see you,\" I pleaded, giving in.\n\n\"Where?\"\n\nAn hour later, the gleam of a silver SUV flashed on my block, parking down the street from my apartment. A tall, lean figure jumped out. We met on the sidewalk in a sudden hard hug.\n\nI barely registered the clean scent of Will's cologne, the softness of his unzipped leather jacket against my bare arms and shoulders, his hand sliding up into my thick hair. His muscled arms were tight around me. I buried my face in his chest, breathing against his fine-knit sweater, then stepped back. Will held me a second longer before he let go. Our hands met, fingers twining together, and I didn't know if this was a good idea.\n\n\"This way,\" I panted, dragging him toward my apartment building.\n\nInside, we stumbled up the three flights of stairs. I fumbled in my purse one-handed. Will's thumb stroked my other palm, making my head swim, until my fingers closed on the key and I unlocked the door.\n\n\"Here.\" I turned on the light. \"My new place.\"\n\nClear green eyes flicked around the apartment in growing shock. As his hand tightened on mine, Will took in the narrow front hall, the exposed pipes in the bathroom, the charming window view of a brick wall, and the second-hand table wedged in a corner of the kitchen, barely big enough for three mismatched chairs.\n\nI had to laugh. \"Trust me, I was lucky to get this.\"\n\n\"How can you stand living here, Andie?\" Will stared at me in horrified seriousness. \"I'll get you someplace better.\"\n\nI tugged him into my tiny bedroom, closed the door, and flipped the light switch. Will's wordless gaze traveled over the patchwork quilt on the bed, the books overflowing the shelves, the plants lining the windowsill, and the cheap art posters tacked to the walls.\n\n\"This is home.\" I whispered in his ear. \"More than anyplace else right now.\"\n\n\"Okay.\" Will's lips twisted in a crooked smile.\n\nHe turned, crowding me against the wall. Our fingers were still laced together. When he leaned down, his mouth ready for a kiss, I put a hand on his firm chest.\n\n\"Will, if you've told anyone about us\u2014\" I began. Then I sucked in my breath. My cousin was running a finger inside the neckline of my dress now, stroking the tops of my breasts where they began to swell out. I couldn't help arching my back, seeking more touch. \"Be honest.\"\n\n\"I'm always honest with you.\" Will's hand closed over my breast, cupping the small mound through my dress. Smoky green eyes watched my reaction. His free thumb stroked my wrist. \"No, Andie. I haven't told anyone. I'm not going to.\" My head swam, and I squeezed his hand. My other hand found his waist, pulling him closer. Just a little.\n\n\"Good.\" I tried to breathe normally, gripping Will's hand as his fingers grazed my breast again.\n\n\"Why?\" he murmured in my ear. \"What are you so worried about, sweet girl?\" A thumb stroked my nipple into aching hardness. I bit back a gasp.\n\n\"I ran into your friends at some fancy bar tonight,\" I said quickly. \"Spence and Pax.\"\n\n\"Really.\" Will's eyebrows lifted. His other hand let mine go, moving to my breast. Both hands cupped the small mounds now, expertly stroking. \"Did they give you a hard time?\"\n\n\"They were themselves.\"\n\nWhen he pinched my nipples suddenly, I clutched his waist, running my palms up his chest. There were too many layers in the way: leather jacket, cashmere sweater, collared shirt, undershirt... I squeezed his shoulders, firm and muscled through the leather, and moaned softly at the sensation of tender buds being rolled between my cousin's fingers.\n\n\"Because if anyone gives you a hard time, Andie\u2014\" Will's breath was warm against my ear again \u2014 \"about anything at all, tell me.\"\n\nImpulsively, I started to giggle. No matter how much influence Will or his parents had, or thought they had, no one could be that powerful. His hands on my breasts were ticklish and tingling. Nerves made my body hum. My own hands couldn't stop roaming over his chest and arms now, gripping his back when he gave my nipple another firm pinch.\n\n\"Okay, then maybe you can do something about the person who pushed me on the subway to get a seat.\" I tugged his crisp button-down and clean white undershirt out of his pants. My hands slid to the spot on Will's hard stomach where he was most ticklish. He writhed, laughing too, and grabbed my wrists. \"Or my manager, who wants everything done yesterday.\"\n\n\"You'd be surprised.\" He kissed my ear. His warm breath sent a shudder through me. My laughter died away.\n\nWhen I moaned, pulling my wrists free of his grasp to squeeze his waist, sure fingers worked the straps of my dress over my shoulders. My breasts tingled, still feeling strokes and pinches. The cool scrape of metal made me shiver as he unzipped the back of my dress. Thumbs hooked into my sopping panties, sliding the thin material over my slender hips.\n\n\"Fuck,\" he whispered, staring at the sprinkling of freckles on my creamy skin, the slopes of my breasts capped with little pink buds, and the fluff of copper curls between my legs. My nipples, already hard, puckered even more under his gaze. I gripped his firm waist to stay upright. \"I didn't know if you'd call, Andie.\"\n\n\"I didn't know either,\" I breathed. \"I wasn't sure.\"\n\nI still wasn't. But as hot lips closed on my neck, my hands found the hard bulge in his pants, drawn like a magnet.\n\nI'd touched Will so many times over the summer. Stroked his shaft, taken him in my mouth, caressed his balls and moaned with him when he flooded my tongue with cum. But here in my city bedroom, everything I owned around us, miles away from my aunt and uncle's luxurious house, it felt like the first time. It shocked me all over again.",
        "Will grunted softly. \"That's right, Andie. Squeeze me harder, baby girl. Just like that.\"\n\nI flushed, stroking his erection through thick cotton with both hands.\n\nSwiftly, Will shrugged off his jacket. His sweater followed, then his crisp button-down. He tugged his clean white undershirt over his head. Everything flew onto the heap of clothes on my chair. My fingers fumbled with his fly. Unzipping his pants, I slid them down. Then I moaned softly, only able to stare for a minute.\n\nWill was just so beautiful. Too beautiful. His sculpted cock stood out from his tanned body -- satiny, hard, and pointing at me. In a daze, I wrapped my fingers around his smooth shaft. It pulsed in my hand. My thumb stroked the pearl of liquid hanging from the tip, rubbing it into his head.\n\n\"Oh, yeah,\" he groaned. One hand tangled in my long hair. The other roamed over my naked body, greedily squeezing soft curves and smooth skin. My knees went weak. I gripped Will's cock as if it would keep me upright, stroking it more firmly.\n\n\"Will\u2014\" I panted.\n\n\"What is it, Andie? What is it, sweet baby? Tell me.\"\n\nFor a second, I just looked into his eyes, pleading. His face was flushed, his brown hair messy from my hands and curling around his ears. His mouth was half-open, and he grunted again when I gave his cock a sudden squeeze.\n\nThen I stretched up and kissed him.\n\nWill groaned. The kiss was soft. Will's lips were soft. His tongue was soft too, and so warm, flickering over my lips until they parted to let him in. Heat unfurled in my body. I gasped at his tongue filling my mouth. Clenching my thighs together against a flood of need, I nudged him forward, and we fell together onto my bed.\n\nWhen Will took my nipple in his mouth, then worked the puffy bud between his teeth, I let out a shriek. When sure fingers discovered the wetness between my legs, then sank suddenly inside my tight opening, I groaned out loud, arching my back in helpless desire.\n\n\"Little slut cousin,\" he crooned, massaging me from the inside. \"So fucking ready for me.\"\n\n\"Will, oh God...\" I didn't even try to keep my voice down. After a summer of sneaking around, keeping our voices to whispers, biting back moans and gasps, it felt so good to make some noise. \"Will!\" I screamed suddenly when hot lips sucked sharply on my neck again, making my head spin. I could only clutch his rippling back, gasping. Those same lips moved greedily down my chest, licking and marking me.\n\nI writhed against my cousin's hand, squeezing down hard. I'd gotten used to taking Will inside me over the summer. After that first time in the woods, he'd been slow and careful, until it didn't hurt anymore. But his wriggling fingers, moving firmly in and out of my pussy, stroking and stretching me, were almost too much. Firm pressure rolled over my clit as his thumb pressed the little nub, rubbing the sensitive tip again and again.\n\n\"You feel so good,\" I moaned. He did feel so good. It felt so good to give in.\n\n\"That's right, Andie,\" Will breathed. \"Just open up to me. Such a sweet, wet little pussy. You're going to come soon, aren't you, baby? You need it so badly. I can tell.\"\n\n\"Yes,\" I gasped. \"Will, yes...\"\n\nGreen eyes met mine, hazed with lust. Eyes the same shape as mine. I gripped him in sudden sharp need, spasming on his fingers. My moans filled the room. I clung to Will's firm arm, shaking with pleasure, hugging his hand between my thighs in a long orgasm.\n\nFingers left my slippery folds. A hot mouth closed over mine. I kissed Will hungrily, all the desire of the past two weeks snaking from my tongue to his. When my fingers skated over his hard stomach and brushed his firm erection, he jerked against me.\n\n\"Kneel down, little cousin,\" he ordered. His voice, usually smooth, was ragged at the edges. \"Suck my cock.\"\n\n\"Yes...\" I panted, sliding off my rumpled sheets. I knelt on the rug next to my bed, looking up at Will as I opened my lips to take him in. His smooth cock filled my mouth. Hands caressed my hair, fisting in the thick copper waves. Will didn't hold back his growls as I eagerly licked his velvety head, lapping up the dew that hung from the tip.\n\n\"Just like that, Andie,\" he grunted. \"You do that so well.\"\n\nI shuddered with need, craving his words. I'd already come, but my nipples hardened into little peaks again. My pussy was a pool of hot desire. I sucked harder, stroking his shaft, cupping his heavy balls in my palm, as Will's breathing got heavier.\n\n\"Fuck, yes,\" he hissed. \"Sweet slut. You like my cock in your mouth, don't you? You know it belongs inside you, good girl.\"\n\nI whimpered around his thick erection, sliding one finger behind his balls to massage the sweaty skin. As his hips flexed and he began to thrust over my tongue, I stared up into Will's hooded eyes, soaked with lust and locked on me.\n\nSuddenly, his cock left my mouth, and my lips closed on air.\n\n\"Will, wait\u2014\" I gasped. But warm hands were helping me up, lifting me easily onto the bed, pulling me to the edge of my mattress. Soft sheets rubbed against my skin. Palms opened my trembling thighs.\n\nWill stood between my legs, naked and flushed, his breathing rapid with lust. My back arched off the bed when one hand firmly cupped my mound. Fingers spread my wet center.\n\n\"You want me to fuck you, Andie?\" he growled.\n\n\"Yes,\" I breathed. A hot blush bloomed on on my cheeks.\n\n\"Really? You want me deep inside you, sweet baby?\"\n\nYes,\" I gasped, jerking when thickness probed my entrance. \"Don't tease.\"\n\n\"Are you completely sure?\" Will massaged my thighs, opening them wide. His cock rubbed up and down my soaked core.\n\n\"Yes.\" I clutched his waist, my hands waking up to the play of his muscles. \"Please.\"\n\nStrong hands gripped my hips, holding them on the edge of the bed. His head sank suddenly into my pussy.\n\n\"Will!\" I shrieked, digging my fingers into his waist.\n\n\"Baby girl,\" he groaned. \"Still so tight. It's been too long since you've taken me inside you.\"\n\nSlowly, slowly, the pressure withdrew. Then he plunged in again, slippery and hot. As he filled me, sure palms eased my knees up, pushing them firmly against my breasts, and all I could say was yes.\n\n\"You're soaking wet.\" Will's soft whispers wove between my pants and moans. \"You need this more often, don't you? You shouldn't have waited so long to call me.\"\n\n\"I had to,\" I panted. I felt so full of Will from this angle, overwhelmed as he worked his cock in and out of my clasping pussy. \"I didn't know\u2014 I don't know\u2014 Oh God, Will.\" My head fell back.\n\n\"Fuck, Andie,\" he whispered. He thrust longer and harder, frenzied, making me shake, until he let out one long groan after another.\n\nFor a minute, neither of us moved. Will stood over me, sweat-slicked and panting. I lay beneath him, sprawled on the edge of my bed.\n\nWhen I wriggled my hips, green eyes slowly focused on me. Will rubbed my thighs, his cock still buried in my tightness, until I sighed and relaxed again. Only then did he ease out of me.\n\nWe fell together onto my bed, arms around each other. I buried my face in his warm shoulder, tangling my hands in his hair, and breathed in his crisp, clean scent, while he stroked my long waves down my back the way he had so many times over the summer.\n\n*******\n\nAfterwards, the two of us staggered into the kitchen, laughing and half-naked. I stopped short when I saw Meg and Emily, sitting at the tiny dining table on the mismatched chairs, eating ice cream.\n\nThey both froze, spoons halfway to their mouths. A second later, Meg's spoon dropped to the table.\n\nStupidly, I looked down at the trail of hickeys blooming on my pale skin and disappearing into my well-worn tank top. I'd given Will a few, too.\n\nNext to me, Will tensed, startled, but he quickly recovered.\n\n\"Hi, I'm Will.\" He flashed a smile bright enough to momentarily blind them both. \"You must be Meg and Emily. Andie's talked about you.\"\n\n\"I know who you are.\" Meg found her voice again. \"You're Andie's cousin. And I saw your picture when I looked up her insanely rich relatives online.\"\n\nWill's shoulders tensed again, but he just nodded agreeably. \"Be right back, Andie,\" he murmured.\n\nMeg gaped at Will's sculpted back as he walked past her in his boxers and closed the bathroom door. Emily kept her eyes on me. I dropped into the third chair.\n\n\"Okay. We get it, Andie,\" Emily said after a very long silence. \"You're banging your cousin, and you don't want anyone to know. Don't worry. We won't tell anybody.\" She cleared her throat loudly in Meg's direction.\n\nMeg looked too stunned to argue. Maybe she was still recovering her vision from that dazzling smile. \"Okay. Yeah. Sure.\" She blinked a few times. \"Can't say I blame you. I'd do him too. Related or not.\"\n\nEmily frowned at me. \"Didn't you say he was insane?\"\n\nMeg coughed toward the bathroom door.\n\nI shrugged and picked up Meg's spoon. \"Guess I'm insane too.\"\n\n*******\n\nMeg and Emily assumed it was all about sex. Sex, and maybe money. Fooling around with my hot rich cousin, having a secret. I let them. Will started driving up to the city every weekend, but I didn't tell them about the quiet moments of snuggling close in bed, sharing the morning paper while we drank coffee that Will brought in, or watching old movies while we giggled and pelted each other with popcorn, or walking to the plaza to play chess. Will was getting better. I didn't tell them about our talks late at night, raw sometimes, softened by darkness.\n\nI didn't tell them about leaving my cube at work to slip into the restroom every day, just to be alone, excited but overwhelmed by all the responsibilities I was getting. Will's touches from the weekend would throb hard and soft through my body. I'd close my eyes, breathing in and out, trying to calm down, until I'd cave like always and slide my hand into my wet panties. I'd rub my clit to a shuddering orgasm and hope it would be enough to get me to the next weekend.\n\nAnd I didn't tell them about the beginning of the summer.\n\n*******\n\nElevator doors parted in front of me with a soft swish, opening to a rooftop garden. The end of October had brought changing leaves, but the garden was a green oasis. Lights glittered around emerald plants in pots. People clustered in bright groups, talking and laughing on top of the city.\n\nAndrea. Aunt Rose's text had appeared like a summons yesterday. It's been far too long. Richard and I would like to see how you're getting on.\n\nWhen she'd said \"drinks in the city,\" I knew it could mean the three of us, or an intimate gathering of my aunt and uncle's fifty closest friends. Will had assured me he'd be there, and I didn't know if he'd make the evening better or worse.\n\nI smoothed my navy silk dress, patted the ginger waves that brushed my waist, and stepped out of the elevator in my heels, grateful that I'd dressed up. Under the dress, I was very aware of skimpy lace cupping my curves.\n\nWill had wanted to give me presents throughout the summer, and it bewildered him when I said no. Eventually I gave in -- twice. When I moved into my new apartment at the end of August, I'd unpacked a small, heavy marble chess set, and a matching green bra and panties, sheer with gorgeous lace.\n\nThe bra cupped my small breasts, lifting them proudly to display the soft flesh and creamy freckled skin. The panties hugged my mound with lace, riding low on my slim hips. In back, the exquisitely detailed waistband narrowed to a silky thong that exposed the soft cheeks of my ass.\n\nI really didn't want to know how much the underwear cost. In the summer, Will had removed it very carefully after I modeled it for him in his room, wet and tingling under his hungry gaze. Fingers had stroked along the edge of my bra, pinching my nipples through the sheer green material. I'd arched my back, moaning as he gently undid the hooks and laid the flimsy material on a chair. More fingers eased the panties over my thighs.\n\nHe'd laughed softly when he saw the creamy wet spot.\n\n\"Little slut,\" he whispered. \"So excited in your pretty new underwear.\"\n\n\"You like it too,\" I breathed.\n\n\"I love it.\" Lust glazed his handsome face. \"On your hands and knees for me, sweet girl.\"\n\nI'd hesitated. Will had just nodded encouragingly, caressing the curves of my hips. Finally, curious, I'd dropped to my knees on the plush blue rug in Will's room.\n\nI heard a zipper coming down. Then Will knelt behind me, parted my thighs, spread my soaked lips with sure fingers, and worked his warm cock into my tightness, going slow so I could get used to him. We hadn't done it this way before. We'd barely touched just now, but his eyes on me as I modeled the lacy green underwear had me so ready, so slick and flushed, that I moaned and arched my back to invite him deeper. I tried to thrust back, but his hand in my hair, pulling my head up, held me in place, and his fingers were playing with my clit, and it was all so much...\n\nWhen I couldn't hold back my shrieks of pleasure, then and only then did he let go of my hair to cover my mouth with one large palm. I came from his hard thrusts, hot and cold and moaning into his hand, while Will whispered in my ear, \"Don't wear this underwear around me unless you want me to own your body.\"\n\nYou already do, I didn't say.\n\nI'd put the underwear on tonight.\n\nThe delicate lace clung like a second skin under the polished silk dress from Aunt Rose \u2014 the one Will hadn't ripped to pieces in the woods. The dress had hung in the back of my closet since June. I'd thought a dozen times about taking it to the Salvation Army, but I couldn't bring myself to throw it out.\n\nWhen I stepped outside the elevator, lips met my cheek. Will's crisp shirt and slacks outlined his lean body. His silk tie was impeccably knotted. Flashing perfect teeth at me, he rested a hand on my back, guiding me into the crowd.\n\nI glanced from one chatting group to another, trying to act normal. My cousin's green eyes were polite and attentive. The protective hand on my back was perfectly appropriate, gentlemanly. And each brush of his fingers sent a shudder through my body that ended in a pulse between my legs.\n\n\"Andrea.\" Aunt Rose, sparkling with jewels, appeared and took both my hands. Her cascading blonde waves caught the lights on the rooftop. \"The city is doing wonders for you. So nice to see you put together now.\" She stretched up to kiss her son's cheek. Like me, Aunt Rose was petite, small-boned, tiny even in her satin stilettos. \"Will, you remember Andrea's wardrobe over the summer. She would barely let me help her. I was almost ready to let you take her in hand.\"\n\nA prickling flush spread over my skin. \"Thanks, Aunt Rose. I don't think Will was paying attention to my clothes over the summer.\"\n\nWill just flashed his dazzling smile. \"I was paying attention. Andie looked nice.\"\n\nI clenched my thighs together. Will's thumb was rubbing the small of my back, in tiny motions.\n\nRose blinked long lashes, her glance lingering on her son's hand at my back, then turned to greet newcomers with more kisses. Introductions followed, gushing introductions to people I might have met at the garden party back in June. Hard to tell, because the lights sparkling off their jewelry and cuff links, their smiles and bright voices, blinded me too much to recognize them. Will's warm palm on my back distracted me beyond belief.\n\n\"Our niece, Andrea,\" Rose drawled to another person, indicating me with a sweep of her wrist. \"We got her all set up. Richard got her a job and she's very up-and-coming. We took her in for the summer until she was on her feet. She learned quite a bit over those few months, wouldn't you say, Andrea?\"\n\nWill stiffened. Only I knew, because of his fingers on my back, and because I knew him now. I'd stiffened too.\n\nRose turned before I could answer, beckoning a manicured hand to my uncle, who stood over by the bar with a laughing group of men.\n\n\"Richard, come say hello to Andrea.\" Space cleared around him as he strolled over. \"Would you even have recognized her?\"\n\n\"Wouldn't have.\" My uncle's dark eyes assessed me before he took both my shoulders in his hands. The glance was casual, businesslike, analyzing. Richard was built like a football player. Sleek bulk, broad shoulders. When he leaned in to kiss my cheek, Will's hand tightened on my back. I smelled expensive cologne, heavier than Will's. Rose's eyes flicked over the three of us before her heels clicked across the rooftop pavement to welcome another group.\n\n\"How's your job going, Andrea?\" Richard's voice was hearty. \"The position's working out?\"\n\n\"Yes.\" I felt hot in the cool fall air, prickling with sudden sweat. \"Very well. I have a lot on my plate.\"\n\n\"Glad to hear they're keeping you busy. I was happy to arrange it for you.\" He squeezed my shoulders. \"Remember, if you need anything \u2014 anything at all \u2014 you can always ask.\"\n\nMy cheeks flushed. \"I appreciate it.\"\n\n\"She's doing great,\" Will cut in. \"We're getting drinks now. I promised Andie wine.\" A firm touch on my waist began to steer me away.\n\n\"You're a lucky girl, Andrea.\" Richard smiled at me, his hands still resting on my shoulders. I'd never seen much resemblance between Richard and Will, but I knew that smile. A warm, friendly smile that didn't reach his eyes. It had been a while since I'd seen it on Will's face, long enough that I'd almost forgotten. \"Our boy here has decided to look out for his cousin. I'm sure you understand what that means.\"\n\nWill's fingers dug into my back. Tension ran up his arm. I swallowed. \"It's nice to\u2014 connect with family after all these years.\"\n\n\"I'm sure it is,\" Richard said genially. \"I'm sure your parents appreciate it too.\"\n\n\"Okay, Dad, enough.\" Will's tone was politely bored. He glanced at his father's hands on my shoulders, his face bland and pleasant. \"Andie needs wine.\"\n\nRichard released my shoulders. As Will walked me to the bar, I tried to get my breathing under control. His grip on my back didn't relax until we both had a glass in our hands and were standing behind a bank of potted trees.\n\nI gulped white wine, grateful for the crisp chill. Will took a long pull of his old-fashioned and closed his eyes.\n\n\"Does your mom know I'm not a friendless orphan?\" I asked, once my glass was empty.\n\n\"She's all talk,\" he muttered. \"Don't let her get to you.\"\n\n\"Or you.\" Clear green eyes opened, looking down into mine. \"Look, my parents don't want your family's money,\" I blurted. Not true, but I wanted it to be true. I remembered arguments from when I was a kid, whenever times were tight: Go to Rose. Once, just once. It can't hurt... \"I don't want it either. If your dad thinks I'm trying\u2014\"\n\n\"It doesn't matter what he thinks.\" Will's face went dark with sudden anger. \"He's not going to play his stupid games with you.\" He took a deep breath, his beautiful features smoothing over. Then he tucked my long copper waves behind my ears, his fingers brushing my cheeks and neck. Sparks ran down my body from his light touch. \"Really, Andie.\" He stroked my cheek again. \"Don't worry.\"\n\n\"He knows. Your mom knows,\" I whispered.\n\n\"So what if they do?\" Will's voice was as quiet as mine, barely audible above the talk and laughter. \"They can't do anything.\" Cupping my chin, he kept my face tilted towards his. We stood behind the potted plants, out of the gleam of lights, but anyone could walk by and catch sight of us.\n\n\"Will\u2014\" I protested. I caught his wrist. He touched my lower lip, then dropped his hand.\n\n\"It's true. They don't care, and I won't let anything happen to you. More wine, Andie? I'll get you some wine. And something to eat. Because I bet you're still eating cornflakes for dinner, and we can't have that.\"\n\nWine. I could really use some. And Will was right \u2014 most nights, cornflakes were dinner. I nodded, but he was already moving gracefully towards the bar. The crowd parted for him, the way it had for Richard.",
        "The rooftop was full now. I should go out and mingle instead of hiding behind the bank of potted trees. Stepping out, I glanced from one chattering group to another, cupping my empty wineglass.\n\n\"You're Rose and Richard's niece?\" A well-coiffed woman was eyeing me. My aunt and uncle's age, and she looked familiar...\n\nYes. She'd been one of the gossiping women at that luncheon my aunt had dragged me to in June, boasting about their kids' accomplishments, hours before the night in the woods with Will. Mrs. Platt, who'd cooed that Will should get together with her daughter Madeleine.\n\n\"That's right. I'm Andrea. It's nice to see you again, Mrs. Platt.\"\n\nHer eyebrows lifted. \"Quite a memory.\"\n\n\"Thanks. I try to remember names.\"\n\nI also remembered her comment that Will and Madeleine would make a very attractive couple. And my aunt's purred response: Well, he has his choice of girls. But I think he and Madeleine would enjoy each other. They'd go far together. They're cut from the same cloth. What do you think, Andrea?\n\nMrs. Platt just smiled. \"You're very fortunate that your relatives are still looking after you.\"\n\nMy face burned. \"I'm looking after myself.\" Mrs. Platt blinked at me. I'd said the wrong thing. \"Sorry\u2014 that is, yes, they helped me out over the summer. I probably wouldn't be here without them.\"\n\nI could hear running feet in the woods now, could feel a hard arm catching me around the waist and pulling me close. Hot invasive fingers under the other dress from Rose, sinking inside me, penetrating and taking, arousing and enraging me. Making me come. I heard my own snarling hiss. Go be with Madeleine Platt. Leave me alone. And Will's start of surprise: I don't want Madeleine fucking Platt.\n\n\"Seems that you're still under their wing. I wouldn't look a gift horse in the mouth if I were you.\" Her face broke into a beaming smile as Will strode up to us with a wineglass and a plate of food. \"Will! How's school? Still rowing? Winning everything? I've heard so much about all your successes from your parents. You look fantastic. Have you talked to Maddie lately?\"\n\n\"No, I haven't, Mrs. Platt.\" Will gave her the same smile I'd seen on Richard's face tonight. The October night felt chillier, the scent of burning leaves drifting on the air. My nipples were painfully hard, pushing against delicate lace. \"I haven't talked to Maddie in a long time.\"\n\n\"Call her. She'd love to hear from you. Take care, dear,\" she added to me as she turned away.\n\nWhen she disappeared into the crowd, I looked up at my cousin.\n\n\"Can we go?\"\n\nThe empty elevator was a relief. Will had smoothly fielded the goodbyes with his parents while I nodded politely. But his palm on my waist now, his fingers tipping up my chin for a kiss, sent a wave of need down my body.\n\nDizzy, I clutched his broad shoulders, squeezing the swells of muscle through his jacket, sucking on his tongue. The rush of the elevator down the tall building made my stomach flip. My thighs were trembling, hot juices slicking my lips and soaking the gorgeous lace underwear.\n\n\"Oh yeah,\" Will growled. \"I can smell you, Andie. I'm going to take you home and fuck you like a little animal. Would you like that?\"\n\nJesus fucking christ, he'd groaned in the woods, after I'd bitten him as hard as I could. You little animal.\n\nI could only gasp, sobbing into his mouth in the elevator, my body clenching with sharp excitement. Every kiss sent shocks through my skin. When I molded my hand around the heavy bulge in Will's slacks, squeezing and stroking, his green eyes flew open wide. The elevator wall was hard against my back.\n\n\"Will, please\u2014\" I begged.\n\nThe doors opened on the ground floor, just as fingers slipped my dress strap down to expose green satin and lace. My cousin's gaze was soaked in arousal. A slow smile spread over his face as he took in the mossy lace against my pale freckled skin.\n\nDon't wear this underwear around me unless you want me to own your body.\n\n\"You're so mine, Andie,\" he whispered in my ear.\n\nThe cab back to my place was a blur of kisses in the backseat, warm hands sliding up my knees and shoulders. I clutched Will's hair and caressed his neck. He would have gone farther if I hadn't grabbed him and whispered a plea to wait.\n\nBut the cool October air, the leaves crunching underfoot as we jumped out of the cab and raced into my building, woke me up. I could see my aunt and uncle's knowing little smiles. We needed to talk. We needed a break. This was too much.\n\nI shouldn't have worn the underwear.\n\nMy bedroom door swung closed behind us. Strong arms wrestled me onto my bed. My high heels fell to the floor. My hands met Will's chest, holding him back.\n\n\"Wait,\" I panted. \"Tonight was\u2014 a lot.\"\n\nGreen eyes focused on my face. Will relaxed slightly and pulled me close, his embrace secure. \"I know,\" he murmured. \"I don't like those things either. But you did great. It's over now.\"\n\n\"Will, we need to talk.\"\n\n\"We are talking.\" Lips met my ear. \"You look so beautiful,\" he whispered. \"So fucking delicious.\" He nuzzled my neck. \"I just want to eat you, Andie.\"\n\n\"Listen to me.\" I cupped his chin, pulling his face around to meet half-closed eyes. \"You're too distracting. I want you too much.\"\n\nHe blinked. \"How is that even possible?\"\n\n\"Everything's too much right now. I'm stressed at work. I hate owing your parents, they know about us, I can't concentrate when we're apart...\"\n\nWill brushed my hair back from my face, looking at me more closely. \"Little cousin.\" His lips met mine in a soft kiss. \"Don't worry,\" he whispered into the kiss.\n\n\"Will, you know\u2014\" I protested, before my mouth opened to take his tongue. He did know. He knew I had no power to resist him when he called me that. I pulled him closer, shivering with need. My pussy, wet all evening, pulsed with hot juices.\n\n\"See?\" he murmured. \"It's okay, Andie. Let me help you feel better. I promise I'll take care of you.\" A hand unzipped my dress. Silk slithered off my bare back. Wide green eyes devoured the lacy bra clinging to the gentle slopes of my breasts and the panties outlining the slight curve of my hips. \"Oh, Jesus,\" Will groaned. \"Fuck, you're gorgeous.\" His stare, piercing right through the delicate lace, sent hot, wet throbs of need straight between my legs.\n\nI couldn't hold off any longer. My hands slid into his hair, pulling him down to me. My back arched, wanting more of his fingers as they pinched down on my little pink nipples, hardening inside lace. I couldn't help running my palms over his firm back, rubbing his body through the polished cotton of his shirt.\n\n\"Missed you so much, Andie.\" A warm tongue traced my ear. \"I couldn't stop thinking about you.\"\n\nI moaned softly, relaxing and opening my legs to him. \"I missed you too.\" And I had. Too much. All the time.\n\nFingers easily undid my bra, draping the mossy green lace over my chair. \"Missed everything about you, sweet girl. Look at these perfect little tits.\" My cousin's large hand cupped one small breast, cradling the creamy curve as he rolled the puffy pink nipple between his fingers into a hard, puckered nub.\n\nMy breath quickened. My hips lifted to let him peel off the exquisite lacy thong, soaked and clinging between my legs. Palms caressed both my breasts now, teasing the sensitive skin into goosebumps.\n\n\"I want you all the time,\" I moaned. \"I don't know how to handle it.\"\n\nOne hand closed over my mound. Fingers slipped into my silky wetness, stroking my swollen lips,\n\n\"Just give in to the feeling, Andie.\" His breath, hot on my ear. \"It's okay to want.\" I groaned, shuddering against his fingers.\n\n\"Not fair,\" I whispered into his neck. \"You know I can't stop when you do this.\"\n\n\"Then. Don't. Stop.\" A thumb pressed my clit, slipping and sliding over the swollen bud. My breath caught.\n\n\"You feel too good.\"\n\n\"No such thing.\" Large fingers massaged my juicy entrance, making me gasp when they slid inside me.\n\n\"Do you actually know what it feels like to want, when you already get everything?\" My hands caught in his hair, pulling. He let out a grunt. My pussy opened around his fingers as they sank deeper, hugging their firmness. He was kissing his way down my body.\n\n\"I don't get everything.\" His voice was soft as he looked up from my stomach. \"And I want you.\"\n\nI cried out suddenly, yanking my pillow from under my head to bite, when Will's kisses trailed over my mound, tickled the sensitive skin, and ended in a soft nuzzle on my clit. My toes clutched the sheets, digging into the mattress.\n\nA warm tongue deliberately opened my folds, sliding into every crevice with delicious slowness. Only once I was panting into the pillow, thrusting my hips toward my cousin's hot breath, juices dripping down my ass to soak the sheets, did his lips close around my clit to gently suck.\n\n\"Uh, Will...\" I groaned, squeezing the pillow. \"I need...\"\n\n\"What, Andie?\" he murmured. Glazed eyes looked up at me from between my thighs. Fingers stretched me, stroking me from the inside. My pussy quivered around his touch. \"What do you need, baby girl? Do you need more?\"\n\nOh God, I didn't know what I needed. I didn't know what I wanted, except Will's mouth between my legs, and his touch all the time, everywhere.\n\n\"Yes,\" I whimpered. \"More...\"\n\nI broke off in a squeal when he sucked hard on my clit. His tongue snaked so intimately around the tiny bud. I couldn't keep my voice down now. My pussy clung to his fingers as they wriggled inside me. My core was opening to him, giving him my deepest secrets.\n\n\"I just want to drive you crazy,\" he muttered against my swollen lips.\n\n\"You do, Will,\" I gasped into the pillow. My legs thrashed until he pinned them down firmly against the mattress with his elbows. \"Oh God, you do.\"\n\nI shuddered, open and exposed under his tongue and fingers, tugging his wavy hair, never wanting it to end. Suddenly, one finger slid into my slippery cleft, teasing the tight pucker of my ass.\n\n\"Will, please,\" I groaned, bucking toward him.\n\n\"Little slut,\" he rasped, caressing the sensitive skin. I gasped, more juices running down my ass as he penetrated me. \"You need this tonight, don't you? You need me inside you everywhere. I know how hard you come with my finger up your ass, sweet baby.\"\n\nI could only sob, my head whipping from side to side on the pillow as his dirty words and stroking fingers sent a haze of heat over my body.\n\nMy crotch clenched in a long, hot, throbbing spasm. Will's soft lips on my clit contrasted with his large fingers filling my pussy and his sure touch massaging my ass. My cousin growled into my soaked folds while I came eagerly, helplessly on his mouth and hands.\n\n\"Better, Andie?\" he murmured, easing his fingers out of my pool of juices as I panted for breath. \"Did that help? Just a little bit?\"\n\n\"Oh God,\" I moaned. It was just the beginning. \"I need to taste you.\"\n\nDazed with lust, I let Will guide me between his thighs. I took his cock in my mouth, deeper and deeper between my lips, sucking hungrily on the hard silky flesh as he grunted with lust and massaged the back of my head. Fingers caressed my throat. All I felt was Will's thick erection on my tongue, filling my mouth, as I licked him again and again, lapping up salty juices. All I heard were his soft, crude whispers, guiding me.\n\n\"Sweet little cocksucking cousin. Take me deeper, Andie, I know you can. You look so fucking beautiful with those innocent lips wrapped around my cock. Deeper, sweet girl, that's right... Oh, fuck...\"\n\nI slurped frantically as his words started to come in gasps.\n\n\"Easy, Andie,\" he finally murmured, guiding my head back. Need made me dizzy as his rigid cock slipped from my lips. Will's hands were helping me up, pushing me onto the soft rumpled bed, lacing through mine to hold my arms above my head, and all I could think was I want I want I want.\n\nA hard, warm male body settled on top of me. I moaned at the sensation of Will's cock, nestling against my tight opening. My pussy tingled, slick with juices. I'd felt this so many times over the summer and fall. But each time felt different. Each time was new.\n\n\"That's it,\" he murmured, as I closed my legs around his back. His hands tightened on mine, holding my arms securely above my head. \"Just take me in, little cousin.\"\n\nI buried my face in his shoulder, his scent everywhere as his thick rod opened me.\n\n\"Mmmm, Will,\" I whimpered.\n\n\"Yeah,\" he whispered. \"So luscious. So hot and tight. And dripping wet like always.\"\n\n\"You feel perfect,\" I breathed into his neck. I rocked my hips underneath him, feeling him sink deeper into my soaked pussy. Every slow thrust, snug inside me, drove me to surrender a little more. \"Harder,\" I pleaded. \"Faster. Please, Will.\"\n\nInstead, Will pushed himself up, green eyes staring down at me, hands pressing mine into the pillow above my head. My pussy spasmed around his heavy cock.\n\n\"This is so right, Andie.\" He bent to drop one soft kiss on my lips, and I writhed against him. \"You and me, like this.\"\n\nThen he fucked me.\n\nI didn't care what my roommates heard. I forgot them. I forgot they existed, forgot anyone existed except Will and me. My shrieks filled the room as Will drove his cock into my soaked core, tight and melting and spasming around him. The bed bounced beneath my back. My breath came out in gasps. I arched my back under my cousin, begging for I didn't know what, until he crushed his lips against mine. His lips tasted like salt and pure need, his tongue hot and seeking in my mouth.\n\n\"Will, oh God\u2014\" I gasped. My shrieks were turning into sobs. My fingers wanted to fist in his hair, but all I could do was clutch his hands in response as he held me down firmly.\n\nWill had never fucked me this hard. I'd never fucked him back this hard, bucking against his unyielding body to meet every thrust that rocked me to my core. All I could do was open up to him more and more, let him in deeper and deeper, until he let out a long, low animal growl.\n\nHis cock pulsed as he came inside me. Each little jerk tugged at my pussy, pulling soft pants from my mouth. Strong arms pressed against mine. Will's growls into my neck mingled with my sobs of need at every spurt of cum deep into my tingling pussy.\n\nWhen his thrusts slowed, he collapsed on my chest, releasing my hands and massaging my prickling arms. As sensation came back, Will pulled me even closer, one hand dropping to cup my ass. We stayed tangled together, his cock still buried inside me. Minutes passed until we both sighed, stretched, and slowly rocked our hips apart.\n\nThe only sounds were the voices, horns, and rumbles of cars from outside. Cool smoky fall air drifted through the open window. My fingers twined in Will's. As breakups went, I'd failed spectacularly. I'd just made my own job harder.\n\n\"Tell me one thing you want that you haven't gotten,\" I said suddenly.\n\nHe rolled onto his back, pillowing his head on one sculpted arm, and stared up at the ceiling. \"My parents should be like yours. Split up.\"\n\nI opened my mouth.\n\n\"I know, Andie,\" he said before I could protest. \"I know it's not great. I know you wish they were still together. But at least your parents are honest about it. My parents are going to stay married forever. The perfect couple.\"\n\nThe bitter edge in Will's voice was a world away from his usual smoothness. I didn't flinch. I'd heard it before. He'd heard it from me too.\n\n\"They both get something out of it.\" With my fingertip, I connected the three dark freckles on his arm. His summer tan still colored his skin, fading but golden. He knew the many freckles scattered on my arms just as well. He'd traced them with his tongue more times than I could count.\n\n\"They sure as hell do.\"\n\n\"What else do you want?\" I asked softly. \"Anything?\"\n\nHe shifted on the bed to face me. \"It would be nice if nobody knew who I am. So when I do something or get somewhere, it's not because I'm Richard's son. I'm not wondering if anything I do matters, or if it's all my fucking dad.\"\n\n\"Really? What would you do if you were a regular person?\"\n\nHe gave me a long look. \"Work for things. Like you do.\"\n\n\"Will.\" I cupped his cheek, then pulled my hand away. \"I need a break.\" There was just no good time to say it. Every time would be like this. \"I can't keep wanting you so much.\"\n\n\"What do you mean?\" Will looked bewildered. \"I'm right here. And I don't understand that. You want something, you get it, it feels good. That's how life should go.\"\n\n\"I want other things, too.\"\n\n\"Is this about my parents? You don't owe them anything, Andie. They have nothing to do with us.\" I wanted to believe him. \"Or you care what people think? I don't. Is it about the summer? When you first came?\" He rubbed his hands over his face and blew out a long breath. \"I'm sorry. I shouldn't have.\"\n\n\"I know,\" I said softly. \"It's just all-- I can't right now. I need to focus. I love my job and I can't afford to lose it. I need to sleep at night. Not think about you all the time.\"\n\nGreen eyes stayed on my face. I made myself hold Will's intent gaze, feeling very naked. \"Something's wrong at work? I can help you.\"\n\n\"No, Will,\" I said more forcefully. \"Thanks. But no. I don't want your help. Or your parents'. I need to do it alone.\"\n\nSilence. Then Will's wry grin took me by surprise. He touched my waist \u2014 a light touch. \"You have any idea how much I envy you sometimes, Andie?\"\n\n\"I'm not switching places with you.\"\n\n\"I know. That's why I envy you.\"\n\nAbruptly he stood up and stretched, working out stiffness. I stared. I couldn't help it. Every muscle and plane in his bare body was perfectly balanced. If he'd bent down for a kiss right now, cupped my breasts, taken my nipple in his mouth, I would have dissolved under his touch. I would have begged him helplessly to take me again.\n\nWill's green gaze was on me now, unsettling. I flushed and slipped my nightshirt on.\n\n\"Just put your clothes on,\" I said awkwardly. \"I'll walk you out.\"\n\nHe shook his head, but he shrugged on his snowy white shirt, stepped into his briefs, tugged on his sharply creased slacks and buckled his belt with a clink that made me shudder. His tie got knotted at a speed that could only come from doing it hundreds of times.\n\n\"You really mean it, cousin.\"\n\n\"You don't believe me.\"\n\nHe flashed me that dazzling white grin, the one that charmed everybody, and opened my bedroom door. \"We'll see. I don't believe this is the last time we'll ever talk.\"\n\nIt wasn't. Of course it wasn't. I pushed the thought down as we walked into the narrow hall.\n\n\"Don't give me the smile.\"\n\nHe let out a brief laugh, genuine this time. \"Okay, I won't. Can I kiss you goodbye?\"\n\n\"No.\"\n\n\"Hug you?\"\n\nOh God. I wanted to feel his solid arms around me so badly. \"No,\" I whispered.\n\nHis face fell. \"Andie\u2014\"\n\n\"Just go. We're not going to never talk again. I just need\u2014\" I looked around the tiny apartment. Will's eyes followed mine.\n\n\"...Space,\" he finished.\n\nI nodded. He stared at me for a long minute like he really didn't believe me -- confused, incredulous. Then he turned and walked out the front door. I watched it close behind him.\n\n*******\n\nIt did get easier to concentrate at work. At least, once my body believed I'd be alone in bed, not just at night but on the weekends too. And once my back stopped arching, seeking my cousin's touch every time I slipped a hand between my legs. And once the mossy green bra and panty set went into hibernation, hiding in the back of my underwear drawer.\n\nI'd done the right thing. Whatever had happened between me and Will, no matter how many times I'd said yes, it was too crazy, too intense, too forbidden to continue. I hadn't been kidding when I'd told Meg and Emily we were both insane.\n\nBut the marble chess set stayed on top of my dresser. Will's thick blue robe came out of my closet once in a while, as the fall mornings got frostier. On weekends, when I drank coffee and read the newspaper in bed, and late at night, when I could hear raw whispers in the dark, I had to force myself not to pick up the phone.",
        "*******\n\nThe day after Christmas, I sprawled in flannel pjs on my mom's ancient couch, playing chess against myself. The busted springs creaked every time I made a move. My mom kept the heat down to save money and was reading a book in her puffy down jacket. Nearby, on the coffee table, sat stacks of work I'd brought home over the holidays.\n\n\"Did you SEE this year's Christmas letter from Rose?\" my mom wanted to know. \"Unbelievable. And Will's 22nd birthday party -- total debauchery.\"\n\n\"I saw, Mom.\" I'd paged through the pictures. A blitz of champagne bubbles and glitter. Will looked like he was in a toothpaste commercial, and his tan looked like he'd done nothing but lie on white sand under a beaming sun for the past week. \"The champagne was flowing.\"\n\nMy mother snorted. \"There was a lot more than champagne flowing through his system, I promise you. I don't even want to know how he's wasting his time at college. You know he's guaranteed a job with Richard? When I think of him squandering that priceless Ivy League education, while you worked so hard in school...\"\n\n\"He studies,\" I mumbled.\n\nI didn't tell my mom that my Christmas letter from our relatives had come folded around a check. When I'd opened the rustling paper, I'd blinked in disbelief. The check was more than I made in a month. It was sitting on my dresser right now, in the city, wedged behind my jewelry box. I couldn't bring myself to cash it, and I couldn't bring myself to tear it up.\n\n\"Have you heard from them since the summer, sweetie?\" My mother cupped her coffee mug for warmth. \"I didn't want to say it, but I worried about you in that house with my sister's family.\"\n\n\"Will and I kept in touch for awhile.\" I picked up a black knight, rolling the heavy stone in my hand. Will had run it down my bare skin last summer, leaving a path of goosebumps behind, long before he'd won a game. When cool marble had trailed over my hot folds, rubbing my swollen clit into hardness, I'd bucked under Will's unswerving gaze, babbling out a string of pleas for him to touch me because saying yes still felt new. He hadn't. He'd made me come with the smooth marble knight, drinking in every moan that left my mouth and writhe of my naked curves.\n\n\"That's nice, at least,\" my mother said distractedly. \"That you kept in touch. Maybe he'll turn out a little more human than his parents. I'm just relieved you didn't come out of three months at that house a different person.\"\n\n\"Everyone changes.\"\n\n\"No, Andie, some people never do. Look at my sister. Money or no, she's always seen people as things to use. And\u2014 This is gorgeous.\" She held up a white rook, examining it. \"How on earth did you afford this?\"\n\nI shrugged. \"Will gave it to me.\" No reason to hide it now. I'd lugged the chess set to my dad's apartment earlier this week too, my first time seeing his new place, where we'd moved the marble pieces around instead of talking.\n\n\"That was very nice of him.\" My mother eyed me cautiously. \"I didn't realize the two of you had become so close. And this would be a drop in the bucket for them, but Andie, I've never known my sister or her family to give something for nothing.\"\n\nI shrugged again. The house was cold, but the conversation was making me uncomfortably warm. \"We talked. I think he appreciated it.\" I sat up, tossing the knight onto the board, and the couch groaned. \"Mom, you really need a new couch. Do you want a new couch?\"\n\n*******\n\nI cashed the check. I sent a polite, awkward thank-you note to my aunt and uncle. My mom needed a new couch, she needed heat, I wanted three matching chairs for our dining table in the city, it felt good to cook a fancy dinner with ingredients I never bought and jam our tiny apartment with everyone Meg and Emily and I knew... A response never came to the thank-you note, which was more than fine.\n\n*******\n\nThree months later, a thick envelope showed up in the mail: heavy paper, flowing script, my aunt and uncle's address on the back. Inside was an invitation to Will's graduation party in May. My aunt's elegant handwriting crossed the bottom: I'm sure Will would love to see you. We all would.\n\nMeg, perched on one of the new dining chairs with her laptop, reached over and grabbed the invitation out of my frozen hand.\n\n\"Damn. You're going, right? Do you need a plus-one? Nah, you'll take James. Make your cousin jealous.\" James and I had been dating since February. It was okay. Pleasant. Other than his complaints about my late nights at work, we got along fine. \"Hey, I wanted to show you\u2014 I was stalking people online and found this.\"\n\nI stared at her screen. Will, bronzed, his brown hair longer and curling around his chin, his gaze like green glass, his smile perfect. Wet swim trunks clung to his thighs. Water trickled down his sculpted chest. One arm draped around a gorgeous girl, nearly naked in a tiny white string bikini. I eyed her blonde hair, wet and slicked back; her cool blue eyes; her full breasts; her satisfied little smile. Ocean sparkled in the background.\n\n\"Completely inferior-looking,\" Meg announced.\n\n\"Who cares?\" I shoved the fancy invitation back in its envelope. \"She's one of many. Hundreds, probably. And\u2014\" The name under the picture caught my eye: Madeleine Platt. \"One sec.\"\n\n\"Andie?\" Meg snapped her laptop shut. But I was already in my bedroom, pulling out my phone.\n\nMadeleine Platt? Really? I typed furiously. As soon as I hit 'send,' I hurled my phone across the room, cursing. The phone didn't break. Will's response came back almost immediately: Just say the word, Andie.\n\nI didn't. But the next day, I sent the RSVP to my aunt and said that I would come alone.\n\n*******\n\nOak leaves rustled as I crossed my aunt and uncle's rolling green lawn. I'd expected a repeat of the garden party last June, nearly a year ago now, but the noise and laughter came from a huge tent, lit with lanterns. A much bigger crowd surged inside. Adjusting my black satin strapless dress, I smoothed it where it hugged my hips, and took a minute to touch up my lipstick. I'd pinned up my hair, and my high heels sank into the grass.\n\nJames and I had broken up two weeks ago. You just don't seem that into this, Andie. I'd thought about bringing Meg or Emily with me tonight. Meg would have eaten up every bite of clothes and dazzle, and Emily would have appreciated the free food. But in the end, I came alone.\n\nThe whole party seemed to sparkle with champagne droplets, fizzing and arcing over the laughing crowd. A glittering dot detached itself from the people milling inside the tent and walked purposefully toward me.\n\n\"So glad you came,\" Aunt Rose gushed. Still beautiful, maybe even more so than last summer. Once I'd noticed the resemblance between us, I couldn't help looking for it every time I saw her. The teardrop-shaped eyes, the almost-hidden spattering of freckles, the delicate frame wrapped in a shimmering cocktail dress. The shining blonde waves that used to be as red as mine. \"Will will be thrilled. He's moving to the city next week, you know. We have a gorgeous place all set up for him. He's right over there. Go.\"\n\nA sharp nudge on my arm toward the center of the tent, and she was off, talking animatedly to the next group walking in.\n\nWill stood in the middle of the swirling crowd, dressed in a tux, holding a glass of champagne. From the edge of the tent, I eyed him. My cousin had the same beautiful face I'd stared at during that garden party when I first arrived: same unsettling green eyes, wavy brown hair, full lips and defined jaw. Same sparkling smile, with two differences: there were violet shadows under his eyes now, and he never, not once, looked bored. No matter what, that smile didn't falter.\n\nAnd a girl was glued to his side.\n\nMadeleine Platt was beautiful, even prettier in person than her picture. Blonde-streaked hair hung down her back, thick enough to weave into rope. Flawless skin highlighted the wide planes of her face. She was tall, leggy, and tanned, and her snow-white smile gave Will's grin a run for its money.\n\nI pushed through the crowd, making my way toward my cousin. A few feet away, he caught sight of me. Green eyes widened and blinked a few times. His smile vanished.\n\n\"Andie,\" he mouthed.\n\nBut by the time I reached him, the golden face was back in place.\n\n\"Hi, cousin,\" he said smoothly, giving my hand a quick squeeze and leaning down to kiss my cheek. The whisper of Will's breath, his soft lips against my skin, suddenly rocked me where I stood, and I squeezed my toes inside my high-heeled pumps. Maybe I shouldn't have come, but I'd needed to.\n\n\"Congratulations.\" My hand was still in his. Everything in my body told me to hold on. Carefully, I freed my fingers. \"I know you worked hard for this.\"\n\nHis eyes flickered. \"I didn't think you'd come.\"\n\n\"Your parents invited me.\" And I'd said those words a year ago, when Will asked why I was here for the summer.\n\n\"Oh, you were invited?\" The girl next to him laughed and turned to Will. \"Baby, you didn't tell me you had cousins. Or any family at all. I thought there was just you.\"\n\n\"Andie, this is Maddie.\" Will made smooth introductions. \"Maddie, this is my cousin Andie. She lived with us last summer.\"\n\n\"I'm Will's girlfriend,\" Maddie added helpfully.\n\nHer brief hard handshake told me everything I needed to know about her. Aunt Rose hadn't been playing around when she said Maddie and Will were cut from the same cloth, at that endless luncheon with her gossiping friends. Behind Maddie's pretty blue eyes lay ice-cold calculation, and she hid it less well than my relatives did. If Madeleine Platt had lived with her rich family for a summer, without much money to her name, she would have done exactly what Will had insisted I must want. She would have taken every advantage.\n\nI nodded, said \"nice to meet you,\" and wondered if she'd slept with my cousin.\n\n\"It's been awhile, Andie.\" Will's smile was more relaxed now, but my gaze kept moving to the shadows under his eyes. \"You look great.\"\n\n\"Thanks,\" I murmured. \"I'll feel more great when I have a drink in me.\"\n\n\"Take mine.\" Will's fingers grazed mine as he put his champagne flute in my hand. The tingling throb from his touch hadn't changed.\n\nMaddie was eyeing me, wondering why I was still here. Forget Will and Maddie being cut from the same cloth. The cool assessing look on this girl's face was my aunt all over again. She and Will were definitely an attractive couple. As Rose had said, they'd go far together. Unless someone threw them both in a cage to see who would walk out alive.\n\n\"We should get Spencer and Paxton to entertain her,\" Maddie remarked to Will, as if I weren't standing two feet away. The lazy hand she rested on his neck, rubbing it in casual possession, gave me my answer: she'd slept with my cousin. \"They love redheads.\"\n\nMy fingers stiffened around Will's drink. Madeleine Platt really was an Aunt Rose in training, right down to insisting on everyone's full names except for Will's.\n\n\"I've met Spence and Pax.\" I made myself take a casual sip of champagne. \"I don't need to re-meet them.\"\n\nWill's lips twisted in a snort. A warm hand cupped my elbow. \"Andie, how are you? How's work? Are you still living with Meg and Emily?\"\n\nSomething deep inside me clenched, then melted at seeing a flicker of realness inside Will. Asking questions, caring about the answers. Like a person. And that person was almost buried. Enough time with Madeleine Platt, and the job at his dad's firm, and it would be sealed off forever.\n\n\"Work's going really well.\" More champagne fizzed down my throat. Will's hand was an anchor on my arm, worlds away from the toying touches he'd given me at the garden party a year ago. \"I'm still rooming with Meg and Emily. Meg says\u2014\"\n\nMadeleine Platt had clearly decided I wasn't worth bothering with. \"Spencer! Paxton!\" Her voice cut through the crowd. She curled one shapely tanned arm in an invitation they couldn't refuse, beckoning them in. \"There's an old friend of yours here. You remember Will's cousin. Take care of her for us, okay? Someone needs to show her a good time tonight.\"\n\n\"No, Maddie,\" Will murmured. \"Andie's fine.\"\n\n\"What do you mean, 'no'?\" Behind her laughter, her blue eyes hardened. Sharp annoyance flashed across Will's face. It all happened so quickly that I barely registered it. The next second, she had my cousin's face in her hands, pulling him close for an intimate whisper. \"I like to see everybody happy, baby. You know that.\"\n\nWill looked toward me, his green eyes unreadable. I wanted to drag him out of his own party, into the woods or back to my apartment or somewhere that wasn't here. I knew what I wanted now, but there was nothing I could do about it.\n\nTouching his jacket sleeve, I stepped back as Spence and Pax swaggered up, eyeing me like I was one of the tasty morsels on a passing hors d'oeuvres plate.\n\n\"Congratulations again,\" I said quickly.\n\nBefore Will could answer, I turned and threaded through the crowd, putting distance between us. I ate some brie and crackers. I stuck to talking with people my aunt and uncle's age, and probably made contacts that were more valuable than I could guess. I took everyone's business card. Every so often, I glanced toward the center of the tent. Will, drinking champagne; laughing with his friends; kissing Maddie; watching me.\n\nMy feet took me out of the tent and onto soft grass. I crossed the manicured lawn, following the path of lanterns in the dark \u2014 not to the tall oaks, rustling on the border of the woods and flashing with fireflies, but to the big house.\n\nI recognized the security guard outside the back door. He'd been here last summer, and he'd pretended not to to notice, gazing steadily in the other direction, whenever Will and I crossed his path after coming out of the woods.\n\n\"Hi, Brian. Okay if I go inside? I just\u2014 want to see my old room from last summer.\"\n\nHe frowned. \"Please,\" I said softly. \"It would mean a lot to me.\"\n\n\"All right. Go ahead, miss.\" He spoke into his radio, letting security know I was coming in. It was hard to believe, this life.\n\nInside, I noticed changes. An enormous oil painting here, a lush new rug there. A mirror, moved. Everything still soft, glowing, and opulent. I took my chances hurrying through my aunt and uncle's bedroom to stare at the shining black marble tub in the adjacent bathroom. My old room sat untouched, as perfectly arranged as if I'd never slept there, or Will, or anyone.\n\nWill's bedroom looked the same. I flipped through the stacks of books on his heavy desk, ran my hand over the bumps on the antique globe, and traced the silver-framed pictures on his mahogany dresser. The pictures had changed since last summer: a beaming college graduation photo, surrounded by other guys, with those same shadows under his eyes; another posed swimsuit picture with Maddie, looking like a magazine cover; and a picture of me.\n\nMy heart thudded when I saw it. A picture of us, really. I'd had no idea he'd framed it; the picture hadn't been here last summer. Our hair was messy in the wind. The smiles on our faces were real.\n\nEither Maddie had never been in Will's bedroom at home, or she'd been too busy undoing his zipper with her teeth to notice the picture.\n\nWill's huge bed still smelled like him: crisp, clean, light. Kicking off my high heels, I curled up under the snowy white comforter and buried my face in a thick pillow.\n\nI'd come for comfort, but lying in my cousin's bed was drawing moisture between my legs, coaxing my nipples to taut peaks. I shouldn't be here, I definitely shouldn't take my clothes off, but my hand was already reaching for my zipper, just to release the aching mounds of my breasts from my tight dress...\n\nA heavy tread sounded in the hall and stopped in front of the partly open door. I froze, then scrambled out of Will's bed, frantically smoothing the sheets and my dress.\n\n\"Andrea.\" Sleek male bulk stood inside the doorway. My uncle Richard raised his eyebrows at me. \"What are you doing in here?\"\n\nMy heartbeat sped up. I'd hoped it was Will, though that wasn't his walk. A security guard would have been embarrassing, but manageable. But Richard\u2014\n\n\"I just wanted to see the house. I have a lot of memories from last summer.\"\n\nRichard glanced at the unmade bed, then back at me. Quickly, I stepped into my shoes, the heels giving me a few extra inches of height. But I still felt very short.\n\n\"I see.\" My uncle's eyes flicked over my rumpled dress and loosened hair. Awkwardness pricked my skin. \"It was nice of you to make the trip out tonight. No doubt it means a lot to Will.\"\n\n\"I\u2014 thanks.\" I fought down a stammer. \"Thanks for everything. I guess I've never really thanked you in person, but I really appreciate the help with the job, and last summer, and, uh, the check at Christmas. I got my mom a couch.\"\n\n\"Glad to help.\" Richard smiled. \"That check was just a little thank-you for entertaining our boy last summer. Rose and I know how much he enjoyed your company.\"\n\nSudden anger flushed my cheeks. There were so many things I could have said. \"He's a grown man. Not a boy.\"\n\nRichard regarded me more closely. His dark eyes sharpened, pinning me in place. \"What do you know about grown men, Andrea?\" His voice was softer now. My shoulders tensed. \"Because you didn't learn about them from my son.\"\n\nI swallowed. \"Look, I think\u2014\"\n\n\"Has Will told you how much you look like Rose did when she was younger?\" Richard asked, conversationally.\n\nSweat broke out on my forehead. I tugged at the hem of my rucked-up dress, trying to move it discreetly down my thighs. \"I've noticed the resemblance.\"\n\n\"It's certainly there.\" Deliberately, like he was checking just to make sure, my uncle's eyes moved over the ginger waves I'd pinned up, messy now and falling over my bare freckled shoulders, then down to my small breasts and slim hips, hugged by black satin. My face burned. \"Though Rose would agree you look more innocent than she ever did.\" He chuckled. \"I've always wanted a more innocent version of my wife.\"\n\nA chill ran through my body. Your son took most of my innocence, I thought. Because I gave it to him.\n\n\"I need to go. Now.\" Why weren't my feet moving? I was frozen. \"And I haven't seen Will in awhile.\"\n\n\"I'm aware of that. Are you enjoying your job, Andrea?\"\n\nI blinked. \"Very much.\"\n\n\"I understand you're doing quite well there. I'm sure you'd like some security in your position. There's a lot of turnover in publishing.\"\n\nI remembered all the confusion, the arousal, that I'd felt with Will at the beginning of last summer. There was no confusion here. I knew exactly what was going on. Richard's body filled the doorway.\n\n\"I'm not worried.\" My throat was dry.\n\n\"Good.\" Richard leaned against the doorframe, unmoving. \"Rose is hoping Will and the Platt girl will get married, but someone like Will\u2014 Well, he has his whole life ahead of him. He ought to take a few years to enjoy himself. In all the right ways, of course. Don't you think?\"\n\n\"I don't have an opinion,\" I said coolly.\n\n\"Now, I can't believe that. You're quiet, Andrea, but you're smarter than you let on.\" Richard's tone was soft and friendly, as casual as if we were talking about the weather. \"I think you know what a shame it would be if everyone found out Will's been enjoying himself with you. Your parents would be devastated. A shame for Will, too. Very embarrassing for you both. And you seem to care.\"\n\n\"I'm not embarrassed,\" I snapped. My face flamed bright red, giving the lie to my words. \"I don't have anything to be embarrassed about. Will, on the other hand\u2014\"\n\nWill had a lot to be embarrassed about, from the beginning of last summer. A lot to be ashamed of. But I'd seen that shame since then, in the way his skin had flushed when he'd apologized to me. The way he'd looked at me when I'd told him to leave my apartment. The violet shadows under his eyes tonight.",
        "\"He could stand to have someone who cares,\" was what came out of my mouth. \"No one else does.\"\n\nRichard's eyes narrowed. \"I've given that boy everything he wants. You have no idea.\"\n\n\"It's not enough.\" I stalked to the door, too angry to be intimidated now. \"Thank you, it's been a pleasure, but we're done here.\"\n\nRichard dropped a firm hand on my bare shoulder. \"I don't think you understand, Andrea.\"\n\n\"I do. And no.\" I tried to push past him. Richard's hand tightened. He leaned close, blocking my way, his bulk filling the doorway. My uncle smelled expensive, musky, sleek. His other hand settled on my waist.\n\n\"Was my son your first, Andrea?\" he asked softly. I gasped and tried to twist free. \"He was impatient, wasn't he?\"\n\n\"Don't,\" I whispered.\n\n\"You'll have to excuse him.\" Richard was holding me in place. Watching me closely. His cold eyes held a spark of lust \u2014 lust and calm, predatory power. It chilled me. \"Like I said, he's used to getting everything he wants. Rose and I have probably spoiled him. But if you'd asked my advice, I would have told you not to care.\" Warm breath met my ear. I shuddered, remembering Will's dirty whispers, the way they'd made me moan and shake. \"Will certainly isn't capable of it.\"\n\nFear. Real fear. I'd never felt it before, not with Will, not with anyone.\n\n\"No.\" My voice came more loudly then I'd hoped. \"No. Just get me fired. Tell everyone about Will and me. It's over anyway. My parents won't even notice. They're going through worse.\" I was shaking in Richard's grip. \"It's not my fault I look like your wife used to,\" I took a breath, \"or that you hate each other, or that neither of you gives a shit about your son. Excuse me.\"\n\nI pushed hard against Richard's broad chest. Richard let out a low growl of anger, his fingers digging into me, his body pressing me against the doorframe. I struggled against his unmoving bulk, trying to find an opening, when the sounds of pounding feet met my ears. Over Richard's shoulder, I saw Will, his face contorted with shock and fury.\n\n\"What the fuck is going on here?\" he shouted.\n\n\"I said no,\" I panted.\n\nRichard let go and stepped back. Actually dusting off his hands. \"A misunderstanding.\"\n\nWill stopped inches from his father, his fists clenched, every muscle bunched in his tux. \"Don't ever touch Andie again.\"\n\n\"A disagreement,\" Richard said smoothly. \"That's all.\"\n\n\"Right. A disagreement. A big one.\" My voice was coming back, dry but getting stronger. \"About what I would or wouldn't do to keep things quiet about you and me. I don't care.\" My voice rose. \"I don't care if everyone knows.\"\n\nWill stared at me, then at Richard. \"If you come near her again,\" he said softly to his father, \"or fucking threaten her... You don't want to know what I'll do.\" His slitted green eyes sent a tremor through my body. Richard held his son's gaze and said nothing. But his bulk suddenly seemed less powerful, less terrifying. \"Whatever you do with anyone else \u2014 don't even look in Andie's direction. And don't expect me to come to work tomorrow.\" Will closed his eyes, then opened them. \"Or ever.\"\n\nA full minute passed. My skin was clammy, sweat trickling between my breasts. Will's hands were still balled into fists, rage making him rigid. His father's face held no expression at all. But the air between them crackled with hostility.\n\nFinally, Richard's dark eyes flickered. Turning on the heel of his shining dress shoe, he walked down the hall. It was like Will and I were no longer there.\n\nWhen his broad back disappeared through the far doorway, I let out a long, shaky sigh. My face suddenly pressed against a hard chest. Solid arms wrapped tight around me. My knees were about to give out.\n\n\"What did he do?\" Will's heart was beating as fast as mine was. \"Did he touch you? Andie, talk to me.\"\n\n\"Yes.\" I felt exhausted. \"He didn't get far.\"\n\n\"Anything is too far.\" His face was in my hair. \"Are you okay? Tell me if you're okay.\"\n\n\"I want to go home.\" I sagged against him.\n\n\"Yeah. So do I.\" His voice was low. \"I'm sorry, Andie.\" His body was shaking against mine. \"I'm so, so sorry.\"\n\nThere was a lot more than apologizing for his dad in there. I took a heaving breath. \"I know. I forgive you.\"\n\n\"I'm just like him.\" I could barely hear Will. \"I'm the same. I'm going to be just like that. I already am. I'm worse.\"\n\n\"No. You don't have to be.\"\n\n\"I can't do this,\" he whispered into my hair.\n\n\"Then don't.\" I grabbed his hand impulsively. \"Come on.\"\n\nOur footsteps clattered through the huge house. As we burst out the side door, racing down the circular driveway to the garage, gravel crunched underfoot. I kicked off my heels to run. My tight dress bunched around my thighs. Will's legs were longer, but I was fast. I kept up.\n\nWhen the doors opened to the vast garage, and bright fluorescent lights flooded the yawning space at Will's touch on the switch, sanity tried to intrude.\n\n\"Will, your party\u2014\"\n\n\"It's not my party,\" he muttered. He pulled me to his silver SUV. Then he helped me into the passenger's side, jumped into the driver's seat and roared in reverse out of the garage.\n\nWe tore away from my aunt and uncle's property in a squeal of tires, zooming onto the tree-lined road. The smell of burning rubber filled the air. From the pocket of Will's tuxedo pants came the buzz of his phone, constantly ringing.\n\n\"Are you okay?\" he asked again. His free hand gripped mine. Or maybe I was clinging to his. I didn't know who was holding on tighter.\n\n\"I don't know. I think so. You?\"\n\n\"I just gave up everything.\" His green eyes were stunned.\n\nCrazy as it was, I laughed. \"You still have a lot.\" More than most people. \"You can make up with your parents. They'll take you back.\" My insides twisted as I said it. But they were still Will's family.\n\n\"I don't want to, Andie.\"\n\nWill swerved around a curve. I tried to get my breath under control. \"What were you doing in the house? How'd you know?\"\n\n\"I saw you leave the party. I wanted to find you to say goodbye. Just goodbye.\" He shook his head. Anger still coiled his muscles, but he looked dazed. \"I asked security if they'd seen you. They told me you'd gone into the house.\"\n\nI pressed my face into Will's arm. \"I just wanted to see everything one last time.\"\n\n\"You had more of a goodbye than I did.\" I could barely hear him. Lifting my head, I stared at my cousin's carved profile, a gorgeous silhouette against the moonlit outdoors.\n\nOak trees streaked by, rustling overhead. The moon shone through the leafy branches. Will braked sharply at a bend, then floored the gas again.\n\nAfter a few silent minutes, he cleared his throat.\n\n\"Did you see anyone this year?\" His eyes focused on the winding road. I was grateful for his tight grasp on my hand.\n\n\"I had a boyfriend this spring. He thought I worked too much.\"\n\nWill's lips twitched. \"You probably did.\"\n\n\"What about Maddie?\"\n\nHe leaned his head against the seat and accelerated. \"Let's not talk about her right now.\" In his pocket, his phone kept ringing.\n\nTrees flashed by, then streetlights. We reached my apartment faster than I could have expected. Will drove around the block until he parked the SUV in a tight space. Jumping out, hands connected, we rushed up the three flights of stairs to my dark and empty apartment.\n\nMy heels clattered down the front hall. My black satin dress was pushed up around my thighs, stuck to my body with sweat and creased beyond recognition. The incessant buzz of Will's phone reached every corner of the apartment. In my bedroom, the door slammed behind us.\n\nPanting, we faced each other. Will's eyes held so many expressions that I couldn't tell how he felt. I slipped my hand into the pocket of his tuxedo pants, pulled out his ringing phone, and handed it to him.\n\nHe shook his head. \"Not now, Andie.\"\n\n\"Yes. Before anything else.\"\n\nHe raked a hand through his wavy brown hair and gave me a long look. Then he stepped outside my bedroom with the phone.\n\nThrough the open door, I heard my aunt's voice. It arrowed straight down the line, her cool control shattered.\n\n\"What are you thinking? Have you gone crazy? Come home now.\"\n\n\"No, Mom.\" The command had returned to Will's voice. \"I'm not coming home.\"\n\n\"You don't know what you're doing. Are you with Andrea? Do you have any idea what she's out for? She was there to make you happy last summer. Her time is done. You need to understand. That girl will take you for everything you're worth.\"\n\n\"No, Mom,\" Will said again, his voice low and intent. \"That's what you would do. Not Andie. Andie's not like you.\"\n\nA pause, Rose speaking more quietly, then Will's voice, icy. \"Dad says he's sorry? It's not enough. He can tell that to Andie. He owes her a lot.\"\n\nLower voices now, angry murmurs. I couldn't make out my aunt's words anymore, and all I could catch from Will, over and over, was \"no.\"\n\nWhen a higher, equally hysterical voice came through the phone, I knew it was Maddie. That conversation was shorter. Will's tone was softer, but just as firm. I leaned against the wall in my bedroom, tensed, still wearing my heels, my dress rustling with every movement, unable to sit down.\n\nFinally, the voices ceased. My bedroom door swung open. Will walked through. The violet shadows were still under his eyes. His hair was a tousled mess. His tux outlined his shoulders and lithe body. He turned off his phone and dropped it on my dresser, facing me again.\n\n\"You got what you wanted,\" I said softly. \"People not seeing you as Richard's son. Not knowing what your future will look like. Working for things.\"\n\nWill just looked at me. \"I don't know what I want now, Andie.\"\n\nI moved close to him, and his eyes flickered. Maybe Richard was right. Maybe Will didn't know how to care about anyone except himself. A golden boy in a golden bubble, I'd hissed at him last summer, when he'd pierced me for the first time in a sudden sting of pain and pleasure. With everything that had happened between us, everything that had happened tonight, I still wasn't sure. I wanted to be sure.\n\n\"I know what I want,\" I whispered.\n\nMy fingers were shaking, but I got his bowtie undone. Will's hands stopped me.\n\n\"We don't have to do this,\" he whispered back. \"I can just hold you right now, Andie. Look, you're shaking. After what happened tonight\u2014\" He leaned down, pressing a light kiss on my forehead.\n\n\"I want to.\"\n\nHis snowy white dress shirt opened easily, button by button, revealing bronzed skin and soft dark hair. Will's eyes opened wide, then slid closed. He leaned back against the wall, his head tipping back to expose his throat.\n\n\"Yesssss.\" The air went out of him in a hiss. His neck looked so smooth, waiting for me, but I didn't touch it.\n\nNerves and need heating me, I pulled his white shirttails out of his slacks. His black jacket, perfectly tailored to his body, eased over his shoulders to drop on my chair. The shirt followed. I ran my hands over his muscled chest, needing to feel him, breathing in his crisp scent.\n\nWill's chest rose and fell under my palms, his half-closed green eyes locked on mine. When I unbuckled his belt, he grunted softly, jerking once towards my hands. But his long body stayed still, leaning against the wall.\n\nHis slacks slid down with a whisper. His briefs slipped over his slim hips \u2014 slimmer than I remembered. But his cock, springing free \u2014 carved, gorgeous, a pearly drop already glistening at the tip \u2014 that was exactly the same.\n\nMy skin prickled with warmth. My breasts were heavy and hot in my tight black dress, my whole body buzzing with too much emotion. When I stretched up to kiss my cousin, twining freckled arms around his neck and pushing the satin of my dress against his naked body, we both groaned.\n\nHot lips met mine. Arms surrounded me, and I fell into soft sweet darkness.\n\nI was dimly aware, but completely aware, of every thrust of Will's dripping cock against my satin-covered stomach, rubbing his thick shaft and his cream into my dress. His powerful arms, holding me firmly against him. His ragged breath as he kissed me hungrily, his pulse beating fast under my tongue when I tasted the place on his neck that called to me. My knees went weak, wobbling as hard as they had when Will first kissed my cheek tonight.\n\nHis kisses and thrusts eased me backward until we tumbled onto my bed.\n\nMy heels skittered across the floor. My zipper parted in one long, smooth pull from my cousin's hands. Black satin peeled away from my sweaty skin. My skin tingled where Will brushed it.\n\n\"Just touch me everywhere,\" I breathed. \"I want to feel you.\"\n\n\"I will, Andie.\" He groaned softly. \"You will.\"\n\nWill's hands traveled all over my curves, massaging, stroking me intimately. My skin popped into goosebumps, unbearably sensitive to his touch, as his palms circled back, spreading heat. A wet tongue tasted my freckles, sliding over my shoulders and collarbone until I shivered and begged for more, digging my fingers into his muscled back.\n\nBut he refused to hurry. His sucks on the soft skin of my neck were sweet, soothing, even when I felt his teeth. As that tongue moved down my chest, licking up my sweat until it met the slope of my breast, the tightness left my body. Will's large palm covered my other breast completely, sending jolts of pleasure to my core. His licks on my tender nipple, coaxing the pink bud to an aching little peak, were so perfect that I let out a long sigh and took his head in my hands, running my fingers through his hair just for the delight of feeling it.\n\nWith all the \"yes\" I'd said, from the beginning of last summer through the softest moments and up to that hard flood of wanting in my bedroom last October, Will had always been making. Whether he meant to or not. Making me admit I wanted him, making me crazy, making me surrender to total pleasure and desire and lust. And I had, until I'd walked away.\n\nNow, he wasn't trying to make me feel or do or say anything. He was just caressing my body, lost in it, his eyes closed as he sucked on my tingling nipple. Harder and harder, until I moaned. My hands explored muscled shoulders, slick with sweat. His skin was so smooth. As I kneaded his back, warm lips nuzzled their way to my other nipple, teasing the sensitive nub to eager response.\n\nMy whimpers filled the room. Will's skin was everywhere under my hands, a warm expanse, and I didn't want to touch anything else. All I could feel were long, slow swirls of my cousin's tongue on my puckered nipples, and my palms on his rippling back.\n\nSoft darkness blanketed us. Bars of light from my single window striped Will's beautiful face and back. When his tongue traced a hot trail down between my breasts and over my stomach, flicking every stray freckle on my creamy skin, I cried out, my thighs squeezing around a sudden gush of juices. My hands jerked on his hair. Then my legs fell apart again, opening and receiving.\n\nKisses grazed my hips and lower belly. Will's lashes were dark against his cheeks, his eyes still closed. That busy tongue circled the soft spot below my belly button, sucking and tasting until pleasure smoked like an ember from his mouth. His tousled hair brushed my skin, messier and messier as I ran my fingers through it. I moaned as more juice slicked my pussy, spread open under Will with only cool night air to caress it.\n\nWarm palms cupped my ass, enclosing the soft cheeks. My moans got louder. My ass quivered in Will's hands as I stroked his neck and hair. His eyes flickered open, roaming over my wet pussy. I could only imagine how it looked: rosy, glistening in the faint light from outside, waiting for him.\n\n\"Andie.\" Smoky green eyes met mine. Will gazed up at me from between my spread thighs. Rushes of pleasure unrolled through my body. \"You're so beautiful.\"\n\n\"So are you,\" I breathed.\n\nHis eyes squeezed shut. \"No, I'm not,\" he muttered.\n\n\"Yes, you are.\" My voice was uneven, but I made it firm. \"I saw what you did tonight. You meant it.\"\n\nHis face was flushed, hair falling over his forehead. He opened his eyes. \"I don't want to take anything from you, Andie.\" His lips were so close to my crotch, I could feel his hot breath on my folds. \"I just want to give you everything.\"\n\nI let out a shuddering breath. Then slowly, I lifted my hips, offering myself to my cousin.\n\n\"Fuck,\" Will groaned. Fingers caressed my thighs. Every stroke sent soft pulses through my pussy \u2014 tender, soaked, and completely open to Will. Every touch fused something broken inside me, making me whole.\n\nWhen his exploring fingers peeled apart my lips, exposing my core to his stare, wetness streaked my cheeks. Answering wetness trickled from deep inside me.\n\n\"So right,\" he murmured. \"Andie.\"\n\n\"Will,\" I whispered back.\n\nSensations blurred when his mouth met my pussy. My cousin's soft lips explored my folds like he'd never tasted them before. Each hot, unhurried lick flooded my whole body. My thighs stayed open, trembling with pure excitement. My fingers tangled in his hair, welcoming his head between my legs. Time blurred too, but every swipe of Will's tongue was so clear. He teased my opening until it gushed in response. He slurped at my clit until it was a hard, swollen pearl.\n\n\"Oh. Oh God,\" I gasped. I was starting to shake. \"Don't ever stop.\"\n\n\"Not stopping,\" he murmured into my wet center. He didn't. He just kept licking and licking, spreading waves of warmth through my juicy folds, until my whole body contracted, sparked, and exploded in white light.\n\nAnd then he went on licking, his face buried between my legs, in his own world while my thighs opened and closed around his head. Juices trickled down my ass, soaking my sheets. My cries built to a shriek. A strong tongue found my clit again, pushing against the exposed tip hungrily, until I gasped, tensed, and shook in a longer, deeper orgasm.\n\nFinally, my hands tightened in his hair. I thrust with my hips, dragging his head up so our eyes met.\n\nWe panted together as he climbed over me. I pulled him down for a hard, eager kiss, sucking the tang of my juices off his lips and chin.\n\n\"Yes,\" he groaned. \"Sweet baby.\" His swift kisses overtook mine. His neck and back were soaked with sweat, his hair damp and curling under my hands, and I needed to feel it all. I ran eager palms over his broad shoulders, following the perfect vee down to his narrow waist.\n\nWill had lost weight since last October. His build was leaner. His cheekbones stood out sharper with hollows underneath. But the swells and planes of his body were still firm, arousing beyond belief as I rubbed my curves against him.\n\n\"Will, I need you.\"\n\n\"I know,\" he breathed in my ear. His hands were everywhere mine weren't, tangling my long hair, cupping my face, stroking my puckered nipples. \"I'm here.\" His satiny cock pressed against my soaked folds. \"So perfect, Andie.\"\n\nArching my back, I gasped. Hard flesh suddenly opened the creamy heat of my pussy. Will was warm and thick and sinking deeper on each thrust. Melting me from the inside. Filling me completely, as I gave myself to him completely for the first time.\n\nGreen eyes, narrowed with desire, didn't leave mine. I rocked my hips against firm muscle, laughing breathlessly. Will's gasps matched my own, laughing too in surprise, as he thrust into me again and again.\n\n\"More, more, I want all of you...\" I begged. Strong hands gripped my hips. Will was so deep now, plunging into my slick warmth, and I needed to take him all the way in. \"I'm yours...\"\n\nHis whole body jerked, heavy and hot and damp with sweat on top of mine. He buried his face in my neck. Through a haze of pleasure, I heard Will's long groans of release, felt them against my skin. His cock twitched inside me, spurting cum in an orgasm that didn't seem to end. I shuddered under his thrusts, clasping him as close as I could, twining my legs and arms around him.",
        "Finally, he collapsed on my chest, panting. I was panting too. When he lifted his hips, my pussy clutched his thick rod. My arms tightened around his back.\n\n\"Don't leave.\"\n\nHe let out a long breath. \"I won't ever.\"\n\nMy muscles softened. My legs unwound from his waist. Will eased his cock from my soaked embrace and rolled over, pulling me half on top of him. I pressed my cheek against his muscled chest, lulled by his heartbeat, and felt his lips in my hair.\n\n\"Will,\" I whispered to his chest. \"I love you.\" For a moment, he just breathed in and out. I wasn't sure he'd heard. When I raised my head, clear green eyes met mine.\n\n\"You mean that, don't you.\" He looked stunned. I was, too. I hadn't expected to say that. Probably the first time anyone had ever loved Will for himself, or had any idea what that self was. I nodded slowly.\n\n\"I love you too, Andie,\" he whispered back. The shocked expression was still on his face. He shifted to kiss me. I rested my head on his chest again.\n\n\"What about us?\"\n\nHe stroked my hair back from my forehead, running his fingers through the thick waves, soothing me. \"We'll just have to find out.\"\n\nI curled up in his arms, warm and relaxed, while cars honked outside and streetlights flickered. The future was still a question mark. It always would be. But I knew what I wanted now, completely. "
    ],
    "authorname": "SilverMuse",
    "tags": [
        "cousin",
        "cousins",
        "incest",
        "dominance",
        "domination",
        "oral",
        "cunnilingus",
        "drama",
        "love",
        "redhead"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/wanting-ch-02"
}