{
    "title": "Trading Up",
    "pages": [
        "Chapter 1 - Mid-November\n\nThe first that Doctor Ian Cameron, MD, knew of the assault on his person was when the twelve-year-old girl, who had been comfortably sleeping on his shoulder, was wrenched from under his protective arm. As he blinked his eyes open from his exhausted sleep, they were suddenly filled with a stinging irritant, in the form of pepper spray. Cameron cried out and brought his hands up to his face. Almost immediately he was struck on the side of the head by a blow powerful enough to knock him off the sofa onto the sitting room floor. He later learned that he was cruelly struck by his own heavy medical bag, which had been left next to the sofa. \n\nAs he lost consciousness, Cameron was aware of a woman's voice cursing him in what seemed to him to be a fiery Mediterranean tongue. He was simultaneously conscious that his torso was at the complete mercy of and being subjected to a number of sharp kicks calculatedly aimed at his manhood. \n\nFor some incongruous reason, once his body had reached that numb, painless stage, for just a moment before his consciousness turned inky black, the incongruous thought occurred to Cameron that the woman's voice was ... well, actually, quite sexy.\n\nChapter 2 - Earlier that night\n\nDoctor Cameron was a locum medical practitioner. He covered doctors' periods of sick leave, vacations, or was available for out-of-surgery-hours cover, including weekends. He was prepared to relocate on a temporary basis anywhere he was required. In the majority of appointments, the demand for his services were in inner cities, with the occasional rural secondment thrown in for good measure by way of a rare treat. The location mattered little to Cameron, as he no longer had any permanent residence that he was able to call home. \n\nIn his late-thirties, he had been practising medicine for fourteen years, mostly in hospitals as he found the purchase of a private practice share beyond his resources. Five years earlier, however, his happy marriage had suddenly evaporated when his beautiful Personal Assistant wife Brenda divorced him to marry her older but rather more financially successful entrepreneur boss. She told Cameron that she believed he would never amount to anything other than a hospital doctor, so she was, in her words, \"trading-up\". \n\nBrenda's employer-cum-lover could afford the best lawyers money could buy and Cameron was screwed out of everything, including visitation rights to his then twelve-year-old daughter, Isla, and separation meant immediate exclusion by court order from the marital home and within hailing distance of his former nearest and dearest. \n\nMrs Brenda Cameron's grounds to divorce him, cited mental and physical cruelty, and came completely out of the blue to Cameron on the day of the divorce court hearing. Although evidence of his violent behaviour was completely circumstantial, with no proof of medical treatments or police interventions, his wife's courtroom lies under oath on the subject were damningly convincing enough for the judge to penalise Cameron heavily. \n\nFollowing the separation, Cameron's position in the local hospital became untenable after the legally enshrined reasons for the divorce were made public. Cameron was quietly asked to leave. Eventually, he signed up with a locum agency providing support for doctors' practices.\n\nThis was his third enjoyable stint in this particular tiny rural practice, which covered a huge underpopulated area of countryside, consisting mostly of agricultural farms and hamlets. He had spent a week here the previous spring, followed by a month in the summer, and was now in the middle weekend of a fortnight in November. There was a tentative promise of a further week's work coming up in February. Weekend cover meant being on call from Friday afternoon through to Monday morning, as well as the weekday out-of-hours sessions. The hours were long, and the cases ranging from the mundane to the most challenging. This weekend had been a particularly busy one for Cameron; his last call, prior to his assault, was to one of a tiny pair of isolated cottages. Here he had to certify the sudden unexpected death of an old woman.\n\nThe paramedics and police had arrived on scene a couple of hours before the good doctor was able to attend. Cameron had to complete a house call some distance away, treating a sick child. \n\nThe deceased, a woman in her eighties, had enjoyed recent good health and, after examining her, Cameron agreed with the paramedic, who was first on scene, that it looked like she had suffered from a cardiac arrest. There appeared nothing suspicious about the occurrence but by law the Coroner's opinion needed to be sought. The old lady had died long before the ambulance was summoned, although the crew had spent some time fruitlessly trying to revive the poor soul. \n\nThe police had already departed on another call prior to Cameron's arrival and the ambulance was also informed that they were required elsewhere. Both emergency crews knew Cameron from his previous experience in the tight-knit community and was highly regarded by them.\n\nThe Coroner had been notified by the police by voice-mail but word was that the Coroner was attending the County Ball, the biggest shin-dig on the local social calendar, so there was no telling when he'd arrive to deal with the deceased. Cameron would have to wait for him before the duty undertaker could be summonsed to remove the body. \n\nThe initial 999 call came from 12-year-old Sofia, who, as the only other person present in the pair of cottages, was extremely upset. She had woken from a nightmare about eleven o'clock, apparently, and crept into her Nanny's bed, only to find her cold and wouldn't wake up.\n\nCameron was informed that the child had been left with her Nanny for the night because her mother was also at the Ball and not due to collect her until around noon on Sunday. The next door neighbours were also guests at the same social event. \n\nThe paramedic quietly informed Cameron that Sofia's father had died in a motor vehicle accident earlier in the year and the girl was in shock at this further family bereavement. The police had tried to call the mother, her number supplied by the girl, but they could only leave messages. The local Children's Services had also been contacted but, guess what?, the duty officer was at the Ball, too! \n\nThe police left a verbal message with the paramedics to pass onto Cameron when he arrived, saying that when they had a chance they would drop by the Ball, which, by tradition, tended to go on until three or four in the morning at least. They warned Cameron that the girl's mother was known to be involved in the clean-up afterwards, so it might be some time before he could be relieved of his responsibility for the young girl.\n\nThe girl Sofia was a dark-haired beauty, tall and slender for her age, with soft brown eyes, currently deeply reddened with sorrow. She was not prepared to sleep upstairs alone and eagerly clung on to Doctor Cameron, who was left alone with her as the paramedics departed on another call for their services. \n\nCameron sat on the sofa with the girl, having wrapped a blanket around both of them and he relaxed, having not slept properly since Friday lunchtime, some 37 hours earlier. It was soon warm in the house, as the nearly dead fire had been refuelled with logs and the embers poked back into life. When on hospital duty, Cameron was comfortable in the usual thin green tunics and shapeless trousers. While on locum calls, though, Cameron felt a suit, shirt and sombre tie was more appropriate. Over this he wore a heavy hi-visibility coat, identifying his medical examiner status, useful for traffic accidents and external emergencies. Now thoroughly warmed through, though, he removed the heavy coat and left it draped over the hall banister rail. He loosened his tie before rejoining the distressed girl on the comfortable sofa.\n\n\"I'll wait here with you, Sofia. However,\" he warned her. \"I'm still on emergency call-out all through the weekend, so I may have to wrap you in this blanket and take you with me in the car, if I get the call before your mother or the Coroner gets here. Are you all right with that arrangement?\" \n\n\"It's better than being left here on my own, Doc. I'm happy to wait with you until Mummy comes for me.\"\n\nCameron nodded, \"If I do take you to an emergency call, you'll have to stay in the locked car, but I can always leave the car heater on for you.\"\n\n\"OK, so, if I keep my bedroom slippers on, Doc, will you carry me to the car?\" \n\nDid the doctor detect a hint of coyness in her statement and the quizzical look the girl gave him? Whether he did or not, Cameron pressed on, saying, \"Fine, in the meantime, I can be reached on the radio or mobile just as well here as back in the hotel ... only I was hoping to speak to my daughter at school in Yorkshire on Skype this evening. She was going to wait up for me to call after going out with her friends tonight. I don't suppose your Nanny has broadband, has she?\"\n\n\"No, Doc, but the Thompsons next door have wifi and ... I know the password,\" Sofia smiled for the first time tonight, \"Do you want to use my laptop?\"\n\n\"If you don't mind, mine's still at the hotel.\"\n\n\"The internet's set up on it ready to use. I'll fetch it from my bedroom.\"\n\nSofia left the open computer with Cameron, while she made cocoa for them both. He was cheerfully chattering to his daughter Isla by the time she returned with the steaming mugs. Once introduced, the girls Sofia and Isla, aged 12 and 17 respectively, were happily chattering away. \n\nCameron, his empty stomach filled with hot chocolate and surrounded by the contented buzzing of female voices, found himself peacefully slipping away into the land of nod. Isla noticed in the background of the screen that his eyes were closed and Sofia commented on his gentle snoring. The girls giggled.\n\n\"Your father's lovely,\" Sofia whispered, \"I feel so safe with him.\"\n\n\"Yeah, he's always been a sweetheart,\" Isla smiled, \"It's my Mum that's the total bitch. She doesn't even know we've kept in contact. I'm glad I'm in boarding school, away from Mum and her creepy new husband, who's asked me to call him 'Dad'. Euuhh! Like, whatever!\"\n\n\"It's ... my Daddy that was the creep,\" Sofia confessed quietly.\n\n\"Sorry, Sofe, Dad told me about losing your Daddy ... and your Nanny, of course.\"\n\n\"That's all right, Isla. Actually, she's no relation, she was Granddad and Daddy's old Nanny, who looked after them when they were little, although we all knew and loved the old lady,\" Sofia said evenly, \"As for Daddy, well, I'd known about some of his affairs for a long time. Mummy was too trusting to have a clue about his habits until just before he died. I'd check his emails on his computer when he thought I was doing my homework. I discovered that Daddy'd caught chlamydia from a business promotion party involving paid-for gang-bangers.\"\n\n\"No!\"\n\n\"Yes. So, I set up an email account in a made-up name and sent Mummy an anonymous tip-off, so she could get herself medically checked out. I included names, places and times of Daddy's parties, or at least the ones I knew about from his accounts. Mummy and Daddy had a big row at home but quietly separated for a week or so before Daddy died in a motorway accident.\" Sofia was almost in tears. \"I suppose Daddy's comfortable world was collapsing around his ears. I still don't know if it was a genuine accident or if he deliberately drove full pelt into that tree.\"\n\n\"Oh, you poor sweetheart, and now your family's Nanny too.\"\n\n\"Yes, it is almost too much to bear. I'm afraid, Mummy is so unhappy, and distrustful of all men in general that she wouldn't allow me to sleep where the Ball was being held. That's why I ended up here with our old Nanny.\"\n\nIsla could see the young girl was tired and distraught so, after promising to keep in touch and exchanging their mobile and other contact details, they signed off.\n\nSofia lifted Cameron's limp arm and made herself comfortable underneath, pulling the blanket up to their chins. Sofia grinned contentedly as the handsome but exhausted doctor slept on without the slightest pause in his relaxed breathing. She closed her eyes and dozed peacefully, feeling warm and protected, too.\n\nChapter 3 - Saturday, 13 February, 15 months later\n\nThe grand house, almost a palace in its proportions, was impressive, set in its perfectly-manicured grounds. Brenda Stevens, the former Mrs Ian Cameron, squeezed her husband Neville's arm as they queued with the other guests for the Valentine Ball. She was aware that this was a last-ditch attempt to maintain their fortunes. \"Guests\", was hardly the term for the attendees, though, this Ball was a charity event to raise funds for a number of worthy causes and the admission tickets alone cost an arm and a leg.\n\n\"Why are we here, Nev dear?\" she enquired of her husband, a rather short, fat, bald man in his fifties, who had a puffy, drink-reddened, face.\n\n\"I can't get hold of the Duchess in normal office hours, so this is our only chance,\" Neville Stevens hissed close to his wife's ear, not wishing to be overheard. \"Not long after the Duke died, some eighteen months ago, we've been cut off completely and this trade was once the cornerstone of our business. I remember this place, it has hardly changed. Cor, we had some right old do's here before the Duke got hitched and settled down. Then we could only use the place when the Duchess was off with the kids to Salonica or Athens, otherwise we had to find new venues for our ... er ... fun. Long before your time, of course, my dear.\"\n\nBrenda nodded, she had been informed before of the importance of this Ball. She was acutely aware that their tightened budget had forced her to buy a cheap ill-fitting ball gown, one she felt sure looked even cheaper than it cost. Her fitting wasn't helped by the fact she had suffered from stress-related binge overeating during the past few months. She had put on a few pounds and she was conscious that it showed. All the lady guests, Mrs Stevens noted looking around, looked glorious in their glamorous figure-hugging designer evening gowns.\n\nThey collected glasses of Champagne from a couple of smartly-liveried footmen, before moving into the buffet area between the grand staircase and the ballroom. Strains of a string quartet filtered through the open doors.\n\nBrenda's attention was taken by a red-haired girl, one of a number of maids, dressed alike in white blouse, black skirt and stockings, though comfortable heels, who looked uncannily like her daughter. She peered closer as the girl placed one of the three platters she carried on the white cloth-covered trestle tables and turned towards her.\n\n\"Isla, honey?\" Brenda asked.\n\n\"Mother, what are you doing here?\" the beautiful girl replied in surprise.\n\n\"I might ask you the same. You're supposed to be studying first-year medicine in Edinburgh, aren't you? Not waiting on tables hundreds of miles away,\" her mother hissed in a loud whisper, just above the noise of the dance band, \"If you needed money you could've asked Nev.\"\n\n\"Yeah, Babes,\" Stevens said, sidling up to his step-daughter, putting his hand around her waist and leaning in for a wet kiss. Isla wriggled away from him and positioned herself the other side of her mother, who kissed Isla on her cheek.\n\n\"It's OK, Mother,\" Isla replied, \"Dad subs my petrol whenever I come down here.\"\n\n\"You can afford to run a car?\" her mother asked, incredulously, her own car having been repossessed recently.\n\n\"Yes, and I don't need any extra money, Mother. I'm volunteering for free tonight, anyway, all the helpers are, including the band. It's a Charity Ball, you know. So, why are you here?\"\n\n\"Well, I'm supporting my husband, we're hoping to catch The Duchess.\"\n\nIsla Cameron interrupted, a furrow in her brow, \"What do you want to speak to Maria about?\"\n\n\"Maria?\" enquired her mother, \"Who's Maria?\"\n\n\"Maria, the Duchess of Bartonshire, you said you want to catch her.\"\n\nJust then another pretty young maid, dressed like the others, in white blouse and black knee-length skirt, with long lustrous black hair down to her waist, arrived with a basket of bread rolls.\n\n\"What's that about Mummy, 'Sis'?\" the attractive dark-haired newcomer asked with a smile aimed at Isla, \"And who're your friends?\"\n\n\"Hi, Sofe,\" smiled Isla, kissing Sofia on the cheek, \"This is my Mother, Brenda, and her ... husband, Neville Stevens. Mother, this is Sofia, she lives here.\"\n\n\"Oh, I should have known you were the Lady Sofia,\" exclaimed Mrs Stevens, unconsciously genuflecting slightly, wondering how this young aristocratic beauty could possibly be acquainted with her daughter Isla. The girl seemed too young to be studying medicine, \"My husband was a friend and business associate of your dear, late father.\"\n\n\"Yeah,\" chipped in the odious Stevens, who had been looking the child up and down since she appeared at the serving table, \"Me and your old man were like this,\" he crossed his index and middle fingers of one hand while reaching out to grab the girl with his other hand. Sofia wriggled away and moved to safety behind Isla. \n\n\"Don't remember any Neville, or Stevens, I'm afraid, Mrs Stevens,\" Sofia responded, \"My brother, the new Duke, won't be picking up the reins of the farm business from Mummy until he's finished his degree at Cambridge, in a couple of years' time. What line of business are you in, anyway, Mr Stevens?\"\n\n\"Oh, lots of different fingers in various pies, my dear,\" Stevens leered imperiously, puffing out his chest, \"But in your father's day I used to buy most of the meat from your farm abattoir and ship it to the top London restaurants.\"\n\n\"Ah,\" Sofia said, \"I think we organise deliveries directly to the door ourselves now, cutting out the middle man. Anyway, 'Sis', you stay here and catch up with your Mother and I'll call you if we get busy.\" Sofia marched back towards the kitchens for more food. Stevens followed her all the way with watery eyes, unconsciously licking his lips.\n\n\"Such a lovely girl,\" Mrs Stevens said, unaware of her husband's diverted attention, \"Have you known Lady Sofia for long, Isla?\"\n\n\"Over a year, I think,\" Isla said as she thought back, \"Of course we call each other every day, and I pop down here regularly, so it seems like I've known her forever. You could say we're best friends.\"\n\n\"You're not ... er ... you know ... same-er-same-sex er lovers are you?\" her mother whispered worriedly, \"She looks far too young.\"\n\n\"Get real, Mother! Sofe's only 14, she's still at school,\" Isla snorted, then pointing to the two footmen greeting arrivals with drinks at the entrance, \"My boyfriend's Harry, the one on the left.\"\n\n\"A footman?!\" exploded her mother after looking at Isla's target, who became aware he had become the centre of their attention, and waved back with a smile, \"I mean, he's very cute and all, Isla dear, but you're going to be a medical doctor soon and he'll be out of your class.\"\n\n\"Oh, nobody worries about that kind of thing nowadays, Mother, I'm only using him for a bit of fun. And he's not usually a footman at all but he's another volunteer, we all are.\"\n\n\"What does he do, then, dear?\"\n\n\"Some kind of banker, I think.\"\n\n\"A bank clerk,\" Brenda sneered, \"Locally?\"\n\n\"No, in the City. Some junior management position in the family merchant bank. I think he's some kind of viscount or baron or probably both; he has about twelve titles in front of his name. I just call him Harry.\"\n\n\"Are you staying here ... with Harry?\" her mother asked and, as an afterthought as if Sofia's earlier conversation had only just sunk in, \"And why does Lady Sofia call you 'Sis'?\"\n\n\"I'm not staying here with Harry, he's got his own apartment at his father's place. I'm staying with Dad, of course, Mother.\"\n\n\"Your Dad lives around here?\" Brenda was thinking of all the lovely houses in the village, with this palace as a perfect backdrop, of course.",
        "\"Not around here, Mother, but here in Barton Grange, he has a suite of rooms in the East Wing, actually.\"\n\n\"A suite?\"\n\n\"For his surgery practice, you know, his waiting and examination rooms plus an apartment of two bedrooms, kitchen and drawing room, it's cosy,\" Isla said, with a toss of her long red tresses, \"As for Sofia regarding me as a big sister, it was once a sort of joke between us that she's called me 'Sis' since virtually Day One.\"\n\n\"What's 'Day One', honey?\" Brenda asked, \"And why would calling you 'Sis' be a joke?\"\n\n\"Well, that brings us to the Valentine Ball. You know what surprises women can spring on Valentine's Day in a Leap Year, don't you?\"\n\n\"You - you're going to propose to Harry, or even Lady Sofia's brother, the young Duke?\" her Mother stuttered, her eyes wide open at the thought of her daughter becoming titled.\n\n\"Get real, Mother, Harry's fun to be around but he's a bit immature, and Jeremy's a sweet guy who will make a fine Duke once he settles into the job, but he's just not my type, he's more like a ... brother, really,\" Isla said, in a slightly exasperated voice, \"No, Sofia's Mummy Maria is going to be proposing to Dad on the stroke of midnight, which will be the start of Valentine's Day. So eventually, I will actually become Sofe and Jeremy's sister!\"\n\n\"Your Dad and ... and the Duchess? But, but - how the fff-?\"\n\nJust then Sofia returned to the tables ladened with a large platter of smoked salmon. She took over the commentary from Isla with a wide grin.\n\n\"Oh, it wasn't the most romantic of starts between the loving couple, admittedly, more carnage than carnal, you could say,\" she giggled. \"All due to a misunderstanding on Mummy's part, and easily cleared up once our lovely physician healed himself,\" Sofia and Isla laughed, \"But Mummy kept apologising for what she did until Dad eventually shut her up with a kiss which absolutely rocked her world.\"\n\n\"Kiss ... Dad?\" Brenda asked, bewildered by events.\n\n\"Sofe's been calling Dad 'Dad', almost since Day One, haven't you, Sofe?\" Isla chipped in. \"And it looks like I'll be calling Sofe's Mummy 'Mum' very soon as well. I might even start doing that from tonight.\"\n\n\"But I'm your 'Mum', Isla dear,\" Brenda whined, her bottom lip wobbling with emotion.\n\n\"No, Mrs Brenda Stevens, you're my 'Mother',\" Isla said firmly, \"You stopped being my 'Mum' when you passed over my lovely Dad for that fat pimp sleazeball boyfriend you've since married.\"\n\n\"Isla!\"\n\n\"Face it, Mother,\" Isla said, \"Your trip up here to get back in either Jeremy or Maria's good books was a complete waste of time. The reason why the Bartonshire Estate have completely dropped all trading with your husband's dodgy meat company is because they habitually supplied whore parties for their major suppliers, including the late Duke, who caught a sexually transmitted disease as a consequence. That singular misfortune put the kibosh on his marriage and any chance of the Estate renewing any business relationship with Stevens here.\"\n\n\"No!\" Brenda screamed and turned to her husband, \"Neville?\"\n\nNeville Stevens was already beating a hasty retreat towards the entrance, leaving his wife behind in tears. Even his bald head shone red with embarrassment.\n\n\"Never mind, Mother,\" Isla said, as she put a comforting arm around her mother's shuddering shoulders, \"You're well rid of that rubbish.\"\n\n\"But how will I get home, will I even have a home to go to?\"\n\n\"We can put you up here for a day or two, Mrs Stevens,\" Sofia offered, \"And I'm sure Dad'll sort out something for you long term. He's like that, a real hero.\"\n\n\"Will your Mummy be OK with Ian helping me out?\"\n\nSofia and Isla looked at each other and grinned. \n\nSofia started, \"I think that she will be otherwise ...\"\n\n\"... Engaged!\" finished Isla. \n\nThey both laughed. \n\nBrenda looked at both of them in turn, realising that far from trading up by leaving Ian and taking up with the odious Stevens, she had traded down.\n\n\"Ah, here comes the happy couple now,\" Sofia said, smiling, looking up to the top of the grand staircase.\n\nBrenda looked up, as did everyone else in the ballroom. The arm-in-arm couple, the Ball's hosts, were walking slowly down the stairs, clinging tightly, one to the other. The Duchess was absolutely stunning, glowing even, thought Brenda. She was tall and slim, elegant in her long silk dress in a deep emerald, bringing out the best in her olive skin and black hair, piled up thick and high on her head. The jewels around her swan neck and one slender wrist sparkled in the light from the crystal chandelier overhead. The lamps couldn't outdo the sparkle in her eyes though, or outshine her spectacularly joyful smile. \n\nBrenda turned her attention to her ex-husband, who was proudly holding the new love in his life by her arm. Ian looked handsome in his smart tuxedo, slim and relaxed, comfortable in his relationship with such a beautiful woman. The gracious lady on his arm was someone who loved him so completely that she was prepared to give up the grandeur of her title by proposing marriage to the common man she loved completely.\n\nBrenda couldn't avoid the comparison between the handsome man so clearly adored by her daughter, Isla's best friend, and the vision of loveliness by his side, that she had so recently given up for the cowardly fat sleaze ball, who ran away at the discovery of practices that Brenda had suspected but ignored until now. Brenda felt emotion rising at the image of Ian and Maria before her, looking every inch the perfect couple, both wreathed in smiles. The whole assembly, who funnelled into the entrance hall from the ballroom, started clapping spontaneously as they progressed down the staircase, Brenda included.\n\n\"They look such a beautiful couple,\" Brenda sniffed, blinking away the tears, and whispered aside to her daughter, \"So the Duchess is going to propose to Ian this evening?\"\n\n\"Yes, immediately after midnight, just as it becomes Valentine's Day,\" Isla smiled.\n\n\"And it's going to be a surprise for your father?\"\n\n\"Well, Mummy thinks it's going to be a surprise,\" Sofia added, \"But 'Dad' knows what's going to happen.\"\n\n\"Suspects or knows?\" Brenda asked.\n\n\"Well, Mrs Stevens, I can tell you that Mummy and 'Dad' have discussed marriage before but 'Dad' was nobly insistent that he wouldn't want to rob Mummy of her title until Jeremy properly took over as the head of the family. Mummy decided to outmanoeuvre him tonight,\" Sofia whispered, \"But then, a loving daughter couldn't possibly keep such an important secret from her adopted 'Dad', could she?\"\n\n\"So you're the loving daughter, eh?\" Brenda cocked an eyebrow at Sofia, who merely smiled and nodded. \"Ian looks too happy to be thinking about turning her down,\" Brenda suggested, \"And Maria looks, well, blissfully happy and beautiful.\"\n\n\"Maria will get down on one knee and ask for his hand,\" Isla said, \"And Dad will say 'Yes'. He already knows before Maria tells him the good news that they have to get married because he'll be a father again, about late August, early September.\"\n\n\"But what about her grand title?\" Brenda continued, \"I really should have been happy just being Mrs Cameron, but won't she miss being the Dowager Duchess of Bartonshire?\"\n\n\"Don't worry, Mother,\" Isla assured her, \"Mum will have to give up the title when she marries Dad, but she won't be trading down at all as she can always fall back on the original title that she was born with, can't she, Sofe?\"\n\n\"She certainly can and I'm sure she will, Sis,\" laughed Sofia.\n\n\"And that title is?\" enquired Brenda.\n\n\"Princess Maria, of course,\" Sofia said proudly, \"Her Royal Highness Princess Maria of Greece.\"\n\nThe End."
    ],
    "authorname": "Spencerfiction",
    "tags": [
        "divorced doctor",
        "on call",
        "county ball",
        "the dowager",
        "palace",
        "nanny"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/trading-up-1"
}