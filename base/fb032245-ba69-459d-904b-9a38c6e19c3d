{
    "title": "Secret Smiles and Three Little Words Pt. 26",
    "pages": [
        "Chapter 28 \n\nAlex looked to him with a pleading in her eyes. It was begging him for two things, one, to not be pissed as hell, and two, to keep it. \n\n\"Here let me help you with that Nora,\" Trevor volunteered. He jumped up and helped Nora carry it to Gavin. \n\n\"She ain't kidding,\" Trevor laughed. \"This is heavy.\" \n\nSetting the box down in front of Gavin he looked to Alex and read her perfectly. He shook his head and gave her a wink to agree to both demands in her eyes. She let out a breath of relief. She knew he would love it, it was going to be the price tag that was going to infuriate him. Especially with the fact she could have used the four thousand dollars to purchase a car that wouldn't have left her stranded on the side of the road. \n\nShe then thought back, perhaps if she would have just let him loan her the money for a car this wouldn't be such a torturous moment now. Perhaps if she would have just accepted his help then, she wouldn't have been walking on egg shells for the past month. She wouldn't have had the blowup that nearly ended their relationship. She then smiled and remembered what her father always told her, using his favorite Nietzsche saying, 'That which does not kill us, makes us stronger'. \n\nGavin shook his head and looked at little Nora who was watching him intently. \n\n\"I might need a little help here, how about it?\" he smiled at her. \n\nShe nodded enthusiastically and began to rip the paper with him. Alex covered her mouth at the way they worked together, Gavin in typical Gavin fashion, precise and careful. Nora more like her, ripping in utter abandon. More like the Tasmanian devil from her cartoons, with paper flying in every direction. \n\nAs soon as it was uncovered Gavin immediately tightened his jaw. Alex didn't miss it and it forced her to hold her breath. Please, please, please! She begged inwardly. \n\n\"Who told you?\" Gavin said as carefully as he could. \"Madelyn?\" \n\n\"Absolutely not!\" Alex immediately defended. \"It was pure luck!\" \n\n\"This is from Raul's shop, is it not?\" Gavin asked turning his head to look at her. She was in the submissive pose, he didn't know if that was intentional or not. He shook his head at her and smiled as he looked to the box. Running his fingers over the dark deep wood. \n\nAlex watched his hand and it reminded her of the way he touched her, exploring and admiring all at once. It told her he was infinitely pleased. \n\n\"It is,\" Alex smiled, only because he was. \"But Lena and I just stumbled on it by accident, we were sent there by a lady at the watch counter at the mall. Once we got to Raul's shop, he guided us to this!\" \n\n\"Lena was with you? She let you spend this exorbitant amount of money?\" Gavin teased. He was trying to come across as very happy but inside he was livid she spent money that was better spent elsewhere. \n\n\"Well, in her defense, she was against it. I mean we both knew it was perfect, but she knew you would be against the price tag and warned me,\" Alex said as he began to open the doors and touch the fine amenities. \n\n\"Raul told me this wouldn't be in until after the first of the year!\" Gavin remembered softly still trying to figure out how Alex bought him this perfect gift! Somebody had to tell her, if they did, she would never tell him. Then again, her story wouldn't be beyond the realm of possibilities. \n\n\"Serendipitous?\" Alex tried with an innocent shrug of her shoulders. \"He said it came in early, even he was surprised. I got there a few hours before he was going to call you.\" \n\n\"It's beautiful!\" Nora gasped. \"Don't you like it?\" She asked Gavin innocently. \"Didn't Aunt Alex really do good?\" \n\n\"She did fantastic!\" Gavin agreed with a hug. \"It's just I don't like people spending money on me.\" Gavin explained. \n\n\"You bought her a diamond watch!\" Nora argued for her Aunt, pointing out he bought something as expensive. \n\nThis made Gavin laugh. Hard. He looked to Alex. \n\n\"You have had way too much influence on this one!\" he chuckled with a nod at the small curly headed blonde. \n\n\"It comes naturally,\" Alex shrugged winking at Nora for her defense. \"But you do like it?\" \n\n\"Like you, I adore it,\" he smiled kissing her gently. \n\nLeaning into her ear, \"You spent way too much!\" \n\n\"Not nearly enough,\" she whispered back in his as they hugged one another. \n\n\"I love you,\" he said with a tender kiss on her cheek. She couldn't reply because her voice got stuck in her gasp, as he said it in full view of her family. \n\n*** \n\nAlex was outside watching Nora play with her toys, she had switched her Disney dress three times already. Now she was Elsa from 'Frozen'. Trevor was in the street with his hockey jersey playing some street hockey with some of the guys from the neighborhood. \n\nLivy came out with hot coffee for Alex and stood next to her as they watched the gentle fall of snow flurries in the sky, swirling in the occasional wind. The sky broken with a soft gray overcast, mixed with shards of sunlight that broke through.  \n\n\"You went crazy with the gifts,\" Livy pointed out as she sipped her coffee. \n\n\"I did,\" Alex admitted. \"But I had the money this year, so I splurged.\" \n\n\"Gavin seems nice,\" Livy smiled from behind her coffee cup. \n\n\"He's fantastic,\" Alex corrected. \n\n\"Mom has doubts on him,\" Livy warned. \"She says any man that doesn't go to church can't be very good.\" \n\n\"Mom has doubts on me, and I haven't set foot in a church other than a wedding in years!\" Alex frowned. \"So I guess that means I'm not good either!\" \n\nThe warning wasn't a surprise. It still hurt, she wanted them to realize just how great Gavin was. How lucky she was to have him. \n\n\"Well I don't know if she put it that way!\" Livy teased causing Alex to laugh. \n\n\"She won't like anyone she doesn't pick out,\" Alex said firmly. Livy nodded as she knew that was the truth. Alex was the first sister that did not marry a man that their mother set up for them. \n\nFor her mother it wasn't about love, it was about a good match, for appearances. Love was something in make believe land. You loved only God, everybody else you got along with and with prayer you were happy with. Livy used to believe that. She used to think Alex was wrong for wanting the fairy tale. \n\n\"Don't let her pick out anyone for you,\" Livy frowned. \"You'll get a Don. Which will make you miserable and loveless. I don't know how I would have made it this far if it wasn't for Nora.\" \n\n\"What do you mean?\" Alex asked, but Livy said nothing, only watching her daughter play with her imaginary friends as they paraded around the snowman in the yard. Something she remembered Alex doing in their childhood. \n\n\"What are you going to do?\" Alex asked her putting her arm around her comfortingly. \n\n\"I don't really know,\" Livy admitted softly as a tear fell. \"I hate myself right now.\" \n\n\"She is going to work it out,\" said Krista, her oldest sister as she came out, interrupting the conversation. \"God forbids divorce.\" \n\n\"He doesn't forbid it,\" Alex disagreed. \"He just wants marriage to work. It says in the bible she can get a divorce if he fails to honor his wife.\" \n\n\"It would look bad,\" Brandy, the second oldest pointed out as she came out behind Krista. \n\n\"Who gives a damn on how it looks?\" Alex growled. \"Doesn't Livy have a right to be happy? Doesn't she deserve to find someone who appreciates her? Who will love her?\" \n\n\"Doesn't her oath to God mean more than one mistake, or one's pride?\" Brandy countered. \n\n\"This isn't one mistake,\" Livy defended. \"He has been doing this for two years! And you two have a lot of nerve talking about my pride! All you care about is how this might embarrass you!\" \n\n\"This isn't just about you, this is about all of us! So you go to church and get counseling,\" Krista instructed forcefully, sounding more like Marylyn every day in Alex's mind. \"Prayer and with the help of our pastor, this can be resolved.\" \n\n\"What about the trust?\" Alex asked. \"Once that is violated it can't be had back fully!\" \n\n\"God will fix it if you pray for help,\" Krista said her voice straining with her anger that she was being challenged. \"You just have to have faith that the Lord will give to you in your time of need!\" \n\n\"How did that work out that last time?\" Livy suddenly raged. \"I did that! All of that! Then the bastard goes out and knocks up someone! Even though I've been begging for another child, a child he said we couldn't afford! Why shouldn't I just drop him on his ass? Isn't he disobeying God by not giving me a child? Isn't he disobeying God by not honoring me? Obeying the oath he took in front of God and our family to forsake all others? What about my shame? How does this look on me? Alex doesn't it make me look weak if I take him back?\" \n\n\"No,\" Alex said with a shake of her head. Surprised her sister erupted. Livy was normally so calm, so demure. \"You are not weak, but taking him back is not a sign of strength either. In the end, you have to do what is not best for just you, but what is also best for Nora.\" \n\n\"Have you thought about how that will look on the family?\" Brandy asked her. \"It's bad enough we have one sister bringing shame on us!\" \n\n\"I'm bringing shame on you?\" Alex gasped. She anticipated an attack on her as she was on Livy's side, although an attack on her would have come whether she was defending Livy or not, but still hearing it out loud was always a blow. \n\n\"First you try your hand at being a lesbian,\" Krista pointed out, alluding to the last Christmas she spent here with Lena. \"Now you are living with a man, obviously sexually involved, without being married! The entire church knows! They feel sorry for mother that she has to endure the humiliation and she is doing it like a good Christian should.\" \n\nAlex let the smile cross her face, it was all she could do. She was shocked beyond words. Lesbian? The church feels for them? \n\n\"What kind of fucking church is so judging?\" Alex finally managed to say. \"What kind of church dictates based on appearance? Sounds more like a cult to me, the church before family? I don't even live here. Mother is doing what she does best! Trying to get attention or sympathy from any who will listen, the only way she knows how. Telling stories on her bad daughter Alex. It gets attention away from any other problem she's having!\" \n\n\"The church is our family,\" Krista frowned. \n\n\"Bullshit!\" Alex growled. \"Sounds like you are one step from Westboro type shit! What's next picketing the funerals of fallen heroes?\" \n\n\"Typical,\" Brandy frowned. \"We are trying to have an adult conversation and you are acting like a teenager with foul language and a temper tantrum in an attempt to provoke us into a similar response!\" \n\n\"Do you even read the Bible?\" Alex asked them in shock and dismay. \"Perhaps you should pay more attention to what you read. For the ignorant like you, the important stuff is highlighted in red!\" \n\n\"The Bible says to honor thy mother and father,\" Krista pointed out. \"She should consider how this will look upon Mom and Dad in the church.\" Alex closed the gap to her older sister and stood nose to nose with her. Which wasn't the first time. \n\n\"But the Lord said unto Samuel, 'Do not look on his appearance or on the height of his stature, because I have rejected him. For the Lord sees not as man sees: man looks on the outward appearance, but the Lord looks on the heart!\" Alex snapped angrily. \n\n\"Make no mistake, God will judge those who do things for the sake of 'appearances' harshly, because they worried about what man thought, instead of what God demanded!\" Alex hissed, trying her best not to punch her sister, which wouldn't have been the first time for that either. \n\nKrista took an uneasy step back, she and been in more than one fist fight with Alex, she had lost every time. It appeared that while they were older, Alex was still a fighter. \n\nKrista and Brandy looked to one another, neither had a valid retort and it looked like if they pushed Alex too far this would blow up into a physical altercation, Livy had a hand on Alex's arm, but it didn't appear she would help them if Alex went off, so they shrugged and went inside. Alex watched them go and then let her body shake with the anger she felt. Livy's hand on her shoulder calmed her. \n\n\"Thank you,\" she whispered as she put her arms around Alex. \"I now know what hell you went through to get where you are...standing gloriously on your own!\" \n\n\"You can do the same,\" Alex said with a strong smile over her shoulder. \n\n\"I do not have the strength of you and Dad,\" Livy disagreed. \n\n\"Yes you do,\" Alex assured her. \n\n\"Are you and Gavin happy?\" Livy asked her with a kiss on Alex's cheek. \n\n\"Very,\" she smiled accepting the loving gesture with closed eyes. \n\n\"Then God has already blessed you,\" Livy told her. \"God only bestows love on the loved!\" \n\n\"What I'm about to tell you can never be repeated,\" Livy said softly. \"There was a time when we would sit around and ridicule you. For your desire to be an artist. For your desire to go to Chicago. I know now that Lena was just a friend but mother twisted that into something that served her.\" \n\n\"I'm sorry little sister,\" Livy told her through her tears. \"I should have protected you, but I didn't. I should have trusted you, but I didn't. I should have listened to you and followed your lead and did what would have made me happy. But I didn't. None of us are happy in our marriages. I'm about to lose mine completely. Krista runs hers like Mother and Brandy treats her husband like shit. Only caring when he brings home his paycheck.\" Livy laughed without humor as she wiped the tears from her face. \n\n\"Did you know, when he got laid off from his job, she cut him off from sex until he found a new job?\" Livy asked Alex. \"Is that love? Is that what marriage should be?\" \n\n\"No,\" Alex shook her head. \"Love is putting someone else before yourself. Love is going against all common sense when your heart leads the way. For you religious nuts, common sense would have told God to save his Son. Love made him turn away. Love for us sinners.\" \n\nNora's scream caused both women to spin, Nora sat surrounded by bloody snow. Livy and Alex bolted towards the injured girl. \n\n\"Gavin!\" Alex screamed as she leapt from the porch. \n\nGavin burst through the door with the rest of the family right behind him. Al followed him down the steps of the porch and into the snow. Livy looked to Gavin as she held her crying daughter in her arms. Alex was holding the bleeding hand. \n\nGavin dropped to his knees before taking the Nora's injured hand in his. \n\n\"Oh my God Gavin!\" Alex gasped as she looked at the blood. Nora was screaming, Livy was crying buckets and trembling in fear at the injury to her daughter. There was just so much blood around them she knew it just had to be the worst of the worst. \n\n\"Alex,\" Gavin said calmly. \"I need you to get my bag from the car, it's in the trunk.\" Alex nodded and kissed her niece. His voice was a stark contrast to the noise around him. It was soft and firm. Controlled. Despite the chaos that swirled around him like the snow flurries. \n\n\"Olivia,\" Gavin continued calmly. \"Can you carry her or do you want me to?\" \n\n\"You,\" she said shaking, doubting she could move her legs let alone carry her injure daughter. \n\nGavin immediately scooped the screaming girl in his arms and carried her towards the house. \n\n\"What happened?\" Al asked coming to Gavin's side. \n\n\"Looks like a cut from some broken glass, must have been under the snow and she didn't see it.\" \n\n\"God dammit,\" Al growled. \"What do you need?\" \n\n\"Right now a flat surface, my bag, some bright light and a magnifying glass if you have one,\" Gavin said as he kissed Nora to comfort her. \n\nTaking her into the kitchen he set her near the sink. \n\n\"It's going to be ok, baby,\" Gavin cooed softly as Alex set the bag on the counter. Alex pulled Livy into her arms as she stood near her daughter. \n\nGavin opened his bag and pulled out gloves first. He then pulled the tweezers and his flashlight, he put the light in his mouth and held it. \n\n\"Here,\" Al said bringing his reading magnifier. \n\n\"Hold it just above the cut,\" Gavin ordered. His voice was firm and confident, which made Alex relax a great deal. Gavin was in complete control, not that she was surprised. Al did as instructed. \n\n\"Ok, Baby,\" Gavin smiled at her, handing the flashlight to Al, positioning it where he wanted it. \"I'm going to flush the cut a bit, not much, but some, I need to make sure there is no more glass, it might hurt just a little, but you are so brave and so strong it won't hurt too bad!\" Gavin said touching Nora's cheek as she looked at him. Her tear streaked face pleading for him to make the bitter, sharp, and shooting pain stop. \n\n\"It's ok, Nora,\" Livy gasped as her little girl looked to her. \"It's a good thing Alex fell in love with a doctor!\" Livy tried to sound confident, to sound strong. But she wasn't, she hoped she could fool her little girl. Nora smiled and nodded. \n\n\"Such a big girl,\" Alex chimed in. \"Gavin is the best, you are going to be just fine!\" \n\n\"Of course she is!\" Al said, the group bringing as much strength to the little girl as they could. \n\n\"You guys are crowding me!\" Nora complained wiping her face as she watched Gavin work. \n\n\"You are way too much like your aunt!\" Gavin smiled as he continued working without taking his eyes off the wound. The adults around the little girl laughed. \n\nGavin gently used a syringe to squirt saline solution across the cut, pushing the blood on top off to the side. \n\n\"She still has a piece of glass in there,\" Gavin said as he squinted using the magnifier and tweezers. \"Nora, I need you to be real still here. Show Aunt Alex how tough you are.\" \n\nNora winced but didn't move. \n\n\"Fantastic!\" Gavin raved with a smile. \"Such a brave girl, would make Princess Merida proud!\" Gavin said referencing the Disney princess from the movie 'Brave'. \n\nNora smiled at the compliment. \n\n\"Is there any more?\" Al asked as he watched Gavin's skillful hands gently pull the glass from the cut. \n\n\"I don't see anymore,\" Gavin exhaled softly. He irrigated the wound again and adjusted Al's hand to bring the magnifier he was holding closer to Nora's hand. \n\n\"How we doing Princess Merida?\" Gavin asked her. She looked to her dress. \n\n\"I have blood all over my new dress that Aunt Alex gave me!\" Nora pouted. \n\n\"Well,\" Livy let out a sigh of relief. \"We will wash it real quick before the blood sets in and get it out!\" \n\n\"Will it come out?\" Nora asked her mother. \n\n\"If not, Alex and I will buy you a new one before we leave,\" Gavin assured her. This got the little girl to smile that her Christmas present wasn't going to stay ruined. \n\nOnce Gavin was satisfied there were no free floating pieces still in it, he then reached into his bag and pulled out something else. \n\n\"You are going to feel a small pinch here, your Majesty,\" Gavin smiled. \"It's just me, nothing to be worried about!\" \n\nNora crinkled her nose as the sharp pain came that he warned her about. \n\n\"What is that?\" Livy asked. \n\n\"It's called skin glue,\" Gavin said never taking his concentrating eyes off his task. \"Kinda like super glue. The wound is pretty clean, and not very deep, this should close it better than a band aid.\" \n\n\"Will we need to go to the hospital?\" Al asked him. \"Stitches?\" \n\n\"No, I don't think so, we will have to see,\" Gavin told him as he finished applying the glue. \n\n\"When was the last time she had a tetanus shot?\" Gavin asked. \n\n\"When she went into pre-school,\" Livy exhaled relieved that it was over. \n\n\"Then no,\" Gavin said with a shake of his head. \"She doesn't need stitches, and she won't need a shot. She will be fine.\" He stroked Nora's hair softly, Alex watched him carefully, proudly. Admiring the way he was with Nora. So gentle, so loving.  \n\nHe was more caring and considerate than any doctor she had ever visited. Most of them were cold. This was much different than the way he treated her that night he came home to find her with pneumonia. Then again, he was really pissed and worried with her then, so he probably went into doctor mode just to stay focused. ",
        "\"Thanks Uncle Gavin,\" Nora said looking at her new bandage after he applied a loose gauze around her hand. \n\n\"You're welcome, my Princess,\" Gavin said with a big bow to her. He helped her off the counter and set her down, smiling at his new title. \n\n\"If you have some children's Tylenol or something like that, she could probably use it, to take the throb out of it,\" Gavin said to Livy pulling his gloves off. \n\n\"She is going to be ok?\" Livy asked him. \n\n\"She is going to be just fine,\" Gavin said with a reassuring squeeze to her hand. \n\n\"You're a good man to have in a pinch!\" Al laughed with a clap on his shoulder. \n\n\"I try to be useful,\" Gavin deflected the complement. \n\nAlex came to him and kissed him deeply. \n\n\"Thank you, our Knight in Shining Armor!\" Alex said with a whisper. \"I'm going to get the Tylenol for her.\" \n\nHe nodded as he began to clean up the bloody medical supplies. \n\n\"You are great with kids,\" Alex said at the doorway. \n\n\"Don't get any ideas,\" Gavin warned with his back to her. \"If you want kids from me, you are going to have to marry me first.\" \n\n\"Waiting on you, Sir,\" Alex smiled before leaving him in the kitchen. \n\n*** \n\nThey gathered around the dining room table and said grace. Nora sitting next to Gavin kept Alex from the spot she wanted, instead she sat across from him as her father occupied the other seat next to Gavin at the head of the table. \n\nLivy chided her daughter for taking Alex's spot but Gavin said she had to sit there so he could keep an eye on her cut, which made Nora very happy and beam with her smile. \n\nAfter helping Nora with food for her plate Gavin looked to Alex to see her looking intently at the way he was caring for her niece. He could see her wheels spinning wildly in her head. He sighed deeply and shook his head. So easy to read. \n\n\"So Alex,\" Ken started after the food was passed around. \"Al says you have started teaching?\" \n\nKen was Krista's husband, he worked at the bank and was a Deacon in the church. He was roughly fifteen years older that Krista, more of her parents age than Krista's. He was always pleasant to Alex and she enjoyed that he would always keep her with pleasant conversation. He always paid a price for it but he did it anyway. \n\nThe price was always some sort or ridicule from Krista or his mother in law but he was always interested in what Alex was doing. Perhaps it was because he had a crush on her, Alex knew this because he was always looking at her in more than a sisterly way. Then one New Year's Eve shortly after the birth of his son, he had a little too much champagne and kissed her a little longer than appropriate at the stroke of midnight when the family celebrated. \n\nHe confessed he liked her more than he should. Alex let him down easy, telling him that could never be. At the time she said she was flattered, did everything she could to keep from bruising his fragile ego, but in reality she was extremely embarrassed for him. She knew he would feel horribly about it later. \n\nAlex said nothing at the time and could tell for a few meetings afterward he feared she would tell Krista which would bring him shame and constant ridicule. He was always thankful after that, for not telling Krista and not making it uncomfortable with them. Pretending that it never happened. In return, he was always pleasant and kind to her. Never joining in when the family attacked and on more than one occasion pulled the dogs off when they barked too much. \n\n\"Um, yeah,\" Alex said with a tilt of her head. \"Sort of, I filled in for a maternity leave this year, it lasted until the break, now the teacher will be back so I'm not teaching anymore. I hope to sub more though.\" \n\n\"Where were you teaching?\" he asked her. \n\n\"South side,\" Alex admitted slowly. \n\n\"I thought the south side of Chicago was the bad part of town?\" Ken asked looking to Gavin. \n\n\"It can be,\" Gavin replied for her. \"It's like any major city, they have a part of town that has higher crime rates, but that's just economics.\" \n\n\"It's because they have more black people down there!\" Brandy teased. \n\n\"Skin color has nothing to do with economics,\" Gavin defended. \"Racism has more to do with it than anything else. Why we still judge a person in this day and age by the color of their skin is beyond me!\" \n\n\"C'mon Gavin,\" Krista chimed in. \"They want to live like that because they are lazy!\" \n\n\"That's too simplistic an answer,\" Gavin disagreed. \"Statistics prove that socioeconomic factors play more into it, most intelligent people know this.\" \n\nAlex looked to her plate at the subtle slam, it appeared that only she and her father caught it. Looking to Ken he winked at her and she knew he got it for sure. \n\n\"Well,\" Marylyn started. \"I hope, for your sake, that you do find a rich man to take care of you, because I can tell you from experience, teachers never become successful!\" \n\n\"Yeah, it worked out for Dad!\" Brandy laughed. \"A terrible pension for all the years of hard work!\" \n\n\"I'm very proud of what I did for a living,\" Al said winking at Alex. \"I was able to raise four daughters, put food on the table and make a difference in people's lives. I would consider that successful.\" \n\n\"You are one of the few, dear,\" Marylyn drawled disappointingly with a shake of her head. \"Had you taken the insurance job my father offered, we could be enjoying worldwide travel like Terry Newcome is right now! He took the job you turned down! Instead, we are stuck here in Orchard Falls.\" \n\n\"Yeah, not going to get baited into that conversation again!\" Al laughed uncomfortably. \n\n\"Are you saying that Mr. Lasko isn't successful?\" Gavin asked them setting down his fork. Alex looked to him and saw the fire. She danced on the inside. \n\n\"We're saying he is not like you, rich, with powerful contacts,\" Krista pointed out the differences. \"You are what everybody deems successful!\" \n\n\"I'm sorry to disagree with you, sure I have money and I know a certain cross section of powerful people, but one thing I know for sure, money doesn't mean a whole lot in the end,\" Gavin said putting his elbows on the table and folding his hands in front of his face. \n\n\"I have been with very wealthy people at the end of their lives, and I haven't found one who didn't have some sort of regret that had nothing to do with money, it had to do with how they were to be remembered? Ever notice that names like Rockefeller, DuPont and the like all have charitable foundations?\" Gavin looked to each one of them before continuing. \n\n\"It's because that is the only way we will remember them, by the lives they touch and most don't realize it until they are on their death bed. Granted being a doctor is fulfilling work, and I love doing it, but when I'm gone who is going to remember me beyond my patients? Nobody, maybe those who love me,\" he looked to Alex and she melted that he thought to look to her when he said it. \n\n\"But if I don't have kids, what legacy do I leave behind? What transcends me?\" Gavin shrugged his shoulders in opinion. \n\n\"Mr. Lasko has touched students and planted seeds of knowledge, something that can never be measured as it never ends! His seeds turn into plants with knowledge who become successful and plant further knowledge. Thus his teaching will continue to reach others, long after he is gone,\" Gavin said draping his arm around Nora comfortably as she looked up at him as he leaned back in his chair. \n\n\"I know all of his students Dr. Steward, none of them will ever amount to much!\" Marylyn said coolly, semi glaring at him. \n\n\"Really?\" Gavin's eyes sharpened as his temper began to rise. The skin on his face warmed and Alex watched on in fascination that he was getting angry, and it wasn't directed at her! \n\n\"You can't think of one student who hasn't or won't redistribute his love and knowledge to future generations?\" Gavin asked her hard, his face setting angrily. \n\n\"No,\" she said with a soft laugh. \"Nobody he taught will amount to much, maybe they will become bagger of the year at the grocery store!\" She mocked. \n\n\"No one?\" Gavin's voice was cold and everybody noticed. It took Marylyn's smile from her. Even little Nora looked up at him sensing his anger. \n\n\"No one?\" He repeated, gathering in his temper as he waited. \"Not even here at this table?\" He asked firmly, his finger tapping the table they were at. GAvin waited for Marylyn or one of the sisters to answer, he shook his head when they didn't, meaning they had no clue. \n\n\"I mean all Alex did was paint a mural that was seen by over a million people, you mean to tell me that even the one plant he nurtured in this very house, who has now cast a over a million seeds of knowledge and memories, isn't considered making him highly successful?\" Gavin asked her sharply. He shook his head at the lack of respect at this table. \n\n\"Make no mistake, being a teacher can never be measured, because the knowledge they pass on can't be quantified as they will never know how or when their knowledge will pass on from there,\" Gavin continued. \n\nThose at the table sat silently as he went on, Alex wanted to do a summersault but instead watched him defend, not only her, but her father. Gavin calmed himself, regaining control of his temper. \n\n\"I was walking with him yesterday, at the store, and more than one person came up to say hello to him, former students, all of them. How do you measure what knowledge he passed on to them that they may pass on to someone else, their child perhaps?\" Gavin asked them with a shrug as he used the motion to shrug off his anger. \"Isn't that deemed successful? To be remembered long after you have left their lives?\" \n\n\"I saw your daughter do the same this year, I visited her in her classroom, I saw at least twenty kids in her one class who loved her there, that she made a difference in their lives because she cared about them in a world that didn't,\" Gavin said his temper draining as he realized what was happening. \n\n\"She exposed them to something they fell in love with, art, which was taught to her by her father, thus planting his seeds again. Untold millions of people going out and planting her seeds of art, her father's seeds. From the mural, to her care in the class for each student. All from the one plant Mr. Lasko planted that sits at this table with us, and I know she is not the only student he inspired. There were two that came up randomly in the grocery store while we were there, for what?\" Gavin paused as he looked to Al. \"Ten minutes?\" Gavin said blowing out a breath and smiling at Alex. \n\n\"If we are lucky, the rest of us will affect a tenth of what they have, I'll be lucky to affect a hundredth of what they have. Some people say I'm rich and successful, but in the end, all I have is money and that is not successful, that was a waste of my God given talent,\" Gavin shrugged picking up his fork. \n\n\"I'm not saying he doesn't consider himself a successes. I'm just saying God gave him an opportunity to provide for his family better, my father offered him a job that would have made him lots of money and that could be passed on to our kids,\" Marylyn pointed out. \"We could have benefited our church more!\" \n\n\"Let's face it Gavin,\" Brandy said with a smile. \"Teachers aren't respected, but doctors are.\" \n\n\"God loves teachers, probably more so than those who claim to be religious but do not lead by example,\" Gavin said with a furrowed brow. His temper was raging inside of him but he had to keep it together. For Alex. \n\n\"Proverbs 22:6, 'Train up a child in the way he should go, and when he is old, he will not depart from it,\" Gavin quoted. His mother coming back to him. It was one of her favorites when he would ask her why he had to obey them when they grounded him for what he thought was an unfair length of time. \n\n\"Is that not the essence of teaching? Whether it is your child or not is irrelevant,\" Gavin asked them. This caused them to blink at him in astonishment that he was quoting scripture to them. \"Was Jesus not a teacher himself?\" \n\n\"Our Lord and Savior was a not a teacher!\" Marylyn said angrily. \"He is the King of Kings! He was sent to die for our sins so we could be saved from hells bosom!\" \n\n\"John 13:13, 'You call me Teacher and Lord, and you are right, for so I am',\" Gavin said softly causing Alex to gasp in disbelief. \n\nThis was so perfect and she chided herself for being childishly happy that her boyfriend was defending her to her family! That he was saying things and not shouting them like she would have. That he could keep his composure and win every point in the argument. \n\n\"Jesus said this after washing his disciple's feet, hardly what a king would do, but he did it. Not because he was a king, but because he was a servant and a teacher. For he told his disciples to do the same and they did,\" Gavin countered finally drawing looks of disbelief from the others at the table. \n\n*** \n\nGavin stood on the front porch, the cool air surrounding him trying to soothe his anger. The girls had gone in to do the dishes, and the guys had gone in to watch the game on TV. He needed some fresh air. \n\nHe couldn't fathom how they could belittle their own family like that. Where he was raised people took pride in what they did. It was work! As long as you did your best that was all that was expected from you. One job wasn't more prestigious than the next. \n\nHe thought of all Alex had to endure growing up here, the force fed religion, the snide comments about being an artist. Or a teacher, which he thought, was the most noble profession, in the world! \n\n\"Thank you for what you said in there,\" Al said coming out into the night air with him. \n\n\"Why do you put up with that?\" Gavin asked him as he came to stand next to him and look up at the crisp night sky. \n\n\"There was a time I cared, but I realized it wasn't worth the fight to try to convince them that they are wrong. After Alex came along I realized I didn't need to,\" he replied. \"You begin to realize some people can't be convinced of anything if they don't want to be convinced.\" \n\nGavin and Al stood there for a moment, Al lit his pipe and tended to the bowl. The sweet smell of cherry tobacco filled the cold air and Gavin smiled. Simple man, Gavin admired silently. Simple pleasures. Teacher, artist and father. Very successful in Gavin's mind. \n\n\"You are wrong about one thing though, you have reached out and helped nurture that same plant I started. While I may have planted it, you nurtured it as well. It was just as much your doing with your encouragement. Your love for her, that made her plant her own seeds. So, between the three of us, we will transcend ourselves,\" Al said to him with a firm head nod. \n\n\"No, that little fireball of a plant,\" Gavin laughed. \"Is all yours!\" \n\n\"Yes, but like any field of crops, it isn't just the farmer who planted that makes the crop successful, it takes a lot of hands, and a lot of love. So when the time comes, you have my blessing, so you don't have to ask,\" Al countered. \n\n\"I'm not sure we are at that point,\" Gavin cautioned with a gasp at the idea. \n\n\"With all due respect, bullshit. I can tell by the way you look at her, and the way she looks at you, that's love and it's all you need. It can weather any storm. I know, because I still look at my wife that way and she hasn't looked back at me that way in years,\" Al argued. \n\n\"Then why stay?\" Gavin asked him looking at the man as he stared at the sky. \n\n\"Because I do still look at her that way, and I would rather love her alone, than never love at all!\" He replied with a tear in his eye. \n\nAlex coming out onto the porch caused the men to stop talking and look to her. \n\n\"Sorry,\" Alex smiled at them. \"Am I interrupting man talk?\" \n\n\"No!\" Al laughed. \"Just out her trying to get your man to not lecture me on my pipe smoking!\" He tapped the bowl of his pipe on the railing of the porch and kissed her on his way by to go inside. \n\n\"Sorry about that,\" Gavin said to her as she leaned into him and he put his arm around her to help her stay warm. \"Guess that whole speech about respect last night was not listened to by me!\" \n\n\"I'm not!\" Alex said with a shake of her head. \n\n\"Kind of lost my temper there,\" Gavin explained. \"I guess you should know, if you haven't figured it out by now, I have a pretty bad temper, it can get the best of me sometimes.\" \n\n\"I am thankful you said the words, it seems when I lose my temper I lose all manner of speaking as eloquently as you did!\" Alex assured him that she wasn't angry at all. That she was thankful he came to their defense. \n\n\"If I would have gone off, it would have been a childish tirade filled with obscenities and yelling!\" Alex laughed snuggling into him to absorb his warmth and his scent. \"You were able to put them in their place without all the swearing and temper tantrum! It's the first time anyone has ever won against the whole family!\" \n\n\"Hey, that doesn't mean 'go fuck yourselves', wasn't the first thing that popped into my mind!\" Gavin laughed. \n\n\"Feel very strongly about teaching?\" Alex asked him as she enjoyed his embrace. \n\n\"Remember, my mother was a teacher,\" he reminded. \n\n\"What did your father do?\" she asked him. \n\n\"He was a janitor,\" he smiled proudly. \"In the same school.\" \n\n\"They must have been very proud of you becoming a doctor,\" she smiled thinking of the way he said it. \n\n\"My parents would have been proud of whatever I became, the only thing they said I couldn't become was a quitter. I'm the product of hard working parents who taught their child right,\" Gavin said firmly kissing her head. \n\n*** \n\nGavin looked in on her, Alex was in her old room. Nora laying in her old bed with her princess dress on as she wanted to use it for sleeping, arguing that princesses always wore their dresses to bed. \n\nAlex was reading to her, from one of her old story books. Nora waved to him as he filled the doorframe and he waved back with a wink. \n\n\"Mind if I check your bandage?\" he asked her. \"Before you go to sleep? I mean your mother said you were supposed to be asleep twenty minutes ago, but it looks like your mean aunt is going to keep you up all night!\" \n\nNora sat up and held out her hand as she rubbed her tired eyes. Gavin peeked under and smiled. \n\n\"Looks hunky dory,\" he smiled. \n\nNora leaned back into Alex and she continued to read. Gavin watched them and would smile at the voices Alex used to change the characters from boring words on a piece of paper to real live characters. \n\nGavin shook his head and left them. When he passed by later, on the way to the restroom, he looked in and both were asleep. Nora gently held within Alex's loving embrace. He chuckled and tip toed in. Gently stroking Alex's face brought her from her light sleep. \n\n\"She is asleep,\" Gavin told her softly. Alex nodded and kissed her head before gently laying her to the side. \n\nGavin helped her up from the bed and pulled her close to his body. He kissed her lips, gently pushing his tongue inside her mouth and she accepted it greedily. \n\n\"So,\" he smiled when he broke his kiss. \"This is your bedroom!\" \n\n\"It is,\" she smiled as she loved the wicked look he was giving her. \n\n\"Did this room ever see any heavy kissing?\" he asked her. \n\n\"Only in my dreams,\" she whispered. \n\n\"Derrick?\" Gavin chuckled as he watched her face go pale. \n\n\"Damn Jedi!\" Alex grumbled that he figured her out so easily. \n\n\"Everybody wanted the hot high school quarterback!\" Gavin informed her. \"Nobody wanted us grumpy hockey players!\" \n\n\"I would have done anything this hockey player would have wanted!\" Alex whispered to him as she nibbled on his chest. \n\n\"Is that a fact?\" he grinned. \n\nHe ran his hand down her face, brushing lightly across her chest causing her to gasp. Pushing her gently against the dresser in the room he looked back to make sure Nora wasn't awake. ",
        "\"Did you have any fantasies about a man in this room?\" Gavin asked her as he slipped his hand beneath her dress. \n\n\"I'm having one right now!\" she hissed the last word as he gently pushed his finger into her. She looked to Nora herself then closed her eyes. \n\nGavin slowly worked her, his finger gently probing. \n\n\"How wigged out would your saintly mother get if she knew I was finger fucking her daughter in her house?\" Gavin asked her gruffly as he tugged on her ear with his teeth. \n\n\"She would flat out lose her mind!\" Alex whispered to him in between moans of pleasure. This made Gavin chuckle. \n\nThey stopped their passion when they heard footsteps coming up the stairs. Gavin quickly inserted his finger in his mouth and winked at her. Alex was showing him a picture she had drawn back in grade school that her father had saved as cover when Livy walked in. \n\n\"Did she finally go to sleep?\" Livy asked them in the nightlight. \n\n\"Yes,\" Alex smiled as Gavin left them to go downstairs. \n\n\"Do I need to come up here and do a 'hand check' more often?\" Livy teased as she tilted Alex's head to see the whisker burn on the side of her sister's neck from Gavin's passion. \"Sinner!\" Livy teased. \n\n\"Hey, I remember you had a boy in your room at three in the morning!\" Alex reminded. Livy blushed at the memory of being caught by her baby sister. \"What ever happened to him?\" \n\n\"He's gay now,\" Livy laughed. \n\n\"What?\" Alex asked her in disbelief. \n\n\"Yeah,\" Livy shrugged. \"We tried kissing that night but I could tell he wasn't in it. That should have been the first clue.\" \n\n\"That or you were so horrible at it he decided to bat for the other team!\" Alex teased. \n\n\"Thank you for being so good with her!\" Livy said tucking her daughter in and kissing her head. \"She adores you, thinks you are the greatest thing in the world!\" \n\n\"She doesn't know any better yet,\" Alex said putting her arm around her sister. \n\n\"Anxious to have kids of your own?\" Livy asked her as they watched Nora sleep. \n\n\"Not in any big hurry, just now found a man that didn't suck!\" Alex laughed softly. \n\n\"You guys will be great parents,\" Livy assured her. \"I watched you both with Nora, you guys are perfect for kids!\" \n\n\"Well, let's not scare the shit out of him too fast, shall we?\" Alex said diverting the subject. \n\n*** \n\nAlex was quiet on the ride back to the hotel, she looked out the window and thought of Livy. The poor woman had no support here. Alex wondered if she was tough enough to withstand the family ganging up on her. It was inevitable, her father would help but this was different than Alex's art. Livy was talking about a direct violation of church doctrine. Mother would not be gentle, and with Krista and Brandy flanking her it would be a full frontal attack on her. \n\n\"Worried about Livy?\" Gavin asked her. This caused her to close her eyes. How does he do that? \n\n\"I am,\" Alex admitted. \"I'm more concerned on how I am ever going to keep something from you! How did you know I was worried about Livy?\" \n\n\"First,\" Gavin exhaled deeply. \"Why would you keep something for me?\" \n\n\"A wife sometimes has to keep something from her husband,\" Alex grinned, trying to gauge his response. \n\n\"That's what will cause our marriage to fail,\" Gavin said firmly. \"We can't keep things from each other.\" \n\n\"Homerun,\" Alex whispered to the window with a smile. \n\n\"Testing your Dom?\" Gavin asked her sharply. She gave a single nod. \n\n\"Don't ever fucking do it again,\" Gavin said withholding as much anger as he could. \n\n\"No, Sir,\" she agreed. \"I have serious doubts about relationships in general. I mean, look at my family. My father loves a loveless woman. She doesn't love anyone! Her idea that she loves God is preposterous! If she did, she would love everybody! She mentally and psychologically abuses us systematically with that religious bullshit! Livy is afraid to even get a divorce! The sisters have marriages in name only, there is no love there! Did you feel any love in that room?\" \n\n\"So you test me?\" Gavin asked. \n\n\"No, that was not my intention,\" Alex said putting her hand to her forehead. \"Where are we going? I mean, in the end, that is my question!\" \n\n\"Are we going to get married?\" Gavin asked her angrily. \n\n\"I'm not totally convinced this is going to last past a year!\" Alex gasped. \n\nHow in the hell did she pick a fight now? All she was doing was seeing where his mind was, now they were going to argue. \n\n\"Why are you picking a fight with me?\" Gavin asked her. \"That's my fucking question!\" \n\n\"I don't know,\" Alex whispered. \"I'm disillusioned. Not with you, with my family. The one thing I should be able to trust, the one thing of all things in this universe...and I know I don't have that foundation.\" \n\n\"So, to keep yourself from being hurt because you have no anchor, you pick a fight with me?\" Gavin asked her. \n\n\"That was not my intention,\" Alex assured him. \"I wanted to know where your head was.\" \n\n\"Your aim is too high,\" Gavin frowned. \n\n\"Where should my aim be?\" she asked him turning to him. \n\n\"You should be aiming your questions at my heart,\" Gavin said looking over to her. \"Have I given you a reason to question my heart?\" \n\n\"None,\" Alex said firmly, without a second of pause. \n\n\"Then trust my heart to lead my head to the promise land,\" Gavin smiled. \"Damn Switch.\" \n\n\"What?\" she laughed because he was shaking his head and smiling. \n\n\"Your instinct serves you well,\" Gavin admitted. \"My head hasn't caught up to my heart. My heart is committed to you, that you need to understand, but you have to understand just how terrified I am.\" \n\n\"Have I done something to scare you? My family?\" Alex gasped that perhaps her family visit disturbed him enough that he was having second thoughts about them as a couple. \n\n\"Yes you did, you made me fall in love with you,\" Gavin told her. \"Not just fall, I'm talking head over heels unable to stop myself if I tried! That means if you go, I'm going be crushed!\" \n\n\"I'm not going anywhere!\" She said with all she had. \n\n\"Then trust me,\" Gavin said to her. \"Like I'm trusting you!\" \n\nShe undid the seatbelt and began to kiss him deeply. Why would she ever doubt this man! She nearly climbed into his lap as he was driving causing him to laugh. \n\n\"Trying to drive here,\" he chuckled. \n\n\"I'm sorry,\" she said to him as she put her arms around his neck and rested her head on his shoulder. \"Too many good things are happening to me, I'm so used to the opposite.\" \n\n\"I understand,\" he said with a shake of his head. \"My heart is all in, is yours?\" \n\n\"Unequivocally,\" she said kissing his neck. \n\n\"Let's trust in that,\" he said. \"Now, put your sexy ass back in your seat and put your seatbelt on, the roads are slick.\" \n\n\"Yes, Sir,\" she agreed sliding back. \"My love.\" \n\nThey drove on just smiling, she was looking at him with her head on the seat. \n\n\"I'm sorry,\" she said firmly. \"I was foolish to doubt you.\" \n\n\"Look,\" he said with a sigh. \"I'm in uncharted water, not even with Carla had I even had the opportunity to think about marriage.\" \n\n\"You never talked marriage with Carla?\" Alex asked him, she was surprised. \n\n\"No,\" he said with a shake of his head. \"We were in Med school, we discussed it once, and said we would address it after Med school. Shortly thereafter, she got hooked on heroin, from there, the only thought I had was constant fear, worry and panic.\" \n\n\"So,\" Alex said studying him. \"You equated love with those emotions...then insulated yourself with being a Dom. Being in control. If anyone got to close, you pushed them away.\" \n\nGavin looked to her and frowned. He turned to the road again. \n\n\"Got me figured out, do you?\" he finally asked. \n\n\"I could take a thousand lifetimes, and never figure you out,\" Alex told him taking his hand and putting it on her knee. \n\nShe had to have him touching her. But the restrictions of her not touching him kept her from holding his hand. He looked down at what she did and smiled. \n\n\"Can't touch you,\" she told him when his eyes asked. \n\n\"You know,\" he shrugged. \"I put those rules in place for my other subs. You can address the restrictions whenever you are ready to lay our ground rules out.\" \n\n\"What?\" she asked him. \"I can set up ground rules?\" \n\n\"You can suggest changes,\" he corrected. \"As your Dom I will take them under consideration and decide if that is what is needed.\" \n\nHe looked to her and shook his head. \n\n\"The rules I had in place were general rules, they are adjustable based on what you need. Not what you want, but what you need. Now the no touching me rule had more to do with staying separate.\" \n\n\"Staying separate?\" she asked him. \n\n\"Not letting you get too close,\" Gavin said softly. \n\n\"To keep you from falling in love?\" Alex asked him. He nodded. \n\n\"Blew that out of the fucking water...didn't I?\" She laughed. \"Guess I'm more talented than any sub you have ever had! Look ma' no hands!\" she cackled, waving her hands in the cabin of the car. \n\n\"Hmm,\" Gavin raised his eyebrows. \"Nothing wrong with your ego!\" \n\n\"Ok,\" she said. \"I want to be able to hold your hand.\" He looked to her and tilted his head. \n\n\"Except during scenes,\" she altered. \"Just when we are in the vanilla world.\" \n\n\"I can live with that,\" he agreed. She instantly picked up his hand and held it. \n\n\"Much better,\" she smiled. \n\n\"Now that you are satisfied that you can hold my hand,\" Gavin said with a shake of his head. \"And we have discussed the marriage thing.\" \n\n\"The marriage thing?\" Alex giggled. Gavin smiled at her. \"Alright, close enough for now.\" \n\n\"What's bothering you about Livy?\" Gavin asked her taking her back to what started all of this. \n\n\"She wants a divorce,\" Alex told him. \n\n\"She needs one,\" Gavin agreed. \n\n\"The family will destroy her at every turn if she does,\" Alex told him. \n\n\"That I don't doubt,\" Gavin growled. She smiled that he was just as angry about it as she was. \"So? What do we do?\" \n\n\"She needs to know that she has allies,\" Alex told him. \n\n\"Your solution?\" Gavin asked her. \n\n\"I don't have one,\" Alex frowned. \"I was hoping you had one.\" \n\n\"Got nothing right now,\" Gavin told her. \"But we will think of something.\" \n\n\"Yes,\" she smiled kissing his hand. \"We will!\" \n\n*** \n\nThey entered the darkened hotel room and as soon as the door was closed and he turned on the lights he took her by the arm and nearly slammed her against the door. She gasped at his aggressiveness. \n\n\"Your taste is fading from my lips from earlier,\" he told her as he devoured her lips. \"I want it back!\" \n\nShe fended off his attack with her own lips guiding him along the wall to the desk, he knocked the few items on it to the floor, then picked her up and set her on the top gruffly causing her to gasp. \n\n\"Don't fucking move,\" he warned her. She didn't nod, she didn't agree, she didn't move! \n\nHe pulled the desk chair over in between her legs, and sat down in it. He carefully lifted one leg and placed in on his shoulder. Kissing from her knee up her thigh, he pushed the dress up revealing her to him. He gently kissed across her sex to her other thigh and down to her knee before placing her leg on his other shoulder. \n\n\"Now,\" he smiled. \"Time to get serious.\" He dove into her, nothing was gentle with his mouth's attack. She let out a loud yelp of excitement as he buried his face into her. \n\n\"Fuck me!\" she laughed. \"Yes! Oh my God!\" \n\nShe gripped the edges of the desk as he devoured her. This was wolf like. Normally he started off slow, easy and worked his way to a comfortable speed. This was nothing like that! This was an attack, one that had her gasping and giggling at the same time. The sensations he was creating had her shaking in pleasure. \n\nHe was consuming her. That was the only way she could think of it. His face was pressed so tight against her sex that she wondered if he was trying to plant his face completely in her. \n\n\"Yes, please Sir,\" she gasped. \"Eat me!\" \n\nHer legs began to tighten on his shoulders, quaking slightly as he continued to drive deeper in her. He took her clit in his teeth gently and held it there while his tongue flicked at it. It caused her to convulse. \n\n\"Fuck!\" she yelped at the strange sensation of having her most sensitive of parts in his sharp teeth while his tongue battered it from behind. \"Holy shit!\" \n\nShe had never had this done to her. She was flabbergasted at the wild sensations she was having. When she came she was anything but quiet, letting her voice carry out to the ceiling as her head fell back with a thump on the wall. \n\nHe pulled his head from her after bringing her down gently, her legs still quivering. He looked up at her and she saw the wetness on his face. She pushed him back in the rolling office chair with her foot. The look in her eyes had him smiling as he captured her foot. \n\nHe gently licked her big toe, running his tongue all around it, before gently pulling it into his mouth and sucking on it. The muscle in her calf flexed, all on its own, surprising her. He locked eyes on hers and then slowly pulled her big toe out and moved to the toe next to it. \n\nHer breathing sped up, she had never had anyone do this to her. Suck on her toes? Holy shit! Never even entered her mind! She had heard about it, but never put herself in the equation! \n\n\"Holy shit!\" she whispered aloud watching him move over each toe, showering it with the same attention. It both tickled and turned her on. She felt herself leak a little down to the desk. \n\nHe went to the other foot and repeated slowly sucking on her toes on the other foot. His tongue then licked the instep of her foot causing her to jump at the ticklishness of it. He then gently nibbled there causing different sensations. \n\nShe used her free foot to push him farther away when he began to massage her sole of her foot. She stood and eased her dress off, showing him her body. Taking off her bra, she stood there. \n\nHe ran his hand over her flat stomach, his fingers brushing over her navel. Up the midline of her body, in between her breasts, before peeling to the right to cup a breast. His other hand followed the same path and found the other side. \n\nShe took her hands and put them over his and held them there as she reveled in his touch. His hands causing tingling sensations across her body. She then pulled them off of her and placed them on the arms of the chair. The look in her eye told him what he needed to know. He wasn't to move them. \n\nShe dropped to her knees and never broke eye contact with him. Her fingers pulling gently at his belt, pulling the pin out, she undid it and opened it wide. She then slowly dropped her head and nibbled his hardness through his pants. Biting gently with a turn of her head, so she could put teeth on either side. \n\nShe continued to nibble as her hands pulled at the button on his pants until it was undone. She stopped nibbling on him long enough to pull his zipper down. She looked up at him as she snaked her hands through the hole of his boxer briefs and gently maneuvered his hard cock out. \n\nNever taking their eyes off one another, she started at the base of his shaft and licked upward slowly. Her tongue out and flat against the underside of his shaft. The heat of his cock branding her tongue. She smiled wickedly as she reached the top of his head. She bared her teeth to him and then gently placed them on the head of his cock. Closing her teeth softly around the head, at the mid-way point of his crown. \n\nOnce she had him firmly in place, she let her tongue dance with the slit at the top of his cock. It caused his eyes to flutter closed for a brief second as the sensations overwhelmed him. He snapped them open as he didn't want to miss the hunger in her baby blues. \n\nShe smiled at him when he did, she loved it. She loved having his cock in her mouth and looking into his eyes. He always looked at her with care, but tonight, he was looking at her lovingly. She had him. His eyes were different now, now he didn't look at her as just a girl. Now he was looking at her as a girl he loved. That pushed any doubts, any worries from her mind. This was the man she had been waiting for all her life. \n\nShe lowered herself down his cock slowly, causing inch by inch to disappear in her mouth, and ultimately down her throat. Soon she had him all in, and she was still looking at him. She held him there, showing she could keep him there. She began to use her throat muscles to swallow his cock, making them tighten around it, the effect of which, made it feel it like her throat was massaging his hot sex organ. \n\nThis was something she had read in a book. Granted a cheesy romance novel, but now she was actually doing it. She slowly pulled her mouth off, even slower than she went down. Her teeth gently dragging on his rock hard shaft. \n\nShe could feel the pulse throb on the underside. It turned her on even more as it sped up with his excitement. \n\n\"One thing Sir,\" she said once his cock had cleared her lips allowing her to speak. She still left her lips kissing it. \"I want your taste in my mouth, I want to taste you all night.\" \n\nShe smiled wickedly at him. \n\n\"Have I been a good girl enough to have you cum in my mouth?\" she asked innocently. He nodded with a smile. \n\n\"Thank you Sir,\" she smiled as she dropped her mouth suddenly on his cock taking him all the way down in one swift motion causing a gasp to escape his lips and his head to drop back to the seat back. \n\nShe smiled inside. Yep, she made her Dom do that. Her future husband, if she could somehow not fuck it up, she told herself. She slowly pulled off and brought her hand into play, she began to stroke his hot shaft. \n\n\"May I take your pants all the way off?\" she asked him softly. He nodded and she took hold of the sides of his pants and pulled as he lifted his hips. When he did, she captured his cock again with her mouth. Holding it there as she pulled his suit pants off. \n\nPulling them off completely she tossed them to the side and dropped her mouth onto his balls and suckled one, then the other, as she gripped his shaft hard and tugged on his cock. Using her tongue to follow the underside up to the head and dropping her mouth over his shaft completely pushing her nose into her manicured pubic hair she held him there. Then slowly turned her head from side to side causing his hardness to rotate in her throat. \n\nShe then pulled her mouth off and licked the frenulum gently, the divide at the underside was sensitive, she found out, and she liked making him gasp. He complied. Whether he knew it or not, as he left his head back and enjoyed her manipulations.  \n\nHer hand kept it's up and down movement as she suckled the head with her tongue. Swirling around and around, before she moved down to take his heavy balls in her mouth and sucked, pulling each one in her mouth individually. \n\nHis legs tightening let her know he was building. This spurred her on and now she wanted nothing more than his cum. She put her mouth back on him and to work his cock with a heightened gusto. Sucking hard, her hand helping his orgasm build. \n\nShe dropped her hands to his hips and fucked her mouth with his cock, the slight gagging sound filling the room. She never fully gagged herself to where she had to pull off, but she was hitting the back of her throat with the head of his shaft. \n\nShe pulled her mouth off with a deep gasp as she took in a deep breath \n\n\"God I love deep throating your cock!\" she gasped, her breath coming back to her from her thorough deep throat. \"I could suck you all night!\" She waited for no response from him and buried his cock back into the depths of her throat. \n\n\"Fuck me,\" he whispered at her aggressiveness. She again, smiled inwardly. \n\nHis legs began to shake and she knew he was about to blow. He lifted his head, his eyes said it all and she let her eyes answer. He smiled as his eyes closed slightly as the pleasure from his orgasm overwhelmed him. She never closed her eyes and he was hypnotized by the pools of blue water as they sparkled in satisfaction as she held his cock in her mouth and stroked with her hand the orgasm into her mouth. The spurts she felt with her hand as they surged from the large vein in his cock, she could feel each and every buck before it hit her mouth. ",
        "The quivering of his cock told her he was done. It was then and only then did she pull her mouth off. She opened her mouth to show his seed on her tongue which caused him to raise his eyebrows at her. She had never done that, show him. \n\nShe then closed her mouth slowly and swallowed with a satisfied glow on her face. She pulled the remnants of his cum from his shaft with a firm hand then lowered her tongue to pull it from the slit. She pulled it into her mouth closing her lips tightly afterwards. \n\n\"Thank you, Sir,\" she smiled. \"You were delicious.\" \n\n\"Come up here,\" he said firmly. She obeyed. \n\nHe took her chin and brought her lips to his and kissed her, his tongue pushing into her mouth. \n\n\"You are absolutely fucking amazing!\" He whispered his lips still brushing hers. \"And I'm never letting you go.\" \n\nShe dropped her lips back to his and kissed him deeply again. Her heart skipping happily in her chest. Her mind spinning wildly in love."
    ],
    "authorname": "CJT",
    "tags": [
        "foot fetish",
        "oral sex",
        "cum showing",
        "cum swallowing"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-26"
}