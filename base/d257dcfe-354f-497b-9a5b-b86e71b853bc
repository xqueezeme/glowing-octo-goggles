{
    "title": "Ideal Suburbia Ch. 16",
    "pages": [
        "This is a series of stories that are a sort of sequel to two text-adventure games. Each installment is a complete story on its own, but for a full understanding, the reader may want to start with Chapter 1.\n\n+++++\n\nIn the days following the finalization of the land purchase for my country club development project, I continued to search for and lock down crucial employees. The course designer that Charlie, my pro had recommended had indeed been enthusiastic about the project and was on-board. The designer and Charlie were working away with the civil engineering outfit I had found to lay out the course and plan roads and subdivision maps. A separate architect was designing the clubhouse and surrounding supporting facilities like tennis courts and the extensive pool facility I envisioned.\n\nMeanwhile, I was still working my hardest at my existing sales job, and had decided the time wasn't quite right yet to reveal my plans to my boss Cathy. This meant that I had been burning the candle at both ends a fair amount when our company's employee golf outing rolled around. I was tasked with riding with the boss, so she could gauge my efforts so far at learning the game.\n\nThe good news was that I played pretty well. I actually got through seventeen holes at just 15 over par, which I though was pretty good for someone who had only been playing (and reluctantly at first) for a few months. The less said about the eighteenth and its various water hazards, the better. Further good news was that being paired with Cathy gave me a hitherto undreamt of opportunity to watch her twisting, stretching, and of course bending over for literally hours. My boss had been blessed with an absolutely banging figure and a lovely face that was further illuminated by her considerable intelligence. And she was an absolute master of dressing in a way that incited raging desire while never being remotely overtly sexy. For this event, she was sporting a pair of quite form-fitting capri golf pants in pink, green, and yellow plaid, and a matching pink sleeveless pull-over top with an enchanting v-neck that was JUST shallow enough to not show any cleavage, even when she bent over to address the ball. It was a tease that actually increased the sexiness of her admirably formed torso.\n\nThe bad news was that I was tired, and Cathy ribbed me more times that was really comfortable about my yawning.\n\nWe talked throughout the day about my conversion to the Church of Golf. Each time the subject came up, things would always circle back to Cathy telling me that she had told me so. I kept feeling a little guilty that her pressing me to take up the game was going result in me leaving her company. To stave that off, I harped on how long a drive it was for both of us to get to her club. The club I was going to begin construction on shortly would be the only such facility on our side of the city. I really hoped that the convenience of the facility I was going to offer would appeal to her enough for her to forgive me.\n\nMy angst- (and minor boner-) inspiring round of golf with Cathy complete, I turned back to my recruitment drive in the limited spare time I had available. Some hires were no-brainers. My personal trainer Courtney was an example. By running my fitness center, she could add a nice salary and benefits to her training earnings. The club would buy virtually all the equipment she had in her little dojo. And she would certainly help recruit new members from among her existing clients.\n\nSome of my other choices were more risky, or harder to recruit. Recruiting Nikki, the owner of my favorite bakery and caf\u00e9, was both. Risky, because while she would absolutely kill all the casual but most important daily food items for a golf club, Nikki had no banquet experience since her culinary school days. It was also risky because she was an enthusiastic nudist, and I had to be sure that she would not decide to dress (or not) at my club like she did in the kitchen of her own cafe. The hard part was that she had been her own boss for a long time. Finally she agreed, after much cajoling.\n\nAnother hard sell was convincing my intended pool manager to take the job. Monique was, in my opinion, the best dancer at the best strip club in the city. She also was smart as a whip, swam in college, and was great with people. The problem was that I had to convince her to take a pay cut. Job security, corporately useful experience, and the opportunity to finish her degree in the winters finally convinced her.\n\nI know it sounds like I was just hiring hot women with whom I'd had sex, as if I was assembling a harem. I was actually doing the opposite. I had learned from Cathy and my time at her company of the importance of absolutely forbidding relationships with or between employees. I was actually giving up a large portion of my current sexual opportunities, not expanding them. In one or two cases, we availed ourselves of the 'last chance loophole' before actually signing any contracts, but I was significantly diminishing my current horizons.\n\nI also was hiring plenty of men, like our future tennis director and our greenskeeper. And yes, I made sure that they could stand up to all the gorgeous women I was hiring in the looks department. I didn't want anything to be unfair for the women members!\n\nThe only big position I had left to fill while I was still in the design phase was a really good bar manager. But I knew who I wanted. Tonya was the lead bartender at a nice little cocktail bar a customer had turned me on to recently. She was a dab hand at cocktails, was charming, and knew how to manage the logistics behind a bar. And of course, she was very easy on the eyes.\n\nI had been stopping there for a drink fairly frequently, but while I was plenty attracted to her, I'd never encountered an opportunity to try anything serious. It was a good bar so of course there were always customers. I had some reason to think she might well be open to a play though. We always flirted, and while Tonya flirted with most male customers, I had determined that she tended to flirt longer and more earnestly with me.\n\nOne day, I was leaving my real estate firm's offices, which were near Tonya's bar. It was hours before the place opened, but I noticed the front door propped open by a small hand dolly. Peeking through the door, I saw Tonya opening boxes of liquor sitting on the bar. If she was working alone, this might be the perfect opportunity for all manner of propositions....\n\nI pushed the door open, and Tonya immediately called out, \"I'm sorry, we are clo... Oh hi! Come on in. And pull in the dolly, will you? I was using it to keep the door open, and forgot it when I was done.\" I stepped inside and let the door close fully behind me. It sure sounded like we were alone.\n\n\"I was walking by with some time on my hands, and saw the door,\" I said as I wandered over to the bar. \"Anything I can help with?\"\n\n\"I've got a ton of bottles to find space for up on the back bar. Think you'd mind handing them up to me?\" Tonya asked with a grin that communicated that she damned well knew I'd love to do that. The wall of the back bar was huge and high, and filled with an incredible selection of liquors and liqueurs. There was a rolling library ladder so staff could climb to reach the upper shelves. Looking up at Tonya when she climbed that ladder was always a highlight of coming to this bar. And she was well aware of my fandom. She had noted playfully on more than one occasion that I never ordered any drink there that did not require at least one bottle from a high shelf.\n\n\"I've got the boxes located roughly where the bottles inside need to go,\" Tonya went on. \"Just come around behind the bar and start handing them up to me!\" I had never been behind the bar, of course, but I made my way there with alacrity. Tonya slid the ladder to one end and mounted it easily. Since it was long before opening, she was not dressed in her usual working garb that included her soft, black, form-fitting trousers. Instead, she just had on a loose, untucked t-shirt and a pair of very tight white shorts. They were short enough, in fact, that a good finger's breadth of bare skin was visible above where her firm thighs transitioned smoothly into the curve of her ass. This was going to be a very scenic favor I was doing!\n\nWe quickly got into a rhythm, with her atop the ladder, stepping down a rung or two to take a bottle I handed up to her, and then re-ascending as needed to find a spot for it. The view was even better than I had thought. Her loose t-shirt dangled from the tent created by her bra-free breasts, giving me an occasional view up at some tasty-looking underboob. Pretty early on, I thought she caught me staring up her shirt, but said nothing. I became convinced she had caught me in short order when she started leaning over more than necessary, and at the right angles to give me even better looks.\n\nAfter a bit, she pushed the ladder down toward the other end of the wall and we resumed our work in tandem. Tonya kept having to go up and down the ladder an awful lot to reach the bottles I was handing up. So I started grabbing a high rung, and pulling myself up to hand the bottles to her. This worked well, and we proceeded. But then she started leaning out further to the side. This simultaneously gave me a better show up her shirt, and slid her hip and thigh to the edge of the ladder. That meant that the only place I could grab the thing to get the bottles up to her was between her legs. Pretty far up between her legs. I went for it, and if she had any reaction, it was a slight smile.\n\nAfter a few transfers with my ladder hand inches below her crotch, I handed up another bottle. Tonya took it and looked around for a place to put it. She shook her head and came down a rung to reach a lower shelf. This practically buried my hand in her barely clad snatch.\n\nAnd she made exactly zero reaction.\n\nShe seemed intent on not putting any bottles on higher shelves after that though. She just kept working the level she was on, rubbing her crotch against my fingers as she leaned back and forth. All too soon I was handing the last bottle and told her that was it. Taking the bottle, she looked me in the eyes as gave she herself the most blatant rub against my hand yet, then leaned way over above me and tried it in several perfectly suitable locations before she settled it on a shelf with a sigh. She pulled herself up slightly, releasing my hand. I stepped off the ladder and she hopped down to the floor beside me.\n\n\"Well!\" she exclaimed. \"You just cost me a workout, but saved me a shit-ton of work! Whatever,\" she asked meaningfully, \"will I do with all this unexpected free time I have?\"\n\n\"I have some ideas,\" I murmured, equally meaningfully, as I reveled in her come-on.\n\n\"Really? Do they have anything to do with what you were looking at?\"\n\n\"And felt?\" I replied. \"I don't think I could have any ideas, of any kind, about anything ELSE right now.\"\n\n\"I'm fascinated by these ideas,\" Tonya said, practically with a leer on her face. \"Do go on.\"\n\n\"The first thing I think we should do it take off that t-shirt of yours. It's awfully nice,\" I said, reaching out and tugging very gently on the bottom of the garment. Tonya just raised her arms above her head. \"And I wouldn't want to to get wet or sticky or anything.\" I slowly and smoothly tugged the shirt upwards, pausing for just a moment when her delicious boobs popped free. When I had it up above her head, Tonya took over and swung the shirt completely off. She bundled it up and set it on the bar. Then she leaned back against it, thrusting her lovely breasts toward me.\n\n\"So, do you have a better view of what you were looking at now?\" Tonya asked with a grin.\n\n\"Since I can hardly take my eyes off them, I'd say indubitably!\" I replied. They were exceptionally nice breasts. Just over a handful each, they were soft but bouncy, with tiny nipples that were perking up nicely. \"My next idea is to play with theses fantastic boobies!\" I added. I reached out and caressed her soft, yielding curves.\n\n\"Excellent idea,\" said Tonya, straightening up against me, trapping my hands upon her breasts. Then she kissed me gently. I kissed her back gently as well, my hands gently working the flesh of her delicious tits. She took a deep, chest-swelling breath, and slid her tongue between my lips. She probed around my mouth and I practically sucked on her tongue.\n\nTorn between glorious options, I finally broke off our kiss and bent down to suckle on first one, then the other of her quivering breasts. I buried my face between them, kissing and licking their curves. I slid my hands down her bare torso to her hips, then clasped her tight round, shorts clad ass. Tonya stood on tiptoe in response. Feeling the bare edge of her ass below her shorts, I slipped finger or two up under the shorts to tease her bare, curvaceous flesh.\n\n\"I have ideas too,\" Tonya practically panted, pulling her boobs (temporarily, I hoped) from my face and loosening then removing my tie. I kept a firm clasp on her backside as she made quick work my buttons, until she slid my shirt off over my shoulders. She ran her fingers up my chest, then wrapped her arms around my neck. Our bare chests pressed tightly against each other and we kissed again, though this time I made sure my tongue was doing its share of the exploring.\n\nHer hands slipped from behind my neck and slid down to the waistband of my trousers. She slipped open the button and let her hand slide inside. My cock was raging at full attention and it filled her grasp. Tonya pulled away from our deep, extended kiss and panted, \"Not only are you cute, you are HUNG!\"\n\nShe slipped my trousers and underwear free of my hips, disentangled the underwear from my hard-on, and knelt down as they fell to my ankles. She caressed my cock as she examined it. Then she looked up into my eyes as she slowly and tortuously dragged her tongue along my shaft from balls to the aching tip. It took her fabulously forever, ending her journey with a long, wet, enclosing kiss of the tip.\n\nShe kept her eyes on mine as she slurped upon me eagerly, both hands caressing the base of my shaft. Then she looked down at my cock, measuring it with her eyes and her hands. I would not be anything special at all among porn stars, but I am well above average among normal guys. \"I've got to try it,\" muttered Tonya, shifting her position to take my shaft into her mouth. She slid in several inches, then began bobbing her head back and forth, letting her throat relax a bit more each time she slurped more of me into her mouth. She slowed and stopped, letting me pop free of her mouth as she gagged for air. She had almost taken all of me. \"Almost,\" she gasped, reaching for me again.\n\n\"Uh uh,\" I countered, pulling her to her feet. \"My turn!\" I tugged open the fly of her shorts and pulled them down to reveal the pink thong she wore under them. I began to run my finger softly along the edges of the tiny garment, diving down to her crotch, then back up and around a hip and around her back to follow it where it slipped down deep between her scrumptious ass cheeks. I then squeezed her cheeks with both hands and she giggled. While the thong was fun, it really had to go however, and I pushed it down and off after her shorts. Her bush was neither shaven nor shaped, but she did keep it trimmed short. \"Upsie daisy!\" I said, lifting her up to sit on the the bartop. Tonya giggled and squirmed for a moment in mock shyness before she invitingly spread her legs for me. I bent.\n\nHer aroma was rich in my nostrils as I kissed around her abdomen and thighs. My fingers caressed her labia, then spread them gently. I relented in my teasing kisses and directly licked her slit slowly between my spreading fingers. That drew a sharp gasp from Tonya and she began to run her fingers through my hair. I thrust my tongue deeper within her and she began to repeat, \"Please!\" It started as a whisper, then grew louder. By the time I moved from licking her lips to kissing her swollen clit, the pleases became cries, then shouts. Suddenly, she was incoherent and her hips bucked hard. I found my face drenched as she came, and came hard.\n\nTonya collapsed back across the bar, her head hanging over the other side. I came up for air and leaned forward to enjoy caressing her heaving bosom as she fought to gather her breath. When she had done so, I climbed up next to her on the broad wooden top. She looked up at me, her eyes uncrossing as she smiled. I smiled a sticky smile in turn and gently swung her around to lie lengthwise on the bar. I spread her legs and knelt between them, bending to massage and suckle once more on her breasts.\n\nShe rolled her head back to enjoy for a moment or so, before her hand found its way to my cock again. She caressed it, then stroked it eagerly. After we mutually toyed with each other for a bit, her fingers moved to trace circles around my glans, while her other hand lifted my chin to look up at her.\n\n\"I want to suck this thing again,\" she growled, tugging on the thing in question.\n\n\"I haven't even had a cocktail and you want my to tip you?\" I asked archly.\n\nShe laughed grudgingly. \"This may be the first time I haven't hated hearing any form of that joke! But,\" she added sternly, tugging harder, \"come up here and let me have another try!\"\n\nI moved upward from between her legs to straddle her chest, my cock swinging right over Tonya's face. She stuck out her tongue, reached up atop clasp the base of my shaft with her fingertips, and swung my cock back and forth over her tongue languorously. After the first few passes, her tongue began to curl around my cock as she waved it over her face. She teased me like this for a bit before she grasped me more firmly and sucked my tip into her mouth, raising her head to take me in. Within her mouth, her tongue continued it torturous sweeps across my head, and her hand began to jack up and down my shaft. Unable to restrain myself, I thrust my hips forward a little pressing my cock further into her mouth, then pulled back. Tonya looked up at me and uttered a command. It was hopelessly garbled because my cock still occupying her mouth, but it was clear from the context thatch wanted my to thrust some more. Carefully, I complied. My cock slipped in and out between her lips and it felt glorious. Without realizing it, I started pushing harder, faster and deeper, and suddenly Tonya was choking.\n\nI pulled all the way out immediately, and apologized profusely. \"Don't,\" Tonya gasped, \"Don't apologize, and don't stop! Just give me a second,\" she added determinedly. But I could see she needed a break to gather herself.\n\nI took the opportunity to wiggle my way backwards a little to where I could take my cock and rub it over the warmth of her seriously lovely tatas. They were soft and firm when I pressed my dick into their curves, and I groaned happily when I pressed my shaft in between their curves.\n\nHowever, Tonya soon demanded that I return to action and I worked my way forward again. She took me into her mouth once more and resumed alternately sucking my head and breathing out softly around it. I could not help slowly thrusting again, and she, perhaps unwisely, began to encourage me to greater efforts by grabbing my ass and pulling me into her. She determinedly took a little bit more of me with each thrust, squeezing my buttocks merrily.\n\nBut either she or I reached too far and again she was choking. I pulled out again, looking down at her to make sure she was not truly distressed. \"Sorry!\" I exclaimed. \"This feels amazing as is. You don't...\"\n\nTonya raised an admonishing finger to interrupt me. In between gasps, she growled, \"Quit apologizing! This is a CHALLENGE!\"\n\nI slid backward again while she steeled herself for another attempt to deep-throat me, and dangled my cock once more between her tits. I started sliding up and down and clasped her outer curves, pressing her breasts together around my thrusting cock.",
        "As I grooved to the soft enclosure of her tits, Tonya looked down at my idly thrusting cock and up at me. \"You just want to fuck my tits, don't you?\" she challenged.\n\n\"I want to fuck your tits,\" I replied, not pausing my efforts in that vein. \"I want to fuck your mouth. I want to fuck YOU!\"\n\nTonya had easily regained her breath this time and replied archly, \"All three? In one afternoon? My, aren't you confident in your stamina?\"\n\n\"With someone who is as hot as you?\" I replied. \"I. Can. Make. It. Happen,\" I replied, punctuating each word with a thrust.\n\nTonya literally looked at her watch. \"I guess we got time. OK, Mister Braggart, prove it!\" with that she pushed my hands off her breasts and pressed them together against my thrusting penis herself. I really could not contain my eagerness and started thrusting harder, almost wildly. I was pushing so hard and far that Tonya lifted her head as far as she could and stuck out that long magical tongue. The head of my cock just brushed her tongue at the apex of several thrusts, and I paused on the next one to let her circle my glans for a second. But I could not hold that pose and slid back an inch or two as she let her head arch back to rest. She began to jiggle her breasts along my shaft and I thrust between them hard and harder. I could feel my balls tighten and I grunted a joyful warning.\n\nShuddering, I froze at deepest thrust as I spewed forth a long rush of jizz which burst forth from between her breasts like water from a broken dam. It was my turn to gasp for breath as my back arched, my cock throbbed, and my mind took a few to reboot.\n\nI looked down at a smiling Tonya and the wide, sticky sheen of cum across her chest in which my barely softening cock lay. \"That is impressive,\" she murmured, enjoying the mess herself. She swept up a large gob on a finger and went to suck it clean. But she paused before putting it in her mouth and instead reached for a nearby cleaner towel. \"I was promised a direct deposit,\" she warned me, cleaning herself and me off. \"I'll wait for that!\"\n\nIn order to give my apparatus a chance recover, I slid down the bar and back between her legs. I lowered my face to her sex and proceeded to buy myself some time. Her fingers ran through my hair as I enjoyed her flavors and aromas once more.\n\nMy goal was to see if I could get her to scream even louder than the first time.\n\nShe did not.\n\nBut her hips sure did buck and thrash a lot more than my first visit to the Y. Better, the aftershocks when she was done went on and on, and the sight of her stomach and thighs quivering so beautifully put the finishing touches on my fresh erection.\n\nWe both sat up on the bar top and shared a long, lingering kiss. It did not seem to bother Tonya that her juices were all over my face while we did. She also began to stroke my cock once more, and it pulsed eagerly under her caress.\n\n\"I need a new angle,\" she muttered and slid off the bar to kneel on a bar stool. \"Lie down,\" she instructed me. When I did so, she was in a position to look down toward my legs as she addressed my cock from above this time. She tickled my balls and then my taint this time as she began to slurp on my glans. Soon she was taking my deeper into her mouth with each bob of her head. The new angle did indeed let more of my significant endowment slide into her mouth and on into her throat. She was patient this time, and kept working. Her determination was an incredible turn on and pretty soon I was wobbling on the edge, holding back with all my might.\n\nShe managed most of it. She pulled me free of her mouth to gather her breath for another try, but I gasped a warning that she had run out of time. Quickly, Tonya slipped a couple of inches back into her mouth and sucked on it urgently, her hand pumping my shaft below. I had not been kidding. My self control lost its grip and I again reveled in the sensation of my cum bursting forth, this time in the welcoming confines of her mouth. It was certainly not the prodigious first offering I had made, but she still had to make a significant effort to keep it all within her mouth. I shuddered into a state of complete relaxation on the bar top. I watched Tonya as she slipped my cock from her mouth and seemed to actually swirl my jizz around in her mouth before swallowing, as if she were tasting fine wine! She nodded approvingly and smiled at me as she bent to clean off my cock, first with her lips and tongue, then with a fresh bar towel.\n\nShe stood from the bar stool and leaned over me to deliver a long, passionate kiss. This time it was the flavors of my secretions that were traded between her lips.\n\n\"Get up!\" she commanded, slapping the bar stool. \"I've got to make us a cocktail. We both need to recover before the finale!\" I slid off the bar to the proffered stool, while Tonya went around behind the bar again. She started making two Manhattans. She added the vermouth and bitters to the crystal mixing jar, then said, her eyes sparkling, \"I better get your favorite rye whiskey....\" With that, she turned and began climbing the ladder once more to get the bottle form the top shelf. I let my eyes roam up her legs to her delicious ass and crotch still glistening with her own juices. At the top, she turned to wave the bottle at me, and I drank in her swaying breasts above me. She took her time returning to the ground and my eyes stayed glued to her every move.\n\nIf you have never had a gorgeous naked bartender make you and herself a delicious drink in the middle of vigorous sexual activity... well, let's just say I suggest you try.\n\nGod, that was an awesome cocktail. Seriously. Tonya always used a different bitters from an unmarked bottle in her Manhattans, and she would never tell me what it was. I think I was awarded an extra dash that day.\n\nWe savored those drinks as we stared into each other's eyes as we sat beside each other at the bar. I was determined to keep my eyes on hers, rather than simply oggle her fantastic naked form, and while I succeeded (mostly) the effort was a real turn-on. I could sense the blood surging back into my penis. With each beat of my pulse, it swelled a tiny bit, hardening and tilting upward. I felt every pulse.\n\nTonya was apparently not as good at keeping her gaze on mine as I was on hers, because she noticed my budding erection when it was barely halfway to fruition. \"These are indeed refreshing drinks,\" she murmured, downing her last sip. Then she slid the glass to the side and reached out a finger to barely brush my pulsing glans.\n\nI had more cocktail enjoy, and I did so slowly, while Tonya teased my cock as it swept upward inexorably to full attention. I drained the final drop and Tonya gently took the empty from my fingers. Giving my now throbbing penis a last, lingering caress, she stood and slid our glasses well down the bar. Then she climbed back up atop the bar and reclined, gesturing me to follow her. I climbed up after her with eager anticipation.\n\nI lowered myself between her legs and she guided my tip to her obviously eager pussy. I dragged my cock along it, barely letting the glans part her lips. Tonya grabbed my ass and pulled on it, trying to plunge me inside her, but I resisted. I slid in a tiny bit more, but when she groaned with pleasure, I withdrew once more. She pulled against my ass, and I grinned evilly as I held back. Then she simply thrust her own hips up hard and forced herself onto my cock. In turn, I relented (I could not possibly have restrained myself any longer anyway) and let my entire length slide slowly into her.\n\n\"Oh, FUCK yeah,\" one of us gasped... probably me. She was hot and wet and tight, and the feeling of sliding in and out of her silken confines was stunning. I braced myself up on straightened arms so I could look down on Tonya's pretty face and soft, bouncing boobs, jiggling with each thrust I made into her. Despite the lovely view beneath me, my perception was diminishing to not much more than the physical sensation of pumping in and out of her sex. Everything between my legs tightened and I could not have held off the coming orgasm had I wanted to.\n\nI gargled incoherently as I felt the explosion erupt inside Tonya, my pleasure-overloaded cock suddenly surrounded by a different moist warmth, that of my jizz filling her. She was not quite there, and I kept thrusting earnestly, but the sudden outflow of my fulfillment and my near incoherent groans pushed her into fulfillment and she too came again. And again. I collapsed atop her, my face buried in her neck and her hands still grasping my ass. We both lay there, breathing heavily until we both froze at the sound of a crisp apple being bitten!\n\nWe both snapped our heads to the side to see Tonya's assistant bartender, Sheila. She was leaning against the back bar, legs crossed. We stared at her wordlessly as she chewed her bite of apple. Then she bit it again, holding it in her mouth this time so she could clap her hands in slow, deliberate applause. She then stood up and wordlessly grabbed our empty glasses, placing them by the wash sink. Taking another bite of her apple, she turned and walked off to the back. \"Tonya?\" she called over her shoulder, \"Could you clean the bartop? I think I'm going out back to have a cigarette!\" We would have heard the back door click, had we both not been laughing hysterically.\n\nI looked down at Tonya, my cock still impaling her and forged ahead. \"Actually, I have ANOTHER proposition for you...\"\n\nShe said yes to that one, too."
    ],
    "authorname": "Publius68",
    "tags": [
        "bar",
        "bartender",
        "blowjob",
        "cunnilingus",
        "titfuck",
        "ass",
        "voyeur",
        "deep throat",
        "hire"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/ideal-suburbia-ch-16"
}