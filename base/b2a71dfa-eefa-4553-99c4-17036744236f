{
    "title": "The Designer Pt. 02 Ch. 03",
    "pages": [
        "Author's Note: This installment has a lot of character development. One could read that as \"not a lot of sex\", I'll start you off with a short tryst. Other than that, you can skip to the end to read a synopsis, or chew on the character development to start putting together clues about Jeremiah and his past.\n\n*****\n\nPresent:\n\nJeremiah steered the car into a dark corner of the park, and pressed the button to recline and slide the seat back. As the electric motor moved the seat into position, Lexi smoothly slipped J's erect member from his clothes and sealed her lips over the engorged head.\n\nJeremiah groaned as his mind snapped back into the present, Lexi's talented tongue and lips making his thoughts of our beginnings burn away like fading embers. Her tongue and lips sealed and milked the glans nursing the shaft to fuller and firmer hardness.\n\nJeremiah gripped a handful of her hair directing her mouth to go deeper. She moaned as she adjusted her head and throat, and Jeremiah moaned as he felt his cock head slide into the entrance of her throat. She swallowed and the feeling of that on his sensitive glans made his shaft twitch in need. Lexi swiveled her body, lifting her knees to the seat beside Jeremiah, as he tugged at the hem of her dress pulled it up exposing her bare, bare behind. \n\nShe moaned in lusty need as Jeremiah's fingers slid over her aroused folds. Worming his fingers between the inner and outer lips he found her entrance, and pressed a two fingers inside. Jeremiah used his soaked fingers to spread her copious moisture over her distended lips, gliding to the top of her cunt and pressing circles around her hard clit. \n\n\"You suck my cock so good, little one,\" Jeremiah said using her preferred nickname and Lexi purred with the compliment. \"I want to fuck your tight cunt, so slide over and lower yourself facing me.\"\n\nShe obeyed almost before Jeremiah's voice quieted, her small, lithe form performing the in car gymnastics smoothly, her heated pussy dripping as she ground her hips and coated Jeremiah's spit slicked shaft with her even slippier pussy juice.\n\n\"May I, Master?\" Lexi cooed as she teased Jeremiah's stiff shaft, her eyes glazed with lust as she used her preferred name for Jeremiah, a role she saw him in all areas of her life.\n\n\"Get your cunt on my cock, my little fuck toy,\" Jeremiah said with gleaming eyes.\n\nShe tipped her hips with a practiced ease and suddenly she was impaled on his cock to the root, her tight cunt quivered as she worked her inner muscles, milking his shaft as her hips gyrated. Jeremiah lifted and gripped her head in his hands, kissing her deeply, driving his tongue in deep. \n\nTheir bodies undulated as she worked her hips and thighs, teasing him, then fucking him at a practiced pace that they could keep for a long time...\n\n*ring ring*\n\nJeremiah tried to ignore the ringing as his hips lifted and started to drag out and drive back into her well lubricated cunt. Her eyes glazed over, and she increased her pace, her need building, but also a concern in her eyes...\n\n\"Oh Master, please make me cum... now... please, sir, the phone call is important...\" she cried as she tried to will an orgasm. \n\n\"cum for me, my pet,\" Jeremiah reluctantly commanded and her body went rigid as she cried out, Jeremiah's eyes slammed shut as he went rigid, his own orgasm consuming him as he jetted his cum deep into her tight spasming cunt.\n\nAs soon as Jeremiah cleared his head so could see and speak, he clicked to answer the phone, \"Hello?\"\n\n\"Jeremiah,\" Kelly's voice filled the steamy passenger compartment, \"I need you to come home, now. Zac is ... he has, um... new friends over, and... just come home, please.\"\n\n\"On our way now, Kel\" Jeremiah said as Lexi deftly slipped back into her seat. Jeremiah shifted the car into gear, as he moved his seat back into place. Thinking to himself, \"What was the boy up to? Why did Kelly sound so worried?\"\n\nPast:\n\nThe kitchen dining room area fell silent, I was still breathing hard from just spilling my load in Carmen's tight ass, and Alyssa shook her head as she cleared her brain from her own orgasm. Lexi stood up and looked at Kelly, while Carmen arched her back to try to look around me and at Kelly.\n\n\"I'm pregnant!\" Kelly said with a bright, forced smile, then the facade broke and she started to cry as Lexi rushed to her to hug her tight. Carmen squirmed from under me, and Alyssa stood shakily and the pair reached Kelly and Lexi at the same time, surrounding Kelly with the love of their new sisterhood.\n\n\"What?!?\" I said again, the words not making sense in my brain, so many thoughts rushed through my brain. I was frozen with shock, and then finally it hit me, I was the father. \n\nI moved to hug her and my diverse family, and surrounded the group with my arms and tried to remain calm in the moment. Questions raced through my mind. It was difficult to sort my thoughts, as my mind was still clouded with the powerful dominant thoughts that had coursed through me as I fucked Carmen. In the moment I tried to sort through the mixture of sexual fantasy and real-life responsibility. \n\nI wondered what Kelly's pregnancy meant to our relationship, did some mental math, and knew it had to be mine. She had no other lovers before me, and Carmen had kept the boys away in the week we were apart while Kelly was out of control. It was my fault, another consequence of my reckless use of my powers. Powers I didn't even know I had. \n\nI backed slowly out of the circle, and waited, my emotions in a turmoil of confusion, guilt, shame, pride, panic, worry, concern, happiness. The questions came in a rush: Did I get Lexi pregnant too, Carmen? What would happen to our relationship? Did this change everything? Would I lose Carmen, Lexi... Alyssa? Oh what I had I done??\n\nI think the girls had tuned into all my rampant emotions, while processing their own and softened as they felt my confusion, they moved closer to me. They embraced me, and consoled me, their wills calming my obsessive thoughts. I felt selfish as I felt their combined minds reassure me that our wills were still entangled. \n\nThe drop I felt from being the hard dominant figure with Carmen to the normal, caring, loving man of the house was palpable. The role of a sexual dominant was new to me, and I wasn't completely comfortable with it. The role of loving male to four girls, and apparently a father, was also foreign and scary. My mind as in a turmoil as my physical body descended from the orgasmic high. It almost felt as if my emotions had a physical component to it, I ached.\n\nI needed more of their loving care, so with a silent push of a thought, we all shifted and silently went down stairs to the only piece of furniture that fit us all - the bed. I slid up to the middle of the bed, my back to the headboard as Carmen slid next to me, soft and needing consoling, Kelly slipped to my other side, Alyssa right behind her. Alexis slid beside Carmen, but twisted around, lying her head on my thighs as she looked up at the four of us.\n\nI hugged Carmen close, the unspoken words of loving care and return to our normal roles from our Dom/Sub scene needed to be felt, not necessarily heard. I felt her understanding, as she reached over and combed Kelly's hair from her cheek, and focused on her. All of us followed her lead, and turned our attention to Kelly, surrounding her with as much care as we could muster.\n\n\"I've never been on birth control,\" Kelly started, \"I realize I probably should have been, but everything since the night we met has just happened so fast.\"\n\n\"It's my fault,\" I confessed, \"I never thought about it that night, or the next day. Alyssa and I talked about it after I got back home, and she was protected when we started having sex. But I've been careless, with all of you.\" I turned to look at each girl, and each nodded, each taking their turn.\n\n\"I've taken the pill since high school,\" said Carmen, \"I love sex, but I didn't want anything to do with pregnancy, I'm screwed up enough.\" \n\nKelly started to cry at that, and Carmen softened, \"Oh Kelly, I'm sorry, I'm horrible... it lovely that you'll be a mother... right?\"\n\nThe question hung in the air for a few with moments until Lexi spoke up, \"I can never have children, so many health issues in high school, cysts, endo...\" she faded off with a shrug.\n\n\"I didn't want to get pregnant, I didn't...\" Kelly softly said, her tears dripping down my chest, \"but I also ... I don't .. I can't get an abortion.\"\n\n\"Of course not,\" said Alyssa, leaning into Kelly and kissing her cheek, \"it's your choice. This won't change anything, we won't let it.\"\n\n\"But this changes ... everything!\" Kelly complained and I felt her panic rise, my arm pulling her closer, and I just let her sob. \n\nI concentrated on just opening up and feeling how each girl felt. It felt different, I was so used to pushing my thoughts and desires, and having them soak up my emotions. Twisting it around and listen and feel their thoughts and emotions was disconcerting, then calming. I felt the best thing I could do was to be silent and listen. I did however, need to reassure Kelly.\n\n\"Kelly, I will be with you, and support you always,\" I stated confidently, then continued summing up the feelings I felt as I listened to the hive mind of my companions, \"this child is ours, ... all of ours. Does anyone feel differently?\"\n\nLexi, Carmen, and Alyssa nodded in unison, surrounding Kelly with their physical presence, as I tried to take in their warm feelings, and reflect them back to Kelly.\n\n\"I don't know how it will work out,\" Kelly said, softly, almost childlike herself.\n\n\"It will work out,\" Alyssa said with a soft voice, \"we are all in, all of us, we are family. Deep in my soul I know this, and I know you all know this.\"\n\n\"My parents,\" Kelly sobbed quietly, \"How can I tell them about this? About us, not just the baby, but all of you. I feel like I've been lying to them, to my mother.\"\n\n\"It might be easier than you think,\" Alyssa said, \"Did you say you were raised LDS? I know they currently don't accept the tenets of polygamy as a church, but it wouldn't be a foreign concept... Jeremiah could help ease any struggle they have...\"\n\n\"Um, wait, are you suggesting that I use my power again on Kelly's parents?\" I asked, my thoughts also still conflicted with my father, and his family, and the troubles we'd discussed with my Uncle earlier in the morning.\n\n\"Darling,\" Alyssa said, \"Look at this logically for a moment, they are invested in this house already, they are invested in their daughter, they know she is happy, they will be the child's grandparents... Our child's grandparents.\"\n\n\"They'll kill me,\" Kelly sighed, \"They don't know about us, they think J is engaged to you. They'll think I subverted that relationship, that I slept with him out of marriage.\"\n\n\"I don't know about that,\" Alyssa mused, \"I don't remember my parents, but it was always surprised how forgiving my foster parents were... but look...\" Alyssa touched Kelly's chin to turn her eyes towards her own, \"Your parents know you, they know Jeremiah, they are investing money in this house and our business, and J has a connection with them.\"\n\n\"Aly, stop, that's too manipulative, too entangled, I don't want to use my powers to make this work...\" I spoke feeling my anger and fear rise. I really didn't know what my powers were capable of, and the thought of testing them safely made my palm cold with sweat.\n\n\"Jeremiah,\" Aly started, her voice gentle but firm, \"What would be better for everyone involved, Kelly outcast from her parents, or her family supporting her, and being around. Even if we told them a lie, they'd eventually find out, and that would cause more damage. Using your powers to mold their reactions to what is right and good, is what is best for Kelly, for the baby, and for you.\"\n\n\"I just don't know,\" I sighed, a part of me knowing she was right, and part of me fearful that I was already tumbling down the path my father started, and the circle of my influence just seemed to keep expanding. \"How do I know using my powers here, even for the best solution, wouldn't just make something else more complicated later... I need to know more.\"\n\nKelly was looking back and forth as Aly and I talked, as well as Lexi and Carmen. The conversation was intense, and complicated, but it was also honest. It seemed to help Kelly's emotional state, as fraught as it was to talk about it, but the issues were so many and so entangled I was growing a frustrated.\n\n\"We don't have to tell them anything today, but we will tell them, and regardless of their actions,\" I stated as evenly, \"We will be with you Kelly supporting you and our child.\"\n\n\"Won't that be hard,\" Kelly said, \"our story is you are married to Alyssa, and you have a child with me, someone who is not your wife, at least legally.\"\n\n\"That's easily fixed,\" said Alyssa, as she softly shifted the ring from her finger, and turned to Kelly, \"Jeremiah will marry you.\" I opened my mouth to protest, but Alyssa looked at me softly, \"in the eyes of the state, only. We are all already married in our hearts and souls.\"\n\nThe four of us nodded, and Kelly tentatively accepted the ring, then passed it to me.\n\n\"I'm kind of old fashioned,\" Kelly said softly, \"I want a proposal, I know it's selfish, and not in the context of our relationship... but I've, well I've dreamed about a proposal and a wedding since I was a girl playing with barbie dolls.\"\n\n\"Isn't that every girl's dream?\" I asked, and accepted the ring back, holding in one hand and twisting it around with the fingers of the other, \"I think I'm being selfish only asking one of you, when I want to give you all the experience of living their dream.\n\nTears suddenly flooded my vision as my mind processed what just happened, how Alyssa ended our engagement. How much she meant to me, how much I deeply wanted her by my side, but at equal partners in life. I wanted vow that love to girl. They each deserved to have the specialness of a formal proposal, a wedding, where they were the star.\n\nI thought back to the impromptu ceremony at the hotel a bit over a month ago, how we'd exchanged necklaces, and as I thought of that, my hand went to my neck and felt the knot that symbolizes our relationship, I lifted my blurry eyes and looked around and saw all four of the girls touching their own. Did I just will them to do that? \n\nAs silence fell, Lexi slid up my body and kissed me, and the others leaned closer, our heads in a tight circle, Lexi spoke in a firm voice, steady amid the flurry of emotions, \"Jeremiah, I love you, I don't need a ring, or a ceremony, or a piece of paper. I never expected to have as deep a love as I have for you, and it's multiplied by three for each of my sisters.\"\n\nShe leaned over and kisses Kelly, softly, tenderly, then words came, \"Kelly, I love you, and I love the idea of us raising your child. I don't think it's a mistake that the child was created while all of us were forming our bonds. Your baby will know love like no other child.\"\n\nI felt troubled at her words, this child was a direct result of that first explosion of my powers, that exploited and changed the path of Kelly and Lexi's lives, drew Carmen into a life changing web of craziness that needed me to pull in my life-long friend. My guilt spun into a circle as I thought more about it, and then I felt Lexi's hand on my palm, covering the ring with her hand.\n\n\"J, before you spiral into your guilt,\" Lexi began with a quiet confidence in her voice, \"I know what happened. I know you changed me, I know you changed each of us. But you fixed us too, and we are fixing you. Each of us is a part of it, and it wouldn't be the same had one thing not happened. I'm not religious, or spiritual, but I think fate drew us together. I don't know where your powers came from, but they manifested at exactly the right time.\"\n\nI looked around and all the girls were nodding, none of them had any shift in their confidence that we were meant to be. I needed to change that feeling in me, to live up to what they wanted from me, and it wasn't self-doubt and remorse. It was time to accept my role, without reservation and with their confidence. My fingers closed around the ring, and slid it into the pocket of my jeans.\n\n\"I will make this all right, and I'll need your help.\" I said looking around, then centered on Kelly, \"are you okay, love?\"\n\n\"I'm good, Jeremiah,\" Kelly smiled, and brushed the last of the tears from her eyes, then that hand lowered to her flat abdomen, \"We are all part of this, and I know, I can feel... our love right now,\" she looked around, \"from all of us.\"\n\nI relaxed against the headboard and the weight of the girls shifted against me, we all held onto each other, and just rested in our thoughts, and minds, comforted by our own presence. My thoughts drifted to my mother and how she'd raised me. Would she be proud of me or repulsed? Was I becoming more like my father, a man I hardly knew? I needed to know his story, I needed to know more. Then I faded off to sleep.\n\nDistant Past:\n\nIsaiah drove through the rain, watching the mile posts as he got closer to the town where Katie and Jeremiah lived. His hand rested on the thigh of Samantha, touching lightly as they moved down the highway.\n\n\"I'm looking forward to seeing Katie again,\" Samantha said, \"it's been too long, I have a hole in my heart.\"\n\n\"I know babe,\" Isaiah said, \"I regret ever leaving it just got to be too hard living as we did with other people judging us, the problem was never between us and Katie.\"\n\n\"We should have brought her to live with us in Montana, the brotherhood would have allowed it, it is almost expected.\" Samantha replied.\n\n\"Honey, we've been over this,\"Isaiah replied with a touch of frustration, \"Katie couldn't leave her parents, and I couldn't let the brotherhood know I had a son. Too much would have been expected of us, and of him. I wanted him to be free to make his choices. I've told you that I was shunned by the brotherhood, they wouldn't have allowed me to keep him.'\n\nThey drove on in silence as the miles between them and their destination drew smaller. A few miles from the town, the wind and rain grew heavier, making the steering and visibility difficult, then as they crossed a narrow bridge, they were blinded by a pair of lights coming in the opposite direction. Isaiah swerved, but it was too late, the two cars collided in a violent collision and both cars tumbled off the bridge into a ravine. A few moments later flames shot up from the bottom of the valley as doors to nearby homes opened in response to the explosion.\n\nA car slid to a stop next to the ravine. It had been following about an eighth of a mile behind Isaiah's car, and the driver and his rather large companion got out and peered over the edge.\n\n\"Yeah, that was Isaiah's car,\" said the large man, \"I don't see how he could have survived. Did we ever find out where he was going?\"\n\nThe driver, a smaller man, shook his head, \"No, he left in a hurry, he dropped by the bank, then headed straight out of town. Didn't say a word to no one.\"\n\n\"We'd better contact Deacon, see what we should do,\" the large man replied, slipping back into the car.\n\n\"Damn it's really raining out, I hope there is an inn close,\" the smaller man said, slipping the car into gear, \"Deacon's not going to be pleased.\"\n\nPast:\n\nI snapped awake, and made all the girls stir while I pulled my wrist up to look at my watch. It was mid-afternoon, and we had an appointment with my Uncle at four. I knew I needed to tell him about Kelly's pregnancy. I was a bit worried about opening to him, but also assured that he would help me sort out the best path for me and my girls.\n\n\"Wake up, loves, we need to go see my uncle, I really want you to meet him, and we need to sign some documents.\" I gently prodded them.",
        "Aly stretched and yawned, still naked from the tryst in the kitchen, \"I had a weird dream, J,\" as she got up and hugged me close, feeling my need for comfort before I recognized it.\n\n\"The crash on the bridge?\" I asked just recalling that part.\n\nAly nodded, \"I think we need to tackle that box of your father's when we get back, there are clues in their, and we need to get to that safety deposit box.\"\n\n\"What are you talking about?\" Carmen said, pulling at the wrecked bodice of her dress, before giving up and just pulling it over her head, discarding it, and looking through her pile of clothes. \"I dreamt of a crash, but what does that have to do with J's father?\"\n\nLexi nodded with Carmen, \"Why are we all having the same dream? Who was in that car?\"\n\nKelly gasped, \"was that the crash that killed you mother?\"\n\n\"and my father, and his wife,\" I added, \"Aly and I just found that out this morning. I think we dreamt about their deaths.\"\n\nI walked over to my dresser and got the letter my father had written to me a few years before his death, and gave it to Carmen, \"This is all we really know, I got that from my uncle the day you and Lexi came home. He also left me a box of papers, a lot of money from his accounts, and a key to a safety deposit box.\n\nLexi leaned against Carmen as the both read the letter.\n\n-------------------\n\nJeremiah,\n\nIf you're reading this then I'm dead. I've always been plain with words. I left when you were four and I've thought of you often in the last ten years. I owe you an explanation for why I left.\n\nI loved you and your mother very much, Jeremiah. I know it might not seem like that. I haven't enjoyed been away from either of you. I have kept a close eye on you, and have tried to provide for you as I could. I could not stay with you for reasons that may have become plain to you, or will become plain to you.\n\nIt's hard to just say this in a letter. So I'll just say it. I'm a psychic, or something. I don't know exactly what to call it. This ability was passed down to me by my father, and has been in our lineage for generations. I'm able to see people's emotions, and can influence how they make decisions. If you're old enough, you might have experienced how this works. If you're too young to have had it manifest, then I hope you never do.\n\nIt can be a blessing or a curse. My grandfather was able to help many people. My father, however, used his gift selfishly, and brought ruin to our family. I followed my father's example, and shamefully damaged the people I loved. Specifically your mother and you. Be careful, Jeremiah, use your powers sparsely, and only to help. Don't use it for selfish gain.\n\nI know that sounds trite coming from your absent father. It could be true that I left selfishly. I have thought on that much over the years. You need to know, I left to protect you. You and your mother. I hope you can someday understand.\n\nI love you Son,\n\nIsaiah Jackson.\n\n---------------\n\n\"Well wasn't he nice to tell you in a letter from the dead,\" Carmen said sarcastically.\n\nI shrugged, \"I'm resigned that this has become a thing of fate, and I want to get ahead of it. My mother died when I was in high school, three years ago. On my 18th birthday, just before graduation. I'm wondering if my father was coming to talk to me, as I was getting old enough to have these powers manifest.\"\n\nI hung my head, and thought of my mother, \"She told me she was going to meet a friend in a nearby town, and she'd be back. It rained so hard that night... She collided with another vehicle, and both cars crashed into a ravine. It took two weeks to retrieve her remains. The other bodies had no identification on them, and their car was destroyed, nothing identifiable.\"\n\nLexi slipped beside me and hugged me, \"Oh J, I'm so sorry, I didn't know any of this about you.\"\n\n\"Well, I think we're all about to find out a lot more about me,\" I replied hugging her tightly.\" I can't help but think it's all connected somehow, that my powers or whatever, are more than I could ever imagine.\"\n\n\"I still smell like sex, and that lovely sun dress is ruined, you animal!\" Carmen complained with a smile, as Aly, Kelly and I started up the stairs, \"Do I have time to shower? I want to look nice for your uncle and not smell and look like a whore.\"\n\n\"If you're quick, we have a little over an hour,\" I said with a smile, \"think you can look fabulous in that short amount of time?\"\n\n\"Lexi will help me,\" Carmen said with her fabulous sexy smirk, \"the damn girl still has sex all over her too!\"\n\nLexi giggled and let Carmen take her hand and drag her into the shower, while the rest of us headed to the kitchen. Next to the door was the box of paper from my Father. After redressing with her discarded clothes from this morning's bawdy scene, Aly lifted up the box and started looking through the contents, adjusting her glasses as she peered through the contents. Kelly, still looking worried and shocked, started putting away the remaining groceries that were left out while we had our impromptu scene.\n\nAly looked at me, and turned her eyes to Kelly, and I knew she wanted me to help her, and stay close. Aly had already started making piles of similar documents, notebooks, envelopes and batches of photographs. I slipped next to Kelly and helped her put things away.\n\n\"I think it was that first night,\" Kelly said softly, \"The first time we had sex, when you took my virginity, among other things. I've done the math, and it had to have happened then, maybe at the hotel.\"\n\n\"I was partially drunk, and I wasn't thinking,\" I started softly, \"I'm sorry, Kelly.\"\n\n\"You're sorry, I'm pregnant?\" Kelly asked turning to lift her blue eyes up to mine, \"Or sorry you're going to be stuck marrying me?\"\n\n\"Kel,\" I said softly, grabbing both of her hands, and pulling her to me, lifting my hand to her cheek and tilting her chin up to look at me, kissing her softly, then pressing my forehead to her, \"my love, I'm not sorry about the consequences, I'm sorry that I didn't think things through. I was too overcome with just discovering my power. I had no...\" I drifted off, feeling like I was babbling, then restarted, \"It was fate, it was meant to be, you here with me, feels right, as much as it feels with each of the others. You were meant to be the mother, I feel it, the more I think about it.\"\n\n\"I'm a mess of emotions, J,\" Kelly said, her eyes dropping to my chest, then lifting, \"But I know what you say is true, I'm happy to be carrying your child, it's not how either of us would have planned it, but it was ... meant to be.\"\n\n\"Do either of you know where Pinebluff, Montana is?\" asked Alyssa.\n\n\"Never heard of it,\" I said, but went to go find my road atlas, and settle into the couch, Kelly filed after me, and settled next to me, as I looked through the index.\n\n\"Well it is where most of your father's accounts are,\" Alyssa said and slipped on the other side of me, as I started flipping through the sheets.\n\n\"There is my college,\" Kelly said, pointing the the town as I went through the pages, \"or... was my college...\"\n\nThe college town was on the border of Washington and Idaho, and I flipped three more pages and found the minuscule town of Pinebluff just over the Idaho border on the edge of Montana.\n\n\"About 50 miles south of Missoula, in the shadow of the Bitterroot Mountains.\" I said, then backtracked a few pages following a road, \"And about 250 miles from the girls' old school. Is that a coincidence...?\"\n\n\"I don't know,\" Alyssa said, \"your powers bloomed a lot closer to Pinebluff than they would of if you were home. There might be a geographic component to it...\"\n\nCarmen swept up the stairs in a blur, with the red-headed Lexi right behind. Carmen looked lovely in a pair of jeans and a nice blouse, her black hair neatly pulled into a ponytail, wearing dark eye makeup that set off her eyes. Lexi chose a simple green dress, that brought out the sparkle in her eyes. She wore her hair down, still damp and forming ringlets as her hair dried. They both looked marvelous. \n\nThe four girls gathered in a circle and primped each other, Carmen smoothing Aly's dress, making sure the bodice supported her bra-less breasts. Lexi hugged Kelly in her special way, then checked her makeup and smoothed her skirt. I took a moment to remind myself how lucky I was, to have four sexy and caring girls in my life, and wondered what I had done to deserve this. \n\nThe shift of the mood had brightened as Carmen and Lexi had joined us and we were ready to go.I gathered my family together and we walked the short distance to my uncle's office. Greeted warmly by his secretary as I introduced all of them to her, then we filed into his office.\n\n\"Uncle Thomas, I want you to meet, Kelly, ... Alyssa, ... Carmen and Alexis,\" I said to my Uncle.\n\n\"Please, call me Lexi, I can't stand being called Alexis.\" Lexi said with a smile.\n\n\"Then I demand you call me Tommy, young Lexi.\" Thomas said with a wink.\n\nI sat down between Kelly and Aly in a small love seat, while Carmen and Lexi sat in chairs. Uncle Thomas had five sets of documents piled in a row, and was about to talk about what they were, when I stopped him,\"\n\n\"Uncle, there has been a development, surprising and unforeseen, and we need your advice.\" I said, trying to work my way up to telling him.\n\n\"I'm pregnant with Jeremiah's child,\" Kelly said with a smile, \"I just found out this morning.\"\n\nAly leaned in with a smile, as Thomas' face turned a shade darker in concern, \"We're all happy about this, me especially. This doesn't change the relationship we have, it just makes things different in the eyes of government.\"\n\nThomas chuckled, \"I had you pegged as a pragmatist, Alyssa, I take it that the marriage license will need to be in Miss Kelly's name?\"\n\nAlyssa smiled, and gripped my hand, \"Yes, that is what is best for Kelly and the baby.\"\n\n\"That only changes two sets of documents,\" Thomas explained, \"The marriage license is something that will take some time, there are requirements the state has, for pre-marital counseling, that we'll need to jump through. For now, though, these documents will do for all of you as written. They name you as beneficiaries of Jeremiah's estate, in the case of his death. I don't think that will be anytime soon, but Jeremiah wanted to make sure all of this was in order as soon as possible.\"\n\nThe girls shared glances and looked at me, as Thomas continued to explain my conditions. \n\n\"Some of the documents give you access to a joint cash account, this is part of Jeremiah's normal funding and is supplemented from his grandfather's trust,\" Uncle Thomas passed each girl a smaller set of documents and pens for their signatures, the balance on the account caught them by surprise, each looking at me.\n\n\"You've got to be kidding,\" Carmen said, \"J, I can't accept this, how do you know I won't just take the cash and go back home? This is a bit reckless.\"\n\n\"Carmen, I'm certain you don't want that, and you hypothetical is invalid,\" Uncle Thomas continued, \"The contract also has stipulations that will close any account at the behest of Jeremiah. This is really quite standard for people with a sizable inheritance.\"\n\n\"Well, I ...\" Carmen closed her mouth, and looked at the papers then signed her name.\n\n.\n\n\"This next set of documents sets up the insurance requirements and rest of Jeremiah's assets, including the funds that he just received from his father's estate.\" Uncle Thomas droned on, \"The probate on that lasted three years because it took so long to declare him dead, since they never found his body. The only connection was a stray serial number on his destroyed car. The accounts are well established, and have been accruing interest since his death. It has effectively doubled Jeremiah's wealth.\"\n\nKelly now blushed red, as she looked at the figures, \"You don't need my parent's investment in this at all, do you?\"\n\n\"No, I don't,\" I stated, \"but it helps to have other investors, the inn is a bit of a risk. If it doesn't work out the way we expect, I may have to get a job.\"\n\nThe whole document signing took a little under an hour, and by then the girls were all in various states of shock. Even Alyssa hadn't realized how wealthy I was. I wasn't very comfortable with my wealth, I never made a show of it, and the whole thing usually left me in a state of embarrassment. I was relieved though, to have the cat out of the bag. I felt a little unburdened at knowing my companions had full knowledge of my wealth. They knew, and at least forgave, my character flaws and all. They understood I was a man that wanted the best for them, to treat them well. I knew they loved me for that, and not for the money I had. \n\n\"With that all finished,\" Thomas said, \"Let's talk practical matters.\" As he looked at me with a serious look.\n\n\"You need to figure out where your father comes from, Jeremiah.\" Thomas started, \"This much money moving will gain attention, and the events of his death have become ... very strange. As usual the accounts are secure and private, much of the big money offshore, but in these circles people don't mind bribing to get a name, and then they'll soon find out about you. What you are doing with your life might become more and more scrutinized.\"\n\nThomas looked over at Kelly, \"Do you think your parents will understand about your pregnancy? Will they be happy, or pull out of the partnership with Jeremiah?\"\n\n\"I don't know, Tommy,\" Kelly said, \"But we're meeting with them tomorrow, I can't hide anything from my mother, and I'm no longer willing to keep things secret.\"\n\n\"None of us are,\" I interrupted, \"at least not with family. Kelly's parents are family now, I will hopefully explain that well to them.\"\n\n\"Okay, I think that is wise.\" Thomas said settling back into his chair. \"I'm going to try and use some resources to back-trace this money, so we can get an idea of who might be looking over your shoulder. I will do it discreetly, but we need to all focus on finding out more of Jeremiah's father.\"\n\n\"We'll sort through that box tonight,\" Alyssa said, \"We'll bring back any money related papers to you. I'm curious about his history, I think we might need to go to Montana to find out.\"\n\n\"All of you?\" Thomas asked with a raised eyebrow.\n\n\"Uncle, we're not ever going to be apart, so yes, all of us.\" I stated with determination.\n\n\"Good, then I think you're ready.\" Thomas said, \"Come back tomorrow and we can talk again.\"\n\nWe all left and started walking home, silent in our own thoughts, but all twisted together.\n\n\"I am glad I never knew how well off you are, J,\" Lexi said, holding one of my hands in both of hers, and leaning into me. \"I know I love you for you, and this .. it's nice, but I don't need it.\n\n\"Me too,\" said Carmen, \"I know what I said in there was ... well, it's what the people I grew up with would do, it's messed up, and I've seen lived ruined over much smaller amounts of money. I don't want or need your money, Jeremiah.\"\n\nAlyssa smiled, \"I don't think Jeremiah wants it either,\" as she bussed my cheek with a kiss, \"which is why he hides it, money isn't important to him, which is why it isn't important to us.\n\n\"Well, it's nice to not have to fret over keeping the heat on,\" I said nonchalantly.\n\nI chewed on the words Aly just said, I could interpret it as myself being the catalyst for how my girls felt about things. I wasn't sure it was true, but I couldn't discount it as false. \n\n\"Anyway, that's over,\" I continued, \"Should we order Chinese and dig into that box of papers?\"\n\n\"Yes,\" said a chorus of four voices, and I smiled at their enthusiasm, but also thought it was too easy getting four females to agree on anything.\n\nI shouldn't have worried, it took them the rest of the walk home to decide on what dishes to order, and the order kept growing until we had enough food ordered to last three meals.\n\n*****\n\nAuthor's Note: Synopsis - Kelly is pregnant, and all the group is going to stay together and raise the child as a family. Jeremiah is filthy rich, and his father's inheritance made him even filthier. The chemistry hive-mind of the fivesome is very entangled and that is sometimes a worry for Jeremiah. We find out how Jeremiah's father died and some pretty shady characters were following him, what do they have to do with any of this?\n\nMore to come, and more sex, I promise. Still looking for an editor, trying to be careful and edit myself, but that's not my strength.\n\nAs always I covet your views, votes and comments. Thank you."
    ],
    "authorname": "HankDolworth",
    "tags": [
        "drama",
        "mind control",
        "quickie",
        "mystery",
        "back story"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-designer-pt-02-ch-03"
}