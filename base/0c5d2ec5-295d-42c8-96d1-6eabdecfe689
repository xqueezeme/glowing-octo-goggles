{
    "title": "Hypergeniture Bk. 01 Pt. 02",
    "pages": [
        "BOOK ONE \u2022 PART TWO\n\nAuthor's Note: Thank you to everyone who has engaged with this story already! Your comments, feedback, favourites and ratings are wonderful and most welcome.\n\nThis part sees the world of the story expand. There are new sexual adventures, new threats, new facts... The mysteries of the world won't be answered quickly, if they are answered at all. I hope you enjoy and start thinking about all the possibilities -- all the danger and all the opportunities.\n\nPlease enjoy this next part and leave a 5-star rating if you are so inclined. After this part, there will be a slightly longer wait for the next one as I will be traveling for a couple of days.\n\nAll sexual activity is between characters that are 18 or older. This is a work of fiction and any resemblance to real persons, places or events is purely coincidental. The below is not intended to serve as a template for real life sexual encounters or relationships, nor should it be regarded as such. Stay safe, happy and healthy! :-)\n\n----------------------------------------\n\n14 \u2022 Terminal\n\nThe cross pendant on Isabelle's necklace swung around as she splashed her face with cold water. Her faith was straining.\n\nShe had just killed a man.\n\nAs the crowds flooded onto the street, she knew something was wrong. She grabbed the gun she wasn't supposed to have -- the gun Alicia made her buy. Forcing open the door of the Maybach, she started moving through the stampeding mass of bodies.\n\nIt wasn't easy, and the people almost crushed her, but she was determined to push through. Then, when she saw her boss and her colleagues locked in a struggle, she knew what she would have to do.\n\nThe first shot wounded one of the attackers. The second made him slump to his death.\n\nFiring a third shot, Isabelle wounded a second attacker in the shoulder. She thanked god that not one bullet hit the crowd... She knew she was lucky.\n\nEveryone got away in the end, and that started the longest 12 hours of the young American's life. She would surely go to prison, although they managed to flee the scene before the police arrived. Then, there was her boss... Surgery had been quick and dirty -- supervised by a top doctor who pledged to keep quiet and agreed to operate at a private plane terminal.\n\nIsabelle couldn't think straight as everything swirled around in her head. All thoughts of losing everything, but without any regrets. She would do it again if it meant protecting her people.\n\n\"He's waking up,\" Alicia interrupted, causing her partner to stop washing her face. \"He'll want to see you before you leave.\"\n\n\"Have we decided where I'll be hiding out?\" Isabelle asked.\n\nAlicia shook her head; she never envisioned having to spirit away one of her colleagues. There was no plan for this.\n\n\"You know it's fucking cousin, right?\" Isabelle spat. \"There's no way we had a leak. The only other person who knew--\"\n\n\"We'll focus on that later--\"\n\n\"I'll kill her!\"\n\n\"We can't be sure, Izzy. Now, c'mon, he'll kill me if he doesn't get to see you.\"\n\nIsabelle nodded, turning off the tap and checking herself in the mirror. Professional conduct still applied and she wanted to look neat for the boss. More than that, she wanted to show him that she wasn't scared.\n\nAs they entered the 'recovery room', the two women stood either side of their wounded principal. He was sweating, his eyes tearing up, his face red, his words slurred... \"My sisters! Where are they?!\"\n\n\"We sent a dozen men to go protect them,\" Alicia assured, gently squeezing a shoulder.\n\nIsabelle reached for Oliver's hand as tears started flooding down his cheeks. He was clearly delirious. \"Tell them I love them, please! I don't... I don't have a will...\"\n\n\"You're not going anywhere, sir.\"\n\nOliver grumbled then whimpered; his skin glowing bright red and his eyes looking dull. Alicia was enraged, \"Doctor! What the fuck is going on?! You said he was out of the woods.\"\n\nA wrinkled old man with a full head of silver hair approached. He hardly looked at his patient as he spoke, \"He's perfectly fine, aren't you, Mr Orwell? We've had to be aggressive with your treatment; that's all you're feeling.\"\n\nAs Oliver continued to writhe, Isabelle felt tears rolling down her cheeks. \"Boss, I need to go away for a bit.\"\n\n\"No! No... Why?\"\n\n\"We kept a gun in the car for emergencies. It was unlicensed, but I had to use it... Don't worry, boss, I didn't waste a single shot and I'd do it again.\"\n\nOliver's breathing was becoming even more laboured. Suddenly he shut his eyes as if the room grew brighter and burned them. He looked motion-sick, like he was trying to overcome nausea and dizziness. Isabelle and Alicia watched as he gnashed his teeth responding to what must've been terrible pain.\n\nAgain, the silver-haired doctor insisted it was all fine.\n\nSpeaking through the agony, Oliver begged Alicia, \"Let Isabelle come with us! Wherever we're going to hide, she can hide there too.\"\n\n\"No, sir,\" the protector answered. \"We're going as far south as possible. We need to split everyone up for a little while, just to be safe.\"\n\n\"No!\" he bellowed; making his bed shake as he seethed.\n\n\"It's for the best, sir. Everyone will be safer for it!\"\n\nFor a moment, it seemed like Oliver wanted to say more. It was like his tongue was stuck in his mouth and both women grew even more concerned. Suddenly, a young trauma doctor who'd been called to assist joined them. He was furious. \"What the hell is going on here?!\"\n\n\"Nothing to worry about. He's perfectly fine,\" said the older doctor.\n\n\"Fine?! Are you insane?\"\n\n\"Listen here, I have decades more experience--\"\n\n\"Experience treating rich people for scrapes! I've worked with hundreds of stab victims and this isn't how it's supposed to go. Sedate him before the pain kills him! You're torturing the man!\"\n\nAs the medical team scrambled, Isabelle felt Oliver's grip on her hand loosen.\n\n15 \u2022 Assegai\n\nI watched the old ceiling-fan spin dust around the bedroom that had become our sanctuary.\u00a0\n\nWhen we arrived, it was clear our hideaway had been abandoned a long time ago. Yet, even among the sparse dated furniture and cobwebs, I felt safer than I could in any penthouse or mansion.\n\nAs I turned onto my side to get a little extra sleep, my sister's finger hooked my collar. She pulled it down, leaving a secret kiss that seemed a silent prayer of thanks. It wasn't a romantic kiss, nor was it the kind of kiss often shared between siblings. It was an Elle kiss: a kiss only she could give, and only I could receive. Our kiss.\n\nShe hadn't left my side being anxious and afraid and wanting to care for me. Meanwhile, Tecla was hidden away on another continent with our mother. She lost the coin-toss between twins that decided who goes where.\n\nMy security bosses insisted on splitting us up. They were certain my enemy could only attack one place at a time.\u00a0\n\nElle draped her leg over mine and wrapped an arm around my torso, pulling herself closer to me. \"I bet you can't wait to see Tecla. Then you'll have both your sisters pampering you with love.\"\n\n\"It almost makes getting stabbed worth it,\" I smiled weakly. \"You two have never been apart this long... It must be agony.\"\n\nResigned whimpering was all the answer I needed. My little sister rolled out of our embrace and got to her feet before rounding the bed to open the curtains.\n\nAt first, Elle simply peeked through them. A slither of sunlight cut across my face -- peppered into my eyes like a sticky glue that kept them from opening. I pushed through the discomfort and soon my vision was adjusting. I let my body grow heavy and sink into the mattress. The old springs compressed and I groaned in unison with their metallic clang.\u00a0\n\nAs my eyes focused, I couldn't help but throw a compliment my sister's way as I watched the morning sun trace her shape. \"God... You are gorgeous.\"\n\nElle laid a hand on her heart and blew me a kiss with the other before stretching her body. I watched as her legs tensed from her toes to her thighs, ending at the shorts of her tattered summer pyjamas. Like her twin, she was almost lanky, yet she composed herself with a maturity that few could ever muster. Her long inky black hair fell to the small of her back as she cleared rogue strands from her face. Then, with a yawn, she gripped the room's curtains and split them apart to reveal a green valley outside. As I adjust to the new light, Elle clambered over me, settling her slim-strong body against my frame.\n\nThe world beyond our enclave consisted of hills and mountains in shades of green and yellow. It was all garden paths and god-sculpted topography.\n\nWe were just outside Cape Town, South Africa, on a wine-farm that had seen better days. Watching the world through the dirty glass, I could smell the sweetness of the sunbaked soil. Yet, the pleasant feeling was soon overcome by the taste of metal -- the taste of fear.\n\nIn a way, our little place between the rocks and dirt was limitless. In another, the shadows cast a net that boxed us in.\u00a0\n\nAs much as I enjoyed being in Elle's arms, I had a long day ahead of me. I allowed myself the luxury of a few more minutes in bed before slowly rising to my feet. As my back straightened, I felt a little better about life than I had the day before.\u00a0\n\nIt was the feeling of recovery. The feeling of a body healing.\n\nElle decided she'd be staying in bed for a while longer as I padded to the kitchen on bare feet. The rest of the winery was much like my little bedroom. Dilapidated.\n\nThis place was definitely not as glamorous as the London townhouse, but it told its own story. In truth, I'd never seen the farm listed on the documents I trawled through for the inheritance. That's how much I had -- how many material things I possessed -- that 'forgetting' a whole swathe of land seemed almost trivial.\n\nI walked past a bank of wood-framed windows that looked out over the other side of the farm. Here, I caught sight of the vines in the distance that seemed so lush in contrast to the house itself. I could even spot a couple of horses that seemed well cared for by the handful of workers that roamed the grounds. Reaching the kitchen, I found Alicia prepping our regular breakfast: toast and eggs.\u00a0\n\nMy protector wore thick make-up to conceal bruises she'd sustained on my behalf. By her standards, she was casually dressed, wearing jeans and a rather masculine shirt. The clothes didn't make her look severe or less feminine and the smile she gave me was soft. Sweet.\u00a0\n\nShe had saved my life. She kept me safe.\n\nA wooden cane leaned against the kitchen counter. It was another sign of Alicia's injuries, but she never used the thing in front of me. Pride made her pretend her ribs didn't hurt, or maybe she just didn't want to worry me.\n\n\"Good morning, sir,\" my protector greeted, bringing over a tray of Rooibos tea.\u00a0\n\n\"By now, we should be on a first name basis.\"\n\n\"No... That wouldn't be appropriate.\"\n\nThere was no need to argue and I conceded as we sat down. Despite the formalities of our relationship, we'd spent the last few days eating at the same table.\n\nI drank from the steaming cup of tea. The red and sweet liquid was therapeutic; settling me into the day.\n\nAlicia started our morning with good news. \"Scotland Yard have taken responsibility for the shooting of the men who attacked us.\"\n\n\"But it was Isabelle--\"\n\n\"Not according to the UK government.\"\n\nI couldn't help but express relief, \"So, she's in the clear?\"\n\n\"Well, there's definitely a cover-up going on. I want her to lie low for a few more weeks.\"\n\n\"Does any of this make sense to you?\" I asked with a hand on my temple.\n\nAlicia shook her head. She couldn't offer answers, but she did produce one piece of new information. \"This might be hard to watch,\" she said, handing me her phone.\n\nIt was CCTV footage from the night of the attack. The sequence opened on the street, time-stamped when we should've arrived in the area. One of our attackers was on his phone, coordinating with someone. His friends seemed to be loitering near the edge of the frame, but you couldn't see them clearly.\n\nThe video cut forward to when we actually arrived. One man checks where we park while two slip into the club. Now, I was looking at an interior camera that had eyes on the dance floor. The men try to open the door to the service corridor but fail. Yet, just as they're walking away, we open it from the other side so I could get to a bathroom... We walk right in their direction.\n\nI put the phone down, not wanting to watch the actual attack. Not wanting to relive the absolute horror of those sights and sounds.\n\n\"They had intelligence,\" I inferred. \"Who were they on the phone with? Are we any closer to finding out?\"\n\nAlicia confessed ignorance, \"The Mayfair house has been swept for bugs twice. Everyone on your detail was near either you or someone else, so they couldn't have made the calls. All we have is this... We know they're part of a specific street gang. One that keeps exotic pets and coats their blades--\"\n\n\"Yes, I know,\" I grumbled. \"Sorry... It's hard hearing about it. Sometimes--\"\n\n\"It's like the pain isn't there until you're reminded of it?\" Alicia completed with her own body having been attacked.\n\n\"That's exactly it... Alicia, if Natasha is somehow involved in all this, it will kill me.\"\n\nMy protector was sympathetic, but there was nothing she could say to guide me either way. The truth was we knew very little and the police cover-up meant we might never know anything more.\n\n\"At least we can now assume my benefactor and your former employer was murdered,\" I speculated. \"She didn't fall -- she was pushed -- and much like our attack, the police covered it up.\"\n\n\"Yes, sir,\" Alicia accepted. \"I wasn't there for her, in the end...\"\n\nFor a second, it felt like the stoic brunette's hand was inching towards mine, but it never quite got there. We took a shared breath -- in sync and in solemnity -- before moving on.\u00a0\n\nThere were some things we could still control and Alicia started briefing me on my day. \"The doctor will come see you, then you have the meeting with my friend... Your cousin will arrive during. Don't worry, our people will help her get settled.\"\n\n\"And when do you see the doctor?\" I asked.\n\n\"Only tomorrow, sir. I'm already feeling much better.\"\n\n\"I'm glad to hear it!\"\n\nAlicia exhaled contently as she turned her attention to her plate and we ate together. There was something very familiar about the way we could live in the same space. It was seamless -- two people joined at the hip by strange events outside their control.\n\nI wanted to theorise more about the attack, but the sound of Elle leaving the bedroom took my mind off intrigue and violence.\n\nEvery morning, Alicia would stand when my sister walked into the kitchen. It was a show of respect and a sign of the tension between them. It's definitely not something she would do for me, but she knew I didn't have those expectations. She knew she didn't have to win my favour.\n\nShe had it. Eternally.\n\nThe same was not true between her and Elle.\n\nAs sweet as my little sister was to me, she could be harsh on other people. This was especially true of other women, who all seemed to remind her of our mother or pose a threat. Joining us, she seemed ultra-alert. She sat down, started eating, only to drop her cutlery a minute in. \"When are you leaving, Alicia?\"\n\n\"I... Uhm...\"\n\n\"Are you still leaving?\" Elle asked, uncomfortably.\u00a0\n\nNot sure what was going on, I tried to get to the bottom of things. \"What's this talk about leaving?\"\n\nAlicia's ears turned red and her usually cool exterior shattered. \"It's something I mentioned to your sister, sir,\" she explained. \"Because I failed... Because you got hurt--\"\n\n\"Oh, shut up!\" I snapped, rubbing the back of my neck as my thoughts briefly went blank.\n\nIt was not my intention to be crass, but the stinging pain in my torso and the prospect of losing Alicia put me on edge. In the moment, I was mad at Elle for being so subtly bitchy, mad at Alicia for wanting to leave, and mad at the world for existing.\n\n\"You didn't fail,\" I assured. \"You wanted me to wear a stab vest -- I refused. You wanted me to stay home -- I refused. If you intend on resigning, I won't accept it. Then again, if you feel I'm too difficult a customer--\"\n\n\"No! No... Not at all, sir. Uhm... Maybe we both messed up?\"\u00a0\n\nElle wasn't pleased, but she also wasn't the type to throw a tantrum. Instead, she awkwardly pressed her case, clearly wanting Alicia gone. \"She's already found a potential replacement who'll be arriving this morning.\"\n\nAlicia confirmed, \"Yes, I was going to introduce her to you after breakfast.\"\n\n\"Her?!\" Elle scoffed, breaking her soft demeanour with uncharacteristic irritation. \"Why does it have to be a her? Since when do so many women work as bodyguards?! Isn't it a little butch?\"\n\nI rolled my eyes. Alicia definitely wasn't 'butch' -- her baby-face giving her a distinctly feminine appearance.\n\nMy sister's tone was beginning to irritate me and I felt it was my job to settle her down. I put a hand on hers and gave a stern look that told her everything she needed to know.\n\nAlthough she flicked her hair and huffed, Elle followed my lead calmed herself. After all, I was her big brother and that counted for a lot.\u00a0Without a dad, and with an absent mother, I was the one who always had to 'discipline' my sisters. At the very least, I was responsible for teaching them manners.\n\nI never wanted to lord over the twins but, every so often, a stern hand was necessary.\u00a0With Elle settled, I started dealing with the situation she had helped create.\u00a0\n\n\"I'll meet with the new protection agent,\" I conceded. \"She can fit in somewhere, I'm sure. Who's my current head of security?\"\n\n\"You don't have one,\" Alicia responded.\n\n\"No wonder I got stabbed.\"\n\n\"Yes.\"\n\n\"Well, the job is yours. The new agent will take over your old position and you'll focus on management.\"\n\nAlicia seemed excited by the fact I insisted she stay (and the promotion). She did well to hide it though -- her cool facade restored after my sister's shock tactics.\u00a0Turning to Elle, my new head of security flashed an almost motherly smile. \"Why don't you and I go do something while Mr Orwell meets with my friend?\"\n\n\"Like what?\" my sister interrogated, skeptically. \"I wanted to go to the meeting with him!\"\n\n\"Well, if Mr Orwell allows, I would like to take you to the firing range. It's on the farm, so we won't have to go far, and it could help to learn a little about self-defence. After what happened...\"\n\nI approved, \"That sounds like it could be good for you, sis! Please be careful though... Don't shoot each other.\"\n\nElle's animosity toward Alicia seemed to fade at a rate of knots. In fact, she looked delighted at the prospect of firing a gun for the first time.\u00a0\n\nSeeing a ceasefire made me happy. When Alicia left to prepare for their trip, I had a moment with my sister. \"Don't feel threatened by Alicia--\"\n\n\"I don't!\"\n\n\"Then why are you so rude to her?\" I asked.\n\n\"I... I didn't mean to be rude, Olly. I promise... It's just... Everything is so confusing and there are so many new people.\"\n\nI understood. \"I think you'll learn to love her. She's very nice, and she takes good care of us. Enjoy your afternoon with her, sis.\"\n\n\"Okay... I'll try.\"\n\nI smiled, pulling my sister in for a hug and leaving a brotherly kiss on her forehead. \"Love you, Elle.\"\n\n\"I'm glad you're alive,\" my sister began sobbing and I held her closer.\n\n\"It's going to be alright, sis. It'll all be okay.\"\n\nElle gave me one final squeeze before heading for the door. \"Do you want me to make you some more tea before I leave?\"\n\n\"No thanks,\" I turned to my sister, but she wasn't there.\n\nI shook myself awake, thinking I was simply exhausted. People imagine things now and then, don't they? Surely, it was one little slip-up and nothing to worry about.",
        "\u2022 \u2022 \u2022\n\nLeaving the breakfast table was hard -- standing up was painful due to the wound.\n\nThe doctor's visit only told me things I already knew. He seemed intent on reminding me how lucky I was; even mentioning that the type of blade used caused a cleaner cut. I didn't tell him about my little moment in the kitchen and, after his visit, I made my way back to the bedroom.\u00a0\n\nI was still wearing my sleeping clothes, which wouldn't do for my meeting with Alicia's friend. He was apparently a man who'd lived a thousand lives and he could help explain what happened in London.\n\nMy shirt was easy to remove -- loose-fitting by design so it didn't graze against my scar. Next, I had to pick something from the hastily assembled wardrobe that Elle ordered for me. There wasn't anything business-like, so I said fuck't and grabbed a t-shirt.\u00a0\n\nI scolded myself as the tight fabric reached the sensitive tissue around my scar. \"Fuck, fuck-ity, fuck...\"\n\n\"G'day, sir. Do you need a little help there?\" an unfamiliar voice, with a distinct Australian accent, intruded.\u00a0\n\nI looked up to see a gamine young woman with a short and punky asymmetric blonde haircut. She looked like a character fresh off the pages of a young-adult novel -- a heroine for our time. Her bright pink lips and dark-blue blazer, matched by a white linen shirt, were casual yet refined. A surfer's necklace hung proud next to a cross pendant. Like Isabelle, she seemed to be Catholic.\n\nThere was no mistaking who this woman was. Her tall and proud posture and expensive clothes made sure of that.\n\n\"You're the new protection officer?\" I guessed.\n\n\"Hit the nail on the head, sir. Can I give you a hand with that?\"\n\nI declined. \"No, thanks. It seems like it would be a little awkward... Uhm?\"\n\n\"Skylar,\" she introduced herself. \"Are you sure I can't help? I used to work in Los Angeles, so this hardly the worst thing I've ever had to do on the job. Plus, I'm a qualified medic...\"\n\nI sighed and let the insistent Skylar give me a hand. \"Army medic?\"\n\n\"Oh, hell no,\" the blonde chuckled. \"Professional lifeguard then did a little more training before getting bored and branching out... Ended up in Hollywood, babysitting adults. After that, I wanted to do something different... This is different.\"\n\nI appreciated the openness. \"You know, someone might try to stab me again. Are you up for that?\"\n\nThe blonde started helping me out of the tight-fitting t-shirt with careful hands. \"Sir, I've never been much more than a fashion accessory with a gun. I welcome a real job, and I'll have your back.\"\n\nStrangely, hearing Skylar talk like that made me feel closer to Alicia. I could already tell she'd picked the right person for the job. She knew me well, like we'd been in each other's lives for a decade or more.\n\nSkylar helped me into a more comfortable top and I thanked her. \"You know, my one sister won't like you in the beginning. Her twin will love your look and your personality. Then, there's my mother... She'll probably throw things at you just for the hell of it. Do you think you can handle that?\"\n\n\"Sounds like a party, sir,\" the blonde smiled naughtily.\u00a0\n\nI knew in that instant she'd have my back and be my partner in crime.\n\n16 \u2022 Uyezwa?\n\nThe world around the farmhouse was pristine. It seemed the land was being worked and worked well -- only the house left to fall apart.\n\nI met Alicia's friend, Aaron, in the garden. He was a large man -- giant almost -- with dark brown skin that carried the scars of old age. When I approached, he was coughing into his sleeve. He pulled a cigar and lit it in the same motion; smiling with the cylinder between his lips as we shook hands. We held that handshake for almost a minute as we analysed each other. He had a good poker face and an easy charm, wearing a suit that was far too big for him, but which probably cost more than a small car.\n\n\"Ah, the man I've come to see!\" my companion exclaimed between puffs. \"Alicia has told me so much about you, yet I doubt she even mentions me!\"\n\n\"Actually, she was very excited for you to arrive. It's a shame she's not here to say hello.\"\n\nAaron laughed until he was wheezing. He then offered me a cigar, which I politely declined. \"Are you sure?\" he asked. \"It's genuine Cuban. You can only get them there!\"\n\n\"I would love to, but if my sister catches me smoking...\"\n\nAaron understood, \"Ja? That's the thing with women: they know what's best for us.\"\u00a0\n\nWe walked to a bench underneath the canopy of a large tree and sat next to each other.\u00a0The old man was a domineering presence; his shoulders broad and body tall. I could easily recognise a gentle giant, but this man's gentleness was firmer than most. He was sweet, but he also commanded respect with the depth of his voice.\n\n\"So, youngster, Alicia thinks I can help you. I will start by telling you that I'm not a spy or policeman, and the only answers I can give are because I have many friends.\"\n\n\"Friends like Alicia?\" I wondered aloud.\n\nAaron shrugged, almost wistfully. \"I knew her father, when she still lived here in the Cape.\"\n\n\"Here? In South Africa? Well... I always thought she was Dutch.\"\n\nMy companion started laughing his wild and unpredictable bark of joy. \"Dutch! Don't let her hear you say that! The young Afrikaners are very sensitive to that word, even though she's a boeremeisie at heart.\"\n\n\"Huh?\"\n\n\"A farm girl with Voortrekker roots,\" Aaron explained unhelpfully. \"Ja, what I mean is that her heritage is as Dutch as it comes. But, for her generation, feeling South African first and foremost is vital. Surely, she must've told you that this was her father's farm? Well, it's hers now...\"\n\nI was in disbelief! \"No, she never mentioned a word of it. Why doesn't she live here?\"\n\nImmediately, I sensed that I wasn't going to get the full story as the old man leaned forward. \"It's not my story to tell, chap... I used to visit here when she was little and one day I was driving when I saw a girl dragging a sack down the road. Stopping, I saw it was my Alicia and tears were running down her cheeks. She said to me, 'Ntate, I want to run away', so I went to go see her mother... I helped them run away.  Uyezwa?\"\n\n\"Huh?\"\n\n\"I'm asking if you understand.\"\n\nTensing my fingers, I felt a lump in my throat as I imagined the reasons a daughter might have for fleeing her father. I understood...\n\nSensing the angst, Aaron broke into a gruff laugh as if he had only fond memories of the past. \"Getting them out was tough! Her father had influence and power, but Alicia has many true fathers and mothers. People who met her here and there and love her beyond all words.\"\n\n\"She is easy to love,\" I confessed.\n\n\"Ja... Men who were enemies at the time came together to help her and her mother. Policemen, spies, politicians... Very senior people who had no reason to do it other than because they wanted to help. Some of these men were torturers whose cold hearts couldn't stand this one tragedy. It was a terrible thing, but we did a beautiful thing because of it.\"\n\nI shrugged. \"That's the best we can hope for in this life.\"\n\n\"Don't be nihilistic, chap.\"\n\n\"Why did she never come back?\"\n\nAaron waved away my question. He was done talking about the past, yet there was one thing he felt he needed to say.\n\n\"There is no country in the world like ours,\" he said proudly. \"No other place where it is so essential for people to look past their differences. Ja, but the difficult thing is when we have to do that for ourselves... Alicia is white and she's African -- she's African and she spent most of her life outside Africa. How do you think that makes her feel? She speaks half-a-dozen languages, but which one is her mother tongue? Where does she belong?\"\n\n\"Wow... I can't even imagine--\"\n\n\"No need to imagine!\" Aaron laughed until his laughter turned to coughing. \"She belongs with you, chap! I've waited years to see her find a purpose after all the disruption. Now, she has a mission that matters. Don't disappoint her and she won't disappoint you.\"\n\nI nodded apprehensively, feeling pressure land squarely on my shoulders. With a pat on the back, my companion offered me a chance to talk about the true reason for his visit.\n\n\"So, what can you tell me about the people who attacked me?\"\n\nBeaming a smile, Aaron took a tattered notebook from his pocket. He wasn't actually going to read from it, but it was a useful crutch for a man of advanced age -- a fail-safe for if his memory flickered. \"The thugs who attacked you? A regular bunch of gangsters. Ja, nothing special about them, but they were\u00a0employed by someone to mess with you.\"\n\n\"Do you know who paid them? I slept with this girl... Someone important's daughter... Maybe she had a jealous lover, or--\"\n\n\"Hold up, chap\" the old man sighed as old men often do. \"I don't know who paid them, but I know when they were paid.\"\n\n\"Yes?\"\n\n\"Ja, this is what my friends say... These thugs were contracted the day you landed in London, long before you were doing what-what and what-not.\"\n\n\"The day I landed?! That's before the inheritance and before, well, everything...\"\n\n\"The payment was made sloppily. The transaction was noted by law enforcement at the time, but they couldn't tie it to a specific crime. Now, everyone knows that money was to fund your assassination. Funny thing, chap, is that the whole world's security services are covering it up for you.\"\n\n\"I see.\"\n\n\"Which means this has something to do with the shadow world.\"\n\n\"I see.\"\n\n\"Good. Now, let me tell you a story...\n\n\"There was news, back in the 80s, of a man who managed money for Her Majesty's intelligence services. He stole millions from accounts that were supposed to fund clandestine operations. My friends in the West made him a fugitive and soon went around saying they'd killed him. My friends in the East were not so sure.\"\n\nPutting his notebook away, Aaron closed his eyes as if he were recalling a vision from the past. \"Ja, it seemed they tried to assassinate the man but failed miserably. It was the Cold War, so naturally they were going to lie and say it was a grand success.\"\n\n\"How does any of this relate to me getting stabbed?\" I asked.\n\nAaron cleared his throat. \"More than a decade later, there were rumours that the man popped up in London. People started saying he was involved with a prominent lady, but it was all a confidence trick. He was fleecing her for her money -- promising her all sorts of things.\"\n\nI put two-and-two together and started filling in the blanks. \"The woman was Elizabeth Wharry. She thought they'd settle down. So, she approached my father, her chauffeur, about adopting his unborn kid. About adopting me...\"\n\n\"Ja! Then, when it turned out the man was taking her for a fool, she pulls out of the adoption. Still, she develops a little maternal feeling towards you, and you end up with all her money.\"\n\nI exhaled. \"Okay... Still, how does all this lead to me getting stabbed?\"\n\nAaron shrugged. \"My old head is too tired to put these things together. They say the fugitive and the businesswoman ended their affair because he got what he wanted. Yet, the more I read about her, the more I'm sure she got something in return... Not a family, but something that's valuable enough to kill for. Don't ask me what. I don't know.\"\n\nDespite only having half-facts, I rejoiced, \"This is still great! There's so much of my life I knew nothing about until these last few days.\"\n\nAaron offered me a cigar again. This time I accepted and we sat for a moment, puffing our Cuban tobacco in silence.\u00a0The taste was... Strong. Clearly, the cigars were what gave him his deep voice (and his chronic cough).\n\nThings were becoming a little less murky but I still couldn't see the forest for the trees.\u00a0\"Imagine... You finally find someone to settle down with and all they do is rob you blind. Liz Wharry thought she was going to be a mother. My mother.\"\n\nThe vague suspicion I held against my cousin was like an ant colony in my brain. Someone to settle down with... all they do is rob you blind.\n\nMy companion seemed to be deep in thought as he considered his next words. \"Don't blame your parents for keeping secrets,\" he said. \"Being a parent means assuming you know what's best for a precious human life. You must keep secrets and stick to your guns on tough decisions. Ja, chap, don't be angry at your parents for doing that.\"\n\n\"I'm not... My father passed--\"\n\n\"Sorry to hear that.\"\n\n\"Thanks. I didn't really know him. He died of a stroke when I was too young to make memories. And, well, my mother was never very interested in parenting.\"\n\nAfter a few minutes of silence, my guest got to his feet. Taking a big whiff of air, he beckoned me to join him on a walk to his car.\n\n\"I have a friend at the South African embassy in London. Like me, he helped Alicia and her mother flee this country years ago... He'll help with further details.\"\n\n\"Alicia means a lot to you,\" I noted.\n\n\"She means the world to me, chap. I have six children with my wife, but Alicia is the daughter sent to me as my task from heaven. Much like your sisters were the task given to you.\"\n\nI nodded along, understanding the devotion that comes with having to care for someone like that. It was a difficult thing, but it was also more rewarding than anything else in the world.\n\nAaron continued, \"Maybe you can find out what happened to the fugitive. Maybe he's dead, or not... It could be a dead-end, red-herring, diversion... So, prepare for that.\"\n\nI gave Aaron a hearty handshake. He was a friend of Alicia's, so he was a friend of mine. \"You should go say hello,\" I offered. \"She's taken my sister to the gun range.\"\n\nThe old man smiled brightly. \"I think I will! It has been too long since I've seen her. Ja, she keeps the farm running for the workers' sake but she never visits.\"\n\nAs we took the last few steps to Aaron's classic German sedan, he turned to me one last time. \"Don't make life too complicated for yourself, chap. Don't do it. Trust what's in your stomach, even if it makes your head hurt and your hands shake.\"\n\n\"A local proverb?\"\n\nAaron laughed until his laugh turned to a cough. \"No. My own creation.\"\n\nThe mysterious man shook my hand one last time, gave me an extra cigar, and got in the back of his car. His chauffeur wore a little hat and gloves, as if to confirm that this was from a different time. A man of secrets and capability, unlike many of the men who followed. He was a Cold Warrior, sure, but the modern world had been kind to him and he still had truths no one else possessed.\n\nAaron had given me a place to start. Now, I had to run with it.\n\nTrust what's in my stomach.\n\n17 \u2022 Spin Cycle\n\n\"Your cousin arrived while you were at your appointment,\" Skylar said. \"She's unpacking her things.\"\n\nIt was good news: a chance to see someone I missed and someone I mistrusted. There were a thousand questions to ask, but I was only interested in hearing two answers. Could she ever commit to us, and why wasn't she at the jazz club on the night of the attack?\n\nI was trusting my gut and my gut told me it couldn't be that bad. Whatever she was hiding... I knew her too well for it to be earth-shattering, but she did have a secret and I wanted to figure it out.\n\nSkylar had been hanging out in the periphery during my meeting with Aaron. I had no doubt she'd watch me like a hawk, but sometimes I would need leeway.\u00a0\n\n\"Can I rely on your discretion?\"\n\n\"Absolutely,\" the blonde answered.\n\n\"And if I break the law?\"\n\n\"Tell me where to hide the body.\"\n\nThe last line was deadpan, but I had a feeling my new protector meant it.\u00a0\n\nDespite only having met, I could tell Skylar was someone I could trust. I had no trouble having her hang around in the background as I pursued the secret relationship with Tash.\u00a0\n\nWith my shadow hovering nearby, I walked back into the farmhouse.\u00a0\n\nThe size of the building hadn't hit me at first. Though, when I started looking for Tash's room, the scale became clear. Knowing that it was Alicia's childhood home had me looking for clues... I wanted to know more about this woman who so suddenly became indispensable to my life. I wanted to know why her eyes seemed to see me unlike anyone else's.\u00a0\n\nI could only entertain my detective work for so long as I reached the guest bedroom. The door was slightly ajar and through the crack I could both hear and see my cousin unpack her suitcase. Her bed was full of winter clothes suited to January in Europe, but it was summer in South Africa. The way she huffed as she emptied her luggage told me she recognised the mistake.\n\nShe picked \u00a0her smartphone off the bed -- a cracked Chinese knockoff -- scrolling aimlessly. She was tense. Very tense.\n\nLurking a while longer, I found myself captivated by the sight of Natasha. The last few weeks came with a shocking realisation: the truth that I didn't really know her. Now, she seemed stuck in a melancholy haze and the sight made me lightheaded. If the old Natasha were the real Natasha, that's the person I wanted her to be. Sure, I couldn't change her, but I was confident that the girl I grew up with hadn't disappeared in the storm of our affair.\u00a0\n\nClearing my throat, I startled Tash. \"Woah! You gave me fright.\"\n\n\"Hey.\"\n\n\"Hey... It's good to see you're alright.\"\n\nThe look on my cousin's face was too sincere for someone who wanted me dead, but her eyes avoided mine. Then came the absence of a hug... A feeling that made me think a little harder about what was truly going on between us.\n\n\"My mom sends her love,\" Tash offered, still recovering from fright. \"I know you're keeping it a secret -- the whole incident -- but I thought I could tell her.\"\n\nI smiled, happy to hear from the woman who mothered me when I briefly lived in the UK. \"Of course you can tell her. She's family and I'd never keep a secret from family. I really miss Aunt Olivia, actually... Maybe she can join us once everyone is together and safe.\"\n\nTash turned her body away from me; her eyes becoming even more evasive as she bowed her head. \"No! That's a bad idea. I don't want her getting involved in the thing between us.\"\n\n\"We have a thing?\" I asked, taking a step closer.\n\n\"Obviously... There's no point in denying stuff's happened.\"\n\nI agreed, \"Stuff happened, but that doesn't make it a thing. Tash, I need to know if there's a long-term for us?\"\u00a0\n\nMy cousin opened up her body-language and finally looked into my eyes. \"In London, I couldn't give you an answer--\"\n\n\"Why'd you never show up to our meeting at the club?\" I interrupted.\n\n\"I was in a cab and on my way...\"\n\nTash kept talking, but I knew what she'd said was a lie. My people were watching her that night and she never left her flat. There are many reasons to bend the truth, and I couldn't imagine any good ones.\n\nAs my cousin's attention shifted, she started asking strange questions. \"Who's the new blonde girl... Was she a cop... Does she carry a gun... Do they sleep in the house with us... I saw some people changing locks. Where do they keep the keys...\"\n\n\"Wow. You're asking a lot of questions,\" I enquired.\n\n\"It's my safety too. I want to know how we're being protected.\"\n\nThe metallic taste of fear and suspicion filled my cheeks. I wanted clearer answers -- honest ones -- and that would take real talk. The kind of talk I wasn't comfortable with in a room I knew could be filled with listening devices. A room in an unfamiliar house.\u00a0\n\nWas that paranoia? Yes, but the wound in my side was proof that paranoia was necessary for survival.\n\n\"Let's go for a walk,\" I suggested. \"It's a beautiful farm and I'd love to show you around.\"\n\nTash agreed, taking her t-shirt and tying the edges into a makeshift crop-top. \"Sorry, I didn't pack for the weather,\" she pointed to her thick sweatpants.",
        "We made our way through the narrow corridors of the home until we were outside in the beauty of the Cape. I noticed Skylar hanging around, but she gave me a wide birth while still keeping an eye.\n\nThe world around us was unlike anything I'd ever seen before. The mountains and lush soil seemed totally unique to this part of the world. The air had a different smell -- a fresher smell -- which reminded me we weren't actually that far inland.\n\nFollowing a trodden path around the far perimeter of the main house, we talked about where we stood. In a way, I began to see traces of the cheeky and blunt Tash that I knew and loved.\n\n\"I want to be with you,\" she said. \"God knows, if it came down to just the sex... You're an awesome lover, cuz.\"\n\n\"Wow! I'll take that as a compliment,\" I blushed.\n\n\"No. For real. Your cock... Magic. That tongue of yours... Oh, baby!\"\n\nMy blush grew deeper, brighter, and warmer. \"Okay, so the sex is good, but we feel more than that, right? I'm trying to follow your reasoning, but it keeps changing, and I can only look at this one way. We're best friends and best friends should at least give it a shot.\"\n\nTash shrugged. We were close to an old hut of some kind and I wanted to be completely out of security's sight. Other than Skylar, three or four guys with rifles were loitering nearby.\n\nGrabbing my cousin's hand, I whisked her into the hut. The interior was barren, except for a few laundry machines. We had privacy, but I still had a lingering sense we could be under surveillance. If not from my own people, then from some unknown enemy.\u00a0\n\nI put my hand on the dial of one of the washing machines and turned it on. It was old and full of what looked like tattered shoes. The roar, clatter, and combustion would disguise our voices from any electronic ears.\n\nMy cousin gave me a funny look, clearly not understanding my actions. Yet, the need to speak louder seemed to help get her guard down. \"Love? Best friends? Romance? I don't know about all that stuff, Olly. It scares the shit out of me! Can't it be sex and nothing more? You can have mistresses, girlfriends, even wives, and I'll be there for you.\"\n\nI shook my head. \"Fuck that! You know I want you all to myself. I want to go steady with you.\"\n\n\"Really?! And what about the other women in your life? Your sisters won't allow it, your security people will say it's a risk, your mother will explode... And don't lie to me, I know you were with someone else in London!\"\n\nI felt the heat of guilt as my secret was exposed. \"It was a mistake--\"\n\n\"Yeah? Well, just answer one question: was she a prostitute?\"\n\n\"No, never!\"\n\n\"Fine, then you can fuck her again if it's really what you want. You and I can never be more than a rich man and one of his side-pieces. Society won't let us love each other -- won't let us get married, or have kids, or even kiss in public. But, we can give ourselves to one another in one beautiful way, Olly. We can have amazing sex in secret; hidden from judgment. All we need to do is forget about love, for our own sanity.\"\n\nI shook my head. \"No! Nothing you say makes any sense. Nothing you're doing--\"\n\n\"It all makes perfect sense! If you want me, those are the rules!\"\n\nWithout another word, I snaked a hand behind my cousin's back and pulled her towards me. Why? Why did I feel such a strong urge to love a woman I couldn't trust?\n\nOur lips became entangled in a confused kiss that had been waiting too long -- boiling up until now it was free to explode. Craning her neck back with a manic smile, Tash laughed, \"You're a dork, but don't stop kissing me!\"\n\nOur tongues began a dance; a waltz, not a tango. With a rhythm that seemed practiced and an intensity in equilibrium that could only exist in love. We got closer until our stomachs pressed together and hearts could share a beat. The kiss turned sloppy as anxiety faded into confidence and Tash let my body guide hers. She bumped into the corner of the washing machine -- its vibrations suddenly hitting her as the shivering in her hips led to shivering of her lips.\n\nBreaking our kiss, Tash giggled. \"Haven't ridden one of these in a while!\"\n\nI grinned, pushing forward as our kiss continued. There was passion, fusion, knotting, exploration, and the crush of lips on lips and tongue on tongue. It had an electric buzz that pumped megawatts into our bodies. Tash was trying to balance herself with our kiss and our contact as she rode the corner of the machine. Her pussy felt the vibration -- her body moaning -- as her tongue settled between my lips.\n\n\"Mmm... Ngggh...\"\u00a0\n\nTash moaned as my hands helped her out of her pants, then her panties. With them bunched at her feet, I could feel her bare skin under the sensitive tips of my fingers. I could rub two along the length, top to bottom, as she bit down on her lip. Then, I could slip a digit inside, feeling the wondrous sensation as she pined for more and more.\n\nI gave her more... And even more then.\u00a0\n\nSlipping a second finger inside my cousin's pussy, I felt her release tension into my mouth and into our kiss. A greedy third finger helped stretch her out a little more and as I went deeper she reacted intensely. Taking on the temptation, I pulled out only to return with four fingers. As her pussy stretched, the pumping -- forward and back -- had to slow into gentle dips.\u00a0\n\nWith the vibrations, my fingers in her pussy and tongue down her throat, Tash was soon in ecstasy as her eyes went wide. Her pussy flooded with excitement, almost crying out for more as her body reached an apex. My cousin's pelvis was beginning to bounce up and down as her feet lost contact with the floor. She was at the mercy of the machine; riding it like a mechanical bull.\n\nTash was cumming so hard it hurt -- good hurt, happy hurt -- the kind of hurt you crave. The type of orgasm that makes your stomach twist, punches you in the gut, slaps you in the face, and makes you want more.\n\nI felt an urge after all the back and forth. All the suspicion and irritation.\n\nMy free hand trailed up along my cousin's body and carefully squeezed the sides of her neck. She gasped, \"Fuck! Fuuuck! Nghhh... Olly, that feels so fucking... Fuck!\"\n\nI kept pumping my fingers into Tash's core as her abs tensed; as her back kept arching and her limbs kept locking. Nothing changed except the intent. I now wanted to own her body -- whereas before I wanted her to accept me, I now wanted to make her mine. My other hand kept a careful pressure on her neck as she rejoined our kiss with a new sense of constriction. Eventually, she was left with no choice but to break it, holding herself against me as she lost control of her body.\n\nDriving my cousin wild gave me with a wicked grin as I felt my cock expand to its limits. With adrenaline pumping an almost superhuman strength saw me free my shaft.\n\nI pulled Tash's hips so they were on the very edge of the booming machine. Now, my cock could easily find its way to her wet folds; so wet that I almost slipped in automatically. Yet, as wet as she was, my girth still stretched her out as my length filled her up. The feeling of vibration from the washing machine wasn't lost on me either. I felt it shake through my bones as I pushed my cock to the hilt.\n\nMy cousin grabbed me; her head relaxed against my shoulder as I let go of her throat and we found rhythm and ease. I didn't think another orgasm could happen so soon, but I sure as hell felt it. The muscles of her sex were tensing around mine. She was contracting, moaning, collapsing -- her body contorting around my cock.\n\n\"Fuck, Olly... You feel so big inside, cuz. Fill me up, Olly... Cum inside... I wanna... Feel...\"\n\nI didn't need an invitation as my hips kept fighting for dominance.\n\n\"Fuck! Fuck! Fuck!\" Tash cried out; her voice exceeding the noise of the machine and cracking as another orgasm struck.\n\nI was over the edge. My body seizing with my cock buried to its maximum inside my cousin's pussy.\n\nHit after hit, my cum shot into Natasha as I enjoyed the feeling of filling her up. Claiming her. Making her mine... Yes, mine. All mine.\u00a0\n\nFor a moment, we held each other -- the shaking of the machine meaning we had no real rest as aftershocks overcame us. She felt good in my arms. It felt like it was meant to be and as I lifted her chin we got to kiss one last time; tender and true. My rage and suspicion (all the confusion) had been doused by fire; extinguished by heat.\n\nTotally unsustainable, but sweet relief nonetheless.\n\nSo, it was finally settled... If nothing else, we'd be fuck-buddies for life, and that was enough for now. But I knew I'd want more; like any man who loves any woman would want it all. Love, commitment, consistency...\n\nI had a strange suspicion she would give me none of that. Not yet.\n\nWhat I didn't know was how much she'd end up lying to me.\n\n18 \u2022 The Sum of Confusion\n\nWe made our way back to the main house without any shame or regret. What we did felt right. It made us feel strong and in control, but for different reasons.\n\nSex with her made me feel I still had some power... Power to understand her, or even stop her if my worst fears were realised. Yet, I also felt a strange type of regret -- like submitting to the carnal urge was a failing. Calling myself conflicted was an understatement. I needed answers on everything and, as Tash's mood dulled our walk, I realised we were back to square one. That was our way: love, sex, love, reset...\n\nOur arrival at the main house coincided with that of Alicia and Elle.\n\nThe two were all smiles, clearly having enjoyed their outing to the gun range. For once, my little sister seemed to be warming to one of the other women in my life. But, it seemed that warmth was only for Alicia as I watched Elle's eyes burn through our cousin. \"Oh. I see you've arrived. It's nice to see you, cuz.\"\n\nMy sister's expression was harsh and the tightening of her fists obvious. She seemed to swirl some words around her mouth before setting her raw feelings aside to turn to me. \"Alicia says they run a restaurant on part of the property. I've asked them to empty it out for us so we can have dinner there.\"\n\n\"Great!\" I exclaimed. \"Tash, do you have anything to wear--\"\n\nMy sister cleared her throat; half ashamed of what she was about to say. \"No. I want it to be you and me... No one else is invited.\"\n\nLooking to Natasha, I could see she wasn't expecting me to put up a fight on her behalf. She'd known Elle her whole life and understood the dynamics. Plus, my little sister had a charm to the way she dismissed people. It was hard to fight against that shy determination.\n\nSpending quality time with her wasn't a bad idea. If nothing else, I could try to convince her that Tash and I made sense... Even though we didn't.\n\nI could trust Elle completely. Meanwhile, I had painful -- confusing -- doubts about our cousin. It would be good to confide in her. Though, as her big brother, there were always things I would keep hidden to protect her.\n\n\"Okay, sis,\" I conceded. \"Alicia can help you organise anything you need for the dinner.\"\n\nElle smiled brightly. \"Perfect! You've gotten very lucky with her, Olly. She's fantastic!\"\n\nI could only agree as I beckoned Alicia to follow me inside. We rounded a corner to enter a room that had good views through windows on two sides. Those overwhelmed the general sense of decay. It must've been the farm's office, many years ago. A desk and filing cabinet were all that remained, along with some rickety chairs with stained upholstery.\n\nAs much as I wanted a cold shower, I also had responsibilities. Being non-executive chairman of Pellinore wasn't ceremonial. There was work to be done and Alicia was the only person who could give a hand.\n\n\"This is such a nice house, actually. Why did you never tell me you used to live here?\"\n\nAs I turned around, I realised Alicia was lagging way behind and hadn't entered the room with me. I could've sworn... No, surely my brain was just a little slow. I was forgetting things more often now. I was losing track of what was going on around me.\n\nWhen Alicia finally did arrive, I said, \"I need a tutor.\n\n\"Sorry, sir, I don't understand?\"\u00a0\n\n\"No, I'm being silly... I just feel a little lost with all this stuff. Private equity, venture capital, asset management--\"\n\n\"You were a lawyer, playing in the big leagues,\" my new head of security reminded. \"I'm sure you have the knowledge you need.\"\n\nShrugging, I spun around to face Alicia. \"Did Aaron catch you at the range? And how did Elle do? Is she going to ask for a Glock for her birthday?\"\n\nAlicia cast a cheek-warming smile my way. \"Your sister loved firing away some of her frustrations, and I did get to see Aaron. It was nice... Thank you for sending him my way, sir.\"\n\n\"No worries,\" I assured. \"You know, there's something very fatherly about him. And you... You feel like an older sister to me, and I can see Elle is starting to feel the same. I have no doubt the same will be true for Tecla.\"\n\n\"I... Thank you, sir. That's very sweet of you to say, though I'm not much older than you.\"\n\nI laughed, \"Don't worry, I'm not saying you look old. But, you carry yourself with wisdom beyond your years.\"\n\nIt was doubtful that Alicia really 'understood' where I was coming from. It was a feeling I had about her that made sense to me without needing to understand it myself. She smirked shyly; somewhat puzzled. \"You know, sir, I have enjoyed working for you... Even if you are a little silly and we did get our asses kicked.\"\n\nLowering my voice, I raised an eyebrow at that last remark. \"By 'silly', you mean my relationship with Natasha?\"\n\n\"And the Prime Minister's daughter.\"\n\n\"The money hasn't even gone to my head yet. Can you imagine how rabid I'll be once I realise I'm rich?\"\n\n\"Ha! I can't wait. It sounds like it'll be a real adventure.\"\n\n\"Tell me, was Liz Wharry ever a little crazy?\" I asked.\n\nAlicia shrugged. \"I wasn't her protection officer, sir.\"\n\n\"But you were around,\" I retorted. \"You must have heard some stories?\"\n\n\"She liked her boat. That's about it.\"\n\n\"Ship,\" I corrected. \"I saw a photo of the thing in London, but explained to the housekeeper I can't even swim. She was not impressed.\"\n\n\"Don't worry, sir, I'll get you back to shore if the need arises.\"\u00a0\n\nAlicia lightened up more than I'd seen before and that made me happy. This woman was special and I didn't doubt a single one of her promises or an ounce of her loyalty.\u00a0\n\nWe were a team. Yes, we were a damn good team.\n\nAs my security czar left, I was free to take stock of life. There was no doubt the last few weeks had been an adventure. I'd loved and learned more than I had in decades of living. Glamorous and dangerous lovers pushed me to feel and think new things.\u00a0\n\nSian Thomas -- the woman who disappeared.\u00a0\n\nRomy Mansfield -- the mad not-yet countess.\u00a0\n\nNatasha Orwell -- the girl who made no sense at all.\n\nI was getting lost in looping thoughts about my recent adventures. Luckily, there was someone important who demanded my attention. Checking my phone, I saw it was 9 PM in Singapore (or exactly when Tecla was at her most awake).\n\nReaching for the high-tech landline, I made a call to my faraway sister's new encrypted number. She greeted me with ultra-enthusiasm and started telling me about her day. \"They let us get out of the penthouse with like 20 bodyguards and bulletproof vests under our clothes. We went window shopping but everything is so expensive, plus Mom is being awful to all the staff.\"\n\nSmiling to myself, I made my sister an offer I wish I could've made a decade ago. \"Let me worry about Mom. As for the expensive stuff, why don't I start paying you an allowance? Twenty a month?\"\n\n\"Twenty bucks a month?\" my sister chuckled, genuinely believing I meant twenty dollars.\u00a0\n\n\"Twenty-thousand. Obviously, I'd pay Elle the same so that you two don't end up fighting about it.\"\n\n\"Woah! You can afford that?!\"\u00a0\n\n\"I can afford to give you ten times that, but I don't want to spoil you. Will we settle on thirty-five?\"\n\nIt had been a while since I'd heard Tecla laugh as heartily as she did. The sound beat the sobbing I heard when we had our first call after the stabbing...\u00a0\n\nSometimes we give presents to make up for things we did wrong, and I felt all the chaos was one big wrong on my part. The allowance might not make up for it, but I hoped it could relieve some of my sister's trauma. I also hoped I could pay to make her dreams come true.\n\nTec's voice echoed the disbelief in her snickering, \"Enough talk about money. How are you?\"\n\n\"Things are good,\" I replied. \"Elle is still pampering me and Tash arrived, but I don't know how to feel about either of those things.\"\n\n\"Is our sister being a bit much?\"\n\nI shook my head, remembering the twins told each other everything, and I had to pick my words carefully.\u00a0\n\n\"I don't want her to get used to sleeping in the same bed as me,\" I confessed. Part of me felt the extra closeness was one of the reasons Elle was being more possessive and less like her reserved self.\u00a0\n\nTecla tutted, \"The guy who fucked his cousin shouldn't complain about some innocent cuddling... You know, when we're all back together, I'm going to want to snuggle up with you too. I know you think I'm the cold one--\"\n\n\"Cool, not cold.\"\n\n\"Whatever,\" my sister dismissed. \"You almost died, Olly, and we want to... We want to feel close to you... Like, so close that we can hear your heart beat and know you're alive.\"\u00a0\n\nThe point was well made and I felt my cheeks swell out of love and longing. I couldn't wait for us all to be together again, but my people wanted us to wait a little longer. Then, something hit me: I was the boss... Surely, I could make things happen faster if I wanted to?\n\nI made a firm declaration, \"I'm getting on a plane tomorrow night! It's been too long since I've seen you.\"\n\n\"But, your people--\"\n\n\"I want to see my sister, and that's final! We've been in hiding for long enough and that's exactly what these people want. Alicia is taking over as head of security -- I know she'll agree with me.\"\n\nRhapsodic laughter perked my ears again as Tecla expressed pure joy. We ended our call with her suggesting that I call Mom next. What she didn't know was that I'd been trying to call our mother five times a day, without answer.\n\nYeah, our mother didn't want to talk to her son.\n\n\u2022 \u2022 \u2022\n\nThe rest of the afternoon, I tried to get some work done. It seemed like the discipline that got me a top job and saw me through my education was gone. I blamed the pain in my side, but I knew the lack of financial pressure also played a role. There was a lot on my mind, I suppose. Still, it felt inexcusable; I could never justify not giving my all to better my family, even if it seemed like we already had everything we needed.\n\nI was done with my shower and half-dressed for dinner when Skylar knocked on my bedroom door. She had changed from a stylish blue blazer to a stylish maroon blazer -- the fabric reaching her thighs, but not quite being a coat. Her dedication to being fashionable was impressive.\n\nI asked what's up.\n\n\"Ms Orwell has asked to see you, sir.\"\n\nThere were two women with that surname in that house, but I knew my sister would never ask for permission to spend time with me. \"Natasha? Why did she ask you and not just come to me?\"\n\n\"She looks nervous, sir. Maybe she's a bit sick.\"\n\nI shook my head. \"Or, maybe she's hiding something... Where is she?\"\n\nSkylar led me outdoors where Natasha was sitting on the same bench I'd shared with Aaron. As the sun set, it got a little colder and Tash's European wardrobe made a little more sense. She was comfortably dressed in slacks and a flannel shirt -- a tomboyish look by her standards, and perfect for the farm.\n\n\"Hey.\"\n\nI took a seat next to my cousin. \"What's up? It sounds like something is wrong--\"",
        "\"No. Nothing is wrong.\"\n\n\"You look tired and irritated,\" I remarked.\n\n\"I'm fucking frustrated, Oliver!\"\n\nShocked by Tash's sudden change of mood, I wanted to soothe her. \"Frustrated about what? How can I help?\"\n\n\"Ugh!\"\n\nMy cousin slammed her fists down on her thighs and sprang to her feet. She spun around to face me and pointed a finger before taking a breath. Exhaling, she seemed to calm down a little. Her mood was swinging wildly and she definitely looked nervous...\n\nI didn't know what was going on -- couldn't piece it all together. Still, I felt like I could almost read her mind, sensing the whirlwind inside.\n\n\"Your people won't let me go to town,\" Tash bemoaned.\n\n\"It's not safe,\" I reminded. \"If you need anything, Alicia can arrange it.\"\n\nTash rolled her eyes. \"Who said I'm in any danger? You're the one who got stabbed -- don't make it my problem!\"\n\nShocked by Natasha's crassness, I was rendered speechless. Immediately, her eyes changed and regret was scrawled over her face. Still, she'd taken the shot and it hit... I got stabbed. Why should she care?\n\n\"I didn't mean it like that, Olly,\" my cousin tried to backtrack.\n\n\"You're clearly on the edge. What do you need to do to feel better? Is it about us?\"\n\nNatasha tapped her foot, then stamped it, kicking up dust as she did. She came to sit next to me again and held her head in her hands. \"I wish I could give you what you want, but I'm a liar and a sack of shit.\"\n\nPutting an arm around her, I pulled a despondent Tash closer to me. \"What are you on about?\"\n\n\"Nevermind,\" my cousin declared, getting to her feet again. A new sense of confidence seemed to hit her; the latest shift in her mood a positive one. She was hyperactive, chaotic and out of control.\n\nThat's when I saw it... That's when I finally had a theory that made sense. \"Are you on drugs?\"\n\n\"Fuck off! Of course not!\" she insisted.\n\nI didn't believe her, springing to my feet. \"It explains everything!\"\n\nThere wasn't time to catch Natasha's palm as it struck my face. She slapped me. Hard. As soon as she did it, her body was overcome with regret... Again. So the cycle continued.\n\n\"Olly, I... I'm so fucking sorry... I'm not on anything, I swear. I... I really don't know what to say.\"\n\nMy cousin was sincere in her denial and the tone of her voice convinced me. Yet, it was that convincing speech that got me thinking of even worse possibilities. If drugs didn't explain it -- if I was wrong -- that left few good reasons for her erratic behaviour.\n\n\"Natasha... Maybe you can write down the way you feel, and what you want. I could do the same. We're struggling with words and talking, so maybe that's a better way--\"\n\n\"It won't work,\" Tash said bluntly. \"Enjoy your date with Elle. Enjoy your girl in London. Enjoy being stinking rich. Let me worry about myself.\"\n\nWith that, Natasha turned and walked away with her hands in her pockets.\n\nI teared up as I tried to process what just happened. Something was ripping my best friend apart and I didn't know what. Why did she want to go to the city? Why were her moods so volatile? What could I do to make her better?\n\nCould I trust her?\n\n19 \u2022 The Cape of Storms\n\nYou'd think travelling less than a mile from one part of a property to the other is a simple thing. In fact, you might think that walking would be the best approach. Yet, we took a convoy of five black SUVs down the tree-lined driveway of the farm.\n\nEach car was packed with gun-wielding men and women. My very own private army guarding against an unknown enemy.\n\nOn route, Elle's erudite nature showed as she asked Skylar what each car's role was in the convoy.\u00a0\n\n\"There's a pilot car setting the pace, our vehicle, then the protection team right behind us. Behind them, we have a car that maintains security at the rear. The fifth car is the counter-assault team. They've got the big guns in case we come under attack. Most of the team are local ex-military and police types. Alicia and I are the only two on Mr Orwell's permanent team.\"\u00a0\n\nElle nodded with pursed lips. Between her visit to the shooting range and interest in the motorcade, I could see a pattern forming. She admired the women who did this work -- it was new to her, and it blew her mind. She'd make a good soldier, my dear little sister; disciplined for the most part and not afraid to fight for what she believed.\n\nPulling up to a building that flowed with the topography, we disembarked. The farm's restaurant was strikingly modern in comparison to the main house. I took it as a sign that Alicia invested at least something into her inheritance. Nothing was left to rot except the house where she grew up.\u00a0\n\n\"Nice place,\" I remarked.\n\n\"I've never been outside of Canada,\" my sister reminded. \"This is like a dream come true. I just wish you didn't get hurt in the process.\"\n\nElle and I would be completely alone for dinner. Our protectors fanning out around us, but staying out of our sibling bubble.\u00a0\n\nAs we stepped into the restaurant, it was clear great effort had been put into our meal. At the far side of the room, we could pick from all sorts of food. Simple things: meats, veg, some salad... Complemented by a selection of drinks; many being the product of the winery.\u00a0\n\nThe lights were low and the white shine of the moon overpowered the dim golden bulbs; almost blunting them. Although the room was big, that made it seem smaller -- more intimate.\n\nDespite being on heavy medication, I dared to reach for the wine. It seemed right that I should celebrate being alive, being with my sister and being wealthy.\u00a0\n\nThe danger that came with the fortune had overpowered any joy at being rich. That night, I wanted to focus on the positive!\n\nMy sister smiled as I passed her a glass of local nectar. She was wearing an old dress from back home; a one-time indulgence bought with some saved up cash. It was dark-blue with a beautiful fitted cut. Long sleeves clung to her arms and the bottom stopped midway down her thighs. Finishing the outfit, she wore heels -- counterfeit designer -- that had been hers forever.\u00a0\n\nShe was quite a sight; growing up faster and faster. Becoming a remarkable woman. Spending time with her had always been a pleasure, but now we got to converse like adults. I'd always encouraged her to argue politics, religion, whatever she wanted... Having opinions is important, and you should express them. However, when it came to mature discussions about life, we tended to avoid those. That was changing, and it felt good!\n\nJust as we were about to get comfortable, I felt my phone buzz. \"Sorry,\" I excused, taking the call from Pellinore's CEO, Cassandra Nash.\n\n\"Mr Orwell,\" she greeted.\n\n\"Mrs Nash, how can I help you? I'm currently at an engagement.\"\n\n\"I'm only checking up on you. We haven't seen you at the office recently and your lawyers are mum on your whereabouts.\"\n\nI prepared myself to lie, holding my eyes shut as I took a second to remember the cover-story. \"Apologies about that. We had complications with a part of the estate and I had to leave London to clarify things in person.\"\n\n\"You're in Cape Town?\"\n\nMy face went pale. \"How the hell did you know that?!\"\n\nNash started laughing, with a touch of smugness audible. \"Don't worry, I'm not spying on you. My friends in British intelligence are, though, yet even they won't tell me what you're doing down there.\"\n\n\"You should ask your friends why they feel the need to obsess over me,\" I demanded. \"Maybe then I can get some damn peace of mind!\"\n\nThe CEO waited a few seconds for me to cool it, but she didn't know I had a sore wound to keep my temper up. \"Apologies, Mr Chairman. I understand this must all be very disorienting. I assure you the secret services keep an eye on everyone. Especially those of us who play a critical role in the functioning of the economy.\"\n\n\"Bullshit!\" I retorted, mad at the obvious deception and deflection.\u00a0\n\n\"Alright, Mr Orwell... You're smart enough to know things are a little more complicated. Let's not talk about it now, shall we?\"\n\nI looked in my sister's direction and saw her lips twisted in a knot as she observed my anger. It was possibly the first time in her life that she'd seen her big brother get truly upset. I didn't want to expose her to that, so I ended the call as decently as possible.\n\n\"Who was that?\" Elle asked.\n\n\"Someone who thinks they're smarter than me. If I can teach you one lesson, sis, it's that sociopaths are dumb. Maybe I'm losing my mind, but I feel like I'm surrounded by people who are taking me for a fool. But... But... Nevermind, I don't want you to worry.\"\n\nElle stepped up to me and we embraced. \"It'll all be okay,\" she promised as we kept our pose for minute after minute; the hug only growing tighter. As it broke, we took a few deep breaths and turned to our meal.\n\nElle and I clinked our glasses, but she didn't seem to put her heart into the toast. By then, I'd known her long enough to recognise when she was unhappy and this was one of those occasions. She didn't sit at the table they'd prepared for us. No, she walked to a corner of the room. She was staring at her feet and swirling her drink before downing the liquor in a single gulp.\u00a0\n\nMy eyes focused on the beautiful woman in front of me. No longer my little sister, although I'd always call her that. She was all grown up and old enough to feel adult melancholy.\n\n\"I always wondered why what a brother and sister have couldn't be enough for you,\" Elle professed.\n\nThe words startled me. \"What do you mean?\"\n\n\"Nothing... Forget about it.\"\n\nIn an instant, Elle seemed to withdraw from the world. Moonlight from a nearby window dazzled me as it clung to her body and gave definition to a mournful soul. She wouldn't cry -- no, she'd never do that. But there was a trembling in her voice; a shiver that would no doubt be followed by courage. She seemed to be speaking to herself with her lips pointed down as she bowed her head.\u00a0\n\n\"Why? Why isn't what a brother and sister have enough?\"\n\nI flinched, reaching to rub my shoulder -- pressing the muscle like the pressure would help me understand. My chest was beginning to tighten and my palms were definitely sweating. Elle was playing out a conversation that she must have had a thousand times in her head... I didn't have the benefit.\n\nStill, in a world of her own, but now walking toward me, my sister let her hand fiddle with my collar. Her dark brown eyes drifted towards a grey-green cocktail of emotions as she seemed to settle them on the corner of my mouth. Those eyes didn't say she saw me; they told me she wanted to be seen.\u00a0\n\nGod knows, I did see her, and she'd never looked so beautiful as in that moment of silent bravery. Yes, I knew what she meant... Why can't what a brother and sister have be enough?\n\nSomewhere in the unfamiliar restaurant, a clock chimed just as my sister's teeth clawed at her lip. We breathed as one before I felt her nose against mine. Her high heels gave her body the little extra height she needed to meet me. I could hear her tongue speak a barren langue, could feel her lungs shiver, and sense her muscles tense. All I saw were the traces of starlight on her lips as I felt her creep toward action. Action building as light from the heavens soaked deeper into her gentle skin.\n\nAs her older brother -- as who I was to her -- I had the final say over what happened next. There was so much to think about, yet I didn't waste a second on doubt as my lips met the moment. Throwing ourselves into an illicit kiss, we found the familiar comfort that we'd always shared. Now, that comfort meant more as sweet meaning passed between us in a hundredth of a second and we said more than a million words could ever convey. With heat came intensity that threatened to explode.\n\n\"No!\" I insisted, pulling away.\n\n\"Yes,\" my sister replied; strength evident in her young voice.\n\n\"Are you sure?\" I asked, knowing that I wanted her to be sure and that I was sure already.\n\nElle didn't say a word. Her forehead pressed against mine as we took a pause. Magic followed.\u00a0\n\nOur kiss reignited and this time the fire raged harder. I felt my little sister's tongue in my mouth. Neither of us shaking anymore; neither of us nervous or uncertain. Yet, the unsteadiness of our youth returned as my sister spoke to me -- her lips close enough to taste. So close that I could feel the vibration of her diction. She assured me, \"What we have is enough.\"\n\nIn a whisper, Elle repeated her words like she was casting a spell or making a prayer. \"What we have is enough.\"\n\nIn my heart, I had one last ounce of resistance. I pulled away and plead, \"Elle... I love you, but--\"\n\n\"Olly,\" she said my name in a voice that broke my sentence. \"What a brother and sister have can be enough. Maybe you don't think of me in that way, but Tecla... She feels the same as me, and she can take care of anything I'm not good at.\"\n\nI exhaled, my lips still an inch away from hers. \"What do you mean?\"\n\nElle seemed to smile, closing the fraction of distance between us to leave a tender peck on the corner of my lips. This one was a kiss more like a kiss between siblings -- a brother-sister kiss that had only a sprinkle of romance.\u00a0\n\n\"What a brother and sister have can be enough,\" she repeated. \"That's all I'm saying... Together, your sisters can be enough... We can be enough. We. Can. Be. Enough.\"\n\nMy breathing stopped until I felt Elle's hands trail along my side. Our bodies were as close as they could ever be -- our stomachs flat against each other. We bumped and explored, like hunting for something more than just a kiss. More than the sins we'd already committed. Sins against society and convention.\n\nI could choose what happened next and it would be a choice that changes everything.\u00a0\n\nI didn't want to make decisions. Didn't want to think.\n\nOur lips met again and this time there was the weight of consequence behind it. My hands were gliding down Elle's back. Arousal had caught up with us and threatened to overwhelm my mind. There was no doubt she could feel my erection; my hardness against her pelvis. Feel its size, feel its shape and feel its firmness.\u00a0\n\nElle's tongue slid against mine. It was a sucker-punch that struck all scent, sensation, and sight from my world. There was nothing except the kiss. My sister's mouth and mine in an incestuous tangle.\u00a0\n\nI took a breath -- took a breath not to end things but to take them further.\u00a0\n\n\"There are so many people nearby,\" I warned.\n\n\"Then take me to our bedroom. Take me there, so I can show you that what a brother and sister have--\"\n\n\"Can be enough,\" I completed, and Elle kissed me again. Kissed me hard. Kissed me with joy in the way her lips bounded against mine and her tongue played with me.\n\nIt was all too much, all too fast!\n\n\"We can't do this, sis. No... It's not right! I'd be taking advantage, promising you things that I could never deliver. Elle, it's not working with Tash... A brother and sister? That's ten-times more complicated.\"\n\nElle scowled at me with anger and dejection scrawled across her face. She took a step back, turning her body the slightest bit away from me. \"So, that's it then? You can fuck our cousin, but I'm not good enough? Tecla isn't good enough either?!\"\n\n\"Tecla isn't even here!\"\n\n\"Whatever, Oliver. You feel the same and one day you'll admit it... I thought, when you got the money, it would mean your inhibitions would fade and we could be together. Fuck, I thought that almost getting killed would make you realise we need to live in the moment!\"\n\n\"I never even imagined this is something you wanted.\"\n\nElle shrugged, \"No need to imagine. Here I am! Flesh and blood, and willing to take the risk to be with you when other people aren't!\"\n\nI looked at my sister with a proud and brotherly smile. There could be no doubt she knew what she wanted, but I felt a responsibility to keep her from having it.\u00a0\n\nDespite the tension in the air, we both found ourselves taking seats at the table that had been set for us.\n\nYes, despite the strangeness of it all, this was still a disagreement between a brother and his sister. And, when siblings fight, they don't run away from each other; they don't give up on each other. Never.\n\nThe food was hearty and local, as was the wine.\u00a0\n\n\"Did you know this place belongs to Alicia?\" I asked as an icebreaker, following a few minutes of silence.\n\nMy sister nodded; she knew. \"When you were still very sick, Tecla would phone Alicia at night. You know, 'cause she struggles to sleep at the best of times... They spent some time talking about your condition, but spent most of the time just chatting.\"\n\n\"Wow. I didn't know that... So, you two like her?\"\u00a0\n\nElle shrugged. \"Yeah. I guess. She feels like an older sister... Kinda. But I have a problem with you spending so much time with model-types. Especially model-types with guns.\"\n\n\"Because you want me all to yourself?\" I asked, bluntly.\u00a0Romantic desire was obviously behind her recent testiness; that was now clear to me. It explained the change in demeanour and the way she'd been treating other people.\n\nMy sister didn't answer my question, rather choosing to go back to her food and wine. We ate in silence for the next fifteen minutes. Here and there, we cast a smile to each other -- hoping to hook a little mutual joy. It was easy for us to be happy together and happy with the lingering taste of our deviant kiss.\u00a0\n\nElle started talking about her plans for the next few days and I told her we'd be heading to Singapore soon. She said she preferred to fly in the evening and I replied, \"Sure, we can arrange a night flight, if you prefer.\"\n\n\"What?\" Elle quizzed.\n\n\"Huh?\" I shook some sense into myself and saw the look on Elle's face... She must not have said what I heard her say. \"Ah, it's just me being too tired, sis. I'm hearing things.\"\n\n\"You okay?\"\n\n\"Perfectly fine,\" I assured, putting a hand on my sister's to make sure she bought my line.\n\n\"Good,\" Elle grinned, happy that I was healthy enough for her intentions.\n\nDinner ended without desert and we stepped back into the bubble of guards that surrounded us. I focused on my sister, reaching for her hand out of instinct. Squeezing it, feeling its warmth... Holding her near me in the night-time cold of a Cape summer -- somewhere between Good Hope and Storms.\n\nAt the end of the short drive back to the main house, Elle kissed me on the cheek and whispered into my ear. A soft and sensuous whisper, and seductive in a way I never knew she could muster.\u00a0\n\n\"You know where to find me, big brother...\"\n\n20 \u2022 Touch-Touch\n\nThe next day, Elle didn't wake up next to me like the days before.\n\nMy sister was waiting for me to make a move and daring me to take what we both knew I wanted. At breakfast, she was shy and girlish; the woman I'd always known her to be. The edge from days past had faded and my little sister became her gentle self, mild-mannered and wishing for romance. She had a crush which was quickly turning into an infatuation. She had opened the floodgates -- I helped her do it -- and now she wanted to feel the rush of the water.\n\nShe wanted to be swept away.\n\nI considered phoning Tecla for advice. Hell, I even wondered if I could finally get through to our mother... Part of me considered telling Tash, but she was wild and unknowable. Alicia might have had advice, but this was personal. Too personal.\n\nAfter a day that seemed to be crawling toward night, dinner was quick and Elle was off to her room. She kissed me on the cheek before heading away, parting with a wink that saw her long lashes flutter.\n\nWaiting around until everyone was asleep, I headed to my room. I sat on the bed with a mind aflame; with a heart that wasn't beating as much as it was banging.\u00a0\n\nMy sister was right next door and I could hear her open and close her closet as she got ready for bed. She moved to the bathroom and I heard her shower start before she adjusted the flow to get the water just right.",
        "I rubbed my palm over my lap, providing a touch of friction along the length of an expectant erection. I was rock-hard at the thought of taking the short walk to my sister's room, undressing her, touching her, feeling her weight in my arms as I kissed her in a way that's forbidden for siblings. Kissed her with passion and tongue and sex on my mind. Yes, sex. The thought of laying her down on the bed as she parts her legs, allowing me to press my cock against her pussy... Letting her brother make love to her.\n\nMy palm kept up its motion, guiding itself along my shaft and encouraging the ooze of precum. The wetness became uncomfortable and I slipped my pants down to my knees. Now, I had my cock firmly in hand and I was stroking. Stroking as I thought about my little sister's stunning body. Stroking as I remembered our kiss and listened to the water of her shower run in the room next door. The water soaking into her inky-black hair and her soft skin -- I could imagine the way it covered her in a slick sheen of water.\n\nMaybe there was always a seed of these thoughts in my brain. Much like the one that took root in hers. I thought I could masturbate and make it go away, but my mind couldn't get there... Not when the real thing was so close!\n\nTaking my other hand and placing it against my cheek, I almost slapped myself, but I resisted. I knew what I wanted, and I knew I couldn't keep myself from taking it.\n\nThe water shut off; I stopped stroking and listened.\u00a0In the silence of the night, I heard Elle's old mattress creak, knowing then and there that I was about to walk to her room.\u00a0I was about to change our lives forever. I was about to make my little sister my lover...\n\nI changed into a pair of boxers and a t-shirt then slowly took the few steps I needed to take.\n\nAs the floorboards creaked underneath my feet, I felt my shoulders pull back and my knees bend. I thought about knocking, but worried the noise might attract unwanted attention. Reaching her door, I twisted the handle until I heard the sound of the mechanism strain. I pressed down harder and pushed until I saw her, sat crossed legged in bed, wearing her summer pyjamas.\n\nThere was something primal about my sweet sister in that moment. Her pitch-black hair fell naturally down to the small of her back. Its twists and curls as untamed as the look on her face. The blush-tone pyjamas she wore sat loose on her slim body and the colour matched her lips. Lips that were slightly apart as she looked longingly into her big brother's eyes. Could she see the lust in them?\n\nI was rock hard and it was obvious. It felt so dirty, but I was proud of it; seeing the way my sweet little sister scanned my body and landed on my crotch. The sight of my cock stretching the material made her breath a little faster and a little louder and she swallowed hard as we both realised this was happening.\n\nMy thoughts were wild visions of holding her, touching her, tasting her... Visions of making my treasured sibling my own by filling her pussy and claiming it for life. The animal inside me felt entitled to it -- felt he'd earned it and was owed it. He thought that it was an older brother's right and his thoughts became mine as I licked my lips, awed by Elle's stunning body.\n\nShe was right in front of me and I could have her.\n\nI took another step towards inevitability and the animal gave way to the lover... My thoughts shifted as Elle held her hand out and invited me to take it. For a second, I had to think...\n\nThis was the final plunge. The final chance to chicken out.\n\nGravity took another step on my behalf as nature itself drove me forward. Still, I didn't reach out to hold her hand. Not yet.\n\nThe truth is we knew what we wanted and knew what was meant to be. There was innocence in Elle's expression, a light in her eyes, a curve to her lips... She waited for me to look at all of her; to see her expression and her body. Once I saw it all -- beauty and sex and spirit -- I reached out to take her hand. We touched briefly and momentum took over as I pressed forward and she fell back.\n\nWith her arms wrapped around me, Elle pulled herself against my body. I felt her pelvis bump against my cock and the tips of her fingers dig in. She was holding tight; nuzzling her mouth into my neck as her lips pressed against my skin.\n\n\"Go slow, big brother,\" she exhaled, whimpering as her hips rocked against mine and she tightened her hold.\n\nI let my hands trail down my sister's sides, daring to run them up and under her top. She craned her neck back as she felt my hands cup her breasts and gasped -- her lips ready for a kiss.\n\nIt wasn't long before I felt Elle's tongue against mine as her body started grinding wildly against me. My thumbs brushed along her hard nipples and the tongue retreated, letting mine advance. She sucked on it greedily with her eyes shut and body stiff with excitement. Moaning into our kiss, I felt her go limp as she let me take control.\n\nAs her big brother -- as the man who had always cared for her -- I had rights to her body... She wanted me to know that. \"I trust you, Olly. You make me so happy.\"\n\nMy little sister pulled me closer and closer, thrusting her hips. I thrust back, making her shudder as I kissed her again and this time our kiss ended quickly as we gasped for air. The pause only lasted a second as our mouths demanded more attention and our soft lips tangled again. She tasted incredibly, with traces of sweet lipgloss. I knew I could kiss her forever as my hands pressed more firmly into her breasts, pinching her nipples gently; feeling their stiffness.\n\nIn response, Elle wrapped her slender legs around my body and locked them together. Her whole being was pulling me closer and right then I felt the wetness of her pussy through our thin sleepwear.\n\nMy little sister moaned, \"Oh, Olly... Oh, bro... You're making me feel so good.\"\n\nI wanted more and I wanted to give her more. \"Help me take your top off.\"\n\nElle complied and together we pulled open her pyjama shirt, revealing her bare chest. Her soft breasts were teardrop shaped pillows that yielded under my touch. I knew I had to take things slow, but I wanted to taste them... I wanted to feel them against my lips. Slinking down her body, planting gentle kisses against her flat tummy, I made my sister giggle and her abs tense until I reached her boobs. My lips locked onto a nipple and her giggles turned to groans as I squeezed and sucked and tongued.\n\n\"Oh, bro... Wow.\"\n\nMy free hand found its way to the damp patch of fabric between Elle's legs. I was sliding my cock against her thigh and my fingers along her shorts. All the while, my lips sucked gently on her breast.\n\nAll of this was rocking her world and I felt an orgasm approach as she clawed into my back and did her best to restrain a deep womanly moan. She craned her neck forward; holding my head in her hands and kissing it softly. The kisses became more frantic as her body began to shake and buckle and roll!\n\nWe were on the verge of climax -- intense, unadulterated, taboo... We were on the edge and on the brink and at the very end of the line. I could feel it coming as my sister's body straightened and mine grew heavier.\n\nSoon, I was laying all my weight against her body; both of us locking up as it happened. As we came together. Brother and sister, in each other's arms and in the midst of an epic sexual release. So elicit, but so perfect.\n\nWe sighed as one -- a comma to our paragraph.\n\nI slid my hands down Elle's smooth legs, making her giggle as my fingers tickled her soft skin. Having made it all the way down to my little sis's cute little feet, I sat up and watched her smile. Her eyes were in bliss and her hands cradled her head as she exhaled pure relaxation. She was looking at me with a joy on her face and a hum from between her lips, like she was the happiest girl in all the world. Her shorts were soaked and so were mine and our eyes went wide as we realised what we'd just done to each other. For each other.\n\nIt was a slow start -- a bit of almost innocent exploration -- but we both knew it was only the beginning.\n\n\"Wow,\" I beamed. \"That was amazing.\"\n\n\"Amazing? No, it was perfect. It was breathtaking. It was... Incredibly,\" my little sister giggled through laboured exhalations. \"Come and cuddle with me. I want to kiss you some more.\"\n\nI needed no second invitation and soon we were back in each other's arms. Making out and clinging on each other's lips as time ticked on and we grew tired.\n\n\"Goodnight, Olly.\"\n\n\"G'night, Elle...\"\n\n21 \u2022 Cigar Confessions\n\nI woke up next to a softly snoring Elle. The way the blanket was draped over her body was sensuous, as if by design; exposing her leg to the glow of the room's ambient light. Everything was right with the world and I planted a gentle kiss on my little sister's forehead, making her rumble contently in her sleep.\n\nIt would be a bad look if I were discovered in my sister's bed, no matter how much I wanted to be with her.\n\nCautiously sneaking back to my room, I picked up some discarded clothes from the floor and felt the cylinder of a cigar in the inside pocket of the jeans I'd worn the day before. Up until that moment, I'd never had a cigarette after sex...\n\nMoving stealthily through the house, I stepped outside. There was a shadow nearby and grass rustling under its feet. I looked straight at it, and it evaporated... I was seeing things.\n\nThen, from my other side, a new shadow emerged. This one was real and moving towards me.\n\nFeeling my breath sharpen, I wanted to raise my fists but instead my arms braced around my stomach. Out of instinct, I was protecting the place I'd been hurt before and breathed a sigh of relief when I saw it was Alicia, still dressed in her plain suit from the day passed.\n\n\"What are you doing out here?\" I asked, trying to hide my panic.\n\nThe brunette took a step closer to me, producing a lighter for my cigar. \"I'm still a bit anxious after what happened, sir. So, I like to come out and keep an eye on things.\"\n\nMy baby-faced protector's dedication was admirable, but I knew she was hiding the truth. \"You know, I can't sleep either,\" I confessed between puffs. \"Being with Elle makes me feel a little better, but I still toss and turn--\"\n\n\"And worry that you might be attacked while your eyes are closed,\" Alicia completed, taking the cigar from me, so we could share it. \"Yes, sir, you've caught me out. I've got insomnia.\"\n\n\"Alicia... If you need to see someone, I'll pay. If you need a holiday--\"\n\n\"You'll pay?\" my companion winked cheekily. \"Don't worry, sir, I'll be okay.\"\n\nI shrugged. \"I could never really sleep; not after my dad died. You know, I can't even remember him? I think... No, let me not bore you with my sad stories.\"\n\n\"Part of my job is protecting you from yourself, sir. I can play at being your therapist now and then.\"\n\n\"Okay then... Mom never coped. Never recovered. You know, she hasn't answered my calls for a few days?\"\n\nAlicia exhaled smoke that mixed with cool night air. \"I'm not sure she has a phone. Apparently, she threw hers at a maid in the Singapore apartment. Broke it into a thousand pieces.\"\n\n\"Fuck... Really?\"\n\nAlicia nodded, passing the cigar back to me. \"My mother does like throwing things... Used to do it all the time when we were little. Not at us... Most of the time.\"\n\n\"Must be hard,\" my companion soothed. \"A child should feel safe with their parent.\"\n\n\"Yes... Did you... Nevermind,\" I stammered, unable to find the right words. \"I'm afraid things keep getting more and more complicated.\"\n\n\"Complications of your making, sir.\"\n\nI felt my mouth go dry -- it was the cigar. \"How much do you know about what's been going on?\"\n\n\"I'm not really blind, sir. I pretend not to see because I'm paid to be discreet, but I'm not really blind...\"\n\n\"You must think it's fucked up?\"\n\n\"Nope,\" Alicia declared nonchalantly, and we passed the cigar again.\n\nGlad not to be judged, I felt myself relax again. \"By the way, I want to be on a plane to Singapore in the next 24 hours. I can't leave Tecla to deal with our mother alone, and I miss the hell out of her.\"\n\nShaking her head, Alicia denied my request. \"The Board want you to do an interview tomorrow night. We can send your sister and cousin, but the interview is set in stone.\"\n\n\"Am I not the chairman?\"\n\n\"You're also 25 and have no real experience,\" Alicia grinned cheekily. \"The interview is for a magazine here in Cape Town. It'll be quick and we can hop on a plane the next morning.\"\n\n\"Fine,\" I conceded. \"But let's send the girls to Singapore. They need time to think; time away from me.\"\n\n\"Men... Always thinking they know what we want.\"\n\n\"Fair enough.\"\n\nAlicia and I continued sharing the cigar, watching the night and listening to its sounds. The crickets and buzz of electric light were strangely soothing.\n\nActing on a whim, Alicia turned to me. \"What do you want, sir?\"\n\nI thought for a while; not that I needed to think. My head was full of certainties, not doubts. Yet, I couldn't trust myself when so much was at stake. \"I want to protect my family, like I've always protected my family. I want to care for my family, like I've always cared for my family.\"\n\nAlicia nodded with a subtle smile and we spent the next ten minutes finishing the cigar before heading inside. I could decide whether I'd be going back to Elle's room or my own... I knew where I wanted to be, but it seemed better to spend the rest of the night alone.\n\nThe second my foot hit the threshold of the front-door, a clanging from behind drew our attention. In a microsecond, Alicia had drawn her gun and got between me and the noise. Then, a startled yelp pierced the peace of midnight as Tash was confronted by the barrel levelled at her heart.\n\n\"It's me! It's me! Don't shoot!\"\n\n\"Sorry, ma'am,\" Alicia excused coolly, placing her gun back in its holster.\n\n\"What's up, cuz?\" I asked, reeling from shock but trying to put on bravado.\n\n\"I had to make a quick call and there's no reception inside,\" she explained, pointing to an old-style cellphone in her hand. It was a dumb-phone with buttons and a tiny screen; probably without a camera or even an internet connection.\n\n\"What happened to your regular phone?\"\n\n\"Oh, I... I forgot to pack it, so I quickly bought this one at the airport.\"\n\n\"Really?\" I asked, knowing that she was telling a lie.\n\n\"Yes, really,\" my cousin assured. \"Why would I lie about it?\"\n\nWhy would she?\n\n22 \u2022 Winelands\n\nI felt a slim finger hook my collar and pull it down. Soft lips followed, leaving behind the gentlest of kisses.\n\n\"When did you creep in here?\" I asked.\n\n\"Mmm... Not too long ago,\" my little sister groaned as her body hugged me from behind.\n\nWe woke up the same way we'd been waking up for a few days except, this time, I turned around and met my sister face to face. The way we looked at each other hinted that we might dare another deep and delightful kiss. Yet, we held back; our smiles broadening as the anticipation turned to frantic giggling.\n\n\"We are a naughty pair,\" I smirked.\n\nMy sister mocked a frown. \"Speak for yourself, big brother. I'm on Santa's nice list. Always have been, always will be.\"\n\nFinally, we couldn't resist a second longer and our lips touched with our tongues tucking back before rolling forward. We indulged in our kiss for minutes and in all that time my brain didn't muster a single thought. I existed only in the kiss -- only in the moment -- cocooned in the soft white bedding and gentle heat of our little nest.\n\n\"Maybe we should get breakfast in bed,\" I wondered as we withdrew our lips, settling the tips of our noses against each other.\n\n\"Nah. We have to keep our secret and pack for tonight's flight.\"\n\n\"About that...\"\n\nI explained to Elle why I couldn't join her on the flight.\n\nMy sister twisted her lips in all directions as she considered the news. \"Okay. It might be a good thing... I've never been away from Tecla for longer than a day or two and I really miss her.\"\n\n\"I agree. A little break will give you time to think. You can talk to her about us...\"\n\nRecoiling at my words, Elle shifted away from me. \"Tecla and I feel the same about you. She'll be happy for us. She'll want to join.\"\n\n\"Have you ever discussed it with her?\"\n\nThe look on Elle's face told me she wasn't happy about being caught bending the truth. Still, I'd rather have us go forward honestly than stumble into lie after lie. If we were going to be an incestuous pair (or trio), it would have to be with total openness.\n\nWanting to distract me from being her big brother and not just her lover, Elle picked another topic. \"You smell of tobacco.\"\n\n\"It's a new cologne,\" I teased.\n\nMy sister giggled, punching me in the shoulder. \"Bullshitter!\"\n\nI turned onto my back, watching the ceiling fan spin. \"I shared a cigar with Alicia. Seems both of us have trouble sleeping.\"\n\nThere was a long pause before Elle launched a question that would've knocked me off my feet if I hadn't been lying down already. \"Are you in love with her?\"\n\n\"I... No... No, of course not.\"\n\n\"It's okay if you are,\" Elle assured. \"She did save your life, but you know it isn't real, right?\"\n\n\"Why?\" I asked, with more frustration in my voice than I could explain.\n\n\"She's just doing her job. You're her boss and she's your employee... It feels like love, but she treats you the way she does because you pay her a crapload of money.\"\n\n\"I'm not in love with her.\"\n\n\"Sure,\" Elle conceded sarcastically.\n\n\"Really. I see her as just another member of staff.\"\n\n\"I'm sure you do.\"\n\nI grumbled, \"Why are you hassling me about this?\"\n\nElle put her head to my chest so she could hear my heart beat. \"I don't want you getting hurt, Olly. You've always taken care of me and now I want to take care of you. It's not jealousy, I swear, but these women... Tash, Alicia, even Skylar... They're great, but they're dangerous. I know how you get.\"\n\n\"How do I get?\"\n\n\"You become invested. You fall in love. Maybe not romantically, but in every other sense of the word... You look for things to hang onto, to take care of--\"\n\n\"Okay Sigmund Freud, you've made your point.\"\n\nElle sighed contently. \"I think of myself as more of a Carl Jung.\"\n\n\"Speaking of which,\" I diverted, \"what do you want to do with your life? I mean, I know what your dreams have been, but now they can be so much bigger.\"\n\n\"If you'll let me, I'd like to take a gap year.\"\n\n\"Of course, but I do think you should study... It's very important. The lawyers are drawing up a will, and if anything happens to me, you and Tec will need to take over--\"\n\n\"Nothing is going to happen to you. Not unless they kill me first.\"\n\nElle kissed me on the forehead, letting her lips linger before rolling away. She got to her feet and made her way to the door. Before she left, she stretched from her toes to the tips of her fingers, unwinding her body. It was a stunning sight and I felt the desire to take our adventures further.\n\n\"Do you want to grab a shower together?\"\n\n\"We shouldn't go further without Tecla,\" my sister cautioned. \"I'd be betraying her if we took it any further...\"\n\nI shook my head. Elle was a sweetheart at her core, but every so often she could mislead herself. I knew she had never discussed this with Tecla, unless Tecla was the one to bring it up... Still, she was certain they wanted the exact same thing.\n\nMy sister left to take a morning shower and I stumbled to my feet. The days before, I had neglected work. I would have to make up for that and foresaw a busy day.\n\nAlicia had started hunting the man from Liz Wharry's past. She wouldn't find a trace of him -- that much I knew. He was a ghost story; a boogeyman. I may not have known much about espionage, but I did know human nature. We all concoct our own mysteries and this one was far too salacious to be true. Sure, there may have been a morsel of fact to it all, but I didn't think we would get answers.",
        "No, I had a theory: that night was a kidnapping gone wrong. Badly wrong.\n\nIt made sense. It was the only thing that made sense, but was Natasha involved? If she needed money... Perhaps.\n\nAn early morning walk seemed like a good idea and I got dressed for it. The new protection agent, Skylar, was immediately behind me. She kept a fair distance and fell further back as she realised this would be a slow and thoughtful wander. Surveying the lands, I settled my eyes on the furthest point visible. It wasn't in the direction of the vineyards, but rather flowed to barracks I assumed were for the workers. From there, you could take a route up into the hills. Tracing my eyes all the way back, I tried to pick up on the path I'd need to take. Then, I set forth...\n\nIt wasn't long before I regretted not brining earphones for music. I was left alone with my thoughts and those thoughts were... Troubling.\n\nI had made a massive promise to Elle and broken fidelity to Natasha. To be fair, she didn't want my faithfulness, nor did she deserve it. Still, I felt some kind of guilt, even if it wasn't the typical type.\n\nThere was also the danger... The danger of being discovered or killed. The danger of not meaning what I felt or expressing what I feel in the best way. Yes, I had to lead my family, but control was slipping away and I knew it. I also knew I couldn't stop it...\n\nEntropy. The inevitability of chaos.\n\nWhat was intended to be a peaceful walk turned into teeth gnashing as I stopped in my tracks. I cursed myself, \"Fuck! How are you losing control?! With all the money and your mind? You damn idiot!\"\n\nBracing myself with hands on my knees, I took three deep breaths then three more. It dawned on me that there were witnesses to my outburst and I felt embarrassment -- workers and security people who must've thought I was mad. Then, one of the witnesses put their hand on my back.\n\n\"Girl problems?\" the cool Australian voice asked.\n\nLooking up, I saw Skylar's reassurance in the way she curled her pink tinted lips. She offered me a hand and pulled me upright. With a triumphant smile, the blonde produce a bottle and offered me whiskey, which she must've snuck from the house.\n\nWe started walking, trying to keep on an uphill trajectory. Once we reached a good spot, we took our seats on the ground.\n\nThere was nothing but the breeze to keep us company as we shared the bottle of booze. It was a little early for a drink, and Skylar was on duty, but we didn't let that phase us. No, we sat and drank and made no fuss about doing so.\n\n\"It's funny, really. This morning, I shared a cigar with Alicia. Now, I'm having a drink with you.\"\n\nSkylar shook her head as she took a swig from the bottle. \"Not funny at all. We have to protect you from yourself.\"\n\n\"That's what she said.\"\n\nSkylar passed me the bottle. Taking a large gulp, the taste burned my throat, but the buzz was well worth it.\n\nSkylar blew some air out her nose and turned her eyes to her feet. \"I know you're sleeping with your cousin... And your sister,\" she said.\n\n\"Shit. Well... I thought you would, but still.\"\n\n\"I don't judge and I won't tell a soul,\" my bodyguard assured. \"But, sir, that sort of thing can kill you if you're not careful. Falling in love, I mean.\"\n\n\"Luckily, we're going to be apart for a bit. Me and the two of them.\"\n\n\"What's so lucky about that?\" Skylar asked, genuinely puzzled.\n\nI didn't have an answer to the question. I suppose the lucky thing was that we'd all have time to think, or is that just something people talk about in movies? Aren't you supposed to know from the first moment whether something feels right or not? The thing is I did know, and it was that knowledge that scared me.\n\nHow could I be so certain about anything, let alone something this important?\n\nThen, there was Alicia and the slow creeping realisation that Elle was right...\n\nSkylar continued counselling, \"As I see it, you need to focus on the bigger picture. Enjoy the money. Have crazy sex with anything or anybody you want. Buy first editions and fall in love with literature. Eat ridiculous foods and try daring stunts. Hell, I hear spaceships are beginning to edge out yachts for guys like you.\"\n\nI shrugged. \"Everyone says I should do those things, but won't it make me a bad person? At the very least, it makes me a rich asshole.\"\n\nSuddenly, Skylar reached behind her back and pulled her pistol. Weighing it in her hand, she gave me a sly look. \"I've got a bullet for anybody who calls my drinking buddy and boss an asshole.\"\n\n\"You're a maverick!\" I chuckled, feeling uneasy about the gun. At school, in Switzerland, I was taught how to shoot. Still, I never liked the things.\n\nSkylar released the magazine and pulled the slide back several times, making sure it was clear. With a theatrical twirl, she offered me the grip and I took the pistol from her. It felt good in my hand; heavy and solid and well-built. I didn't dare to bring my finger anywhere close to the trigger, but I was curious. Curious about the pressure I'd have to apply and the way it would feel.\n\nThe vague memory of the last time I fired a gun scratched like an itch.\n\nI passed the pistol back to Skylar and she rendered it operable before giving me a wink and putting it away. \"That feel good?\"\n\n\"Yeah.\"\n\n\"Good. That's what wielding power should feel like. You didn't do anything irresponsible with it but you enjoyed the feeling.\"\n\n\"The gun wasn't loaded,\" I reminded. \"The real-deal is heavier and more dangerous. I'm surrounded by danger, Skylar. Danger that's so close I can touch her...\"\n\n\"You have no reason to suspect your cousin of anything,\" my bodyguard insisted, knowing where my mind had drifted. \"We all have secrets. They usually have nothing to do with attempted murder.\"\n\n\"I don't have any secrets.\"\n\nThe smile I got in return for my half-truth served as a silent refutation. Before sleeping with Tash, before the money, before the assassination attempt, and before my night with Elle, I didn't have anything to hide. Now, with each passing day, I accumulated new secrets that had to be hidden from the world.\n\n\"We hide our doubts and fears,\" Skylar continued. \"That means we all keep at least some secrets. To protect those, we tell little lies that become big lies and secrets of their own. We even start lying to ourselves.\"\n\nExhaling, I took in the surroundings. My mind soon started wandering again and circled to the reason I'd taken my walk in the first place.\n\n\"Alicia puzzles me. It's like we know each other, but we don't know anything about each other.\"\n\nSkylar didn't respond, simply crossing her legs and reaching for the bottle. \"Let me and Miss Le Roux worry about the things you pay us to worry about. You just focus on sorting out your life.\"\n\nI still wasn't convinced. \"You know the thing with Alicia--\"\n\nSkylar interrupted, \"Sir, the best way to get over somebody is to get under somebody. Now, I'd offer to have a crack at it, but I'm afraid I don't swing your way. Why don't I hook you up with a proper babe for some casual and uncomplicated sex after your family are gone? How about it? I know how to spot the ones that are best in bed -- trust me!\"\n\nSkylar couldn't stop making me smile. There was so much humour and joviality in her voice, yet I also didn't doubt the sincerity.\n\n\"I don't want to get over anybody,\" I assured, certain of that one thing. \"Well, not over my sister or Tash, at least.\"\n\nAs I thought back to Elle's remarks about Alicia, my companion gave me a knowing look. \"Three women on your mind... Sounds fucking stressful.\"\n\nGetting to our feet, Skylar playfully bumped into me and I bumped back. If Alicia felt like an older sister, Skylar felt like the brother I never had. A brother with the looks of a Parisian model crossed with a swimsuit centrefold. Perhaps that's the kind of lesbian-best friend most guys dream of having.\n\nRight then, that could have been exactly what I needed or exactly what I didn't. It all depended on whether I could stop myself from doing what Elle predicted I would do... Falling in love -- again and again.\n\n23 \u2022 Kaapstad\n\nMy sister blew me a kiss from the swimming pool upon my return and my cousin looked happy, albeit tired. The rest of the day saw my two relatives tolerating each other; mainly around the pool at the side of the house. Alicia had procured bikinis for the girls and the summer heat made the prospect of splashing around irresistible.\n\nI would have joined them, but work called for me. Heading into the farm's office, I settled behind a laptop and started reading reports from subsidiaries.\n\nAbout an hour later, I heard the sound of footsteps and dripping. It sounded like Natasha, and I greeted her. \"Hey, what's up? How are you feeling?\"\n\nTurning to the door, I saw there was no one there. I still heard the dripping, but as I rubbed the side of my head, the sound faded.\n\nA little later, Natasha walked into the room. She was drenched from spending a day in the water and dripped from her head to her toes as she leaned against the wall. This time, it was real.\n\n\"Busy?\" my cousin asked, clearly with something on her mind.\n\nI shook my head. \"Nah, never too busy for you.\"\n\n\"Uh huh?\" she smiled cheekily. \"How can I convince you to stop being in love with me?\"\n\n\"Who says I'm in love?\" I challenged, with an edge to my voice.\n\nNatasha was expecting me to play along. Her mood was back on the upswing, so she expected mine to do the same. We'd had a bad tiff the day before and she'd been confusing me. Obviously, I wasn't going to be cheerful; not least when I was desperate to know what was going on in her head. Desperate to know if I could trust her.\n\n\"Can't we just have sex and that's the end of it?\" she asked.\n\n\"Yes, yes... I know... You get off on the idea of being a rich man's mistress. You also apparently feel nothing for the fact that we used to be best friends.\"\n\n\"Oh, c'mon Olly... Cheer up a little.,\" Tash encouraged. \"I know I've been a bit crazy, but I'm still the same old me.\"\n\n\"Are you?\"\n\nNatasha turned away from me and I realised she was strategising. The wheels in her head were spinning -- she was calculating. For a split-second, I even saw her transform into another person.\n\nSometimes you look at someone and they have a 'private' moment in plain sight. An instant where they're thinking about nothing and no one except themselves and what they want.\n\n\"The problem with the way we used to be is that it was awfully close to acting like boyfriend and girlfriend,\" my cousin theorised. \"We can be lovers or we can be family, but we can't try to be both. I need emotional distance if we're going to have sex...\"\n\nMy eyes narrowed. \"What do you even mean?\"\n\n\"Ugh, you know what I mean!\"\n\nEmploying tactics of my own, I turned the conversation sharply to try and throw her off balance. \"What's up with that phone you had last night?\"\n\n\"Why change the subject?\"\n\n\"Tell me about the phone...\"\n\n\"No.\"\n\nNatasha squirmed, looking at her feet and inhaling deeply. She was cornered and she wanted to find a way out of having to answer. \"I told you that I bought it at the airport.\"\n\n\"Our people were with you all the time. When did you go buy the phone?\"\n\n\"On the arrivals side. They were waiting for me outside because it's an airport and that's how airports work! Jeez, Olly... I told you! I just forgot the old one by accident.\"\n\n\"Weird,\" I remarked, \"I could've sworn I saw it when you arrived. On your bed.\"\n\nChewing her cheek, Natasha was getting angry. She looked at me with a tinge of rage in her eyes, but then guilt and shame followed. I was certain she wouldn't tell me the truth, but she felt compelled to make up a better lie. \"Oh... I realised I didn't forget it when I unpacked.\"\n\nThere was something off about every word my cousin spoke. At face value, her inconsistency could have made logical sense for someone conflicted, but little nuances kept changing that made me think she was certain but secretive. She was being dishonest -- about everything -- which meant she came across as wildly unpredictable.\n\nThe unpredictable is as alluring as it's frightening. Men like me are drawn to contradictions, secrets, chaos... Most men are, in fact, but most men don't have my kind of enemies.\n\nThe little conversation settled it. My people would be keeping a very close eye on Natasha going forward.\n\nI couldn't trust her.\n\n\u2022 \u2022 \u2022\n\nElle was next into my office; bikini-clad and dripping water from her long black hair. Whereas my cousin kept a distance, my sister plonked herself on my lap and settled into my arms, triggering a content sigh from the both of us.\n\n\"Life is perfect,\" she said.\n\nAll the stress from my previous meeting with our cousin faded and I felt nothing but good.\n\n\"You know, sis. We never have to do more than we did last night,\" I offered. \"Not every romance needs sex, and I'd still be committed.\"\n\nElle didn't like this, grinding hard against my lap. \"Stop treating me like a girl and start treating me like a woman,\" she commanded, keeping up the grind to convince me of her point.\n\n\"You're right,\" I admitted. \"You're all grown up.\"\n\nMy little sister groaned. \"It's going to be so hard waiting... I can feel you against me right now...\"\n\n\"And I can feel you grinding away.\"\n\n\"You like it?\" Elle asked shyly. \"I'm no good at being sexy, but I want you to have everything. Tec will help... She's the--\"\n\n\"Don't be down on yourself,\" I interrupted, hugging Elle closer and kissing her shoulder. I knew the door to the study was still open... We were risking everything, but I almost didn't care. I couldn't lose track of being her guardian though. Maybe I could be her lover, but that didn't mean I stopped being her big brother.\n\n\"C'mon,\" I instructed, bouncing Elle on my knee. \"Go pack your bags for Singapore.\"\n\n\"Are you excited about your interview?\" my sister asked.\n\n\"I am, actually. It's going to be pretty easy, I think, and I'll get a chance to say some things that have been on my mind.\"\n\nMy sister gave an exaggerated sigh of disapproval to show she'd rather stay, but got to her feet eventually. \"What is on your mind?\"\n\nI considered my words before speaking, \"I want to convince the public that the company won't change too much. We'll still put female talent first; that's what makes us unique and successful. I also want to show people I'm not arrogant -- I know my limits -- and I'm open to learning.\"\n\nElle looked proud of me as I explained. She gave me a kiss on the forehead; one last gentle reminder that she loved me with all her heart. \"Don't let what I said about Alicia bug you, and don't worry about hurting Natasha's feelings... She's a slut, and sluts don't care.\"\n\n\"Jesus, Elle! I wish you wouldn't talk like that!\"\n\nMy little sister flicked her hair back but didn't hesitate to apologise when it came down to it. \"I'm just bitter because she got you first,\" Elle confessed. \"Then again, I also see the way you look at her... And the way Alicia looks at her... And the way the new blonde chick looks at her... You don't trust her either.\"\n\n\"Don't worry yourself with that, sis.\"\n\n\"I'll always worry if someone out there wants to hurt my big brother. She broke your heart and I hate her for it.\"\n\n\"Don't ever hate anyone,\" I counselled, believing it to be good advice.\n\nElle started walking to the door but turned to me before she left. \"You hate the people who stabbed you. Don't you?\"\n\n\"It's hard, but I try to not hate them,\" I lied.\n\n\"Well, I hate them. I hope they all die miserable deaths.\"\n\nWith that, Elle left and later that evening two helicopters landed on different parts of the farm. The first was to take Tash and her to the airport while the second would drop me off in the city for my interview. They were mammoth beasts, unlike anything I'd ever seen before. Honestly, I didn't know they made 'em that big.\n\n\"Why can't the interview happen here?\" I asked Alicia as we boarded our chopper.\n\nThe aircraft was spacious inside and my head of security took her seat opposite me. I couldn't help but look at her differently... Couldn't help but question if I really had fallen for her. The answer must've been obvious, but I didn't know my heart, and didn't know myself. She was gorgeous, talented, sweet with me, and there wasn't the complexity of a blood relation. Still, one thing weighed against me wanting her: she worked for me and she was too good for me.\n\nOkay, two things. I could've been wrong about the second, but I was pretty sure. All the women in my circle were remarkable -- incredible -- but Alicia was... Different. Yes, I believed I could earn and had earned the love of others, but her demands were rooted in whatever happened between her and her father. She wouldn't easily trust another man, and she made sure not to need that.\n\nSensing my mood had gone bitter since the night before, Alicia left me to my own devices as I looked down at the world. If you've never been to Cape Town, I'd highly recommend it. The city blends into nature -- sparse and green -- with views of the famous Table Mountain possible from most places. Yet, next to some of the wealthiest people in the world lived some of the poorest. Like most cities, or maybe more, this was a place with two identities that offered separate experiences depending on your luck in the life's lottery.\n\nWatching the landscapes below, I couldn't help but smile. I was literally flying high; in love and astonishingly loved by others. Complicated or not, the world was looking good from where I was sitting; especially if I could set aside distractions.\n\nI couldn't keep my silence about what I observed or how I felt. \"What was it like growing up here?\" I asked, expecting an answer brimming with romance and nostalgia.\n\nAlicia shrugged, dismissing my question, \"I can't really remember.\"\n\n\"You left when you were very young?\"\n\n\"Not that young. I just can't remember.\"\n\nI nodded, understanding that some memories are best buried in deep graves, among all the tragedies of our lives. There were lots of things I couldn't remember either; recent things.\n\nWe landed at a waterside helipad, meeting with Skylar and the rest of the convoy. With the blonde taking Alicia's usual seat in the front, my security boss was free to sit in the back with me. This meant she was close -- so close I could feel it even if I looked away or shuffled to one side. It was a closeness I found uncomfortable as my mind tried to puzzle together my true feelings.\n\nI was in a world of my own, and my body language said as much. The interview didn't scare me at all. It was for a publication we owned a 'business' magazine that's less about financial news and more about men's fashion.\n\nAs we got closer to the magazine's headquarters, Alicia started briefing me. \"I'm not a press person--\"\n\n\"I should hire a press person,\" I interrupted. \"Definitely need to hire an assistant and someone to look after my family... I've been very unfair to you, Alicia. You're doing ten jobs at once.\"\n\nMy companion seemed perplexed by the drift of my mind from one thing to the next. She knew me well, somehow, and I doubted that many people would've picked up on my mood. Maybe my sisters -- maybe Tash... Definitely not my mother.\n\n\"Are you sure you want to do this interview? We can always cancel,\" Alicia offered. \"The Board will simply have to understand.\"\n\n\"Huh?\" I replied dully, lost in my own head. \"No... It's fine.\"\n\nThere was a silence in the car as both Skylar and Alicia calculated the night's worst-case scenario. If they felt I would embarrass myself, they would pull the plug. But, it seemed they had faith in me, and Alicia resumed briefing as I tried to be a little better at paying attention.\n\nLike everyone else in the world, the interviewers didn't know about the assassination attempt. No, they'd be asking how it felt to be suddenly rich, and what my plans were for the future. The answer to the first question was that it felt like a punch in the gut. As for the second, I couldn't exactly tell them I planned on a future full of incest.",
        "As we parked in front of the publisher, I caught myself thinking out loud again. \"I don't know how to be authentic... Dammit! I had a plan before all this happened... A good plan...\"\n\nPutting her hand on mine, Alicia took a deep breath; guiding me to do the same. Her touch was intimate, but not romantic, and sincere within the boundaries of our professional relationship. Taking a second to settle down, I felt a little burst of confidence and stepped out of the car with a sense of calm.\n\nA girl named Annika greeted my entourage and explained that she was the photographer. I chuckled, feeling the beard I'd left roughly untamed for several days. \"I've never had my picture taken by a professional before. Hopefully you can find a good angle.\"\n\nThe pale brunette laughed shyly at my remark. In a way, she reminded me of Alicia, down to the way she walked. She was shorter than my two tall protectors, but seemed even skinnier than the slender pair. Still, she had extravagant curves in the best of places, and a luscious personality hidden behind layers of timidity. The thing about her was that she felt like a real person, from the real world. Yet, any illusion of a return to reality was quickly shattered as we got into the elevator and five security personnel crowded in with us.\n\nHere and there, I caught a glance of a gun or taser as the box crept from one floor to the next with an awful screech.\n\nComing to our stop, we crossed a narrow hallway to reach the conference room where the interview would take place. That's where we met the interviewer -- a print journalist with a face made for television, and a personality that was so damn cheery it hurt. Her name was Lebo, with a B that sounds more like P and an O that drags. She was pretty with a cropped afro and pinecone brown skin, yet she shared a rosy undertone in her complexion with Annika and Alicia.\n\nFirst, I was asked to stand by a window, so they could take a couple of pictures of me. The background was actually quite beautiful with still enough light outside to capture the mountains surrounding Cape Town.\n\nAfter the photos, we took our seats and I noticed Annika placed the camera on a tripod. The red light on the device remained constant, and Skylar quickly noticed this. \"We weren't aware you'd be recording.\"\n\nLebo smiled in a way meant to be disarming, but my pitbulls wouldn't fall for it. \"There was an agreement that a video version of the interview will be posted online.\"\n\nAlicia cut in like a cobra; fast and aggressive. \"An agreement with someone who doesn't represent Mr Orwell, clearly.\"\n\n\"Well, we can't proceed without the tape--\"\n\n\"I will remind you who owns this publication,\" Alicia interrupted.\n\nLooking around the room, I noticed that Annika was blushing a deep red -- clearly no fan of confrontation. Between Lebo, Skylar and Alicia, there was none of that. No, the three of them were going to fight their corners to the bitter end.\n\nI decided to make an executive decision. \"You're more than welcome to record... If the final cut gets approved by my office.\"\n\nThe journalist agreed, \"Very well.\"\n\n\"Let's get started.\"\n\n\u2022 \u2022 \u2022\n\nBefore I knew it, the interview was over.\n\nLebo was easy to talk to and she focused on the business side of things. Instead of treating me like someone out of his depth -- which I was -- she allowed me to sound clever and grounded.\n\nBoth journalists accompanied us down the elevator, which is when Alicia chimed in with a suggestion. \"Shall we reserve a table in the city for you, sir? I'm sure our companions would love to get some off the record information.\"\n\n\"Sounds to me like you're in the mood for a fancy dinner,\" I chuckled.\n\nAlicia's smile told me I was right and I said she should go ahead and pick a place. She directed the two ladies with us to ride with me while she took a place somewhere else in our huge convoy. At the sight of the five SUVs, Lebo exclaimed, \"Wow! You travel around like the president. Honestly, I've interviewed a fair number of billionaires and I've never seen this kind of security.\"\n\nPacking into the back of the car, I tried to divert the journo's attention. \"So, have you two always wanted to work in the media?\"\n\nAnnika was first to answer, \"Media? Yes. I never wanted to work for a business magazine though.\"\n\n\"Yeah? What's the dream job?\"\n\nThe mild-mannered brunette's face lit up as I invited her to talk about her passion. \"War reporting; telling stories that matter even if people want to avoid reading them.\"\n\nThe revelation was a surprise. Annika didn't look the type.\n\nDriving along, we eventually pulled up at our destination. The place Alicia picked was right on the waterfront with white table cloths, smooth music, and dim light. It was only then that Lebo told me about her true passion. \"I wanted to go into publishing -- not magazines, but books.\"\n\n\"That's incredible!\" I declared. \"My little sister, Elle, wanted to do the same thing, but now she wants a gap year. Her twin, Tecla, doesn't have a clue what she wants to do, yet. They both love novels and writing... The best thing about my inheritance is that I can pay for them to do all those things.\"\n\nI kept talking about my sisters for probably ten minutes. Lebo asked me what my dream was and I shrugged in reply. I never had a dream job, unless any job that paid well enough to maintain a family of four qualified. Not a family I would start, but the family I was born into -- my siblings and mother.\n\nI was beginning to realise that my incessant talk about family was becoming insufferable. Both Lebo and Annika looked at me with long faces as I rambled on, but I honestly didn't mind. I started playing a little game against myself -- testing how obnoxious I could be before the two women decided that I wasn't worth the trouble.\n\nFlirtation was becoming more obvious, but I wasn't interested in the least. It was harmless fun and a distraction from the seriousness of life.\n\nLebo cut in as I continued to rattle off facts about the women in my life. \"Where are you staying while you're in Cape Town?\"\n\n\"On a wine farm. We arrived by helicopter, but I believe we'll be driving back. It's not too far.\"\n\n\"I've never been on a wine farm at night,\" she said. \"What about you, Annika?\"\n\nAs if she were reading our lips, Alicia approached the table. \"Sorry to interrupt, sir. We'd like to get going soon. Perhaps the ladies would like to join you for a nightcap back at the house?\"\n\nClearly, my efforts at turning the women off hadn't worked. Both immediately accepted Alicia's offer, and I could barely restrain a loud groan. As much fun as I was having, I wanted to sleep until waking up in Singapore; reunited with my sisters.\n\nWe got in the car and the drive back was tight and tense. Getting on a highway, we stayed the course for fifteen minutes before the cars suddenly swerved onto an off-ramp.\n\n\"What's up?\" I asked Skylar, weary of risk.\n\n\"Reports of an accident on that route. We're going to bypass it, sir. Nothing to worry about.\"\n\nThe wound in my side tingled as my paranoid mind got racing. We soon made an aggressive turn to get back on the highway, a little down the line. Now, the convoy was picking up speed. This thrilled the two journalists squeezed in the back with me.\n\nEventually, we were doing about 140 kilometres an hour as I peeked at the speedometer and the German SUVs shattered the peace of the night.\n\n24 \u2022 Phantasm\n\nI was laying in bed, tossing and turning, when I heard something push against the door. Getting to my feet, I unlocked it before checking the hallway. It was empty. Not a soul in sight.\n\nLocking the door again, I sighed with relief. The two journalists were still in the house, but they seemed to have gotten my message. I would never cheat on my sister. Still, I didn't entirely trust myself not to give in to temptation. After all, money changes people, and near-death experiences tend to have the same effect.\n\nSince we got to the house, Lebo and Annika made it clear what they wanted.\n\n\"We like to have fun,\" Lebo said, sitting as close as possible to her friend.\n\nThere was a sapphic tension between the two. I wondered if they made a habit of teaming up on the people they interview.\n\nIt seemed likely...\n\nTheir first disappointment came when they saw the house. It was grand but aged, and not as impressive as they expected from one of the world's richest men. Their second disappointment came when I turned them down and turned in for the night.\n\nNow, I was paranoid. Had they gotten the message?\n\nPerhaps a little insanely, I took the bedside table -- a heavy wooden construction -- and shifted it against the door.\n\nNow, no one could get in. I would be faithful to my sister, and in a strange way, I would remain faithful to Natasha.\n\nAs I returned to the bed, I noticed something that must've been underneath the table. It was a photograph of a couple and their daughter. A picture of Alicia and her parents. The sheen of dust over the gloss was thick, and I brushed it off to get a better look. All three people looked happy, but looks could be deceiving. Carefully scrutinising their faces, I noticed nuance that other people might not. Yes, I began to see the truth behind the smiles and the uneasiness in all their eyes. The only subject who seemed truly happy was the father; his grin wicked. Evil.\n\nSetting the photo down where I found it, I remembered the glass door to the outside. I went and checked it, making sure it was locked, before getting back in bed. Closing my eyes and exhaling until my heaviness turned light and a smile formed on my face.\n\nSoon, I would be on a plane and then it was a quick flight to reunite with my sisters. The most important people in my life.\n\nThere was a rustling, but I ignored it. The room was locked up tight, and no one could get inside. Then, I felt it... The bed creaked and a feminine hand ran along my side. It touched the place where I'd been stabbed and pressed hard, making me feel the agonising burning!\n\nI threw myself off the bed and away from the woman. The phantom. The psychosis.\n\nShe was on me again, my legs pinned and boxers vanished. I exhaled, knowing none of this was real as her supernaturally tight pussy clamped down on my cock. I slid deeper and deeper inside her; the tightness making my chest tighten and eyes bulge as I dared to grab hold of her hips and pull her down even further.\n\nWhen she was down to the hilt and her pussy-lips were against my pelvis, I thrust my weight up. She moved with me, staying in place as my cock started blasting cum into her.\n\nThe orgasm continued and continued; my cock pulsing and cum flowing from it. Then, a second woman got on top of me, with her breasts against my chest and tongue pressing against my lips. I didn't want to kiss her -- I wanted to resist -- but her teeth grazed my cheek and when she returned to my mouth I took her. The feeling of our tongues against each other as I kept climaxing was otherworldly; my permanent orgasm taking me straight to heaven.\n\nA third woman entered the equation. She kissed my neck and shoulder; seeking every part of exposed skin that wasn't already smothered by one of her ghostly friends. When her lips landed on my scar, it stung. It was a good sting; a sting that made my cock shudder again.\n\nI was buzzing. I knew this wasn't real.\n\nThrowing myself onto my stomach, I was on top of them now. Their legs wrapped around me and they touched me all over as a fourth set of lips kissed her way down my spine. Her tongue landed between my cheeks and I groaned loud as I felt something new -- something I'd never felt before.\n\nI thrust my hips forward and suddenly I was inside a tight pussy again. Now, I was fucking her... Making her moan and beg for more in a language of diphthongs I didn't understand. I hadn't stopped cumming, but now I wanted to fill her up; now I had intention.\n\nMy lips found something to kiss as the feelings continued. As the impossibility became too hard to resist. Then, they found something to bite; something to sink into as I claimed the moment.\n\nI groaned again as the pussy seemed to clamp down and the tongue from behind seemed to grow thicker. My whole body shuddered and failed and crumbled as I exhaled hoarsely. The world felt like it was shaking and the earthquake's origin was between my ribs. I pulled my neck up, trying to breathe but failing.\n\nThrowing myself onto my back, the impact finally snapped me out of it and I slowly woke from the strange dream. Sweat was dripping down my forehead and I could feel heat emanating from my scar.\n\nI thrust my hips up again, but this time there was nothing.\n\nIn post-orgasmic bliss, I started regaining my senses as the women faded. Their touch disappearing slowly; clinging at me until the very last whisper of contact was extinguished. Opening my eyes, I realised that the room was empty. That I was indeed naked and on the floor, and that I did really cum. It had been a powerful dream (or hallucination).\n\nGetting to my feet, I switched on the light, noticing that my scar was bleeding slightly. It was still healing, so it was 'normal.'\n\nI went into the bathroom and cleaned my wound, not needing to do much else. When I went back into the room, I noticed the picture I found of Alicia and her family wasn't there anymore. I checked under the bed, not finding it. I was sure I'd seen it, held it, put it back where I found it...\n\nWas I totally losing my mind?\n\nTrying to regain my breath, I shook myself. I had to confirm, and I did: the doors were still locked, the room hadn't been breached.\n\nI was feeling like crap, dazed and drunk and hungover, all at the same time. Heading back into the bathroom, I let some cold water run over me; condemning me to spending the rest of the night awake, but washing my thoughts clean.\n\nTaking a chance, I got dressed in sweatpants and a t-shirt; throwing on some shoes and heading outside.\n\nAlicia wasn't standing where she'd been the night before, but I heard music from somewhere nearby. Circling the house, I found a glass sliding door, slightly open to let fresh air inside. The sound of two women laughing drew me closer and through its threshold.\n\n\"Sir?\"\n\n\"I... Sorry... I...\"\n\n\"Are you okay?\" Alicia asked.\n\n\"Yeah. Yeah. I'm okay.\"\n\nSkylar was sitting on the bed with Alicia. They were still dressed in the same clothes as the previous day, listening to music and playing cards. The song... The song meant something. I'd never heard it before, but I wondered if it too was a hallucination.\n\n\"Do you want to join us?\" Alicia asked.\n\n\"Sounds like fun,\" I accepted. \"By the way, what's this song called?\"\n\n\"It's These Days,\" Skylar answered, thrilled that I asked. \"By an Aussie band called Powderfinger.\"\n\n\"Huh... The lyrics... Am I still dreaming?\"\n\nSkylar giggled at my befuddlement and patted an empty spot on the bed. \"C'mon sir, we'll deal you a new hand.\"\n\nA new hand? A new beginning... With a little help from my friends."
    ],
    "authorname": "ScrappyPaperDoodler",
    "tags": [
        "incest",
        "romance",
        "drama",
        "cousins",
        "brother",
        "sister",
        "18-year-old",
        "mystery"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/hypergeniture-bk-01-pt-02"
}